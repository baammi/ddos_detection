source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%tms = type { i32, i32, i32, i32 }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.1 = constant i32 -352321502
@global_var_1d00c.5 = global i32 0
@global_var_1d01c.6 = global i32* @global_var_1d00c.5
@global_var_1d17c.12 = global i32 0
@global_var_d438.18 = constant i32 -382906384
@global_var_1d19c.21 = global i32 0
@global_var_1d1a0.22 = local_unnamed_addr global i32 0
@global_var_1d198.27 = global i32 0
@global_var_bb14.31 = constant i32 -382906384
@global_var_1d258.33 = global i32 0
@global_var_1d1bc.44 = global i32 0
@global_var_14668.46 = constant i32 47
@global_var_1d25c.49 = local_unnamed_addr global i32 0
@global_var_1d1c0.51 = global i32 0
@global_var_1d264.55 = local_unnamed_addr global i32 0
@global_var_1d263.56 = local_unnamed_addr global i32 0
@global_var_1d262.57 = local_unnamed_addr global i32 0
@global_var_1d020.59 = global i32 -1
@global_var_1d1c4.64 = global i32 0
@global_var_1d261.68 = local_unnamed_addr global i32 0
@global_var_d18c.70 = constant i32 -382910448
@global_var_1d028.72 = global i32 71328
@global_var_146cc.74 = constant i32 10
@global_var_1d024.77 = global i32 -1
@global_var_11c68.80 = constant i32 -382910448
@global_var_116a0.81 = constant i32 -382910224
@global_var_141e0.84 = constant i32 16777216
@global_var_1d1cc.86 = global i32 0
@global_var_1d1d8.88 = global i32 0
@global_var_1d1d0.90 = global i32 0
@global_var_1d1d4.92 = global i32 0
@global_var_141e8.98 = constant [23 x i8] c"j5elo2hkam13cdbinpg40f\00"
@global_var_12688.103 = constant i32 -481296384
@global_var_e16c.104 = constant i32 -442695668
@global_var_1d210.106 = global i32 0
@global_var_1d1dc.108 = global i32 0
@global_var_1d208.110 = global i32 0
@global_var_1d278.115 = global i32 0
@global_var_1d270.119 = global i32 0
@global_var_1d274.121 = global i32 0
@global_var_1d1e3.124 = local_unnamed_addr global i32 0
@global_var_1d1e2.125 = local_unnamed_addr global i32 0
@global_var_1d1f4.127 = global i32 0
@global_var_1d1e5.129 = local_unnamed_addr global i32 0
@global_var_1d1e8.130 = local_unnamed_addr global i32 0
@global_var_1d1f5.131 = local_unnamed_addr global i32 0
@global_var_1d1f6.132 = local_unnamed_addr global i32 0
@global_var_1d1f7.133 = local_unnamed_addr global i32 0
@global_var_1d1e9.134 = local_unnamed_addr global i32 0
@global_var_1d1e4.135 = local_unnamed_addr global i32 0
@global_var_1d203.137 = local_unnamed_addr global i32 0
@global_var_1d202.138 = local_unnamed_addr global i32 0
@global_var_14254.140 = constant i32 369954064
@global_var_1428c.142 = constant i32 0
@global_var_14200.144 = constant i32 984579
@global_var_14204.146 = constant i32 185533955
@global_var_1420c.148 = constant [4 x i8] c"@KL\00"
@global_var_14210.150 = constant i32 252117766
@global_var_14218.152 = constant i32 1185623
@global_var_1421c.154 = constant i32 1464926490
@global_var_14224.156 = constant i32 437783316
@global_var_1422c.158 = constant i32 50595590
@global_var_14234.160 = constant [7 x i8] c"ZZZZZZ\00"
@global_var_1423c.162 = constant i32 101322522
@global_var_14244.164 = constant [7 x i8] c"SPQVWT\00"
@global_var_1424c.166 = constant [6 x i8] c"WVQPS\00"
@global_var_14934.168 = constant i32 234886930
@global_var_1425c.170 = constant [8 x i8] c"QWRRMPV\00"
@global_var_14264.172 = constant [8 x i8] c"\0ASU[QWR\00"
@global_var_147ac.174 = constant [4 x i8] c"SPQ\00"
@global_var_1488c.176 = constant [5 x i8] c"SPQV\00"
@global_var_1426c.178 = constant [6 x i8] c"SPQVW\00"
@global_var_14274.180 = constant i32 268898583
@global_var_1427c.182 = constant i32 286327570
@global_var_14284.184 = constant i32 286327570
@global_var_146a8.186 = constant i32 82
@global_var_14294.188 = constant i32 81
@global_var_1429c.190 = constant [3 x i8] c"QQ\00"
@global_var_142a4.192 = constant [4 x i8] c"QQQ\00"
@global_var_142ac.194 = constant [5 x i8] c"QQQQ\00"
@global_var_14290.196 = constant [6 x i8] c"QQQQQ\00"
@global_var_14298.198 = constant [7 x i8] c"QQQQQQ\00"
@global_var_142a0.200 = constant [8 x i8] c"QQQQQQQ\00"
@global_var_142a8.202 = constant [9 x i8] c"QQQQQQQQ\00"
@global_var_142b4.204 = constant [8 x i8] c"PPPPPPP\00"
@global_var_142bc.206 = constant [9 x i8] c"PPPPPPPP\00"
@global_var_142c8.208 = constant i32 51843843
@global_var_1465c.210 = constant i32 83
@global_var_142d0.212 = constant [7 x i8] c"SSSSSS\00"
@global_var_142d8.214 = constant [8 x i8] c"SSSSSSS\00"
@global_var_142e0.216 = constant [9 x i8] c"SSSSSSSS\00"
@global_var_142ec.218 = constant [6 x i8] c"VVVVV\00"
@global_var_142f4.220 = constant [6 x i8] c"RRRRR\00"
@global_var_142fc.222 = constant [8 x i8] c"UUUPRRR\00"
@global_var_14304.224 = constant i32 370219793
@global_var_1430c.226 = constant i32 185533955
@global_var_142e4.228 = constant [5 x i8] c"SSSS\00"
@global_var_14318.230 = constant i32 50401041
@global_var_14324.232 = constant i32 1393823241
@global_var_1432c.234 = constant [9 x i8] c"SPQVSPQV\00"
@global_var_14338.236 = constant i32 118232598
@global_var_14340.238 = constant i32 336594705
@global_var_14348.240 = constant i32 118626065
@global_var_14354.242 = constant i32 218696707
@global_var_1435c.244 = constant i32 285677317
@global_var_14364.246 = constant i32 285677349
@global_var_1436c.248 = constant i32 185533955
@global_var_14374.250 = constant i32 1464927503
@global_var_1437c.252 = constant i32 235931407
@global_var_14384.254 = constant i32 1343230982
@global_var_14390.256 = constant i32 185533955
@global_var_143a0.258 = constant i32 201525761
@global_var_1493c.260 = constant i32 369885207
@global_var_143ac.262 = constant i32 369891082
@global_var_143b8.264 = constant i32 1393823241
@global_var_143c0.266 = constant i32 1460082232
@global_var_14944.268 = constant i32 402658312
@global_var_143c8.270 = constant i32 437915160
@global_var_143d0.272 = constant [7 x i8] c"%/ZSZP\00"
@global_var_143d8.274 = constant i32 1397903955
@global_var_143e4.276 = constant i32 1393951489
@global_var_143ec.278 = constant i32 117838859
@global_var_143f4.280 = constant i32 185471254
@global_var_143fc.282 = constant i32 202052867
@global_var_14408.284 = constant i32 202838296
@global_var_14414.286 = constant [9 x i8] c"PRRZRZPT\00"
@global_var_14420.288 = constant i32 1460799313
@global_var_14428.290 = constant i32 185533955
@global_var_14430.292 = constant i32 1460735745
@global_var_14438.294 = constant i32 219415302
@global_var_14440.296 = constant i32 269748996
@global_var_1444c.298 = constant i32 235146251
@global_var_14458.300 = constant i32 51775246
@global_var_14460.302 = constant i32 252708626
@global_var_14468.304 = constant i32 118561557
@global_var_14470.306 = constant [10 x i8] c"5C\0CRD\0D-UL\00"
@global_var_1447c.308 = constant i32 1426281475
@global_var_14488.310 = constant [6 x i8] c"SSSSS\00"
@global_var_14490.312 = constant i32 789059413
@global_var_144a0.314 = constant i32 185533955
@global_var_144ac.316 = constant [5 x i8] c"VQPS\00"
@global_var_144b4.318 = constant i32 252513560
@global_var_144c0.320 = constant i32 185533955
@global_var_1494c.322 = constant i32 369888000
@global_var_144c8.324 = constant i32 1397904464
@global_var_144d0.326 = constant i32 202119953
@global_var_144d8.328 = constant i32 185533955
@global_var_144e0.330 = constant [5 x i8] c"RRRR\00"
@global_var_142c0.332 = constant [5 x i8] c"PPPP\00"
@global_var_144e8.334 = constant [6 x i8] c"PPPPP\00"
@global_var_144f0.336 = constant [7 x i8] c"QTPUP[\00"
@global_var_144f8.338 = constant i32 185533987
@global_var_14954.340 = constant i32 1444643
@global_var_14504.342 = constant [9 x i8] c" %!4&1.P\00"
@global_var_14510.344 = constant i32 555091756
@global_var_1451c.346 = constant [4 x i8] c"-!1\00"
@global_var_14520.348 = constant i32 369954866
@global_var_1452c.350 = constant i32 235996675
@global_var_14538.352 = constant i32 185995267
@global_var_14540.354 = constant i32 201527555
@global_var_14548.356 = constant i32 397571
@global_var_1454c.358 = constant i32 51254787
@global_var_14964.360 = constant i32 269484800
@global_var_14970.362 = constant i32 234881793
@global_var_14558.364 = constant i32 100871457
@global_var_14564.366 = constant i32 17763585
@global_var_14570.368 = constant i32 118230273
@global_var_1457c.370 = constant i32 251857670
@global_var_14584.372 = constant i32 17502727
@global_var_14590.374 = constant i32 118888967
@global_var_1459c.376 = constant i32 51383045
@global_var_145a4.378 = constant i32 1393955845
@global_var_145b0.380 = constant i32 302318346
@global_var_145bc.382 = constant i32 391515402
@global_var_145c8.384 = constant i32 21762570
@global_var_145d0.386 = constant i32 369888521
@global_var_145dc.388 = constant i32 5903
@global_var_145e0.390 = constant i32 51775244
@global_var_145ec.392 = constant i32 268898829
@global_var_145f8.394 = constant i32 1185042
@global_var_145fc.396 = constant i32 184943376
@global_var_14604.398 = constant i32 118230800
@global_var_1460c.400 = constant i32 385943313
@global_var_14614.402 = constant i32 387319569
@global_var_1461c.404 = constant i32 185533987
@global_var_14624.406 = constant i32 286327602
@global_var_14630.408 = constant i32 118626065
@global_var_1463c.410 = constant i32 588323601
@global_var_14648.412 = constant i32 386992916
@global_var_14650.414 = constant i32 370214678
@global_var_14658.416 = constant i32 370214678
@global_var_14660.418 = constant i32 1448022839
@global_var_1466c.420 = constant i32 1381388309
@global_var_14674.422 = constant i32 1090913050
@global_var_1467c.424 = constant i32 235996675
@global_var_14688.426 = constant i32 201789462
@global_var_14694.428 = constant i32 51052801
@global_var_146a0.430 = constant i32 369893889
@global_var_146ac.432 = constant i32 386795286
@global_var_146b8.434 = constant i32 118885137
@global_var_146c4.436 = constant i32 71178
@global_var_146c8.438 = constant i32 17249844
@global_var_146d0.440 = constant i32 185533987
@global_var_146e0.442 = constant [7 x i8] c"OGKLQO\00"
@global_var_146e8.444 = constant i32 268637521
@global_var_146f0.446 = constant i32 236077905
@global_var_146f8.448 = constant i32 789913868
@global_var_1497c.450 = constant i32 1121041
@global_var_14704.452 = constant i32 65795
@global_var_14708.454 = constant i32 117704195
@global_var_14710.456 = constant i32 286723599
@global_var_14718.458 = constant i32 167843343
@global_var_14720.460 = constant i32 234952207
@global_var_14728.462 = constant i32 100860684
@global_var_14730.464 = constant i32 386663183
@global_var_14738.466 = constant i32 454760986
@global_var_14740.468 = constant i32 1117964
@global_var_14744.470 = constant i32 303107852
@global_var_1474c.472 = constant [8 x i8] c"SPQVWTU\00"
@global_var_14754.474 = constant i32 185468685
@global_var_14760.476 = constant i32 51452689
@global_var_14768.478 = constant i32 17501187
@global_var_14770.480 = constant i32 202245910
@global_var_14778.482 = constant i32 1121041
@global_var_1477c.484 = constant i32 51452689
@global_var_14788.486 = constant [11 x i8] c"SPQVWTUZ[R\00"
@global_var_14794.488 = constant i32 336462593
@global_var_1479c.490 = constant i32 1448169555
@global_var_147a8.492 = constant i32 369954064
@global_var_147b0.494 = constant i32 369560067
@global_var_147bc.497 = constant [7 x i8] c"SPQSPQ\00"
@global_var_147c4.499 = constant [8 x i8] c"0--6WRR\00"
@global_var_147cc.501 = constant i32 1527191064
@global_var_14984.503 = constant i32 1380995840
@global_var_147d4.505 = constant [9 x i8] c"2#115-0&\00"
@global_var_14990.507 = constant i32 17237776
@global_var_147e0.510 = constant [6 x i8] c"#&/+,\00"
@global_var_147e8.513 = constant i32 253101836
@global_var_147f0.517 = constant i32 285677317
@global_var_147f8.519 = constant i32 51119919
@global_var_14800.521 = constant i32 118426890
@global_var_14808.523 = constant [9 x i8] c"SPQVWTUZ\00"
@global_var_14814.525 = constant i32 268898615
@global_var_1481c.527 = constant i32 51255081
@global_var_14824.529 = constant i32 118164993
@global_var_1482c.531 = constant i32 118626065
@global_var_14834.533 = constant [8 x i8] c"WUUUQTV\00"
@global_var_1483c.535 = constant i32 69393
@global_var_14840.540 = constant i32 185339151
@global_var_14848.542 = constant i32 51118863
@global_var_14850.544 = constant [8 x i8] c"OCLCEGP\00"
@global_var_14858.546 = constant i32 100863766
@global_var_14860.548 = constant i32 51451649
@global_var_1486c.550 = constant i32 168102666
@global_var_149a0.553 = constant i32 855589
@global_var_14878.555 = constant i32 118359830
@global_var_14880.559 = constant i32 286657539
@global_var_14888.562 = constant i32 100866840
@global_var_14894.564 = constant i32 50401803
@global_var_148a4.566 = constant i32 51794454
@global_var_148b4.568 = constant i32 370149140
@global_var_148c8.570 = constant i32 118626065
@global_var_148d4.572 = constant i32 185470228
@global_var_148e0.574 = constant i32 118626065
@global_var_148ec.576 = constant i32 390467883
@global_var_148fc.578 = constant i32 118359830
@global_var_1490c.580 = constant i32 139798284
@global_var_1d1ec.584 = local_unnamed_addr global i32 0
@global_var_1d1ea.586 = local_unnamed_addr global i32 0
@global_var_1d1eb.587 = local_unnamed_addr global i32 0
@global_var_1d204.590 = local_unnamed_addr global i32 0
@global_var_1d205.591 = local_unnamed_addr global i32 0
@global_var_14918.598 = constant [5 x i8] c"ogin\00"
@global_var_14920.600 = constant [6 x i8] c"enter\00"
@global_var_14928.603 = constant [3 x i8] c"\0D\0A\00"
@global_var_149b5.605 = constant i32 1830812671
@global_var_149ac.607 = constant i32 2095871
@global_var_1492c.609 = constant [8 x i8] c"assword\00"
@global_var_1d280.611 = global i32 0
@global_var_1d030.614 = global i32 -1095770451
@global_var_149b8.619 = constant [3 x i8] c"m?\00"
@global_var_1d290.620 = local_unnamed_addr global i32 0
@global_var_1d294.621 = local_unnamed_addr global i32 0
@global_var_1d295.622 = local_unnamed_addr global i32 0
@global_var_149bc.624 = constant i32 118885387
@global_var_149d0.626 = constant i32 34777
@global_var_149d4.628 = constant i32 370215694
@global_var_1d288.629 = local_unnamed_addr global i32 0
@global_var_1d28c.630 = local_unnamed_addr global i32 0
@global_var_1d28d.631 = local_unnamed_addr global i32 0
@global_var_149e4.633 = constant i32 235342353
@global_var_1d300.634 = local_unnamed_addr global i32 0
@global_var_1d304.635 = local_unnamed_addr global i32 0
@global_var_1d305.636 = local_unnamed_addr global i32 0
@global_var_14b00.638 = constant i32 199687
@global_var_1d308.639 = local_unnamed_addr global i32 0
@global_var_1d30c.640 = local_unnamed_addr global i32 0
@global_var_1d30d.641 = local_unnamed_addr global i32 0
@global_var_149ec.643 = constant i32 370219793
@global_var_1d310.644 = global i32 0
@global_var_1d314.645 = global i32 0
@global_var_149f4.647 = constant i32 6425105
@global_var_149f8.649 = constant i32 724313962
@global_var_14a10.651 = constant i32 269878280
@global_var_14a2c.653 = constant [10 x i8] c"+&*77 &1E\00"
@global_var_14a38.655 = constant [17 x i8] c"j',+j'06<'*=e56E\00"
@global_var_14a4c.657 = constant [23 x i8] c"j',+j'06<'*=e.,))eh|jE\00"
@global_var_14a64.659 = constant i32 219157069
@global_var_1d298.660 = local_unnamed_addr global i32 0
@global_var_1d29c.661 = local_unnamed_addr global i32 0
@global_var_1d29d.662 = local_unnamed_addr global i32 0
@global_var_14a6c.664 = constant i32 119146317
@global_var_1d2a4.665 = local_unnamed_addr global i32 0
@global_var_1d2a0.666 = local_unnamed_addr global i32 0
@global_var_1d2a5.667 = local_unnamed_addr global i32 0
@global_var_14a74.669 = constant i32 1644561485
@global_var_1d2b4.670 = local_unnamed_addr global i32 0
@global_var_1d2b0.671 = local_unnamed_addr global i32 0
@global_var_1d2b5.672 = local_unnamed_addr global i32 0
@global_var_14a7c.674 = constant i32 302190413
@global_var_1d2b8.675 = local_unnamed_addr global i32 0
@global_var_1d2bc.676 = local_unnamed_addr global i32 0
@global_var_1d2bd.677 = local_unnamed_addr global i32 0
@global_var_14a84.679 = constant i32 219157069
@global_var_1d2c0.680 = local_unnamed_addr global i32 0
@global_var_1d2c4.681 = local_unnamed_addr global i32 0
@global_var_1d2c5.682 = local_unnamed_addr global i32 0
@global_var_14a94.684 = constant i32 705696774
@global_var_1d2cc.685 = local_unnamed_addr global i32 0
@global_var_1d2c8.686 = local_unnamed_addr global i32 0
@global_var_1d2cd.687 = local_unnamed_addr global i32 0
@global_var_14aa0.689 = constant i32 386740534
@global_var_1d2d4.690 = local_unnamed_addr global i32 0
@global_var_1d2d0.691 = local_unnamed_addr global i32 0
@global_var_1d2d5.692 = local_unnamed_addr global i32 0
@global_var_14ab8.694 = constant i32 18220877
@global_var_1d2dc.695 = local_unnamed_addr global i32 0
@global_var_1d2d8.696 = local_unnamed_addr global i32 0
@global_var_1d2dd.697 = local_unnamed_addr global i32 0
@global_var_14acc.699 = constant i32 118424332
@global_var_1d2e4.700 = local_unnamed_addr global i32 0
@global_var_1d2e0.701 = local_unnamed_addr global i32 0
@global_var_1d2e5.702 = local_unnamed_addr global i32 0
@global_var_14adc.704 = constant i32 336004685
@global_var_1d2e8.705 = local_unnamed_addr global i32 0
@global_var_1d2ec.706 = local_unnamed_addr global i32 0
@global_var_1d2ed.707 = local_unnamed_addr global i32 0
@global_var_14aec.709 = constant i32 336004685
@global_var_1d2f5.710 = local_unnamed_addr global i32 0
@global_var_1d2f0.711 = local_unnamed_addr global i32 0
@global_var_1d2f4.712 = local_unnamed_addr global i32 0
@global_var_12ec4.715 = constant i32 -476053504
@global_var_11f8c.719 = constant i32 -443219956
@global_var_120f8.724 = constant i32 -376111092
@global_var_1d24c.727 = global i32 0
@global_var_1226c.729 = constant i32 -456978431
@global_var_1d214.731 = global i32 0
@global_var_1d130.734 = global i32 256
@global_var_1d034.735 = global i32* @global_var_1d130.734
@global_var_1d23c.738 = global i32 0
@global_var_1d2f8.740 = global i32 0
@global_var_13678.741 = constant i32 -382910416
@global_var_121f0.742 = constant i32 -509595648
@global_var_12708.749 = constant i32 -442564520
@global_var_1d13c.755 = global i32 0
@global_var_136d0.757 = constant i32 -481230848
@global_var_1d22c.759 = global i32 0
@global_var_132c8.761 = constant i32 -509587456
@global_var_1d154.764 = global i32 0
@global_var_1d230.768 = local_unnamed_addr global i32 0
@global_var_12c7c.770 = constant i32 -352321419
@global_var_1d000.774 = global i32 -1
@global_var_1d240.777 = global i32 0
@global_var_1d244.779 = local_unnamed_addr global i32 0
@global_var_12eb0.780 = constant i32 -390234096
@global_var_14b08.782 = constant [10 x i8] c"/dev/null\00"
@global_var_1d248.784 = global i32 0
@global_var_1d234.789 = local_unnamed_addr global i32 0
@global_var_1d238.791 = global i32 0
@global_var_121d0.793 = constant i32 -369097130
@global_var_1d16c = external local_unnamed_addr global i32
@global_var_14c14.799 = constant i32 33554944
@global_var_12190.804 = constant i32 -442564608
@global_var_13178.806 = constant i32 -335544664
@global_var_13294.809 = constant i32 -275775369
@global_var_13a60.810 = constant i32 -382910352
@global_var_1d254.812 = global i32 0
@global_var_1d174.814 = global i32* @global_var_14c14.799
@global_var_1d004.819 = global i32 0
@global_var_1d178.3 = external global i8*
@global_var_1d194.25 = external global i8*
@global_var_1d195.29 = global i8 0
@global_var_1d260.53 = external global i8*
@1 = internal constant [2 x i8] c"\01\00"
@global_var_1d02c.61 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_1d1c8.79 = external global i8*
@global_var_1d20c.112 = external global i8*
@global_var_1d20d.113 = local_unnamed_addr global i8 0
@global_var_1d1e0.123 = external global i8*
@global_var_1d200.128 = local_unnamed_addr global i8 0
@global_var_1d201.136 = local_unnamed_addr global i8 0
@global_var_1d1f8.589 = local_unnamed_addr global i8 0
@global_var_1d1f0.585 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @function_8130()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @function_14190(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_1d178.3 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_1d178.3 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb8, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb8:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1d01c.6 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_1d01c.6 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb9, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_1d01c.6 to i32), %bb8 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb8 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_1d01c.6 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %.loopexit, %bb8
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_1d178.3 to i32), %bb8 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_1d01c.6, { 1, 0 }
  uselistorder i8** @global_var_1d178.3, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @function_8124(i32 %arg1) local_unnamed_addr {
dec_label_pc_8124:
  %v0_8124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8124, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8124
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8124, %bb
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8130() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* inttoptr (i32 118800 to i32*), align 16
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 118800

bb2:                                              ; preds = %.thread
  ret i32 118800

; uselistorder directives
  uselistorder i32 118800, { 1, 0, 2 }
}

define i32 @function_8188() local_unnamed_addr {
dec_label_pc_8188:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @function_12f64(i32 ptrtoint (i32* @global_var_d438.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 82380, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @function_12ad8()
  ret i32 %v0_81bc
}

define i32 @function_81cc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_81cc:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_81cc = urem i32 %arg1, 256
  %v2_81d0 = icmp eq i32 %v1_81cc, 0
  %v1_81d8 = urem i32 %arg3, 256
  br i1 %v2_81d0, label %dec_label_pc_821c, label %dec_label_pc_81e4

dec_label_pc_81e4:                                ; preds = %dec_label_pc_81cc
  %v0_81e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e4 = add i32 %v0_81e4, 4
  %v2_81e4 = inttoptr i32 %v1_81e4 to i8*
  %v3_81e4 = load i8, i8* %v2_81e4, align 1
  %v4_81e4 = zext i8 %v3_81e4 to i32
  %v9_81e8 = icmp eq i32 %v4_81e4, %v1_81d8
  br i1 %v9_81e8, label %dec_label_pc_8224, label %dec_label_pc_820c.preheader

dec_label_pc_820c.preheader:                      ; preds = %dec_label_pc_81e4
  br label %dec_label_pc_820c

dec_label_pc_81fc:                                ; preds = %dec_label_pc_820c
  %v1_81fc = add i32 %v0_8204.in, 12
  %v2_81fc = inttoptr i32 %v1_81fc to i8*
  %v3_81fc = load i8, i8* %v2_81fc, align 1
  %v4_81fc = zext i8 %v3_81fc to i32
  %v9_8200 = icmp eq i32 %v4_81fc, %v1_81d8
  br i1 %v9_8200, label %dec_label_pc_8224, label %dec_label_pc_820c

dec_label_pc_820c:                                ; preds = %dec_label_pc_820c.preheader, %dec_label_pc_81fc
  %v0_8204.in = phi i32 [ %v0_81e4, %dec_label_pc_820c.preheader ], [ %v0_8204, %dec_label_pc_81fc ]
  %v0_820c = phi i32 [ 0, %dec_label_pc_820c.preheader ], [ %v1_820c, %dec_label_pc_81fc ]
  %v0_8204 = add i32 %v0_8204.in, 8
  %v1_820c = add i32 %v0_820c, 1
  %v9_8210 = icmp eq i32 %v1_820c, %v1_81cc
  store i32 %v0_8204, i32* %r1.global-to-local, align 4
  br i1 %v9_8210, label %dec_label_pc_821c, label %dec_label_pc_81fc

dec_label_pc_821c:                                ; preds = %dec_label_pc_820c, %dec_label_pc_81cc
  ret i32 %arg4

dec_label_pc_8224:                                ; preds = %dec_label_pc_81fc, %dec_label_pc_81e4
  %v0_8224 = phi i32 [ %v0_81e4, %dec_label_pc_81e4 ], [ %v0_8204, %dec_label_pc_81fc ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  ret i32 %v2_8224

; uselistorder directives
  uselistorder i32 %v1_820c, { 1, 0 }
  uselistorder i32 %v0_8204, { 1, 0, 2 }
  uselistorder i32 %v0_8204.in, { 1, 0 }
  uselistorder i32 %v0_81e4, { 1, 0, 2 }
  uselistorder i32 %v1_81d8, { 1, 0 }
  uselistorder i32 %v1_81cc, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_820c, { 1, 0 }
}

define i32 @function_8230(i32 %arg1) local_unnamed_addr {
dec_label_pc_8230:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_8230 = load i32, i32* @r4, align 4
  store i32 %v3_8230, i32* %stack_var_-12, align 4
  %v6_8230 = load i32, i32* @r5, align 4
  %v9_8230 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_1d19c.21 to i32), i32* @r4, align 4
  %v2_8238 = load i32, i32* @global_var_1d19c.21, align 4
  store i32 %v2_8238, i32* %r0.global-to-local, align 4
  %v2_823c = icmp eq i32 %v2_8238, 0
  br i1 %v2_823c, label %dec_label_pc_8244, label %dec_label_pc_82c4

dec_label_pc_8244:                                ; preds = %dec_label_pc_8230
  %v3_8244 = load i32, i32* @global_var_1d1a0.22, align 4
  store i32 %v3_8244, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_824c = icmp eq i32 %v3_8244, 0
  store i32 0, i32* @global_var_1d19c.21, align 4
  br i1 %v2_824c, label %dec_label_pc_8258, label %dec_label_pc_82e0

dec_label_pc_8258:                                ; preds = %dec_label_pc_82c4.dec_label_pc_8258_crit_edge, %dec_label_pc_8244
  %v0_8260 = phi i32 [ %v0_8260.pre, %dec_label_pc_82c4.dec_label_pc_8258_crit_edge ], [ 0, %dec_label_pc_8244 ]
  %v1_8260 = phi i32 [ %v0_8258.pre, %dec_label_pc_82c4.dec_label_pc_8258_crit_edge ], [ ptrtoint (i32* @global_var_1d19c.21 to i32), %dec_label_pc_8244 ]
  %v1_8258 = add i32 %v1_8260, 8
  %v2_8258 = inttoptr i32 %v1_8258 to i32*
  %v3_8258 = load i32, i32* %v2_8258, align 4
  store i32 %v3_8258, i32* %r0.global-to-local, align 4
  %v2_825c = icmp eq i32 %v3_8258, 0
  %v2_8260 = add i32 %v1_8260, 4
  %v3_8260 = inttoptr i32 %v2_8260 to i32*
  store i32 %v0_8260, i32* %v3_8260, align 4
  br i1 %v2_825c, label %dec_label_pc_8268, label %dec_label_pc_82f8

dec_label_pc_8268:                                ; preds = %dec_label_pc_8258, %dec_label_pc_82e0
  %v0_8268 = load i32, i32* @r4, align 4
  %v1_8268 = add i32 %v0_8268, 12
  %v2_8268 = inttoptr i32 %v1_8268 to i32*
  %v3_8268 = load i32, i32* %v2_8268, align 4
  store i32 %v3_8268, i32* %r0.global-to-local, align 4
  %v2_826c = icmp eq i32 %v3_8268, 0
  %v0_8270 = load i32, i32* %r5.global-to-local, align 4
  %v2_8270 = add i32 %v0_8268, 8
  %v3_8270 = inttoptr i32 %v2_8270 to i32*
  store i32 %v0_8270, i32* %v3_8270, align 4
  br i1 %v2_826c, label %dec_label_pc_8278, label %dec_label_pc_8310

dec_label_pc_8278:                                ; preds = %dec_label_pc_8268, %dec_label_pc_82f8
  %v0_8278 = load i32, i32* @r4, align 4
  %v1_8278 = add i32 %v0_8278, 16
  %v2_8278 = inttoptr i32 %v1_8278 to i32*
  %v3_8278 = load i32, i32* %v2_8278, align 4
  store i32 %v3_8278, i32* %r0.global-to-local, align 4
  %v2_827c = icmp eq i32 %v3_8278, 0
  %v0_8280 = load i32, i32* %r5.global-to-local, align 4
  %v2_8280 = add i32 %v0_8278, 12
  %v3_8280 = inttoptr i32 %v2_8280 to i32*
  store i32 %v0_8280, i32* %v3_8280, align 4
  br i1 %v2_827c, label %dec_label_pc_8288, label %dec_label_pc_8328

dec_label_pc_8288:                                ; preds = %dec_label_pc_8278, %dec_label_pc_8310
  %v0_8288 = load i32, i32* @r4, align 4
  %v1_8288 = add i32 %v0_8288, 20
  %v2_8288 = inttoptr i32 %v1_8288 to i32*
  %v3_8288 = load i32, i32* %v2_8288, align 4
  store i32 %v3_8288, i32* %r0.global-to-local, align 4
  %v2_828c = icmp eq i32 %v3_8288, 0
  %v0_8290 = load i32, i32* %r5.global-to-local, align 4
  %v2_8290 = add i32 %v0_8288, 16
  %v3_8290 = inttoptr i32 %v2_8290 to i32*
  store i32 %v0_8290, i32* %v3_8290, align 4
  br i1 %v2_828c, label %dec_label_pc_8298, label %dec_label_pc_8340

dec_label_pc_8298:                                ; preds = %dec_label_pc_8288, %dec_label_pc_8328
  %v0_8298 = load i32, i32* @r4, align 4
  %v1_8298 = add i32 %v0_8298, 24
  %v2_8298 = inttoptr i32 %v1_8298 to i32*
  %v3_8298 = load i32, i32* %v2_8298, align 4
  store i32 %v3_8298, i32* %r0.global-to-local, align 4
  %v2_829c = icmp eq i32 %v3_8298, 0
  %v0_82a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_82a0 = add i32 %v0_8298, 20
  %v3_82a0 = inttoptr i32 %v2_82a0 to i32*
  store i32 %v0_82a0, i32* %v3_82a0, align 4
  br i1 %v2_829c, label %dec_label_pc_82a8, label %dec_label_pc_8358

dec_label_pc_82a8:                                ; preds = %dec_label_pc_8298, %dec_label_pc_8340
  %v0_82a8 = load i32, i32* @r4, align 4
  %v1_82a8 = add i32 %v0_82a8, 28
  %v2_82a8 = inttoptr i32 %v1_82a8 to i32*
  %v3_82a8 = load i32, i32* %v2_82a8, align 4
  store i32 %v3_82a8, i32* %r0.global-to-local, align 4
  %v2_82ac = icmp eq i32 %v3_82a8, 0
  %v0_82b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_82b0 = add i32 %v0_82a8, 24
  %v3_82b0 = inttoptr i32 %v2_82b0 to i32*
  store i32 %v0_82b0, i32* %v3_82b0, align 4
  br i1 %v2_82ac, label %dec_label_pc_82b8, label %dec_label_pc_8370

dec_label_pc_82b8:                                ; preds = %dec_label_pc_82a8, %dec_label_pc_8358, %dec_label_pc_8370
  %v0_82b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_82b8 = load i32, i32* @r4, align 4
  %v2_82b8 = add i32 %v1_82b8, 28
  %v3_82b8 = inttoptr i32 %v2_82b8 to i32*
  store i32 %v0_82b8, i32* %v3_82b8, align 4
  %v2_82bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_82bc, i32* @r4, align 4
  store i32 %v6_8230, i32* @r5, align 4
  store i32 %v9_8230, i32* @lr, align 4
  %v0_82c0 = call i32 @function_e4d8()
  store i32 %v0_82c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_82c4

dec_label_pc_82c4:                                ; preds = %dec_label_pc_8230, %dec_label_pc_82b8
  %v0_82c8 = phi i32 [ %v2_8238, %dec_label_pc_8230 ], [ %v0_82c0, %dec_label_pc_82b8 ]
  %v2_82c8 = call i32 @function_11d68(i32 %v0_82c8, i32 9)
  store i32 %v2_82c8, i32* %r0.global-to-local, align 4
  %v0_82cc = load i32, i32* @r4, align 4
  %v1_82cc = add i32 %v0_82cc, 4
  %v2_82cc = inttoptr i32 %v1_82cc to i32*
  %v3_82cc = load i32, i32* %v2_82cc, align 4
  store i32 %v3_82cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_82d4 = icmp eq i32 %v3_82cc, 0
  %v2_82d8 = inttoptr i32 %v0_82cc to i32*
  store i32 0, i32* %v2_82d8, align 4
  br i1 %v2_82d4, label %dec_label_pc_82c4.dec_label_pc_8258_crit_edge, label %dec_label_pc_82c4.dec_label_pc_82e0_crit_edge

dec_label_pc_82c4.dec_label_pc_82e0_crit_edge:    ; preds = %dec_label_pc_82c4
  %v0_82e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_82e0

dec_label_pc_82c4.dec_label_pc_8258_crit_edge:    ; preds = %dec_label_pc_82c4
  %v0_8258.pre = load i32, i32* @r4, align 4
  %v0_8260.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_8258

dec_label_pc_82e0:                                ; preds = %dec_label_pc_82c4.dec_label_pc_82e0_crit_edge, %dec_label_pc_8244
  %v0_82e4 = phi i32 [ %v0_82e4.pre, %dec_label_pc_82c4.dec_label_pc_82e0_crit_edge ], [ %v3_8244, %dec_label_pc_8244 ]
  %v2_82e4 = call i32 @function_11d68(i32 %v0_82e4, i32 9)
  store i32 %v2_82e4, i32* %r0.global-to-local, align 4
  %v0_82e8 = load i32, i32* @r4, align 4
  %v1_82e8 = add i32 %v0_82e8, 8
  %v2_82e8 = inttoptr i32 %v1_82e8 to i32*
  %v3_82e8 = load i32, i32* %v2_82e8, align 4
  store i32 %v3_82e8, i32* %r0.global-to-local, align 4
  %v2_82ec = icmp eq i32 %v3_82e8, 0
  %v0_82f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_82f0 = add i32 %v0_82e8, 4
  %v3_82f0 = inttoptr i32 %v2_82f0 to i32*
  store i32 %v0_82f0, i32* %v3_82f0, align 4
  br i1 %v2_82ec, label %dec_label_pc_8268, label %dec_label_pc_82f8

dec_label_pc_82f8:                                ; preds = %dec_label_pc_8258, %dec_label_pc_82e0
  %v0_82fc = load i32, i32* %r0.global-to-local, align 4
  %v2_82fc = call i32 @function_11d68(i32 %v0_82fc, i32 9)
  store i32 %v2_82fc, i32* %r0.global-to-local, align 4
  %v0_8300 = load i32, i32* @r4, align 4
  %v1_8300 = add i32 %v0_8300, 12
  %v2_8300 = inttoptr i32 %v1_8300 to i32*
  %v3_8300 = load i32, i32* %v2_8300, align 4
  store i32 %v3_8300, i32* %r0.global-to-local, align 4
  %v2_8304 = icmp eq i32 %v3_8300, 0
  %v0_8308 = load i32, i32* %r5.global-to-local, align 4
  %v2_8308 = add i32 %v0_8300, 8
  %v3_8308 = inttoptr i32 %v2_8308 to i32*
  store i32 %v0_8308, i32* %v3_8308, align 4
  br i1 %v2_8304, label %dec_label_pc_8278, label %dec_label_pc_8310

dec_label_pc_8310:                                ; preds = %dec_label_pc_8268, %dec_label_pc_82f8
  %v0_8314 = load i32, i32* %r0.global-to-local, align 4
  %v2_8314 = call i32 @function_11d68(i32 %v0_8314, i32 9)
  store i32 %v2_8314, i32* %r0.global-to-local, align 4
  %v0_8318 = load i32, i32* @r4, align 4
  %v1_8318 = add i32 %v0_8318, 16
  %v2_8318 = inttoptr i32 %v1_8318 to i32*
  %v3_8318 = load i32, i32* %v2_8318, align 4
  store i32 %v3_8318, i32* %r0.global-to-local, align 4
  %v2_831c = icmp eq i32 %v3_8318, 0
  %v0_8320 = load i32, i32* %r5.global-to-local, align 4
  %v2_8320 = add i32 %v0_8318, 12
  %v3_8320 = inttoptr i32 %v2_8320 to i32*
  store i32 %v0_8320, i32* %v3_8320, align 4
  br i1 %v2_831c, label %dec_label_pc_8288, label %dec_label_pc_8328

dec_label_pc_8328:                                ; preds = %dec_label_pc_8278, %dec_label_pc_8310
  %v0_832c = load i32, i32* %r0.global-to-local, align 4
  %v2_832c = call i32 @function_11d68(i32 %v0_832c, i32 9)
  store i32 %v2_832c, i32* %r0.global-to-local, align 4
  %v0_8330 = load i32, i32* @r4, align 4
  %v1_8330 = add i32 %v0_8330, 20
  %v2_8330 = inttoptr i32 %v1_8330 to i32*
  %v3_8330 = load i32, i32* %v2_8330, align 4
  store i32 %v3_8330, i32* %r0.global-to-local, align 4
  %v2_8334 = icmp eq i32 %v3_8330, 0
  %v0_8338 = load i32, i32* %r5.global-to-local, align 4
  %v2_8338 = add i32 %v0_8330, 16
  %v3_8338 = inttoptr i32 %v2_8338 to i32*
  store i32 %v0_8338, i32* %v3_8338, align 4
  br i1 %v2_8334, label %dec_label_pc_8298, label %dec_label_pc_8340

dec_label_pc_8340:                                ; preds = %dec_label_pc_8288, %dec_label_pc_8328
  %v0_8344 = load i32, i32* %r0.global-to-local, align 4
  %v2_8344 = call i32 @function_11d68(i32 %v0_8344, i32 9)
  store i32 %v2_8344, i32* %r0.global-to-local, align 4
  %v0_8348 = load i32, i32* @r4, align 4
  %v1_8348 = add i32 %v0_8348, 24
  %v2_8348 = inttoptr i32 %v1_8348 to i32*
  %v3_8348 = load i32, i32* %v2_8348, align 4
  store i32 %v3_8348, i32* %r0.global-to-local, align 4
  %v2_834c = icmp eq i32 %v3_8348, 0
  %v0_8350 = load i32, i32* %r5.global-to-local, align 4
  %v2_8350 = add i32 %v0_8348, 20
  %v3_8350 = inttoptr i32 %v2_8350 to i32*
  store i32 %v0_8350, i32* %v3_8350, align 4
  br i1 %v2_834c, label %dec_label_pc_82a8, label %dec_label_pc_8358

dec_label_pc_8358:                                ; preds = %dec_label_pc_8298, %dec_label_pc_8340
  %v0_835c = load i32, i32* %r0.global-to-local, align 4
  %v2_835c = call i32 @function_11d68(i32 %v0_835c, i32 9)
  store i32 %v2_835c, i32* %r0.global-to-local, align 4
  %v0_8360 = load i32, i32* @r4, align 4
  %v1_8360 = add i32 %v0_8360, 28
  %v2_8360 = inttoptr i32 %v1_8360 to i32*
  %v3_8360 = load i32, i32* %v2_8360, align 4
  store i32 %v3_8360, i32* %r0.global-to-local, align 4
  %v2_8364 = icmp eq i32 %v3_8360, 0
  %v0_8368 = load i32, i32* %r5.global-to-local, align 4
  %v2_8368 = add i32 %v0_8360, 24
  %v3_8368 = inttoptr i32 %v2_8368 to i32*
  store i32 %v0_8368, i32* %v3_8368, align 4
  br i1 %v2_8364, label %dec_label_pc_82b8, label %dec_label_pc_8370

dec_label_pc_8370:                                ; preds = %dec_label_pc_82a8, %dec_label_pc_8358
  %v0_8374 = load i32, i32* %r0.global-to-local, align 4
  %v2_8374 = call i32 @function_11d68(i32 %v0_8374, i32 9)
  store i32 %v2_8374, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_82b8

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1, 10, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 16, 1, 4, 18, 3, 6, 20, 5, 8, 22, 7, 10, 24, 9, 12, 26, 11, 15, 13, 14, 30, 0, 17, 19, 21, 23, 25, 27, 28, 29 }
  uselistorder label %dec_label_pc_8370, { 1, 0 }
  uselistorder label %dec_label_pc_8358, { 1, 0 }
  uselistorder label %dec_label_pc_8340, { 1, 0 }
  uselistorder label %dec_label_pc_8328, { 1, 0 }
  uselistorder label %dec_label_pc_8310, { 1, 0 }
  uselistorder label %dec_label_pc_82f8, { 1, 0 }
  uselistorder label %dec_label_pc_82c4, { 1, 0 }
  uselistorder label %dec_label_pc_82b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_82a8, { 1, 0 }
  uselistorder label %dec_label_pc_8298, { 1, 0 }
  uselistorder label %dec_label_pc_8288, { 1, 0 }
  uselistorder label %dec_label_pc_8278, { 1, 0 }
  uselistorder label %dec_label_pc_8268, { 1, 0 }
}

define i32 @function_8380(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8380:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_8380 = urem i32 %arg1, 256
  %v2_8384 = icmp eq i32 %v1_8380, 0
  %v3_8388 = load i32, i32* @r4, align 4
  %v6_8388 = load i32, i32* @lr, align 4
  br i1 %v2_8384, label %dec_label_pc_83d0, label %dec_label_pc_8394

dec_label_pc_8394:                                ; preds = %dec_label_pc_8380
  %v0_8394 = load i32, i32* %r1.global-to-local, align 4
  %v1_8394 = add i32 %v0_8394, 4
  %v2_8394 = inttoptr i32 %v1_8394 to i8*
  %v3_8394 = load i8, i8* %v2_8394, align 1
  %v4_8394 = zext i8 %v3_8394 to i32
  %v1_8398 = urem i32 %arg3, 256
  %v9_839c = icmp eq i32 %v4_8394, %v1_8398
  br i1 %v9_839c, label %dec_label_pc_83d8, label %dec_label_pc_83c0.preheader

dec_label_pc_83c0.preheader:                      ; preds = %dec_label_pc_8394
  br label %dec_label_pc_83c0

dec_label_pc_83b0:                                ; preds = %dec_label_pc_83c0
  %v1_83b0 = add i32 %v0_83b8.in, 12
  %v2_83b0 = inttoptr i32 %v1_83b0 to i8*
  %v3_83b0 = load i8, i8* %v2_83b0, align 1
  %v4_83b0 = zext i8 %v3_83b0 to i32
  %v9_83b4 = icmp eq i32 %v1_8398, %v4_83b0
  br i1 %v9_83b4, label %dec_label_pc_83d8, label %dec_label_pc_83c0

dec_label_pc_83c0:                                ; preds = %dec_label_pc_83c0.preheader, %dec_label_pc_83b0
  %v0_83b8.in = phi i32 [ %v0_8394, %dec_label_pc_83c0.preheader ], [ %v0_83b8, %dec_label_pc_83b0 ]
  %v0_83c0 = phi i32 [ 0, %dec_label_pc_83c0.preheader ], [ %v1_83c0, %dec_label_pc_83b0 ]
  %v0_83b8 = add i32 %v0_83b8.in, 8
  %v1_83c0 = add i32 %v0_83c0, 1
  store i32 %v1_83c0, i32* @lr, align 4
  %v9_83c4 = icmp eq i32 %v1_8380, %v1_83c0
  store i32 %v0_83b8, i32* %r1.global-to-local, align 4
  br i1 %v9_83c4, label %dec_label_pc_83d0, label %dec_label_pc_83b0

dec_label_pc_83d0:                                ; preds = %dec_label_pc_83c0, %dec_label_pc_83d8, %dec_label_pc_8380
  store i32 %v3_8388, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_83d8:                                ; preds = %dec_label_pc_83b0, %dec_label_pc_8394
  %v0_83d8 = phi i32 [ %v0_8394, %dec_label_pc_8394 ], [ %v0_83b8, %dec_label_pc_83b0 ]
  %v1_83d8 = inttoptr i32 %v0_83d8 to i32*
  %v2_83d8 = load i32, i32* %v1_83d8, align 4
  store i32 %v2_83d8, i32* @r0, align 4
  %v2_83dc = icmp eq i32 %v2_83d8, 0
  br i1 %v2_83dc, label %dec_label_pc_83d0, label %dec_label_pc_83e4

dec_label_pc_83e4:                                ; preds = %dec_label_pc_83d8
  store i32 %v3_8388, i32* @r4, align 4
  store i32 %v6_8388, i32* @lr, align 4
  %v1_83e8 = call i32 @function_12290(i32 %v2_83d8)
  ret i32 %v1_83e8

; uselistorder directives
  uselistorder i32 %v1_83c0, { 1, 2, 0 }
  uselistorder i32 %v0_83b8, { 1, 0, 2 }
  uselistorder i32 %v0_83b8.in, { 1, 0 }
  uselistorder i32 %v1_8398, { 1, 0 }
  uselistorder i32 %v0_8394, { 1, 0, 2 }
  uselistorder i32 %v3_8388, { 1, 0 }
  uselistorder i32 %v1_8380, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_83d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_83c0, { 1, 0 }
}

define i32 @function_83ec(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_83ec:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_83ec = urem i32 %arg1, 256
  %v2_83f0 = icmp eq i32 %v1_83ec, 0
  %v3_83f4 = load i32, i32* @r4, align 4
  %v6_83f4 = load i32, i32* @lr, align 4
  br i1 %v2_83f0, label %dec_label_pc_843c, label %dec_label_pc_8400

dec_label_pc_8400:                                ; preds = %dec_label_pc_83ec
  %v0_8400 = load i32, i32* %r1.global-to-local, align 4
  %v1_8400 = add i32 %v0_8400, 4
  %v2_8400 = inttoptr i32 %v1_8400 to i8*
  %v3_8400 = load i8, i8* %v2_8400, align 1
  %v4_8400 = zext i8 %v3_8400 to i32
  %v1_8404 = urem i32 %arg3, 256
  %v9_8408 = icmp eq i32 %v4_8400, %v1_8404
  br i1 %v9_8408, label %dec_label_pc_8444, label %dec_label_pc_842c.preheader

dec_label_pc_842c.preheader:                      ; preds = %dec_label_pc_8400
  br label %dec_label_pc_842c

dec_label_pc_841c:                                ; preds = %dec_label_pc_842c
  %v1_841c = add i32 %v0_8424.in, 12
  %v2_841c = inttoptr i32 %v1_841c to i8*
  %v3_841c = load i8, i8* %v2_841c, align 1
  %v4_841c = zext i8 %v3_841c to i32
  %v9_8420 = icmp eq i32 %v1_8404, %v4_841c
  br i1 %v9_8420, label %dec_label_pc_8444, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_842c.preheader, %dec_label_pc_841c
  %v0_8424.in = phi i32 [ %v0_8400, %dec_label_pc_842c.preheader ], [ %v0_8424, %dec_label_pc_841c ]
  %v0_842c = phi i32 [ 0, %dec_label_pc_842c.preheader ], [ %v1_842c, %dec_label_pc_841c ]
  %v0_8424 = add i32 %v0_8424.in, 8
  %v1_842c = add i32 %v0_842c, 1
  store i32 %v1_842c, i32* @lr, align 4
  %v9_8430 = icmp eq i32 %v1_83ec, %v1_842c
  store i32 %v0_8424, i32* %r1.global-to-local, align 4
  br i1 %v9_8430, label %dec_label_pc_843c, label %dec_label_pc_841c

dec_label_pc_843c:                                ; preds = %dec_label_pc_842c, %dec_label_pc_8444, %dec_label_pc_83ec
  store i32 %v3_83f4, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_8444:                                ; preds = %dec_label_pc_841c, %dec_label_pc_8400
  %v0_8444 = phi i32 [ %v0_8400, %dec_label_pc_8400 ], [ %v0_8424, %dec_label_pc_841c ]
  %v1_8444 = inttoptr i32 %v0_8444 to i32*
  %v2_8444 = load i32, i32* %v1_8444, align 4
  %v2_8448 = icmp eq i32 %v2_8444, 0
  br i1 %v2_8448, label %dec_label_pc_843c, label %dec_label_pc_8450

dec_label_pc_8450:                                ; preds = %dec_label_pc_8444
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v3_83f4, i32* @r4, align 4
  store i32 %v6_83f4, i32* @lr, align 4
  %v2_8458 = inttoptr i32 %v2_8444 to i8*
  %v3_8458 = call i32 @function_11514(i8* %v2_8458, i32 10)
  ret i32 %v3_8458

; uselistorder directives
  uselistorder i32 %v1_842c, { 1, 2, 0 }
  uselistorder i32 %v0_8424, { 1, 0, 2 }
  uselistorder i32 %v0_8424.in, { 1, 0 }
  uselistorder i32 %v1_8404, { 1, 0 }
  uselistorder i32 %v0_8400, { 1, 0, 2 }
  uselistorder i32 %v3_83f4, { 1, 0 }
  uselistorder i32 %v1_83ec, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_843c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_842c, { 1, 0 }
}

define i32 @function_845c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_845c:
  store i32 %arg1, i32* @r0, align 4
  store i32 -476049400, i32* @r7, align 4
  %v0_8462 = call i32 @function_8b08()
  ret i32 %v0_8462
}

define i32 @function_8738(i32 %arg1) local_unnamed_addr {
dec_label_pc_8738:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8738 = load i32, i32* @r4, align 4
  store i32 %v3_8738, i32* %stack_var_-24, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_8744 = call i32 @function_12630(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_1d194.25 to i32), i32* @r4, align 4
  %v2_874c = load i8, i8* bitcast (i8** @global_var_1d194.25 to i8*), align 4
  %v3_874c = zext i8 %v2_874c to i32
  store i32 ptrtoint (i32* @global_var_1d198.27 to i32), i32* @r6, align 4
  store i32 46188, i32* %r2.global-to-local, align 4
  store i32 %v2_8744, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_8760 = mul nuw nsw i32 %v3_874c, 4
  store i32 %v3_8760, i32* %r1.global-to-local, align 4
  %v2_8764 = load i32, i32* @global_var_1d198.27, align 4
  %v2_8768 = inttoptr i32 %v2_8744 to i32*
  store i32 46188, i32* %v2_8768, align 4
  %v3_876c = load i32, i32* @r5, align 4
  %v4_876c = add i32 %v3_876c, 4
  %v5_876c = inttoptr i32 %v4_876c to i8*
  store i8 0, i8* %v5_876c, align 1
  %v0_8770 = load i32, i32* %r1.global-to-local, align 4
  %v1_8770 = add i32 %v0_8770, 4
  store i32 %v1_8770, i32* %r1.global-to-local, align 4
  %v5_8774 = call i32 @function_12778(i32 %v2_8764, i32 %v1_8770, i32 46188, i32 0)
  %v2_8778 = load i8, i8* bitcast (i8** @global_var_1d194.25 to i8*), align 4
  %v3_8778 = zext i8 %v2_8778 to i32
  store i32 %v3_8778, i32* %r3.global-to-local, align 4
  store i32 %v5_8774, i32* %ip.global-to-local, align 4
  %v0_8780 = load i32, i32* @r5, align 4
  %v5_8780 = mul nuw nsw i32 %v3_8778, 4
  %v6_8780 = add i32 %v5_8780, %v5_8774
  %v7_8780 = inttoptr i32 %v6_8780 to i32*
  store i32 %v0_8780, i32* %v7_8780, align 4
  store i32 ptrtoint (i8* @global_var_1d195.29 to i32), i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v3_8790 = load i32, i32* @r4, align 4
  %v4_8790 = inttoptr i32 %v3_8790 to i8*
  store i8 ptrtoint (i8* @global_var_1d195.29 to i8), i8* %v4_8790, align 1
  %v0_8794 = load i32, i32* %ip.global-to-local, align 4
  %v1_8794 = load i32, i32* @r6, align 4
  %v2_8794 = inttoptr i32 %v1_8794 to i32*
  store i32 %v0_8794, i32* %v2_8794, align 4
  %v2_8798 = call i32 @function_12630(i32 1, i32 8)
  %v2_879c = load i8, i8* bitcast (i8** @global_var_1d194.25 to i8*), align 4
  %v3_879c = zext i8 %v2_879c to i32
  store i32 ptrtoint (i32* @global_var_bb14.31 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_8798, i32* @r5, align 4
  %v3_87ac = mul nuw nsw i32 %v3_879c, 4
  store i32 %v3_87ac, i32* %r1.global-to-local, align 4
  %v2_87b0 = load i32, i32* @global_var_1d198.27, align 4
  %v2_87b4 = inttoptr i32 %v2_8798 to i32*
  store i32 ptrtoint (i32* @global_var_bb14.31 to i32), i32* %v2_87b4, align 4
  %v0_87b8 = load i32, i32* @r7, align 4
  %v1_87b8 = trunc i32 %v0_87b8 to i8
  %v2_87b8 = load i32, i32* @r5, align 4
  %v3_87b8 = add i32 %v2_87b8, 4
  %v4_87b8 = inttoptr i32 %v3_87b8 to i8*
  store i8 %v1_87b8, i8* %v4_87b8, align 1
  %v0_87bc = load i32, i32* %r1.global-to-local, align 4
  %v1_87bc = add i32 %v0_87bc, 4
  store i32 %v1_87bc, i32* %r1.global-to-local, align 4
  %v5_87c0 = call i32 @function_12778(i32 %v2_87b0, i32 %v1_87bc, i32 sext (i8 ptrtoint (i8* @global_var_1d195.29 to i8) to i32), i32 ptrtoint (i32* @global_var_bb14.31 to i32))
  %v2_87c4 = load i8, i8* bitcast (i8** @global_var_1d194.25 to i8*), align 4
  %v3_87c4 = zext i8 %v2_87c4 to i32
  store i32 %v3_87c4, i32* %r3.global-to-local, align 4
  store i32 %v5_87c0, i32* %ip.global-to-local, align 4
  %v0_87cc = load i32, i32* @r5, align 4
  %v5_87cc = mul nuw nsw i32 %v3_87c4, 4
  %v6_87cc = add i32 %v5_87cc, %v5_87c0
  %v7_87cc = inttoptr i32 %v6_87cc to i32*
  store i32 %v0_87cc, i32* %v7_87cc, align 4
  %v0_87d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_87d0 = load i32, i32* @r7, align 4
  %v2_87d0 = add i32 %v1_87d0, %v0_87d0
  store i32 %v2_87d0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_87da = call i32 @unknown_8b1e()
  store i32 0, i32* @fp, align 4
  store i32 %v0_87da, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_8a40 = load i32, i32* %r3.global-to-local, align 4
  %v1_8a40 = urem i32 %v0_8a40, 256
  store i32 %v1_8a40, i32* @r4, align 4
  %v3_8a44 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8a44, i32* @r5, align 4
  %v0_8a48 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8a48, i32* @sb, align 4
  %v2_8a50 = call i32 @function_12630(i32 8, i32 4)
  %v0_8a54 = load i32, i32* @r5, align 4
  store i32 %v0_8a54, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_8a60 = load i32, i32* @fp, align 4
  store i32 %v0_8a60, i32* %r3.global-to-local, align 4
  %v0_8a64 = load i32, i32* @r4, align 4
  %v5_8a68 = inttoptr i32 %v0_8a54 to i32*
  %v6_8a68 = call i32 @function_83ec(i32 %v0_8a64, i32* %v5_8a68, i32 2, i32 %v0_8a60, i32 %v2_8a50)
  %v1_8a74 = urem i32 %v6_8a68, 256
  store i32 %v1_8a74, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8a80 = load i32, i32* @r5, align 4
  store i32 %v0_8a80, i32* %r1.global-to-local, align 4
  %v0_8a84 = load i32, i32* @r4, align 4
  %v5_8a8c = inttoptr i32 %v0_8a80 to i32*
  %v6_8a8c = call i32 @function_83ec(i32 %v0_8a84, i32* %v5_8a8c, i32 3, i32 65535, i32 %v1_8a74)
  %v0_8a90 = load i32, i32* @r5, align 4
  store i32 %v0_8a90, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v6_8a8c, i32* @r7, align 4
  %v0_8aa0 = load i32, i32* @r4, align 4
  %v5_8aa4 = inttoptr i32 %v0_8a90 to i32*
  %v6_8aa4 = call i32 @function_83ec(i32 %v0_8aa0, i32* %v5_8aa4, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_8aac = urem i32 %v6_8aa4, 256
  store i32 %v1_8aac, i32* %ip.global-to-local, align 4
  %v0_8ab0 = load i32, i32* @r5, align 4
  store i32 %v0_8ab0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8abc = load i32, i32* @r4, align 4
  %v5_8ac4 = inttoptr i32 %v0_8ab0 to i32*
  %v6_8ac4 = call i32 @function_83ec(i32 %v0_8abc, i32* %v5_8ac4, i32 5, i32 1, i32 %v1_8aac)
  %v1_8ad0 = urem i32 %v6_8ac4, 256
  store i32 %v1_8ad0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8adc = load i32, i32* @r5, align 4
  store i32 %v0_8adc, i32* %r1.global-to-local, align 4
  %v0_8ae0 = load i32, i32* @r4, align 4
  %v5_8ae8 = inttoptr i32 %v0_8adc to i32*
  %v6_8ae8 = call i32 @function_83ec(i32 %v0_8ae0, i32* %v5_8ae8, i32 6, i32 65535, i32 %v1_8ad0)
  %v0_8af4 = load i32, i32* @r5, align 4
  store i32 %v0_8af4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_8b00 = load i32, i32* @r4, align 4
  %v5_8b04 = inttoptr i32 %v0_8af4 to i32*
  %v6_8b04 = call i32 @function_83ec(i32 %v0_8b00, i32* %v5_8b04, i32 7, i32 65535, i32 %v6_8ae8)
  ret i32 %v6_8b04

; uselistorder directives
  uselistorder i32 %v1_8ad0, { 1, 0 }
  uselistorder i32 %v1_8aac, { 1, 0 }
  uselistorder i32 %v1_8a74, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 9, 10, 11, 13, 12, 15, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %ip.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8* bitcast (i8** @global_var_1d194.25 to i8*), { 3, 2, 1, 0 }
  uselistorder i8** @global_var_1d194.25, { 1, 0 }
}

define i32 @function_8b08() local_unnamed_addr {
dec_label_pc_8b08:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp47 = call i8 @__decompiler_undefined_function_2()
  %tmp48 = call i8 @__decompiler_undefined_function_2()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp67 = call i32 @__decompiler_undefined_function_0()
  %tmp68 = call i32 @__decompiler_undefined_function_0()
  %stack_var_126 = alloca i32, align 4
  %stack_var_124 = alloca i32, align 4
  %stack_var_128 = alloca i32, align 4
  %stack_var_132 = alloca i32, align 4
  %stack_var_136 = alloca i32, align 4
  %v0_8b08 = load i32, i32* @r5, align 4
  store i32 %v0_8b08, i32* %r1.global-to-local, align 4
  %v0_8b0c = load i32, i32* @fp, align 4
  store i32 %v0_8b0c, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_8b14 = load i32, i32* @r0, align 4
  store i32 %v0_8b14, i32* @sl, align 4
  %v0_8b18 = load i32, i32* @r4, align 4
  store i32 %v0_8b18, i32* %r0.global-to-local, align 4
  %v5_8b1c = inttoptr i32 %v0_8b08 to i32*
  %v6_8b1c = call i32 @function_83ec(i32 %v0_8b18, i32* %v5_8b1c, i32 %v0_8b0c, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8b2c = load i32, i32* @r5, align 4
  store i32 %v0_8b2c, i32* %r1.global-to-local, align 4
  %v0_8b30 = load i32, i32* @r4, align 4
  store i32 %v0_8b30, i32* %r0.global-to-local, align 4
  %v5_8b34 = inttoptr i32 %v0_8b2c to i32*
  %v6_8b34 = call i32 @function_83ec(i32 %v0_8b30, i32* %v5_8b34, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_8b3c = urem i32 %v6_8b34, 256
  store i32 %v1_8b3c, i32* %ip.global-to-local, align 4
  %v0_8b40 = load i32, i32* @r5, align 4
  store i32 %v0_8b40, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_8b48 = load i32, i32* @fp, align 4
  store i32 %v0_8b48, i32* %r3.global-to-local, align 4
  %v0_8b4c = load i32, i32* @r4, align 4
  store i32 %v0_8b4c, i32* %r0.global-to-local, align 4
  %v5_8b54 = inttoptr i32 %v0_8b40 to i32*
  %v6_8b54 = call i32 @function_83ec(i32 %v0_8b4c, i32* %v5_8b54, i32 18, i32 %v0_8b48, i32 %v1_8b3c)
  %v0_8b5c = load i32, i32* @r5, align 4
  store i32 %v0_8b5c, i32* %r1.global-to-local, align 4
  %v2_8b60 = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_8b60, i32* %r3.global-to-local, align 4
  store i32 %v6_8b54, i32* @r8, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_8b6c = load i32, i32* @r4, align 4
  store i32 %v0_8b6c, i32* %r0.global-to-local, align 4
  %v5_8b70 = inttoptr i32 %v0_8b5c to i32*
  %v6_8b70 = call i32 @function_83ec(i32 %v0_8b6c, i32* %v5_8b70, i32 19, i32 %v2_8b60, i32 ptrtoint (i32* @0 to i32))
  %v0_8b78 = load i32, i32* @fp, align 4
  store i32 %v0_8b78, i32* %r0.global-to-local, align 4
  %v1_8b7c = inttoptr i32 %v0_8b78 to i32*
  %v2_8b7c = call i32 @function_11eb8(i32* %v1_8b7c)
  %v1_8b80 = load i32, i32* @r6, align 4
  %v2_8b80 = add i32 %v1_8b80, %v2_8b7c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_8b94 = call i32 @function_124b0(i32 2, i32 3, i32 6)
  store i32 %v3_8b94, i32* %r0.global-to-local, align 4
  %v7_8b98 = icmp eq i32 %v3_8b94, -1
  store i1 %v7_8b98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8b98, label %dec_label_pc_91b0, label %dec_label_pc_8ba4

dec_label_pc_8ba4:                                ; preds = %dec_label_pc_8b08
  store i32 1, i32* %stack_var_136, align 4
  %v6_8bac = ptrtoint i32* %stack_var_136 to i32
  store i32 %v6_8bac, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_8bb4 = load i32, i32* @fp, align 4
  store i32 %v0_8bb4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_8bc0 = call i32 @function_12480(i32 %v3_8b94, i32 %v0_8bb4, i32 3, i32* nonnull %stack_var_136, i32 4)
  store i32 %v6_8bc0, i32* %r0.global-to-local, align 4
  %v7_8bc4 = icmp eq i32 %v6_8bc0, -1
  store i1 %v7_8bc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8bc4, label %dec_label_pc_91b8, label %dec_label_pc_8bcc

dec_label_pc_8bcc:                                ; preds = %dec_label_pc_8ba4
  %v0_8bd8 = load i32, i32* @sl, align 4
  %v3_8bd8 = mul i32 %v0_8bd8, 65536
  store i32 %v3_8bd8, i32* %sl.global-to-local, align 4
  %v0_8bdc = load i32, i32* @r7, align 4
  %v2_8be4 = icmp eq i32 %tmp67, 0
  store i1 %v2_8be4, i1* %cpsr_z.global-to-local, align 1
  %v0_8be8 = load i32, i32* @r8, align 4
  %v1_8be8 = urem i32 %v0_8be8, 256
  store i32 %v1_8be8, i32* %r8.global-to-local, align 4
  %v3_8bec = urem i32 %v0_8bdc, 65536
  store i32 %v3_8bec, i32* %r3.global-to-local, align 4
  %v3_8bf0 = urem i32 %tmp68, 65536
  store i32 %v3_8bf0, i32* %r1.global-to-local, align 4
  %v3_8bf4 = urem i32 %v0_8bd8, 65536
  store i32 %v3_8bf4, i32* %r2.global-to-local, align 4
  %v0_8c00 = load i32, i32* @fp, align 4
  store i32 %v0_8c00, i32* %stack_var_136, align 4
  %tmp83 = icmp slt i32 %tmp67, 1
  br i1 %tmp83, label %dec_label_pc_8e94.preheader, label %dec_label_pc_8c14

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8bcc
  %v3_8c1c = mul i32 %v6_8b1c, 65536
  %v1_8c24 = urem i32 %tmp68, 256
  %v1_8c2c = add i32 %v3_8c1c, 524288
  %v1_8c30 = add i32 %v3_8c1c, 4325376
  %v1_8c34 = urem i32 %v0_8bd8, 256
  %v1_8c38 = add i32 %v3_8c1c, 1835008
  %v0_8bdc.not = or i32 %v0_8bdc, -65536
  %v1_8c40 = xor i32 %v0_8bdc.not, 65535
  %v3_8c44 = udiv i32 %v1_8c38, 256
  %tmp84 = udiv i32 %v0_8bdc, 256
  %v1_8c58 = and i32 %v3_8c44, 65280
  store i32 %v1_8c58, i32* %r0.global-to-local, align 4
  %v3_8c7c = mul nuw nsw i32 %v1_8c24, 256
  %tmp85 = udiv i32 %tmp68, 256
  %v4_8c84 = urem i32 %tmp85, 256
  %v5_8c84 = or i32 %v4_8c84, %v3_8c7c
  store i32 %v5_8c84, i32* @lr, align 4
  %tmp86 = mul nsw i32 %v1_8c40, 256
  %v3_8c8c = mul nuw nsw i32 %v1_8c34, 256
  %sext24 = mul i32 %tmp84, 16777216
  %v4_8c94 = sdiv i32 %sext24, 16777216
  %v4_8c5c = sdiv i32 %v1_8c30, 16777216
  %tmp87 = udiv i32 %v0_8bd8, 256
  %v4_8c9c = urem i32 %tmp87, 256
  %v5_8c9c = or i32 %v4_8c9c, %v3_8c8c
  store i32 %v5_8c9c, i32* @r7, align 4
  %v1_8ca0 = and i32 %tmp86, 65280
  store i32 %v1_8ca0, i32* %ip.global-to-local, align 4
  %v4_8ca4 = sdiv i32 %v1_8c38, 16777216
  %v3_8ca8 = udiv i32 %v1_8c2c, 256
  %tmp88 = udiv i32 %v1_8c40, 256
  %v4_8cac = urem i32 %tmp88, 256
  %v5_8cac = or i32 %v4_8cac, %v1_8ca0
  store i32 %v5_8cac, i32* @r6, align 4
  %v3_8cb0 = ashr i32 %v1_8c30, 31
  %v3_8cb4 = ashr i32 %sext24, 31
  %v1_8cb8 = and i32 %v3_8ca8, 65280
  store i32 %v1_8cb8, i32* @r5, align 4
  %v3_8cc4 = ashr i32 %v1_8c38, 31
  store i32 %v3_8cc4, i32* %r2.global-to-local, align 4
  %v3_8cc833 = udiv i32 %v1_8ca0, 256
  store i32 %v3_8cc833, i32* %r3.global-to-local, align 4
  store i32 %v1_8c24, i32* %r1.global-to-local, align 4
  %v4_8cd0 = udiv i32 %v1_8c2c, 16777216
  %v5_8cd0 = or i32 %v4_8cd0, %v1_8cb8
  store i32 %v5_8cd0, i32* %r8.global-to-local, align 4
  %v5_8cd4 = trunc i32 %tmp88 to i8
  store i32 %v0_8c00, i32* @r4, align 4
  %v3_8cec34 = udiv i32 %v1_8cb8, 256
  store i32 %v3_8cec34, i32* %sl.global-to-local, align 4
  store i32 %v1_8c34, i32* %fp.global-to-local, align 4
  %v4_8d40 = sext i8 %tmp47 to i32
  %sext16 = mul i32 %v1_8c40, 16777216
  %v4_8e10 = sdiv i32 %sext16, 16777216
  %v2_8e40 = icmp eq i32 %v1_8be8, 0
  %sext17 = mul i32 %tmp68, 16777216
  %v4_8e54 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %tmp85, 16777216
  %v4_8e70 = sdiv i32 %sext18, 16777216
  %v1_8d58 = trunc i32 %v4_8c94 to i8
  br label %dec_label_pc_8cf4

dec_label_pc_8cf4:                                ; preds = %bb99, %dec_label_pc_8c14
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_8d00 = call i32 @function_12630(i32 1510, i32 4)
  store i32 %v2_8d00, i32* %r0.global-to-local, align 4
  store i32 %tmp50, i32* %r2.global-to-local, align 4
  %v3_8d08 = load i32, i32* %stack_var_136, align 4
  store i32 %v3_8d08, i32* %r3.global-to-local, align 4
  %v2_8d0c = load i32, i32* @r4, align 4
  %v5_8d0c = mul i32 %v2_8d0c, 4
  %v6_8d0c = add i32 %v5_8d0c, %tmp50
  %v7_8d0c = inttoptr i32 %v6_8d0c to i32*
  store i32 %v2_8d00, i32* %v7_8d0c, align 4
  %v0_8d10 = load i32, i32* %r2.global-to-local, align 4
  %v1_8d10 = load i32, i32* %r3.global-to-local, align 4
  %v4_8d10 = mul i32 %v1_8d10, 4
  %v5_8d10 = add i32 %v4_8d10, %v0_8d10
  %v6_8d10 = inttoptr i32 %v5_8d10 to i32*
  %v7_8d10 = load i32, i32* %v6_8d10, align 4
  store i32 %v7_8d10, i32* %r4.global-to-local, align 4
  %v1_8d14 = inttoptr i32 %v7_8d10 to i8*
  %v2_8d14 = load i8, i8* %v1_8d14, align 1
  %tmp = urem i8 %v2_8d14, 16
  %v1_8d18 = zext i8 %tmp to i32
  %v1_8d1c = or i32 %v1_8d18, 64
  store i32 %v1_8d1c, i32* %r2.global-to-local, align 4
  %v1_8d20 = trunc i32 %v1_8d1c to i8
  store i8 %v1_8d20, i8* %v1_8d14, align 1
  %v0_8d24 = load i32, i32* %r4.global-to-local, align 4
  %v1_8d24 = inttoptr i32 %v0_8d24 to i8*
  %v2_8d24 = load i8, i8* %v1_8d24, align 1
  %v1_8d28 = and i8 %v2_8d24, -16
  %v1_8d2c = or i8 %v1_8d28, 5
  store i8 %v1_8d2c, i8* %v1_8d24, align 1
  %v2_8d3c = load i32, i32* %r4.global-to-local, align 4
  %v3_8d3c = add i32 %v2_8d3c, 1
  %v4_8d3c = inttoptr i32 %v3_8d3c to i8*
  store i8 %tmp48, i8* %v4_8d3c, align 1
  %v2_8d44 = load i32, i32* %r4.global-to-local, align 4
  %v3_8d44 = add i32 %v2_8d44, 8
  %v4_8d44 = inttoptr i32 %v3_8d44 to i8*
  store i8 %tmp47, i8* %v4_8d44, align 1
  store i32 %v4_8c94, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_8d50 = load i32, i32* %r1.global-to-local, align 4
  %v9_8d50 = icmp eq i32 %v0_8d50, 0
  store i1 %v9_8d50, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8cb0, i32* %r2.global-to-local, align 4
  %v2_8d58 = load i32, i32* %r4.global-to-local, align 4
  %v3_8d58 = add i32 %v2_8d58, 4
  %v4_8d58 = inttoptr i32 %v3_8d58 to i8*
  store i8 %v1_8d58, i8* %v4_8d58, align 1
  store i32 %v4_8c5c, i32* %r1.global-to-local, align 4
  %v0_8d60 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8d60, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_8cf4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_8d64 = load i32, i32* %r4.global-to-local, align 4
  %v4_8d64 = add i32 %v3_8d64, 6
  %v5_8d64 = inttoptr i32 %v4_8d64 to i8*
  store i8 64, i8* %v5_8d64, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_8cf4, %bb
  store i32 47, i32* %r3.global-to-local, align 4
  %v0_8d6c = load i32, i32* %r2.global-to-local, align 4
  %v1_8d6c = trunc i32 %v0_8d6c to i8
  %v2_8d6c = load i32, i32* %r4.global-to-local, align 4
  %v3_8d6c = add i32 %v2_8d6c, 3
  %v4_8d6c = inttoptr i32 %v3_8d6c to i8*
  store i8 %v1_8d6c, i8* %v4_8d6c, align 1
  %v0_8d70 = load i32, i32* %r1.global-to-local, align 4
  %v1_8d70 = trunc i32 %v0_8d70 to i8
  %v2_8d70 = load i32, i32* %r4.global-to-local, align 4
  %v3_8d70 = add i32 %v2_8d70, 2
  %v4_8d70 = inttoptr i32 %v3_8d70 to i8*
  store i8 %v1_8d70, i8* %v4_8d70, align 1
  %v0_8d74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8d74, label %bb90, label %bb89

bb89:                                             ; preds = %.thread
  %v1_8d74 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_8d74, i32* %r2.global-to-local, align 4
  br label %bb90

bb90:                                             ; preds = %.thread, %bb89
  store i32 %v3_8cb4, i32* %r1.global-to-local, align 4
  %v0_8d7c = load i32, i32* %r3.global-to-local, align 4
  %v1_8d7c = trunc i32 %v0_8d7c to i8
  %v2_8d7c = load i32, i32* %r4.global-to-local, align 4
  %v3_8d7c = add i32 %v2_8d7c, 9
  %v4_8d7c = inttoptr i32 %v3_8d7c to i8*
  store i8 %v1_8d7c, i8* %v4_8d7c, align 1
  %v0_8d80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8d80, label %bb92, label %bb91

bb91:                                             ; preds = %bb90
  %v1_8d80 = load i32, i32* %r2.global-to-local, align 4
  %v2_8d80 = trunc i32 %v1_8d80 to i8
  %v3_8d80 = load i32, i32* %r4.global-to-local, align 4
  %v4_8d80 = add i32 %v3_8d80, 7
  %v5_8d80 = inttoptr i32 %v4_8d80 to i8*
  store i8 %v2_8d80, i8* %v5_8d80, align 1
  br label %bb92

bb92:                                             ; preds = %bb90, %bb91
  %v3_8d84 = load i32, i32* %stack_var_136, align 4
  %v5_8d8c = mul i32 %v3_8d84, 24
  store i32 %v5_8d8c, i32* %r3.global-to-local, align 4
  store i32 %v6_8b70, i32* %r2.global-to-local, align 4
  %v1_8d94 = load i32, i32* %r4.global-to-local, align 4
  %v2_8d94 = add i32 %v1_8d94, 12
  %v3_8d94 = inttoptr i32 %v2_8d94 to i32*
  store i32 %v6_8b70, i32* %v3_8d94, align 4
  %v0_8d98 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d98 = load i32, i32* @sb, align 4
  %v2_8d98 = add i32 %v1_8d98, %v0_8d98
  store i32 %v2_8d98, i32* %r3.global-to-local, align 4
  %v1_8d9c = add i32 %v2_8d98, 16
  %v2_8d9c = inttoptr i32 %v1_8d9c to i32*
  %v3_8d9c = load i32, i32* %v2_8d9c, align 4
  store i32 %v3_8d9c, i32* %r2.global-to-local, align 4
  %v0_8da0 = load i32, i32* %r1.global-to-local, align 4
  %v1_8da0 = trunc i32 %v0_8da0 to i8
  %v2_8da0 = load i32, i32* %r4.global-to-local, align 4
  %v3_8da0 = add i32 %v2_8da0, 5
  %v4_8da0 = inttoptr i32 %v3_8da0 to i8*
  store i8 %v1_8da0, i8* %v4_8da0, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v0_8da8 = load i32, i32* %r4.global-to-local, align 4
  %v1_8da8 = add i32 %v0_8da8, 20
  store i32 %v1_8da8, i32* %r1.global-to-local, align 4
  %v3_8dac = add i32 %v0_8da8, 22
  %v4_8dac = inttoptr i32 %v3_8dac to i8*
  store i8 101, i8* %v4_8dac, align 1
  %v0_8db0 = load i32, i32* %r2.global-to-local, align 4
  %v1_8db0 = load i32, i32* %r4.global-to-local, align 4
  %v2_8db0 = add i32 %v1_8db0, 16
  %v3_8db0 = inttoptr i32 %v2_8db0 to i32*
  store i32 %v0_8db0, i32* %v3_8db0, align 4
  %v0_8db4 = load i32, i32* %r4.global-to-local, align 4
  %v1_8db4 = add i32 %v0_8db4, 24
  store i32 %v1_8db4, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_8dbc = load i32, i32* %r3.global-to-local, align 4
  %v1_8dbc = add i32 %v0_8dbc, -93
  store i32 %v1_8dbc, i32* %r3.global-to-local, align 4
  %v2_8dc0 = load i32, i32* %r1.global-to-local, align 4
  %v3_8dc0 = add i32 %v2_8dc0, 3
  %v4_8dc0 = inttoptr i32 %v3_8dc0 to i8*
  store i8 88, i8* %v4_8dc0, align 1
  %v0_8dc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8dc4 = trunc i32 %v0_8dc4 to i8
  %v2_8dc4 = load i32, i32* %r0.global-to-local, align 4
  %v3_8dc4 = add i32 %v2_8dc4, 12
  %v4_8dc4 = inttoptr i32 %v3_8dc4 to i8*
  store i8 %v1_8dc4, i8* %v4_8dc4, align 1
  %v0_8dc8 = load i32, i32* %ip.global-to-local, align 4
  %v1_8dc8 = trunc i32 %v0_8dc8 to i8
  %v2_8dc8 = load i32, i32* %r0.global-to-local, align 4
  %v3_8dc8 = add i32 %v2_8dc8, 13
  %v4_8dc8 = inttoptr i32 %v3_8dc8 to i8*
  store i8 %v1_8dc8, i8* %v4_8dc8, align 1
  %v0_8dcc = load i32, i32* %r4.global-to-local, align 4
  %v1_8dcc = add i32 %v0_8dcc, 38
  %v2_8dcc = inttoptr i32 %v1_8dcc to i8*
  %v3_8dcc = load i8, i8* %v2_8dcc, align 1
  %tmp104 = urem i8 %v3_8dcc, 16
  %v1_8dd0 = zext i8 %tmp104 to i32
  %v1_8dd4 = or i32 %v1_8dd0, 64
  store i32 %v1_8dd4, i32* %r3.global-to-local, align 4
  %v1_8dd8 = trunc i32 %v1_8dd4 to i8
  store i8 %v1_8dd8, i8* %v2_8dcc, align 1
  %v0_8ddc = load i32, i32* %r4.global-to-local, align 4
  %v1_8ddc = add i32 %v0_8ddc, 38
  %v2_8ddc = inttoptr i32 %v1_8ddc to i8*
  %v3_8ddc = load i8, i8* %v2_8ddc, align 1
  %v1_8de0 = and i8 %v3_8ddc, -16
  %v1_8de4 = or i8 %v1_8de0, 5
  store i8 %v1_8de4, i8* %v2_8ddc, align 1
  %v0_8df0 = load i32, i32* %r4.global-to-local, align 4
  %v1_8df0 = add i32 %v0_8df0, 38
  store i32 %v1_8df0, i32* @r5, align 4
  %v3_8df4 = add i32 %v0_8df0, 39
  %v4_8df4 = inttoptr i32 %v3_8df4 to i8*
  store i8 %tmp48, i8* %v4_8df4, align 1
  store i32 %v4_8ca4, i32* %r1.global-to-local, align 4
  store i32 %tmp88, i32* %r3.global-to-local, align 4
  store i32 %v3_8cc4, i32* %r2.global-to-local, align 4
  %v2_8e04 = load i32, i32* @r5, align 4
  %v3_8e04 = add i32 %v2_8e04, 4
  %v4_8e04 = inttoptr i32 %v3_8e04 to i8*
  store i8 %v5_8cd4, i8* %v4_8e04, align 1
  %v0_8e08 = load i32, i32* %r1.global-to-local, align 4
  %v1_8e08 = trunc i32 %v0_8e08 to i8
  %v2_8e08 = load i32, i32* @r5, align 4
  %v3_8e08 = add i32 %v2_8e08, 2
  %v4_8e08 = inttoptr i32 %v3_8e08 to i8*
  store i8 %v1_8e08, i8* %v4_8e08, align 1
  %v0_8e0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e0c, label %bb94, label %bb93

bb93:                                             ; preds = %bb92
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb94

bb94:                                             ; preds = %bb92, %bb93
  store i32 %v4_8e10, i32* %r1.global-to-local, align 4
  %v0_8e14 = load i32, i32* %r2.global-to-local, align 4
  %v1_8e14 = trunc i32 %v0_8e14 to i8
  %v2_8e14 = load i32, i32* @r5, align 4
  %v3_8e14 = add i32 %v2_8e14, 3
  %v4_8e14 = inttoptr i32 %v3_8e14 to i8*
  store i8 %v1_8e14, i8* %v4_8e14, align 1
  store i32 %v4_8d40, i32* %r2.global-to-local, align 4
  %v0_8e1c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e1c, label %bb96, label %bb95

bb95:                                             ; preds = %bb94
  %v1_8e1c = load i32, i32* %r3.global-to-local, align 4
  %v2_8e1c = trunc i32 %v1_8e1c to i8
  %v3_8e1c = load i32, i32* @r5, align 4
  %v4_8e1c = add i32 %v3_8e1c, 6
  %v5_8e1c = inttoptr i32 %v4_8e1c to i8*
  store i8 %v2_8e1c, i8* %v5_8e1c, align 1
  br label %bb96

bb96:                                             ; preds = %bb94, %bb95
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_8e24 = load i32, i32* %r1.global-to-local, align 4
  %v1_8e24 = trunc i32 %v0_8e24 to i8
  %v2_8e24 = load i32, i32* @r5, align 4
  %v3_8e24 = add i32 %v2_8e24, 5
  %v4_8e24 = inttoptr i32 %v3_8e24 to i8*
  store i8 %v1_8e24, i8* %v4_8e24, align 1
  %v0_8e28 = load i32, i32* %r2.global-to-local, align 4
  %v1_8e28 = trunc i32 %v0_8e28 to i8
  %v2_8e28 = load i32, i32* @r5, align 4
  %v3_8e28 = add i32 %v2_8e28, 8
  %v4_8e28 = inttoptr i32 %v3_8e28 to i8*
  store i8 %v1_8e28, i8* %v4_8e28, align 1
  %v0_8e2c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e2c, label %bb98, label %bb97

bb97:                                             ; preds = %bb96
  %v1_8e2c = load i32, i32* %ip.global-to-local, align 4
  %v2_8e2c = trunc i32 %v1_8e2c to i8
  %v3_8e2c = load i32, i32* @r5, align 4
  %v4_8e2c = add i32 %v3_8e2c, 7
  %v5_8e2c = inttoptr i32 %v4_8e2c to i8*
  store i8 %v2_8e2c, i8* %v5_8e2c, align 1
  br label %bb98

bb98:                                             ; preds = %bb96, %bb97
  %v0_8e30 = load i32, i32* %r3.global-to-local, align 4
  %v1_8e30 = trunc i32 %v0_8e30 to i8
  %v2_8e30 = load i32, i32* @r5, align 4
  %v3_8e30 = add i32 %v2_8e30, 9
  %v4_8e30 = inttoptr i32 %v3_8e30 to i8*
  store i8 %v1_8e30, i8* %v4_8e30, align 1
  %v0_8e34 = call i32 @function_db88()
  store i32 %v0_8e34, i32* %r0.global-to-local, align 4
  store i32 %v1_8be8, i32* %r1.global-to-local, align 4
  store i1 %v2_8e40, i1* %cpsr_z.global-to-local, align 1
  %v1_8e44 = sub i32 1023, %v0_8e34
  store i32 %v1_8e44, i32* %r3.global-to-local, align 4
  br i1 %v2_8e40, label %.thread19, label %.thread20

.thread19:                                        ; preds = %bb98
  %v2_8e4c = load i32, i32* @r5, align 4
  %v3_8e4c = add i32 %v2_8e4c, 16
  %v4_8e4c = inttoptr i32 %v3_8e4c to i32*
  store i32 %v1_8e44, i32* %v4_8e4c, align 4
  br label %bb99

.thread20:                                        ; preds = %bb98
  %v1_8e48 = load i32, i32* %r4.global-to-local, align 4
  %v2_8e48 = add i32 %v1_8e48, 16
  %v3_8e48 = inttoptr i32 %v2_8e48 to i32*
  %v4_8e48 = load i32, i32* %v3_8e48, align 4
  store i32 %v4_8e48, i32* %r3.global-to-local, align 4
  %v2_8e50 = load i32, i32* @r5, align 4
  %v3_8e50 = add i32 %v2_8e50, 16
  %v4_8e50 = inttoptr i32 %v3_8e50 to i32*
  store i32 %v4_8e48, i32* %v4_8e50, align 4
  br label %bb99

bb99:                                             ; preds = %.thread19, %.thread20
  store i32 %v4_8e54, i32* %r3.global-to-local, align 4
  %v0_8e58 = load i32, i32* %r4.global-to-local, align 4
  %v1_8e58 = add i32 %v0_8e58, 58
  store i32 %v1_8e58, i32* @r6, align 4
  %v1_8e5c = load i32, i32* @r5, align 4
  %v2_8e5c = add i32 %v1_8e5c, 12
  %v3_8e5c = inttoptr i32 %v2_8e5c to i32*
  store i32 %v0_8e34, i32* %v3_8e5c, align 4
  %v0_8e60 = load i32, i32* %r3.global-to-local, align 4
  %v1_8e60 = trunc i32 %v0_8e60 to i8
  %v2_8e60 = load i32, i32* @r6, align 4
  %v3_8e60 = add i32 %v2_8e60, 1
  %v4_8e60 = inttoptr i32 %v3_8e60 to i8*
  store i8 %v1_8e60, i8* %v4_8e60, align 1
  %v3_8e64 = load i32, i32* %stack_var_136, align 4
  store i32 %v3_8e64, i32* %r3.global-to-local, align 4
  store i32 %tmp67, i32* %r1.global-to-local, align 4
  %v1_8e6c = add i32 %v3_8e64, 1
  store i32 %v1_8e6c, i32* @r4, align 4
  store i32 %v4_8e70, i32* %r2.global-to-local, align 4
  %v9_8e74 = icmp eq i32 %v1_8e6c, %tmp67
  store i1 %v9_8e74, i1* %cpsr_z.global-to-local, align 1
  %v0_8e78 = load i32, i32* %sl.global-to-local, align 4
  %v1_8e78 = trunc i32 %v0_8e78 to i8
  %v2_8e78 = load i32, i32* @r6, align 4
  %v3_8e78 = add i32 %v2_8e78, 5
  %v4_8e78 = inttoptr i32 %v3_8e78 to i8*
  store i8 %v1_8e78, i8* %v4_8e78, align 1
  %v0_8e7c = load i32, i32* %r2.global-to-local, align 4
  %v1_8e7c = trunc i32 %v0_8e7c to i8
  %v2_8e7c = load i32, i32* @r6, align 4
  %v3_8e7c = inttoptr i32 %v2_8e7c to i8*
  store i8 %v1_8e7c, i8* %v3_8e7c, align 1
  %v0_8e80 = load i32, i32* @r7, align 4
  %v1_8e80 = trunc i32 %v0_8e80 to i8
  %v2_8e80 = load i32, i32* @r6, align 4
  %v3_8e80 = add i32 %v2_8e80, 2
  %v4_8e80 = inttoptr i32 %v3_8e80 to i8*
  store i8 %v1_8e80, i8* %v4_8e80, align 1
  %v0_8e84 = load i32, i32* %fp.global-to-local, align 4
  %v1_8e84 = trunc i32 %v0_8e84 to i8
  %v2_8e84 = load i32, i32* @r6, align 4
  %v3_8e84 = add i32 %v2_8e84, 3
  %v4_8e84 = inttoptr i32 %v3_8e84 to i8*
  store i8 %v1_8e84, i8* %v4_8e84, align 1
  %v0_8e88 = load i32, i32* %r8.global-to-local, align 4
  %v1_8e88 = trunc i32 %v0_8e88 to i8
  %v2_8e88 = load i32, i32* @r6, align 4
  %v3_8e88 = add i32 %v2_8e88, 4
  %v4_8e88 = inttoptr i32 %v3_8e88 to i8*
  store i8 %v1_8e88, i8* %v4_8e88, align 1
  %v0_8e8c = load i32, i32* @r4, align 4
  store i32 %v0_8e8c, i32* %stack_var_136, align 4
  %v5_8e90 = icmp slt i32 %v1_8e6c, %tmp67
  br i1 %v5_8e90, label %dec_label_pc_8cf4, label %dec_label_pc_8e94.preheader

dec_label_pc_8e94.preheader:                      ; preds = %bb99, %dec_label_pc_8bcc
  %v1_8eb4 = add i32 %v6_8b1c, 66
  %v1_8eb8 = add i32 %v6_8b1c, 8
  %v2_8ecc = icmp eq i32 %v6_8b70, -1
  %v7_8ecc = icmp eq i32 %v6_8b70, -1
  %v3_90f0 = icmp eq i32 %v3_8bec, 65535
  %v2_9160 = icmp eq i32 %v1_8be8, 0
  %v2_8f28 = ptrtoint i32* %stack_var_132 to i32
  %v2_8f40 = ptrtoint i32* %stack_var_128 to i32
  %v2_8f50 = ptrtoint i32* %stack_var_124 to i32
  %v2_8f5c = ptrtoint i32* %stack_var_126 to i32
  %v2_8f70 = icmp eq i32 %v1_8b3c, 0
  br label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %dec_label_pc_8e94.preheader, %dec_label_pc_919c
  store i32 %tmp67, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_8be4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_136, align 4
  br i1 %tmp83, label %dec_label_pc_919c, label %dec_label_pc_8ea8

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e94
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v6_8b1c, i32* %r1.global-to-local, align 4
  store i32 %v1_8eb4, i32* @fp, align 4
  store i32 %v1_8eb8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_904c

dec_label_pc_8ec8:                                ; preds = %dec_label_pc_904c
  store i32 %v6_8b70, i32* %r2.global-to-local, align 4
  store i1 %v7_8ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ecc, label %dec_label_pc_90e0, label %dec_label_pc_8ed4

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_9078, %dec_label_pc_8ec8
  store i32 %v3_8bec, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_90f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_90f0, label %dec_label_pc_90fc, label %dec_label_pc_8ee8

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_90e0.dec_label_pc_8ee8_crit_edge, %dec_label_pc_8ed4
  %v1_8eec = phi i32 [ %v1_8eec.pre, %dec_label_pc_90e0.dec_label_pc_8ee8_crit_edge ], [ 65535, %dec_label_pc_8ed4 ]
  store i32 %v3_8bf0, i32* %r1.global-to-local, align 4
  %v9_8eec = icmp eq i32 %v3_8bf0, %v1_8eec
  store i1 %v9_8eec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8eec, label %dec_label_pc_9134, label %dec_label_pc_8ef4

dec_label_pc_8ef4:                                ; preds = %dec_label_pc_90fc.dec_label_pc_8ef4_crit_edge, %dec_label_pc_8ee8
  %v1_8ef8 = phi i32 [ %v1_8ef8.pre, %dec_label_pc_90fc.dec_label_pc_8ef4_crit_edge ], [ %v1_8eec, %dec_label_pc_8ee8 ]
  store i32 %v3_8bf4, i32* %r2.global-to-local, align 4
  %v9_8ef8 = icmp eq i32 %v3_8bf4, %v1_8ef8
  store i1 %v9_8ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8ef8, label %dec_label_pc_9150, label %dec_label_pc_8f00

dec_label_pc_8f00:                                ; preds = %dec_label_pc_9134, %dec_label_pc_8ef4
  store i32 %v1_8be8, i32* %r3.global-to-local, align 4
  store i1 %v2_9160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9160, label %dec_label_pc_9174, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_8f00
  %v1_8f08 = load i32, i32* @r5, align 4
  %v2_8f08 = add i32 %v1_8f08, 16
  %v3_8f08 = inttoptr i32 %v2_8f08 to i32*
  %v4_8f08 = load i32, i32* %v3_8f08, align 4
  store i32 %v4_8f08, i32* %r3.global-to-local, align 4
  %v2_8f0c = load i32, i32* @r6, align 4
  %v3_8f0c = add i32 %v2_8f0c, 16
  %v4_8f0c = inttoptr i32 %v3_8f0c to i32*
  store i32 %v4_8f08, i32* %v4_8f0c, align 4
  br label %dec_label_pc_8f14

dec_label_pc_8f14:                                ; preds = %bb103, %.thread21, %dec_label_pc_9174
  %v0_8f14 = call i32 @function_db88()
  store i32 %v0_8f14, i32* %r0.global-to-local, align 4
  store i32 %v0_8f14, i32* %stack_var_132, align 4
  %v0_8f1c = call i32 @function_db88()
  store i32 %v0_8f1c, i32* %r0.global-to-local, align 4
  store i32 %v0_8f1c, i32* %stack_var_128, align 4
  %v0_8f24 = call i32 @function_db88()
  store i32 %v2_8f28, i32* %r1.global-to-local, align 4
  store i32 %v0_8f24, i32* %stack_var_124, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r8, align 4
  store i32 %v0_8f34, i32* %r0.global-to-local, align 4
  %v3_8f38 = call i32 @function_11464(i32 %v0_8f34, i32 %v2_8f28, i32 4)
  %v0_8f3c = load i32, i32* @r8, align 4
  %v1_8f3c = add i32 %v0_8f3c, 6
  store i32 %v1_8f3c, i32* %r0.global-to-local, align 4
  store i32 %v2_8f40, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_8f48 = call i32 @function_11464(i32 %v1_8f3c, i32 %v2_8f40, i32 4)
  %v0_8f4c = load i32, i32* @r8, align 4
  %v1_8f4c = add i32 %v0_8f4c, 4
  store i32 %v1_8f4c, i32* %r0.global-to-local, align 4
  store i32 %v2_8f50, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8f58 = call i32 @function_11464(i32 %v1_8f4c, i32 %v2_8f50, i32 2)
  store i32 %v2_8f5c, i32* %r1.global-to-local, align 4
  %v0_8f60 = load i32, i32* @r8, align 4
  %v1_8f60 = add i32 %v0_8f60, 10
  store i32 %v1_8f60, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8f68 = call i32 @function_11464(i32 %v1_8f60, i32 %v2_8f5c, i32 2)
  store i32 %v3_8f68, i32* %r0.global-to-local, align 4
  store i32 %v1_8b3c, i32* %r1.global-to-local, align 4
  store i1 %v2_8f70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f70, label %dec_label_pc_8f78, label %dec_label_pc_9180

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8f14, %dec_label_pc_9180
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8f7c = load i32, i32* @sl, align 4
  %v1_8f7c = trunc i32 %v0_8f7c to i8
  %v2_8f7c = load i32, i32* @r5, align 4
  %v3_8f7c = add i32 %v2_8f7c, 10
  %v4_8f7c = inttoptr i32 %v3_8f7c to i8*
  store i8 %v1_8f7c, i8* %v4_8f7c, align 1
  %v0_8f80 = load i32, i32* @sl, align 4
  %v1_8f80 = trunc i32 %v0_8f80 to i8
  %v2_8f80 = load i32, i32* @r5, align 4
  %v3_8f80 = add i32 %v2_8f80, 11
  %v4_8f80 = inttoptr i32 %v3_8f80 to i8*
  store i8 %v1_8f80, i8* %v4_8f80, align 1
  %v0_8f84 = load i32, i32* @r5, align 4
  store i32 %v0_8f84, i32* @r0, align 4
  %v2_8f88 = call i32 @function_c7e0(i32 %v0_8f84, i32 20)
  %v3_8f88 = trunc i32 %v2_8f88 to i8
  %v4_8f8c = sdiv i32 %v2_8f88, 256
  store i32 %v4_8f8c, i32* %r3.global-to-local, align 4
  %v1_8f90 = trunc i32 %v4_8f8c to i8
  %v2_8f90 = load i32, i32* @r5, align 4
  %v3_8f90 = add i32 %v2_8f90, 11
  %v4_8f90 = inttoptr i32 %v3_8f90 to i8*
  store i8 %v1_8f90, i8* %v4_8f90, align 1
  %v3_8f94 = load i32, i32* @r5, align 4
  %v4_8f94 = add i32 %v3_8f94, 10
  %v5_8f94 = inttoptr i32 %v4_8f94 to i8*
  store i8 %v3_8f88, i8* %v5_8f94, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8f9c = load i32, i32* @sl, align 4
  %v1_8f9c = trunc i32 %v0_8f9c to i8
  %v2_8f9c = load i32, i32* @r6, align 4
  %v3_8f9c = add i32 %v2_8f9c, 10
  %v4_8f9c = inttoptr i32 %v3_8f9c to i8*
  store i8 %v1_8f9c, i8* %v4_8f9c, align 1
  %v0_8fa0 = load i32, i32* @sl, align 4
  %v1_8fa0 = trunc i32 %v0_8fa0 to i8
  %v2_8fa0 = load i32, i32* @r6, align 4
  %v3_8fa0 = add i32 %v2_8fa0, 11
  %v4_8fa0 = inttoptr i32 %v3_8fa0 to i8*
  store i8 %v1_8fa0, i8* %v4_8fa0, align 1
  %v0_8fa4 = load i32, i32* @r6, align 4
  store i32 %v0_8fa4, i32* @r0, align 4
  %v2_8fa8 = call i32 @function_c7e0(i32 %v0_8fa4, i32 20)
  %v3_8fa8 = trunc i32 %v2_8fa8 to i8
  store i32 %v2_8fa8, i32* %r0.global-to-local, align 4
  %v4_8fac = sdiv i32 %v2_8fa8, 256
  store i32 %v4_8fac, i32* %r3.global-to-local, align 4
  %v3_8fb0 = load i32, i32* @r6, align 4
  %v4_8fb0 = add i32 %v3_8fb0, 10
  %v5_8fb0 = inttoptr i32 %v4_8fb0 to i8*
  store i8 %v3_8fa8, i8* %v5_8fb0, align 1
  %v0_8fb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8fb4 = trunc i32 %v0_8fb4 to i8
  %v2_8fb4 = load i32, i32* @r6, align 4
  %v3_8fb4 = add i32 %v2_8fb4, 11
  %v4_8fb4 = inttoptr i32 %v3_8fb4 to i8*
  store i8 %v1_8fb4, i8* %v4_8fb4, align 1
  %v0_8fb8 = load i32, i32* @r7, align 4
  %v1_8fb8 = add i32 %v0_8fb8, 4
  %v2_8fb8 = inttoptr i32 %v1_8fb8 to i8*
  %v3_8fb8 = load i8, i8* %v2_8fb8, align 1
  %v4_8fb8 = zext i8 %v3_8fb8 to i32
  store i32 %v4_8fb8, i32* %r3.global-to-local, align 4
  %v1_8fbc = add i32 %v0_8fb8, 5
  %v2_8fbc = inttoptr i32 %v1_8fbc to i8*
  %v3_8fbc = load i8, i8* %v2_8fbc, align 1
  %v4_8fbc = zext i8 %v3_8fbc to i32
  store i32 %v0_8fb8, i32* @r1, align 4
  %v4_8fc4 = mul nuw nsw i32 %v4_8fbc, 256
  %v5_8fc4 = or i32 %v4_8fc4, %v4_8fb8
  store i32 %v5_8fc4, i32* %r2.global-to-local, align 4
  %v0_8fc8 = load i32, i32* @sl, align 4
  %v1_8fc8 = trunc i32 %v0_8fc8 to i8
  %v3_8fc8 = add i32 %v0_8fb8, 6
  %v4_8fc8 = inttoptr i32 %v3_8fc8 to i8*
  store i8 %v1_8fc8, i8* %v4_8fc8, align 1
  store i32 %v1_8eb8, i32* %r3.global-to-local, align 4
  %v0_8fd0 = load i32, i32* @sl, align 4
  %v1_8fd0 = trunc i32 %v0_8fd0 to i8
  %v2_8fd0 = load i32, i32* @r7, align 4
  %v3_8fd0 = add i32 %v2_8fd0, 7
  %v4_8fd0 = inttoptr i32 %v3_8fd0 to i8*
  store i8 %v1_8fd0, i8* %v4_8fd0, align 1
  %v0_8fd4 = load i32, i32* @r6, align 4
  store i32 %v0_8fd4, i32* %r0.global-to-local, align 4
  %v4_8fd8 = call i32 @function_c83c(i32 %v0_8fd4, i32 %v0_8fb8, i32 %v5_8fc4, i32 %v1_8eb8)
  %v5_8fd8 = trunc i32 %v4_8fd8 to i8
  store i32 %v4_8fd8, i32* %r0.global-to-local, align 4
  %v3_8fdc = load i32, i32* %stack_var_136, align 4
  store i32 %v3_8fdc, i32* %r3.global-to-local, align 4
  %v3_8fe0 = mul i32 %v3_8fdc, 32
  store i32 %v3_8fe0, i32* %r2.global-to-local, align 4
  %v0_8fe4 = load i32, i32* @r5, align 4
  %v1_8fe4 = add i32 %v0_8fe4, 16
  %v2_8fe4 = inttoptr i32 %v1_8fe4 to i32*
  %v3_8fe4 = load i32, i32* %v2_8fe4, align 4
  store i32 %v3_8fe4, i32* %r1.global-to-local, align 4
  %v5_8fe8 = mul i32 %v3_8fdc, 24
  store i32 %v5_8fe8, i32* %r2.global-to-local, align 4
  %v4_8fec36 = udiv i32 %v4_8fd8, 256
  %v1_8ff0 = trunc i32 %v4_8fec36 to i8
  %v2_8ff0 = load i32, i32* @r7, align 4
  %v3_8ff0 = add i32 %v2_8ff0, 7
  %v4_8ff0 = inttoptr i32 %v3_8ff0 to i8*
  store i8 %v1_8ff0, i8* %v4_8ff0, align 1
  %v0_8ff4 = load i32, i32* %r2.global-to-local, align 4
  %v1_8ff4 = load i32, i32* @sb, align 4
  %v2_8ff4 = add i32 %v1_8ff4, %v0_8ff4
  store i32 %v2_8ff4, i32* @lr, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_8ffc = load i32, i32* @r7, align 4
  %v4_8ffc = add i32 %v3_8ffc, 6
  %v5_8ffc = inttoptr i32 %v4_8ffc to i8*
  store i8 %v5_8fd8, i8* %v5_8ffc, align 1
  %v0_9000 = load i32, i32* %r1.global-to-local, align 4
  %v1_9000 = load i32, i32* @lr, align 4
  %v2_9000 = add i32 %v1_9000, 4
  %v3_9000 = inttoptr i32 %v2_9000 to i32*
  store i32 %v0_9000, i32* %v3_9000, align 4
  %v0_9004 = load i32, i32* %r3.global-to-local, align 4
  %v1_9004 = trunc i32 %v0_9004 to i8
  %v2_9004 = load i32, i32* %r2.global-to-local, align 4
  %v3_9004 = load i32, i32* @sb, align 4
  %v4_9004 = add i32 %v3_9004, %v2_9004
  %v5_9004 = inttoptr i32 %v4_9004 to i8*
  store i8 %v1_9004, i8* %v5_9004, align 1
  %v0_9008 = load i32, i32* @sl, align 4
  %v1_9008 = trunc i32 %v0_9008 to i8
  %v2_9008 = load i32, i32* @lr, align 4
  %v3_9008 = add i32 %v2_9008, 2
  %v4_9008 = inttoptr i32 %v3_9008 to i8*
  store i8 %v1_9008, i8* %v4_9008, align 1
  %v0_900c = load i32, i32* @sl, align 4
  %v1_900c = trunc i32 %v0_900c to i8
  %v2_900c = load i32, i32* @lr, align 4
  %v3_900c = add i32 %v2_900c, 1
  %v4_900c = inttoptr i32 %v3_900c to i8*
  store i8 %v1_900c, i8* %v4_900c, align 1
  %v0_9010 = load i32, i32* @sl, align 4
  %v1_9010 = trunc i32 %v0_9010 to i8
  %v2_9010 = load i32, i32* @lr, align 4
  %v3_9010 = add i32 %v2_9010, 3
  %v4_9010 = inttoptr i32 %v3_9010 to i8*
  store i8 %v1_9010, i8* %v4_9010, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_901c = load i32, i32* @r5, align 4
  store i32 %v0_901c, i32* %r1.global-to-local, align 4
  store i32 %v3_8b94, i32* %r0.global-to-local, align 4
  %v0_9024 = load i32, i32* @fp, align 4
  store i32 %v0_9024, i32* %r2.global-to-local, align 4
  %v0_9028 = load i32, i32* @lr, align 4
  %v6_9030 = inttoptr i32 %v0_901c to i32*
  %v7_9030 = call i32 @function_1244c(i32 %v3_8b94, i32* %v6_9030, i32 %v0_9024, i32 16384, i32 %v0_9028, i32 16)
  %v3_9034 = load i32, i32* %stack_var_136, align 4
  %v1_9038 = add i32 %v3_9034, 1
  store i32 %v1_9038, i32* %r0.global-to-local, align 4
  store i32 %tmp67, i32* %r3.global-to-local, align 4
  %v9_9040 = icmp eq i32 %v1_9038, %tmp67
  store i1 %v9_9040, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9038, i32* %stack_var_136, align 4
  %v6_9048 = icmp slt i32 %v1_9038, %tmp67
  br i1 %v6_9048, label %dec_label_pc_904c, label %dec_label_pc_919c

dec_label_pc_904c:                                ; preds = %dec_label_pc_8f78, %dec_label_pc_8ea8
  %v1_9060 = phi i32 [ %v1_9038, %dec_label_pc_8f78 ], [ 0, %dec_label_pc_8ea8 ]
  %v5_9050 = mul i32 %v1_9060, 24
  %v1_9054 = load i32, i32* @sb, align 4
  %v2_9054 = add i32 %v1_9054, %v5_9050
  store i32 %v2_9054, i32* %r3.global-to-local, align 4
  store i32 %tmp50, i32* %r1.global-to-local, align 4
  %v1_905c = add i32 %v2_9054, 20
  %v2_905c = inttoptr i32 %v1_905c to i8*
  %v3_905c = load i8, i8* %v2_905c, align 1
  %v4_905c = zext i8 %v3_905c to i32
  store i32 %v4_905c, i32* %r2.global-to-local, align 4
  %v4_9060 = mul i32 %v1_9060, 4
  %v5_9060 = add i32 %v4_9060, %tmp50
  %v6_9060 = inttoptr i32 %v5_9060 to i32*
  %v7_9060 = load i32, i32* %v6_9060, align 4
  store i32 %v7_9060, i32* @r5, align 4
  %v2_9064 = icmp ugt i8 %v3_905c, 30
  %v7_9064 = icmp eq i8 %v3_905c, 31
  store i1 %v7_9064, i1* %cpsr_z.global-to-local, align 1
  %v1_9068 = add i32 %v7_9060, 24
  store i32 %v1_9068, i32* @r8, align 4
  %v1_906c = add i32 %v7_9060, 38
  store i32 %v1_906c, i32* @r6, align 4
  %v1_9070 = add i32 %v7_9060, 58
  store i32 %v1_9070, i32* @r7, align 4
  %v2_9074 = xor i1 %v7_9064, true
  %v3_9074 = and i1 %v2_9064, %v2_9074
  br i1 %v3_9074, label %dec_label_pc_8ec8, label %dec_label_pc_9078

dec_label_pc_9078:                                ; preds = %dec_label_pc_904c
  %v1_9078 = add i32 %v2_9054, 16
  %v2_9078 = inttoptr i32 %v1_9078 to i32*
  %v3_9078 = load i32, i32* %v2_9078, align 4
  store i32 %v3_9078, i32* %r4.global-to-local, align 4
  %v0_907c = call i32 @function_db88()
  store i32 %v0_907c, i32* %r0.global-to-local, align 4
  %v3_9080 = load i32, i32* %stack_var_136, align 4
  %v5_9088 = mul i32 %v3_9080, 24
  %v0_908c = load i32, i32* %r4.global-to-local, align 4
  %v1_9090 = load i32, i32* @sb, align 4
  %v2_9090 = add i32 %v1_9090, %v5_9088
  store i32 %v2_9090, i32* %r1.global-to-local, align 4
  %v1_9094 = and i32 %v0_908c, 65280
  store i32 %v1_9094, i32* %r3.global-to-local, align 4
  %v1_908c = udiv i32 %v0_908c, 256
  %v3_9098 = and i32 %v1_908c, 65280
  store i32 %v3_9098, i32* %r2.global-to-local, align 4
  %v3_909c = mul i32 %v0_908c, 16777216
  store i32 %v3_909c, i32* %ip.global-to-local, align 4
  %v1_90a0 = add i32 %v2_9090, 20
  %v2_90a0 = inttoptr i32 %v1_90a0 to i8*
  %v3_90a0 = load i8, i8* %v2_90a0, align 1
  %v4_90a0 = zext i8 %v3_90a0 to i32
  %v4_90a4 = mul nuw nsw i32 %v1_9094, 256
  %v5_90a4 = or i32 %v4_90a4, %v3_909c
  store i32 %v5_90a4, i32* %ip.global-to-local, align 4
  %v2_90ac = call i32 @llvm.bswap.i32(i32 %v0_908c)
  %v7_90b0 = lshr i32 %v0_907c, %v4_90a0
  %v8_90b0 = add i32 %v7_90b0, %v2_90ac
  %v3_90bc = mul i32 %v8_90b0, 16777216
  %v1_90c0 = and i32 %v8_90b0, 65280
  store i32 %v1_90c0, i32* %r0.global-to-local, align 4
  store i32 %v6_8b70, i32* %r2.global-to-local, align 4
  %v4_90cc = mul nuw nsw i32 %v1_90c0, 256
  %v5_90cc = or i32 %v4_90cc, %v3_90bc
  store i32 %v5_90cc, i32* %r1.global-to-local, align 4
  %v2_90d0 = call i32 @llvm.bswap.i32(i32 %v8_90b0)
  store i32 %v2_90d0, i32* %r3.global-to-local, align 4
  store i1 %v7_8ecc, i1* %cpsr_z.global-to-local, align 1
  %v1_90d8 = load i32, i32* @r5, align 4
  %v2_90d8 = add i32 %v1_90d8, 16
  %v3_90d8 = inttoptr i32 %v2_90d8 to i32*
  store i32 %v2_90d0, i32* %v3_90d8, align 4
  br i1 %v2_8ecc, label %dec_label_pc_90e0, label %dec_label_pc_8ed4

dec_label_pc_90e0:                                ; preds = %dec_label_pc_9078, %dec_label_pc_8ec8
  %v0_90e0 = call i32 @function_db88()
  store i32 %v0_90e0, i32* %r0.global-to-local, align 4
  store i32 %v3_8bec, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_90f0, i1* %cpsr_z.global-to-local, align 1
  %v1_90f4 = load i32, i32* @r5, align 4
  %v2_90f4 = add i32 %v1_90f4, 12
  %v3_90f4 = inttoptr i32 %v2_90f4 to i32*
  store i32 %v0_90e0, i32* %v3_90f4, align 4
  br i1 %v3_90f0, label %dec_label_pc_90fc, label %dec_label_pc_90e0.dec_label_pc_8ee8_crit_edge

dec_label_pc_90e0.dec_label_pc_8ee8_crit_edge:    ; preds = %dec_label_pc_90e0
  %v1_8eec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_8ee8

dec_label_pc_90fc:                                ; preds = %dec_label_pc_90e0, %dec_label_pc_8ed4
  %v0_90fc = call i32 @function_db88()
  %v3_9104 = urem i32 %v0_90fc, 65536
  store i32 %v3_9104, i32* %r0.global-to-local, align 4
  %v1_910c = sub nsw i32 999, %v3_9104
  store i32 %v1_910c, i32* %r2.global-to-local, align 4
  %v3_9110 = sdiv i32 %v1_910c, 256
  store i32 %v3_9110, i32* %r1.global-to-local, align 4
  %v3_911435 = udiv i32 %v3_9104, 256
  store i32 %v3_911435, i32* %r3.global-to-local, align 4
  %v1_9118 = trunc i32 %v3_911435 to i8
  %v2_9118 = load i32, i32* @r5, align 4
  %v3_9118 = add i32 %v2_9118, 5
  %v4_9118 = inttoptr i32 %v3_9118 to i8*
  store i8 %v1_9118, i8* %v4_9118, align 1
  %v0_911c = load i32, i32* %r0.global-to-local, align 4
  %v1_911c = trunc i32 %v0_911c to i8
  %v2_911c = load i32, i32* @r5, align 4
  %v3_911c = add i32 %v2_911c, 4
  %v4_911c = inttoptr i32 %v3_911c to i8*
  store i8 %v1_911c, i8* %v4_911c, align 1
  %v0_9120 = load i32, i32* %r1.global-to-local, align 4
  %v1_9120 = trunc i32 %v0_9120 to i8
  %v2_9120 = load i32, i32* @r6, align 4
  %v3_9120 = add i32 %v2_9120, 5
  %v4_9120 = inttoptr i32 %v3_9120 to i8*
  store i8 %v1_9120, i8* %v4_9120, align 1
  store i32 %v3_8bf0, i32* %r1.global-to-local, align 4
  %v1_9128 = load i32, i32* @r4, align 4
  %v9_9128 = icmp eq i32 %v3_8bf0, %v1_9128
  store i1 %v9_9128, i1* %cpsr_z.global-to-local, align 1
  %v0_912c = load i32, i32* %r2.global-to-local, align 4
  %v1_912c = trunc i32 %v0_912c to i8
  %v2_912c = load i32, i32* @r6, align 4
  %v3_912c = add i32 %v2_912c, 4
  %v4_912c = inttoptr i32 %v3_912c to i8*
  store i8 %v1_912c, i8* %v4_912c, align 1
  %v0_9130 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9130, label %dec_label_pc_9134, label %dec_label_pc_90fc.dec_label_pc_8ef4_crit_edge

dec_label_pc_90fc.dec_label_pc_8ef4_crit_edge:    ; preds = %dec_label_pc_90fc
  %v1_8ef8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_8ef4

dec_label_pc_9134:                                ; preds = %dec_label_pc_90fc, %dec_label_pc_8ee8
  %v0_9134 = call i32 @function_db88()
  %v1_9134 = trunc i32 %v0_9134 to i8
  store i32 %v0_9134, i32* %r0.global-to-local, align 4
  store i32 %v3_8bf4, i32* %r2.global-to-local, align 4
  %v4_913c = sdiv i32 %v0_9134, 256
  store i32 %v4_913c, i32* %r3.global-to-local, align 4
  %v1_9140 = load i32, i32* @r4, align 4
  %v9_9140 = icmp eq i32 %v3_8bf4, %v1_9140
  store i1 %v9_9140, i1* %cpsr_z.global-to-local, align 1
  %v3_9144 = load i32, i32* @r5, align 4
  %v4_9144 = add i32 %v3_9144, 58
  %v5_9144 = inttoptr i32 %v4_9144 to i8*
  store i8 %v1_9134, i8* %v5_9144, align 1
  %v0_9148 = load i32, i32* %r3.global-to-local, align 4
  %v1_9148 = trunc i32 %v0_9148 to i8
  %v2_9148 = load i32, i32* @r7, align 4
  %v3_9148 = add i32 %v2_9148, 1
  %v4_9148 = inttoptr i32 %v3_9148 to i8*
  store i8 %v1_9148, i8* %v4_9148, align 1
  %v0_914c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_914c, label %dec_label_pc_9150, label %dec_label_pc_8f00

dec_label_pc_9150:                                ; preds = %dec_label_pc_9134, %dec_label_pc_8ef4
  %v0_9150 = call i32 @function_db88()
  %v1_9150 = trunc i32 %v0_9150 to i8
  store i32 %v0_9150, i32* %r0.global-to-local, align 4
  %v4_915437 = udiv i32 %v0_9150, 256
  %v1_9158 = trunc i32 %v4_915437 to i8
  %v2_9158 = load i32, i32* @r7, align 4
  %v3_9158 = add i32 %v2_9158, 3
  %v4_9158 = inttoptr i32 %v3_9158 to i8*
  store i8 %v1_9158, i8* %v4_9158, align 1
  store i32 %v1_8be8, i32* %r3.global-to-local, align 4
  store i1 %v2_9160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9160, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_9150
  %v1_9164 = load i32, i32* @r5, align 4
  %v2_9164 = add i32 %v1_9164, 16
  %v3_9164 = inttoptr i32 %v2_9164 to i32*
  %v4_9164 = load i32, i32* %v3_9164, align 4
  store i32 %v4_9164, i32* %r3.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_9150, %bb101
  %v3_9168 = load i32, i32* @r7, align 4
  %v4_9168 = add i32 %v3_9168, 2
  %v5_9168 = inttoptr i32 %v4_9168 to i8*
  store i8 %v1_9150, i8* %v5_9168, align 1
  %v0_916c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_916c, label %dec_label_pc_9174, label %bb103

bb103:                                            ; preds = %bb102
  %v1_916c = load i32, i32* %r3.global-to-local, align 4
  %v2_916c = load i32, i32* @r6, align 4
  %v3_916c = add i32 %v2_916c, 16
  %v4_916c = inttoptr i32 %v3_916c to i32*
  store i32 %v1_916c, i32* %v4_916c, align 4
  br label %dec_label_pc_8f14

dec_label_pc_9174:                                ; preds = %dec_label_pc_8f00, %bb102
  %v0_9174 = call i32 @function_db88()
  store i32 %v0_9174, i32* %r0.global-to-local, align 4
  %v1_9178 = load i32, i32* @r6, align 4
  %v2_9178 = add i32 %v1_9178, 16
  %v3_9178 = inttoptr i32 %v2_9178 to i32*
  store i32 %v0_9174, i32* %v3_9178, align 4
  br label %dec_label_pc_8f14

dec_label_pc_9180:                                ; preds = %dec_label_pc_8f14
  %v0_9180 = load i32, i32* @r7, align 4
  %v1_9180 = add i32 %v0_9180, 8
  store i32 %v1_9180, i32* @r4, align 4
  store i32 %v1_9180, i32* %r0.global-to-local, align 4
  store i32 %v6_8b1c, i32* %r1.global-to-local, align 4
  %v2_918c = call i32 @function_dc3c(i32 %v1_9180, i32 %v6_8b1c)
  store i32 %v2_918c, i32* %r0.global-to-local, align 4
  store i32 %v6_8b1c, i32* %r2.global-to-local, align 4
  %v0_9194 = load i32, i32* @sl, align 4
  %v1_9194 = trunc i32 %v0_9194 to i8
  %v2_9194 = load i32, i32* @r4, align 4
  %v4_9194 = add i32 %v2_9194, %v6_8b1c
  %v5_9194 = inttoptr i32 %v4_9194 to i8*
  store i8 %v1_9194, i8* %v5_9194, align 1
  br label %dec_label_pc_8f78

dec_label_pc_919c:                                ; preds = %dec_label_pc_8f78, %dec_label_pc_8e94
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_91a0 = call i32 @function_11eb8(i32* null)
  store i32 %v2_91a0, i32* %r0.global-to-local, align 4
  store i32 %v2_8b80, i32* %r1.global-to-local, align 4
  %v9_91a8 = icmp eq i32 %v2_8b80, %v2_91a0
  store i1 %v9_91a8, i1* %cpsr_z.global-to-local, align 1
  %v6_91ac = icmp slt i32 %v2_8b80, %v2_91a0
  br i1 %v6_91ac, label %dec_label_pc_91b0, label %dec_label_pc_8e94

dec_label_pc_91b0:                                ; preds = %dec_label_pc_919c, %dec_label_pc_8b08, %dec_label_pc_91b8
  %v29_91b4 = phi i32 [ %v1_91bc, %dec_label_pc_91b8 ], [ %v3_8b94, %dec_label_pc_8b08 ], [ %v2_91a0, %dec_label_pc_919c ]
  ret i32 %v29_91b4

dec_label_pc_91b8:                                ; preds = %dec_label_pc_8ba4
  store i32 %v3_8b94, i32* %r0.global-to-local, align 4
  %v1_91bc = call i32 @function_11c68(i32 %v3_8b94)
  store i32 %v1_91bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_91b0

; uselistorder directives
  uselistorder i32 %v1_91bc, { 1, 0 }
  uselistorder i32 %v0_9150, { 0, 2, 1 }
  uselistorder i32 %v0_9134, { 0, 2, 1 }
  uselistorder i32 %v3_9104, { 0, 2, 1 }
  uselistorder i32 %v2_90d0, { 1, 0 }
  uselistorder i32 %v8_90b0, { 1, 2, 0 }
  uselistorder i32 %v3_909c, { 1, 0 }
  uselistorder i32 %v0_908c, { 2, 0, 1, 3 }
  uselistorder i32 %v7_9060, { 2, 1, 0, 3 }
  uselistorder i32 %v1_9038, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_8fdc, { 1, 0, 2 }
  uselistorder i32 %v4_8fd8, { 0, 2, 1 }
  uselistorder i32 %v0_8fb8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8fa8, { 0, 2, 1 }
  uselistorder i32 %v4_8f8c, { 1, 0 }
  uselistorder i1 %v2_9160, { 2, 3, 1, 0 }
  uselistorder i1 %v3_90f0, { 1, 0, 2, 3 }
  uselistorder i1 %v7_8ecc, { 2, 1, 0 }
  uselistorder i32 %v1_8eb8, { 1, 0, 2 }
  uselistorder i32 %v0_8e34, { 1, 0, 2 }
  uselistorder i32 %v3_8cc4, { 1, 0 }
  uselistorder i32 %tmp88, { 1, 0, 2 }
  uselistorder i32 %v1_8c40, { 0, 2, 1 }
  uselistorder i32 %v1_8c38, { 2, 1, 0 }
  uselistorder i32 %v1_8c34, { 1, 0 }
  uselistorder i32 %v1_8c30, { 1, 0 }
  uselistorder i32 %v1_8c24, { 1, 0 }
  uselistorder i32 %v3_8c1c, { 2, 0, 1 }
  uselistorder i32 %v3_8bec, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8be8, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_8bdc, { 0, 2, 1 }
  uselistorder i32 %v0_8bd8, { 0, 1, 3, 2 }
  uselistorder i1 %v7_8bc4, { 1, 0 }
  uselistorder i1 %v7_8b98, { 1, 0 }
  uselistorder i32 %v3_8b94, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_8b80, { 2, 1, 0 }
  uselistorder i32 %v6_8b70, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_8b3c, { 1, 2, 3, 0 }
  uselistorder i32 %v6_8b1c, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32* %stack_var_136, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32 %tmp67, { 2, 8, 7, 6, 3, 5, 4, 0, 1 }
  uselistorder i32 %tmp50, { 0, 3, 1, 2 }
  uselistorder i8 %tmp47, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 22, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 18, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 18, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 6, 5, 8, 7, 9, 12, 13, 10, 11, 15, 14, 17, 16, 18, 1, 19, 20, 22, 21, 23, 24, 25, 26, 28, 27, 32, 29, 30, 31, 35, 33, 34, 2, 0, 36, 37, 38, 39, 40, 41 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder label %dec_label_pc_91b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9174, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8f14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8e94, { 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_91c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_91c8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_91c8 = load i32, i32* @r4, align 4
  %v15_91c8 = load i32, i32* @r8, align 4
  %v21_91c8 = load i32, i32* @sl, align 4
  %v24_91c8 = load i32, i32* @fp, align 4
  %v1_91cc = urem i32 %arg2, 256
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v1_91cc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_91e8 = urem i32 %arg4, 256
  store i32 %v1_91e8, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_91f8 = call i32 @function_12630(i32 %v1_91cc, i32 4)
  %v0_91fc = load i32, i32* @r5, align 4
  store i32 %v0_91fc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_9208 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9208, i32* %r3.global-to-local, align 4
  %v0_920c = load i32, i32* @r4, align 4
  store i32 %v0_920c, i32* %r0.global-to-local, align 4
  %v5_9210 = inttoptr i32 %v0_91fc to i32*
  %v6_9210 = call i32 @function_83ec(i32 %v0_920c, i32* %v5_9210, i32 2, i32 %v0_9208, i32 %v2_91f8)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9228 = load i32, i32* @r5, align 4
  store i32 %v0_9228, i32* %r1.global-to-local, align 4
  %v0_922c = load i32, i32* @r4, align 4
  store i32 %v0_922c, i32* %r0.global-to-local, align 4
  %v5_9230 = trunc i32 %v6_9210 to i8
  %v6_9234 = inttoptr i32 %v0_9228 to i32*
  %v7_9234 = call i32 @function_83ec(i32 %v0_922c, i32* %v6_9234, i32 3, i32 65535, i32 %v6_9210)
  %v0_9238 = load i32, i32* @r5, align 4
  store i32 %v0_9238, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9234, i32* @r7, align 4
  %v0_9248 = load i32, i32* @r4, align 4
  store i32 %v0_9248, i32* %r0.global-to-local, align 4
  %v5_924c = inttoptr i32 %v0_9238 to i32*
  %v6_924c = call i32 @function_83ec(i32 %v0_9248, i32* %v5_924c, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v0_9258 = load i32, i32* @r5, align 4
  store i32 %v0_9258, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9264 = load i32, i32* @r4, align 4
  store i32 %v0_9264, i32* %r0.global-to-local, align 4
  %v5_9268 = trunc i32 %v6_924c to i8
  %v6_926c = inttoptr i32 %v0_9258 to i32*
  %v7_926c = call i32 @function_83ec(i32 %v0_9264, i32* %v6_926c, i32 5, i32 1, i32 %v6_924c)
  %v1_9278 = urem i32 %v7_926c, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9284 = load i32, i32* @r5, align 4
  store i32 %v0_9284, i32* %r1.global-to-local, align 4
  %v0_9288 = load i32, i32* @r4, align 4
  store i32 %v0_9288, i32* %r0.global-to-local, align 4
  %v5_9290 = inttoptr i32 %v0_9284 to i32*
  %v6_9290 = call i32 @function_83ec(i32 %v0_9288, i32* %v5_9290, i32 6, i32 65535, i32 %v1_9278)
  %v0_929c = load i32, i32* @r5, align 4
  store i32 %v0_929c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_92a8 = load i32, i32* @r4, align 4
  store i32 %v0_92a8, i32* %r0.global-to-local, align 4
  %v5_92ac = inttoptr i32 %v0_929c to i32*
  %v6_92ac = call i32 @function_83ec(i32 %v0_92a8, i32* %v5_92ac, i32 7, i32 65535, i32 %v6_9290)
  %v0_92b0 = load i32, i32* @r5, align 4
  store i32 %v0_92b0, i32* %r1.global-to-local, align 4
  %v0_92b4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92b4, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_92ac, i32* @sl, align 4
  %v0_92c0 = load i32, i32* @r4, align 4
  store i32 %v0_92c0, i32* %r0.global-to-local, align 4
  %v5_92c4 = inttoptr i32 %v0_92b0 to i32*
  %v6_92c4 = call i32 @function_83ec(i32 %v0_92c0, i32* %v5_92c4, i32 %v0_92b4, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_92d4 = load i32, i32* @r5, align 4
  store i32 %v0_92d4, i32* %r1.global-to-local, align 4
  %v0_92d8 = load i32, i32* @r4, align 4
  store i32 %v0_92d8, i32* %r0.global-to-local, align 4
  %v5_92dc = inttoptr i32 %v0_92d4 to i32*
  %v6_92dc = call i32 @function_83ec(i32 %v0_92d8, i32* %v5_92dc, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_92e4 = urem i32 %v6_92dc, 256
  %v0_92e8 = load i32, i32* @r5, align 4
  store i32 %v0_92e8, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_92f0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92f0, i32* %r3.global-to-local, align 4
  %v0_92f4 = load i32, i32* @r4, align 4
  store i32 %v0_92f4, i32* %r0.global-to-local, align 4
  %v5_92fc = inttoptr i32 %v0_92e8 to i32*
  %v6_92fc = call i32 @function_83ec(i32 %v0_92f4, i32* %v5_92fc, i32 18, i32 %v0_92f0, i32 %v1_92e4)
  %v0_9304 = load i32, i32* @r5, align 4
  store i32 %v0_9304, i32* %r1.global-to-local, align 4
  %v2_9308 = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_9308, i32* %r3.global-to-local, align 4
  store i32 %v6_92fc, i32* @r8, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_9314 = load i32, i32* @r4, align 4
  store i32 %v0_9314, i32* %r0.global-to-local, align 4
  %v5_9318 = inttoptr i32 %v0_9304 to i32*
  %v6_9318 = call i32 @function_83ec(i32 %v0_9314, i32* %v5_9318, i32 19, i32 %v2_9308, i32 ptrtoint (i32* @0 to i32))
  %v0_9320 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9320, i32* %r0.global-to-local, align 4
  %v1_9324 = inttoptr i32 %v0_9320 to i32*
  %v2_9324 = call i32 @function_11eb8(i32* %v1_9324)
  %v1_9328 = load i32, i32* @r6, align 4
  %v2_9328 = add i32 %v1_9328, %v2_9324
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_933c = call i32 @function_124b0(i32 2, i32 3, i32 6)
  store i32 %v3_933c, i32* %r0.global-to-local, align 4
  %v7_9340 = icmp eq i32 %v3_933c, -1
  store i1 %v7_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9340, label %dec_label_pc_98e8, label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %dec_label_pc_91c8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9354 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9354, i32* %r3.global-to-local, align 4
  %v0_935c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_935c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_9368 = call i32 @function_12480(i32 %v3_933c, i32 %v0_935c, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_9368, i32* %r0.global-to-local, align 4
  %v7_936c = icmp eq i32 %v6_9368, -1
  store i1 %v7_936c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_936c, label %dec_label_pc_98f0, label %dec_label_pc_9374

dec_label_pc_9374:                                ; preds = %dec_label_pc_934c
  %v0_9380 = load i32, i32* @sl, align 4
  %v3_9380 = mul i32 %v0_9380, 65536
  store i32 %v3_9380, i32* %sl.global-to-local, align 4
  %v0_9384 = load i32, i32* @r7, align 4
  %v2_938c = icmp eq i32 %v1_91cc, 0
  store i1 %v2_938c, i1* %cpsr_z.global-to-local, align 1
  %v0_9390 = load i32, i32* @r8, align 4
  %v1_9390 = urem i32 %v0_9390, 256
  store i32 %v1_9390, i32* %r8.global-to-local, align 4
  %v3_9394 = urem i32 %v0_9384, 65536
  store i32 %v3_9394, i32* %r3.global-to-local, align 4
  %v3_9398 = urem i32 %v6_9290, 65536
  store i32 %v3_9398, i32* %r1.global-to-local, align 4
  %v3_939c = urem i32 %v0_9380, 65536
  store i32 %v3_939c, i32* %r2.global-to-local, align 4
  %v0_93a8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_93a8, i32* %stack_var_-40, align 4
  br i1 %v2_938c, label %dec_label_pc_9628.preheader, label %dec_label_pc_93bc

dec_label_pc_93bc:                                ; preds = %dec_label_pc_9374
  %v3_93c4 = mul i32 %v6_92c4, 65536
  %v1_93cc = urem i32 %v6_9290, 256
  %v1_93d4 = add i32 %v3_93c4, 524288
  %v1_93d8 = add i32 %v3_93c4, 3407872
  %v1_93dc = urem i32 %v0_9380, 256
  %v1_93e0 = add i32 %v3_93c4, 1835008
  %v0_9384.not = or i32 %v0_9384, -65536
  %v1_93e8 = xor i32 %v0_9384.not, 65535
  %v3_93ec = udiv i32 %v1_93e0, 256
  %tmp77 = udiv i32 %v0_9384, 256
  %v1_9400 = and i32 %v3_93ec, 65280
  store i32 %v1_9400, i32* %r0.global-to-local, align 4
  %v3_9424 = mul nuw nsw i32 %v1_93cc, 256
  %tmp78 = udiv i32 %v6_9290, 256
  %v4_942c = urem i32 %tmp78, 256
  %v5_942c = or i32 %v4_942c, %v3_9424
  store i32 %v5_942c, i32* @lr, align 4
  %tmp79 = mul nsw i32 %v1_93e8, 256
  %v3_9434 = mul nuw nsw i32 %v1_93dc, 256
  %sext23 = mul i32 %tmp77, 16777216
  %v4_943c = sdiv i32 %sext23, 16777216
  %v4_9404 = sdiv i32 %v1_93d8, 16777216
  %tmp80 = udiv i32 %v0_9380, 256
  %v4_9444 = urem i32 %tmp80, 256
  %v5_9444 = or i32 %v4_9444, %v3_9434
  store i32 %v5_9444, i32* @r7, align 4
  %v1_9448 = and i32 %tmp79, 65280
  %v4_944c = sdiv i32 %v1_93e0, 16777216
  %v3_9450 = udiv i32 %v1_93d4, 256
  %tmp81 = udiv i32 %v1_93e8, 256
  %v4_9454 = urem i32 %tmp81, 256
  %v5_9454 = or i32 %v4_9454, %v1_9448
  store i32 %v5_9454, i32* @r6, align 4
  %v3_9458 = ashr i32 %v1_93d8, 31
  %v3_945c = ashr i32 %sext23, 31
  %v1_9460 = and i32 %v3_9450, 65280
  store i32 %v1_9460, i32* @r5, align 4
  %v3_946c = ashr i32 %v1_93e0, 31
  store i32 %v3_946c, i32* %r2.global-to-local, align 4
  %v3_947032 = udiv i32 %v1_9448, 256
  store i32 %v3_947032, i32* %r3.global-to-local, align 4
  store i32 %v1_93cc, i32* %r1.global-to-local, align 4
  %v4_9478 = udiv i32 %v1_93d4, 16777216
  %v5_9478 = or i32 %v4_9478, %v1_9460
  store i32 %v5_9478, i32* %r8.global-to-local, align 4
  %v5_947c = trunc i32 %tmp81 to i8
  store i32 %v0_93a8, i32* @r4, align 4
  %v3_949433 = udiv i32 %v1_9460, 256
  store i32 %v3_949433, i32* %sl.global-to-local, align 4
  store i32 %v1_93dc, i32* %fp.global-to-local, align 4
  %sext15 = mul i32 %v1_93e8, 16777216
  %v4_95a4 = sdiv i32 %sext15, 16777216
  %v2_95d4 = icmp eq i32 %v1_9390, 0
  %sext16 = mul i32 %v6_9290, 16777216
  %v4_95e8 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %tmp78, 16777216
  %v4_9604 = sdiv i32 %sext17, 16777216
  %v1_9500 = trunc i32 %v4_943c to i8
  br label %dec_label_pc_949c

dec_label_pc_949c:                                ; preds = %bb92, %dec_label_pc_93bc
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_94a8 = call i32 @function_12630(i32 1510, i32 4)
  store i32 %v2_94a8, i32* %r0.global-to-local, align 4
  store i32 %v2_91f8, i32* %r2.global-to-local, align 4
  %v3_94b0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_94b0, i32* %r3.global-to-local, align 4
  %v2_94b4 = load i32, i32* @r4, align 4
  %v5_94b4 = mul i32 %v2_94b4, 4
  %v6_94b4 = add i32 %v5_94b4, %v2_91f8
  %v7_94b4 = inttoptr i32 %v6_94b4 to i32*
  store i32 %v2_94a8, i32* %v7_94b4, align 4
  %v0_94b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_94b8 = load i32, i32* %r3.global-to-local, align 4
  %v4_94b8 = mul i32 %v1_94b8, 4
  %v5_94b8 = add i32 %v4_94b8, %v0_94b8
  %v6_94b8 = inttoptr i32 %v5_94b8 to i32*
  %v7_94b8 = load i32, i32* %v6_94b8, align 4
  store i32 %v7_94b8, i32* %r4.global-to-local, align 4
  %v1_94bc = inttoptr i32 %v7_94b8 to i8*
  %v2_94bc = load i8, i8* %v1_94bc, align 1
  %tmp = urem i8 %v2_94bc, 16
  %v1_94c0 = zext i8 %tmp to i32
  %v1_94c4 = or i32 %v1_94c0, 64
  store i32 %v1_94c4, i32* %r2.global-to-local, align 4
  %v1_94c8 = trunc i32 %v1_94c4 to i8
  store i8 %v1_94c8, i8* %v1_94bc, align 1
  %v0_94cc = load i32, i32* %r4.global-to-local, align 4
  %v1_94cc = inttoptr i32 %v0_94cc to i8*
  %v2_94cc = load i8, i8* %v1_94cc, align 1
  %v1_94d0 = and i8 %v2_94cc, -16
  %v1_94d4 = or i8 %v1_94d0, 5
  store i32 %v1_9278, i32* %r1.global-to-local, align 4
  store i8 %v1_94d4, i8* %v1_94cc, align 1
  %v2_94e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_94e4 = add i32 %v2_94e4, 1
  %v4_94e4 = inttoptr i32 %v3_94e4 to i8*
  store i8 %v5_9230, i8* %v4_94e4, align 1
  %v2_94ec = load i32, i32* %r4.global-to-local, align 4
  %v3_94ec = add i32 %v2_94ec, 8
  %v4_94ec = inttoptr i32 %v3_94ec to i8*
  store i8 %v5_9268, i8* %v4_94ec, align 1
  store i32 %v4_943c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_94f8 = load i32, i32* %r1.global-to-local, align 4
  %v9_94f8 = icmp eq i32 %v0_94f8, 0
  store i1 %v9_94f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9458, i32* %r2.global-to-local, align 4
  %v2_9500 = load i32, i32* %r4.global-to-local, align 4
  %v3_9500 = add i32 %v2_9500, 4
  %v4_9500 = inttoptr i32 %v3_9500 to i8*
  store i8 %v1_9500, i8* %v4_9500, align 1
  store i32 %v4_9404, i32* %r1.global-to-local, align 4
  %v0_9508 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9508, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_949c
  %v1_9508 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_9508, i32* %r3.global-to-local, align 4
  %v2_950c = trunc i32 %v1_9508 to i8
  %v3_950c = load i32, i32* %r4.global-to-local, align 4
  %v4_950c = add i32 %v3_950c, 7
  %v5_950c = inttoptr i32 %v4_950c to i8*
  store i8 %v2_950c, i8* %v5_950c, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_949c, %bb
  store i32 47, i32* %r3.global-to-local, align 4
  %v0_9514 = load i32, i32* %r2.global-to-local, align 4
  %v1_9514 = trunc i32 %v0_9514 to i8
  %v2_9514 = load i32, i32* %r4.global-to-local, align 4
  %v3_9514 = add i32 %v2_9514, 3
  %v4_9514 = inttoptr i32 %v3_9514 to i8*
  store i8 %v1_9514, i8* %v4_9514, align 1
  %v0_9518 = load i32, i32* %r1.global-to-local, align 4
  %v1_9518 = trunc i32 %v0_9518 to i8
  %v2_9518 = load i32, i32* %r4.global-to-local, align 4
  %v3_9518 = add i32 %v2_9518, 2
  %v4_9518 = inttoptr i32 %v3_9518 to i8*
  store i8 %v1_9518, i8* %v4_9518, align 1
  %v0_951c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_951c, label %bb83, label %bb82

bb82:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %.thread, %bb82
  store i32 %v3_945c, i32* %r1.global-to-local, align 4
  %v0_9524 = load i32, i32* %r3.global-to-local, align 4
  %v1_9524 = trunc i32 %v0_9524 to i8
  %v2_9524 = load i32, i32* %r4.global-to-local, align 4
  %v3_9524 = add i32 %v2_9524, 9
  %v4_9524 = inttoptr i32 %v3_9524 to i8*
  store i8 %v1_9524, i8* %v4_9524, align 1
  %v0_9528 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9528, label %bb85, label %bb84

bb84:                                             ; preds = %bb83
  %v1_9528 = load i32, i32* %r2.global-to-local, align 4
  %v2_9528 = trunc i32 %v1_9528 to i8
  %v3_9528 = load i32, i32* %r4.global-to-local, align 4
  %v4_9528 = add i32 %v3_9528, 6
  %v5_9528 = inttoptr i32 %v4_9528 to i8*
  store i8 %v2_9528, i8* %v5_9528, align 1
  br label %bb85

bb85:                                             ; preds = %bb83, %bb84
  %v3_952c = load i32, i32* %stack_var_-40, align 4
  %v5_9534 = mul i32 %v3_952c, 24
  store i32 %v5_9534, i32* %r3.global-to-local, align 4
  store i32 %v6_9318, i32* %r2.global-to-local, align 4
  %v1_953c = load i32, i32* %r4.global-to-local, align 4
  %v2_953c = add i32 %v1_953c, 12
  %v3_953c = inttoptr i32 %v2_953c to i32*
  store i32 %v6_9318, i32* %v3_953c, align 4
  %v0_9540 = load i32, i32* %r3.global-to-local, align 4
  %v1_9540 = load i32, i32* @sb, align 4
  %v2_9540 = add i32 %v1_9540, %v0_9540
  store i32 %v2_9540, i32* %r3.global-to-local, align 4
  %v0_9544 = load i32, i32* %r1.global-to-local, align 4
  %v1_9544 = trunc i32 %v0_9544 to i8
  %v2_9544 = load i32, i32* %r4.global-to-local, align 4
  %v3_9544 = add i32 %v2_9544, 5
  %v4_9544 = inttoptr i32 %v3_9544 to i8*
  store i8 %v1_9544, i8* %v4_9544, align 1
  %v0_9548 = load i32, i32* %r3.global-to-local, align 4
  %v1_9548 = add i32 %v0_9548, 16
  %v2_9548 = inttoptr i32 %v1_9548 to i32*
  %v3_9548 = load i32, i32* %v2_9548, align 4
  store i32 %v3_9548, i32* %r2.global-to-local, align 4
  %v0_954c = load i32, i32* %r4.global-to-local, align 4
  %v1_954c = add i32 %v0_954c, 20
  store i32 %v1_954c, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_9554 = load i32, i32* %r0.global-to-local, align 4
  %v1_9554 = trunc i32 %v0_9554 to i8
  %v3_9554 = add i32 %v0_954c, 23
  %v4_9554 = inttoptr i32 %v3_9554 to i8*
  store i8 %v1_9554, i8* %v4_9554, align 1
  %v0_9558 = load i32, i32* %r3.global-to-local, align 4
  %v1_9558 = trunc i32 %v0_9558 to i8
  %v2_9558 = load i32, i32* %r1.global-to-local, align 4
  %v3_9558 = add i32 %v2_9558, 2
  %v4_9558 = inttoptr i32 %v3_9558 to i8*
  store i8 %v1_9558, i8* %v4_9558, align 1
  %v0_955c = load i32, i32* %r4.global-to-local, align 4
  %v1_955c = add i32 %v0_955c, 24
  %v2_955c = inttoptr i32 %v1_955c to i8*
  %v3_955c = load i8, i8* %v2_955c, align 1
  %tmp98 = urem i8 %v3_955c, 16
  %v1_9560 = zext i8 %tmp98 to i32
  %v1_9564 = or i32 %v1_9560, 64
  store i32 %v1_9564, i32* %r3.global-to-local, align 4
  %v1_9568 = trunc i32 %v1_9564 to i8
  store i8 %v1_9568, i8* %v2_955c, align 1
  %v0_956c = load i32, i32* %r2.global-to-local, align 4
  %v1_956c = load i32, i32* %r4.global-to-local, align 4
  %v2_956c = add i32 %v1_956c, 16
  %v3_956c = inttoptr i32 %v2_956c to i32*
  store i32 %v0_956c, i32* %v3_956c, align 4
  %v0_9570 = load i32, i32* %r4.global-to-local, align 4
  %v1_9570 = add i32 %v0_9570, 24
  %v2_9570 = inttoptr i32 %v1_9570 to i8*
  %v3_9570 = load i8, i8* %v2_9570, align 1
  %v1_9574 = and i8 %v3_9570, -16
  %v1_9578 = or i8 %v1_9574, 5
  store i8 %v1_9578, i8* %v2_9570, align 1
  %v0_9584 = load i32, i32* %r4.global-to-local, align 4
  %v1_9584 = add i32 %v0_9584, 24
  store i32 %v1_9584, i32* @r5, align 4
  %v3_9588 = add i32 %v0_9584, 25
  %v4_9588 = inttoptr i32 %v3_9588 to i8*
  store i8 %v5_9230, i8* %v4_9588, align 1
  store i32 %v4_944c, i32* %r1.global-to-local, align 4
  store i32 %tmp81, i32* %r3.global-to-local, align 4
  store i32 %v3_946c, i32* %r2.global-to-local, align 4
  %v2_9598 = load i32, i32* @r5, align 4
  %v3_9598 = add i32 %v2_9598, 4
  %v4_9598 = inttoptr i32 %v3_9598 to i8*
  store i8 %v5_947c, i8* %v4_9598, align 1
  %v0_959c = load i32, i32* %r1.global-to-local, align 4
  %v1_959c = trunc i32 %v0_959c to i8
  %v2_959c = load i32, i32* @r5, align 4
  %v3_959c = add i32 %v2_959c, 2
  %v4_959c = inttoptr i32 %v3_959c to i8*
  store i8 %v1_959c, i8* %v4_959c, align 1
  %v0_95a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_95a0, label %bb87, label %bb86

bb86:                                             ; preds = %bb85
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb87

bb87:                                             ; preds = %bb85, %bb86
  store i32 %v4_95a4, i32* %r1.global-to-local, align 4
  %v0_95a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_95a8 = trunc i32 %v0_95a8 to i8
  %v2_95a8 = load i32, i32* @r5, align 4
  %v3_95a8 = add i32 %v2_95a8, 3
  %v4_95a8 = inttoptr i32 %v3_95a8 to i8*
  store i8 %v1_95a8, i8* %v4_95a8, align 1
  store i32 %v6_924c, i32* %r2.global-to-local, align 4
  %v0_95b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_95b0, label %bb89, label %bb88

bb88:                                             ; preds = %bb87
  %v1_95b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_95b0 = trunc i32 %v1_95b0 to i8
  %v3_95b0 = load i32, i32* @r5, align 4
  %v4_95b0 = add i32 %v3_95b0, 6
  %v5_95b0 = inttoptr i32 %v4_95b0 to i8*
  store i8 %v2_95b0, i8* %v5_95b0, align 1
  br label %bb89

bb89:                                             ; preds = %bb87, %bb88
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_95b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_95b8 = trunc i32 %v0_95b8 to i8
  %v2_95b8 = load i32, i32* @r5, align 4
  %v3_95b8 = add i32 %v2_95b8, 5
  %v4_95b8 = inttoptr i32 %v3_95b8 to i8*
  store i8 %v1_95b8, i8* %v4_95b8, align 1
  %v0_95bc = load i32, i32* %r2.global-to-local, align 4
  %v1_95bc = trunc i32 %v0_95bc to i8
  %v2_95bc = load i32, i32* @r5, align 4
  %v3_95bc = add i32 %v2_95bc, 8
  %v4_95bc = inttoptr i32 %v3_95bc to i8*
  store i8 %v1_95bc, i8* %v4_95bc, align 1
  %v0_95c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_95c0, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v1_95c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_95c0 = trunc i32 %v1_95c0 to i8
  %v3_95c0 = load i32, i32* @r5, align 4
  %v4_95c0 = add i32 %v3_95c0, 7
  %v5_95c0 = inttoptr i32 %v4_95c0 to i8*
  store i8 %v2_95c0, i8* %v5_95c0, align 1
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_95c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_95c4 = trunc i32 %v0_95c4 to i8
  %v2_95c4 = load i32, i32* @r5, align 4
  %v3_95c4 = add i32 %v2_95c4, 9
  %v4_95c4 = inttoptr i32 %v3_95c4 to i8*
  store i8 %v1_95c4, i8* %v4_95c4, align 1
  %v0_95c8 = call i32 @function_db88()
  store i32 %v0_95c8, i32* %r0.global-to-local, align 4
  store i32 %v1_9390, i32* %r1.global-to-local, align 4
  store i1 %v2_95d4, i1* %cpsr_z.global-to-local, align 1
  %v1_95d8 = sub i32 1023, %v0_95c8
  store i32 %v1_95d8, i32* %r3.global-to-local, align 4
  br i1 %v2_95d4, label %.thread18, label %.thread19

.thread18:                                        ; preds = %bb91
  %v2_95e0 = load i32, i32* @r5, align 4
  %v3_95e0 = add i32 %v2_95e0, 16
  %v4_95e0 = inttoptr i32 %v3_95e0 to i32*
  store i32 %v1_95d8, i32* %v4_95e0, align 4
  br label %bb92

.thread19:                                        ; preds = %bb91
  %v1_95dc = load i32, i32* %r4.global-to-local, align 4
  %v2_95dc = add i32 %v1_95dc, 16
  %v3_95dc = inttoptr i32 %v2_95dc to i32*
  %v4_95dc = load i32, i32* %v3_95dc, align 4
  store i32 %v4_95dc, i32* %r3.global-to-local, align 4
  %v2_95e4 = load i32, i32* @r5, align 4
  %v3_95e4 = add i32 %v2_95e4, 16
  %v4_95e4 = inttoptr i32 %v3_95e4 to i32*
  store i32 %v4_95dc, i32* %v4_95e4, align 4
  br label %bb92

bb92:                                             ; preds = %.thread18, %.thread19
  store i32 %v4_95e8, i32* %r3.global-to-local, align 4
  %v0_95ec = load i32, i32* %r4.global-to-local, align 4
  %v1_95ec = add i32 %v0_95ec, 44
  store i32 %v1_95ec, i32* @r6, align 4
  %v1_95f0 = load i32, i32* @r5, align 4
  %v2_95f0 = add i32 %v1_95f0, 12
  %v3_95f0 = inttoptr i32 %v2_95f0 to i32*
  store i32 %v0_95c8, i32* %v3_95f0, align 4
  %v0_95f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_95f4 = trunc i32 %v0_95f4 to i8
  %v2_95f4 = load i32, i32* @r6, align 4
  %v3_95f4 = add i32 %v2_95f4, 1
  %v4_95f4 = inttoptr i32 %v3_95f4 to i8*
  store i8 %v1_95f4, i8* %v4_95f4, align 1
  %v3_95f8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_95f8, i32* %r3.global-to-local, align 4
  store i32 %v1_91cc, i32* %r1.global-to-local, align 4
  %v1_9600 = add i32 %v3_95f8, 1
  store i32 %v1_9600, i32* @r4, align 4
  store i32 %v4_9604, i32* %r2.global-to-local, align 4
  %v9_9608 = icmp eq i32 %v1_9600, %v1_91cc
  store i1 %v9_9608, i1* %cpsr_z.global-to-local, align 1
  %v0_960c = load i32, i32* %sl.global-to-local, align 4
  %v1_960c = trunc i32 %v0_960c to i8
  %v2_960c = load i32, i32* @r6, align 4
  %v3_960c = add i32 %v2_960c, 5
  %v4_960c = inttoptr i32 %v3_960c to i8*
  store i8 %v1_960c, i8* %v4_960c, align 1
  %v0_9610 = load i32, i32* %r2.global-to-local, align 4
  %v1_9610 = trunc i32 %v0_9610 to i8
  %v2_9610 = load i32, i32* @r6, align 4
  %v3_9610 = inttoptr i32 %v2_9610 to i8*
  store i8 %v1_9610, i8* %v3_9610, align 1
  %v0_9614 = load i32, i32* @r7, align 4
  %v1_9614 = trunc i32 %v0_9614 to i8
  %v2_9614 = load i32, i32* @r6, align 4
  %v3_9614 = add i32 %v2_9614, 2
  %v4_9614 = inttoptr i32 %v3_9614 to i8*
  store i8 %v1_9614, i8* %v4_9614, align 1
  %v0_9618 = load i32, i32* %fp.global-to-local, align 4
  %v1_9618 = trunc i32 %v0_9618 to i8
  %v2_9618 = load i32, i32* @r6, align 4
  %v3_9618 = add i32 %v2_9618, 3
  %v4_9618 = inttoptr i32 %v3_9618 to i8*
  store i8 %v1_9618, i8* %v4_9618, align 1
  %v0_961c = load i32, i32* %r8.global-to-local, align 4
  %v1_961c = trunc i32 %v0_961c to i8
  %v2_961c = load i32, i32* @r6, align 4
  %v3_961c = add i32 %v2_961c, 4
  %v4_961c = inttoptr i32 %v3_961c to i8*
  store i8 %v1_961c, i8* %v4_961c, align 1
  %v0_9620 = load i32, i32* @r4, align 4
  store i32 %v0_9620, i32* %stack_var_-40, align 4
  %v5_9624 = icmp slt i32 %v1_9600, %v1_91cc
  br i1 %v5_9624, label %dec_label_pc_949c, label %dec_label_pc_9628.preheader

dec_label_pc_9628.preheader:                      ; preds = %bb92, %dec_label_pc_9374
  %v1_9648 = add i32 %v6_92c4, 8
  %v1_964c = add i32 %v6_92c4, 52
  %v2_9658 = icmp eq i32 %v6_9318, -1
  %v7_9658 = icmp eq i32 %v6_9318, -1
  %v3_9820 = icmp eq i32 %v3_9394, 65535
  %v2_9890 = icmp eq i32 %v1_9390, 0
  %v2_98ac = icmp eq i32 %v1_92e4, 0
  br label %dec_label_pc_9628

dec_label_pc_9628:                                ; preds = %dec_label_pc_9628.preheader, %dec_label_pc_98d4
  store i32 %v1_91cc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_938c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_938c, label %dec_label_pc_98d4, label %dec_label_pc_963c

dec_label_pc_963c:                                ; preds = %dec_label_pc_9628
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v6_92c4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v1_9648, i32* @fp, align 4
  store i32 %v1_964c, i32* @sl, align 4
  br label %dec_label_pc_9780

dec_label_pc_9654:                                ; preds = %dec_label_pc_9780
  store i32 %v6_9318, i32* %r2.global-to-local, align 4
  store i1 %v7_9658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9658, label %dec_label_pc_9810, label %dec_label_pc_9660

dec_label_pc_9660:                                ; preds = %dec_label_pc_97a8, %dec_label_pc_9654
  store i32 %v3_9394, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9820, label %dec_label_pc_982c, label %dec_label_pc_9674

dec_label_pc_9674:                                ; preds = %dec_label_pc_9810.dec_label_pc_9674_crit_edge, %dec_label_pc_9660
  %v1_9678 = phi i32 [ %v1_9678.pre, %dec_label_pc_9810.dec_label_pc_9674_crit_edge ], [ 65535, %dec_label_pc_9660 ]
  store i32 %v3_9398, i32* %r1.global-to-local, align 4
  %v9_9678 = icmp eq i32 %v3_9398, %v1_9678
  store i1 %v9_9678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9678, label %dec_label_pc_9864, label %dec_label_pc_9680

dec_label_pc_9680:                                ; preds = %dec_label_pc_982c.dec_label_pc_9680_crit_edge, %dec_label_pc_9674
  %v1_9684 = phi i32 [ %v1_9684.pre, %dec_label_pc_982c.dec_label_pc_9680_crit_edge ], [ %v1_9678, %dec_label_pc_9674 ]
  store i32 %v3_939c, i32* %r2.global-to-local, align 4
  %v9_9684 = icmp eq i32 %v3_939c, %v1_9684
  store i1 %v9_9684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9684, label %dec_label_pc_9880, label %dec_label_pc_968c

dec_label_pc_968c:                                ; preds = %dec_label_pc_9864, %dec_label_pc_9680
  store i32 %v1_9390, i32* %r3.global-to-local, align 4
  store i1 %v2_9890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9890, label %dec_label_pc_98a4, label %.thread20

.thread20:                                        ; preds = %dec_label_pc_968c
  %v1_9694 = load i32, i32* @r5, align 4
  %v2_9694 = add i32 %v1_9694, 16
  %v3_9694 = inttoptr i32 %v2_9694 to i32*
  %v4_9694 = load i32, i32* %v3_9694, align 4
  store i32 %v4_9694, i32* %r3.global-to-local, align 4
  %v2_9698 = load i32, i32* @r6, align 4
  %v3_9698 = add i32 %v2_9698, 16
  %v4_9698 = inttoptr i32 %v3_9698 to i32*
  store i32 %v4_9694, i32* %v4_9698, align 4
  br label %dec_label_pc_96a0

dec_label_pc_96a0:                                ; preds = %bb97, %.thread20
  store i32 %v1_92e4, i32* %r1.global-to-local, align 4
  store i1 %v2_98ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_98ac, label %dec_label_pc_96ac, label %dec_label_pc_98b8

dec_label_pc_96ac:                                ; preds = %dec_label_pc_96a0, %dec_label_pc_98a4, %dec_label_pc_98b8
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_96b0 = load i32, i32* @r8, align 4
  %v1_96b0 = trunc i32 %v0_96b0 to i8
  %v2_96b0 = load i32, i32* @r5, align 4
  %v3_96b0 = add i32 %v2_96b0, 10
  %v4_96b0 = inttoptr i32 %v3_96b0 to i8*
  store i8 %v1_96b0, i8* %v4_96b0, align 1
  %v0_96b4 = load i32, i32* @r8, align 4
  %v1_96b4 = trunc i32 %v0_96b4 to i8
  %v2_96b4 = load i32, i32* @r5, align 4
  %v3_96b4 = add i32 %v2_96b4, 11
  %v4_96b4 = inttoptr i32 %v3_96b4 to i8*
  store i8 %v1_96b4, i8* %v4_96b4, align 1
  %v0_96b8 = load i32, i32* @r5, align 4
  store i32 %v0_96b8, i32* @r0, align 4
  %v2_96bc = call i32 @function_c7e0(i32 %v0_96b8, i32 20)
  %v3_96bc = trunc i32 %v2_96bc to i8
  %v4_96c0 = sdiv i32 %v2_96bc, 256
  store i32 %v4_96c0, i32* %r3.global-to-local, align 4
  %v1_96c4 = trunc i32 %v4_96c0 to i8
  %v2_96c4 = load i32, i32* @r5, align 4
  %v3_96c4 = add i32 %v2_96c4, 11
  %v4_96c4 = inttoptr i32 %v3_96c4 to i8*
  store i8 %v1_96c4, i8* %v4_96c4, align 1
  %v3_96c8 = load i32, i32* @r5, align 4
  %v4_96c8 = add i32 %v3_96c8, 10
  %v5_96c8 = inttoptr i32 %v4_96c8 to i8*
  store i8 %v3_96bc, i8* %v5_96c8, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_96d0 = load i32, i32* @r8, align 4
  %v1_96d0 = trunc i32 %v0_96d0 to i8
  %v2_96d0 = load i32, i32* @r6, align 4
  %v3_96d0 = add i32 %v2_96d0, 10
  %v4_96d0 = inttoptr i32 %v3_96d0 to i8*
  store i8 %v1_96d0, i8* %v4_96d0, align 1
  %v0_96d4 = load i32, i32* @r8, align 4
  %v1_96d4 = trunc i32 %v0_96d4 to i8
  %v2_96d4 = load i32, i32* @r6, align 4
  %v3_96d4 = add i32 %v2_96d4, 11
  %v4_96d4 = inttoptr i32 %v3_96d4 to i8*
  store i8 %v1_96d4, i8* %v4_96d4, align 1
  %v0_96d8 = load i32, i32* @r6, align 4
  store i32 %v0_96d8, i32* @r0, align 4
  %v2_96dc = call i32 @function_c7e0(i32 %v0_96d8, i32 20)
  %v3_96dc = trunc i32 %v2_96dc to i8
  store i32 %v2_96dc, i32* %r0.global-to-local, align 4
  %v4_96e0 = sdiv i32 %v2_96dc, 256
  store i32 %v4_96e0, i32* %r3.global-to-local, align 4
  %v3_96e4 = load i32, i32* @r6, align 4
  %v4_96e4 = add i32 %v3_96e4, 10
  %v5_96e4 = inttoptr i32 %v4_96e4 to i8*
  store i8 %v3_96dc, i8* %v5_96e4, align 1
  %v0_96e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_96e8 = trunc i32 %v0_96e8 to i8
  %v2_96e8 = load i32, i32* @r6, align 4
  %v3_96e8 = add i32 %v2_96e8, 11
  %v4_96e8 = inttoptr i32 %v3_96e8 to i8*
  store i8 %v1_96e8, i8* %v4_96e8, align 1
  %v0_96ec = load i32, i32* @r7, align 4
  %v1_96ec = add i32 %v0_96ec, 4
  %v2_96ec = inttoptr i32 %v1_96ec to i8*
  %v3_96ec = load i8, i8* %v2_96ec, align 1
  %v4_96ec = zext i8 %v3_96ec to i32
  store i32 %v4_96ec, i32* %r3.global-to-local, align 4
  %v1_96f0 = add i32 %v0_96ec, 5
  %v2_96f0 = inttoptr i32 %v1_96f0 to i8*
  %v3_96f0 = load i8, i8* %v2_96f0, align 1
  %v4_96f0 = zext i8 %v3_96f0 to i32
  store i32 %v0_96ec, i32* @r1, align 4
  %v4_96f8 = mul nuw nsw i32 %v4_96f0, 256
  %v5_96f8 = or i32 %v4_96f8, %v4_96ec
  store i32 %v5_96f8, i32* %r2.global-to-local, align 4
  %v0_96fc = load i32, i32* @r8, align 4
  %v1_96fc = trunc i32 %v0_96fc to i8
  %v3_96fc = add i32 %v0_96ec, 6
  %v4_96fc = inttoptr i32 %v3_96fc to i8*
  store i8 %v1_96fc, i8* %v4_96fc, align 1
  %v0_9700 = load i32, i32* @fp, align 4
  store i32 %v0_9700, i32* %r3.global-to-local, align 4
  %v0_9704 = load i32, i32* @r8, align 4
  %v1_9704 = trunc i32 %v0_9704 to i8
  %v2_9704 = load i32, i32* @r7, align 4
  %v3_9704 = add i32 %v2_9704, 7
  %v4_9704 = inttoptr i32 %v3_9704 to i8*
  store i8 %v1_9704, i8* %v4_9704, align 1
  %v0_9708 = load i32, i32* @r6, align 4
  store i32 %v0_9708, i32* %r0.global-to-local, align 4
  %v4_970c = call i32 @function_c83c(i32 %v0_9708, i32 %v0_96ec, i32 %v5_96f8, i32 %v0_9700)
  %v5_970c = trunc i32 %v4_970c to i8
  store i32 %v4_970c, i32* %r0.global-to-local, align 4
  %v3_9710 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9710, i32* %r3.global-to-local, align 4
  %v3_9714 = mul i32 %v3_9710, 32
  store i32 %v3_9714, i32* %r2.global-to-local, align 4
  %v0_9718 = load i32, i32* @r5, align 4
  %v1_9718 = add i32 %v0_9718, 16
  %v2_9718 = inttoptr i32 %v1_9718 to i32*
  %v3_9718 = load i32, i32* %v2_9718, align 4
  store i32 %v3_9718, i32* %r1.global-to-local, align 4
  %v5_971c = mul i32 %v3_9710, 24
  store i32 %v5_971c, i32* %r2.global-to-local, align 4
  %v4_972035 = udiv i32 %v4_970c, 256
  %v1_9724 = trunc i32 %v4_972035 to i8
  %v2_9724 = load i32, i32* @r7, align 4
  %v3_9724 = add i32 %v2_9724, 7
  %v4_9724 = inttoptr i32 %v3_9724 to i8*
  store i8 %v1_9724, i8* %v4_9724, align 1
  %v0_9728 = load i32, i32* %r2.global-to-local, align 4
  %v1_9728 = load i32, i32* @sb, align 4
  %v2_9728 = add i32 %v1_9728, %v0_9728
  store i32 %v2_9728, i32* @lr, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_9730 = load i32, i32* @r7, align 4
  %v4_9730 = add i32 %v3_9730, 6
  %v5_9730 = inttoptr i32 %v4_9730 to i8*
  store i8 %v5_970c, i8* %v5_9730, align 1
  %v0_9734 = load i32, i32* %r1.global-to-local, align 4
  %v1_9734 = load i32, i32* @lr, align 4
  %v2_9734 = add i32 %v1_9734, 4
  %v3_9734 = inttoptr i32 %v2_9734 to i32*
  store i32 %v0_9734, i32* %v3_9734, align 4
  %v0_9738 = load i32, i32* %r3.global-to-local, align 4
  %v1_9738 = trunc i32 %v0_9738 to i8
  %v2_9738 = load i32, i32* %r2.global-to-local, align 4
  %v3_9738 = load i32, i32* @sb, align 4
  %v4_9738 = add i32 %v3_9738, %v2_9738
  %v5_9738 = inttoptr i32 %v4_9738 to i8*
  store i8 %v1_9738, i8* %v5_9738, align 1
  %v0_973c = load i32, i32* @r8, align 4
  %v1_973c = trunc i32 %v0_973c to i8
  %v2_973c = load i32, i32* @lr, align 4
  %v3_973c = add i32 %v2_973c, 2
  %v4_973c = inttoptr i32 %v3_973c to i8*
  store i8 %v1_973c, i8* %v4_973c, align 1
  %v0_9740 = load i32, i32* @r8, align 4
  %v1_9740 = trunc i32 %v0_9740 to i8
  %v2_9740 = load i32, i32* @lr, align 4
  %v3_9740 = add i32 %v2_9740, 1
  %v4_9740 = inttoptr i32 %v3_9740 to i8*
  store i8 %v1_9740, i8* %v4_9740, align 1
  %v0_9744 = load i32, i32* @r8, align 4
  %v1_9744 = trunc i32 %v0_9744 to i8
  %v2_9744 = load i32, i32* @lr, align 4
  %v3_9744 = add i32 %v2_9744, 3
  %v4_9744 = inttoptr i32 %v3_9744 to i8*
  store i8 %v1_9744, i8* %v4_9744, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9750 = load i32, i32* @r5, align 4
  store i32 %v0_9750, i32* %r1.global-to-local, align 4
  store i32 %v3_933c, i32* %r0.global-to-local, align 4
  %v0_9758 = load i32, i32* @sl, align 4
  store i32 %v0_9758, i32* %r2.global-to-local, align 4
  %v0_975c = load i32, i32* @lr, align 4
  %v6_9764 = inttoptr i32 %v0_9750 to i32*
  %v7_9764 = call i32 @function_1244c(i32 %v3_933c, i32* %v6_9764, i32 %v0_9758, i32 16384, i32 %v0_975c, i32 16)
  %v3_9768 = load i32, i32* %stack_var_-40, align 4
  %v1_976c = add i32 %v3_9768, 1
  store i32 %v1_976c, i32* %r0.global-to-local, align 4
  store i32 %v1_91cc, i32* %r3.global-to-local, align 4
  %v9_9774 = icmp eq i32 %v1_976c, %v1_91cc
  store i1 %v9_9774, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_976c, i32* %stack_var_-40, align 4
  %v6_977c = icmp slt i32 %v1_976c, %v1_91cc
  br i1 %v6_977c, label %dec_label_pc_9780, label %dec_label_pc_98d4

dec_label_pc_9780:                                ; preds = %dec_label_pc_96ac, %dec_label_pc_963c
  %v1_9794 = phi i32 [ %v1_976c, %dec_label_pc_96ac ], [ 0, %dec_label_pc_963c ]
  %v5_9784 = mul i32 %v1_9794, 24
  %v1_9788 = load i32, i32* @sb, align 4
  %v2_9788 = add i32 %v1_9788, %v5_9784
  store i32 %v2_9788, i32* %r3.global-to-local, align 4
  store i32 %v2_91f8, i32* %r1.global-to-local, align 4
  %v1_9790 = add i32 %v2_9788, 20
  %v2_9790 = inttoptr i32 %v1_9790 to i8*
  %v3_9790 = load i8, i8* %v2_9790, align 1
  %v4_9790 = zext i8 %v3_9790 to i32
  store i32 %v4_9790, i32* %r2.global-to-local, align 4
  %v4_9794 = mul i32 %v1_9794, 4
  %v5_9794 = add i32 %v4_9794, %v2_91f8
  %v6_9794 = inttoptr i32 %v5_9794 to i32*
  %v7_9794 = load i32, i32* %v6_9794, align 4
  store i32 %v7_9794, i32* @r5, align 4
  %v2_9798 = icmp ugt i8 %v3_9790, 30
  %v7_9798 = icmp eq i8 %v3_9790, 31
  store i1 %v7_9798, i1* %cpsr_z.global-to-local, align 1
  %v1_979c = add i32 %v7_9794, 24
  store i32 %v1_979c, i32* @r6, align 4
  %v1_97a0 = add i32 %v7_9794, 44
  store i32 %v1_97a0, i32* @r7, align 4
  %v2_97a4 = xor i1 %v7_9798, true
  %v3_97a4 = and i1 %v2_9798, %v2_97a4
  br i1 %v3_97a4, label %dec_label_pc_9654, label %dec_label_pc_97a8

dec_label_pc_97a8:                                ; preds = %dec_label_pc_9780
  %v1_97a8 = add i32 %v2_9788, 16
  %v2_97a8 = inttoptr i32 %v1_97a8 to i32*
  %v3_97a8 = load i32, i32* %v2_97a8, align 4
  store i32 %v3_97a8, i32* %r4.global-to-local, align 4
  %v0_97ac = call i32 @function_db88()
  store i32 %v0_97ac, i32* %r0.global-to-local, align 4
  %v3_97b0 = load i32, i32* %stack_var_-40, align 4
  %v5_97b8 = mul i32 %v3_97b0, 24
  %v0_97bc = load i32, i32* %r4.global-to-local, align 4
  %v1_97c0 = load i32, i32* @sb, align 4
  %v2_97c0 = add i32 %v1_97c0, %v5_97b8
  store i32 %v2_97c0, i32* %r1.global-to-local, align 4
  %v1_97c4 = and i32 %v0_97bc, 65280
  store i32 %v1_97c4, i32* %r3.global-to-local, align 4
  %v1_97bc = udiv i32 %v0_97bc, 256
  %v3_97c8 = and i32 %v1_97bc, 65280
  store i32 %v3_97c8, i32* %r2.global-to-local, align 4
  %v1_97d0 = add i32 %v2_97c0, 20
  %v2_97d0 = inttoptr i32 %v1_97d0 to i8*
  %v3_97d0 = load i8, i8* %v2_97d0, align 1
  %v4_97d0 = zext i8 %v3_97d0 to i32
  store i32 %v4_97d0, i32* @lr, align 4
  %v2_97dc = call i32 @llvm.bswap.i32(i32 %v0_97bc)
  %v7_97e0 = lshr i32 %v0_97ac, %v4_97d0
  %v8_97e0 = add i32 %v7_97e0, %v2_97dc
  %v3_97ec = mul i32 %v8_97e0, 16777216
  %v1_97f0 = and i32 %v8_97e0, 65280
  store i32 %v1_97f0, i32* %r0.global-to-local, align 4
  store i32 %v6_9318, i32* %r2.global-to-local, align 4
  %v4_97fc = mul nuw nsw i32 %v1_97f0, 256
  %v5_97fc = or i32 %v4_97fc, %v3_97ec
  store i32 %v5_97fc, i32* %r1.global-to-local, align 4
  %v2_9800 = call i32 @llvm.bswap.i32(i32 %v8_97e0)
  store i32 %v2_9800, i32* %r3.global-to-local, align 4
  store i1 %v7_9658, i1* %cpsr_z.global-to-local, align 1
  %v1_9808 = load i32, i32* @r5, align 4
  %v2_9808 = add i32 %v1_9808, 16
  %v3_9808 = inttoptr i32 %v2_9808 to i32*
  store i32 %v2_9800, i32* %v3_9808, align 4
  br i1 %v2_9658, label %dec_label_pc_9810, label %dec_label_pc_9660

dec_label_pc_9810:                                ; preds = %dec_label_pc_97a8, %dec_label_pc_9654
  %v0_9810 = call i32 @function_db88()
  store i32 %v0_9810, i32* %r0.global-to-local, align 4
  store i32 %v3_9394, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9820, i1* %cpsr_z.global-to-local, align 1
  %v1_9824 = load i32, i32* @r5, align 4
  %v2_9824 = add i32 %v1_9824, 12
  %v3_9824 = inttoptr i32 %v2_9824 to i32*
  store i32 %v0_9810, i32* %v3_9824, align 4
  br i1 %v3_9820, label %dec_label_pc_982c, label %dec_label_pc_9810.dec_label_pc_9674_crit_edge

dec_label_pc_9810.dec_label_pc_9674_crit_edge:    ; preds = %dec_label_pc_9810
  %v1_9678.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9674

dec_label_pc_982c:                                ; preds = %dec_label_pc_9810, %dec_label_pc_9660
  %v0_982c = call i32 @function_db88()
  %v3_9834 = urem i32 %v0_982c, 65536
  store i32 %v3_9834, i32* %r0.global-to-local, align 4
  %v1_983c = sub nsw i32 999, %v3_9834
  store i32 %v1_983c, i32* %r2.global-to-local, align 4
  %v3_9840 = sdiv i32 %v1_983c, 256
  store i32 %v3_9840, i32* %r1.global-to-local, align 4
  %v3_984434 = udiv i32 %v3_9834, 256
  store i32 %v3_984434, i32* %r3.global-to-local, align 4
  %v1_9848 = trunc i32 %v3_984434 to i8
  %v2_9848 = load i32, i32* @r5, align 4
  %v3_9848 = add i32 %v2_9848, 5
  %v4_9848 = inttoptr i32 %v3_9848 to i8*
  store i8 %v1_9848, i8* %v4_9848, align 1
  %v0_984c = load i32, i32* %r0.global-to-local, align 4
  %v1_984c = trunc i32 %v0_984c to i8
  %v2_984c = load i32, i32* @r5, align 4
  %v3_984c = add i32 %v2_984c, 4
  %v4_984c = inttoptr i32 %v3_984c to i8*
  store i8 %v1_984c, i8* %v4_984c, align 1
  %v0_9850 = load i32, i32* %r1.global-to-local, align 4
  %v1_9850 = trunc i32 %v0_9850 to i8
  %v2_9850 = load i32, i32* @r6, align 4
  %v3_9850 = add i32 %v2_9850, 5
  %v4_9850 = inttoptr i32 %v3_9850 to i8*
  store i8 %v1_9850, i8* %v4_9850, align 1
  store i32 %v3_9398, i32* %r1.global-to-local, align 4
  %v1_9858 = load i32, i32* @r4, align 4
  %v9_9858 = icmp eq i32 %v3_9398, %v1_9858
  store i1 %v9_9858, i1* %cpsr_z.global-to-local, align 1
  %v0_985c = load i32, i32* %r2.global-to-local, align 4
  %v1_985c = trunc i32 %v0_985c to i8
  %v2_985c = load i32, i32* @r6, align 4
  %v3_985c = add i32 %v2_985c, 4
  %v4_985c = inttoptr i32 %v3_985c to i8*
  store i8 %v1_985c, i8* %v4_985c, align 1
  %v0_9860 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9860, label %dec_label_pc_9864, label %dec_label_pc_982c.dec_label_pc_9680_crit_edge

dec_label_pc_982c.dec_label_pc_9680_crit_edge:    ; preds = %dec_label_pc_982c
  %v1_9684.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9680

dec_label_pc_9864:                                ; preds = %dec_label_pc_982c, %dec_label_pc_9674
  %v0_9864 = call i32 @function_db88()
  %v1_9864 = trunc i32 %v0_9864 to i8
  store i32 %v0_9864, i32* %r0.global-to-local, align 4
  store i32 %v3_939c, i32* %r2.global-to-local, align 4
  %v4_986c = sdiv i32 %v0_9864, 256
  store i32 %v4_986c, i32* %r3.global-to-local, align 4
  %v1_9870 = load i32, i32* @r4, align 4
  %v9_9870 = icmp eq i32 %v3_939c, %v1_9870
  store i1 %v9_9870, i1* %cpsr_z.global-to-local, align 1
  %v3_9874 = load i32, i32* @r5, align 4
  %v4_9874 = add i32 %v3_9874, 44
  %v5_9874 = inttoptr i32 %v4_9874 to i8*
  store i8 %v1_9864, i8* %v5_9874, align 1
  %v0_9878 = load i32, i32* %r3.global-to-local, align 4
  %v1_9878 = trunc i32 %v0_9878 to i8
  %v2_9878 = load i32, i32* @r7, align 4
  %v3_9878 = add i32 %v2_9878, 1
  %v4_9878 = inttoptr i32 %v3_9878 to i8*
  store i8 %v1_9878, i8* %v4_9878, align 1
  %v0_987c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_987c, label %dec_label_pc_9880, label %dec_label_pc_968c

dec_label_pc_9880:                                ; preds = %dec_label_pc_9864, %dec_label_pc_9680
  %v0_9880 = call i32 @function_db88()
  %v1_9880 = trunc i32 %v0_9880 to i8
  store i32 %v0_9880, i32* %r0.global-to-local, align 4
  %v4_988436 = udiv i32 %v0_9880, 256
  %v1_9888 = trunc i32 %v4_988436 to i8
  %v2_9888 = load i32, i32* @r7, align 4
  %v3_9888 = add i32 %v2_9888, 3
  %v4_9888 = inttoptr i32 %v3_9888 to i8*
  store i8 %v1_9888, i8* %v4_9888, align 1
  store i32 %v1_9390, i32* %r3.global-to-local, align 4
  store i1 %v2_9890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9890, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_9880
  %v1_9894 = load i32, i32* @r5, align 4
  %v2_9894 = add i32 %v1_9894, 16
  %v3_9894 = inttoptr i32 %v2_9894 to i32*
  %v4_9894 = load i32, i32* %v3_9894, align 4
  store i32 %v4_9894, i32* %r3.global-to-local, align 4
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_9880, %bb95
  %v3_9898 = load i32, i32* @r7, align 4
  %v4_9898 = add i32 %v3_9898, 2
  %v5_9898 = inttoptr i32 %v4_9898 to i8*
  store i8 %v1_9880, i8* %v5_9898, align 1
  %v0_989c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_989c, label %dec_label_pc_98a4, label %bb97

bb97:                                             ; preds = %bb96
  %v1_989c = load i32, i32* %r3.global-to-local, align 4
  %v2_989c = load i32, i32* @r6, align 4
  %v3_989c = add i32 %v2_989c, 16
  %v4_989c = inttoptr i32 %v3_989c to i32*
  store i32 %v1_989c, i32* %v4_989c, align 4
  br label %dec_label_pc_96a0

dec_label_pc_98a4:                                ; preds = %dec_label_pc_968c, %bb96
  %v0_98a4 = call i32 @function_db88()
  store i32 %v0_98a4, i32* %r0.global-to-local, align 4
  store i32 %v1_92e4, i32* %r1.global-to-local, align 4
  store i1 %v2_98ac, i1* %cpsr_z.global-to-local, align 1
  %v1_98b0 = load i32, i32* @r6, align 4
  %v2_98b0 = add i32 %v1_98b0, 16
  %v3_98b0 = inttoptr i32 %v2_98b0 to i32*
  store i32 %v0_98a4, i32* %v3_98b0, align 4
  br i1 %v2_98ac, label %dec_label_pc_96ac, label %dec_label_pc_98b8

dec_label_pc_98b8:                                ; preds = %dec_label_pc_96a0, %dec_label_pc_98a4
  %v0_98b8 = load i32, i32* @r7, align 4
  %v1_98b8 = add i32 %v0_98b8, 8
  store i32 %v1_98b8, i32* @r4, align 4
  store i32 %v1_98b8, i32* %r0.global-to-local, align 4
  store i32 %v6_92c4, i32* %r1.global-to-local, align 4
  %v2_98c4 = call i32 @function_dc3c(i32 %v1_98b8, i32 %v6_92c4)
  store i32 %v2_98c4, i32* %r0.global-to-local, align 4
  store i32 %v6_92c4, i32* %r2.global-to-local, align 4
  %v0_98cc = load i32, i32* @r8, align 4
  %v1_98cc = trunc i32 %v0_98cc to i8
  %v2_98cc = load i32, i32* @r4, align 4
  %v4_98cc = add i32 %v2_98cc, %v6_92c4
  %v5_98cc = inttoptr i32 %v4_98cc to i8*
  store i8 %v1_98cc, i8* %v5_98cc, align 1
  br label %dec_label_pc_96ac

dec_label_pc_98d4:                                ; preds = %dec_label_pc_96ac, %dec_label_pc_9628
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_98d8 = call i32 @function_11eb8(i32* null)
  store i32 %v2_98d8, i32* %r0.global-to-local, align 4
  store i32 %v2_9328, i32* %r1.global-to-local, align 4
  %v9_98e0 = icmp eq i32 %v2_9328, %v2_98d8
  store i1 %v9_98e0, i1* %cpsr_z.global-to-local, align 1
  %v6_98e4 = icmp slt i32 %v2_9328, %v2_98d8
  br i1 %v6_98e4, label %dec_label_pc_98e8, label %dec_label_pc_9628

dec_label_pc_98e8:                                ; preds = %dec_label_pc_98d4, %dec_label_pc_91c8, %dec_label_pc_98f0
  %v29_98ec = phi i32 [ %v3_933c, %dec_label_pc_91c8 ], [ %v1_98f4, %dec_label_pc_98f0 ], [ %v2_98d8, %dec_label_pc_98d4 ]
  store i32 %v3_91c8, i32* %r4.global-to-local, align 4
  store i32 %v15_91c8, i32* %r8.global-to-local, align 4
  store i32 %v21_91c8, i32* %sl.global-to-local, align 4
  store i32 %v24_91c8, i32* %fp.global-to-local, align 4
  ret i32 %v29_98ec

dec_label_pc_98f0:                                ; preds = %dec_label_pc_934c
  store i32 %v3_933c, i32* %r0.global-to-local, align 4
  %v1_98f4 = call i32 @function_11c68(i32 %v3_933c)
  store i32 %v1_98f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98e8

; uselistorder directives
  uselistorder i32 %v1_98f4, { 1, 0 }
  uselistorder i32 %v0_9880, { 0, 2, 1 }
  uselistorder i32 %v0_9864, { 0, 2, 1 }
  uselistorder i32 %v3_9834, { 0, 2, 1 }
  uselistorder i32 %v2_9800, { 1, 0 }
  uselistorder i32 %v8_97e0, { 1, 2, 0 }
  uselistorder i32 %v0_97bc, { 1, 0, 2 }
  uselistorder i32 %v7_9794, { 1, 0, 2 }
  uselistorder i32 %v1_976c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_9710, { 1, 0, 2 }
  uselistorder i32 %v4_970c, { 0, 2, 1 }
  uselistorder i32 %v0_96ec, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_96dc, { 0, 2, 1 }
  uselistorder i32 %v4_96c0, { 1, 0 }
  uselistorder i1 %v2_98ac, { 2, 3, 1, 0 }
  uselistorder i1 %v2_9890, { 2, 3, 1, 0 }
  uselistorder i1 %v3_9820, { 1, 0, 2, 3 }
  uselistorder i1 %v7_9658, { 2, 1, 0 }
  uselistorder i32 %v0_95c8, { 1, 0, 2 }
  uselistorder i32 %v3_946c, { 1, 0 }
  uselistorder i32 %tmp81, { 1, 0, 2 }
  uselistorder i32 %v1_93e8, { 0, 2, 1 }
  uselistorder i32 %v1_93e0, { 2, 1, 0 }
  uselistorder i32 %v1_93dc, { 1, 0 }
  uselistorder i32 %v1_93d8, { 1, 0 }
  uselistorder i32 %v1_93cc, { 1, 0 }
  uselistorder i32 %v3_93c4, { 2, 0, 1 }
  uselistorder i32 %v3_9394, { 0, 1, 3, 2 }
  uselistorder i32 %v1_9390, { 4, 3, 5, 1, 2, 0 }
  uselistorder i1 %v2_938c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9384, { 0, 2, 1 }
  uselistorder i32 %v0_9380, { 0, 1, 3, 2 }
  uselistorder i1 %v7_936c, { 1, 0 }
  uselistorder i1 %v7_9340, { 1, 0 }
  uselistorder i32 %v3_933c, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_9328, { 2, 1, 0 }
  uselistorder i32 %v6_9318, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_92e4, { 1, 0, 2, 3 }
  uselistorder i32 %v6_92c4, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v6_924c, { 1, 0, 2 }
  uselistorder i32 %v2_91f8, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_91cc, { 1, 2, 3, 0, 4, 5, 6, 9, 7, 8 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 13, 11, 12 }
  uselistorder i32* %sl.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r8.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 21, 0, 1, 2, 3, 4, 5, 6, 7, 19, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20 }
  uselistorder i32* %r3.global-to-local, { 55, 54, 56, 57, 58, 59, 60, 61, 1, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 42, 43, 44, 45, 46, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 40, 41, 42, 43, 44, 45, 46, 1, 9, 2, 3, 4, 5, 7, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 35, 2, 36, 3, 37, 38, 41, 42, 39, 40, 1, 43, 6, 5, 7, 9, 8, 10, 11, 16, 12, 13, 14, 15, 19, 17, 18, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder label %dec_label_pc_98e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_98b8, { 1, 0 }
  uselistorder label %dec_label_pc_98a4, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_96ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9628, { 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_9900(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9900:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i8 @__decompiler_undefined_function_2()
  %tmp31 = call i8 @__decompiler_undefined_function_2()
  %tmp32 = call i8 @__decompiler_undefined_function_2()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_9904 = urem i32 %arg2, 256
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %v1_9904, i32* %r0.global-to-local, align 4
  %v1_9920 = urem i32 %arg4, 256
  store i32 %v1_9920, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_9930 = call i32 @function_12630(i32 %v1_9904, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v1_9904, i32* %r0.global-to-local, align 4
  %v2_9940 = call i32 @function_12630(i32 %v1_9904, i32 4)
  %v0_9944 = load i32, i32* @r5, align 4
  store i32 %v0_9944, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_9950 = load i32, i32* @r7, align 4
  store i32 %v0_9950, i32* %r3.global-to-local, align 4
  %v0_9954 = load i32, i32* @r4, align 4
  store i32 %v0_9954, i32* %r0.global-to-local, align 4
  %v5_9958 = inttoptr i32 %v0_9944 to i32*
  %v6_9958 = call i32 @function_83ec(i32 %v0_9954, i32* %v5_9958, i32 2, i32 %v0_9950, i32 %v2_9940)
  %v1_9964 = urem i32 %v6_9958, 256
  store i32 %v1_9964, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9970 = load i32, i32* @r5, align 4
  store i32 %v0_9970, i32* %r1.global-to-local, align 4
  %v0_9974 = load i32, i32* @r4, align 4
  store i32 %v0_9974, i32* %r0.global-to-local, align 4
  %v5_9978 = trunc i32 %v6_9958 to i8
  %v6_997c = inttoptr i32 %v0_9970 to i32*
  %v7_997c = call i32 @function_83ec(i32 %v0_9974, i32* %v6_997c, i32 3, i32 65535, i32 %v6_9958)
  %v0_9980 = load i32, i32* @r5, align 4
  store i32 %v0_9980, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_997c, i32* @sl, align 4
  %v0_9990 = load i32, i32* @r4, align 4
  store i32 %v0_9990, i32* %r0.global-to-local, align 4
  %v5_9994 = inttoptr i32 %v0_9980 to i32*
  %v6_9994 = call i32 @function_83ec(i32 %v0_9990, i32* %v5_9994, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_999c = urem i32 %v6_9994, 256
  store i32 %v1_999c, i32* %ip.global-to-local, align 4
  %v0_99a0 = load i32, i32* @r5, align 4
  store i32 %v0_99a0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_99ac = load i32, i32* @r4, align 4
  store i32 %v0_99ac, i32* %r0.global-to-local, align 4
  %sext8 = mul i32 %v6_9994, 16777216
  %v5_99b4 = sdiv i32 %sext8, 16777216
  %v6_99b4 = inttoptr i32 %v0_99a0 to i32*
  %v7_99b4 = call i32 @function_83ec(i32 %v0_99ac, i32* %v6_99b4, i32 5, i32 1, i32 %v5_99b4)
  %v1_99c0 = urem i32 %v7_99b4, 256
  store i32 %v1_99c0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_99c8 = load i32, i32* @r5, align 4
  store i32 %v0_99c8, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_99d0 = load i32, i32* @r4, align 4
  store i32 %v0_99d0, i32* %r0.global-to-local, align 4
  %v5_99d8 = inttoptr i32 %v0_99c8 to i32*
  %v6_99d8 = call i32 @function_83ec(i32 %v0_99d0, i32* %v5_99d8, i32 7, i32 65535, i32 %v1_99c0)
  %v0_99dc = load i32, i32* @r5, align 4
  store i32 %v0_99dc, i32* %r1.global-to-local, align 4
  %v3_99e0 = mul i32 %v6_99d8, 65536
  store i32 %v3_99e0, i32* @r8, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_99e8 = load i32, i32* @r7, align 4
  store i32 %v0_99e8, i32* %r3.global-to-local, align 4
  %v0_99ec = load i32, i32* @r4, align 4
  store i32 %v0_99ec, i32* %r0.global-to-local, align 4
  %v5_99f0 = inttoptr i32 %v0_99dc to i32*
  %v6_99f0 = call i32 @function_83ec(i32 %v0_99ec, i32* %v5_99f0, i32 10, i32 %v0_99e8, i32 ptrtoint (i32* @0 to i32))
  %v1_99f8 = urem i32 %v6_99f0, 256
  store i32 %v1_99f8, i32* %ip.global-to-local, align 4
  %v0_99fc = load i32, i32* @r5, align 4
  store i32 %v0_99fc, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a08 = load i32, i32* @r4, align 4
  store i32 %v0_9a08, i32* %r0.global-to-local, align 4
  %v5_9a10 = inttoptr i32 %v0_99fc to i32*
  %v6_9a10 = call i32 @function_83ec(i32 %v0_9a08, i32* %v5_9a10, i32 11, i32 1, i32 %v1_99f8)
  %v1_9a18 = urem i32 %v6_9a10, 256
  store i32 %v1_9a18, i32* %ip.global-to-local, align 4
  %v0_9a1c = load i32, i32* @r5, align 4
  store i32 %v0_9a1c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a28 = load i32, i32* @r4, align 4
  store i32 %v0_9a28, i32* %r0.global-to-local, align 4
  %v5_9a30 = inttoptr i32 %v0_9a1c to i32*
  %v6_9a30 = call i32 @function_83ec(i32 %v0_9a28, i32* %v5_9a30, i32 12, i32 1, i32 %v1_9a18)
  %v1_9a38 = urem i32 %v6_9a30, 256
  store i32 %v1_9a38, i32* %ip.global-to-local, align 4
  %v0_9a3c = load i32, i32* @r5, align 4
  store i32 %v0_9a3c, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_9a44 = load i32, i32* @r7, align 4
  store i32 %v0_9a44, i32* %r3.global-to-local, align 4
  %v0_9a48 = load i32, i32* @r4, align 4
  store i32 %v0_9a48, i32* %r0.global-to-local, align 4
  %v5_9a50 = inttoptr i32 %v0_9a3c to i32*
  %v6_9a50 = call i32 @function_83ec(i32 %v0_9a48, i32* %v5_9a50, i32 13, i32 %v0_9a44, i32 %v1_9a38)
  %v1_9a58 = urem i32 %v6_9a50, 256
  store i32 %v1_9a58, i32* %ip.global-to-local, align 4
  %v0_9a5c = load i32, i32* @r5, align 4
  store i32 %v0_9a5c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_9a64 = load i32, i32* @r7, align 4
  store i32 %v0_9a64, i32* %r3.global-to-local, align 4
  %v0_9a68 = load i32, i32* @r4, align 4
  store i32 %v0_9a68, i32* %r0.global-to-local, align 4
  %v5_9a70 = inttoptr i32 %v0_9a5c to i32*
  %v6_9a70 = call i32 @function_83ec(i32 %v0_9a68, i32* %v5_9a70, i32 14, i32 %v0_9a64, i32 %v1_9a58)
  %v1_9a78 = urem i32 %v6_9a70, 256
  store i32 %v1_9a78, i32* %ip.global-to-local, align 4
  %v0_9a7c = load i32, i32* @r5, align 4
  store i32 %v0_9a7c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_9a84 = load i32, i32* @r7, align 4
  store i32 %v0_9a84, i32* %r3.global-to-local, align 4
  %v0_9a88 = load i32, i32* @r4, align 4
  store i32 %v0_9a88, i32* %r0.global-to-local, align 4
  %v5_9a90 = inttoptr i32 %v0_9a7c to i32*
  %v6_9a90 = call i32 @function_83ec(i32 %v0_9a88, i32* %v5_9a90, i32 15, i32 %v0_9a84, i32 %v1_9a78)
  %v1_9a98 = urem i32 %v6_9a90, 256
  store i32 %v1_9a98, i32* %ip.global-to-local, align 4
  %v0_9a9c = load i32, i32* @r7, align 4
  store i32 %v0_9a9c, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_9aa4 = load i32, i32* @r5, align 4
  store i32 %v0_9aa4, i32* %r1.global-to-local, align 4
  %v0_9aa8 = load i32, i32* @r4, align 4
  store i32 %v0_9aa8, i32* %r0.global-to-local, align 4
  %v5_9ab0 = inttoptr i32 %v0_9aa4 to i32*
  %v6_9ab0 = call i32 @function_83ec(i32 %v0_9aa8, i32* %v5_9ab0, i32 %v0_9a9c, i32 768, i32 %v1_9a98)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9abc = load i32, i32* @r5, align 4
  store i32 %v0_9abc, i32* %r1.global-to-local, align 4
  %v0_9ac4 = load i32, i32* @r4, align 4
  store i32 %v0_9ac4, i32* %r0.global-to-local, align 4
  %v5_9ac8 = inttoptr i32 %v0_9abc to i32*
  %v6_9ac8 = call i32 @function_83ec(i32 %v0_9ac4, i32* %v5_9ac8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9ad0 = urem i32 %v6_9ac8, 256
  store i32 %v1_9ad0, i32* %r3.global-to-local, align 4
  %v0_9ad4 = load i32, i32* @r7, align 4
  store i32 %v0_9ad4, i32* %r0.global-to-local, align 4
  %v1_9adc = inttoptr i32 %v0_9ad4 to i32*
  %v2_9adc = call i32 @function_11eb8(i32* %v1_9adc)
  %v1_9ae0 = load i32, i32* @r6, align 4
  %v2_9ae0 = add i32 %v1_9ae0, %v2_9adc
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9af4 = call i32 @function_124b0(i32 2, i32 3, i32 6)
  store i32 %v3_9af4, i32* %r0.global-to-local, align 4
  %v0_9af8 = load i32, i32* @r8, align 4
  %v3_9af8 = udiv i32 %v0_9af8, 65536
  store i32 %v3_9af8, i32* %r1.global-to-local, align 4
  %v7_9afc = icmp eq i32 %v3_9af4, -1
  store i1 %v7_9afc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9af4, i32* @sb, align 4
  br i1 %v7_9afc, label %dec_label_pc_9eb0, label %dec_label_pc_9b0c

dec_label_pc_9b0c:                                ; preds = %dec_label_pc_9900
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9b14 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9b14, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_9b1c = load i32, i32* @r7, align 4
  store i32 %v0_9b1c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_9b28 = call i32 @function_12480(i32 %v3_9af4, i32 %v0_9b1c, i32 3, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_9b28, i32* %r0.global-to-local, align 4
  %v7_9b2c = icmp eq i32 %v6_9b28, -1
  store i1 %v7_9b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9b2c, label %dec_label_pc_9ea8, label %dec_label_pc_9b34

dec_label_pc_9b34:                                ; preds = %dec_label_pc_9b0c
  store i32 %v1_9904, i32* %r2.global-to-local, align 4
  %v0_9b38 = load i32, i32* @sl, align 4
  %v3_9b38 = mul i32 %v0_9b38, 65536
  store i32 %v3_9b38, i32* %r0.global-to-local, align 4
  %v3_9b3c = urem i32 %v0_9b38, 65536
  store i32 %v3_9b3c, i32* %r3.global-to-local, align 4
  %v2_9b40 = icmp eq i32 %v1_9904, 0
  store i1 %v2_9b40, i1* %cpsr_z.global-to-local, align 1
  %v0_9b44 = load i32, i32* @r7, align 4
  store i32 %v0_9b44, i32* %stack_var_-40, align 4
  br i1 %v2_9b40, label %dec_label_pc_9b34.dec_label_pc_9d30.preheader_crit_edge, label %dec_label_pc_9b50

dec_label_pc_9b34.dec_label_pc_9d30.preheader_crit_edge: ; preds = %dec_label_pc_9b34
  %.pre = add i32 %v6_9ab0, 40
  br label %dec_label_pc_9d30.preheader

dec_label_pc_9b50:                                ; preds = %dec_label_pc_9b34
  %v0_9b54 = load i32, i32* @r8, align 4
  %v3_9b54 = udiv i32 %v0_9b54, 16777216
  %tmp77 = udiv i32 %v0_9b38, 256
  %v3_9b58 = urem i32 %tmp77, 256
  store i32 %v3_9b58, i32* %r0.global-to-local, align 4
  %v1_9b5c = add i32 %v6_9ab0, 40
  store i32 %v1_9b5c, i32* %ip.global-to-local, align 4
  %v3_9f24 = icmp ugt i32 %v0_9af8, -65537
  %v2_9c08 = ptrtoint i32* %stack_var_-60 to i32
  %v3_9c14 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v1_9c2c = urem i32 %v1_9b5c, 256
  %tmp78 = udiv i32 %v1_9b5c, 256
  %v3_9c30 = urem i32 %tmp78, 256
  %v2_9c40 = ptrtoint i32* %stack_var_-76 to i32
  %v2_9c44 = ptrtoint i32* %stack_var_-332 to i32
  %v2_9c48 = ptrtoint i32* %stack_var_-44 to i32
  %v4_9cbc = zext i8 %tmp32 to i32
  %v4_9cc0 = zext i8 %tmp31 to i32
  %v4_9ccc = mul nuw nsw i32 %v4_9cc0, 256
  %v4_9cdc = zext i8 %tmp30 to i32
  %v1_9ce0 = and i32 %v4_9cdc, 18
  %v2_9ce4 = icmp eq i32 %v1_9ce0, 18
  %v1_a13c = urem i32 %v6_99f0, 2
  %tmp101 = sub nsw i32 0, %v1_a13c
  %v4_a144 = and i32 %tmp101, 32
  %v1_a170 = urem i32 %v6_9a30, 2
  %tmp102 = sub nsw i32 0, %v1_a170
  %v4_a178 = and i32 %tmp102, 8
  %v1_a1bc = urem i32 %v6_9a90, 2
  %v4_9c34 = mul nuw nsw i32 %v1_9c2c, 256
  %v5_9c34 = or i32 %v4_9c34, %v3_9c30
  %v5_9ccc = or i32 %v4_9cbc, %v4_9ccc
  %v1_9cec = and i32 %v4_9cdc, 5
  %v2_9cec = icmp eq i32 %v1_9cec, 0
  %v1_9bf4 = urem i32 %v3_9af8, 256
  %v4_9bf8 = mul nuw nsw i32 %v1_9bf4, 256
  %v5_9bf8 = or i32 %v3_9b54, %v4_9bf8
  %v1_9c00 = trunc i32 %v3_9af8 to i8
  %v1_9c04 = trunc i32 %v3_9b54 to i8
  %v1_a02c = urem i32 %v0_9b38, 256
  %v4_a034 = mul nuw nsw i32 %v1_a02c, 256
  %v5_a034 = or i32 %v4_a034, %v3_9b58
  %sext = mul i32 %v1_9b5c, 16777216
  %v4_a050 = sdiv i32 %sext, 16777216
  %v1_a154 = urem i32 %v6_9a10, 2
  %tmp103 = sub nsw i32 0, %v1_a154
  %v4_a15c = and i32 %tmp103, 16
  %v1_a188 = urem i32 %v6_9a50, 2
  %tmp104 = sub nsw i32 0, %v1_a188
  %v4_a190 = and i32 %tmp104, 4
  %v1_a1a0 = urem i32 %v6_9a70, 2
  %tmp105 = sub nsw i32 0, %v1_a1a0
  %v3_a1a8 = and i32 %tmp105, 2
  br label %dec_label_pc_9b6c.outer

dec_label_pc_9b6c.outer:                          ; preds = %bb93, %dec_label_pc_9b50
  %stack_var_-336.0.ph = phi i32 [ %v0_a06c, %bb93 ], [ %tmp, %dec_label_pc_9b50 ]
  %stack_var_-56.0.ph = phi i32 [ %v0_9f78, %bb93 ], [ %tmp38, %dec_label_pc_9b50 ]
  br label %dec_label_pc_9b6c

dec_label_pc_9b6c:                                ; preds = %dec_label_pc_9b6c.outer, %dec_label_pc_9d18
  %stack_var_-56.0 = phi i32 [ %stack_var_-56.5, %dec_label_pc_9d18 ], [ %stack_var_-56.0.ph, %dec_label_pc_9b6c.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9b78 = call i32 @function_124b0(i32 2, i32 1, i32 0)
  store i32 %v3_9b78, i32* %r0.global-to-local, align 4
  %v7_9b7c = icmp eq i32 %v3_9b78, -1
  store i1 %v7_9b7c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9b78, i32* @sl, align 4
  br i1 %v7_9b7c, label %dec_label_pc_9d18, label %dec_label_pc_9b88

dec_label_pc_9b88:                                ; preds = %dec_label_pc_9b6c, %dec_label_pc_9cf4
  %v0_9b90 = phi i32 [ %v3_9d08, %dec_label_pc_9cf4 ], [ %v3_9b78, %dec_label_pc_9b6c ]
  %stack_var_-56.1 = phi i32 [ %v0_9f78, %dec_label_pc_9cf4 ], [ %stack_var_-56.0, %dec_label_pc_9b6c ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_9b90 = call i32 @function_11ba4(i32 %v0_9b90, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_9b98 = or i32 %v2_9b90, 2048
  store i32 %v1_9b98, i32* @r2, align 4
  %v0_9b9c = load i32, i32* @sl, align 4
  store i32 %v0_9b9c, i32* %r0.global-to-local, align 4
  %v2_9ba0 = call i32 @function_11ba4(i32 %v0_9b9c, i32 4)
  store i32 %v2_9ba0, i32* %r0.global-to-local, align 4
  %v3_9ba4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9ba4, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %lr.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v5_9bc0 = mul i32 %v3_9ba4, 24
  store i32 %v5_9bc0, i32* %r1.global-to-local, align 4
  %v2_9bc4 = add i32 %v5_9bc0, %arg3
  store i32 %v2_9bc4, i32* %r2.global-to-local, align 4
  %v1_9bc8 = add i32 %v2_9bc4, 20
  %v2_9bc8 = inttoptr i32 %v1_9bc8 to i8*
  %v3_9bc8 = load i8, i8* %v2_9bc8, align 1
  %v4_9bc8 = zext i8 %v3_9bc8 to i32
  store i32 %v4_9bc8, i32* %r3.global-to-local, align 4
  %v2_9bcc = icmp ugt i8 %v3_9bc8, 30
  %v7_9bcc = icmp eq i8 %v3_9bc8, 31
  store i1 %v7_9bcc, i1* %cpsr_z.global-to-local, align 1
  %v2_9bd0 = xor i1 %v7_9bcc, true
  %v3_9bd0 = and i1 %v2_9bcc, %v2_9bd0
  br i1 %v3_9bd0, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_9b88
  %v5_9bd0 = add i32 %v2_9bc4, 16
  %v6_9bd0 = inttoptr i32 %v5_9bd0 to i32*
  %v7_9bd0 = load i32, i32* %v6_9bd0, align 4
  store i32 %v7_9bd0, i32* %r3.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_9b88, %bb
  %v4_9bd4 = phi i32 [ %v4_9bc8, %dec_label_pc_9b88 ], [ %v7_9bd0, %bb ]
  %v4_9bd4.stack_var_-56.1 = select i1 %v3_9bd0, i32 %v4_9bd4, i32 %stack_var_-56.1
  %v2_9bd8 = xor i1 %v2_9bcc, true
  %v3_9bd8 = or i1 %v7_9bcc, %v2_9bd8
  br i1 %v3_9bd8, label %dec_label_pc_9eb8, label %dec_label_pc_9bdc

dec_label_pc_9bdc:                                ; preds = %bb79
  store i32 %v3_9af8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_9f24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9f24, label %dec_label_pc_9f2c, label %dec_label_pc_9bf0

dec_label_pc_9bf0:                                ; preds = %dec_label_pc_9eb8, %dec_label_pc_9bdc
  %stack_var_-56.3 = phi i32 [ %v2_9f10, %dec_label_pc_9eb8 ], [ %v4_9bd4.stack_var_-56.1, %dec_label_pc_9bdc ]
  store i32 %v3_9b54, i32* %r0.global-to-local, align 4
  store i32 %v5_9bf8, i32* %r3.global-to-local, align 4
  store i32 %v1_9bf4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9c08

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9f2c, %dec_label_pc_9bf0
  %stack_var_-57.0 = phi i8 [ %v1_9f34, %dec_label_pc_9f2c ], [ %v1_9c00, %dec_label_pc_9bf0 ]
  %v0_9f78 = phi i32 [ %stack_var_-56.6, %dec_label_pc_9f2c ], [ %stack_var_-56.3, %dec_label_pc_9bf0 ]
  %storemerge = phi i8 [ %v1_9f2c, %dec_label_pc_9f2c ], [ %v1_9c04, %dec_label_pc_9bf0 ]
  store i32 %v2_9c08, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9c10 = load i32, i32* @sl, align 4
  store i32 %v0_9c10, i32* %r0.global-to-local, align 4
  %v4_9c14 = call i32 @function_1230c(i32 %v0_9c10, %sockaddr* %v3_9c14, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9c1c = call i32 @function_11eb8(i32* null)
  store i32 %v2_9c1c, i32* %r0.global-to-local, align 4
  store i32 %v1_9b5c, i32* %r1.global-to-local, align 4
  store i32 %v1_9c2c, i32* %r3.global-to-local, align 4
  store i32 %v5_9c34, i32* @fp, align 4
  store i32 %v1_9c2c, i32* %r2.global-to-local, align 4
  store i32 %v2_9c1c, i32* @r4, align 4
  store i32 %v2_9c48, i32* @r6, align 4
  %v9_9ca0 = icmp eq i32 %tmp33, %v0_9f78
  %v4_9cc4 = zext i8 %storemerge to i32
  %v4_9cc8 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_9ca0 to i32
  %v9_9cb4 = icmp eq i1 %v9_9ca0, false
  %v4_9cd0 = mul nuw nsw i32 %v4_9cc8, 256
  %v5_9cd0 = or i32 %v4_9cc4, %v4_9cd0
  %v9_9cd4 = icmp eq i32 %v5_9cd0, %v5_9ccc
  br label %dec_label_pc_9c64

dec_label_pc_9c54:                                ; preds = %.thread25, %dec_label_pc_9cbc, %dec_label_pc_9cec, %bb82
  %v2_9c54 = call i32 @function_11eb8(i32* null)
  %v0_9c58 = load i32, i32* @r4, align 4
  %v2_9c58 = sub i32 %v2_9c54, %v0_9c58
  store i32 %v2_9c58, i32* %r0.global-to-local, align 4
  %v7_9c5c = icmp eq i32 %v2_9c58, 10
  store i1 %v7_9c5c, i1* %cpsr_z.global-to-local, align 1
  %v8_9c60 = icmp sgt i32 %v2_9c58, 10
  br i1 %v8_9c60, label %dec_label_pc_9cf4, label %dec_label_pc_9c64

dec_label_pc_9c64:                                ; preds = %dec_label_pc_9c54, %dec_label_pc_9c08
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_9c44, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9c74 = load i32, i32* @sb, align 4
  store i32 %v0_9c74, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  %v7_9c84 = call i32 @function_123ec(i32 %v0_9c74, i32* nonnull %stack_var_-332, i32 256, i32 16384, i32 %v2_9c40, i32 %v2_9c48)
  store i32 %v7_9c84, i32* %r2.global-to-local, align 4
  %v7_9c8c = icmp eq i32 %v7_9c84, -1
  store i1 %v7_9c8c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_9c8c, label %dec_label_pc_9eb0, label %dec_label_pc_9c98

dec_label_pc_9c98:                                ; preds = %dec_label_pc_9c64
  store i32 %tmp33, i32* %r3.global-to-local, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_9cac = icmp eq i32 %v7_9c84, 40
  store i1 %v7_9cac, i1* %cpsr_z.global-to-local, align 1
  %tmp106 = icmp ult i32 %v7_9c84, 41
  br i1 %tmp106, label %.thread25, label %bb82

.thread25:                                        ; preds = %dec_label_pc_9c98
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_9c54

bb82:                                             ; preds = %dec_label_pc_9c98
  store i1 %v9_9cb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9cb4, label %dec_label_pc_9c54, label %dec_label_pc_9cbc

dec_label_pc_9cbc:                                ; preds = %bb82
  store i32 %v4_9cc0, i32* %r1.global-to-local, align 4
  store i32 %v4_9cc4, i32* %ip.global-to-local, align 4
  store i32 %v4_9cc8, i32* %r2.global-to-local, align 4
  store i32 %v5_9ccc, i32* %r3.global-to-local, align 4
  store i32 %v5_9cd0, i32* @r5, align 4
  store i1 %v9_9cd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9cd4, label %dec_label_pc_9cdc, label %dec_label_pc_9c54

dec_label_pc_9cdc:                                ; preds = %dec_label_pc_9cbc
  store i32 %v4_9cdc, i32* %r2.global-to-local, align 4
  store i32 %v1_9ce0, i32* %r3.global-to-local, align 4
  store i1 %v2_9ce4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9ce4, label %dec_label_pc_9f6c, label %dec_label_pc_9cec

dec_label_pc_9cec:                                ; preds = %dec_label_pc_9cdc
  store i1 %v2_9cec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9cec, label %dec_label_pc_9c54, label %dec_label_pc_9cf4

dec_label_pc_9cf4:                                ; preds = %dec_label_pc_9cec, %dec_label_pc_9c54
  %v0_9cf4 = load i32, i32* @sl, align 4
  store i32 %v0_9cf4, i32* %r0.global-to-local, align 4
  %v1_9cf8 = call i32 @function_11c68(i32 %v0_9cf4)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9d08 = call i32 @function_124b0(i32 2, i32 1, i32 0)
  store i32 %v3_9d08, i32* %r0.global-to-local, align 4
  %v3_9d0c = icmp eq i32 %v3_9d08, -1
  %v8_9d0c = icmp eq i32 %v3_9d08, -1
  store i1 %v8_9d0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9d08, i32* @sl, align 4
  br i1 %v3_9d0c, label %dec_label_pc_9d18, label %dec_label_pc_9b88

dec_label_pc_9d18:                                ; preds = %dec_label_pc_9cf4, %dec_label_pc_9b6c
  %stack_var_-56.5 = phi i32 [ %stack_var_-56.0, %dec_label_pc_9b6c ], [ %v0_9f78, %dec_label_pc_9cf4 ]
  %v3_9d18 = load i32, i32* %stack_var_-40, align 4
  %v1_9d20 = add i32 %v3_9d18, 1
  store i32 %v1_9d20, i32* %r3.global-to-local, align 4
  %v9_9d24 = icmp eq i32 %v1_9d20, %v1_9904
  store i1 %v9_9d24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9d20, i32* %stack_var_-40, align 4
  %v5_9d2c = icmp slt i32 %v1_9d20, %v1_9904
  br i1 %v5_9d2c, label %dec_label_pc_9b6c, label %dec_label_pc_9d30.preheader

dec_label_pc_9d30.preheader:                      ; preds = %bb93, %dec_label_pc_9d18, %dec_label_pc_9b34.dec_label_pc_9d30.preheader_crit_edge
  %v1_9d64.pre-phi = phi i32 [ %.pre, %dec_label_pc_9b34.dec_label_pc_9d30.preheader_crit_edge ], [ %v1_9b5c, %dec_label_pc_9d18 ], [ %v1_9b5c, %bb93 ]
  %v1_9d48 = add i32 %v6_9ab0, 20
  %v3_9d4c = mul i32 %v1_9d48, 65536
  %tmp84 = mul i32 %v1_9d48, 256
  %v1_9d54 = and i32 %tmp84, 65280
  %tmp85 = udiv i32 %v1_9d48, 256
  %v4_9d58 = urem i32 %tmp85, 256
  %v5_9d58 = or i32 %v4_9d58, %v1_9d54
  %v2_9e88 = icmp eq i32 %v1_9ad0, 0
  %v3_9e74 = icmp eq i32 %v3_9b3c, 65535
  br label %dec_label_pc_9d30

dec_label_pc_9d30:                                ; preds = %dec_label_pc_9d30.preheader, %dec_label_pc_9f54
  store i32 %v1_9904, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_9b40, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_9b40, label %dec_label_pc_9f54, label %dec_label_pc_9d44

dec_label_pc_9d44:                                ; preds = %dec_label_pc_9d30
  store i32 %v1_9d48, i32* @r8, align 4
  store i32 %v3_9d4c, i32* %r2.global-to-local, align 4
  store i32 %v5_9d58, i32* @fp, align 4
  store i32 %v6_9ab0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_9d64.pre-phi, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_9e60

dec_label_pc_9d70:                                ; preds = %dec_label_pc_9e84, %dec_label_pc_9e98
  %v0_9d70 = load i32, i32* @r7, align 4
  %v1_9d70 = trunc i32 %v0_9d70 to i8
  %v2_9d70 = load i32, i32* @r4, align 4
  %v3_9d70 = add i32 %v2_9d70, 10
  %v4_9d70 = inttoptr i32 %v3_9d70 to i8*
  store i8 %v1_9d70, i8* %v4_9d70, align 1
  %v0_9d74 = load i32, i32* @r7, align 4
  %v1_9d74 = trunc i32 %v0_9d74 to i8
  %v2_9d74 = load i32, i32* @r4, align 4
  %v3_9d74 = add i32 %v2_9d74, 11
  %v4_9d74 = inttoptr i32 %v3_9d74 to i8*
  store i8 %v1_9d74, i8* %v4_9d74, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9d7c = load i32, i32* @r4, align 4
  store i32 %v0_9d7c, i32* @r0, align 4
  %v2_9d80 = call i32 @function_c7e0(i32 %v0_9d7c, i32 20)
  %v3_9d80 = trunc i32 %v2_9d80 to i8
  store i32 %v2_9d80, i32* %r0.global-to-local, align 4
  %v3_9d84 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_9930, i32* %r2.global-to-local, align 4
  %v3_9d8c = mul i32 %v3_9d84, 16
  %v2_9d90 = add i32 %v3_9d8c, %v2_9930
  store i32 %v2_9d90, i32* %r1.global-to-local, align 4
  %v1_9d94 = add i32 %v2_9d90, 4
  %v2_9d94 = inttoptr i32 %v1_9d94 to i32*
  %v3_9d94 = load i32, i32* %v2_9d94, align 4
  %v3_9d98 = mul i32 %v3_9d94, 65536
  store i32 %v3_9d98, i32* %ip.global-to-local, align 4
  %tmp86 = mul i32 %v3_9d94, 256
  %v1_9da0 = and i32 %tmp86, 65280
  %tmp87 = udiv i32 %v3_9d94, 256
  %v4_9da4 = urem i32 %tmp87, 256
  %v5_9da4 = or i32 %v4_9da4, %v1_9da0
  store i32 %v5_9da4, i32* %r2.global-to-local, align 4
  %v1_9da8 = add i32 %v3_9d94, 1
  store i32 %v1_9da8, i32* %r3.global-to-local, align 4
  store i32 %v1_9da8, i32* %v2_9d94, align 4
  %v0_9db0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9db0 = load i32, i32* @r5, align 4
  %v2_9db0 = add i32 %v1_9db0, 4
  %v3_9db0 = inttoptr i32 %v2_9db0 to i32*
  store i32 %v0_9db0, i32* %v3_9db0, align 4
  %v0_9db4 = load i32, i32* %r1.global-to-local, align 4
  %v1_9db4 = add i32 %v0_9db4, 8
  %v2_9db4 = inttoptr i32 %v1_9db4 to i32*
  %v3_9db4 = load i32, i32* %v2_9db4, align 4
  %tmp88 = mul i32 %v3_9db4, 256
  %v1_9dc0 = and i32 %tmp88, 65280
  %tmp89 = udiv i32 %v3_9db4, 256
  %v4_9dc4 = urem i32 %tmp89, 256
  %v5_9dc4 = or i32 %v4_9dc4, %v1_9dc0
  store i32 %v5_9dc4, i32* %r2.global-to-local, align 4
  %v4_9dc828 = udiv i32 %v2_9d80, 256
  %v1_9dcc = trunc i32 %v4_9dc828 to i8
  %v2_9dcc = load i32, i32* @r4, align 4
  %v3_9dcc = add i32 %v2_9dcc, 11
  %v4_9dcc = inttoptr i32 %v3_9dcc to i8*
  store i8 %v1_9dcc, i8* %v4_9dcc, align 1
  %v3_9dd0 = load i32, i32* @r4, align 4
  %v4_9dd0 = add i32 %v3_9dd0, 10
  %v5_9dd0 = inttoptr i32 %v4_9dd0 to i8*
  store i8 %v3_9d80, i8* %v5_9dd0, align 1
  %v0_9dd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_9dd4 = load i32, i32* @r5, align 4
  %v2_9dd4 = add i32 %v1_9dd4, 8
  %v3_9dd4 = inttoptr i32 %v2_9dd4 to i32*
  store i32 %v0_9dd4, i32* %v3_9dd4, align 4
  %v0_9dd8 = load i32, i32* @r5, align 4
  store i32 %v0_9dd8, i32* @r1, align 4
  %v0_9ddc = load i32, i32* @fp, align 4
  store i32 %v0_9ddc, i32* %r2.global-to-local, align 4
  %v0_9de0 = load i32, i32* @r8, align 4
  store i32 %v0_9de0, i32* %r3.global-to-local, align 4
  %v0_9de4 = load i32, i32* @r4, align 4
  store i32 %v0_9de4, i32* %r0.global-to-local, align 4
  %v0_9de8 = load i32, i32* @r7, align 4
  %v1_9de8 = trunc i32 %v0_9de8 to i8
  %v3_9de8 = add i32 %v0_9dd8, 16
  %v4_9de8 = inttoptr i32 %v3_9de8 to i8*
  store i8 %v1_9de8, i8* %v4_9de8, align 1
  %v0_9dec = load i32, i32* @r7, align 4
  %v1_9dec = trunc i32 %v0_9dec to i8
  %v2_9dec = load i32, i32* @r5, align 4
  %v3_9dec = add i32 %v2_9dec, 17
  %v4_9dec = inttoptr i32 %v3_9dec to i8*
  store i8 %v1_9dec, i8* %v4_9dec, align 1
  %v4_9df0 = call i32 @function_c83c(i32 %v0_9de4, i32 %v0_9dd8, i32 %v0_9ddc, i32 %v0_9de0)
  %v5_9df0 = trunc i32 %v4_9df0 to i8
  store i32 %v4_9df0, i32* %r0.global-to-local, align 4
  %v4_9df429 = udiv i32 %v4_9df0, 256
  %v1_9df8 = trunc i32 %v4_9df429 to i8
  %v2_9df8 = load i32, i32* @r5, align 4
  %v3_9df8 = add i32 %v2_9df8, 17
  %v4_9df8 = inttoptr i32 %v3_9df8 to i8*
  store i8 %v1_9df8, i8* %v4_9df8, align 1
  %v3_9dfc = load i32, i32* @r5, align 4
  %v4_9dfc = add i32 %v3_9dfc, 16
  %v5_9dfc = inttoptr i32 %v4_9dfc to i8*
  store i8 %v5_9df0, i8* %v5_9dfc, align 1
  %v3_9e00 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9e00, i32* %r3.global-to-local, align 4
  %v0_9e04 = load i32, i32* @r4, align 4
  %v1_9e04 = add i32 %v0_9e04, 20
  %v2_9e04 = inttoptr i32 %v1_9e04 to i32*
  %v3_9e04 = load i32, i32* %v2_9e04, align 4
  %v5_9e0c = mul i32 %v3_9e00, 24
  %v3_9e14 = udiv i32 %v3_9e04, 65536
  store i32 %v3_9e14, i32* %r2.global-to-local, align 4
  %v2_9e18 = add i32 %v5_9e0c, %arg3
  store i32 %v2_9e18, i32* %ip.global-to-local, align 4
  %v3_9e1c4 = udiv i32 %v3_9e04, 16777216
  %v1_9e20 = trunc i32 %v3_9e1c4 to i8
  %v3_9e20 = add i32 %v2_9e18, 3
  %v4_9e20 = inttoptr i32 %v3_9e20 to i8*
  store i8 %v1_9e20, i8* %v4_9e20, align 1
  %v0_9e24 = load i32, i32* %r2.global-to-local, align 4
  %v1_9e24 = trunc i32 %v0_9e24 to i8
  %v2_9e24 = load i32, i32* %ip.global-to-local, align 4
  %v3_9e24 = add i32 %v2_9e24, 2
  %v4_9e24 = inttoptr i32 %v3_9e24 to i8*
  store i8 %v1_9e24, i8* %v4_9e24, align 1
  %v0_9e28 = load i32, i32* @r4, align 4
  store i32 %v0_9e28, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9e30 = load i32, i32* @sb, align 4
  store i32 %v0_9e30, i32* %r0.global-to-local, align 4
  %v0_9e34 = load i32, i32* @sl, align 4
  store i32 %v0_9e34, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_9e3c = load i32, i32* %ip.global-to-local, align 4
  %v6_9e44 = inttoptr i32 %v0_9e28 to i32*
  %v7_9e44 = call i32 @function_1244c(i32 %v0_9e30, i32* %v6_9e44, i32 %v0_9e34, i32 16384, i32 %v0_9e3c, i32 16)
  %v3_9e48 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9e48, i32* %r3.global-to-local, align 4
  store i32 %v1_9904, i32* %ip.global-to-local, align 4
  %v1_9e50 = add i32 %v3_9e48, 1
  store i32 %v1_9e50, i32* %r0.global-to-local, align 4
  %v9_9e54 = icmp eq i32 %v1_9e50, %v1_9904
  store i1 %v9_9e54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9e50, i32* %stack_var_-40, align 4
  %v6_9e5c = icmp slt i32 %v1_9e50, %v1_9904
  br i1 %v6_9e5c, label %dec_label_pc_9e60, label %dec_label_pc_9f54

dec_label_pc_9e60:                                ; preds = %dec_label_pc_9d70, %dec_label_pc_9d44
  %v1_9e6c = phi i32 [ %v1_9e50, %dec_label_pc_9d70 ], [ 0, %dec_label_pc_9d44 ]
  store i32 %v2_9940, i32* %ip.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_9b3c, i32* @lr, align 4
  %v4_9e6c = mul i32 %v1_9e6c, 4
  %v5_9e6c = add i32 %v4_9e6c, %v2_9940
  %v6_9e6c = inttoptr i32 %v5_9e6c to i32*
  %v7_9e6c = load i32, i32* %v6_9e6c, align 4
  store i32 %v7_9e6c, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_9e74, i1* %cpsr_z.global-to-local, align 1
  %v1_9e78 = add i32 %v7_9e6c, 40
  store i32 %v1_9e78, i32* @r6, align 4
  %v1_9e7c = add i32 %v7_9e6c, 20
  store i32 %v1_9e7c, i32* @r5, align 4
  br i1 %v3_9e74, label %dec_label_pc_9f40, label %dec_label_pc_9e84

dec_label_pc_9e84:                                ; preds = %dec_label_pc_9e60, %dec_label_pc_9f40
  %v0_9e90 = phi i32 [ %v1_9e78, %dec_label_pc_9e60 ], [ %v0_9e90.pre, %dec_label_pc_9f40 ]
  store i1 %v2_9e88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v6_9ab0, i32* %r1.global-to-local, align 4
  store i32 %v0_9e90, i32* %r0.global-to-local, align 4
  br i1 %v2_9e88, label %dec_label_pc_9d70, label %dec_label_pc_9e98

dec_label_pc_9e98:                                ; preds = %dec_label_pc_9e84
  %v2_9e98 = call i32 @function_dc3c(i32 %v0_9e90, i32 %v6_9ab0)
  store i32 %v2_9e98, i32* %r0.global-to-local, align 4
  store i32 %v6_9ab0, i32* %r1.global-to-local, align 4
  %v0_9ea0 = load i32, i32* @r7, align 4
  %v1_9ea0 = trunc i32 %v0_9ea0 to i8
  %v2_9ea0 = load i32, i32* @r6, align 4
  %v4_9ea0 = add i32 %v2_9ea0, %v6_9ab0
  %v5_9ea0 = inttoptr i32 %v4_9ea0 to i8*
  store i8 %v1_9ea0, i8* %v5_9ea0, align 1
  br label %dec_label_pc_9d70

dec_label_pc_9ea8:                                ; preds = %dec_label_pc_9b0c
  %v0_9ea8 = load i32, i32* @sb, align 4
  store i32 %v0_9ea8, i32* %r0.global-to-local, align 4
  %v1_9eac = call i32 @function_11c68(i32 %v0_9ea8)
  store i32 %v1_9eac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9eb0

dec_label_pc_9eb0:                                ; preds = %dec_label_pc_9c64, %dec_label_pc_9f54, %dec_label_pc_9900, %dec_label_pc_9ea8
  %v29_9eb4 = phi i32 [ %v3_9af4, %dec_label_pc_9900 ], [ %v1_9eac, %dec_label_pc_9ea8 ], [ %v2_9f58, %dec_label_pc_9f54 ], [ 0, %dec_label_pc_9c64 ]
  ret i32 %v29_9eb4

dec_label_pc_9eb8:                                ; preds = %bb79
  %v1_9eb8 = add i32 %v2_9bc4, 16
  %v2_9eb8 = inttoptr i32 %v1_9eb8 to i32*
  %v3_9eb8 = load i32, i32* %v2_9eb8, align 4
  store i32 %v3_9eb8, i32* @r4, align 4
  %v0_9ebc = call i32 @function_db88()
  store i32 %v0_9ebc, i32* %r0.global-to-local, align 4
  %v3_9ec0 = load i32, i32* %stack_var_-40, align 4
  %v5_9ec8 = mul i32 %v3_9ec0, 24
  %v0_9ed0 = load i32, i32* @r4, align 4
  %v2_9ed4 = add i32 %v5_9ec8, %arg3
  store i32 %v2_9ed4, i32* %r1.global-to-local, align 4
  %v1_9ed0 = udiv i32 %v0_9ed0, 256
  %v3_9ed8 = and i32 %v1_9ed0, 65280
  store i32 %v3_9ed8, i32* %r2.global-to-local, align 4
  %v1_9edc = and i32 %v0_9ed0, 65280
  store i32 %v1_9edc, i32* %r3.global-to-local, align 4
  %v3_9ee0 = mul i32 %v0_9ed0, 16777216
  %v4_9ee4 = mul nuw nsw i32 %v1_9edc, 256
  %v5_9ee4 = or i32 %v4_9ee4, %v3_9ee0
  store i32 %v5_9ee4, i32* %ip.global-to-local, align 4
  %v1_9ee8 = add i32 %v2_9ed4, 20
  %v2_9ee8 = inttoptr i32 %v1_9ee8 to i8*
  %v3_9ee8 = load i8, i8* %v2_9ee8, align 1
  %v4_9ee8 = zext i8 %v3_9ee8 to i32
  store i32 %v4_9ee8, i32* %lr.global-to-local, align 4
  %v2_9ef0 = call i32 @llvm.bswap.i32(i32 %v0_9ed0)
  %v7_9ef4 = lshr i32 %v0_9ebc, %v4_9ee8
  %v8_9ef4 = add i32 %v7_9ef4, %v2_9ef0
  store i32 %v8_9ef4, i32* %r2.global-to-local, align 4
  %v3_9f00 = mul i32 %v8_9ef4, 16777216
  %v1_9f04 = and i32 %v8_9ef4, 65280
  store i32 %v1_9f04, i32* %r0.global-to-local, align 4
  %v4_9f08 = mul nuw nsw i32 %v1_9f04, 256
  %v5_9f08 = or i32 %v4_9f08, %v3_9f00
  store i32 %v5_9f08, i32* %r1.global-to-local, align 4
  %v2_9f10 = call i32 @llvm.bswap.i32(i32 %v8_9ef4)
  store i32 %v3_9af8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_9f24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9f24, label %dec_label_pc_9f2c, label %dec_label_pc_9bf0

dec_label_pc_9f2c:                                ; preds = %dec_label_pc_9eb8, %dec_label_pc_9bdc
  %stack_var_-56.6 = phi i32 [ %v2_9f10, %dec_label_pc_9eb8 ], [ %v4_9bd4.stack_var_-56.1, %dec_label_pc_9bdc ]
  %v0_9f2c = call i32 @function_db88()
  %v1_9f2c = trunc i32 %v0_9f2c to i8
  store i32 %v0_9f2c, i32* %r0.global-to-local, align 4
  %v4_9f30 = sdiv i32 %v0_9f2c, 256
  store i32 %v4_9f30, i32* %r3.global-to-local, align 4
  %v1_9f34 = trunc i32 %v4_9f30 to i8
  br label %dec_label_pc_9c08

dec_label_pc_9f40:                                ; preds = %dec_label_pc_9e60
  %v0_9f40 = call i32 @function_db88()
  %v1_9f40 = trunc i32 %v0_9f40 to i8
  store i32 %v0_9f40, i32* %r0.global-to-local, align 4
  %v4_9f44 = sdiv i32 %v0_9f40, 256
  store i32 %v4_9f44, i32* %r3.global-to-local, align 4
  %v1_9f48 = trunc i32 %v4_9f44 to i8
  %v2_9f48 = load i32, i32* @r4, align 4
  %v3_9f48 = add i32 %v2_9f48, 5
  %v4_9f48 = inttoptr i32 %v3_9f48 to i8*
  store i8 %v1_9f48, i8* %v4_9f48, align 1
  %v3_9f4c = load i32, i32* @r4, align 4
  %v4_9f4c = add i32 %v3_9f4c, 4
  %v5_9f4c = inttoptr i32 %v4_9f4c to i8*
  store i8 %v1_9f40, i8* %v5_9f4c, align 1
  %v0_9e90.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_9e84

dec_label_pc_9f54:                                ; preds = %dec_label_pc_9d70, %dec_label_pc_9d30
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9f58 = call i32 @function_11eb8(i32* null)
  store i32 %v2_9f58, i32* %r0.global-to-local, align 4
  store i32 %v2_9ae0, i32* %lr.global-to-local, align 4
  %v9_9f60 = icmp eq i32 %v2_9ae0, %v2_9f58
  store i1 %v9_9f60, i1* %cpsr_z.global-to-local, align 1
  %v6_9f64 = icmp slt i32 %v2_9ae0, %v2_9f58
  br i1 %v6_9f64, label %dec_label_pc_9eb0, label %dec_label_pc_9d30

dec_label_pc_9f6c:                                ; preds = %dec_label_pc_9cdc
  %v3_9f6c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9f6c, i32* @r4, align 4
  store i32 %v2_9930, i32* %r0.global-to-local, align 4
  %v3_9f74 = mul i32 %v3_9f6c, 16
  store i32 %v3_9f74, i32* %ip.global-to-local, align 4
  %v3_9f78 = add i32 %v3_9f74, %v2_9930
  %v4_9f78 = inttoptr i32 %v3_9f78 to i32*
  store i32 %v0_9f78, i32* %v4_9f78, align 4
  store i32 %stack_var_-336.0.ph, i32* %r1.global-to-local, align 4
  %v1_9f80 = add i32 %stack_var_-336.0.ph, 4
  %v2_9f80 = inttoptr i32 %v1_9f80 to i32*
  %v3_9f80 = load i32, i32* %v2_9f80, align 4
  store i32 %v3_9f80, i32* %r0.global-to-local, align 4
  %v1_9f88 = and i32 %v3_9f80, 65280
  store i32 %v1_9f88, i32* %r1.global-to-local, align 4
  %v2_9f9c = call i32 @llvm.bswap.i32(i32 %v3_9f80)
  store i32 %v2_9930, i32* %r2.global-to-local, align 4
  %v1_9fa4 = load i32, i32* %ip.global-to-local, align 4
  %v2_9fa4 = add i32 %v1_9fa4, %v2_9930
  store i32 %v2_9fa4, i32* %ip.global-to-local, align 4
  %v2_9fa8 = add i32 %v2_9fa4, 4
  %v3_9fa8 = inttoptr i32 %v2_9fa8 to i32*
  store i32 %v2_9f9c, i32* %v3_9fa8, align 4
  store i32 %stack_var_-336.0.ph, i32* %r3.global-to-local, align 4
  %v1_9fb0 = add i32 %stack_var_-336.0.ph, 8
  %v2_9fb0 = inttoptr i32 %v1_9fb0 to i32*
  %v3_9fb0 = load i32, i32* %v2_9fb0, align 4
  store i32 %v3_9fb0, i32* %r0.global-to-local, align 4
  %v1_9fb8 = and i32 %v3_9fb0, 65280
  store i32 %v1_9fb8, i32* %r1.global-to-local, align 4
  %v3_9fbc = mul i32 %v3_9fb0, 16777216
  %v4_9fc4 = mul nuw nsw i32 %v1_9fb8, 256
  %v5_9fc4 = or i32 %v4_9fc4, %v3_9fbc
  store i32 %v5_9fc4, i32* %r2.global-to-local, align 4
  %v2_9fcc = call i32 @llvm.bswap.i32(i32 %v3_9fb0)
  store i32 %v2_9fcc, i32* %r3.global-to-local, align 4
  %v1_9fd0 = load i32, i32* %ip.global-to-local, align 4
  %v2_9fd0 = add i32 %v1_9fd0, 8
  %v3_9fd0 = inttoptr i32 %v2_9fd0 to i32*
  store i32 %v2_9fcc, i32* %v3_9fd0, align 4
  store i32 %stack_var_-336.0.ph, i32* %lr.global-to-local, align 4
  %v1_9fd8 = inttoptr i32 %stack_var_-336.0.ph to i32*
  %v2_9fd8 = load i32, i32* %v1_9fd8, align 4
  %v3_9fdc = udiv i32 %v2_9fd8, 65536
  store i32 %v3_9fdc, i32* %r2.global-to-local, align 4
  %v3_9fe05 = udiv i32 %v2_9fd8, 16777216
  store i32 %v3_9fe05, i32* %r1.global-to-local, align 4
  %v0_9fe4 = load i32, i32* @r5, align 4
  %v3_9fe4 = sdiv i32 %v0_9fe4, 256
  store i32 %v3_9fe4, i32* %r3.global-to-local, align 4
  %v1_9fe8 = trunc i32 %v3_9fe4 to i8
  %v2_9fe8 = load i32, i32* %ip.global-to-local, align 4
  %v3_9fe8 = add i32 %v2_9fe8, 15
  %v4_9fe8 = inttoptr i32 %v3_9fe8 to i8*
  store i8 %v1_9fe8, i8* %v4_9fe8, align 1
  %v0_9fec = load i32, i32* %r1.global-to-local, align 4
  %v1_9fec = trunc i32 %v0_9fec to i8
  %v2_9fec = load i32, i32* %ip.global-to-local, align 4
  %v3_9fec = add i32 %v2_9fec, 13
  %v4_9fec = inttoptr i32 %v3_9fec to i8*
  store i8 %v1_9fec, i8* %v4_9fec, align 1
  %v0_9ff0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9ff0 = trunc i32 %v0_9ff0 to i8
  %v2_9ff0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9ff0 = add i32 %v2_9ff0, 12
  %v4_9ff0 = inttoptr i32 %v3_9ff0 to i8*
  store i8 %v1_9ff0, i8* %v4_9ff0, align 1
  %v0_9ff4 = load i32, i32* @r5, align 4
  %v1_9ff4 = trunc i32 %v0_9ff4 to i8
  %v2_9ff4 = load i32, i32* %ip.global-to-local, align 4
  %v3_9ff4 = add i32 %v2_9ff4, 14
  %v4_9ff4 = inttoptr i32 %v3_9ff4 to i8*
  store i8 %v1_9ff4, i8* %v4_9ff4, align 1
  store i32 %v1_9b5c, i32* %r0.global-to-local, align 4
  %v1_9ffc = call i32 @function_124dc(i32 %v1_9b5c)
  store i32 %v1_9ffc, i32* %r0.global-to-local, align 4
  store i32 %v2_9940, i32* %r1.global-to-local, align 4
  %v3_a004 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a004, i32* %r2.global-to-local, align 4
  %v2_a008 = load i32, i32* @r4, align 4
  %v5_a008 = mul i32 %v2_a008, 4
  %v6_a008 = add i32 %v5_a008, %v2_9940
  %v7_a008 = inttoptr i32 %v6_a008 to i32*
  store i32 %v1_9ffc, i32* %v7_a008, align 4
  %v0_a00c = load i32, i32* %r1.global-to-local, align 4
  %v1_a00c = load i32, i32* %r2.global-to-local, align 4
  %v4_a00c = mul i32 %v1_a00c, 4
  %v5_a00c = add i32 %v4_a00c, %v0_a00c
  %v6_a00c = inttoptr i32 %v5_a00c to i32*
  %v7_a00c = load i32, i32* %v6_a00c, align 4
  store i32 %v7_a00c, i32* %r0.global-to-local, align 4
  %v1_a010 = inttoptr i32 %v7_a00c to i8*
  %v2_a010 = load i8, i8* %v1_a010, align 1
  %tmp107 = urem i8 %v2_a010, 16
  %v1_a014 = zext i8 %tmp107 to i32
  %v1_a018 = or i32 %v1_a014, 64
  store i32 %v1_a018, i32* %r3.global-to-local, align 4
  %v1_a01c = trunc i32 %v1_a018 to i8
  store i8 %v1_a01c, i8* %v1_a010, align 1
  store i32 %v3_9b3c, i32* %ip.global-to-local, align 4
  %v0_a024 = load i32, i32* %r0.global-to-local, align 4
  %v1_a024 = inttoptr i32 %v0_a024 to i8*
  %v2_a024 = load i8, i8* %v1_a024, align 1
  %v1_a030 = and i8 %v2_a024, -16
  store i32 %v5_a034, i32* %r3.global-to-local, align 4
  %v1_a038 = or i8 %v1_a030, 5
  store i32 %v1_99c0, i32* %ip.global-to-local, align 4
  store i32 %v1_a02c, i32* %r1.global-to-local, align 4
  store i8 %v1_a038, i8* %v1_a024, align 1
  %v0_a048 = load i32, i32* %r1.global-to-local, align 4
  %v1_a048 = trunc i32 %v0_a048 to i8
  %v2_a048 = load i32, i32* %r0.global-to-local, align 4
  %v3_a048 = add i32 %v2_a048, 5
  %v4_a048 = inttoptr i32 %v3_a048 to i8*
  store i8 %v1_a048, i8* %v4_a048, align 1
  store i32 %v6_9958, i32* %r1.global-to-local, align 4
  store i32 %v4_a050, i32* %lr.global-to-local, align 4
  %v2_a054 = load i32, i32* %r0.global-to-local, align 4
  %v3_a054 = add i32 %v2_a054, 1
  %v4_a054 = inttoptr i32 %v3_a054 to i8*
  store i8 %v5_9978, i8* %v4_a054, align 1
  store i32 %v5_99b4, i32* %r2.global-to-local, align 4
  %v0_a05c = load i32, i32* %ip.global-to-local, align 4
  %v2_a05c = icmp eq i32 %v0_a05c, 0
  store i1 %v2_a05c, i1* %cpsr_z.global-to-local, align 1
  %v0_a060 = load i32, i32* %r3.global-to-local, align 4
  %v1_a060 = trunc i32 %v0_a060 to i8
  %v2_a060 = load i32, i32* %r0.global-to-local, align 4
  %v3_a060 = add i32 %v2_a060, 4
  %v4_a060 = inttoptr i32 %v3_a060 to i8*
  store i8 %v1_a060, i8* %v4_a060, align 1
  %v0_a064 = load i32, i32* %r0.global-to-local, align 4
  %v1_a064 = add i32 %v0_a064, 20
  store i32 %v1_a064, i32* %r3.global-to-local, align 4
  %v0_a068 = load i32, i32* %r2.global-to-local, align 4
  %v1_a068 = trunc i32 %v0_a068 to i8
  %v3_a068 = add i32 %v0_a064, 8
  %v4_a068 = inttoptr i32 %v3_a068 to i8*
  store i8 %v1_a068, i8* %v4_a068, align 1
  %v0_a06c = load i32, i32* %r3.global-to-local, align 4
  %v0_a070 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a070, label %.thread7, label %.thread6

.thread6:                                         ; preds = %dec_label_pc_9f6c
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a074 = load i32, i32* %r0.global-to-local, align 4
  %v4_a074 = add i32 %v3_a074, 6
  %v5_a074 = inttoptr i32 %v4_a074 to i8*
  store i8 64, i8* %v5_a074, align 1
  %v0_a078.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a078.pr.pr, label %.thread7, label %bb91

bb91:                                             ; preds = %.thread6
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_9f6c, %.thread6, %bb91
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_a080 = load i32, i32* %r0.global-to-local, align 4
  %v3_a080 = add i32 %v2_a080, 9
  %v4_a080 = inttoptr i32 %v3_a080 to i8*
  store i8 6, i8* %v4_a080, align 1
  %v0_a084 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a084, label %bb93, label %bb92

bb92:                                             ; preds = %.thread7
  %v1_a084 = load i32, i32* %r2.global-to-local, align 4
  %v2_a084 = trunc i32 %v1_a084 to i8
  %v3_a084 = load i32, i32* %r0.global-to-local, align 4
  %v4_a084 = add i32 %v3_a084, 7
  %v5_a084 = inttoptr i32 %v4_a084 to i8*
  store i8 %v2_a084, i8* %v5_a084, align 1
  br label %bb93

bb93:                                             ; preds = %.thread7, %bb92
  %v2_a08c = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_a08c, i32* %r3.global-to-local, align 4
  %v1_a090 = load i32, i32* %r0.global-to-local, align 4
  %v2_a090 = add i32 %v1_a090, 12
  %v3_a090 = inttoptr i32 %v2_a090 to i32*
  store i32 %v2_a08c, i32* %v3_a090, align 4
  %v3_a094 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a094, i32* %r2.global-to-local, align 4
  store i32 %v2_9930, i32* %ip.global-to-local, align 4
  %v4_a09c = mul i32 %v3_a094, 16
  %v5_a09c = add i32 %v4_a09c, %v2_9930
  %v6_a09c = inttoptr i32 %v5_a09c to i32*
  %v7_a09c = load i32, i32* %v6_a09c, align 4
  store i32 %v7_a09c, i32* %r3.global-to-local, align 4
  %v0_a0a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_a0a0 = trunc i32 %v0_a0a0 to i8
  %v2_a0a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_a0a0 = add i32 %v2_a0a0, 3
  %v4_a0a0 = inttoptr i32 %v3_a0a0 to i8*
  store i8 %v1_a0a0, i8* %v4_a0a0, align 1
  %v0_a0a4 = load i32, i32* @fp, align 4
  %v1_a0a4 = trunc i32 %v0_a0a4 to i8
  %v2_a0a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_a0a4 = add i32 %v2_a0a4, 2
  %v4_a0a4 = inttoptr i32 %v3_a0a4 to i8*
  store i8 %v1_a0a4, i8* %v4_a0a4, align 1
  %v0_a0a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a0a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_a0a8 = add i32 %v1_a0a8, 16
  %v3_a0a8 = inttoptr i32 %v2_a0a8 to i32*
  store i32 %v0_a0a8, i32* %v3_a0a8, align 4
  %v0_a0ac = load i32, i32* %r2.global-to-local, align 4
  %v3_a0ac = mul i32 %v0_a0ac, 16
  %v1_a0b0 = load i32, i32* %ip.global-to-local, align 4
  %v2_a0b0 = add i32 %v1_a0b0, %v3_a0ac
  store i32 %v2_a0b0, i32* %r2.global-to-local, align 4
  %v1_a0b4 = add i32 %v2_a0b0, 13
  %v2_a0b4 = inttoptr i32 %v1_a0b4 to i8*
  %v3_a0b4 = load i8, i8* %v2_a0b4, align 1
  %v4_a0b4 = zext i8 %v3_a0b4 to i32
  store i32 %v4_a0b4, i32* %r1.global-to-local, align 4
  %v1_a0b8 = add i32 %v2_a0b0, 12
  %v2_a0b8 = inttoptr i32 %v1_a0b8 to i8*
  %v3_a0b8 = load i8, i8* %v2_a0b8, align 1
  %v4_a0b8 = zext i8 %v3_a0b8 to i32
  store i32 %v0_a06c, i32* %lr.global-to-local, align 4
  %v4_a0c0 = mul nuw nsw i32 %v4_a0b4, 256
  %v5_a0c0 = or i32 %v4_a0b8, %v4_a0c0
  store i32 %v5_a0c0, i32* %r3.global-to-local, align 4
  %v2_a0c4 = load i32, i32* %r0.global-to-local, align 4
  %v3_a0c4 = add i32 %v2_a0c4, 20
  %v4_a0c4 = inttoptr i32 %v3_a0c4 to i8*
  store i8 %v3_a0b8, i8* %v4_a0c4, align 1
  %v0_a0c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_a0c8 = sdiv i32 %v0_a0c8, 256
  store i32 %v3_a0c8, i32* %r3.global-to-local, align 4
  %v1_a0cc = trunc i32 %v3_a0c8 to i8
  %v2_a0cc = load i32, i32* %lr.global-to-local, align 4
  %v3_a0cc = add i32 %v2_a0cc, 1
  %v4_a0cc = inttoptr i32 %v3_a0cc to i8*
  store i8 %v1_a0cc, i8* %v4_a0cc, align 1
  %v0_a0d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0d0 = add i32 %v0_a0d0, 8
  %v2_a0d0 = inttoptr i32 %v1_a0d0 to i32*
  %v3_a0d0 = load i32, i32* %v2_a0d0, align 4
  store i32 %v3_a0d0, i32* %r1.global-to-local, align 4
  %v0_a0d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_a0d4 = add i32 %v0_a0d4, 13
  %v2_a0d4 = inttoptr i32 %v1_a0d4 to i8*
  %v3_a0d4 = load i8, i8* %v2_a0d4, align 1
  %v4_a0d4 = zext i8 %v3_a0d4 to i32
  store i32 %v4_a0d4, i32* %r3.global-to-local, align 4
  %v1_a0d8 = add i32 %v0_a0d0, 15
  %v2_a0d8 = inttoptr i32 %v1_a0d8 to i8*
  %v3_a0d8 = load i8, i8* %v2_a0d8, align 1
  %v4_a0d8 = zext i8 %v3_a0d8 to i32
  store i32 %v4_a0d8, i32* %ip.global-to-local, align 4
  %v0_a0dc = load i32, i32* %r0.global-to-local, align 4
  %v1_a0dc = add i32 %v0_a0dc, 40
  store i32 %v1_a0dc, i32* @r4, align 4
  %v1_a0e0 = add i32 %v0_a0d0, 14
  %v2_a0e0 = inttoptr i32 %v1_a0e0 to i8*
  %v3_a0e0 = load i8, i8* %v2_a0e0, align 1
  %v4_a0e0 = zext i8 %v3_a0e0 to i32
  store i32 %v4_a0e0, i32* %r0.global-to-local, align 4
  %v2_a0e4 = add i32 %v0_a0d4, 4
  %v3_a0e4 = inttoptr i32 %v2_a0e4 to i32*
  store i32 %v3_a0d0, i32* %v3_a0e4, align 4
  store i32 %v0_a06c, i32* %r1.global-to-local, align 4
  %v0_a0ec = load i32, i32* %r3.global-to-local, align 4
  %v1_a0ec = or i32 %v0_a0ec, 1
  store i32 %v1_a0ec, i32* %r3.global-to-local, align 4
  %v0_a0f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0f0 = add i32 %v0_a0f0, 4
  %v2_a0f0 = inttoptr i32 %v1_a0f0 to i32*
  %v3_a0f0 = load i32, i32* %v2_a0f0, align 4
  store i32 %v3_a0f0, i32* %lr.global-to-local, align 4
  %v1_a0f4 = trunc i32 %v1_a0ec to i8
  %v3_a0f4 = add i32 %v0_a06c, 13
  %v4_a0f4 = inttoptr i32 %v3_a0f4 to i8*
  store i8 %v1_a0f4, i8* %v4_a0f4, align 1
  %v0_a0f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a0f8 = add i32 %v0_a0f8, 12
  %v2_a0f8 = inttoptr i32 %v1_a0f8 to i8*
  %v3_a0f8 = load i8, i8* %v2_a0f8, align 1
  %v4_a0f8 = zext i8 %v3_a0f8 to i32
  store i32 %v4_a0f8, i32* %r2.global-to-local, align 4
  %v1_a0fc = add i32 %v0_a0f8, 13
  %v2_a0fc = inttoptr i32 %v1_a0fc to i8*
  %v3_a0fc = load i8, i8* %v2_a0fc, align 1
  %v4_a0fc = zext i8 %v3_a0fc to i32
  %v0_a100 = load i32, i32* %r0.global-to-local, align 4
  %v1_a100 = load i32, i32* %ip.global-to-local, align 4
  %v4_a100 = mul i32 %v1_a100, 256
  %v5_a100 = or i32 %v4_a100, %v0_a100
  store i32 %v5_a100, i32* %r0.global-to-local, align 4
  %tmp108 = urem i8 %v3_a0f8, 16
  %v1_a104 = zext i8 %tmp108 to i32
  store i32 %v0_a06c, i32* %ip.global-to-local, align 4
  %v3_a10c = sdiv i32 %v5_a100, 256
  store i32 %v3_a10c, i32* %r1.global-to-local, align 4
  %v1_a110 = or i32 %v1_a104, 128
  store i32 %v1_a110, i32* %r2.global-to-local, align 4
  %v1_a114 = or i32 %v4_a0fc, 16
  store i32 %v1_a114, i32* %r3.global-to-local, align 4
  %v1_a118 = trunc i32 %v3_a10c to i8
  %v3_a118 = add i32 %v0_a06c, 3
  %v4_a118 = inttoptr i32 %v3_a118 to i8*
  store i8 %v1_a118, i8* %v4_a118, align 1
  %v0_a11c = load i32, i32* %lr.global-to-local, align 4
  %v1_a11c = load i32, i32* %ip.global-to-local, align 4
  %v2_a11c = add i32 %v1_a11c, 8
  %v3_a11c = inttoptr i32 %v2_a11c to i32*
  store i32 %v0_a11c, i32* %v3_a11c, align 4
  %v0_a120 = load i32, i32* %r2.global-to-local, align 4
  %v1_a120 = trunc i32 %v0_a120 to i8
  %v2_a120 = load i32, i32* %ip.global-to-local, align 4
  %v3_a120 = add i32 %v2_a120, 12
  %v4_a120 = inttoptr i32 %v3_a120 to i8*
  store i8 %v1_a120, i8* %v4_a120, align 1
  %v0_a124 = load i32, i32* %r3.global-to-local, align 4
  %v1_a124 = trunc i32 %v0_a124 to i8
  %v2_a124 = load i32, i32* %ip.global-to-local, align 4
  %v3_a124 = add i32 %v2_a124, 13
  %v4_a124 = inttoptr i32 %v3_a124 to i8*
  store i8 %v1_a124, i8* %v4_a124, align 1
  %v0_a128 = load i32, i32* %r0.global-to-local, align 4
  %v1_a128 = trunc i32 %v0_a128 to i8
  %v2_a128 = load i32, i32* %ip.global-to-local, align 4
  %v3_a128 = add i32 %v2_a128, 2
  %v4_a128 = inttoptr i32 %v3_a128 to i8*
  store i8 %v1_a128, i8* %v4_a128, align 1
  %v0_a12c = call i32 @function_db88()
  %v1_a12c = trunc i32 %v0_a12c to i8
  store i32 %v0_a12c, i32* %r0.global-to-local, align 4
  store i32 %v0_a06c, i32* %lr.global-to-local, align 4
  store i32 %v1_99f8, i32* %r1.global-to-local, align 4
  %v3_a138 = load i8, i8* %v4_a0f4, align 1
  %v4_a138 = zext i8 %v3_a138 to i32
  store i32 %v1_a13c, i32* %r2.global-to-local, align 4
  %v1_a140 = and i32 %v4_a138, 223
  %v5_a144 = or i32 %v1_a140, %v4_a144
  store i32 %v5_a144, i32* %r3.global-to-local, align 4
  %v1_a148 = trunc i32 %v5_a144 to i8
  store i8 %v1_a148, i8* %v4_a0f4, align 1
  store i32 %v1_9a18, i32* %ip.global-to-local, align 4
  %v0_a150 = load i32, i32* %lr.global-to-local, align 4
  %v1_a150 = add i32 %v0_a150, 13
  %v2_a150 = inttoptr i32 %v1_a150 to i8*
  %v3_a150 = load i8, i8* %v2_a150, align 1
  %v4_a150 = zext i8 %v3_a150 to i32
  store i32 %v1_a154, i32* %r3.global-to-local, align 4
  %v1_a158 = and i32 %v4_a150, 239
  %v5_a15c = or i32 %v1_a158, %v4_a15c
  store i32 %v5_a15c, i32* %r2.global-to-local, align 4
  %v1_a160 = trunc i32 %v5_a15c to i8
  store i8 %v1_a160, i8* %v2_a150, align 1
  %v0_a164 = load i32, i32* %lr.global-to-local, align 4
  %v1_a164 = add i32 %v0_a164, 13
  %v2_a164 = inttoptr i32 %v1_a164 to i8*
  %v3_a164 = load i8, i8* %v2_a164, align 1
  %v4_a164 = zext i8 %v3_a164 to i32
  store i32 %v1_9a38, i32* %lr.global-to-local, align 4
  store i32 %v0_a06c, i32* %r1.global-to-local, align 4
  store i32 %v1_a170, i32* %r2.global-to-local, align 4
  %v1_a174 = and i32 %v4_a164, 247
  %v5_a178 = or i32 %v1_a174, %v4_a178
  store i32 %v5_a178, i32* %r3.global-to-local, align 4
  %v1_a17c = trunc i32 %v5_a178 to i8
  store i8 %v1_a17c, i8* %v4_a0f4, align 1
  store i32 %v1_9a58, i32* %ip.global-to-local, align 4
  %v0_a184 = load i32, i32* %r1.global-to-local, align 4
  %v1_a184 = add i32 %v0_a184, 13
  %v2_a184 = inttoptr i32 %v1_a184 to i8*
  %v3_a184 = load i8, i8* %v2_a184, align 1
  %v4_a184 = zext i8 %v3_a184 to i32
  store i32 %v1_a188, i32* %r3.global-to-local, align 4
  %v1_a18c = and i32 %v4_a184, 251
  %v5_a190 = or i32 %v1_a18c, %v4_a190
  store i32 %v5_a190, i32* %r2.global-to-local, align 4
  %v1_a194 = trunc i32 %v5_a190 to i8
  store i8 %v1_a194, i8* %v2_a184, align 1
  store i32 %v1_9a78, i32* @lr, align 4
  %v0_a19c = load i32, i32* %r1.global-to-local, align 4
  %v1_a19c = add i32 %v0_a19c, 13
  %v2_a19c = inttoptr i32 %v1_a19c to i8*
  %v3_a19c = load i8, i8* %v2_a19c, align 1
  %v4_a19c = zext i8 %v3_a19c to i32
  store i32 %v1_a1a0, i32* %r2.global-to-local, align 4
  %v1_a1a4 = and i32 %v4_a19c, 253
  %v4_a1a8 = or i32 %v1_a1a4, %v3_a1a8
  store i32 %v4_a1a8, i32* %r3.global-to-local, align 4
  %v1_a1ac = trunc i32 %v4_a1a8 to i8
  store i8 %v1_a1ac, i8* %v2_a19c, align 1
  %v0_a1b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a1b0 = add i32 %v0_a1b0, 13
  %v2_a1b0 = inttoptr i32 %v1_a1b0 to i8*
  %v3_a1b0 = load i8, i8* %v2_a1b0, align 1
  %v4_a1b0 = zext i8 %v3_a1b0 to i32
  %v1_a1b8 = and i32 %v4_a1b0, 254
  %v2_a1c0 = or i32 %v1_a1b8, %v1_a1bc
  store i32 %v2_a1c0, i32* %r3.global-to-local, align 4
  store i32 %v0_a06c, i32* %r2.global-to-local, align 4
  %v4_a1c8 = sdiv i32 %v0_a12c, 256
  store i32 %v4_a1c8, i32* %r1.global-to-local, align 4
  %v1_a1cc = trunc i32 %v2_a1c0 to i8
  store i8 %v1_a1cc, i8* %v4_a0f4, align 1
  %v0_a1d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a1d0 = trunc i32 %v0_a1d0 to i8
  %v2_a1d0 = load i32, i32* %r2.global-to-local, align 4
  %v3_a1d0 = add i32 %v2_a1d0, 15
  %v4_a1d0 = inttoptr i32 %v3_a1d0 to i8*
  store i8 %v1_a1d0, i8* %v4_a1d0, align 1
  %v3_a1d4 = load i32, i32* %r2.global-to-local, align 4
  %v4_a1d4 = add i32 %v3_a1d4, 14
  %v5_a1d4 = inttoptr i32 %v4_a1d4 to i8*
  store i8 %v1_a12c, i8* %v5_a1d4, align 1
  store i32 %v6_9ab0, i32* %r1.global-to-local, align 4
  %v0_a1dc = load i32, i32* @r4, align 4
  store i32 %v0_a1dc, i32* %r0.global-to-local, align 4
  %v2_a1e0 = call i32 @function_dc3c(i32 %v0_a1dc, i32 %v6_9ab0)
  store i32 %v2_a1e0, i32* %r0.global-to-local, align 4
  store i32 %v6_9ab0, i32* %ip.global-to-local, align 4
  %v2_a1ec = load i32, i32* @r4, align 4
  %v4_a1ec = add i32 %v2_a1ec, %v6_9ab0
  %v5_a1ec = inttoptr i32 %v4_a1ec to i8*
  store i8 0, i8* %v5_a1ec, align 1
  %v3_a1f0 = load i32, i32* %stack_var_-40, align 4
  %v1_a1f8 = add i32 %v3_a1f0, 1
  store i32 %v1_a1f8, i32* %r3.global-to-local, align 4
  %v9_a1fc = icmp eq i32 %v1_a1f8, %v1_9904
  store i1 %v9_a1fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a1f8, i32* %stack_var_-40, align 4
  %v5_a204 = icmp slt i32 %v1_a1f8, %v1_9904
  br i1 %v5_a204, label %dec_label_pc_9b6c.outer, label %dec_label_pc_9d30.preheader

; uselistorder directives
  uselistorder i32 %v1_a1f8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a12c, { 0, 2, 1 }
  uselistorder i32 %v3_a10c, { 1, 0 }
  uselistorder i32 %v3_a0c8, { 1, 0 }
  uselistorder i32 %v0_a06c, { 3, 4, 5, 0, 6, 1, 7, 8, 2 }
  uselistorder i32 %v3_9fe4, { 1, 0 }
  uselistorder i32 %v2_9fcc, { 1, 0 }
  uselistorder i32 %v3_9fb0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_9f74, { 1, 0 }
  uselistorder i32 %v2_9f58, { 1, 2, 3, 0 }
  uselistorder i32 %v4_9f44, { 1, 0 }
  uselistorder i32 %v0_9f40, { 0, 2, 1 }
  uselistorder i32 %v4_9f30, { 1, 0 }
  uselistorder i32 %v0_9f2c, { 0, 2, 1 }
  uselistorder i32 %v8_9ef4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_9ed0, { 2, 0, 3, 1 }
  uselistorder i32 %v0_9e90, { 1, 0 }
  uselistorder i32 %v7_9e6c, { 1, 0, 2 }
  uselistorder i32 %v1_9e50, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_9df0, { 0, 2, 1 }
  uselistorder i32 %v0_9dd8, { 1, 0, 2 }
  uselistorder i32 %v3_9db4, { 1, 0 }
  uselistorder i32 %v3_9d94, { 3, 2, 0, 1 }
  uselistorder i32 %v2_9d80, { 0, 2, 1 }
  uselistorder i1 %v3_9e74, { 1, 0 }
  uselistorder i32 %v1_9d48, { 3, 2, 0, 1 }
  uselistorder i32 %v1_9d20, { 1, 0, 2, 3 }
  uselistorder i32 %v3_9d08, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9c8c, { 1, 0 }
  uselistorder i32 %v7_9c84, { 0, 2, 1, 3 }
  uselistorder i32 %v5_9cd0, { 1, 0 }
  uselistorder i1 %v9_9cb4, { 1, 0 }
  uselistorder i32 %v4_9cc8, { 1, 0 }
  uselistorder i32 %v4_9cc4, { 1, 0 }
  uselistorder i32 %v0_9f78, { 1, 0, 4, 2, 3 }
  uselistorder i1 %v7_9bcc, { 1, 0, 2 }
  uselistorder i1 %v7_9b7c, { 1, 0 }
  uselistorder i32 %v3_9b78, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-56.0, { 1, 0 }
  uselistorder i32 %stack_var_-336.0.ph, { 4, 5, 2, 3, 0, 1 }
  uselistorder i32 %v1_a1a0, { 1, 0 }
  uselistorder i32 %v1_a188, { 1, 0 }
  uselistorder i32 %v1_a154, { 1, 0 }
  uselistorder i32 %v1_a02c, { 1, 0 }
  uselistorder i32 %v1_9bf4, { 1, 0 }
  uselistorder i32 %v5_9ccc, { 1, 0 }
  uselistorder i32 %v1_a170, { 1, 0 }
  uselistorder i32 %v1_a13c, { 1, 0 }
  uselistorder i1 %v2_9ce4, { 1, 0 }
  uselistorder i32 %v1_9ce0, { 1, 0 }
  uselistorder i32 %v4_9cdc, { 2, 0, 1 }
  uselistorder i32 %v4_9cc0, { 1, 0 }
  uselistorder i32 %v1_9c2c, { 2, 1, 0 }
  uselistorder i1 %v3_9f24, { 1, 0, 2, 3 }
  uselistorder i32 %v1_9b5c, { 6, 5, 3, 4, 7, 0, 1, 2, 8 }
  uselistorder i32 %v3_9b54, { 1, 0, 2 }
  uselistorder i1 %v2_9b40, { 1, 0, 2, 3 }
  uselistorder i32 %v3_9b3c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_9b38, { 1, 0, 3, 2 }
  uselistorder i1 %v7_9b2c, { 1, 0 }
  uselistorder i1 %v7_9afc, { 1, 0 }
  uselistorder i32 %v3_9af8, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v3_9af4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_9ae0, { 2, 1, 0 }
  uselistorder i32 %v1_9ad0, { 1, 0 }
  uselistorder i32 %v6_9ab0, { 0, 6, 5, 4, 1, 7, 9, 8, 10, 11, 3, 2 }
  uselistorder i32 %v1_9a98, { 1, 0 }
  uselistorder i32 %v1_9a78, { 1, 2, 0 }
  uselistorder i32 %v1_9a58, { 1, 2, 0 }
  uselistorder i32 %v1_9a38, { 1, 2, 0 }
  uselistorder i32 %v1_9a18, { 1, 2, 0 }
  uselistorder i32 %v1_99f8, { 1, 2, 0 }
  uselistorder i32 %v1_99c0, { 1, 2, 0 }
  uselistorder i32 %v6_9958, { 2, 1, 3, 0 }
  uselistorder i32 %v2_9940, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_9930, { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 %v1_9904, { 11, 12, 6, 7, 8, 5, 9, 10, 13, 4, 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 18, 16, 17 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 55, 56, 57, 58, 59, 60, 61, 62, 63, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 53, 54, 55, 56, 57, 58, 59, 60, 1, 2, 3, 5, 4, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 61, 62, 63, 64, 0 }
  uselistorder i32* %r1.global-to-local, { 45, 46, 47, 48, 49, 50, 51, 52, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 44, 54, 56, 55, 57, 59, 58, 0 }
  uselistorder i32* %r0.global-to-local, { 72, 71, 73, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 26, 25, 27, 29, 28, 30, 32, 31, 34, 38, 33, 35, 37, 36, 41, 39, 40, 42, 43, 44, 46, 47, 45, 48, 51, 49, 50, 53, 52, 57, 54, 55, 56, 58, 60, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 0 }
  uselistorder i32* %lr.global-to-local, { 11, 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %ip.global-to-local, { 43, 44, 45, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 23, 24, 25, 26, 27, 29, 30, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47 }
  uselistorder i1* %cpsr_z.global-to-local, { 26, 2, 1, 3, 4, 5, 6, 8, 9, 7, 10, 11, 12, 13, 14, 15, 17, 0, 18, 19, 16, 20, 21, 22, 23, 24, 25 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9eb0, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_9e84, { 1, 0 }
  uselistorder label %dec_label_pc_9d70, { 1, 0 }
  uselistorder label %dec_label_pc_9d30, { 1, 0 }
  uselistorder label %dec_label_pc_9c54, { 2, 1, 3, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_9b88, { 1, 0 }
  uselistorder label %dec_label_pc_9b6c, { 1, 0 }
}

define i32 @function_a210(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a210:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v18_a210 = load i32, i32* @sb, align 4
  %v24_a210 = load i32, i32* @fp, align 4
  %v1_a214 = urem i32 %arg2, 256
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_a230 = urem i32 %arg4, 256
  store i32 %v1_a230, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_a240 = call i32 @function_12630(i32 %v1_a214, i32 4)
  %v0_a244 = load i32, i32* @r5, align 4
  store i32 %v0_a244, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a250 = load i32, i32* @r7, align 4
  store i32 %v0_a250, i32* %r3.global-to-local, align 4
  %v0_a254 = load i32, i32* @r4, align 4
  %v5_a258 = inttoptr i32 %v0_a244 to i32*
  %v6_a258 = call i32 @function_83ec(i32 %v0_a254, i32* %v5_a258, i32 2, i32 %v0_a250, i32 %v2_a240)
  %v1_a264 = urem i32 %v6_a258, 256
  store i32 %v1_a264, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a270 = load i32, i32* @r5, align 4
  store i32 %v0_a270, i32* %r1.global-to-local, align 4
  %v0_a274 = load i32, i32* @r4, align 4
  %v5_a278 = trunc i32 %v6_a258 to i8
  %v6_a27c = inttoptr i32 %v0_a270 to i32*
  %v7_a27c = call i32 @function_83ec(i32 %v0_a274, i32* %v6_a27c, i32 3, i32 65535, i32 %v6_a258)
  %v0_a280 = load i32, i32* @r5, align 4
  store i32 %v0_a280, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_a290 = load i32, i32* @r4, align 4
  %v5_a294 = inttoptr i32 %v0_a280 to i32*
  %v6_a294 = call i32 @function_83ec(i32 %v0_a290, i32* %v5_a294, i32 4, i32 64, i32 %v7_a27c)
  %v1_a29c = urem i32 %v6_a294, 256
  store i32 %v1_a29c, i32* %ip.global-to-local, align 4
  %v0_a2a0 = load i32, i32* @r5, align 4
  store i32 %v0_a2a0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_a2a8 = load i32, i32* @r7, align 4
  store i32 %v0_a2a8, i32* %r3.global-to-local, align 4
  %v0_a2ac = load i32, i32* @r4, align 4
  %v5_a2b0 = trunc i32 %v6_a294 to i8
  %v6_a2b4 = inttoptr i32 %v0_a2a0 to i32*
  %v7_a2b4 = call i32 @function_83ec(i32 %v0_a2ac, i32* %v6_a2b4, i32 5, i32 %v0_a2a8, i32 %v6_a294)
  %v1_a2c0 = urem i32 %v7_a2b4, 256
  store i32 %v1_a2c0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a2cc = load i32, i32* @r5, align 4
  store i32 %v0_a2cc, i32* %r1.global-to-local, align 4
  %v0_a2d0 = load i32, i32* @r4, align 4
  %v5_a2d8 = inttoptr i32 %v0_a2cc to i32*
  %v6_a2d8 = call i32 @function_83ec(i32 %v0_a2d0, i32* %v5_a2d8, i32 6, i32 65535, i32 %v1_a2c0)
  %v0_a2e0 = load i32, i32* @r5, align 4
  store i32 %v0_a2e0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a2d8, i32* %sb.global-to-local, align 4
  %v0_a2f0 = load i32, i32* @r4, align 4
  %v5_a2f4 = inttoptr i32 %v0_a2e0 to i32*
  %v6_a2f4 = call i32 @function_83ec(i32 %v0_a2f0, i32* %v5_a2f4, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_a300 = load i32, i32* @r5, align 4
  store i32 %v0_a300, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_a30c = load i32, i32* @r4, align 4
  %v5_a310 = inttoptr i32 %v0_a300 to i32*
  %v6_a310 = call i32 @function_83ec(i32 %v0_a30c, i32* %v5_a310, i32 16, i32 65535, i32 %v6_a2f4)
  %v0_a31c = load i32, i32* @r5, align 4
  store i32 %v0_a31c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_a328 = load i32, i32* @r4, align 4
  %v5_a32c = inttoptr i32 %v0_a31c to i32*
  %v6_a32c = call i32 @function_83ec(i32 %v0_a328, i32* %v5_a32c, i32 17, i32 65535, i32 %v6_a310)
  %v0_a330 = load i32, i32* @r5, align 4
  store i32 %v0_a330, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_a33c = load i32, i32* @r7, align 4
  store i32 %v0_a33c, i32* %r3.global-to-local, align 4
  %v0_a340 = load i32, i32* @r4, align 4
  %v5_a344 = inttoptr i32 %v0_a330 to i32*
  %v6_a344 = call i32 @function_83ec(i32 %v0_a340, i32* %v5_a344, i32 10, i32 %v0_a33c, i32 %v6_a32c)
  %v0_a348 = load i32, i32* @r5, align 4
  store i32 %v0_a348, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a358 = load i32, i32* @r4, align 4
  %v5_a35c = inttoptr i32 %v0_a348 to i32*
  %v6_a35c = call i32 @function_83ec(i32 %v0_a358, i32* %v5_a35c, i32 11, i32 1, i32 %v6_a344)
  %v0_a360 = load i32, i32* @r5, align 4
  store i32 %v0_a360, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_a36c = load i32, i32* @r7, align 4
  store i32 %v0_a36c, i32* %r3.global-to-local, align 4
  %v0_a370 = load i32, i32* @r4, align 4
  %v5_a374 = inttoptr i32 %v0_a360 to i32*
  %v6_a374 = call i32 @function_83ec(i32 %v0_a370, i32* %v5_a374, i32 12, i32 %v0_a36c, i32 %v6_a35c)
  %v0_a378 = load i32, i32* @r5, align 4
  store i32 %v0_a378, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_a384 = load i32, i32* @r7, align 4
  store i32 %v0_a384, i32* %r3.global-to-local, align 4
  %v0_a388 = load i32, i32* @r4, align 4
  %v5_a38c = inttoptr i32 %v0_a378 to i32*
  %v6_a38c = call i32 @function_83ec(i32 %v0_a388, i32* %v5_a38c, i32 13, i32 %v0_a384, i32 %v6_a374)
  %v0_a390 = load i32, i32* @r5, align 4
  store i32 %v0_a390, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_a39c = load i32, i32* @r7, align 4
  store i32 %v0_a39c, i32* %r3.global-to-local, align 4
  %v0_a3a0 = load i32, i32* @r4, align 4
  %v5_a3a4 = inttoptr i32 %v0_a390 to i32*
  %v6_a3a4 = call i32 @function_83ec(i32 %v0_a3a0, i32* %v5_a3a4, i32 14, i32 %v0_a39c, i32 %v6_a38c)
  %v0_a3a8 = load i32, i32* @r5, align 4
  store i32 %v0_a3a8, i32* %r1.global-to-local, align 4
  %v0_a3b0 = load i32, i32* @r7, align 4
  store i32 %v0_a3b0, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_a3b8 = load i32, i32* @r4, align 4
  %v5_a3bc = inttoptr i32 %v0_a3a8 to i32*
  %v6_a3bc = call i32 @function_83ec(i32 %v0_a3b8, i32* %v5_a3bc, i32 15, i32 %v0_a3b0, i32 %v6_a3a4)
  %v0_a3c0 = load i32, i32* @r5, align 4
  store i32 %v0_a3c0, i32* %r1.global-to-local, align 4
  %v0_a3c4 = load i32, i32* @r7, align 4
  store i32 %v0_a3c4, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_a3bc, i32* %fp.global-to-local, align 4
  %v0_a3d0 = load i32, i32* @r4, align 4
  %v5_a3d4 = inttoptr i32 %v0_a3c0 to i32*
  %v6_a3d4 = call i32 @function_83ec(i32 %v0_a3d0, i32* %v5_a3d4, i32 %v0_a3c4, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a3e0 = load i32, i32* @r5, align 4
  store i32 %v0_a3e0, i32* %r1.global-to-local, align 4
  store i32 %v6_a3d4, i32* @sl, align 4
  %v0_a3e8 = load i32, i32* @r4, align 4
  %v5_a3ec = inttoptr i32 %v0_a3e0 to i32*
  %v6_a3ec = call i32 @function_83ec(i32 %v0_a3e8, i32* %v5_a3ec, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_a3f8 = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_a3f8, i32* %r3.global-to-local, align 4
  %v1_a3fc = urem i32 %v6_a3ec, 256
  store i32 %v1_a3fc, i32* %ip.global-to-local, align 4
  %v0_a400 = load i32, i32* @r5, align 4
  store i32 %v0_a400, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_a408 = load i32, i32* @r4, align 4
  %v5_a410 = inttoptr i32 %v0_a400 to i32*
  %v6_a410 = call i32 @function_8380(i32 %v0_a408, i32* %v5_a410, i32 19, i32 %v2_a3f8, i32 %v1_a3fc)
  %v0_a418 = load i32, i32* @r7, align 4
  %v1_a41c = inttoptr i32 %v0_a418 to i32*
  %v2_a41c = call i32 @function_11eb8(i32* %v1_a41c)
  %v1_a420 = load i32, i32* @r6, align 4
  %v2_a420 = add i32 %v1_a420, %v2_a41c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a434 = call i32 @function_124b0(i32 2, i32 3, i32 6)
  %v7_a438 = icmp eq i32 %v3_a434, -1
  store i1 %v7_a438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a438, label %dec_label_pc_a9b8, label %dec_label_pc_a444

dec_label_pc_a444:                                ; preds = %dec_label_pc_a210
  store i32 1, i32* %stack_var_-40, align 4
  %v6_a44c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_a44c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_a454 = load i32, i32* @r7, align 4
  store i32 %v0_a454, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_a460 = call i32 @function_12480(i32 %v3_a434, i32 %v0_a454, i32 3, i32* nonnull %stack_var_-40, i32 4)
  %v7_a464 = icmp eq i32 %v6_a460, -1
  store i1 %v7_a464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a464, label %dec_label_pc_a9c0, label %dec_label_pc_a46c

dec_label_pc_a46c:                                ; preds = %dec_label_pc_a444
  store i32 %v1_a214, i32* %r3.global-to-local, align 4
  %v3_a478 = mul i32 %v7_a27c, 65536
  store i32 %v3_a478, i32* @r4, align 4
  %v0_a47c = load i32, i32* %sb.global-to-local, align 4
  %v3_a47c = mul i32 %v0_a47c, 65536
  store i32 %v3_a47c, i32* %sb.global-to-local, align 4
  %v3_a484 = urem i32 %v7_a27c, 65536
  store i32 %v3_a484, i32* %ip.global-to-local, align 4
  %v3_a488 = urem i32 %v0_a47c, 65536
  store i32 %v3_a488, i32* %r1.global-to-local, align 4
  %v3_a48c = urem i32 %v6_a2f4, 65536
  store i32 %v3_a48c, i32* %r2.global-to-local, align 4
  %v2_a490 = icmp eq i32 %v1_a214, 0
  store i1 %v2_a490, i1* %cpsr_z.global-to-local, align 1
  %v0_a494 = load i32, i32* @r7, align 4
  store i32 %v0_a494, i32* %stack_var_-40, align 4
  br i1 %v2_a490, label %dec_label_pc_a72c.preheader, label %dec_label_pc_a4a8

dec_label_pc_a4a8:                                ; preds = %dec_label_pc_a46c
  %v0_a4b8 = load i32, i32* @sl, align 4
  %v1_a4c0 = urem i32 %v0_a47c, 256
  %tmp73 = udiv i32 %v7_a27c, 256
  %v1_a4d8 = urem i32 %v6_a2f4, 256
  store i32 %v1_a4d8, i32* @lr, align 4
  %tmp74 = mul i32 %v6_a310, 256
  %v1_a4e8 = and i32 %tmp74, 65280
  %tmp76 = udiv i32 %v6_a310, 256
  %v4_a4ec = urem i32 %tmp76, 256
  %v5_a4ec = or i32 %v4_a4ec, %v1_a4e8
  %v1_a508 = urem i32 %v6_a344, 2
  %v1_a50c = urem i32 %v6_a35c, 2
  %v1_a510 = urem i32 %v6_a374, 2
  %v1_a514 = urem i32 %v6_a38c, 2
  %v1_a4b8 = mul i32 %v0_a4b8, 65536
  %tmp93 = add i32 %v1_a4b8, 2621440
  %v3_a534 = sdiv i32 %tmp93, 16777216
  %sext12 = mul i32 %tmp73, 16777216
  %v7_a534 = sdiv i32 %sext12, 16777216
  %v3_a538 = mul nuw nsw i32 %v1_a4c0, 256
  %tmp77 = udiv i32 %v6_a2f4, 256
  %v3_a53c = urem i32 %tmp77, 256
  %v1_a540 = urem i32 %v6_a3a4, 2
  store i32 %v1_a540, i32* %ip.global-to-local, align 4
  %v1_a544 = urem i32 %v6_a374, 256
  store i32 %v1_a544, i32* %r1.global-to-local, align 4
  %v3_a548 = ashr i32 %tmp93, 31
  store i32 %v3_a548, i32* %r2.global-to-local, align 4
  %v3_a54c = ashr i32 %sext12, 31
  store i32 %v3_a54c, i32* %r3.global-to-local, align 4
  %tmp94 = udiv i32 %v0_a47c, 256
  %v4_a550 = urem i32 %tmp94, 256
  %v5_a550 = or i32 %v4_a550, %v3_a538
  store i32 %v5_a550, i32* @r4, align 4
  %v0_a554 = load i32, i32* %fp.global-to-local, align 4
  %v1_a554 = urem i32 %v0_a554, 2
  %v4_a558 = mul nuw nsw i32 %v1_a4d8, 256
  %v5_a558 = or i32 %v4_a558, %v3_a53c
  store i32 %v5_a558, i32* @r5, align 4
  %v5_a564 = trunc i32 %v3_a548 to i8
  store i32 %v0_a494, i32* @r6, align 4
  store i32 %v1_a4c0, i32* @fp, align 4
  store i32 %v1_a4d8, i32* @sb, align 4
  %tmp = sub nsw i32 0, %v1_a508
  %v4_a648 = and i32 %tmp, 32
  %tmp95 = sub nsw i32 0, %v1_a50c
  %v4_a65c = and i32 %tmp95, 16
  %tmp96 = sub nsw i32 0, %v1_a510
  %v4_a670 = and i32 %tmp96, 8
  %tmp97 = sub nsw i32 0, %v1_a514
  %v4_a684 = and i32 %tmp97, 4
  %tmp98 = sub nsw i32 0, %v1_a540
  %v3_a698 = and i32 %tmp98, 2
  %v2_a6e8 = icmp eq i32 %v1_a544, 0
  br label %dec_label_pc_a580

dec_label_pc_a580:                                ; preds = %.thread11, %dec_label_pc_a4a8
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_a58c = call i32 @function_12630(i32 1510, i32 1)
  store i32 %v2_a240, i32* %ip.global-to-local, align 4
  %v3_a594 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a594, i32* %r3.global-to-local, align 4
  %v2_a598 = load i32, i32* @r6, align 4
  %v5_a598 = mul i32 %v2_a598, 4
  %v6_a598 = add i32 %v5_a598, %v2_a240
  %v7_a598 = inttoptr i32 %v6_a598 to i32*
  store i32 %v2_a58c, i32* %v7_a598, align 4
  %v0_a59c = load i32, i32* %ip.global-to-local, align 4
  %v1_a59c = load i32, i32* %r3.global-to-local, align 4
  %v4_a59c = mul i32 %v1_a59c, 4
  %v5_a59c = add i32 %v4_a59c, %v0_a59c
  %v6_a59c = inttoptr i32 %v5_a59c to i32*
  %v7_a59c = load i32, i32* %v6_a59c, align 4
  store i32 %v7_a59c, i32* %r1.global-to-local, align 4
  %v1_a5a0 = inttoptr i32 %v7_a59c to i8*
  %v2_a5a0 = load i8, i8* %v1_a5a0, align 1
  %tmp99 = urem i8 %v2_a5a0, 16
  %v1_a5a4 = zext i8 %tmp99 to i32
  %v1_a5a8 = or i32 %v1_a5a4, 64
  store i32 %v1_a5a8, i32* %r2.global-to-local, align 4
  %v1_a5ac = trunc i32 %v1_a5a8 to i8
  store i8 %v1_a5ac, i8* %v1_a5a0, align 1
  %v0_a5b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5b0 = inttoptr i32 %v0_a5b0 to i8*
  %v2_a5b0 = load i8, i8* %v1_a5b0, align 1
  %v1_a5b4 = and i8 %v2_a5b0, -16
  %v1_a5b8 = or i8 %v1_a5b4, 5
  store i32 %v1_a2c0, i32* %r2.global-to-local, align 4
  store i8 %v1_a5b8, i8* %v1_a5b0, align 1
  %v2_a5c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5c8 = add i32 %v2_a5c8, 1
  %v4_a5c8 = inttoptr i32 %v3_a5c8 to i8*
  store i8 %v5_a278, i8* %v4_a5c8, align 1
  store i32 %v6_a294, i32* %ip.global-to-local, align 4
  %v2_a5d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5d0 = add i32 %v2_a5d0, 8
  %v4_a5d0 = inttoptr i32 %v3_a5d0 to i8*
  store i8 %v5_a2b0, i8* %v4_a5d0, align 1
  %v0_a5d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_a5d4 = icmp eq i32 %v0_a5d4, 0
  store i1 %v2_a5d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a548, i32* %r3.global-to-local, align 4
  store i32 %v3_a534, i32* %r2.global-to-local, align 4
  %v2_a5e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5e0 = add i32 %v2_a5e0, 3
  %v4_a5e0 = inttoptr i32 %v3_a5e0 to i8*
  store i8 %v5_a564, i8* %v4_a5e0, align 1
  %v0_a5e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5e4 = trunc i32 %v0_a5e4 to i8
  %v2_a5e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5e4 = add i32 %v2_a5e4, 2
  %v4_a5e4 = inttoptr i32 %v3_a5e4 to i8*
  store i8 %v1_a5e4, i8* %v4_a5e4, align 1
  %v0_a5e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a5e8, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_a580
  store i32 %v3_a54c, i32* %r2.global-to-local, align 4
  %extract.t91 = trunc i32 %v3_a54c to i8
  br label %bb78

bb:                                               ; preds = %dec_label_pc_a580
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v3_a54c, i32* %r2.global-to-local, align 4
  %v3_a5f0 = load i32, i32* %r1.global-to-local, align 4
  %v4_a5f0 = add i32 %v3_a5f0, 6
  %v5_a5f0 = inttoptr i32 %v4_a5f0 to i8*
  store i8 64, i8* %v5_a5f0, align 1
  %v0_a5f8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t92 = trunc i32 %v0_a5f8.pre to i8
  br label %bb78

bb78:                                             ; preds = %.thread, %bb
  %v3_a54c.sink.off0 = phi i8 [ %extract.t91, %.thread ], [ %extract.t92, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_a5f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5f8 = add i32 %v2_a5f8, 5
  %v4_a5f8 = inttoptr i32 %v3_a5f8 to i8*
  store i8 %v3_a54c.sink.off0, i8* %v4_a5f8, align 1
  store i32 %v7_a534, i32* %ip.global-to-local, align 4
  %v0_a600 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a600, label %bb80, label %bb79

bb79:                                             ; preds = %bb78
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %bb78, %bb79
  %v0_a604 = load i32, i32* %r3.global-to-local, align 4
  %v1_a604 = trunc i32 %v0_a604 to i8
  %v2_a604 = load i32, i32* %r1.global-to-local, align 4
  %v3_a604 = add i32 %v2_a604, 9
  %v4_a604 = inttoptr i32 %v3_a604 to i8*
  store i8 %v1_a604, i8* %v4_a604, align 1
  %v0_a608 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a608, label %bb82, label %bb81

bb81:                                             ; preds = %bb80
  %v1_a608 = load i32, i32* %r2.global-to-local, align 4
  %v2_a608 = trunc i32 %v1_a608 to i8
  %v3_a608 = load i32, i32* %r1.global-to-local, align 4
  %v4_a608 = add i32 %v3_a608, 7
  %v5_a608 = inttoptr i32 %v4_a608 to i8*
  store i8 %v2_a608, i8* %v5_a608, align 1
  br label %bb82

bb82:                                             ; preds = %bb80, %bb81
  %v3_a60c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a60c, i32* %r2.global-to-local, align 4
  %v0_a610 = load i32, i32* %ip.global-to-local, align 4
  %v1_a610 = trunc i32 %v0_a610 to i8
  %v2_a610 = load i32, i32* %r1.global-to-local, align 4
  %v3_a610 = add i32 %v2_a610, 4
  %v4_a610 = inttoptr i32 %v3_a610 to i8*
  store i8 %v1_a610, i8* %v4_a610, align 1
  store i32 %v6_a410, i32* %ip.global-to-local, align 4
  %v0_a618 = load i32, i32* %r2.global-to-local, align 4
  %v3_a618 = mul i32 %v0_a618, 32
  store i32 %v3_a618, i32* %r3.global-to-local, align 4
  %v1_a61c = load i32, i32* %r1.global-to-local, align 4
  %v2_a61c = add i32 %v1_a61c, 12
  %v3_a61c = inttoptr i32 %v2_a61c to i32*
  store i32 %v6_a410, i32* %v3_a61c, align 4
  %v0_a620 = load i32, i32* %r3.global-to-local, align 4
  %v1_a620 = load i32, i32* %r2.global-to-local, align 4
  %tmp100 = mul i32 %v1_a620, -8
  %v5_a620 = add i32 %v0_a620, %tmp100
  %v1_a624 = load i32, i32* @r8, align 4
  %v2_a624 = add i32 %v1_a624, %v5_a620
  store i32 %v2_a624, i32* %r3.global-to-local, align 4
  %v1_a628 = add i32 %v2_a624, 16
  %v2_a628 = inttoptr i32 %v1_a628 to i32*
  %v3_a628 = load i32, i32* %v2_a628, align 4
  store i32 %v3_a628, i32* %r2.global-to-local, align 4
  %v0_a62c = load i32, i32* @r4, align 4
  %v1_a62c = trunc i32 %v0_a62c to i8
  %v2_a62c = load i32, i32* %r1.global-to-local, align 4
  %v3_a62c = add i32 %v2_a62c, 20
  %v4_a62c = inttoptr i32 %v3_a62c to i8*
  store i8 %v1_a62c, i8* %v4_a62c, align 1
  %v0_a630 = load i32, i32* %r2.global-to-local, align 4
  %v1_a630 = load i32, i32* %r1.global-to-local, align 4
  %v2_a630 = add i32 %v1_a630, 16
  %v3_a630 = inttoptr i32 %v2_a630 to i32*
  store i32 %v0_a630, i32* %v3_a630, align 4
  %v0_a634 = load i32, i32* %r1.global-to-local, align 4
  %v1_a634 = add i32 %v0_a634, 20
  store i32 %v1_a634, i32* @r6, align 4
  %v1_a638 = add i32 %v0_a634, 33
  %v2_a638 = inttoptr i32 %v1_a638 to i8*
  %v3_a638 = load i8, i8* %v2_a638, align 1
  %v4_a638 = zext i8 %v3_a638 to i32
  %v1_a63c = add i32 %v0_a634, 40
  store i32 %v1_a63c, i32* @r7, align 4
  store i32 %v1_a508, i32* %r1.global-to-local, align 4
  %v1_a644 = and i32 %v4_a638, 223
  %v5_a648 = or i32 %v1_a644, %v4_a648
  store i32 %v5_a648, i32* %r3.global-to-local, align 4
  %v1_a64c = trunc i32 %v5_a648 to i8
  store i8 %v1_a64c, i8* %v2_a638, align 1
  %v0_a650 = load i32, i32* @r6, align 4
  %v1_a650 = add i32 %v0_a650, 13
  %v2_a650 = inttoptr i32 %v1_a650 to i8*
  %v3_a650 = load i8, i8* %v2_a650, align 1
  %v4_a650 = zext i8 %v3_a650 to i32
  store i32 %v1_a50c, i32* %r3.global-to-local, align 4
  %v1_a658 = and i32 %v4_a650, 239
  %v5_a65c = or i32 %v1_a658, %v4_a65c
  store i32 %v5_a65c, i32* %r2.global-to-local, align 4
  %v1_a660 = trunc i32 %v5_a65c to i8
  store i8 %v1_a660, i8* %v2_a650, align 1
  %v0_a664 = load i32, i32* @r6, align 4
  %v1_a664 = add i32 %v0_a664, 13
  %v2_a664 = inttoptr i32 %v1_a664 to i8*
  %v3_a664 = load i8, i8* %v2_a664, align 1
  %v4_a664 = zext i8 %v3_a664 to i32
  store i32 %v1_a510, i32* %ip.global-to-local, align 4
  %v1_a66c = and i32 %v4_a664, 247
  %v5_a670 = or i32 %v1_a66c, %v4_a670
  store i32 %v5_a670, i32* %r3.global-to-local, align 4
  %v1_a674 = trunc i32 %v5_a670 to i8
  store i8 %v1_a674, i8* %v2_a664, align 1
  %v0_a678 = load i32, i32* @r6, align 4
  %v1_a678 = add i32 %v0_a678, 13
  %v2_a678 = inttoptr i32 %v1_a678 to i8*
  %v3_a678 = load i8, i8* %v2_a678, align 1
  %v4_a678 = zext i8 %v3_a678 to i32
  store i32 %v1_a514, i32* %r1.global-to-local, align 4
  %v1_a680 = and i32 %v4_a678, 251
  %v5_a684 = or i32 %v1_a680, %v4_a684
  store i32 %v5_a684, i32* %r2.global-to-local, align 4
  %v1_a688 = trunc i32 %v5_a684 to i8
  store i8 %v1_a688, i8* %v2_a678, align 1
  %v0_a68c = load i32, i32* @r6, align 4
  %v1_a68c = add i32 %v0_a68c, 13
  %v2_a68c = inttoptr i32 %v1_a68c to i8*
  %v3_a68c = load i8, i8* %v2_a68c, align 1
  %v4_a68c = zext i8 %v3_a68c to i32
  store i32 %v1_a540, i32* %r2.global-to-local, align 4
  %v1_a694 = and i32 %v4_a68c, 253
  %v4_a698 = or i32 %v1_a694, %v3_a698
  store i32 %v4_a698, i32* %r3.global-to-local, align 4
  %v1_a69c = trunc i32 %v4_a698 to i8
  store i8 %v1_a69c, i8* %v2_a68c, align 1
  %v0_a6a0 = load i32, i32* @r6, align 4
  %v1_a6a0 = add i32 %v0_a6a0, 12
  %v2_a6a0 = inttoptr i32 %v1_a6a0 to i8*
  %v3_a6a0 = load i8, i8* %v2_a6a0, align 1
  %v4_a6a0 = zext i8 %v3_a6a0 to i32
  store i32 %v4_a6a0, i32* %r2.global-to-local, align 4
  %v1_a6a4 = add i32 %v0_a6a0, 13
  %v2_a6a4 = inttoptr i32 %v1_a6a4 to i8*
  %v3_a6a4 = load i8, i8* %v2_a6a4, align 1
  %v4_a6a4 = zext i8 %v3_a6a4 to i32
  store i32 %v1_a554, i32* %ip.global-to-local, align 4
  %tmp101 = urem i8 %v3_a6a0, 16
  %v1_a6ac = zext i8 %tmp101 to i32
  %v1_a6b0 = and i32 %v4_a6a4, 254
  %v2_a6b4 = or i32 %v1_a6b0, %v1_a554
  store i32 %v2_a6b4, i32* %r3.global-to-local, align 4
  %v1_a6b8 = or i32 %v1_a6ac, 80
  store i32 %v1_a6b8, i32* %r2.global-to-local, align 4
  %v1_a6bc = trunc i32 %v1_a6b8 to i8
  store i8 %v1_a6bc, i8* %v2_a6a0, align 1
  %v0_a6c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a6c0 = trunc i32 %v0_a6c0 to i8
  %v2_a6c0 = load i32, i32* @r6, align 4
  %v3_a6c0 = add i32 %v2_a6c0, 13
  %v4_a6c0 = inttoptr i32 %v3_a6c0 to i8*
  store i8 %v1_a6c0, i8* %v4_a6c0, align 1
  store i32 %v5_a4ec, i32* %r1.global-to-local, align 4
  %v0_a6c8 = load i32, i32* @fp, align 4
  %v1_a6c8 = trunc i32 %v0_a6c8 to i8
  %v2_a6c8 = load i32, i32* @r6, align 4
  %v3_a6c8 = add i32 %v2_a6c8, 1
  %v4_a6c8 = inttoptr i32 %v3_a6c8 to i8*
  store i8 %v1_a6c8, i8* %v4_a6c8, align 1
  %v0_a6cc = load i32, i32* %r1.global-to-local, align 4
  %v1_a6cc = load i32, i32* @r6, align 4
  %v2_a6cc = add i32 %v1_a6cc, 4
  %v3_a6cc = inttoptr i32 %v2_a6cc to i32*
  store i32 %v0_a6cc, i32* %v3_a6cc, align 4
  %v0_a6d0 = load i32, i32* @r5, align 4
  %v1_a6d0 = trunc i32 %v0_a6d0 to i8
  %v2_a6d0 = load i32, i32* @r6, align 4
  %v3_a6d0 = add i32 %v2_a6d0, 2
  %v4_a6d0 = inttoptr i32 %v3_a6d0 to i8*
  store i8 %v1_a6d0, i8* %v4_a6d0, align 1
  %v0_a6d4 = load i32, i32* @sb, align 4
  %v1_a6d4 = trunc i32 %v0_a6d4 to i8
  %v2_a6d4 = load i32, i32* @r6, align 4
  %v3_a6d4 = add i32 %v2_a6d4, 3
  %v4_a6d4 = inttoptr i32 %v3_a6d4 to i8*
  store i8 %v1_a6d4, i8* %v4_a6d4, align 1
  %v0_a6d8 = call i32 @function_db88()
  store i32 %v1_a544, i32* %ip.global-to-local, align 4
  %sext = mul i32 %v0_a6d8, 16777216
  %v1_a6e0 = sdiv i32 %sext, 16777216
  store i32 %v1_a6e0, i32* %r2.global-to-local, align 4
  %v3_a6e4 = ashr i32 %sext, 31
  store i32 %v3_a6e4, i32* %r3.global-to-local, align 4
  store i1 %v2_a6e8, i1* %cpsr_z.global-to-local, align 1
  %v1_a6ec = trunc i32 %v3_a6e4 to i8
  %v2_a6ec = load i32, i32* @r6, align 4
  %v3_a6ec = add i32 %v2_a6ec, 15
  %v4_a6ec = inttoptr i32 %v3_a6ec to i8*
  store i8 %v1_a6ec, i8* %v4_a6ec, align 1
  %v0_a6f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a6f0, label %.thread11, label %bb83

bb83:                                             ; preds = %bb82
  %v1_a6f0 = load i32, i32* @r6, align 4
  %v2_a6f0 = add i32 %v1_a6f0, 13
  %v3_a6f0 = inttoptr i32 %v2_a6f0 to i8*
  %v4_a6f0 = load i8, i8* %v3_a6f0, align 1
  %v5_a6f0 = zext i8 %v4_a6f0 to i32
  %v2_a6f4 = or i32 %v5_a6f0, 8
  store i32 %v2_a6f4, i32* %r3.global-to-local, align 4
  %v2_a6f8 = trunc i32 %v2_a6f4 to i8
  store i8 %v2_a6f8, i8* %v3_a6f0, align 1
  br label %.thread11

.thread11:                                        ; preds = %bb82, %bb83
  %v0_a6fc = load i32, i32* %r2.global-to-local, align 4
  %v1_a6fc = trunc i32 %v0_a6fc to i8
  %v2_a6fc = load i32, i32* @r6, align 4
  %v3_a6fc = add i32 %v2_a6fc, 14
  %v4_a6fc = inttoptr i32 %v3_a6fc to i8*
  store i8 %v1_a6fc, i8* %v4_a6fc, align 1
  %v0_a700 = load i32, i32* @sl, align 4
  store i32 %v0_a700, i32* %r1.global-to-local, align 4
  %v0_a704 = load i32, i32* @r7, align 4
  %v2_a708 = call i32 @function_dc3c(i32 %v0_a704, i32 %v0_a700)
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a710 = load i32, i32* @r7, align 4
  %v3_a710 = load i32, i32* @sl, align 4
  %v4_a710 = add i32 %v3_a710, %v2_a710
  %v5_a710 = inttoptr i32 %v4_a710 to i8*
  store i8 0, i8* %v5_a710, align 1
  %v3_a714 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a714, i32* %r2.global-to-local, align 4
  store i32 %v1_a214, i32* %r1.global-to-local, align 4
  %v1_a71c = add i32 %v3_a714, 1
  store i32 %v1_a71c, i32* @r6, align 4
  %v9_a720 = icmp eq i32 %v1_a214, %v1_a71c
  store i1 %v9_a720, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a71c, i32* %stack_var_-40, align 4
  %v8_a728 = icmp sgt i32 %v1_a214, %v1_a71c
  br i1 %v8_a728, label %dec_label_pc_a580, label %dec_label_pc_a72c.preheader

dec_label_pc_a72c.preheader:                      ; preds = %.thread11, %dec_label_pc_a46c
  %v2_a76c = icmp eq i32 %v6_a410, -1
  %v7_a76c = icmp eq i32 %v6_a410, -1
  %v3_a904 = icmp eq i32 %v3_a484, 65535
  %v2_a980 = icmp eq i32 %v1_a3fc, 0
  br label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a72c.preheader, %dec_label_pc_a9a4
  store i32 %v1_a214, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_a490, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_a490, label %dec_label_pc_a9a4, label %dec_label_pc_a740

dec_label_pc_a740:                                ; preds = %dec_label_pc_a72c
  %v0_a740 = load i32, i32* @sl, align 4
  %v1_a740 = add i32 %v0_a740, 20
  store i32 %v1_a740, i32* @sb, align 4
  %tmp84 = mul i32 %v1_a740, 256
  %v1_a74c = and i32 %tmp84, 65280
  store i32 %v1_a74c, i32* %r3.global-to-local, align 4
  %tmp85 = udiv i32 %v1_a740, 256
  %v4_a750 = urem i32 %tmp85, 256
  %v5_a750 = or i32 %v4_a750, %v1_a74c
  store i32 %v5_a750, i32* %r2.global-to-local, align 4
  %v1_a758 = add i32 %v0_a740, 40
  store i32 %v1_a758, i32* @fp, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_a868

dec_label_pc_a768:                                ; preds = %dec_label_pc_a868
  store i32 %v6_a410, i32* %r1.global-to-local, align 4
  store i1 %v7_a76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a76c, label %dec_label_pc_a8f4, label %dec_label_pc_a774

dec_label_pc_a774:                                ; preds = %dec_label_pc_a88c, %dec_label_pc_a768
  store i32 %v3_a484, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a904, label %dec_label_pc_a910, label %dec_label_pc_a788

dec_label_pc_a788:                                ; preds = %dec_label_pc_a8f4.dec_label_pc_a788_crit_edge, %dec_label_pc_a774
  %v1_a78c = phi i32 [ %v1_a78c.pre, %dec_label_pc_a8f4.dec_label_pc_a788_crit_edge ], [ 65535, %dec_label_pc_a774 ]
  store i32 %v3_a488, i32* %r3.global-to-local, align 4
  %v9_a78c = icmp eq i32 %v3_a488, %v1_a78c
  store i1 %v9_a78c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a78c, label %dec_label_pc_a92c, label %dec_label_pc_a794

dec_label_pc_a794:                                ; preds = %dec_label_pc_a910.dec_label_pc_a794_crit_edge, %dec_label_pc_a788
  %v1_a798 = phi i32 [ %v1_a798.pre, %dec_label_pc_a910.dec_label_pc_a794_crit_edge ], [ %v1_a78c, %dec_label_pc_a788 ]
  store i32 %v3_a48c, i32* %ip.global-to-local, align 4
  %v9_a798 = icmp eq i32 %v3_a48c, %v1_a798
  store i1 %v9_a798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a798, label %dec_label_pc_a948, label %dec_label_pc_a7a0

dec_label_pc_a7a0:                                ; preds = %dec_label_pc_a92c.dec_label_pc_a7a0_crit_edge, %dec_label_pc_a794
  %v1_a7a4 = phi i32 [ %v1_a7a4.pre, %dec_label_pc_a92c.dec_label_pc_a7a0_crit_edge ], [ %v1_a798, %dec_label_pc_a794 ]
  store i32 %v6_a310, i32* %r1.global-to-local, align 4
  %v9_a7a4 = icmp eq i32 %v6_a310, %v1_a7a4
  store i1 %v9_a7a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a7a4, label %dec_label_pc_a964, label %dec_label_pc_a7ac

dec_label_pc_a7ac:                                ; preds = %dec_label_pc_a948.dec_label_pc_a7ac_crit_edge, %dec_label_pc_a7a0
  %v1_a7b0 = phi i32 [ %v1_a7b0.pre, %dec_label_pc_a948.dec_label_pc_a7ac_crit_edge ], [ %v1_a7a4, %dec_label_pc_a7a0 ]
  store i32 %v6_a32c, i32* %r2.global-to-local, align 4
  %v9_a7b0 = icmp eq i32 %v6_a32c, %v1_a7b0
  store i1 %v9_a7b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a7b0, label %dec_label_pc_a978, label %dec_label_pc_a7b8

dec_label_pc_a7b8:                                ; preds = %dec_label_pc_a964, %dec_label_pc_a7ac
  store i32 %v1_a3fc, i32* %r3.global-to-local, align 4
  store i1 %v2_a980, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a980, label %dec_label_pc_a7c4, label %dec_label_pc_a98c

dec_label_pc_a7c4:                                ; preds = %dec_label_pc_a7b8, %dec_label_pc_a978, %dec_label_pc_a98c
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a7c8 = load i32, i32* @r7, align 4
  %v1_a7c8 = trunc i32 %v0_a7c8 to i8
  %v2_a7c8 = load i32, i32* @r5, align 4
  %v3_a7c8 = add i32 %v2_a7c8, 10
  %v4_a7c8 = inttoptr i32 %v3_a7c8 to i8*
  store i8 %v1_a7c8, i8* %v4_a7c8, align 1
  %v0_a7cc = load i32, i32* @r7, align 4
  %v1_a7cc = trunc i32 %v0_a7cc to i8
  %v2_a7cc = load i32, i32* @r5, align 4
  %v3_a7cc = add i32 %v2_a7cc, 11
  %v4_a7cc = inttoptr i32 %v3_a7cc to i8*
  store i8 %v1_a7cc, i8* %v4_a7cc, align 1
  %v0_a7d0 = load i32, i32* @r5, align 4
  store i32 %v0_a7d0, i32* @r0, align 4
  %v2_a7d4 = call i32 @function_c7e0(i32 %v0_a7d0, i32 20)
  %v3_a7d4 = trunc i32 %v2_a7d4 to i8
  %v4_a7d824 = udiv i32 %v2_a7d4, 256
  %v1_a7dc = trunc i32 %v4_a7d824 to i8
  %v2_a7dc = load i32, i32* @r5, align 4
  %v3_a7dc = add i32 %v2_a7dc, 11
  %v4_a7dc = inttoptr i32 %v3_a7dc to i8*
  store i8 %v1_a7dc, i8* %v4_a7dc, align 1
  %v3_a7e0 = load i32, i32* @r5, align 4
  %v4_a7e0 = add i32 %v3_a7e0, 10
  %v5_a7e0 = inttoptr i32 %v4_a7e0 to i8*
  store i8 %v3_a7d4, i8* %v5_a7e0, align 1
  %v0_a7e4 = load i32, i32* @r6, align 4
  store i32 %v0_a7e4, i32* @r1, align 4
  store i32 %v5_a750, i32* %r2.global-to-local, align 4
  %v0_a7ec = load i32, i32* @sb, align 4
  store i32 %v0_a7ec, i32* %r3.global-to-local, align 4
  %v0_a7f0 = load i32, i32* @r7, align 4
  %v1_a7f0 = trunc i32 %v0_a7f0 to i8
  %v3_a7f0 = add i32 %v0_a7e4, 16
  %v4_a7f0 = inttoptr i32 %v3_a7f0 to i8*
  store i8 %v1_a7f0, i8* %v4_a7f0, align 1
  %v0_a7f4 = load i32, i32* @r7, align 4
  %v1_a7f4 = trunc i32 %v0_a7f4 to i8
  %v2_a7f4 = load i32, i32* @r6, align 4
  %v3_a7f4 = add i32 %v2_a7f4, 17
  %v4_a7f4 = inttoptr i32 %v3_a7f4 to i8*
  store i8 %v1_a7f4, i8* %v4_a7f4, align 1
  %v0_a7f8 = load i32, i32* @r5, align 4
  %v4_a7fc = call i32 @function_c83c(i32 %v0_a7f8, i32 %v0_a7e4, i32 %v5_a750, i32 %v0_a7ec)
  %v5_a7fc = trunc i32 %v4_a7fc to i8
  %v4_a80025 = udiv i32 %v4_a7fc, 256
  %v1_a804 = trunc i32 %v4_a80025 to i8
  %v2_a804 = load i32, i32* @r6, align 4
  %v3_a804 = add i32 %v2_a804, 17
  %v4_a804 = inttoptr i32 %v3_a804 to i8*
  store i8 %v1_a804, i8* %v4_a804, align 1
  %v3_a808 = load i32, i32* @r6, align 4
  %v4_a808 = add i32 %v3_a808, 16
  %v5_a808 = inttoptr i32 %v4_a808 to i8*
  store i8 %v5_a7fc, i8* %v5_a808, align 1
  %v3_a80c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a80c, i32* %r3.global-to-local, align 4
  %v0_a810 = load i32, i32* @r5, align 4
  %v1_a810 = add i32 %v0_a810, 20
  %v2_a810 = inttoptr i32 %v1_a810 to i32*
  %v3_a810 = load i32, i32* %v2_a810, align 4
  %v3_a818 = udiv i32 %v3_a810, 65536
  store i32 %v3_a818, i32* %r2.global-to-local, align 4
  %v5_a81c = mul i32 %v3_a80c, 24
  %v1_a820 = load i32, i32* @r8, align 4
  %v2_a820 = add i32 %v1_a820, %v5_a81c
  store i32 %v2_a820, i32* %ip.global-to-local, align 4
  %v3_a82421 = udiv i32 %v3_a810, 16777216
  %v1_a828 = trunc i32 %v3_a82421 to i8
  %v3_a828 = add i32 %v2_a820, 3
  %v4_a828 = inttoptr i32 %v3_a828 to i8*
  store i8 %v1_a828, i8* %v4_a828, align 1
  %v0_a82c = load i32, i32* %r2.global-to-local, align 4
  %v1_a82c = trunc i32 %v0_a82c to i8
  %v2_a82c = load i32, i32* %ip.global-to-local, align 4
  %v3_a82c = add i32 %v2_a82c, 2
  %v4_a82c = inttoptr i32 %v3_a82c to i8*
  store i8 %v1_a82c, i8* %v4_a82c, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a834 = load i32, i32* @r5, align 4
  store i32 %v0_a834, i32* %r1.global-to-local, align 4
  %v0_a83c = load i32, i32* @fp, align 4
  store i32 %v0_a83c, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_a844 = load i32, i32* %ip.global-to-local, align 4
  %v6_a84c = inttoptr i32 %v0_a834 to i32*
  %v7_a84c = call i32 @function_1244c(i32 %v3_a434, i32* %v6_a84c, i32 %v0_a83c, i32 16384, i32 %v0_a844, i32 16)
  %v3_a850 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a850, i32* %r3.global-to-local, align 4
  store i32 %v1_a214, i32* %ip.global-to-local, align 4
  %v1_a858 = add i32 %v3_a850, 1
  %v9_a85c = icmp eq i32 %v1_a214, %v1_a858
  store i1 %v9_a85c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a858, i32* %stack_var_-40, align 4
  %v7_a864 = icmp sgt i32 %v1_a214, %v1_a858
  br i1 %v7_a864, label %dec_label_pc_a868, label %dec_label_pc_a9a4

dec_label_pc_a868:                                ; preds = %dec_label_pc_a7c4, %dec_label_pc_a740
  %v1_a87c = phi i32 [ %v1_a858, %dec_label_pc_a7c4 ], [ 0, %dec_label_pc_a740 ]
  %v5_a86c = mul i32 %v1_a87c, 24
  %v1_a870 = load i32, i32* @r8, align 4
  %v2_a870 = add i32 %v1_a870, %v5_a86c
  store i32 %v2_a870, i32* %r3.global-to-local, align 4
  store i32 %v2_a240, i32* %ip.global-to-local, align 4
  %v1_a878 = add i32 %v2_a870, 20
  %v2_a878 = inttoptr i32 %v1_a878 to i8*
  %v3_a878 = load i8, i8* %v2_a878, align 1
  %v4_a878 = zext i8 %v3_a878 to i32
  store i32 %v4_a878, i32* %r2.global-to-local, align 4
  %v4_a87c = mul i32 %v1_a87c, 4
  %v5_a87c = add i32 %v4_a87c, %v2_a240
  %v6_a87c = inttoptr i32 %v5_a87c to i32*
  %v7_a87c = load i32, i32* %v6_a87c, align 4
  store i32 %v7_a87c, i32* @r5, align 4
  %v2_a880 = icmp ugt i8 %v3_a878, 30
  %v7_a880 = icmp eq i8 %v3_a878, 31
  store i1 %v7_a880, i1* %cpsr_z.global-to-local, align 1
  %v1_a884 = add i32 %v7_a87c, 20
  store i32 %v1_a884, i32* @r6, align 4
  %v2_a888 = xor i1 %v7_a880, true
  %v3_a888 = and i1 %v2_a880, %v2_a888
  br i1 %v3_a888, label %dec_label_pc_a768, label %dec_label_pc_a88c

dec_label_pc_a88c:                                ; preds = %dec_label_pc_a868
  %v1_a88c = add i32 %v2_a870, 16
  %v2_a88c = inttoptr i32 %v1_a88c to i32*
  %v3_a88c = load i32, i32* %v2_a88c, align 4
  %v0_a890 = call i32 @function_db88()
  %v3_a894 = load i32, i32* %stack_var_-40, align 4
  %v5_a89c = mul i32 %v3_a894, 24
  %v1_a8a4 = load i32, i32* @r8, align 4
  %v2_a8a4 = add i32 %v1_a8a4, %v5_a89c
  store i32 %v2_a8a4, i32* %r1.global-to-local, align 4
  %v1_a8a8 = and i32 %v3_a88c, 65280
  store i32 %v1_a8a8, i32* %r3.global-to-local, align 4
  %v1_a8a0 = udiv i32 %v3_a88c, 256
  %v3_a8ac = and i32 %v1_a8a0, 65280
  store i32 %v3_a8ac, i32* %r2.global-to-local, align 4
  %v3_a8b0 = mul i32 %v3_a88c, 16777216
  store i32 %v3_a8b0, i32* %ip.global-to-local, align 4
  %v1_a8b4 = add i32 %v2_a8a4, 20
  %v2_a8b4 = inttoptr i32 %v1_a8b4 to i8*
  %v3_a8b4 = load i8, i8* %v2_a8b4, align 1
  %v4_a8b4 = zext i8 %v3_a8b4 to i32
  store i32 %v4_a8b4, i32* @lr, align 4
  %v4_a8b8 = mul nuw nsw i32 %v1_a8a8, 256
  %v5_a8b8 = or i32 %v4_a8b8, %v3_a8b0
  store i32 %v5_a8b8, i32* %ip.global-to-local, align 4
  %v2_a8c0 = call i32 @llvm.bswap.i32(i32 %v3_a88c)
  %v7_a8c4 = lshr i32 %v0_a890, %v4_a8b4
  %v8_a8c4 = add i32 %v7_a8c4, %v2_a8c0
  store i32 %v8_a8c4, i32* %r2.global-to-local, align 4
  %v2_a8e0 = call i32 @llvm.bswap.i32(i32 %v8_a8c4)
  store i32 %v2_a8e0, i32* %r3.global-to-local, align 4
  store i32 %v6_a410, i32* %r1.global-to-local, align 4
  store i1 %v7_a76c, i1* %cpsr_z.global-to-local, align 1
  %v1_a8ec = load i32, i32* @r5, align 4
  %v2_a8ec = add i32 %v1_a8ec, 16
  %v3_a8ec = inttoptr i32 %v2_a8ec to i32*
  store i32 %v2_a8e0, i32* %v3_a8ec, align 4
  br i1 %v2_a76c, label %dec_label_pc_a8f4, label %dec_label_pc_a774

dec_label_pc_a8f4:                                ; preds = %dec_label_pc_a88c, %dec_label_pc_a768
  %v0_a8f4 = call i32 @function_db88()
  store i32 %v3_a484, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a904, i1* %cpsr_z.global-to-local, align 1
  %v1_a908 = load i32, i32* @r5, align 4
  %v2_a908 = add i32 %v1_a908, 12
  %v3_a908 = inttoptr i32 %v2_a908 to i32*
  store i32 %v0_a8f4, i32* %v3_a908, align 4
  br i1 %v3_a904, label %dec_label_pc_a910, label %dec_label_pc_a8f4.dec_label_pc_a788_crit_edge

dec_label_pc_a8f4.dec_label_pc_a788_crit_edge:    ; preds = %dec_label_pc_a8f4
  %v1_a78c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a788

dec_label_pc_a910:                                ; preds = %dec_label_pc_a8f4, %dec_label_pc_a774
  %v0_a910 = call i32 @function_db88()
  %v1_a910 = trunc i32 %v0_a910 to i8
  %v4_a91426 = udiv i32 %v0_a910, 256
  %v1_a918 = trunc i32 %v4_a91426 to i8
  %v2_a918 = load i32, i32* @r5, align 4
  %v3_a918 = add i32 %v2_a918, 5
  %v4_a918 = inttoptr i32 %v3_a918 to i8*
  store i8 %v1_a918, i8* %v4_a918, align 1
  store i32 %v3_a488, i32* %r3.global-to-local, align 4
  %v1_a920 = load i32, i32* @r4, align 4
  %v9_a920 = icmp eq i32 %v3_a488, %v1_a920
  store i1 %v9_a920, i1* %cpsr_z.global-to-local, align 1
  %v3_a924 = load i32, i32* @r5, align 4
  %v4_a924 = add i32 %v3_a924, 4
  %v5_a924 = inttoptr i32 %v4_a924 to i8*
  store i8 %v1_a910, i8* %v5_a924, align 1
  %v0_a928 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a928, label %dec_label_pc_a92c, label %dec_label_pc_a910.dec_label_pc_a794_crit_edge

dec_label_pc_a910.dec_label_pc_a794_crit_edge:    ; preds = %dec_label_pc_a910
  %v1_a798.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a794

dec_label_pc_a92c:                                ; preds = %dec_label_pc_a910, %dec_label_pc_a788
  %v0_a92c = call i32 @function_db88()
  %v1_a92c = trunc i32 %v0_a92c to i8
  store i32 %v3_a48c, i32* %ip.global-to-local, align 4
  %v4_a934 = sdiv i32 %v0_a92c, 256
  store i32 %v4_a934, i32* %r3.global-to-local, align 4
  %v1_a938 = load i32, i32* @r4, align 4
  %v9_a938 = icmp eq i32 %v3_a48c, %v1_a938
  store i1 %v9_a938, i1* %cpsr_z.global-to-local, align 1
  %v3_a93c = load i32, i32* @r5, align 4
  %v4_a93c = add i32 %v3_a93c, 20
  %v5_a93c = inttoptr i32 %v4_a93c to i8*
  store i8 %v1_a92c, i8* %v5_a93c, align 1
  %v0_a940 = load i32, i32* %r3.global-to-local, align 4
  %v1_a940 = trunc i32 %v0_a940 to i8
  %v2_a940 = load i32, i32* @r6, align 4
  %v3_a940 = add i32 %v2_a940, 1
  %v4_a940 = inttoptr i32 %v3_a940 to i8*
  store i8 %v1_a940, i8* %v4_a940, align 1
  %v0_a944 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a944, label %dec_label_pc_a948, label %dec_label_pc_a92c.dec_label_pc_a7a0_crit_edge

dec_label_pc_a92c.dec_label_pc_a7a0_crit_edge:    ; preds = %dec_label_pc_a92c
  %v1_a7a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a7a0

dec_label_pc_a948:                                ; preds = %dec_label_pc_a92c, %dec_label_pc_a794
  %v0_a948 = call i32 @function_db88()
  %v1_a948 = trunc i32 %v0_a948 to i8
  store i32 %v6_a310, i32* %r1.global-to-local, align 4
  %v4_a950 = sdiv i32 %v0_a948, 256
  store i32 %v4_a950, i32* %r3.global-to-local, align 4
  %v1_a954 = load i32, i32* @r4, align 4
  %v9_a954 = icmp eq i32 %v6_a310, %v1_a954
  store i1 %v9_a954, i1* %cpsr_z.global-to-local, align 1
  %v1_a958 = trunc i32 %v4_a950 to i8
  %v2_a958 = load i32, i32* @r6, align 4
  %v3_a958 = add i32 %v2_a958, 3
  %v4_a958 = inttoptr i32 %v3_a958 to i8*
  store i8 %v1_a958, i8* %v4_a958, align 1
  %v3_a95c = load i32, i32* @r6, align 4
  %v4_a95c = add i32 %v3_a95c, 2
  %v5_a95c = inttoptr i32 %v4_a95c to i8*
  store i8 %v1_a948, i8* %v5_a95c, align 1
  %v0_a960 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a960, label %dec_label_pc_a964, label %dec_label_pc_a948.dec_label_pc_a7ac_crit_edge

dec_label_pc_a948.dec_label_pc_a7ac_crit_edge:    ; preds = %dec_label_pc_a948
  %v1_a7b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a7ac

dec_label_pc_a964:                                ; preds = %dec_label_pc_a948, %dec_label_pc_a7a0
  %v0_a964 = call i32 @function_db88()
  store i32 %v6_a32c, i32* %r2.global-to-local, align 4
  %v1_a96c = load i32, i32* @r4, align 4
  %v9_a96c = icmp eq i32 %v6_a32c, %v1_a96c
  store i1 %v9_a96c, i1* %cpsr_z.global-to-local, align 1
  %v1_a970 = load i32, i32* @r6, align 4
  %v2_a970 = add i32 %v1_a970, 4
  %v3_a970 = inttoptr i32 %v2_a970 to i32*
  store i32 %v0_a964, i32* %v3_a970, align 4
  br i1 %v9_a96c, label %dec_label_pc_a978, label %dec_label_pc_a7b8

dec_label_pc_a978:                                ; preds = %dec_label_pc_a964, %dec_label_pc_a7ac
  %v0_a978 = call i32 @function_db88()
  store i32 %v1_a3fc, i32* %r3.global-to-local, align 4
  store i1 %v2_a980, i1* %cpsr_z.global-to-local, align 1
  %v1_a984 = load i32, i32* @r6, align 4
  %v2_a984 = add i32 %v1_a984, 8
  %v3_a984 = inttoptr i32 %v2_a984 to i32*
  store i32 %v0_a978, i32* %v3_a984, align 4
  br i1 %v2_a980, label %dec_label_pc_a7c4, label %dec_label_pc_a98c

dec_label_pc_a98c:                                ; preds = %dec_label_pc_a7b8, %dec_label_pc_a978
  %v0_a98c = load i32, i32* @r5, align 4
  %v1_a98c = add i32 %v0_a98c, 40
  store i32 %v1_a98c, i32* @r4, align 4
  %v0_a994 = load i32, i32* @sl, align 4
  store i32 %v0_a994, i32* %r1.global-to-local, align 4
  %v2_a998 = call i32 @function_dc3c(i32 %v1_a98c, i32 %v0_a994)
  %v0_a99c = load i32, i32* @r7, align 4
  %v1_a99c = trunc i32 %v0_a99c to i8
  %v2_a99c = load i32, i32* @r4, align 4
  %v3_a99c = load i32, i32* @sl, align 4
  %v4_a99c = add i32 %v3_a99c, %v2_a99c
  %v5_a99c = inttoptr i32 %v4_a99c to i8*
  store i8 %v1_a99c, i8* %v5_a99c, align 1
  br label %dec_label_pc_a7c4

dec_label_pc_a9a4:                                ; preds = %dec_label_pc_a7c4, %dec_label_pc_a72c
  %v2_a9a8 = call i32 @function_11eb8(i32* null)
  store i32 %v2_a420, i32* %r1.global-to-local, align 4
  %v9_a9b0 = icmp eq i32 %v2_a420, %v2_a9a8
  store i1 %v9_a9b0, i1* %cpsr_z.global-to-local, align 1
  %v6_a9b4 = icmp slt i32 %v2_a420, %v2_a9a8
  br i1 %v6_a9b4, label %dec_label_pc_a9b8, label %dec_label_pc_a72c

dec_label_pc_a9b8:                                ; preds = %dec_label_pc_a9a4, %dec_label_pc_a210, %dec_label_pc_a9c0
  %v29_a9bc = phi i32 [ %v3_a434, %dec_label_pc_a210 ], [ %v1_a9c4, %dec_label_pc_a9c0 ], [ %v2_a9a8, %dec_label_pc_a9a4 ]
  store i32 %v18_a210, i32* %sb.global-to-local, align 4
  store i32 %v24_a210, i32* %fp.global-to-local, align 4
  ret i32 %v29_a9bc

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a444
  %v1_a9c4 = call i32 @function_11c68(i32 %v3_a434)
  br label %dec_label_pc_a9b8

; uselistorder directives
  uselistorder i32 %v4_a950, { 1, 0 }
  uselistorder i32 %v2_a8e0, { 1, 0 }
  uselistorder i32 %v3_a8b0, { 1, 0 }
  uselistorder i32 %v3_a88c, { 1, 3, 2, 0 }
  uselistorder i32 %v1_a858, { 1, 2, 0, 3 }
  uselistorder i32 %v0_a7e4, { 1, 0, 2 }
  uselistorder i32 %v1_a740, { 1, 0, 2 }
  uselistorder i1 %v2_a980, { 2, 3, 1, 0 }
  uselistorder i1 %v3_a904, { 1, 0, 2, 3 }
  uselistorder i1 %v7_a76c, { 2, 1, 0 }
  uselistorder i32 %v1_a71c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a554, { 1, 0 }
  uselistorder i32 %v3_a54c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_a548, { 0, 2, 1 }
  uselistorder i32 %v1_a544, { 1, 2, 0 }
  uselistorder i32 %v1_a540, { 2, 0, 1 }
  uselistorder i32 %tmp93, { 1, 0 }
  uselistorder i32 %v1_a514, { 1, 0 }
  uselistorder i32 %v1_a510, { 1, 0 }
  uselistorder i32 %v1_a50c, { 1, 0 }
  uselistorder i32 %v1_a508, { 1, 0 }
  uselistorder i32 %v1_a4d8, { 2, 0, 1 }
  uselistorder i32 %v1_a4c0, { 1, 0 }
  uselistorder i1 %v2_a490, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a484, { 0, 1, 3, 2 }
  uselistorder i32 %v0_a47c, { 0, 1, 3, 2 }
  uselistorder i1 %v7_a464, { 1, 0 }
  uselistorder i1 %v7_a438, { 1, 0 }
  uselistorder i32 %v3_a434, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_a420, { 2, 1, 0 }
  uselistorder i32 %v6_a410, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_a3fc, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_a32c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_a310, { 2, 5, 4, 3, 1, 0, 6 }
  uselistorder i32 %v1_a2c0, { 1, 2, 0 }
  uselistorder i32 %v6_a294, { 2, 1, 3, 0 }
  uselistorder i32 %v7_a27c, { 0, 2, 1, 3 }
  uselistorder i32 %v6_a258, { 1, 2, 0 }
  uselistorder i32 %v2_a240, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_a214, { 2, 3, 4, 1, 5, 6, 7, 9, 0, 8 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 13, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 18, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 12, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 52, 51, 54, 53, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder label %dec_label_pc_a9b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a98c, { 1, 0 }
  uselistorder label %dec_label_pc_a7c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %bb78, { 1, 0 }
}

define i32 @function_a9d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a9d0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_a9d0 = load i32, i32* @r4, align 4
  %v12_a9d0 = load i32, i32* @r7, align 4
  %v1_a9d4 = urem i32 %arg2, 256
  store i32 %v1_a9d4, i32* %fp.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v1_a9d4, i32* %r0.global-to-local, align 4
  %v1_a9ec = urem i32 %arg4, 256
  store i32 %v1_a9ec, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_a9fc = call i32 @function_12630(i32 %v1_a9d4, i32 4)
  %v0_aa00 = load i32, i32* @r5, align 4
  store i32 %v0_aa00, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_aa08 = load i32, i32* @r7, align 4
  store i32 %v0_aa08, i32* %r3.global-to-local, align 4
  store i32 %v2_a9fc, i32* %sb.global-to-local, align 4
  %v0_aa10 = load i32, i32* @r4, align 4
  store i32 %v0_aa10, i32* %r0.global-to-local, align 4
  %v5_aa14 = inttoptr i32 %v0_aa00 to i32*
  %v6_aa14 = call i32 @function_83ec(i32 %v0_aa10, i32* %v5_aa14, i32 2, i32 %v0_aa08, i32 ptrtoint (i32* @0 to i32))
  %v1_aa20 = urem i32 %v6_aa14, 256
  store i32 %v1_aa20, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_aa2c = load i32, i32* @r5, align 4
  store i32 %v0_aa2c, i32* %r1.global-to-local, align 4
  %v0_aa30 = load i32, i32* @r4, align 4
  store i32 %v0_aa30, i32* %r0.global-to-local, align 4
  %v5_aa34 = trunc i32 %v6_aa14 to i8
  %v6_aa38 = inttoptr i32 %v0_aa2c to i32*
  %v7_aa38 = call i32 @function_83ec(i32 %v0_aa30, i32* %v6_aa38, i32 3, i32 65535, i32 %v6_aa14)
  %v0_aa3c = load i32, i32* @r5, align 4
  store i32 %v0_aa3c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_aa4c = load i32, i32* @r4, align 4
  store i32 %v0_aa4c, i32* %r0.global-to-local, align 4
  %v5_aa50 = inttoptr i32 %v0_aa3c to i32*
  %v6_aa50 = call i32 @function_83ec(i32 %v0_aa4c, i32* %v5_aa50, i32 4, i32 64, i32 %v7_aa38)
  %v1_aa58 = urem i32 %v6_aa50, 256
  store i32 %v1_aa58, i32* %ip.global-to-local, align 4
  %v0_aa5c = load i32, i32* @r5, align 4
  store i32 %v0_aa5c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_aa68 = load i32, i32* @r4, align 4
  store i32 %v0_aa68, i32* %r0.global-to-local, align 4
  %sext9 = mul i32 %v6_aa50, 16777216
  %v5_aa70 = sdiv i32 %sext9, 16777216
  %v6_aa70 = inttoptr i32 %v0_aa5c to i32*
  %v7_aa70 = call i32 @function_83ec(i32 %v0_aa68, i32* %v6_aa70, i32 5, i32 1, i32 %v5_aa70)
  %v1_aa7c = urem i32 %v7_aa70, 256
  store i32 %v1_aa7c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_aa88 = load i32, i32* @r5, align 4
  store i32 %v0_aa88, i32* %r1.global-to-local, align 4
  %v0_aa8c = load i32, i32* @r4, align 4
  store i32 %v0_aa8c, i32* %r0.global-to-local, align 4
  %v5_aa94 = inttoptr i32 %v0_aa88 to i32*
  %v6_aa94 = call i32 @function_83ec(i32 %v0_aa8c, i32* %v5_aa94, i32 6, i32 65535, i32 %v1_aa7c)
  %v0_aaa0 = load i32, i32* @r5, align 4
  store i32 %v0_aaa0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_aaac = load i32, i32* @r4, align 4
  store i32 %v0_aaac, i32* %r0.global-to-local, align 4
  %v5_aab0 = inttoptr i32 %v0_aaa0 to i32*
  %v6_aab0 = call i32 @function_83ec(i32 %v0_aaac, i32* %v5_aab0, i32 7, i32 65535, i32 %v6_aa94)
  %v0_aabc = load i32, i32* @r5, align 4
  store i32 %v0_aabc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_aac8 = load i32, i32* @r4, align 4
  store i32 %v0_aac8, i32* %r0.global-to-local, align 4
  %v5_aacc = inttoptr i32 %v0_aabc to i32*
  %v6_aacc = call i32 @function_83ec(i32 %v0_aac8, i32* %v5_aacc, i32 16, i32 65535, i32 %v6_aab0)
  %v0_aad0 = load i32, i32* @r5, align 4
  store i32 %v0_aad0, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_aadc = load i32, i32* @r7, align 4
  store i32 %v0_aadc, i32* %r3.global-to-local, align 4
  %v0_aae0 = load i32, i32* @r4, align 4
  store i32 %v0_aae0, i32* %r0.global-to-local, align 4
  %v5_aae4 = inttoptr i32 %v0_aad0 to i32*
  %v6_aae4 = call i32 @function_83ec(i32 %v0_aae0, i32* %v5_aae4, i32 17, i32 %v0_aadc, i32 %v6_aacc)
  %v0_aae8 = load i32, i32* @r5, align 4
  store i32 %v0_aae8, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_aaf4 = load i32, i32* @r7, align 4
  store i32 %v0_aaf4, i32* %r3.global-to-local, align 4
  %v0_aaf8 = load i32, i32* @r4, align 4
  store i32 %v0_aaf8, i32* %r0.global-to-local, align 4
  %v5_aafc = inttoptr i32 %v0_aae8 to i32*
  %v6_aafc = call i32 @function_83ec(i32 %v0_aaf8, i32* %v5_aafc, i32 10, i32 %v0_aaf4, i32 %v6_aae4)
  %v0_ab00 = load i32, i32* @r5, align 4
  store i32 %v0_ab00, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v0_ab0c = load i32, i32* @r7, align 4
  store i32 %v0_ab0c, i32* %r3.global-to-local, align 4
  %v0_ab10 = load i32, i32* @r4, align 4
  store i32 %v0_ab10, i32* %r0.global-to-local, align 4
  %v5_ab14 = inttoptr i32 %v0_ab00 to i32*
  %v6_ab14 = call i32 @function_83ec(i32 %v0_ab10, i32* %v5_ab14, i32 11, i32 %v0_ab0c, i32 %v6_aafc)
  %v0_ab18 = load i32, i32* @r5, align 4
  store i32 %v0_ab18, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_ab24 = load i32, i32* @r7, align 4
  store i32 %v0_ab24, i32* %r3.global-to-local, align 4
  %v0_ab28 = load i32, i32* @r4, align 4
  store i32 %v0_ab28, i32* %r0.global-to-local, align 4
  %v5_ab2c = inttoptr i32 %v0_ab18 to i32*
  %v6_ab2c = call i32 @function_83ec(i32 %v0_ab28, i32* %v5_ab2c, i32 12, i32 %v0_ab24, i32 %v6_ab14)
  %v0_ab30 = load i32, i32* @r5, align 4
  store i32 %v0_ab30, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_ab3c = load i32, i32* @r7, align 4
  store i32 %v0_ab3c, i32* %r3.global-to-local, align 4
  %v0_ab40 = load i32, i32* @r4, align 4
  store i32 %v0_ab40, i32* %r0.global-to-local, align 4
  %v5_ab44 = inttoptr i32 %v0_ab30 to i32*
  %v6_ab44 = call i32 @function_83ec(i32 %v0_ab40, i32* %v5_ab44, i32 13, i32 %v0_ab3c, i32 %v6_ab2c)
  %v0_ab48 = load i32, i32* @r5, align 4
  store i32 %v0_ab48, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ab58 = load i32, i32* @r4, align 4
  store i32 %v0_ab58, i32* %r0.global-to-local, align 4
  %v5_ab5c = inttoptr i32 %v0_ab48 to i32*
  %v6_ab5c = call i32 @function_83ec(i32 %v0_ab58, i32* %v5_ab5c, i32 14, i32 1, i32 %v6_ab44)
  %v0_ab60 = load i32, i32* @r5, align 4
  store i32 %v0_ab60, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_ab6c = load i32, i32* @r7, align 4
  store i32 %v0_ab6c, i32* %r3.global-to-local, align 4
  %v0_ab70 = load i32, i32* @r4, align 4
  store i32 %v0_ab70, i32* %r0.global-to-local, align 4
  %v5_ab74 = inttoptr i32 %v0_ab60 to i32*
  %v6_ab74 = call i32 @function_83ec(i32 %v0_ab70, i32* %v5_ab74, i32 15, i32 %v0_ab6c, i32 %v6_ab5c)
  %v0_ab7c = load i32, i32* @r5, align 4
  store i32 %v0_ab7c, i32* %r1.global-to-local, align 4
  %v2_ab80 = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_ab80, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_ab8c = load i32, i32* @r4, align 4
  store i32 %v0_ab8c, i32* %r0.global-to-local, align 4
  %v5_ab90 = inttoptr i32 %v0_ab7c to i32*
  %v6_ab90 = call i32 @function_8380(i32 %v0_ab8c, i32* %v5_ab90, i32 19, i32 %v2_ab80, i32 %v6_ab74)
  %v0_ab98 = load i32, i32* @r7, align 4
  store i32 %v0_ab98, i32* %r0.global-to-local, align 4
  %v1_ab9c = inttoptr i32 %v0_ab98 to i32*
  %v2_ab9c = call i32 @function_11eb8(i32* %v1_ab9c)
  %v1_aba0 = load i32, i32* @r6, align 4
  %v2_aba0 = add i32 %v1_aba0, %v2_ab9c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_abb4 = call i32 @function_124b0(i32 2, i32 3, i32 6)
  store i32 %v3_abb4, i32* %r0.global-to-local, align 4
  %v7_abb8 = icmp eq i32 %v3_abb4, -1
  store i1 %v7_abb8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_abb4, i32* %sl.global-to-local, align 4
  br i1 %v7_abb8, label %dec_label_pc_b138, label %dec_label_pc_abc4

dec_label_pc_abc4:                                ; preds = %dec_label_pc_a9d0
  store i32 1, i32* %stack_var_-40, align 4
  %v6_abcc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_abcc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_abd4 = load i32, i32* @r7, align 4
  store i32 %v0_abd4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_abe0 = call i32 @function_12480(i32 %v3_abb4, i32 %v0_abd4, i32 3, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_abe0, i32* %r0.global-to-local, align 4
  %v7_abe4 = icmp eq i32 %v6_abe0, -1
  store i1 %v7_abe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_abe4, label %dec_label_pc_b140, label %dec_label_pc_abec

dec_label_pc_abec:                                ; preds = %dec_label_pc_abc4
  %v3_abf0 = mul i32 %v7_aa38, 65536
  store i32 %v3_abf0, i32* @r4, align 4
  %v3_abfc = urem i32 %v7_aa38, 65536
  %v3_ac08 = mul i32 %v6_aa94, 65536
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v3_ac10 = urem i32 %v6_aa94, 65536
  store i32 %v3_ac10, i32* %r2.global-to-local, align 4
  %v3_ac14 = urem i32 %v6_aab0, 65536
  store i32 %v3_ac14, i32* %r3.global-to-local, align 4
  %v1_ac18 = urem i32 %v6_aafc, 256
  store i32 %v1_ac18, i32* %ip.global-to-local, align 4
  %v0_ac1c = load i32, i32* %fp.global-to-local, align 4
  %v2_ac1c = icmp eq i32 %v0_ac1c, 0
  store i1 %v2_ac1c, i1* %cpsr_z.global-to-local, align 1
  %v0_ac20 = load i32, i32* @r7, align 4
  store i32 %v0_ac20, i32* %stack_var_-40, align 4
  %tmp68 = icmp slt i32 %v0_ac1c, 1
  br i1 %tmp68, label %dec_label_pc_aed8.preheader, label %dec_label_pc_ac34

dec_label_pc_ac34:                                ; preds = %dec_label_pc_abec
  %v1_ac4c = urem i32 %v6_aab0, 256
  %tmp69 = udiv i32 %v6_aa94, 256
  %tmp70 = mul i32 %v6_aacc, 256
  %v1_ac64 = and i32 %tmp70, 65280
  %tmp72 = udiv i32 %v6_aacc, 256
  %v4_ac74 = urem i32 %tmp72, 256
  %v5_ac74 = or i32 %v4_ac74, %v1_ac64
  store i32 %v5_ac74, i32* @lr, align 4
  %v1_ac80 = urem i32 %v6_aafc, 2
  %v1_ac88 = urem i32 %v6_ab14, 2
  %v1_ac8c = urem i32 %v6_ab2c, 2
  %v1_ac90 = urem i32 %v6_ab44, 2
  %v3_ac9c = mul nuw nsw i32 %v1_ac4c, 256
  store i32 %v3_ac9c, i32* %r1.global-to-local, align 4
  %v3_acb4 = sdiv i32 %v3_abf0, 16777216
  %sext10 = mul i32 %tmp69, 16777216
  %v7_acb4 = sdiv i32 %sext10, 16777216
  %tmp73 = udiv i32 %v6_aab0, 256
  %v4_acb8 = urem i32 %tmp73, 256
  %v5_acb8 = or i32 %v4_acb8, %v3_ac9c
  store i32 %v5_acb8, i32* @r6, align 4
  %v1_acbc = urem i32 %v6_ab5c, 2
  %v1_acc4 = urem i32 %v6_ab74, 2
  store i32 %v1_acc4, i32* %r0.global-to-local, align 4
  %v3_acc8 = ashr i32 %v3_abf0, 31
  store i32 %v3_acc8, i32* %r2.global-to-local, align 4
  %v3_accc = ashr i32 %sext10, 31
  store i32 %v3_accc, i32* %r3.global-to-local, align 4
  store i32 %v1_ac4c, i32* %ip.global-to-local, align 4
  %v5_ace0 = trunc i32 %v3_accc to i8
  store i32 %v0_ac20, i32* @r4, align 4
  store i32 %v0_ac20, i32* @r5, align 4
  store i32 6, i32* @r7, align 4
  %tmp = sub nsw i32 0, %v1_ac80
  %v4_ada8 = and i32 %tmp, 32
  %tmp77 = sub nsw i32 0, %v1_ac88
  %v4_adbc = and i32 %tmp77, 16
  %tmp78 = sub nsw i32 0, %v1_ac8c
  %v4_add0 = and i32 %tmp78, 8
  %tmp79 = sub nsw i32 0, %v1_ac90
  %v4_ade4 = and i32 %tmp79, 4
  %tmp80 = sub nsw i32 0, %v1_acbc
  %v3_adf8 = and i32 %tmp80, 2
  %sext8 = mul i32 %v6_aab0, 16777216
  %v7_ae28 = sdiv i32 %sext8, 16777216
  br label %dec_label_pc_acf4

dec_label_pc_acf4:                                ; preds = %bb75, %dec_label_pc_ac34
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_acfc = call i32 @function_12630(i32 128, i32 1)
  store i32 %v2_acfc, i32* %r0.global-to-local, align 4
  %v3_ad00 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ad00, i32* %r2.global-to-local, align 4
  %v1_ad04 = load i32, i32* %sb.global-to-local, align 4
  %v2_ad04 = load i32, i32* @r4, align 4
  %v5_ad04 = mul i32 %v2_ad04, 4
  %v6_ad04 = add i32 %v5_ad04, %v1_ad04
  %v7_ad04 = inttoptr i32 %v6_ad04 to i32*
  store i32 %v2_acfc, i32* %v7_ad04, align 4
  %v0_ad08 = load i32, i32* %sb.global-to-local, align 4
  %v1_ad08 = load i32, i32* %r2.global-to-local, align 4
  %v4_ad08 = mul i32 %v1_ad08, 4
  %v5_ad08 = add i32 %v4_ad08, %v0_ad08
  %v6_ad08 = inttoptr i32 %v5_ad08 to i32*
  %v7_ad08 = load i32, i32* %v6_ad08, align 4
  store i32 %v7_ad08, i32* %r4.global-to-local, align 4
  %v1_ad0c = inttoptr i32 %v7_ad08 to i8*
  %v2_ad0c = load i8, i8* %v1_ad0c, align 1
  %tmp81 = urem i8 %v2_ad0c, 16
  %v1_ad10 = zext i8 %tmp81 to i32
  %v1_ad14 = or i32 %v1_ad10, 64
  store i32 %v1_ad14, i32* %r3.global-to-local, align 4
  %v1_ad18 = trunc i32 %v1_ad14 to i8
  store i8 %v1_ad18, i8* %v1_ad0c, align 1
  %v0_ad1c = load i32, i32* %r4.global-to-local, align 4
  %v1_ad1c = inttoptr i32 %v0_ad1c to i8*
  %v2_ad1c = load i8, i8* %v1_ad1c, align 1
  %v1_ad20 = and i8 %v2_ad1c, -16
  %v1_ad24 = or i8 %v1_ad20, 5
  store i32 %v1_aa7c, i32* %r0.global-to-local, align 4
  store i8 %v1_ad24, i8* %v1_ad1c, align 1
  %v2_ad34 = load i32, i32* %r4.global-to-local, align 4
  %v3_ad34 = add i32 %v2_ad34, 1
  %v4_ad34 = inttoptr i32 %v3_ad34 to i8*
  store i8 %v5_aa34, i8* %v4_ad34, align 1
  %v0_ad38 = load i32, i32* %r0.global-to-local, align 4
  %v2_ad38 = icmp eq i32 %v0_ad38, 0
  store i1 %v2_ad38, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_aa70, i32* %r0.global-to-local, align 4
  %v2_ad44 = load i32, i32* %r4.global-to-local, align 4
  %v3_ad44 = add i32 %v2_ad44, 3
  %v4_ad44 = inttoptr i32 %v3_ad44 to i8*
  store i8 60, i8* %v4_ad44, align 1
  store i32 %v3_acc8, i32* %ip.global-to-local, align 4
  store i32 %v3_acb4, i32* %r3.global-to-local, align 4
  %v0_ad50 = load i32, i32* %r0.global-to-local, align 4
  %v1_ad50 = trunc i32 %v0_ad50 to i8
  %v2_ad50 = load i32, i32* %r4.global-to-local, align 4
  %v3_ad50 = add i32 %v2_ad50, 8
  %v4_ad50 = inttoptr i32 %v3_ad50 to i8*
  store i8 %v1_ad50, i8* %v4_ad50, align 1
  %v0_ad54 = load i32, i32* @r7, align 4
  %v1_ad54 = trunc i32 %v0_ad54 to i8
  %v2_ad54 = load i32, i32* %r4.global-to-local, align 4
  %v3_ad54 = add i32 %v2_ad54, 9
  %v4_ad54 = inttoptr i32 %v3_ad54 to i8*
  store i8 %v1_ad54, i8* %v4_ad54, align 1
  %v3_ad58 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ad58, i32* %r2.global-to-local, align 4
  %v0_ad5c = load i32, i32* %r3.global-to-local, align 4
  %v1_ad5c = trunc i32 %v0_ad5c to i8
  %v2_ad5c = load i32, i32* %r4.global-to-local, align 4
  %v3_ad5c = add i32 %v2_ad5c, 4
  %v4_ad5c = inttoptr i32 %v3_ad5c to i8*
  store i8 %v1_ad5c, i8* %v4_ad5c, align 1
  %v0_ad60 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ad60, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_acf4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_ad64 = load i32, i32* %r4.global-to-local, align 4
  %v4_ad64 = add i32 %v3_ad64, 6
  %v5_ad64 = inttoptr i32 %v4_ad64 to i8*
  store i8 64, i8* %v5_ad64, align 1
  %v0_ad84.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_acf4, %bb
  %v0_ad84 = phi i1 [ true, %dec_label_pc_acf4 ], [ %v0_ad84.pre, %bb ]
  %v0_ad68 = load i32, i32* %r2.global-to-local, align 4
  %v5_ad6c = mul i32 %v0_ad68, 24
  store i32 %v5_ad6c, i32* %r3.global-to-local, align 4
  store i32 %v6_ab90, i32* %r2.global-to-local, align 4
  %v1_ad74 = load i32, i32* %r4.global-to-local, align 4
  %v2_ad74 = add i32 %v1_ad74, 12
  %v3_ad74 = inttoptr i32 %v2_ad74 to i32*
  store i32 %v6_ab90, i32* %v3_ad74, align 4
  %v0_ad78 = load i32, i32* %r3.global-to-local, align 4
  %v1_ad78 = load i32, i32* @r8, align 4
  %v2_ad78 = add i32 %v1_ad78, %v0_ad78
  store i32 %v2_ad78, i32* %r3.global-to-local, align 4
  %v1_ad7c = add i32 %v2_ad78, 16
  %v2_ad7c = inttoptr i32 %v1_ad7c to i32*
  %v3_ad7c = load i32, i32* %v2_ad7c, align 4
  store i32 %v3_ad7c, i32* %r2.global-to-local, align 4
  store i32 %v7_acb4, i32* %r3.global-to-local, align 4
  br i1 %v0_ad84, label %bb75, label %bb74

bb74:                                             ; preds = %.thread
  %v1_ad84 = load i32, i32* @r5, align 4
  %v2_ad84 = trunc i32 %v1_ad84 to i8
  %v3_ad84 = load i32, i32* %r4.global-to-local, align 4
  %v4_ad84 = add i32 %v3_ad84, 7
  %v5_ad84 = inttoptr i32 %v4_ad84 to i8*
  store i8 %v2_ad84, i8* %v5_ad84, align 1
  br label %bb75

bb75:                                             ; preds = %.thread, %bb74
  %v0_ad88 = load i32, i32* %ip.global-to-local, align 4
  %v1_ad88 = trunc i32 %v0_ad88 to i8
  %v2_ad88 = load i32, i32* %r4.global-to-local, align 4
  %v3_ad88 = add i32 %v2_ad88, 5
  %v4_ad88 = inttoptr i32 %v3_ad88 to i8*
  store i8 %v1_ad88, i8* %v4_ad88, align 1
  %v0_ad8c = load i32, i32* @r5, align 4
  %v1_ad8c = trunc i32 %v0_ad8c to i8
  %v2_ad8c = load i32, i32* %r4.global-to-local, align 4
  %v3_ad8c = add i32 %v2_ad8c, 2
  %v4_ad8c = inttoptr i32 %v3_ad8c to i8*
  store i8 %v1_ad8c, i8* %v4_ad8c, align 1
  %v0_ad90 = load i32, i32* %r2.global-to-local, align 4
  %v1_ad90 = load i32, i32* %r4.global-to-local, align 4
  %v2_ad90 = add i32 %v1_ad90, 16
  %v3_ad90 = inttoptr i32 %v2_ad90 to i32*
  store i32 %v0_ad90, i32* %v3_ad90, align 4
  %v0_ad94 = load i32, i32* %r3.global-to-local, align 4
  %v1_ad94 = trunc i32 %v0_ad94 to i8
  %v2_ad94 = load i32, i32* %r4.global-to-local, align 4
  %v3_ad94 = add i32 %v2_ad94, 20
  %v4_ad94 = inttoptr i32 %v3_ad94 to i8*
  store i8 %v1_ad94, i8* %v4_ad94, align 1
  %v0_ad98 = load i32, i32* %r4.global-to-local, align 4
  %v1_ad98 = add i32 %v0_ad98, 20
  store i32 %v1_ad98, i32* %r1.global-to-local, align 4
  %v1_ad9c = add i32 %v0_ad98, 33
  %v2_ad9c = inttoptr i32 %v1_ad9c to i8*
  %v3_ad9c = load i8, i8* %v2_ad9c, align 1
  %v4_ad9c = zext i8 %v3_ad9c to i32
  store i32 %v1_ac80, i32* %ip.global-to-local, align 4
  %v1_ada4 = and i32 %v4_ad9c, 223
  %v5_ada8 = or i32 %v1_ada4, %v4_ada8
  store i32 %v5_ada8, i32* %r3.global-to-local, align 4
  %v1_adac = trunc i32 %v5_ada8 to i8
  store i8 %v1_adac, i8* %v2_ad9c, align 1
  %v0_adb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_adb0 = add i32 %v0_adb0, 13
  %v2_adb0 = inttoptr i32 %v1_adb0 to i8*
  %v3_adb0 = load i8, i8* %v2_adb0, align 1
  %v4_adb0 = zext i8 %v3_adb0 to i32
  store i32 %v1_ac88, i32* %r0.global-to-local, align 4
  %v1_adb8 = and i32 %v4_adb0, 239
  %v5_adbc = or i32 %v1_adb8, %v4_adbc
  store i32 %v5_adbc, i32* %r2.global-to-local, align 4
  %v1_adc0 = trunc i32 %v5_adbc to i8
  store i8 %v1_adc0, i8* %v2_adb0, align 1
  %v0_adc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_adc4 = add i32 %v0_adc4, 13
  %v2_adc4 = inttoptr i32 %v1_adc4 to i8*
  %v3_adc4 = load i8, i8* %v2_adc4, align 1
  %v4_adc4 = zext i8 %v3_adc4 to i32
  store i32 %v1_ac8c, i32* %r2.global-to-local, align 4
  %v1_adcc = and i32 %v4_adc4, 247
  %v5_add0 = or i32 %v1_adcc, %v4_add0
  store i32 %v5_add0, i32* %r3.global-to-local, align 4
  %v1_add4 = trunc i32 %v5_add0 to i8
  store i8 %v1_add4, i8* %v2_adc4, align 1
  %v0_add8 = load i32, i32* %r1.global-to-local, align 4
  %v1_add8 = add i32 %v0_add8, 13
  %v2_add8 = inttoptr i32 %v1_add8 to i8*
  %v3_add8 = load i8, i8* %v2_add8, align 1
  %v4_add8 = zext i8 %v3_add8 to i32
  store i32 %v1_ac90, i32* %r3.global-to-local, align 4
  %v1_ade0 = and i32 %v4_add8, 251
  %v5_ade4 = or i32 %v1_ade0, %v4_ade4
  store i32 %v5_ade4, i32* %r2.global-to-local, align 4
  %v1_ade8 = trunc i32 %v5_ade4 to i8
  store i8 %v1_ade8, i8* %v2_add8, align 1
  %v0_adec = load i32, i32* %r1.global-to-local, align 4
  %v1_adec = add i32 %v0_adec, 13
  %v2_adec = inttoptr i32 %v1_adec to i8*
  %v3_adec = load i8, i8* %v2_adec, align 1
  %v4_adec = zext i8 %v3_adec to i32
  store i32 %v1_acbc, i32* %ip.global-to-local, align 4
  %v1_adf4 = and i32 %v4_adec, 253
  %v4_adf8 = or i32 %v1_adf4, %v3_adf8
  store i32 %v4_adf8, i32* %r3.global-to-local, align 4
  %v1_adfc = trunc i32 %v4_adf8 to i8
  store i8 %v1_adfc, i8* %v2_adec, align 1
  %v0_ae00 = load i32, i32* %r1.global-to-local, align 4
  %v1_ae00 = add i32 %v0_ae00, 12
  %v2_ae00 = inttoptr i32 %v1_ae00 to i8*
  %v3_ae00 = load i8, i8* %v2_ae00, align 1
  %v4_ae00 = zext i8 %v3_ae00 to i32
  store i32 %v4_ae00, i32* %r2.global-to-local, align 4
  %v1_ae04 = add i32 %v0_ae00, 13
  %v2_ae04 = inttoptr i32 %v1_ae04 to i8*
  %v3_ae04 = load i8, i8* %v2_ae04, align 1
  %v4_ae04 = zext i8 %v3_ae04 to i32
  %tmp82 = urem i8 %v3_ae00, 16
  %v1_ae0c = zext i8 %tmp82 to i32
  %v1_ae10 = and i32 %v4_ae04, 254
  %v2_ae14 = or i32 %v1_ae10, %v1_acc4
  %v1_ae18 = or i32 %v1_ae0c, 160
  store i32 %v1_ae18, i32* %r2.global-to-local, align 4
  %v1_ae1c = trunc i32 %v2_ae14 to i8
  store i8 %v1_ae1c, i8* %v2_ae04, align 1
  %v0_ae20 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae20 = trunc i32 %v0_ae20 to i8
  %v2_ae20 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae20 = add i32 %v2_ae20, 12
  %v4_ae20 = inttoptr i32 %v3_ae20 to i8*
  store i8 %v1_ae20, i8* %v4_ae20, align 1
  store i32 %v7_ae28, i32* %r3.global-to-local, align 4
  store i32 %v5_ac74, i32* %ip.global-to-local, align 4
  %v2_ae30 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae30 = add i32 %v2_ae30, 1
  %v4_ae30 = inttoptr i32 %v3_ae30 to i8*
  store i8 %v5_ace0, i8* %v4_ae30, align 1
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_ae3c = load i32, i32* %r3.global-to-local, align 4
  %v1_ae3c = trunc i32 %v0_ae3c to i8
  %v2_ae3c = load i32, i32* %r1.global-to-local, align 4
  %v3_ae3c = add i32 %v2_ae3c, 3
  %v4_ae3c = inttoptr i32 %v3_ae3c to i8*
  store i8 %v1_ae3c, i8* %v4_ae3c, align 1
  %v0_ae40 = load i32, i32* %ip.global-to-local, align 4
  %v1_ae40 = load i32, i32* %r1.global-to-local, align 4
  %v2_ae40 = add i32 %v1_ae40, 4
  %v3_ae40 = inttoptr i32 %v2_ae40 to i32*
  store i32 %v0_ae40, i32* %v3_ae40, align 4
  %v0_ae44 = load i32, i32* @r6, align 4
  %v1_ae44 = trunc i32 %v0_ae44 to i8
  %v2_ae44 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae44 = add i32 %v2_ae44, 2
  %v4_ae44 = inttoptr i32 %v3_ae44 to i8*
  store i8 %v1_ae44, i8* %v4_ae44, align 1
  %v0_ae48 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae48 = trunc i32 %v0_ae48 to i8
  %v2_ae48 = load i32, i32* %r4.global-to-local, align 4
  %v3_ae48 = add i32 %v2_ae48, 41
  %v4_ae48 = inttoptr i32 %v3_ae48 to i8*
  store i8 %v1_ae48, i8* %v4_ae48, align 1
  %v0_ae4c = load i32, i32* %r0.global-to-local, align 4
  %v1_ae4c = trunc i32 %v0_ae4c to i8
  %v2_ae4c = load i32, i32* %r4.global-to-local, align 4
  %v3_ae4c = add i32 %v2_ae4c, 40
  %v4_ae4c = inttoptr i32 %v3_ae4c to i8*
  store i8 %v1_ae4c, i8* %v4_ae4c, align 1
  %v0_ae50 = call i32 @function_db88()
  %v1_ae54 = urem i32 %v0_ae50, 16
  %v1_ae58 = or i32 %v1_ae54, 1392
  %v1_ae5c = add nuw nsw i32 %v1_ae58, 8
  %v3_ae60 = mul nuw nsw i32 %v1_ae5c, 65536
  store i32 %v3_ae60, i32* %r0.global-to-local, align 4
  %v3_ae64 = mul nuw nsw i32 %v1_ae5c, 256
  %v1_ae68 = and i32 %v3_ae64, 65280
  %v5_ae6c = or i32 %v1_ae68, 5
  store i32 %v5_ae6c, i32* %r3.global-to-local, align 4
  %v2_ae70 = load i32, i32* %r4.global-to-local, align 4
  %v3_ae70 = add i32 %v2_ae70, 42
  %v4_ae70 = inttoptr i32 %v3_ae70 to i8*
  store i8 5, i8* %v4_ae70, align 1
  %v0_ae74 = load i32, i32* %r3.global-to-local, align 4
  %v3_ae74 = sdiv i32 %v0_ae74, 256
  store i32 %v3_ae74, i32* %r1.global-to-local, align 4
  %v0_ae78 = load i32, i32* %r4.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v1_ae80 = trunc i32 %v3_ae74 to i8
  %v3_ae80 = add i32 %v0_ae78, 43
  %v4_ae80 = inttoptr i32 %v3_ae80 to i8*
  store i8 %v1_ae80, i8* %v4_ae80, align 1
  store i32 2, i32* %ip.global-to-local, align 4
  %v0_ae88 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae88 = trunc i32 %v0_ae88 to i8
  %v2_ae88 = load i32, i32* %r4.global-to-local, align 4
  %v3_ae88 = add i32 %v2_ae88, 46
  %v4_ae88 = inttoptr i32 %v3_ae88 to i8*
  store i8 %v1_ae88, i8* %v4_ae88, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v2_ae94 = load i32, i32* %r4.global-to-local, align 4
  %v3_ae94 = add i32 %v2_ae94, 47
  %v4_ae94 = inttoptr i32 %v3_ae94 to i8*
  store i8 10, i8* %v4_ae94, align 1
  %v0_ae98 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae98 = trunc i32 %v0_ae98 to i8
  %v2_ae98 = load i32, i32* %r4.global-to-local, align 4
  %v3_ae98 = add i32 %v2_ae98, 44
  %v4_ae98 = inttoptr i32 %v3_ae98 to i8*
  store i8 %v1_ae98, i8* %v4_ae98, align 1
  %v0_ae9c = load i32, i32* %ip.global-to-local, align 4
  %v1_ae9c = trunc i32 %v0_ae9c to i8
  %v2_ae9c = load i32, i32* %r4.global-to-local, align 4
  %v3_ae9c = add i32 %v2_ae9c, 45
  %v4_ae9c = inttoptr i32 %v3_ae9c to i8*
  store i8 %v1_ae9c, i8* %v4_ae9c, align 1
  %v0_aea0 = call i32 @function_db88()
  store i32 %v0_aea0, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_aeac = load i32, i32* %r4.global-to-local, align 4
  %v2_aeac = add i32 %v1_aeac, 48
  %v3_aeac = inttoptr i32 %v2_aeac to i32*
  store i32 %v0_aea0, i32* %v3_aeac, align 4
  %v0_aeb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_aeb0 = trunc i32 %v0_aeb0 to i8
  %v2_aeb0 = load i32, i32* %r4.global-to-local, align 4
  %v3_aeb0 = add i32 %v2_aeb0, 56
  %v4_aeb0 = inttoptr i32 %v3_aeb0 to i8*
  store i8 %v1_aeb0, i8* %v4_aeb0, align 1
  %v0_aeb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_aeb4 = trunc i32 %v0_aeb4 to i8
  %v2_aeb4 = load i32, i32* %r4.global-to-local, align 4
  %v3_aeb4 = add i32 %v2_aeb4, 58
  %v4_aeb4 = inttoptr i32 %v3_aeb4 to i8*
  store i8 %v1_aeb4, i8* %v4_aeb4, align 1
  %v0_aeb8 = load i32, i32* @r7, align 4
  %v1_aeb8 = trunc i32 %v0_aeb8 to i8
  %v2_aeb8 = load i32, i32* %r4.global-to-local, align 4
  %v3_aeb8 = add i32 %v2_aeb8, 59
  %v4_aeb8 = inttoptr i32 %v3_aeb8 to i8*
  store i8 %v1_aeb8, i8* %v4_aeb8, align 1
  %v0_aebc = load i32, i32* @r5, align 4
  %v1_aebc = load i32, i32* %r4.global-to-local, align 4
  %v2_aebc = add i32 %v1_aebc, 52
  %v3_aebc = inttoptr i32 %v2_aebc to i32*
  store i32 %v0_aebc, i32* %v3_aebc, align 4
  %v0_aec0 = load i32, i32* %r2.global-to-local, align 4
  %v1_aec0 = trunc i32 %v0_aec0 to i8
  %v2_aec0 = load i32, i32* %r4.global-to-local, align 4
  %v3_aec0 = add i32 %v2_aec0, 57
  %v4_aec0 = inttoptr i32 %v3_aec0 to i8*
  store i8 %v1_aec0, i8* %v4_aec0, align 1
  %v3_aec4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_aec4, i32* %r3.global-to-local, align 4
  %v1_aec8 = add i32 %v3_aec4, 1
  store i32 %v1_aec8, i32* @r4, align 4
  %v0_aecc = load i32, i32* %fp.global-to-local, align 4
  %v9_aecc = icmp eq i32 %v0_aecc, %v1_aec8
  store i1 %v9_aecc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aec8, i32* %stack_var_-40, align 4
  %v8_aed4 = icmp sgt i32 %v0_aecc, %v1_aec8
  br i1 %v8_aed4, label %dec_label_pc_acf4, label %dec_label_pc_aed8.preheader

dec_label_pc_aed8.preheader:                      ; preds = %bb75, %dec_label_pc_abec
  %v0_aedc13 = phi i32 [ %v0_ac1c, %dec_label_pc_abec ], [ %v0_aecc, %bb75 ]
  %v2_aef8 = icmp eq i32 %v6_ab90, -1
  %v7_aef8 = icmp eq i32 %v6_ab90, -1
  %v3_b088 = icmp eq i32 %v3_abfc, 65535
  %v2_b104 = icmp eq i32 %v1_ac18, 0
  br label %dec_label_pc_aed8

dec_label_pc_aed8:                                ; preds = %dec_label_pc_b124.dec_label_pc_aed8_crit_edge, %dec_label_pc_aed8.preheader
  %v0_aedc = phi i32 [ %v0_aedc.pre, %dec_label_pc_b124.dec_label_pc_aed8_crit_edge ], [ %v0_aedc13, %dec_label_pc_aed8.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_aedc = icmp eq i32 %v0_aedc, 0
  store i1 %v2_aedc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp76 = icmp slt i32 %v0_aedc, 1
  br i1 %tmp76, label %dec_label_pc_b124, label %dec_label_pc_aee8

dec_label_pc_aee8:                                ; preds = %dec_label_pc_aed8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_aff0

dec_label_pc_aef4:                                ; preds = %dec_label_pc_aff0
  store i32 %v6_ab90, i32* %r0.global-to-local, align 4
  store i1 %v7_aef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aef8, label %dec_label_pc_b078, label %dec_label_pc_af00

dec_label_pc_af00:                                ; preds = %dec_label_pc_b010, %dec_label_pc_aef4
  store i32 %v3_abfc, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_b088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b088, label %dec_label_pc_b094, label %dec_label_pc_af14

dec_label_pc_af14:                                ; preds = %dec_label_pc_b078.dec_label_pc_af14_crit_edge, %dec_label_pc_af00
  %v1_af18 = phi i32 [ %v1_af18.pre, %dec_label_pc_b078.dec_label_pc_af14_crit_edge ], [ 65535, %dec_label_pc_af00 ]
  store i32 %v3_ac10, i32* %r3.global-to-local, align 4
  %v9_af18 = icmp eq i32 %v3_ac10, %v1_af18
  store i1 %v9_af18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af18, label %dec_label_pc_b0b0, label %dec_label_pc_af20

dec_label_pc_af20:                                ; preds = %dec_label_pc_b094.dec_label_pc_af20_crit_edge, %dec_label_pc_af14
  %v1_af24 = phi i32 [ %v1_af24.pre, %dec_label_pc_b094.dec_label_pc_af20_crit_edge ], [ %v1_af18, %dec_label_pc_af14 ]
  store i32 %v3_ac14, i32* %ip.global-to-local, align 4
  %v9_af24 = icmp eq i32 %v3_ac14, %v1_af24
  store i1 %v9_af24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af24, label %dec_label_pc_b0cc, label %dec_label_pc_af2c

dec_label_pc_af2c:                                ; preds = %dec_label_pc_b0b0.dec_label_pc_af2c_crit_edge, %dec_label_pc_af20
  %v1_af30 = phi i32 [ %v1_af30.pre, %dec_label_pc_b0b0.dec_label_pc_af2c_crit_edge ], [ %v1_af24, %dec_label_pc_af20 ]
  store i32 %v6_aacc, i32* %r0.global-to-local, align 4
  %v9_af30 = icmp eq i32 %v6_aacc, %v1_af30
  store i1 %v9_af30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af30, label %dec_label_pc_b0e8, label %dec_label_pc_af38

dec_label_pc_af38:                                ; preds = %dec_label_pc_b0cc.dec_label_pc_af38_crit_edge, %dec_label_pc_af2c
  %v1_af3c = phi i32 [ %v1_af3c.pre, %dec_label_pc_b0cc.dec_label_pc_af38_crit_edge ], [ %v1_af30, %dec_label_pc_af2c ]
  store i32 %v6_aae4, i32* %r2.global-to-local, align 4
  %v9_af3c = icmp eq i32 %v6_aae4, %v1_af3c
  store i1 %v9_af3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af3c, label %dec_label_pc_b0fc, label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_b0e8, %dec_label_pc_af38
  store i32 %v1_ac18, i32* %r3.global-to-local, align 4
  store i1 %v2_b104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b104, label %dec_label_pc_af50, label %dec_label_pc_b110

dec_label_pc_af50:                                ; preds = %dec_label_pc_af44, %dec_label_pc_b0fc, %dec_label_pc_b110
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_af54 = load i32, i32* %r7.global-to-local, align 4
  %v1_af54 = trunc i32 %v0_af54 to i8
  %v2_af54 = load i32, i32* @r5, align 4
  %v3_af54 = add i32 %v2_af54, 10
  %v4_af54 = inttoptr i32 %v3_af54 to i8*
  store i8 %v1_af54, i8* %v4_af54, align 1
  %v0_af58 = load i32, i32* %r7.global-to-local, align 4
  %v1_af58 = trunc i32 %v0_af58 to i8
  %v2_af58 = load i32, i32* @r5, align 4
  %v3_af58 = add i32 %v2_af58, 11
  %v4_af58 = inttoptr i32 %v3_af58 to i8*
  store i8 %v1_af58, i8* %v4_af58, align 1
  %v0_af5c = load i32, i32* @r5, align 4
  store i32 %v0_af5c, i32* @r0, align 4
  %v2_af60 = call i32 @function_c7e0(i32 %v0_af5c, i32 20)
  %v3_af60 = trunc i32 %v2_af60 to i8
  %v4_af6421 = udiv i32 %v2_af60, 256
  %v1_af68 = trunc i32 %v4_af6421 to i8
  %v2_af68 = load i32, i32* @r5, align 4
  %v3_af68 = add i32 %v2_af68, 11
  %v4_af68 = inttoptr i32 %v3_af68 to i8*
  store i8 %v1_af68, i8* %v4_af68, align 1
  %v3_af6c = load i32, i32* @r5, align 4
  %v4_af6c = add i32 %v3_af6c, 10
  %v5_af6c = inttoptr i32 %v4_af6c to i8*
  store i8 %v3_af60, i8* %v5_af6c, align 1
  %v0_af70 = load i32, i32* @r6, align 4
  store i32 %v0_af70, i32* @r1, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_af7c = load i32, i32* %r7.global-to-local, align 4
  %v1_af7c = trunc i32 %v0_af7c to i8
  %v3_af7c = add i32 %v0_af70, 16
  %v4_af7c = inttoptr i32 %v3_af7c to i8*
  store i8 %v1_af7c, i8* %v4_af7c, align 1
  %v0_af80 = load i32, i32* %r7.global-to-local, align 4
  %v1_af80 = trunc i32 %v0_af80 to i8
  %v2_af80 = load i32, i32* @r6, align 4
  %v3_af80 = add i32 %v2_af80, 17
  %v4_af80 = inttoptr i32 %v3_af80 to i8*
  store i8 %v1_af80, i8* %v4_af80, align 1
  %v0_af84 = load i32, i32* @r5, align 4
  store i32 %v0_af84, i32* %r0.global-to-local, align 4
  %v4_af88 = call i32 @function_c83c(i32 %v0_af84, i32 %v0_af70, i32 10240, i32 40)
  %v5_af88 = trunc i32 %v4_af88 to i8
  store i32 %v4_af88, i32* %r0.global-to-local, align 4
  %v4_af8c22 = udiv i32 %v4_af88, 256
  %v1_af90 = trunc i32 %v4_af8c22 to i8
  %v2_af90 = load i32, i32* @r6, align 4
  %v3_af90 = add i32 %v2_af90, 17
  %v4_af90 = inttoptr i32 %v3_af90 to i8*
  store i8 %v1_af90, i8* %v4_af90, align 1
  %v3_af94 = load i32, i32* @r6, align 4
  %v4_af94 = add i32 %v3_af94, 16
  %v5_af94 = inttoptr i32 %v4_af94 to i8*
  store i8 %v5_af88, i8* %v5_af94, align 1
  %v3_af98 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_af98, i32* %r3.global-to-local, align 4
  %v0_af9c = load i32, i32* @r5, align 4
  %v1_af9c = add i32 %v0_af9c, 20
  %v2_af9c = inttoptr i32 %v1_af9c to i32*
  %v3_af9c = load i32, i32* %v2_af9c, align 4
  %v3_afa4 = udiv i32 %v3_af9c, 65536
  store i32 %v3_afa4, i32* %r2.global-to-local, align 4
  %v5_afa8 = mul i32 %v3_af98, 24
  %v1_afac = load i32, i32* @r8, align 4
  %v2_afac = add i32 %v1_afac, %v5_afa8
  store i32 %v2_afac, i32* %ip.global-to-local, align 4
  %v3_afb020 = udiv i32 %v3_af9c, 16777216
  %v1_afb4 = trunc i32 %v3_afb020 to i8
  %v3_afb4 = add i32 %v2_afac, 3
  %v4_afb4 = inttoptr i32 %v3_afb4 to i8*
  store i8 %v1_afb4, i8* %v4_afb4, align 1
  %v0_afb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_afb8 = trunc i32 %v0_afb8 to i8
  %v2_afb8 = load i32, i32* %ip.global-to-local, align 4
  %v3_afb8 = add i32 %v2_afb8, 2
  %v4_afb8 = inttoptr i32 %v3_afb8 to i8*
  store i8 %v1_afb8, i8* %v4_afb8, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_afc0 = load i32, i32* @r5, align 4
  store i32 %v0_afc0, i32* %r1.global-to-local, align 4
  %v0_afc4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_afc4, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_afd0 = load i32, i32* %ip.global-to-local, align 4
  %v6_afd8 = inttoptr i32 %v0_afc0 to i32*
  %v7_afd8 = call i32 @function_1244c(i32 %v0_afc4, i32* %v6_afd8, i32 60, i32 16384, i32 %v0_afd0, i32 16)
  %v3_afdc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_afdc, i32* %r3.global-to-local, align 4
  %v1_afe0 = add i32 %v3_afdc, 1
  store i32 %v1_afe0, i32* %r0.global-to-local, align 4
  %v1_afe4 = load i32, i32* %fp.global-to-local, align 4
  %v9_afe4 = icmp eq i32 %v1_afe0, %v1_afe4
  store i1 %v9_afe4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_afe0, i32* %stack_var_-40, align 4
  %v6_afec = icmp slt i32 %v1_afe0, %v1_afe4
  br i1 %v6_afec, label %dec_label_pc_aff0, label %dec_label_pc_b124

dec_label_pc_aff0:                                ; preds = %dec_label_pc_af50, %dec_label_pc_aee8
  %v1_b000 = phi i32 [ %v1_afe0, %dec_label_pc_af50 ], [ 0, %dec_label_pc_aee8 ]
  %v5_aff4 = mul i32 %v1_b000, 24
  %v1_aff8 = load i32, i32* @r8, align 4
  %v2_aff8 = add i32 %v1_aff8, %v5_aff4
  store i32 %v2_aff8, i32* %r3.global-to-local, align 4
  %v1_affc = add i32 %v2_aff8, 20
  %v2_affc = inttoptr i32 %v1_affc to i8*
  %v3_affc = load i8, i8* %v2_affc, align 1
  %v4_affc = zext i8 %v3_affc to i32
  store i32 %v4_affc, i32* %r2.global-to-local, align 4
  %v0_b000 = load i32, i32* %sb.global-to-local, align 4
  %v4_b000 = mul i32 %v1_b000, 4
  %v5_b000 = add i32 %v0_b000, %v4_b000
  %v6_b000 = inttoptr i32 %v5_b000 to i32*
  %v7_b000 = load i32, i32* %v6_b000, align 4
  store i32 %v7_b000, i32* @r5, align 4
  %v2_b004 = icmp ugt i8 %v3_affc, 30
  %v7_b004 = icmp eq i8 %v3_affc, 31
  store i1 %v7_b004, i1* %cpsr_z.global-to-local, align 1
  %v1_b008 = add i32 %v7_b000, 20
  store i32 %v1_b008, i32* @r6, align 4
  %v2_b00c = xor i1 %v7_b004, true
  %v3_b00c = and i1 %v2_b004, %v2_b00c
  br i1 %v3_b00c, label %dec_label_pc_aef4, label %dec_label_pc_b010

dec_label_pc_b010:                                ; preds = %dec_label_pc_aff0
  %v1_b010 = add i32 %v2_aff8, 16
  %v2_b010 = inttoptr i32 %v1_b010 to i32*
  %v3_b010 = load i32, i32* %v2_b010, align 4
  store i32 %v3_b010, i32* %r4.global-to-local, align 4
  %v0_b014 = call i32 @function_db88()
  store i32 %v0_b014, i32* %r0.global-to-local, align 4
  %v3_b018 = load i32, i32* %stack_var_-40, align 4
  %v5_b020 = mul i32 %v3_b018, 24
  %v0_b024 = load i32, i32* %r4.global-to-local, align 4
  %v1_b028 = load i32, i32* @r8, align 4
  %v2_b028 = add i32 %v1_b028, %v5_b020
  store i32 %v2_b028, i32* %r1.global-to-local, align 4
  %v1_b02c = and i32 %v0_b024, 65280
  store i32 %v1_b02c, i32* %r3.global-to-local, align 4
  %v1_b024 = udiv i32 %v0_b024, 256
  %v3_b030 = and i32 %v1_b024, 65280
  store i32 %v3_b030, i32* %r2.global-to-local, align 4
  %v3_b034 = mul i32 %v0_b024, 16777216
  store i32 %v3_b034, i32* %ip.global-to-local, align 4
  %v1_b038 = add i32 %v2_b028, 20
  %v2_b038 = inttoptr i32 %v1_b038 to i8*
  %v3_b038 = load i8, i8* %v2_b038, align 1
  %v4_b038 = zext i8 %v3_b038 to i32
  %v4_b03c = mul nuw nsw i32 %v1_b02c, 256
  %v5_b03c = or i32 %v4_b03c, %v3_b034
  store i32 %v5_b03c, i32* %ip.global-to-local, align 4
  %v2_b044 = call i32 @llvm.bswap.i32(i32 %v0_b024)
  %v7_b048 = lshr i32 %v0_b014, %v4_b038
  %v8_b048 = add i32 %v7_b048, %v2_b044
  store i32 %v8_b048, i32* %r2.global-to-local, align 4
  %v3_b054 = mul i32 %v8_b048, 16777216
  %v1_b04c = mul i32 %v8_b048, 256
  %v4_b058 = and i32 %v1_b04c, 16711680
  %v5_b058 = or i32 %v4_b058, %v3_b054
  store i32 %v5_b058, i32* %r1.global-to-local, align 4
  store i32 %v6_ab90, i32* %r0.global-to-local, align 4
  %v2_b068 = call i32 @llvm.bswap.i32(i32 %v8_b048)
  store i32 %v2_b068, i32* %r3.global-to-local, align 4
  store i1 %v7_aef8, i1* %cpsr_z.global-to-local, align 1
  %v1_b070 = load i32, i32* @r5, align 4
  %v2_b070 = add i32 %v1_b070, 16
  %v3_b070 = inttoptr i32 %v2_b070 to i32*
  store i32 %v2_b068, i32* %v3_b070, align 4
  br i1 %v2_aef8, label %dec_label_pc_b078, label %dec_label_pc_af00

dec_label_pc_b078:                                ; preds = %dec_label_pc_b010, %dec_label_pc_aef4
  %v0_b078 = call i32 @function_db88()
  store i32 %v0_b078, i32* %r0.global-to-local, align 4
  store i32 %v3_abfc, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_b088, i1* %cpsr_z.global-to-local, align 1
  %v1_b08c = load i32, i32* @r5, align 4
  %v2_b08c = add i32 %v1_b08c, 12
  %v3_b08c = inttoptr i32 %v2_b08c to i32*
  store i32 %v0_b078, i32* %v3_b08c, align 4
  br i1 %v3_b088, label %dec_label_pc_b094, label %dec_label_pc_b078.dec_label_pc_af14_crit_edge

dec_label_pc_b078.dec_label_pc_af14_crit_edge:    ; preds = %dec_label_pc_b078
  %v1_af18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_af14

dec_label_pc_b094:                                ; preds = %dec_label_pc_b078, %dec_label_pc_af00
  %v0_b094 = call i32 @function_db88()
  %v1_b094 = trunc i32 %v0_b094 to i8
  store i32 %v0_b094, i32* %r0.global-to-local, align 4
  %v4_b09823 = udiv i32 %v0_b094, 256
  %v1_b09c = trunc i32 %v4_b09823 to i8
  %v2_b09c = load i32, i32* @r5, align 4
  %v3_b09c = add i32 %v2_b09c, 5
  %v4_b09c = inttoptr i32 %v3_b09c to i8*
  store i8 %v1_b09c, i8* %v4_b09c, align 1
  store i32 %v3_ac10, i32* %r3.global-to-local, align 4
  %v1_b0a4 = load i32, i32* @r4, align 4
  %v9_b0a4 = icmp eq i32 %v3_ac10, %v1_b0a4
  store i1 %v9_b0a4, i1* %cpsr_z.global-to-local, align 1
  %v3_b0a8 = load i32, i32* @r5, align 4
  %v4_b0a8 = add i32 %v3_b0a8, 4
  %v5_b0a8 = inttoptr i32 %v4_b0a8 to i8*
  store i8 %v1_b094, i8* %v5_b0a8, align 1
  %v0_b0ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0ac, label %dec_label_pc_b0b0, label %dec_label_pc_b094.dec_label_pc_af20_crit_edge

dec_label_pc_b094.dec_label_pc_af20_crit_edge:    ; preds = %dec_label_pc_b094
  %v1_af24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_af20

dec_label_pc_b0b0:                                ; preds = %dec_label_pc_b094, %dec_label_pc_af14
  %v0_b0b0 = call i32 @function_db88()
  %v1_b0b0 = trunc i32 %v0_b0b0 to i8
  store i32 %v0_b0b0, i32* %r0.global-to-local, align 4
  store i32 %v3_ac14, i32* %ip.global-to-local, align 4
  %v4_b0b8 = sdiv i32 %v0_b0b0, 256
  store i32 %v4_b0b8, i32* %r3.global-to-local, align 4
  %v1_b0bc = load i32, i32* @r4, align 4
  %v9_b0bc = icmp eq i32 %v3_ac14, %v1_b0bc
  store i1 %v9_b0bc, i1* %cpsr_z.global-to-local, align 1
  %v3_b0c0 = load i32, i32* @r5, align 4
  %v4_b0c0 = add i32 %v3_b0c0, 20
  %v5_b0c0 = inttoptr i32 %v4_b0c0 to i8*
  store i8 %v1_b0b0, i8* %v5_b0c0, align 1
  %v0_b0c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0c4 = trunc i32 %v0_b0c4 to i8
  %v2_b0c4 = load i32, i32* @r6, align 4
  %v3_b0c4 = add i32 %v2_b0c4, 1
  %v4_b0c4 = inttoptr i32 %v3_b0c4 to i8*
  store i8 %v1_b0c4, i8* %v4_b0c4, align 1
  %v0_b0c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0c8, label %dec_label_pc_b0cc, label %dec_label_pc_b0b0.dec_label_pc_af2c_crit_edge

dec_label_pc_b0b0.dec_label_pc_af2c_crit_edge:    ; preds = %dec_label_pc_b0b0
  %v1_af30.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_af2c

dec_label_pc_b0cc:                                ; preds = %dec_label_pc_b0b0, %dec_label_pc_af20
  %v0_b0cc = call i32 @function_db88()
  %v1_b0cc = trunc i32 %v0_b0cc to i8
  %v4_b0d0 = sdiv i32 %v0_b0cc, 256
  store i32 %v4_b0d0, i32* %r3.global-to-local, align 4
  %v3_b0d4 = load i32, i32* @r6, align 4
  %v4_b0d4 = add i32 %v3_b0d4, 2
  %v5_b0d4 = inttoptr i32 %v4_b0d4 to i8*
  store i8 %v1_b0cc, i8* %v5_b0d4, align 1
  store i32 %v6_aacc, i32* %r0.global-to-local, align 4
  %v1_b0dc = load i32, i32* @r4, align 4
  %v9_b0dc = icmp eq i32 %v6_aacc, %v1_b0dc
  store i1 %v9_b0dc, i1* %cpsr_z.global-to-local, align 1
  %v0_b0e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0e0 = trunc i32 %v0_b0e0 to i8
  %v2_b0e0 = load i32, i32* @r6, align 4
  %v3_b0e0 = add i32 %v2_b0e0, 3
  %v4_b0e0 = inttoptr i32 %v3_b0e0 to i8*
  store i8 %v1_b0e0, i8* %v4_b0e0, align 1
  %v0_b0e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0e4, label %dec_label_pc_b0e8, label %dec_label_pc_b0cc.dec_label_pc_af38_crit_edge

dec_label_pc_b0cc.dec_label_pc_af38_crit_edge:    ; preds = %dec_label_pc_b0cc
  %v1_af3c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_af38

dec_label_pc_b0e8:                                ; preds = %dec_label_pc_b0cc, %dec_label_pc_af2c
  %v0_b0e8 = call i32 @function_db88()
  store i32 %v0_b0e8, i32* %r0.global-to-local, align 4
  store i32 %v6_aae4, i32* %r2.global-to-local, align 4
  %v1_b0f0 = load i32, i32* @r4, align 4
  %v9_b0f0 = icmp eq i32 %v6_aae4, %v1_b0f0
  store i1 %v9_b0f0, i1* %cpsr_z.global-to-local, align 1
  %v1_b0f4 = load i32, i32* @r6, align 4
  %v2_b0f4 = add i32 %v1_b0f4, 4
  %v3_b0f4 = inttoptr i32 %v2_b0f4 to i32*
  store i32 %v0_b0e8, i32* %v3_b0f4, align 4
  br i1 %v9_b0f0, label %dec_label_pc_b0fc, label %dec_label_pc_af44

dec_label_pc_b0fc:                                ; preds = %dec_label_pc_b0e8, %dec_label_pc_af38
  %v0_b0fc = call i32 @function_db88()
  store i32 %v0_b0fc, i32* %r0.global-to-local, align 4
  store i32 %v1_ac18, i32* %r3.global-to-local, align 4
  store i1 %v2_b104, i1* %cpsr_z.global-to-local, align 1
  %v1_b108 = load i32, i32* @r6, align 4
  %v2_b108 = add i32 %v1_b108, 8
  %v3_b108 = inttoptr i32 %v2_b108 to i32*
  store i32 %v0_b0fc, i32* %v3_b108, align 4
  br i1 %v2_b104, label %dec_label_pc_af50, label %dec_label_pc_b110

dec_label_pc_b110:                                ; preds = %dec_label_pc_af44, %dec_label_pc_b0fc
  %v0_b110 = call i32 @function_db88()
  %v1_b110 = trunc i32 %v0_b110 to i8
  store i32 %v0_b110, i32* %r0.global-to-local, align 4
  %v4_b114 = sdiv i32 %v0_b110, 256
  store i32 %v4_b114, i32* %r3.global-to-local, align 4
  %v1_b118 = trunc i32 %v4_b114 to i8
  %v2_b118 = load i32, i32* @r6, align 4
  %v3_b118 = add i32 %v2_b118, 19
  %v4_b118 = inttoptr i32 %v3_b118 to i8*
  store i8 %v1_b118, i8* %v4_b118, align 1
  %v3_b11c = load i32, i32* @r6, align 4
  %v4_b11c = add i32 %v3_b11c, 18
  %v5_b11c = inttoptr i32 %v4_b11c to i8*
  store i8 %v1_b110, i8* %v5_b11c, align 1
  br label %dec_label_pc_af50

dec_label_pc_b124:                                ; preds = %dec_label_pc_af50, %dec_label_pc_aed8
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b128 = call i32 @function_11eb8(i32* null)
  store i32 %v2_b128, i32* %r0.global-to-local, align 4
  store i32 %v2_aba0, i32* %ip.global-to-local, align 4
  %v9_b130 = icmp eq i32 %v2_aba0, %v2_b128
  store i1 %v9_b130, i1* %cpsr_z.global-to-local, align 1
  %v6_b134 = icmp slt i32 %v2_aba0, %v2_b128
  br i1 %v6_b134, label %dec_label_pc_b138, label %dec_label_pc_b124.dec_label_pc_aed8_crit_edge

dec_label_pc_b124.dec_label_pc_aed8_crit_edge:    ; preds = %dec_label_pc_b124
  %v0_aedc.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_aed8

dec_label_pc_b138:                                ; preds = %dec_label_pc_b124, %dec_label_pc_a9d0, %dec_label_pc_b140
  %v29_b13c = phi i32 [ %v3_abb4, %dec_label_pc_a9d0 ], [ %v1_b144, %dec_label_pc_b140 ], [ %v2_b128, %dec_label_pc_b124 ]
  store i32 %v3_a9d0, i32* %r4.global-to-local, align 4
  store i32 %v12_a9d0, i32* %r7.global-to-local, align 4
  ret i32 %v29_b13c

dec_label_pc_b140:                                ; preds = %dec_label_pc_abc4
  %v0_b140 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_b140, i32* %r0.global-to-local, align 4
  %v1_b144 = call i32 @function_11c68(i32 %v0_b140)
  store i32 %v1_b144, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b138

; uselistorder directives
  uselistorder i32 %v1_b144, { 1, 0 }
  uselistorder i32 %v4_b114, { 1, 0 }
  uselistorder i32 %v0_b110, { 0, 2, 1 }
  uselistorder i32 %v0_b0b0, { 0, 2, 1 }
  uselistorder i32 %v0_b094, { 0, 2, 1 }
  uselistorder i32 %v2_b068, { 1, 0 }
  uselistorder i32 %v8_b048, { 2, 0, 1, 3 }
  uselistorder i32 %v3_b034, { 1, 0 }
  uselistorder i32 %v0_b024, { 2, 0, 1, 3 }
  uselistorder i32 %v1_afe0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_af88, { 0, 2, 1 }
  uselistorder i32 %v0_af70, { 1, 0, 2 }
  uselistorder i1 %v2_b104, { 2, 3, 1, 0 }
  uselistorder i1 %v3_b088, { 3, 2, 0, 1 }
  uselistorder i1 %v7_aef8, { 2, 1, 0 }
  uselistorder i32 %v1_aec8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ae74, { 1, 0 }
  uselistorder i32 %v3_accc, { 1, 0 }
  uselistorder i32 %v3_acc8, { 1, 0 }
  uselistorder i32 %v1_acc4, { 1, 0 }
  uselistorder i32 %v1_acbc, { 1, 0 }
  uselistorder i32 %v3_ac9c, { 1, 0 }
  uselistorder i32 %v1_ac90, { 1, 0 }
  uselistorder i32 %v1_ac8c, { 1, 0 }
  uselistorder i32 %v1_ac88, { 1, 0 }
  uselistorder i32 %v1_ac80, { 1, 0 }
  uselistorder i32 %v1_ac4c, { 1, 0 }
  uselistorder i32 %v0_ac20, { 1, 0, 2 }
  uselistorder i32 %v1_ac18, { 2, 1, 3, 0 }
  uselistorder i32 %v3_abfc, { 1, 0, 2 }
  uselistorder i32 %v3_abf0, { 2, 0, 1 }
  uselistorder i1 %v7_abe4, { 1, 0 }
  uselistorder i1 %v7_abb8, { 1, 0 }
  uselistorder i32 %v3_abb4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_aba0, { 2, 1, 0 }
  uselistorder i32 %v6_ab90, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v6_aae4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_aacc, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v6_aa94, { 0, 2, 1, 3 }
  uselistorder i32 %v1_aa7c, { 1, 2, 0 }
  uselistorder i32 %v7_aa38, { 1, 0, 2 }
  uselistorder i32 %v6_aa14, { 1, 2, 0 }
  uselistorder i32 %v1_a9d4, { 1, 2, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 13, 11, 12 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 10, 11, 12, 13, 14, 15, 20, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 13, 14, 15, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 11, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 34, 33, 36, 35, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 8, 6, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder label %dec_label_pc_b138, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b110, { 1, 0 }
  uselistorder label %dec_label_pc_af50, { 2, 1, 0 }
  uselistorder label %bb75, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_b150(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b150:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-84 = alloca i8, align 1
  %v1_b154 = urem i32 %arg2, 256
  store i32 %v1_b154, i32* @sl, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %v1_b154, i32* %r0.global-to-local, align 4
  %v1_b168 = urem i32 %arg4, 256
  store i32 %v1_b168, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  %v2_b174 = call i32 @function_12630(i32 %v1_b154, i32 4)
  %v0_b180 = load i32, i32* @sl, align 4
  store i32 %v0_b180, i32* %r0.global-to-local, align 4
  %v2_b184 = call i32 @function_12630(i32 %v0_b180, i32 4)
  store i32 65535, i32* @r6, align 4
  %v0_b190 = load i32, i32* @r5, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_b184, i32* @sb, align 4
  %v0_b1a0 = load i32, i32* @r4, align 4
  store i32 %v0_b1a0, i32* %r0.global-to-local, align 4
  %v5_b1a4 = inttoptr i32 %v0_b190 to i32*
  %v6_b1a4 = call i32 @function_83ec(i32 %v0_b1a0, i32* %v5_b1a4, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_b1a8 = load i32, i32* @r5, align 4
  %v0_b1b4 = load i32, i32* @r6, align 4
  store i32 %v0_b1b4, i32* %r3.global-to-local, align 4
  %v0_b1b8 = load i32, i32* @r4, align 4
  store i32 %v0_b1b8, i32* %r0.global-to-local, align 4
  %v3_b1bc = urem i32 %v6_b1a4, 65536
  store i32 %v3_b1bc, i32* @fp, align 4
  %v5_b1c0 = inttoptr i32 %v0_b1a8 to i32*
  %v6_b1c0 = call i32 @function_83ec(i32 %v0_b1b8, i32* %v5_b1c0, i32 6, i32 %v0_b1b4, i32 ptrtoint (i32* @0 to i32))
  %v0_b1c4 = load i32, i32* @r5, align 4
  %v3_b1c8 = mul i32 %v6_b1c0, 65536
  store i32 %v3_b1c8, i32* @r8, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_b1d4 = load i32, i32* @r4, align 4
  store i32 %v0_b1d4, i32* %r0.global-to-local, align 4
  %v5_b1d8 = inttoptr i32 %v0_b1c4 to i32*
  %v6_b1d8 = call i32 @function_83ec(i32 %v0_b1d4, i32* %v5_b1d8, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_b1e8 = urem i32 %v6_b1d8, 65536
  %v0_b1ec = load i32, i32* @r5, align 4
  %v0_b1f0 = load i32, i32* @r4, align 4
  store i32 %v0_b1f0, i32* %r0.global-to-local, align 4
  %v5_b1f8 = inttoptr i32 %v0_b1ec to i32*
  %v6_b1f8 = call i32 @function_83ec(i32 %v0_b1f0, i32* %v5_b1f8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b204 = urem i32 %v6_b1f8, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v2_b220 = call i32 @function_11eb8(i32* null)
  %v0_b224 = load i32, i32* @r8, align 4
  %v3_b224 = udiv i32 %v0_b224, 65536
  store i32 %v3_b224, i32* %r3.global-to-local, align 4
  %v1_b228 = load i32, i32* @r6, align 4
  %v9_b228 = icmp eq i32 %v3_b224, %v1_b228
  %v1_b2304 = load i32, i32* @r7, align 4
  %v2_b2305 = add i32 %v1_b2304, %v2_b220
  store i32 %v2_b2305, i32* %r0.global-to-local, align 4
  br i1 %v9_b228, label %dec_label_pc_b40c, label %bb

bb:                                               ; preds = %dec_label_pc_b150
  %v2_b22c = mul nuw nsw i32 %v3_b224, 256
  %v4_b234 = and i32 %v2_b22c, 65280
  store i32 %v4_b234, i32* %r3.global-to-local, align 4
  %v5_b23c = udiv i32 %v0_b224, 16777216
  %v6_b23c = or i32 %v4_b234, %v5_b23c
  br label %dec_label_pc_b244

dec_label_pc_b244:                                ; preds = %bb, %dec_label_pc_b40c
  %storemerge = phi i32 [ %v6_b23c, %bb ], [ %v3_b414, %dec_label_pc_b40c ]
  store i32 %storemerge, i32* @r7, align 4
  %v0_b244 = load i32, i32* @sl, align 4
  %tmp47 = icmp slt i32 %v0_b244, 1
  br i1 %tmp47, label %dec_label_pc_b3dc, label %dec_label_pc_b24c

dec_label_pc_b24c:                                ; preds = %dec_label_pc_b244
  %v0_b24c = load i32, i32* @fp, align 4
  %v3_b24c = udiv i32 %v0_b24c, 256
  %v1_b250 = mul i32 %v0_b24c, 256
  %v4_b254 = and i32 %v1_b250, 65280
  %v5_b254 = or i32 %v4_b254, %v3_b24c
  store i32 0, i32* @r8, align 4
  store i32 %arg3, i32* @r5, align 4
  %v5_b264 = trunc i32 %v3_b24c to i8
  %v3_b26c3 = udiv i32 %v5_b254, 256
  store i32 %v3_b26c3, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  %v4_b278 = trunc i32 %v3_b26c3 to i8
  store i8 %v4_b278, i8* %stack_var_-84, align 1
  %v3_b31c = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_b2a0

dec_label_pc_b280:                                ; preds = %dec_label_pc_b304
  %v0_b280 = load i32, i32* @r6, align 4
  %v1_b280 = load i32, i32* @sb, align 4
  %v2_b280 = add i32 %v1_b280, %v0_b280
  %v3_b280 = inttoptr i32 %v2_b280 to i32*
  %v4_b280 = load i32, i32* %v3_b280, align 4
  store i32 %v4_b280, i32* %r0.global-to-local, align 4
  %v3_b28c = inttoptr i32 %v0_b320 to %sockaddr*
  %v4_b28c = call i32 @function_1230c(i32 %v4_b280, %sockaddr* %v3_b28c, i32 16)
  store i32 %v4_b28c, i32* %r0.global-to-local, align 4
  %v0_b290 = load i32, i32* @r8, align 4
  %v1_b290 = load i32, i32* @sl, align 4
  %v9_b290 = icmp eq i32 %v0_b290, %v1_b290
  %v0_b294 = load i32, i32* @r6, align 4
  %v1_b294 = add i32 %v0_b294, 4
  store i32 %v1_b294, i32* @r6, align 4
  %v0_b298 = load i32, i32* @r5, align 4
  %v1_b298 = add i32 %v0_b298, 24
  store i32 %v1_b298, i32* @r5, align 4
  br i1 %v9_b290, label %dec_label_pc_b398, label %dec_label_pc_b2a0

dec_label_pc_b2a0:                                ; preds = %dec_label_pc_b32c, %dec_label_pc_b280, %dec_label_pc_b24c
  store i32 65535, i32* %r0.global-to-local, align 4
  %v2_b2ac = call i32 @function_12630(i32 65535, i32 1)
  store i32 %v2_b2ac, i32* %r0.global-to-local, align 4
  store i32 %v2_b174, i32* %r3.global-to-local, align 4
  %v0_b2b8 = load i32, i32* @fp, align 4
  %v9_b2b8 = icmp eq i32 %v0_b2b8, 65535
  %v1_b2bc = load i32, i32* @r6, align 4
  %v3_b2bc = add i32 %v1_b2bc, %v2_b174
  %v4_b2bc = inttoptr i32 %v3_b2bc to i32*
  store i32 %v2_b2ac, i32* %v4_b2bc, align 4
  br i1 %v9_b2b8, label %dec_label_pc_b3f8, label %dec_label_pc_b2c4

dec_label_pc_b2c4:                                ; preds = %dec_label_pc_b2a0
  %v2_b2c8 = load i8, i8* %stack_var_-84, align 1
  %v3_b2c8 = sext i8 %v2_b2c8 to i32
  store i32 %v3_b2c8, i32* %r3.global-to-local, align 4
  %v2_b2cc = load i32, i32* @r5, align 4
  %v3_b2cc = add i32 %v2_b2cc, 2
  %v4_b2cc = inttoptr i32 %v3_b2cc to i8*
  store i8 %v5_b264, i8* %v4_b2cc, align 1
  %v0_b2d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2d0 = trunc i32 %v0_b2d0 to i8
  %v2_b2d0 = load i32, i32* @r5, align 4
  %v3_b2d0 = add i32 %v2_b2d0, 3
  %v4_b2d0 = inttoptr i32 %v3_b2d0 to i8*
  store i8 %v1_b2d0, i8* %v4_b2d0, align 1
  br label %dec_label_pc_b2d4

dec_label_pc_b2d4:                                ; preds = %dec_label_pc_b3f8, %dec_label_pc_b2c4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b2e0 = call i32 @function_124b0(i32 2, i32 2, i32 17)
  store i32 %v3_b2e0, i32* %r0.global-to-local, align 4
  %v7_b2e4 = icmp eq i32 %v3_b2e0, -1
  %v0_b2e8 = load i32, i32* @r8, align 4
  %v1_b2e8 = add i32 %v0_b2e8, 1
  store i32 %v1_b2e8, i32* @r8, align 4
  store i32 0, i32* @lr, align 4
  %v1_b2fc = load i32, i32* @r6, align 4
  %v2_b2fc = load i32, i32* @sb, align 4
  %v3_b2fc = add i32 %v2_b2fc, %v1_b2fc
  %v4_b2fc = inttoptr i32 %v3_b2fc to i32*
  store i32 %v3_b2e0, i32* %v4_b2fc, align 4
  br i1 %v7_b2e4, label %dec_label_pc_b3f0.loopexit, label %dec_label_pc_b304

dec_label_pc_b304:                                ; preds = %dec_label_pc_b2d4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_b31c = load i32, i32* %r0.global-to-local, align 4
  %v4_b31c = call i32 @function_122e0(i32 %v0_b31c, %sockaddr* %v3_b31c, i32 16)
  store i32 %v4_b31c, i32* %r0.global-to-local, align 4
  %v0_b320 = load i32, i32* @r5, align 4
  %v1_b320 = add i32 %v0_b320, 20
  %v2_b320 = inttoptr i32 %v1_b320 to i8*
  %v3_b320 = load i8, i8* %v2_b320, align 1
  %v4_b320 = zext i8 %v3_b320 to i32
  store i32 %v4_b320, i32* %r3.global-to-local, align 4
  %tmp51 = icmp ugt i8 %v3_b320, 31
  br i1 %tmp51, label %dec_label_pc_b280, label %dec_label_pc_b32c

dec_label_pc_b32c:                                ; preds = %dec_label_pc_b304
  %v1_b32c = add i32 %v0_b320, 16
  %v2_b32c = inttoptr i32 %v1_b32c to i32*
  %v3_b32c = load i32, i32* %v2_b32c, align 4
  store i32 %v3_b32c, i32* @r4, align 4
  %v0_b330 = call i32 @function_db88()
  store i32 %v0_b330, i32* %r0.global-to-local, align 4
  %v0_b334 = load i32, i32* @r4, align 4
  %v1_b338 = and i32 %v0_b334, 65280
  store i32 %v1_b338, i32* %r3.global-to-local, align 4
  %v0_b348 = load i32, i32* @r5, align 4
  %v1_b348 = add i32 %v0_b348, 20
  %v2_b348 = inttoptr i32 %v1_b348 to i8*
  %v3_b348 = load i8, i8* %v2_b348, align 1
  %v4_b348 = zext i8 %v3_b348 to i32
  %v2_b350 = call i32 @llvm.bswap.i32(i32 %v0_b334)
  %v7_b354 = lshr i32 %v0_b330, %v4_b348
  %v8_b354 = add i32 %v7_b354, %v2_b350
  %v1_b35c = and i32 %v8_b354, 65280
  store i32 %v1_b35c, i32* %r0.global-to-local, align 4
  %v2_b370 = call i32 @llvm.bswap.i32(i32 %v8_b354)
  store i32 %v2_b370, i32* %r3.global-to-local, align 4
  %v2_b374 = add i32 %v0_b348, 4
  %v3_b374 = inttoptr i32 %v2_b374 to i32*
  store i32 %v2_b370, i32* %v3_b374, align 4
  %v0_b378 = load i32, i32* @r5, align 4
  %v0_b37c = load i32, i32* @r6, align 4
  %v1_b37c = load i32, i32* @sb, align 4
  %v2_b37c = add i32 %v1_b37c, %v0_b37c
  %v3_b37c = inttoptr i32 %v2_b37c to i32*
  %v4_b37c = load i32, i32* %v3_b37c, align 4
  store i32 %v4_b37c, i32* %r0.global-to-local, align 4
  %v3_b384 = inttoptr i32 %v0_b378 to %sockaddr*
  %v4_b384 = call i32 @function_1230c(i32 %v4_b37c, %sockaddr* %v3_b384, i32 16)
  store i32 %v4_b384, i32* %r0.global-to-local, align 4
  %v0_b388 = load i32, i32* @r8, align 4
  %v1_b388 = load i32, i32* @sl, align 4
  %v9_b388 = icmp eq i32 %v0_b388, %v1_b388
  %v0_b38c = load i32, i32* @r6, align 4
  %v1_b38c = add i32 %v0_b38c, 4
  store i32 %v1_b38c, i32* @r6, align 4
  %v0_b390 = load i32, i32* @r5, align 4
  %v1_b390 = add i32 %v0_b390, 24
  store i32 %v1_b390, i32* @r5, align 4
  br i1 %v9_b388, label %dec_label_pc_b398, label %dec_label_pc_b2a0

dec_label_pc_b398:                                ; preds = %dec_label_pc_b32c, %dec_label_pc_b280, %dec_label_pc_b3dc.dec_label_pc_b398_crit_edge
  %v0_b398 = phi i32 [ %v0_b398.pre, %dec_label_pc_b3dc.dec_label_pc_b398_crit_edge ], [ %v0_b388, %dec_label_pc_b32c ], [ %v0_b290, %dec_label_pc_b280 ]
  %tmp48 = icmp slt i32 %v0_b398, 1
  br i1 %tmp48, label %dec_label_pc_b3dc, label %dec_label_pc_b3a0

dec_label_pc_b3a0:                                ; preds = %dec_label_pc_b398
  %v2_b3a4 = icmp eq i32 %v1_b204, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_b3a4, label %dec_label_pc_b3ac, label %dec_label_pc_b41c

dec_label_pc_b3ac:                                ; preds = %dec_label_pc_b3a0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_b3b4

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b3b4, %dec_label_pc_b3ac
  %v0_b3c0 = phi i32 [ %v1_b3c0, %dec_label_pc_b3b4 ], [ 0, %dec_label_pc_b3ac ]
  %v0_b3b8 = phi i32 [ %v1_b3d4, %dec_label_pc_b3b4 ], [ 0, %dec_label_pc_b3ac ]
  store i32 %v2_b174, i32* %r3.global-to-local, align 4
  %v1_b3b8 = load i32, i32* @sb, align 4
  %v2_b3b8 = add i32 %v1_b3b8, %v0_b3b8
  %v3_b3b8 = inttoptr i32 %v2_b3b8 to i32*
  %v4_b3b8 = load i32, i32* %v3_b3b8, align 4
  store i32 %v4_b3b8, i32* %r0.global-to-local, align 4
  %v2_b3bc = add i32 %v0_b3b8, %v2_b174
  %v3_b3bc = inttoptr i32 %v2_b3bc to i32*
  %v4_b3bc = load i32, i32* %v3_b3bc, align 4
  %v1_b3c0 = add i32 %v0_b3c0, 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_b3cc = inttoptr i32 %v4_b3bc to i32*
  %v5_b3cc = call i32 @function_12420(i32 %v4_b3b8, i32* %v4_b3cc, i32 %v3_b1e8, i32 16384)
  store i32 %v5_b3cc, i32* %r0.global-to-local, align 4
  %v1_b3d0 = load i32, i32* @sl, align 4
  %v9_b3d0 = icmp eq i32 %v1_b3c0, %v1_b3d0
  %v0_b3d4 = load i32, i32* @r4, align 4
  %v1_b3d4 = add i32 %v0_b3d4, 4
  store i32 %v1_b3d4, i32* @r4, align 4
  br i1 %v9_b3d0, label %dec_label_pc_b3dc, label %dec_label_pc_b3b4

dec_label_pc_b3dc:                                ; preds = %dec_label_pc_b424, %dec_label_pc_b3b4, %dec_label_pc_b398, %dec_label_pc_b244
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b3e0 = call i32 @function_11eb8(i32* null)
  store i32 %v2_b3e0, i32* %r0.global-to-local, align 4
  store i32 %v2_b2305, i32* %r3.global-to-local, align 4
  %v6_b3ec = icmp slt i32 %v2_b2305, %v2_b3e0
  br i1 %v6_b3ec, label %dec_label_pc_b3f0, label %dec_label_pc_b3dc.dec_label_pc_b398_crit_edge

dec_label_pc_b3dc.dec_label_pc_b398_crit_edge:    ; preds = %dec_label_pc_b3dc
  %v0_b398.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_b398

dec_label_pc_b3f0.loopexit:                       ; preds = %dec_label_pc_b2d4
  %v29_b3f4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b3f0

dec_label_pc_b3f0:                                ; preds = %dec_label_pc_b3f0.loopexit, %dec_label_pc_b3dc
  %v29_b3f4 = phi i32 [ %v29_b3f4.pre, %dec_label_pc_b3f0.loopexit ], [ %v2_b3e0, %dec_label_pc_b3dc ]
  ret i32 %v29_b3f4

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b2a0
  %v0_b3f8 = call i32 @function_db88()
  %v1_b3f8 = trunc i32 %v0_b3f8 to i8
  store i32 %v0_b3f8, i32* %r0.global-to-local, align 4
  %v4_b3fc = sdiv i32 %v0_b3f8, 256
  store i32 %v4_b3fc, i32* %r3.global-to-local, align 4
  %v1_b400 = trunc i32 %v4_b3fc to i8
  %v2_b400 = load i32, i32* @r5, align 4
  %v3_b400 = add i32 %v2_b400, 3
  %v4_b400 = inttoptr i32 %v3_b400 to i8*
  store i8 %v1_b400, i8* %v4_b400, align 1
  %v3_b404 = load i32, i32* @r5, align 4
  %v4_b404 = add i32 %v3_b404, 2
  %v5_b404 = inttoptr i32 %v4_b404 to i8*
  store i8 %v1_b3f8, i8* %v5_b404, align 1
  br label %dec_label_pc_b2d4

dec_label_pc_b40c:                                ; preds = %dec_label_pc_b150
  %v0_b40c = call i32 @function_db88()
  %v3_b410 = mul i32 %v0_b40c, 65536
  store i32 %v3_b410, i32* %r0.global-to-local, align 4
  %v3_b414 = urem i32 %v0_b40c, 65536
  br label %dec_label_pc_b244

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b3a0
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_b424

dec_label_pc_b424:                                ; preds = %dec_label_pc_b424, %dec_label_pc_b41c
  %v0_b428 = phi i32 [ %v1_b460, %dec_label_pc_b424 ], [ 0, %dec_label_pc_b41c ]
  %v2_b428 = add i32 %v0_b428, %v2_b174
  %v3_b428 = inttoptr i32 %v2_b428 to i32*
  %v4_b428 = load i32, i32* %v3_b428, align 4
  store i32 %v4_b428, i32* @r4, align 4
  store i32 %v4_b428, i32* %r0.global-to-local, align 4
  %v2_b434 = call i32 @function_dc3c(i32 %v4_b428, i32 %v3_b1e8)
  store i32 %v2_b434, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b440 = load i32, i32* @r4, align 4
  %v4_b440 = add i32 %v2_b440, %v3_b1e8
  %v5_b440 = inttoptr i32 %v4_b440 to i8*
  store i8 0, i8* %v5_b440, align 1
  %v0_b444 = load i32, i32* @r4, align 4
  %v0_b448 = load i32, i32* @r6, align 4
  %v1_b448 = load i32, i32* @sb, align 4
  %v2_b448 = add i32 %v1_b448, %v0_b448
  %v3_b448 = inttoptr i32 %v2_b448 to i32*
  %v4_b448 = load i32, i32* %v3_b448, align 4
  store i32 %v4_b448, i32* %r0.global-to-local, align 4
  %v0_b44c = load i32, i32* @r5, align 4
  %v1_b44c = add i32 %v0_b44c, 1
  store i32 %v1_b44c, i32* @r5, align 4
  %v0_b454 = load i32, i32* %r3.global-to-local, align 4
  %v1_b454 = add i32 %v0_b454, 16384
  store i32 %v1_b454, i32* %r3.global-to-local, align 4
  %v4_b458 = inttoptr i32 %v0_b444 to i32*
  %v5_b458 = call i32 @function_12420(i32 %v4_b448, i32* %v4_b458, i32 %v3_b1e8, i32 %v1_b454)
  store i32 %v5_b458, i32* %r0.global-to-local, align 4
  %v0_b45c = load i32, i32* @r5, align 4
  %v1_b45c = load i32, i32* @sl, align 4
  %v9_b45c = icmp eq i32 %v0_b45c, %v1_b45c
  %v0_b460 = load i32, i32* @r6, align 4
  %v1_b460 = add i32 %v0_b460, 4
  store i32 %v1_b460, i32* @r6, align 4
  br i1 %v9_b45c, label %dec_label_pc_b3dc, label %dec_label_pc_b424

; uselistorder directives
  uselistorder i32 %v1_b460, { 1, 0 }
  uselistorder i32 %v0_b40c, { 1, 0 }
  uselistorder i32 %v4_b3fc, { 1, 0 }
  uselistorder i32 %v0_b3f8, { 0, 2, 1 }
  uselistorder i32 %v1_b3d4, { 1, 0 }
  uselistorder i32 %v2_b370, { 1, 0 }
  uselistorder i32 %v0_b320, { 1, 2, 0 }
  uselistorder i32 %v3_b2e0, { 1, 0, 2 }
  uselistorder i32 %v3_b224, { 0, 2, 1 }
  uselistorder i32 %v3_b1e8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_b174, { 0, 1, 4, 2, 3 }
  uselistorder i32 %v1_b154, { 1, 2, 0 }
  uselistorder i8* %stack_var_-84, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 6, 4, 5, 7, 19, 9, 8, 30, 10, 13, 11, 12, 14, 31, 18, 20, 17, 22, 21, 16, 15, 1, 23, 24, 25, 26, 27, 28, 29, 0 }
  uselistorder label %dec_label_pc_b398, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b244, { 1, 0 }
}

define i32 @function_b46c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b46c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v18_b46c = load i32, i32* @sb, align 4
  %v21_b46c = load i32, i32* @sl, align 4
  %v1_b470 = urem i32 %arg2, 256
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v1_b470, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b48c = urem i32 %arg4, 256
  store i32 %v1_b48c, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_b49c = call i32 @function_12630(i32 %v1_b470, i32 4)
  %v0_b4a0 = load i32, i32* @r5, align 4
  store i32 %v0_b4a0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b4ac = load i32, i32* @r7, align 4
  store i32 %v0_b4ac, i32* %r3.global-to-local, align 4
  %v0_b4b0 = load i32, i32* @r4, align 4
  store i32 %v0_b4b0, i32* %r0.global-to-local, align 4
  %v5_b4b4 = inttoptr i32 %v0_b4a0 to i32*
  %v6_b4b4 = call i32 @function_83ec(i32 %v0_b4b0, i32* %v5_b4b4, i32 2, i32 %v0_b4ac, i32 %v2_b49c)
  %v1_b4c0 = urem i32 %v6_b4b4, 256
  store i32 %v1_b4c0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b4cc = load i32, i32* @r5, align 4
  store i32 %v0_b4cc, i32* %r1.global-to-local, align 4
  %v0_b4d0 = load i32, i32* @r4, align 4
  store i32 %v0_b4d0, i32* %r0.global-to-local, align 4
  %v5_b4d4 = trunc i32 %v6_b4b4 to i8
  %v6_b4d8 = inttoptr i32 %v0_b4cc to i32*
  %v7_b4d8 = call i32 @function_83ec(i32 %v0_b4d0, i32* %v6_b4d8, i32 3, i32 65535, i32 %v6_b4b4)
  %v0_b4dc = load i32, i32* @r5, align 4
  store i32 %v0_b4dc, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b4ec = load i32, i32* @r4, align 4
  store i32 %v0_b4ec, i32* %r0.global-to-local, align 4
  %v5_b4f0 = inttoptr i32 %v0_b4dc to i32*
  %v6_b4f0 = call i32 @function_83ec(i32 %v0_b4ec, i32* %v5_b4f0, i32 4, i32 64, i32 %v7_b4d8)
  %v1_b4f8 = urem i32 %v6_b4f0, 256
  store i32 %v1_b4f8, i32* %ip.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r5, align 4
  store i32 %v0_b4fc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_b504 = load i32, i32* @r7, align 4
  store i32 %v0_b504, i32* %r3.global-to-local, align 4
  %v0_b508 = load i32, i32* @r4, align 4
  store i32 %v0_b508, i32* %r0.global-to-local, align 4
  %v5_b50c = trunc i32 %v6_b4f0 to i8
  %v6_b510 = inttoptr i32 %v0_b4fc to i32*
  %v7_b510 = call i32 @function_83ec(i32 %v0_b508, i32* %v6_b510, i32 5, i32 %v0_b504, i32 %v6_b4f0)
  %v1_b51c = urem i32 %v7_b510, 256
  store i32 %v1_b51c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b528 = load i32, i32* @r5, align 4
  store i32 %v0_b528, i32* %r1.global-to-local, align 4
  %v0_b52c = load i32, i32* @r4, align 4
  store i32 %v0_b52c, i32* %r0.global-to-local, align 4
  %v5_b534 = inttoptr i32 %v0_b528 to i32*
  %v6_b534 = call i32 @function_83ec(i32 %v0_b52c, i32* %v5_b534, i32 6, i32 65535, i32 %v1_b51c)
  %v0_b540 = load i32, i32* @r5, align 4
  store i32 %v0_b540, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b54c = load i32, i32* @r4, align 4
  store i32 %v0_b54c, i32* %r0.global-to-local, align 4
  %v5_b550 = inttoptr i32 %v0_b540 to i32*
  %v6_b550 = call i32 @function_83ec(i32 %v0_b54c, i32* %v5_b550, i32 7, i32 65535, i32 %v6_b534)
  %v0_b554 = load i32, i32* @r5, align 4
  store i32 %v0_b554, i32* %r1.global-to-local, align 4
  %v0_b558 = load i32, i32* @r7, align 4
  store i32 %v0_b558, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_b550, i32* %sb.global-to-local, align 4
  %v0_b564 = load i32, i32* @r4, align 4
  store i32 %v0_b564, i32* %r0.global-to-local, align 4
  %v5_b568 = inttoptr i32 %v0_b554 to i32*
  %v6_b568 = call i32 @function_83ec(i32 %v0_b564, i32* %v5_b568, i32 %v0_b558, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b574 = load i32, i32* @r5, align 4
  store i32 %v0_b574, i32* %r1.global-to-local, align 4
  store i32 %v6_b568, i32* @sl, align 4
  %v0_b57c = load i32, i32* @r4, align 4
  store i32 %v0_b57c, i32* %r0.global-to-local, align 4
  %v5_b580 = inttoptr i32 %v0_b574 to i32*
  %v6_b580 = call i32 @function_83ec(i32 %v0_b57c, i32* %v5_b580, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_b58c = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_b58c, i32* %r3.global-to-local, align 4
  %v1_b590 = urem i32 %v6_b580, 256
  store i32 %v1_b590, i32* %ip.global-to-local, align 4
  %v0_b594 = load i32, i32* @r5, align 4
  store i32 %v0_b594, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_b59c = load i32, i32* @r4, align 4
  store i32 %v0_b59c, i32* %r0.global-to-local, align 4
  %v5_b5a4 = inttoptr i32 %v0_b594 to i32*
  %v6_b5a4 = call i32 @function_83ec(i32 %v0_b59c, i32* %v5_b5a4, i32 19, i32 %v2_b58c, i32 %v1_b590)
  store i32 %v6_b5a4, i32* @fp, align 4
  %v0_b5ac = load i32, i32* @r7, align 4
  store i32 %v0_b5ac, i32* %r0.global-to-local, align 4
  %v1_b5b0 = inttoptr i32 %v0_b5ac to i32*
  %v2_b5b0 = call i32 @function_11eb8(i32* %v1_b5b0)
  %v1_b5b4 = load i32, i32* @r6, align 4
  %v2_b5b4 = add i32 %v1_b5b4, %v2_b5b0
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_b5c8 = call i32 @function_124b0(i32 2, i32 3, i32 17)
  store i32 %v3_b5c8, i32* %r0.global-to-local, align 4
  %v7_b5cc = icmp eq i32 %v3_b5c8, -1
  store i1 %v7_b5cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b5cc, label %dec_label_pc_b9f4, label %dec_label_pc_b5d8

dec_label_pc_b5d8:                                ; preds = %dec_label_pc_b46c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b5e0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b5e0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5e8 = load i32, i32* @r7, align 4
  store i32 %v0_b5e8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_b5f4 = call i32 @function_12480(i32 %v3_b5c8, i32 %v0_b5e8, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_b5f4, i32* %r0.global-to-local, align 4
  %v7_b5f8 = icmp eq i32 %v6_b5f4, -1
  store i1 %v7_b5f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b5f8, label %dec_label_pc_b9fc, label %dec_label_pc_b600

dec_label_pc_b600:                                ; preds = %dec_label_pc_b5d8
  %v0_b600 = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_b60c = urem i32 %v0_b600, 65536
  store i32 %v3_b60c, i32* %r2.global-to-local, align 4
  %v3_b610 = icmp ugt i32 %v3_b60c, 1459
  %v9_b610 = icmp eq i32 %v3_b60c, 1460
  store i1 %v9_b610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b610, label %bb, label %bb56

bb:                                               ; preds = %dec_label_pc_b600
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_b600, %bb
  %v0_b618 = phi i32 [ %v3_b60c, %dec_label_pc_b600 ], [ 1460, %bb ]
  store i32 %v7_b4d8, i32* %r1.global-to-local, align 4
  store i32 %v6_b534, i32* %r2.global-to-local, align 4
  store i32 %v1_b470, i32* %r3.global-to-local, align 4
  %v0_b628 = load i32, i32* %sb.global-to-local, align 4
  %v3_b62c = mul i32 %v7_b4d8, 65536
  store i32 %v3_b62c, i32* %r0.global-to-local, align 4
  %v3_b630 = mul i32 %v6_b534, 65536
  store i32 %v3_b630, i32* %sl.global-to-local, align 4
  %v3_b634 = urem i32 %v7_b4d8, 65536
  store i32 %v3_b634, i32* @r4, align 4
  %v3_b638 = urem i32 %v6_b534, 65536
  store i32 %v3_b638, i32* %sb.global-to-local, align 4
  %v3_b63c = urem i32 %v0_b628, 65536
  store i32 %v3_b63c, i32* %ip.global-to-local, align 4
  %v2_b640 = icmp eq i32 %v1_b470, 0
  store i1 %v2_b640, i1* %cpsr_z.global-to-local, align 1
  %v0_b644 = load i32, i32* @r7, align 4
  store i32 %v0_b644, i32* %stack_var_-40, align 4
  br i1 %v2_b640, label %.dec_label_pc_b7b4.preheader_crit_edge, label %dec_label_pc_b658

.dec_label_pc_b7b4.preheader_crit_edge:           ; preds = %bb56
  %.pre = add nuw nsw i32 %v0_b618, 8
  %.pre19 = add nuw nsw i32 %v0_b618, 28
  br label %dec_label_pc_b7b4.preheader

dec_label_pc_b658:                                ; preds = %bb56
  %v1_b65c = add nuw nsw i32 %v0_b618, 28
  %v1_b660 = add nuw nsw i32 %v0_b618, 8
  %v1_b664 = urem i32 %v6_b534, 256
  %tmp57 = udiv i32 %v7_b4d8, 256
  %v3_b670 = urem i32 %tmp57, 256
  %v3_b674 = mul i32 %v1_b660, 65536
  store i32 %v3_b674, i32* @lr, align 4
  %tmp58 = mul nuw nsw i32 %v1_b65c, 256
  %v1_b680 = urem i32 %v7_b4d8, 256
  %tmp59 = mul nuw nsw i32 %v1_b660, 256
  %v1_b68c = and i32 %tmp58, 65280
  store i32 %v1_b68c, i32* %r3.global-to-local, align 4
  %v4_b690 = mul nuw nsw i32 %v1_b680, 256
  %v5_b690 = or i32 %v4_b690, %v3_b670
  store i32 %v5_b690, i32* %r0.global-to-local, align 4
  %v3_b694 = mul nuw nsw i32 %v1_b664, 256
  store i32 %v3_b694, i32* %r1.global-to-local, align 4
  %tmp60 = udiv i32 %v0_b628, 256
  %v3_b698 = urem i32 %tmp60, 256
  %v1_b69c = and i32 %tmp59, 65280
  store i32 %v1_b69c, i32* %ip.global-to-local, align 4
  %v2_b6a0 = icmp eq i32 %v1_b51c, 0
  store i1 %v2_b6a0, i1* %cpsr_z.global-to-local, align 1
  %tmp61 = udiv i32 %v1_b65c, 256
  %v4_b6a4 = urem i32 %tmp61, 256
  %v5_b6a4 = or i32 %v4_b6a4, %v1_b68c
  store i32 %v5_b6a4, i32* %r2.global-to-local, align 4
  %v1_b6a8 = urem i32 %v0_b628, 256
  %v5_b6ac = trunc i32 %tmp61 to i8
  %v5_b6b0 = trunc i32 %tmp57 to i8
  %tmp62 = udiv i32 %v6_b534, 256
  %v4_b6b4 = urem i32 %tmp62, 256
  %v5_b6b4 = or i32 %v4_b6b4, %v3_b694
  store i32 %v5_b6b4, i32* @r5, align 4
  %v4_b6b8 = mul nuw nsw i32 %v1_b6a8, 256
  %v5_b6b8 = or i32 %v4_b6b8, %v3_b698
  store i32 %v5_b6b8, i32* @r6, align 4
  %tmp63 = udiv i32 %v1_b660, 256
  %v4_b6bc = urem i32 %tmp63, 256
  %v5_b6bc = or i32 %v4_b6bc, %v1_b69c
  store i32 %v5_b6bc, i32* %sb.global-to-local, align 4
  br i1 %v2_b6a0, label %dec_label_pc_b6c4, label %dec_label_pc_ba08

dec_label_pc_b6c4:                                ; preds = %dec_label_pc_b658
  %v3_b6c422 = udiv i32 %v1_b68c, 256
  store i32 %v3_b6c422, i32* %ip.global-to-local, align 4
  store i32 %v1_b680, i32* %r0.global-to-local, align 4
  store i32 %v1_b664, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v1_b6a8, i32* %sl.global-to-local, align 4
  %v3_b6e423 = udiv i32 %v1_b69c, 256
  store i32 %v3_b6e423, i32* @r7, align 4
  %sext10 = mul i32 %v1_b65c, 16777216
  %v4_b76c = sdiv i32 %sext10, 16777216
  %sext11 = mul i32 %v7_b4d8, 16777216
  %v4_b778 = sdiv i32 %sext11, 16777216
  %sext12 = mul i32 %v6_b534, 16777216
  %v4_b77c = sdiv i32 %sext12, 16777216
  %v4_b784 = sext i8 %v5_b6b0 to i32
  %v4_b760 = sext i8 %v5_b6ac to i32
  br label %dec_label_pc_b6e8

dec_label_pc_b6e8:                                ; preds = %dec_label_pc_b6e8, %dec_label_pc_b6c4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b6f4 = call i32 @function_12630(i32 1510, i32 1)
  store i32 %v2_b6f4, i32* %r0.global-to-local, align 4
  store i32 %v2_b49c, i32* %r3.global-to-local, align 4
  %v2_b700 = load i32, i32* @r4, align 4
  %v5_b700 = mul i32 %v2_b700, 4
  %v6_b700 = add i32 %v5_b700, %v2_b49c
  %v7_b700 = inttoptr i32 %v6_b700 to i32*
  store i32 %v2_b6f4, i32* %v7_b700, align 4
  %v3_b704 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b704, i32* %r2.global-to-local, align 4
  %v0_b708 = load i32, i32* %r3.global-to-local, align 4
  %v4_b708 = mul i32 %v3_b704, 4
  %v5_b708 = add i32 %v0_b708, %v4_b708
  %v6_b708 = inttoptr i32 %v5_b708 to i32*
  %v7_b708 = load i32, i32* %v6_b708, align 4
  store i32 %v7_b708, i32* %r1.global-to-local, align 4
  %v1_b70c = inttoptr i32 %v7_b708 to i8*
  %v2_b70c = load i8, i8* %v1_b70c, align 1
  %tmp = urem i8 %v2_b70c, 16
  %v1_b710 = zext i8 %tmp to i32
  %v1_b714 = or i32 %v1_b710, 64
  store i32 %v1_b714, i32* %r3.global-to-local, align 4
  %v1_b718 = trunc i32 %v1_b714 to i8
  store i8 %v1_b718, i8* %v1_b70c, align 1
  %v0_b71c = load i32, i32* %r1.global-to-local, align 4
  %v1_b71c = inttoptr i32 %v0_b71c to i8*
  %v2_b71c = load i8, i8* %v1_b71c, align 1
  %v3_b71c = zext i8 %v2_b71c to i32
  %v1_b720 = and i32 %v3_b71c, 240
  %v1_b724 = or i32 %v1_b720, 5
  store i32 %v1_b724, i32* %r2.global-to-local, align 4
  %v3_b72c = add i32 %v0_b71c, 9
  %v4_b72c = inttoptr i32 %v3_b72c to i8*
  store i8 17, i8* %v4_b72c, align 1
  %v0_b730 = load i32, i32* %r2.global-to-local, align 4
  %v1_b730 = trunc i32 %v0_b730 to i8
  %v2_b730 = load i32, i32* %r1.global-to-local, align 4
  %v3_b730 = inttoptr i32 %v2_b730 to i8*
  store i8 %v1_b730, i8* %v3_b730, align 1
  %v2_b738 = load i32, i32* %r1.global-to-local, align 4
  %v3_b738 = add i32 %v2_b738, 1
  %v4_b738 = inttoptr i32 %v3_b738 to i8*
  store i8 %v5_b4d4, i8* %v4_b738, align 1
  store i32 %v6_b4f0, i32* %ip.global-to-local, align 4
  %v2_b740 = load i32, i32* %r1.global-to-local, align 4
  %v3_b740 = add i32 %v2_b740, 8
  %v4_b740 = inttoptr i32 %v3_b740 to i8*
  store i8 %v5_b50c, i8* %v4_b740, align 1
  %v3_b744 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b744, i32* %r2.global-to-local, align 4
  %v3_b748 = mul i32 %v3_b744, 32
  store i32 %v3_b748, i32* %r3.global-to-local, align 4
  %v0_b74c = load i32, i32* @fp, align 4
  %v1_b74c = load i32, i32* %r1.global-to-local, align 4
  %v2_b74c = add i32 %v1_b74c, 12
  %v3_b74c = inttoptr i32 %v2_b74c to i32*
  store i32 %v0_b74c, i32* %v3_b74c, align 4
  %v0_b750 = load i32, i32* %r3.global-to-local, align 4
  %v1_b750 = load i32, i32* %r2.global-to-local, align 4
  %tmp66 = mul i32 %v1_b750, -8
  %v5_b750 = add i32 %v0_b750, %tmp66
  %v1_b754 = load i32, i32* @r8, align 4
  %v2_b754 = add i32 %v5_b750, %v1_b754
  store i32 %v2_b754, i32* %r3.global-to-local, align 4
  %v1_b758 = add i32 %v2_b754, 16
  %v2_b758 = inttoptr i32 %v1_b758 to i32*
  %v3_b758 = load i32, i32* %v2_b758, align 4
  %v1_b75c = add i32 %v1_b750, 1
  store i32 %v1_b75c, i32* @r4, align 4
  store i32 %v4_b760, i32* %ip.global-to-local, align 4
  store i32 %v1_b470, i32* %r2.global-to-local, align 4
  %v1_b768 = load i32, i32* %r1.global-to-local, align 4
  %v2_b768 = add i32 %v1_b768, 16
  %v3_b768 = inttoptr i32 %v2_b768 to i32*
  store i32 %v3_b758, i32* %v3_b768, align 4
  store i32 %v4_b76c, i32* %r0.global-to-local, align 4
  %v0_b770 = load i32, i32* %ip.global-to-local, align 4
  %v1_b770 = trunc i32 %v0_b770 to i8
  %v2_b770 = load i32, i32* %r1.global-to-local, align 4
  %v3_b770 = add i32 %v2_b770, 2
  %v4_b770 = inttoptr i32 %v3_b770 to i8*
  store i8 %v1_b770, i8* %v4_b770, align 1
  %v0_b774 = load i32, i32* %r0.global-to-local, align 4
  %v1_b774 = trunc i32 %v0_b774 to i8
  %v2_b774 = load i32, i32* %r1.global-to-local, align 4
  %v3_b774 = add i32 %v2_b774, 3
  %v4_b774 = inttoptr i32 %v3_b774 to i8*
  store i8 %v1_b774, i8* %v4_b774, align 1
  store i32 %v4_b778, i32* %ip.global-to-local, align 4
  store i32 %v4_b77c, i32* %r0.global-to-local, align 4
  %v0_b780 = load i32, i32* @r4, align 4
  %v1_b780 = load i32, i32* %r2.global-to-local, align 4
  %v9_b780 = icmp eq i32 %v0_b780, %v1_b780
  store i1 %v9_b780, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b784, i32* %r2.global-to-local, align 4
  %v0_b788 = load i32, i32* %r1.global-to-local, align 4
  %v1_b788 = add i32 %v0_b788, 20
  store i32 %v1_b788, i32* %r3.global-to-local, align 4
  %v3_b78c = add i32 %v0_b788, 4
  %v4_b78c = inttoptr i32 %v3_b78c to i8*
  store i8 %v5_b6b0, i8* %v4_b78c, align 1
  %v0_b790 = load i32, i32* %ip.global-to-local, align 4
  %v1_b790 = trunc i32 %v0_b790 to i8
  %v2_b790 = load i32, i32* %r1.global-to-local, align 4
  %v3_b790 = add i32 %v2_b790, 5
  %v4_b790 = inttoptr i32 %v3_b790 to i8*
  store i8 %v1_b790, i8* %v4_b790, align 1
  %v0_b794 = load i32, i32* @r5, align 4
  %v1_b794 = trunc i32 %v0_b794 to i8
  %v2_b794 = load i32, i32* %r1.global-to-local, align 4
  %v3_b794 = add i32 %v2_b794, 20
  %v4_b794 = inttoptr i32 %v3_b794 to i8*
  store i8 %v1_b794, i8* %v4_b794, align 1
  %v0_b798 = load i32, i32* @r7, align 4
  %v1_b798 = trunc i32 %v0_b798 to i8
  %v2_b798 = load i32, i32* %r3.global-to-local, align 4
  %v3_b798 = add i32 %v2_b798, 5
  %v4_b798 = inttoptr i32 %v3_b798 to i8*
  store i8 %v1_b798, i8* %v4_b798, align 1
  %v0_b79c = load i32, i32* %r0.global-to-local, align 4
  %v1_b79c = trunc i32 %v0_b79c to i8
  %v2_b79c = load i32, i32* %r3.global-to-local, align 4
  %v3_b79c = add i32 %v2_b79c, 1
  %v4_b79c = inttoptr i32 %v3_b79c to i8*
  store i8 %v1_b79c, i8* %v4_b79c, align 1
  %v0_b7a0 = load i32, i32* @r6, align 4
  %v1_b7a0 = trunc i32 %v0_b7a0 to i8
  %v2_b7a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_b7a0 = add i32 %v2_b7a0, 2
  %v4_b7a0 = inttoptr i32 %v3_b7a0 to i8*
  store i8 %v1_b7a0, i8* %v4_b7a0, align 1
  %v0_b7a4 = load i32, i32* %sl.global-to-local, align 4
  %v1_b7a4 = trunc i32 %v0_b7a4 to i8
  %v2_b7a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b7a4 = add i32 %v2_b7a4, 3
  %v4_b7a4 = inttoptr i32 %v3_b7a4 to i8*
  store i8 %v1_b7a4, i8* %v4_b7a4, align 1
  %v0_b7a8 = load i32, i32* %sb.global-to-local, align 4
  %v1_b7a8 = trunc i32 %v0_b7a8 to i8
  %v2_b7a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b7a8 = add i32 %v2_b7a8, 4
  %v4_b7a8 = inttoptr i32 %v3_b7a8 to i8*
  store i8 %v1_b7a8, i8* %v4_b7a8, align 1
  %v0_b7ac = load i32, i32* @r4, align 4
  store i32 %v0_b7ac, i32* %stack_var_-40, align 4
  %v5_b7b0 = icmp slt i32 %v0_b780, %v1_b780
  br i1 %v5_b7b0, label %dec_label_pc_b6e8, label %dec_label_pc_b7b4.preheader

dec_label_pc_b7b4.preheader:                      ; preds = %dec_label_pc_ba34, %dec_label_pc_b6e8, %.dec_label_pc_b7b4.preheader_crit_edge
  %v1_b7d8.pre-phi = phi i32 [ %.pre19, %.dec_label_pc_b7b4.preheader_crit_edge ], [ %v1_b65c, %dec_label_pc_b6e8 ], [ %v1_b65c, %dec_label_pc_ba34 ]
  %v1_b7d4.pre-phi = phi i32 [ %.pre, %.dec_label_pc_b7b4.preheader_crit_edge ], [ %v1_b660, %dec_label_pc_b6e8 ], [ %v1_b660, %dec_label_pc_ba34 ]
  %v3_b964 = icmp eq i32 %v3_b634, 65535
  %v2_b818 = icmp eq i32 %v1_b590, 0
  br label %dec_label_pc_b7b4

dec_label_pc_b7b4:                                ; preds = %dec_label_pc_b7b4.preheader, %dec_label_pc_b9e0
  store i32 %v1_b470, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_b640, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_b640, label %dec_label_pc_b9e0, label %dec_label_pc_b7c8

dec_label_pc_b7c8:                                ; preds = %dec_label_pc_b7b4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_b618, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v1_b7d4.pre-phi, i32* @sb, align 4
  store i32 %v1_b7d8.pre-phi, i32* @sl, align 4
  br label %dec_label_pc_b8cc

dec_label_pc_b7e0:                                ; preds = %dec_label_pc_b8cc
  %v0_b7e0 = load i32, i32* @fp, align 4
  %v7_b7e0 = icmp eq i32 %v0_b7e0, -1
  store i1 %v7_b7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b7e0, label %dec_label_pc_b954, label %dec_label_pc_b7e8

dec_label_pc_b7e8:                                ; preds = %dec_label_pc_b8f0, %dec_label_pc_b7e0
  store i32 %v3_b634, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_b964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b964, label %dec_label_pc_b970, label %dec_label_pc_b7fc

dec_label_pc_b7fc:                                ; preds = %dec_label_pc_b954.dec_label_pc_b7fc_crit_edge, %dec_label_pc_b7e8
  %v1_b800 = phi i32 [ %v1_b800.pre, %dec_label_pc_b954.dec_label_pc_b7fc_crit_edge ], [ 65535, %dec_label_pc_b7e8 ]
  store i32 %v3_b638, i32* %r0.global-to-local, align 4
  %v9_b800 = icmp eq i32 %v3_b638, %v1_b800
  store i1 %v9_b800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b800, label %dec_label_pc_b98c, label %dec_label_pc_b808

dec_label_pc_b808:                                ; preds = %dec_label_pc_b970.dec_label_pc_b808_crit_edge, %dec_label_pc_b7fc
  %v1_b80c = phi i32 [ %v1_b80c.pre, %dec_label_pc_b970.dec_label_pc_b808_crit_edge ], [ %v1_b800, %dec_label_pc_b7fc ]
  store i32 %v3_b63c, i32* %r1.global-to-local, align 4
  %v9_b80c = icmp eq i32 %v3_b63c, %v1_b80c
  store i1 %v9_b80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b80c, label %dec_label_pc_b9a8, label %dec_label_pc_b814

dec_label_pc_b814:                                ; preds = %dec_label_pc_b98c, %dec_label_pc_b808
  store i32 %v1_b590, i32* %r2.global-to-local, align 4
  store i1 %v2_b818, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b818, label %dec_label_pc_b820, label %dec_label_pc_b9c4

dec_label_pc_b820:                                ; preds = %dec_label_pc_b814, %dec_label_pc_b9a8, %dec_label_pc_b9c4
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b824 = load i32, i32* @r7, align 4
  %v1_b824 = trunc i32 %v0_b824 to i8
  %v2_b824 = load i32, i32* @r5, align 4
  %v3_b824 = add i32 %v2_b824, 10
  %v4_b824 = inttoptr i32 %v3_b824 to i8*
  store i8 %v1_b824, i8* %v4_b824, align 1
  %v0_b828 = load i32, i32* @r7, align 4
  %v1_b828 = trunc i32 %v0_b828 to i8
  %v2_b828 = load i32, i32* @r5, align 4
  %v3_b828 = add i32 %v2_b828, 11
  %v4_b828 = inttoptr i32 %v3_b828 to i8*
  store i8 %v1_b828, i8* %v4_b828, align 1
  %v0_b82c = load i32, i32* @r5, align 4
  store i32 %v0_b82c, i32* @r0, align 4
  %v2_b830 = call i32 @function_c7e0(i32 %v0_b82c, i32 20)
  %v3_b830 = trunc i32 %v2_b830 to i8
  store i32 %v2_b830, i32* %r0.global-to-local, align 4
  %v4_b834 = sdiv i32 %v2_b830, 256
  store i32 %v4_b834, i32* %r3.global-to-local, align 4
  %v1_b838 = trunc i32 %v4_b834 to i8
  %v2_b838 = load i32, i32* @r5, align 4
  %v3_b838 = add i32 %v2_b838, 11
  %v4_b838 = inttoptr i32 %v3_b838 to i8*
  store i8 %v1_b838, i8* %v4_b838, align 1
  %v3_b83c = load i32, i32* @r5, align 4
  %v4_b83c = add i32 %v3_b83c, 10
  %v5_b83c = inttoptr i32 %v4_b83c to i8*
  store i8 %v3_b830, i8* %v5_b83c, align 1
  %v0_b840 = load i32, i32* @r7, align 4
  %v1_b840 = trunc i32 %v0_b840 to i8
  %v2_b840 = load i32, i32* @r6, align 4
  %v3_b840 = add i32 %v2_b840, 6
  %v4_b840 = inttoptr i32 %v3_b840 to i8*
  store i8 %v1_b840, i8* %v4_b840, align 1
  %v0_b844 = load i32, i32* @r7, align 4
  %v1_b844 = trunc i32 %v0_b844 to i8
  %v2_b844 = load i32, i32* @r6, align 4
  %v3_b844 = add i32 %v2_b844, 7
  %v4_b844 = inttoptr i32 %v3_b844 to i8*
  store i8 %v1_b844, i8* %v4_b844, align 1
  %v0_b848 = load i32, i32* @r5, align 4
  %v1_b848 = add i32 %v0_b848, 24
  %v2_b848 = inttoptr i32 %v1_b848 to i8*
  %v3_b848 = load i8, i8* %v2_b848, align 1
  %v4_b848 = zext i8 %v3_b848 to i32
  store i32 %v4_b848, i32* %r3.global-to-local, align 4
  %v1_b84c = add i32 %v0_b848, 25
  %v2_b84c = inttoptr i32 %v1_b84c to i8*
  %v3_b84c = load i8, i8* %v2_b84c, align 1
  %v4_b84c = zext i8 %v3_b84c to i32
  %v0_b850 = load i32, i32* @r6, align 4
  store i32 %v0_b850, i32* @r1, align 4
  %v4_b854 = mul nuw nsw i32 %v4_b84c, 256
  %v5_b854 = or i32 %v4_b854, %v4_b848
  store i32 %v5_b854, i32* %r2.global-to-local, align 4
  store i32 %v0_b848, i32* %r0.global-to-local, align 4
  %v0_b85c = load i32, i32* @sb, align 4
  store i32 %v0_b85c, i32* %r3.global-to-local, align 4
  %v4_b860 = call i32 @function_c83c(i32 %v0_b848, i32 %v0_b850, i32 %v5_b854, i32 %v0_b85c)
  %v5_b860 = trunc i32 %v4_b860 to i8
  store i32 %v4_b860, i32* %r0.global-to-local, align 4
  %v4_b86424 = udiv i32 %v4_b860, 256
  %v1_b868 = trunc i32 %v4_b86424 to i8
  %v2_b868 = load i32, i32* @r6, align 4
  %v3_b868 = add i32 %v2_b868, 7
  %v4_b868 = inttoptr i32 %v3_b868 to i8*
  store i8 %v1_b868, i8* %v4_b868, align 1
  %v3_b86c = load i32, i32* @r6, align 4
  %v4_b86c = add i32 %v3_b86c, 6
  %v5_b86c = inttoptr i32 %v4_b86c to i8*
  store i8 %v5_b860, i8* %v5_b86c, align 1
  %v3_b870 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b870, i32* %r3.global-to-local, align 4
  %v0_b874 = load i32, i32* @r5, align 4
  %v1_b874 = add i32 %v0_b874, 20
  %v2_b874 = inttoptr i32 %v1_b874 to i32*
  %v3_b874 = load i32, i32* %v2_b874, align 4
  %v3_b87c = udiv i32 %v3_b874, 65536
  store i32 %v3_b87c, i32* %r2.global-to-local, align 4
  %v5_b880 = mul i32 %v3_b870, 24
  %v1_b884 = load i32, i32* @r8, align 4
  %v2_b884 = add i32 %v1_b884, %v5_b880
  store i32 %v2_b884, i32* %ip.global-to-local, align 4
  %v3_b88821 = udiv i32 %v3_b874, 16777216
  %v1_b88c = trunc i32 %v3_b88821 to i8
  %v3_b88c = add i32 %v2_b884, 3
  %v4_b88c = inttoptr i32 %v3_b88c to i8*
  store i8 %v1_b88c, i8* %v4_b88c, align 1
  %v0_b890 = load i32, i32* %r2.global-to-local, align 4
  %v1_b890 = trunc i32 %v0_b890 to i8
  %v2_b890 = load i32, i32* %ip.global-to-local, align 4
  %v3_b890 = add i32 %v2_b890, 2
  %v4_b890 = inttoptr i32 %v3_b890 to i8*
  store i8 %v1_b890, i8* %v4_b890, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_b89c = load i32, i32* @r5, align 4
  store i32 %v0_b89c, i32* %r1.global-to-local, align 4
  store i32 %v3_b5c8, i32* %r0.global-to-local, align 4
  %v0_b8a4 = load i32, i32* @sl, align 4
  store i32 %v0_b8a4, i32* %r2.global-to-local, align 4
  %v0_b8ac = load i32, i32* %ip.global-to-local, align 4
  %v6_b8b0 = inttoptr i32 %v0_b89c to i32*
  %v7_b8b0 = call i32 @function_1244c(i32 %v3_b5c8, i32* %v6_b8b0, i32 %v0_b8a4, i32 16384, i32 %v0_b8ac, i32 16)
  %v3_b8b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b8b4, i32* %r3.global-to-local, align 4
  store i32 %v1_b470, i32* @r4, align 4
  %v1_b8bc = add i32 %v3_b8b4, 1
  store i32 %v1_b8bc, i32* %r0.global-to-local, align 4
  %v9_b8c0 = icmp eq i32 %v1_b8bc, %v1_b470
  store i1 %v9_b8c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b8bc, i32* %stack_var_-40, align 4
  %v6_b8c8 = icmp slt i32 %v1_b8bc, %v1_b470
  br i1 %v6_b8c8, label %dec_label_pc_b8cc, label %dec_label_pc_b9e0

dec_label_pc_b8cc:                                ; preds = %dec_label_pc_b820, %dec_label_pc_b7c8
  %v1_b8e0 = phi i32 [ %v1_b8bc, %dec_label_pc_b820 ], [ 0, %dec_label_pc_b7c8 ]
  %v5_b8d0 = mul i32 %v1_b8e0, 24
  %v1_b8d4 = load i32, i32* @r8, align 4
  %v2_b8d4 = add i32 %v1_b8d4, %v5_b8d0
  store i32 %v2_b8d4, i32* %r3.global-to-local, align 4
  %v1_b8dc = add i32 %v2_b8d4, 20
  %v2_b8dc = inttoptr i32 %v1_b8dc to i8*
  %v3_b8dc = load i8, i8* %v2_b8dc, align 1
  %v4_b8dc = zext i8 %v3_b8dc to i32
  store i32 %v4_b8dc, i32* %r2.global-to-local, align 4
  %v4_b8e0 = mul i32 %v1_b8e0, 4
  %v5_b8e0 = add i32 %v4_b8e0, %v2_b49c
  %v6_b8e0 = inttoptr i32 %v5_b8e0 to i32*
  %v7_b8e0 = load i32, i32* %v6_b8e0, align 4
  store i32 %v7_b8e0, i32* @r5, align 4
  %v2_b8e4 = icmp ugt i8 %v3_b8dc, 30
  %v7_b8e4 = icmp eq i8 %v3_b8dc, 31
  store i1 %v7_b8e4, i1* %cpsr_z.global-to-local, align 1
  %v1_b8e8 = add i32 %v7_b8e0, 20
  store i32 %v1_b8e8, i32* @r6, align 4
  %v2_b8ec = xor i1 %v7_b8e4, true
  %v3_b8ec = and i1 %v2_b8e4, %v2_b8ec
  br i1 %v3_b8ec, label %dec_label_pc_b7e0, label %dec_label_pc_b8f0

dec_label_pc_b8f0:                                ; preds = %dec_label_pc_b8cc
  %v1_b8f0 = add i32 %v2_b8d4, 16
  %v2_b8f0 = inttoptr i32 %v1_b8f0 to i32*
  %v3_b8f0 = load i32, i32* %v2_b8f0, align 4
  %v0_b8f4 = call i32 @function_db88()
  store i32 %v0_b8f4, i32* %r0.global-to-local, align 4
  %v3_b8f8 = load i32, i32* %stack_var_-40, align 4
  %v5_b900 = mul i32 %v3_b8f8, 24
  %v1_b908 = load i32, i32* @r8, align 4
  %v2_b908 = add i32 %v1_b908, %v5_b900
  store i32 %v2_b908, i32* %r1.global-to-local, align 4
  %v1_b90c = and i32 %v3_b8f0, 65280
  store i32 %v1_b90c, i32* %r3.global-to-local, align 4
  %v1_b904 = udiv i32 %v3_b8f0, 256
  %v3_b910 = and i32 %v1_b904, 65280
  store i32 %v3_b910, i32* %r2.global-to-local, align 4
  %v3_b914 = mul i32 %v3_b8f0, 16777216
  store i32 %v3_b914, i32* %ip.global-to-local, align 4
  %v1_b918 = add i32 %v2_b908, 20
  %v2_b918 = inttoptr i32 %v1_b918 to i8*
  %v3_b918 = load i8, i8* %v2_b918, align 1
  %v4_b918 = zext i8 %v3_b918 to i32
  store i32 %v4_b918, i32* @lr, align 4
  %v4_b91c = mul nuw nsw i32 %v1_b90c, 256
  %v5_b91c = or i32 %v4_b91c, %v3_b914
  store i32 %v5_b91c, i32* %ip.global-to-local, align 4
  %v2_b924 = call i32 @llvm.bswap.i32(i32 %v3_b8f0)
  %v7_b928 = lshr i32 %v0_b8f4, %v4_b918
  %v8_b928 = add i32 %v7_b928, %v2_b924
  store i32 %v8_b928, i32* %r2.global-to-local, align 4
  %v3_b934 = mul i32 %v8_b928, 16777216
  %v1_b938 = and i32 %v8_b928, 65280
  store i32 %v1_b938, i32* %r0.global-to-local, align 4
  %v4_b93c = mul nuw nsw i32 %v1_b938, 256
  %v5_b93c = or i32 %v4_b93c, %v3_b934
  store i32 %v5_b93c, i32* %r1.global-to-local, align 4
  %v2_b944 = call i32 @llvm.bswap.i32(i32 %v8_b928)
  store i32 %v2_b944, i32* %r3.global-to-local, align 4
  %v0_b948 = load i32, i32* @fp, align 4
  %v3_b948 = icmp eq i32 %v0_b948, -1
  %v8_b948 = icmp eq i32 %v0_b948, -1
  store i1 %v8_b948, i1* %cpsr_z.global-to-local, align 1
  %v1_b94c = load i32, i32* @r5, align 4
  %v2_b94c = add i32 %v1_b94c, 16
  %v3_b94c = inttoptr i32 %v2_b94c to i32*
  store i32 %v2_b944, i32* %v3_b94c, align 4
  br i1 %v3_b948, label %dec_label_pc_b954, label %dec_label_pc_b7e8

dec_label_pc_b954:                                ; preds = %dec_label_pc_b8f0, %dec_label_pc_b7e0
  %v0_b954 = call i32 @function_db88()
  store i32 %v0_b954, i32* %r0.global-to-local, align 4
  store i32 %v3_b634, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_b964, i1* %cpsr_z.global-to-local, align 1
  %v1_b968 = load i32, i32* @r5, align 4
  %v2_b968 = add i32 %v1_b968, 12
  %v3_b968 = inttoptr i32 %v2_b968 to i32*
  store i32 %v0_b954, i32* %v3_b968, align 4
  br i1 %v3_b964, label %dec_label_pc_b970, label %dec_label_pc_b954.dec_label_pc_b7fc_crit_edge

dec_label_pc_b954.dec_label_pc_b7fc_crit_edge:    ; preds = %dec_label_pc_b954
  %v1_b800.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b7fc

dec_label_pc_b970:                                ; preds = %dec_label_pc_b954, %dec_label_pc_b7e8
  %v0_b970 = call i32 @function_db88()
  %v1_b970 = trunc i32 %v0_b970 to i8
  %v4_b974 = sdiv i32 %v0_b970, 256
  store i32 %v4_b974, i32* %r3.global-to-local, align 4
  %v3_b978 = load i32, i32* @r5, align 4
  %v4_b978 = add i32 %v3_b978, 4
  %v5_b978 = inttoptr i32 %v4_b978 to i8*
  store i8 %v1_b970, i8* %v5_b978, align 1
  store i32 %v3_b638, i32* %r0.global-to-local, align 4
  %v1_b980 = load i32, i32* @r4, align 4
  %v9_b980 = icmp eq i32 %v3_b638, %v1_b980
  store i1 %v9_b980, i1* %cpsr_z.global-to-local, align 1
  %v0_b984 = load i32, i32* %r3.global-to-local, align 4
  %v1_b984 = trunc i32 %v0_b984 to i8
  %v2_b984 = load i32, i32* @r5, align 4
  %v3_b984 = add i32 %v2_b984, 5
  %v4_b984 = inttoptr i32 %v3_b984 to i8*
  store i8 %v1_b984, i8* %v4_b984, align 1
  %v0_b988 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b988, label %dec_label_pc_b98c, label %dec_label_pc_b970.dec_label_pc_b808_crit_edge

dec_label_pc_b970.dec_label_pc_b808_crit_edge:    ; preds = %dec_label_pc_b970
  %v1_b80c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b808

dec_label_pc_b98c:                                ; preds = %dec_label_pc_b970, %dec_label_pc_b7fc
  %v0_b98c = call i32 @function_db88()
  %v1_b98c = trunc i32 %v0_b98c to i8
  store i32 %v0_b98c, i32* %r0.global-to-local, align 4
  store i32 %v3_b63c, i32* %r1.global-to-local, align 4
  %v4_b994 = sdiv i32 %v0_b98c, 256
  store i32 %v4_b994, i32* %r3.global-to-local, align 4
  %v1_b998 = load i32, i32* @r4, align 4
  %v9_b998 = icmp eq i32 %v3_b63c, %v1_b998
  store i1 %v9_b998, i1* %cpsr_z.global-to-local, align 1
  %v3_b99c = load i32, i32* @r5, align 4
  %v4_b99c = add i32 %v3_b99c, 20
  %v5_b99c = inttoptr i32 %v4_b99c to i8*
  store i8 %v1_b98c, i8* %v5_b99c, align 1
  %v0_b9a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9a0 = trunc i32 %v0_b9a0 to i8
  %v2_b9a0 = load i32, i32* @r6, align 4
  %v3_b9a0 = add i32 %v2_b9a0, 1
  %v4_b9a0 = inttoptr i32 %v3_b9a0 to i8*
  store i8 %v1_b9a0, i8* %v4_b9a0, align 1
  %v0_b9a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9a4, label %dec_label_pc_b9a8, label %dec_label_pc_b814

dec_label_pc_b9a8:                                ; preds = %dec_label_pc_b98c, %dec_label_pc_b808
  %v0_b9a8 = call i32 @function_db88()
  %v1_b9a8 = trunc i32 %v0_b9a8 to i8
  store i32 %v0_b9a8, i32* %r0.global-to-local, align 4
  store i32 %v1_b590, i32* %r2.global-to-local, align 4
  %v4_b9b0 = sdiv i32 %v0_b9a8, 256
  store i32 %v4_b9b0, i32* %r3.global-to-local, align 4
  store i1 %v2_b818, i1* %cpsr_z.global-to-local, align 1
  %v1_b9b8 = trunc i32 %v4_b9b0 to i8
  %v2_b9b8 = load i32, i32* @r6, align 4
  %v3_b9b8 = add i32 %v2_b9b8, 3
  %v4_b9b8 = inttoptr i32 %v3_b9b8 to i8*
  store i8 %v1_b9b8, i8* %v4_b9b8, align 1
  %v3_b9bc = load i32, i32* @r6, align 4
  %v4_b9bc = add i32 %v3_b9bc, 2
  %v5_b9bc = inttoptr i32 %v4_b9bc to i8*
  store i8 %v1_b9a8, i8* %v5_b9bc, align 1
  %v0_b9c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9c0, label %dec_label_pc_b820, label %dec_label_pc_b9c4

dec_label_pc_b9c4:                                ; preds = %dec_label_pc_b814, %dec_label_pc_b9a8
  %v0_b9c4 = load i32, i32* @r5, align 4
  %v1_b9c4 = add i32 %v0_b9c4, 28
  store i32 %v1_b9c4, i32* @r4, align 4
  store i32 %v1_b9c4, i32* %r0.global-to-local, align 4
  store i32 %v0_b618, i32* %r1.global-to-local, align 4
  %v2_b9d0 = call i32 @function_dc3c(i32 %v1_b9c4, i32 %v0_b618)
  store i32 %v2_b9d0, i32* %r0.global-to-local, align 4
  store i32 %v0_b618, i32* %r3.global-to-local, align 4
  %v0_b9d8 = load i32, i32* @r7, align 4
  %v1_b9d8 = trunc i32 %v0_b9d8 to i8
  %v2_b9d8 = load i32, i32* @r4, align 4
  %v4_b9d8 = add i32 %v2_b9d8, %v0_b618
  %v5_b9d8 = inttoptr i32 %v4_b9d8 to i8*
  store i8 %v1_b9d8, i8* %v5_b9d8, align 1
  br label %dec_label_pc_b820

dec_label_pc_b9e0:                                ; preds = %dec_label_pc_b820, %dec_label_pc_b7b4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b9e4 = call i32 @function_11eb8(i32* null)
  store i32 %v2_b9e4, i32* %r0.global-to-local, align 4
  store i32 %v2_b5b4, i32* %sb.global-to-local, align 4
  %v9_b9ec = icmp eq i32 %v2_b5b4, %v2_b9e4
  store i1 %v9_b9ec, i1* %cpsr_z.global-to-local, align 1
  %v6_b9f0 = icmp slt i32 %v2_b5b4, %v2_b9e4
  br i1 %v6_b9f0, label %dec_label_pc_b9f4, label %dec_label_pc_b7b4

dec_label_pc_b9f4:                                ; preds = %dec_label_pc_b9e0, %dec_label_pc_b46c, %dec_label_pc_b9fc
  %v29_b9f8 = phi i32 [ %v3_b5c8, %dec_label_pc_b46c ], [ %v1_ba00, %dec_label_pc_b9fc ], [ %v2_b9e4, %dec_label_pc_b9e0 ]
  store i32 %v18_b46c, i32* %sb.global-to-local, align 4
  store i32 %v21_b46c, i32* %sl.global-to-local, align 4
  ret i32 %v29_b9f8

dec_label_pc_b9fc:                                ; preds = %dec_label_pc_b5d8
  store i32 %v3_b5c8, i32* %r0.global-to-local, align 4
  %v1_ba00 = call i32 @function_11c68(i32 %v3_b5c8)
  store i32 %v1_ba00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b9f4

dec_label_pc_ba08:                                ; preds = %dec_label_pc_b658
  %v3_ba0c = sext i8 %v5_b6ac to i32
  %v7_ba0c = sext i8 %v5_b6b0 to i32
  %v3_ba10 = sdiv i32 %v3_ba0c, 256
  store i32 %v3_ba10, i32* %r1.global-to-local, align 4
  %v3_ba14 = sdiv i32 %v7_ba0c, 256
  store i32 %v3_ba14, i32* %r2.global-to-local, align 4
  store i32 %v1_b664, i32* %r3.global-to-local, align 4
  store i32 %v0_b644, i32* @r4, align 4
  store i32 %v1_b6a8, i32* %sl.global-to-local, align 4
  %v3_ba3020 = udiv i32 %v1_b69c, 256
  store i32 %v3_ba3020, i32* @r7, align 4
  %sext9 = mul i32 %v6_b534, 16777216
  %v4_baec = sdiv i32 %sext9, 16777216
  %v1_badc = trunc i32 %v3_ba10 to i8
  br label %dec_label_pc_ba34

dec_label_pc_ba34:                                ; preds = %dec_label_pc_ba34, %dec_label_pc_ba08
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ba40 = call i32 @function_12630(i32 1510, i32 1)
  store i32 %v2_ba40, i32* %r0.global-to-local, align 4
  store i32 %v2_b49c, i32* %ip.global-to-local, align 4
  %v3_ba48 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ba48, i32* %r2.global-to-local, align 4
  %v2_ba4c = load i32, i32* @r4, align 4
  %v5_ba4c = mul i32 %v2_ba4c, 4
  %v6_ba4c = add i32 %v5_ba4c, %v2_b49c
  %v7_ba4c = inttoptr i32 %v6_ba4c to i32*
  store i32 %v2_ba40, i32* %v7_ba4c, align 4
  %v0_ba50 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba50 = load i32, i32* %r2.global-to-local, align 4
  %v4_ba50 = mul i32 %v1_ba50, 4
  %v5_ba50 = add i32 %v4_ba50, %v0_ba50
  %v6_ba50 = inttoptr i32 %v5_ba50 to i32*
  %v7_ba50 = load i32, i32* %v6_ba50, align 4
  store i32 %v7_ba50, i32* %r1.global-to-local, align 4
  %v1_ba54 = inttoptr i32 %v7_ba50 to i8*
  %v2_ba54 = load i8, i8* %v1_ba54, align 1
  %tmp67 = urem i8 %v2_ba54, 16
  %v1_ba58 = zext i8 %tmp67 to i32
  %v1_ba5c = or i32 %v1_ba58, 64
  store i32 %v1_ba5c, i32* %r3.global-to-local, align 4
  %v1_ba60 = trunc i32 %v1_ba5c to i8
  store i8 %v1_ba60, i8* %v1_ba54, align 1
  %v0_ba64 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba64 = inttoptr i32 %v0_ba64 to i8*
  %v2_ba64 = load i8, i8* %v1_ba64, align 1
  %v3_ba64 = zext i8 %v2_ba64 to i32
  %v1_ba68 = and i32 %v3_ba64, 240
  %v1_ba6c = or i32 %v1_ba68, 5
  store i32 %v1_ba6c, i32* %r2.global-to-local, align 4
  %v3_ba74 = add i32 %v0_ba64, 9
  %v4_ba74 = inttoptr i32 %v3_ba74 to i8*
  store i8 17, i8* %v4_ba74, align 1
  %v0_ba78 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba78 = trunc i32 %v0_ba78 to i8
  %v2_ba78 = load i32, i32* %r1.global-to-local, align 4
  %v3_ba78 = inttoptr i32 %v2_ba78 to i8*
  store i8 %v1_ba78, i8* %v3_ba78, align 1
  store i32 %v6_b4b4, i32* %r0.global-to-local, align 4
  %v2_ba80 = load i32, i32* %r1.global-to-local, align 4
  %v3_ba80 = add i32 %v2_ba80, 1
  %v4_ba80 = inttoptr i32 %v3_ba80 to i8*
  store i8 %v5_b4d4, i8* %v4_ba80, align 1
  %v2_ba88 = load i32, i32* %r1.global-to-local, align 4
  %v3_ba88 = add i32 %v2_ba88, 8
  %v4_ba88 = inttoptr i32 %v3_ba88 to i8*
  store i8 %v5_b50c, i8* %v4_ba88, align 1
  %v3_ba8c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ba8c, i32* %r2.global-to-local, align 4
  %v3_ba90 = mul i32 %v3_ba8c, 32
  store i32 %v3_ba90, i32* %r3.global-to-local, align 4
  %v0_ba94 = load i32, i32* @fp, align 4
  %v1_ba94 = load i32, i32* %r1.global-to-local, align 4
  %v2_ba94 = add i32 %v1_ba94, 12
  %v3_ba94 = inttoptr i32 %v2_ba94 to i32*
  store i32 %v0_ba94, i32* %v3_ba94, align 4
  %v0_ba98 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba98 = load i32, i32* %r2.global-to-local, align 4
  %tmp68 = mul i32 %v1_ba98, -8
  %v5_ba98 = add i32 %v0_ba98, %tmp68
  %v1_ba9c = load i32, i32* @r8, align 4
  %v2_ba9c = add i32 %v5_ba98, %v1_ba9c
  store i32 %v2_ba9c, i32* %r3.global-to-local, align 4
  %v1_baa0 = add i32 %v2_ba9c, 16
  %v2_baa0 = inttoptr i32 %v1_baa0 to i32*
  %v3_baa0 = load i32, i32* %v2_baa0, align 4
  store i32 %v1_b470, i32* %r3.global-to-local, align 4
  %v1_baa8 = add i32 %v1_ba98, 1
  store i32 %v1_baa8, i32* @r4, align 4
  %v1_baac = load i32, i32* %r1.global-to-local, align 4
  %v2_baac = add i32 %v1_baac, 16
  %v3_baac = inttoptr i32 %v2_baac to i32*
  store i32 %v3_baa0, i32* %v3_baac, align 4
  store i32 %v3_ba0c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_bab8 = load i32, i32* @r4, align 4
  %v1_bab8 = load i32, i32* %r3.global-to-local, align 4
  %v9_bab8 = icmp eq i32 %v0_bab8, %v1_bab8
  store i1 %v9_bab8, i1* %cpsr_z.global-to-local, align 1
  %v2_bac0 = load i32, i32* %r1.global-to-local, align 4
  %v3_bac0 = add i32 %v2_bac0, 6
  %v4_bac0 = inttoptr i32 %v3_bac0 to i8*
  store i8 64, i8* %v4_bac0, align 1
  %v0_bac4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bac4 = trunc i32 %v0_bac4 to i8
  %v2_bac4 = load i32, i32* %r1.global-to-local, align 4
  %v3_bac4 = add i32 %v2_bac4, 7
  %v4_bac4 = inttoptr i32 %v3_bac4 to i8*
  store i8 %v1_bac4, i8* %v4_bac4, align 1
  %v0_bac8 = load i32, i32* %ip.global-to-local, align 4
  %v1_bac8 = trunc i32 %v0_bac8 to i8
  %v2_bac8 = load i32, i32* %r1.global-to-local, align 4
  %v3_bac8 = add i32 %v2_bac8, 2
  %v4_bac8 = inttoptr i32 %v3_bac8 to i8*
  store i8 %v1_bac8, i8* %v4_bac8, align 1
  store i32 %v3_ba10, i32* %r2.global-to-local, align 4
  store i32 %v7_ba0c, i32* %r3.global-to-local, align 4
  store i32 %v3_ba14, i32* %ip.global-to-local, align 4
  %v0_bad8 = load i32, i32* %r1.global-to-local, align 4
  %v1_bad8 = add i32 %v0_bad8, 20
  store i32 %v1_bad8, i32* %r0.global-to-local, align 4
  %v3_badc = add i32 %v0_bad8, 3
  %v4_badc = inttoptr i32 %v3_badc to i8*
  store i8 %v1_badc, i8* %v4_badc, align 1
  %v0_bae0 = load i32, i32* %r3.global-to-local, align 4
  %v1_bae0 = trunc i32 %v0_bae0 to i8
  %v2_bae0 = load i32, i32* %r1.global-to-local, align 4
  %v3_bae0 = add i32 %v2_bae0, 4
  %v4_bae0 = inttoptr i32 %v3_bae0 to i8*
  store i8 %v1_bae0, i8* %v4_bae0, align 1
  %v0_bae4 = load i32, i32* %ip.global-to-local, align 4
  %v1_bae4 = trunc i32 %v0_bae4 to i8
  %v2_bae4 = load i32, i32* %r1.global-to-local, align 4
  %v3_bae4 = add i32 %v2_bae4, 5
  %v4_bae4 = inttoptr i32 %v3_bae4 to i8*
  store i8 %v1_bae4, i8* %v4_bae4, align 1
  %v0_bae8 = load i32, i32* @r5, align 4
  %v1_bae8 = trunc i32 %v0_bae8 to i8
  %v2_bae8 = load i32, i32* %r1.global-to-local, align 4
  %v3_bae8 = add i32 %v2_bae8, 20
  %v4_bae8 = inttoptr i32 %v3_bae8 to i8*
  store i8 %v1_bae8, i8* %v4_bae8, align 1
  store i32 %v4_baec, i32* %r1.global-to-local, align 4
  %v0_baf0 = load i32, i32* @r7, align 4
  %v1_baf0 = trunc i32 %v0_baf0 to i8
  %v2_baf0 = load i32, i32* %r0.global-to-local, align 4
  %v3_baf0 = add i32 %v2_baf0, 5
  %v4_baf0 = inttoptr i32 %v3_baf0 to i8*
  store i8 %v1_baf0, i8* %v4_baf0, align 1
  %v0_baf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_baf4 = trunc i32 %v0_baf4 to i8
  %v2_baf4 = load i32, i32* %r0.global-to-local, align 4
  %v3_baf4 = add i32 %v2_baf4, 1
  %v4_baf4 = inttoptr i32 %v3_baf4 to i8*
  store i8 %v1_baf4, i8* %v4_baf4, align 1
  %v0_baf8 = load i32, i32* @r6, align 4
  %v1_baf8 = trunc i32 %v0_baf8 to i8
  %v2_baf8 = load i32, i32* %r0.global-to-local, align 4
  %v3_baf8 = add i32 %v2_baf8, 2
  %v4_baf8 = inttoptr i32 %v3_baf8 to i8*
  store i8 %v1_baf8, i8* %v4_baf8, align 1
  %v0_bafc = load i32, i32* %sl.global-to-local, align 4
  %v1_bafc = trunc i32 %v0_bafc to i8
  %v2_bafc = load i32, i32* %r0.global-to-local, align 4
  %v3_bafc = add i32 %v2_bafc, 3
  %v4_bafc = inttoptr i32 %v3_bafc to i8*
  store i8 %v1_bafc, i8* %v4_bafc, align 1
  %v0_bb00 = load i32, i32* %sb.global-to-local, align 4
  %v1_bb00 = trunc i32 %v0_bb00 to i8
  %v2_bb00 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb00 = add i32 %v2_bb00, 4
  %v4_bb00 = inttoptr i32 %v3_bb00 to i8*
  store i8 %v1_bb00, i8* %v4_bb00, align 1
  %v0_bb04 = load i32, i32* @r4, align 4
  store i32 %v0_bb04, i32* %stack_var_-40, align 4
  %v5_bb08 = icmp slt i32 %v0_bab8, %v1_bab8
  br i1 %v5_bb08, label %dec_label_pc_ba34, label %dec_label_pc_b7b4.preheader

; uselistorder directives
  uselistorder i32 %v1_ba98, { 1, 0 }
  uselistorder i32 %v3_ba14, { 1, 0 }
  uselistorder i32 %v3_ba10, { 2, 1, 0 }
  uselistorder i32 %v7_ba0c, { 1, 0 }
  uselistorder i32 %v3_ba0c, { 1, 0 }
  uselistorder i32 %v1_ba00, { 1, 0 }
  uselistorder i32 %v4_b9b0, { 1, 0 }
  uselistorder i32 %v0_b9a8, { 0, 2, 1 }
  uselistorder i32 %v0_b98c, { 0, 2, 1 }
  uselistorder i32 %v2_b944, { 1, 0 }
  uselistorder i32 %v8_b928, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b914, { 1, 0 }
  uselistorder i32 %v3_b8f0, { 1, 3, 2, 0 }
  uselistorder i32 %v1_b8bc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_b860, { 0, 2, 1 }
  uselistorder i32 %v0_b848, { 1, 0, 2, 3 }
  uselistorder i32 %v4_b834, { 1, 0 }
  uselistorder i32 %v2_b830, { 0, 2, 1 }
  uselistorder i1 %v7_b7e0, { 1, 0 }
  uselistorder i1 %v3_b964, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b750, { 1, 0 }
  uselistorder i8 %v5_b6b0, { 0, 2, 1 }
  uselistorder i8 %v5_b6ac, { 1, 0 }
  uselistorder i32 %v1_b6a8, { 1, 2, 0 }
  uselistorder i32 %v3_b694, { 1, 0 }
  uselistorder i32 %v1_b680, { 1, 0 }
  uselistorder i32 %v1_b664, { 1, 2, 0 }
  uselistorder i32 %v1_b660, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_b65c, { 3, 4, 0, 2, 1 }
  uselistorder i1 %v2_b640, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b634, { 0, 1, 3, 2 }
  uselistorder i32 %v0_b628, { 1, 0, 2 }
  uselistorder i32 %v0_b618, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_b60c, { 3, 1, 2, 0 }
  uselistorder i1 %v7_b5f8, { 1, 0 }
  uselistorder i1 %v7_b5cc, { 1, 0 }
  uselistorder i32 %v3_b5c8, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_b5b4, { 2, 1, 0 }
  uselistorder i32 %v1_b590, { 3, 1, 2, 4, 0 }
  uselistorder i32 %v6_b534, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %v1_b51c, { 2, 1, 0 }
  uselistorder i32 %v6_b4f0, { 2, 1, 3, 0 }
  uselistorder i32 %v7_b4d8, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32 %v6_b4b4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_b49c, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v1_b470, { 6, 2, 3, 4, 1, 5, 9, 0, 7, 8 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 15, 13, 14 }
  uselistorder i32* %sb.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 51, 50, 53, 52, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 11, 10, 13, 12, 15, 14, 17, 18, 16, 20, 19, 22, 21, 23, 25, 24, 32, 26, 27, 28, 29, 30, 31, 37, 33, 34, 35, 36, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 240, { 1, 0 }
  uselistorder label %dec_label_pc_b9f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b9c4, { 1, 0 }
  uselistorder label %dec_label_pc_b820, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b7b4, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
}

define i32 @function_bb14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_bb14:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_bb14 = load i32, i32* @r4, align 4
  %v12_bb14 = load i32, i32* @r7, align 4
  %v15_bb14 = load i32, i32* @r8, align 4
  %v1_bb18 = urem i32 %arg2, 256
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  %v1_bb34 = urem i32 %arg4, 256
  store i32 %v1_bb34, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_bb44 = call i32 @function_12630(i32 %v1_bb18, i32 4)
  %v0_bb48 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_bb50 = load i32, i32* @r7, align 4
  store i32 %v0_bb50, i32* %r3.global-to-local, align 4
  store i32 %v2_bb44, i32* %fp.global-to-local, align 4
  %v0_bb58 = load i32, i32* @r4, align 4
  %v5_bb5c = inttoptr i32 %v0_bb48 to i32*
  %v6_bb5c = call i32 @function_83ec(i32 %v0_bb58, i32* %v5_bb5c, i32 2, i32 %v0_bb50, i32 ptrtoint (i32* @0 to i32))
  %v1_bb68 = urem i32 %v6_bb5c, 256
  store i32 %v1_bb68, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bb74 = load i32, i32* @r4, align 4
  %v0_bb78 = load i32, i32* @r5, align 4
  %v5_bb7c = trunc i32 %v6_bb5c to i8
  %v6_bb80 = inttoptr i32 %v0_bb78 to i32*
  %v7_bb80 = call i32 @function_83ec(i32 %v0_bb74, i32* %v6_bb80, i32 3, i32 65535, i32 %v6_bb5c)
  %v0_bb84 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_bb90 = load i32, i32* @r4, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_bb98 = inttoptr i32 %v0_bb84 to i32*
  %v6_bb98 = call i32 @function_83ec(i32 %v0_bb90, i32* %v5_bb98, i32 4, i32 64, i32 %v7_bb80)
  %v1_bba0 = urem i32 %v6_bb98, 256
  store i32 %v1_bba0, i32* %ip.global-to-local, align 4
  %v0_bba4 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_bbac = load i32, i32* @r7, align 4
  store i32 %v0_bbac, i32* %r3.global-to-local, align 4
  %v0_bbb0 = load i32, i32* @r4, align 4
  %sext8 = mul i32 %v6_bb98, 16777216
  %v5_bbb8 = sdiv i32 %sext8, 16777216
  %v6_bbb8 = inttoptr i32 %v0_bba4 to i32*
  %v7_bbb8 = call i32 @function_83ec(i32 %v0_bbb0, i32* %v6_bbb8, i32 5, i32 %v0_bbac, i32 %v5_bbb8)
  %v1_bbc4 = urem i32 %v7_bbb8, 256
  store i32 %v1_bbc4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bbd0 = load i32, i32* @r4, align 4
  %v0_bbd4 = load i32, i32* @r5, align 4
  %v5_bbdc = inttoptr i32 %v0_bbd4 to i32*
  %v6_bbdc = call i32 @function_83ec(i32 %v0_bbd0, i32* %v5_bbdc, i32 6, i32 65535, i32 %v1_bbc4)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_bbec = load i32, i32* @r5, align 4
  store i32 %v6_bbdc, i32* @r8, align 4
  %v0_bbf4 = load i32, i32* @r4, align 4
  %v5_bbf8 = inttoptr i32 %v0_bbec to i32*
  %v6_bbf8 = call i32 @function_83ec(i32 %v0_bbf4, i32* %v5_bbf8, i32 7, i32 27015, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_bbf8, i32* @r4, align 4
  %v0_bc00 = load i32, i32* @r7, align 4
  store i32 %v0_bc00, i32* %stack_var_-44, align 4
  %v1_bc08 = inttoptr i32 %v0_bc00 to i32*
  %v2_bc08 = call i32 @function_11eb8(i32* %v1_bc08)
  %v1_bc0c = load i32, i32* @r6, align 4
  %v2_bc0c = add i32 %v1_bc0c, %v2_bc08
  %v1_bc18 = call i32 @function_10f18(i32 10)
  %v3_bc24 = call i32 @function_10e34(i32 10, i32* nonnull %stack_var_-44)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_bc38 = call i32 @function_124b0(i32 2, i32 3, i32 17)
  %v7_bc3c = icmp eq i32 %v3_bc38, -1
  store i1 %v7_bc3c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_bc38, i32* %sb.global-to-local, align 4
  br i1 %v7_bc3c, label %dec_label_pc_bff8, label %dec_label_pc_bc48

dec_label_pc_bc48:                                ; preds = %dec_label_pc_bb14
  store i32 1, i32* %stack_var_-40, align 4
  %v6_bc50 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_bc50, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_bc58 = load i32, i32* @r7, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_bc64 = call i32 @function_12480(i32 %v3_bc38, i32 %v0_bc58, i32 3, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  %v7_bc68 = icmp eq i32 %v6_bc64, -1
  store i1 %v7_bc68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bc68, label %dec_label_pc_c000, label %dec_label_pc_bc70

dec_label_pc_bc70:                                ; preds = %dec_label_pc_bc48
  %v0_bc74 = load i32, i32* @r4, align 4
  %v3_bc74 = mul i32 %v0_bc74, 65536
  store i32 %v3_bc74, i32* @lr, align 4
  %v3_bc80 = urem i32 %v7_bb80, 65536
  %v0_bc84 = load i32, i32* @r8, align 4
  %v3_bc84 = mul i32 %v0_bc84, 65536
  store i32 %v3_bc84, i32* %ip.global-to-local, align 4
  %v2_bc88 = icmp eq i32 %v1_bb18, 0
  store i1 %v2_bc88, i1* %cpsr_z.global-to-local, align 1
  %v3_bc90 = urem i32 %v0_bc84, 65536
  store i32 %v3_bc90, i32* %r4.global-to-local, align 4
  %v3_bc94 = urem i32 %v0_bc74, 65536
  store i32 %v3_bc94, i32* %r3.global-to-local, align 4
  %v0_bc98 = load i32, i32* @r7, align 4
  store i32 %v0_bc98, i32* %stack_var_-40, align 4
  br i1 %v2_bc88, label %dec_label_pc_bfe4.critedge, label %dec_label_pc_bca8

dec_label_pc_bca8:                                ; preds = %dec_label_pc_bc70
  %v1_bca8 = urem i32 %v0_bc84, 256
  %v1_bcb0 = urem i32 %v0_bc74, 256
  %tmp41 = udiv i32 %v7_bb80, 256
  %v3_bcb4 = urem i32 %tmp41, 256
  %v3_bcbc = mul nuw nsw i32 %v1_bcb0, 256
  %v1_bcb8 = mul i32 %v7_bb80, 256
  %v4_bcc0 = and i32 %v1_bcb8, 65280
  %v5_bcc0 = or i32 %v4_bcc0, %v3_bcb4
  store i32 %v5_bcc0, i32* %r8.global-to-local, align 4
  %tmp42 = udiv i32 %v0_bc74, 256
  %v4_bcc8 = urem i32 %tmp42, 256
  %v5_bcc8 = or i32 %v4_bcc8, %v3_bcbc
  store i32 %v5_bcc8, i32* @r5, align 4
  %v3_bccc = mul nuw nsw i32 %v1_bca8, 256
  store i32 %v3_bccc, i32* %r2.global-to-local, align 4
  %v5_bcd0 = trunc i32 %v7_bb80 to i8
  store i32 %v1_bcb0, i32* %r3.global-to-local, align 4
  %tmp43 = udiv i32 %v0_bc84, 256
  %v4_bcd8 = urem i32 %tmp43, 256
  %v5_bcd8 = or i32 %v4_bcd8, %v3_bccc
  store i32 %v5_bcd8, i32* @r6, align 4
  store i32 %v0_bc98, i32* @r4, align 4
  store i32 %v1_bca8, i32* @r7, align 4
  %v4_bd54 = sext i8 %v5_bcd0 to i32
  %sext = mul i32 %v0_bc74, 16777216
  %v4_bdcc = sdiv i32 %sext, 16777216
  %v1_bd4c = trunc i32 %v5_bbb8 to i8
  br label %dec_label_pc_bce8

dec_label_pc_bce8:                                ; preds = %bb47, %dec_label_pc_bca8
  %v2_bcf0 = call i32 @function_12630(i32 128, i32 1)
  %v3_bcf4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bcf4, i32* %r3.global-to-local, align 4
  %v1_bcf8 = load i32, i32* %fp.global-to-local, align 4
  %v2_bcf8 = load i32, i32* @r4, align 4
  %v5_bcf8 = mul i32 %v2_bcf8, 4
  %v6_bcf8 = add i32 %v5_bcf8, %v1_bcf8
  %v7_bcf8 = inttoptr i32 %v6_bcf8 to i32*
  store i32 %v2_bcf0, i32* %v7_bcf8, align 4
  %v0_bcfc = load i32, i32* %fp.global-to-local, align 4
  %v1_bcfc = load i32, i32* %r3.global-to-local, align 4
  %v4_bcfc = mul i32 %v1_bcfc, 4
  %v5_bcfc = add i32 %v4_bcfc, %v0_bcfc
  %v6_bcfc = inttoptr i32 %v5_bcfc to i32*
  %v7_bcfc = load i32, i32* %v6_bcfc, align 4
  store i32 %v7_bcfc, i32* @lr, align 4
  %v1_bd00 = inttoptr i32 %v7_bcfc to i8*
  %v2_bd00 = load i8, i8* %v1_bd00, align 1
  %tmp = urem i8 %v2_bd00, 16
  %v1_bd04 = zext i8 %tmp to i32
  %v1_bd08 = or i32 %v1_bd04, 64
  store i32 %v1_bd08, i32* %r3.global-to-local, align 4
  %v1_bd10 = trunc i32 %v1_bd08 to i8
  store i8 %v1_bd10, i8* %v1_bd00, align 1
  %v0_bd14 = load i32, i32* @lr, align 4
  %v1_bd14 = inttoptr i32 %v0_bd14 to i8*
  %v2_bd14 = load i8, i8* %v1_bd14, align 1
  %v1_bd18 = and i8 %v2_bd14, -16
  %v1_bd1c = or i8 %v1_bd18, 5
  store i8 %v1_bd1c, i8* %v1_bd14, align 1
  %v2_bd28 = load i32, i32* @lr, align 4
  %v3_bd28 = add i32 %v2_bd28, 1
  %v4_bd28 = inttoptr i32 %v3_bd28 to i8*
  store i8 %v5_bb7c, i8* %v4_bd28, align 1
  %v3_bd2c = load i32, i32* %stack_var_-44, align 4
  %v1_bd30 = add i32 %v3_bd2c, 32
  %tmp44 = mul i32 %v1_bd30, 256
  store i32 %v5_bbb8, i32* %r4.global-to-local, align 4
  %v1_bd40 = and i32 %tmp44, 65280
  %tmp45 = udiv i32 %v1_bd30, 256
  %v4_bd44 = urem i32 %tmp45, 256
  %v5_bd44 = or i32 %v4_bd44, %v1_bd40
  store i32 %v5_bd44, i32* %r2.global-to-local, align 4
  store i32 %v1_bbc4, i32* %r3.global-to-local, align 4
  %v2_bd4c = load i32, i32* @lr, align 4
  %v3_bd4c = add i32 %v2_bd4c, 8
  %v4_bd4c = inttoptr i32 %v3_bd4c to i8*
  store i8 %v1_bd4c, i8* %v4_bd4c, align 1
  %v0_bd50 = load i32, i32* %r3.global-to-local, align 4
  %v2_bd50 = icmp eq i32 %v0_bd50, 0
  store i1 %v2_bd50, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_bd54, i32* %r3.global-to-local, align 4
  %v2_bd58 = load i32, i32* @lr, align 4
  %v3_bd58 = add i32 %v2_bd58, 5
  %v4_bd58 = inttoptr i32 %v3_bd58 to i8*
  store i8 %v5_bcd0, i8* %v4_bd58, align 1
  %v0_bd5c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bd5c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bce8
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bd60 = load i32, i32* @lr, align 4
  %v4_bd60 = add i32 %v3_bd60, 6
  %v5_bd60 = inttoptr i32 %v4_bd60 to i8*
  store i8 64, i8* %v5_bd60, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bce8, %bb
  %v2_bd68 = load i32, i32* @lr, align 4
  %v3_bd68 = add i32 %v2_bd68, 9
  %v4_bd68 = inttoptr i32 %v3_bd68 to i8*
  store i8 17, i8* %v4_bd68, align 1
  %v0_bd6c = load i32, i32* %r2.global-to-local, align 4
  %v3_bd6c = sdiv i32 %v0_bd6c, 256
  store i32 %v3_bd6c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d258.33 to i32), i32* %r3.global-to-local, align 4
  %v1_bd74 = trunc i32 %v0_bd6c to i8
  %v2_bd74 = load i32, i32* @lr, align 4
  %v3_bd74 = add i32 %v2_bd74, 2
  %v4_bd74 = inttoptr i32 %v3_bd74 to i8*
  store i8 %v1_bd74, i8* %v4_bd74, align 1
  %v0_bd78 = load i32, i32* %ip.global-to-local, align 4
  %v1_bd78 = trunc i32 %v0_bd78 to i8
  %v2_bd78 = load i32, i32* @lr, align 4
  %v3_bd78 = add i32 %v2_bd78, 3
  %v4_bd78 = inttoptr i32 %v3_bd78 to i8*
  store i8 %v1_bd78, i8* %v4_bd78, align 1
  %v0_bd7c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bd7c, label %.thread6, label %bb46

.thread6:                                         ; preds = %.thread
  %v3_bd807 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bd807, i32* %ip.global-to-local, align 4
  br label %bb47

bb46:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_bd80 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bd80, i32* %ip.global-to-local, align 4
  %v3_bd84 = load i32, i32* @lr, align 4
  %v4_bd84 = add i32 %v3_bd84, 7
  %v5_bd84 = inttoptr i32 %v4_bd84 to i8*
  store i8 0, i8* %v5_bd84, align 1
  %v0_bd8c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %.thread6, %bb46
  %v0_bd8c = phi i32 [ %v3_bd807, %.thread6 ], [ %v0_bd8c.pre, %bb46 ]
  %v2_bd88 = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_bd88, i32* %r2.global-to-local, align 4
  %v3_bd8c = mul i32 %v0_bd8c, 32
  store i32 %v3_bd8c, i32* %r3.global-to-local, align 4
  %v1_bd90 = load i32, i32* @lr, align 4
  %v2_bd90 = add i32 %v1_bd90, 12
  %v3_bd90 = inttoptr i32 %v2_bd90 to i32*
  store i32 %v2_bd88, i32* %v3_bd90, align 4
  %v0_bd94 = load i32, i32* %r3.global-to-local, align 4
  %v1_bd94 = load i32, i32* %ip.global-to-local, align 4
  %tmp52 = mul i32 %v1_bd94, -8
  %v5_bd94 = add i32 %v0_bd94, %tmp52
  %v1_bd98 = load i32, i32* @sl, align 4
  %v2_bd98 = add i32 %v5_bd94, %v1_bd98
  store i32 %v2_bd98, i32* %r3.global-to-local, align 4
  %v1_bd9c = add i32 %v2_bd98, 16
  %v2_bd9c = inttoptr i32 %v1_bd9c to i32*
  %v3_bd9c = load i32, i32* %v2_bd9c, align 4
  %v1_bda0 = load i32, i32* @lr, align 4
  %v2_bda0 = add i32 %v1_bda0, 16
  %v3_bda0 = inttoptr i32 %v2_bda0 to i32*
  store i32 %v3_bd9c, i32* %v3_bda0, align 4
  %v3_bda4 = load i32, i32* %stack_var_-44, align 4
  %v1_bda8 = add i32 %v3_bda4, 12
  %tmp48 = mul i32 %v1_bda8, 256
  %v1_bdb4 = and i32 %tmp48, 65280
  %tmp49 = udiv i32 %v1_bda8, 256
  %v4_bdb8 = urem i32 %tmp49, 256
  %v5_bdb8 = or i32 %v4_bdb8, %v1_bdb4
  store i32 %v5_bdb8, i32* %ip.global-to-local, align 4
  %v0_bdbc = load i32, i32* @lr, align 4
  %v1_bdbc = add i32 %v0_bdbc, 20
  store i32 %v1_bdbc, i32* %r4.global-to-local, align 4
  %v3_bdc05 = udiv i32 %v1_bdb4, 256
  store i32 %v3_bdc05, i32* %r3.global-to-local, align 4
  %v0_bdc4 = load i32, i32* %r8.global-to-local, align 4
  %v1_bdc4 = trunc i32 %v0_bdc4 to i8
  %v3_bdc4 = add i32 %v0_bdbc, 4
  %v4_bdc4 = inttoptr i32 %v3_bdc4 to i8*
  store i8 %v1_bdc4, i8* %v4_bdc4, align 1
  %v0_bdc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_bdc8 = trunc i32 %v0_bdc8 to i8
  %v2_bdc8 = load i32, i32* %r4.global-to-local, align 4
  %v3_bdc8 = add i32 %v2_bdc8, 5
  %v4_bdc8 = inttoptr i32 %v3_bdc8 to i8*
  store i8 %v1_bdc8, i8* %v4_bdc8, align 1
  store i32 %v4_bdcc, i32* %r3.global-to-local, align 4
  %v1_bdd4 = load i32, i32* @lr, align 4
  %v2_bdd4 = add i32 %v1_bdd4, 28
  %v3_bdd4 = inttoptr i32 %v2_bdd4 to i32*
  store i32 -1, i32* %v3_bdd4, align 4
  %v0_bdd8 = load i32, i32* @r6, align 4
  %v1_bdd8 = trunc i32 %v0_bdd8 to i8
  %v2_bdd8 = load i32, i32* @lr, align 4
  %v3_bdd8 = add i32 %v2_bdd8, 20
  %v4_bdd8 = inttoptr i32 %v3_bdd8 to i8*
  store i8 %v1_bdd8, i8* %v4_bdd8, align 1
  %v0_bddc = load i32, i32* @r5, align 4
  %v1_bddc = trunc i32 %v0_bddc to i8
  %v2_bddc = load i32, i32* %r4.global-to-local, align 4
  %v3_bddc = add i32 %v2_bddc, 2
  %v4_bddc = inttoptr i32 %v3_bddc to i8*
  store i8 %v1_bddc, i8* %v4_bddc, align 1
  %v0_bde0 = load i32, i32* @r7, align 4
  %v1_bde0 = trunc i32 %v0_bde0 to i8
  %v2_bde0 = load i32, i32* %r4.global-to-local, align 4
  %v3_bde0 = add i32 %v2_bde0, 1
  %v4_bde0 = inttoptr i32 %v3_bde0 to i8*
  store i8 %v1_bde0, i8* %v4_bde0, align 1
  %v0_bde4 = load i32, i32* @lr, align 4
  %v1_bde4 = add i32 %v0_bde4, 32
  %v0_bde8 = load i32, i32* %r3.global-to-local, align 4
  %v1_bde8 = trunc i32 %v0_bde8 to i8
  %v2_bde8 = load i32, i32* %r4.global-to-local, align 4
  %v3_bde8 = add i32 %v2_bde8, 3
  %v4_bde8 = inttoptr i32 %v3_bde8 to i8*
  store i8 %v1_bde8, i8* %v4_bde8, align 1
  %v0_bdec = load i32, i32* %ip.global-to-local, align 4
  %v1_bdec = trunc i32 %v0_bdec to i8
  %v2_bdec = load i32, i32* %r4.global-to-local, align 4
  %v3_bdec = add i32 %v2_bdec, 4
  %v4_bdec = inttoptr i32 %v3_bdec to i8*
  store i8 %v1_bdec, i8* %v4_bdec, align 1
  %v3_bdf0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bdf0, i32* %r2.global-to-local, align 4
  %v3_bdf4 = call i32 @function_11464(i32 %v1_bde4, i32 %v3_bc24, i32 %v3_bdf0)
  %v3_bdf8 = load i32, i32* %stack_var_-40, align 4
  %v1_bdfc = add i32 %v3_bdf8, 1
  store i32 %v1_bdfc, i32* @r4, align 4
  store i32 %v1_bb18, i32* %r3.global-to-local, align 4
  %v9_be04 = icmp eq i32 %v1_bdfc, %v1_bb18
  store i1 %v9_be04, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bdfc, i32* %stack_var_-40, align 4
  %v5_be0c = icmp slt i32 %v1_bdfc, %v1_bb18
  br i1 %v5_be0c, label %dec_label_pc_bce8, label %dec_label_pc_be10

dec_label_pc_be10:                                ; preds = %bb47, %dec_label_pc_bfe4
  store i32 %v1_bb18, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_bc88, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_bc88, label %dec_label_pc_bfe4, label %dec_label_pc_be24

dec_label_pc_be24:                                ; preds = %dec_label_pc_be10
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_be34 = icmp eq i32 %v3_bc80, 65535
  br label %dec_label_pc_bf08

dec_label_pc_be30:                                ; preds = %dec_label_pc_bf08
  store i32 %v3_bc80, i32* %r3.global-to-local, align 4
  store i1 %v3_be34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_be34, label %dec_label_pc_bf98, label %dec_label_pc_be3c

dec_label_pc_be3c:                                ; preds = %dec_label_pc_bf30, %dec_label_pc_be30
  %v1_be40 = phi i32 [ %v1_bf90, %dec_label_pc_bf30 ], [ 65535, %dec_label_pc_be30 ]
  %v9_be40 = icmp eq i32 %v3_bc90, %v1_be40
  store i1 %v9_be40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_be40, label %dec_label_pc_bfb4, label %dec_label_pc_be48

dec_label_pc_be48:                                ; preds = %dec_label_pc_bf98.dec_label_pc_be48_crit_edge, %dec_label_pc_be3c
  %v1_be4c = phi i32 [ %v1_be4c.pre, %dec_label_pc_bf98.dec_label_pc_be48_crit_edge ], [ %v1_be40, %dec_label_pc_be3c ]
  store i32 %v3_bc94, i32* %r3.global-to-local, align 4
  %v9_be4c = icmp eq i32 %v3_bc94, %v1_be4c
  store i1 %v9_be4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_be4c, label %dec_label_pc_bfd0, label %dec_label_pc_be54

dec_label_pc_be54:                                ; preds = %dec_label_pc_bfb4, %dec_label_pc_be48, %dec_label_pc_bfd0
  %v0_be58 = load i32, i32* %r8.global-to-local, align 4
  %v1_be58 = trunc i32 %v0_be58 to i8
  %v2_be58 = load i32, i32* @r5, align 4
  %v3_be58 = add i32 %v2_be58, 10
  %v4_be58 = inttoptr i32 %v3_be58 to i8*
  store i8 %v1_be58, i8* %v4_be58, align 1
  %v0_be5c = load i32, i32* %r8.global-to-local, align 4
  %v1_be5c = trunc i32 %v0_be5c to i8
  %v2_be5c = load i32, i32* @r5, align 4
  %v3_be5c = add i32 %v2_be5c, 11
  %v4_be5c = inttoptr i32 %v3_be5c to i8*
  store i8 %v1_be5c, i8* %v4_be5c, align 1
  %v0_be60 = load i32, i32* @r5, align 4
  store i32 %v0_be60, i32* @r0, align 4
  %v2_be64 = call i32 @function_c7e0(i32 %v0_be60, i32 20)
  %v3_be64 = trunc i32 %v2_be64 to i8
  %v4_be68 = sdiv i32 %v2_be64, 256
  store i32 %v4_be68, i32* %r3.global-to-local, align 4
  %v1_be6c = trunc i32 %v4_be68 to i8
  %v2_be6c = load i32, i32* @r5, align 4
  %v3_be6c = add i32 %v2_be6c, 11
  %v4_be6c = inttoptr i32 %v3_be6c to i8*
  store i8 %v1_be6c, i8* %v4_be6c, align 1
  %v3_be70 = load i32, i32* @r5, align 4
  %v4_be70 = add i32 %v3_be70, 10
  %v5_be70 = inttoptr i32 %v4_be70 to i8*
  store i8 %v3_be64, i8* %v5_be70, align 1
  %v0_be74 = load i32, i32* %r8.global-to-local, align 4
  %v1_be74 = trunc i32 %v0_be74 to i8
  %v2_be74 = load i32, i32* @r6, align 4
  %v3_be74 = add i32 %v2_be74, 6
  %v4_be74 = inttoptr i32 %v3_be74 to i8*
  store i8 %v1_be74, i8* %v4_be74, align 1
  %v0_be78 = load i32, i32* %r8.global-to-local, align 4
  %v1_be78 = trunc i32 %v0_be78 to i8
  %v2_be78 = load i32, i32* @r6, align 4
  %v3_be78 = add i32 %v2_be78, 7
  %v4_be78 = inttoptr i32 %v3_be78 to i8*
  store i8 %v1_be78, i8* %v4_be78, align 1
  %v0_be7c = load i32, i32* @r5, align 4
  %v1_be7c = add i32 %v0_be7c, 24
  %v2_be7c = inttoptr i32 %v1_be7c to i8*
  %v3_be7c = load i8, i8* %v2_be7c, align 1
  %v4_be7c = zext i8 %v3_be7c to i32
  store i32 %v4_be7c, i32* %r3.global-to-local, align 4
  %v1_be80 = add i32 %v0_be7c, 25
  %v2_be80 = inttoptr i32 %v1_be80 to i8*
  %v3_be80 = load i8, i8* %v2_be80, align 1
  %v4_be80 = zext i8 %v3_be80 to i32
  %v4_be84 = mul nuw nsw i32 %v4_be80, 256
  %v5_be84 = or i32 %v4_be84, %v4_be7c
  store i32 %v5_be84, i32* %r2.global-to-local, align 4
  %v3_be88 = load i32, i32* %stack_var_-44, align 4
  %v0_be8c = load i32, i32* @r6, align 4
  store i32 %v0_be8c, i32* @r1, align 4
  %v1_be90 = add i32 %v3_be88, 12
  store i32 %v1_be90, i32* %r3.global-to-local, align 4
  %v4_be98 = call i32 @function_c83c(i32 %v0_be7c, i32 %v0_be8c, i32 %v5_be84, i32 %v1_be90)
  %v5_be98 = trunc i32 %v4_be98 to i8
  %v4_be9c14 = udiv i32 %v4_be98, 256
  %v1_bea0 = trunc i32 %v4_be9c14 to i8
  %v2_bea0 = load i32, i32* @r6, align 4
  %v3_bea0 = add i32 %v2_bea0, 7
  %v4_bea0 = inttoptr i32 %v3_bea0 to i8*
  store i8 %v1_bea0, i8* %v4_bea0, align 1
  %v3_bea4 = load i32, i32* @r6, align 4
  %v4_bea4 = add i32 %v3_bea4, 6
  %v5_bea4 = inttoptr i32 %v4_bea4 to i8*
  store i8 %v5_be98, i8* %v5_bea4, align 1
  %v3_bea8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bea8, i32* %r3.global-to-local, align 4
  %v0_beac = load i32, i32* @r5, align 4
  %v1_beac = add i32 %v0_beac, 20
  %v2_beac = inttoptr i32 %v1_beac to i32*
  %v3_beac = load i32, i32* %v2_beac, align 4
  %v5_beb4 = mul i32 %v3_bea8, 24
  %v1_beb8 = load i32, i32* @sl, align 4
  %v2_beb8 = add i32 %v1_beb8, %v5_beb4
  store i32 %v2_beb8, i32* %ip.global-to-local, align 4
  %v3_bebc = udiv i32 %v3_beac, 65536
  store i32 %v3_bebc, i32* %r2.global-to-local, align 4
  %v1_bec0 = trunc i32 %v3_bebc to i8
  %v3_bec0 = add i32 %v2_beb8, 2
  %v4_bec0 = inttoptr i32 %v3_bec0 to i8*
  store i8 %v1_bec0, i8* %v4_bec0, align 1
  %v0_bec4 = load i32, i32* %r2.global-to-local, align 4
  %v3_bec415 = udiv i32 %v0_bec4, 256
  %v3_bec8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bec8, i32* %r2.global-to-local, align 4
  %v1_becc = trunc i32 %v3_bec415 to i8
  %v2_becc = load i32, i32* %ip.global-to-local, align 4
  %v3_becc = add i32 %v2_becc, 3
  %v4_becc = inttoptr i32 %v3_becc to i8*
  store i8 %v1_becc, i8* %v4_becc, align 1
  store i32 16, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_bed8 = load i32, i32* @r5, align 4
  %v0_bedc = load i32, i32* %r2.global-to-local, align 4
  %v1_bedc = add i32 %v0_bedc, 32
  store i32 %v1_bedc, i32* %r2.global-to-local, align 4
  %v0_bee0 = load i32, i32* %sb.global-to-local, align 4
  %v0_bee8 = load i32, i32* %ip.global-to-local, align 4
  %v6_beec = inttoptr i32 %v0_bed8 to i32*
  %v7_beec = call i32 @function_1244c(i32 %v0_bee0, i32* %v6_beec, i32 %v1_bedc, i32 16384, i32 %v0_bee8, i32 16)
  %v3_bef0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bef0, i32* %r3.global-to-local, align 4
  store i32 %v1_bb18, i32* @r4, align 4
  %v1_bef8 = add i32 %v3_bef0, 1
  %v9_befc = icmp eq i32 %v1_bef8, %v1_bb18
  store i1 %v9_befc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bef8, i32* %stack_var_-40, align 4
  %v6_bf04 = icmp slt i32 %v1_bef8, %v1_bb18
  br i1 %v6_bf04, label %dec_label_pc_bf08, label %dec_label_pc_bfe4

dec_label_pc_bf08:                                ; preds = %dec_label_pc_be54, %dec_label_pc_be24
  %v1_bf18 = phi i32 [ %v1_bef8, %dec_label_pc_be54 ], [ 0, %dec_label_pc_be24 ]
  %v5_bf0c = mul i32 %v1_bf18, 24
  %v1_bf10 = load i32, i32* @sl, align 4
  %v2_bf10 = add i32 %v1_bf10, %v5_bf0c
  store i32 %v2_bf10, i32* %r3.global-to-local, align 4
  %v1_bf14 = add i32 %v2_bf10, 20
  %v2_bf14 = inttoptr i32 %v1_bf14 to i8*
  %v3_bf14 = load i8, i8* %v2_bf14, align 1
  %v4_bf14 = zext i8 %v3_bf14 to i32
  store i32 %v4_bf14, i32* %r2.global-to-local, align 4
  %v0_bf18 = load i32, i32* %fp.global-to-local, align 4
  %v4_bf18 = mul i32 %v1_bf18, 4
  %v5_bf18 = add i32 %v0_bf18, %v4_bf18
  %v6_bf18 = inttoptr i32 %v5_bf18 to i32*
  %v7_bf18 = load i32, i32* %v6_bf18, align 4
  store i32 %v7_bf18, i32* @r5, align 4
  %v2_bf20 = icmp ugt i8 %v3_bf14, 30
  %v7_bf20 = icmp eq i8 %v3_bf14, 31
  store i1 %v7_bf20, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* %r7.global-to-local, align 4
  %v1_bf28 = add i32 %v7_bf18, 20
  store i32 %v1_bf28, i32* @r6, align 4
  %v2_bf2c = xor i1 %v7_bf20, true
  %v3_bf2c = and i1 %v2_bf20, %v2_bf2c
  br i1 %v3_bf2c, label %dec_label_pc_be30, label %dec_label_pc_bf30

dec_label_pc_bf30:                                ; preds = %dec_label_pc_bf08
  %v1_bf30 = add i32 %v2_bf10, 16
  %v2_bf30 = inttoptr i32 %v1_bf30 to i32*
  %v3_bf30 = load i32, i32* %v2_bf30, align 4
  store i32 %v3_bf30, i32* %r4.global-to-local, align 4
  %v0_bf34 = call i32 @function_db88()
  %v3_bf38 = load i32, i32* %stack_var_-40, align 4
  %v5_bf40 = mul i32 %v3_bf38, 24
  %v1_bf48 = and i32 %v3_bf30, 65280
  store i32 %v1_bf48, i32* %r3.global-to-local, align 4
  %v1_bf44 = udiv i32 %v3_bf30, 256
  %v3_bf4c = and i32 %v1_bf44, 65280
  store i32 %v3_bf4c, i32* %r2.global-to-local, align 4
  %v1_bf50 = load i32, i32* @sl, align 4
  %v2_bf50 = add i32 %v1_bf50, %v5_bf40
  store i32 %v2_bf50, i32* %ip.global-to-local, align 4
  %v1_bf5c = add i32 %v2_bf50, 20
  %v2_bf5c = inttoptr i32 %v1_bf5c to i8*
  %v3_bf5c = load i8, i8* %v2_bf5c, align 1
  %v4_bf5c = zext i8 %v3_bf5c to i32
  %v2_bf64 = call i32 @llvm.bswap.i32(i32 %v3_bf30)
  %v7_bf68 = lshr i32 %v0_bf34, %v4_bf5c
  %v8_bf68 = add i32 %v7_bf68, %v2_bf64
  store i32 %v8_bf68, i32* %r2.global-to-local, align 4
  %v2_bf84 = call i32 @llvm.bswap.i32(i32 %v8_bf68)
  %v1_bf88 = load i32, i32* @r5, align 4
  %v2_bf88 = add i32 %v1_bf88, 16
  %v3_bf88 = inttoptr i32 %v2_bf88 to i32*
  store i32 %v2_bf84, i32* %v3_bf88, align 4
  store i32 %v3_bc80, i32* %r3.global-to-local, align 4
  %v1_bf90 = load i32, i32* %r7.global-to-local, align 4
  %v9_bf90 = icmp eq i32 %v3_bc80, %v1_bf90
  store i1 %v9_bf90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bf90, label %dec_label_pc_bf98, label %dec_label_pc_be3c

dec_label_pc_bf98:                                ; preds = %dec_label_pc_bf30, %dec_label_pc_be30
  %v0_bf98 = call i32 @function_db88()
  %v1_bf98 = trunc i32 %v0_bf98 to i8
  %v4_bfa0 = sdiv i32 %v0_bf98, 256
  store i32 %v4_bfa0, i32* %r3.global-to-local, align 4
  %v1_bfa4 = load i32, i32* %r7.global-to-local, align 4
  %v9_bfa4 = icmp eq i32 %v3_bc90, %v1_bfa4
  store i1 %v9_bfa4, i1* %cpsr_z.global-to-local, align 1
  %v1_bfa8 = trunc i32 %v4_bfa0 to i8
  %v2_bfa8 = load i32, i32* @r5, align 4
  %v3_bfa8 = add i32 %v2_bfa8, 5
  %v4_bfa8 = inttoptr i32 %v3_bfa8 to i8*
  store i8 %v1_bfa8, i8* %v4_bfa8, align 1
  %v3_bfac = load i32, i32* @r5, align 4
  %v4_bfac = add i32 %v3_bfac, 4
  %v5_bfac = inttoptr i32 %v4_bfac to i8*
  store i8 %v1_bf98, i8* %v5_bfac, align 1
  %v0_bfb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bfb0, label %dec_label_pc_bfb4, label %dec_label_pc_bf98.dec_label_pc_be48_crit_edge

dec_label_pc_bf98.dec_label_pc_be48_crit_edge:    ; preds = %dec_label_pc_bf98
  %v1_be4c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_be48

dec_label_pc_bfb4:                                ; preds = %dec_label_pc_bf98, %dec_label_pc_be3c
  %v0_bfb4 = call i32 @function_db88()
  %v1_bfb4 = trunc i32 %v0_bfb4 to i8
  %v4_bfb8 = sdiv i32 %v0_bfb4, 256
  store i32 %v4_bfb8, i32* %r3.global-to-local, align 4
  %v3_bfbc = load i32, i32* @r5, align 4
  %v4_bfbc = add i32 %v3_bfbc, 20
  %v5_bfbc = inttoptr i32 %v4_bfbc to i8*
  store i8 %v1_bfb4, i8* %v5_bfbc, align 1
  %v0_bfc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_bfc0 = trunc i32 %v0_bfc0 to i8
  %v2_bfc0 = load i32, i32* @r6, align 4
  %v3_bfc0 = add i32 %v2_bfc0, 1
  %v4_bfc0 = inttoptr i32 %v3_bfc0 to i8*
  store i8 %v1_bfc0, i8* %v4_bfc0, align 1
  store i32 %v3_bc94, i32* %r3.global-to-local, align 4
  %v1_bfc8 = load i32, i32* %r7.global-to-local, align 4
  %v9_bfc8 = icmp eq i32 %v3_bc94, %v1_bfc8
  store i1 %v9_bfc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfc8, label %dec_label_pc_bfd0, label %dec_label_pc_be54

dec_label_pc_bfd0:                                ; preds = %dec_label_pc_bfb4, %dec_label_pc_be48
  %v0_bfd0 = call i32 @function_db88()
  %v1_bfd0 = trunc i32 %v0_bfd0 to i8
  %v4_bfd4 = sdiv i32 %v0_bfd0, 256
  store i32 %v4_bfd4, i32* %r3.global-to-local, align 4
  %v1_bfd8 = trunc i32 %v4_bfd4 to i8
  %v2_bfd8 = load i32, i32* @r6, align 4
  %v3_bfd8 = add i32 %v2_bfd8, 3
  %v4_bfd8 = inttoptr i32 %v3_bfd8 to i8*
  store i8 %v1_bfd8, i8* %v4_bfd8, align 1
  %v3_bfdc = load i32, i32* @r6, align 4
  %v4_bfdc = add i32 %v3_bfdc, 2
  %v5_bfdc = inttoptr i32 %v4_bfdc to i8*
  store i8 %v1_bfd0, i8* %v5_bfdc, align 1
  br label %dec_label_pc_be54

dec_label_pc_bfe4.critedge:                       ; preds = %dec_label_pc_bc70
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_bfe4

dec_label_pc_bfe4:                                ; preds = %dec_label_pc_be54, %dec_label_pc_bfe4.critedge, %dec_label_pc_be10
  %v2_bfe8 = call i32 @function_11eb8(i32* null)
  store i32 %v2_bc0c, i32* %r3.global-to-local, align 4
  %v9_bff0 = icmp eq i32 %v2_bc0c, %v2_bfe8
  store i1 %v9_bff0, i1* %cpsr_z.global-to-local, align 1
  %v6_bff4 = icmp slt i32 %v2_bc0c, %v2_bfe8
  br i1 %v6_bff4, label %dec_label_pc_bff8, label %dec_label_pc_be10

dec_label_pc_bff8:                                ; preds = %dec_label_pc_bfe4, %dec_label_pc_bb14, %dec_label_pc_c000
  %v29_bffc = phi i32 [ %v3_bc38, %dec_label_pc_bb14 ], [ %v1_c004, %dec_label_pc_c000 ], [ %v2_bfe8, %dec_label_pc_bfe4 ]
  store i32 %v3_bb14, i32* %r4.global-to-local, align 4
  store i32 %v12_bb14, i32* %r7.global-to-local, align 4
  store i32 %v15_bb14, i32* %r8.global-to-local, align 4
  ret i32 %v29_bffc

dec_label_pc_c000:                                ; preds = %dec_label_pc_bc48
  %v0_c000 = load i32, i32* %sb.global-to-local, align 4
  %v1_c004 = call i32 @function_11c68(i32 %v0_c000)
  br label %dec_label_pc_bff8

; uselistorder directives
  uselistorder i32 %v4_bfd4, { 1, 0 }
  uselistorder i32 %v4_bfa0, { 1, 0 }
  uselistorder i32 %v1_bf90, { 1, 0 }
  uselistorder i32 %v3_bf30, { 1, 2, 0, 3 }
  uselistorder i32 %v1_bef8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_bebc, { 1, 0 }
  uselistorder i32 %v4_be68, { 1, 0 }
  uselistorder i1 %v3_be34, { 1, 0 }
  uselistorder i32 %v1_bdfc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_bda8, { 1, 0 }
  uselistorder i32 %v0_bd6c, { 1, 0 }
  uselistorder i32 %v1_bd30, { 1, 0 }
  uselistorder i8 %v5_bcd0, { 1, 0 }
  uselistorder i32 %v3_bccc, { 1, 0 }
  uselistorder i32 %v1_bcb0, { 1, 0 }
  uselistorder i32 %v1_bca8, { 1, 0 }
  uselistorder i32 %v3_bc94, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_bc84, { 0, 1, 3, 2 }
  uselistorder i32 %v3_bc80, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bc74, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_bc68, { 1, 0 }
  uselistorder i1 %v7_bc3c, { 1, 0 }
  uselistorder i32 %v3_bc38, { 1, 2, 3, 0 }
  uselistorder i32 %v2_bc0c, { 2, 1, 0 }
  uselistorder i32 %v1_bbc4, { 1, 2, 0 }
  uselistorder i32 %v5_bbb8, { 0, 2, 1 }
  uselistorder i32 %v7_bb80, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_bb5c, { 1, 2, 0 }
  uselistorder i32 %v1_bb18, { 1, 2, 3, 0, 4, 5, 6, 8, 7 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %stack_var_-40, { 0, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 2, 15, 13, 14 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 44, 2, 3, 4, 5, 6, 7, 8, 17, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 9, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 9, 0, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 18, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_bff8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bfe4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_be54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_be10, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_c010(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_c010:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp79 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-2120 = alloca i32, align 4
  %v3_c010 = load i32, i32* @r4, align 4
  %v15_c010 = load i32, i32* @r8, align 4
  %v21_c010 = load i32, i32* @sl, align 4
  %v24_c010 = load i32, i32* @fp, align 4
  %v1_c01c = urem i32 %arg2, 256
  store i32 0, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %v1_c01c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_c034 = urem i32 %arg4, 256
  store i32 %v1_c034, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_c044 = call i32 @function_12630(i32 %v1_c01c, i32 4)
  %v0_c048 = load i32, i32* @r5, align 4
  store i32 %v0_c048, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_c054 = load i32, i32* @r4, align 4
  store i32 %v0_c054, i32* %r0.global-to-local, align 4
  %v0_c058 = load i32, i32* @r6, align 4
  store i32 %v0_c058, i32* %r3.global-to-local, align 4
  %v5_c05c = inttoptr i32 %v0_c048 to i32*
  %v6_c05c = call i32 @function_83ec(i32 %v0_c054, i32* %v5_c05c, i32 2, i32 %v0_c058, i32 %v2_c044)
  %v1_c068 = urem i32 %v6_c05c, 256
  store i32 %v1_c068, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c074 = load i32, i32* @r4, align 4
  store i32 %v0_c074, i32* %r0.global-to-local, align 4
  %v0_c078 = load i32, i32* @r5, align 4
  store i32 %v0_c078, i32* %r1.global-to-local, align 4
  %v5_c07c = trunc i32 %v6_c05c to i8
  %v6_c080 = inttoptr i32 %v0_c078 to i32*
  %v7_c080 = call i32 @function_83ec(i32 %v0_c074, i32* %v6_c080, i32 3, i32 65535, i32 %v6_c05c)
  %v0_c084 = load i32, i32* @r5, align 4
  store i32 %v0_c084, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_c090 = load i32, i32* @r4, align 4
  store i32 %v0_c090, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_c098 = inttoptr i32 %v0_c084 to i32*
  %v6_c098 = call i32 @function_83ec(i32 %v0_c090, i32* %v5_c098, i32 4, i32 64, i32 %v7_c080)
  %v1_c0a0 = urem i32 %v6_c098, 256
  store i32 %v1_c0a0, i32* %ip.global-to-local, align 4
  %v0_c0a4 = load i32, i32* @r5, align 4
  store i32 %v0_c0a4, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_c0ac = load i32, i32* @r6, align 4
  store i32 %v0_c0ac, i32* %r3.global-to-local, align 4
  %v0_c0b0 = load i32, i32* @r4, align 4
  store i32 %v0_c0b0, i32* %r0.global-to-local, align 4
  %sext38 = mul i32 %v6_c098, 16777216
  %v5_c0b8 = sdiv i32 %sext38, 16777216
  %v6_c0b8 = inttoptr i32 %v0_c0a4 to i32*
  %v7_c0b8 = call i32 @function_83ec(i32 %v0_c0b0, i32* %v6_c0b8, i32 5, i32 %v0_c0ac, i32 %v5_c0b8)
  %v1_c0c4 = urem i32 %v7_c0b8, 256
  store i32 %v1_c0c4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c0d0 = load i32, i32* @r4, align 4
  store i32 %v0_c0d0, i32* %r0.global-to-local, align 4
  %v0_c0d4 = load i32, i32* @r5, align 4
  store i32 %v0_c0d4, i32* %r1.global-to-local, align 4
  %v5_c0dc = inttoptr i32 %v0_c0d4 to i32*
  %v6_c0dc = call i32 @function_83ec(i32 %v0_c0d0, i32* %v5_c0dc, i32 6, i32 65535, i32 %v1_c0c4)
  %v0_c0e0 = load i32, i32* @r5, align 4
  store i32 %v0_c0e0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c0ec = load i32, i32* @r4, align 4
  store i32 %v0_c0ec, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_c0f4 = inttoptr i32 %v0_c0e0 to i32*
  %v6_c0f4 = call i32 @function_83ec(i32 %v0_c0ec, i32* %v5_c0f4, i32 7, i32 53, i32 %v6_c0dc)
  %v0_c100 = load i32, i32* @r5, align 4
  store i32 %v0_c100, i32* %r1.global-to-local, align 4
  %v0_c104 = load i32, i32* @r4, align 4
  store i32 %v0_c104, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_c110 = inttoptr i32 %v0_c100 to i32*
  %v6_c110 = call i32 @function_83ec(i32 %v0_c104, i32* %v5_c110, i32 9, i32 65535, i32 %v6_c0f4)
  %v0_c114 = load i32, i32* @r5, align 4
  store i32 %v0_c114, i32* %r1.global-to-local, align 4
  %v0_c11c = load i32, i32* @r6, align 4
  store i32 %v0_c11c, i32* %r2.global-to-local, align 4
  %v0_c120 = load i32, i32* @r4, align 4
  store i32 %v0_c120, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_c128 = inttoptr i32 %v0_c114 to i32*
  %v6_c128 = call i32 @function_83ec(i32 %v0_c120, i32* %v5_c128, i32 %v0_c11c, i32 12, i32 %v6_c110)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_c130 = load i32, i32* @r6, align 4
  store i32 %v0_c130, i32* %r3.global-to-local, align 4
  %v0_c134 = load i32, i32* @r5, align 4
  store i32 %v0_c134, i32* %r1.global-to-local, align 4
  %v0_c13c = load i32, i32* @r4, align 4
  store i32 %v0_c13c, i32* %r0.global-to-local, align 4
  %v5_c140 = inttoptr i32 %v0_c134 to i32*
  %v6_c140 = call i32 @function_81cc(i32 %v0_c13c, i32* %v5_c140, i32 8, i32 %v0_c130, i32 %v6_c128)
  store i32 %v6_c140, i32* @r7, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v1_c14c = call i32 @function_10f18(i32 11)
  %v0_c150 = load i32, i32* @r6, align 4
  store i32 %v0_c150, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v2_c158 = inttoptr i32 %v0_c150 to i32*
  %v3_c158 = call i32 @function_10e34(i32 11, i32* %v2_c158)
  store i32 %v3_c158, i32* %r0.global-to-local, align 4
  %v0_c15c = load i32, i32* @r6, align 4
  store i32 %v0_c15c, i32* %r1.global-to-local, align 4
  %v2_c160 = inttoptr i32 %v3_c158 to i8*
  %v3_c160 = call i32 @function_11d94(i8* %v2_c160, i32 %v0_c15c)
  store i32 %v3_c160, i32* @r4, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v1_c16c = call i32 @function_10e60(i32 11)
  store i32 %v1_c16c, i32* %r0.global-to-local, align 4
  %v0_c170 = load i32, i32* @r4, align 4
  %v1_c170 = load i32, i32* @r6, align 4
  %v9_c170 = icmp eq i32 %v0_c170, %v1_c170
  store i1 %v9_c170, i1* %cpsr_z.global-to-local, align 1
  %v5_c174 = icmp slt i32 %v0_c170, %v1_c170
  br i1 %v5_c174, label %dec_label_pc_c248, label %dec_label_pc_c178

dec_label_pc_c178:                                ; preds = %dec_label_pc_c010
  %v2_c17c = ptrtoint i32* %stack_var_-2120 to i32
  store i32 %v2_c17c, i32* %sl.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_c17c, i32* %r1.global-to-local, align 4
  store i32 %v0_c170, i32* %r0.global-to-local, align 4
  %v4_c18c = call i32 @function_11e30(i32 %v0_c170, i32* nonnull %stack_var_-2120, i32 2048)
  store i32 %v4_c18c, i32* @r5, align 4
  %v0_c194 = load i32, i32* @r4, align 4
  store i32 %v0_c194, i32* %r0.global-to-local, align 4
  %v1_c198 = call i32 @function_11c68(i32 %v0_c194)
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_c1a0 = call i32 @function_10f18(i32 12)
  %v0_c1a4 = load i32, i32* @r6, align 4
  store i32 %v0_c1a4, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_c1ac = inttoptr i32 %v0_c1a4 to i32*
  %v3_c1ac = call i32 @function_10e34(i32 12, i32* %v2_c1ac)
  %v0_c1b0 = load i32, i32* @r5, align 4
  store i32 %v0_c1b0, i32* @r1, align 4
  store i32 %v3_c1ac, i32* %r2.global-to-local, align 4
  store i32 %v2_c17c, i32* %r0.global-to-local, align 4
  %v3_c1bc = bitcast i32* %stack_var_-2120 to i8*
  %v4_c1bc = call i32 @function_1173c(i8* %v3_c1bc, i32 %v0_c1b0, i32 %v3_c1ac)
  store i32 %v4_c1bc, i32* %r8.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_c1c8 = call i32 @function_10e60(i32 12)
  store i32 %v1_c1c8, i32* %r0.global-to-local, align 4
  %v7_c1cc = icmp eq i32 %v4_c1bc, -1
  store i1 %v7_c1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c1cc, label %dec_label_pc_c248, label %dec_label_pc_c1d4

dec_label_pc_c1d4:                                ; preds = %dec_label_pc_c178
  %v0_c1d4 = load i32, i32* @r5, align 4
  %v9_c1d4 = icmp eq i32 %v0_c1d4, %v4_c1bc
  store i1 %v9_c1d4, i1* %cpsr_z.global-to-local, align 1
  %v7_c1d8 = icmp sgt i32 %v0_c1d4, %v4_c1bc
  br i1 %v7_c1d8, label %dec_label_pc_c1dc, label %dec_label_pc_c248

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1d4
  %v2_c1d4 = sub i32 %v0_c1d4, %v4_c1bc
  store i32 %v2_c1d4, i32* %r3.global-to-local, align 4
  %v2_c1e4 = ptrtoint i32* %stack_var_-72 to i32
  %v0_c1e8 = load i32, i32* @r6, align 4
  store i32 %v0_c1e8, i32* %r1.global-to-local, align 4
  store i32 %v4_c1bc, i32* %r2.global-to-local, align 4
  %v0_c1f4 = load i32, i32* %sl.global-to-local, align 4
  %v2_c1f4 = add i32 %v0_c1f4, %v4_c1bc
  store i32 %v2_c1f4, i32* %r0.global-to-local, align 4
  store i32 %v2_c1e4, i32* @r4, align 4
  %v1_c204 = add i32 %v0_c1d4, -1
  br label %dec_label_pc_c1fc

dec_label_pc_c1fc:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c1dc
  %v0_c240 = phi i32 [ %v1_c240, %dec_label_pc_c238 ], [ %v2_c1e4, %dec_label_pc_c1dc ]
  %v0_c238 = phi i32 [ %v1_c238, %dec_label_pc_c238 ], [ %v4_c1bc, %dec_label_pc_c1dc ]
  %v0_c220 = phi i32 [ %v0_c22045, %dec_label_pc_c238 ], [ %v0_c1e8, %dec_label_pc_c1dc ]
  %v0_c200 = phi i32 [ %v0_c20041, %dec_label_pc_c238 ], [ %v0_c1e8, %dec_label_pc_c1dc ]
  %v0_c208 = phi i32 [ %v1_c208, %dec_label_pc_c238 ], [ %v2_c1f4, %dec_label_pc_c1dc ]
  %v1_c1fc = inttoptr i32 %v0_c208 to i8*
  %v2_c1fc = load i8, i8* %v1_c1fc, align 1
  %v3_c1fc = zext i8 %v2_c1fc to i32
  store i32 %v3_c1fc, i32* %r3.global-to-local, align 4
  %v2_c200 = icmp eq i32 %v0_c200, 0
  store i1 %v2_c200, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c204, i32* %lr.global-to-local, align 4
  %v1_c208 = add i32 %v0_c208, 1
  store i32 %v1_c208, i32* %r0.global-to-local, align 4
  %v1_c20c = add nsw i32 %v3_c1fc, -48
  store i32 %v1_c20c, i32* %ip.global-to-local, align 4
  br i1 %v2_c200, label %dec_label_pc_c214, label %dec_label_pc_c224

dec_label_pc_c214:                                ; preds = %dec_label_pc_c1fc
  %v7_c214 = icmp eq i8 %v2_c1fc, 9
  store i1 %v7_c214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c214, label %dec_label_pc_c238, label %bb

bb:                                               ; preds = %dec_label_pc_c214
  %v8_c218 = icmp eq i8 %v2_c1fc, 32
  store i1 %v8_c218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c218, label %dec_label_pc_c238, label %dec_label_pc_c220

dec_label_pc_c220:                                ; preds = %bb
  %v1_c220 = add i32 %v0_c220, 1
  store i32 %v1_c220, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c224

dec_label_pc_c224:                                ; preds = %dec_label_pc_c1fc, %dec_label_pc_c220
  %v0_c22046 = phi i32 [ %v0_c220, %dec_label_pc_c1fc ], [ %v1_c220, %dec_label_pc_c220 ]
  %v0_c20042 = phi i32 [ %v0_c200, %dec_label_pc_c1fc ], [ %v1_c220, %dec_label_pc_c220 ]
  %v7_c224 = icmp eq i8 %v2_c1fc, 46
  store i1 %v7_c224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c224, label %dec_label_pc_c230, label %bb129

bb129:                                            ; preds = %dec_label_pc_c224
  %v3_c228 = icmp ugt i32 %v1_c20c, 8
  %v8_c228 = icmp eq i32 %v1_c20c, 9
  store i1 %v8_c228, i1* %cpsr_z.global-to-local, align 1
  %v2_c22c = xor i1 %v8_c228, true
  %v3_c22c = and i1 %v3_c228, %v2_c22c
  br i1 %v3_c22c, label %dec_label_pc_c778, label %dec_label_pc_c230

dec_label_pc_c230:                                ; preds = %dec_label_pc_c224, %bb129
  %v9_c230 = icmp eq i32 %v0_c238, %v1_c204
  store i1 %v9_c230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c230, label %dec_label_pc_c778, label %dec_label_pc_c238

dec_label_pc_c238:                                ; preds = %dec_label_pc_c214, %dec_label_pc_c230, %bb
  %v0_c22045 = phi i32 [ %v0_c220, %dec_label_pc_c214 ], [ %v0_c22046, %dec_label_pc_c230 ], [ %v0_c220, %bb ]
  %v0_c20041 = phi i32 [ 0, %dec_label_pc_c214 ], [ %v0_c20042, %dec_label_pc_c230 ], [ 0, %bb ]
  %v1_c238 = add i32 %v0_c238, 1
  store i32 %v1_c238, i32* %r2.global-to-local, align 4
  %v9_c23c = icmp eq i32 %v0_c1d4, %v1_c238
  store i1 %v9_c23c, i1* %cpsr_z.global-to-local, align 1
  %v1_c240 = add i32 %v0_c240, 1
  store i32 %v1_c240, i32* @r4, align 4
  br i1 %v9_c23c, label %dec_label_pc_c248, label %dec_label_pc_c1fc

dec_label_pc_c248:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c1d4, %dec_label_pc_c178, %dec_label_pc_c010
  %v0_c248 = call i32 @function_db88()
  %v1_c24c = urem i32 %v0_c248, 4
  store i32 %v1_c24c, i32* %r0.global-to-local, align 4
  %v2_c250 = icmp eq i32 %v1_c24c, 3
  store i1 %v2_c250, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_c248 to i2
  switch i2 %trunc, label %dec_label_pc_c27424 [
    i2 0, label %dec_label_pc_c7b0
    i2 1, label %dec_label_pc_c26c
    i2 -2, label %dec_label_pc_c7a0
    i2 -1, label %dec_label_pc_c7c4
  ]

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c248
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c274

dec_label_pc_c27424:                              ; preds = %dec_label_pc_c248
  unreachable

dec_label_pc_c274:                                ; preds = %dec_label_pc_c7c4, %dec_label_pc_c7b0, %dec_label_pc_c7a0, %dec_label_pc_c778, %dec_label_pc_c26c
  %stack_var_-2188.0 = phi i8 [ %tmp79, %dec_label_pc_c7c4 ], [ %tmp79, %dec_label_pc_c7a0 ], [ %tmp79, %dec_label_pc_c26c ], [ %tmp79, %dec_label_pc_c7b0 ], [ %v2_c794, %dec_label_pc_c778 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c278 = call i32 @function_11eb8(i32* null)
  %v0_c27c = load i32, i32* @r7, align 4
  %v2_c27c = icmp eq i32 %v0_c27c, 0
  store i1 %v2_c27c, i1* %cpsr_z.global-to-local, align 1
  %v1_c280 = load i32, i32* %fp.global-to-local, align 4
  %v2_c280 = add i32 %v1_c280, %v2_c278
  store i32 %v2_c280, i32* %r0.global-to-local, align 4
  br i1 %v2_c27c, label %dec_label_pc_c754, label %dec_label_pc_c28c

dec_label_pc_c28c:                                ; preds = %dec_label_pc_c274
  store i32 %v0_c27c, i32* %r0.global-to-local, align 4
  %v1_c290 = inttoptr i32 %v0_c27c to i8*
  %v2_c290 = call i32 @function_113e8(i8* %v1_c290)
  %v3_c290 = inttoptr i32 %v2_c290 to i8*
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_c2a4 = call i32 @function_124b0(i32 2, i32 3, i32 17)
  store i32 %v3_c2a4, i32* %r0.global-to-local, align 4
  %v7_c2a8 = icmp eq i32 %v3_c2a4, -1
  store i1 %v7_c2a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c2a8, label %dec_label_pc_c754, label %dec_label_pc_c2b4

dec_label_pc_c2b4:                                ; preds = %dec_label_pc_c28c
  store i32 1, i32* %lr.global-to-local, align 4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c2c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c2c0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_c2d4 = call i32 @function_12480(i32 %v3_c2a4, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_c2d4, i32* %r0.global-to-local, align 4
  %v7_c2d8 = icmp eq i32 %v6_c2d4, -1
  store i1 %v7_c2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c2d8, label %dec_label_pc_c74c, label %dec_label_pc_c2e0

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c2b4
  %v3_c2e8 = mul i32 %v7_c080, 65536
  store i32 %v3_c2e8, i32* %r8.global-to-local, align 4
  %v3_c2f4 = mul i32 %v6_c0dc, 65536
  store i32 %v3_c2f4, i32* %r0.global-to-local, align 4
  %v3_c2f8 = mul i32 %v6_c0f4, 65536
  store i32 %v3_c2f8, i32* %sl.global-to-local, align 4
  %v3_c2fc = mul i32 %v6_c110, 65536
  store i32 %v3_c2fc, i32* %fp.global-to-local, align 4
  %v2_c300 = icmp eq i32 %v1_c01c, 0
  store i1 %v2_c300, i1* %cpsr_z.global-to-local, align 1
  %v1_c304 = urem i32 %v6_c128, 256
  store i32 %v1_c304, i32* @sb, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c30c = urem i32 %v7_c080, 65536
  %v3_c310 = urem i32 %v6_c0dc, 65536
  store i32 %v3_c310, i32* %ip.global-to-local, align 4
  %v3_c314 = urem i32 %v6_c0f4, 65536
  store i32 %v3_c314, i32* %lr.global-to-local, align 4
  %v3_c318 = urem i32 %v6_c110, 65536
  store i32 %v3_c318, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_c300, label %dec_label_pc_c2e0.dec_label_pc_c59c.preheader_crit_edge, label %dec_label_pc_c334

dec_label_pc_c2e0.dec_label_pc_c59c.preheader_crit_edge: ; preds = %dec_label_pc_c2e0
  %.pre = sext i8 %stack_var_-2188.0 to i32
  br label %dec_label_pc_c59c.preheader

dec_label_pc_c334:                                ; preds = %dec_label_pc_c2e0
  %v2_c33c = add i32 %v2_c290, %v1_c304
  %v3_c340 = mul i32 %v2_c33c, 65536
  %v1_c344 = add i32 %v3_c340, 1769472
  %v1_c348 = add i32 %v3_c340, 3080192
  %v1_c364 = urem i32 %v6_c110, 256
  %tmp130 = udiv i32 %v6_c0dc, 256
  %v3_c368 = urem i32 %tmp130, 256
  %v1_c36c = urem i32 %v6_c0dc, 256
  %v1_c360 = mul i32 %v7_c080, 256
  %v3_c374 = and i32 %v1_c360, 65280
  store i32 %v3_c374, i32* %r1.global-to-local, align 4
  %v1_c37c = urem i32 %v6_c0f4, 256
  %tmp131 = udiv i32 %v7_c080, 256
  %v3_c384 = udiv i32 %v1_c344, 256
  %v1_c38c = and i32 %v3_c384, 65280
  %tmp132 = udiv i32 %v6_c0f4, 256
  %v4_c39c = udiv i32 %v1_c344, 16777216
  %v5_c39c = or i32 %v1_c38c, %v4_c39c
  store i32 %v5_c39c, i32* @r6, align 4
  %v3_c3a4 = sdiv i32 %v1_c348, 16777216
  %sext39 = mul i32 %tmp131, 16777216
  %v7_c3a4 = sdiv i32 %sext39, 16777216
  %v3_c3a8 = mul nuw nsw i32 %v1_c364, 256
  %v4_c3b0 = mul nuw nsw i32 %v1_c36c, 256
  %v5_c3b0 = or i32 %v4_c3b0, %v3_c368
  store i32 %v5_c3b0, i32* %r0.global-to-local, align 4
  %v3_c3b4 = ashr i32 %v1_c348, 31
  %tmp133 = udiv i32 %v6_c110, 256
  %v4_c3b8 = urem i32 %tmp133, 256
  %v5_c3b8 = or i32 %v4_c3b8, %v3_c3a8
  store i32 %v5_c3b8, i32* @r5, align 4
  %v3_c3bc = ashr i32 %sext39, 31
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_c3c4 = add i32 %v2_c290, 1
  store i32 %v2_c3c4, i32* %fp.global-to-local, align 4
  store i32 %v1_c37c, i32* %r3.global-to-local, align 4
  store i32 %v1_c36c, i32* %r2.global-to-local, align 4
  %v3_c3d868 = udiv i32 %v1_c38c, 256
  store i32 %v3_c3d868, i32* %ip.global-to-local, align 4
  store i32 %v1_c364, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  %v5_c3e4 = trunc i32 %tmp130 to i8
  store i32 0, i32* %sl.global-to-local, align 4
  %sext18 = mul i32 %v1_c344, 256
  %v4_c494 = sdiv i32 %sext18, 16777216
  %sext20 = mul i32 %v6_c0f4, 16777216
  %v4_c4b0 = sdiv i32 %sext20, 16777216
  %sext21 = mul nuw i32 %v4_c39c, 16777216
  %v4_c4b4 = sdiv i32 %sext21, 16777216
  %v4_c4c8 = sext i8 %stack_var_-2188.0 to i32
  %sext23 = mul i32 %v6_c110, 16777216
  %v4_c4d4 = sdiv i32 %sext23, 16777216
  %v1_c458 = trunc i32 %v3_c3b4 to i8
  %extract.t = trunc i32 %v3_c3bc to i8
  %v1_c4b8 = trunc i32 %tmp132 to i8
  %v1_c4e0 = trunc i32 %v6_c0dc to i8
  br label %dec_label_pc_c404

dec_label_pc_c404:                                ; preds = %dec_label_pc_c564, %dec_label_pc_c334
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_c40c = call i32 @function_12630(i32 600, i32 1)
  store i32 %v2_c40c, i32* %r0.global-to-local, align 4
  store i32 %v2_c044, i32* %r2.global-to-local, align 4
  %v3_c414 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c414, i32* %r3.global-to-local, align 4
  %v2_c418 = load i32, i32* @r4, align 4
  %v5_c418 = mul i32 %v2_c418, 4
  %v6_c418 = add i32 %v5_c418, %v2_c044
  %v7_c418 = inttoptr i32 %v6_c418 to i32*
  store i32 %v2_c40c, i32* %v7_c418, align 4
  %v0_c41c = load i32, i32* %r2.global-to-local, align 4
  %v1_c41c = load i32, i32* %r3.global-to-local, align 4
  %v4_c41c = mul i32 %v1_c41c, 4
  %v5_c41c = add i32 %v4_c41c, %v0_c41c
  %v6_c41c = inttoptr i32 %v5_c41c to i32*
  %v7_c41c = load i32, i32* %v6_c41c, align 4
  store i32 %v7_c41c, i32* %r1.global-to-local, align 4
  %v1_c420 = inttoptr i32 %v7_c41c to i8*
  %v2_c420 = load i8, i8* %v1_c420, align 1
  %tmp = urem i8 %v2_c420, 16
  %v1_c424 = zext i8 %tmp to i32
  %v1_c428 = or i32 %v1_c424, 64
  store i32 %v1_c428, i32* %r2.global-to-local, align 4
  %v1_c42c = trunc i32 %v1_c428 to i8
  store i8 %v1_c42c, i8* %v1_c420, align 1
  %v0_c430 = load i32, i32* %r1.global-to-local, align 4
  %v1_c430 = inttoptr i32 %v0_c430 to i8*
  %v2_c430 = load i8, i8* %v1_c430, align 1
  %v1_c434 = and i8 %v2_c430, -16
  %v1_c438 = or i8 %v1_c434, 5
  store i32 %v1_c0c4, i32* %ip.global-to-local, align 4
  store i8 %v1_c438, i8* %v1_c430, align 1
  %v2_c448 = load i32, i32* %r1.global-to-local, align 4
  %v3_c448 = add i32 %v2_c448, 1
  %v4_c448 = inttoptr i32 %v3_c448 to i8*
  store i8 %v5_c07c, i8* %v4_c448, align 1
  store i32 %v3_c3b4, i32* %r3.global-to-local, align 4
  store i32 %v3_c3a4, i32* %r2.global-to-local, align 4
  %v0_c454 = load i32, i32* %ip.global-to-local, align 4
  %v2_c454 = icmp eq i32 %v0_c454, 0
  store i1 %v2_c454, i1* %cpsr_z.global-to-local, align 1
  %v2_c458 = load i32, i32* %r1.global-to-local, align 4
  %v3_c458 = add i32 %v2_c458, 3
  %v4_c458 = inttoptr i32 %v3_c458 to i8*
  store i8 %v1_c458, i8* %v4_c458, align 1
  %v0_c45c = load i32, i32* %r2.global-to-local, align 4
  %v1_c45c = trunc i32 %v0_c45c to i8
  %v2_c45c = load i32, i32* %r1.global-to-local, align 4
  %v3_c45c = add i32 %v2_c45c, 2
  %v4_c45c = inttoptr i32 %v3_c45c to i8*
  store i8 %v1_c45c, i8* %v4_c45c, align 1
  store i32 %v3_c3bc, i32* %lr.global-to-local, align 4
  store i32 %v5_c0b8, i32* %r2.global-to-local, align 4
  %v0_c468 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c468, label %.thread25, label %bb134

bb134:                                            ; preds = %dec_label_pc_c404
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c46c = load i32, i32* %r1.global-to-local, align 4
  %v4_c46c = add i32 %v3_c46c, 6
  %v5_c46c = inttoptr i32 %v4_c46c to i8*
  store i8 64, i8* %v5_c46c, align 1
  %v0_c474.pre = load i32, i32* %lr.global-to-local, align 4
  %extract.t69 = trunc i32 %v0_c474.pre to i8
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_c404, %bb134
  %v0_c474.off0 = phi i8 [ %extract.t, %dec_label_pc_c404 ], [ %extract.t69, %bb134 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_c474 = load i32, i32* %r1.global-to-local, align 4
  %v3_c474 = add i32 %v2_c474, 5
  %v4_c474 = inttoptr i32 %v3_c474 to i8*
  store i8 %v0_c474.off0, i8* %v4_c474, align 1
  store i32 %v7_c3a4, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d258.33 to i32), i32* %lr.global-to-local, align 4
  %v0_c480 = load i32, i32* %r2.global-to-local, align 4
  %v1_c480 = trunc i32 %v0_c480 to i8
  %v2_c480 = load i32, i32* %r1.global-to-local, align 4
  %v3_c480 = add i32 %v2_c480, 8
  %v4_c480 = inttoptr i32 %v3_c480 to i8*
  store i8 %v1_c480, i8* %v4_c480, align 1
  %v0_c484 = load i32, i32* %r3.global-to-local, align 4
  %v1_c484 = trunc i32 %v0_c484 to i8
  %v2_c484 = load i32, i32* %r1.global-to-local, align 4
  %v3_c484 = add i32 %v2_c484, 9
  %v4_c484 = inttoptr i32 %v3_c484 to i8*
  store i8 %v1_c484, i8* %v4_c484, align 1
  %v0_c488 = load i32, i32* %r1.global-to-local, align 4
  %v1_c488 = add i32 %v0_c488, 41
  %v2_c48c = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_c48c, i32* %r3.global-to-local, align 4
  %v0_c490 = load i32, i32* @sb, align 4
  %v2_c490 = add i32 %v1_c488, %v0_c490
  store i32 %v2_c490, i32* %r4.global-to-local, align 4
  store i32 %v4_c494, i32* %r2.global-to-local, align 4
  %v1_c498 = add i32 %v0_c488, 20
  store i32 %v1_c498, i32* %r0.global-to-local, align 4
  %v0_c49c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c49c, label %bb136, label %bb135

bb135:                                            ; preds = %.thread25
  %v1_c49c = load i32, i32* %sl.global-to-local, align 4
  %v2_c49c = trunc i32 %v1_c49c to i8
  %v4_c49c = add i32 %v0_c488, 7
  %v5_c49c = inttoptr i32 %v4_c49c to i8*
  store i8 %v2_c49c, i8* %v5_c49c, align 1
  %v2_c4a0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb136

bb136:                                            ; preds = %.thread25, %bb135
  %v2_c4a0 = phi i32 [ %v0_c488, %.thread25 ], [ %v2_c4a0.pre, %bb135 ]
  %v0_c4a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_c4a0 = trunc i32 %v0_c4a0 to i8
  %v3_c4a0 = add i32 %v2_c4a0, 4
  %v4_c4a0 = inttoptr i32 %v3_c4a0 to i8*
  store i8 %v1_c4a0, i8* %v4_c4a0, align 1
  %v0_c4a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c4a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_c4a4 = add i32 %v1_c4a4, 12
  %v3_c4a4 = inttoptr i32 %v2_c4a4 to i32*
  store i32 %v0_c4a4, i32* %v3_c4a4, align 4
  %v0_c4a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c4a8 = trunc i32 %v0_c4a8 to i8
  %v2_c4a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_c4a8 = add i32 %v2_c4a8, 5
  %v4_c4a8 = inttoptr i32 %v3_c4a8 to i8*
  store i8 %v1_c4a8, i8* %v4_c4a8, align 1
  store i32 %v4_c4b0, i32* %lr.global-to-local, align 4
  store i32 %v4_c4b4, i32* %r2.global-to-local, align 4
  %v2_c4b8 = load i32, i32* %r0.global-to-local, align 4
  %v3_c4b8 = add i32 %v2_c4b8, 2
  %v4_c4b8 = inttoptr i32 %v3_c4b8 to i8*
  store i8 %v1_c4b8, i8* %v4_c4b8, align 1
  %v0_c4bc = load i32, i32* %lr.global-to-local, align 4
  %v1_c4bc = trunc i32 %v0_c4bc to i8
  %v2_c4bc = load i32, i32* %r0.global-to-local, align 4
  %v3_c4bc = add i32 %v2_c4bc, 3
  %v4_c4bc = inttoptr i32 %v3_c4bc to i8*
  store i8 %v1_c4bc, i8* %v4_c4bc, align 1
  %v0_c4c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c4c0 = trunc i32 %v0_c4c0 to i8
  %v2_c4c0 = load i32, i32* %r0.global-to-local, align 4
  %v3_c4c0 = add i32 %v2_c4c0, 4
  %v4_c4c0 = inttoptr i32 %v3_c4c0 to i8*
  store i8 %v1_c4c0, i8* %v4_c4c0, align 1
  store i32 %v4_c4c8, i32* %lr.global-to-local, align 4
  %v2_c4cc = load i32, i32* %r1.global-to-local, align 4
  %v3_c4cc = add i32 %v2_c4cc, 20
  %v4_c4cc = inttoptr i32 %v3_c4cc to i8*
  store i8 %v5_c3e4, i8* %v4_c4cc, align 1
  store i32 %v4_c4d4, i32* %r3.global-to-local, align 4
  %v0_c4d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c4d8 = add i32 %v0_c4d8, 28
  store i32 %v1_c4d8, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  %v2_c4e0 = load i32, i32* %r0.global-to-local, align 4
  %v3_c4e0 = add i32 %v2_c4e0, 1
  %v4_c4e0 = inttoptr i32 %v3_c4e0 to i8*
  store i8 %v1_c4e0, i8* %v4_c4e0, align 1
  %v0_c4e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_c4e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_c4e4 = add i32 %v1_c4e4, 16
  %v3_c4e4 = inttoptr i32 %v2_c4e4 to i32*
  store i32 %v0_c4e4, i32* %v3_c4e4, align 4
  %v0_c4e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_c4e8 = trunc i32 %v0_c4e8 to i8
  %v2_c4e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_c4e8 = add i32 %v2_c4e8, 5
  %v4_c4e8 = inttoptr i32 %v3_c4e8 to i8*
  store i8 %v1_c4e8, i8* %v4_c4e8, align 1
  %v0_c4ec = load i32, i32* @r5, align 4
  %v1_c4ec = trunc i32 %v0_c4ec to i8
  %v2_c4ec = load i32, i32* %r1.global-to-local, align 4
  %v3_c4ec = add i32 %v2_c4ec, 28
  %v4_c4ec = inttoptr i32 %v3_c4ec to i8*
  store i8 %v1_c4ec, i8* %v4_c4ec, align 1
  %v0_c4f0 = load i32, i32* %r8.global-to-local, align 4
  %v1_c4f0 = trunc i32 %v0_c4f0 to i8
  %v2_c4f0 = load i32, i32* %ip.global-to-local, align 4
  %v3_c4f0 = add i32 %v2_c4f0, 2
  %v4_c4f0 = inttoptr i32 %v3_c4f0 to i8*
  store i8 %v1_c4f0, i8* %v4_c4f0, align 1
  %v0_c4f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c4f4 = trunc i32 %v0_c4f4 to i8
  %v2_c4f4 = load i32, i32* %ip.global-to-local, align 4
  %v3_c4f4 = add i32 %v2_c4f4, 1
  %v4_c4f4 = inttoptr i32 %v3_c4f4 to i8*
  store i8 %v1_c4f4, i8* %v4_c4f4, align 1
  %v0_c4f8 = load i32, i32* @r6, align 4
  %v1_c4f8 = trunc i32 %v0_c4f8 to i8
  %v2_c4f8 = load i32, i32* %ip.global-to-local, align 4
  %v3_c4f8 = add i32 %v2_c4f8, 3
  %v4_c4f8 = inttoptr i32 %v3_c4f8 to i8*
  store i8 %v1_c4f8, i8* %v4_c4f8, align 1
  %v0_c4fc = load i32, i32* @r6, align 4
  %v1_c4fc = trunc i32 %v0_c4fc to i8
  %v2_c4fc = load i32, i32* %ip.global-to-local, align 4
  %v3_c4fc = add i32 %v2_c4fc, 4
  %v4_c4fc = inttoptr i32 %v3_c4fc to i8*
  store i8 %v1_c4fc, i8* %v4_c4fc, align 1
  %v0_c500 = load i32, i32* %r4.global-to-local, align 4
  %v1_c500 = add i32 %v0_c500, 1
  store i32 %v1_c500, i32* %r0.global-to-local, align 4
  %v0_c504 = load i32, i32* @sb, align 4
  %v1_c504 = trunc i32 %v0_c504 to i8
  %v2_c504 = load i32, i32* %r1.global-to-local, align 4
  %v3_c504 = add i32 %v2_c504, 40
  %v4_c504 = inttoptr i32 %v3_c504 to i8*
  store i8 %v1_c504, i8* %v4_c504, align 1
  %v0_c508 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c508, i32* %r2.global-to-local, align 4
  %v0_c50c = load i32, i32* @r7, align 4
  store i32 %v0_c50c, i32* %r1.global-to-local, align 4
  %v3_c510 = call i32 @function_11464(i32 %v1_c500, i32 %v0_c50c, i32 %v0_c508)
  store i32 %v3_c510, i32* %r0.global-to-local, align 4
  %v1_c518 = load i32, i32* @r6, align 4
  %v10_c518 = inttoptr i32 %v1_c518 to i8*
  %v15_c518 = icmp eq i32 %v2_c290, %v1_c518
  store i1 %v15_c518, i1* %cpsr_z.global-to-local, align 1
  %v9_c51c = icmp sgt i8* %v3_c290, %v10_c518
  store i32 %v1_c518, i32* %lr.global-to-local, align 4
  %v0_c52c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c52c, i32* %ip.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_c518 to i8
  br i1 %v9_c51c, label %dec_label_pc_c528, label %dec_label_pc_c564

dec_label_pc_c528:                                ; preds = %bb136
  store i32 %v1_c518, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c534

dec_label_pc_c534:                                ; preds = %.thread37, %dec_label_pc_c528
  %v1_c53c = phi i32 [ %v1_c53c57, %.thread37 ], [ %v1_c518, %dec_label_pc_c528 ]
  %v0_c534 = phi i32 [ %v1_c550, %.thread37 ], [ %v1_c518, %dec_label_pc_c528 ]
  %v1_c534 = load i32, i32* @r7, align 4
  %v2_c534 = add i32 %v1_c534, %v0_c534
  %v3_c534 = inttoptr i32 %v2_c534 to i8*
  %v4_c534 = load i8, i8* %v3_c534, align 1
  %v6_c534 = zext i8 %v4_c534 to i32
  store i32 %v6_c534, i32* %r3.global-to-local, align 4
  %v7_c538 = icmp eq i8 %v4_c534, 46
  store i1 %v7_c538, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c538, label %bb137, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_c534
  %v1_c54035 = add i32 %v1_c53c, 1
  store i32 %v1_c54035, i32* %r2.global-to-local, align 4
  br label %bb138

bb137:                                            ; preds = %dec_label_pc_c534
  %v2_c53c = trunc i32 %v1_c53c to i8
  %v3_c53c = load i32, i32* %ip.global-to-local, align 4
  %v4_c53c = inttoptr i32 %v3_c53c to i8*
  store i8 %v2_c53c, i8* %v4_c53c, align 1
  %v0_c544.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_c540 = load i32, i32* %lr.global-to-local, align 4
  %v1_c540 = add i32 %v0_c540, 1
  store i32 %v1_c540, i32* %r2.global-to-local, align 4
  br i1 %v0_c544.pr, label %bb139, label %bb138

bb138:                                            ; preds = %.thread33, %bb137
  %v1_c54036 = phi i32 [ %v1_c54035, %.thread33 ], [ %v1_c540, %bb137 ]
  %v2_c544 = urem i32 %v1_c54036, 256
  store i32 %v2_c544, i32* %lr.global-to-local, align 4
  br label %bb139

bb139:                                            ; preds = %bb137, %bb138
  %v1_c53c58 = phi i32 [ %v0_c540, %bb137 ], [ %v2_c544, %bb138 ]
  %v0_c558.pr = phi i1 [ true, %bb137 ], [ false, %bb138 ]
  store i32 %v2_c290, i32* %r2.global-to-local, align 4
  %v0_c54c = load i32, i32* %r4.global-to-local, align 4
  %v1_c54c = load i32, i32* %r1.global-to-local, align 4
  %v2_c54c = add i32 %v1_c54c, %v0_c54c
  store i32 %v2_c54c, i32* %r0.global-to-local, align 4
  %v1_c550 = add i32 %v1_c54c, 1
  store i32 %v1_c550, i32* %r1.global-to-local, align 4
  br i1 %v0_c558.pr, label %bb140, label %.thread37

bb140:                                            ; preds = %bb139
  %v2_c554 = add i32 %v2_c54c, 1
  store i32 %v2_c554, i32* %ip.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %.thread37

.thread37:                                        ; preds = %bb139, %bb140
  %v1_c53c57 = phi i32 [ %v1_c53c58, %bb139 ], [ 0, %bb140 ]
  %v9_c55c = icmp eq i32 %v2_c290, %v1_c550
  store i1 %v9_c55c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c55c, label %dec_label_pc_c564.loopexit, label %dec_label_pc_c534

dec_label_pc_c564.loopexit:                       ; preds = %.thread37
  %v2_c564.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t70 = trunc i32 %v1_c53c57 to i8
  br label %dec_label_pc_c564

dec_label_pc_c564:                                ; preds = %dec_label_pc_c564.loopexit, %bb136
  %v2_c564 = phi i32 [ %v2_c564.pre, %dec_label_pc_c564.loopexit ], [ %v0_c52c, %bb136 ]
  %v0_c564.off0 = phi i8 [ %extract.t70, %dec_label_pc_c564.loopexit ], [ %extract.t71, %bb136 ]
  %v3_c564 = inttoptr i32 %v2_c564 to i8*
  store i8 %v0_c564.off0, i8* %v3_c564, align 1
  %v3_c568 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_c290, i32* %ip.global-to-local, align 4
  store i32 %v1_c01c, i32* @lr, align 4
  %v0_c574 = load i32, i32* %r4.global-to-local, align 4
  %v2_c574 = add i32 %v0_c574, %v2_c290
  store i32 %v2_c574, i32* %r3.global-to-local, align 4
  %v1_c578 = add i32 %v3_c568, 1
  store i32 %v1_c578, i32* @r4, align 4
  %v9_c57c = icmp eq i32 %v1_c01c, %v1_c578
  store i1 %v9_c57c, i1* %cpsr_z.global-to-local, align 1
  %v1_c580 = add i32 %v2_c574, 2
  store i32 %v1_c580, i32* %r2.global-to-local, align 4
  %v0_c584 = load i32, i32* %sl.global-to-local, align 4
  %v1_c584 = trunc i32 %v0_c584 to i8
  %v4_c584 = inttoptr i32 %v1_c580 to i8*
  store i8 %v1_c584, i8* %v4_c584, align 1
  %v0_c588 = load i32, i32* %r8.global-to-local, align 4
  %v1_c588 = trunc i32 %v0_c588 to i8
  %v2_c588 = load i32, i32* %r2.global-to-local, align 4
  %v3_c588 = add i32 %v2_c588, 3
  %v4_c588 = inttoptr i32 %v3_c588 to i8*
  store i8 %v1_c588, i8* %v4_c588, align 1
  %v0_c58c = load i32, i32* %r8.global-to-local, align 4
  %v1_c58c = trunc i32 %v0_c58c to i8
  %v2_c58c = load i32, i32* %r2.global-to-local, align 4
  %v3_c58c = add i32 %v2_c58c, 1
  %v4_c58c = inttoptr i32 %v3_c58c to i8*
  store i8 %v1_c58c, i8* %v4_c58c, align 1
  %v0_c590 = load i32, i32* %sl.global-to-local, align 4
  %v1_c590 = trunc i32 %v0_c590 to i8
  %v2_c590 = load i32, i32* %r2.global-to-local, align 4
  %v3_c590 = add i32 %v2_c590, 2
  %v4_c590 = inttoptr i32 %v3_c590 to i8*
  store i8 %v1_c590, i8* %v4_c590, align 1
  %v0_c594 = load i32, i32* @r4, align 4
  store i32 %v0_c594, i32* %stack_var_-40, align 4
  %v8_c598 = icmp sgt i32 %v1_c01c, %v1_c578
  br i1 %v8_c598, label %dec_label_pc_c404, label %dec_label_pc_c59c.preheader

dec_label_pc_c59c.preheader:                      ; preds = %dec_label_pc_c564, %dec_label_pc_c2e0.dec_label_pc_c59c.preheader_crit_edge
  %v4_c668.pre-phi = phi i32 [ %.pre, %dec_label_pc_c2e0.dec_label_pc_c59c.preheader_crit_edge ], [ %v4_c4c8, %dec_label_pc_c564 ]
  br label %dec_label_pc_c59c

dec_label_pc_c59c:                                ; preds = %dec_label_pc_c59c.preheader, %dec_label_pc_c760
  store i32 %v1_c01c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_c300, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_c300, label %dec_label_pc_c760, label %dec_label_pc_c5b0

dec_label_pc_c5b0:                                ; preds = %dec_label_pc_c59c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_c5bc = load i32, i32* @sb, align 4
  %v2_c5bc = add i32 %v0_c5bc, %v2_c290
  store i32 %v2_c5bc, i32* %r3.global-to-local, align 4
  %v1_c5c0 = add i32 %v2_c5bc, 47
  store i32 %v1_c5c0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r8, align 4
  %v1_c5c8 = add i32 %v2_c5bc, 27
  store i32 %v1_c5c8, i32* @fp, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_c6c4

dec_label_pc_c5d8:                                ; preds = %dec_label_pc_c6c4
  store i32 %v3_c310, i32* %r3.global-to-local, align 4
  %v9_c5dc = icmp eq i32 %v3_c310, %v1_c5dc
  store i1 %v9_c5dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c5dc, label %dec_label_pc_c700, label %dec_label_pc_c5e4

dec_label_pc_c5e4:                                ; preds = %dec_label_pc_c6e4.dec_label_pc_c5e4_crit_edge, %dec_label_pc_c5d8
  %v1_c5e8 = phi i32 [ %v1_c5e8.pre, %dec_label_pc_c6e4.dec_label_pc_c5e4_crit_edge ], [ %v1_c5dc, %dec_label_pc_c5d8 ]
  store i32 %v3_c314, i32* %ip.global-to-local, align 4
  %v9_c5e8 = icmp eq i32 %v3_c314, %v1_c5e8
  store i1 %v9_c5e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c5e8, label %dec_label_pc_c71c, label %dec_label_pc_c5f0

dec_label_pc_c5f0:                                ; preds = %dec_label_pc_c700.dec_label_pc_c5f0_crit_edge, %dec_label_pc_c5e4
  %v1_c5f4 = phi i32 [ %v1_c5f4.pre, %dec_label_pc_c700.dec_label_pc_c5f0_crit_edge ], [ %v1_c5e8, %dec_label_pc_c5e4 ]
  store i32 %v3_c318, i32* @lr, align 4
  %v9_c5f4 = icmp eq i32 %v3_c318, %v1_c5f4
  store i1 %v9_c5f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c5f4, label %dec_label_pc_c738, label %dec_label_pc_c5fc

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c71c, %dec_label_pc_c5f0, %dec_label_pc_c738
  %v0_c5fc = load i32, i32* @r6, align 4
  store i32 %v0_c5fc, i32* %r0.global-to-local, align 4
  %v0_c600 = load i32, i32* @sb, align 4
  store i32 %v0_c600, i32* %r1.global-to-local, align 4
  %v2_c604 = call i32 @function_dc3c(i32 %v0_c5fc, i32 %v0_c600)
  %v0_c608 = load i32, i32* @r7, align 4
  %v1_c608 = trunc i32 %v0_c608 to i8
  %v2_c608 = load i32, i32* @r6, align 4
  %v3_c608 = load i32, i32* @sb, align 4
  %v4_c608 = add i32 %v3_c608, %v2_c608
  %v5_c608 = inttoptr i32 %v4_c608 to i8*
  store i8 %v1_c608, i8* %v5_c608, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c610 = load i32, i32* @r7, align 4
  %v1_c610 = trunc i32 %v0_c610 to i8
  %v2_c610 = load i32, i32* @r4, align 4
  %v3_c610 = add i32 %v2_c610, 10
  %v4_c610 = inttoptr i32 %v3_c610 to i8*
  store i8 %v1_c610, i8* %v4_c610, align 1
  %v0_c614 = load i32, i32* @r7, align 4
  %v1_c614 = trunc i32 %v0_c614 to i8
  %v2_c614 = load i32, i32* @r4, align 4
  %v3_c614 = add i32 %v2_c614, 11
  %v4_c614 = inttoptr i32 %v3_c614 to i8*
  store i8 %v1_c614, i8* %v4_c614, align 1
  %v0_c618 = load i32, i32* @r4, align 4
  store i32 %v0_c618, i32* @r0, align 4
  %v2_c61c = call i32 @function_c7e0(i32 %v0_c618, i32 20)
  %v3_c61c = trunc i32 %v2_c61c to i8
  store i32 %v2_c61c, i32* %r0.global-to-local, align 4
  %v4_c620 = sdiv i32 %v2_c61c, 256
  store i32 %v4_c620, i32* %r3.global-to-local, align 4
  %v1_c624 = trunc i32 %v4_c620 to i8
  %v2_c624 = load i32, i32* @r4, align 4
  %v3_c624 = add i32 %v2_c624, 11
  %v4_c624 = inttoptr i32 %v3_c624 to i8*
  store i8 %v1_c624, i8* %v4_c624, align 1
  %v3_c628 = load i32, i32* @r4, align 4
  %v4_c628 = add i32 %v3_c628, 10
  %v5_c628 = inttoptr i32 %v4_c628 to i8*
  store i8 %v3_c61c, i8* %v5_c628, align 1
  %v0_c62c = load i32, i32* @r7, align 4
  %v1_c62c = trunc i32 %v0_c62c to i8
  %v2_c62c = load i32, i32* @r5, align 4
  %v3_c62c = add i32 %v2_c62c, 6
  %v4_c62c = inttoptr i32 %v3_c62c to i8*
  store i8 %v1_c62c, i8* %v4_c62c, align 1
  %v0_c630 = load i32, i32* @r7, align 4
  %v1_c630 = trunc i32 %v0_c630 to i8
  %v2_c630 = load i32, i32* @r5, align 4
  %v3_c630 = add i32 %v2_c630, 7
  %v4_c630 = inttoptr i32 %v3_c630 to i8*
  store i8 %v1_c630, i8* %v4_c630, align 1
  %v0_c634 = load i32, i32* @r4, align 4
  %v1_c634 = add i32 %v0_c634, 24
  %v2_c634 = inttoptr i32 %v1_c634 to i8*
  %v3_c634 = load i8, i8* %v2_c634, align 1
  %v4_c634 = zext i8 %v3_c634 to i32
  store i32 %v4_c634, i32* %r3.global-to-local, align 4
  %v1_c638 = add i32 %v0_c634, 25
  %v2_c638 = inttoptr i32 %v1_c638 to i8*
  %v3_c638 = load i8, i8* %v2_c638, align 1
  %v4_c638 = zext i8 %v3_c638 to i32
  %v0_c63c = load i32, i32* @r5, align 4
  store i32 %v0_c63c, i32* @r1, align 4
  %v4_c640 = mul nuw nsw i32 %v4_c638, 256
  %v5_c640 = or i32 %v4_c640, %v4_c634
  store i32 %v5_c640, i32* %r2.global-to-local, align 4
  store i32 %v0_c634, i32* %r0.global-to-local, align 4
  %v0_c648 = load i32, i32* @fp, align 4
  store i32 %v0_c648, i32* %r3.global-to-local, align 4
  %v4_c64c = call i32 @function_c83c(i32 %v0_c634, i32 %v0_c63c, i32 %v5_c640, i32 %v0_c648)
  %v5_c64c = trunc i32 %v4_c64c to i8
  store i32 %v4_c64c, i32* %r0.global-to-local, align 4
  %v3_c650 = load i32, i32* %stack_var_-40, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v5_c65c = mul i32 %v3_c650, 24
  store i32 %v5_c65c, i32* %lr.global-to-local, align 4
  %v4_c66076 = udiv i32 %v4_c64c, 256
  %v1_c664 = trunc i32 %v4_c66076 to i8
  %v2_c664 = load i32, i32* @r5, align 4
  %v3_c664 = add i32 %v2_c664, 7
  %v4_c664 = inttoptr i32 %v3_c664 to i8*
  store i8 %v1_c664, i8* %v4_c664, align 1
  store i32 %v4_c668.pre-phi, i32* %r3.global-to-local, align 4
  %v0_c66c = load i32, i32* %lr.global-to-local, align 4
  %v1_c66c = load i32, i32* %r2.global-to-local, align 4
  %v2_c66c = add i32 %v1_c66c, %v0_c66c
  store i32 %v2_c66c, i32* %lr.global-to-local, align 4
  %v3_c670 = load i32, i32* @r5, align 4
  %v4_c670 = add i32 %v3_c670, 6
  %v5_c670 = inttoptr i32 %v4_c670 to i8*
  store i8 %v5_c64c, i8* %v5_c670, align 1
  %v0_c674 = load i32, i32* %r3.global-to-local, align 4
  %v1_c674 = load i32, i32* %lr.global-to-local, align 4
  %v2_c674 = add i32 %v1_c674, 4
  %v3_c674 = inttoptr i32 %v2_c674 to i32*
  store i32 %v0_c674, i32* %v3_c674, align 4
  %v0_c678 = load i32, i32* @r4, align 4
  %v1_c678 = add i32 %v0_c678, 20
  %v2_c678 = inttoptr i32 %v1_c678 to i32*
  %v3_c678 = load i32, i32* %v2_c678, align 4
  %v3_c67c = udiv i32 %v3_c678, 65536
  store i32 %v3_c67c, i32* %r3.global-to-local, align 4
  %v3_c68016 = udiv i32 %v3_c678, 16777216
  %v1_c684 = trunc i32 %v3_c68016 to i8
  %v2_c684 = load i32, i32* %lr.global-to-local, align 4
  %v3_c684 = add i32 %v2_c684, 3
  %v4_c684 = inttoptr i32 %v3_c684 to i8*
  store i8 %v1_c684, i8* %v4_c684, align 1
  %v0_c688 = load i32, i32* %r3.global-to-local, align 4
  %v1_c688 = trunc i32 %v0_c688 to i8
  %v2_c688 = load i32, i32* %lr.global-to-local, align 4
  %v3_c688 = add i32 %v2_c688, 2
  %v4_c688 = inttoptr i32 %v3_c688 to i8*
  store i8 %v1_c688, i8* %v4_c688, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c694 = load i32, i32* @r4, align 4
  store i32 %v0_c694, i32* %r1.global-to-local, align 4
  store i32 %v3_c2a4, i32* %r0.global-to-local, align 4
  store i32 %v1_c5c0, i32* %r2.global-to-local, align 4
  %v0_c6a0 = load i32, i32* %lr.global-to-local, align 4
  %v6_c6a8 = inttoptr i32 %v0_c694 to i32*
  %v7_c6a8 = call i32 @function_1244c(i32 %v3_c2a4, i32* %v6_c6a8, i32 %v1_c5c0, i32 16384, i32 %v0_c6a0, i32 16)
  %v3_c6ac = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c6ac, i32* %r3.global-to-local, align 4
  %v1_c6b4 = add i32 %v3_c6ac, 1
  store i32 %v1_c6b4, i32* %r0.global-to-local, align 4
  %v9_c6b8 = icmp eq i32 %v1_c01c, %v1_c6b4
  store i1 %v9_c6b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c6b4, i32* %stack_var_-40, align 4
  %v7_c6c0 = icmp sgt i32 %v1_c01c, %v1_c6b4
  br i1 %v7_c6c0, label %dec_label_pc_c5fc.dec_label_pc_c6c4_crit_edge, label %dec_label_pc_c760

dec_label_pc_c5fc.dec_label_pc_c6c4_crit_edge:    ; preds = %dec_label_pc_c5fc
  %v1_c6d0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_c6c4

dec_label_pc_c6c4:                                ; preds = %dec_label_pc_c5fc.dec_label_pc_c6c4_crit_edge, %dec_label_pc_c5b0
  %v1_c5dc = phi i32 [ %v1_c6d0.pre, %dec_label_pc_c5fc.dec_label_pc_c6c4_crit_edge ], [ 65535, %dec_label_pc_c5b0 ]
  %v1_c6cc = phi i32 [ %v1_c6b4, %dec_label_pc_c5fc.dec_label_pc_c6c4_crit_edge ], [ 0, %dec_label_pc_c5b0 ]
  store i32 %v2_c044, i32* %lr.global-to-local, align 4
  store i32 %v3_c30c, i32* %r2.global-to-local, align 4
  %v4_c6cc = mul i32 %v1_c6cc, 4
  %v5_c6cc = add i32 %v4_c6cc, %v2_c044
  %v6_c6cc = inttoptr i32 %v5_c6cc to i32*
  %v7_c6cc = load i32, i32* %v6_c6cc, align 4
  store i32 %v7_c6cc, i32* @r4, align 4
  %v9_c6d0 = icmp eq i32 %v3_c30c, %v1_c5dc
  store i1 %v9_c6d0, i1* %cpsr_z.global-to-local, align 1
  %v1_c6d4 = add i32 %v7_c6cc, 20
  store i32 %v1_c6d4, i32* @r5, align 4
  %v1_c6d8 = add i32 %v7_c6cc, 41
  store i32 %v1_c6d8, i32* @r6, align 4
  %v1_c6dc = add i32 %v7_c6cc, 28
  store i32 %v1_c6dc, i32* @sl, align 4
  br i1 %v9_c6d0, label %dec_label_pc_c6e4, label %dec_label_pc_c5d8

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6c4
  %v0_c6e4 = call i32 @function_db88()
  %v1_c6e4 = trunc i32 %v0_c6e4 to i8
  store i32 %v0_c6e4, i32* %r0.global-to-local, align 4
  %v4_c6e877 = udiv i32 %v0_c6e4, 256
  %v1_c6ec = trunc i32 %v4_c6e877 to i8
  %v2_c6ec = load i32, i32* @r4, align 4
  %v3_c6ec = add i32 %v2_c6ec, 5
  %v4_c6ec = inttoptr i32 %v3_c6ec to i8*
  store i8 %v1_c6ec, i8* %v4_c6ec, align 1
  store i32 %v3_c310, i32* %r3.global-to-local, align 4
  %v1_c6f4 = load i32, i32* @r8, align 4
  %v9_c6f4 = icmp eq i32 %v3_c310, %v1_c6f4
  store i1 %v9_c6f4, i1* %cpsr_z.global-to-local, align 1
  %v3_c6f8 = load i32, i32* @r4, align 4
  %v4_c6f8 = add i32 %v3_c6f8, 4
  %v5_c6f8 = inttoptr i32 %v4_c6f8 to i8*
  store i8 %v1_c6e4, i8* %v5_c6f8, align 1
  %v0_c6fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6fc, label %dec_label_pc_c700, label %dec_label_pc_c6e4.dec_label_pc_c5e4_crit_edge

dec_label_pc_c6e4.dec_label_pc_c5e4_crit_edge:    ; preds = %dec_label_pc_c6e4
  %v1_c5e8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_c5e4

dec_label_pc_c700:                                ; preds = %dec_label_pc_c6e4, %dec_label_pc_c5d8
  %v0_c700 = call i32 @function_db88()
  %v1_c700 = trunc i32 %v0_c700 to i8
  store i32 %v0_c700, i32* %r0.global-to-local, align 4
  store i32 %v3_c314, i32* %ip.global-to-local, align 4
  %v4_c708 = sdiv i32 %v0_c700, 256
  store i32 %v4_c708, i32* %r3.global-to-local, align 4
  %v1_c70c = load i32, i32* @r8, align 4
  %v9_c70c = icmp eq i32 %v3_c314, %v1_c70c
  store i1 %v9_c70c, i1* %cpsr_z.global-to-local, align 1
  %v3_c710 = load i32, i32* @r4, align 4
  %v4_c710 = add i32 %v3_c710, 20
  %v5_c710 = inttoptr i32 %v4_c710 to i8*
  store i8 %v1_c700, i8* %v5_c710, align 1
  %v0_c714 = load i32, i32* %r3.global-to-local, align 4
  %v1_c714 = trunc i32 %v0_c714 to i8
  %v2_c714 = load i32, i32* @r5, align 4
  %v3_c714 = add i32 %v2_c714, 1
  %v4_c714 = inttoptr i32 %v3_c714 to i8*
  store i8 %v1_c714, i8* %v4_c714, align 1
  %v0_c718 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c718, label %dec_label_pc_c71c, label %dec_label_pc_c700.dec_label_pc_c5f0_crit_edge

dec_label_pc_c700.dec_label_pc_c5f0_crit_edge:    ; preds = %dec_label_pc_c700
  %v1_c5f4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_c5f0

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c700, %dec_label_pc_c5e4
  %v0_c71c = call i32 @function_db88()
  %v1_c71c = trunc i32 %v0_c71c to i8
  store i32 %v0_c71c, i32* %r0.global-to-local, align 4
  store i32 %v3_c318, i32* @lr, align 4
  %v4_c724 = sdiv i32 %v0_c71c, 256
  store i32 %v4_c724, i32* %r3.global-to-local, align 4
  %v1_c728 = load i32, i32* @r8, align 4
  %v9_c728 = icmp eq i32 %v3_c318, %v1_c728
  store i1 %v9_c728, i1* %cpsr_z.global-to-local, align 1
  %v1_c72c = trunc i32 %v4_c724 to i8
  %v2_c72c = load i32, i32* @r5, align 4
  %v3_c72c = add i32 %v2_c72c, 3
  %v4_c72c = inttoptr i32 %v3_c72c to i8*
  store i8 %v1_c72c, i8* %v4_c72c, align 1
  %v3_c730 = load i32, i32* @r5, align 4
  %v4_c730 = add i32 %v3_c730, 2
  %v5_c730 = inttoptr i32 %v4_c730 to i8*
  store i8 %v1_c71c, i8* %v5_c730, align 1
  %v0_c734 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c734, label %dec_label_pc_c738, label %dec_label_pc_c5fc

dec_label_pc_c738:                                ; preds = %dec_label_pc_c71c, %dec_label_pc_c5f0
  %v0_c738 = call i32 @function_db88()
  %v1_c738 = trunc i32 %v0_c738 to i8
  store i32 %v0_c738, i32* %r0.global-to-local, align 4
  %v4_c73c = sdiv i32 %v0_c738, 256
  store i32 %v4_c73c, i32* %r3.global-to-local, align 4
  %v3_c740 = load i32, i32* @r4, align 4
  %v4_c740 = add i32 %v3_c740, 28
  %v5_c740 = inttoptr i32 %v4_c740 to i8*
  store i8 %v1_c738, i8* %v5_c740, align 1
  %v0_c744 = load i32, i32* %r3.global-to-local, align 4
  %v1_c744 = trunc i32 %v0_c744 to i8
  %v2_c744 = load i32, i32* @sl, align 4
  %v3_c744 = add i32 %v2_c744, 1
  %v4_c744 = inttoptr i32 %v3_c744 to i8*
  store i8 %v1_c744, i8* %v4_c744, align 1
  br label %dec_label_pc_c5fc

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c2b4
  store i32 %v3_c2a4, i32* %r0.global-to-local, align 4
  %v1_c750 = call i32 @function_11c68(i32 %v3_c2a4)
  store i32 %v1_c750, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c754

dec_label_pc_c754:                                ; preds = %dec_label_pc_c760, %dec_label_pc_c28c, %dec_label_pc_c274, %dec_label_pc_c74c
  %v29_c75c = phi i32 [ %v3_c2a4, %dec_label_pc_c28c ], [ %v2_c280, %dec_label_pc_c274 ], [ %v1_c750, %dec_label_pc_c74c ], [ %v2_c764, %dec_label_pc_c760 ]
  store i32 %v3_c010, i32* %r4.global-to-local, align 4
  store i32 %v15_c010, i32* %r8.global-to-local, align 4
  store i32 %v21_c010, i32* %sl.global-to-local, align 4
  store i32 %v24_c010, i32* %fp.global-to-local, align 4
  ret i32 %v29_c75c

dec_label_pc_c760:                                ; preds = %dec_label_pc_c5fc, %dec_label_pc_c59c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c764 = call i32 @function_11eb8(i32* null)
  store i32 %v2_c764, i32* %r0.global-to-local, align 4
  store i32 %v2_c280, i32* %ip.global-to-local, align 4
  %v9_c76c = icmp eq i32 %v2_c280, %v2_c764
  store i1 %v9_c76c, i1* %cpsr_z.global-to-local, align 1
  %v6_c770 = icmp slt i32 %v2_c280, %v2_c764
  br i1 %v6_c770, label %dec_label_pc_c754, label %dec_label_pc_c59c

dec_label_pc_c778:                                ; preds = %dec_label_pc_c230, %bb129
  %v0_c238.lcssa = phi i32 [ %v1_c204, %dec_label_pc_c230 ], [ %v0_c238, %bb129 ]
  %v2_c778 = sub i32 %v0_c238.lcssa, %v4_c1bc
  store i32 %v2_c778, i32* %r2.global-to-local, align 4
  store i32 %v2_c1f4, i32* %r1.global-to-local, align 4
  store i32 %v2_c1e4, i32* %r0.global-to-local, align 4
  %v3_c784 = call i32 @function_11464(i32 %v2_c1e4, i32 %v2_c1f4, i32 %v2_c778)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c1e4, i32* @r0, align 4
  %v2_c790 = load i32, i32* @r4, align 4
  %v3_c790 = inttoptr i32 %v2_c790 to i8*
  store i8 0, i8* %v3_c790, align 1
  %v1_c794 = call i32 @function_12290(i32 %v2_c1e4)
  %v2_c794 = trunc i32 %v1_c794 to i8
  store i32 %v1_c794, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c274

dec_label_pc_c7a0:                                ; preds = %dec_label_pc_c248
  store i32 104859200, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c274

dec_label_pc_c7b0:                                ; preds = %dec_label_pc_c248
  br label %dec_label_pc_c274

dec_label_pc_c7c4:                                ; preds = %dec_label_pc_c248
  store i32 33686020, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c274

; uselistorder directives
  uselistorder i32 %v1_c794, { 1, 0 }
  uselistorder i32 %v2_c764, { 1, 2, 3, 0 }
  uselistorder i32 %v0_c738, { 0, 2, 1 }
  uselistorder i32 %v4_c724, { 1, 0 }
  uselistorder i32 %v0_c71c, { 0, 2, 1 }
  uselistorder i32 %v0_c700, { 0, 2, 1 }
  uselistorder i32 %v0_c6e4, { 0, 2, 1 }
  uselistorder i32 %v7_c6cc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_c5dc, { 2, 1, 0 }
  uselistorder i32 %v1_c6b4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_c64c, { 0, 2, 1 }
  uselistorder i32 %v0_c634, { 1, 0, 2, 3 }
  uselistorder i32 %v4_c620, { 1, 0 }
  uselistorder i32 %v2_c61c, { 0, 2, 1 }
  uselistorder i32 %v1_c5c0, { 1, 0, 2 }
  uselistorder i32 %v1_c550, { 0, 2, 1 }
  uselistorder i32 %v1_c54c, { 1, 0 }
  uselistorder i32 %v2_c544, { 1, 0 }
  uselistorder i32 %v1_c518, { 2, 1, 4, 0, 3, 6, 5 }
  uselistorder i32 %v3_c3bc, { 1, 0 }
  uselistorder i32 %v3_c3b4, { 1, 0 }
  uselistorder i32 %v1_c36c, { 1, 0 }
  uselistorder i32 %v1_c364, { 1, 0 }
  uselistorder i32 %v1_c348, { 1, 0 }
  uselistorder i32 %v3_c340, { 1, 0 }
  uselistorder i32 %v1_c304, { 1, 0 }
  uselistorder i1 %v2_c300, { 1, 0, 2, 3 }
  uselistorder i1 %v7_c2d8, { 1, 0 }
  uselistorder i1 %v7_c2a8, { 1, 0 }
  uselistorder i32 %v3_c2a4, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_c290, { 0, 1, 6, 3, 5, 7, 4, 2, 8 }
  uselistorder i32 %v2_c280, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_c27c, { 1, 0, 2 }
  uselistorder i8 %stack_var_-2188.0, { 1, 0 }
  uselistorder i32 %v1_c24c, { 1, 0 }
  uselistorder i32 %v0_c248, { 1, 0 }
  uselistorder i32 %v1_c240, { 1, 0 }
  uselistorder i32 %v1_c238, { 1, 2, 0 }
  uselistorder i1 %v7_c224, { 1, 0 }
  uselistorder i32 %v1_c220, { 1, 0, 2 }
  uselistorder i1 %v8_c218, { 1, 0 }
  uselistorder i1 %v7_c214, { 1, 0 }
  uselistorder i32 %v1_c208, { 1, 0 }
  uselistorder i8 %v2_c1fc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_c200, { 1, 0 }
  uselistorder i32 %v0_c220, { 1, 2, 3, 0 }
  uselistorder i32 %v2_c1f4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c1e8, { 1, 0, 2 }
  uselistorder i32 %v2_c1e4, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_c1d4, { 1, 0, 4, 2, 3 }
  uselistorder i1 %v7_c1cc, { 1, 0 }
  uselistorder i32 %v4_c1bc, { 6, 5, 7, 4, 3, 1, 2, 0, 8 }
  uselistorder i32 %v0_c170, { 1, 0, 2, 3 }
  uselistorder i32 %v6_c110, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v6_c0f4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v6_c0dc, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32 %v1_c0c4, { 1, 2, 0 }
  uselistorder i32 %v7_c080, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_c05c, { 1, 2, 0 }
  uselistorder i32 %v2_c044, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_c01c, { 3, 4, 2, 6, 7, 5, 8, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 40, 39, 41, 43, 42, 45, 44, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 5, 4, 7, 6, 8, 9, 10, 12, 11, 13, 15, 14, 16, 17, 18, 19, 27, 20, 21, 22, 23, 24, 25, 26, 31, 28, 29, 30, 32, 34, 33, 36, 35, 37, 38, 39, 40, 42, 41, 43, 44, 46, 45, 47, 2, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %lr.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 24, 25, 26, 27 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @function_83ec, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 74, 75, 55, 56, 57, 58, 59, 60, 61, 62, 63, 86, 87, 88, 89, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85 }
  uselistorder label %dec_label_pc_c754, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_c5fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c59c, { 1, 0 }
  uselistorder label %.thread37, { 1, 0 }
  uselistorder label %bb139, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %bb136, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
  uselistorder label %dec_label_pc_c238, { 1, 2, 0 }
  uselistorder label %dec_label_pc_c230, { 1, 0 }
  uselistorder label %dec_label_pc_c224, { 1, 0 }
}

define i32 @function_c7d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c7d8:
  call void @__pseudo_cond_branch(i1 false, i32 11145480)
  %v0_c7dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c7dc, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_c7d8
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_c7d8, %bb
  %v10_c7dc = load i32, i32* @r0, align 4
  ret i32 %v10_c7dc

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_c7e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c7e0:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_c810, label %dec_label_pc_c7ec

dec_label_pc_c7ec:                                ; preds = %dec_label_pc_c7e0
  %v0_c7f0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c7f0

dec_label_pc_c7f0:                                ; preds = %dec_label_pc_c7f0, %dec_label_pc_c7ec
  %v0_c804 = phi i32 [ %v2_c804, %dec_label_pc_c7f0 ], [ 0, %dec_label_pc_c7ec ]
  %v0_c7f8 = phi i32 [ %v1_c7f8, %dec_label_pc_c7f0 ], [ %arg1, %dec_label_pc_c7ec ]
  %v0_c808 = phi i32 [ %v1_c808, %dec_label_pc_c7f0 ], [ %v0_c7f0.pre, %dec_label_pc_c7ec ]
  %v1_c7f0 = inttoptr i32 %v0_c808 to i8*
  %v2_c7f0 = load i8, i8* %v1_c7f0, align 1
  %v3_c7f0 = zext i8 %v2_c7f0 to i32
  %v1_c7f4 = add i32 %v0_c808, 1
  %v2_c7f4 = inttoptr i32 %v1_c7f4 to i8*
  %v3_c7f4 = load i8, i8* %v2_c7f4, align 1
  %v4_c7f4 = zext i8 %v3_c7f4 to i32
  %v1_c7f8 = add i32 %v0_c7f8, -2
  %v4_c7fc = mul nuw nsw i32 %v4_c7f4, 256
  %v5_c7fc = or i32 %v4_c7fc, %v3_c7f0
  %v2_c804 = add i32 %v5_c7fc, %v0_c804
  %v1_c808 = add i32 %v0_c808, 2
  store i32 %v1_c808, i32* @r0, align 4
  %v1_c7f8.cmp = icmp ugt i32 %v1_c7f8, 1
  br i1 %v1_c7f8.cmp, label %dec_label_pc_c7f0, label %dec_label_pc_c810

dec_label_pc_c810:                                ; preds = %dec_label_pc_c7f0, %dec_label_pc_c7e0
  %v1_c818 = phi i32 [ 0, %dec_label_pc_c7e0 ], [ %v2_c804, %dec_label_pc_c7f0 ]
  %v0_c810 = phi i32 [ %arg1, %dec_label_pc_c7e0 ], [ %v1_c7f8, %dec_label_pc_c7f0 ]
  %v7_c810 = icmp eq i32 %v0_c810, 1
  br i1 %v7_c810, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_c810
  %v1_c814 = load i32, i32* @r0, align 4
  %v2_c814 = inttoptr i32 %v1_c814 to i8*
  %v3_c814 = load i8, i8* %v2_c814, align 1
  %v4_c814 = zext i8 %v3_c814 to i32
  %v3_c818 = add i32 %v1_c818, %v4_c814
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c810, %bb
  %v0_c81c = phi i32 [ %v1_c818, %dec_label_pc_c810 ], [ %v3_c818, %bb ]
  %v3_c820 = urem i32 %v0_c81c, 65536
  %v4_c824 = udiv i32 %v0_c81c, 65536
  %v5_c824 = add nuw nsw i32 %v4_c824, %v3_c820
  %v4_c828 = udiv i32 %v5_c824, 65536
  %v5_c828 = add nuw nsw i32 %v4_c828, %v5_c824
  %v1_c82c = urem i32 %v5_c828, 65536
  %v3_c834 = xor i32 %v1_c82c, 65535
  ret i32 %v3_c834

; uselistorder directives
  uselistorder i32 %v5_c824, { 1, 0 }
  uselistorder i32 %v1_c808, { 1, 0 }
  uselistorder i32 %v1_c7f8, { 1, 0, 2 }
  uselistorder i32 %v0_c808, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_c83c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c83c:
  %v3_c84c = urem i32 %arg2, 65536
  %v1_c850 = add i32 %arg1, 12
  %v1_c854 = inttoptr i32 %v1_c850 to i32*
  %v2_c854 = load i32, i32* %v1_c854, align 4
  %v3_c854 = add i32 %arg1, 16
  %v4_c854 = inttoptr i32 %v3_c854 to i32*
  %v5_c854 = load i32, i32* %v4_c854, align 4
  %v7_c858 = icmp sgt i32 %arg3, 1
  store i32 0, i32* @lr, align 4
  br i1 %v7_c858, label %dec_label_pc_c864.preheader, label %dec_label_pc_c884

dec_label_pc_c864.preheader:                      ; preds = %dec_label_pc_c83c
  %v0_c864.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c864.preheader, %dec_label_pc_c864
  %v0_c878 = phi i32 [ 0, %dec_label_pc_c864.preheader ], [ %v2_c878, %dec_label_pc_c864 ]
  %v0_c86c = phi i32 [ %arg3, %dec_label_pc_c864.preheader ], [ %v1_c86c, %dec_label_pc_c864 ]
  %v0_c87c = phi i32 [ %v0_c864.pre, %dec_label_pc_c864.preheader ], [ %v1_c87c, %dec_label_pc_c864 ]
  %v1_c864 = inttoptr i32 %v0_c87c to i8*
  %v2_c864 = load i8, i8* %v1_c864, align 1
  %v3_c864 = zext i8 %v2_c864 to i32
  %v1_c868 = add i32 %v0_c87c, 1
  %v2_c868 = inttoptr i32 %v1_c868 to i8*
  %v3_c868 = load i8, i8* %v2_c868, align 1
  %v4_c868 = zext i8 %v3_c868 to i32
  %v1_c86c = add nsw i32 %v0_c86c, -2
  %v4_c870 = mul nuw nsw i32 %v4_c868, 256
  %v5_c870 = or i32 %v4_c870, %v3_c864
  %v2_c878 = add i32 %v5_c870, %v0_c878
  store i32 %v2_c878, i32* @lr, align 4
  %v1_c87c = add i32 %v0_c87c, 2
  store i32 %v1_c87c, i32* @r1, align 4
  %v8_c880 = icmp sgt i32 %v1_c86c, 1
  br i1 %v8_c880, label %dec_label_pc_c864, label %dec_label_pc_c884

dec_label_pc_c884:                                ; preds = %dec_label_pc_c864, %dec_label_pc_c83c
  %v1_c88c = phi i32 [ 0, %dec_label_pc_c83c ], [ %v2_c878, %dec_label_pc_c864 ]
  %v0_c884 = phi i32 [ %arg3, %dec_label_pc_c83c ], [ %v1_c86c, %dec_label_pc_c864 ]
  %v7_c884 = icmp eq i32 %v0_c884, 1
  br i1 %v7_c884, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_c884
  %v1_c888 = load i32, i32* @r1, align 4
  %v2_c888 = inttoptr i32 %v1_c888 to i8*
  %v3_c888 = load i8, i8* %v2_c888, align 1
  %v4_c888 = zext i8 %v3_c888 to i32
  %v3_c88c = add i32 %v4_c888, %v1_c88c
  store i32 %v3_c88c, i32* @lr, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c884, %bb
  %v0_c8b0 = phi i32 [ %v1_c88c, %dec_label_pc_c884 ], [ %v3_c88c, %bb ]
  %v3_c894 = urem i32 %v2_c854, 65536
  %v1_c89c = add i32 %arg1, 9
  %v2_c89c = inttoptr i32 %v1_c89c to i8*
  %v3_c89c = load i8, i8* %v2_c89c, align 1
  %v4_c89c = zext i8 %v3_c89c to i32
  %v3_c8a0 = urem i32 %v5_c854, 65536
  %v4_c8a4 = udiv i32 %v2_c854, 65536
  %v3_c8ac = mul nuw nsw i32 %v4_c89c, 256
  %v4_c8b0 = udiv i32 %v5_c854, 65536
  %v5_c8b0 = add i32 %v0_c8b0, %v4_c8b0
  %v2_c8b4 = add i32 %v5_c8b0, %v3_c8ac
  %v5_c8a4 = add nuw nsw i32 %v3_c894, %v3_c84c
  %v2_c8a8 = add nuw nsw i32 %v5_c8a4, %v4_c8a4
  %v2_c8b8 = add nuw nsw i32 %v2_c8a8, %v3_c8a0
  %v2_c8bc = add i32 %v2_c8b4, %v2_c8b8
  %tmp = icmp ult i32 %v2_c8bc, 65536
  br i1 %tmp, label %dec_label_pc_c8dc, label %dec_label_pc_c8c8

dec_label_pc_c8c8:                                ; preds = %.thread, %dec_label_pc_c8c8
  %v2_c8d01 = phi i32 [ %v2_c8d0, %dec_label_pc_c8c8 ], [ %v2_c8bc, %.thread ]
  %v3_c8d42.in = phi i32 [ %v2_c8d0, %dec_label_pc_c8c8 ], [ %v2_c8bc, %.thread ]
  %v3_c8d42 = udiv i32 %v3_c8d42.in, 65536
  %v3_c8cc = urem i32 %v2_c8d01, 65536
  %v2_c8d0 = add nuw nsw i32 %v3_c8cc, %v3_c8d42
  %tmp14 = icmp ult i32 %v2_c8d0, 65536
  br i1 %tmp14, label %dec_label_pc_c8dc.loopexit, label %dec_label_pc_c8c8

dec_label_pc_c8dc.loopexit:                       ; preds = %dec_label_pc_c8c8
  br label %dec_label_pc_c8dc

dec_label_pc_c8dc:                                ; preds = %dec_label_pc_c8dc.loopexit, %.thread
  %v0_c8dc = phi i32 [ %v2_c8d0, %dec_label_pc_c8dc.loopexit ], [ %v2_c8bc, %.thread ]
  %v1_c8dc = urem i32 %v0_c8dc, 65536
  %v3_c8e4 = xor i32 %v1_c8dc, 65535
  ret i32 %v3_c8e4

; uselistorder directives
  uselistorder i32 %v2_c8d0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c8bc, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c88c, { 1, 0 }
  uselistorder i32 %v1_c87c, { 1, 0 }
  uselistorder i32 %v2_c878, { 0, 2, 1 }
  uselistorder i32 %v1_c86c, { 0, 2, 1 }
  uselistorder i32 %v0_c87c, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c8c8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c864, { 1, 0 }
}

define i32 @function_c8ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_c8ec:
  %stack_var_0 = alloca i16, align 2
  %v2_c8f0 = load i32, i32* @global_var_1d1bc.44, align 4
  %v3_c8f8 = call i32 @function_11d68(i32 %v2_c8f0, i32 9)
  %v0_c8fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c8fc, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_c8ec
  %tmp1 = ptrtoint i16* %stack_var_0 to i32
  %v6_c8fc = trunc i32 %tmp1 to i16
  store i16 %v6_c8fc, i16* inttoptr (i32 9 to i16*), align 2
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_c8ec, %bb
  ret i32 %v3_c8f8

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_c900(i32 %arg1) local_unnamed_addr {
dec_label_pc_c900:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i8, align 1
  %stack_var_-581 = alloca i8, align 1
  %stack_var_-584 = alloca i32, align 4
  %stack_var_-8773 = alloca i32, align 4
  %stack_var_-4677 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_c900 = load i32, i32* @r4, align 4
  store i32 %v3_c900, i32* %stack_var_-36, align 4
  %v6_c900 = load i32, i32* @r5, align 4
  %v9_c900 = load i32, i32* @r6, align 4
  %v12_c900 = load i32, i32* @r7, align 4
  %v15_c900 = load i32, i32* @r8, align 4
  %v18_c900 = load i32, i32* @sb, align 4
  %v21_c900 = load i32, i32* @sl, align 4
  %v24_c900 = load i32, i32* @fp, align 4
  %v2_c914 = ptrtoint i32* %stack_var_-4677 to i32
  store i32 %v2_c914, i32* @sl, align 4
  %v3_c91c = mul i32 %arg1, 65536
  store i32 %v3_c91c, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_c928 = ptrtoint i32* %stack_var_-8773 to i32
  %v2_c930 = ptrtoint i32* %stack_var_-584 to i32
  %v2_c934 = bitcast i32* %stack_var_-4677 to i8*
  %v3_c934 = call i32 @function_121f0(i8* %v2_c934, i32 0)
  store i32 4096, i32* @r2, align 4
  %v2_c94c = bitcast i32* %stack_var_-8773 to i8*
  %v3_c94c = call i32 @function_121f0(i8* %v2_c94c, i32 0)
  %v2_c950 = ptrtoint i8* %stack_var_-581 to i32
  store i32 %v2_c950, i32* @r6, align 4
  store i32 513, i32* @r2, align 4
  %v3_c970 = call i32 @function_121f0(i8* nonnull %stack_var_-581, i32 0)
  %v2_c974 = ptrtoint i8* %stack_var_-68 to i32
  %v1_c97c = load i32, i32* @r5, align 4
  %v4_c97c = udiv i32 %v1_c97c, 16777216
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v8_c99c = trunc i32 %v4_c97c to i8
  %v9_c99c = call i32 @function_117c8(i8 %v8_c99c, i32 16, i32 %v2_c974, i32 %v2_c930, i32 0, i32 0, i32 0, i32 0)
  %v2_c9a4 = call i32 @function_113e8(i8* nonnull %stack_var_-68)
  %v7_c9a8 = icmp eq i32 %v2_c9a4, 2
  br i1 %v7_c9a8, label %dec_label_pc_ce54, label %dec_label_pc_c9b0

dec_label_pc_c9b0:                                ; preds = %dec_label_pc_c900, %dec_label_pc_ce54
  %v1_c9b4 = call i32 @function_10f18(i32 3)
  %v1_c9bc = call i32 @function_10f18(i32 4)
  %v1_c9c4 = call i32 @function_10f18(i32 6)
  %v1_c9cc = call i32 @function_10f18(i32 8)
  %v0_c9d0 = load i32, i32* @r4, align 4
  %v2_c9d8 = inttoptr i32 %v0_c9d0 to i32*
  %v3_c9d8 = call i32 @function_10e34(i32 8, i32* %v2_c9d8)
  %v0_c9dc = load i32, i32* @r4, align 4
  %v2_c9e0 = inttoptr i32 %v3_c9d8 to i8*
  %v3_c9e0 = call i32 @function_11d94(i8* %v2_c9e0, i32 %v0_c9dc)
  %v7_c9e4 = icmp eq i32 %v3_c9e0, -1
  store i32 %v3_c9e0, i32* @r8, align 4
  br i1 %v7_c9e4, label %dec_label_pc_ce14, label %dec_label_pc_c9f0.preheader

dec_label_pc_c9f0.preheader:                      ; preds = %dec_label_pc_c9b0
  %v4_c9fc58 = call i32 @function_11640(i8* nonnull %stack_var_-581, i32 512, i32 %v3_c9e0)
  %v2_ca0060 = icmp eq i32 %v4_c9fc58, 0
  br i1 %v2_ca0060, label %dec_label_pc_cb90.loopexit, label %dec_label_pc_ca08.lr.ph

dec_label_pc_ca08.lr.ph:                          ; preds = %dec_label_pc_c9f0.preheader
  %v2_ca50 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_ca08

dec_label_pc_ca08:                                ; preds = %dec_label_pc_ca08.lr.ph, %dec_label_pc_c9f0.backedge
  %v3_ca0c = load i8, i8* %stack_var_-581, align 1
  %v4_ca0c = sext i8 %v3_ca0c to i32
  %v2_ca10 = icmp eq i8 %v3_ca0c, 0
  br i1 %v2_ca10, label %bb126, label %bb

bb:                                               ; preds = %dec_label_pc_ca08
  %v8_ca14 = icmp eq i8 %v3_ca0c, 58
  br i1 %v8_ca14, label %.thread6, label %dec_label_pc_ca28

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_ca40

bb126:                                            ; preds = %dec_label_pc_ca08
  br label %dec_label_pc_ca40

dec_label_pc_ca28:                                ; preds = %bb
  %v1_ca30.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ca2c

dec_label_pc_ca2c:                                ; preds = %bb127, %dec_label_pc_ca28
  %v0_ca2c = phi i32 [ %v1_ca2c, %bb127 ], [ 0, %dec_label_pc_ca28 ]
  %v1_ca2c = add i32 %v0_ca2c, 1
  %v2_ca30 = add i32 %v1_ca2c, %v1_ca30.pre
  %v3_ca30 = inttoptr i32 %v2_ca30 to i8*
  %v4_ca30 = load i8, i8* %v3_ca30, align 1
  %v6_ca30 = zext i8 %v4_ca30 to i32
  %v2_ca34 = icmp eq i8 %v4_ca30, 0
  br i1 %v2_ca34, label %dec_label_pc_ca40, label %bb127

bb127:                                            ; preds = %dec_label_pc_ca2c
  %v8_ca38 = icmp eq i8 %v4_ca30, 58
  br i1 %v8_ca38, label %dec_label_pc_ca40, label %dec_label_pc_ca2c

dec_label_pc_ca40:                                ; preds = %dec_label_pc_ca2c, %bb127, %bb126, %.thread6
  %v1_ca6c = phi i32 [ 0, %.thread6 ], [ 0, %bb126 ], [ %v1_ca2c, %bb127 ], [ %v1_ca2c, %dec_label_pc_ca2c ]
  %v0_ca40 = phi i32 [ %v4_ca0c, %.thread6 ], [ %v4_ca0c, %bb126 ], [ %v6_ca30, %bb127 ], [ %v6_ca30, %dec_label_pc_ca2c ]
  %v2_ca40 = icmp eq i32 %v0_ca40, 0
  br i1 %v2_ca40, label %dec_label_pc_c9f0.backedge, label %dec_label_pc_ca48

dec_label_pc_c9f0.backedge:                       ; preds = %dec_label_pc_ca40, %dec_label_pc_cb18, %dec_label_pc_cb64, %dec_label_pc_ca8c
  %v0_c9f8 = load i32, i32* @r8, align 4
  %v4_c9fc = call i32 @function_11640(i8* nonnull %stack_var_-581, i32 512, i32 %v0_c9f8)
  %v2_ca00 = icmp eq i32 %v4_c9fc, 0
  br i1 %v2_ca00, label %dec_label_pc_cb90.loopexit, label %dec_label_pc_ca08

dec_label_pc_ca48:                                ; preds = %dec_label_pc_ca40
  %v1_ca4c = add i32 %v1_ca6c, 2
  %v2_ca54 = add i32 %v1_ca4c, %v2_ca50
  %v1_ca58 = add i32 %v2_ca54, -545
  %v2_ca58 = inttoptr i32 %v1_ca58 to i8*
  %v3_ca58 = load i8, i8* %v2_ca58, align 1
  %v2_ca5c = icmp eq i8 %v3_ca58, 0
  br i1 %v2_ca5c, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_ca48
  %v8_ca60 = icmp eq i8 %v3_ca58, 32
  br i1 %v8_ca60, label %.thread10, label %dec_label_pc_ca6c

.thread10:                                        ; preds = %bb128
  store i32 %v1_ca4c, i32* @r5, align 4
  br label %dec_label_pc_ca8c

bb129:                                            ; preds = %dec_label_pc_ca48
  store i32 %v1_ca4c, i32* @r5, align 4
  br label %dec_label_pc_ca8c

dec_label_pc_ca6c:                                ; preds = %bb128
  %v0_ca6c = load i32, i32* @r6, align 4
  %v2_ca6c = add i32 %v0_ca6c, %v1_ca6c
  br label %dec_label_pc_ca70

dec_label_pc_ca70:                                ; preds = %bb130, %dec_label_pc_ca6c
  %v0_ca7c13 = phi i32 [ %v1_ca7c, %bb130 ], [ %v2_ca6c, %dec_label_pc_ca6c ]
  %v1_ca70 = add i32 %v0_ca7c13, 3
  %v2_ca70 = inttoptr i32 %v1_ca70 to i8*
  %v3_ca70 = load i8, i8* %v2_ca70, align 1
  %v2_ca74 = icmp eq i8 %v3_ca70, 0
  br i1 %v2_ca74, label %.thread12, label %bb130

.thread12:                                        ; preds = %dec_label_pc_ca70
  %v1_ca7c14 = add i32 %v0_ca7c13, 1
  br label %dec_label_pc_ca84

bb130:                                            ; preds = %dec_label_pc_ca70
  %v8_ca78 = icmp eq i8 %v3_ca70, 32
  %v1_ca7c = add i32 %v0_ca7c13, 1
  br i1 %v8_ca78, label %dec_label_pc_ca84, label %dec_label_pc_ca70

dec_label_pc_ca84:                                ; preds = %bb130, %.thread12
  %v1_ca7c15 = phi i32 [ %v1_ca7c14, %.thread12 ], [ %v1_ca7c, %bb130 ]
  %v2_ca84 = sub i32 %v1_ca7c15, %v0_ca6c
  %v1_ca88 = add i32 %v2_ca84, 2
  store i32 %v1_ca88, i32* @r5, align 4
  br label %dec_label_pc_ca8c

dec_label_pc_ca8c:                                ; preds = %bb129, %.thread10, %dec_label_pc_ca84
  %v1_ca98 = phi i32 [ %v1_ca4c, %.thread10 ], [ %v1_ca4c, %bb129 ], [ %v1_ca88, %dec_label_pc_ca84 ]
  %v0_ca8c = load i32, i32* @r6, align 4
  %v2_ca8c = add i32 %v0_ca8c, %v1_ca4c
  store i32 %v2_ca8c, i32* @r4, align 4
  %v2_ca98 = add i32 %v1_ca98, %v2_ca50
  store i32 0, i32* @r7, align 4
  %v3_caa4 = add i32 %v2_ca98, -545
  %v4_caa4 = inttoptr i32 %v3_caa4 to i8*
  store i8 0, i8* %v4_caa4, align 1
  %v1_caa8 = inttoptr i32 %v2_ca8c to i8*
  %v2_caa8 = call i32 @function_113e8(i8* %v1_caa8)
  store i32 %v2_caa8, i32* @r1, align 4
  %v0_cab4 = load i32, i32* @r4, align 4
  %v3_cab8 = inttoptr i32 %v0_cab4 to i8*
  %v4_cab8 = call i32 @function_1173c(i8* %v3_cab8, i32 %v2_caa8, i32 %v2_c974)
  %v7_cabc = icmp eq i32 %v4_cab8, -1
  br i1 %v7_cabc, label %dec_label_pc_c9f0.backedge, label %dec_label_pc_cad8.preheader

dec_label_pc_cad8.preheader:                      ; preds = %dec_label_pc_ca8c
  %v1_cac0 = load i32, i32* @r7, align 4
  %v1_cac4 = load i32, i32* @r6, align 4
  %v2_cac4 = load i32, i32* @r5, align 4
  %v3_cac4 = add i32 %v2_cac4, %v1_cac4
  store i32 %v1_cac0, i32* @lr, align 4
  store i32 %v1_cac0, i32* @r4, align 4
  %v1_cad850 = add i32 %v3_cac4, 2
  %v2_cad851 = inttoptr i32 %v1_cad850 to i8*
  %v3_cad852 = load i8, i8* %v2_cad851, align 1
  %v2_cadc54 = icmp eq i8 %v3_cad852, 0
  %v1_cae056 = add i32 %v2_cac4, 2
  br i1 %v2_cadc54, label %dec_label_pc_cb18, label %dec_label_pc_cae8

dec_label_pc_cae8:                                ; preds = %dec_label_pc_cad8.preheader, %dec_label_pc_cad8.backedge
  %v0_cb1886 = phi i32 [ %v0_cb1885, %dec_label_pc_cad8.backedge ], [ %v1_cac0, %dec_label_pc_cad8.preheader ]
  %v0_cb00.pr = phi i32 [ %v0_cb00.pr71, %dec_label_pc_cad8.backedge ], [ %v1_cac0, %dec_label_pc_cad8.preheader ]
  %v0_ce24 = phi i32 [ %v0_ce2474, %dec_label_pc_cad8.backedge ], [ %v1_cac0, %dec_label_pc_cad8.preheader ]
  %v0_cae082 = phi i32 [ %v1_cae0, %dec_label_pc_cad8.backedge ], [ %v1_cae056, %dec_label_pc_cad8.preheader ]
  %v0_cb10 = phi i32 [ %v0_cad8, %dec_label_pc_cad8.backedge ], [ %v3_cac4, %dec_label_pc_cad8.preheader ]
  %v1_caec.in = phi i8 [ %v3_cad8, %dec_label_pc_cad8.backedge ], [ %v3_cad852, %dec_label_pc_cad8.preheader ]
  %v7_cae8 = icmp eq i8 %v1_caec.in, 9
  br i1 %v7_cae8, label %.thread23, label %bb131

bb131:                                            ; preds = %dec_label_pc_cae8
  %v8_caec = icmp eq i8 %v1_caec.in, 32
  br i1 %v8_caec, label %.thread23.thread35, label %dec_label_pc_cb00

.thread23.thread35:                               ; preds = %bb131
  br label %dec_label_pc_cb0c

.thread23:                                        ; preds = %dec_label_pc_cae8
  br label %dec_label_pc_cb0c

dec_label_pc_cb00:                                ; preds = %bb131
  %v7_cb00 = icmp eq i32 %v0_cb00.pr, 1
  br i1 %v7_cb00, label %dec_label_pc_ce24, label %dec_label_pc_cb08

dec_label_pc_cb08:                                ; preds = %dec_label_pc_ce24, %dec_label_pc_cb00
  %v0_cb0c79 = phi i32 [ %v1_ce24, %dec_label_pc_ce24 ], [ %v0_ce24, %dec_label_pc_cb00 ]
  br label %dec_label_pc_cb0c

dec_label_pc_cb0c:                                ; preds = %.thread23, %.thread23.thread35, %dec_label_pc_cb08
  %v0_cb0c = phi i32 [ %v0_ce24, %.thread23.thread35 ], [ %v0_ce24, %.thread23 ], [ %v0_cb0c79, %dec_label_pc_cb08 ]
  %v0_cb00.pr72 = phi i32 [ 1, %.thread23.thread35 ], [ 1, %.thread23 ], [ 0, %dec_label_pc_cb08 ]
  %v7_cb14 = icmp sgt i32 %v0_cb0c, 6
  br i1 %v7_cb14, label %dec_label_pc_cb18, label %dec_label_pc_cad8.backedge

dec_label_pc_cb18:                                ; preds = %dec_label_pc_cad8.backedge, %dec_label_pc_cb0c, %dec_label_pc_cad8.preheader
  %v1_cb68 = phi i32 [ %v1_cae056, %dec_label_pc_cad8.preheader ], [ %v1_cae0, %dec_label_pc_cad8.backedge ], [ %v0_cae082, %dec_label_pc_cb0c ]
  %v0_cb18 = phi i32 [ %v1_cac0, %dec_label_pc_cad8.preheader ], [ %v0_cb1885, %dec_label_pc_cad8.backedge ], [ %v0_cb1886, %dec_label_pc_cb0c ]
  %v2_cb18 = icmp eq i32 %v0_cb18, 0
  br i1 %v2_cb18, label %dec_label_pc_c9f0.backedge, label %dec_label_pc_cb24

dec_label_pc_cb24:                                ; preds = %dec_label_pc_cb18
  %v2_cb2c = add i32 %v1_cb68, %v2_ca50
  %v1_cb30 = add i32 %v2_cb2c, -545
  %v2_cb30 = inttoptr i32 %v1_cb30 to i8*
  %v3_cb30 = load i8, i8* %v2_cb30, align 1
  %v2_cb34 = icmp eq i8 %v3_cb30, 0
  br i1 %v2_cb34, label %dec_label_pc_cb64, label %bb132

bb132:                                            ; preds = %dec_label_pc_cb24
  %v8_cb38 = icmp eq i8 %v3_cb30, 32
  br i1 %v8_cb38, label %dec_label_pc_cb64, label %dec_label_pc_cb40

dec_label_pc_cb40:                                ; preds = %bb132
  %v2_cb40 = add i32 %v1_cb68, %v1_cac4
  br label %dec_label_pc_cb44

dec_label_pc_cb44:                                ; preds = %bb133, %dec_label_pc_cb40
  %v0_cb5028 = phi i32 [ %v1_cb50, %bb133 ], [ %v1_cb68, %dec_label_pc_cb40 ]
  %v0_cb44 = phi i32 [ %v1_cb44, %bb133 ], [ %v2_cb40, %dec_label_pc_cb40 ]
  %v1_cb44 = add i32 %v0_cb44, 1
  %v2_cb44 = inttoptr i32 %v1_cb44 to i8*
  %v3_cb44 = load i8, i8* %v2_cb44, align 1
  %v2_cb48 = icmp eq i8 %v3_cb44, 0
  br i1 %v2_cb48, label %.thread27, label %bb133

.thread27:                                        ; preds = %dec_label_pc_cb44
  %v1_cb5029 = add i32 %v0_cb5028, 1
  br label %dec_label_pc_cb58

bb133:                                            ; preds = %dec_label_pc_cb44
  %v8_cb4c = icmp eq i8 %v3_cb44, 32
  %v1_cb50 = add i32 %v0_cb5028, 1
  br i1 %v8_cb4c, label %dec_label_pc_cb58, label %dec_label_pc_cb44

dec_label_pc_cb58:                                ; preds = %bb133, %.thread27
  %v1_cb60 = phi i32 [ %v1_cb5029, %.thread27 ], [ %v1_cb50, %bb133 ]
  %v2_cb60 = add i32 %v1_cb60, %v2_ca50
  br label %dec_label_pc_cb64

dec_label_pc_cb64:                                ; preds = %dec_label_pc_cb24, %bb132, %dec_label_pc_cb58
  %v2_cb70 = phi i32 [ %v2_cb2c, %dec_label_pc_cb24 ], [ %v2_cb2c, %bb132 ], [ %v2_cb60, %dec_label_pc_cb58 ]
  %v2_cb68 = add i32 %v1_cb68, %v1_cac4
  store i32 %v2_cb68, i32* @r4, align 4
  %v3_cb70 = add i32 %v2_cb70, -545
  %v4_cb70 = inttoptr i32 %v3_cb70 to i8*
  store i8 0, i8* %v4_cb70, align 1
  %v1_cb74 = inttoptr i32 %v2_cb68 to i8*
  %v2_cb74 = call i32 @function_113e8(i8* %v1_cb74)
  %v8_cb7c = icmp sgt i32 %v2_cb74, 15
  br i1 %v8_cb7c, label %dec_label_pc_c9f0.backedge, label %dec_label_pc_cb80

dec_label_pc_cb80:                                ; preds = %dec_label_pc_cb64
  %v0_cb84 = load i32, i32* @r4, align 4
  %v2_cb88 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_cb88, i32* @r0, align 4
  %v2_cb8c = bitcast i32* %stack_var_-52 to i8*
  %v3_cb8c = call i32 @function_11410(i8* %v2_cb8c, i32 %v0_cb84)
  br label %dec_label_pc_cb90

dec_label_pc_cb90.loopexit:                       ; preds = %dec_label_pc_c9f0.backedge, %dec_label_pc_c9f0.preheader
  %.pre = ptrtoint i32* %stack_var_-52 to i32
  %.pre95 = bitcast i32* %stack_var_-52 to i8*
  br label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb90.loopexit, %dec_label_pc_cb80
  %v1_cba0.pre-phi = phi i8* [ %.pre95, %dec_label_pc_cb90.loopexit ], [ %v2_cb8c, %dec_label_pc_cb80 ]
  %v2_cb9c.pre-phi = phi i32 [ %.pre, %dec_label_pc_cb90.loopexit ], [ %v2_cb88, %dec_label_pc_cb80 ]
  %v0_cb90 = load i32, i32* @r8, align 4
  %v1_cb94 = call i32 @function_11c68(i32 %v0_cb90)
  %v2_cba0 = call i32 @function_113e8(i8* %v1_cba0.pre-phi)
  store i32 %v2_cba0, i32* @r4, align 4
  %v2_cba4 = icmp eq i32 %v2_cba0, 0
  br i1 %v2_cba4, label %dec_label_pc_cdf4, label %dec_label_pc_cbac

dec_label_pc_cbac:                                ; preds = %dec_label_pc_cb90
  %v3_cbb4 = call i32 @function_10e34(i32 3, i32* null)
  store i32 %v3_cbb4, i32* @r0, align 4
  %v1_cbb8 = call i32 @function_11fc4(i32 %v3_cbb4)
  store i32 %v1_cbb8, i32* @r8, align 4
  %v2_cbbc = icmp eq i32 %v1_cbb8, 0
  br i1 %v2_cbbc, label %dec_label_pc_cdec, label %dec_label_pc_cbcc.preheader

dec_label_pc_cbcc.preheader:                      ; preds = %dec_label_pc_cbac
  store i32 0, i32* @r5, align 4
  %v1_cbd045 = inttoptr i32 %v1_cbb8 to i32*
  %v2_cbd046 = call i32 @function_120c0(i32* %v1_cbd045)
  %v2_cbd448 = icmp eq i32 %v2_cbd046, 0
  br i1 %v2_cbd448, label %dec_label_pc_cde0, label %dec_label_pc_cbdc.preheader

dec_label_pc_cbcc.loopexit:                       ; preds = %dec_label_pc_cbe4, %dec_label_pc_cbf8, %dec_label_pc_cc60
  %v0_cbcc = load i32, i32* @r8, align 4
  %v1_cbd0 = inttoptr i32 %v0_cbcc to i32*
  %v2_cbd0 = call i32 @function_120c0(i32* %v1_cbd0)
  %v2_cbd4 = icmp eq i32 %v2_cbd0, 0
  br i1 %v2_cbd4, label %dec_label_pc_cde0, label %dec_label_pc_cbdc.preheader

dec_label_pc_cbdc.preheader:                      ; preds = %dec_label_pc_cbcc.preheader, %dec_label_pc_cbcc.loopexit
  %v0_cbe494 = phi i32 [ %v2_cbd0, %dec_label_pc_cbcc.loopexit ], [ %v2_cbd046, %dec_label_pc_cbcc.preheader ]
  br label %dec_label_pc_cbdc

dec_label_pc_cbdc:                                ; preds = %dec_label_pc_cbdc.preheader, %dec_label_pc_cdc8
  %v0_cbf0 = phi i32 [ %v0_cbe494, %dec_label_pc_cbdc.preheader ], [ %v2_cdd4, %dec_label_pc_cdc8 ]
  %v0_cbdc = load i32, i32* @r5, align 4
  %v2_cbdc = icmp eq i32 %v0_cbdc, 0
  br i1 %v2_cbdc, label %dec_label_pc_cbe4, label %dec_label_pc_cde0

dec_label_pc_cbe4:                                ; preds = %dec_label_pc_cbdc
  %v1_cbe4 = add i32 %v0_cbf0, 11
  %v2_cbe4 = inttoptr i32 %v1_cbe4 to i8*
  %v3_cbe4 = load i8, i8* %v2_cbe4, align 1
  %v4_cbe4 = zext i8 %v3_cbe4 to i32
  %v1_cbe8 = add nsw i32 %v4_cbe4, -48
  store i32 %v1_cbe4, i32* @r7, align 4
  %tmp = icmp ugt i32 %v1_cbe8, 9
  br i1 %tmp, label %dec_label_pc_cbcc.loopexit, label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbe4
  %v3_cc00 = call i32 @function_10e34(i32 3, i32* null)
  store i32 %v2_c914, i32* @r0, align 4
  %v3_cc0c = call i32 @function_11410(i8* %v2_c934, i32 %v3_cc00)
  %v2_cc14 = call i32 @function_113e8(i8* %v2_c934)
  %v0_cc18 = load i32, i32* @r7, align 4
  %v0_cc1c = load i32, i32* @sl, align 4
  %v2_cc1c = add i32 %v0_cc1c, %v2_cc14
  store i32 %v2_cc1c, i32* @r0, align 4
  %v2_cc20 = inttoptr i32 %v2_cc1c to i8*
  %v3_cc20 = call i32 @function_11410(i8* %v2_cc20, i32 %v0_cc18)
  %v2_cc28 = call i32 @function_113e8(i8* %v2_c934)
  %v0_cc2c = load i32, i32* @r5, align 4
  store i32 %v2_cc28, i32* @r4, align 4
  %v2_cc38 = inttoptr i32 %v0_cc2c to i32*
  %v3_cc38 = call i32 @function_10e34(i32 4, i32* %v2_cc38)
  %v0_cc40 = load i32, i32* @sl, align 4
  %v1_cc40 = load i32, i32* @r4, align 4
  %v2_cc40 = add i32 %v1_cc40, %v0_cc40
  store i32 %v2_cc40, i32* @r0, align 4
  %v2_cc44 = inttoptr i32 %v2_cc40 to i8*
  %v3_cc44 = call i32 @function_11410(i8* %v2_cc44, i32 %v3_cc38)
  %v4_cc54 = call i32 @function_11e5c(i8* %v2_c934, i32 %v2_c928, i32 4096)
  %v7_cc58 = icmp eq i32 %v4_cc54, -1
  br i1 %v7_cc58, label %dec_label_pc_cbcc.loopexit, label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cbf8
  %v0_cc60 = load i32, i32* @r5, align 4
  %v2_cc68 = inttoptr i32 %v0_cc60 to i32*
  %v3_cc68 = call i32 @function_10e34(i32 3, i32* %v2_cc68)
  store i32 %v2_c914, i32* @r0, align 4
  %v3_cc74 = call i32 @function_11410(i8* %v2_c934, i32 %v3_cc68)
  %v2_cc7c = call i32 @function_113e8(i8* %v2_c934)
  %v0_cc80 = load i32, i32* @r7, align 4
  %v0_cc84 = load i32, i32* @sl, align 4
  %v2_cc84 = add i32 %v0_cc84, %v2_cc7c
  store i32 %v2_cc84, i32* @r0, align 4
  %v2_cc88 = inttoptr i32 %v2_cc84 to i8*
  %v3_cc88 = call i32 @function_11410(i8* %v2_cc88, i32 %v0_cc80)
  %v2_cc90 = call i32 @function_113e8(i8* %v2_c934)
  %v0_cc94 = load i32, i32* @r5, align 4
  store i32 %v2_cc90, i32* @r4, align 4
  %v2_cca0 = inttoptr i32 %v0_cc94 to i32*
  %v3_cca0 = call i32 @function_10e34(i32 6, i32* %v2_cca0)
  %v0_cca8 = load i32, i32* @sl, align 4
  %v1_cca8 = load i32, i32* @r4, align 4
  %v2_cca8 = add i32 %v1_cca8, %v0_cca8
  store i32 %v2_cca8, i32* @r0, align 4
  %v2_ccac = inttoptr i32 %v2_cca8 to i8*
  %v3_ccac = call i32 @function_11410(i8* %v2_ccac, i32 %v3_cca0)
  store i32 %v2_c914, i32* @r0, align 4
  %v1_ccb4 = call i32 @function_11fc4(i32 %v2_c914)
  store i32 %v1_ccb4, i32* @sb, align 4
  %v2_ccb8 = icmp eq i32 %v1_ccb4, 0
  br i1 %v2_ccb8, label %dec_label_pc_cbcc.loopexit, label %dec_label_pc_ccc0.preheader

dec_label_pc_ccc0.preheader:                      ; preds = %dec_label_pc_cc60
  %v1_ccc440 = inttoptr i32 %v1_ccb4 to i32*
  %v2_ccc441 = call i32 @function_120c0(i32* %v1_ccc440)
  store i32 %v2_ccc441, i32* @r6, align 4
  %v2_ccc843 = icmp eq i32 %v2_ccc441, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c928, i32* @r0, align 4
  br i1 %v2_ccc843, label %dec_label_pc_cdc8, label %dec_label_pc_ccd8thread-pre-split

dec_label_pc_ccc0.loopexit:                       ; preds = %dec_label_pc_cce0, %dec_label_pc_cd78
  %v0_ccc0 = load i32, i32* @sb, align 4
  %v1_ccc4 = inttoptr i32 %v0_ccc0 to i32*
  %v2_ccc4 = call i32 @function_120c0(i32* %v1_ccc4)
  store i32 %v2_ccc4, i32* @r6, align 4
  %v2_ccc8 = icmp eq i32 %v2_ccc4, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c928, i32* @r0, align 4
  br i1 %v2_ccc8, label %dec_label_pc_cdc8, label %dec_label_pc_ccd8thread-pre-split

dec_label_pc_ccd8thread-pre-split:                ; preds = %dec_label_pc_ccc0.preheader, %dec_label_pc_ccc0.loopexit
  %v0_ccd8.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_ccd8

dec_label_pc_ccd8:                                ; preds = %dec_label_pc_ccd8thread-pre-split, %dec_label_pc_cda0
  %v0_ccd8 = phi i32 [ %v0_ccd8.pr, %dec_label_pc_ccd8thread-pre-split ], [ 1, %dec_label_pc_cda0 ]
  %v2_ccd8 = icmp eq i32 %v0_ccd8, 0
  br i1 %v2_ccd8, label %dec_label_pc_cce0, label %dec_label_pc_cdc8

dec_label_pc_cce0:                                ; preds = %dec_label_pc_ccd8
  %v0_cce0 = call i32 @function_11488()
  %v0_cce4 = load i32, i32* @r5, align 4
  %v2_ccec = inttoptr i32 %v0_cce4 to i32*
  %v3_ccec = call i32 @function_10e34(i32 3, i32* %v2_ccec)
  store i32 %v2_c914, i32* @r0, align 4
  %v3_ccf8 = call i32 @function_11410(i8* %v2_c934, i32 %v3_ccec)
  %v2_cd00 = call i32 @function_113e8(i8* %v2_c934)
  %v0_cd04 = load i32, i32* @r7, align 4
  %v0_cd08 = load i32, i32* @sl, align 4
  %v2_cd08 = add i32 %v0_cd08, %v2_cd00
  store i32 %v2_cd08, i32* @r0, align 4
  %v2_cd0c = inttoptr i32 %v2_cd08 to i8*
  %v3_cd0c = call i32 @function_11410(i8* %v2_cd0c, i32 %v0_cd04)
  %v2_cd14 = call i32 @function_113e8(i8* %v2_c934)
  %v0_cd18 = load i32, i32* @r5, align 4
  store i32 %v2_cd14, i32* @r4, align 4
  %v2_cd24 = inttoptr i32 %v0_cd18 to i32*
  %v3_cd24 = call i32 @function_10e34(i32 6, i32* %v2_cd24)
  %v0_cd2c = load i32, i32* @sl, align 4
  %v1_cd2c = load i32, i32* @r4, align 4
  %v2_cd2c = add i32 %v1_cd2c, %v0_cd2c
  store i32 %v2_cd2c, i32* @r0, align 4
  %v2_cd30 = inttoptr i32 %v2_cd2c to i8*
  %v3_cd30 = call i32 @function_11410(i8* %v2_cd30, i32 %v3_cd24)
  %v2_cd38 = call i32 @function_113e8(i8* %v2_c934)
  %v0_cd40 = load i32, i32* @sl, align 4
  %v2_cd40 = add i32 %v0_cd40, %v2_cd38
  store i32 %v2_cd40, i32* @r0, align 4
  %v2_cd44 = inttoptr i32 %v2_cd40 to i8*
  %v3_cd44 = call i32 @function_11410(i8* %v2_cd44, i32 ptrtoint (i32* @global_var_14668.46 to i32))
  %v2_cd4c = call i32 @function_113e8(i8* %v2_c934)
  %v0_cd50 = load i32, i32* @r6, align 4
  %v1_cd50 = add i32 %v0_cd50, 11
  %v0_cd54 = load i32, i32* @sl, align 4
  %v2_cd54 = add i32 %v0_cd54, %v2_cd4c
  store i32 %v2_cd54, i32* @r0, align 4
  %v2_cd58 = inttoptr i32 %v2_cd54 to i8*
  %v3_cd58 = call i32 @function_11410(i8* %v2_cd58, i32 %v1_cd50)
  %v4_cd68 = call i32 @function_11e5c(i8* %v2_c934, i32 %v2_c928, i32 4096)
  %v7_cd6c = icmp eq i32 %v4_cd68, -1
  br i1 %v7_cd6c, label %dec_label_pc_ccc0.loopexit, label %dec_label_pc_cd78

dec_label_pc_cd78:                                ; preds = %dec_label_pc_cce0
  %v2_cd78 = call i32 @function_113e8(i8* %v2_c94c)
  store i32 %v2_cd78, i32* @r1, align 4
  %v4_cd8c = call i32 @function_1173c(i8* %v2_c94c, i32 %v2_cd78, i32 %v2_cb9c.pre-phi)
  %v7_cd90 = icmp eq i32 %v4_cd8c, -1
  br i1 %v7_cd90, label %dec_label_pc_ccc0.loopexit, label %dec_label_pc_cda0

dec_label_pc_cda0:                                ; preds = %dec_label_pc_cd78
  %v0_cd98 = load i32, i32* @r7, align 4
  %v2_cda0 = inttoptr i32 %v0_cd98 to i8*
  %v3_cda0 = call i32 @function_11514(i8* %v2_cda0, i32 10)
  %v2_cda8 = call i32 @function_11d68(i32 %v3_cda0, i32 9)
  %v0_cdac = load i32, i32* @sb, align 4
  %v1_cdb0 = inttoptr i32 %v0_cdac to i32*
  %v2_cdb0 = call i32 @function_120c0(i32* %v1_cdb0)
  store i32 %v2_cdb0, i32* @r6, align 4
  %v2_cdb4 = icmp eq i32 %v2_cdb0, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c928, i32* @r0, align 4
  br i1 %v2_cdb4, label %dec_label_pc_cdc8, label %dec_label_pc_ccd8

dec_label_pc_cdc8:                                ; preds = %dec_label_pc_ccc0.loopexit, %dec_label_pc_cda0, %dec_label_pc_ccd8, %dec_label_pc_ccc0.preheader
  %v0_cdc8 = load i32, i32* @sb, align 4
  %v1_cdcc = inttoptr i32 %v0_cdc8 to i32*
  %v2_cdcc = call i32 @function_11f10(i32* %v1_cdcc)
  %v0_cdd0 = load i32, i32* @r8, align 4
  %v1_cdd4 = inttoptr i32 %v0_cdd0 to i32*
  %v2_cdd4 = call i32 @function_120c0(i32* %v1_cdd4)
  %v2_cdd8 = icmp eq i32 %v2_cdd4, 0
  br i1 %v2_cdd8, label %dec_label_pc_cde0, label %dec_label_pc_cbdc

dec_label_pc_cde0:                                ; preds = %dec_label_pc_cbcc.loopexit, %dec_label_pc_cdc8, %dec_label_pc_cbdc, %dec_label_pc_cbcc.preheader
  %v0_cde0 = load i32, i32* @r8, align 4
  %v1_cde4 = inttoptr i32 %v0_cde0 to i32*
  %v2_cde4 = call i32 @function_11f10(i32* %v1_cde4)
  %v0_cde8 = load i32, i32* @r5, align 4
  %v1_cde8 = urem i32 %v0_cde8, 256
  br label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %dec_label_pc_cbac, %dec_label_pc_cde0
  %storemerge = phi i32 [ %v1_cde8, %dec_label_pc_cde0 ], [ 0, %dec_label_pc_cbac ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_cdf0 = call i32 @function_12cb4(i32 1)
  br label %dec_label_pc_cdf4

dec_label_pc_cdf4:                                ; preds = %dec_label_pc_cb90, %dec_label_pc_cdec
  %v1_cdf8 = call i32 @function_10e60(i32 3)
  %v1_ce00 = call i32 @function_10e60(i32 4)
  %v1_ce08 = call i32 @function_10e60(i32 6)
  %v1_ce10 = call i32 @function_10e60(i32 8)
  br label %dec_label_pc_ce14

dec_label_pc_ce14:                                ; preds = %dec_label_pc_c9b0, %dec_label_pc_cdf4
  %v0_ce14 = load i32, i32* @r4, align 4
  %v2_ce20 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_ce20, i32* @r4, align 4
  store i32 %v6_c900, i32* @r5, align 4
  store i32 %v9_c900, i32* @r6, align 4
  store i32 %v12_c900, i32* @r7, align 4
  store i32 %v15_c900, i32* @r8, align 4
  store i32 %v18_c900, i32* @sb, align 4
  store i32 %v21_c900, i32* @sl, align 4
  store i32 %v24_c900, i32* @fp, align 4
  ret i32 %v0_ce14

dec_label_pc_ce24:                                ; preds = %dec_label_pc_cb00
  %v1_ce24 = add i32 %v0_ce24, 1
  store i32 %v1_ce24, i32* @lr, align 4
  %v7_ce28 = icmp eq i32 %v0_ce24, 0
  br i1 %v7_ce28, label %dec_label_pc_ce30, label %dec_label_pc_cb08

dec_label_pc_ce30:                                ; preds = %dec_label_pc_ce24
  %v1_ce30 = add i32 %v0_cb10, 3
  %v2_ce30 = inttoptr i32 %v1_ce30 to i8*
  %v3_ce30 = load i8, i8* %v2_ce30, align 1
  %v7_ce34 = icmp eq i8 %v3_ce30, 65
  br i1 %v7_ce34, label %dec_label_pc_ce44, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_ce30
  br label %dec_label_pc_cad8.backedge

dec_label_pc_ce44:                                ; preds = %dec_label_pc_ce30
  store i32 %v1_ce24, i32* @r4, align 4
  br label %dec_label_pc_cad8.backedge

dec_label_pc_cad8.backedge:                       ; preds = %.thread33, %dec_label_pc_ce44, %dec_label_pc_cb0c
  %v0_cb1885 = phi i32 [ %v1_ce24, %dec_label_pc_ce44 ], [ %v0_cb1886, %dec_label_pc_cb0c ], [ %v0_cb1886, %.thread33 ]
  %v0_ce2474 = phi i32 [ %v1_ce24, %dec_label_pc_ce44 ], [ %v0_cb0c, %dec_label_pc_cb0c ], [ %v1_ce24, %.thread33 ]
  %v0_cb00.pr71 = phi i32 [ 0, %dec_label_pc_ce44 ], [ %v0_cb00.pr72, %dec_label_pc_cb0c ], [ 0, %.thread33 ]
  %v0_cad8 = add i32 %v0_cb10, 1
  %v1_cad8 = add i32 %v0_cb10, 3
  %v2_cad8 = inttoptr i32 %v1_cad8 to i8*
  %v3_cad8 = load i8, i8* %v2_cad8, align 1
  %v2_cadc = icmp eq i8 %v3_cad8, 0
  %v1_cae0 = add i32 %v0_cae082, 1
  br i1 %v2_cadc, label %dec_label_pc_cb18, label %dec_label_pc_cae8

dec_label_pc_ce54:                                ; preds = %dec_label_pc_c900
  store i8 48, i8* %stack_var_-68, align 1
  br label %dec_label_pc_c9b0

; uselistorder directives
  uselistorder i32 %v1_cae0, { 1, 0 }
  uselistorder i8 %v3_cad8, { 1, 0 }
  uselistorder i32 %v0_cb1885, { 1, 0 }
  uselistorder i32 %v1_ce24, { 4, 3, 0, 2, 5, 1 }
  uselistorder i32 %v2_cdd4, { 1, 0 }
  uselistorder i32 %v1_cb44, { 1, 0 }
  uselistorder i32 %v0_cb5028, { 1, 0 }
  uselistorder i32 %v1_cb68, { 0, 3, 1, 2 }
  uselistorder i32 %v0_cb0c, { 1, 0 }
  uselistorder i32 %v0_cae082, { 1, 0 }
  uselistorder i32 %v0_ce24, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_cb1886, { 1, 2, 0 }
  uselistorder i32 %v1_cae056, { 1, 0 }
  uselistorder i32 %v2_cac4, { 1, 0 }
  uselistorder i32 %v1_cac0, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v0_ca7c13, { 1, 0, 2 }
  uselistorder i32 %v0_ca6c, { 1, 0 }
  uselistorder i32 %v1_ca4c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_c9e0, { 1, 2, 0 }
  uselistorder i32 %v2_c974, { 1, 0 }
  uselistorder i32 %v2_c928, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_c914, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i8* %stack_var_-581, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-68, { 2, 0, 1 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @function_11640, { 1, 0 }
  uselistorder label %dec_label_pc_cad8.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ce14, { 1, 0 }
  uselistorder label %dec_label_pc_cdf4, { 1, 0 }
  uselistorder label %dec_label_pc_cdec, { 1, 0 }
  uselistorder label %dec_label_pc_cde0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_cdc8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ccd8, { 1, 0 }
  uselistorder label %dec_label_pc_ccd8thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_ccc0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_cbdc, { 1, 0 }
  uselistorder label %dec_label_pc_cbdc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cbcc.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb64, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cae8, { 1, 0 }
  uselistorder label %dec_label_pc_ca8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c9f0.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_ca40, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_ca08, { 1, 0 }
  uselistorder label %dec_label_pc_c9b0, { 1, 0 }
}

define i32 @function_ce80(i32 %arg1) local_unnamed_addr {
dec_label_pc_ce80:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-628 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %v3_ce80 = load i32, i32* @r4, align 4
  %v6_ce80 = load i32, i32* @r5, align 4
  %v9_ce80 = load i32, i32* @r6, align 4
  %v12_ce80 = load i32, i32* @r7, align 4
  %v15_ce80 = load i32, i32* @r8, align 4
  %v18_ce80 = load i32, i32* @sb, align 4
  %v21_ce80 = load i32, i32* @sl, align 4
  %v24_ce80 = load i32, i32* @fp, align 4
  %v2_ce8c = call i32 @function_11eb8(i32* null)
  store i32 %v2_ce8c, i32* @r6, align 4
  %v0_ce94 = call i32 @function_11c94()
  %v7_ce98 = icmp eq i32 %v0_ce94, -1
  %. = zext i1 %v7_ce98 to i32
  %tmp56 = icmp slt i32 %v0_ce94, 1
  %storemerge37 = select i1 %tmp56, i32 %., i32 1
  store i32 %storemerge37, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1d1bc.44 to i32), i32* %r3.global-to-local, align 4
  %v2_ceb4 = icmp eq i32 %storemerge37, 0
  store i32 %v0_ce94, i32* @global_var_1d1bc.44, align 4
  br i1 %v2_ceb4, label %dec_label_pc_cec8, label %dec_label_pc_cec0

dec_label_pc_cec0:                                ; preds = %dec_label_pc_cf24, %dec_label_pc_ce80
  %v29_cec4 = phi i32 [ %v0_ce94, %dec_label_pc_ce80 ], [ 0, %dec_label_pc_cf24 ]
  store i32 %v3_ce80, i32* @r4, align 4
  store i32 %v6_ce80, i32* @r5, align 4
  store i32 %v9_ce80, i32* @r6, align 4
  store i32 %v12_ce80, i32* @r7, align 4
  store i32 %v15_ce80, i32* @r8, align 4
  store i32 %v18_ce80, i32* @sb, align 4
  store i32 %v21_ce80, i32* @sl, align 4
  store i32 %v24_ce80, i32* @fp, align 4
  ret i32 %v29_cec4

dec_label_pc_cec8:                                ; preds = %dec_label_pc_ce80
  store i32 2, i32* @r5, align 4
  store i32 2, i32* %stack_var_-52, align 4
  %v1_cedc = call i32 @function_c900(i32 20736)
  %v2_cee0 = icmp eq i32 %v1_cedc, 0
  br i1 %v2_cee0, label %dec_label_pc_cee8, label %dec_label_pc_d13c

dec_label_pc_cee8:                                ; preds = %dec_label_pc_cec8, %dec_label_pc_d13c, %dec_label_pc_d164
  %v1_ceec = call i32 @function_12cb4(i32 5)
  %v1_cef4 = call i32 @function_124dc(i32 4096)
  %v2_cef4 = inttoptr i32 %v1_cef4 to i8*
  store i32 %v1_cef4, i32* @global_var_1d25c.49, align 4
  store i32 ptrtoint (i32* @global_var_1d1c0.51 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v2_cef4, align 1
  %v0_cf0c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf0c = load i32, i32* %r3.global-to-local, align 4
  %v2_cf0c = inttoptr i32 %v1_cf0c to i32*
  store i32 %v0_cf0c, i32* %v2_cf0c, align 4
  %v0_cf10 = load i32, i32* @r6, align 4
  store i32 %v0_cf10, i32* @r5, align 4
  %v0_cf14 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_cf14, i32* @sb, align 4
  store i32 400, i32* @r6, align 4
  %v2_cf1c = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_cf1c, i32* @fp, align 4
  %v2_cf20 = ptrtoint i32* %stack_var_-628 to i32
  store i32 %v2_cf20, i32* @r8, align 4
  %v2_d014 = bitcast i32* %stack_var_-116 to i8*
  br label %dec_label_pc_cf24

dec_label_pc_cf24:                                ; preds = %dec_label_pc_cfd8, %dec_label_pc_cee8
  %v1_cf28 = call i32 @function_10f18(i32 3)
  %v3_cf34 = call i32 @function_10e34(i32 3, i32* null)
  store i32 %v3_cf34, i32* @r0, align 4
  %v1_cf38 = call i32 @function_11fc4(i32 %v3_cf34)
  store i32 %v1_cf38, i32* @sl, align 4
  %v2_cf3c = icmp eq i32 %v1_cf38, 0
  br i1 %v2_cf3c, label %dec_label_pc_cec0, label %dec_label_pc_cf44

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf24
  %v1_cf48 = call i32 @function_10e60(i32 3)
  %v0_cf4c20 = load i32, i32* @sl, align 4
  %v1_cf5021 = inttoptr i32 %v0_cf4c20 to i32*
  %v2_cf5022 = call i32 @function_120c0(i32* %v1_cf5021)
  %v2_cf5424 = icmp eq i32 %v2_cf5022, 0
  br i1 %v2_cf5424, label %dec_label_pc_cfd8, label %dec_label_pc_cf5c.preheader

dec_label_pc_cf5c.preheader:                      ; preds = %dec_label_pc_cf44, %dec_label_pc_cf4c.backedge
  %v0_cf5c29 = phi i32 [ %v2_cf50, %dec_label_pc_cf4c.backedge ], [ %v2_cf5022, %dec_label_pc_cf44 ]
  br label %dec_label_pc_cf5c

dec_label_pc_cf5c:                                ; preds = %dec_label_pc_cf5c.preheader, %dec_label_pc_cfc0
  %v0_cf6c = phi i32 [ %v0_cf5c29, %dec_label_pc_cf5c.preheader ], [ %v2_cfcc, %dec_label_pc_cfc0 ]
  %v1_cf5c = add i32 %v0_cf6c, 11
  %v2_cf5c = inttoptr i32 %v1_cf5c to i8*
  %v3_cf5c = load i8, i8* %v2_cf5c, align 1
  %v4_cf5c = zext i8 %v3_cf5c to i32
  %v1_cf60 = add nsw i32 %v4_cf5c, -48
  store i32 %v1_cf60, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_cf60, 9
  br i1 %tmp, label %dec_label_pc_cf4c.backedge, label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf5c
  store i32 %v1_cf5c, i32* @r4, align 4
  %v3_cf78 = call i32 @function_11514(i8* %v2_cf5c, i32 10)
  %v0_cf7c = load i32, i32* @r6, align 4
  store i32 %v3_cf78, i32* @r7, align 4
  %v0_cf84 = load i32, i32* @sb, align 4
  %v1_cf84 = add i32 %v0_cf84, 1
  store i32 %v1_cf84, i32* @sb, align 4
  %v5_cf88 = icmp slt i32 %v0_cf7c, %v3_cf78
  %v2_cfe8 = call i32 @function_11eb8(i32* null)
  br i1 %v5_cf88, label %dec_label_pc_cfe4, label %dec_label_pc_cf8c

dec_label_pc_cf8c:                                ; preds = %dec_label_pc_cf6c
  %v0_cf94 = load i32, i32* @r5, align 4
  %v2_cf94 = sub i32 %v2_cfe8, %v0_cf94
  %v7_cf9c = icmp slt i32 %v2_cf94, 601
  br i1 %v7_cf9c, label %dec_label_pc_cfa4, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_cf8c
  store i32 400, i32* @r6, align 4
  br label %dec_label_pc_cf4c.backedge

dec_label_pc_cfa4:                                ; preds = %dec_label_pc_cf8c
  %v0_cfa4 = load i32, i32* @r7, align 4
  %v7_cfa8 = icmp slt i32 %v0_cfa4, 401
  br i1 %v7_cfa8, label %dec_label_pc_cf4c.backedge, label %dec_label_pc_cfac

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cfa4
  %v0_cfac = load i32, i32* @sb, align 4
  %v2_cfb4 = call i32 @function_119f0(i32 %v0_cfac, i32 10)
  %v2_cfb8 = icmp eq i32 %v2_cfb4, 0
  br i1 %v2_cfb8, label %dec_label_pc_cfc0, label %dec_label_pc_cf4c.backedge

dec_label_pc_cfc0:                                ; preds = %dec_label_pc_cfac
  %v1_cfc4 = call i32 @function_12cb4(i32 1)
  %v0_cfc8 = load i32, i32* @sl, align 4
  %v1_cfcc = inttoptr i32 %v0_cfc8 to i32*
  %v2_cfcc = call i32 @function_120c0(i32* %v1_cfcc)
  %v2_cfd0 = icmp eq i32 %v2_cfcc, 0
  br i1 %v2_cfd0, label %dec_label_pc_cfd8, label %dec_label_pc_cf5c

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cf4c.backedge, %dec_label_pc_cfc0, %dec_label_pc_cf44
  %v0_cfd8 = load i32, i32* @sl, align 4
  %v1_cfdc = inttoptr i32 %v0_cfd8 to i32*
  %v2_cfdc = call i32 @function_11f10(i32* %v1_cfdc)
  br label %dec_label_pc_cf24

dec_label_pc_cfe4:                                ; preds = %dec_label_pc_cf6c
  store i32 %v2_cfe8, i32* %stack_var_-632, align 4
  %v1_cff4 = call i32 @function_10f18(i32 3)
  %v1_cffc = call i32 @function_10f18(i32 7)
  %v3_d008 = call i32 @function_10e34(i32 3, i32* null)
  store i32 %v2_cf1c, i32* @r0, align 4
  %v3_d014 = call i32 @function_11410(i8* %v2_d014, i32 %v3_d008)
  %v0_d018 = load i32, i32* @fp, align 4
  %v2_d018 = add i32 %v0_d018, %v3_d014
  store i32 %v2_d018, i32* @r5, align 4
  %v0_d01c = load i32, i32* @r4, align 4
  store i32 %v2_d018, i32* @r0, align 4
  %v2_d024 = inttoptr i32 %v2_d018 to i8*
  %v3_d024 = call i32 @function_11410(i8* %v2_d024, i32 %v0_d01c)
  store i32 %v3_d024, i32* @r4, align 4
  %v3_d034 = call i32 @function_10e34(i32 7, i32* null)
  %v0_d03c = load i32, i32* @r5, align 4
  %v1_d03c = load i32, i32* @r4, align 4
  %v2_d03c = add i32 %v1_d03c, %v0_d03c
  store i32 %v2_d03c, i32* @r0, align 4
  %v2_d040 = inttoptr i32 %v2_d03c to i8*
  %v3_d040 = call i32 @function_11410(i8* %v2_d040, i32 %v3_d034)
  %v1_d048 = call i32 @function_10e60(i32 3)
  %v1_d050 = call i32 @function_10e60(i32 7)
  %v3_d05c = call i32 @function_11d94(i8* %v2_d014, i32 0)
  %v7_d060 = icmp eq i32 %v3_d05c, -1
  store i32 %v3_d05c, i32* @r6, align 4
  br i1 %v7_d060, label %dec_label_pc_d108, label %dec_label_pc_d06c

dec_label_pc_d06c:                                ; preds = %dec_label_pc_cfe4
  %v1_d070 = call i32 @function_10f18(i32 9)
  br label %dec_label_pc_d074

dec_label_pc_d074:                                ; preds = %dec_label_pc_d0dc, %.thread6, %dec_label_pc_d08c, %dec_label_pc_d06c
  %v0_d074 = load i32, i32* @r6, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v4_d080 = call i32 @function_11e30(i32 %v0_d074, i32* nonnull %stack_var_-628, i32 512)
  store i32 %v4_d080, i32* @r4, align 4
  %tmp59 = icmp slt i32 %v4_d080, 1
  br i1 %tmp59, label %dec_label_pc_d128, label %dec_label_pc_d08c

dec_label_pc_d08c:                                ; preds = %dec_label_pc_d074
  %v3_d094 = call i32 @function_10e34(i32 9, i32* null)
  store i32 %v3_d094, i32* @r5, align 4
  %v3_d0a4 = call i32 @function_10e34(i32 9, i32* null)
  %v1_d0a8 = inttoptr i32 %v3_d0a4 to i8*
  %v2_d0a8 = call i32 @function_113e8(i8* %v1_d0a8)
  %v0_d0ac = load i32, i32* @r4, align 4
  %v5_d0b0 = icmp slt i32 %v0_d0ac, %v2_d0a8
  br i1 %v5_d0b0, label %dec_label_pc_d074, label %.thread6

.thread6:                                         ; preds = %dec_label_pc_d08c
  %v1_d0bc12 = add i32 %v0_d0ac, -1
  store i32 %v1_d0bc12, i32* @r4, align 4
  %v2_d0bc13 = icmp eq i32 %v0_d0ac, 0
  br i1 %v2_d0bc13, label %dec_label_pc_d074, label %dec_label_pc_d0c4.lr.ph

dec_label_pc_d0c4.lr.ph:                          ; preds = %.thread6
  %v0_d0c4.pre = load i32, i32* @r5, align 4
  %v1_d0c8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d0c4

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d0dc, %dec_label_pc_d0c4.lr.ph
  %v0_d0bc = phi i32 [ %v1_d0bc12, %dec_label_pc_d0c4.lr.ph ], [ %v1_d0bc, %dec_label_pc_d0dc ]
  %v0_d0dc = phi i32 [ 0, %dec_label_pc_d0c4.lr.ph ], [ %v1_d0dc, %dec_label_pc_d0dc ]
  %v0_d0d0 = phi i32 [ 0, %dec_label_pc_d0c4.lr.ph ], [ %v1_d0d0., %dec_label_pc_d0dc ]
  %v2_d0c4 = add i32 %v0_d0d0, %v0_d0c4.pre
  %v3_d0c4 = inttoptr i32 %v2_d0c4 to i8*
  %v4_d0c4 = load i8, i8* %v3_d0c4, align 1
  %v6_d0c4 = zext i8 %v4_d0c4 to i32
  store i32 %v6_d0c4, i32* %r2.global-to-local, align 4
  %v2_d0c8 = add i32 %v0_d0dc, %v1_d0c8.pre
  %v3_d0c8 = inttoptr i32 %v2_d0c8 to i8*
  %v4_d0c8 = load i8, i8* %v3_d0c8, align 1
  %v6_d0c8 = zext i8 %v4_d0c8 to i32
  store i32 %v6_d0c8, i32* %r3.global-to-local, align 4
  %v9_d0cc = icmp eq i8 %v4_d0c8, %v4_d0c4
  %v1_d0d0 = add i32 %v0_d0d0, 1
  %v1_d0d0. = select i1 %v9_d0cc, i32 %v1_d0d0, i32 0
  br i1 %v9_d0cc, label %dec_label_pc_d0e4, label %dec_label_pc_d0dc

dec_label_pc_d0dc:                                ; preds = %dec_label_pc_d0e4, %dec_label_pc_d0c4
  %v1_d0dc = add i32 %v0_d0dc, 1
  %v1_d0bc = add i32 %v0_d0bc, -1
  store i32 %v1_d0bc, i32* @r4, align 4
  %v2_d0bc = icmp eq i32 %v0_d0bc, 0
  br i1 %v2_d0bc, label %dec_label_pc_d074, label %dec_label_pc_d0c4

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0c4
  %v9_d0e4 = icmp eq i32 %v2_d0a8, %v1_d0d0.
  br i1 %v9_d0e4, label %dec_label_pc_d0ec, label %dec_label_pc_d0dc

dec_label_pc_d0ec:                                ; preds = %dec_label_pc_d0e4
  %v1_d0f0 = call i32 @function_10e60(i32 9)
  %v0_d0f4 = load i32, i32* @r6, align 4
  %v1_d0f8 = call i32 @function_11c68(i32 %v0_d0f4)
  %v0_d0fc = load i32, i32* @r7, align 4
  %v2_d104 = call i32 @function_11d68(i32 %v0_d0fc, i32 9)
  br label %dec_label_pc_d108

dec_label_pc_d108:                                ; preds = %dec_label_pc_cfe4, %dec_label_pc_d128, %dec_label_pc_d0ec
  store i32 %v2_cf1c, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d110 = call i32 @function_11488()
  %v1_d118 = call i32 @function_12cb4(i32 1)
  %v2_d11c = load i32, i32* %stack_var_-632, align 4
  store i32 %v2_d11c, i32* @r5, align 4
  %v0_d120 = load i32, i32* @r7, align 4
  store i32 %v0_d120, i32* @r6, align 4
  br label %dec_label_pc_cf4c.backedge

dec_label_pc_cf4c.backedge:                       ; preds = %dec_label_pc_cfac, %dec_label_pc_cfa4, %dec_label_pc_cf5c, %dec_label_pc_d108, %.thread1
  %v0_cf4c = load i32, i32* @sl, align 4
  %v1_cf50 = inttoptr i32 %v0_cf4c to i32*
  %v2_cf50 = call i32 @function_120c0(i32* %v1_cf50)
  %v2_cf54 = icmp eq i32 %v2_cf50, 0
  br i1 %v2_cf54, label %dec_label_pc_cfd8, label %dec_label_pc_cf5c.preheader

dec_label_pc_d128:                                ; preds = %dec_label_pc_d074
  %v1_d12c = call i32 @function_10e60(i32 9)
  %v0_d130 = load i32, i32* @r6, align 4
  %v1_d134 = call i32 @function_11c68(i32 %v0_d130)
  br label %dec_label_pc_d108

dec_label_pc_d13c:                                ; preds = %dec_label_pc_cec8
  %v0_d13c = load i32, i32* @r4, align 4
  store i32 %v0_d13c, i32* %r2.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  %v0_d144 = load i32, i32* @r5, align 4
  %v3_d154 = call i32 @function_124b0(i32 %v0_d144, i32 1, i32 %v0_d13c)
  %v7_d158 = icmp eq i32 %v3_d154, -1
  store i32 %v3_d154, i32* @r4, align 4
  br i1 %v7_d158, label %dec_label_pc_cee8, label %dec_label_pc_d164

dec_label_pc_d164:                                ; preds = %dec_label_pc_d13c
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d16c = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_d16c = call i32 @function_122e0(i32 %v3_d154, %sockaddr* %v3_d16c, i32 16)
  %v0_d170 = load i32, i32* @r4, align 4
  %v2_d178 = call i32 @function_12394(i32 %v0_d170, i32 1)
  br label %dec_label_pc_cee8

; uselistorder directives
  uselistorder i32 %v3_d154, { 2, 1, 0 }
  uselistorder i32 %v2_cf50, { 1, 0 }
  uselistorder i32 %v1_d0bc, { 1, 0 }
  uselistorder i32 %v1_d0d0., { 1, 0 }
  uselistorder i1 %v9_d0cc, { 1, 0 }
  uselistorder i32 %v0_d0d0, { 1, 0 }
  uselistorder i32 %v0_d0dc, { 1, 0 }
  uselistorder i32 %v0_d0bc, { 1, 0 }
  uselistorder i32 %v0_d0ac, { 1, 0, 2 }
  uselistorder i32 %v2_d0a8, { 1, 0 }
  uselistorder i32 %v3_d05c, { 1, 0 }
  uselistorder i32 %v2_cfcc, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_ce94, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32)* @function_11514, { 1, 2, 0 }
  uselistorder i32 (i32*)* @function_120c0, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @function_11fc4, { 2, 1, 0 }
  uselistorder i32* @global_var_1d1bc.44, { 0, 2, 1 }
  uselistorder label %dec_label_pc_cf4c.backedge, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_d108, { 1, 2, 0 }
  uselistorder label %dec_label_pc_cf5c, { 1, 0 }
  uselistorder label %dec_label_pc_cf5c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cee8, { 2, 1, 0 }
}

define i32 @function_d18c() local_unnamed_addr {
dec_label_pc_d18c:
  %stack_var_-8 = alloca i32, align 4
  %v3_d18c = load i32, i32* @r4, align 4
  store i32 %v3_d18c, i32* %stack_var_-8, align 4
  %v1_d194 = call i32 @function_10f18(i32 2)
  store i32 2128547635, i32* @global_var_1d264.55, align 4
  %v3_d1ac = call i32 @function_10e34(i32 2, i32* null)
  %v4_d1ac = inttoptr i32 %v3_d1ac to i8*
  %v2_d1b0 = add i32 %v3_d1ac, 1
  %v3_d1b0 = inttoptr i32 %v2_d1b0 to i8*
  %v4_d1b0 = load i8, i8* %v3_d1b0, align 1
  %v3_d1b4 = load i8, i8* %v4_d1ac, align 1
  store i8 %v4_d1b0, i8* bitcast (i32* @global_var_1d263.56 to i8*), align 4
  store i8 %v3_d1b4, i8* bitcast (i32* @global_var_1d262.57 to i8*), align 4
  %v2_d1cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_d1cc, i32* @r4, align 4
  %v1_d1d0 = call i32 @function_10e60(i32 2)
  %v0_d1d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d1d4, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_d18c
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_d18c, %bb
  ret i32 %v1_d1d0

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_d1dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_d1dc:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_d1dc = load i32, i32* @r4, align 4
  %v6_d1dc = load i32, i32* @r5, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_d1f8 = call i32 @function_124b0(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_1d020.59 to i32), i32* @r6, align 4
  %v7_d200 = icmp eq i32 %v3_d1f8, -1
  store i32 %v3_d1f8, i32* @global_var_1d020.59, align 4
  br i1 %v7_d200, label %dec_label_pc_d2c0, label %dec_label_pc_d20c

dec_label_pc_d20c:                                ; preds = %dec_label_pc_d1dc
  %v0_d210 = load i32, i32* @r4, align 4
  %v6_d220 = call i32 @function_12480(i32 %v3_d1f8, i32 %v0_d210, i32 2, i32* nonnull %stack_var_-28, i32 4)
  %v2_d224 = load i32, i32* @global_var_1d020.59, align 4
  store i32 %v2_d224, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_d234 = call i32 @function_11ba4(i32 %v2_d224, i32 3)
  %v1_d23c = or i32 %v2_d234, 2048
  store i32 %v1_d23c, i32* @r2, align 4
  %v0_d240 = load i32, i32* @r4, align 4
  %v2_d244 = call i32 @function_11ba4(i32 %v0_d240, i32 4)
  store i32 ptrtoint (i8** @global_var_1d02c.61 to i32), i32* @r8, align 4
  %v2_d24c = load i8, i8* bitcast (i8** @global_var_1d02c.61 to i8*), align 4
  %v2_d250 = icmp eq i8 %v2_d24c, 0
  br i1 %v2_d250, label %.thread2, label %.thread

.thread2:                                         ; preds = %dec_label_pc_d20c
  br label %bb

.thread:                                          ; preds = %dec_label_pc_d20c
  br label %bb

bb:                                               ; preds = %.thread2, %.thread
  store i32 0, i32* @r5, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_d288 = call i32 @function_12190()
  %v0_d28c = load i32, i32* @r5, align 4
  %v2_d28c = inttoptr i32 %v0_d288 to i32*
  store i32 %v0_d28c, i32* %v2_d28c, align 4
  %v2_d290 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d290, i32* @r7, align 4
  store i32 %v0_d288, i32* @r4, align 4
  %v2_d29c = load i32, i32* @global_var_1d020.59, align 4
  %v3_d2a4 = bitcast i32* %stack_var_-44 to %sockaddr*
  %v4_d2a4 = call i32 @function_122e0(i32 %v2_d29c, %sockaddr* %v3_d2a4, i32 16)
  %v7_d2a8 = icmp eq i32 %v4_d2a4, -1
  br i1 %v7_d2a8, label %dec_label_pc_d2c8, label %dec_label_pc_d2b0

dec_label_pc_d2b0:                                ; preds = %bb
  %v2_d2b8 = load i32, i32* @global_var_1d020.59, align 4
  %v2_d2bc = call i32 @function_12394(i32 %v2_d2b8, i32 1)
  br label %dec_label_pc_d2c0

dec_label_pc_d2c0:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d2d4, %dec_label_pc_d2b0
  %v20_d2c4 = phi i32 [ %v3_d1f8, %dec_label_pc_d1dc ], [ %v1_d324, %dec_label_pc_d2d4 ], [ %v2_d2bc, %dec_label_pc_d2b0 ]
  store i32 %v3_d1dc, i32* @r4, align 4
  store i32 %v6_d1dc, i32* @r5, align 4
  ret i32 %v20_d2c4

dec_label_pc_d2c8:                                ; preds = %bb
  %v0_d2c8 = load i32, i32* @r4, align 4
  %v1_d2c8 = inttoptr i32 %v0_d2c8 to i32*
  %v2_d2c8 = load i32, i32* %v1_d2c8, align 4
  %v7_d2cc = icmp eq i32 %v2_d2c8, 99
  br i1 %v7_d2cc, label %dec_label_pc_d32c, label %dec_label_pc_d2d4

dec_label_pc_d2d4:                                ; preds = %dec_label_pc_d32c, %bb21, %dec_label_pc_d2c8
  store i32 0, i32* @r4, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v2_d2ec = load i32, i32* @global_var_1d020.59, align 4
  %v4_d304 = call i32 @function_1230c(i32 %v2_d2ec, %sockaddr* %v3_d2a4, i32 16)
  %v1_d30c = call i32 @function_12cb4(i32 5)
  %v2_d310 = load i32, i32* @global_var_1d020.59, align 4
  %v1_d314 = call i32 @function_11c68(i32 %v2_d310)
  %v1_d320 = call i32 @function_c900(i32 50951)
  %v1_d324 = call i32 @function_d1dc(i32 %v1_d320)
  br label %dec_label_pc_d2c0

dec_label_pc_d32c:                                ; preds = %dec_label_pc_d2c8
  %v2_d32c = load i8, i8* bitcast (i8** @global_var_1d02c.61 to i8*), align 4
  %v3_d32c = zext i8 %v2_d32c to i32
  %v1_d330 = load i32, i32* @r5, align 4
  %v9_d330 = icmp eq i32 %v3_d32c, %v1_d330
  br i1 %v9_d330, label %dec_label_pc_d2d4, label %bb21

bb21:                                             ; preds = %dec_label_pc_d32c
  %v2_d338 = trunc i32 %v1_d330 to i8
  store i8 %v2_d338, i8* bitcast (i8** @global_var_1d02c.61 to i8*), align 4
  br label %dec_label_pc_d2d4

; uselistorder directives
  uselistorder i32 %v3_d1f8, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @function_c900, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_12394, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1d02c.61 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_1d02c.61, { 1, 0 }
  uselistorder label %dec_label_pc_d2d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d2c0, { 1, 2, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_d34c(i32 %arg1) local_unnamed_addr {
dec_label_pc_d34c:
  %stack_var_-16 = alloca i32, align 4
  %v3_d34c = load i32, i32* @r4, align 4
  %v6_d34c = load i32, i32* @r5, align 4
  %v2_d350 = ptrtoint i32* %stack_var_-16 to i32
  %v0_d354 = call i32 @function_11c94()
  %v7_d358 = icmp eq i32 %v0_d354, -1
  %. = zext i1 %v7_d358 to i32
  %tmp11 = icmp slt i32 %v0_d354, 1
  %storemerge5 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge5, i32* @r5, align 4
  %v2_d374 = icmp eq i32 %storemerge5, 0
  store i32 %v0_d354, i32* @global_var_1d1c4.64, align 4
  br i1 %v2_d374, label %dec_label_pc_d388, label %dec_label_pc_d380

dec_label_pc_d380:                                ; preds = %dec_label_pc_d34c
  store i32 %v3_d34c, i32* @r4, align 4
  store i32 %v6_d34c, i32* @r5, align 4
  ret i32 %v0_d354

dec_label_pc_d388:                                ; preds = %dec_label_pc_d34c
  store i32 1, i32* %stack_var_-16, align 4
  %v1_d394 = call i32 @function_10f18(i32 13)
  %v1_d39c = call i32 @function_10f18(i32 14)
  %v0_d3a0 = load i32, i32* @r5, align 4
  %v2_d3a8 = inttoptr i32 %v0_d3a0 to i32*
  %v3_d3a8 = call i32 @function_10e34(i32 13, i32* %v2_d3a8)
  %v2_d3b0 = inttoptr i32 %v3_d3a8 to i8*
  %v3_d3b0 = call i32 @function_11d94(i8* %v2_d3b0, i32 2)
  %v7_d3b4 = icmp eq i32 %v3_d3b0, -1
  store i32 %v3_d3b0, i32* @r4, align 4
  br i1 %v7_d3b4, label %dec_label_pc_d3fc, label %dec_label_pc_d3c0

dec_label_pc_d3c0:                                ; preds = %dec_label_pc_d3fc, %dec_label_pc_d388
  %v0_d3cc = phi i32 [ %v3_d40c, %dec_label_pc_d3fc ], [ %v3_d3b0, %dec_label_pc_d388 ]
  %v3_d3d4 = call i32 @function_11d18(i32 %v0_d3cc, i32 -2147199228, i32 %v2_d350)
  br label %dec_label_pc_d3d8

dec_label_pc_d3d8:                                ; preds = %dec_label_pc_d3d8, %dec_label_pc_d3c0
  %v0_d3e4 = load i32, i32* @r4, align 4
  %v3_d3ec = call i32 @function_11d18(i32 %v0_d3e4, i32 -2147199227, i32 0)
  %v1_d3f4 = call i32 @function_12cb4(i32 10)
  br label %dec_label_pc_d3d8

dec_label_pc_d3fc:                                ; preds = %dec_label_pc_d388
  %v0_d3fc = load i32, i32* @r5, align 4
  %v2_d404 = inttoptr i32 %v0_d3fc to i32*
  %v3_d404 = call i32 @function_10e34(i32 14, i32* %v2_d404)
  %v2_d40c = inttoptr i32 %v3_d404 to i8*
  %v3_d40c = call i32 @function_11d94(i8* %v2_d40c, i32 2)
  %v3_d410 = icmp eq i32 %v3_d40c, -1
  store i32 %v3_d40c, i32* @r4, align 4
  br i1 %v3_d410, label %dec_label_pc_d41c, label %dec_label_pc_d3c0

dec_label_pc_d41c:                                ; preds = %dec_label_pc_d3fc
  %v1_d420 = call i32 @function_10e60(i32 13)
  %v1_d428 = call i32 @function_10e60(i32 14)
  %v0_d42c = load i32, i32* @r5, align 4
  %v1_d430 = call i32 @function_12c20(i32 %v0_d42c)
  %v0_d434 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d434, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_d41c
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_d41c, %bb14
  ret i32 %v1_d430

; uselistorder directives
  uselistorder i32 %v3_d40c, { 1, 2, 0 }
  uselistorder i32 %v3_d3b0, { 1, 2, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v0_d354, { 3, 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_11d18, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_d438(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_d438:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-1420 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-38 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-396 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d438 = load i32, i32* @r4, align 4
  store i32 %v3_d438, i32* %stack_var_-36, align 4
  store i32 0, i32* @r4, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v0_d454 = call i32 @function_116a0()
  store i32 %v0_d454, i32* @global_var_1d258.33, align 4
  store i32 1494907824, i32* %r2.global-to-local, align 4
  store i8 23, i8* bitcast (i32* @global_var_1d263.56 to i8*), align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i8 2, i8* bitcast (i8** @global_var_1d260.53 to i8*), align 4
  store i32 1494907824, i32* @global_var_1d264.55, align 4
  %v0_d47c = load i32, i32* @r4, align 4
  %v1_d47c = trunc i32 %v0_d47c to i8
  store i8 %v1_d47c, i8* bitcast (i32* @global_var_1d262.57 to i8*), align 4
  store i8 %v1_d47c, i8* bitcast (i32* @global_var_1d261.68 to i8*), align 4
  %v6_d484 = call i32 @function_10fd0(i32 %v0_d454, i32 ptrtoint (i8** @global_var_1d260.53 to i32), i32 1494907824, i32 2)
  store i32 ptrtoint (i32* @global_var_d18c.70 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_d18c.70 to i32), i32* @global_var_1d028.72, align 4
  %v1_d494 = call i32 @function_d1dc(i32 %v6_d484)
  %v1_d498 = call i32 @function_dbe0(i32 %v1_d494)
  %v2_d4a0 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_d4a0, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_d4a8 = call i32 @function_11488()
  %v0_d4ac = load i32, i32* @r5, align 4
  %v7_d4ac = icmp eq i32 %v0_d4ac, 2
  br i1 %v7_d4ac, label %dec_label_pc_db20, label %dec_label_pc_d4b4

dec_label_pc_d4b4:                                ; preds = %dec_label_pc_db20, %dec_label_pc_d438, %dec_label_pc_db30
  %v0_d4b4 = call i32 @function_db88()
  store i32 %v0_d4b4, i32* %r6.global-to-local, align 4
  %v0_d4bc = load i32, i32* @sl, align 4
  %v1_d4bc = inttoptr i32 %v0_d4bc to i32*
  %v2_d4bc = load i32, i32* %v1_d4bc, align 4
  %v1_d4c0 = inttoptr i32 %v2_d4bc to i8*
  %v2_d4c0 = call i32 @function_113e8(i8* %v1_d4c0)
  %v0_d4c8 = load i32, i32* @sl, align 4
  %v1_d4c8 = inttoptr i32 %v0_d4c8 to i32*
  %v2_d4c8 = load i32, i32* %v1_d4c8, align 4
  %v1_d4cc = inttoptr i32 %v2_d4c8 to i8*
  %v2_d4cc = call i32 @function_113e8(i8* %v1_d4cc)
  %v1_d4d0 = sub i32 20, %v2_d4c0
  store i32 %v2_d4cc, i32* @r5, align 4
  %v0_d4d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_d4dc = call i32 @function_119f0(i32 %v0_d4d8, i32 %v1_d4d0)
  %v2_d4e4 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_d4e4, i32* @r6, align 4
  %v1_d4e8 = load i32, i32* @r5, align 4
  %v2_d4e8 = add i32 %v1_d4e8, %v2_d4dc
  store i32 %v2_d4e8, i32* @r4, align 4
  %v2_d4f4 = call i32 @function_dc3c(i32 %v2_d4e4, i32 %v2_d4e8)
  %v2_d4fc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_d4fc, i32* %r2.global-to-local, align 4
  %v1_d500 = load i32, i32* @r4, align 4
  %v2_d500 = add i32 %v1_d500, %v2_d4fc
  store i32 %v2_d500, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  %v0_d50c = load i32, i32* @sl, align 4
  %v1_d50c = inttoptr i32 %v0_d50c to i32*
  %v2_d50c = load i32, i32* %v1_d50c, align 4
  store i32 %v2_d50c, i32* @r0, align 4
  %v3_d510 = add i32 %v2_d500, -72
  %v4_d510 = inttoptr i32 %v3_d510 to i8*
  store i8 0, i8* %v4_d510, align 1
  %v2_d514 = inttoptr i32 %v2_d50c to i8*
  %v3_d514 = call i32 @function_11410(i8* %v2_d514, i32 %v2_d4e4)
  store i32 32, i32* @r1, align 4
  store i32 %v2_d4e4, i32* @r0, align 4
  %v0_d520 = call i32 @function_11488()
  %v0_d524 = call i32 @function_db88()
  store i32 %v0_d524, i32* @r7, align 4
  %v0_d52c = load i32, i32* @sl, align 4
  %v1_d52c = inttoptr i32 %v0_d52c to i32*
  %v2_d52c = load i32, i32* %v1_d52c, align 4
  %v1_d530 = inttoptr i32 %v2_d52c to i8*
  %v2_d530 = call i32 @function_113e8(i8* %v1_d530)
  %v0_d538 = load i32, i32* @sl, align 4
  %v1_d538 = inttoptr i32 %v0_d538 to i32*
  %v2_d538 = load i32, i32* %v1_d538, align 4
  %v1_d53c = inttoptr i32 %v2_d538 to i8*
  %v2_d53c = call i32 @function_113e8(i8* %v1_d53c)
  %v1_d540 = sub i32 20, %v2_d530
  store i32 %v2_d53c, i32* @r5, align 4
  %v0_d548 = load i32, i32* @r7, align 4
  %v2_d54c = call i32 @function_119f0(i32 %v0_d548, i32 %v1_d540)
  %v1_d550 = load i32, i32* @r5, align 4
  %v2_d550 = add i32 %v1_d550, %v2_d54c
  store i32 %v2_d550, i32* @r4, align 4
  %v2_d55c = call i32 @function_dc3c(i32 %v2_d4e4, i32 %v2_d550)
  %v1_d568 = load i32, i32* @r4, align 4
  %v2_d568 = add i32 %v1_d568, %v2_d4fc
  store i32 %v2_d568, i32* @r3, align 4
  %v0_d56c = load i32, i32* @r8, align 4
  %v1_d56c = trunc i32 %v0_d56c to i8
  %v3_d56c = add i32 %v2_d568, -72
  %v4_d56c = inttoptr i32 %v3_d56c to i8*
  store i8 %v1_d56c, i8* %v4_d56c, align 1
  %v2_d578 = call i32 @function_11e00(i32 15, i32 %v2_d4e4)
  %v1_d580 = call i32 @function_10f18(i32 1)
  %v3_d58c = call i32 @function_10e34(i32 1, i32* nonnull %stack_var_-48)
  %v3_d590 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d590, i32* %r2.global-to-local, align 4
  %v3_d59c = inttoptr i32 %v3_d58c to i32*
  %v4_d59c = call i32 @function_11ee4(i32 1, i32* %v3_d59c, i32 %v3_d590)
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d5ac = call i32 @function_11ee4(i32 1, i32* nonnull @global_var_146cc.74, i32 1)
  %v1_d5b4 = call i32 @function_10e60(i32 1)
  %v1_d5b8 = call i32 @function_8738(i32 %v1_d5b4)
  %v1_d5bc = call i32 @function_ce80(i32 %v1_d5b8)
  %v1_d5c0 = call i32 @function_d34c(i32 %v1_d5bc)
  %v0_d5c4 = call i32 @function_e4d8()
  store i32 ptrtoint (i32* @global_var_1d020.59 to i32), i32* @sb, align 4
  %v0_d5d8 = load i32, i32* @r8, align 4
  store i32 %v0_d5d8, i32* @fp, align 4
  %v2_d5dc = ptrtoint i32* %stack_var_-268 to i32
  store i32 %v2_d5dc, i32* @r6, align 4
  %v2_d5e0 = ptrtoint i32* %stack_var_-396 to i32
  store i32 %v2_d5e0, i32* @r7, align 4
  %v2_d6b8 = ptrtoint i32* %stack_var_-60 to i32
  %v4_d918 = bitcast i8** %stack_var_-38 to i32*
  %v2_da3c = ptrtoint i32* %stack_var_-1420 to i32
  %v2_d930 = ptrtoint i32* %stack_var_-44 to i32
  %v2_d934 = ptrtoint i32* %stack_var_-52 to i32
  %v1_d9d0 = bitcast i32* %stack_var_-140 to i8*
  %v5_d998 = bitcast i32* %stack_var_-76 to %sockaddr*
  br label %dec_label_pc_d5e4

dec_label_pc_d5e4:                                ; preds = %dec_label_pc_d5e4.backedge, %dec_label_pc_d4b4
  %v2_d5ec41 = phi i32 [ %v2_d5ec41.pre, %dec_label_pc_d5e4.backedge ], [ %v2_d5dc, %dec_label_pc_d4b4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_d5ec43 = inttoptr i32 %v2_d5ec41 to i32*
  store i32 0, i32* %v4_d5ec43, align 4
  %v0_d5f044 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5f045 = add i32 %v0_d5f044, 4
  store i32 %v1_d5f045, i32* %r3.global-to-local, align 4
  %v7_d5f446 = icmp eq i32 %v1_d5f045, 128
  br i1 %v7_d5f446, label %dec_label_pc_d5fc, label %dec_label_pc_d5ec.dec_label_pc_d5ec_crit_edge

dec_label_pc_d5ec.dec_label_pc_d5ec_crit_edge:    ; preds = %dec_label_pc_d5e4, %dec_label_pc_d5ec.dec_label_pc_d5ec_crit_edge
  %v1_d5f047 = phi i32 [ %v1_d5f0, %dec_label_pc_d5ec.dec_label_pc_d5ec_crit_edge ], [ %v1_d5f045, %dec_label_pc_d5e4 ]
  %v0_d5ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v2_d5ec = load i32, i32* @r6, align 4
  %v3_d5ec = add i32 %v2_d5ec, %v1_d5f047
  %v4_d5ec = inttoptr i32 %v3_d5ec to i32*
  store i32 %v0_d5ec.pre, i32* %v4_d5ec, align 4
  %v0_d5f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5f0 = add i32 %v0_d5f0, 4
  store i32 %v1_d5f0, i32* %r3.global-to-local, align 4
  %v7_d5f4 = icmp eq i32 %v1_d5f0, 128
  br i1 %v7_d5f4, label %dec_label_pc_d5fc, label %dec_label_pc_d5ec.dec_label_pc_d5ec_crit_edge

dec_label_pc_d5fc:                                ; preds = %dec_label_pc_d5ec.dec_label_pc_d5ec_crit_edge, %dec_label_pc_d5e4
  %v0_d5fc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_d5fc, i32* %r3.global-to-local, align 4
  store i32 %v0_d5fc, i32* @r4, align 4
  %v2_d60448 = load i32, i32* @r7, align 4
  %v3_d60449 = add i32 %v2_d60448, %v0_d5fc
  %v4_d60450 = inttoptr i32 %v3_d60449 to i32*
  store i32 %v0_d5fc, i32* %v4_d60450, align 4
  %v0_d60851 = load i32, i32* %r3.global-to-local, align 4
  %v1_d60852 = add i32 %v0_d60851, 4
  store i32 %v1_d60852, i32* %r3.global-to-local, align 4
  %v7_d60c53 = icmp eq i32 %v1_d60852, 128
  br i1 %v7_d60c53, label %dec_label_pc_d614, label %dec_label_pc_d604.dec_label_pc_d604_crit_edge

dec_label_pc_d604.dec_label_pc_d604_crit_edge:    ; preds = %dec_label_pc_d5fc, %dec_label_pc_d604.dec_label_pc_d604_crit_edge
  %v1_d60854 = phi i32 [ %v1_d608, %dec_label_pc_d604.dec_label_pc_d604_crit_edge ], [ %v1_d60852, %dec_label_pc_d5fc ]
  %v0_d604.pre = load i32, i32* @r4, align 4
  %v2_d604 = load i32, i32* @r7, align 4
  %v3_d604 = add i32 %v2_d604, %v1_d60854
  %v4_d604 = inttoptr i32 %v3_d604 to i32*
  store i32 %v0_d604.pre, i32* %v4_d604, align 4
  %v0_d608 = load i32, i32* %r3.global-to-local, align 4
  %v1_d608 = add i32 %v0_d608, 4
  store i32 %v1_d608, i32* %r3.global-to-local, align 4
  %v7_d60c = icmp eq i32 %v1_d608, 128
  br i1 %v7_d60c, label %dec_label_pc_d614, label %dec_label_pc_d604.dec_label_pc_d604_crit_edge

dec_label_pc_d614:                                ; preds = %dec_label_pc_d604.dec_label_pc_d604_crit_edge, %dec_label_pc_d5fc
  %v2_d614 = load i32, i32* @global_var_1d020.59, align 4
  %v7_d618 = icmp eq i32 %v2_d614, -1
  br i1 %v7_d618, label %dec_label_pc_d648, label %dec_label_pc_d620

dec_label_pc_d620:                                ; preds = %dec_label_pc_d614
  %v3_d620 = udiv i32 %v2_d614, 32
  store i32 %v2_d4fc, i32* %r2.global-to-local, align 4
  %v3_d62c = mul nuw nsw i32 %v3_d620, 4
  %v2_d630 = add i32 %v3_d62c, %v2_d4fc
  store i32 %v2_d630, i32* %r3.global-to-local, align 4
  %v1_d634 = add i32 %v2_d630, -232
  %v2_d634 = inttoptr i32 %v1_d634 to i32*
  %v3_d634 = load i32, i32* %v2_d634, align 4
  %v1_d638 = urem i32 %v2_d614, 32
  %v7_d640 = shl i32 1, %v1_d638
  %v8_d640 = or i32 %v3_d634, %v7_d640
  store i32 %v8_d640, i32* %r2.global-to-local, align 4
  store i32 %v8_d640, i32* %v2_d634, align 4
  br label %dec_label_pc_d648

dec_label_pc_d648:                                ; preds = %dec_label_pc_d614, %dec_label_pc_d620
  %v2_d648 = load i32, i32* @global_var_1d024.77, align 4
  store i32 %v2_d648, i32* %r3.global-to-local, align 4
  %v7_d64c = icmp eq i32 %v2_d648, -1
  store i32 ptrtoint (i32* @global_var_1d024.77 to i32), i32* %r8.global-to-local, align 4
  br i1 %v7_d64c, label %dec_label_pc_d890, label %dec_label_pc_d658

dec_label_pc_d658:                                ; preds = %dec_label_pc_d890, %dec_label_pc_d648, %.thread
  store i32 ptrtoint (i8** @global_var_1d1c8.79 to i32), i32* %r2.global-to-local, align 4
  %v2_d65c = load i8, i8* bitcast (i8** @global_var_1d1c8.79 to i8*), align 4
  %v3_d65c = zext i8 %v2_d65c to i32
  store i32 %v3_d65c, i32* %r3.global-to-local, align 4
  %v2_d660 = icmp eq i8 %v2_d65c, 0
  %v2_d7a4 = load i32, i32* @global_var_1d024.77, align 4
  %v3_d7ac = udiv i32 %v2_d7a4, 32
  br i1 %v2_d660, label %dec_label_pc_d7a4, label %dec_label_pc_d668

dec_label_pc_d668:                                ; preds = %dec_label_pc_d658
  %v3_d674 = mul nuw nsw i32 %v3_d7ac, 4
  %v2_d67c = add i32 %v3_d674, %v2_d4fc
  store i32 %v2_d67c, i32* %r3.global-to-local, align 4
  %v1_d680 = add i32 %v2_d67c, -360
  %v2_d680 = inttoptr i32 %v1_d680 to i32*
  %v3_d680 = load i32, i32* %v2_d680, align 4
  %v1_d684 = urem i32 %v2_d7a4, 32
  %v7_d68c = shl i32 1, %v1_d684
  %v8_d68c = or i32 %v3_d680, %v7_d68c
  store i32 %v8_d68c, i32* %r2.global-to-local, align 4
  store i32 %v8_d68c, i32* %v2_d680, align 4
  br label %dec_label_pc_d694

dec_label_pc_d694:                                ; preds = %dec_label_pc_d7a4, %dec_label_pc_d668
  %v2_d694 = load i32, i32* @global_var_1d024.77, align 4
  store i32 %v2_d694, i32* %r3.global-to-local, align 4
  %v2_d698 = load i32, i32* @global_var_1d020.59, align 4
  %v5_d6a4 = icmp slt i32 %v2_d698, %v2_d694
  br i1 %v5_d6a4, label %bb, label %bb38

bb:                                               ; preds = %dec_label_pc_d694
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_d694, %bb
  %v0_d6bc = phi i32 [ %v2_d698, %dec_label_pc_d694 ], [ %v2_d694, %bb ]
  store i32 0, i32* @lr, align 4
  store i32 10, i32* %stack_var_-60, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d6b8, i32* @ip, align 4
  %v1_d6bc = add i32 %v0_d6bc, 1
  store i32 %v2_d5e0, i32* %r2.global-to-local, align 4
  %v5_d6d0 = call i32 @function_11e88(i32 %v1_d6bc, i32 %v2_d5dc, i32 %v2_d5e0, i32 0, i32 %v2_d6b8)
  %v8_d6d4 = icmp eq i32 %v5_d6d0, -1
  store i32 %v5_d6d0, i32* %r3.global-to-local, align 4
  br i1 %v8_d6d4, label %dec_label_pc_d5e4.backedge, label %dec_label_pc_d6e0

dec_label_pc_d6e0:                                ; preds = %bb38
  %v6_d6d0 = trunc i32 %v5_d6d0 to i8
  %v3_d6e0 = icmp eq i8 %v6_d6d0, 0
  br i1 %v3_d6e0, label %dec_label_pc_d6e8, label %dec_label_pc_d708

dec_label_pc_d6e8:                                ; preds = %dec_label_pc_d6e0
  %v0_d6e8 = load i32, i32* @fp, align 4
  %v6_d6f4 = inttoptr i32 %v5_d6d0 to i8*
  store i8* %v6_d6f4, i8** %stack_var_-38, align 4
  %v2_d6f8 = call i32 @function_11abc(i32 %v0_d6e8, i32 6)
  %v2_d6fc = icmp eq i32 %v2_d6f8, 0
  %v0_d700 = load i32, i32* @fp, align 4
  %v1_d700 = add i32 %v0_d700, 1
  store i32 %v1_d700, i32* @fp, align 4
  br i1 %v2_d6fc, label %dec_label_pc_d900, label %dec_label_pc_d708

dec_label_pc_d708:                                ; preds = %dec_label_pc_d6e0, %dec_label_pc_d6e8, %dec_label_pc_d900
  %v2_d708 = load i32, i32* @global_var_1d020.59, align 4
  %v7_d70c = icmp eq i32 %v2_d708, -1
  br i1 %v7_d70c, label %dec_label_pc_d73c, label %dec_label_pc_d714

dec_label_pc_d714:                                ; preds = %dec_label_pc_d708
  %v3_d714 = udiv i32 %v2_d708, 32
  store i32 %v2_d4fc, i32* %r2.global-to-local, align 4
  %v3_d720 = mul nuw nsw i32 %v3_d714, 4
  %v2_d724 = add i32 %v3_d720, %v2_d4fc
  store i32 %v2_d724, i32* %r3.global-to-local, align 4
  %v1_d728 = add i32 %v2_d724, -232
  %v2_d728 = inttoptr i32 %v1_d728 to i32*
  %v3_d728 = load i32, i32* %v2_d728, align 4
  %v1_d72c = urem i32 %v2_d708, 32
  %v6_d730 = lshr i32 %v3_d728, %v1_d72c
  store i32 %v6_d730, i32* %r2.global-to-local, align 4
  %v1_d734 = urem i32 %v6_d730, 2
  %v2_d734 = icmp eq i32 %v1_d734, 0
  br i1 %v2_d734, label %dec_label_pc_d73c, label %dec_label_pc_d980

dec_label_pc_d73c:                                ; preds = %dec_label_pc_d714, %dec_label_pc_d708
  store i32 ptrtoint (i8** @global_var_1d1c8.79 to i32), i32* %r3.global-to-local, align 4
  %v2_d740 = load i8, i8* bitcast (i8** @global_var_1d1c8.79 to i8*), align 4
  %v3_d740 = zext i8 %v2_d740 to i32
  store i32 %v3_d740, i32* @r4, align 4
  %v2_d744 = icmp eq i8 %v2_d740, 0
  %v2_d7d4 = load i32, i32* @global_var_1d024.77, align 4
  br i1 %v2_d744, label %dec_label_pc_d7d4, label %dec_label_pc_d74c

dec_label_pc_d74c:                                ; preds = %dec_label_pc_d73c
  %v3_d754 = udiv i32 %v2_d7d4, 32
  %v3_d75c = mul nuw nsw i32 %v3_d754, 4
  %v2_d760 = add i32 %v3_d75c, %v2_d4fc
  store i32 %v2_d760, i32* %r3.global-to-local, align 4
  %v1_d764 = add i32 %v2_d760, -360
  %v2_d764 = inttoptr i32 %v1_d764 to i32*
  %v3_d764 = load i32, i32* %v2_d764, align 4
  %v1_d768 = urem i32 %v2_d7d4, 32
  %v6_d76c = lshr i32 %v3_d764, %v1_d768
  store i32 %v6_d76c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1d1c8.79 to i32), i32* %r3.global-to-local, align 4
  %v1_d778 = urem i32 %v6_d76c, 2
  %v2_d778 = icmp eq i32 %v1_d778, 0
  store i8 0, i8* bitcast (i8** @global_var_1d1c8.79 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1d024.77 to i32), i32* @r5, align 4
  br i1 %v2_d778, label %dec_label_pc_d788, label %dec_label_pc_d920

dec_label_pc_d788:                                ; preds = %dec_label_pc_d74c
  store i32 55184, i32* @lr, align 4
  %v1_d78c = icmp ne i32 %v2_d7d4, -1
  call void @__pseudo_cond_branch(i1 %v1_d78c, i32 ptrtoint (i32* @global_var_11c68.80 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d794 = load i32, i32* @r5, align 4
  %v2_d794 = inttoptr i32 %v1_d794 to i32*
  store i32 -1, i32* %v2_d794, align 4
  %v1_d79c = call i32 @function_12cb4(i32 1)
  br label %dec_label_pc_d5e4.backedge

dec_label_pc_d5e4.backedge:                       ; preds = %dec_label_pc_d788, %dec_label_pc_d87c, %dec_label_pc_d958, %dec_label_pc_da1c, %dec_label_pc_da6c, %dec_label_pc_daf8, %dec_label_pc_db04, %bb38, %dec_label_pc_d7d4, %dec_label_pc_d7e4, %dec_label_pc_d9c8, %bb40, %dec_label_pc_daa4, %dec_label_pc_da5c
  %v2_d5ec41.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_d5e4

dec_label_pc_d7a4:                                ; preds = %dec_label_pc_d658
  store i32 %v2_d4fc, i32* %r2.global-to-local, align 4
  %v3_d7b4 = mul nuw nsw i32 %v3_d7ac, 4
  %v2_d7b8 = add i32 %v3_d7b4, %v2_d4fc
  store i32 %v2_d7b8, i32* %r3.global-to-local, align 4
  %v1_d7bc = add i32 %v2_d7b8, -232
  %v2_d7bc = inttoptr i32 %v1_d7bc to i32*
  %v3_d7bc = load i32, i32* %v2_d7bc, align 4
  %v1_d7c0 = urem i32 %v2_d7a4, 32
  %v7_d7c8 = shl i32 1, %v1_d7c0
  %v8_d7c8 = or i32 %v3_d7bc, %v7_d7c8
  store i32 %v8_d7c8, i32* %r2.global-to-local, align 4
  store i32 %v8_d7c8, i32* %v2_d7bc, align 4
  br label %dec_label_pc_d694

dec_label_pc_d7d4:                                ; preds = %dec_label_pc_d73c
  %v7_d7d8 = icmp eq i32 %v2_d7d4, -1
  store i32 ptrtoint (i32* @global_var_1d024.77 to i32), i32* @r5, align 4
  br i1 %v7_d7d8, label %dec_label_pc_d5e4.backedge, label %dec_label_pc_d7e4

dec_label_pc_d7e4:                                ; preds = %dec_label_pc_d7d4
  %v3_d7e4 = udiv i32 %v2_d7d4, 32
  %v3_d7ec = mul nuw nsw i32 %v3_d7e4, 4
  %v2_d7f4 = add i32 %v3_d7ec, %v2_d4fc
  store i32 %v2_d7f4, i32* %r3.global-to-local, align 4
  %v1_d7f8 = add i32 %v2_d7f4, -232
  %v2_d7f8 = inttoptr i32 %v1_d7f8 to i32*
  %v3_d7f8 = load i32, i32* %v2_d7f8, align 4
  %v1_d7fc = urem i32 %v2_d7d4, 32
  %v6_d800 = lshr i32 %v3_d7f8, %v1_d7fc
  store i32 %v6_d800, i32* %r2.global-to-local, align 4
  %v1_d804 = urem i32 %v6_d800, 2
  %v2_d804 = icmp eq i32 %v1_d804, 0
  br i1 %v2_d804, label %dec_label_pc_d5e4.backedge, label %dec_label_pc_d80c

dec_label_pc_d80c:                                ; preds = %dec_label_pc_d7e4
  %v6_d80c = inttoptr i32 %v3_d740 to i8*
  store i8* %v6_d80c, i8** %stack_var_-38, align 4
  %v0_d814 = call i32 @function_12190()
  %v0_d818 = load i32, i32* @r4, align 4
  %v2_d818 = inttoptr i32 %v0_d814 to i32*
  store i32 %v0_d818, i32* %v2_d818, align 4
  store i32 %v0_d814, i32* @r8, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_d82c = load i32, i32* @global_var_1d024.77, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_d838 = call i32 @function_123c0(i32 %v2_d82c, i32* %v4_d918, i32 2, i32 16386)
  %v7_d83c = icmp eq i32 %v5_d838, -1
  br i1 %v7_d83c, label %dec_label_pc_da5c, label %dec_label_pc_d844

dec_label_pc_d844:                                ; preds = %dec_label_pc_d80c
  %v2_d844 = icmp eq i32 %v5_d838, 0
  br i1 %v2_d844, label %dec_label_pc_da6c, label %dec_label_pc_d84c

dec_label_pc_d84c:                                ; preds = %dec_label_pc_d844
  %v3_d84c = load i8*, i8** %stack_var_-38, align 4
  %v4_d84c = ptrtoint i8* %v3_d84c to i32
  store i32 %v3_d740, i32* %r3.global-to-local, align 4
  %v4_d854 = mul nuw nsw i32 %v3_d740, 256
  %v5_d854 = or i32 %v4_d84c, %v4_d854
  store i32 %v5_d854, i32* %r2.global-to-local, align 4
  %v7_d854 = icmp eq i32 %v5_d854, 0
  br i1 %v7_d854, label %dec_label_pc_db04, label %dec_label_pc_d85c

dec_label_pc_d85c:                                ; preds = %dec_label_pc_d84c
  %v1_d85c = mul i32 %v4_d84c, 256
  %v3_d860 = and i32 %v1_d85c, 65280
  %v4_d864 = udiv i32 %v5_d854, 256
  %v5_d864 = or i32 %v3_d860, %v4_d864
  %v6_d864 = trunc i32 %v4_d864 to i8
  store i32 %v5_d864, i32* %r2.global-to-local, align 4
  %v4_d868 = udiv i32 %v5_d854, 65536
  store i32 %v4_d868, i32* %r3.global-to-local, align 4
  %v3_d86c = icmp slt i8 %v6_d864, 0
  %v7_d874 = inttoptr i32 %v4_d864 to i8*
  store i8* %v7_d874, i8** %stack_var_-38, align 4
  br i1 %v3_d86c, label %dec_label_pc_d87c, label %dec_label_pc_da34

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d85c
  %v2_d87c = load i32, i32* @global_var_1d024.77, align 4
  %v1_d880 = call i32 @function_11c68(i32 %v2_d87c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d888 = load i32, i32* @r5, align 4
  %v2_d888 = inttoptr i32 %v1_d888 to i32*
  store i32 -1, i32* %v2_d888, align 4
  br label %dec_label_pc_d5e4.backedge

dec_label_pc_d890:                                ; preds = %dec_label_pc_d648
  %v0_d898 = load i32, i32* @r4, align 4
  store i32 %v0_d898, i32* %r2.global-to-local, align 4
  %v3_d89c = call i32 @function_124b0(i32 2, i32 1, i32 %v0_d898)
  %v7_d8a0 = icmp eq i32 %v3_d89c, -1
  store i32 %v3_d89c, i32* %r5.global-to-local, align 4
  %v1_d8a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_d8a8 = inttoptr i32 %v1_d8a8 to i32*
  store i32 %v3_d89c, i32* %v2_d8a8, align 4
  br i1 %v7_d8a0, label %dec_label_pc_d658, label %dec_label_pc_d8b0

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d890
  %v0_d8b0 = load i32, i32* @r4, align 4
  store i32 %v0_d8b0, i32* @r2, align 4
  %v2_d8b8 = call i32 @function_11ba4(i32 %v3_d89c, i32 3)
  %v1_d8c0 = or i32 %v2_d8b8, 2048
  store i32 %v1_d8c0, i32* @r2, align 4
  %v0_d8c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_d8c8 = call i32 @function_11ba4(i32 %v0_d8c4, i32 4)
  %v2_d8d0 = load i32, i32* @global_var_1d028.72, align 4
  store i32 %v2_d8d0, i32* %r3.global-to-local, align 4
  %v2_d8d4 = icmp eq i32 %v2_d8d0, 0
  br i1 %v2_d8d4, label %.thread, label %bb39

bb39:                                             ; preds = %dec_label_pc_d8b0
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_116a0.81 to i32))
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d8b0, %bb39
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_d8e8 = load i32, i32* @global_var_1d024.77, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1d1c8.79 to i8*), align 4
  %v5_d8f8 = call i32 @function_1230c(i32 %v2_d8e8, %sockaddr* bitcast (i8** @global_var_1d260.53 to %sockaddr*), i32 16)
  br label %dec_label_pc_d658

dec_label_pc_d900:                                ; preds = %dec_label_pc_d6e8
  %v2_d908 = load i32, i32* @global_var_1d024.77, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_d918 = call i32 @function_12420(i32 %v2_d908, i32* nonnull %v4_d918, i32 2, i32 16384)
  br label %dec_label_pc_d708

dec_label_pc_d920:                                ; preds = %dec_label_pc_d74c
  store i32 4, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v2_d930, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-52, align 4
  %v6_d948 = call i32 @function_12364(i32 %v2_d7d4, i32 1, i32 4, i32* nonnull %stack_var_-44, i32 %v2_d934)
  %v3_d94c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d94c, i32* %r3.global-to-local, align 4
  %v2_d950 = icmp eq i32 %v3_d94c, 0
  br i1 %v2_d950, label %dec_label_pc_d9c8, label %dec_label_pc_d958

dec_label_pc_d958:                                ; preds = %dec_label_pc_d920
  %v2_d958 = load i32, i32* @global_var_1d024.77, align 4
  %v1_d95c = call i32 @function_11c68(i32 %v2_d958)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d964 = load i32, i32* @r5, align 4
  %v2_d964 = inttoptr i32 %v1_d964 to i32*
  store i32 -1, i32* %v2_d964, align 4
  %v0_d968 = call i32 @function_db88()
  %v2_d970 = call i32 @function_119f0(i32 %v0_d968, i32 10)
  %v1_d974 = add i32 %v2_d970, 1
  %v1_d978 = call i32 @function_12cb4(i32 %v1_d974)
  br label %dec_label_pc_d5e4.backedge

dec_label_pc_d980:                                ; preds = %dec_label_pc_d714
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_d930, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  %v6_d998 = call i32 @function_122b4(i32 %v2_d708, %sockaddr* %v5_d998, i32 %v2_d930, i32 16, i32 16)
  %v1_d99c = call i32 @function_c8ec(i32 %v6_d998)
  %v1_d9a0 = call i32 @function_8230(i32 %v1_d99c)
  %v2_d9ac = call i32 @function_11d68(i32 0, i32 9)
  store i32 ptrtoint (i32* @global_var_1d1c4.64 to i32), i32* %r3.global-to-local, align 4
  %v2_d9b4 = load i32, i32* @global_var_1d1c4.64, align 4
  %v2_d9b8 = icmp eq i32 %v2_d9b4, 0
  br i1 %v2_d9b8, label %dec_label_pc_d9c0, label %dec_label_pc_da90

dec_label_pc_d9c0:                                ; preds = %dec_label_pc_d980, %dec_label_pc_da90
  %v1_d9c4 = call i32 @function_12c20(i32 0)
  br label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d920, %dec_label_pc_d9c0
  %v2_d9d0 = call i32 @function_113e8(i8* %v1_d9d0)
  %sext = mul i32 %v2_d9d0, 16777216
  %v1_d9d4 = sdiv i32 %sext, 16777216
  %v7_d9d4 = inttoptr i32 %v1_d9d4 to i8*
  store i8* %v7_d9d4, i8** %stack_var_-38, align 4
  %v0_d9d8 = call i32 @function_116a0()
  store i32 %v0_d9d8, i32* @global_var_1d258.33, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d9ec = load i32, i32* @r4, align 4
  store i32 %v0_d9ec, i32* %r2.global-to-local, align 4
  %v0_d9f0 = load i32, i32* @r5, align 4
  %v1_d9f0 = inttoptr i32 %v0_d9f0 to i32*
  %v2_d9f0 = load i32, i32* %v1_d9f0, align 4
  %v5_d9f4 = call i32 @function_12420(i32 %v2_d9f0, i32* nonnull @global_var_141e0.84, i32 %v0_d9ec, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_da00 = load i32, i32* @r5, align 4
  %v1_da00 = inttoptr i32 %v0_da00 to i32*
  %v2_da00 = load i32, i32* %v1_da00, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_da0c = call i32 @function_12420(i32 %v2_da00, i32* %v4_d918, i32 1, i32 16384)
  %v3_da10 = load i8*, i8** %stack_var_-38, align 4
  %v4_da10 = ptrtoint i8* %v3_da10 to i32
  store i32 %v4_da10, i32* %r2.global-to-local, align 4
  %v3_da14 = icmp eq i8* %v3_da10, null
  br i1 %v3_da14, label %dec_label_pc_d5e4.backedge, label %dec_label_pc_da1c

dec_label_pc_da1c:                                ; preds = %dec_label_pc_d9c8
  %v0_da20 = load i32, i32* @r5, align 4
  %v1_da20 = inttoptr i32 %v0_da20 to i32*
  %v2_da20 = load i32, i32* %v1_da20, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_da2c = call i32 @function_12420(i32 %v2_da20, i32* nonnull %stack_var_-140, i32 %v4_da10, i32 16384)
  br label %dec_label_pc_d5e4.backedge

dec_label_pc_da34:                                ; preds = %dec_label_pc_d85c
  %v0_da34 = load i32, i32* @r4, align 4
  %v1_da34 = load i32, i32* @r8, align 4
  %v2_da34 = inttoptr i32 %v1_da34 to i32*
  store i32 %v0_da34, i32* %v2_da34, align 4
  store i32 %v2_da3c, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_da48 = load i32, i32* @global_var_1d024.77, align 4
  %v9_da50 = call i32 @function_123c0(i32 %v2_da48, i32* nonnull %stack_var_-1420, i32 %v4_d864, i32 16386)
  %v3_da54 = icmp eq i32 %v9_da50, -1
  br i1 %v3_da54, label %dec_label_pc_da5c, label %dec_label_pc_da9c

dec_label_pc_da5c:                                ; preds = %dec_label_pc_da34, %dec_label_pc_d80c
  %v0_da5c = load i32, i32* @r8, align 4
  %v1_da5c = inttoptr i32 %v0_da5c to i32*
  %v2_da5c = load i32, i32* %v1_da5c, align 4
  store i32 %v2_da5c, i32* %r3.global-to-local, align 4
  %v7_da60 = icmp eq i32 %v2_da5c, 4
  br i1 %v7_da60, label %dec_label_pc_d5e4.backedge, label %bb40

bb40:                                             ; preds = %dec_label_pc_da5c
  %v8_da64 = icmp eq i32 %v2_da5c, 11
  br i1 %v8_da64, label %dec_label_pc_d5e4.backedge, label %dec_label_pc_da6c

dec_label_pc_da6c:                                ; preds = %dec_label_pc_da9c, %bb40, %dec_label_pc_d844
  %v2_da6c = load i32, i32* @global_var_1d024.77, align 4
  store i32 55928, i32* @lr, align 4
  %v1_da74 = icmp ne i32 %v2_da6c, -1
  call void @__pseudo_cond_branch(i1 %v1_da74, i32 ptrtoint (i32* @global_var_11c68.80 to i32))
  store i32 ptrtoint (i32* @global_var_1d024.77 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_1d024.77, align 4
  %v1_da88 = call i32 @function_12cb4(i32 1)
  br label %dec_label_pc_d5e4.backedge

dec_label_pc_da90:                                ; preds = %dec_label_pc_d980
  %v2_da94 = call i32 @function_11d68(i32 %v2_d9b4, i32 9)
  br label %dec_label_pc_d9c0

dec_label_pc_da9c:                                ; preds = %dec_label_pc_da34
  %v2_da9c = icmp eq i32 %v9_da50, 0
  br i1 %v2_da9c, label %dec_label_pc_da6c, label %dec_label_pc_daa4

dec_label_pc_daa4:                                ; preds = %dec_label_pc_da9c
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_dab4 = load i32, i32* @global_var_1d024.77, align 4
  %v5_dab8 = call i32 @function_123c0(i32 %v2_dab4, i32* nonnull %v4_d918, i32 2, i32 16384)
  %v3_dabc = load i8*, i8** %stack_var_-38, align 4
  %v4_dabc = ptrtoint i8* %v3_dabc to i32
  %v4_dac0 = urem i32 %v4_d868, 256
  %v4_dac4 = mul i32 %v4_dabc, 256
  %v5_dac4 = or i32 %v4_dac4, %v4_dac0
  store i32 %v5_dac4, i32* %r2.global-to-local, align 4
  %v3_dacc = sdiv i32 %v4_dac4, 256
  store i32 %v3_dacc, i32* @lr, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_dad8 = load i32, i32* @global_var_1d024.77, align 4
  %v6_dae0 = inttoptr i32 %v5_dac4 to i8*
  store i8* %v6_dae0, i8** %stack_var_-38, align 4
  %v8_dae4 = call i32 @function_123c0(i32 %v2_dad8, i32* nonnull %stack_var_-1420, i32 %v5_dac4, i32 16384)
  %v3_dae8 = load i8*, i8** %stack_var_-38, align 4
  %v4_dae8 = ptrtoint i8* %v3_dae8 to i32
  store i32 %v4_dae8, i32* %r2.global-to-local, align 4
  %v4_daec = urem i32 %v3_dacc, 256
  store i32 %v4_daec, i32* %r3.global-to-local, align 4
  %v6_daf0 = mul nuw nsw i32 %v4_daec, 256
  %v7_daf0 = or i32 %v4_dae8, %v6_daf0
  %v9_daf0 = icmp eq i32 %v7_daf0, 0
  br i1 %v9_daf0, label %dec_label_pc_d5e4.backedge, label %dec_label_pc_daf8

dec_label_pc_daf8:                                ; preds = %dec_label_pc_daa4
  %v6_dafc = call i32 @function_845c(i32 %v2_da3c, i32 %v7_daf0, i32 %v4_dae8, i32 %v4_daec)
  br label %dec_label_pc_d5e4.backedge

dec_label_pc_db04:                                ; preds = %dec_label_pc_d84c
  %v2_db08 = load i32, i32* @global_var_1d024.77, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_db18 = call i32 @function_123c0(i32 %v2_db08, i32* nonnull %v4_d918, i32 2, i32 16384)
  br label %dec_label_pc_d5e4.backedge

dec_label_pc_db20:                                ; preds = %dec_label_pc_d438
  %v0_db20 = load i32, i32* @sl, align 4
  %v1_db20 = add i32 %v0_db20, 4
  %v2_db20 = inttoptr i32 %v1_db20 to i32*
  %v3_db20 = load i32, i32* %v2_db20, align 4
  %v1_db24 = inttoptr i32 %v3_db20 to i8*
  %v2_db24 = call i32 @function_113e8(i8* %v1_db24)
  %v8_db2c = icmp sgt i32 %v2_db24, 31
  br i1 %v8_db2c, label %dec_label_pc_d4b4, label %dec_label_pc_db30

dec_label_pc_db30:                                ; preds = %dec_label_pc_db20
  %v0_db34 = load i32, i32* @sl, align 4
  %v1_db34 = add i32 %v0_db34, 4
  %v2_db34 = inttoptr i32 %v1_db34 to i32*
  %v3_db34 = load i32, i32* %v2_db34, align 4
  store i32 %v2_d4a0, i32* @r0, align 4
  %v2_db3c = bitcast i32* %stack_var_-140 to i8*
  %v3_db3c = call i32 @function_11410(i8* %v2_db3c, i32 %v3_db34)
  %v0_db40 = load i32, i32* @sl, align 4
  %v1_db40 = add i32 %v0_db40, 4
  %v2_db40 = inttoptr i32 %v1_db40 to i32*
  %v3_db40 = load i32, i32* %v2_db40, align 4
  %v1_db48 = inttoptr i32 %v3_db40 to i8*
  %v2_db48 = call i32 @function_113e8(i8* %v1_db48)
  store i32 %v2_db48, i32* @r1, align 4
  store i32 %v3_db40, i32* @r0, align 4
  %v0_db54 = call i32 @function_11488()
  br label %dec_label_pc_d4b4

; uselistorder directives
  uselistorder i32 %v4_daec, { 2, 0, 1 }
  uselistorder i32 %v4_dae8, { 1, 0, 2 }
  uselistorder i32 %v3_dacc, { 1, 0 }
  uselistorder i32 %v5_dac4, { 1, 0, 2 }
  uselistorder i32 %v4_dac4, { 1, 0 }
  uselistorder i32 %v3_d89c, { 1, 3, 2, 0 }
  uselistorder i32 %v4_d864, { 2, 3, 0, 1 }
  uselistorder i32 %v5_d838, { 1, 0 }
  uselistorder i32 %v2_d7d4, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_d708, { 3, 2, 1, 0 }
  uselistorder i32 %v5_d6d0, { 2, 3, 1, 0 }
  uselistorder i32 %v2_d614, { 2, 1, 0 }
  uselistorder i32 %v1_d608, { 1, 2, 0 }
  uselistorder i32 %v1_d5f0, { 1, 2, 0 }
  uselistorder i32 %v2_d930, { 1, 0, 2 }
  uselistorder i32* %v4_d918, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v2_d5e0, { 1, 0, 2 }
  uselistorder i32 %v2_d5dc, { 1, 0, 2 }
  uselistorder i32 %v2_d4fc, { 0, 1, 10, 2, 3, 9, 4, 5, 8, 6, 7, 11 }
  uselistorder i32 %v2_d4e4, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-38, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 40, 41, 37, 45, 46, 38, 39, 42, 43, 44 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33 }
  uselistorder i32* @global_var_1d1c4.64, { 1, 2, 0 }
  uselistorder i32 16386, { 0, 2, 1, 3 }
  uselistorder i8* bitcast (i8** @global_var_1d1c8.79 to i8*), { 0, 1, 3, 2 }
  uselistorder i8** @global_var_1d1c8.79, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1d1c8.79 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_1d024.77, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 15, 14 }
  uselistorder i32* @global_var_1d020.59, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32 (i32, i32)* @function_dc3c, { 10, 9, 8, 7, 6, 5, 4, 2, 3, 0, 1 }
  uselistorder i32 (i32)* @function_d1dc, { 1, 0 }
  uselistorder i32* @global_var_1d028.72, { 1, 0 }
  uselistorder i8** @global_var_1d260.53, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d9c8, { 1, 0 }
  uselistorder label %dec_label_pc_d9c0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_d5e4.backedge, { 6, 5, 12, 4, 11, 13, 3, 10, 2, 1, 9, 8, 0, 7 }
  uselistorder label %dec_label_pc_d708, { 2, 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_d658, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d648, { 1, 0 }
  uselistorder label %dec_label_pc_d604.dec_label_pc_d604_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_d5ec.dec_label_pc_d5ec_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_d4b4, { 2, 0, 1 }
}

define i32 @function_db88() local_unnamed_addr {
dec_label_pc_db88:
  %v2_db94 = load i32, i32* @global_var_1d1cc.86, align 4
  %v2_db98 = load i32, i32* @global_var_1d1d8.88, align 4
  store i32 ptrtoint (i32* @global_var_1d1d0.90 to i32), i32* @lr, align 4
  %v4_dba4 = mul i32 %v2_db94, 2048
  %v5_dba4 = xor i32 %v4_dba4, %v2_db94
  %v4_dba8 = udiv i32 %v2_db98, 524288
  %v5_dba8 = xor i32 %v4_dba8, %v2_db98
  %v2_dbac = load i32, i32* @global_var_1d1d0.90, align 4
  %v2_dbb0 = load i32, i32* @global_var_1d1d4.92, align 4
  %v2_dbb4 = xor i32 %v5_dba8, %v5_dba4
  %v4_dbb8 = udiv i32 %v5_dba4, 256
  %v5_dbb8 = xor i32 %v2_dbb4, %v4_dbb8
  store i32 %v2_dbac, i32* @global_var_1d1cc.86, align 4
  store i32 %v2_dbb0, i32* @global_var_1d1d0.90, align 4
  store i32 %v2_db98, i32* @global_var_1d1d4.92, align 4
  store i32 %v5_dbb8, i32* @global_var_1d1d8.88, align 4
  ret i32 %v5_dbb8

; uselistorder directives
  uselistorder i32 %v2_db98, { 2, 1, 0 }
  uselistorder i32 %v2_db94, { 1, 0 }
}

define i32 @function_dbe0(i32 %arg1) local_unnamed_addr {
dec_label_pc_dbe0:
  %stack_var_-12 = alloca i32, align 4
  %v3_dbe0 = load i32, i32* @r4, align 4
  store i32 %v3_dbe0, i32* %stack_var_-12, align 4
  %v2_dbe8 = call i32 @function_11eb8(i32* null)
  store i32 %v2_dbe8, i32* @global_var_1d1cc.86, align 4
  %v0_dbf4 = call i32 @function_11cc0()
  store i32 %v0_dbf4, i32* @r4, align 4
  %v0_dbfc = call i32 @function_11cec()
  %v0_dc04 = load i32, i32* @r4, align 4
  %v2_dc04 = xor i32 %v0_dc04, %v0_dbfc
  store i32 %v2_dc04, i32* @r4, align 4
  store i32 %v2_dc04, i32* @global_var_1d1d0.90, align 4
  %v1_dc0c = call i32 @function_1219c(i32 %v0_dbfc)
  %v2_dc10 = load i32, i32* @global_var_1d1d0.90, align 4
  %v2_dc1c = xor i32 %v2_dc10, %v1_dc0c
  store i32 %v2_dc1c, i32* @global_var_1d1d8.88, align 4
  store i32 %v1_dc0c, i32* @global_var_1d1d4.92, align 4
  %v2_dc28 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_dc28, i32* @r4, align 4
  ret i32 %v1_dc0c

; uselistorder directives
  uselistorder i32 %v1_dc0c, { 1, 2, 0 }
  uselistorder i32 %v0_dbfc, { 1, 0 }
}

define i32 @function_dc3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dc3c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-59 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_dc3c = load i32, i32* @r4, align 4
  store i32 %v3_dc3c, i32* %stack_var_-36, align 4
  %v28_dc3c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg2, i32* %fp.global-to-local, align 4
  %v2_dc40 = icmp eq i32 %arg2, 0
  %v0_dc48 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_dc48, i32* %sb.global-to-local, align 4
  br i1 %v2_dc40, label %dec_label_pc_dcd4, label %dec_label_pc_dc50

dec_label_pc_dc50:                                ; preds = %dec_label_pc_dc3c
  %v2_dc50 = ptrtoint i32* %stack_var_-59 to i32
  store i32 %v2_dc50, i32* @r0, align 4
  store i32 ptrtoint ([23 x i8]* @global_var_141e8.98 to i32), i32* @r1, align 4
  store i32 23, i32* @r2, align 4
  %v4_dc5c = call i32 @function_121d0(i32 %v2_dc50, i32 ptrtoint ([23 x i8]* @global_var_141e8.98 to i32), i32 23)
  store i32 %v4_dc5c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d1cc.86 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d1d0.90 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d1d4.92 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d1d8.88 to i32), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v1_dca8 = bitcast i32* %stack_var_-59 to i8*
  br label %dec_label_pc_dc74

dec_label_pc_dc74:                                ; preds = %dec_label_pc_dc74.dec_label_pc_dc74_crit_edge, %dec_label_pc_dc50
  %v1_dc98 = phi i32 [ %v1_dc98.pre, %dec_label_pc_dc74.dec_label_pc_dc74_crit_edge ], [ ptrtoint (i32* @global_var_1d1cc.86 to i32), %dec_label_pc_dc50 ]
  %v2_dc74 = load i32, i32* @global_var_1d1d8.88, align 4
  store i32 %v2_dc74, i32* %r2.global-to-local, align 4
  %v2_dc78 = load i32, i32* @global_var_1d1cc.86, align 4
  %v4_dc7c = udiv i32 %v2_dc74, 524288
  %v5_dc7c = xor i32 %v4_dc7c, %v2_dc74
  %v4_dc80 = mul i32 %v2_dc78, 2048
  %v5_dc80 = xor i32 %v4_dc80, %v2_dc78
  %v2_dc84 = xor i32 %v5_dc7c, %v5_dc80
  %v2_dc88 = load i32, i32* @global_var_1d1d0.90, align 4
  %v2_dc8c = load i32, i32* @global_var_1d1d4.92, align 4
  store i32 %v2_dc8c, i32* %ip.global-to-local, align 4
  %v4_dc90 = udiv i32 %v5_dc80, 256
  %v5_dc90 = xor i32 %v2_dc84, %v4_dc90
  store i32 %v5_dc90, i32* %r4.global-to-local, align 4
  store i32 %v2_dc50, i32* %r0.global-to-local, align 4
  %v2_dc98 = inttoptr i32 %v1_dc98 to i32*
  store i32 %v2_dc88, i32* %v2_dc98, align 4
  %v0_dc9c = load i32, i32* %ip.global-to-local, align 4
  %v1_dc9c = load i32, i32* %r8.global-to-local, align 4
  %v2_dc9c = inttoptr i32 %v1_dc9c to i32*
  store i32 %v0_dc9c, i32* %v2_dc9c, align 4
  %v0_dca0 = load i32, i32* %r2.global-to-local, align 4
  %v1_dca0 = load i32, i32* %r7.global-to-local, align 4
  %v2_dca0 = inttoptr i32 %v1_dca0 to i32*
  store i32 %v0_dca0, i32* %v2_dca0, align 4
  %v0_dca4 = load i32, i32* %r4.global-to-local, align 4
  %v1_dca4 = load i32, i32* %r6.global-to-local, align 4
  %v2_dca4 = inttoptr i32 %v1_dca4 to i32*
  store i32 %v0_dca4, i32* %v2_dca4, align 4
  %v2_dca8 = call i32 @function_113e8(i8* %v1_dca8)
  %v0_dcb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_dcb0, i32* %r0.global-to-local, align 4
  %v2_dcb4 = call i32 @function_119f0(i32 %v0_dcb0, i32 %v2_dca8)
  %v2_dcbc = add i32 %v2_dcb4, %v28_dc3c
  store i32 %v2_dcbc, i32* %r0.global-to-local, align 4
  %v1_dcc0 = add i32 %v2_dcbc, -23
  %v2_dcc0 = inttoptr i32 %v1_dcc0 to i8*
  %v3_dcc0 = load i8, i8* %v2_dcc0, align 1
  %v2_dcc4 = load i32, i32* %r5.global-to-local, align 4
  %v3_dcc4 = load i32, i32* %sb.global-to-local, align 4
  %v4_dcc4 = add i32 %v3_dcc4, %v2_dcc4
  %v5_dcc4 = inttoptr i32 %v4_dcc4 to i8*
  store i8 %v3_dcc0, i8* %v5_dcc4, align 1
  %v0_dcc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_dcc8 = add i32 %v0_dcc8, 1
  store i32 %v1_dcc8, i32* %r5.global-to-local, align 4
  %v1_dccc = load i32, i32* %fp.global-to-local, align 4
  %v9_dccc = icmp eq i32 %v1_dcc8, %v1_dccc
  br i1 %v9_dccc, label %dec_label_pc_dcd4.loopexit, label %dec_label_pc_dc74.dec_label_pc_dc74_crit_edge

dec_label_pc_dc74.dec_label_pc_dc74_crit_edge:    ; preds = %dec_label_pc_dc74
  %v1_dc98.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_dc74

dec_label_pc_dcd4.loopexit:                       ; preds = %dec_label_pc_dc74
  %v2_dcd8.pre = load i32, i32* %stack_var_-36, align 4
  %v29_dcd8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dcd4

dec_label_pc_dcd4:                                ; preds = %dec_label_pc_dcd4.loopexit, %dec_label_pc_dc3c
  %v29_dcd8 = phi i32 [ %v29_dcd8.pre, %dec_label_pc_dcd4.loopexit ], [ %v0_dc48, %dec_label_pc_dc3c ]
  %v2_dcd8 = phi i32 [ %v2_dcd8.pre, %dec_label_pc_dcd4.loopexit ], [ %v3_dc3c, %dec_label_pc_dc3c ]
  store i32 %v2_dcd8, i32* @r4, align 4
  ret i32 %v29_dcd8

; uselistorder directives
  uselistorder i32 %v2_dc78, { 1, 0 }
  uselistorder i32 %v2_dc74, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* @global_var_1d1d8.88, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_1d1d4.92, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_1d1d0.90, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* @global_var_1d1cc.86, { 2, 4, 1, 0, 3 }
}

define i32 @function_dcf0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_dcf0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dcf0 = load i32, i32* @r4, align 4
  store i32 %v3_dcf0, i32* %stack_var_-8, align 4
  %v6_dcf0 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_dcf4 = icmp eq i32 %arg1, 0
  br i1 %v2_dcf4, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_dcf0
  store i32 %v3_dcf0, i32* @r4, align 4
  ret i32 0

bb3:                                              ; preds = %dec_label_pc_dcf0
  %v1_dcfc = add i32 %arg1, 4
  %v2_dcfc = inttoptr i32 %v1_dcfc to i32*
  %v3_dcfc = load i32, i32* %v2_dcfc, align 4
  %v1_dd04 = icmp ne i32 %v3_dcfc, 0
  call void @__pseudo_cond_branch(i1 %v1_dd04, i32 ptrtoint (i32* @global_var_12688.103 to i32))
  %v0_dd08 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_dd08, i32* @r0, align 4
  %v2_dd0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dd0c, i32* @r4, align 4
  store i32 %v6_dcf0, i32* @lr, align 4
  %v0_dd10 = call i32 @function_12688()
  ret i32 %v0_dd10
}

define i32 @function_dd14(i8* %arg1) local_unnamed_addr {
dec_label_pc_dd14:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-4288 = alloca i8, align 1
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2227 = alloca i32, align 4
  %stack_var_-2240 = alloca i8, align 1
  %stack_var_-2228 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_dd14 = load i32, i32* @r4, align 4
  store i32 %v3_dd14, i32* %stack_var_-36, align 4
  %v6_dd14 = load i32, i32* @r5, align 4
  %v9_dd14 = load i32, i32* @r6, align 4
  %v12_dd14 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_dd2c = call i32 @function_12630(i32 1, i32 8)
  %v0_dd34 = load i32, i32* @r4, align 4
  %v1_dd34 = inttoptr i32 %v0_dd34 to i8*
  store i32 %v0_dd34, i32* %r0.global-to-local, align 4
  %v3_dd38 = call i32 @function_113e8(i8* %v1_dd34)
  %v2_dd40 = ptrtoint i32* %stack_var_-2228 to i32
  store i32 %v2_dd40, i32* %fp.global-to-local, align 4
  %v2_dd44 = ptrtoint i8* %stack_var_-2240 to i32
  %v1_dd48 = add i32 %v3_dd38, 1
  store i32 %v1_dd48, i32* %r0.global-to-local, align 4
  %v2_dd4c = ptrtoint i32* %stack_var_-2227 to i32
  store i32 %v2_dd4c, i32* %r2.global-to-local, align 4
  store i32 %v2_dd40, i32* %r5.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_dd8c162 = icmp eq i32 %v1_dd48, 0
  store i1 %v2_dd8c162, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_dd94163 = or i32 %v2_dd4c, 1
  store i32 %v1_dd94163, i32* %r1.global-to-local, align 4
  %tmp124164 = icmp slt i32 %v1_dd48, 1
  br i1 %tmp124164, label %dec_label_pc_dd9c, label %dec_label_pc_dd5c.lr.ph

dec_label_pc_dd5c.lr.ph:                          ; preds = %dec_label_pc_dd14
  %v0_dd5c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dd5c

dec_label_pc_dd5c:                                ; preds = %dec_label_pc_dd5c.lr.ph, %.thread12
  %v1_dd70176.off0 = phi i8 [ 0, %dec_label_pc_dd5c.lr.ph ], [ %extract.t179, %.thread12 ]
  %v0_dd5c = phi i32 [ %v0_dd5c.pre, %dec_label_pc_dd5c.lr.ph ], [ %v1_dd80, %.thread12 ]
  %v2_dda0165 = phi i32 [ %v2_dd4c, %dec_label_pc_dd5c.lr.ph ], [ %v0_dd88, %.thread12 ]
  %v1_dd5c = inttoptr i32 %v0_dd5c to i8*
  %v2_dd5c = load i8, i8* %v1_dd5c, align 1
  %v3_dd5c = zext i8 %v2_dd5c to i32
  store i32 %v3_dd5c, i32* %r3.global-to-local, align 4
  %v2_dd60 = icmp eq i8 %v2_dd5c, 0
  store i1 %v2_dd60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dd60, label %.thread6, label %bb

bb:                                               ; preds = %dec_label_pc_dd5c
  %v8_dd64 = icmp eq i8 %v2_dd5c, 46
  store i1 %v8_dd64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_dd64, label %.thread6, label %.thread

.thread:                                          ; preds = %bb
  %v4_dd68 = inttoptr i32 %v2_dda0165 to i8*
  store i8 %v2_dd5c, i8* %v4_dd68, align 1
  %v5_dd68 = load i32, i32* %r2.global-to-local, align 4
  %v6_dd68 = add i32 %v5_dd68, 1
  store i32 %v6_dd68, i32* %r2.global-to-local, align 4
  %v0_dd6c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd6c.pr.pr, label %.thread..thread6_crit_edge, label %bb122

.thread..thread6_crit_edge:                       ; preds = %.thread
  %v1_dd70.pre = load i32, i32* %lr.global-to-local, align 4
  %extract.t = trunc i32 %v1_dd70.pre to i8
  br label %.thread6

.thread6:                                         ; preds = %.thread..thread6_crit_edge, %bb, %dec_label_pc_dd5c
  %v1_dd70.off0 = phi i8 [ %extract.t, %.thread..thread6_crit_edge ], [ %v1_dd70176.off0, %bb ], [ %v1_dd70176.off0, %dec_label_pc_dd5c ]
  %v3_dd70 = load i32, i32* %r5.global-to-local, align 4
  %v4_dd70 = inttoptr i32 %v3_dd70 to i8*
  store i8 %v1_dd70.off0, i8* %v4_dd70, align 1
  %v0_dd74.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd74.pr, label %bb123, label %..thread12_crit_edge

bb122:                                            ; preds = %.thread
  store i32 %v6_dd68, i32* %r1.global-to-local, align 4
  %v1_dd74 = load i32, i32* %ip.global-to-local, align 4
  %v2_dd74 = urem i32 %v1_dd74, 256
  store i32 %v2_dd74, i32* %lr.global-to-local, align 4
  br label %.thread12

..thread12_crit_edge:                             ; preds = %.thread6
  %v1_dd7410 = load i32, i32* %ip.global-to-local, align 4
  %v2_dd7411 = urem i32 %v1_dd7410, 256
  store i32 %v2_dd7411, i32* %lr.global-to-local, align 4
  br label %.thread12

bb123:                                            ; preds = %.thread6
  %v1_dd78.pre = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_dd78.pre, i32* %r5.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb122, %..thread12_crit_edge, %bb123
  %v0_dd90.pre = phi i32 [ %v2_dd7411, %..thread12_crit_edge ], [ %v2_dd74, %bb122 ], [ 0, %bb123 ]
  %v0_dd80 = load i32, i32* @r4, align 4
  %v1_dd80 = add i32 %v0_dd80, 1
  store i32 %v1_dd80, i32* @r4, align 4
  %v0_dd84 = load i32, i32* %r0.global-to-local, align 4
  %v1_dd84 = add i32 %v0_dd84, -1
  store i32 %v1_dd84, i32* %r0.global-to-local, align 4
  %v0_dd88 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_dd88, i32* %r2.global-to-local, align 4
  %v2_dd8c = icmp eq i32 %v1_dd84, 0
  store i1 %v2_dd8c, i1* %cpsr_z.global-to-local, align 1
  %v1_dd90 = add nuw nsw i32 %v0_dd90.pre, 1
  store i32 %v1_dd90, i32* %ip.global-to-local, align 4
  %v1_dd94 = add i32 %v0_dd88, 1
  store i32 %v1_dd94, i32* %r1.global-to-local, align 4
  %tmp124 = icmp slt i32 %v1_dd84, 1
  %extract.t179 = trunc i32 %v0_dd90.pre to i8
  br i1 %tmp124, label %dec_label_pc_dd9c, label %dec_label_pc_dd5c

dec_label_pc_dd9c:                                ; preds = %.thread12, %dec_label_pc_dd14
  %v2_dda0.lcssa = phi i32 [ %v2_dd4c, %dec_label_pc_dd14 ], [ %v0_dd88, %.thread12 ]
  %v3_dd2c = inttoptr i32 %v2_dd2c to i8*
  store i32 0, i32* @r4, align 4
  %v3_dda0 = inttoptr i32 %v2_dda0.lcssa to i8*
  store i8 0, i8* %v3_dda0, align 1
  store i32 %v2_dd40, i32* %r0.global-to-local, align 4
  %v1_dda8 = bitcast i32* %stack_var_-2228 to i8*
  %v2_dda8 = call i32 @function_113e8(i8* %v1_dda8)
  %v2_ddac = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_ddac, i32* %r1.global-to-local, align 4
  %v0_ddb0 = load i32, i32* %fp.global-to-local, align 4
  %v2_ddb0 = add i32 %v0_ddb0, %v2_dda8
  store i32 %v2_ddb0, i32* @r5, align 4
  %v0_ddb4 = load i32, i32* @r4, align 4
  store i32 %v0_ddb4, i32* %stack_var_-64, align 4
  store i32 %v2_dd40, i32* %r0.global-to-local, align 4
  %v2_ddc8 = call i32 @function_113e8(i8* %v1_dda8)
  %v1_ddcc = add i32 %v2_ddc8, 17
  store i32 %v1_ddcc, i32* %r0.global-to-local, align 4
  %v0_ddd4 = call i32 @function_db88()
  store i32 %v0_ddd4, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r1.global-to-local, align 4
  %v2_dde0 = call i32 @function_119f0(i32 %v0_ddd4, i32 65535)
  store i32 16, i32* @r1, align 4
  %v6_ddec = urem i32 %v2_dde0, 65536
  store i32 %v6_ddec, i32* %r3.global-to-local, align 4
  %v2_ddf4 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_ddf4, i32* @r0, align 4
  %v0_ddfc = call i32 @function_11488()
  %sext = mul i32 %v2_dde0, 16777216
  %v4_de00 = sdiv i32 %sext, 16777216
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %v2_ddac, i32* %r3.global-to-local, align 4
  store i32 53, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v4_de00, i32* %lr.global-to-local, align 4
  %v0_de48 = load i32, i32* @r5, align 4
  %v2_de48 = add i32 %v0_de48, 1
  store i32 %v2_de48, i32* %ip.global-to-local, align 4
  %v2_de4c = ptrtoint i8* %stack_var_-4288 to i32
  store i32 %v2_de4c, i32* %r1.global-to-local, align 4
  %v5_de50 = trunc i32 %v4_de00 to i8
  store i8 %v5_de50, i8* %stack_var_-2240, align 1
  %v0_de68 = load i32, i32* @r4, align 4
  %v1_de68 = trunc i32 %v0_de68 to i8
  %v4_de68 = inttoptr i32 %v2_de48 to i8*
  store i8 %v1_de68, i8* %v4_de68, align 1
  %v0_de6c = load i32, i32* @r4, align 4
  %v1_de6c = trunc i32 %v0_de6c to i8
  %v2_de6c = load i32, i32* %ip.global-to-local, align 4
  %v3_de6c = add i32 %v2_de6c, 2
  %v4_de6c = inttoptr i32 %v3_de6c to i8*
  store i8 %v1_de6c, i8* %v4_de6c, align 1
  %v0_de70 = load i32, i32* %r0.global-to-local, align 4
  %v1_de70 = trunc i32 %v0_de70 to i8
  %v2_de70 = load i32, i32* %ip.global-to-local, align 4
  %v3_de70 = add i32 %v2_de70, 3
  %v4_de70 = inttoptr i32 %v3_de70 to i8*
  store i8 %v1_de70, i8* %v4_de70, align 1
  %v0_de74 = load i32, i32* %r0.global-to-local, align 4
  %v1_de74 = trunc i32 %v0_de74 to i8
  %v2_de74 = load i32, i32* %ip.global-to-local, align 4
  %v3_de74 = add i32 %v2_de74, 1
  %v4_de74 = inttoptr i32 %v3_de74 to i8*
  store i8 %v1_de74, i8* %v4_de74, align 1
  %v0_de7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_de7c, i32* %sl.global-to-local, align 4
  %v2_de84 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_de84, i32* @r6, align 4
  %v3_debc = bitcast i32* %stack_var_-64 to %sockaddr*
  %v4_ded8 = bitcast i8* %stack_var_-2240 to i32*
  %v2_df28 = ptrtoint i32* %stack_var_-36 to i32
  %v2_df54 = ptrtoint i32* %stack_var_-48 to i32
  %v6_dfb0 = bitcast i8* %stack_var_-4288 to i32*
  %v1_e02c = add i32 %v2_de4c, 12
  %v1_e034 = inttoptr i32 %v1_e02c to i8*
  %v1_e048 = add i32 %v2_de4c, 1
  %v2_e048 = inttoptr i32 %v1_e048 to i8*
  %v1_e064 = add i32 %v2_de4c, 6
  %v2_e064 = inttoptr i32 %v1_e064 to i8*
  %v1_e068 = add i32 %v2_de4c, 7
  %v2_e068 = inttoptr i32 %v1_e068 to i8*
  br label %dec_label_pc_de88

dec_label_pc_de88:                                ; preds = %dec_label_pc_dfdc, %dec_label_pc_dd9c
  %v1_de8c = phi i32 [ %v0_de88.pre, %dec_label_pc_dfdc ], [ -1, %dec_label_pc_dd9c ]
  %v7_de88 = icmp eq i32 %v1_de8c, -1
  store i1 %v7_de88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_de88, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_de88
  store i32 %v1_de8c, i32* %r0.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_de88, %bb125
  store i32 56980, i32* @lr, align 4
  %v1_de90 = xor i1 %v7_de88, true
  call void @__pseudo_cond_branch(i1 %v1_de90, i32 ptrtoint (i32* @global_var_11c68.80 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_dea0 = call i32 @function_124b0(i32 2, i32 2, i32 0)
  store i32 %v3_dea0, i32* %r0.global-to-local, align 4
  %v7_dea4 = icmp eq i32 %v3_dea0, -1
  store i1 %v7_dea4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_dea0, i32* @r7, align 4
  br i1 %v7_dea4, label %dec_label_pc_e01c, label %dec_label_pc_deb0

dec_label_pc_deb0:                                ; preds = %bb126
  store i32 %v2_ddf4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_debc = call i32 @function_1230c(i32 %v3_dea0, %sockaddr* %v3_debc, i32 16)
  store i32 %v4_debc, i32* %r0.global-to-local, align 4
  %v7_dec0 = icmp eq i32 %v4_debc, -1
  store i1 %v7_dec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dec0, label %dec_label_pc_dfe4, label %dec_label_pc_dec8

dec_label_pc_dec8:                                ; preds = %dec_label_pc_deb0
  %v0_dec8 = load i32, i32* @r7, align 4
  store i32 %v0_dec8, i32* %r0.global-to-local, align 4
  store i32 %v2_dd44, i32* %r1.global-to-local, align 4
  store i32 %v1_ddcc, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_ded8 = call i32 @function_12420(i32 %v0_dec8, i32* %v4_ded8, i32 %v1_ddcc, i32 16384)
  store i32 %v5_ded8, i32* %r0.global-to-local, align 4
  %v7_dedc = icmp eq i32 %v5_ded8, -1
  store i1 %v7_dedc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dedc, label %dec_label_pc_dfe4, label %dec_label_pc_dee4

dec_label_pc_dee4:                                ; preds = %dec_label_pc_dec8
  %v0_dee4 = load i32, i32* @r7, align 4
  store i32 %v0_dee4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_def0 = call i32 @function_11ba4(i32 3, i32 %v0_dee4)
  store i32 0, i32* @r4, align 4
  %v1_def8 = or i32 %v2_def0, 2048
  store i32 %v1_def8, i32* @r2, align 4
  %v0_defc = load i32, i32* @r7, align 4
  store i32 %v0_defc, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_df04 = call i32 @function_11ba4(i32 4, i32 %v0_defc)
  store i32 %v2_df04, i32* %r0.global-to-local, align 4
  %v0_df08 = load i32, i32* @r4, align 4
  store i32 %v0_df08, i32* %r3.global-to-local, align 4
  %v2_df0c154 = load i32, i32* @r6, align 4
  %v3_df0c155 = add i32 %v2_df0c154, %v0_df08
  %v4_df0c156 = inttoptr i32 %v3_df0c155 to i32*
  store i32 %v0_df08, i32* %v4_df0c156, align 4
  %v0_df10157 = load i32, i32* %r3.global-to-local, align 4
  %v1_df10158 = add i32 %v0_df10157, 4
  store i32 %v1_df10158, i32* %r3.global-to-local, align 4
  %v7_df14159 = icmp eq i32 %v1_df10158, 128
  br i1 %v7_df14159, label %dec_label_pc_df1c, label %dec_label_pc_df0c.dec_label_pc_df0c_crit_edge

dec_label_pc_df0c.dec_label_pc_df0c_crit_edge:    ; preds = %dec_label_pc_dee4, %dec_label_pc_df0c.dec_label_pc_df0c_crit_edge
  %v1_df10160 = phi i32 [ %v1_df10, %dec_label_pc_df0c.dec_label_pc_df0c_crit_edge ], [ %v1_df10158, %dec_label_pc_dee4 ]
  %v0_df0c.pre = load i32, i32* @r4, align 4
  %v2_df0c = load i32, i32* @r6, align 4
  %v3_df0c = add i32 %v2_df0c, %v1_df10160
  %v4_df0c = inttoptr i32 %v3_df0c to i32*
  store i32 %v0_df0c.pre, i32* %v4_df0c, align 4
  %v0_df10 = load i32, i32* %r3.global-to-local, align 4
  %v1_df10 = add i32 %v0_df10, 4
  store i32 %v1_df10, i32* %r3.global-to-local, align 4
  %v7_df14 = icmp eq i32 %v1_df10, 128
  br i1 %v7_df14, label %dec_label_pc_df1c, label %dec_label_pc_df0c.dec_label_pc_df0c_crit_edge

dec_label_pc_df1c:                                ; preds = %dec_label_pc_df0c.dec_label_pc_df0c_crit_edge, %dec_label_pc_dee4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_df1c = load i32, i32* @r7, align 4
  %v3_df1c = udiv i32 %v0_df1c, 32
  %v3_df24 = mul nuw nsw i32 %v3_df1c, 4
  store i32 %v3_df24, i32* %r3.global-to-local, align 4
  store i32 %v2_df28, i32* %r2.global-to-local, align 4
  %v2_df2c = add i32 %v3_df24, %v2_df28
  store i32 %v2_df2c, i32* @r5, align 4
  %v1_df30 = add i32 %v2_df2c, -156
  %v2_df30 = inttoptr i32 %v1_df30 to i32*
  %v3_df30 = load i32, i32* %v2_df30, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_df38 = urem i32 %v0_df1c, 32
  store i32 %v1_df38, i32* @r8, align 4
  %v7_df3c = shl i32 1, %v1_df38
  %v8_df3c = or i32 %v3_df30, %v7_df3c
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_df3c, i32* %v2_df30, align 4
  %v0_df4c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_df4c, i32* %stack_var_-48, align 4
  store i32 %v2_df54, i32* @lr, align 4
  store i32 %v2_ddac, i32* %ip.global-to-local, align 4
  %v0_df5c = load i32, i32* @r7, align 4
  %v1_df5c = load i32, i32* %r3.global-to-local, align 4
  %v2_df5c = add i32 %v1_df5c, %v0_df5c
  store i32 %v2_df5c, i32* %r0.global-to-local, align 4
  store i32 %v2_de84, i32* %r1.global-to-local, align 4
  %v0_df68 = load i32, i32* @r4, align 4
  store i32 %v0_df68, i32* %r2.global-to-local, align 4
  store i32 %v0_df68, i32* %r3.global-to-local, align 4
  %v5_df74 = call i32 @function_11e88(i32 %v2_df5c, i32 %v2_de84, i32 %v0_df68, i32 %v0_df68, i32 %v2_df54)
  store i32 %v5_df74, i32* %r0.global-to-local, align 4
  %v7_df78 = icmp eq i32 %v5_df74, -1
  store i1 %v7_df78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_df78, label %dec_label_pc_dff4, label %dec_label_pc_df80

dec_label_pc_df80:                                ; preds = %dec_label_pc_df1c
  %v2_df80 = icmp eq i32 %v5_df74, 0
  store i1 %v2_df80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_df80, label %dec_label_pc_dfd4, label %dec_label_pc_df88

dec_label_pc_df88:                                ; preds = %dec_label_pc_df80
  %v0_df88 = load i32, i32* @r5, align 4
  %v1_df88 = add i32 %v0_df88, -156
  %v2_df88 = inttoptr i32 %v1_df88 to i32*
  %v3_df88 = load i32, i32* %v2_df88, align 4
  %v1_df8c = load i32, i32* @r8, align 4
  %v6_df8c = ashr i32 %v3_df88, %v1_df8c
  store i32 %v6_df8c, i32* %r3.global-to-local, align 4
  %v1_df90 = urem i32 %v6_df8c, 2
  %v2_df90 = icmp eq i32 %v1_df90, 0
  store i1 %v2_df90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_df90, label %dec_label_pc_dff4, label %dec_label_pc_df98

dec_label_pc_df98:                                ; preds = %dec_label_pc_df88
  store i32 %v2_de4c, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_dfa4 = load i32, i32* @r7, align 4
  store i32 %v0_dfa4, i32* %r0.global-to-local, align 4
  %v0_dfa8 = load i32, i32* @r4, align 4
  %v7_dfb0 = call i32 @function_123ec(i32 %v0_dfa4, i32* %v6_dfb0, i32 2048, i32 16384, i32 %v0_dfa8, i32 %v0_dfa8)
  store i32 %v7_dfb0, i32* %r4.global-to-local, align 4
  %v0_dfb8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_dfb8, i32* %r0.global-to-local, align 4
  %v1_dfbc = inttoptr i32 %v0_dfb8 to i8*
  %v2_dfbc = call i32 @function_113e8(i8* %v1_dfbc)
  %v1_dfc0 = add i32 %v2_dfbc, 17
  store i32 %v1_dfc0, i32* %r0.global-to-local, align 4
  %v0_dfc4 = load i32, i32* %r4.global-to-local, align 4
  %v3_dfc4 = icmp ult i32 %v0_dfc4, %v1_dfc0
  %v9_dfc4 = icmp eq i32 %v0_dfc4, %v1_dfc0
  store i1 %v9_dfc4, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_dfc4, label %dec_label_pc_dfd4, label %dec_label_pc_e028

dec_label_pc_dfd4:                                ; preds = %dec_label_pc_df98, %dec_label_pc_e028, %dec_label_pc_e064, %dec_label_pc_df80, %dec_label_pc_e01c
  %v0_dfd4 = load i32, i32* %sl.global-to-local, align 4
  %v7_dfd4 = icmp eq i32 %v0_dfd4, 5
  store i1 %v7_dfd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dfd4, label %dec_label_pc_dff4, label %dec_label_pc_dfdc

dec_label_pc_dfdc:                                ; preds = %dec_label_pc_dfe4, %dec_label_pc_dfd4
  %v0_dfdc = phi i32 [ %v0_dfec, %dec_label_pc_dfe4 ], [ %v0_dfd4, %dec_label_pc_dfd4 ]
  %v1_dfdc = add i32 %v0_dfdc, 1
  store i32 %v1_dfdc, i32* %sl.global-to-local, align 4
  %v0_de88.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_de88

dec_label_pc_dfe4:                                ; preds = %dec_label_pc_dec8, %dec_label_pc_deb0
  %v0_dfe4 = phi i32 [ %v5_ded8, %dec_label_pc_dec8 ], [ %v4_debc, %dec_label_pc_deb0 ]
  %v1_dfe4 = add i32 %v0_dfe4, 2
  store i32 %v1_dfe4, i32* %r0.global-to-local, align 4
  %v1_dfe8 = call i32 @function_12cb4(i32 %v1_dfe4)
  store i32 %v1_dfe8, i32* %r0.global-to-local, align 4
  %v0_dfec = load i32, i32* %sl.global-to-local, align 4
  %v7_dfec = icmp eq i32 %v0_dfec, 5
  store i1 %v7_dfec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dfec, label %dec_label_pc_dff4, label %dec_label_pc_dfdc

dec_label_pc_dff4:                                ; preds = %dec_label_pc_dfe4, %dec_label_pc_dfd4, %dec_label_pc_df88, %dec_label_pc_df1c, %dec_label_pc_e074, %dec_label_pc_e080.backedge
  %v0_dff4 = load i32, i32* @r7, align 4
  store i32 %v0_dff4, i32* %r0.global-to-local, align 4
  %v1_dff8 = call i32 @function_11c68(i32 %v0_dff4)
  store i32 %v1_dff8, i32* %r0.global-to-local, align 4
  store i32 %v2_dd2c, i32* %r2.global-to-local, align 4
  %v2_e000 = load i8, i8* %v3_dd2c, align 1
  %v3_e000 = zext i8 %v2_e000 to i32
  store i32 %v3_e000, i32* @r4, align 4
  %v2_e004 = icmp eq i8 %v2_e000, 0
  store i1 %v2_e004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e004, label %dec_label_pc_e160, label %dec_label_pc_e00c

dec_label_pc_e00c:                                ; preds = %dec_label_pc_dff4, %dec_label_pc_e160
  %stack_var_-4300.0 = phi i8* [ %v5_e174, %dec_label_pc_e160 ], [ %v3_dd2c, %dec_label_pc_dff4 ]
  %v4_e00c = ptrtoint i8* %stack_var_-4300.0 to i32
  store i32 %v4_e00c, i32* %r0.global-to-local, align 4
  %v2_e018 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_e018, i32* @r4, align 4
  store i32 %v6_dd14, i32* @r5, align 4
  store i32 %v9_dd14, i32* @r6, align 4
  store i32 %v12_dd14, i32* @r7, align 4
  ret i32 %v4_e00c

dec_label_pc_e01c:                                ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e020 = call i32 @function_12cb4(i32 1)
  store i32 %v1_e020, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dfd4

dec_label_pc_e028:                                ; preds = %dec_label_pc_df98
  store i32 %v2_de4c, i32* %lr.global-to-local, align 4
  store i32 %v1_e02c, i32* %fp.global-to-local, align 4
  store i32 %v1_e02c, i32* %r0.global-to-local, align 4
  %v2_e034 = call i32 @function_113e8(i8* %v1_e034)
  store i32 %v2_e034, i32* %r0.global-to-local, align 4
  store i32 %v2_de4c, i32* %ip.global-to-local, align 4
  store i32 %v2_df28, i32* %r1.global-to-local, align 4
  %v4_e044 = load i8, i8* %stack_var_-4288, align 1
  %v5_e044 = sext i8 %v4_e044 to i32
  store i32 %v5_e044, i32* %r3.global-to-local, align 4
  %v3_e048 = load i8, i8* %v2_e048, align 1
  %v4_e048 = zext i8 %v3_e048 to i32
  store i32 %v4_e048, i32* %r2.global-to-local, align 4
  store i32 %v4_de00, i32* @lr, align 4
  %v4_e050 = mul nuw nsw i32 %v4_e048, 256
  %v5_e050 = or i32 %v4_e050, %v5_e044
  store i32 %v5_e050, i32* %r3.global-to-local, align 4
  %v0_e054 = load i32, i32* %fp.global-to-local, align 4
  %v9_e058 = icmp eq i32 %v5_e050, %v4_de00
  store i1 %v9_e058, i1* %cpsr_z.global-to-local, align 1
  %v2_e054 = add i32 %v2_e034, 5
  %v1_e05c = add i32 %v2_e054, %v0_e054
  store i32 %v1_e05c, i32* %r0.global-to-local, align 4
  br i1 %v9_e058, label %dec_label_pc_e064, label %dec_label_pc_dfd4

dec_label_pc_e064:                                ; preds = %dec_label_pc_e028
  %v3_e064 = load i8, i8* %v2_e064, align 1
  %v4_e064 = zext i8 %v3_e064 to i32
  store i32 %v4_e064, i32* %r2.global-to-local, align 4
  %v3_e068 = load i8, i8* %v2_e068, align 1
  %v4_e068 = zext i8 %v3_e068 to i32
  store i32 %v4_e068, i32* %r3.global-to-local, align 4
  %v4_e06c = mul nuw nsw i32 %v4_e068, 256
  %v5_e06c = or i32 %v4_e06c, %v4_e064
  store i32 %v5_e06c, i32* %r2.global-to-local, align 4
  %v7_e06c = icmp eq i32 %v5_e06c, 0
  store i1 %v7_e06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e06c, label %dec_label_pc_dfd4, label %dec_label_pc_e074

dec_label_pc_e074:                                ; preds = %dec_label_pc_e064
  %v3_e078 = mul nuw nsw i32 %v4_e064, 256
  %v5_e07c = or i32 %v4_e068, %v3_e078
  %v1_e134 = add i32 %v2_de4c, -49152
  %v1_e080143 = add nsw i32 %v5_e07c, -1
  %v3_e084144 = mul i32 %v1_e080143, 65536
  store i32 %v3_e084144, i32* %r3.global-to-local, align 4
  %v7_e088150 = icmp eq i32 %v3_e084144, -65536
  store i1 %v7_e088150, i1* %cpsr_z.global-to-local, align 1
  %v3_e08c151 = urem i32 %v1_e080143, 65536
  store i32 %v3_e08c151, i32* @r6, align 4
  br i1 %v7_e088150, label %dec_label_pc_dff4, label %dec_label_pc_e094.lr.ph

dec_label_pc_e094.lr.ph:                          ; preds = %dec_label_pc_e074
  %v1_e210 = add i32 %v2_dd2c, 4
  %v2_e210 = inttoptr i32 %v1_e210 to i32*
  br label %dec_label_pc_e094

dec_label_pc_e094:                                ; preds = %dec_label_pc_e094.lr.ph, %dec_label_pc_e080.backedge
  %v3_e08c153 = phi i32 [ %v3_e08c151, %dec_label_pc_e094.lr.ph ], [ %v3_e08c, %dec_label_pc_e080.backedge ]
  %v0_e0e8152 = phi i32 [ %v1_e05c, %dec_label_pc_e094.lr.ph ], [ %storemerge, %dec_label_pc_e080.backedge ]
  store i32 %v0_e0e8152, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_e0a017 = inttoptr i32 %v0_e0e8152 to i8*
  %v2_e0a018 = load i8, i8* %v1_e0a017, align 1
  %v3_e0a019 = zext i8 %v2_e0a018 to i32
  store i32 %v3_e0a019, i32* %r2.global-to-local, align 4
  %v2_e0a420 = icmp eq i8 %v2_e0a018, 0
  store i1 %v2_e0a420, i1* %cpsr_z.global-to-local, align 1
  %v3_e0a821 = mul nuw nsw i32 %v3_e0a019, 256
  store i32 %v3_e0a821, i32* %r1.global-to-local, align 4
  br i1 %v2_e0a420, label %dec_label_pc_e0e0, label %dec_label_pc_e0b0.preheader

dec_label_pc_e0b0.preheader:                      ; preds = %dec_label_pc_e094, %dec_label_pc_e0a0.backedge
  %v1_e184 = phi i32 [ %v1_e18449, %dec_label_pc_e0a0.backedge ], [ 1, %dec_label_pc_e094 ]
  %v0_e17c47 = phi i32 [ %v0_e17c, %dec_label_pc_e0a0.backedge ], [ 0, %dec_label_pc_e094 ]
  %v0_e0bc45 = phi i32 [ %v3_e0a8, %dec_label_pc_e0a0.backedge ], [ %v3_e0a821, %dec_label_pc_e094 ]
  %v0_e0b843 = phi i32 [ %v1_e180, %dec_label_pc_e0a0.backedge ], [ %v0_e0e8152, %dec_label_pc_e094 ]
  %v0_e0b041 = phi i32 [ %v3_e0a0, %dec_label_pc_e0a0.backedge ], [ %v3_e0a019, %dec_label_pc_e094 ]
  br label %dec_label_pc_e0b0

dec_label_pc_e0b0:                                ; preds = %dec_label_pc_e0b0.preheader, %dec_label_pc_e0b8
  %v0_e17c = phi i32 [ %v0_e17c47, %dec_label_pc_e0b0.preheader ], [ 1, %dec_label_pc_e0b8 ]
  %v0_e0bc = phi i32 [ %v0_e0bc45, %dec_label_pc_e0b0.preheader ], [ %v3_e0d8, %dec_label_pc_e0b8 ]
  %v0_e180 = phi i32 [ %v0_e0b843, %dec_label_pc_e0b0.preheader ], [ %v2_e0c8, %dec_label_pc_e0b8 ]
  %v0_e0b0 = phi i32 [ %v0_e0b041, %dec_label_pc_e0b0.preheader ], [ %v3_e0cc, %dec_label_pc_e0b8 ]
  %v7_e0b0 = icmp eq i32 %v0_e0b0, 191
  store i1 %v7_e0b0, i1* %cpsr_z.global-to-local, align 1
  %tmp180 = icmp ult i32 %v0_e0b0, 192
  br i1 %tmp180, label %dec_label_pc_e17c, label %dec_label_pc_e0b8

dec_label_pc_e0b8:                                ; preds = %dec_label_pc_e0b0
  %v1_e0b8 = add i32 %v0_e180, 1
  %v2_e0b8 = inttoptr i32 %v1_e0b8 to i8*
  %v3_e0b8 = load i8, i8* %v2_e0b8, align 1
  %v4_e0b8 = zext i8 %v3_e0b8 to i32
  store i32 %v2_de4c, i32* %r1.global-to-local, align 4
  %v2_e0bc = add i32 %v0_e0bc, %v1_e134
  %v2_e0c8 = add i32 %v2_e0bc, %v4_e0b8
  store i32 %v2_e0c8, i32* %r3.global-to-local, align 4
  %v1_e0cc = inttoptr i32 %v2_e0c8 to i8*
  %v2_e0cc = load i8, i8* %v1_e0cc, align 1
  %v3_e0cc = zext i8 %v2_e0cc to i32
  store i32 %v3_e0cc, i32* %r2.global-to-local, align 4
  %v2_e0d0 = icmp eq i8 %v2_e0cc, 0
  store i1 %v2_e0d0, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v3_e0d8 = mul nuw nsw i32 %v3_e0cc, 256
  store i32 %v3_e0d8, i32* %r1.global-to-local, align 4
  br i1 %v2_e0d0, label %dec_label_pc_e0e0, label %dec_label_pc_e0b0

dec_label_pc_e0e0:                                ; preds = %dec_label_pc_e0a0.backedge, %dec_label_pc_e0b8, %dec_label_pc_e094
  %v1_e0e4 = phi i32 [ 1, %dec_label_pc_e094 ], [ %v1_e184, %dec_label_pc_e0b8 ], [ %v1_e18449, %dec_label_pc_e0a0.backedge ]
  %v0_e0e0 = phi i32 [ 0, %dec_label_pc_e094 ], [ 1, %dec_label_pc_e0b8 ], [ %v0_e17c, %dec_label_pc_e0a0.backedge ]
  %v7_e0e0 = icmp eq i32 %v0_e0e0, 1
  store i1 %v7_e0e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0e0, label %bb127, label %bb128

bb127:                                            ; preds = %dec_label_pc_e0e0
  %v2_e0e4 = add i32 %v1_e0e4, 1
  store i32 %v2_e0e4, i32* %ip.global-to-local, align 4
  br label %bb128

bb128:                                            ; preds = %dec_label_pc_e0e0, %bb127
  %v1_e0e8 = phi i32 [ %v1_e0e4, %dec_label_pc_e0e0 ], [ %v2_e0e4, %bb127 ]
  %v2_e0e8 = add i32 %v1_e0e8, %v0_e0e8152
  store i32 %v2_e0e8, i32* @r4, align 4
  %v3_e0ec = inttoptr i32 %v2_e0e8 to i8*
  %v4_e0ec = load i8, i8* %v3_e0ec, align 1
  %v6_e0ec = zext i8 %v4_e0ec to i32
  store i32 %v6_e0ec, i32* %r3.global-to-local, align 4
  %v1_e0f0 = add i32 %v2_e0e8, 1
  %v2_e0f0 = inttoptr i32 %v1_e0f0 to i8*
  %v3_e0f0 = load i8, i8* %v2_e0f0, align 1
  %v4_e0f0 = zext i8 %v3_e0f0 to i32
  store i32 %v4_e0f0, i32* %r2.global-to-local, align 4
  %v4_e0f4 = mul nuw nsw i32 %v4_e0f0, 256
  %v5_e0f4 = or i32 %v4_e0f4, %v6_e0ec
  store i32 %v5_e0f4, i32* %r3.global-to-local, align 4
  %v7_e0f8 = icmp eq i32 %v5_e0f4, 256
  store i1 %v7_e0f8, i1* %cpsr_z.global-to-local, align 1
  %v1_e0fc = add i32 %v2_e0e8, 10
  store i32 %v1_e0fc, i32* @r5, align 4
  br i1 %v7_e0f8, label %dec_label_pc_e19c, label %dec_label_pc_e104

dec_label_pc_e104:                                ; preds = %dec_label_pc_e19c, %bb128
  store i32 %v1_e0fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e11023 = inttoptr i32 %v1_e0fc to i8*
  %v2_e11024 = load i8, i8* %v1_e11023, align 1
  %v3_e11025 = zext i8 %v2_e11024 to i32
  store i32 %v3_e11025, i32* %r2.global-to-local, align 4
  %v2_e11426 = icmp eq i8 %v2_e11024, 0
  store i1 %v2_e11426, i1* %cpsr_z.global-to-local, align 1
  %v3_e11827 = mul nuw nsw i32 %v3_e11025, 256
  store i32 %v3_e11827, i32* %r1.global-to-local, align 4
  br i1 %v2_e11426, label %dec_label_pc_e150, label %dec_label_pc_e120.preheader

dec_label_pc_e120.preheader:                      ; preds = %dec_label_pc_e104, %dec_label_pc_e110.backedge
  %v1_e194 = phi i32 [ %v1_e19464, %dec_label_pc_e110.backedge ], [ 1, %dec_label_pc_e104 ]
  %v0_e18c62 = phi i32 [ %v0_e18c, %dec_label_pc_e110.backedge ], [ 0, %dec_label_pc_e104 ]
  %v0_e12c60 = phi i32 [ %v3_e118, %dec_label_pc_e110.backedge ], [ %v3_e11827, %dec_label_pc_e104 ]
  %v0_e12858 = phi i32 [ %v1_e190, %dec_label_pc_e110.backedge ], [ %v1_e0fc, %dec_label_pc_e104 ]
  %v0_e12056 = phi i32 [ %v3_e110, %dec_label_pc_e110.backedge ], [ %v3_e11025, %dec_label_pc_e104 ]
  br label %dec_label_pc_e120

dec_label_pc_e120:                                ; preds = %dec_label_pc_e120.preheader, %dec_label_pc_e128
  %v0_e18c = phi i32 [ %v0_e18c62, %dec_label_pc_e120.preheader ], [ 1, %dec_label_pc_e128 ]
  %v0_e12c = phi i32 [ %v0_e12c60, %dec_label_pc_e120.preheader ], [ %v3_e148, %dec_label_pc_e128 ]
  %v0_e190 = phi i32 [ %v0_e12858, %dec_label_pc_e120.preheader ], [ %v2_e138, %dec_label_pc_e128 ]
  %v0_e120 = phi i32 [ %v0_e12056, %dec_label_pc_e120.preheader ], [ %v3_e13c, %dec_label_pc_e128 ]
  %v7_e120 = icmp eq i32 %v0_e120, 191
  store i1 %v7_e120, i1* %cpsr_z.global-to-local, align 1
  %tmp181 = icmp ult i32 %v0_e120, 192
  br i1 %tmp181, label %dec_label_pc_e18c, label %dec_label_pc_e128

dec_label_pc_e128:                                ; preds = %dec_label_pc_e120
  %v1_e128 = add i32 %v0_e190, 1
  %v2_e128 = inttoptr i32 %v1_e128 to i8*
  %v3_e128 = load i8, i8* %v2_e128, align 1
  %v4_e128 = zext i8 %v3_e128 to i32
  store i32 %v2_de4c, i32* %r1.global-to-local, align 4
  %v2_e12c = add i32 %v0_e12c, %v1_e134
  %v2_e138 = add i32 %v2_e12c, %v4_e128
  store i32 %v2_e138, i32* %r3.global-to-local, align 4
  %v1_e13c = inttoptr i32 %v2_e138 to i8*
  %v2_e13c = load i8, i8* %v1_e13c, align 1
  %v3_e13c = zext i8 %v2_e13c to i32
  store i32 %v3_e13c, i32* %r2.global-to-local, align 4
  %v2_e140 = icmp eq i8 %v2_e13c, 0
  store i1 %v2_e140, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_e148 = mul nuw nsw i32 %v3_e13c, 256
  store i32 %v3_e148, i32* %r1.global-to-local, align 4
  br i1 %v2_e140, label %dec_label_pc_e150, label %dec_label_pc_e120

dec_label_pc_e150:                                ; preds = %dec_label_pc_e110.backedge, %dec_label_pc_e128, %dec_label_pc_e104
  %v1_e154 = phi i32 [ 1, %dec_label_pc_e104 ], [ %v1_e194, %dec_label_pc_e128 ], [ %v1_e19464, %dec_label_pc_e110.backedge ]
  %v0_e150 = phi i32 [ 0, %dec_label_pc_e104 ], [ 1, %dec_label_pc_e128 ], [ %v0_e18c, %dec_label_pc_e110.backedge ]
  %v7_e150 = icmp eq i32 %v0_e150, 1
  store i1 %v7_e150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e150, label %bb129, label %bb130

bb129:                                            ; preds = %dec_label_pc_e150
  %v2_e154 = add i32 %v1_e154, 1
  store i32 %v2_e154, i32* %r0.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_e150, %bb129
  %v1_e158 = phi i32 [ %v1_e154, %dec_label_pc_e150 ], [ %v2_e154, %bb129 ]
  %v2_e158 = add i32 %v1_e158, %v1_e0fc
  br label %dec_label_pc_e080.backedge

dec_label_pc_e080.backedge:                       ; preds = %bb130, %dec_label_pc_e244
  %v0_e080.pre = phi i32 [ %v3_e08c153, %bb130 ], [ %v0_e080.pre.pre, %dec_label_pc_e244 ]
  %storemerge = phi i32 [ %v2_e158, %bb130 ], [ %v2_e258, %dec_label_pc_e244 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_e080 = add i32 %v0_e080.pre, -1
  %v3_e084 = mul i32 %v1_e080, 65536
  store i32 %v3_e084, i32* %r3.global-to-local, align 4
  %v7_e088 = icmp eq i32 %v3_e084, -65536
  store i1 %v7_e088, i1* %cpsr_z.global-to-local, align 1
  %v3_e08c = urem i32 %v1_e080, 65536
  store i32 %v3_e08c, i32* @r6, align 4
  br i1 %v7_e088, label %dec_label_pc_dff4, label %dec_label_pc_e094

dec_label_pc_e160:                                ; preds = %dec_label_pc_dff4
  %v1_e160 = add i32 %v2_dd2c, 4
  %v2_e160 = inttoptr i32 %v1_e160 to i32*
  %v3_e160 = load i32, i32* %v2_e160, align 4
  store i32 %v3_e160, i32* %r0.global-to-local, align 4
  %v2_e164 = icmp eq i32 %v3_e160, 0
  store i1 %v2_e164, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_e16c.104 to i32), i32* @lr, align 4
  %v1_e168 = xor i1 %v2_e164, true
  call void @__pseudo_cond_branch(i1 %v1_e168, i32 ptrtoint (i32* @global_var_12688.103 to i32))
  store i32 %v2_dd2c, i32* @r0, align 4
  %v0_e170 = call i32 @function_12688()
  store i32 %v0_e170, i32* %r0.global-to-local, align 4
  %v0_e174 = load i32, i32* @r4, align 4
  %v5_e174 = inttoptr i32 %v0_e174 to i8*
  br label %dec_label_pc_e00c

dec_label_pc_e17c:                                ; preds = %dec_label_pc_e0b0
  %v2_e17c = icmp eq i32 %v0_e17c, 0
  store i1 %v2_e17c, i1* %cpsr_z.global-to-local, align 1
  %v1_e180 = add i32 %v0_e180, 1
  store i32 %v1_e180, i32* %r3.global-to-local, align 4
  br i1 %v2_e17c, label %bb131, label %dec_label_pc_e0a0.backedge

dec_label_pc_e0a0.backedge:                       ; preds = %dec_label_pc_e17c, %bb131
  %v1_e18449 = phi i32 [ %v1_e184, %dec_label_pc_e17c ], [ %v2_e184, %bb131 ]
  %v1_e0a0 = inttoptr i32 %v1_e180 to i8*
  %v2_e0a0 = load i8, i8* %v1_e0a0, align 1
  %v3_e0a0 = zext i8 %v2_e0a0 to i32
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e0a4 = icmp eq i8 %v2_e0a0, 0
  store i1 %v2_e0a4, i1* %cpsr_z.global-to-local, align 1
  %v3_e0a8 = mul nuw nsw i32 %v3_e0a0, 256
  store i32 %v3_e0a8, i32* %r1.global-to-local, align 4
  br i1 %v2_e0a4, label %dec_label_pc_e0e0, label %dec_label_pc_e0b0.preheader

bb131:                                            ; preds = %dec_label_pc_e17c
  %v2_e184 = add i32 %v1_e184, 1
  store i32 %v2_e184, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e0a0.backedge

dec_label_pc_e18c:                                ; preds = %dec_label_pc_e120
  %v2_e18c = icmp eq i32 %v0_e18c, 0
  store i1 %v2_e18c, i1* %cpsr_z.global-to-local, align 1
  %v1_e190 = add i32 %v0_e190, 1
  store i32 %v1_e190, i32* %r3.global-to-local, align 4
  br i1 %v2_e18c, label %bb132, label %dec_label_pc_e110.backedge

dec_label_pc_e110.backedge:                       ; preds = %dec_label_pc_e18c, %bb132
  %v1_e19464 = phi i32 [ %v1_e194, %dec_label_pc_e18c ], [ %v2_e194, %bb132 ]
  %v1_e110 = inttoptr i32 %v1_e190 to i8*
  %v2_e110 = load i8, i8* %v1_e110, align 1
  %v3_e110 = zext i8 %v2_e110 to i32
  store i32 %v3_e110, i32* %r2.global-to-local, align 4
  %v2_e114 = icmp eq i8 %v2_e110, 0
  store i1 %v2_e114, i1* %cpsr_z.global-to-local, align 1
  %v3_e118 = mul nuw nsw i32 %v3_e110, 256
  store i32 %v3_e118, i32* %r1.global-to-local, align 4
  br i1 %v2_e114, label %dec_label_pc_e150, label %dec_label_pc_e120.preheader

bb132:                                            ; preds = %dec_label_pc_e18c
  %v2_e194 = add i32 %v1_e194, 1
  store i32 %v2_e194, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e110.backedge

dec_label_pc_e19c:                                ; preds = %bb128
  %v1_e19c = add i32 %v2_e0e8, 2
  %v2_e19c = inttoptr i32 %v1_e19c to i8*
  %v3_e19c = load i8, i8* %v2_e19c, align 1
  %v4_e19c = zext i8 %v3_e19c to i32
  store i32 %v4_e19c, i32* %r3.global-to-local, align 4
  %v1_e1a0 = add i32 %v2_e0e8, 3
  %v2_e1a0 = inttoptr i32 %v1_e1a0 to i8*
  %v3_e1a0 = load i8, i8* %v2_e1a0, align 1
  %v4_e1a0 = zext i8 %v3_e1a0 to i32
  store i32 %v4_e1a0, i32* %r2.global-to-local, align 4
  %v4_e1a4 = mul nuw nsw i32 %v4_e1a0, 256
  %v5_e1a4 = or i32 %v4_e1a4, %v4_e19c
  store i32 %v5_e1a4, i32* %r3.global-to-local, align 4
  %v7_e1a8 = icmp eq i32 %v5_e1a4, 256
  store i1 %v7_e1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e1a8, label %dec_label_pc_e1b0, label %dec_label_pc_e104

dec_label_pc_e1b0:                                ; preds = %dec_label_pc_e19c
  %v1_e1b0 = add i32 %v2_e0e8, 8
  %v2_e1b0 = inttoptr i32 %v1_e1b0 to i8*
  %v3_e1b0 = load i8, i8* %v2_e1b0, align 1
  %v4_e1b0 = zext i8 %v3_e1b0 to i32
  store i32 %v4_e1b0, i32* %r1.global-to-local, align 4
  %v1_e1b4 = add i32 %v2_e0e8, 9
  %v2_e1b4 = inttoptr i32 %v1_e1b4 to i8*
  %v3_e1b4 = load i8, i8* %v2_e1b4, align 1
  %v4_e1b4 = zext i8 %v3_e1b4 to i32
  store i32 %v4_e1b4, i32* %r0.global-to-local, align 4
  %v4_e1b8 = mul nuw nsw i32 %v4_e1b4, 256
  %v5_e1b8 = or i32 %v4_e1b8, %v4_e1b0
  %v3_e1bc = mul i32 %v5_e1b8, 65536
  store i32 %v3_e1bc, i32* %r2.global-to-local, align 4
  %v3_e1c0 = mul nuw nsw i32 %v4_e1b0, 256
  %v5_e1c8 = or i32 %v4_e1b4, %v3_e1c0
  store i32 %v5_e1c8, i32* %r3.global-to-local, align 4
  %v7_e1cc = icmp eq i32 %v5_e1c8, 4
  store i1 %v7_e1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e1cc, label %dec_label_pc_e1d4, label %dec_label_pc_e244

dec_label_pc_e1d4:                                ; preds = %dec_label_pc_e1b0
  %v2_e1d4 = inttoptr i32 %v1_e0fc to i8*
  %v3_e1d4 = load i8, i8* %v2_e1d4, align 1
  %v4_e1d4 = zext i8 %v3_e1d4 to i32
  store i32 %v4_e1d4, i32* %r3.global-to-local, align 4
  store i32 %v2_ddac, i32* %r2.global-to-local, align 4
  %v1_e1e0 = add i32 %v2_e0e8, 11
  %v2_e1e0 = inttoptr i32 %v1_e1e0 to i8*
  %v3_e1e0 = load i8, i8* %v2_e1e0, align 1
  %v4_e1e0 = zext i8 %v3_e1e0 to i32
  store i32 %v4_e1e0, i32* %r2.global-to-local, align 4
  store i32 %v2_ddac, i32* %r3.global-to-local, align 4
  %v1_e1ec = add i32 %v2_e0e8, 12
  %v2_e1ec = inttoptr i32 %v1_e1ec to i8*
  %v3_e1ec = load i8, i8* %v2_e1ec, align 1
  %v4_e1ec = zext i8 %v3_e1ec to i32
  store i32 %v4_e1ec, i32* %r3.global-to-local, align 4
  store i32 %v2_ddac, i32* %ip.global-to-local, align 4
  %v1_e1f8 = add i32 %v2_e0e8, 13
  %v2_e1f8 = inttoptr i32 %v1_e1f8 to i8*
  %v3_e1f8 = load i8, i8* %v2_e1f8, align 1
  %v4_e1f8 = zext i8 %v3_e1f8 to i32
  store i32 %v4_e1f8, i32* %r2.global-to-local, align 4
  store i32 %v2_dd2c, i32* @lr, align 4
  %v2_e204 = load i8, i8* %v3_dd2c, align 1
  %v3_e204 = zext i8 %v2_e204 to i32
  %v3_e208 = mul nuw nsw i32 %v3_e204, 4
  %v1_e20c = add nuw nsw i32 %v3_e208, 4
  store i32 %v1_e20c, i32* %r1.global-to-local, align 4
  %v3_e210 = load i32, i32* %v2_e210, align 4
  store i32 %v3_e210, i32* %r0.global-to-local, align 4
  %v3_e214 = sext i8 %v3_e1f8 to i32
  %v5_e214 = sext i8 %v3_e1ec to i32
  %v10_e214 = call i32 @function_12778(i32 %v3_e210, i32 %v1_e20c, i32 %v3_e214, i32 %v5_e214)
  store i32 %v10_e214, i32* %r0.global-to-local, align 4
  store i32 %v2_dd2c, i32* %r1.global-to-local, align 4
  store i32 %v2_ddac, i32* %ip.global-to-local, align 4
  %v2_e220 = load i8, i8* %v3_dd2c, align 1
  %v3_e220 = zext i8 %v2_e220 to i32
  store i32 %v3_e220, i32* %r2.global-to-local, align 4
  %v4_e224 = sext i8 %v3_e1d4 to i32
  store i32 %v4_e224, i32* %r3.global-to-local, align 4
  store i32 %v2_dd2c, i32* @lr, align 4
  %v1_e22c = add nuw nsw i32 %v3_e220, 1
  store i32 %v1_e22c, i32* %r1.global-to-local, align 4
  %v5_e230 = mul nuw nsw i32 %v3_e220, 4
  %v6_e230 = add i32 %v5_e230, %v10_e214
  %v7_e230 = inttoptr i32 %v6_e230 to i32*
  store i32 %v4_e224, i32* %v7_e230, align 4
  %v1_e234 = load i32, i32* @lr, align 4
  %v2_e234 = add i32 %v1_e234, 4
  %v3_e234 = inttoptr i32 %v2_e234 to i32*
  store i32 %v10_e214, i32* %v3_e234, align 4
  %v0_e238 = load i32, i32* %r1.global-to-local, align 4
  %v1_e238 = trunc i32 %v0_e238 to i8
  %v2_e238 = load i32, i32* @lr, align 4
  %v3_e238 = inttoptr i32 %v2_e238 to i8*
  store i8 %v1_e238, i8* %v3_e238, align 1
  %v0_e23c = load i32, i32* @r4, align 4
  %v1_e23c = add i32 %v0_e23c, 9
  %v2_e23c = inttoptr i32 %v1_e23c to i8*
  %v3_e23c = load i8, i8* %v2_e23c, align 1
  %v4_e23c = zext i8 %v3_e23c to i32
  store i32 %v4_e23c, i32* %r0.global-to-local, align 4
  %v1_e240 = add i32 %v0_e23c, 8
  %v2_e240 = inttoptr i32 %v1_e240 to i8*
  %v3_e240 = load i8, i8* %v2_e240, align 1
  %v4_e240 = zext i8 %v3_e240 to i32
  store i32 %v4_e240, i32* %r1.global-to-local, align 4
  %v0_e258.pre = load i32, i32* @r5, align 4
  %v0_e080.pre.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e244

dec_label_pc_e244:                                ; preds = %dec_label_pc_e1b0, %dec_label_pc_e1d4
  %v0_e080.pre.pre = phi i32 [ %v3_e08c153, %dec_label_pc_e1b0 ], [ %v0_e080.pre.pre.pre, %dec_label_pc_e1d4 ]
  %v0_e258 = phi i32 [ %v1_e0fc, %dec_label_pc_e1b0 ], [ %v0_e258.pre, %dec_label_pc_e1d4 ]
  %v1_e244 = phi i32 [ %v4_e1b4, %dec_label_pc_e1b0 ], [ %v4_e23c, %dec_label_pc_e1d4 ]
  %v0_e244 = phi i32 [ %v4_e1b0, %dec_label_pc_e1b0 ], [ %v4_e240, %dec_label_pc_e1d4 ]
  %v4_e244 = mul nuw nsw i32 %v1_e244, 256
  %v5_e244 = or i32 %v4_e244, %v0_e244
  %v3_e248 = mul i32 %v5_e244, 65536
  store i32 %v3_e248, i32* %r2.global-to-local, align 4
  %tmp133 = mul nuw nsw i32 %v0_e244, 256
  %v5_e254 = or i32 %tmp133, %v1_e244
  store i32 %v5_e254, i32* %r3.global-to-local, align 4
  %v2_e258 = add i32 %v5_e254, %v0_e258
  br label %dec_label_pc_e080.backedge

; uselistorder directives
  uselistorder i32 %v1_e244, { 1, 0 }
  uselistorder i32 %v3_e220, { 1, 0, 2 }
  uselistorder i32 %v10_e214, { 1, 0, 2 }
  uselistorder i32 %v4_e1b4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_e1b0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_e194, { 1, 0 }
  uselistorder i32 %v3_e110, { 0, 2, 1 }
  uselistorder i32 %v1_e19464, { 1, 0 }
  uselistorder i32 %v1_e190, { 1, 2, 0 }
  uselistorder i32 %v2_e184, { 1, 0 }
  uselistorder i32 %v3_e0a0, { 0, 2, 1 }
  uselistorder i32 %v1_e18449, { 1, 0 }
  uselistorder i32 %v1_e180, { 1, 2, 0 }
  uselistorder i1 %v7_e088, { 1, 0 }
  uselistorder i32 %v1_e080, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v3_e13c, { 0, 2, 1 }
  uselistorder i32 %v2_e138, { 1, 2, 0 }
  uselistorder i32 %v0_e18c, { 2, 0, 1 }
  uselistorder i32 %v1_e194, { 1, 2, 0 }
  uselistorder i32 %v3_e11827, { 1, 0 }
  uselistorder i32 %v3_e11025, { 1, 0, 2 }
  uselistorder i32 %v1_e0fc, { 2, 3, 1, 0, 5, 4, 6 }
  uselistorder i32 %v2_e0e8, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_e0cc, { 0, 2, 1 }
  uselistorder i32 %v2_e0c8, { 1, 2, 0 }
  uselistorder i32 %v0_e17c, { 2, 0, 1 }
  uselistorder i32 %v1_e184, { 1, 2, 0 }
  uselistorder i32 %v3_e0a821, { 1, 0 }
  uselistorder i32 %v3_e0a019, { 1, 0, 2 }
  uselistorder i32 %v0_e0e8152, { 3, 0, 1, 2 }
  uselistorder i32 %v3_e08c151, { 1, 0 }
  uselistorder i1 %v7_e088150, { 1, 0 }
  uselistorder i32 %v1_e080143, { 1, 0 }
  uselistorder i32 %v4_e068, { 1, 0, 2 }
  uselistorder i32 %v0_dfec, { 1, 0 }
  uselistorder i32 %v0_dfc4, { 1, 0 }
  uselistorder i1 %v7_df78, { 1, 0 }
  uselistorder i32 %v5_df74, { 1, 0, 2 }
  uselistorder i32 %v1_df38, { 1, 0 }
  uselistorder i32 %v3_df24, { 1, 0 }
  uselistorder i32 %v0_df1c, { 1, 0 }
  uselistorder i32 %v1_df10, { 1, 2, 0 }
  uselistorder i1 %v7_dedc, { 1, 0 }
  uselistorder i32 %v5_ded8, { 1, 0, 2 }
  uselistorder i1 %v7_dec0, { 1, 0 }
  uselistorder i32 %v4_debc, { 1, 0, 2 }
  uselistorder i1 %v7_dea4, { 1, 0 }
  uselistorder i32 %v3_dea0, { 2, 1, 0, 3 }
  uselistorder i1 %v7_de88, { 2, 1, 0 }
  uselistorder i32 %v1_de8c, { 1, 0 }
  uselistorder i32 %v1_e02c, { 1, 2, 0 }
  uselistorder i32 %v2_df28, { 1, 0, 2 }
  uselistorder i32 %v2_de84, { 1, 0, 2 }
  uselistorder i32 %v2_de4c, { 4, 3, 2, 5, 7, 9, 1, 0, 6, 8, 10 }
  uselistorder i32 %v4_de00, { 3, 0, 2, 1 }
  uselistorder i32 %v1_ddcc, { 1, 0, 2 }
  uselistorder i32 %v0_dd88, { 0, 1, 3, 2 }
  uselistorder i32 %v1_dd84, { 1, 0, 2 }
  uselistorder i32 %v1_dd80, { 1, 0 }
  uselistorder i32 %v2_dd7411, { 1, 0 }
  uselistorder i32 %v2_dd74, { 1, 0 }
  uselistorder i1 %v8_dd64, { 1, 0 }
  uselistorder i32 %v2_dd4c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_dd34, { 1, 0 }
  uselistorder i32 %v2_dd2c, { 2, 3, 4, 5, 0, 1, 6, 7 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i8* %stack_var_-2240, { 0, 2, 1 }
  uselistorder i32* %stack_var_-64, { 0, 1, 3, 2 }
  uselistorder i8* %stack_var_-4288, { 2, 0, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 13, 11, 12, 14, 16, 33, 17, 18, 19, 20, 21, 25, 22, 23, 24, 26, 34, 35, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 11, 7, 29, 9, 10, 28, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 11, 6, 7, 27, 9, 10, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 23, 29, 25 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 3, 4, 10, 6, 47, 7, 8, 9, 12, 11, 15, 14, 13, 17, 16, 20, 18, 19, 21, 22, 24, 23, 26, 25, 27, 29, 28, 30, 37, 32, 31, 33, 34, 35, 36, 39, 38, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 6, 3, 5, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 8, 2, 13, 3, 4, 14, 5, 6, 7, 34, 9, 10, 11, 12, 33, 36, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 24, 25, 26, 27, 32, 30, 28, 29, 31, 37 }
  uselistorder i32 (i32)* @function_12cb4, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e244, { 1, 0 }
  uselistorder label %dec_label_pc_e110.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e0a0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e080.backedge, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_e120, { 1, 0 }
  uselistorder label %dec_label_pc_e120.preheader, { 1, 0 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %dec_label_pc_e0b0, { 1, 0 }
  uselistorder label %dec_label_pc_e0b0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e094, { 1, 0 }
  uselistorder label %dec_label_pc_e00c, { 1, 0 }
  uselistorder label %dec_label_pc_dff4, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_dfd4, { 2, 1, 4, 0, 3 }
  uselistorder label %dec_label_pc_df0c.dec_label_pc_df0c_crit_edge, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dd5c, { 1, 0 }
}

define i32 @function_e260() local_unnamed_addr {
dec_label_pc_e260:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e260 = load i32, i32* @r4, align 4
  store i32 %v3_e260, i32* %stack_var_-16, align 4
  %v0_e264 = load i32, i32* @r0, align 4
  store i32 %v0_e264, i32* %r5.global-to-local, align 4
  %v1_e268 = add i32 %v0_e264, 4
  %v2_e268 = inttoptr i32 %v1_e268 to i32*
  %v3_e268 = load i32, i32* %v2_e268, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 57996, i32* @lr, align 4
  %v1_e288 = icmp ne i32 %v3_e268, -1
  call void @__pseudo_cond_branch(i1 %v1_e288, i32 ptrtoint (i32* @global_var_11c68.80 to i32))
  %v3_e298 = call i32 @function_124b0(i32 2, i32 1, i32 0)
  store i32 %v3_e298, i32* %r3.global-to-local, align 4
  %v7_e2a0 = icmp eq i32 %v3_e298, -1
  store i32 256, i32* @r1, align 4
  %v0_e2a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_e2a8 = add i32 %v0_e2a8, 28
  store i32 %v1_e2a8, i32* @r0, align 4
  %v2_e2ac = add i32 %v0_e2a8, 4
  %v3_e2ac = inttoptr i32 %v2_e2ac to i32*
  store i32 %v3_e298, i32* %v3_e2ac, align 4
  br i1 %v7_e2a0, label %dec_label_pc_e260.dec_label_pc_e328_crit_edge, label %dec_label_pc_e2b4

dec_label_pc_e260.dec_label_pc_e328_crit_edge:    ; preds = %dec_label_pc_e260
  %v14_e32c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e328

dec_label_pc_e2b4:                                ; preds = %dec_label_pc_e260
  %v0_e2b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_e2b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_e2b4 = add i32 %v1_e2b4, 24
  %v3_e2b4 = inttoptr i32 %v2_e2b4 to i32*
  store i32 %v0_e2b4, i32* %v3_e2b4, align 4
  %v0_e2b8 = call i32 @function_11488()
  %v0_e2bc = load i32, i32* %r5.global-to-local, align 4
  %v1_e2bc = add i32 %v0_e2bc, 4
  %v2_e2bc = inttoptr i32 %v1_e2bc to i32*
  %v3_e2bc = load i32, i32* %v2_e2bc, align 4
  store i32 %v3_e2bc, i32* @r4, align 4
  %v0_e2c4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e2c4, i32* @r2, align 4
  %v2_e2cc = call i32 @function_11ba4(i32 %v3_e2bc, i32 3)
  %v1_e2d4 = or i32 %v2_e2cc, 2048
  store i32 %v1_e2d4, i32* @r2, align 4
  %v0_e2d8 = load i32, i32* @r4, align 4
  %v2_e2dc = call i32 @function_11ba4(i32 %v0_e2d8, i32 4)
  store i32 ptrtoint (i32* @global_var_1d210.106 to i32), i32* %r3.global-to-local, align 4
  %v0_e2e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_e2e4 = add i32 %v0_e2e4, 20
  %v2_e2e4 = inttoptr i32 %v1_e2e4 to i32*
  %v3_e2e4 = load i32, i32* %v2_e2e4, align 4
  store i32 %v3_e2e4, i32* @r4, align 4
  %v2_e2e8 = load i32, i32* @global_var_1d210.106, align 4
  %v1_e2ec = add i32 %v0_e2e4, 16
  %v2_e2ec = inttoptr i32 %v1_e2ec to i32*
  %v3_e2ec = load i32, i32* %v2_e2ec, align 4
  store i32 %v3_e2ec, i32* @lr, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_e2f4 = add i32 %v0_e2e4, 8
  %v3_e2f4 = inttoptr i32 %v2_e2f4 to i32*
  store i32 %v2_e2e8, i32* %v3_e2f4, align 4
  %v0_e2f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e2f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_e2f8 = add i32 %v1_e2f8, 12
  %v3_e2f8 = inttoptr i32 %v2_e2f8 to i32*
  store i32 %v0_e2f8, i32* %v3_e2f8, align 4
  %v0_e300 = load i32, i32* %r5.global-to-local, align 4
  %v1_e300 = add i32 %v0_e300, 4
  %v2_e300 = inttoptr i32 %v1_e300 to i32*
  %v3_e300 = load i32, i32* %v2_e300, align 4
  %v0_e304 = load i32, i32* %r3.global-to-local, align 4
  %v2_e304 = mul i32 %v0_e304, 2
  store i32 %v2_e304, i32* %r3.global-to-local, align 4
  store i32 %v2_e304, i32* %stack_var_-32, align 4
  %v3_e324 = bitcast i32* %stack_var_-32 to %sockaddr*
  %v4_e324 = call i32 @function_1230c(i32 %v3_e300, %sockaddr* %v3_e324, i32 16)
  br label %dec_label_pc_e328

dec_label_pc_e328:                                ; preds = %dec_label_pc_e260.dec_label_pc_e328_crit_edge, %dec_label_pc_e2b4
  %v14_e32c = phi i32 [ %v14_e32c.pre, %dec_label_pc_e260.dec_label_pc_e328_crit_edge ], [ %v4_e324, %dec_label_pc_e2b4 ]
  %v2_e32c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e32c, i32* @r4, align 4
  ret i32 %v14_e32c

; uselistorder directives
  uselistorder i32 %v2_e304, { 1, 0 }
  uselistorder i32 %v3_e298, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 5, 2, 1, 0, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 ()* @function_11488, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_e328, { 1, 0 }
}

define i32 @function_e334(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e334:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_e334 = load i32, i32* @r4, align 4
  %v6_e334 = load i32, i32* @r5, align 4
  %v9_e334 = load i32, i32* @r6, align 4
  %v12_e334 = load i32, i32* @r7, align 4
  %v15_e334 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1d1dc.108 to i32), i32* @r8, align 4
  %v2_e33c = load i32, i32* @global_var_1d1dc.108, align 4
  store i32 ptrtoint (i32* @global_var_1d208.110 to i32), i32* %sb.global-to-local, align 4
  %v3_e348 = mul i32 %v2_e33c, 16
  store i32 %v3_e348, i32* %r3.global-to-local, align 4
  %v3_e350 = urem i32 %arg3, 65536
  store i32 %v3_e350, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_e35c = load i32, i32* @global_var_1d208.110, align 4
  %v1_e360 = add i32 %v3_e348, 16
  store i32 %v1_e360, i32* %r1.global-to-local, align 4
  store i32 %v3_e350, i32* %stack_var_-44, align 4
  %v8_e368 = call i32 @function_12778(i32 %v2_e35c, i32 %v1_e360, i32 %v3_e350, i32 %v3_e348)
  store i32 %v8_e368, i32* %sl.global-to-local, align 4
  %v0_e370 = load i32, i32* @r5, align 4
  %v1_e374 = load i32, i32* %sb.global-to-local, align 4
  %v2_e374 = inttoptr i32 %v1_e374 to i32*
  store i32 %v8_e368, i32* %v2_e374, align 4
  %v2_e378 = load i32, i32* @global_var_1d1dc.108, align 4
  store i32 %v2_e378, i32* %fp.global-to-local, align 4
  %v1_e37c = inttoptr i32 %v0_e370 to i8*
  %v2_e37c = call i32 @function_113e8(i8* %v1_e37c)
  %sext = mul i32 %v2_e37c, 16777216
  %v1_e380 = sdiv i32 %sext, 16777216
  %v2_e380 = add nsw i32 %v1_e380, 1
  store i32 %v2_e380, i32* @r4, align 4
  store i32 %v1_e380, i32* @r7, align 4
  %v1_e38c = call i32 @function_124dc(i32 %v2_e380)
  %v0_e390 = load i32, i32* @r5, align 4
  store i32 %v0_e390, i32* %r1.global-to-local, align 4
  %v0_e394 = load i32, i32* @r4, align 4
  store i32 %v0_e394, i32* %r2.global-to-local, align 4
  store i32 %v1_e38c, i32* @r6, align 4
  %v3_e39c = call i32 @function_11464(i32 %v1_e38c, i32 %v0_e390, i32 %v0_e394)
  %v0_e3a0 = load i32, i32* @r7, align 4
  %tmp21 = icmp slt i32 %v0_e3a0, 1
  %extract.t6 = trunc i32 %v0_e3a0 to i8
  br i1 %tmp21, label %dec_label_pc_e3c4, label %dec_label_pc_e3a8

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e334
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e3ac

dec_label_pc_e3ac:                                ; preds = %dec_label_pc_e3ac, %dec_label_pc_e3a8
  %v2_e3b4 = phi i32 [ %v1_e3b8, %dec_label_pc_e3ac ], [ 0, %dec_label_pc_e3a8 ]
  %v1_e3ac = load i32, i32* @r6, align 4
  %v2_e3ac = add i32 %v1_e3ac, %v2_e3b4
  %v3_e3ac = inttoptr i32 %v2_e3ac to i8*
  %v4_e3ac = load i8, i8* %v3_e3ac, align 1
  %v6_e3ac = zext i8 %v4_e3ac to i32
  %v1_e3b0 = xor i32 %v6_e3ac, 98
  store i32 %v1_e3b0, i32* %r3.global-to-local, align 4
  %v1_e3b4 = trunc i32 %v1_e3b0 to i8
  store i8 %v1_e3b4, i8* %v3_e3ac, align 1
  %v0_e3b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e3b8 = add i32 %v0_e3b8, 1
  store i32 %v1_e3b8, i32* %r2.global-to-local, align 4
  %v0_e3bc = load i32, i32* @r7, align 4
  %v9_e3bc = icmp eq i32 %v0_e3bc, %v1_e3b8
  br i1 %v9_e3bc, label %dec_label_pc_e3c4.loopexit, label %dec_label_pc_e3ac

dec_label_pc_e3c4.loopexit:                       ; preds = %dec_label_pc_e3ac
  %extract.t = trunc i32 %v1_e3b8 to i8
  br label %dec_label_pc_e3c4

dec_label_pc_e3c4:                                ; preds = %dec_label_pc_e3c4.loopexit, %dec_label_pc_e334
  %v0_e3d4.off0 = phi i8 [ %extract.t, %dec_label_pc_e3c4.loopexit ], [ %extract.t6, %dec_label_pc_e334 ]
  %v2_e3c4 = load i32, i32* @global_var_1d1dc.108, align 4
  %v2_e3c8 = load i32, i32* @global_var_1d208.110, align 4
  store i32 %v2_e3c8, i32* %r2.global-to-local, align 4
  %v3_e3cc = mul i32 %v2_e3c4, 16
  %v2_e3d0 = add i32 %v2_e3c8, %v3_e3cc
  store i32 %v2_e3d0, i32* %r3.global-to-local, align 4
  %v3_e3d4 = add i32 %v2_e3d0, 12
  %v4_e3d4 = inttoptr i32 %v3_e3d4 to i8*
  store i8 %v0_e3d4.off0, i8* %v4_e3d4, align 1
  %v0_e3d8 = load i32, i32* @r6, align 4
  %v1_e3d8 = load i32, i32* %sl.global-to-local, align 4
  %v2_e3d8 = load i32, i32* %fp.global-to-local, align 4
  %v5_e3d8 = mul i32 %v2_e3d8, 16
  %v6_e3d8 = add i32 %v5_e3d8, %v1_e3d8
  %v7_e3d8 = inttoptr i32 %v6_e3d8 to i32*
  store i32 %v0_e3d8, i32* %v7_e3d8, align 4
  %v2_e3e0 = load i32, i32* @global_var_1d1dc.108, align 4
  store i32 %v2_e3e0, i32* @r7, align 4
  %v2_e3e4 = load i32, i32* @global_var_1d208.110, align 4
  store i32 %v2_e3e4, i32* %sl.global-to-local, align 4
  %v1_e3e8 = inttoptr i32 %arg2 to i8*
  %v2_e3e8 = call i32 @function_113e8(i8* %v1_e3e8)
  %sext1 = mul i32 %v2_e3e8, 16777216
  %v1_e3ec = sdiv i32 %sext1, 16777216
  %v2_e3ec = add nsw i32 %v1_e3ec, 1
  store i32 %v2_e3ec, i32* @r4, align 4
  store i32 %v1_e3ec, i32* @r5, align 4
  %v1_e3f8 = call i32 @function_124dc(i32 %v2_e3ec)
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_e400 = load i32, i32* @r4, align 4
  store i32 %v0_e400, i32* %r2.global-to-local, align 4
  store i32 %v1_e3f8, i32* %r6.global-to-local, align 4
  %v3_e408 = call i32 @function_11464(i32 %v1_e3f8, i32 %arg2, i32 %v0_e400)
  %v0_e40c = load i32, i32* @r5, align 4
  %tmp22 = icmp slt i32 %v0_e40c, 1
  %extract.t8 = trunc i32 %v0_e40c to i8
  br i1 %tmp22, label %dec_label_pc_e430, label %dec_label_pc_e414

dec_label_pc_e414:                                ; preds = %dec_label_pc_e3c4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e418, %dec_label_pc_e414
  %v2_e420 = phi i32 [ %v1_e424, %dec_label_pc_e418 ], [ 0, %dec_label_pc_e414 ]
  %v1_e418 = load i32, i32* %r6.global-to-local, align 4
  %v2_e418 = add i32 %v1_e418, %v2_e420
  %v3_e418 = inttoptr i32 %v2_e418 to i8*
  %v4_e418 = load i8, i8* %v3_e418, align 1
  %v6_e418 = zext i8 %v4_e418 to i32
  %v1_e41c = xor i32 %v6_e418, 98
  store i32 %v1_e41c, i32* %r3.global-to-local, align 4
  %v1_e420 = trunc i32 %v1_e41c to i8
  store i8 %v1_e420, i8* %v3_e418, align 1
  %v0_e424 = load i32, i32* %r2.global-to-local, align 4
  %v1_e424 = add i32 %v0_e424, 1
  store i32 %v1_e424, i32* %r2.global-to-local, align 4
  %v0_e428 = load i32, i32* @r5, align 4
  %v9_e428 = icmp eq i32 %v0_e428, %v1_e424
  br i1 %v9_e428, label %dec_label_pc_e430.loopexit, label %dec_label_pc_e418

dec_label_pc_e430.loopexit:                       ; preds = %dec_label_pc_e418
  %extract.t7 = trunc i32 %v1_e424 to i8
  br label %dec_label_pc_e430

dec_label_pc_e430:                                ; preds = %dec_label_pc_e430.loopexit, %dec_label_pc_e3c4
  %v0_e440.off0 = phi i8 [ %extract.t7, %dec_label_pc_e430.loopexit ], [ %extract.t8, %dec_label_pc_e3c4 ]
  %v2_e430 = load i32, i32* @global_var_1d1dc.108, align 4
  %v2_e434 = load i32, i32* @global_var_1d208.110, align 4
  %v3_e438 = mul i32 %v2_e430, 16
  %v2_e43c = or i32 %v3_e438, 13
  %v3_e440 = add i32 %v2_e43c, %v2_e434
  %v4_e440 = inttoptr i32 %v3_e440 to i8*
  store i8 %v0_e440.off0, i8* %v4_e440, align 1
  %v2_e448 = load i32, i32* @global_var_1d1dc.108, align 4
  store i32 %v2_e448, i32* %lr.global-to-local, align 4
  %v4_e44c = load i8, i8* @global_var_1d20d.113, align 1
  %v5_e44c = zext i8 %v4_e44c to i32
  %v3_e450 = load i8, i8* bitcast (i8** @global_var_1d20c.112 to i8*), align 4
  %v4_e450 = zext i8 %v3_e450 to i32
  %v2_e454 = load i32, i32* @global_var_1d208.110, align 4
  %v4_e458 = mul nuw nsw i32 %v5_e44c, 256
  %v5_e458 = or i32 %v4_e450, %v4_e458
  store i32 %v5_e458, i32* %r2.global-to-local, align 4
  %v3_e45c = mul i32 %v2_e448, 16
  %v2_e460 = add i32 %v2_e454, %v3_e45c
  store i32 %v2_e460, i32* %r1.global-to-local, align 4
  %v3_e468 = add i32 %v2_e460, 9
  %v4_e468 = inttoptr i32 %v3_e468 to i8*
  store i8 %v4_e44c, i8* %v4_e468, align 1
  %v0_e46c = load i32, i32* %r2.global-to-local, align 4
  %v1_e46c = trunc i32 %v0_e46c to i8
  %v2_e46c = load i32, i32* %r1.global-to-local, align 4
  %v3_e46c = add i32 %v2_e46c, 8
  %v4_e46c = inttoptr i32 %v3_e46c to i8*
  store i8 %v1_e46c, i8* %v4_e46c, align 1
  %v4_e470 = load i8, i8* @global_var_1d20d.113, align 1
  %v5_e470 = zext i8 %v4_e470 to i32
  %v3_e474 = load i8, i8* bitcast (i8** @global_var_1d20c.112 to i8*), align 4
  %v4_e474 = zext i8 %v3_e474 to i32
  %v4_e478 = mul nuw nsw i32 %v5_e470, 256
  %v5_e478 = or i32 %v4_e474, %v4_e478
  %v2_e47c = load i32, i32* %stack_var_-44, align 4
  %v2_e480 = add i32 %v5_e478, %v2_e47c
  store i32 %v2_e480, i32* %r3.global-to-local, align 4
  %v3_e4849 = udiv i32 %v2_e480, 256
  %v1_e488 = trunc i32 %v3_e4849 to i8
  %v2_e488 = load i32, i32* %r1.global-to-local, align 4
  %v3_e488 = add i32 %v2_e488, 11
  %v4_e488 = inttoptr i32 %v3_e488 to i8*
  store i8 %v1_e488, i8* %v4_e488, align 1
  %v0_e48c = load i32, i32* %r3.global-to-local, align 4
  %v1_e48c = trunc i32 %v0_e48c to i8
  %v2_e48c = load i32, i32* %r1.global-to-local, align 4
  %v3_e48c = add i32 %v2_e48c, 10
  %v4_e48c = inttoptr i32 %v3_e48c to i8*
  store i8 %v1_e48c, i8* %v4_e48c, align 1
  %v4_e490 = load i8, i8* @global_var_1d20d.113, align 1
  %v5_e490 = zext i8 %v4_e490 to i32
  %v3_e494 = load i8, i8* bitcast (i8** @global_var_1d20c.112 to i8*), align 4
  %v4_e494 = zext i8 %v3_e494 to i32
  %v4_e498 = mul nuw nsw i32 %v5_e490, 256
  %v5_e498 = or i32 %v4_e494, %v4_e498
  %v2_e49c = load i32, i32* %stack_var_-44, align 4
  %v2_e4a0 = add i32 %v5_e498, %v2_e49c
  store i32 %v2_e4a0, i32* %r2.global-to-local, align 4
  %v0_e4a4 = load i32, i32* @r7, align 4
  %v3_e4a4 = mul i32 %v0_e4a4, 16
  %v1_e4a8 = load i32, i32* %sl.global-to-local, align 4
  %v2_e4a8 = add i32 %v1_e4a8, %v3_e4a4
  store i32 %v2_e4a8, i32* %r3.global-to-local, align 4
  %v0_e4ac = load i32, i32* %lr.global-to-local, align 4
  %v1_e4ac = add i32 %v0_e4ac, 1
  store i32 %v1_e4ac, i32* @lr, align 4
  %v3_e4b0 = sdiv i32 %v2_e4a0, 256
  store i32 %v3_e4b0, i32* %r1.global-to-local, align 4
  %v0_e4b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_e4b4 = add i32 %v2_e4a8, 4
  %v3_e4b4 = inttoptr i32 %v2_e4b4 to i32*
  store i32 %v0_e4b4, i32* %v3_e4b4, align 4
  %v0_e4b8 = load i32, i32* @lr, align 4
  %v1_e4b8 = load i32, i32* @r8, align 4
  %v2_e4b8 = inttoptr i32 %v1_e4b8 to i32*
  store i32 %v0_e4b8, i32* %v2_e4b8, align 4
  %v0_e4bc = load i32, i32* %r1.global-to-local, align 4
  %v1_e4bc = trunc i32 %v0_e4bc to i8
  store i8 %v1_e4bc, i8* @global_var_1d20d.113, align 1
  %v0_e4c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e4c0 = trunc i32 %v0_e4c0 to i8
  store i8 %v1_e4c0, i8* bitcast (i8** @global_var_1d20c.112 to i8*), align 4
  store i32 %v3_e334, i32* @r4, align 4
  store i32 %v6_e334, i32* @r5, align 4
  store i32 %v9_e334, i32* @r6, align 4
  store i32 %v12_e334, i32* @r7, align 4
  store i32 %v15_e334, i32* @r8, align 4
  ret i32 ptrtoint (i8** @global_var_1d20c.112 to i32)

; uselistorder directives
  uselistorder i32 %v1_e424, { 0, 2, 3, 1 }
  uselistorder i32 %v1_e3f8, { 1, 0 }
  uselistorder i32 %v1_e3b8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_e38c, { 1, 0 }
  uselistorder i32 %v3_e350, { 1, 2, 0 }
  uselistorder i32 %v3_e348, { 1, 2, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 1, 2, 3, 0 }
  uselistorder i32 (i8*)* @function_113e8, { 26, 27, 0, 1, 2, 3, 4, 29, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12778, { 0, 3, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_e4d8() local_unnamed_addr {
dec_label_pc_e4d8:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp233 = call i32 @__decompiler_undefined_function_0()
  %tmp240 = call i32 @__decompiler_undefined_function_0()
  %tmp241 = call i8* @__decompiler_undefined_function_1()
  %tmp242 = call i32 @__decompiler_undefined_function_0()
  %tmp243 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-41 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-1842 = alloca i32, align 4
  %stack_var_-1862 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e4d8 = load i32, i32* @r4, align 4
  store i32 %v3_e4d8, i32* %stack_var_-36, align 4
  %v6_e4d8 = load i32, i32* @r5, align 4
  %v9_e4d8 = load i32, i32* @r6, align 4
  %v12_e4d8 = load i32, i32* @r7, align 4
  %v15_e4d8 = load i32, i32* @r8, align 4
  %v18_e4d8 = load i32, i32* @sb, align 4
  %v21_e4d8 = load i32, i32* @sl, align 4
  %v24_e4d8 = load i32, i32* @fp, align 4
  %v0_e4e0 = call i32 @function_11c94()
  store i32 %v0_e4e0, i32* %r0.global-to-local, align 4
  %v7_e4e4 = icmp eq i32 %v0_e4e0, -1
  %. = zext i1 %v7_e4e4 to i32
  %tmp274 = icmp slt i32 %v0_e4e0, 1
  %storemerge230 = select i1 %tmp274, i32 %., i32 1
  store i32 %storemerge230, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1d278.115 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e500 = icmp eq i32 %storemerge230, 0
  store i1 %v2_e500, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_e4e0, i32* @global_var_1d278.115, align 4
  br i1 %v2_e500, label %dec_label_pc_e7f4, label %dec_label_pc_e50c

dec_label_pc_e50c:                                ; preds = %dec_label_pc_e4d8
  store i32 %v3_e4d8, i32* @r4, align 4
  store i32 %v6_e4d8, i32* %r5.global-to-local, align 4
  store i32 %v9_e4d8, i32* @r6, align 4
  store i32 %v12_e4d8, i32* @r7, align 4
  store i32 %v15_e4d8, i32* @r8, align 4
  store i32 %v18_e4d8, i32* @sb, align 4
  store i32 %v21_e4d8, i32* @sl, align 4
  store i32 %v24_e4d8, i32* @fp, align 4
  ret i32 %v0_e4e0

dec_label_pc_e7f4:                                ; preds = %dec_label_pc_e4d8
  %v0_e7f4 = call i32 @function_116a0()
  store i32 %v0_e7f4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d258.33 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_e7f4, i32* @global_var_1d258.33, align 4
  %v1_e800 = call i32 @function_dbe0(i32 %v0_e7f4)
  %v0_e804 = load i32, i32* @r4, align 4
  store i32 %v0_e804, i32* %r0.global-to-local, align 4
  %v1_e808 = inttoptr i32 %v0_e804 to i32*
  %v2_e808 = call i32 @function_11eb8(i32* %v1_e808)
  store i32 ptrtoint (i32* @global_var_1d210.106 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_e808, i32* @global_var_1d210.106, align 4
  store i32 1024, i32* %r0.global-to-local, align 4
  %v2_e81c = call i32 @function_12630(i32 1024, i32 288)
  %v0_e824 = load i32, i32* @r4, align 4
  store i32 %v0_e824, i32* %r3.global-to-local, align 4
  store i32 %v2_e81c, i32* %lr.global-to-local, align 4
  store i32 %v2_e81c, i32* @global_var_1d270.119, align 4
  store i32 %v0_e824, i32* %stack_var_-52, align 4
  store i32 %v0_e824, i32* %r5.global-to-local, align 4
  store i32 1023, i32* %r0.global-to-local, align 4
  %v1_e840 = add i32 %v0_e824, -1
  store i32 %v1_e840, i32* @r4, align 4
  store i32 %v0_e824, i32* %ip.global-to-local, align 4
  %v1_e848 = add i32 %v2_e81c, 4
  store i32 %v1_e848, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e84c

dec_label_pc_e84c:                                ; preds = %dec_label_pc_e84c.dec_label_pc_e84c_crit_edge, %dec_label_pc_e7f4
  %v0_e864 = phi i32 [ %v0_e864.pre, %dec_label_pc_e84c.dec_label_pc_e84c_crit_edge ], [ %v0_e824, %dec_label_pc_e7f4 ]
  %v0_e854 = phi i32 [ %v0_e86c, %dec_label_pc_e84c.dec_label_pc_e84c_crit_edge ], [ %v0_e824, %dec_label_pc_e7f4 ]
  %v1_e860 = phi i32 [ %v1_e860.pre, %dec_label_pc_e84c.dec_label_pc_e84c_crit_edge ], [ 1023, %dec_label_pc_e7f4 ]
  %v1_e85c = phi i32 [ %v1_e85c.pre, %dec_label_pc_e84c.dec_label_pc_e84c_crit_edge ], [ %v2_e81c, %dec_label_pc_e7f4 ]
  %v3_e84c = mul i32 %v0_e854, 256
  store i32 %v3_e84c, i32* %r2.global-to-local, align 4
  %v1_e854 = add i32 %v0_e854, 1
  store i32 %v1_e854, i32* %ip.global-to-local, align 4
  %v2_e858 = mul i32 %v0_e854, 288
  %v2_e85c = add i32 %v1_e85c, 12
  %v2_e864 = add i32 %v2_e85c, %v2_e858
  %v3_e864 = inttoptr i32 %v2_e864 to i32*
  store i32 %v0_e864, i32* %v3_e864, align 4
  %v0_e868 = load i32, i32* @r4, align 4
  %v1_e868 = load i32, i32* %r1.global-to-local, align 4
  %v2_e868 = inttoptr i32 %v1_e868 to i32*
  store i32 %v0_e868, i32* %v2_e868, align 4
  %v3_e868 = load i32, i32* %r1.global-to-local, align 4
  %v4_e868 = add i32 %v3_e868, 288
  store i32 %v4_e868, i32* %r1.global-to-local, align 4
  %v0_e86c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_e86c, i32* %r3.global-to-local, align 4
  %v7_e870 = icmp sgt i32 %v1_e854, %v1_e860
  br i1 %v7_e870, label %dec_label_pc_e874, label %dec_label_pc_e84c.dec_label_pc_e84c_crit_edge

dec_label_pc_e84c.dec_label_pc_e84c_crit_edge:    ; preds = %dec_label_pc_e84c
  %v1_e85c.pre = load i32, i32* %lr.global-to-local, align 4
  %v1_e860.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_e864.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e84c

dec_label_pc_e874:                                ; preds = %dec_label_pc_e84c
  %v3_e860 = icmp uge i32 %v1_e854, %v1_e860
  %v9_e860 = icmp eq i32 %v1_e854, %v1_e860
  store i1 %v3_e860, i1* %cpsr_c.global-to-local, align 1
  store i1 %v9_e860, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 %v0_e86c, i32* %stack_var_-52, align 4
  %v3_e884 = call i32 @function_124b0(i32 2, i32 3, i32 6)
  store i32 %v3_e884, i32* %r0.global-to-local, align 4
  %v2_e88c = icmp eq i32 %v3_e884, -1
  store i1 %v2_e88c, i1* %cpsr_c.global-to-local, align 1
  %v7_e88c = icmp eq i32 %v3_e884, -1
  store i1 %v7_e88c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_e884, i32* @r4, align 4
  store i32 %v3_e884, i32* @global_var_1d274.121, align 4
  br i1 %v7_e88c, label %dec_label_pc_ff28, label %dec_label_pc_e89c

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e874
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_e8a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e8a0, i32* @r2, align 4
  %v2_e8a4 = call i32 @function_11ba4(i32 %v3_e884, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_e8ac = or i32 %v2_e8a4, 2048
  store i32 %v1_e8ac, i32* @r2, align 4
  %v0_e8b0 = load i32, i32* @r4, align 4
  store i32 %v0_e8b0, i32* %r0.global-to-local, align 4
  %v2_e8b4 = call i32 @function_11ba4(i32 %v0_e8b0, i32 4)
  store i32 1, i32* %ip.global-to-local, align 4
  %v2_e8c0 = load i32, i32* @global_var_1d274.121, align 4
  store i32 %v2_e8c0, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_e8c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e8c8, i32* %r1.global-to-local, align 4
  %v2_e8cc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_e8cc, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v6_e8dc = call i32 @function_12480(i32 %v2_e8c0, i32 %v0_e8c8, i32 3, i32* nonnull %stack_var_-52, i32 4)
  store i32 %v6_e8dc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e8e0 = icmp eq i32 %v6_e8dc, 0
  store i1 %v2_e8e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e8e0, label %dec_label_pc_e8e8, label %dec_label_pc_ff1c

dec_label_pc_e8e8:                                ; preds = %dec_label_pc_e89c, %dec_label_pc_e8e8
  %v0_e8e8 = call i32 @function_db88()
  %v3_e8ec = mul i32 %v0_e8e8, 65536
  store i32 %v3_e8ec, i32* %r0.global-to-local, align 4
  %v1_e8f8 = mul i32 %v0_e8e8, 256
  %v3_e8fc = and i32 %v1_e8f8, 65280
  %tmp277 = udiv i32 %v0_e8e8, 256
  %v4_e900 = urem i32 %tmp277, 256
  %v5_e900 = or i32 %v4_e900, %v3_e8fc
  store i32 %v5_e900, i32* %r3.global-to-local, align 4
  %v2_e904 = icmp ugt i32 %v5_e900, 1023
  store i1 %v2_e904, i1* %cpsr_c.global-to-local, align 1
  %v7_e904 = icmp eq i32 %v5_e900, 1024
  store i1 %v7_e904, i1* %cpsr_z.global-to-local, align 1
  %v3_e908 = icmp ult i32 %v5_e900, 1022
  br i1 %v3_e908, label %dec_label_pc_e8e8, label %dec_label_pc_e90c

dec_label_pc_e90c:                                ; preds = %dec_label_pc_e8e8
  %v5_e8f4.le = trunc i32 %v0_e8e8 to i8
  store i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32* %ip.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_1d1e0.123 to i8*), align 4
  store i8 40, i8* bitcast (i32* @global_var_1d1e3.124 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1d1e2.125 to i8*), align 4
  %v0_e940 = call i32 @function_db88()
  %v1_e940 = trunc i32 %v0_e940 to i8
  store i32 %v0_e940, i32* %r0.global-to-local, align 4
  %v4_e948 = sext i8 %v5_e8f4.le to i32
  %v3_e94c = load i8, i8* @global_var_1d200.128, align 1
  store i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32* %lr.global-to-local, align 4
  %v4_e954229 = udiv i32 %v0_e940, 256
  %v1_e958 = trunc i32 %v4_e954229 to i8
  store i8 %v1_e958, i8* bitcast (i32* @global_var_1d1e5.129 to i8*), align 4
  %v1_e95c = and i32 %v4_e948, 128
  %v2_e95c = icmp ne i32 %v1_e95c, 0
  store i1 %v2_e95c, i1* %cpsr_c.global-to-local, align 1
  %v3_e95c = sdiv i32 %v4_e948, 256
  store i32 %v3_e95c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), i32* %r1.global-to-local, align 4
  %v1_e968 = urem i8 %v3_e94c, 16
  store i32 6, i32* @r5, align 4
  store i8 64, i8* bitcast (i32* @global_var_1d1e8.130 to i8*), align 4
  %v1_e974 = or i8 %v1_e968, 80
  store i32 23, i32* %r3.global-to-local, align 4
  %v1_e97c = trunc i32 %v3_e95c to i8
  store i8 %v1_e97c, i8* bitcast (i32* @global_var_1d1f5.131 to i8*), align 4
  store i8 %v1_e974, i8* @global_var_1d200.128, align 1
  %v0_e984 = load i32, i32* %r4.global-to-local, align 4
  %v1_e984 = trunc i32 %v0_e984 to i8
  store i8 %v1_e984, i8* bitcast (i32* @global_var_1d1f6.132 to i8*), align 4
  store i8 23, i8* bitcast (i32* @global_var_1d1f7.133 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_1d1e9.134 to i8*), align 4
  store i32 %v4_e948, i32* %r2.global-to-local, align 4
  store i8 %v1_e940, i8* bitcast (i32* @global_var_1d1e4.135 to i8*), align 4
  store i8 %v5_e8f4.le, i8* bitcast (i32* @global_var_1d1f4.127 to i8*), align 4
  %v0_e99c = call i32 @function_db88()
  %v1_e99c = trunc i32 %v0_e99c to i8
  %v3_e9a4 = load i8, i8* @global_var_1d201.136, align 1
  %v4_e9a4 = zext i8 %v3_e9a4 to i32
  store i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), i32* @lr, align 4
  %v2_e9ac = and i32 %v0_e99c, 128
  %v3_e9ac = icmp ne i32 %v2_e9ac, 0
  store i1 %v3_e9ac, i1* %cpsr_c.global-to-local, align 1
  %v4_e9ac = sdiv i32 %v0_e99c, 256
  store i32 %v4_e9ac, i32* %ip.global-to-local, align 4
  %v1_e9b0 = or i32 %v4_e9a4, 2
  store i32 %v1_e9b0, i32* %r3.global-to-local, align 4
  store i32 %v0_e99c, i32* @r4, align 4
  %v1_e9b8 = trunc i32 %v4_e9ac to i8
  store i8 %v1_e9b8, i8* bitcast (i32* @global_var_1d203.137 to i8*), align 4
  %v1_e9bc = trunc i32 %v1_e9b0 to i8
  store i8 %v1_e9bc, i8* @global_var_1d201.136, align 1
  store i8 %v1_e99c, i8* bitcast (i32* @global_var_1d202.138 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_e9d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14200.144 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_e9e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14200.144 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_e9f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 5)
  store i32 ptrtoint ([4 x i8]* @global_var_1420c.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_ea00 = call i32 @function_e334(i32 ptrtoint ([4 x i8]* @global_var_1420c.148 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_14210.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  %v0_ea0c = load i32, i32* @r5, align 4
  store i32 %v0_ea0c, i32* %r2.global-to-local, align 4
  %v3_ea10 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14210.150 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 %v0_ea0c)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14218.152 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ea20 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14218.152 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1421c.154 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_ea30 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_1421c.154 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14224.156 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ea40 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14224.156 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ea50 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r1.global-to-local, align 4
  %v3_ea60 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_1422c.158 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_ea70 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1422c.158 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14234.160 to i32), i32* %r1.global-to-local, align 4
  %v0_ea7c = load i32, i32* @r5, align 4
  store i32 %v0_ea7c, i32* %r2.global-to-local, align 4
  %v4_ea80 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_14234.160 to i32), i32 %v0_ea7c)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1423c.162 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_ea90 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_1423c.162 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_eaa0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1424c.166 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_eab0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([6 x i8]* @global_var_1424c.166 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14934.168 to i32), i32* %r1.global-to-local, align 4
  %v0_eabc = load i32, i32* @r5, align 4
  store i32 %v0_eabc, i32* %r2.global-to-local, align 4
  %v3_eac0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14934.168 to i32), i32 %v0_eabc)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ead0 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_14264.172 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_eae0 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint ([8 x i8]* @global_var_14264.172 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r1.global-to-local, align 4
  %v5_eaf0 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_eb00 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_147ac.174 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_eb10 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint ([4 x i8]* @global_var_147ac.174 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_eb20 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1426c.178 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_eb30 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint ([6 x i8]* @global_var_1426c.178 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_eb40 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_eb50 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1427c.182 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_eb60 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint (i32* @global_var_1427c.182 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_eb70 = call i32 @function_e334(i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eb80 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146a8.186 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eb90 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_146a8.186 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14294.188 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_eba0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14294.188 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1429c.190 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ebb0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([3 x i8]* @global_var_1429c.190 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_142a4.192 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ebc0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([4 x i8]* @global_var_142a4.192 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_142ac.194 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ebd0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([5 x i8]* @global_var_142ac.194 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_14290.196 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ebe0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([6 x i8]* @global_var_14290.196 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14298.198 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ebf0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_14298.198 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_142a0.200 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ec00 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([8 x i8]* @global_var_142a0.200 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_142a8.202 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ec10 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_142a8.202 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_142b4.204 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ec20 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([8 x i8]* @global_var_142b4.204 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_142bc.206 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ec30 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_142bc.206 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_142c8.208 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_ec40 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_142c8.208 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ec50 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ec60 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1465c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ec70 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1465c.210 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_142d0.212 to i32), i32* %r1.global-to-local, align 4
  %v0_ec7c = load i32, i32* @r5, align 4
  store i32 %v0_ec7c, i32* %r2.global-to-local, align 4
  %v4_ec80 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([7 x i8]* @global_var_142d0.212 to i32), i32 %v0_ec7c)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_142d8.214 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ec90 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([8 x i8]* @global_var_142d8.214 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_142e0.216 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_eca0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([9 x i8]* @global_var_142e0.216 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_142ec.218 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ecb0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([6 x i8]* @global_var_142ec.218 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_142f4.220 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ecc0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([6 x i8]* @global_var_142f4.220 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_142fc.222 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ecd0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([8 x i8]* @global_var_142fc.222 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r1.global-to-local, align 4
  %v3_ece0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1426c.178 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ecf0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([6 x i8]* @global_var_1426c.178 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ed00 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r1.global-to-local, align 4
  %v3_ed10 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32* %r1.global-to-local, align 4
  %v0_ed1c = load i32, i32* @r5, align 4
  store i32 %v0_ed1c, i32* %r2.global-to-local, align 4
  %v4_ed20 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32 %v0_ed1c)
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ed30 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1427c.182 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ed40 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 ptrtoint (i32* @global_var_1427c.182 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ed50 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14934.168 to i32), i32* %r1.global-to-local, align 4
  %v0_ed5c = load i32, i32* @r5, align 4
  store i32 %v0_ed5c, i32* %r2.global-to-local, align 4
  %v3_ed60 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 ptrtoint (i32* @global_var_14934.168 to i32), i32 %v0_ed5c)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1427c.182 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_ed70 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_1427c.182 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14304.224 to i32), i32* %r1.global-to-local, align 4
  %v0_ed7c = load i32, i32* @r5, align 4
  store i32 %v0_ed7c, i32* %r2.global-to-local, align 4
  %v3_ed80 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14304.224 to i32), i32 %v0_ed7c)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1430c.226 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_ed90 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1430c.226 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_142e4.228 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_eda0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([5 x i8]* @global_var_142e4.228 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_142e4.228 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_edb0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([5 x i8]* @global_var_142e4.228 to i32), i32 2)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14318.230 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_edc0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14318.230 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_edd0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ede0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14324.232 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_edf0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14324.232 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1432c.234 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ee00 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_1432c.234 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14338.236 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ee10 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14338.236 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14340.238 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14340.238 to i32), i32* %r1.global-to-local, align 4
  %v3_ee20 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14340.238 to i32), i32 ptrtoint (i32* @global_var_14340.238 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14340.238 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_ee30 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14340.238 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14348.240 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14348.240 to i32), i32* %r1.global-to-local, align 4
  %v3_ee40 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14348.240 to i32), i32 ptrtoint (i32* @global_var_14348.240 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14354.242 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ee50 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14354.242 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ee60 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32* %r1.global-to-local, align 4
  %v3_ee70 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1426c.178 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ee80 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32 ptrtoint ([6 x i8]* @global_var_1426c.178 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14364.246 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14364.246 to i32), i32* %r1.global-to-local, align 4
  %v3_ee90 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14364.246 to i32), i32 ptrtoint (i32* @global_var_14364.246 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1436c.248 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_eea0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1436c.248 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14374.250 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1437c.252 to i32), i32* %r1.global-to-local, align 4
  %v0_eeac = load i32, i32* @r5, align 4
  store i32 %v0_eeac, i32* %r2.global-to-local, align 4
  %v3_eeb0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14374.250 to i32), i32 ptrtoint (i32* @global_var_1437c.252 to i32), i32 %v0_eeac)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14384.254 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_eec0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14384.254 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14390.256 to i32), i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14390.256 to i32), i32* %r1.global-to-local, align 4
  %v3_eed0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14390.256 to i32), i32 ptrtoint (i32* @global_var_14390.256 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_14390.256 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_eee0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14390.256 to i32), i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_14390.256 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143a0.258 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_eef0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14390.256 to i32), i32 ptrtoint (i32* @global_var_143a0.258 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_1493c.260 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1493c.260 to i32), i32* %r1.global-to-local, align 4
  %v3_ef00 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1493c.260 to i32), i32 ptrtoint (i32* @global_var_1493c.260 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143ac.262 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ef10 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143ac.262 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1493c.260 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ef20 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_1493c.260 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143b8.264 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_ef30 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143b8.264 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143c0.266 to i32), i32* %r1.global-to-local, align 4
  %v0_ef3c = load i32, i32* @r5, align 4
  store i32 %v0_ef3c, i32* %r2.global-to-local, align 4
  %v3_ef40 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143c0.266 to i32), i32 %v0_ef3c)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14944.268 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ef50 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14944.268 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143c8.270 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_ef60 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143c8.270 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143a0.258 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ef70 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143a0.258 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_143d0.272 to i32), i32* %r1.global-to-local, align 4
  %v0_ef7c = load i32, i32* @r5, align 4
  store i32 %v0_ef7c, i32* %r2.global-to-local, align 4
  %v4_ef80 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_143d0.272 to i32), i32 %v0_ef7c)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143d8.274 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_ef90 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143d8.274 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143e4.276 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_efa0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143e4.276 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143ec.278 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_efb0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143ec.278 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143f4.280 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_efc0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143f4.280 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143fc.282 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_efd0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_143fc.282 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14408.284 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_efe0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14408.284 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_14414.286 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_eff0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_14414.286 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14420.288 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f000 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14420.288 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14428.290 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f010 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14428.290 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14430.292 to i32), i32* %r1.global-to-local, align 4
  %v0_f01c = load i32, i32* @r5, align 4
  store i32 %v0_f01c, i32* %r2.global-to-local, align 4
  %v3_f020 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14430.292 to i32), i32 %v0_f01c)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14438.294 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f030 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14438.294 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14440.296 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f040 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14440.296 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1444c.298 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_f050 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_1444c.298 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14458.300 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f060 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14458.300 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14460.302 to i32), i32* %r1.global-to-local, align 4
  %v0_f06c = load i32, i32* @r5, align 4
  store i32 %v0_f06c, i32* %r2.global-to-local, align 4
  %v3_f070 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14460.302 to i32), i32 %v0_f06c)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14468.304 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_f080 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14468.304 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_14470.306 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f090 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([10 x i8]* @global_var_14470.306 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14304.224 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_f0a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14304.224 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14274.180 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_f0b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14274.180 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1447c.308 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f0c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_1447c.308 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_14488.310 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f0d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([6 x i8]* @global_var_14488.310 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f0e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1426c.178 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_f0f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([6 x i8]* @global_var_1426c.178 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1424c.166 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_f100 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([6 x i8]* @global_var_1424c.166 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_f110 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14490.312 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_f120 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14490.312 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144a0.314 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f130 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_144a0.314 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1427c.182 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f140 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1427c.182 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_144ac.316 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f150 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([5 x i8]* @global_var_144ac.316 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144b4.318 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f160 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_144b4.318 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144c0.320 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f170 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_144c0.320 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1494c.322 to i32), i32* %r1.global-to-local, align 4
  %v0_f17c = load i32, i32* @r5, align 4
  store i32 %v0_f17c, i32* %r2.global-to-local, align 4
  %v3_f180 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1494c.322 to i32), i32 %v0_f17c)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144c8.324 to i32), i32* %r1.global-to-local, align 4
  %v0_f18c = load i32, i32* @r5, align 4
  store i32 %v0_f18c, i32* %r2.global-to-local, align 4
  %v3_f190 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_144c8.324 to i32), i32 %v0_f18c)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144d0.326 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f1a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_144d0.326 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146a8.186 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f1b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_146a8.186 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144d8.328 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f1c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_144d8.328 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_144e0.330 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f1d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([5 x i8]* @global_var_144e0.330 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_147ac.174 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f1e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([4 x i8]* @global_var_147ac.174 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_142c0.332 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f1f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([5 x i8]* @global_var_142c0.332 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_144e8.334 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f200 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([6 x i8]* @global_var_144e8.334 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_144f0.336 to i32), i32* %r1.global-to-local, align 4
  %v0_f20c = load i32, i32* @r5, align 4
  store i32 %v0_f20c, i32* %r2.global-to-local, align 4
  %v4_f210 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([7 x i8]* @global_var_144f0.336 to i32), i32 %v0_f20c)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144f8.338 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f220 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_144f8.338 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14954.340 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_f230 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14954.340 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_14504.342 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f240 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([9 x i8]* @global_var_14504.342 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14510.344 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f250 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14510.344 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1451c.346 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f260 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([4 x i8]* @global_var_1451c.346 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14520.348 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f270 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14520.348 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1452c.350 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_f280 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1452c.350 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14538.352 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f290 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14538.352 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14540.354 to i32), i32* %r1.global-to-local, align 4
  %v0_f29c = load i32, i32* @r5, align 4
  store i32 %v0_f29c, i32* %r2.global-to-local, align 4
  %v3_f2a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14540.354 to i32), i32 %v0_f29c)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14548.356 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f2b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14548.356 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1454c.358 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f2c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1454c.358 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14964.360 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f2d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14964.360 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14970.362 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f2e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14970.362 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143a0.258 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f2f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_143a0.258 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14558.364 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_f300 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14558.364 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14564.366 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f310 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14564.366 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14570.368 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f320 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14570.368 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1457c.370 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f330 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1457c.370 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14584.372 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_f340 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14584.372 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14590.374 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f350 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14590.374 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1459c.376 to i32), i32* %r1.global-to-local, align 4
  %v0_f35c = load i32, i32* @r5, align 4
  store i32 %v0_f35c, i32* %r2.global-to-local, align 4
  %v3_f360 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1459c.376 to i32), i32 %v0_f35c)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145a4.378 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f370 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145a4.378 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145b0.380 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f380 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145b0.380 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145bc.382 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f390 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145bc.382 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145c8.384 to i32), i32* %r1.global-to-local, align 4
  %v0_f39c = load i32, i32* @r5, align 4
  store i32 %v0_f39c, i32* %r2.global-to-local, align 4
  %v3_f3a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145c8.384 to i32), i32 %v0_f39c)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145d0.386 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f3b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145d0.386 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145dc.388 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f3c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145dc.388 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145e0.390 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f3d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145e0.390 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145ec.392 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f3e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145ec.392 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145f8.394 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f3f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145f8.394 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145fc.396 to i32), i32* %r1.global-to-local, align 4
  %v0_f3fc = load i32, i32* @r5, align 4
  store i32 %v0_f3fc, i32* %r2.global-to-local, align 4
  %v3_f400 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_145fc.396 to i32), i32 %v0_f3fc)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14604.398 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f410 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14604.398 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f420 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1460c.400 to i32), i32* %r1.global-to-local, align 4
  %v0_f42c = load i32, i32* @r5, align 4
  store i32 %v0_f42c, i32* %r2.global-to-local, align 4
  %v3_f430 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1460c.400 to i32), i32 %v0_f42c)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14614.402 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f440 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14614.402 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f450 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32* %r1.global-to-local, align 4
  %v3_f460 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f470 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14624.406 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f480 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32 ptrtoint (i32* @global_var_14624.406 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14318.230 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f490 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1461c.404 to i32), i32 ptrtoint (i32* @global_var_14318.230 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14630.408 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f4a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14630.408 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1463c.410 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f4b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1463c.410 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14648.412 to i32), i32* %r1.global-to-local, align 4
  %v0_f4bc = load i32, i32* @r5, align 4
  store i32 %v0_f4bc, i32* %r2.global-to-local, align 4
  %v3_f4c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14648.412 to i32), i32 %v0_f4bc)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14650.414 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f4d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14650.414 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14658.416 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f4e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14658.416 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14660.418 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f4f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14660.418 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1466c.420 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f500 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1466c.420 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14674.422 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f510 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14674.422 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1467c.424 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f520 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_1467c.424 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14688.426 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f530 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14688.426 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14694.428 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f540 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14694.428 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146a0.430 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f550 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_146a0.430 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146ac.432 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f560 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_146ac.432 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146b8.434 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f570 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_146b8.434 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146c4.436 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f580 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_146c4.436 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_146c8.438 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146c8.438 to i32), i32* %r1.global-to-local, align 4
  %v3_f590 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_146c8.438 to i32), i32 ptrtoint (i32* @global_var_146c8.438 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_f5a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_146e0.442 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_f5b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32 ptrtoint ([7 x i8]* @global_var_146e0.442 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143a0.258 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_f5c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32 ptrtoint (i32* @global_var_143a0.258 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146e8.444 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_f5d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32 ptrtoint (i32* @global_var_146e8.444 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_f5e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14318.230 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_f5f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32 ptrtoint (i32* @global_var_14318.230 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146f0.446 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_f600 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_146d0.440 to i32), i32 ptrtoint (i32* @global_var_146f0.446 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14390.256 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v3_f610 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_14390.256 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_146f8.448 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_f620 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_146f8.448 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_1497c.450 to i32), i32* %r0.global-to-local, align 4
  %v0_f628 = load i32, i32* @r5, align 4
  store i32 %v0_f628, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1497c.450 to i32), i32* %r1.global-to-local, align 4
  %v3_f630 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1497c.450 to i32), i32 ptrtoint (i32* @global_var_1497c.450 to i32), i32 %v0_f628)
  store i32 ptrtoint (i32* @global_var_14704.452 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14704.452 to i32), i32* %r1.global-to-local, align 4
  %v3_f640 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14704.452 to i32), i32 ptrtoint (i32* @global_var_14704.452 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_14708.454 to i32), i32* %r0.global-to-local, align 4
  %v0_f648 = load i32, i32* @r5, align 4
  store i32 %v0_f648, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14708.454 to i32), i32* %r1.global-to-local, align 4
  %v3_f650 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14708.454 to i32), i32 ptrtoint (i32* @global_var_14708.454 to i32), i32 %v0_f648)
  store i32 ptrtoint (i32* @global_var_14438.294 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14438.294 to i32), i32* %r1.global-to-local, align 4
  %v3_f660 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14438.294 to i32), i32 ptrtoint (i32* @global_var_14438.294 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14710.456 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14710.456 to i32), i32* %r1.global-to-local, align 4
  %v3_f670 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14710.456 to i32), i32 ptrtoint (i32* @global_var_14710.456 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14718.458 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14718.458 to i32), i32* %r1.global-to-local, align 4
  %v3_f680 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14718.458 to i32), i32 ptrtoint (i32* @global_var_14718.458 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14720.460 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14720.460 to i32), i32* %r1.global-to-local, align 4
  %v3_f690 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14720.460 to i32), i32 ptrtoint (i32* @global_var_14720.460 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14728.462 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14728.462 to i32), i32* %r1.global-to-local, align 4
  %v3_f6a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14728.462 to i32), i32 ptrtoint (i32* @global_var_14728.462 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14730.464 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14738.466 to i32), i32* %r1.global-to-local, align 4
  %v0_f6ac = load i32, i32* @r5, align 4
  store i32 %v0_f6ac, i32* %r2.global-to-local, align 4
  %v3_f6b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14730.464 to i32), i32 ptrtoint (i32* @global_var_14738.466 to i32), i32 %v0_f6ac)
  store i32 ptrtoint (i32* @global_var_14740.468 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14744.470 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_f6c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14740.468 to i32), i32 ptrtoint (i32* @global_var_14744.470 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_147ac.174 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_f6d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([4 x i8]* @global_var_147ac.174 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1474c.472 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f6e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([8 x i8]* @global_var_1474c.472 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_142e4.228 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_142e4.228 to i32), i32* %r1.global-to-local, align 4
  %v5_f6f0 = call i32 @function_e334(i32 ptrtoint ([5 x i8]* @global_var_142e4.228 to i32), i32 ptrtoint ([5 x i8]* @global_var_142e4.228 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32* %r1.global-to-local, align 4
  %v5_f700 = call i32 @function_e334(i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14754.474 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_f710 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14754.474 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14760.476 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f720 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14760.476 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14760.476 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f730 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14760.476 to i32), i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14760.476 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14760.476 to i32), i32* %r1.global-to-local, align 4
  %v3_f740 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14760.476 to i32), i32 ptrtoint (i32* @global_var_14760.476 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14760.476 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14768.478 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f750 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14760.476 to i32), i32 ptrtoint (i32* @global_var_14768.478 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14770.480 to i32), i32* %r0.global-to-local, align 4
  %v0_f758 = load i32, i32* @r5, align 4
  store i32 %v0_f758, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14770.480 to i32), i32* %r1.global-to-local, align 4
  %v3_f760 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14770.480 to i32), i32 ptrtoint (i32* @global_var_14770.480 to i32), i32 %v0_f758)
  store i32 ptrtoint (i32* @global_var_14304.224 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f770 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14304.224 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14304.224 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14778.482 to i32), i32* %r1.global-to-local, align 4
  %v0_f77c = load i32, i32* @r5, align 4
  store i32 %v0_f77c, i32* %r2.global-to-local, align 4
  %v3_f780 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14304.224 to i32), i32 ptrtoint (i32* @global_var_14778.482 to i32), i32 %v0_f77c)
  store i32 ptrtoint (i32* @global_var_1477c.484 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f790 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1477c.484 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1477c.484 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1477c.484 to i32), i32* %r1.global-to-local, align 4
  %v3_f7a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1477c.484 to i32), i32 ptrtoint (i32* @global_var_1477c.484 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_14788.486 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_f7b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([11 x i8]* @global_var_14788.486 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14794.488 to i32), i32* %r1.global-to-local, align 4
  %v0_f7bc = load i32, i32* @r5, align 4
  store i32 %v0_f7bc, i32* %r2.global-to-local, align 4
  %v3_f7c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14794.488 to i32), i32 %v0_f7bc)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1479c.490 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f7d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_1479c.490 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_147a8.492 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f7e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_147a8.492 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_147b0.494 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f7f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_147b0.494 to i32), i32 8)
  %v0_f7f4 = load i32, i32* @r5, align 4
  store i32 %v0_f7f4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_147bc.497 to i32), i32* %r1.global-to-local, align 4
  %v4_f800 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([7 x i8]* @global_var_147bc.497 to i32), i32 %v0_f7f4)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_147c4.499 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f810 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([8 x i8]* @global_var_147c4.499 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_147cc.501 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f820 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_147cc.501 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14984.503 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f830 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14984.503 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_147d4.505 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f840 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint ([9 x i8]* @global_var_147d4.505 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14990.507 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_f850 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14990.507 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_147e0.510 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f860 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint ([6 x i8]* @global_var_147e0.510 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_147e0.510 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_147e0.510 to i32), i32* %r1.global-to-local, align 4
  %v5_f870 = call i32 @function_e334(i32 ptrtoint ([6 x i8]* @global_var_147e0.510 to i32), i32 ptrtoint ([6 x i8]* @global_var_147e0.510 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_14614.402 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14614.402 to i32), i32* %r1.global-to-local, align 4
  %v3_f880 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14614.402 to i32), i32 ptrtoint (i32* @global_var_14614.402 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_147e8.513 to i32), i32* %r0.global-to-local, align 4
  %v0_f888 = load i32, i32* @r5, align 4
  store i32 %v0_f888, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_147e8.513 to i32), i32* %r1.global-to-local, align 4
  %v3_f890 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_147e8.513 to i32), i32 ptrtoint (i32* @global_var_147e8.513 to i32), i32 %v0_f888)
  store i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32* %r1.global-to-local, align 4
  %v0_f89c = load i32, i32* @r5, align 4
  store i32 %v0_f89c, i32* %r2.global-to-local, align 4
  %v4_f8a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1435c.244 to i32), i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32 %v0_f89c)
  store i32 ptrtoint (i32* @global_var_147f0.517 to i32), i32* %r0.global-to-local, align 4
  %v0_f8a8 = load i32, i32* @r5, align 4
  store i32 %v0_f8a8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_147f0.517 to i32), i32* %r1.global-to-local, align 4
  %v3_f8b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_147f0.517 to i32), i32 ptrtoint (i32* @global_var_147f0.517 to i32), i32 %v0_f8a8)
  store i32 ptrtoint (i32* @global_var_147f8.519 to i32), i32* %r0.global-to-local, align 4
  %v0_f8b8 = load i32, i32* @r5, align 4
  store i32 %v0_f8b8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_147f8.519 to i32), i32* %r1.global-to-local, align 4
  %v3_f8c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_147f8.519 to i32), i32 ptrtoint (i32* @global_var_147f8.519 to i32), i32 %v0_f8b8)
  store i32 ptrtoint (i32* @global_var_14800.521 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_14808.523 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f8d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14800.521 to i32), i32 ptrtoint ([9 x i8]* @global_var_14808.523 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14814.525 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1481c.527 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v3_f8e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14814.525 to i32), i32 ptrtoint (i32* @global_var_1481c.527 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14824.529 to i32), i32* %r0.global-to-local, align 4
  %v0_f8e8 = load i32, i32* @r5, align 4
  store i32 %v0_f8e8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14824.529 to i32), i32* %r1.global-to-local, align 4
  %v3_f8f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14824.529 to i32), i32 ptrtoint (i32* @global_var_14824.529 to i32), i32 %v0_f8e8)
  store i32 ptrtoint (i32* @global_var_1482c.531 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1482c.531 to i32), i32* %r1.global-to-local, align 4
  %v3_f900 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1482c.531 to i32), i32 ptrtoint (i32* @global_var_1482c.531 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1482c.531 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_14834.533 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f910 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1482c.531 to i32), i32 ptrtoint ([8 x i8]* @global_var_14834.533 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_1483c.535 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14318.230 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f920 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_1483c.535 to i32), i32 ptrtoint (i32* @global_var_14318.230 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14650.414 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_f930 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14650.414 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14650.414 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14650.414 to i32), i32* %r1.global-to-local, align 4
  %v3_f940 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14650.414 to i32), i32 ptrtoint (i32* @global_var_14650.414 to i32), i32 4)
  store i32 ptrtoint (i32* @global_var_14840.540 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14840.540 to i32), i32* %r1.global-to-local, align 4
  %v3_f950 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14840.540 to i32), i32 ptrtoint (i32* @global_var_14840.540 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14848.542 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f960 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14848.542 to i32), i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14848.542 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_14850.544 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f970 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14848.542 to i32), i32 ptrtoint ([8 x i8]* @global_var_14850.544 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14858.546 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14858.546 to i32), i32* %r1.global-to-local, align 4
  %v3_f980 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14858.546 to i32), i32 ptrtoint (i32* @global_var_14858.546 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14860.548 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1486c.550 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f990 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14860.548 to i32), i32 ptrtoint (i32* @global_var_1486c.550 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14860.548 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14284.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_f9a0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14860.548 to i32), i32 ptrtoint (i32* @global_var_14284.184 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_149a0.553 to i32), i32* %r0.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_149a0.553 to i32), i32* %r1.global-to-local, align 4
  %v3_f9b0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_149a0.553 to i32), i32 ptrtoint (i32* @global_var_149a0.553 to i32), i32 11)
  store i32 ptrtoint (i32* @global_var_14878.555 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14878.555 to i32), i32* %r1.global-to-local, align 4
  %v3_f9c0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14878.555 to i32), i32 ptrtoint (i32* @global_var_14878.555 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_14630.408 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v4_f9d0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14630.408 to i32), i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_14630.408 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_f9e0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14630.408 to i32), i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 9)
  store i32 ptrtoint (i32* @global_var_145ec.392 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145ec.392 to i32), i32* %r1.global-to-local, align 4
  %v3_f9f0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_145ec.392 to i32), i32 ptrtoint (i32* @global_var_145ec.392 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14880.559 to i32), i32* %r1.global-to-local, align 4
  %v0_f9fc = load i32, i32* @r5, align 4
  store i32 %v0_f9fc, i32* %r2.global-to-local, align 4
  %v3_fa00 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14880.559 to i32), i32 %v0_f9fc)
  store i32 ptrtoint (i32* @global_var_14348.240 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14888.562 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_fa10 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14348.240 to i32), i32 ptrtoint (i32* @global_var_14888.562 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14894.564 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_fa20 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_14894.564 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_148a4.566 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v3_fa30 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_148a4.566 to i32), i32 14)
  store i32 ptrtoint (i32* @global_var_14254.140 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_148b4.568 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_fa40 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14254.140 to i32), i32 ptrtoint (i32* @global_var_148b4.568 to i32), i32 17)
  store i32 ptrtoint (i32* @global_var_14204.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_148b4.568 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_fa50 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_14204.146 to i32), i32 ptrtoint (i32* @global_var_148b4.568 to i32), i32 17)
  store i32 ptrtoint (i32* @global_var_148c8.570 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_fa60 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_148c8.570 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 11)
  store i32 ptrtoint (i32* @global_var_148d4.572 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_148d4.572 to i32), i32* %r1.global-to-local, align 4
  %v3_fa70 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_148d4.572 to i32), i32 ptrtoint (i32* @global_var_148d4.572 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_148e0.574 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v3_fa80 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_148e0.574 to i32), i32 ptrtoint (i32* @global_var_1428c.142 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_148e0.574 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_148ec.576 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_fa90 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_148e0.574 to i32), i32 ptrtoint (i32* @global_var_148ec.576 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_148fc.578 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1490c.580 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_faa0 = call i32 @function_e334(i32 ptrtoint (i32* @global_var_148fc.578 to i32), i32 ptrtoint (i32* @global_var_1490c.580 to i32), i32 12)
  %v2_faa8 = ptrtoint i32* %stack_var_-1862 to i32
  store i32 %v2_faa8, i32* %r0.global-to-local, align 4
  %v2_faac = ptrtoint i32* %stack_var_-1842 to i32
  store i32 %v2_faac, i32* %r1.global-to-local, align 4
  %tmp278 = bitcast i32* %stack_var_-1842 to i8*
  br label %dec_label_pc_fab8

dec_label_pc_fab8:                                ; preds = %dec_label_pc_10110, %dec_label_pc_e90c
  %stack_var_-1872.0 = phi i32 [ %tmp240, %dec_label_pc_e90c ], [ %stack_var_-1872.2, %dec_label_pc_10110 ]
  %stack_var_-1884.0 = phi i8* [ %tmp278, %dec_label_pc_e90c ], [ %stack_var_-1884.1, %dec_label_pc_10110 ]
  %v0_fde8 = phi i32 [ %v2_faa8, %dec_label_pc_e90c ], [ %stack_var_-1880.1, %dec_label_pc_10110 ]
  %stack_var_-1876.0 = phi i8 [ %v5_e8f4.le, %dec_label_pc_e90c ], [ %stack_var_-1876.1, %dec_label_pc_10110 ]
  store i32 ptrtoint (i32* @global_var_1d210.106 to i32), i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1872.0, i32* %r3.global-to-local, align 4
  %v2_fac0 = load i32, i32* @global_var_1d210.106, align 4
  store i32 %v2_fac0, i32* @r8, align 4
  %v3_fac4 = icmp uge i32 %stack_var_-1872.0, %v2_fac0
  store i1 %v3_fac4, i1* %cpsr_c.global-to-local, align 1
  %v9_fac4 = icmp eq i32 %stack_var_-1872.0, %v2_fac0
  store i1 %v9_fac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fac4, label %dec_label_pc_fd70, label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %dec_label_pc_fab8
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  %v2_fd40 = ptrtoint i32* %stack_var_-92 to i32
  br label %dec_label_pc_fad8

dec_label_pc_fad8:                                ; preds = %.thread48.dec_label_pc_fad8_crit_edge, %dec_label_pc_facc
  %v0_fad8 = phi i32 [ %v0_fad8.pre, %.thread48.dec_label_pc_fad8_crit_edge ], [ 0, %dec_label_pc_facc ]
  store i32 %v0_fad8, i32* %stack_var_-92, align 4
  store i32 %v0_fad8, i32* %stack_var_-84, align 4
  %v0_fae8 = call i32 @function_db88()
  %v1_fae8 = trunc i32 %v0_fae8 to i8
  store i32 %v0_fae8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d258.33 to i32), i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32* %r1.global-to-local, align 4
  %v2_faf4 = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_faf4, i32* %r2.global-to-local, align 4
  %v2_faf8 = and i32 %v0_fae8, 128
  %v3_faf8 = icmp ne i32 %v2_faf8, 0
  store i1 %v3_faf8, i1* %cpsr_c.global-to-local, align 1
  %v4_faf8 = sdiv i32 %v0_fae8, 256
  store i32 %v4_faf8, i32* %r3.global-to-local, align 4
  %v1_fafc = trunc i32 %v4_faf8 to i8
  store i8 %v1_fafc, i8* bitcast (i32* @global_var_1d1e5.129 to i8*), align 4
  store i32 %v2_faf4, i32* @global_var_1d1ec.584, align 4
  store i8 %v1_fae8, i8* bitcast (i32* @global_var_1d1e4.135 to i8*), align 4
  br label %dec_label_pc_fb08

dec_label_pc_fb08:                                ; preds = %dec_label_pc_fbdc, %dec_label_pc_fb38, %dec_label_pc_fc10, %dec_label_pc_fc04, %dec_label_pc_fbf8, %dec_label_pc_fbec, %.thread33, %bb297, %bb296, %bb295, %bb294, %bb293, %dec_label_pc_fbd4, %dec_label_pc_fbcc, %bb289, %dec_label_pc_fb9c, %dec_label_pc_fb78, %bb282, %dec_label_pc_fb48, %bb281, %dec_label_pc_fb30, %bb280, %bb299, %dec_label_pc_fad8
  %v0_fb08 = call i32 @function_db88()
  store i32 %v0_fb08, i32* %r0.global-to-local, align 4
  %v1_fb0c = urem i32 %v0_fb08, 256
  store i32 %v1_fb0c, i32* %r1.global-to-local, align 4
  %v3_fb10 = udiv i32 %v0_fb08, 256
  store i32 %v3_fb10, i32* %r3.global-to-local, align 4
  %v3_fb14 = udiv i32 %v0_fb08, 65536
  store i32 %v3_fb14, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb18 = icmp eq i32 %v1_fb0c, 0
  store i1 %v2_fb18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb18, label %bb280, label %bb279

bb279:                                            ; preds = %dec_label_pc_fb08
  %v3_fb1c = icmp ugt i32 %v1_fb0c, 126
  store i1 %v3_fb1c, i1* %cpsr_c.global-to-local, align 1
  %v8_fb1c = icmp eq i32 %v1_fb0c, 127
  store i1 %v8_fb1c, i1* %cpsr_z.global-to-local, align 1
  br label %bb280

bb280:                                            ; preds = %dec_label_pc_fb08, %bb279
  %v0_fb2c = phi i1 [ true, %dec_label_pc_fb08 ], [ %v8_fb1c, %bb279 ]
  %v1_fb20 = urem i32 %v3_fb10, 256
  store i32 %v1_fb20, i32* %ip.global-to-local, align 4
  %v1_fb24 = urem i32 %v3_fb14, 256
  store i32 %v1_fb24, i32* %r2.global-to-local, align 4
  %v1_fb28 = and i32 %v0_fb08, 8388608
  %v2_fb28 = icmp ne i32 %v1_fb28, 0
  store i1 %v2_fb28, i1* %cpsr_c.global-to-local, align 1
  %v3_fb28 = udiv i32 %v0_fb08, 16777216
  store i32 %v3_fb28, i32* %r0.global-to-local, align 4
  br i1 %v0_fb2c, label %dec_label_pc_fb08, label %dec_label_pc_fb30

dec_label_pc_fb30:                                ; preds = %bb280
  %v2_fb30 = icmp ugt i32 %v1_fb0c, 2
  store i1 %v2_fb30, i1* %cpsr_c.global-to-local, align 1
  %v7_fb30 = icmp eq i32 %v1_fb0c, 3
  store i1 %v7_fb30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb30, label %dec_label_pc_fb08, label %dec_label_pc_fb38

dec_label_pc_fb38:                                ; preds = %dec_label_pc_fb30
  %v1_fb38 = add nsw i32 %v1_fb0c, -15
  store i32 %v1_fb38, i32* %r3.global-to-local, align 4
  %v2_fb3c = icmp ugt i32 %v1_fb0c, 55
  store i1 %v2_fb3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb3c = icmp eq i32 %v1_fb0c, 56
  store i1 %v7_fb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb3c, label %dec_label_pc_fb08, label %bb281

bb281:                                            ; preds = %dec_label_pc_fb38
  %v3_fb40 = icmp ne i32 %v1_fb38, 0
  store i1 %v3_fb40, i1* %cpsr_c.global-to-local, align 1
  %v8_fb40 = icmp eq i32 %v1_fb38, 1
  store i1 %v8_fb40, i1* %cpsr_z.global-to-local, align 1
  %v2_fb44 = xor i1 %v3_fb40, true
  %v3_fb44 = or i1 %v8_fb40, %v2_fb44
  br i1 %v3_fb44, label %dec_label_pc_fb08, label %dec_label_pc_fb48

dec_label_pc_fb48:                                ; preds = %bb281
  %v2_fb48 = icmp ugt i32 %v1_fb0c, 9
  store i1 %v2_fb48, i1* %cpsr_c.global-to-local, align 1
  %v7_fb48 = icmp eq i32 %v1_fb0c, 10
  store i1 %v7_fb48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb48, label %dec_label_pc_fb08, label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %dec_label_pc_fb48
  %v2_fb50 = icmp ugt i32 %v1_fb0c, 191
  store i1 %v2_fb50, i1* %cpsr_c.global-to-local, align 1
  %v7_fb50 = icmp eq i32 %v1_fb0c, 192
  store i1 %v7_fb50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb50, label %bb282, label %dec_label_pc_fb5c

bb282:                                            ; preds = %dec_label_pc_fb50
  %v3_fb54 = icmp ugt i32 %v1_fb20, 167
  store i1 %v3_fb54, i1* %cpsr_c.global-to-local, align 1
  %v8_fb54 = icmp eq i32 %v1_fb20, 168
  store i1 %v8_fb54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb54, label %dec_label_pc_fb08, label %dec_label_pc_fb5c

dec_label_pc_fb5c:                                ; preds = %dec_label_pc_fb50, %bb282
  %v7_fb5c = icmp eq i32 %v1_fb0c, 172
  %.348 = zext i1 %v7_fb5c to i32
  store i32 %.348, i32* %r3.global-to-local, align 4
  %v2_fb68 = icmp ugt i32 %v1_fb20, 14
  store i1 %v2_fb68, i1* %cpsr_c.global-to-local, align 1
  %v7_fb68 = icmp eq i32 %v1_fb20, 15
  store i1 %v7_fb68, i1* %cpsr_z.global-to-local, align 1
  %v2_fb6c = xor i1 %v2_fb68, true
  %v3_fb6c = or i1 %v7_fb68, %v2_fb6c
  br i1 %v3_fb6c, label %.thread11, label %bb285

.thread11:                                        ; preds = %dec_label_pc_fb5c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb80

bb285:                                            ; preds = %dec_label_pc_fb5c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb70 = icmp eq i1 %v7_fb5c, false
  store i1 %v2_fb70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb70, label %dec_label_pc_fb80, label %dec_label_pc_fb78

dec_label_pc_fb78:                                ; preds = %bb285
  %v2_fb78 = icmp ugt i32 %v1_fb20, 30
  store i1 %v2_fb78, i1* %cpsr_c.global-to-local, align 1
  %v7_fb78 = icmp eq i32 %v1_fb20, 31
  store i1 %v7_fb78, i1* %cpsr_z.global-to-local, align 1
  %v2_fb7c = xor i1 %v2_fb78, true
  %v3_fb7c = or i1 %v7_fb78, %v2_fb7c
  br i1 %v3_fb7c, label %dec_label_pc_fb08, label %dec_label_pc_fb80

dec_label_pc_fb80:                                ; preds = %.thread11, %dec_label_pc_fb78, %bb285
  %v7_fb80 = icmp eq i32 %v1_fb0c, 100
  %.349 = zext i1 %v7_fb80 to i32
  store i32 %.349, i32* %r3.global-to-local, align 4
  %v2_fb8c = icmp ugt i32 %v1_fb20, 62
  store i1 %v2_fb8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb8c = icmp eq i32 %v1_fb20, 63
  store i1 %v7_fb8c, i1* %cpsr_z.global-to-local, align 1
  %v2_fb90 = xor i1 %v2_fb8c, true
  %v3_fb90 = or i1 %v7_fb8c, %v2_fb90
  br i1 %v3_fb90, label %.thread16, label %bb288

.thread16:                                        ; preds = %dec_label_pc_fb80
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fba4

bb288:                                            ; preds = %dec_label_pc_fb80
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb94 = icmp eq i1 %v7_fb80, false
  store i1 %v2_fb94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb94, label %dec_label_pc_fba4, label %dec_label_pc_fb9c

dec_label_pc_fb9c:                                ; preds = %bb288
  %v2_fb9c = icmp ugt i32 %v1_fb20, 125
  store i1 %v2_fb9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb9c = icmp eq i32 %v1_fb20, 126
  store i1 %v7_fb9c, i1* %cpsr_z.global-to-local, align 1
  %v2_fba0 = xor i1 %v2_fb9c, true
  %v3_fba0 = or i1 %v7_fb9c, %v2_fba0
  br i1 %v3_fba0, label %dec_label_pc_fb08, label %dec_label_pc_fba4

dec_label_pc_fba4:                                ; preds = %.thread16, %dec_label_pc_fb9c, %bb288
  %v2_fba4 = icmp ugt i32 %v1_fb0c, 168
  store i1 %v2_fba4, i1* %cpsr_c.global-to-local, align 1
  %v7_fba4 = icmp eq i32 %v1_fb0c, 169
  store i1 %v7_fba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fba4, label %bb289, label %dec_label_pc_fbb0

bb289:                                            ; preds = %dec_label_pc_fba4
  %v3_fba8 = icmp eq i32 %v1_fb20, 255
  store i1 %v3_fba8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_fba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fba8, label %dec_label_pc_fb08, label %dec_label_pc_fbb0

dec_label_pc_fbb0:                                ; preds = %dec_label_pc_fba4, %bb289
  %v7_fbb0 = icmp eq i32 %v1_fb0c, 198
  %.350 = zext i1 %v7_fbb0 to i32
  store i32 %.350, i32* %r3.global-to-local, align 4
  %v2_fbbc = icmp ugt i32 %v1_fb20, 16
  store i1 %v2_fbbc, i1* %cpsr_c.global-to-local, align 1
  %v7_fbbc = icmp eq i32 %v1_fb20, 17
  store i1 %v7_fbbc, i1* %cpsr_z.global-to-local, align 1
  %v2_fbc0 = xor i1 %v2_fbbc, true
  %v3_fbc0 = or i1 %v7_fbbc, %v2_fbc0
  br i1 %v3_fbc0, label %.thread22, label %bb292

.thread22:                                        ; preds = %dec_label_pc_fbb0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbd4

bb292:                                            ; preds = %dec_label_pc_fbb0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbc4 = icmp eq i1 %v7_fbb0, false
  store i1 %v2_fbc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbc4, label %dec_label_pc_fbd4, label %dec_label_pc_fbcc

dec_label_pc_fbcc:                                ; preds = %bb292
  %v2_fbcc = icmp ugt i32 %v1_fb20, 18
  store i1 %v2_fbcc, i1* %cpsr_c.global-to-local, align 1
  %v7_fbcc = icmp eq i32 %v1_fb20, 19
  store i1 %v7_fbcc, i1* %cpsr_z.global-to-local, align 1
  %v2_fbd0 = xor i1 %v2_fbcc, true
  %v3_fbd0 = or i1 %v7_fbcc, %v2_fbd0
  br i1 %v3_fbd0, label %dec_label_pc_fb08, label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %.thread22, %dec_label_pc_fbcc, %bb292
  %v2_fbd4 = icmp ugt i32 %v1_fb0c, 222
  store i1 %v2_fbd4, i1* %cpsr_c.global-to-local, align 1
  %v7_fbd4 = icmp eq i32 %v1_fb0c, 223
  store i1 %v7_fbd4, i1* %cpsr_z.global-to-local, align 1
  %v2_fbd8 = xor i1 %v7_fbd4, true
  %v3_fbd8 = and i1 %v2_fbd4, %v2_fbd8
  br i1 %v3_fbd8, label %dec_label_pc_fb08, label %dec_label_pc_fbdc

dec_label_pc_fbdc:                                ; preds = %dec_label_pc_fbd4
  %v1_fbdc = add nsw i32 %v1_fb0c, -6
  store i32 %v1_fbdc, i32* %r3.global-to-local, align 4
  %v2_fbe0 = icmp ugt i32 %v1_fb0c, 10
  store i1 %v2_fbe0, i1* %cpsr_c.global-to-local, align 1
  %v7_fbe0 = icmp eq i32 %v1_fb0c, 11
  store i1 %v7_fbe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbe0, label %dec_label_pc_fb08, label %bb293

bb293:                                            ; preds = %dec_label_pc_fbdc
  %v3_fbe4 = icmp ne i32 %v1_fbdc, 0
  store i1 %v3_fbe4, i1* %cpsr_c.global-to-local, align 1
  %v8_fbe4 = icmp eq i32 %v1_fbdc, 1
  store i1 %v8_fbe4, i1* %cpsr_z.global-to-local, align 1
  %v2_fbe8 = xor i1 %v3_fbe4, true
  %v3_fbe8 = or i1 %v8_fbe4, %v2_fbe8
  br i1 %v3_fbe8, label %dec_label_pc_fb08, label %dec_label_pc_fbec

dec_label_pc_fbec:                                ; preds = %bb293
  %v2_fbec = icmp ugt i32 %v1_fb0c, 21
  store i1 %v2_fbec, i1* %cpsr_c.global-to-local, align 1
  %v7_fbec = icmp eq i32 %v1_fb0c, 22
  store i1 %v7_fbec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbec, label %dec_label_pc_fb08, label %bb294

bb294:                                            ; preds = %dec_label_pc_fbec
  %v3_fbf0 = icmp ugt i32 %v1_fb0c, 20
  store i1 %v3_fbf0, i1* %cpsr_c.global-to-local, align 1
  %v8_fbf0 = icmp eq i32 %v1_fb0c, 21
  store i1 %v8_fbf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fbf0, label %dec_label_pc_fb08, label %dec_label_pc_fbf8

dec_label_pc_fbf8:                                ; preds = %bb294
  %v2_fbf8 = icmp ugt i32 %v1_fb0c, 27
  store i1 %v2_fbf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fbf8 = icmp eq i32 %v1_fb0c, 28
  store i1 %v7_fbf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbf8, label %dec_label_pc_fb08, label %bb295

bb295:                                            ; preds = %dec_label_pc_fbf8
  %v3_fbfc = icmp ugt i32 %v1_fb0c, 25
  store i1 %v3_fbfc, i1* %cpsr_c.global-to-local, align 1
  %v8_fbfc = icmp eq i32 %v1_fb0c, 26
  store i1 %v8_fbfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fbfc, label %dec_label_pc_fb08, label %dec_label_pc_fc04

dec_label_pc_fc04:                                ; preds = %bb295
  %v2_fc04 = icmp ugt i32 %v1_fb0c, 29
  store i1 %v2_fc04, i1* %cpsr_c.global-to-local, align 1
  %v7_fc04 = icmp eq i32 %v1_fb0c, 30
  store i1 %v7_fc04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc04, label %dec_label_pc_fb08, label %bb296

bb296:                                            ; preds = %dec_label_pc_fc04
  %v3_fc08 = icmp ugt i32 %v1_fb0c, 28
  store i1 %v3_fc08, i1* %cpsr_c.global-to-local, align 1
  %v8_fc08 = icmp eq i32 %v1_fb0c, 29
  store i1 %v8_fc08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc08, label %dec_label_pc_fb08, label %dec_label_pc_fc10

dec_label_pc_fc10:                                ; preds = %bb296
  %v2_fc10 = icmp ugt i32 %v1_fb0c, 54
  store i1 %v2_fc10, i1* %cpsr_c.global-to-local, align 1
  %v7_fc10 = icmp eq i32 %v1_fb0c, 55
  store i1 %v7_fc10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc10, label %dec_label_pc_fb08, label %bb297

bb297:                                            ; preds = %dec_label_pc_fc10
  %v3_fc14 = icmp ugt i32 %v1_fb0c, 32
  store i1 %v3_fc14, i1* %cpsr_c.global-to-local, align 1
  %v8_fc14 = icmp eq i32 %v1_fb0c, 33
  store i1 %v8_fc14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc14, label %dec_label_pc_fb08, label %dec_label_pc_fc1c

dec_label_pc_fc1c:                                ; preds = %bb297
  %v2_fc1c = icmp ugt i32 %v1_fb0c, 214
  store i1 %v2_fc1c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc1c = icmp eq i32 %v1_fb0c, 215
  store i1 %v7_fc1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc1c, label %.thread33, label %bb298

bb298:                                            ; preds = %dec_label_pc_fc1c
  %v3_fc20 = icmp ugt i32 %v1_fb0c, 213
  store i1 %v3_fc20, i1* %cpsr_c.global-to-local, align 1
  %v8_fc20 = icmp eq i32 %v1_fb0c, 214
  store i1 %v8_fc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc20, label %bb299, label %dec_label_pc_fc30

.thread33:                                        ; preds = %dec_label_pc_fc1c
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb08

bb299:                                            ; preds = %bb298
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb08

dec_label_pc_fc30:                                ; preds = %bb298
  store i32 0, i32* @r4, align 4
  %v5_fc3c = call i32 @llvm.bswap.i32(i32 %v0_fb08)
  store i32 %v5_fc3c, i32* %r3.global-to-local, align 4
  %tmp300 = and i32 %v0_fb08, 65280
  %tmp301 = call i32 @llvm.bswap.i32(i32 %tmp300)
  %tmp302 = and i32 %v0_fb08, 16711680
  %tmp303 = call i32 @llvm.bswap.i32(i32 %tmp302)
  %v3_fc48 = mul nuw i32 %v3_fb28, 16777216
  %v3_fc4c = udiv i32 %tmp301, 256
  %v4_fc50 = mul nuw nsw i32 %tmp303, 256
  %tmp304 = and i32 %v0_fb08, 32768
  %v3_fc54 = icmp ne i32 %tmp304, 0
  store i1 %v3_fc54, i1* %cpsr_c.global-to-local, align 1
  %v4_fc54 = udiv i32 %v5_fc3c, 16777216
  store i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32* @r0, align 4
  %v5_fc54 = or i32 %v4_fc54, %v3_fc48
  %v5_fc50 = or i32 %v5_fc54, %v4_fc50
  %v2_fc5c = or i32 %v5_fc50, %v3_fc4c
  store i32 %v2_fc5c, i32* %r2.global-to-local, align 4
  %v5_fc60 = trunc i32 %v4_fc54 to i8
  store i8 %v5_fc60, i8* @global_var_1d1f0.585, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i8 0, i8* bitcast (i32* @global_var_1d1ea.586 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1d1eb.587 to i8*), align 4
  %v3_fc70 = call i32 @function_c7e0(i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32 20)
  store i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32* %ip.global-to-local, align 4
  %sext6 = mul i32 %v3_fc70, 16777216
  %v1_fc78 = sdiv i32 %sext6, 16777216
  store i32 %v1_fc78, i32* %r3.global-to-local, align 4
  %v2_fc7c = and i32 %v1_fc78, 128
  %v3_fc7c = icmp ne i32 %v2_fc7c, 0
  store i1 %v3_fc7c, i1* %cpsr_c.global-to-local, align 1
  %v4_fc7c = ashr i32 %sext6, 31
  store i32 %v4_fc7c, i32* %r2.global-to-local, align 4
  %v1_fc80 = trunc i32 %v1_fc78 to i8
  store i8 %v1_fc80, i8* bitcast (i32* @global_var_1d1ea.586 to i8*), align 4
  %v1_fc84 = trunc i32 %v4_fc7c to i8
  store i8 %v1_fc84, i8* bitcast (i32* @global_var_1d1eb.587 to i8*), align 4
  %v3_fc88 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_fc88, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v4_fc90 = call i32 @function_11abc(i32 %v3_fc88, i32 10)
  store i32 %v4_fc90, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc94 = icmp eq i32 %v4_fc90, 0
  store i1 %v2_fc94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc94, label %.thread200, label %bb305

.thread200:                                       ; preds = %dec_label_pc_fc30
  store i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), i32* @lr, align 4
  br label %.thread43.thread74

bb305:                                            ; preds = %dec_label_pc_fc30
  store i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), i32* %r0.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  %v1_fca4 = load i32, i32* @r4, align 4
  %v2_fca4 = trunc i32 %v1_fca4 to i8
  store i8 %v2_fca4, i8* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), i32 2) to i8*), align 2
  %v0_fca8.pr.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fca8.pr.pre, label %.thread43.thread74, label %.thread40

.thread40:                                        ; preds = %bb305
  %v1_fca8 = load i32, i32* %r3.global-to-local, align 4
  %v2_fca8 = trunc i32 %v1_fca8 to i8
  %v3_fca8 = load i32, i32* %r0.global-to-local, align 4
  %v4_fca8 = add i32 %v3_fca8, 3
  %v5_fca8 = inttoptr i32 %v4_fca8 to i8*
  store i8 %v2_fca8, i8* %v5_fca8, align 1
  %v0_fcb0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32* %r0.global-to-local, align 4
  br i1 %v0_fcb0.pr.pr, label %.thread46, label %.thread48

.thread43.thread74:                               ; preds = %bb305, %.thread200
  store i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32* %r0.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %.thread40, %.thread43.thread74
  store i32 9, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v3_fcb8 = load i32, i32* @lr, align 4
  %v4_fcb8 = add i32 %v3_fcb8, 2
  %v5_fcb8 = inttoptr i32 %v4_fcb8 to i8*
  store i8 9, i8* %v5_fcb8, align 1
  %v0_fcbc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fcbc.pr.pr, label %bb306, label %.thread48

bb306:                                            ; preds = %.thread46
  %v1_fcbc = load i32, i32* %r2.global-to-local, align 4
  %v2_fcbc = trunc i32 %v1_fcbc to i8
  %v3_fcbc = load i32, i32* @lr, align 4
  %v4_fcbc = add i32 %v3_fcbc, 3
  %v5_fcbc = inttoptr i32 %v4_fcbc to i8*
  store i8 %v2_fcbc, i8* %v5_fcbc, align 1
  br label %.thread48

.thread48:                                        ; preds = %.thread40, %.thread46, %bb306
  %v4_fcc0 = load i8, i8* @global_var_1d1f0.585, align 1
  %v5_fcc0 = sext i8 %v4_fcc0 to i32
  store i32 %v5_fcc0, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), i32* @r1, align 4
  store i8 %v4_fcc0, i8* @global_var_1d1f8.589, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_fcd8 = load i32, i32* %sl.global-to-local, align 4
  %v1_fcd8 = trunc i32 %v0_fcd8 to i8
  store i8 %v1_fcd8, i8* bitcast (i32* @global_var_1d204.590 to i8*), align 4
  store i8 %v1_fcd8, i8* bitcast (i32* @global_var_1d205.591 to i8*), align 4
  %v5_fce0 = call i32 @function_c83c(i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), i32 5120, i32 20)
  %sext = mul i32 %v5_fce0, 16777216
  %v1_fce8 = sdiv i32 %sext, 16777216
  %v3_fcf0 = ashr i32 %sext, 31
  %v2_fcf4 = load i32, i32* @global_var_1d1f4.127, align 4
  %v1_fcfc = trunc i32 %v3_fcf0 to i8
  store i8 %v1_fcfc, i8* bitcast (i32* @global_var_1d205.591 to i8*), align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_fd10 = load i8, i8* @global_var_1d1f0.585, align 1
  %v4_fd10 = sext i8 %v3_fd10 to i32
  store i32 %v4_fd10, i32* @r4, align 4
  %v2_fd14 = load i32, i32* @global_var_1d274.121, align 4
  store i32 %v2_fd14, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), i32* %ip.global-to-local, align 4
  %v1_fd24 = and i32 %v2_fcf4, 8388608
  %v2_fd24 = icmp ne i32 %v1_fd24, 0
  store i1 %v2_fd24, i1* %cpsr_c.global-to-local, align 1
  %v1_fd2c = trunc i32 %v1_fce8 to i8
  store i8 %v1_fd2c, i8* bitcast (i32* @global_var_1d204.590 to i8*), align 4
  store i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_fd40, i32* %lr.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v8_fd54 = call i32 @function_1244c(i32 %v2_fd14, i32* bitcast (i8** @global_var_1d1e0.123 to i32*), i32 40, i32 16384, i32 %v2_fd40, i32 16)
  store i32 %v8_fd54, i32* %r0.global-to-local, align 4
  %v3_fd58 = load i32, i32* %stack_var_-52, align 4
  %v1_fd5c = add i32 %v3_fd58, 1
  store i32 %v1_fd5c, i32* %r3.global-to-local, align 4
  %v3_fd60 = icmp ugt i32 %v1_fd5c, 8191
  store i1 %v3_fd60, i1* %cpsr_c.global-to-local, align 1
  %v8_fd60 = icmp eq i32 %v1_fd5c, 8192
  store i1 %v8_fd60, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_fd5c, i32* %stack_var_-52, align 4
  %v5_fd68 = icmp slt i32 %v1_fd5c, 8192
  br i1 %v5_fd68, label %.thread48.dec_label_pc_fad8_crit_edge, label %dec_label_pc_fd6c

.thread48.dec_label_pc_fad8_crit_edge:            ; preds = %.thread48
  %v0_fad8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_fad8

dec_label_pc_fd6c:                                ; preds = %.thread48
  %v0_fd6c = load i32, i32* @r8, align 4
  br label %dec_label_pc_fd70

dec_label_pc_fd70:                                ; preds = %dec_label_pc_fab8, %dec_label_pc_fd6c
  %stack_var_-1872.1 = phi i32 [ %stack_var_-1872.0, %dec_label_pc_fab8 ], [ %v0_fd6c, %dec_label_pc_fd6c ]
  %v0_fd70 = call i32 @function_12190()
  store i32 %v0_fd70, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v2_fd84 = inttoptr i32 %v0_fd70 to i32*
  %v6_fdac = inttoptr i32 %v0_fde8 to i32*
  %v1_fdd8 = add i32 %v0_fde8, 16
  %v2_fdd8 = inttoptr i32 %v1_fdd8 to i32*
  %v4_fdf4 = ptrtoint i8* %stack_var_-1884.0 to i32
  %v1_fdfc = add i32 %v4_fdf4, 1
  %v2_fdfc = inttoptr i32 %v1_fdfc to i8*
  %v1_fe20 = add i32 %v4_fdf4, 2
  %v2_fe20 = inttoptr i32 %v1_fe20 to i8*
  %v1_fe24 = add i32 %v4_fdf4, 3
  %v2_fe24 = inttoptr i32 %v1_fe24 to i8*
  %v4_fe28 = sext i8 %stack_var_-1876.0 to i32
  %v1_ff04 = bitcast i8* %stack_var_-1884.0 to i32*
  %v1_fde8 = add i32 %v0_fde8, 9
  %v2_fde8 = inttoptr i32 %v1_fde8 to i8*
  %v1_fe38 = add i32 %v4_fdf4, 13
  %v2_fe38 = inttoptr i32 %v1_fe38 to i8*
  %v1_fe5c = add i32 %v4_fdf4, 8
  %v2_fe5c = inttoptr i32 %v1_fe5c to i32*
  %v1_fe9c = add i32 %v0_fde8, 12
  %v2_fe9c = inttoptr i32 %v1_fe9c to i32*
  br label %dec_label_pc_fd7c

dec_label_pc_fd7c:                                ; preds = %dec_label_pc_fe5c, %dec_label_pc_fe54, %dec_label_pc_fe4c, %dec_label_pc_fe1c, %dec_label_pc_fe0c, %dec_label_pc_fde8, %dec_label_pc_fdd0, %dec_label_pc_fe44, %dec_label_pc_fe38, %dec_label_pc_fdc8, %dec_label_pc_fefc, %dec_label_pc_fd70
  store i32 0, i32* %v2_fd84, align 4
  %v2_fd8c = load i32, i32* @global_var_1d274.121, align 4
  store i32 %v2_fd8c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v0_fde8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v7_fdac = call i32 @function_123ec(i32 %v2_fd8c, i32* %v6_fdac, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v7_fdac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdb0 = icmp eq i32 %v7_fdac, 0
  store i1 %v2_fdb0, i1* %cpsr_z.global-to-local, align 1
  %tmp307 = icmp slt i32 %v7_fdac, 1
  br i1 %tmp307, label %dec_label_pc_ff30, label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fd7c
  store i32 %v0_fd70, i32* %lr.global-to-local, align 4
  %v2_fdbc = load i32, i32* %v2_fd84, align 4
  store i32 %v2_fdbc, i32* %r3.global-to-local, align 4
  %v2_fdc0 = icmp ugt i32 %v2_fdbc, 10
  store i1 %v2_fdc0, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc0 = icmp eq i32 %v2_fdbc, 11
  store i1 %v7_fdc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdc0, label %dec_label_pc_ff30, label %dec_label_pc_fdc8

dec_label_pc_fdc8:                                ; preds = %dec_label_pc_fdb8
  %v2_fdc8 = icmp ugt i32 %v7_fdac, 38
  store i1 %v2_fdc8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc8 = icmp eq i32 %v7_fdac, 39
  store i1 %v7_fdc8, i1* %cpsr_z.global-to-local, align 1
  %v2_fdcc = xor i1 %v2_fdc8, true
  %v3_fdcc = or i1 %v7_fdc8, %v2_fdcc
  br i1 %v3_fdcc, label %dec_label_pc_fd7c, label %dec_label_pc_fdd0

dec_label_pc_fdd0:                                ; preds = %dec_label_pc_fdc8
  store i32 %v0_fde8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d258.33 to i32), i32* %r1.global-to-local, align 4
  %v3_fdd8 = load i32, i32* %v2_fdd8, align 4
  store i32 %v3_fdd8, i32* %r2.global-to-local, align 4
  %v2_fddc = load i32, i32* @global_var_1d258.33, align 4
  store i32 %v2_fddc, i32* %r3.global-to-local, align 4
  %v3_fde0 = icmp uge i32 %v3_fdd8, %v2_fddc
  store i1 %v3_fde0, i1* %cpsr_c.global-to-local, align 1
  %v9_fde0 = icmp eq i32 %v3_fdd8, %v2_fddc
  store i1 %v9_fde0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fde0, label %dec_label_pc_fde8, label %dec_label_pc_fd7c

dec_label_pc_fde8:                                ; preds = %dec_label_pc_fdd0
  %v3_fde8 = load i8, i8* %v2_fde8, align 1
  %v4_fde8 = zext i8 %v3_fde8 to i32
  store i32 %v4_fde8, i32* %r3.global-to-local, align 4
  %v2_fdec = icmp ugt i8 %v3_fde8, 5
  store i1 %v2_fdec, i1* %cpsr_c.global-to-local, align 1
  %v7_fdec = icmp eq i8 %v3_fde8, 6
  store i1 %v7_fdec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdec, label %dec_label_pc_fdf4, label %dec_label_pc_fd7c

dec_label_pc_fdf4:                                ; preds = %dec_label_pc_fde8
  store i32 %v4_fdf4, i32* %r3.global-to-local, align 4
  %v2_fdf8 = load i8, i8* %stack_var_-1884.0, align 1
  %v3_fdf8 = zext i8 %v2_fdf8 to i32
  store i32 %v3_fdf8, i32* %r2.global-to-local, align 4
  %v3_fdfc = load i8, i8* %v2_fdfc, align 1
  %v4_fdfc = zext i8 %v3_fdfc to i32
  store i32 %v4_fdfc, i32* %r3.global-to-local, align 4
  %v4_fe00 = mul nuw nsw i32 %v4_fdfc, 256
  %v5_fe00 = or i32 %v4_fe00, %v3_fdf8
  store i32 %v5_fe00, i32* %r2.global-to-local, align 4
  %v2_fe04 = icmp ugt i32 %v5_fe00, 5887
  store i1 %v2_fe04, i1* %cpsr_c.global-to-local, align 1
  %v7_fe04 = icmp eq i32 %v5_fe00, 5888
  store i1 %v7_fe04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe04, label %dec_label_pc_fe1c, label %dec_label_pc_fe0c

dec_label_pc_fe0c:                                ; preds = %dec_label_pc_fdf4
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_fe14 = icmp ugt i32 %v5_fe00, 4872
  store i1 %v3_fe14, i1* %cpsr_c.global-to-local, align 1
  %v9_fe14 = icmp eq i32 %v5_fe00, 4873
  store i1 %v9_fe14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fe14, label %dec_label_pc_fe1c, label %dec_label_pc_fd7c

dec_label_pc_fe1c:                                ; preds = %dec_label_pc_fe0c, %dec_label_pc_fdf4
  store i32 %v4_fdf4, i32* %ip.global-to-local, align 4
  %v3_fe20 = load i8, i8* %v2_fe20, align 1
  %v4_fe20 = zext i8 %v3_fe20 to i32
  store i32 %v4_fe20, i32* %r3.global-to-local, align 4
  %v3_fe24 = load i8, i8* %v2_fe24, align 1
  %v4_fe24 = zext i8 %v3_fe24 to i32
  store i32 %v4_fe24, i32* %r2.global-to-local, align 4
  store i32 %v4_fe28, i32* %lr.global-to-local, align 4
  %v4_fe2c = mul nuw nsw i32 %v4_fe24, 256
  %v5_fe2c = or i32 %v4_fe2c, %v4_fe20
  store i32 %v5_fe2c, i32* %r3.global-to-local, align 4
  %v3_fe30 = icmp uge i32 %v5_fe2c, %v4_fe28
  store i1 %v3_fe30, i1* %cpsr_c.global-to-local, align 1
  %v9_fe30 = icmp eq i32 %v5_fe2c, %v4_fe28
  store i1 %v9_fe30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fe30, label %dec_label_pc_fe38, label %dec_label_pc_fd7c

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fe1c
  %v3_fe38 = load i8, i8* %v2_fe38, align 1
  %v4_fe38 = zext i8 %v3_fe38 to i32
  store i32 %v4_fe38, i32* %r3.global-to-local, align 4
  %v1_fe3c = and i32 %v4_fe38, 2
  %v2_fe3c = icmp eq i32 %v1_fe3c, 0
  store i1 %v2_fe3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe3c, label %dec_label_pc_fd7c, label %dec_label_pc_fe44

dec_label_pc_fe44:                                ; preds = %dec_label_pc_fe38
  %v1_fe44 = and i32 %v4_fe38, 16
  %v2_fe44 = icmp eq i32 %v1_fe44, 0
  store i1 %v2_fe44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe44, label %dec_label_pc_fd7c, label %dec_label_pc_fe4c

dec_label_pc_fe4c:                                ; preds = %dec_label_pc_fe44
  %v1_fe4c = and i32 %v4_fe38, 4
  %v2_fe4c = icmp eq i32 %v1_fe4c, 0
  store i1 %v2_fe4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe4c, label %dec_label_pc_fe54, label %dec_label_pc_fd7c

dec_label_pc_fe54:                                ; preds = %dec_label_pc_fe4c
  %tmp = urem i8 %v3_fe38, 2
  %v2_fe54 = icmp eq i8 %tmp, 0
  store i1 %v2_fe54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe54, label %dec_label_pc_fe5c, label %dec_label_pc_fd7c

dec_label_pc_fe5c:                                ; preds = %dec_label_pc_fe54
  %v3_fe5c = load i32, i32* %v2_fe5c, align 4
  %v2_fe78 = call i32 @llvm.bswap.i32(i32 %v3_fe5c)
  %v1_fe7c = add i32 %v2_fe78, -1
  %v1_fe80 = udiv i32 %v1_fe7c, 256
  %v3_fe84 = and i32 %v1_fe80, 65280
  %v1_fe88 = and i32 %v1_fe7c, 65280
  store i32 %v1_fe88, i32* %r2.global-to-local, align 4
  %v3_fe8c = mul i32 %v1_fe7c, 16777216
  %v4_fe90 = udiv i32 %v1_fe7c, 16777216
  %v5_fe90 = or i32 %v3_fe84, %v4_fe90
  store i32 %v5_fe90, i32* %r1.global-to-local, align 4
  store i32 %v0_fde8, i32* %r3.global-to-local, align 4
  %v4_fe98 = mul nuw nsw i32 %v1_fe88, 256
  %v5_fe98 = or i32 %v4_fe98, %v3_fe8c
  store i32 %v5_fe98, i32* %r0.global-to-local, align 4
  %v3_fe9c = load i32, i32* %v2_fe9c, align 4
  store i32 %v3_fe9c, i32* %r2.global-to-local, align 4
  %v2_fea0 = call i32 @llvm.bswap.i32(i32 %v1_fe7c)
  store i32 %v2_fea0, i32* %ip.global-to-local, align 4
  %v3_fea4 = icmp uge i32 %v2_fea0, %v3_fe9c
  store i1 %v3_fea4, i1* %cpsr_c.global-to-local, align 1
  %v9_fea4 = icmp eq i32 %v2_fea0, %v3_fe9c
  store i1 %v9_fea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fea4, label %dec_label_pc_feac, label %dec_label_pc_fd7c

dec_label_pc_feac:                                ; preds = %dec_label_pc_fe5c
  %v0_feac = load i32, i32* @r4, align 4
  %v3_feac = icmp ugt i32 %v0_feac, 1023
  store i1 %v3_feac, i1* %cpsr_c.global-to-local, align 1
  %v8_feac = icmp eq i32 %v0_feac, 1024
  store i1 %v8_feac, i1* %cpsr_z.global-to-local, align 1
  %v6_feb0 = icmp slt i32 %v0_feac, 1024
  br i1 %v6_feb0, label %dec_label_pc_feb4, label %dec_label_pc_ff30

dec_label_pc_feb4:                                ; preds = %dec_label_pc_feac
  store i32 ptrtoint (i32* @global_var_1d270.119 to i32), i32* %lr.global-to-local, align 4
  %v3_feb8 = mul i32 %v0_feac, 256
  store i32 %v3_feb8, i32* %r2.global-to-local, align 4
  %v2_febc = load i32, i32* @global_var_1d270.119, align 4
  store i32 %v2_febc, i32* %r1.global-to-local, align 4
  %v2_fec4 = mul i32 %v0_feac, 288
  store i32 %v2_fec4, i32* %r3.global-to-local, align 4
  %v2_fec8 = add i32 %v2_febc, %v2_fec4
  store i32 %v2_fec8, i32* @r0, align 4
  %v1_fecc = add i32 %v2_fec8, 12
  %v2_fecc = inttoptr i32 %v1_fecc to i32*
  %v3_fecc = load i32, i32* %v2_fecc, align 4
  store i32 %v3_fecc, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fed0 = icmp eq i32 %v3_fecc, 0
  store i1 %v2_fed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fed0, label %dec_label_pc_fefc, label %dec_label_pc_fedc.preheader

dec_label_pc_fedc.preheader:                      ; preds = %dec_label_pc_feb4
  %v2_fed4 = add i32 %v2_fec8, 288
  store i32 %v2_fed4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fedc

dec_label_pc_fedc:                                ; preds = %dec_label_pc_fedc.preheader, %dec_label_pc_fee8
  %v0_fee8 = phi i32 [ %v2_fed4, %dec_label_pc_fedc.preheader ], [ %v1_fef4, %dec_label_pc_fee8 ]
  %v0_fedc = phi i32 [ %v0_feac, %dec_label_pc_fedc.preheader ], [ %v1_fedc, %dec_label_pc_fee8 ]
  %v1_fedc = add i32 %v0_fedc, 1
  store i32 %v1_fedc, i32* @r4, align 4
  %v7_fee0 = icmp eq i32 %v1_fedc, 1024
  br i1 %v7_fee0, label %dec_label_pc_ff30.loopexit, label %dec_label_pc_fee8

dec_label_pc_fee8:                                ; preds = %dec_label_pc_fedc
  store i32 %v0_fee8, i32* @r0, align 4
  %v1_feec = add i32 %v0_fee8, 12
  %v2_feec = inttoptr i32 %v1_feec to i32*
  %v3_feec = load i32, i32* %v2_feec, align 4
  %v2_fef0 = icmp eq i32 %v3_feec, 0
  %v1_fef4 = add i32 %v0_fee8, 288
  store i32 %v1_fef4, i32* %r3.global-to-local, align 4
  br i1 %v2_fef0, label %dec_label_pc_fefc.loopexit, label %dec_label_pc_fedc

dec_label_pc_fefc.loopexit:                       ; preds = %dec_label_pc_fee8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fefc

dec_label_pc_fefc:                                ; preds = %dec_label_pc_fefc.loopexit, %dec_label_pc_feb4
  %v1_fefc = phi i32 [ %v0_fee8, %dec_label_pc_fefc.loopexit ], [ %v2_fec8, %dec_label_pc_feb4 ]
  %v2_fefc = add i32 %v1_fefc, 16
  %v3_fefc = inttoptr i32 %v2_fefc to i32*
  store i32 %v3_fe9c, i32* %v3_fefc, align 4
  store i32 %v4_fdf4, i32* %r1.global-to-local, align 4
  %v2_ff04 = load i32, i32* %v1_ff04, align 4
  store i32 %v2_ff04, i32* %r2.global-to-local, align 4
  %v1_ff08 = and i32 %v2_ff04, 128
  %v2_ff08 = icmp ne i32 %v1_ff08, 0
  store i1 %v2_ff08, i1* %cpsr_c.global-to-local, align 1
  %v3_ff08 = sdiv i32 %v2_ff04, 256
  store i32 %v3_ff08, i32* %r3.global-to-local, align 4
  %v1_ff0c = trunc i32 %v3_ff08 to i8
  %v2_ff0c = load i32, i32* @r0, align 4
  %v3_ff0c = add i32 %v2_ff0c, 21
  %v4_ff0c = inttoptr i32 %v3_ff0c to i8*
  store i8 %v1_ff0c, i8* %v4_ff0c, align 1
  %v0_ff10 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff10 = trunc i32 %v0_ff10 to i8
  %v2_ff10 = load i32, i32* @r0, align 4
  %v3_ff10 = add i32 %v2_ff10, 20
  %v4_ff10 = inttoptr i32 %v3_ff10 to i8*
  store i8 %v1_ff10, i8* %v4_ff10, align 1
  %v0_ff14 = call i32 @function_e260()
  store i32 %v0_ff14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fd7c

dec_label_pc_ff1c:                                ; preds = %dec_label_pc_e89c
  store i32 ptrtoint (i32* @global_var_1d274.121 to i32), i32* %r2.global-to-local, align 4
  %v2_ff20 = load i32, i32* @global_var_1d274.121, align 4
  store i32 %v2_ff20, i32* %r0.global-to-local, align 4
  %v1_ff24 = call i32 @function_11c68(i32 %v2_ff20)
  store i32 %v1_ff24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ff28

dec_label_pc_ff28:                                ; preds = %dec_label_pc_e874, %dec_label_pc_ff1c
  %v0_ff28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_ff28, i32* %r0.global-to-local, align 4
  %v1_ff2c = call i32 @function_12c20(i32 %v0_ff28)
  store i32 %v1_ff2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ff30

dec_label_pc_ff30.loopexit:                       ; preds = %dec_label_pc_fedc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %dec_label_pc_feac, %dec_label_pc_fdb8, %dec_label_pc_fd7c, %dec_label_pc_ff30.loopexit, %dec_label_pc_ff28
  %stack_var_-1868.0 = phi i32 [ %tmp233, %dec_label_pc_ff28 ], [ %v0_fd70, %dec_label_pc_ff30.loopexit ], [ %v0_fd70, %dec_label_pc_fd7c ], [ %v0_fd70, %dec_label_pc_fdb8 ], [ %v0_fd70, %dec_label_pc_feac ]
  %stack_var_-1872.2 = phi i32 [ %tmp240, %dec_label_pc_ff28 ], [ %stack_var_-1872.1, %dec_label_pc_ff30.loopexit ], [ %stack_var_-1872.1, %dec_label_pc_fd7c ], [ %stack_var_-1872.1, %dec_label_pc_fdb8 ], [ %stack_var_-1872.1, %dec_label_pc_feac ]
  %stack_var_-1884.1 = phi i8* [ %tmp241, %dec_label_pc_ff28 ], [ %stack_var_-1884.0, %dec_label_pc_ff30.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_fd7c ], [ %stack_var_-1884.0, %dec_label_pc_fdb8 ], [ %stack_var_-1884.0, %dec_label_pc_feac ]
  %stack_var_-1880.1 = phi i32 [ %tmp242, %dec_label_pc_ff28 ], [ %v0_fde8, %dec_label_pc_ff30.loopexit ], [ %v0_fde8, %dec_label_pc_fd7c ], [ %v0_fde8, %dec_label_pc_fdb8 ], [ %v0_fde8, %dec_label_pc_feac ]
  %stack_var_-1876.1 = phi i8 [ %tmp243, %dec_label_pc_ff28 ], [ %stack_var_-1876.0, %dec_label_pc_ff30.loopexit ], [ %stack_var_-1876.0, %dec_label_pc_fd7c ], [ %stack_var_-1876.0, %dec_label_pc_fdb8 ], [ %stack_var_-1876.0, %dec_label_pc_feac ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1672, i32* %ip.global-to-local, align 4
  %v2_ff48407 = load i32, i32* @sp, align 4
  %v3_ff48408 = add i32 %v2_ff48407, 1672
  %v4_ff48409 = inttoptr i32 %v3_ff48408 to i32*
  store i32 0, i32* %v4_ff48409, align 4
  br label %dec_label_pc_ff38.dec_label_pc_ff38_crit_edge

dec_label_pc_ff38.dec_label_pc_ff38_crit_edge:    ; preds = %dec_label_pc_ff30, %dec_label_pc_ff38.dec_label_pc_ff38_crit_edge
  %v0_ff38.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_ff48.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ff3c = add i32 %v0_ff38.pre, 4
  store i32 %v1_ff3c, i32* %r3.global-to-local, align 4
  %v1_ff40 = add i32 %v0_ff38.pre, 1672
  store i32 %v1_ff40, i32* %ip.global-to-local, align 4
  %v7_ff44 = icmp eq i32 %v1_ff3c, 128
  %v2_ff48 = load i32, i32* @sp, align 4
  %v3_ff48 = add i32 %v2_ff48, %v1_ff40
  %v4_ff48 = inttoptr i32 %v3_ff48 to i32*
  store i32 %v0_ff48.pre, i32* %v4_ff48, align 4
  br i1 %v7_ff44, label %dec_label_pc_ff50, label %dec_label_pc_ff38.dec_label_pc_ff38_crit_edge

dec_label_pc_ff50:                                ; preds = %dec_label_pc_ff38.dec_label_pc_ff38_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_ff50 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff58401 = add i32 %v0_ff50, 4
  store i32 %v1_ff58401, i32* %r3.global-to-local, align 4
  %v1_ff5c402 = add i32 %v0_ff50, 1544
  store i32 %v1_ff5c402, i32* %lr.global-to-local, align 4
  %v7_ff60403 = icmp eq i32 %v1_ff58401, 128
  %v2_ff64404 = load i32, i32* @sp, align 4
  %v3_ff64405 = add i32 %v2_ff64404, %v1_ff5c402
  %v4_ff64406 = inttoptr i32 %v3_ff64405 to i32*
  store i32 %v0_ff50, i32* %v4_ff64406, align 4
  br i1 %v7_ff60403, label %dec_label_pc_ff6c, label %dec_label_pc_ff54.dec_label_pc_ff54_crit_edge

dec_label_pc_ff54.dec_label_pc_ff54_crit_edge:    ; preds = %dec_label_pc_ff50, %dec_label_pc_ff54.dec_label_pc_ff54_crit_edge
  %v0_ff54.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_ff64.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ff58 = add i32 %v0_ff54.pre, 4
  store i32 %v1_ff58, i32* %r3.global-to-local, align 4
  %v1_ff5c = add i32 %v0_ff54.pre, 1544
  store i32 %v1_ff5c, i32* %lr.global-to-local, align 4
  %v7_ff60 = icmp eq i32 %v1_ff58, 128
  %v2_ff64 = load i32, i32* @sp, align 4
  %v3_ff64 = add i32 %v2_ff64, %v1_ff5c
  %v4_ff64 = inttoptr i32 %v3_ff64 to i32*
  store i32 %v0_ff64.pre, i32* %v4_ff64, align 4
  br i1 %v7_ff60, label %dec_label_pc_ff6c, label %dec_label_pc_ff54.dec_label_pc_ff54_crit_edge

dec_label_pc_ff6c:                                ; preds = %dec_label_pc_ff54.dec_label_pc_ff54_crit_edge, %dec_label_pc_ff50
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_ff6c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ff6c, i32* @r6, align 4
  store i32 %v0_ff6c, i32* @r5, align 4
  store i32 %v0_ff6c, i32* @r7, align 4
  store i32 %v0_ff6c, i32* %stack_var_-52, align 4
  %v2_10028 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_ffe4

dec_label_pc_ff80:                                ; preds = %dec_label_pc_1000c, %dec_label_pc_ffe4
  %storemerge224 = phi i32 [ 30, %dec_label_pc_ffe4 ], [ 5, %dec_label_pc_1000c ]
  store i32 %storemerge224, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d210.106 to i32), i32* %r2.global-to-local, align 4
  %v2_ff84 = load i32, i32* @global_var_1d210.106, align 4
  store i32 %v2_ff84, i32* %r3.global-to-local, align 4
  %v1_ff88 = add i32 %v2_fff8, 8
  %v2_ff88 = inttoptr i32 %v1_ff88 to i32*
  %v3_ff88 = load i32, i32* %v2_ff88, align 4
  store i32 %v3_ff88, i32* %r2.global-to-local, align 4
  %v2_ff8c = sub i32 %v2_ff84, %v3_ff88
  store i32 %v2_ff8c, i32* %r3.global-to-local, align 4
  %v3_ff90 = icmp uge i32 %v2_ff8c, %storemerge224
  store i1 %v3_ff90, i1* %cpsr_c.global-to-local, align 1
  %v9_ff90 = icmp eq i32 %v2_ff8c, %storemerge224
  store i1 %v9_ff90, i1* %cpsr_z.global-to-local, align 1
  %v2_ff94 = xor i1 %v9_ff90, true
  %v3_ff94 = and i1 %v3_ff90, %v2_ff94
  br i1 %v3_ff94, label %dec_label_pc_1004c, label %dec_label_pc_ff98

dec_label_pc_ff98:                                ; preds = %dec_label_pc_ff80
  store i1 %v2_10000, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10000, i1* %cpsr_z.global-to-local, align 1
  %v1_1001c = add i32 %v2_fff8, 4
  %v2_1001c = inttoptr i32 %v1_1001c to i32*
  %v3_1001c = load i32, i32* %v2_1001c, align 4
  br i1 %v7_10000, label %dec_label_pc_1001c, label %dec_label_pc_ffa0

dec_label_pc_ffa0:                                ; preds = %dec_label_pc_ff98
  store i32 %v3_1001c, i32* %ip.global-to-local, align 4
  %v3_ffa4 = udiv i32 %v3_1001c, 32
  store i32 %v2_10028, i32* %r0.global-to-local, align 4
  %v3_ffac = mul nuw nsw i32 %v3_ffa4, 4
  %v2_ffb0 = add i32 %v3_ffac, %v2_10028
  store i32 %v2_ffb0, i32* %r3.global-to-local, align 4
  %v1_ffb4 = add i32 %v2_ffb0, -184
  %v2_ffb4 = inttoptr i32 %v1_ffb4 to i32*
  %v3_ffb4 = load i32, i32* %v2_ffb4, align 4
  %v1_ffb8 = urem i32 %v3_1001c, 32
  store i32 %v1_ffb8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_ffc0 = shl i32 1, %v1_ffb8
  %v8_ffc0 = or i32 %v3_ffb4, %v7_ffc0
  store i32 %v8_ffc0, i32* %r2.global-to-local, align 4
  store i32 %v8_ffc0, i32* %v2_ffb4, align 4
  %v0_ffc8 = load i32, i32* @r6, align 4
  %v1_ffc8 = load i32, i32* %ip.global-to-local, align 4
  %v3_ffc8 = icmp uge i32 %v0_ffc8, %v1_ffc8
  store i1 %v3_ffc8, i1* %cpsr_c.global-to-local, align 1
  %v9_ffc8 = icmp eq i32 %v0_ffc8, %v1_ffc8
  store i1 %v9_ffc8, i1* %cpsr_z.global-to-local, align 1
  %v5_ffcc = icmp slt i32 %v0_ffc8, %v1_ffc8
  br i1 %v5_ffcc, label %bb309, label %bb310

bb309:                                            ; preds = %dec_label_pc_ffa0
  store i32 %v1_ffc8, i32* @r6, align 4
  br label %bb310

bb310:                                            ; preds = %dec_label_pc_1000c, %dec_label_pc_10cac, %dec_label_pc_10080, %bb312, %dec_label_pc_ffa0, %bb309
  %v3_ffd0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_ffd0, i32* %r3.global-to-local, align 4
  %v1_ffd4 = add i32 %v3_ffd0, 1
  store i32 %v1_ffd4, i32* %r2.global-to-local, align 4
  %v3_ffd8 = icmp ugt i32 %v1_ffd4, 1023
  store i1 %v3_ffd8, i1* %cpsr_c.global-to-local, align 1
  %v8_ffd8 = icmp eq i32 %v1_ffd4, 1024
  store i1 %v8_ffd8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ffd4, i32* %stack_var_-52, align 4
  %v6_ffe0 = icmp slt i32 %v1_ffd4, 1024
  br i1 %v6_ffe0, label %dec_label_pc_ffe4, label %dec_label_pc_1008c

dec_label_pc_ffe4:                                ; preds = %bb310, %dec_label_pc_ff6c
  %v0_fff0 = phi i32 [ %v1_ffd4, %bb310 ], [ %v0_ff6c, %dec_label_pc_ff6c ]
  store i32 ptrtoint (i32* @global_var_1d270.119 to i32), i32* %r0.global-to-local, align 4
  %v3_ffe8 = mul i32 %v0_fff0, 256
  store i32 %v3_ffe8, i32* %r3.global-to-local, align 4
  %v2_ffec = load i32, i32* @global_var_1d270.119, align 4
  store i32 %v2_ffec, i32* %r1.global-to-local, align 4
  %v2_fff4 = mul i32 %v0_fff0, 288
  store i32 %v2_fff4, i32* %r2.global-to-local, align 4
  %v2_fff8 = add i32 %v2_ffec, %v2_fff4
  store i32 %v2_fff8, i32* @r4, align 4
  %v1_fffc = add i32 %v2_fff8, 12
  %v2_fffc = inttoptr i32 %v1_fffc to i32*
  %v3_fffc = load i32, i32* %v2_fffc, align 4
  store i32 %v3_fffc, i32* %ip.global-to-local, align 4
  %v2_10000 = icmp ne i32 %v3_fffc, 0
  store i1 %v2_10000, i1* %cpsr_c.global-to-local, align 1
  %v7_10000 = icmp eq i32 %v3_fffc, 1
  store i1 %v7_10000, i1* %cpsr_z.global-to-local, align 1
  %v2_10004 = xor i1 %v7_10000, true
  %v3_10004 = and i1 %v2_10000, %v2_10004
  br i1 %v3_10004, label %dec_label_pc_ff80, label %dec_label_pc_1000c

dec_label_pc_1000c:                               ; preds = %dec_label_pc_ffe4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1000c = icmp eq i32 %v3_fffc, 0
  store i1 %v2_1000c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1000c, label %bb310, label %dec_label_pc_ff80

dec_label_pc_1001c:                               ; preds = %dec_label_pc_ff98
  store i32 %v3_1001c, i32* %r0.global-to-local, align 4
  %v3_10020 = udiv i32 %v3_1001c, 32
  %v3_10024 = mul nuw nsw i32 %v3_10020, 4
  store i32 %v2_10028, i32* %lr.global-to-local, align 4
  %v2_1002c = add i32 %v3_10024, %v2_10028
  store i32 %v2_1002c, i32* %r3.global-to-local, align 4
  %v1_10030 = add i32 %v2_1002c, -312
  %v2_10030 = inttoptr i32 %v1_10030 to i32*
  %v3_10030 = load i32, i32* %v2_10030, align 4
  %v1_10034 = urem i32 %v3_1001c, 32
  store i32 %v1_10034, i32* %r1.global-to-local, align 4
  %v7_10038 = shl i32 1, %v1_10034
  %v8_10038 = or i32 %v3_10030, %v7_10038
  store i32 %v8_10038, i32* %r2.global-to-local, align 4
  %v0_1003c = load i32, i32* @r5, align 4
  %v3_1003c = icmp uge i32 %v0_1003c, %v3_1001c
  store i1 %v3_1003c, i1* %cpsr_c.global-to-local, align 1
  %v9_1003c = icmp eq i32 %v0_1003c, %v3_1001c
  store i1 %v9_1003c, i1* %cpsr_z.global-to-local, align 1
  %v5_10040 = icmp slt i32 %v0_1003c, %v3_1001c
  br i1 %v5_10040, label %bb311, label %bb312

bb311:                                            ; preds = %dec_label_pc_1001c
  store i32 %v3_1001c, i32* @r5, align 4
  br label %bb312

bb312:                                            ; preds = %dec_label_pc_1001c, %bb311
  store i32 %v8_10038, i32* %v2_10030, align 4
  br label %bb310

dec_label_pc_1004c:                               ; preds = %dec_label_pc_ff80
  %v1_1004c = add i32 %v2_fff8, 4
  %v2_1004c = inttoptr i32 %v1_1004c to i32*
  %v3_1004c = load i32, i32* %v2_1004c, align 4
  store i32 %v3_1004c, i32* %r0.global-to-local, align 4
  %v1_10050 = call i32 @function_11c68(i32 %v3_1004c)
  store i32 %v1_10050, i32* %r0.global-to-local, align 4
  %v0_10054 = load i32, i32* @r4, align 4
  %v1_10054 = add i32 %v0_10054, 12
  %v2_10054 = inttoptr i32 %v1_10054 to i32*
  %v3_10054 = load i32, i32* %v2_10054, align 4
  store i32 %v3_10054, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1005c = icmp ugt i32 %v3_10054, 1
  store i1 %v2_1005c, i1* %cpsr_c.global-to-local, align 1
  %v7_1005c = icmp eq i32 %v3_10054, 2
  store i1 %v7_1005c, i1* %cpsr_z.global-to-local, align 1
  %v2_10060 = add i32 %v0_10054, 4
  %v3_10060 = inttoptr i32 %v2_10060 to i32*
  store i32 -1, i32* %v3_10060, align 4
  %v2_10064 = xor i1 %v2_1005c, true
  %v3_10064 = or i1 %v7_1005c, %v2_10064
  br i1 %v3_10064, label %dec_label_pc_10cac, label %dec_label_pc_10068

dec_label_pc_10068:                               ; preds = %dec_label_pc_1004c
  %v0_10068 = load i32, i32* @r4, align 4
  %v1_10068 = add i32 %v0_10068, 284
  %v2_10068 = inttoptr i32 %v1_10068 to i8*
  %v3_10068 = load i8, i8* %v2_10068, align 1
  %v4_10068 = zext i8 %v3_10068 to i32
  %v1_1006c = add nuw nsw i32 %v4_10068, 1
  %v1_10070 = urem i32 %v1_1006c, 256
  store i32 %v1_10070, i32* %r3.global-to-local, align 4
  %v2_10074 = icmp ugt i32 %v1_10070, 9
  store i1 %v2_10074, i1* %cpsr_c.global-to-local, align 1
  %v7_10074 = icmp eq i32 %v1_10070, 10
  store i1 %v7_10074, i1* %cpsr_z.global-to-local, align 1
  %v1_10078 = trunc i32 %v1_1006c to i8
  store i8 %v1_10078, i8* %v2_10068, align 1
  %v0_1007c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1007c, label %dec_label_pc_10cac, label %dec_label_pc_10080

dec_label_pc_10080:                               ; preds = %dec_label_pc_10068
  %v0_10080 = load i32, i32* @r4, align 4
  store i32 %v0_10080, i32* @r0, align 4
  %v0_10084 = call i32 @function_e260()
  store i32 %v0_10084, i32* %r0.global-to-local, align 4
  br label %bb310

dec_label_pc_1008c:                               ; preds = %bb310
  store i32 1, i32* %stack_var_-64, align 4
  %v0_10094 = load i32, i32* @r6, align 4
  %v1_10094 = load i32, i32* @r5, align 4
  %v3_10094 = icmp uge i32 %v0_10094, %v1_10094
  store i1 %v3_10094, i1* %cpsr_c.global-to-local, align 1
  %v9_10094 = icmp eq i32 %v0_10094, %v1_10094
  store i1 %v9_10094, i1* %cpsr_z.global-to-local, align 1
  %v5_10098 = icmp slt i32 %v0_10094, %v1_10094
  %storemerge76 = select i1 %v5_10098, i32 %v1_10094, i32 %v0_10094
  %v2_100ac = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_100ac, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_100b4 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_100b4, i32* %ip.global-to-local, align 4
  %v2_100b8 = ptrtoint i32* %stack_var_-220 to i32
  store i32 %v2_100b8, i32* %r1.global-to-local, align 4
  %v1_100bc = add i32 %storemerge76, 1
  store i32 %v1_100bc, i32* %r0.global-to-local, align 4
  %v5_100c8 = call i32 @function_11e88(i32 %v1_100bc, i32 %v2_100b8, i32 %v2_100ac, i32 0, i32 %v2_100b4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100d0 = call i32 @function_11eb8(i32* null)
  store i32 ptrtoint (i32* @global_var_1d210.106 to i32), i32* %lr.global-to-local, align 4
  store i32 %v2_100d0, i32* @global_var_1d210.106, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v2_10298 = inttoptr i32 %stack_var_-1868.0 to i32*
  %v2_10340 = ptrtoint i32* %stack_var_-41 to i32
  %v2_10b30 = ptrtoint i32* %stack_var_-84 to i32
  %v2_10b38 = ptrtoint i32* %stack_var_-73 to i32
  %v2_105a8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1065c = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_10124

dec_label_pc_100ec:                               ; preds = %dec_label_pc_10148, %dec_label_pc_10cbc
  %v0_10100 = phi i32 [ %v3_1013c, %dec_label_pc_10148 ], [ %v0_100ec.pre, %dec_label_pc_10cbc ]
  %v3_100ec = udiv i32 %v0_10100, 32
  %v3_100f0 = mul nuw nsw i32 %v3_100ec, 4
  store i32 %v2_10028, i32* @lr, align 4
  %v2_100f8 = add i32 %v3_100f0, %v2_10028
  store i32 %v2_100f8, i32* %r3.global-to-local, align 4
  %v1_100fc = add i32 %v2_100f8, -184
  %v2_100fc = inttoptr i32 %v1_100fc to i32*
  %v3_100fc = load i32, i32* %v2_100fc, align 4
  %v1_10100 = urem i32 %v0_10100, 32
  store i32 %v1_10100, i32* %r1.global-to-local, align 4
  %v2_10104 = add nsw i32 %v1_10100, -1
  %v3_10104 = shl i32 1, %v2_10104
  %v4_10104 = and i32 %v3_10104, %v3_100fc
  %v5_10104 = icmp ne i32 %v4_10104, 0
  store i1 %v5_10104, i1* %cpsr_c.global-to-local, align 1
  %v6_10104 = lshr i32 %v3_100fc, %v1_10100
  store i32 %v6_10104, i32* %r2.global-to-local, align 4
  %v1_10108 = urem i32 %v6_10104, 2
  %v2_10108 = icmp eq i32 %v1_10108, 0
  store i1 %v2_10108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10108, label %dec_label_pc_10110, label %dec_label_pc_10274.preheader

dec_label_pc_10274.preheader:                     ; preds = %dec_label_pc_100ec
  %v0_10274102 = load i32, i32* @r5, align 4
  %v1_10274103 = add i32 %v0_10274102, 12
  %v2_10274104 = inttoptr i32 %v1_10274103 to i32*
  %v3_10274105 = load i32, i32* %v2_10274104, align 4
  store i32 %v3_10274105, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10278101107 = icmp eq i32 %v3_10274105, 0
  store i1 %v2_10278101107, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10278101107, label %dec_label_pc_10110, label %dec_label_pc_10280.lr.ph

dec_label_pc_10110:                               ; preds = %dec_label_pc_10274.loopexit, %dec_label_pc_10274.preheader, %dec_label_pc_100ec, %bb347, %dec_label_pc_10bd8, %dec_label_pc_10124, %dec_label_pc_10cd0, %dec_label_pc_10c1c
  %v3_10110 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10110, i32* %r3.global-to-local, align 4
  %v1_10114 = add i32 %v3_10110, 1
  store i32 %v1_10114, i32* %r2.global-to-local, align 4
  %v3_10118 = icmp ugt i32 %v1_10114, 1023
  store i1 %v3_10118, i1* %cpsr_c.global-to-local, align 1
  %v8_10118 = icmp eq i32 %v1_10114, 1024
  store i1 %v8_10118, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10114, i32* %stack_var_-52, align 4
  %v6_10120 = icmp slt i32 %v1_10114, 1024
  br i1 %v6_10120, label %dec_label_pc_10124, label %dec_label_pc_fab8

dec_label_pc_10124:                               ; preds = %dec_label_pc_10110, %dec_label_pc_1008c
  %v0_10130 = phi i32 [ %v1_10114, %dec_label_pc_10110 ], [ 0, %dec_label_pc_1008c ]
  store i32 ptrtoint (i32* @global_var_1d270.119 to i32), i32* %ip.global-to-local, align 4
  %v3_10128 = mul i32 %v0_10130, 256
  store i32 %v3_10128, i32* %r3.global-to-local, align 4
  %v2_1012c = load i32, i32* @global_var_1d270.119, align 4
  store i32 %v2_1012c, i32* %r1.global-to-local, align 4
  %v2_10134 = mul i32 %v0_10130, 288
  store i32 %v2_10134, i32* %r2.global-to-local, align 4
  %v2_10138 = add i32 %v2_1012c, %v2_10134
  store i32 %v2_10138, i32* @r5, align 4
  %v1_1013c = add i32 %v2_10138, 4
  %v2_1013c = inttoptr i32 %v1_1013c to i32*
  %v3_1013c = load i32, i32* %v2_1013c, align 4
  store i32 %v3_1013c, i32* @r4, align 4
  %v2_10140 = icmp eq i32 %v3_1013c, -1
  store i1 %v2_10140, i1* %cpsr_c.global-to-local, align 1
  %v7_10140 = icmp eq i32 %v3_1013c, -1
  store i1 %v7_10140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10140, label %dec_label_pc_10110, label %dec_label_pc_10148

dec_label_pc_10148:                               ; preds = %dec_label_pc_10124
  %v3_10148 = udiv i32 %v3_1013c, 32
  %v3_1014c = mul nuw nsw i32 %v3_10148, 4
  store i32 %v2_10028, i32* %lr.global-to-local, align 4
  %v2_10154 = add i32 %v3_1014c, %v2_10028
  store i32 %v2_10154, i32* %r3.global-to-local, align 4
  %v1_10158 = add i32 %v2_10154, -312
  %v2_10158 = inttoptr i32 %v1_10158 to i32*
  %v3_10158 = load i32, i32* %v2_10158, align 4
  %v1_1015c = urem i32 %v3_1013c, 32
  store i32 %v1_1015c, i32* %r1.global-to-local, align 4
  %v2_10160 = add nsw i32 %v1_1015c, -1
  %v3_10160 = shl i32 1, %v2_10160
  %v4_10160 = and i32 %v3_10158, %v3_10160
  %v5_10160 = icmp ne i32 %v4_10160, 0
  store i1 %v5_10160, i1* %cpsr_c.global-to-local, align 1
  %v6_10160 = lshr i32 %v3_10158, %v1_1015c
  store i32 %v6_10160, i32* %r2.global-to-local, align 4
  %v1_10164 = urem i32 %v6_10160, 2
  %v2_10164 = icmp eq i32 %v1_10164, 0
  store i1 %v2_10164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10164, label %dec_label_pc_100ec, label %dec_label_pc_1016c

dec_label_pc_1016c:                               ; preds = %dec_label_pc_10148
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  store i32 %v2_1065c, i32* %r3.global-to-local, align 4
  store i32 %v2_105a8, i32* %ip.global-to-local, align 4
  store i32 %v3_1013c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v6_1019c = call i32 @function_12364(i32 %v3_1013c, i32 1, i32 4, i32* nonnull %stack_var_-48, i32 %v2_105a8)
  %v3_101a0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_101a0, i32* %r3.global-to-local, align 4
  %v2_101a4 = or i32 %v3_101a0, %v6_1019c
  store i32 %v2_101a4, i32* %r0.global-to-local, align 4
  %v4_101a4 = icmp eq i32 %v2_101a4, 0
  store i1 %v4_101a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_101a4, label %dec_label_pc_101ac, label %dec_label_pc_10cd0

dec_label_pc_101ac:                               ; preds = %dec_label_pc_1016c
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_101b0 = load i32, i32* @r5, align 4
  %v2_101b0 = add i32 %v1_101b0, 12
  %v3_101b0 = inttoptr i32 %v2_101b0 to i32*
  store i32 2, i32* %v3_101b0, align 4
  %v0_101b4 = call i32 @function_db88()
  store i32 %v0_101b4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1d20c.112 to i32), i32* %r3.global-to-local, align 4
  %v3_101bc = load i8, i8* @global_var_1d20d.113, align 1
  %v4_101bc = zext i8 %v3_101bc to i32
  store i32 %v4_101bc, i32* %r2.global-to-local, align 4
  %v2_101c0 = load i8, i8* bitcast (i8** @global_var_1d20c.112 to i8*), align 4
  %v3_101c0 = zext i8 %v2_101c0 to i32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_101c4 = mul nuw nsw i32 %v4_101bc, 256
  %v5_101c4 = or i32 %v3_101c0, %v4_101c4
  store i32 %v5_101c4, i32* %r1.global-to-local, align 4
  %v2_101c8 = call i32 @function_119f0(i32 %v0_101b4, i32 %v5_101c4)
  store i32 ptrtoint (i32* @global_var_1d1dc.108 to i32), i32* %r3.global-to-local, align 4
  %v2_101d0 = load i32, i32* @global_var_1d1dc.108, align 4
  store i32 %v2_101d0, i32* %lr.global-to-local, align 4
  %v1_101d8 = load i32, i32* @r6, align 4
  %v9_101d8 = icmp eq i32 %v2_101d0, %v1_101d8
  store i1 %v9_101d8, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_101dc = urem i32 %v2_101c8, 65536
  store i32 %v3_101dc, i32* %r0.global-to-local, align 4
  %v7_101e0 = icmp sgt i32 %v2_101d0, %v1_101d8
  br i1 %v7_101e0, label %dec_label_pc_101e4, label %dec_label_pc_10cb8

dec_label_pc_101e4:                               ; preds = %dec_label_pc_101ac
  %v2_101e8 = load i32, i32* @global_var_1d208.110, align 4
  store i32 %v2_101e8, i32* %r3.global-to-local, align 4
  store i32 %v1_101d8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10204

dec_label_pc_101f4:                               ; preds = %dec_label_pc_1021c, %dec_label_pc_10204
  %v1_101f4 = add i32 %v0_101f4, 1
  store i32 %v1_101f4, i32* %ip.global-to-local, align 4
  %v3_101f8 = icmp uge i32 %v1_101f4, %v2_101d0
  store i1 %v3_101f8, i1* %cpsr_c.global-to-local, align 1
  %v9_101f8 = icmp eq i32 %v1_101f4, %v2_101d0
  store i1 %v9_101f8, i1* %cpsr_z.global-to-local, align 1
  %v1_101fc = add i32 %v0_101fc, 16
  store i32 %v1_101fc, i32* %r3.global-to-local, align 4
  br i1 %v9_101f8, label %dec_label_pc_10cb8, label %dec_label_pc_10204

dec_label_pc_10204:                               ; preds = %dec_label_pc_101f4, %dec_label_pc_101e4
  %v0_101f4 = phi i32 [ %v1_101f4, %dec_label_pc_101f4 ], [ %v1_101d8, %dec_label_pc_101e4 ]
  %v0_101fc = phi i32 [ %v1_101fc, %dec_label_pc_101f4 ], [ %v2_101e8, %dec_label_pc_101e4 ]
  store i32 %v0_101fc, i32* %r1.global-to-local, align 4
  %v1_10208 = add i32 %v0_101fc, 9
  %v2_10208 = inttoptr i32 %v1_10208 to i8*
  %v3_10208 = load i8, i8* %v2_10208, align 1
  %v4_10208 = zext i8 %v3_10208 to i32
  store i32 %v4_10208, i32* %r2.global-to-local, align 4
  %v1_1020c = add i32 %v0_101fc, 8
  %v2_1020c = inttoptr i32 %v1_1020c to i8*
  %v3_1020c = load i8, i8* %v2_1020c, align 1
  %v4_1020c = zext i8 %v3_1020c to i32
  %v4_10210 = mul nuw nsw i32 %v4_10208, 256
  %v5_10210 = or i32 %v4_1020c, %v4_10210
  store i32 %v5_10210, i32* %r3.global-to-local, align 4
  %v3_10214 = icmp uge i32 %v5_10210, %v3_101dc
  store i1 %v3_10214, i1* %cpsr_c.global-to-local, align 1
  %v9_10214 = icmp eq i32 %v5_10210, %v3_101dc
  store i1 %v9_10214, i1* %cpsr_z.global-to-local, align 1
  %v2_10218 = xor i1 %v9_10214, true
  %v3_10218 = and i1 %v3_10214, %v2_10218
  br i1 %v3_10218, label %dec_label_pc_101f4, label %dec_label_pc_1021c

dec_label_pc_1021c:                               ; preds = %dec_label_pc_10204
  %v1_1021c = add i32 %v0_101fc, 10
  %v2_1021c = inttoptr i32 %v1_1021c to i8*
  %v3_1021c = load i8, i8* %v2_1021c, align 1
  %v4_1021c = zext i8 %v3_1021c to i32
  store i32 %v4_1021c, i32* %r3.global-to-local, align 4
  %v1_10220 = add i32 %v0_101fc, 11
  %v2_10220 = inttoptr i32 %v1_10220 to i8*
  %v3_10220 = load i8, i8* %v2_10220, align 1
  %v4_10220 = zext i8 %v3_10220 to i32
  store i32 %v4_10220, i32* %r2.global-to-local, align 4
  %v4_10224 = mul nuw nsw i32 %v4_10220, 256
  %v5_10224 = or i32 %v4_10224, %v4_1021c
  store i32 %v5_10224, i32* %r3.global-to-local, align 4
  %v3_10228 = icmp uge i32 %v5_10224, %v3_101dc
  store i1 %v3_10228, i1* %cpsr_c.global-to-local, align 1
  %v9_10228 = icmp eq i32 %v5_10224, %v3_101dc
  store i1 %v9_10228, i1* %cpsr_z.global-to-local, align 1
  %v2_1022c = xor i1 %v3_10228, true
  %v3_1022c = or i1 %v9_10228, %v2_1022c
  br i1 %v3_1022c, label %dec_label_pc_101f4, label %dec_label_pc_10cbc

dec_label_pc_10234:                               ; preds = %dec_label_pc_10444, %dec_label_pc_10418, %dec_label_pc_10460
  store i32 %v3_10418, i32* %r1.global-to-local, align 4
  %v0_10238 = load i32, i32* @sb, align 4
  store i32 %v0_10238, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14918.598 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_10244 = call i32 @function_114ac(i32 %v0_10238, i32 %v3_10418, i32 ptrtoint ([5 x i8]* @global_var_14918.598 to i32), i32 4)
  store i32 %v5_10244, i32* %r0.global-to-local, align 4
  %v3_10248 = icmp eq i32 %v5_10244, -1
  store i1 %v3_10248, i1* %cpsr_c.global-to-local, align 1
  %v8_10248 = icmp eq i32 %v5_10244, -1
  store i1 %v8_10248, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_10244, i32* @r7, align 4
  br i1 %v3_10248, label %dec_label_pc_10254, label %dec_label_pc_1046c

dec_label_pc_10254:                               ; preds = %dec_label_pc_10234
  %v0_10254 = load i32, i32* @sb, align 4
  store i32 %v0_10254, i32* %r0.global-to-local, align 4
  %v0_10258 = load i32, i32* @r5, align 4
  %v1_10258 = add i32 %v0_10258, 24
  %v2_10258 = inttoptr i32 %v1_10258 to i32*
  %v3_10258 = load i32, i32* %v2_10258, align 4
  store i32 %v3_10258, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_14920.600 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_10264 = call i32 @function_114ac(i32 %v0_10254, i32 %v3_10258, i32 ptrtoint ([6 x i8]* @global_var_14920.600 to i32), i32 5)
  store i32 %v5_10264, i32* %r0.global-to-local, align 4
  %v3_10268 = icmp eq i32 %v5_10264, -1
  store i1 %v3_10268, i1* %cpsr_c.global-to-local, align 1
  %v8_10268 = icmp eq i32 %v5_10264, -1
  store i1 %v8_10268, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_10264, i32* @r7, align 4
  br i1 %v3_10268, label %dec_label_pc_10274.loopexit, label %dec_label_pc_1046c

dec_label_pc_10274.loopexit:                      ; preds = %dec_label_pc_10408, %dec_label_pc_1094c, %dec_label_pc_102f8, %dec_label_pc_10254, %dec_label_pc_10c28
  %v0_10274 = load i32, i32* @r5, align 4
  %v1_10274 = add i32 %v0_10274, 12
  %v2_10274 = inttoptr i32 %v1_10274 to i32*
  %v3_10274 = load i32, i32* %v2_10274, align 4
  store i32 %v3_10274, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10278101 = icmp eq i32 %v3_10274, 0
  store i1 %v2_10278101, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10278101, label %dec_label_pc_10110, label %dec_label_pc_10280.lr.ph

dec_label_pc_10280.lr.ph:                         ; preds = %dec_label_pc_10274.preheader, %dec_label_pc_10274.loopexit
  %v0_10280134 = phi i32 [ %v0_10274, %dec_label_pc_10274.loopexit ], [ %v0_10274102, %dec_label_pc_10274.preheader ]
  br label %dec_label_pc_10280

dec_label_pc_10278thread-pre-split.thread:        ; preds = %dec_label_pc_10540, %dec_label_pc_105f4, %dec_label_pc_106a8, %dec_label_pc_1075c, %dec_label_pc_10a6c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10280

dec_label_pc_10278thread-pre-split:               ; preds = %dec_label_pc_10588, %dec_label_pc_1063c, %dec_label_pc_106f0, %dec_label_pc_108a8, %dec_label_pc_10ab4, %dec_label_pc_10a98, %dec_label_pc_106d4, %dec_label_pc_1088c, %dec_label_pc_10620, %dec_label_pc_1056c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10280

dec_label_pc_10280:                               ; preds = %dec_label_pc_10278thread-pre-split.thread, %dec_label_pc_10278thread-pre-split, %dec_label_pc_10280.lr.ph
  %v0_10c74 = phi i32 [ %v0_10280134, %dec_label_pc_10280.lr.ph ], [ %v0_102f8, %dec_label_pc_10278thread-pre-split ], [ %v0_102f8, %dec_label_pc_10278thread-pre-split.thread ]
  %v1_10280 = add i32 %v0_10c74, 24
  %v2_10280 = inttoptr i32 %v1_10280 to i32*
  %v3_10280 = load i32, i32* %v2_10280, align 4
  store i32 %v3_10280, i32* %r3.global-to-local, align 4
  %v2_10284 = icmp ugt i32 %v3_10280, 255
  store i1 %v2_10284, i1* %cpsr_c.global-to-local, align 1
  %v7_10284 = icmp eq i32 %v3_10280, 256
  store i1 %v7_10284, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_10c74, 28
  store i32 %.pre, i32* @sb, align 4
  br i1 %v7_10284, label %dec_label_pc_10c74, label %dec_label_pc_10290

dec_label_pc_10290:                               ; preds = %dec_label_pc_10280, %dec_label_pc_10c74
  store i32 %stack_var_-1868.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %v2_10298, align 4
  %v0_1029c = load i32, i32* @r5, align 4
  %v1_1029c = add i32 %v0_1029c, 24
  %v2_1029c = inttoptr i32 %v1_1029c to i32*
  %v3_1029c = load i32, i32* %v2_1029c, align 4
  store i32 %v3_1029c, i32* %r2.global-to-local, align 4
  %v0_102a0 = load i32, i32* @sb, align 4
  %v2_102a0 = add i32 %v0_102a0, %v3_1029c
  store i32 %v2_102a0, i32* @r4, align 4
  %v1_102a4 = add i32 %v0_1029c, 4
  %v2_102a4 = inttoptr i32 %v1_102a4 to i32*
  %v3_102a4 = load i32, i32* %v2_102a4, align 4
  store i32 %v3_102a4, i32* %r0.global-to-local, align 4
  %v1_102a8 = sub i32 256, %v3_1029c
  store i32 %v1_102a8, i32* %r2.global-to-local, align 4
  store i32 %v2_102a0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_102b4 = inttoptr i32 %v2_102a0 to i32*
  %v5_102b4 = call i32 @function_123c0(i32 %v3_102a4, i32* %v4_102b4, i32 %v1_102a8, i32 16384)
  store i32 %v5_102b4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102b8 = icmp eq i32 %v5_102b4, 0
  store i1 %v2_102b8, i1* %cpsr_z.global-to-local, align 1
  %tmp313 = icmp slt i32 %v5_102b4, 1
  br i1 %tmp313, label %dec_label_pc_10bcc, label %dec_label_pc_102c0

dec_label_pc_102c0:                               ; preds = %dec_label_pc_10290
  %v0_102c0 = load i32, i32* @r6, align 4
  store i32 %v0_102c0, i32* %r2.global-to-local, align 4
  store i32 65, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_102c8

dec_label_pc_102c8:                               ; preds = %bb315, %dec_label_pc_102c0
  %v3_102d0 = phi i32 [ %v1_102d4, %bb315 ], [ %v0_102c0, %dec_label_pc_102c0 ]
  %v1_102c8 = load i32, i32* @r4, align 4
  %v2_102c8 = add i32 %v1_102c8, %v3_102d0
  %v3_102c8 = inttoptr i32 %v2_102c8 to i8*
  %v4_102c8 = load i8, i8* %v3_102c8, align 1
  %v6_102c8 = zext i8 %v4_102c8 to i32
  store i32 %v6_102c8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102cc = icmp eq i8 %v4_102c8, 0
  store i1 %v2_102cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102cc, label %bb314, label %bb315

bb314:                                            ; preds = %dec_label_pc_102c8
  %v1_102d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_102d0 = trunc i32 %v1_102d0 to i8
  store i8 %v2_102d0, i8* %v3_102c8, align 1
  %v0_102d4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb315

bb315:                                            ; preds = %dec_label_pc_102c8, %bb314
  %v0_102d4 = phi i32 [ %v3_102d0, %dec_label_pc_102c8 ], [ %v0_102d4.pre, %bb314 ]
  %v1_102d4 = add i32 %v0_102d4, 1
  store i32 %v1_102d4, i32* %r2.global-to-local, align 4
  %v3_102d8 = icmp uge i32 %v5_102b4, %v1_102d4
  store i1 %v3_102d8, i1* %cpsr_c.global-to-local, align 1
  %v9_102d8 = icmp eq i32 %v5_102b4, %v1_102d4
  store i1 %v9_102d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_102d8, label %dec_label_pc_102e0, label %dec_label_pc_102c8

dec_label_pc_102e0:                               ; preds = %bb315, %dec_label_pc_10bd0
  store i32 ptrtoint (i32* @global_var_1d210.106 to i32), i32* @lr, align 4
  %v0_102e4 = load i32, i32* @r5, align 4
  %v1_102e4 = add i32 %v0_102e4, 24
  %v2_102e4 = inttoptr i32 %v1_102e4 to i32*
  %v3_102e4 = load i32, i32* %v2_102e4, align 4
  %v2_102e8 = load i32, i32* @global_var_1d210.106, align 4
  store i32 %v2_102e8, i32* %r3.global-to-local, align 4
  %v2_102ec = add i32 %v3_102e4, %v5_102b4
  store i32 %v2_102ec, i32* %ip.global-to-local, align 4
  store i32 %v2_102ec, i32* %v2_102e4, align 4
  %v0_102f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_102f4 = load i32, i32* @r5, align 4
  %v2_102f4 = add i32 %v1_102f4, 8
  %v3_102f4 = inttoptr i32 %v2_102f4 to i32*
  store i32 %v0_102f4, i32* %v3_102f4, align 4
  br label %dec_label_pc_102f8

dec_label_pc_102f8:                               ; preds = %dec_label_pc_10a48, %dec_label_pc_102e0
  %v0_102f8 = load i32, i32* @r5, align 4
  %v1_102f8 = add i32 %v0_102f8, 12
  %v2_102f8 = inttoptr i32 %v1_102f8 to i32*
  %v3_102f8 = load i32, i32* %v2_102f8, align 4
  store i32 %v3_102f8, i32* %r2.global-to-local, align 4
  %v1_102fc = add i32 %v3_102f8, -2
  store i32 %v1_102fc, i32* %r3.global-to-local, align 4
  %v7_10300 = icmp eq i32 %v1_102fc, 8
  store i1 %v7_10300, i1* %cpsr_z.global-to-local, align 1
  %v5_10304 = and i32 %v1_102fc, 1073741824
  %v6_10304 = icmp ne i32 %v5_10304, 0
  store i1 %v6_10304, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_102f8, label %dec_label_pc_10274.loopexit [
    i32 2, label %dec_label_pc_10330
    i32 3, label %dec_label_pc_10418
    i32 4, label %dec_label_pc_104b0
    i32 5, label %dec_label_pc_10540
    i32 6, label %dec_label_pc_105f4
    i32 7, label %dec_label_pc_1075c
    i32 8, label %dec_label_pc_106a8
    i32 9, label %dec_label_pc_10a6c
    i32 10, label %dec_label_pc_10914
  ]

dec_label_pc_10330:                               ; preds = %dec_label_pc_102f8
  %v1_10334 = add i32 %v0_102f8, 24
  %v2_10334 = inttoptr i32 %v1_10334 to i32*
  %v3_10334 = load i32, i32* %v2_10334, align 4
  store i32 %v3_10334, i32* %ip.global-to-local, align 4
  %v0_10338 = load i32, i32* @sb, align 4
  store i32 %v0_10338, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v1_10344 = add i32 %v0_102f8, 29
  store i32 %v1_10344, i32* @r4, align 4
  store i32 -3, i32* %sl.global-to-local, align 4
  store i32 -4, i32* @r8, align 4
  %v3_1035092 = icmp eq i32 %v3_10334, 0
  store i1 %v3_1035092, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_1035092, i1* %cpsr_z.global-to-local, align 1
  %v6_1035499 = icmp sgt i32 %v3_10334, 0
  br i1 %v6_1035499, label %dec_label_pc_10358.preheader, label %dec_label_pc_103f8

dec_label_pc_10350.loopexit:                      ; preds = %dec_label_pc_10370
  %v2_10378 = add i32 %v1_10378, 2
  store i32 %v2_10378, i32* @r6, align 4
  %v2_1037c = add i32 %v1_1037c, 2
  store i32 %v2_1037c, i32* @r4, align 4
  %v2_10380 = add i32 %v1_10380, 2
  store i32 %v2_10380, i32* @r7, align 4
  %v3_10350 = icmp uge i32 %v2_10380, %v1_10350
  store i1 %v3_10350, i1* %cpsr_c.global-to-local, align 1
  %v9_10350 = icmp eq i32 %v2_10380, %v1_10350
  store i1 %v9_10350, i1* %cpsr_z.global-to-local, align 1
  %v6_10354 = icmp slt i32 %v2_10380, %v1_10350
  br i1 %v6_10354, label %dec_label_pc_10358.preheader, label %dec_label_pc_103f8

dec_label_pc_10358.preheader:                     ; preds = %dec_label_pc_10330, %dec_label_pc_10350.loopexit
  %v6_10400170 = phi i32 [ %v6_10400171, %dec_label_pc_10350.loopexit ], [ %v0_102f8, %dec_label_pc_10330 ]
  %v1_10380159 = phi i32 [ %v2_10380, %dec_label_pc_10350.loopexit ], [ 0, %dec_label_pc_10330 ]
  %v1_10378157 = phi i32 [ %v2_10378, %dec_label_pc_10350.loopexit ], [ %v0_10338, %dec_label_pc_10330 ]
  %v1_10364155 = phi i32 [ %v1_10350, %dec_label_pc_10350.loopexit ], [ %v3_10334, %dec_label_pc_10330 ]
  %v0_10358153 = phi i32 [ %v2_1037c, %dec_label_pc_10350.loopexit ], [ %v1_10344, %dec_label_pc_10330 ]
  br label %dec_label_pc_10358

dec_label_pc_10358:                               ; preds = %dec_label_pc_10358.preheader, %dec_label_pc_103d8
  %v6_10400171 = phi i32 [ %v6_10400170, %dec_label_pc_10358.preheader ], [ %v0_103e0, %dec_label_pc_103d8 ]
  %v1_10380 = phi i32 [ %v1_10380159, %dec_label_pc_10358.preheader ], [ %v1_103e4, %dec_label_pc_103d8 ]
  %v1_10378 = phi i32 [ %v1_10378157, %dec_label_pc_10358.preheader ], [ %v1_103ec, %dec_label_pc_103d8 ]
  %v1_10350 = phi i32 [ %v1_10364155, %dec_label_pc_10358.preheader ], [ %v3_103e0, %dec_label_pc_103d8 ]
  %v1_1037c = phi i32 [ %v0_10358153, %dec_label_pc_10358.preheader ], [ %v1_103f0, %dec_label_pc_103d8 ]
  %v1_10358 = add i32 %v1_1037c, -1
  %v2_10358 = inttoptr i32 %v1_10358 to i8*
  %v3_10358 = load i8, i8* %v2_10358, align 1
  %v4_10358 = zext i8 %v3_10358 to i32
  store i32 %v4_10358, i32* %r3.global-to-local, align 4
  %v2_1035c = icmp eq i8 %v3_10358, -1
  store i1 %v2_1035c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1035c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1035c, label %dec_label_pc_10364, label %dec_label_pc_103f8

dec_label_pc_10364:                               ; preds = %dec_label_pc_10358
  %v0_10364 = load i32, i32* @sb, align 4
  %v2_10364 = add i32 %v0_10364, %v1_10350
  store i32 %v2_10364, i32* %r2.global-to-local, align 4
  %v3_10368 = icmp uge i32 %v2_10364, %v1_1037c
  store i1 %v3_10368, i1* %cpsr_c.global-to-local, align 1
  %v9_10368 = icmp eq i32 %v2_10364, %v1_1037c
  store i1 %v9_10368, i1* %cpsr_z.global-to-local, align 1
  %v2_1036c = xor i1 %v3_10368, true
  %v3_1036c = or i1 %v9_10368, %v2_1036c
  br i1 %v3_1036c, label %dec_label_pc_103f8, label %dec_label_pc_10370

dec_label_pc_10370:                               ; preds = %dec_label_pc_10364
  %v1_10370 = inttoptr i32 %v1_1037c to i8*
  %v2_10370 = load i8, i8* %v1_10370, align 1
  %v3_10370 = zext i8 %v2_10370 to i32
  store i32 %v3_10370, i32* %r3.global-to-local, align 4
  %v2_10374 = icmp eq i8 %v2_10370, -1
  store i1 %v2_10374, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10374, label %dec_label_pc_10350.loopexit, label %dec_label_pc_10388

dec_label_pc_10388:                               ; preds = %dec_label_pc_10370
  %v2_10388 = icmp ugt i8 %v2_10370, -4
  store i1 %v2_10388, i1* %cpsr_c.global-to-local, align 1
  %v7_10388 = icmp eq i8 %v2_10370, -3
  store i1 %v7_10388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10388, label %dec_label_pc_10b20, label %dec_label_pc_10390

dec_label_pc_10390:                               ; preds = %dec_label_pc_10388
  %v1_10390 = add i32 %v1_10378, 2
  store i32 %v1_10390, i32* %r3.global-to-local, align 4
  %v3_10394 = icmp uge i32 %v2_10364, %v1_10390
  store i1 %v3_10394, i1* %cpsr_c.global-to-local, align 1
  %v9_10394 = icmp eq i32 %v2_10364, %v1_10390
  store i1 %v9_10394, i1* %cpsr_z.global-to-local, align 1
  %v2_10398 = xor i1 %v3_10394, true
  %v3_10398 = or i1 %v9_10394, %v2_10398
  br i1 %v3_10398, label %dec_label_pc_103f8, label %dec_label_pc_1039c

dec_label_pc_1039c:                               ; preds = %bb345, %dec_label_pc_10b74, %bb344, %dec_label_pc_10390
  %v0_1039c = load i32, i32* @r4, align 4
  %v1_1039c = inttoptr i32 %v0_1039c to i8*
  %v2_1039c = load i8, i8* %v1_1039c, align 1
  %v3_1039c = zext i8 %v2_1039c to i32
  store i32 %v3_1039c, i32* %r3.global-to-local, align 4
  %v2_103a0 = icmp ugt i8 %v2_1039c, -4
  store i1 %v2_103a0, i1* %cpsr_c.global-to-local, align 1
  %v7_103a0 = icmp eq i8 %v2_1039c, -3
  store i1 %v7_103a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103a0, label %bb316, label %dec_label_pc_103ac

bb316:                                            ; preds = %dec_label_pc_1039c
  %v1_103a4 = load i32, i32* @r8, align 4
  %v2_103a4 = trunc i32 %v1_103a4 to i8
  store i8 %v2_103a4, i8* %v1_1039c, align 1
  %v0_103a8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_103a8.pr, label %bb318, label %.dec_label_pc_103ac_crit_edge

.dec_label_pc_103ac_crit_edge:                    ; preds = %bb316
  %v0_103ac.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_103ac

dec_label_pc_103ac:                               ; preds = %.dec_label_pc_103ac_crit_edge, %dec_label_pc_1039c
  %v0_103ac = phi i32 [ %v0_103ac.pre, %.dec_label_pc_103ac_crit_edge ], [ %v3_1039c, %dec_label_pc_1039c ]
  %v2_103ac = icmp ugt i32 %v0_103ac, 250
  store i1 %v2_103ac, i1* %cpsr_c.global-to-local, align 1
  %v7_103ac = icmp eq i32 %v0_103ac, 251
  store i1 %v7_103ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103ac, label %bb317, label %bb318

bb317:                                            ; preds = %dec_label_pc_103ac
  %v1_103b0 = load i32, i32* %sl.global-to-local, align 4
  %v2_103b0 = trunc i32 %v1_103b0 to i8
  %v3_103b0 = load i32, i32* @r4, align 4
  %v4_103b0 = inttoptr i32 %v3_103b0 to i8*
  store i8 %v2_103b0, i8* %v4_103b0, align 1
  br label %bb318

bb318:                                            ; preds = %bb316, %dec_label_pc_103ac, %bb317
  %v0_103b4 = load i32, i32* @r4, align 4
  %v1_103b4 = add i32 %v0_103b4, 1
  %v2_103b4 = inttoptr i32 %v1_103b4 to i8*
  %v3_103b4 = load i8, i8* %v2_103b4, align 1
  %v4_103b4 = zext i8 %v3_103b4 to i32
  store i32 %v4_103b4, i32* %r3.global-to-local, align 4
  %v2_103b8 = icmp ugt i8 %v3_103b4, -4
  store i1 %v2_103b8, i1* %cpsr_c.global-to-local, align 1
  %v7_103b8 = icmp eq i8 %v3_103b4, -3
  store i1 %v7_103b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103b8, label %bb319, label %dec_label_pc_103c4

bb319:                                            ; preds = %bb318
  %v1_103bc = load i32, i32* @r8, align 4
  %v2_103bc = trunc i32 %v1_103bc to i8
  store i8 %v2_103bc, i8* %v2_103b4, align 1
  %v0_103c0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_103c0.pr, label %bb321, label %.dec_label_pc_103c4_crit_edge

.dec_label_pc_103c4_crit_edge:                    ; preds = %bb319
  %v0_103c4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_103c4

dec_label_pc_103c4:                               ; preds = %.dec_label_pc_103c4_crit_edge, %bb318
  %v0_103c4 = phi i32 [ %v0_103c4.pre, %.dec_label_pc_103c4_crit_edge ], [ %v4_103b4, %bb318 ]
  %v2_103c4 = icmp ugt i32 %v0_103c4, 250
  store i1 %v2_103c4, i1* %cpsr_c.global-to-local, align 1
  %v7_103c4 = icmp eq i32 %v0_103c4, 251
  store i1 %v7_103c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103c4, label %bb320, label %bb321

bb320:                                            ; preds = %dec_label_pc_103c4
  %v1_103c8 = load i32, i32* %sl.global-to-local, align 4
  %v2_103c8 = trunc i32 %v1_103c8 to i8
  %v3_103c8 = load i32, i32* @r4, align 4
  %v4_103c8 = add i32 %v3_103c8, 1
  %v5_103c8 = inttoptr i32 %v4_103c8 to i8*
  store i8 %v2_103c8, i8* %v5_103c8, align 1
  br label %bb321

bb321:                                            ; preds = %bb319, %dec_label_pc_103c4, %bb320
  %v0_103cc = load i32, i32* @r5, align 4
  %v1_103cc = add i32 %v0_103cc, 4
  %v2_103cc = inttoptr i32 %v1_103cc to i32*
  %v3_103cc = load i32, i32* %v2_103cc, align 4
  store i32 %v3_103cc, i32* %r0.global-to-local, align 4
  %v0_103d0 = load i32, i32* @r6, align 4
  br label %dec_label_pc_103d8

dec_label_pc_103d8:                               ; preds = %dec_label_pc_10c4c, %bb321
  %v0_103dc = phi i32 [ %v3_10c64, %dec_label_pc_10c4c ], [ %v3_103cc, %bb321 ]
  %storemerge5 = phi i32 [ %v2_10b38, %dec_label_pc_10c4c ], [ %v0_103d0, %bb321 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_10c4c ], [ 3, %bb321 ]
  store i32 %storemerge5, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_103dc = inttoptr i32 %storemerge5 to i32*
  %v5_103dc = call i32 @function_12420(i32 %v0_103dc, i32* %v4_103dc, i32 %storemerge, i32 16384)
  store i32 %v5_103dc, i32* %r0.global-to-local, align 4
  %v0_103e0 = load i32, i32* @r5, align 4
  %v1_103e0 = add i32 %v0_103e0, 24
  %v2_103e0 = inttoptr i32 %v1_103e0 to i32*
  %v3_103e0 = load i32, i32* %v2_103e0, align 4
  store i32 %v3_103e0, i32* %ip.global-to-local, align 4
  %v0_103e4 = load i32, i32* @r7, align 4
  %v1_103e4 = add i32 %v0_103e4, 3
  store i32 %v1_103e4, i32* @r7, align 4
  %v3_103e8 = icmp uge i32 %v1_103e4, %v3_103e0
  store i1 %v3_103e8, i1* %cpsr_c.global-to-local, align 1
  %v9_103e8 = icmp eq i32 %v1_103e4, %v3_103e0
  store i1 %v9_103e8, i1* %cpsr_z.global-to-local, align 1
  %v0_103ec = load i32, i32* @r6, align 4
  %v1_103ec = add i32 %v0_103ec, 3
  store i32 %v1_103ec, i32* @r6, align 4
  %v0_103f0 = load i32, i32* @r4, align 4
  %v1_103f0 = add i32 %v0_103f0, 3
  store i32 %v1_103f0, i32* @r4, align 4
  %v5_103f4 = icmp slt i32 %v1_103e4, %v3_103e0
  br i1 %v5_103f4, label %dec_label_pc_10358, label %dec_label_pc_103f8

dec_label_pc_103f8:                               ; preds = %dec_label_pc_10350.loopexit, %dec_label_pc_10358, %dec_label_pc_103d8, %dec_label_pc_10390, %dec_label_pc_10364, %dec_label_pc_10330, %dec_label_pc_10b20.dec_label_pc_103f8.loopexit_crit_edge
  %v6_10400 = phi i32 [ %v0_10b44, %dec_label_pc_10b20.dec_label_pc_103f8.loopexit_crit_edge ], [ %v0_102f8, %dec_label_pc_10330 ], [ %v6_10400171, %dec_label_pc_10358 ], [ %v0_103e0, %dec_label_pc_103d8 ], [ %v6_10400171, %dec_label_pc_10390 ], [ %v6_10400171, %dec_label_pc_10364 ], [ %v6_10400171, %dec_label_pc_10350.loopexit ]
  %v0_10408.pre = phi i32 [ %v0_103f8.pre.pre, %dec_label_pc_10b20.dec_label_pc_103f8.loopexit_crit_edge ], [ 0, %dec_label_pc_10330 ], [ %v1_10380, %dec_label_pc_10358 ], [ %v1_103e4, %dec_label_pc_103d8 ], [ %v1_10380, %dec_label_pc_10390 ], [ %v1_10380, %dec_label_pc_10364 ], [ %v2_10380, %dec_label_pc_10350.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103f8 = icmp eq i32 %v0_10408.pre, 0
  store i1 %v2_103f8, i1* %cpsr_z.global-to-local, align 1
  %tmp322 = icmp slt i32 %v0_10408.pre, 1
  br i1 %tmp322, label %dec_label_pc_10408, label %.thread206

.thread206:                                       ; preds = %dec_label_pc_103f8
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_10400 = add i32 %v6_10400, 12
  %v8_10400 = inttoptr i32 %v7_10400 to i32*
  store i32 3, i32* %v8_10400, align 4
  br label %dec_label_pc_10a48

dec_label_pc_10408:                               ; preds = %dec_label_pc_103f8, %dec_label_pc_10ac0, %dec_label_pc_10998, %dec_label_pc_108b4, %dec_label_pc_106fc, %dec_label_pc_10648, %dec_label_pc_10594, %dec_label_pc_104fc, %dec_label_pc_1046c
  %v0_10408 = phi i32 [ %v1_10ab4, %dec_label_pc_10ac0 ], [ %v0_10990, %dec_label_pc_10998 ], [ %v1_108a8, %dec_label_pc_108b4 ], [ %v1_106f0, %dec_label_pc_106fc ], [ %v1_1063c, %dec_label_pc_10648 ], [ %v1_10588, %dec_label_pc_10594 ], [ %v0_104fc, %dec_label_pc_104fc ], [ %v0_1046c, %dec_label_pc_1046c ], [ %v0_10408.pre, %dec_label_pc_103f8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10408 = icmp eq i32 %v0_10408, 0
  store i1 %v2_10408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10408, label %dec_label_pc_10274.loopexit, label %dec_label_pc_10410

dec_label_pc_10410:                               ; preds = %dec_label_pc_10408
  %v0_10410 = load i32, i32* @r5, align 4
  %v1_10410 = add i32 %v0_10410, 24
  %v2_10410 = inttoptr i32 %v1_10410 to i32*
  %v3_10410 = load i32, i32* %v2_10410, align 4
  store i32 %v3_10410, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10a48

dec_label_pc_10418:                               ; preds = %dec_label_pc_102f8
  %v1_10418 = add i32 %v0_102f8, 24
  %v2_10418 = inttoptr i32 %v1_10418 to i32*
  %v3_10418 = load i32, i32* %v2_10418, align 4
  store i32 %v3_10418, i32* %ip.global-to-local, align 4
  %v1_1041c = add i32 %v3_10418, -1
  store i32 %v1_1041c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10420 = icmp eq i32 %v1_1041c, 0
  store i1 %v2_10420, i1* %cpsr_z.global-to-local, align 1
  %v5_10424 = icmp sgt i32 %v1_1041c, 0
  br i1 %v5_10424, label %dec_label_pc_1044c, label %dec_label_pc_10234

dec_label_pc_1042c:                               ; preds = %bb323
  %v2_1042c = icmp ugt i8 %v3_10450, 35
  store i1 %v2_1042c, i1* %cpsr_c.global-to-local, align 1
  %v7_1042c = icmp eq i8 %v3_10450, 36
  store i1 %v7_1042c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1042c, label %dec_label_pc_10460, label %dec_label_pc_10434

dec_label_pc_10434:                               ; preds = %dec_label_pc_1042c
  %v2_10434 = icmp ugt i8 %v3_10450, 34
  store i1 %v2_10434, i1* %cpsr_c.global-to-local, align 1
  %v7_10434 = icmp eq i8 %v3_10450, 35
  store i1 %v7_10434, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10434, label %dec_label_pc_10460, label %dec_label_pc_1043c

dec_label_pc_1043c:                               ; preds = %dec_label_pc_10434
  %v2_1043c = icmp ugt i8 %v3_10450, 36
  store i1 %v2_1043c, i1* %cpsr_c.global-to-local, align 1
  %v7_1043c = icmp eq i8 %v3_10450, 37
  store i1 %v7_1043c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1043c, label %dec_label_pc_10460, label %dec_label_pc_10444

dec_label_pc_10444:                               ; preds = %dec_label_pc_1043c
  %v1_10444 = add i32 %v0_10460, -1
  store i32 %v1_10444, i32* %r0.global-to-local, align 4
  %v2_10444 = icmp ne i32 %v0_10460, 0
  store i1 %v2_10444, i1* %cpsr_c.global-to-local, align 1
  %v7_10444 = icmp eq i32 %v0_10460, 1
  store i1 %v7_10444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10444, label %dec_label_pc_10234, label %dec_label_pc_1044c

dec_label_pc_1044c:                               ; preds = %dec_label_pc_10418, %dec_label_pc_10444
  %v0_10460 = phi i32 [ %v1_10444, %dec_label_pc_10444 ], [ %v1_1041c, %dec_label_pc_10418 ]
  %v2_1044c = add i32 %v0_10460, %v0_102f8
  store i32 %v2_1044c, i32* %r3.global-to-local, align 4
  %v1_10450 = add i32 %v2_1044c, 28
  %v2_10450 = inttoptr i32 %v1_10450 to i8*
  %v3_10450 = load i8, i8* %v2_10450, align 1
  %v4_10450 = zext i8 %v3_10450 to i32
  store i32 %v4_10450, i32* %r3.global-to-local, align 4
  %v2_10454 = icmp ugt i8 %v3_10450, 61
  store i1 %v2_10454, i1* %cpsr_c.global-to-local, align 1
  %v7_10454 = icmp eq i8 %v3_10450, 62
  store i1 %v7_10454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10454, label %dec_label_pc_10460, label %bb323

bb323:                                            ; preds = %dec_label_pc_1044c
  %v3_10458 = icmp ugt i8 %v3_10450, 57
  store i1 %v3_10458, i1* %cpsr_c.global-to-local, align 1
  %v8_10458 = icmp eq i8 %v3_10450, 58
  store i1 %v8_10458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10458, label %dec_label_pc_10460, label %dec_label_pc_1042c

dec_label_pc_10460:                               ; preds = %dec_label_pc_1044c, %bb323, %dec_label_pc_1043c, %dec_label_pc_10434, %dec_label_pc_1042c
  %v1_10460 = add i32 %v0_10460, 1
  store i32 %v1_10460, i32* @r7, align 4
  %v2_10464 = icmp eq i32 %v1_10460, -1
  store i1 %v2_10464, i1* %cpsr_c.global-to-local, align 1
  %v7_10464 = icmp eq i32 %v0_10460, -2
  store i1 %v7_10464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10464, label %dec_label_pc_10234, label %dec_label_pc_1046c

dec_label_pc_1046c:                               ; preds = %dec_label_pc_10460, %dec_label_pc_10254, %dec_label_pc_10234
  %v0_1046c = phi i32 [ %v5_10264, %dec_label_pc_10254 ], [ %v5_10244, %dec_label_pc_10234 ], [ %v1_10460, %dec_label_pc_10460 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1046c = icmp eq i32 %v0_1046c, 0
  store i1 %v2_1046c, i1* %cpsr_z.global-to-local, align 1
  %tmp324 = icmp slt i32 %v0_1046c, 1
  br i1 %tmp324, label %dec_label_pc_10408, label %dec_label_pc_10474

dec_label_pc_10474:                               ; preds = %dec_label_pc_1046c
  %v0_10474 = load i32, i32* @r5, align 4
  %v1_10474 = inttoptr i32 %v0_10474 to i32*
  %v2_10474 = load i32, i32* %v1_10474, align 4
  store i32 %v2_10474, i32* %r3.global-to-local, align 4
  %v1_10478 = add i32 %v0_10474, 4
  %v2_10478 = inttoptr i32 %v1_10478 to i32*
  %v3_10478 = load i32, i32* %v2_10478, align 4
  store i32 %v3_10478, i32* %r0.global-to-local, align 4
  %v1_1047c = add i32 %v2_10474, 12
  %v2_1047c = inttoptr i32 %v1_1047c to i8*
  %v3_1047c = load i8, i8* %v2_1047c, align 1
  %v4_1047c = zext i8 %v3_1047c to i32
  store i32 %v4_1047c, i32* %r2.global-to-local, align 4
  %v1_10480 = inttoptr i32 %v2_10474 to i32*
  %v2_10480 = load i32, i32* %v1_10480, align 4
  store i32 %v2_10480, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10488 = inttoptr i32 %v2_10480 to i32*
  %v5_10488 = call i32 @function_12420(i32 %v3_10478, i32* %v4_10488, i32 %v4_1047c, i32 16384)
  store i32 %v5_10488, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10490 = load i32, i32* @r5, align 4
  %v1_10490 = add i32 %v0_10490, 4
  %v2_10490 = inttoptr i32 %v1_10490 to i32*
  %v3_10490 = load i32, i32* %v2_10490, align 4
  store i32 %v3_10490, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14928.603 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_1049c = call i32 @function_12420(i32 %v3_10490, i32* bitcast ([3 x i8]* @global_var_14928.603 to i32*), i32 2, i32 16384)
  store i32 %v5_1049c, i32* %r0.global-to-local, align 4
  %v0_104a0 = load i32, i32* @r5, align 4
  %v1_104a0 = add i32 %v0_104a0, 24
  %v2_104a0 = inttoptr i32 %v1_104a0 to i32*
  %v3_104a0 = load i32, i32* %v2_104a0, align 4
  store i32 %v3_104a0, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_104a8 = add i32 %v0_104a0, 12
  %v3_104a8 = inttoptr i32 %v2_104a8 to i32*
  store i32 4, i32* %v3_104a8, align 4
  br label %dec_label_pc_10a48

dec_label_pc_104b0:                               ; preds = %dec_label_pc_102f8
  %v1_104b0 = add i32 %v0_102f8, 24
  %v2_104b0 = inttoptr i32 %v1_104b0 to i32*
  %v3_104b0 = load i32, i32* %v2_104b0, align 4
  store i32 %v3_104b0, i32* %ip.global-to-local, align 4
  %v1_104b4 = add i32 %v3_104b0, -1
  store i32 %v1_104b4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104b8 = icmp eq i32 %v1_104b4, 0
  store i1 %v2_104b8, i1* %cpsr_z.global-to-local, align 1
  %v5_104bc = icmp sgt i32 %v1_104b4, 0
  br i1 %v5_104bc, label %dec_label_pc_104dc, label %dec_label_pc_10c28

dec_label_pc_104c4:                               ; preds = %bb325
  %v2_104c4 = icmp ugt i8 %v3_104e0, 35
  store i1 %v2_104c4, i1* %cpsr_c.global-to-local, align 1
  %v7_104c4 = icmp eq i8 %v3_104e0, 36
  store i1 %v7_104c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104c4, label %dec_label_pc_104f0, label %dec_label_pc_104cc

dec_label_pc_104cc:                               ; preds = %dec_label_pc_104c4
  %v2_104cc = icmp ugt i8 %v3_104e0, 34
  store i1 %v2_104cc, i1* %cpsr_c.global-to-local, align 1
  %v7_104cc = icmp eq i8 %v3_104e0, 35
  store i1 %v7_104cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104cc, label %dec_label_pc_104f0, label %dec_label_pc_104d4

dec_label_pc_104d4:                               ; preds = %dec_label_pc_104cc
  %v1_104d4 = add i32 %v0_104f0, -1
  store i32 %v1_104d4, i32* %r0.global-to-local, align 4
  %v2_104d4 = icmp ne i32 %v0_104f0, 0
  store i1 %v2_104d4, i1* %cpsr_c.global-to-local, align 1
  %v7_104d4 = icmp eq i32 %v0_104f0, 1
  store i1 %v7_104d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104d4, label %dec_label_pc_10c28, label %dec_label_pc_104dc

dec_label_pc_104dc:                               ; preds = %dec_label_pc_104b0, %dec_label_pc_104d4
  %v0_104f0 = phi i32 [ %v1_104d4, %dec_label_pc_104d4 ], [ %v1_104b4, %dec_label_pc_104b0 ]
  %v2_104dc = add i32 %v0_104f0, %v0_102f8
  store i32 %v2_104dc, i32* %r3.global-to-local, align 4
  %v1_104e0 = add i32 %v2_104dc, 28
  %v2_104e0 = inttoptr i32 %v1_104e0 to i8*
  %v3_104e0 = load i8, i8* %v2_104e0, align 1
  %v4_104e0 = zext i8 %v3_104e0 to i32
  store i32 %v4_104e0, i32* %r3.global-to-local, align 4
  %v2_104e4 = icmp ugt i8 %v3_104e0, 61
  store i1 %v2_104e4, i1* %cpsr_c.global-to-local, align 1
  %v7_104e4 = icmp eq i8 %v3_104e0, 62
  store i1 %v7_104e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104e4, label %dec_label_pc_104f0, label %bb325

bb325:                                            ; preds = %dec_label_pc_104dc
  %v3_104e8 = icmp ugt i8 %v3_104e0, 57
  store i1 %v3_104e8, i1* %cpsr_c.global-to-local, align 1
  %v8_104e8 = icmp eq i8 %v3_104e0, 58
  store i1 %v8_104e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_104e8, label %dec_label_pc_104f0, label %dec_label_pc_104c4

dec_label_pc_104f0:                               ; preds = %dec_label_pc_104dc, %bb325, %dec_label_pc_104cc, %dec_label_pc_104c4
  %v1_104f0 = add i32 %v0_104f0, 1
  store i32 %v1_104f0, i32* @r7, align 4
  %v2_104f4 = icmp eq i32 %v1_104f0, -1
  store i1 %v2_104f4, i1* %cpsr_c.global-to-local, align 1
  %v7_104f4 = icmp eq i32 %v0_104f0, -2
  store i1 %v7_104f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104f4, label %dec_label_pc_10c28, label %dec_label_pc_104fc

dec_label_pc_104fc:                               ; preds = %dec_label_pc_104f0, %dec_label_pc_10c28
  %v0_104fc = phi i32 [ %v5_10c38, %dec_label_pc_10c28 ], [ %v1_104f0, %dec_label_pc_104f0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104fc = icmp eq i32 %v0_104fc, 0
  store i1 %v2_104fc, i1* %cpsr_z.global-to-local, align 1
  %tmp326 = icmp slt i32 %v0_104fc, 1
  br i1 %tmp326, label %dec_label_pc_10408, label %dec_label_pc_10504

dec_label_pc_10504:                               ; preds = %dec_label_pc_104fc
  %v0_10504 = load i32, i32* @r5, align 4
  %v1_10504 = inttoptr i32 %v0_10504 to i32*
  %v2_10504 = load i32, i32* %v1_10504, align 4
  store i32 %v2_10504, i32* %r3.global-to-local, align 4
  %v1_10508 = add i32 %v0_10504, 4
  %v2_10508 = inttoptr i32 %v1_10508 to i32*
  %v3_10508 = load i32, i32* %v2_10508, align 4
  store i32 %v3_10508, i32* %r0.global-to-local, align 4
  %v1_1050c = add i32 %v2_10504, 13
  %v2_1050c = inttoptr i32 %v1_1050c to i8*
  %v3_1050c = load i8, i8* %v2_1050c, align 1
  %v4_1050c = zext i8 %v3_1050c to i32
  store i32 %v4_1050c, i32* %r2.global-to-local, align 4
  %v1_10510 = add i32 %v2_10504, 4
  %v2_10510 = inttoptr i32 %v1_10510 to i32*
  %v3_10510 = load i32, i32* %v2_10510, align 4
  store i32 %v3_10510, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10518 = inttoptr i32 %v3_10510 to i32*
  %v5_10518 = call i32 @function_12420(i32 %v3_10508, i32* %v4_10518, i32 %v4_1050c, i32 16384)
  store i32 %v5_10518, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10520 = load i32, i32* @r5, align 4
  %v1_10520 = add i32 %v0_10520, 4
  %v2_10520 = inttoptr i32 %v1_10520 to i32*
  %v3_10520 = load i32, i32* %v2_10520, align 4
  store i32 %v3_10520, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14928.603 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_1052c = call i32 @function_12420(i32 %v3_10520, i32* bitcast ([3 x i8]* @global_var_14928.603 to i32*), i32 2, i32 16384)
  store i32 %v5_1052c, i32* %r0.global-to-local, align 4
  %v0_10530 = load i32, i32* @r5, align 4
  %v1_10530 = add i32 %v0_10530, 24
  %v2_10530 = inttoptr i32 %v1_10530 to i32*
  %v3_10530 = load i32, i32* %v2_10530, align 4
  store i32 %v3_10530, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_10538 = add i32 %v0_10530, 12
  %v3_10538 = inttoptr i32 %v2_10538 to i32*
  store i32 5, i32* %v3_10538, align 4
  br label %dec_label_pc_10a48

dec_label_pc_10540:                               ; preds = %dec_label_pc_102f8
  %v1_10540 = add i32 %v0_102f8, 24
  %v2_10540 = inttoptr i32 %v1_10540 to i32*
  %v3_10540 = load i32, i32* %v2_10540, align 4
  store i32 %v3_10540, i32* %ip.global-to-local, align 4
  %v1_10544 = add i32 %v3_10540, -1
  store i32 %v1_10544, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10548 = icmp eq i32 %v1_10544, 0
  store i1 %v2_10548, i1* %cpsr_z.global-to-local, align 1
  %v5_1054c = icmp sgt i32 %v1_10544, 0
  br i1 %v5_1054c, label %dec_label_pc_10574, label %dec_label_pc_10278thread-pre-split.thread

dec_label_pc_10554:                               ; preds = %bb327
  %v2_10554 = icmp ugt i8 %v3_10578, 35
  store i1 %v2_10554, i1* %cpsr_c.global-to-local, align 1
  %v7_10554 = icmp eq i8 %v3_10578, 36
  store i1 %v7_10554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10554, label %dec_label_pc_10588, label %dec_label_pc_1055c

dec_label_pc_1055c:                               ; preds = %dec_label_pc_10554
  %v2_1055c = icmp ugt i8 %v3_10578, 34
  store i1 %v2_1055c, i1* %cpsr_c.global-to-local, align 1
  %v7_1055c = icmp eq i8 %v3_10578, 35
  store i1 %v7_1055c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1055c, label %dec_label_pc_10588, label %dec_label_pc_10564

dec_label_pc_10564:                               ; preds = %dec_label_pc_1055c
  %v2_10564 = icmp ugt i8 %v3_10578, 36
  store i1 %v2_10564, i1* %cpsr_c.global-to-local, align 1
  %v7_10564 = icmp eq i8 %v3_10578, 37
  store i1 %v7_10564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10564, label %dec_label_pc_10588, label %dec_label_pc_1056c

dec_label_pc_1056c:                               ; preds = %dec_label_pc_10564
  %v1_1056c = add i32 %v0_10588, -1
  store i32 %v1_1056c, i32* %r0.global-to-local, align 4
  %v2_1056c = icmp ne i32 %v0_10588, 0
  store i1 %v2_1056c, i1* %cpsr_c.global-to-local, align 1
  %v7_1056c = icmp eq i32 %v0_10588, 1
  store i1 %v7_1056c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1056c, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_10574

dec_label_pc_10574:                               ; preds = %dec_label_pc_10540, %dec_label_pc_1056c
  %v0_10588 = phi i32 [ %v1_1056c, %dec_label_pc_1056c ], [ %v1_10544, %dec_label_pc_10540 ]
  %v2_10574 = add i32 %v0_10588, %v0_102f8
  store i32 %v2_10574, i32* %r3.global-to-local, align 4
  %v1_10578 = add i32 %v2_10574, 28
  %v2_10578 = inttoptr i32 %v1_10578 to i8*
  %v3_10578 = load i8, i8* %v2_10578, align 1
  %v4_10578 = zext i8 %v3_10578 to i32
  store i32 %v4_10578, i32* %r3.global-to-local, align 4
  %v2_1057c = icmp ugt i8 %v3_10578, 61
  store i1 %v2_1057c, i1* %cpsr_c.global-to-local, align 1
  %v7_1057c = icmp eq i8 %v3_10578, 62
  store i1 %v7_1057c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1057c, label %dec_label_pc_10588, label %bb327

bb327:                                            ; preds = %dec_label_pc_10574
  %v3_10580 = icmp ugt i8 %v3_10578, 57
  store i1 %v3_10580, i1* %cpsr_c.global-to-local, align 1
  %v8_10580 = icmp eq i8 %v3_10578, 58
  store i1 %v8_10580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10580, label %dec_label_pc_10588, label %dec_label_pc_10554

dec_label_pc_10588:                               ; preds = %dec_label_pc_10574, %bb327, %dec_label_pc_10564, %dec_label_pc_1055c, %dec_label_pc_10554
  %v1_10588 = add i32 %v0_10588, 1
  store i32 %v1_10588, i32* @r7, align 4
  %v2_1058c = icmp eq i32 %v1_10588, -1
  store i1 %v2_1058c, i1* %cpsr_c.global-to-local, align 1
  %v7_1058c = icmp eq i32 %v0_10588, -2
  store i1 %v7_1058c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1058c, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_10594

dec_label_pc_10594:                               ; preds = %dec_label_pc_10588
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10594 = icmp eq i32 %v1_10588, 0
  store i1 %v2_10594, i1* %cpsr_z.global-to-local, align 1
  %tmp328 = icmp slt i32 %v1_10588, 1
  br i1 %tmp328, label %dec_label_pc_10408, label %dec_label_pc_1059c

dec_label_pc_1059c:                               ; preds = %dec_label_pc_10594
  store i32 17, i32* %r0.global-to-local, align 4
  %v1_105a0 = call i32 @function_10f18(i32 17)
  store i32 %v2_105a8, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v3_105b0 = call i32 @function_10e34(i32 17, i32* nonnull %stack_var_-56)
  store i32 %v3_105b0, i32* %r0.global-to-local, align 4
  %v3_105b4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_105b4, i32* %r2.global-to-local, align 4
  store i32 %v3_105b0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_105c0 = load i32, i32* @r5, align 4
  %v1_105c0 = add i32 %v0_105c0, 4
  %v2_105c0 = inttoptr i32 %v1_105c0 to i32*
  %v3_105c0 = load i32, i32* %v2_105c0, align 4
  store i32 %v3_105c0, i32* %r0.global-to-local, align 4
  %v4_105c4 = inttoptr i32 %v3_105b0 to i32*
  %v5_105c4 = call i32 @function_12420(i32 %v3_105c0, i32* %v4_105c4, i32 %v3_105b4, i32 16384)
  store i32 %v5_105c4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14928.603 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_105d4 = load i32, i32* @r5, align 4
  %v1_105d4 = add i32 %v0_105d4, 4
  %v2_105d4 = inttoptr i32 %v1_105d4 to i32*
  %v3_105d4 = load i32, i32* %v2_105d4, align 4
  store i32 %v3_105d4, i32* %r0.global-to-local, align 4
  %v5_105d8 = call i32 @function_12420(i32 %v3_105d4, i32* bitcast ([3 x i8]* @global_var_14928.603 to i32*), i32 2, i32 16384)
  store i32 17, i32* %r0.global-to-local, align 4
  %v1_105e0 = call i32 @function_10e60(i32 17)
  store i32 %v1_105e0, i32* %r0.global-to-local, align 4
  %v0_105e4 = load i32, i32* @r5, align 4
  %v1_105e4 = add i32 %v0_105e4, 24
  %v2_105e4 = inttoptr i32 %v1_105e4 to i32*
  %v3_105e4 = load i32, i32* %v2_105e4, align 4
  store i32 %v3_105e4, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_105ec = add i32 %v0_105e4, 12
  %v3_105ec = inttoptr i32 %v2_105ec to i32*
  store i32 6, i32* %v3_105ec, align 4
  br label %dec_label_pc_10a48

dec_label_pc_105f4:                               ; preds = %dec_label_pc_102f8
  %v1_105f4 = add i32 %v0_102f8, 24
  %v2_105f4 = inttoptr i32 %v1_105f4 to i32*
  %v3_105f4 = load i32, i32* %v2_105f4, align 4
  store i32 %v3_105f4, i32* %ip.global-to-local, align 4
  %v1_105f8 = add i32 %v3_105f4, -1
  store i32 %v1_105f8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105fc = icmp eq i32 %v1_105f8, 0
  store i1 %v2_105fc, i1* %cpsr_z.global-to-local, align 1
  %v5_10600 = icmp sgt i32 %v1_105f8, 0
  br i1 %v5_10600, label %dec_label_pc_10628, label %dec_label_pc_10278thread-pre-split.thread

dec_label_pc_10608:                               ; preds = %bb329
  %v2_10608 = icmp ugt i8 %v3_1062c, 35
  store i1 %v2_10608, i1* %cpsr_c.global-to-local, align 1
  %v7_10608 = icmp eq i8 %v3_1062c, 36
  store i1 %v7_10608, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10608, label %dec_label_pc_1063c, label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %dec_label_pc_10608
  %v2_10610 = icmp ugt i8 %v3_1062c, 34
  store i1 %v2_10610, i1* %cpsr_c.global-to-local, align 1
  %v7_10610 = icmp eq i8 %v3_1062c, 35
  store i1 %v7_10610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10610, label %dec_label_pc_1063c, label %dec_label_pc_10618

dec_label_pc_10618:                               ; preds = %dec_label_pc_10610
  %v2_10618 = icmp ugt i8 %v3_1062c, 36
  store i1 %v2_10618, i1* %cpsr_c.global-to-local, align 1
  %v7_10618 = icmp eq i8 %v3_1062c, 37
  store i1 %v7_10618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10618, label %dec_label_pc_1063c, label %dec_label_pc_10620

dec_label_pc_10620:                               ; preds = %dec_label_pc_10618
  %v1_10620 = add i32 %v0_1063c, -1
  store i32 %v1_10620, i32* %r0.global-to-local, align 4
  %v2_10620 = icmp ne i32 %v0_1063c, 0
  store i1 %v2_10620, i1* %cpsr_c.global-to-local, align 1
  %v7_10620 = icmp eq i32 %v0_1063c, 1
  store i1 %v7_10620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10620, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_10628

dec_label_pc_10628:                               ; preds = %dec_label_pc_105f4, %dec_label_pc_10620
  %v0_1063c = phi i32 [ %v1_10620, %dec_label_pc_10620 ], [ %v1_105f8, %dec_label_pc_105f4 ]
  %v2_10628 = add i32 %v0_1063c, %v0_102f8
  store i32 %v2_10628, i32* %r3.global-to-local, align 4
  %v1_1062c = add i32 %v2_10628, 28
  %v2_1062c = inttoptr i32 %v1_1062c to i8*
  %v3_1062c = load i8, i8* %v2_1062c, align 1
  %v4_1062c = zext i8 %v3_1062c to i32
  store i32 %v4_1062c, i32* %r3.global-to-local, align 4
  %v2_10630 = icmp ugt i8 %v3_1062c, 61
  store i1 %v2_10630, i1* %cpsr_c.global-to-local, align 1
  %v7_10630 = icmp eq i8 %v3_1062c, 62
  store i1 %v7_10630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10630, label %dec_label_pc_1063c, label %bb329

bb329:                                            ; preds = %dec_label_pc_10628
  %v3_10634 = icmp ugt i8 %v3_1062c, 57
  store i1 %v3_10634, i1* %cpsr_c.global-to-local, align 1
  %v8_10634 = icmp eq i8 %v3_1062c, 58
  store i1 %v8_10634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10634, label %dec_label_pc_1063c, label %dec_label_pc_10608

dec_label_pc_1063c:                               ; preds = %dec_label_pc_10628, %bb329, %dec_label_pc_10618, %dec_label_pc_10610, %dec_label_pc_10608
  %v1_1063c = add i32 %v0_1063c, 1
  store i32 %v1_1063c, i32* @r7, align 4
  %v2_10640 = icmp eq i32 %v1_1063c, -1
  store i1 %v2_10640, i1* %cpsr_c.global-to-local, align 1
  %v7_10640 = icmp eq i32 %v0_1063c, -2
  store i1 %v7_10640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10640, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_10648

dec_label_pc_10648:                               ; preds = %dec_label_pc_1063c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10648 = icmp eq i32 %v1_1063c, 0
  store i1 %v2_10648, i1* %cpsr_z.global-to-local, align 1
  %tmp330 = icmp slt i32 %v1_1063c, 1
  br i1 %tmp330, label %dec_label_pc_10408, label %dec_label_pc_10650

dec_label_pc_10650:                               ; preds = %dec_label_pc_10648
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_10654 = call i32 @function_10f18(i32 18)
  store i32 %v2_1065c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v3_10664 = call i32 @function_10e34(i32 18, i32* nonnull %stack_var_-48)
  store i32 %v3_10664, i32* %r0.global-to-local, align 4
  %v3_10668 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10668, i32* %r2.global-to-local, align 4
  store i32 %v3_10664, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10674 = load i32, i32* @r5, align 4
  %v1_10674 = add i32 %v0_10674, 4
  %v2_10674 = inttoptr i32 %v1_10674 to i32*
  %v3_10674 = load i32, i32* %v2_10674, align 4
  store i32 %v3_10674, i32* %r0.global-to-local, align 4
  %v4_10678 = inttoptr i32 %v3_10664 to i32*
  %v5_10678 = call i32 @function_12420(i32 %v3_10674, i32* %v4_10678, i32 %v3_10668, i32 16384)
  store i32 %v5_10678, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14928.603 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10688 = load i32, i32* @r5, align 4
  %v1_10688 = add i32 %v0_10688, 4
  %v2_10688 = inttoptr i32 %v1_10688 to i32*
  %v3_10688 = load i32, i32* %v2_10688, align 4
  store i32 %v3_10688, i32* %r0.global-to-local, align 4
  %v5_1068c = call i32 @function_12420(i32 %v3_10688, i32* bitcast ([3 x i8]* @global_var_14928.603 to i32*), i32 2, i32 16384)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_10694 = call i32 @function_10e60(i32 18)
  store i32 %v1_10694, i32* %r0.global-to-local, align 4
  %v0_10698 = load i32, i32* @r5, align 4
  %v1_10698 = add i32 %v0_10698, 24
  %v2_10698 = inttoptr i32 %v1_10698 to i32*
  %v3_10698 = load i32, i32* %v2_10698, align 4
  store i32 %v3_10698, i32* %ip.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v2_106a0 = add i32 %v0_10698, 12
  %v3_106a0 = inttoptr i32 %v2_106a0 to i32*
  store i32 7, i32* %v3_106a0, align 4
  br label %dec_label_pc_10a48

dec_label_pc_106a8:                               ; preds = %dec_label_pc_102f8
  %v1_106a8 = add i32 %v0_102f8, 24
  %v2_106a8 = inttoptr i32 %v1_106a8 to i32*
  %v3_106a8 = load i32, i32* %v2_106a8, align 4
  store i32 %v3_106a8, i32* %ip.global-to-local, align 4
  %v1_106ac = add i32 %v3_106a8, -1
  store i32 %v1_106ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106b0 = icmp eq i32 %v1_106ac, 0
  store i1 %v2_106b0, i1* %cpsr_z.global-to-local, align 1
  %v5_106b4 = icmp sgt i32 %v1_106ac, 0
  br i1 %v5_106b4, label %dec_label_pc_106dc, label %dec_label_pc_10278thread-pre-split.thread

dec_label_pc_106bc:                               ; preds = %bb331
  %v2_106bc = icmp ugt i8 %v3_106e0, 35
  store i1 %v2_106bc, i1* %cpsr_c.global-to-local, align 1
  %v7_106bc = icmp eq i8 %v3_106e0, 36
  store i1 %v7_106bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106bc, label %dec_label_pc_106f0, label %dec_label_pc_106c4

dec_label_pc_106c4:                               ; preds = %dec_label_pc_106bc
  %v2_106c4 = icmp ugt i8 %v3_106e0, 34
  store i1 %v2_106c4, i1* %cpsr_c.global-to-local, align 1
  %v7_106c4 = icmp eq i8 %v3_106e0, 35
  store i1 %v7_106c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106c4, label %dec_label_pc_106f0, label %dec_label_pc_106cc

dec_label_pc_106cc:                               ; preds = %dec_label_pc_106c4
  %v2_106cc = icmp ugt i8 %v3_106e0, 36
  store i1 %v2_106cc, i1* %cpsr_c.global-to-local, align 1
  %v7_106cc = icmp eq i8 %v3_106e0, 37
  store i1 %v7_106cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106cc, label %dec_label_pc_106f0, label %dec_label_pc_106d4

dec_label_pc_106d4:                               ; preds = %dec_label_pc_106cc
  %v1_106d4 = add i32 %v0_106f0, -1
  store i32 %v1_106d4, i32* %r0.global-to-local, align 4
  %v2_106d4 = icmp ne i32 %v0_106f0, 0
  store i1 %v2_106d4, i1* %cpsr_c.global-to-local, align 1
  %v7_106d4 = icmp eq i32 %v0_106f0, 1
  store i1 %v7_106d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106d4, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_106dc

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106a8, %dec_label_pc_106d4
  %v0_106f0 = phi i32 [ %v1_106d4, %dec_label_pc_106d4 ], [ %v1_106ac, %dec_label_pc_106a8 ]
  %v2_106dc = add i32 %v0_106f0, %v0_102f8
  store i32 %v2_106dc, i32* %r3.global-to-local, align 4
  %v1_106e0 = add i32 %v2_106dc, 28
  %v2_106e0 = inttoptr i32 %v1_106e0 to i8*
  %v3_106e0 = load i8, i8* %v2_106e0, align 1
  %v4_106e0 = zext i8 %v3_106e0 to i32
  store i32 %v4_106e0, i32* %r3.global-to-local, align 4
  %v2_106e4 = icmp ugt i8 %v3_106e0, 61
  store i1 %v2_106e4, i1* %cpsr_c.global-to-local, align 1
  %v7_106e4 = icmp eq i8 %v3_106e0, 62
  store i1 %v7_106e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106e4, label %dec_label_pc_106f0, label %bb331

bb331:                                            ; preds = %dec_label_pc_106dc
  %v3_106e8 = icmp ugt i8 %v3_106e0, 57
  store i1 %v3_106e8, i1* %cpsr_c.global-to-local, align 1
  %v8_106e8 = icmp eq i8 %v3_106e0, 58
  store i1 %v8_106e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106e8, label %dec_label_pc_106f0, label %dec_label_pc_106bc

dec_label_pc_106f0:                               ; preds = %dec_label_pc_106dc, %bb331, %dec_label_pc_106cc, %dec_label_pc_106c4, %dec_label_pc_106bc
  %v1_106f0 = add i32 %v0_106f0, 1
  store i32 %v1_106f0, i32* @r7, align 4
  %v2_106f4 = icmp eq i32 %v1_106f0, -1
  store i1 %v2_106f4, i1* %cpsr_c.global-to-local, align 1
  %v7_106f4 = icmp eq i32 %v0_106f0, -2
  store i1 %v7_106f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106f4, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_106fc

dec_label_pc_106fc:                               ; preds = %dec_label_pc_106f0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106fc = icmp eq i32 %v1_106f0, 0
  store i1 %v2_106fc, i1* %cpsr_z.global-to-local, align 1
  %tmp332 = icmp slt i32 %v1_106f0, 1
  br i1 %tmp332, label %dec_label_pc_10408, label %dec_label_pc_10704

dec_label_pc_10704:                               ; preds = %dec_label_pc_106fc
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10708 = call i32 @function_10f18(i32 20)
  store i32 %v2_105a8, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_10718 = call i32 @function_10e34(i32 20, i32* nonnull %stack_var_-56)
  store i32 %v3_10718, i32* %r0.global-to-local, align 4
  %v3_1071c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1071c, i32* %r2.global-to-local, align 4
  store i32 %v3_10718, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10728 = load i32, i32* @r5, align 4
  %v1_10728 = add i32 %v0_10728, 4
  %v2_10728 = inttoptr i32 %v1_10728 to i32*
  %v3_10728 = load i32, i32* %v2_10728, align 4
  store i32 %v3_10728, i32* %r0.global-to-local, align 4
  %v4_1072c = inttoptr i32 %v3_10718 to i32*
  %v5_1072c = call i32 @function_12420(i32 %v3_10728, i32* %v4_1072c, i32 %v3_1071c, i32 16384)
  store i32 %v5_1072c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14928.603 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1073c = load i32, i32* @r5, align 4
  %v1_1073c = add i32 %v0_1073c, 4
  %v2_1073c = inttoptr i32 %v1_1073c to i32*
  %v3_1073c = load i32, i32* %v2_1073c, align 4
  store i32 %v3_1073c, i32* %r0.global-to-local, align 4
  %v5_10740 = call i32 @function_12420(i32 %v3_1073c, i32* bitcast ([3 x i8]* @global_var_14928.603 to i32*), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10748 = call i32 @function_10e60(i32 20)
  store i32 %v1_10748, i32* %r0.global-to-local, align 4
  %v0_1074c = load i32, i32* @r5, align 4
  %v1_1074c = add i32 %v0_1074c, 24
  %v2_1074c = inttoptr i32 %v1_1074c to i32*
  %v3_1074c = load i32, i32* %v2_1074c, align 4
  store i32 %v3_1074c, i32* %ip.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_10754 = add i32 %v0_1074c, 12
  %v3_10754 = inttoptr i32 %v2_10754 to i32*
  store i32 9, i32* %v3_10754, align 4
  br label %dec_label_pc_10a48

dec_label_pc_1075c:                               ; preds = %dec_label_pc_102f8
  %v1_1075c = add i32 %v0_102f8, 24
  %v2_1075c = inttoptr i32 %v1_1075c to i32*
  %v3_1075c = load i32, i32* %v2_1075c, align 4
  store i32 %v3_1075c, i32* %ip.global-to-local, align 4
  %v1_10760 = add i32 %v3_1075c, -1
  store i32 %v1_10760, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10764 = icmp eq i32 %v1_10760, 0
  store i1 %v2_10764, i1* %cpsr_z.global-to-local, align 1
  %v5_10768 = icmp sgt i32 %v1_10760, 0
  br i1 %v5_10768, label %dec_label_pc_10894, label %dec_label_pc_10278thread-pre-split.thread

dec_label_pc_10874:                               ; preds = %bb333
  %v2_10874 = icmp ugt i8 %v3_10898, 35
  store i1 %v2_10874, i1* %cpsr_c.global-to-local, align 1
  %v7_10874 = icmp eq i8 %v3_10898, 36
  store i1 %v7_10874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10874, label %dec_label_pc_108a8, label %dec_label_pc_1087c

dec_label_pc_1087c:                               ; preds = %dec_label_pc_10874
  %v2_1087c = icmp ugt i8 %v3_10898, 34
  store i1 %v2_1087c, i1* %cpsr_c.global-to-local, align 1
  %v7_1087c = icmp eq i8 %v3_10898, 35
  store i1 %v7_1087c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1087c, label %dec_label_pc_108a8, label %dec_label_pc_10884

dec_label_pc_10884:                               ; preds = %dec_label_pc_1087c
  %v2_10884 = icmp ugt i8 %v3_10898, 36
  store i1 %v2_10884, i1* %cpsr_c.global-to-local, align 1
  %v7_10884 = icmp eq i8 %v3_10898, 37
  store i1 %v7_10884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10884, label %dec_label_pc_108a8, label %dec_label_pc_1088c

dec_label_pc_1088c:                               ; preds = %dec_label_pc_10884
  %v1_1088c = add i32 %v0_108a8, -1
  store i32 %v1_1088c, i32* %r0.global-to-local, align 4
  %v2_1088c = icmp ne i32 %v0_108a8, 0
  store i1 %v2_1088c, i1* %cpsr_c.global-to-local, align 1
  %v7_1088c = icmp eq i32 %v0_108a8, 1
  store i1 %v7_1088c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1088c, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_10894

dec_label_pc_10894:                               ; preds = %dec_label_pc_1075c, %dec_label_pc_1088c
  %v0_108a8 = phi i32 [ %v1_1088c, %dec_label_pc_1088c ], [ %v1_10760, %dec_label_pc_1075c ]
  %v2_10894 = add i32 %v0_108a8, %v0_102f8
  store i32 %v2_10894, i32* %r3.global-to-local, align 4
  %v1_10898 = add i32 %v2_10894, 28
  %v2_10898 = inttoptr i32 %v1_10898 to i8*
  %v3_10898 = load i8, i8* %v2_10898, align 1
  %v4_10898 = zext i8 %v3_10898 to i32
  store i32 %v4_10898, i32* %r3.global-to-local, align 4
  %v2_1089c = icmp ugt i8 %v3_10898, 61
  store i1 %v2_1089c, i1* %cpsr_c.global-to-local, align 1
  %v7_1089c = icmp eq i8 %v3_10898, 62
  store i1 %v7_1089c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1089c, label %dec_label_pc_108a8, label %bb333

bb333:                                            ; preds = %dec_label_pc_10894
  %v3_108a0 = icmp ugt i8 %v3_10898, 57
  store i1 %v3_108a0, i1* %cpsr_c.global-to-local, align 1
  %v8_108a0 = icmp eq i8 %v3_10898, 58
  store i1 %v8_108a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_108a0, label %dec_label_pc_108a8, label %dec_label_pc_10874

dec_label_pc_108a8:                               ; preds = %dec_label_pc_10894, %bb333, %dec_label_pc_10884, %dec_label_pc_1087c, %dec_label_pc_10874
  %v1_108a8 = add i32 %v0_108a8, 1
  store i32 %v1_108a8, i32* @r7, align 4
  %v2_108ac = icmp eq i32 %v1_108a8, -1
  store i1 %v2_108ac, i1* %cpsr_c.global-to-local, align 1
  %v7_108ac = icmp eq i32 %v0_108a8, -2
  store i1 %v7_108ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108ac, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_108b4

dec_label_pc_108b4:                               ; preds = %dec_label_pc_108a8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108b4 = icmp eq i32 %v1_108a8, 0
  store i1 %v2_108b4, i1* %cpsr_z.global-to-local, align 1
  %tmp334 = icmp slt i32 %v1_108a8, 1
  br i1 %tmp334, label %dec_label_pc_10408, label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %dec_label_pc_108b4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_108c0 = call i32 @function_10f18(i32 16)
  store i32 %v2_1065c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v3_108d0 = call i32 @function_10e34(i32 16, i32* nonnull %stack_var_-48)
  store i32 %v3_108d0, i32* %r0.global-to-local, align 4
  %v3_108d4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_108d4, i32* %r2.global-to-local, align 4
  store i32 %v3_108d0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_108e0 = load i32, i32* @r5, align 4
  %v1_108e0 = add i32 %v0_108e0, 4
  %v2_108e0 = inttoptr i32 %v1_108e0 to i32*
  %v3_108e0 = load i32, i32* %v2_108e0, align 4
  store i32 %v3_108e0, i32* %r0.global-to-local, align 4
  %v4_108e4 = inttoptr i32 %v3_108d0 to i32*
  %v5_108e4 = call i32 @function_12420(i32 %v3_108e0, i32* %v4_108e4, i32 %v3_108d4, i32 16384)
  store i32 %v5_108e4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14928.603 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_108f4 = load i32, i32* @r5, align 4
  %v1_108f4 = add i32 %v0_108f4, 4
  %v2_108f4 = inttoptr i32 %v1_108f4 to i32*
  %v3_108f4 = load i32, i32* %v2_108f4, align 4
  store i32 %v3_108f4, i32* %r0.global-to-local, align 4
  %v5_108f8 = call i32 @function_12420(i32 %v3_108f4, i32* bitcast ([3 x i8]* @global_var_14928.603 to i32*), i32 2, i32 16384)
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_10900 = call i32 @function_10e60(i32 16)
  store i32 %v1_10900, i32* %r0.global-to-local, align 4
  %v0_10904 = load i32, i32* @r5, align 4
  %v1_10904 = add i32 %v0_10904, 24
  %v2_10904 = inttoptr i32 %v1_10904 to i32*
  %v3_10904 = load i32, i32* %v2_10904, align 4
  store i32 %v3_10904, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_1090c = add i32 %v0_10904, 12
  %v3_1090c = inttoptr i32 %v2_1090c to i32*
  store i32 8, i32* %v3_1090c, align 4
  br label %dec_label_pc_10a48

dec_label_pc_10914:                               ; preds = %dec_label_pc_102f8
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_10918 = call i32 @function_10f18(i32 22)
  store i32 %v2_105a8, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_10928 = call i32 @function_10e34(i32 22, i32* nonnull %stack_var_-56)
  %v3_1092c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10928, i32* %r2.global-to-local, align 4
  %v1_10934 = add i32 %v3_1092c, -1
  store i32 %v1_10934, i32* %r3.global-to-local, align 4
  %v0_10938 = load i32, i32* @sb, align 4
  store i32 %v0_10938, i32* %r0.global-to-local, align 4
  %v0_1093c = load i32, i32* @r5, align 4
  %v1_1093c = add i32 %v0_1093c, 24
  %v2_1093c = inttoptr i32 %v1_1093c to i32*
  %v3_1093c = load i32, i32* %v2_1093c, align 4
  store i32 %v3_1093c, i32* %r1.global-to-local, align 4
  %v4_10940 = call i32 @function_114ac(i32 %v0_10938, i32 %v3_1093c, i32 %v3_10928, i32 %v1_10934)
  %v3_10944 = icmp eq i32 %v4_10940, -1
  store i1 %v3_10944, i1* %cpsr_c.global-to-local, align 1
  %v8_10944 = icmp eq i32 %v4_10940, -1
  store i1 %v8_10944, i1* %cpsr_z.global-to-local, align 1
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_10950 = call i32 @function_10e60(i32 22)
  br i1 %v3_10944, label %dec_label_pc_1094c, label %dec_label_pc_10b80

dec_label_pc_1094c:                               ; preds = %dec_label_pc_10914
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_10958 = call i32 @function_10f18(i32 21)
  store i32 %v2_105a8, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_10968 = call i32 @function_10e34(i32 21, i32* nonnull %stack_var_-56)
  store i32 %v3_10968, i32* %r0.global-to-local, align 4
  %v3_1096c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10968, i32* %r2.global-to-local, align 4
  %v1_10974 = add i32 %v3_1096c, -1
  store i32 %v1_10974, i32* %r3.global-to-local, align 4
  %v0_10978 = load i32, i32* @r5, align 4
  %v1_10978 = add i32 %v0_10978, 24
  %v2_10978 = inttoptr i32 %v1_10978 to i32*
  %v3_10978 = load i32, i32* %v2_10978, align 4
  store i32 %v3_10978, i32* %r1.global-to-local, align 4
  %v0_1097c = load i32, i32* @sb, align 4
  store i32 %v0_1097c, i32* %r0.global-to-local, align 4
  %v4_10980 = call i32 @function_114ac(i32 %v0_1097c, i32 %v3_10978, i32 %v3_10968, i32 %v1_10974)
  store i32 %v4_10980, i32* @r7, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_1098c = call i32 @function_10e60(i32 21)
  store i32 %v1_1098c, i32* %r0.global-to-local, align 4
  %v0_10990 = load i32, i32* @r7, align 4
  %v2_10990 = icmp eq i32 %v0_10990, -1
  store i1 %v2_10990, i1* %cpsr_c.global-to-local, align 1
  %v7_10990 = icmp eq i32 %v0_10990, -1
  store i1 %v7_10990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10990, label %dec_label_pc_10274.loopexit, label %dec_label_pc_10998

dec_label_pc_10998:                               ; preds = %dec_label_pc_1094c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10998 = icmp eq i32 %v0_10990, 0
  store i1 %v2_10998, i1* %cpsr_z.global-to-local, align 1
  %tmp335 = icmp slt i32 %v0_10990, 1
  br i1 %tmp335, label %dec_label_pc_10408, label %dec_label_pc_109a0

dec_label_pc_109a0:                               ; preds = %dec_label_pc_10998
  %v0_109a0 = load i32, i32* @r5, align 4
  %v1_109a0 = add i32 %v0_109a0, 21
  %v2_109a0 = inttoptr i32 %v1_109a0 to i8*
  %v3_109a0 = load i8, i8* %v2_109a0, align 1
  %v4_109a0 = zext i8 %v3_109a0 to i32
  store i32 %v4_109a0, i32* %r3.global-to-local, align 4
  %v1_109a4 = add i32 %v0_109a0, 20
  %v2_109a4 = inttoptr i32 %v1_109a4 to i8*
  %v3_109a4 = load i8, i8* %v2_109a4, align 1
  %v4_109a4 = zext i8 %v3_109a4 to i32
  store i32 %v4_109a4, i32* %r2.global-to-local, align 4
  %v1_109a8 = add i32 %v0_109a0, 16
  %v2_109a8 = inttoptr i32 %v1_109a8 to i32*
  %v3_109a8 = load i32, i32* %v2_109a8, align 4
  store i32 %v3_109a8, i32* %r1.global-to-local, align 4
  %v4_109ac = mul nuw nsw i32 %v4_109a0, 256
  %v5_109ac = or i32 %v4_109a4, %v4_109ac
  store i32 %v5_109ac, i32* %r2.global-to-local, align 4
  %v1_109b0 = and i32 %v4_109a4, 128
  %v2_109b0 = icmp ne i32 %v1_109b0, 0
  store i1 %v2_109b0, i1* %cpsr_c.global-to-local, align 1
  store i32 %v4_109a0, i32* %r3.global-to-local, align 4
  store i32 %v3_109a8, i32* %stack_var_-48, align 4
  store i32 %v5_109ac, i32* %stack_var_-38, align 4
  %v1_109c0 = inttoptr i32 %v0_109a0 to i32*
  %v2_109c0 = load i32, i32* %v1_109c0, align 4
  store i32 %v2_109c0, i32* @fp, align 4
  %v0_109c4 = call i32 @function_11c94()
  store i32 %v0_109c4, i32* %r0.global-to-local, align 4
  %v7_109c8 = icmp eq i32 %v0_109c4, -1
  %.351 = zext i1 %v7_109c8 to i32
  store i32 %.351, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109d4 = icmp eq i32 %v0_109c4, 0
  store i1 %v2_109d4, i1* %cpsr_z.global-to-local, align 1
  %tmp338 = icmp slt i32 %v0_109c4, 1
  br i1 %tmp338, label %bb339, label %.thread69

.thread69:                                        ; preds = %dec_label_pc_109a0
  store i32 1, i32* %sl.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a2c

bb339:                                            ; preds = %dec_label_pc_109a0
  store i32 %.351, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109e0 = icmp eq i1 %v7_109c8, false
  store i1 %v2_109e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109e0, label %dec_label_pc_109e8, label %dec_label_pc_10a2c

dec_label_pc_109e8:                               ; preds = %bb339
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_109f4 = call i32 @function_124b0(i32 2, i32 1, i32 0)
  store i32 %v3_109f4, i32* %r0.global-to-local, align 4
  %v2_109f8 = icmp eq i32 %v3_109f4, -1
  store i1 %v2_109f8, i1* %cpsr_c.global-to-local, align 1
  %v7_109f8 = icmp eq i32 %v3_109f4, -1
  store i1 %v7_109f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_109f4, i32* @r6, align 4
  br i1 %v7_109f8, label %dec_label_pc_10e2c, label %dec_label_pc_10a04

dec_label_pc_10a04:                               ; preds = %dec_label_pc_109e8
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_10a08 = call i32 @function_10f18(i32 23)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10a10 = call i32 @function_10f18(i32 24)
  %v0_10a14 = load i32, i32* @sl, align 4
  store i32 %v0_10a14, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v2_10a1c = inttoptr i32 %v0_10a14 to i32*
  %v3_10a1c = call i32 @function_10e34(i32 23, i32* %v2_10a1c)
  store i32 %v3_10a1c, i32* %r0.global-to-local, align 4
  %v1_10a20 = inttoptr i32 %v3_10a1c to i8*
  %v2_10a20 = call i32 @function_dd14(i8* %v1_10a20)
  store i32 %v2_10a20, i32* %r0.global-to-local, align 4
  store i32 %v2_10a20, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_10a24 = icmp eq i32 %v2_10a20, 0
  store i1 %v3_10a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10a24, label %dec_label_pc_10a2c, label %dec_label_pc_10cfc

dec_label_pc_10a2c:                               ; preds = %.thread69, %dec_label_pc_10a04, %bb339
  %v0_10a2c = load i32, i32* @r5, align 4
  %v1_10a2c = add i32 %v0_10a2c, 4
  %v2_10a2c = inttoptr i32 %v1_10a2c to i32*
  %v3_10a2c = load i32, i32* %v2_10a2c, align 4
  store i32 %v3_10a2c, i32* %r0.global-to-local, align 4
  %v1_10a30 = call i32 @function_11c68(i32 %v3_10a2c)
  store i32 %v1_10a30, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_10a3c = load i32, i32* @r5, align 4
  %v1_10a3c = add i32 %v0_10a3c, 24
  %v2_10a3c = inttoptr i32 %v1_10a3c to i32*
  %v3_10a3c = load i32, i32* %v2_10a3c, align 4
  store i32 %v3_10a3c, i32* %ip.global-to-local, align 4
  %v2_10a40 = add i32 %v0_10a3c, 4
  %v3_10a40 = inttoptr i32 %v2_10a40 to i32*
  store i32 -1, i32* %v3_10a40, align 4
  %v0_10a44 = load i32, i32* %r2.global-to-local, align 4
  %v1_10a44 = load i32, i32* @r5, align 4
  %v2_10a44 = add i32 %v1_10a44, 12
  %v3_10a44 = inttoptr i32 %v2_10a44 to i32*
  store i32 %v0_10a44, i32* %v3_10a44, align 4
  br label %dec_label_pc_10a48

dec_label_pc_10a48:                               ; preds = %.thread206, %dec_label_pc_10ac8, %dec_label_pc_10c98, %dec_label_pc_10bb0, %dec_label_pc_108bc, %dec_label_pc_10704, %dec_label_pc_10650, %dec_label_pc_1059c, %dec_label_pc_10504, %dec_label_pc_10474, %dec_label_pc_10410, %dec_label_pc_10a2c
  %v0_10a48 = load i32, i32* %ip.global-to-local, align 4
  %v1_10a48 = load i32, i32* @r7, align 4
  %v2_10a48 = sub i32 %v0_10a48, %v1_10a48
  %v3_10a48 = icmp uge i32 %v0_10a48, %v1_10a48
  store i1 %v3_10a48, i1* %cpsr_c.global-to-local, align 1
  %v4_10a48 = xor i32 %v1_10a48, %v0_10a48
  %v5_10a48 = xor i32 %v2_10a48, %v0_10a48
  %v6_10a48 = and i32 %v5_10a48, %v4_10a48
  %v7_10a48 = icmp slt i32 %v6_10a48, 0
  %v8_10a48 = icmp slt i32 %v2_10a48, 0
  %v9_10a48 = icmp eq i32 %v0_10a48, %v1_10a48
  store i1 %v9_10a48, i1* %cpsr_z.global-to-local, align 1
  %v2_10a4c = xor i1 %v8_10a48, %v7_10a48
  %v0_10a48.v1_10a48 = select i1 %v2_10a4c, i32 %v0_10a48, i32 %v1_10a48
  store i32 %v0_10a48.v1_10a48, i32* %r1.global-to-local, align 4
  %v2_10a54 = sub i32 %v0_10a48, %v0_10a48.v1_10a48
  store i32 %v2_10a54, i32* @r2, align 4
  %v1_10a58 = load i32, i32* @r5, align 4
  %v2_10a58 = add i32 %v1_10a58, 24
  %v3_10a58 = inttoptr i32 %v2_10a58 to i32*
  store i32 %v2_10a54, i32* %v3_10a58, align 4
  %v0_10a5c = load i32, i32* @sb, align 4
  %v1_10a5c = load i32, i32* %r1.global-to-local, align 4
  %v2_10a5c = add i32 %v1_10a5c, %v0_10a5c
  store i32 %v2_10a5c, i32* @r1, align 4
  store i32 %v0_10a5c, i32* @r0, align 4
  %v3_10a64 = call i32 @function_121e0(i32 %v0_10a5c, i32 %v2_10a5c, i32 %v2_10a54)
  store i32 %v3_10a64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_102f8

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_102f8
  %v1_10a6c = add i32 %v0_102f8, 24
  %v2_10a6c = inttoptr i32 %v1_10a6c to i32*
  %v3_10a6c = load i32, i32* %v2_10a6c, align 4
  store i32 %v3_10a6c, i32* %ip.global-to-local, align 4
  %v1_10a70 = add i32 %v3_10a6c, -1
  store i32 %v1_10a70, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a74 = icmp eq i32 %v1_10a70, 0
  store i1 %v2_10a74, i1* %cpsr_z.global-to-local, align 1
  %v5_10a78 = icmp sgt i32 %v1_10a70, 0
  br i1 %v5_10a78, label %dec_label_pc_10aa0, label %dec_label_pc_10278thread-pre-split.thread

dec_label_pc_10a80:                               ; preds = %bb342
  %v2_10a80 = icmp ugt i8 %v3_10aa4, 35
  store i1 %v2_10a80, i1* %cpsr_c.global-to-local, align 1
  %v7_10a80 = icmp eq i8 %v3_10aa4, 36
  store i1 %v7_10a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a80, label %dec_label_pc_10ab4, label %dec_label_pc_10a88

dec_label_pc_10a88:                               ; preds = %dec_label_pc_10a80
  %v2_10a88 = icmp ugt i8 %v3_10aa4, 34
  store i1 %v2_10a88, i1* %cpsr_c.global-to-local, align 1
  %v7_10a88 = icmp eq i8 %v3_10aa4, 35
  store i1 %v7_10a88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a88, label %dec_label_pc_10ab4, label %dec_label_pc_10a90

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a88
  %v2_10a90 = icmp ugt i8 %v3_10aa4, 36
  store i1 %v2_10a90, i1* %cpsr_c.global-to-local, align 1
  %v7_10a90 = icmp eq i8 %v3_10aa4, 37
  store i1 %v7_10a90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a90, label %dec_label_pc_10ab4, label %dec_label_pc_10a98

dec_label_pc_10a98:                               ; preds = %dec_label_pc_10a90
  %v1_10a98 = add i32 %v0_10ab4, -1
  store i32 %v1_10a98, i32* %r0.global-to-local, align 4
  %v2_10a98 = icmp ne i32 %v0_10ab4, 0
  store i1 %v2_10a98, i1* %cpsr_c.global-to-local, align 1
  %v7_10a98 = icmp eq i32 %v0_10ab4, 1
  store i1 %v7_10a98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a98, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_10aa0

dec_label_pc_10aa0:                               ; preds = %dec_label_pc_10a6c, %dec_label_pc_10a98
  %v0_10ab4 = phi i32 [ %v1_10a98, %dec_label_pc_10a98 ], [ %v1_10a70, %dec_label_pc_10a6c ]
  %v2_10aa0 = add i32 %v0_10ab4, %v0_102f8
  store i32 %v2_10aa0, i32* %r3.global-to-local, align 4
  %v1_10aa4 = add i32 %v2_10aa0, 28
  %v2_10aa4 = inttoptr i32 %v1_10aa4 to i8*
  %v3_10aa4 = load i8, i8* %v2_10aa4, align 1
  %v4_10aa4 = zext i8 %v3_10aa4 to i32
  store i32 %v4_10aa4, i32* %r3.global-to-local, align 4
  %v2_10aa8 = icmp ugt i8 %v3_10aa4, 61
  store i1 %v2_10aa8, i1* %cpsr_c.global-to-local, align 1
  %v7_10aa8 = icmp eq i8 %v3_10aa4, 62
  store i1 %v7_10aa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10aa8, label %dec_label_pc_10ab4, label %bb342

bb342:                                            ; preds = %dec_label_pc_10aa0
  %v3_10aac = icmp ugt i8 %v3_10aa4, 57
  store i1 %v3_10aac, i1* %cpsr_c.global-to-local, align 1
  %v8_10aac = icmp eq i8 %v3_10aa4, 58
  store i1 %v8_10aac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10aac, label %dec_label_pc_10ab4, label %dec_label_pc_10a80

dec_label_pc_10ab4:                               ; preds = %dec_label_pc_10aa0, %bb342, %dec_label_pc_10a90, %dec_label_pc_10a88, %dec_label_pc_10a80
  %v1_10ab4 = add i32 %v0_10ab4, 1
  store i32 %v1_10ab4, i32* @r7, align 4
  %v2_10ab8 = icmp eq i32 %v1_10ab4, -1
  store i1 %v2_10ab8, i1* %cpsr_c.global-to-local, align 1
  %v7_10ab8 = icmp eq i32 %v0_10ab4, -2
  store i1 %v7_10ab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ab8, label %dec_label_pc_10278thread-pre-split, label %dec_label_pc_10ac0

dec_label_pc_10ac0:                               ; preds = %dec_label_pc_10ab4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ac0 = icmp eq i32 %v1_10ab4, 0
  store i1 %v2_10ac0, i1* %cpsr_z.global-to-local, align 1
  %tmp343 = icmp slt i32 %v1_10ab4, 1
  br i1 %tmp343, label %dec_label_pc_10408, label %dec_label_pc_10ac8

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10ac0
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_10acc = call i32 @function_10f18(i32 19)
  store i32 %v2_105a8, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v3_10adc = call i32 @function_10e34(i32 19, i32* nonnull %stack_var_-56)
  store i32 %v3_10adc, i32* %r0.global-to-local, align 4
  %v3_10ae0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10ae0, i32* %r2.global-to-local, align 4
  store i32 %v3_10adc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10aec = load i32, i32* @r5, align 4
  %v1_10aec = add i32 %v0_10aec, 4
  %v2_10aec = inttoptr i32 %v1_10aec to i32*
  %v3_10aec = load i32, i32* %v2_10aec, align 4
  store i32 %v3_10aec, i32* %r0.global-to-local, align 4
  %v4_10af0 = inttoptr i32 %v3_10adc to i32*
  %v5_10af0 = call i32 @function_12420(i32 %v3_10aec, i32* %v4_10af0, i32 %v3_10ae0, i32 16384)
  store i32 %v5_10af0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14928.603 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10b00 = load i32, i32* @r5, align 4
  %v1_10b00 = add i32 %v0_10b00, 4
  %v2_10b00 = inttoptr i32 %v1_10b00 to i32*
  %v3_10b00 = load i32, i32* %v2_10b00, align 4
  store i32 %v3_10b00, i32* %r0.global-to-local, align 4
  %v5_10b04 = call i32 @function_12420(i32 %v3_10b00, i32* bitcast ([3 x i8]* @global_var_14928.603 to i32*), i32 2, i32 16384)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_10b0c = call i32 @function_10e60(i32 19)
  store i32 %v1_10b0c, i32* %r0.global-to-local, align 4
  %v0_10b10 = load i32, i32* @r5, align 4
  %v1_10b10 = add i32 %v0_10b10, 24
  %v2_10b10 = inttoptr i32 %v1_10b10 to i32*
  %v3_10b10 = load i32, i32* %v2_10b10, align 4
  store i32 %v3_10b10, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v2_10b18 = add i32 %v0_10b10, 12
  %v3_10b18 = inttoptr i32 %v2_10b18 to i32*
  store i32 10, i32* %v3_10b18, align 4
  br label %dec_label_pc_10a48

dec_label_pc_10b20:                               ; preds = %dec_label_pc_10388
  store i32 ptrtoint (i32* @global_var_149b5.605 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_10340, i32* @r0, align 4
  %v3_10b2c = call i32 @function_121d0(i32 %v2_10340, i32 ptrtoint (i32* @global_var_149b5.605 to i32), i32 3)
  store i32 9, i32* @r2, align 4
  store i32 %v2_10b38, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_149ac.607 to i32), i32* @r1, align 4
  %v3_10b40 = call i32 @function_121d0(i32 %v2_10b38, i32 ptrtoint (i32* @global_var_149ac.607 to i32), i32 9)
  store i32 %v3_10b40, i32* %r0.global-to-local, align 4
  %v0_10b44 = load i32, i32* @r5, align 4
  %v1_10b44 = add i32 %v0_10b44, 24
  %v2_10b44 = inttoptr i32 %v1_10b44 to i32*
  %v3_10b44 = load i32, i32* %v2_10b44, align 4
  store i32 %v3_10b44, i32* %ip.global-to-local, align 4
  %v0_10b48 = load i32, i32* @r6, align 4
  %v1_10b48 = add i32 %v0_10b48, 2
  store i32 %v1_10b48, i32* %r2.global-to-local, align 4
  %v0_10b4c = load i32, i32* @sb, align 4
  %v2_10b4c = add i32 %v0_10b4c, %v3_10b44
  store i32 %v2_10b4c, i32* %r3.global-to-local, align 4
  %v3_10b50 = icmp uge i32 %v2_10b4c, %v1_10b48
  store i1 %v3_10b50, i1* %cpsr_c.global-to-local, align 1
  %v9_10b50 = icmp eq i32 %v2_10b4c, %v1_10b48
  store i1 %v9_10b50, i1* %cpsr_z.global-to-local, align 1
  %v2_10b54 = xor i1 %v3_10b50, true
  %v3_10b54 = or i1 %v9_10b50, %v2_10b54
  br i1 %v3_10b54, label %dec_label_pc_10b20.dec_label_pc_103f8.loopexit_crit_edge, label %dec_label_pc_10b58

dec_label_pc_10b20.dec_label_pc_103f8.loopexit_crit_edge: ; preds = %dec_label_pc_10b20
  %v0_103f8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_103f8

dec_label_pc_10b58:                               ; preds = %dec_label_pc_10b20
  %v0_10b58 = load i32, i32* @r4, align 4
  %v1_10b58 = add i32 %v0_10b58, 1
  %v2_10b58 = inttoptr i32 %v1_10b58 to i8*
  %v3_10b58 = load i8, i8* %v2_10b58, align 1
  %v4_10b58 = zext i8 %v3_10b58 to i32
  store i32 %v4_10b58, i32* %r3.global-to-local, align 4
  %v2_10b5c = icmp ugt i8 %v3_10b58, 30
  store i1 %v2_10b5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b5c = icmp eq i8 %v3_10b58, 31
  store i1 %v7_10b5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b5c, label %dec_label_pc_10c4c, label %dec_label_pc_10b64

dec_label_pc_10b64:                               ; preds = %dec_label_pc_10b58
  %v1_10b64 = add i32 %v0_10b58, -1
  %v2_10b64 = inttoptr i32 %v1_10b64 to i8*
  %v3_10b64 = load i8, i8* %v2_10b64, align 1
  %v4_10b64 = zext i8 %v3_10b64 to i32
  store i32 %v4_10b64, i32* %r3.global-to-local, align 4
  %v2_10b68 = icmp ugt i8 %v3_10b64, -4
  store i1 %v2_10b68, i1* %cpsr_c.global-to-local, align 1
  %v7_10b68 = icmp eq i8 %v3_10b64, -3
  store i1 %v7_10b68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b68, label %bb344, label %dec_label_pc_10b74

bb344:                                            ; preds = %dec_label_pc_10b64
  %v1_10b6c = load i32, i32* @r8, align 4
  %v2_10b6c = trunc i32 %v1_10b6c to i8
  store i8 %v2_10b6c, i8* %v2_10b64, align 1
  %v0_10b70.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b70.pr, label %dec_label_pc_1039c, label %.dec_label_pc_10b74_crit_edge

.dec_label_pc_10b74_crit_edge:                    ; preds = %bb344
  %v0_10b74.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10b74

dec_label_pc_10b74:                               ; preds = %.dec_label_pc_10b74_crit_edge, %dec_label_pc_10b64
  %v0_10b74 = phi i32 [ %v0_10b74.pre, %.dec_label_pc_10b74_crit_edge ], [ %v4_10b64, %dec_label_pc_10b64 ]
  %v2_10b74 = icmp ugt i32 %v0_10b74, 250
  store i1 %v2_10b74, i1* %cpsr_c.global-to-local, align 1
  %v7_10b74 = icmp eq i32 %v0_10b74, 251
  store i1 %v7_10b74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b74, label %bb345, label %dec_label_pc_1039c

bb345:                                            ; preds = %dec_label_pc_10b74
  %v1_10b78 = load i32, i32* %sl.global-to-local, align 4
  %v2_10b78 = trunc i32 %v1_10b78 to i8
  %v3_10b78 = load i32, i32* @r4, align 4
  %v4_10b78 = add i32 %v3_10b78, -1
  %v5_10b78 = inttoptr i32 %v4_10b78 to i8*
  store i8 %v2_10b78, i8* %v5_10b78, align 1
  br label %dec_label_pc_1039c

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10914
  store i32 %v1_10950, i32* %r0.global-to-local, align 4
  %v0_10b88 = load i32, i32* @r5, align 4
  %v1_10b88 = add i32 %v0_10b88, 4
  %v2_10b88 = inttoptr i32 %v1_10b88 to i32*
  %v3_10b88 = load i32, i32* %v2_10b88, align 4
  store i32 %v3_10b88, i32* %r0.global-to-local, align 4
  %v1_10b8c = call i32 @function_11c68(i32 %v3_10b88)
  store i32 %v1_10b8c, i32* %r0.global-to-local, align 4
  %v0_10b90 = load i32, i32* @r5, align 4
  %v1_10b90 = add i32 %v0_10b90, 284
  %v2_10b90 = inttoptr i32 %v1_10b90 to i8*
  %v3_10b90 = load i8, i8* %v2_10b90, align 1
  %v4_10b90 = zext i8 %v3_10b90 to i32
  %v1_10b94 = add nuw nsw i32 %v4_10b90, 1
  %v1_10b98 = urem i32 %v1_10b94, 256
  store i32 %v1_10b98, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  %v2_10ba0 = icmp ugt i32 %v1_10b98, 9
  store i1 %v2_10ba0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ba0 = icmp eq i32 %v1_10b98, 10
  store i1 %v7_10ba0, i1* %cpsr_z.global-to-local, align 1
  %v2_10ba4 = add i32 %v0_10b90, 4
  %v3_10ba4 = inttoptr i32 %v2_10ba4 to i32*
  store i32 -1, i32* %v3_10ba4, align 4
  %v0_10ba8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10ba8 = trunc i32 %v0_10ba8 to i8
  %v2_10ba8 = load i32, i32* @r5, align 4
  %v3_10ba8 = add i32 %v2_10ba8, 284
  %v4_10ba8 = inttoptr i32 %v3_10ba8 to i8*
  store i8 %v1_10ba8, i8* %v4_10ba8, align 1
  %v0_10bac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_10bb0 = load i32, i32* @r5, align 4
  br i1 %v0_10bac, label %dec_label_pc_10bb0, label %dec_label_pc_10c98

dec_label_pc_10bb0:                               ; preds = %dec_label_pc_10b80
  %v1_10bb0 = add i32 %v0_10bb0, 24
  %v2_10bb0 = inttoptr i32 %v1_10bb0 to i32*
  %v3_10bb0 = load i32, i32* %v2_10bb0, align 4
  store i32 %v3_10bb0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v3_10bc0 = add i32 %v0_10bb0, 284
  %v4_10bc0 = inttoptr i32 %v3_10bc0 to i8*
  store i8 0, i8* %v4_10bc0, align 1
  %v0_10bc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_10bc4 = load i32, i32* @r5, align 4
  %v2_10bc4 = add i32 %v1_10bc4, 12
  %v3_10bc4 = inttoptr i32 %v2_10bc4 to i32*
  store i32 %v0_10bc4, i32* %v3_10bc4, align 4
  br label %dec_label_pc_10a48

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10290
  br i1 %v2_102b8, label %dec_label_pc_10cec, label %dec_label_pc_10bd0

dec_label_pc_10bd0:                               ; preds = %dec_label_pc_10bcc
  %v3_10bd0 = icmp eq i32 %v5_102b4, -1
  store i1 %v3_10bd0, i1* %cpsr_c.global-to-local, align 1
  %v8_10bd0 = icmp eq i32 %v5_102b4, -1
  store i1 %v8_10bd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10bd0, label %dec_label_pc_10bd8, label %dec_label_pc_102e0

dec_label_pc_10bd8:                               ; preds = %dec_label_pc_10bd0
  store i32 %stack_var_-1868.0, i32* %r2.global-to-local, align 4
  %v2_10bdc = load i32, i32* %v2_10298, align 4
  store i32 %v2_10bdc, i32* %r3.global-to-local, align 4
  %v2_10be0 = icmp ugt i32 %v2_10bdc, 10
  store i1 %v2_10be0, i1* %cpsr_c.global-to-local, align 1
  %v7_10be0 = icmp eq i32 %v2_10bdc, 11
  store i1 %v7_10be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10be0, label %dec_label_pc_10110, label %dec_label_pc_10be8

dec_label_pc_10be8:                               ; preds = %dec_label_pc_10bd8, %dec_label_pc_10cec
  %v0_10be8 = load i32, i32* @r5, align 4
  %v1_10be8 = add i32 %v0_10be8, 4
  %v2_10be8 = inttoptr i32 %v1_10be8 to i32*
  %v3_10be8 = load i32, i32* %v2_10be8, align 4
  store i32 %v3_10be8, i32* %r0.global-to-local, align 4
  %v1_10bec = call i32 @function_11c68(i32 %v3_10be8)
  store i32 %v1_10bec, i32* %r0.global-to-local, align 4
  %v0_10bf0 = load i32, i32* @r5, align 4
  %v1_10bf0 = add i32 %v0_10bf0, 284
  %v2_10bf0 = inttoptr i32 %v1_10bf0 to i8*
  %v3_10bf0 = load i8, i8* %v2_10bf0, align 1
  %v4_10bf0 = zext i8 %v3_10bf0 to i32
  %v1_10bf4 = add nuw nsw i32 %v4_10bf0, 1
  %v1_10bf8 = urem i32 %v1_10bf4, 256
  store i32 %v1_10bf8, i32* %r3.global-to-local, align 4
  %v2_10bfc = icmp ugt i32 %v1_10bf8, 8
  store i1 %v2_10bfc, i1* %cpsr_c.global-to-local, align 1
  %v7_10bfc = icmp eq i32 %v1_10bf8, 9
  store i1 %v7_10bfc, i1* %cpsr_z.global-to-local, align 1
  %v1_10c00 = trunc i32 %v1_10bf4 to i8
  store i8 %v1_10c00, i8* %v2_10bf0, align 1
  store i32 -1, i32* @r4, align 4
  %v0_10c08 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10c08 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10c08 = xor i1 %v1_10c08, true
  %v3_10c08 = and i1 %v0_10c08, %v2_10c08
  br i1 %v3_10c08, label %bb346, label %.thread219

.thread219:                                       ; preds = %dec_label_pc_10be8
  %v1_10c0c215220 = load i32, i32* @r5, align 4
  %v2_10c0c216221 = add i32 %v1_10c0c215220, 4
  %v3_10c0c217222 = inttoptr i32 %v2_10c0c216221 to i32*
  store i32 -1, i32* %v3_10c0c217222, align 4
  br label %bb347

bb346:                                            ; preds = %dec_label_pc_10be8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10c0c211 = load i32, i32* @r5, align 4
  %v2_10c0c212 = add i32 %v1_10c0c211, 4
  %v3_10c0c213 = inttoptr i32 %v2_10c0c212 to i32*
  store i32 -1, i32* %v3_10c0c213, align 4
  %v4_10c10 = load i32, i32* %r3.global-to-local, align 4
  %v5_10c10 = load i32, i32* @r5, align 4
  %v6_10c10 = add i32 %v5_10c10, 12
  %v7_10c10 = inttoptr i32 %v6_10c10 to i32*
  store i32 %v4_10c10, i32* %v7_10c10, align 4
  %v4_10c14 = load i32, i32* %r3.global-to-local, align 4
  %v5_10c14 = trunc i32 %v4_10c14 to i8
  %v6_10c14 = load i32, i32* @r5, align 4
  %v7_10c14 = add i32 %v6_10c14, 284
  %v8_10c14 = inttoptr i32 %v7_10c14 to i8*
  store i8 %v5_10c14, i8* %v8_10c14, align 1
  %v0_10c18.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10c18.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb347

bb347:                                            ; preds = %.thread219, %bb346
  %v1_10c18 = phi i1 [ %v1_10c18.pre, %bb346 ], [ %v1_10c08, %.thread219 ]
  %v0_10c18 = phi i1 [ %v0_10c18.pre, %bb346 ], [ %v0_10c08, %.thread219 ]
  %v2_10c18 = xor i1 %v1_10c18, true
  %v3_10c18 = and i1 %v0_10c18, %v2_10c18
  br i1 %v3_10c18, label %dec_label_pc_10110, label %dec_label_pc_10c1c

dec_label_pc_10c1c:                               ; preds = %bb347
  %v0_10c1c = load i32, i32* @r5, align 4
  store i32 %v0_10c1c, i32* @r0, align 4
  %v0_10c20 = call i32 @function_e260()
  store i32 %v0_10c20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10110

dec_label_pc_10c28:                               ; preds = %dec_label_pc_104d4, %dec_label_pc_104b0, %dec_label_pc_104f0
  store i32 %v3_104b0, i32* %r1.global-to-local, align 4
  %v0_10c2c = load i32, i32* @sb, align 4
  store i32 %v0_10c2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1492c.609 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_10c38 = call i32 @function_114ac(i32 %v0_10c2c, i32 %v3_104b0, i32 ptrtoint ([8 x i8]* @global_var_1492c.609 to i32), i32 7)
  store i32 %v5_10c38, i32* %r0.global-to-local, align 4
  %v3_10c3c = icmp eq i32 %v5_10c38, -1
  store i1 %v3_10c3c, i1* %cpsr_c.global-to-local, align 1
  %v8_10c3c = icmp eq i32 %v5_10c38, -1
  store i1 %v8_10c3c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_10c38, i32* @r7, align 4
  br i1 %v3_10c3c, label %dec_label_pc_10274.loopexit, label %dec_label_pc_104fc

dec_label_pc_10c4c:                               ; preds = %dec_label_pc_10b58
  store i32 %v2_10340, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_10c58 = add i32 %v0_10b44, 4
  %v2_10c58 = inttoptr i32 %v1_10c58 to i32*
  %v3_10c58 = load i32, i32* %v2_10c58, align 4
  store i32 %v3_10c58, i32* %r0.global-to-local, align 4
  %v5_10c5c = call i32 @function_12420(i32 %v3_10c58, i32* nonnull %stack_var_-41, i32 3, i32 16384)
  store i32 %v5_10c5c, i32* %r0.global-to-local, align 4
  store i32 %v2_10b30, i32* %r1.global-to-local, align 4
  %v0_10c64 = load i32, i32* @r5, align 4
  %v1_10c64 = add i32 %v0_10c64, 4
  %v2_10c64 = inttoptr i32 %v1_10c64 to i32*
  %v3_10c64 = load i32, i32* %v2_10c64, align 4
  store i32 %v3_10c64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_103d8

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10280
  store i32 %.pre, i32* @r0, align 4
  %v1_10c7c = add i32 %v0_10c74, 92
  store i32 %v1_10c7c, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_10c84 = call i32 @function_121e0(i32 %.pre, i32 %v1_10c7c, i32 192)
  store i32 %v3_10c84, i32* %r0.global-to-local, align 4
  %v0_10c88 = load i32, i32* @r5, align 4
  %v1_10c88 = add i32 %v0_10c88, 24
  %v2_10c88 = inttoptr i32 %v1_10c88 to i32*
  %v3_10c88 = load i32, i32* %v2_10c88, align 4
  store i32 %v3_10c88, i32* %r3.global-to-local, align 4
  %v1_10c8c = add i32 %v3_10c88, -64
  store i32 %v1_10c8c, i32* %ip.global-to-local, align 4
  store i32 %v1_10c8c, i32* %v2_10c88, align 4
  br label %dec_label_pc_10290

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10b80
  store i32 %v0_10bb0, i32* @r0, align 4
  %v0_10c9c = call i32 @function_e260()
  store i32 %v0_10c9c, i32* %r0.global-to-local, align 4
  %v0_10ca0 = load i32, i32* @r5, align 4
  %v1_10ca0 = add i32 %v0_10ca0, 24
  %v2_10ca0 = inttoptr i32 %v1_10ca0 to i32*
  %v3_10ca0 = load i32, i32* %v2_10ca0, align 4
  store i32 %v3_10ca0, i32* %ip.global-to-local, align 4
  %v0_10ca4 = load i32, i32* @r4, align 4
  store i32 %v0_10ca4, i32* @r7, align 4
  br label %dec_label_pc_10a48

dec_label_pc_10cac:                               ; preds = %dec_label_pc_10068, %dec_label_pc_1004c
  %v0_10cac = load i32, i32* @r7, align 4
  %v1_10cac = load i32, i32* @r4, align 4
  %v2_10cac = add i32 %v1_10cac, 12
  %v3_10cac = inttoptr i32 %v2_10cac to i32*
  store i32 %v0_10cac, i32* %v3_10cac, align 4
  %v0_10cb0 = load i32, i32* @r7, align 4
  %v1_10cb0 = trunc i32 %v0_10cb0 to i8
  %v2_10cb0 = load i32, i32* @r4, align 4
  %v3_10cb0 = add i32 %v2_10cb0, 284
  %v4_10cb0 = inttoptr i32 %v3_10cb0 to i8*
  store i8 %v1_10cb0, i8* %v4_10cb0, align 1
  br label %bb310

dec_label_pc_10cb8:                               ; preds = %dec_label_pc_101f4, %dec_label_pc_101ac
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_1021c, %dec_label_pc_10cb8
  %v0_10cc4 = phi i32 [ 0, %dec_label_pc_10cb8 ], [ %v0_101fc, %dec_label_pc_1021c ]
  %v0_10cbc = load i32, i32* @r5, align 4
  %v1_10cbc = add i32 %v0_10cbc, 4
  %v2_10cbc = inttoptr i32 %v1_10cbc to i32*
  %v3_10cbc = load i32, i32* %v2_10cbc, align 4
  store i32 %v3_10cbc, i32* @r4, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_10cc4 = inttoptr i32 %v0_10cbc to i32*
  store i32 %v0_10cc4, i32* %v2_10cc4, align 4
  %v0_10cc8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10cc8 = load i32, i32* @r5, align 4
  %v2_10cc8 = add i32 %v1_10cc8, 24
  %v3_10cc8 = inttoptr i32 %v2_10cc8 to i32*
  store i32 %v0_10cc8, i32* %v3_10cc8, align 4
  %v0_100ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100ec

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_1016c
  %v0_10cd0 = load i32, i32* @r5, align 4
  %v1_10cd0 = add i32 %v0_10cd0, 4
  %v2_10cd0 = inttoptr i32 %v1_10cd0 to i32*
  %v3_10cd0 = load i32, i32* %v2_10cd0, align 4
  store i32 %v3_10cd0, i32* %r0.global-to-local, align 4
  %v1_10cd4 = call i32 @function_11c68(i32 %v3_10cd0)
  store i32 %v1_10cd4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v0_10cdc = load i32, i32* @r6, align 4
  %v1_10cdc = load i32, i32* @r5, align 4
  %v2_10cdc = add i32 %v1_10cdc, 12
  %v3_10cdc = inttoptr i32 %v2_10cdc to i32*
  store i32 %v0_10cdc, i32* %v3_10cdc, align 4
  %v0_10ce0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10ce0 = load i32, i32* @r5, align 4
  %v2_10ce0 = add i32 %v1_10ce0, 4
  %v3_10ce0 = inttoptr i32 %v2_10ce0 to i32*
  store i32 %v0_10ce0, i32* %v3_10ce0, align 4
  %v0_10ce4 = load i32, i32* @r6, align 4
  %v1_10ce4 = trunc i32 %v0_10ce4 to i8
  %v2_10ce4 = load i32, i32* @r5, align 4
  %v3_10ce4 = add i32 %v2_10ce4, 284
  %v4_10ce4 = inttoptr i32 %v3_10ce4 to i8*
  store i8 %v1_10ce4, i8* %v4_10ce4, align 1
  br label %dec_label_pc_10110

dec_label_pc_10cec:                               ; preds = %dec_label_pc_10bcc
  store i32 %stack_var_-1868.0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v2_10298, align 4
  br label %dec_label_pc_10be8

dec_label_pc_10cfc:                               ; preds = %dec_label_pc_10a04
  store i32 2, i32* @r5, align 4
  %v1_10d00 = add i32 %v2_10a20, 4
  %v2_10d00 = inttoptr i32 %v1_10d00 to i32*
  %v3_10d00 = load i32, i32* %v2_10d00, align 4
  store i32 %v3_10d00, i32* @r4, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v0_10d0c = call i32 @function_db88()
  store i32 %v0_10d0c, i32* %r0.global-to-local, align 4
  %v0_10d10 = load i32, i32* @r8, align 4
  %v1_10d10 = inttoptr i32 %v0_10d10 to i8*
  %v2_10d10 = load i8, i8* %v1_10d10, align 1
  %v3_10d10 = zext i8 %v2_10d10 to i32
  store i32 %v3_10d10, i32* %r1.global-to-local, align 4
  %v2_10d14 = call i32 @function_119f0(i32 %v0_10d0c, i32 %v3_10d10)
  store i32 %v2_10d14, i32* %r0.global-to-local, align 4
  %v0_10d18 = load i32, i32* @r4, align 4
  %v2_10d18 = and i32 %v2_10d14, 1073741824
  %v3_10d18 = icmp ne i32 %v2_10d18, 0
  store i1 %v3_10d18, i1* %cpsr_c.global-to-local, align 1
  %v4_10d18 = mul i32 %v2_10d14, 4
  %v5_10d18 = add i32 %v0_10d18, %v4_10d18
  %v6_10d18 = inttoptr i32 %v5_10d18 to i32*
  %v7_10d18 = load i32, i32* %v6_10d18, align 4
  store i32 %v7_10d18, i32* %r3.global-to-local, align 4
  %v0_10d1c = load i32, i32* @sl, align 4
  store i32 %v0_10d1c, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v2_10d28 = inttoptr i32 %v0_10d1c to i32*
  %v3_10d28 = call i32 @function_10e34(i32 24, i32* %v2_10d28)
  %v4_10d28 = inttoptr i32 %v3_10d28 to i8*
  store i32 %v3_10d28, i32* %r0.global-to-local, align 4
  %v2_10d2c = add i32 %v3_10d28, 1
  %v3_10d2c = inttoptr i32 %v2_10d2c to i8*
  %v4_10d2c = load i8, i8* %v3_10d2c, align 1
  %v5_10d2c = zext i8 %v4_10d2c to i32
  store i32 %v5_10d2c, i32* %r2.global-to-local, align 4
  %v3_10d30 = load i8, i8* %v4_10d28, align 1
  %v4_10d30 = zext i8 %v3_10d30 to i32
  %v4_10d34 = mul nuw nsw i32 %v5_10d2c, 256
  %v5_10d34 = or i32 %v4_10d30, %v4_10d34
  store i32 %v5_10d34, i32* %r3.global-to-local, align 4
  %v1_10d38 = sext i8 %v3_10d30 to i32
  %v2_10d38 = and i32 %v1_10d38, 128
  %v3_10d38 = icmp ne i32 %v2_10d38, 0
  store i1 %v3_10d38, i1* %cpsr_c.global-to-local, align 1
  %v4_10d38 = sdiv i32 %v1_10d38, 256
  store i32 %v4_10d38, i32* %r1.global-to-local, align 4
  %v0_10d3c = load i32, i32* @r8, align 4
  store i32 %v0_10d3c, i32* %r0.global-to-local, align 4
  %v10_10d48 = call i32 @function_dcf0(i32 %v0_10d3c, i32 %v4_10d38, i32 %v5_10d2c, i32 %v1_10d38, i32 %v1_10d38, i32 %v4_10d38)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_10d50 = call i32 @function_10e60(i32 23)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10d58 = call i32 @function_10e60(i32 24)
  %v0_10d60 = load i32, i32* @r6, align 4
  store i32 %v0_10d60, i32* %r0.global-to-local, align 4
  %v2_10d64 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_10d64, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_10d6c = bitcast i32* %stack_var_-92 to %sockaddr*
  %v4_10d6c = call i32 @function_1230c(i32 %v0_10d60, %sockaddr* %v3_10d6c, i32 16)
  store i32 %v4_10d6c, i32* %r0.global-to-local, align 4
  %v3_10d70 = icmp eq i32 %v4_10d6c, -1
  store i1 %v3_10d70, i1* %cpsr_c.global-to-local, align 1
  %v8_10d70 = icmp eq i32 %v4_10d6c, -1
  store i1 %v8_10d70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10d70, label %dec_label_pc_10d78, label %dec_label_pc_10d88

dec_label_pc_10d78:                               ; preds = %dec_label_pc_10cfc
  %v0_10d78 = load i32, i32* @r6, align 4
  store i32 %v0_10d78, i32* %r0.global-to-local, align 4
  %v1_10d7c = call i32 @function_11c68(i32 %v0_10d78)
  %v0_10d80 = load i32, i32* @sl, align 4
  store i32 %v0_10d80, i32* %r0.global-to-local, align 4
  %v1_10d84 = call i32 @function_12c20(i32 %v0_10d80)
  store i32 %v1_10d84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10cfc, %dec_label_pc_10d78
  store i32 %v2_105a8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d98 = load i32, i32* @r6, align 4
  store i32 %v0_10d98, i32* %r0.global-to-local, align 4
  %v0_10d9c = load i32, i32* @sl, align 4
  store i32 %v0_10d9c, i32* %stack_var_-56, align 4
  %v6_10da0 = call i32 @function_12420(i32 %v0_10d98, i32* nonnull %stack_var_-56, i32 1, i32 16384)
  store i32 %v2_1065c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10db4 = load i32, i32* @r6, align 4
  store i32 %v0_10db4, i32* %r0.global-to-local, align 4
  %v5_10db8 = call i32 @function_12420(i32 %v0_10db4, i32* nonnull %stack_var_-48, i32 4, i32 16384)
  %v0_10dc0 = load i32, i32* @r5, align 4
  store i32 %v0_10dc0, i32* %r2.global-to-local, align 4
  %v2_10dc4 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_10dc4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10dcc = load i32, i32* @r6, align 4
  store i32 %v0_10dcc, i32* %r0.global-to-local, align 4
  %v5_10dd0 = call i32 @function_12420(i32 %v0_10dcc, i32* nonnull %stack_var_-38, i32 %v0_10dc0, i32 16384)
  %v0_10dd4 = load i32, i32* @fp, align 4
  %v1_10dd4 = add i32 %v0_10dd4, 12
  store i32 %v1_10dd4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10de0 = load i32, i32* @r6, align 4
  store i32 %v0_10de0, i32* %r0.global-to-local, align 4
  %v4_10de4 = inttoptr i32 %v1_10dd4 to i32*
  %v5_10de4 = call i32 @function_12420(i32 %v0_10de0, i32* %v4_10de4, i32 1, i32 16384)
  store i32 %v5_10de4, i32* %r0.global-to-local, align 4
  %v0_10de8 = load i32, i32* @fp, align 4
  %v1_10de8 = inttoptr i32 %v0_10de8 to i32*
  %v2_10de8 = load i32, i32* %v1_10de8, align 4
  store i32 %v2_10de8, i32* %r1.global-to-local, align 4
  %v1_10dec = add i32 %v0_10de8, 12
  %v2_10dec = inttoptr i32 %v1_10dec to i8*
  %v3_10dec = load i8, i8* %v2_10dec, align 1
  %v4_10dec = zext i8 %v3_10dec to i32
  store i32 %v4_10dec, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10df4 = load i32, i32* @r6, align 4
  store i32 %v0_10df4, i32* %r0.global-to-local, align 4
  %v4_10df8 = inttoptr i32 %v2_10de8 to i32*
  %v5_10df8 = call i32 @function_12420(i32 %v0_10df4, i32* %v4_10df8, i32 %v4_10dec, i32 16384)
  %v0_10dfc = load i32, i32* @fp, align 4
  %v1_10dfc = add i32 %v0_10dfc, 13
  store i32 %v1_10dfc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10e08 = load i32, i32* @r6, align 4
  store i32 %v0_10e08, i32* %r0.global-to-local, align 4
  %v4_10e0c = inttoptr i32 %v1_10dfc to i32*
  %v5_10e0c = call i32 @function_12420(i32 %v0_10e08, i32* %v4_10e0c, i32 1, i32 16384)
  %v0_10e10 = load i32, i32* @r6, align 4
  store i32 %v0_10e10, i32* %r0.global-to-local, align 4
  %v0_10e14 = load i32, i32* @fp, align 4
  %v1_10e14 = add i32 %v0_10e14, 13
  %v2_10e14 = inttoptr i32 %v1_10e14 to i8*
  %v3_10e14 = load i8, i8* %v2_10e14, align 1
  %v4_10e14 = zext i8 %v3_10e14 to i32
  store i32 %v4_10e14, i32* %r2.global-to-local, align 4
  %v1_10e18 = add i32 %v0_10e14, 4
  %v2_10e18 = inttoptr i32 %v1_10e18 to i32*
  %v3_10e18 = load i32, i32* %v2_10e18, align 4
  store i32 %v3_10e18, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10e20 = inttoptr i32 %v3_10e18 to i32*
  %v5_10e20 = call i32 @function_12420(i32 %v0_10e10, i32* %v4_10e20, i32 %v4_10e14, i32 16384)
  %v0_10e24 = load i32, i32* @r6, align 4
  store i32 %v0_10e24, i32* %r0.global-to-local, align 4
  %v1_10e28 = call i32 @function_11c68(i32 %v0_10e24)
  store i32 %v1_10e28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e2c

dec_label_pc_10e2c:                               ; preds = %dec_label_pc_109e8, %dec_label_pc_10d88
  %v0_10e2c = load i32, i32* @sl, align 4
  store i32 %v0_10e2c, i32* %r0.global-to-local, align 4
  %v1_10e30 = call i32 @function_12c20(i32 %v0_10e2c)
  store i32 %v1_10e30, i32* %r0.global-to-local, align 4
  ret i32 %v1_10e30

; uselistorder directives
  uselistorder i32 %v4_10d38, { 2, 1, 0 }
  uselistorder i32 %v1_10d38, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10d2c, { 1, 0, 2 }
  uselistorder i32 %v2_10d14, { 1, 0, 2 }
  uselistorder i32 %v3_10c64, { 1, 0 }
  uselistorder i32 %v5_10c38, { 2, 0, 3, 4, 1 }
  uselistorder i1 %v1_10c08, { 1, 0 }
  uselistorder i32 %v1_10bf8, { 2, 1, 0 }
  uselistorder i32 %v1_10bf4, { 1, 0 }
  uselistorder i32 %v0_10bb0, { 1, 0, 2 }
  uselistorder i32 %v1_10b98, { 2, 1, 0 }
  uselistorder i32 %v0_10b44, { 1, 2, 0 }
  uselistorder i1 %v7_10ab8, { 1, 0 }
  uselistorder i32 %v1_10ab4, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_10aac, { 1, 0 }
  uselistorder i8 %v3_10aa4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10ab4, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_10a90, { 1, 0 }
  uselistorder i1 %v7_10a88, { 1, 0 }
  uselistorder i1 %v7_10a80, { 1, 0 }
  uselistorder i32 %v0_10a5c, { 1, 2, 0 }
  uselistorder i32 %v2_10a48, { 1, 0 }
  uselistorder i32 %v1_10a48, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_10a48, { 3, 2, 5, 0, 1, 4, 6 }
  uselistorder i1 %v7_109f8, { 1, 0 }
  uselistorder i32 %v3_109f4, { 1, 0, 2, 3 }
  uselistorder i1 %v2_109e0, { 1, 0 }
  uselistorder i32 %.351, { 1, 0 }
  uselistorder i1 %v7_109c8, { 1, 0 }
  uselistorder i32 %v0_109c4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_109a4, { 1, 0, 2 }
  uselistorder i32 %v4_109a0, { 1, 0, 2 }
  uselistorder i1 %v7_10990, { 1, 0 }
  uselistorder i32 %v0_10990, { 3, 2, 0, 4, 1 }
  uselistorder i1 %v7_108ac, { 1, 0 }
  uselistorder i32 %v1_108a8, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_108a0, { 1, 0 }
  uselistorder i8 %v3_10898, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_108a8, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_10884, { 1, 0 }
  uselistorder i1 %v7_1087c, { 1, 0 }
  uselistorder i1 %v7_10874, { 1, 0 }
  uselistorder i1 %v7_106f4, { 1, 0 }
  uselistorder i32 %v1_106f0, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_106e8, { 1, 0 }
  uselistorder i8 %v3_106e0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_106f0, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_106cc, { 1, 0 }
  uselistorder i1 %v7_106c4, { 1, 0 }
  uselistorder i1 %v7_106bc, { 1, 0 }
  uselistorder i1 %v7_10640, { 1, 0 }
  uselistorder i32 %v1_1063c, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_10634, { 1, 0 }
  uselistorder i8 %v3_1062c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1063c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_10618, { 1, 0 }
  uselistorder i1 %v7_10610, { 1, 0 }
  uselistorder i1 %v7_10608, { 1, 0 }
  uselistorder i1 %v7_1058c, { 1, 0 }
  uselistorder i32 %v1_10588, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_10580, { 1, 0 }
  uselistorder i8 %v3_10578, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10588, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_10564, { 1, 0 }
  uselistorder i1 %v7_1055c, { 1, 0 }
  uselistorder i1 %v7_10554, { 1, 0 }
  uselistorder i32 %v0_104fc, { 2, 1, 0 }
  uselistorder i1 %v7_104f4, { 1, 0 }
  uselistorder i1 %v8_104e8, { 1, 0 }
  uselistorder i8 %v3_104e0, { 4, 5, 6, 7, 8, 3, 2, 1, 0 }
  uselistorder i32 %v0_104f0, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_104cc, { 1, 0 }
  uselistorder i1 %v7_104c4, { 1, 0 }
  uselistorder i32 %v3_104b0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1046c, { 2, 1, 0 }
  uselistorder i1 %v7_10464, { 1, 0 }
  uselistorder i1 %v8_10458, { 1, 0 }
  uselistorder i8 %v3_10450, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10460, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_1043c, { 1, 0 }
  uselistorder i1 %v7_10434, { 1, 0 }
  uselistorder i1 %v7_1042c, { 1, 0 }
  uselistorder i32 %v3_10418, { 2, 3, 0, 1 }
  uselistorder i32 %v0_10408.pre, { 0, 2, 1 }
  uselistorder i32 %v1_103f0, { 1, 0 }
  uselistorder i32 %v1_103ec, { 1, 0 }
  uselistorder i32 %v1_103e4, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_103e0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_103e0, { 0, 2, 1 }
  uselistorder i1 %v7_10388, { 1, 0 }
  uselistorder i1 %v2_10374, { 1, 0, 2 }
  uselistorder i1 %v2_1035c, { 1, 0, 2 }
  uselistorder i32 %v1_1037c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_10350, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v1_10378, { 1, 0 }
  uselistorder i32 %v2_10380, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_102f8, { 4, 19, 5, 17, 6, 18, 7, 16, 8, 15, 9, 14, 10, 13, 3, 0, 11, 12, 20, 2, 1 }
  uselistorder i32 %v1_102d4, { 1, 2, 3, 0 }
  uselistorder i32 %v3_102d0, { 1, 0 }
  uselistorder i32 %v5_102b4, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_102a0, { 1, 0, 2 }
  uselistorder i32 %v3_1029c, { 1, 0, 2 }
  uselistorder i32 %v0_10c74, { 1, 0, 2 }
  uselistorder i32 %v5_10264, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_10244, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_101fc, { 0, 3, 2, 4, 6, 5, 1 }
  uselistorder i32 %v3_101dc, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_101d0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1015c, { 2, 1, 0 }
  uselistorder i32 %v3_10158, { 1, 0 }
  uselistorder i1 %v7_10140, { 1, 0 }
  uselistorder i32 %v3_1013c, { 5, 4, 2, 1, 0, 6, 7, 3 }
  uselistorder i32 %v0_10130, { 1, 0 }
  uselistorder i32 %v1_10114, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10100, { 2, 1, 0 }
  uselistorder i32 %v3_100fc, { 1, 0 }
  uselistorder i32 %v0_10100, { 1, 0 }
  uselistorder i32 %v2_1065c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_105a8, { 4, 5, 3, 2, 6, 7, 1, 0 }
  uselistorder i32 %v2_10b38, { 1, 2, 0 }
  uselistorder i32 %v2_10340, { 0, 2, 1 }
  uselistorder i32 %v1_10094, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10094, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10070, { 2, 1, 0 }
  uselistorder i32 %v1_1006c, { 1, 0 }
  uselistorder i32 %v0_1003c, { 0, 2, 1 }
  uselistorder i32 %v1_10034, { 1, 0 }
  uselistorder i1 %v7_10000, { 0, 3, 1, 2 }
  uselistorder i1 %v2_10000, { 1, 2, 0 }
  uselistorder i32 %v2_fff8, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v0_fff0, { 1, 0 }
  uselistorder i32 %v1_ffd4, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_ffc8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_ffc8, { 0, 2, 1 }
  uselistorder i32 %v1_ffb8, { 1, 0 }
  uselistorder i32 %v3_1001c, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %storemerge224, { 1, 0, 2 }
  uselistorder i32 %v2_10028, { 0, 4, 1, 5, 2, 7, 3, 6 }
  uselistorder i32 %stack_var_-1868.0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ff08, { 1, 0 }
  uselistorder i32 %v1_fef4, { 1, 0 }
  uselistorder i32 %v1_fedc, { 1, 2, 0 }
  uselistorder i32 %v0_fee8, { 0, 3, 2, 1 }
  uselistorder i32 %v0_feac, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %v2_fea0, { 2, 1, 0 }
  uselistorder i32 %v1_fe7c, { 3, 1, 0, 4, 2 }
  uselistorder i1 %v2_fe54, { 1, 0 }
  uselistorder i32 %v4_fdf4, { 2, 3, 7, 0, 1, 5, 4, 6 }
  uselistorder i32 %v1_fd5c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_fc7c, { 1, 0 }
  uselistorder i32 %v1_fc78, { 2, 0, 1 }
  uselistorder i32 %v4_fc54, { 1, 0 }
  uselistorder i1 %v2_fbc4, { 1, 0 }
  uselistorder i1 %v3_fba8, { 1, 0, 2 }
  uselistorder i1 %v2_fb94, { 1, 0 }
  uselistorder i1 %v2_fb70, { 1, 0 }
  uselistorder i32 %v1_fb20, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fb0c, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_fb08, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v4_faf8, { 1, 0 }
  uselistorder i32 %v0_fae8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_fad8, { 1, 0 }
  uselistorder i32 %v0_fde8, { 0, 1, 2, 5, 6, 7, 9, 3, 4, 8, 10 }
  uselistorder i8* %stack_var_-1884.0, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %stack_var_-1872.0, { 0, 3, 2, 1 }
  uselistorder i32 %v4_e9ac, { 1, 0 }
  uselistorder i32 %v0_e99c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_e95c, { 1, 0 }
  uselistorder i32 %v4_e948, { 2, 0, 1 }
  uselistorder i32 %v0_e940, { 0, 2, 1 }
  uselistorder i32 %v0_e8e8, { 3, 2, 0, 1 }
  uselistorder i1 %v7_e88c, { 1, 0 }
  uselistorder i32 %v3_e884, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v0_e86c, { 0, 2, 1 }
  uselistorder i32 %v1_e860, { 1, 0, 2 }
  uselistorder i32 %v0_e854, { 2, 1, 0 }
  uselistorder i32 %v0_e824, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %storemerge230, { 1, 0 }
  uselistorder i32 %v0_e4e0, { 3, 1, 2, 0, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 14, 12, 13 }
  uselistorder i32* %stack_var_-92, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 4, 5, 3, 6, 2, 7, 0, 8, 9 }
  uselistorder i32* %stack_var_-56, { 0, 6, 7, 3, 8, 4, 9, 5, 10, 2, 11, 1, 12, 13 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %stack_var_-38, { 0, 2, 1 }
  uselistorder i32 %tmp240, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r5.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 62, 63, 44, 36, 64, 65, 66, 67, 68, 13, 14, 45, 46, 47, 48, 0, 1, 2, 3, 15, 105, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 57, 58, 59, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 69, 70, 71, 116, 117, 118, 60, 61, 119, 120, 122, 121, 123, 124, 125, 126, 127, 129, 131, 130, 128, 132, 133, 134, 135, 141, 136, 137, 138, 139, 143, 142, 114, 145, 144, 115, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 104, 90, 91, 92, 93, 94, 95, 97, 96, 99, 98, 140, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113 }
  uselistorder i32* %r2.global-to-local, {}
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 44, 45, 39, 40, 36, 15, 16, 1, 2, 3, 352, 353, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 0, 339, 340, 341, 43, 349, 342, 343, 344, 346, 347, 345, 348, 350, 354, 351, 285, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 338, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284 }
  uselistorder i32* %r0.global-to-local, { 11, 10, 13, 12, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 29, 28, 31, 30, 32, 33, 126, 125, 35, 127, 108, 111, 110, 100, 99, 128, 130, 129, 34, 37, 36, 38, 112, 1, 0, 2, 4, 3, 6, 5, 7, 8, 9, 115, 40, 39, 41, 43, 42, 44, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 55, 56, 57, 58, 59, 61, 60, 63, 62, 65, 64, 66, 67, 68, 70, 69, 71, 73, 72, 75, 74, 76, 77, 78, 79, 81, 80, 83, 82, 85, 84, 86, 87, 88, 89, 91, 90, 93, 92, 95, 94, 96, 97, 98, 102, 101, 109, 103, 104, 105, 117, 116, 119, 118, 106, 107, 114, 113, 450, 430, 431, 121, 120, 123, 122, 432, 434, 433, 435, 436, 438, 437, 449, 444, 439, 440, 443, 441, 442, 445, 447, 448, 446, 133, 131, 132, 135, 134, 136, 138, 137, 151, 139, 140, 141, 451, 142, 143, 144, 146, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 365, 367, 366, 369, 368, 370, 374, 371, 372, 373, 375, 376, 124, 377 }
  uselistorder i32* %lr.global-to-local, { 10, 11, 12, 13, 14, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %ip.global-to-local, { 22, 23, 2, 24, 3, 16, 0, 1, 20, 4, 5, 6, 7, 9, 8, 11, 10, 12, 13, 14, 19, 15, 21, 17, 18, 25, 42, 43, 44, 45, 46, 49, 47, 48, 50, 41, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 55, 98, 97, 99, 100, 101, 10, 11, 72, 73, 74, 75, 76, 0, 1, 6, 7, 2, 3, 4, 5, 8, 91, 12, 13, 14, 159, 15, 16, 17, 18, 19, 20, 25, 26, 21, 22, 23, 24, 27, 28, 29, 34, 35, 30, 31, 32, 33, 36, 37, 38, 43, 44, 39, 40, 41, 42, 45, 46, 47, 52, 53, 48, 49, 50, 51, 54, 56, 57, 61, 62, 58, 59, 60, 63, 93, 64, 69, 70, 65, 66, 67, 68, 71, 92, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 160, 102, 172, 173, 174, 175, 176, 96, 161, 94, 95, 177, 179, 178, 180, 181, 183, 185, 184, 162, 182, 186, 187, 188, 189, 190, 191, 196, 192, 193, 194, 195, 165, 166, 163, 164, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 120, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 158, 138, 139, 140, 141, 142, 157, 143, 144, 145, 156, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 169, 170, 167, 171 }
  uselistorder i1* %cpsr_c.global-to-local, { 9, 10, 11, 57, 97, 96, 98, 99, 100, 12, 74, 75, 76, 77, 0, 1, 6, 7, 2, 3, 4, 5, 8, 90, 13, 14, 15, 157, 16, 17, 18, 19, 20, 21, 22, 27, 28, 23, 24, 25, 26, 29, 30, 31, 36, 37, 32, 33, 34, 35, 38, 39, 40, 45, 46, 41, 42, 43, 44, 47, 48, 49, 54, 55, 50, 51, 52, 53, 56, 58, 59, 63, 64, 60, 61, 62, 65, 92, 66, 71, 72, 67, 68, 69, 70, 73, 91, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 158, 101, 172, 173, 174, 175, 176, 95, 159, 93, 94, 177, 179, 178, 180, 181, 183, 185, 184, 160, 182, 186, 187, 188, 189, 190, 195, 191, 192, 193, 194, 163, 164, 161, 102, 162, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 156, 134, 135, 136, 137, 138, 155, 139, 140, 141, 154, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 167, 168, 169, 170, 165, 171 }
  uselistorder i8 31, { 7, 1, 2, 0, 3, 4, 8, 5, 6 }
  uselistorder i8 30, { 6, 0, 1, 2, 3, 7, 4, 5 }
  uselistorder i32 (i32)* @function_10e60, { 21, 20, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 23, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_10e34, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 (i32)* @function_10f18, { 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_14928.603 to i32*), { 4, 2, 3, 1, 0, 6, 5 }
  uselistorder [3 x i8]* @global_var_14928.603, { 1, 0 }
  uselistorder i8 58, { 6, 4, 5, 3, 2, 1, 0, 7, 8 }
  uselistorder i8 57, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 62, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 61, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 4, 2, 1, 0 }
  uselistorder i8 34, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 36, { 11, 12, 7, 8, 9, 10, 5, 6, 3, 4, 2, 0, 1 }
  uselistorder i8 35, { 12, 13, 8, 9, 10, 11, 6, 7, 4, 5, 2, 3, 0, 1 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_12420, { 2, 3, 4, 5, 6, 7, 8, 19, 0, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 20, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 1, 2, 3, 0 }
  uselistorder i8 -4, { 1, 2, 3, 0 }
  uselistorder i32 1073741824, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_123c0, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @function_114ac, { 2, 4, 3, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1d20c.112 to i8*), { 4, 0, 3, 2, 1 }
  uselistorder i8* @global_var_1d20d.113, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1d20c.112 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32*, i32)* @function_12364, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_11e88, { 0, 2, 1 }
  uselistorder i32 284, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32 1544, { 1, 0 }
  uselistorder i32 1672, { 2, 0, 1 }
  uselistorder i32 ()* @function_e260, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32*, i32, i32, i32, i32)* @function_123ec, { 1, 0, 2 }
  uselistorder i32 16384, { 31, 47, 32, 48, 33, 49, 34, 50, 35, 51, 36, 52, 13, 53, 12, 64, 0, 45, 1, 46, 2, 54, 3, 55, 4, 56, 5, 57, 6, 58, 7, 59, 8, 60, 9, 61, 29, 62, 30, 63, 27, 66, 28, 67, 26, 65, 37, 77, 10, 78, 11, 79, 14, 68, 38, 69, 40, 70, 15, 71, 41, 72, 42, 73, 43, 74, 16, 75, 39, 76, 17, 80, 18, 81, 19, 82, 83, 44, 84, 20, 85, 21, 86, 23, 87, 22, 88, 24, 89, 25, 90 }
  uselistorder i32 (i32, i32, i32, i32)* @function_c83c, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_c7e0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1d1f0.585, { 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 223, { 3, 0, 1, 2 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_148e0.574 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_148b4.568 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_14860.548 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_14848.542 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1482c.531 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_14824.529 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_147f8.519 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_147f0.517 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_147e8.513 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_147e0.510 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1477c.484 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_14770.480 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_14760.476 to i32), { 0, 6, 1, 2, 3, 7, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_14708.454 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1497c.450 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_146d0.440 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 11, 5, 12, 6, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_14650.414 to i32), { 0, 1, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_14630.408 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1461c.404 to i32), { 0, 7, 1, 8, 2, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_14614.402 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_145ec.392 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_14438.294 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1493c.260 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_143a0.258 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_14390.256 to i32), { 0, 6, 1, 7, 2, 8, 3, 4, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_1435c.244 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_14348.240 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_14340.238 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_14318.230 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_142e4.228 to i32), { 0, 1, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_14304.224 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_146a8.186 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_14284.184 to i32), { 0, 10, 1, 11, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 ptrtoint (i32* @global_var_1427c.182 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_14274.180 to i32), { 2, 11, 0, 12, 3, 13, 4, 14, 5, 15, 1, 16, 6, 7, 8, 17, 9, 18, 10, 19 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1426c.178 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1488c.176 to i32), { 0, 1, 2, 8, 3, 9, 4, 10, 5, 11, 6, 12, 7, 13 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_147ac.174 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1425c.170 to i32), { 0, 14, 1, 15, 2, 16, 3, 17, 4, 18, 5, 19, 6, 20, 7, 21, 8, 22, 9, 10, 11, 23, 12, 24, 13, 25 }
  uselistorder i32 ptrtoint (i32* @global_var_14934.168 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1424c.166 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_14244.164 to i32), { 0, 6, 1, 7, 2, 8, 3, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_14204.146 to i32), { 11, 101, 12, 102, 13, 103, 14, 104, 15, 105, 16, 106, 17, 107, 18, 108, 19, 109, 20, 110, 21, 111, 22, 112, 23, 113, 24, 114, 25, 115, 26, 116, 27, 117, 28, 118, 29, 119, 0, 120, 30, 121, 31, 122, 32, 123, 33, 124, 1, 125, 34, 126, 35, 127, 2, 128, 36, 129, 37, 130, 38, 131, 39, 132, 40, 133, 3, 134, 41, 135, 42, 136, 43, 137, 4, 138, 44, 139, 45, 140, 46, 141, 47, 142, 48, 143, 49, 144, 50, 145, 51, 146, 52, 147, 53, 148, 54, 149, 5, 150, 55, 151, 56, 152, 57, 153, 58, 154, 59, 155, 60, 156, 61, 157, 62, 158, 6, 159, 63, 160, 64, 161, 65, 162, 66, 163, 67, 164, 68, 165, 69, 166, 7, 167, 8, 168, 70, 169, 71, 170, 72, 171, 73, 172, 74, 173, 75, 174, 76, 175, 77, 176, 78, 177, 79, 178, 80, 179, 81, 180, 82, 181, 83, 182, 84, 183, 85, 184, 9, 185, 86, 186, 87, 187, 88, 188, 89, 189, 90, 190, 10, 191, 91, 192, 92, 193, 93, 194, 94, 195, 95, 196, 96, 97, 98, 197, 99, 198, 100, 199 }
  uselistorder i32 (i32, i32, i32)* @function_e334, { 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 51 }
  uselistorder i32 ptrtoint (i32* @global_var_1428c.142 to i32), { 0, 15, 1, 16, 2, 17, 3, 18, 4, 19, 5, 20, 6, 21, 7, 22, 8, 23, 9, 24, 10, 25, 11, 26, 12, 27, 13, 28, 14, 29 }
  uselistorder i32 ptrtoint (i32* @global_var_14254.140 to i32), { 8, 81, 9, 82, 10, 83, 0, 84, 11, 85, 12, 86, 13, 87, 14, 88, 15, 89, 16, 90, 17, 91, 18, 92, 19, 93, 1, 94, 20, 95, 21, 96, 22, 97, 23, 98, 24, 99, 25, 100, 26, 101, 27, 102, 28, 103, 29, 104, 2, 105, 30, 106, 31, 107, 32, 108, 33, 109, 3, 110, 34, 111, 35, 112, 36, 113, 37, 114, 38, 115, 39, 116, 40, 117, 41, 118, 42, 119, 4, 120, 43, 121, 44, 122, 45, 123, 5, 124, 46, 125, 47, 126, 48, 127, 49, 128, 50, 129, 51, 130, 52, 131, 53, 132, 54, 133, 55, 134, 56, 135, 57, 136, 58, 59, 60, 137, 61, 138, 62, 139, 63, 140, 64, 141, 65, 142, 66, 143, 67, 144, 68, 145, 69, 146, 70, 147, 71, 148, 72, 149, 6, 150, 73, 151, 74, 152, 75, 153, 7, 154, 76, 155, 77, 156, 78, 157, 79, 158, 80, 159 }
  uselistorder i8* @global_var_1d201.136, { 1, 0 }
  uselistorder i8 64, { 6, 0, 1, 7, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1d1f4.127 to i32), { 3, 2, 4, 5, 0, 6, 1, 7, 8 }
  uselistorder i8* @global_var_1d200.128, { 1, 0 }
  uselistorder i8** @global_var_1d1e0.123, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1d1e0.123 to i32), { 0, 2, 1, 9, 8, 3, 7, 6, 5, 4 }
  uselistorder i32 65280, { 27, 1, 14, 0, 2, 28, 3, 4, 29, 21, 22, 5, 30, 6, 31, 15, 16, 32, 33, 7, 8, 9, 34, 35, 17, 10, 36, 23, 18, 37, 38, 39, 40, 11, 24, 25, 26, 41, 12, 42, 43, 19, 44, 45, 13, 46, 47, 20, 48 }
  uselistorder i32 ()* @function_db88, { 66, 18, 61, 60, 59, 58, 57, 65, 64, 63, 62, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 15, 21, 20, 19, 4, 3, 2, 1, 0, 17, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32, i32, i32, i32*, i32)* @function_12480, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 2048, { 9, 8, 2, 4, 5, 0, 1, 6, 7, 3, 10, 11 }
  uselistorder i32* @global_var_1d274.121, { 1, 5, 2, 3, 4, 0 }
  uselistorder i32 1023, { 4, 5, 6, 7, 0, 3, 1, 2 }
  uselistorder i32* @global_var_1d270.119, { 1, 2, 3, 4, 0 }
  uselistorder i32 1024, { 0, 4, 1, 5, 6, 2, 7, 8, 3, 9 }
  uselistorder i32 288, { 1, 2, 5, 6, 0, 7, 3, 4, 8 }
  uselistorder i32* @global_var_1d210.106, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32*)* @function_11eb8, { 20, 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 21, 22, 23 }
  uselistorder i32* @global_var_1d258.33, { 3, 4, 0, 1, 2, 5, 6, 13, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 ()* @function_116a0, { 0, 2, 1 }
  uselistorder i32 ()* @function_11c94, { 3, 0, 2, 1 }
  uselistorder i32* @fp, { 0, 1, 2, 3, 4, 15, 16, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32* @sl, { 2, 3, 4, 5, 6, 7, 34, 35, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 0, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89 }
  uselistorder i32* @sb, { 2, 3, 6, 0, 1, 4, 5, 23, 22, 7, 8, 24, 25, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 51, 52, 54, 55, 56, 59, 57, 58, 60, 61 }
  uselistorder label %dec_label_pc_10e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10d88, { 1, 0 }
  uselistorder label %dec_label_pc_10cbc, { 1, 0 }
  uselistorder label %dec_label_pc_10c28, { 2, 0, 1 }
  uselistorder label %bb347, { 1, 0 }
  uselistorder label %dec_label_pc_10be8, { 1, 0 }
  uselistorder label %dec_label_pc_10ab4, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10a48, { 2, 3, 1, 11, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_10a2c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_108a8, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10894, { 1, 0 }
  uselistorder label %dec_label_pc_106f0, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_106dc, { 1, 0 }
  uselistorder label %dec_label_pc_1063c, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10628, { 1, 0 }
  uselistorder label %dec_label_pc_10588, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10574, { 1, 0 }
  uselistorder label %dec_label_pc_104fc, { 1, 0 }
  uselistorder label %dec_label_pc_104f0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_104dc, { 1, 0 }
  uselistorder label %dec_label_pc_10460, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1044c, { 1, 0 }
  uselistorder label %dec_label_pc_10408, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_103f8, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %bb321, { 2, 1, 0 }
  uselistorder label %bb318, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10358, { 1, 0 }
  uselistorder label %dec_label_pc_10358.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_102e0, { 1, 0 }
  uselistorder label %bb315, { 1, 0 }
  uselistorder label %dec_label_pc_10290, { 1, 0 }
  uselistorder label %dec_label_pc_10280, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10278thread-pre-split, { 4, 5, 3, 7, 2, 6, 1, 8, 0, 9 }
  uselistorder label %dec_label_pc_10278thread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10280.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10274.loopexit, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10234, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10110, { 6, 7, 3, 4, 0, 5, 1, 2 }
  uselistorder label %dec_label_pc_100ec, { 1, 0 }
  uselistorder label %bb312, { 1, 0 }
  uselistorder label %bb310, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_ff54.dec_label_pc_ff54_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_ff38.dec_label_pc_ff38_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_ff30, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_ff28, { 1, 0 }
  uselistorder label %dec_label_pc_fedc, { 1, 0 }
  uselistorder label %dec_label_pc_fd7c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_fd70, { 1, 0 }
  uselistorder label %.thread48, { 2, 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_fbd4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fbb0, { 1, 0 }
  uselistorder label %dec_label_pc_fba4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fb80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fb5c, { 1, 0 }
  uselistorder label %bb280, { 1, 0 }
  uselistorder label %dec_label_pc_fb08, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_e8e8, { 1, 0 }
}

define i32 @function_10e34(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10e34:
  %v3_10e38 = mul i32 %arg1, 8
  %v2_10e3c = add i32 %v3_10e38, ptrtoint (i32* @global_var_1d280.611 to i32)
  %v2_10e40 = icmp eq i32* %arg2, null
  br i1 %v2_10e40, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_10e34
  %v3_10e4c11 = inttoptr i32 %v2_10e3c to i32*
  %v4_10e4c12 = load i32, i32* %v3_10e4c11, align 4
  br label %bb15

bb:                                               ; preds = %dec_label_pc_10e34
  %v2_10e44 = add i32 %v3_10e38, add (i32 ptrtoint (i32* @global_var_1d280.611 to i32), i32 5)
  %v3_10e44 = inttoptr i32 %v2_10e44 to i8*
  %v4_10e44 = load i8, i8* %v3_10e44, align 1
  %v5_10e44 = zext i8 %v4_10e44 to i32
  store i32 %v5_10e44, i32* @r2, align 4
  %v2_10e48 = add i32 %v3_10e38, add (i32 ptrtoint (i32* @global_var_1d280.611 to i32), i32 4)
  %v3_10e48 = inttoptr i32 %v2_10e48 to i8*
  %v4_10e48 = load i8, i8* %v3_10e48, align 4
  %v5_10e48 = zext i8 %v4_10e48 to i32
  %v3_10e4c = inttoptr i32 %v2_10e3c to i32*
  %v4_10e4c = load i32, i32* %v3_10e4c, align 4
  %v5_10e50 = mul nuw nsw i32 %v5_10e44, 256
  %v6_10e50 = or i32 %v5_10e48, %v5_10e50
  store i32 %v6_10e50, i32* %arg2, align 4
  br label %bb15

bb15:                                             ; preds = %.thread, %bb
  %v4_10e4c714 = phi i32 [ %v4_10e4c12, %.thread ], [ %v4_10e4c, %bb ]
  ret i32 %v4_10e4c714

; uselistorder directives
  uselistorder i32 %v2_10e3c, { 1, 0 }
  uselistorder i32 %v3_10e38, { 2, 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_10e60(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e60:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10e60 = mul i32 %arg1, 8
  %v3_10e64 = load i32, i32* @r4, align 4
  store i32 %v3_10e64, i32* %stack_var_-20, align 4
  %v3_10e74 = and i32 %v3_10e60, 2040
  %v2_10e78 = add i32 %v3_10e74, ptrtoint (i32* @global_var_1d280.611 to i32)
  store i32 %v2_10e78, i32* @lr, align 4
  %v1_10e80 = add i32 %v3_10e74, add (i32 ptrtoint (i32* @global_var_1d280.611 to i32), i32 4)
  store i32 %v1_10e80, i32* %r7.global-to-local, align 4
  %v2_10e84 = load i32, i32* @global_var_1d030.614, align 4
  store i32 %v2_10e84, i32* @r2, align 4
  %v2_10e88 = inttoptr i32 %v1_10e80 to i8*
  %v3_10e88 = load i8, i8* %v2_10e88, align 4
  %v4_10e88 = zext i8 %v3_10e88 to i32
  %v1_10e8c = add i32 %v3_10e74, add (i32 ptrtoint (i32* @global_var_1d280.611 to i32), i32 5)
  %v2_10e8c = inttoptr i32 %v1_10e8c to i8*
  %v3_10e8c = load i8, i8* %v2_10e8c, align 1
  %v4_10e8c = zext i8 %v3_10e8c to i32
  %v3_10e90 = udiv i32 %v2_10e84, 256
  %v4_10e94 = mul nuw nsw i32 %v4_10e8c, 256
  %v5_10e94 = or i32 %v4_10e94, %v4_10e88
  %v7_10e94 = icmp eq i32 %v5_10e94, 0
  store i1 %v7_10e94, i1* @cpsr_z, align 1
  %v3_10e98 = udiv i32 %v2_10e84, 65536
  %v1_10e9c = urem i32 %v3_10e90, 256
  store i32 %v1_10e9c, i32* %r6.global-to-local, align 4
  %v1_10ea0 = urem i32 %v3_10e98, 256
  store i32 %v1_10ea0, i32* %r5.global-to-local, align 4
  %v3_10ea4 = udiv i32 %v2_10e84, 16777216
  store i32 %v3_10ea4, i32* %r4.global-to-local, align 4
  %v1_10ea8 = urem i32 %v2_10e84, 256
  br i1 %v7_10e94, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_10e60
  store i32 %v3_10e64, i32* @r4, align 4
  ret i32 %v1_10ea8

bb8:                                              ; preds = %dec_label_pc_10e60
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10eb4

dec_label_pc_10eb4:                               ; preds = %dec_label_pc_10eb4, %bb8
  %v2_10ec0 = phi i32 [ %v1_10efc, %dec_label_pc_10eb4 ], [ 0, %bb8 ]
  %v0_10eb4 = phi i32 [ %v0_10ef4, %dec_label_pc_10eb4 ], [ %v2_10e78, %bb8 ]
  %v1_10eb4 = inttoptr i32 %v0_10eb4 to i32*
  %v2_10eb4 = load i32, i32* %v1_10eb4, align 4
  %v2_10eb8 = add i32 %v2_10eb4, %v2_10ec0
  %v3_10eb8 = inttoptr i32 %v2_10eb8 to i8*
  %v4_10eb8 = load i8, i8* %v3_10eb8, align 1
  %v6_10eb8 = zext i8 %v4_10eb8 to i32
  %v2_10ebc = xor i32 %v6_10eb8, %v1_10ea8
  %v1_10ec0 = trunc i32 %v2_10ebc to i8
  store i8 %v1_10ec0, i8* %v3_10eb8, align 1
  %v0_10ec4 = load i32, i32* @lr, align 4
  %v1_10ec4 = inttoptr i32 %v0_10ec4 to i32*
  %v2_10ec4 = load i32, i32* %v1_10ec4, align 4
  %v0_10ec8 = load i32, i32* %ip.global-to-local, align 4
  %v2_10ec8 = add i32 %v0_10ec8, %v2_10ec4
  %v3_10ec8 = inttoptr i32 %v2_10ec8 to i8*
  %v4_10ec8 = load i8, i8* %v3_10ec8, align 1
  %v6_10ec8 = zext i8 %v4_10ec8 to i32
  %v0_10ecc = load i32, i32* %r6.global-to-local, align 4
  %v2_10ecc = xor i32 %v0_10ecc, %v6_10ec8
  %v1_10ed0 = trunc i32 %v2_10ecc to i8
  store i8 %v1_10ed0, i8* %v3_10ec8, align 1
  %v0_10ed4 = load i32, i32* @lr, align 4
  %v1_10ed4 = inttoptr i32 %v0_10ed4 to i32*
  %v2_10ed4 = load i32, i32* %v1_10ed4, align 4
  %v0_10ed8 = load i32, i32* %ip.global-to-local, align 4
  %v2_10ed8 = add i32 %v0_10ed8, %v2_10ed4
  %v3_10ed8 = inttoptr i32 %v2_10ed8 to i8*
  %v4_10ed8 = load i8, i8* %v3_10ed8, align 1
  %v6_10ed8 = zext i8 %v4_10ed8 to i32
  %v0_10edc = load i32, i32* %r5.global-to-local, align 4
  %v2_10edc = xor i32 %v0_10edc, %v6_10ed8
  %v1_10ee0 = trunc i32 %v2_10edc to i8
  store i8 %v1_10ee0, i8* %v3_10ed8, align 1
  %v0_10ee4 = load i32, i32* @lr, align 4
  %v1_10ee4 = inttoptr i32 %v0_10ee4 to i32*
  %v2_10ee4 = load i32, i32* %v1_10ee4, align 4
  %v0_10ee8 = load i32, i32* %ip.global-to-local, align 4
  %v2_10ee8 = add i32 %v0_10ee8, %v2_10ee4
  %v3_10ee8 = inttoptr i32 %v2_10ee8 to i8*
  %v4_10ee8 = load i8, i8* %v3_10ee8, align 1
  %v6_10ee8 = zext i8 %v4_10ee8 to i32
  %v0_10eec = load i32, i32* %r4.global-to-local, align 4
  %v2_10eec = xor i32 %v0_10eec, %v6_10ee8
  %v1_10ef0 = trunc i32 %v2_10eec to i8
  store i8 %v1_10ef0, i8* %v3_10ee8, align 1
  %v0_10ef4 = load i32, i32* @lr, align 4
  %v1_10ef4 = add i32 %v0_10ef4, 4
  %v2_10ef4 = inttoptr i32 %v1_10ef4 to i8*
  %v3_10ef4 = load i8, i8* %v2_10ef4, align 1
  %v4_10ef4 = zext i8 %v3_10ef4 to i32
  %v0_10ef8 = load i32, i32* %r7.global-to-local, align 4
  %v1_10ef8 = add i32 %v0_10ef8, 1
  %v2_10ef8 = inttoptr i32 %v1_10ef8 to i8*
  %v3_10ef8 = load i8, i8* %v2_10ef8, align 1
  %v4_10ef8 = zext i8 %v3_10ef8 to i32
  %v0_10efc = load i32, i32* %ip.global-to-local, align 4
  %v1_10efc = add i32 %v0_10efc, 1
  store i32 %v1_10efc, i32* %ip.global-to-local, align 4
  %v4_10f00 = mul nuw nsw i32 %v4_10ef8, 256
  %v5_10f00 = or i32 %v4_10f00, %v4_10ef4
  store i32 %v5_10f00, i32* @r2, align 4
  %v9_10f04 = icmp eq i32 %v5_10f00, %v1_10efc
  store i1 %v9_10f04, i1* @cpsr_z, align 1
  %v8_10f08 = icmp sgt i32 %v5_10f00, %v1_10efc
  br i1 %v8_10f08, label %dec_label_pc_10eb4, label %dec_label_pc_10f0c

dec_label_pc_10f0c:                               ; preds = %dec_label_pc_10eb4
  %v2_10f0c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10f0c, i32* @r4, align 4
  ret i32 %v1_10ea8

; uselistorder directives
  uselistorder i32 %v1_10efc, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10ef4, { 1, 0 }
  uselistorder i32 %v1_10ea8, { 0, 2, 1 }
  uselistorder i32 %v2_10e84, { 3, 0, 1, 2, 4 }
}

define i32 @function_10f18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f18:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10f18 = mul i32 %arg1, 8
  %v3_10f1c = load i32, i32* @r4, align 4
  store i32 %v3_10f1c, i32* %stack_var_-20, align 4
  %v3_10f2c = and i32 %v3_10f18, 2040
  %v2_10f30 = add i32 %v3_10f2c, ptrtoint (i32* @global_var_1d280.611 to i32)
  store i32 %v2_10f30, i32* @lr, align 4
  %v1_10f38 = add i32 %v3_10f2c, add (i32 ptrtoint (i32* @global_var_1d280.611 to i32), i32 4)
  store i32 %v1_10f38, i32* %r7.global-to-local, align 4
  %v2_10f3c = load i32, i32* @global_var_1d030.614, align 4
  store i32 %v2_10f3c, i32* @r2, align 4
  %v2_10f40 = inttoptr i32 %v1_10f38 to i8*
  %v3_10f40 = load i8, i8* %v2_10f40, align 4
  %v4_10f40 = zext i8 %v3_10f40 to i32
  %v1_10f44 = add i32 %v3_10f2c, add (i32 ptrtoint (i32* @global_var_1d280.611 to i32), i32 5)
  %v2_10f44 = inttoptr i32 %v1_10f44 to i8*
  %v3_10f44 = load i8, i8* %v2_10f44, align 1
  %v4_10f44 = zext i8 %v3_10f44 to i32
  %v3_10f48 = udiv i32 %v2_10f3c, 256
  %v4_10f4c = mul nuw nsw i32 %v4_10f44, 256
  %v5_10f4c = or i32 %v4_10f4c, %v4_10f40
  %v7_10f4c = icmp eq i32 %v5_10f4c, 0
  %v3_10f50 = udiv i32 %v2_10f3c, 65536
  %v1_10f54 = urem i32 %v3_10f48, 256
  store i32 %v1_10f54, i32* %r6.global-to-local, align 4
  %v1_10f58 = urem i32 %v3_10f50, 256
  store i32 %v1_10f58, i32* %r5.global-to-local, align 4
  %v3_10f5c = udiv i32 %v2_10f3c, 16777216
  store i32 %v3_10f5c, i32* %r4.global-to-local, align 4
  %v1_10f60 = urem i32 %v2_10f3c, 256
  br i1 %v7_10f4c, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_10f18
  store i32 %v3_10f1c, i32* @r4, align 4
  ret i32 %v1_10f60

bb8:                                              ; preds = %dec_label_pc_10f18
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10f6c

dec_label_pc_10f6c:                               ; preds = %dec_label_pc_10f6c, %bb8
  %v2_10f78 = phi i32 [ %v1_10fb4, %dec_label_pc_10f6c ], [ 0, %bb8 ]
  %v0_10f6c = phi i32 [ %v0_10fac, %dec_label_pc_10f6c ], [ %v2_10f30, %bb8 ]
  %v1_10f6c = inttoptr i32 %v0_10f6c to i32*
  %v2_10f6c = load i32, i32* %v1_10f6c, align 4
  %v2_10f70 = add i32 %v2_10f6c, %v2_10f78
  %v3_10f70 = inttoptr i32 %v2_10f70 to i8*
  %v4_10f70 = load i8, i8* %v3_10f70, align 1
  %v6_10f70 = zext i8 %v4_10f70 to i32
  %v2_10f74 = xor i32 %v6_10f70, %v1_10f60
  %v1_10f78 = trunc i32 %v2_10f74 to i8
  store i8 %v1_10f78, i8* %v3_10f70, align 1
  %v0_10f7c = load i32, i32* @lr, align 4
  %v1_10f7c = inttoptr i32 %v0_10f7c to i32*
  %v2_10f7c = load i32, i32* %v1_10f7c, align 4
  %v0_10f80 = load i32, i32* %ip.global-to-local, align 4
  %v2_10f80 = add i32 %v0_10f80, %v2_10f7c
  %v3_10f80 = inttoptr i32 %v2_10f80 to i8*
  %v4_10f80 = load i8, i8* %v3_10f80, align 1
  %v6_10f80 = zext i8 %v4_10f80 to i32
  %v0_10f84 = load i32, i32* %r6.global-to-local, align 4
  %v2_10f84 = xor i32 %v0_10f84, %v6_10f80
  %v1_10f88 = trunc i32 %v2_10f84 to i8
  store i8 %v1_10f88, i8* %v3_10f80, align 1
  %v0_10f8c = load i32, i32* @lr, align 4
  %v1_10f8c = inttoptr i32 %v0_10f8c to i32*
  %v2_10f8c = load i32, i32* %v1_10f8c, align 4
  %v0_10f90 = load i32, i32* %ip.global-to-local, align 4
  %v2_10f90 = add i32 %v0_10f90, %v2_10f8c
  %v3_10f90 = inttoptr i32 %v2_10f90 to i8*
  %v4_10f90 = load i8, i8* %v3_10f90, align 1
  %v6_10f90 = zext i8 %v4_10f90 to i32
  %v0_10f94 = load i32, i32* %r5.global-to-local, align 4
  %v2_10f94 = xor i32 %v0_10f94, %v6_10f90
  %v1_10f98 = trunc i32 %v2_10f94 to i8
  store i8 %v1_10f98, i8* %v3_10f90, align 1
  %v0_10f9c = load i32, i32* @lr, align 4
  %v1_10f9c = inttoptr i32 %v0_10f9c to i32*
  %v2_10f9c = load i32, i32* %v1_10f9c, align 4
  %v0_10fa0 = load i32, i32* %ip.global-to-local, align 4
  %v2_10fa0 = add i32 %v0_10fa0, %v2_10f9c
  %v3_10fa0 = inttoptr i32 %v2_10fa0 to i8*
  %v4_10fa0 = load i8, i8* %v3_10fa0, align 1
  %v6_10fa0 = zext i8 %v4_10fa0 to i32
  %v0_10fa4 = load i32, i32* %r4.global-to-local, align 4
  %v2_10fa4 = xor i32 %v0_10fa4, %v6_10fa0
  %v1_10fa8 = trunc i32 %v2_10fa4 to i8
  store i8 %v1_10fa8, i8* %v3_10fa0, align 1
  %v0_10fac = load i32, i32* @lr, align 4
  %v1_10fac = add i32 %v0_10fac, 4
  %v2_10fac = inttoptr i32 %v1_10fac to i8*
  %v3_10fac = load i8, i8* %v2_10fac, align 1
  %v4_10fac = zext i8 %v3_10fac to i32
  %v0_10fb0 = load i32, i32* %r7.global-to-local, align 4
  %v1_10fb0 = add i32 %v0_10fb0, 1
  %v2_10fb0 = inttoptr i32 %v1_10fb0 to i8*
  %v3_10fb0 = load i8, i8* %v2_10fb0, align 1
  %v4_10fb0 = zext i8 %v3_10fb0 to i32
  %v0_10fb4 = load i32, i32* %ip.global-to-local, align 4
  %v1_10fb4 = add i32 %v0_10fb4, 1
  store i32 %v1_10fb4, i32* %ip.global-to-local, align 4
  %v4_10fb8 = mul nuw nsw i32 %v4_10fb0, 256
  %v5_10fb8 = or i32 %v4_10fb8, %v4_10fac
  store i32 %v5_10fb8, i32* @r2, align 4
  %v8_10fc0 = icmp sgt i32 %v5_10fb8, %v1_10fb4
  br i1 %v8_10fc0, label %dec_label_pc_10f6c, label %dec_label_pc_10fc4

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10f6c
  %v2_10fc4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10fc4, i32* @r4, align 4
  ret i32 %v1_10f60

; uselistorder directives
  uselistorder i32 %v1_10fb4, { 1, 2, 0 }
  uselistorder i32 %v0_10fac, { 1, 0 }
  uselistorder i32 %v1_10f60, { 0, 2, 1 }
  uselistorder i32 %v2_10f3c, { 3, 0, 1, 2, 4 }
}

define i32 @function_10fd0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10fd0:
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10fd0 = load i32, i32* @r4, align 4
  store i32 %v3_10fd0, i32* %stack_var_-32, align 4
  %v6_10fd0 = load i32, i32* @r5, align 4
  %v9_10fd0 = load i32, i32* @r6, align 4
  %v12_10fd0 = load i32, i32* @r7, align 4
  %v1_10fd8 = call i32 @function_124dc(i32 2)
  store i32 ptrtoint (i32* @global_var_1d280.611 to i32), i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  store i32 2, i32* @r5, align 4
  store i32 %v1_10fd8, i32* @r7, align 4
  %v4_10ff4 = call i32 @function_11464(i32 %v1_10fd8, i32 ptrtoint ([3 x i8]* @global_var_149b8.619 to i32), i32 2)
  %v0_10ffc = load i32, i32* @r7, align 4
  store i32 %v0_10ffc, i32* @global_var_1d290.620, align 4
  %v0_11000 = load i32, i32* @r5, align 4
  %v1_11000 = trunc i32 %v0_11000 to i8
  store i8 %v1_11000, i8* bitcast (i32* @global_var_1d294.621 to i8*), align 4
  %v0_11004 = load i32, i32* @r6, align 4
  %v1_11004 = trunc i32 %v0_11004 to i8
  store i8 %v1_11004, i8* bitcast (i32* @global_var_1d295.622 to i8*), align 4
  %v1_11008 = call i32 @function_124dc(i32 22)
  store i32 %v1_11008, i32* @r7, align 4
  store i32 22, i32* %sl.global-to-local, align 4
  %v3_1101c = call i32 @function_11464(i32 %v1_11008, i32 ptrtoint (i32* @global_var_149bc.624 to i32), i32 22)
  %v0_11020 = load i32, i32* @r5, align 4
  %v0_11024 = load i32, i32* @r7, align 4
  %v1_11024 = load i32, i32* @r4, align 4
  %v2_11024 = add i32 %v1_11024, 184
  %v3_11024 = inttoptr i32 %v2_11024 to i32*
  store i32 %v0_11024, i32* %v3_11024, align 4
  %v0_11028 = load i32, i32* %sl.global-to-local, align 4
  %v1_11028 = trunc i32 %v0_11028 to i8
  %v2_11028 = load i32, i32* @r4, align 4
  %v3_11028 = add i32 %v2_11028, 188
  %v4_11028 = inttoptr i32 %v3_11028 to i8*
  store i8 %v1_11028, i8* %v4_11028, align 1
  %v0_1102c = load i32, i32* @r6, align 4
  %v1_1102c = trunc i32 %v0_1102c to i8
  %v2_1102c = load i32, i32* @r4, align 4
  %v3_1102c = add i32 %v2_1102c, 189
  %v4_1102c = inttoptr i32 %v3_1102c to i8*
  store i8 %v1_1102c, i8* %v4_1102c, align 1
  %v1_11030 = call i32 @function_124dc(i32 %v0_11020)
  %v0_11034 = load i32, i32* @r5, align 4
  store i32 %v1_11030, i32* @r7, align 4
  %v3_11040 = call i32 @function_11464(i32 %v1_11030, i32 ptrtoint (i32* @global_var_149d0.626 to i32), i32 %v0_11034)
  %v0_11048 = load i32, i32* @r7, align 4
  %v1_11048 = load i32, i32* @r4, align 4
  %v2_11048 = add i32 %v1_11048, 192
  %v3_11048 = inttoptr i32 %v2_11048 to i32*
  store i32 %v0_11048, i32* %v3_11048, align 4
  %v0_1104c = load i32, i32* @r5, align 4
  %v1_1104c = trunc i32 %v0_1104c to i8
  %v2_1104c = load i32, i32* @r4, align 4
  %v3_1104c = add i32 %v2_1104c, 196
  %v4_1104c = inttoptr i32 %v3_1104c to i8*
  store i8 %v1_1104c, i8* %v4_1104c, align 1
  %v0_11050 = load i32, i32* @r6, align 4
  %v1_11050 = trunc i32 %v0_11050 to i8
  %v2_11050 = load i32, i32* @r4, align 4
  %v3_11050 = add i32 %v2_11050, 197
  %v4_11050 = inttoptr i32 %v3_11050 to i8*
  store i8 %v1_11050, i8* %v4_11050, align 1
  %v1_11054 = call i32 @function_124dc(i32 14)
  store i32 14, i32* %r8.global-to-local, align 4
  store i32 %v1_11054, i32* @r5, align 4
  %v3_11068 = call i32 @function_11464(i32 %v1_11054, i32 ptrtoint (i32* @global_var_149d4.628 to i32), i32 14)
  %v0_11070 = load i32, i32* @r5, align 4
  store i32 %v0_11070, i32* @global_var_1d288.629, align 4
  store i8 14, i8* bitcast (i32* @global_var_1d28c.630 to i8*), align 4
  %v0_11078 = load i32, i32* @r6, align 4
  %v1_11078 = trunc i32 %v0_11078 to i8
  store i8 %v1_11078, i8* bitcast (i32* @global_var_1d28d.631 to i8*), align 4
  %v1_1107c = call i32 @function_124dc(i32 6)
  store i32 %v1_1107c, i32* @r5, align 4
  store i32 6, i32* %sb.global-to-local, align 4
  %v3_11090 = call i32 @function_11464(i32 %v1_1107c, i32 ptrtoint (i32* @global_var_149e4.633 to i32), i32 6)
  %v0_11098 = load i32, i32* @r5, align 4
  store i32 %v0_11098, i32* @global_var_1d300.634, align 4
  store i8 6, i8* bitcast (i32* @global_var_1d304.635 to i8*), align 4
  %v0_110a0 = load i32, i32* @r6, align 4
  %v1_110a0 = trunc i32 %v0_110a0 to i8
  store i8 %v1_110a0, i8* bitcast (i32* @global_var_1d305.636 to i8*), align 4
  %v1_110a4 = call i32 @function_124dc(i32 7)
  store i32 7, i32* @r7, align 4
  store i32 %v1_110a4, i32* @r5, align 4
  %v3_110b8 = call i32 @function_11464(i32 %v1_110a4, i32 ptrtoint (i32* @global_var_14b00.638 to i32), i32 7)
  %v0_110bc = load i32, i32* @r7, align 4
  %v0_110c0 = load i32, i32* @r5, align 4
  store i32 %v0_110c0, i32* @global_var_1d308.639, align 4
  %v1_110c4 = trunc i32 %v0_110bc to i8
  store i8 %v1_110c4, i8* bitcast (i32* @global_var_1d30c.640 to i8*), align 4
  %v0_110c8 = load i32, i32* @r6, align 4
  %v1_110c8 = trunc i32 %v0_110c8 to i8
  store i8 %v1_110c8, i8* bitcast (i32* @global_var_1d30d.641 to i8*), align 4
  %v1_110cc = call i32 @function_124dc(i32 %v0_110bc)
  %v0_110d4 = load i32, i32* @r7, align 4
  store i32 %v1_110cc, i32* @r5, align 4
  %v3_110dc = call i32 @function_11464(i32 %v1_110cc, i32 ptrtoint (i32* @global_var_149ec.643 to i32), i32 %v0_110d4)
  %v0_110e4 = load i32, i32* @r5, align 4
  store i32 %v0_110e4, i32* @global_var_1d310.644, align 4
  %v0_110e8 = load i32, i32* @r7, align 4
  %v1_110e8 = trunc i32 %v0_110e8 to i8
  store i8 %v1_110e8, i8* bitcast (i32* @global_var_1d314.645 to i8*), align 4
  %v0_110ec = load i32, i32* @r6, align 4
  %v1_110ec = trunc i32 %v0_110ec to i8
  %v2_110ec = load i32, i32* @r4, align 4
  %v3_110ec = add i32 %v2_110ec, 149
  %v4_110ec = inttoptr i32 %v3_110ec to i8*
  store i8 %v1_110ec, i8* %v4_110ec, align 1
  %v1_110f0 = call i32 @function_124dc(i32 3)
  store i32 %v1_110f0, i32* @r5, align 4
  %v3_11100 = call i32 @function_11464(i32 %v1_110f0, i32 ptrtoint (i32* @global_var_149f4.647 to i32), i32 3)
  %v2_1110c = load i32, i32* @r4, align 4
  %v3_1110c = add i32 %v2_1110c, 164
  %v4_1110c = inttoptr i32 %v3_1110c to i8*
  store i8 3, i8* %v4_1110c, align 1
  %v0_11110 = load i32, i32* @r5, align 4
  %v1_11110 = load i32, i32* @r4, align 4
  %v2_11110 = add i32 %v1_11110, 160
  %v3_11110 = inttoptr i32 %v2_11110 to i32*
  store i32 %v0_11110, i32* %v3_11110, align 4
  %v0_11114 = load i32, i32* @r6, align 4
  %v1_11114 = trunc i32 %v0_11114 to i8
  %v2_11114 = load i32, i32* @r4, align 4
  %v3_11114 = add i32 %v2_11114, 165
  %v4_11114 = inttoptr i32 %v3_11114 to i8*
  store i8 %v1_11114, i8* %v4_11114, align 1
  %v1_11118 = call i32 @function_124dc(i32 20)
  store i32 %v1_11118, i32* @r5, align 4
  %v3_11128 = call i32 @function_11464(i32 %v1_11118, i32 ptrtoint (i32* @global_var_149f8.649 to i32), i32 20)
  %v2_11134 = load i32, i32* @r4, align 4
  %v3_11134 = add i32 %v2_11134, 156
  %v4_11134 = inttoptr i32 %v3_11134 to i8*
  store i8 20, i8* %v4_11134, align 1
  %v0_11138 = load i32, i32* @r5, align 4
  %v1_11138 = load i32, i32* @r4, align 4
  %v2_11138 = add i32 %v1_11138, 152
  %v3_11138 = inttoptr i32 %v2_11138 to i32*
  store i32 %v0_11138, i32* %v3_11138, align 4
  %v0_1113c = load i32, i32* @r6, align 4
  %v1_1113c = trunc i32 %v0_1113c to i8
  %v2_1113c = load i32, i32* @r4, align 4
  %v3_1113c = add i32 %v2_1113c, 157
  %v4_1113c = inttoptr i32 %v3_1113c to i8*
  store i8 %v1_1113c, i8* %v4_1113c, align 1
  %v1_11140 = call i32 @function_124dc(i32 25)
  store i32 %v1_11140, i32* @r5, align 4
  %v3_11150 = call i32 @function_11464(i32 %v1_11140, i32 ptrtoint (i32* @global_var_14a10.651 to i32), i32 25)
  %v2_1115c = load i32, i32* @r4, align 4
  %v3_1115c = add i32 %v2_1115c, 172
  %v4_1115c = inttoptr i32 %v3_1115c to i8*
  store i8 25, i8* %v4_1115c, align 1
  %v0_11160 = load i32, i32* @r5, align 4
  %v1_11160 = load i32, i32* @r4, align 4
  %v2_11160 = add i32 %v1_11160, 168
  %v3_11160 = inttoptr i32 %v2_11160 to i32*
  store i32 %v0_11160, i32* %v3_11160, align 4
  %v0_11164 = load i32, i32* @r6, align 4
  %v1_11164 = trunc i32 %v0_11164 to i8
  %v2_11164 = load i32, i32* @r4, align 4
  %v3_11164 = add i32 %v2_11164, 173
  %v4_11164 = inttoptr i32 %v3_11164 to i8*
  store i8 %v1_11164, i8* %v4_11164, align 1
  %v1_11168 = call i32 @function_124dc(i32 9)
  store i32 %v1_11168, i32* @r5, align 4
  %v4_11178 = call i32 @function_11464(i32 %v1_11168, i32 ptrtoint ([10 x i8]* @global_var_14a2c.653 to i32), i32 9)
  %v2_11184 = load i32, i32* @r4, align 4
  %v3_11184 = add i32 %v2_11184, 180
  %v4_11184 = inttoptr i32 %v3_11184 to i8*
  store i8 9, i8* %v4_11184, align 1
  %v0_11188 = load i32, i32* @r5, align 4
  %v1_11188 = load i32, i32* @r4, align 4
  %v2_11188 = add i32 %v1_11188, 176
  %v3_11188 = inttoptr i32 %v2_11188 to i32*
  store i32 %v0_11188, i32* %v3_11188, align 4
  %v0_1118c = load i32, i32* @r6, align 4
  %v1_1118c = trunc i32 %v0_1118c to i8
  %v2_1118c = load i32, i32* @r4, align 4
  %v3_1118c = add i32 %v2_1118c, 181
  %v4_1118c = inttoptr i32 %v3_1118c to i8*
  store i8 %v1_1118c, i8* %v4_1118c, align 1
  %v1_11190 = call i32 @function_124dc(i32 16)
  store i32 %v1_11190, i32* @r5, align 4
  %v4_111a0 = call i32 @function_11464(i32 %v1_11190, i32 ptrtoint ([17 x i8]* @global_var_14a38.655 to i32), i32 16)
  %v0_111a8 = load i32, i32* %sl.global-to-local, align 4
  %v2_111ac = load i32, i32* @r4, align 4
  %v3_111ac = add i32 %v2_111ac, 204
  %v4_111ac = inttoptr i32 %v3_111ac to i8*
  store i8 16, i8* %v4_111ac, align 1
  %v0_111b0 = load i32, i32* @r5, align 4
  %v1_111b0 = load i32, i32* @r4, align 4
  %v2_111b0 = add i32 %v1_111b0, 200
  %v3_111b0 = inttoptr i32 %v2_111b0 to i32*
  store i32 %v0_111b0, i32* %v3_111b0, align 4
  %v0_111b4 = load i32, i32* @r6, align 4
  %v1_111b4 = trunc i32 %v0_111b4 to i8
  %v2_111b4 = load i32, i32* @r4, align 4
  %v3_111b4 = add i32 %v2_111b4, 205
  %v4_111b4 = inttoptr i32 %v3_111b4 to i8*
  store i8 %v1_111b4, i8* %v4_111b4, align 1
  %v1_111b8 = call i32 @function_124dc(i32 %v0_111a8)
  %v0_111c0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_111b8, i32* @r5, align 4
  %v4_111c8 = call i32 @function_11464(i32 %v1_111b8, i32 ptrtoint ([23 x i8]* @global_var_14a4c.657 to i32), i32 %v0_111c0)
  %v0_111cc = load i32, i32* @r7, align 4
  %v0_111d0 = load i32, i32* @r5, align 4
  %v1_111d0 = load i32, i32* @r4, align 4
  %v2_111d0 = add i32 %v1_111d0, 208
  %v3_111d0 = inttoptr i32 %v2_111d0 to i32*
  store i32 %v0_111d0, i32* %v3_111d0, align 4
  %v0_111d4 = load i32, i32* %sl.global-to-local, align 4
  %v1_111d4 = trunc i32 %v0_111d4 to i8
  %v2_111d4 = load i32, i32* @r4, align 4
  %v3_111d4 = add i32 %v2_111d4, 212
  %v4_111d4 = inttoptr i32 %v3_111d4 to i8*
  store i8 %v1_111d4, i8* %v4_111d4, align 1
  %v0_111d8 = load i32, i32* @r6, align 4
  %v1_111d8 = trunc i32 %v0_111d8 to i8
  %v2_111d8 = load i32, i32* @r4, align 4
  %v3_111d8 = add i32 %v2_111d8, 213
  %v4_111d8 = inttoptr i32 %v3_111d8 to i8*
  store i8 %v1_111d8, i8* %v4_111d8, align 1
  %v1_111dc = call i32 @function_124dc(i32 %v0_111cc)
  %v0_111e4 = load i32, i32* @r7, align 4
  store i32 %v1_111dc, i32* @r5, align 4
  %v3_111ec = call i32 @function_11464(i32 %v1_111dc, i32 ptrtoint (i32* @global_var_14a64.659 to i32), i32 %v0_111e4)
  %v0_111f4 = load i32, i32* @r5, align 4
  store i32 %v0_111f4, i32* @global_var_1d298.660, align 4
  %v0_111f8 = load i32, i32* @r7, align 4
  %v1_111f8 = trunc i32 %v0_111f8 to i8
  store i8 %v1_111f8, i8* bitcast (i32* @global_var_1d29c.661 to i8*), align 4
  %v0_111fc = load i32, i32* @r6, align 4
  %v1_111fc = trunc i32 %v0_111fc to i8
  store i8 %v1_111fc, i8* bitcast (i32* @global_var_1d29d.662 to i8*), align 4
  %v1_11200 = call i32 @function_124dc(i32 5)
  store i32 %v1_11200, i32* @r5, align 4
  %v3_11210 = call i32 @function_11464(i32 %v1_11200, i32 ptrtoint (i32* @global_var_14a6c.664 to i32), i32 5)
  store i8 5, i8* bitcast (i32* @global_var_1d2a4.665 to i8*), align 4
  %v0_11220 = load i32, i32* @r5, align 4
  store i32 %v0_11220, i32* @global_var_1d2a0.666, align 4
  %v0_11224 = load i32, i32* @r6, align 4
  %v1_11224 = trunc i32 %v0_11224 to i8
  store i8 %v1_11224, i8* bitcast (i32* @global_var_1d2a5.667 to i8*), align 4
  %v1_11228 = call i32 @function_124dc(i32 4)
  store i32 %v1_11228, i32* @r5, align 4
  %v3_11238 = call i32 @function_11464(i32 %v1_11228, i32 ptrtoint (i32* @global_var_14a74.669 to i32), i32 4)
  %v0_11240 = load i32, i32* %sb.global-to-local, align 4
  store i8 4, i8* bitcast (i32* @global_var_1d2b4.670 to i8*), align 4
  %v0_11248 = load i32, i32* @r5, align 4
  store i32 %v0_11248, i32* @global_var_1d2b0.671, align 4
  %v0_1124c = load i32, i32* @r6, align 4
  %v1_1124c = trunc i32 %v0_1124c to i8
  store i8 %v1_1124c, i8* bitcast (i32* @global_var_1d2b5.672 to i8*), align 4
  %v1_11250 = call i32 @function_124dc(i32 %v0_11240)
  %v0_11258 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v1_11250, i32* @r5, align 4
  %v3_11260 = call i32 @function_11464(i32 %v1_11250, i32 ptrtoint (i32* @global_var_14a7c.674 to i32), i32 %v0_11258)
  %v0_11264 = load i32, i32* %r8.global-to-local, align 4
  %v0_11268 = load i32, i32* @r5, align 4
  store i32 %v0_11268, i32* @global_var_1d2b8.675, align 4
  %v1_1126c = trunc i32 %v0_11258 to i8
  store i8 %v1_1126c, i8* bitcast (i32* @global_var_1d2bc.676 to i8*), align 4
  %v0_11270 = load i32, i32* @r6, align 4
  %v1_11270 = trunc i32 %v0_11270 to i8
  store i8 %v1_11270, i8* bitcast (i32* @global_var_1d2bd.677 to i8*), align 4
  %v1_11274 = call i32 @function_124dc(i32 %v0_11264)
  %v0_1127c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_11274, i32* @r5, align 4
  %v3_11284 = call i32 @function_11464(i32 %v1_11274, i32 ptrtoint (i32* @global_var_14a84.679 to i32), i32 %v0_1127c)
  %v0_1128c = load i32, i32* @r5, align 4
  store i32 %v0_1128c, i32* @global_var_1d2c0.680, align 4
  %v1_11290 = trunc i32 %v0_1127c to i8
  store i8 %v1_11290, i8* bitcast (i32* @global_var_1d2c4.681 to i8*), align 4
  %v0_11294 = load i32, i32* @r6, align 4
  %v1_11294 = trunc i32 %v0_11294 to i8
  store i8 %v1_11294, i8* bitcast (i32* @global_var_1d2c5.682 to i8*), align 4
  %v1_11298 = call i32 @function_124dc(i32 10)
  store i32 %v1_11298, i32* @r5, align 4
  %v3_112a8 = call i32 @function_11464(i32 %v1_11298, i32 ptrtoint (i32* @global_var_14a94.684 to i32), i32 10)
  store i8 10, i8* bitcast (i32* @global_var_1d2cc.685 to i8*), align 4
  %v0_112b8 = load i32, i32* @r5, align 4
  store i32 %v0_112b8, i32* @global_var_1d2c8.686, align 4
  %v0_112bc = load i32, i32* @r6, align 4
  %v1_112bc = trunc i32 %v0_112bc to i8
  store i8 %v1_112bc, i8* bitcast (i32* @global_var_1d2cd.687 to i8*), align 4
  %v1_112c0 = call i32 @function_124dc(i32 21)
  store i32 %v1_112c0, i32* @r5, align 4
  %v3_112d0 = call i32 @function_11464(i32 %v1_112c0, i32 ptrtoint (i32* @global_var_14aa0.689 to i32), i32 21)
  store i8 21, i8* bitcast (i32* @global_var_1d2d4.690 to i8*), align 4
  %v0_112e0 = load i32, i32* @r5, align 4
  store i32 %v0_112e0, i32* @global_var_1d2d0.691, align 4
  %v0_112e4 = load i32, i32* @r6, align 4
  %v1_112e4 = trunc i32 %v0_112e4 to i8
  store i8 %v1_112e4, i8* bitcast (i32* @global_var_1d2d5.692 to i8*), align 4
  %v1_112e8 = call i32 @function_124dc(i32 17)
  store i32 %v1_112e8, i32* @r5, align 4
  %v3_112f8 = call i32 @function_11464(i32 %v1_112e8, i32 ptrtoint (i32* @global_var_14ab8.694 to i32), i32 17)
  store i8 17, i8* bitcast (i32* @global_var_1d2dc.695 to i8*), align 4
  %v0_11308 = load i32, i32* @r5, align 4
  store i32 %v0_11308, i32* @global_var_1d2d8.696, align 4
  %v0_1130c = load i32, i32* @r6, align 4
  %v1_1130c = trunc i32 %v0_1130c to i8
  store i8 %v1_1130c, i8* bitcast (i32* @global_var_1d2dd.697 to i8*), align 4
  %v1_11310 = call i32 @function_124dc(i32 12)
  store i32 %v1_11310, i32* @r5, align 4
  %v3_11320 = call i32 @function_11464(i32 %v1_11310, i32 ptrtoint (i32* @global_var_14acc.699 to i32), i32 12)
  %v0_11328 = load i32, i32* %r8.global-to-local, align 4
  store i8 12, i8* bitcast (i32* @global_var_1d2e4.700 to i8*), align 4
  %v0_11330 = load i32, i32* @r5, align 4
  store i32 %v0_11330, i32* @global_var_1d2e0.701, align 4
  %v0_11334 = load i32, i32* @r6, align 4
  %v1_11334 = trunc i32 %v0_11334 to i8
  store i8 %v1_11334, i8* bitcast (i32* @global_var_1d2e5.702 to i8*), align 4
  %v1_11338 = call i32 @function_124dc(i32 %v0_11328)
  %v0_11340 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_11338, i32* @r5, align 4
  %v3_11348 = call i32 @function_11464(i32 %v1_11338, i32 ptrtoint (i32* @global_var_14adc.704 to i32), i32 %v0_11340)
  %v0_11350 = load i32, i32* @r5, align 4
  store i32 %v0_11350, i32* @global_var_1d2e8.705, align 4
  %v1_11354 = trunc i32 %v0_11340 to i8
  store i8 %v1_11354, i8* bitcast (i32* @global_var_1d2ec.706 to i8*), align 4
  %v0_11358 = load i32, i32* @r6, align 4
  %v1_11358 = trunc i32 %v0_11358 to i8
  store i8 %v1_11358, i8* bitcast (i32* @global_var_1d2ed.707 to i8*), align 4
  %v1_1135c = call i32 @function_124dc(i32 19)
  %v3_1136c = call i32 @function_11464(i32 %v1_1135c, i32 ptrtoint (i32* @global_var_14aec.709 to i32), i32 19)
  %v0_11374 = load i32, i32* @r6, align 4
  %v1_11374 = trunc i32 %v0_11374 to i8
  store i8 %v1_11374, i8* bitcast (i32* @global_var_1d2f5.710 to i8*), align 4
  store i32 %v1_1135c, i32* @global_var_1d2f0.711, align 4
  store i8 19, i8* bitcast (i32* @global_var_1d2f4.712 to i8*), align 4
  %v2_11380 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11380, i32* @r4, align 4
  store i32 %v6_10fd0, i32* @r5, align 4
  store i32 %v9_10fd0, i32* @r6, align 4
  store i32 %v12_10fd0, i32* @r7, align 4
  ret i32 %v3_1136c

; uselistorder directives
  uselistorder i32 %v1_11338, { 1, 0 }
  uselistorder i32 %v1_11274, { 1, 0 }
  uselistorder i32 %v1_11250, { 1, 0 }
  uselistorder i32 %v1_111dc, { 1, 0 }
  uselistorder i32 %v1_111b8, { 1, 0 }
  uselistorder i32 %v1_110cc, { 1, 0 }
  uselistorder i32 %v1_110a4, { 1, 0 }
  uselistorder i32 %v1_11054, { 1, 0 }
  uselistorder i32 %v1_11030, { 1, 0 }
  uselistorder i32 %v1_10fd8, { 1, 0 }
  uselistorder i8 5, { 9, 10, 0, 1, 11, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 213, { 1, 0 }
  uselistorder i8 16, { 15, 14, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 168, { 1, 0, 2 }
  uselistorder i8 6, { 0, 2, 1, 3 }
  uselistorder i32 192, { 3, 2, 4, 5, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_11464, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1d280.611 to i32), { 5, 0, 1, 2, 3, 4 }
}

define i32 @function_113e8(i8* %arg1) local_unnamed_addr {
dec_label_pc_113e8:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r2, align 4
  %v3_113ec = load i8, i8* %arg1, align 1
  %v4_113ec = zext i8 %v3_113ec to i32
  %v2_113f0 = icmp eq i8 %v3_113ec, 0
  br i1 %v2_113f0, label %dec_label_pc_1140c, label %bb

dec_label_pc_1140c:                               ; preds = %dec_label_pc_113fc, %dec_label_pc_113e8
  %merge = phi i32 [ %v4_113ec, %dec_label_pc_113e8 ], [ %v1_113fc, %dec_label_pc_113fc ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_113e8
  br label %dec_label_pc_113fc

dec_label_pc_113fc:                               ; preds = %dec_label_pc_113fc, %bb
  %v0_113fc = phi i32 [ %v1_113fc, %dec_label_pc_113fc ], [ 0, %bb ]
  %v1_113fc = add i32 %v0_113fc, 1
  %v2_11400 = add i32 %v1_113fc, %tmp
  %v3_11400 = inttoptr i32 %v2_11400 to i8*
  %v4_11400 = load i8, i8* %v3_11400, align 1
  %v2_11404 = icmp eq i8 %v4_11400, 0
  br i1 %v2_11404, label %dec_label_pc_1140c, label %dec_label_pc_113fc

; uselistorder directives
  uselistorder i32 %v1_113fc, { 1, 0, 2 }
}

define i32 @function_11410(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11410:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_11410 = load i8, i8* %arg1, align 1
  %v3_11410 = zext i8 %v2_11410 to i32
  %v2_11414 = icmp eq i8 %v2_11410, 0
  br i1 %v2_11414, label %dec_label_pc_11458, label %dec_label_pc_1141c

dec_label_pc_1141c:                               ; preds = %dec_label_pc_11410
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11420

dec_label_pc_11420:                               ; preds = %dec_label_pc_11420, %dec_label_pc_1141c
  %v0_11420 = phi i32 [ %v1_11420, %dec_label_pc_11420 ], [ 0, %dec_label_pc_1141c ]
  %v1_11420 = add i32 %v0_11420, 1
  store i32 %v1_11420, i32* %ip.global-to-local, align 4
  %v2_11424 = add i32 %v1_11420, %tmp
  %v3_11424 = inttoptr i32 %v2_11424 to i8*
  %v4_11424 = load i8, i8* %v3_11424, align 1
  %v2_11428 = icmp eq i8 %v4_11424, 0
  br i1 %v2_11428, label %dec_label_pc_11430, label %dec_label_pc_11420

dec_label_pc_11430:                               ; preds = %dec_label_pc_11420
  %v7_11430 = icmp eq i32 %v0_11420, -2
  br i1 %v7_11430, label %dec_label_pc_11450, label %dec_label_pc_1143c.preheader

dec_label_pc_1143c.preheader:                     ; preds = %dec_label_pc_11430, %dec_label_pc_11458
  %storemerge = phi i32 [ %v3_11410, %dec_label_pc_11458 ], [ %v1_11420, %dec_label_pc_11430 ]
  %v2_11448.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1143c

dec_label_pc_1143c:                               ; preds = %dec_label_pc_1143c.dec_label_pc_1143c_crit_edge, %dec_label_pc_1143c.preheader
  %v2_11448 = phi i32 [ %v5_11448, %dec_label_pc_1143c.dec_label_pc_1143c_crit_edge ], [ %v2_11448.pre, %dec_label_pc_1143c.preheader ]
  %v0_11440 = phi i32 [ %v0_11440.pre, %dec_label_pc_1143c.dec_label_pc_1143c_crit_edge ], [ %tmp, %dec_label_pc_1143c.preheader ]
  %v0_1143c = phi i32 [ %v0_1143c.pre, %dec_label_pc_1143c.dec_label_pc_1143c_crit_edge ], [ %storemerge, %dec_label_pc_1143c.preheader ]
  %v1_1143c = add i32 %v0_1143c, -1
  store i32 %v1_1143c, i32* @r2, align 4
  %v1_11440 = inttoptr i32 %v0_11440 to i8*
  %v2_11440 = load i8, i8* %v1_11440, align 1
  %v5_11440 = add i32 %v0_11440, 1
  store i32 %v5_11440, i32* %r1.global-to-local, align 4
  %v3_11444 = icmp eq i32 %v0_1143c, 0
  %v3_11448 = inttoptr i32 %v2_11448 to i8*
  store i8 %v2_11440, i8* %v3_11448, align 1
  %v4_11448 = load i32, i32* @r0, align 4
  %v5_11448 = add i32 %v4_11448, 1
  store i32 %v5_11448, i32* @r0, align 4
  br i1 %v3_11444, label %dec_label_pc_11450.loopexit, label %dec_label_pc_1143c.dec_label_pc_1143c_crit_edge

dec_label_pc_1143c.dec_label_pc_1143c_crit_edge:  ; preds = %dec_label_pc_1143c
  %v0_1143c.pre = load i32, i32* @r2, align 4
  %v0_11440.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1143c

dec_label_pc_11450.loopexit:                      ; preds = %dec_label_pc_1143c
  %v0_11450.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %dec_label_pc_11450.loopexit, %dec_label_pc_11430
  %v0_11450 = phi i32 [ %v0_11450.pre, %dec_label_pc_11450.loopexit ], [ %v1_11420, %dec_label_pc_11430 ]
  ret i32 %v0_11450

dec_label_pc_11458:                               ; preds = %dec_label_pc_11410
  store i32 %v3_11410, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1143c.preheader

; uselistorder directives
  uselistorder i32 %v5_11448, { 1, 0 }
  uselistorder i32 %v0_11440, { 1, 0 }
  uselistorder i32 %v1_11420, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_11410, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1143c.preheader, { 1, 0 }
}

define i32 @function_11464(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11464:
  %ip.global-to-local = alloca i32, align 4
  %v2_11464 = icmp eq i32 %arg3, 0
  br i1 %v2_11464, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_11470, %dec_label_pc_11464
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_11464
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11470

dec_label_pc_11470:                               ; preds = %dec_label_pc_11470, %bb
  %v0_11470 = phi i32 [ %v1_11478, %dec_label_pc_11470 ], [ 0, %bb ]
  %v2_11470 = add i32 %v0_11470, %arg2
  %v3_11470 = inttoptr i32 %v2_11470 to i8*
  %v4_11470 = load i8, i8* %v3_11470, align 1
  %v4_11474 = add i32 %v0_11470, %arg1
  %v5_11474 = inttoptr i32 %v4_11474 to i8*
  store i8 %v4_11470, i8* %v5_11474, align 1
  %v0_11478 = load i32, i32* %ip.global-to-local, align 4
  %v1_11478 = add i32 %v0_11478, 1
  store i32 %v1_11478, i32* %ip.global-to-local, align 4
  %v9_1147c = icmp eq i32 %v1_11478, %arg3
  br i1 %v9_1147c, label %.loopexit, label %dec_label_pc_11470

; uselistorder directives
  uselistorder i32 %v1_11478, { 1, 2, 0 }
}

define i32 @function_11488() local_unnamed_addr {
dec_label_pc_11488:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_11488 = load i32, i32* @r1, align 4
  %v2_11488 = icmp eq i32 %v0_11488, 0
  br i1 %v2_11488, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_11488
  %v2_1148c = load i32, i32* @r0, align 4
  ret i32 %v2_1148c

bb3:                                              ; preds = %dec_label_pc_11488
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11498

dec_label_pc_11498:                               ; preds = %dec_label_pc_11498.dec_label_pc_11498_crit_edge, %bb3
  %v2_11498 = phi i32 [ %v1_1149c, %dec_label_pc_11498.dec_label_pc_11498_crit_edge ], [ 0, %bb3 ]
  %v0_11498.off0 = phi i8 [ %extract.t, %dec_label_pc_11498.dec_label_pc_11498_crit_edge ], [ 0, %bb3 ]
  %v3_11498 = load i32, i32* @r0, align 4
  %v4_11498 = add i32 %v3_11498, %v2_11498
  %v5_11498 = inttoptr i32 %v4_11498 to i8*
  store i8 %v0_11498.off0, i8* %v5_11498, align 1
  %v0_1149c = load i32, i32* %r3.global-to-local, align 4
  %v1_1149c = add i32 %v0_1149c, 1
  store i32 %v1_1149c, i32* %r3.global-to-local, align 4
  %v1_114a0 = load i32, i32* @r1, align 4
  %v9_114a0 = icmp eq i32 %v1_1149c, %v1_114a0
  br i1 %v9_114a0, label %dec_label_pc_114a8, label %dec_label_pc_11498.dec_label_pc_11498_crit_edge

dec_label_pc_11498.dec_label_pc_11498_crit_edge:  ; preds = %dec_label_pc_11498
  %v0_11498.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_11498.pre to i8
  br label %dec_label_pc_11498

dec_label_pc_114a8:                               ; preds = %dec_label_pc_11498
  %v1_114a8 = load i32, i32* @r0, align 4
  ret i32 %v1_114a8

; uselistorder directives
  uselistorder i32 %v1_1149c, { 1, 2, 0 }
}

define i32 @function_114ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_114ac:
  store i32 %arg4, i32* @lr, align 4
  %v7_114c0 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_114c0, label %dec_label_pc_114c4, label %dec_label_pc_114cc

dec_label_pc_114c4:                               ; preds = %dec_label_pc_114e0, %dec_label_pc_114ac, %dec_label_pc_114cc
  ret i32 -1

dec_label_pc_114cc:                               ; preds = %dec_label_pc_114ac
  %tmp10 = icmp slt i32 %arg2, 1
  br i1 %tmp10, label %dec_label_pc_114c4, label %dec_label_pc_114d4

dec_label_pc_114d4:                               ; preds = %dec_label_pc_114cc
  br label %dec_label_pc_114ec

dec_label_pc_114e0:                               ; preds = %dec_label_pc_11504, %dec_label_pc_114ec
  %v1_114e0 = add i32 %v0_1150c, 1
  %v9_114e4 = icmp eq i32 %v1_114e0, %arg2
  br i1 %v9_114e4, label %dec_label_pc_114c4, label %dec_label_pc_114ec

dec_label_pc_114ec:                               ; preds = %dec_label_pc_114e0, %dec_label_pc_114d4
  %v0_1150c = phi i32 [ %v1_114e0, %dec_label_pc_114e0 ], [ 0, %dec_label_pc_114d4 ]
  %v0_114f8 = phi i32 [ %v1_114f8., %dec_label_pc_114e0 ], [ 0, %dec_label_pc_114d4 ]
  %v2_114ec = add i32 %v0_114f8, %arg3
  %v3_114ec = inttoptr i32 %v2_114ec to i8*
  %v4_114ec = load i8, i8* %v3_114ec, align 1
  %v2_114f0 = add i32 %v0_1150c, %arg1
  %v3_114f0 = inttoptr i32 %v2_114f0 to i8*
  %v4_114f0 = load i8, i8* %v3_114f0, align 1
  %v9_114f4 = icmp eq i8 %v4_114f0, %v4_114ec
  %v1_114f8 = add i32 %v0_114f8, 1
  %v1_114f8. = select i1 %v9_114f4, i32 %v1_114f8, i32 0
  br i1 %v9_114f4, label %dec_label_pc_11504, label %dec_label_pc_114e0

dec_label_pc_11504:                               ; preds = %dec_label_pc_114ec
  %v9_11504 = icmp eq i32 %v1_114f8., %arg4
  br i1 %v9_11504, label %dec_label_pc_1150c, label %dec_label_pc_114e0

dec_label_pc_1150c:                               ; preds = %dec_label_pc_11504
  %v1_1150c = add i32 %v0_1150c, 1
  ret i32 %v1_1150c

; uselistorder directives
  uselistorder i1 %v9_114f4, { 1, 0 }
  uselistorder i32 %v0_114f8, { 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_114c4, { 0, 2, 1 }
}

define i32 @function_11514(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11514:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v3_11514 = load i32, i32* @r4, align 4
  store i32 %v3_11514, i32* %stack_var_-28, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11520

dec_label_pc_11520:                               ; preds = %.thread, %dec_label_pc_11538, %bb, %dec_label_pc_11514
  %v0_11520 = phi i32 [ %tmp, %dec_label_pc_11514 ], [ %v5_11520, %bb ], [ %v5_11520, %dec_label_pc_11538 ], [ %v5_11520, %.thread ]
  %v1_11520 = inttoptr i32 %v0_11520 to i8*
  %v2_11520 = load i8, i8* %v1_11520, align 1
  %v3_11520 = zext i8 %v2_11520 to i32
  %v5_11520 = add i32 %v0_11520, 1
  store i32 %v5_11520, i32* %r5.global-to-local, align 4
  %v7_11528 = icmp eq i8 %v2_11520, 9
  br i1 %v7_11528, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11520
  store i32 %v3_11520, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11520

bb:                                               ; preds = %dec_label_pc_11520
  %v8_1152c = icmp eq i8 %v2_11520, 32
  store i32 %v3_11520, i32* %r4.global-to-local, align 4
  br i1 %v8_1152c, label %dec_label_pc_11520, label %dec_label_pc_11538

dec_label_pc_11538:                               ; preds = %bb
  %v7_11538 = icmp eq i8 %v2_11520, 10
  br i1 %v7_11538, label %dec_label_pc_11520, label %dec_label_pc_11540

dec_label_pc_11540:                               ; preds = %dec_label_pc_11538
  %v7_11540 = icmp eq i8 %v2_11520, 45
  br i1 %v7_11540, label %dec_label_pc_11620, label %dec_label_pc_11548

dec_label_pc_11548:                               ; preds = %dec_label_pc_11540
  %v7_11548 = icmp eq i8 %v2_11520, 43
  br i1 %v7_11548, label %bb48, label %dec_label_pc_11558

bb48:                                             ; preds = %dec_label_pc_11548
  %v2_1154c = inttoptr i32 %v5_11520 to i8*
  %v3_1154c = load i8, i8* %v2_1154c, align 1
  %v4_1154c = zext i8 %v3_1154c to i32
  store i32 %v4_1154c, i32* %r4.global-to-local, align 4
  %v6_1154c = add i32 %v0_11520, 2
  store i32 %v6_1154c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11558

dec_label_pc_11558:                               ; preds = %bb48, %dec_label_pc_11548, %dec_label_pc_11620
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_11620 ], [ 2147483647, %dec_label_pc_11548 ], [ 2147483647, %bb48 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_11620 ], [ 0, %dec_label_pc_11548 ], [ 0, %bb48 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_11560 = call i32 @function_119f0(i32 %storemerge1, i32 %arg2)
  %v0_11564 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11564, i32* @r1, align 4
  store i32 %v2_11560, i32* %r8.global-to-local, align 4
  store i32 %storemerge1, i32* @r0, align 4
  %v0_11570 = call i32 @function_118e0()
  store i32 %v0_11570, i32* @lr, align 4
  %v0_11580.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11580

dec_label_pc_11580:                               ; preds = %.thread8, %dec_label_pc_11558
  %v2_115fc11 = phi i32 [ %v1_1161826, %.thread8 ], [ 0, %dec_label_pc_11558 ]
  %v1_115d8 = phi i32 [ %v0_1160c24, %.thread8 ], [ 0, %dec_label_pc_11558 ]
  %v1_115c0 = phi i32 [ %v3_11604, %.thread8 ], [ %v0_11580.pre, %dec_label_pc_11558 ]
  %v1_11580 = urem i32 %v1_115c0, 256
  %v1_11584 = add nsw i32 %v1_11580, -48
  %v1_1158c = add nsw i32 %v1_11580, -97
  %v1_11590 = add i32 %v1_115c0, -48
  %v1_11594 = add nsw i32 %v1_11580, -65
  %tmp71 = icmp ult i32 %v1_11584, 10
  br i1 %tmp71, label %dec_label_pc_115c4, label %dec_label_pc_1159c

dec_label_pc_1159c:                               ; preds = %dec_label_pc_11580
  %v2_1159c = icmp ugt i32 %v1_11594, 24
  %v7_1159c = icmp eq i32 %v1_11594, 25
  %v2_115a0 = xor i1 %v7_1159c, true
  %v3_115a0 = and i1 %v2_1159c, %v2_115a0
  br i1 %v3_115a0, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_1159c
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_1159c, %bb49
  %v0_115b420 = phi i32 [ %v1_11590, %dec_label_pc_1159c ], [ 0, %bb49 ]
  %v2_115a4 = xor i1 %v2_1159c, true
  %v3_115a4 = or i1 %v7_1159c, %v2_115a4
  br i1 %v3_115a4, label %bb51, label %bb52

bb51:                                             ; preds = %bb50
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v0_115b4 = phi i32 [ %v0_115b420, %bb50 ], [ 1, %bb51 ]
  br i1 %v3_115a0, label %bb53, label %bb54

bb53:                                             ; preds = %bb52
  %v6_115ac = icmp ugt i32 %v1_1158c, 24
  %v11_115ac = icmp eq i32 %v1_1158c, 25
  br label %bb54

bb54:                                             ; preds = %bb52, %bb53
  %v1_115b0 = phi i1 [ %v7_1159c, %bb52 ], [ %v11_115ac, %bb53 ]
  %v0_115b0 = phi i1 [ %v2_1159c, %bb52 ], [ %v6_115ac, %bb53 ]
  %v2_115b0 = xor i1 %v1_115b0, true
  %v3_115b0 = and i1 %v0_115b0, %v2_115b0
  br i1 %v3_115b0, label %dec_label_pc_1160c, label %dec_label_pc_115b4

dec_label_pc_115b4:                               ; preds = %bb54
  %v2_115b4 = icmp eq i32 %v0_115b4, 0
  %. = select i1 %v2_115b4, i32 87, i32 55
  %v2_115c0 = sub i32 %v1_115c0, %.
  br label %dec_label_pc_115c4

dec_label_pc_115c4:                               ; preds = %dec_label_pc_11580, %dec_label_pc_115b4
  %v0_115d834 = phi i32 [ %v1_11594, %dec_label_pc_11580 ], [ %., %dec_label_pc_115b4 ]
  %v3_115fc12 = phi i32 [ %v1_11590, %dec_label_pc_11580 ], [ %v2_115c0, %dec_label_pc_115b4 ]
  %v1_115c4 = load i32, i32* %r6.global-to-local, align 4
  %v6_115c8 = icmp slt i32 %v3_115fc12, %v1_115c4
  br i1 %v6_115c8, label %dec_label_pc_115cc, label %dec_label_pc_1160c

dec_label_pc_115cc:                               ; preds = %dec_label_pc_115c4
  %v3_115cc = icmp uge i32 %v2_115fc11, %v0_11570
  %v9_115cc = icmp eq i32 %v2_115fc11, %v0_11570
  %v2_115d0 = xor i1 %v3_115cc, true
  %v3_115d0 = or i1 %v9_115cc, %v2_115d0
  br i1 %v3_115d0, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_115cc
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_115cc, %bb57
  %v0_115d833 = phi i32 [ %v0_115d834, %dec_label_pc_115cc ], [ 0, %bb57 ]
  %v2_115d4 = xor i1 %v9_115cc, true
  %v3_115d4 = and i1 %v3_115cc, %v2_115d4
  br i1 %v3_115d4, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v0_115d8 = phi i32 [ %v0_115d833, %bb58 ], [ 1, %bb59 ]
  %tmp72 = icmp slt i32 %v1_115d8, 0
  %v4_115d8 = zext i1 %tmp72 to i32
  %v5_115d8 = or i32 %v0_115d8, %v4_115d8
  %v7_115d8 = icmp eq i32 %v5_115d8, 0
  br i1 %v7_115d8, label %dec_label_pc_115e4, label %.thread8

dec_label_pc_115e4:                               ; preds = %bb60
  %v1_115f0 = load i32, i32* %r8.global-to-local, align 4
  %v7_115f4 = icmp sgt i32 %v3_115fc12, %v1_115f0
  br i1 %v7_115f4, label %bb63, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_115e4
  br label %bb64

bb63:                                             ; preds = %dec_label_pc_115e4
  %v2_115f8 = icmp eq i1 %v9_115cc, false
  br i1 %v2_115f8, label %bb64, label %.thread8

bb64:                                             ; preds = %bb63, %.thread5
  %v4_115fc13 = mul i32 %v1_115c4, %v2_115fc11
  %v5_115fc14 = add i32 %v4_115fc13, %v3_115fc12
  br label %.thread8

.thread8:                                         ; preds = %bb63, %bb60, %bb64
  %v1_1161826 = phi i32 [ %v2_115fc11, %bb63 ], [ %v2_115fc11, %bb60 ], [ %v5_115fc14, %bb64 ]
  %v0_1160c24 = phi i32 [ -1, %bb63 ], [ -1, %bb60 ], [ 1, %bb64 ]
  %v0_11604 = load i32, i32* %r5.global-to-local, align 4
  %v1_11604 = inttoptr i32 %v0_11604 to i8*
  %v2_11604 = load i8, i8* %v1_11604, align 1
  %v3_11604 = zext i8 %v2_11604 to i32
  store i32 %v3_11604, i32* %r4.global-to-local, align 4
  %v5_11604 = add i32 %v0_11604, 1
  store i32 %v5_11604, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11580

dec_label_pc_1160c:                               ; preds = %dec_label_pc_115c4, %bb54
  %v1_1160c = icmp slt i32 %v1_115d8, 0
  %v0_11630 = load i32, i32* %sl.global-to-local, align 4
  %v2_11630 = icmp eq i32 %v0_11630, 0
  br i1 %v1_1160c, label %dec_label_pc_11630, label %dec_label_pc_11614

dec_label_pc_11614:                               ; preds = %dec_label_pc_1160c
  br i1 %v2_11630, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_11614
  %v2_11618 = sub i32 0, %v2_115fc11
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_11614, %bb65
  %v23_1161c = phi i32 [ %v2_115fc11, %dec_label_pc_11614 ], [ %v2_11618, %bb65 ]
  %v2_1161c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1161c, i32* @r4, align 4
  ret i32 %v23_1161c

dec_label_pc_11620:                               ; preds = %dec_label_pc_11540
  %v1_11620 = inttoptr i32 %v5_11520 to i8*
  %v2_11620 = load i8, i8* %v1_11620, align 1
  %v3_11620 = zext i8 %v2_11620 to i32
  store i32 %v3_11620, i32* %r4.global-to-local, align 4
  %v5_11620 = add i32 %v0_11520, 2
  store i32 %v5_11620, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11558

dec_label_pc_11630:                               ; preds = %dec_label_pc_1160c
  %.70 = select i1 %v2_11630, i32 2147483647, i32 -2147483648
  %v2_1163c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1163c, i32* @r4, align 4
  ret i32 %.70

; uselistorder directives
  uselistorder i32 %v3_11604, { 1, 0 }
  uselistorder i1 %v9_115cc, { 1, 0, 2 }
  uselistorder i1 %v3_115cc, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_1159c, { 1, 2, 0 }
  uselistorder i1 %v2_1159c, { 1, 0, 2 }
  uselistorder i32 %v1_11580, { 1, 2, 0 }
  uselistorder i32 %v1_115c0, { 1, 2, 0 }
  uselistorder i32 %v1_115d8, { 1, 0 }
  uselistorder i32 %v2_115fc11, { 0, 1, 6, 3, 2, 4, 5 }
  uselistorder i32 %v0_11570, { 1, 0, 2 }
  uselistorder i32 %v5_11520, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v3_11520, { 1, 0 }
  uselistorder i32 %v0_11520, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i8 32, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i8 9, { 3, 4, 2, 0, 1 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %dec_label_pc_115c4, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_11558, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11520, { 1, 2, 0, 3 }
}

define i32 @function_11640(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11640:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11640 = load i32, i32* @r4, align 4
  store i32 %v3_11640, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11658

dec_label_pc_11658:                               ; preds = %dec_label_pc_11684.dec_label_pc_11658_crit_edge, %dec_label_pc_11640
  %v0_1165c = phi i32 [ %v0_1165c.pre, %dec_label_pc_11684.dec_label_pc_11658_crit_edge ], [ %arg3, %dec_label_pc_11640 ]
  %v0_11658 = phi i32 [ %v1_11670, %dec_label_pc_11684.dec_label_pc_11658_crit_edge ], [ %tmp, %dec_label_pc_11640 ]
  %tmp12 = inttoptr i32 %v0_11658 to i32*
  %v5_11664 = call i32 @function_11e30(i32 %v0_1165c, i32* %tmp12, i32 1)
  %v7_11668 = icmp eq i32 %v5_11664, 1
  %v0_1166c = load i32, i32* @r4, align 4
  %v1_11670 = add i32 %v0_1166c, 1
  store i32 %v1_11670, i32* @r4, align 4
  %v0_11678 = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_11668, label %dec_label_pc_11678, label %dec_label_pc_11690

dec_label_pc_11678:                               ; preds = %dec_label_pc_11658
  %v1_11678 = add i32 %v0_11678, 1
  store i32 %v1_11678, i32* %r5.global-to-local, align 4
  %v0_1167c = load i32, i32* %r7.global-to-local, align 4
  %v7_11680 = icmp sgt i32 %v0_1167c, %v1_11678
  br i1 %v7_11680, label %dec_label_pc_11684, label %dec_label_pc_11690

dec_label_pc_11684:                               ; preds = %dec_label_pc_11678
  %v1_11684 = inttoptr i32 %v0_1166c to i8*
  %v2_11684 = load i8, i8* %v1_11684, align 1
  %v7_11688 = icmp eq i8 %v2_11684, 10
  br i1 %v7_11688, label %dec_label_pc_11690, label %dec_label_pc_11684.dec_label_pc_11658_crit_edge

dec_label_pc_11684.dec_label_pc_11658_crit_edge:  ; preds = %dec_label_pc_11684
  %v0_1165c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11658

dec_label_pc_11690:                               ; preds = %dec_label_pc_11658, %dec_label_pc_11684, %dec_label_pc_11678
  %v0_11690 = phi i32 [ %v1_11678, %dec_label_pc_11684 ], [ %v1_11678, %dec_label_pc_11678 ], [ %v0_11678, %dec_label_pc_11658 ]
  %v2_11690 = icmp eq i32 %v0_11690, 0
  %v1_11694 = load i32, i32* %r8.global-to-local, align 4
  %storemerge = select i1 %v2_11690, i32 0, i32 %v1_11694
  %v2_1169c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1169c, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_11670, { 1, 0 }
  uselistorder i8 10, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32*, i32)* @function_11e30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11690, { 1, 2, 0 }
}

define i32 @function_116a0() local_unnamed_addr {
dec_label_pc_116a0:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_116a0 = load i32, i32* @r4, align 4
  store i32 16, i32* @r4, align 4
  store i32 16, i32* %stack_var_-24, align 4
  %v0_116b0 = call i32 @function_12190()
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_116b8 = inttoptr i32 %v0_116b0 to i32*
  store i32 0, i32* %v2_116b8, align 4
  %v0_116c4 = load i32, i32* %r6.global-to-local, align 4
  %v3_116c8 = call i32 @function_124b0(i32 2, i32 2, i32 %v0_116c4)
  %v7_116d4 = icmp eq i32 %v3_116c8, -1
  store i32 %v3_116c8, i32* %r5.global-to-local, align 4
  %v2_116e0 = load i32, i32* @r4, align 4
  br i1 %v7_116d4, label %dec_label_pc_11730, label %dec_label_pc_116f4

dec_label_pc_116f4:                               ; preds = %dec_label_pc_116a0
  %v7_116e0 = shl i32 2056, %v2_116e0
  %v8_116e0 = or i32 %v7_116e0, 2056
  store i32 2, i32* %stack_var_-40, align 4
  %v3_11710 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_11710 = call i32 @function_1230c(i32 %v3_116c8, %sockaddr* %v3_11710, i32 %v2_116e0)
  %v2_11718 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1171c = load i32, i32* %r5.global-to-local, align 4
  %v4_11720 = call i32 @function_12338(i32 %v0_1171c, %sockaddr* %v3_11710, i32 %v2_11718)
  %v1_11728 = call i32 @function_11c68(i32 %v0_1171c)
  br label %dec_label_pc_11730

dec_label_pc_11730:                               ; preds = %dec_label_pc_116a0, %dec_label_pc_116f4
  %v0_11730 = phi i32 [ %v0_116c4, %dec_label_pc_116a0 ], [ %v8_116e0, %dec_label_pc_116f4 ]
  store i32 %v3_116a0, i32* @r4, align 4
  ret i32 %v0_11730

; uselistorder directives
  uselistorder i32 %v3_116c8, { 2, 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_1230c, { 4, 0, 8, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 2056, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_124b0, { 13, 18, 11, 12, 17, 16, 15, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11730, { 1, 0 }
}

define i32 @function_1173c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1173c:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp20 = ptrtoint i8* %arg1 to i32
  %v3_11740 = load i8, i8* %tmp, align 1
  %v2_11744 = icmp eq i8 %v3_11740, 0
  br i1 %v2_11744, label %bb, label %dec_label_pc_11758

bb:                                               ; preds = %dec_label_pc_1173c
  %v4_11740 = zext i8 %v3_11740 to i32
  br label %dec_label_pc_1176c

dec_label_pc_11758:                               ; preds = %dec_label_pc_1173c
  br label %dec_label_pc_1175c

dec_label_pc_1175c:                               ; preds = %dec_label_pc_1175c, %dec_label_pc_11758
  %v0_1175c = phi i32 [ %v1_1175c, %dec_label_pc_1175c ], [ 0, %dec_label_pc_11758 ]
  %v1_1175c = add i32 %v0_1175c, 1
  %v2_11760 = add i32 %v1_1175c, %arg2
  %v3_11760 = inttoptr i32 %v2_11760 to i8*
  %v4_11760 = load i8, i8* %v3_11760, align 1
  %v2_11764 = icmp eq i8 %v4_11760, 0
  br i1 %v2_11764, label %dec_label_pc_1176c, label %dec_label_pc_1175c

dec_label_pc_1176c:                               ; preds = %dec_label_pc_1175c, %bb
  %v0_117b018 = phi i32 [ %v4_11740, %bb ], [ %v1_1175c, %dec_label_pc_1175c ]
  %v0_117741 = load i32, i32* @r1, align 4
  %tmp27 = icmp slt i32 %v0_117741, 1
  br i1 %tmp27, label %dec_label_pc_117c0, label %dec_label_pc_11780

dec_label_pc_11780:                               ; preds = %dec_label_pc_1176c, %dec_label_pc_11774.backedge
  %v0_11778.in = phi i32 [ %v0_11778, %dec_label_pc_11774.backedge ], [ %v0_117741, %dec_label_pc_1176c ]
  %v0_117a4 = phi i32 [ %v1_117a4., %dec_label_pc_11774.backedge ], [ 0, %dec_label_pc_1176c ]
  %v0_11780 = phi i32 [ %v5_11780, %dec_label_pc_11774.backedge ], [ %tmp20, %dec_label_pc_1176c ]
  %v0_11778 = add i32 %v0_11778.in, -1
  %v1_11780 = inttoptr i32 %v0_11780 to i8*
  %v2_11780 = load i8, i8* %v1_11780, align 1
  %v3_11780 = zext i8 %v2_11780 to i32
  store i32 %v3_11780, i32* @lr, align 4
  %v5_11780 = add i32 %v0_11780, 1
  %v2_11784 = add i32 %v0_117a4, %arg2
  %v3_11784 = inttoptr i32 %v2_11784 to i8*
  %v4_11784 = load i8, i8* %v3_11784, align 1
  %v6_11784 = zext i8 %v4_11784 to i32
  %v1_11788 = add nsw i32 %v3_11780, -65
  %v1_1178c = add nsw i32 %v6_11784, -65
  %tmp35 = icmp ult i32 %v1_11788, 26
  br i1 %tmp35, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_11780
  %v5_11794 = or i32 %v3_11780, 96
  store i32 %v5_11794, i32* @lr, align 4
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_11780, %bb28
  %v0_117a0 = phi i32 [ %v3_11780, %dec_label_pc_11780 ], [ %v5_11794, %bb28 ]
  %tmp36 = icmp ult i32 %v1_1178c, 26
  br i1 %tmp36, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %v5_1179c = or i32 %v6_11784, 96
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v1_117a0 = phi i32 [ %v6_11784, %bb29 ], [ %v5_1179c, %bb30 ]
  %v9_117a0 = icmp eq i32 %v0_117a0, %v1_117a0
  %v1_117a4 = add i32 %v0_117a4, 1
  %v1_117a4. = select i1 %v9_117a0, i32 %v1_117a4, i32 0
  br i1 %v9_117a0, label %dec_label_pc_117b0, label %dec_label_pc_11774.backedge

dec_label_pc_11774.backedge:                      ; preds = %bb31, %dec_label_pc_117b0
  %tmp32 = icmp slt i32 %v0_11778, 1
  br i1 %tmp32, label %dec_label_pc_117c0, label %dec_label_pc_11780

dec_label_pc_117b0:                               ; preds = %bb31
  %v9_117b0 = icmp eq i32 %v0_117b018, %v1_117a4.
  br i1 %v9_117b0, label %dec_label_pc_117b8, label %dec_label_pc_11774.backedge

dec_label_pc_117b8:                               ; preds = %dec_label_pc_117b0
  %v2_117b8 = sub i32 %v5_11780, %tmp20
  ret i32 %v2_117b8

dec_label_pc_117c0:                               ; preds = %dec_label_pc_11774.backedge, %dec_label_pc_1176c
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_117a4., { 1, 0 }
  uselistorder i32 %v0_11780, { 1, 0 }
  uselistorder i32 %v0_117a4, { 1, 0 }
  uselistorder i8 %v3_11740, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder label %dec_label_pc_11774.backedge, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_11780, { 1, 0 }
}

define i32 @function_117c8(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_117c8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-62 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_117c8 = load i32, i32* @r4, align 4
  store i32 %v3_117c8, i32* %stack_var_-28, align 4
  %v22_117c8 = ptrtoint i32* %stack_var_-28 to i32
  %v0_117cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_117cc, i32* %r8.global-to-local, align 4
  %v2_117cc = icmp eq i32 %v0_117cc, 0
  store i1 %v2_117cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_117cc, label %dec_label_pc_118bc, label %dec_label_pc_117dc

dec_label_pc_117dc:                               ; preds = %dec_label_pc_117c8
  %v3_117dc = icmp eq i8 %arg1, 0
  store i1 %v3_117dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_117dc, label %.thread, label %dec_label_pc_117f0

.thread:                                          ; preds = %dec_label_pc_117dc
  %v4_117e4 = inttoptr i32 %v0_117cc to i8*
  store i8 48, i8* %v4_117e4, align 1
  %v0_117e8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_117e8.pr.pr, label %.thread1, label %dec_label_pc_117f0

.thread1:                                         ; preds = %.thread
  %v4_117e8 = load i32, i32* %r8.global-to-local, align 4
  %v5_117e8 = add i32 %v4_117e8, 1
  %v6_117e8 = inttoptr i32 %v5_117e8 to i8*
  store i8 0, i8* %v6_117e8, align 1
  %v0_117ec.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_117ec.pr.pr, label %dec_label_pc_118bc, label %dec_label_pc_117f0

dec_label_pc_117f0:                               ; preds = %dec_label_pc_117dc, %.thread, %.thread1
  %tmp39 = icmp slt i8 %arg1, 0
  %v7_117f4 = icmp eq i32 %arg2, 10
  store i1 %v7_117f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117f4, label %bb, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_117f0
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_117f0
  %v4_117f0 = zext i1 %tmp39 to i32
  store i32 %v4_117f0, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp39, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  br i1 %phitmp, label %.thread4, label %dec_label_pc_11818

.thread4:                                         ; preds = %bb, %.thread21
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11828

dec_label_pc_11818:                               ; preds = %bb
  %v2_11818 = sub nsw i32 0, %tmp
  store i32 %v2_11818, i32* %r4.global-to-local, align 4
  store i1 %v3_117dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_117dc, label %dec_label_pc_118c8, label %dec_label_pc_11828

dec_label_pc_11828:                               ; preds = %dec_label_pc_11818, %.thread4
  %v0_1183010 = phi i32 [ %tmp, %.thread4 ], [ %v2_11818, %dec_label_pc_11818 ]
  %storemerge = phi i32 [ 0, %.thread4 ], [ 1, %dec_label_pc_11818 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r6.global-to-local, align 4
  %v2_1182c = ptrtoint i32* %stack_var_-30 to i32
  store i32 %v2_1182c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11830

dec_label_pc_11830:                               ; preds = %bb37, %dec_label_pc_11828
  %v0_11830 = phi i32 [ %v0_11854, %bb37 ], [ %v0_1183010, %dec_label_pc_11828 ]
  store i32 %v0_11830, i32* %r0.global-to-local, align 4
  %v0_11834 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11834, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_11830, 16777216
  %v1_11838 = sdiv i32 %sext, 16777216
  %v3_11838 = call i32 @function_119f0(i32 %v1_11838, i32 %v0_11834)
  store i32 %v3_11838, i32* %r0.global-to-local, align 4
  %v7_1183c = icmp eq i32 %v3_11838, 9
  store i1 %v7_1183c, i1* %cpsr_z.global-to-local, align 1
  %v1_11840 = add i32 %v3_11838, 48
  %v0_11844 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11844, i32* @r1, align 4
  %v7_11848 = icmp sgt i32 %v3_11838, 9
  %extract.t = trunc i32 %v1_11840 to i8
  br i1 %v7_11848, label %bb36, label %bb37

bb36:                                             ; preds = %dec_label_pc_11830
  %v9_11848 = add i32 %v3_11838, 55
  %extract.t20 = trunc i32 %v9_11848 to i8
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_11830, %bb36
  %v0_11850.off0 = phi i8 [ %extract.t, %dec_label_pc_11830 ], [ %extract.t20, %bb36 ]
  %v0_1184c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1184c, i32* @r0, align 4
  %v2_11850 = load i32, i32* %r7.global-to-local, align 4
  %v3_11850 = inttoptr i32 %v2_11850 to i8*
  store i8 %v0_11850.off0, i8* %v3_11850, align 1
  %v4_11850 = load i32, i32* %r7.global-to-local, align 4
  %v5_11850 = add i32 %v4_11850, -1
  store i32 %v5_11850, i32* %r7.global-to-local, align 4
  %v0_11854 = call i32 @function_118e0()
  store i32 %v0_11854, i32* %r0.global-to-local, align 4
  store i32 %v0_11854, i32* %r4.global-to-local, align 4
  %v2_11858 = icmp eq i32 %v0_11854, 0
  store i1 %v2_11858, i1* %cpsr_z.global-to-local, align 1
  %v0_1185c = load i32, i32* %r6.global-to-local, align 4
  %v1_1185c = add i32 %v0_1185c, -1
  store i32 %v1_1185c, i32* %r6.global-to-local, align 4
  br i1 %v2_11858, label %dec_label_pc_11864, label %dec_label_pc_11830

dec_label_pc_11864:                               ; preds = %bb37
  %v0_11864 = load i32, i32* %sl.global-to-local, align 4
  %v2_11864 = icmp eq i32 %v0_11864, 0
  store i1 %v2_11864, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11864, label %bb38, label %dec_label_pc_118cc

bb38:                                             ; preds = %dec_label_pc_11864
  store i32 %v0_1185c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11870

dec_label_pc_11870:                               ; preds = %bb38, %dec_label_pc_118cc
  %v1_1187c = phi i32 [ %v0_1185c, %bb38 ], [ %v1_11874.pre, %dec_label_pc_118cc ]
  %v2_11870 = ptrtoint i32* %stack_var_-62 to i32
  %v2_11874 = add i32 %v1_1187c, %v2_11870
  %v3_11874 = inttoptr i32 %v2_11874 to i8*
  %v4_11874 = load i8, i8* %v3_11874, align 1
  %v6_11874 = zext i8 %v4_11874 to i32
  store i32 %v6_11874, i32* %r2.global-to-local, align 4
  %v2_11878 = icmp eq i8 %v4_11874, 0
  store i1 %v2_11878, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_11874, i32* %r1.global-to-local, align 4
  br i1 %v2_11878, label %dec_label_pc_118a0, label %dec_label_pc_11884

dec_label_pc_11884:                               ; preds = %dec_label_pc_11870
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11888

dec_label_pc_11888:                               ; preds = %dec_label_pc_11888, %dec_label_pc_11884
  %v0_11888 = phi i32 [ %v1_11888, %dec_label_pc_11888 ], [ 0, %dec_label_pc_11884 ]
  %v1_11888 = add i32 %v0_11888, 1
  store i32 %v1_11888, i32* %r2.global-to-local, align 4
  %v2_1188c = add i32 %v1_11888, %v2_11874
  %v3_1188c = inttoptr i32 %v2_1188c to i8*
  %v4_1188c = load i8, i8* %v3_1188c, align 1
  %v2_11890 = icmp eq i8 %v4_1188c, 0
  store i1 %v2_11890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11890, label %dec_label_pc_11898, label %dec_label_pc_11888

dec_label_pc_11898:                               ; preds = %dec_label_pc_11888
  %v7_11898 = icmp eq i32 %v0_11888, -2
  store i1 %v7_11898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11898, label %dec_label_pc_118bc, label %dec_label_pc_118a0

dec_label_pc_118a0:                               ; preds = %dec_label_pc_11898, %dec_label_pc_11870
  %v0_118a817 = phi i32 [ %v1_11888, %dec_label_pc_11898 ], [ %v6_11874, %dec_label_pc_11870 ]
  store i32 %v2_11874, i32* %r0.global-to-local, align 4
  %v0_118a4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_118a4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_118a8

dec_label_pc_118a8:                               ; preds = %dec_label_pc_118a8.dec_label_pc_118a8_crit_edge, %dec_label_pc_118a0
  %v2_118b4 = phi i32 [ %v5_118b4, %dec_label_pc_118a8.dec_label_pc_118a8_crit_edge ], [ %v0_118a4, %dec_label_pc_118a0 ]
  %v0_118ac = phi i32 [ %v0_118ac.pre, %dec_label_pc_118a8.dec_label_pc_118a8_crit_edge ], [ %v2_11874, %dec_label_pc_118a0 ]
  %v0_118a8 = phi i32 [ %v0_118a8.pre, %dec_label_pc_118a8.dec_label_pc_118a8_crit_edge ], [ %v0_118a817, %dec_label_pc_118a0 ]
  %v1_118a8 = add i32 %v0_118a8, -1
  store i32 %v1_118a8, i32* %r2.global-to-local, align 4
  %v1_118ac = inttoptr i32 %v0_118ac to i8*
  %v2_118ac = load i8, i8* %v1_118ac, align 1
  %v5_118ac = add i32 %v0_118ac, 1
  store i32 %v5_118ac, i32* %r0.global-to-local, align 4
  %v3_118b0 = icmp eq i32 %v0_118a8, 0
  store i1 %v3_118b0, i1* %cpsr_z.global-to-local, align 1
  %v3_118b4 = inttoptr i32 %v2_118b4 to i8*
  store i8 %v2_118ac, i8* %v3_118b4, align 1
  %v4_118b4 = load i32, i32* %r1.global-to-local, align 4
  %v5_118b4 = add i32 %v4_118b4, 1
  store i32 %v5_118b4, i32* %r1.global-to-local, align 4
  br i1 %v3_118b0, label %dec_label_pc_118bc, label %dec_label_pc_118a8.dec_label_pc_118a8_crit_edge

dec_label_pc_118a8.dec_label_pc_118a8_crit_edge:  ; preds = %dec_label_pc_118a8
  %v0_118a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_118ac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118a8

dec_label_pc_118bc:                               ; preds = %dec_label_pc_118a8, %dec_label_pc_11898, %.thread1, %dec_label_pc_117c8
  %v0_118bc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_118bc, i32* %r0.global-to-local, align 4
  %v2_118c4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_118c4, i32* @r4, align 4
  ret i32 %v0_118bc

dec_label_pc_118c8:                               ; preds = %dec_label_pc_11818
  store i32 32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_118cc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_11864, %dec_label_pc_118c8
  %v1_118d0 = phi i32 [ %v1_1185c, %dec_label_pc_11864 ], [ 32, %dec_label_pc_118c8 ]
  %v2_118d0 = add i32 %v1_118d0, %v22_117c8
  store i32 %v2_118d0, i32* %r2.global-to-local, align 4
  %v3_118d8 = add i32 %v2_118d0, -34
  %v4_118d8 = inttoptr i32 %v3_118d8 to i8*
  store i8 45, i8* %v4_118d8, align 1
  %v1_11874.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11870

; uselistorder directives
  uselistorder i32 %v5_118b4, { 1, 0 }
  uselistorder i1 %v3_118b0, { 1, 0 }
  uselistorder i32 %v0_118ac, { 1, 0 }
  uselistorder i1 %v7_11898, { 1, 0 }
  uselistorder i32 %v1_11888, { 0, 1, 3, 2 }
  uselistorder i32 %v2_11874, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11854, { 1, 2, 3, 0 }
  uselistorder i32 %v3_11838, { 2, 0, 1, 3, 4 }
  uselistorder i1 %phitmp, { 1, 0 }
  uselistorder i1 %v3_117dc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_117cc, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 12, 11, 13, 14 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_119f0, { 3, 1, 9, 2, 8, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_118cc, { 1, 0 }
  uselistorder label %dec_label_pc_11870, { 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %dec_label_pc_117f0, { 2, 1, 0 }
}

define i32 @function_118e0() local_unnamed_addr {
dec_label_pc_118e0:
  %v0_118e0 = load i32, i32* @r1, align 4
  %v1_118e0 = add i32 %v0_118e0, -1
  %v7_118e0 = icmp eq i32 %v0_118e0, 1
  br i1 %v7_118e0, label %bb, label %bb82

bb:                                               ; preds = %dec_label_pc_118e0
  %v2_118e4 = load i32, i32* @r0, align 4
  ret i32 %v2_118e4

bb82:                                             ; preds = %dec_label_pc_118e0
  %v2_118e0 = icmp eq i32 %v0_118e0, 0
  br i1 %v2_118e0, label %dec_label_pc_119c8, label %dec_label_pc_118ec

dec_label_pc_118ec:                               ; preds = %bb82
  %v0_118ec = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_118ec, %v0_118e0
  br i1 %tmp, label %dec_label_pc_118f4, label %dec_label_pc_11980

dec_label_pc_118f4:                               ; preds = %dec_label_pc_118ec
  %v2_118f4 = and i32 %v1_118e0, %v0_118e0
  %v4_118f4 = icmp eq i32 %v2_118f4, 0
  br i1 %v4_118f4, label %dec_label_pc_1198c, label %dec_label_pc_118fc

dec_label_pc_118fc:                               ; preds = %dec_label_pc_118f4
  %v3_118fc = icmp ult i32 %v0_118e0, 536870912
  br i1 %v3_118fc, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_118fc
  %v4_11900 = mul i32 %v0_118e0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_118fc, %.thread
  %v0_11920.pr36.ph = phi i32 [ %v4_11900, %.thread ], [ %v0_118e0, %dec_label_pc_118fc ]
  %storemerge137 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_118fc ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb85
  %v0_11920.pr36 = phi i32 [ %v4_11914, %bb85 ], [ %v0_11920.pr36.ph, %.preheader.preheader ]
  %v1_11918 = phi i32 [ %v4_11918, %bb85 ], [ %storemerge137, %.preheader.preheader ]
  %v2_1190c = icmp ugt i32 %v0_11920.pr36, 268435455
  br i1 %v2_1190c, label %.thread2, label %bb83

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11920thread-pre-split.loopexit

bb83:                                             ; preds = %.preheader
  %v4_11910 = icmp ult i32 %v0_11920.pr36, %v0_118ec
  br i1 %v4_11910, label %bb84, label %dec_label_pc_11920thread-pre-split.loopexit.loopexit

bb84:                                             ; preds = %bb83
  %v2_11914 = and i32 %v0_11920.pr36, 268435456
  %v3_11914 = icmp eq i32 %v2_11914, 0
  %v4_11914 = mul i32 %v0_11920.pr36, 16
  br i1 %v3_11914, label %bb85, label %dec_label_pc_11920.loopexit

bb85:                                             ; preds = %bb84
  %v2_11918 = and i32 %v1_11918, 268435456
  %v3_11918 = icmp eq i32 %v2_11918, 0
  %v4_11918 = mul i32 %v1_11918, 16
  br i1 %v3_11918, label %.preheader, label %dec_label_pc_11920thread-pre-split.loopexit.loopexit

dec_label_pc_11920thread-pre-split.loopexit.loopexit: ; preds = %bb85, %bb83
  %v1_1192c48.ph = phi i32 [ %v1_11918, %bb83 ], [ %v4_11918, %bb85 ]
  %v0_11920.pr38.ph = phi i32 [ %v0_11920.pr36, %bb83 ], [ %v4_11914, %bb85 ]
  br label %dec_label_pc_11920thread-pre-split.loopexit

dec_label_pc_11920thread-pre-split.loopexit:      ; preds = %dec_label_pc_11920thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1192c48 = phi i32 [ %v1_11918, %.thread2 ], [ %v1_1192c48.ph, %dec_label_pc_11920thread-pre-split.loopexit.loopexit ]
  %v0_11920.pr38 = phi i32 [ %v0_11920.pr36, %.thread2 ], [ %v0_11920.pr38.ph, %dec_label_pc_11920thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11920thread-pre-split

dec_label_pc_11920thread-pre-split:               ; preds = %dec_label_pc_11920thread-pre-split.loopexit, %bb87
  %v1_1192c46 = phi i32 [ %v1_1192c48, %dec_label_pc_11920thread-pre-split.loopexit ], [ %v3_1192c, %bb87 ]
  %v0_11920.pr = phi i32 [ %v0_11920.pr38, %dec_label_pc_11920thread-pre-split.loopexit ], [ %v3_11928, %bb87 ]
  br label %dec_label_pc_11920

dec_label_pc_11920.loopexit:                      ; preds = %bb84
  br label %dec_label_pc_11920

dec_label_pc_11920:                               ; preds = %dec_label_pc_11920.loopexit, %dec_label_pc_11920thread-pre-split
  %v1_1192c = phi i32 [ %v1_1192c46, %dec_label_pc_11920thread-pre-split ], [ %v1_11918, %dec_label_pc_11920.loopexit ]
  %v1_11928 = phi i32 [ %v0_11920.pr, %dec_label_pc_11920thread-pre-split ], [ %v4_11914, %dec_label_pc_11920.loopexit ]
  %v2_11920 = icmp slt i32 %v1_11928, 0
  br i1 %v2_11920, label %dec_label_pc_11934, label %bb86

bb86:                                             ; preds = %dec_label_pc_11920
  %v4_11924 = icmp ult i32 %v1_11928, %v0_118ec
  br i1 %v4_11924, label %bb87, label %dec_label_pc_11934

bb87:                                             ; preds = %bb86
  %v3_11928 = mul i32 %v1_11928, 2
  %v2_1192c = icmp slt i32 %v1_1192c, 0
  %v3_1192c = mul i32 %v1_1192c, 2
  br i1 %v2_1192c, label %dec_label_pc_11934, label %dec_label_pc_11920thread-pre-split

dec_label_pc_11934:                               ; preds = %bb86, %dec_label_pc_11920, %bb87
  %v2_1194059 = phi i32 [ %v3_1192c, %bb87 ], [ %v1_1192c, %bb86 ], [ %v1_1192c, %dec_label_pc_11920 ]
  %v1_1193851 = phi i32 [ %v3_11928, %bb87 ], [ %v1_11928, %bb86 ], [ %v1_11928, %dec_label_pc_11920 ]
  br label %dec_label_pc_11938

dec_label_pc_11938:                               ; preds = %.thread11, %dec_label_pc_11934
  %v1_1196c = phi i32 [ %v4_1196c, %.thread11 ], [ %v2_1194059, %dec_label_pc_11934 ]
  %v1_11940 = phi i32 [ %v0_11978, %.thread11 ], [ 0, %dec_label_pc_11934 ]
  %v1_11970 = phi i32 [ %v4_11970, %.thread11 ], [ %v1_1193851, %dec_label_pc_11934 ]
  %v1_1193c = phi i32 [ %v0_11968, %.thread11 ], [ %v0_118ec, %dec_label_pc_11934 ]
  %v3_11938 = icmp ult i32 %v1_1193c, %v1_11970
  br i1 %v3_11938, label %.thread7, label %bb88

bb88:                                             ; preds = %dec_label_pc_11938
  %v3_1193c = sub i32 %v1_1193c, %v1_11970
  %v3_11940 = or i32 %v1_11940, %v1_1196c
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11938, %bb88
  %v1_11948 = phi i32 [ %v1_1193c, %dec_label_pc_11938 ], [ %v3_1193c, %bb88 ]
  %v1_1194c = phi i32 [ %v1_11940, %dec_label_pc_11938 ], [ %v3_11940, %bb88 ]
  %v4_11944 = udiv i32 %v1_11970, 2
  %v6_11944 = icmp ult i32 %v1_11948, %v4_11944
  br i1 %v6_11944, label %.thread8, label %bb89

bb89:                                             ; preds = %.thread7
  %v3_11948 = urem i32 %v1_11970, 2
  %v4_11948 = icmp eq i32 %v3_11948, 0
  %v6_11948 = sub i32 %v1_11948, %v4_11944
  br i1 %v4_11948, label %.thread8, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1194c = udiv i32 %v1_1196c, 2
  %v6_1194c = or i32 %v1_1194c, %v5_1194c
  br label %.thread8

.thread8:                                         ; preds = %bb89, %.thread7, %bb90
  %v1_11954 = phi i32 [ %v6_11948, %bb89 ], [ %v1_11948, %.thread7 ], [ %v6_11948, %bb90 ]
  %v1_11958 = phi i32 [ %v1_1194c, %bb89 ], [ %v1_1194c, %.thread7 ], [ %v6_1194c, %bb90 ]
  %v4_11950 = udiv i32 %v1_11970, 4
  %v6_11950 = icmp ult i32 %v1_11954, %v4_11950
  br i1 %v6_11950, label %.thread9, label %bb91

bb91:                                             ; preds = %.thread8
  %v3_11954 = and i32 %v1_11970, 2
  %v4_11954 = icmp eq i32 %v3_11954, 0
  %v6_11954 = sub i32 %v1_11954, %v4_11950
  br i1 %v4_11954, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  %v5_11958 = udiv i32 %v1_1196c, 4
  %v6_11958 = or i32 %v1_11958, %v5_11958
  br label %.thread9

.thread9:                                         ; preds = %bb91, %.thread8, %bb92
  %v1_11960 = phi i32 [ %v6_11954, %bb91 ], [ %v1_11954, %.thread8 ], [ %v6_11954, %bb92 ]
  %v1_11964 = phi i32 [ %v1_11958, %bb91 ], [ %v1_11958, %.thread8 ], [ %v6_11958, %bb92 ]
  %v4_1195c = udiv i32 %v1_11970, 8
  %v6_1195c = icmp ult i32 %v1_11960, %v4_1195c
  br i1 %v6_1195c, label %thread-pre-split, label %bb93

bb93:                                             ; preds = %.thread9
  %v3_11960 = and i32 %v1_11970, 4
  %v4_11960 = icmp eq i32 %v3_11960, 0
  %v6_11960 = sub i32 %v1_11960, %v4_1195c
  br i1 %v4_11960, label %thread-pre-split, label %bb94

bb94:                                             ; preds = %bb93
  %v5_11964 = udiv i32 %v1_1196c, 8
  %v6_11964 = or i32 %v1_11964, %v5_11964
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb94, %.thread9, %bb93
  %v0_11978 = phi i32 [ %v1_11964, %bb93 ], [ %v1_11964, %.thread9 ], [ %v6_11964, %bb94 ]
  %v0_11968 = phi i32 [ %v6_11960, %bb93 ], [ %v1_11960, %.thread9 ], [ %v6_11960, %bb94 ]
  %v2_11968 = icmp eq i32 %v0_11968, 0
  br i1 %v2_11968, label %dec_label_pc_11978, label %bb95

bb95:                                             ; preds = %thread-pre-split
  %tmp142 = icmp ult i32 %v1_1196c, 16
  br i1 %tmp142, label %dec_label_pc_11978, label %.thread11

.thread11:                                        ; preds = %bb95
  %v4_1196c = udiv i32 %v1_1196c, 16
  %v4_11970 = udiv i32 %v1_11970, 16
  br label %dec_label_pc_11938

dec_label_pc_11978:                               ; preds = %thread-pre-split, %bb95
  ret i32 %v0_11978

dec_label_pc_11980:                               ; preds = %dec_label_pc_118ec
  %v9_118ec = icmp eq i32 %v0_118ec, %v0_118e0
  %. = zext i1 %v9_118ec to i32
  ret i32 %.

dec_label_pc_1198c:                               ; preds = %dec_label_pc_118f4
  %v2_1198c = icmp ugt i32 %v0_118e0, 65535
  br i1 %v2_1198c, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_1198c
  %v2_11990 = and i32 %v0_118e0, 32768
  %v3_11990 = icmp eq i32 %v2_11990, 0
  %v4_11990 = udiv i32 %v0_118e0, 65536
  br i1 %v3_11990, label %.thread16, label %bb100

.thread16:                                        ; preds = %bb99, %dec_label_pc_1198c
  %v0_1199c65 = phi i32 [ %v0_118e0, %dec_label_pc_1198c ], [ %v4_11990, %bb99 ]
  br label %bb100

bb100:                                            ; preds = %bb99, %.thread16
  %v1_119a0 = phi i32 [ %v0_1199c65, %.thread16 ], [ %v4_11990, %bb99 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb99 ]
  %v2_1199c = icmp ugt i32 %v1_119a0, 255
  br i1 %v2_1199c, label %bb101, label %.thread17

bb101:                                            ; preds = %bb100
  %v2_119a0 = and i32 %v1_119a0, 128
  %v3_119a0 = icmp eq i32 %v2_119a0, 0
  %v4_119a0 = udiv i32 %v1_119a0, 256
  br i1 %v3_119a0, label %.thread17, label %bb102

bb102:                                            ; preds = %bb101
  %v2_119a4 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb101, %bb100, %bb102
  %v1_119b0 = phi i32 [ %storemerge, %bb100 ], [ %storemerge, %bb101 ], [ %v2_119a4, %bb102 ]
  %v1_119ac = phi i32 [ %v1_119a0, %bb100 ], [ %v4_119a0, %bb101 ], [ %v4_119a0, %bb102 ]
  %v2_119a8 = icmp ugt i32 %v1_119ac, 15
  br i1 %v2_119a8, label %bb103, label %.thread18

bb103:                                            ; preds = %.thread17
  %v2_119ac = and i32 %v1_119ac, 8
  %v3_119ac = icmp eq i32 %v2_119ac, 0
  %v4_119ac = udiv i32 %v1_119ac, 16
  br i1 %v3_119ac, label %.thread18, label %bb104

bb104:                                            ; preds = %bb103
  %v2_119b0 = add nsw i32 %v1_119b0, 4
  br label %.thread18

.thread18:                                        ; preds = %bb103, %.thread17, %bb104
  %v4_119b8 = phi i32 [ %v1_119b0, %.thread17 ], [ %v1_119b0, %bb103 ], [ %v2_119b0, %bb104 ]
  %v5_119bc = phi i32 [ %v1_119ac, %.thread17 ], [ %v4_119ac, %bb103 ], [ %v4_119ac, %bb104 ]
  %v2_119b4 = icmp ugt i32 %v5_119bc, 3
  %v7_119b4 = icmp eq i32 %v5_119bc, 4
  %v2_119b8 = xor i1 %v7_119b4, true
  %v3_119b8 = and i1 %v2_119b4, %v2_119b8
  br i1 %v3_119b8, label %bb105, label %bb106

bb105:                                            ; preds = %.thread18
  %v5_119b8 = add nsw i32 %v4_119b8, 3
  br label %bb106

bb106:                                            ; preds = %.thread18, %bb105
  %v4_119bc = phi i32 [ %v4_119b8, %.thread18 ], [ %v5_119b8, %bb105 ]
  %v2_119bc = xor i1 %v2_119b4, true
  %v3_119bc = or i1 %v7_119b4, %v2_119bc
  br i1 %v3_119bc, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %v8_119bc = udiv i32 %v5_119bc, 2
  %v9_119bc = add i32 %v4_119bc, %v8_119bc
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v1_119c0 = phi i32 [ %v4_119bc, %bb106 ], [ %v9_119bc, %bb107 ]
  %v6_119c0 = lshr i32 %v0_118ec, %v1_119c0
  ret i32 %v6_119c0

dec_label_pc_119c8:                               ; preds = %bb82
  %v0_119c8 = load i32, i32* @lr, align 4
  %v0_119cc = call i32 @function_11ba0()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_119c8)
  %v9_119d8 = load i32, i32* @lr, align 4
  %v0_119dc = call i32 @function_118e0()
  store i32 %v9_119d8, i32* @lr, align 4
  ret i32 %v0_119dc

; uselistorder directives
  uselistorder i32 %v4_119bc, { 1, 0 }
  uselistorder i1 %v7_119b4, { 1, 0 }
  uselistorder i32 %v4_119ac, { 1, 0 }
  uselistorder i32 %v1_119ac, { 1, 0, 2, 3 }
  uselistorder i32 %v4_119a0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_119a0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11990, { 1, 0 }
  uselistorder i32 %v0_11968, { 1, 0 }
  uselistorder i32 %v4_1195c, { 1, 0 }
  uselistorder i32 %v1_11964, { 1, 2, 0 }
  uselistorder i32 %v4_11950, { 1, 0 }
  uselistorder i32 %v1_11958, { 1, 2, 0 }
  uselistorder i32 %v4_11944, { 1, 0 }
  uselistorder i32 %v1_1194c, { 1, 2, 0 }
  uselistorder i32 %v1_11970, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11940, { 1, 0 }
  uselistorder i32 %v1_1196c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1192c, { 1, 0 }
  uselistorder i32 %v3_11928, { 1, 0 }
  uselistorder i32 %v1_11928, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1192c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11918, { 1, 0 }
  uselistorder i32 %v4_11914, { 2, 1, 0 }
  uselistorder i32 %v1_11918, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11920.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_118ec, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_118e0, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1, 10, 12, 11 }
  uselistorder i32 65535, { 91, 41, 42, 1, 2, 11, 43, 21, 20, 24, 44, 23, 45, 13, 12, 3, 26, 46, 25, 47, 49, 14, 48, 4, 50, 51, 27, 52, 28, 53, 0, 54, 55, 29, 56, 57, 59, 15, 58, 22, 60, 61, 62, 63, 30, 64, 31, 65, 67, 16, 66, 5, 68, 69, 70, 71, 32, 72, 33, 73, 34, 74, 75, 17, 6, 76, 35, 77, 36, 78, 80, 18, 79, 7, 8, 81, 82, 38, 83, 37, 84, 86, 19, 85, 9, 10, 87, 88, 40, 89, 39, 90 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_11978, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11934, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11920thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_119f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_119f0:
  store i32 %arg1, i32* @r0, align 4
  %v1_119f0 = add i32 %arg2, -1
  store i32 %v1_119f0, i32* @r2, align 4
  %v2_119f0 = icmp eq i32 %arg2, 0
  br i1 %v2_119f0, label %dec_label_pc_11aac, label %dec_label_pc_119f8

dec_label_pc_119f8:                               ; preds = %dec_label_pc_119f0
  %v7_119f0 = icmp eq i32 %arg2, 1
  br i1 %v7_119f0, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_119f8
  %v1_119f8 = load i32, i32* @r0, align 4
  %v10_119f8 = icmp eq i32 %v1_119f8, %arg2
  br i1 %v10_119f8, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_119f8, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_119f8 = icmp ult i32 %v1_119f8, %arg2
  br i1 %v4_119f8, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_11a00 = and i32 %v1_119f0, %arg2
  %v8_11a00 = icmp eq i32 %v6_11a00, 0
  br i1 %v8_11a00, label %.thread67, label %dec_label_pc_11a10.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_11a04 = phi i32 [ %v1_119f8, %bb75 ], [ 0, %.thread65 ]
  %v3_11a04 = and i32 %v1_11a04, %v1_119f0
  br label %bb76

dec_label_pc_11a10.preheader:                     ; preds = %bb75
  %v2_11a1099 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_11a1099, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_11aa0, %bb74, %bb89, %bb84, %dec_label_pc_11a70, %.thread67
  %v5_11a08 = phi i32 [ %v1_119f8, %bb74 ], [ %v3_11a04, %.thread67 ], [ %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c, %dec_label_pc_11a70 ], [ 0, %bb84 ], [ %v1_11aa4, %dec_label_pc_11aa0 ], [ %v2_11aa0, %bb89 ]
  ret i32 %v5_11a08

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_11a10.preheader
  %v0_11a24.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_11a10.preheader ], [ %v4_11a18, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_11a10.preheader ], [ %v2_11a1c11, %.thread1.thread9 ]
  br label %dec_label_pc_11a24thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_11a10.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_11a1c11, %.thread1.thread9 ], [ 0, %dec_label_pc_11a10.preheader ]
  %v0_11a24.pr33100 = phi i32 [ %v4_11a18, %.thread1.thread9 ], [ %arg2, %dec_label_pc_11a10.preheader ]
  %v4_11a14 = icmp ult i32 %v0_11a24.pr33100, %v1_119f8
  br i1 %v4_11a14, label %bb78, label %dec_label_pc_11a24thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_11a18 = and i32 %v0_11a24.pr33100, 268435456
  %v3_11a18 = icmp eq i32 %v2_11a18, 0
  %v4_11a18 = mul i32 %v0_11a24.pr33100, 16
  br i1 %v3_11a18, label %.thread1.thread9, label %dec_label_pc_11a24.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_11a1c11 = add i32 %storemerge101, 4
  %v2_11a10 = icmp ugt i32 %v4_11a18, 268435455
  br i1 %v2_11a10, label %.thread, label %bb77

dec_label_pc_11a24thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_11a24thread-pre-split.loopexit

dec_label_pc_11a24thread-pre-split.loopexit:      ; preds = %dec_label_pc_11a24thread-pre-split.loopexit.loopexit, %.thread
  %v0_11a24.pr3398 = phi i32 [ %v0_11a24.pr33.lcssa, %.thread ], [ %v0_11a24.pr33100, %dec_label_pc_11a24thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_11a24thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11a24thread-pre-split

dec_label_pc_11a24thread-pre-split:               ; preds = %.thread4, %dec_label_pc_11a24thread-pre-split.loopexit
  %v1_11a3039 = phi i32 [ %storemerge95, %dec_label_pc_11a24thread-pre-split.loopexit ], [ %v2_11a30, %.thread4 ]
  %v0_11a24.pr = phi i32 [ %v0_11a24.pr3398, %dec_label_pc_11a24thread-pre-split.loopexit ], [ %v3_11a2c, %.thread4 ]
  br label %dec_label_pc_11a24

dec_label_pc_11a24.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_11a24

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11a24.loopexit, %dec_label_pc_11a24thread-pre-split
  %v0_11a38.pr = phi i32 [ %v1_11a3039, %dec_label_pc_11a24thread-pre-split ], [ %storemerge101, %dec_label_pc_11a24.loopexit ]
  %v1_11a2c = phi i32 [ %v0_11a24.pr, %dec_label_pc_11a24thread-pre-split ], [ %v4_11a18, %dec_label_pc_11a24.loopexit ]
  %v2_11a24 = icmp slt i32 %v1_11a2c, 0
  br i1 %v2_11a24, label %dec_label_pc_11a38, label %bb79

bb79:                                             ; preds = %dec_label_pc_11a24
  %v4_11a28 = icmp ult i32 %v1_11a2c, %v1_119f8
  br i1 %v4_11a28, label %.thread4, label %dec_label_pc_11a38

.thread4:                                         ; preds = %bb79
  %v3_11a2c = mul i32 %v1_11a2c, 2
  %v2_11a30 = add i32 %v0_11a38.pr, 1
  br label %dec_label_pc_11a24thread-pre-split

dec_label_pc_11a38:                               ; preds = %bb79, %dec_label_pc_11a24
  %v2_11a38 = add i32 %v0_11a38.pr, -3
  store i32 %v2_11a38, i32* @r2, align 4
  %v5_11a3c = icmp slt i32 %v0_11a38.pr, 3
  br i1 %v5_11a3c, label %dec_label_pc_11a7c, label %dec_label_pc_11a40

dec_label_pc_11a40:                               ; preds = %dec_label_pc_11a38, %bb83
  %v6_11a68 = phi i32 [ %v0_11a70, %bb83 ], [ %v2_11a38, %dec_label_pc_11a38 ]
  %v1_11a44 = phi i32 [ %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c, %bb83 ], [ %v1_119f8, %dec_label_pc_11a38 ]
  %v3_11a6412 = phi i32 [ %v3_11a64, %bb83 ], [ %v1_11a2c, %dec_label_pc_11a38 ]
  %v3_11a40 = icmp ult i32 %v1_11a44, %v3_11a6412
  %v3_11a44 = select i1 %v3_11a40, i32 0, i32 %v3_11a6412
  %v1_11a4c = sub i32 %v1_11a44, %v3_11a44
  %v4_11a48 = udiv i32 %v3_11a6412, 2
  %v6_11a48 = icmp ult i32 %v1_11a4c, %v4_11a48
  %v6_11a4c = select i1 %v6_11a48, i32 0, i32 %v4_11a48
  %v1_11a4c.v6_11a4c = sub i32 %v1_11a4c, %v6_11a4c
  %.demorgan = and i1 %v3_11a40, %v6_11a48
  %v4_11a50 = udiv i32 %v3_11a6412, 4
  %v6_11a50 = icmp ult i32 %v1_11a4c.v6_11a4c, %v4_11a50
  %v6_11a54 = select i1 %v6_11a50, i32 0, i32 %v4_11a50
  %v1_11a4c.v6_11a4c.v6_11a54 = sub i32 %v1_11a4c.v6_11a4c, %v6_11a54
  %.demorgan71 = and i1 %.demorgan, %v6_11a50
  %v4_11a58 = udiv i32 %v3_11a6412, 8
  %v6_11a58 = icmp ult i32 %v1_11a4c.v6_11a4c.v6_11a54, %v4_11a58
  %v6_11a5c = select i1 %v6_11a58, i32 0, i32 %v4_11a58
  %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c = sub i32 %v1_11a4c.v6_11a4c.v6_11a54, %v6_11a5c
  %.demorgan72 = and i1 %.demorgan71, %v6_11a58
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_11a40
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_11a40, %bb80
  %v2_11a60 = add i32 %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c, -1
  %v4_11a60 = sub i32 0, %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c
  %v5_11a60 = and i32 %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c, %v4_11a60
  %v3_11a64 = udiv i32 %v3_11a6412, 16
  %v5_11a68 = icmp slt i32 %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c, 1
  br i1 %v5_11a68, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_11a68 = add i32 %v6_11a68, -4
  store i32 %v7_11a68, i32* @r2, align 4
  %v9_11a68 = sub i32 3, %v6_11a68
  %v10_11a68 = and i32 %v9_11a68, %v6_11a68
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_11a70 = phi i32 [ %v6_11a68, %bb81 ], [ %v7_11a68, %bb82 ]
  %v0_11a6c15.in = phi i32 [ %v2_11a60, %bb81 ], [ %v7_11a68, %bb82 ]
  %v1_11a6c14.in = phi i32 [ %v5_11a60, %bb81 ], [ %v10_11a68, %bb82 ]
  %v1_11a6c14 = icmp slt i32 %v1_11a6c14.in, 0
  %v0_11a6c15 = icmp slt i32 %v0_11a6c15.in, 0
  %v2_11a6c = xor i1 %v0_11a6c15, %v1_11a6c14
  br i1 %v2_11a6c, label %dec_label_pc_11a70, label %dec_label_pc_11a40

dec_label_pc_11a70:                               ; preds = %bb83
  %v1_11a70 = urem i32 %v0_11a70, 4
  %v2_11a70 = icmp eq i32 %v1_11a70, 0
  br i1 %v2_11a70, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_11a70
  %v3_11a74 = icmp eq i32 %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c, 0
  br i1 %v3_11a74, label %bb76, label %dec_label_pc_11a7c

dec_label_pc_11a7c:                               ; preds = %bb84, %dec_label_pc_11a38
  %v0_11a90 = phi i32 [ %v3_11a64, %bb84 ], [ %v1_11a2c, %dec_label_pc_11a38 ]
  %v1_11a8c = phi i32 [ %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c, %bb84 ], [ %v1_119f8, %dec_label_pc_11a38 ]
  %v0_11a7c = phi i32 [ %v0_11a70, %bb84 ], [ %v2_11a38, %dec_label_pc_11a38 ]
  %v5_11a80 = icmp slt i32 %v0_11a7c, -2
  br i1 %v5_11a80, label %dec_label_pc_11aa0, label %dec_label_pc_11a84

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11a7c
  %v8_11a7c = icmp eq i32 %v0_11a7c, -2
  br i1 %v8_11a7c, label %dec_label_pc_11a94, label %dec_label_pc_11a88

dec_label_pc_11a88:                               ; preds = %dec_label_pc_11a84
  %v3_11a88 = icmp ult i32 %v1_11a8c, %v0_11a90
  br i1 %v3_11a88, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_11a88
  %v2_11a88 = sub i32 %v1_11a8c, %v0_11a90
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_11a88, %bb85
  %v0_11a9452 = phi i32 [ %v1_11a8c, %dec_label_pc_11a88 ], [ %v2_11a88, %bb85 ]
  %v3_11a90 = udiv i32 %v0_11a90, 2
  br label %dec_label_pc_11a94

dec_label_pc_11a94:                               ; preds = %dec_label_pc_11a84, %bb86
  %v0_11a9c = phi i32 [ %v0_11a90, %dec_label_pc_11a84 ], [ %v3_11a90, %bb86 ]
  %v1_11a98 = phi i32 [ %v1_11a8c, %dec_label_pc_11a84 ], [ %v0_11a9452, %bb86 ]
  %v3_11a94 = icmp ult i32 %v1_11a98, %v0_11a9c
  br i1 %v3_11a94, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_11a94
  %v2_11a94 = sub i32 %v1_11a98, %v0_11a9c
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_11a94, %bb87
  %v0_11aa055 = phi i32 [ %v1_11a98, %dec_label_pc_11a94 ], [ %v2_11a94, %bb87 ]
  %v3_11a9c = udiv i32 %v0_11a9c, 2
  br label %dec_label_pc_11aa0

dec_label_pc_11aa0:                               ; preds = %dec_label_pc_11a7c, %bb88
  %v2_11aa4 = phi i32 [ %v0_11a90, %dec_label_pc_11a7c ], [ %v3_11a9c, %bb88 ]
  %v1_11aa4 = phi i32 [ %v1_11a8c, %dec_label_pc_11a7c ], [ %v0_11aa055, %bb88 ]
  %v3_11aa0 = icmp ult i32 %v1_11aa4, %v2_11aa4
  br i1 %v3_11aa0, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_11aa0
  %v2_11aa0 = sub i32 %v1_11aa4, %v2_11aa4
  br label %bb76

dec_label_pc_11aac:                               ; preds = %dec_label_pc_119f0
  %v0_11aac = load i32, i32* @lr, align 4
  %v0_11ab0 = call i32 @function_11ba0()
  call void @__pseudo_branch(i32 %v0_11aac)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_11aa4, { 1, 2, 0 }
  uselistorder i32 %v0_11a90, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11a70, { 1, 0, 2 }
  uselistorder i32 %v7_11a68, { 1, 0, 2 }
  uselistorder i32 %v3_11a64, { 1, 0 }
  uselistorder i32 %v1_11a4c.v6_11a4c.v6_11a54.v6_11a5c, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_11a58, { 1, 0 }
  uselistorder i32 %v4_11a50, { 1, 0 }
  uselistorder i32 %v4_11a48, { 1, 0 }
  uselistorder i32 %v6_11a68, { 3, 0, 2, 1 }
  uselistorder i32 %v2_11a38, { 1, 0, 2 }
  uselistorder i32 %v1_11a2c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_11a18, { 1, 0, 3, 2 }
  uselistorder i32 %v0_11a24.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_119f8, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_11aa0, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_11a94, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_11a40, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @function_11abc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11abc:
  store i32 %arg1, i32* @r0, align 4
  %v2_11abc = icmp eq i32 %arg2, 0
  br i1 %v2_11abc, label %dec_label_pc_11b90, label %dec_label_pc_11ac4

dec_label_pc_11ac4:                               ; preds = %dec_label_pc_11abc
  %v1_11abc = icmp slt i32 %arg2, 0
  br i1 %v1_11abc, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_11ac4
  %v2_11ac4 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_11ac4, %bb
  %v4_11adc = phi i32 [ %arg2, %dec_label_pc_11ac4 ], [ %v2_11ac4, %bb ]
  %v0_11ac8 = load i32, i32* @r0, align 4
  store i32 %v0_11ac8, i32* @ip, align 4
  %v1_11ac8 = icmp slt i32 %v0_11ac8, 0
  br i1 %v1_11ac8, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_11acc = sub i32 0, %v0_11ac8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_11ad4 = phi i32 [ %v0_11ac8, %bb79 ], [ %v2_11acc, %bb80 ]
  %v1_11ad0 = add i32 %v4_11adc, -1
  %v7_11ad0 = icmp eq i32 %v4_11adc, 1
  br i1 %v7_11ad0, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_11ad4 = icmp eq i32 %v1_11ad4, %v4_11adc
  br i1 %v10_11ad4, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_11ad4 = icmp ult i32 %v1_11ad4, %v4_11adc
  br i1 %v4_11ad4, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_11adc = and i32 %v1_11ad0, %v4_11adc
  %v8_11adc = icmp eq i32 %v6_11adc, 0
  br i1 %v8_11adc, label %.thread72, label %dec_label_pc_11aec.preheader

dec_label_pc_11aec.preheader:                     ; preds = %bb84
  %v2_11aec109 = icmp ugt i32 %v4_11adc, 268435455
  br i1 %v2_11aec109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_11ae064 = phi i32 [ %v1_11ad4, %bb84 ], [ 0, %.thread70 ]
  %v3_11ae0 = and i32 %v1_11ae064, %v1_11ad0
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_11aec.preheader
  %v0_11b00.pr35.lcssa = phi i32 [ %v4_11adc, %dec_label_pc_11aec.preheader ], [ %v4_11af4, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_11aec.preheader ], [ %v2_11af89, %.thread2.thread7 ]
  br label %dec_label_pc_11b00thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_11aec.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_11af89, %.thread2.thread7 ], [ 0, %dec_label_pc_11aec.preheader ]
  %v0_11b00.pr35110 = phi i32 [ %v4_11af4, %.thread2.thread7 ], [ %v4_11adc, %dec_label_pc_11aec.preheader ]
  %v4_11af0 = icmp ult i32 %v0_11b00.pr35110, %v1_11ad4
  br i1 %v4_11af0, label %bb86, label %dec_label_pc_11b00thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_11af4 = and i32 %v0_11b00.pr35110, 268435456
  %v3_11af4 = icmp eq i32 %v2_11af4, 0
  %v4_11af4 = mul i32 %v0_11b00.pr35110, 16
  br i1 %v3_11af4, label %.thread2.thread7, label %dec_label_pc_11b00.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_11af89 = add i32 %storemerge111, 4
  %v2_11aec = icmp ugt i32 %v4_11af4, 268435455
  br i1 %v2_11aec, label %.thread1, label %bb85

dec_label_pc_11b00thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_11b00thread-pre-split.loopexit

dec_label_pc_11b00thread-pre-split.loopexit:      ; preds = %dec_label_pc_11b00thread-pre-split.loopexit.loopexit, %.thread1
  %v0_11b00.pr35108 = phi i32 [ %v0_11b00.pr35.lcssa, %.thread1 ], [ %v0_11b00.pr35110, %dec_label_pc_11b00thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_11b00thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11b00thread-pre-split

dec_label_pc_11b00thread-pre-split:               ; preds = %.thread4, %dec_label_pc_11b00thread-pre-split.loopexit
  %v1_11b0c41 = phi i32 [ %storemerge105, %dec_label_pc_11b00thread-pre-split.loopexit ], [ %v2_11b0c, %.thread4 ]
  %v2_11b0436 = phi i32 [ %v1_11ad4, %dec_label_pc_11b00thread-pre-split.loopexit ], [ %v2_11b04, %.thread4 ]
  %v0_11b00.pr = phi i32 [ %v0_11b00.pr35108, %dec_label_pc_11b00thread-pre-split.loopexit ], [ %v3_11b08, %.thread4 ]
  br label %dec_label_pc_11b00

dec_label_pc_11b00.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_11b00

dec_label_pc_11b00:                               ; preds = %dec_label_pc_11b00.loopexit, %dec_label_pc_11b00thread-pre-split
  %v0_11b14.pr = phi i32 [ %v1_11b0c41, %dec_label_pc_11b00thread-pre-split ], [ %storemerge111, %dec_label_pc_11b00.loopexit ]
  %v2_11b04 = phi i32 [ %v2_11b0436, %dec_label_pc_11b00thread-pre-split ], [ %v1_11ad4, %dec_label_pc_11b00.loopexit ]
  %v1_11b08 = phi i32 [ %v0_11b00.pr, %dec_label_pc_11b00thread-pre-split ], [ %v4_11af4, %dec_label_pc_11b00.loopexit ]
  %v2_11b00 = icmp slt i32 %v1_11b08, 0
  br i1 %v2_11b00, label %dec_label_pc_11b14, label %bb87

bb87:                                             ; preds = %dec_label_pc_11b00
  %v4_11b04 = icmp ult i32 %v1_11b08, %v2_11b04
  br i1 %v4_11b04, label %.thread4, label %dec_label_pc_11b14

.thread4:                                         ; preds = %bb87
  %v3_11b08 = mul i32 %v1_11b08, 2
  %v2_11b0c = add i32 %v0_11b14.pr, 1
  br label %dec_label_pc_11b00thread-pre-split

dec_label_pc_11b14:                               ; preds = %bb87, %dec_label_pc_11b00
  %v2_11b14 = add i32 %v0_11b14.pr, -3
  %v5_11b18 = icmp slt i32 %v0_11b14.pr, 3
  br i1 %v5_11b18, label %dec_label_pc_11b58, label %dec_label_pc_11b1c

dec_label_pc_11b1c:                               ; preds = %dec_label_pc_11b14, %bb91
  %v6_11b44 = phi i32 [ %v0_11b4c, %bb91 ], [ %v2_11b14, %dec_label_pc_11b14 ]
  %v1_11b20 = phi i32 [ %v1_11b28.v6_11b28.v6_11b30.v6_11b38, %bb91 ], [ %v2_11b04, %dec_label_pc_11b14 ]
  %v3_11b4010 = phi i32 [ %v3_11b40, %bb91 ], [ %v1_11b08, %dec_label_pc_11b14 ]
  %v3_11b1c = icmp ult i32 %v1_11b20, %v3_11b4010
  %v3_11b20 = select i1 %v3_11b1c, i32 0, i32 %v3_11b4010
  %v1_11b28 = sub i32 %v1_11b20, %v3_11b20
  %v4_11b24 = udiv i32 %v3_11b4010, 2
  %v6_11b24 = icmp ult i32 %v1_11b28, %v4_11b24
  %v6_11b28 = select i1 %v6_11b24, i32 0, i32 %v4_11b24
  %v1_11b28.v6_11b28 = sub i32 %v1_11b28, %v6_11b28
  %.demorgan = and i1 %v3_11b1c, %v6_11b24
  %v4_11b2c = udiv i32 %v3_11b4010, 4
  %v6_11b2c = icmp ult i32 %v1_11b28.v6_11b28, %v4_11b2c
  %v6_11b30 = select i1 %v6_11b2c, i32 0, i32 %v4_11b2c
  %v1_11b28.v6_11b28.v6_11b30 = sub i32 %v1_11b28.v6_11b28, %v6_11b30
  %.demorgan76 = and i1 %.demorgan, %v6_11b2c
  %v4_11b34 = udiv i32 %v3_11b4010, 8
  %v6_11b34 = icmp ult i32 %v1_11b28.v6_11b28.v6_11b30, %v4_11b34
  %v6_11b38 = select i1 %v6_11b34, i32 0, i32 %v4_11b34
  %v1_11b28.v6_11b28.v6_11b30.v6_11b38 = sub i32 %v1_11b28.v6_11b28.v6_11b30, %v6_11b38
  %.demorgan77 = and i1 %.demorgan76, %v6_11b34
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_11b1c
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_11b1c, %bb88
  %v2_11b3c = add i32 %v1_11b28.v6_11b28.v6_11b30.v6_11b38, -1
  %v4_11b3c = sub i32 0, %v1_11b28.v6_11b28.v6_11b30.v6_11b38
  %v5_11b3c = and i32 %v1_11b28.v6_11b28.v6_11b30.v6_11b38, %v4_11b3c
  %v3_11b40 = udiv i32 %v3_11b4010, 16
  %v5_11b44 = icmp slt i32 %v1_11b28.v6_11b28.v6_11b30.v6_11b38, 1
  br i1 %v5_11b44, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_11b44 = add i32 %v6_11b44, -4
  %v9_11b44 = sub i32 3, %v6_11b44
  %v10_11b44 = and i32 %v9_11b44, %v6_11b44
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_11b4c = phi i32 [ %v6_11b44, %bb89 ], [ %v7_11b44, %bb90 ]
  %v0_11b4813.in = phi i32 [ %v2_11b3c, %bb89 ], [ %v7_11b44, %bb90 ]
  %v1_11b4812.in = phi i32 [ %v5_11b3c, %bb89 ], [ %v10_11b44, %bb90 ]
  %v1_11b4812 = icmp slt i32 %v1_11b4812.in, 0
  %v0_11b4813 = icmp slt i32 %v0_11b4813.in, 0
  %v2_11b48 = xor i1 %v0_11b4813, %v1_11b4812
  br i1 %v2_11b48, label %dec_label_pc_11b4c, label %dec_label_pc_11b1c

dec_label_pc_11b4c:                               ; preds = %bb91
  %v1_11b4c = urem i32 %v0_11b4c, 4
  %v2_11b4c = icmp eq i32 %v1_11b4c, 0
  br i1 %v2_11b4c, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_11b4c
  %v3_11b50 = icmp eq i32 %v1_11b28.v6_11b28.v6_11b30.v6_11b38, 0
  br i1 %v3_11b50, label %.thread6, label %dec_label_pc_11b58

dec_label_pc_11b58:                               ; preds = %bb92, %dec_label_pc_11b14
  %v0_11b6c = phi i32 [ %v3_11b40, %bb92 ], [ %v1_11b08, %dec_label_pc_11b14 ]
  %v1_11b68 = phi i32 [ %v1_11b28.v6_11b28.v6_11b30.v6_11b38, %bb92 ], [ %v2_11b04, %dec_label_pc_11b14 ]
  %v0_11b58 = phi i32 [ %v0_11b4c, %bb92 ], [ %v2_11b14, %dec_label_pc_11b14 ]
  %v5_11b5c = icmp slt i32 %v0_11b58, -2
  br i1 %v5_11b5c, label %dec_label_pc_11b7c, label %dec_label_pc_11b60

dec_label_pc_11b60:                               ; preds = %dec_label_pc_11b58
  %v8_11b58 = icmp eq i32 %v0_11b58, -2
  br i1 %v8_11b58, label %dec_label_pc_11b70, label %dec_label_pc_11b64

dec_label_pc_11b64:                               ; preds = %dec_label_pc_11b60
  %v3_11b64 = icmp ult i32 %v1_11b68, %v0_11b6c
  br i1 %v3_11b64, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_11b64
  %v2_11b64 = sub i32 %v1_11b68, %v0_11b6c
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_11b64, %bb93
  %v0_11b7054 = phi i32 [ %v1_11b68, %dec_label_pc_11b64 ], [ %v2_11b64, %bb93 ]
  %v3_11b6c = udiv i32 %v0_11b6c, 2
  br label %dec_label_pc_11b70

dec_label_pc_11b70:                               ; preds = %dec_label_pc_11b60, %bb94
  %v0_11b78 = phi i32 [ %v0_11b6c, %dec_label_pc_11b60 ], [ %v3_11b6c, %bb94 ]
  %v1_11b74 = phi i32 [ %v1_11b68, %dec_label_pc_11b60 ], [ %v0_11b7054, %bb94 ]
  %v3_11b70 = icmp ult i32 %v1_11b74, %v0_11b78
  br i1 %v3_11b70, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_11b70
  %v2_11b70 = sub i32 %v1_11b74, %v0_11b78
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_11b70, %bb95
  %v0_11b7c57 = phi i32 [ %v1_11b74, %dec_label_pc_11b70 ], [ %v2_11b70, %bb95 ]
  %v3_11b78 = udiv i32 %v0_11b78, 2
  br label %dec_label_pc_11b7c

dec_label_pc_11b7c:                               ; preds = %dec_label_pc_11b58, %bb96
  %v2_11b80 = phi i32 [ %v0_11b6c, %dec_label_pc_11b58 ], [ %v3_11b78, %bb96 ]
  %v1_11b80 = phi i32 [ %v1_11b68, %dec_label_pc_11b58 ], [ %v0_11b7c57, %bb96 ]
  %v3_11b7c = icmp ult i32 %v1_11b80, %v2_11b80
  br i1 %v3_11b7c, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_11b7c
  %v2_11b7c = sub i32 %v1_11b80, %v2_11b80
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_11b7c, %bb83, %.thread72, %dec_label_pc_11b4c, %bb92, %bb97
  %v1_11b88 = phi i32 [ %v1_11b28.v6_11b28.v6_11b30.v6_11b38, %dec_label_pc_11b4c ], [ 0, %bb92 ], [ %v1_11b80, %dec_label_pc_11b7c ], [ %v2_11b7c, %bb97 ], [ %v3_11ae0, %.thread72 ], [ %v1_11ad4, %bb83 ]
  br i1 %v1_11ac8, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_11b88 = sub i32 0, %v1_11b88
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_11b8c = phi i32 [ %v1_11b88, %.thread6 ], [ %v2_11b88, %bb98 ]
  ret i32 %v1_11b8c

dec_label_pc_11b90:                               ; preds = %dec_label_pc_11abc
  %v0_11b90 = load i32, i32* @lr, align 4
  %v0_11b94 = call i32 @function_11ba0()
  call void @__pseudo_branch(i32 %v0_11b90)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_11b6c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11b4c, { 1, 0, 2 }
  uselistorder i32 %v7_11b44, { 1, 0 }
  uselistorder i32 %v3_11b40, { 1, 0 }
  uselistorder i32 %v1_11b28.v6_11b28.v6_11b30.v6_11b38, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_11b34, { 1, 0 }
  uselistorder i32 %v4_11b2c, { 1, 0 }
  uselistorder i32 %v4_11b24, { 1, 0 }
  uselistorder i32 %v6_11b44, { 3, 0, 2, 1 }
  uselistorder i32 %v2_11b14, { 1, 0 }
  uselistorder i32 %v1_11b08, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_11b04, { 1, 0, 3, 2 }
  uselistorder i32 %v4_11af4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_11b00.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11ad4, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_11adc, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 ()* @function_11ba0, { 2, 1, 0 }
  uselistorder i32 268435455, { 2, 0, 3, 1, 4 }
  uselistorder i32* @ip, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_11b7c, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11b70, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_11b1c, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @function_11ba0() local_unnamed_addr {
dec_label_pc_11ba0:
  %v1_11ba0 = load i32, i32* @r0, align 4
  ret i32 %v1_11ba0
}

define i32 @function_11ba4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ba4:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_11ba4 = load i32, i32* @r2, align 4
  %v1_11bb4 = add i32 %arg2, -12
  store i32 %v6_11ba4, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_11bb4, 2
  br i1 %tmp, label %dec_label_pc_11bdc, label %dec_label_pc_11bd4

dec_label_pc_11bd4:                               ; preds = %dec_label_pc_11ba4
  %v0_11bd4 = call i32 @function_11c18()
  br label %dec_label_pc_11c08

dec_label_pc_11bdc:                               ; preds = %dec_label_pc_11ba4
  %v2_11be4 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_11be4, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_11be4, -4095
  br i1 %tmp8, label %dec_label_pc_11c08, label %dec_label_pc_11bf4

dec_label_pc_11bf4:                               ; preds = %dec_label_pc_11bdc
  %v0_11bf4 = call i32 @function_12190()
  %v0_11bf8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11bf8 = sub i32 0, %v0_11bf8
  %v2_11bfc = inttoptr i32 %v0_11bf4 to i32*
  store i32 %v1_11bf8, i32* %v2_11bfc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c08

dec_label_pc_11c08:                               ; preds = %dec_label_pc_11bf4, %dec_label_pc_11bdc, %dec_label_pc_11bd4
  %storemerge = phi i32 [ %v0_11bd4, %dec_label_pc_11bd4 ], [ %v2_11be4, %dec_label_pc_11bdc ], [ -1, %dec_label_pc_11bf4 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_11be4, { 1, 0, 2 }
}

define i32 @function_11c18() local_unnamed_addr {
dec_label_pc_11c18:
  %r4.global-to-local = alloca i32, align 4
  %v0_11c38 = load i32, i32* @r0, align 4
  store i32 %v0_11c38, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11c38, -4095
  br i1 %tmp, label %dec_label_pc_11c54, label %dec_label_pc_11c44

dec_label_pc_11c44:                               ; preds = %dec_label_pc_11c18
  %v0_11c44 = call i32 @function_12190()
  %v0_11c48 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c48 = sub i32 0, %v0_11c48
  %v2_11c4c = inttoptr i32 %v0_11c44 to i32*
  store i32 %v1_11c48, i32* %v2_11c4c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c54

dec_label_pc_11c54:                               ; preds = %dec_label_pc_11c18, %dec_label_pc_11c44
  %v0_11c54 = phi i32 [ %v0_11c38, %dec_label_pc_11c18 ], [ -1, %dec_label_pc_11c44 ]
  ret i32 %v0_11c54

; uselistorder directives
  uselistorder i32 %v0_11c38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c54, { 1, 0 }
}

define i32 @function_11c68(i32 %arg1) local_unnamed_addr {
dec_label_pc_11c68:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11c68 = load i32, i32* @r4, align 4
  store i32 %v3_11c68, i32* %stack_var_-8, align 4
  %v1_11c6c = call i32 @close(i32 %arg1)
  store i32 %v1_11c6c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_11c6c, -4095
  br i1 %tmp, label %dec_label_pc_11c8c, label %dec_label_pc_11c7c

dec_label_pc_11c7c:                               ; preds = %dec_label_pc_11c68
  %v0_11c7c = call i32 @function_12190()
  %v0_11c80 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c80 = sub i32 0, %v0_11c80
  %v2_11c84 = inttoptr i32 %v0_11c7c to i32*
  store i32 %v1_11c80, i32* %v2_11c84, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c8c

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c68, %dec_label_pc_11c7c
  %v0_11c8c = phi i32 [ %v1_11c6c, %dec_label_pc_11c68 ], [ -1, %dec_label_pc_11c7c ]
  %v2_11c90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11c90, i32* @r4, align 4
  ret i32 %v0_11c8c

; uselistorder directives
  uselistorder i32 %v1_11c6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c8c, { 1, 0 }
}

define i32 @function_11c94() local_unnamed_addr {
dec_label_pc_11c94:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11c94 = load i32, i32* @r4, align 4
  store i32 %v3_11c94, i32* %stack_var_-8, align 4
  %v0_11c98 = call i32 @fork()
  store i32 %v0_11c98, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11c98, -4095
  br i1 %tmp, label %dec_label_pc_11cb8, label %dec_label_pc_11ca8

dec_label_pc_11ca8:                               ; preds = %dec_label_pc_11c94
  %v0_11ca8 = call i32 @function_12190()
  %v0_11cac = load i32, i32* %r4.global-to-local, align 4
  %v1_11cac = sub i32 0, %v0_11cac
  %v2_11cb0 = inttoptr i32 %v0_11ca8 to i32*
  store i32 %v1_11cac, i32* %v2_11cb0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11cb8

dec_label_pc_11cb8:                               ; preds = %dec_label_pc_11c94, %dec_label_pc_11ca8
  %v0_11cb8 = phi i32 [ %v0_11c98, %dec_label_pc_11c94 ], [ -1, %dec_label_pc_11ca8 ]
  %v2_11cbc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11cbc, i32* @r4, align 4
  ret i32 %v0_11cb8

; uselistorder directives
  uselistorder i32 %v0_11c98, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11cb8, { 1, 0 }
}

define i32 @function_11cc0() local_unnamed_addr {
dec_label_pc_11cc0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11cc0 = load i32, i32* @r4, align 4
  store i32 %v3_11cc0, i32* %stack_var_-8, align 4
  %v0_11cc4 = call i32 @getpid()
  store i32 %v0_11cc4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11cc4, -4095
  br i1 %tmp, label %dec_label_pc_11ce4, label %dec_label_pc_11cd4

dec_label_pc_11cd4:                               ; preds = %dec_label_pc_11cc0
  %v0_11cd4 = call i32 @function_12190()
  %v0_11cd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11cd8 = sub i32 0, %v0_11cd8
  %v2_11cdc = inttoptr i32 %v0_11cd4 to i32*
  store i32 %v1_11cd8, i32* %v2_11cdc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ce4

dec_label_pc_11ce4:                               ; preds = %dec_label_pc_11cc0, %dec_label_pc_11cd4
  %v0_11ce4 = phi i32 [ %v0_11cc4, %dec_label_pc_11cc0 ], [ -1, %dec_label_pc_11cd4 ]
  %v2_11ce8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11ce8, i32* @r4, align 4
  ret i32 %v0_11ce4

; uselistorder directives
  uselistorder i32 %v0_11cc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11ce4, { 1, 0 }
}

define i32 @function_11cec() local_unnamed_addr {
dec_label_pc_11cec:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11cec = load i32, i32* @r4, align 4
  store i32 %v3_11cec, i32* %stack_var_-8, align 4
  %v0_11cf0 = call i32 @getppid()
  store i32 %v0_11cf0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11cf0, -4095
  br i1 %tmp, label %dec_label_pc_11d10, label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11cec
  %v0_11d00 = call i32 @function_12190()
  %v0_11d04 = load i32, i32* %r4.global-to-local, align 4
  %v1_11d04 = sub i32 0, %v0_11d04
  %v2_11d08 = inttoptr i32 %v0_11d00 to i32*
  store i32 %v1_11d04, i32* %v2_11d08, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d10

dec_label_pc_11d10:                               ; preds = %dec_label_pc_11cec, %dec_label_pc_11d00
  %v0_11d10 = phi i32 [ %v0_11cf0, %dec_label_pc_11cec ], [ -1, %dec_label_pc_11d00 ]
  %v2_11d14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11d14, i32* @r4, align 4
  ret i32 %v0_11d10

; uselistorder directives
  uselistorder i32 %v0_11cf0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11d10, { 1, 0 }
}

define i32 @function_11d18(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11d18:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_11d18 = load i32, i32* @r3, align 4
  store i32 %v9_11d18, i32* %stack_var_-4, align 4
  %v2_11d24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11d24, i32* @r3, align 4
  %v2_11d34 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_11d34, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_11d34, -4095
  br i1 %tmp, label %dec_label_pc_11d54, label %dec_label_pc_11d44

dec_label_pc_11d44:                               ; preds = %dec_label_pc_11d18
  %v0_11d44 = call i32 @function_12190()
  %v0_11d48 = load i32, i32* %r4.global-to-local, align 4
  %v1_11d48 = sub i32 0, %v0_11d48
  store i32 %v1_11d48, i32* @r3, align 4
  %v2_11d4c = inttoptr i32 %v0_11d44 to i32*
  store i32 %v1_11d48, i32* %v2_11d4c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d54

dec_label_pc_11d54:                               ; preds = %dec_label_pc_11d18, %dec_label_pc_11d44
  %v0_11d54 = phi i32 [ %v2_11d34, %dec_label_pc_11d18 ], [ -1, %dec_label_pc_11d44 ]
  ret i32 %v0_11d54

; uselistorder directives
  uselistorder i32 %v2_11d34, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_11d54, { 1, 0 }
}

define i32 @function_11d68(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d68:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d68 = load i32, i32* @r4, align 4
  store i32 %v3_11d68, i32* %stack_var_-8, align 4
  %v2_11d6c = call i32 @kill(i32 %arg1, i32 %arg2)
  %v7_11d70 = icmp eq i32 %v2_11d6c, -4096
  store i1 %v7_11d70, i1* @cpsr_z, align 1
  store i32 %v2_11d6c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_11d6c, -4095
  br i1 %tmp, label %dec_label_pc_11d8c, label %dec_label_pc_11d7c

dec_label_pc_11d7c:                               ; preds = %dec_label_pc_11d68
  %v0_11d7c = call i32 @function_12190()
  %v0_11d80 = load i32, i32* %r4.global-to-local, align 4
  %v1_11d80 = sub i32 0, %v0_11d80
  %v2_11d84 = inttoptr i32 %v0_11d7c to i32*
  store i32 %v1_11d80, i32* %v2_11d84, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d8c

dec_label_pc_11d8c:                               ; preds = %dec_label_pc_11d68, %dec_label_pc_11d7c
  %v0_11d8c = phi i32 [ %v2_11d6c, %dec_label_pc_11d68 ], [ -1, %dec_label_pc_11d7c ]
  %v2_11d90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11d90, i32* @r4, align 4
  ret i32 %v0_11d8c

; uselistorder directives
  uselistorder i32 %v2_11d6c, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_11d8c, { 1, 0 }
}

define i32 @function_11d94(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d94:
  %r4.global-to-local = alloca i32, align 4
  %v6_11d94 = load i32, i32* @r2, align 4
  %v1_11da4 = and i32 %arg2, 64
  store i32 %v1_11da4, i32* @r3, align 4
  %v2_11da4 = icmp eq i32 %v1_11da4, 0
  br i1 %v2_11da4, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_11d94
  store i32 %v6_11d94, i32* @r3, align 4
  %phitmp = urem i32 %v6_11d94, 65536
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11d94, %bb
  %v0_11db4 = phi i32 [ 0, %dec_label_pc_11d94 ], [ %phitmp, %bb ]
  store i32 %v0_11db4, i32* @r2, align 4
  %v4_11dbc = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_11dc0 = icmp eq i32 %v4_11dbc, -4096
  store i1 %v7_11dc0, i1* @cpsr_z, align 1
  store i32 %v4_11dbc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_11dbc, -4095
  br i1 %tmp, label %dec_label_pc_11ddc, label %dec_label_pc_11dcc

dec_label_pc_11dcc:                               ; preds = %.thread1
  %v0_11dcc = call i32 @function_12190()
  %v0_11dd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_11dd0 = sub i32 0, %v0_11dd0
  store i32 %v1_11dd0, i32* @r3, align 4
  %v2_11dd4 = inttoptr i32 %v0_11dcc to i32*
  store i32 %v1_11dd0, i32* %v2_11dd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ddc

dec_label_pc_11ddc:                               ; preds = %.thread1, %dec_label_pc_11dcc
  %v0_11ddc = phi i32 [ %v4_11dbc, %.thread1 ], [ -1, %dec_label_pc_11dcc ]
  ret i32 %v0_11ddc

; uselistorder directives
  uselistorder i32 %v4_11dbc, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_11ddc, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_11df0(i32 %arg1) local_unnamed_addr {
dec_label_pc_11df0:
  store i32 %arg1, i32* @r2, align 4
  %v0_11df8 = load i32, i32* @r0, align 4
  %v2_11df8 = inttoptr i32 %v0_11df8 to i8*
  %v3_11df8 = call i32 @function_11d94(i8* %v2_11df8, i32 577)
  %v0_11dfc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11dfc, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_11df0
  %v6_11dfc = and i32 %v3_11df8, 36
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_11df0, %bb
  %v7_11dfc = phi i32 [ %v3_11df8, %dec_label_pc_11df0 ], [ %v6_11dfc, %bb ]
  ret i32 %v7_11dfc

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_11e00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e00:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e00 = load i32, i32* @r4, align 4
  store i32 %v3_11e00, i32* %stack_var_-8, align 4
  %v2_11e08 = load i32, i32* @r2, align 4
  %v3_11e08 = load i32, i32* @r3, align 4
  %v4_11e08 = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %v2_11e08, i32 %v3_11e08, i32 0)
  store i32 %v4_11e08, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_11e08, -4095
  br i1 %tmp, label %dec_label_pc_11e28, label %dec_label_pc_11e18

dec_label_pc_11e18:                               ; preds = %dec_label_pc_11e00
  %v0_11e18 = call i32 @function_12190()
  %v0_11e1c = load i32, i32* %r4.global-to-local, align 4
  %v1_11e1c = sub i32 0, %v0_11e1c
  %v2_11e20 = inttoptr i32 %v0_11e18 to i32*
  store i32 %v1_11e1c, i32* %v2_11e20, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11e28

dec_label_pc_11e28:                               ; preds = %dec_label_pc_11e00, %dec_label_pc_11e18
  %v0_11e28 = phi i32 [ %v4_11e08, %dec_label_pc_11e00 ], [ -1, %dec_label_pc_11e18 ]
  %v2_11e2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11e2c, i32* @r4, align 4
  ret i32 %v0_11e28

; uselistorder directives
  uselistorder i32 %v4_11e08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11e28, { 1, 0 }
}

define i32 @function_11e30(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11e30:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e30 = load i32, i32* @r4, align 4
  store i32 %v3_11e30, i32* %stack_var_-8, align 4
  %v4_11e34 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_11e34, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_11e34, -4095
  br i1 %tmp, label %dec_label_pc_11e54, label %dec_label_pc_11e44

dec_label_pc_11e44:                               ; preds = %dec_label_pc_11e30
  %v0_11e44 = call i32 @function_12190()
  %v0_11e48 = load i32, i32* %r4.global-to-local, align 4
  %v1_11e48 = sub i32 0, %v0_11e48
  %v2_11e4c = inttoptr i32 %v0_11e44 to i32*
  store i32 %v1_11e48, i32* %v2_11e4c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11e54

dec_label_pc_11e54:                               ; preds = %dec_label_pc_11e30, %dec_label_pc_11e44
  %v0_11e54 = phi i32 [ %v4_11e34, %dec_label_pc_11e30 ], [ -1, %dec_label_pc_11e44 ]
  %v2_11e58 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11e58, i32* @r4, align 4
  ret i32 %v0_11e54

; uselistorder directives
  uselistorder i32 %v4_11e34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11e54, { 1, 0 }
}

define i32 @function_11e5c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11e5c:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v3_11e5c = load i32, i32* @r4, align 4
  store i32 %v3_11e5c, i32* %stack_var_-8, align 4
  %v7_11e60 = call i32 @readlink(i8* %arg1, i8* %tmp, i32 %arg3)
  store i32 %v7_11e60, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v7_11e60, -4095
  br i1 %tmp6, label %dec_label_pc_11e80, label %dec_label_pc_11e70

dec_label_pc_11e70:                               ; preds = %dec_label_pc_11e5c
  %v0_11e70 = call i32 @function_12190()
  %v0_11e74 = load i32, i32* %r4.global-to-local, align 4
  %v1_11e74 = sub i32 0, %v0_11e74
  %v2_11e78 = inttoptr i32 %v0_11e70 to i32*
  store i32 %v1_11e74, i32* %v2_11e78, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11e80

dec_label_pc_11e80:                               ; preds = %dec_label_pc_11e5c, %dec_label_pc_11e70
  %v0_11e80 = phi i32 [ %v7_11e60, %dec_label_pc_11e5c ], [ -1, %dec_label_pc_11e70 ]
  %v2_11e84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11e84, i32* @r4, align 4
  ret i32 %v0_11e80

; uselistorder directives
  uselistorder i32 %v7_11e60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11e80, { 1, 0 }
}

define i32 @function_11e88(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11e88:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e88 = load i32, i32* @r4, align 4
  store i32 %v3_11e88, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11eb0, label %dec_label_pc_11ea0

dec_label_pc_11ea0:                               ; preds = %dec_label_pc_11e88
  %v0_11ea0 = call i32 @function_12190()
  %v0_11ea4 = load i32, i32* %r4.global-to-local, align 4
  %v1_11ea4 = sub i32 0, %v0_11ea4
  %v2_11ea8 = inttoptr i32 %v0_11ea0 to i32*
  store i32 %v1_11ea4, i32* %v2_11ea8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_11eb4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11eb0

dec_label_pc_11eb0:                               ; preds = %dec_label_pc_11e88, %dec_label_pc_11ea0
  %v2_11eb4 = phi i32 [ %v3_11e88, %dec_label_pc_11e88 ], [ %v2_11eb4.pre, %dec_label_pc_11ea0 ]
  %v0_11eb0 = phi i32 [ %arg1, %dec_label_pc_11e88 ], [ -1, %dec_label_pc_11ea0 ]
  store i32 %v2_11eb4, i32* @r4, align 4
  ret i32 %v0_11eb0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11eb0, { 1, 0 }
}

define i32 @function_11eb8(i32* %arg1) local_unnamed_addr {
dec_label_pc_11eb8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11eb8 = load i32, i32* @r4, align 4
  store i32 %v3_11eb8, i32* %stack_var_-8, align 4
  %v2_11ebc = call i32 @time(i32* %arg1)
  store i32 %v2_11ebc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_11ebc, -4095
  br i1 %tmp, label %dec_label_pc_11edc, label %dec_label_pc_11ecc

dec_label_pc_11ecc:                               ; preds = %dec_label_pc_11eb8
  %v0_11ecc = call i32 @function_12190()
  %v0_11ed0 = load i32, i32* %r4.global-to-local, align 4
  %v1_11ed0 = sub i32 0, %v0_11ed0
  %v2_11ed4 = inttoptr i32 %v0_11ecc to i32*
  store i32 %v1_11ed0, i32* %v2_11ed4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11edc

dec_label_pc_11edc:                               ; preds = %dec_label_pc_11eb8, %dec_label_pc_11ecc
  %v0_11edc = phi i32 [ %v2_11ebc, %dec_label_pc_11eb8 ], [ -1, %dec_label_pc_11ecc ]
  %v2_11ee0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11ee0, i32* @r4, align 4
  ret i32 %v0_11edc

; uselistorder directives
  uselistorder i32 %v2_11ebc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11edc, { 1, 0 }
}

define i32 @function_11ee4(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11ee4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ee4 = load i32, i32* @r4, align 4
  store i32 %v3_11ee4, i32* %stack_var_-8, align 4
  %v4_11ee8 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_11ee8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_11ee8, -4095
  br i1 %tmp, label %dec_label_pc_11f08, label %dec_label_pc_11ef8

dec_label_pc_11ef8:                               ; preds = %dec_label_pc_11ee4
  %v0_11ef8 = call i32 @function_12190()
  %v0_11efc = load i32, i32* %r4.global-to-local, align 4
  %v1_11efc = sub i32 0, %v0_11efc
  %v2_11f00 = inttoptr i32 %v0_11ef8 to i32*
  store i32 %v1_11efc, i32* %v2_11f00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11f08

dec_label_pc_11f08:                               ; preds = %dec_label_pc_11ee4, %dec_label_pc_11ef8
  %v0_11f08 = phi i32 [ %v4_11ee8, %dec_label_pc_11ee4 ], [ -1, %dec_label_pc_11ef8 ]
  %v2_11f0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11f0c, i32* @r4, align 4
  ret i32 %v0_11f08

; uselistorder directives
  uselistorder i32 %v4_11ee8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11f08, { 1, 0 }
}

define i32 @function_11f10(i32* %arg1) local_unnamed_addr {
dec_label_pc_11f10:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11f10 = load i32, i32* @r4, align 4
  store i32 %v3_11f10, i32* %stack_var_-20, align 4
  %v6_11f10 = load i32, i32* @r5, align 4
  %v9_11f10 = load i32, i32* @r6, align 4
  %v12_11f10 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_11f18 = load i32, i32* %arg1, align 4
  store i32 %v2_11f18, i32* %r4.global-to-local, align 4
  %v2_11f1c = ptrtoint i32* %stack_var_-36 to i32
  %v1_11f20 = add i32 %tmp, 24
  store i32 %v1_11f20, i32* @r6, align 4
  %v3_11f24 = icmp eq i32 %v2_11f18, -1
  store i32 %v2_11f1c, i32* @r7, align 4
  store i32 %v1_11f20, i32* %r2.global-to-local, align 4
  store i32 %v2_11f1c, i32* @r0, align 4
  br i1 %v3_11f24, label %dec_label_pc_11f3c, label %dec_label_pc_11f50

dec_label_pc_11f3c:                               ; preds = %dec_label_pc_11f10
  %v0_11f3c = call i32 @function_12190()
  %v0_11f44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11f44, i32* %r2.global-to-local, align 4
  %v2_11f48 = inttoptr i32 %v0_11f3c to i32*
  store i32 9, i32* %v2_11f48, align 4
  %v0_11fa8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11fa8

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11f10
  %v8_11f58 = call i32 @function_12ecc(i32 %v2_11f1c, i32 ptrtoint (i32* @global_var_12ec4.715 to i32), i32 %v1_11f20, i32 77516, i32 %v3_11f10, i32 %v6_11f10, i32 %v9_11f10)
  %v1_11f68 = call i32 @function_12ec4()
  %v0_11f74 = load i32, i32* @r5, align 4
  %v1_11f74 = inttoptr i32 %v0_11f74 to i32*
  %v2_11f74 = load i32, i32* %v1_11f74, align 4
  store i32 %v2_11f74, i32* @r4, align 4
  store i32 %v2_11f1c, i32* @r0, align 4
  store i32 -1, i32* %v1_11f74, align 4
  store i32 ptrtoint (i32* @global_var_11f8c.719 to i32), i32* @lr, align 4
  %v8_11f88 = call i32 @function_12ecc(i32 %v2_11f1c, i32 1, i32 %v1_11f20, i32 77516, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_11f8c = load i32, i32* @r5, align 4
  %v1_11f8c = add i32 %v0_11f8c, 12
  %v2_11f8c = inttoptr i32 %v1_11f8c to i32*
  %v3_11f8c = load i32, i32* %v2_11f8c, align 4
  store i32 %v3_11f8c, i32* @r0, align 4
  %v0_11f90 = call i32 @function_12688()
  %v0_11f94 = load i32, i32* @r5, align 4
  store i32 %v0_11f94, i32* @r0, align 4
  %v0_11f98 = call i32 @function_12688()
  %v0_11f9c = load i32, i32* @r4, align 4
  %v1_11fa0 = call i32 @function_11c68(i32 %v0_11f9c)
  store i32 %v1_11fa0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11fa8

dec_label_pc_11fa8:                               ; preds = %dec_label_pc_11f3c, %dec_label_pc_11f50
  %v0_11fa8 = phi i32 [ %v0_11fa8.pre, %dec_label_pc_11f3c ], [ %v1_11fa0, %dec_label_pc_11f50 ]
  %v2_11fb0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11fb0, i32* @r4, align 4
  store i32 %v6_11f10, i32* @r5, align 4
  store i32 %v9_11f10, i32* @r6, align 4
  store i32 %v12_11f10, i32* @r7, align 4
  ret i32 %v0_11fa8

; uselistorder directives
  uselistorder i32 %v1_11f20, { 2, 1, 0, 3 }
  uselistorder i32 %v2_11f1c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_11f10, { 1, 0 }
  uselistorder i32 %v6_11f10, { 1, 0 }
  uselistorder label %dec_label_pc_11fa8, { 1, 0 }
}

define i32 @function_11fc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_11fc4:
  %r5.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-108 = alloca i32, align 4
  %v3_11fc4 = load i32, i32* @r4, align 4
  %v9_11fc4 = load i32, i32* @r6, align 4
  %v12_11fc4 = load i32, i32* @r7, align 4
  %v0_11fd0 = load i32, i32* @r0, align 4
  %v2_11fd0 = inttoptr i32 %v0_11fd0 to i8*
  %v3_11fd0 = call i32 @function_11d94(i8* %v2_11fd0, i32 18432)
  store i32 %v3_11fd0, i32* @r0, align 4
  store i32 %v3_11fd0, i32* @r7, align 4
  %v1_11fd4 = icmp slt i32 %v3_11fd0, 0
  br i1 %v1_11fd4, label %.thread1, label %dec_label_pc_11fe0

.thread1:                                         ; preds = %dec_label_pc_11fc4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_120b0

dec_label_pc_11fe0:                               ; preds = %dec_label_pc_11fc4
  %v2_11fcc = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_11fcc, i32* @r1, align 4
  %v0_11fe4 = call i32 @function_132f0()
  %v1_11fe8 = icmp slt i32 %v0_11fe4, 0
  br i1 %v1_11fe8, label %dec_label_pc_12008, label %dec_label_pc_11ff0

dec_label_pc_11ff0:                               ; preds = %dec_label_pc_11fe0
  %v0_11ff0 = load i32, i32* @r7, align 4
  store i32 1, i32* @r2, align 4
  %v2_11ffc = call i32 @function_11ba4(i32 %v0_11ff0, i32 2)
  %v1_12000 = icmp slt i32 %v2_11ffc, 0
  br i1 %v1_12000, label %dec_label_pc_12008, label %dec_label_pc_12028

dec_label_pc_12008:                               ; preds = %dec_label_pc_11ff0, %dec_label_pc_11fe0
  %v0_12008 = call i32 @function_12190()
  store i32 %v0_12008, i32* %r5.global-to-local, align 4
  %v0_12010 = load i32, i32* @r7, align 4
  %v1_12014 = inttoptr i32 %v0_12008 to i32*
  %v2_12014 = load i32, i32* %v1_12014, align 4
  store i32 %v2_12014, i32* @r4, align 4
  %v1_12018 = call i32 @function_11c68(i32 %v0_12010)
  store i32 0, i32* @r6, align 4
  %v0_12020 = load i32, i32* @r4, align 4
  %v1_12020 = load i32, i32* %r5.global-to-local, align 4
  %v2_12020 = inttoptr i32 %v1_12020 to i32*
  store i32 %v0_12020, i32* %v2_12020, align 4
  br label %dec_label_pc_120b0

dec_label_pc_12028:                               ; preds = %dec_label_pc_11ff0
  %v1_1202c = call i32 @function_124dc(i32 48)
  store i32 %v1_1202c, i32* @r6, align 4
  %v2_12030 = icmp eq i32 %v1_1202c, 0
  br i1 %v2_12030, label %dec_label_pc_12080, label %dec_label_pc_12038

dec_label_pc_12038:                               ; preds = %dec_label_pc_12028
  store i32 0, i32* @r4, align 4
  %v2_1203c = add i32 %v1_1202c, 16
  %v3_1203c = inttoptr i32 %v2_1203c to i32*
  store i32 0, i32* %v3_1203c, align 4
  %v2_12044 = icmp ugt i32 %tmp, 511
  %v1_12048 = load i32, i32* @r6, align 4
  %v2_12048 = add i32 %v1_12048, 20
  %v3_12048 = inttoptr i32 %v2_12048 to i32*
  store i32 %tmp, i32* %v3_12048, align 4
  br i1 %v2_12044, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_12038
  %v2_12050 = load i32, i32* @r6, align 4
  %v3_12050 = add i32 %v2_12050, 20
  %v4_12050 = inttoptr i32 %v3_12050 to i32*
  store i32 512, i32* %v4_12050, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12038, %bb
  %v0_12054 = load i32, i32* @r7, align 4
  %v1_12054 = load i32, i32* @r6, align 4
  %v2_12054 = inttoptr i32 %v1_12054 to i32*
  store i32 %v0_12054, i32* %v2_12054, align 4
  %v0_12058 = load i32, i32* @r4, align 4
  %v1_12058 = load i32, i32* @r6, align 4
  %v2_12058 = add i32 %v1_12058, 8
  %v3_12058 = inttoptr i32 %v2_12058 to i32*
  store i32 %v0_12058, i32* %v3_12058, align 4
  %v0_1205c = load i32, i32* @r4, align 4
  %v1_1205c = load i32, i32* @r6, align 4
  %v2_1205c = add i32 %v1_1205c, 4
  %v3_1205c = inttoptr i32 %v2_1205c to i32*
  store i32 %v0_1205c, i32* %v3_1205c, align 4
  %v0_12064 = load i32, i32* @r6, align 4
  %v1_12064 = add i32 %v0_12064, 20
  %v2_12064 = inttoptr i32 %v1_12064 to i32*
  %v3_12064 = load i32, i32* %v2_12064, align 4
  %v2_12068 = call i32 @function_12630(i32 1, i32 %v3_12064)
  %v2_1206c = icmp eq i32 %v2_12068, 0
  %v1_12070 = load i32, i32* @r6, align 4
  %v2_12070 = add i32 %v1_12070, 12
  %v3_12070 = inttoptr i32 %v2_12070 to i32*
  store i32 %v2_12068, i32* %v3_12070, align 4
  br i1 %v2_1206c, label %dec_label_pc_12078, label %dec_label_pc_1209c

dec_label_pc_12078:                               ; preds = %.thread
  %v0_12078 = load i32, i32* @r6, align 4
  store i32 %v0_12078, i32* @r0, align 4
  %v0_1207c = call i32 @function_12688()
  br label %dec_label_pc_12080

dec_label_pc_12080:                               ; preds = %dec_label_pc_12028, %dec_label_pc_12078
  %v0_12080 = load i32, i32* @r7, align 4
  %v1_12084 = call i32 @function_11c68(i32 %v0_12080)
  %v0_12088 = call i32 @function_12190()
  store i32 0, i32* @r6, align 4
  %v2_12094 = inttoptr i32 %v0_12088 to i32*
  store i32 12, i32* %v2_12094, align 4
  br label %dec_label_pc_120b0

dec_label_pc_1209c:                               ; preds = %.thread
  store i32 73904, i32* @lr, align 4
  %v1_120ac = call i32 @function_12ec4()
  br label %dec_label_pc_120b0

dec_label_pc_120b0:                               ; preds = %.thread1, %dec_label_pc_12080, %dec_label_pc_12008, %dec_label_pc_1209c
  %v0_120b0 = load i32, i32* @r6, align 4
  store i32 %v3_11fc4, i32* @r4, align 4
  store i32 %v9_11fc4, i32* @r6, align 4
  store i32 %v12_11fc4, i32* @r7, align 4
  ret i32 %v0_120b0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_12630, { 21, 20, 24, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 1, 0, 6, 5, 3, 2, 23, 22 }
  uselistorder i32 512, { 0, 6, 9, 7, 1, 2, 10, 8, 11, 3, 12, 4, 13, 5, 14 }
  uselistorder i32 (i32)* @function_11c68, { 18, 17, 16, 14, 28, 27, 13, 12, 26, 25, 3, 2, 24, 23, 22, 21, 20, 19, 15, 11, 10, 9, 8, 7, 6, 5, 4, 0, 1 }
  uselistorder label %dec_label_pc_120b0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_12080, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_120c0(i32* %arg1) local_unnamed_addr {
dec_label_pc_120c0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_120c0 = load i32, i32* @r4, align 4
  %v6_120c0 = load i32, i32* @r5, align 4
  %v9_120c0 = load i32, i32* @lr, align 4
  %v1_120c4 = add i32 %tmp, 24
  store i32 %v1_120c4, i32* @r4, align 4
  %v2_120c8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 77516, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v2_120c8, i32* @r0, align 4
  store i32 %v1_120c4, i32* %r2.global-to-local, align 4
  %v8_120e4 = call i32 @function_12ecc(i32 %v2_120c8, i32 ptrtoint (i32* @global_var_12ec4.715 to i32), i32 %v1_120c4, i32 77516, i32 %v3_120c0, i32 %v6_120c0, i32 %v9_120c0)
  %v0_120e8 = load i32, i32* @r4, align 4
  store i32 %v0_120e8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_12ec4.715 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_120f8.724 to i32), i32* @lr, align 4
  %v1_120f4 = call i32 @function_12ec4()
  store i32 %v1_120f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_120f8

dec_label_pc_120f8:                               ; preds = %dec_label_pc_1212c, %dec_label_pc_120c0
  %v0_120f8 = load i32, i32* @r5, align 4
  %v1_120f8 = add i32 %v0_120f8, 4
  %v2_120f8 = inttoptr i32 %v1_120f8 to i32*
  %v3_120f8 = load i32, i32* %v2_120f8, align 4
  store i32 %v3_120f8, i32* %r2.global-to-local, align 4
  %v4_120f8 = add i32 %v0_120f8, 8
  %v5_120f8 = inttoptr i32 %v4_120f8 to i32*
  %v6_120f8 = load i32, i32* %v5_120f8, align 4
  store i32 %v6_120f8, i32* %r3.global-to-local, align 4
  %tmp8 = icmp ugt i32 %v6_120f8, %v3_120f8
  br i1 %tmp8, label %dec_label_pc_1212c, label %dec_label_pc_12104

dec_label_pc_12104:                               ; preds = %dec_label_pc_120f8
  %v1_12104 = inttoptr i32 %v0_120f8 to i32*
  %v2_12104 = load i32, i32* %v1_12104, align 4
  store i32 %v2_12104, i32* @r0, align 4
  %v1_12108 = add i32 %v0_120f8, 12
  %v2_12108 = inttoptr i32 %v1_12108 to i32*
  %v3_12108 = load i32, i32* %v2_12108, align 4
  %v1_1210c = add i32 %v0_120f8, 20
  %v2_1210c = inttoptr i32 %v1_1210c to i32*
  %v3_1210c = load i32, i32* %v2_1210c, align 4
  store i32 %v3_1210c, i32* @r2, align 4
  %v4_12110 = call i32 @function_13340(i32 %v2_12104, i32 %v3_12108, i32 %v3_1210c, i32 %v6_120f8)
  store i32 %v4_12110, i32* %r0.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_12110, 1
  br i1 %tmp7, label %.thread, label %dec_label_pc_12120

.thread:                                          ; preds = %dec_label_pc_12104
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12160

dec_label_pc_12120:                               ; preds = %dec_label_pc_12104
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_12124 = load i32, i32* @r5, align 4
  %v2_12124 = add i32 %v1_12124, 4
  %v3_12124 = inttoptr i32 %v2_12124 to i32*
  store i32 0, i32* %v3_12124, align 4
  %v1_12128 = load i32, i32* @r5, align 4
  %v2_12128 = add i32 %v1_12128, 8
  %v3_12128 = inttoptr i32 %v2_12128 to i32*
  store i32 %v4_12110, i32* %v3_12128, align 4
  %v0_1212c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1212c

dec_label_pc_1212c:                               ; preds = %dec_label_pc_120f8, %dec_label_pc_12120
  %v1_12144 = phi i32 [ %v0_120f8, %dec_label_pc_120f8 ], [ %v0_1212c.pre, %dec_label_pc_12120 ]
  %v1_1212c = add i32 %v1_12144, 4
  %v2_1212c = inttoptr i32 %v1_1212c to i32*
  %v3_1212c = load i32, i32* %v2_1212c, align 4
  store i32 %v3_1212c, i32* %r2.global-to-local, align 4
  %v1_12130 = add i32 %v1_12144, 12
  %v2_12130 = inttoptr i32 %v1_12130 to i32*
  %v3_12130 = load i32, i32* %v2_12130, align 4
  store i32 %v3_12130, i32* %ip.global-to-local, align 4
  %v2_12134 = add i32 %v3_12130, %v3_1212c
  store i32 %v2_12134, i32* @r4, align 4
  %v1_12138 = add i32 %v2_12134, 4
  %v2_12138 = inttoptr i32 %v1_12138 to i32*
  %v3_12138 = load i32, i32* %v2_12138, align 4
  %v1_1213c = add i32 %v2_12134, 8
  %v2_1213c = inttoptr i32 %v1_1213c to i8*
  %v3_1213c = load i8, i8* %v2_1213c, align 1
  %v4_1213c = zext i8 %v3_1213c to i32
  store i32 %v4_1213c, i32* %r3.global-to-local, align 4
  %v1_12140 = add i32 %v2_12134, 9
  %v2_12140 = inttoptr i32 %v1_12140 to i8*
  %v3_12140 = load i8, i8* %v2_12140, align 1
  %v4_12140 = zext i8 %v3_12140 to i32
  store i32 %v4_12140, i32* %r0.global-to-local, align 4
  %v2_12144 = add i32 %v1_12144, 16
  %v3_12144 = inttoptr i32 %v2_12144 to i32*
  store i32 %v3_12138, i32* %v3_12144, align 4
  %v0_12148 = load i32, i32* %r2.global-to-local, align 4
  %v1_12148 = load i32, i32* %ip.global-to-local, align 4
  %v2_12148 = add i32 %v1_12148, %v0_12148
  %v3_12148 = inttoptr i32 %v2_12148 to i32*
  %v4_12148 = load i32, i32* %v3_12148, align 4
  %v0_1214c = load i32, i32* %r3.global-to-local, align 4
  %v1_1214c = load i32, i32* %r0.global-to-local, align 4
  %v4_1214c = mul i32 %v1_1214c, 256
  %v5_1214c = or i32 %v4_1214c, %v0_1214c
  store i32 %v5_1214c, i32* %r3.global-to-local, align 4
  %v2_12150 = add i32 %v5_1214c, %v0_12148
  store i32 %v2_12150, i32* @r2, align 4
  %v2_12154 = icmp eq i32 %v4_12148, 0
  %v1_12158 = load i32, i32* @r5, align 4
  %v2_12158 = add i32 %v1_12158, 4
  %v3_12158 = inttoptr i32 %v2_12158 to i32*
  store i32 %v2_12150, i32* %v3_12158, align 4
  br i1 %v2_12154, label %dec_label_pc_120f8, label %dec_label_pc_12160

dec_label_pc_12160:                               ; preds = %dec_label_pc_1212c, %.thread
  store i32 %v2_120c8, i32* @r0, align 4
  store i32 77516, i32* %r3.global-to-local, align 4
  store i32 74100, i32* @lr, align 4
  %v3_12170 = load i32, i32* @r2, align 4
  %v8_12170 = call i32 @function_12ecc(i32 %v2_120c8, i32 1, i32 %v3_12170, i32 77516, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_12174 = load i32, i32* @r4, align 4
  store i32 %v0_12174, i32* %r0.global-to-local, align 4
  store i32 %v3_120c0, i32* @r4, align 4
  store i32 %v6_120c0, i32* @r5, align 4
  ret i32 %v0_12174

; uselistorder directives
  uselistorder i32 %v1_12144, { 0, 2, 1 }
  uselistorder i32 %v6_120f8, { 1, 0, 2 }
  uselistorder i32 %v0_120f8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_120c8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_120c4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder label %dec_label_pc_1212c, { 1, 0 }
}

define i32 @function_12190() local_unnamed_addr {
dec_label_pc_12190:
  ret i32 ptrtoint (i32* @global_var_1d24c.727 to i32)
}

define i32 @function_1219c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1219c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v1_121a8 = bitcast i32* %stack_var_-20 to %tms*
  %v2_121a8 = call i32 @function_13724(%tms* %v1_121a8)
  %v2_121b0 = load i32, i32* %stack_var_-20, align 4
  %v2_121b4 = add i32 %v2_121b0, %tmp
  %v2_121bc = mul i32 %v2_121b4, 10000
  %v1_121c0 = and i32 %v2_121bc, 2147483632
  ret i32 %v1_121c0

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_121d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_121d0:
  %v0_121d0 = call i32 @function_13b30()
  ret i32 %v0_121d0
}

define i32 @function_121e0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_121e0:
  %v0_121e0 = call i32 @function_13b30()
  ret i32 %v0_121e0

; uselistorder directives
  uselistorder i32 ()* @function_13b30, { 1, 0 }
}

define i32 @function_121f0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_121f0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_121f4 = load i32, i32* @r2, align 4
  %v8_121f4 = icmp eq i32 %v0_121f4, 8
  store i1 %v8_121f4, i1* %cpsr_z.global-to-local, align 1
  %v5_121f8 = icmp slt i32 %v0_121f4, 8
  br i1 %v5_121f8, label %dec_label_pc_12258, label %dec_label_pc_121fc

dec_label_pc_121fc:                               ; preds = %dec_label_pc_121f0
  %v4_121fc = mul i32 %arg2, 256
  %v5_121fc = or i32 %v4_121fc, %arg2
  %v4_12200 = mul i32 %v5_121fc, 65536
  %v5_12200 = or i32 %v4_12200, %v5_121fc
  store i32 %v5_12200, i32* %r1.global-to-local, align 4
  %v1_1220457 = urem i32 %tmp, 4
  %v2_1220458 = icmp eq i32 %v1_1220457, 0
  store i1 %v2_1220458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1220458, label %dec_label_pc_12214, label %bb

bb:                                               ; preds = %dec_label_pc_121fc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_121fc ]
  %v3_1220859 = phi i32 [ %v6_12208, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_121fc ]
  %v4_12208 = inttoptr i32 %v3_1220859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_12208, align 1
  %v5_12208 = load i32, i32* %r3.global-to-local, align 4
  %v6_12208 = add i32 %v5_12208, 1
  store i32 %v6_12208, i32* %r3.global-to-local, align 4
  %v0_1220c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_12218.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1220c.pr, label %dec_label_pc_12214, label %.thread

.thread:                                          ; preds = %bb
  %v2_1220c = add i32 %v0_12218.pr.pre, -1
  store i32 %v2_1220c, i32* @r2, align 4
  %v1_12204 = urem i32 %v6_12208, 4
  %v2_12204 = icmp eq i32 %v1_12204, 0
  store i1 %v2_12204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12204, label %dec_label_pc_12214, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_12208.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_12208.pre to i8
  br label %bb

dec_label_pc_12214:                               ; preds = %.thread, %bb, %dec_label_pc_121fc
  %v0_1222028 = phi i32 [ %tmp, %dec_label_pc_121fc ], [ %v6_12208, %bb ], [ %v6_12208, %.thread ]
  %v0_12218.pr = phi i32 [ %v0_121f4, %dec_label_pc_121fc ], [ %v0_12218.pr.pre, %bb ], [ %v2_1220c, %.thread ]
  %v0_12214 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12214, i32* %ip.global-to-local, align 4
  %v8_1221810 = icmp eq i32 %v0_12218.pr, 8
  store i1 %v8_1221810, i1* %cpsr_z.global-to-local, align 1
  %v5_1221c11 = icmp slt i32 %v0_12218.pr, 8
  br i1 %v5_1221c11, label %dec_label_pc_12258, label %dec_label_pc_12220.preheader

dec_label_pc_12220.preheader:                     ; preds = %dec_label_pc_12214
  %v1_1222046 = inttoptr i32 %v0_1222028 to i32*
  store i32 %v0_12214, i32* %v1_1222046, align 4
  %v3_1222047 = add i32 %v0_1222028, 4
  %v4_1222048 = inttoptr i32 %v3_1222047 to i32*
  %v5_1222049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1222049, i32* %v4_1222048, align 4
  %v6_1222050 = add i32 %v0_1222028, 8
  store i32 %v6_1222050, i32* %r3.global-to-local, align 4
  %v0_1222451 = load i32, i32* @r2, align 4
  %v1_1222452 = add i32 %v0_1222451, -8
  store i32 %v1_1222452, i32* %r2.global-to-local, align 4
  %v5_1222c53 = icmp slt i32 %v1_1222452, 8
  br i1 %v5_1222c53, label %dec_label_pc_12220.dec_label_pc_12258.loopexit_crit_edge, label %dec_label_pc_12230

dec_label_pc_12230:                               ; preds = %dec_label_pc_12220.preheader, %dec_label_pc_12218.dec_label_pc_12220_crit_edge
  %v6_1222055 = phi i32 [ %v6_12220, %dec_label_pc_12218.dec_label_pc_12220_crit_edge ], [ %v6_1222050, %dec_label_pc_12220.preheader ]
  %v0_1222054 = phi i32 [ %v12_1224c, %dec_label_pc_12218.dec_label_pc_12220_crit_edge ], [ %v0_1222028, %dec_label_pc_12220.preheader ]
  %v1_12230 = inttoptr i32 %v6_1222055 to i32*
  %v2_12230 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_12230, i32* %v1_12230, align 4
  %v3_12230 = add i32 %v0_1222054, 12
  %v4_12230 = inttoptr i32 %v3_12230 to i32*
  %v5_12230 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12230, i32* %v4_12230, align 4
  %v6_12230 = add i32 %v0_1222054, 16
  store i32 %v6_12230, i32* %r3.global-to-local, align 4
  %v0_12234 = load i32, i32* %r2.global-to-local, align 4
  %v1_12234 = add i32 %v0_12234, -8
  store i32 %v1_12234, i32* %r2.global-to-local, align 4
  %v5_1223c = icmp slt i32 %v1_12234, 8
  br i1 %v5_1223c, label %dec_label_pc_12230.dec_label_pc_12258.loopexit_crit_edge, label %dec_label_pc_12240

dec_label_pc_12240:                               ; preds = %dec_label_pc_12230
  %v1_12240 = inttoptr i32 %v6_12230 to i32*
  %v2_12240 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_12240, i32* %v1_12240, align 4
  %v3_12240 = add i32 %v0_1222054, 20
  %v4_12240 = inttoptr i32 %v3_12240 to i32*
  %v5_12240 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12240, i32* %v4_12240, align 4
  %v6_12240 = add i32 %v0_1222054, 24
  store i32 %v6_12240, i32* %r3.global-to-local, align 4
  %v0_12244 = load i32, i32* %r2.global-to-local, align 4
  %v1_12244 = add i32 %v0_12244, -8
  store i32 %v1_12244, i32* %r2.global-to-local, align 4
  %v5_1224c = icmp slt i32 %v1_12244, 8
  br i1 %v5_1224c, label %dec_label_pc_12240.dec_label_pc_12258.loopexit_crit_edge, label %dec_label_pc_12218

dec_label_pc_12218:                               ; preds = %dec_label_pc_12240
  %v7_1224c = inttoptr i32 %v6_12240 to i32*
  %v8_1224c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1224c, i32* %v7_1224c, align 4
  %v9_1224c = add i32 %v0_1222054, 28
  %v10_1224c = inttoptr i32 %v9_1224c to i32*
  %v11_1224c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_1224c, i32* %v10_1224c, align 4
  %v12_1224c = add i32 %v0_1222054, 32
  store i32 %v12_1224c, i32* %r3.global-to-local, align 4
  %v6_12250 = load i32, i32* %r2.global-to-local, align 4
  %v7_12250 = add i32 %v6_12250, -8
  store i32 %v7_12250, i32* %r2.global-to-local, align 4
  %v5_1221c = icmp slt i32 %v7_12250, 8
  br i1 %v5_1221c, label %dec_label_pc_12218.dec_label_pc_12258.loopexit_crit_edge, label %dec_label_pc_12218.dec_label_pc_12220_crit_edge

dec_label_pc_12218.dec_label_pc_12220_crit_edge:  ; preds = %dec_label_pc_12218
  %v2_12220.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12220 = inttoptr i32 %v12_1224c to i32*
  store i32 %v2_12220.pre, i32* %v1_12220, align 4
  %v3_12220 = add i32 %v0_1222054, 36
  %v4_12220 = inttoptr i32 %v3_12220 to i32*
  %v5_12220 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12220, i32* %v4_12220, align 4
  %v6_12220 = add i32 %v0_1222054, 40
  store i32 %v6_12220, i32* %r3.global-to-local, align 4
  %v0_12224 = load i32, i32* %r2.global-to-local, align 4
  %v1_12224 = add i32 %v0_12224, -8
  store i32 %v1_12224, i32* %r2.global-to-local, align 4
  %v5_1222c = icmp slt i32 %v1_12224, 8
  br i1 %v5_1222c, label %dec_label_pc_12220.dec_label_pc_12258.loopexit_crit_edge, label %dec_label_pc_12230

dec_label_pc_12220.dec_label_pc_12258.loopexit_crit_edge: ; preds = %dec_label_pc_12218.dec_label_pc_12220_crit_edge, %dec_label_pc_12220.preheader
  %v1_12224.lcssa = phi i32 [ %v1_1222452, %dec_label_pc_12220.preheader ], [ %v1_12224, %dec_label_pc_12218.dec_label_pc_12220_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12258

dec_label_pc_12218.dec_label_pc_12258.loopexit_crit_edge: ; preds = %dec_label_pc_12218
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12258

dec_label_pc_12230.dec_label_pc_12258.loopexit_crit_edge: ; preds = %dec_label_pc_12230
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12258

dec_label_pc_12240.dec_label_pc_12258.loopexit_crit_edge: ; preds = %dec_label_pc_12240
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12258

dec_label_pc_12258:                               ; preds = %dec_label_pc_12214, %dec_label_pc_12220.dec_label_pc_12258.loopexit_crit_edge, %dec_label_pc_12218.dec_label_pc_12258.loopexit_crit_edge, %dec_label_pc_12230.dec_label_pc_12258.loopexit_crit_edge, %dec_label_pc_12240.dec_label_pc_12258.loopexit_crit_edge, %dec_label_pc_121f0
  %v0_12260 = phi i32 [ %v0_121f4, %dec_label_pc_121f0 ], [ %v1_12244, %dec_label_pc_12240.dec_label_pc_12258.loopexit_crit_edge ], [ %v1_12234, %dec_label_pc_12230.dec_label_pc_12258.loopexit_crit_edge ], [ %v7_12250, %dec_label_pc_12218.dec_label_pc_12258.loopexit_crit_edge ], [ %v1_12224.lcssa, %dec_label_pc_12220.dec_label_pc_12258.loopexit_crit_edge ], [ %v0_12218.pr, %dec_label_pc_12214 ]
  %v2_12258 = icmp eq i32 %v0_12260, 0
  store i1 %v2_12258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12258, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_12258
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_12258
  %v1_12260 = sub i32 7, %v0_12260
  store i32 %v1_12260, i32* %r2.global-to-local, align 4
  %v3_12264 = mul i32 %v1_12260, 4
  %v4_12264 = add i32 %v3_12264, ptrtoint (i32* @global_var_1226c.729 to i32)
  call void @__pseudo_branch(i32 %v4_12264)
  %v0_1226c = load i32, i32* %r1.global-to-local, align 4
  %v1_1226c = trunc i32 %v0_1226c to i8
  %v2_1226c = load i32, i32* %r3.global-to-local, align 4
  %v3_1226c = inttoptr i32 %v2_1226c to i8*
  store i8 %v1_1226c, i8* %v3_1226c, align 1
  %v4_1226c = load i32, i32* %r3.global-to-local, align 4
  %v5_1226c = add i32 %v4_1226c, 1
  store i32 %v5_1226c, i32* %r3.global-to-local, align 4
  %v0_12270 = load i32, i32* %r1.global-to-local, align 4
  %v1_12270 = trunc i32 %v0_12270 to i8
  %v3_12270 = inttoptr i32 %v5_1226c to i8*
  store i8 %v1_12270, i8* %v3_12270, align 1
  %v4_12270 = load i32, i32* %r3.global-to-local, align 4
  %v5_12270 = add i32 %v4_12270, 1
  store i32 %v5_12270, i32* %r3.global-to-local, align 4
  %v0_12274 = load i32, i32* %r1.global-to-local, align 4
  %v1_12274 = trunc i32 %v0_12274 to i8
  %v3_12274 = inttoptr i32 %v5_12270 to i8*
  store i8 %v1_12274, i8* %v3_12274, align 1
  %v4_12274 = load i32, i32* %r3.global-to-local, align 4
  %v5_12274 = add i32 %v4_12274, 1
  store i32 %v5_12274, i32* %r3.global-to-local, align 4
  %v0_12278 = load i32, i32* %r1.global-to-local, align 4
  %v1_12278 = trunc i32 %v0_12278 to i8
  %v3_12278 = inttoptr i32 %v5_12274 to i8*
  store i8 %v1_12278, i8* %v3_12278, align 1
  %v4_12278 = load i32, i32* %r3.global-to-local, align 4
  %v5_12278 = add i32 %v4_12278, 1
  store i32 %v5_12278, i32* %r3.global-to-local, align 4
  %v0_1227c = load i32, i32* %r1.global-to-local, align 4
  %v1_1227c = trunc i32 %v0_1227c to i8
  %v3_1227c = inttoptr i32 %v5_12278 to i8*
  store i8 %v1_1227c, i8* %v3_1227c, align 1
  %v4_1227c = load i32, i32* %r3.global-to-local, align 4
  %v5_1227c = add i32 %v4_1227c, 1
  store i32 %v5_1227c, i32* %r3.global-to-local, align 4
  %v0_12280 = load i32, i32* %r1.global-to-local, align 4
  %v1_12280 = trunc i32 %v0_12280 to i8
  %v3_12280 = inttoptr i32 %v5_1227c to i8*
  store i8 %v1_12280, i8* %v3_12280, align 1
  %v4_12280 = load i32, i32* %r3.global-to-local, align 4
  %v5_12280 = add i32 %v4_12280, 1
  store i32 %v5_12280, i32* %r3.global-to-local, align 4
  %v0_12284 = load i32, i32* %r1.global-to-local, align 4
  %v1_12284 = trunc i32 %v0_12284 to i8
  %v3_12284 = inttoptr i32 %v5_12280 to i8*
  store i8 %v1_12284, i8* %v3_12284, align 1
  %v4_12284 = load i32, i32* %r3.global-to-local, align 4
  %v5_12284 = add i32 %v4_12284, 1
  store i32 %v5_12284, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_12220, { 1, 0 }
  uselistorder i32 %v12_1224c, { 1, 2, 0 }
  uselistorder i32 %v0_1222054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_12218.pr, { 0, 2, 1 }
  uselistorder i32 %v6_12208, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_121fc, { 1, 0 }
  uselistorder i32 %v0_121f4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 2, 10, 11, 12, 13, 1, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 5, 1, 0, 8, 7, 4, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_12258, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_12230, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_12290(i32 %arg1) local_unnamed_addr {
dec_label_pc_12290:
  %stack_var_-8 = alloca i32, align 4
  %v2_12294 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_12294, i32* @r1, align 4
  %v0_1229c = call i32 @function_13fc0()
  %v2_122a0 = icmp eq i32 %v0_1229c, 0
  br i1 %v2_122a0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_12290
  %v3_122a8 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_12290, %bb
  %v5_122b0 = phi i32 [ -1, %dec_label_pc_12290 ], [ %v3_122a8, %bb ]
  ret i32 %v5_122b0

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_122b4(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_122b4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122b4 = load i32, i32* @r4, align 4
  store i32 %v3_122b4, i32* %stack_var_-8, align 4
  %v5_122b8 = inttoptr i32 %arg3 to i32*
  %v6_122b8 = call i32 @accept(i32 %arg1, %sockaddr* %arg2, i32* %v5_122b8)
  store i32 %v6_122b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_122b8, -4095
  br i1 %tmp, label %dec_label_pc_122d8, label %dec_label_pc_122c8

dec_label_pc_122c8:                               ; preds = %dec_label_pc_122b4
  %v0_122c8 = call i32 @function_12190()
  %v0_122cc = load i32, i32* %r4.global-to-local, align 4
  %v1_122cc = sub i32 0, %v0_122cc
  %v2_122d0 = inttoptr i32 %v0_122c8 to i32*
  store i32 %v1_122cc, i32* %v2_122d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_122d8

dec_label_pc_122d8:                               ; preds = %dec_label_pc_122b4, %dec_label_pc_122c8
  %v0_122d8 = phi i32 [ %v6_122b8, %dec_label_pc_122b4 ], [ -1, %dec_label_pc_122c8 ]
  %v2_122dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_122dc, i32* @r4, align 4
  ret i32 %v0_122d8

; uselistorder directives
  uselistorder i32 %v6_122b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_122d8, { 1, 0 }
}

define i32 @function_122e0(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_122e0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122e0 = load i32, i32* @r4, align 4
  store i32 %v3_122e0, i32* %stack_var_-8, align 4
  %v5_122e4 = call i32 @bind(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_122e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_122e4, -4095
  br i1 %tmp, label %dec_label_pc_12304, label %dec_label_pc_122f4

dec_label_pc_122f4:                               ; preds = %dec_label_pc_122e0
  %v0_122f4 = call i32 @function_12190()
  %v0_122f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_122f8 = sub i32 0, %v0_122f8
  %v2_122fc = inttoptr i32 %v0_122f4 to i32*
  store i32 %v1_122f8, i32* %v2_122fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12304

dec_label_pc_12304:                               ; preds = %dec_label_pc_122e0, %dec_label_pc_122f4
  %v0_12304 = phi i32 [ %v5_122e4, %dec_label_pc_122e0 ], [ -1, %dec_label_pc_122f4 ]
  %v2_12308 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12308, i32* @r4, align 4
  ret i32 %v0_12304

; uselistorder directives
  uselistorder i32 %v5_122e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12304, { 1, 0 }
}

define i32 @function_1230c(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1230c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1230c = load i32, i32* @r4, align 4
  store i32 %v3_1230c, i32* %stack_var_-8, align 4
  %v5_12310 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_12310, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12310, -4095
  br i1 %tmp, label %dec_label_pc_12330, label %dec_label_pc_12320

dec_label_pc_12320:                               ; preds = %dec_label_pc_1230c
  %v0_12320 = call i32 @function_12190()
  %v0_12324 = load i32, i32* %r4.global-to-local, align 4
  %v1_12324 = sub i32 0, %v0_12324
  %v2_12328 = inttoptr i32 %v0_12320 to i32*
  store i32 %v1_12324, i32* %v2_12328, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12330

dec_label_pc_12330:                               ; preds = %dec_label_pc_1230c, %dec_label_pc_12320
  %v0_12330 = phi i32 [ %v5_12310, %dec_label_pc_1230c ], [ -1, %dec_label_pc_12320 ]
  %v2_12334 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12334, i32* @r4, align 4
  ret i32 %v0_12330

; uselistorder directives
  uselistorder i32 %v5_12310, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12330, { 1, 0 }
}

define i32 @function_12338(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12338:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12338 = load i32, i32* @r4, align 4
  store i32 %v3_12338, i32* %stack_var_-8, align 4
  %v5_1233c = inttoptr i32 %arg3 to i32*
  %v6_1233c = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_1233c)
  store i32 %v6_1233c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_1233c, -4095
  br i1 %tmp, label %dec_label_pc_1235c, label %dec_label_pc_1234c

dec_label_pc_1234c:                               ; preds = %dec_label_pc_12338
  %v0_1234c = call i32 @function_12190()
  %v0_12350 = load i32, i32* %r4.global-to-local, align 4
  %v1_12350 = sub i32 0, %v0_12350
  %v2_12354 = inttoptr i32 %v0_1234c to i32*
  store i32 %v1_12350, i32* %v2_12354, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1235c

dec_label_pc_1235c:                               ; preds = %dec_label_pc_12338, %dec_label_pc_1234c
  %v0_1235c = phi i32 [ %v6_1233c, %dec_label_pc_12338 ], [ -1, %dec_label_pc_1234c ]
  %v2_12360 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12360, i32* @r4, align 4
  ret i32 %v0_1235c

; uselistorder directives
  uselistorder i32 %v6_1233c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1235c, { 1, 0 }
}

define i32 @function_12364(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12364:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12364 = load i32, i32* @r4, align 4
  store i32 %v3_12364, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_1236c = call i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32* null)
  store i32 %v5_1236c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1236c, -4095
  br i1 %tmp, label %dec_label_pc_1238c, label %dec_label_pc_1237c

dec_label_pc_1237c:                               ; preds = %dec_label_pc_12364
  %v0_1237c = call i32 @function_12190()
  %v0_12380 = load i32, i32* %r4.global-to-local, align 4
  %v1_12380 = sub i32 0, %v0_12380
  %v2_12384 = inttoptr i32 %v0_1237c to i32*
  store i32 %v1_12380, i32* %v2_12384, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1238c

dec_label_pc_1238c:                               ; preds = %dec_label_pc_12364, %dec_label_pc_1237c
  %v0_1238c = phi i32 [ %v5_1236c, %dec_label_pc_12364 ], [ -1, %dec_label_pc_1237c ]
  %v2_12390 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12390, i32* @r4, align 4
  ret i32 %v0_1238c

; uselistorder directives
  uselistorder i32 %v5_1236c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1238c, { 1, 0 }
}

define i32 @function_12394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12394:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12394 = load i32, i32* @r4, align 4
  store i32 %v3_12394, i32* %stack_var_-8, align 4
  %v2_12398 = call i32 @listen(i32 %arg1, i32 %arg2)
  store i32 %v2_12398, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12398, -4095
  br i1 %tmp, label %dec_label_pc_123b8, label %dec_label_pc_123a8

dec_label_pc_123a8:                               ; preds = %dec_label_pc_12394
  %v0_123a8 = call i32 @function_12190()
  %v0_123ac = load i32, i32* %r4.global-to-local, align 4
  %v1_123ac = sub i32 0, %v0_123ac
  %v2_123b0 = inttoptr i32 %v0_123a8 to i32*
  store i32 %v1_123ac, i32* %v2_123b0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_123b8

dec_label_pc_123b8:                               ; preds = %dec_label_pc_12394, %dec_label_pc_123a8
  %v0_123b8 = phi i32 [ %v2_12398, %dec_label_pc_12394 ], [ -1, %dec_label_pc_123a8 ]
  %v2_123bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_123bc, i32* @r4, align 4
  ret i32 %v0_123b8

; uselistorder directives
  uselistorder i32 %v2_12398, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123b8, { 1, 0 }
}

define i32 @function_123c0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_123c0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123c0 = load i32, i32* @r4, align 4
  store i32 %v3_123c0, i32* %stack_var_-8, align 4
  %v5_123c4 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_123c4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_123c4, -4095
  br i1 %tmp, label %dec_label_pc_123e4, label %dec_label_pc_123d4

dec_label_pc_123d4:                               ; preds = %dec_label_pc_123c0
  %v0_123d4 = call i32 @function_12190()
  %v0_123d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_123d8 = sub i32 0, %v0_123d8
  %v2_123dc = inttoptr i32 %v0_123d4 to i32*
  store i32 %v1_123d8, i32* %v2_123dc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_123e4

dec_label_pc_123e4:                               ; preds = %dec_label_pc_123c0, %dec_label_pc_123d4
  %v0_123e4 = phi i32 [ %v5_123c4, %dec_label_pc_123c0 ], [ -1, %dec_label_pc_123d4 ]
  %v2_123e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_123e8, i32* @r4, align 4
  ret i32 %v0_123e4

; uselistorder directives
  uselistorder i32 %v5_123c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123e4, { 1, 0 }
}

define i32 @function_123ec(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_123ec:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_123ec = load i32, i32* @r4, align 4
  store i32 %v3_123ec, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_123f8 = call i32 @recvfrom(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32* null)
  store i32 %v5_123f8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_123f8, -4095
  br i1 %tmp, label %dec_label_pc_12418, label %dec_label_pc_12408

dec_label_pc_12408:                               ; preds = %dec_label_pc_123ec
  %v0_12408 = call i32 @function_12190()
  %v0_1240c = load i32, i32* %r4.global-to-local, align 4
  %v1_1240c = sub i32 0, %v0_1240c
  %v2_12410 = inttoptr i32 %v0_12408 to i32*
  store i32 %v1_1240c, i32* %v2_12410, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12418

dec_label_pc_12418:                               ; preds = %dec_label_pc_123ec, %dec_label_pc_12408
  %v0_12418 = phi i32 [ %v5_123f8, %dec_label_pc_123ec ], [ -1, %dec_label_pc_12408 ]
  %v2_1241c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1241c, i32* @r4, align 4
  ret i32 %v0_12418

; uselistorder directives
  uselistorder i32 %v5_123f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12418, { 1, 0 }
}

define i32 @function_12420(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12420:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12420 = load i32, i32* @r4, align 4
  store i32 %v3_12420, i32* %stack_var_-8, align 4
  %v5_12424 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12424, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12424, -4095
  br i1 %tmp, label %dec_label_pc_12444, label %dec_label_pc_12434

dec_label_pc_12434:                               ; preds = %dec_label_pc_12420
  %v0_12434 = call i32 @function_12190()
  %v0_12438 = load i32, i32* %r4.global-to-local, align 4
  %v1_12438 = sub i32 0, %v0_12438
  %v2_1243c = inttoptr i32 %v0_12434 to i32*
  store i32 %v1_12438, i32* %v2_1243c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12444

dec_label_pc_12444:                               ; preds = %dec_label_pc_12420, %dec_label_pc_12434
  %v0_12444 = phi i32 [ %v5_12424, %dec_label_pc_12420 ], [ -1, %dec_label_pc_12434 ]
  %v2_12448 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12448, i32* @r4, align 4
  ret i32 %v0_12444

; uselistorder directives
  uselistorder i32 %v5_12424, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12444, { 1, 0 }
}

define i32 @function_1244c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1244c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1244c = load i32, i32* @r4, align 4
  store i32 %v3_1244c, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_12458 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_12458, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12458, -4095
  br i1 %tmp, label %dec_label_pc_12478, label %dec_label_pc_12468

dec_label_pc_12468:                               ; preds = %dec_label_pc_1244c
  %v0_12468 = call i32 @function_12190()
  %v0_1246c = load i32, i32* %r4.global-to-local, align 4
  %v1_1246c = sub i32 0, %v0_1246c
  %v2_12470 = inttoptr i32 %v0_12468 to i32*
  store i32 %v1_1246c, i32* %v2_12470, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12478

dec_label_pc_12478:                               ; preds = %dec_label_pc_1244c, %dec_label_pc_12468
  %v0_12478 = phi i32 [ %v5_12458, %dec_label_pc_1244c ], [ -1, %dec_label_pc_12468 ]
  %v2_1247c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1247c, i32* @r4, align 4
  ret i32 %v0_12478

; uselistorder directives
  uselistorder i32 %v5_12458, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12478, { 1, 0 }
}

define i32 @function_12480(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12480:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12480 = load i32, i32* @r4, align 4
  store i32 %v3_12480, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_12488 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_12488, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12488, -4095
  br i1 %tmp, label %dec_label_pc_124a8, label %dec_label_pc_12498

dec_label_pc_12498:                               ; preds = %dec_label_pc_12480
  %v0_12498 = call i32 @function_12190()
  %v0_1249c = load i32, i32* %r4.global-to-local, align 4
  %v1_1249c = sub i32 0, %v0_1249c
  %v2_124a0 = inttoptr i32 %v0_12498 to i32*
  store i32 %v1_1249c, i32* %v2_124a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_124a8

dec_label_pc_124a8:                               ; preds = %dec_label_pc_12480, %dec_label_pc_12498
  %v0_124a8 = phi i32 [ %v5_12488, %dec_label_pc_12480 ], [ -1, %dec_label_pc_12498 ]
  %v2_124ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_124ac, i32* @r4, align 4
  ret i32 %v0_124a8

; uselistorder directives
  uselistorder i32 %v5_12488, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124a8, { 1, 0 }
}

define i32 @function_124b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_124b0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_124b0 = load i32, i32* @r4, align 4
  store i32 %v3_124b0, i32* %stack_var_-8, align 4
  %v3_124b4 = call i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_124b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_124b4, -4095
  br i1 %tmp, label %dec_label_pc_124d4, label %dec_label_pc_124c4

dec_label_pc_124c4:                               ; preds = %dec_label_pc_124b0
  %v0_124c4 = call i32 @function_12190()
  %v0_124c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_124c8 = sub i32 0, %v0_124c8
  %v2_124cc = inttoptr i32 %v0_124c4 to i32*
  store i32 %v1_124c8, i32* %v2_124cc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_124d4

dec_label_pc_124d4:                               ; preds = %dec_label_pc_124b0, %dec_label_pc_124c4
  %v0_124d4 = phi i32 [ %v3_124b4, %dec_label_pc_124b0 ], [ -1, %dec_label_pc_124c4 ]
  %v2_124d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_124d8, i32* @r4, align 4
  ret i32 %v0_124d4

; uselistorder directives
  uselistorder i32 %v3_124b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124d4, { 1, 0 }
}

define i32 @function_124dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_124dc:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_124dc = load i32, i32* @r4, align 4
  %v6_124dc = load i32, i32* @r5, align 4
  %v9_124dc = load i32, i32* @r6, align 4
  %v0_124e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_124e0 = icmp eq i32 %v0_124e0, 0
  %v2_124e4 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_124e0, label %bb, label %dec_label_pc_124f0

bb:                                               ; preds = %dec_label_pc_124dc
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_124f8

dec_label_pc_124f0:                               ; preds = %dec_label_pc_124dc
  %tmp = icmp ugt i32 %v0_124e0, -8
  br i1 %tmp, label %dec_label_pc_125fc, label %dec_label_pc_124f8

dec_label_pc_124f8:                               ; preds = %bb, %dec_label_pc_124f0
  %v0_124f8 = phi i32 [ %v0_124e0, %dec_label_pc_124f0 ], [ 1, %bb ]
  %v1_124f8 = add i32 %v0_124f8, 4
  store i32 %v1_124f8, i32* %stack_var_-20, align 4
  store i32 %v2_124e4, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1d214.731 to i32), i32* %r0.global-to-local, align 4
  %v1_12510 = call i32 @function_12ec4()
  store i32 ptrtoint (i32** @global_var_1d034.735 to i32), i32* %r0.global-to-local, align 4
  %v3_1251c = call i32 @function_12890(i32* bitcast (i32** @global_var_1d034.735 to i32*), i32 %v2_124e4)
  store i32 %v3_1251c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d214.731 to i32), i32* %r0.global-to-local, align 4
  store i32 75060, i32* @lr, align 4
  %v1_12530 = call i32 @function_12ec4()
  store i32 %v1_12530, i32* %r0.global-to-local, align 4
  %v2_12534 = icmp eq i32 %v3_1251c, 0
  br i1 %v2_12534, label %dec_label_pc_1253c, label %dec_label_pc_125ec

dec_label_pc_1253c:                               ; preds = %dec_label_pc_124f8
  %v2_12540 = load i32, i32* @global_var_1d23c.738, align 4
  store i32 %v2_12540, i32* @r4, align 4
  %v2_12544 = load i32, i32* %stack_var_-20, align 4
  %v3_12548 = icmp ult i32 %v2_12544, %v2_12540
  br i1 %v3_12548, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_1253c
  %v3_1254c = add i32 %v2_12540, -1
  %v2_12550 = add i32 %v3_1254c, %v2_12544
  %v2_12554 = sub i32 0, %v2_12540
  %v3_12558 = and i32 %v2_12550, %v2_12554
  store i32 %v3_12558, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1253c, %bb14
  store i32 ptrtoint (i32* @global_var_1d2f8.740 to i32), i32* %r0.global-to-local, align 4
  %v1_12564 = call i32 @function_12ec4()
  %v0_12568 = load i32, i32* @r4, align 4
  store i32 %v0_12568, i32* %r0.global-to-local, align 4
  %v1_1256c = call i32 @function_13678(i32 %v0_12568)
  store i32 %v1_1256c, i32* %r0.global-to-local, align 4
  %v7_12570 = icmp eq i32 %v1_1256c, -1
  br i1 %v7_12570, label %bb15, label %dec_label_pc_1257c

bb15:                                             ; preds = %.thread3
  store i32 %v1_1256c, i32* @r5, align 4
  br label %dec_label_pc_12590

dec_label_pc_1257c:                               ; preds = %.thread3
  %v1_1257c = add i32 %v1_1256c, 3
  %v1_12580 = and i32 %v1_1257c, -4
  store i32 %v1_12580, i32* @r5, align 4
  %v9_12584 = icmp eq i32 %v1_12580, %v1_1256c
  br i1 %v9_12584, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_1257c
  %v3_12588 = sub i32 %v1_12580, %v1_1256c
  store i32 %v3_12588, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1257c, %bb16
  %v1_1258c = xor i1 %v9_12584, true
  call void @__pseudo_cond_branch(i1 %v1_1258c, i32 ptrtoint (i32* @global_var_13678.741 to i32))
  br label %dec_label_pc_12590

dec_label_pc_12590:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_1d2f8.740 to i32), i32* %r0.global-to-local, align 4
  store i32 75168, i32* @lr, align 4
  %v1_1259c = call i32 @function_12ec4()
  store i32 %v1_1259c, i32* %r0.global-to-local, align 4
  %v0_125a0 = load i32, i32* @r5, align 4
  %v7_125a0 = icmp eq i32 %v0_125a0, -1
  br i1 %v7_125a0, label %dec_label_pc_125fc, label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %dec_label_pc_12590
  store i32 ptrtoint (i32* @global_var_1d214.731 to i32), i32* %r0.global-to-local, align 4
  %v1_125b4 = call i32 @function_12ec4()
  %v0_125b8 = load i32, i32* @r4, align 4
  %v0_125bc = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1d034.735 to i32), i32* %r0.global-to-local, align 4
  %v4_125c4 = call i32 @function_129e4(i32* bitcast (i32** @global_var_1d034.735 to i32*), i32 %v0_125bc, i32 %v0_125b8)
  store i32 ptrtoint (i32** @global_var_1d034.735 to i32), i32* %r0.global-to-local, align 4
  %v3_125d0 = call i32 @function_12890(i32* bitcast (i32** @global_var_1d034.735 to i32*), i32 %v2_124e4)
  store i32 %v3_125d0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d214.731 to i32), i32* %r0.global-to-local, align 4
  store i32 75236, i32* @lr, align 4
  %v1_125e0 = call i32 @function_12ec4()
  store i32 %v1_125e0, i32* %r0.global-to-local, align 4
  %v2_125e4 = icmp eq i32 %v3_125d0, 0
  br i1 %v2_125e4, label %dec_label_pc_125fc, label %dec_label_pc_125ec

dec_label_pc_125ec:                               ; preds = %dec_label_pc_124f8, %dec_label_pc_125a8
  %v1_125f0 = phi i32 [ %v3_1251c, %dec_label_pc_124f8 ], [ %v3_125d0, %dec_label_pc_125a8 ]
  %v2_125ec = load i32, i32* %stack_var_-20, align 4
  %v2_125f0 = inttoptr i32 %v1_125f0 to i32*
  store i32 %v2_125ec, i32* %v2_125f0, align 4
  %v3_125f0 = load i32, i32* %r4.global-to-local, align 4
  %v4_125f0 = add i32 %v3_125f0, 4
  store i32 %v4_125f0, i32* %r4.global-to-local, align 4
  %v2_125f4 = icmp eq i32 %v4_125f0, 0
  br i1 %v2_125f4, label %dec_label_pc_125fc, label %dec_label_pc_1260c

dec_label_pc_125fc:                               ; preds = %dec_label_pc_125ec, %dec_label_pc_125a8, %dec_label_pc_12590, %dec_label_pc_124f0
  %v0_125fc = call i32 @function_12190()
  store i32 %v0_125fc, i32* %r0.global-to-local, align 4
  %v2_12604 = inttoptr i32 %v0_125fc to i32*
  store i32 12, i32* %v2_12604, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1260c

dec_label_pc_1260c:                               ; preds = %dec_label_pc_125ec, %dec_label_pc_125fc
  %v0_1260c = phi i32 [ %v4_125f0, %dec_label_pc_125ec ], [ 0, %dec_label_pc_125fc ]
  store i32 %v0_1260c, i32* %r0.global-to-local, align 4
  store i32 %v3_124dc, i32* @r4, align 4
  store i32 %v6_124dc, i32* @r5, align 4
  store i32 %v9_124dc, i32* @r6, align 4
  ret i32 %v0_1260c

; uselistorder directives
  uselistorder i32 %v0_1260c, { 1, 0 }
  uselistorder i32 %v3_125d0, { 1, 0, 2 }
  uselistorder i32 %v1_12580, { 1, 0, 2 }
  uselistorder i32 %v1_1256c, { 2, 0, 4, 3, 1, 5 }
  uselistorder i32 %v3_1251c, { 1, 0, 2 }
  uselistorder i32 %v0_124e0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 7, 8, 9, 10, 12, 11, 2, 14, 13, 15, 16, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_1260c, { 1, 0 }
  uselistorder label %dec_label_pc_125ec, { 1, 0 }
  uselistorder label %dec_label_pc_12590, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_124f8, { 1, 0 }
}

define i32 @function_12630(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12630:
  %stack_var_-12 = alloca i32, align 4
  %v3_12630 = load i32, i32* @r4, align 4
  store i32 %v3_12630, i32* %stack_var_-12, align 4
  %v6_12630 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_12638 = mul i32 %arg2, %arg1
  store i32 %v2_12638, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_1263c = icmp eq i32 %arg1, 0
  store i32 %v2_12638, i32* @r0, align 4
  br i1 %v2_1263c, label %dec_label_pc_12668, label %dec_label_pc_12648

dec_label_pc_12648:                               ; preds = %dec_label_pc_12630
  %v0_12648 = call i32 @function_118e0()
  %v0_1264c = load i32, i32* @r5, align 4
  %v9_1264c = icmp eq i32 %v0_1264c, %v0_12648
  store i32 0, i32* @r5, align 4
  br i1 %v9_1264c, label %dec_label_pc_12648.dec_label_pc_12668_crit_edge, label %dec_label_pc_12658

dec_label_pc_12648.dec_label_pc_12668_crit_edge:  ; preds = %dec_label_pc_12648
  %v0_12668.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12668

dec_label_pc_12658:                               ; preds = %dec_label_pc_12648
  %v0_12658 = call i32 @function_12190()
  %v2_12660 = inttoptr i32 %v0_12658 to i32*
  store i32 12, i32* %v2_12660, align 4
  br label %dec_label_pc_12680

dec_label_pc_12668:                               ; preds = %dec_label_pc_12648.dec_label_pc_12668_crit_edge, %dec_label_pc_12630
  %v0_12668 = phi i32 [ %v0_12668.pre, %dec_label_pc_12648.dec_label_pc_12668_crit_edge ], [ %v2_12638, %dec_label_pc_12630 ]
  %v1_1266c = call i32 @function_124dc(i32 %v0_12668)
  store i32 %v1_1266c, i32* @r5, align 4
  store i32 75392, i32* @lr, align 4
  %v1_1267c = icmp ne i32 %v1_1266c, 0
  call void @__pseudo_cond_branch(i1 %v1_1267c, i32 ptrtoint (i32* @global_var_121f0.742 to i32))
  br label %dec_label_pc_12680

dec_label_pc_12680:                               ; preds = %dec_label_pc_12658, %dec_label_pc_12668
  %v0_12680 = load i32, i32* @r5, align 4
  %v2_12684 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12684, i32* @r4, align 4
  store i32 %v6_12630, i32* @r5, align 4
  ret i32 %v0_12680

; uselistorder directives
  uselistorder i32 ()* @function_118e0, { 1, 3, 2, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12680, { 1, 0 }
}

define i32 @function_12688() local_unnamed_addr {
dec_label_pc_12688:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_12688 = load i32, i32* @r0, align 4
  %v2_12688 = icmp eq i32 %v0_12688, 0
  %v3_1268c = load i32, i32* @r4, align 4
  store i32 %v3_1268c, i32* %stack_var_-24, align 4
  %v6_1268c = load i32, i32* @r5, align 4
  %v9_1268c = load i32, i32* @r6, align 4
  %v15_1268c = load i32, i32* @r8, align 4
  br i1 %v2_12688, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_12688
  ret i32 0

bb11:                                             ; preds = %dec_label_pc_12688
  %v1_12694 = add i32 %v0_12688, -4
  %v2_12694 = inttoptr i32 %v1_12694 to i32*
  %v3_12694 = load i32, i32* %v2_12694, align 4
  store i32 %v3_12694, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1d034.735 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_12694, i32* @r4, align 4
  %v1_126ac = call i32 @function_12ec4()
  %v0_126b0 = load i32, i32* @r4, align 4
  %v0_126b4 = load i32, i32* @r5, align 4
  %v4_126bc = call i32 @function_129e4(i32* bitcast (i32** @global_var_1d034.735 to i32*), i32 %v0_126b0, i32 %v0_126b4)
  %v1_126c4 = inttoptr i32 %v4_126bc to i32*
  %v2_126c4 = load i32, i32* %v1_126c4, align 4
  store i32 %v2_126c4, i32* %r6.global-to-local, align 4
  %v2_126c8 = load i32, i32* @global_var_1d23c.738, align 4
  %v4_126cc = mul i32 %v2_126c8, 8
  %v6_126cc = icmp ult i32 %v2_126c4, %v4_126cc
  store i32 %v4_126bc, i32* @r4, align 4
  br i1 %v6_126cc, label %dec_label_pc_1270c, label %dec_label_pc_126d8

dec_label_pc_126d8:                               ; preds = %bb11
  %v1_126e0 = call i32 @function_12ec4()
  %v1_126e8 = call i32 @function_13678(i32 0)
  %v0_126ec = load i32, i32* @r4, align 4
  %v1_126ec = add i32 %v0_126ec, 12
  store i32 %v1_126ec, i32* @r5, align 4
  %v9_126f0 = icmp eq i32 %v1_126ec, %v1_126e8
  br i1 %v9_126f0, label %dec_label_pc_12714, label %dec_label_pc_126f8

dec_label_pc_126f8:                               ; preds = %dec_label_pc_126d8
  %v1_12704 = call i32 @function_12ec4()
  br label %dec_label_pc_1270c

dec_label_pc_1270c:                               ; preds = %bb11, %dec_label_pc_126f8, %bb14
  %v2_1270c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1270c, i32* @r4, align 4
  store i32 %v6_1268c, i32* @r5, align 4
  store i32 %v9_1268c, i32* %r6.global-to-local, align 4
  store i32 %v15_1268c, i32* %r8.global-to-local, align 4
  %v0_12710 = call i32 @function_12ec4()
  %v0_12714.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12714

dec_label_pc_12714:                               ; preds = %dec_label_pc_126d8, %dec_label_pc_1270c
  %v1_1271c = phi i32 [ %v0_126ec, %dec_label_pc_126d8 ], [ %v0_12714.pre, %dec_label_pc_1270c ]
  %v1_12714 = add i32 %v1_1271c, 4
  %v2_12714 = inttoptr i32 %v1_12714 to i32*
  %v3_12714 = load i32, i32* %v2_12714, align 4
  %v2_12718 = icmp eq i32 %v3_12714, 0
  br i1 %v2_12718, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_12714
  %v2_1271c = add i32 %v1_1271c, 8
  %v3_1271c = inttoptr i32 %v2_1271c to i32*
  %v4_1271c = load i32, i32* %v3_1271c, align 4
  %v3_12720 = add i32 %v3_12714, 8
  %v4_12720 = inttoptr i32 %v3_12720 to i32*
  store i32 %v4_1271c, i32* %v4_12720, align 4
  %v0_12724.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12714, %bb12
  %v0_12724 = phi i32 [ %v1_1271c, %dec_label_pc_12714 ], [ %v0_12724.pre, %bb12 ]
  %v1_12724 = add i32 %v0_12724, 8
  %v2_12724 = inttoptr i32 %v1_12724 to i32*
  %v3_12724 = load i32, i32* %v2_12724, align 4
  %v1_12728 = add i32 %v0_12724, 4
  %v2_12728 = inttoptr i32 %v1_12728 to i32*
  %v3_12728 = load i32, i32* %v2_12728, align 4
  %v2_1272c = icmp eq i32 %v3_12724, 0
  br i1 %v2_1272c, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_12730 = add i32 %v3_12724, 4
  %v4_12730 = inttoptr i32 %v3_12730 to i32*
  store i32 %v3_12728, i32* %v4_12730, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_12734 = load i32, i32* %r8.global-to-local, align 4
  %v3_12734 = inttoptr i32 %v2_12734 to i32*
  store i32 %v3_12728, i32* %v3_12734, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_12744 = call i32 @function_12ec4()
  %v0_12748 = load i32, i32* %r6.global-to-local, align 4
  %v1_12748 = load i32, i32* @r4, align 4
  %v0_12750 = load i32, i32* @r5, align 4
  %v2_12748 = sub i32 12, %v0_12748
  %v1_1274c = add i32 %v2_12748, %v1_12748
  %v2_12750 = sub i32 %v1_1274c, %v0_12750
  %v1_12754 = call i32 @function_13678(i32 %v2_12750)
  br label %dec_label_pc_1270c

; uselistorder directives
  uselistorder i32 %v0_12724, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_13678, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_12714, { 1, 0 }
  uselistorder label %dec_label_pc_1270c, { 2, 1, 0 }
}

define i32 @function_12778(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12778:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12778 = load i32, i32* @r4, align 4
  store i32 %v3_12778, i32* %stack_var_-24, align 4
  %v6_12778 = load i32, i32* @r5, align 4
  %v9_12778 = load i32, i32* @r6, align 4
  %v12_12778 = load i32, i32* @r7, align 4
  %v15_12778 = load i32, i32* @r8, align 4
  %v18_12778 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_1277c = icmp eq i32 %arg2, 0
  %v0_12780 = load i32, i32* @r0, align 4
  store i32 %v0_12780, i32* @r7, align 4
  br i1 %v2_1277c, label %dec_label_pc_12788, label %dec_label_pc_12790

dec_label_pc_12788:                               ; preds = %dec_label_pc_12778
  %v0_12788 = call i32 @function_12688()
  %v0_12798.pre = load i32, i32* @r4, align 4
  %v2_1279c.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_12798

dec_label_pc_12790:                               ; preds = %dec_label_pc_12778
  %v2_12790 = icmp eq i32 %v0_12780, 0
  br i1 %v2_12790, label %dec_label_pc_12798, label %dec_label_pc_127a4

dec_label_pc_12798:                               ; preds = %dec_label_pc_12790, %dec_label_pc_12788
  %v2_1279c = phi i32 [ %v3_12778, %dec_label_pc_12790 ], [ %v2_1279c.pre, %dec_label_pc_12788 ]
  %v0_12798 = phi i32 [ %arg2, %dec_label_pc_12790 ], [ %v0_12798.pre, %dec_label_pc_12788 ]
  store i32 %v2_1279c, i32* @r4, align 4
  store i32 %v6_12778, i32* @r5, align 4
  store i32 %v9_12778, i32* @r6, align 4
  store i32 %v12_12778, i32* @r7, align 4
  store i32 %v18_12778, i32* @lr, align 4
  %v1_127a0 = call i32 @function_124dc(i32 %v0_12798)
  %v0_127a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_127a4

dec_label_pc_127a4:                               ; preds = %dec_label_pc_12790, %dec_label_pc_12798
  %v0_127bc = phi i32 [ %v0_12780, %dec_label_pc_12790 ], [ %v1_127a0, %dec_label_pc_12798 ]
  %v0_127a4 = phi i32 [ %arg2, %dec_label_pc_12790 ], [ %v0_127a4.pre, %dec_label_pc_12798 ]
  %v1_127a4 = add i32 %v0_127a4, 7
  %v1_127a8 = and i32 %v1_127a4, -4
  store i32 %v1_127a8, i32* @r5, align 4
  %v2_127ac = icmp ugt i32 %v1_127a8, 10
  %v1_127b0 = add i32 %v0_127bc, -4
  %v2_127b0 = inttoptr i32 %v1_127b0 to i32*
  %v3_127b0 = load i32, i32* %v2_127b0, align 4
  store i32 %v3_127b0, i32* @r6, align 4
  br i1 %v2_127ac, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_127a4
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_127a4, %bb
  %v0_12838 = phi i32 [ %v1_127a8, %dec_label_pc_127a4 ], [ 12, %bb ]
  store i32 %v1_127b0, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_12838, %v3_127b0
  br i1 %tmp, label %dec_label_pc_127c4, label %dec_label_pc_12838

dec_label_pc_127c4:                               ; preds = %bb14
  %v2_127b8 = sub i32 %v0_12838, %v3_127b0
  %v1_127d4 = call i32 @function_12ec4()
  %v0_127dc = load i32, i32* @r8, align 4
  %v1_127dc = load i32, i32* @r6, align 4
  %v2_127dc = add i32 %v1_127dc, %v0_127dc
  %v4_127e4 = call i32 @function_12924(i32* bitcast (i32** @global_var_1d034.735 to i32*), i32 %v2_127dc, i32 %v2_127b8)
  store i32 %v4_127e4, i32* @r4, align 4
  store i32 75772, i32* @lr, align 4
  %v1_127f8 = call i32 @function_12ec4()
  %v0_127fc = load i32, i32* @r4, align 4
  %v2_127fc = icmp eq i32 %v0_127fc, 0
  br i1 %v2_127fc, label %dec_label_pc_1280c, label %.thread

.thread:                                          ; preds = %dec_label_pc_127c4
  %v1_12800 = load i32, i32* @r6, align 4
  %v3_12800 = add i32 %v1_12800, %v0_127fc
  %v2_12804 = load i32, i32* @r7, align 4
  %v3_12804 = add i32 %v2_12804, -4
  %v4_12804 = inttoptr i32 %v3_12804 to i32*
  store i32 %v3_12800, i32* %v4_12804, align 4
  br label %dec_label_pc_12878

dec_label_pc_1280c:                               ; preds = %dec_label_pc_127c4
  %v0_1280c = load i32, i32* @r5, align 4
  %v1_1280c = add i32 %v0_1280c, -4
  %v1_12810 = call i32 @function_124dc(i32 %v1_1280c)
  store i32 %v1_12810, i32* @r0, align 4
  store i32 %v1_12810, i32* @r4, align 4
  %v2_12814 = icmp eq i32 %v1_12810, 0
  br i1 %v2_12814, label %dec_label_pc_12830, label %dec_label_pc_1281c

dec_label_pc_1281c:                               ; preds = %dec_label_pc_1280c
  %v0_1281c = load i32, i32* @r6, align 4
  %v1_1281c = add i32 %v0_1281c, -4
  store i32 %v1_1281c, i32* @r2, align 4
  %v0_12820 = load i32, i32* @r7, align 4
  store i32 %v0_12820, i32* @r1, align 4
  %v3_12824 = call i32 @function_121d0(i32 %v1_12810, i32 %v0_12820, i32 %v1_1281c)
  %v0_12828 = load i32, i32* @r7, align 4
  store i32 %v0_12828, i32* @r0, align 4
  %v0_1282c = call i32 @function_12688()
  %v0_12830.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12830

dec_label_pc_12830:                               ; preds = %dec_label_pc_1280c, %dec_label_pc_1281c
  %v0_12830 = phi i32 [ 0, %dec_label_pc_1280c ], [ %v0_12830.pre, %dec_label_pc_1281c ]
  store i32 %v0_12830, i32* @r7, align 4
  br label %dec_label_pc_12878

dec_label_pc_12838:                               ; preds = %bb14
  %v1_12838 = add i32 %v0_12838, 28
  %tmp15 = icmp ugt i32 %v1_12838, %v3_127b0
  br i1 %tmp15, label %dec_label_pc_12878, label %dec_label_pc_12844

dec_label_pc_12844:                               ; preds = %dec_label_pc_12838
  %v1_12850 = call i32 @function_12ec4()
  %v0_12854 = load i32, i32* @r8, align 4
  %v1_12854 = load i32, i32* @r5, align 4
  %v2_12854 = add i32 %v1_12854, %v0_12854
  %v1_12858 = load i32, i32* @r6, align 4
  %v2_12858 = sub i32 %v1_12858, %v1_12854
  %v4_12860 = call i32 @function_129e4(i32* bitcast (i32** @global_var_1d034.735 to i32*), i32 %v2_12854, i32 %v2_12858)
  store i32 75892, i32* @lr, align 4
  %v1_12870 = call i32 @function_12ec4()
  %v0_12874 = load i32, i32* @r5, align 4
  %v1_12874 = load i32, i32* @r7, align 4
  %v2_12874 = add i32 %v1_12874, -4
  %v3_12874 = inttoptr i32 %v2_12874 to i32*
  store i32 %v0_12874, i32* %v3_12874, align 4
  br label %dec_label_pc_12878

dec_label_pc_12878:                               ; preds = %.thread, %dec_label_pc_12838, %dec_label_pc_12830, %dec_label_pc_12844
  %v0_12878 = load i32, i32* @r7, align 4
  %v2_1287c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1287c, i32* @r4, align 4
  store i32 %v6_12778, i32* @r5, align 4
  store i32 %v9_12778, i32* @r6, align 4
  store i32 %v12_12778, i32* @r7, align 4
  store i32 %v15_12778, i32* @r8, align 4
  ret i32 %v0_12878

; uselistorder directives
  uselistorder i32 %v1_12854, { 1, 0 }
  uselistorder i32 %v0_12838, { 1, 2, 0 }
  uselistorder i32 %v3_127b0, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32** @global_var_1d034.735, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1d034.735 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32)* @function_124dc, { 4, 31, 0, 5, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 3, 2, 6, 1 }
  uselistorder i32 ()* @function_12688, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32* @r7, { 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 92, 93, 6, 14, 7, 2, 5, 21, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 94, 102, 103, 95, 96, 97, 98, 99, 100, 101, 24, 25, 3, 26, 27, 28, 29, 30, 31, 32, 33, 49, 0, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1, 4, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 215, 211, 212, 213, 214, 216, 217, 218, 219, 51, 52, 53, 206 }
  uselistorder label %dec_label_pc_12878, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_12830, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_127a4, { 1, 0 }
}

define i32 @function_12890(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12890:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_12890 = inttoptr i32 %arg2 to i32*
  %v2_12890 = load i32, i32* %v1_12890, align 4
  %v3_12894 = load i32, i32* @r4, align 4
  store i32 %v3_12894, i32* %stack_var_-8, align 4
  %v1_12898 = add i32 %v2_12890, 3
  %v1_1289c = and i32 %v1_12898, -4
  store i32 %v1_1289c, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_128a4 = icmp ugt i32 %v1_1289c, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_128ac = load i32, i32* %arg1, align 4
  store i32 %v2_128ac, i32* %r0.global-to-local, align 4
  br i1 %v2_128a4, label %dec_label_pc_12918.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_12890
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12918.preheader

dec_label_pc_12918.preheader:                     ; preds = %dec_label_pc_12890, %bb
  %v1_128cc = phi i32 [ %v1_1289c, %dec_label_pc_12890 ], [ 12, %bb ]
  %v2_129189 = icmp eq i32 %v2_128ac, 0
  br i1 %v2_129189, label %dec_label_pc_12920, label %dec_label_pc_128b8

dec_label_pc_128b8:                               ; preds = %dec_label_pc_12918.preheader, %dec_label_pc_12914
  %v2_128d0 = phi i32 [ %v3_12914, %dec_label_pc_12914 ], [ %v2_128ac, %dec_label_pc_12918.preheader ]
  %v1_128b8 = inttoptr i32 %v2_128d0 to i32*
  %v2_128b8 = load i32, i32* %v1_128b8, align 4
  store i32 %v2_128b8, i32* %ip.global-to-local, align 4
  %v3_128bc = icmp ult i32 %v2_128b8, %v1_128cc
  br i1 %v3_128bc, label %dec_label_pc_12914, label %dec_label_pc_128c4

dec_label_pc_128c4:                               ; preds = %dec_label_pc_128b8
  %v1_128c4 = add i32 %v1_128cc, 44
  %v3_128c8 = icmp ult i32 %v2_128b8, %v1_128c4
  br i1 %v3_128c8, label %dec_label_pc_128d8, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_128c4
  %v2_128bc.le = sub i32 %v2_128b8, %v1_128cc
  store i32 %v2_128bc.le, i32* %v1_128b8, align 4
  %v0_12904.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1290c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_128d8:                               ; preds = %dec_label_pc_128c4
  %v1_128d8 = add i32 %v2_128d0, 4
  %v2_128d8 = inttoptr i32 %v1_128d8 to i32*
  %v3_128d8 = load i32, i32* %v2_128d8, align 4
  store i32 %v3_128d8, i32* %r2.global-to-local, align 4
  %v2_128dc = icmp eq i32 %v3_128d8, 0
  br i1 %v2_128dc, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_128d8
  %v2_128e0 = add i32 %v2_128d0, 8
  %v3_128e0 = inttoptr i32 %v2_128e0 to i32*
  %v4_128e0 = load i32, i32* %v3_128e0, align 4
  %v3_128e4 = add i32 %v3_128d8, 8
  %v4_128e4 = inttoptr i32 %v3_128e4 to i32*
  store i32 %v4_128e0, i32* %v4_128e4, align 4
  %v0_128e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_128d8, %bb27
  %v0_128e8 = phi i32 [ %v2_128d0, %dec_label_pc_128d8 ], [ %v0_128e8.pre, %bb27 ]
  %v1_128e8 = add i32 %v0_128e8, 8
  %v2_128e8 = inttoptr i32 %v1_128e8 to i32*
  %v3_128e8 = load i32, i32* %v2_128e8, align 4
  %v1_128ec = add i32 %v0_128e8, 4
  %v2_128ec = inttoptr i32 %v1_128ec to i32*
  %v3_128ec = load i32, i32* %v2_128ec, align 4
  %v2_128f0 = icmp eq i32 %v3_128e8, 0
  br i1 %v2_128f0, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_128f4 = add i32 %v3_128e8, 4
  %v4_128f4 = inttoptr i32 %v3_128f4 to i32*
  store i32 %v3_128ec, i32* %v4_128f4, align 4
  %v1_128fc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_128fc, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_128f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_128f8 = inttoptr i32 %v2_128f8 to i32*
  store i32 %v3_128ec, i32* %v3_128f8, align 4
  %v1_12900.pre = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_12900.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_1290c = phi i32 [ %v0_1290c.pre, %.thread._crit_edge ], [ %v1_128fc, %bb28 ], [ %v1_12900.pre, %.thread5 ]
  %v0_12904 = phi i32 [ %v0_12904.pre, %.thread._crit_edge ], [ %v1_128fc, %bb28 ], [ %v1_12900.pre, %.thread5 ]
  %v1_12904 = load i32, i32* %r0.global-to-local, align 4
  %v2_12904 = sub i32 %v1_12904, %v0_12904
  %v1_12908 = add i32 %v2_12904, 12
  store i32 %v1_12908, i32* %r0.global-to-local, align 4
  %v1_1290c = load i32, i32* %r4.global-to-local, align 4
  %v2_1290c = inttoptr i32 %v1_1290c to i32*
  store i32 %v0_1290c, i32* %v2_1290c, align 4
  %v2_12910 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12910, i32* %r4.global-to-local, align 4
  ret i32 %v1_12908

dec_label_pc_12914:                               ; preds = %dec_label_pc_128b8
  %v1_12914 = add i32 %v2_128d0, 4
  %v2_12914 = inttoptr i32 %v1_12914 to i32*
  %v3_12914 = load i32, i32* %v2_12914, align 4
  store i32 %v3_12914, i32* %r0.global-to-local, align 4
  %v2_12918 = icmp eq i32 %v3_12914, 0
  br i1 %v2_12918, label %dec_label_pc_12918.dec_label_pc_12920_crit_edge, label %dec_label_pc_128b8

dec_label_pc_12918.dec_label_pc_12920_crit_edge:  ; preds = %dec_label_pc_12914
  br label %dec_label_pc_12920

dec_label_pc_12920:                               ; preds = %dec_label_pc_12918.dec_label_pc_12920_crit_edge, %dec_label_pc_12918.preheader
  store i32 %v3_12894, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_12914, { 1, 2, 0 }
  uselistorder i32 %v0_128e8, { 1, 0 }
  uselistorder i32 %v2_128b8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_128d0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_128cc, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_128b8, { 1, 0 }
  uselistorder label %dec_label_pc_12918.preheader, { 1, 0 }
}

define i32 @function_12924(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12924:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_12928 = load i32, i32* %arg1, align 4
  store i32 %v2_12928, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_129a06 = icmp eq i32 %v2_12928, 0
  br i1 %v2_129a06, label %dec_label_pc_129a8, label %dec_label_pc_12934

dec_label_pc_12934:                               ; preds = %dec_label_pc_12924, %dec_label_pc_1299c
  %v0_12974 = phi i32 [ %v3_1299c, %dec_label_pc_1299c ], [ %v2_12928, %dec_label_pc_12924 ]
  %v1_12934 = inttoptr i32 %v0_12974 to i32*
  %v2_12934 = load i32, i32* %v1_12934, align 4
  store i32 %v2_12934, i32* %r0.global-to-local, align 4
  %v2_12938 = sub i32 %v0_12974, %v2_12934
  %v1_1293c = add i32 %v2_12938, 12
  %v3_12940 = icmp uge i32 %v1_1293c, %arg2
  %v9_12940 = icmp eq i32 %v1_1293c, %arg2
  %v2_12944 = xor i1 %v9_12940, true
  %v3_12944 = and i1 %v3_12940, %v2_12944
  br i1 %v3_12944, label %dec_label_pc_1299c, label %dec_label_pc_12948

dec_label_pc_12948:                               ; preds = %dec_label_pc_12934
  br i1 %v9_12940, label %dec_label_pc_1294c, label %dec_label_pc_129a8

dec_label_pc_1294c:                               ; preds = %dec_label_pc_12948
  %v1_1294c = add i32 %arg3, 3
  %v1_12950 = and i32 %v1_1294c, -4
  store i32 %v1_12950, i32* %r2.global-to-local, align 4
  %v2_12954 = sub i32 %v2_12934, %v1_12950
  %v3_12954 = icmp ult i32 %v2_12934, %v1_12950
  br i1 %v3_12954, label %dec_label_pc_129a8, label %dec_label_pc_1295c

dec_label_pc_1295c:                               ; preds = %dec_label_pc_1294c
  %v1_1295c = add i32 %v1_12950, 44
  %v3_12960 = icmp ult i32 %v2_12934, %v1_1295c
  br i1 %v3_12960, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_1295c
  store i32 %v2_12954, i32* %v1_12934, align 4
  %v1_1296c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1296c, i32* %r0.global-to-local, align 4
  ret i32 %v1_1296c

.thread2:                                         ; preds = %dec_label_pc_1295c
  %v1_12974 = add i32 %v0_12974, 4
  %v2_12974 = inttoptr i32 %v1_12974 to i32*
  %v3_12974 = load i32, i32* %v2_12974, align 4
  store i32 %v3_12974, i32* %r2.global-to-local, align 4
  %v2_12978 = icmp eq i32 %v3_12974, 0
  br i1 %v2_12978, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_1297c = add i32 %v0_12974, 8
  %v3_1297c = inttoptr i32 %v2_1297c to i32*
  %v4_1297c = load i32, i32* %v3_1297c, align 4
  %v3_12980 = add i32 %v3_12974, 8
  %v4_12980 = inttoptr i32 %v3_12980 to i32*
  store i32 %v4_1297c, i32* %v4_12980, align 4
  %v0_12984.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_12984 = phi i32 [ %v0_12974, %.thread2 ], [ %v0_12984.pre, %bb17 ]
  %v1_12984 = add i32 %v0_12984, 8
  %v2_12984 = inttoptr i32 %v1_12984 to i32*
  %v3_12984 = load i32, i32* %v2_12984, align 4
  store i32 %v3_12984, i32* %r2.global-to-local, align 4
  %v1_12988 = add i32 %v0_12984, 4
  %v2_12988 = inttoptr i32 %v1_12988 to i32*
  %v3_12988 = load i32, i32* %v2_12988, align 4
  %v2_1298c = icmp eq i32 %v3_12984, 0
  br i1 %v2_1298c, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_12990 = add i32 %v3_12984, 4
  %v4_12990 = inttoptr i32 %v3_12990 to i32*
  store i32 %v3_12988, i32* %v4_12990, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_12994 = load i32, i32* %lr.global-to-local, align 4
  %v3_12994 = inttoptr i32 %v2_12994 to i32*
  store i32 %v3_12988, i32* %v3_12994, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_12998 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_12998

dec_label_pc_1299c:                               ; preds = %dec_label_pc_12934
  %v1_1299c = add i32 %v0_12974, 4
  %v2_1299c = inttoptr i32 %v1_1299c to i32*
  %v3_1299c = load i32, i32* %v2_1299c, align 4
  store i32 %v3_1299c, i32* %ip.global-to-local, align 4
  %v2_129a0 = icmp eq i32 %v3_1299c, 0
  br i1 %v2_129a0, label %dec_label_pc_129a0.dec_label_pc_129a8.loopexit_crit_edge, label %dec_label_pc_12934

dec_label_pc_129a0.dec_label_pc_129a8.loopexit_crit_edge: ; preds = %dec_label_pc_1299c
  br label %dec_label_pc_129a8

dec_label_pc_129a8:                               ; preds = %dec_label_pc_1294c, %dec_label_pc_12924, %dec_label_pc_129a0.dec_label_pc_129a8.loopexit_crit_edge, %dec_label_pc_12948
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1299c, { 1, 2, 0 }
  uselistorder i32 %v0_12984, { 1, 0 }
  uselistorder i32 %v1_12950, { 0, 2, 1, 3 }
  uselistorder i1 %v9_12940, { 1, 0 }
  uselistorder i32 %v2_12934, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_12974, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_129a8, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12934, { 1, 0 }
}

define i32 @function_129b0() local_unnamed_addr {
dec_label_pc_129b0:
  %v0_129b0 = load i32, i32* @r2, align 4
  %v2_129b0 = icmp eq i32 %v0_129b0, 0
  %v0_129b4 = load i32, i32* @r3, align 4
  %v1_129b4 = load i32, i32* @r1, align 4
  %v2_129b4 = add i32 %v1_129b4, 4
  %v3_129b4 = inttoptr i32 %v2_129b4 to i32*
  store i32 %v0_129b4, i32* %v3_129b4, align 4
  %v0_129b8 = load i32, i32* @r2, align 4
  %v1_129b8 = load i32, i32* @r1, align 4
  %v2_129b8 = add i32 %v1_129b8, 8
  %v3_129b8 = inttoptr i32 %v2_129b8 to i32*
  store i32 %v0_129b8, i32* %v3_129b8, align 4
  %v1_129c0 = load i32, i32* @r1, align 4
  br i1 %v2_129b0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_129b0
  %v2_129bc = load i32, i32* @r2, align 4
  %v3_129bc = add i32 %v2_129bc, 4
  %v4_129bc = inttoptr i32 %v3_129bc to i32*
  store i32 %v1_129c0, i32* %v4_129bc, align 4
  br label %bb1

.thread:                                          ; preds = %dec_label_pc_129b0
  %v2_129c0 = load i32, i32* @r0, align 4
  %v3_129c0 = inttoptr i32 %v2_129c0 to i32*
  store i32 %v1_129c0, i32* %v3_129c0, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_129c4 = load i32, i32* @r3, align 4
  %v2_129c4 = icmp eq i32 %v0_129c4, 0
  br i1 %v2_129c4, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_129c8 = load i32, i32* @r1, align 4
  %v3_129c8 = add i32 %v0_129c4, 8
  %v4_129c8 = inttoptr i32 %v3_129c8 to i32*
  store i32 %v1_129c8, i32* %v4_129c8, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_129cc = load i32, i32* @r0, align 4
  ret i32 %v1_129cc

; uselistorder directives
  uselistorder i32 %v1_129c0, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_129d0() local_unnamed_addr {
dec_label_pc_129d0:
  %v0_129d0 = load i32, i32* @r2, align 4
  %v2_129d0 = icmp eq i32 %v0_129d0, 0
  %v1_129d4 = load i32, i32* @r1, align 4
  br i1 %v2_129d0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_129d0
  %v2_129d4 = load i32, i32* @r0, align 4
  %v3_129d4 = inttoptr i32 %v2_129d4 to i32*
  store i32 %v1_129d4, i32* %v3_129d4, align 4
  br label %bb2

.thread:                                          ; preds = %dec_label_pc_129d0
  %v3_129d8 = add i32 %v0_129d0, 4
  %v4_129d8 = inttoptr i32 %v3_129d8 to i32*
  store i32 %v1_129d4, i32* %v4_129d8, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_129dc = load i32, i32* @r2, align 4
  %v1_129dc = load i32, i32* @r1, align 4
  %v2_129dc = add i32 %v1_129dc, 8
  %v3_129dc = inttoptr i32 %v2_129dc to i32*
  store i32 %v0_129dc, i32* %v3_129dc, align 4
  %v1_129e0 = load i32, i32* @r0, align 4
  ret i32 %v1_129e0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_129e4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_129e4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_129e4 = load i32, i32* @r4, align 4
  store i32 %v3_129e4, i32* %stack_var_-20, align 4
  %v2_129e8 = load i32, i32* %arg1, align 4
  store i32 %v2_129e8, i32* %r4.global-to-local, align 4
  %v2_129ec = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_12a082 = icmp eq i32 %v2_129e8, 0
  br i1 %v2_12a082, label %dec_label_pc_12ab8, label %dec_label_pc_129f8

dec_label_pc_129f8:                               ; preds = %dec_label_pc_129e4, %dec_label_pc_12a00
  %v0_12a48 = phi i32 [ %v0_12a50, %dec_label_pc_12a00 ], [ 0, %dec_label_pc_129e4 ]
  %v0_12a50 = phi i32 [ %v3_12a04, %dec_label_pc_12a00 ], [ %v2_129e8, %dec_label_pc_129e4 ]
  %v1_12a0c5.in = phi i32 [ %v3_12a04, %dec_label_pc_12a00 ], [ %v2_129e8, %dec_label_pc_129e4 ]
  %v1_12a0c5 = add i32 %v1_12a0c5.in, 12
  %v3_129f8 = icmp ult i32 %v1_12a0c5, %arg2
  br i1 %v3_129f8, label %dec_label_pc_12a00, label %dec_label_pc_12a18

dec_label_pc_12a00:                               ; preds = %dec_label_pc_129f8
  store i32 %v0_12a50, i32* %r6.global-to-local, align 4
  %v1_12a04 = add i32 %v0_12a50, 4
  %v2_12a04 = inttoptr i32 %v1_12a04 to i32*
  %v3_12a04 = load i32, i32* %v2_12a04, align 4
  store i32 %v3_12a04, i32* %r4.global-to-local, align 4
  %v2_12a08 = icmp eq i32 %v3_12a04, 0
  br i1 %v2_12a08, label %dec_label_pc_12a08.dec_label_pc_12ab8.loopexit_crit_edge, label %dec_label_pc_129f8

dec_label_pc_12a18:                               ; preds = %dec_label_pc_129f8
  %v1_12a18 = inttoptr i32 %v0_12a50 to i32*
  %v2_12a18 = load i32, i32* %v1_12a18, align 4
  %v2_12a1c = sub i32 %v0_12a50, %v2_12a18
  %v1_12a20 = add i32 %v2_12a1c, 12
  %v3_12a24 = icmp uge i32 %v1_12a20, %v2_129ec
  %v9_12a24 = icmp eq i32 %v1_12a20, %v2_129ec
  %v2_12a28 = xor i1 %v9_12a24, true
  %v3_12a28 = and i1 %v3_12a24, %v2_12a28
  br i1 %v3_12a28, label %dec_label_pc_12ab8, label %dec_label_pc_12a2c

dec_label_pc_12a2c:                               ; preds = %dec_label_pc_12a18
  %v2_12a2c = add i32 %v2_12a18, %arg3
  store i32 %v2_12a2c, i32* %r7.global-to-local, align 4
  br i1 %v9_12a24, label %dec_label_pc_12a34, label %dec_label_pc_12a60

dec_label_pc_12a34:                               ; preds = %dec_label_pc_12a2c
  %v2_12a34 = icmp eq i32 %v0_12a48, 0
  br i1 %v2_12a34, label %dec_label_pc_12aac, label %dec_label_pc_12a3c

dec_label_pc_12a3c:                               ; preds = %dec_label_pc_12a34
  %v1_12a3c = add i32 %v0_12a48, 12
  %v9_12a40 = icmp eq i32 %v1_12a3c, %arg2
  br i1 %v9_12a40, label %dec_label_pc_12a48, label %dec_label_pc_12aac

dec_label_pc_12a48:                               ; preds = %dec_label_pc_12a3c
  %v1_12a48 = inttoptr i32 %v0_12a48 to i32*
  %v2_12a48 = load i32, i32* %v1_12a48, align 4
  %v1_12a4c = add i32 %v0_12a48, 8
  %v2_12a4c = inttoptr i32 %v1_12a4c to i32*
  %v3_12a4c = load i32, i32* %v2_12a4c, align 4
  store i32 %v3_12a4c, i32* @r2, align 4
  store i32 %v0_12a50, i32* @r1, align 4
  %v2_12a54 = add i32 %v2_12a48, %v2_12a2c
  store i32 %v2_12a54, i32* %r7.global-to-local, align 4
  %v0_12a58 = call i32 @function_129d0()
  br label %dec_label_pc_12aac

dec_label_pc_12a60:                               ; preds = %dec_label_pc_12a2c
  %v1_12a60 = add i32 %v0_12a50, 4
  %v2_12a60 = inttoptr i32 %v1_12a60 to i32*
  %v3_12a60 = load i32, i32* %v2_12a60, align 4
  store i32 %v3_12a60, i32* %r5.global-to-local, align 4
  %v2_12a64 = icmp eq i32 %v3_12a60, 0
  br i1 %v2_12a64, label %dec_label_pc_12a98, label %dec_label_pc_12a6c

dec_label_pc_12a6c:                               ; preds = %dec_label_pc_12a60
  %v1_12a6c = inttoptr i32 %v3_12a60 to i32*
  %v2_12a6c = load i32, i32* %v1_12a6c, align 4
  %v2_12a70 = sub i32 %v3_12a60, %v2_12a6c
  %v1_12a74 = add i32 %v2_12a70, 12
  %v9_12a78 = icmp eq i32 %v2_129ec, %v1_12a74
  br i1 %v9_12a78, label %dec_label_pc_12a80, label %dec_label_pc_12a98

dec_label_pc_12a80:                               ; preds = %dec_label_pc_12a6c
  store i32 %v0_12a48, i32* @r2, align 4
  store i32 %v3_12a60, i32* @r1, align 4
  %v2_12a88 = add i32 %v2_12a6c, %v2_12a2c
  store i32 %v2_12a88, i32* %r7.global-to-local, align 4
  %v0_12a8c = call i32 @function_129d0()
  %v0_12a90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12a90, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12aac

dec_label_pc_12a98:                               ; preds = %dec_label_pc_12a6c, %dec_label_pc_12a60
  %v2_12a98 = add i32 %v0_12a50, %arg3
  store i32 %v2_12a98, i32* %r4.global-to-local, align 4
  store i32 %v3_12a60, i32* @r3, align 4
  store i32 %v0_12a48, i32* @r2, align 4
  store i32 %v2_12a98, i32* @r1, align 4
  %v0_12aa8 = call i32 @function_129b0()
  br label %dec_label_pc_12aac

dec_label_pc_12aac:                               ; preds = %dec_label_pc_12a3c, %dec_label_pc_12a34, %dec_label_pc_12a80, %dec_label_pc_12a48, %dec_label_pc_12a98
  %v0_12aac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12aac, i32* %r5.global-to-local, align 4
  %v0_12ab0 = load i32, i32* %r7.global-to-local, align 4
  %v2_12ab0 = inttoptr i32 %v0_12aac to i32*
  store i32 %v0_12ab0, i32* %v2_12ab0, align 4
  br label %dec_label_pc_12ad0

dec_label_pc_12a08.dec_label_pc_12ab8.loopexit_crit_edge: ; preds = %dec_label_pc_12a00
  br label %dec_label_pc_12ab8

dec_label_pc_12ab8:                               ; preds = %dec_label_pc_129e4, %dec_label_pc_12a08.dec_label_pc_12ab8.loopexit_crit_edge, %dec_label_pc_12a18
  %v1_12ab8 = add i32 %v2_129ec, -12
  store i32 %v1_12ab8, i32* %r5.global-to-local, align 4
  %v3_12abc = inttoptr i32 %v1_12ab8 to i32*
  store i32 %arg3, i32* %v3_12abc, align 4
  %v0_12ac0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12ac0, i32* @r3, align 4
  %v0_12ac4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12ac4, i32* @r2, align 4
  %v0_12ac8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12ac8, i32* @r1, align 4
  %v0_12acc = call i32 @function_129b0()
  br label %dec_label_pc_12ad0

dec_label_pc_12ad0:                               ; preds = %dec_label_pc_12aac, %dec_label_pc_12ab8
  %v0_12ad0 = load i32, i32* %r5.global-to-local, align 4
  %v2_12ad4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12ad4, i32* @r4, align 4
  ret i32 %v0_12ad0

; uselistorder directives
  uselistorder i32 %v3_12a60, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_12a24, { 1, 0 }
  uselistorder i32 %v3_12a04, { 2, 3, 1, 0 }
  uselistorder i32 %v0_12a50, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_12a48, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @function_129b0, { 1, 0 }
  uselistorder i32* @r3, { 5, 8, 6, 7, 0, 9, 10, 11, 1, 2, 3, 12, 4 }
  uselistorder i32 ()* @function_129d0, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12ad0, { 1, 0 }
  uselistorder label %dec_label_pc_12ab8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12aac, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_129f8, { 1, 0 }
}

define i32 @function_12ad8() local_unnamed_addr {
dec_label_pc_12af4.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_12ad8 = ptrtoint i32* %stack_var_-268 to i32
  %v1_12ae8 = call i32 @function_12ec4()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_12af4 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_12af4

dec_label_pc_12af4:                               ; preds = %dec_label_pc_12af4.lr.ph, %dec_label_pc_12af4
  %v1_12af8 = phi i32 [ 31, %dec_label_pc_12af4.lr.ph ], [ %v1_12b04, %dec_label_pc_12af4 ]
  %v4_12af8 = mul i32 %v1_12af8, 4
  %v5_12af8 = add i32 %v4_12af8, %v2_12af4
  %v2_12b00 = add i32 %v5_12af8, -128
  %v3_12b00 = inttoptr i32 %v2_12b00 to i32*
  store i32 0, i32* %v3_12b00, align 4
  %v0_12b04 = load i32, i32* %r1.global-to-local, align 4
  %v1_12b04 = add i32 %v0_12b04, -1
  store i32 %v1_12b04, i32* %r1.global-to-local, align 4
  %v6_12b04 = icmp slt i32 %v1_12b04, 0
  br i1 %v6_12b04, label %dec_label_pc_12b0c, label %dec_label_pc_12af4

dec_label_pc_12b0c:                               ; preds = %dec_label_pc_12af4
  %v2_12b0c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_12b0c, i32* @r4, align 4
  store i32 6, i32* %r1.global-to-local, align 4
  %v2_12b18 = call i32 @function_140e8(i32 %v2_12b0c, i32 6)
  %v2_12b1c = icmp eq i32 %v2_12b18, 0
  br i1 %v2_12b1c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12b0c
  store i32 %v2_12b0c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12b0c, %bb
  store i32 76592, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12b1c, i32 ptrtoint (i32* @global_var_136d0.757 to i32))
  %v2_12b34 = load i32, i32* @global_var_1d22c.759, align 4
  %v2_12b38 = icmp eq i32 %v2_12b34, 0
  br i1 %v2_12b38, label %dec_label_pc_12b40, label %dec_label_pc_12b70

dec_label_pc_12b40:                               ; preds = %.thread1
  store i32 1, i32* @global_var_1d22c.759, align 4
  br label %dec_label_pc_12b48

dec_label_pc_12b48:                               ; preds = %dec_label_pc_12bc0, %dec_label_pc_12b40
  %v1_12b54 = call i32 @function_12ec4()
  %v1_12b5c = call i32 @function_140ac(i32 6)
  store i32 76656, i32* @lr, align 4
  %v1_12b6c = call i32 @function_12ec4()
  %v2_12b74.pre = load i32, i32* @global_var_1d22c.759, align 4
  br label %dec_label_pc_12b70

dec_label_pc_12b70:                               ; preds = %.thread1, %dec_label_pc_12b48
  %v0_12be4 = phi i32 [ %v2_12b34, %.thread1 ], [ %v2_12b74.pre, %dec_label_pc_12b48 ]
  store i32 ptrtoint (i32* @global_var_1d22c.759 to i32), i32* %ip.global-to-local, align 4
  %v7_12b78 = icmp eq i32 %v0_12be4, 1
  br i1 %v7_12b78, label %dec_label_pc_12ba8.lr.ph, label %dec_label_pc_12bdc

dec_label_pc_12ba8.lr.ph:                         ; preds = %dec_label_pc_12b70
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_1d22c.759, align 4
  %v2_12b94 = bitcast i32* %stack_var_-268 to i8*
  %v3_12b94 = call i32 @function_121f0(i8* %v2_12b94, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12ba8

dec_label_pc_12ba8:                               ; preds = %dec_label_pc_12ba8.lr.ph, %dec_label_pc_12ba8
  %v1_12bac = phi i32 [ 31, %dec_label_pc_12ba8.lr.ph ], [ %v1_12bb8, %dec_label_pc_12ba8 ]
  %v4_12bac = mul i32 %v1_12bac, 4
  %v5_12bac = add i32 %v4_12bac, %v2_12af4
  %v2_12bb4 = add i32 %v5_12bac, -264
  %v3_12bb4 = inttoptr i32 %v2_12bb4 to i32*
  store i32 -1, i32* %v3_12bb4, align 4
  %v0_12bb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_12bb8 = add i32 %v0_12bb8, -1
  store i32 %v1_12bb8, i32* %r1.global-to-local, align 4
  %v6_12bb8 = icmp slt i32 %v1_12bb8, 0
  br i1 %v6_12bb8, label %dec_label_pc_12bc0, label %dec_label_pc_12ba8

dec_label_pc_12bc0:                               ; preds = %dec_label_pc_12ba8
  store i32 %v2_12ad8, i32* %r1.global-to-local, align 4
  %v4_12bd4 = call i32 @function_131b0(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_12b48

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12b70
  %v7_12bdc = icmp eq i32 %v0_12be4, 2
  br i1 %v7_12bdc, label %dec_label_pc_12be4, label %dec_label_pc_12bf0

dec_label_pc_12be4:                               ; preds = %dec_label_pc_12bdc
  store i32 3, i32* @global_var_1d22c.759, align 4
  %v0_12bec = call i32 @function_12ad8()
  %v2_12bf0.pre = load i32, i32* @global_var_1d22c.759, align 4
  br label %dec_label_pc_12bf0

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12bdc, %dec_label_pc_12be4
  %v1_12bf8 = phi i32 [ %v0_12be4, %dec_label_pc_12bdc ], [ %v2_12bf0.pre, %dec_label_pc_12be4 ]
  %v7_12bf4 = icmp eq i32 %v1_12bf8, 3
  br i1 %v7_12bf4, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_12bf0
  %v2_12c00 = load i32, i32* %ip.global-to-local, align 4
  %v3_12c00 = inttoptr i32 %v2_12c00 to i32*
  store i32 4, i32* %v3_12c00, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12bf0, %bb27
  call void @__pseudo_cond_branch(i1 %v7_12bf4, i32 ptrtoint (i32* @global_var_132c8.761 to i32))
  br label %dec_label_pc_12c08

dec_label_pc_12c08:                               ; preds = %dec_label_pc_12c08, %.thread3
  %v0_12c08 = call i32 @function_12ad8()
  br label %dec_label_pc_12c08

; uselistorder directives
  uselistorder i32 %v1_12bb8, { 2, 1, 0 }
  uselistorder i32 %v1_12b04, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 7, 9, 8, 2 }
  uselistorder i32* @global_var_1d22c.759, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12bf0, { 1, 0 }
  uselistorder label %dec_label_pc_12ba8, { 1, 0 }
  uselistorder label %dec_label_pc_12b70, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12af4, { 1, 0 }
}

define i32 @function_12c20(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c20:
  %stack_var_-16 = alloca i32, align 4
  %v2_12c20 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_12c20, i32* @r0, align 4
  %v8_12c3c = call i32 @function_12ecc(i32 %v2_12c20, i32 ptrtoint (i32* @global_var_12ec4.715 to i32), i32 ptrtoint (i32* @global_var_1d154.764 to i32), i32 77516, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_12c4c = call i32 @function_12ec4()
  %v2_12c54 = load i32, i32* @global_var_1d230.768, align 4
  %v2_12c58 = icmp eq i32 %v2_12c54, 0
  br i1 %v2_12c58, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_12c20
  call void @__pseudo_branch(i32 %v2_12c54)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12c20, %bb
  store i32 %v2_12c20, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_12c7c.770 to i32), i32* @lr, align 4
  %v8_12c78 = call i32 @function_12ecc(i32 %v2_12c20, i32 1, i32 ptrtoint (i32* @global_var_1d154.764 to i32), i32 77516, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v8_12c78, i32* @r0, align 4
  %v1_12c7c = call i32 @function_12e58(i32 %v8_12c78)
  store i1 true, i1* @cpsr_z, align 1
  %v0_12c90 = load i32, i32* @r4, align 4
  %v1_12c94 = call i32 @function_132c8(i32 %v0_12c90)
  unreachable

; uselistorder directives
  uselistorder i32 %v2_12c20, { 1, 0, 3, 2 }
  uselistorder i32 ()* @function_12ec4, { 4, 3, 2, 1, 18, 17, 16, 15, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 21, 20, 19 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_12ecc, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 77516, { 1, 0, 3, 4, 2, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_12ec4.715 to i32), { 0, 3, 1, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_12cb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_12cb4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12cb4 = load i32, i32* @r4, align 4
  store i32 %v3_12cb4, i32* %stack_var_-20, align 4
  %v6_12cb4 = load i32, i32* @r5, align 4
  %v9_12cb4 = load i32, i32* @r6, align 4
  %v16_12cb4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_12cb8 = icmp eq i32 %arg1, 0
  %v2_12cbc = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_12cb8, label %dec_label_pc_12e40, label %dec_label_pc_12cd4.preheader

dec_label_pc_12cd4.preheader:                     ; preds = %dec_label_pc_12cb4
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_12cdc17 = add i32 %v16_12cb4, 124
  br label %dec_label_pc_12ccc

dec_label_pc_12ccc:                               ; preds = %dec_label_pc_12cd4.preheader, %dec_label_pc_12ccc
  %v5_12cdc18 = phi i32 [ %v5_12cdc17, %dec_label_pc_12cd4.preheader ], [ %v5_12cdc, %dec_label_pc_12ccc ]
  %v2_12cd0 = add i32 %v5_12cdc18, -136
  %v3_12cd0 = inttoptr i32 %v2_12cd0 to i32*
  store i32 0, i32* %v3_12cd0, align 4
  %v0_12cd4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12cd4 = add i32 %v0_12cd4.pre, -1
  store i32 %v1_12cd4, i32* %r1.global-to-local, align 4
  %v6_12cd4 = icmp slt i32 %v1_12cd4, 0
  %v4_12cdc = mul i32 %v1_12cd4, 4
  %v5_12cdc = add i32 %v4_12cdc, %v16_12cb4
  br i1 %v6_12cd4, label %dec_label_pc_12ce4, label %dec_label_pc_12ccc

dec_label_pc_12ce4:                               ; preds = %dec_label_pc_12ccc
  %v2_12ce4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_12ce4, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v0_12cf4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_12cf4, i32* %stack_var_-28, align 4
  %v2_12cfc = call i32 @function_140e8(i32 %v2_12ce4, i32 17)
  store i32 %v2_12cfc, i32* %r0.global-to-local, align 4
  %v1_12d00 = load i32, i32* @r5, align 4
  %v5_12d04 = icmp slt i32 %v2_12cfc, %v1_12d00
  br i1 %v5_12d04, label %dec_label_pc_12e48, label %dec_label_pc_12d08

dec_label_pc_12d08:                               ; preds = %dec_label_pc_12ce4
  %v2_12d08 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_12d08, i32* @r4, align 4
  store i32 %v1_12d00, i32* %r0.global-to-local, align 4
  store i32 %v2_12ce4, i32* %r1.global-to-local, align 4
  %v3_12d18 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_12d18 = call i32 @function_136d0(i32 %v1_12d00, %_TYPEDEF_sigset_t* %v3_12d18, i32 %v2_12d08)
  store i32 %v4_12d18, i32* %r0.global-to-local, align 4
  %v1_12d1c = load i32, i32* @r5, align 4
  %v9_12d1c = icmp eq i32 %v4_12d18, %v1_12d1c
  br i1 %v9_12d1c, label %dec_label_pc_12d24, label %dec_label_pc_12e48

dec_label_pc_12d24:                               ; preds = %dec_label_pc_12d08
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_12d08, i32* %r0.global-to-local, align 4
  %v2_12d2c = call i32 @function_140c4(i32 %v2_12d08, i32 17)
  store i32 %v2_12d2c, i32* %r0.global-to-local, align 4
  %v1_12d30 = load i32, i32* @r5, align 4
  %v9_12d30 = icmp eq i32 %v2_12d2c, %v1_12d30
  br i1 %v9_12d30, label %dec_label_pc_12d48.preheader, label %dec_label_pc_12d24.dec_label_pc_12e10_crit_edge

dec_label_pc_12d24.dec_label_pc_12e10_crit_edge:  ; preds = %dec_label_pc_12d24
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_12e10

dec_label_pc_12d48.preheader:                     ; preds = %dec_label_pc_12d24
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12d40

dec_label_pc_12d40:                               ; preds = %dec_label_pc_12d48.preheader, %dec_label_pc_12d40
  %v5_12d5016 = phi i32 [ %v5_12cdc17, %dec_label_pc_12d48.preheader ], [ %v5_12d50, %dec_label_pc_12d40 ]
  %v2_12d44 = add i32 %v5_12d5016, -136
  %v3_12d44 = inttoptr i32 %v2_12d44 to i32*
  store i32 0, i32* %v3_12d44, align 4
  %v0_12d48.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12d48 = add i32 %v0_12d48.pre, -1
  store i32 %v1_12d48, i32* %r1.global-to-local, align 4
  %v6_12d48 = icmp slt i32 %v1_12d48, 0
  %v4_12d50 = mul i32 %v1_12d48, 4
  %v5_12d50 = add i32 %v4_12d50, %v16_12cb4
  br i1 %v6_12d48, label %dec_label_pc_12d58, label %dec_label_pc_12d40

dec_label_pc_12d58:                               ; preds = %dec_label_pc_12d40
  store i32 %v2_12ce4, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v2_12d60 = call i32 @function_140e8(i32 %v2_12ce4, i32 17)
  store i32 %v2_12d60, i32* %r0.global-to-local, align 4
  %v1_12d64 = icmp slt i32 %v2_12d60, 0
  br i1 %v1_12d64, label %dec_label_pc_12e48, label %dec_label_pc_12d6c

dec_label_pc_12d6c:                               ; preds = %dec_label_pc_12d58
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_12d78 = call i32 @function_131b0(i32 17, i32* null, i32 %v2_12cbc)
  store i32 %v4_12d78, i32* %r0.global-to-local, align 4
  %v1_12d7c = icmp slt i32 %v4_12d78, 0
  br i1 %v1_12d7c, label %dec_label_pc_12d84, label %dec_label_pc_12dac

dec_label_pc_12d84:                               ; preds = %dec_label_pc_12d6c
  %v0_12d84 = call i32 @function_12190()
  store i32 %v2_12d08, i32* %r1.global-to-local, align 4
  store i32 %v0_12d84, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_12d98 = inttoptr i32 %v0_12d84 to i32*
  %v2_12d98 = load i32, i32* %v1_12d98, align 4
  store i32 %v2_12d98, i32* @r4, align 4
  %v3_12d9c = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_12d9c = call i32 @function_136d0(i32 2, %_TYPEDEF_sigset_t* %v3_12d9c, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_12da4 = load i32, i32* @r4, align 4
  %v1_12da4 = load i32, i32* %r5.global-to-local, align 4
  %v2_12da4 = inttoptr i32 %v1_12da4 to i32*
  store i32 %v0_12da4, i32* %v2_12da4, align 4
  %v17_12e50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e4c

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12d6c
  %v2_12dac = load i32, i32* %stack_var_-424, align 4
  %v7_12db0 = icmp eq i32 %v2_12dac, 1
  %v2_12db8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_12db8, i32* @r4, align 4
  br i1 %v7_12db0, label %dec_label_pc_12dc0, label %dec_label_pc_12df4

dec_label_pc_12dc0:                               ; preds = %dec_label_pc_12dac
  store i32 %v2_12db8, i32* %r1.global-to-local, align 4
  store i32 %v2_12db8, i32* %r0.global-to-local, align 4
  %v2_12dc8 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_12dc8 = call i32 @function_1364c(%timespec* %v2_12dc8, i32 %v2_12db8)
  store i32 %v3_12dc8, i32* %r0.global-to-local, align 4
  store i32 %v3_12dc8, i32* %r6.global-to-local, align 4
  %v0_12dd0 = call i32 @function_12190()
  store i32 %v2_12d08, i32* %r1.global-to-local, align 4
  store i32 %v0_12dd0, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_12de4 = inttoptr i32 %v0_12dd0 to i32*
  %v2_12de4 = load i32, i32* %v1_12de4, align 4
  store i32 %v2_12de4, i32* @r4, align 4
  %v3_12de8 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_12de8 = call i32 @function_136d0(i32 2, %_TYPEDEF_sigset_t* %v3_12de8, i32 0)
  store i32 %v4_12de8, i32* %r0.global-to-local, align 4
  %v0_12dec = load i32, i32* @r4, align 4
  %v1_12dec = load i32, i32* %r5.global-to-local, align 4
  %v2_12dec = inttoptr i32 %v1_12dec to i32*
  store i32 %v0_12dec, i32* %v2_12dec, align 4
  %v0_12e1c.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12e1c

dec_label_pc_12df4:                               ; preds = %dec_label_pc_12dac
  store i32 %v2_12d08, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_12e00 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_12e00 = call i32 @function_136d0(i32 2, %_TYPEDEF_sigset_t* %v3_12e00, i32 0)
  store i32 %v4_12e00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e10

dec_label_pc_12e10:                               ; preds = %dec_label_pc_12d24.dec_label_pc_12e10_crit_edge, %dec_label_pc_12df4
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_12d24.dec_label_pc_12e10_crit_edge ], [ %v2_12db8, %dec_label_pc_12df4 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_12e14 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_12e14 = call i32 @function_1364c(%timespec* %v2_12e14, i32 %storemerge.pre-phi)
  store i32 %v3_12e14, i32* %r0.global-to-local, align 4
  store i32 %v3_12e14, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12e1c

dec_label_pc_12e1c:                               ; preds = %dec_label_pc_12dc0, %dec_label_pc_12e10
  %v0_12e1c = phi i32 [ %v0_12e1c.pr, %dec_label_pc_12dc0 ], [ %v3_12e14, %dec_label_pc_12e10 ]
  %v2_12e1c = icmp eq i32 %v0_12e1c, 0
  br i1 %v2_12e1c, label %dec_label_pc_12e40, label %dec_label_pc_12e24

dec_label_pc_12e24:                               ; preds = %dec_label_pc_12e1c
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_12e2c = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_12e2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e4c

dec_label_pc_12e40:                               ; preds = %dec_label_pc_12cb4, %dec_label_pc_12e1c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e4c

dec_label_pc_12e48:                               ; preds = %dec_label_pc_12d08, %dec_label_pc_12d58, %dec_label_pc_12ce4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e4c

dec_label_pc_12e4c:                               ; preds = %dec_label_pc_12e24, %dec_label_pc_12e40, %dec_label_pc_12d84, %dec_label_pc_12e48
  %v17_12e50 = phi i32 [ %v3_12e2c, %dec_label_pc_12e24 ], [ 0, %dec_label_pc_12e40 ], [ %v17_12e50.pre, %dec_label_pc_12d84 ], [ -1, %dec_label_pc_12e48 ]
  %v2_12e50 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12e50, i32* @r4, align 4
  store i32 %v6_12cb4, i32* @r5, align 4
  store i32 %v9_12cb4, i32* @r6, align 4
  ret i32 %v17_12e50

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_12db8, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_12d48, { 0, 2, 1 }
  uselistorder i32 %v2_12d08, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_12d00, { 1, 0, 2 }
  uselistorder i32 %v2_12ce4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_12cd4, { 0, 2, 1 }
  uselistorder i32 %v16_12cb4, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 9, 10, 11, 12, 15, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 0 }
  uselistorder i32 (i32, i32)* @function_140e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12e4c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_12e48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e40, { 1, 0 }
  uselistorder label %dec_label_pc_12e1c, { 1, 0 }
  uselistorder label %dec_label_pc_12e10, { 1, 0 }
  uselistorder label %dec_label_pc_12d40, { 1, 0 }
  uselistorder label %dec_label_pc_12ccc, { 1, 0 }
}

define i32 @function_12e58(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e84:
  %stack_var_-8 = alloca i32, align 4
  %v3_12e58 = load i32, i32* @r4, align 4
  store i32 %v3_12e58, i32* %stack_var_-8, align 4
  %v2_12e88 = load i32, i32* @global_var_1d240.777, align 4
  %v2_12e8c = icmp eq i32 %v2_12e88, 0
  br i1 %v2_12e8c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_12e84
  store i32 77464, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_12e88)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12e84, %bb
  %v2_12e9c = load i32, i32* @global_var_1d244.779, align 4
  %v2_12ea0 = icmp eq i32 %v2_12e9c, 0
  br i1 %v2_12ea0, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_12ea4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_12ea4, i32* @r4, align 4
  %v9_12ea4 = load i32, i32* @r0, align 4
  ret i32 %v9_12ea4

bb13:                                             ; preds = %.thread
  store i32 ptrtoint (i32* @global_var_12eb0.780 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_12e9c)
  %v2_12eb0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12eb0, i32* @r4, align 4
  %v8_12eb0 = load i32, i32* @r0, align 4
  ret i32 %v8_12eb0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12ec4() local_unnamed_addr {
dec_label_pc_12ec4:
  ret i32 0
}

define i32 @function_12ecc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_12ecc:
  %v1_12ecc = load i32, i32* @r0, align 4
  ret i32 %v1_12ecc
}

define i32 @function_12ed0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ed0:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12ed0 = load i32, i32* @r4, align 4
  store i32 %v3_12ed0, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_12ee0 = call i32 @function_11ba4(i32 %arg1, i32 1)
  %v7_12ee4 = icmp eq i32 %v2_12ee0, -1
  br i1 %v7_12ee4, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_12ed0
  %v3_12ee8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_12ee8, i32* @r4, align 4
  ret i32 %v2_12ee0

bb4:                                              ; preds = %dec_label_pc_12ed0
  %v0_12eec = load i32, i32* @r4, align 4
  %v4_12ef4 = call i32 @function_11d94(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_14b08.782, i32 0, i32 0), i32 %v0_12eec)
  %v1_12ef8 = load i32, i32* %r5.global-to-local, align 4
  %v9_12ef8 = icmp eq i32 %v4_12ef4, %v1_12ef8
  br i1 %v9_12ef8, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_12efc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_12efc, i32* @r4, align 4
  ret i32 %v4_12ef4

bb6:                                              ; preds = %bb4
  %v0_12f00 = call i32 @function_12ad8()
  %v0_12f04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12f04, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v2_12f04 = load i32, i32* @r8, align 4
  %v5_12f04 = mul i32 %v2_12f04, 4194304
  %v6_12f04 = and i32 %v5_12f04, %v0_12eec
  store i32 %v6_12f04, i32* @r4, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_12f00

; uselistorder directives
  uselistorder i32 %v2_12ee0, { 1, 0 }
  uselistorder i32* @r8, { 103, 32, 33, 34, 35, 37, 36, 4, 5, 7, 6, 8, 9, 10, 38, 39, 44, 45, 40, 41, 42, 43, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 46, 1, 47, 2, 48, 3, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 62, 63, 61, 64, 65, 66, 67, 69, 68, 70, 71, 72, 74, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 96, 97, 98, 99, 101, 102 }
  uselistorder i1* @cpsr_z, { 10, 9, 0, 11, 8, 5, 6, 1, 2, 3, 4, 7 }
  uselistorder i32 ()* @function_12ad8, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @function_11d94, { 7, 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 (i32, i32)* @function_11ba4, { 0, 7, 4, 3, 6, 5, 13, 12, 11, 10, 9, 8, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_12f08(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f08:
  %v2_12f0c = load i32, i32* @global_var_1d248.784, align 4
  %v2_12f10 = icmp eq i32 %v2_12f0c, 0
  br i1 %v2_12f10, label %bb2, label %bb

bb:                                               ; preds = %dec_label_pc_12f08
  %v6_12f1c = load i32, i32* @r0, align 4
  ret i32 %v6_12f1c

bb2:                                              ; preds = %dec_label_pc_12f08
  store i32 1, i32* @global_var_1d248.784, align 4
  store i32 4096, i32* @global_var_1d23c.738, align 4
  ret i32 undef
}

define i32 @function_12f64(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_12f64:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v4_12f68 = mul i32 %arg2, 4
  %v5_12f68 = add i32 %tmp, %v4_12f68
  %v2_12f6c = load i32, i32* %arg3, align 4
  %v2_12f70 = ptrtoint i32* %stack_var_-120 to i32
  %v1_12f74 = add i32 %v5_12f68, 4
  %v9_12f78 = icmp eq i32 %v1_12f74, %v2_12f6c
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg7, i32* @global_var_1d234.789, align 4
  store i32 %v1_12f74, i32* @global_var_1d238.791, align 4
  store i32 %arg6, i32* @global_var_1d244.779, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_12f78, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_12f64
  store i32 %v5_12f68, i32* @global_var_1d238.791, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_12f64, %bb
  %v2_12fb8 = bitcast i32* %stack_var_-120 to i8*
  %v3_12fb8 = call i32 @function_121f0(i8* %v2_12fb8, i32 0)
  %storemerge.pre = load i32, i32* @global_var_1d238.791, align 4
  br label %dec_label_pc_12fc8

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12fc8, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_12fc8, %dec_label_pc_12fc8 ]
  %v1_12fc8 = inttoptr i32 %storemerge to i32*
  %v2_12fc8 = load i32, i32* %v1_12fc8, align 4
  %v4_12fc8 = add i32 %storemerge, 4
  %v2_12fcc = icmp eq i32 %v2_12fc8, 0
  br i1 %v2_12fcc, label %dec_label_pc_12fd8, label %dec_label_pc_12fc8

dec_label_pc_12fd8:                               ; preds = %dec_label_pc_12fc8
  store i32 %v4_12fc8, i32* @r4, align 4
  %v1_12ff822 = inttoptr i32 %v4_12fc8 to i32*
  %v2_12ff823 = load i32, i32* %v1_12ff822, align 4
  %v2_12ffc25 = icmp eq i32 %v2_12ff823, 0
  br i1 %v2_12ffc25, label %dec_label_pc_13004, label %dec_label_pc_12fe0

dec_label_pc_12fe0:                               ; preds = %dec_label_pc_12fd8, %dec_label_pc_12ff8
  %v5_12fe4 = phi i32 [ %v2_12ff8, %dec_label_pc_12ff8 ], [ %v2_12ff823, %dec_label_pc_12fd8 ]
  %v2_12fe0 = icmp ugt i32 %v5_12fe4, 13
  %v7_12fe0 = icmp eq i32 %v5_12fe4, 14
  %v2_12fe4 = xor i1 %v2_12fe0, true
  %v3_12fe4 = or i1 %v7_12fe0, %v2_12fe4
  br i1 %v3_12fe4, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_12fe0
  %v6_12fe4 = and i32 %v5_12fe4, 536870912
  %v7_12fe4 = icmp ne i32 %v6_12fe4, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_12fe0, %bb42
  %v1_12ff0 = phi i1 [ %v2_12fe0, %dec_label_pc_12fe0 ], [ %v7_12fe4, %bb42 ]
  %v2_12fe8 = xor i1 %v1_12ff0, true
  %v3_12fe8 = or i1 %v7_12fe0, %v2_12fe8
  br i1 %v3_12fe8, label %bb44, label %dec_label_pc_12ff8

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_12ff8

dec_label_pc_12ff8:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_12fe8, i32 ptrtoint (i32* @global_var_121d0.793 to i32))
  %v0_12ff4 = load i32, i32* @r4, align 4
  %v1_12ff4 = add i32 %v0_12ff4, 8
  store i32 %v1_12ff4, i32* @r4, align 4
  %v1_12ff8 = inttoptr i32 %v1_12ff4 to i32*
  %v2_12ff8 = load i32, i32* %v1_12ff8, align 4
  %v2_12ffc = icmp eq i32 %v2_12ff8, 0
  br i1 %v2_12ffc, label %dec_label_pc_13004, label %dec_label_pc_12fe0

dec_label_pc_13004:                               ; preds = %dec_label_pc_12ff8, %dec_label_pc_12fd8
  %v1_13008 = call i32 @function_14130(i32 %v2_12f70)
  store i32 %v1_13008, i32* @r0, align 4
  %v1_1300c = call i32 @function_12f08(i32 %v1_13008)
  store i32 %v1_1300c, i32* @r0, align 4
  %v2_13018 = icmp eq i32 %tmp37, 0
  br i1 %v2_13018, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_13004
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_13004, %bb45
  %v0_13028 = phi i32 [ %tmp37, %dec_label_pc_13004 ], [ 4096, %bb45 ]
  %v3_13020 = icmp eq i32 %tmp36, -1
  %v8_13020 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_1d23c.738 to i32), i32* @r2, align 4
  store i32 %v0_13028, i32* @global_var_1d23c.738, align 4
  br i1 %v3_13020, label %dec_label_pc_13030, label %dec_label_pc_13058

dec_label_pc_13030:                               ; preds = %bb46
  %v0_13030 = call i32 @function_135bc()
  store i32 %v0_13030, i32* @r0, align 4
  store i32 %v0_13030, i32* @r4, align 4
  %v0_13038 = call i32 @function_13564()
  %v0_1303c = load i32, i32* @r4, align 4
  %v9_1303c = icmp eq i32 %v0_1303c, %v0_13038
  br i1 %v9_1303c, label %dec_label_pc_13044, label %dec_label_pc_13080

dec_label_pc_13044:                               ; preds = %dec_label_pc_13030
  %v1_13044 = call i32 @function_13590(i32 %v0_13038)
  store i32 %v1_13044, i32* @r0, align 4
  store i32 %v1_13044, i32* @r4, align 4
  %v0_1304c = call i32 @function_13538()
  %v0_13050 = load i32, i32* @r4, align 4
  %v9_13050 = icmp eq i32 %v0_13050, %v0_1304c
  br i1 %v9_13050, label %dec_label_pc_13058, label %dec_label_pc_13080

dec_label_pc_13058:                               ; preds = %dec_label_pc_13044, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_13020, label %dec_label_pc_130ec, label %dec_label_pc_13064

dec_label_pc_13064:                               ; preds = %dec_label_pc_13058
  %v9_13068 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_13068, label %dec_label_pc_13070, label %dec_label_pc_13080

dec_label_pc_13070:                               ; preds = %dec_label_pc_13064
  br label %dec_label_pc_13080

dec_label_pc_13080:                               ; preds = %dec_label_pc_13070, %dec_label_pc_13064, %dec_label_pc_13044, %dec_label_pc_13030
  %v2_13088 = call i32 @function_12ed0(i32 0, i32 32768)
  %v2_13094 = call i32 @function_12ed0(i32 1, i32 32770)
  %v2_130a0 = call i32 @function_12ed0(i32 2, i32 32770)
  br label %dec_label_pc_130ec

dec_label_pc_130ec:                               ; preds = %dec_label_pc_13080, %dec_label_pc_13058
  %v0_130b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_130b0 = inttoptr i32 %v0_130b0 to i32*
  %v2_130b0 = load i32, i32* %v1_130b0, align 4
  store i32 %v2_130b0, i32* @global_var_1d16c, align 4
  store i32 %arg5, i32* @global_var_1d240.777, align 4
  %v2_130ec = icmp eq i32 %arg4, 0
  br i1 %v2_130ec, label %dec_label_pc_13128, label %bb47

bb47:                                             ; preds = %dec_label_pc_130ec
  br label %dec_label_pc_13128

dec_label_pc_13128:                               ; preds = %dec_label_pc_130ec, %bb47
  call void @__pseudo_branch(i32 %arg4)
  %v1_13138 = call i32 @function_12190()
  %v2_13140 = inttoptr i32 %v1_13138 to i32*
  store i32 0, i32* %v2_13140, align 4
  %v0_1316c = load i32, i32* %r8.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_13178 = call i32 @function_12c20(i32 %v0_1316c)
  ret i32 %v1_13178

; uselistorder directives
  uselistorder i32 %v2_12ff8, { 1, 0 }
  uselistorder i32 %v1_12ff4, { 1, 0 }
  uselistorder i1 %v2_12fe0, { 1, 0 }
  uselistorder i32 %v4_12fc8, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_12c20, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_12ed0, { 2, 1, 0 }
  uselistorder i32 32768, { 1, 2, 0 }
  uselistorder i32* @global_var_1d23c.738, { 1, 4, 0, 2, 3 }
  uselistorder i32 4096, { 0, 1, 3, 6, 4, 7, 2, 5, 8, 9 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i1 true, { 0, 1, 68, 2, 3, 4, 5, 6, 44, 7, 8, 9, 10, 11, 15, 16, 17, 69, 70, 71, 72, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 18, 19, 89, 90, 91, 45, 60, 13, 14, 59, 12, 92, 31, 30, 50, 56, 51, 57, 48, 55, 49, 58, 93, 20, 94, 95, 21, 22, 23, 96, 62, 63, 24, 25, 97, 64, 65, 26, 27, 98, 66, 67, 28, 29, 47, 99, 100, 101, 32, 52, 33, 53, 34, 43, 35, 36, 37, 54, 38, 46, 39, 40, 41, 42 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_13128, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_12ff8, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_12fe0, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_131b0(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_131b0:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_131b0 = load i32, i32* @r4, align 4
  %v6_131b0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_131b4 = icmp eq i32* %arg2, null
  %v2_131b8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_131b4, label %dec_label_pc_13224, label %dec_label_pc_131c8

dec_label_pc_131c8:                               ; preds = %dec_label_pc_131b0
  %v2_131cc = load i32, i32* %arg2, align 4
  %v4_131cc = add i32 %tmp, 4
  store i32 %v4_131cc, i32* @r1, align 4
  %v2_131d0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_131d0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_131cc, i32* %stack_var_-156, align 4
  %v3_131dc = call i32 @function_121d0(i32 %v2_131d0, i32 %v4_131cc, i32 128)
  store i32 %v3_131dc, i32* %r0.global-to-local, align 4
  %v0_131e0 = load i32, i32* @r4, align 4
  %v1_131e0 = add i32 %v0_131e0, 132
  %v2_131e0 = inttoptr i32 %v1_131e0 to i32*
  %v3_131e0 = load i32, i32* %v2_131e0, align 4
  %v1_131e4 = and i32 %v3_131e0, 67108864
  %v2_131e4 = icmp eq i32 %v1_131e4, 0
  br i1 %v2_131e4, label %dec_label_pc_131f8, label %bb

bb:                                               ; preds = %dec_label_pc_131c8
  br label %dec_label_pc_13214

dec_label_pc_131f8:                               ; preds = %dec_label_pc_131c8
  %v1_13200 = and i32 %v3_131e0, 4
  %v2_13200 = icmp eq i32 %v1_13200, 0
  br i1 %v2_13200, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_131f8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_131f8, %bb20
  br label %dec_label_pc_13214

dec_label_pc_13214:                               ; preds = %bb, %bb21
  %v2_13214 = icmp eq i32 %v0_131e0, 0
  %v3_13218 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_13218 = select i1 %v2_13214, i32 0, i32 %v3_13218
  %v0_13224.pre = load i32, i32* @r5, align 4
  %v0_13234.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13224

dec_label_pc_13224:                               ; preds = %dec_label_pc_13214, %dec_label_pc_131b0
  %v0_13234 = phi i32 [ %arg1, %dec_label_pc_131b0 ], [ %v0_13234.pre, %dec_label_pc_13214 ]
  %v0_13224 = phi i32 [ %arg3, %dec_label_pc_131b0 ], [ %v0_13224.pre, %dec_label_pc_13214 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_131b0 ], [ %.v3_13218, %dec_label_pc_13214 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_13224 = icmp eq i32 %v0_13224, 0
  %.v2_131b8 = select i1 %v2_13224, i32 0, i32 %v2_131b8
  store i32 %.v2_131b8, i32* @r2, align 4
  store i32 %v0_13234, i32* %r0.global-to-local, align 4
  %v1_13238 = call i32 @function_1329c(i32 %v0_13234)
  store i32 %v1_13238, i32* %r0.global-to-local, align 4
  %v0_1323c = load i32, i32* @r5, align 4
  %v2_1323c = icmp eq i32 %v0_1323c, 0
  br i1 %v2_1323c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_13224
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_13224, %bb25
  %v0_1324c.pr = phi i32 [ 0, %dec_label_pc_13224 ], [ 1, %bb25 ]
  %v1_13244 = icmp slt i32 %v1_13238, 0
  br i1 %v1_13244, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_13280

thread-pre-split:                                 ; preds = %bb26
  %v2_1324c = icmp eq i32 %v0_1324c.pr, 0
  store i32 %v1_13238, i32* @r4, align 4
  br i1 %v2_1324c, label %dec_label_pc_13280, label %dec_label_pc_13258

dec_label_pc_13258:                               ; preds = %thread-pre-split
  %v2_13258 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_1323c, i32* %r0.global-to-local, align 4
  %v2_13260 = inttoptr i32 %v0_1323c to i32*
  store i32 %v2_13258, i32* %v2_13260, align 4
  %v3_13260 = load i32, i32* %r0.global-to-local, align 4
  %v4_13260 = add i32 %v3_13260, 4
  store i32 %v4_13260, i32* @r0, align 4
  %v2_13264 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_13264, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v3_1326c = call i32 @function_121d0(i32 %v4_13260, i32 %v2_13264, i32 128)
  store i32 %v3_1326c, i32* %r0.global-to-local, align 4
  %v1_13274 = load i32, i32* @r5, align 4
  %v2_13274 = add i32 %v1_13274, 136
  %v3_13274 = inttoptr i32 %v2_13274 to i32*
  %v1_1327c = load i32, i32* @r5, align 4
  %v2_1327c = add i32 %v1_1327c, 132
  %v3_1327c = inttoptr i32 %v2_1327c to i32*
  %v0_13280.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13280

dec_label_pc_13280:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_13258
  %v0_13280 = phi i32 [ %v1_13238, %thread-pre-split ], [ %v0_13280.pre, %dec_label_pc_13258 ], [ %v1_13238, %thread-pre-split.thread ]
  store i32 %v0_13280, i32* %r0.global-to-local, align 4
  store i32 %v3_131b0, i32* @r4, align 4
  store i32 %v6_131b0, i32* @r5, align 4
  ret i32 %v0_13280

; uselistorder directives
  uselistorder i32 %v0_13280, { 1, 0 }
  uselistorder i32 %v0_1323c, { 1, 0, 2 }
  uselistorder i32 %v0_13234, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 2, 7, 1, 0 }
  uselistorder label %dec_label_pc_13280, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_13214, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_1329c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1329c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1329c = load i32, i32* @r4, align 4
  store i32 %v3_1329c, i32* %stack_var_-8, align 4
  %v1_132a0 = load i32, i32* @r1, align 4
  %v2_132a0 = inttoptr i32 %v1_132a0 to %sigaction*
  %v3_132a0 = load i32, i32* @r2, align 4
  %v4_132a0 = inttoptr i32 %v3_132a0 to %sigaction*
  %v5_132a0 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_132a0, %sigaction* %v4_132a0)
  store i32 %v5_132a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_132a0, -4095
  br i1 %tmp, label %dec_label_pc_132c0, label %dec_label_pc_132b0

dec_label_pc_132b0:                               ; preds = %dec_label_pc_1329c
  %v0_132b0 = call i32 @function_12190()
  %v0_132b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_132b4 = sub i32 0, %v0_132b4
  %v2_132b8 = inttoptr i32 %v0_132b0 to i32*
  store i32 %v1_132b4, i32* %v2_132b8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_132c0

dec_label_pc_132c0:                               ; preds = %dec_label_pc_1329c, %dec_label_pc_132b0
  %v0_132c0 = phi i32 [ %v5_132a0, %dec_label_pc_1329c ], [ -1, %dec_label_pc_132b0 ]
  %v2_132c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_132c4, i32* %r4.global-to-local, align 4
  ret i32 %v0_132c0

; uselistorder directives
  uselistorder i32 %v5_132a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132c0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_132c8(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_132c8:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_132f0() local_unnamed_addr {
dec_label_pc_132f0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %tmp4 = bitcast i32* %stack_var_-72 to %stat*
  %v0_13300 = load i32, i32* @r0, align 4
  %v4_13300 = call i32 @fstat(i32 %v0_13300, %stat* %tmp4)
  store i32 %v4_13300, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_13300, -4095
  br i1 %tmp, label %dec_label_pc_13324, label %dec_label_pc_13310

dec_label_pc_13310:                               ; preds = %dec_label_pc_132f0
  %v0_13310 = call i32 @function_12190()
  %v0_13314 = load i32, i32* %r4.global-to-local, align 4
  %v1_13314 = sub i32 0, %v0_13314
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1331c = inttoptr i32 %v0_13310 to i32*
  store i32 %v1_13314, i32* %v2_1331c, align 4
  br label %dec_label_pc_13334

dec_label_pc_13324:                               ; preds = %dec_label_pc_132f0
  %v2_13324 = icmp eq i32 %v4_13300, 0
  store i32 78644, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13324, i32 ptrtoint (i32* @global_var_13a60.810 to i32))
  br label %dec_label_pc_13334

dec_label_pc_13334:                               ; preds = %dec_label_pc_13310, %dec_label_pc_13324
  %v0_13334 = load i32, i32* %r4.global-to-local, align 4
  ret i32 %v0_13334

; uselistorder directives
  uselistorder i32 %v4_13300, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 5, 12, 10, 11, 8, 9, 7, 0, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_13334, { 1, 0 }
}

define i32 @function_13340(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13340:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %v6_13340 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_13348 = call i32 @function_133d4()
  store i32 %v0_13348, i32* %r6.global-to-local, align 4
  %tmp8 = icmp slt i32 %v0_13348, 1
  br i1 %tmp8, label %dec_label_pc_133cc, label %dec_label_pc_133b8.preheader

dec_label_pc_133b8.preheader:                     ; preds = %dec_label_pc_13340
  %v5_13350 = load i32, i32* @r4, align 4
  %v7_13350 = add i32 %v5_13350, %v0_13348
  store i32 %v7_13350, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_133b8

dec_label_pc_1335c:                               ; preds = %dec_label_pc_133b8
  %v1_1335c = add i32 %v2_1336c, 16
  %v2_1335c = inttoptr i32 %v1_1335c to i32*
  %v3_1335c = load i32, i32* %v2_1335c, align 4
  store i32 %v3_1335c, i32* @lr, align 4
  %v2_13360 = inttoptr i32 %v1_133bc to i32*
  %v3_13360 = load i32, i32* %v2_13360, align 4
  store i32 %v3_13360, i32* %r2.global-to-local, align 4
  %v1_13364 = add i32 %v2_1336c, 18
  %v2_13364 = inttoptr i32 %v1_13364 to i8*
  %v3_13364 = load i8, i8* %v2_13364, align 1
  %v4_13364 = zext i8 %v3_13364 to i32
  store i32 %v4_13364, i32* %ip.global-to-local, align 4
  %v3_13368 = sdiv i32 %v3_1335c, 256
  store i32 %v3_13368, i32* %r3.global-to-local, align 4
  %v1_1336c = trunc i32 %v3_1335c to i8
  %v4_1336c = inttoptr i32 %v1_133bc to i8*
  store i8 %v1_1336c, i8* %v4_1336c, align 1
  %v0_13370 = load i32, i32* %r2.global-to-local, align 4
  %v1_13370 = load i32, i32* @r4, align 4
  %v2_13370 = add i32 %v1_13370, 4
  %v3_13370 = inttoptr i32 %v2_13370 to i32*
  store i32 %v0_13370, i32* %v3_13370, align 4
  %v0_13374 = load i32, i32* %ip.global-to-local, align 4
  %v1_13374 = trunc i32 %v0_13374 to i8
  %v2_13374 = load i32, i32* @r4, align 4
  %v3_13374 = add i32 %v2_13374, 10
  %v4_13374 = inttoptr i32 %v3_13374 to i8*
  store i8 %v1_13374, i8* %v4_13374, align 1
  %v0_13378 = load i32, i32* %r3.global-to-local, align 4
  %v1_13378 = trunc i32 %v0_13378 to i8
  %v2_13378 = load i32, i32* @r4, align 4
  %v3_13378 = add i32 %v2_13378, 9
  %v4_13378 = inttoptr i32 %v3_13378 to i8*
  store i8 %v1_13378, i8* %v4_13378, align 1
  %v0_1337c = load i32, i32* @r4, align 4
  %v1_1337c = add i32 %v0_1337c, 8
  %v2_1337c = inttoptr i32 %v1_1337c to i8*
  %v3_1337c = load i8, i8* %v2_1337c, align 1
  %v4_1337c = zext i8 %v3_1337c to i32
  store i32 %v4_1337c, i32* %r2.global-to-local, align 4
  %v0_13380 = load i32, i32* @r5, align 4
  %v1_13380 = add i32 %v0_13380, 1
  %v2_13380 = inttoptr i32 %v1_13380 to i8*
  %v3_13380 = load i8, i8* %v2_13380, align 1
  %v4_13380 = zext i8 %v3_13380 to i32
  store i32 %v4_13380, i32* %r3.global-to-local, align 4
  %v4_13384 = mul nuw nsw i32 %v4_13380, 256
  %v5_13384 = or i32 %v4_13384, %v4_1337c
  %v1_13388 = add nsw i32 %v5_13384, -19
  store i32 %v1_13388, i32* @r2, align 4
  %v3_1338c = call i32 @function_121e0(i32 %v1_133c4, i32 %v1_133c0, i32 %v1_13388)
  %v0_13390 = load i32, i32* @r4, align 4
  %v1_13390 = add i32 %v0_13390, 8
  %v2_13390 = inttoptr i32 %v1_13390 to i8*
  %v3_13390 = load i8, i8* %v2_13390, align 1
  %v4_13390 = zext i8 %v3_13390 to i32
  store i32 %v4_13390, i32* %r3.global-to-local, align 4
  %v0_13394 = load i32, i32* @r5, align 4
  %v1_13394 = add i32 %v0_13394, 1
  %v2_13394 = inttoptr i32 %v1_13394 to i8*
  %v3_13394 = load i8, i8* %v2_13394, align 1
  %v4_13394 = zext i8 %v3_13394 to i32
  store i32 %v0_13390, i32* @r0, align 4
  %v4_1339c = mul nuw nsw i32 %v4_13394, 256
  %v5_1339c = or i32 %v4_1339c, %v4_13390
  store i32 %v5_1339c, i32* @r2, align 4
  store i32 %v0_13390, i32* @r1, align 4
  %v3_133a4 = call i32 @function_121e0(i32 %v0_13390, i32 %v0_13390, i32 %v5_1339c)
  %v0_133a8 = load i32, i32* @r4, align 4
  %v1_133a8 = add i32 %v0_133a8, 8
  %v2_133a8 = inttoptr i32 %v1_133a8 to i8*
  %v3_133a8 = load i8, i8* %v2_133a8, align 1
  %v4_133a8 = zext i8 %v3_133a8 to i32
  store i32 %v4_133a8, i32* %r3.global-to-local, align 4
  %v0_133ac = load i32, i32* @r5, align 4
  %v1_133ac = add i32 %v0_133ac, 1
  %v2_133ac = inttoptr i32 %v1_133ac to i8*
  %v3_133ac = load i8, i8* %v2_133ac, align 1
  %v4_133ac = zext i8 %v3_133ac to i32
  store i32 %v4_133ac, i32* @r2, align 4
  %v4_133b0 = mul nuw nsw i32 %v4_133ac, 256
  %v5_133b0 = or i32 %v4_133b0, %v4_133a8
  store i32 %v5_133b0, i32* %r3.global-to-local, align 4
  %v2_133b4 = add i32 %v5_133b0, %v0_133a8
  store i32 %v2_133b4, i32* @r4, align 4
  %v1_133b8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_133b8

dec_label_pc_133b8:                               ; preds = %dec_label_pc_133b8.preheader, %dec_label_pc_1335c
  %v1_133b8 = phi i32 [ %v7_13350, %dec_label_pc_133b8.preheader ], [ %v1_133b8.pre, %dec_label_pc_1335c ]
  %v2_1336c = phi i32 [ %v5_13350, %dec_label_pc_133b8.preheader ], [ %v2_133b4, %dec_label_pc_1335c ]
  %v3_133b8 = icmp ult i32 %v2_1336c, %v1_133b8
  %v1_133bc = add i32 %v2_1336c, 8
  store i32 %v1_133bc, i32* @r5, align 4
  %v1_133c0 = add i32 %v2_1336c, 19
  store i32 %v1_133c0, i32* @r1, align 4
  %v1_133c4 = add i32 %v2_1336c, 11
  store i32 %v1_133c4, i32* @r0, align 4
  br i1 %v3_133b8, label %dec_label_pc_1335c, label %dec_label_pc_133cc.loopexit

dec_label_pc_133cc.loopexit:                      ; preds = %dec_label_pc_133b8
  %v0_133cc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_133cc

dec_label_pc_133cc:                               ; preds = %dec_label_pc_13340, %dec_label_pc_133cc.loopexit
  %v0_133cc = phi i32 [ %v0_133cc.pre, %dec_label_pc_133cc.loopexit ], [ %v0_13348, %dec_label_pc_13340 ]
  store i32 %v6_13340, i32* @r5, align 4
  ret i32 %v0_133cc

; uselistorder directives
  uselistorder i32 %v1_133c4, { 1, 0 }
  uselistorder i32 %v1_133c0, { 1, 0 }
  uselistorder i32 %v1_133bc, { 2, 1, 0 }
  uselistorder i32 %v2_1336c, { 4, 3, 2, 5, 1, 0 }
  uselistorder i32 %v0_13390, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v3_1335c, { 1, 0, 2 }
  uselistorder i32 %v5_13350, { 1, 0 }
  uselistorder i32 %v0_13348, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @function_121e0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_133cc, { 1, 0 }
  uselistorder label %dec_label_pc_133b8, { 1, 0 }
}

define i32 @function_133d4() local_unnamed_addr {
dec_label_pc_133d4:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_133d8 = load i32, i32* @r4, align 4
  %v9_133d8 = load i32, i32* @r6, align 4
  %v0_133dc = load i32, i32* @r2, align 4
  %v1_133dc = add i32 %v0_133dc, 6
  %v2_133e4 = ptrtoint i32* %stack_var_-60 to i32
  %v1_133e8 = and i32 %v1_133dc, -4
  store i32 %v1_133e8, i32* %r3.global-to-local, align 4
  %v2_133ec = sub i32 %v2_133e4, %v1_133e8
  %v0_133f0 = load i32, i32* @r1, align 4
  store i32 %v0_133f0, i32* %r8.global-to-local, align 4
  store i32 %v0_133dc, i32* %stack_var_-60, align 4
  store i32 %v2_133ec, i32* %sl.global-to-local, align 4
  %v0_133fc = load i32, i32* @r0, align 4
  %v1_13400 = inttoptr i32 %v2_133ec to %linux_dirent64*
  store i32 %v2_133ec, i32* %r1.global-to-local, align 4
  %v5_13404 = call i32 @getdents64(i32 %v0_133fc, %linux_dirent64* %v1_13400, i32 %v0_133dc)
  store i32 %v5_13404, i32* @r6, align 4
  %tmp = icmp ult i32 %v5_13404, -4095
  br i1 %tmp, label %dec_label_pc_13428, label %dec_label_pc_13414

dec_label_pc_13414:                               ; preds = %dec_label_pc_133d4
  %v0_13414 = call i32 @function_12190()
  %v0_13418 = load i32, i32* @r6, align 4
  %v1_13418 = sub i32 0, %v0_13418
  store i32 %v1_13418, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_13420 = inttoptr i32 %v0_13414 to i32*
  store i32 %v1_13418, i32* %v2_13420, align 4
  %v0_13430.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13430

dec_label_pc_13428:                               ; preds = %dec_label_pc_133d4
  br i1 false, label %dec_label_pc_13430, label %dec_label_pc_13438

dec_label_pc_13430:                               ; preds = %dec_label_pc_13428, %dec_label_pc_13414
  %v0_13430 = phi i32 [ -1, %dec_label_pc_13428 ], [ %v0_13430.pre, %dec_label_pc_13414 ]
  store i32 %v0_13430, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1352c

dec_label_pc_13438:                               ; preds = %dec_label_pc_13428
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_13440 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13440, i32* @r5, align 4
  %v0_13444 = load i32, i32* @sp, align 4
  store i32 %v0_13444, i32* @r4, align 4
  br label %dec_label_pc_13508

dec_label_pc_13454:                               ; preds = %dec_label_pc_13508
  %v2_13520 = add i32 %v3_1350c, %v0_13520
  %v1_13454 = add i32 %v0_13458, 17
  %v2_13454 = inttoptr i32 %v1_13454 to i8*
  %v3_13454 = load i8, i8* %v2_13454, align 1
  %v4_13454 = zext i8 %v3_13454 to i32
  %v2_13458 = inttoptr i32 %v1_13514 to i8*
  %v3_13458 = load i8, i8* %v2_13458, align 1
  %v4_13458 = zext i8 %v3_13458 to i32
  %v4_1345c = mul nuw nsw i32 %v4_13454, 256
  %v5_1345c = or i32 %v4_13458, %v4_1345c
  %v1_13460 = add nuw nsw i32 %v5_1345c, 3
  %v1_13464 = and i32 %v1_13460, 131068
  store i32 %v1_13464, i32* %r3.global-to-local, align 4
  %v2_13468 = add i32 %v1_13464, %v2_134a8
  store i32 %v2_13468, i32* %sb.global-to-local, align 4
  %v9_1346c = icmp eq i32 %v2_13468, %v2_13520
  %v1_13470 = and i32 %v1_13460, 128
  %v2_13474 = icmp eq i32 %v1_13470, 0
  %v3_13474 = or i1 %v9_1346c, %v2_13474
  br i1 %v3_13474, label %dec_label_pc_134a8, label %dec_label_pc_13478

dec_label_pc_13478:                               ; preds = %dec_label_pc_13454
  store i32 %stack_var_-52.0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_13488 = call i32 @function_135e8(i32 %v0_133fc, i32 %stack_var_-52.0, i32 %stack_var_-48.0, i32 0)
  %v0_1348c = load i32, i32* @r5, align 4
  %v1_1348c = load i32, i32* %r8.global-to-local, align 4
  %v9_1348c = icmp eq i32 %v0_1348c, %v1_1348c
  br i1 %v9_1348c, label %dec_label_pc_13494, label %dec_label_pc_13528

dec_label_pc_13494:                               ; preds = %dec_label_pc_13478
  %v0_13494 = call i32 @function_12190()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_134a0 = inttoptr i32 %v0_13494 to i32*
  store i32 22, i32* %v2_134a0, align 4
  %v0_1352c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1352c

dec_label_pc_134a8:                               ; preds = %dec_label_pc_13454
  %v3_1347011 = udiv i32 %v1_13460, 256
  %v1_134a8 = trunc i32 %v3_1347011 to i8
  %v3_134a8 = add i32 %v2_134a8, 17
  %v4_134a8 = inttoptr i32 %v3_134a8 to i8*
  store i8 %v1_134a8, i8* %v4_134a8, align 1
  %v0_134ac = load i32, i32* %r3.global-to-local, align 4
  %v1_134ac = trunc i32 %v0_134ac to i8
  %v2_134ac = load i32, i32* @r5, align 4
  %v3_134ac = add i32 %v2_134ac, 16
  %v4_134ac = inttoptr i32 %v3_134ac to i8*
  store i8 %v1_134ac, i8* %v4_134ac, align 1
  %v0_134b0 = load i32, i32* @r4, align 4
  %v1_134b0 = add i32 %v0_134b0, 8
  %v1_134b4 = inttoptr i32 %v1_134b0 to i32*
  %v2_134b4 = load i32, i32* %v1_134b4, align 4
  %v3_134b4 = add i32 %v0_134b0, 12
  %v4_134b4 = inttoptr i32 %v3_134b4 to i32*
  %v5_134b4 = load i32, i32* %v4_134b4, align 4
  store i32 %v5_134b4, i32* %r3.global-to-local, align 4
  %v1_134c0 = inttoptr i32 %v0_134b0 to i32*
  %v2_134c0 = load i32, i32* %v1_134c0, align 4
  %v3_134c0 = add i32 %v0_134b0, 4
  %v4_134c0 = inttoptr i32 %v3_134c0 to i32*
  %v5_134c0 = load i32, i32* %v4_134c0, align 4
  store i32 %v5_134c0, i32* %r3.global-to-local, align 4
  %v0_134c4 = load i32, i32* @r5, align 4
  %v1_134c4 = inttoptr i32 %v0_134c4 to i32*
  store i32 %v2_134c0, i32* %v1_134c4, align 4
  %v3_134c4 = add i32 %v0_134c4, 4
  %v4_134c4 = inttoptr i32 %v3_134c4 to i32*
  %v5_134c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_134c4, i32* %v4_134c4, align 4
  %v0_134c8 = load i32, i32* @r4, align 4
  %v1_134c8 = add i32 %v0_134c8, 8
  %v1_134cc = inttoptr i32 %v1_134c8 to i32*
  %v2_134cc = load i32, i32* %v1_134cc, align 4
  %v3_134cc = add i32 %v0_134c8, 12
  %v4_134cc = inttoptr i32 %v3_134cc to i32*
  %v5_134cc = load i32, i32* %v4_134cc, align 4
  store i32 %v5_134cc, i32* %r3.global-to-local, align 4
  %v1_134d0 = load i32, i32* @r5, align 4
  %v2_134d0 = add i32 %v1_134d0, 8
  %v3_134d0 = inttoptr i32 %v2_134d0 to i32*
  store i32 %v2_134cc, i32* %v3_134d0, align 4
  %v0_134d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_134d4 = load i32, i32* @r5, align 4
  %v2_134d4 = add i32 %v1_134d4, 12
  %v3_134d4 = inttoptr i32 %v2_134d4 to i32*
  store i32 %v0_134d4, i32* %v3_134d4, align 4
  %v0_134d8 = load i32, i32* @r4, align 4
  %v1_134d8 = add i32 %v0_134d8, 18
  %v2_134d8 = inttoptr i32 %v1_134d8 to i8*
  %v3_134d8 = load i8, i8* %v2_134d8, align 1
  %v4_134d8 = zext i8 %v3_134d8 to i32
  store i32 %v4_134d8, i32* %r3.global-to-local, align 4
  %v2_134dc = load i32, i32* @r5, align 4
  %v3_134dc = add i32 %v2_134dc, 18
  %v4_134dc = inttoptr i32 %v3_134dc to i8*
  store i8 %v3_134d8, i8* %v4_134dc, align 1
  %v0_134e0 = load i32, i32* @r4, align 4
  %v1_134e0 = add i32 %v0_134e0, 16
  %v2_134e0 = inttoptr i32 %v1_134e0 to i8*
  %v3_134e0 = load i8, i8* %v2_134e0, align 1
  %v4_134e0 = zext i8 %v3_134e0 to i32
  %v0_134e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_134e4 = add i32 %v0_134e4, 1
  %v2_134e4 = inttoptr i32 %v1_134e4 to i8*
  %v3_134e4 = load i8, i8* %v2_134e4, align 1
  %v4_134e4 = zext i8 %v3_134e4 to i32
  store i32 %v4_134e4, i32* %r3.global-to-local, align 4
  %v4_134e8 = mul nuw nsw i32 %v4_134e4, 256
  %v5_134e8 = or i32 %v4_134e8, %v4_134e0
  %v1_134ec = add nsw i32 %v5_134e8, -19
  store i32 %v1_134ec, i32* @r2, align 4
  %v3_134f0 = call i32 @function_121d0(i32 %v1_13518, i32 %v1_1351c, i32 %v1_134ec)
  %v0_134f4 = load i32, i32* @r4, align 4
  %v1_134f4 = add i32 %v0_134f4, 16
  %v2_134f4 = inttoptr i32 %v1_134f4 to i8*
  %v3_134f4 = load i8, i8* %v2_134f4, align 1
  %v4_134f4 = zext i8 %v3_134f4 to i32
  store i32 %v4_134f4, i32* %r3.global-to-local, align 4
  %v0_134f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_134f8 = add i32 %v0_134f8, 1
  %v2_134f8 = inttoptr i32 %v1_134f8 to i8*
  %v3_134f8 = load i8, i8* %v2_134f8, align 1
  %v4_134f8 = zext i8 %v3_134f8 to i32
  %v4_134fc = mul nuw nsw i32 %v4_134f8, 256
  %v5_134fc = or i32 %v4_134fc, %v4_134f4
  store i32 %v5_134fc, i32* %r3.global-to-local, align 4
  %v2_13500 = add i32 %v5_134fc, %v0_134f4
  store i32 %v2_13500, i32* @r4, align 4
  %v0_13504 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13504, i32* @r5, align 4
  %v1_13508.pre = load i32, i32* @r6, align 4
  %v0_13520.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_13508:                               ; preds = %dec_label_pc_13438, %dec_label_pc_134a8
  %stack_var_-52.0 = phi i32 [ -1, %dec_label_pc_13438 ], [ %v2_134b4, %dec_label_pc_134a8 ]
  %v0_13520 = phi i32 [ %v0_13440, %dec_label_pc_13438 ], [ %v0_13520.pre, %dec_label_pc_134a8 ]
  %v2_134a8 = phi i32 [ %v0_13440, %dec_label_pc_13438 ], [ %v0_13504, %dec_label_pc_134a8 ]
  %v0_13458 = phi i32 [ %v0_13444, %dec_label_pc_13438 ], [ %v2_13500, %dec_label_pc_134a8 ]
  %v1_13508 = phi i32 [ %v5_13404, %dec_label_pc_13438 ], [ %v1_13508.pre, %dec_label_pc_134a8 ]
  %stack_var_-48.0 = phi i32 [ -1, %dec_label_pc_13438 ], [ %v5_134b4, %dec_label_pc_134a8 ]
  %v0_13508 = load i32, i32* %sl.global-to-local, align 4
  %v2_13508 = add i32 %v0_13508, %v1_13508
  store i32 %v2_13508, i32* %r3.global-to-local, align 4
  %v3_1350c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1350c, i32* @r2, align 4
  %v3_13510 = icmp ult i32 %v0_13458, %v2_13508
  %v1_13514 = add i32 %v0_13458, 16
  store i32 %v1_13514, i32* %r7.global-to-local, align 4
  %v1_13518 = add i32 %v2_134a8, 19
  store i32 %v1_13518, i32* @r0, align 4
  %v1_1351c = add i32 %v0_13458, 19
  store i32 %v1_1351c, i32* @r1, align 4
  br i1 %v3_13510, label %dec_label_pc_13454, label %dec_label_pc_13528

dec_label_pc_13528:                               ; preds = %dec_label_pc_13508, %dec_label_pc_13478
  %v1_13528 = phi i32 [ %v0_1348c, %dec_label_pc_13478 ], [ %v2_134a8, %dec_label_pc_13508 ]
  %v0_13528 = phi i32 [ %v1_1348c, %dec_label_pc_13478 ], [ %v0_13520, %dec_label_pc_13508 ]
  %v2_13528 = sub i32 %v1_13528, %v0_13528
  store i32 %v2_13528, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1352c

dec_label_pc_1352c:                               ; preds = %dec_label_pc_13494, %dec_label_pc_13430, %dec_label_pc_13528
  %v0_1352c = phi i32 [ %v0_1352c.pre, %dec_label_pc_13494 ], [ %v0_13430, %dec_label_pc_13430 ], [ %v2_13528, %dec_label_pc_13528 ]
  store i32 %v3_133d8, i32* @r4, align 4
  store i32 %v9_133d8, i32* %r6.global-to-local, align 4
  ret i32 %v0_1352c

; uselistorder directives
  uselistorder i32 %v1_1351c, { 1, 0 }
  uselistorder i32 %v1_13518, { 1, 0 }
  uselistorder i32 %v1_13514, { 1, 0 }
  uselistorder i32 %v3_1350c, { 1, 0 }
  uselistorder i32 %v0_13458, { 2, 1, 3, 0 }
  uselistorder i32 %v2_134a8, { 0, 3, 1, 2 }
  uselistorder i32 %v0_134b0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13440, { 1, 0, 2 }
  uselistorder i32 %v5_13404, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @function_121d0, { 4, 1, 0, 3, 6, 5, 2 }
  uselistorder i32 128, { 4, 5, 24, 6, 25, 9, 10, 11, 20, 0, 21, 12, 13, 14, 15, 16, 17, 1, 18, 2, 19, 3, 7, 8, 22, 23 }
  uselistorder i32* @sp, { 2, 3, 1, 4, 0 }
  uselistorder i32* @r6, { 3, 75, 76, 77, 78, 79, 107, 108, 109, 110, 111, 112, 113, 115, 114, 266, 267, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 116, 117, 19, 18, 20, 21, 22, 23, 24, 118, 119, 120, 121, 122, 123, 124, 125, 131, 132, 126, 127, 128, 129, 130, 4, 25, 2, 26, 27, 1, 28, 29, 0, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 98, 99, 100, 101, 7, 102, 103, 104, 5, 105, 106, 135, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 173, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 6, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 279, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 59, 60 }
  uselistorder label %dec_label_pc_1352c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13508, { 1, 0 }
}

define i32 @function_13538() local_unnamed_addr {
dec_label_pc_13538:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13538 = load i32, i32* @r4, align 4
  store i32 %v3_13538, i32* %stack_var_-8, align 4
  %v0_13540 = load i32, i32* @r0, align 4
  store i32 %v0_13540, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13540, -4095
  br i1 %tmp, label %dec_label_pc_1355c, label %dec_label_pc_1354c

dec_label_pc_1354c:                               ; preds = %dec_label_pc_13538
  %v0_1354c = call i32 @function_12190()
  %v0_13550 = load i32, i32* %r4.global-to-local, align 4
  %v1_13550 = sub i32 0, %v0_13550
  %v2_13554 = inttoptr i32 %v0_1354c to i32*
  store i32 %v1_13550, i32* %v2_13554, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13560.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1355c

dec_label_pc_1355c:                               ; preds = %dec_label_pc_13538, %dec_label_pc_1354c
  %v2_13560 = phi i32 [ %v3_13538, %dec_label_pc_13538 ], [ %v2_13560.pre, %dec_label_pc_1354c ]
  %v0_1355c = phi i32 [ %v0_13540, %dec_label_pc_13538 ], [ -1, %dec_label_pc_1354c ]
  store i32 %v2_13560, i32* @r4, align 4
  ret i32 %v0_1355c

; uselistorder directives
  uselistorder i32 %v0_13540, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1355c, { 1, 0 }
}

define i32 @function_13564() local_unnamed_addr {
dec_label_pc_13564:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13564 = load i32, i32* @r4, align 4
  store i32 %v3_13564, i32* %stack_var_-8, align 4
  %v0_1356c = load i32, i32* @r0, align 4
  store i32 %v0_1356c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1356c, -4095
  br i1 %tmp, label %dec_label_pc_13588, label %dec_label_pc_13578

dec_label_pc_13578:                               ; preds = %dec_label_pc_13564
  %v0_13578 = call i32 @function_12190()
  %v0_1357c = load i32, i32* %r4.global-to-local, align 4
  %v1_1357c = sub i32 0, %v0_1357c
  %v2_13580 = inttoptr i32 %v0_13578 to i32*
  store i32 %v1_1357c, i32* %v2_13580, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1358c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13588

dec_label_pc_13588:                               ; preds = %dec_label_pc_13564, %dec_label_pc_13578
  %v2_1358c = phi i32 [ %v3_13564, %dec_label_pc_13564 ], [ %v2_1358c.pre, %dec_label_pc_13578 ]
  %v0_13588 = phi i32 [ %v0_1356c, %dec_label_pc_13564 ], [ -1, %dec_label_pc_13578 ]
  store i32 %v2_1358c, i32* @r4, align 4
  ret i32 %v0_13588

; uselistorder directives
  uselistorder i32 %v0_1356c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13588, { 1, 0 }
}

define i32 @function_13590(i32 %arg1) local_unnamed_addr {
dec_label_pc_13590:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13590 = load i32, i32* @r4, align 4
  store i32 %v3_13590, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_135b4, label %dec_label_pc_135a4

dec_label_pc_135a4:                               ; preds = %dec_label_pc_13590
  %v0_135a4 = call i32 @function_12190()
  %v0_135a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_135a8 = sub i32 0, %v0_135a8
  %v2_135ac = inttoptr i32 %v0_135a4 to i32*
  store i32 %v1_135a8, i32* %v2_135ac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_135b8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_135b4

dec_label_pc_135b4:                               ; preds = %dec_label_pc_13590, %dec_label_pc_135a4
  %v2_135b8 = phi i32 [ %v3_13590, %dec_label_pc_13590 ], [ %v2_135b8.pre, %dec_label_pc_135a4 ]
  %v0_135b4 = phi i32 [ %arg1, %dec_label_pc_13590 ], [ -1, %dec_label_pc_135a4 ]
  store i32 %v2_135b8, i32* %r4.global-to-local, align 4
  ret i32 %v0_135b4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_135b4, { 1, 0 }
}

define i32 @function_135bc() local_unnamed_addr {
dec_label_pc_135bc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_135bc = load i32, i32* @r4, align 4
  store i32 %v3_135bc, i32* %stack_var_-8, align 4
  %v0_135c4 = load i32, i32* @r0, align 4
  store i32 %v0_135c4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_135c4, -4095
  br i1 %tmp, label %dec_label_pc_135e0, label %dec_label_pc_135d0

dec_label_pc_135d0:                               ; preds = %dec_label_pc_135bc
  %v0_135d0 = call i32 @function_12190()
  %v0_135d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_135d4 = sub i32 0, %v0_135d4
  %v2_135d8 = inttoptr i32 %v0_135d0 to i32*
  store i32 %v1_135d4, i32* %v2_135d8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_135e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_135e0

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135bc, %dec_label_pc_135d0
  %v2_135e4 = phi i32 [ %v3_135bc, %dec_label_pc_135bc ], [ %v2_135e4.pre, %dec_label_pc_135d0 ]
  %v0_135e0 = phi i32 [ %v0_135c4, %dec_label_pc_135bc ], [ -1, %dec_label_pc_135d0 ]
  store i32 %v2_135e4, i32* %r4.global-to-local, align 4
  ret i32 %v0_135e0

; uselistorder directives
  uselistorder i32 %v0_135c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_135e0, { 1, 0 }
}

define i32 @function_135e8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_135e8:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1362c, label %dec_label_pc_13618

dec_label_pc_13618:                               ; preds = %dec_label_pc_135e8
  %v0_13618 = call i32 @function_12190()
  %v0_1361c = load i32, i32* %r4.global-to-local, align 4
  %v1_1361c = sub i32 0, %v0_1361c
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13624 = inttoptr i32 %v0_13618 to i32*
  store i32 %v1_1361c, i32* %v2_13624, align 4
  %v0_13634.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13634

dec_label_pc_1362c:                               ; preds = %dec_label_pc_135e8
  %v2_1362c = icmp eq i32 %arg1, 0
  br i1 %v2_1362c, label %dec_label_pc_13640, label %dec_label_pc_13634

dec_label_pc_13634:                               ; preds = %dec_label_pc_1362c, %dec_label_pc_13618
  %v0_13634 = phi i32 [ %arg1, %dec_label_pc_1362c ], [ %v0_13634.pre, %dec_label_pc_13618 ]
  br label %dec_label_pc_13644

dec_label_pc_13640:                               ; preds = %dec_label_pc_1362c
  br label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_13634, %dec_label_pc_13640
  %v14_13648 = phi i32 [ %v0_13634, %dec_label_pc_13634 ], [ %tmp9, %dec_label_pc_13640 ]
  ret i32 %v14_13648

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13644, { 1, 0 }
}

define i32 @function_1364c(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1364c:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_1364c = load i32, i32* @r4, align 4
  store i32 %v3_1364c, i32* %stack_var_-8, align 4
  %v6_13650 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_13650, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_13650, -4095
  br i1 %tmp6, label %dec_label_pc_13670, label %dec_label_pc_13660

dec_label_pc_13660:                               ; preds = %dec_label_pc_1364c
  %v0_13660 = call i32 @function_12190()
  %v0_13664 = load i32, i32* %r4.global-to-local, align 4
  %v1_13664 = sub i32 0, %v0_13664
  %v2_13668 = inttoptr i32 %v0_13660 to i32*
  store i32 %v1_13664, i32* %v2_13668, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13670

dec_label_pc_13670:                               ; preds = %dec_label_pc_1364c, %dec_label_pc_13660
  %v0_13670 = phi i32 [ %v6_13650, %dec_label_pc_1364c ], [ -1, %dec_label_pc_13660 ]
  %v2_13674 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13674, i32* %r4.global-to-local, align 4
  ret i32 %v0_13670

; uselistorder directives
  uselistorder i32 %v6_13650, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13670, { 1, 0 }
}

define i32 @function_13678(i32 %arg1) local_unnamed_addr {
dec_label_pc_13678:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13678 = load i32, i32* @r4, align 4
  store i32 %v3_13678, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_1d254.812 to i32), i32* %r4.global-to-local, align 4
  %v2_13680 = load i32, i32* @global_var_1d254.812, align 4
  %v2_13684 = icmp eq i32 %v2_13680, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_13684, label %dec_label_pc_13694, label %dec_label_pc_136a0

dec_label_pc_13694:                               ; preds = %dec_label_pc_13678
  %v2_13694 = call i32 @function_14154(i32* null)
  %v1_13698 = icmp slt i32 %v2_13694, 0
  br i1 %v1_13698, label %dec_label_pc_136c0, label %dec_label_pc_136a0thread-pre-split

dec_label_pc_136a0thread-pre-split:               ; preds = %dec_label_pc_13694
  %v0_136a4.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_136a0.pre = load i32, i32* @global_var_1d254.812, align 4
  br label %dec_label_pc_136a0

dec_label_pc_136a0:                               ; preds = %dec_label_pc_136a0thread-pre-split, %dec_label_pc_13678
  %v2_136a0 = phi i32 [ %v2_136a0.pre, %dec_label_pc_136a0thread-pre-split ], [ %v2_13680, %dec_label_pc_13678 ]
  %v1_136ac = phi i32 [ %v0_136a4.pr, %dec_label_pc_136a0thread-pre-split ], [ %arg1, %dec_label_pc_13678 ]
  %v2_136a4 = icmp eq i32 %v1_136ac, 0
  store i32 %v2_136a0, i32* %r4.global-to-local, align 4
  br i1 %v2_136a4, label %dec_label_pc_136c4, label %dec_label_pc_136b4

dec_label_pc_136b4:                               ; preds = %dec_label_pc_136a0
  %v2_136ac = add i32 %v1_136ac, %v2_136a0
  %v1_136b4 = inttoptr i32 %v2_136ac to i32*
  %v2_136b4 = call i32 @function_14154(i32* %v1_136b4)
  %v1_136b8 = icmp slt i32 %v2_136b4, 0
  br i1 %v1_136b8, label %dec_label_pc_136c0, label %dec_label_pc_136b4.dec_label_pc_136c4_crit_edge

dec_label_pc_136b4.dec_label_pc_136c4_crit_edge:  ; preds = %dec_label_pc_136b4
  %v0_136c4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_136c4

dec_label_pc_136c0:                               ; preds = %dec_label_pc_136b4, %dec_label_pc_13694
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_136c4

dec_label_pc_136c4:                               ; preds = %dec_label_pc_136b4.dec_label_pc_136c4_crit_edge, %dec_label_pc_136a0, %dec_label_pc_136c0
  %v0_136c4 = phi i32 [ %v0_136c4.pre, %dec_label_pc_136b4.dec_label_pc_136c4_crit_edge ], [ %v2_136a0, %dec_label_pc_136a0 ], [ -1, %dec_label_pc_136c0 ]
  %v2_136c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_136c8, i32* @r4, align 4
  ret i32 %v0_136c4

; uselistorder directives
  uselistorder i32 %v2_136a0, { 1, 0, 2 }
  uselistorder i32* null, { 0, 3, 5, 29, 30, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28 }
  uselistorder label %dec_label_pc_136c4, { 2, 0, 1 }
}

define i32 @function_136d0(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_136d0:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136d0 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_136d0, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_136d0
  %v3_136d85 = load i32, i32* @r4, align 4
  store i32 %v3_136d85, i32* %stack_var_-8, align 4
  br label %dec_label_pc_136f8

bb:                                               ; preds = %dec_label_pc_136d0
  %v3_136d8 = load i32, i32* @r4, align 4
  store i32 %v3_136d8, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_136f8, label %dec_label_pc_136e4

dec_label_pc_136e4:                               ; preds = %bb
  %v0_136e4 = call i32 @function_12190()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_136f0 = inttoptr i32 %v0_136e4 to i32*
  store i32 22, i32* %v2_136f0, align 4
  %v0_1371c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1371c

dec_label_pc_136f8:                               ; preds = %.thread, %bb
  %v7_136f8 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_136f8, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_136f8, -4095
  br i1 %tmp13, label %dec_label_pc_13718, label %dec_label_pc_13708

dec_label_pc_13708:                               ; preds = %dec_label_pc_136f8
  %v0_13708 = call i32 @function_12190()
  %v0_1370c = load i32, i32* %r4.global-to-local, align 4
  %v1_1370c = sub i32 0, %v0_1370c
  %v2_13710 = inttoptr i32 %v0_13708 to i32*
  store i32 %v1_1370c, i32* %v2_13710, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13718

dec_label_pc_13718:                               ; preds = %dec_label_pc_136f8, %dec_label_pc_13708
  %v0_13718 = phi i32 [ %v7_136f8, %dec_label_pc_136f8 ], [ -1, %dec_label_pc_13708 ]
  store i32 %v0_13718, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1371c

dec_label_pc_1371c:                               ; preds = %dec_label_pc_136e4, %dec_label_pc_13718
  %v0_1371c = phi i32 [ %v0_1371c.pre, %dec_label_pc_136e4 ], [ %v0_13718, %dec_label_pc_13718 ]
  %v2_13720 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13720, i32* @r4, align 4
  ret i32 %v0_1371c

; uselistorder directives
  uselistorder i32 %v7_136f8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1371c, { 1, 0 }
  uselistorder label %dec_label_pc_13718, { 1, 0 }
  uselistorder label %dec_label_pc_136f8, { 1, 0 }
}

define i32 @function_13724(%tms* %arg1) local_unnamed_addr {
dec_label_pc_13724:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13724 = load i32, i32* @r4, align 4
  store i32 %v3_13724, i32* %stack_var_-8, align 4
  %v3_13728 = call i32 @times(%tms* %arg1)
  store i32 %v3_13728, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_13728, -4095
  br i1 %tmp, label %dec_label_pc_13748, label %dec_label_pc_13738

dec_label_pc_13738:                               ; preds = %dec_label_pc_13724
  %v0_13738 = call i32 @function_12190()
  %v0_1373c = load i32, i32* %r4.global-to-local, align 4
  %v1_1373c = sub i32 0, %v0_1373c
  %v2_13740 = inttoptr i32 %v0_13738 to i32*
  store i32 %v1_1373c, i32* %v2_13740, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13748

dec_label_pc_13748:                               ; preds = %dec_label_pc_13724, %dec_label_pc_13738
  %v0_13748 = phi i32 [ %v3_13728, %dec_label_pc_13724 ], [ -1, %dec_label_pc_13738 ]
  %v2_1374c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1374c, i32* %r4.global-to-local, align 4
  ret i32 %v0_13748

; uselistorder directives
  uselistorder i32 %v3_13728, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13748, { 1, 0 }
}

define i32 @function_13750(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13750:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 96, i32* @r2, align 4
  %v2_1376c = inttoptr i32 %arg2 to i8*
  %v3_1376c = call i32 @function_121f0(i8* %v2_1376c, i32 0)
  %v1_13770 = add i32 %tmp, 1
  %v2_13770 = inttoptr i32 %v1_13770 to i8*
  %v3_13770 = load i8, i8* %v2_13770, align 1
  %v4_13770 = zext i8 %v3_13770 to i32
  %v1_13774 = add i32 %tmp, 5
  %v2_13774 = inttoptr i32 %v1_13774 to i8*
  %v3_13774 = load i8, i8* %v2_13774, align 1
  %v4_13774 = zext i8 %v3_13774 to i32
  %v2_13778 = load i8, i8* %arg1, align 1
  %v3_13778 = zext i8 %v2_13778 to i32
  %v1_1377c = add i32 %tmp, 4
  %v2_1377c = inttoptr i32 %v1_1377c to i8*
  %v3_1377c = load i8, i8* %v2_1377c, align 1
  %v4_1377c = zext i8 %v3_1377c to i32
  %v1_13780 = add i32 %tmp, 2
  %v2_13780 = inttoptr i32 %v1_13780 to i8*
  %v3_13780 = load i8, i8* %v2_13780, align 1
  %v4_13780 = zext i8 %v3_13780 to i32
  %v1_13784 = add i32 %tmp, 6
  %v2_13784 = inttoptr i32 %v1_13784 to i8*
  %v3_13784 = load i8, i8* %v2_13784, align 1
  %v4_13784 = zext i8 %v3_13784 to i32
  %v1_13788 = add i32 %tmp, 3
  %v2_13788 = inttoptr i32 %v1_13788 to i8*
  %v3_13788 = load i8, i8* %v2_13788, align 1
  %v4_13788 = zext i8 %v3_13788 to i32
  %v4_1378c = mul nuw nsw i32 %v4_13770, 256
  %v5_1378c = or i32 %v3_13778, %v4_1378c
  %v4_13790 = mul nuw nsw i32 %v4_13774, 256
  %v5_13790 = or i32 %v4_1377c, %v4_13790
  %v1_13794 = add i32 %tmp, 7
  %v2_13794 = inttoptr i32 %v1_13794 to i8*
  %v3_13794 = load i8, i8* %v2_13794, align 1
  %v4_13794 = zext i8 %v3_13794 to i32
  %v4_13798 = mul nuw nsw i32 %v4_13780, 65536
  %v5_13798 = or i32 %v4_13798, %v5_1378c
  %v4_1379c = mul nuw nsw i32 %v4_13784, 65536
  %v5_1379c = or i32 %v4_1379c, %v5_13790
  %v4_137a0 = mul nuw i32 %v4_13788, 16777216
  %v5_137a0 = or i32 %v4_137a0, %v5_13798
  %v4_137a4 = mul nuw i32 %v4_13794, 16777216
  %v5_137a4 = or i32 %v4_137a4, %v5_1379c
  store i32 %v5_137a4, i32* %r3.global-to-local, align 4
  %v0_137a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_137a8 = inttoptr i32 %v0_137a8 to i32*
  store i32 %v5_137a0, i32* %v1_137a8, align 4
  %v3_137a8 = add i32 %v0_137a8, 4
  %v4_137a8 = inttoptr i32 %v3_137a8 to i32*
  %v5_137a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_137a8, i32* %v4_137a8, align 4
  %v0_137ac = load i32, i32* %r4.global-to-local, align 4
  %v1_137ac = add i32 %v0_137ac, 89
  %v2_137ac = inttoptr i32 %v1_137ac to i8*
  %v3_137ac = load i8, i8* %v2_137ac, align 1
  %v4_137ac = zext i8 %v3_137ac to i32
  %v1_137b0 = add i32 %v0_137ac, 93
  %v2_137b0 = inttoptr i32 %v1_137b0 to i8*
  %v3_137b0 = load i8, i8* %v2_137b0, align 1
  %v4_137b0 = zext i8 %v3_137b0 to i32
  %v1_137b4 = add i32 %v0_137ac, 88
  %v2_137b4 = inttoptr i32 %v1_137b4 to i8*
  %v3_137b4 = load i8, i8* %v2_137b4, align 1
  %v4_137b4 = zext i8 %v3_137b4 to i32
  %v1_137b8 = add i32 %v0_137ac, 92
  %v2_137b8 = inttoptr i32 %v1_137b8 to i8*
  %v3_137b8 = load i8, i8* %v2_137b8, align 1
  %v4_137b8 = zext i8 %v3_137b8 to i32
  store i32 %v4_137b8, i32* %r3.global-to-local, align 4
  %v1_137bc = add i32 %v0_137ac, 94
  %v2_137bc = inttoptr i32 %v1_137bc to i8*
  %v3_137bc = load i8, i8* %v2_137bc, align 1
  %v4_137bc = zext i8 %v3_137bc to i32
  %v1_137c0 = add i32 %v0_137ac, 90
  %v2_137c0 = inttoptr i32 %v1_137c0 to i8*
  %v3_137c0 = load i8, i8* %v2_137c0, align 1
  %v4_137c0 = zext i8 %v3_137c0 to i32
  %v1_137c4 = add i32 %v0_137ac, 91
  %v2_137c4 = inttoptr i32 %v1_137c4 to i8*
  %v3_137c4 = load i8, i8* %v2_137c4, align 1
  %v4_137c4 = zext i8 %v3_137c4 to i32
  %v4_137c8 = mul nuw nsw i32 %v4_137ac, 256
  %v5_137c8 = or i32 %v4_137b4, %v4_137c8
  %v4_137cc = mul nuw nsw i32 %v4_137b0, 256
  %v5_137cc = or i32 %v4_137b8, %v4_137cc
  store i32 %v5_137cc, i32* %r3.global-to-local, align 4
  %v1_137d0 = add i32 %v0_137ac, 95
  %v2_137d0 = inttoptr i32 %v1_137d0 to i8*
  %v3_137d0 = load i8, i8* %v2_137d0, align 1
  %v4_137d0 = zext i8 %v3_137d0 to i32
  %v4_137d4 = mul nuw nsw i32 %v4_137bc, 65536
  %v5_137d4 = or i32 %v4_137d4, %v5_137cc
  store i32 %v5_137d4, i32* %r3.global-to-local, align 4
  %v4_137d8 = mul nuw nsw i32 %v4_137c0, 65536
  %v5_137d8 = or i32 %v4_137d8, %v5_137c8
  %v4_137dc = mul nuw i32 %v4_137c4, 16777216
  %v5_137dc = or i32 %v4_137dc, %v5_137d8
  %v4_137e0 = mul nuw i32 %v4_137d0, 16777216
  %v5_137e0 = or i32 %v4_137e0, %v5_137d4
  store i32 %v5_137e0, i32* %r6.global-to-local, align 4
  %v1_137e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_137e4 = add i32 %v1_137e4, 88
  %v3_137e4 = inttoptr i32 %v2_137e4 to i32*
  store i32 %v5_137dc, i32* %v3_137e4, align 4
  %v0_137e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_137e8 = load i32, i32* %r7.global-to-local, align 4
  %v2_137e8 = add i32 %v1_137e8, 92
  %v3_137e8 = inttoptr i32 %v2_137e8 to i32*
  store i32 %v0_137e8, i32* %v3_137e8, align 4
  %v0_137ec = load i32, i32* %r4.global-to-local, align 4
  %v1_137ec = add i32 %v0_137ec, 13
  %v2_137ec = inttoptr i32 %v1_137ec to i8*
  %v3_137ec = load i8, i8* %v2_137ec, align 1
  %v4_137ec = zext i8 %v3_137ec to i32
  %v1_137f0 = add i32 %v0_137ec, 12
  %v2_137f0 = inttoptr i32 %v1_137f0 to i8*
  %v3_137f0 = load i8, i8* %v2_137f0, align 1
  %v4_137f0 = zext i8 %v3_137f0 to i32
  store i32 %v4_137f0, i32* %r3.global-to-local, align 4
  %v1_137f4 = add i32 %v0_137ec, 14
  %v2_137f4 = inttoptr i32 %v1_137f4 to i8*
  %v3_137f4 = load i8, i8* %v2_137f4, align 1
  %v4_137f4 = zext i8 %v3_137f4 to i32
  %v4_137f8 = mul nuw nsw i32 %v4_137ec, 256
  %v5_137f8 = or i32 %v4_137f0, %v4_137f8
  store i32 %v5_137f8, i32* %r3.global-to-local, align 4
  %v1_137fc = add i32 %v0_137ec, 15
  %v2_137fc = inttoptr i32 %v1_137fc to i8*
  %v3_137fc = load i8, i8* %v2_137fc, align 1
  %v4_137fc = zext i8 %v3_137fc to i32
  %v4_13800 = mul nuw nsw i32 %v4_137f4, 65536
  %v5_13800 = or i32 %v4_13800, %v5_137f8
  %v4_13804 = mul nuw i32 %v4_137fc, 16777216
  %v5_13804 = or i32 %v5_13800, %v4_13804
  store i32 %v5_13804, i32* %r3.global-to-local, align 4
  %v1_13808 = load i32, i32* %r7.global-to-local, align 4
  %v2_13808 = add i32 %v1_13808, 12
  %v3_13808 = inttoptr i32 %v2_13808 to i32*
  store i32 %v5_13804, i32* %v3_13808, align 4
  %v0_1380c = load i32, i32* %r4.global-to-local, align 4
  %v1_1380c = add i32 %v0_1380c, 17
  %v2_1380c = inttoptr i32 %v1_1380c to i8*
  %v3_1380c = load i8, i8* %v2_1380c, align 1
  %v4_1380c = zext i8 %v3_1380c to i32
  %v1_13810 = add i32 %v0_1380c, 16
  %v2_13810 = inttoptr i32 %v1_13810 to i8*
  %v3_13810 = load i8, i8* %v2_13810, align 1
  %v4_13810 = zext i8 %v3_13810 to i32
  store i32 %v4_13810, i32* %r3.global-to-local, align 4
  %v1_13814 = add i32 %v0_1380c, 18
  %v2_13814 = inttoptr i32 %v1_13814 to i8*
  %v3_13814 = load i8, i8* %v2_13814, align 1
  %v4_13814 = zext i8 %v3_13814 to i32
  %v4_13818 = mul nuw nsw i32 %v4_1380c, 256
  %v5_13818 = or i32 %v4_13810, %v4_13818
  store i32 %v5_13818, i32* %r3.global-to-local, align 4
  %v1_1381c = add i32 %v0_1380c, 19
  %v2_1381c = inttoptr i32 %v1_1381c to i8*
  %v3_1381c = load i8, i8* %v2_1381c, align 1
  %v4_1381c = zext i8 %v3_1381c to i32
  %v4_13820 = mul nuw nsw i32 %v4_13814, 65536
  %v5_13820 = or i32 %v4_13820, %v5_13818
  %v4_13824 = mul nuw i32 %v4_1381c, 16777216
  %v5_13824 = or i32 %v5_13820, %v4_13824
  store i32 %v5_13824, i32* %r3.global-to-local, align 4
  %v1_13828 = load i32, i32* %r7.global-to-local, align 4
  %v2_13828 = add i32 %v1_13828, 16
  %v3_13828 = inttoptr i32 %v2_13828 to i32*
  store i32 %v5_13824, i32* %v3_13828, align 4
  %v0_1382c = load i32, i32* %r4.global-to-local, align 4
  %v1_1382c = add i32 %v0_1382c, 21
  %v2_1382c = inttoptr i32 %v1_1382c to i8*
  %v3_1382c = load i8, i8* %v2_1382c, align 1
  %v4_1382c = zext i8 %v3_1382c to i32
  %v1_13830 = add i32 %v0_1382c, 20
  %v2_13830 = inttoptr i32 %v1_13830 to i8*
  %v3_13830 = load i8, i8* %v2_13830, align 1
  %v4_13830 = zext i8 %v3_13830 to i32
  store i32 %v4_13830, i32* %r3.global-to-local, align 4
  %v1_13834 = add i32 %v0_1382c, 22
  %v2_13834 = inttoptr i32 %v1_13834 to i8*
  %v3_13834 = load i8, i8* %v2_13834, align 1
  %v4_13834 = zext i8 %v3_13834 to i32
  %v4_13838 = mul nuw nsw i32 %v4_1382c, 256
  %v5_13838 = or i32 %v4_13830, %v4_13838
  store i32 %v5_13838, i32* %r3.global-to-local, align 4
  %v1_1383c = add i32 %v0_1382c, 23
  %v2_1383c = inttoptr i32 %v1_1383c to i8*
  %v3_1383c = load i8, i8* %v2_1383c, align 1
  %v4_1383c = zext i8 %v3_1383c to i32
  %v4_13840 = mul nuw nsw i32 %v4_13834, 65536
  %v5_13840 = or i32 %v4_13840, %v5_13838
  %v4_13844 = mul nuw i32 %v4_1383c, 16777216
  %v5_13844 = or i32 %v5_13840, %v4_13844
  store i32 %v5_13844, i32* %r3.global-to-local, align 4
  %v1_13848 = load i32, i32* %r7.global-to-local, align 4
  %v2_13848 = add i32 %v1_13848, 20
  %v3_13848 = inttoptr i32 %v2_13848 to i32*
  store i32 %v5_13844, i32* %v3_13848, align 4
  %v0_1384c = load i32, i32* %r4.global-to-local, align 4
  %v1_1384c = add i32 %v0_1384c, 25
  %v2_1384c = inttoptr i32 %v1_1384c to i8*
  %v3_1384c = load i8, i8* %v2_1384c, align 1
  %v4_1384c = zext i8 %v3_1384c to i32
  %v1_13850 = add i32 %v0_1384c, 24
  %v2_13850 = inttoptr i32 %v1_13850 to i8*
  %v3_13850 = load i8, i8* %v2_13850, align 1
  %v4_13850 = zext i8 %v3_13850 to i32
  store i32 %v4_13850, i32* %r3.global-to-local, align 4
  %v1_13854 = add i32 %v0_1384c, 26
  %v2_13854 = inttoptr i32 %v1_13854 to i8*
  %v3_13854 = load i8, i8* %v2_13854, align 1
  %v4_13854 = zext i8 %v3_13854 to i32
  %v4_13858 = mul nuw nsw i32 %v4_1384c, 256
  %v5_13858 = or i32 %v4_13850, %v4_13858
  store i32 %v5_13858, i32* %r3.global-to-local, align 4
  %v1_1385c = add i32 %v0_1384c, 27
  %v2_1385c = inttoptr i32 %v1_1385c to i8*
  %v3_1385c = load i8, i8* %v2_1385c, align 1
  %v4_1385c = zext i8 %v3_1385c to i32
  %v4_13860 = mul nuw nsw i32 %v4_13854, 65536
  %v5_13860 = or i32 %v4_13860, %v5_13858
  %v4_13864 = mul nuw i32 %v4_1385c, 16777216
  %v5_13864 = or i32 %v5_13860, %v4_13864
  store i32 %v5_13864, i32* %r3.global-to-local, align 4
  %v1_13868 = load i32, i32* %r7.global-to-local, align 4
  %v2_13868 = add i32 %v1_13868, 24
  %v3_13868 = inttoptr i32 %v2_13868 to i32*
  store i32 %v5_13864, i32* %v3_13868, align 4
  %v0_1386c = load i32, i32* %r4.global-to-local, align 4
  %v1_1386c = add i32 %v0_1386c, 29
  %v2_1386c = inttoptr i32 %v1_1386c to i8*
  %v3_1386c = load i8, i8* %v2_1386c, align 1
  %v4_1386c = zext i8 %v3_1386c to i32
  %v1_13870 = add i32 %v0_1386c, 28
  %v2_13870 = inttoptr i32 %v1_13870 to i8*
  %v3_13870 = load i8, i8* %v2_13870, align 1
  %v4_13870 = zext i8 %v3_13870 to i32
  store i32 %v4_13870, i32* %r3.global-to-local, align 4
  %v1_13874 = add i32 %v0_1386c, 30
  %v2_13874 = inttoptr i32 %v1_13874 to i8*
  %v3_13874 = load i8, i8* %v2_13874, align 1
  %v4_13874 = zext i8 %v3_13874 to i32
  %v4_13878 = mul nuw nsw i32 %v4_1386c, 256
  %v5_13878 = or i32 %v4_13870, %v4_13878
  store i32 %v5_13878, i32* %r3.global-to-local, align 4
  %v1_1387c = add i32 %v0_1386c, 31
  %v2_1387c = inttoptr i32 %v1_1387c to i8*
  %v3_1387c = load i8, i8* %v2_1387c, align 1
  %v4_1387c = zext i8 %v3_1387c to i32
  %v4_13880 = mul nuw nsw i32 %v4_13874, 65536
  %v5_13880 = or i32 %v4_13880, %v5_13878
  %v4_13884 = mul nuw i32 %v4_1387c, 16777216
  %v5_13884 = or i32 %v5_13880, %v4_13884
  store i32 %v5_13884, i32* %r3.global-to-local, align 4
  %v1_13888 = load i32, i32* %r7.global-to-local, align 4
  %v2_13888 = add i32 %v1_13888, 28
  %v3_13888 = inttoptr i32 %v2_13888 to i32*
  store i32 %v5_13884, i32* %v3_13888, align 4
  %v0_1388c = load i32, i32* %r4.global-to-local, align 4
  %v1_1388c = add i32 %v0_1388c, 33
  %v2_1388c = inttoptr i32 %v1_1388c to i8*
  %v3_1388c = load i8, i8* %v2_1388c, align 1
  %v4_1388c = zext i8 %v3_1388c to i32
  %v1_13890 = add i32 %v0_1388c, 37
  %v2_13890 = inttoptr i32 %v1_13890 to i8*
  %v3_13890 = load i8, i8* %v2_13890, align 1
  %v4_13890 = zext i8 %v3_13890 to i32
  %v1_13894 = add i32 %v0_1388c, 32
  %v2_13894 = inttoptr i32 %v1_13894 to i8*
  %v3_13894 = load i8, i8* %v2_13894, align 1
  %v4_13894 = zext i8 %v3_13894 to i32
  %v1_13898 = add i32 %v0_1388c, 36
  %v2_13898 = inttoptr i32 %v1_13898 to i8*
  %v3_13898 = load i8, i8* %v2_13898, align 1
  %v4_13898 = zext i8 %v3_13898 to i32
  store i32 %v4_13898, i32* %r3.global-to-local, align 4
  %v1_1389c = add i32 %v0_1388c, 34
  %v2_1389c = inttoptr i32 %v1_1389c to i8*
  %v3_1389c = load i8, i8* %v2_1389c, align 1
  %v4_1389c = zext i8 %v3_1389c to i32
  %v1_138a0 = add i32 %v0_1388c, 38
  %v2_138a0 = inttoptr i32 %v1_138a0 to i8*
  %v3_138a0 = load i8, i8* %v2_138a0, align 1
  %v4_138a0 = zext i8 %v3_138a0 to i32
  %v1_138a4 = add i32 %v0_1388c, 35
  %v2_138a4 = inttoptr i32 %v1_138a4 to i8*
  %v3_138a4 = load i8, i8* %v2_138a4, align 1
  %v4_138a4 = zext i8 %v3_138a4 to i32
  %v4_138a8 = mul nuw nsw i32 %v4_1388c, 256
  %v5_138a8 = or i32 %v4_13894, %v4_138a8
  %v4_138ac = mul nuw nsw i32 %v4_13890, 256
  %v5_138ac = or i32 %v4_13898, %v4_138ac
  store i32 %v5_138ac, i32* %r3.global-to-local, align 4
  %v1_138b0 = add i32 %v0_1388c, 39
  %v2_138b0 = inttoptr i32 %v1_138b0 to i8*
  %v3_138b0 = load i8, i8* %v2_138b0, align 1
  %v4_138b0 = zext i8 %v3_138b0 to i32
  %v4_138b4 = mul nuw nsw i32 %v4_1389c, 65536
  %v5_138b4 = or i32 %v4_138b4, %v5_138a8
  %v4_138b8 = mul nuw nsw i32 %v4_138a0, 65536
  %v5_138b8 = or i32 %v4_138b8, %v5_138ac
  %v4_138bc = mul nuw i32 %v4_138a4, 16777216
  %v5_138bc = or i32 %v5_138b4, %v4_138bc
  %v4_138c0 = mul nuw i32 %v4_138b0, 16777216
  %v5_138c0 = or i32 %v5_138b8, %v4_138c0
  store i32 %v5_138c0, i32* %r3.global-to-local, align 4
  %v1_138d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_138d4 = add i32 %v1_138d4, 32
  %v3_138d4 = inttoptr i32 %v2_138d4 to i32*
  store i32 %v5_138bc, i32* %v3_138d4, align 4
  %v0_138d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_138d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_138d8 = add i32 %v1_138d8, 36
  %v3_138d8 = inttoptr i32 %v2_138d8 to i32*
  store i32 %v0_138d8, i32* %v3_138d8, align 4
  %v0_138dc = load i32, i32* %r4.global-to-local, align 4
  %v1_138dc = add i32 %v0_138dc, 45
  %v2_138dc = inttoptr i32 %v1_138dc to i8*
  %v3_138dc = load i8, i8* %v2_138dc, align 1
  %v4_138dc = zext i8 %v3_138dc to i32
  %v1_138e0 = add i32 %v0_138dc, 49
  %v2_138e0 = inttoptr i32 %v1_138e0 to i8*
  %v3_138e0 = load i8, i8* %v2_138e0, align 1
  %v4_138e0 = zext i8 %v3_138e0 to i32
  %v1_138e4 = add i32 %v0_138dc, 44
  %v2_138e4 = inttoptr i32 %v1_138e4 to i8*
  %v3_138e4 = load i8, i8* %v2_138e4, align 1
  %v4_138e4 = zext i8 %v3_138e4 to i32
  %v1_138e8 = add i32 %v0_138dc, 48
  %v2_138e8 = inttoptr i32 %v1_138e8 to i8*
  %v3_138e8 = load i8, i8* %v2_138e8, align 1
  %v4_138e8 = zext i8 %v3_138e8 to i32
  store i32 %v4_138e8, i32* %r3.global-to-local, align 4
  %v1_138ec = add i32 %v0_138dc, 46
  %v2_138ec = inttoptr i32 %v1_138ec to i8*
  %v3_138ec = load i8, i8* %v2_138ec, align 1
  %v4_138ec = zext i8 %v3_138ec to i32
  %v1_138f0 = add i32 %v0_138dc, 50
  %v2_138f0 = inttoptr i32 %v1_138f0 to i8*
  %v3_138f0 = load i8, i8* %v2_138f0, align 1
  %v4_138f0 = zext i8 %v3_138f0 to i32
  %v1_138f4 = add i32 %v0_138dc, 47
  %v2_138f4 = inttoptr i32 %v1_138f4 to i8*
  %v3_138f4 = load i8, i8* %v2_138f4, align 1
  %v4_138f4 = zext i8 %v3_138f4 to i32
  %v4_138f8 = mul nuw nsw i32 %v4_138dc, 256
  %v5_138f8 = or i32 %v4_138e4, %v4_138f8
  %v4_138fc = mul nuw nsw i32 %v4_138e0, 256
  %v5_138fc = or i32 %v4_138e8, %v4_138fc
  store i32 %v5_138fc, i32* %r3.global-to-local, align 4
  %v1_13900 = add i32 %v0_138dc, 51
  %v2_13900 = inttoptr i32 %v1_13900 to i8*
  %v3_13900 = load i8, i8* %v2_13900, align 1
  %v4_13900 = zext i8 %v3_13900 to i32
  %v4_13904 = mul nuw nsw i32 %v4_138ec, 65536
  %v5_13904 = or i32 %v4_13904, %v5_138f8
  %v4_13908 = mul nuw nsw i32 %v4_138f0, 65536
  %v5_13908 = or i32 %v4_13908, %v5_138fc
  %v4_1390c = mul nuw i32 %v4_138f4, 16777216
  %v5_1390c = or i32 %v5_13904, %v4_1390c
  %v4_13910 = mul nuw i32 %v4_13900, 16777216
  %v5_13910 = or i32 %v5_13908, %v4_13910
  store i32 %v5_13910, i32* %r3.global-to-local, align 4
  %v1_13924 = load i32, i32* %r7.global-to-local, align 4
  %v2_13924 = add i32 %v1_13924, 44
  %v3_13924 = inttoptr i32 %v2_13924 to i32*
  store i32 %v5_1390c, i32* %v3_13924, align 4
  %v0_13928 = load i32, i32* %r3.global-to-local, align 4
  %v1_13928 = load i32, i32* %r7.global-to-local, align 4
  %v2_13928 = add i32 %v1_13928, 48
  %v3_13928 = inttoptr i32 %v2_13928 to i32*
  store i32 %v0_13928, i32* %v3_13928, align 4
  %v0_1392c = load i32, i32* %r4.global-to-local, align 4
  %v1_1392c = add i32 %v0_1392c, 53
  %v2_1392c = inttoptr i32 %v1_1392c to i8*
  %v3_1392c = load i8, i8* %v2_1392c, align 1
  %v4_1392c = zext i8 %v3_1392c to i32
  %v1_13930 = add i32 %v0_1392c, 52
  %v2_13930 = inttoptr i32 %v1_13930 to i8*
  %v3_13930 = load i8, i8* %v2_13930, align 1
  %v4_13930 = zext i8 %v3_13930 to i32
  store i32 %v4_13930, i32* %r3.global-to-local, align 4
  %v1_13934 = add i32 %v0_1392c, 54
  %v2_13934 = inttoptr i32 %v1_13934 to i8*
  %v3_13934 = load i8, i8* %v2_13934, align 1
  %v4_13934 = zext i8 %v3_13934 to i32
  %v4_13938 = mul nuw nsw i32 %v4_1392c, 256
  %v5_13938 = or i32 %v4_13930, %v4_13938
  store i32 %v5_13938, i32* %r3.global-to-local, align 4
  %v1_1393c = add i32 %v0_1392c, 55
  %v2_1393c = inttoptr i32 %v1_1393c to i8*
  %v3_1393c = load i8, i8* %v2_1393c, align 1
  %v4_1393c = zext i8 %v3_1393c to i32
  %v4_13940 = mul nuw nsw i32 %v4_13934, 65536
  %v5_13940 = or i32 %v4_13940, %v5_13938
  %v4_13944 = mul nuw i32 %v4_1393c, 16777216
  %v5_13944 = or i32 %v5_13940, %v4_13944
  store i32 %v5_13944, i32* %r3.global-to-local, align 4
  %v1_13948 = load i32, i32* %r7.global-to-local, align 4
  %v2_13948 = add i32 %v1_13948, 52
  %v3_13948 = inttoptr i32 %v2_13948 to i32*
  store i32 %v5_13944, i32* %v3_13948, align 4
  %v0_1394c = load i32, i32* %r4.global-to-local, align 4
  %v1_1394c = add i32 %v0_1394c, 57
  %v2_1394c = inttoptr i32 %v1_1394c to i8*
  %v3_1394c = load i8, i8* %v2_1394c, align 1
  %v4_1394c = zext i8 %v3_1394c to i32
  %v1_13950 = add i32 %v0_1394c, 56
  %v2_13950 = inttoptr i32 %v1_13950 to i8*
  %v3_13950 = load i8, i8* %v2_13950, align 1
  %v4_13950 = zext i8 %v3_13950 to i32
  %v1_13954 = add i32 %v0_1394c, 60
  %v2_13954 = inttoptr i32 %v1_13954 to i8*
  %v3_13954 = load i8, i8* %v2_13954, align 1
  %v4_13954 = zext i8 %v3_13954 to i32
  store i32 %v4_13954, i32* %r3.global-to-local, align 4
  %v1_13958 = add i32 %v0_1394c, 61
  %v2_13958 = inttoptr i32 %v1_13958 to i8*
  %v3_13958 = load i8, i8* %v2_13958, align 1
  %v4_13958 = zext i8 %v3_13958 to i32
  %v1_1395c = add i32 %v0_1394c, 58
  %v2_1395c = inttoptr i32 %v1_1395c to i8*
  %v3_1395c = load i8, i8* %v2_1395c, align 1
  %v4_1395c = zext i8 %v3_1395c to i32
  %v1_13960 = add i32 %v0_1394c, 62
  %v2_13960 = inttoptr i32 %v1_13960 to i8*
  %v3_13960 = load i8, i8* %v2_13960, align 1
  %v4_13960 = zext i8 %v3_13960 to i32
  %v1_13964 = add i32 %v0_1394c, 59
  %v2_13964 = inttoptr i32 %v1_13964 to i8*
  %v3_13964 = load i8, i8* %v2_13964, align 1
  %v4_13964 = zext i8 %v3_13964 to i32
  %v4_13968 = mul nuw nsw i32 %v4_1394c, 256
  %v5_13968 = or i32 %v4_13950, %v4_13968
  %v4_1396c = mul nuw nsw i32 %v4_13958, 256
  %v5_1396c = or i32 %v4_1396c, %v4_13954
  store i32 %v5_1396c, i32* %r3.global-to-local, align 4
  %v1_13970 = add i32 %v0_1394c, 63
  %v2_13970 = inttoptr i32 %v1_13970 to i8*
  %v3_13970 = load i8, i8* %v2_13970, align 1
  %v4_13970 = zext i8 %v3_13970 to i32
  %v4_13974 = mul nuw nsw i32 %v4_1395c, 65536
  %v5_13974 = or i32 %v4_13974, %v5_13968
  %v4_13978 = mul nuw nsw i32 %v4_13960, 65536
  %v5_13978 = or i32 %v4_13978, %v5_1396c
  %v4_1397c = mul nuw i32 %v4_13970, 16777216
  %v5_1397c = or i32 %v5_13978, %v4_1397c
  %v4_13980 = mul nuw i32 %v4_13964, 16777216
  %v5_13980 = or i32 %v5_13974, %v4_13980
  store i32 %v5_1397c, i32* %r3.global-to-local, align 4
  %v1_13990 = load i32, i32* %r7.global-to-local, align 4
  %v2_13990 = add i32 %v1_13990, 56
  %v3_13990 = inttoptr i32 %v2_13990 to i32*
  store i32 %v5_13980, i32* %v3_13990, align 4
  %v0_13994 = load i32, i32* %r3.global-to-local, align 4
  %v1_13994 = load i32, i32* %r7.global-to-local, align 4
  %v2_13994 = add i32 %v1_13994, 60
  %v3_13994 = inttoptr i32 %v2_13994 to i32*
  store i32 %v0_13994, i32* %v3_13994, align 4
  %v0_13998 = load i32, i32* %r4.global-to-local, align 4
  %v1_13998 = add i32 %v0_13998, 65
  %v2_13998 = inttoptr i32 %v1_13998 to i8*
  %v3_13998 = load i8, i8* %v2_13998, align 1
  %v4_13998 = zext i8 %v3_13998 to i32
  %v1_1399c = add i32 %v0_13998, 64
  %v2_1399c = inttoptr i32 %v1_1399c to i8*
  %v3_1399c = load i8, i8* %v2_1399c, align 1
  %v4_1399c = zext i8 %v3_1399c to i32
  store i32 %v4_1399c, i32* %r3.global-to-local, align 4
  %v1_139a0 = add i32 %v0_13998, 66
  %v2_139a0 = inttoptr i32 %v1_139a0 to i8*
  %v3_139a0 = load i8, i8* %v2_139a0, align 1
  %v4_139a0 = zext i8 %v3_139a0 to i32
  %v4_139a4 = mul nuw nsw i32 %v4_13998, 256
  %v5_139a4 = or i32 %v4_1399c, %v4_139a4
  store i32 %v5_139a4, i32* %r3.global-to-local, align 4
  %v1_139a8 = add i32 %v0_13998, 67
  %v2_139a8 = inttoptr i32 %v1_139a8 to i8*
  %v3_139a8 = load i8, i8* %v2_139a8, align 1
  %v4_139a8 = zext i8 %v3_139a8 to i32
  %v4_139ac = mul nuw nsw i32 %v4_139a0, 65536
  %v5_139ac = or i32 %v4_139ac, %v5_139a4
  %v4_139b0 = mul nuw i32 %v4_139a8, 16777216
  %v5_139b0 = or i32 %v5_139ac, %v4_139b0
  store i32 %v5_139b0, i32* %r3.global-to-local, align 4
  %v1_139b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_139b4 = add i32 %v1_139b4, 64
  %v3_139b4 = inttoptr i32 %v2_139b4 to i32*
  store i32 %v5_139b0, i32* %v3_139b4, align 4
  %v0_139b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_139b8 = add i32 %v0_139b8, 73
  %v2_139b8 = inttoptr i32 %v1_139b8 to i8*
  %v3_139b8 = load i8, i8* %v2_139b8, align 1
  %v4_139b8 = zext i8 %v3_139b8 to i32
  %v1_139bc = add i32 %v0_139b8, 72
  %v2_139bc = inttoptr i32 %v1_139bc to i8*
  %v3_139bc = load i8, i8* %v2_139bc, align 1
  %v4_139bc = zext i8 %v3_139bc to i32
  store i32 %v4_139bc, i32* %r3.global-to-local, align 4
  %v1_139c0 = add i32 %v0_139b8, 74
  %v2_139c0 = inttoptr i32 %v1_139c0 to i8*
  %v3_139c0 = load i8, i8* %v2_139c0, align 1
  %v4_139c0 = zext i8 %v3_139c0 to i32
  %v4_139c4 = mul nuw nsw i32 %v4_139b8, 256
  %v5_139c4 = or i32 %v4_139bc, %v4_139c4
  store i32 %v5_139c4, i32* %r3.global-to-local, align 4
  %v1_139c8 = add i32 %v0_139b8, 75
  %v2_139c8 = inttoptr i32 %v1_139c8 to i8*
  %v3_139c8 = load i8, i8* %v2_139c8, align 1
  %v4_139c8 = zext i8 %v3_139c8 to i32
  %v4_139cc = mul nuw nsw i32 %v4_139c0, 65536
  %v5_139cc = or i32 %v4_139cc, %v5_139c4
  %v4_139d0 = mul nuw i32 %v4_139c8, 16777216
  %v5_139d0 = or i32 %v5_139cc, %v4_139d0
  store i32 %v5_139d0, i32* %r3.global-to-local, align 4
  %v1_139d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_139d4 = add i32 %v1_139d4, 72
  %v3_139d4 = inttoptr i32 %v2_139d4 to i32*
  store i32 %v5_139d0, i32* %v3_139d4, align 4
  %v0_139d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_139d8 = add i32 %v0_139d8, 81
  %v2_139d8 = inttoptr i32 %v1_139d8 to i8*
  %v3_139d8 = load i8, i8* %v2_139d8, align 1
  %v4_139d8 = zext i8 %v3_139d8 to i32
  %v1_139dc = add i32 %v0_139d8, 80
  %v2_139dc = inttoptr i32 %v1_139dc to i8*
  %v3_139dc = load i8, i8* %v2_139dc, align 1
  %v4_139dc = zext i8 %v3_139dc to i32
  store i32 %v4_139dc, i32* %r3.global-to-local, align 4
  %v1_139e0 = add i32 %v0_139d8, 82
  %v2_139e0 = inttoptr i32 %v1_139e0 to i8*
  %v3_139e0 = load i8, i8* %v2_139e0, align 1
  %v4_139e0 = zext i8 %v3_139e0 to i32
  %v4_139e4 = mul nuw nsw i32 %v4_139d8, 256
  %v5_139e4 = or i32 %v4_139dc, %v4_139e4
  store i32 %v5_139e4, i32* %r3.global-to-local, align 4
  %v1_139e8 = add i32 %v0_139d8, 83
  %v2_139e8 = inttoptr i32 %v1_139e8 to i8*
  %v3_139e8 = load i8, i8* %v2_139e8, align 1
  %v4_139e8 = zext i8 %v3_139e8 to i32
  %v4_139ec = mul nuw nsw i32 %v4_139e0, 65536
  %v5_139ec = or i32 %v4_139ec, %v5_139e4
  %v4_139f0 = mul nuw i32 %v4_139e8, 16777216
  %v5_139f0 = or i32 %v5_139ec, %v4_139f0
  store i32 %v5_139f0, i32* %r3.global-to-local, align 4
  %v1_139f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_139f4 = add i32 %v1_139f4, 80
  %v3_139f4 = inttoptr i32 %v2_139f4 to i32*
  store i32 %v5_139f0, i32* %v3_139f4, align 4
  %v0_139f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_139f8 = add i32 %v0_139f8, 69
  %v2_139f8 = inttoptr i32 %v1_139f8 to i8*
  %v3_139f8 = load i8, i8* %v2_139f8, align 1
  %v4_139f8 = zext i8 %v3_139f8 to i32
  %v1_139fc = add i32 %v0_139f8, 68
  %v2_139fc = inttoptr i32 %v1_139fc to i8*
  %v3_139fc = load i8, i8* %v2_139fc, align 1
  %v4_139fc = zext i8 %v3_139fc to i32
  store i32 %v4_139fc, i32* %r3.global-to-local, align 4
  %v1_13a00 = add i32 %v0_139f8, 70
  %v2_13a00 = inttoptr i32 %v1_13a00 to i8*
  %v3_13a00 = load i8, i8* %v2_13a00, align 1
  %v4_13a00 = zext i8 %v3_13a00 to i32
  %v4_13a04 = mul nuw nsw i32 %v4_139f8, 256
  %v5_13a04 = or i32 %v4_139fc, %v4_13a04
  store i32 %v5_13a04, i32* %r3.global-to-local, align 4
  %v1_13a08 = add i32 %v0_139f8, 71
  %v2_13a08 = inttoptr i32 %v1_13a08 to i8*
  %v3_13a08 = load i8, i8* %v2_13a08, align 1
  %v4_13a08 = zext i8 %v3_13a08 to i32
  %v4_13a0c = mul nuw nsw i32 %v4_13a00, 65536
  %v5_13a0c = or i32 %v4_13a0c, %v5_13a04
  %v4_13a10 = mul nuw i32 %v4_13a08, 16777216
  %v5_13a10 = or i32 %v5_13a0c, %v4_13a10
  store i32 %v5_13a10, i32* %r3.global-to-local, align 4
  %v1_13a14 = load i32, i32* %r7.global-to-local, align 4
  %v2_13a14 = add i32 %v1_13a14, 68
  %v3_13a14 = inttoptr i32 %v2_13a14 to i32*
  store i32 %v5_13a10, i32* %v3_13a14, align 4
  %v0_13a18 = load i32, i32* %r4.global-to-local, align 4
  %v1_13a18 = add i32 %v0_13a18, 77
  %v2_13a18 = inttoptr i32 %v1_13a18 to i8*
  %v3_13a18 = load i8, i8* %v2_13a18, align 1
  %v4_13a18 = zext i8 %v3_13a18 to i32
  %v1_13a1c = add i32 %v0_13a18, 76
  %v2_13a1c = inttoptr i32 %v1_13a1c to i8*
  %v3_13a1c = load i8, i8* %v2_13a1c, align 1
  %v4_13a1c = zext i8 %v3_13a1c to i32
  store i32 %v4_13a1c, i32* %r3.global-to-local, align 4
  %v1_13a20 = add i32 %v0_13a18, 78
  %v2_13a20 = inttoptr i32 %v1_13a20 to i8*
  %v3_13a20 = load i8, i8* %v2_13a20, align 1
  %v4_13a20 = zext i8 %v3_13a20 to i32
  %v4_13a24 = mul nuw nsw i32 %v4_13a18, 256
  %v5_13a24 = or i32 %v4_13a1c, %v4_13a24
  store i32 %v5_13a24, i32* %r3.global-to-local, align 4
  %v1_13a28 = add i32 %v0_13a18, 79
  %v2_13a28 = inttoptr i32 %v1_13a28 to i8*
  %v3_13a28 = load i8, i8* %v2_13a28, align 1
  %v4_13a28 = zext i8 %v3_13a28 to i32
  %v4_13a2c = mul nuw nsw i32 %v4_13a20, 65536
  %v5_13a2c = or i32 %v4_13a2c, %v5_13a24
  %v4_13a30 = mul nuw i32 %v4_13a28, 16777216
  %v5_13a30 = or i32 %v5_13a2c, %v4_13a30
  store i32 %v5_13a30, i32* %r3.global-to-local, align 4
  %v1_13a34 = load i32, i32* %r7.global-to-local, align 4
  %v2_13a34 = add i32 %v1_13a34, 76
  %v3_13a34 = inttoptr i32 %v2_13a34 to i32*
  store i32 %v5_13a30, i32* %v3_13a34, align 4
  %v0_13a38 = load i32, i32* %r4.global-to-local, align 4
  %v1_13a38 = add i32 %v0_13a38, 85
  %v2_13a38 = inttoptr i32 %v1_13a38 to i8*
  %v3_13a38 = load i8, i8* %v2_13a38, align 1
  %v4_13a38 = zext i8 %v3_13a38 to i32
  %v1_13a3c = add i32 %v0_13a38, 84
  %v2_13a3c = inttoptr i32 %v1_13a3c to i8*
  %v3_13a3c = load i8, i8* %v2_13a3c, align 1
  %v4_13a3c = zext i8 %v3_13a3c to i32
  store i32 %v4_13a3c, i32* %r3.global-to-local, align 4
  %v1_13a40 = add i32 %v0_13a38, 86
  %v2_13a40 = inttoptr i32 %v1_13a40 to i8*
  %v3_13a40 = load i8, i8* %v2_13a40, align 1
  %v4_13a40 = zext i8 %v3_13a40 to i32
  %v4_13a44 = mul nuw nsw i32 %v4_13a38, 256
  %v5_13a44 = or i32 %v4_13a3c, %v4_13a44
  store i32 %v5_13a44, i32* %r3.global-to-local, align 4
  %v1_13a48 = add i32 %v0_13a38, 87
  %v2_13a48 = inttoptr i32 %v1_13a48 to i8*
  %v3_13a48 = load i8, i8* %v2_13a48, align 1
  %v4_13a48 = zext i8 %v3_13a48 to i32
  %v4_13a4c = mul nuw nsw i32 %v4_13a40, 65536
  %v5_13a4c = or i32 %v4_13a4c, %v5_13a44
  %v4_13a50 = mul nuw i32 %v4_13a48, 16777216
  %v5_13a50 = or i32 %v5_13a4c, %v4_13a50
  store i32 %v5_13a50, i32* %r3.global-to-local, align 4
  %v1_13a54 = load i32, i32* %r7.global-to-local, align 4
  %v2_13a54 = add i32 %v1_13a54, 84
  %v3_13a54 = inttoptr i32 %v2_13a54 to i32*
  store i32 %v5_13a50, i32* %v3_13a54, align 4
  ret i32 %v4_13958

; uselistorder directives
  uselistorder i32 %v4_13958, { 1, 0 }
  uselistorder i32 %v0_1394c, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_138dc, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_1388c, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_137ac, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %tmp, { 6, 5, 3, 4, 2, 1, 0, 7 }
  uselistorder i32 87, { 1, 0 }
  uselistorder i32 69, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 55, { 2, 3, 0, 4, 1 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 1, 2, 0, 3 }
  uselistorder i32 47, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 39, { 1, 2, 0 }
  uselistorder i32 38, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 33, { 2, 3, 0, 1 }
  uselistorder i32 30, { 2, 0, 3, 1 }
  uselistorder i32 29, { 1, 2, 3, 0 }
  uselistorder i32 26, { 2, 0, 1, 3 }
  uselistorder i32 25, { 4, 8, 9, 1, 0, 3, 5, 6, 7, 2 }
  uselistorder i32 23, { 6, 1, 7, 2, 8, 3, 9, 11, 0, 4, 12, 10, 5 }
  uselistorder i32 22, { 8, 1, 2, 13, 3, 12, 0, 4, 9, 5, 10, 6, 11, 14, 7 }
  uselistorder i32 21, { 6, 1, 0, 7, 2, 8, 3, 9, 4, 10, 11, 12, 5 }
  uselistorder i32 19, { 11, 15, 16, 17, 4, 1, 5, 12, 6, 13, 7, 14, 0, 18, 2, 19, 20, 8, 21, 3, 22, 9, 23, 10, 24 }
  uselistorder i32 18, { 7, 11, 12, 13, 2, 8, 3, 9, 4, 10, 6, 14, 5, 15, 0, 16, 1, 17 }
  uselistorder i32 17, { 18, 24, 0, 4, 25, 5, 26, 6, 27, 1, 28, 7, 2, 8, 19, 9, 20, 10, 21, 29, 11, 30, 12, 31, 22, 23, 32, 13, 33, 14, 34, 15, 35, 16, 36, 37, 3, 38, 39, 40, 17, 41, 42, 43, 44, 45 }
  uselistorder i32 6, { 27, 31, 12, 13, 14, 70, 15, 30, 1, 16, 28, 0, 32, 17, 33, 29, 2, 18, 19, 20, 3, 21, 34, 35, 36, 4, 37, 38, 39, 40, 5, 41, 42, 43, 44, 6, 45, 7, 46, 47, 22, 48, 8, 49, 50, 51, 23, 52, 9, 53, 54, 55, 24, 56, 57, 58, 59, 60, 25, 61, 10, 62, 63, 64, 65, 66, 67, 26, 68, 11, 69 }
}

define i32 @function_13a60(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a60:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13a60 = load i32, i32* @r4, align 4
  store i32 %v3_13a60, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_13a78 = inttoptr i32 %arg2 to i8*
  %v3_13a78 = call i32 @function_121f0(i8* %v2_13a78, i32 0)
  store i32 %v3_13a78, i32* %r0.global-to-local, align 4
  %v0_13a7c = load i32, i32* %r5.global-to-local, align 4
  %v1_13a7c = inttoptr i32 %v0_13a7c to i32*
  %v2_13a7c = load i32, i32* %v1_13a7c, align 4
  store i32 %v2_13a7c, i32* %r3.global-to-local, align 4
  %v1_13a80 = add i32 %v0_13a7c, 4
  %v2_13a80 = inttoptr i32 %v1_13a80 to i32*
  %v3_13a80 = load i32, i32* %v2_13a80, align 4
  store i32 %v3_13a80, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_13a88 = load i32, i32* %r6.global-to-local, align 4
  %v1_13a88 = inttoptr i32 %v0_13a88 to i32*
  store i32 %v2_13a7c, i32* %v1_13a88, align 4
  %v3_13a88 = add i32 %v0_13a88, 4
  %v4_13a88 = inttoptr i32 %v3_13a88 to i32*
  %v5_13a88 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13a88, i32* %v4_13a88, align 4
  %v0_13a8c = load i32, i32* %r2.global-to-local, align 4
  %v1_13a8c = load i32, i32* %r6.global-to-local, align 4
  %v2_13a8c = add i32 %v1_13a8c, 12
  %v3_13a8c = inttoptr i32 %v2_13a8c to i32*
  store i32 %v0_13a8c, i32* %v3_13a8c, align 4
  %v0_13a90 = load i32, i32* %r5.global-to-local, align 4
  %v1_13a90 = add i32 %v0_13a90, 9
  %v2_13a90 = inttoptr i32 %v1_13a90 to i8*
  %v3_13a90 = load i8, i8* %v2_13a90, align 1
  %v4_13a90 = zext i8 %v3_13a90 to i32
  store i32 %v4_13a90, i32* %r2.global-to-local, align 4
  %v1_13a94 = add i32 %v0_13a90, 8
  %v2_13a94 = inttoptr i32 %v1_13a94 to i8*
  %v3_13a94 = load i8, i8* %v2_13a94, align 1
  %v4_13a94 = zext i8 %v3_13a94 to i32
  %v4_13a98 = mul nuw nsw i32 %v4_13a90, 256
  %v5_13a98 = or i32 %v4_13a94, %v4_13a98
  store i32 %v5_13a98, i32* %r3.global-to-local, align 4
  %v1_13a9c = load i32, i32* %r6.global-to-local, align 4
  %v2_13a9c = add i32 %v1_13a9c, 16
  %v3_13a9c = inttoptr i32 %v2_13a9c to i32*
  store i32 %v5_13a98, i32* %v3_13a9c, align 4
  %v0_13aa0 = load i32, i32* %r5.global-to-local, align 4
  %v1_13aa0 = add i32 %v0_13aa0, 11
  %v2_13aa0 = inttoptr i32 %v1_13aa0 to i8*
  %v3_13aa0 = load i8, i8* %v2_13aa0, align 1
  %v4_13aa0 = zext i8 %v3_13aa0 to i32
  store i32 %v4_13aa0, i32* %r2.global-to-local, align 4
  %v1_13aa4 = add i32 %v0_13aa0, 10
  %v2_13aa4 = inttoptr i32 %v1_13aa4 to i8*
  %v3_13aa4 = load i8, i8* %v2_13aa4, align 1
  %v4_13aa4 = zext i8 %v3_13aa4 to i32
  %v4_13aa8 = mul nuw nsw i32 %v4_13aa0, 256
  %v5_13aa8 = or i32 %v4_13aa4, %v4_13aa8
  store i32 %v5_13aa8, i32* %r3.global-to-local, align 4
  %v1_13aac = load i32, i32* %r6.global-to-local, align 4
  %v2_13aac = add i32 %v1_13aac, 20
  %v3_13aac = inttoptr i32 %v2_13aac to i32*
  store i32 %v5_13aa8, i32* %v3_13aac, align 4
  %v0_13ab0 = load i32, i32* %r5.global-to-local, align 4
  %v1_13ab0 = add i32 %v0_13ab0, 13
  %v2_13ab0 = inttoptr i32 %v1_13ab0 to i8*
  %v3_13ab0 = load i8, i8* %v2_13ab0, align 1
  %v4_13ab0 = zext i8 %v3_13ab0 to i32
  store i32 %v4_13ab0, i32* %r2.global-to-local, align 4
  %v1_13ab4 = add i32 %v0_13ab0, 12
  %v2_13ab4 = inttoptr i32 %v1_13ab4 to i8*
  %v3_13ab4 = load i8, i8* %v2_13ab4, align 1
  %v4_13ab4 = zext i8 %v3_13ab4 to i32
  %v4_13ab8 = mul nuw nsw i32 %v4_13ab0, 256
  %v5_13ab8 = or i32 %v4_13ab4, %v4_13ab8
  store i32 %v5_13ab8, i32* %r3.global-to-local, align 4
  %v1_13abc = load i32, i32* %r6.global-to-local, align 4
  %v2_13abc = add i32 %v1_13abc, 24
  %v3_13abc = inttoptr i32 %v2_13abc to i32*
  store i32 %v5_13ab8, i32* %v3_13abc, align 4
  %v0_13ac0 = load i32, i32* %r5.global-to-local, align 4
  %v1_13ac0 = add i32 %v0_13ac0, 20
  %v2_13ac0 = inttoptr i32 %v1_13ac0 to i32*
  %v3_13ac0 = load i32, i32* %v2_13ac0, align 4
  store i32 %v3_13ac0, i32* %r3.global-to-local, align 4
  %v1_13ac4 = add i32 %v0_13ac0, 14
  %v2_13ac4 = inttoptr i32 %v1_13ac4 to i8*
  %v3_13ac4 = load i8, i8* %v2_13ac4, align 1
  %v4_13ac4 = zext i8 %v3_13ac4 to i32
  store i32 %v4_13ac4, i32* %r0.global-to-local, align 4
  %v1_13ac8 = add i32 %v0_13ac0, 15
  %v2_13ac8 = inttoptr i32 %v1_13ac8 to i8*
  %v3_13ac8 = load i8, i8* %v2_13ac8, align 1
  %v4_13ac8 = zext i8 %v3_13ac8 to i32
  store i32 %v4_13ac8, i32* %ip.global-to-local, align 4
  %v1_13acc = add i32 %v0_13ac0, 16
  %v2_13acc = inttoptr i32 %v1_13acc to i32*
  %v3_13acc = load i32, i32* %v2_13acc, align 4
  store i32 %v3_13acc, i32* %r1.global-to-local, align 4
  %v1_13ad0 = load i32, i32* %r6.global-to-local, align 4
  %v2_13ad0 = add i32 %v1_13ad0, 44
  %v3_13ad0 = inttoptr i32 %v2_13ad0 to i32*
  store i32 %v3_13ac0, i32* %v3_13ad0, align 4
  %v0_13ad4 = load i32, i32* %r5.global-to-local, align 4
  %v1_13ad4 = add i32 %v0_13ad4, 24
  %v2_13ad4 = inttoptr i32 %v1_13ad4 to i32*
  %v3_13ad4 = load i32, i32* %v2_13ad4, align 4
  store i32 %v3_13ad4, i32* %r3.global-to-local, align 4
  %v1_13ad8 = load i32, i32* %r6.global-to-local, align 4
  %v2_13ad8 = add i32 %v1_13ad8, 48
  %v3_13ad8 = inttoptr i32 %v2_13ad8 to i32*
  store i32 %v3_13ad4, i32* %v3_13ad8, align 4
  %v0_13adc = load i32, i32* %r5.global-to-local, align 4
  %v1_13adc = add i32 %v0_13adc, 28
  %v2_13adc = inttoptr i32 %v1_13adc to i32*
  %v3_13adc = load i32, i32* %v2_13adc, align 4
  store i32 %v3_13adc, i32* %r3.global-to-local, align 4
  %v1_13ae0 = load i32, i32* %r6.global-to-local, align 4
  %v2_13ae0 = add i32 %v1_13ae0, 52
  %v3_13ae0 = inttoptr i32 %v2_13ae0 to i32*
  store i32 %v3_13adc, i32* %v3_13ae0, align 4
  %v0_13ae4 = load i32, i32* %r5.global-to-local, align 4
  %v1_13ae4 = add i32 %v0_13ae4, 32
  %v2_13ae4 = inttoptr i32 %v1_13ae4 to i32*
  %v3_13ae4 = load i32, i32* %v2_13ae4, align 4
  store i32 %v3_13ae4, i32* %r3.global-to-local, align 4
  %v1_13ae8 = load i32, i32* %r6.global-to-local, align 4
  %v2_13ae8 = add i32 %v1_13ae8, 56
  %v3_13ae8 = inttoptr i32 %v2_13ae8 to i32*
  store i32 %v3_13ae4, i32* %v3_13ae8, align 4
  %v0_13aec = load i32, i32* %r5.global-to-local, align 4
  %v1_13aec = add i32 %v0_13aec, 40
  %v2_13aec = inttoptr i32 %v1_13aec to i32*
  %v3_13aec = load i32, i32* %v2_13aec, align 4
  store i32 %v3_13aec, i32* %r3.global-to-local, align 4
  %v1_13af0 = load i32, i32* %r6.global-to-local, align 4
  %v2_13af0 = add i32 %v1_13af0, 64
  %v3_13af0 = inttoptr i32 %v2_13af0 to i32*
  store i32 %v3_13aec, i32* %v3_13af0, align 4
  %v0_13af4 = load i32, i32* %r5.global-to-local, align 4
  %v1_13af4 = add i32 %v0_13af4, 48
  %v2_13af4 = inttoptr i32 %v1_13af4 to i32*
  %v3_13af4 = load i32, i32* %v2_13af4, align 4
  store i32 %v3_13af4, i32* %r3.global-to-local, align 4
  %v1_13af8 = load i32, i32* %r6.global-to-local, align 4
  %v2_13af8 = add i32 %v1_13af8, 72
  %v3_13af8 = inttoptr i32 %v2_13af8 to i32*
  store i32 %v3_13af4, i32* %v3_13af8, align 4
  %v0_13afc = load i32, i32* %r5.global-to-local, align 4
  %v1_13afc = add i32 %v0_13afc, 36
  %v2_13afc = inttoptr i32 %v1_13afc to i32*
  %v3_13afc = load i32, i32* %v2_13afc, align 4
  store i32 %v3_13afc, i32* %r3.global-to-local, align 4
  %v1_13b00 = load i32, i32* %r6.global-to-local, align 4
  %v2_13b00 = add i32 %v1_13b00, 60
  %v3_13b00 = inttoptr i32 %v2_13b00 to i32*
  store i32 %v3_13afc, i32* %v3_13b00, align 4
  %v0_13b04 = load i32, i32* %r5.global-to-local, align 4
  %v1_13b04 = add i32 %v0_13b04, 44
  %v2_13b04 = inttoptr i32 %v1_13b04 to i32*
  %v3_13b04 = load i32, i32* %v2_13b04, align 4
  store i32 %v3_13b04, i32* %r3.global-to-local, align 4
  %v0_13b08 = load i32, i32* %r0.global-to-local, align 4
  %v1_13b08 = load i32, i32* %ip.global-to-local, align 4
  %v4_13b08 = mul i32 %v1_13b08, 256
  %v5_13b08 = or i32 %v4_13b08, %v0_13b08
  store i32 %v5_13b08, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_13b10 = load i32, i32* %r6.global-to-local, align 4
  %v2_13b10 = add i32 %v1_13b10, 28
  %v3_13b10 = inttoptr i32 %v2_13b10 to i32*
  store i32 %v5_13b08, i32* %v3_13b10, align 4
  %v0_13b14 = load i32, i32* %r1.global-to-local, align 4
  %v1_13b14 = load i32, i32* %r6.global-to-local, align 4
  %v2_13b14 = add i32 %v1_13b14, 32
  %v3_13b14 = inttoptr i32 %v2_13b14 to i32*
  store i32 %v0_13b14, i32* %v3_13b14, align 4
  %v0_13b18 = load i32, i32* %r2.global-to-local, align 4
  %v1_13b18 = load i32, i32* %r6.global-to-local, align 4
  %v2_13b18 = add i32 %v1_13b18, 36
  %v3_13b18 = inttoptr i32 %v2_13b18 to i32*
  store i32 %v0_13b18, i32* %v3_13b18, align 4
  %v0_13b1c = load i32, i32* %r3.global-to-local, align 4
  %v1_13b1c = load i32, i32* %r6.global-to-local, align 4
  %v2_13b1c = add i32 %v1_13b1c, 68
  %v3_13b1c = inttoptr i32 %v2_13b1c to i32*
  store i32 %v0_13b1c, i32* %v3_13b1c, align 4
  %v0_13b20 = load i32, i32* %r5.global-to-local, align 4
  %v1_13b20 = add i32 %v0_13b20, 52
  %v2_13b20 = inttoptr i32 %v1_13b20 to i32*
  %v3_13b20 = load i32, i32* %v2_13b20, align 4
  store i32 %v3_13b20, i32* %r3.global-to-local, align 4
  %v1_13b24 = load i32, i32* %r6.global-to-local, align 4
  %v2_13b24 = add i32 %v1_13b24, 76
  %v3_13b24 = inttoptr i32 %v2_13b24 to i32*
  store i32 %v3_13b20, i32* %v3_13b24, align 4
  %v2_13b28 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13b28, i32* %r4.global-to-local, align 4
  ret i32 %v5_13b08

; uselistorder directives
  uselistorder i32 %v0_13ac0, { 1, 0, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 76, { 2, 0, 1 }
  uselistorder i32 68, { 2, 0, 1 }
  uselistorder i32 60, { 3, 1, 2, 0, 4 }
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 11, 8, 9, 40, 10, 12, 13, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 6, 23, 24, 25, 7, 26, 27, 28, 0, 29, 30, 31, 32, 33, 1, 34, 35, 36, 37, 38, 2, 39 }
  uselistorder i32 56, { 2, 0, 1, 3, 4 }
  uselistorder i32 52, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 15, { 7, 6, 5, 8, 2, 3, 0, 9, 10, 4, 11, 12, 13, 14, 1, 15 }
  uselistorder i32 14, { 12, 10, 21, 3, 11, 0, 9, 4, 13, 5, 6, 7, 8, 14, 15, 1, 16, 17, 18, 19, 2, 20 }
  uselistorder i32 13, { 24, 20, 19, 21, 22, 23, 25, 5, 26, 6, 27, 7, 28, 8, 29, 9, 30, 10, 31, 11, 32, 12, 33, 13, 34, 14, 35, 15, 36, 0, 1, 16, 17, 18, 37, 38, 39, 40, 41, 2, 42, 43, 44, 45, 46, 47, 48, 49, 3, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 4, 62, 63 }
  uselistorder i32 9, { 56, 57, 58, 6, 4, 59, 7, 5, 60, 49, 9, 53, 10, 52, 8, 3, 61, 50, 62, 2, 51, 11, 63, 12, 64, 13, 65, 14, 66, 15, 67, 16, 68, 17, 69, 18, 70, 19, 71, 20, 72, 21, 73, 22, 74, 23, 75, 24, 76, 25, 77, 26, 78, 27, 79, 28, 80, 81, 54, 55, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 1, 39, 38, 93, 82, 83, 40, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 (i8*, i32)* @function_121f0, { 1, 0, 6, 5, 2, 3, 4 }
  uselistorder i32 88, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
}

define i32 @function_13b30() local_unnamed_addr {
dec_label_pc_13b30:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13b30 = load i32, i32* @r1, align 4
  %v1_13b30 = load i32, i32* @r0, align 4
  %v2_13b30 = sub i32 %v0_13b30, %v1_13b30
  %v3_13b30 = icmp ult i32 %v0_13b30, %v1_13b30
  %v4_13b30 = xor i32 %v1_13b30, %v0_13b30
  %v5_13b30 = xor i32 %v2_13b30, %v0_13b30
  %v6_13b30 = and i32 %v5_13b30, %v4_13b30
  %v7_13b30 = icmp slt i32 %v6_13b30, 0
  store i1 %v7_13b30, i1* %cpsr_v.global-to-local, align 1
  %v8_13b30 = icmp slt i32 %v2_13b30, 0
  store i1 %v8_13b30, i1* %cpsr_n.global-to-local, align 1
  %v9_13b30 = icmp eq i32 %v0_13b30, %v1_13b30
  store i1 %v9_13b30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13b30, label %dec_label_pc_13d7c, label %dec_label_pc_13b38

dec_label_pc_13b38:                               ; preds = %dec_label_pc_13b30
  br i1 %v9_13b30, label %.thread122, label %bb

.thread122:                                       ; preds = %bb144, %.thread121, %bb141, %dec_label_pc_13b38
  %merge = phi i32 [ %v0_13b30, %dec_label_pc_13b38 ], [ %v2_13e10, %bb141 ], [ %v11_13e2c, %bb144 ], [ %v7_13e2c, %.thread121 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_13b38
  store i32 %v1_13b30, i32* %stack_var_-8, align 4
  %v0_13b40 = load i32, i32* @r2, align 4
  %v2_13b40 = add i32 %v0_13b40, -4
  store i32 %v2_13b40, i32* %r2.global-to-local, align 4
  %v4_13b40 = sub i32 3, %v0_13b40
  %v5_13b40 = and i32 %v4_13b40, %v0_13b40
  %v6_13b40 = icmp slt i32 %v5_13b40, 0
  store i1 %v6_13b40, i1* %cpsr_v.global-to-local, align 1
  %v7_13b40 = icmp slt i32 %v2_13b40, 0
  store i1 %v7_13b40, i1* %cpsr_n.global-to-local, align 1
  %v8_13b40 = icmp eq i32 %v0_13b40, 4
  store i1 %v8_13b40, i1* %cpsr_z.global-to-local, align 1
  %v5_13b44 = icmp slt i32 %v0_13b40, 4
  br i1 %v5_13b44, label %bb131, label %dec_label_pc_13b48

dec_label_pc_13b48:                               ; preds = %bb
  %v1_13b48 = urem i32 %v1_13b30, 4
  store i32 %v1_13b48, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13b48 = icmp eq i32 %v1_13b48, 0
  store i1 %v2_13b48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13b48, label %dec_label_pc_13b50, label %dec_label_pc_13bf4

dec_label_pc_13b50:                               ; preds = %dec_label_pc_13b48
  %v1_13b50 = urem i32 %v0_13b30, 4
  store i32 %v1_13b50, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13b50 = icmp eq i32 %v1_13b50, 0
  store i1 %v2_13b50, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_13b30 to i2
  br i1 %v2_13b50, label %dec_label_pc_13b58, label %dec_label_pc_13c24

dec_label_pc_13b58:                               ; preds = %dec_label_pc_13b50, %dec_label_pc_13c1c
  %v0_13b7092 = phi i32 [ %v1_13b30, %dec_label_pc_13b50 ], [ %v0_13c6c75, %dec_label_pc_13c1c ]
  %v0_13b6c91 = phi i32 [ %v0_13b30, %dec_label_pc_13b50 ], [ %v0_13c1c, %dec_label_pc_13c1c ]
  %v0_13b58 = phi i32 [ %v2_13b40, %dec_label_pc_13b50 ], [ %v2_13c14, %dec_label_pc_13c1c ]
  %v2_13b58 = add i32 %v0_13b58, -8
  store i32 %v2_13b58, i32* %r2.global-to-local, align 4
  %v4_13b58 = sub i32 7, %v0_13b58
  %v5_13b58 = and i32 %v4_13b58, %v0_13b58
  %v6_13b58 = icmp slt i32 %v5_13b58, 0
  store i1 %v6_13b58, i1* %cpsr_v.global-to-local, align 1
  %v7_13b58 = icmp slt i32 %v2_13b58, 0
  store i1 %v7_13b58, i1* %cpsr_n.global-to-local, align 1
  %v8_13b58 = icmp eq i32 %v0_13b58, 8
  store i1 %v8_13b58, i1* %cpsr_z.global-to-local, align 1
  %v5_13b5c = icmp slt i32 %v0_13b58, 8
  br i1 %v5_13b5c, label %dec_label_pc_13bac, label %dec_label_pc_13b60

dec_label_pc_13b60:                               ; preds = %dec_label_pc_13b58
  %v2_13b60 = add i32 %v0_13b58, -28
  store i32 %v2_13b60, i32* %r2.global-to-local, align 4
  %v4_13b60 = sub i32 27, %v0_13b58
  %v5_13b60 = and i32 %v4_13b60, %v2_13b58
  %v6_13b60 = icmp slt i32 %v5_13b60, 0
  store i1 %v6_13b60, i1* %cpsr_v.global-to-local, align 1
  %v7_13b60 = icmp slt i32 %v2_13b60, 0
  store i1 %v7_13b60, i1* %cpsr_n.global-to-local, align 1
  %v8_13b60 = icmp eq i32 %v2_13b58, 20
  store i1 %v8_13b60, i1* %cpsr_z.global-to-local, align 1
  %v5_13b64 = icmp slt i32 %v2_13b58, 20
  br i1 %v5_13b64, label %dec_label_pc_13b98, label %dec_label_pc_13b68

dec_label_pc_13b68:                               ; preds = %dec_label_pc_13b60
  %v0_13b68 = load i32, i32* @r4, align 4
  store i32 %v0_13b68, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13b6c

dec_label_pc_13b6c:                               ; preds = %dec_label_pc_13b6c.dec_label_pc_13b6c_crit_edge, %dec_label_pc_13b68
  %v0_13b70 = phi i32 [ %v12_13b78, %dec_label_pc_13b6c.dec_label_pc_13b6c_crit_edge ], [ %v0_13b7092, %dec_label_pc_13b68 ]
  %v0_13b6c = phi i32 [ %v0_13b6c.pre, %dec_label_pc_13b6c.dec_label_pc_13b6c_crit_edge ], [ %v0_13b6c91, %dec_label_pc_13b68 ]
  %v1_13b6c = inttoptr i32 %v0_13b6c to i32*
  %v2_13b6c = load i32, i32* %v1_13b6c, align 4
  store i32 %v2_13b6c, i32* %r3.global-to-local, align 4
  %v3_13b6c = add i32 %v0_13b6c, 4
  %v4_13b6c = inttoptr i32 %v3_13b6c to i32*
  %v5_13b6c = load i32, i32* %v4_13b6c, align 4
  store i32 %v5_13b6c, i32* %r4.global-to-local, align 4
  %v6_13b6c = add i32 %v0_13b6c, 8
  %v7_13b6c = inttoptr i32 %v6_13b6c to i32*
  %v8_13b6c = load i32, i32* %v7_13b6c, align 4
  store i32 %v8_13b6c, i32* %ip.global-to-local, align 4
  %v9_13b6c = add i32 %v0_13b6c, 12
  %v10_13b6c = inttoptr i32 %v9_13b6c to i32*
  %v11_13b6c = load i32, i32* %v10_13b6c, align 4
  store i32 %v11_13b6c, i32* %lr.global-to-local, align 4
  %v12_13b6c = add i32 %v0_13b6c, 16
  store i32 %v12_13b6c, i32* %r1.global-to-local, align 4
  %v1_13b70 = inttoptr i32 %v0_13b70 to i32*
  store i32 %v2_13b6c, i32* %v1_13b70, align 4
  %v3_13b70 = add i32 %v0_13b70, 4
  %v4_13b70 = inttoptr i32 %v3_13b70 to i32*
  %v5_13b70 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13b70, i32* %v4_13b70, align 4
  %v6_13b70 = add i32 %v0_13b70, 8
  %v7_13b70 = inttoptr i32 %v6_13b70 to i32*
  %v8_13b70 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_13b70, i32* %v7_13b70, align 4
  %v9_13b70 = add i32 %v0_13b70, 12
  %v10_13b70 = inttoptr i32 %v9_13b70 to i32*
  %v11_13b70 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_13b70, i32* %v10_13b70, align 4
  %v12_13b70 = add i32 %v0_13b70, 16
  store i32 %v12_13b70, i32* %r0.global-to-local, align 4
  %v0_13b74 = load i32, i32* %r1.global-to-local, align 4
  %v1_13b74 = inttoptr i32 %v0_13b74 to i32*
  %v2_13b74 = load i32, i32* %v1_13b74, align 4
  store i32 %v2_13b74, i32* %r3.global-to-local, align 4
  %v3_13b74 = add i32 %v0_13b74, 4
  %v4_13b74 = inttoptr i32 %v3_13b74 to i32*
  %v5_13b74 = load i32, i32* %v4_13b74, align 4
  store i32 %v5_13b74, i32* %r4.global-to-local, align 4
  %v6_13b74 = add i32 %v0_13b74, 8
  %v7_13b74 = inttoptr i32 %v6_13b74 to i32*
  %v8_13b74 = load i32, i32* %v7_13b74, align 4
  store i32 %v8_13b74, i32* %ip.global-to-local, align 4
  %v9_13b74 = add i32 %v0_13b74, 12
  %v10_13b74 = inttoptr i32 %v9_13b74 to i32*
  %v11_13b74 = load i32, i32* %v10_13b74, align 4
  store i32 %v11_13b74, i32* @lr, align 4
  %v12_13b74 = add i32 %v0_13b74, 16
  store i32 %v12_13b74, i32* @r1, align 4
  %v1_13b78 = inttoptr i32 %v12_13b70 to i32*
  store i32 %v2_13b74, i32* %v1_13b78, align 4
  %v3_13b78 = add i32 %v0_13b70, 20
  %v4_13b78 = inttoptr i32 %v3_13b78 to i32*
  %v5_13b78 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13b78, i32* %v4_13b78, align 4
  %v6_13b78 = add i32 %v0_13b70, 24
  %v7_13b78 = inttoptr i32 %v6_13b78 to i32*
  %v8_13b78 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_13b78, i32* %v7_13b78, align 4
  %v9_13b78 = add i32 %v0_13b70, 28
  %v10_13b78 = inttoptr i32 %v9_13b78 to i32*
  %v11_13b78 = load i32, i32* @lr, align 4
  store i32 %v11_13b78, i32* %v10_13b78, align 4
  %v12_13b78 = add i32 %v0_13b70, 32
  store i32 %v12_13b78, i32* @r0, align 4
  %v0_13b7c = load i32, i32* %r2.global-to-local, align 4
  %v2_13b7c = add i32 %v0_13b7c, -32
  store i32 %v2_13b7c, i32* %r2.global-to-local, align 4
  %v6_13b80 = icmp slt i32 %v0_13b7c, 32
  br i1 %v6_13b80, label %dec_label_pc_13b84, label %dec_label_pc_13b6c.dec_label_pc_13b6c_crit_edge

dec_label_pc_13b6c.dec_label_pc_13b6c_crit_edge:  ; preds = %dec_label_pc_13b6c
  %v0_13b6c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13b6c

dec_label_pc_13b84:                               ; preds = %dec_label_pc_13b6c
  %v4_13b84 = add i32 %v0_13b7c, -16
  %v6_13b84 = add i32 %v0_13b7c, 2147483616
  %v7_13b84 = and i32 %v4_13b84, %v6_13b84
  %v8_13b84 = icmp slt i32 %v7_13b84, 0
  store i1 %v8_13b84, i1* %cpsr_v.global-to-local, align 1
  %v9_13b84 = icmp slt i32 %v4_13b84, 0
  store i1 %v9_13b84, i1* %cpsr_n.global-to-local, align 1
  %v10_13b84 = icmp eq i32 %v4_13b84, 0
  store i1 %v10_13b84, i1* %cpsr_z.global-to-local, align 1
  %v5_13b88 = icmp slt i32 %v2_13b7c, -16
  br i1 %v5_13b88, label %.thread1, label %bb128

bb128:                                            ; preds = %dec_label_pc_13b84
  %v6_13b88 = load i32, i32* @r1, align 4
  %v7_13b88 = inttoptr i32 %v6_13b88 to i32*
  %v8_13b88 = load i32, i32* %v7_13b88, align 4
  store i32 %v8_13b88, i32* %r3.global-to-local, align 4
  %v9_13b88 = add i32 %v6_13b88, 4
  %v10_13b88 = inttoptr i32 %v9_13b88 to i32*
  %v11_13b88 = load i32, i32* %v10_13b88, align 4
  store i32 %v11_13b88, i32* %r4.global-to-local, align 4
  %v12_13b88 = add i32 %v6_13b88, 8
  %v13_13b88 = inttoptr i32 %v12_13b88 to i32*
  %v14_13b88 = load i32, i32* %v13_13b88, align 4
  store i32 %v14_13b88, i32* %ip.global-to-local, align 4
  %v15_13b88 = add i32 %v6_13b88, 12
  %v16_13b88 = inttoptr i32 %v15_13b88 to i32*
  %v17_13b88 = load i32, i32* %v16_13b88, align 4
  store i32 %v17_13b88, i32* @lr, align 4
  %v18_13b88 = add i32 %v6_13b88, 16
  store i32 %v18_13b88, i32* @r1, align 4
  %v7_13b8c = inttoptr i32 %v12_13b78 to i32*
  store i32 %v8_13b88, i32* %v7_13b8c, align 4
  %v9_13b8c = add i32 %v0_13b70, 36
  %v10_13b8c = inttoptr i32 %v9_13b8c to i32*
  %v11_13b8c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_13b8c, i32* %v10_13b8c, align 4
  %v12_13b8c = add i32 %v0_13b70, 40
  %v13_13b8c = inttoptr i32 %v12_13b8c to i32*
  %v14_13b8c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v14_13b8c, i32* %v13_13b8c, align 4
  %v15_13b8c = add i32 %v0_13b70, 44
  %v16_13b8c = inttoptr i32 %v15_13b8c to i32*
  %v17_13b8c = load i32, i32* @lr, align 4
  store i32 %v17_13b8c, i32* %v16_13b8c, align 4
  %v18_13b8c = add i32 %v0_13b70, 48
  store i32 %v18_13b8c, i32* @r0, align 4
  %v6_13b90 = load i32, i32* %r2.global-to-local, align 4
  %v7_13b90 = add i32 %v6_13b90, -16
  store i32 %v7_13b90, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13b84, %bb128
  %v3_13ba0101 = phi i32 [ %v12_13b78, %dec_label_pc_13b84 ], [ %v18_13b8c, %bb128 ]
  %v0_13b9895 = phi i32 [ %v2_13b7c, %dec_label_pc_13b84 ], [ %v7_13b90, %bb128 ]
  %v2_13b94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13b94, i32* @r4, align 4
  br label %dec_label_pc_13b98

dec_label_pc_13b98:                               ; preds = %dec_label_pc_13b60, %.thread1
  %v3_13ba0100 = phi i32 [ %v0_13b7092, %dec_label_pc_13b60 ], [ %v3_13ba0101, %.thread1 ]
  %v0_13b98 = phi i32 [ %v2_13b60, %dec_label_pc_13b60 ], [ %v0_13b9895, %.thread1 ]
  %v1_13b98 = add i32 %v0_13b98, 20
  store i32 %v1_13b98, i32* %r2.global-to-local, align 4
  %v3_13b98 = sub i32 0, %v0_13b98
  %v4_13b98 = and i32 %v1_13b98, %v3_13b98
  %v5_13b98 = icmp slt i32 %v4_13b98, 0
  store i1 %v5_13b98, i1* %cpsr_v.global-to-local, align 1
  %v6_13b98 = icmp slt i32 %v1_13b98, 0
  store i1 %v6_13b98, i1* %cpsr_n.global-to-local, align 1
  %v7_13b98 = icmp eq i32 %v1_13b98, 0
  store i1 %v7_13b98, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13b9c

dec_label_pc_13b9c:                               ; preds = %.thread117, %dec_label_pc_13b98
  %v0_13bac.pre147 = phi i32 [ %v0_13bac.pre, %.thread117 ], [ %v1_13b98, %dec_label_pc_13b98 ]
  %v3_13ba0 = phi i32 [ %v3_13ba098118, %.thread117 ], [ %v3_13ba0100, %dec_label_pc_13b98 ]
  %v1_13ba4 = phi i1 [ %v1_13ba8, %.thread117 ], [ %v5_13b98, %dec_label_pc_13b98 ]
  %v0_13ba4 = phi i1 [ %v0_13ba8, %.thread117 ], [ %v6_13b98, %dec_label_pc_13b98 ]
  %v2_13b9c = xor i1 %v1_13ba4, %v0_13ba4
  br i1 %v2_13b9c, label %.thread117, label %bb129

bb129:                                            ; preds = %dec_label_pc_13b9c
  %v3_13b9c = load i32, i32* @r1, align 4
  %v4_13b9c = inttoptr i32 %v3_13b9c to i32*
  %v5_13b9c = load i32, i32* %v4_13b9c, align 4
  store i32 %v5_13b9c, i32* %r3.global-to-local, align 4
  %v6_13b9c = add i32 %v3_13b9c, 4
  %v7_13b9c = inttoptr i32 %v6_13b9c to i32*
  %v8_13b9c = load i32, i32* %v7_13b9c, align 4
  store i32 %v8_13b9c, i32* %ip.global-to-local, align 4
  %v9_13b9c = add i32 %v3_13b9c, 8
  %v10_13b9c = inttoptr i32 %v9_13b9c to i32*
  %v11_13b9c = load i32, i32* %v10_13b9c, align 4
  store i32 %v11_13b9c, i32* @lr, align 4
  %v12_13b9c = add i32 %v3_13b9c, 12
  store i32 %v12_13b9c, i32* @r1, align 4
  %v4_13ba0 = inttoptr i32 %v3_13ba0 to i32*
  store i32 %v5_13b9c, i32* %v4_13ba0, align 4
  %v6_13ba0 = add i32 %v3_13ba0, 4
  %v7_13ba0 = inttoptr i32 %v6_13ba0 to i32*
  %v8_13ba0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_13ba0, i32* %v7_13ba0, align 4
  %v9_13ba0 = add i32 %v3_13ba0, 8
  %v10_13ba0 = inttoptr i32 %v9_13ba0 to i32*
  %v11_13ba0 = load i32, i32* @lr, align 4
  store i32 %v11_13ba0, i32* %v10_13ba0, align 4
  %v12_13ba0 = add i32 %v3_13ba0, 12
  store i32 %v12_13ba0, i32* @r0, align 4
  %v3_13ba4 = load i32, i32* %r2.global-to-local, align 4
  %v4_13ba4 = add i32 %v3_13ba4, -12
  store i32 %v4_13ba4, i32* %r2.global-to-local, align 4
  %v6_13ba4 = sub i32 11, %v3_13ba4
  %v7_13ba4 = and i32 %v6_13ba4, %v3_13ba4
  %v8_13ba4 = icmp slt i32 %v7_13ba4, 0
  store i1 %v8_13ba4, i1* %cpsr_v.global-to-local, align 1
  %v9_13ba4 = icmp slt i32 %v4_13ba4, 0
  store i1 %v9_13ba4, i1* %cpsr_n.global-to-local, align 1
  %v10_13ba4 = icmp eq i32 %v3_13ba4, 12
  store i1 %v10_13ba4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread117

.thread117:                                       ; preds = %dec_label_pc_13b9c, %bb129
  %v0_13bac.pre = phi i32 [ %v4_13ba4, %bb129 ], [ %v0_13bac.pre147, %dec_label_pc_13b9c ]
  %v3_13ba098118 = phi i32 [ %v12_13ba0, %bb129 ], [ %v3_13ba0, %dec_label_pc_13b9c ]
  %v1_13ba8 = phi i1 [ %v8_13ba4, %bb129 ], [ %v1_13ba4, %dec_label_pc_13b9c ]
  %v0_13ba8 = phi i1 [ %v9_13ba4, %bb129 ], [ %v0_13ba4, %dec_label_pc_13b9c ]
  %v2_13ba8 = xor i1 %v1_13ba8, %v0_13ba8
  br i1 %v2_13ba8, label %dec_label_pc_13bac, label %dec_label_pc_13b9c

dec_label_pc_13bac:                               ; preds = %.thread117, %dec_label_pc_13b58
  %v7_13bbc = phi i32 [ %v0_13b7092, %dec_label_pc_13b58 ], [ %v3_13ba098118, %.thread117 ]
  %v0_13bac = phi i32 [ %v2_13b58, %dec_label_pc_13b58 ], [ %v0_13bac.pre, %.thread117 ]
  %v2_13bac = add i32 %v0_13bac, 8
  store i32 %v2_13bac, i32* %r2.global-to-local, align 4
  %v4_13bac = sub i32 0, %v0_13bac
  %v5_13bac = and i32 %v2_13bac, %v4_13bac
  %v6_13bac = icmp slt i32 %v5_13bac, 0
  store i1 %v6_13bac, i1* %cpsr_v.global-to-local, align 1
  %v7_13bac = icmp slt i32 %v2_13bac, 0
  store i1 %v7_13bac, i1* %cpsr_n.global-to-local, align 1
  %v8_13bac = icmp eq i32 %v2_13bac, 0
  store i1 %v8_13bac, i1* %cpsr_z.global-to-local, align 1
  %v5_13bb0 = icmp slt i32 %v0_13bac, -8
  br i1 %v5_13bb0, label %bb131, label %dec_label_pc_13bb4

dec_label_pc_13bb4:                               ; preds = %dec_label_pc_13bac
  %v6_13bb4 = add i32 %v0_13bac, 4
  store i32 %v6_13bb4, i32* %r2.global-to-local, align 4
  %v8_13bb4 = sub i32 -5, %v0_13bac
  %v9_13bb4 = and i32 %v8_13bb4, %v2_13bac
  %v10_13bb4 = icmp slt i32 %v9_13bb4, 0
  store i1 %v10_13bb4, i1* %cpsr_v.global-to-local, align 1
  %v11_13bb4 = icmp slt i32 %v6_13bb4, 0
  store i1 %v11_13bb4, i1* %cpsr_n.global-to-local, align 1
  %v12_13bb4 = icmp eq i32 %v2_13bac, 4
  store i1 %v12_13bb4, i1* %cpsr_z.global-to-local, align 1
  %v5_13bb8 = icmp slt i32 %v2_13bac, 4
  %v6_13bb8 = load i32, i32* @r1, align 4
  %v7_13bb8 = inttoptr i32 %v6_13bb8 to i32*
  %v8_13bb8 = load i32, i32* %v7_13bb8, align 4
  store i32 %v8_13bb8, i32* %r3.global-to-local, align 4
  %v10_13bb8 = add i32 %v6_13bb8, 4
  br i1 %v5_13bb8, label %.thread5, label %bb130

.thread5:                                         ; preds = %dec_label_pc_13bb4
  store i32 %v10_13bb8, i32* @r1, align 4
  %v8_13bbc = inttoptr i32 %v7_13bbc to i32*
  store i32 %v8_13bb8, i32* %v8_13bbc, align 4
  %v9_13bbc = load i32, i32* @r0, align 4
  %v10_13bbc = add i32 %v9_13bbc, 4
  store i32 %v10_13bbc, i32* @r0, align 4
  %v0_13bcc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb131

bb130:                                            ; preds = %dec_label_pc_13bb4
  %v10_13bc0 = inttoptr i32 %v10_13bb8 to i32*
  %v11_13bc0 = load i32, i32* %v10_13bc0, align 4
  store i32 %v11_13bc0, i32* %ip.global-to-local, align 4
  %v12_13bc0 = add i32 %v6_13bb8, 8
  store i32 %v12_13bc0, i32* @r1, align 4
  %v7_13bc4 = inttoptr i32 %v7_13bbc to i32*
  store i32 %v8_13bb8, i32* %v7_13bc4, align 4
  %v9_13bc4 = add i32 %v7_13bbc, 4
  %v10_13bc4 = inttoptr i32 %v9_13bc4 to i32*
  %v11_13bc4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_13bc4, i32* %v10_13bc4, align 4
  %v12_13bc4 = add i32 %v7_13bbc, 8
  store i32 %v12_13bc4, i32* @r0, align 4
  %v6_13bc8 = load i32, i32* %r2.global-to-local, align 4
  %v7_13bc8 = add i32 %v6_13bc8, -4
  store i32 %v7_13bc8, i32* %r2.global-to-local, align 4
  br label %bb131

bb131:                                            ; preds = %.thread5, %.thread11, %dec_label_pc_13bac, %bb, %dec_label_pc_13d74, %dec_label_pc_13d08, %dec_label_pc_13c9c, %bb130
  %v2_13bdc = phi i32 [ %v10_13bbc, %.thread5 ], [ %v0_13c6c75, %.thread11 ], [ %v7_13bbc, %dec_label_pc_13bac ], [ %v1_13b30, %bb ], [ %v2_13bdc113, %dec_label_pc_13d74 ], [ %v2_13bdc112, %dec_label_pc_13d08 ], [ %v2_13bdc111, %dec_label_pc_13c9c ], [ %v12_13bc4, %bb130 ]
  %v0_13bcc = phi i32 [ %v0_13bcc.pre, %.thread5 ], [ %v2_13c14, %.thread11 ], [ %v2_13bac, %dec_label_pc_13bac ], [ %v2_13b40, %bb ], [ %v0_13bcc109, %dec_label_pc_13d74 ], [ %v0_13bcc108, %dec_label_pc_13d08 ], [ %v0_13bcc107, %dec_label_pc_13c9c ], [ %v7_13bc8, %bb130 ]
  %v1_13bcc = add i32 %v0_13bcc, 4
  store i32 %v1_13bcc, i32* %r2.global-to-local, align 4
  %v3_13bcc = sub i32 0, %v0_13bcc
  %v4_13bcc = and i32 %v1_13bcc, %v3_13bcc
  %v5_13bcc = icmp slt i32 %v4_13bcc, 0
  store i1 %v5_13bcc, i1* %cpsr_v.global-to-local, align 1
  %v6_13bcc = icmp slt i32 %v1_13bcc, 0
  store i1 %v6_13bcc, i1* %cpsr_n.global-to-local, align 1
  %v7_13bcc = icmp eq i32 %v1_13bcc, 0
  store i1 %v7_13bcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13bcc, label %bb132, label %bb133

bb132:                                            ; preds = %bb131
  %v3_13bd0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_13bd0, i32* %r0.global-to-local, align 4
  ret i32 %v3_13bd0

bb133:                                            ; preds = %bb131
  %v1_13bd4 = add i32 %v0_13bcc, 2
  %v3_13bd4 = sub i32 -3, %v0_13bcc
  %v4_13bd4 = and i32 %v3_13bd4, %v1_13bcc
  %v5_13bd4 = icmp slt i32 %v4_13bd4, 0
  store i1 %v5_13bd4, i1* %cpsr_v.global-to-local, align 1
  %v6_13bd4 = icmp slt i32 %v1_13bd4, 0
  store i1 %v6_13bd4, i1* %cpsr_n.global-to-local, align 1
  %v7_13bd4 = icmp eq i32 %v1_13bcc, 2
  store i1 %v7_13bd4, i1* %cpsr_z.global-to-local, align 1
  %v0_13bd8 = load i32, i32* @r1, align 4
  %v1_13bd8 = inttoptr i32 %v0_13bd8 to i8*
  %v2_13bd8 = load i8, i8* %v1_13bd8, align 1
  %v3_13bd8 = zext i8 %v2_13bd8 to i32
  store i32 %v3_13bd8, i32* %r3.global-to-local, align 4
  %v5_13bd8 = add i32 %v0_13bd8, 1
  store i32 %v5_13bd8, i32* %r1.global-to-local, align 4
  %v3_13bdc = inttoptr i32 %v2_13bdc to i8*
  store i8 %v2_13bd8, i8* %v3_13bdc, align 1
  %v4_13bdc = load i32, i32* @r0, align 4
  %v5_13bdc = add i32 %v4_13bdc, 1
  store i32 %v5_13bdc, i32* %r0.global-to-local, align 4
  %v0_13be0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_13be0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_13be0 = xor i1 %v0_13be0, %v1_13be0
  br i1 %v2_13be0, label %.thread119, label %bb134

bb134:                                            ; preds = %bb133
  %v3_13be0 = load i32, i32* %r1.global-to-local, align 4
  %v4_13be0 = inttoptr i32 %v3_13be0 to i8*
  %v5_13be0 = load i8, i8* %v4_13be0, align 1
  %v6_13be0 = zext i8 %v5_13be0 to i32
  store i32 %v6_13be0, i32* %r3.global-to-local, align 4
  %v8_13be0 = add i32 %v3_13be0, 1
  store i32 %v8_13be0, i32* %r1.global-to-local, align 4
  %v6_13be4 = inttoptr i32 %v5_13bdc to i8*
  store i8 %v5_13be0, i8* %v6_13be4, align 1
  %v7_13be4 = load i32, i32* %r0.global-to-local, align 4
  %v8_13be4 = add i32 %v7_13be4, 1
  store i32 %v8_13be4, i32* %r0.global-to-local, align 4
  %v1_13be8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_13be8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread119

.thread119:                                       ; preds = %bb133, %bb134
  %v7_13bec = phi i32 [ %v8_13be4, %bb134 ], [ %v5_13bdc, %bb133 ]
  %v2_13bec = phi i1 [ %v2_13be8.pre, %bb134 ], [ %v1_13be0, %bb133 ]
  %v1_13bec = phi i1 [ %v1_13be8.pre, %bb134 ], [ %v0_13be0, %bb133 ]
  %v0_13be8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_13be8 = xor i1 %v2_13bec, %v1_13bec
  %v4_13be8 = or i1 %v0_13be8, %v3_13be8
  br i1 %v4_13be8, label %.thread120, label %bb135

bb135:                                            ; preds = %.thread119
  %v5_13be8 = load i32, i32* %r1.global-to-local, align 4
  %v6_13be8 = inttoptr i32 %v5_13be8 to i8*
  %v7_13be8 = load i8, i8* %v6_13be8, align 1
  %v8_13be8 = zext i8 %v7_13be8 to i32
  store i32 %v8_13be8, i32* %r3.global-to-local, align 4
  %v10_13be8 = add i32 %v5_13be8, 1
  store i32 %v10_13be8, i32* %r1.global-to-local, align 4
  %v8_13bec = inttoptr i32 %v7_13bec to i8*
  store i8 %v7_13be8, i8* %v8_13bec, align 1
  %v9_13bec = load i32, i32* %r0.global-to-local, align 4
  %v10_13bec = add i32 %v9_13bec, 1
  store i32 %v10_13bec, i32* %r0.global-to-local, align 4
  br label %.thread120

.thread120:                                       ; preds = %.thread119, %bb135
  %v2_13bf0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13bf0, i32* %r0.global-to-local, align 4
  ret i32 %v2_13bf0

dec_label_pc_13bf4:                               ; preds = %dec_label_pc_13b48
  %v1_13bf4 = sub nsw i32 4, %v1_13b48
  store i32 %v1_13bf4, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_13bf8 = icmp ult i32 %v1_13bf4, 2
  store i1 %v8_13bf8, i1* %cpsr_n.global-to-local, align 1
  %v9_13bf8 = icmp eq i32 %v1_13bf4, 2
  store i1 %v9_13bf8, i1* %cpsr_z.global-to-local, align 1
  %v1_13bfc = inttoptr i32 %v0_13b30 to i8*
  %v2_13bfc = load i8, i8* %v1_13bfc, align 1
  %v3_13bfc = zext i8 %v2_13bfc to i32
  store i32 %v3_13bfc, i32* %r3.global-to-local, align 4
  %v5_13bfc = add i32 %v0_13b30, 1
  store i32 %v5_13bfc, i32* @r1, align 4
  %v3_13c00 = inttoptr i32 %v1_13b30 to i8*
  store i8 %v2_13bfc, i8* %v3_13c00, align 1
  %v4_13c00 = load i32, i32* @r0, align 4
  %v5_13c00 = add i32 %v4_13c00, 1
  store i32 %v5_13c00, i32* @r0, align 4
  br i1 %v8_13bf8, label %.thread11, label %bb136

bb136:                                            ; preds = %dec_label_pc_13bf4
  %v6_13c04 = load i32, i32* @r1, align 4
  %v7_13c04 = inttoptr i32 %v6_13c04 to i8*
  %v8_13c04 = load i8, i8* %v7_13c04, align 1
  %v9_13c04 = zext i8 %v8_13c04 to i32
  store i32 %v9_13c04, i32* %r3.global-to-local, align 4
  %v11_13c04 = add i32 %v6_13c04, 1
  store i32 %v11_13c04, i32* @r1, align 4
  %v9_13c08 = inttoptr i32 %v5_13c00 to i8*
  store i8 %v8_13c04, i8* %v9_13c08, align 1
  %v10_13c08 = load i32, i32* @r0, align 4
  %v11_13c08 = add i32 %v10_13c08, 1
  store i32 %v11_13c08, i32* @r0, align 4
  br i1 %v9_13bf8, label %.thread11, label %bb137

bb137:                                            ; preds = %bb136
  %v8_13c0c = load i32, i32* @r1, align 4
  %v9_13c0c = inttoptr i32 %v8_13c0c to i8*
  %v10_13c0c = load i8, i8* %v9_13c0c, align 1
  %v11_13c0c = zext i8 %v10_13c0c to i32
  store i32 %v11_13c0c, i32* %r3.global-to-local, align 4
  %v13_13c0c = add i32 %v8_13c0c, 1
  store i32 %v13_13c0c, i32* @r1, align 4
  %v11_13c10 = inttoptr i32 %v11_13c08 to i8*
  store i8 %v10_13c0c, i8* %v11_13c10, align 1
  %v12_13c10 = load i32, i32* @r0, align 4
  %v13_13c10 = add i32 %v12_13c10, 1
  store i32 %v13_13c10, i32* @r0, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb136, %dec_label_pc_13bf4, %bb137
  %v0_13c6c75 = phi i32 [ %v11_13c08, %bb136 ], [ %v5_13c00, %dec_label_pc_13bf4 ], [ %v13_13c10, %bb137 ]
  %v0_13c14 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c14 = load i32, i32* %ip.global-to-local, align 4
  %v2_13c14 = sub i32 %v0_13c14, %v1_13c14
  store i32 %v2_13c14, i32* %r2.global-to-local, align 4
  %v4_13c14 = xor i32 %v1_13c14, %v0_13c14
  %v5_13c14 = xor i32 %v2_13c14, %v0_13c14
  %v6_13c14 = and i32 %v5_13c14, %v4_13c14
  %v7_13c14 = icmp slt i32 %v6_13c14, 0
  store i1 %v7_13c14, i1* %cpsr_v.global-to-local, align 1
  %v8_13c14 = icmp slt i32 %v2_13c14, 0
  store i1 %v8_13c14, i1* %cpsr_n.global-to-local, align 1
  %v9_13c14 = icmp eq i32 %v0_13c14, %v1_13c14
  store i1 %v9_13c14, i1* %cpsr_z.global-to-local, align 1
  %v5_13c18 = icmp slt i32 %v0_13c14, %v1_13c14
  br i1 %v5_13c18, label %bb131, label %dec_label_pc_13c1c

dec_label_pc_13c1c:                               ; preds = %.thread11
  %v0_13c1c = load i32, i32* @r1, align 4
  %v1_13c1c = urem i32 %v0_13c1c, 4
  store i32 %v1_13c1c, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13c1c = icmp eq i32 %v1_13c1c, 0
  store i1 %v2_13c1c, i1* %cpsr_z.global-to-local, align 1
  %extract.t123 = trunc i32 %v0_13c1c to i2
  br i1 %v2_13c1c, label %dec_label_pc_13b58, label %dec_label_pc_13c24

dec_label_pc_13c24:                               ; preds = %dec_label_pc_13b50, %dec_label_pc_13c1c
  %v0_13c6c74 = phi i32 [ %v1_13b30, %dec_label_pc_13b50 ], [ %v0_13c6c75, %dec_label_pc_13c1c ]
  %v0_13d18 = phi i32 [ %v2_13b40, %dec_label_pc_13b50 ], [ %v2_13c14, %dec_label_pc_13c1c ]
  %v0_13c2c.off0 = phi i2 [ %extract.t, %dec_label_pc_13b50 ], [ %extract.t123, %dec_label_pc_13c1c ]
  %v0_13c24 = phi i32 [ %v0_13b30, %dec_label_pc_13b50 ], [ %v0_13c1c, %dec_label_pc_13c1c ]
  %v1_13c24 = and i32 %v0_13c24, -4
  store i32 %v1_13c24, i32* %r1.global-to-local, align 4
  %v1_13c28 = inttoptr i32 %v1_13c24 to i32*
  %v2_13c28 = load i32, i32* %v1_13c28, align 4
  store i32 %v2_13c28, i32* @lr, align 4
  %v4_13c28 = add i32 %v1_13c24, 4
  store i32 %v4_13c28, i32* %r1.global-to-local, align 4
  %v2_13d10 = add i32 %v0_13d18, -12
  %v4_13d10 = sub i32 11, %v0_13d18
  %v5_13d10 = and i32 %v4_13d10, %v0_13d18
  %v6_13d10 = icmp slt i32 %v5_13d10, 0
  store i1 %v6_13d10, i1* %cpsr_v.global-to-local, align 1
  %v7_13d10 = icmp slt i32 %v2_13d10, 0
  store i1 %v7_13d10, i1* %cpsr_n.global-to-local, align 1
  %v8_13d10 = icmp eq i32 %v0_13d18, 12
  store i1 %v8_13d10, i1* %cpsr_z.global-to-local, align 1
  %v5_13d14 = icmp slt i32 %v0_13d18, 12
  switch i2 %v0_13c2c.off0, label %dec_label_pc_13c38 [
    i2 -1, label %dec_label_pc_13d10
    i2 -2, label %dec_label_pc_13ca4
  ]

dec_label_pc_13c38:                               ; preds = %dec_label_pc_13c24
  br i1 %v5_13d14, label %dec_label_pc_13c84, label %dec_label_pc_13c40

dec_label_pc_13c40:                               ; preds = %dec_label_pc_13c38
  store i32 %v2_13d10, i32* %r2.global-to-local, align 4
  %v3_13c44 = load i32, i32* @r4, align 4
  store i32 %v3_13c44, i32* %stack_var_-16, align 4
  %v6_13c44 = load i32, i32* @r5, align 4
  store i32 %v6_13c44, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13c48

dec_label_pc_13c48:                               ; preds = %dec_label_pc_13c48.dec_label_pc_13c48_crit_edge, %dec_label_pc_13c40
  %v0_13c6c = phi i32 [ %v12_13c6c, %dec_label_pc_13c48.dec_label_pc_13c48_crit_edge ], [ %v0_13c6c74, %dec_label_pc_13c40 ]
  %v0_13c4c = phi i32 [ %v0_13c4c.pre, %dec_label_pc_13c48.dec_label_pc_13c48_crit_edge ], [ %v4_13c28, %dec_label_pc_13c40 ]
  %v0_13c48 = phi i32 [ %v0_13c48.pre, %dec_label_pc_13c48.dec_label_pc_13c48_crit_edge ], [ %v2_13c28, %dec_label_pc_13c40 ]
  %v3_13c48 = udiv i32 %v0_13c48, 256
  store i32 %v3_13c48, i32* %r3.global-to-local, align 4
  %v1_13c4c = inttoptr i32 %v0_13c4c to i32*
  %v2_13c4c = load i32, i32* %v1_13c4c, align 4
  store i32 %v2_13c4c, i32* %r4.global-to-local, align 4
  %v3_13c4c = add i32 %v0_13c4c, 4
  %v4_13c4c = inttoptr i32 %v3_13c4c to i32*
  %v5_13c4c = load i32, i32* %v4_13c4c, align 4
  store i32 %v5_13c4c, i32* %r5.global-to-local, align 4
  %v6_13c4c = add i32 %v0_13c4c, 8
  %v7_13c4c = inttoptr i32 %v6_13c4c to i32*
  %v8_13c4c = load i32, i32* %v7_13c4c, align 4
  store i32 %v8_13c4c, i32* %ip.global-to-local, align 4
  %v9_13c4c = add i32 %v0_13c4c, 12
  %v10_13c4c = inttoptr i32 %v9_13c4c to i32*
  %v11_13c4c = load i32, i32* %v10_13c4c, align 4
  store i32 %v11_13c4c, i32* @lr, align 4
  %v12_13c4c = add i32 %v0_13c4c, 16
  store i32 %v12_13c4c, i32* %r1.global-to-local, align 4
  %v4_13c50 = mul i32 %v2_13c4c, 16777216
  %v5_13c50 = or i32 %v4_13c50, %v3_13c48
  store i32 %v5_13c50, i32* %r3.global-to-local, align 4
  %v3_13c54 = udiv i32 %v2_13c4c, 256
  %v4_13c58 = mul i32 %v5_13c4c, 16777216
  %v5_13c58 = or i32 %v4_13c58, %v3_13c54
  store i32 %v5_13c58, i32* %r4.global-to-local, align 4
  %v3_13c5c = udiv i32 %v5_13c4c, 256
  %v4_13c60 = mul i32 %v8_13c4c, 16777216
  %v5_13c60 = or i32 %v4_13c60, %v3_13c5c
  store i32 %v5_13c60, i32* %r5.global-to-local, align 4
  %v3_13c64 = udiv i32 %v8_13c4c, 256
  %v4_13c68 = mul i32 %v11_13c4c, 16777216
  %v5_13c68 = or i32 %v4_13c68, %v3_13c64
  store i32 %v5_13c68, i32* %ip.global-to-local, align 4
  %v1_13c6c = inttoptr i32 %v0_13c6c to i32*
  store i32 %v5_13c50, i32* %v1_13c6c, align 4
  %v3_13c6c = add i32 %v0_13c6c, 4
  %v4_13c6c = inttoptr i32 %v3_13c6c to i32*
  %v5_13c6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13c6c, i32* %v4_13c6c, align 4
  %v6_13c6c = add i32 %v0_13c6c, 8
  %v7_13c6c = inttoptr i32 %v6_13c6c to i32*
  %v8_13c6c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_13c6c, i32* %v7_13c6c, align 4
  %v9_13c6c = add i32 %v0_13c6c, 12
  %v10_13c6c = inttoptr i32 %v9_13c6c to i32*
  %v11_13c6c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_13c6c, i32* %v10_13c6c, align 4
  %v12_13c6c = add i32 %v0_13c6c, 16
  store i32 %v12_13c6c, i32* @r0, align 4
  %v0_13c70 = load i32, i32* %r2.global-to-local, align 4
  %v2_13c70 = add i32 %v0_13c70, -16
  store i32 %v2_13c70, i32* %r2.global-to-local, align 4
  %v6_13c74 = icmp slt i32 %v0_13c70, 16
  br i1 %v6_13c74, label %dec_label_pc_13c78, label %dec_label_pc_13c48.dec_label_pc_13c48_crit_edge

dec_label_pc_13c48.dec_label_pc_13c48_crit_edge:  ; preds = %dec_label_pc_13c48
  %v0_13c48.pre = load i32, i32* @lr, align 4
  %v0_13c4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13c48

dec_label_pc_13c78:                               ; preds = %dec_label_pc_13c48
  %v2_13c78 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13c78, i32* @r4, align 4
  %v5_13c78 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_13c78, i32* @r5, align 4
  %v2_13c7c = add i32 %v0_13c70, -4
  store i32 %v2_13c7c, i32* %r2.global-to-local, align 4
  %v4_13c7c = add i32 %v0_13c70, 2147483632
  %v5_13c7c = and i32 %v2_13c7c, %v4_13c7c
  %v6_13c7c = icmp slt i32 %v5_13c7c, 0
  store i1 %v6_13c7c, i1* %cpsr_v.global-to-local, align 1
  %v7_13c7c = icmp slt i32 %v2_13c7c, 0
  store i1 %v7_13c7c, i1* %cpsr_n.global-to-local, align 1
  %v8_13c7c = icmp eq i32 %v2_13c7c, 0
  store i1 %v8_13c7c, i1* %cpsr_z.global-to-local, align 1
  %v5_13c80 = icmp slt i32 %v2_13c70, -12
  br i1 %v5_13c80, label %dec_label_pc_13c9c, label %dec_label_pc_13c84

dec_label_pc_13c84:                               ; preds = %dec_label_pc_13c78, %dec_label_pc_13c38, %dec_label_pc_13c84
  %v1_13c90 = phi i32 [ %v4_13c90, %dec_label_pc_13c84 ], [ %v12_13c6c, %dec_label_pc_13c78 ], [ %v0_13c6c74, %dec_label_pc_13c38 ]
  %v0_13c84 = load i32, i32* @lr, align 4
  %v3_13c84 = udiv i32 %v0_13c84, 256
  store i32 %v3_13c84, i32* %ip.global-to-local, align 4
  %v0_13c88 = load i32, i32* %r1.global-to-local, align 4
  %v1_13c88 = inttoptr i32 %v0_13c88 to i32*
  %v2_13c88 = load i32, i32* %v1_13c88, align 4
  store i32 %v2_13c88, i32* @lr, align 4
  %v4_13c88 = add i32 %v0_13c88, 4
  store i32 %v4_13c88, i32* %r1.global-to-local, align 4
  %v4_13c8c = mul i32 %v2_13c88, 16777216
  %v5_13c8c = or i32 %v4_13c8c, %v3_13c84
  store i32 %v5_13c8c, i32* %ip.global-to-local, align 4
  %v2_13c90 = inttoptr i32 %v1_13c90 to i32*
  store i32 %v5_13c8c, i32* %v2_13c90, align 4
  %v3_13c90 = load i32, i32* @r0, align 4
  %v4_13c90 = add i32 %v3_13c90, 4
  store i32 %v4_13c90, i32* @r0, align 4
  %v0_13c94 = load i32, i32* %r2.global-to-local, align 4
  %v2_13c94 = add i32 %v0_13c94, -4
  store i32 %v2_13c94, i32* %r2.global-to-local, align 4
  %v6_13c98 = icmp slt i32 %v0_13c94, 4
  br i1 %v6_13c98, label %dec_label_pc_13c9c.loopexit, label %dec_label_pc_13c84

dec_label_pc_13c9c.loopexit:                      ; preds = %dec_label_pc_13c84
  %v4_13c94 = sub i32 3, %v0_13c94
  %v5_13c94 = and i32 %v4_13c94, %v0_13c94
  %v6_13c94 = icmp slt i32 %v5_13c94, 0
  %v7_13c94 = icmp slt i32 %v2_13c94, 0
  store i1 %v6_13c94, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13c94, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13c9c

dec_label_pc_13c9c:                               ; preds = %dec_label_pc_13c9c.loopexit, %dec_label_pc_13c78
  %v2_13bdc111 = phi i32 [ %v4_13c90, %dec_label_pc_13c9c.loopexit ], [ %v12_13c6c, %dec_label_pc_13c78 ]
  %v0_13bcc107 = phi i32 [ %v2_13c94, %dec_label_pc_13c9c.loopexit ], [ %v2_13c7c, %dec_label_pc_13c78 ]
  %v0_13c9c = load i32, i32* %r1.global-to-local, align 4
  %v1_13c9c = add i32 %v0_13c9c, -3
  store i32 %v1_13c9c, i32* @r1, align 4
  br label %bb131

dec_label_pc_13ca4:                               ; preds = %dec_label_pc_13c24
  br i1 %v5_13d14, label %dec_label_pc_13cf0, label %dec_label_pc_13cac

dec_label_pc_13cac:                               ; preds = %dec_label_pc_13ca4
  store i32 %v2_13d10, i32* %r2.global-to-local, align 4
  %v3_13cb0 = load i32, i32* @r4, align 4
  store i32 %v3_13cb0, i32* %stack_var_-16, align 4
  %v6_13cb0 = load i32, i32* @r5, align 4
  store i32 %v6_13cb0, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_13cb4:                               ; preds = %dec_label_pc_13cb4.dec_label_pc_13cb4_crit_edge, %dec_label_pc_13cac
  %v0_13cd8 = phi i32 [ %v12_13cd8, %dec_label_pc_13cb4.dec_label_pc_13cb4_crit_edge ], [ %v0_13c6c74, %dec_label_pc_13cac ]
  %v0_13cb8 = phi i32 [ %v0_13cb8.pre, %dec_label_pc_13cb4.dec_label_pc_13cb4_crit_edge ], [ %v4_13c28, %dec_label_pc_13cac ]
  %v0_13cb4 = phi i32 [ %v0_13cb4.pre, %dec_label_pc_13cb4.dec_label_pc_13cb4_crit_edge ], [ %v2_13c28, %dec_label_pc_13cac ]
  %v3_13cb4 = udiv i32 %v0_13cb4, 65536
  store i32 %v3_13cb4, i32* %r3.global-to-local, align 4
  %v1_13cb8 = inttoptr i32 %v0_13cb8 to i32*
  %v2_13cb8 = load i32, i32* %v1_13cb8, align 4
  store i32 %v2_13cb8, i32* %r4.global-to-local, align 4
  %v3_13cb8 = add i32 %v0_13cb8, 4
  %v4_13cb8 = inttoptr i32 %v3_13cb8 to i32*
  %v5_13cb8 = load i32, i32* %v4_13cb8, align 4
  store i32 %v5_13cb8, i32* %r5.global-to-local, align 4
  %v6_13cb8 = add i32 %v0_13cb8, 8
  %v7_13cb8 = inttoptr i32 %v6_13cb8 to i32*
  %v8_13cb8 = load i32, i32* %v7_13cb8, align 4
  store i32 %v8_13cb8, i32* %ip.global-to-local, align 4
  %v9_13cb8 = add i32 %v0_13cb8, 12
  %v10_13cb8 = inttoptr i32 %v9_13cb8 to i32*
  %v11_13cb8 = load i32, i32* %v10_13cb8, align 4
  store i32 %v11_13cb8, i32* @lr, align 4
  %v12_13cb8 = add i32 %v0_13cb8, 16
  store i32 %v12_13cb8, i32* %r1.global-to-local, align 4
  %v4_13cbc = mul i32 %v2_13cb8, 65536
  %v5_13cbc = or i32 %v4_13cbc, %v3_13cb4
  store i32 %v5_13cbc, i32* %r3.global-to-local, align 4
  %v3_13cc0 = udiv i32 %v2_13cb8, 65536
  %v4_13cc4 = mul i32 %v5_13cb8, 65536
  %v5_13cc4 = or i32 %v4_13cc4, %v3_13cc0
  store i32 %v5_13cc4, i32* %r4.global-to-local, align 4
  %v3_13cc8 = udiv i32 %v5_13cb8, 65536
  %v4_13ccc = mul i32 %v8_13cb8, 65536
  %v5_13ccc = or i32 %v4_13ccc, %v3_13cc8
  store i32 %v5_13ccc, i32* %r5.global-to-local, align 4
  %v3_13cd0 = udiv i32 %v8_13cb8, 65536
  %v4_13cd4 = mul i32 %v11_13cb8, 65536
  %v5_13cd4 = or i32 %v4_13cd4, %v3_13cd0
  store i32 %v5_13cd4, i32* %ip.global-to-local, align 4
  %v1_13cd8 = inttoptr i32 %v0_13cd8 to i32*
  store i32 %v5_13cbc, i32* %v1_13cd8, align 4
  %v3_13cd8 = add i32 %v0_13cd8, 4
  %v4_13cd8 = inttoptr i32 %v3_13cd8 to i32*
  %v5_13cd8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13cd8, i32* %v4_13cd8, align 4
  %v6_13cd8 = add i32 %v0_13cd8, 8
  %v7_13cd8 = inttoptr i32 %v6_13cd8 to i32*
  %v8_13cd8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_13cd8, i32* %v7_13cd8, align 4
  %v9_13cd8 = add i32 %v0_13cd8, 12
  %v10_13cd8 = inttoptr i32 %v9_13cd8 to i32*
  %v11_13cd8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_13cd8, i32* %v10_13cd8, align 4
  %v12_13cd8 = add i32 %v0_13cd8, 16
  store i32 %v12_13cd8, i32* @r0, align 4
  %v0_13cdc = load i32, i32* %r2.global-to-local, align 4
  %v2_13cdc = add i32 %v0_13cdc, -16
  store i32 %v2_13cdc, i32* %r2.global-to-local, align 4
  %v6_13ce0 = icmp slt i32 %v0_13cdc, 16
  br i1 %v6_13ce0, label %dec_label_pc_13ce4, label %dec_label_pc_13cb4.dec_label_pc_13cb4_crit_edge

dec_label_pc_13cb4.dec_label_pc_13cb4_crit_edge:  ; preds = %dec_label_pc_13cb4
  %v0_13cb4.pre = load i32, i32* @lr, align 4
  %v0_13cb8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_13ce4:                               ; preds = %dec_label_pc_13cb4
  %v2_13ce4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13ce4, i32* @r4, align 4
  %v5_13ce4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_13ce4, i32* @r5, align 4
  %v2_13ce8 = add i32 %v0_13cdc, -4
  store i32 %v2_13ce8, i32* %r2.global-to-local, align 4
  %v4_13ce8 = add i32 %v0_13cdc, 2147483632
  %v5_13ce8 = and i32 %v2_13ce8, %v4_13ce8
  %v6_13ce8 = icmp slt i32 %v5_13ce8, 0
  store i1 %v6_13ce8, i1* %cpsr_v.global-to-local, align 1
  %v7_13ce8 = icmp slt i32 %v2_13ce8, 0
  store i1 %v7_13ce8, i1* %cpsr_n.global-to-local, align 1
  %v8_13ce8 = icmp eq i32 %v2_13ce8, 0
  store i1 %v8_13ce8, i1* %cpsr_z.global-to-local, align 1
  %v5_13cec = icmp slt i32 %v2_13cdc, -12
  br i1 %v5_13cec, label %dec_label_pc_13d08, label %dec_label_pc_13cf0

dec_label_pc_13cf0:                               ; preds = %dec_label_pc_13ce4, %dec_label_pc_13ca4, %dec_label_pc_13cf0
  %v1_13cfc = phi i32 [ %v4_13cfc, %dec_label_pc_13cf0 ], [ %v12_13cd8, %dec_label_pc_13ce4 ], [ %v0_13c6c74, %dec_label_pc_13ca4 ]
  %v0_13cf0 = load i32, i32* @lr, align 4
  %v3_13cf0 = udiv i32 %v0_13cf0, 65536
  store i32 %v3_13cf0, i32* %ip.global-to-local, align 4
  %v0_13cf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13cf4 = inttoptr i32 %v0_13cf4 to i32*
  %v2_13cf4 = load i32, i32* %v1_13cf4, align 4
  store i32 %v2_13cf4, i32* @lr, align 4
  %v4_13cf4 = add i32 %v0_13cf4, 4
  store i32 %v4_13cf4, i32* %r1.global-to-local, align 4
  %v4_13cf8 = mul i32 %v2_13cf4, 65536
  %v5_13cf8 = or i32 %v4_13cf8, %v3_13cf0
  store i32 %v5_13cf8, i32* %ip.global-to-local, align 4
  %v2_13cfc = inttoptr i32 %v1_13cfc to i32*
  store i32 %v5_13cf8, i32* %v2_13cfc, align 4
  %v3_13cfc = load i32, i32* @r0, align 4
  %v4_13cfc = add i32 %v3_13cfc, 4
  store i32 %v4_13cfc, i32* @r0, align 4
  %v0_13d00 = load i32, i32* %r2.global-to-local, align 4
  %v2_13d00 = add i32 %v0_13d00, -4
  store i32 %v2_13d00, i32* %r2.global-to-local, align 4
  %v6_13d04 = icmp slt i32 %v0_13d00, 4
  br i1 %v6_13d04, label %dec_label_pc_13d08.loopexit, label %dec_label_pc_13cf0

dec_label_pc_13d08.loopexit:                      ; preds = %dec_label_pc_13cf0
  %v4_13d00 = sub i32 3, %v0_13d00
  %v5_13d00 = and i32 %v4_13d00, %v0_13d00
  %v6_13d00 = icmp slt i32 %v5_13d00, 0
  %v7_13d00 = icmp slt i32 %v2_13d00, 0
  store i1 %v6_13d00, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13d00, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13d08

dec_label_pc_13d08:                               ; preds = %dec_label_pc_13d08.loopexit, %dec_label_pc_13ce4
  %v2_13bdc112 = phi i32 [ %v4_13cfc, %dec_label_pc_13d08.loopexit ], [ %v12_13cd8, %dec_label_pc_13ce4 ]
  %v0_13bcc108 = phi i32 [ %v2_13d00, %dec_label_pc_13d08.loopexit ], [ %v2_13ce8, %dec_label_pc_13ce4 ]
  %v0_13d08 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d08 = add i32 %v0_13d08, -2
  store i32 %v1_13d08, i32* @r1, align 4
  br label %bb131

dec_label_pc_13d10:                               ; preds = %dec_label_pc_13c24
  br i1 %v5_13d14, label %dec_label_pc_13d5c, label %dec_label_pc_13d18

dec_label_pc_13d18:                               ; preds = %dec_label_pc_13d10
  store i32 %v2_13d10, i32* %r2.global-to-local, align 4
  %v3_13d1c = load i32, i32* @r4, align 4
  store i32 %v3_13d1c, i32* %stack_var_-16, align 4
  %v6_13d1c = load i32, i32* @r5, align 4
  store i32 %v6_13d1c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13d20

dec_label_pc_13d20:                               ; preds = %dec_label_pc_13d20.dec_label_pc_13d20_crit_edge, %dec_label_pc_13d18
  %v0_13d44 = phi i32 [ %v12_13d44, %dec_label_pc_13d20.dec_label_pc_13d20_crit_edge ], [ %v0_13c6c74, %dec_label_pc_13d18 ]
  %v0_13d24 = phi i32 [ %v0_13d24.pre, %dec_label_pc_13d20.dec_label_pc_13d20_crit_edge ], [ %v4_13c28, %dec_label_pc_13d18 ]
  %v0_13d20 = phi i32 [ %v0_13d20.pre, %dec_label_pc_13d20.dec_label_pc_13d20_crit_edge ], [ %v2_13c28, %dec_label_pc_13d18 ]
  %v3_13d20 = udiv i32 %v0_13d20, 16777216
  store i32 %v3_13d20, i32* %r3.global-to-local, align 4
  %v1_13d24 = inttoptr i32 %v0_13d24 to i32*
  %v2_13d24 = load i32, i32* %v1_13d24, align 4
  store i32 %v2_13d24, i32* %r4.global-to-local, align 4
  %v3_13d24 = add i32 %v0_13d24, 4
  %v4_13d24 = inttoptr i32 %v3_13d24 to i32*
  %v5_13d24 = load i32, i32* %v4_13d24, align 4
  store i32 %v5_13d24, i32* %r5.global-to-local, align 4
  %v6_13d24 = add i32 %v0_13d24, 8
  %v7_13d24 = inttoptr i32 %v6_13d24 to i32*
  %v8_13d24 = load i32, i32* %v7_13d24, align 4
  store i32 %v8_13d24, i32* %ip.global-to-local, align 4
  %v9_13d24 = add i32 %v0_13d24, 12
  %v10_13d24 = inttoptr i32 %v9_13d24 to i32*
  %v11_13d24 = load i32, i32* %v10_13d24, align 4
  store i32 %v11_13d24, i32* @lr, align 4
  %v12_13d24 = add i32 %v0_13d24, 16
  store i32 %v12_13d24, i32* %r1.global-to-local, align 4
  %v4_13d28 = mul i32 %v2_13d24, 256
  %v5_13d28 = or i32 %v4_13d28, %v3_13d20
  store i32 %v5_13d28, i32* %r3.global-to-local, align 4
  %v3_13d2c = udiv i32 %v2_13d24, 16777216
  %v4_13d30 = mul i32 %v5_13d24, 256
  %v5_13d30 = or i32 %v4_13d30, %v3_13d2c
  store i32 %v5_13d30, i32* %r4.global-to-local, align 4
  %v3_13d34 = udiv i32 %v5_13d24, 16777216
  %v4_13d38 = mul i32 %v8_13d24, 256
  %v5_13d38 = or i32 %v4_13d38, %v3_13d34
  store i32 %v5_13d38, i32* %r5.global-to-local, align 4
  %v3_13d3c = udiv i32 %v8_13d24, 16777216
  %v4_13d40 = mul i32 %v11_13d24, 256
  %v5_13d40 = or i32 %v4_13d40, %v3_13d3c
  store i32 %v5_13d40, i32* %ip.global-to-local, align 4
  %v1_13d44 = inttoptr i32 %v0_13d44 to i32*
  store i32 %v5_13d28, i32* %v1_13d44, align 4
  %v3_13d44 = add i32 %v0_13d44, 4
  %v4_13d44 = inttoptr i32 %v3_13d44 to i32*
  %v5_13d44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13d44, i32* %v4_13d44, align 4
  %v6_13d44 = add i32 %v0_13d44, 8
  %v7_13d44 = inttoptr i32 %v6_13d44 to i32*
  %v8_13d44 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_13d44, i32* %v7_13d44, align 4
  %v9_13d44 = add i32 %v0_13d44, 12
  %v10_13d44 = inttoptr i32 %v9_13d44 to i32*
  %v11_13d44 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_13d44, i32* %v10_13d44, align 4
  %v12_13d44 = add i32 %v0_13d44, 16
  store i32 %v12_13d44, i32* @r0, align 4
  %v0_13d48 = load i32, i32* %r2.global-to-local, align 4
  %v2_13d48 = add i32 %v0_13d48, -16
  store i32 %v2_13d48, i32* %r2.global-to-local, align 4
  %v6_13d4c = icmp slt i32 %v0_13d48, 16
  br i1 %v6_13d4c, label %dec_label_pc_13d50, label %dec_label_pc_13d20.dec_label_pc_13d20_crit_edge

dec_label_pc_13d20.dec_label_pc_13d20_crit_edge:  ; preds = %dec_label_pc_13d20
  %v0_13d20.pre = load i32, i32* @lr, align 4
  %v0_13d24.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13d20

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13d20
  %v2_13d50 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13d50, i32* @r4, align 4
  %v5_13d50 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_13d50, i32* @r5, align 4
  %v2_13d54 = add i32 %v0_13d48, -4
  store i32 %v2_13d54, i32* %r2.global-to-local, align 4
  %v4_13d54 = add i32 %v0_13d48, 2147483632
  %v5_13d54 = and i32 %v2_13d54, %v4_13d54
  %v6_13d54 = icmp slt i32 %v5_13d54, 0
  store i1 %v6_13d54, i1* %cpsr_v.global-to-local, align 1
  %v7_13d54 = icmp slt i32 %v2_13d54, 0
  store i1 %v7_13d54, i1* %cpsr_n.global-to-local, align 1
  %v8_13d54 = icmp eq i32 %v2_13d54, 0
  store i1 %v8_13d54, i1* %cpsr_z.global-to-local, align 1
  %v5_13d58 = icmp slt i32 %v2_13d48, -12
  br i1 %v5_13d58, label %dec_label_pc_13d74, label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d50, %dec_label_pc_13d10, %dec_label_pc_13d5c
  %v1_13d68 = phi i32 [ %v4_13d68, %dec_label_pc_13d5c ], [ %v12_13d44, %dec_label_pc_13d50 ], [ %v0_13c6c74, %dec_label_pc_13d10 ]
  %v0_13d5c = load i32, i32* @lr, align 4
  %v3_13d5c = udiv i32 %v0_13d5c, 16777216
  store i32 %v3_13d5c, i32* %ip.global-to-local, align 4
  %v0_13d60 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d60 = inttoptr i32 %v0_13d60 to i32*
  %v2_13d60 = load i32, i32* %v1_13d60, align 4
  store i32 %v2_13d60, i32* @lr, align 4
  %v4_13d60 = add i32 %v0_13d60, 4
  store i32 %v4_13d60, i32* %r1.global-to-local, align 4
  %v4_13d64 = mul i32 %v2_13d60, 256
  %v5_13d64 = or i32 %v4_13d64, %v3_13d5c
  store i32 %v5_13d64, i32* %ip.global-to-local, align 4
  %v2_13d68 = inttoptr i32 %v1_13d68 to i32*
  store i32 %v5_13d64, i32* %v2_13d68, align 4
  %v3_13d68 = load i32, i32* @r0, align 4
  %v4_13d68 = add i32 %v3_13d68, 4
  store i32 %v4_13d68, i32* @r0, align 4
  %v0_13d6c = load i32, i32* %r2.global-to-local, align 4
  %v2_13d6c = add i32 %v0_13d6c, -4
  store i32 %v2_13d6c, i32* %r2.global-to-local, align 4
  %v6_13d70 = icmp slt i32 %v0_13d6c, 4
  br i1 %v6_13d70, label %dec_label_pc_13d74.loopexit, label %dec_label_pc_13d5c

dec_label_pc_13d74.loopexit:                      ; preds = %dec_label_pc_13d5c
  %v4_13d6c = sub i32 3, %v0_13d6c
  %v5_13d6c = and i32 %v4_13d6c, %v0_13d6c
  %v6_13d6c = icmp slt i32 %v5_13d6c, 0
  %v7_13d6c = icmp slt i32 %v2_13d6c, 0
  store i1 %v6_13d6c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13d6c, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13d74

dec_label_pc_13d74:                               ; preds = %dec_label_pc_13d74.loopexit, %dec_label_pc_13d50
  %v2_13bdc113 = phi i32 [ %v4_13d68, %dec_label_pc_13d74.loopexit ], [ %v12_13d44, %dec_label_pc_13d50 ]
  %v0_13bcc109 = phi i32 [ %v2_13d6c, %dec_label_pc_13d74.loopexit ], [ %v2_13d54, %dec_label_pc_13d50 ]
  %v0_13d74 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d74 = add i32 %v0_13d74, -1
  store i32 %v1_13d74, i32* @r1, align 4
  br label %bb131

dec_label_pc_13d7c:                               ; preds = %dec_label_pc_13b30
  %v1_13d7c = load i32, i32* @r2, align 4
  %v2_13d7c = add i32 %v1_13d7c, %v0_13b30
  store i32 %v2_13d7c, i32* %r1.global-to-local, align 4
  %v2_13d80 = add i32 %v1_13d7c, %v1_13b30
  store i32 %v2_13d80, i32* %r0.global-to-local, align 4
  %v2_13d84 = add i32 %v1_13d7c, -4
  store i32 %v2_13d84, i32* %r2.global-to-local, align 4
  %v4_13d84 = sub i32 3, %v1_13d7c
  %v5_13d84 = and i32 %v4_13d84, %v1_13d7c
  %v6_13d84 = icmp slt i32 %v5_13d84, 0
  store i1 %v6_13d84, i1* %cpsr_v.global-to-local, align 1
  %v7_13d84 = icmp slt i32 %v2_13d84, 0
  store i1 %v7_13d84, i1* %cpsr_n.global-to-local, align 1
  %v8_13d84 = icmp eq i32 %v1_13d7c, 4
  store i1 %v8_13d84, i1* %cpsr_z.global-to-local, align 1
  %v5_13d88 = icmp slt i32 %v1_13d7c, 4
  br i1 %v5_13d88, label %bb141, label %dec_label_pc_13d8c

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13d7c
  %v1_13d8c = urem i32 %v2_13d80, 4
  store i32 %v1_13d8c, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13d8c = icmp eq i32 %v1_13d8c, 0
  store i1 %v2_13d8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13d8c, label %dec_label_pc_13d94, label %dec_label_pc_13e34

dec_label_pc_13d94:                               ; preds = %dec_label_pc_13d8c
  %v1_13d94 = urem i32 %v2_13d7c, 4
  store i32 %v1_13d94, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13d94 = icmp eq i32 %v1_13d94, 0
  store i1 %v2_13d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13d94, label %dec_label_pc_13d9c, label %dec_label_pc_13e60

dec_label_pc_13d9c:                               ; preds = %dec_label_pc_13d94, %dec_label_pc_13e58
  %v0_13db448 = phi i32 [ %v2_13d80, %dec_label_pc_13d94 ], [ %v0_13ea831, %dec_label_pc_13e58 ]
  %v0_13db047 = phi i32 [ %v2_13d7c, %dec_label_pc_13d94 ], [ %v0_13e58, %dec_label_pc_13e58 ]
  %v0_13d9c = phi i32 [ %v2_13d84, %dec_label_pc_13d94 ], [ %v2_13e50, %dec_label_pc_13e58 ]
  %v2_13d9c = add i32 %v0_13d9c, -8
  store i32 %v2_13d9c, i32* %r2.global-to-local, align 4
  %v4_13d9c = sub i32 7, %v0_13d9c
  %v5_13d9c = and i32 %v4_13d9c, %v0_13d9c
  %v6_13d9c = icmp slt i32 %v5_13d9c, 0
  store i1 %v6_13d9c, i1* %cpsr_v.global-to-local, align 1
  %v7_13d9c = icmp slt i32 %v2_13d9c, 0
  store i1 %v7_13d9c, i1* %cpsr_n.global-to-local, align 1
  %v8_13d9c = icmp eq i32 %v0_13d9c, 8
  store i1 %v8_13d9c, i1* %cpsr_z.global-to-local, align 1
  %v5_13da0 = icmp slt i32 %v0_13d9c, 8
  br i1 %v5_13da0, label %dec_label_pc_13dec, label %dec_label_pc_13da4

dec_label_pc_13da4:                               ; preds = %dec_label_pc_13d9c
  %v3_13da4 = load i32, i32* @r4, align 4
  store i32 %v3_13da4, i32* %stack_var_-8, align 4
  %v6_13da4 = load i32, i32* @lr, align 4
  %v2_13da8 = add i32 %v0_13d9c, -28
  store i32 %v2_13da8, i32* %r2.global-to-local, align 4
  %v4_13da8 = sub i32 27, %v0_13d9c
  %v5_13da8 = and i32 %v4_13da8, %v2_13d9c
  %v6_13da8 = icmp slt i32 %v5_13da8, 0
  store i1 %v6_13da8, i1* %cpsr_v.global-to-local, align 1
  %v7_13da8 = icmp slt i32 %v2_13da8, 0
  store i1 %v7_13da8, i1* %cpsr_n.global-to-local, align 1
  %v8_13da8 = icmp eq i32 %v2_13d9c, 20
  store i1 %v8_13da8, i1* %cpsr_z.global-to-local, align 1
  %v5_13dac = icmp slt i32 %v2_13d9c, 20
  br i1 %v5_13dac, label %dec_label_pc_13dc8, label %dec_label_pc_13db0

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13da4, %dec_label_pc_13db0.dec_label_pc_13db0_crit_edge
  %v0_13db4 = phi i32 [ %v1_13dbc, %dec_label_pc_13db0.dec_label_pc_13db0_crit_edge ], [ %v0_13db448, %dec_label_pc_13da4 ]
  %v0_13db0 = phi i32 [ %v0_13db0.pre, %dec_label_pc_13db0.dec_label_pc_13db0_crit_edge ], [ %v0_13db047, %dec_label_pc_13da4 ]
  %v1_13db0 = add i32 %v0_13db0, -4
  %v2_13db0 = inttoptr i32 %v1_13db0 to i32*
  %v3_13db0 = load i32, i32* %v2_13db0, align 4
  store i32 %v3_13db0, i32* %r3.global-to-local, align 4
  %v4_13db0 = add i32 %v0_13db0, -8
  %v5_13db0 = inttoptr i32 %v4_13db0 to i32*
  %v6_13db0 = load i32, i32* %v5_13db0, align 4
  store i32 %v6_13db0, i32* %r4.global-to-local, align 4
  %v7_13db0 = add i32 %v0_13db0, -12
  %v8_13db0 = inttoptr i32 %v7_13db0 to i32*
  %v9_13db0 = load i32, i32* %v8_13db0, align 4
  store i32 %v9_13db0, i32* %ip.global-to-local, align 4
  %v10_13db0 = add i32 %v0_13db0, -16
  %v11_13db0 = inttoptr i32 %v10_13db0 to i32*
  %v12_13db0 = load i32, i32* %v11_13db0, align 4
  store i32 %v12_13db0, i32* %lr.global-to-local, align 4
  store i32 %v10_13db0, i32* %r1.global-to-local, align 4
  %v1_13db4 = add i32 %v0_13db4, -16
  %v2_13db4 = inttoptr i32 %v1_13db4 to i32*
  store i32 %v3_13db0, i32* %v2_13db4, align 4
  %v4_13db4 = add i32 %v0_13db4, -12
  %v5_13db4 = inttoptr i32 %v4_13db4 to i32*
  %v6_13db4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_13db4, i32* %v5_13db4, align 4
  %v7_13db4 = add i32 %v0_13db4, -8
  %v8_13db4 = inttoptr i32 %v7_13db4 to i32*
  %v9_13db4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_13db4, i32* %v8_13db4, align 4
  %v10_13db4 = add i32 %v0_13db4, -4
  %v11_13db4 = inttoptr i32 %v10_13db4 to i32*
  %v12_13db4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13db4, i32* %v11_13db4, align 4
  store i32 %v1_13db4, i32* %r0.global-to-local, align 4
  %v0_13db8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13db8 = add i32 %v0_13db8, -4
  %v2_13db8 = inttoptr i32 %v1_13db8 to i32*
  %v3_13db8 = load i32, i32* %v2_13db8, align 4
  store i32 %v3_13db8, i32* %r3.global-to-local, align 4
  %v4_13db8 = add i32 %v0_13db8, -8
  %v5_13db8 = inttoptr i32 %v4_13db8 to i32*
  %v6_13db8 = load i32, i32* %v5_13db8, align 4
  store i32 %v6_13db8, i32* %r4.global-to-local, align 4
  %v7_13db8 = add i32 %v0_13db8, -12
  %v8_13db8 = inttoptr i32 %v7_13db8 to i32*
  %v9_13db8 = load i32, i32* %v8_13db8, align 4
  store i32 %v9_13db8, i32* %ip.global-to-local, align 4
  %v10_13db8 = add i32 %v0_13db8, -16
  %v11_13db8 = inttoptr i32 %v10_13db8 to i32*
  %v12_13db8 = load i32, i32* %v11_13db8, align 4
  store i32 %v12_13db8, i32* %lr.global-to-local, align 4
  store i32 %v10_13db8, i32* %r1.global-to-local, align 4
  %v1_13dbc = add i32 %v0_13db4, -32
  %v2_13dbc = inttoptr i32 %v1_13dbc to i32*
  store i32 %v3_13db8, i32* %v2_13dbc, align 4
  %v4_13dbc = add i32 %v0_13db4, -28
  %v5_13dbc = inttoptr i32 %v4_13dbc to i32*
  %v6_13dbc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_13dbc, i32* %v5_13dbc, align 4
  %v7_13dbc = add i32 %v0_13db4, -24
  %v8_13dbc = inttoptr i32 %v7_13dbc to i32*
  %v9_13dbc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_13dbc, i32* %v8_13dbc, align 4
  %v10_13dbc = add i32 %v0_13db4, -20
  %v11_13dbc = inttoptr i32 %v10_13dbc to i32*
  %v12_13dbc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13dbc, i32* %v11_13dbc, align 4
  store i32 %v1_13dbc, i32* %r0.global-to-local, align 4
  %v0_13dc0 = load i32, i32* %r2.global-to-local, align 4
  %v2_13dc0 = add i32 %v0_13dc0, -32
  store i32 %v2_13dc0, i32* %r2.global-to-local, align 4
  %v6_13dc4 = icmp slt i32 %v0_13dc0, 32
  br i1 %v6_13dc4, label %dec_label_pc_13dc8.loopexit, label %dec_label_pc_13db0.dec_label_pc_13db0_crit_edge

dec_label_pc_13db0.dec_label_pc_13db0_crit_edge:  ; preds = %dec_label_pc_13db0
  %v0_13db0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13db0

dec_label_pc_13dc8.loopexit:                      ; preds = %dec_label_pc_13db0
  %v4_13dc0 = sub i32 31, %v0_13dc0
  %v5_13dc0 = and i32 %v4_13dc0, %v0_13dc0
  %v6_13dc0 = icmp slt i32 %v5_13dc0, 0
  %v7_13dc0 = icmp slt i32 %v2_13dc0, 0
  store i1 %v6_13dc0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13dc0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13dc8

dec_label_pc_13dc8:                               ; preds = %dec_label_pc_13dc8.loopexit, %dec_label_pc_13da4
  %v6_13dd0 = phi i32 [ %v1_13dbc, %dec_label_pc_13dc8.loopexit ], [ %v0_13db448, %dec_label_pc_13da4 ]
  %v0_13dd8.pr = phi i32 [ %v2_13dc0, %dec_label_pc_13dc8.loopexit ], [ %v2_13da8, %dec_label_pc_13da4 ]
  %v4_13dc8 = add i32 %v0_13dd8.pr, 16
  %v6_13dc8 = sub i32 0, %v0_13dd8.pr
  %v7_13dc8 = and i32 %v4_13dc8, %v6_13dc8
  %v8_13dc8 = icmp slt i32 %v7_13dc8, 0
  store i1 %v8_13dc8, i1* %cpsr_v.global-to-local, align 1
  %v9_13dc8 = icmp slt i32 %v4_13dc8, 0
  store i1 %v9_13dc8, i1* %cpsr_n.global-to-local, align 1
  %v10_13dc8 = icmp eq i32 %v4_13dc8, 0
  store i1 %v10_13dc8, i1* %cpsr_z.global-to-local, align 1
  %v5_13dcc = icmp slt i32 %v0_13dd8.pr, -16
  br i1 %v5_13dcc, label %.thread13, label %bb138

bb138:                                            ; preds = %dec_label_pc_13dc8
  %v6_13dcc = load i32, i32* %r1.global-to-local, align 4
  %v7_13dcc = add i32 %v6_13dcc, -4
  %v8_13dcc = inttoptr i32 %v7_13dcc to i32*
  %v9_13dcc = load i32, i32* %v8_13dcc, align 4
  store i32 %v9_13dcc, i32* %r3.global-to-local, align 4
  %v10_13dcc = add i32 %v6_13dcc, -8
  %v11_13dcc = inttoptr i32 %v10_13dcc to i32*
  %v12_13dcc = load i32, i32* %v11_13dcc, align 4
  store i32 %v12_13dcc, i32* %r4.global-to-local, align 4
  %v13_13dcc = add i32 %v6_13dcc, -12
  %v14_13dcc = inttoptr i32 %v13_13dcc to i32*
  %v15_13dcc = load i32, i32* %v14_13dcc, align 4
  store i32 %v15_13dcc, i32* %ip.global-to-local, align 4
  %v16_13dcc = add i32 %v6_13dcc, -16
  %v17_13dcc = inttoptr i32 %v16_13dcc to i32*
  %v18_13dcc = load i32, i32* %v17_13dcc, align 4
  store i32 %v18_13dcc, i32* %lr.global-to-local, align 4
  store i32 %v16_13dcc, i32* %r1.global-to-local, align 4
  %v7_13dd0 = add i32 %v6_13dd0, -16
  %v8_13dd0 = inttoptr i32 %v7_13dd0 to i32*
  store i32 %v9_13dcc, i32* %v8_13dd0, align 4
  %v10_13dd0 = add i32 %v6_13dd0, -12
  %v11_13dd0 = inttoptr i32 %v10_13dd0 to i32*
  %v12_13dd0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_13dd0, i32* %v11_13dd0, align 4
  %v13_13dd0 = add i32 %v6_13dd0, -8
  %v14_13dd0 = inttoptr i32 %v13_13dd0 to i32*
  %v15_13dd0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v15_13dd0, i32* %v14_13dd0, align 4
  %v16_13dd0 = add i32 %v6_13dd0, -4
  %v17_13dd0 = inttoptr i32 %v16_13dd0 to i32*
  %v18_13dd0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_13dd0, i32* %v17_13dd0, align 4
  store i32 %v7_13dd0, i32* %r0.global-to-local, align 4
  %v6_13dd4 = load i32, i32* %r2.global-to-local, align 4
  %v7_13dd4 = add i32 %v6_13dd4, -16
  store i32 %v7_13dd4, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_13dc8, %bb138
  %v6_13de0 = phi i32 [ %v7_13dd0, %bb138 ], [ %v6_13dd0, %dec_label_pc_13dc8 ]
  %v0_13dd8 = phi i32 [ %v7_13dd4, %bb138 ], [ %v0_13dd8.pr, %dec_label_pc_13dc8 ]
  %v4_13dd8 = add i32 %v0_13dd8, 20
  store i32 %v4_13dd8, i32* %r2.global-to-local, align 4
  %v6_13dd8 = sub i32 0, %v0_13dd8
  %v7_13dd8 = and i32 %v4_13dd8, %v6_13dd8
  %v8_13dd8 = icmp slt i32 %v7_13dd8, 0
  store i1 %v8_13dd8, i1* %cpsr_v.global-to-local, align 1
  %v9_13dd8 = icmp slt i32 %v4_13dd8, 0
  store i1 %v9_13dd8, i1* %cpsr_n.global-to-local, align 1
  %v10_13dd8 = icmp eq i32 %v4_13dd8, 0
  store i1 %v10_13dd8, i1* %cpsr_z.global-to-local, align 1
  %v5_13ddc = icmp slt i32 %v0_13dd8, -20
  br i1 %v5_13ddc, label %.thread15, label %bb139

bb139:                                            ; preds = %.thread13
  %v6_13ddc = load i32, i32* %r1.global-to-local, align 4
  %v7_13ddc = add i32 %v6_13ddc, -4
  %v8_13ddc = inttoptr i32 %v7_13ddc to i32*
  %v9_13ddc = load i32, i32* %v8_13ddc, align 4
  store i32 %v9_13ddc, i32* %r3.global-to-local, align 4
  %v10_13ddc = add i32 %v6_13ddc, -8
  %v11_13ddc = inttoptr i32 %v10_13ddc to i32*
  %v12_13ddc = load i32, i32* %v11_13ddc, align 4
  store i32 %v12_13ddc, i32* %ip.global-to-local, align 4
  %v13_13ddc = add i32 %v6_13ddc, -12
  %v14_13ddc = inttoptr i32 %v13_13ddc to i32*
  %v15_13ddc = load i32, i32* %v14_13ddc, align 4
  store i32 %v15_13ddc, i32* %lr.global-to-local, align 4
  store i32 %v13_13ddc, i32* %r1.global-to-local, align 4
  %v7_13de0 = add i32 %v6_13de0, -12
  %v8_13de0 = inttoptr i32 %v7_13de0 to i32*
  store i32 %v9_13ddc, i32* %v8_13de0, align 4
  %v10_13de0 = add i32 %v6_13de0, -8
  %v11_13de0 = inttoptr i32 %v10_13de0 to i32*
  %v12_13de0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v12_13de0, i32* %v11_13de0, align 4
  %v13_13de0 = add i32 %v6_13de0, -4
  %v14_13de0 = inttoptr i32 %v13_13de0 to i32*
  %v15_13de0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_13de0, i32* %v14_13de0, align 4
  store i32 %v7_13de0, i32* %r0.global-to-local, align 4
  %v6_13de4 = load i32, i32* %r2.global-to-local, align 4
  %v7_13de4 = add i32 %v6_13de4, -12
  store i32 %v7_13de4, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread13, %bb139
  %v6_13e0456 = phi i32 [ %v6_13de0, %.thread13 ], [ %v7_13de0, %bb139 ]
  %v0_13dec54 = phi i32 [ %v4_13dd8, %.thread13 ], [ %v7_13de4, %bb139 ]
  %v2_13de8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13de8, i32* @r4, align 4
  store i32 %v6_13da4, i32* @lr, align 4
  br label %dec_label_pc_13dec

dec_label_pc_13dec:                               ; preds = %dec_label_pc_13d9c, %.thread15
  %v7_13dfc = phi i32 [ %v0_13db448, %dec_label_pc_13d9c ], [ %v6_13e0456, %.thread15 ]
  %v0_13dec = phi i32 [ %v2_13d9c, %dec_label_pc_13d9c ], [ %v0_13dec54, %.thread15 ]
  %v2_13dec = add i32 %v0_13dec, 8
  store i32 %v2_13dec, i32* %r2.global-to-local, align 4
  %v4_13dec = sub i32 0, %v0_13dec
  %v5_13dec = and i32 %v2_13dec, %v4_13dec
  %v6_13dec = icmp slt i32 %v5_13dec, 0
  store i1 %v6_13dec, i1* %cpsr_v.global-to-local, align 1
  %v7_13dec = icmp slt i32 %v2_13dec, 0
  store i1 %v7_13dec, i1* %cpsr_n.global-to-local, align 1
  %v8_13dec = icmp eq i32 %v2_13dec, 0
  store i1 %v8_13dec, i1* %cpsr_z.global-to-local, align 1
  %v5_13df0 = icmp slt i32 %v0_13dec, -8
  br i1 %v5_13df0, label %bb141, label %dec_label_pc_13df4

dec_label_pc_13df4:                               ; preds = %dec_label_pc_13dec
  %v6_13df4 = add i32 %v0_13dec, 4
  store i32 %v6_13df4, i32* %r2.global-to-local, align 4
  %v8_13df4 = sub i32 -5, %v0_13dec
  %v9_13df4 = and i32 %v8_13df4, %v2_13dec
  %v10_13df4 = icmp slt i32 %v9_13df4, 0
  store i1 %v10_13df4, i1* %cpsr_v.global-to-local, align 1
  %v11_13df4 = icmp slt i32 %v6_13df4, 0
  store i1 %v11_13df4, i1* %cpsr_n.global-to-local, align 1
  %v12_13df4 = icmp eq i32 %v2_13dec, 4
  store i1 %v12_13df4, i1* %cpsr_z.global-to-local, align 1
  %v5_13df8 = icmp slt i32 %v2_13dec, 4
  %v6_13df8 = load i32, i32* %r1.global-to-local, align 4
  %v7_13df8 = add i32 %v6_13df8, -4
  %v8_13df8 = inttoptr i32 %v7_13df8 to i32*
  %v9_13df8 = load i32, i32* %v8_13df8, align 4
  store i32 %v9_13df8, i32* %r3.global-to-local, align 4
  br i1 %v5_13df8, label %.thread19, label %bb140

.thread19:                                        ; preds = %dec_label_pc_13df4
  store i32 %v7_13df8, i32* %r1.global-to-local, align 4
  %v8_13dfc = add i32 %v7_13dfc, -4
  %v9_13dfc = inttoptr i32 %v8_13dfc to i32*
  store i32 %v9_13df8, i32* %v9_13dfc, align 4
  %v10_13dfc = load i32, i32* %r0.global-to-local, align 4
  %v11_13dfc = add i32 %v10_13dfc, -4
  store i32 %v11_13dfc, i32* %r0.global-to-local, align 4
  %v0_13e0c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_13df4
  %v10_13e00 = add i32 %v6_13df8, -8
  %v11_13e00 = inttoptr i32 %v10_13e00 to i32*
  %v12_13e00 = load i32, i32* %v11_13e00, align 4
  store i32 %v12_13e00, i32* %ip.global-to-local, align 4
  store i32 %v10_13e00, i32* %r1.global-to-local, align 4
  %v7_13e04 = add i32 %v7_13dfc, -8
  %v8_13e04 = inttoptr i32 %v7_13e04 to i32*
  store i32 %v9_13df8, i32* %v8_13e04, align 4
  %v10_13e04 = add i32 %v7_13dfc, -4
  %v11_13e04 = inttoptr i32 %v10_13e04 to i32*
  %v12_13e04 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v12_13e04, i32* %v11_13e04, align 4
  store i32 %v7_13e04, i32* %r0.global-to-local, align 4
  %v6_13e08 = load i32, i32* %r2.global-to-local, align 4
  %v7_13e08 = add i32 %v6_13e08, -4
  store i32 %v7_13e08, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread19, %.thread25, %dec_label_pc_13dec, %dec_label_pc_13d7c, %dec_label_pc_13fb0, %dec_label_pc_13f44, %dec_label_pc_13ed8, %bb140
  %v2_13e10 = phi i32 [ %v11_13dfc, %.thread19 ], [ %v0_13ea831, %.thread25 ], [ %v7_13dfc, %dec_label_pc_13dec ], [ %v2_13d80, %dec_label_pc_13d7c ], [ %v2_13e1c64, %dec_label_pc_13fb0 ], [ %v2_13e1c63, %dec_label_pc_13f44 ], [ %v2_13e1c62, %dec_label_pc_13ed8 ], [ %v7_13e04, %bb140 ]
  %v0_13e0c = phi i32 [ %v0_13e0c.pre, %.thread19 ], [ %v2_13e50, %.thread25 ], [ %v2_13dec, %dec_label_pc_13dec ], [ %v2_13d84, %dec_label_pc_13d7c ], [ %v0_13e0c60, %dec_label_pc_13fb0 ], [ %v0_13e0c59, %dec_label_pc_13f44 ], [ %v0_13e0c58, %dec_label_pc_13ed8 ], [ %v7_13e08, %bb140 ]
  %v1_13e0c = add i32 %v0_13e0c, 4
  store i32 %v1_13e0c, i32* %r2.global-to-local, align 4
  %v3_13e0c = sub i32 0, %v0_13e0c
  %v4_13e0c = and i32 %v1_13e0c, %v3_13e0c
  %v5_13e0c = icmp slt i32 %v4_13e0c, 0
  store i1 %v5_13e0c, i1* %cpsr_v.global-to-local, align 1
  %v6_13e0c = icmp slt i32 %v1_13e0c, 0
  store i1 %v6_13e0c, i1* %cpsr_n.global-to-local, align 1
  %v7_13e0c = icmp eq i32 %v1_13e0c, 0
  store i1 %v7_13e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13e0c, label %.thread122, label %bb142

bb142:                                            ; preds = %bb141
  %v1_13e14 = add i32 %v0_13e0c, 2
  %v3_13e14 = sub i32 -3, %v0_13e0c
  %v4_13e14 = and i32 %v3_13e14, %v1_13e0c
  %v5_13e14 = icmp slt i32 %v4_13e14, 0
  store i1 %v5_13e14, i1* %cpsr_v.global-to-local, align 1
  %v6_13e14 = icmp slt i32 %v1_13e14, 0
  store i1 %v6_13e14, i1* %cpsr_n.global-to-local, align 1
  %v7_13e14 = icmp eq i32 %v1_13e0c, 2
  store i1 %v7_13e14, i1* %cpsr_z.global-to-local, align 1
  %v0_13e18 = load i32, i32* %r1.global-to-local, align 4
  %v1_13e18 = add i32 %v0_13e18, -1
  %v2_13e18 = inttoptr i32 %v1_13e18 to i8*
  %v3_13e18 = load i8, i8* %v2_13e18, align 1
  %v4_13e18 = zext i8 %v3_13e18 to i32
  store i32 %v4_13e18, i32* %r3.global-to-local, align 4
  store i32 %v1_13e18, i32* %r1.global-to-local, align 4
  %v3_13e1c = add i32 %v2_13e10, -1
  %v4_13e1c = inttoptr i32 %v3_13e1c to i8*
  store i8 %v3_13e18, i8* %v4_13e1c, align 1
  %v5_13e1c = load i32, i32* %r0.global-to-local, align 4
  %v6_13e1c = add i32 %v5_13e1c, -1
  store i32 %v6_13e1c, i32* %r0.global-to-local, align 4
  %v0_13e20 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_13e20 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_13e20 = xor i1 %v0_13e20, %v1_13e20
  br i1 %v2_13e20, label %.thread121, label %bb143

bb143:                                            ; preds = %bb142
  %v3_13e20 = load i32, i32* %r1.global-to-local, align 4
  %v4_13e20 = add i32 %v3_13e20, -1
  %v5_13e20 = inttoptr i32 %v4_13e20 to i8*
  %v6_13e20 = load i8, i8* %v5_13e20, align 1
  %v7_13e20 = zext i8 %v6_13e20 to i32
  store i32 %v7_13e20, i32* %r3.global-to-local, align 4
  store i32 %v4_13e20, i32* %r1.global-to-local, align 4
  %v6_13e24 = add i32 %v5_13e1c, -2
  %v7_13e24 = inttoptr i32 %v6_13e24 to i8*
  store i8 %v6_13e20, i8* %v7_13e24, align 1
  %v8_13e24 = load i32, i32* %r0.global-to-local, align 4
  %v9_13e24 = add i32 %v8_13e24, -1
  store i32 %v9_13e24, i32* %r0.global-to-local, align 4
  %v1_13e28.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_13e28.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread121

.thread121:                                       ; preds = %bb142, %bb143
  %v7_13e2c = phi i32 [ %v9_13e24, %bb143 ], [ %v6_13e1c, %bb142 ]
  %v2_13e2c = phi i1 [ %v2_13e28.pre, %bb143 ], [ %v1_13e20, %bb142 ]
  %v1_13e2c = phi i1 [ %v1_13e28.pre, %bb143 ], [ %v0_13e20, %bb142 ]
  %v0_13e28 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_13e28 = xor i1 %v2_13e2c, %v1_13e2c
  %v4_13e28 = or i1 %v0_13e28, %v3_13e28
  br i1 %v4_13e28, label %.thread122, label %bb144

bb144:                                            ; preds = %.thread121
  %v5_13e28 = load i32, i32* %r1.global-to-local, align 4
  %v6_13e28 = add i32 %v5_13e28, -1
  %v7_13e28 = inttoptr i32 %v6_13e28 to i8*
  %v8_13e28 = load i8, i8* %v7_13e28, align 1
  %v9_13e28 = zext i8 %v8_13e28 to i32
  store i32 %v9_13e28, i32* %r3.global-to-local, align 4
  store i32 %v6_13e28, i32* %r1.global-to-local, align 4
  %v8_13e2c = add i32 %v7_13e2c, -1
  %v9_13e2c = inttoptr i32 %v8_13e2c to i8*
  store i8 %v8_13e28, i8* %v9_13e2c, align 1
  %v10_13e2c = load i32, i32* %r0.global-to-local, align 4
  %v11_13e2c = add i32 %v10_13e2c, -1
  store i32 %v11_13e2c, i32* %r0.global-to-local, align 4
  br label %.thread122

dec_label_pc_13e34:                               ; preds = %dec_label_pc_13d8c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_13e34 = icmp eq i32 %v1_13d8c, 1
  store i1 %v8_13e34, i1* %cpsr_n.global-to-local, align 1
  %v9_13e34 = icmp eq i32 %v1_13d8c, 2
  store i1 %v9_13e34, i1* %cpsr_z.global-to-local, align 1
  %v1_13e38 = add i32 %v2_13d7c, -1
  %v2_13e38 = inttoptr i32 %v1_13e38 to i8*
  %v3_13e38 = load i8, i8* %v2_13e38, align 1
  %v4_13e38 = zext i8 %v3_13e38 to i32
  store i32 %v4_13e38, i32* %r3.global-to-local, align 4
  store i32 %v1_13e38, i32* %r1.global-to-local, align 4
  %v3_13e3c = add i32 %v2_13d80, -1
  %v4_13e3c = inttoptr i32 %v3_13e3c to i8*
  store i8 %v3_13e38, i8* %v4_13e3c, align 1
  %v5_13e3c = load i32, i32* %r0.global-to-local, align 4
  %v6_13e3c = add i32 %v5_13e3c, -1
  store i32 %v6_13e3c, i32* %r0.global-to-local, align 4
  br i1 %v8_13e34, label %.thread25, label %bb145

bb145:                                            ; preds = %dec_label_pc_13e34
  %v6_13e40 = load i32, i32* %r1.global-to-local, align 4
  %v7_13e40 = add i32 %v6_13e40, -1
  %v8_13e40 = inttoptr i32 %v7_13e40 to i8*
  %v9_13e40 = load i8, i8* %v8_13e40, align 1
  %v10_13e40 = zext i8 %v9_13e40 to i32
  store i32 %v10_13e40, i32* %r3.global-to-local, align 4
  store i32 %v7_13e40, i32* %r1.global-to-local, align 4
  %v9_13e44 = add i32 %v5_13e3c, -2
  %v10_13e44 = inttoptr i32 %v9_13e44 to i8*
  store i8 %v9_13e40, i8* %v10_13e44, align 1
  %v11_13e44 = load i32, i32* %r0.global-to-local, align 4
  %v12_13e44 = add i32 %v11_13e44, -1
  store i32 %v12_13e44, i32* %r0.global-to-local, align 4
  br i1 %v9_13e34, label %.thread25, label %bb146

bb146:                                            ; preds = %bb145
  %v8_13e48 = load i32, i32* %r1.global-to-local, align 4
  %v9_13e48 = add i32 %v8_13e48, -1
  %v10_13e48 = inttoptr i32 %v9_13e48 to i8*
  %v11_13e48 = load i8, i8* %v10_13e48, align 1
  %v12_13e48 = zext i8 %v11_13e48 to i32
  store i32 %v12_13e48, i32* %r3.global-to-local, align 4
  store i32 %v9_13e48, i32* %r1.global-to-local, align 4
  %v11_13e4c = add i32 %v11_13e44, -2
  %v12_13e4c = inttoptr i32 %v11_13e4c to i8*
  store i8 %v11_13e48, i8* %v12_13e4c, align 1
  %v13_13e4c = load i32, i32* %r0.global-to-local, align 4
  %v14_13e4c = add i32 %v13_13e4c, -1
  store i32 %v14_13e4c, i32* %r0.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb145, %dec_label_pc_13e34, %bb146
  %v0_13ea831 = phi i32 [ %v12_13e44, %bb145 ], [ %v6_13e3c, %dec_label_pc_13e34 ], [ %v14_13e4c, %bb146 ]
  %v0_13e50 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e50 = load i32, i32* %ip.global-to-local, align 4
  %v2_13e50 = sub i32 %v0_13e50, %v1_13e50
  store i32 %v2_13e50, i32* %r2.global-to-local, align 4
  %v4_13e50 = xor i32 %v1_13e50, %v0_13e50
  %v5_13e50 = xor i32 %v2_13e50, %v0_13e50
  %v6_13e50 = and i32 %v5_13e50, %v4_13e50
  %v7_13e50 = icmp slt i32 %v6_13e50, 0
  store i1 %v7_13e50, i1* %cpsr_v.global-to-local, align 1
  %v8_13e50 = icmp slt i32 %v2_13e50, 0
  store i1 %v8_13e50, i1* %cpsr_n.global-to-local, align 1
  %v9_13e50 = icmp eq i32 %v0_13e50, %v1_13e50
  store i1 %v9_13e50, i1* %cpsr_z.global-to-local, align 1
  %v5_13e54 = icmp slt i32 %v0_13e50, %v1_13e50
  br i1 %v5_13e54, label %bb141, label %dec_label_pc_13e58

dec_label_pc_13e58:                               ; preds = %.thread25
  %v0_13e58 = load i32, i32* %r1.global-to-local, align 4
  %v1_13e58 = urem i32 %v0_13e58, 4
  store i32 %v1_13e58, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13e58 = icmp eq i32 %v1_13e58, 0
  store i1 %v2_13e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e58, label %dec_label_pc_13d9c, label %dec_label_pc_13e60

dec_label_pc_13e60:                               ; preds = %dec_label_pc_13d94, %dec_label_pc_13e58
  %v0_13ea830 = phi i32 [ %v2_13d80, %dec_label_pc_13d94 ], [ %v0_13ea831, %dec_label_pc_13e58 ]
  %v0_13f54 = phi i32 [ %v2_13d84, %dec_label_pc_13d94 ], [ %v2_13e50, %dec_label_pc_13e58 ]
  %v0_13e60 = phi i32 [ %v2_13d7c, %dec_label_pc_13d94 ], [ %v0_13e58, %dec_label_pc_13e58 ]
  %v0_13e68 = phi i32 [ %v1_13d94, %dec_label_pc_13d94 ], [ %v1_13e58, %dec_label_pc_13e58 ]
  %v1_13e60 = and i32 %v0_13e60, -4
  store i32 %v1_13e60, i32* %r1.global-to-local, align 4
  %v1_13e64 = inttoptr i32 %v1_13e60 to i32*
  %v2_13e64 = load i32, i32* %v1_13e64, align 4
  store i32 %v2_13e64, i32* %r3.global-to-local, align 4
  %v7_13e68 = icmp ult i32 %v0_13e68, 2
  %v2_13f4c = add i32 %v0_13f54, -12
  %v4_13f4c = sub i32 11, %v0_13f54
  %v5_13f4c = and i32 %v4_13f4c, %v0_13f54
  %v6_13f4c = icmp slt i32 %v5_13f4c, 0
  store i1 %v6_13f4c, i1* %cpsr_v.global-to-local, align 1
  %v7_13f4c = icmp slt i32 %v2_13f4c, 0
  store i1 %v7_13f4c, i1* %cpsr_n.global-to-local, align 1
  %v8_13f4c = icmp eq i32 %v0_13f54, 12
  store i1 %v8_13f4c, i1* %cpsr_z.global-to-local, align 1
  %v5_13f50 = icmp slt i32 %v0_13f54, 12
  br i1 %v7_13e68, label %dec_label_pc_13f4c, label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e60
  %v8_13e68 = icmp eq i32 %v0_13e68, 2
  br i1 %v8_13e68, label %dec_label_pc_13ee0, label %dec_label_pc_13e74

dec_label_pc_13e74:                               ; preds = %dec_label_pc_13e70
  br i1 %v5_13f50, label %dec_label_pc_13ec0, label %dec_label_pc_13e7c

dec_label_pc_13e7c:                               ; preds = %dec_label_pc_13e74
  store i32 %v2_13f4c, i32* %r2.global-to-local, align 4
  %v3_13e80 = load i32, i32* @r4, align 4
  store i32 %v3_13e80, i32* %stack_var_-12, align 4
  %v6_13e80 = load i32, i32* @r5, align 4
  store i32 %v6_13e80, i32* %stack_var_-8, align 4
  %v9_13e80 = load i32, i32* @lr, align 4
  br label %dec_label_pc_13e84

dec_label_pc_13e84:                               ; preds = %dec_label_pc_13e84.dec_label_pc_13e84_crit_edge, %dec_label_pc_13e7c
  %v0_13ea8 = phi i32 [ %v1_13ea8, %dec_label_pc_13e84.dec_label_pc_13e84_crit_edge ], [ %v0_13ea830, %dec_label_pc_13e7c ]
  %v0_13e88 = phi i32 [ %v0_13e88.pre, %dec_label_pc_13e84.dec_label_pc_13e84_crit_edge ], [ %v1_13e60, %dec_label_pc_13e7c ]
  %v0_13e84 = phi i32 [ %v0_13e84.pre, %dec_label_pc_13e84.dec_label_pc_13e84_crit_edge ], [ %v2_13e64, %dec_label_pc_13e7c ]
  %v3_13e84 = mul i32 %v0_13e84, 256
  store i32 %v3_13e84, i32* %lr.global-to-local, align 4
  %v1_13e88 = add i32 %v0_13e88, -4
  %v2_13e88 = inttoptr i32 %v1_13e88 to i32*
  %v3_13e88 = load i32, i32* %v2_13e88, align 4
  store i32 %v3_13e88, i32* %r3.global-to-local, align 4
  %v4_13e88 = add i32 %v0_13e88, -8
  %v5_13e88 = inttoptr i32 %v4_13e88 to i32*
  %v6_13e88 = load i32, i32* %v5_13e88, align 4
  store i32 %v6_13e88, i32* %r4.global-to-local, align 4
  %v7_13e88 = add i32 %v0_13e88, -12
  %v8_13e88 = inttoptr i32 %v7_13e88 to i32*
  %v9_13e88 = load i32, i32* %v8_13e88, align 4
  store i32 %v9_13e88, i32* %r5.global-to-local, align 4
  %v10_13e88 = add i32 %v0_13e88, -16
  %v11_13e88 = inttoptr i32 %v10_13e88 to i32*
  %v12_13e88 = load i32, i32* %v11_13e88, align 4
  store i32 %v10_13e88, i32* %r1.global-to-local, align 4
  %v4_13e8c = udiv i32 %v12_13e88, 16777216
  %v5_13e8c = or i32 %v4_13e8c, %v3_13e84
  store i32 %v5_13e8c, i32* %lr.global-to-local, align 4
  %v3_13e90 = mul i32 %v12_13e88, 256
  %v4_13e94 = udiv i32 %v9_13e88, 16777216
  %v5_13e94 = or i32 %v3_13e90, %v4_13e94
  store i32 %v5_13e94, i32* %ip.global-to-local, align 4
  %v3_13e98 = mul i32 %v9_13e88, 256
  %v4_13e9c = udiv i32 %v6_13e88, 16777216
  %v5_13e9c = or i32 %v3_13e98, %v4_13e9c
  store i32 %v5_13e9c, i32* %r5.global-to-local, align 4
  %v3_13ea0 = mul i32 %v6_13e88, 256
  %v4_13ea4 = udiv i32 %v3_13e88, 16777216
  %v5_13ea4 = or i32 %v3_13ea0, %v4_13ea4
  store i32 %v5_13ea4, i32* %r4.global-to-local, align 4
  %v1_13ea8 = add i32 %v0_13ea8, -16
  %v2_13ea8 = inttoptr i32 %v1_13ea8 to i32*
  store i32 %v5_13ea4, i32* %v2_13ea8, align 4
  %v4_13ea8 = add i32 %v0_13ea8, -12
  %v5_13ea8 = inttoptr i32 %v4_13ea8 to i32*
  %v6_13ea8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_13ea8, i32* %v5_13ea8, align 4
  %v7_13ea8 = add i32 %v0_13ea8, -8
  %v8_13ea8 = inttoptr i32 %v7_13ea8 to i32*
  %v9_13ea8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_13ea8, i32* %v8_13ea8, align 4
  %v10_13ea8 = add i32 %v0_13ea8, -4
  %v11_13ea8 = inttoptr i32 %v10_13ea8 to i32*
  %v12_13ea8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13ea8, i32* %v11_13ea8, align 4
  store i32 %v1_13ea8, i32* %r0.global-to-local, align 4
  %v0_13eac = load i32, i32* %r2.global-to-local, align 4
  %v2_13eac = add i32 %v0_13eac, -16
  store i32 %v2_13eac, i32* %r2.global-to-local, align 4
  %v6_13eb0 = icmp slt i32 %v0_13eac, 16
  br i1 %v6_13eb0, label %dec_label_pc_13eb4, label %dec_label_pc_13e84.dec_label_pc_13e84_crit_edge

dec_label_pc_13e84.dec_label_pc_13e84_crit_edge:  ; preds = %dec_label_pc_13e84
  %v0_13e84.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_13e88.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e84

dec_label_pc_13eb4:                               ; preds = %dec_label_pc_13e84
  %v2_13eb4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13eb4, i32* @r4, align 4
  %v5_13eb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_13eb4, i32* @r5, align 4
  store i32 %v9_13e80, i32* @lr, align 4
  %v2_13eb8 = add i32 %v0_13eac, -4
  store i32 %v2_13eb8, i32* %r2.global-to-local, align 4
  %v4_13eb8 = add i32 %v0_13eac, 2147483632
  %v5_13eb8 = and i32 %v2_13eb8, %v4_13eb8
  %v6_13eb8 = icmp slt i32 %v5_13eb8, 0
  store i1 %v6_13eb8, i1* %cpsr_v.global-to-local, align 1
  %v7_13eb8 = icmp slt i32 %v2_13eb8, 0
  store i1 %v7_13eb8, i1* %cpsr_n.global-to-local, align 1
  %v8_13eb8 = icmp eq i32 %v2_13eb8, 0
  store i1 %v8_13eb8, i1* %cpsr_z.global-to-local, align 1
  %v5_13ebc = icmp slt i32 %v2_13eac, -12
  br i1 %v5_13ebc, label %dec_label_pc_13ed8, label %dec_label_pc_13ec0

dec_label_pc_13ec0:                               ; preds = %dec_label_pc_13e74, %dec_label_pc_13eb4, %dec_label_pc_13ec0
  %v1_13ecc = phi i32 [ %v5_13ecc, %dec_label_pc_13ec0 ], [ %v0_13ea830, %dec_label_pc_13e74 ], [ %v1_13ea8, %dec_label_pc_13eb4 ]
  %v0_13ec0 = load i32, i32* %r3.global-to-local, align 4
  %v3_13ec0 = mul i32 %v0_13ec0, 256
  store i32 %v3_13ec0, i32* %ip.global-to-local, align 4
  %v0_13ec4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ec4 = add i32 %v0_13ec4, -4
  %v2_13ec4 = inttoptr i32 %v1_13ec4 to i32*
  %v3_13ec4 = load i32, i32* %v2_13ec4, align 4
  store i32 %v3_13ec4, i32* %r3.global-to-local, align 4
  store i32 %v1_13ec4, i32* %r1.global-to-local, align 4
  %v4_13ec8 = udiv i32 %v3_13ec4, 16777216
  %v5_13ec8 = or i32 %v4_13ec8, %v3_13ec0
  store i32 %v5_13ec8, i32* %ip.global-to-local, align 4
  %v2_13ecc = add i32 %v1_13ecc, -4
  %v3_13ecc = inttoptr i32 %v2_13ecc to i32*
  store i32 %v5_13ec8, i32* %v3_13ecc, align 4
  %v4_13ecc = load i32, i32* %r0.global-to-local, align 4
  %v5_13ecc = add i32 %v4_13ecc, -4
  store i32 %v5_13ecc, i32* %r0.global-to-local, align 4
  %v0_13ed0 = load i32, i32* %r2.global-to-local, align 4
  %v2_13ed0 = add i32 %v0_13ed0, -4
  store i32 %v2_13ed0, i32* %r2.global-to-local, align 4
  %v6_13ed4 = icmp slt i32 %v0_13ed0, 4
  br i1 %v6_13ed4, label %dec_label_pc_13ed8.loopexit, label %dec_label_pc_13ec0

dec_label_pc_13ed8.loopexit:                      ; preds = %dec_label_pc_13ec0
  %v4_13ed0 = sub i32 3, %v0_13ed0
  %v5_13ed0 = and i32 %v4_13ed0, %v0_13ed0
  %v6_13ed0 = icmp slt i32 %v5_13ed0, 0
  %v7_13ed0 = icmp slt i32 %v2_13ed0, 0
  store i1 %v6_13ed0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13ed0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13ed8

dec_label_pc_13ed8:                               ; preds = %dec_label_pc_13ed8.loopexit, %dec_label_pc_13eb4
  %v2_13e1c62 = phi i32 [ %v5_13ecc, %dec_label_pc_13ed8.loopexit ], [ %v1_13ea8, %dec_label_pc_13eb4 ]
  %v0_13e0c58 = phi i32 [ %v2_13ed0, %dec_label_pc_13ed8.loopexit ], [ %v2_13eb8, %dec_label_pc_13eb4 ]
  %v0_13ed8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ed8 = add i32 %v0_13ed8, 3
  store i32 %v1_13ed8, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_13ee0:                               ; preds = %dec_label_pc_13e70
  br i1 %v5_13f50, label %dec_label_pc_13f2c, label %dec_label_pc_13ee8

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13ee0
  store i32 %v2_13f4c, i32* %r2.global-to-local, align 4
  %v3_13eec = load i32, i32* @r4, align 4
  store i32 %v3_13eec, i32* %stack_var_-12, align 4
  %v6_13eec = load i32, i32* @r5, align 4
  store i32 %v6_13eec, i32* %stack_var_-8, align 4
  %v9_13eec = load i32, i32* @lr, align 4
  br label %dec_label_pc_13ef0

dec_label_pc_13ef0:                               ; preds = %dec_label_pc_13ef0.dec_label_pc_13ef0_crit_edge, %dec_label_pc_13ee8
  %v0_13f14 = phi i32 [ %v1_13f14, %dec_label_pc_13ef0.dec_label_pc_13ef0_crit_edge ], [ %v0_13ea830, %dec_label_pc_13ee8 ]
  %v0_13ef4 = phi i32 [ %v0_13ef4.pre, %dec_label_pc_13ef0.dec_label_pc_13ef0_crit_edge ], [ %v1_13e60, %dec_label_pc_13ee8 ]
  %v0_13ef0 = phi i32 [ %v0_13ef0.pre, %dec_label_pc_13ef0.dec_label_pc_13ef0_crit_edge ], [ %v2_13e64, %dec_label_pc_13ee8 ]
  %v3_13ef0 = mul i32 %v0_13ef0, 65536
  store i32 %v3_13ef0, i32* %lr.global-to-local, align 4
  %v1_13ef4 = add i32 %v0_13ef4, -4
  %v2_13ef4 = inttoptr i32 %v1_13ef4 to i32*
  %v3_13ef4 = load i32, i32* %v2_13ef4, align 4
  store i32 %v3_13ef4, i32* %r3.global-to-local, align 4
  %v4_13ef4 = add i32 %v0_13ef4, -8
  %v5_13ef4 = inttoptr i32 %v4_13ef4 to i32*
  %v6_13ef4 = load i32, i32* %v5_13ef4, align 4
  store i32 %v6_13ef4, i32* %r4.global-to-local, align 4
  %v7_13ef4 = add i32 %v0_13ef4, -12
  %v8_13ef4 = inttoptr i32 %v7_13ef4 to i32*
  %v9_13ef4 = load i32, i32* %v8_13ef4, align 4
  store i32 %v9_13ef4, i32* %r5.global-to-local, align 4
  %v10_13ef4 = add i32 %v0_13ef4, -16
  %v11_13ef4 = inttoptr i32 %v10_13ef4 to i32*
  %v12_13ef4 = load i32, i32* %v11_13ef4, align 4
  store i32 %v10_13ef4, i32* %r1.global-to-local, align 4
  %v4_13ef8 = udiv i32 %v12_13ef4, 65536
  %v5_13ef8 = or i32 %v4_13ef8, %v3_13ef0
  store i32 %v5_13ef8, i32* %lr.global-to-local, align 4
  %v3_13efc = mul i32 %v12_13ef4, 65536
  %v4_13f00 = udiv i32 %v9_13ef4, 65536
  %v5_13f00 = or i32 %v3_13efc, %v4_13f00
  store i32 %v5_13f00, i32* %ip.global-to-local, align 4
  %v3_13f04 = mul i32 %v9_13ef4, 65536
  %v4_13f08 = udiv i32 %v6_13ef4, 65536
  %v5_13f08 = or i32 %v3_13f04, %v4_13f08
  store i32 %v5_13f08, i32* %r5.global-to-local, align 4
  %v3_13f0c = mul i32 %v6_13ef4, 65536
  %v4_13f10 = udiv i32 %v3_13ef4, 65536
  %v5_13f10 = or i32 %v3_13f0c, %v4_13f10
  store i32 %v5_13f10, i32* %r4.global-to-local, align 4
  %v1_13f14 = add i32 %v0_13f14, -16
  %v2_13f14 = inttoptr i32 %v1_13f14 to i32*
  store i32 %v5_13f10, i32* %v2_13f14, align 4
  %v4_13f14 = add i32 %v0_13f14, -12
  %v5_13f14 = inttoptr i32 %v4_13f14 to i32*
  %v6_13f14 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_13f14, i32* %v5_13f14, align 4
  %v7_13f14 = add i32 %v0_13f14, -8
  %v8_13f14 = inttoptr i32 %v7_13f14 to i32*
  %v9_13f14 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_13f14, i32* %v8_13f14, align 4
  %v10_13f14 = add i32 %v0_13f14, -4
  %v11_13f14 = inttoptr i32 %v10_13f14 to i32*
  %v12_13f14 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13f14, i32* %v11_13f14, align 4
  store i32 %v1_13f14, i32* %r0.global-to-local, align 4
  %v0_13f18 = load i32, i32* %r2.global-to-local, align 4
  %v2_13f18 = add i32 %v0_13f18, -16
  store i32 %v2_13f18, i32* %r2.global-to-local, align 4
  %v6_13f1c = icmp slt i32 %v0_13f18, 16
  br i1 %v6_13f1c, label %dec_label_pc_13f20, label %dec_label_pc_13ef0.dec_label_pc_13ef0_crit_edge

dec_label_pc_13ef0.dec_label_pc_13ef0_crit_edge:  ; preds = %dec_label_pc_13ef0
  %v0_13ef0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_13ef4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13ef0

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13ef0
  %v2_13f20 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13f20, i32* @r4, align 4
  %v5_13f20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_13f20, i32* @r5, align 4
  store i32 %v9_13eec, i32* @lr, align 4
  %v2_13f24 = add i32 %v0_13f18, -4
  store i32 %v2_13f24, i32* %r2.global-to-local, align 4
  %v4_13f24 = add i32 %v0_13f18, 2147483632
  %v5_13f24 = and i32 %v2_13f24, %v4_13f24
  %v6_13f24 = icmp slt i32 %v5_13f24, 0
  store i1 %v6_13f24, i1* %cpsr_v.global-to-local, align 1
  %v7_13f24 = icmp slt i32 %v2_13f24, 0
  store i1 %v7_13f24, i1* %cpsr_n.global-to-local, align 1
  %v8_13f24 = icmp eq i32 %v2_13f24, 0
  store i1 %v8_13f24, i1* %cpsr_z.global-to-local, align 1
  %v5_13f28 = icmp slt i32 %v2_13f18, -12
  br i1 %v5_13f28, label %dec_label_pc_13f44, label %dec_label_pc_13f2c

dec_label_pc_13f2c:                               ; preds = %dec_label_pc_13f20, %dec_label_pc_13ee0, %dec_label_pc_13f2c
  %v1_13f38 = phi i32 [ %v5_13f38, %dec_label_pc_13f2c ], [ %v1_13f14, %dec_label_pc_13f20 ], [ %v0_13ea830, %dec_label_pc_13ee0 ]
  %v0_13f2c = load i32, i32* %r3.global-to-local, align 4
  %v3_13f2c = mul i32 %v0_13f2c, 65536
  store i32 %v3_13f2c, i32* %ip.global-to-local, align 4
  %v0_13f30 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f30 = add i32 %v0_13f30, -4
  %v2_13f30 = inttoptr i32 %v1_13f30 to i32*
  %v3_13f30 = load i32, i32* %v2_13f30, align 4
  store i32 %v3_13f30, i32* %r3.global-to-local, align 4
  store i32 %v1_13f30, i32* %r1.global-to-local, align 4
  %v4_13f34 = udiv i32 %v3_13f30, 65536
  %v5_13f34 = or i32 %v4_13f34, %v3_13f2c
  store i32 %v5_13f34, i32* %ip.global-to-local, align 4
  %v2_13f38 = add i32 %v1_13f38, -4
  %v3_13f38 = inttoptr i32 %v2_13f38 to i32*
  store i32 %v5_13f34, i32* %v3_13f38, align 4
  %v4_13f38 = load i32, i32* %r0.global-to-local, align 4
  %v5_13f38 = add i32 %v4_13f38, -4
  store i32 %v5_13f38, i32* %r0.global-to-local, align 4
  %v0_13f3c = load i32, i32* %r2.global-to-local, align 4
  %v2_13f3c = add i32 %v0_13f3c, -4
  store i32 %v2_13f3c, i32* %r2.global-to-local, align 4
  %v6_13f40 = icmp slt i32 %v0_13f3c, 4
  br i1 %v6_13f40, label %dec_label_pc_13f44.loopexit, label %dec_label_pc_13f2c

dec_label_pc_13f44.loopexit:                      ; preds = %dec_label_pc_13f2c
  %v4_13f3c = sub i32 3, %v0_13f3c
  %v5_13f3c = and i32 %v4_13f3c, %v0_13f3c
  %v6_13f3c = icmp slt i32 %v5_13f3c, 0
  %v7_13f3c = icmp slt i32 %v2_13f3c, 0
  store i1 %v6_13f3c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13f3c, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13f44

dec_label_pc_13f44:                               ; preds = %dec_label_pc_13f44.loopexit, %dec_label_pc_13f20
  %v2_13e1c63 = phi i32 [ %v5_13f38, %dec_label_pc_13f44.loopexit ], [ %v1_13f14, %dec_label_pc_13f20 ]
  %v0_13e0c59 = phi i32 [ %v2_13f3c, %dec_label_pc_13f44.loopexit ], [ %v2_13f24, %dec_label_pc_13f20 ]
  %v0_13f44 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f44 = add i32 %v0_13f44, 2
  store i32 %v1_13f44, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13e60
  br i1 %v5_13f50, label %dec_label_pc_13f98, label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %dec_label_pc_13f4c
  store i32 %v2_13f4c, i32* %r2.global-to-local, align 4
  %v3_13f58 = load i32, i32* @r4, align 4
  store i32 %v3_13f58, i32* %stack_var_-12, align 4
  %v6_13f58 = load i32, i32* @r5, align 4
  store i32 %v6_13f58, i32* %stack_var_-8, align 4
  %v9_13f58 = load i32, i32* @lr, align 4
  br label %dec_label_pc_13f5c

dec_label_pc_13f5c:                               ; preds = %dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge, %dec_label_pc_13f54
  %v0_13f80 = phi i32 [ %v1_13f80, %dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge ], [ %v0_13ea830, %dec_label_pc_13f54 ]
  %v0_13f60 = phi i32 [ %v0_13f60.pre, %dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge ], [ %v1_13e60, %dec_label_pc_13f54 ]
  %v0_13f5c = phi i32 [ %v0_13f5c.pre, %dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge ], [ %v2_13e64, %dec_label_pc_13f54 ]
  %v3_13f5c = mul i32 %v0_13f5c, 16777216
  store i32 %v3_13f5c, i32* %lr.global-to-local, align 4
  %v1_13f60 = add i32 %v0_13f60, -4
  %v2_13f60 = inttoptr i32 %v1_13f60 to i32*
  %v3_13f60 = load i32, i32* %v2_13f60, align 4
  store i32 %v3_13f60, i32* %r3.global-to-local, align 4
  %v4_13f60 = add i32 %v0_13f60, -8
  %v5_13f60 = inttoptr i32 %v4_13f60 to i32*
  %v6_13f60 = load i32, i32* %v5_13f60, align 4
  store i32 %v6_13f60, i32* %r4.global-to-local, align 4
  %v7_13f60 = add i32 %v0_13f60, -12
  %v8_13f60 = inttoptr i32 %v7_13f60 to i32*
  %v9_13f60 = load i32, i32* %v8_13f60, align 4
  store i32 %v9_13f60, i32* %r5.global-to-local, align 4
  %v10_13f60 = add i32 %v0_13f60, -16
  %v11_13f60 = inttoptr i32 %v10_13f60 to i32*
  %v12_13f60 = load i32, i32* %v11_13f60, align 4
  store i32 %v10_13f60, i32* %r1.global-to-local, align 4
  %v4_13f64 = udiv i32 %v12_13f60, 256
  %v5_13f64 = or i32 %v4_13f64, %v3_13f5c
  store i32 %v5_13f64, i32* %lr.global-to-local, align 4
  %v3_13f68 = mul i32 %v12_13f60, 16777216
  %v4_13f6c = udiv i32 %v9_13f60, 256
  %v5_13f6c = or i32 %v3_13f68, %v4_13f6c
  store i32 %v5_13f6c, i32* %ip.global-to-local, align 4
  %v3_13f70 = mul i32 %v9_13f60, 16777216
  %v4_13f74 = udiv i32 %v6_13f60, 256
  %v5_13f74 = or i32 %v3_13f70, %v4_13f74
  store i32 %v5_13f74, i32* %r5.global-to-local, align 4
  %v3_13f78 = mul i32 %v6_13f60, 16777216
  %v4_13f7c = udiv i32 %v3_13f60, 256
  %v5_13f7c = or i32 %v3_13f78, %v4_13f7c
  store i32 %v5_13f7c, i32* %r4.global-to-local, align 4
  %v1_13f80 = add i32 %v0_13f80, -16
  %v2_13f80 = inttoptr i32 %v1_13f80 to i32*
  store i32 %v5_13f7c, i32* %v2_13f80, align 4
  %v4_13f80 = add i32 %v0_13f80, -12
  %v5_13f80 = inttoptr i32 %v4_13f80 to i32*
  %v6_13f80 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_13f80, i32* %v5_13f80, align 4
  %v7_13f80 = add i32 %v0_13f80, -8
  %v8_13f80 = inttoptr i32 %v7_13f80 to i32*
  %v9_13f80 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_13f80, i32* %v8_13f80, align 4
  %v10_13f80 = add i32 %v0_13f80, -4
  %v11_13f80 = inttoptr i32 %v10_13f80 to i32*
  %v12_13f80 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13f80, i32* %v11_13f80, align 4
  store i32 %v1_13f80, i32* %r0.global-to-local, align 4
  %v0_13f84 = load i32, i32* %r2.global-to-local, align 4
  %v2_13f84 = add i32 %v0_13f84, -16
  store i32 %v2_13f84, i32* %r2.global-to-local, align 4
  %v6_13f88 = icmp slt i32 %v0_13f84, 16
  br i1 %v6_13f88, label %dec_label_pc_13f8c, label %dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge

dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge:  ; preds = %dec_label_pc_13f5c
  %v0_13f5c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_13f60.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13f5c

dec_label_pc_13f8c:                               ; preds = %dec_label_pc_13f5c
  %v2_13f8c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13f8c, i32* @r4, align 4
  %v5_13f8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_13f8c, i32* @r5, align 4
  store i32 %v9_13f58, i32* @lr, align 4
  %v2_13f90 = add i32 %v0_13f84, -4
  store i32 %v2_13f90, i32* %r2.global-to-local, align 4
  %v4_13f90 = add i32 %v0_13f84, 2147483632
  %v5_13f90 = and i32 %v2_13f90, %v4_13f90
  %v6_13f90 = icmp slt i32 %v5_13f90, 0
  store i1 %v6_13f90, i1* %cpsr_v.global-to-local, align 1
  %v7_13f90 = icmp slt i32 %v2_13f90, 0
  store i1 %v7_13f90, i1* %cpsr_n.global-to-local, align 1
  %v8_13f90 = icmp eq i32 %v2_13f90, 0
  store i1 %v8_13f90, i1* %cpsr_z.global-to-local, align 1
  %v5_13f94 = icmp slt i32 %v2_13f84, -12
  br i1 %v5_13f94, label %dec_label_pc_13fb0, label %dec_label_pc_13f98

dec_label_pc_13f98:                               ; preds = %dec_label_pc_13f8c, %dec_label_pc_13f4c, %dec_label_pc_13f98
  %v1_13fa4 = phi i32 [ %v5_13fa4, %dec_label_pc_13f98 ], [ %v1_13f80, %dec_label_pc_13f8c ], [ %v0_13ea830, %dec_label_pc_13f4c ]
  %v0_13f98 = load i32, i32* %r3.global-to-local, align 4
  %v3_13f98 = mul i32 %v0_13f98, 16777216
  store i32 %v3_13f98, i32* %ip.global-to-local, align 4
  %v0_13f9c = load i32, i32* %r1.global-to-local, align 4
  %v1_13f9c = add i32 %v0_13f9c, -4
  %v2_13f9c = inttoptr i32 %v1_13f9c to i32*
  %v3_13f9c = load i32, i32* %v2_13f9c, align 4
  store i32 %v3_13f9c, i32* %r3.global-to-local, align 4
  store i32 %v1_13f9c, i32* %r1.global-to-local, align 4
  %v4_13fa0 = udiv i32 %v3_13f9c, 256
  %v5_13fa0 = or i32 %v4_13fa0, %v3_13f98
  store i32 %v5_13fa0, i32* %ip.global-to-local, align 4
  %v2_13fa4 = add i32 %v1_13fa4, -4
  %v3_13fa4 = inttoptr i32 %v2_13fa4 to i32*
  store i32 %v5_13fa0, i32* %v3_13fa4, align 4
  %v4_13fa4 = load i32, i32* %r0.global-to-local, align 4
  %v5_13fa4 = add i32 %v4_13fa4, -4
  store i32 %v5_13fa4, i32* %r0.global-to-local, align 4
  %v0_13fa8 = load i32, i32* %r2.global-to-local, align 4
  %v2_13fa8 = add i32 %v0_13fa8, -4
  store i32 %v2_13fa8, i32* %r2.global-to-local, align 4
  %v6_13fac = icmp slt i32 %v0_13fa8, 4
  br i1 %v6_13fac, label %dec_label_pc_13fb0.loopexit, label %dec_label_pc_13f98

dec_label_pc_13fb0.loopexit:                      ; preds = %dec_label_pc_13f98
  %v4_13fa8 = sub i32 3, %v0_13fa8
  %v5_13fa8 = and i32 %v4_13fa8, %v0_13fa8
  %v6_13fa8 = icmp slt i32 %v5_13fa8, 0
  %v7_13fa8 = icmp slt i32 %v2_13fa8, 0
  store i1 %v6_13fa8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13fa8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13fb0

dec_label_pc_13fb0:                               ; preds = %dec_label_pc_13fb0.loopexit, %dec_label_pc_13f8c
  %v2_13e1c64 = phi i32 [ %v5_13fa4, %dec_label_pc_13fb0.loopexit ], [ %v1_13f80, %dec_label_pc_13f8c ]
  %v0_13e0c60 = phi i32 [ %v2_13fa8, %dec_label_pc_13fb0.loopexit ], [ %v2_13f90, %dec_label_pc_13f8c ]
  %v0_13fb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13fb0 = add i32 %v0_13fb0, 1
  store i32 %v1_13fb0, i32* %r1.global-to-local, align 4
  br label %bb141

; uselistorder directives
  uselistorder i32 %v5_13fa4, { 0, 2, 1 }
  uselistorder i32 %v3_13f98, { 1, 0 }
  uselistorder i32 %v2_13f90, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13f80, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_13f60, { 1, 0 }
  uselistorder i32 %v3_13f5c, { 1, 0 }
  uselistorder i32 %v0_13f60, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13f80, { 3, 2, 1, 0 }
  uselistorder i32 %v5_13f38, { 0, 2, 1 }
  uselistorder i32 %v3_13f2c, { 1, 0 }
  uselistorder i32 %v2_13f24, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13f14, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_13ef4, { 1, 0 }
  uselistorder i32 %v3_13ef0, { 1, 0 }
  uselistorder i32 %v0_13ef4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13f14, { 3, 2, 1, 0 }
  uselistorder i32 %v5_13ecc, { 0, 2, 1 }
  uselistorder i32 %v3_13ec0, { 1, 0 }
  uselistorder i32 %v2_13eb8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13ea8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_13e88, { 1, 0 }
  uselistorder i32 %v3_13e84, { 1, 0 }
  uselistorder i32 %v0_13e88, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13ea8, { 3, 2, 1, 0 }
  uselistorder i1 %v5_13f50, { 2, 0, 1 }
  uselistorder i32 %v0_13e68, { 1, 0 }
  uselistorder i32 %v0_13f54, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_13ea830, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_13e58, { 2, 1, 0 }
  uselistorder i32 %v0_13e58, { 2, 0, 1 }
  uselistorder i32 %v2_13e50, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_13e50, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13e50, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_13ea831, { 2, 1, 0 }
  uselistorder i32 %v11_13e2c, { 1, 0 }
  uselistorder i32 %v7_13e2c, { 1, 0 }
  uselistorder i32 %v1_13e0c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_13e0c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13e10, { 1, 0 }
  uselistorder i32 %v7_13e04, { 0, 2, 1 }
  uselistorder i32 %v10_13e00, { 1, 0 }
  uselistorder i32 %v9_13df8, { 1, 0, 2 }
  uselistorder i32 %v6_13df4, { 1, 0 }
  uselistorder i32 %v2_13dec, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_13dec, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_13dfc, { 0, 3, 2, 1 }
  uselistorder i32 %v7_13de0, { 0, 2, 1 }
  uselistorder i32 %v13_13ddc, { 1, 0 }
  uselistorder i32 %v4_13dd8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_13dd8, { 2, 0, 1 }
  uselistorder i32 %v6_13de0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_13dd0, { 0, 2, 1 }
  uselistorder i32 %v16_13dcc, { 1, 0 }
  uselistorder i32 %v4_13dc8, { 1, 2, 0 }
  uselistorder i32 %v0_13dd8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_13dd0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_13dbc, { 0, 3, 2, 1 }
  uselistorder i32 %v10_13db8, { 1, 0 }
  uselistorder i32 %v1_13db4, { 1, 0 }
  uselistorder i32 %v10_13db0, { 1, 0 }
  uselistorder i32 %v0_13db0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13db4, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_13da8, { 0, 2, 1 }
  uselistorder i32 %v2_13d9c, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_13d9c, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_13db448, { 1, 2, 0 }
  uselistorder i32 %v1_13d94, { 2, 1, 0 }
  uselistorder i32 %v1_13d8c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_13d84, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_13d80, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_13d7c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_13d7c, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v4_13d68, { 0, 2, 1 }
  uselistorder i32 %v3_13d5c, { 1, 0 }
  uselistorder i32 %v2_13d54, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_13d44, { 1, 0, 3, 2 }
  uselistorder i32 %v8_13d24, { 1, 0, 2 }
  uselistorder i32 %v5_13d24, { 1, 0, 2 }
  uselistorder i32 %v2_13d24, { 1, 0, 2 }
  uselistorder i32 %v3_13d20, { 1, 0 }
  uselistorder i32 %v0_13d24, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13d44, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_13cfc, { 0, 2, 1 }
  uselistorder i32 %v3_13cf0, { 1, 0 }
  uselistorder i32 %v2_13ce8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_13cd8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_13cb8, { 1, 0, 2 }
  uselistorder i32 %v5_13cb8, { 1, 0, 2 }
  uselistorder i32 %v2_13cb8, { 1, 0, 2 }
  uselistorder i32 %v3_13cb4, { 1, 0 }
  uselistorder i32 %v0_13cb8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13cd8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_13c90, { 0, 2, 1 }
  uselistorder i32 %v3_13c84, { 1, 0 }
  uselistorder i32 %v2_13c7c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_13c6c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_13c4c, { 1, 0, 2 }
  uselistorder i32 %v5_13c4c, { 1, 0, 2 }
  uselistorder i32 %v2_13c4c, { 1, 0, 2 }
  uselistorder i32 %v3_13c48, { 1, 0 }
  uselistorder i32 %v0_13c4c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13c6c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_13d14, { 2, 0, 1 }
  uselistorder i32 %v0_13d18, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_13c6c74, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_13c1c, { 1, 0 }
  uselistorder i32 %v0_13c1c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_13c14, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_13c14, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13c14, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_13c6c75, { 2, 1, 0 }
  uselistorder i32 %v1_13bf4, { 1, 0, 2 }
  uselistorder i32 %v1_13bcc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_13bcc, { 1, 2, 0, 3 }
  uselistorder i32 %v8_13bb8, { 1, 0, 2 }
  uselistorder i32 %v6_13bb4, { 1, 0 }
  uselistorder i32 %v2_13bac, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_13bac, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_13bbc, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_13ba4, { 0, 2, 1 }
  uselistorder i32 %v3_13ba4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_13ba4, { 1, 0 }
  uselistorder i1 %v1_13ba4, { 1, 0 }
  uselistorder i32 %v3_13ba0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_13b98, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_13b84, { 1, 2, 0 }
  uselistorder i32 %v12_13b78, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13b6c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13b70, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_13b60, { 0, 2, 1 }
  uselistorder i32 %v2_13b58, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_13b58, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v1_13b50, { 1, 0 }
  uselistorder i32 %v1_13b48, { 2, 1, 0 }
  uselistorder i32 %v2_13b40, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_13b40, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v2_13b30, { 1, 0 }
  uselistorder i32 %v1_13b30, { 1, 5, 6, 3, 4, 0, 7, 9, 2, 8, 10 }
  uselistorder i32 %v0_13b30, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 25, 26, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 7, 4, 5, 37, 38, 39, 40, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r2.global-to-local, { 0, 26, 1, 2, 3, 4, 5, 27, 6, 7, 8, 9, 66, 67, 68, 69, 70, 71, 10, 28, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 29, 30, 61, 31, 32, 33, 34, 35, 62, 36, 37, 38, 39, 40, 63, 41, 42, 43, 44, 45, 64, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 0, 10, 2, 4, 6, 7, 5, 11, 8, 9, 62, 64, 60, 63, 65, 66, 12, 17, 13, 14, 15, 16, 18, 19, 21, 20, 22, 23, 61, 24, 25, 32, 26, 33, 27, 34, 28, 29, 30, 31, 35, 38, 36, 48, 37, 39, 42, 40, 49, 41, 43, 46, 44, 50, 45, 47, 51, 52, 53, 55, 54, 56, 57, 58, 59 }
  uselistorder i32* %r0.global-to-local, { 0, 20, 1, 2, 21, 3, 33, 35, 36, 4, 5, 6, 7, 8, 22, 9, 11, 10, 12, 13, 34, 14, 15, 23, 16, 17, 18, 19, 24, 25, 26, 28, 27, 29, 30, 31, 32 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 16, 17, 18, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 52, 53, 54, 55, 8, 20, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 46, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 0, 25, 1, 27, 2, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 42, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 0, 23, 1, 25, 2, 26, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 48, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 0, 26, 1, 28, 2, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 31, { 22, 23, 1, 0, 14, 16, 15, 17, 19, 18, 24, 20, 7, 2, 8, 3, 21, 9, 4, 5, 10, 11, 6, 12, 13 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 -2, { 12, 13, 11, 16, 0, 14, 1, 15, 2, 3, 10, 8, 9, 7, 6, 5, 4, 17, 18, 19 }
  uselistorder i32 65536, { 5, 4, 10, 6, 11, 7, 12, 8, 13, 9, 14, 15, 16, 20, 17, 21, 18, 22, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 60, 59, 61, 1, 62, 63, 2, 64, 0, 3, 65, 66, 67, 68, 69, 72, 70, 71, 73, 74, 75, 80, 81, 82, 83, 76, 77, 78, 79, 84, 87, 88, 85, 89, 86, 90, 91, 94, 95, 96, 92, 93, 97, 99, 98, 101, 102, 100, 103, 104, 105, 108, 109, 106, 110, 107, 111, 112, 115, 116, 117, 113, 114, 118, 138, 120, 119, 121, 123, 122, 125, 124, 126, 127, 129, 130, 131, 128, 132, 133, 135, 136, 137, 134 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 47, 46, 49, 48, 53, 50, 52, 51, 54, 56, 55, 58, 57, 60, 59, 62, 61, 63, 64, 70, 65, 71, 66, 72, 67, 73, 74, 68, 75, 69, 77, 76, 79, 78, 81, 80, 83, 82, 84, 85, 86, 90, 87, 91, 88, 92, 89, 93, 94, 95, 96, 99, 97, 100, 98, 101, 103, 102, 104, 105, 107, 106, 109, 108, 110, 112, 111, 113, 114, 115, 118, 116, 117, 120, 119, 121, 127, 122, 128, 123, 129, 124, 126, 130, 131, 132, 125, 133, 134, 140, 135, 141, 136, 142, 137, 139, 143, 144, 145, 138, 146 }
  uselistorder i32* @r5, { 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 155, 156, 157, 159, 569, 570, 571, 572, 573, 0, 574, 575, 160, 161, 162, 163, 164, 165, 195, 196, 197, 198, 199, 200, 201, 208, 202, 203, 204, 205, 206, 207, 505, 506, 507, 514, 515, 516, 517, 508, 509, 510, 511, 512, 513, 166, 167, 4, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 13, 14, 209, 210, 211, 212, 213, 214, 15, 215, 42, 216, 217, 218, 3, 2, 219, 220, 16, 17, 18, 19, 20, 43, 10, 11, 12, 46, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 49, 50, 44, 45, 221, 222, 223, 224, 225, 51, 226, 227, 7, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 274, 275, 266, 267, 268, 269, 270, 271, 272, 273, 5, 52, 53, 54, 55, 56, 57, 58, 106, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1, 130, 131, 132, 133, 134, 135, 136, 137, 6, 138, 139, 140, 141, 142, 143, 144, 145, 179, 180, 181, 182, 183, 8, 184, 185, 186, 187, 188, 189, 190, 191, 9, 192, 193, 194, 278, 279, 280, 286, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 314, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 339, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 386, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 421, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 450, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 480, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 518, 519, 520, 521, 522, 523, 532, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 114, 115, 116, 117, 118, 119, 276, 277 }
  uselistorder i32 -3, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 -5, { 1, 0 }
  uselistorder i32 11, { 9, 10, 11, 14, 15, 18, 19, 20, 21, 3, 22, 4, 23, 24, 0, 12, 13, 16, 17, 25, 26, 5, 27, 6, 28, 7, 29, 30, 31, 32, 33, 34, 35, 1, 36, 37, 38, 8, 39, 40, 41, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 3, 4, 5, 22, 6, 23, 24 }
  uselistorder i32 48, { 0, 4, 5, 2, 3, 1, 6, 7 }
  uselistorder i32 40, { 1, 5, 0, 4, 6, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2 }
  uselistorder i32 36, { 1, 5, 6, 3, 4, 0, 2 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0 }
  uselistorder i32 -32, { 1, 0, 2 }
  uselistorder i32 24, { 0, 62, 63, 32, 33, 1, 64, 65, 30, 31, 11, 36, 12, 37, 66, 38, 67, 39, 55, 34, 35, 58, 40, 13, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 54, 60, 56, 57, 68, 69, 70, 61, 71, 2, 76, 14, 15, 3, 77, 16, 17, 4, 78, 79, 80, 18, 19, 5, 20, 21, 22, 6, 23, 7, 8, 24, 81, 25, 9, 82, 83, 84, 26, 27, 85, 28, 10, 86, 29, 72, 73, 74, 75 }
  uselistorder i32 16, { 31, 32, 33, 168, 34, 169, 170, 35, 171, 172, 36, 173, 174, 175, 176, 177, 178, 80, 81, 68, 69, 85, 82, 83, 84, 86, 23, 87, 88, 4, 5, 6, 7, 8, 22, 9, 10, 0, 11, 12, 46, 89, 47, 37, 51, 70, 71, 48, 72, 49, 73, 50, 74, 90, 92, 93, 94, 24, 67, 13, 14, 21, 65, 15, 95, 16, 52, 91, 53, 75, 76, 40, 39, 38, 77, 41, 78, 42, 54, 55, 79, 43, 56, 25, 100, 101, 102, 103, 26, 104, 105, 106, 107, 108, 109, 110, 29, 111, 112, 113, 58, 114, 44, 57, 115, 116, 59, 117, 118, 119, 17, 120, 121, 1, 60, 122, 123, 124, 61, 125, 126, 127, 128, 129, 2, 62, 130, 131, 18, 132, 66, 19, 133, 63, 134, 135, 136, 20, 30, 137, 64, 138, 139, 3, 45, 140, 141, 142, 143, 144, 145, 27, 146, 147, 148, 149, 151, 150, 152, 153, 154, 155, 156, 157, 158, 28, 159, 160, 161, 162, 163, 165, 164, 166, 167, 96, 97, 98, 99 }
  uselistorder i32 20, { 104, 2, 105, 106, 0, 3, 107, 30, 31, 22, 23, 1, 32, 33, 34, 35, 16, 4, 24, 17, 25, 18, 26, 19, 27, 37, 5, 38, 6, 39, 21, 36, 28, 29, 44, 47, 45, 7, 46, 48, 49, 50, 51, 53, 54, 52, 8, 55, 56, 57, 58, 59, 60, 63, 64, 61, 9, 62, 65, 66, 67, 68, 69, 70, 73, 74, 71, 10, 72, 75, 76, 77, 78, 81, 82, 79, 11, 80, 83, 84, 85, 86, 87, 88, 91, 89, 20, 90, 92, 93, 94, 97, 13, 95, 12, 96, 98, 99, 102, 15, 100, 14, 101, 103, 40, 41, 42, 43 }
  uselistorder i32 27, { 1, 0, 3, 2, 4 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 7, { 60, 61, 62, 67, 139, 6, 66, 1, 7, 64, 8, 63, 0, 9, 68, 10, 69, 11, 70, 12, 71, 13, 72, 14, 73, 15, 74, 16, 75, 17, 76, 18, 77, 19, 78, 20, 79, 21, 80, 22, 81, 23, 82, 24, 83, 25, 84, 26, 85, 27, 86, 28, 87, 29, 88, 30, 89, 31, 90, 32, 91, 33, 92, 34, 93, 35, 94, 36, 95, 37, 96, 38, 97, 39, 98, 40, 99, 41, 100, 42, 101, 43, 102, 44, 103, 45, 104, 46, 105, 47, 106, 48, 107, 49, 108, 50, 109, 51, 110, 65, 52, 53, 54, 111, 112, 113, 55, 114, 115, 116, 117, 2, 118, 119, 120, 121, 56, 122, 3, 123, 57, 124, 125, 4, 126, 127, 5, 128, 129, 130, 131, 132, 58, 133, 134, 135, 136, 137, 59, 138 }
  uselistorder i32 -8, { 15, 16, 17, 18, 19, 20, 14, 13, 6, 12, 11, 10, 9, 21, 22, 23, 24, 7, 25, 0, 28, 8, 26, 27, 5, 1, 3, 2, 4 }
  uselistorder i1 false, { 19, 20, 21, 28, 12, 18, 29, 30, 15, 16, 17, 31, 11, 32, 33, 0, 24, 23, 25, 22, 2, 4, 5, 26, 3, 10, 13, 27, 6, 7, 8, 1, 14, 9, 34 }
  uselistorder i32* @r2, { 60, 61, 18, 7, 19, 21, 20, 22, 23, 24, 25, 5, 62, 1, 63, 68, 69, 72, 64, 46, 50, 51, 54, 52, 53, 47, 48, 49, 33, 0, 70, 2, 71, 4, 26, 27, 28, 6, 8, 65, 66, 67, 55, 56, 57, 3, 29, 58, 41, 42, 39, 40, 43, 34, 9, 10, 11, 37, 38, 35, 36, 12, 13, 59, 14, 15, 16, 17, 30, 31, 32, 44, 45 }
  uselistorder label %dec_label_pc_13f98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13f2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ec0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13e60, { 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_13dec, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_13db0, { 1, 0 }
  uselistorder label %dec_label_pc_13d9c, { 1, 0 }
  uselistorder label %dec_label_pc_13d5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13cf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13c84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13c24, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %.thread119, { 1, 0 }
  uselistorder label %bb131, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread117, { 1, 0 }
  uselistorder label %dec_label_pc_13b98, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13b58, { 1, 0 }
}

define i32 @function_13fb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13fb8:
  ret i32 %arg1
}

define i32 @function_13fc0() local_unnamed_addr {
dec_label_pc_13fc0:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_13fc0 = load i32, i32* @r0, align 4
  %v2_13fc0 = icmp eq i32 %v0_13fc0, 0
  %v3_13fc4 = load i32, i32* @r4, align 4
  store i32 %v3_13fc4, i32* %stack_var_-20, align 4
  %v0_13fc8 = load i32, i32* @r1, align 4
  br i1 %v2_13fc0, label %dec_label_pc_140a0, label %dec_label_pc_13fdc.lr.ph

dec_label_pc_13fdc:                               ; preds = %dec_label_pc_13fdc.lr.ph, %dec_label_pc_14060
  %v1_14060 = phi i32 [ 0, %dec_label_pc_13fdc.lr.ph ], [ %v5_14060, %dec_label_pc_14060 ]
  %v0_14064 = phi i32 [ 1, %dec_label_pc_13fdc.lr.ph ], [ %v1_14064, %dec_label_pc_14060 ]
  %v0_13fe4 = phi i32 [ %v0_13fc0, %dec_label_pc_13fdc.lr.ph ], [ %v0_13fe425, %dec_label_pc_14060 ]
  store i32 %v2_13fe0.pre, i32* @lr, align 4
  %v1_13fe4 = inttoptr i32 %v0_13fe4 to i8*
  %v2_13fe4 = load i8, i8* %v1_13fe4, align 1
  %v3_13fe4 = zext i8 %v2_13fe4 to i32
  %v3_13fe8 = mul nuw nsw i32 %v3_13fe4, 2
  %v4_13fe8 = add i32 %v3_13fe8, %v2_13fe0.pre
  %v5_13fe8 = inttoptr i32 %v4_13fe8 to i8*
  %v6_13fe8 = load i8, i8* %v5_13fe8, align 1
  %v1_13fec = and i8 %v6_13fe8, 8
  %v2_13fec = icmp eq i8 %v1_13fec, 0
  br i1 %v2_13fec, label %dec_label_pc_140a0, label %dec_label_pc_13ff4

dec_label_pc_13ff4:                               ; preds = %dec_label_pc_13fdc
  br label %dec_label_pc_14014

dec_label_pc_13ffc:                               ; preds = %dec_label_pc_14014
  %v3_14000 = mul i32 %v0_14060, 10
  %v4_14000 = add i32 %v3_14014, %v3_14000
  %v1_14004 = add i32 %v4_14000, -48
  %v8_1400c = icmp sgt i32 %v1_14004, 255
  br i1 %v8_1400c, label %dec_label_pc_140a0, label %dec_label_pc_14010

dec_label_pc_14010:                               ; preds = %dec_label_pc_13ffc
  %v1_14010 = add i32 %v0_14050, 1
  store i32 %v1_14010, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %dec_label_pc_13ff4, %dec_label_pc_14010
  %v0_14060 = phi i32 [ 0, %dec_label_pc_13ff4 ], [ %v1_14004, %dec_label_pc_14010 ]
  %v0_14050 = phi i32 [ %v0_13fe4, %dec_label_pc_13ff4 ], [ %v1_14010, %dec_label_pc_14010 ]
  %v1_14014 = inttoptr i32 %v0_14050 to i8*
  %v2_14014 = load i8, i8* %v1_14014, align 1
  %v3_14014 = zext i8 %v2_14014 to i32
  %v2_14018 = mul nuw nsw i32 %v3_14014, 2
  %v2_1401c = add i32 %v2_14018, %v2_13fe0.pre
  %v3_14020 = inttoptr i32 %v2_1401c to i8*
  %v4_14020 = load i8, i8* %v3_14020, align 1
  %v6_14020 = zext i8 %v4_14020 to i32
  %v1_1402c = and i32 %v6_14020, 8
  %v2_1402c = icmp eq i32 %v1_1402c, 0
  br i1 %v2_1402c, label %dec_label_pc_14034, label %dec_label_pc_13ffc

dec_label_pc_14034:                               ; preds = %dec_label_pc_14014
  %v8_14038 = icmp sgt i32 %v0_14064, 3
  br i1 %v8_14038, label %dec_label_pc_1404c, label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14034
  %v7_1403c = icmp eq i8 %v2_14014, 46
  br i1 %v7_1403c, label %dec_label_pc_14044, label %dec_label_pc_140a0

dec_label_pc_14044:                               ; preds = %dec_label_pc_1403c
  %v1_14044 = add i32 %v0_14050, 1
  store i32 %v1_14044, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14060

dec_label_pc_1404c:                               ; preds = %dec_label_pc_14034
  %v2_1404c = icmp eq i8 %v2_14014, 0
  %v1_14050 = add i32 %v0_14050, 1
  store i32 %v1_14050, i32* %r0.global-to-local, align 4
  br i1 %v2_1404c, label %dec_label_pc_14060, label %dec_label_pc_14058

dec_label_pc_14058:                               ; preds = %dec_label_pc_1404c
  %v1_14058 = and i32 %v6_14020, 32
  %v2_14058 = icmp eq i32 %v1_14058, 0
  br i1 %v2_14058, label %dec_label_pc_140a0, label %dec_label_pc_14060

dec_label_pc_14060:                               ; preds = %dec_label_pc_14058, %dec_label_pc_1404c, %dec_label_pc_14044
  %v0_13fe425 = phi i32 [ %v1_14050, %dec_label_pc_14058 ], [ %v1_14050, %dec_label_pc_1404c ], [ %v1_14044, %dec_label_pc_14044 ]
  %v4_14060 = mul i32 %v1_14060, 256
  %v5_14060 = or i32 %v0_14060, %v4_14060
  %v1_14064 = add nuw nsw i32 %v0_14064, 1
  %v7_1406c = icmp slt i32 %v1_14064, 5
  br i1 %v7_1406c, label %dec_label_pc_13fdc, label %dec_label_pc_14070

dec_label_pc_13fdc.lr.ph:                         ; preds = %dec_label_pc_13fc0
  %v2_13fe0.pre = load i32, i32* bitcast (i32** @global_var_1d174.814 to i32*), align 4
  br label %dec_label_pc_13fdc

dec_label_pc_14070:                               ; preds = %dec_label_pc_14060
  %v2_14070 = icmp eq i32 %v0_13fc8, 0
  br i1 %v2_14070, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_14070
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb40:                                             ; preds = %dec_label_pc_14070
  %v3_1408c = call i32 @llvm.bswap.i32(i32 %v5_14060)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_14098 = inttoptr i32 %v0_13fc8 to i32*
  store i32 %v3_1408c, i32* %v3_14098, align 4
  %v2_1409c.pre = load i32, i32* %stack_var_-20, align 4
  %v17_1409c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb40
  %v17_1409c = phi i32 [ 1, %bb ], [ %v17_1409c.pre, %bb40 ]
  %v2_1409c = phi i32 [ %v3_13fc4, %bb ], [ %v2_1409c.pre, %bb40 ]
  store i32 %v2_1409c, i32* @r4, align 4
  ret i32 %v17_1409c

dec_label_pc_140a0:                               ; preds = %dec_label_pc_1403c, %dec_label_pc_14058, %dec_label_pc_13fdc, %dec_label_pc_13ffc, %dec_label_pc_13fc0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_13fc4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_13fe0.pre, { 2, 1, 0 }
  uselistorder i32 %v1_14064, { 1, 0 }
  uselistorder i32 %v0_14050, { 0, 1, 3, 2 }
  uselistorder i32 %v3_13fc4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23 }
  uselistorder i32 5, { 13, 67, 14, 4, 2, 16, 68, 3, 15, 69, 1, 17, 73, 18, 74, 19, 75, 20, 76, 21, 77, 22, 78, 23, 79, 24, 80, 25, 81, 26, 82, 27, 83, 28, 84, 29, 85, 30, 86, 31, 87, 32, 88, 33, 89, 34, 90, 35, 91, 36, 92, 37, 93, 38, 94, 39, 95, 40, 96, 41, 97, 42, 98, 43, 99, 44, 100, 45, 101, 46, 102, 47, 103, 48, 104, 49, 105, 50, 106, 51, 107, 52, 108, 53, 109, 54, 110, 55, 111, 56, 112, 57, 113, 58, 114, 59, 115, 60, 116, 61, 117, 62, 118, 63, 119, 0, 70, 71, 72, 64, 65, 120, 121, 122, 123, 5, 124, 125, 126, 127, 6, 128, 129, 130, 131, 132, 133, 134, 135, 7, 136, 137, 66, 138, 8, 139, 140, 141, 9, 142, 143, 144, 145, 10, 146, 147, 148, 149, 150, 151, 152, 11, 153, 154, 155, 156, 157, 158, 159, 12, 160 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 60, 61, 65, 68, 69, 70, 66, 67, 71, 73, 72, 74, 75, 76, 421, 422, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 96, 101, 100, 99, 102, 107, 103, 106, 104, 105, 423, 108, 109, 110, 111, 419, 112, 113, 114, 115, 116, 420, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 129, 128, 131, 133, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 143, 145, 146, 147, 151, 157, 152, 148, 149, 153, 154, 155, 158, 150, 159, 160, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 172, 175, 177, 179, 178, 176, 180, 183, 182, 181, 190, 187, 184, 191, 188, 185, 186, 192, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 209, 211, 212, 213, 224, 219, 214, 225, 220, 226, 227, 221, 228, 222, 215, 216, 217, 229, 218, 230, 223, 231, 232, 233, 234, 235, 236, 237, 238, 240, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 255, 262, 259, 257, 263, 260, 258, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 279, 278, 281, 288, 284, 289, 290, 285, 282, 291, 286, 283, 292, 287, 293, 294, 295, 296, 297, 298, 299, 302, 303, 300, 304, 301, 306, 305, 307, 308, 309, 310, 311, 314, 315, 318, 316, 312, 319, 317, 313, 322, 321, 320, 417, 424, 323, 324, 330, 325, 331, 326, 327, 332, 328, 333, 334, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 353, 355, 356, 360, 361, 368, 362, 363, 369, 364, 357, 358, 370, 365, 359, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 385, 387, 388, 392, 393, 400, 394, 395, 401, 396, 389, 390, 402, 397, 391, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418 }
  uselistorder i8 46, { 0, 1, 3, 2 }
  uselistorder i32 3, { 32, 69, 70, 166, 71, 72, 73, 74, 75, 76, 80, 0, 90, 167, 3, 93, 155, 156, 77, 19, 78, 20, 157, 79, 33, 21, 23, 81, 36, 82, 2, 83, 84, 85, 86, 34, 18, 94, 95, 96, 97, 37, 98, 38, 99, 39, 100, 40, 101, 22, 102, 41, 103, 35, 104, 42, 87, 43, 88, 89, 44, 45, 46, 47, 48, 49, 50, 51, 1, 91, 52, 53, 54, 55, 56, 92, 57, 105, 106, 107, 108, 109, 110, 58, 111, 59, 112, 60, 24, 113, 114, 115, 116, 117, 5, 4, 61, 25, 118, 119, 120, 121, 122, 123, 124, 7, 6, 62, 125, 26, 126, 127, 128, 129, 130, 131, 132, 133, 9, 8, 63, 134, 27, 135, 136, 137, 138, 139, 11, 10, 64, 140, 28, 141, 142, 143, 144, 65, 145, 13, 12, 66, 146, 29, 147, 148, 149, 150, 151, 152, 15, 14, 67, 153, 30, 154, 158, 159, 160, 161, 162, 163, 17, 16, 68, 164, 31, 165 }
  uselistorder i32 8, { 210, 237, 24, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 25, 254, 110, 111, 112, 113, 117, 114, 115, 116, 255, 229, 228, 226, 227, 122, 123, 124, 230, 231, 232, 125, 126, 127, 7, 28, 29, 26, 27, 17, 18, 21, 22, 30, 256, 118, 119, 120, 121, 8, 9, 101, 19, 10, 11, 16, 12, 13, 14, 15, 102, 33, 103, 23, 128, 129, 130, 131, 133, 34, 134, 35, 135, 36, 136, 37, 137, 38, 138, 39, 139, 40, 140, 41, 141, 42, 142, 43, 143, 44, 144, 45, 145, 46, 146, 47, 147, 48, 148, 49, 149, 50, 150, 51, 151, 52, 152, 53, 153, 54, 154, 55, 155, 56, 156, 57, 157, 58, 158, 59, 159, 60, 160, 61, 161, 62, 162, 63, 163, 64, 164, 65, 165, 66, 166, 67, 167, 68, 168, 69, 169, 70, 170, 71, 171, 72, 172, 73, 173, 74, 174, 75, 175, 76, 176, 77, 177, 78, 178, 79, 179, 80, 180, 81, 181, 82, 182, 83, 183, 84, 184, 85, 185, 86, 186, 87, 187, 88, 188, 89, 189, 90, 190, 91, 191, 92, 192, 93, 193, 94, 194, 195, 132, 104, 105, 95, 106, 96, 97, 98, 200, 100, 31, 201, 202, 203, 204, 205, 20, 206, 207, 208, 209, 4, 211, 212, 213, 5, 214, 215, 216, 217, 218, 219, 220, 6, 221, 222, 223, 224, 225, 233, 234, 235, 236, 0, 107, 32, 108, 99, 109, 1, 2, 196, 197, 198, 199, 3 }
  uselistorder i32 255, { 1, 2, 3, 0 }
  uselistorder i32 10, { 9, 41, 42, 33, 34, 43, 0, 10, 3, 35, 39, 11, 38, 2, 44, 45, 36, 12, 46, 37, 47, 13, 48, 14, 49, 15, 50, 16, 51, 17, 52, 18, 53, 19, 54, 20, 55, 21, 56, 22, 57, 23, 58, 24, 59, 60, 40, 25, 1, 26, 27, 28, 4, 61, 62, 63, 64, 29, 30, 65, 66, 67, 68, 69, 5, 70, 71, 72, 6, 73, 74, 75, 31, 76, 7, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 8, 87, 32 }
  uselistorder i8 0, { 4, 0, 17, 18, 1, 6, 19, 20, 21, 5, 22, 23, 24, 25, 26, 27, 2, 8, 7, 9, 30, 32, 29, 11, 31, 12, 33, 34, 28, 3, 35, 36, 37, 38, 39, 14, 40, 41, 44, 15, 42, 43, 13, 45, 46, 47, 48, 49, 50, 10, 51, 52, 53, 16, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 2, { 4, 124, 235, 236, 54, 237, 238, 46, 239, 45, 240, 44, 127, 75, 76, 153, 77, 154, 78, 155, 241, 50, 79, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 125, 14, 15, 16, 17, 18, 81, 82, 80, 47, 48, 58, 146, 83, 86, 129, 136, 59, 128, 85, 130, 60, 131, 61, 132, 62, 133, 63, 134, 64, 135, 65, 141, 137, 138, 139, 140, 55, 87, 159, 19, 20, 160, 161, 162, 88, 163, 51, 126, 89, 164, 165, 84, 166, 21, 90, 142, 143, 22, 91, 92, 93, 144, 145, 94, 98, 147, 96, 148, 97, 149, 95, 99, 150, 23, 24, 25, 151, 56, 100, 101, 102, 57, 104, 105, 103, 66, 106, 107, 108, 152, 49, 53, 156, 157, 158, 223, 224, 167, 168, 169, 170, 171, 172, 173, 109, 174, 67, 175, 176, 177, 178, 179, 110, 68, 180, 181, 182, 183, 184, 185, 186, 111, 187, 69, 188, 189, 112, 190, 113, 114, 191, 192, 193, 194, 195, 196, 197, 198, 1, 26, 27, 28, 29, 30, 31, 115, 199, 70, 200, 201, 202, 203, 204, 2, 32, 33, 34, 35, 36, 37, 116, 71, 205, 206, 207, 208, 117, 209, 52, 210, 118, 211, 3, 38, 39, 40, 41, 42, 43, 119, 212, 72, 213, 214, 215, 216, 217, 218, 219, 220, 120, 221, 73, 222, 225, 226, 227, 121, 228, 122, 229, 230, 231, 232, 123, 233, 74, 234 }
  uselistorder i32* @lr, { 85, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 0, 132, 133, 134, 1, 135, 136, 137, 2, 138, 139, 140, 141, 142, 143, 144, 145, 23, 24, 146, 147, 148, 149, 150, 32, 33, 34, 35, 101, 102, 103, 104, 25, 26, 27, 28, 29, 36, 105, 4, 5, 106, 48, 49, 107, 6, 59, 60, 61, 62, 63, 50, 51, 52, 53, 54, 37, 38, 41, 42, 3, 45, 43, 44, 39, 40, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 108, 19, 20, 21, 22, 30, 31, 109, 110, 111, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 88, 89, 90, 46, 47 }
  uselistorder i32* @r1, { 36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 1, 75, 76, 15, 16, 18, 17, 5, 6, 77, 0, 78, 41, 46, 47, 50, 48, 49, 42, 43, 44, 45, 25, 51, 37, 19, 52, 20, 3, 53, 26, 27, 28, 7, 8, 9, 30, 29, 10, 54, 11, 12, 13, 14, 21, 22, 23, 4, 24, 55, 56, 2, 31, 32, 33, 34, 35, 38, 39, 40, 57 }
  uselistorder label %dec_label_pc_140a0, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_14014, { 1, 0 }
}

define i32 @function_140ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_140ac:
  %v3_140ac = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_140b4 = call i32 @function_11cc0()
  %v0_140b8 = load i32, i32* @r4, align 4
  store i32 %v3_140ac, i32* @r4, align 4
  %v2_140c0 = call i32 @function_11d68(i32 %v0_140b4, i32 %v0_140b8)
  ret i32 %v2_140c0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_11d68, { 12, 11, 10, 9, 8, 13, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_140c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_140c4:
  %v1_140c4 = add i32 %arg2, -1
  %v3_140c8 = udiv i32 %v1_140c4, 32
  %v4_140cc = mul nuw nsw i32 %v3_140c8, 4
  %v5_140cc = add i32 %v4_140cc, %arg1
  %v6_140cc = inttoptr i32 %v5_140cc to i32*
  %v7_140cc = load i32, i32* %v6_140cc, align 4
  %v1_140d0 = urem i32 %v1_140c4, 32
  %v7_140d8 = shl i32 1, %v1_140d0
  %v8_140d8 = and i32 %v7_140cc, %v7_140d8
  %v10_140d8 = icmp ne i32 %v8_140d8, 0
  %. = zext i1 %v10_140d8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_140c4, { 1, 0 }
}

define i32 @function_140e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_140e8:
  %v1_140e8 = add i32 %arg2, -1
  %v3_140ec = udiv i32 %v1_140e8, 32
  %v4_140f0 = mul nuw nsw i32 %v3_140ec, 4
  %v5_140f0 = add i32 %v4_140f0, %arg1
  %v6_140f0 = inttoptr i32 %v5_140f0 to i32*
  %v7_140f0 = load i32, i32* %v6_140f0, align 4
  %v1_140f4 = urem i32 %v1_140e8, 32
  %v7_140fc = shl i32 1, %v1_140f4
  %v8_140fc = or i32 %v7_140f0, %v7_140fc
  store i32 %v8_140fc, i32* %v6_140f0, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_140e8, { 1, 0 }
}

define i32 @function_1410c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1410c:
  %v1_1410c = add i32 %arg2, -1
  %v3_14110 = udiv i32 %v1_1410c, 32
  %v4_14114 = mul nuw nsw i32 %v3_14110, 4
  %v5_14114 = add i32 %v4_14114, %arg1
  %v6_14114 = inttoptr i32 %v5_14114 to i32*
  %v7_14114 = load i32, i32* %v6_14114, align 4
  %v1_14118 = urem i32 %v1_1410c, 32
  %tmp = shl i32 -1, %v1_14118
  %v8_14120 = add i32 %tmp, -1
  %v9_14120 = and i32 %v7_14114, %v8_14120
  store i32 %v9_14120, i32* %v6_14114, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1410c, { 1, 0 }
  uselistorder i32 4, {}
  uselistorder i32 32, { 4, 3, 6, 5, 8, 7, 53, 39, 40, 37, 46, 47, 42, 43, 38, 36, 48, 49, 10, 9, 12, 11, 14, 13, 16, 15, 41, 18, 17, 20, 19, 21, 23, 22, 25, 24, 26, 27, 29, 28, 44, 45, 50, 51, 30, 52, 31, 32, 0, 33, 1, 2, 34, 35 }
}

define i32 @function_14130(i32 %arg1) local_unnamed_addr {
dec_label_pc_14130:
  %v1_14130 = add i32 %arg1, 28
  %v2_14130 = inttoptr i32 %v1_14130 to i32*
  %v3_14130 = load i32, i32* %v2_14130, align 4
  %v1_14138 = add i32 %arg1, 44
  %v2_14138 = inttoptr i32 %v1_14138 to i32*
  %v3_14138 = load i32, i32* %v2_14138, align 4
  store i32 %v3_14130, i32* @global_var_1d310.644, align 4
  store i32 %v3_14138, i32* @global_var_1d314.645, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 11, 0, 3, 4, 1, 2, 5, 10, 6, 7, 8, 9 }
  uselistorder i32 28, { 29, 0, 14, 15, 5, 6, 16, 1, 7, 8, 9, 10, 11, 12, 13, 2, 4, 18, 17, 22, 23, 24, 25, 26, 27, 28, 3, 19, 20, 21 }
}

define i32 @function_14154(i32* %arg1) local_unnamed_addr {
dec_label_pc_14154:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1415c = call i32 @brk(i32* %arg1)
  %v3_14160 = icmp ult i32 %v2_1415c, %tmp
  store i32 %v2_1415c, i32* @global_var_1d254.812, align 4
  br i1 %v3_14160, label %dec_label_pc_14174, label %dec_label_pc_14184

dec_label_pc_14174:                               ; preds = %dec_label_pc_14154
  %v0_14174 = call i32 @function_12190()
  %v2_1417c = inttoptr i32 %v0_14174 to i32*
  store i32 12, i32* %v2_1417c, align 4
  br label %dec_label_pc_14184

dec_label_pc_14184:                               ; preds = %dec_label_pc_14154, %dec_label_pc_14174
  %v0_14184 = phi i32 [ 0, %dec_label_pc_14154 ], [ -1, %dec_label_pc_14174 ]
  ret i32 %v0_14184

; uselistorder directives
  uselistorder i32 12, { 17, 11, 120, 121, 122, 124, 125, 126, 127, 12, 123, 128, 129, 130, 131, 132, 133, 134, 49, 50, 33, 34, 51, 18, 19, 110, 111, 112, 0, 56, 113, 8, 114, 9, 57, 4, 58, 20, 21, 6, 52, 53, 22, 54, 55, 23, 13, 36, 37, 59, 60, 61, 38, 35, 39, 40, 41, 42, 43, 44, 46, 47, 45, 62, 63, 64, 10, 65, 66, 68, 69, 70, 24, 71, 25, 72, 26, 73, 27, 74, 28, 75, 5, 76, 67, 7, 48, 115, 81, 29, 82, 30, 83, 31, 84, 32, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 14, 96, 97, 98, 99, 15, 100, 101, 102, 103, 104, 105, 16, 106, 107, 108, 109, 116, 117, 118, 119, 1, 2, 77, 78, 79, 80, 3 }
  uselistorder i32 ()* @function_12190, { 21, 33, 9, 8, 44, 43, 7, 6, 5, 4, 42, 41, 40, 3, 52, 39, 38, 19, 20, 18, 17, 16, 23, 13, 32, 45, 31, 30, 12, 22, 51, 37, 36, 35, 50, 15, 29, 34, 24, 49, 2, 11, 48, 28, 10, 27, 14, 1, 0, 26, 25, 47, 46 }
  uselistorder i32* @global_var_1d254.812, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14184, { 1, 0 }
}

define i32 @function_14190(i32 %arg1) local_unnamed_addr {
dec_label_pc_14190:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14194 = load i32, i32* @global_var_1d000.774, align 4
  %v7_14198 = icmp eq i32 %v3_14194, -1
  %v3_1419c = load i32, i32* @r4, align 4
  store i32 %v3_1419c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1d000.774 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_14198, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_14190
  store i32 %v3_1419c, i32* %r4.global-to-local, align 4
  %v9_141a4 = load i32, i32* @r0, align 4
  ret i32 %v9_141a4

.preheader:                                       ; preds = %dec_label_pc_14190, %.preheader
  %v0_141ac = phi i32 [ %v3_141b0, %.preheader ], [ %v3_14194, %dec_label_pc_14190 ]
  call void @__pseudo_branch(i32 %v0_141ac)
  %v0_141b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_141b0 = add i32 %v0_141b0, -4
  %v2_141b0 = inttoptr i32 %v1_141b0 to i32*
  %v3_141b0 = load i32, i32* %v2_141b0, align 4
  store i32 %v1_141b0, i32* %r4.global-to-local, align 4
  %v3_141b4 = icmp eq i32 %v3_141b0, -1
  br i1 %v3_141b4, label %dec_label_pc_141bc, label %.preheader

dec_label_pc_141bc:                               ; preds = %.preheader
  %v2_141bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_141bc, i32* %r4.global-to-local, align 4
  %v8_141bc = load i32, i32* @r0, align 4
  ret i32 %v8_141bc

; uselistorder directives
  uselistorder i32 %v3_141b0, { 1, 0 }
  uselistorder i32 %v3_14194, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 44, 15, 45, 46, 47, 3, 16, 17, 18, 48, 49, 50, 4, 19, 20, 21, 51, 52, 53, 5, 22, 23, 54, 14, 13, 55, 56, 57, 12, 11, 10, 9, 24, 25, 26, 27, 28, 0, 29, 1, 30, 2, 58, 8, 31, 35, 36, 42, 37, 32, 33, 38, 39, 40, 41, 43, 7, 6, 34 }
  uselistorder i32 -1, { 142, 0, 84, 72, 73, 143, 144, 145, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 146, 85, 235, 86, 273, 274, 87, 250, 88, 226, 227, 89, 275, 90, 276, 91, 277, 92, 278, 131, 80, 228, 229, 93, 230, 231, 94, 279, 1, 147, 2, 95, 232, 233, 148, 149, 150, 132, 151, 3, 4, 79, 96, 251, 97, 252, 98, 253, 99, 246, 100, 248, 101, 236, 102, 225, 103, 237, 104, 238, 105, 249, 106, 247, 107, 217, 108, 141, 109, 152, 110, 218, 111, 254, 112, 239, 113, 234, 114, 245, 115, 219, 116, 280, 117, 256, 118, 220, 119, 240, 120, 257, 121, 241, 122, 255, 123, 281, 81, 282, 153, 154, 155, 156, 157, 158, 159, 160, 5, 6, 7, 124, 125, 8, 161, 13, 162, 242, 12, 163, 83, 82, 243, 9, 164, 211, 127, 212, 214, 215, 165, 166, 167, 126, 213, 14, 168, 74, 15, 169, 170, 16, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 216, 10, 191, 11, 192, 193, 17, 194, 195, 128, 244, 196, 18, 197, 198, 75, 19, 20, 199, 78, 21, 22, 23, 24, 25, 129, 200, 133, 221, 27, 201, 135, 222, 26, 134, 223, 28, 29, 136, 224, 30, 31, 32, 33, 34, 202, 35, 76, 36, 37, 39, 203, 130, 38, 77, 40, 41, 42, 43, 44, 45, 46, 204, 47, 137, 48, 49, 51, 205, 50, 52, 53, 54, 55, 206, 56, 57, 58, 207, 59, 60, 61, 208, 62, 63, 64, 65, 66, 209, 67, 68, 69, 210, 70, 71, 138, 139, 140 }
  uselistorder i32* @global_var_1d000.774, { 1, 0 }
  uselistorder i32 1, { 477, 71, 374, 375, 316, 338, 826, 827, 828, 829, 830, 326, 478, 270, 883, 319, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 481, 480, 479, 294, 295, 296, 298, 293, 291, 297, 292, 288, 290, 289, 482, 50, 49, 45, 47, 46, 48, 51, 44, 634, 18, 15, 17, 16, 483, 19, 484, 69, 70, 485, 227, 228, 486, 34, 177, 487, 266, 488, 72, 489, 250, 490, 269, 707, 708, 491, 263, 259, 264, 260, 261, 265, 262, 709, 710, 711, 376, 232, 233, 229, 231, 230, 492, 254, 493, 97, 0, 497, 496, 495, 494, 84, 83, 377, 498, 136, 137, 327, 378, 499, 187, 500, 712, 505, 504, 503, 502, 501, 77, 78, 81, 80, 79, 379, 506, 896, 328, 509, 508, 507, 268, 267, 510, 202, 203, 201, 204, 35, 36, 37, 38, 511, 223, 224, 222, 221, 220, 512, 513, 258, 257, 514, 329, 861, 515, 74, 75, 516, 161, 517, 120, 518, 234, 519, 24, 520, 216, 521, 73, 522, 219, 523, 26, 524, 25, 525, 13, 526, 32, 527, 33, 528, 635, 636, 637, 638, 639, 640, 641, 897, 11, 12, 8, 9, 10, 529, 380, 381, 530, 41, 40, 42, 39, 344, 713, 531, 160, 345, 533, 532, 99, 98, 534, 43, 535, 7, 536, 68, 537, 14, 538, 118, 539, 59, 119, 540, 53, 541, 76, 542, 255, 543, 273, 544, 274, 545, 52, 256, 82, 346, 732, 733, 347, 862, 863, 302, 864, 714, 715, 716, 312, 717, 548, 547, 546, 100, 108, 102, 103, 106, 104, 105, 101, 109, 107, 320, 771, 772, 321, 773, 550, 549, 287, 286, 718, 719, 720, 382, 551, 23, 22, 21, 20, 865, 330, 331, 1, 373, 866, 552, 29, 27, 30, 31, 28, 665, 667, 666, 383, 734, 272, 271, 867, 167, 721, 722, 723, 199, 200, 868, 553, 66, 65, 67, 796, 797, 554, 63, 62, 61, 60, 64, 774, 775, 555, 57, 56, 55, 54, 58, 384, 644, 385, 645, 348, 646, 647, 735, 648, 662, 393, 642, 643, 394, 649, 333, 395, 396, 391, 650, 651, 392, 652, 653, 390, 654, 655, 389, 656, 657, 388, 658, 659, 387, 660, 661, 386, 663, 664, 736, 397, 737, 398, 738, 740, 741, 739, 742, 399, 743, 633, 332, 746, 744, 400, 745, 748, 401, 749, 750, 751, 339, 752, 753, 402, 754, 403, 755, 404, 756, 405, 757, 406, 758, 407, 759, 408, 760, 409, 761, 410, 762, 411, 763, 334, 769, 770, 313, 412, 569, 568, 567, 566, 565, 564, 563, 562, 561, 560, 559, 558, 557, 556, 275, 277, 276, 283, 284, 280, 285, 281, 282, 278, 279, 764, 765, 413, 766, 767, 414, 768, 570, 113, 112, 110, 114, 116, 115, 117, 111, 747, 415, 572, 571, 251, 252, 253, 668, 669, 670, 671, 672, 673, 674, 303, 311, 675, 676, 335, 304, 677, 678, 679, 680, 305, 310, 681, 682, 336, 306, 683, 416, 685, 686, 417, 687, 684, 688, 343, 689, 322, 692, 693, 690, 691, 308, 307, 309, 694, 418, 695, 579, 578, 472, 577, 576, 575, 471, 574, 573, 189, 190, 188, 195, 193, 198, 194, 192, 197, 191, 196, 580, 166, 869, 582, 581, 145, 146, 144, 143, 142, 141, 138, 140, 148, 139, 147, 583, 421, 349, 696, 697, 350, 698, 419, 420, 422, 699, 700, 423, 424, 425, 426, 427, 428, 429, 430, 431, 594, 593, 592, 591, 590, 589, 588, 476, 587, 586, 585, 584, 236, 237, 235, 239, 238, 432, 314, 433, 595, 436, 435, 434, 702, 597, 596, 703, 598, 437, 438, 439, 704, 705, 440, 337, 706, 315, 441, 602, 601, 600, 599, 89, 88, 729, 3, 724, 442, 725, 2, 726, 340, 727, 317, 318, 728, 730, 341, 731, 607, 606, 605, 604, 473, 474, 603, 608, 870, 351, 871, 352, 872, 4, 873, 5, 6, 776, 777, 778, 779, 780, 781, 782, 783, 342, 784, 785, 786, 787, 443, 788, 444, 789, 445, 790, 791, 792, 793, 794, 611, 610, 609, 152, 151, 149, 155, 156, 159, 157, 150, 154, 158, 153, 798, 799, 800, 801, 802, 446, 447, 613, 612, 171, 169, 168, 170, 175, 174, 172, 173, 176, 803, 804, 805, 448, 806, 807, 808, 809, 810, 811, 449, 812, 450, 354, 353, 451, 813, 614, 121, 123, 125, 126, 128, 127, 124, 122, 814, 815, 452, 816, 453, 454, 357, 355, 356, 475, 615, 217, 218, 817, 818, 323, 819, 820, 821, 822, 455, 823, 324, 456, 457, 824, 358, 825, 616, 207, 210, 205, 206, 211, 212, 215, 213, 209, 214, 208, 831, 832, 833, 834, 835, 458, 836, 459, 360, 359, 460, 838, 461, 839, 617, 92, 94, 95, 96, 93, 91, 90, 840, 841, 842, 843, 844, 845, 846, 462, 847, 463, 848, 464, 365, 364, 465, 849, 361, 850, 362, 851, 363, 852, 622, 621, 620, 619, 618, 132, 133, 135, 134, 130, 131, 129, 853, 854, 855, 856, 857, 858, 466, 368, 367, 467, 859, 366, 860, 623, 179, 180, 181, 183, 185, 184, 186, 178, 182, 874, 875, 876, 877, 878, 879, 325, 468, 369, 370, 469, 880, 628, 627, 626, 625, 624, 243, 242, 240, 247, 248, 249, 246, 245, 241, 244, 371, 881, 701, 372, 470, 629, 163, 164, 165, 162, 882, 85, 837, 86, 630, 225, 226, 795, 87, 631, 632, 301, 300, 299 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_141c4() local_unnamed_addr {
dec_label_pc_141c4:
  %v5_141c8 = load i32, i32* @r0, align 4
  ret i32 %v5_141c8

; uselistorder directives
  uselistorder i32* @r0, { 5, 26, 27, 107, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 57, 58, 60, 59, 30, 152, 153, 37, 38, 39, 40, 24, 4, 15, 16, 31, 154, 155, 11, 12, 114, 25, 113, 87, 35, 89, 8, 88, 115, 61, 62, 63, 64, 33, 14, 65, 66, 67, 68, 13, 156, 9, 23, 90, 17, 116, 20, 117, 118, 10, 69, 119, 21, 91, 22, 70, 71, 0, 41, 92, 93, 42, 43, 44, 94, 97, 98, 99, 100, 101, 1, 95, 96, 45, 46, 47, 120, 48, 49, 50, 51, 52, 53, 54, 55, 56, 32, 72, 73, 74, 75, 76, 77, 78, 3, 79, 80, 81, 82, 83, 84, 85, 34, 86, 121, 122, 2, 6, 102, 103, 104, 105, 106, 108, 110, 111, 112, 123, 124, 125, 18, 109, 7, 19, 28, 29, 36 }
}

define i32 @function_141cc() local_unnamed_addr {
entry:
  %v3_141d0 = load i32, i32* @r4, align 4
  %v0_141d8 = call i32 @function_80b0()
  call void @__pseudo_branch(i32 %v3_141d0)
  ret i32 %v0_141d8

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 6, 11, 12, 8, 9, 10, 13, 3, 4, 5, 2, 1, 7 }
  uselistorder i32 0, { 91, 0, 1, 487, 2, 680, 681, 682, 683, 93, 92, 684, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 787, 788, 799, 800, 801, 802, 803, 804, 805, 806, 29, 807, 808, 809, 810, 811, 30, 812, 813, 814, 31, 815, 816, 817, 32, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 833, 834, 845, 846, 847, 848, 849, 850, 851, 852, 33, 853, 854, 855, 856, 857, 34, 858, 859, 860, 861, 862, 35, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 488, 489, 219, 490, 220, 544, 876, 720, 721, 722, 723, 491, 492, 493, 877, 878, 879, 880, 221, 494, 3, 495, 496, 497, 881, 882, 883, 94, 884, 61, 885, 59, 60, 886, 887, 888, 222, 892, 223, 902, 904, 384, 180, 905, 224, 903, 225, 226, 4, 889, 890, 95, 498, 192, 499, 229, 207, 206, 500, 501, 502, 503, 228, 504, 505, 227, 506, 891, 231, 893, 232, 208, 894, 895, 896, 897, 230, 726, 728, 729, 38, 181, 730, 727, 724, 725, 5, 545, 548, 546, 547, 182, 6, 733, 731, 732, 183, 96, 549, 550, 551, 555, 552, 553, 233, 7, 554, 8, 740, 741, 97, 734, 735, 736, 737, 738, 739, 742, 743, 380, 744, 381, 665, 696, 556, 479, 557, 558, 697, 666, 454, 685, 906, 907, 52, 507, 234, 508, 509, 510, 511, 235, 512, 513, 514, 515, 516, 517, 518, 455, 745, 559, 519, 633, 456, 382, 898, 64, 899, 780, 457, 560, 781, 561, 746, 900, 901, 9, 562, 78, 563, 564, 176, 175, 385, 65, 66, 67, 68, 395, 386, 40, 39, 79, 565, 566, 567, 568, 570, 569, 10, 747, 748, 178, 177, 387, 69, 70, 71, 72, 396, 388, 42, 41, 37, 49, 749, 397, 750, 751, 752, 73, 753, 754, 755, 756, 757, 98, 389, 398, 390, 391, 758, 399, 86, 99, 520, 521, 522, 74, 523, 524, 525, 214, 43, 100, 236, 571, 62, 526, 527, 760, 759, 761, 762, 36, 101, 763, 104, 103, 102, 215, 216, 217, 106, 105, 107, 237, 572, 573, 108, 764, 765, 87, 109, 528, 110, 458, 111, 651, 652, 112, 634, 635, 413, 392, 574, 80, 575, 576, 414, 415, 411, 400, 244, 412, 434, 435, 416, 417, 113, 114, 418, 419, 420, 421, 401, 242, 422, 423, 402, 243, 424, 425, 403, 241, 426, 427, 404, 240, 428, 429, 405, 239, 430, 437, 406, 238, 431, 436, 432, 56, 44, 88, 89, 433, 383, 577, 245, 578, 185, 579, 246, 580, 583, 584, 116, 184, 581, 582, 247, 248, 585, 586, 209, 587, 588, 407, 53, 249, 590, 591, 592, 593, 594, 595, 596, 194, 193, 597, 250, 598, 75, 599, 600, 90, 601, 394, 602, 603, 604, 393, 605, 606, 607, 115, 251, 252, 608, 611, 612, 613, 614, 615, 117, 609, 118, 610, 11, 119, 589, 438, 439, 440, 58, 45, 441, 57, 46, 442, 443, 444, 445, 446, 447, 253, 448, 449, 451, 120, 450, 54, 452, 13, 12, 453, 766, 767, 459, 460, 254, 461, 255, 462, 121, 463, 464, 465, 466, 467, 468, 469, 210, 256, 470, 55, 257, 471, 473, 258, 474, 259, 475, 476, 477, 478, 260, 482, 408, 218, 123, 122, 187, 261, 480, 481, 186, 483, 484, 485, 47, 486, 124, 125, 262, 63, 529, 530, 531, 532, 190, 533, 534, 535, 189, 536, 537, 538, 539, 83, 540, 542, 541, 81, 82, 126, 188, 196, 198, 197, 195, 263, 543, 211, 212, 213, 84, 127, 768, 50, 128, 636, 637, 129, 130, 131, 199, 638, 85, 639, 640, 641, 191, 642, 132, 643, 644, 264, 645, 646, 647, 133, 134, 648, 135, 650, 76, 77, 51, 136, 137, 200, 653, 654, 655, 656, 138, 657, 658, 659, 139, 141, 140, 201, 661, 660, 142, 662, 663, 143, 664, 667, 148, 266, 668, 146, 147, 144, 145, 669, 670, 149, 671, 267, 268, 672, 265, 673, 150, 152, 151, 153, 675, 676, 674, 677, 14, 15, 16, 17, 18, 678, 154, 679, 155, 156, 202, 687, 686, 688, 690, 691, 689, 19, 20, 21, 22, 23, 692, 157, 695, 698, 699, 700, 48, 158, 160, 159, 203, 702, 701, 269, 703, 705, 706, 707, 708, 270, 709, 24, 25, 26, 704, 27, 28, 710, 161, 711, 712, 162, 164, 163, 204, 715, 713, 714, 271, 717, 716, 718, 165, 719, 769, 166, 168, 167, 179, 772, 771, 770, 272, 774, 773, 775, 778, 205, 472, 776, 169, 777, 693, 170, 694, 616, 617, 618, 619, 620, 621, 171, 622, 623, 624, 625, 626, 627, 628, 629, 172, 173, 630, 631, 632, 174, 649, 779, 409, 410, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922 }
  uselistorder i32* @r4, { 35, 602, 606, 607, 610, 611, 451, 452, 453, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 155, 229, 628, 629, 5, 548, 549, 156, 630, 631, 632, 633, 634, 635, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 636, 637, 6, 638, 639, 640, 641, 654, 655, 656, 657, 33, 658, 31, 647, 649, 650, 651, 652, 653, 642, 643, 644, 175, 176, 177, 178, 179, 180, 181, 182, 645, 646, 648, 550, 551, 552, 230, 7, 231, 232, 233, 8, 234, 9, 242, 243, 235, 10, 11, 236, 237, 238, 239, 240, 241, 553, 12, 561, 562, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 406, 407, 487, 488, 244, 245, 141, 142, 246, 247, 248, 249, 489, 490, 408, 409, 72, 73, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 74, 75, 569, 570, 250, 251, 201, 202, 319, 320, 76, 77, 604, 605, 252, 253, 608, 609, 254, 255, 571, 572, 203, 204, 256, 257, 258, 259, 205, 206, 207, 208, 209, 573, 574, 575, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 358, 359, 360, 321, 322, 323, 36, 37, 13, 260, 261, 262, 38, 263, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 264, 265, 266, 267, 268, 269, 270, 276, 277, 278, 279, 280, 281, 288, 289, 290, 291, 292, 293, 294, 295, 301, 1, 302, 282, 283, 284, 285, 286, 287, 271, 272, 273, 274, 275, 50, 51, 52, 53, 54, 55, 56, 57, 14, 58, 59, 60, 61, 62, 63, 64, 65, 0, 66, 67, 68, 69, 70, 71, 576, 577, 296, 297, 298, 299, 300, 106, 107, 108, 109, 110, 111, 112, 113, 15, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 32, 147, 148, 149, 150, 151, 152, 153, 2, 154, 210, 211, 212, 3, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 324, 325, 326, 327, 328, 337, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 4, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 16, 385, 17, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 18, 424, 19, 425, 20, 426, 21, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 22, 457, 23, 458, 24, 459, 25, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 491, 492, 493, 494, 495, 496, 497, 498, 499, 509, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 26, 529, 27, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 578, 579, 580, 28, 581, 29, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 600, 601, 115, 116, 117, 597, 598, 599, 466, 467, 468, 303, 304, 305, 306, 307, 308, 30, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 34, 603 }
}

declare i32 @unknown_8b1e() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @accept(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @getsockopt(i32, i32, i32, i32*, i32*) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @recvfrom(i32, i32*, i32, i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
