source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208008165
@global_var_1001c4f0.3 = global i32 0
@global_var_1001c4fc.4 = local_unnamed_addr global i32* @global_var_1001c4f0.3
@global_var_1001c6d0.6 = global i32 0
@global_var_10000314.7 = constant i32 1207997149
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001c65c.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_10000bdc.14 = constant i32 939524096
@global_var_10000f14.15 = constant i32 939524096
@global_var_1001c660.16 = local_unnamed_addr global i32 0
@global_var_10001aa0.17 = constant [3 x i8] c"8~\00"
@global_var_10001ab0.18 = constant [3 x i8] c"8~\00"
@global_var_10001ac0.19 = constant [3 x i8] c"8~\00"
@global_var_100026fc.20 = constant [3 x i8] c"8`\00"
@global_var_100027ec.21 = constant [3 x i8] c"9!\00"
@global_var_10002e78.22 = constant [3 x i8] c"8`\00"
@global_var_100034c0.23 = constant [3 x i8] c"8`\00"
@global_var_10004174.24 = constant i32 939524104
@global_var_100041a4.25 = constant i32 939524096
@global_var_1000459c.26 = constant [3 x i8] c"8`\00"
@global_var_100045a4.27 = constant [3 x i8] c"8`\00"
@global_var_100045ac.28 = constant [3 x i8] c"8`\00"
@global_var_100046ac.29 = constant [3 x i8] c"9@\00"
@global_var_1000bf14.30 = constant i32 788529152
@global_var_100049f4.31 = constant [3 x i8] c"8`\00"
@global_var_100049fc.32 = constant [3 x i8] c"8`\00"
@global_var_10004a04.33 = constant [3 x i8] c"8`\00"
@global_var_10004a0c.34 = constant [3 x i8] c"8`\00"
@global_var_10004a78.35 = constant [3 x i8] c"8`\00"
@global_var_10004a80.36 = constant [3 x i8] c"8`\00"
@global_var_10004a88.37 = constant [3 x i8] c"8`\00"
@global_var_1001c66c.38 = local_unnamed_addr global i32 0
@global_var_10004ba4.39 = constant i32 939524096
@global_var_1001c668.40 = local_unnamed_addr global i32 0
@global_var_1001c664.41 = local_unnamed_addr global i32 0
@global_var_10004bc8.42 = constant [3 x i8] c"8`\00"
@global_var_10004c48.43 = constant [3 x i8] c"8`\00"
@global_var_10004c50.44 = constant [3 x i8] c"8`\00"
@global_var_10004cb4.45 = constant i32 1207979441
@global_var_10004cc8.46 = constant [3 x i8] c"8`\00"
@global_var_10004ce4.47 = constant [3 x i8] c"8`\00"
@global_var_10004d0c.48 = constant [3 x i8] c"8`\00"
@global_var_10004d14.49 = constant i32 939524118
@global_var_10004d78.50 = constant [3 x i8] c"8`\00"
@global_var_10004dbc.51 = constant [3 x i8] c"8`\00"
@global_var_10004df0.52 = constant [3 x i8] c"8`\00"
@global_var_10004e24.53 = constant [3 x i8] c"8`\00"
@global_var_10004e58.54 = constant [3 x i8] c"8`\00"
@global_var_10004f14.55 = constant [3 x i8] c"8`\00"
@global_var_10004fa4.56 = constant [3 x i8] c"8`\00"
@global_var_10004fac.57 = constant [3 x i8] c"8`\00"
@global_var_1000501c.58 = constant [3 x i8] c"8`\00"
@global_var_10005024.59 = constant i32 1207977349
@global_var_100050d4.60 = constant [3 x i8] c"8`\00"
@global_var_100051a8.61 = constant [3 x i8] c"8`\00"
@global_var_100051e0.62 = constant [3 x i8] c"8`\00"
@global_var_10005240.63 = constant [3 x i8] c"8`\00"
@global_var_1001c640.64 = local_unnamed_addr global i32 268472412
@global_var_1001c738.65 = global i32 0
@global_var_1000bf18.66 = constant [15 x i8] c"209.141.53.227\00"
@global_var_1001c73c.67 = local_unnamed_addr global i32 0
@global_var_1001c73a.68 = local_unnamed_addr global i32 0
@global_var_1001c670.69 = local_unnamed_addr global i32 0
@global_var_10005328.70 = constant [3 x i8] c"8`\00"
@global_var_10005384.71 = constant [3 x i8] c"8`\00"
@global_var_100053bc.72 = constant [3 x i8] c"8`\00"
@global_var_100053c4.73 = constant [3 x i8] c"8`\00"
@global_var_10005484.74 = constant i32 1207974873
@global_var_100054d8.75 = constant [3 x i8] c";a\00"
@global_var_1000553c.76 = constant i32 1207961037
@global_var_10005590.77 = constant [3 x i8] c"8`\00"
@global_var_1000bf28.78 = constant i32 167772160
@global_var_100055c8.79 = constant [3 x i8] c"8`\00"
@global_var_100055dc.80 = constant i32 1207975813
@global_var_10005680.81 = constant [3 x i8] c"8`\00"
@global_var_10005688.82 = constant [3 x i8] c"8`\00"
@global_var_10005690.83 = constant [3 x i8] c"8`\00"
@global_var_10005698.84 = constant i32 989855744
@global_var_100056a8.85 = constant [3 x i8] c";a\00"
@global_var_1001c638.86 = local_unnamed_addr global i32 -1
@global_var_1001c63c.87 = local_unnamed_addr global i32 -1
@global_var_10005834.89 = constant i32 939589631
@global_var_10005918.90 = constant i32 939589631
@global_var_100059f8.91 = constant i32 939589631
@global_var_10005a04.92 = constant i32 1006685388
@global_var_1000bf2c.93 = constant i32 1
@global_var_10005abc.94 = constant i32 939589631
@global_var_1001c6f4.95 = local_unnamed_addr global i32 0
@global_var_1001c6e8.96 = local_unnamed_addr global i32 0
@global_var_1001c6f0.97 = local_unnamed_addr global i32 0
@global_var_1001c6ec.98 = local_unnamed_addr global i32 0
@global_var_1001c684.99 = local_unnamed_addr global i32 0
@global_var_1001c678.100 = local_unnamed_addr global i32 0
@global_var_1001c67c.101 = local_unnamed_addr global i32 0
@global_var_1001c690.103 = local_unnamed_addr global i32 0
@global_var_10006168.104 = constant [3 x i8] c"8`\00"
@global_var_10006184.105 = constant i32 939524096
@global_var_1001c688.106 = local_unnamed_addr global i32 0
@global_var_1001c68c.107 = local_unnamed_addr global i32 0
@global_var_10006210.108 = constant [4 x i8] c"`e\08\00"
@global_var_1001c6f8.109 = global i32 0
@global_var_1001c70c.110 = global i32 0
@global_var_1000bfec.111 = constant [7 x i8] c"efg`ab\00"
@global_var_1001c6fa.112 = local_unnamed_addr global i32 0
@global_var_1001c718.113 = local_unnamed_addr global i32 0
@global_var_1001c700.114 = local_unnamed_addr global i32 0
@global_var_1001c701.115 = local_unnamed_addr global i32 0
@global_var_1001c6fc.116 = local_unnamed_addr global i32 0
@global_var_1000bfd4.117 = constant [6 x i8] c"3!1' \00"
@global_var_1000bf68.119 = constant i32 0
@global_var_1001c71a.120 = local_unnamed_addr global i32 0
@global_var_1000bfdc.121 = constant [5 x i8] c"eeee\00"
@global_var_1000bfe4.122 = constant [6 x i8] c"efg`a\00"
@global_var_1000bf34.123 = constant [5 x i8] c"!'1&\00"
@global_var_1000bf3c.124 = constant [8 x i8] c"0125!8 \00"
@global_var_1000bf44.125 = constant i32 455883832
@global_var_1000bf50.126 = constant i32 124138003
@global_var_1000bf5c.127 = constant [7 x i8] c"5: '8%\00"
@global_var_1000bf64.128 = constant [5 x i8] c"&;; \00"
@global_var_1000bf6c.129 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000bf74.130 = constant [6 x i8] c".8,,z\00"
@global_var_1000bf7c.131 = constant [9 x i8] c"<!: acam\00"
@global_var_1000bf88.132 = constant [5 x i8] c"5:?;\00"
@global_var_1000bf90.133 = constant [4 x i8] c"a!$\00"
@global_var_1000bf94.134 = constant [7 x i8] c",7gaee\00"
@global_var_1000bf9c.135 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000bfb4.136 = constant [6 x i8] c"509=:\00"
@global_var_1000bfa4.137 = constant [7 x i8] c"93gadd\00"
@global_var_1000bfac.138 = constant [7 x i8] c"91&8=:\00"
@global_var_1000bfbc.139 = constant [7 x i8] c"x65fg`\00"
@global_var_1000bfc4.140 = constant [8 x i8] c"5%!5&=;\00"
@global_var_1000bfcc.141 = constant [4 x i8] c"6=:\00"
@global_var_1001c704.142 = local_unnamed_addr global i32 0
@global_var_1001c708.143 = local_unnamed_addr global i32 0
@global_var_1001c702.144 = local_unnamed_addr global i32 0
@global_var_1001c710.145 = local_unnamed_addr global i32 0
@global_var_1001c71c.146 = local_unnamed_addr global i32 0
@global_var_10006d48.147 = constant [3 x i8] c"8`\00"
@global_var_1000bff4.150 = constant i32 -20676
@global_var_1000c020.151 = constant i32 -385280
@global_var_1001c748.166 = global i32 0
@global_var_1001c644.167 = local_unnamed_addr global i32 -555811921
@global_var_1000c030.168 = constant [3 x i8] c"Qm\00"
@global_var_100088dc.169 = constant [3 x i8] c"8`\00"
@global_var_1001c750.170 = local_unnamed_addr global i32 0
@global_var_1001c754.171 = local_unnamed_addr global i32 0
@global_var_1000c034.172 = constant i32 1407844352
@global_var_10008900.173 = constant [3 x i8] c"8`\00"
@global_var_1001c758.174 = local_unnamed_addr global i32 0
@global_var_1001c75c.175 = local_unnamed_addr global i32 0
@global_var_1000c19c.176 = constant i32 271921200
@global_var_10008924.177 = constant i32 939524125
@global_var_1001c764.178 = local_unnamed_addr global i32 0
@global_var_1001c760.179 = local_unnamed_addr global i32 0
@global_var_1000c038.180 = constant [7 x i8] c"'<188T\00"
@global_var_1000894c.181 = constant [3 x i8] c"8`\00"
@global_var_1001c768.182 = local_unnamed_addr global i32 0
@global_var_1001c76c.183 = local_unnamed_addr global i32 0
@global_var_1000c040.184 = constant [8 x i8] c"1:5681T\00"
@global_var_10008974.185 = constant [3 x i8] c"8`\00"
@global_var_1001c770.186 = local_unnamed_addr global i32 0
@global_var_1001c774.187 = local_unnamed_addr global i32 0
@global_var_1000c048.188 = constant [8 x i8] c"'-' 19T\00"
@global_var_10008998.189 = constant [3 x i8] c"8`\00"
@global_var_1001c778.190 = local_unnamed_addr global i32 0
@global_var_1001c77c.191 = local_unnamed_addr global i32 0
@global_var_1000c050.192 = constant [4 x i8] c"'<T\00"
@global_var_100089bc.193 = constant i32 939524099
@global_var_1001c784.194 = local_unnamed_addr global i32 0
@global_var_1001c780.195 = local_unnamed_addr global i32 0
@global_var_1000c054.196 = constant i32 2067152186
@global_var_100089e4.197 = constant [3 x i8] c"8`\00"
@global_var_1001c788.198 = local_unnamed_addr global i32 0
@global_var_1001c78c.199 = local_unnamed_addr global i32 0
@global_var_1000c068.200 = constant i32 505087772
@global_var_10008a08.201 = constant i32 939524120
@global_var_1001c794.202 = local_unnamed_addr global i32 0
@global_var_1001c790.203 = local_unnamed_addr global i32 0
@global_var_1000c084.204 = constant [10 x i8] c":7;&&17 T\00"
@global_var_10008a30.205 = constant i32 939524105
@global_var_1001c79c.206 = local_unnamed_addr global i32 0
@global_var_1001c798.207 = local_unnamed_addr global i32 0
@global_var_1000c090.208 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_10008a58.209 = constant [3 x i8] c"8`\00"
@global_var_1001c7a0.210 = local_unnamed_addr global i32 0
@global_var_1001c7a4.211 = local_unnamed_addr global i32 0
@global_var_1000c0a4.212 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_10008a7c.213 = constant i32 939524118
@global_var_1001c7ac.214 = local_unnamed_addr global i32 0
@global_var_1001c7a8.215 = local_unnamed_addr global i32 0
@global_var_1000c0bc.216 = constant [8 x i8] c"{$&;7{T\00"
@global_var_10008aa4.217 = constant [3 x i8] c"8`\00"
@global_var_1001c7b0.218 = local_unnamed_addr global i32 0
@global_var_1001c7b4.219 = local_unnamed_addr global i32 0
@global_var_1000c0c4.220 = constant [6 x i8] c"{1,1T\00"
@global_var_10008ac8.221 = constant [3 x i8] c"8`\00"
@global_var_1001c7b8.222 = local_unnamed_addr global i32 0
@global_var_1001c7bc.223 = local_unnamed_addr global i32 0
@global_var_1000c0cc.224 = constant [5 x i8] c"{20T\00"
@global_var_10008aec.225 = constant i32 939524100
@global_var_1001c7c4.226 = local_unnamed_addr global i32 0
@global_var_1001c7c0.227 = local_unnamed_addr global i32 0
@global_var_1000c0d4.228 = constant [7 x i8] c"{95$'T\00"
@global_var_10008b14.229 = constant [3 x i8] c"8`\00"
@global_var_1001c7c8.230 = local_unnamed_addr global i32 0
@global_var_1001c7cc.231 = local_unnamed_addr global i32 0
@global_var_1000c0dc.232 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10008b38.233 = constant [3 x i8] c"8`\00"
@global_var_1001c7d0.234 = local_unnamed_addr global i32 0
@global_var_1001c7d4.235 = local_unnamed_addr global i32 0
@global_var_1000c0ec.236 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_10008b5c.237 = constant [3 x i8] c"8`\00"
@global_var_1001c830.238 = local_unnamed_addr global i32 0
@global_var_1001c834.239 = local_unnamed_addr global i32 0
@global_var_1000c0f8.240 = constant [8 x i8] c"z5:=91T\00"
@global_var_10008b80.241 = constant [3 x i8] c"8`\00"
@global_var_1001c838.242 = local_unnamed_addr global i32 0
@global_var_1001c83c.243 = local_unnamed_addr global i32 0
@global_var_1000c100.244 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_10008ba4.245 = constant [3 x i8] c"8`\00"
@global_var_1001c7d8.246 = local_unnamed_addr global i32 0
@global_var_1001c7dc.247 = local_unnamed_addr global i32 0
@global_var_1000c114.248 = constant [9 x i8] c"5''#;&0T\00"
@global_var_10008bc8.249 = constant [3 x i8] c"8`\00"
@global_var_1001c7e0.250 = local_unnamed_addr global i32 0
@global_var_1001c7e4.251 = local_unnamed_addr global i32 0
@global_var_1000c1bc.252 = constant i32 473889
@global_var_10008bec.253 = constant i32 939524117
@global_var_1001c7ec.254 = local_unnamed_addr global i32 0
@global_var_1001c7e8.255 = local_unnamed_addr global i32 0
@global_var_1000c120.256 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_10008c14.257 = constant i32 939524113
@global_var_1001c7f4.258 = local_unnamed_addr global i32 0
@global_var_1001c7f0.259 = local_unnamed_addr global i32 0
@global_var_1000c134.260 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10008c3c.261 = constant i32 939524108
@global_var_1001c7fc.262 = local_unnamed_addr global i32 0
@global_var_1001c7f8.263 = local_unnamed_addr global i32 0
@global_var_1000c144.264 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_10008c64.265 = constant [3 x i8] c"8`\00"
@global_var_1001c800.266 = local_unnamed_addr global i32 0
@global_var_1001c804.267 = local_unnamed_addr global i32 0
@global_var_1000c154.268 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_10008c88.269 = constant [3 x i8] c"8`\00"
@global_var_1001c808.270 = local_unnamed_addr global i32 0
@global_var_1001c80c.271 = local_unnamed_addr global i32 0
@global_var_1000c168.272 = constant [9 x i8] c"$662*7!E\00"
@global_var_10008cac.273 = constant [3 x i8] c"8`\00"
@global_var_1001c810.274 = local_unnamed_addr global i32 0
@global_var_1001c814.275 = local_unnamed_addr global i32 0
@global_var_1000c174.276 = constant [6 x i8] c";3=:T\00"
@global_var_10008cd0.277 = constant [3 x i8] c"8`\00"
@global_var_1001c818.278 = local_unnamed_addr global i32 0
@global_var_1001c81c.279 = local_unnamed_addr global i32 0
@global_var_1000c17c.280 = constant [7 x i8] c"1: 1&T\00"
@global_var_10008cf4.281 = constant [3 x i8] c"8`\00"
@global_var_1001c820.282 = local_unnamed_addr global i32 0
@global_var_1001c824.283 = local_unnamed_addr global i32 0
@global_var_1000c184.284 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_10008d18.285 = constant i32 939524119
@global_var_1001c82c.286 = local_unnamed_addr global i32 0
@global_var_1001c828.287 = local_unnamed_addr global i32 0
@global_var_10009080.288 = constant i32 939524096
@global_var_100093c8.289 = constant i32 1207959564
@global_var_100098a4.290 = constant i32 939524118
@global_var_1000af94.291 = constant [3 x i8] c"8`\00"
@global_var_100099fc.292 = constant i32 939524105
@global_var_10009a18.293 = constant i32 939589631
@global_var_10009b40.294 = constant i32 1207959797
@global_var_10009b44.295 = constant i32 939524108
@global_var_1001c6b4.296 = global i32 0
@global_var_1000a288.297 = constant i32 939524118
@global_var_1000a310.298 = constant i32 939524118
@global_var_1001c840.299 = global i32 0
@global_var_1001c720.300 = global i32 0
@global_var_1001c648 = external global i32
@global_var_1000c2e0.302 = constant i32 33554944
@global_var_1001c6a4.303 = local_unnamed_addr global i32 0
@global_var_1001c8c0.304 = global i32 0
@global_var_1000a56c.305 = constant i32 939524108
@global_var_1000a5c0.306 = constant i32 939524108
@global_var_1000a674.307 = constant [3 x i8] c"8`\00"
@global_var_1000a720.308 = constant [3 x i8] c"8`\00"
@global_var_1000aa48.309 = constant i32 1207959640
@global_var_1000aa84.310 = constant i32 1207959580
@global_var_1001c654.311 = local_unnamed_addr global i32* @global_var_1000c2e0.302
@global_var_1000ac78.312 = constant i32 939524130
@global_var_1001c608.313 = global i32 0
@global_var_1001c698.314 = local_unnamed_addr global i32 0
@global_var_1000ad0c.315 = constant i32 1207960053
@global_var_1000ad10.316 = constant [3 x i8] c"= \00"
@global_var_1001c4e4.317 = global i32 -1
@global_var_1001c6a8.318 = local_unnamed_addr global i32 0
@global_var_1001c6ac.319 = local_unnamed_addr global i32 0
@global_var_1000c1d4.320 = constant [10 x i8] c"/dev/null\00"
@global_var_1001c6b0.321 = local_unnamed_addr global i32 0
@global_var_1001c69c.323 = local_unnamed_addr global i32 0
@global_var_1001c6a0.324 = local_unnamed_addr global i32 0
@global_var_1000b2ac.325 = constant i32 939524096
@global_var_1000b538.327 = constant i32 939524118
@global_var_1000b734.328 = constant i32 939589631
@global_var_1001c6c8.329 = local_unnamed_addr global i32 0
@global_var_1001c620.330 = global i32 0
@global_var_1000bc58.331 = constant i32 939524129
@global_var_1001c6bc.332 = local_unnamed_addr global i32 0
@global_var_1000bccc.333 = constant [3 x i8] c"8`\00"
@global_var_1000bd04.334 = constant i32 939524129
@global_var_1001c6c0.335 = local_unnamed_addr global i32 0
@global_var_1001c6c4.336 = local_unnamed_addr global i32 0
@global_var_1001c4e8.337 = global i32 0
@global_var_1001c6cc.2 = local_unnamed_addr global i8 0
@global_var_1001c658.9 = local_unnamed_addr global i8 0
@global_var_1001c659.13 = global i8 0
@global_var_1001c674.88 = local_unnamed_addr global i16 0
@global_var_1001c680.102 = global i16 0
@global_var_1001c70e.118 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000be88(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001c6cc.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001c4fc.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001c4fc.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001c4fc.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001c6cc.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001c6cc.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268551412 to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268551412
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000b080(i32 268456908, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268484340, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_10009560()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_10009560()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_1000ad2c(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_100095f0()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_10009638(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_1000aca8()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001c658.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001c65c.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder i32 %v0_100002bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003ac = load i32, i32* @r31, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003d0 = load i32, i32* @r27, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003d0, i32* @r27, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  store i32 %v0_100003ac, i32* @r31, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_1000a590(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_1000a590(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_1000a590(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_10008ddc(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_10009c34()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_1000a600()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_1000a600()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_1000a600()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 5, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_10009fcc(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10008e80(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_1000a590(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268439924, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_1000a700(i32 %v3_1000076c, i32 %v1_1000077c, i32 268439924)
  %v3_10000784 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001c65c.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001c658.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_1000a590(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001c658.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268444004, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_1000a700(i32 %v3_100007c0, i32 %v1_100007d0, i32 268444004)
  %v3_100007d8 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001c65c.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001c658.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_1000a590(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268444996, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_1000a700(i32 %v3_10000814, i32 %v1_10000824, i32 268444996)
  %v3_1000082c = load i8, i8* @global_var_1001c658.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001c65c.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001c658.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_1000a590(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268438276, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_1000a700(i32 %v3_10000868, i32 %v1_10000878, i32 268438276)
  %v3_10000880 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001c65c.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001c658.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_1000a590(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268451368, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_1000a700(i32 %v3_100008bc, i32 %v1_100008cc, i32 268451368)
  %v3_100008d4 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001c65c.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001c658.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_1000a590(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001c658.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268449860, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_1000a700(i32 %v3_10000910, i32 %v1_10000920, i32 268449860)
  %v3_10000928 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001c65c.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001c658.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_1000a590(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268448252, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_1000a700(i32 %v3_10000964, i32 %v1_10000974, i32 268448252)
  %v3_1000097c = load i8, i8* @global_var_1001c658.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001c65c.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001c658.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_1000a590(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268446644, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_1000a700(i32 %v3_100009b8, i32 %v1_100009c8, i32 268446644)
  %v3_100009d0 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001c65c.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001c658.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_1000a590(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268442640, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_1000a700(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268442640)
  %v3_10000a24 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001c65c.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001c658.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_1000a590(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268441168, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_1000a700(i32 %v3_10000a60, i32 %v1_10000a70, i32 268441168)
  %v3_10000a78 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001c658.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001c65c.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_1000a590(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001c65c.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268439100, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_1000a700(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268439100)
  %v3_10000acc = load i8, i8* @global_var_1001c658.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001c65c.10, align 4
  store i32 ptrtoint (i8* @global_var_1001c659.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001c658.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001c659.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c658.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b38 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b40 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268438372, i32* @lr, align 4
  %v2_10000b60 = call i32 @function_1000a590(i32 4, i32 4)
  store i32 %v2_10000b60, i32* %r27.global-to-local, align 4
  %v0_10000b6c = load i32, i32* @r30, align 4
  store i32 %v0_10000b6c, i32* %r3.global-to-local, align 4
  store i32 268438388, i32* @lr, align 4
  %v2_10000b70 = call i32 @function_1000a590(i32 %v0_10000b6c, i32 4)
  %v0_10000b78 = load i32, i32* @r28, align 4
  store i32 %v2_10000b70, i32* %r26.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b78 to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 7, i32 65535)
  %v0_10000b98 = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 65536
  store i32 %v1_10000ba0, i32* %r21.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b98 to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 6, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  %v1_10000bb0 = urem i32 %v5_10000ba8, 65536
  store i32 %v1_10000bb0, i32* %r22.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 0, i32 512)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bc8 = urem i32 %v5_10000bc0, 65536
  store i32 %v1_10000bc8, i32* @r31, align 4
  %v0_10000bd0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000bdc.14 to i32), i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd0, i32* %v4_10000bd8, i32 1, i32 1)
  store i32 %v5_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000be8 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000be8 = icmp eq i32 %v0_10000be8, 65535
  %v1_10000bf0 = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bf0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000be8, label %dec_label_pc_10000dec, label %dec_label_pc_10000c04

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000dec
  %v0_10000c04 = load i32, i32* @r30, align 4
  %v1_10000c04 = icmp slt i32 %v0_10000c04, 0
  %v3_10000c04 = icmp eq i32 %v0_10000c04, 0
  store i1 %v1_10000c04, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000c04, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000c04, 1
  br i1 %tmp38, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c0c

dec_label_pc_10000c0c:                            ; preds = %dec_label_pc_10000c04
  %v0_10000c10 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000c10, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000c1c = load i32, i32* %r21.global-to-local, align 4
  %v4_10000c1c = icmp eq i32 %v0_10000c1c, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10000d6c = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000c1c, label %dec_label_pc_10000d3c, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000ca4
  %v0_10000c3c = phi i32 [ %v0_10000cb8, %dec_label_pc_10000ca4 ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000c3c = add i32 %v0_10000c3c, 1
  store i32 %v1_10000c3c, i32* %r24.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v2_10000c40 = call i32 @function_1000a590(i32 65535, i32 1)
  %v0_10000c44 = load i32, i32* %r21.global-to-local, align 4
  %v1_10000c44 = trunc i32 %v0_10000c44 to i16
  %v2_10000c44 = load i32, i32* @r28, align 4
  %v3_10000c44 = add i32 %v2_10000c44, 2
  %v4_10000c44 = inttoptr i32 %v3_10000c44 to i16*
  store i16 %v1_10000c44, i16* %v4_10000c44, align 2
  %v1_10000c48 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c48 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000c48 = add i32 %v2_10000c48, %v1_10000c48
  %v4_10000c48 = inttoptr i32 %v3_10000c48 to i32*
  store i32 %v2_10000c40, i32* %v4_10000c48, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v3_10000c58 = call i32 @function_1000a234(i32 2, i32 2, i32 17)
  store i32 %v3_10000c58, i32* %r3.global-to-local, align 4
  %v3_10000c60 = icmp eq i32 %v3_10000c58, -1
  %v1_10000c68 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c68 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000c68 = add i32 %v2_10000c68, %v1_10000c68
  %v4_10000c68 = inttoptr i32 %v3_10000c68 to i32*
  store i32 %v3_10000c58, i32* %v4_10000c68, align 4
  br i1 %v3_10000c60, label %dec_label_pc_10000da0, label %dec_label_pc_10000c70

dec_label_pc_10000c70:                            ; preds = %dec_label_pc_10000c30
  %v0_10000c70 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000c70, i32* %stack_var_-72, align 4
  store i32 268438656, i32* @lr, align 4
  %v0_10000c7c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000c7c = call i32 @function_1000a000(i32 %v0_10000c7c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000c7c, i32* %r3.global-to-local, align 4
  %v0_10000c80 = load i32, i32* @r28, align 4
  %v1_10000c80 = add i32 %v0_10000c80, 20
  %v2_10000c80 = inttoptr i32 %v1_10000c80 to i8*
  %v3_10000c80 = load i8, i8* %v2_10000c80, align 1
  %v2_10000c84 = icmp ugt i8 %v3_10000c80, 31
  br i1 %v2_10000c84, label %dec_label_pc_10000ca4, label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c70
  %v1_10000c8c = add i32 %v0_10000c80, 16
  %v2_10000c8c = inttoptr i32 %v1_10000c8c to i32*
  %v3_10000c8c = load i32, i32* %v2_10000c8c, align 4
  store i32 %v3_10000c8c, i32* %r29.global-to-local, align 4
  %v0_10000c90 = call i32 @function_10005b08()
  store i32 %v0_10000c90, i32* %r3.global-to-local, align 4
  %v0_10000c94 = load i32, i32* @r28, align 4
  %v1_10000c94 = add i32 %v0_10000c94, 20
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i8*
  %v3_10000c94 = load i8, i8* %v2_10000c94, align 1
  %tmp = urem i8 %v3_10000c94, 64
  %v2_10000c98 = zext i8 %tmp to i32
  %v3_10000c98 = lshr i32 %v0_10000c90, %v2_10000c98
  %v0_10000c9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000c9c = add i32 %v3_10000c98, %v0_10000c9c
  store i32 %v2_10000c9c, i32* %r3.global-to-local, align 4
  %v2_10000ca0 = add i32 %v0_10000c94, 4
  %v3_10000ca0 = inttoptr i32 %v2_10000ca0 to i32*
  store i32 %v2_10000c9c, i32* %v3_10000ca0, align 4
  %v0_10000ca8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000ca4

dec_label_pc_10000ca4:                            ; preds = %dec_label_pc_10000c70, %dec_label_pc_10000c8c
  %v0_10000ca8 = phi i32 [ %v0_10000c80, %dec_label_pc_10000c70 ], [ %v0_10000ca8.pre, %dec_label_pc_10000c8c ]
  %v0_10000ca4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000ca4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000ca4 = add i32 %v1_10000ca4, %v0_10000ca4
  %v3_10000ca4 = inttoptr i32 %v2_10000ca4 to i32*
  %v4_10000ca4 = load i32, i32* %v3_10000ca4, align 4
  store i32 %v4_10000ca4, i32* %r3.global-to-local, align 4
  %v1_10000cb0 = add i32 %v0_10000ca4, 4
  store i32 %v1_10000cb0, i32* %r25.global-to-local, align 4
  store i32 268438712, i32* @lr, align 4
  %v3_10000cb4 = call i32 @function_1000a034(i32 %v4_10000ca4, i32 %v0_10000ca8, i32 16)
  store i32 %v3_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cb8 = load i32, i32* @r30, align 4
  %v4_10000cb8 = icmp eq i32 %v0_10000cb8, %v1_10000cb8
  %v0_10000cbc = load i32, i32* @r28, align 4
  %v1_10000cbc = add i32 %v0_10000cbc, 24
  store i32 %v1_10000cbc, i32* @r28, align 4
  br i1 %v4_10000cb8, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c30

dec_label_pc_10000cc4:                            ; preds = %dec_label_pc_10000ca4, %dec_label_pc_10000d1c, %dec_label_pc_10000c04
  %v0_10000cc4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000cc4 = icmp eq i32 %v0_10000cc4, 0
  store i1 %v3_10000cc4, i1* %cr3_eq.global-to-local, align 1
  %v0_10000cc8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cc8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000cc8.outer

dec_label_pc_10000cc8.outer:                      ; preds = %dec_label_pc_10000cfc, %dec_label_pc_10000e34, %dec_label_pc_10000cc4
  %v1_10000cc8.ph39 = phi i1 [ %v1_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v1_10000e34, %dec_label_pc_10000e34 ], [ %v1_10000cfc, %dec_label_pc_10000cfc ]
  %v0_10000cc8.ph40 = phi i1 [ %v0_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v0_10000e34, %dec_label_pc_10000e34 ], [ %v0_10000cfc, %dec_label_pc_10000cfc ]
  %v2_10000cc8 = or i1 %v1_10000cc8.ph39, %v0_10000cc8.ph40
  br label %dec_label_pc_10000cc8

dec_label_pc_10000cc8:                            ; preds = %dec_label_pc_10000cc8.outer, %dec_label_pc_10000cc8
  br i1 %v2_10000cc8, label %dec_label_pc_10000cc8, label %dec_label_pc_10000ccc

dec_label_pc_10000ccc:                            ; preds = %dec_label_pc_10000e34, %dec_label_pc_10000cfc, %dec_label_pc_10000cc8
  %v0_10000ccc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000ccc, label %dec_label_pc_10000cd0, label %dec_label_pc_10000df8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cd8:                            ; preds = %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge, %dec_label_pc_10000cd0
  %v0_10000cdc = phi i32 [ %v0_10000cf4, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v0_10000cec = phi i32 [ %v0_10000cd8.pre, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v1_10000cd8 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000cd8 = add i32 %v1_10000cd8, %v0_10000cec
  %v3_10000cd8 = inttoptr i32 %v2_10000cd8 to i32*
  %v4_10000cd8 = load i32, i32* %v3_10000cd8, align 4
  store i32 %v4_10000cd8, i32* %r3.global-to-local, align 4
  %v1_10000cdc = add i32 %v0_10000cdc, 1
  store i32 %v1_10000cdc, i32* %r28.global-to-local, align 4
  %v1_10000ce0 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000ce0 = add i32 %v1_10000ce0, %v0_10000cec
  %v3_10000ce0 = inttoptr i32 %v2_10000ce0 to i32*
  %v4_10000ce0 = load i32, i32* %v3_10000ce0, align 4
  %v0_10000ce4 = load i32, i32* @r31, align 4
  %v1_10000cec = add i32 %v0_10000cec, 4
  store i32 %v1_10000cec, i32* %r29.global-to-local, align 4
  store i32 268438772, i32* @lr, align 4
  %v4_10000cf0 = call i32 @function_1000a180(i32 %v4_10000cd8, i32 %v4_10000ce0, i32 %v0_10000ce4, i32 16384)
  store i32 %v4_10000cf0, i32* %r3.global-to-local, align 4
  %v0_10000cf4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000cf4 = load i32, i32* @r30, align 4
  %v4_10000cf4 = icmp eq i32 %v0_10000cf4, %v1_10000cf4
  br i1 %v4_10000cf4, label %dec_label_pc_10000cfc, label %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge

dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge: ; preds = %dec_label_pc_10000cd8
  %v0_10000cd8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cfc:                            ; preds = %dec_label_pc_10000cd8
  %v0_10000cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000cfc = or i1 %v0_10000cfc, %v1_10000cfc
  br i1 %v2_10000cfc, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000d80, %dec_label_pc_10000d9c
  %v0_10000d20 = phi i32 [ %v0_10000d90, %dec_label_pc_10000d80 ], [ %v0_10000d20.pre, %dec_label_pc_10000d9c ]
  %v0_10000d1c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000d1c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000d1c = add i32 %v1_10000d1c, %v0_10000d1c
  %v3_10000d1c = inttoptr i32 %v2_10000d1c to i32*
  %v4_10000d1c = load i32, i32* %v3_10000d1c, align 4
  store i32 %v4_10000d1c, i32* %r3.global-to-local, align 4
  %v1_10000d28 = add i32 %v0_10000d1c, 4
  store i32 %v1_10000d28, i32* %r25.global-to-local, align 4
  store i32 268438832, i32* @lr, align 4
  %v3_10000d2c = call i32 @function_1000a034(i32 %v4_10000d1c, i32 %v0_10000d20, i32 16)
  store i32 %v3_10000d2c, i32* %r3.global-to-local, align 4
  %v0_10000d30 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d30 = load i32, i32* @r30, align 4
  %v4_10000d30 = icmp eq i32 %v0_10000d30, %v1_10000d30
  %v0_10000d34 = load i32, i32* @r28, align 4
  %v1_10000d34 = add i32 %v0_10000d34, 24
  store i32 %v1_10000d34, i32* @r28, align 4
  br i1 %v4_10000d30, label %dec_label_pc_10000cc4, label %dec_label_pc_10000d3c

dec_label_pc_10000d3c:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000d1c
  %v0_10000d48 = phi i32 [ %v0_10000d30, %dec_label_pc_10000d1c ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000d48 = add i32 %v0_10000d48, 1
  store i32 %v1_10000d48, i32* %r24.global-to-local, align 4
  store i32 268438864, i32* @lr, align 4
  %v2_10000d4c = call i32 @function_1000a590(i32 65535, i32 1)
  store i32 %v2_10000d4c, i32* %r3.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d50 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000d50 = add i32 %v2_10000d50, %v1_10000d50
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d4c, i32* %v4_10000d50, align 4
  %v0_10000d54 = call i32 @function_10005b08()
  %v1_10000d54 = trunc i32 %v0_10000d54 to i16
  %v3_10000d58 = load i32, i32* @r28, align 4
  %v4_10000d58 = add i32 %v3_10000d58, 2
  %v5_10000d58 = inttoptr i32 %v4_10000d58 to i16*
  store i16 %v1_10000d54, i16* %v5_10000d58, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438892, i32* @lr, align 4
  %v3_10000d68 = call i32 @function_1000a234(i32 2, i32 2, i32 17)
  store i32 %v3_10000d68, i32* %r3.global-to-local, align 4
  %v3_10000d70 = icmp eq i32 %v3_10000d68, -1
  %v1_10000d78 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d78 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000d78 = add i32 %v2_10000d78, %v1_10000d78
  %v4_10000d78 = inttoptr i32 %v3_10000d78 to i32*
  store i32 %v3_10000d68, i32* %v4_10000d78, align 4
  br i1 %v3_10000d70, label %dec_label_pc_10000da0, label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000d3c
  %v0_10000d80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d80, i32* %stack_var_-72, align 4
  store i32 268438928, i32* @lr, align 4
  %v0_10000d8c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000d8c = call i32 @function_1000a000(i32 %v0_10000d8c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000d8c, i32* %r3.global-to-local, align 4
  %v0_10000d90 = load i32, i32* @r28, align 4
  %v1_10000d90 = add i32 %v0_10000d90, 20
  %v2_10000d90 = inttoptr i32 %v1_10000d90 to i8*
  %v3_10000d90 = load i8, i8* %v2_10000d90, align 1
  %v2_10000d94 = icmp ugt i8 %v3_10000d90, 31
  br i1 %v2_10000d94, label %dec_label_pc_10000d1c, label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d80
  %v1_10000d04 = add i32 %v0_10000d90, 16
  %v2_10000d04 = inttoptr i32 %v1_10000d04 to i32*
  %v3_10000d04 = load i32, i32* %v2_10000d04, align 4
  store i32 %v3_10000d04, i32* %r29.global-to-local, align 4
  %v0_10000d08 = call i32 @function_10005b08()
  store i32 %v0_10000d08, i32* %r3.global-to-local, align 4
  %v0_10000d0c = load i32, i32* @r28, align 4
  %v1_10000d0c = add i32 %v0_10000d0c, 20
  %v2_10000d0c = inttoptr i32 %v1_10000d0c to i8*
  %v3_10000d0c = load i8, i8* %v2_10000d0c, align 1
  %tmp43 = urem i8 %v3_10000d0c, 64
  %v2_10000d10 = zext i8 %tmp43 to i32
  %v3_10000d10 = lshr i32 %v0_10000d08, %v2_10000d10
  %v0_10000d14 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000d14 = add i32 %v3_10000d10, %v0_10000d14
  store i32 %v2_10000d14, i32* %r3.global-to-local, align 4
  %v2_10000d18 = add i32 %v0_10000d0c, 4
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i32*
  store i32 %v2_10000d14, i32* %v3_10000d18, align 4
  %v0_10000d20.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000d1c

dec_label_pc_10000da0:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000d3c
  %v1_10000db4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000b0c)
  store i32 %v0_10000b38, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b40, i32* %r29.global-to-local, align 4
  %v0_10000de8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000de8

dec_label_pc_10000dec:                            ; preds = %dec_label_pc_10000b04
  %v0_10000dec = call i32 @function_10005b08()
  store i32 %v0_10000dec, i32* %r3.global-to-local, align 4
  %v1_10000df0 = urem i32 %v0_10000dec, 65536
  store i32 %v1_10000df0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000c04

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e00:                            ; preds = %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge, %dec_label_pc_10000df8
  %v0_10000e08 = phi i32 [ %v0_10000e2c, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v0_10000e00 = phi i32 [ %v0_10000e00.pre, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v1_10000e00 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000e00 = add i32 %v1_10000e00, %v0_10000e00
  %v3_10000e00 = inttoptr i32 %v2_10000e00 to i32*
  %v4_10000e00 = load i32, i32* %v3_10000e00, align 4
  store i32 %v4_10000e00, i32* @r29, align 4
  %v0_10000e04 = load i32, i32* @r31, align 4
  store i32 %v0_10000e04, i32* @r4, align 4
  %v1_10000e08 = add i32 %v0_10000e08, 1
  store i32 %v1_10000e08, i32* %r25.global-to-local, align 4
  store i32 %v4_10000e00, i32* @r3, align 4
  %v0_10000e10 = call i32 @function_10005cdc()
  store i32 %v0_10000e10, i32* %r3.global-to-local, align 4
  %v0_10000e14 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, %v0_10000e14
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  %v4_10000e14 = load i32, i32* %v3_10000e14, align 4
  store i32 %v4_10000e14, i32* %r3.global-to-local, align 4
  %v0_10000e18 = load i32, i32* @r29, align 4
  %v0_10000e1c = load i32, i32* @r31, align 4
  %v1_10000e24 = add i32 %v0_10000e14, 4
  store i32 %v1_10000e24, i32* %r28.global-to-local, align 4
  store i32 268439084, i32* @lr, align 4
  %v4_10000e28 = call i32 @function_1000a180(i32 %v4_10000e14, i32 %v0_10000e18, i32 %v0_10000e1c, i32 16384)
  store i32 %v4_10000e28, i32* %r3.global-to-local, align 4
  %v0_10000e2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000e2c = load i32, i32* @r30, align 4
  %v4_10000e2c = icmp eq i32 %v0_10000e2c, %v1_10000e2c
  br i1 %v4_10000e2c, label %dec_label_pc_10000e34, label %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge

dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge: ; preds = %dec_label_pc_10000e00
  %v0_10000e00.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e34:                            ; preds = %dec_label_pc_10000e00
  %v0_10000e34 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000e34 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000e34 = or i1 %v0_10000e34, %v1_10000e34
  br i1 %v2_10000e34, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

; uselistorder directives
  uselistorder i1 %v1_10000e34, { 1, 0 }
  uselistorder i1 %v0_10000e34, { 1, 0 }
  uselistorder i32 %v0_10000e2c, { 1, 0 }
  uselistorder i32 %v0_10000e14, { 1, 0 }
  uselistorder i32 %v0_10000d90, { 1, 2, 0 }
  uselistorder i32 %v0_10000d1c, { 1, 0 }
  uselistorder i1 %v1_10000cfc, { 1, 0 }
  uselistorder i1 %v0_10000cfc, { 1, 0 }
  uselistorder i32 %v0_10000cf4, { 1, 0 }
  uselistorder i32 %v0_10000cec, { 2, 0, 1 }
  uselistorder i32 %v0_10000cb8, { 1, 0 }
  uselistorder i32 %v0_10000ca4, { 1, 0 }
  uselistorder i32 %v2_10000d6c, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 3, 7, 24, 8, 9, 12, 13, 14, 15, 16, 17, 10, 11, 2, 18, 19, 20, 21, 22, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10000da0, { 1, 0 }
  uselistorder label %dec_label_pc_10000d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000cc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c30, { 1, 0 }
  uselistorder label %dec_label_pc_10000c04, { 1, 0 }
}

define i32 @function_10000e3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000e3c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000e44 = call i32 @__asm_mfcr()
  store i32 %v0_10000e44, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000e70 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000e78 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268439196, i32* @lr, align 4
  %v2_10000e98 = call i32 @function_1000a590(i32 4, i32 4)
  store i32 %v2_10000e98, i32* %r27.global-to-local, align 4
  %v0_10000ea4 = load i32, i32* @r30, align 4
  store i32 %v0_10000ea4, i32* %r3.global-to-local, align 4
  store i32 268439212, i32* @lr, align 4
  %v2_10000ea8 = call i32 @function_1000a590(i32 %v0_10000ea4, i32 4)
  %v0_10000eb0 = load i32, i32* @r28, align 4
  store i32 %v2_10000ea8, i32* %r26.global-to-local, align 4
  %v0_10000ec0 = load i32, i32* @r29, align 4
  store i32 %v0_10000ec0, i32* %r3.global-to-local, align 4
  store i32 268439240, i32* @lr, align 4
  %v4_10000ec4 = inttoptr i32 %v0_10000eb0 to i32*
  %v5_10000ec4 = call i32 @function_100006a8(i32 %v0_10000ec0, i32* %v4_10000ec4, i32 7, i32 65535)
  %v0_10000ed0 = load i32, i32* @r28, align 4
  %v1_10000ed8 = urem i32 %v5_10000ec4, 65536
  store i32 %v1_10000ed8, i32* %r21.global-to-local, align 4
  %v0_10000edc = load i32, i32* @r29, align 4
  store i32 %v0_10000edc, i32* %r3.global-to-local, align 4
  store i32 268439268, i32* @lr, align 4
  %v4_10000ee0 = inttoptr i32 %v0_10000ed0 to i32*
  %v5_10000ee0 = call i32 @function_100006a8(i32 %v0_10000edc, i32* %v4_10000ee0, i32 6, i32 65535)
  %v0_10000ee4 = load i32, i32* @r28, align 4
  %v1_10000ee8 = urem i32 %v5_10000ee0, 65536
  store i32 %v1_10000ee8, i32* %r22.global-to-local, align 4
  %v0_10000ef4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ef4, i32* %r3.global-to-local, align 4
  store i32 268439292, i32* @lr, align 4
  %v4_10000ef8 = inttoptr i32 %v0_10000ee4 to i32*
  %v5_10000ef8 = call i32 @function_100006a8(i32 %v0_10000ef4, i32* %v4_10000ef8, i32 0, i32 1024)
  %v0_10000efc = load i32, i32* @r28, align 4
  %v1_10000f00 = urem i32 %v5_10000ef8, 65536
  store i32 %v1_10000f00, i32* @r31, align 4
  %v0_10000f08 = load i32, i32* @r29, align 4
  store i32 %v0_10000f08, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000f14.15 to i32), i32* @lr, align 4
  %v4_10000f10 = inttoptr i32 %v0_10000efc to i32*
  %v5_10000f10 = call i32 @function_100006a8(i32 %v0_10000f08, i32* %v4_10000f10, i32 1, i32 1)
  store i32 %v5_10000f10, i32* %r3.global-to-local, align 4
  %v0_10000f20 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000f20 = icmp eq i32 %v0_10000f20, 65535
  %v1_10000f28 = urem i32 %v5_10000f10, 256
  store i32 %v1_10000f28, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000f20, label %dec_label_pc_10001124, label %dec_label_pc_10000f3c

dec_label_pc_10000f3c:                            ; preds = %dec_label_pc_10000e3c, %dec_label_pc_10001124
  %v0_10000f3c = load i32, i32* @r30, align 4
  %v1_10000f3c = icmp slt i32 %v0_10000f3c, 0
  %v3_10000f3c = icmp eq i32 %v0_10000f3c, 0
  store i1 %v1_10000f3c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000f3c, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000f3c, 1
  br i1 %tmp38, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f44

dec_label_pc_10000f44:                            ; preds = %dec_label_pc_10000f3c
  %v0_10000f48 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000f48, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000f54 = load i32, i32* %r21.global-to-local, align 4
  %v4_10000f54 = icmp eq i32 %v0_10000f54, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100010a4 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000f54, label %dec_label_pc_10001074, label %dec_label_pc_10000f68

dec_label_pc_10000f68:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10000fdc
  %v0_10000f74 = phi i32 [ %v0_10000ff0, %dec_label_pc_10000fdc ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 1
  store i32 %v1_10000f74, i32* %r24.global-to-local, align 4
  store i32 268439420, i32* @lr, align 4
  %v2_10000f78 = call i32 @function_1000a590(i32 65535, i32 1)
  %v0_10000f7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10000f7c = trunc i32 %v0_10000f7c to i16
  %v2_10000f7c = load i32, i32* @r28, align 4
  %v3_10000f7c = add i32 %v2_10000f7c, 2
  %v4_10000f7c = inttoptr i32 %v3_10000f7c to i16*
  store i16 %v1_10000f7c, i16* %v4_10000f7c, align 2
  %v1_10000f80 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000f80 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000f80 = add i32 %v2_10000f80, %v1_10000f80
  %v4_10000f80 = inttoptr i32 %v3_10000f80 to i32*
  store i32 %v2_10000f78, i32* %v4_10000f80, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439444, i32* @lr, align 4
  %v3_10000f90 = call i32 @function_1000a234(i32 2, i32 2, i32 0)
  store i32 %v3_10000f90, i32* %r3.global-to-local, align 4
  %v3_10000f98 = icmp eq i32 %v3_10000f90, -1
  %v1_10000fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fa0 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000fa0 = add i32 %v2_10000fa0, %v1_10000fa0
  %v4_10000fa0 = inttoptr i32 %v3_10000fa0 to i32*
  store i32 %v3_10000f90, i32* %v4_10000fa0, align 4
  br i1 %v3_10000f98, label %dec_label_pc_100010d8, label %dec_label_pc_10000fa8

dec_label_pc_10000fa8:                            ; preds = %dec_label_pc_10000f68
  %v0_10000fa8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fa8, i32* %stack_var_-72, align 4
  store i32 268439480, i32* @lr, align 4
  %v0_10000fb4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10000fb4 = call i32 @function_1000a000(i32 %v0_10000fb4, i32 %v2_100010a4, i32 16)
  store i32 %v3_10000fb4, i32* %r3.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* @r28, align 4
  %v1_10000fb8 = add i32 %v0_10000fb8, 20
  %v2_10000fb8 = inttoptr i32 %v1_10000fb8 to i8*
  %v3_10000fb8 = load i8, i8* %v2_10000fb8, align 1
  %v2_10000fbc = icmp ugt i8 %v3_10000fb8, 31
  br i1 %v2_10000fbc, label %dec_label_pc_10000fdc, label %dec_label_pc_10000fc4

dec_label_pc_10000fc4:                            ; preds = %dec_label_pc_10000fa8
  %v1_10000fc4 = add i32 %v0_10000fb8, 16
  %v2_10000fc4 = inttoptr i32 %v1_10000fc4 to i32*
  %v3_10000fc4 = load i32, i32* %v2_10000fc4, align 4
  store i32 %v3_10000fc4, i32* %r29.global-to-local, align 4
  %v0_10000fc8 = call i32 @function_10005b08()
  store i32 %v0_10000fc8, i32* %r3.global-to-local, align 4
  %v0_10000fcc = load i32, i32* @r28, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 20
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i8*
  %v3_10000fcc = load i8, i8* %v2_10000fcc, align 1
  %tmp = urem i8 %v3_10000fcc, 64
  %v2_10000fd0 = zext i8 %tmp to i32
  %v3_10000fd0 = lshr i32 %v0_10000fc8, %v2_10000fd0
  %v0_10000fd4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000fd4 = add i32 %v3_10000fd0, %v0_10000fd4
  store i32 %v2_10000fd4, i32* %r3.global-to-local, align 4
  %v2_10000fd8 = add i32 %v0_10000fcc, 4
  %v3_10000fd8 = inttoptr i32 %v2_10000fd8 to i32*
  store i32 %v2_10000fd4, i32* %v3_10000fd8, align 4
  %v0_10000fe0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000fdc

dec_label_pc_10000fdc:                            ; preds = %dec_label_pc_10000fa8, %dec_label_pc_10000fc4
  %v0_10000fe0 = phi i32 [ %v0_10000fb8, %dec_label_pc_10000fa8 ], [ %v0_10000fe0.pre, %dec_label_pc_10000fc4 ]
  %v0_10000fdc = load i32, i32* %r25.global-to-local, align 4
  %v1_10000fdc = load i32, i32* %r26.global-to-local, align 4
  %v2_10000fdc = add i32 %v1_10000fdc, %v0_10000fdc
  %v3_10000fdc = inttoptr i32 %v2_10000fdc to i32*
  %v4_10000fdc = load i32, i32* %v3_10000fdc, align 4
  store i32 %v4_10000fdc, i32* %r3.global-to-local, align 4
  %v1_10000fe8 = add i32 %v0_10000fdc, 4
  store i32 %v1_10000fe8, i32* %r25.global-to-local, align 4
  store i32 268439536, i32* @lr, align 4
  %v3_10000fec = call i32 @function_1000a034(i32 %v4_10000fdc, i32 %v0_10000fe0, i32 16)
  store i32 %v3_10000fec, i32* %r3.global-to-local, align 4
  %v0_10000ff0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000ff0 = load i32, i32* @r30, align 4
  %v4_10000ff0 = icmp eq i32 %v0_10000ff0, %v1_10000ff0
  %v0_10000ff4 = load i32, i32* @r28, align 4
  %v1_10000ff4 = add i32 %v0_10000ff4, 24
  store i32 %v1_10000ff4, i32* @r28, align 4
  br i1 %v4_10000ff0, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f68

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fdc, %dec_label_pc_10001054, %dec_label_pc_10000f3c
  %v0_10000ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10000ffc = icmp eq i32 %v0_10000ffc, 0
  store i1 %v3_10000ffc, i1* %cr3_eq.global-to-local, align 1
  %v0_10001000.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001000.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001000.outer

dec_label_pc_10001000.outer:                      ; preds = %dec_label_pc_10001034, %dec_label_pc_1000116c, %dec_label_pc_10000ffc
  %v1_10001000.ph39 = phi i1 [ %v1_10001000.pre, %dec_label_pc_10000ffc ], [ %v1_1000116c, %dec_label_pc_1000116c ], [ %v1_10001034, %dec_label_pc_10001034 ]
  %v0_10001000.ph40 = phi i1 [ %v0_10001000.pre, %dec_label_pc_10000ffc ], [ %v0_1000116c, %dec_label_pc_1000116c ], [ %v0_10001034, %dec_label_pc_10001034 ]
  %v2_10001000 = or i1 %v1_10001000.ph39, %v0_10001000.ph40
  br label %dec_label_pc_10001000

dec_label_pc_10001000:                            ; preds = %dec_label_pc_10001000.outer, %dec_label_pc_10001000
  br i1 %v2_10001000, label %dec_label_pc_10001000, label %dec_label_pc_10001004

dec_label_pc_10001004:                            ; preds = %dec_label_pc_1000116c, %dec_label_pc_10001034, %dec_label_pc_10001000
  %v0_10001004 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001004, label %dec_label_pc_10001008, label %dec_label_pc_10001130

dec_label_pc_10001008:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001010:                            ; preds = %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge, %dec_label_pc_10001008
  %v0_10001014 = phi i32 [ %v0_1000102c, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v0_10001024 = phi i32 [ %v0_10001010.pre, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v1_10001010 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001010 = add i32 %v1_10001010, %v0_10001024
  %v3_10001010 = inttoptr i32 %v2_10001010 to i32*
  %v4_10001010 = load i32, i32* %v3_10001010, align 4
  store i32 %v4_10001010, i32* %r3.global-to-local, align 4
  %v1_10001014 = add i32 %v0_10001014, 1
  store i32 %v1_10001014, i32* %r28.global-to-local, align 4
  %v1_10001018 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001018 = add i32 %v1_10001018, %v0_10001024
  %v3_10001018 = inttoptr i32 %v2_10001018 to i32*
  %v4_10001018 = load i32, i32* %v3_10001018, align 4
  %v0_1000101c = load i32, i32* @r31, align 4
  %v1_10001024 = add i32 %v0_10001024, 4
  store i32 %v1_10001024, i32* %r29.global-to-local, align 4
  store i32 268439596, i32* @lr, align 4
  %v4_10001028 = call i32 @function_1000a180(i32 %v4_10001010, i32 %v4_10001018, i32 %v0_1000101c, i32 16384)
  store i32 %v4_10001028, i32* %r3.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000102c = load i32, i32* @r30, align 4
  %v4_1000102c = icmp eq i32 %v0_1000102c, %v1_1000102c
  br i1 %v4_1000102c, label %dec_label_pc_10001034, label %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge

dec_label_pc_10001010.dec_label_pc_10001010_crit_edge: ; preds = %dec_label_pc_10001010
  %v0_10001010.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001034:                            ; preds = %dec_label_pc_10001010
  %v0_10001034 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001034 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001034 = or i1 %v0_10001034, %v1_10001034
  br i1 %v2_10001034, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

dec_label_pc_10001054:                            ; preds = %dec_label_pc_100010b8, %dec_label_pc_100010d4
  %v0_10001058 = phi i32 [ %v0_100010c8, %dec_label_pc_100010b8 ], [ %v0_10001058.pre, %dec_label_pc_100010d4 ]
  %v0_10001054 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001054 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001054 = add i32 %v1_10001054, %v0_10001054
  %v3_10001054 = inttoptr i32 %v2_10001054 to i32*
  %v4_10001054 = load i32, i32* %v3_10001054, align 4
  store i32 %v4_10001054, i32* %r3.global-to-local, align 4
  %v1_10001060 = add i32 %v0_10001054, 4
  store i32 %v1_10001060, i32* %r25.global-to-local, align 4
  store i32 268439656, i32* @lr, align 4
  %v3_10001064 = call i32 @function_1000a034(i32 %v4_10001054, i32 %v0_10001058, i32 16)
  store i32 %v3_10001064, i32* %r3.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001068 = load i32, i32* @r30, align 4
  %v4_10001068 = icmp eq i32 %v0_10001068, %v1_10001068
  %v0_1000106c = load i32, i32* @r28, align 4
  %v1_1000106c = add i32 %v0_1000106c, 24
  store i32 %v1_1000106c, i32* @r28, align 4
  br i1 %v4_10001068, label %dec_label_pc_10000ffc, label %dec_label_pc_10001074

dec_label_pc_10001074:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10001054
  %v0_10001080 = phi i32 [ %v0_10001068, %dec_label_pc_10001054 ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001080 = add i32 %v0_10001080, 1
  store i32 %v1_10001080, i32* %r24.global-to-local, align 4
  store i32 268439688, i32* @lr, align 4
  %v2_10001084 = call i32 @function_1000a590(i32 65535, i32 1)
  store i32 %v2_10001084, i32* %r3.global-to-local, align 4
  %v1_10001088 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001088 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001088 = add i32 %v2_10001088, %v1_10001088
  %v4_10001088 = inttoptr i32 %v3_10001088 to i32*
  store i32 %v2_10001084, i32* %v4_10001088, align 4
  %v0_1000108c = call i32 @function_10005b08()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  %v3_10001090 = load i32, i32* @r28, align 4
  %v4_10001090 = add i32 %v3_10001090, 2
  %v5_10001090 = inttoptr i32 %v4_10001090 to i16*
  store i16 %v1_1000108c, i16* %v5_10001090, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439716, i32* @lr, align 4
  %v3_100010a0 = call i32 @function_1000a234(i32 2, i32 2, i32 0)
  store i32 %v3_100010a0, i32* %r3.global-to-local, align 4
  %v3_100010a8 = icmp eq i32 %v3_100010a0, -1
  %v1_100010b0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100010b0 = load i32, i32* %r26.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010b0, %v1_100010b0
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i32*
  store i32 %v3_100010a0, i32* %v4_100010b0, align 4
  br i1 %v3_100010a8, label %dec_label_pc_100010d8, label %dec_label_pc_100010b8

dec_label_pc_100010b8:                            ; preds = %dec_label_pc_10001074
  %v0_100010b8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100010b8, i32* %stack_var_-72, align 4
  store i32 268439752, i32* @lr, align 4
  %v0_100010c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100010c4 = call i32 @function_1000a000(i32 %v0_100010c4, i32 %v2_100010a4, i32 16)
  store i32 %v3_100010c4, i32* %r3.global-to-local, align 4
  %v0_100010c8 = load i32, i32* @r28, align 4
  %v1_100010c8 = add i32 %v0_100010c8, 20
  %v2_100010c8 = inttoptr i32 %v1_100010c8 to i8*
  %v3_100010c8 = load i8, i8* %v2_100010c8, align 1
  %v2_100010cc = icmp ugt i8 %v3_100010c8, 31
  br i1 %v2_100010cc, label %dec_label_pc_10001054, label %dec_label_pc_100010d4

dec_label_pc_100010d4:                            ; preds = %dec_label_pc_100010b8
  %v1_1000103c = add i32 %v0_100010c8, 16
  %v2_1000103c = inttoptr i32 %v1_1000103c to i32*
  %v3_1000103c = load i32, i32* %v2_1000103c, align 4
  store i32 %v3_1000103c, i32* %r29.global-to-local, align 4
  %v0_10001040 = call i32 @function_10005b08()
  store i32 %v0_10001040, i32* %r3.global-to-local, align 4
  %v0_10001044 = load i32, i32* @r28, align 4
  %v1_10001044 = add i32 %v0_10001044, 20
  %v2_10001044 = inttoptr i32 %v1_10001044 to i8*
  %v3_10001044 = load i8, i8* %v2_10001044, align 1
  %tmp43 = urem i8 %v3_10001044, 64
  %v2_10001048 = zext i8 %tmp43 to i32
  %v3_10001048 = lshr i32 %v0_10001040, %v2_10001048
  %v0_1000104c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000104c = add i32 %v3_10001048, %v0_1000104c
  store i32 %v2_1000104c, i32* %r3.global-to-local, align 4
  %v2_10001050 = add i32 %v0_10001044, 4
  %v3_10001050 = inttoptr i32 %v2_10001050 to i32*
  store i32 %v2_1000104c, i32* %v3_10001050, align 4
  %v0_10001058.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10001054

dec_label_pc_100010d8:                            ; preds = %dec_label_pc_10000f68, %dec_label_pc_10001074
  %v1_100010ec = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000e44)
  store i32 %v0_10000e70, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r29.global-to-local, align 4
  %v0_10001120 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001120

dec_label_pc_10001124:                            ; preds = %dec_label_pc_10000e3c
  %v0_10001124 = call i32 @function_10005b08()
  store i32 %v0_10001124, i32* %r3.global-to-local, align 4
  %v1_10001128 = urem i32 %v0_10001124, 65536
  store i32 %v1_10001128, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000f3c

dec_label_pc_10001130:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_10001138:                            ; preds = %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge, %dec_label_pc_10001130
  %v0_10001140 = phi i32 [ %v0_10001164, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v0_10001138 = phi i32 [ %v0_10001138.pre, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v1_10001138 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001138 = add i32 %v1_10001138, %v0_10001138
  %v3_10001138 = inttoptr i32 %v2_10001138 to i32*
  %v4_10001138 = load i32, i32* %v3_10001138, align 4
  store i32 %v4_10001138, i32* @r29, align 4
  %v0_1000113c = load i32, i32* @r31, align 4
  store i32 %v0_1000113c, i32* @r4, align 4
  %v1_10001140 = add i32 %v0_10001140, 1
  store i32 %v1_10001140, i32* %r25.global-to-local, align 4
  store i32 %v4_10001138, i32* @r3, align 4
  %v0_10001148 = call i32 @function_10005cdc()
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  %v0_1000114c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000114c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000114c = add i32 %v1_1000114c, %v0_1000114c
  %v3_1000114c = inttoptr i32 %v2_1000114c to i32*
  %v4_1000114c = load i32, i32* %v3_1000114c, align 4
  store i32 %v4_1000114c, i32* %r3.global-to-local, align 4
  %v0_10001150 = load i32, i32* @r29, align 4
  %v0_10001154 = load i32, i32* @r31, align 4
  %v1_1000115c = add i32 %v0_1000114c, 4
  store i32 %v1_1000115c, i32* %r28.global-to-local, align 4
  store i32 268439908, i32* @lr, align 4
  %v4_10001160 = call i32 @function_1000a180(i32 %v4_1000114c, i32 %v0_10001150, i32 %v0_10001154, i32 16384)
  store i32 %v4_10001160, i32* %r3.global-to-local, align 4
  %v0_10001164 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001164 = load i32, i32* @r30, align 4
  %v4_10001164 = icmp eq i32 %v0_10001164, %v1_10001164
  br i1 %v4_10001164, label %dec_label_pc_1000116c, label %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge

dec_label_pc_10001138.dec_label_pc_10001138_crit_edge: ; preds = %dec_label_pc_10001138
  %v0_10001138.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_1000116c:                            ; preds = %dec_label_pc_10001138
  %v0_1000116c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000116c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000116c = or i1 %v0_1000116c, %v1_1000116c
  br i1 %v2_1000116c, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

; uselistorder directives
  uselistorder i1 %v1_1000116c, { 1, 0 }
  uselistorder i1 %v0_1000116c, { 1, 0 }
  uselistorder i32 %v0_10001164, { 1, 0 }
  uselistorder i32 %v0_1000114c, { 1, 0 }
  uselistorder i32 %v0_100010c8, { 1, 2, 0 }
  uselistorder i32 %v0_10001054, { 1, 0 }
  uselistorder i1 %v1_10001034, { 1, 0 }
  uselistorder i1 %v0_10001034, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 1, 0 }
  uselistorder i32 %v0_10001024, { 2, 0, 1 }
  uselistorder i32 %v0_10000ff0, { 1, 0 }
  uselistorder i32 %v0_10000fdc, { 1, 0 }
  uselistorder i32 %v2_100010a4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 23, 6, 7, 10, 11, 12, 13, 14, 15, 8, 9, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100010d8, { 1, 0 }
  uselistorder label %dec_label_pc_10001074, { 1, 0 }
  uselistorder label %dec_label_pc_10001054, { 1, 0 }
  uselistorder label %dec_label_pc_10001000, { 1, 0 }
  uselistorder label %dec_label_pc_10001000.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ffc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000f68, { 1, 0 }
  uselistorder label %dec_label_pc_10000f3c, { 1, 0 }
}

define i32 @function_10001174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001174:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001178 = load i32, i32* @lr, align 4
  store i32 %v0_10001178, i32* %r0.global-to-local, align 4
  %v0_1000117c = call i32 @__asm_mfcr()
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_1000118c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000117c, i32* %r19.global-to-local, align 4
  %v0_100011c0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100011c8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100011d0 = load i32, i32* @r30, align 4
  %v0_100011d4 = load i32, i32* @r31, align 4
  store i32 268440040, i32* @lr, align 4
  %v2_100011e4 = call i32 @function_1000a590(i32 4, i32 4)
  store i32 %v2_100011e4, i32* %r20.global-to-local, align 4
  %v0_100011ec = load i32, i32* @r28, align 4
  %v0_100011f8 = load i32, i32* @r29, align 4
  store i32 %v0_100011f8, i32* %r3.global-to-local, align 4
  store i32 268440064, i32* @lr, align 4
  %v4_100011fc = inttoptr i32 %v0_100011ec to i32*
  %v5_100011fc = call i32 @function_100006a8(i32 %v0_100011f8, i32* %v4_100011fc, i32 2, i32 0)
  %v0_1000120c = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_100011fc, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_1000120c to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 3, i32 65535)
  %v0_1000121c = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r23.global-to-local, align 4
  %v0_1000122c = load i32, i32* @r29, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = inttoptr i32 %v0_1000121c to i32*
  %v5_10001230 = call i32 @function_100006a8(i32 %v0_1000122c, i32* %v4_10001230, i32 4, i32 64)
  %v0_10001234 = load i32, i32* @r28, align 4
  %v1_10001240 = urem i32 %v5_10001230, 256
  store i32 %v1_10001240, i32* %r16.global-to-local, align 4
  %v0_10001244 = load i32, i32* @r29, align 4
  store i32 %v0_10001244, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v4_10001248 = inttoptr i32 %v0_10001234 to i32*
  %v5_10001248 = call i32 @function_100006a8(i32 %v0_10001244, i32* %v4_10001248, i32 5, i32 0)
  %v0_10001258 = load i32, i32* @r28, align 4
  %v1_1000125c = urem i32 %v5_10001248, 256
  store i32 %v1_1000125c, i32* @r31, align 4
  %v0_10001260 = load i32, i32* @r29, align 4
  store i32 %v0_10001260, i32* %r3.global-to-local, align 4
  store i32 268440168, i32* @lr, align 4
  %v4_10001264 = inttoptr i32 %v0_10001258 to i32*
  %v5_10001264 = call i32 @function_100006a8(i32 %v0_10001260, i32* %v4_10001264, i32 6, i32 65535)
  %v0_1000126c = load i32, i32* @r28, align 4
  store i32 %v5_10001264, i32* %r24.global-to-local, align 4
  %v0_1000127c = load i32, i32* @r29, align 4
  store i32 %v0_1000127c, i32* %r3.global-to-local, align 4
  store i32 268440196, i32* @lr, align 4
  %v4_10001280 = inttoptr i32 %v0_1000126c to i32*
  %v5_10001280 = call i32 @function_100006a8(i32 %v0_1000127c, i32* %v4_10001280, i32 7, i32 65535)
  %v0_10001284 = load i32, i32* @r28, align 4
  store i32 %v5_10001280, i32* %r25.global-to-local, align 4
  %v0_10001294 = load i32, i32* @r29, align 4
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  store i32 268440220, i32* @lr, align 4
  %v4_10001298 = inttoptr i32 %v0_10001284 to i32*
  %v5_10001298 = call i32 @function_100006a8(i32 %v0_10001294, i32* %v4_10001298, i32 0, i32 512)
  %v0_1000129c = load i32, i32* @r28, align 4
  store i32 %v5_10001298, i32* %r26.global-to-local, align 4
  %v0_100012ac = load i32, i32* @r29, align 4
  store i32 %v0_100012ac, i32* %r3.global-to-local, align 4
  store i32 268440244, i32* @lr, align 4
  %v4_100012b0 = inttoptr i32 %v0_1000129c to i32*
  %v5_100012b0 = call i32 @function_100006a8(i32 %v0_100012ac, i32* %v4_100012b0, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100012b8 = load i32, i32* @global_var_1001c660.16, align 4
  %v0_100012bc = load i32, i32* @r28, align 4
  %v1_100012c4 = urem i32 %v5_100012b0, 256
  store i32 %v1_100012c4, i32* %r17.global-to-local, align 4
  %v0_100012c8 = load i32, i32* @r29, align 4
  store i32 %v0_100012c8, i32* %r3.global-to-local, align 4
  store i32 268440272, i32* @lr, align 4
  %v4_100012cc = inttoptr i32 %v0_100012bc to i32*
  %v5_100012cc = call i32 @function_100006a8(i32 %v0_100012c8, i32* %v4_100012cc, i32 25, i32 %v3_100012b8)
  store i32 %v5_100012cc, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440292, i32* @lr, align 4
  %v3_100012e0 = call i32 @function_1000a234(i32 2, i32 3, i32 17)
  store i32 %v3_100012e0, i32* %r3.global-to-local, align 4
  %v3_100012e4 = icmp eq i32 %v3_100012e0, -1
  store i32 %v3_100012e0, i32* %r21.global-to-local, align 4
  br i1 %v3_100012e4, label %dec_label_pc_10001540, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_10001174
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100012fc = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440332, i32* @lr, align 4
  %v4_10001308 = call i32 @function_1000a1f8(i32 0, i32 3, i32 %v2_100012fc, i32 4)
  store i32 %v4_10001308, i32* %r3.global-to-local, align 4
  %v3_1000130c = icmp eq i32 %v4_10001308, -1
  br i1 %v3_1000130c, label %dec_label_pc_10001538, label %dec_label_pc_10001314

dec_label_pc_10001314:                            ; preds = %dec_label_pc_100012f0
  %v0_10001314 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001314 = urem i32 %v0_10001314, 65536
  store i32 %v1_10001314, i32* %r18.global-to-local, align 4
  %v0_10001318 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001318 = urem i32 %v0_10001318, 65536
  store i32 %v1_10001318, i32* %r22.global-to-local, align 4
  %v0_10001320 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001320 = urem i32 %v0_10001320, 65536
  store i32 %v1_10001320, i32* %r23.global-to-local, align 4
  %v0_10001324 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001324 = urem i32 %v0_10001324, 65536
  store i32 %v1_10001324, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10001314, 1461
  br i1 %tmp30, label %dec_label_pc_10001330, label %dec_label_pc_1000132c

dec_label_pc_1000132c:                            ; preds = %dec_label_pc_10001314
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10001330

dec_label_pc_10001330:                            ; preds = %dec_label_pc_10001314, %dec_label_pc_1000132c
  %v0_10001640 = phi i32 [ %v1_10001314, %dec_label_pc_10001314 ], [ 1460, %dec_label_pc_1000132c ]
  %v0_10001330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001330 = icmp slt i32 %v0_10001330, 0
  %v3_10001330 = icmp eq i32 %v0_10001330, 0
  store i1 %v1_10001330, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001330, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_10001330, 1
  br i1 %tmp31, label %dec_label_pc_10001638, label %dec_label_pc_10001340

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  %v0_10001340 = load i32, i32* @r31, align 4
  %v3_10001340 = icmp eq i32 %v0_10001340, 0
  %v1_10001344 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001344, i32* %r25.global-to-local, align 4
  %v1_10001348 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001348, i32* %r26.global-to-local, align 4
  %v1_1000134c = urem i32 %v1_10001344, 65536
  store i32 %v1_1000134c, i32* @r28, align 4
  %v1_10001350 = urem i32 %v1_10001348, 65536
  store i32 %v1_10001350, i32* @r29, align 4
  br i1 %v3_10001340, label %dec_label_pc_10001358, label %dec_label_pc_100015a0

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_1000135c

dec_label_pc_1000135c:                            ; preds = %dec_label_pc_1000135c, %dec_label_pc_10001358
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440424, i32* @lr, align 4
  %v2_10001364 = call i32 @function_1000a590(i32 1510, i32 1)
  store i32 %v2_10001364, i32* %r3.global-to-local, align 4
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001368, i32* %r9.global-to-local, align 4
  %v0_1000136c = load i32, i32* @r31, align 4
  %v1_1000136c = mul i32 %v0_1000136c, 4
  store i32 %v1_1000136c, i32* %r0.global-to-local, align 4
  %v1_10001370 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001370 = add i32 %v1_10001370, %v1_1000136c
  %v4_10001370 = inttoptr i32 %v3_10001370 to i32*
  store i32 %v2_10001364, i32* %v4_10001370, align 4
  %v0_10001374 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001374 = mul i32 %v0_10001374, 4
  store i32 %v1_10001374, i32* %r9.global-to-local, align 4
  %v1_10001378 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001378 = add i32 %v1_10001378, %v1_10001374
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  %v4_10001378 = load i32, i32* %v3_10001378, align 4
  store i32 %v4_10001378, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001380 = inttoptr i32 %v4_10001378 to i32*
  %v2_10001380 = load i32, i32* %v1_10001380, align 4
  store i32 %v2_10001380, i32* %r0.global-to-local, align 4
  %v1_10001384 = add i32 %v4_10001378, 20
  store i32 %v1_10001384, i32* %r10.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001388 = trunc i32 %v0_10001388 to i8
  %v3_10001388 = add i32 %v4_10001378, 8
  %v4_10001388 = inttoptr i32 %v3_10001388 to i8*
  store i8 %v1_10001388, i8* %v4_10001388, align 1
  %v1_1000138c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000138c, i32* %r0.global-to-local, align 4
  %v0_10001390 = load i32, i32* @r30, align 4
  %v1_10001390 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, 12
  %v3_10001390 = inttoptr i32 %v2_10001390 to i32*
  store i32 %v0_10001390, i32* %v3_10001390, align 4
  %v1_10001394 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001398 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001398 = trunc i32 %v0_10001398 to i16
  %v2_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001398 = add i32 %v2_10001398, 4
  %v4_10001398 = inttoptr i32 %v3_10001398 to i16*
  store i16 %v1_10001398, i16* %v4_10001398, align 2
  %v1_1000139c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  store i32 %v1_10001394, i32* %v2_1000139c, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013a4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 9
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i8*
  store i8 17, i8* %v4_100013a4, align 1
  %v0_100013a8 = load i32, i32* %r15.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 1
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i32, i32* @r28, align 4
  %v1_100013ac = trunc i32 %v0_100013ac to i16
  %v2_100013ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100013ac = add i32 %v2_100013ac, 2
  %v4_100013ac = inttoptr i32 %v3_100013ac to i16*
  store i16 %v1_100013ac, i16* %v4_100013ac, align 2
  %v3_100013b0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100013b0, i32* %r9.global-to-local, align 4
  %v0_100013b4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100013b4 = trunc i32 %v0_100013b4 to i16
  %v2_100013b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 20
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 %v1_100013b4, i16* %v4_100013b4, align 2
  %v0_100013b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013b8 = add i32 %v0_100013b8, 1
  store i32 %v1_100013b8, i32* %r31.global-to-local, align 4
  %v1_100013bc = mul i32 %v0_100013b8, 24
  store i32 %v1_100013bc, i32* %r9.global-to-local, align 4
  %v1_100013c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100013c0 = icmp slt i32 %v1_100013b8, %v1_100013c0
  %v0_100013c4 = load i32, i32* @r29, align 4
  %v1_100013c4 = trunc i32 %v0_100013c4 to i16
  %v2_100013c4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100013c4 = add i32 %v2_100013c4, 4
  %v4_100013c4 = inttoptr i32 %v3_100013c4 to i16*
  store i16 %v1_100013c4, i16* %v4_100013c4, align 2
  %v0_100013c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, %v0_100013c8
  store i32 %v2_100013c8, i32* %r9.global-to-local, align 4
  %v0_100013cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100013cc = trunc i32 %v0_100013cc to i16
  %v2_100013cc = load i32, i32* %r10.global-to-local, align 4
  %v3_100013cc = add i32 %v2_100013cc, 2
  %v4_100013cc = inttoptr i32 %v3_100013cc to i16*
  store i16 %v1_100013cc, i16* %v4_100013cc, align 2
  %v0_100013d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013d0 = add i32 %v0_100013d0, 16
  %v2_100013d0 = inttoptr i32 %v1_100013d0 to i32*
  %v3_100013d0 = load i32, i32* %v2_100013d0, align 4
  store i32 %v3_100013d0, i32* %r0.global-to-local, align 4
  %v1_100013d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v3_100013d0, i32* %v3_100013d4, align 4
  %v0_100013d8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100013d8, i32* %stack_var_-104, align 4
  br i1 %v2_100013c0, label %dec_label_pc_1000135c, label %dec_label_pc_100013e0

dec_label_pc_100013e0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_1000135c
  %v0_100013e0 = load i32, i32* @r30, align 4
  %v3_100013e0 = icmp eq i32 %v0_100013e0, -1
  store i1 %v3_100013e0, i1* %cr2_eq.global-to-local, align 1
  %v0_100013e4 = load i32, i32* %r17.global-to-local, align 4
  %v3_100013e4 = icmp eq i32 %v0_100013e4, 0
  store i1 %v3_100013e4, i1* %cr3_eq.global-to-local, align 1
  %v0_100013e8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100013e8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100013e8.preheader

dec_label_pc_100013e8.preheader:                  ; preds = %dec_label_pc_100014b4, %dec_label_pc_10001638, %dec_label_pc_100013e0
  %v1_100013e8 = phi i1 [ %v1_10001330, %dec_label_pc_10001638 ], [ %v1_100013e8.pre, %dec_label_pc_100013e0 ], [ %v1_100014b4, %dec_label_pc_100014b4 ]
  %v0_100013e8 = phi i1 [ %v3_10001330, %dec_label_pc_10001638 ], [ %v0_100013e8.pre, %dec_label_pc_100013e0 ], [ %v0_100014b4, %dec_label_pc_100014b4 ]
  %v2_100013e8 = or i1 %v1_100013e8, %v0_100013e8
  br label %dec_label_pc_100013e8

dec_label_pc_100013e8:                            ; preds = %dec_label_pc_100013e8.preheader, %dec_label_pc_100013e8
  br i1 %v2_100013e8, label %dec_label_pc_100013e8, label %dec_label_pc_100013ec

dec_label_pc_100013ec:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_100014b4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_10001444, %dec_label_pc_100013ec
  %v0_100013fc = phi i32 [ %v1_100014a4, %dec_label_pc_10001444 ], [ 0, %dec_label_pc_100013ec ]
  %v1_100013fc = mul i32 %v0_100013fc, 24
  store i32 %v1_100013fc, i32* %r0.global-to-local, align 4
  %v1_10001400 = mul i32 %v0_100013fc, 4
  store i32 %v1_10001400, i32* %r11.global-to-local, align 4
  %v1_10001404 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001404 = add i32 %v1_10001404, %v1_10001400
  %v3_10001404 = inttoptr i32 %v2_10001404 to i32*
  %v4_10001404 = load i32, i32* %v3_10001404, align 4
  store i32 %v4_10001404, i32* %r28.global-to-local, align 4
  %v1_10001408 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001408 = add i32 %v1_10001408, %v1_100013fc
  store i32 %v2_10001408, i32* %r10.global-to-local, align 4
  %v1_1000140c = add i32 %v2_10001408, 20
  %v2_1000140c = inttoptr i32 %v1_1000140c to i8*
  %v3_1000140c = load i8, i8* %v2_1000140c, align 1
  %v4_1000140c = zext i8 %v3_1000140c to i32
  store i32 %v4_1000140c, i32* %r9.global-to-local, align 4
  %v1_10001410 = add i32 %v4_10001404, 20
  store i32 %v1_10001410, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_1000140c, 32
  br i1 %tmp32, label %dec_label_pc_100014bc, label %dec_label_pc_1000141c

dec_label_pc_1000141c:                            ; preds = %dec_label_pc_100013fc
  %v0_1000141c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000141c, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_10001420:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 65535, i32* @r29, align 4
  %v0_10001428 = load i32, i32* %r22.global-to-local, align 4
  %v4_10001428 = icmp eq i32 %v0_10001428, 65535
  br i1 %v4_10001428, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_10001430:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v1_10001430 = phi i32 [ %v1_100014f4, %dec_label_pc_100014e4 ], [ 65535, %dec_label_pc_10001420 ]
  %v0_10001430 = load i32, i32* %r23.global-to-local, align 4
  %v4_10001430 = icmp eq i32 %v0_10001430, %v1_10001430
  br i1 %v4_10001430, label %dec_label_pc_1000150c, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge, %dec_label_pc_10001430
  %v1_10001438 = phi i32 [ %v1_10001438.pre, %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge ], [ %v1_10001430, %dec_label_pc_10001430 ]
  %v0_10001438 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001438 = icmp eq i32 %v0_10001438, %v1_10001438
  br i1 %v4_10001438, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_10001440 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001440, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001444:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c, %dec_label_pc_10001528
  %v0_10001444 = load i32, i32* @r30, align 4
  %v1_10001444 = trunc i32 %v0_10001444 to i16
  %v2_10001444 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001444 = add i32 %v2_10001444, 10
  %v4_10001444 = inttoptr i32 %v3_10001444 to i16*
  store i16 %v1_10001444, i16* %v4_10001444, align 2
  %v0_1000144c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000144c, i32* @r3, align 4
  %v2_10001450 = call i32 @function_100043cc(i32 %v0_1000144c, i32 20)
  %v3_10001450 = trunc i32 %v2_10001450 to i16
  %v0_10001454 = load i32, i32* @r31, align 4
  store i32 %v0_10001454, i32* @r4, align 4
  %v4_10001458 = add i32 %v0_1000144c, 10
  %v5_10001458 = inttoptr i32 %v4_10001458 to i16*
  store i16 %v3_10001450, i16* %v5_10001458, align 2
  %v0_1000145c = load i32, i32* %r26.global-to-local, align 4
  %v0_10001460 = load i32, i32* @r30, align 4
  %v1_10001460 = trunc i32 %v0_10001460 to i16
  %v2_10001460 = load i32, i32* @r31, align 4
  %v3_10001460 = add i32 %v2_10001460, 6
  %v4_10001460 = inttoptr i32 %v3_10001460 to i16*
  store i16 %v1_10001460, i16* %v4_10001460, align 2
  %v0_10001464 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001464, i32* %r3.global-to-local, align 4
  %v0_10001468 = load i32, i32* @r31, align 4
  %v1_10001468 = add i32 %v0_10001468, 4
  %v2_10001468 = inttoptr i32 %v1_10001468 to i16*
  %v3_10001468 = load i16, i16* %v2_10001468, align 2
  %v4_10001468 = zext i16 %v3_10001468 to i32
  %v4_1000146c = call i32 @function_10004430(i32 %v0_10001464, i32 %v0_10001454, i32 %v4_10001468, i32 %v0_1000145c)
  %v5_1000146c = trunc i32 %v4_1000146c to i16
  store i32 %v4_1000146c, i32* %r3.global-to-local, align 4
  %v3_10001470 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001470, i32* %r7.global-to-local, align 4
  %v0_10001474 = load i32, i32* @r31, align 4
  %v1_10001474 = add i32 %v0_10001474, 2
  %v2_10001474 = inttoptr i32 %v1_10001474 to i16*
  %v3_10001474 = load i16, i16* %v2_10001474, align 2
  %v4_10001474 = zext i16 %v3_10001474 to i32
  store i32 %v4_10001474, i32* %r0.global-to-local, align 4
  %v0_10001478 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000147c = mul i32 %v3_10001470, 24
  store i32 %v1_1000147c, i32* %r7.global-to-local, align 4
  %v4_10001480 = add i32 %v0_10001474, 6
  %v5_10001480 = inttoptr i32 %v4_10001480 to i16*
  store i16 %v5_1000146c, i16* %v5_10001480, align 2
  %v0_10001484 = load i32, i32* %r25.global-to-local, align 4
  %v0_10001488 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001488, i32* %r3.global-to-local, align 4
  %v0_1000148c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000148c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000148c = add i32 %v1_1000148c, %v0_1000148c
  store i32 %v2_1000148c, i32* %r7.global-to-local, align 4
  %v0_10001494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001494 = trunc i32 %v0_10001494 to i16
  %v3_10001494 = add i32 %v2_1000148c, 2
  %v4_10001494 = inttoptr i32 %v3_10001494 to i16*
  store i16 %v1_10001494, i16* %v4_10001494, align 2
  store i32 268440736, i32* @lr, align 4
  %v6_1000149c = call i32 @function_1000a1b8(i32 %v0_10001488, i32 %v0_10001478, i32 %v0_10001484, i32 16384, i32 %v2_1000148c, i32 16)
  store i32 %v6_1000149c, i32* %r3.global-to-local, align 4
  %v3_100014a0 = load i32, i32* %stack_var_-104, align 4
  %v1_100014a4 = add i32 %v3_100014a0, 1
  store i32 %v1_100014a4, i32* %r9.global-to-local, align 4
  %v1_100014a8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100014a8 = icmp slt i32 %v1_100014a4, %v1_100014a8
  store i32 %v1_100014a4, i32* %stack_var_-104, align 4
  br i1 %v2_100014a8, label %dec_label_pc_100013fc, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001444
  %v0_100014b4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100014b4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100014b4 = or i1 %v0_100014b4, %v1_100014b4
  br i1 %v2_100014b4, label %dec_label_pc_100013e8.preheader, label %dec_label_pc_100013ec

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100013fc
  %v1_100014bc = add i32 %v2_10001408, 16
  %v2_100014bc = inttoptr i32 %v1_100014bc to i32*
  %v3_100014bc = load i32, i32* %v2_100014bc, align 4
  store i32 %v3_100014bc, i32* %r29.global-to-local, align 4
  %v0_100014c0 = call i32 @function_10005b08()
  store i32 %v0_100014c0, i32* %r3.global-to-local, align 4
  %v3_100014c4 = load i32, i32* %stack_var_-104, align 4
  %v1_100014c8 = mul i32 %v3_100014c4, 24
  %v1_100014cc = load i32, i32* %r27.global-to-local, align 4
  %v2_100014cc = add i32 %v1_100014cc, %v1_100014c8
  store i32 %v2_100014cc, i32* %r9.global-to-local, align 4
  %v1_100014d0 = add i32 %v2_100014cc, 20
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i8*
  %v3_100014d0 = load i8, i8* %v2_100014d0, align 1
  %v4_100014d0 = zext i8 %v3_100014d0 to i32
  store i32 %v4_100014d0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100014d0, 64
  %v2_100014d4 = zext i8 %tmp to i32
  %v3_100014d4 = lshr i32 %v0_100014c0, %v2_100014d4
  store i32 %v3_100014d4, i32* %r3.global-to-local, align 4
  %v0_100014d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014d8 = add i32 %v3_100014d4, %v0_100014d8
  store i32 %v2_100014d8, i32* %r29.global-to-local, align 4
  %v1_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v2_100014dc = add i32 %v1_100014dc, 16
  %v3_100014dc = inttoptr i32 %v2_100014dc to i32*
  store i32 %v2_100014d8, i32* %v3_100014dc, align 4
  %v0_100014e0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014e0, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100014e8 = call i32 @function_10005b08()
  store i32 %v0_100014e8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100014f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100014f0 = add i32 %v1_100014f0, 12
  %v3_100014f0 = inttoptr i32 %v2_100014f0 to i32*
  store i32 %v0_100014e8, i32* %v3_100014f0, align 4
  %v0_100014f4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100014f4 = load i32, i32* @r29, align 4
  %v4_100014f4 = icmp eq i32 %v0_100014f4, %v1_100014f4
  br i1 %v4_100014f4, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_100014fc:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v0_100014fc = call i32 @function_10005b08()
  %v1_100014fc = trunc i32 %v0_100014fc to i16
  store i32 %v0_100014fc, i32* %r3.global-to-local, align 4
  %v0_10001500 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r29, align 4
  %v4_10001500 = icmp eq i32 %v0_10001500, %v1_10001500
  %v3_10001504 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001504 = add i32 %v3_10001504, 4
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v1_100014fc, i16* %v5_10001504, align 2
  br i1 %v4_10001500, label %dec_label_pc_1000150c, label %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge

dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge: ; preds = %dec_label_pc_100014fc
  %v1_10001438.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001438

dec_label_pc_1000150c:                            ; preds = %dec_label_pc_100014fc, %dec_label_pc_10001430
  %v0_1000150c = call i32 @function_10005b08()
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  store i32 %v0_1000150c, i32* %r3.global-to-local, align 4
  %v0_10001510 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001510 = load i32, i32* @r29, align 4
  %v4_10001510 = icmp eq i32 %v0_10001510, %v1_10001510
  %v3_10001514 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001514 = add i32 %v3_10001514, 20
  %v5_10001514 = inttoptr i32 %v4_10001514 to i16*
  store i16 %v1_1000150c, i16* %v5_10001514, align 2
  br i1 %v4_10001510, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_1000151c:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_1000151c = call i32 @function_10005b08()
  %v1_1000151c = trunc i32 %v0_1000151c to i16
  store i32 %v0_1000151c, i32* %r3.global-to-local, align 4
  %v3_10001520 = load i32, i32* @r31, align 4
  %v4_10001520 = add i32 %v3_10001520, 2
  %v5_10001520 = inttoptr i32 %v4_10001520 to i16*
  store i16 %v1_1000151c, i16* %v5_10001520, align 2
  %v0_10001524 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001524, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001528:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c
  %v0_10001528 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001528 = add i32 %v0_10001528, 28
  store i32 %v1_10001528, i32* @r3, align 4
  %v0_1000152c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_1000152c, i32* @r4, align 4
  %v0_10001530 = call i32 @function_10005cdc()
  store i32 %v0_10001530, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001444

dec_label_pc_10001538:                            ; preds = %dec_label_pc_100012f0
  %v0_10001538 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001538, i32* %r3.global-to-local, align 4
  store i32 268440896, i32* @lr, align 4
  %v0_1000153c = call i32 @function_10009518()
  store i32 %v0_1000153c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001540

dec_label_pc_10001540:                            ; preds = %dec_label_pc_10001174, %dec_label_pc_10001538
  store i32 %v0_1000118c, i32* %r0.global-to-local, align 4
  %v1_10001554 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000117c)
  store i32 %v0_100011c0, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c8, i32* %r29.global-to-local, align 4
  store i32 %v0_100011d0, i32* %r30.global-to-local, align 4
  store i32 %v0_100011d4, i32* %r31.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000159c

dec_label_pc_100015a0:                            ; preds = %dec_label_pc_10001340
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100015a8

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100015a0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* @lr, align 4
  %v2_100015b0 = call i32 @function_1000a590(i32 1510, i32 1)
  store i32 %v2_100015b0, i32* %r3.global-to-local, align 4
  %v3_100015b4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015b4, i32* %r9.global-to-local, align 4
  %v0_100015b8 = load i32, i32* @r31, align 4
  %v1_100015b8 = mul i32 %v0_100015b8, 4
  store i32 %v1_100015b8, i32* %r0.global-to-local, align 4
  %v1_100015bc = load i32, i32* %r20.global-to-local, align 4
  %v3_100015bc = add i32 %v1_100015bc, %v1_100015b8
  %v4_100015bc = inttoptr i32 %v3_100015bc to i32*
  store i32 %v2_100015b0, i32* %v4_100015bc, align 4
  %v0_100015c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100015c0 = mul i32 %v0_100015c0, 4
  store i32 %v1_100015c0, i32* %r9.global-to-local, align 4
  %v1_100015c4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015c4 = add i32 %v1_100015c4, %v1_100015c0
  %v3_100015c4 = inttoptr i32 %v2_100015c4 to i32*
  %v4_100015c4 = load i32, i32* %v3_100015c4, align 4
  store i32 %v4_100015c4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100015cc = inttoptr i32 %v4_100015c4 to i32*
  %v2_100015cc = load i32, i32* %v1_100015cc, align 4
  store i32 %v2_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = add i32 %v4_100015c4, 20
  store i32 %v1_100015d0, i32* %r10.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100015d4 = trunc i32 %v0_100015d4 to i8
  %v3_100015d4 = add i32 %v4_100015c4, 8
  %v4_100015d4 = inttoptr i32 %v3_100015d4 to i8*
  store i8 %v1_100015d4, i8* %v4_100015d4, align 1
  %v1_100015d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100015d8, i32* %r0.global-to-local, align 4
  %v0_100015dc = load i32, i32* @r30, align 4
  %v1_100015dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100015dc = add i32 %v1_100015dc, 12
  %v3_100015dc = inttoptr i32 %v2_100015dc to i32*
  store i32 %v0_100015dc, i32* %v3_100015dc, align 4
  %v1_100015e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100015e4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100015e4 = trunc i32 %v0_100015e4 to i16
  %v2_100015e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015e4 = add i32 %v2_100015e4, 4
  %v4_100015e4 = inttoptr i32 %v3_100015e4 to i16*
  store i16 %v1_100015e4, i16* %v4_100015e4, align 2
  %v1_100015e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100015e8 = inttoptr i32 %v1_100015e8 to i32*
  store i32 %v1_100015e0, i32* %v2_100015e8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100015f0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f0 = add i32 %v2_100015f0, 9
  %v4_100015f0 = inttoptr i32 %v3_100015f0 to i8*
  store i8 17, i8* %v4_100015f0, align 1
  %v0_100015f4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100015f4 = trunc i32 %v0_100015f4 to i8
  %v2_100015f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f4 = add i32 %v2_100015f4, 1
  %v4_100015f4 = inttoptr i32 %v3_100015f4 to i8*
  store i8 %v1_100015f4, i8* %v4_100015f4, align 1
  %v0_100015f8 = load i32, i32* @r28, align 4
  %v1_100015f8 = trunc i32 %v0_100015f8 to i16
  %v2_100015f8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f8 = add i32 %v2_100015f8, 2
  %v4_100015f8 = inttoptr i32 %v3_100015f8 to i16*
  store i16 %v1_100015f8, i16* %v4_100015f8, align 2
  %v3_100015fc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015fc, i32* %r9.global-to-local, align 4
  %v0_10001600 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001600 = trunc i32 %v0_10001600 to i16
  %v2_10001600 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001600 = add i32 %v2_10001600, 20
  %v4_10001600 = inttoptr i32 %v3_10001600 to i16*
  store i16 %v1_10001600, i16* %v4_10001600, align 2
  %v0_10001604 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001604 = add i32 %v0_10001604, 1
  store i32 %v1_10001604, i32* %r31.global-to-local, align 4
  %v1_10001608 = mul i32 %v0_10001604, 24
  %v1_1000160c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000160c = icmp slt i32 %v1_10001604, %v1_1000160c
  %v1_10001610 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001610 = add i32 %v1_10001610, %v1_10001608
  store i32 %v2_10001610, i32* %r9.global-to-local, align 4
  %v1_10001614 = add i32 %v2_10001610, 16
  %v2_10001614 = inttoptr i32 %v1_10001614 to i32*
  %v3_10001614 = load i32, i32* %v2_10001614, align 4
  store i32 %v3_10001614, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_1000161c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000161c = add i32 %v2_1000161c, 6
  %v4_1000161c = inttoptr i32 %v3_1000161c to i16*
  store i16 16384, i16* %v4_1000161c, align 2
  %v0_10001620 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001620 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001620 = add i32 %v1_10001620, 16
  %v3_10001620 = inttoptr i32 %v2_10001620 to i32*
  store i32 %v0_10001620, i32* %v3_10001620, align 4
  %v0_10001624 = load i32, i32* @r29, align 4
  %v1_10001624 = trunc i32 %v0_10001624 to i16
  %v2_10001624 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001624 = add i32 %v2_10001624, 4
  %v4_10001624 = inttoptr i32 %v3_10001624 to i16*
  store i16 %v1_10001624, i16* %v4_10001624, align 2
  %v0_10001628 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001628 = trunc i32 %v0_10001628 to i16
  %v2_10001628 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001628 = add i32 %v2_10001628, 2
  %v4_10001628 = inttoptr i32 %v3_10001628 to i16*
  store i16 %v1_10001628, i16* %v4_10001628, align 2
  %v0_1000162c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000162c, i32* %stack_var_-104, align 4
  br i1 %v2_1000160c, label %dec_label_pc_100015a8, label %dec_label_pc_100013e0

dec_label_pc_10001638:                            ; preds = %dec_label_pc_10001330
  %v0_10001638 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001638 = icmp eq i32 %v0_10001638, -1
  store i1 %v3_10001638, i1* %cr2_eq.global-to-local, align 1
  %v0_1000163c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000163c = icmp eq i32 %v0_1000163c, 0
  store i1 %v3_1000163c, i1* %cr3_eq.global-to-local, align 1
  %v1_10001640 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001640, i32* %r25.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001644, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100013e8.preheader

; uselistorder directives
  uselistorder i32 %v1_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_1000151c, { 1, 0 }
  uselistorder i32 %v0_1000150c, { 1, 0 }
  uselistorder i32 %v0_100014fc, { 1, 0 }
  uselistorder i32 %v1_100014f4, { 1, 0 }
  uselistorder i1 %v1_100014b4, { 1, 0 }
  uselistorder i1 %v0_100014b4, { 1, 0 }
  uselistorder i32 %v1_100014a4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000146c, { 1, 0 }
  uselistorder i32 %v1_10001400, { 1, 0 }
  uselistorder i32 %v1_10001374, { 1, 0 }
  uselistorder i32 %v1_1000136c, { 1, 0 }
  uselistorder i32 %v0_10001640, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10001314, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 8 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 8, 5, 6, 7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r26.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r25.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r24.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r23.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 7, 8, 9 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001540, { 1, 0 }
  uselistorder label %dec_label_pc_10001528, { 1, 0 }
  uselistorder label %dec_label_pc_10001444, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100013ec, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001330, { 1, 0 }
}

define i32 @function_10001650(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001650:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001654 = load i32, i32* @lr, align 4
  store i32 %v0_10001654, i32* %r0.global-to-local, align 4
  %v0_10001658 = call i32 @__asm_mfcr()
  store i32 %v0_10001658, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10001668 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001658, i32* %r18.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100016a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100016ac = load i32, i32* @r30, align 4
  %v0_100016b0 = load i32, i32* @r31, align 4
  store i32 268441284, i32* @lr, align 4
  %v2_100016c0 = call i32 @function_1000a590(i32 4, i32 4)
  store i32 %v2_100016c0, i32* %r19.global-to-local, align 4
  %v0_100016c8 = load i32, i32* @r28, align 4
  %v0_100016d4 = load i32, i32* @r29, align 4
  store i32 %v0_100016d4, i32* %r3.global-to-local, align 4
  store i32 268441308, i32* @lr, align 4
  %v4_100016d8 = inttoptr i32 %v0_100016c8 to i32*
  %v5_100016d8 = call i32 @function_100006a8(i32 %v0_100016d4, i32* %v4_100016d8, i32 2, i32 0)
  %v0_100016e8 = load i32, i32* @r28, align 4
  %v1_100016ec = urem i32 %v5_100016d8, 256
  store i32 %v1_100016ec, i32* %r14.global-to-local, align 4
  %v0_100016f0 = load i32, i32* @r29, align 4
  store i32 %v0_100016f0, i32* %r3.global-to-local, align 4
  store i32 268441336, i32* @lr, align 4
  %v4_100016f4 = inttoptr i32 %v0_100016e8 to i32*
  %v5_100016f4 = call i32 @function_100006a8(i32 %v0_100016f0, i32* %v4_100016f4, i32 3, i32 65535)
  %v0_100016f8 = load i32, i32* @r28, align 4
  store i32 %v5_100016f4, i32* %r24.global-to-local, align 4
  %v0_10001708 = load i32, i32* @r29, align 4
  store i32 %v0_10001708, i32* %r3.global-to-local, align 4
  store i32 268441360, i32* @lr, align 4
  %v4_1000170c = inttoptr i32 %v0_100016f8 to i32*
  %v5_1000170c = call i32 @function_100006a8(i32 %v0_10001708, i32* %v4_1000170c, i32 4, i32 64)
  %v0_10001710 = load i32, i32* @r28, align 4
  %v1_1000171c = urem i32 %v5_1000170c, 256
  store i32 %v1_1000171c, i32* %r20.global-to-local, align 4
  %v0_10001720 = load i32, i32* @r29, align 4
  store i32 %v0_10001720, i32* %r3.global-to-local, align 4
  store i32 268441384, i32* @lr, align 4
  %v4_10001724 = inttoptr i32 %v0_10001710 to i32*
  %v5_10001724 = call i32 @function_100006a8(i32 %v0_10001720, i32* %v4_10001724, i32 5, i32 1)
  %v0_10001734 = load i32, i32* @r28, align 4
  %v1_10001738 = urem i32 %v5_10001724, 256
  store i32 %v1_10001738, i32* @r31, align 4
  %v0_1000173c = load i32, i32* @r29, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* @lr, align 4
  %v4_10001740 = inttoptr i32 %v0_10001734 to i32*
  %v5_10001740 = call i32 @function_100006a8(i32 %v0_1000173c, i32* %v4_10001740, i32 6, i32 65535)
  %v0_10001748 = load i32, i32* @r28, align 4
  store i32 %v5_10001740, i32* %r26.global-to-local, align 4
  %v0_10001758 = load i32, i32* @r29, align 4
  store i32 %v0_10001758, i32* %r3.global-to-local, align 4
  store i32 268441440, i32* @lr, align 4
  %v4_1000175c = inttoptr i32 %v0_10001748 to i32*
  %v5_1000175c = call i32 @function_100006a8(i32 %v0_10001758, i32* %v4_1000175c, i32 7, i32 65535)
  %v0_10001760 = load i32, i32* @r28, align 4
  store i32 %v5_1000175c, i32* %r27.global-to-local, align 4
  %v0_10001770 = load i32, i32* @r29, align 4
  store i32 %v0_10001770, i32* %r3.global-to-local, align 4
  store i32 268441464, i32* @lr, align 4
  %v4_10001774 = inttoptr i32 %v0_10001760 to i32*
  %v5_10001774 = call i32 @function_100006a8(i32 %v0_10001770, i32* %v4_10001774, i32 0, i32 512)
  %v0_10001778 = load i32, i32* @r28, align 4
  store i32 %v5_10001774, i32* %r15.global-to-local, align 4
  %v0_10001788 = load i32, i32* @r29, align 4
  store i32 %v0_10001788, i32* %r3.global-to-local, align 4
  store i32 268441488, i32* @lr, align 4
  %v4_1000178c = inttoptr i32 %v0_10001778 to i32*
  %v5_1000178c = call i32 @function_100006a8(i32 %v0_10001788, i32* %v4_1000178c, i32 1, i32 1)
  %v0_10001790 = load i32, i32* @r28, align 4
  %v1_1000179c = urem i32 %v5_1000178c, 256
  store i32 %v1_1000179c, i32* %r21.global-to-local, align 4
  %v0_100017a0 = load i32, i32* @r29, align 4
  store i32 %v0_100017a0, i32* %r3.global-to-local, align 4
  store i32 268441512, i32* @lr, align 4
  %v4_100017a4 = inttoptr i32 %v0_10001790 to i32*
  %v5_100017a4 = call i32 @function_100006a8(i32 %v0_100017a0, i32* %v4_100017a4, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100017ac = load i32, i32* @global_var_1001c660.16, align 4
  %v0_100017b0 = load i32, i32* @r28, align 4
  store i32 %v5_100017a4, i32* %r30.global-to-local, align 4
  %v0_100017bc = load i32, i32* @r29, align 4
  store i32 %v0_100017bc, i32* %r3.global-to-local, align 4
  store i32 268441540, i32* @lr, align 4
  %v4_100017c0 = inttoptr i32 %v0_100017b0 to i32*
  %v5_100017c0 = call i32 @function_100006a8(i32 %v0_100017bc, i32* %v4_100017c0, i32 25, i32 %v3_100017ac)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441560, i32* @lr, align 4
  %v3_100017d4 = call i32 @function_1000a234(i32 2, i32 3, i32 6)
  store i32 %v3_100017d4, i32* %r3.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v3_100017d4, -1
  store i1 %v3_100017d8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100017d4, i32* %r23.global-to-local, align 4
  br i1 %v3_100017d8, label %dec_label_pc_1000197c, label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_10001650
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100017f0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268441600, i32* @lr, align 4
  %v4_100017fc = call i32 @function_1000a1f8(i32 0, i32 3, i32 %v2_100017f0, i32 4)
  store i32 %v4_100017fc, i32* %r3.global-to-local, align 4
  %v3_10001800 = icmp eq i32 %v4_100017fc, -1
  store i1 %v3_10001800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001800, label %dec_label_pc_10001974, label %dec_label_pc_10001808

dec_label_pc_10001808:                            ; preds = %dec_label_pc_100017e4
  %v0_10001808 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001808 = icmp slt i32 %v0_10001808, 0
  %v3_10001808 = icmp eq i32 %v0_10001808, 0
  store i1 %v1_10001808, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001814 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001814 = urem i32 %v0_10001814, 65536
  store i32 %v1_10001814, i32* %r24.global-to-local, align 4
  %v0_10001818 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001818 = urem i32 %v0_10001818, 65536
  store i32 %v1_10001818, i32* %r16.global-to-local, align 4
  %v0_1000181c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000181c = urem i32 %v0_1000181c, 65536
  store i32 %v1_1000181c, i32* %r17.global-to-local, align 4
  %v0_10001820 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001820 = urem i32 %v0_10001820, 256
  store i32 %v1_10001820, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10001808, 1
  br i1 %tmp37, label %dec_label_pc_100019dc, label %dec_label_pc_10001828

dec_label_pc_10001828:                            ; preds = %dec_label_pc_10001808
  %v0_10001828 = load i32, i32* @r31, align 4
  %v3_10001828 = icmp eq i32 %v0_10001828, 0
  store i1 %v3_10001828, i1* %cr2_eq.global-to-local, align 1
  %v3_1000182c = icmp eq i32 %v1_10001820, 0
  store i1 %v3_1000182c, i1* %cr3_eq.global-to-local, align 1
  %v0_10001830 = load i32, i32* %r15.global-to-local, align 4
  %v1_10001830 = urem i32 %v0_10001830, 65536
  %v0_10001814.not = or i32 %v0_10001814, -65536
  %v1_10001834 = xor i32 %v0_10001814.not, 65535
  store i32 %v1_10001834, i32* %r11.global-to-local, align 4
  %v1_1000183c = add nuw nsw i32 %v1_10001830, 66
  store i32 %v1_1000183c, i32* %r0.global-to-local, align 4
  %v1_10001840 = add nuw nsw i32 %v1_10001830, 28
  store i32 %v1_10001840, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001830, 66
  %v1_10001844 = urem i32 %fold, 65536
  store i32 %v1_10001844, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001830, 28
  %v1_10001848 = urem i32 %fold8, 65536
  store i32 %v1_10001848, i32* %r26.global-to-local, align 4
  %v1_1000184c = urem i32 %v1_10001834, 65536
  store i32 %v1_1000184c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001830, 8
  %v1_10001850 = urem i32 %fold9, 65536
  store i32 %v1_10001850, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001884

dec_label_pc_1000185c:                            ; preds = %dec_label_pc_10001950
  %v0_1000185c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 16
  %v2_1000185c = inttoptr i32 %v1_1000185c to i32*
  %v3_1000185c = load i32, i32* %v2_1000185c, align 4
  store i32 %v3_1000185c, i32* %r0.global-to-local, align 4
  %v1_10001860 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001860 = add i32 %v1_10001860, 16
  %v3_10001860 = inttoptr i32 %v2_10001860 to i32*
  store i32 %v3_1000185c, i32* %v3_10001860, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001864:                            ; preds = %dec_label_pc_1000196c, %dec_label_pc_1000185c
  %v3_10001864 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001864, i32* %r9.global-to-local, align 4
  %v0_10001868 = load i32, i32* @r28, align 4
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v2_10001868 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001868 = add i32 %v2_10001868, 4
  %v4_10001868 = inttoptr i32 %v3_10001868 to i16*
  store i16 %v1_10001868, i16* %v4_10001868, align 2
  %v0_1000186c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000186c = add i32 %v0_1000186c, 1
  store i32 %v1_1000186c, i32* %r31.global-to-local, align 4
  %v0_10001870 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001870 = trunc i32 %v0_10001870 to i16
  %v2_10001870 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001870 = inttoptr i32 %v2_10001870 to i16*
  store i16 %v1_10001870, i16* %v3_10001870, align 2
  %v0_10001874 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001874 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001874 = icmp slt i32 %v0_10001874, %v1_10001874
  %v4_10001874 = icmp eq i32 %v0_10001874, %v1_10001874
  store i1 %v4_10001874, i1* %cr7_eq.global-to-local, align 1
  %v0_10001878 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001878 = trunc i32 %v0_10001878 to i16
  %v2_10001878 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001878 = add i32 %v2_10001878, 2
  %v4_10001878 = inttoptr i32 %v3_10001878 to i16*
  store i16 %v1_10001878, i16* %v4_10001878, align 2
  %v0_1000187c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000187c, i32* %stack_var_-104, align 4
  br i1 %v2_10001874, label %dec_label_pc_10001884, label %dec_label_pc_100019e0

dec_label_pc_10001884:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_10001828
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441744, i32* @lr, align 4
  %v2_1000188c = call i32 @function_1000a590(i32 1510, i32 4)
  store i32 %v2_1000188c, i32* %r3.global-to-local, align 4
  %v3_10001890 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001890, i32* %r9.global-to-local, align 4
  %v0_10001894 = load i32, i32* @r31, align 4
  %v1_10001894 = mul i32 %v0_10001894, 4
  store i32 %v1_10001894, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_1000189c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000189c = add i32 %v1_1000189c, %v1_10001894
  %v4_1000189c = inttoptr i32 %v3_1000189c to i32*
  store i32 %v2_1000188c, i32* %v4_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100018a0 = mul i32 %v0_100018a0, 4
  store i32 %v1_100018a0, i32* %r9.global-to-local, align 4
  %v1_100018a4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100018a4 = add i32 %v1_100018a4, %v1_100018a0
  %v3_100018a4 = inttoptr i32 %v2_100018a4 to i32*
  %v4_100018a4 = load i32, i32* %v3_100018a4, align 4
  store i32 %v4_100018a4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100018ac = inttoptr i32 %v4_100018a4 to i32*
  %v2_100018ac = load i32, i32* %v1_100018ac, align 4
  store i32 %v2_100018ac, i32* %r0.global-to-local, align 4
  %v1_100018b0 = add i32 %v4_100018a4, 38
  store i32 %v1_100018b0, i32* %r30.global-to-local, align 4
  %v0_100018b4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100018b4 = trunc i32 %v0_100018b4 to i8
  %v3_100018b4 = add i32 %v4_100018a4, 8
  %v4_100018b4 = inttoptr i32 %v3_100018b4 to i8*
  store i8 %v1_100018b4, i8* %v4_100018b4, align 1
  %v0_100018b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018b8 = add i32 %v0_100018b8, 58
  store i32 %v1_100018b8, i32* %r29.global-to-local, align 4
  %v1_100018bc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100018bc, i32* %r0.global-to-local, align 4
  %v0_100018c0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100018c0 = trunc i32 %v0_100018c0 to i16
  %v2_100018c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018c0 = add i32 %v2_100018c0, 4
  %v4_100018c0 = inttoptr i32 %v3_100018c0 to i16*
  store i16 %v1_100018c0, i16* %v4_100018c0, align 2
  %v1_100018c4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100018c4, i32* %r0.global-to-local, align 4
  %v0_100018c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018c8 = add i32 %v0_100018c8, 20
  store i32 %v1_100018c8, i32* %r9.global-to-local, align 4
  %v2_100018cc = inttoptr i32 %v0_100018c8 to i32*
  store i32 %v1_100018c4, i32* %v2_100018cc, align 4
  %v0_100018d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018d0 = add i32 %v0_100018d0, 24
  store i32 %v1_100018d0, i32* %r11.global-to-local, align 4
  %v0_100018d4 = load i32, i32* %r14.global-to-local, align 4
  %v1_100018d4 = trunc i32 %v0_100018d4 to i8
  %v3_100018d4 = add i32 %v0_100018d0, 1
  %v4_100018d4 = inttoptr i32 %v3_100018d4 to i8*
  store i8 %v1_100018d4, i8* %v4_100018d4, align 1
  %v0_100018d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100018d8 = trunc i32 %v0_100018d8 to i16
  %v2_100018d8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018d8 = add i32 %v2_100018d8, 2
  %v4_100018d8 = inttoptr i32 %v3_100018d8 to i16*
  store i16 %v1_100018d8, i16* %v4_100018d8, align 2
  %v0_100018dc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100018dc, label %dec_label_pc_100018e8, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_10001884
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100018e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018e4 = add i32 %v2_100018e4, 6
  %v4_100018e4 = inttoptr i32 %v3_100018e4 to i16*
  store i16 16384, i16* %v4_100018e4, align 2
  br label %dec_label_pc_100018e8

dec_label_pc_100018e8:                            ; preds = %dec_label_pc_10001884, %dec_label_pc_100018e0
  %v2_100018ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100018ec = add i32 %v2_100018ec, 9
  %v4_100018ec = inttoptr i32 %v3_100018ec to i8*
  store i8 47, i8* %v4_100018ec, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_100018f4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100018f4 = add i32 %v2_100018f4, 2
  %v4_100018f4 = inttoptr i32 %v3_100018f4 to i16*
  store i16 25944, i16* %v4_100018f4, align 2
  %v2_100018fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100018fc = add i32 %v2_100018fc, 12
  %v4_100018fc = inttoptr i32 %v3_100018fc to i16*
  store i16 2048, i16* %v4_100018fc, align 2
  %v3_10001900 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_100017c0, i32* %r11.global-to-local, align 4
  %v1_10001908 = mul i32 %v3_10001900, 24
  store i32 %v1_10001908, i32* %r9.global-to-local, align 4
  %v0_1000190c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000190c = add i32 %v0_1000190c, 38
  %v2_1000190c = inttoptr i32 %v1_1000190c to i32*
  %v3_1000190c = load i32, i32* %v2_1000190c, align 4
  store i32 %v3_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = add i32 %v0_1000190c, 12
  %v3_10001910 = inttoptr i32 %v2_10001910 to i32*
  store i32 %v5_100017c0, i32* %v3_10001910, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001918 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001918 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001918 = add i32 %v1_10001918, %v0_10001918
  store i32 %v2_10001918, i32* %r9.global-to-local, align 4
  %v1_1000191c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000191c, i32* %r0.global-to-local, align 4
  %v0_10001920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001920 = add i32 %v0_10001920, 16
  %v2_10001920 = inttoptr i32 %v1_10001920 to i32*
  %v3_10001920 = load i32, i32* %v2_10001920, align 4
  store i32 %v3_10001920, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001928 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001928, i32* %r0.global-to-local, align 4
  %v1_1000192c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000192c = add i32 %v1_1000192c, 38
  %v3_1000192c = inttoptr i32 %v2_1000192c to i32*
  store i32 %v1_10001928, i32* %v3_1000192c, align 4
  %v0_10001930 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001930 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001930 = add i32 %v1_10001930, 16
  %v3_10001930 = inttoptr i32 %v2_10001930 to i32*
  store i32 %v0_10001930, i32* %v3_10001930, align 4
  %v0_10001934 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001934 = trunc i32 %v0_10001934 to i8
  %v2_10001934 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001934 = add i32 %v2_10001934, 1
  %v4_10001934 = inttoptr i32 %v3_10001934 to i8*
  store i8 %v1_10001934, i8* %v4_10001934, align 1
  %v0_10001938 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001938 = trunc i32 %v0_10001938 to i16
  %v2_10001938 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001938 = add i32 %v2_10001938, 2
  %v4_10001938 = inttoptr i32 %v3_10001938 to i16*
  store i16 %v1_10001938, i16* %v4_10001938, align 2
  %v0_1000193c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000193c = trunc i32 %v0_1000193c to i16
  %v2_1000193c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000193c = add i32 %v2_1000193c, 4
  %v4_1000193c = inttoptr i32 %v3_1000193c to i16*
  store i16 %v1_1000193c, i16* %v4_1000193c, align 2
  %v0_10001940 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001940 = trunc i32 %v0_10001940 to i8
  %v2_10001940 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001940 = add i32 %v2_10001940, 8
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 %v1_10001940, i8* %v4_10001940, align 1
  %v0_10001944 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001944, label %dec_label_pc_10001950, label %dec_label_pc_10001948

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018e8
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_1000194c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000194c = add i32 %v2_1000194c, 6
  %v4_1000194c = inttoptr i32 %v3_1000194c to i16*
  store i16 16384, i16* %v4_1000194c, align 2
  br label %dec_label_pc_10001950

dec_label_pc_10001950:                            ; preds = %dec_label_pc_100018e8, %dec_label_pc_10001948
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001954 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001954 = add i32 %v2_10001954, 9
  %v4_10001954 = inttoptr i32 %v3_10001954 to i8*
  store i8 17, i8* %v4_10001954, align 1
  %v0_10001958 = call i32 @function_10005b08()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  %v1_1000195c = add i32 %v0_10001958, -1024
  store i32 %v1_1000195c, i32* %r0.global-to-local, align 4
  %v1_10001960 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001960 = add i32 %v1_10001960, 12
  %v3_10001960 = inttoptr i32 %v2_10001960 to i32*
  store i32 %v0_10001958, i32* %v3_10001960, align 4
  %v0_10001964 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001964 = sub i32 -1, %v0_10001964
  store i32 %v1_10001964, i32* %r0.global-to-local, align 4
  %v0_10001968 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001968, label %dec_label_pc_1000196c, label %dec_label_pc_1000185c

dec_label_pc_1000196c:                            ; preds = %dec_label_pc_10001950
  %v1_1000196c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000196c = add i32 %v1_1000196c, 16
  %v3_1000196c = inttoptr i32 %v2_1000196c to i32*
  store i32 %v1_10001964, i32* %v3_1000196c, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001974:                            ; preds = %dec_label_pc_100017e4
  %v0_10001974 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001974, i32* %r3.global-to-local, align 4
  store i32 268441980, i32* @lr, align 4
  %v0_10001978 = call i32 @function_10009518()
  store i32 %v0_10001978, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000197c

dec_label_pc_1000197c:                            ; preds = %dec_label_pc_10001650, %dec_label_pc_10001974
  store i32 %v0_10001668, i32* %r0.global-to-local, align 4
  %v1_10001990 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001658)
  store i32 %v0_1000169c, i32* %r28.global-to-local, align 4
  store i32 %v0_100016a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100016ac, i32* %r30.global-to-local, align 4
  store i32 %v0_100016b0, i32* %r31.global-to-local, align 4
  %v0_100019d8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100019d8

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_10001808
  %v3_100019dc = icmp eq i32 %v1_10001820, 0
  store i1 %v3_100019dc, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100019e0

dec_label_pc_100019e0:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_100019dc
  store i32 %v5_100017c0, i32* %r0.global-to-local, align 4
  %v0_100019e4 = load i32, i32* %r21.global-to-local, align 4
  %v3_100019e4 = icmp eq i32 %v0_100019e4, 0
  store i1 %v3_100019e4, i1* %cr2_eq.global-to-local, align 1
  %v2_100019e8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100019e8, i32* %r14.global-to-local, align 4
  %v0_100019ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100019ec = add i32 %v0_100019ec, 8
  store i32 %v1_100019ec, i32* %r21.global-to-local, align 4
  %v3_100019f0 = icmp eq i32 %v5_100017c0, -1
  store i1 %v3_100019f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100019f4 = add i32 %v0_100019ec, 66
  store i32 %v1_100019f4, i32* %r22.global-to-local, align 4
  %v0_100019f8 = call i32 @__asm_mfcr()
  store i32 %v0_100019f8, i32* %r3.global-to-local, align 4
  %v1_100019fc = mul i32 %v0_100019f8, 268435456
  store i32 %v1_100019fc, i32* %r20.global-to-local, align 4
  %v2_10001a90 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10001ab4 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10001ac4 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10001a00.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001a00.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001a00.outer

dec_label_pc_10001a00.outer:                      ; preds = %dec_label_pc_10001b64, %dec_label_pc_100019e0
  %v1_10001a00.ph = phi i1 [ %v1_10001a00.pre, %dec_label_pc_100019e0 ], [ %v1_10001b64, %dec_label_pc_10001b64 ]
  %v0_10001a00.ph = phi i1 [ %v0_10001a00.pre, %dec_label_pc_100019e0 ], [ %v0_10001b64, %dec_label_pc_10001b64 ]
  %v2_10001a00 = or i1 %v1_10001a00.ph, %v0_10001a00.ph
  br label %dec_label_pc_10001a00

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_10001a00.outer, %dec_label_pc_10001a00
  br i1 %v2_10001a00, label %dec_label_pc_10001a00, label %dec_label_pc_10001a04

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_10001a00, %dec_label_pc_10001b64
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001a14

dec_label_pc_10001a14:                            ; preds = %dec_label_pc_10001ad4, %dec_label_pc_10001a04
  %v0_10001a14 = phi i32 [ %v1_10001b54, %dec_label_pc_10001ad4 ], [ 0, %dec_label_pc_10001a04 ]
  %v1_10001a14 = mul i32 %v0_10001a14, 24
  store i32 %v1_10001a14, i32* %r0.global-to-local, align 4
  %v1_10001a18 = mul i32 %v0_10001a14, 4
  store i32 %v1_10001a18, i32* %r11.global-to-local, align 4
  %v1_10001a1c = load i32, i32* %r19.global-to-local, align 4
  %v2_10001a1c = add i32 %v1_10001a1c, %v1_10001a18
  %v3_10001a1c = inttoptr i32 %v2_10001a1c to i32*
  %v4_10001a1c = load i32, i32* %v3_10001a1c, align 4
  store i32 %v4_10001a1c, i32* %r28.global-to-local, align 4
  %v1_10001a20 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001a20 = add i32 %v1_10001a20, %v1_10001a14
  %v1_10001a24 = add i32 %v2_10001a20, 20
  %v2_10001a24 = inttoptr i32 %v1_10001a24 to i8*
  %v3_10001a24 = load i8, i8* %v2_10001a24, align 1
  %v4_10001a24 = zext i8 %v3_10001a24 to i32
  store i32 %v4_10001a24, i32* %r9.global-to-local, align 4
  %v1_10001a28 = add i32 %v4_10001a1c, 24
  store i32 %v1_10001a28, i32* @r30, align 4
  %v1_10001a2c = add i32 %v4_10001a1c, 38
  store i32 %v1_10001a2c, i32* @r31, align 4
  %v1_10001a30 = add i32 %v4_10001a1c, 58
  store i32 %v1_10001a30, i32* %r27.global-to-local, align 4
  %v3_10001a34 = icmp eq i8 %v3_10001a24, 31
  store i1 %v3_10001a34, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10001a24, 32
  br i1 %tmp39, label %dec_label_pc_10001b6c, label %dec_label_pc_10001a3c

dec_label_pc_10001a3c:                            ; preds = %dec_label_pc_10001a14
  %v0_10001a3c = load i32, i32* %r20.global-to-local, align 4
  %v1_10001a3c = mul i32 %v0_10001a3c, 16
  %v2_10001a3c = udiv i32 %v0_10001a3c, 268435456
  %v3_10001a3c = or i32 %v2_10001a3c, %v1_10001a3c
  store i32 %v3_10001a3c, i32* %r20.global-to-local, align 4
  %v1_10001a40 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001a3c)
  %v1_10001a44 = mul nuw i32 %v2_10001a3c, 268435456
  %v2_10001a44 = urem i32 %v0_10001a3c, 268435456
  %v3_10001a44 = or i32 %v1_10001a44, %v2_10001a44
  store i32 %v3_10001a44, i32* %r20.global-to-local, align 4
  %v0_10001a48 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001a48, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001a4c:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 65535, i32* @r29, align 4
  %v0_10001a54 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001a54 = icmp eq i32 %v0_10001a54, 65535
  store i1 %v4_10001a54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a54, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v1_10001a5c = phi i32 [ %v1_10001bb0, %dec_label_pc_10001ba0 ], [ 65535, %dec_label_pc_10001a4c ]
  %v0_10001a5c = load i32, i32* %r16.global-to-local, align 4
  %v4_10001a5c = icmp eq i32 %v0_10001a5c, %v1_10001a5c
  store i1 %v4_10001a5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a5c, label %dec_label_pc_10001bd8, label %dec_label_pc_10001a64

dec_label_pc_10001a64:                            ; preds = %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge, %dec_label_pc_10001a5c
  %v1_10001a64 = phi i32 [ %v1_10001a64.pre, %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge ], [ %v1_10001a5c, %dec_label_pc_10001a5c ]
  %v0_10001a64 = load i32, i32* %r17.global-to-local, align 4
  %v4_10001a64 = icmp eq i32 %v0_10001a64, %v1_10001a64
  store i1 %v4_10001a64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a64, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001a6c:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001a6c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001a6c, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001a70 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001a70 = add i32 %v0_10001a70, 16
  %v2_10001a70 = inttoptr i32 %v1_10001a70 to i32*
  %v3_10001a70 = load i32, i32* %v2_10001a70, align 4
  store i32 %v3_10001a70, i32* %r0.global-to-local, align 4
  %v1_10001a74 = load i32, i32* @r31, align 4
  %v2_10001a74 = add i32 %v1_10001a74, 16
  %v3_10001a74 = inttoptr i32 %v2_10001a74 to i32*
  store i32 %v3_10001a70, i32* %v3_10001a74, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001a78:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001a70
  %v0_10001a78 = call i32 @function_10005b08()
  store i32 %v0_10001a78, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a78, i32* %stack_var_-100, align 4
  %v0_10001a80 = call i32 @function_10005b08()
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a80, i32* %stack_var_-96, align 4
  %v0_10001a88 = call i32 @function_10005b08()
  store i32 %v0_10001a88, i32* %stack_var_-92, align 4
  %v0_10001a94 = load i32, i32* @r30, align 4
  store i32 %v0_10001a94, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001aa0.17 to i32), i32* @lr, align 4
  %v3_10001a9c = call i32 @function_10008ddc(i32 %v0_10001a94, i32 %v2_10001a90, i32 4)
  %v0_10001aa0 = load i32, i32* @r30, align 4
  %v1_10001aa0 = add i32 %v0_10001aa0, 6
  store i32 %v1_10001aa0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ab0.18 to i32), i32* @lr, align 4
  %v3_10001aac = call i32 @function_10008ddc(i32 %v1_10001aa0, i32 %v2_100019e8, i32 4)
  %v0_10001ab0 = load i32, i32* @r30, align 4
  %v1_10001ab0 = add i32 %v0_10001ab0, 4
  store i32 %v1_10001ab0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ac0.19 to i32), i32* @lr, align 4
  %v3_10001abc = call i32 @function_10008ddc(i32 %v1_10001ab0, i32 %v2_10001ab4, i32 2)
  %v0_10001ac0 = load i32, i32* @r30, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 10
  store i32 %v1_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v3_10001acc = call i32 @function_10008ddc(i32 %v1_10001ac0, i32 %v2_10001ac4, i32 2)
  store i32 %v3_10001acc, i32* %r3.global-to-local, align 4
  %v0_10001ad0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ad0, label %dec_label_pc_10001ad4, label %dec_label_pc_10001c00

dec_label_pc_10001ad4:                            ; preds = %dec_label_pc_10001a78, %dec_label_pc_10001c00
  %v0_10001ad4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001ad4 = trunc i32 %v0_10001ad4 to i16
  %v2_10001ad4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001ad4 = add i32 %v2_10001ad4, 10
  %v4_10001ad4 = inttoptr i32 %v3_10001ad4 to i16*
  store i16 %v1_10001ad4, i16* %v4_10001ad4, align 2
  %v0_10001adc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v2_10001ae0 = call i32 @function_100043cc(i32 %v0_10001adc, i32 20)
  %v3_10001ae0 = trunc i32 %v2_10001ae0 to i16
  %v4_10001ae8 = add i32 %v0_10001adc, 10
  %v5_10001ae8 = inttoptr i32 %v4_10001ae8 to i16*
  store i16 %v3_10001ae0, i16* %v5_10001ae8, align 2
  %v0_10001aec = load i32, i32* @r31, align 4
  store i32 %v0_10001aec, i32* @r3, align 4
  %v0_10001af0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001af0 = trunc i32 %v0_10001af0 to i16
  %v3_10001af0 = add i32 %v0_10001aec, 10
  %v4_10001af0 = inttoptr i32 %v3_10001af0 to i16*
  store i16 %v1_10001af0, i16* %v4_10001af0, align 2
  %v2_10001af4 = call i32 @function_100043cc(i32 %v0_10001aec, i32 20)
  %v3_10001af4 = trunc i32 %v2_10001af4 to i16
  %v0_10001af8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001af8, i32* @r4, align 4
  %v3_10001afc = load i32, i32* @r31, align 4
  %v4_10001afc = add i32 %v3_10001afc, 10
  %v5_10001afc = inttoptr i32 %v4_10001afc to i16*
  store i16 %v3_10001af4, i16* %v5_10001afc, align 2
  %v0_10001b00 = load i32, i32* %r21.global-to-local, align 4
  %v0_10001b04 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b04 = trunc i32 %v0_10001b04 to i16
  %v2_10001b04 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001b04 = add i32 %v2_10001b04, 6
  %v4_10001b04 = inttoptr i32 %v3_10001b04 to i16*
  store i16 %v1_10001b04, i16* %v4_10001b04, align 2
  %v0_10001b08 = load i32, i32* @r31, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  %v0_10001b0c = load i32, i32* %r27.global-to-local, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 4
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i16*
  %v3_10001b0c = load i16, i16* %v2_10001b0c, align 2
  %v4_10001b0c = zext i16 %v3_10001b0c to i32
  %v4_10001b10 = call i32 @function_10004430(i32 %v0_10001b08, i32 %v0_10001af8, i32 %v4_10001b0c, i32 %v0_10001b00)
  %v5_10001b10 = trunc i32 %v4_10001b10 to i16
  store i32 %v4_10001b10, i32* %r3.global-to-local, align 4
  %v3_10001b14 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b14, i32* %r0.global-to-local, align 4
  %v0_10001b18 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001b18 = add i32 %v0_10001b18, 16
  %v2_10001b18 = inttoptr i32 %v1_10001b18 to i32*
  %v3_10001b18 = load i32, i32* %v2_10001b18, align 4
  store i32 %v3_10001b18, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001b20 = mul i32 %v3_10001b14, 24
  store i32 %v1_10001b20, i32* %r0.global-to-local, align 4
  %v3_10001b24 = load i32, i32* %r27.global-to-local, align 4
  %v4_10001b24 = add i32 %v3_10001b24, 6
  %v5_10001b24 = inttoptr i32 %v4_10001b24 to i16*
  store i16 %v5_10001b10, i16* %v5_10001b24, align 2
  %v0_10001b28 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001b2c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001b2c, i32* %r3.global-to-local, align 4
  %v0_10001b30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b30 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b30 = add i32 %v1_10001b30, %v0_10001b30
  %v0_10001b34 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001b34 = trunc i32 %v0_10001b34 to i16
  %v5_10001b34 = inttoptr i32 %v2_10001b30 to i16*
  store i16 %v3_10001b34, i16* %v5_10001b34, align 2
  %v0_10001b38 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001b38 = add i32 %v2_10001b30, 4
  %v3_10001b38 = inttoptr i32 %v2_10001b38 to i32*
  store i32 %v0_10001b38, i32* %v3_10001b38, align 4
  %v0_10001b3c = load i32, i32* %r22.global-to-local, align 4
  %v0_10001b40 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b40 = trunc i32 %v0_10001b40 to i16
  %v3_10001b40 = add i32 %v2_10001b30, 2
  %v4_10001b40 = inttoptr i32 %v3_10001b40 to i16*
  store i16 %v1_10001b40, i16* %v4_10001b40, align 2
  store i32 268442448, i32* @lr, align 4
  %v6_10001b4c = call i32 @function_1000a1b8(i32 %v0_10001b2c, i32 %v0_10001b28, i32 %v0_10001b3c, i32 16384, i32 %v2_10001b30, i32 16)
  store i32 %v6_10001b4c, i32* %r3.global-to-local, align 4
  %v3_10001b50 = load i32, i32* %stack_var_-104, align 4
  %v1_10001b54 = add i32 %v3_10001b50, 1
  store i32 %v1_10001b54, i32* %r9.global-to-local, align 4
  %v1_10001b58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001b58 = icmp slt i32 %v1_10001b54, %v1_10001b58
  %v4_10001b58 = icmp eq i32 %v1_10001b54, %v1_10001b58
  store i1 %v4_10001b58, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001b54, i32* %stack_var_-104, align 4
  br i1 %v2_10001b58, label %dec_label_pc_10001a14, label %dec_label_pc_10001b64

dec_label_pc_10001b64:                            ; preds = %dec_label_pc_10001ad4
  %v0_10001b64 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001b64 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001b64 = or i1 %v0_10001b64, %v1_10001b64
  br i1 %v2_10001b64, label %dec_label_pc_10001a00.outer, label %dec_label_pc_10001a04

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001a14
  %v1_10001b6c = add i32 %v2_10001a20, 16
  %v2_10001b6c = inttoptr i32 %v1_10001b6c to i32*
  %v3_10001b6c = load i32, i32* %v2_10001b6c, align 4
  store i32 %v3_10001b6c, i32* %r29.global-to-local, align 4
  %v0_10001b70 = call i32 @function_10005b08()
  store i32 %v0_10001b70, i32* %r3.global-to-local, align 4
  %v3_10001b74 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b74, i32* %r9.global-to-local, align 4
  %v0_10001b78 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001b78 = mul i32 %v0_10001b78, 16
  %v2_10001b78 = udiv i32 %v0_10001b78, 268435456
  %v3_10001b78 = or i32 %v2_10001b78, %v1_10001b78
  store i32 %v3_10001b78, i32* %r20.global-to-local, align 4
  %v1_10001b7c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001b78)
  %v1_10001b80 = mul nuw i32 %v2_10001b78, 268435456
  %v2_10001b80 = urem i32 %v0_10001b78, 268435456
  %v3_10001b80 = or i32 %v1_10001b80, %v2_10001b80
  store i32 %v3_10001b80, i32* %r20.global-to-local, align 4
  %v0_10001b84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001b84 = mul i32 %v0_10001b84, 24
  %v1_10001b88 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b88 = add i32 %v1_10001b88, %v1_10001b84
  store i32 %v2_10001b88, i32* %r9.global-to-local, align 4
  %v1_10001b8c = add i32 %v2_10001b88, 20
  %v2_10001b8c = inttoptr i32 %v1_10001b8c to i8*
  %v3_10001b8c = load i8, i8* %v2_10001b8c, align 1
  %v4_10001b8c = zext i8 %v3_10001b8c to i32
  store i32 %v4_10001b8c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001b8c, 64
  %v2_10001b90 = zext i8 %tmp to i32
  %v3_10001b90 = lshr i32 %v0_10001b70, %v2_10001b90
  store i32 %v3_10001b90, i32* %r3.global-to-local, align 4
  %v0_10001b94 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b94 = add i32 %v3_10001b90, %v0_10001b94
  store i32 %v2_10001b94, i32* %r29.global-to-local, align 4
  %v1_10001b98 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001b98 = add i32 %v1_10001b98, 16
  %v3_10001b98 = inttoptr i32 %v2_10001b98 to i32*
  store i32 %v2_10001b94, i32* %v3_10001b98, align 4
  %v0_10001b9c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001b9c, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001ba4 = call i32 @function_10005b08()
  store i32 %v0_10001ba4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bac = add i32 %v1_10001bac, 12
  %v3_10001bac = inttoptr i32 %v2_10001bac to i32*
  store i32 %v0_10001ba4, i32* %v3_10001bac, align 4
  %v0_10001bb0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001bb0 = load i32, i32* @r29, align 4
  %v4_10001bb0 = icmp eq i32 %v0_10001bb0, %v1_10001bb0
  store i1 %v4_10001bb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001bb0, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001bb8:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v0_10001bb8 = call i32 @function_10005b08()
  %v0_10001bbc = load i32, i32* %r16.global-to-local, align 4
  %v1_10001bbc = load i32, i32* @r29, align 4
  %v4_10001bbc = icmp eq i32 %v0_10001bbc, %v1_10001bbc
  store i1 %v4_10001bbc, i1* %cr7_eq.global-to-local, align 1
  %v1_10001bc0 = urem i32 %v0_10001bb8, 65536
  store i32 %v1_10001bc0, i32* %r3.global-to-local, align 4
  %v1_10001bc4 = add nsw i32 %v1_10001bc0, -1000
  store i32 %v1_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = trunc i32 %v0_10001bb8 to i16
  %v2_10001bc8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001bc8 = add i32 %v2_10001bc8, 4
  %v4_10001bc8 = inttoptr i32 %v3_10001bc8 to i16*
  store i16 %v1_10001bc8, i16* %v4_10001bc8, align 2
  %v0_10001bcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10001bcc = sub i32 -1, %v0_10001bcc
  store i32 %v1_10001bcc, i32* %r0.global-to-local, align 4
  %v1_10001bd0 = trunc i32 %v1_10001bcc to i16
  %v2_10001bd0 = load i32, i32* @r31, align 4
  %v3_10001bd0 = add i32 %v2_10001bd0, 4
  %v4_10001bd0 = inttoptr i32 %v3_10001bd0 to i16*
  store i16 %v1_10001bd0, i16* %v4_10001bd0, align 2
  br i1 %v4_10001bbc, label %dec_label_pc_10001bd8, label %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge

dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge: ; preds = %dec_label_pc_10001bb8
  %v1_10001a64.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001a64

dec_label_pc_10001bd8:                            ; preds = %dec_label_pc_10001bb8, %dec_label_pc_10001a5c
  %v0_10001bd8 = call i32 @function_10005b08()
  %v1_10001bd8 = trunc i32 %v0_10001bd8 to i16
  store i32 %v0_10001bd8, i32* %r3.global-to-local, align 4
  %v0_10001bdc = load i32, i32* %r17.global-to-local, align 4
  %v1_10001bdc = load i32, i32* @r29, align 4
  %v4_10001bdc = icmp eq i32 %v0_10001bdc, %v1_10001bdc
  store i1 %v4_10001bdc, i1* %cr7_eq.global-to-local, align 1
  %v3_10001be0 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001be0 = add i32 %v3_10001be0, 58
  %v5_10001be0 = inttoptr i32 %v4_10001be0 to i16*
  store i16 %v1_10001bd8, i16* %v5_10001be0, align 2
  br i1 %v4_10001bdc, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001be8:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001be8 = call i32 @function_10005b08()
  %v1_10001be8 = trunc i32 %v0_10001be8 to i16
  store i32 %v0_10001be8, i32* %r3.global-to-local, align 4
  %v3_10001bec = load i32, i32* %r27.global-to-local, align 4
  %v4_10001bec = add i32 %v3_10001bec, 2
  %v5_10001bec = inttoptr i32 %v4_10001bec to i16*
  store i16 %v1_10001be8, i16* %v5_10001bec, align 2
  %v0_10001bf0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001bf0, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001bf4 = call i32 @function_10005b08()
  store i32 %v0_10001bf4, i32* %r3.global-to-local, align 4
  %v1_10001bf8 = load i32, i32* @r31, align 4
  %v2_10001bf8 = add i32 %v1_10001bf8, 16
  %v3_10001bf8 = inttoptr i32 %v2_10001bf8 to i32*
  store i32 %v0_10001bf4, i32* %v3_10001bf8, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001c00:                            ; preds = %dec_label_pc_10001a78
  %v0_10001c00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001c00 = add i32 %v0_10001c00, 8
  store i32 %v1_10001c00, i32* @r3, align 4
  %v0_10001c04 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10001c04, i32* @r4, align 4
  %v0_10001c08 = call i32 @function_10005cdc()
  store i32 %v0_10001c08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ad4

; uselistorder directives
  uselistorder i32 %v0_10001be8, { 1, 0 }
  uselistorder i32 %v0_10001bd8, { 1, 0 }
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %v1_10001bc0, { 1, 0 }
  uselistorder i32 %v0_10001bb8, { 1, 0 }
  uselistorder i32 %v1_10001bb0, { 1, 0 }
  uselistorder i32 %v0_10001b78, { 2, 1, 0 }
  uselistorder i1 %v1_10001b64, { 1, 0 }
  uselistorder i1 %v0_10001b64, { 1, 0 }
  uselistorder i32 %v1_10001b54, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001b30, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001b10, { 1, 0 }
  uselistorder i32 %v0_10001a3c, { 2, 1, 0 }
  uselistorder i32 %v4_10001a1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001a18, { 1, 0 }
  uselistorder i32 %v1_10001964, { 1, 0 }
  uselistorder i32 %v1_100018a0, { 1, 0 }
  uselistorder i32 %v1_10001894, { 1, 0 }
  uselistorder i32 %v1_10001830, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001820, { 1, 2, 0 }
  uselistorder i32 %v0_10001814, { 1, 0 }
  uselistorder i32 %v5_100017c0, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 29, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 12, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10001a04, { 1, 0 }
  uselistorder label %dec_label_pc_10001a00, { 1, 0 }
  uselistorder label %dec_label_pc_100019e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000197c, { 1, 0 }
  uselistorder label %dec_label_pc_10001950, { 1, 0 }
  uselistorder label %dec_label_pc_100018e8, { 1, 0 }
}

define i32 @function_10001c10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001c10:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001c14 = load i32, i32* @lr, align 4
  store i32 %v0_10001c14, i32* %r0.global-to-local, align 4
  %v0_10001c18 = call i32 @__asm_mfcr()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10001c28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001c18, i32* %r19.global-to-local, align 4
  %v0_10001c5c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001c64 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001c6c = load i32, i32* @r30, align 4
  %v0_10001c70 = load i32, i32* @r31, align 4
  store i32 268442756, i32* @lr, align 4
  %v2_10001c80 = call i32 @function_1000a590(i32 4, i32 4)
  store i32 %v2_10001c80, i32* %r20.global-to-local, align 4
  %v0_10001c88 = load i32, i32* @r28, align 4
  %v0_10001c94 = load i32, i32* @r29, align 4
  store i32 %v0_10001c94, i32* %r3.global-to-local, align 4
  store i32 268442780, i32* @lr, align 4
  %v4_10001c98 = inttoptr i32 %v0_10001c88 to i32*
  %v5_10001c98 = call i32 @function_100006a8(i32 %v0_10001c94, i32* %v4_10001c98, i32 2, i32 0)
  %v0_10001ca8 = load i32, i32* @r28, align 4
  %v1_10001cac = urem i32 %v5_10001c98, 256
  store i32 %v1_10001cac, i32* %r14.global-to-local, align 4
  %v0_10001cb0 = load i32, i32* @r29, align 4
  store i32 %v0_10001cb0, i32* %r3.global-to-local, align 4
  store i32 268442808, i32* @lr, align 4
  %v4_10001cb4 = inttoptr i32 %v0_10001ca8 to i32*
  %v5_10001cb4 = call i32 @function_100006a8(i32 %v0_10001cb0, i32* %v4_10001cb4, i32 3, i32 65535)
  %v0_10001cb8 = load i32, i32* @r28, align 4
  store i32 %v5_10001cb4, i32* %r25.global-to-local, align 4
  %v0_10001cc8 = load i32, i32* @r29, align 4
  store i32 %v0_10001cc8, i32* %r3.global-to-local, align 4
  store i32 268442832, i32* @lr, align 4
  %v4_10001ccc = inttoptr i32 %v0_10001cb8 to i32*
  %v5_10001ccc = call i32 @function_100006a8(i32 %v0_10001cc8, i32* %v4_10001ccc, i32 4, i32 64)
  %v0_10001cd0 = load i32, i32* @r28, align 4
  %v1_10001cdc = urem i32 %v5_10001ccc, 256
  store i32 %v1_10001cdc, i32* %r21.global-to-local, align 4
  %v0_10001ce0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ce0, i32* %r3.global-to-local, align 4
  store i32 268442856, i32* @lr, align 4
  %v4_10001ce4 = inttoptr i32 %v0_10001cd0 to i32*
  %v5_10001ce4 = call i32 @function_100006a8(i32 %v0_10001ce0, i32* %v4_10001ce4, i32 5, i32 1)
  %v0_10001cf4 = load i32, i32* @r28, align 4
  %v1_10001cf8 = urem i32 %v5_10001ce4, 256
  store i32 %v1_10001cf8, i32* @r31, align 4
  %v0_10001cfc = load i32, i32* @r29, align 4
  store i32 %v0_10001cfc, i32* %r3.global-to-local, align 4
  store i32 268442884, i32* @lr, align 4
  %v4_10001d00 = inttoptr i32 %v0_10001cf4 to i32*
  %v5_10001d00 = call i32 @function_100006a8(i32 %v0_10001cfc, i32* %v4_10001d00, i32 6, i32 65535)
  %v0_10001d08 = load i32, i32* @r28, align 4
  store i32 %v5_10001d00, i32* %r24.global-to-local, align 4
  %v0_10001d18 = load i32, i32* @r29, align 4
  store i32 %v0_10001d18, i32* %r3.global-to-local, align 4
  store i32 268442912, i32* @lr, align 4
  %v4_10001d1c = inttoptr i32 %v0_10001d08 to i32*
  %v5_10001d1c = call i32 @function_100006a8(i32 %v0_10001d18, i32* %v4_10001d1c, i32 7, i32 65535)
  %v0_10001d20 = load i32, i32* @r28, align 4
  store i32 %v5_10001d1c, i32* %r27.global-to-local, align 4
  %v0_10001d30 = load i32, i32* @r29, align 4
  store i32 %v0_10001d30, i32* %r3.global-to-local, align 4
  store i32 268442936, i32* @lr, align 4
  %v4_10001d34 = inttoptr i32 %v0_10001d20 to i32*
  %v5_10001d34 = call i32 @function_100006a8(i32 %v0_10001d30, i32* %v4_10001d34, i32 0, i32 512)
  %v0_10001d38 = load i32, i32* @r28, align 4
  store i32 %v5_10001d34, i32* %r16.global-to-local, align 4
  %v0_10001d48 = load i32, i32* @r29, align 4
  store i32 %v0_10001d48, i32* %r3.global-to-local, align 4
  store i32 268442960, i32* @lr, align 4
  %v4_10001d4c = inttoptr i32 %v0_10001d38 to i32*
  %v5_10001d4c = call i32 @function_100006a8(i32 %v0_10001d48, i32* %v4_10001d4c, i32 1, i32 1)
  %v0_10001d50 = load i32, i32* @r28, align 4
  %v1_10001d5c = urem i32 %v5_10001d4c, 256
  store i32 %v1_10001d5c, i32* %r15.global-to-local, align 4
  %v0_10001d60 = load i32, i32* @r29, align 4
  store i32 %v0_10001d60, i32* %r3.global-to-local, align 4
  store i32 268442984, i32* @lr, align 4
  %v4_10001d64 = inttoptr i32 %v0_10001d50 to i32*
  %v5_10001d64 = call i32 @function_100006a8(i32 %v0_10001d60, i32* %v4_10001d64, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001d6c = load i32, i32* @global_var_1001c660.16, align 4
  %v0_10001d70 = load i32, i32* @r28, align 4
  store i32 %v5_10001d64, i32* %r30.global-to-local, align 4
  %v0_10001d7c = load i32, i32* @r29, align 4
  store i32 %v0_10001d7c, i32* %r3.global-to-local, align 4
  store i32 268443012, i32* @lr, align 4
  %v4_10001d80 = inttoptr i32 %v0_10001d70 to i32*
  %v5_10001d80 = call i32 @function_100006a8(i32 %v0_10001d7c, i32* %v4_10001d80, i32 25, i32 %v3_10001d6c)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268443032, i32* @lr, align 4
  %v3_10001d94 = call i32 @function_1000a234(i32 2, i32 3, i32 6)
  store i32 %v3_10001d94, i32* %r3.global-to-local, align 4
  %v3_10001d98 = icmp eq i32 %v3_10001d94, -1
  store i1 %v3_10001d98, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001d94, i32* %r23.global-to-local, align 4
  br i1 %v3_10001d98, label %dec_label_pc_10001f30, label %dec_label_pc_10001da4

dec_label_pc_10001da4:                            ; preds = %dec_label_pc_10001c10
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001db0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268443072, i32* @lr, align 4
  %v4_10001dbc = call i32 @function_1000a1f8(i32 0, i32 3, i32 %v2_10001db0, i32 4)
  store i32 %v4_10001dbc, i32* %r3.global-to-local, align 4
  %v3_10001dc0 = icmp eq i32 %v4_10001dbc, -1
  store i1 %v3_10001dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001dc0, label %dec_label_pc_10001f28, label %dec_label_pc_10001dc8

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001da4
  %v0_10001dc8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc8 = icmp slt i32 %v0_10001dc8, 0
  %v3_10001dc8 = icmp eq i32 %v0_10001dc8, 0
  store i1 %v1_10001dc8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001dc8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001dd4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001dd4 = urem i32 %v0_10001dd4, 65536
  store i32 %v1_10001dd4, i32* %r25.global-to-local, align 4
  %v0_10001dd8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001dd8 = urem i32 %v0_10001dd8, 65536
  store i32 %v1_10001dd8, i32* %r17.global-to-local, align 4
  %v0_10001ddc = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ddc = urem i32 %v0_10001ddc, 65536
  store i32 %v1_10001ddc, i32* %r18.global-to-local, align 4
  %v0_10001de0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001de0 = urem i32 %v0_10001de0, 256
  store i32 %v1_10001de0, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10001dc8, 1
  br i1 %tmp33, label %dec_label_pc_10001f90, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001dc8
  %v0_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = icmp eq i32 %v0_10001de8, 0
  store i1 %v3_10001de8, i1* %cr2_eq.global-to-local, align 1
  %v3_10001dec = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001dec, i1* %cr3_eq.global-to-local, align 1
  %v0_10001df0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001df0 = urem i32 %v0_10001df0, 65536
  %v0_10001dd4.not = or i32 %v0_10001dd4, -65536
  %v1_10001df4 = xor i32 %v0_10001dd4.not, 65535
  store i32 %v1_10001df4, i32* %r11.global-to-local, align 4
  %v1_10001dfc = add nuw nsw i32 %v1_10001df0, 52
  store i32 %v1_10001dfc, i32* %r0.global-to-local, align 4
  %v1_10001e00 = add nuw nsw i32 %v1_10001df0, 28
  store i32 %v1_10001e00, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001df0, 52
  %v1_10001e04 = urem i32 %fold, 65536
  store i32 %v1_10001e04, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001df0, 28
  %v1_10001e08 = urem i32 %fold8, 65536
  store i32 %v1_10001e08, i32* %r24.global-to-local, align 4
  %v1_10001e0c = urem i32 %v1_10001df4, 65536
  store i32 %v1_10001e0c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001df0, 8
  %v1_10001e10 = urem i32 %fold9, 65536
  store i32 %v1_10001e10, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001e44

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001f04
  %v0_10001e1c = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 16
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v1_10001e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001e20 = add i32 %v1_10001e20, 16
  %v3_10001e20 = inttoptr i32 %v2_10001e20 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001f20, %dec_label_pc_10001e1c
  %v3_10001e24 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e24, i32* %r9.global-to-local, align 4
  %v0_10001e28 = load i32, i32* @r28, align 4
  %v1_10001e28 = trunc i32 %v0_10001e28 to i16
  %v2_10001e28 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e28 = add i32 %v2_10001e28, 4
  %v4_10001e28 = inttoptr i32 %v3_10001e28 to i16*
  store i16 %v1_10001e28, i16* %v4_10001e28, align 2
  %v0_10001e2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e2c = add i32 %v0_10001e2c, 1
  store i32 %v1_10001e2c, i32* %r31.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001e30 = trunc i32 %v0_10001e30 to i16
  %v2_10001e30 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e30 = inttoptr i32 %v2_10001e30 to i16*
  store i16 %v1_10001e30, i16* %v3_10001e30, align 2
  %v0_10001e34 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e34 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001e34 = icmp slt i32 %v0_10001e34, %v1_10001e34
  %v4_10001e34 = icmp eq i32 %v0_10001e34, %v1_10001e34
  store i1 %v4_10001e34, i1* %cr7_eq.global-to-local, align 1
  %v0_10001e38 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001e38 = trunc i32 %v0_10001e38 to i16
  %v2_10001e38 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e38 = add i32 %v2_10001e38, 2
  %v4_10001e38 = inttoptr i32 %v3_10001e38 to i16*
  store i16 %v1_10001e38, i16* %v4_10001e38, align 2
  %v0_10001e3c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001e3c, i32* %stack_var_-104, align 4
  br i1 %v2_10001e34, label %dec_label_pc_10001e44, label %dec_label_pc_10001f94

dec_label_pc_10001e44:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001de8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268443216, i32* @lr, align 4
  %v2_10001e4c = call i32 @function_1000a590(i32 1510, i32 4)
  store i32 %v2_10001e4c, i32* %r3.global-to-local, align 4
  %v3_10001e50 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e50, i32* %r9.global-to-local, align 4
  %v0_10001e54 = load i32, i32* @r31, align 4
  %v1_10001e54 = mul i32 %v0_10001e54, 4
  store i32 %v1_10001e54, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001e5c = load i32, i32* %r20.global-to-local, align 4
  %v3_10001e5c = add i32 %v1_10001e5c, %v1_10001e54
  %v4_10001e5c = inttoptr i32 %v3_10001e5c to i32*
  store i32 %v2_10001e4c, i32* %v4_10001e5c, align 4
  %v0_10001e60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e60 = mul i32 %v0_10001e60, 4
  store i32 %v1_10001e60, i32* %r9.global-to-local, align 4
  %v1_10001e64 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001e64 = add i32 %v1_10001e64, %v1_10001e60
  %v3_10001e64 = inttoptr i32 %v2_10001e64 to i32*
  %v4_10001e64 = load i32, i32* %v3_10001e64, align 4
  store i32 %v4_10001e64, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001e6c = inttoptr i32 %v4_10001e64 to i32*
  %v2_10001e6c = load i32, i32* %v1_10001e6c, align 4
  store i32 %v2_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = add i32 %v4_10001e64, 24
  store i32 %v1_10001e70, i32* %r30.global-to-local, align 4
  %v0_10001e74 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001e74 = trunc i32 %v0_10001e74 to i8
  %v3_10001e74 = add i32 %v4_10001e64, 8
  %v4_10001e74 = inttoptr i32 %v3_10001e74 to i8*
  store i8 %v1_10001e74, i8* %v4_10001e74, align 1
  %v0_10001e78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e78 = add i32 %v0_10001e78, 44
  store i32 %v1_10001e78, i32* %r29.global-to-local, align 4
  %v1_10001e7c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001e7c, i32* %r0.global-to-local, align 4
  %v0_10001e80 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e80 = trunc i32 %v0_10001e80 to i16
  %v2_10001e80 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e80 = add i32 %v2_10001e80, 4
  %v4_10001e80 = inttoptr i32 %v3_10001e80 to i16*
  store i16 %v1_10001e80, i16* %v4_10001e80, align 2
  %v1_10001e84 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001e84, i32* %r0.global-to-local, align 4
  %v0_10001e88 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e88 = add i32 %v0_10001e88, 20
  store i32 %v1_10001e88, i32* %r9.global-to-local, align 4
  %v2_10001e8c = inttoptr i32 %v0_10001e88 to i32*
  store i32 %v1_10001e84, i32* %v2_10001e8c, align 4
  %v0_10001e90 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001e90 = trunc i32 %v0_10001e90 to i8
  %v2_10001e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e90 = add i32 %v2_10001e90, 1
  %v4_10001e90 = inttoptr i32 %v3_10001e90 to i8*
  store i8 %v1_10001e90, i8* %v4_10001e90, align 1
  %v0_10001e94 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001e94 = trunc i32 %v0_10001e94 to i16
  %v2_10001e94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e94 = add i32 %v2_10001e94, 2
  %v4_10001e94 = inttoptr i32 %v3_10001e94 to i16*
  store i16 %v1_10001e94, i16* %v4_10001e94, align 2
  %v0_10001e98 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001e98, label %dec_label_pc_10001ea4, label %dec_label_pc_10001e9c

dec_label_pc_10001e9c:                            ; preds = %dec_label_pc_10001e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001ea0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001ea0 = add i32 %v2_10001ea0, 6
  %v4_10001ea0 = inttoptr i32 %v3_10001ea0 to i16*
  store i16 16384, i16* %v4_10001ea0, align 2
  br label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001e44, %dec_label_pc_10001e9c
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001eac = load i32, i32* %r31.global-to-local, align 4
  %v3_10001eac = add i32 %v2_10001eac, 9
  %v4_10001eac = inttoptr i32 %v3_10001eac to i8*
  store i8 47, i8* %v4_10001eac, align 1
  %v0_10001eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001eb0 = trunc i32 %v0_10001eb0 to i16
  %v2_10001eb0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001eb0 = add i32 %v2_10001eb0, 2
  %v4_10001eb0 = inttoptr i32 %v3_10001eb0 to i16*
  store i16 %v1_10001eb0, i16* %v4_10001eb0, align 2
  %v3_10001eb4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001d80, i32* %r11.global-to-local, align 4
  %v1_10001ebc = mul i32 %v3_10001eb4, 24
  store i32 %v1_10001ebc, i32* %r9.global-to-local, align 4
  %v0_10001ec0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001ec0 = add i32 %v0_10001ec0, 24
  %v2_10001ec0 = inttoptr i32 %v1_10001ec0 to i32*
  %v3_10001ec0 = load i32, i32* %v2_10001ec0, align 4
  store i32 %v3_10001ec0, i32* %r0.global-to-local, align 4
  %v2_10001ec4 = add i32 %v0_10001ec0, 12
  %v3_10001ec4 = inttoptr i32 %v2_10001ec4 to i32*
  store i32 %v5_10001d80, i32* %v3_10001ec4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001ecc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ecc = load i32, i32* %r26.global-to-local, align 4
  %v2_10001ecc = add i32 %v1_10001ecc, %v0_10001ecc
  store i32 %v2_10001ecc, i32* %r9.global-to-local, align 4
  %v1_10001ed0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001ed0, i32* %r0.global-to-local, align 4
  %v0_10001ed4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ed4 = add i32 %v0_10001ed4, 16
  %v2_10001ed4 = inttoptr i32 %v1_10001ed4 to i32*
  %v3_10001ed4 = load i32, i32* %v2_10001ed4, align 4
  store i32 %v3_10001ed4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001edc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001edc, i32* %r0.global-to-local, align 4
  %v1_10001ee0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee0 = add i32 %v1_10001ee0, 24
  %v3_10001ee0 = inttoptr i32 %v2_10001ee0 to i32*
  store i32 %v1_10001edc, i32* %v3_10001ee0, align 4
  %v0_10001ee4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001ee4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee4 = add i32 %v1_10001ee4, 16
  %v3_10001ee4 = inttoptr i32 %v2_10001ee4 to i32*
  store i32 %v0_10001ee4, i32* %v3_10001ee4, align 4
  %v0_10001ee8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001ee8 = trunc i32 %v0_10001ee8 to i8
  %v2_10001ee8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ee8 = add i32 %v2_10001ee8, 1
  %v4_10001ee8 = inttoptr i32 %v3_10001ee8 to i8*
  store i8 %v1_10001ee8, i8* %v4_10001ee8, align 1
  %v0_10001eec = load i32, i32* %r24.global-to-local, align 4
  %v1_10001eec = trunc i32 %v0_10001eec to i16
  %v2_10001eec = load i32, i32* %r30.global-to-local, align 4
  %v3_10001eec = add i32 %v2_10001eec, 2
  %v4_10001eec = inttoptr i32 %v3_10001eec to i16*
  store i16 %v1_10001eec, i16* %v4_10001eec, align 2
  %v0_10001ef0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ef0 = trunc i32 %v0_10001ef0 to i16
  %v2_10001ef0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef0 = add i32 %v2_10001ef0, 4
  %v4_10001ef0 = inttoptr i32 %v3_10001ef0 to i16*
  store i16 %v1_10001ef0, i16* %v4_10001ef0, align 2
  %v0_10001ef4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001ef4 = trunc i32 %v0_10001ef4 to i8
  %v2_10001ef4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef4 = add i32 %v2_10001ef4, 8
  %v4_10001ef4 = inttoptr i32 %v3_10001ef4 to i8*
  store i8 %v1_10001ef4, i8* %v4_10001ef4, align 1
  %v0_10001ef8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ef8, label %dec_label_pc_10001f04, label %dec_label_pc_10001efc

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ea4
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10001f00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f00 = add i32 %v2_10001f00, 6
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 16384, i16* %v4_10001f00, align 2
  br label %dec_label_pc_10001f04

dec_label_pc_10001f04:                            ; preds = %dec_label_pc_10001ea4, %dec_label_pc_10001efc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001f08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f08 = add i32 %v2_10001f08, 9
  %v4_10001f08 = inttoptr i32 %v3_10001f08 to i8*
  store i8 17, i8* %v4_10001f08, align 1
  %v0_10001f0c = call i32 @function_10005b08()
  store i32 %v0_10001f0c, i32* %r3.global-to-local, align 4
  %v1_10001f10 = add i32 %v0_10001f0c, -1024
  store i32 %v1_10001f10, i32* %r0.global-to-local, align 4
  %v1_10001f14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f14 = add i32 %v1_10001f14, 12
  %v3_10001f14 = inttoptr i32 %v2_10001f14 to i32*
  store i32 %v0_10001f0c, i32* %v3_10001f14, align 4
  %v0_10001f18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f18 = sub i32 -1, %v0_10001f18
  store i32 %v1_10001f18, i32* %r0.global-to-local, align 4
  %v0_10001f1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001f1c, label %dec_label_pc_10001f20, label %dec_label_pc_10001e1c

dec_label_pc_10001f20:                            ; preds = %dec_label_pc_10001f04
  %v1_10001f20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 16
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f18, i32* %v3_10001f20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001f28:                            ; preds = %dec_label_pc_10001da4
  %v0_10001f28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001f28, i32* %r3.global-to-local, align 4
  store i32 268443440, i32* @lr, align 4
  %v0_10001f2c = call i32 @function_10009518()
  store i32 %v0_10001f2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f30

dec_label_pc_10001f30:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001f28
  store i32 %v0_10001c28, i32* %r0.global-to-local, align 4
  %v1_10001f44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001c18)
  store i32 %v0_10001c5c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c64, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c6c, i32* %r30.global-to-local, align 4
  store i32 %v0_10001c70, i32* %r31.global-to-local, align 4
  %v0_10001f8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f8c

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001dc8
  %v3_10001f90 = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001f90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001f90
  store i32 %v5_10001d80, i32* %r0.global-to-local, align 4
  %v0_10001f98 = load i32, i32* %r15.global-to-local, align 4
  %v3_10001f98 = icmp eq i32 %v0_10001f98, 0
  store i1 %v3_10001f98, i1* %cr2_eq.global-to-local, align 1
  %v0_10001f9c = load i32, i32* %r16.global-to-local, align 4
  %v1_10001f9c = add i32 %v0_10001f9c, 8
  store i32 %v1_10001f9c, i32* %r22.global-to-local, align 4
  %v1_10001fa0 = add i32 %v0_10001f9c, 52
  store i32 %v1_10001fa0, i32* %r24.global-to-local, align 4
  %v3_10001fa4 = icmp eq i32 %v5_10001d80, -1
  store i1 %v3_10001fa4, i1* %cr7_eq.global-to-local, align 1
  %v0_10001fa8 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa8, i32* %r3.global-to-local, align 4
  %v1_10001fac = mul i32 %v0_10001fa8, 268435456
  store i32 %v1_10001fac, i32* %r21.global-to-local, align 4
  %v0_10001fb0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001fb0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001fb0.outer

dec_label_pc_10001fb0.outer:                      ; preds = %dec_label_pc_100020b8, %dec_label_pc_10001f94
  %v1_10001fb0.ph = phi i1 [ %v1_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v1_100020b8, %dec_label_pc_100020b8 ]
  %v0_10001fb0.ph = phi i1 [ %v0_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v0_100020b8, %dec_label_pc_100020b8 ]
  %v2_10001fb0 = or i1 %v1_10001fb0.ph, %v0_10001fb0.ph
  br label %dec_label_pc_10001fb0

dec_label_pc_10001fb0:                            ; preds = %dec_label_pc_10001fb0.outer, %dec_label_pc_10001fb0
  br i1 %v2_10001fb0, label %dec_label_pc_10001fb0, label %dec_label_pc_10001fb4

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001fb0, %dec_label_pc_100020b8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001fc4

dec_label_pc_10001fc4:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_10001fb4
  %v0_10001fc4 = phi i32 [ %v1_100020a8, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_10001fb4 ]
  %v1_10001fc4 = mul i32 %v0_10001fc4, 24
  store i32 %v1_10001fc4, i32* %r0.global-to-local, align 4
  %v1_10001fc8 = mul i32 %v0_10001fc4, 4
  store i32 %v1_10001fc8, i32* %r11.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r20.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, %v1_10001fc8
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  %v4_10001fcc = load i32, i32* %v3_10001fcc, align 4
  store i32 %v4_10001fcc, i32* %r28.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, %v1_10001fc4
  %v1_10001fd4 = add i32 %v2_10001fd0, 20
  %v2_10001fd4 = inttoptr i32 %v1_10001fd4 to i8*
  %v3_10001fd4 = load i8, i8* %v2_10001fd4, align 1
  %v4_10001fd4 = zext i8 %v3_10001fd4 to i32
  store i32 %v4_10001fd4, i32* %r9.global-to-local, align 4
  %v1_10001fd8 = add i32 %v4_10001fcc, 24
  store i32 %v1_10001fd8, i32* @r31, align 4
  %v1_10001fdc = add i32 %v4_10001fcc, 44
  store i32 %v1_10001fdc, i32* @r30, align 4
  %v3_10001fe0 = icmp eq i8 %v3_10001fd4, 31
  store i1 %v3_10001fe0, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001fd4, 32
  br i1 %tmp35, label %dec_label_pc_100020c0, label %dec_label_pc_10001fe8

dec_label_pc_10001fe8:                            ; preds = %dec_label_pc_10001fc4
  %v0_10001fe8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001fe8 = mul i32 %v0_10001fe8, 16
  %v2_10001fe8 = udiv i32 %v0_10001fe8, 268435456
  %v3_10001fe8 = or i32 %v2_10001fe8, %v1_10001fe8
  store i32 %v3_10001fe8, i32* %r21.global-to-local, align 4
  %v1_10001fec = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001fe8)
  %v1_10001ff0 = mul nuw i32 %v2_10001fe8, 268435456
  %v2_10001ff0 = urem i32 %v0_10001fe8, 268435456
  %v3_10001ff0 = or i32 %v1_10001ff0, %v2_10001ff0
  store i32 %v3_10001ff0, i32* %r21.global-to-local, align 4
  %v0_10001ff4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001ff4, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 65535, i32* @r29, align 4
  %v0_10002000 = load i32, i32* %r25.global-to-local, align 4
  %v4_10002000 = icmp eq i32 %v0_10002000, 65535
  store i1 %v4_10002000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002000, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_10002008:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v1_10002008 = phi i32 [ %v1_10002104, %dec_label_pc_100020f4 ], [ 65535, %dec_label_pc_10001ff8 ]
  %v0_10002008 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002008 = icmp eq i32 %v0_10002008, %v1_10002008
  store i1 %v4_10002008, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002008, label %dec_label_pc_1000212c, label %dec_label_pc_10002010

dec_label_pc_10002010:                            ; preds = %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge, %dec_label_pc_10002008
  %v1_10002010 = phi i32 [ %v1_10002010.pre, %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge ], [ %v1_10002008, %dec_label_pc_10002008 ]
  %v0_10002010 = load i32, i32* %r18.global-to-local, align 4
  %v4_10002010 = icmp eq i32 %v0_10002010, %v1_10002010
  store i1 %v4_10002010, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002010, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_10002018 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002018, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_1000201c:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_1000201c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000201c = add i32 %v0_1000201c, 16
  %v2_1000201c = inttoptr i32 %v1_1000201c to i32*
  %v3_1000201c = load i32, i32* %v2_1000201c, align 4
  store i32 %v3_1000201c, i32* %r0.global-to-local, align 4
  %v1_10002020 = load i32, i32* @r31, align 4
  %v2_10002020 = add i32 %v1_10002020, 16
  %v3_10002020 = inttoptr i32 %v2_10002020 to i32*
  store i32 %v3_1000201c, i32* %v3_10002020, align 4
  %v0_10002024 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002024, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002028:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148, %dec_label_pc_10002154
  %v0_10002028 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002028 = trunc i32 %v0_10002028 to i16
  %v2_10002028 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002028 = add i32 %v2_10002028, 10
  %v4_10002028 = inttoptr i32 %v3_10002028 to i16*
  store i16 %v1_10002028, i16* %v4_10002028, align 2
  %v0_10002030 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002030, i32* @r3, align 4
  %v2_10002034 = call i32 @function_100043cc(i32 %v0_10002030, i32 20)
  %v3_10002034 = trunc i32 %v2_10002034 to i16
  %v4_1000203c = add i32 %v0_10002030, 10
  %v5_1000203c = inttoptr i32 %v4_1000203c to i16*
  store i16 %v3_10002034, i16* %v5_1000203c, align 2
  %v0_10002040 = load i32, i32* @r31, align 4
  store i32 %v0_10002040, i32* @r3, align 4
  %v0_10002044 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002044 = trunc i32 %v0_10002044 to i16
  %v3_10002044 = add i32 %v0_10002040, 10
  %v4_10002044 = inttoptr i32 %v3_10002044 to i16*
  store i16 %v1_10002044, i16* %v4_10002044, align 2
  %v2_10002048 = call i32 @function_100043cc(i32 %v0_10002040, i32 20)
  %v3_10002048 = trunc i32 %v2_10002048 to i16
  %v0_1000204c = load i32, i32* @r30, align 4
  store i32 %v0_1000204c, i32* @r4, align 4
  %v3_10002050 = load i32, i32* @r31, align 4
  %v4_10002050 = add i32 %v3_10002050, 10
  %v5_10002050 = inttoptr i32 %v4_10002050 to i16*
  store i16 %v3_10002048, i16* %v5_10002050, align 2
  %v0_10002054 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002058 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002058 = trunc i32 %v0_10002058 to i16
  %v2_10002058 = load i32, i32* @r30, align 4
  %v3_10002058 = add i32 %v2_10002058, 6
  %v4_10002058 = inttoptr i32 %v3_10002058 to i16*
  store i16 %v1_10002058, i16* %v4_10002058, align 2
  %v0_1000205c = load i32, i32* @r31, align 4
  store i32 %v0_1000205c, i32* %r3.global-to-local, align 4
  %v0_10002060 = load i32, i32* @r30, align 4
  %v1_10002060 = add i32 %v0_10002060, 4
  %v2_10002060 = inttoptr i32 %v1_10002060 to i16*
  %v3_10002060 = load i16, i16* %v2_10002060, align 2
  %v4_10002060 = zext i16 %v3_10002060 to i32
  %v4_10002064 = call i32 @function_10004430(i32 %v0_1000205c, i32 %v0_1000204c, i32 %v4_10002060, i32 %v0_10002054)
  %v5_10002064 = trunc i32 %v4_10002064 to i16
  store i32 %v4_10002064, i32* %r3.global-to-local, align 4
  %v3_10002068 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002068, i32* %r0.global-to-local, align 4
  %v0_1000206c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000206c = add i32 %v0_1000206c, 16
  %v2_1000206c = inttoptr i32 %v1_1000206c to i32*
  %v3_1000206c = load i32, i32* %v2_1000206c, align 4
  store i32 %v3_1000206c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002074 = mul i32 %v3_10002068, 24
  store i32 %v1_10002074, i32* %r0.global-to-local, align 4
  %v3_10002078 = load i32, i32* @r30, align 4
  %v4_10002078 = add i32 %v3_10002078, 6
  %v5_10002078 = inttoptr i32 %v4_10002078 to i16*
  store i16 %v5_10002064, i16* %v5_10002078, align 2
  %v0_1000207c = load i32, i32* %r28.global-to-local, align 4
  %v0_10002080 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  %v0_10002084 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002084 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002084 = add i32 %v1_10002084, %v0_10002084
  %v0_10002088 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002088 = trunc i32 %v0_10002088 to i16
  %v5_10002088 = inttoptr i32 %v2_10002084 to i16*
  store i16 %v3_10002088, i16* %v5_10002088, align 2
  %v0_1000208c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000208c = add i32 %v2_10002084, 4
  %v3_1000208c = inttoptr i32 %v2_1000208c to i32*
  store i32 %v0_1000208c, i32* %v3_1000208c, align 4
  %v0_10002090 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002094 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002094 = trunc i32 %v0_10002094 to i16
  %v3_10002094 = add i32 %v2_10002084, 2
  %v4_10002094 = inttoptr i32 %v3_10002094 to i16*
  store i16 %v1_10002094, i16* %v4_10002094, align 2
  store i32 268443812, i32* @lr, align 4
  %v6_100020a0 = call i32 @function_1000a1b8(i32 %v0_10002080, i32 %v0_1000207c, i32 %v0_10002090, i32 16384, i32 %v2_10002084, i32 16)
  store i32 %v6_100020a0, i32* %r3.global-to-local, align 4
  %v3_100020a4 = load i32, i32* %stack_var_-104, align 4
  %v1_100020a8 = add i32 %v3_100020a4, 1
  store i32 %v1_100020a8, i32* %r9.global-to-local, align 4
  %v1_100020ac = load i32, i32* %r19.global-to-local, align 4
  %v2_100020ac = icmp slt i32 %v1_100020a8, %v1_100020ac
  %v4_100020ac = icmp eq i32 %v1_100020a8, %v1_100020ac
  store i1 %v4_100020ac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100020a8, i32* %stack_var_-104, align 4
  br i1 %v2_100020ac, label %dec_label_pc_10001fc4, label %dec_label_pc_100020b8

dec_label_pc_100020b8:                            ; preds = %dec_label_pc_10002028
  %v0_100020b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100020b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100020b8 = or i1 %v0_100020b8, %v1_100020b8
  br i1 %v2_100020b8, label %dec_label_pc_10001fb0.outer, label %dec_label_pc_10001fb4

dec_label_pc_100020c0:                            ; preds = %dec_label_pc_10001fc4
  %v1_100020c0 = add i32 %v2_10001fd0, 16
  %v2_100020c0 = inttoptr i32 %v1_100020c0 to i32*
  %v3_100020c0 = load i32, i32* %v2_100020c0, align 4
  store i32 %v3_100020c0, i32* %r29.global-to-local, align 4
  %v0_100020c4 = call i32 @function_10005b08()
  store i32 %v0_100020c4, i32* %r3.global-to-local, align 4
  %v3_100020c8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100020c8, i32* %r9.global-to-local, align 4
  %v0_100020cc = load i32, i32* %r21.global-to-local, align 4
  %v1_100020cc = mul i32 %v0_100020cc, 16
  %v2_100020cc = udiv i32 %v0_100020cc, 268435456
  %v3_100020cc = or i32 %v2_100020cc, %v1_100020cc
  store i32 %v3_100020cc, i32* %r21.global-to-local, align 4
  %v1_100020d0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100020cc)
  %v1_100020d4 = mul nuw i32 %v2_100020cc, 268435456
  %v2_100020d4 = urem i32 %v0_100020cc, 268435456
  %v3_100020d4 = or i32 %v1_100020d4, %v2_100020d4
  store i32 %v3_100020d4, i32* %r21.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100020d8 = mul i32 %v0_100020d8, 24
  %v1_100020dc = load i32, i32* %r26.global-to-local, align 4
  %v2_100020dc = add i32 %v1_100020dc, %v1_100020d8
  store i32 %v2_100020dc, i32* %r9.global-to-local, align 4
  %v1_100020e0 = add i32 %v2_100020dc, 20
  %v2_100020e0 = inttoptr i32 %v1_100020e0 to i8*
  %v3_100020e0 = load i8, i8* %v2_100020e0, align 1
  %v4_100020e0 = zext i8 %v3_100020e0 to i32
  store i32 %v4_100020e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100020e0, 64
  %v2_100020e4 = zext i8 %tmp to i32
  %v3_100020e4 = lshr i32 %v0_100020c4, %v2_100020e4
  store i32 %v3_100020e4, i32* %r3.global-to-local, align 4
  %v0_100020e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100020e8 = add i32 %v3_100020e4, %v0_100020e8
  store i32 %v2_100020e8, i32* %r29.global-to-local, align 4
  %v1_100020ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100020ec = add i32 %v1_100020ec, 16
  %v3_100020ec = inttoptr i32 %v2_100020ec to i32*
  store i32 %v2_100020e8, i32* %v3_100020ec, align 4
  %v0_100020f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100020f0, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_100020f4:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100020f8 = call i32 @function_10005b08()
  store i32 %v0_100020f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002100 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002100 = add i32 %v1_10002100, 12
  %v3_10002100 = inttoptr i32 %v2_10002100 to i32*
  store i32 %v0_100020f8, i32* %v3_10002100, align 4
  %v0_10002104 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002104 = load i32, i32* @r29, align 4
  %v4_10002104 = icmp eq i32 %v0_10002104, %v1_10002104
  store i1 %v4_10002104, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002104, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_1000210c:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v0_1000210c = call i32 @function_10005b08()
  %v0_10002110 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002110 = load i32, i32* @r29, align 4
  %v4_10002110 = icmp eq i32 %v0_10002110, %v1_10002110
  store i1 %v4_10002110, i1* %cr7_eq.global-to-local, align 1
  %v1_10002114 = urem i32 %v0_1000210c, 65536
  store i32 %v1_10002114, i32* %r3.global-to-local, align 4
  %v1_10002118 = add nsw i32 %v1_10002114, -1000
  store i32 %v1_10002118, i32* %r0.global-to-local, align 4
  %v1_1000211c = trunc i32 %v0_1000210c to i16
  %v2_1000211c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000211c = add i32 %v2_1000211c, 4
  %v4_1000211c = inttoptr i32 %v3_1000211c to i16*
  store i16 %v1_1000211c, i16* %v4_1000211c, align 2
  %v0_10002120 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002120 = sub i32 -1, %v0_10002120
  store i32 %v1_10002120, i32* %r0.global-to-local, align 4
  %v1_10002124 = trunc i32 %v1_10002120 to i16
  %v2_10002124 = load i32, i32* @r31, align 4
  %v3_10002124 = add i32 %v2_10002124, 4
  %v4_10002124 = inttoptr i32 %v3_10002124 to i16*
  store i16 %v1_10002124, i16* %v4_10002124, align 2
  br i1 %v4_10002110, label %dec_label_pc_1000212c, label %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge

dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge: ; preds = %dec_label_pc_1000210c
  %v1_10002010.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002010

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_1000210c, %dec_label_pc_10002008
  %v0_1000212c = call i32 @function_10005b08()
  %v1_1000212c = trunc i32 %v0_1000212c to i16
  store i32 %v0_1000212c, i32* %r3.global-to-local, align 4
  %v0_10002130 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002130 = load i32, i32* @r29, align 4
  %v4_10002130 = icmp eq i32 %v0_10002130, %v1_10002130
  store i1 %v4_10002130, i1* %cr7_eq.global-to-local, align 1
  %v3_10002134 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002134 = add i32 %v3_10002134, 44
  %v5_10002134 = inttoptr i32 %v4_10002134 to i16*
  store i16 %v1_1000212c, i16* %v5_10002134, align 2
  br i1 %v4_10002130, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_1000213c:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_1000213c = call i32 @function_10005b08()
  %v1_1000213c = trunc i32 %v0_1000213c to i16
  store i32 %v0_1000213c, i32* %r3.global-to-local, align 4
  %v3_10002140 = load i32, i32* @r30, align 4
  %v4_10002140 = add i32 %v3_10002140, 2
  %v5_10002140 = inttoptr i32 %v4_10002140 to i16*
  store i16 %v1_1000213c, i16* %v5_10002140, align 2
  %v0_10002144 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002144, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_10002148:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_10002148 = call i32 @function_10005b08()
  store i32 %v0_10002148, i32* %r3.global-to-local, align 4
  %v1_1000214c = load i32, i32* @r31, align 4
  %v2_1000214c = add i32 %v1_1000214c, 16
  %v3_1000214c = inttoptr i32 %v2_1000214c to i32*
  store i32 %v0_10002148, i32* %v3_1000214c, align 4
  %v0_10002150 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002150, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002154:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148
  %v0_10002154 = load i32, i32* @r30, align 4
  %v1_10002154 = add i32 %v0_10002154, 8
  store i32 %v1_10002154, i32* @r3, align 4
  %v0_10002158 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002158, i32* @r4, align 4
  %v0_1000215c = call i32 @function_10005cdc()
  store i32 %v0_1000215c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002028

; uselistorder directives
  uselistorder i32 %v0_1000213c, { 1, 0 }
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_10002120, { 1, 0 }
  uselistorder i32 %v1_10002114, { 1, 0 }
  uselistorder i32 %v0_1000210c, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v0_100020cc, { 2, 1, 0 }
  uselistorder i1 %v1_100020b8, { 1, 0 }
  uselistorder i1 %v0_100020b8, { 1, 0 }
  uselistorder i32 %v1_100020a8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002084, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002064, { 1, 0 }
  uselistorder i32 %v0_10001fe8, { 2, 1, 0 }
  uselistorder i32 %v4_10001fcc, { 1, 0, 2 }
  uselistorder i32 %v1_10001fc8, { 1, 0 }
  uselistorder i32 %v1_10001f18, { 1, 0 }
  uselistorder i32 %v1_10001e60, { 1, 0 }
  uselistorder i32 %v1_10001e54, { 1, 0 }
  uselistorder i32 %v1_10001df0, { 1, 0 }
  uselistorder i32 %v0_10001df0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001de0, { 1, 2, 0 }
  uselistorder i32 %v0_10001dd4, { 1, 0 }
  uselistorder i32 %v5_10001d80, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10002154, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10001f94, { 1, 0 }
  uselistorder label %dec_label_pc_10001f30, { 1, 0 }
  uselistorder label %dec_label_pc_10001f04, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
}

define i32 @function_10002164(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002164:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10002168 = load i32, i32* @lr, align 4
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v0_1000216c = call i32 @__asm_mfcr()
  store i32 %v0_1000216c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_1000216c, i32* %r23.global-to-local, align 4
  %v0_100021a4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100021ac = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100021b4 = load i32, i32* @r30, align 4
  store i32 268444116, i32* @lr, align 4
  %v2_100021d0 = call i32 @function_1000a590(i32 4, i32 4)
  store i32 %v2_100021d0, i32* %r24.global-to-local, align 4
  %v0_100021d8 = load i32, i32* @r28, align 4
  %v0_100021dc = load i32, i32* @r29, align 4
  store i32 %v0_100021dc, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268444140, i32* @lr, align 4
  %v4_100021e8 = inttoptr i32 %v0_100021d8 to i32*
  %v5_100021e8 = call i32 @function_100006a8(i32 %v0_100021dc, i32* %v4_100021e8, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100021f8 = load i32, i32* @r28, align 4
  %v1_100021fc = urem i32 %v5_100021e8, 256
  store i32 %v1_100021fc, i32* %r19.global-to-local, align 4
  %v0_10002200 = load i32, i32* @r29, align 4
  store i32 %v0_10002200, i32* %r3.global-to-local, align 4
  store i32 268444168, i32* @lr, align 4
  %v4_10002204 = inttoptr i32 %v0_100021f8 to i32*
  %v5_10002204 = call i32 @function_100006a8(i32 %v0_10002200, i32* %v4_10002204, i32 3, i32 65535)
  %v0_10002208 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10002204, i32* %r21.global-to-local, align 4
  %v0_10002218 = load i32, i32* @r29, align 4
  store i32 %v0_10002218, i32* %r3.global-to-local, align 4
  store i32 268444192, i32* @lr, align 4
  %v4_1000221c = inttoptr i32 %v0_10002208 to i32*
  %v5_1000221c = call i32 @function_100006a8(i32 %v0_10002218, i32* %v4_1000221c, i32 4, i32 64)
  %v0_10002220 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_1000222c = urem i32 %v5_1000221c, 256
  store i32 %v1_1000222c, i32* %r26.global-to-local, align 4
  %v0_10002230 = load i32, i32* @r29, align 4
  store i32 %v0_10002230, i32* %r3.global-to-local, align 4
  store i32 268444216, i32* @lr, align 4
  %v4_10002234 = inttoptr i32 %v0_10002220 to i32*
  %v5_10002234 = call i32 @function_100006a8(i32 %v0_10002230, i32* %v4_10002234, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10002244 = load i32, i32* @r28, align 4
  %v1_10002248 = urem i32 %v5_10002234, 256
  store i32 %v1_10002248, i32* @r31, align 4
  %v0_1000224c = load i32, i32* @r29, align 4
  store i32 %v0_1000224c, i32* %r3.global-to-local, align 4
  store i32 268444244, i32* @lr, align 4
  %v4_10002250 = inttoptr i32 %v0_10002244 to i32*
  %v5_10002250 = call i32 @function_100006a8(i32 %v0_1000224c, i32* %v4_10002250, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_1000225c = load i32, i32* @r28, align 4
  store i32 %v5_10002250, i32* %r22.global-to-local, align 4
  %v0_10002264 = load i32, i32* @r29, align 4
  store i32 %v0_10002264, i32* %r3.global-to-local, align 4
  store i32 268444268, i32* @lr, align 4
  %v4_10002268 = inttoptr i32 %v0_1000225c to i32*
  %v5_10002268 = call i32 @function_100006a8(i32 %v0_10002264, i32* %v4_10002268, i32 7, i32 27015)
  store i32 %v5_10002268, i32* %r29.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 268444280, i32* @lr, align 4
  %v1_10002274 = call i32 @function_100087e0(i32 20)
  store i32 20, i32* %r3.global-to-local, align 4
  %v3_10002280 = call i32 @function_1000872c(i32 20, i32* nonnull %stack_var_-84)
  store i32 %v3_10002280, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444312, i32* @lr, align 4
  %v3_10002294 = call i32 @function_1000a234(i32 2, i32 3, i32 17)
  store i32 %v3_10002294, i32* %r3.global-to-local, align 4
  %v3_10002298 = icmp eq i32 %v3_10002294, -1
  store i32 %v3_10002294, i32* %r25.global-to-local, align 4
  br i1 %v3_10002298, label %dec_label_pc_100024e8, label %dec_label_pc_100022a4

dec_label_pc_100022a4:                            ; preds = %dec_label_pc_10002164
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_100022b0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_100022b0, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268444352, i32* @lr, align 4
  %v4_100022bc = call i32 @function_1000a1f8(i32 0, i32 3, i32 %v2_100022b0, i32 4)
  store i32 %v4_100022bc, i32* %r3.global-to-local, align 4
  %v3_100022c0 = icmp eq i32 %v4_100022bc, -1
  br i1 %v3_100022c0, label %dec_label_pc_100024e0, label %dec_label_pc_100022c8

dec_label_pc_100022c8:                            ; preds = %dec_label_pc_100022a4
  %v0_100022c8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100022c8 = icmp slt i32 %v0_100022c8, 0
  %v3_100022c8 = icmp eq i32 %v0_100022c8, 0
  store i1 %v1_100022c8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100022c8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100022d0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100022d0 = urem i32 %v0_100022d0, 65536
  store i32 %v1_100022d0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_100022d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100022d8 = urem i32 %v0_100022d8, 65536
  store i32 %v1_100022d8, i32* %r21.global-to-local, align 4
  %v0_100022dc = load i32, i32* %r29.global-to-local, align 4
  %v1_100022dc = urem i32 %v0_100022dc, 65536
  store i32 %v1_100022dc, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100022c8, 1
  br i1 %tmp32, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %dec_label_pc_100022c8
  %v0_100022e4 = load i32, i32* @r31, align 4
  %v3_100022e4 = icmp eq i32 %v0_100022e4, 0
  store i1 %v3_100022e4, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10002304

dec_label_pc_10002304:                            ; preds = %dec_label_pc_10002360, %dec_label_pc_100022e4
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268444432, i32* @lr, align 4
  %v2_1000230c = call i32 @function_1000a590(i32 128, i32 1)
  store i32 %v2_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002310, i32* %r0.global-to-local, align 4
  %v0_10002314 = load i32, i32* @r31, align 4
  %v1_10002314 = mul i32 %v0_10002314, 4
  store i32 %v1_10002314, i32* %r9.global-to-local, align 4
  %v0_10002318 = load i32, i32* @r30, align 4
  %v2_1000231c = load i32, i32* %r24.global-to-local, align 4
  %v3_1000231c = add i32 %v2_1000231c, %v1_10002314
  %v4_1000231c = inttoptr i32 %v3_1000231c to i32*
  store i32 %v2_1000230c, i32* %v4_1000231c, align 4
  %v0_10002320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002320 = mul i32 %v0_10002320, 4
  store i32 %v1_10002320, i32* %r0.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002324 = add i32 %v0_10002324, %v1_10002320
  %v3_10002324 = inttoptr i32 %v2_10002324 to i32*
  %v4_10002324 = load i32, i32* %v3_10002324, align 4
  store i32 %v4_10002324, i32* %r10.global-to-local, align 4
  %v1_10002328 = inttoptr i32 %v4_10002324 to i32*
  %v2_10002328 = load i32, i32* %v1_10002328, align 4
  store i32 %v2_10002328, i32* %r0.global-to-local, align 4
  %v1_1000232c = add i32 %v4_10002324, 32
  store i32 %v1_1000232c, i32* %r3.global-to-local, align 4
  %v0_10002330 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  %v3_10002330 = add i32 %v4_10002324, 4
  %v4_10002330 = inttoptr i32 %v3_10002330 to i16*
  store i16 %v1_10002330, i16* %v4_10002330, align 2
  %v0_10002334 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002334 = add i32 %v0_10002334, 20
  store i32 %v1_10002334, i32* %r8.global-to-local, align 4
  %v1_10002338 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002338, i32* %r0.global-to-local, align 4
  %v1_1000233c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000233c, i32* %r0.global-to-local, align 4
  %v1_10002340 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002340 = inttoptr i32 %v1_10002340 to i32*
  store i32 %v1_1000233c, i32* %v2_10002340, align 4
  %v0_10002344 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002344 = trunc i32 %v0_10002344 to i8
  %v2_10002344 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002344 = add i32 %v2_10002344, 1
  %v4_10002344 = inttoptr i32 %v3_10002344 to i8*
  store i8 %v1_10002344, i8* %v4_10002344, align 1
  %v3_10002348 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002348, i32* %r9.global-to-local, align 4
  %v0_1000234c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000234c = trunc i32 %v0_1000234c to i8
  %v2_1000234c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000234c = add i32 %v2_1000234c, 8
  %v4_1000234c = inttoptr i32 %v3_1000234c to i8*
  store i8 %v1_1000234c, i8* %v4_1000234c, align 1
  %v0_10002350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002350 = add i32 %v0_10002350, 32
  store i32 %v1_10002350, i32* %r9.global-to-local, align 4
  %v1_10002354 = trunc i32 %v1_10002350 to i16
  %v2_10002354 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002354 = add i32 %v2_10002354, 2
  %v4_10002354 = inttoptr i32 %v3_10002354 to i16*
  store i16 %v1_10002354, i16* %v4_10002354, align 2
  %v0_10002358 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002358, label %dec_label_pc_10002360, label %dec_label_pc_1000235c

dec_label_pc_1000235c:                            ; preds = %dec_label_pc_10002304
  %v0_1000235c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000235c = trunc i32 %v0_1000235c to i16
  %v2_1000235c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000235c = add i32 %v2_1000235c, 6
  %v4_1000235c = inttoptr i32 %v3_1000235c to i16*
  store i16 %v1_1000235c, i16* %v4_1000235c, align 2
  br label %dec_label_pc_10002360

dec_label_pc_10002360:                            ; preds = %dec_label_pc_10002304, %dec_label_pc_1000235c
  %v0_10002360 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002360 = trunc i32 %v0_10002360 to i8
  %v2_10002360 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002360 = add i32 %v2_10002360, 9
  %v4_10002360 = inttoptr i32 %v3_10002360 to i8*
  store i8 %v1_10002360, i8* %v4_10002360, align 1
  %v0_10002364 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002364 = trunc i32 %v0_10002364 to i16
  %v2_10002364 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002364 = add i32 %v2_10002364, 20
  %v4_10002364 = inttoptr i32 %v3_10002364 to i16*
  store i16 %v1_10002364, i16* %v4_10002364, align 2
  %v3_10002368 = load i32, i32* %stack_var_-88, align 4
  %v3_1000236c = load i32, i32* @global_var_1001c660.16, align 4
  store i32 %v3_1000236c, i32* %r0.global-to-local, align 4
  %v1_10002370 = mul i32 %v3_10002368, 24
  store i32 %v1_10002370, i32* %r9.global-to-local, align 4
  %v0_10002374 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002374 = trunc i32 %v0_10002374 to i16
  %v2_10002374 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002374 = add i32 %v2_10002374, 2
  %v4_10002374 = inttoptr i32 %v3_10002374 to i16*
  store i16 %v1_10002374, i16* %v4_10002374, align 2
  %v0_10002378 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002378 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002378 = add i32 %v1_10002378, 12
  %v3_10002378 = inttoptr i32 %v2_10002378 to i32*
  store i32 %v0_10002378, i32* %v3_10002378, align 4
  %v0_1000237c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000237c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000237c = add i32 %v1_1000237c, %v0_1000237c
  store i32 %v2_1000237c, i32* %r9.global-to-local, align 4
  %v1_10002380 = add i32 %v2_1000237c, 16
  %v2_10002380 = inttoptr i32 %v1_10002380 to i32*
  %v3_10002380 = load i32, i32* %v2_10002380, align 4
  store i32 %v3_10002380, i32* %r0.global-to-local, align 4
  %v3_10002384 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002384, i32* %r11.global-to-local, align 4
  %v0_10002388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002388 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002388 = add i32 %v1_10002388, 28
  %v3_10002388 = inttoptr i32 %v2_10002388 to i32*
  store i32 %v0_10002388, i32* %v3_10002388, align 4
  %v0_1000238c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000238c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000238c = add i32 %v1_1000238c, 16
  %v3_1000238c = inttoptr i32 %v2_1000238c to i32*
  store i32 %v0_1000238c, i32* %v3_1000238c, align 4
  %v0_10002390 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002390 = add i32 %v0_10002390, 12
  store i32 %v1_10002390, i32* %r11.global-to-local, align 4
  %v1_10002394 = trunc i32 %v1_10002390 to i16
  %v2_10002394 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002394 = add i32 %v2_10002394, 4
  %v4_10002394 = inttoptr i32 %v3_10002394 to i16*
  store i16 %v1_10002394, i16* %v4_10002394, align 2
  %v3_10002398 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002398, i32* %r5.global-to-local, align 4
  store i32 268444576, i32* @lr, align 4
  %v3_1000239c = call i32 @function_10008ddc(i32 %v3_10002398, i32 %v0_10002318, i32 %v3_10002398)
  store i32 %v3_1000239c, i32* %r3.global-to-local, align 4
  %v3_100023a0 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_100023a0, i32* %r9.global-to-local, align 4
  %v1_100023a4 = add i32 %v3_100023a0, 1
  %v1_100023a8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023a8 = icmp slt i32 %v1_100023a4, %v1_100023a8
  store i32 %v1_100023a4, i32* %stack_var_-88, align 4
  br i1 %v2_100023a8, label %dec_label_pc_10002304, label %dec_label_pc_100023b4.preheader.loopexit

dec_label_pc_100023b4.preheader.loopexit:         ; preds = %dec_label_pc_10002360
  %v0_100023b4.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100023b4.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100023b4.outer

dec_label_pc_100023b4.outer:                      ; preds = %dec_label_pc_10002480, %dec_label_pc_100022c8, %dec_label_pc_100023b4.preheader.loopexit
  %v1_100023b4.ph34 = phi i1 [ %v1_100022c8, %dec_label_pc_100022c8 ], [ %v1_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v1_10002480, %dec_label_pc_10002480 ]
  %v0_100023b4.ph35 = phi i1 [ %v3_100022c8, %dec_label_pc_100022c8 ], [ %v0_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v0_10002480, %dec_label_pc_10002480 ]
  %v2_100023b4 = or i1 %v1_100023b4.ph34, %v0_100023b4.ph35
  br label %dec_label_pc_100023b4

dec_label_pc_100023b4:                            ; preds = %dec_label_pc_100023b4.outer, %dec_label_pc_100023b4
  br i1 %v2_100023b4, label %dec_label_pc_100023b4, label %dec_label_pc_100023b8

dec_label_pc_100023b8:                            ; preds = %dec_label_pc_100023b4, %dec_label_pc_10002480
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100023c8

dec_label_pc_100023c8:                            ; preds = %dec_label_pc_10002408, %dec_label_pc_100023b8
  %v0_100023d8 = phi i32 [ %v1_10002470, %dec_label_pc_10002408 ], [ 0, %dec_label_pc_100023b8 ]
  %v1_100023c8 = mul i32 %v0_100023d8, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, %v1_100023c8
  store i32 %v2_100023d4, i32* %r10.global-to-local, align 4
  %v1_100023d8 = mul i32 %v0_100023d8, 4
  store i32 %v1_100023d8, i32* %r0.global-to-local, align 4
  %v1_100023dc = add i32 %v2_100023d4, 20
  %v2_100023dc = inttoptr i32 %v1_100023dc to i8*
  %v3_100023dc = load i8, i8* %v2_100023dc, align 1
  %v4_100023dc = zext i8 %v3_100023dc to i32
  store i32 %v4_100023dc, i32* %r9.global-to-local, align 4
  %v0_100023e0 = load i32, i32* %r24.global-to-local, align 4
  %v2_100023e0 = add i32 %v0_100023e0, %v1_100023d8
  %v3_100023e0 = inttoptr i32 %v2_100023e0 to i32*
  %v4_100023e0 = load i32, i32* %v3_100023e0, align 4
  store i32 %v4_100023e0, i32* %r28.global-to-local, align 4
  %v1_100023e8 = add i32 %v4_100023e0, 20
  store i32 %v1_100023e8, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_100023dc, 32
  br i1 %tmp33, label %dec_label_pc_10002488, label %dec_label_pc_100023f0

dec_label_pc_100023f0:                            ; preds = %dec_label_pc_100023c8
  %v0_100023f0 = load i32, i32* %r20.global-to-local, align 4
  %v4_100023f0 = icmp eq i32 %v0_100023f0, 65535
  br i1 %v4_100023f0, label %dec_label_pc_100024b4, label %dec_label_pc_100023f8

dec_label_pc_100023f8:                            ; preds = %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge, %dec_label_pc_100023f0
  %v1_100023f8 = phi i32 [ %v1_100023f8.pre, %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge ], [ 65535, %dec_label_pc_100023f0 ]
  %v0_100023f8 = load i32, i32* %r21.global-to-local, align 4
  %v4_100023f8 = icmp eq i32 %v0_100023f8, %v1_100023f8
  br i1 %v4_100023f8, label %dec_label_pc_100024c4, label %dec_label_pc_10002400

dec_label_pc_10002400:                            ; preds = %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge, %dec_label_pc_100023f8
  %v1_10002400 = phi i32 [ %v1_10002400.pre, %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge ], [ %v1_100023f8, %dec_label_pc_100023f8 ]
  %v0_10002400 = load i32, i32* %r22.global-to-local, align 4
  %v4_10002400 = icmp eq i32 %v0_10002400, %v1_10002400
  br i1 %v4_10002400, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_10002408:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400, %dec_label_pc_100024d4
  %v0_10002408 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002408 = trunc i32 %v0_10002408 to i16
  %v2_10002408 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002408 = add i32 %v2_10002408, 10
  %v4_10002408 = inttoptr i32 %v3_10002408 to i16*
  store i16 %v1_10002408, i16* %v4_10002408, align 2
  %v0_10002410 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002410, i32* @r3, align 4
  %v2_10002414 = call i32 @function_100043cc(i32 %v0_10002410, i32 20)
  %v3_10002414 = trunc i32 %v2_10002414 to i16
  store i32 %v2_10002414, i32* %r3.global-to-local, align 4
  %v3_10002418 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002418, i32* %r6.global-to-local, align 4
  %v3_1000241c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000241c = add i32 %v3_1000241c, 10
  %v5_1000241c = inttoptr i32 %v4_1000241c to i16*
  store i16 %v3_10002414, i16* %v5_1000241c, align 2
  %v0_10002420 = load i32, i32* @r31, align 4
  store i32 %v0_10002420, i32* @r4, align 4
  %v0_10002424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002424 = trunc i32 %v0_10002424 to i16
  %v3_10002424 = add i32 %v0_10002420, 6
  %v4_10002424 = inttoptr i32 %v3_10002424 to i16*
  store i16 %v1_10002424, i16* %v4_10002424, align 2
  %v0_10002428 = load i32, i32* %r6.global-to-local, align 4
  %v1_10002428 = add i32 %v0_10002428, 12
  store i32 %v1_10002428, i32* %r6.global-to-local, align 4
  %v0_1000242c = load i32, i32* @r31, align 4
  %v1_1000242c = add i32 %v0_1000242c, 4
  %v2_1000242c = inttoptr i32 %v1_1000242c to i16*
  %v3_1000242c = load i16, i16* %v2_1000242c, align 2
  %v4_1000242c = zext i16 %v3_1000242c to i32
  store i32 %v4_1000242c, i32* %r5.global-to-local, align 4
  %v0_10002430 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002430, i32* %r3.global-to-local, align 4
  %v4_10002434 = call i32 @function_10004430(i32 %v0_10002430, i32 %v0_10002420, i32 %v4_1000242c, i32 %v1_10002428)
  %v5_10002434 = trunc i32 %v4_10002434 to i16
  store i32 %v4_10002434, i32* %r3.global-to-local, align 4
  %v3_10002438 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002438, i32* %r7.global-to-local, align 4
  %v0_1000243c = load i32, i32* @r31, align 4
  %v1_1000243c = add i32 %v0_1000243c, 2
  %v2_1000243c = inttoptr i32 %v1_1000243c to i16*
  %v3_1000243c = load i16, i16* %v2_1000243c, align 2
  %v4_1000243c = zext i16 %v3_1000243c to i32
  store i32 %v4_1000243c, i32* %r0.global-to-local, align 4
  %v0_10002440 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002444 = mul i32 %v3_10002438, 24
  store i32 %v1_10002444, i32* %r7.global-to-local, align 4
  %v3_10002448 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002448, i32* %r5.global-to-local, align 4
  %v4_1000244c = add i32 %v0_1000243c, 6
  %v5_1000244c = inttoptr i32 %v4_1000244c to i16*
  store i16 %v5_10002434, i16* %v5_1000244c, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10002454 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002454 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002454 = add i32 %v1_10002454, %v0_10002454
  store i32 %v2_10002454, i32* %r7.global-to-local, align 4
  %v0_10002458 = load i32, i32* %r5.global-to-local, align 4
  %v1_10002458 = add i32 %v0_10002458, 32
  store i32 %v1_10002458, i32* %r5.global-to-local, align 4
  %v0_1000245c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000245c = trunc i32 %v0_1000245c to i16
  %v3_1000245c = add i32 %v2_10002454, 2
  %v4_1000245c = inttoptr i32 %v3_1000245c to i16*
  store i16 %v1_1000245c, i16* %v4_1000245c, align 2
  %v0_10002460 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002460, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268444780, i32* @lr, align 4
  %v6_10002468 = call i32 @function_1000a1b8(i32 %v0_10002460, i32 %v0_10002440, i32 %v1_10002458, i32 16384, i32 %v2_10002454, i32 16)
  store i32 %v6_10002468, i32* %r3.global-to-local, align 4
  %v3_1000246c = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_1000246c, i32* %r9.global-to-local, align 4
  %v1_10002470 = add i32 %v3_1000246c, 1
  store i32 %v1_10002470, i32* %r11.global-to-local, align 4
  %v1_10002474 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002474 = icmp slt i32 %v1_10002470, %v1_10002474
  store i32 %v1_10002470, i32* %stack_var_-88, align 4
  br i1 %v2_10002474, label %dec_label_pc_100023c8, label %dec_label_pc_10002480

dec_label_pc_10002480:                            ; preds = %dec_label_pc_10002408
  %v0_10002480 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002480 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002480 = or i1 %v0_10002480, %v1_10002480
  br i1 %v2_10002480, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100023b8

dec_label_pc_10002488:                            ; preds = %dec_label_pc_100023c8
  %v1_10002488 = add i32 %v2_100023d4, 16
  %v2_10002488 = inttoptr i32 %v1_10002488 to i32*
  %v3_10002488 = load i32, i32* %v2_10002488, align 4
  store i32 %v3_10002488, i32* %r29.global-to-local, align 4
  %v0_1000248c = call i32 @function_10005b08()
  store i32 %v0_1000248c, i32* %r3.global-to-local, align 4
  %v3_10002490 = load i32, i32* %stack_var_-88, align 4
  %v0_10002494 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002494 = load i32, i32* %r30.global-to-local, align 4
  %v4_10002494 = icmp eq i32 %v0_10002494, %v1_10002494
  %v1_10002498 = mul i32 %v3_10002490, 24
  %v1_1000249c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000249c = add i32 %v1_1000249c, %v1_10002498
  store i32 %v2_1000249c, i32* %r9.global-to-local, align 4
  %v1_100024a0 = add i32 %v2_1000249c, 20
  %v2_100024a0 = inttoptr i32 %v1_100024a0 to i8*
  %v3_100024a0 = load i8, i8* %v2_100024a0, align 1
  %v4_100024a0 = zext i8 %v3_100024a0 to i32
  store i32 %v4_100024a0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100024a0, 64
  %v2_100024a4 = zext i8 %tmp to i32
  %v3_100024a4 = lshr i32 %v0_1000248c, %v2_100024a4
  store i32 %v3_100024a4, i32* %r3.global-to-local, align 4
  %v0_100024a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100024a8 = add i32 %v3_100024a4, %v0_100024a8
  store i32 %v2_100024a8, i32* %r29.global-to-local, align 4
  %v1_100024ac = load i32, i32* %r28.global-to-local, align 4
  %v2_100024ac = add i32 %v1_100024ac, 16
  %v3_100024ac = inttoptr i32 %v2_100024ac to i32*
  store i32 %v2_100024a8, i32* %v3_100024ac, align 4
  br i1 %v4_10002494, label %dec_label_pc_100024b4, label %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge

dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge: ; preds = %dec_label_pc_10002488
  %v1_100023f8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100023f8

dec_label_pc_100024b4:                            ; preds = %dec_label_pc_10002488, %dec_label_pc_100023f0
  %v0_100024b4 = call i32 @function_10005b08()
  %v1_100024b4 = trunc i32 %v0_100024b4 to i16
  store i32 %v0_100024b4, i32* %r3.global-to-local, align 4
  %v0_100024b8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100024b8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024b8 = icmp eq i32 %v0_100024b8, %v1_100024b8
  %v3_100024bc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024bc = add i32 %v3_100024bc, 4
  %v5_100024bc = inttoptr i32 %v4_100024bc to i16*
  store i16 %v1_100024b4, i16* %v5_100024bc, align 2
  br i1 %v4_100024b8, label %dec_label_pc_100024c4, label %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge

dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge: ; preds = %dec_label_pc_100024b4
  %v1_10002400.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002400

dec_label_pc_100024c4:                            ; preds = %dec_label_pc_100024b4, %dec_label_pc_100023f8
  %v0_100024c4 = call i32 @function_10005b08()
  %v1_100024c4 = trunc i32 %v0_100024c4 to i16
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  %v0_100024c8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100024c8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024c8 = icmp eq i32 %v0_100024c8, %v1_100024c8
  %v3_100024cc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024cc = add i32 %v3_100024cc, 20
  %v5_100024cc = inttoptr i32 %v4_100024cc to i16*
  store i16 %v1_100024c4, i16* %v5_100024cc, align 2
  br i1 %v4_100024c8, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_100024d4:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400
  %v0_100024d4 = call i32 @function_10005b08()
  %v1_100024d4 = trunc i32 %v0_100024d4 to i16
  store i32 %v0_100024d4, i32* %r3.global-to-local, align 4
  %v3_100024d8 = load i32, i32* @r31, align 4
  %v4_100024d8 = add i32 %v3_100024d8, 2
  %v5_100024d8 = inttoptr i32 %v4_100024d8 to i16*
  store i16 %v1_100024d4, i16* %v5_100024d8, align 2
  br label %dec_label_pc_10002408

dec_label_pc_100024e0:                            ; preds = %dec_label_pc_100022a4
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100024e0, i32* %r3.global-to-local, align 4
  store i32 268444904, i32* @lr, align 4
  %v0_100024e4 = call i32 @function_10009518()
  store i32 %v0_100024e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_10002164, %dec_label_pc_100024e0
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v1_100024fc = call %0 @__asm_mtcrf(i32 24, i32 %v0_1000216c)
  store i32 %v0_100021a4, i32* %r28.global-to-local, align 4
  store i32 %v0_100021ac, i32* %r29.global-to-local, align 4
  store i32 %v0_100021b4, i32* %r30.global-to-local, align 4
  %v0_10002540 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002540

; uselistorder directives
  uselistorder i32 %v0_100024d4, { 1, 0 }
  uselistorder i32 %v0_100024c4, { 1, 0 }
  uselistorder i32 %v0_100024b4, { 1, 0 }
  uselistorder i1 %v1_10002480, { 1, 0 }
  uselistorder i1 %v0_10002480, { 1, 0 }
  uselistorder i32 %v1_10002470, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002434, { 1, 0 }
  uselistorder i32 %v2_10002414, { 1, 0 }
  uselistorder i32 %v1_100023d8, { 1, 0 }
  uselistorder i32 %v1_10002320, { 1, 0 }
  uselistorder i32 %v1_10002314, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 2, 4, 1, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_10002408, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100023b8, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10002360, { 1, 0 }
}

define i32 @function_10002544(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002544:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10002548 = load i32, i32* @lr, align 4
  store i32 %v0_10002548, i32* %r0.global-to-local, align 4
  %v0_1000254c = call i32 @__asm_mfcr()
  store i32 %v0_1000254c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_1000255c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000254c, i32* %r15.global-to-local, align 4
  %v0_1000257c = load i32, i32* @r24, align 4
  %v0_10002580 = load i32, i32* @r25, align 4
  %v0_10002584 = load i32, i32* @r26, align 4
  %v0_10002588 = load i32, i32* @r27, align 4
  %v0_1000258c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_1000259c = load i32, i32* @r31, align 4
  %v0_100025b0 = load i32, i32* @r30, align 4
  store i32 268445112, i32* @lr, align 4
  %v2_100025b4 = call i32 @function_1000a590(i32 4, i32 4)
  store i32 %v2_100025b4, i32* %r16.global-to-local, align 4
  %v0_100025bc = load i32, i32* @r28, align 4
  %v0_100025c8 = load i32, i32* @r29, align 4
  store i32 %v0_100025c8, i32* %r3.global-to-local, align 4
  store i32 268445136, i32* @lr, align 4
  %v4_100025cc = inttoptr i32 %v0_100025bc to i32*
  %v5_100025cc = call i32 @function_100006a8(i32 %v0_100025c8, i32* %v4_100025cc, i32 2, i32 0)
  %v5_100025dc = trunc i32 %v5_100025cc to i8
  %v0_100025e4 = load i32, i32* @r28, align 4
  %v0_100025e8 = load i32, i32* @r29, align 4
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 268445168, i32* @lr, align 4
  %v4_100025ec = inttoptr i32 %v0_100025e4 to i32*
  %v5_100025ec = call i32 @function_100006a8(i32 %v0_100025e8, i32* %v4_100025ec, i32 3, i32 65535)
  %v0_100025f0 = load i32, i32* @r28, align 4
  store i32 %v5_100025ec, i32* %r19.global-to-local, align 4
  %v0_10002600 = load i32, i32* @r29, align 4
  store i32 %v0_10002600, i32* %r3.global-to-local, align 4
  store i32 268445192, i32* @lr, align 4
  %v4_10002604 = inttoptr i32 %v0_100025f0 to i32*
  %v5_10002604 = call i32 @function_100006a8(i32 %v0_10002600, i32* %v4_10002604, i32 4, i32 64)
  %v0_10002608 = load i32, i32* @r28, align 4
  %v5_10002614 = trunc i32 %v5_10002604 to i8
  %v0_1000261c = load i32, i32* @r29, align 4
  store i32 %v0_1000261c, i32* %r3.global-to-local, align 4
  store i32 268445220, i32* @lr, align 4
  %v4_10002620 = inttoptr i32 %v0_10002608 to i32*
  %v5_10002620 = call i32 @function_100006a8(i32 %v0_1000261c, i32* %v4_10002620, i32 5, i32 0)
  %v0_10002630 = load i32, i32* @r28, align 4
  %v1_10002634 = urem i32 %v5_10002620, 256
  store i32 %v1_10002634, i32* %r27.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r29, align 4
  store i32 %v0_10002638, i32* %r3.global-to-local, align 4
  store i32 268445248, i32* @lr, align 4
  %v4_1000263c = inttoptr i32 %v0_10002630 to i32*
  %v5_1000263c = call i32 @function_100006a8(i32 %v0_10002638, i32* %v4_1000263c, i32 6, i32 65535)
  %v0_10002640 = load i32, i32* @r28, align 4
  store i32 %v5_1000263c, i32* %r20.global-to-local, align 4
  %v0_10002650 = load i32, i32* @r29, align 4
  store i32 %v0_10002650, i32* %r3.global-to-local, align 4
  store i32 268445272, i32* @lr, align 4
  %v4_10002654 = inttoptr i32 %v0_10002640 to i32*
  %v5_10002654 = call i32 @function_100006a8(i32 %v0_10002650, i32* %v4_10002654, i32 7, i32 53)
  %v0_1000265c = load i32, i32* @r28, align 4
  store i32 %v5_10002654, i32* %r23.global-to-local, align 4
  %v0_1000266c = load i32, i32* @r29, align 4
  store i32 %v0_1000266c, i32* %r3.global-to-local, align 4
  store i32 268445300, i32* @lr, align 4
  %v4_10002670 = inttoptr i32 %v0_1000265c to i32*
  %v5_10002670 = call i32 @function_100006a8(i32 %v0_1000266c, i32* %v4_10002670, i32 9, i32 65535)
  %v0_10002674 = load i32, i32* @r28, align 4
  store i32 %v5_10002670, i32* %r24.global-to-local, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002674 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 0, i32 12)
  %v0_10002694 = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r26.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_10002694 to i32*
  %v5_100026a0 = call i32 @function_10000238(i32 %v0_1000269c, i32* %v4_100026a0, i32 8, i32 0)
  store i32 %v5_100026a0, i32* %r25.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445360, i32* @lr, align 4
  %v1_100026ac = call i32 @function_100087e0(i32 21)
  store i32 21, i32* %r3.global-to-local, align 4
  %v3_100026b8 = call i32 @function_1000872c(i32 21, i32* null)
  store i32 %v3_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445384, i32* @lr, align 4
  %v2_100026c4 = call i32 @function_10009680(i32 %v3_100026b8, i32 0)
  store i32 %v2_100026c4, i32* @r31, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445396, i32* @lr, align 4
  %v1_100026d0 = call i32 @function_10008754(i32 21)
  store i32 %v1_100026d0, i32* %r3.global-to-local, align 4
  %v0_100026d4 = load i32, i32* @r31, align 4
  %v1_100026d4 = icmp slt i32 %v0_100026d4, 0
  %v3_100026d4 = icmp eq i32 %v0_100026d4, 0
  store i1 %v3_100026d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100026d4, label %dec_label_pc_100027a4, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_10002544
  %v2_100026dc = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_100026dc, i32* %r28.global-to-local, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445424, i32* @lr, align 4
  %v3_100026ec = call i32 @function_10009750(i32 %v0_100026d4, i32 %v2_100026dc, i32 2048)
  store i32 %v3_100026ec, i32* %r30.global-to-local, align 4
  %v0_100026f4 = load i32, i32* @r31, align 4
  store i32 %v0_100026f4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100026fc.20 to i32), i32* @lr, align 4
  %v0_100026f8 = call i32 @function_10009518()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445444, i32* @lr, align 4
  %v1_10002700 = call i32 @function_100087e0(i32 22)
  store i32 22, i32* %r3.global-to-local, align 4
  %v3_1000270c = call i32 @function_1000872c(i32 22, i32* null)
  %v0_10002710 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_100026dc, i32* %r3.global-to-local, align 4
  %v3_1000271c = bitcast i32* %stack_var_-2148 to i8*
  %v4_1000271c = call i32 @function_10009108(i8* %v3_1000271c, i32 %v0_10002710, i32 %v3_1000270c)
  store i32 %v4_1000271c, i32* @r31, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445484, i32* @lr, align 4
  %v1_10002728 = call i32 @function_10008754(i32 22)
  store i32 %v1_10002728, i32* %r3.global-to-local, align 4
  %v0_1000272c = load i32, i32* @r31, align 4
  %v3_1000272c = icmp eq i32 %v0_1000272c, -1
  store i1 %v3_1000272c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000272c, label %dec_label_pc_100027a4, label %dec_label_pc_10002734

dec_label_pc_10002734:                            ; preds = %dec_label_pc_100026dc
  %v0_10002734 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002734 = icmp sgt i32 %v0_10002734, %v0_1000272c
  %v4_10002734 = icmp eq i32 %v0_10002734, %v0_1000272c
  store i1 %v4_10002734, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002734, label %dec_label_pc_1000273c, label %dec_label_pc_100027a4

dec_label_pc_1000273c:                            ; preds = %dec_label_pc_10002734
  %v2_1000273c = sub i32 %v0_10002734, %v0_1000272c
  store i32 %v2_1000273c, i32* %r0.global-to-local, align 4
  %v1_10002740 = add i32 %v0_10002734, -1
  store i32 %v1_10002740, i32* %r3.global-to-local, align 4
  store i32 %v2_1000273c, i32* %ctr.global-to-local, align 4
  %v0_1000274c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000274c = add i32 %v0_1000274c, %v0_1000272c
  store i32 %v2_1000274c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10002754 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10002754, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002758

dec_label_pc_10002758:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_1000273c
  %v0_100027a0 = phi i32 [ %v1_100027a0, %dec_label_pc_1000279c ], [ %v2_1000273c, %dec_label_pc_1000273c ]
  %v0_1000279c = phi i32 [ %v1_1000279c, %dec_label_pc_1000279c ], [ %v0_1000272c, %dec_label_pc_1000273c ]
  %v0_10002764 = phi i32 [ %v1_10002764, %dec_label_pc_1000279c ], [ %v2_1000274c, %dec_label_pc_1000273c ]
  %v0_10002758 = phi i32 [ %v0_100027584, %dec_label_pc_1000279c ], [ 0, %dec_label_pc_1000273c ]
  %v3_10002758 = icmp eq i32 %v0_10002758, 0
  store i1 %v3_10002758, i1* %cr7_eq.global-to-local, align 1
  %v1_1000275c = inttoptr i32 %v0_10002764 to i8*
  %v2_1000275c = load i8, i8* %v1_1000275c, align 1
  %v3_1000275c = zext i8 %v2_1000275c to i32
  store i32 %v3_1000275c, i32* %r9.global-to-local, align 4
  %v4_10002760 = icmp eq i32 %v1_10002740, %v0_1000279c
  %v1_10002764 = add i32 %v0_10002764, 1
  store i32 %v1_10002764, i32* %r11.global-to-local, align 4
  br i1 %v3_10002758, label %dec_label_pc_10002774, label %dec_label_pc_10002784

dec_label_pc_10002774:                            ; preds = %dec_label_pc_10002758
  %v3_10002774 = icmp eq i8 %v2_1000275c, 9
  store i1 %v3_10002774, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_1000275c, label %dec_label_pc_10002780 [
    i8 32, label %dec_label_pc_1000279c
    i8 9, label %dec_label_pc_1000279c
  ]

dec_label_pc_10002780:                            ; preds = %dec_label_pc_10002774
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10002784

dec_label_pc_10002784:                            ; preds = %dec_label_pc_10002758, %dec_label_pc_10002780
  %v0_100027585 = phi i32 [ %v0_10002758, %dec_label_pc_10002758 ], [ 1, %dec_label_pc_10002780 ]
  %v1_10002784 = add nuw nsw i32 %v3_1000275c, 208
  %v1_10002788 = urem i32 %v1_10002784, 256
  store i32 %v1_10002788, i32* %r0.global-to-local, align 4
  %v2_1000278c = icmp ugt i32 %v1_10002788, 9
  %v3_1000278c = icmp eq i32 %v1_10002788, 9
  store i1 %v3_1000278c, i1* %cr7_eq.global-to-local, align 1
  %v3_10002768.not = icmp ne i8 %v2_1000275c, 46
  %brmerge.not = and i1 %v3_10002768.not, %v2_1000278c
  %brmerge26 = or i1 %v4_10002760, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_100027d8, label %dec_label_pc_1000279c

dec_label_pc_1000279c:                            ; preds = %dec_label_pc_10002784, %dec_label_pc_10002774, %dec_label_pc_10002774
  %v0_100027584 = phi i32 [ 0, %dec_label_pc_10002774 ], [ 0, %dec_label_pc_10002774 ], [ %v0_100027585, %dec_label_pc_10002784 ]
  %v1_1000279c = add i32 %v0_1000279c, 1
  %v1_100027a0 = add i32 %v0_100027a0, -1
  store i32 %v1_100027a0, i32* %ctr.global-to-local, align 4
  %v2_100027a0 = icmp eq i32 %v1_100027a0, 0
  br i1 %v2_100027a0, label %dec_label_pc_100027a4, label %dec_label_pc_10002758

dec_label_pc_100027a4:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_10002734, %dec_label_pc_100026dc, %dec_label_pc_10002544
  %v0_100027a4 = call i32 @function_10005b08()
  %v1_100027a8 = urem i32 %v0_100027a4, 4
  store i32 %v1_100027a8, i32* %r3.global-to-local, align 4
  %v3_100027ac = icmp eq i32 %v1_100027a8, 1
  store i1 %v3_100027ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027ac, label %dec_label_pc_10002b90, label %dec_label_pc_100027b4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027a4
  %v1_100027ac = icmp eq i32 %v1_100027a8, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100027ac, label %dec_label_pc_10002ba8, label %dec_label_pc_100027bc

dec_label_pc_100027bc:                            ; preds = %dec_label_pc_100027b4
  %v2_100027bc = icmp eq i32 %v1_100027a8, 3
  %v3_100027bc = icmp eq i32 %v1_100027a8, 2
  store i1 %v3_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027bc, label %dec_label_pc_10002b9c, label %dec_label_pc_100027c4

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_100027bc
  store i1 %v2_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100027bc, label %dec_label_pc_100027cc, label %dec_label_pc_10002808

dec_label_pc_100027cc:                            ; preds = %dec_label_pc_100027c4
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_100027d8:                            ; preds = %dec_label_pc_10002784
  %v2_100027d8 = sub i32 %v0_1000279c, %v0_1000272c
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100027ec.21 to i32), i32* @lr, align 4
  %v3_100027e8 = call i32 @function_10008ddc(i32 %v2_10002754, i32 %v2_1000274c, i32 %v2_100027d8)
  %v2_100027ec = ptrtoint i32* %stack_var_-2184 to i32
  %v2_100027f0 = add i32 %v2_100027d8, %v2_100027ec
  store i32 %v2_100027f0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100027f8 = add i32 %v2_100027f0, 4
  %v4_100027f8 = inttoptr i32 %v3_100027f8 to i8*
  store i8 0, i8* %v4_100027f8, align 1
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 268445700, i32* @lr, align 4
  %v1_10002800 = call i32 @function_10009fcc(i32 %v2_10002754)
  store i32 %v1_10002800, i32* %r3.global-to-local, align 4
  store i32 %v1_10002800, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002808:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_10002ba8, %dec_label_pc_10002b9c, %dec_label_pc_10002b90, %dec_label_pc_100027cc, %dec_label_pc_100027d8
  %v0_10002808 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002808 = icmp eq i32 %v0_10002808, 0
  store i1 %v3_10002808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002808, label %dec_label_pc_10002b30, label %dec_label_pc_10002810

dec_label_pc_10002810:                            ; preds = %dec_label_pc_10002808
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445720, i32* @lr, align 4
  %v1_10002814 = inttoptr i32 %v0_10002808 to i8*
  %v2_10002814 = call i32 @function_10008d58(i8* %v1_10002814)
  store i32 %v2_10002814, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445740, i32* @lr, align 4
  %v3_10002828 = call i32 @function_1000a234(i32 2, i32 3, i32 17)
  store i32 %v3_10002828, i32* %r3.global-to-local, align 4
  %v3_1000282c = icmp eq i32 %v3_10002828, -1
  store i1 %v3_1000282c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002828, i32* %r22.global-to-local, align 4
  br i1 %v3_1000282c, label %dec_label_pc_10002b30, label %dec_label_pc_10002838

dec_label_pc_10002838:                            ; preds = %dec_label_pc_10002810
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002844 = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268445780, i32* @lr, align 4
  %v4_10002850 = call i32 @function_1000a1f8(i32 0, i32 3, i32 %v2_10002844, i32 4)
  store i32 %v4_10002850, i32* %r3.global-to-local, align 4
  %v3_10002854 = icmp eq i32 %v4_10002850, -1
  store i1 %v3_10002854, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002854, label %dec_label_pc_10002b28, label %dec_label_pc_1000285c

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_10002838
  %v0_1000285c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000285c = icmp slt i32 %v0_1000285c, 0
  %v3_1000285c = icmp eq i32 %v0_1000285c, 0
  store i1 %v1_1000285c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000285c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r17.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r18.global-to-local, align 4
  %v0_1000286c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000286c = urem i32 %v0_1000286c, 65536
  store i32 %v1_1000286c, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 65536
  store i32 %v1_10002874, i32* %r20.global-to-local, align 4
  %v0_10002878 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002878 = urem i32 %v0_10002878, 256
  store i32 %v1_10002878, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_1000285c, 1
  %v1_10002b1c = load i32, i32* @r29, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, %v1_10002878
  store i32 %v2_10002b1c, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_10002880

dec_label_pc_10002880:                            ; preds = %dec_label_pc_1000285c
  %v1_10002884 = icmp slt i32 %v1_10002b1c, 0
  %v3_10002884 = icmp eq i32 %v1_10002b1c, 0
  store i1 %v1_10002884, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002884, i1* %cr3_eq.global-to-local, align 1
  %v1_10002888 = urem i32 %v2_10002b1c, 65536
  %v0_1000288c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000288c = icmp eq i32 %v0_1000288c, 0
  store i1 %v3_1000288c, i1* %cr2_eq.global-to-local, align 1
  %v1_10002890 = add nuw nsw i32 %v1_10002888, 27
  store i32 %v1_10002890, i32* %r0.global-to-local, align 4
  %v1_10002894 = add nuw nsw i32 %v1_10002888, 47
  store i32 %v1_10002894, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10002b1c, 47
  %v1_10002898 = urem i32 %fold, 65536
  store i32 %v1_10002898, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10002b1c, 27
  %v1_1000289c = urem i32 %fold3, 65536
  store i32 %v1_1000289c, i32* %r27.global-to-local, align 4
  %v1_100028a0 = add i32 %v1_10002b1c, 1
  store i32 %v1_100028a0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100028f0 = sext i8 %v5_100025dc to i32
  %v4_100028f8 = sext i8 %v5_10002614 to i32
  br label %dec_label_pc_100028a8

dec_label_pc_100028a8:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002880
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268445876, i32* @lr, align 4
  %v2_100028b0 = call i32 @function_1000a590(i32 600, i32 1)
  store i32 %v2_100028b0, i32* %r3.global-to-local, align 4
  %v3_100028b4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100028b4, i32* %r0.global-to-local, align 4
  %v0_100028b8 = load i32, i32* @r31, align 4
  %v1_100028b8 = mul i32 %v0_100028b8, 4
  store i32 %v1_100028b8, i32* %r9.global-to-local, align 4
  %v2_100028bc = load i32, i32* %r16.global-to-local, align 4
  %v3_100028bc = add i32 %v2_100028bc, %v1_100028b8
  %v4_100028bc = inttoptr i32 %v3_100028bc to i32*
  store i32 %v2_100028b0, i32* %v4_100028bc, align 4
  %v0_100028c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100028c0 = mul i32 %v0_100028c0, 4
  store i32 %v1_100028c0, i32* %r0.global-to-local, align 4
  %v0_100028c4 = load i32, i32* %r16.global-to-local, align 4
  %v2_100028c4 = add i32 %v0_100028c4, %v1_100028c0
  %v3_100028c4 = inttoptr i32 %v2_100028c4 to i32*
  %v4_100028c4 = load i32, i32* %v3_100028c4, align 4
  store i32 %v4_100028c4, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100028cc = inttoptr i32 %v4_100028c4 to i32*
  %v2_100028cc = load i32, i32* %v1_100028cc, align 4
  store i32 %v2_100028cc, i32* %r9.global-to-local, align 4
  %v1_100028d0 = add i32 %v4_100028c4, 20
  store i32 %v1_100028d0, i32* %r10.global-to-local, align 4
  %v0_100028d4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100028d4 = trunc i32 %v0_100028d4 to i16
  %v3_100028d4 = add i32 %v4_100028c4, 4
  %v4_100028d4 = inttoptr i32 %v3_100028d4 to i16*
  store i16 %v1_100028d4, i16* %v4_100028d4, align 2
  %v0_100028d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100028d8 = add i32 %v0_100028d8, 28
  store i32 %v1_100028d8, i32* %r8.global-to-local, align 4
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100028e4, i32* %r9.global-to-local, align 4
  %v1_100028e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v0_100028ec = load i32, i32* %r26.global-to-local, align 4
  %v1_100028ec = trunc i32 %v0_100028ec to i16
  %v2_100028ec = load i32, i32* %r11.global-to-local, align 4
  %v3_100028ec = add i32 %v2_100028ec, 2
  %v4_100028ec = inttoptr i32 %v3_100028ec to i16*
  store i16 %v1_100028ec, i16* %v4_100028ec, align 2
  store i32 %v4_100028f0, i32* %r0.global-to-local, align 4
  %v2_100028f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100028f4 = add i32 %v2_100028f4, 1
  %v4_100028f4 = inttoptr i32 %v3_100028f4 to i8*
  store i8 %v5_100025dc, i8* %v4_100028f4, align 1
  store i32 %v4_100028f8, i32* %r7.global-to-local, align 4
  %v2_100028fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100028fc = add i32 %v2_100028fc, 8
  %v4_100028fc = inttoptr i32 %v3_100028fc to i8*
  store i8 %v5_10002614, i8* %v4_100028fc, align 1
  %v0_10002900 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002900, label %dec_label_pc_1000290c, label %dec_label_pc_10002904

dec_label_pc_10002904:                            ; preds = %dec_label_pc_100028a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002908 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002908 = add i32 %v2_10002908, 6
  %v4_10002908 = inttoptr i32 %v3_10002908 to i16*
  store i16 16384, i16* %v4_10002908, align 2
  br label %dec_label_pc_1000290c

dec_label_pc_1000290c:                            ; preds = %dec_label_pc_100028a8, %dec_label_pc_10002904
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_10002914 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002914 = add i32 %v2_10002914, 9
  %v4_10002914 = inttoptr i32 %v3_10002914 to i8*
  store i8 17, i8* %v4_10002914, align 1
  %v0_10002918 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002918 = add i32 %v0_10002918, 41
  store i32 %v1_10002918, i32* %r9.global-to-local, align 4
  %v0_1000291c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000291c = add i32 %v2_1000291c, 4
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v0_10002920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002920 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002920 = add i32 %v1_10002920, %v0_10002920
  store i32 %v2_10002920, i32* %r30.global-to-local, align 4
  %v3_10002924 = load i32, i32* @global_var_1001c660.16, align 4
  store i32 %v3_10002924, i32* %r0.global-to-local, align 4
  %v1_10002928 = add i32 %v2_10002920, 1
  store i32 %v1_10002928, i32* %r31.global-to-local, align 4
  %v0_1000292c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000292c = trunc i32 %v0_1000292c to i16
  %v2_1000292c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000292c = add i32 %v2_1000292c, 2
  %v4_1000292c = inttoptr i32 %v3_1000292c to i16*
  store i16 %v1_1000292c, i16* %v4_1000292c, align 2
  %v0_10002930 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002930, i32* %r3.global-to-local, align 4
  %v0_10002934 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002934 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002934 = add i32 %v1_10002934, 12
  %v3_10002934 = inttoptr i32 %v2_10002934 to i32*
  store i32 %v0_10002934, i32* %v3_10002934, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_1000293c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000293c = trunc i32 %v0_1000293c to i16
  %v2_1000293c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000293c = add i32 %v2_1000293c, 20
  %v4_1000293c = inttoptr i32 %v3_1000293c to i16*
  store i16 %v1_1000293c, i16* %v4_1000293c, align 2
  %v0_10002940 = load i32, i32* %r25.global-to-local, align 4
  %v0_10002944 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002944 = trunc i32 %v0_10002944 to i16
  %v2_10002944 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002944 = add i32 %v2_10002944, 2
  %v4_10002944 = inttoptr i32 %v3_10002944 to i16*
  store i16 %v1_10002944, i16* %v4_10002944, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000294c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000294c = add i32 %v2_1000294c, 4
  %v4_1000294c = inttoptr i32 %v3_1000294c to i16*
  store i16 1, i16* %v4_1000294c, align 2
  %v0_10002950 = load i32, i32* @r28, align 4
  %v0_10002954 = load i32, i32* @r21, align 4
  %v1_10002954 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002954 = add i32 %v1_10002954, 16
  %v3_10002954 = inttoptr i32 %v2_10002954 to i32*
  store i32 %v0_10002954, i32* %v3_10002954, align 4
  %v0_10002958 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002958 = trunc i32 %v0_10002958 to i16
  %v2_10002958 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002958 = add i32 %v2_10002958, 28
  %v4_10002958 = inttoptr i32 %v3_10002958 to i16*
  store i16 %v1_10002958, i16* %v4_10002958, align 2
  %v0_1000295c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000295c = trunc i32 %v0_1000295c to i8
  %v2_1000295c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000295c = add i32 %v2_1000295c, 40
  %v4_1000295c = inttoptr i32 %v3_1000295c to i8*
  store i8 %v1_1000295c, i8* %v4_1000295c, align 1
  store i32 268446052, i32* @lr, align 4
  %v3_10002960 = call i32 @function_10008ddc(i32 %v0_10002930, i32 %v0_10002940, i32 %v0_10002950)
  store i32 %v3_10002960, i32* %r3.global-to-local, align 4
  %v0_10002964 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10002964 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10002964 = or i1 %v0_10002964, %v1_10002964
  br i1 %v2_10002964, label %dec_label_pc_100029b0, label %dec_label_pc_10002968

dec_label_pc_10002968:                            ; preds = %dec_label_pc_1000290c
  %v0_10002968 = load i32, i32* @r29, align 4
  store i32 %v0_10002968, i32* %ctr.global-to-local, align 4
  %v0_1000296c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000296c, i32* %r3.global-to-local, align 4
  %v0_10002970 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10002970, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10002990

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002990
  %v1_10002980 = urem i32 %v1_10002994, 256
  br label %dec_label_pc_10002984

dec_label_pc_10002984:                            ; preds = %dec_label_pc_100029a0, %dec_label_pc_10002980
  %v0_1000298c = phi i32 [ %v0_1000298c.pre, %dec_label_pc_100029a0 ], [ %v0_1000298c18, %dec_label_pc_10002980 ]
  %v0_10002988 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v0_1000298816, %dec_label_pc_10002980 ]
  %v2_100029a013 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v2_100029a0, %dec_label_pc_10002980 ]
  %v0_10002984 = phi i32 [ %v0_10002984.pre, %dec_label_pc_100029a0 ], [ %v0_10002990, %dec_label_pc_10002980 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100029a0 ], [ %v1_10002980, %dec_label_pc_10002980 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_10002984 = add i32 %v0_10002984, 1
  store i32 %v1_10002984, i32* %r10.global-to-local, align 4
  %v1_10002988 = add i32 %v0_10002988, 1
  store i32 %v1_10002988, i32* %r3.global-to-local, align 4
  %v1_1000298c = add i32 %v0_1000298c, -1
  store i32 %v1_1000298c, i32* %ctr.global-to-local, align 4
  %v2_1000298c = icmp eq i32 %v1_1000298c, 0
  br i1 %v2_1000298c, label %dec_label_pc_100029b8.loopexit, label %dec_label_pc_10002990

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002984, %dec_label_pc_10002968
  %v0_1000298c18 = phi i32 [ %v1_1000298c, %dec_label_pc_10002984 ], [ %v0_10002968, %dec_label_pc_10002968 ]
  %v0_1000298816 = phi i32 [ %v1_10002988, %dec_label_pc_10002984 ], [ %v0_1000296c, %dec_label_pc_10002968 ]
  %v2_100029a0 = phi i32 [ %v2_100029a013, %dec_label_pc_10002984 ], [ %v0_10002970, %dec_label_pc_10002968 ]
  %v0_100029a0 = phi i32 [ %storemerge, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v0_10002990 = phi i32 [ %v1_10002984, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v1_10002990 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002990 = add i32 %v1_10002990, %v0_10002990
  %v3_10002990 = inttoptr i32 %v2_10002990 to i8*
  %v4_10002990 = load i8, i8* %v3_10002990, align 1
  %v5_10002990 = zext i8 %v4_10002990 to i32
  store i32 %v5_10002990, i32* %r0.global-to-local, align 4
  %v1_10002994 = add nsw i32 %v0_100029a0, 1
  store i32 %v1_10002994, i32* %r11.global-to-local, align 4
  %v3_10002998 = icmp eq i8 %v4_10002990, 46
  store i1 %v3_10002998, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002998, label %dec_label_pc_100029a0, label %dec_label_pc_10002980

dec_label_pc_100029a0:                            ; preds = %dec_label_pc_10002990
  %v1_100029a0 = trunc i32 %v0_100029a0 to i8
  %v3_100029a0 = inttoptr i32 %v2_100029a0 to i8*
  store i8 %v1_100029a0, i8* %v3_100029a0, align 1
  %v0_100029a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100029a4, i32* %r9.global-to-local, align 4
  %v0_10002984.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000298c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10002984

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_1000290c
  %v0_100029b0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100029b0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8.loopexit:                   ; preds = %dec_label_pc_10002984
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.loopexit, %dec_label_pc_100029b0
  %v2_100029b8 = phi i32 [ %v2_100029a013, %dec_label_pc_100029b8.loopexit ], [ %v0_100029b0, %dec_label_pc_100029b0 ]
  %v0_100029b8.off0 = phi i8 [ %extract.t, %dec_label_pc_100029b8.loopexit ], [ 0, %dec_label_pc_100029b0 ]
  %v3_100029b8 = inttoptr i32 %v2_100029b8 to i8*
  store i8 %v0_100029b8.off0, i8* %v3_100029b8, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100029c0 = load i32, i32* @r29, align 4
  %v2_100029c0 = add i32 %v1_100029c0, %v0_100029c0
  store i32 %v2_100029c0, i32* %r9.global-to-local, align 4
  %v3_100029c4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100029c4, i32* %r11.global-to-local, align 4
  %v3_100029c8 = add i32 %v2_100029c0, 4
  %v4_100029c8 = inttoptr i32 %v3_100029c8 to i16*
  store i16 1, i16* %v4_100029c8, align 2
  %v0_100029cc = load i32, i32* %r11.global-to-local, align 4
  %v1_100029cc = add i32 %v0_100029cc, 1
  store i32 %v1_100029cc, i32* %r31.global-to-local, align 4
  %v0_100029d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100029d0 = trunc i32 %v0_100029d0 to i16
  %v2_100029d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100029d0 = add i32 %v2_100029d0, 2
  %v4_100029d0 = inttoptr i32 %v3_100029d0 to i16*
  store i16 %v1_100029d0, i16* %v4_100029d0, align 2
  %v0_100029d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100029d4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100029d4 = icmp slt i32 %v0_100029d4, %v1_100029d4
  %v4_100029d4 = icmp eq i32 %v0_100029d4, %v1_100029d4
  store i1 %v4_100029d4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100029d4, i32* %stack_var_-2184, align 4
  br i1 %v2_100029d4, label %dec_label_pc_100028a8, label %dec_label_pc_100029e0.preheader.loopexit

dec_label_pc_100029e0.preheader.loopexit:         ; preds = %dec_label_pc_100029b8
  %v0_100029e0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029e0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029e0.preheader

dec_label_pc_100029e0.preheader:                  ; preds = %dec_label_pc_10002ad8, %dec_label_pc_1000285c, %dec_label_pc_100029e0.preheader.loopexit
  %v1_100029e0 = phi i1 [ %v1_1000285c, %dec_label_pc_1000285c ], [ %v1_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v1_10002ad8, %dec_label_pc_10002ad8 ]
  %v0_100029e0 = phi i1 [ %v3_1000285c, %dec_label_pc_1000285c ], [ %v0_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v0_10002ad8, %dec_label_pc_10002ad8 ]
  %v2_100029e0 = or i1 %v1_100029e0, %v0_100029e0
  br label %dec_label_pc_100029e0

dec_label_pc_100029e0:                            ; preds = %dec_label_pc_100029e0.preheader, %dec_label_pc_100029e0
  br i1 %v2_100029e0, label %dec_label_pc_100029e0, label %dec_label_pc_100029e4

dec_label_pc_100029e4:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_10002ad8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_100029f4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100029f4 = icmp eq i32 %v0_100029f4, 65535
  store i1 %v4_100029f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100029f8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100029f8 = icmp slt i32 %v0_100029f8, 65535
  %v4_100029f8 = icmp eq i32 %v0_100029f8, 65535
  store i1 %v2_100029f8, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_100029f8, i1* %cr3_eq.global-to-local, align 1
  %v0_100029fc = load i32, i32* %r20.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  store i1 %v4_100029fc, i1* %cr2_eq.global-to-local, align 1
  %v0_10002a00 = load i32, i32* @r24, align 4
  %v1_10002a00 = add i32 %v0_10002a00, 27
  store i32 %v1_10002a00, i32* @r30, align 4
  %v0_10002a04 = call i32 @__asm_mfcr()
  store i32 %v0_10002a04, i32* %r3.global-to-local, align 4
  %v1_10002a08 = mul i32 %v0_10002a04, 268435456
  store i32 %v1_10002a08, i32* @r26, align 4
  %v0_10002a0c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002a0c = load i32, i32* %r0.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  store i1 %v4_10002a0c, i1* %cr7_eq.global-to-local, align 1
  %v0_10002a10 = load i32, i32* @r24, align 4
  %v1_10002a10 = add i32 %v0_10002a10, 47
  store i32 %v1_10002a10, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002a18 = call i32 @__asm_mfcr()
  store i32 %v0_10002a18, i32* %r3.global-to-local, align 4
  %v1_10002a1c = mul i32 %v0_10002a18, 268435456
  store i32 %v1_10002a1c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_10002a24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, %dec_label_pc_100029e4
  %v0_10002a28 = phi i32 [ %v0_10002a28.pre, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v1_10002a1c, %dec_label_pc_100029e4 ]
  %v0_10002a24 = phi i32 [ %v1_10002ac8, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v0_10002a24.pre, %dec_label_pc_100029e4 ]
  %v1_10002a24 = mul i32 %v0_10002a24, 4
  store i32 %v1_10002a24, i32* %r0.global-to-local, align 4
  %v1_10002a28 = mul i32 %v0_10002a28, 16
  %v2_10002a28 = udiv i32 %v0_10002a28, 268435456
  %v3_10002a28 = or i32 %v2_10002a28, %v1_10002a28
  store i32 %v3_10002a28, i32* %r27.global-to-local, align 4
  %v1_10002a2c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a28)
  %v1_10002a30 = mul nuw i32 %v2_10002a28, 268435456
  %v2_10002a30 = urem i32 %v0_10002a28, 268435456
  %v3_10002a30 = or i32 %v1_10002a30, %v2_10002a30
  store i32 %v3_10002a30, i32* @r27, align 4
  %v0_10002a34 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002a34 = load i32, i32* %r0.global-to-local, align 4
  %v2_10002a34 = add i32 %v1_10002a34, %v0_10002a34
  %v3_10002a34 = inttoptr i32 %v2_10002a34 to i32*
  %v4_10002a34 = load i32, i32* %v3_10002a34, align 4
  store i32 %v4_10002a34, i32* @r29, align 4
  %v1_10002a38 = add i32 %v4_10002a34, 20
  store i32 %v1_10002a38, i32* @r28, align 4
  %v0_10002a3c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a3c, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a40

dec_label_pc_10002a40:                            ; preds = %dec_label_pc_10002a24
  %v0_10002a40 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a40, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002a44 = load i32, i32* @r26, align 4
  %v1_10002a44 = mul i32 %v0_10002a44, 16
  %v2_10002a44 = udiv i32 %v0_10002a44, 268435456
  %v3_10002a44 = or i32 %v2_10002a44, %v1_10002a44
  store i32 %v3_10002a44, i32* %r26.global-to-local, align 4
  %v1_10002a48 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a44)
  %v1_10002a4c = mul nuw i32 %v2_10002a44, 268435456
  %v2_10002a4c = urem i32 %v0_10002a44, 268435456
  %v3_10002a4c = or i32 %v1_10002a4c, %v2_10002a4c
  store i32 %v3_10002a4c, i32* @r26, align 4
  %v0_10002a50 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a50, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002a54:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002a54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002a54, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002a58:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54, %dec_label_pc_10002b10
  %v0_10002a58 = load i32, i32* @r29, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 41
  store i32 %v1_10002a58, i32* %r3.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r23.global-to-local, align 4
  store i32 268446308, i32* @lr, align 4
  %v2_10002a60 = inttoptr i32 %v1_10002a58 to i8*
  %v3_10002a60 = call i32 @function_10005bc8(i8* %v2_10002a60, i32 %v0_10002a5c)
  %v0_10002a64 = load i32, i32* @r25, align 4
  %v1_10002a64 = trunc i32 %v0_10002a64 to i16
  %v2_10002a64 = load i32, i32* @r29, align 4
  %v3_10002a64 = add i32 %v2_10002a64, 10
  %v4_10002a64 = inttoptr i32 %v3_10002a64 to i16*
  store i16 %v1_10002a64, i16* %v4_10002a64, align 2
  %v0_10002a6c = load i32, i32* @r29, align 4
  store i32 %v0_10002a6c, i32* @r3, align 4
  %v2_10002a70 = call i32 @function_100043cc(i32 %v0_10002a6c, i32 20)
  %v3_10002a70 = trunc i32 %v2_10002a70 to i16
  %v0_10002a74 = load i32, i32* @r28, align 4
  store i32 %v0_10002a74, i32* @r4, align 4
  %v3_10002a78 = load i32, i32* @r29, align 4
  %v4_10002a78 = add i32 %v3_10002a78, 10
  %v5_10002a78 = inttoptr i32 %v4_10002a78 to i16*
  store i16 %v3_10002a70, i16* %v5_10002a78, align 2
  %v0_10002a7c = load i32, i32* @r30, align 4
  %v0_10002a80 = load i32, i32* @r25, align 4
  %v1_10002a80 = trunc i32 %v0_10002a80 to i16
  %v2_10002a80 = load i32, i32* @r28, align 4
  %v3_10002a80 = add i32 %v2_10002a80, 6
  %v4_10002a80 = inttoptr i32 %v3_10002a80 to i16*
  store i16 %v1_10002a80, i16* %v4_10002a80, align 2
  %v0_10002a84 = load i32, i32* @r29, align 4
  store i32 %v0_10002a84, i32* %r3.global-to-local, align 4
  %v0_10002a88 = load i32, i32* @r28, align 4
  %v1_10002a88 = add i32 %v0_10002a88, 4
  %v2_10002a88 = inttoptr i32 %v1_10002a88 to i16*
  %v3_10002a88 = load i16, i16* %v2_10002a88, align 2
  %v4_10002a88 = zext i16 %v3_10002a88 to i32
  %v4_10002a8c = call i32 @function_10004430(i32 %v0_10002a84, i32 %v0_10002a74, i32 %v4_10002a88, i32 %v0_10002a7c)
  %v5_10002a8c = trunc i32 %v4_10002a8c to i16
  store i32 %v4_10002a8c, i32* %r3.global-to-local, align 4
  %v3_10002a90 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002a90, i32* %r7.global-to-local, align 4
  %v0_10002a94 = load i32, i32* @r28, align 4
  %v1_10002a94 = add i32 %v0_10002a94, 2
  %v2_10002a94 = inttoptr i32 %v1_10002a94 to i16*
  %v3_10002a94 = load i16, i16* %v2_10002a94, align 2
  %v4_10002a94 = zext i16 %v3_10002a94 to i32
  store i32 %v4_10002a94, i32* %r0.global-to-local, align 4
  %v0_10002a98 = load i32, i32* @r29, align 4
  %v1_10002a9c = mul i32 %v3_10002a90, 24
  store i32 %v1_10002a9c, i32* %r7.global-to-local, align 4
  %v4_10002aa0 = add i32 %v0_10002a94, 6
  %v5_10002aa0 = inttoptr i32 %v4_10002aa0 to i16*
  store i16 %v5_10002a8c, i16* %v5_10002aa0, align 2
  %v0_10002aa4 = load i32, i32* @r31, align 4
  %v0_10002aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002aa8, i32* %r3.global-to-local, align 4
  %v0_10002aac = load i32, i32* %r7.global-to-local, align 4
  %v1_10002aac = load i32, i32* %r14.global-to-local, align 4
  %v2_10002aac = add i32 %v1_10002aac, %v0_10002aac
  store i32 %v2_10002aac, i32* %r7.global-to-local, align 4
  %v0_10002ab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ab4 = trunc i32 %v0_10002ab4 to i16
  %v3_10002ab4 = add i32 %v2_10002aac, 2
  %v4_10002ab4 = inttoptr i32 %v3_10002ab4 to i16*
  store i16 %v1_10002ab4, i16* %v4_10002ab4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10002abc = load i32, i32* @r21, align 4
  %v2_10002abc = add i32 %v2_10002aac, 4
  %v3_10002abc = inttoptr i32 %v2_10002abc to i32*
  store i32 %v0_10002abc, i32* %v3_10002abc, align 4
  store i32 268446404, i32* @lr, align 4
  %v6_10002ac0 = call i32 @function_1000a1b8(i32 %v0_10002aa8, i32 %v0_10002a98, i32 %v0_10002aa4, i32 16384, i32 %v2_10002aac, i32 16)
  store i32 %v6_10002ac0, i32* %r3.global-to-local, align 4
  %v3_10002ac4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002ac4, i32* %r9.global-to-local, align 4
  %v1_10002ac8 = add i32 %v3_10002ac4, 1
  store i32 %v1_10002ac8, i32* %r0.global-to-local, align 4
  %v1_10002acc = load i32, i32* %r15.global-to-local, align 4
  %v2_10002acc = icmp slt i32 %v1_10002ac8, %v1_10002acc
  %v4_10002acc = icmp eq i32 %v1_10002ac8, %v1_10002acc
  store i1 %v4_10002acc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002ac8, i32* %stack_var_-2184, align 4
  br i1 %v2_10002acc, label %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, label %dec_label_pc_10002ad8

dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge: ; preds = %dec_label_pc_10002a58
  %v0_10002a28.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002ad8:                            ; preds = %dec_label_pc_10002a58
  %v0_10002ad8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002ad8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002ad8 = or i1 %v0_10002ad8, %v1_10002ad8
  br i1 %v2_10002ad8, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_100029e4

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002a24
  %v0_10002ae0 = call i32 @function_10005b08()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v3_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = add i32 %v3_10002ae4, 4
  %v5_10002ae4 = inttoptr i32 %v4_10002ae4 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae4, align 2
  %v0_10002ae8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ae8, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002aec:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002aec = call i32 @function_10005b08()
  %v1_10002aec = trunc i32 %v0_10002aec to i16
  store i32 %v0_10002aec, i32* %r3.global-to-local, align 4
  %v0_10002af0 = load i32, i32* @r26, align 4
  %v1_10002af0 = mul i32 %v0_10002af0, 16
  %v2_10002af0 = udiv i32 %v0_10002af0, 268435456
  %v3_10002af0 = or i32 %v2_10002af0, %v1_10002af0
  store i32 %v3_10002af0, i32* %r26.global-to-local, align 4
  %v1_10002af4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002af0)
  %v1_10002af8 = mul nuw i32 %v2_10002af0, 268435456
  %v2_10002af8 = urem i32 %v0_10002af0, 268435456
  %v3_10002af8 = or i32 %v1_10002af8, %v2_10002af8
  store i32 %v3_10002af8, i32* @r26, align 4
  %v3_10002afc = load i32, i32* @r29, align 4
  %v4_10002afc = add i32 %v3_10002afc, 20
  %v5_10002afc = inttoptr i32 %v4_10002afc to i16*
  store i16 %v1_10002aec, i16* %v5_10002afc, align 2
  %v0_10002b00 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b00, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002b04 = call i32 @function_10005b08()
  %v1_10002b04 = trunc i32 %v0_10002b04 to i16
  store i32 %v0_10002b04, i32* %r3.global-to-local, align 4
  %v3_10002b08 = load i32, i32* @r28, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b04, i16* %v5_10002b08, align 2
  %v0_10002b0c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002b0c, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54
  %v0_10002b10 = call i32 @function_10005b08()
  %v1_10002b10 = trunc i32 %v0_10002b10 to i16
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v3_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = add i32 %v3_10002b14, 28
  %v5_10002b14 = inttoptr i32 %v4_10002b14 to i16*
  store i16 %v1_10002b10, i16* %v5_10002b14, align 2
  br label %dec_label_pc_10002a58

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002838
  %v0_10002b28 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002b28, i32* %r3.global-to-local, align 4
  store i32 268446512, i32* @lr, align 4
  %v0_10002b2c = call i32 @function_10009518()
  store i32 %v0_10002b2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b30

dec_label_pc_10002b30:                            ; preds = %dec_label_pc_10002810, %dec_label_pc_10002808, %dec_label_pc_10002b28
  store i32 %v0_1000255c, i32* %r0.global-to-local, align 4
  %v1_10002b44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000254c)
  store i32 %v0_1000257c, i32* %r24.global-to-local, align 4
  store i32 %v0_10002580, i32* %r25.global-to-local, align 4
  store i32 %v0_10002584, i32* %r26.global-to-local, align 4
  store i32 %v0_10002588, i32* %r27.global-to-local, align 4
  store i32 %v0_1000258c, i32* %r28.global-to-local, align 4
  store i32 %v0_100025b0, i32* %r30.global-to-local, align 4
  store i32 %v0_1000259c, i32* %r31.global-to-local, align 4
  %v0_10002b8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b8c

dec_label_pc_10002b90:                            ; preds = %dec_label_pc_100027a4
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002b9c:                            ; preds = %dec_label_pc_100027bc
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002ba8:                            ; preds = %dec_label_pc_100027b4
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10002808

; uselistorder directives
  uselistorder i32 %v0_10002b10, { 1, 0 }
  uselistorder i32 %v0_10002b04, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 2, 1, 0 }
  uselistorder i32 %v0_10002aec, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i1 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v0_10002ad8, { 1, 0 }
  uselistorder i32 %v1_10002ac8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002a8c, { 1, 0 }
  uselistorder i32 %v0_10002a44, { 2, 1, 0 }
  uselistorder i32 %v0_10002a28, { 2, 1, 0 }
  uselistorder i32 %v1_10002a1c, { 1, 0 }
  uselistorder i32 %v0_100029a4, { 2, 0, 1 }
  uselistorder i32 %v1_10002994, { 1, 0 }
  uselistorder i32 %v1_1000298c, { 0, 2, 1 }
  uselistorder i32 %v1_100028c0, { 1, 0 }
  uselistorder i32 %v1_100028b8, { 1, 0 }
  uselistorder i32 %v2_10002b1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002b1c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002878, { 1, 0 }
  uselistorder i32 %v0_10002808, { 1, 0, 2 }
  uselistorder i1 %v2_100027bc, { 1, 0 }
  uselistorder i32 %v1_100027a8, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100027a0, { 2, 1, 0 }
  uselistorder i32 %v1_10002788, { 1, 2, 0 }
  uselistorder i32 %v1_10002764, { 1, 0 }
  uselistorder i32 %v0_10002758, { 1, 0 }
  uselistorder i32 %v2_10002754, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10002734, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000272c, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_100026d4, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10002614, { 1, 0 }
  uselistorder i8 %v5_100025dc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002b30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002a58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100029e4, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000290c, { 1, 0 }
  uselistorder label %dec_label_pc_10002808, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10002784, { 1, 0 }
}

define i32 @function_10002bb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bb4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10002bb8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bb8, i32* %r0.global-to-local, align 4
  %v0_10002bbc = call i32 @__asm_mfcr()
  store i32 %v0_10002bbc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10002bcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bbc, i32* %r21.global-to-local, align 4
  %v0_10002c04 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c0c = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268446760, i32* @lr, align 4
  %v2_10002c24 = call i32 @function_1000a590(i32 16, i32 16)
  store i32 %v2_10002c24, i32* %r22.global-to-local, align 4
  %v0_10002c30 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r3.global-to-local, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_1000a590(i32 %v0_10002c30, i32 4)
  %v0_10002c38 = load i32, i32* @r28, align 4
  store i32 %v2_10002c34, i32* %r23.global-to-local, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c38 to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* @r31, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v1_10002ca8 = urem i32 %v5_10002ca0, 256
  %v0_10002cb4 = load i32, i32* @r28, align 4
  %v0_10002cbc = load i32, i32* @r29, align 4
  store i32 %v0_10002cbc, i32* %r3.global-to-local, align 4
  store i32 268446916, i32* @lr, align 4
  %v4_10002cc0 = inttoptr i32 %v0_10002cb4 to i32*
  %v5_10002cc0 = call i32 @function_100006a8(i32 %v0_10002cbc, i32* %v4_10002cc0, i32 7, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  %v5_10002cd0 = trunc i32 %v5_10002cc0 to i16
  %v0_10002cd8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd8, i32* %r3.global-to-local, align 4
  store i32 268446944, i32* @lr, align 4
  %v4_10002cdc = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cdc = call i32 @function_100006a8(i32 %v0_10002cd8, i32* %v4_10002cdc, i32 11, i32 1)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  %v1_10002ce4 = urem i32 %v5_10002cdc, 256
  %v0_10002cf4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf4, i32* %r3.global-to-local, align 4
  store i32 268446972, i32* @lr, align 4
  %v4_10002cf8 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf8 = call i32 @function_100006a8(i32 %v0_10002cf4, i32* %v4_10002cf8, i32 12, i32 1)
  %v0_10002cfc = load i32, i32* @r28, align 4
  %v1_10002d08 = urem i32 %v5_10002cf8, 256
  %v0_10002d0c = load i32, i32* @r29, align 4
  store i32 %v0_10002d0c, i32* %r3.global-to-local, align 4
  store i32 268446996, i32* @lr, align 4
  %v4_10002d10 = inttoptr i32 %v0_10002cfc to i32*
  %v5_10002d10 = call i32 @function_100006a8(i32 %v0_10002d0c, i32* %v4_10002d10, i32 13, i32 1)
  %v0_10002d14 = load i32, i32* @r28, align 4
  %v1_10002d20 = urem i32 %v5_10002d10, 256
  %v0_10002d24 = load i32, i32* @r29, align 4
  store i32 %v0_10002d24, i32* %r3.global-to-local, align 4
  store i32 268447020, i32* @lr, align 4
  %v4_10002d28 = inttoptr i32 %v0_10002d14 to i32*
  %v5_10002d28 = call i32 @function_100006a8(i32 %v0_10002d24, i32* %v4_10002d28, i32 14, i32 1)
  %v0_10002d2c = load i32, i32* @r28, align 4
  %v1_10002d38 = urem i32 %v5_10002d28, 256
  %v0_10002d3c = load i32, i32* @r29, align 4
  store i32 %v0_10002d3c, i32* %r3.global-to-local, align 4
  store i32 268447044, i32* @lr, align 4
  %v4_10002d40 = inttoptr i32 %v0_10002d2c to i32*
  %v5_10002d40 = call i32 @function_100006a8(i32 %v0_10002d3c, i32* %v4_10002d40, i32 15, i32 1)
  %v0_10002d44 = load i32, i32* @r28, align 4
  %v1_10002d50 = urem i32 %v5_10002d40, 256
  %v0_10002d54 = load i32, i32* @r29, align 4
  store i32 %v0_10002d54, i32* %r3.global-to-local, align 4
  store i32 268447068, i32* @lr, align 4
  %v4_10002d58 = inttoptr i32 %v0_10002d44 to i32*
  %v5_10002d58 = call i32 @function_100006a8(i32 %v0_10002d54, i32* %v4_10002d58, i32 16, i32 1)
  %v0_10002d64 = load i32, i32* @r28, align 4
  %v1_10002d68 = urem i32 %v5_10002d58, 256
  %v0_10002d6c = load i32, i32* @r29, align 4
  store i32 %v0_10002d6c, i32* %r3.global-to-local, align 4
  store i32 268447092, i32* @lr, align 4
  %v4_10002d70 = inttoptr i32 %v0_10002d64 to i32*
  %v5_10002d70 = call i32 @function_100006a8(i32 %v0_10002d6c, i32* %v4_10002d70, i32 0, i32 768)
  %v0_10002d74 = load i32, i32* @r28, align 4
  store i32 %v5_10002d70, i32* %r25.global-to-local, align 4
  %v0_10002d84 = load i32, i32* @r29, align 4
  store i32 %v0_10002d84, i32* %r3.global-to-local, align 4
  store i32 268447116, i32* @lr, align 4
  %v4_10002d88 = inttoptr i32 %v0_10002d74 to i32*
  %v5_10002d88 = call i32 @function_100006a8(i32 %v0_10002d84, i32* %v4_10002d88, i32 1, i32 1)
  %v1_10002d90 = urem i32 %v5_10002d88, 256
  store i32 %v1_10002d90, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v3_10002d9c = call i32 @function_1000a234(i32 2, i32 3, i32 6)
  store i32 %v3_10002d9c, i32* %r3.global-to-local, align 4
  %v3_10002da0 = icmp eq i32 %v3_10002d9c, -1
  store i1 %v3_10002da0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002d9c, i32* %r24.global-to-local, align 4
  br i1 %v3_10002da0, label %dec_label_pc_10002f60, label %dec_label_pc_10002dac

dec_label_pc_10002dac:                            ; preds = %dec_label_pc_10002bb4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002db8 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268447176, i32* @lr, align 4
  %v4_10002dc4 = call i32 @function_1000a1f8(i32 0, i32 3, i32 %v2_10002db8, i32 4)
  store i32 %v4_10002dc4, i32* %r3.global-to-local, align 4
  %v3_10002dc8 = icmp eq i32 %v4_10002dc4, -1
  store i1 %v3_10002dc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002dc8, label %dec_label_pc_10002f58, label %dec_label_pc_10002dd0

dec_label_pc_10002dd0:                            ; preds = %dec_label_pc_10002dac
  %v0_10002dd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002dd0 = icmp slt i32 %v0_10002dd0, 0
  %v3_10002dd0 = icmp eq i32 %v0_10002dd0, 0
  store i1 %v1_10002dd0, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002dd0, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10002ddc = load i32, i32* @r31, align 4
  %v1_10002ddc = urem i32 %v0_10002ddc, 65536
  store i32 %v1_10002ddc, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10002dd0, 1
  br i1 %tmp49, label %dec_label_pc_100030f8, label %dec_label_pc_10002de4

dec_label_pc_10002de4:                            ; preds = %dec_label_pc_10002dd0
  %v4_10002de4 = sext i16 %v5_10002cd0 to i32
  store i32 %v4_10002de4, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10002e68 = ptrtoint i32* %stack_var_-400 to i32
  %v2_10002e88 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002e94 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10002e98 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10002ed0 = zext i16 %tmp13 to i32
  %v1_10002f00 = and i32 %tmp, 1179648
  %v3_10003014 = icmp eq i32 %v1_10002ca8, 0
  %v4_10003034 = sext i8 %v5_10002c5c to i32
  %v4_1000303c = sext i8 %v5_10002c94 to i32
  %v1_10002f04 = and i32 %tmp, 327680
  %v3_10002f04 = icmp eq i32 %v1_10002f04, 0
  %v4_10002f0c = icmp eq i32 %v1_10002f00, 1179648
  br label %dec_label_pc_10002df0

dec_label_pc_10002df0:                            ; preds = %dec_label_pc_100030e4, %dec_label_pc_10002f18, %dec_label_pc_10002de4
  %v0_10002df0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002df0 = add i32 %v0_10002df0, 40
  store i32 %v1_10002df0, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e0053 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  store i32 %v3_10002e0053, i32* %r3.global-to-local, align 4
  %v3_10002e0455 = icmp eq i32 %v3_10002e0053, -1
  store i1 %v3_10002e0455, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e0053, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e0455, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002e10:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0
  store i32 3, i32* @r4, align 4
  store i32 268447264, i32* @lr, align 4
  %v1_10002e1c = call i32 @function_10009430(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10002e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e28, i32* %r3.global-to-local, align 4
  store i32 268447284, i32* @lr, align 4
  %v2_10002e30 = call i32 @function_10009430(i32 %v0_10002e28)
  store i32 %v2_10002e30, i32* %r3.global-to-local, align 4
  %v3_10002e34 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002e3c = mul i32 %v3_10002e34, 24
  store i32 %v1_10002e3c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-400, align 4
  %v0_10002e44 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002e44 = add i32 %v0_10002e44, %v1_10002e3c
  store i32 %v2_10002e44, i32* %r11.global-to-local, align 4
  %v1_10002e48 = add i32 %v2_10002e44, 20
  %v2_10002e48 = inttoptr i32 %v1_10002e48 to i8*
  %v3_10002e48 = load i8, i8* %v2_10002e48, align 1
  %v4_10002e48 = zext i8 %v3_10002e48 to i32
  store i32 %v4_10002e48, i32* %r9.global-to-local, align 4
  %v3_10002e4c = icmp eq i8 %v3_10002e48, 31
  store i1 %v3_10002e4c, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10002e48, 32
  %v1_10002f24 = add i32 %v2_10002e44, 16
  %v2_10002f24 = inttoptr i32 %v1_10002f24 to i32*
  %v3_10002f24 = load i32, i32* %v2_10002f24, align 4
  br i1 %tmp50, label %dec_label_pc_10002f24, label %dec_label_pc_10002e54

dec_label_pc_10002e54:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r0.global-to-local, align 4
  %v0_10002e5c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002e5c, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002e60:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.0 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  store i32 %v4_10002de4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002e68:                            ; preds = %dec_label_pc_10002f4c, %dec_label_pc_10002e60
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002f4c ], [ %stack_var_-396.0, %dec_label_pc_10002e60 ]
  %storemerge = phi i16 [ %v1_10002f4c, %dec_label_pc_10002f4c ], [ %v5_10002cd0, %dec_label_pc_10002e60 ]
  %v0_10002e70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e70, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002e78.22 to i32), i32* @lr, align 4
  %v3_10002e74 = call i32 @function_1000a034(i32 %v0_10002e70, i32 %v2_10002e68, i32 16)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447360, i32* @lr, align 4
  %v0_10002e7c = call i32 @function_100098e8()
  store i32 %v0_10002e7c, i32* %r3.global-to-local, align 4
  store i32 %v0_10002e7c, i32* @r31, align 4
  %v4_10002ec4 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10002ed4 = zext i16 %storemerge to i32
  %v4_10002ed8 = icmp eq i16 %storemerge, %tmp13
  %v4_10002ec4.not = xor i1 %v4_10002ec4, true
  br label %dec_label_pc_10002e84

dec_label_pc_10002e84:                            ; preds = %dec_label_pc_10002ee0, %dec_label_pc_10002e68
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002e94, i32* %r7.global-to-local, align 4
  store i32 %v2_10002e98, i32* %r8.global-to-local, align 4
  %v0_10002e9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002e9c, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268447400, i32* @lr, align 4
  %v6_10002ea4 = call i32 @function_1000a140(i32 %v0_10002e9c, i32 %v2_10002e88, i32 256, i32 16384, i32 %v2_10002e94, i32 %v2_10002e98)
  store i32 %v6_10002ea4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002eb0 = icmp eq i32 %v6_10002ea4, -1
  store i1 %v3_10002eb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002eb0, label %dec_label_pc_10002f60, label %dec_label_pc_10002ebc

dec_label_pc_10002ebc:                            ; preds = %dec_label_pc_10002e84
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10002ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002ea4, 41
  %or.cond = or i1 %tmp51, %v4_10002ec4.not
  br i1 %or.cond, label %dec_label_pc_10002ee0, label %dec_label_pc_10002ed0

dec_label_pc_10002ed0:                            ; preds = %dec_label_pc_10002ebc
  store i32 %v4_10002ed0, i32* %r0.global-to-local, align 4
  store i32 %v4_10002ed4, i32* %r8.global-to-local, align 4
  store i1 %v4_10002ed8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ed8, label %dec_label_pc_10002efc, label %dec_label_pc_10002ee0

dec_label_pc_10002ee0:                            ; preds = %dec_label_pc_10002ebc, %dec_label_pc_10002f14, %dec_label_pc_10002ed0
  store i32 268447460, i32* @lr, align 4
  %v0_10002ee0 = call i32 @function_100098e8()
  %v0_10002ee4 = load i32, i32* @r31, align 4
  %v2_10002ee4 = sub i32 %v0_10002ee0, %v0_10002ee4
  store i32 %v2_10002ee4, i32* %r3.global-to-local, align 4
  %v3_10002ee8 = icmp eq i32 %v2_10002ee4, 10
  store i1 %v3_10002ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10002ee4, 11
  br i1 %tmp52, label %dec_label_pc_10002e84, label %dec_label_pc_10002ef0

dec_label_pc_10002ef0:                            ; preds = %dec_label_pc_10002ee0
  %v0_10002ef0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ef0, i32* %r3.global-to-local, align 4
  store i32 268447480, i32* @lr, align 4
  %v0_10002ef4 = call i32 @function_10009518()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e00 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  store i32 %v3_10002e00, i32* %r3.global-to-local, align 4
  %v3_10002e04 = icmp eq i32 %v3_10002e00, -1
  store i1 %v3_10002e04, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e00, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e04, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002efc:                            ; preds = %dec_label_pc_10002ed0
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10002f00, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10002f0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002f0c, label %dec_label_pc_10002fc0, label %dec_label_pc_10002f14

dec_label_pc_10002f14:                            ; preds = %dec_label_pc_10002efc
  br i1 %v3_10002f04, label %dec_label_pc_10002ee0, label %dec_label_pc_10002f18

dec_label_pc_10002f18:                            ; preds = %dec_label_pc_10002f14
  %v0_10002f18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002f18, i32* %r3.global-to-local, align 4
  store i32 268447520, i32* @lr, align 4
  %v0_10002f1c = call i32 @function_10009518()
  store i32 %v0_10002f1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002df0

dec_label_pc_10002f24:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r29.global-to-local, align 4
  %v0_10002f28 = call i32 @function_10005b08()
  store i32 %v0_10002f28, i32* %r3.global-to-local, align 4
  %v3_10002f2c = load i32, i32* %stack_var_-408, align 4
  %v1_10002f30 = mul i32 %v3_10002f2c, 24
  %v1_10002f34 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002f34 = add i32 %v1_10002f34, %v1_10002f30
  store i32 %v2_10002f34, i32* %r9.global-to-local, align 4
  %v1_10002f38 = add i32 %v2_10002f34, 20
  %v2_10002f38 = inttoptr i32 %v1_10002f38 to i8*
  %v3_10002f38 = load i8, i8* %v2_10002f38, align 1
  %v4_10002f38 = zext i8 %v3_10002f38 to i32
  store i32 %v4_10002f38, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10002f38, 64
  %v2_10002f3c = zext i8 %tmp56 to i32
  %v3_10002f3c = lshr i32 %v0_10002f28, %v2_10002f3c
  store i32 %v3_10002f3c, i32* %r3.global-to-local, align 4
  %v0_10002f40 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002f40 = add i32 %v3_10002f3c, %v0_10002f40
  store i32 %v2_10002f40, i32* %r29.global-to-local, align 4
  %v0_10002f48 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002f48, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002f4c:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.2 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  %v0_10002f4c = call i32 @function_10005b08()
  %v1_10002f4c = trunc i32 %v0_10002f4c to i16
  store i32 %v0_10002f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002f58:                            ; preds = %dec_label_pc_10002dac
  %v0_10002f58 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002f58, i32* %r3.global-to-local, align 4
  store i32 268447584, i32* @lr, align 4
  %v0_10002f5c = call i32 @function_10009518()
  store i32 %v0_10002f5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002e84, %dec_label_pc_10002bb4, %dec_label_pc_10002f58
  store i32 %v0_10002bcc, i32* %r0.global-to-local, align 4
  %v1_10002f74 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bbc)
  store i32 %v0_10002c04, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c0c, i32* %r29.global-to-local, align 4
  %v0_10002fbc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002fbc

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10002efc
  %v3_10002fc0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002fc0, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002fc4, i32* @r3, align 4
  %v0_10002fc8 = load i32, i32* @r30, align 4
  %v1_10002fc8 = add i32 %v0_10002fc8, 2
  %v2_10002fc8 = inttoptr i32 %v1_10002fc8 to i16*
  %v3_10002fc8 = load i16, i16* %v2_10002fc8, align 2
  %v4_10002fc8 = zext i16 %v3_10002fc8 to i32
  store i32 %v4_10002fc8, i32* %r11.global-to-local, align 4
  %v1_10002fcc = mul i32 %v3_10002fc0, 16
  store i32 %v1_10002fcc, i32* %r9.global-to-local, align 4
  %v1_10002fd0 = mul i32 %v3_10002fc0, 4
  store i32 %v1_10002fd0, i32* @r29, align 4
  %v1_10002fd4 = load i32, i32* %r22.global-to-local, align 4
  %v3_10002fd4 = add i32 %v1_10002fd4, %v1_10002fcc
  %v4_10002fd4 = inttoptr i32 %v3_10002fd4 to i32*
  store i32 %tmp14, i32* %v4_10002fd4, align 4
  %v0_10002fd8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002fd8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fd8 = add i32 %v1_10002fd8, %v0_10002fd8
  store i32 %v2_10002fd8, i32* %r9.global-to-local, align 4
  %v0_10002fdc = load i32, i32* %r8.global-to-local, align 4
  %v1_10002fdc = trunc i32 %v0_10002fdc to i16
  %v3_10002fdc = add i32 %v2_10002fd8, 14
  %v4_10002fdc = inttoptr i32 %v3_10002fdc to i16*
  store i16 %v1_10002fdc, i16* %v4_10002fdc, align 2
  %v0_10002fe0 = load i32, i32* @r30, align 4
  %v1_10002fe0 = add i32 %v0_10002fe0, 4
  %v2_10002fe0 = inttoptr i32 %v1_10002fe0 to i32*
  %v3_10002fe0 = load i32, i32* %v2_10002fe0, align 4
  store i32 %v3_10002fe0, i32* %r0.global-to-local, align 4
  %v0_10002fe4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002fe4 = trunc i32 %v0_10002fe4 to i16
  %v2_10002fe4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002fe4 = add i32 %v2_10002fe4, 12
  %v4_10002fe4 = inttoptr i32 %v3_10002fe4 to i16*
  store i16 %v1_10002fe4, i16* %v4_10002fe4, align 2
  %v0_10002fe8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fe8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fe8 = add i32 %v1_10002fe8, 4
  %v3_10002fe8 = inttoptr i32 %v2_10002fe8 to i32*
  store i32 %v0_10002fe8, i32* %v3_10002fe8, align 4
  %v0_10002fec = load i32, i32* @r30, align 4
  %v1_10002fec = add i32 %v0_10002fec, 8
  %v2_10002fec = inttoptr i32 %v1_10002fec to i32*
  %v3_10002fec = load i32, i32* %v2_10002fec, align 4
  store i32 %v3_10002fec, i32* %r0.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002ff0 = add i32 %v1_10002ff0, 8
  %v3_10002ff0 = inttoptr i32 %v2_10002ff0 to i32*
  store i32 %v3_10002fec, i32* %v3_10002ff0, align 4
  store i32 268447736, i32* @lr, align 4
  %v0_10002ff4 = call i32 @function_1000a438()
  store i32 %v0_10002ff4, i32* %r3.global-to-local, align 4
  %v3_10002ff8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002ff8, i32* %r0.global-to-local, align 4
  %v1_10002ffc = load i32, i32* @r29, align 4
  %v2_10002ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10002ffc = add i32 %v2_10002ffc, %v1_10002ffc
  %v4_10002ffc = inttoptr i32 %v3_10002ffc to i32*
  store i32 %v0_10002ff4, i32* %v4_10002ffc, align 4
  %v0_10003000 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003000 = mul i32 %v0_10003000, 4
  store i32 %v1_10003000, i32* %r0.global-to-local, align 4
  %v0_10003004 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003004 = add i32 %v0_10003004, %v1_10003000
  %v3_10003004 = inttoptr i32 %v2_10003004 to i32*
  %v4_10003004 = load i32, i32* %v3_10003004, align 4
  store i32 %v4_10003004, i32* @r31, align 4
  store i32 %v1_10002ca8, i32* %r0.global-to-local, align 4
  %v1_1000300c = inttoptr i32 %v4_10003004 to i32*
  %v2_1000300c = load i32, i32* %v1_1000300c, align 4
  store i32 %v2_1000300c, i32* %r9.global-to-local, align 4
  %v1_10003010 = add i32 %v4_10003004, 20
  store i32 %v1_10003010, i32* @r30, align 4
  store i1 %v3_10003014, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000301c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000301c, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003024 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003028 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003028 = trunc i32 %v0_10003028 to i16
  %v2_10003028 = load i32, i32* @r31, align 4
  %v3_10003028 = add i32 %v2_10003028, 4
  %v4_10003028 = inttoptr i32 %v3_10003028 to i16*
  store i16 %v1_10003028, i16* %v4_10003028, align 2
  %v1_1000302c = load i32, i32* @r31, align 4
  %v2_1000302c = inttoptr i32 %v1_1000302c to i32*
  store i32 %v1_10003024, i32* %v2_1000302c, align 4
  %v0_10003030 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003030 = trunc i32 %v0_10003030 to i16
  %v2_10003030 = load i32, i32* @r31, align 4
  %v3_10003030 = add i32 %v2_10003030, 2
  %v4_10003030 = inttoptr i32 %v3_10003030 to i16*
  store i16 %v1_10003030, i16* %v4_10003030, align 2
  store i32 %v4_10003034, i32* %r9.global-to-local, align 4
  %v2_10003038 = load i32, i32* @r31, align 4
  %v3_10003038 = add i32 %v2_10003038, 1
  %v4_10003038 = inttoptr i32 %v3_10003038 to i8*
  store i8 %v5_10002c5c, i8* %v4_10003038, align 1
  store i32 %v4_1000303c, i32* %r0.global-to-local, align 4
  %v2_10003040 = load i32, i32* @r31, align 4
  %v3_10003040 = add i32 %v2_10003040, 8
  %v4_10003040 = inttoptr i32 %v3_10003040 to i8*
  store i8 %v5_10002c94, i8* %v4_10003040, align 1
  %v0_10003044 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003044, label %dec_label_pc_10003050, label %dec_label_pc_10003048

dec_label_pc_10003048:                            ; preds = %dec_label_pc_10002fc0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000304c = load i32, i32* @r31, align 4
  %v3_1000304c = add i32 %v2_1000304c, 6
  %v4_1000304c = inttoptr i32 %v3_1000304c to i16*
  store i16 16384, i16* %v4_1000304c, align 2
  br label %dec_label_pc_10003050

dec_label_pc_10003050:                            ; preds = %dec_label_pc_10002fc0, %dec_label_pc_10003048
  %v2_10003058 = load i32, i32* @r31, align 4
  %v3_10003058 = add i32 %v2_10003058, 9
  %v4_10003058 = inttoptr i32 %v3_10003058 to i8*
  store i8 6, i8* %v4_10003058, align 1
  %v3_1000305c = load i32, i32* @global_var_1001c660.16, align 4
  store i32 %v3_1000305c, i32* %r0.global-to-local, align 4
  %v1_10003060 = load i32, i32* @r31, align 4
  %v2_10003060 = add i32 %v1_10003060, 12
  %v3_10003060 = inttoptr i32 %v2_10003060 to i32*
  store i32 %v3_1000305c, i32* %v3_10003060, align 4
  %v3_10003064 = load i32, i32* %stack_var_-408, align 4
  %v1_10003068 = mul i32 %v3_10003064, 16
  store i32 %v1_10003068, i32* %r9.global-to-local, align 4
  %v1_1000306c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000306c = add i32 %v1_1000306c, %v1_10003068
  %v3_1000306c = inttoptr i32 %v2_1000306c to i32*
  %v4_1000306c = load i32, i32* %v3_1000306c, align 4
  store i32 %v4_1000306c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000306c, i32* %r9.global-to-local, align 4
  %v1_10003074 = add i32 %v2_1000306c, 12
  %v2_10003074 = inttoptr i32 %v1_10003074 to i16*
  %v3_10003074 = load i16, i16* %v2_10003074, align 2
  %v4_10003074 = zext i16 %v3_10003074 to i32
  store i32 %v4_10003074, i32* %r11.global-to-local, align 4
  %v1_10003078 = load i32, i32* @r31, align 4
  %v2_10003078 = add i32 %v1_10003078, 16
  %v3_10003078 = inttoptr i32 %v2_10003078 to i32*
  store i32 %v4_1000306c, i32* %v3_10003078, align 4
  %v0_1000307c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000307c = trunc i32 %v0_1000307c to i16
  %v2_1000307c = load i32, i32* @r31, align 4
  %v3_1000307c = add i32 %v2_1000307c, 20
  %v4_1000307c = inttoptr i32 %v3_1000307c to i16*
  store i16 %v1_1000307c, i16* %v4_1000307c, align 2
  %v0_10003080 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003080 = add i32 %v0_10003080, 8
  %v2_10003080 = inttoptr i32 %v1_10003080 to i32*
  %v3_10003080 = load i32, i32* %v2_10003080, align 4
  store i32 %v3_10003080, i32* %r0.global-to-local, align 4
  %v0_10003084 = load i32, i32* @r30, align 4
  %v1_10003084 = add i32 %v0_10003084, 12
  %v2_10003084 = inttoptr i32 %v1_10003084 to i32*
  %v3_10003084 = load i32, i32* %v2_10003084, align 4
  store i32 %v3_10003084, i32* %r11.global-to-local, align 4
  %v2_10003088 = add i32 %v0_10003084, 4
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v3_10003080, i32* %v3_10003088, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003090 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003090, i32* %r11.global-to-local, align 4
  %v0_10003094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003094 = add i32 %v0_10003094, 14
  %v2_10003094 = inttoptr i32 %v1_10003094 to i16*
  %v3_10003094 = load i16, i16* %v2_10003094, align 2
  %v4_10003094 = zext i16 %v3_10003094 to i32
  store i32 %v4_10003094, i32* %r0.global-to-local, align 4
  %v1_10003098 = add i32 %v0_10003094, 4
  %v2_10003098 = inttoptr i32 %v1_10003098 to i32*
  %v3_10003098 = load i32, i32* %v2_10003098, align 4
  store i32 %v3_10003098, i32* %r10.global-to-local, align 4
  %v1_1000309c = or i32 %v1_10003090, 1114112
  store i32 %v1_1000309c, i32* %r11.global-to-local, align 4
  %v2_100030a0 = load i32, i32* @r30, align 4
  %v3_100030a0 = add i32 %v2_100030a0, 2
  %v4_100030a0 = inttoptr i32 %v3_100030a0 to i16*
  store i16 %v3_10003094, i16* %v4_100030a0, align 2
  %v0_100030a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100030a4 = load i32, i32* @r30, align 4
  %v2_100030a4 = add i32 %v1_100030a4, 8
  %v3_100030a4 = inttoptr i32 %v2_100030a4 to i32*
  store i32 %v0_100030a4, i32* %v3_100030a4, align 4
  %v0_100030a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100030a8 = load i32, i32* @r30, align 4
  %v2_100030a8 = add i32 %v1_100030a8, 12
  %v3_100030a8 = inttoptr i32 %v2_100030a8 to i32*
  store i32 %v0_100030a8, i32* %v3_100030a8, align 4
  %v0_100030ac = call i32 @function_10005b08()
  %v1_100030ac = trunc i32 %v0_100030ac to i16
  store i32 %v1_10002ce4, i32* %r9.global-to-local, align 4
  %v3_100030b4 = load i32, i32* @r30, align 4
  %v4_100030b4 = add i32 %v3_100030b4, 14
  %v5_100030b4 = inttoptr i32 %v4_100030b4 to i16*
  store i16 %v1_100030ac, i16* %v5_100030b4, align 2
  %v0_100030b8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100030b8, i32* @r4, align 4
  %v0_100030bc = load i32, i32* @r31, align 4
  %v1_100030bc = add i32 %v0_100030bc, 40
  store i32 %v1_100030bc, i32* @r3, align 4
  %v0_100030c0 = load i32, i32* @r30, align 4
  %v1_100030c0 = add i32 %v0_100030c0, 12
  %v2_100030c0 = inttoptr i32 %v1_100030c0 to i32*
  %v3_100030c0 = load i32, i32* %v2_100030c0, align 4
  store i32 %v3_100030c0, i32* %r0.global-to-local, align 4
  %v1_100030c4 = call i32 @__asm_rlwimi(i32 %v1_10002ce4, i32 21, i32 10, i32 10)
  store i32 %v1_100030c4, i32* %r0.global-to-local, align 4
  %v1_100030c8 = call i32 @__asm_rlwimi(i32 %v1_10002d08, i32 20, i32 11, i32 11)
  store i32 %v1_100030c8, i32* %r0.global-to-local, align 4
  %v1_100030cc = call i32 @__asm_rlwimi(i32 %v1_10002d20, i32 19, i32 12, i32 12)
  store i32 %v1_100030cc, i32* %r0.global-to-local, align 4
  %v1_100030d0 = call i32 @__asm_rlwimi(i32 %v1_10002d38, i32 18, i32 13, i32 13)
  store i32 %v1_100030d0, i32* %r0.global-to-local, align 4
  %v1_100030d4 = call i32 @__asm_rlwimi(i32 %v1_10002d50, i32 17, i32 14, i32 14)
  store i32 %v1_100030d4, i32* %r0.global-to-local, align 4
  %v1_100030d8 = call i32 @__asm_rlwimi(i32 %v1_10002d68, i32 16, i32 15, i32 15)
  store i32 %v1_100030d8, i32* %r0.global-to-local, align 4
  %v1_100030dc = load i32, i32* @r30, align 4
  %v2_100030dc = add i32 %v1_100030dc, 12
  %v3_100030dc = inttoptr i32 %v2_100030dc to i32*
  store i32 %v1_100030d8, i32* %v3_100030dc, align 4
  %v0_100030e0 = call i32 @function_10005cdc()
  store i32 %v0_100030e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100030e4

dec_label_pc_100030e4:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0, %dec_label_pc_10003050
  %v3_100030e4 = load i32, i32* %stack_var_-408, align 4
  %v1_100030e8 = add i32 %v3_100030e4, 1
  store i32 %v1_100030e8, i32* %r9.global-to-local, align 4
  %v1_100030ec = load i32, i32* %r21.global-to-local, align 4
  %v2_100030ec = icmp slt i32 %v1_100030e8, %v1_100030ec
  %v4_100030ec = icmp eq i32 %v1_100030e8, %v1_100030ec
  store i1 %v4_100030ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100030e8, i32* %stack_var_-408, align 4
  br i1 %v2_100030ec, label %dec_label_pc_10002df0, label %dec_label_pc_100030f8.loopexit

dec_label_pc_100030f8.loopexit:                   ; preds = %dec_label_pc_100030e4
  %v0_10003104.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003104.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100030f8

dec_label_pc_100030f8:                            ; preds = %dec_label_pc_100030f8.loopexit, %dec_label_pc_10002dd0
  %v1_10003104.pre = phi i1 [ %v1_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v1_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_10003104.pre = phi i1 [ %v0_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v3_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_100030f8 = load i32, i32* %r27.global-to-local, align 4
  %v3_100030f8 = icmp eq i32 %v0_100030f8, 0
  store i1 %v3_100030f8, i1* %cr2_eq.global-to-local, align 1
  %v0_100030fc = load i32, i32* %r25.global-to-local, align 4
  %v1_100030fc = add i32 %v0_100030fc, 40
  store i32 %v1_100030fc, i32* %r26.global-to-local, align 4
  %v1_10003100 = add i32 %v0_100030fc, 20
  store i32 %v1_10003100, i32* @r31, align 4
  br label %dec_label_pc_10003104.outer

dec_label_pc_10003104.outer:                      ; preds = %dec_label_pc_100031d8, %dec_label_pc_100030f8
  %v1_10003104.ph = phi i1 [ %v1_10003104.pre, %dec_label_pc_100030f8 ], [ %v1_100031d8, %dec_label_pc_100031d8 ]
  %v0_10003104.ph = phi i1 [ %v0_10003104.pre, %dec_label_pc_100030f8 ], [ %v0_100031d8, %dec_label_pc_100031d8 ]
  %v2_10003104 = or i1 %v1_10003104.ph, %v0_10003104.ph
  br label %dec_label_pc_10003104

dec_label_pc_10003104:                            ; preds = %dec_label_pc_10003104.outer, %dec_label_pc_10003104
  br i1 %v2_10003104, label %dec_label_pc_10003104, label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10003104, %dec_label_pc_100031d8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003118 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003118 = icmp eq i32 %v0_10003118, 65535
  store i1 %v4_10003118, i1* %cr4_eq.global-to-local, align 1
  %v0_1000311c = load i32, i32* @r31, align 4
  %v1_1000311c = urem i32 %v0_1000311c, 65536
  store i32 %v1_1000311c, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003128

dec_label_pc_10003128:                            ; preds = %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, %dec_label_pc_10003108
  %v0_10003134 = phi i1 [ %v0_10003134.pre, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ %v4_10003118, %dec_label_pc_10003108 ]
  %v0_10003128 = phi i32 [ %v1_100031c8, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ 0, %dec_label_pc_10003108 ]
  %v1_10003128 = mul i32 %v0_10003128, 4
  store i32 %v1_10003128, i32* %r0.global-to-local, align 4
  %v0_1000312c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000312c = add i32 %v0_1000312c, %v1_10003128
  %v3_1000312c = inttoptr i32 %v2_1000312c to i32*
  %v4_1000312c = load i32, i32* %v3_1000312c, align 4
  store i32 %v4_1000312c, i32* @r29, align 4
  %v1_10003130 = add i32 %v4_1000312c, 20
  store i32 %v1_10003130, i32* %r28.global-to-local, align 4
  br i1 %v0_10003134, label %dec_label_pc_100031e0, label %dec_label_pc_10003138

dec_label_pc_10003138:                            ; preds = %dec_label_pc_10003128
  %v1_10003138 = add i32 %v4_1000312c, 40
  store i32 %v1_10003138, i32* @r3, align 4
  %v0_1000313c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000313c, i32* @r4, align 4
  %v0_10003140 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003140, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_10003144:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0, %dec_label_pc_100031f4
  %v2_10003144 = phi i32 [ %v4_1000312c, %dec_label_pc_10003138 ], [ %v0_100031ec, %dec_label_pc_100031e0 ], [ %v2_10003144.pre, %dec_label_pc_100031f4 ]
  %v0_10003144 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003144 = trunc i32 %v0_10003144 to i16
  %v3_10003144 = add i32 %v2_10003144, 10
  %v4_10003144 = inttoptr i32 %v3_10003144 to i16*
  store i16 %v1_10003144, i16* %v4_10003144, align 2
  %v0_1000314c = load i32, i32* @r29, align 4
  store i32 %v0_1000314c, i32* @r3, align 4
  %v2_10003150 = call i32 @function_100043cc(i32 %v0_1000314c, i32 20)
  %v3_10003150 = trunc i32 %v2_10003150 to i16
  store i32 %v2_10003150, i32* %r3.global-to-local, align 4
  %v3_10003154 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003154, i32* %r9.global-to-local, align 4
  %v3_10003158 = load i32, i32* @r29, align 4
  %v4_10003158 = add i32 %v3_10003158, 10
  %v5_10003158 = inttoptr i32 %v4_10003158 to i16*
  store i16 %v3_10003150, i16* %v5_10003158, align 2
  %v0_1000315c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000315c, i32* @r4, align 4
  %v0_10003160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003160 = mul i32 %v0_10003160, 16
  store i32 %v1_10003160, i32* %r9.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003164 = trunc i32 %v0_10003164 to i16
  %v3_10003164 = add i32 %v0_1000315c, 16
  %v4_10003164 = inttoptr i32 %v3_10003164 to i16*
  store i16 %v1_10003164, i16* %v4_10003164, align 2
  %v0_10003168 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003168 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003168 = add i32 %v1_10003168, %v0_10003168
  store i32 %v2_10003168, i32* %r9.global-to-local, align 4
  %v0_1000316c = load i32, i32* @r30, align 4
  %v1_10003170 = add i32 %v2_10003168, 4
  %v2_10003170 = inttoptr i32 %v1_10003170 to i32*
  %v3_10003170 = load i32, i32* %v2_10003170, align 4
  store i32 %v3_10003170, i32* %r11.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r31, align 4
  %v0_10003178 = load i32, i32* @r29, align 4
  store i32 %v0_10003178, i32* %r3.global-to-local, align 4
  %v1_1000317c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000317c = add i32 %v1_1000317c, 4
  %v3_1000317c = inttoptr i32 %v2_1000317c to i32*
  store i32 %v3_10003170, i32* %v3_1000317c, align 4
  %v0_10003180 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003180 = add i32 %v0_10003180, 1
  store i32 %v1_10003180, i32* %r11.global-to-local, align 4
  %v1_10003184 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003184 = add i32 %v1_10003184, 4
  %v3_10003184 = inttoptr i32 %v2_10003184 to i32*
  store i32 %v1_10003180, i32* %v3_10003184, align 4
  %v0_10003188 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003188 = add i32 %v0_10003188, 8
  %v2_10003188 = inttoptr i32 %v1_10003188 to i32*
  %v3_10003188 = load i32, i32* %v2_10003188, align 4
  store i32 %v3_10003188, i32* %r0.global-to-local, align 4
  %v1_1000318c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000318c = add i32 %v1_1000318c, 8
  %v3_1000318c = inttoptr i32 %v2_1000318c to i32*
  store i32 %v3_10003188, i32* %v3_1000318c, align 4
  %v4_10003190 = call i32 @function_10004430(i32 %v0_10003178, i32 %v0_1000315c, i32 %v0_1000316c, i32 %v0_10003174)
  %v5_10003190 = trunc i32 %v4_10003190 to i16
  store i32 %v4_10003190, i32* %r3.global-to-local, align 4
  %v3_10003194 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003194, i32* %r7.global-to-local, align 4
  %v0_10003198 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003198 = add i32 %v0_10003198, 2
  %v2_10003198 = inttoptr i32 %v1_10003198 to i16*
  %v3_10003198 = load i16, i16* %v2_10003198, align 2
  %v4_10003198 = zext i16 %v3_10003198 to i32
  store i32 %v4_10003198, i32* %r0.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r29, align 4
  %v1_100031a0 = mul i32 %v3_10003194, 24
  store i32 %v1_100031a0, i32* %r7.global-to-local, align 4
  %v4_100031a4 = add i32 %v0_10003198, 16
  %v5_100031a4 = inttoptr i32 %v4_100031a4 to i16*
  store i16 %v5_10003190, i16* %v5_100031a4, align 2
  %v0_100031a8 = load i32, i32* %r26.global-to-local, align 4
  %v0_100031ac = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100031ac, i32* %r3.global-to-local, align 4
  %v0_100031b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100031b0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100031b0 = add i32 %v1_100031b0, %v0_100031b0
  store i32 %v2_100031b0, i32* %r7.global-to-local, align 4
  %v0_100031b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100031b8 = trunc i32 %v0_100031b8 to i16
  %v3_100031b8 = add i32 %v2_100031b0, 2
  %v4_100031b8 = inttoptr i32 %v3_100031b8 to i16*
  store i16 %v1_100031b8, i16* %v4_100031b8, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268448196, i32* @lr, align 4
  %v6_100031c0 = call i32 @function_1000a1b8(i32 %v0_100031ac, i32 %v0_1000319c, i32 %v0_100031a8, i32 16384, i32 %v2_100031b0, i32 16)
  store i32 %v6_100031c0, i32* %r3.global-to-local, align 4
  %v3_100031c4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100031c4, i32* %r9.global-to-local, align 4
  %v1_100031c8 = add i32 %v3_100031c4, 1
  store i32 %v1_100031c8, i32* %r0.global-to-local, align 4
  %v1_100031cc = load i32, i32* %r21.global-to-local, align 4
  %v2_100031cc = icmp slt i32 %v1_100031c8, %v1_100031cc
  %v4_100031cc = icmp eq i32 %v1_100031c8, %v1_100031cc
  store i1 %v4_100031cc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100031c8, i32* %stack_var_-408, align 4
  br i1 %v2_100031cc, label %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, label %dec_label_pc_100031d8

dec_label_pc_10003144.dec_label_pc_10003128_crit_edge: ; preds = %dec_label_pc_10003144
  %v0_10003134.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003128

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_10003144
  %v0_100031d8 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100031d8 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100031d8 = or i1 %v0_100031d8, %v1_100031d8
  br i1 %v2_100031d8, label %dec_label_pc_10003104.outer, label %dec_label_pc_10003108

dec_label_pc_100031e0:                            ; preds = %dec_label_pc_10003128
  %v0_100031e0 = call i32 @function_10005b08()
  %v1_100031e0 = trunc i32 %v0_100031e0 to i16
  %v0_100031e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100031e4, i32* @r4, align 4
  %v3_100031e8 = load i32, i32* @r29, align 4
  %v4_100031e8 = add i32 %v3_100031e8, 4
  %v5_100031e8 = inttoptr i32 %v4_100031e8 to i16*
  store i16 %v1_100031e0, i16* %v5_100031e8, align 2
  %v0_100031ec = load i32, i32* @r29, align 4
  %v1_100031ec = add i32 %v0_100031ec, 40
  store i32 %v1_100031ec, i32* @r3, align 4
  %v0_100031f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100031f0, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_100031f4:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0
  %v0_100031f4 = call i32 @function_10005cdc()
  store i32 %v0_100031f4, i32* %r3.global-to-local, align 4
  %v2_10003144.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003144

; uselistorder directives
  uselistorder i32 %v0_100031ec, { 1, 0 }
  uselistorder i1 %v1_100031d8, { 1, 0 }
  uselistorder i1 %v0_100031d8, { 1, 0 }
  uselistorder i32 %v1_100031c8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003190, { 1, 0 }
  uselistorder i32 %v0_1000315c, { 1, 0, 2 }
  uselistorder i32 %v2_10003150, { 1, 0 }
  uselistorder i32 %v1_10003128, { 1, 0 }
  uselistorder i32 %v1_100030e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000306c, { 1, 0, 2 }
  uselistorder i32 %v1_10003068, { 1, 0 }
  uselistorder i32 %v1_10003000, { 1, 0 }
  uselistorder i32 %v1_10002fcc, { 1, 0 }
  uselistorder i32 %v0_10002f4c, { 1, 0 }
  uselistorder i32 %v2_10002f40, { 1, 2, 0 }
  uselistorder i1 %v4_10002ec4, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002f24, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10002f00, { 1, 0 }
  uselistorder i32 %v1_10002ca8, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 22, 13, 14, 15, 16, 17, 18, 19, 30, 31, 21, 20, 23, 24, 25, 27, 26, 28, 29, 4, 3, 32, 2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268447236, { 1, 0 }
  uselistorder label %dec_label_pc_100031f4, { 1, 0 }
  uselistorder label %dec_label_pc_10003144, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_10003104, { 1, 0 }
  uselistorder label %dec_label_pc_100030e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003050, { 1, 0 }
  uselistorder label %dec_label_pc_10002f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002ee0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10002e10, { 1, 0 }
}

define i32 @function_100031fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100031fc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10003200 = load i32, i32* @lr, align 4
  store i32 %v0_10003200, i32* %r0.global-to-local, align 4
  %v0_10003204 = call i32 @__asm_mfcr()
  store i32 %v0_10003204, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003214 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003204, i32* %r21.global-to-local, align 4
  %v0_1000324c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003254 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448368, i32* @lr, align 4
  %v2_1000326c = call i32 @function_1000a590(i32 16, i32 16)
  store i32 %v2_1000326c, i32* %r22.global-to-local, align 4
  %v0_10003278 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003278, i32* %r3.global-to-local, align 4
  store i32 268448384, i32* @lr, align 4
  %v2_1000327c = call i32 @function_1000a590(i32 %v0_10003278, i32 4)
  %v0_10003280 = load i32, i32* @r28, align 4
  store i32 %v2_1000327c, i32* %r23.global-to-local, align 4
  %v0_10003290 = load i32, i32* @r29, align 4
  store i32 %v0_10003290, i32* %r3.global-to-local, align 4
  store i32 268448408, i32* @lr, align 4
  %v4_10003294 = inttoptr i32 %v0_10003280 to i32*
  %v5_10003294 = call i32 @function_100006a8(i32 %v0_10003290, i32* %v4_10003294, i32 2, i32 0)
  %v5_100032a4 = trunc i32 %v5_10003294 to i8
  %v0_100032ac = load i32, i32* @r28, align 4
  %v0_100032b0 = load i32, i32* @r29, align 4
  store i32 %v0_100032b0, i32* %r3.global-to-local, align 4
  store i32 268448440, i32* @lr, align 4
  %v4_100032b4 = inttoptr i32 %v0_100032ac to i32*
  %v5_100032b4 = call i32 @function_100006a8(i32 %v0_100032b0, i32* %v4_100032b4, i32 3, i32 65535)
  %v0_100032b8 = load i32, i32* @r28, align 4
  store i32 %v5_100032b4, i32* @r31, align 4
  %v0_100032c8 = load i32, i32* @r29, align 4
  store i32 %v0_100032c8, i32* %r3.global-to-local, align 4
  store i32 268448464, i32* @lr, align 4
  %v4_100032cc = inttoptr i32 %v0_100032b8 to i32*
  %v5_100032cc = call i32 @function_100006a8(i32 %v0_100032c8, i32* %v4_100032cc, i32 4, i32 64)
  %v0_100032d0 = load i32, i32* @r28, align 4
  %v5_100032dc = trunc i32 %v5_100032cc to i8
  %v0_100032e4 = load i32, i32* @r29, align 4
  store i32 %v0_100032e4, i32* %r3.global-to-local, align 4
  store i32 268448492, i32* @lr, align 4
  %v4_100032e8 = inttoptr i32 %v0_100032d0 to i32*
  %v5_100032e8 = call i32 @function_100006a8(i32 %v0_100032e4, i32* %v4_100032e8, i32 5, i32 1)
  %v1_100032f0 = urem i32 %v5_100032e8, 256
  %v0_100032fc = load i32, i32* @r28, align 4
  %v0_10003304 = load i32, i32* @r29, align 4
  store i32 %v0_10003304, i32* %r3.global-to-local, align 4
  store i32 268448524, i32* @lr, align 4
  %v4_10003308 = inttoptr i32 %v0_100032fc to i32*
  %v5_10003308 = call i32 @function_100006a8(i32 %v0_10003304, i32* %v4_10003308, i32 7, i32 65535)
  %v0_1000330c = load i32, i32* @r28, align 4
  %v5_10003318 = trunc i32 %v5_10003308 to i16
  %v0_10003320 = load i32, i32* @r29, align 4
  store i32 %v0_10003320, i32* %r3.global-to-local, align 4
  store i32 268448552, i32* @lr, align 4
  %v4_10003324 = inttoptr i32 %v0_1000330c to i32*
  %v5_10003324 = call i32 @function_100006a8(i32 %v0_10003320, i32* %v4_10003324, i32 11, i32 0)
  %v0_10003328 = load i32, i32* @r28, align 4
  %v1_1000332c = urem i32 %v5_10003324, 256
  %v0_1000333c = load i32, i32* @r29, align 4
  store i32 %v0_1000333c, i32* %r3.global-to-local, align 4
  store i32 268448580, i32* @lr, align 4
  %v4_10003340 = inttoptr i32 %v0_10003328 to i32*
  %v5_10003340 = call i32 @function_100006a8(i32 %v0_1000333c, i32* %v4_10003340, i32 12, i32 1)
  %v0_10003344 = load i32, i32* @r28, align 4
  %v1_10003350 = urem i32 %v5_10003340, 256
  %v0_10003354 = load i32, i32* @r29, align 4
  store i32 %v0_10003354, i32* %r3.global-to-local, align 4
  store i32 268448604, i32* @lr, align 4
  %v4_10003358 = inttoptr i32 %v0_10003344 to i32*
  %v5_10003358 = call i32 @function_100006a8(i32 %v0_10003354, i32* %v4_10003358, i32 13, i32 1)
  %v0_1000335c = load i32, i32* @r28, align 4
  %v1_10003368 = urem i32 %v5_10003358, 256
  %v0_1000336c = load i32, i32* @r29, align 4
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  store i32 268448628, i32* @lr, align 4
  %v4_10003370 = inttoptr i32 %v0_1000335c to i32*
  %v5_10003370 = call i32 @function_100006a8(i32 %v0_1000336c, i32* %v4_10003370, i32 14, i32 0)
  %v0_10003374 = load i32, i32* @r28, align 4
  %v1_10003380 = urem i32 %v5_10003370, 256
  %v0_10003384 = load i32, i32* @r29, align 4
  store i32 %v0_10003384, i32* %r3.global-to-local, align 4
  store i32 268448652, i32* @lr, align 4
  %v4_10003388 = inttoptr i32 %v0_10003374 to i32*
  %v5_10003388 = call i32 @function_100006a8(i32 %v0_10003384, i32* %v4_10003388, i32 15, i32 0)
  %v0_1000338c = load i32, i32* @r28, align 4
  %v1_10003398 = urem i32 %v5_10003388, 256
  %v0_1000339c = load i32, i32* @r29, align 4
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  store i32 268448676, i32* @lr, align 4
  %v4_100033a0 = inttoptr i32 %v0_1000338c to i32*
  %v5_100033a0 = call i32 @function_100006a8(i32 %v0_1000339c, i32* %v4_100033a0, i32 16, i32 0)
  %v0_100033ac = load i32, i32* @r28, align 4
  %v1_100033b0 = urem i32 %v5_100033a0, 256
  %v0_100033b4 = load i32, i32* @r29, align 4
  store i32 %v0_100033b4, i32* %r3.global-to-local, align 4
  store i32 268448700, i32* @lr, align 4
  %v4_100033b8 = inttoptr i32 %v0_100033ac to i32*
  %v5_100033b8 = call i32 @function_100006a8(i32 %v0_100033b4, i32* %v4_100033b8, i32 0, i32 768)
  %v0_100033bc = load i32, i32* @r28, align 4
  store i32 %v5_100033b8, i32* %r25.global-to-local, align 4
  %v0_100033cc = load i32, i32* @r29, align 4
  store i32 %v0_100033cc, i32* %r3.global-to-local, align 4
  store i32 268448724, i32* @lr, align 4
  %v4_100033d0 = inttoptr i32 %v0_100033bc to i32*
  %v5_100033d0 = call i32 @function_100006a8(i32 %v0_100033cc, i32* %v4_100033d0, i32 1, i32 1)
  %v1_100033d8 = urem i32 %v5_100033d0, 256
  store i32 %v1_100033d8, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448744, i32* @lr, align 4
  %v3_100033e4 = call i32 @function_1000a234(i32 2, i32 3, i32 6)
  store i32 %v3_100033e4, i32* %r3.global-to-local, align 4
  %v3_100033e8 = icmp eq i32 %v3_100033e4, -1
  store i1 %v3_100033e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100033e4, i32* %r24.global-to-local, align 4
  br i1 %v3_100033e8, label %dec_label_pc_100035a8, label %dec_label_pc_100033f4

dec_label_pc_100033f4:                            ; preds = %dec_label_pc_100031fc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003400 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268448784, i32* @lr, align 4
  %v4_1000340c = call i32 @function_1000a1f8(i32 0, i32 3, i32 %v2_10003400, i32 4)
  store i32 %v4_1000340c, i32* %r3.global-to-local, align 4
  %v3_10003410 = icmp eq i32 %v4_1000340c, -1
  store i1 %v3_10003410, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003410, label %dec_label_pc_100035a0, label %dec_label_pc_10003418

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033f4
  %v0_10003418 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003418 = icmp slt i32 %v0_10003418, 0
  %v3_10003418 = icmp eq i32 %v0_10003418, 0
  store i1 %v1_10003418, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003418, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003424 = load i32, i32* @r31, align 4
  %v1_10003424 = urem i32 %v0_10003424, 65536
  store i32 %v1_10003424, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003418, 1
  br i1 %tmp49, label %dec_label_pc_10003740, label %dec_label_pc_1000342c

dec_label_pc_1000342c:                            ; preds = %dec_label_pc_10003418
  %v4_1000342c = sext i16 %v5_10003318 to i32
  store i32 %v4_1000342c, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_100034b0 = ptrtoint i32* %stack_var_-400 to i32
  %v2_100034d0 = ptrtoint i32* %stack_var_-368 to i32
  %v2_100034dc = ptrtoint i32* %stack_var_-384 to i32
  %v2_100034e0 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003518 = zext i16 %tmp13 to i32
  %v1_10003548 = and i32 %tmp, 1179648
  %v3_1000365c = icmp eq i32 %v1_100032f0, 0
  %v4_1000367c = sext i8 %v5_100032a4 to i32
  %v4_10003684 = sext i8 %v5_100032dc to i32
  %v1_1000354c = and i32 %tmp, 327680
  %v3_1000354c = icmp eq i32 %v1_1000354c, 0
  %v4_10003554 = icmp eq i32 %v1_10003548, 1179648
  br label %dec_label_pc_10003438

dec_label_pc_10003438:                            ; preds = %dec_label_pc_1000372c, %dec_label_pc_10003560, %dec_label_pc_1000342c
  %v0_10003438 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003438 = add i32 %v0_10003438, 40
  store i32 %v1_10003438, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_1000344853 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  store i32 %v3_1000344853, i32* %r3.global-to-local, align 4
  %v3_1000344c55 = icmp eq i32 %v3_1000344853, -1
  store i1 %v3_1000344c55, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000344853, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c55, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003458:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538
  store i32 3, i32* @r4, align 4
  store i32 268448872, i32* @lr, align 4
  %v1_10003464 = call i32 @function_10009430(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10003470 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003470, i32* %r3.global-to-local, align 4
  store i32 268448892, i32* @lr, align 4
  %v2_10003478 = call i32 @function_10009430(i32 %v0_10003470)
  store i32 %v2_10003478, i32* %r3.global-to-local, align 4
  %v3_1000347c = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003484 = mul i32 %v3_1000347c, 24
  store i32 %v1_10003484, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-400, align 4
  %v0_1000348c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000348c = add i32 %v0_1000348c, %v1_10003484
  store i32 %v2_1000348c, i32* %r11.global-to-local, align 4
  %v1_10003490 = add i32 %v2_1000348c, 20
  %v2_10003490 = inttoptr i32 %v1_10003490 to i8*
  %v3_10003490 = load i8, i8* %v2_10003490, align 1
  %v4_10003490 = zext i8 %v3_10003490 to i32
  store i32 %v4_10003490, i32* %r9.global-to-local, align 4
  %v3_10003494 = icmp eq i8 %v3_10003490, 31
  store i1 %v3_10003494, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10003490, 32
  %v1_1000356c = add i32 %v2_1000348c, 16
  %v2_1000356c = inttoptr i32 %v1_1000356c to i32*
  %v3_1000356c = load i32, i32* %v2_1000356c, align 4
  br i1 %tmp50, label %dec_label_pc_1000356c, label %dec_label_pc_1000349c

dec_label_pc_1000349c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r0.global-to-local, align 4
  %v0_100034a4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100034a4, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_100034a8:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.0 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  store i32 %v4_1000342c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100034b0:                            ; preds = %dec_label_pc_10003594, %dec_label_pc_100034a8
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10003594 ], [ %stack_var_-396.0, %dec_label_pc_100034a8 ]
  %storemerge = phi i16 [ %v1_10003594, %dec_label_pc_10003594 ], [ %v5_10003318, %dec_label_pc_100034a8 ]
  %v0_100034b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100034b8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100034c0.23 to i32), i32* @lr, align 4
  %v3_100034bc = call i32 @function_1000a034(i32 %v0_100034b8, i32 %v2_100034b0, i32 16)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448968, i32* @lr, align 4
  %v0_100034c4 = call i32 @function_100098e8()
  store i32 %v0_100034c4, i32* %r3.global-to-local, align 4
  store i32 %v0_100034c4, i32* @r31, align 4
  %v4_1000350c = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_1000351c = zext i16 %storemerge to i32
  %v4_10003520 = icmp eq i16 %storemerge, %tmp13
  %v4_1000350c.not = xor i1 %v4_1000350c, true
  br label %dec_label_pc_100034cc

dec_label_pc_100034cc:                            ; preds = %dec_label_pc_10003528, %dec_label_pc_100034b0
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100034dc, i32* %r7.global-to-local, align 4
  store i32 %v2_100034e0, i32* %r8.global-to-local, align 4
  %v0_100034e4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100034e4, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268449008, i32* @lr, align 4
  %v6_100034ec = call i32 @function_1000a140(i32 %v0_100034e4, i32 %v2_100034d0, i32 256, i32 16384, i32 %v2_100034dc, i32 %v2_100034e0)
  store i32 %v6_100034ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100034f8 = icmp eq i32 %v6_100034ec, -1
  store i1 %v3_100034f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100034f8, label %dec_label_pc_100035a8, label %dec_label_pc_10003504

dec_label_pc_10003504:                            ; preds = %dec_label_pc_100034cc
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_1000350c, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_100034ec, 41
  %or.cond = or i1 %tmp51, %v4_1000350c.not
  br i1 %or.cond, label %dec_label_pc_10003528, label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_10003504
  store i32 %v4_10003518, i32* %r0.global-to-local, align 4
  store i32 %v4_1000351c, i32* %r8.global-to-local, align 4
  store i1 %v4_10003520, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003520, label %dec_label_pc_10003544, label %dec_label_pc_10003528

dec_label_pc_10003528:                            ; preds = %dec_label_pc_10003504, %dec_label_pc_1000355c, %dec_label_pc_10003518
  store i32 268449068, i32* @lr, align 4
  %v0_10003528 = call i32 @function_100098e8()
  %v0_1000352c = load i32, i32* @r31, align 4
  %v2_1000352c = sub i32 %v0_10003528, %v0_1000352c
  store i32 %v2_1000352c, i32* %r3.global-to-local, align 4
  %v3_10003530 = icmp eq i32 %v2_1000352c, 10
  store i1 %v3_10003530, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_1000352c, 11
  br i1 %tmp52, label %dec_label_pc_100034cc, label %dec_label_pc_10003538

dec_label_pc_10003538:                            ; preds = %dec_label_pc_10003528
  %v0_10003538 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003538, i32* %r3.global-to-local, align 4
  store i32 268449088, i32* @lr, align 4
  %v0_1000353c = call i32 @function_10009518()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_10003448 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  store i32 %v3_10003448, i32* %r3.global-to-local, align 4
  %v3_1000344c = icmp eq i32 %v3_10003448, -1
  store i1 %v3_1000344c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003448, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003544:                            ; preds = %dec_label_pc_10003518
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10003548, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10003554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003554, label %dec_label_pc_10003608, label %dec_label_pc_1000355c

dec_label_pc_1000355c:                            ; preds = %dec_label_pc_10003544
  br i1 %v3_1000354c, label %dec_label_pc_10003528, label %dec_label_pc_10003560

dec_label_pc_10003560:                            ; preds = %dec_label_pc_1000355c
  %v0_10003560 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003560, i32* %r3.global-to-local, align 4
  store i32 268449128, i32* @lr, align 4
  %v0_10003564 = call i32 @function_10009518()
  store i32 %v0_10003564, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003438

dec_label_pc_1000356c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r29.global-to-local, align 4
  %v0_10003570 = call i32 @function_10005b08()
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  %v3_10003574 = load i32, i32* %stack_var_-408, align 4
  %v1_10003578 = mul i32 %v3_10003574, 24
  %v1_1000357c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000357c = add i32 %v1_1000357c, %v1_10003578
  store i32 %v2_1000357c, i32* %r9.global-to-local, align 4
  %v1_10003580 = add i32 %v2_1000357c, 20
  %v2_10003580 = inttoptr i32 %v1_10003580 to i8*
  %v3_10003580 = load i8, i8* %v2_10003580, align 1
  %v4_10003580 = zext i8 %v3_10003580 to i32
  store i32 %v4_10003580, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10003580, 64
  %v2_10003584 = zext i8 %tmp56 to i32
  %v3_10003584 = lshr i32 %v0_10003570, %v2_10003584
  store i32 %v3_10003584, i32* %r3.global-to-local, align 4
  %v0_10003588 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003588 = add i32 %v3_10003584, %v0_10003588
  store i32 %v2_10003588, i32* %r29.global-to-local, align 4
  %v0_10003590 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003590, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_10003594:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.2 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  %v0_10003594 = call i32 @function_10005b08()
  %v1_10003594 = trunc i32 %v0_10003594 to i16
  store i32 %v0_10003594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100035a0:                            ; preds = %dec_label_pc_100033f4
  %v0_100035a0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100035a0, i32* %r3.global-to-local, align 4
  store i32 268449192, i32* @lr, align 4
  %v0_100035a4 = call i32 @function_10009518()
  store i32 %v0_100035a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100035a8

dec_label_pc_100035a8:                            ; preds = %dec_label_pc_100034cc, %dec_label_pc_100031fc, %dec_label_pc_100035a0
  store i32 %v0_10003214, i32* %r0.global-to-local, align 4
  %v1_100035bc = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003204)
  store i32 %v0_1000324c, i32* %r28.global-to-local, align 4
  store i32 %v0_10003254, i32* %r29.global-to-local, align 4
  %v0_10003604 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003604

dec_label_pc_10003608:                            ; preds = %dec_label_pc_10003544
  %v3_10003608 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003608, i32* %r29.global-to-local, align 4
  %v0_1000360c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000360c, i32* @r3, align 4
  %v0_10003610 = load i32, i32* @r30, align 4
  %v1_10003610 = add i32 %v0_10003610, 2
  %v2_10003610 = inttoptr i32 %v1_10003610 to i16*
  %v3_10003610 = load i16, i16* %v2_10003610, align 2
  %v4_10003610 = zext i16 %v3_10003610 to i32
  store i32 %v4_10003610, i32* %r11.global-to-local, align 4
  %v1_10003614 = mul i32 %v3_10003608, 16
  store i32 %v1_10003614, i32* %r9.global-to-local, align 4
  %v1_10003618 = mul i32 %v3_10003608, 4
  store i32 %v1_10003618, i32* @r29, align 4
  %v1_1000361c = load i32, i32* %r22.global-to-local, align 4
  %v3_1000361c = add i32 %v1_1000361c, %v1_10003614
  %v4_1000361c = inttoptr i32 %v3_1000361c to i32*
  store i32 %tmp14, i32* %v4_1000361c, align 4
  %v0_10003620 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003620 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003620 = add i32 %v1_10003620, %v0_10003620
  store i32 %v2_10003620, i32* %r9.global-to-local, align 4
  %v0_10003624 = load i32, i32* %r8.global-to-local, align 4
  %v1_10003624 = trunc i32 %v0_10003624 to i16
  %v3_10003624 = add i32 %v2_10003620, 14
  %v4_10003624 = inttoptr i32 %v3_10003624 to i16*
  store i16 %v1_10003624, i16* %v4_10003624, align 2
  %v0_10003628 = load i32, i32* @r30, align 4
  %v1_10003628 = add i32 %v0_10003628, 4
  %v2_10003628 = inttoptr i32 %v1_10003628 to i32*
  %v3_10003628 = load i32, i32* %v2_10003628, align 4
  store i32 %v3_10003628, i32* %r0.global-to-local, align 4
  %v0_1000362c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000362c = trunc i32 %v0_1000362c to i16
  %v2_1000362c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000362c = add i32 %v2_1000362c, 12
  %v4_1000362c = inttoptr i32 %v3_1000362c to i16*
  store i16 %v1_1000362c, i16* %v4_1000362c, align 2
  %v0_10003630 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003630 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003630 = add i32 %v1_10003630, 4
  %v3_10003630 = inttoptr i32 %v2_10003630 to i32*
  store i32 %v0_10003630, i32* %v3_10003630, align 4
  %v0_10003634 = load i32, i32* @r30, align 4
  %v1_10003634 = add i32 %v0_10003634, 8
  %v2_10003634 = inttoptr i32 %v1_10003634 to i32*
  %v3_10003634 = load i32, i32* %v2_10003634, align 4
  store i32 %v3_10003634, i32* %r0.global-to-local, align 4
  %v1_10003638 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003638 = add i32 %v1_10003638, 8
  %v3_10003638 = inttoptr i32 %v2_10003638 to i32*
  store i32 %v3_10003634, i32* %v3_10003638, align 4
  store i32 268449344, i32* @lr, align 4
  %v0_1000363c = call i32 @function_1000a438()
  store i32 %v0_1000363c, i32* %r3.global-to-local, align 4
  %v3_10003640 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003640, i32* %r0.global-to-local, align 4
  %v1_10003644 = load i32, i32* @r29, align 4
  %v2_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003644 = add i32 %v2_10003644, %v1_10003644
  %v4_10003644 = inttoptr i32 %v3_10003644 to i32*
  store i32 %v0_1000363c, i32* %v4_10003644, align 4
  %v0_10003648 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003648 = mul i32 %v0_10003648, 4
  store i32 %v1_10003648, i32* %r0.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000364c = add i32 %v0_1000364c, %v1_10003648
  %v3_1000364c = inttoptr i32 %v2_1000364c to i32*
  %v4_1000364c = load i32, i32* %v3_1000364c, align 4
  store i32 %v4_1000364c, i32* @r31, align 4
  store i32 %v1_100032f0, i32* %r0.global-to-local, align 4
  %v1_10003654 = inttoptr i32 %v4_1000364c to i32*
  %v2_10003654 = load i32, i32* %v1_10003654, align 4
  store i32 %v2_10003654, i32* %r9.global-to-local, align 4
  %v1_10003658 = add i32 %v4_1000364c, 20
  store i32 %v1_10003658, i32* @r30, align 4
  store i1 %v3_1000365c, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003664 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003664, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1000366c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003670 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003670 = trunc i32 %v0_10003670 to i16
  %v2_10003670 = load i32, i32* @r31, align 4
  %v3_10003670 = add i32 %v2_10003670, 4
  %v4_10003670 = inttoptr i32 %v3_10003670 to i16*
  store i16 %v1_10003670, i16* %v4_10003670, align 2
  %v1_10003674 = load i32, i32* @r31, align 4
  %v2_10003674 = inttoptr i32 %v1_10003674 to i32*
  store i32 %v1_1000366c, i32* %v2_10003674, align 4
  %v0_10003678 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003678 = trunc i32 %v0_10003678 to i16
  %v2_10003678 = load i32, i32* @r31, align 4
  %v3_10003678 = add i32 %v2_10003678, 2
  %v4_10003678 = inttoptr i32 %v3_10003678 to i16*
  store i16 %v1_10003678, i16* %v4_10003678, align 2
  store i32 %v4_1000367c, i32* %r9.global-to-local, align 4
  %v2_10003680 = load i32, i32* @r31, align 4
  %v3_10003680 = add i32 %v2_10003680, 1
  %v4_10003680 = inttoptr i32 %v3_10003680 to i8*
  store i8 %v5_100032a4, i8* %v4_10003680, align 1
  store i32 %v4_10003684, i32* %r0.global-to-local, align 4
  %v2_10003688 = load i32, i32* @r31, align 4
  %v3_10003688 = add i32 %v2_10003688, 8
  %v4_10003688 = inttoptr i32 %v3_10003688 to i8*
  store i8 %v5_100032dc, i8* %v4_10003688, align 1
  %v0_1000368c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000368c, label %dec_label_pc_10003698, label %dec_label_pc_10003690

dec_label_pc_10003690:                            ; preds = %dec_label_pc_10003608
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003694 = load i32, i32* @r31, align 4
  %v3_10003694 = add i32 %v2_10003694, 6
  %v4_10003694 = inttoptr i32 %v3_10003694 to i16*
  store i16 16384, i16* %v4_10003694, align 2
  br label %dec_label_pc_10003698

dec_label_pc_10003698:                            ; preds = %dec_label_pc_10003608, %dec_label_pc_10003690
  %v2_100036a0 = load i32, i32* @r31, align 4
  %v3_100036a0 = add i32 %v2_100036a0, 9
  %v4_100036a0 = inttoptr i32 %v3_100036a0 to i8*
  store i8 6, i8* %v4_100036a0, align 1
  %v3_100036a4 = load i32, i32* @global_var_1001c660.16, align 4
  store i32 %v3_100036a4, i32* %r0.global-to-local, align 4
  %v1_100036a8 = load i32, i32* @r31, align 4
  %v2_100036a8 = add i32 %v1_100036a8, 12
  %v3_100036a8 = inttoptr i32 %v2_100036a8 to i32*
  store i32 %v3_100036a4, i32* %v3_100036a8, align 4
  %v3_100036ac = load i32, i32* %stack_var_-408, align 4
  %v1_100036b0 = mul i32 %v3_100036ac, 16
  store i32 %v1_100036b0, i32* %r9.global-to-local, align 4
  %v1_100036b4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100036b4 = add i32 %v1_100036b4, %v1_100036b0
  %v3_100036b4 = inttoptr i32 %v2_100036b4 to i32*
  %v4_100036b4 = load i32, i32* %v3_100036b4, align 4
  store i32 %v4_100036b4, i32* %r0.global-to-local, align 4
  store i32 %v2_100036b4, i32* %r9.global-to-local, align 4
  %v1_100036bc = add i32 %v2_100036b4, 12
  %v2_100036bc = inttoptr i32 %v1_100036bc to i16*
  %v3_100036bc = load i16, i16* %v2_100036bc, align 2
  %v4_100036bc = zext i16 %v3_100036bc to i32
  store i32 %v4_100036bc, i32* %r11.global-to-local, align 4
  %v1_100036c0 = load i32, i32* @r31, align 4
  %v2_100036c0 = add i32 %v1_100036c0, 16
  %v3_100036c0 = inttoptr i32 %v2_100036c0 to i32*
  store i32 %v4_100036b4, i32* %v3_100036c0, align 4
  %v0_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* @r31, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 20
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v0_100036c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036c8 = add i32 %v0_100036c8, 8
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  %v3_100036c8 = load i32, i32* %v2_100036c8, align 4
  store i32 %v3_100036c8, i32* %r0.global-to-local, align 4
  %v0_100036cc = load i32, i32* @r30, align 4
  %v1_100036cc = add i32 %v0_100036cc, 12
  %v2_100036cc = inttoptr i32 %v1_100036cc to i32*
  %v3_100036cc = load i32, i32* %v2_100036cc, align 4
  store i32 %v3_100036cc, i32* %r11.global-to-local, align 4
  %v2_100036d0 = add i32 %v0_100036cc, 4
  %v3_100036d0 = inttoptr i32 %v2_100036d0 to i32*
  store i32 %v3_100036c8, i32* %v3_100036d0, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_100036d8 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_100036d8, i32* %r11.global-to-local, align 4
  %v0_100036dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036dc = add i32 %v0_100036dc, 14
  %v2_100036dc = inttoptr i32 %v1_100036dc to i16*
  %v3_100036dc = load i16, i16* %v2_100036dc, align 2
  %v4_100036dc = zext i16 %v3_100036dc to i32
  store i32 %v4_100036dc, i32* %r0.global-to-local, align 4
  %v1_100036e0 = add i32 %v0_100036dc, 4
  %v2_100036e0 = inttoptr i32 %v1_100036e0 to i32*
  %v3_100036e0 = load i32, i32* %v2_100036e0, align 4
  store i32 %v3_100036e0, i32* %r10.global-to-local, align 4
  %v1_100036e4 = or i32 %v1_100036d8, 1114112
  store i32 %v1_100036e4, i32* %r11.global-to-local, align 4
  %v2_100036e8 = load i32, i32* @r30, align 4
  %v3_100036e8 = add i32 %v2_100036e8, 2
  %v4_100036e8 = inttoptr i32 %v3_100036e8 to i16*
  store i16 %v3_100036dc, i16* %v4_100036e8, align 2
  %v0_100036ec = load i32, i32* %r10.global-to-local, align 4
  %v1_100036ec = load i32, i32* @r30, align 4
  %v2_100036ec = add i32 %v1_100036ec, 8
  %v3_100036ec = inttoptr i32 %v2_100036ec to i32*
  store i32 %v0_100036ec, i32* %v3_100036ec, align 4
  %v0_100036f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036f0 = load i32, i32* @r30, align 4
  %v2_100036f0 = add i32 %v1_100036f0, 12
  %v3_100036f0 = inttoptr i32 %v2_100036f0 to i32*
  store i32 %v0_100036f0, i32* %v3_100036f0, align 4
  %v0_100036f4 = call i32 @function_10005b08()
  %v1_100036f4 = trunc i32 %v0_100036f4 to i16
  store i32 %v1_1000332c, i32* %r9.global-to-local, align 4
  %v3_100036fc = load i32, i32* @r30, align 4
  %v4_100036fc = add i32 %v3_100036fc, 14
  %v5_100036fc = inttoptr i32 %v4_100036fc to i16*
  store i16 %v1_100036f4, i16* %v5_100036fc, align 2
  %v0_10003700 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003700, i32* @r4, align 4
  %v0_10003704 = load i32, i32* @r31, align 4
  %v1_10003704 = add i32 %v0_10003704, 40
  store i32 %v1_10003704, i32* @r3, align 4
  %v0_10003708 = load i32, i32* @r30, align 4
  %v1_10003708 = add i32 %v0_10003708, 12
  %v2_10003708 = inttoptr i32 %v1_10003708 to i32*
  %v3_10003708 = load i32, i32* %v2_10003708, align 4
  store i32 %v3_10003708, i32* %r0.global-to-local, align 4
  %v1_1000370c = call i32 @__asm_rlwimi(i32 %v1_1000332c, i32 21, i32 10, i32 10)
  store i32 %v1_1000370c, i32* %r0.global-to-local, align 4
  %v1_10003710 = call i32 @__asm_rlwimi(i32 %v1_10003350, i32 20, i32 11, i32 11)
  store i32 %v1_10003710, i32* %r0.global-to-local, align 4
  %v1_10003714 = call i32 @__asm_rlwimi(i32 %v1_10003368, i32 19, i32 12, i32 12)
  store i32 %v1_10003714, i32* %r0.global-to-local, align 4
  %v1_10003718 = call i32 @__asm_rlwimi(i32 %v1_10003380, i32 18, i32 13, i32 13)
  store i32 %v1_10003718, i32* %r0.global-to-local, align 4
  %v1_1000371c = call i32 @__asm_rlwimi(i32 %v1_10003398, i32 17, i32 14, i32 14)
  store i32 %v1_1000371c, i32* %r0.global-to-local, align 4
  %v1_10003720 = call i32 @__asm_rlwimi(i32 %v1_100033b0, i32 16, i32 15, i32 15)
  store i32 %v1_10003720, i32* %r0.global-to-local, align 4
  %v1_10003724 = load i32, i32* @r30, align 4
  %v2_10003724 = add i32 %v1_10003724, 12
  %v3_10003724 = inttoptr i32 %v2_10003724 to i32*
  store i32 %v1_10003720, i32* %v3_10003724, align 4
  %v0_10003728 = call i32 @function_10005cdc()
  store i32 %v0_10003728, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000372c

dec_label_pc_1000372c:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538, %dec_label_pc_10003698
  %v3_1000372c = load i32, i32* %stack_var_-408, align 4
  %v1_10003730 = add i32 %v3_1000372c, 1
  store i32 %v1_10003730, i32* %r9.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003734 = icmp slt i32 %v1_10003730, %v1_10003734
  %v4_10003734 = icmp eq i32 %v1_10003730, %v1_10003734
  store i1 %v4_10003734, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003730, i32* %stack_var_-408, align 4
  br i1 %v2_10003734, label %dec_label_pc_10003438, label %dec_label_pc_10003740.loopexit

dec_label_pc_10003740.loopexit:                   ; preds = %dec_label_pc_1000372c
  %v0_1000374c.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000374c.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10003740

dec_label_pc_10003740:                            ; preds = %dec_label_pc_10003740.loopexit, %dec_label_pc_10003418
  %v1_1000374c.pre = phi i1 [ %v1_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v1_10003418, %dec_label_pc_10003418 ]
  %v0_1000374c.pre = phi i1 [ %v0_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v3_10003418, %dec_label_pc_10003418 ]
  %v0_10003740 = load i32, i32* %r27.global-to-local, align 4
  %v3_10003740 = icmp eq i32 %v0_10003740, 0
  store i1 %v3_10003740, i1* %cr2_eq.global-to-local, align 1
  %v0_10003744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003744 = add i32 %v0_10003744, 40
  store i32 %v1_10003744, i32* %r26.global-to-local, align 4
  %v1_10003748 = add i32 %v0_10003744, 20
  store i32 %v1_10003748, i32* @r31, align 4
  br label %dec_label_pc_1000374c.outer

dec_label_pc_1000374c.outer:                      ; preds = %dec_label_pc_10003820, %dec_label_pc_10003740
  %v1_1000374c.ph = phi i1 [ %v1_1000374c.pre, %dec_label_pc_10003740 ], [ %v1_10003820, %dec_label_pc_10003820 ]
  %v0_1000374c.ph = phi i1 [ %v0_1000374c.pre, %dec_label_pc_10003740 ], [ %v0_10003820, %dec_label_pc_10003820 ]
  %v2_1000374c = or i1 %v1_1000374c.ph, %v0_1000374c.ph
  br label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_1000374c.outer, %dec_label_pc_1000374c
  br i1 %v2_1000374c, label %dec_label_pc_1000374c, label %dec_label_pc_10003750

dec_label_pc_10003750:                            ; preds = %dec_label_pc_1000374c, %dec_label_pc_10003820
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003760 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003760 = icmp eq i32 %v0_10003760, 65535
  store i1 %v4_10003760, i1* %cr4_eq.global-to-local, align 1
  %v0_10003764 = load i32, i32* @r31, align 4
  %v1_10003764 = urem i32 %v0_10003764, 65536
  store i32 %v1_10003764, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, %dec_label_pc_10003750
  %v0_1000377c = phi i1 [ %v0_1000377c.pre, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ %v4_10003760, %dec_label_pc_10003750 ]
  %v0_10003770 = phi i32 [ %v1_10003810, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ 0, %dec_label_pc_10003750 ]
  %v1_10003770 = mul i32 %v0_10003770, 4
  store i32 %v1_10003770, i32* %r0.global-to-local, align 4
  %v0_10003774 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003774 = add i32 %v0_10003774, %v1_10003770
  %v3_10003774 = inttoptr i32 %v2_10003774 to i32*
  %v4_10003774 = load i32, i32* %v3_10003774, align 4
  store i32 %v4_10003774, i32* @r29, align 4
  %v1_10003778 = add i32 %v4_10003774, 20
  store i32 %v1_10003778, i32* %r28.global-to-local, align 4
  br i1 %v0_1000377c, label %dec_label_pc_10003828, label %dec_label_pc_10003780

dec_label_pc_10003780:                            ; preds = %dec_label_pc_10003770
  %v1_10003780 = add i32 %v4_10003774, 40
  store i32 %v1_10003780, i32* @r3, align 4
  %v0_10003784 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003784, i32* @r4, align 4
  %v0_10003788 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003788, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000378c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828, %dec_label_pc_1000383c
  %v2_1000378c = phi i32 [ %v4_10003774, %dec_label_pc_10003780 ], [ %v0_10003834, %dec_label_pc_10003828 ], [ %v2_1000378c.pre, %dec_label_pc_1000383c ]
  %v0_1000378c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v3_1000378c = add i32 %v2_1000378c, 10
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003794 = load i32, i32* @r29, align 4
  store i32 %v0_10003794, i32* @r3, align 4
  %v2_10003798 = call i32 @function_100043cc(i32 %v0_10003794, i32 20)
  %v3_10003798 = trunc i32 %v2_10003798 to i16
  store i32 %v2_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000379c, i32* %r9.global-to-local, align 4
  %v3_100037a0 = load i32, i32* @r29, align 4
  %v4_100037a0 = add i32 %v3_100037a0, 10
  %v5_100037a0 = inttoptr i32 %v4_100037a0 to i16*
  store i16 %v3_10003798, i16* %v5_100037a0, align 2
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100037a4, i32* @r4, align 4
  %v0_100037a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037a8 = mul i32 %v0_100037a8, 16
  store i32 %v1_100037a8, i32* %r9.global-to-local, align 4
  %v0_100037ac = load i32, i32* %r27.global-to-local, align 4
  %v1_100037ac = trunc i32 %v0_100037ac to i16
  %v3_100037ac = add i32 %v0_100037a4, 16
  %v4_100037ac = inttoptr i32 %v3_100037ac to i16*
  store i16 %v1_100037ac, i16* %v4_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100037b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100037b0 = add i32 %v1_100037b0, %v0_100037b0
  store i32 %v2_100037b0, i32* %r9.global-to-local, align 4
  %v0_100037b4 = load i32, i32* @r30, align 4
  %v1_100037b8 = add i32 %v2_100037b0, 4
  %v2_100037b8 = inttoptr i32 %v1_100037b8 to i32*
  %v3_100037b8 = load i32, i32* %v2_100037b8, align 4
  store i32 %v3_100037b8, i32* %r11.global-to-local, align 4
  %v0_100037bc = load i32, i32* @r31, align 4
  %v0_100037c0 = load i32, i32* @r29, align 4
  store i32 %v0_100037c0, i32* %r3.global-to-local, align 4
  %v1_100037c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037c4 = add i32 %v1_100037c4, 4
  %v3_100037c4 = inttoptr i32 %v2_100037c4 to i32*
  store i32 %v3_100037b8, i32* %v3_100037c4, align 4
  %v0_100037c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100037c8 = add i32 %v0_100037c8, 1
  store i32 %v1_100037c8, i32* %r11.global-to-local, align 4
  %v1_100037cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100037cc = add i32 %v1_100037cc, 4
  %v3_100037cc = inttoptr i32 %v2_100037cc to i32*
  store i32 %v1_100037c8, i32* %v3_100037cc, align 4
  %v0_100037d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037d0 = add i32 %v0_100037d0, 8
  %v2_100037d0 = inttoptr i32 %v1_100037d0 to i32*
  %v3_100037d0 = load i32, i32* %v2_100037d0, align 4
  store i32 %v3_100037d0, i32* %r0.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037d4 = add i32 %v1_100037d4, 8
  %v3_100037d4 = inttoptr i32 %v2_100037d4 to i32*
  store i32 %v3_100037d0, i32* %v3_100037d4, align 4
  %v4_100037d8 = call i32 @function_10004430(i32 %v0_100037c0, i32 %v0_100037a4, i32 %v0_100037b4, i32 %v0_100037bc)
  %v5_100037d8 = trunc i32 %v4_100037d8 to i16
  store i32 %v4_100037d8, i32* %r3.global-to-local, align 4
  %v3_100037dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100037dc, i32* %r7.global-to-local, align 4
  %v0_100037e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037e0 = add i32 %v0_100037e0, 2
  %v2_100037e0 = inttoptr i32 %v1_100037e0 to i16*
  %v3_100037e0 = load i16, i16* %v2_100037e0, align 2
  %v4_100037e0 = zext i16 %v3_100037e0 to i32
  store i32 %v4_100037e0, i32* %r0.global-to-local, align 4
  %v0_100037e4 = load i32, i32* @r29, align 4
  %v1_100037e8 = mul i32 %v3_100037dc, 24
  store i32 %v1_100037e8, i32* %r7.global-to-local, align 4
  %v4_100037ec = add i32 %v0_100037e0, 16
  %v5_100037ec = inttoptr i32 %v4_100037ec to i16*
  store i16 %v5_100037d8, i16* %v5_100037ec, align 2
  %v0_100037f0 = load i32, i32* %r26.global-to-local, align 4
  %v0_100037f4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100037f4, i32* %r3.global-to-local, align 4
  %v0_100037f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v0_100037f8
  store i32 %v2_100037f8, i32* %r7.global-to-local, align 4
  %v0_10003800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003800 = trunc i32 %v0_10003800 to i16
  %v3_10003800 = add i32 %v2_100037f8, 2
  %v4_10003800 = inttoptr i32 %v3_10003800 to i16*
  store i16 %v1_10003800, i16* %v4_10003800, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449804, i32* @lr, align 4
  %v6_10003808 = call i32 @function_1000a1b8(i32 %v0_100037f4, i32 %v0_100037e4, i32 %v0_100037f0, i32 16384, i32 %v2_100037f8, i32 16)
  store i32 %v6_10003808, i32* %r3.global-to-local, align 4
  %v3_1000380c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000380c, i32* %r9.global-to-local, align 4
  %v1_10003810 = add i32 %v3_1000380c, 1
  store i32 %v1_10003810, i32* %r0.global-to-local, align 4
  %v1_10003814 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003814 = icmp slt i32 %v1_10003810, %v1_10003814
  %v4_10003814 = icmp eq i32 %v1_10003810, %v1_10003814
  store i1 %v4_10003814, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003810, i32* %stack_var_-408, align 4
  br i1 %v2_10003814, label %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, label %dec_label_pc_10003820

dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge: ; preds = %dec_label_pc_1000378c
  %v0_1000377c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003770

dec_label_pc_10003820:                            ; preds = %dec_label_pc_1000378c
  %v0_10003820 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003820 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10003820 = or i1 %v0_10003820, %v1_10003820
  br i1 %v2_10003820, label %dec_label_pc_1000374c.outer, label %dec_label_pc_10003750

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003770
  %v0_10003828 = call i32 @function_10005b08()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  %v0_1000382c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000382c, i32* @r4, align 4
  %v3_10003830 = load i32, i32* @r29, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  %v0_10003834 = load i32, i32* @r29, align 4
  %v1_10003834 = add i32 %v0_10003834, 40
  store i32 %v1_10003834, i32* @r3, align 4
  %v0_10003838 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003838, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000383c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828
  %v0_1000383c = call i32 @function_10005cdc()
  store i32 %v0_1000383c, i32* %r3.global-to-local, align 4
  %v2_1000378c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000378c

; uselistorder directives
  uselistorder i32 %v0_10003834, { 1, 0 }
  uselistorder i1 %v1_10003820, { 1, 0 }
  uselistorder i1 %v0_10003820, { 1, 0 }
  uselistorder i32 %v1_10003810, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100037d8, { 1, 0 }
  uselistorder i32 %v0_100037a4, { 1, 0, 2 }
  uselistorder i32 %v2_10003798, { 1, 0 }
  uselistorder i32 %v1_10003770, { 1, 0 }
  uselistorder i32 %v1_10003730, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100036b4, { 1, 0, 2 }
  uselistorder i32 %v1_100036b0, { 1, 0 }
  uselistorder i32 %v1_10003648, { 1, 0 }
  uselistorder i32 %v1_10003614, { 1, 0 }
  uselistorder i32 %v0_10003594, { 1, 0 }
  uselistorder i32 %v2_10003588, { 1, 2, 0 }
  uselistorder i1 %v4_1000350c, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_1000356c, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10003548, { 1, 0 }
  uselistorder i32 %v1_100032f0, { 1, 0 }
  uselistorder i8 %v5_100032dc, { 1, 0 }
  uselistorder i8 %v5_100032a4, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 31, 12, 13, 14, 15, 16, 17, 18, 28, 29, 20, 19, 21, 22, 23, 25, 24, 26, 27, 3, 2, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268448844, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000383c, { 1, 0 }
  uselistorder label %dec_label_pc_1000378c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003750, { 1, 0 }
  uselistorder label %dec_label_pc_1000374c, { 1, 0 }
  uselistorder label %dec_label_pc_1000372c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003698, { 1, 0 }
  uselistorder label %dec_label_pc_100035a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003528, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003458, { 1, 0 }
}

define i32 @function_10003844(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003844:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003848 = load i32, i32* @lr, align 4
  store i32 %v0_10003848, i32* %r0.global-to-local, align 4
  %v0_1000384c = call i32 @__asm_mfcr()
  store i32 %v0_1000384c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000385c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000384c, i32* %r21.global-to-local, align 4
  %v0_1000389c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100038a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100038ac = load i32, i32* @r30, align 4
  store i32 268449976, i32* @lr, align 4
  %v2_100038b4 = call i32 @function_1000a590(i32 4, i32 4)
  store i32 %v2_100038b4, i32* %r22.global-to-local, align 4
  %v0_100038bc = load i32, i32* @r28, align 4
  %v0_100038c8 = load i32, i32* @r29, align 4
  store i32 %v0_100038c8, i32* %r3.global-to-local, align 4
  store i32 268450000, i32* @lr, align 4
  %v4_100038cc = inttoptr i32 %v0_100038bc to i32*
  %v5_100038cc = call i32 @function_100006a8(i32 %v0_100038c8, i32* %v4_100038cc, i32 2, i32 0)
  %v5_100038dc = trunc i32 %v5_100038cc to i8
  %v0_100038e4 = load i32, i32* @r28, align 4
  %v0_100038e8 = load i32, i32* @r29, align 4
  store i32 %v0_100038e8, i32* %r3.global-to-local, align 4
  store i32 268450032, i32* @lr, align 4
  %v4_100038ec = inttoptr i32 %v0_100038e4 to i32*
  %v5_100038ec = call i32 @function_100006a8(i32 %v0_100038e8, i32* %v4_100038ec, i32 3, i32 65535)
  %v0_100038f0 = load i32, i32* @r28, align 4
  store i32 %v5_100038ec, i32* %r18.global-to-local, align 4
  %v0_10003900 = load i32, i32* @r29, align 4
  store i32 %v0_10003900, i32* %r3.global-to-local, align 4
  store i32 268450056, i32* @lr, align 4
  %v4_10003904 = inttoptr i32 %v0_100038f0 to i32*
  %v5_10003904 = call i32 @function_100006a8(i32 %v0_10003900, i32* %v4_10003904, i32 4, i32 64)
  %v0_10003908 = load i32, i32* @r28, align 4
  %v5_10003914 = trunc i32 %v5_10003904 to i8
  %v0_1000391c = load i32, i32* @r29, align 4
  store i32 %v0_1000391c, i32* %r3.global-to-local, align 4
  store i32 268450084, i32* @lr, align 4
  %v4_10003920 = inttoptr i32 %v0_10003908 to i32*
  %v5_10003920 = call i32 @function_100006a8(i32 %v0_1000391c, i32* %v4_10003920, i32 5, i32 0)
  %v0_10003930 = load i32, i32* @r28, align 4
  %v1_10003934 = urem i32 %v5_10003920, 256
  store i32 %v1_10003934, i32* @r31, align 4
  %v0_10003938 = load i32, i32* @r29, align 4
  store i32 %v0_10003938, i32* %r3.global-to-local, align 4
  store i32 268450112, i32* @lr, align 4
  %v4_1000393c = inttoptr i32 %v0_10003930 to i32*
  %v5_1000393c = call i32 @function_100006a8(i32 %v0_10003938, i32* %v4_1000393c, i32 6, i32 65535)
  %v0_10003944 = load i32, i32* @r28, align 4
  store i32 %v5_1000393c, i32* %r19.global-to-local, align 4
  %v0_10003954 = load i32, i32* @r29, align 4
  store i32 %v0_10003954, i32* %r3.global-to-local, align 4
  store i32 268450140, i32* @lr, align 4
  %v4_10003958 = inttoptr i32 %v0_10003944 to i32*
  %v5_10003958 = call i32 @function_100006a8(i32 %v0_10003954, i32* %v4_10003958, i32 7, i32 65535)
  %v0_10003960 = load i32, i32* @r28, align 4
  store i32 %v5_10003958, i32* %r20.global-to-local, align 4
  %v0_10003970 = load i32, i32* @r29, align 4
  store i32 %v0_10003970, i32* %r3.global-to-local, align 4
  store i32 268450168, i32* @lr, align 4
  %v4_10003974 = inttoptr i32 %v0_10003960 to i32*
  %v5_10003974 = call i32 @function_100006a8(i32 %v0_10003970, i32* %v4_10003974, i32 17, i32 65535)
  %v0_1000397c = load i32, i32* @r28, align 4
  store i32 %v5_10003974, i32* %r15.global-to-local, align 4
  %v0_1000398c = load i32, i32* @r29, align 4
  store i32 %v0_1000398c, i32* %r3.global-to-local, align 4
  store i32 268450196, i32* @lr, align 4
  %v4_10003990 = inttoptr i32 %v0_1000397c to i32*
  %v5_10003990 = call i32 @function_100006a8(i32 %v0_1000398c, i32* %v4_10003990, i32 18, i32 65535)
  %v0_10003994 = load i32, i32* @r28, align 4
  store i32 %v5_10003990, i32* %r17.global-to-local, align 4
  %v0_100039a4 = load i32, i32* @r29, align 4
  store i32 %v0_100039a4, i32* %r3.global-to-local, align 4
  store i32 268450220, i32* @lr, align 4
  %v4_100039a8 = inttoptr i32 %v0_10003994 to i32*
  %v5_100039a8 = call i32 @function_100006a8(i32 %v0_100039a4, i32* %v4_100039a8, i32 11, i32 0)
  %v0_100039ac = load i32, i32* @r28, align 4
  %v0_100039bc = load i32, i32* @r29, align 4
  store i32 %v0_100039bc, i32* %r3.global-to-local, align 4
  store i32 268450244, i32* @lr, align 4
  %v4_100039c0 = inttoptr i32 %v0_100039ac to i32*
  %v5_100039c0 = call i32 @function_100006a8(i32 %v0_100039bc, i32* %v4_100039c0, i32 12, i32 1)
  %v0_100039c4 = load i32, i32* @r28, align 4
  store i32 %v5_100039c0, i32* %r14.global-to-local, align 4
  %v0_100039d4 = load i32, i32* @r29, align 4
  store i32 %v0_100039d4, i32* %r3.global-to-local, align 4
  store i32 268450268, i32* @lr, align 4
  %v4_100039d8 = inttoptr i32 %v0_100039c4 to i32*
  %v5_100039d8 = call i32 @function_100006a8(i32 %v0_100039d4, i32* %v4_100039d8, i32 13, i32 0)
  %v0_100039dc = load i32, i32* @r28, align 4
  store i32 %v5_100039d8, i32* %r24.global-to-local, align 4
  %v0_100039ec = load i32, i32* @r29, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @function_100006a8(i32 %v0_100039ec, i32* %v4_100039f0, i32 14, i32 0)
  %v0_100039f4 = load i32, i32* @r28, align 4
  store i32 %v5_100039f0, i32* %r27.global-to-local, align 4
  %v0_10003a04 = load i32, i32* @r29, align 4
  store i32 %v0_10003a04, i32* %r3.global-to-local, align 4
  store i32 268450316, i32* @lr, align 4
  %v4_10003a08 = inttoptr i32 %v0_100039f4 to i32*
  %v5_10003a08 = call i32 @function_100006a8(i32 %v0_10003a04, i32* %v4_10003a08, i32 15, i32 0)
  %v0_10003a0c = load i32, i32* @r28, align 4
  store i32 %v5_10003a08, i32* %r26.global-to-local, align 4
  %v0_10003a1c = load i32, i32* @r29, align 4
  store i32 %v0_10003a1c, i32* %r3.global-to-local, align 4
  store i32 268450340, i32* @lr, align 4
  %v4_10003a20 = inttoptr i32 %v0_10003a0c to i32*
  %v5_10003a20 = call i32 @function_100006a8(i32 %v0_10003a1c, i32* %v4_10003a20, i32 16, i32 0)
  %v0_10003a24 = load i32, i32* @r28, align 4
  store i32 %v5_10003a20, i32* %r30.global-to-local, align 4
  %v0_10003a34 = load i32, i32* @r29, align 4
  store i32 %v0_10003a34, i32* %r3.global-to-local, align 4
  store i32 268450364, i32* @lr, align 4
  %v4_10003a38 = inttoptr i32 %v0_10003a24 to i32*
  %v5_10003a38 = call i32 @function_100006a8(i32 %v0_10003a34, i32* %v4_10003a38, i32 0, i32 512)
  %v0_10003a3c = load i32, i32* @r28, align 4
  store i32 %v5_10003a38, i32* %r16.global-to-local, align 4
  %v0_10003a4c = load i32, i32* @r29, align 4
  store i32 %v0_10003a4c, i32* %r3.global-to-local, align 4
  store i32 268450388, i32* @lr, align 4
  %v4_10003a50 = inttoptr i32 %v0_10003a3c to i32*
  %v5_10003a50 = call i32 @function_100006a8(i32 %v0_10003a4c, i32* %v4_10003a50, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003a58 = load i32, i32* @global_var_1001c660.16, align 4
  %v1_10003a5c = urem i32 %v5_10003a50, 256
  %v0_10003a60 = load i32, i32* @r28, align 4
  %v0_10003a6c = load i32, i32* @r29, align 4
  store i32 %v0_10003a6c, i32* %r3.global-to-local, align 4
  store i32 268450420, i32* @lr, align 4
  %v5_10003a70 = inttoptr i32 %v0_10003a60 to i32*
  %v6_10003a70 = call i32 @function_10000628(i32 %v0_10003a6c, i32* %v5_10003a70, i32 25, i32 %v3_10003a58, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450440, i32* @lr, align 4
  %v3_10003a84 = call i32 @function_1000a234(i32 2, i32 3, i32 6)
  store i32 %v3_10003a84, i32* %r3.global-to-local, align 4
  %v3_10003a88 = icmp eq i32 %v3_10003a84, -1
  store i32 %v3_10003a84, i32* %r23.global-to-local, align 4
  br i1 %v3_10003a88, label %dec_label_pc_10003dc8, label %dec_label_pc_10003a94

dec_label_pc_10003a94:                            ; preds = %dec_label_pc_10003844
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003aa0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450480, i32* @lr, align 4
  %v4_10003aac = call i32 @function_1000a1f8(i32 0, i32 3, i32 %v2_10003aa0, i32 4)
  store i32 %v4_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v4_10003aac, -1
  br i1 %v3_10003ab0, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ab8

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003a94
  %v0_10003ab8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ab8 = icmp slt i32 %v0_10003ab8, 0
  %v3_10003ab8 = icmp eq i32 %v0_10003ab8, 0
  store i1 %v1_10003ab8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ab8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003ac4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003ac4 = urem i32 %v0_10003ac4, 65536
  store i32 %v1_10003ac4, i32* %r18.global-to-local, align 4
  %v0_10003ac8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003ac8 = urem i32 %v0_10003ac8, 65536
  store i32 %v1_10003ac8, i32* %r19.global-to-local, align 4
  %v0_10003acc = load i32, i32* %r20.global-to-local, align 4
  %v1_10003acc = urem i32 %v0_10003acc, 65536
  store i32 %v1_10003acc, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10003ab8, 1
  br i1 %tmp40, label %dec_label_pc_10003da0, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %dec_label_pc_10003ab8
  %v0_10003ad8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003ad8 = urem i32 %v0_10003ad8, 256
  %v0_10003adc = load i32, i32* %r16.global-to-local, align 4
  %v1_10003adc = add i32 %v0_10003adc, 40
  store i32 %v1_10003adc, i32* %r24.global-to-local, align 4
  %v3_10003ae0 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003ae0, i1* %cr3_eq.global-to-local, align 1
  %v1_10003ae4 = urem i32 %v5_100039a8, 2
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 2
  store i32 %v1_10003ae8, i32* %r28.global-to-local, align 4
  %v1_10003aec = urem i32 %v0_10003ad8, 2
  store i32 %v1_10003aec, i32* %r26.global-to-local, align 4
  %v1_10003af0 = urem i32 %v1_10003adc, 65536
  store i32 %v1_10003af0, i32* %r0.global-to-local, align 4
  %v0_10003af8 = load i32, i32* @r31, align 4
  %v3_10003af8 = icmp eq i32 %v0_10003af8, 0
  store i1 %v3_10003af8, i1* %cr2_eq.global-to-local, align 1
  %v5_10003afc = trunc i32 %v1_10003adc to i16
  %v0_10003b00 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003b00 = urem i32 %v0_10003b00, 2
  store i32 %v1_10003b00, i32* %r14.global-to-local, align 4
  %v0_10003b04 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003b04 = urem i32 %v0_10003b04, 2
  store i32 %v1_10003b04, i32* %r27.global-to-local, align 4
  %v0_10003b08 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003b08 = urem i32 %v0_10003b08, 2
  %v4_10003b58 = sext i8 %v5_100038dc to i32
  br label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450588, i32* @lr, align 4
  %v2_10003b18 = call i32 @function_1000a590(i32 1510, i32 1)
  store i32 %v2_10003b18, i32* %r3.global-to-local, align 4
  %v3_10003b1c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003b1c, i32* %r9.global-to-local, align 4
  %v0_10003b20 = load i32, i32* @r31, align 4
  %v1_10003b20 = mul i32 %v0_10003b20, 4
  store i32 %v1_10003b20, i32* %r0.global-to-local, align 4
  %v1_10003b24 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003b24 = add i32 %v1_10003b24, %v1_10003b20
  %v4_10003b24 = inttoptr i32 %v3_10003b24 to i32*
  store i32 %v2_10003b18, i32* %v4_10003b24, align 4
  %v0_10003b28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b28 = mul i32 %v0_10003b28, 4
  store i32 %v1_10003b28, i32* %r9.global-to-local, align 4
  %v1_10003b2c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003b2c = add i32 %v1_10003b2c, %v1_10003b28
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  %v4_10003b2c = load i32, i32* %v3_10003b2c, align 4
  store i32 %v4_10003b2c, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003b34 = inttoptr i32 %v4_10003b2c to i32*
  %v2_10003b34 = load i32, i32* %v1_10003b34, align 4
  store i32 %v2_10003b34, i32* %r0.global-to-local, align 4
  %v1_10003b38 = add i32 %v4_10003b2c, 20
  store i32 %v1_10003b38, i32* @r30, align 4
  %v0_10003b3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b3c = trunc i32 %v0_10003b3c to i16
  %v3_10003b3c = add i32 %v4_10003b2c, 4
  %v4_10003b3c = inttoptr i32 %v3_10003b3c to i16*
  store i16 %v1_10003b3c, i16* %v4_10003b3c, align 2
  %v1_10003b40 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b40, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003b48 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003b4c = load i32, i32* @r31, align 4
  %v2_10003b4c = inttoptr i32 %v1_10003b4c to i32*
  store i32 %v1_10003b48, i32* %v2_10003b4c, align 4
  %v2_10003b54 = load i32, i32* @r31, align 4
  %v3_10003b54 = add i32 %v2_10003b54, 8
  %v4_10003b54 = inttoptr i32 %v3_10003b54 to i8*
  store i8 %v5_10003914, i8* %v4_10003b54, align 1
  store i32 %v4_10003b58, i32* %r9.global-to-local, align 4
  %v2_10003b5c = load i32, i32* @r31, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v5_100038dc, i8* %v4_10003b5c, align 1
  store i32 %v1_10003adc, i32* %r0.global-to-local, align 4
  %v2_10003b64 = load i32, i32* @r31, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 2
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i16*
  store i16 %v5_10003afc, i16* %v4_10003b64, align 2
  %v0_10003b68 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003b68, label %dec_label_pc_10003b74, label %dec_label_pc_10003b6c

dec_label_pc_10003b6c:                            ; preds = %dec_label_pc_10003b10
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003b70 = load i32, i32* @r31, align 4
  %v3_10003b70 = add i32 %v2_10003b70, 6
  %v4_10003b70 = inttoptr i32 %v3_10003b70 to i16*
  store i16 16384, i16* %v4_10003b70, align 2
  br label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b6c
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003b78 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i16
  %v2_10003b78 = load i32, i32* @r31, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 20
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i16*
  store i16 %v1_10003b78, i16* %v4_10003b78, align 2
  %v0_10003b7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i8
  %v2_10003b7c = load i32, i32* @r31, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 9
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i8*
  store i8 %v1_10003b7c, i8* %v4_10003b7c, align 1
  %v0_10003b80 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b80 = trunc i32 %v0_10003b80 to i16
  %v2_10003b80 = load i32, i32* @r30, align 4
  %v3_10003b80 = add i32 %v2_10003b80, 2
  %v4_10003b80 = inttoptr i32 %v3_10003b80 to i16*
  store i16 %v1_10003b80, i16* %v4_10003b80, align 2
  %v1_10003b88 = load i32, i32* @r31, align 4
  %v2_10003b88 = add i32 %v1_10003b88, 12
  %v3_10003b88 = inttoptr i32 %v2_10003b88 to i32*
  store i32 %v6_10003a70, i32* %v3_10003b88, align 4
  %v3_10003b8c = load i32, i32* %stack_var_-136, align 4
  %v1_10003b90 = mul i32 %v3_10003b8c, 24
  %v1_10003b94 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v1_10003b90
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* @r31, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 16
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v3_10003b98, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* @r30, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 4
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* @r30, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  %v2_10003ba8 = inttoptr i32 %v1_10003ba8 to i32*
  %v3_10003ba8 = load i32, i32* %v2_10003ba8, align 4
  store i32 %v3_10003ba8, i32* %r0.global-to-local, align 4
  %v1_10003bac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003bac, i32* %r0.global-to-local, align 4
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v1_10003bb4 = call i32 @__asm_rlwimi(i32 %v1_10003ae4, i32 21, i32 10, i32 10)
  store i32 %v1_10003bb4, i32* %r0.global-to-local, align 4
  %v1_10003bb8 = call i32 @__asm_rlwimi(i32 %v1_10003b00, i32 20, i32 11, i32 11)
  store i32 %v1_10003bb8, i32* %r0.global-to-local, align 4
  %v1_10003bbc = call i32 @__asm_rlwimi(i32 %v1_10003aec, i32 19, i32 12, i32 12)
  store i32 %v1_10003bbc, i32* %r0.global-to-local, align 4
  %v1_10003bc0 = call i32 @__asm_rlwimi(i32 %v1_10003b04, i32 18, i32 13, i32 13)
  store i32 %v1_10003bc0, i32* %r0.global-to-local, align 4
  %v1_10003bc4 = call i32 @__asm_rlwimi(i32 %v1_10003ae8, i32 17, i32 14, i32 14)
  store i32 %v1_10003bc4, i32* %r0.global-to-local, align 4
  %v1_10003bc8 = call i32 @__asm_rlwimi(i32 %v1_10003b08, i32 16, i32 15, i32 15)
  store i32 %v1_10003bc8, i32* %r0.global-to-local, align 4
  %v1_10003bcc = load i32, i32* @r30, align 4
  %v2_10003bcc = add i32 %v1_10003bcc, 12
  %v3_10003bcc = inttoptr i32 %v2_10003bcc to i32*
  store i32 %v1_10003bc8, i32* %v3_10003bcc, align 4
  %v0_10003bd0 = call i32 @function_10005b08()
  %v1_10003bd0 = trunc i32 %v0_10003bd0 to i16
  %v0_10003bd4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003bd4, i32* @r4, align 4
  %v3_10003bd8 = load i32, i32* @r30, align 4
  %v4_10003bd8 = add i32 %v3_10003bd8, 14
  %v5_10003bd8 = inttoptr i32 %v4_10003bd8 to i16*
  store i16 %v1_10003bd0, i16* %v5_10003bd8, align 2
  %v0_10003bdc = load i32, i32* @r31, align 4
  %v1_10003bdc = add i32 %v0_10003bdc, 40
  store i32 %v1_10003bdc, i32* @r3, align 4
  %v0_10003be0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003be0, label %dec_label_pc_10003bf0, label %dec_label_pc_10003be4

dec_label_pc_10003be4:                            ; preds = %dec_label_pc_10003b74
  %v0_10003be4 = load i32, i32* @r30, align 4
  %v1_10003be4 = add i32 %v0_10003be4, 12
  %v2_10003be4 = inttoptr i32 %v1_10003be4 to i32*
  %v3_10003be4 = load i32, i32* %v2_10003be4, align 4
  %v1_10003be8 = or i32 %v3_10003be4, 524288
  store i32 %v1_10003be8, i32* %r0.global-to-local, align 4
  store i32 %v1_10003be8, i32* %v2_10003be4, align 4
  br label %dec_label_pc_10003bf0

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003b74, %dec_label_pc_10003be4
  %v0_10003bf0 = call i32 @function_10005cdc()
  store i32 %v0_10003bf0, i32* %r3.global-to-local, align 4
  %v3_10003bf4 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003bf4, i32* %r9.global-to-local, align 4
  %v1_10003bf8 = add i32 %v3_10003bf4, 1
  %v1_10003bfc = load i32, i32* %r21.global-to-local, align 4
  %v2_10003bfc = icmp slt i32 %v1_10003bf8, %v1_10003bfc
  store i32 %v1_10003bf8, i32* %stack_var_-136, align 4
  br i1 %v2_10003bfc, label %dec_label_pc_10003b10, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bf0
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003c0c = load i32, i32* %r16.global-to-local, align 4
  %v1_10003c0c = add i32 %v0_10003c0c, 20
  store i32 %v1_10003c0c, i32* @r30, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v3_10003c14 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003c14, i1* %cr2_eq.global-to-local, align 1
  %v3_10003c18 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003c18, i1* %cr3_eq.global-to-local, align 1
  %v0_10003c1c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c1c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003c1c.preheader:                  ; preds = %dec_label_pc_10003cfc, %dec_label_pc_10003da0, %dec_label_pc_10003c08
  %v1_10003c1c = phi i1 [ %v1_10003ab8, %dec_label_pc_10003da0 ], [ %v1_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v1_10003cfc, %dec_label_pc_10003cfc ]
  %v0_10003c1c = phi i1 [ %v3_10003ab8, %dec_label_pc_10003da0 ], [ %v0_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v0_10003cfc, %dec_label_pc_10003cfc ]
  %v2_10003c1c = or i1 %v1_10003c1c, %v0_10003c1c
  br label %dec_label_pc_10003c1c

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003c1c.preheader, %dec_label_pc_10003c1c
  br i1 %v2_10003c1c, label %dec_label_pc_10003c1c, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003c1c, %dec_label_pc_10003cfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003c24 = load i32, i32* @r30, align 4
  %v1_10003c24 = urem i32 %v0_10003c24, 65536
  store i32 %v1_10003c24, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003c34

dec_label_pc_10003c34:                            ; preds = %dec_label_pc_10003c8c, %dec_label_pc_10003c20
  %v0_10003c34 = phi i32 [ %v1_10003cec, %dec_label_pc_10003c8c ], [ 0, %dec_label_pc_10003c20 ]
  %v1_10003c34 = mul i32 %v0_10003c34, 24
  store i32 %v1_10003c34, i32* %r0.global-to-local, align 4
  %v1_10003c38 = mul i32 %v0_10003c34, 4
  %v1_10003c3c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003c3c = add i32 %v1_10003c3c, %v1_10003c38
  %v3_10003c3c = inttoptr i32 %v2_10003c3c to i32*
  %v4_10003c3c = load i32, i32* %v3_10003c3c, align 4
  store i32 %v4_10003c3c, i32* %r28.global-to-local, align 4
  %v1_10003c40 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003c40 = add i32 %v1_10003c40, %v1_10003c34
  %v1_10003c44 = add i32 %v2_10003c40, 20
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i8*
  %v3_10003c44 = load i8, i8* %v2_10003c44, align 1
  %v4_10003c44 = zext i8 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r9.global-to-local, align 4
  %v1_10003c48 = add i32 %v4_10003c3c, 20
  store i32 %v1_10003c48, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10003c44, 32
  br i1 %tmp41, label %dec_label_pc_10003d04, label %dec_label_pc_10003c54

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_10003c34
  %v0_10003c54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003c54, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003c58:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 65535, i32* @r29, align 4
  %v0_10003c60 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003c60 = icmp eq i32 %v0_10003c60, 65535
  br i1 %v4_10003c60, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003c68:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v1_10003c68 = phi i32 [ %v1_10003d3c, %dec_label_pc_10003d2c ], [ 65535, %dec_label_pc_10003c58 ]
  %v0_10003c68 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003c68 = icmp eq i32 %v0_10003c68, %v1_10003c68
  br i1 %v4_10003c68, label %dec_label_pc_10003d54, label %dec_label_pc_10003c70

dec_label_pc_10003c70:                            ; preds = %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge, %dec_label_pc_10003c68
  %v1_10003c70 = phi i32 [ %v1_10003c70.pre, %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge ], [ %v1_10003c68, %dec_label_pc_10003c68 ]
  %v0_10003c70 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c70 = icmp eq i32 %v0_10003c70, %v1_10003c70
  br i1 %v4_10003c70, label %dec_label_pc_10003d64, label %dec_label_pc_10003c78

dec_label_pc_10003c78:                            ; preds = %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge, %dec_label_pc_10003c70
  %v1_10003c78 = phi i32 [ %v1_10003c78.pre, %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge ], [ %v1_10003c70, %dec_label_pc_10003c70 ]
  %v0_10003c78 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003c78 = icmp eq i32 %v0_10003c78, %v1_10003c78
  br i1 %v4_10003c78, label %dec_label_pc_10003d74, label %dec_label_pc_10003c80

dec_label_pc_10003c80:                            ; preds = %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge, %dec_label_pc_10003c78
  %v1_10003c80 = phi i32 [ %v1_10003c80.pre, %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge ], [ %v1_10003c78, %dec_label_pc_10003c78 ]
  %v0_10003c80 = load i32, i32* %r17.global-to-local, align 4
  %v4_10003c80 = icmp eq i32 %v0_10003c80, %v1_10003c80
  br i1 %v4_10003c80, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003c88:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003c88 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003c88, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003c8c:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84, %dec_label_pc_10003d90
  %v0_10003c8c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c8c = trunc i32 %v0_10003c8c to i16
  %v2_10003c8c = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c8c = add i32 %v2_10003c8c, 10
  %v4_10003c8c = inttoptr i32 %v3_10003c8c to i16*
  store i16 %v1_10003c8c, i16* %v4_10003c8c, align 2
  %v0_10003c94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c94, i32* @r3, align 4
  %v2_10003c98 = call i32 @function_100043cc(i32 %v0_10003c94, i32 20)
  %v3_10003c98 = trunc i32 %v2_10003c98 to i16
  %v0_10003c9c = load i32, i32* @r31, align 4
  store i32 %v0_10003c9c, i32* @r4, align 4
  %v4_10003ca0 = add i32 %v0_10003c94, 10
  %v5_10003ca0 = inttoptr i32 %v4_10003ca0 to i16*
  store i16 %v3_10003c98, i16* %v5_10003ca0, align 2
  %v0_10003ca4 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003ca8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ca8 = trunc i32 %v0_10003ca8 to i16
  %v2_10003ca8 = load i32, i32* @r31, align 4
  %v3_10003ca8 = add i32 %v2_10003ca8, 16
  %v4_10003ca8 = inttoptr i32 %v3_10003ca8 to i16*
  store i16 %v1_10003ca8, i16* %v4_10003ca8, align 2
  %v0_10003cac = load i32, i32* @r30, align 4
  %v0_10003cb0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003cb0, i32* %r3.global-to-local, align 4
  %v4_10003cb4 = call i32 @function_10004430(i32 %v0_10003cb0, i32 %v0_10003c9c, i32 %v0_10003ca4, i32 %v0_10003cac)
  %v5_10003cb4 = trunc i32 %v4_10003cb4 to i16
  store i32 %v4_10003cb4, i32* %r3.global-to-local, align 4
  %v3_10003cb8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003cb8, i32* %r7.global-to-local, align 4
  %v0_10003cbc = load i32, i32* @r31, align 4
  %v1_10003cbc = add i32 %v0_10003cbc, 2
  %v2_10003cbc = inttoptr i32 %v1_10003cbc to i16*
  %v3_10003cbc = load i16, i16* %v2_10003cbc, align 2
  %v4_10003cbc = zext i16 %v3_10003cbc to i32
  store i32 %v4_10003cbc, i32* %r0.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003cc4 = mul i32 %v3_10003cb8, 24
  store i32 %v1_10003cc4, i32* %r7.global-to-local, align 4
  %v4_10003cc8 = add i32 %v0_10003cbc, 16
  %v5_10003cc8 = inttoptr i32 %v4_10003cc8 to i16*
  store i16 %v5_10003cb4, i16* %v5_10003cc8, align 2
  %v0_10003ccc = load i32, i32* %r24.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003cd0, i32* %r3.global-to-local, align 4
  %v0_10003cd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003cd4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003cd4 = add i32 %v1_10003cd4, %v0_10003cd4
  store i32 %v2_10003cd4, i32* %r7.global-to-local, align 4
  %v0_10003cdc = load i32, i32* %r0.global-to-local, align 4
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  %v3_10003cdc = add i32 %v2_10003cd4, 2
  %v4_10003cdc = inttoptr i32 %v3_10003cdc to i16*
  store i16 %v1_10003cdc, i16* %v4_10003cdc, align 2
  store i32 268451048, i32* @lr, align 4
  %v6_10003ce4 = call i32 @function_1000a1b8(i32 %v0_10003cd0, i32 %v0_10003cc0, i32 %v0_10003ccc, i32 16384, i32 %v2_10003cd4, i32 16)
  store i32 %v6_10003ce4, i32* %r3.global-to-local, align 4
  %v3_10003ce8 = load i32, i32* %stack_var_-136, align 4
  %v1_10003cec = add i32 %v3_10003ce8, 1
  store i32 %v1_10003cec, i32* %r9.global-to-local, align 4
  %v1_10003cf0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003cf0 = icmp slt i32 %v1_10003cec, %v1_10003cf0
  store i32 %v1_10003cec, i32* %stack_var_-136, align 4
  br i1 %v2_10003cf0, label %dec_label_pc_10003c34, label %dec_label_pc_10003cfc

dec_label_pc_10003cfc:                            ; preds = %dec_label_pc_10003c8c
  %v0_10003cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003cfc = or i1 %v0_10003cfc, %v1_10003cfc
  br i1 %v2_10003cfc, label %dec_label_pc_10003c1c.preheader, label %dec_label_pc_10003c20

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003c34
  %v1_10003d04 = add i32 %v2_10003c40, 16
  %v2_10003d04 = inttoptr i32 %v1_10003d04 to i32*
  %v3_10003d04 = load i32, i32* %v2_10003d04, align 4
  store i32 %v3_10003d04, i32* %r29.global-to-local, align 4
  %v0_10003d08 = call i32 @function_10005b08()
  store i32 %v0_10003d08, i32* %r3.global-to-local, align 4
  %v3_10003d0c = load i32, i32* %stack_var_-136, align 4
  %v1_10003d10 = mul i32 %v3_10003d0c, 24
  %v1_10003d14 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d14 = add i32 %v1_10003d14, %v1_10003d10
  store i32 %v2_10003d14, i32* %r9.global-to-local, align 4
  %v1_10003d18 = add i32 %v2_10003d14, 20
  %v2_10003d18 = inttoptr i32 %v1_10003d18 to i8*
  %v3_10003d18 = load i8, i8* %v2_10003d18, align 1
  %v4_10003d18 = zext i8 %v3_10003d18 to i32
  store i32 %v4_10003d18, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003d18, 64
  %v2_10003d1c = zext i8 %tmp to i32
  %v3_10003d1c = lshr i32 %v0_10003d08, %v2_10003d1c
  store i32 %v3_10003d1c, i32* %r3.global-to-local, align 4
  %v0_10003d20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003d20 = add i32 %v3_10003d1c, %v0_10003d20
  store i32 %v2_10003d20, i32* %r29.global-to-local, align 4
  %v1_10003d24 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d24 = add i32 %v1_10003d24, 16
  %v3_10003d24 = inttoptr i32 %v2_10003d24 to i32*
  store i32 %v2_10003d20, i32* %v3_10003d24, align 4
  %v0_10003d28 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003d28, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003d2c:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003d30 = call i32 @function_10005b08()
  store i32 %v0_10003d30, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003d38 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d38 = add i32 %v1_10003d38, 12
  %v3_10003d38 = inttoptr i32 %v2_10003d38 to i32*
  store i32 %v0_10003d30, i32* %v3_10003d38, align 4
  %v0_10003d3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003d3c = load i32, i32* @r29, align 4
  %v4_10003d3c = icmp eq i32 %v0_10003d3c, %v1_10003d3c
  br i1 %v4_10003d3c, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003d44:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v0_10003d44 = call i32 @function_10005b08()
  %v1_10003d44 = trunc i32 %v0_10003d44 to i16
  store i32 %v0_10003d44, i32* %r3.global-to-local, align 4
  %v0_10003d48 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003d48 = load i32, i32* @r29, align 4
  %v4_10003d48 = icmp eq i32 %v0_10003d48, %v1_10003d48
  %v3_10003d4c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d4c = add i32 %v3_10003d4c, 4
  %v5_10003d4c = inttoptr i32 %v4_10003d4c to i16*
  store i16 %v1_10003d44, i16* %v5_10003d4c, align 2
  br i1 %v4_10003d48, label %dec_label_pc_10003d54, label %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge

dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge: ; preds = %dec_label_pc_10003d44
  %v1_10003c70.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c70

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d44, %dec_label_pc_10003c68
  %v0_10003d54 = call i32 @function_10005b08()
  %v1_10003d54 = trunc i32 %v0_10003d54 to i16
  store i32 %v0_10003d54, i32* %r3.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003d58 = load i32, i32* @r29, align 4
  %v4_10003d58 = icmp eq i32 %v0_10003d58, %v1_10003d58
  %v3_10003d5c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d5c = add i32 %v3_10003d5c, 20
  %v5_10003d5c = inttoptr i32 %v4_10003d5c to i16*
  store i16 %v1_10003d54, i16* %v5_10003d5c, align 2
  br i1 %v4_10003d58, label %dec_label_pc_10003d64, label %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge

dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge: ; preds = %dec_label_pc_10003d54
  %v1_10003c78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c78

dec_label_pc_10003d64:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003c70
  %v0_10003d64 = call i32 @function_10005b08()
  %v1_10003d64 = trunc i32 %v0_10003d64 to i16
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  %v0_10003d68 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003d68 = load i32, i32* @r29, align 4
  %v4_10003d68 = icmp eq i32 %v0_10003d68, %v1_10003d68
  %v3_10003d6c = load i32, i32* @r31, align 4
  %v4_10003d6c = add i32 %v3_10003d6c, 2
  %v5_10003d6c = inttoptr i32 %v4_10003d6c to i16*
  store i16 %v1_10003d64, i16* %v5_10003d6c, align 2
  br i1 %v4_10003d68, label %dec_label_pc_10003d74, label %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge

dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge: ; preds = %dec_label_pc_10003d64
  %v1_10003c80.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c80

dec_label_pc_10003d74:                            ; preds = %dec_label_pc_10003d64, %dec_label_pc_10003c78
  %v0_10003d74 = call i32 @function_10005b08()
  store i32 %v0_10003d74, i32* %r3.global-to-local, align 4
  %v0_10003d78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003d78 = load i32, i32* @r29, align 4
  %v4_10003d78 = icmp eq i32 %v0_10003d78, %v1_10003d78
  %v1_10003d7c = load i32, i32* @r31, align 4
  %v2_10003d7c = add i32 %v1_10003d7c, 4
  %v3_10003d7c = inttoptr i32 %v2_10003d7c to i32*
  store i32 %v0_10003d74, i32* %v3_10003d7c, align 4
  br i1 %v4_10003d78, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003d84:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003d84 = call i32 @function_10005b08()
  store i32 %v0_10003d84, i32* %r3.global-to-local, align 4
  %v1_10003d88 = load i32, i32* @r31, align 4
  %v2_10003d88 = add i32 %v1_10003d88, 8
  %v3_10003d88 = inttoptr i32 %v2_10003d88 to i32*
  store i32 %v0_10003d84, i32* %v3_10003d88, align 4
  %v0_10003d8c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d8c, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84
  %v0_10003d90 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003d90 = add i32 %v0_10003d90, 40
  store i32 %v1_10003d90, i32* @r3, align 4
  %v0_10003d94 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003d94, i32* @r4, align 4
  %v0_10003d98 = call i32 @function_10005cdc()
  store i32 %v0_10003d98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c8c

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003ab8
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003da4 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003da4 = add i32 %v0_10003da4, 40
  store i32 %v1_10003da4, i32* %r24.global-to-local, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v1_10003dac = add i32 %v0_10003da4, 20
  store i32 %v1_10003dac, i32* @r30, align 4
  %v3_10003db0 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003db0, i1* %cr2_eq.global-to-local, align 1
  %v3_10003db4 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003db4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003dc0:                            ; preds = %dec_label_pc_10003a94
  %v0_10003dc0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003dc0, i32* %r3.global-to-local, align 4
  store i32 268451272, i32* @lr, align 4
  %v0_10003dc4 = call i32 @function_10009518()
  store i32 %v0_10003dc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003dc8

dec_label_pc_10003dc8:                            ; preds = %dec_label_pc_10003844, %dec_label_pc_10003dc0
  store i32 %v0_1000385c, i32* %r0.global-to-local, align 4
  %v1_10003ddc = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000384c)
  store i32 %v0_1000389c, i32* %r28.global-to-local, align 4
  store i32 %v0_100038a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100038ac, i32* %r30.global-to-local, align 4
  %v0_10003e24 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003e24

; uselistorder directives
  uselistorder i32 %v0_10003d64, { 1, 0 }
  uselistorder i32 %v0_10003d54, { 1, 0 }
  uselistorder i32 %v0_10003d44, { 1, 0 }
  uselistorder i32 %v1_10003d3c, { 1, 0 }
  uselistorder i1 %v1_10003cfc, { 1, 0 }
  uselistorder i1 %v0_10003cfc, { 1, 0 }
  uselistorder i32 %v1_10003cec, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003cb4, { 1, 0 }
  uselistorder i32 %v1_10003b28, { 1, 0 }
  uselistorder i32 %v1_10003b20, { 1, 0 }
  uselistorder i32 %v1_10003b04, { 1, 0 }
  uselistorder i32 %v1_10003b00, { 1, 0 }
  uselistorder i32 %v1_10003aec, { 1, 0 }
  uselistorder i32 %v1_10003ae8, { 1, 0 }
  uselistorder i32 %v1_10003ae4, { 2, 1, 0 }
  uselistorder i32 %v1_10003adc, { 1, 2, 0, 3 }
  uselistorder i32 %v6_10003a70, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_10003a5c, { 3, 0, 2, 1 }
  uselistorder i8 %v5_100038dc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10005cdc, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10003dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10003d90, { 1, 0 }
  uselistorder label %dec_label_pc_10003c8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10003b74, { 1, 0 }
}

define i32 @function_10003e28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003e28:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10003e2c = load i32, i32* @lr, align 4
  store i32 %v0_10003e2c, i32* %r0.global-to-local, align 4
  %v0_10003e30 = call i32 @__asm_mfcr()
  store i32 %v0_10003e30, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10003e40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003e30, i32* %r24.global-to-local, align 4
  %v0_10003e80 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003e88 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003e94 = load i32, i32* @r31, align 4
  store i32 268451484, i32* @lr, align 4
  %v2_10003e98 = call i32 @function_1000a590(i32 4, i32 4)
  store i32 %v2_10003e98, i32* %r25.global-to-local, align 4
  %v0_10003ea0 = load i32, i32* @r28, align 4
  %v0_10003eac = load i32, i32* @r29, align 4
  store i32 %v0_10003eac, i32* %r3.global-to-local, align 4
  store i32 268451508, i32* @lr, align 4
  %v4_10003eb0 = inttoptr i32 %v0_10003ea0 to i32*
  %v5_10003eb0 = call i32 @function_100006a8(i32 %v0_10003eac, i32* %v4_10003eb0, i32 2, i32 0)
  %v5_10003ec0 = trunc i32 %v5_10003eb0 to i8
  %v0_10003ec8 = load i32, i32* @r28, align 4
  %v0_10003ecc = load i32, i32* @r29, align 4
  store i32 %v0_10003ecc, i32* %r3.global-to-local, align 4
  store i32 268451540, i32* @lr, align 4
  %v4_10003ed0 = inttoptr i32 %v0_10003ec8 to i32*
  %v5_10003ed0 = call i32 @function_100006a8(i32 %v0_10003ecc, i32* %v4_10003ed0, i32 3, i32 65535)
  %v0_10003ed4 = load i32, i32* @r28, align 4
  store i32 %v5_10003ed0, i32* %r21.global-to-local, align 4
  %v0_10003ee4 = load i32, i32* @r29, align 4
  store i32 %v0_10003ee4, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v4_10003ee8 = inttoptr i32 %v0_10003ed4 to i32*
  %v5_10003ee8 = call i32 @function_100006a8(i32 %v0_10003ee4, i32* %v4_10003ee8, i32 4, i32 64)
  %v0_10003eec = load i32, i32* @r28, align 4
  %v5_10003ef8 = trunc i32 %v5_10003ee8 to i8
  %v0_10003f00 = load i32, i32* @r29, align 4
  store i32 %v0_10003f00, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v4_10003f04 = inttoptr i32 %v0_10003eec to i32*
  %v5_10003f04 = call i32 @function_100006a8(i32 %v0_10003f00, i32* %v4_10003f04, i32 5, i32 1)
  %v0_10003f14 = load i32, i32* @r28, align 4
  %v1_10003f18 = urem i32 %v5_10003f04, 256
  store i32 %v1_10003f18, i32* @r31, align 4
  %v0_10003f1c = load i32, i32* @r29, align 4
  store i32 %v0_10003f1c, i32* %r3.global-to-local, align 4
  store i32 268451620, i32* @lr, align 4
  %v4_10003f20 = inttoptr i32 %v0_10003f14 to i32*
  %v5_10003f20 = call i32 @function_100006a8(i32 %v0_10003f1c, i32* %v4_10003f20, i32 6, i32 65535)
  %v0_10003f28 = load i32, i32* @r28, align 4
  store i32 %v5_10003f20, i32* %r22.global-to-local, align 4
  %v0_10003f38 = load i32, i32* @r29, align 4
  store i32 %v0_10003f38, i32* %r3.global-to-local, align 4
  store i32 268451648, i32* @lr, align 4
  %v4_10003f3c = inttoptr i32 %v0_10003f28 to i32*
  %v5_10003f3c = call i32 @function_100006a8(i32 %v0_10003f38, i32* %v4_10003f3c, i32 7, i32 65535)
  %v0_10003f44 = load i32, i32* @r28, align 4
  store i32 %v5_10003f3c, i32* %r23.global-to-local, align 4
  %v0_10003f54 = load i32, i32* @r29, align 4
  store i32 %v0_10003f54, i32* %r3.global-to-local, align 4
  store i32 268451676, i32* @lr, align 4
  %v4_10003f58 = inttoptr i32 %v0_10003f44 to i32*
  %v5_10003f58 = call i32 @function_100006a8(i32 %v0_10003f54, i32* %v4_10003f58, i32 17, i32 65535)
  %v0_10003f5c = load i32, i32* @r28, align 4
  store i32 %v5_10003f58, i32* %r19.global-to-local, align 4
  %v0_10003f6c = load i32, i32* @r29, align 4
  store i32 %v0_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451700, i32* @lr, align 4
  %v4_10003f70 = inttoptr i32 %v0_10003f5c to i32*
  %v5_10003f70 = call i32 @function_100006a8(i32 %v0_10003f6c, i32* %v4_10003f70, i32 18, i32 0)
  %v0_10003f74 = load i32, i32* @r28, align 4
  store i32 %v5_10003f70, i32* %r20.global-to-local, align 4
  %v0_10003f84 = load i32, i32* @r29, align 4
  store i32 %v0_10003f84, i32* %r3.global-to-local, align 4
  store i32 268451724, i32* @lr, align 4
  %v4_10003f88 = inttoptr i32 %v0_10003f74 to i32*
  %v5_10003f88 = call i32 @function_100006a8(i32 %v0_10003f84, i32* %v4_10003f88, i32 11, i32 0)
  %v0_10003f8c = load i32, i32* @r28, align 4
  store i32 %v5_10003f88, i32* %r14.global-to-local, align 4
  %v0_10003f9c = load i32, i32* @r29, align 4
  store i32 %v0_10003f9c, i32* %r3.global-to-local, align 4
  store i32 268451748, i32* @lr, align 4
  %v4_10003fa0 = inttoptr i32 %v0_10003f8c to i32*
  %v5_10003fa0 = call i32 @function_100006a8(i32 %v0_10003f9c, i32* %v4_10003fa0, i32 12, i32 0)
  %v0_10003fa4 = load i32, i32* @r28, align 4
  store i32 %v5_10003fa0, i32* %r17.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @function_100006a8(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 13, i32 0)
  %v0_10003fbc = load i32, i32* @r28, align 4
  store i32 %v5_10003fb8, i32* %r18.global-to-local, align 4
  %v0_10003fcc = load i32, i32* @r29, align 4
  store i32 %v0_10003fcc, i32* %r3.global-to-local, align 4
  store i32 268451796, i32* @lr, align 4
  %v4_10003fd0 = inttoptr i32 %v0_10003fbc to i32*
  %v5_10003fd0 = call i32 @function_100006a8(i32 %v0_10003fcc, i32* %v4_10003fd0, i32 14, i32 0)
  %v0_10003fd4 = load i32, i32* @r28, align 4
  %v0_10003fe4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fe4, i32* %r3.global-to-local, align 4
  store i32 268451820, i32* @lr, align 4
  %v4_10003fe8 = inttoptr i32 %v0_10003fd4 to i32*
  %v5_10003fe8 = call i32 @function_100006a8(i32 %v0_10003fe4, i32* %v4_10003fe8, i32 15, i32 1)
  %v0_10003fec = load i32, i32* @r28, align 4
  store i32 %v5_10003fe8, i32* %r16.global-to-local, align 4
  %v0_10003ffc = load i32, i32* @r29, align 4
  store i32 %v0_10003ffc, i32* %r3.global-to-local, align 4
  store i32 268451844, i32* @lr, align 4
  %v4_10004000 = inttoptr i32 %v0_10003fec to i32*
  %v5_10004000 = call i32 @function_100006a8(i32 %v0_10003ffc, i32* %v4_10004000, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004008 = load i32, i32* @global_var_1001c660.16, align 4
  %v0_1000400c = load i32, i32* @r28, align 4
  store i32 %v5_10004000, i32* %r30.global-to-local, align 4
  %v0_10004018 = load i32, i32* @r29, align 4
  store i32 %v0_10004018, i32* %r3.global-to-local, align 4
  store i32 268451872, i32* @lr, align 4
  %v5_1000401c = inttoptr i32 %v0_1000400c to i32*
  %v6_1000401c = call i32 @function_10000628(i32 %v0_10004018, i32* %v5_1000401c, i32 25, i32 %v3_10004008, i32 268566528)
  store i32 %v6_1000401c, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451892, i32* @lr, align 4
  %v3_10004030 = call i32 @function_1000a234(i32 2, i32 3, i32 6)
  store i32 %v3_10004030, i32* %r3.global-to-local, align 4
  %v3_10004034 = icmp eq i32 %v3_10004030, -1
  store i32 %v3_10004030, i32* %r26.global-to-local, align 4
  br i1 %v3_10004034, label %dec_label_pc_1000436c, label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10003e28
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000404c = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268451932, i32* @lr, align 4
  %v4_10004058 = call i32 @function_1000a1f8(i32 0, i32 3, i32 %v2_1000404c, i32 4)
  store i32 %v4_10004058, i32* %r3.global-to-local, align 4
  %v3_1000405c = icmp eq i32 %v4_10004058, -1
  br i1 %v3_1000405c, label %dec_label_pc_10004364, label %dec_label_pc_10004064

dec_label_pc_10004064:                            ; preds = %dec_label_pc_10004040
  %v0_10004064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004064 = icmp slt i32 %v0_10004064, 0
  %v3_10004064 = icmp eq i32 %v0_10004064, 0
  store i1 %v1_10004064, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004064, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10004070 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004070 = urem i32 %v0_10004070, 65536
  store i32 %v1_10004070, i32* %r21.global-to-local, align 4
  %v0_10004074 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004074 = urem i32 %v0_10004074, 65536
  store i32 %v1_10004074, i32* %r22.global-to-local, align 4
  %v0_10004078 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004078 = urem i32 %v0_10004078, 65536
  store i32 %v1_10004078, i32* %r23.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 256
  store i32 %v1_1000407c, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10004064, 1
  br i1 %tmp40, label %dec_label_pc_100041e0, label %dec_label_pc_10004084

dec_label_pc_10004084:                            ; preds = %dec_label_pc_10004064
  store i32 %v5_10003fd0, i32* %r0.global-to-local, align 4
  %v0_10004088 = load i32, i32* @r31, align 4
  %v3_10004088 = icmp eq i32 %v0_10004088, 0
  store i1 %v3_10004088, i1* %cr3_eq.global-to-local, align 1
  %v0_1000408c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 2
  store i32 %v1_1000408c, i32* %r29.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 2
  store i32 %v1_10004090, i32* %r17.global-to-local, align 4
  %v0_10004094 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004094 = urem i32 %v0_10004094, 2
  store i32 %v1_10004094, i32* %r18.global-to-local, align 4
  %v1_10004098 = urem i32 %v5_10003fd0, 2
  store i32 %v1_10004098, i32* %r28.global-to-local, align 4
  %v0_1000409c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000409c = urem i32 %v0_1000409c, 2
  store i32 %v1_1000409c, i32* %r30.global-to-local, align 4
  %v1_100040a0 = urem i32 %v0_1000407c, 2
  store i32 %v1_100040a0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100040f0 = sext i8 %v5_10003ec0 to i32
  %v4_100040f8 = sext i8 %v5_10003ef8 to i32
  br label %dec_label_pc_100040a8

dec_label_pc_100040a8:                            ; preds = %dec_label_pc_1000410c, %dec_label_pc_10004084
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452020, i32* @lr, align 4
  %v2_100040b0 = call i32 @function_1000a590(i32 128, i32 1)
  store i32 %v2_100040b0, i32* %r3.global-to-local, align 4
  %v3_100040b4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100040b4, i32* %r9.global-to-local, align 4
  %v0_100040b8 = load i32, i32* @r31, align 4
  %v1_100040b8 = mul i32 %v0_100040b8, 4
  store i32 %v1_100040b8, i32* %r0.global-to-local, align 4
  %v1_100040bc = load i32, i32* %r25.global-to-local, align 4
  %v3_100040bc = add i32 %v1_100040bc, %v1_100040b8
  %v4_100040bc = inttoptr i32 %v3_100040bc to i32*
  store i32 %v2_100040b0, i32* %v4_100040bc, align 4
  %v0_100040c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040c0 = mul i32 %v0_100040c0, 4
  store i32 %v1_100040c0, i32* %r9.global-to-local, align 4
  %v1_100040c4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100040c4 = add i32 %v1_100040c4, %v1_100040c0
  %v3_100040c4 = inttoptr i32 %v2_100040c4 to i32*
  %v4_100040c4 = load i32, i32* %v3_100040c4, align 4
  store i32 %v4_100040c4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100040cc = inttoptr i32 %v4_100040c4 to i32*
  %v2_100040cc = load i32, i32* %v1_100040cc, align 4
  store i32 %v2_100040cc, i32* %r0.global-to-local, align 4
  %v1_100040d0 = add i32 %v4_100040c4, 20
  store i32 %v1_100040d0, i32* %r11.global-to-local, align 4
  %v0_100040d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100040d4 = trunc i32 %v0_100040d4 to i16
  %v3_100040d4 = add i32 %v4_100040c4, 4
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i16*
  store i16 %v1_100040d4, i16* %v4_100040d4, align 2
  %v1_100040d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100040e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_100040e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100040e8 = inttoptr i32 %v1_100040e8 to i32*
  store i32 %v1_100040e0, i32* %v2_100040e8, align 4
  %v0_100040ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v2_100040ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100040ec = add i32 %v2_100040ec, 2
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  store i32 %v4_100040f0, i32* %r0.global-to-local, align 4
  %v2_100040f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100040f4 = add i32 %v2_100040f4, 1
  %v4_100040f4 = inttoptr i32 %v3_100040f4 to i8*
  store i8 %v5_10003ec0, i8* %v4_100040f4, align 1
  store i32 %v4_100040f8, i32* %r9.global-to-local, align 4
  %v2_100040fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100040fc = add i32 %v2_100040fc, 8
  %v4_100040fc = inttoptr i32 %v3_100040fc to i8*
  store i8 %v5_10003ef8, i8* %v4_100040fc, align 1
  %v0_10004100 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004100, label %dec_label_pc_1000410c, label %dec_label_pc_10004104

dec_label_pc_10004104:                            ; preds = %dec_label_pc_100040a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004108 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004108 = add i32 %v2_10004108, 6
  %v4_10004108 = inttoptr i32 %v3_10004108 to i16*
  store i16 16384, i16* %v4_10004108, align 2
  br label %dec_label_pc_1000410c

dec_label_pc_1000410c:                            ; preds = %dec_label_pc_100040a8, %dec_label_pc_10004104
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10004110 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004110 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004110 = add i32 %v1_10004110, 12
  %v3_10004110 = inttoptr i32 %v2_10004110 to i32*
  store i32 %v0_10004110, i32* %v3_10004110, align 4
  %v0_10004114 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004114 = trunc i32 %v0_10004114 to i8
  %v2_10004114 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 9
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v1_10004114, i8* %v4_10004114, align 1
  %v0_10004118 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004118 = trunc i32 %v0_10004118 to i16
  %v2_10004118 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004118 = add i32 %v2_10004118, 20
  %v4_10004118 = inttoptr i32 %v3_10004118 to i16*
  store i16 %v1_10004118, i16* %v4_10004118, align 2
  %v3_1000411c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000411c, i32* %r9.global-to-local, align 4
  %v0_10004120 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004120 = trunc i32 %v0_10004120 to i16
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 2
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 %v1_10004120, i16* %v4_10004120, align 2
  %v0_10004124 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004124 = mul i32 %v0_10004124, 24
  %v1_10004128 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004128 = add i32 %v1_10004128, %v1_10004124
  store i32 %v2_10004128, i32* %r9.global-to-local, align 4
  %v1_1000412c = add i32 %v2_10004128, 16
  %v2_1000412c = inttoptr i32 %v1_1000412c to i32*
  %v3_1000412c = load i32, i32* %v2_1000412c, align 4
  store i32 %v3_1000412c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10004134 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004134 = add i32 %v1_10004134, 16
  %v3_10004134 = inttoptr i32 %v2_10004134 to i32*
  store i32 %v3_1000412c, i32* %v3_10004134, align 4
  %v0_10004138 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, 4
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v0_10004138, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000413c = add i32 %v0_1000413c, 12
  %v2_1000413c = inttoptr i32 %v1_1000413c to i32*
  %v3_1000413c = load i32, i32* %v2_1000413c, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10004140, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004148 = call i32 @__asm_rlwimi(i32 %v1_100040a0, i32 21, i32 10, i32 10)
  store i32 %v1_10004148, i32* %r0.global-to-local, align 4
  %v1_1000414c = call i32 @__asm_rlwimi(i32 %v1_10004090, i32 20, i32 11, i32 11)
  store i32 %v1_1000414c, i32* %r0.global-to-local, align 4
  %v1_10004150 = call i32 @__asm_rlwimi(i32 %v1_10004094, i32 19, i32 12, i32 12)
  store i32 %v1_10004150, i32* %r0.global-to-local, align 4
  %v1_10004154 = call i32 @__asm_rlwimi(i32 %v1_10004098, i32 18, i32 13, i32 13)
  store i32 %v1_10004154, i32* %r0.global-to-local, align 4
  %v1_10004158 = call i32 @__asm_rlwimi(i32 %v1_1000408c, i32 17, i32 14, i32 14)
  store i32 %v1_10004158, i32* %r0.global-to-local, align 4
  %v1_1000415c = call i32 @__asm_rlwimi(i32 %v1_1000409c, i32 16, i32 15, i32 15)
  %v1_10004160 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004160 = add i32 %v1_10004160, 12
  %v3_10004160 = inttoptr i32 %v2_10004160 to i32*
  store i32 %v1_1000415c, i32* %v3_10004160, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10004168 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004168 = add i32 %v2_10004168, 40
  %v4_10004168 = inttoptr i32 %v3_10004168 to i8*
  store i8 2, i8* %v4_10004168, align 1
  %v0_1000416c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000416c = trunc i32 %v0_1000416c to i8
  %v2_1000416c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000416c = add i32 %v2_1000416c, 41
  %v4_1000416c = inttoptr i32 %v3_1000416c to i8*
  store i8 %v1_1000416c, i8* %v4_1000416c, align 1
  %v0_10004170 = call i32 @function_10005b08()
  %v2_10004178 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004178 = add i32 %v2_10004178, 46
  %v4_10004178 = inttoptr i32 %v3_10004178 to i8*
  store i8 8, i8* %v4_10004178, align 1
  %v1_1000417c = urem i32 %v0_10004170, 16
  store i32 %v1_1000417c, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10004188 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004188 = add i32 %v2_10004188, 44
  %v4_10004188 = inttoptr i32 %v3_10004188 to i8*
  store i8 4, i8* %v4_10004188, align 1
  %v0_1000418c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000418c = add i32 %v0_1000418c, 1400
  store i32 %v1_1000418c, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10004194 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004194 = trunc i32 %v0_10004194 to i8
  %v2_10004194 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004194 = add i32 %v2_10004194, 45
  %v4_10004194 = inttoptr i32 %v3_10004194 to i8*
  store i8 %v1_10004194, i8* %v4_10004194, align 1
  %v0_10004198 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004198 = trunc i32 %v0_10004198 to i8
  %v2_10004198 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004198 = add i32 %v2_10004198, 47
  %v4_10004198 = inttoptr i32 %v3_10004198 to i8*
  store i8 %v1_10004198, i8* %v4_10004198, align 1
  %v0_1000419c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000419c = trunc i32 %v0_1000419c to i16
  %v2_1000419c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000419c = add i32 %v2_1000419c, 42
  %v4_1000419c = inttoptr i32 %v3_1000419c to i16*
  store i16 %v1_1000419c, i16* %v4_1000419c, align 2
  %v0_100041a0 = call i32 @function_10005b08()
  store i32 %v0_100041a0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_100041ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100041ac = add i32 %v1_100041ac, 52
  %v3_100041ac = inttoptr i32 %v2_100041ac to i32*
  store i32 0, i32* %v3_100041ac, align 4
  %v0_100041b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041b0 = trunc i32 %v0_100041b0 to i8
  %v2_100041b0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041b0 = add i32 %v2_100041b0, 56
  %v4_100041b0 = inttoptr i32 %v3_100041b0 to i8*
  store i8 %v1_100041b0, i8* %v4_100041b0, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_100041bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100041bc = add i32 %v1_100041bc, 48
  %v3_100041bc = inttoptr i32 %v2_100041bc to i32*
  store i32 %v0_100041a0, i32* %v3_100041bc, align 4
  %v0_100041c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041c0 = trunc i32 %v0_100041c0 to i8
  %v2_100041c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c0 = add i32 %v2_100041c0, 59
  %v4_100041c0 = inttoptr i32 %v3_100041c0 to i8*
  store i8 %v1_100041c0, i8* %v4_100041c0, align 1
  %v0_100041c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c4 = trunc i32 %v0_100041c4 to i8
  %v2_100041c4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c4 = add i32 %v2_100041c4, 57
  %v4_100041c4 = inttoptr i32 %v3_100041c4 to i8*
  store i8 %v1_100041c4, i8* %v4_100041c4, align 1
  %v0_100041c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c8 = trunc i32 %v0_100041c8 to i8
  %v2_100041c8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c8 = add i32 %v2_100041c8, 58
  %v4_100041c8 = inttoptr i32 %v3_100041c8 to i8*
  store i8 %v1_100041c8, i8* %v4_100041c8, align 1
  %v3_100041cc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100041cc, i32* %r9.global-to-local, align 4
  %v1_100041d0 = add i32 %v3_100041cc, 1
  store i32 %v1_100041d0, i32* %r31.global-to-local, align 4
  %v1_100041d4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100041d4 = icmp slt i32 %v1_100041d0, %v1_100041d4
  store i32 %v1_100041d0, i32* %stack_var_-120, align 4
  br i1 %v2_100041d4, label %dec_label_pc_100040a8, label %dec_label_pc_100041e0.loopexit

dec_label_pc_100041e0.loopexit:                   ; preds = %dec_label_pc_1000410c
  %v0_100041e4.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_100041e8.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041e8.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041e0

dec_label_pc_100041e0:                            ; preds = %dec_label_pc_100041e0.loopexit, %dec_label_pc_10004064
  %v1_100041e8.pre = phi i1 [ %v1_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_10004064, %dec_label_pc_10004064 ]
  %v0_100041e8.pre = phi i1 [ %v0_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v3_10004064, %dec_label_pc_10004064 ]
  %v0_100041e4 = phi i32 [ %v0_100041e4.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_1000407c, %dec_label_pc_10004064 ]
  %v0_100041e0 = load i32, i32* %r15.global-to-local, align 4
  %v3_100041e0 = icmp eq i32 %v0_100041e0, -1
  store i1 %v3_100041e0, i1* %cr2_eq.global-to-local, align 1
  %v3_100041e4 = icmp eq i32 %v0_100041e4, 0
  store i1 %v3_100041e4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100041e8.outer

dec_label_pc_100041e8.outer:                      ; preds = %dec_label_pc_100042c4, %dec_label_pc_100041e0
  %v1_100041e8.ph = phi i1 [ %v1_100041e8.pre, %dec_label_pc_100041e0 ], [ %v1_100042c4, %dec_label_pc_100042c4 ]
  %v0_100041e8.ph = phi i1 [ %v0_100041e8.pre, %dec_label_pc_100041e0 ], [ %v0_100042c4, %dec_label_pc_100042c4 ]
  %v2_100041e8 = or i1 %v1_100041e8.ph, %v0_100041e8.ph
  br label %dec_label_pc_100041e8

dec_label_pc_100041e8:                            ; preds = %dec_label_pc_100041e8.outer, %dec_label_pc_100041e8
  br i1 %v2_100041e8, label %dec_label_pc_100041e8, label %dec_label_pc_100041ec

dec_label_pc_100041ec:                            ; preds = %dec_label_pc_100041e8, %dec_label_pc_100042c4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_10004254, %dec_label_pc_100041ec
  %v0_100041fc = phi i32 [ %v1_100042b4, %dec_label_pc_10004254 ], [ 0, %dec_label_pc_100041ec ]
  %v1_100041fc = mul i32 %v0_100041fc, 24
  store i32 %v1_100041fc, i32* %r0.global-to-local, align 4
  %v1_10004200 = mul i32 %v0_100041fc, 4
  store i32 %v1_10004200, i32* %r11.global-to-local, align 4
  %v1_10004204 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004204 = add i32 %v1_10004204, %v1_10004200
  %v3_10004204 = inttoptr i32 %v2_10004204 to i32*
  %v4_10004204 = load i32, i32* %v3_10004204, align 4
  store i32 %v4_10004204, i32* %r28.global-to-local, align 4
  %v1_10004208 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004208 = add i32 %v1_10004208, %v1_100041fc
  %v1_1000420c = add i32 %v2_10004208, 20
  %v2_1000420c = inttoptr i32 %v1_1000420c to i8*
  %v3_1000420c = load i8, i8* %v2_1000420c, align 1
  %v4_1000420c = zext i8 %v3_1000420c to i32
  store i32 %v4_1000420c, i32* %r9.global-to-local, align 4
  %v1_10004210 = add i32 %v4_10004204, 20
  store i32 %v1_10004210, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_1000420c, 32
  br i1 %tmp41, label %dec_label_pc_100042cc, label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_100041fc
  %v0_1000421c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000421c, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_10004220:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004228 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004228 = icmp eq i32 %v0_10004228, 65535
  br i1 %v4_10004228, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v1_10004230 = phi i32 [ %v1_10004304, %dec_label_pc_100042f4 ], [ 65535, %dec_label_pc_10004220 ]
  %v0_10004230 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004230 = icmp eq i32 %v0_10004230, %v1_10004230
  br i1 %v4_10004230, label %dec_label_pc_1000431c, label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge, %dec_label_pc_10004230
  %v1_10004238 = phi i32 [ %v1_10004238.pre, %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge ], [ %v1_10004230, %dec_label_pc_10004230 ]
  %v0_10004238 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004238 = icmp eq i32 %v0_10004238, %v1_10004238
  br i1 %v4_10004238, label %dec_label_pc_1000432c, label %dec_label_pc_10004240

dec_label_pc_10004240:                            ; preds = %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge, %dec_label_pc_10004238
  %v1_10004240 = phi i32 [ %v1_10004240.pre, %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge ], [ %v1_10004238, %dec_label_pc_10004238 ]
  %v0_10004240 = load i32, i32* %r19.global-to-local, align 4
  %v4_10004240 = icmp eq i32 %v0_10004240, %v1_10004240
  br i1 %v4_10004240, label %dec_label_pc_1000433c, label %dec_label_pc_10004248

dec_label_pc_10004248:                            ; preds = %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge, %dec_label_pc_10004240
  %v1_10004248 = phi i32 [ %v1_10004248.pre, %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge ], [ %v1_10004240, %dec_label_pc_10004240 ]
  %v0_10004248 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004248 = icmp eq i32 %v0_10004248, %v1_10004248
  br i1 %v4_10004248, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_10004250:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_10004250 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004250, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004254:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c, %dec_label_pc_10004358
  %v0_10004254 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004254 = trunc i32 %v0_10004254 to i16
  %v2_10004254 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004254 = add i32 %v2_10004254, 10
  %v4_10004254 = inttoptr i32 %v3_10004254 to i16*
  store i16 %v1_10004254, i16* %v4_10004254, align 2
  %v0_1000425c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000425c, i32* @r3, align 4
  %v2_10004260 = call i32 @function_100043cc(i32 %v0_1000425c, i32 20)
  %v3_10004260 = trunc i32 %v2_10004260 to i16
  %v0_10004264 = load i32, i32* @r31, align 4
  store i32 %v0_10004264, i32* @r4, align 4
  %v4_10004268 = add i32 %v0_1000425c, 10
  %v5_10004268 = inttoptr i32 %v4_10004268 to i16*
  store i16 %v3_10004260, i16* %v5_10004268, align 2
  %v0_10004270 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004270 = trunc i32 %v0_10004270 to i16
  %v2_10004270 = load i32, i32* @r31, align 4
  %v3_10004270 = add i32 %v2_10004270, 16
  %v4_10004270 = inttoptr i32 %v3_10004270 to i16*
  store i16 %v1_10004270, i16* %v4_10004270, align 2
  %v0_10004278 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004278, i32* %r3.global-to-local, align 4
  %v4_1000427c = call i32 @function_10004430(i32 %v0_10004278, i32 %v0_10004264, i32 40, i32 40)
  %v5_1000427c = trunc i32 %v4_1000427c to i16
  store i32 %v4_1000427c, i32* %r3.global-to-local, align 4
  %v3_10004280 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004280, i32* %r7.global-to-local, align 4
  %v0_10004284 = load i32, i32* @r31, align 4
  %v1_10004284 = add i32 %v0_10004284, 2
  %v2_10004284 = inttoptr i32 %v1_10004284 to i16*
  %v3_10004284 = load i16, i16* %v2_10004284, align 2
  %v4_10004284 = zext i16 %v3_10004284 to i32
  store i32 %v4_10004284, i32* %r0.global-to-local, align 4
  %v0_10004288 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000428c = mul i32 %v3_10004280, 24
  store i32 %v1_1000428c, i32* %r7.global-to-local, align 4
  %v4_10004290 = add i32 %v0_10004284, 16
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v5_1000427c, i16* %v5_10004290, align 2
  %v0_10004298 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004298, i32* %r3.global-to-local, align 4
  %v0_1000429c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000429c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000429c = add i32 %v1_1000429c, %v0_1000429c
  store i32 %v2_1000429c, i32* %r7.global-to-local, align 4
  %v0_100042a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100042a4 = trunc i32 %v0_100042a4 to i16
  %v3_100042a4 = add i32 %v2_1000429c, 2
  %v4_100042a4 = inttoptr i32 %v3_100042a4 to i16*
  store i16 %v1_100042a4, i16* %v4_100042a4, align 2
  store i32 268452528, i32* @lr, align 4
  %v6_100042ac = call i32 @function_1000a1b8(i32 %v0_10004298, i32 %v0_10004288, i32 60, i32 16384, i32 %v2_1000429c, i32 16)
  store i32 %v6_100042ac, i32* %r3.global-to-local, align 4
  %v3_100042b0 = load i32, i32* %stack_var_-120, align 4
  %v1_100042b4 = add i32 %v3_100042b0, 1
  store i32 %v1_100042b4, i32* %r9.global-to-local, align 4
  %v1_100042b8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100042b8 = icmp slt i32 %v1_100042b4, %v1_100042b8
  store i32 %v1_100042b4, i32* %stack_var_-120, align 4
  br i1 %v2_100042b8, label %dec_label_pc_100041fc, label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_10004254
  %v0_100042c4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042c4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042c4 = or i1 %v0_100042c4, %v1_100042c4
  br i1 %v2_100042c4, label %dec_label_pc_100041e8.outer, label %dec_label_pc_100041ec

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100041fc
  %v1_100042cc = add i32 %v2_10004208, 16
  %v2_100042cc = inttoptr i32 %v1_100042cc to i32*
  %v3_100042cc = load i32, i32* %v2_100042cc, align 4
  store i32 %v3_100042cc, i32* %r29.global-to-local, align 4
  %v0_100042d0 = call i32 @function_10005b08()
  store i32 %v0_100042d0, i32* %r3.global-to-local, align 4
  %v3_100042d4 = load i32, i32* %stack_var_-120, align 4
  %v1_100042d8 = mul i32 %v3_100042d4, 24
  %v1_100042dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100042dc = add i32 %v1_100042dc, %v1_100042d8
  store i32 %v2_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v2_100042dc, 20
  %v2_100042e0 = inttoptr i32 %v1_100042e0 to i8*
  %v3_100042e0 = load i8, i8* %v2_100042e0, align 1
  %v4_100042e0 = zext i8 %v3_100042e0 to i32
  store i32 %v4_100042e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100042e0, 64
  %v2_100042e4 = zext i8 %tmp to i32
  %v3_100042e4 = lshr i32 %v0_100042d0, %v2_100042e4
  store i32 %v3_100042e4, i32* %r3.global-to-local, align 4
  %v0_100042e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100042e8 = add i32 %v3_100042e4, %v0_100042e8
  store i32 %v2_100042e8, i32* %r29.global-to-local, align 4
  %v1_100042ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100042ec = add i32 %v1_100042ec, 16
  %v3_100042ec = inttoptr i32 %v2_100042ec to i32*
  store i32 %v2_100042e8, i32* %v3_100042ec, align 4
  %v0_100042f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100042f0, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_100042f4:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100042f8 = call i32 @function_10005b08()
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10004300 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004300 = add i32 %v1_10004300, 12
  %v3_10004300 = inttoptr i32 %v2_10004300 to i32*
  store i32 %v0_100042f8, i32* %v3_10004300, align 4
  %v0_10004304 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004304 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004304 = icmp eq i32 %v0_10004304, %v1_10004304
  br i1 %v4_10004304, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_1000430c:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v0_1000430c = call i32 @function_10005b08()
  %v1_1000430c = trunc i32 %v0_1000430c to i16
  store i32 %v0_1000430c, i32* %r3.global-to-local, align 4
  %v0_10004310 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004310 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004310 = icmp eq i32 %v0_10004310, %v1_10004310
  %v3_10004314 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004314 = add i32 %v3_10004314, 4
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_1000430c, i16* %v5_10004314, align 2
  br i1 %v4_10004310, label %dec_label_pc_1000431c, label %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge

dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge: ; preds = %dec_label_pc_1000430c
  %v1_10004238.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004238

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_1000430c, %dec_label_pc_10004230
  %v0_1000431c = call i32 @function_10005b08()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v0_10004320 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004320 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004320 = icmp eq i32 %v0_10004320, %v1_10004320
  %v3_10004324 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004324 = add i32 %v3_10004324, 20
  %v5_10004324 = inttoptr i32 %v4_10004324 to i16*
  store i16 %v1_1000431c, i16* %v5_10004324, align 2
  br i1 %v4_10004320, label %dec_label_pc_1000432c, label %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge

dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge: ; preds = %dec_label_pc_1000431c
  %v1_10004240.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004240

dec_label_pc_1000432c:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_10004238
  %v0_1000432c = call i32 @function_10005b08()
  %v1_1000432c = trunc i32 %v0_1000432c to i16
  store i32 %v0_1000432c, i32* %r3.global-to-local, align 4
  %v0_10004330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004330 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004330 = icmp eq i32 %v0_10004330, %v1_10004330
  %v3_10004334 = load i32, i32* @r31, align 4
  %v4_10004334 = add i32 %v3_10004334, 2
  %v5_10004334 = inttoptr i32 %v4_10004334 to i16*
  store i16 %v1_1000432c, i16* %v5_10004334, align 2
  br i1 %v4_10004330, label %dec_label_pc_1000433c, label %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge

dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge: ; preds = %dec_label_pc_1000432c
  %v1_10004248.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004248

dec_label_pc_1000433c:                            ; preds = %dec_label_pc_1000432c, %dec_label_pc_10004240
  %v0_1000433c = call i32 @function_10005b08()
  store i32 %v0_1000433c, i32* %r3.global-to-local, align 4
  %v0_10004340 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004340 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004340 = icmp eq i32 %v0_10004340, %v1_10004340
  %v1_10004344 = load i32, i32* @r31, align 4
  %v2_10004344 = add i32 %v1_10004344, 4
  %v3_10004344 = inttoptr i32 %v2_10004344 to i32*
  store i32 %v0_1000433c, i32* %v3_10004344, align 4
  br i1 %v4_10004340, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_1000434c:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_1000434c = call i32 @function_10005b08()
  store i32 %v0_1000434c, i32* %r3.global-to-local, align 4
  %v1_10004350 = load i32, i32* @r31, align 4
  %v2_10004350 = add i32 %v1_10004350, 8
  %v3_10004350 = inttoptr i32 %v2_10004350 to i32*
  store i32 %v0_1000434c, i32* %v3_10004350, align 4
  %v0_10004354 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004354, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c
  %v0_10004358 = call i32 @function_10005b08()
  %v1_10004358 = trunc i32 %v0_10004358 to i16
  store i32 %v0_10004358, i32* %r3.global-to-local, align 4
  %v3_1000435c = load i32, i32* @r31, align 4
  %v4_1000435c = add i32 %v3_1000435c, 18
  %v5_1000435c = inttoptr i32 %v4_1000435c to i16*
  store i16 %v1_10004358, i16* %v5_1000435c, align 2
  br label %dec_label_pc_10004254

dec_label_pc_10004364:                            ; preds = %dec_label_pc_10004040
  %v0_10004364 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004364, i32* %r3.global-to-local, align 4
  store i32 268452716, i32* @lr, align 4
  %v0_10004368 = call i32 @function_10009518()
  store i32 %v0_10004368, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000436c

dec_label_pc_1000436c:                            ; preds = %dec_label_pc_10003e28, %dec_label_pc_10004364
  store i32 %v0_10003e40, i32* %r0.global-to-local, align 4
  %v1_10004380 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003e30)
  store i32 %v0_10003e80, i32* %r28.global-to-local, align 4
  store i32 %v0_10003e88, i32* %r29.global-to-local, align 4
  store i32 %v0_10003e94, i32* %r31.global-to-local, align 4
  %v0_100043c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043c8

; uselistorder directives
  uselistorder i32 %v0_10004358, { 1, 0 }
  uselistorder i32 %v0_1000432c, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_1000430c, { 1, 0 }
  uselistorder i32 %v1_10004304, { 1, 0 }
  uselistorder i1 %v1_100042c4, { 1, 0 }
  uselistorder i1 %v0_100042c4, { 1, 0 }
  uselistorder i32 %v1_100042b4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000427c, { 1, 0 }
  uselistorder i32 %v1_10004200, { 1, 0 }
  uselistorder i32 %v1_100040c0, { 1, 0 }
  uselistorder i32 %v1_100040b8, { 1, 0 }
  uselistorder i32 %v1_100040a0, { 1, 0 }
  uselistorder i32 %v1_1000409c, { 1, 0 }
  uselistorder i32 %v1_10004098, { 1, 0 }
  uselistorder i32 %v1_10004094, { 1, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v1_1000408c, { 1, 0 }
  uselistorder i32 %v1_1000407c, { 1, 0 }
  uselistorder i8 %v5_10003ef8, { 1, 0 }
  uselistorder i8 %v5_10003ec0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 11, 10, 12, 8, 13, 9, 14, 2, 3, 5, 4, 6, 7, 15, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 26, 27, 28, 29, 0, 1, 2, 3, 4 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 41, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000436c, { 1, 0 }
  uselistorder label %dec_label_pc_10004358, { 1, 0 }
  uselistorder label %dec_label_pc_10004254, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100041ec, { 1, 0 }
  uselistorder label %dec_label_pc_100041e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000410c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 65535, { 50, 51, 0, 7, 52, 53, 19, 20, 21, 22, 1, 8, 54, 55, 23, 24, 25, 26, 27, 56, 9, 28, 29, 57, 10, 30, 31, 13, 12, 11, 58, 59, 32, 33, 34, 14, 15, 60, 35, 61, 36, 62, 2, 16, 63, 64, 5, 37, 38, 39, 3, 17, 65, 66, 6, 40, 41, 42, 4, 18, 67, 68, 43, 44, 45, 69, 70, 71, 72, 73, 74, 46, 47, 75, 76, 77, 78, 79, 80, 48, 49 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_100044f8 = load i32, i32* @r27, align 4
  %v2_100044fc = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_100044fc, i32* @r27, align 4
  %v2_10004504 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004508 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004518 = load i32, i32* @r25, align 4
  %v2_1000451c = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10004520 = load i32, i32* @r30, align 4
  %v2_10004524 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004524, i32* @r30, align 4
  %v0_10004528 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10004530 = load i32, i32* @r23, align 4
  %v0_10004538 = load i32, i32* @r28, align 4
  store i32 268453184, i32* @lr, align 4
  %v3_1000453c = call i32 @function_10009d1c(i32 %v2_100044fc, i32 0, i32 4096)
  store i32 268453200, i32* @lr, align 4
  %v3_1000454c = call i32 @function_10009d1c(i32 %v2_10004504, i32 0, i32 4096)
  store i32 268453216, i32* @lr, align 4
  %v3_1000455c = call i32 @function_10009d1c(i32 %v2_10004524, i32 0, i32 513)
  %v0_10004568 = load i32, i32* @r29, align 4
  %v0_1000456c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000456c, i32* %stack_var_-8792, align 4
  %v3_1000457c = trunc i32 %v0_10004568 to i8
  %v4_1000457c = call i32 @function_10009234(i8 %v3_1000457c, i32 16, i32 %v2_1000451c)
  store i32 268453256, i32* @lr, align 4
  %v2_10004584 = call i32 @function_10008d58(i8* nonnull %stack_var_-8776)
  %v3_10004588 = icmp eq i32 %v2_10004584, 2
  br i1 %v3_10004588, label %dec_label_pc_10004ac8, label %dec_label_pc_10004590

dec_label_pc_10004590:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_10004ac8
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000459c.26 to i32), i32* @lr, align 4
  %v1_10004598 = call i32 @function_100087e0(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100045a4.27 to i32), i32* @lr, align 4
  %v1_100045a0 = call i32 @function_100087e0(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100045ac.28 to i32), i32* @lr, align 4
  %v1_100045a8 = call i32 @function_100087e0(i32 15)
  store i32 268453300, i32* @lr, align 4
  %v1_100045b0 = call i32 @function_100087e0(i32 17)
  %v3_100045bc = call i32 @function_1000872c(i32 17, i32* null)
  store i32 268453324, i32* @lr, align 4
  %v2_100045c8 = call i32 @function_10009680(i32 %v3_100045bc, i32 0)
  %v3_100045cc = icmp eq i32 %v2_100045c8, -1
  store i32 %v2_100045c8, i32* @r28, align 4
  br i1 %v3_100045cc, label %dec_label_pc_10004a14, label %dec_label_pc_100045d8

dec_label_pc_100045d8:                            ; preds = %dec_label_pc_10004590
  %v2_100045d8 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_100045d8, i32* %r26.global-to-local, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e888 = call i32 @function_10008fb8(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045c8)
  %v3_100045ec90 = icmp eq i32 %v4_100045e888, 0
  br i1 %v3_100045ec90, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_100045f4:                            ; preds = %dec_label_pc_100045d8, %dec_label_pc_100045dc.backedge
  %v3_100045f4 = load i8, i8* %stack_var_-8760, align 1
  %v3_100045f8 = icmp eq i8 %v3_100045f4, 0
  br i1 %v3_100045f8, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004600

dec_label_pc_100045dc.backedge:                   ; preds = %dec_label_pc_10004614, %dec_label_pc_100045f4, %dec_label_pc_10004684, %dec_label_pc_1000471c, %dec_label_pc_10004768
  %v0_100045e4.pre = load i32, i32* @r28, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e8 = call i32 @function_10008fb8(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_100045e4.pre)
  %v3_100045ec = icmp eq i32 %v4_100045e8, 0
  br i1 %v3_100045ec, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_10004600:                            ; preds = %dec_label_pc_100045f4
  %v3_10004600 = icmp eq i8 %v3_100045f4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10004600, label %dec_label_pc_10004634, label %dec_label_pc_10004610

dec_label_pc_10004610:                            ; preds = %dec_label_pc_10004600
  %v1_10004618.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004614

dec_label_pc_10004614:                            ; preds = %dec_label_pc_10004628, %dec_label_pc_10004610
  %v0_10004614 = phi i32 [ %v1_10004614, %dec_label_pc_10004628 ], [ 0, %dec_label_pc_10004610 ]
  %v1_10004614 = add i32 %v0_10004614, 1
  %v2_10004618 = add i32 %v1_10004614, %v1_10004618.pre
  %v3_10004618 = inttoptr i32 %v2_10004618 to i8*
  %v4_10004618 = load i8, i8* %v3_10004618, align 1
  %v3_1000461c = icmp eq i8 %v4_10004618, 0
  br i1 %v3_1000461c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004628

dec_label_pc_10004628:                            ; preds = %dec_label_pc_10004614
  %v3_10004620 = icmp eq i8 %v4_10004618, 58
  br i1 %v3_10004620, label %dec_label_pc_1000462c, label %dec_label_pc_10004614

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004628
  %v1_1000462c = add i32 %v0_10004614, 4
  store i32 %v1_1000462c, i32* @r31, align 4
  %v1_10004630 = add i32 %v0_10004614, 3
  br label %dec_label_pc_10004634

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004600, %dec_label_pc_1000462c
  %v1_1000468c = phi i32 [ 2, %dec_label_pc_10004600 ], [ %v1_10004630, %dec_label_pc_1000462c ]
  %v0_10004634 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004634 = add i32 %v0_10004634, %v1_1000468c
  %v1_1000463c = add i32 %v2_10004634, 32
  %v2_1000463c = inttoptr i32 %v1_1000463c to i8*
  %v3_1000463c = load i8, i8* %v2_1000463c, align 1
  %v3_10004640 = icmp eq i8 %v3_1000463c, 0
  br i1 %v3_10004640, label %dec_label_pc_10004684, label %dec_label_pc_10004648

dec_label_pc_10004648:                            ; preds = %dec_label_pc_10004634
  %v3_10004648 = icmp eq i8 %v3_1000463c, 32
  %v1_1000464c = add i32 %v1_1000468c, 1
  store i32 %v1_1000464c, i32* @r31, align 4
  br i1 %v3_10004648, label %dec_label_pc_10004684, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004648
  %v0_1000465c = load i32, i32* @r30, align 4
  %v2_1000465c = add i32 %v0_1000465c, %v1_1000464c
  br label %dec_label_pc_10004668

dec_label_pc_10004668:                            ; preds = %dec_label_pc_10004668, %dec_label_pc_10004654
  %v0_1000466c = phi i32 [ %v1_1000466c, %dec_label_pc_10004668 ], [ %v1_1000468c, %dec_label_pc_10004654 ]
  %v0_10004670 = phi i32 [ %v1_10004670, %dec_label_pc_10004668 ], [ %v2_1000465c, %dec_label_pc_10004654 ]
  %v1_10004668 = inttoptr i32 %v0_10004670 to i8*
  %v2_10004668 = load i8, i8* %v1_10004668, align 1
  %v1_1000466c = add i32 %v0_1000466c, 1
  %v1_10004670 = add i32 %v0_10004670, 1
  %tmp60 = or i8 %v2_10004668, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10004680, label %dec_label_pc_10004668

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004668
  %v1_10004680 = add i32 %v0_1000466c, 2
  store i32 %v1_10004680, i32* @r31, align 4
  br label %dec_label_pc_10004684

dec_label_pc_10004684:                            ; preds = %dec_label_pc_10004648, %dec_label_pc_10004634, %dec_label_pc_10004680
  %v1_10004684 = phi i32 [ %v1_1000468c, %dec_label_pc_10004648 ], [ %v1_1000468c, %dec_label_pc_10004634 ], [ %v1_1000466c, %dec_label_pc_10004680 ]
  %v2_10004684 = add i32 %v1_10004684, %v0_10004634
  %v0_1000468c = load i32, i32* @r30, align 4
  %v2_1000468c = add i32 %v0_1000468c, %v1_1000468c
  store i32 %v2_1000468c, i32* @r29, align 4
  %v3_10004690 = add i32 %v2_10004684, 32
  %v4_10004690 = inttoptr i32 %v3_10004690 to i8*
  store i8 0, i8* %v4_10004690, align 1
  %v0_10004694 = load i32, i32* @r29, align 4
  store i32 268453532, i32* @lr, align 4
  %v1_10004698 = inttoptr i32 %v0_10004694 to i8*
  %v2_10004698 = call i32 @function_10008d58(i8* %v1_10004698)
  %v0_100046a4 = load i32, i32* @r29, align 4
  %v3_100046a8 = inttoptr i32 %v0_100046a4 to i8*
  %v4_100046a8 = call i32 @function_10009108(i8* %v3_100046a8, i32 %v2_10004698, i32 %v2_1000451c)
  %v3_100046b0 = icmp eq i32 %v4_100046a8, -1
  br i1 %v3_100046b0, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_100046bc.preheader

dec_label_pc_100046bc.preheader:                  ; preds = %dec_label_pc_10004684
  %v0_100046bc.pre = load i32, i32* @r31, align 4
  %v0_100046c4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046bc.outer

dec_label_pc_100046bc.outer:                      ; preds = %dec_label_pc_10004a64, %dec_label_pc_100046bc.preheader
  %v0_100046d828.ph = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  %v0_100046bc.ph = phi i32 [ %v1_1000477076, %dec_label_pc_10004a64 ], [ %v0_100046bc.pre, %dec_label_pc_100046bc.preheader ]
  %v0_1000471c.ph = phi i32 [ 1, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  br label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046bc.outer, %dec_label_pc_10004a54
  %v0_100046d828 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a54 ], [ %v0_100046d828.ph, %dec_label_pc_100046bc.outer ]
  %v0_100046bc = phi i32 [ %v1_1000477076, %dec_label_pc_10004a54 ], [ %v0_100046bc.ph, %dec_label_pc_100046bc.outer ]
  %v1_100046bc = add i32 %v0_100046bc, 1
  %v2_100046c4 = add i32 %v1_100046bc, %v0_100046c4.pre
  %v1_100046f068 = inttoptr i32 %v2_100046c4 to i8*
  %v2_100046f069 = load i8, i8* %v1_100046f068, align 1
  store i32 %v1_100046bc, i32* @r31, align 4
  %v3_100046f871 = icmp eq i8 %v2_100046f069, 0
  br i1 %v3_100046f871, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_100046cc:                            ; preds = %dec_label_pc_10004708
  %v3_100046fc79 = icmp eq i8 %v3_100046fc79.in, 9
  br i1 %v3_100046fc79, label %dec_label_pc_1000470c, label %dec_label_pc_100046d8

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_100046cc
  %v3_100046cc = icmp eq i32 %v0_100046cc75, 1
  br i1 %v3_100046cc, label %dec_label_pc_10004a4c, label %dec_label_pc_100046e0

dec_label_pc_100046e0:                            ; preds = %dec_label_pc_100046d8, %dec_label_pc_10004a4c
  %v0_100046e0 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a4c ], [ %v0_1000470c74, %dec_label_pc_100046d8 ]
  %v2_100046e0 = icmp sgt i32 %v0_100046e0, 6
  br i1 %v2_100046e0, label %dec_label_pc_1000471c, label %dec_label_pc_100046ec

dec_label_pc_100046ec:                            ; preds = %dec_label_pc_1000470c, %dec_label_pc_100046e0
  %v0_100046d827 = phi i32 [ %v0_1000470c74, %dec_label_pc_1000470c ], [ %v0_100046e0, %dec_label_pc_100046e0 ]
  %v0_100046cc25 = phi i32 [ 1, %dec_label_pc_1000470c ], [ 0, %dec_label_pc_100046e0 ]
  %v0_100046f022 = add i32 %v0_1000471478, 1
  %v1_100046ec = add i32 %v1_1000477076, 1
  %v1_100046f0 = inttoptr i32 %v0_100046f022 to i8*
  %v2_100046f0 = load i8, i8* %v1_100046f0, align 1
  store i32 %v1_100046ec, i32* @r31, align 4
  %v3_100046f8 = icmp eq i8 %v2_100046f0, 0
  br i1 %v3_100046f8, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_10004708:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_100046ec
  %v3_100046fc79.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v3_1000470080.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v0_1000471478 = phi i32 [ %v0_100046f022, %dec_label_pc_100046ec ], [ %v2_100046c4, %dec_label_pc_100046bc ]
  %v1_1000477076 = phi i32 [ %v1_100046ec, %dec_label_pc_100046ec ], [ %v1_100046bc, %dec_label_pc_100046bc ]
  %v0_100046cc75 = phi i32 [ %v0_100046cc25, %dec_label_pc_100046ec ], [ 0, %dec_label_pc_100046bc ]
  %v0_1000470c74 = phi i32 [ %v0_100046d827, %dec_label_pc_100046ec ], [ %v0_100046d828, %dec_label_pc_100046bc ]
  %v3_1000470080 = icmp eq i8 %v3_1000470080.in, 32
  br i1 %v3_1000470080, label %dec_label_pc_1000470c, label %dec_label_pc_100046cc

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004708, %dec_label_pc_100046cc
  %tmp62 = icmp slt i32 %v0_1000470c74, 7
  br i1 %tmp62, label %dec_label_pc_100046ec, label %dec_label_pc_1000471c

dec_label_pc_1000471c:                            ; preds = %dec_label_pc_100046ec, %dec_label_pc_100046e0, %dec_label_pc_1000470c, %dec_label_pc_100046bc
  %v1_10004770.lcssa = phi i32 [ %v1_100046bc, %dec_label_pc_100046bc ], [ %v1_1000477076, %dec_label_pc_1000470c ], [ %v1_1000477076, %dec_label_pc_100046e0 ], [ %v1_100046ec, %dec_label_pc_100046ec ]
  %v3_1000471c = icmp eq i32 %v0_1000471c.ph, 0
  br i1 %v3_1000471c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004728

dec_label_pc_10004728:                            ; preds = %dec_label_pc_1000471c
  %v0_10004728 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004728 = add i32 %v0_10004728, %v1_10004770.lcssa
  %v1_1000472c = add i32 %v2_10004728, 32
  %v2_1000472c = inttoptr i32 %v1_1000472c to i8*
  %v3_1000472c = load i8, i8* %v2_1000472c, align 1
  %v3_10004730 = icmp eq i8 %v3_1000472c, 0
  br i1 %v3_10004730, label %dec_label_pc_10004768, label %dec_label_pc_10004738

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004728
  %v3_10004738 = icmp eq i8 %v3_1000472c, 32
  br i1 %v3_10004738, label %dec_label_pc_10004768, label %dec_label_pc_10004740

dec_label_pc_10004740:                            ; preds = %dec_label_pc_10004738
  %v1_10004740 = add i32 %v1_10004770.lcssa, 1
  %v2_10004744 = add i32 %v1_10004740, %v0_100046c4.pre
  br label %dec_label_pc_10004750

dec_label_pc_10004750:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004740
  %v0_10004754 = phi i32 [ %v1_10004754, %dec_label_pc_10004750 ], [ %v1_10004770.lcssa, %dec_label_pc_10004740 ]
  %v0_10004758 = phi i32 [ %v1_10004758, %dec_label_pc_10004750 ], [ %v2_10004744, %dec_label_pc_10004740 ]
  %v1_10004750 = inttoptr i32 %v0_10004758 to i8*
  %v2_10004750 = load i8, i8* %v1_10004750, align 1
  %v1_10004754 = add i32 %v0_10004754, 1
  %v1_10004758 = add i32 %v0_10004758, 1
  %tmp63 = or i8 %v2_10004750, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004768, label %dec_label_pc_10004750

dec_label_pc_10004768:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004738, %dec_label_pc_10004728
  %v1_10004768 = phi i32 [ %v1_10004770.lcssa, %dec_label_pc_10004738 ], [ %v1_10004770.lcssa, %dec_label_pc_10004728 ], [ %v1_10004754, %dec_label_pc_10004750 ]
  %v2_10004768 = add i32 %v1_10004768, %v0_10004728
  %v2_10004770 = add i32 %v1_10004770.lcssa, %v0_100046c4.pre
  store i32 %v2_10004770, i32* @r31, align 4
  %v3_10004774 = add i32 %v2_10004768, 32
  %v4_10004774 = inttoptr i32 %v3_10004774 to i8*
  store i8 0, i8* %v4_10004774, align 1
  %v0_10004778 = load i32, i32* @r31, align 4
  store i32 268453760, i32* @lr, align 4
  %v1_1000477c = inttoptr i32 %v0_10004778 to i8*
  %v2_1000477c = call i32 @function_10008d58(i8* %v1_1000477c)
  %v2_10004780 = icmp sgt i32 %v2_1000477c, 15
  br i1 %v2_10004780, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004788

dec_label_pc_10004788:                            ; preds = %dec_label_pc_10004768
  %v0_10004788 = load i32, i32* @r31, align 4
  store i32 %v2_100045d8, i32* @r3, align 4
  %v2_10004790 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10004790 = call i32 @function_10008d80(i8* %v2_10004790, i32 %v0_10004788)
  br label %dec_label_pc_10004794

dec_label_pc_10004794.loopexit:                   ; preds = %dec_label_pc_100045dc.backedge, %dec_label_pc_100045d8
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10004794

dec_label_pc_10004794:                            ; preds = %dec_label_pc_10004794.loopexit, %dec_label_pc_10004788
  %v1_100047a0.pre-phi = phi i8* [ %.pre, %dec_label_pc_10004794.loopexit ], [ %v2_10004790, %dec_label_pc_10004788 ]
  store i32 268453788, i32* @lr, align 4
  %v0_10004798 = call i32 @function_10009518()
  store i32 268453796, i32* @lr, align 4
  %v2_100047a0 = call i32 @function_10008d58(i8* %v1_100047a0.pre-phi)
  %v3_100047a4 = icmp eq i32 %v2_100047a0, 0
  br i1 %v3_100047a4, label %dec_label_pc_10004a6c, label %dec_label_pc_100047ac

dec_label_pc_100047ac:                            ; preds = %dec_label_pc_10004794
  %v3_100047b4 = call i32 @function_1000872c(i32 13, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453824, i32* @lr, align 4
  %v1_100047bc = call i32 @function_10009a64(i32 %v3_100047b4)
  store i32 %v1_100047bc, i32* @r23, align 4
  %v3_100047c0 = icmp eq i32 %v1_100047bc, 0
  br i1 %v3_100047c0, label %dec_label_pc_100049f4, label %dec_label_pc_100047c8

dec_label_pc_100047c8:                            ; preds = %dec_label_pc_100047ac
  store i32 0, i32* @r28, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d07 = inttoptr i32 %v1_100047bc to i32*
  %v2_100047d08 = call i32 @function_10009b74(i32* %v1_100047d07)
  %v3_100047d411 = icmp eq i32 %v2_100047d08, 0
  br i1 %v3_100047d411, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader.lr.ph

dec_label_pc_100047dc.preheader.lr.ph:            ; preds = %dec_label_pc_100047c8
  %v2_10004810 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10004980 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_100047dc.preheader

dec_label_pc_100047cc.loopexit:                   ; preds = %dec_label_pc_100047e4, %dec_label_pc_100047fc, %dec_label_pc_10004864
  %v0_100047cc = load i32, i32* @r23, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d0 = inttoptr i32 %v0_100047cc to i32*
  %v2_100047d0 = call i32 @function_10009b74(i32* %v1_100047d0)
  %v3_100047d4 = icmp eq i32 %v2_100047d0, 0
  br i1 %v3_100047d4, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader

dec_label_pc_100047dc.preheader:                  ; preds = %dec_label_pc_100047dc.preheader.lr.ph, %dec_label_pc_100047cc.loopexit
  %v0_100047e435 = phi i32 [ %v2_100047d08, %dec_label_pc_100047dc.preheader.lr.ph ], [ %v2_100047d0, %dec_label_pc_100047cc.loopexit ]
  br label %dec_label_pc_100047dc

dec_label_pc_100047dc:                            ; preds = %dec_label_pc_100047dc.preheader, %dec_label_pc_100049d0
  %v0_100047e4 = phi i32 [ %v0_100047e435, %dec_label_pc_100047dc.preheader ], [ %v2_100049dc, %dec_label_pc_100049d0 ]
  %v0_100047dc = load i32, i32* @r28, align 4
  %v3_100047dc = icmp eq i32 %v0_100047dc, 0
  br i1 %v3_100047dc, label %dec_label_pc_100047e4, label %dec_label_pc_100049e8

dec_label_pc_100047e4:                            ; preds = %dec_label_pc_100047dc
  %v1_100047e4 = add i32 %v0_100047e4, 11
  %v2_100047e4 = inttoptr i32 %v1_100047e4 to i8*
  %v3_100047e4 = load i8, i8* %v2_100047e4, align 1
  %v4_100047e4 = zext i8 %v3_100047e4 to i32
  store i32 %v1_100047e4, i32* @r30, align 4
  %v1_100047ec = add nuw nsw i32 %v4_100047e4, 208
  %v1_100047f0 = urem i32 %v1_100047ec, 256
  %v2_100047f4 = icmp ugt i32 %v1_100047f0, 9
  br i1 %v2_100047f4, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100047fc

dec_label_pc_100047fc:                            ; preds = %dec_label_pc_100047e4
  %v3_10004804 = call i32 @function_1000872c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004810 = call i32 @function_10008d80(i8* %v2_10004810, i32 %v3_10004804)
  store i32 268453916, i32* @lr, align 4
  %v2_10004818 = call i32 @function_10008d58(i8* %v2_10004810)
  %v0_1000481c = load i32, i32* @r30, align 4
  %v0_10004820 = load i32, i32* @r27, align 4
  %v2_10004820 = add i32 %v0_10004820, %v2_10004818
  store i32 %v2_10004820, i32* @r3, align 4
  %v2_10004824 = inttoptr i32 %v2_10004820 to i8*
  %v3_10004824 = call i32 @function_10008d80(i8* %v2_10004824, i32 %v0_1000481c)
  store i32 268453936, i32* @lr, align 4
  %v2_1000482c = call i32 @function_10008d58(i8* %v2_10004810)
  %v3_1000483c = call i32 @function_1000872c(i32 14, i32* null)
  %v0_10004844 = load i32, i32* @r27, align 4
  %v2_10004844 = add i32 %v2_1000482c, %v0_10004844
  store i32 %v2_10004844, i32* @r3, align 4
  %v2_10004848 = inttoptr i32 %v2_10004844 to i8*
  %v3_10004848 = call i32 @function_10008d80(i8* %v2_10004848, i32 %v3_1000483c)
  store i32 4096, i32* @r5, align 4
  store i32 268453980, i32* @lr, align 4
  %v3_10004858 = call i32 @function_10009798(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_1000485c = icmp eq i32 %v3_10004858, -1
  br i1 %v3_1000485c, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_10004864

dec_label_pc_10004864:                            ; preds = %dec_label_pc_100047fc
  %v3_1000486c = call i32 @function_1000872c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004878 = call i32 @function_10008d80(i8* %v2_10004810, i32 %v3_1000486c)
  store i32 268454020, i32* @lr, align 4
  %v2_10004880 = call i32 @function_10008d58(i8* %v2_10004810)
  %v0_10004884 = load i32, i32* @r30, align 4
  %v0_10004888 = load i32, i32* @r27, align 4
  %v2_10004888 = add i32 %v0_10004888, %v2_10004880
  store i32 %v2_10004888, i32* @r3, align 4
  %v2_1000488c = inttoptr i32 %v2_10004888 to i8*
  %v3_1000488c = call i32 @function_10008d80(i8* %v2_1000488c, i32 %v0_10004884)
  store i32 268454040, i32* @lr, align 4
  %v2_10004894 = call i32 @function_10008d58(i8* %v2_10004810)
  %v3_100048a4 = call i32 @function_1000872c(i32 15, i32* null)
  %v0_100048ac = load i32, i32* @r27, align 4
  %v2_100048ac = add i32 %v2_10004894, %v0_100048ac
  store i32 %v2_100048ac, i32* @r3, align 4
  %v2_100048b0 = inttoptr i32 %v2_100048ac to i8*
  %v3_100048b0 = call i32 @function_10008d80(i8* %v2_100048b0, i32 %v3_100048a4)
  store i32 268454076, i32* @lr, align 4
  %v1_100048b8 = call i32 @function_10009a64(i32 %v2_100044fc)
  store i32 %v1_100048b8, i32* @r25, align 4
  %v3_100048bc = icmp eq i32 %v1_100048b8, 0
  br i1 %v3_100048bc, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100048c4

dec_label_pc_100048c4.loopexit:                   ; preds = %dec_label_pc_100048e4, %dec_label_pc_10004980
  %v0_100048c4.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048c4

dec_label_pc_100048c4:                            ; preds = %dec_label_pc_10004864, %dec_label_pc_100048c4.loopexit
  %v0_100048c4 = phi i32 [ %v0_100048c4.pre, %dec_label_pc_100048c4.loopexit ], [ %v1_100048b8, %dec_label_pc_10004864 ]
  store i32 268454092, i32* @lr, align 4
  %v1_100048c8 = inttoptr i32 %v0_100048c4 to i32*
  %v2_100048c8 = call i32 @function_10009b74(i32* %v1_100048c8)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048c8, i32* @r31, align 4
  %v3_100048d0 = icmp eq i32 %v2_100048c8, 0
  %v0_100048d4 = load i32, i32* @r28, align 4
  store i32 %v2_10004504, i32* @r3, align 4
  %v3_100048d4.not = icmp ne i32 %v0_100048d4, 0
  %brmerge = or i1 %v3_100048d0, %v3_100048d4.not
  br i1 %brmerge, label %dec_label_pc_100049d0, label %dec_label_pc_100048e4

dec_label_pc_100048e4:                            ; preds = %dec_label_pc_100048c4
  store i32 268454120, i32* @lr, align 4
  %v0_100048e4 = call i32 @function_10008e00()
  %v3_100048f0 = call i32 @function_1000872c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_100048fc = call i32 @function_10008d80(i8* %v2_10004810, i32 %v3_100048f0)
  store i32 268454152, i32* @lr, align 4
  %v2_10004904 = call i32 @function_10008d58(i8* %v2_10004810)
  %v0_10004908 = load i32, i32* @r30, align 4
  %v0_1000490c = load i32, i32* @r27, align 4
  %v2_1000490c = add i32 %v0_1000490c, %v2_10004904
  store i32 %v2_1000490c, i32* @r3, align 4
  %v2_10004910 = inttoptr i32 %v2_1000490c to i8*
  %v3_10004910 = call i32 @function_10008d80(i8* %v2_10004910, i32 %v0_10004908)
  store i32 268454172, i32* @lr, align 4
  %v2_10004918 = call i32 @function_10008d58(i8* %v2_10004810)
  %v3_10004928 = call i32 @function_1000872c(i32 15, i32* null)
  %v0_10004930 = load i32, i32* @r27, align 4
  %v2_10004930 = add i32 %v2_10004918, %v0_10004930
  store i32 %v2_10004930, i32* @r3, align 4
  %v2_10004934 = inttoptr i32 %v2_10004930 to i8*
  %v3_10004934 = call i32 @function_10008d80(i8* %v2_10004934, i32 %v3_10004928)
  store i32 268454208, i32* @lr, align 4
  %v2_1000493c = call i32 @function_10008d58(i8* %v2_10004810)
  %v0_10004948 = load i32, i32* @r27, align 4
  %v2_10004948 = add i32 %v0_10004948, %v2_1000493c
  store i32 %v2_10004948, i32* @r3, align 4
  %v2_1000494c = inttoptr i32 %v2_10004948 to i8*
  %v3_1000494c = call i32 @function_10008d80(i8* %v2_1000494c, i32 ptrtoint (i32* @global_var_1000bf14.30 to i32))
  store i32 268454232, i32* @lr, align 4
  %v2_10004954 = call i32 @function_10008d58(i8* %v2_10004810)
  %v0_10004958 = load i32, i32* @r31, align 4
  %v1_10004958 = add i32 %v0_10004958, 11
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v0_1000495c, %v2_10004954
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_10008d80(i8* %v2_10004960, i32 %v1_10004958)
  store i32 268454260, i32* @lr, align 4
  %v3_10004970 = call i32 @function_10009798(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_10004974 = icmp eq i32 %v3_10004970, -1
  br i1 %v3_10004974, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_10004980

dec_label_pc_10004980:                            ; preds = %dec_label_pc_100048e4
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_10008d58(i8* %v1_10004980)
  %v4_10004990 = call i32 @function_10009108(i8* %v1_10004980, i32 %v2_10004980, i32 %v2_100045d8)
  %v3_10004998 = icmp eq i32 %v4_10004990, -1
  %v0_1000499c = load i32, i32* @r30, align 4
  store i32 %v0_1000499c, i32* @r3, align 4
  br i1 %v3_10004998, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_100049a4

dec_label_pc_100049a4:                            ; preds = %dec_label_pc_10004980
  store i32 268454312, i32* @lr, align 4
  %v2_100049a4 = call i32 @function_10008e80(i32 %v0_1000499c, i32 10)
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_10009638(i32 %v2_100049a4, i32 9)
  %v0_100049b0 = load i32, i32* @r25, align 4
  store i32 268454328, i32* @lr, align 4
  %v1_100049b4 = inttoptr i32 %v0_100049b0 to i32*
  %v2_100049b4 = call i32 @function_10009b74(i32* %v1_100049b4)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100048c4, %dec_label_pc_100049a4
  %v0_100049d0 = load i32, i32* @r25, align 4
  store i32 268454360, i32* @lr, align 4
  %v1_100049d4 = inttoptr i32 %v0_100049d0 to i32*
  %v2_100049d4 = call i32 @function_100099c0(i32* %v1_100049d4)
  %v0_100049d8 = load i32, i32* @r23, align 4
  store i32 268454368, i32* @lr, align 4
  %v1_100049dc = inttoptr i32 %v0_100049d8 to i32*
  %v2_100049dc = call i32 @function_10009b74(i32* %v1_100049dc)
  %v3_100049e0 = icmp eq i32 %v2_100049dc, 0
  br i1 %v3_100049e0, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc

dec_label_pc_100049e8:                            ; preds = %dec_label_pc_100047cc.loopexit, %dec_label_pc_100049d0, %dec_label_pc_100047dc, %dec_label_pc_100047c8
  %v0_100049e8 = load i32, i32* @r23, align 4
  %v0_100049ec = load i32, i32* @r28, align 4
  %v1_100049ec = urem i32 %v0_100049ec, 256
  store i32 %v1_100049ec, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100049f4.31 to i32), i32* @lr, align 4
  %v1_100049f0 = inttoptr i32 %v0_100049e8 to i32*
  %v2_100049f0 = call i32 @function_100099c0(i32* %v1_100049f0)
  br label %dec_label_pc_100049f4

dec_label_pc_100049f4:                            ; preds = %dec_label_pc_100047ac, %dec_label_pc_100049e8
  store i32 ptrtoint ([3 x i8]* @global_var_100049fc.32 to i32), i32* @lr, align 4
  %v1_100049f8 = call i32 @function_1000ad2c(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a04.33 to i32), i32* @lr, align 4
  %v1_10004a00 = call i32 @function_10008754(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a0c.34 to i32), i32* @lr, align 4
  %v1_10004a08 = call i32 @function_10008754(i32 14)
  store i32 268454420, i32* @lr, align 4
  %v1_10004a10 = call i32 @function_10008754(i32 15)
  br label %dec_label_pc_10004a14

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_10004590, %dec_label_pc_100049f4
  %v0_10004a18 = load i32, i32* @r31, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a18

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_100046d8
  %v3_100046d8 = icmp eq i32 %v0_1000470c74, 0
  %v1_10004a4c = add i32 %v0_1000470c74, 1
  br i1 %v3_100046d8, label %dec_label_pc_10004a54, label %dec_label_pc_100046e0

dec_label_pc_10004a54:                            ; preds = %dec_label_pc_10004a4c
  %v0_10004a54 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a54 = add i32 %v0_10004a54, %v1_1000477076
  %v1_10004a58 = add i32 %v2_10004a54, 33
  %v2_10004a58 = inttoptr i32 %v1_10004a58 to i8*
  %v3_10004a58 = load i8, i8* %v2_10004a58, align 1
  %v3_10004a5c = icmp eq i8 %v3_10004a58, 65
  br i1 %v3_10004a5c, label %dec_label_pc_10004a64, label %dec_label_pc_100046bc

dec_label_pc_10004a64:                            ; preds = %dec_label_pc_10004a54
  br label %dec_label_pc_100046bc.outer

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004794
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a78.35 to i32), i32* @lr, align 4
  %v1_10004a74 = call i32 @function_10008754(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a80.36 to i32), i32* @lr, align 4
  %v1_10004a7c = call i32 @function_10008754(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a88.37 to i32), i32* @lr, align 4
  %v1_10004a84 = call i32 @function_10008754(i32 15)
  store i32 268454544, i32* @lr, align 4
  %v1_10004a8c = call i32 @function_10008754(i32 17)
  %v0_10004a94 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a94

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_100044e8
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10004590

; uselistorder directives
  uselistorder i32 %v2_100049dc, { 1, 0 }
  uselistorder i32 %v1_10004770.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000470c74, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000477076, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_100046f022, { 1, 0 }
  uselistorder i32 %v1_1000468c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_100045d8, { 1, 0, 2 }
  uselistorder i32 %v2_1000451c, { 1, 0 }
  uselistorder i32 %v2_100044fc, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10008e80, { 1, 0 }
  uselistorder i32 268453844, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10008fb8, { 1, 0 }
  uselistorder i32 268453356, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 0 }
  uselistorder label %dec_label_pc_100049f4, { 1, 0 }
  uselistorder label %dec_label_pc_100049e8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049d0, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047cc.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000471c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004708, { 1, 0 }
  uselistorder label %dec_label_pc_100046e0, { 1, 0 }
  uselistorder label %dec_label_pc_100046bc, { 1, 0 }
  uselistorder label %dec_label_pc_10004684, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004634, { 1, 0 }
  uselistorder label %dec_label_pc_100045dc.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100045f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004590, { 1, 0 }
}

define i32 @function_10004aec(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004aec:
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8500 = alloca i32, align 4
  %stack_var_-8504 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8464 = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-8432 = alloca i32, align 4
  %stack_var_-8480 = alloca i32, align 4
  %stack_var_-8496 = alloca i32, align 4
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-8384 = alloca i32, align 4
  %stack_var_-8320 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8256 = alloca i32, align 4
  %v0_10004b08 = load i32, i32* @r22, align 4
  %v0_10004b0c = load i32, i32* @r23, align 4
  %v0_10004b10 = load i32, i32* @r24, align 4
  %v0_10004b14 = load i32, i32* @r25, align 4
  %v0_10004b18 = load i32, i32* @r26, align 4
  %v0_10004b1c = load i32, i32* @r27, align 4
  %v0_10004b20 = load i32, i32* @r28, align 4
  %v0_10004b24 = load i32, i32* @r29, align 4
  %v0_10004b28 = load i32, i32* @r31, align 4
  store i32 268454704, i32* @lr, align 4
  %v0_10004b2c = call i32 @function_100098e8()
  store i32 %v0_10004b2c, i32* @r30, align 4
  store i32 268454712, i32* @lr, align 4
  %v0_10004b34 = call i32 @function_10009560()
  store i32 %v0_10004b34, i32* @global_var_1001c66c.38, align 4
  %tmp64 = icmp slt i32 %v0_10004b34, 1
  br i1 %tmp64, label %dec_label_pc_10004b88, label %dec_label_pc_10004b48

dec_label_pc_10004b48:                            ; preds = %dec_label_pc_10004ca0, %dec_label_pc_10004b90, %dec_label_pc_10004b88, %dec_label_pc_10004aec
  %v0_10004b84 = phi i32 [ -1, %dec_label_pc_10004b90 ], [ -1, %dec_label_pc_10004b88 ], [ %v0_10004b34, %dec_label_pc_10004aec ], [ 0, %dec_label_pc_10004ca0 ]
  store i32 %v0_10004b08, i32* @r22, align 4
  store i32 %v0_10004b0c, i32* @r23, align 4
  store i32 %v0_10004b10, i32* @r24, align 4
  store i32 %v0_10004b14, i32* @r25, align 4
  store i32 %v0_10004b18, i32* @r26, align 4
  store i32 %v0_10004b1c, i32* @r27, align 4
  store i32 %v0_10004b20, i32* @r28, align 4
  store i32 %v0_10004b24, i32* @r29, align 4
  store i32 %v0_10004b28, i32* @r31, align 4
  ret i32 %v0_10004b84

dec_label_pc_10004b88:                            ; preds = %dec_label_pc_10004aec
  %v3_10004b88 = icmp eq i32 %v0_10004b34, -1
  br i1 %v3_10004b88, label %dec_label_pc_10004b48, label %dec_label_pc_10004b90

dec_label_pc_10004b90:                            ; preds = %dec_label_pc_10004b88
  store i32 268454812, i32* @lr, align 4
  %v1_10004b98 = call i32 @function_1000ad2c(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004ba4.39 to i32), i32* @lr, align 4
  %v0_10004ba0 = call i32 @function_1000a438()
  store i32 %v0_10004ba0, i32* %r11.global-to-local, align 4
  %v3_10004bb0 = inttoptr i32 %v0_10004ba0 to i8*
  store i8 0, i8* %v3_10004bb0, align 1
  store i32 0, i32* %r28.global-to-local, align 4
  %v0_10004bbc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004bbc, i32* @global_var_1001c668.40, align 4
  store i32 0, i32* @global_var_1001c664.41, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004bc8.42 to i32), i32* @lr, align 4
  %v1_10004bc4 = call i32 @function_100087e0(i32 13)
  %v2_10004bcc = ptrtoint i32* %stack_var_-8256 to i32
  store i32 %v2_10004bcc, i32* @r25, align 4
  store i32 268454868, i32* @lr, align 4
  %v1_10004bd0 = call i32 @function_100087e0(i32 14)
  %v3_10004bdc = call i32 @function_1000872c(i32 13, i32* null)
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v2_10004be8 = bitcast i32* %stack_var_-8256 to i8*
  %v3_10004be8 = call i32 @function_10008d80(i8* %v2_10004be8, i32 %v3_10004bdc)
  %v0_10004bec = load i32, i32* @r25, align 4
  %v2_10004bec = add i32 %v0_10004bec, %v3_10004be8
  store i32 %v2_10004bec, i32* %r29.global-to-local, align 4
  store i32 268454900, i32* @lr, align 4
  %v0_10004bf0 = call i32 @function_100095a8()
  %v2_10004bf4 = ptrtoint i32* %stack_var_-8400 to i32
  %v3_10004bfc = trunc i32 %v0_10004bf0 to i8
  %v4_10004bfc = call i32 @function_10009234(i8 %v3_10004bfc, i32 10, i32 %v2_10004bf4)
  store i32 %v2_10004bec, i32* @r3, align 4
  %v2_10004c08 = inttoptr i32 %v2_10004bec to i8*
  %v3_10004c08 = call i32 @function_10008d80(i8* %v2_10004c08, i32 %v4_10004bfc)
  %v0_10004c10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004c10 = add i32 %v0_10004c10, %v3_10004c08
  store i32 %v2_10004c10, i32* %r29.global-to-local, align 4
  %v3_10004c18 = call i32 @function_1000872c(i32 14, i32* null)
  store i32 %v2_10004c10, i32* @r3, align 4
  %v2_10004c24 = inttoptr i32 %v2_10004c10 to i8*
  %v3_10004c24 = call i32 @function_10008d80(i8* %v2_10004c24, i32 %v3_10004c18)
  store i32 %v3_10004c24, i32* @r31, align 4
  store i32 268454972, i32* @lr, align 4
  %v2_10004c38 = call i32 @function_10009680(i32 %v2_10004bcc, i32 0)
  %v3_10004c3c = icmp eq i32 %v2_10004c38, -1
  br i1 %v3_10004c3c, label %dec_label_pc_10004b48, label %dec_label_pc_10004c44

dec_label_pc_10004c44:                            ; preds = %dec_label_pc_10004b90
  store i32 ptrtoint ([3 x i8]* @global_var_10004c48.43 to i32), i32* @lr, align 4
  %v0_10004c44 = call i32 @function_10009518()
  store i32 ptrtoint ([3 x i8]* @global_var_10004c50.44 to i32), i32* @lr, align 4
  %v1_10004c4c = call i32 @function_10008754(i32 13)
  store i32 268455000, i32* @lr, align 4
  %v1_10004c54 = call i32 @function_10008754(i32 14)
  %v3_10004c58 = load i32, i32* @global_var_1001c668.40, align 4
  store i32 268455016, i32* @lr, align 4
  %v3_10004c64 = call i32 @function_10009798(i32 %v2_10004bcc, i32 %v3_10004c58, i32 4095)
  %v3_10004c68 = icmp eq i32 %v3_10004c64, -1
  br i1 %v3_10004c68, label %dec_label_pc_10004c78, label %dec_label_pc_10004c70

dec_label_pc_10004c70:                            ; preds = %dec_label_pc_10004c44
  %v3_10004c70 = load i32, i32* @global_var_1001c668.40, align 4
  %v0_10004c74 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004c74 = trunc i32 %v0_10004c74 to i8
  %v4_10004c74 = add i32 %v3_10004c70, %v3_10004c64
  %v5_10004c74 = inttoptr i32 %v4_10004c74 to i8*
  store i8 %v3_10004c74, i8* %v5_10004c74, align 1
  br label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c44, %dec_label_pc_10004c70
  %v0_10004c78 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004c78 = load i32, i32* @r31, align 4
  %v2_10004c78 = add i32 %v1_10004c78, %v0_10004c78
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v0_10004c80 = load i32, i32* @r25, align 4
  %v2_10004c80 = sub i32 %v2_10004c78, %v0_10004c80
  store i32 %v2_10004c80, i32* @r4, align 4
  %v0_10004c84 = load i32, i32* @r30, align 4
  store i32 %v0_10004c84, i32* %r29.global-to-local, align 4
  store i32 268455052, i32* @lr, align 4
  %v0_10004c88 = call i32 @function_10008e00()
  store i32 400, i32* @r28, align 4
  store i32 0, i32* @r26, align 4
  %v2_10004c94 = ptrtoint i32* %stack_var_-8320 to i32
  store i32 %v2_10004c94, i32* @r23, align 4
  %v2_10004c98 = ptrtoint i32* %stack_var_-8384 to i32
  store i32 %v2_10004c98, i32* @r22, align 4
  %v2_10004c9c = ptrtoint i32* %stack_var_-4160 to i32
  %v2_10004f30 = bitcast i32* %stack_var_-8320 to i8*
  %v2_10004f74 = bitcast i32* %stack_var_-8384 to i8*
  %v2_10004e74 = ptrtoint i32* %stack_var_-8448 to i32
  %v2_10004e40 = ptrtoint i32* %stack_var_-8464 to i32
  %v2_10004e0c = ptrtoint i32* %stack_var_-8416 to i32
  %v2_10004dd8 = ptrtoint i32* %stack_var_-8432 to i32
  %v2_10004da4 = ptrtoint i32* %stack_var_-8480 to i32
  %v2_10004d60 = ptrtoint i32* %stack_var_-8496 to i32
  br label %dec_label_pc_10004ca0

dec_label_pc_10004ca0:                            ; preds = %dec_label_pc_10004ef4, %dec_label_pc_10004c78
  store i32 268455080, i32* @lr, align 4
  %v1_10004ca4 = call i32 @function_100087e0(i32 13)
  %v3_10004cb0 = call i32 @function_1000872c(i32 13, i32* null)
  store i32 268455096, i32* @lr, align 4
  %v1_10004cb4 = call i32 @function_10009a64(i32 %v3_10004cb0)
  store i32 %v1_10004cb4, i32* @r27, align 4
  %v3_10004cb8 = icmp eq i32 %v1_10004cb4, 0
  br i1 %v3_10004cb8, label %dec_label_pc_10004b48, label %dec_label_pc_10004cc0

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004ca0
  store i32 ptrtoint ([3 x i8]* @global_var_10004cc8.46 to i32), i32* @lr, align 4
  %v1_10004cc4 = call i32 @function_10008754(i32 13)
  store i32 268455124, i32* @lr, align 4
  %v1_10004cd0 = call i32 @function_100044e8(i32 48101)
  store i32 268455132, i32* @lr, align 4
  %v1_10004cd8 = call i32 @function_100044e8(i32 1991)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ce4.47 to i32), i32* @lr, align 4
  %v1_10004ce0 = call i32 @function_100044e8(i32 1338)
  store i32 268455148, i32* @lr, align 4
  %v1_10004ce8 = call i32 @function_100044e8(i32 80)
  store i32 268455156, i32* @lr, align 4
  %v1_10004cf0 = call i32 @function_100044e8(i32 443)
  store i32 268455164, i32* @lr, align 4
  %v1_10004cf8 = call i32 @function_100044e8(i32 4321)
  store i32 268455172, i32* @lr, align 4
  %v1_10004d00 = call i32 @function_100044e8(i32 6667)
  store i32 ptrtoint ([3 x i8]* @global_var_10004d0c.48 to i32), i32* @lr, align 4
  %v1_10004d08 = call i32 @function_100044e8(i32 6697)
  store i32 ptrtoint (i32* @global_var_10004d14.49 to i32), i32* @lr, align 4
  %v1_10004d10 = call i32 @function_100044e8(i32 22)
  store i32 268455252, i32* @lr, align 4
  %v3_10004d50 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  %v3_10004d54 = icmp eq i32 %v3_10004d50, -1
  store i32 %v3_10004d50, i32* @r31, align 4
  br i1 %v3_10004d54, label %dec_label_pc_10004d78, label %dec_label_pc_10004d60

dec_label_pc_10004d60:                            ; preds = %dec_label_pc_10004cc0
  store i32 268455276, i32* @lr, align 4
  %v3_10004d68 = call i32 @function_1000a000(i32 %v2_10004d60, i32 16, i32 16)
  %v0_10004d6c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d78.50 to i32), i32* @lr, align 4
  %v2_10004d74 = call i32 @function_1000a0d8(i32 %v0_10004d6c, i32 1)
  br label %dec_label_pc_10004d78

dec_label_pc_10004d78:                            ; preds = %dec_label_pc_10004cc0, %dec_label_pc_10004d60
  store i32 268455296, i32* @lr, align 4
  %v1_10004d7c = call i32 @function_100044e8(i32 23)
  %v3_10004d80 = icmp eq i32 %v1_10004d7c, 0
  br i1 %v3_10004d80, label %dec_label_pc_100051fc, label %dec_label_pc_10004d88

dec_label_pc_10004d88:                            ; preds = %dec_label_pc_1000521c, %dec_label_pc_1000520c, %dec_label_pc_100051fc, %dec_label_pc_10004d78, %dec_label_pc_1000522c
  store i32 268455320, i32* @lr, align 4
  %v3_10004d94 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  %v3_10004d98 = icmp eq i32 %v3_10004d94, -1
  store i32 %v3_10004d94, i32* @r31, align 4
  br i1 %v3_10004d98, label %dec_label_pc_10004dbc, label %dec_label_pc_10004da4

dec_label_pc_10004da4:                            ; preds = %dec_label_pc_10004d88
  store i32 268455344, i32* @lr, align 4
  %v3_10004dac = call i32 @function_1000a000(i32 %v2_10004da4, i32 16, i32 16)
  %v0_10004db0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004dbc.51 to i32), i32* @lr, align 4
  %v2_10004db8 = call i32 @function_1000a0d8(i32 %v0_10004db0, i32 1)
  br label %dec_label_pc_10004dbc

dec_label_pc_10004dbc:                            ; preds = %dec_label_pc_10004d88, %dec_label_pc_10004da4
  store i32 268455372, i32* @lr, align 4
  %v3_10004dc8 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  %v3_10004dcc = icmp eq i32 %v3_10004dc8, -1
  store i32 %v3_10004dc8, i32* @r31, align 4
  br i1 %v3_10004dcc, label %dec_label_pc_10004df0, label %dec_label_pc_10004dd8

dec_label_pc_10004dd8:                            ; preds = %dec_label_pc_10004dbc
  store i32 268455396, i32* @lr, align 4
  %v3_10004de0 = call i32 @function_1000a000(i32 %v2_10004dd8, i32 16, i32 16)
  %v0_10004de4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004df0.52 to i32), i32* @lr, align 4
  %v2_10004dec = call i32 @function_1000a0d8(i32 %v0_10004de4, i32 1)
  br label %dec_label_pc_10004df0

dec_label_pc_10004df0:                            ; preds = %dec_label_pc_10004dbc, %dec_label_pc_10004dd8
  store i32 268455424, i32* @lr, align 4
  %v3_10004dfc = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  %v3_10004e00 = icmp eq i32 %v3_10004dfc, -1
  store i32 %v3_10004dfc, i32* @r31, align 4
  br i1 %v3_10004e00, label %dec_label_pc_10004e24, label %dec_label_pc_10004e0c

dec_label_pc_10004e0c:                            ; preds = %dec_label_pc_10004df0
  store i32 268455448, i32* @lr, align 4
  %v3_10004e14 = call i32 @function_1000a000(i32 %v2_10004e0c, i32 16, i32 16)
  %v0_10004e18 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e24.53 to i32), i32* @lr, align 4
  %v2_10004e20 = call i32 @function_1000a0d8(i32 %v0_10004e18, i32 1)
  br label %dec_label_pc_10004e24

dec_label_pc_10004e24:                            ; preds = %dec_label_pc_10004df0, %dec_label_pc_10004e0c
  store i32 268455476, i32* @lr, align 4
  %v3_10004e30 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  %v3_10004e34 = icmp eq i32 %v3_10004e30, -1
  store i32 %v3_10004e30, i32* @r31, align 4
  br i1 %v3_10004e34, label %dec_label_pc_10004e58, label %dec_label_pc_10004e40

dec_label_pc_10004e40:                            ; preds = %dec_label_pc_10004e24
  store i32 268455500, i32* @lr, align 4
  %v3_10004e48 = call i32 @function_1000a000(i32 %v2_10004e40, i32 16, i32 16)
  %v0_10004e4c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e58.54 to i32), i32* @lr, align 4
  %v2_10004e54 = call i32 @function_1000a0d8(i32 %v0_10004e4c, i32 1)
  br label %dec_label_pc_10004e58

dec_label_pc_10004e58:                            ; preds = %dec_label_pc_10004e24, %dec_label_pc_10004e40
  store i32 268455528, i32* @lr, align 4
  %v3_10004e64 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  %v3_10004e68 = icmp eq i32 %v3_10004e64, -1
  store i32 %v3_10004e64, i32* @r31, align 4
  br i1 %v3_10004e68, label %dec_label_pc_10004e8c.preheader, label %dec_label_pc_10004e74

dec_label_pc_10004e74:                            ; preds = %dec_label_pc_10004e58
  store i32 268455552, i32* @lr, align 4
  %v3_10004e7c = call i32 @function_1000a000(i32 %v2_10004e74, i32 16, i32 16)
  %v0_10004e80 = load i32, i32* @r31, align 4
  store i32 268455564, i32* @lr, align 4
  %v2_10004e88 = call i32 @function_1000a0d8(i32 %v0_10004e80, i32 1)
  br label %dec_label_pc_10004e8c.preheader

dec_label_pc_10004e8c.preheader:                  ; preds = %dec_label_pc_10004e74, %dec_label_pc_10004e58
  %v0_10004e8c8 = load i32, i32* @r27, align 4
  store i32 268455572, i32* @lr, align 4
  %v1_10004e909 = inttoptr i32 %v0_10004e8c8 to i32*
  %v2_10004e9010 = call i32 @function_10009b74(i32* %v1_10004e909)
  %v3_10004e9413 = icmp eq i32 %v2_10004e9010, 0
  br i1 %v3_10004e9413, label %dec_label_pc_10004ef4, label %dec_label_pc_10004e9c.preheader

dec_label_pc_10004e9c.preheader:                  ; preds = %dec_label_pc_10004e8c.preheader, %dec_label_pc_10004e8c.backedge
  %v0_10004e9c15 = phi i32 [ %v2_10004e90, %dec_label_pc_10004e8c.backedge ], [ %v2_10004e9010, %dec_label_pc_10004e8c.preheader ]
  br label %dec_label_pc_10004e9c

dec_label_pc_10004e9c:                            ; preds = %dec_label_pc_10004e9c.preheader, %dec_label_pc_10004ee0
  %v0_10004eb0 = phi i32 [ %v0_10004e9c15, %dec_label_pc_10004e9c.preheader ], [ %v2_10004ee8, %dec_label_pc_10004ee0 ]
  %v1_10004e9c = add i32 %v0_10004eb0, 11
  %v2_10004e9c = inttoptr i32 %v1_10004e9c to i8*
  %v3_10004e9c = load i8, i8* %v2_10004e9c, align 1
  %v4_10004e9c = zext i8 %v3_10004e9c to i32
  %v1_10004ea0 = add nuw nsw i32 %v4_10004e9c, 208
  %v1_10004ea4 = urem i32 %v1_10004ea0, 256
  %v2_10004ea8 = icmp ugt i32 %v1_10004ea4, 9
  br i1 %v2_10004ea8, label %dec_label_pc_10004e8c.backedge, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e9c
  store i32 268455616, i32* @lr, align 4
  %v3_10004ebc = call i32 @function_1000aae0(i8* %v2_10004e9c, i32 %v1_10004ea4)
  %v0_10004ec0 = load i32, i32* @r28, align 4
  %v2_10004ec0 = icmp slt i32 %v0_10004ec0, %v3_10004ebc
  store i32 %v3_10004ebc, i32* %r30.global-to-local, align 4
  br i1 %v2_10004ec0, label %dec_label_pc_10004f00, label %dec_label_pc_10004ecc

dec_label_pc_10004ecc:                            ; preds = %dec_label_pc_10004eb0
  store i32 268455636, i32* @lr, align 4
  %v0_10004ed0 = call i32 @function_100098e8()
  %v0_10004ed4 = load i32, i32* @r29, align 4
  %v2_10004ed4 = sub i32 %v0_10004ed0, %v0_10004ed4
  %tmp65 = icmp slt i32 %v2_10004ed4, 601
  br i1 %tmp65, label %dec_label_pc_1000505c, label %dec_label_pc_10004ee0

dec_label_pc_10004ee0:                            ; preds = %dec_label_pc_10004ecc
  %v0_10004ee0 = load i32, i32* @r27, align 4
  store i32 400, i32* @r28, align 4
  store i32 268455660, i32* @lr, align 4
  %v1_10004ee8 = inttoptr i32 %v0_10004ee0 to i32*
  %v2_10004ee8 = call i32 @function_10009b74(i32* %v1_10004ee8)
  %v3_10004eec = icmp eq i32 %v2_10004ee8, 0
  br i1 %v3_10004eec, label %dec_label_pc_10004ef4, label %dec_label_pc_10004e9c

dec_label_pc_10004ef4:                            ; preds = %dec_label_pc_10004e8c.backedge, %dec_label_pc_10004ee0, %dec_label_pc_10004e8c.preheader
  %v0_10004ef4 = load i32, i32* @r27, align 4
  store i32 268455676, i32* @lr, align 4
  %v1_10004ef8 = inttoptr i32 %v0_10004ef4 to i32*
  %v2_10004ef8 = call i32 @function_100099c0(i32* %v1_10004ef8)
  br label %dec_label_pc_10004ca0

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004eb0
  store i32 268455688, i32* @lr, align 4
  %v0_10004f04 = call i32 @function_100098e8()
  store i32 %v0_10004f04, i32* @r24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004f14.55 to i32), i32* @lr, align 4
  %v1_10004f10 = call i32 @function_100087e0(i32 13)
  store i32 268455708, i32* @lr, align 4
  %v1_10004f18 = call i32 @function_100087e0(i32 14)
  %v3_10004f24 = call i32 @function_1000872c(i32 13, i32* null)
  store i32 %v2_10004c94, i32* @r3, align 4
  %v3_10004f30 = call i32 @function_10008d80(i8* %v2_10004f30, i32 %v3_10004f24)
  %v0_10004f34 = load i32, i32* @r31, align 4
  %v0_10004f38 = load i32, i32* @r23, align 4
  %v2_10004f38 = add i32 %v0_10004f38, %v3_10004f30
  store i32 %v2_10004f38, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f38, i32* @r3, align 4
  %v2_10004f40 = inttoptr i32 %v2_10004f38 to i8*
  %v3_10004f40 = call i32 @function_10008d80(i8* %v2_10004f40, i32 %v0_10004f34)
  store i32 %v3_10004f40, i32* %r29.global-to-local, align 4
  %v3_10004f50 = call i32 @function_1000872c(i32 14, i32* null)
  %v2_10004f58 = add i32 %v3_10004f40, %v2_10004f38
  store i32 %v2_10004f58, i32* @r3, align 4
  %v2_10004f5c = inttoptr i32 %v2_10004f58 to i8*
  %v3_10004f5c = call i32 @function_10008d80(i8* %v2_10004f5c, i32 %v3_10004f50)
  %v3_10004f68 = call i32 @function_1000872c(i32 13, i32* null)
  store i32 %v2_10004c98, i32* @r3, align 4
  %v3_10004f74 = call i32 @function_10008d80(i8* %v2_10004f74, i32 %v3_10004f68)
  %v0_10004f78 = load i32, i32* @r31, align 4
  %v0_10004f7c = load i32, i32* @r22, align 4
  %v2_10004f7c = add i32 %v0_10004f7c, %v3_10004f74
  store i32 %v2_10004f7c, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f7c, i32* @r3, align 4
  %v2_10004f84 = inttoptr i32 %v2_10004f7c to i8*
  %v3_10004f84 = call i32 @function_10008d80(i8* %v2_10004f84, i32 %v0_10004f78)
  store i32 %v3_10004f84, i32* %r29.global-to-local, align 4
  %v3_10004f94 = call i32 @function_1000872c(i32 29, i32* null)
  %v2_10004f9c = add i32 %v3_10004f84, %v2_10004f7c
  store i32 %v2_10004f9c, i32* @r3, align 4
  %v2_10004fa0 = inttoptr i32 %v2_10004f9c to i8*
  %v3_10004fa0 = call i32 @function_10008d80(i8* %v2_10004fa0, i32 %v3_10004f94)
  store i32 ptrtoint ([3 x i8]* @global_var_10004fac.57 to i32), i32* @lr, align 4
  %v1_10004fa8 = call i32 @function_10008754(i32 13)
  store i32 268455860, i32* @lr, align 4
  %v1_10004fb0 = call i32 @function_10008754(i32 14)
  store i32 4095, i32* @r5, align 4
  store i32 268455876, i32* @lr, align 4
  %v3_10004fc0 = call i32 @function_10009798(i32 %v2_10004c94, i32 %v2_10004bcc, i32 4095)
  %v3_10004fc4 = icmp eq i32 %v3_10004fc0, -1
  store i32 %v3_10004fc0, i32* %r29.global-to-local, align 4
  br i1 %v3_10004fc4, label %dec_label_pc_100050b0, label %dec_label_pc_10004fd0

dec_label_pc_10004fd0:                            ; preds = %dec_label_pc_10004f00
  %v0_10004fd0 = load i32, i32* @r1, align 4
  %v2_10004fd0 = add i32 %v0_10004fd0, %v3_10004fc0
  %v3_10004fd8 = add i32 %v2_10004fd0, 256
  %v4_10004fd8 = inttoptr i32 %v3_10004fd8 to i8*
  store i8 0, i8* %v4_10004fd8, align 1
  store i32 268455908, i32* @lr, align 4
  %v1_10004fe0 = call i32 @function_100087e0(i32 30)
  %v3_10004fec = call i32 @function_1000872c(i32 30, i32* null)
  %v0_10004ff0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004ff0 = add i32 %v0_10004ff0, -1
  %v4_10004ffc = call i32 @function_10009108(i8* %v2_10004be8, i32 %v1_10004ff0, i32 %v3_10004fec)
  %v3_10005000 = icmp eq i32 %v4_10004ffc, -1
  br i1 %v3_10005000, label %dec_label_pc_1000501c, label %dec_label_pc_10005008

dec_label_pc_10005008:                            ; preds = %dec_label_pc_10004fd0
  store i32 268455952, i32* @lr, align 4
  %v1_1000500c = call i32 @function_10009930(i32 %v2_10004bcc)
  %v0_10005010 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000501c.58 to i32), i32* @lr, align 4
  %v2_10005018 = call i32 @function_10009638(i32 %v0_10005010, i32 9)
  br label %dec_label_pc_1000501c

dec_label_pc_1000501c:                            ; preds = %dec_label_pc_10004fd0, %dec_label_pc_10005008
  store i32 ptrtoint (i32* @global_var_10005024.59 to i32), i32* @lr, align 4
  %v1_10005020 = call i32 @function_10008754(i32 30)
  store i32 268455976, i32* @lr, align 4
  %v0_10005024 = call i32 @function_100095a8()
  %v0_10005028 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005028 = icmp eq i32 %v0_10005028, %v0_10005024
  br i1 %v4_10005028, label %dec_label_pc_10005050, label %dec_label_pc_10005030

dec_label_pc_10005030:                            ; preds = %dec_label_pc_1000501c
  store i32 268455988, i32* @lr, align 4
  %v0_10005030 = call i32 @function_100095f0()
  %v0_10005034 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005034 = icmp eq i32 %v0_10005034, %v0_10005030
  br i1 %v4_10005034, label %dec_label_pc_10005050, label %dec_label_pc_1000503c

dec_label_pc_1000503c:                            ; preds = %dec_label_pc_10005030
  %v3_1000503c = load i32, i32* @global_var_1001c668.40, align 4
  %v3_10005044 = call i32 @function_100091b4(i8* %v2_10004be8, i32 %v3_1000503c)
  %v3_10005048 = icmp eq i32 %v3_10005044, 0
  br i1 %v3_10005048, label %dec_label_pc_1000508c, label %dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge

dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge: ; preds = %dec_label_pc_1000503c
  %v0_10005050.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005050

dec_label_pc_10005050:                            ; preds = %dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge, %dec_label_pc_10005030, %dec_label_pc_1000501c
  %v0_10005050 = phi i32 [ %v0_10005050.pre, %dec_label_pc_1000503c.dec_label_pc_10005050_crit_edge ], [ %v0_10005030, %dec_label_pc_10005030 ], [ %v0_10005024, %dec_label_pc_1000501c ]
  store i32 %v0_10005050, i32* @r28, align 4
  %v0_10005054 = load i32, i32* @r24, align 4
  store i32 %v0_10005054, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e8c.backedge

dec_label_pc_10004e8c.backedge:                   ; preds = %dec_label_pc_10004e9c, %dec_label_pc_10005050, %dec_label_pc_10005080, %dec_label_pc_100051c4, %dec_label_pc_1000505c, %dec_label_pc_10005064
  %v0_10004e8c = load i32, i32* @r27, align 4
  store i32 268455572, i32* @lr, align 4
  %v1_10004e90 = inttoptr i32 %v0_10004e8c to i32*
  %v2_10004e90 = call i32 @function_10009b74(i32* %v1_10004e90)
  %v3_10004e94 = icmp eq i32 %v2_10004e90, 0
  br i1 %v3_10004e94, label %dec_label_pc_10004ef4, label %dec_label_pc_10004e9c.preheader

dec_label_pc_1000505c:                            ; preds = %dec_label_pc_10004ecc
  %v0_1000505c = load i32, i32* %r30.global-to-local, align 4
  %tmp66 = icmp slt i32 %v0_1000505c, 401
  br i1 %tmp66, label %dec_label_pc_10004e8c.backedge, label %dec_label_pc_10005064

dec_label_pc_10005064:                            ; preds = %dec_label_pc_1000505c
  %v0_1000506c = load i32, i32* @r26, align 4
  %v1_10005070 = urem i32 %v0_1000506c, 10
  %v4_10005078 = icmp eq i32 %v1_10005070, 0
  br i1 %v4_10005078, label %dec_label_pc_10005080, label %dec_label_pc_10004e8c.backedge

dec_label_pc_10005080:                            ; preds = %dec_label_pc_10005064
  store i32 268456072, i32* @lr, align 4
  %v1_10005084 = call i32 @function_1000ad2c(i32 1)
  br label %dec_label_pc_10004e8c.backedge

dec_label_pc_1000508c:                            ; preds = %dec_label_pc_1000503c
  store i32 268456092, i32* @lr, align 4
  %v2_10005098 = call i32 @function_10009680(i32 %v2_10004bcc, i32 0)
  %v3_1000509c = icmp eq i32 %v2_10005098, -1
  store i32 %v2_10005098, i32* @r31, align 4
  br i1 %v3_1000509c, label %dec_label_pc_10005254, label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_1000508c, %dec_label_pc_10005254
  store i32 268456112, i32* @lr, align 4
  %v0_100050ac = call i32 @function_10009518()
  br label %dec_label_pc_100050b0

dec_label_pc_100050b0:                            ; preds = %dec_label_pc_10004f00, %dec_label_pc_100050a8
  store i32 268456128, i32* @lr, align 4
  %v2_100050bc = call i32 @function_10009680(i32 %v2_10004c94, i32 0)
  %v3_100050c0 = icmp eq i32 %v2_100050bc, -1
  store i32 %v2_100050bc, i32* %r28.global-to-local, align 4
  br i1 %v3_100050c0, label %dec_label_pc_100051c4, label %dec_label_pc_100050cc

dec_label_pc_100050cc:                            ; preds = %dec_label_pc_100050b0
  store i32 ptrtoint ([3 x i8]* @global_var_100050d4.60 to i32), i32* @lr, align 4
  %v1_100050d0 = call i32 @function_100087e0(i32 18)
  store i32 268456156, i32* @lr, align 4
  %v1_100050d8 = call i32 @function_100087e0(i32 19)
  %v3_100050e4 = call i32 @function_1000872c(i32 18, i32* nonnull %stack_var_-8504)
  store i32 %v3_100050e4, i32* @r31, align 4
  %v3_100050f4 = call i32 @function_1000872c(i32 19, i32* nonnull %stack_var_-8500)
  store i32 %v3_100050f4, i32* %r29.global-to-local, align 4
  %v0_100050fc70 = load i32, i32* %r28.global-to-local, align 4
  store i32 268456204, i32* @lr, align 4
  %v3_1000510871 = call i32 @function_10009750(i32 %v0_100050fc70, i32 %v2_10004c9c, i32 4096)
  %tmp6773 = icmp slt i32 %v3_1000510871, 1
  br i1 %tmp6773, label %dec_label_pc_10005238, label %dec_label_pc_10005114

dec_label_pc_10005114:                            ; preds = %dec_label_pc_100050cc, %dec_label_pc_100050fc.backedge
  %v3_1000510874 = phi i32 [ %v3_10005108, %dec_label_pc_100050fc.backedge ], [ %v3_1000510871, %dec_label_pc_100050cc ]
  %v3_1000510c75.in = phi i32 [ %v3_10005108, %dec_label_pc_100050fc.backedge ], [ %v3_1000510871, %dec_label_pc_100050cc ]
  %v3_1000510c75 = icmp eq i32 %v3_1000510c75.in, 0
  %v3_10005114 = load i32, i32* %stack_var_-8504, align 4
  %v2_10005118 = icmp slt i32 %v3_1000510874, %v3_10005114
  br i1 %v2_10005118, label %dec_label_pc_10005158, label %dec_label_pc_10005120

dec_label_pc_10005120:                            ; preds = %dec_label_pc_10005114
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10005134.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005134

dec_label_pc_10005134:                            ; preds = %dec_label_pc_10005120, %dec_label_pc_10005150
  %v0_10005154 = phi i32 [ %v3_1000510874, %dec_label_pc_10005120 ], [ %v1_10005154, %dec_label_pc_10005150 ]
  %v0_10005150 = phi i32 [ %v2_10004c9c, %dec_label_pc_10005120 ], [ %v1_10005150, %dec_label_pc_10005150 ]
  %v1_10005134 = phi i32 [ 0, %dec_label_pc_10005120 ], [ %v1_1000513419, %dec_label_pc_10005150 ]
  %v2_10005134 = add i32 %v1_10005134, %v0_10005134.pre
  %v3_10005134 = inttoptr i32 %v2_10005134 to i8*
  %v4_10005134 = load i8, i8* %v3_10005134, align 1
  %v1_10005138 = add i32 %v1_10005134, 1
  store i32 %v1_10005138, i32* %r11.global-to-local, align 4
  %v1_1000513c = inttoptr i32 %v0_10005150 to i8*
  %v2_1000513c = load i8, i8* %v1_1000513c, align 1
  %v4_10005144 = icmp eq i8 %v2_1000513c, %v4_10005134
  br i1 %v4_10005144, label %dec_label_pc_1000519c, label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_10005134
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005150

dec_label_pc_10005150:                            ; preds = %dec_label_pc_1000519c, %dec_label_pc_1000514c
  %v1_1000513419 = phi i32 [ %v1_10005138, %dec_label_pc_1000519c ], [ 0, %dec_label_pc_1000514c ]
  %v1_10005150 = add i32 %v0_10005150, 1
  %v1_10005154 = add i32 %v0_10005154, -1
  %v2_10005154 = icmp eq i32 %v1_10005154, 0
  br i1 %v2_10005154, label %dec_label_pc_10005158, label %dec_label_pc_10005134

dec_label_pc_10005158:                            ; preds = %dec_label_pc_10005150, %dec_label_pc_10005114
  %v3_10005158 = load i32, i32* %stack_var_-8500, align 4
  %v2_1000515c = icmp slt i32 %v3_1000510874, %v3_10005158
  br i1 %v2_1000515c, label %dec_label_pc_100050fc.backedge, label %dec_label_pc_10005164

dec_label_pc_10005164:                            ; preds = %dec_label_pc_10005158
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000510c75, label %dec_label_pc_100050fc.backedge, label %dec_label_pc_10005178.lr.ph

dec_label_pc_100050fc.backedge:                   ; preds = %dec_label_pc_10005174.backedge, %dec_label_pc_10005164, %dec_label_pc_10005158
  %v0_100050fc = load i32, i32* %r28.global-to-local, align 4
  store i32 268456204, i32* @lr, align 4
  %v3_10005108 = call i32 @function_10009750(i32 %v0_100050fc, i32 %v2_10004c9c, i32 4096)
  %tmp67 = icmp slt i32 %v3_10005108, 1
  br i1 %tmp67, label %dec_label_pc_10005238, label %dec_label_pc_10005114

dec_label_pc_10005178.lr.ph:                      ; preds = %dec_label_pc_10005164
  %v0_10005178.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005178

dec_label_pc_10005178:                            ; preds = %dec_label_pc_10005178.lr.ph, %dec_label_pc_10005174.backedge
  %v0_10005174 = phi i32 [ %v3_1000510874, %dec_label_pc_10005178.lr.ph ], [ %v1_10005174, %dec_label_pc_10005174.backedge ]
  %storemerge.in = phi i32 [ %v2_10004c9c, %dec_label_pc_10005178.lr.ph ], [ %storemerge, %dec_label_pc_10005174.backedge ]
  %v1_10005178 = phi i32 [ 0, %dec_label_pc_10005178.lr.ph ], [ %v1_1000517825, %dec_label_pc_10005174.backedge ]
  %v2_10005178 = add i32 %v1_10005178, %v0_10005178.pre
  %v3_10005178 = inttoptr i32 %v2_10005178 to i8*
  %v4_10005178 = load i8, i8* %v3_10005178, align 1
  %v1_1000517c = add i32 %v1_10005178, 1
  store i32 %v1_1000517c, i32* %r11.global-to-local, align 4
  %v1_10005180 = inttoptr i32 %storemerge.in to i8*
  %v2_10005180 = load i8, i8* %v1_10005180, align 1
  %v4_10005188 = icmp eq i8 %v2_10005180, %v4_10005178
  br i1 %v4_10005188, label %dec_label_pc_100051f0, label %dec_label_pc_10005190

dec_label_pc_10005190:                            ; preds = %dec_label_pc_10005178
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005174.backedge

dec_label_pc_10005174.backedge:                   ; preds = %dec_label_pc_100051f0, %dec_label_pc_10005190
  %v1_1000517825 = phi i32 [ 0, %dec_label_pc_10005190 ], [ %v1_1000517c, %dec_label_pc_100051f0 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_10005174 = add i32 %v0_10005174, -1
  %v2_10005174 = icmp eq i32 %v1_10005174, 0
  br i1 %v2_10005174, label %dec_label_pc_100050fc.backedge, label %dec_label_pc_10005178

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_10005134
  %v4_10005140 = icmp eq i32 %v3_10005114, %v1_10005138
  br i1 %v4_10005140, label %dec_label_pc_100051a0, label %dec_label_pc_10005150

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_1000519c, %dec_label_pc_100051f0
  store i32 ptrtoint ([3 x i8]* @global_var_100051a8.61 to i32), i32* @lr, align 4
  %v1_100051a4 = call i32 @function_10008754(i32 18)
  store i32 268456368, i32* @lr, align 4
  %v1_100051ac = call i32 @function_10008754(i32 19)
  store i32 268456376, i32* @lr, align 4
  %v0_100051b4 = call i32 @function_10009518()
  %v0_100051b8 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456388, i32* @lr, align 4
  %v2_100051c0 = call i32 @function_10009638(i32 %v0_100051b8, i32 9)
  br label %dec_label_pc_100051c4

dec_label_pc_100051c4:                            ; preds = %dec_label_pc_100050b0, %dec_label_pc_10005238, %dec_label_pc_100051a0
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004c94, i32* @r3, align 4
  store i32 268456400, i32* @lr, align 4
  %v0_100051cc = call i32 @function_10008e00()
  store i32 %v2_10004c98, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_100051d8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100051d8, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100051e0.62 to i32), i32* @lr, align 4
  %v0_100051dc = call i32 @function_10008e00()
  store i32 268456424, i32* @lr, align 4
  %v1_100051e4 = call i32 @function_1000ad2c(i32 1)
  %v0_100051e8 = load i32, i32* @r24, align 4
  store i32 %v0_100051e8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004e8c.backedge

dec_label_pc_100051f0:                            ; preds = %dec_label_pc_10005178
  %v4_10005184 = icmp eq i32 %v3_10005158, %v1_1000517c
  br i1 %v4_10005184, label %dec_label_pc_100051a0, label %dec_label_pc_10005174.backedge

dec_label_pc_100051fc:                            ; preds = %dec_label_pc_10004d78
  store i32 268456452, i32* @lr, align 4
  %v1_10005200 = call i32 @function_100044e8(i32 53413)
  %v3_10005204 = icmp eq i32 %v1_10005200, 0
  br i1 %v3_10005204, label %dec_label_pc_1000520c, label %dec_label_pc_10004d88

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_100051fc
  store i32 268456468, i32* @lr, align 4
  %v1_10005210 = call i32 @function_100044e8(i32 80)
  %v3_10005214 = icmp eq i32 %v1_10005210, 0
  br i1 %v3_10005214, label %dec_label_pc_1000521c, label %dec_label_pc_10004d88

dec_label_pc_1000521c:                            ; preds = %dec_label_pc_1000520c
  store i32 268456484, i32* @lr, align 4
  %v1_10005220 = call i32 @function_100044e8(i32 52869)
  %v3_10005224 = icmp eq i32 %v1_10005220, 0
  br i1 %v3_10005224, label %dec_label_pc_1000522c, label %dec_label_pc_10004d88

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_1000521c
  store i32 268456500, i32* @lr, align 4
  %v1_10005230 = call i32 @function_100044e8(i32 37215)
  br label %dec_label_pc_10004d88

dec_label_pc_10005238:                            ; preds = %dec_label_pc_100050fc.backedge, %dec_label_pc_100050cc
  store i32 ptrtoint ([3 x i8]* @global_var_10005240.63 to i32), i32* @lr, align 4
  %v1_1000523c = call i32 @function_10008754(i32 18)
  store i32 268456520, i32* @lr, align 4
  %v1_10005244 = call i32 @function_10008754(i32 19)
  store i32 268456528, i32* @lr, align 4
  %v0_1000524c = call i32 @function_10009518()
  br label %dec_label_pc_100051c4

dec_label_pc_10005254:                            ; preds = %dec_label_pc_1000508c
  %v0_10005254 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456544, i32* @lr, align 4
  %v2_1000525c = call i32 @function_10009638(i32 %v0_10005254, i32 9)
  br label %dec_label_pc_100050a8

; uselistorder directives
  uselistorder i32 %v1_10005174, { 1, 0 }
  uselistorder i32 %v1_1000517c, { 1, 0, 2 }
  uselistorder i32 %v1_10005178, { 1, 0 }
  uselistorder i32 %v3_10005108, { 2, 1, 0 }
  uselistorder i32 %v1_10005154, { 1, 0 }
  uselistorder i32 %v1_10005134, { 1, 0 }
  uselistorder i32 %v3_1000510874, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10004e90, { 1, 0 }
  uselistorder i32 %v2_10004ee8, { 1, 0 }
  uselistorder i32 %v1_10004ea4, { 1, 0 }
  uselistorder i32 %v2_10004c9c, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10004c10, { 1, 0, 2 }
  uselistorder i32 %v2_10004bec, { 1, 0, 2 }
  uselistorder i32 %v2_10004bcc, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b34, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8504, { 1, 0 }
  uselistorder i32* %stack_var_-8500, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 7 }
  uselistorder i32 268456204, { 1, 0 }
  uselistorder i32 (i32*)* @function_10009b74, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455572, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a0d8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a000, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_100044e8, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10009a64, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009798, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100051c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100051a0, { 1, 0 }
  uselistorder label %dec_label_pc_10005178, { 1, 0 }
  uselistorder label %dec_label_pc_10005134, { 1, 0 }
  uselistorder label %dec_label_pc_10005114, { 1, 0 }
  uselistorder label %dec_label_pc_100050b0, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
  uselistorder label %dec_label_pc_10004e8c.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_1000501c, { 1, 0 }
  uselistorder label %dec_label_pc_10004e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10004e9c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004e58, { 1, 0 }
  uselistorder label %dec_label_pc_10004e24, { 1, 0 }
  uselistorder label %dec_label_pc_10004df0, { 1, 0 }
  uselistorder label %dec_label_pc_10004dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10004d88, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10004d78, { 1, 0 }
  uselistorder label %dec_label_pc_10004c78, { 1, 0 }
}

define i32 @function_10005264() local_unnamed_addr {
dec_label_pc_10005264:
  store i32 268456568, i32* @global_var_1001c640.64, align 4
  %v0_10005274 = load i32, i32* @r3, align 4
  ret i32 %v0_10005274
}

define i32 @function_10005278() local_unnamed_addr {
dec_label_pc_10005278:
  store i32 268456596, i32* @lr, align 4
  %v1_10005290 = call i32 @function_100087e0(i32 1)
  store i32 268456612, i32* @lr, align 4
  %v2_100052a0 = call i32 @function_10009fcc(i32 ptrtoint ([15 x i8]* @global_var_1000bf18.66 to i32))
  store i32 %v2_100052a0, i32* @global_var_1001c73c.67, align 4
  %v3_100052b0 = call i32 @function_1000872c(i32 1, i32* null)
  %v4_100052b0 = inttoptr i32 %v3_100052b0 to i16*
  %v3_100052b4 = load i16, i16* %v4_100052b0, align 2
  store i16 %v3_100052b4, i16* bitcast (i32* @global_var_1001c73a.68 to i16*), align 4
  store i32 268456644, i32* @lr, align 4
  %v1_100052c0 = call i32 @function_10008754(i32 1)
  ret i32 %v1_100052c0

; uselistorder directives
  uselistorder i32 (i32)* @function_10009fcc, { 2, 1, 0 }
}

define i32 @function_100052d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100052d8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  %stack_var_-1592 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1604 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1596 = alloca i32, align 4
  %stack_var_-1608 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100052d8 = load i32, i32* @lr, align 4
  store i32 %v0_100052d8, i32* %r0.global-to-local, align 4
  %v0_100052e0 = load i32, i32* @r31, align 4
  store i32 268456684, i32* @lr, align 4
  %v0_100052e8 = call i32 @function_10009560()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100052e8, i32* @global_var_1001c670.69, align 4
  %tmp47 = icmp slt i32 %v0_100052e8, 1
  br i1 %tmp47, label %dec_label_pc_10005310, label %dec_label_pc_100052fc

dec_label_pc_100052fc:                            ; preds = %dec_label_pc_10005310, %dec_label_pc_100052d8
  store i32 %v0_100052d8, i32* %r0.global-to-local, align 4
  store i32 %v0_100052e0, i32* @r31, align 4
  ret i32 %v0_100052e8

dec_label_pc_10005310:                            ; preds = %dec_label_pc_100052d8
  %v3_10005310 = icmp eq i32 %v0_100052e8, -1
  br i1 %v3_10005310, label %dec_label_pc_100052fc, label %dec_label_pc_10005318

dec_label_pc_10005318:                            ; preds = %dec_label_pc_10005310
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005328.70 to i32), i32* @lr, align 4
  %v1_10005324 = call i32 @function_100087e0(i32 23)
  store i32 268456752, i32* @lr, align 4
  %v1_1000532c = call i32 @function_100087e0(i32 24)
  %v3_10005338 = call i32 @function_1000872c(i32 23, i32* null)
  store i32 268456776, i32* @lr, align 4
  %v2_10005344 = call i32 @function_10009680(i32 %v3_10005338, i32 2)
  %v3_10005348 = icmp eq i32 %v2_10005344, -1
  store i32 %v2_10005344, i32* @r31, align 4
  br i1 %v3_10005348, label %dec_label_pc_10005390, label %dec_label_pc_10005354

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005390, %dec_label_pc_10005318
  %v0_10005358 = phi i32 [ %v2_100053a4, %dec_label_pc_10005390 ], [ %v2_10005344, %dec_label_pc_10005318 ]
  %v2_10005360 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268456812, i32* @lr, align 4
  %v3_10005368 = call i32 @function_10009348(i32 %v0_10005358, i32 -2147199228, i32 %v2_10005360)
  br label %dec_label_pc_1000536c

dec_label_pc_1000536c:                            ; preds = %dec_label_pc_1000536c, %dec_label_pc_10005354
  %v0_10005370 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005384.71 to i32), i32* @lr, align 4
  %v3_10005380 = call i32 @function_10009348(i32 %v0_10005370, i32 -2147199227, i32 0)
  store i32 268456844, i32* @lr, align 4
  %v1_10005388 = call i32 @function_1000ad2c(i32 10)
  br label %dec_label_pc_1000536c

dec_label_pc_10005390:                            ; preds = %dec_label_pc_10005318
  %v3_10005398 = call i32 @function_1000872c(i32 24, i32* null)
  store i32 268456872, i32* @lr, align 4
  %v2_100053a4 = call i32 @function_10009680(i32 %v3_10005398, i32 2)
  %v3_100053a8 = icmp eq i32 %v2_100053a4, -1
  store i32 %v2_100053a4, i32* @r31, align 4
  br i1 %v3_100053a8, label %dec_label_pc_100053b4, label %dec_label_pc_10005354

dec_label_pc_100053b4:                            ; preds = %dec_label_pc_10005390
  store i32 ptrtoint ([3 x i8]* @global_var_100053bc.72 to i32), i32* @lr, align 4
  %v1_100053b8 = call i32 @function_10008754(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_100053c4.73 to i32), i32* @lr, align 4
  %v1_100053c0 = call i32 @function_10008754(i32 24)
  %v0_100053c8 = call i32 @function_1000aca8()
  %v0_100053d0 = load i32, i32* @lr, align 4
  %v0_100053d4 = load i32, i32* @r29, align 4
  %v2_100053d8 = ptrtoint i32* %stack_var_-1264 to i32
  %v0_100053dc = load i32, i32* @r28, align 4
  store i32 %v0_100053c8, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100053f0 = load i32, i32* %r17.global-to-local, align 4
  store i32 0, i32* %stack_var_-1596, align 4
  store i32 268566528, i32* %r17.global-to-local, align 4
  %v0_100053fc = load i32, i32* %r18.global-to-local, align 4
  %v2_10005400 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_10005400, i32* %r18.global-to-local, align 4
  %v0_10005404 = load i32, i32* %r19.global-to-local, align 4
  store i32 268566528, i32* %r19.global-to-local, align 4
  %v0_1000540c = load i32, i32* %r20.global-to-local, align 4
  store i32 268566528, i32* %r20.global-to-local, align 4
  %v0_10005414 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_1000541c = load i32, i32* %r14.global-to-local, align 4
  %v0_10005420 = load i32, i32* %r15.global-to-local, align 4
  %v0_10005424 = load i32, i32* %r16.global-to-local, align 4
  %v0_1000542c = load i32, i32* @r22, align 4
  %v0_10005430 = load i32, i32* @r23, align 4
  %v0_10005434 = load i32, i32* @r24, align 4
  %v0_10005438 = load i32, i32* @r25, align 4
  %v0_1000543c = load i32, i32* @r26, align 4
  %v0_10005440 = load i32, i32* @r27, align 4
  store i32 268457036, i32* @lr, align 4
  %v1_10005448 = call i32 @function_1000a2b4(i32 %v2_100053d8)
  store i32 %v2_100053d8, i32* @r3, align 4
  store i32 268457048, i32* @lr, align 4
  %v2_10005454 = call i32 @function_1000a268(i32 %v2_100053d8, i32 2)
  store i32 268457064, i32* @lr, align 4
  %v3_10005464 = call i32 @function_10009870(i32 0, i32 %v2_100053d8, i32 0)
  store i32 268457076, i32* @lr, align 4
  %v2_10005470 = call i32 @function_1000a2e0(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_10005484.74 to i32), i32* @lr, align 4
  %v2_10005480 = call i32 @function_1000a2e0(i32 5, i32 268456548)
  store i32 268457096, i32* @lr, align 4
  %v1_10005484 = call i32 @function_1000905c(i32 %v2_10005480)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001c73c.67, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001c73a.68 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_10005484, i32* @global_var_1001c660.16, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001c738.65 to i16*), align 4
  store i32 268457136, i32* @lr, align 4
  %v2_100054ac = call i32 @function_1000886c(i32 %v1_10005484, i32 -1334109607)
  store i32 268456568, i32* %r9.global-to-local, align 4
  store i32 268456568, i32* @global_var_1001c640.64, align 4
  store i32 268457152, i32* @lr, align 4
  %v2_100054bc = call i32 @function_10005b58(i32 %v2_100054ac, i32 268456568)
  store i32 %v2_10005400, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268457164, i32* @lr, align 4
  %v0_100054c8 = call i32 @function_10008e00()
  %v0_100054cc = load i32, i32* @r28, align 4
  %v3_100054cc = icmp eq i32 %v0_100054cc, 2
  br i1 %v3_100054cc, label %dec_label_pc_10005644, label %dec_label_pc_100054d4

dec_label_pc_100054d4:                            ; preds = %dec_label_pc_10005644, %dec_label_pc_100053b4, %dec_label_pc_10005654
  %v0_100054d4 = call i32 @function_10005b08()
  %v2_100054d8 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_100054d8, i32* @r27, align 4
  store i32 %v0_100054d4, i32* %r29.global-to-local, align 4
  %v0_100054e0 = load i32, i32* @r31, align 4
  %v1_100054e0 = inttoptr i32 %v0_100054e0 to i32*
  %v2_100054e0 = load i32, i32* %v1_100054e0, align 4
  %v2_100054e4 = ptrtoint i16* %stack_var_-1608 to i32
  store i32 %v2_100054e4, i32* @r25, align 4
  store i32 0, i32* @r26, align 4
  store i32 268457200, i32* @lr, align 4
  %v1_100054ec = inttoptr i32 %v2_100054e0 to i8*
  %v2_100054ec = call i32 @function_10008d58(i8* %v1_100054ec)
  store i32 %v2_100054ec, i32* %r28.global-to-local, align 4
  %v0_100054f4 = load i32, i32* @r31, align 4
  %v1_100054f4 = inttoptr i32 %v0_100054f4 to i32*
  %v2_100054f4 = load i32, i32* %v1_100054f4, align 4
  %v1_100054f8 = sub i32 20, %v2_100054ec
  store i32 %v1_100054f8, i32* @r28, align 4
  store i32 268457216, i32* @lr, align 4
  %v1_100054fc = inttoptr i32 %v2_100054f4 to i8*
  %v2_100054fc = call i32 @function_10008d58(i8* %v1_100054fc)
  %v0_10005500 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005500 = load i32, i32* @r28, align 4
  %v2_10005500 = urem i32 %v0_10005500, %v1_10005500
  %v2_10005504 = sub i32 %v0_10005500, %v2_10005500
  store i32 %v2_10005504, i32* %r0.global-to-local, align 4
  %v2_1000550c = add i32 %v2_10005500, %v2_100054fc
  %v0_10005518 = load i32, i32* @r25, align 4
  %v2_10005518 = add i32 %v0_10005518, %v2_1000550c
  store i32 %v2_10005518, i32* @r29, align 4
  store i32 268457248, i32* @lr, align 4
  %v2_1000551c = bitcast i32* %stack_var_-1584 to i8*
  %v3_1000551c = call i32 @function_10005bc8(i8* %v2_1000551c, i32 %v2_1000550c)
  %v0_10005520 = load i32, i32* @r31, align 4
  %v1_10005520 = inttoptr i32 %v0_10005520 to i32*
  %v2_10005520 = load i32, i32* %v1_10005520, align 4
  store i32 %v2_10005520, i32* @r3, align 4
  %v0_10005524 = load i32, i32* @r26, align 4
  %v1_10005524 = trunc i32 %v0_10005524 to i8
  %v2_10005524 = load i32, i32* @r29, align 4
  %v3_10005524 = add i32 %v2_10005524, 24
  %v4_10005524 = inttoptr i32 %v3_10005524 to i8*
  store i8 %v1_10005524, i8* %v4_10005524, align 1
  %v2_1000552c = inttoptr i32 %v2_10005520 to i8*
  %v3_1000552c = call i32 @function_10008d80(i8* %v2_1000552c, i32 %v2_100054d8)
  store i32 32, i32* @r4, align 4
  store i32 %v2_100054d8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000553c.76 to i32), i32* @lr, align 4
  %v0_10005538 = call i32 @function_10008e00()
  %v0_1000553c = call i32 @function_10005b08()
  store i32 %v0_1000553c, i32* %r28.global-to-local, align 4
  %v0_10005544 = load i32, i32* @r31, align 4
  %v1_10005544 = inttoptr i32 %v0_10005544 to i32*
  %v2_10005544 = load i32, i32* %v1_10005544, align 4
  store i32 268457292, i32* @lr, align 4
  %v1_10005548 = inttoptr i32 %v2_10005544 to i8*
  %v2_10005548 = call i32 @function_10008d58(i8* %v1_10005548)
  store i32 %v2_10005548, i32* %r29.global-to-local, align 4
  %v0_10005550 = load i32, i32* @r31, align 4
  %v1_10005550 = inttoptr i32 %v0_10005550 to i32*
  %v2_10005550 = load i32, i32* %v1_10005550, align 4
  %v1_10005554 = sub i32 20, %v2_10005548
  store i32 %v1_10005554, i32* @r29, align 4
  store i32 268457308, i32* @lr, align 4
  %v1_10005558 = inttoptr i32 %v2_10005550 to i8*
  %v2_10005558 = call i32 @function_10008d58(i8* %v1_10005558)
  %v0_1000555c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000555c = load i32, i32* @r29, align 4
  %v2_1000555c = urem i32 %v0_1000555c, %v1_1000555c
  %v2_10005560 = sub i32 %v0_1000555c, %v2_1000555c
  store i32 %v2_10005560, i32* %r0.global-to-local, align 4
  %v2_10005568 = add i32 %v2_1000555c, %v2_10005558
  %v0_10005574 = load i32, i32* @r25, align 4
  %v2_10005574 = add i32 %v0_10005574, %v2_10005568
  store i32 %v2_10005574, i32* @r28, align 4
  store i32 268457340, i32* @lr, align 4
  %v3_10005578 = call i32 @function_10005bc8(i8* %v2_1000551c, i32 %v2_10005568)
  %v0_1000557c = load i32, i32* @r26, align 4
  %v1_1000557c = trunc i32 %v0_1000557c to i8
  %v2_1000557c = load i32, i32* @r28, align 4
  %v3_1000557c = add i32 %v2_1000557c, 24
  %v4_1000557c = inttoptr i32 %v3_1000557c to i8*
  store i8 %v1_1000557c, i8* %v4_1000557c, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10005590.77 to i32), i32* @lr, align 4
  %v2_1000558c = call i32 @function_10009708(i32 15, i32 %v2_100054d8)
  store i32 268457368, i32* @lr, align 4
  %v1_10005594 = call i32 @function_100087e0(i32 3)
  %v3_100055a0 = call i32 @function_1000872c(i32 3, i32* nonnull %stack_var_-1596)
  %v3_100055a4 = load i32, i32* %stack_var_-1596, align 4
  store i32 268457396, i32* @lr, align 4
  %v3_100055b0 = call i32 @function_10009978(i32 1, i32 %v3_100055a0, i32 %v3_100055a4)
  store i32 ptrtoint ([3 x i8]* @global_var_100055c8.79 to i32), i32* @lr, align 4
  %v3_100055c4 = call i32 @function_10009978(i32 1, i32 ptrtoint (i32* @global_var_1000bf28.78 to i32), i32 1)
  store i32 268457424, i32* @lr, align 4
  %v1_100055cc = call i32 @function_10008754(i32 3)
  store i32 268457428, i32* @lr, align 4
  %v1_100055d0 = call i32 @function_1000072c(i32 %v1_100055cc)
  store i32 268457432, i32* @lr, align 4
  %v1_100055d4 = call i32 @function_10004aec(i32 %v1_100055d0)
  store i32 ptrtoint (i32* @global_var_100055dc.80 to i32), i32* @lr, align 4
  %v1_100055d8 = call i32 @function_100052d8(i32 %v1_100055d4)
  store i32 268457440, i32* @lr, align 4
  %v0_100055dc = call i32 @function_10009560()
  %tmp48 = icmp slt i32 %v0_100055dc, 1
  br i1 %tmp48, label %dec_label_pc_1000567c, label %dec_label_pc_100055e8

dec_label_pc_100055e8:                            ; preds = %dec_label_pc_100054d4
  store i32 %v0_100053d0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000541c, i32* %r14.global-to-local, align 4
  store i32 %v0_10005420, i32* %r15.global-to-local, align 4
  store i32 %v0_10005424, i32* %r16.global-to-local, align 4
  store i32 %v0_100053f0, i32* %r17.global-to-local, align 4
  store i32 %v0_100053fc, i32* %r18.global-to-local, align 4
  store i32 %v0_10005404, i32* %r19.global-to-local, align 4
  store i32 %v0_1000540c, i32* %r20.global-to-local, align 4
  store i32 %v0_1000542c, i32* @r22, align 4
  store i32 %v0_10005430, i32* @r23, align 4
  store i32 %v0_10005434, i32* @r24, align 4
  store i32 %v0_10005438, i32* @r25, align 4
  store i32 %v0_1000543c, i32* @r26, align 4
  store i32 %v0_10005440, i32* @r27, align 4
  store i32 %v0_100053dc, i32* @r28, align 4
  store i32 %v0_100053d4, i32* @r29, align 4
  store i32 %v0_10005414, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005644:                            ; preds = %dec_label_pc_100053b4
  %v0_10005644 = load i32, i32* @r31, align 4
  %v1_10005644 = add i32 %v0_10005644, 4
  %v2_10005644 = inttoptr i32 %v1_10005644 to i32*
  %v3_10005644 = load i32, i32* %v2_10005644, align 4
  store i32 268457548, i32* @lr, align 4
  %v1_10005648 = inttoptr i32 %v3_10005644 to i8*
  %v2_10005648 = call i32 @function_10008d58(i8* %v1_10005648)
  %v2_1000564c = icmp sgt i32 %v2_10005648, 31
  br i1 %v2_1000564c, label %dec_label_pc_100054d4, label %dec_label_pc_10005654

dec_label_pc_10005654:                            ; preds = %dec_label_pc_10005644
  %v0_10005654 = load i32, i32* @r31, align 4
  %v1_10005654 = add i32 %v0_10005654, 4
  %v2_10005654 = inttoptr i32 %v1_10005654 to i32*
  %v3_10005654 = load i32, i32* %v2_10005654, align 4
  store i32 %v2_10005400, i32* @r3, align 4
  %v2_1000565c = bitcast i32* %stack_var_-1552 to i8*
  %v3_1000565c = call i32 @function_10008d80(i8* %v2_1000565c, i32 %v3_10005654)
  %v0_10005660 = load i32, i32* @r31, align 4
  %v1_10005660 = add i32 %v0_10005660, 4
  %v2_10005660 = inttoptr i32 %v1_10005660 to i32*
  %v3_10005660 = load i32, i32* %v2_10005660, align 4
  store i32 %v3_10005660, i32* %r29.global-to-local, align 4
  store i32 268457580, i32* @lr, align 4
  %v1_10005668 = inttoptr i32 %v3_10005660 to i8*
  %v2_10005668 = call i32 @function_10008d58(i8* %v1_10005668)
  store i32 %v2_10005668, i32* @r4, align 4
  store i32 %v3_10005660, i32* @r3, align 4
  store i32 268457592, i32* @lr, align 4
  %v0_10005674 = call i32 @function_10008e00()
  br label %dec_label_pc_100054d4

dec_label_pc_1000567c:                            ; preds = %dec_label_pc_100054d4
  store i32 ptrtoint ([3 x i8]* @global_var_10005680.81 to i32), i32* @lr, align 4
  %v1_1000567c = call i32 @function_10009828(i32 %v0_100055dc)
  store i32 ptrtoint ([3 x i8]* @global_var_10005688.82 to i32), i32* @lr, align 4
  %v0_10005684 = call i32 @function_10009518()
  store i32 ptrtoint ([3 x i8]* @global_var_10005690.83 to i32), i32* @lr, align 4
  %v0_1000568c = call i32 @function_10009518()
  store i32 ptrtoint (i32* @global_var_10005698.84 to i32), i32* @lr, align 4
  %v0_10005694 = call i32 @function_10009518()
  store i32 0, i32* @r24, align 4
  store i32 268457632, i32* @lr, align 4
  %v1_1000569c = call i32 @function_1000072c(i32 %v0_10005694)
  %v2_100056a0 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_100056a0, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100056a8.85 to i32), i32* @lr, align 4
  %v1_100056a4 = call i32 @function_10004aec(i32 %v1_1000569c)
  %v2_100056a8 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_100056a8, i32* @r27, align 4
  store i32 268457648, i32* @lr, align 4
  %v1_100056ac = call i32 @function_100052d8(i32 %v1_100056a4)
  store i32 268566528, i32* @r23, align 4
  store i32 268457656, i32* @lr, align 4
  %v1_100056b4 = call i32 @function_10006080(i32 %v1_100056ac)
  store i32 268566528, i32* @r30, align 4
  %v2_100056c0 = ptrtoint i32* %stack_var_-1604 to i32
  store i32 %v2_100056c0, i32* %r15.global-to-local, align 4
  %v2_100056c4 = ptrtoint i32* %stack_var_-1600 to i32
  store i32 %v2_100056c4, i32* %r14.global-to-local, align 4
  %v2_100056cc = ptrtoint i32* %stack_var_-1136 to i32
  store i32 %v2_100056cc, i32* %r16.global-to-local, align 4
  %v2_100057a0 = ptrtoint i32* %stack_var_-1592 to i32
  %v1_10005a2c = bitcast i32* %stack_var_-1552 to i8*
  br label %dec_label_pc_100056d0

dec_label_pc_100056d0:                            ; preds = %dec_label_pc_10005a90, %dec_label_pc_10005880, %dec_label_pc_10005870, %dec_label_pc_10005788, %dec_label_pc_10005ac8, %dec_label_pc_10005a84, %dec_label_pc_10005a28, %dec_label_pc_10005918, %dec_label_pc_10005834, %dec_label_pc_10005afc, %dec_label_pc_10005ab4, %dec_label_pc_10005a9c, %dec_label_pc_10005a70, %dec_label_pc_100059f0, %dec_label_pc_1000567c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100056e049 = load i32, i32* @r28, align 4
  %v4_100056e051 = inttoptr i32 %v2_100056e049 to i32*
  store i32 0, i32* %v4_100056e051, align 4
  %v0_100056e452 = load i32, i32* %r9.global-to-local, align 4
  %v1_100056e453 = add i32 %v0_100056e452, 4
  store i32 %v1_100056e453, i32* %r9.global-to-local, align 4
  %v0_100056e854 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100056e855 = add i32 %v0_100056e854, -1
  store i32 %v1_100056e855, i32* %ctr.global-to-local, align 4
  %v2_100056e856 = icmp eq i32 %v1_100056e855, 0
  br i1 %v2_100056e856, label %dec_label_pc_100056ec, label %dec_label_pc_100056e0.dec_label_pc_100056e0_crit_edge

dec_label_pc_100056e0.dec_label_pc_100056e0_crit_edge: ; preds = %dec_label_pc_100056d0, %dec_label_pc_100056e0.dec_label_pc_100056e0_crit_edge
  %v1_100056e457 = phi i32 [ %v1_100056e4, %dec_label_pc_100056e0.dec_label_pc_100056e0_crit_edge ], [ %v1_100056e453, %dec_label_pc_100056d0 ]
  %v0_100056e0.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_100056e0 = load i32, i32* @r28, align 4
  %v3_100056e0 = add i32 %v2_100056e0, %v1_100056e457
  %v4_100056e0 = inttoptr i32 %v3_100056e0 to i32*
  store i32 %v0_100056e0.pre, i32* %v4_100056e0, align 4
  %v0_100056e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100056e4 = add i32 %v0_100056e4, 4
  store i32 %v1_100056e4, i32* %r9.global-to-local, align 4
  %v0_100056e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100056e8 = add i32 %v0_100056e8, -1
  store i32 %v1_100056e8, i32* %ctr.global-to-local, align 4
  %v2_100056e8 = icmp eq i32 %v1_100056e8, 0
  br i1 %v2_100056e8, label %dec_label_pc_100056ec, label %dec_label_pc_100056e0.dec_label_pc_100056e0_crit_edge

dec_label_pc_100056ec:                            ; preds = %dec_label_pc_100056e0.dec_label_pc_100056e0_crit_edge, %dec_label_pc_100056d0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100056fc58 = load i32, i32* @r27, align 4
  %v4_100056fc60 = inttoptr i32 %v2_100056fc58 to i32*
  store i32 0, i32* %v4_100056fc60, align 4
  %v0_1000570061 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000570062 = add i32 %v0_1000570061, 4
  store i32 %v1_1000570062, i32* %r9.global-to-local, align 4
  %v0_1000570463 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000570464 = add i32 %v0_1000570463, -1
  store i32 %v1_1000570464, i32* %ctr.global-to-local, align 4
  %v2_1000570465 = icmp eq i32 %v1_1000570464, 0
  br i1 %v2_1000570465, label %dec_label_pc_10005708, label %dec_label_pc_100056fc.dec_label_pc_100056fc_crit_edge

dec_label_pc_100056fc.dec_label_pc_100056fc_crit_edge: ; preds = %dec_label_pc_100056ec, %dec_label_pc_100056fc.dec_label_pc_100056fc_crit_edge
  %v1_1000570066 = phi i32 [ %v1_10005700, %dec_label_pc_100056fc.dec_label_pc_100056fc_crit_edge ], [ %v1_1000570062, %dec_label_pc_100056ec ]
  %v0_100056fc.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_100056fc = load i32, i32* @r27, align 4
  %v3_100056fc = add i32 %v2_100056fc, %v1_1000570066
  %v4_100056fc = inttoptr i32 %v3_100056fc to i32*
  store i32 %v0_100056fc.pre, i32* %v4_100056fc, align 4
  %v0_10005700 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005700 = add i32 %v0_10005700, 4
  store i32 %v1_10005700, i32* %r9.global-to-local, align 4
  %v0_10005704 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005704 = add i32 %v0_10005704, -1
  store i32 %v1_10005704, i32* %ctr.global-to-local, align 4
  %v2_10005704 = icmp eq i32 %v1_10005704, 0
  br i1 %v2_10005704, label %dec_label_pc_10005708, label %dec_label_pc_100056fc.dec_label_pc_100056fc_crit_edge

dec_label_pc_10005708:                            ; preds = %dec_label_pc_100056fc.dec_label_pc_100056fc_crit_edge, %dec_label_pc_100056ec
  %v3_10005708 = load i32, i32* @global_var_1001c638.86, align 4
  %v3_1000570c = icmp eq i32 %v3_10005708, -1
  br i1 %v3_1000570c, label %dec_label_pc_10005734, label %dec_label_pc_10005714

dec_label_pc_10005714:                            ; preds = %dec_label_pc_10005708
  %v1_10005714 = call i32 @__asm_rlwinm(i32 %v3_10005708, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000571c = load i32, i32* @r25, align 4
  %v2_1000571c = add i32 %v1_1000571c, %v1_10005714
  %v1_10005720 = urem i32 %v3_10005708, 32
  %v1_10005724 = add i32 %v2_1000571c, 88
  %v2_10005724 = inttoptr i32 %v1_10005724 to i32*
  %v3_10005724 = load i32, i32* %v2_10005724, align 4
  %v3_10005728 = shl i32 1, %v1_10005720
  store i32 %v3_10005728, i32* %r0.global-to-local, align 4
  %v2_1000572c = or i32 %v3_10005724, %v3_10005728
  store i32 %v2_1000572c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000572c, i32* %v2_10005724, align 4
  br label %dec_label_pc_10005734

dec_label_pc_10005734:                            ; preds = %dec_label_pc_10005708, %dec_label_pc_10005714
  %v3_10005734 = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 %v3_10005734, i32* %r0.global-to-local, align 4
  %v3_1000573c = icmp eq i32 %v3_10005734, -1
  br i1 %v3_1000573c, label %dec_label_pc_10005930, label %dec_label_pc_10005744

dec_label_pc_10005744:                            ; preds = %dec_label_pc_10005734, %dec_label_pc_10005930, %dec_label_pc_10005988
  %v3_10005848 = phi i32 [ %v3_10005734, %dec_label_pc_10005734 ], [ -1, %dec_label_pc_10005930 ], [ %v3_10005848.pre, %dec_label_pc_10005988 ]
  %v3_10005744 = load i8, i8* bitcast (i16* @global_var_1001c674.88 to i8*), align 2
  %v3_10005748 = icmp eq i8 %v3_10005744, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005850 = call i32 @__asm_rlwinm(i32 %v3_10005848, i32 29, i32 3, i32 29)
  %v1_10005854 = urem i32 %v3_10005848, 32
  %v1_10005858 = load i32, i32* @r25, align 4
  %v2_10005858 = add i32 %v1_10005858, %v1_10005850
  %v0_1000585c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000585c = shl i32 %v0_1000585c, %v1_10005854
  store i32 %v3_1000585c, i32* %r0.global-to-local, align 4
  br i1 %v3_10005748, label %dec_label_pc_10005848, label %dec_label_pc_10005750

dec_label_pc_10005750:                            ; preds = %dec_label_pc_10005744
  %v1_10005768 = add i32 %v2_10005858, 216
  %v2_10005768 = inttoptr i32 %v1_10005768 to i32*
  %v3_10005768 = load i32, i32* %v2_10005768, align 4
  %v2_1000576c = or i32 %v3_10005768, %v3_1000585c
  store i32 %v2_1000576c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000576c, i32* %v2_10005768, align 4
  br label %dec_label_pc_10005774

dec_label_pc_10005774:                            ; preds = %dec_label_pc_10005848, %dec_label_pc_10005750
  %v3_10005774 = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 %v3_10005774, i32* %r0.global-to-local, align 4
  %v3_10005778 = load i32, i32* @global_var_1001c638.86, align 4
  %v2_1000577c = icmp slt i32 %v3_10005778, %v3_10005774
  br i1 %v2_1000577c, label %dec_label_pc_10005784, label %dec_label_pc_10005788

dec_label_pc_10005784:                            ; preds = %dec_label_pc_10005774
  br label %dec_label_pc_10005788

dec_label_pc_10005788:                            ; preds = %dec_label_pc_10005774, %dec_label_pc_10005784
  %v0_10005790 = phi i32 [ %v3_10005778, %dec_label_pc_10005774 ], [ %v3_10005774, %dec_label_pc_10005784 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10005790 = add i32 %v0_10005790, 1
  store i32 10, i32* %stack_var_-1592, align 4
  store i32 268457904, i32* @lr, align 4
  %v5_100057ac = call i32 @function_100097e0(i32 %v1_10005790, i32 %v2_100056a0, i32 %v2_100056a8, i32 0, i32 %v2_100057a0)
  %v6_100057ac = trunc i32 %v5_100057ac to i16
  %v4_100057b0 = icmp eq i16 %v6_100057ac, -1
  br i1 %v4_100057b0, label %dec_label_pc_100056d0, label %dec_label_pc_100057b8

dec_label_pc_100057b8:                            ; preds = %dec_label_pc_10005788
  %v4_100057b8 = icmp eq i16 %v6_100057ac, 0
  br i1 %v4_100057b8, label %dec_label_pc_100057c0, label %dec_label_pc_100057ec

dec_label_pc_100057c0:                            ; preds = %dec_label_pc_100057b8
  %v0_100057c4 = load i32, i32* @r24, align 4
  store i16 0, i16* %stack_var_-1608, align 2
  %v2_100057d4 = srem i32 %v0_100057c4, 6
  %v1_100057d8 = sub i32 %v0_100057c4, %v2_100057d4
  store i32 %v1_100057d8, i32* %r9.global-to-local, align 4
  store i32 %v2_100057d4, i32* %r0.global-to-local, align 4
  %v1_100057e0 = add i32 %v0_100057c4, 1
  store i32 %v1_100057e0, i32* @r24, align 4
  %v3_100057e4 = icmp eq i32 %v2_100057d4, 0
  br i1 %v3_100057e4, label %dec_label_pc_100059a4, label %dec_label_pc_100057ec

dec_label_pc_100057ec:                            ; preds = %dec_label_pc_100057b8, %dec_label_pc_100057c0, %dec_label_pc_100059a4
  %v3_100057ec = load i8, i8* bitcast (i16* @global_var_1001c674.88 to i8*), align 2
  %v4_100057ec = zext i8 %v3_100057ec to i32
  store i32 %v4_100057ec, i32* @r29, align 4
  %v3_100057f0 = icmp eq i8 %v3_100057ec, 0
  %v3_10005870 = load i32, i32* @global_var_1001c63c.87, align 4
  br i1 %v3_100057f0, label %dec_label_pc_10005870, label %dec_label_pc_100057f8

dec_label_pc_100057f8:                            ; preds = %dec_label_pc_100057ec
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v1_10005800 = call i32 @__asm_rlwinm(i32 %v3_10005870, i32 29, i32 3, i32 29)
  %v1_10005804 = urem i32 %v3_10005870, 32
  %v1_10005808 = load i32, i32* @r25, align 4
  %v2_10005808 = add i32 %v1_10005808, %v1_10005800
  store i32 %v2_10005808, i32* %r9.global-to-local, align 4
  %v1_1000580c = add i32 %v2_10005808, 216
  %v2_1000580c = inttoptr i32 %v1_1000580c to i32*
  %v3_1000580c = load i32, i32* %v2_1000580c, align 4
  %v3_10005810 = lshr i32 %v3_1000580c, %v1_10005804
  store i32 %v3_10005810, i32* %r0.global-to-local, align 4
  %v1_10005818 = urem i32 %v3_10005810, 2
  %v3_10005818 = icmp eq i32 %v1_10005818, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001c674.88 to i8*), align 2
  br i1 %v3_10005818, label %dec_label_pc_10005828, label %dec_label_pc_100059c0

dec_label_pc_10005828:                            ; preds = %dec_label_pc_100057f8
  %v3_10005828 = icmp eq i32 %v3_10005870, -1
  br i1 %v3_10005828, label %dec_label_pc_10005834, label %dec_label_pc_10005830

dec_label_pc_10005830:                            ; preds = %dec_label_pc_10005828
  store i32 ptrtoint (i32* @global_var_10005834.89 to i32), i32* @lr, align 4
  %v0_10005830 = call i32 @function_10009518()
  br label %dec_label_pc_10005834

dec_label_pc_10005834:                            ; preds = %dec_label_pc_10005828, %dec_label_pc_10005830
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c63c.87, align 4
  store i32 268458052, i32* @lr, align 4
  %v1_10005840 = call i32 @function_1000ad2c(i32 1)
  br label %dec_label_pc_100056d0

dec_label_pc_10005848:                            ; preds = %dec_label_pc_10005744
  %v1_10005860 = add i32 %v2_10005858, 88
  %v2_10005860 = inttoptr i32 %v1_10005860 to i32*
  %v3_10005860 = load i32, i32* %v2_10005860, align 4
  %v2_10005864 = or i32 %v3_10005860, %v3_1000585c
  store i32 %v2_10005864, i32* %r9.global-to-local, align 4
  store i32 %v2_10005864, i32* %v2_10005860, align 4
  br label %dec_label_pc_10005774

dec_label_pc_10005870:                            ; preds = %dec_label_pc_100057ec
  store i32 268566528, i32* @r31, align 4
  %v3_10005878 = icmp eq i32 %v3_10005870, -1
  br i1 %v3_10005878, label %dec_label_pc_100056d0, label %dec_label_pc_10005880

dec_label_pc_10005880:                            ; preds = %dec_label_pc_10005870
  %v1_10005880 = call i32 @__asm_rlwinm(i32 %v3_10005870, i32 29, i32 3, i32 29)
  %v1_10005884 = urem i32 %v3_10005870, 32
  %v1_10005888 = load i32, i32* @r25, align 4
  %v2_10005888 = add i32 %v1_10005888, %v1_10005880
  store i32 %v2_10005888, i32* %r9.global-to-local, align 4
  %v1_1000588c = add i32 %v2_10005888, 88
  %v2_1000588c = inttoptr i32 %v1_1000588c to i32*
  %v3_1000588c = load i32, i32* %v2_1000588c, align 4
  %v3_10005890 = lshr i32 %v3_1000588c, %v1_10005884
  store i32 %v3_10005890, i32* %r0.global-to-local, align 4
  %v1_10005894 = urem i32 %v3_10005890, 2
  store i32 %v1_10005894, i32* %r9.global-to-local, align 4
  %v3_10005894 = icmp eq i32 %v1_10005894, 0
  br i1 %v3_10005894, label %dec_label_pc_100056d0, label %dec_label_pc_1000589c

dec_label_pc_1000589c:                            ; preds = %dec_label_pc_10005880
  %v0_1000589c = load i32, i32* @r29, align 4
  %v6_1000589c = trunc i32 %v0_1000589c to i16
  store i16 %v6_1000589c, i16* %stack_var_-1608, align 2
  %v0_100058a0 = call i32 @function_10009c34()
  %v0_100058a4 = load i32, i32* @r29, align 4
  %v2_100058a4 = inttoptr i32 %v0_100058a0 to i32*
  store i32 %v0_100058a4, i32* %v2_100058a4, align 4
  store i32 %v0_100058a0, i32* @r26, align 4
  %v3_100058b4 = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 268458176, i32* @lr, align 4
  %v4_100058bc = call i32 @function_1000a108(i32 %v3_100058b4, i32 %v2_100054e4, i32 2, i32 16386)
  %v3_100058c0 = icmp eq i32 %v4_100058bc, -1
  br i1 %v3_100058c0, label %dec_label_pc_10005a84, label %dec_label_pc_100058c8

dec_label_pc_100058c8:                            ; preds = %dec_label_pc_1000589c
  %v3_100058c8 = icmp eq i32 %v4_100058bc, 0
  br i1 %v3_100058c8, label %dec_label_pc_10005908, label %dec_label_pc_100058d0

dec_label_pc_100058d0:                            ; preds = %dec_label_pc_100058c8
  %v3_100058d0 = load i16, i16* %stack_var_-1608, align 2
  %v4_100058d0 = sext i16 %v3_100058d0 to i32
  %v4_100058d4 = icmp eq i16 %v3_100058d0, 0
  br i1 %v4_100058d4, label %dec_label_pc_10005a9c, label %dec_label_pc_100058dc

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_100058d0
  %v3_100058dc = icmp ugt i16 %v3_100058d0, 1024
  br i1 %v3_100058dc, label %dec_label_pc_10005ab4, label %dec_label_pc_100058e4

dec_label_pc_100058e4:                            ; preds = %dec_label_pc_100058dc
  %v0_100058e4 = load i32, i32* @r29, align 4
  %v1_100058e4 = load i32, i32* @r26, align 4
  %v2_100058e4 = inttoptr i32 %v1_100058e4 to i32*
  store i32 %v0_100058e4, i32* %v2_100058e4, align 4
  %v3_100058f0 = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 268458232, i32* @lr, align 4
  %v5_100058f4 = call i32 @function_1000a108(i32 %v3_100058f0, i32 %v2_100056cc, i32 %v4_100058d0, i32 16386)
  %v3_100058f8 = icmp eq i32 %v5_100058f4, -1
  br i1 %v3_100058f8, label %dec_label_pc_10005a84, label %dec_label_pc_10005900

dec_label_pc_10005900:                            ; preds = %dec_label_pc_100058e4
  %v3_10005900 = icmp eq i32 %v5_100058f4, 0
  br i1 %v3_10005900, label %dec_label_pc_10005908, label %dec_label_pc_10005ac8

dec_label_pc_10005908:                            ; preds = %dec_label_pc_10005a90, %dec_label_pc_10005900, %dec_label_pc_100058c8
  %v3_10005908 = load i32, i32* @global_var_1001c63c.87, align 4
  %v3_1000590c = icmp eq i32 %v3_10005908, -1
  br i1 %v3_1000590c, label %dec_label_pc_10005918, label %dec_label_pc_10005914

dec_label_pc_10005914:                            ; preds = %dec_label_pc_10005908
  store i32 ptrtoint (i32* @global_var_10005918.90 to i32), i32* @lr, align 4
  %v0_10005914 = call i32 @function_10009518()
  br label %dec_label_pc_10005918

dec_label_pc_10005918:                            ; preds = %dec_label_pc_10005908, %dec_label_pc_10005914
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c63c.87, align 4
  store i32 268458284, i32* @lr, align 4
  %v1_10005928 = call i32 @function_1000ad2c(i32 1)
  br label %dec_label_pc_100056d0

dec_label_pc_10005930:                            ; preds = %dec_label_pc_10005734
  store i32 268458304, i32* @lr, align 4
  %v3_1000593c = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  %v3_10005940 = icmp eq i32 %v3_1000593c, -1
  store i32 %v3_1000593c, i32* %r29.global-to-local, align 4
  store i32 %v3_1000593c, i32* @global_var_1001c63c.87, align 4
  br i1 %v3_10005940, label %dec_label_pc_10005744, label %dec_label_pc_10005950

dec_label_pc_10005950:                            ; preds = %dec_label_pc_10005930
  store i32 3, i32* @r4, align 4
  store i32 268458336, i32* @lr, align 4
  %v1_1000595c = call i32 @function_10009430(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005968 = load i32, i32* %r29.global-to-local, align 4
  store i32 268458356, i32* @lr, align 4
  %v2_10005970 = call i32 @function_10009430(i32 %v0_10005968)
  %v3_10005974 = load i32, i32* @global_var_1001c640.64, align 4
  store i32 %v3_10005974, i32* %r0.global-to-local, align 4
  %v3_10005978 = icmp eq i32 %v3_10005974, 0
  br i1 %v3_10005978, label %dec_label_pc_10005988, label %dec_label_pc_10005980

dec_label_pc_10005980:                            ; preds = %dec_label_pc_10005950
  store i32 %v3_10005974, i32* %ctr.global-to-local, align 4
  store i32 268458376, i32* @lr, align 4
  %v2_10005984 = call i32 @function_1000905c(i32 %v2_10005970)
  br label %dec_label_pc_10005988

dec_label_pc_10005988:                            ; preds = %dec_label_pc_10005950, %dec_label_pc_10005980
  %v3_10005988 = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001c674.88 to i8*), align 2
  store i32 268458400, i32* @lr, align 4
  %v3_1000599c = call i32 @function_1000a034(i32 %v3_10005988, i32 ptrtoint (i32* @global_var_1001c738.65 to i32), i32 16)
  %v3_10005848.pre = load i32, i32* @global_var_1001c63c.87, align 4
  br label %dec_label_pc_10005744

dec_label_pc_100059a4:                            ; preds = %dec_label_pc_100057c0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100059ac = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 268458428, i32* @lr, align 4
  %v4_100059b8 = call i32 @function_1000a180(i32 %v3_100059ac, i32 %v2_100054e4, i32 2, i32 16384)
  br label %dec_label_pc_100057ec

dec_label_pc_100059c0:                            ; preds = %dec_label_pc_100057f8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1604, align 4
  store i32 4, i32* %stack_var_-1600, align 4
  store i32 268458468, i32* @lr, align 4
  %v5_100059e0 = call i32 @function_1000a09c(i32 1, i32 4, i32 %v2_100056c0, i32 %v2_100056c4, i32 4)
  %v3_100059e4 = load i32, i32* %stack_var_-1604, align 4
  store i32 %v3_100059e4, i32* %r0.global-to-local, align 4
  %v3_100059e8 = icmp eq i32 %v3_100059e4, 0
  br i1 %v3_100059e8, label %dec_label_pc_10005a28, label %dec_label_pc_100059f0

dec_label_pc_100059f0:                            ; preds = %dec_label_pc_100059c0
  store i32 ptrtoint (i32* @global_var_100059f8.91 to i32), i32* @lr, align 4
  %v0_100059f4 = call i32 @function_10009518()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c63c.87, align 4
  %v0_10005a00 = call i32 @function_10005b08()
  %v1_10005a00 = sext i32 %v0_10005a00 to i64
  %v5_10005a0c = mul nuw nsw i64 %v1_10005a00, 3435973837
  %v1_10005a102 = udiv i64 %v5_10005a0c, 34359738368
  %v1_10005a10 = trunc i64 %v1_10005a102 to i32
  %v1_10005a14 = mul i32 %v1_10005a10, 10
  store i32 %v1_10005a14, i32* %r0.global-to-local, align 4
  %v3_10005a18 = sub i32 %v0_10005a00, %v1_10005a14
  %v1_10005a1c = add i32 %v3_10005a18, 1
  store i32 268458532, i32* @lr, align 4
  %v1_10005a20 = call i32 @function_1000ad2c(i32 %v1_10005a1c)
  br label %dec_label_pc_100056d0

dec_label_pc_10005a28:                            ; preds = %dec_label_pc_100059c0
  store i32 268458544, i32* @lr, align 4
  %v2_10005a2c = call i32 @function_10008d58(i8* %v1_10005a2c)
  %v3_10005a2c = trunc i32 %v2_10005a2c to i8
  %v7_10005a30 = sext i8 %v3_10005a2c to i16
  store i16 %v7_10005a30, i16* %stack_var_-1608, align 2
  store i32 268458552, i32* @lr, align 4
  %v2_10005a34 = call i32 @function_1000905c(i32 %v2_10005a2c)
  store i32 %v2_10005a34, i32* @global_var_1001c660.16, align 4
  %v3_10005a40 = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 268458576, i32* @lr, align 4
  %v4_10005a4c = call i32 @function_1000a180(i32 %v3_10005a40, i32 ptrtoint (i32* @global_var_1000bf2c.93 to i32), i32 4, i32 16384)
  %v3_10005a50 = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 268458596, i32* @lr, align 4
  %v4_10005a60 = call i32 @function_1000a180(i32 %v3_10005a50, i32 %v2_100054e4, i32 1, i32 16384)
  %v3_10005a64 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005a68 = icmp eq i16 %v3_10005a64, 0
  br i1 %v4_10005a68, label %dec_label_pc_100056d0, label %dec_label_pc_10005a70

dec_label_pc_10005a70:                            ; preds = %dec_label_pc_10005a28
  %v4_10005a64 = sext i16 %v3_10005a64 to i32
  %v3_10005a70 = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 268458624, i32* @lr, align 4
  %v5_10005a7c = call i32 @function_1000a180(i32 %v3_10005a70, i32 %v2_10005400, i32 %v4_10005a64, i32 16384)
  br label %dec_label_pc_100056d0

dec_label_pc_10005a84:                            ; preds = %dec_label_pc_100058e4, %dec_label_pc_1000589c
  %v0_10005a84 = load i32, i32* @r26, align 4
  %v1_10005a84 = inttoptr i32 %v0_10005a84 to i32*
  %v2_10005a84 = load i32, i32* %v1_10005a84, align 4
  %v3_10005a88 = icmp eq i32 %v2_10005a84, 11
  br i1 %v3_10005a88, label %dec_label_pc_100056d0, label %dec_label_pc_10005a90

dec_label_pc_10005a90:                            ; preds = %dec_label_pc_10005a84
  %v3_10005a90 = icmp eq i32 %v2_10005a84, 4
  br i1 %v3_10005a90, label %dec_label_pc_100056d0, label %dec_label_pc_10005908

dec_label_pc_10005a9c:                            ; preds = %dec_label_pc_100058d0
  %v3_10005a9c = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 268458672, i32* @lr, align 4
  %v4_10005aac = call i32 @function_1000a108(i32 %v3_10005a9c, i32 %v2_100054e4, i32 2, i32 16384)
  br label %dec_label_pc_100056d0

dec_label_pc_10005ab4:                            ; preds = %dec_label_pc_100058dc
  store i32 ptrtoint (i32* @global_var_10005abc.94 to i32), i32* @lr, align 4
  %v0_10005ab8 = call i32 @function_10009518()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c63c.87, align 4
  br label %dec_label_pc_100056d0

dec_label_pc_10005ac8:                            ; preds = %dec_label_pc_10005900
  %v3_10005ac8 = load i32, i32* @global_var_1001c63c.87, align 4
  store i32 268458716, i32* @lr, align 4
  %v4_10005ad8 = call i32 @function_1000a108(i32 %v3_10005ac8, i32 %v2_100054e4, i32 2, i32 16384)
  %v3_10005adc = load i32, i32* @global_var_1001c63c.87, align 4
  %v3_10005ae0 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005ae0 = sext i16 %v3_10005ae0 to i32
  store i32 268458736, i32* @lr, align 4
  %v5_10005aec = call i32 @function_1000a108(i32 %v3_10005adc, i32 %v2_100056cc, i32 %v4_10005ae0, i32 16384)
  %v3_10005af0 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005af4 = icmp eq i16 %v3_10005af0, 0
  br i1 %v4_10005af4, label %dec_label_pc_100056d0, label %dec_label_pc_10005afc

dec_label_pc_10005afc:                            ; preds = %dec_label_pc_10005ac8
  %v4_10005af0 = sext i16 %v3_10005af0 to i32
  store i32 268458756, i32* @lr, align 4
  %v3_10005b00 = call i32 @function_10000394(i32 %v2_100056cc, i32 %v4_10005af0)
  br label %dec_label_pc_100056d0

; uselistorder directives
  uselistorder i16 %v3_10005af0, { 1, 0 }
  uselistorder i16 %v3_10005a64, { 1, 0 }
  uselistorder i32 %v3_1000593c, { 1, 0, 2 }
  uselistorder i32 %v1_10005894, { 1, 0 }
  uselistorder i32 %v3_10005870, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v2_100057d4, { 1, 0, 2 }
  uselistorder i32 %v0_100057c4, { 2, 0, 1 }
  uselistorder i32 %v2_10005858, { 1, 0 }
  uselistorder i32 %v1_10005704, { 1, 0 }
  uselistorder i32 %v1_10005700, { 1, 0 }
  uselistorder i32 %v1_100056e8, { 1, 0 }
  uselistorder i32 %v1_100056e4, { 1, 0 }
  uselistorder i32 %v2_100056cc, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005568, { 1, 0 }
  uselistorder i32 %v2_1000550c, { 1, 0 }
  uselistorder i32 %v2_100054e4, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v1_10005484, { 1, 0 }
  uselistorder i32 %v2_100053d8, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100053a4, { 1, 2, 0 }
  uselistorder i32 %v0_100052e8, { 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1608, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1596, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 20, 21, 10, 11, 12, 18, 19, 13, 14, 15, 16, 17 }
  uselistorder i32* %r29.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r15.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r14.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 25, 26, 27, 28, 29, 30, 31, 0, 1, 5, 6, 7, 8, 9, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %ctr.global-to-local, { 10, 0, 8, 9, 1, 2, 3, 6, 7, 4, 5 }
  uselistorder i8* bitcast (i16* @global_var_1001c674.88 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001c63c.87, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19 }
  uselistorder i32 (i32)* @function_100052d8, { 1, 0 }
  uselistorder i32 (i32)* @function_10004aec, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009978, { 1, 0 }
  uselistorder i32* @global_var_1001c738.65, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a2e0, { 1, 0 }
  uselistorder i32 (i32)* @function_1000ad2c, { 2, 1, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_10005988, { 1, 0 }
  uselistorder label %dec_label_pc_10005918, { 1, 0 }
  uselistorder label %dec_label_pc_10005834, { 1, 0 }
  uselistorder label %dec_label_pc_100057ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005788, { 1, 0 }
  uselistorder label %dec_label_pc_10005744, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005734, { 1, 0 }
  uselistorder label %dec_label_pc_100056fc.dec_label_pc_100056fc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100056e0.dec_label_pc_100056e0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100056d0, { 9, 4, 10, 11, 0, 5, 12, 6, 13, 7, 1, 2, 8, 3, 14 }
  uselistorder label %dec_label_pc_100054d4, { 2, 0, 1 }
}

define i32 @function_10005b08() local_unnamed_addr {
dec_label_pc_10005b08:
  %v3_10005b10 = load i32, i32* @global_var_1001c6f4.95, align 4
  %v3_10005b18 = load i32, i32* @global_var_1001c6e8.96, align 4
  %v1_10005b20 = udiv i32 %v3_10005b10, 524288
  %v3_10005b24 = load i32, i32* @global_var_1001c6f0.97, align 4
  %v1_10005b28 = mul i32 %v3_10005b18, 2048
  %v2_10005b2c = xor i32 %v1_10005b20, %v3_10005b10
  %v2_10005b30 = xor i32 %v1_10005b28, %v3_10005b18
  %v3_10005b34 = load i32, i32* @global_var_1001c6ec.98, align 4
  %v2_10005b38 = xor i32 %v2_10005b2c, %v2_10005b30
  %v1_10005b3c = udiv i32 %v2_10005b30, 256
  %v2_10005b40 = xor i32 %v2_10005b38, %v1_10005b3c
  store i32 %v3_10005b34, i32* @global_var_1001c6e8.96, align 4
  store i32 %v3_10005b24, i32* @global_var_1001c6ec.98, align 4
  store i32 %v3_10005b10, i32* @global_var_1001c6f0.97, align 4
  store i32 %v2_10005b40, i32* @global_var_1001c6f4.95, align 4
  ret i32 %v2_10005b40

; uselistorder directives
  uselistorder i32 %v2_10005b40, { 1, 0 }
  uselistorder i32 %v3_10005b18, { 1, 0 }
  uselistorder i32 %v3_10005b10, { 2, 1, 0 }
}

define i32 @function_10005b58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005b58:
  store i32 268458872, i32* @lr, align 4
  %v0_10005b74 = call i32 @function_100098e8()
  store i32 %v0_10005b74, i32* @global_var_1001c6e8.96, align 4
  store i32 268458884, i32* @lr, align 4
  %v0_10005b80 = call i32 @function_100095a8()
  store i32 268458892, i32* @lr, align 4
  %v0_10005b88 = call i32 @function_100095f0()
  %v2_10005b8c = xor i32 %v0_10005b80, %v0_10005b88
  store i32 %v2_10005b8c, i32* @global_var_1001c6ec.98, align 4
  store i32 268458904, i32* @lr, align 4
  %v1_10005b94 = call i32 @function_10009c40(i32 %v0_10005b88)
  %v3_10005b98 = load i32, i32* @global_var_1001c6ec.98, align 4
  %v2_10005ba8 = xor i32 %v3_10005b98, %v1_10005b94
  store i32 %v2_10005ba8, i32* @global_var_1001c6f4.95, align 4
  store i32 %v1_10005b94, i32* @global_var_1001c6f0.97, align 4
  ret i32 %v1_10005b94

; uselistorder directives
  uselistorder i32 %v1_10005b94, { 2, 1, 0 }
  uselistorder i32 %v0_10005b88, { 1, 0 }
  uselistorder i32 ()* @function_100095f0, { 1, 2, 0 }
}

define i32 @function_10005bc8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005bc8:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10005be4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268459016, i32* @lr, align 4
  %v1_10005c04 = call i32 @function_100087e0(i32 28)
  %v3_10005c10 = call i32 @function_1000872c(i32 28, i32* null)
  %v2_10005c1c = inttoptr i32 %v3_10005c10 to i8*
  %v3_10005c1c = call i32 @function_10009dac(i32 %v2_10005be4, i8* %v2_10005c1c)
  %v3_10005c20 = icmp eq i32 %arg2, 0
  br i1 %v3_10005c20, label %dec_label_pc_10005ca4, label %dec_label_pc_10005c28

dec_label_pc_10005c28:                            ; preds = %dec_label_pc_10005bc8
  %v1_10005c28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005c28 = add i32 %v1_10005c28, %arg2
  store i32 %v2_10005c28, i32* %r26.global-to-local, align 4
  %v1_10005c7c = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10005c3c

dec_label_pc_10005c3c:                            ; preds = %dec_label_pc_10005c3c, %dec_label_pc_10005c28
  %v3_10005c3c = load i32, i32* @global_var_1001c6f4.95, align 4
  %v3_10005c44 = load i32, i32* @global_var_1001c6e8.96, align 4
  %v1_10005c48 = udiv i32 %v3_10005c3c, 524288
  %v3_10005c4c = load i32, i32* @global_var_1001c6f0.97, align 4
  %v1_10005c50 = mul i32 %v3_10005c44, 2048
  %v2_10005c54 = xor i32 %v1_10005c48, %v3_10005c3c
  %v2_10005c58 = xor i32 %v1_10005c50, %v3_10005c44
  %v3_10005c5c = load i32, i32* @global_var_1001c6ec.98, align 4
  %v2_10005c60 = xor i32 %v2_10005c54, %v2_10005c58
  %v1_10005c64 = udiv i32 %v2_10005c58, 256
  %v2_10005c68 = xor i32 %v2_10005c60, %v1_10005c64
  store i32 %v2_10005c68, i32* %r29.global-to-local, align 4
  store i32 %v3_10005c5c, i32* @global_var_1001c6e8.96, align 4
  store i32 %v2_10005c68, i32* @global_var_1001c6f4.95, align 4
  store i32 %v3_10005c4c, i32* @global_var_1001c6ec.98, align 4
  store i32 %v3_10005c3c, i32* @global_var_1001c6f0.97, align 4
  store i32 268459136, i32* @lr, align 4
  %v2_10005c7c = call i32 @function_10008d58(i8* %v1_10005c7c)
  %v0_10005c80 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005c80 = urem i32 %v0_10005c80, %v2_10005c7c
  store i32 %v2_10005c80, i32* %r29.global-to-local, align 4
  %v0_10005c8c = load i32, i32* @r1, align 4
  %v2_10005c8c = add i32 %v0_10005c8c, %v2_10005c80
  %v1_10005c90 = add i32 %v2_10005c8c, 8
  %v2_10005c90 = inttoptr i32 %v1_10005c90 to i8*
  %v3_10005c90 = load i8, i8* %v2_10005c90, align 1
  %v2_10005c94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005c94 = inttoptr i32 %v2_10005c94 to i8*
  store i8 %v3_10005c90, i8* %v3_10005c94, align 1
  %v0_10005c98 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005c98 = add i32 %v0_10005c98, 1
  store i32 %v1_10005c98, i32* %r31.global-to-local, align 4
  %v1_10005c9c = load i32, i32* %r26.global-to-local, align 4
  %v4_10005c9c = icmp eq i32 %v1_10005c98, %v1_10005c9c
  br i1 %v4_10005c9c, label %dec_label_pc_10005ca4, label %dec_label_pc_10005c3c

dec_label_pc_10005ca4:                            ; preds = %dec_label_pc_10005c3c, %dec_label_pc_10005bc8
  store i32 268459180, i32* @lr, align 4
  %v1_10005ca8 = call i32 @function_10008754(i32 28)
  ret i32 %v1_10005ca8

; uselistorder directives
  uselistorder i32 %v3_10005c44, { 1, 0 }
  uselistorder i32 %v3_10005c3c, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10008754, { 2, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_1000872c, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32 (i32)* @function_100087e0, { 3, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10005cdc() local_unnamed_addr {
dec_label_pc_10005cdc:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10005cdc = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10005cdc, 1
  br i1 %tmp19, label %dec_label_pc_10005cdc.dec_label_pc_10005d90_crit_edge, label %dec_label_pc_10005cf4

dec_label_pc_10005cdc.dec_label_pc_10005d90_crit_edge: ; preds = %dec_label_pc_10005cdc
  %v0_10005da0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005d90

dec_label_pc_10005cf4:                            ; preds = %dec_label_pc_10005cdc
  %v3_10005d04 = load i32, i32* @global_var_1001c6f4.95, align 4
  store i32 %v3_10005d04, i32* %r7.global-to-local, align 4
  %v3_10005d08 = load i32, i32* @global_var_1001c6f0.97, align 4
  store i32 %v3_10005d08, i32* %r5.global-to-local, align 4
  %v3_10005d0c = load i32, i32* @global_var_1001c6ec.98, align 4
  store i32 %v3_10005d0c, i32* %r6.global-to-local, align 4
  %v3_10005d10 = load i32, i32* @global_var_1001c6e8.96, align 4
  br label %dec_label_pc_10005d3c

dec_label_pc_10005d18:                            ; preds = %dec_label_pc_10005d3c
  %v1_10005d18 = load i32, i32* @r3, align 4
  %v2_10005d18 = inttoptr i32 %v1_10005d18 to i32*
  store i32 %v2_10005d60, i32* %v2_10005d18, align 4
  %v0_10005d1c = load i32, i32* @r4, align 4
  %v1_10005d1c = add i32 %v0_10005d1c, -4
  store i32 %v1_10005d1c, i32* @r4, align 4
  %v0_10005d20 = load i32, i32* @r3, align 4
  %v1_10005d20 = add i32 %v0_10005d20, 4
  br label %dec_label_pc_10005d24

dec_label_pc_10005d24:                            ; preds = %dec_label_pc_10005d74, %dec_label_pc_10005d18
  %v0_10005d24 = phi i32 [ %v0_10005d24.pr, %dec_label_pc_10005d74 ], [ %v1_10005d1c, %dec_label_pc_10005d18 ]
  %storemerge = phi i32 [ %v1_10005d78, %dec_label_pc_10005d74 ], [ %v1_10005d20, %dec_label_pc_10005d18 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10005d28 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10005d24, 1
  br i1 %tmp20, label %dec_label_pc_10005d80, label %dec_label_pc_10005d30

dec_label_pc_10005d30:                            ; preds = %dec_label_pc_10005d24
  %v0_10005d30 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005d30, i32* %r6.global-to-local, align 4
  %v0_10005d34 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005d34, i32* %r5.global-to-local, align 4
  %v0_10005d38 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005d38, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10005d3c

dec_label_pc_10005d3c:                            ; preds = %dec_label_pc_10005cf4, %dec_label_pc_10005d30
  %v0_10005ddc = phi i32 [ %v3_10005d0c, %dec_label_pc_10005cf4 ], [ %v0_10005d30, %dec_label_pc_10005d30 ]
  %v0_10005dc0 = phi i32 [ %v3_10005d08, %dec_label_pc_10005cf4 ], [ %v0_10005d34, %dec_label_pc_10005d30 ]
  %v0_10005dc4 = phi i32 [ %v3_10005d04, %dec_label_pc_10005cf4 ], [ %v0_10005d38, %dec_label_pc_10005d30 ]
  %v0_10005da4 = phi i32 [ %v3_10005d10, %dec_label_pc_10005cf4 ], [ %v0_10005d28, %dec_label_pc_10005d30 ]
  %v0_10005d6c = phi i32 [ %v0_10005cdc, %dec_label_pc_10005cf4 ], [ %v0_10005d24, %dec_label_pc_10005d30 ]
  %v2_10005d3c = icmp sgt i32 %v0_10005d6c, 3
  %v1_10005d40 = mul i32 %v0_10005da4, 2048
  %v1_10005d44 = udiv i32 %v0_10005dc4, 524288
  %v2_10005d48 = xor i32 %v1_10005d40, %v0_10005da4
  %v2_10005d4c = xor i32 %v1_10005d44, %v0_10005dc4
  %v2_10005d54 = xor i32 %v2_10005d4c, %v2_10005d48
  %v1_10005d58 = udiv i32 %v2_10005d48, 256
  %v2_10005d60 = xor i32 %v2_10005d54, %v1_10005d58
  store i32 %v2_10005d60, i32* %r0.global-to-local, align 4
  br i1 %v2_10005d3c, label %dec_label_pc_10005d18, label %dec_label_pc_10005d68

dec_label_pc_10005d68:                            ; preds = %dec_label_pc_10005d3c
  %v3_10005d50 = icmp eq i32 %v0_10005d6c, 1
  store i32 %v2_10005d60, i32* %r0.global-to-local, align 4
  %v1_10005d6c = add i32 %v0_10005d6c, -2
  store i32 %v1_10005d6c, i32* @r4, align 4
  br i1 %v3_10005d50, label %dec_label_pc_10005da4, label %dec_label_pc_10005d74

dec_label_pc_10005d74:                            ; preds = %dec_label_pc_10005d68
  %v1_10005d74 = trunc i32 %v2_10005d60 to i16
  %v2_10005d74 = load i32, i32* @r3, align 4
  %v3_10005d74 = inttoptr i32 %v2_10005d74 to i16*
  store i16 %v1_10005d74, i16* %v3_10005d74, align 2
  %v0_10005d78 = load i32, i32* @r3, align 4
  %v1_10005d78 = add i32 %v0_10005d78, 2
  %v0_10005d24.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005d24

dec_label_pc_10005d80:                            ; preds = %dec_label_pc_10005d24
  %v0_10005d80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005d80, i32* @global_var_1001c6f4.95, align 4
  %v0_10005d84 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005d84, i32* @global_var_1001c6f0.97, align 4
  %v0_10005d88 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005d88, i32* @global_var_1001c6ec.98, align 4
  store i32 %v0_10005d28, i32* @global_var_1001c6e8.96, align 4
  br label %dec_label_pc_10005d90

dec_label_pc_10005d90:                            ; preds = %dec_label_pc_10005cdc.dec_label_pc_10005d90_crit_edge, %dec_label_pc_10005d80
  %v0_10005da0 = phi i32 [ %v0_10005da0.pre, %dec_label_pc_10005cdc.dec_label_pc_10005d90_crit_edge ], [ %storemerge, %dec_label_pc_10005d80 ]
  ret i32 %v0_10005da0

dec_label_pc_10005da4:                            ; preds = %dec_label_pc_10005d68
  store i32 %v2_10005d60, i32* %r0.global-to-local, align 4
  store i32 %v0_10005dc0, i32* @global_var_1001c6ec.98, align 4
  store i32 %v0_10005dc4, i32* @global_var_1001c6f0.97, align 4
  store i32 %v2_10005d60, i32* @global_var_1001c6f4.95, align 4
  store i32 %v0_10005ddc, i32* @global_var_1001c6e8.96, align 4
  %v1_10005de0 = trunc i32 %v2_10005d60 to i8
  %v2_10005de0 = load i32, i32* @r3, align 4
  %v3_10005de0 = inttoptr i32 %v2_10005de0 to i8*
  store i8 %v1_10005de0, i8* %v3_10005de0, align 1
  %v0_10005de4 = load i32, i32* @r3, align 4
  ret i32 %v0_10005de4

; uselistorder directives
  uselistorder i32 %v2_10005d60, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10005da4, { 1, 0 }
  uselistorder i32 %v0_10005dc4, { 1, 2, 0 }
  uselistorder i32 %v0_10005cdc, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10005d90, { 1, 0 }
  uselistorder label %dec_label_pc_10005d3c, { 1, 0 }
}

define i32 @function_10005de8() local_unnamed_addr {
dec_label_pc_10005de8:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10005df0 = load i32, i32* @r31, align 4
  %v0_10005df4 = load i32, i32* @r3, align 4
  store i32 %v0_10005df4, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10005e04 = add i32 %v0_10005df4, 4
  %v2_10005e04 = inttoptr i32 %v1_10005e04 to i32*
  %v3_10005e04 = load i32, i32* %v2_10005e04, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_10005e0c = icmp eq i32 %v3_10005e04, -1
  br i1 %v3_10005e0c, label %dec_label_pc_10005e24, label %dec_label_pc_10005e20

dec_label_pc_10005e20:                            ; preds = %dec_label_pc_10005de8
  store i32 268459556, i32* @lr, align 4
  %v0_10005e20 = call i32 @function_10009518()
  br label %dec_label_pc_10005e24

dec_label_pc_10005e24:                            ; preds = %dec_label_pc_10005de8, %dec_label_pc_10005e20
  store i32 268459572, i32* @lr, align 4
  %v3_10005e30 = call i32 @function_1000a234(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10005e3c = load i32, i32* @r31, align 4
  %v1_10005e3c = add i32 %v0_10005e3c, 28
  store i32 %v1_10005e3c, i32* @r3, align 4
  %v3_10005e40 = icmp eq i32 %v3_10005e30, -1
  %v2_10005e44 = add i32 %v0_10005e3c, 4
  %v3_10005e44 = inttoptr i32 %v2_10005e44 to i32*
  store i32 %v3_10005e30, i32* %v3_10005e44, align 4
  br i1 %v3_10005e40, label %dec_label_pc_10005e24.dec_label_pc_10005ebc_crit_edge, label %dec_label_pc_10005e4c

dec_label_pc_10005e24.dec_label_pc_10005ebc_crit_edge: ; preds = %dec_label_pc_10005e24
  %v0_10005ed0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005ebc

dec_label_pc_10005e4c:                            ; preds = %dec_label_pc_10005e24
  %v0_10005e4c = load i32, i32* %r29.global-to-local, align 4
  %v1_10005e4c = load i32, i32* @r31, align 4
  %v2_10005e4c = add i32 %v1_10005e4c, 24
  %v3_10005e4c = inttoptr i32 %v2_10005e4c to i32*
  store i32 %v0_10005e4c, i32* %v3_10005e4c, align 4
  store i32 268459604, i32* @lr, align 4
  %v0_10005e50 = call i32 @function_10008e00()
  %v0_10005e54 = load i32, i32* @r31, align 4
  %v1_10005e54 = add i32 %v0_10005e54, 4
  %v2_10005e54 = inttoptr i32 %v1_10005e54 to i32*
  %v3_10005e54 = load i32, i32* %v2_10005e54, align 4
  store i32 %v3_10005e54, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268459628, i32* @lr, align 4
  %v2_10005e68 = call i32 @function_10009430(i32 %v3_10005e54)
  store i32 4, i32* @r4, align 4
  store i32 268459648, i32* @lr, align 4
  %v2_10005e7c = call i32 @function_10009430(i32 %v3_10005e54)
  %v3_10005e84 = load i32, i32* @global_var_1001c684.99, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10005e8c = load i32, i32* @r31, align 4
  %v2_10005e90 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10005e94 = add i32 %v0_10005e8c, 8
  %v3_10005e94 = inttoptr i32 %v2_10005e94 to i32*
  store i32 %v3_10005e84, i32* %v3_10005e94, align 4
  %v0_10005e9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e9c = load i32, i32* @r31, align 4
  %v2_10005e9c = add i32 %v1_10005e9c, 12
  %v3_10005e9c = inttoptr i32 %v2_10005e9c to i32*
  store i32 %v0_10005e9c, i32* %v3_10005e9c, align 4
  %v0_10005ea4 = load i32, i32* @r31, align 4
  %v1_10005ea4 = add i32 %v0_10005ea4, 4
  %v2_10005ea4 = inttoptr i32 %v1_10005ea4 to i32*
  %v3_10005ea4 = load i32, i32* %v2_10005ea4, align 4
  %v1_10005ea8 = add i32 %v0_10005ea4, 16
  %v2_10005ea8 = inttoptr i32 %v1_10005ea8 to i32*
  %v3_10005ea8 = load i32, i32* %v2_10005ea8, align 4
  store i32 %v3_10005ea8, i32* %r9.global-to-local, align 4
  store i32 2, i32* %stack_var_-40, align 4
  store i32 268459708, i32* @lr, align 4
  %v3_10005eb8 = call i32 @function_1000a034(i32 %v3_10005ea4, i32 %v2_10005e90, i32 16)
  br label %dec_label_pc_10005ebc

dec_label_pc_10005ebc:                            ; preds = %dec_label_pc_10005e24.dec_label_pc_10005ebc_crit_edge, %dec_label_pc_10005e4c
  %v0_10005ed0 = phi i32 [ %v0_10005ed0.pre, %dec_label_pc_10005e24.dec_label_pc_10005ebc_crit_edge ], [ %v3_10005eb8, %dec_label_pc_10005e4c ]
  store i32 %v0_10005df0, i32* @r31, align 4
  ret i32 %v0_10005ed0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32 ()* @function_10008e00, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10005ebc, { 1, 0 }
  uselistorder label %dec_label_pc_10005e24, { 1, 0 }
}

define i32 @function_10005ed4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005ed4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10005ed8 = load i32, i32* @lr, align 4
  store i32 %v0_10005ed8, i32* %r0.global-to-local, align 4
  %v3_10005ee4 = load i32, i32* @global_var_1001c678.100, align 4
  %v1_10005ef0 = mul i32 %v3_10005ee4, 16
  store i32 %v1_10005ef0, i32* %r9.global-to-local, align 4
  %v0_10005ef4 = load i32, i32* @r28, align 4
  %v3_10005efc = load i32, i32* @global_var_1001c67c.101, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10005f08 = add i32 %v1_10005ef0, 16
  %v0_10005f20 = load i32, i32* @r29, align 4
  %v0_10005f24 = load i32, i32* @r30, align 4
  store i32 268459824, i32* @lr, align 4
  %v3_10005f2c = call i32 @function_1000a700(i32 %v3_10005efc, i32 %v1_10005f08, i32 %v1_10005ef0)
  store i32 %v3_10005f2c, i32* %r25.global-to-local, align 4
  %v0_10005f34 = load i32, i32* @r28, align 4
  store i32 %v3_10005f2c, i32* @global_var_1001c67c.101, align 4
  %v3_10005f3c = load i32, i32* @global_var_1001c678.100, align 4
  store i32 %v3_10005f3c, i32* %r24.global-to-local, align 4
  store i32 268459844, i32* @lr, align 4
  %v1_10005f40 = inttoptr i32 %v0_10005f34 to i8*
  %v2_10005f40 = call i32 @function_10008d58(i8* %v1_10005f40)
  %sext = mul i32 %v2_10005f40, 16777216
  %v1_10005f44 = sdiv i32 %sext, 16777216
  %v2_10005f44 = add nsw i32 %v1_10005f44, 1
  store i32 %v2_10005f44, i32* @r29, align 4
  store i32 %v1_10005f44, i32* @r30, align 4
  store i32 %v2_10005f44, i32* @r3, align 4
  store i32 268459860, i32* @lr, align 4
  %v0_10005f50 = call i32 @function_1000a438()
  %v0_10005f54 = load i32, i32* @r28, align 4
  %v0_10005f58 = load i32, i32* @r29, align 4
  store i32 %v0_10005f50, i32* %r31.global-to-local, align 4
  store i32 268459876, i32* @lr, align 4
  %v3_10005f60 = call i32 @function_10008ddc(i32 %v0_10005f54, i32 %v0_10005f58, i32 %v0_10005f58)
  %v0_10005f64 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10005f64, 1
  %extract.t6 = trunc i32 %v0_10005f64 to i8
  br i1 %tmp21, label %dec_label_pc_10005f88, label %dec_label_pc_10005f6c

dec_label_pc_10005f6c:                            ; preds = %dec_label_pc_10005ed4
  store i32 %v0_10005f64, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005f74

dec_label_pc_10005f74:                            ; preds = %dec_label_pc_10005f74, %dec_label_pc_10005f6c
  %v1_10005f7c = phi i32 [ %v1_10005f80, %dec_label_pc_10005f74 ], [ 0, %dec_label_pc_10005f6c ]
  %v1_10005f74 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005f74 = add i32 %v1_10005f74, %v1_10005f7c
  %v3_10005f74 = inttoptr i32 %v2_10005f74 to i8*
  %v4_10005f74 = load i8, i8* %v3_10005f74, align 1
  %v5_10005f74 = zext i8 %v4_10005f74 to i32
  %v1_10005f78 = xor i32 %v5_10005f74, 84
  store i32 %v1_10005f78, i32* %r0.global-to-local, align 4
  %v3_10005f7c = trunc i32 %v1_10005f78 to i8
  store i8 %v3_10005f7c, i8* %v3_10005f74, align 1
  %v0_10005f80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005f80 = add i32 %v0_10005f80, 1
  store i32 %v1_10005f80, i32* %r9.global-to-local, align 4
  %v0_10005f84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005f84 = add i32 %v0_10005f84, -1
  store i32 %v1_10005f84, i32* %ctr.global-to-local, align 4
  %v2_10005f84 = icmp eq i32 %v1_10005f84, 0
  br i1 %v2_10005f84, label %dec_label_pc_10005f88.loopexit, label %dec_label_pc_10005f74

dec_label_pc_10005f88.loopexit:                   ; preds = %dec_label_pc_10005f74
  %v0_10005fa0.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10005fa0.pre to i8
  br label %dec_label_pc_10005f88

dec_label_pc_10005f88:                            ; preds = %dec_label_pc_10005f88.loopexit, %dec_label_pc_10005ed4
  %v0_10005fa0.off0 = phi i8 [ %extract.t, %dec_label_pc_10005f88.loopexit ], [ %extract.t6, %dec_label_pc_10005ed4 ]
  %v3_10005f88 = load i32, i32* @global_var_1001c678.100, align 4
  %v0_10005f8c = load i32, i32* %r23.global-to-local, align 4
  %v3_10005f90 = load i32, i32* @global_var_1001c67c.101, align 4
  %v1_10005f94 = mul i32 %v3_10005f88, 16
  %v2_10005f98 = add i32 %v3_10005f90, %v1_10005f94
  store i32 %v2_10005f98, i32* %r9.global-to-local, align 4
  %v0_10005f9c = load i32, i32* %r24.global-to-local, align 4
  %v1_10005f9c = mul i32 %v0_10005f9c, 16
  store i32 %v1_10005f9c, i32* %r0.global-to-local, align 4
  %v3_10005fa0 = add i32 %v2_10005f98, 12
  %v4_10005fa0 = inttoptr i32 %v3_10005fa0 to i8*
  store i8 %v0_10005fa0.off0, i8* %v4_10005fa0, align 1
  %v0_10005fa4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005fa4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005fa4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10005fa4 = add i32 %v2_10005fa4, %v1_10005fa4
  %v4_10005fa4 = inttoptr i32 %v3_10005fa4 to i32*
  store i32 %v0_10005fa4, i32* %v4_10005fa4, align 4
  %v3_10005fa8 = load i32, i32* @global_var_1001c678.100, align 4
  store i32 %v3_10005fa8, i32* @r30, align 4
  %v3_10005fac = load i32, i32* @global_var_1001c67c.101, align 4
  store i32 %v3_10005fac, i32* %r25.global-to-local, align 4
  store i32 268459956, i32* @lr, align 4
  %v1_10005fb0 = inttoptr i32 %v0_10005f8c to i8*
  %v2_10005fb0 = call i32 @function_10008d58(i8* %v1_10005fb0)
  %sext1 = mul i32 %v2_10005fb0, 16777216
  %v1_10005fb4 = sdiv i32 %sext1, 16777216
  %v2_10005fb4 = add nsw i32 %v1_10005fb4, 1
  store i32 %v2_10005fb4, i32* @r29, align 4
  store i32 %v1_10005fb4, i32* @r28, align 4
  store i32 %v2_10005fb4, i32* @r3, align 4
  store i32 268459972, i32* @lr, align 4
  %v0_10005fc0 = call i32 @function_1000a438()
  %v0_10005fc4 = load i32, i32* %r23.global-to-local, align 4
  %v0_10005fc8 = load i32, i32* @r29, align 4
  store i32 %v0_10005fc0, i32* %r31.global-to-local, align 4
  store i32 268459988, i32* @lr, align 4
  %v3_10005fd0 = call i32 @function_10008ddc(i32 %v0_10005fc4, i32 %v0_10005fc8, i32 %v0_10005fc8)
  %v0_10005fd4 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_10005fd4, 1
  %extract.t8 = trunc i32 %v0_10005fd4 to i8
  br i1 %tmp22, label %dec_label_pc_10005ff8, label %dec_label_pc_10005fdc

dec_label_pc_10005fdc:                            ; preds = %dec_label_pc_10005f88
  store i32 %v0_10005fd4, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005fe4

dec_label_pc_10005fe4:                            ; preds = %dec_label_pc_10005fe4, %dec_label_pc_10005fdc
  %v1_10005fec = phi i32 [ %v1_10005ff0, %dec_label_pc_10005fe4 ], [ 0, %dec_label_pc_10005fdc ]
  %v1_10005fe4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005fe4 = add i32 %v1_10005fe4, %v1_10005fec
  %v3_10005fe4 = inttoptr i32 %v2_10005fe4 to i8*
  %v4_10005fe4 = load i8, i8* %v3_10005fe4, align 1
  %v5_10005fe4 = zext i8 %v4_10005fe4 to i32
  %v1_10005fe8 = xor i32 %v5_10005fe4, 84
  store i32 %v1_10005fe8, i32* %r0.global-to-local, align 4
  %v3_10005fec = trunc i32 %v1_10005fe8 to i8
  store i8 %v3_10005fec, i8* %v3_10005fe4, align 1
  %v0_10005ff0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005ff0 = add i32 %v0_10005ff0, 1
  store i32 %v1_10005ff0, i32* %r9.global-to-local, align 4
  %v0_10005ff4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005ff4 = add i32 %v0_10005ff4, -1
  store i32 %v1_10005ff4, i32* %ctr.global-to-local, align 4
  %v2_10005ff4 = icmp eq i32 %v1_10005ff4, 0
  br i1 %v2_10005ff4, label %dec_label_pc_10005ff8.loopexit, label %dec_label_pc_10005fe4

dec_label_pc_10005ff8.loopexit:                   ; preds = %dec_label_pc_10005fe4
  %v0_1000600c.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_1000600c.pre to i8
  br label %dec_label_pc_10005ff8

dec_label_pc_10005ff8:                            ; preds = %dec_label_pc_10005ff8.loopexit, %dec_label_pc_10005f88
  %v0_1000600c.off0 = phi i8 [ %extract.t7, %dec_label_pc_10005ff8.loopexit ], [ %extract.t8, %dec_label_pc_10005f88 ]
  %v3_10005ff8 = load i32, i32* @global_var_1001c678.100, align 4
  %v3_10006000 = load i32, i32* @global_var_1001c67c.101, align 4
  %v1_10006004 = mul i32 %v3_10005ff8, 16
  %v2_10006008 = or i32 %v1_10006004, 13
  %v3_1000600c = add i32 %v2_10006008, %v3_10006000
  %v4_1000600c = inttoptr i32 %v3_1000600c to i8*
  store i8 %v0_1000600c.off0, i8* %v4_1000600c, align 1
  %v0_10006010 = load i32, i32* @r30, align 4
  %v1_10006010 = mul i32 %v0_10006010, 16
  %v1_10006014 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006014 = add i32 %v1_10006014, %v1_10006010
  store i32 %v2_10006014, i32* %r9.global-to-local, align 4
  %v3_10006018 = load i32, i32* @global_var_1001c678.100, align 4
  %v3_1000601c = load i32, i32* @global_var_1001c67c.101, align 4
  %v1_10006020 = mul i32 %v3_10006018, 16
  %v3_10006024 = load i16, i16* @global_var_1001c680.102, align 2
  %v4_10006024 = zext i16 %v3_10006024 to i32
  store i32 %v4_10006024, i32* %r7.global-to-local, align 4
  %v2_10006028 = add i32 %v3_1000601c, %v1_10006020
  store i32 %v2_10006028, i32* %r11.global-to-local, align 4
  store i32 %v0_10005ed8, i32* %r0.global-to-local, align 4
  %v1_10006030 = add i32 %v3_10006018, 1
  store i32 %v1_10006030, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001c680.102 to i32), i32* %r8.global-to-local, align 4
  %v0_10006038 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006038 = add i32 %v2_10006014, 4
  %v3_10006038 = inttoptr i32 %v2_10006038 to i32*
  store i32 %v0_10006038, i32* %v3_10006038, align 4
  %v0_10006040 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006040, i32* @global_var_1001c678.100, align 4
  store i32 %v0_10005ef4, i32* @r28, align 4
  store i32 %v0_10005f20, i32* @r29, align 4
  store i32 %v0_10005f24, i32* @r30, align 4
  %v0_10006070 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006070 = trunc i32 %v0_10006070 to i16
  %v2_10006070 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006070 = add i32 %v2_10006070, 10
  %v4_10006070 = inttoptr i32 %v3_10006070 to i16*
  store i16 %v1_10006070, i16* %v4_10006070, align 2
  %v0_10006074 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006074 = trunc i32 %v0_10006074 to i16
  %v2_10006074 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006074 = add i32 %v2_10006074, 8
  %v4_10006074 = inttoptr i32 %v3_10006074 to i16*
  store i16 %v1_10006074, i16* %v4_10006074, align 2
  %v0_10006078 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006078 = trunc i32 %v0_10006078 to i16
  store i16 %v1_10006078, i16* @global_var_1001c680.102, align 2
  ret i32 %v3_10005fd0

; uselistorder directives
  uselistorder i32 %v3_10006018, { 1, 0 }
  uselistorder i32 %v1_10005ff4, { 1, 0 }
  uselistorder i32 %v1_10005ff0, { 1, 0 }
  uselistorder i32 %v0_10005fd4, { 1, 0, 2 }
  uselistorder i32 %v1_10005f84, { 1, 0 }
  uselistorder i32 %v1_10005f80, { 1, 0 }
  uselistorder i32 %v0_10005f64, { 1, 0, 2 }
  uselistorder i32 %v1_10005ef0, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10008d58, { 0, 1, 21, 23, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22 }
  uselistorder i32 (i32, i32, i32)* @function_1000a700, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10006080(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006080:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp198 = call i32 @__decompiler_undefined_function_0()
  %tmp199 = call i32 @__decompiler_undefined_function_0()
  %tmp200 = call i32 @__decompiler_undefined_function_0()
  %tmp201 = call i16 @__decompiler_undefined_function_1()
  %tmp202 = call i16 @__decompiler_undefined_function_1()
  %tmp203 = call i8 @__decompiler_undefined_function_2()
  %tmp204 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1900 = alloca i32, align 4
  %stack_var_-1926 = alloca i16, align 2
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1916 = alloca i32, align 4
  %v0_10006080 = load i32, i32* @lr, align 4
  store i32 %v0_10006080, i32* %r0.global-to-local, align 4
  %v0_10006088 = call i32 @__asm_mfcr()
  store i32 %v0_10006088, i32* %r3.global-to-local, align 4
  %v0_100060b4 = load i32, i32* @r24, align 4
  %v0_100060b8 = load i32, i32* @r25, align 4
  %v0_100060c0 = load i32, i32* @r27, align 4
  %v0_100060c4 = load i32, i32* @r28, align 4
  %v0_100060c8 = load i32, i32* @r29, align 4
  %v0_100060d0 = load i32, i32* @r31, align 4
  %v0_100060d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 268460256, i32* @lr, align 4
  %v0_100060dc = call i32 @function_10009560()
  store i32 %v0_100060dc, i32* %r3.global-to-local, align 4
  %v1_100060e0 = icmp slt i32 %v0_100060dc, 0
  %v3_100060e0 = icmp eq i32 %v0_100060dc, 0
  store i1 %v1_100060e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100060e0, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100060dc, i32* @global_var_1001c690.103, align 4
  %tmp246 = icmp slt i32 %v0_100060dc, 1
  br i1 %tmp246, label %dec_label_pc_10006150, label %dec_label_pc_100060f0

dec_label_pc_100060f0:                            ; preds = %dec_label_pc_10006150, %dec_label_pc_10006080
  store i32 %v0_100060d4, i32* %r0.global-to-local, align 4
  %v1_10006104 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006088)
  store i32 %v0_100060b4, i32* @r24, align 4
  store i32 %v0_100060b8, i32* @r25, align 4
  store i32 %v0_100060c0, i32* @r27, align 4
  store i32 %v0_100060c4, i32* @r28, align 4
  store i32 %v0_100060c8, i32* %r29.global-to-local, align 4
  store i32 %v0_100060d0, i32* @r31, align 4
  ret i32 %v0_100060dc

dec_label_pc_10006150:                            ; preds = %dec_label_pc_10006080
  %v1_10006150 = icmp slt i32 %v0_100060dc, -1
  %v3_10006150 = icmp eq i32 %v0_100060dc, -1
  store i1 %v1_10006150, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006150, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006150, label %dec_label_pc_100060f0, label %dec_label_pc_10006158

dec_label_pc_10006158:                            ; preds = %dec_label_pc_10006150
  store i32 268460380, i32* @lr, align 4
  %v1_10006158 = call i32 @function_1000905c(i32 %v0_100060dc)
  store i32 %v1_10006158, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10006158, i32* @global_var_1001c660.16, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006168.104 to i32), i32* @lr, align 4
  %v2_10006164 = call i32 @function_10005b58(i32 %v1_10006158, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268460400, i32* @lr, align 4
  %v0_1000616c = call i32 @function_100098e8()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_1000616c, i32* @global_var_1001c684.99, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006184.105 to i32), i32* @lr, align 4
  %v2_10006180 = call i32 @function_1000a590(i32 256, i32 288)
  store i32 %v2_10006180, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1916, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_10006180, i32* @global_var_1001c688.106, align 4
  store i32 %v2_10006180, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100061b0 = add i32 %v2_10006180, 4
  store i32 %v1_100061b0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100061b4

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_100061b4.dec_label_pc_100061b4_crit_edge, %dec_label_pc_10006158
  %v1_100061c8 = phi i32 [ %v1_100061d0, %dec_label_pc_100061b4.dec_label_pc_100061b4_crit_edge ], [ %v1_100061b0, %dec_label_pc_10006158 ]
  %v0_100061c8 = phi i32 [ %v0_100061c8.pre, %dec_label_pc_100061b4.dec_label_pc_100061b4_crit_edge ], [ -1, %dec_label_pc_10006158 ]
  %v1_100061c4 = phi i32 [ %v1_100061c4.pre, %dec_label_pc_100061b4.dec_label_pc_100061b4_crit_edge ], [ %v2_10006180, %dec_label_pc_10006158 ]
  %v0_100061c0 = phi i32 [ %v0_100061d4, %dec_label_pc_100061b4.dec_label_pc_100061b4_crit_edge ], [ 0, %dec_label_pc_10006158 ]
  %v1_100061b4 = mul i32 %v0_100061c0, 256
  store i32 %v1_100061b4, i32* %r0.global-to-local, align 4
  %v2_100061bc = mul i32 %v0_100061c0, 288
  %v1_100061c0 = add i32 %v0_100061c0, 1
  store i32 %v1_100061c0, i32* %r10.global-to-local, align 4
  %v2_100061c4 = add i32 %v2_100061bc, %v1_100061c4
  store i32 %v2_100061c4, i32* %r9.global-to-local, align 4
  %v2_100061c8 = inttoptr i32 %v1_100061c8 to i32*
  store i32 %v0_100061c8, i32* %v2_100061c8, align 4
  %v0_100061cc = load i32, i32* %r7.global-to-local, align 4
  %v1_100061cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100061cc = add i32 %v1_100061cc, 12
  %v3_100061cc = inttoptr i32 %v2_100061cc to i32*
  store i32 %v0_100061cc, i32* %v3_100061cc, align 4
  %v0_100061d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100061d0 = add i32 %v0_100061d0, 288
  store i32 %v1_100061d0, i32* %r11.global-to-local, align 4
  %v0_100061d4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100061d4, i32* %r9.global-to-local, align 4
  %v0_100061d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100061d8 = add i32 %v0_100061d8, -1
  store i32 %v1_100061d8, i32* %ctr.global-to-local, align 4
  %v2_100061d8 = icmp eq i32 %v1_100061d8, 0
  br i1 %v2_100061d8, label %dec_label_pc_100061dc, label %dec_label_pc_100061b4.dec_label_pc_100061b4_crit_edge

dec_label_pc_100061b4.dec_label_pc_100061b4_crit_edge: ; preds = %dec_label_pc_100061b4
  %v1_100061c4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100061c8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100061b4

dec_label_pc_100061dc:                            ; preds = %dec_label_pc_100061b4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 256, i32* %stack_var_-1916, align 4
  store i32 268460532, i32* @lr, align 4
  %v3_100061f0 = call i32 @function_1000a234(i32 2, i32 3, i32 6)
  store i32 %v3_100061f0, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v3_100061f0, i32* @global_var_1001c68c.107, align 4
  store i32 %v3_100061f0, i32* %r29.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10006210.108 to i32), i32* @lr, align 4
  %v1_1000620c = call i32 @function_10009430(i32 3)
  %v1_10006210 = or i32 %v1_1000620c, 2048
  store i32 %v1_10006210, i32* %r5.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 %v3_100061f0, i32* %r3.global-to-local, align 4
  store i32 268460580, i32* @lr, align 4
  %v2_10006220 = call i32 @function_10009430(i32 %v3_100061f0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006228 = load i32, i32* @global_var_1001c68c.107, align 4
  store i32 %v3_10006228, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10006238 = ptrtoint i32* %stack_var_-1916 to i32
  store i32 %v2_10006238, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-1916, align 4
  store i32 268460616, i32* @lr, align 4
  %v5_10006244 = call i32 @function_1000a1f8(i32 %v3_10006228, i32 0, i32 3, i32 %v2_10006238)
  store i32 %v5_10006244, i32* %r3.global-to-local, align 4
  %v1_10006248 = icmp slt i32 %v5_10006244, 0
  %v3_10006248 = icmp eq i32 %v5_10006244, 0
  store i1 %v1_10006248, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006248, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006248, label %dec_label_pc_10006250, label %dec_label_pc_10006c24

dec_label_pc_10006250:                            ; preds = %dec_label_pc_100061dc, %dec_label_pc_10006c24, %dec_label_pc_10006250
  %v0_10006250 = call i32 @function_10005b08()
  store i32 %v0_10006250, i32* %r3.global-to-local, align 4
  %v1_10006254 = urem i32 %v0_10006250, 65536
  store i32 %v1_10006254, i32* @r23, align 4
  %v1_10006258 = icmp ult i32 %v1_10006254, 1023
  %v3_10006258 = icmp eq i32 %v1_10006254, 1023
  store i1 %v1_10006258, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006258, i1* %cr7_eq.global-to-local, align 1
  %tmp247 = icmp ult i32 %v1_10006254, 1024
  br i1 %tmp247, label %dec_label_pc_10006250, label %dec_label_pc_10006260

dec_label_pc_10006260:                            ; preds = %dec_label_pc_10006250
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10006268 = load i32, i32* @global_var_1001c6f8.109, align 4
  store i32 %v3_10006268, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c6f8.109 to i32), i32* @r24, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c70c.110 to i32), i32* @r25, align 4
  %v1_10006278 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10006278, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10006280 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10006280, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10006280, i32* @global_var_1001c6f8.109, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000bfec.111 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001c6fa.112 to i16*), align 4
  %v0_10006294 = call i32 @function_10005b08()
  %v1_10006294 = trunc i32 %v0_10006294 to i16
  store i32 %v0_10006294, i32* %r3.global-to-local, align 4
  %v3_10006298 = load i32, i32* @global_var_1001c718.113, align 4
  store i32 %v3_10006298, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001c700.114 to i8*), align 4
  %v1_100062a8 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_100062a8, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_100062b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062b0 = trunc i32 %v0_100062b0 to i8
  store i8 %v1_100062b0, i8* bitcast (i32* @global_var_1001c701.115 to i8*), align 4
  store i16 %v1_10006294, i16* bitcast (i32* @global_var_1001c6fc.116 to i16*), align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000bfd4.117 to i32), i32* @r29, align 4
  store i32 %v1_100062a8, i32* @global_var_1001c718.113, align 4
  store i16 23, i16* @global_var_1001c70e.118, align 2
  store i32 ptrtoint (i32* @global_var_1000bf68.119 to i32), i32* @r27, align 4
  %v0_100062d0 = load i32, i32* @r23, align 4
  %v1_100062d0 = trunc i32 %v0_100062d0 to i16
  store i16 %v1_100062d0, i16* bitcast (i32* @global_var_1001c70c.110 to i16*), align 4
  %v2_100062d4 = ptrtoint i32* %stack_var_-1872 to i32
  store i32 %v2_100062d4, i32* %r16.global-to-local, align 4
  %v0_100062d8 = call i32 @function_10005b08()
  %v1_100062d8 = trunc i32 %v0_100062d8 to i16
  store i16 %v1_100062d8, i16* bitcast (i32* @global_var_1001c71a.120 to i16*), align 4
  %v0_100062e8 = load i32, i32* @r29, align 4
  store i32 %v0_100062e8, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  %v3_100062f0 = load i32, i32* @global_var_1001c718.113, align 4
  %v1_100062f8 = or i32 %v3_100062f0, 131072
  store i32 %v1_100062f8, i32* %r0.global-to-local, align 4
  store i32 %v1_100062f8, i32* @global_var_1001c718.113, align 4
  store i32 268460804, i32* @lr, align 4
  %v5_10006300 = call i32 @function_10005ed4(i32 %v0_100062e8, i32 ptrtoint ([5 x i8]* @global_var_1000bfdc.121 to i32), i32 9)
  %v0_10006308 = load i32, i32* @r29, align 4
  store i32 %v0_10006308, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268460824, i32* @lr, align 4
  %v5_10006314 = call i32 @function_10005ed4(i32 %v0_10006308, i32 ptrtoint ([6 x i8]* @global_var_1000bfe4.122 to i32), i32 10)
  %v0_10006318 = load i32, i32* @r29, align 4
  store i32 %v0_10006318, i32* %r3.global-to-local, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  %v0_10006320 = load i32, i32* @r28, align 4
  store i32 268460840, i32* @lr, align 4
  %v5_10006324 = call i32 @function_10005ed4(i32 %v0_10006318, i32 %v0_10006320, i32 11)
  %v0_10006328 = load i32, i32* @r29, align 4
  store i32 %v0_10006328, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268460856, i32* @lr, align 4
  %v5_10006334 = call i32 @function_10005ed4(i32 %v0_10006328, i32 %v0_10006328, i32 10)
  %v0_10006338 = load i32, i32* @r29, align 4
  store i32 %v0_10006338, i32* %r3.global-to-local, align 4
  %v0_10006340 = load i32, i32* @r27, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000bf34.123 to i32), i32* @r29, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268460880, i32* @lr, align 4
  %v4_1000634c = call i32 @function_10005ed4(i32 %v0_10006338, i32 %v0_10006340, i32 5)
  %v0_10006350 = load i32, i32* @r29, align 4
  store i32 %v0_10006350, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268460896, i32* @lr, align 4
  %v5_1000635c = call i32 @function_10005ed4(i32 %v0_10006350, i32 %v0_10006350, i32 8)
  %v0_10006360 = load i32, i32* @r29, align 4
  store i32 %v0_10006360, i32* %r3.global-to-local, align 4
  %v0_10006368 = load i32, i32* @r28, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000bf3c.124 to i32), i32* @r29, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268460920, i32* @lr, align 4
  %v5_10006374 = call i32 @function_10005ed4(i32 %v0_10006360, i32 %v0_10006368, i32 10)
  %v0_10006378 = load i32, i32* @r29, align 4
  store i32 %v0_10006378, i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268460936, i32* @lr, align 4
  %v5_10006384 = call i32 @function_10005ed4(i32 %v0_10006378, i32 %v0_10006378, i32 14)
  %v0_1000638c = load i32, i32* @r29, align 4
  store i32 %v0_1000638c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268460956, i32* @lr, align 4
  %v4_10006398 = call i32 @function_10005ed4(i32 %v0_1000638c, i32 ptrtoint (i32* @global_var_1000bf44.125 to i32), i32 15)
  %v0_100063a0 = load i32, i32* @r29, align 4
  store i32 %v0_100063a0, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268460976, i32* @lr, align 4
  %v4_100063ac = call i32 @function_10005ed4(i32 %v0_100063a0, i32 ptrtoint (i32* @global_var_1000bf50.126 to i32), i32 15)
  %v0_100063b4 = load i32, i32* @r29, align 4
  store i32 %v0_100063b4, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268460996, i32* @lr, align 4
  %v5_100063c0 = call i32 @function_10005ed4(i32 %v0_100063b4, i32 ptrtoint ([7 x i8]* @global_var_1000bf5c.127 to i32), i32 13)
  %v0_100063c4 = load i32, i32* @r29, align 4
  store i32 %v0_100063c4, i32* %r3.global-to-local, align 4
  %v0_100063c8 = load i32, i32* @r27, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268461016, i32* @lr, align 4
  %v4_100063d4 = call i32 @function_10005ed4(i32 %v0_100063c4, i32 %v0_100063c8, i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1000bf64.128 to i32), i32* @r29, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000bf64.128 to i32), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461040, i32* @lr, align 4
  %v5_100063ec = call i32 @function_10005ed4(i32 ptrtoint ([5 x i8]* @global_var_1000bf64.128 to i32), i32 ptrtoint ([6 x i8]* @global_var_1000bf6c.129 to i32), i32 9)
  %v0_100063f4 = load i32, i32* @r29, align 4
  store i32 %v0_100063f4, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461060, i32* @lr, align 4
  %v5_10006400 = call i32 @function_10005ed4(i32 %v0_100063f4, i32 ptrtoint ([6 x i8]* @global_var_1000bf74.130 to i32), i32 9)
  %v0_10006408 = load i32, i32* @r29, align 4
  store i32 %v0_10006408, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461080, i32* @lr, align 4
  %v5_10006414 = call i32 @function_10005ed4(i32 %v0_10006408, i32 ptrtoint ([9 x i8]* @global_var_1000bf7c.131 to i32), i32 12)
  %v0_1000641c = load i32, i32* @r29, align 4
  store i32 %v0_1000641c, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268461100, i32* @lr, align 4
  %v5_10006428 = call i32 @function_10005ed4(i32 %v0_1000641c, i32 ptrtoint ([5 x i8]* @global_var_1000bf88.132 to i32), i32 8)
  %v0_10006430 = load i32, i32* @r29, align 4
  store i32 %v0_10006430, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461120, i32* @lr, align 4
  %v5_1000643c = call i32 @function_10005ed4(i32 %v0_10006430, i32 ptrtoint ([4 x i8]* @global_var_1000bf90.133 to i32), i32 7)
  %v0_10006440 = load i32, i32* @r29, align 4
  store i32 %v0_10006440, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268461136, i32* @lr, align 4
  %v5_1000644c = call i32 @function_10005ed4(i32 %v0_10006440, i32 %v0_10006440, i32 8)
  %v0_10006454 = load i32, i32* @r29, align 4
  store i32 %v0_10006454, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268461156, i32* @lr, align 4
  %v5_10006460 = call i32 @function_10005ed4(i32 %v0_10006454, i32 ptrtoint ([7 x i8]* @global_var_1000bf94.134 to i32), i32 10)
  %v0_10006464 = load i32, i32* @r29, align 4
  store i32 %v0_10006464, i32* %r3.global-to-local, align 4
  %v0_10006468 = load i32, i32* @r27, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268461172, i32* @lr, align 4
  %v4_10006470 = call i32 @function_10005ed4(i32 %v0_10006464, i32 %v0_10006468, i32 4)
  store i32 ptrtoint ([8 x i8]* @global_var_1000bf9c.135 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268461196, i32* @lr, align 4
  %v4_10006488 = call i32 @function_10005ed4(i32 ptrtoint ([8 x i8]* @global_var_1000bf9c.135 to i32), i32 14, i32 14)
  store i32 ptrtoint ([6 x i8]* @global_var_1000bfb4.136 to i32), i32* @r29, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000bfa4.137 to i32), i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461224, i32* @lr, align 4
  %v5_100064a4 = call i32 @function_10005ed4(i32 ptrtoint ([7 x i8]* @global_var_1000bfa4.137 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000bfac.138 to i32), i32 12)
  %v0_100064a8 = load i32, i32* @r29, align 4
  store i32 %v0_100064a8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268461240, i32* @lr, align 4
  %v5_100064b4 = call i32 @function_10005ed4(i32 %v0_100064a8, i32 %v0_100064a8, i32 10)
  %v0_100064c0 = load i32, i32* @r29, align 4
  store i32 %v0_100064c0, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461260, i32* @lr, align 4
  %v5_100064c8 = call i32 @function_10005ed4(i32 %v0_100064c0, i32 ptrtoint ([7 x i8]* @global_var_1000bfbc.139 to i32), i32 9)
  %v0_100064d0 = load i32, i32* @r29, align 4
  store i32 %v0_100064d0, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461280, i32* @lr, align 4
  %v5_100064dc = call i32 @function_10005ed4(i32 %v0_100064d0, i32 ptrtoint ([8 x i8]* @global_var_1000bfc4.140 to i32), i32 12)
  store i32 ptrtoint ([4 x i8]* @global_var_1000bfcc.141 to i32), i32* %r3.global-to-local, align 4
  %v0_100064e8 = load i32, i32* @r27, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268461300, i32* @lr, align 4
  %v4_100064f0 = call i32 @function_10005ed4(i32 ptrtoint ([4 x i8]* @global_var_1000bfcc.141 to i32), i32 %v0_100064e8, i32 3)
  store i32 %v4_100064f0, i32* %r3.global-to-local, align 4
  %v2_10006990 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_100069dc = zext i8 %tmp203 to i32
  %v1_100069e0 = icmp ult i8 %tmp203, 6
  %v3_100069e0 = icmp eq i8 %tmp203, 6
  %v4_100069e8 = zext i16 %tmp202 to i32
  %v1_100069ec = icmp ult i16 %tmp202, 23
  %v3_100069ec = icmp eq i16 %tmp202, 23
  %v4_100069f4 = zext i16 %tmp201 to i32
  %v1_10006a04 = and i32 %tmp200, 131072
  %v3_10006a04 = icmp eq i32 %v1_10006a04, 0
  %v1_10006a2c = add i32 %tmp199, -1
  %v2_10006a30 = icmp slt i32 %v1_10006a2c, %tmp198
  %v4_10006a30 = icmp eq i32 %v1_10006a2c, %tmp198
  %v2_10006ce0 = ptrtoint i32* %stack_var_-1928 to i32
  %v2_10006d34 = ptrtoint i32* %stack_var_-1744 to i32
  %v2_10006d3c = ptrtoint i32* %stack_var_-1908 to i32
  %v2_1000798c = ptrtoint i16* %stack_var_-1926 to i32
  %v2_100079a0 = ptrtoint i32* %stack_var_-1900 to i32
  %v2_10006dec = ptrtoint i32* %stack_var_-1920 to i32
  %v2_10006df0 = ptrtoint i32* %stack_var_-1912 to i32
  %v2_10006948 = ptrtoint i32* %stack_var_-1888 to i32
  %v1_10006a0c = and i32 %tmp200, 1048576
  %v3_10006a0c = icmp eq i32 %v1_10006a0c, 0
  %v1_10006a14 = and i32 %tmp200, 262144
  %v3_10006a14 = icmp eq i32 %v1_10006a14, 0
  %v1_10006a1c = and i32 %tmp200, 65536
  %v3_10006a1c = icmp eq i32 %v1_10006a1c, 0
  br label %dec_label_pc_100064f4

dec_label_pc_100064f4:                            ; preds = %dec_label_pc_10006d84, %dec_label_pc_10006260
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100064f8 = load i32, i32* @global_var_1001c684.99, align 4
  store i32 %v3_100064f8, i32* @r31, align 4
  %v0_100064fc = load i32, i32* @r26, align 4
  %v2_100064fc = icmp slt i32 %v0_100064fc, %v3_100064f8
  %v4_100064fc = icmp eq i32 %v0_100064fc, %v3_100064f8
  store i1 %v2_100064fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100064fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100064fc, label %dec_label_pc_10006978, label %dec_label_pc_10006504

dec_label_pc_10006504:                            ; preds = %dec_label_pc_100064f4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1916, align 4
  br label %dec_label_pc_1000650c

dec_label_pc_1000650c:                            ; preds = %dec_label_pc_100068c8, %dec_label_pc_10006504
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1888, align 4
  %v0_10006520 = call i32 @function_10005b08()
  %v1_10006520 = trunc i32 %v0_10006520 to i16
  store i32 %v0_10006520, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_10006520, i16* bitcast (i32* @global_var_1001c6fc.116 to i16*), align 4
  %v3_1000652c = load i32, i32* @global_var_1001c660.16, align 4
  store i32 %v3_1000652c, i32* %r0.global-to-local, align 4
  store i32 %v3_1000652c, i32* @global_var_1001c704.142, align 4
  br label %dec_label_pc_10006534

dec_label_pc_10006534:                            ; preds = %dec_label_pc_10008720, %dec_label_pc_100086e4, %dec_label_pc_10008530, %dec_label_pc_10008364, %dec_label_pc_10007e40, %dec_label_pc_10007d00, %dec_label_pc_10007c98, %dec_label_pc_10007c7c, %dec_label_pc_10007c34, %dec_label_pc_10007c18, %dec_label_pc_10007ba4, %dec_label_pc_1000870c, %dec_label_pc_100086f8, %dec_label_pc_100086d4, %dec_label_pc_100086c4, %dec_label_pc_100086b4, %dec_label_pc_100086a4, %dec_label_pc_10008694, %dec_label_pc_10008688, %dec_label_pc_10008678, %dec_label_pc_10008670, %dec_label_pc_10008664, %dec_label_pc_10008654, %dec_label_pc_1000864c, %dec_label_pc_10008640, %dec_label_pc_10008634, %dec_label_pc_1000862c, %dec_label_pc_1000861c, %dec_label_pc_10008610, %dec_label_pc_10008604, %dec_label_pc_100085f4, %dec_label_pc_100085e4, %dec_label_pc_100085d4, %dec_label_pc_100085cc, %dec_label_pc_100085c4, %dec_label_pc_100085bc, %dec_label_pc_100085b0, %dec_label_pc_100085a0, %dec_label_pc_10008590, %dec_label_pc_10008584, %dec_label_pc_10008578, %dec_label_pc_10008570, %dec_label_pc_10008564, %dec_label_pc_1000855c, %dec_label_pc_10008554, %dec_label_pc_10008548, %dec_label_pc_1000853c, %dec_label_pc_10008518, %dec_label_pc_10008508, %dec_label_pc_10008500, %dec_label_pc_100084f4, %dec_label_pc_100084ec, %dec_label_pc_100084e0, %dec_label_pc_100084c8, %dec_label_pc_100084bc, %dec_label_pc_100084a8, %dec_label_pc_10008490, %dec_label_pc_10008454, %dec_label_pc_10008444, %dec_label_pc_10008438, %dec_label_pc_10008420, %dec_label_pc_1000840c, %dec_label_pc_100083f8, %dec_label_pc_100083e4, %dec_label_pc_100083d0, %dec_label_pc_100083c0, %dec_label_pc_100083b4, %dec_label_pc_1000838c, %dec_label_pc_10008378, %dec_label_pc_10008350, %dec_label_pc_1000833c, %dec_label_pc_10008328, %dec_label_pc_10008314, %dec_label_pc_10008300, %dec_label_pc_100082e4, %dec_label_pc_100082dc, %dec_label_pc_100082c0, %dec_label_pc_100082ac, %dec_label_pc_10008298, %dec_label_pc_10008284, %dec_label_pc_10008270, %dec_label_pc_1000825c, %dec_label_pc_1000824c, %dec_label_pc_10008238, %dec_label_pc_10008230, %dec_label_pc_1000821c, %dec_label_pc_10008208, %dec_label_pc_100081f4, %dec_label_pc_100081e0, %dec_label_pc_100081cc, %dec_label_pc_100081b8, %dec_label_pc_1000818c, %dec_label_pc_10008178, %dec_label_pc_10008164, %dec_label_pc_10008150, %dec_label_pc_1000813c, %dec_label_pc_1000811c, %dec_label_pc_10008114, %dec_label_pc_1000810c, %dec_label_pc_100080f8, %dec_label_pc_100080e4, %dec_label_pc_100080d0, %dec_label_pc_100080c8, %dec_label_pc_100080b8, %dec_label_pc_100080b0, %dec_label_pc_100080a4, %dec_label_pc_10008094, %dec_label_pc_10008088, %dec_label_pc_10008074, %dec_label_pc_10008060, %dec_label_pc_10008058, %dec_label_pc_10008050, %dec_label_pc_10008044, %dec_label_pc_10008024, %dec_label_pc_10008018, %dec_label_pc_10008004, %dec_label_pc_10007ff0, %dec_label_pc_10007fd4, %dec_label_pc_10007fcc, %dec_label_pc_10007fb8, %dec_label_pc_10007f94, %dec_label_pc_10007f78, %dec_label_pc_10007f64, %dec_label_pc_10007f50, %dec_label_pc_10007f3c, %dec_label_pc_10007f28, %dec_label_pc_10007f0c, %dec_label_pc_10007ed0, %dec_label_pc_10007ebc, %dec_label_pc_10007ea8, %dec_label_pc_10007e94, %dec_label_pc_10007e80, %dec_label_pc_10007e6c, %dec_label_pc_10007e0c, %dec_label_pc_10007df8, %dec_label_pc_10007ddc, %dec_label_pc_10007dc0, %dec_label_pc_10007db4, %dec_label_pc_10007d98, %dec_label_pc_10007d74, %dec_label_pc_10007d68, %dec_label_pc_10007d5c, %dec_label_pc_10007d50, %dec_label_pc_10007d44, %dec_label_pc_10007d3c, %dec_label_pc_10007d34, %dec_label_pc_10007d28, %dec_label_pc_10007d20, %dec_label_pc_10007d18, %dec_label_pc_10007d0c, %dec_label_pc_10007ce4, %dec_label_pc_10007cc8, %dec_label_pc_10007cac, %dec_label_pc_10007c90, %dec_label_pc_10007c6c, %dec_label_pc_10007c58, %dec_label_pc_10007c48, %dec_label_pc_10007bfc, %dec_label_pc_10007be0, %dec_label_pc_10007bcc, %dec_label_pc_10007bb8, %dec_label_pc_10007b90, %dec_label_pc_10007b7c, %dec_label_pc_10007b74, %dec_label_pc_10007b68, %dec_label_pc_10007b5c, %dec_label_pc_10007b48, %dec_label_pc_10006c90, %dec_label_pc_10006c7c, %dec_label_pc_10006c6c, %dec_label_pc_10006c64, %dec_label_pc_10006c5c, %dec_label_pc_10006c54, %dec_label_pc_10006c4c, %dec_label_pc_10006c44, %dec_label_pc_10006c3c, %dec_label_pc_10006c34, %dec_label_pc_10006b20, %dec_label_pc_10006b08, %dec_label_pc_10006af8, %dec_label_pc_10006af0, %dec_label_pc_10006ae8, %dec_label_pc_10006ae0, %dec_label_pc_10006ad4, %dec_label_pc_10006aa4, %dec_label_pc_100068c0, %dec_label_pc_100065f8, %dec_label_pc_100065f0, %dec_label_pc_100065e8, %dec_label_pc_100065e0, %dec_label_pc_100065d8, %dec_label_pc_100065d0, %dec_label_pc_100065c8, %dec_label_pc_100065c0, %dec_label_pc_100065b8, %dec_label_pc_100065b0, %dec_label_pc_100065a8, %dec_label_pc_100065a0, %dec_label_pc_10006598, %dec_label_pc_10006590, %dec_label_pc_10006588, %dec_label_pc_10006580, %dec_label_pc_10006578, %dec_label_pc_10006570, %dec_label_pc_10006568, %dec_label_pc_10006560, %dec_label_pc_10006558, %dec_label_pc_10006550, %dec_label_pc_10006534, %dec_label_pc_1000650c
  %v0_10006534 = call i32 @function_10005b08()
  store i32 %v0_10006534, i32* %r3.global-to-local, align 4
  %v1_10006538 = urem i32 %v0_10006534, 256
  store i32 %v1_10006538, i32* %r0.global-to-local, align 4
  %v1_1000653c = udiv i32 %v0_10006534, 16777216
  store i32 %v1_1000653c, i32* %r11.global-to-local, align 4
  %v1_10006540 = icmp ult i32 %v1_10006538, 127
  %v3_10006540 = icmp eq i32 %v1_10006538, 127
  store i1 %v1_10006540, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006540, i1* %cr7_eq.global-to-local, align 1
  %v1_10006544 = call i32 @__asm_rlwinm(i32 %v0_10006534, i32 24, i32 24, i32 31)
  store i32 %v1_10006544, i32* %r9.global-to-local, align 4
  %v1_10006548 = call i32 @__asm_rlwinm(i32 %v0_10006534, i32 16, i32 24, i32 31)
  store i32 %v1_10006548, i32* %r3.global-to-local, align 4
  %v0_1000654c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000654c, label %dec_label_pc_10006534, label %dec_label_pc_10006550

dec_label_pc_10006550:                            ; preds = %dec_label_pc_10006534
  %v0_10006550 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006550 = icmp slt i32 %v0_10006550, 0
  %v3_10006550 = icmp eq i32 %v0_10006550, 0
  store i1 %v1_10006550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006550, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006550, label %dec_label_pc_10006534, label %dec_label_pc_10006558

dec_label_pc_10006558:                            ; preds = %dec_label_pc_10006550
  %v1_10006558 = icmp slt i32 %v0_10006550, 3
  %v3_10006558 = icmp eq i32 %v0_10006550, 3
  store i1 %v1_10006558, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006558, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006558, label %dec_label_pc_10006534, label %dec_label_pc_10006560

dec_label_pc_10006560:                            ; preds = %dec_label_pc_10006558
  %v1_10006560 = icmp slt i32 %v0_10006550, 15
  %v3_10006560 = icmp eq i32 %v0_10006550, 15
  store i1 %v1_10006560, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006560, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006560, label %dec_label_pc_10006534, label %dec_label_pc_10006568

dec_label_pc_10006568:                            ; preds = %dec_label_pc_10006560
  %v1_10006568 = icmp slt i32 %v0_10006550, 56
  %v3_10006568 = icmp eq i32 %v0_10006550, 56
  store i1 %v1_10006568, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006568, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006568, label %dec_label_pc_10006534, label %dec_label_pc_10006570

dec_label_pc_10006570:                            ; preds = %dec_label_pc_10006568
  %v1_10006570 = icmp slt i32 %v0_10006550, 10
  %v3_10006570 = icmp eq i32 %v0_10006550, 10
  store i1 %v1_10006570, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006570, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006570, label %dec_label_pc_10006534, label %dec_label_pc_10006578

dec_label_pc_10006578:                            ; preds = %dec_label_pc_10006570
  %v1_10006578 = icmp slt i32 %v0_10006550, 25
  %v3_10006578 = icmp eq i32 %v0_10006550, 25
  store i1 %v1_10006578, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006578, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006578, label %dec_label_pc_10006534, label %dec_label_pc_10006580

dec_label_pc_10006580:                            ; preds = %dec_label_pc_10006578
  %v1_10006580 = icmp slt i32 %v0_10006550, 49
  %v3_10006580 = icmp eq i32 %v0_10006550, 49
  store i1 %v1_10006580, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006580, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006580, label %dec_label_pc_10006534, label %dec_label_pc_10006588

dec_label_pc_10006588:                            ; preds = %dec_label_pc_10006580
  %v1_10006588 = icmp slt i32 %v0_10006550, 50
  %v3_10006588 = icmp eq i32 %v0_10006550, 50
  store i1 %v1_10006588, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006588, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006588, label %dec_label_pc_10006534, label %dec_label_pc_10006590

dec_label_pc_10006590:                            ; preds = %dec_label_pc_10006588
  %v1_10006590 = icmp slt i32 %v0_10006550, 137
  %v3_10006590 = icmp eq i32 %v0_10006550, 137
  store i1 %v1_10006590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006590, label %dec_label_pc_10006534, label %dec_label_pc_10006598

dec_label_pc_10006598:                            ; preds = %dec_label_pc_10006590
  %v1_10006598 = icmp slt i32 %v0_10006550, 6
  %v3_10006598 = icmp eq i32 %v0_10006550, 6
  store i1 %v1_10006598, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006598, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006598, label %dec_label_pc_10006534, label %dec_label_pc_100065a0

dec_label_pc_100065a0:                            ; preds = %dec_label_pc_10006598
  %v1_100065a0 = icmp slt i32 %v0_10006550, 7
  %v3_100065a0 = icmp eq i32 %v0_10006550, 7
  store i1 %v1_100065a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065a0, label %dec_label_pc_10006534, label %dec_label_pc_100065a8

dec_label_pc_100065a8:                            ; preds = %dec_label_pc_100065a0
  %v1_100065a8 = icmp slt i32 %v0_10006550, 11
  %v3_100065a8 = icmp eq i32 %v0_10006550, 11
  store i1 %v1_100065a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065a8, label %dec_label_pc_10006534, label %dec_label_pc_100065b0

dec_label_pc_100065b0:                            ; preds = %dec_label_pc_100065a8
  %v1_100065b0 = icmp slt i32 %v0_10006550, 21
  %v3_100065b0 = icmp eq i32 %v0_10006550, 21
  store i1 %v1_100065b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065b0, label %dec_label_pc_10006534, label %dec_label_pc_100065b8

dec_label_pc_100065b8:                            ; preds = %dec_label_pc_100065b0
  %v1_100065b8 = icmp slt i32 %v0_10006550, 22
  %v3_100065b8 = icmp eq i32 %v0_10006550, 22
  store i1 %v1_100065b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065b8, label %dec_label_pc_10006534, label %dec_label_pc_100065c0

dec_label_pc_100065c0:                            ; preds = %dec_label_pc_100065b8
  %v1_100065c0 = icmp slt i32 %v0_10006550, 26
  %v3_100065c0 = icmp eq i32 %v0_10006550, 26
  store i1 %v1_100065c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065c0, label %dec_label_pc_10006534, label %dec_label_pc_100065c8

dec_label_pc_100065c8:                            ; preds = %dec_label_pc_100065c0
  %v1_100065c8 = icmp slt i32 %v0_10006550, 28
  %v3_100065c8 = icmp eq i32 %v0_10006550, 28
  store i1 %v1_100065c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065c8, label %dec_label_pc_10006534, label %dec_label_pc_100065d0

dec_label_pc_100065d0:                            ; preds = %dec_label_pc_100065c8
  %v1_100065d0 = icmp slt i32 %v0_10006550, 29
  %v3_100065d0 = icmp eq i32 %v0_10006550, 29
  store i1 %v1_100065d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065d0, label %dec_label_pc_10006534, label %dec_label_pc_100065d8

dec_label_pc_100065d8:                            ; preds = %dec_label_pc_100065d0
  %v1_100065d8 = icmp slt i32 %v0_10006550, 30
  %v3_100065d8 = icmp eq i32 %v0_10006550, 30
  store i1 %v1_100065d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065d8, label %dec_label_pc_10006534, label %dec_label_pc_100065e0

dec_label_pc_100065e0:                            ; preds = %dec_label_pc_100065d8
  %v1_100065e0 = icmp slt i32 %v0_10006550, 33
  %v3_100065e0 = icmp eq i32 %v0_10006550, 33
  store i1 %v1_100065e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065e0, label %dec_label_pc_10006534, label %dec_label_pc_100065e8

dec_label_pc_100065e8:                            ; preds = %dec_label_pc_100065e0
  %v1_100065e8 = icmp slt i32 %v0_10006550, 55
  %v3_100065e8 = icmp eq i32 %v0_10006550, 55
  store i1 %v1_100065e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065e8, label %dec_label_pc_10006534, label %dec_label_pc_100065f0

dec_label_pc_100065f0:                            ; preds = %dec_label_pc_100065e8
  %v1_100065f0 = icmp slt i32 %v0_10006550, 214
  %v3_100065f0 = icmp eq i32 %v0_10006550, 214
  store i1 %v1_100065f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065f0, label %dec_label_pc_10006534, label %dec_label_pc_100065f8

dec_label_pc_100065f8:                            ; preds = %dec_label_pc_100065f0
  %v1_100065f8 = icmp slt i32 %v0_10006550, 215
  %v3_100065f8 = icmp eq i32 %v0_10006550, 215
  store i1 %v1_100065f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065f8, label %dec_label_pc_10006534, label %dec_label_pc_10006600

dec_label_pc_10006600:                            ; preds = %dec_label_pc_100065f8
  %v1_10006600 = icmp slt i32 %v0_10006550, 192
  %v3_10006600 = icmp eq i32 %v0_10006550, 192
  store i1 %v1_10006600, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006600, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006600, label %dec_label_pc_10006aa4, label %dec_label_pc_10006608

dec_label_pc_10006608:                            ; preds = %dec_label_pc_10006600
  %v1_10006608 = icmp slt i32 %v0_10006550, 146
  %v3_10006608 = icmp eq i32 %v0_10006550, 146
  store i1 %v1_10006608, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006608, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006608, label %dec_label_pc_10006ae0, label %dec_label_pc_10006610

dec_label_pc_10006610:                            ; preds = %dec_label_pc_10006608
  %v1_10006610 = icmp slt i32 %v0_10006550, 147
  %v3_10006610 = icmp eq i32 %v0_10006550, 147
  store i1 %v1_10006610, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006610, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006610, label %dec_label_pc_10008694, label %dec_label_pc_10006618

dec_label_pc_10006618:                            ; preds = %dec_label_pc_10006610
  %v1_10006618 = icmp slt i32 %v0_10006550, 148
  %v3_10006618 = icmp eq i32 %v0_10006550, 148
  store i1 %v1_10006618, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006618, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006618, label %dec_label_pc_10006c90, label %dec_label_pc_10006620

dec_label_pc_10006620:                            ; preds = %dec_label_pc_10006618
  %v1_10006620 = icmp slt i32 %v0_10006550, 150
  %v3_10006620 = icmp eq i32 %v0_10006550, 150
  store i1 %v1_10006620, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006620, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006620, label %dec_label_pc_10006c34, label %dec_label_pc_10006628

dec_label_pc_10006628:                            ; preds = %dec_label_pc_10006620
  %v1_10006628 = icmp slt i32 %v0_10006550, 152
  %v3_10006628 = icmp eq i32 %v0_10006550, 152
  store i1 %v1_10006628, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006628, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006628, label %dec_label_pc_10008670, label %dec_label_pc_10006630

dec_label_pc_10006630:                            ; preds = %dec_label_pc_10006628
  %v1_10006630 = icmp slt i32 %v0_10006550, 157
  %v3_10006630 = icmp eq i32 %v0_10006550, 157
  store i1 %v1_10006630, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006630, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006630, label %dec_label_pc_1000864c, label %dec_label_pc_10006638

dec_label_pc_10006638:                            ; preds = %dec_label_pc_10006630
  %v1_10006638 = icmp slt i32 %v0_10006550, 161
  %v3_10006638 = icmp eq i32 %v0_10006550, 161
  store i1 %v1_10006638, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006638, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006638, label %dec_label_pc_10008640, label %dec_label_pc_10006640

dec_label_pc_10006640:                            ; preds = %dec_label_pc_10006638
  %v1_10006640 = icmp slt i32 %v0_10006550, 162
  %v3_10006640 = icmp eq i32 %v0_10006550, 162
  store i1 %v1_10006640, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006640, label %dec_label_pc_1000861c, label %dec_label_pc_10006648

dec_label_pc_10006648:                            ; preds = %dec_label_pc_10006640
  %v1_10006648 = icmp slt i32 %v0_10006550, 155
  %v3_10006648 = icmp eq i32 %v0_10006550, 155
  store i1 %v1_10006648, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006648, label %dec_label_pc_100085bc, label %dec_label_pc_10006650

dec_label_pc_10006650:                            ; preds = %dec_label_pc_10006648
  %v1_10006650 = icmp slt i32 %v0_10006550, 164
  %v3_10006650 = icmp eq i32 %v0_10006550, 164
  store i1 %v1_10006650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006650, label %dec_label_pc_10008590, label %dec_label_pc_10006658

dec_label_pc_10006658:                            ; preds = %dec_label_pc_10006650
  %v1_10006658 = icmp slt i32 %v0_10006550, 156
  %v3_10006658 = icmp eq i32 %v0_10006550, 156
  store i1 %v1_10006658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006658, label %dec_label_pc_10008584, label %dec_label_pc_10006660

dec_label_pc_10006660:                            ; preds = %dec_label_pc_10006658
  %v1_10006660 = icmp slt i32 %v0_10006550, 167
  %v3_10006660 = icmp eq i32 %v0_10006550, 167
  store i1 %v1_10006660, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006660, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006660, label %dec_label_pc_10008570, label %dec_label_pc_10006668

dec_label_pc_10006668:                            ; preds = %dec_label_pc_10006660
  %v1_10006668 = icmp slt i32 %v0_10006550, 168
  %v3_10006668 = icmp eq i32 %v0_10006550, 168
  store i1 %v1_10006668, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006668, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006668, label %dec_label_pc_10008554, label %dec_label_pc_10006670

dec_label_pc_10006670:                            ; preds = %dec_label_pc_10006668
  %v1_10006670 = icmp slt i32 %v0_10006550, 203
  %v3_10006670 = icmp eq i32 %v0_10006550, 203
  store i1 %v1_10006670, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006670, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006670, label %dec_label_pc_10008548, label %dec_label_pc_10006678

dec_label_pc_10006678:                            ; preds = %dec_label_pc_10006670
  %v1_10006678 = icmp slt i32 %v0_10006550, 204
  %v3_10006678 = icmp eq i32 %v0_10006550, 204
  store i1 %v1_10006678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006678, label %dec_label_pc_1000853c, label %dec_label_pc_10006680

dec_label_pc_10006680:                            ; preds = %dec_label_pc_10006678
  %v1_10006680 = icmp slt i32 %v0_10006550, 207
  %v3_10006680 = icmp eq i32 %v0_10006550, 207
  store i1 %v1_10006680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006680, label %dec_label_pc_10008500, label %dec_label_pc_10006688

dec_label_pc_10006688:                            ; preds = %dec_label_pc_10006680
  %v1_10006688 = icmp slt i32 %v0_10006550, 117
  %v3_10006688 = icmp eq i32 %v0_10006550, 117
  store i1 %v1_10006688, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006688, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006688, label %dec_label_pc_100084ec, label %dec_label_pc_10006690

dec_label_pc_10006690:                            ; preds = %dec_label_pc_10006688
  %v1_10006690 = icmp slt i32 %v0_10006550, 80
  %v3_10006690 = icmp eq i32 %v0_10006550, 80
  store i1 %v1_10006690, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006690, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006690, label %dec_label_pc_100084c8, label %dec_label_pc_10006698

dec_label_pc_10006698:                            ; preds = %dec_label_pc_10006690
  %v1_10006698 = icmp slt i32 %v0_10006550, 209
  %v3_10006698 = icmp eq i32 %v0_10006550, 209
  store i1 %v1_10006698, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006698, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006698, label %dec_label_pc_10008490, label %dec_label_pc_100066a0

dec_label_pc_100066a0:                            ; preds = %dec_label_pc_10006698
  %v1_100066a0 = icmp slt i32 %v0_10006550, 64
  %v3_100066a0 = icmp eq i32 %v0_10006550, 64
  store i1 %v1_100066a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066a0, label %dec_label_pc_10008444, label %dec_label_pc_100066a8

dec_label_pc_100066a8:                            ; preds = %dec_label_pc_100066a0
  %v1_100066a8 = icmp slt i32 %v0_10006550, 172
  %v3_100066a8 = icmp eq i32 %v0_10006550, 172
  store i1 %v1_100066a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066a8, label %dec_label_pc_10008418, label %dec_label_pc_100066b0

dec_label_pc_100066b0:                            ; preds = %dec_label_pc_100066a8
  %v1_100066b0 = icmp slt i32 %v0_10006550, 100
  %v3_100066b0 = icmp eq i32 %v0_10006550, 100
  store i1 %v1_100066b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066b0, label %dec_label_pc_10008404, label %dec_label_pc_100066b8

dec_label_pc_100066b8:                            ; preds = %dec_label_pc_100066b0
  %v1_100066b8 = icmp slt i32 %v0_10006550, 169
  %v3_100066b8 = icmp eq i32 %v0_10006550, 169
  store i1 %v1_100066b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066b8, label %dec_label_pc_100083c0, label %dec_label_pc_100066c0

dec_label_pc_100066c0:                            ; preds = %dec_label_pc_100066b8
  %v1_100066c0 = icmp slt i32 %v0_10006550, 198
  %v3_100066c0 = icmp eq i32 %v0_10006550, 198
  store i1 %v1_100066c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c0, label %dec_label_pc_10008384, label %dec_label_pc_100066c8

dec_label_pc_100066c8:                            ; preds = %dec_label_pc_100066c0
  %v1_100066c8 = icmp slt i32 %v0_10006550, 128
  %v3_100066c8 = icmp eq i32 %v0_10006550, 128
  store i1 %v1_100066c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c8, label %dec_label_pc_10008370, label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066c8
  %v1_100066d0 = icmp slt i32 %v0_10006550, 129
  %v3_100066d0 = icmp eq i32 %v0_10006550, 129
  store i1 %v1_100066d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066d0, label %dec_label_pc_1000835c, label %dec_label_pc_100066d8

dec_label_pc_100066d8:                            ; preds = %dec_label_pc_100066d0
  %v1_100066d8 = icmp slt i32 %v0_10006550, 130
  %v3_100066d8 = icmp eq i32 %v0_10006550, 130
  store i1 %v1_100066d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066d8, label %dec_label_pc_10008348, label %dec_label_pc_100066e0

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_100066d8
  %v1_100066e0 = icmp slt i32 %v0_10006550, 131
  %v3_100066e0 = icmp eq i32 %v0_10006550, 131
  store i1 %v1_100066e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066e0, label %dec_label_pc_10008334, label %dec_label_pc_100066e8

dec_label_pc_100066e8:                            ; preds = %dec_label_pc_100066e0
  %v1_100066e8 = icmp slt i32 %v0_10006550, 132
  %v3_100066e8 = icmp eq i32 %v0_10006550, 132
  store i1 %v1_100066e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066e8, label %dec_label_pc_10008320, label %dec_label_pc_100066f0

dec_label_pc_100066f0:                            ; preds = %dec_label_pc_100066e8
  %v1_100066f0 = icmp slt i32 %v0_10006550, 134
  %v3_100066f0 = icmp eq i32 %v0_10006550, 134
  store i1 %v1_100066f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066f0, label %dec_label_pc_1000830c, label %dec_label_pc_100066f8

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_100066f0
  %v1_100066f8 = icmp slt i32 %v0_10006550, 136
  %v3_100066f8 = icmp eq i32 %v0_10006550, 136
  store i1 %v1_100066f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066f8, label %dec_label_pc_100082f8, label %dec_label_pc_10006700

dec_label_pc_10006700:                            ; preds = %dec_label_pc_100066f8
  %v1_10006700 = icmp slt i32 %v0_10006550, 138
  %v3_10006700 = icmp eq i32 %v0_10006550, 138
  store i1 %v1_10006700, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006700, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006700, label %dec_label_pc_100082d4, label %dec_label_pc_10006708

dec_label_pc_10006708:                            ; preds = %dec_label_pc_10006700
  %v1_10006708 = icmp slt i32 %v0_10006550, 139
  %v3_10006708 = icmp eq i32 %v0_10006550, 139
  store i1 %v1_10006708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006708, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006708, label %dec_label_pc_100082b8, label %dec_label_pc_10006710

dec_label_pc_10006710:                            ; preds = %dec_label_pc_10006708
  %v1_10006710 = icmp slt i32 %v0_10006550, 140
  %v3_10006710 = icmp eq i32 %v0_10006550, 140
  store i1 %v1_10006710, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006710, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006710, label %dec_label_pc_100082a4, label %dec_label_pc_10006718

dec_label_pc_10006718:                            ; preds = %dec_label_pc_10006710
  %v1_10006718 = icmp slt i32 %v0_10006550, 143
  %v3_10006718 = icmp eq i32 %v0_10006550, 143
  store i1 %v1_10006718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006718, label %dec_label_pc_10008290, label %dec_label_pc_10006720

dec_label_pc_10006720:                            ; preds = %dec_label_pc_10006718
  %v1_10006720 = icmp slt i32 %v0_10006550, 144
  %v3_10006720 = icmp eq i32 %v0_10006550, 144
  store i1 %v1_10006720, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006720, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006720, label %dec_label_pc_1000827c, label %dec_label_pc_10006728

dec_label_pc_10006728:                            ; preds = %dec_label_pc_10006720
  %v1_10006728 = icmp slt i32 %v0_10006550, 153
  %v3_10006728 = icmp eq i32 %v0_10006550, 153
  store i1 %v1_10006728, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006728, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006728, label %dec_label_pc_10008268, label %dec_label_pc_10006730

dec_label_pc_10006730:                            ; preds = %dec_label_pc_10006728
  %v1_10006730 = icmp slt i32 %v0_10006550, 158
  %v3_10006730 = icmp eq i32 %v0_10006550, 158
  store i1 %v1_10006730, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006730, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006730, label %dec_label_pc_10008244, label %dec_label_pc_10006738

dec_label_pc_10006738:                            ; preds = %dec_label_pc_10006730
  %v1_10006738 = icmp slt i32 %v0_10006550, 159
  %v3_10006738 = icmp eq i32 %v0_10006550, 159
  store i1 %v1_10006738, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006738, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006738, label %dec_label_pc_10008228, label %dec_label_pc_10006740

dec_label_pc_10006740:                            ; preds = %dec_label_pc_10006738
  %v1_10006740 = icmp slt i32 %v0_10006550, 160
  %v3_10006740 = icmp eq i32 %v0_10006550, 160
  store i1 %v1_10006740, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006740, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006740, label %dec_label_pc_10008214, label %dec_label_pc_10006748

dec_label_pc_10006748:                            ; preds = %dec_label_pc_10006740
  %v1_10006748 = icmp slt i32 %v0_10006550, 163
  %v3_10006748 = icmp eq i32 %v0_10006550, 163
  store i1 %v1_10006748, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006748, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006748, label %dec_label_pc_10008184, label %dec_label_pc_10006750

dec_label_pc_10006750:                            ; preds = %dec_label_pc_10006748
  %v1_10006750 = icmp slt i32 %v0_10006550, 199
  %v3_10006750 = icmp eq i32 %v0_10006550, 199
  store i1 %v1_10006750, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006750, label %dec_label_pc_10008170, label %dec_label_pc_10006758

dec_label_pc_10006758:                            ; preds = %dec_label_pc_10006750
  %v1_10006758 = icmp slt i32 %v0_10006550, 205
  %v3_10006758 = icmp eq i32 %v0_10006550, 205
  store i1 %v1_10006758, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006758, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006758, label %dec_label_pc_10008148, label %dec_label_pc_10006760

dec_label_pc_10006760:                            ; preds = %dec_label_pc_10006758
  %v1_10006760 = icmp slt i32 %v0_10006550, 104
  %v3_10006760 = icmp eq i32 %v0_10006550, 104
  store i1 %v1_10006760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006760, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006760, label %dec_label_pc_10008104, label %dec_label_pc_10006768

dec_label_pc_10006768:                            ; preds = %dec_label_pc_10006760
  %v1_10006768 = icmp slt i32 %v0_10006550, 188
  %v3_10006768 = icmp eq i32 %v0_10006550, 188
  store i1 %v1_10006768, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006768, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006768, label %dec_label_pc_100080b0, label %dec_label_pc_10006770

dec_label_pc_10006770:                            ; preds = %dec_label_pc_10006768
  %v1_10006770 = icmp slt i32 %v0_10006550, 45
  %v3_10006770 = icmp eq i32 %v0_10006550, 45
  store i1 %v1_10006770, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006770, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006770, label %dec_label_pc_10008094, label %dec_label_pc_10006778

dec_label_pc_10006778:                            ; preds = %dec_label_pc_10006770
  %v1_10006778 = icmp slt i32 %v0_10006550, 178
  %v3_10006778 = icmp eq i32 %v0_10006550, 178
  store i1 %v1_10006778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006778, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006778, label %dec_label_pc_10008050, label %dec_label_pc_10006780

dec_label_pc_10006780:                            ; preds = %dec_label_pc_10006778
  %v1_10006780 = icmp slt i32 %v0_10006550, 107
  %v3_10006780 = icmp eq i32 %v0_10006550, 107
  store i1 %v1_10006780, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006780, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006780, label %dec_label_pc_10008024, label %dec_label_pc_10006788

dec_label_pc_10006788:                            ; preds = %dec_label_pc_10006780
  %v1_10006788 = icmp slt i32 %v0_10006550, 174
  %v3_10006788 = icmp eq i32 %v0_10006550, 174
  store i1 %v1_10006788, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006788, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006788, label %dec_label_pc_10007fe0, label %dec_label_pc_10006790

dec_label_pc_10006790:                            ; preds = %dec_label_pc_10006788
  %v1_10006790 = icmp slt i32 %v0_10006550, 37
  %v3_10006790 = icmp eq i32 %v0_10006550, 37
  store i1 %v1_10006790, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006790, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006790, label %dec_label_pc_10007fc4, label %dec_label_pc_10006798

dec_label_pc_10006798:                            ; preds = %dec_label_pc_10006790
  %v1_10006798 = icmp slt i32 %v0_10006550, 67
  %v3_10006798 = icmp eq i32 %v0_10006550, 67
  store i1 %v1_10006798, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006798, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006798, label %dec_label_pc_10007fa0, label %dec_label_pc_100067a0

dec_label_pc_100067a0:                            ; preds = %dec_label_pc_10006798
  %v1_100067a0 = icmp slt i32 %v0_10006550, 82
  %v3_100067a0 = icmp eq i32 %v0_10006550, 82
  store i1 %v1_100067a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067a0, label %dec_label_pc_10007f84, label %dec_label_pc_100067a8

dec_label_pc_100067a8:                            ; preds = %dec_label_pc_100067a0
  %v1_100067a8 = icmp slt i32 %v0_10006550, 95
  %v3_100067a8 = icmp eq i32 %v0_10006550, 95
  store i1 %v1_100067a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067a8, label %dec_label_pc_10007f18, label %dec_label_pc_100067b0

dec_label_pc_100067b0:                            ; preds = %dec_label_pc_100067a8
  %v1_100067b0 = icmp slt i32 %v0_10006550, 185
  %v3_100067b0 = icmp eq i32 %v0_10006550, 185
  store i1 %v1_100067b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067b0, label %dec_label_pc_10007edc, label %dec_label_pc_100067b8

dec_label_pc_100067b8:                            ; preds = %dec_label_pc_100067b0
  %v1_100067b8 = icmp slt i32 %v0_10006550, 208
  %v3_100067b8 = icmp eq i32 %v0_10006550, 208
  store i1 %v1_100067b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067b8, label %dec_label_pc_10007e4c, label %dec_label_pc_100067c0

dec_label_pc_100067c0:                            ; preds = %dec_label_pc_100067b8
  %v1_100067c0 = icmp slt i32 %v0_10006550, 66
  %v3_100067c0 = icmp eq i32 %v0_10006550, 66
  store i1 %v1_100067c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067c0, label %dec_label_pc_10007e18, label %dec_label_pc_100067c8

dec_label_pc_100067c8:                            ; preds = %dec_label_pc_100067c0
  %v1_100067c8 = icmp slt i32 %v0_10006550, 216
  %v3_100067c8 = icmp eq i32 %v0_10006550, 216
  store i1 %v1_100067c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067c8, label %dec_label_pc_10007dcc, label %dec_label_pc_100067d0

dec_label_pc_100067d0:                            ; preds = %dec_label_pc_100067c8
  %v1_100067d0 = icmp slt i32 %v0_10006550, 108
  %v3_100067d0 = icmp eq i32 %v0_10006550, 108
  store i1 %v1_100067d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067d0, label %dec_label_pc_10007dc0, label %dec_label_pc_100067d8

dec_label_pc_100067d8:                            ; preds = %dec_label_pc_100067d0
  %v1_100067d8 = icmp slt i32 %v0_10006550, 63
  %v3_100067d8 = icmp eq i32 %v0_10006550, 63
  store i1 %v1_100067d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067d8, label %dec_label_pc_10007de8, label %dec_label_pc_100067e0

dec_label_pc_100067e0:                            ; preds = %dec_label_pc_100067d8
  %v1_100067e0 = icmp slt i32 %v0_10006550, 70
  %v3_100067e0 = icmp eq i32 %v0_10006550, 70
  store i1 %v1_100067e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067e0, label %dec_label_pc_10007da4, label %dec_label_pc_100067e8

dec_label_pc_100067e8:                            ; preds = %dec_label_pc_100067e0
  %v1_100067e8 = icmp slt i32 %v0_10006550, 74
  %v3_100067e8 = icmp eq i32 %v0_10006550, 74
  store i1 %v1_100067e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067e8, label %dec_label_pc_10007d80, label %dec_label_pc_100067f0

dec_label_pc_100067f0:                            ; preds = %dec_label_pc_100067e8
  %v1_100067f0 = icmp slt i32 %v0_10006550, 149
  %v3_100067f0 = icmp eq i32 %v0_10006550, 149
  store i1 %v1_100067f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067f0, label %dec_label_pc_10007d74, label %dec_label_pc_100067f8

dec_label_pc_100067f8:                            ; preds = %dec_label_pc_100067f0
  %v1_100067f8 = icmp slt i32 %v0_10006550, 151
  %v3_100067f8 = icmp eq i32 %v0_10006550, 151
  store i1 %v1_100067f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067f8, label %dec_label_pc_10007d68, label %dec_label_pc_10006800

dec_label_pc_10006800:                            ; preds = %dec_label_pc_100067f8
  %v1_10006800 = icmp slt i32 %v0_10006550, 176
  %v3_10006800 = icmp eq i32 %v0_10006550, 176
  store i1 %v1_10006800, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006800, label %dec_label_pc_10007d5c, label %dec_label_pc_10006808

dec_label_pc_10006808:                            ; preds = %dec_label_pc_10006800
  %v1_10006808 = icmp slt i32 %v0_10006550, 46
  %v3_10006808 = icmp eq i32 %v0_10006550, 46
  store i1 %v1_10006808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006808, label %dec_label_pc_10007d50, label %dec_label_pc_10006810

dec_label_pc_10006810:                            ; preds = %dec_label_pc_10006808
  %v1_10006810 = icmp slt i32 %v0_10006550, 51
  %v3_10006810 = icmp eq i32 %v0_10006550, 51
  store i1 %v1_10006810, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006810, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006810, label %dec_label_pc_10007d34, label %dec_label_pc_10006818

dec_label_pc_10006818:                            ; preds = %dec_label_pc_10006810
  %v1_10006818 = icmp slt i32 %v0_10006550, 5
  %v3_10006818 = icmp eq i32 %v0_10006550, 5
  store i1 %v1_10006818, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006818, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006818, label %dec_label_pc_10007d18, label %dec_label_pc_10006820

dec_label_pc_10006820:                            ; preds = %dec_label_pc_10006818
  %v1_10006820 = icmp slt i32 %v0_10006550, 91
  %v3_10006820 = icmp eq i32 %v0_10006550, 91
  store i1 %v1_10006820, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006820, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006820, label %dec_label_pc_10007d0c, label %dec_label_pc_10006828

dec_label_pc_10006828:                            ; preds = %dec_label_pc_10006820
  %v1_10006828 = icmp slt i32 %v0_10006550, 184
  %v3_10006828 = icmp eq i32 %v0_10006550, 184
  store i1 %v1_10006828, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006828, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006828, label %dec_label_pc_10007cf0, label %dec_label_pc_10006830

dec_label_pc_10006830:                            ; preds = %dec_label_pc_10006828
  %v1_10006830 = icmp slt i32 %v0_10006550, 206
  %v3_10006830 = icmp eq i32 %v0_10006550, 206
  store i1 %v1_10006830, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006830, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006830, label %dec_label_pc_10007cd4, label %dec_label_pc_10006838

dec_label_pc_10006838:                            ; preds = %dec_label_pc_10006830
  %v1_10006838 = icmp slt i32 %v0_10006550, 98
  %v3_10006838 = icmp eq i32 %v0_10006550, 98
  store i1 %v1_10006838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006838, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006838, label %dec_label_pc_10007cb8, label %dec_label_pc_10006840

dec_label_pc_10006840:                            ; preds = %dec_label_pc_10006838
  %v1_10006840 = icmp slt i32 %v0_10006550, 35
  %v3_10006840 = icmp eq i32 %v0_10006550, 35
  store i1 %v1_10006840, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006840, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006840, label %dec_label_pc_10007ca4, label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_10006840
  %v1_10006848 = icmp slt i32 %v0_10006550, 52
  %v3_10006848 = icmp eq i32 %v0_10006550, 52
  store i1 %v1_10006848, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006848, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006848, label %dec_label_pc_10007c88, label %dec_label_pc_10006850

dec_label_pc_10006850:                            ; preds = %dec_label_pc_10006848
  %v1_10006850 = icmp slt i32 %v0_10006550, 54
  %v3_10006850 = icmp eq i32 %v0_10006550, 54
  store i1 %v1_10006850, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006850, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006850, label %dec_label_pc_10007c64, label %dec_label_pc_10006858

dec_label_pc_10006858:                            ; preds = %dec_label_pc_10006850
  %v1_10006858 = icmp slt i32 %v0_10006550, 13
  %v3_10006858 = icmp eq i32 %v0_10006550, 13
  store i1 %v1_10006858, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006858, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006858, label %dec_label_pc_10007c40, label %dec_label_pc_10006860

dec_label_pc_10006860:                            ; preds = %dec_label_pc_10006858
  %v1_10006860 = icmp slt i32 %v0_10006550, 79
  %v3_10006860 = icmp eq i32 %v0_10006550, 79
  store i1 %v1_10006860, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006860, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006860, label %dec_label_pc_10007c24, label %dec_label_pc_10006868

dec_label_pc_10006868:                            ; preds = %dec_label_pc_10006860
  %v1_10006868 = icmp slt i32 %v0_10006550, 212
  %v3_10006868 = icmp eq i32 %v0_10006550, 212
  store i1 %v1_10006868, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006868, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006868, label %dec_label_pc_10007c08, label %dec_label_pc_10006870

dec_label_pc_10006870:                            ; preds = %dec_label_pc_10006868
  %v1_10006870 = icmp slt i32 %v0_10006550, 89
  %v3_10006870 = icmp eq i32 %v0_10006550, 89
  store i1 %v1_10006870, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006870, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006870, label %dec_label_pc_10007bec, label %dec_label_pc_10006878

dec_label_pc_10006878:                            ; preds = %dec_label_pc_10006870
  %v1_10006878 = icmp slt i32 %v0_10006550, 219
  %v3_10006878 = icmp eq i32 %v0_10006550, 219
  store i1 %v1_10006878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006878, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006878, label %dec_label_pc_10007bd8, label %dec_label_pc_10006880

dec_label_pc_10006880:                            ; preds = %dec_label_pc_10006878
  %v1_10006880 = icmp slt i32 %v0_10006550, 23
  %v3_10006880 = icmp eq i32 %v0_10006550, 23
  store i1 %v1_10006880, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006880, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006880, label %dec_label_pc_10007bc4, label %dec_label_pc_10006888

dec_label_pc_10006888:                            ; preds = %dec_label_pc_10006880
  %v1_10006888 = icmp slt i32 %v0_10006550, 106
  %v3_10006888 = icmp eq i32 %v0_10006550, 106
  store i1 %v1_10006888, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006888, label %dec_label_pc_10007bb0, label %dec_label_pc_10006890

dec_label_pc_10006890:                            ; preds = %dec_label_pc_10006888
  %v1_10006890 = icmp slt i32 %v0_10006550, 34
  %v3_10006890 = icmp eq i32 %v0_10006550, 34
  store i1 %v1_10006890, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006890, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006890, label %dec_label_pc_10007b9c, label %dec_label_pc_10006898

dec_label_pc_10006898:                            ; preds = %dec_label_pc_10006890
  %v1_10006898 = icmp slt i32 %v0_10006550, 87
  %v3_10006898 = icmp eq i32 %v0_10006550, 87
  store i1 %v1_10006898, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006898, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006898, label %dec_label_pc_10007b88, label %dec_label_pc_100068a0

dec_label_pc_100068a0:                            ; preds = %dec_label_pc_10006898
  %v1_100068a0 = icmp slt i32 %v0_10006550, 86
  %v3_100068a0 = icmp eq i32 %v0_10006550, 86
  store i1 %v1_100068a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068a0, label %dec_label_pc_10007b74, label %dec_label_pc_100068a8

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_100068a0
  %v1_100068a8 = icmp slt i32 %v0_10006550, 193
  %v3_100068a8 = icmp eq i32 %v0_10006550, 193
  store i1 %v1_100068a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068a8, label %dec_label_pc_10007b68, label %dec_label_pc_100068b0

dec_label_pc_100068b0:                            ; preds = %dec_label_pc_100068a8
  %v1_100068b0 = icmp slt i32 %v0_10006550, 120
  %v3_100068b0 = icmp eq i32 %v0_10006550, 120
  store i1 %v1_100068b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068b0, label %dec_label_pc_10007b54, label %dec_label_pc_100068b8

dec_label_pc_100068b8:                            ; preds = %dec_label_pc_100068b0
  %v1_100068b8 = icmp slt i32 %v0_10006550, 78
  %v3_100068b8 = icmp eq i32 %v0_10006550, 78
  store i1 %v1_100068b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068b8, label %dec_label_pc_10007b48, label %dec_label_pc_100068c0

dec_label_pc_100068c0:                            ; preds = %dec_label_pc_100068b8
  %v1_100068c0 = icmp slt i32 %v0_10006550, 224
  %v3_100068c0 = icmp eq i32 %v0_10006550, 224
  store i1 %v1_100068c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068c0, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100068c8:                            ; preds = %dec_label_pc_10008720, %dec_label_pc_1000870c, %dec_label_pc_100086f8, %dec_label_pc_100086e4, %dec_label_pc_10008688, %dec_label_pc_10008664, %dec_label_pc_10008640, %dec_label_pc_10008634, %dec_label_pc_10008610, %dec_label_pc_10008604, %dec_label_pc_100085b0, %dec_label_pc_10008584, %dec_label_pc_10008578, %dec_label_pc_10008564, %dec_label_pc_10008548, %dec_label_pc_1000853c, %dec_label_pc_10008530, %dec_label_pc_100084f4, %dec_label_pc_100084e0, %dec_label_pc_100084bc, %dec_label_pc_100084a8, %dec_label_pc_10008438, %dec_label_pc_1000840c, %dec_label_pc_100083f8, %dec_label_pc_100083e4, %dec_label_pc_100083d0, %dec_label_pc_100083b4, %dec_label_pc_10008378, %dec_label_pc_10008364, %dec_label_pc_10008350, %dec_label_pc_1000833c, %dec_label_pc_10008328, %dec_label_pc_10008314, %dec_label_pc_10008300, %dec_label_pc_100082ac, %dec_label_pc_10008298, %dec_label_pc_10008284, %dec_label_pc_10008270, %dec_label_pc_1000825c, %dec_label_pc_10008238, %dec_label_pc_1000821c, %dec_label_pc_10008208, %dec_label_pc_100081f4, %dec_label_pc_100081e0, %dec_label_pc_100081cc, %dec_label_pc_100081b8, %dec_label_pc_1000818c, %dec_label_pc_10008178, %dec_label_pc_10008164, %dec_label_pc_10008150, %dec_label_pc_1000813c, %dec_label_pc_100080f8, %dec_label_pc_100080e4, %dec_label_pc_100080d0, %dec_label_pc_100080a4, %dec_label_pc_10008088, %dec_label_pc_10008074, %dec_label_pc_10008060, %dec_label_pc_10008044, %dec_label_pc_10008018, %dec_label_pc_10008004, %dec_label_pc_10007ff0, %dec_label_pc_10007fd4, %dec_label_pc_10007fb8, %dec_label_pc_10007f94, %dec_label_pc_10007f78, %dec_label_pc_10007f64, %dec_label_pc_10007f50, %dec_label_pc_10007f3c, %dec_label_pc_10007f28, %dec_label_pc_10007f0c, %dec_label_pc_10007ed0, %dec_label_pc_10007ebc, %dec_label_pc_10007ea8, %dec_label_pc_10007e94, %dec_label_pc_10007e80, %dec_label_pc_10007e6c, %dec_label_pc_10007e40, %dec_label_pc_10007e0c, %dec_label_pc_10007df8, %dec_label_pc_10007ddc, %dec_label_pc_10007dc0, %dec_label_pc_10007db4, %dec_label_pc_10007d98, %dec_label_pc_10007d74, %dec_label_pc_10007d68, %dec_label_pc_10007d5c, %dec_label_pc_10007d50, %dec_label_pc_10007d44, %dec_label_pc_10007d28, %dec_label_pc_10007d0c, %dec_label_pc_10007d00, %dec_label_pc_10007ce4, %dec_label_pc_10007cc8, %dec_label_pc_10007cac, %dec_label_pc_10007c98, %dec_label_pc_10007c7c, %dec_label_pc_10007c58, %dec_label_pc_10007c34, %dec_label_pc_10007c18, %dec_label_pc_10007bfc, %dec_label_pc_10007be0, %dec_label_pc_10007bcc, %dec_label_pc_10007bb8, %dec_label_pc_10007ba4, %dec_label_pc_10007b90, %dec_label_pc_10007b7c, %dec_label_pc_10007b68, %dec_label_pc_10007b5c, %dec_label_pc_10007b48, %dec_label_pc_10006c90, %dec_label_pc_10006c7c, %dec_label_pc_10006b20, %dec_label_pc_10006ad4, %dec_label_pc_10006ac4, %dec_label_pc_10006b10, %dec_label_pc_10008520, %dec_label_pc_100084d0, %dec_label_pc_10008498, %dec_label_pc_10008428, %dec_label_pc_100083a4, %dec_label_pc_100081a8, %dec_label_pc_1000812c, %dec_label_pc_10007fe0, %dec_label_pc_10007fa8, %dec_label_pc_10007f84, %dec_label_pc_10007f18, %dec_label_pc_10007efc, %dec_label_pc_10007e5c, %dec_label_pc_10007e30, %dec_label_pc_10007dcc, %dec_label_pc_10007de8, %dec_label_pc_10007da4, %dec_label_pc_10007d88, %dec_label_pc_10007cf0, %dec_label_pc_10007cd4, %dec_label_pc_10007cb8, %dec_label_pc_10007c24, %dec_label_pc_10007c08, %dec_label_pc_10007bec, %dec_label_pc_10008718, %dec_label_pc_10008704, %dec_label_pc_100086f0, %dec_label_pc_100086dc, %dec_label_pc_10008680, %dec_label_pc_1000865c, %dec_label_pc_100085fc, %dec_label_pc_10008528, %dec_label_pc_100084d8, %dec_label_pc_100084b4, %dec_label_pc_100084a0, %dec_label_pc_10008430, %dec_label_pc_10008404, %dec_label_pc_100083f0, %dec_label_pc_100083dc, %dec_label_pc_100083c8, %dec_label_pc_100083ac, %dec_label_pc_10008370, %dec_label_pc_1000835c, %dec_label_pc_10008348, %dec_label_pc_10008334, %dec_label_pc_10008320, %dec_label_pc_1000830c, %dec_label_pc_100082f8, %dec_label_pc_100082a4, %dec_label_pc_10008290, %dec_label_pc_1000827c, %dec_label_pc_10008268, %dec_label_pc_10008254, %dec_label_pc_10008244, %dec_label_pc_10008214, %dec_label_pc_10008200, %dec_label_pc_100081ec, %dec_label_pc_100081d8, %dec_label_pc_100081b0, %dec_label_pc_1000815c, %dec_label_pc_10008148, %dec_label_pc_10008134, %dec_label_pc_100080f0, %dec_label_pc_100080dc, %dec_label_pc_10008080, %dec_label_pc_1000806c, %dec_label_pc_1000803c, %dec_label_pc_10008010, %dec_label_pc_10007ffc, %dec_label_pc_10007fe8, %dec_label_pc_10007fb0, %dec_label_pc_10007f8c, %dec_label_pc_10007f70, %dec_label_pc_10007f5c, %dec_label_pc_10007f48, %dec_label_pc_10007f34, %dec_label_pc_10007f20, %dec_label_pc_10007f04, %dec_label_pc_10007ec8, %dec_label_pc_10007eb4, %dec_label_pc_10007ea0, %dec_label_pc_10007e8c, %dec_label_pc_10007e78, %dec_label_pc_10007e64, %dec_label_pc_10007e38, %dec_label_pc_10007e04, %dec_label_pc_10007df0, %dec_label_pc_10007dd4, %dec_label_pc_10007dac, %dec_label_pc_10007d90, %dec_label_pc_10007cf8, %dec_label_pc_10007cdc, %dec_label_pc_10007cc0, %dec_label_pc_10007ca4, %dec_label_pc_10007c88, %dec_label_pc_10007c74, %dec_label_pc_10007c50, %dec_label_pc_10007c2c, %dec_label_pc_10007c10, %dec_label_pc_10007bf4, %dec_label_pc_10007bd8, %dec_label_pc_10007bc4, %dec_label_pc_10007bb0, %dec_label_pc_10007b9c, %dec_label_pc_10007b88, %dec_label_pc_10007b54, %dec_label_pc_10006c74, %dec_label_pc_10006b18, %dec_label_pc_10006acc, %dec_label_pc_100068c0, %dec_label_pc_100086dc.thread, %dec_label_pc_10008610.thread, %dec_label_pc_100085fc.thread, %dec_label_pc_10007c74.thread, %dec_label_pc_10007c50.thread, %dec_label_pc_10008634.thread, %dec_label_pc_10008520.thread, %dec_label_pc_10008474, %dec_label_pc_10008428.thread, %dec_label_pc_100083a4.thread, %dec_label_pc_100082ec, %dec_label_pc_100082c8, %dec_label_pc_10008238.thread, %dec_label_pc_1000812c.thread, %dec_label_pc_10006b10.thread
  %v0_10006550594 = phi i32 [ 162, %dec_label_pc_10008634.thread ], [ 207, %dec_label_pc_10008520.thread ], [ 64, %dec_label_pc_10008474 ], [ 172, %dec_label_pc_10008428.thread ], [ 198, %dec_label_pc_100083a4.thread ], [ 138, %dec_label_pc_100082ec ], [ 139, %dec_label_pc_100082c8 ], [ 159, %dec_label_pc_10008238.thread ], [ 104, %dec_label_pc_1000812c.thread ], [ 146, %dec_label_pc_10006b10.thread ], [ 13, %dec_label_pc_10007c50.thread ], [ 54, %dec_label_pc_10007c74.thread ], [ 155, %dec_label_pc_100085fc.thread ], [ 164, %dec_label_pc_10008610.thread ], [ 147, %dec_label_pc_100086dc.thread ], [ %v0_10006550, %dec_label_pc_100068c0 ], [ 192, %dec_label_pc_10006acc ], [ 146, %dec_label_pc_10006b18 ], [ 150, %dec_label_pc_10006c74 ], [ 120, %dec_label_pc_10007b54 ], [ 87, %dec_label_pc_10007b88 ], [ 34, %dec_label_pc_10007b9c ], [ 106, %dec_label_pc_10007bb0 ], [ 23, %dec_label_pc_10007bc4 ], [ 219, %dec_label_pc_10007bd8 ], [ 89, %dec_label_pc_10007bf4 ], [ 212, %dec_label_pc_10007c10 ], [ 79, %dec_label_pc_10007c2c ], [ 13, %dec_label_pc_10007c50 ], [ 54, %dec_label_pc_10007c74 ], [ 52, %dec_label_pc_10007c88 ], [ 35, %dec_label_pc_10007ca4 ], [ 98, %dec_label_pc_10007cc0 ], [ 206, %dec_label_pc_10007cdc ], [ 184, %dec_label_pc_10007cf8 ], [ 74, %dec_label_pc_10007d90 ], [ 70, %dec_label_pc_10007dac ], [ 216, %dec_label_pc_10007dd4 ], [ 63, %dec_label_pc_10007df0 ], [ 74, %dec_label_pc_10007e04 ], [ 66, %dec_label_pc_10007e38 ], [ 208, %dec_label_pc_10007e64 ], [ 66, %dec_label_pc_10007e78 ], [ 208, %dec_label_pc_10007e8c ], [ 208, %dec_label_pc_10007ea0 ], [ 66, %dec_label_pc_10007eb4 ], [ 66, %dec_label_pc_10007ec8 ], [ 185, %dec_label_pc_10007f04 ], [ 95, %dec_label_pc_10007f20 ], [ 185, %dec_label_pc_10007f34 ], [ 185, %dec_label_pc_10007f48 ], [ 185, %dec_label_pc_10007f5c ], [ 185, %dec_label_pc_10007f70 ], [ 82, %dec_label_pc_10007f8c ], [ 67, %dec_label_pc_10007fb0 ], [ 174, %dec_label_pc_10007fe8 ], [ 67, %dec_label_pc_10007ffc ], [ 37, %dec_label_pc_10008010 ], [ 107, %dec_label_pc_1000803c ], [ 107, %dec_label_pc_1000806c ], [ 107, %dec_label_pc_10008080 ], [ 45, %dec_label_pc_100080dc ], [ 188, %dec_label_pc_100080f0 ], [ 104, %dec_label_pc_10008134 ], [ 205, %dec_label_pc_10008148 ], [ 104, %dec_label_pc_1000815c ], [ 199, %dec_label_pc_100081b0 ], [ 199, %dec_label_pc_100081d8 ], [ 199, %dec_label_pc_100081ec ], [ 163, %dec_label_pc_10008200 ], [ 160, %dec_label_pc_10008214 ], [ 158, %dec_label_pc_10008244 ], [ 158, %dec_label_pc_10008254 ], [ 153, %dec_label_pc_10008268 ], [ 144, %dec_label_pc_1000827c ], [ 143, %dec_label_pc_10008290 ], [ 140, %dec_label_pc_100082a4 ], [ 136, %dec_label_pc_100082f8 ], [ 134, %dec_label_pc_1000830c ], [ 132, %dec_label_pc_10008320 ], [ 131, %dec_label_pc_10008334 ], [ 130, %dec_label_pc_10008348 ], [ 129, %dec_label_pc_1000835c ], [ 128, %dec_label_pc_10008370 ], [ 198, %dec_label_pc_100083ac ], [ 169, %dec_label_pc_100083c8 ], [ 198, %dec_label_pc_100083dc ], [ 198, %dec_label_pc_100083f0 ], [ 100, %dec_label_pc_10008404 ], [ 172, %dec_label_pc_10008430 ], [ 209, %dec_label_pc_100084a0 ], [ 64, %dec_label_pc_100084b4 ], [ 80, %dec_label_pc_100084d8 ], [ 207, %dec_label_pc_10008528 ], [ 155, %dec_label_pc_100085fc ], [ 157, %dec_label_pc_1000865c ], [ 152, %dec_label_pc_10008680 ], [ 147, %dec_label_pc_100086dc ], [ 192, %dec_label_pc_100086f0 ], [ 192, %dec_label_pc_10008704 ], [ 192, %dec_label_pc_10008718 ], [ 89, %dec_label_pc_10007bec ], [ 212, %dec_label_pc_10007c08 ], [ 79, %dec_label_pc_10007c24 ], [ 98, %dec_label_pc_10007cb8 ], [ 206, %dec_label_pc_10007cd4 ], [ 184, %dec_label_pc_10007cf0 ], [ 74, %dec_label_pc_10007d88 ], [ 70, %dec_label_pc_10007da4 ], [ 63, %dec_label_pc_10007de8 ], [ 216, %dec_label_pc_10007dcc ], [ 66, %dec_label_pc_10007e30 ], [ 208, %dec_label_pc_10007e5c ], [ 185, %dec_label_pc_10007efc ], [ 95, %dec_label_pc_10007f18 ], [ 82, %dec_label_pc_10007f84 ], [ 67, %dec_label_pc_10007fa8 ], [ 174, %dec_label_pc_10007fe0 ], [ 104, %dec_label_pc_1000812c ], [ 199, %dec_label_pc_100081a8 ], [ 198, %dec_label_pc_100083a4 ], [ 172, %dec_label_pc_10008428 ], [ 209, %dec_label_pc_10008498 ], [ 80, %dec_label_pc_100084d0 ], [ 207, %dec_label_pc_10008520 ], [ 146, %dec_label_pc_10006b10 ], [ 192, %dec_label_pc_10006ac4 ], [ 192, %dec_label_pc_10006ad4 ], [ 146, %dec_label_pc_10006b20 ], [ 150, %dec_label_pc_10006c7c ], [ 148, %dec_label_pc_10006c90 ], [ 78, %dec_label_pc_10007b48 ], [ 120, %dec_label_pc_10007b5c ], [ 193, %dec_label_pc_10007b68 ], [ 86, %dec_label_pc_10007b7c ], [ 87, %dec_label_pc_10007b90 ], [ 34, %dec_label_pc_10007ba4 ], [ 106, %dec_label_pc_10007bb8 ], [ 23, %dec_label_pc_10007bcc ], [ 219, %dec_label_pc_10007be0 ], [ 89, %dec_label_pc_10007bfc ], [ 212, %dec_label_pc_10007c18 ], [ 79, %dec_label_pc_10007c34 ], [ 13, %dec_label_pc_10007c58 ], [ 54, %dec_label_pc_10007c7c ], [ 52, %dec_label_pc_10007c98 ], [ 35, %dec_label_pc_10007cac ], [ 98, %dec_label_pc_10007cc8 ], [ 206, %dec_label_pc_10007ce4 ], [ 184, %dec_label_pc_10007d00 ], [ 91, %dec_label_pc_10007d0c ], [ 5, %dec_label_pc_10007d28 ], [ 51, %dec_label_pc_10007d44 ], [ 46, %dec_label_pc_10007d50 ], [ 176, %dec_label_pc_10007d5c ], [ 151, %dec_label_pc_10007d68 ], [ 149, %dec_label_pc_10007d74 ], [ 74, %dec_label_pc_10007d98 ], [ 70, %dec_label_pc_10007db4 ], [ 108, %dec_label_pc_10007dc0 ], [ 216, %dec_label_pc_10007ddc ], [ 63, %dec_label_pc_10007df8 ], [ 74, %dec_label_pc_10007e0c ], [ 66, %dec_label_pc_10007e40 ], [ 208, %dec_label_pc_10007e6c ], [ 66, %dec_label_pc_10007e80 ], [ 208, %dec_label_pc_10007e94 ], [ 208, %dec_label_pc_10007ea8 ], [ 66, %dec_label_pc_10007ebc ], [ 66, %dec_label_pc_10007ed0 ], [ 185, %dec_label_pc_10007f0c ], [ 95, %dec_label_pc_10007f28 ], [ 185, %dec_label_pc_10007f3c ], [ 185, %dec_label_pc_10007f50 ], [ 185, %dec_label_pc_10007f64 ], [ 185, %dec_label_pc_10007f78 ], [ 82, %dec_label_pc_10007f94 ], [ 67, %dec_label_pc_10007fb8 ], [ 37, %dec_label_pc_10007fd4 ], [ 174, %dec_label_pc_10007ff0 ], [ 67, %dec_label_pc_10008004 ], [ 37, %dec_label_pc_10008018 ], [ 107, %dec_label_pc_10008044 ], [ 178, %dec_label_pc_10008060 ], [ 107, %dec_label_pc_10008074 ], [ 107, %dec_label_pc_10008088 ], [ 45, %dec_label_pc_100080a4 ], [ 188, %dec_label_pc_100080d0 ], [ 45, %dec_label_pc_100080e4 ], [ 188, %dec_label_pc_100080f8 ], [ 104, %dec_label_pc_1000813c ], [ 205, %dec_label_pc_10008150 ], [ 104, %dec_label_pc_10008164 ], [ 199, %dec_label_pc_10008178 ], [ 163, %dec_label_pc_1000818c ], [ 199, %dec_label_pc_100081b8 ], [ 163, %dec_label_pc_100081cc ], [ 199, %dec_label_pc_100081e0 ], [ 199, %dec_label_pc_100081f4 ], [ 163, %dec_label_pc_10008208 ], [ 160, %dec_label_pc_1000821c ], [ 159, %dec_label_pc_10008238 ], [ 158, %dec_label_pc_1000825c ], [ 153, %dec_label_pc_10008270 ], [ 144, %dec_label_pc_10008284 ], [ 143, %dec_label_pc_10008298 ], [ 140, %dec_label_pc_100082ac ], [ 136, %dec_label_pc_10008300 ], [ 134, %dec_label_pc_10008314 ], [ 132, %dec_label_pc_10008328 ], [ 131, %dec_label_pc_1000833c ], [ 130, %dec_label_pc_10008350 ], [ 129, %dec_label_pc_10008364 ], [ 128, %dec_label_pc_10008378 ], [ 198, %dec_label_pc_100083b4 ], [ 169, %dec_label_pc_100083d0 ], [ 198, %dec_label_pc_100083e4 ], [ 198, %dec_label_pc_100083f8 ], [ 100, %dec_label_pc_1000840c ], [ 172, %dec_label_pc_10008438 ], [ 209, %dec_label_pc_100084a8 ], [ 64, %dec_label_pc_100084bc ], [ 80, %dec_label_pc_100084e0 ], [ 117, %dec_label_pc_100084f4 ], [ 207, %dec_label_pc_10008530 ], [ 204, %dec_label_pc_1000853c ], [ 203, %dec_label_pc_10008548 ], [ 168, %dec_label_pc_10008564 ], [ 167, %dec_label_pc_10008578 ], [ 156, %dec_label_pc_10008584 ], [ 164, %dec_label_pc_100085b0 ], [ 155, %dec_label_pc_10008604 ], [ 164, %dec_label_pc_10008610 ], [ 162, %dec_label_pc_10008634 ], [ 161, %dec_label_pc_10008640 ], [ 157, %dec_label_pc_10008664 ], [ 152, %dec_label_pc_10008688 ], [ 147, %dec_label_pc_100086e4 ], [ 192, %dec_label_pc_100086f8 ], [ 192, %dec_label_pc_1000870c ], [ 192, %dec_label_pc_10008720 ]
  %v1_10006544128 = phi i32 [ %v1_10006544, %dec_label_pc_10008634.thread ], [ %v1_10006544, %dec_label_pc_10008520.thread ], [ %v1_10006544, %dec_label_pc_10008474 ], [ %v1_10006544, %dec_label_pc_10008428.thread ], [ %v1_10006544, %dec_label_pc_100083a4.thread ], [ %v1_10006544, %dec_label_pc_100082ec ], [ %v1_10006544, %dec_label_pc_100082c8 ], [ %v1_10006544, %dec_label_pc_10008238.thread ], [ %v1_10006544, %dec_label_pc_1000812c.thread ], [ %v1_10006544, %dec_label_pc_10006b10.thread ], [ %v1_10006544, %dec_label_pc_10007c50.thread ], [ %v1_10006544, %dec_label_pc_10007c74.thread ], [ %v1_10006544, %dec_label_pc_100085fc.thread ], [ %v1_10006544, %dec_label_pc_10008610.thread ], [ %v1_10006544, %dec_label_pc_100086dc.thread ], [ %v1_10006544, %dec_label_pc_100068c0 ], [ 40, %dec_label_pc_10006acc ], [ 185, %dec_label_pc_10006b18 ], [ %v1_10006544, %dec_label_pc_10006c74 ], [ %v1_10006544, %dec_label_pc_10007b54 ], [ %v1_10006544, %dec_label_pc_10007b88 ], [ %v1_10006544, %dec_label_pc_10007b9c ], [ %v1_10006544, %dec_label_pc_10007bb0 ], [ %v1_10006544, %dec_label_pc_10007bc4 ], [ %v1_10006544, %dec_label_pc_10007bd8 ], [ 34, %dec_label_pc_10007bf4 ], [ 47, %dec_label_pc_10007c10 ], [ 121, %dec_label_pc_10007c2c ], [ %v1_10006544, %dec_label_pc_10007c50 ], [ %v1_10006544, %dec_label_pc_10007c74 ], [ 0, %dec_label_pc_10007c88 ], [ %v1_10006544, %dec_label_pc_10007ca4 ], [ 142, %dec_label_pc_10007cc0 ], [ 220, %dec_label_pc_10007cdc ], [ 170, %dec_label_pc_10007cf8 ], [ 201, %dec_label_pc_10007d90 ], [ 42, %dec_label_pc_10007dac ], [ 237, %dec_label_pc_10007dd4 ], [ 251, %dec_label_pc_10007df0 ], [ 91, %dec_label_pc_10007e04 ], [ 71, %dec_label_pc_10007e38 ], [ 93, %dec_label_pc_10007e64 ], [ 151, %dec_label_pc_10007e78 ], [ 78, %dec_label_pc_10007e8c ], [ 167, %dec_label_pc_10007ea0 ], [ 150, %dec_label_pc_10007eb4 ], [ 55, %dec_label_pc_10007ec8 ], [ 62, %dec_label_pc_10007f04 ], [ 85, %dec_label_pc_10007f20 ], [ 61, %dec_label_pc_10007f34 ], [ 56, %dec_label_pc_10007f48 ], [ 11, %dec_label_pc_10007f5c ], [ 92, %dec_label_pc_10007f70 ], [ 196, %dec_label_pc_10007f8c ], [ 205, %dec_label_pc_10007fb0 ], [ 138, %dec_label_pc_10007fe8 ], [ 207, %dec_label_pc_10007ffc ], [ 139, %dec_label_pc_10008010 ], [ %v1_10006544, %dec_label_pc_1000803c ], [ 181, %dec_label_pc_1000806c ], [ 152, %dec_label_pc_10008080 ], [ 63, %dec_label_pc_100080dc ], [ 209, %dec_label_pc_100080f0 ], [ 200, %dec_label_pc_10008134 ], [ 0, %dec_label_pc_10008148 ], [ 238, %dec_label_pc_1000815c ], [ 58, %dec_label_pc_100081b0 ], [ 36, %dec_label_pc_100081d8 ], [ 116, %dec_label_pc_100081ec ], [ 47, %dec_label_pc_10008200 ], [ %v1_10006544, %dec_label_pc_10008214 ], [ 0, %dec_label_pc_10008244 ], [ %v1_10006544, %dec_label_pc_10008254 ], [ %v1_10006544, %dec_label_pc_10008268 ], [ %v1_10006544, %dec_label_pc_1000827c ], [ %v1_10006544, %dec_label_pc_10008290 ], [ 0, %dec_label_pc_100082a4 ], [ %v1_10006544, %dec_label_pc_100082f8 ], [ %v1_10006544, %dec_label_pc_1000830c ], [ %v1_10006544, %dec_label_pc_10008320 ], [ %v1_10006544, %dec_label_pc_10008334 ], [ %v1_10006544, %dec_label_pc_10008348 ], [ %v1_10006544, %dec_label_pc_1000835c ], [ %v1_10006544, %dec_label_pc_10008370 ], [ 8, %dec_label_pc_100083ac ], [ %v1_10006544, %dec_label_pc_100083c8 ], [ 211, %dec_label_pc_100083dc ], [ 199, %dec_label_pc_100083f0 ], [ %v1_10006544, %dec_label_pc_10008404 ], [ 98, %dec_label_pc_10008430 ], [ 222, %dec_label_pc_100084a0 ], [ 237, %dec_label_pc_100084b4 ], [ 240, %dec_label_pc_100084d8 ], [ 154, %dec_label_pc_10008528 ], [ %v1_10006544, %dec_label_pc_100085fc ], [ %v1_10006544, %dec_label_pc_1000865c ], [ %v1_10006544, %dec_label_pc_10008680 ], [ %v1_10006544, %dec_label_pc_100086dc ], [ 252, %dec_label_pc_100086f0 ], [ 111, %dec_label_pc_10008704 ], [ 241, %dec_label_pc_10008718 ], [ %v1_10006544, %dec_label_pc_10007bec ], [ %v1_10006544, %dec_label_pc_10007c08 ], [ %v1_10006544, %dec_label_pc_10007c24 ], [ %v1_10006544, %dec_label_pc_10007cb8 ], [ %v1_10006544, %dec_label_pc_10007cd4 ], [ %v1_10006544, %dec_label_pc_10007cf0 ], [ %v1_10006544, %dec_label_pc_10007d88 ], [ %v1_10006544, %dec_label_pc_10007da4 ], [ %v1_10006544, %dec_label_pc_10007de8 ], [ %v1_10006544, %dec_label_pc_10007dcc ], [ %v1_10006544, %dec_label_pc_10007e30 ], [ %v1_10006544, %dec_label_pc_10007e5c ], [ %v1_10006544, %dec_label_pc_10007efc ], [ %v1_10006544, %dec_label_pc_10007f18 ], [ %v1_10006544, %dec_label_pc_10007f84 ], [ %v1_10006544, %dec_label_pc_10007fa8 ], [ %v1_10006544, %dec_label_pc_10007fe0 ], [ %v1_10006544, %dec_label_pc_1000812c ], [ %v1_10006544, %dec_label_pc_100081a8 ], [ %v1_10006544, %dec_label_pc_100083a4 ], [ %v1_10006544, %dec_label_pc_10008428 ], [ %v1_10006544, %dec_label_pc_10008498 ], [ %v1_10006544, %dec_label_pc_100084d0 ], [ %v1_10006544, %dec_label_pc_10008520 ], [ %v1_10006544, %dec_label_pc_10006b10 ], [ %v1_10006544, %dec_label_pc_10006ac4 ], [ 40, %dec_label_pc_10006ad4 ], [ 185, %dec_label_pc_10006b20 ], [ %v1_10006544, %dec_label_pc_10006c7c ], [ %v1_10006544, %dec_label_pc_10006c90 ], [ %v1_10006544, %dec_label_pc_10007b48 ], [ %v1_10006544, %dec_label_pc_10007b5c ], [ %v1_10006544, %dec_label_pc_10007b68 ], [ %v1_10006544, %dec_label_pc_10007b7c ], [ %v1_10006544, %dec_label_pc_10007b90 ], [ 255, %dec_label_pc_10007ba4 ], [ %v1_10006544, %dec_label_pc_10007bb8 ], [ %v1_10006544, %dec_label_pc_10007bcc ], [ %v1_10006544, %dec_label_pc_10007be0 ], [ 34, %dec_label_pc_10007bfc ], [ 47, %dec_label_pc_10007c18 ], [ 121, %dec_label_pc_10007c34 ], [ %v1_10006544, %dec_label_pc_10007c58 ], [ 255, %dec_label_pc_10007c7c ], [ 255, %dec_label_pc_10007c98 ], [ %v1_10006544, %dec_label_pc_10007cac ], [ 142, %dec_label_pc_10007cc8 ], [ 220, %dec_label_pc_10007ce4 ], [ 170, %dec_label_pc_10007d00 ], [ %v1_10006544, %dec_label_pc_10007d0c ], [ %v1_10006544, %dec_label_pc_10007d28 ], [ %v1_10006544, %dec_label_pc_10007d44 ], [ %v1_10006544, %dec_label_pc_10007d50 ], [ %v1_10006544, %dec_label_pc_10007d5c ], [ %v1_10006544, %dec_label_pc_10007d68 ], [ %v1_10006544, %dec_label_pc_10007d74 ], [ 201, %dec_label_pc_10007d98 ], [ 42, %dec_label_pc_10007db4 ], [ %v1_10006544, %dec_label_pc_10007dc0 ], [ 237, %dec_label_pc_10007ddc ], [ 251, %dec_label_pc_10007df8 ], [ 91, %dec_label_pc_10007e0c ], [ 71, %dec_label_pc_10007e40 ], [ 93, %dec_label_pc_10007e6c ], [ 151, %dec_label_pc_10007e80 ], [ 78, %dec_label_pc_10007e94 ], [ 167, %dec_label_pc_10007ea8 ], [ 150, %dec_label_pc_10007ebc ], [ 55, %dec_label_pc_10007ed0 ], [ 62, %dec_label_pc_10007f0c ], [ 85, %dec_label_pc_10007f28 ], [ 61, %dec_label_pc_10007f3c ], [ 56, %dec_label_pc_10007f50 ], [ 11, %dec_label_pc_10007f64 ], [ 92, %dec_label_pc_10007f78 ], [ 196, %dec_label_pc_10007f94 ], [ 205, %dec_label_pc_10007fb8 ], [ %v1_10006544, %dec_label_pc_10007fd4 ], [ 138, %dec_label_pc_10007ff0 ], [ 207, %dec_label_pc_10008004 ], [ 139, %dec_label_pc_10008018 ], [ %v1_10006544, %dec_label_pc_10008044 ], [ %v1_10006544, %dec_label_pc_10008060 ], [ 181, %dec_label_pc_10008074 ], [ 152, %dec_label_pc_10008088 ], [ %v1_10006544, %dec_label_pc_100080a4 ], [ %v1_10006544, %dec_label_pc_100080d0 ], [ 63, %dec_label_pc_100080e4 ], [ 209, %dec_label_pc_100080f8 ], [ 200, %dec_label_pc_1000813c ], [ %v1_10006544, %dec_label_pc_10008150 ], [ 238, %dec_label_pc_10008164 ], [ %v1_10006544, %dec_label_pc_10008178 ], [ %v1_10006544, %dec_label_pc_1000818c ], [ 58, %dec_label_pc_100081b8 ], [ %v1_10006544, %dec_label_pc_100081cc ], [ 36, %dec_label_pc_100081e0 ], [ 116, %dec_label_pc_100081f4 ], [ 47, %dec_label_pc_10008208 ], [ %v1_10006544, %dec_label_pc_1000821c ], [ %v1_10006544, %dec_label_pc_10008238 ], [ %v1_10006544, %dec_label_pc_1000825c ], [ %v1_10006544, %dec_label_pc_10008270 ], [ %v1_10006544, %dec_label_pc_10008284 ], [ %v1_10006544, %dec_label_pc_10008298 ], [ %v1_10006544, %dec_label_pc_100082ac ], [ %v1_10006544, %dec_label_pc_10008300 ], [ %v1_10006544, %dec_label_pc_10008314 ], [ %v1_10006544, %dec_label_pc_10008328 ], [ %v1_10006544, %dec_label_pc_1000833c ], [ %v1_10006544, %dec_label_pc_10008350 ], [ 255, %dec_label_pc_10008364 ], [ %v1_10006544, %dec_label_pc_10008378 ], [ 8, %dec_label_pc_100083b4 ], [ %v1_10006544, %dec_label_pc_100083d0 ], [ 211, %dec_label_pc_100083e4 ], [ 199, %dec_label_pc_100083f8 ], [ %v1_10006544, %dec_label_pc_1000840c ], [ 98, %dec_label_pc_10008438 ], [ 222, %dec_label_pc_100084a8 ], [ 237, %dec_label_pc_100084bc ], [ 240, %dec_label_pc_100084e0 ], [ %v1_10006544, %dec_label_pc_100084f4 ], [ 154, %dec_label_pc_10008530 ], [ %v1_10006544, %dec_label_pc_1000853c ], [ %v1_10006544, %dec_label_pc_10008548 ], [ %v1_10006544, %dec_label_pc_10008564 ], [ %v1_10006544, %dec_label_pc_10008578 ], [ %v1_10006544, %dec_label_pc_10008584 ], [ %v1_10006544, %dec_label_pc_100085b0 ], [ %v1_10006544, %dec_label_pc_10008604 ], [ %v1_10006544, %dec_label_pc_10008610 ], [ %v1_10006544, %dec_label_pc_10008634 ], [ %v1_10006544, %dec_label_pc_10008640 ], [ %v1_10006544, %dec_label_pc_10008664 ], [ %v1_10006544, %dec_label_pc_10008688 ], [ 255, %dec_label_pc_100086e4 ], [ 252, %dec_label_pc_100086f8 ], [ 111, %dec_label_pc_1000870c ], [ 241, %dec_label_pc_10008720 ]
  %v1_10006548111 = phi i32 [ %v1_10006548, %dec_label_pc_10008634.thread ], [ %v1_10006548, %dec_label_pc_10008520.thread ], [ %v1_10006548, %dec_label_pc_10008474 ], [ %v1_10006548, %dec_label_pc_10008428.thread ], [ %v1_10006548, %dec_label_pc_100083a4.thread ], [ %v1_10006548, %dec_label_pc_100082ec ], [ %v1_10006548, %dec_label_pc_100082c8 ], [ %v1_10006548, %dec_label_pc_10008238.thread ], [ %v1_10006548, %dec_label_pc_1000812c.thread ], [ %v1_10006548, %dec_label_pc_10006b10.thread ], [ %v1_10006548, %dec_label_pc_10007c50.thread ], [ %v1_10006548, %dec_label_pc_10007c74.thread ], [ %v1_10006548, %dec_label_pc_100085fc.thread ], [ %v1_10006548, %dec_label_pc_10008610.thread ], [ %v1_10006548, %dec_label_pc_100086dc.thread ], [ %v1_10006548, %dec_label_pc_100068c0 ], [ %v1_10006548, %dec_label_pc_10006acc ], [ %v1_10006548, %dec_label_pc_10006b18 ], [ %v1_10006548, %dec_label_pc_10006c74 ], [ %v1_10006548, %dec_label_pc_10007b54 ], [ %v1_10006548, %dec_label_pc_10007b88 ], [ %v1_10006548, %dec_label_pc_10007b9c ], [ %v1_10006548, %dec_label_pc_10007bb0 ], [ %v1_10006548, %dec_label_pc_10007bc4 ], [ %v1_10006548, %dec_label_pc_10007bd8 ], [ %v1_10006548, %dec_label_pc_10007bf4 ], [ %v1_10006548, %dec_label_pc_10007c10 ], [ %v1_10006548, %dec_label_pc_10007c2c ], [ %v1_10006548, %dec_label_pc_10007c50 ], [ %v1_10006548, %dec_label_pc_10007c74 ], [ %v1_10006548, %dec_label_pc_10007c88 ], [ %v1_10006548, %dec_label_pc_10007ca4 ], [ %v1_10006548, %dec_label_pc_10007cc0 ], [ %v1_10006548, %dec_label_pc_10007cdc ], [ %v1_10006548, %dec_label_pc_10007cf8 ], [ %v1_10006548, %dec_label_pc_10007d90 ], [ %v1_10006548, %dec_label_pc_10007dac ], [ %v1_10006548, %dec_label_pc_10007dd4 ], [ %v1_10006548, %dec_label_pc_10007df0 ], [ %v1_10006548, %dec_label_pc_10007e04 ], [ %v1_10006548, %dec_label_pc_10007e38 ], [ %v1_10006548, %dec_label_pc_10007e64 ], [ %v1_10006548, %dec_label_pc_10007e78 ], [ %v1_10006548, %dec_label_pc_10007e8c ], [ %v1_10006548, %dec_label_pc_10007ea0 ], [ %v1_10006548, %dec_label_pc_10007eb4 ], [ %v1_10006548, %dec_label_pc_10007ec8 ], [ %v1_10006548, %dec_label_pc_10007f04 ], [ %v1_10006548, %dec_label_pc_10007f20 ], [ %v1_10006548, %dec_label_pc_10007f34 ], [ %v1_10006548, %dec_label_pc_10007f48 ], [ %v1_10006548, %dec_label_pc_10007f5c ], [ %v1_10006548, %dec_label_pc_10007f70 ], [ 0, %dec_label_pc_10007f8c ], [ %v1_10006548, %dec_label_pc_10007fb0 ], [ 0, %dec_label_pc_10007fe8 ], [ %v1_10006548, %dec_label_pc_10007ffc ], [ 0, %dec_label_pc_10008010 ], [ %v1_10006548, %dec_label_pc_1000803c ], [ %v1_10006548, %dec_label_pc_1000806c ], [ %v1_10006548, %dec_label_pc_10008080 ], [ 0, %dec_label_pc_100080dc ], [ %v1_10006548, %dec_label_pc_100080f0 ], [ %v1_10006548, %dec_label_pc_10008134 ], [ %v1_10006548, %dec_label_pc_10008148 ], [ %v1_10006548, %dec_label_pc_1000815c ], [ %v1_10006548, %dec_label_pc_100081b0 ], [ %v1_10006548, %dec_label_pc_100081d8 ], [ %v1_10006548, %dec_label_pc_100081ec ], [ %v1_10006548, %dec_label_pc_10008200 ], [ %v1_10006548, %dec_label_pc_10008214 ], [ %v1_10006548, %dec_label_pc_10008244 ], [ %v1_10006548, %dec_label_pc_10008254 ], [ %v1_10006548, %dec_label_pc_10008268 ], [ %v1_10006548, %dec_label_pc_1000827c ], [ %v1_10006548, %dec_label_pc_10008290 ], [ %v1_10006548, %dec_label_pc_100082a4 ], [ %v1_10006548, %dec_label_pc_100082f8 ], [ %v1_10006548, %dec_label_pc_1000830c ], [ %v1_10006548, %dec_label_pc_10008320 ], [ %v1_10006548, %dec_label_pc_10008334 ], [ %v1_10006548, %dec_label_pc_10008348 ], [ %v1_10006548, %dec_label_pc_1000835c ], [ %v1_10006548, %dec_label_pc_10008370 ], [ %v1_10006548, %dec_label_pc_100083ac ], [ %v1_10006548, %dec_label_pc_100083c8 ], [ %v1_10006548, %dec_label_pc_100083dc ], [ %v1_10006548, %dec_label_pc_100083f0 ], [ %v1_10006548, %dec_label_pc_10008404 ], [ %v1_10006548, %dec_label_pc_10008430 ], [ 0, %dec_label_pc_100084a0 ], [ %v1_10006548, %dec_label_pc_100084b4 ], [ %v1_10006548, %dec_label_pc_100084d8 ], [ %v1_10006548, %dec_label_pc_10008528 ], [ %v1_10006548, %dec_label_pc_100085fc ], [ %v1_10006548, %dec_label_pc_1000865c ], [ %v1_10006548, %dec_label_pc_10008680 ], [ %v1_10006548, %dec_label_pc_100086dc ], [ %v1_10006548, %dec_label_pc_100086f0 ], [ %v1_10006548, %dec_label_pc_10008704 ], [ %v1_10006548, %dec_label_pc_10008718 ], [ %v1_10006548, %dec_label_pc_10007bec ], [ %v1_10006548, %dec_label_pc_10007c08 ], [ %v1_10006548, %dec_label_pc_10007c24 ], [ %v1_10006548, %dec_label_pc_10007cb8 ], [ %v1_10006548, %dec_label_pc_10007cd4 ], [ %v1_10006548, %dec_label_pc_10007cf0 ], [ %v1_10006548, %dec_label_pc_10007d88 ], [ %v1_10006548, %dec_label_pc_10007da4 ], [ %v1_10006548, %dec_label_pc_10007de8 ], [ %v1_10006548, %dec_label_pc_10007dcc ], [ %v1_10006548, %dec_label_pc_10007e30 ], [ %v1_10006548, %dec_label_pc_10007e5c ], [ %v1_10006548, %dec_label_pc_10007efc ], [ %v1_10006548, %dec_label_pc_10007f18 ], [ %v1_10006548, %dec_label_pc_10007f84 ], [ %v1_10006548, %dec_label_pc_10007fa8 ], [ %v1_10006548, %dec_label_pc_10007fe0 ], [ %v1_10006548, %dec_label_pc_1000812c ], [ %v1_10006548, %dec_label_pc_100081a8 ], [ %v1_10006548, %dec_label_pc_100083a4 ], [ %v1_10006548, %dec_label_pc_10008428 ], [ %v1_10006548, %dec_label_pc_10008498 ], [ %v1_10006548, %dec_label_pc_100084d0 ], [ %v1_10006548, %dec_label_pc_10008520 ], [ %v1_10006548, %dec_label_pc_10006b10 ], [ %v1_10006548, %dec_label_pc_10006ac4 ], [ %v1_10006548, %dec_label_pc_10006ad4 ], [ %v1_10006548, %dec_label_pc_10006b20 ], [ %v1_10006548, %dec_label_pc_10006c7c ], [ %v1_10006548, %dec_label_pc_10006c90 ], [ %v1_10006548, %dec_label_pc_10007b48 ], [ %v1_10006548, %dec_label_pc_10007b5c ], [ %v1_10006548, %dec_label_pc_10007b68 ], [ %v1_10006548, %dec_label_pc_10007b7c ], [ %v1_10006548, %dec_label_pc_10007b90 ], [ %v1_10006548, %dec_label_pc_10007ba4 ], [ %v1_10006548, %dec_label_pc_10007bb8 ], [ %v1_10006548, %dec_label_pc_10007bcc ], [ %v1_10006548, %dec_label_pc_10007be0 ], [ %v1_10006548, %dec_label_pc_10007bfc ], [ 255, %dec_label_pc_10007c18 ], [ 255, %dec_label_pc_10007c34 ], [ %v1_10006548, %dec_label_pc_10007c58 ], [ %v1_10006548, %dec_label_pc_10007c7c ], [ %v1_10006548, %dec_label_pc_10007c98 ], [ %v1_10006548, %dec_label_pc_10007cac ], [ %v1_10006548, %dec_label_pc_10007cc8 ], [ %v1_10006548, %dec_label_pc_10007ce4 ], [ 255, %dec_label_pc_10007d00 ], [ %v1_10006548, %dec_label_pc_10007d0c ], [ %v1_10006548, %dec_label_pc_10007d28 ], [ %v1_10006548, %dec_label_pc_10007d44 ], [ %v1_10006548, %dec_label_pc_10007d50 ], [ %v1_10006548, %dec_label_pc_10007d5c ], [ %v1_10006548, %dec_label_pc_10007d68 ], [ %v1_10006548, %dec_label_pc_10007d74 ], [ %v1_10006548, %dec_label_pc_10007d98 ], [ %v1_10006548, %dec_label_pc_10007db4 ], [ %v1_10006548, %dec_label_pc_10007dc0 ], [ %v1_10006548, %dec_label_pc_10007ddc ], [ %v1_10006548, %dec_label_pc_10007df8 ], [ %v1_10006548, %dec_label_pc_10007e0c ], [ 255, %dec_label_pc_10007e40 ], [ %v1_10006548, %dec_label_pc_10007e6c ], [ %v1_10006548, %dec_label_pc_10007e80 ], [ %v1_10006548, %dec_label_pc_10007e94 ], [ %v1_10006548, %dec_label_pc_10007ea8 ], [ %v1_10006548, %dec_label_pc_10007ebc ], [ %v1_10006548, %dec_label_pc_10007ed0 ], [ %v1_10006548, %dec_label_pc_10007f0c ], [ %v1_10006548, %dec_label_pc_10007f28 ], [ %v1_10006548, %dec_label_pc_10007f3c ], [ %v1_10006548, %dec_label_pc_10007f50 ], [ %v1_10006548, %dec_label_pc_10007f64 ], [ %v1_10006548, %dec_label_pc_10007f78 ], [ %v1_10006548, %dec_label_pc_10007f94 ], [ %v1_10006548, %dec_label_pc_10007fb8 ], [ %v1_10006548, %dec_label_pc_10007fd4 ], [ %v1_10006548, %dec_label_pc_10007ff0 ], [ %v1_10006548, %dec_label_pc_10008004 ], [ %v1_10006548, %dec_label_pc_10008018 ], [ %v1_10006548, %dec_label_pc_10008044 ], [ %v1_10006548, %dec_label_pc_10008060 ], [ %v1_10006548, %dec_label_pc_10008074 ], [ %v1_10006548, %dec_label_pc_10008088 ], [ %v1_10006548, %dec_label_pc_100080a4 ], [ %v1_10006548, %dec_label_pc_100080d0 ], [ %v1_10006548, %dec_label_pc_100080e4 ], [ %v1_10006548, %dec_label_pc_100080f8 ], [ %v1_10006548, %dec_label_pc_1000813c ], [ %v1_10006548, %dec_label_pc_10008150 ], [ %v1_10006548, %dec_label_pc_10008164 ], [ %v1_10006548, %dec_label_pc_10008178 ], [ %v1_10006548, %dec_label_pc_1000818c ], [ %v1_10006548, %dec_label_pc_100081b8 ], [ %v1_10006548, %dec_label_pc_100081cc ], [ %v1_10006548, %dec_label_pc_100081e0 ], [ %v1_10006548, %dec_label_pc_100081f4 ], [ %v1_10006548, %dec_label_pc_10008208 ], [ %v1_10006548, %dec_label_pc_1000821c ], [ %v1_10006548, %dec_label_pc_10008238 ], [ %v1_10006548, %dec_label_pc_1000825c ], [ %v1_10006548, %dec_label_pc_10008270 ], [ %v1_10006548, %dec_label_pc_10008284 ], [ %v1_10006548, %dec_label_pc_10008298 ], [ %v1_10006548, %dec_label_pc_100082ac ], [ %v1_10006548, %dec_label_pc_10008300 ], [ %v1_10006548, %dec_label_pc_10008314 ], [ %v1_10006548, %dec_label_pc_10008328 ], [ %v1_10006548, %dec_label_pc_1000833c ], [ %v1_10006548, %dec_label_pc_10008350 ], [ %v1_10006548, %dec_label_pc_10008364 ], [ %v1_10006548, %dec_label_pc_10008378 ], [ %v1_10006548, %dec_label_pc_100083b4 ], [ %v1_10006548, %dec_label_pc_100083d0 ], [ %v1_10006548, %dec_label_pc_100083e4 ], [ %v1_10006548, %dec_label_pc_100083f8 ], [ %v1_10006548, %dec_label_pc_1000840c ], [ %v1_10006548, %dec_label_pc_10008438 ], [ %v1_10006548, %dec_label_pc_100084a8 ], [ %v1_10006548, %dec_label_pc_100084bc ], [ %v1_10006548, %dec_label_pc_100084e0 ], [ %v1_10006548, %dec_label_pc_100084f4 ], [ 255, %dec_label_pc_10008530 ], [ %v1_10006548, %dec_label_pc_1000853c ], [ %v1_10006548, %dec_label_pc_10008548 ], [ %v1_10006548, %dec_label_pc_10008564 ], [ %v1_10006548, %dec_label_pc_10008578 ], [ %v1_10006548, %dec_label_pc_10008584 ], [ %v1_10006548, %dec_label_pc_100085b0 ], [ %v1_10006548, %dec_label_pc_10008604 ], [ %v1_10006548, %dec_label_pc_10008610 ], [ %v1_10006548, %dec_label_pc_10008634 ], [ %v1_10006548, %dec_label_pc_10008640 ], [ %v1_10006548, %dec_label_pc_10008664 ], [ %v1_10006548, %dec_label_pc_10008688 ], [ %v1_10006548, %dec_label_pc_100086e4 ], [ %v1_10006548, %dec_label_pc_100086f8 ], [ %v1_10006548, %dec_label_pc_1000870c ], [ 255, %dec_label_pc_10008720 ]
  %v1_100068c8 = mul i32 %v1_10006544128, 65536
  %v1_100068cc = mul i32 %v0_10006550594, 16777216
  %v2_100068d0 = or i32 %v1_100068c8, %v1_100068cc
  %v1_100068d4 = mul i32 %v1_10006548111, 256
  %v1_100068d8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100068d8 = or i32 %v2_100068d0, %v1_100068d8
  store i32 %v2_100068d8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_100068e0 = or i32 %v2_100068d8, %v1_100068d4
  store i32 %v2_100068e0, i32* %r9.global-to-local, align 4
  %v0_100068e8 = load i32, i32* @r24, align 4
  store i32 %v0_100068e8, i32* @r3, align 4
  store i32 %v2_100068e0, i32* @global_var_1001c708.143, align 4
  store i16 0, i16* bitcast (i32* @global_var_1001c702.144 to i16*), align 4
  %v2_100068f4 = call i32 @function_100043cc(i32 %v0_100068e8, i32 20)
  %v3_100068f4 = trunc i32 %v2_100068f4 to i16
  %v3_100068f8 = load i32, i32* @global_var_1001c708.143, align 4
  store i32 %v3_100068f8, i32* %r9.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  store i16 %v3_100068f4, i16* bitcast (i32* @global_var_1001c702.144 to i16*), align 4
  %v0_10006904 = load i32, i32* @r25, align 4
  store i32 %v0_10006904, i32* @r4, align 4
  store i16 23, i16* @global_var_1001c70e.118, align 2
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_100068f8, i32* @global_var_1001c710.145, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10006918 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006918 = trunc i32 %v0_10006918 to i16
  store i16 %v1_10006918, i16* bitcast (i32* @global_var_1001c71c.146 to i16*), align 4
  %v0_1000691c = load i32, i32* @r24, align 4
  store i32 %v0_1000691c, i32* %r3.global-to-local, align 4
  %v4_10006920 = call i32 @function_10004430(i32 %v0_1000691c, i32 %v0_10006904, i32 20, i32 20)
  %v5_10006920 = trunc i32 %v4_10006920 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10006920, i16* bitcast (i32* @global_var_1001c71c.146 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006930 = load i32, i32* @global_var_1001c708.143, align 4
  store i32 %v3_10006930, i32* %r9.global-to-local, align 4
  %v0_10006934 = load i32, i32* @r24, align 4
  %v3_10006938 = load i16, i16* @global_var_1001c70e.118, align 2
  %v4_10006938 = zext i16 %v3_10006938 to i32
  store i32 %v4_10006938, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006940 = load i32, i32* @global_var_1001c68c.107, align 4
  store i32 %v3_10006940, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 %v2_10006948, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268462432, i32* @lr, align 4
  %v6_1000695c = call i32 @function_1000a1b8(i32 %v3_10006940, i32 %v0_10006934, i32 40, i32 16384, i32 %v2_10006948, i32 16)
  store i32 %v6_1000695c, i32* %r3.global-to-local, align 4
  %v3_10006960 = load i32, i32* %stack_var_-1916, align 4
  %v1_10006964 = add i32 %v3_10006960, 1
  store i32 %v1_10006964, i32* %r9.global-to-local, align 4
  %v1_10006968 = icmp slt i32 %v1_10006964, 383
  %v3_10006968 = icmp eq i32 %v1_10006964, 383
  store i1 %v1_10006968, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006968, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10006964, i32* %stack_var_-1916, align 4
  %tmp248 = icmp slt i32 %v1_10006964, 384
  br i1 %tmp248, label %dec_label_pc_1000650c, label %dec_label_pc_10006974

dec_label_pc_10006974:                            ; preds = %dec_label_pc_100068c8
  %v0_10006974 = load i32, i32* @r31, align 4
  store i32 %v0_10006974, i32* @r26, align 4
  br label %dec_label_pc_10006978

dec_label_pc_10006978:                            ; preds = %dec_label_pc_100064f4, %dec_label_pc_10006974
  %v0_10006978 = call i32 @function_10009c34()
  store i32 %v0_10006978, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_10006978, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006984

dec_label_pc_10006984:                            ; preds = %dec_label_pc_10006a24, %dec_label_pc_10006a1c, %dec_label_pc_10006a14, %dec_label_pc_100069f4, %dec_label_pc_100069e8, %dec_label_pc_100069dc, %dec_label_pc_100069c8, %dec_label_pc_10006a0c, %dec_label_pc_10006a00, %dec_label_pc_100069c0, %dec_label_pc_10006a90, %dec_label_pc_10006978
  %v1_1000698c = phi i32 [ %v0_10006978, %dec_label_pc_10006978 ], [ %v1_1000698c.pre.pre, %dec_label_pc_10006a90 ], [ %v0_100069b4, %dec_label_pc_100069c0 ], [ %v0_100069b4, %dec_label_pc_10006a00 ], [ %v0_100069b4, %dec_label_pc_10006a0c ], [ %v0_100069b4, %dec_label_pc_100069c8 ], [ %v0_100069b4, %dec_label_pc_100069dc ], [ %v0_100069b4, %dec_label_pc_100069e8 ], [ %v0_100069b4, %dec_label_pc_100069f4 ], [ %v0_100069b4, %dec_label_pc_10006a14 ], [ %v0_100069b4, %dec_label_pc_10006a1c ], [ %v0_100069b4, %dec_label_pc_10006a24 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_1000698c = inttoptr i32 %v1_1000698c to i32*
  store i32 0, i32* %v2_1000698c, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_1000699c = load i32, i32* @global_var_1001c68c.107, align 4
  store i32 %v3_1000699c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268462508, i32* @lr, align 4
  %v6_100069a8 = call i32 @function_1000a140(i32 %v3_1000699c, i32 %v2_10006990, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_100069a8, i32* %r3.global-to-local, align 4
  %tmp249 = icmp slt i32 %v6_100069a8, 1
  br i1 %tmp249, label %dec_label_pc_10006b2c, label %dec_label_pc_100069b4

dec_label_pc_100069b4:                            ; preds = %dec_label_pc_10006984
  %v0_100069b4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100069b4 = inttoptr i32 %v0_100069b4 to i32*
  %v2_100069b4 = load i32, i32* %v1_100069b4, align 4
  store i32 %v2_100069b4, i32* %r0.global-to-local, align 4
  %v1_100069b8 = icmp slt i32 %v2_100069b4, 11
  %v3_100069b8 = icmp eq i32 %v2_100069b4, 11
  store i1 %v1_100069b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100069b8, label %dec_label_pc_10006b2c, label %dec_label_pc_100069c0

dec_label_pc_100069c0:                            ; preds = %dec_label_pc_100069b4
  %v1_100069c0 = icmp ult i32 %v6_100069a8, 39
  %v3_100069c0 = icmp eq i32 %v6_100069a8, 39
  store i1 %v1_100069c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069c0, i1* %cr7_eq.global-to-local, align 1
  %tmp250 = icmp ult i32 %v6_100069a8, 40
  br i1 %tmp250, label %dec_label_pc_10006984, label %dec_label_pc_100069c8

dec_label_pc_100069c8:                            ; preds = %dec_label_pc_100069c0
  %v3_100069cc = load i32, i32* @global_var_1001c660.16, align 4
  store i32 %v3_100069cc, i32* %r0.global-to-local, align 4
  store i32 %tmp204, i32* %r9.global-to-local, align 4
  %v2_100069d4 = icmp slt i32 %tmp204, %v3_100069cc
  %v4_100069d4 = icmp eq i32 %tmp204, %v3_100069cc
  store i1 %v2_100069d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100069d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100069d4, label %dec_label_pc_100069dc, label %dec_label_pc_10006984

dec_label_pc_100069dc:                            ; preds = %dec_label_pc_100069c8
  store i32 %v4_100069dc, i32* %r0.global-to-local, align 4
  store i1 %v1_100069e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100069e0, label %dec_label_pc_100069e8, label %dec_label_pc_10006984

dec_label_pc_100069e8:                            ; preds = %dec_label_pc_100069dc
  store i32 %v4_100069e8, i32* %r8.global-to-local, align 4
  store i1 %v1_100069ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100069ec, label %dec_label_pc_100069f4, label %dec_label_pc_10006984

dec_label_pc_100069f4:                            ; preds = %dec_label_pc_100069e8
  store i32 %v4_100069f4, i32* %r0.global-to-local, align 4
  %v1_100069f8 = load i32, i32* @r23, align 4
  %v2_100069f8 = icmp slt i32 %v4_100069f4, %v1_100069f8
  %v4_100069f8 = icmp eq i32 %v4_100069f4, %v1_100069f8
  store i1 %v2_100069f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100069f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100069f8, label %dec_label_pc_10006a00, label %dec_label_pc_10006984

dec_label_pc_10006a00:                            ; preds = %dec_label_pc_100069f4
  store i32 %tmp200, i32* %r0.global-to-local, align 4
  store i32 %v1_10006a04, i32* %r10.global-to-local, align 4
  br i1 %v3_10006a04, label %dec_label_pc_10006984, label %dec_label_pc_10006a0c

dec_label_pc_10006a0c:                            ; preds = %dec_label_pc_10006a00
  store i32 %v1_10006a0c, i32* %r11.global-to-local, align 4
  br i1 %v3_10006a0c, label %dec_label_pc_10006984, label %dec_label_pc_10006a14

dec_label_pc_10006a14:                            ; preds = %dec_label_pc_10006a0c
  store i32 %v1_10006a14, i32* %r9.global-to-local, align 4
  br i1 %v3_10006a14, label %dec_label_pc_10006a1c, label %dec_label_pc_10006984

dec_label_pc_10006a1c:                            ; preds = %dec_label_pc_10006a14
  store i32 %v1_10006a1c, i32* %r10.global-to-local, align 4
  br i1 %v3_10006a1c, label %dec_label_pc_10006a24, label %dec_label_pc_10006984

dec_label_pc_10006a24:                            ; preds = %dec_label_pc_10006a1c
  store i32 %tmp199, i32* %r9.global-to-local, align 4
  store i32 %tmp198, i32* %r0.global-to-local, align 4
  store i32 %v1_10006a2c, i32* %r10.global-to-local, align 4
  store i1 %v2_10006a30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006a30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006a30, label %dec_label_pc_10006a38, label %dec_label_pc_10006984

dec_label_pc_10006a38:                            ; preds = %dec_label_pc_10006a24
  %v0_10006a38 = load i32, i32* @r31, align 4
  %v1_10006a38 = icmp slt i32 %v0_10006a38, 255
  %v2_10006a38 = icmp sgt i32 %v0_10006a38, 255
  %v3_10006a38 = icmp eq i32 %v0_10006a38, 255
  store i1 %v1_10006a38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006a38, label %dec_label_pc_10006b2c, label %dec_label_pc_10006a40

dec_label_pc_10006a40:                            ; preds = %dec_label_pc_10006a38
  %v3_10006a48 = load i32, i32* @global_var_1001c688.106, align 4
  store i32 %v3_10006a48, i32* %r11.global-to-local, align 4
  %v1_10006a4c = mul i32 %v0_10006a38, 256
  store i32 %v1_10006a4c, i32* %r9.global-to-local, align 4
  %v2_10006a50 = mul i32 %v0_10006a38, 288
  store i32 %v2_10006a50, i32* %r0.global-to-local, align 4
  %v2_10006a54 = add i32 %v3_10006a48, %v2_10006a50
  store i32 %v2_10006a54, i32* @r3, align 4
  %v1_10006a58 = add i32 %v2_10006a54, 12
  %v2_10006a58 = inttoptr i32 %v1_10006a58 to i32*
  %v3_10006a58 = load i32, i32* %v2_10006a58, align 4
  store i32 %v3_10006a58, i32* %r9.global-to-local, align 4
  %v1_10006a5c = icmp slt i32 %v3_10006a58, 0
  %v3_10006a5c = icmp eq i32 %v3_10006a58, 0
  store i1 %v1_10006a5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a5c, label %dec_label_pc_10006c88, label %dec_label_pc_10006a64

dec_label_pc_10006a64:                            ; preds = %dec_label_pc_10006a40
  %v1_10006a64 = sub i32 256, %v0_10006a38
  store i32 %v1_10006a64, i32* %r11.global-to-local, align 4
  store i32 %v0_10006a38, i32* %r29.global-to-local, align 4
  store i32 %v1_10006a64, i32* %ctr.global-to-local, align 4
  %v1_10006a70 = add i32 %v2_10006a54, 288
  store i32 %v1_10006a70, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006a74

dec_label_pc_10006a74:                            ; preds = %dec_label_pc_10006a7c, %dec_label_pc_10006a64
  %v0_10006a7c = phi i32 [ %v1_10006a84, %dec_label_pc_10006a7c ], [ %v1_10006a70, %dec_label_pc_10006a64 ]
  %v0_10006a78 = phi i32 [ %v1_10006a78, %dec_label_pc_10006a7c ], [ %v1_10006a64, %dec_label_pc_10006a64 ]
  %v0_10006a74 = phi i32 [ %v1_10006a74, %dec_label_pc_10006a7c ], [ %v0_10006a38, %dec_label_pc_10006a64 ]
  %v1_10006a74 = add i32 %v0_10006a74, 1
  store i32 %v1_10006a74, i32* @r29, align 4
  %v1_10006a78 = add i32 %v0_10006a78, -1
  store i32 %v1_10006a78, i32* %ctr.global-to-local, align 4
  %v2_10006a78 = icmp eq i32 %v1_10006a78, 0
  br i1 %v2_10006a78, label %dec_label_pc_10006b2c, label %dec_label_pc_10006a7c

dec_label_pc_10006a7c:                            ; preds = %dec_label_pc_10006a74
  %v1_10006a7c = add i32 %v0_10006a7c, 12
  %v2_10006a7c = inttoptr i32 %v1_10006a7c to i32*
  %v3_10006a7c = load i32, i32* %v2_10006a7c, align 4
  store i32 %v3_10006a7c, i32* %r0.global-to-local, align 4
  store i32 %v0_10006a7c, i32* @r3, align 4
  %v1_10006a84 = add i32 %v0_10006a7c, 288
  store i32 %v1_10006a84, i32* %r9.global-to-local, align 4
  %v1_10006a88 = icmp slt i32 %v3_10006a7c, 0
  %v3_10006a88 = icmp eq i32 %v3_10006a7c, 0
  store i1 %v1_10006a88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a88, label %dec_label_pc_10006a90, label %dec_label_pc_10006a74

dec_label_pc_10006a90:                            ; preds = %dec_label_pc_10006a7c, %dec_label_pc_10006c88
  %v1_10006a90 = phi i32 [ %v2_10006a54, %dec_label_pc_10006c88 ], [ %v0_10006a7c, %dec_label_pc_10006a7c ]
  %v2_10006a90 = add i32 %v1_10006a90, 16
  %v3_10006a90 = inttoptr i32 %v2_10006a90 to i32*
  store i32 %tmp198, i32* %v3_10006a90, align 4
  %v0_10006a94 = load i32, i32* @r29, align 4
  store i32 %v0_10006a94, i32* @r31, align 4
  %v0_10006a98 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a98 = trunc i32 %v0_10006a98 to i16
  %v2_10006a98 = load i32, i32* @r3, align 4
  %v3_10006a98 = add i32 %v2_10006a98, 20
  %v4_10006a98 = inttoptr i32 %v3_10006a98 to i16*
  store i16 %v1_10006a98, i16* %v4_10006a98, align 2
  store i32 268462752, i32* @lr, align 4
  %v0_10006a9c = call i32 @function_10005de8()
  store i32 %v0_10006a9c, i32* %r3.global-to-local, align 4
  %v1_1000698c.pre.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006984

dec_label_pc_10006aa4:                            ; preds = %dec_label_pc_10006600
  %v1_10006aa4 = icmp slt i32 %v1_10006544, 168
  %v3_10006aa4 = icmp eq i32 %v1_10006544, 168
  store i1 %v1_10006aa4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006aa4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006aa4, label %dec_label_pc_10006534, label %dec_label_pc_10006aac

dec_label_pc_10006aac:                            ; preds = %dec_label_pc_10006aa4
  %v1_10006aac = icmp slt i32 %v1_10006544, 241
  %v3_10006aac = icmp eq i32 %v1_10006544, 241
  store i1 %v1_10006aac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006aac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006aac, label %dec_label_pc_10008718, label %dec_label_pc_10006ab4

dec_label_pc_10006ab4:                            ; preds = %dec_label_pc_10006aac
  %v1_10006ab4 = icmp slt i32 %v1_10006544, 111
  %v3_10006ab4 = icmp eq i32 %v1_10006544, 111
  store i1 %v1_10006ab4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ab4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ab4, label %dec_label_pc_10008704, label %dec_label_pc_10006abc

dec_label_pc_10006abc:                            ; preds = %dec_label_pc_10006ab4
  %v1_10006abc = icmp slt i32 %v1_10006544, 252
  %v3_10006abc = icmp eq i32 %v1_10006544, 252
  store i1 %v1_10006abc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006abc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006abc, label %dec_label_pc_100086f0, label %dec_label_pc_10006ac4

dec_label_pc_10006ac4:                            ; preds = %dec_label_pc_10006abc
  %v1_10006ac4 = icmp slt i32 %v1_10006544, 40
  %v3_10006ac4 = icmp eq i32 %v1_10006544, 40
  store i1 %v1_10006ac4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ac4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ac4, label %dec_label_pc_10006acc, label %dec_label_pc_100068c8

dec_label_pc_10006acc:                            ; preds = %dec_label_pc_10006ac4
  %v1_10006acc = icmp ult i32 %v1_10006548, 55
  %v3_10006acc = icmp eq i32 %v1_10006548, 55
  store i1 %v1_10006acc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006acc, i1* %cr7_eq.global-to-local, align 1
  %tmp251 = icmp ult i32 %v1_10006548, 56
  br i1 %tmp251, label %dec_label_pc_100068c8, label %dec_label_pc_10006ad4

dec_label_pc_10006ad4:                            ; preds = %dec_label_pc_10006acc
  %v1_10006ad4 = icmp ult i32 %v1_10006548, 58
  %v3_10006ad4 = icmp eq i32 %v1_10006548, 58
  store i1 %v1_10006ad4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ad4, i1* %cr7_eq.global-to-local, align 1
  %tmp252 = icmp ult i32 %v1_10006548, 59
  br i1 %tmp252, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10006ae0:                            ; preds = %dec_label_pc_10006608
  %v1_10006ae0 = icmp slt i32 %v1_10006544, 17
  %v3_10006ae0 = icmp eq i32 %v1_10006544, 17
  store i1 %v1_10006ae0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ae0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ae0, label %dec_label_pc_10006534, label %dec_label_pc_10006ae8

dec_label_pc_10006ae8:                            ; preds = %dec_label_pc_10006ae0
  %v1_10006ae8 = icmp slt i32 %v1_10006544, 80
  %v3_10006ae8 = icmp eq i32 %v1_10006544, 80
  store i1 %v1_10006ae8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ae8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ae8, label %dec_label_pc_10006534, label %dec_label_pc_10006af0

dec_label_pc_10006af0:                            ; preds = %dec_label_pc_10006ae8
  %v1_10006af0 = icmp slt i32 %v1_10006544, 98
  %v3_10006af0 = icmp eq i32 %v1_10006544, 98
  store i1 %v1_10006af0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006af0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006af0, label %dec_label_pc_10006534, label %dec_label_pc_10006af8

dec_label_pc_10006af8:                            ; preds = %dec_label_pc_10006af0
  %v1_10006af8 = icmp slt i32 %v1_10006544, 154
  %v3_10006af8 = icmp eq i32 %v1_10006544, 154
  store i1 %v1_10006af8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006af8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006af8, label %dec_label_pc_10006534, label %dec_label_pc_10006b00

dec_label_pc_10006b00:                            ; preds = %dec_label_pc_10006af8
  %v1_10006b00 = icmp ult i32 %v1_10006544, 164
  %v3_10006b00 = icmp eq i32 %v1_10006544, 164
  store i1 %v1_10006b00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b00, i1* %cr7_eq.global-to-local, align 1
  %tmp253 = icmp ult i32 %v1_10006544, 165
  br i1 %tmp253, label %dec_label_pc_10006b10.thread, label %dec_label_pc_10006b08

dec_label_pc_10006b10.thread:                     ; preds = %dec_label_pc_10006b00
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_10006b08:                            ; preds = %dec_label_pc_10006b00
  %v1_10006b08 = icmp slt i32 %v1_10006544, 165
  %v3_10006b08 = icmp eq i32 %v1_10006544, 165
  store i1 %v1_10006b08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b08, label %dec_label_pc_10006534, label %dec_label_pc_10006b10

dec_label_pc_10006b10:                            ; preds = %dec_label_pc_10006b08
  %v1_10006b10 = icmp slt i32 %v1_10006544, 185
  %v3_10006b10 = icmp eq i32 %v1_10006544, 185
  store i1 %v1_10006b10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b10, label %dec_label_pc_10006b18, label %dec_label_pc_100068c8

dec_label_pc_10006b18:                            ; preds = %dec_label_pc_10006b10
  %v1_10006b18 = and i32 %v1_10006548, 128
  store i32 %v1_10006b18, i32* %r10.global-to-local, align 4
  %v3_10006b18 = icmp eq i32 %v1_10006b18, 0
  br i1 %v3_10006b18, label %dec_label_pc_100068c8, label %dec_label_pc_10006b20

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006b18
  %v1_10006b20 = icmp ult i32 %v1_10006548, 190
  %v3_10006b20 = icmp eq i32 %v1_10006548, 190
  store i1 %v1_10006b20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b20, i1* %cr7_eq.global-to-local, align 1
  %tmp254 = icmp ult i32 %v1_10006548, 191
  br i1 %tmp254, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10006b2c:                            ; preds = %dec_label_pc_10006a38, %dec_label_pc_100069b4, %dec_label_pc_10006984, %dec_label_pc_10006a74
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006b3c558 = load i32, i32* %r16.global-to-local, align 4
  %v4_10006b3c560 = inttoptr i32 %v2_10006b3c558 to i32*
  store i32 0, i32* %v4_10006b3c560, align 4
  %v0_10006b40561 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b40562 = add i32 %v0_10006b40561, 4
  store i32 %v1_10006b40562, i32* %r9.global-to-local, align 4
  %v0_10006b44563 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b44564 = add i32 %v0_10006b44563, -1
  store i32 %v1_10006b44564, i32* %ctr.global-to-local, align 4
  %v2_10006b44565 = icmp eq i32 %v1_10006b44564, 0
  br i1 %v2_10006b44565, label %dec_label_pc_10006b48, label %dec_label_pc_10006b3c.dec_label_pc_10006b3c_crit_edge

dec_label_pc_10006b3c.dec_label_pc_10006b3c_crit_edge: ; preds = %dec_label_pc_10006b2c, %dec_label_pc_10006b3c.dec_label_pc_10006b3c_crit_edge
  %v1_10006b40566 = phi i32 [ %v1_10006b40, %dec_label_pc_10006b3c.dec_label_pc_10006b3c_crit_edge ], [ %v1_10006b40562, %dec_label_pc_10006b2c ]
  %v0_10006b3c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10006b3c = load i32, i32* %r16.global-to-local, align 4
  %v3_10006b3c = add i32 %v2_10006b3c, %v1_10006b40566
  %v4_10006b3c = inttoptr i32 %v3_10006b3c to i32*
  store i32 %v0_10006b3c.pre, i32* %v4_10006b3c, align 4
  %v0_10006b40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b40 = add i32 %v0_10006b40, 4
  store i32 %v1_10006b40, i32* %r9.global-to-local, align 4
  %v0_10006b44 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b44 = add i32 %v0_10006b44, -1
  store i32 %v1_10006b44, i32* %ctr.global-to-local, align 4
  %v2_10006b44 = icmp eq i32 %v1_10006b44, 0
  br i1 %v2_10006b44, label %dec_label_pc_10006b48, label %dec_label_pc_10006b3c.dec_label_pc_10006b3c_crit_edge

dec_label_pc_10006b48:                            ; preds = %dec_label_pc_10006b3c.dec_label_pc_10006b3c_crit_edge, %dec_label_pc_10006b2c
  store i32 32, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006b60567 = load i32, i32* @r1, align 4
  %v3_10006b60568 = add i32 %v2_10006b60567, 192
  %v4_10006b60569 = inttoptr i32 %v3_10006b60568 to i32*
  store i32 0, i32* %v4_10006b60569, align 4
  %v0_10006b64570 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b64571 = add i32 %v0_10006b64570, -1
  store i32 %v1_10006b64571, i32* %ctr.global-to-local, align 4
  %v2_10006b64572 = icmp eq i32 %v1_10006b64571, 0
  br i1 %v2_10006b64572, label %dec_label_pc_10006b68, label %dec_label_pc_10006b58.dec_label_pc_10006b58_crit_edge

dec_label_pc_10006b58.dec_label_pc_10006b58_crit_edge: ; preds = %dec_label_pc_10006b48, %dec_label_pc_10006b58.dec_label_pc_10006b58_crit_edge
  %v0_10006b58.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006b60.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006b58 = add i32 %v0_10006b58.pre, 192
  store i32 %v1_10006b58, i32* %r10.global-to-local, align 4
  %v1_10006b5c = add i32 %v0_10006b58.pre, 4
  store i32 %v1_10006b5c, i32* %r9.global-to-local, align 4
  %v2_10006b60 = load i32, i32* @r1, align 4
  %v3_10006b60 = add i32 %v2_10006b60, %v1_10006b58
  %v4_10006b60 = inttoptr i32 %v3_10006b60 to i32*
  store i32 %v0_10006b60.pre, i32* %v4_10006b60, align 4
  %v0_10006b64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b64 = add i32 %v0_10006b64, -1
  store i32 %v1_10006b64, i32* %ctr.global-to-local, align 4
  %v2_10006b64 = icmp eq i32 %v1_10006b64, 0
  br i1 %v2_10006b64, label %dec_label_pc_10006b68, label %dec_label_pc_10006b58.dec_label_pc_10006b58_crit_edge

dec_label_pc_10006b68:                            ; preds = %dec_label_pc_10006b58.dec_label_pc_10006b58_crit_edge, %dec_label_pc_10006b48
  %v0_10006b68 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10006b68, i32* %stack_var_-1916, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10006bec

dec_label_pc_10006b84:                            ; preds = %dec_label_pc_10006bec, %dec_label_pc_10006c1c
  %v1_10006b94 = phi i32 [ 30, %dec_label_pc_10006bec ], [ 5, %dec_label_pc_10006c1c ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006b88 = load i32, i32* @global_var_1001c684.99, align 4
  store i32 %v3_10006b88, i32* %r0.global-to-local, align 4
  %v1_10006b8c = add i32 %v2_10006c04, 8
  %v2_10006b8c = inttoptr i32 %v1_10006b8c to i32*
  %v3_10006b8c = load i32, i32* %v2_10006b8c, align 4
  store i32 %v3_10006b8c, i32* %r9.global-to-local, align 4
  %v2_10006b90 = sub i32 %v3_10006b88, %v3_10006b8c
  store i32 %v2_10006b90, i32* %r0.global-to-local, align 4
  %v2_10006b94 = icmp ult i32 %v2_10006b90, %v1_10006b94
  %v3_10006b94 = icmp ugt i32 %v2_10006b90, %v1_10006b94
  %v4_10006b94 = icmp eq i32 %v2_10006b90, %v1_10006b94
  store i1 %v2_10006b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006b94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b94, label %dec_label_pc_10006c9c, label %dec_label_pc_10006b9c

dec_label_pc_10006b9c:                            ; preds = %dec_label_pc_10006b84
  %v1_10006b9c = icmp slt i32 %v3_10006c08, 1
  store i1 %v1_10006b9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c0c, i1* %cr7_eq.global-to-local, align 1
  %v1_10006cdc = add i32 %v2_10006c04, 4
  %v2_10006cdc = inttoptr i32 %v1_10006cdc to i32*
  %v3_10006cdc = load i32, i32* %v2_10006cdc, align 4
  store i32 %v3_10006cdc, i32* %r3.global-to-local, align 4
  br i1 %v3_10006c0c, label %dec_label_pc_10006cdc, label %dec_label_pc_10006ba4

dec_label_pc_10006ba4:                            ; preds = %dec_label_pc_10006b9c
  store i32 %v2_10006ce0, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006bb0 = call i32 @__asm_rlwinm(i32 %v3_10006cdc, i32 29, i32 3, i32 29)
  %v1_10006bb4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006bb4 = icmp slt i32 %v3_10006cdc, %v1_10006bb4
  %v3_10006bb4 = icmp sgt i32 %v3_10006cdc, %v1_10006bb4
  %v4_10006bb4 = icmp eq i32 %v3_10006cdc, %v1_10006bb4
  store i1 %v2_10006bb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006bb4, i1* %cr7_eq.global-to-local, align 1
  %v1_10006bb8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006bb8 = add i32 %v1_10006bb8, %v1_10006bb0
  store i32 %v2_10006bb8, i32* %r11.global-to-local, align 4
  %v1_10006bbc = urem i32 %v3_10006cdc, 32
  store i32 %v1_10006bbc, i32* %r10.global-to-local, align 4
  %v1_10006bc0 = add i32 %v2_10006bb8, 56
  %v2_10006bc0 = inttoptr i32 %v1_10006bc0 to i32*
  %v3_10006bc0 = load i32, i32* %v2_10006bc0, align 4
  %v0_10006bc4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006bc4 = shl i32 %v0_10006bc4, %v1_10006bbc
  store i32 %v3_10006bc4, i32* %r0.global-to-local, align 4
  %v2_10006bc8 = or i32 %v3_10006bc4, %v3_10006bc0
  store i32 %v2_10006bc8, i32* %r9.global-to-local, align 4
  store i32 %v2_10006bc8, i32* %v2_10006bc0, align 4
  br i1 %v3_10006bb4, label %dec_label_pc_10006bd4, label %dec_label_pc_10006bd8

dec_label_pc_10006bd4:                            ; preds = %dec_label_pc_10006ba4
  store i32 %v3_10006cdc, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006bd8

dec_label_pc_10006bd8:                            ; preds = %dec_label_pc_10006cdc, %dec_label_pc_10006ba4, %dec_label_pc_10006c14, %dec_label_pc_10007b24, %dec_label_pc_10006d08, %dec_label_pc_10006cd0, %dec_label_pc_10006bd4
  %v3_10006bd8 = load i32, i32* %stack_var_-1916, align 4
  store i32 %v3_10006bd8, i32* %r9.global-to-local, align 4
  %v1_10006bdc = add i32 %v3_10006bd8, 1
  store i32 %v1_10006bdc, i32* %r0.global-to-local, align 4
  %v1_10006be0 = icmp slt i32 %v1_10006bdc, 255
  %v2_10006be0 = icmp sgt i32 %v1_10006bdc, 255
  %v3_10006be0 = icmp eq i32 %v1_10006bdc, 255
  store i1 %v1_10006be0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006be0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10006bdc, i32* %stack_var_-1916, align 4
  br i1 %v2_10006be0, label %dec_label_pc_10006d10, label %dec_label_pc_10006bec

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006bd8, %dec_label_pc_10006b68
  %v0_10006bf0 = phi i32 [ %v1_10006bdc, %dec_label_pc_10006bd8 ], [ 0, %dec_label_pc_10006b68 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10006bf4 = load i32, i32* @global_var_1001c688.106, align 4
  store i32 %v3_10006bf4, i32* %r9.global-to-local, align 4
  %v2_10006bfc = mul i32 %v0_10006bf0, 288
  store i32 %v2_10006bfc, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10006c04 = add i32 %v3_10006bf4, %v2_10006bfc
  store i32 %v2_10006c04, i32* @r29, align 4
  %v1_10006c08 = add i32 %v2_10006c04, 12
  %v2_10006c08 = inttoptr i32 %v1_10006c08 to i32*
  %v3_10006c08 = load i32, i32* %v2_10006c08, align 4
  store i32 %v3_10006c08, i32* %r10.global-to-local, align 4
  %v1_10006c0c = icmp eq i32 %v3_10006c08, 0
  %v2_10006c0c = icmp ugt i32 %v3_10006c08, 1
  %v3_10006c0c = icmp eq i32 %v3_10006c08, 1
  store i1 %v1_10006c0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006c0c, label %dec_label_pc_10006b84, label %dec_label_pc_10006c14

dec_label_pc_10006c14:                            ; preds = %dec_label_pc_10006bec
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10006c0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10006c0c, label %dec_label_pc_10006bd8, label %dec_label_pc_10006c1c

dec_label_pc_10006c1c:                            ; preds = %dec_label_pc_10006c14
  store i32 5, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006b84

dec_label_pc_10006c24:                            ; preds = %dec_label_pc_100061dc
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006c28 = load i32, i32* @global_var_1001c68c.107, align 4
  store i32 %v3_10006c28, i32* %r3.global-to-local, align 4
  store i32 268463152, i32* @lr, align 4
  %v0_10006c2c = call i32 @function_10009518()
  store i32 %v0_10006c2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006250

dec_label_pc_10006c34:                            ; preds = %dec_label_pc_10006620
  %v1_10006c34 = icmp slt i32 %v1_10006544, 125
  %v3_10006c34 = icmp eq i32 %v1_10006544, 125
  store i1 %v1_10006c34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c34, label %dec_label_pc_10006534, label %dec_label_pc_10006c3c

dec_label_pc_10006c3c:                            ; preds = %dec_label_pc_10006c34
  %v1_10006c3c = icmp slt i32 %v1_10006544, 133
  %v3_10006c3c = icmp eq i32 %v1_10006544, 133
  store i1 %v1_10006c3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c3c, label %dec_label_pc_10006534, label %dec_label_pc_10006c44

dec_label_pc_10006c44:                            ; preds = %dec_label_pc_10006c3c
  %v1_10006c44 = icmp slt i32 %v1_10006544, 144
  %v3_10006c44 = icmp eq i32 %v1_10006544, 144
  store i1 %v1_10006c44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c44, label %dec_label_pc_10006534, label %dec_label_pc_10006c4c

dec_label_pc_10006c4c:                            ; preds = %dec_label_pc_10006c44
  %v1_10006c4c = icmp slt i32 %v1_10006544, 149
  %v3_10006c4c = icmp eq i32 %v1_10006544, 149
  store i1 %v1_10006c4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c4c, label %dec_label_pc_10006534, label %dec_label_pc_10006c54

dec_label_pc_10006c54:                            ; preds = %dec_label_pc_10006c4c
  %v1_10006c54 = icmp slt i32 %v1_10006544, 157
  %v3_10006c54 = icmp eq i32 %v1_10006544, 157
  store i1 %v1_10006c54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c54, label %dec_label_pc_10006534, label %dec_label_pc_10006c5c

dec_label_pc_10006c5c:                            ; preds = %dec_label_pc_10006c54
  %v1_10006c5c = icmp slt i32 %v1_10006544, 184
  %v3_10006c5c = icmp eq i32 %v1_10006544, 184
  store i1 %v1_10006c5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c5c, label %dec_label_pc_10006534, label %dec_label_pc_10006c64

dec_label_pc_10006c64:                            ; preds = %dec_label_pc_10006c5c
  %v1_10006c64 = icmp slt i32 %v1_10006544, 190
  %v3_10006c64 = icmp eq i32 %v1_10006544, 190
  store i1 %v1_10006c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c64, label %dec_label_pc_10006534, label %dec_label_pc_10006c6c

dec_label_pc_10006c6c:                            ; preds = %dec_label_pc_10006c64
  %v1_10006c6c = icmp slt i32 %v1_10006544, 196
  %v3_10006c6c = icmp eq i32 %v1_10006544, 196
  store i1 %v1_10006c6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c6c, label %dec_label_pc_10006534, label %dec_label_pc_10006c74

dec_label_pc_10006c74:                            ; preds = %dec_label_pc_10006c6c
  %v1_10006c74 = icmp ult i32 %v1_10006544, 112
  %v3_10006c74 = icmp eq i32 %v1_10006544, 112
  store i1 %v1_10006c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c74, i1* %cr7_eq.global-to-local, align 1
  %tmp256 = icmp ult i32 %v1_10006544, 113
  br i1 %tmp256, label %dec_label_pc_100068c8, label %dec_label_pc_10006c7c

dec_label_pc_10006c7c:                            ; preds = %dec_label_pc_10006c74
  %v1_10006c7c = icmp eq i32 %v1_10006544, 113
  %v3_10006c7c = icmp eq i32 %v1_10006544, 114
  store i1 %v1_10006c7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c7c, i1* %cr7_eq.global-to-local, align 1
  %tmp257 = icmp ult i32 %v1_10006544, 115
  br i1 %tmp257, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10006c88:                            ; preds = %dec_label_pc_10006a40
  store i32 %v0_10006a38, i32* @r29, align 4
  br label %dec_label_pc_10006a90

dec_label_pc_10006c90:                            ; preds = %dec_label_pc_10006618
  %v1_10006c90 = icmp slt i32 %v1_10006544, 114
  %v3_10006c90 = icmp eq i32 %v1_10006544, 114
  store i1 %v1_10006c90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c90, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10006c9c:                            ; preds = %dec_label_pc_10006b84
  %v1_10006c9c = add i32 %v2_10006c04, 4
  %v2_10006c9c = inttoptr i32 %v1_10006c9c to i32*
  %v3_10006c9c = load i32, i32* %v2_10006c9c, align 4
  store i32 %v3_10006c9c, i32* %r3.global-to-local, align 4
  store i32 268463268, i32* @lr, align 4
  %v0_10006ca0 = call i32 @function_10009518()
  store i32 %v0_10006ca0, i32* %r3.global-to-local, align 4
  %v0_10006ca4 = load i32, i32* @r29, align 4
  %v1_10006ca4 = add i32 %v0_10006ca4, 12
  %v2_10006ca4 = inttoptr i32 %v1_10006ca4 to i32*
  %v3_10006ca4 = load i32, i32* %v2_10006ca4, align 4
  store i32 %v3_10006ca4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10006cac = icmp ult i32 %v3_10006ca4, 2
  %v3_10006cac = icmp eq i32 %v3_10006ca4, 2
  store i1 %v1_10006cac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cac, i1* %cr7_eq.global-to-local, align 1
  %v2_10006cb0 = add i32 %v0_10006ca4, 4
  %v3_10006cb0 = inttoptr i32 %v2_10006cb0 to i32*
  store i32 -1, i32* %v3_10006cb0, align 4
  %tmp258 = icmp ult i32 %v3_10006ca4, 3
  br i1 %tmp258, label %dec_label_pc_10007b24, label %dec_label_pc_10006cb8

dec_label_pc_10006cb8:                            ; preds = %dec_label_pc_10006c9c
  %v0_10006cb8 = load i32, i32* @r29, align 4
  %v1_10006cb8 = add i32 %v0_10006cb8, 284
  %v2_10006cb8 = inttoptr i32 %v1_10006cb8 to i8*
  %v3_10006cb8 = load i8, i8* %v2_10006cb8, align 1
  %v4_10006cb8 = zext i8 %v3_10006cb8 to i32
  %v1_10006cbc = add nuw nsw i32 %v4_10006cb8, 1
  %v1_10006cc0 = urem i32 %v1_10006cbc, 256
  store i32 %v1_10006cc0, i32* %r9.global-to-local, align 4
  %v1_10006cc4 = icmp ult i32 %v1_10006cc0, 10
  %v3_10006cc4 = icmp eq i32 %v1_10006cc0, 10
  store i1 %v1_10006cc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cc4, i1* %cr7_eq.global-to-local, align 1
  %v1_10006cc8 = trunc i32 %v1_10006cbc to i8
  store i8 %v1_10006cc8, i8* %v2_10006cb8, align 1
  %v0_10006ccc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006ccc, label %dec_label_pc_10007b24, label %dec_label_pc_10006cd0

dec_label_pc_10006cd0:                            ; preds = %dec_label_pc_10006cb8
  %v0_10006cd0 = load i32, i32* @r29, align 4
  store i32 %v0_10006cd0, i32* @r3, align 4
  store i32 268463320, i32* @lr, align 4
  %v0_10006cd4 = call i32 @function_10005de8()
  store i32 %v0_10006cd4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006bd8

dec_label_pc_10006cdc:                            ; preds = %dec_label_pc_10006b9c
  store i32 %v2_10006ce0, i32* %r0.global-to-local, align 4
  %v1_10006ce4 = call i32 @__asm_rlwinm(i32 %v3_10006cdc, i32 29, i32 3, i32 29)
  %v1_10006ce8 = load i32, i32* @r31, align 4
  %v2_10006ce8 = icmp slt i32 %v3_10006cdc, %v1_10006ce8
  %v3_10006ce8 = icmp sgt i32 %v3_10006cdc, %v1_10006ce8
  %v4_10006ce8 = icmp eq i32 %v3_10006cdc, %v1_10006ce8
  store i1 %v2_10006ce8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ce8, i1* %cr7_eq.global-to-local, align 1
  %v1_10006cec = load i32, i32* %r0.global-to-local, align 4
  %v2_10006cec = add i32 %v1_10006cec, %v1_10006ce4
  store i32 %v2_10006cec, i32* %r11.global-to-local, align 4
  %v1_10006cf0 = urem i32 %v3_10006cdc, 32
  store i32 %v1_10006cf0, i32* %r0.global-to-local, align 4
  %v1_10006cf4 = add i32 %v2_10006cec, 184
  %v2_10006cf4 = inttoptr i32 %v1_10006cf4 to i32*
  %v3_10006cf4 = load i32, i32* %v2_10006cf4, align 4
  %v0_10006cf8 = load i32, i32* %r10.global-to-local, align 4
  %v3_10006cf8 = shl i32 %v0_10006cf8, %v1_10006cf0
  store i32 %v3_10006cf8, i32* %r0.global-to-local, align 4
  %v2_10006cfc = or i32 %v3_10006cf8, %v3_10006cf4
  store i32 %v2_10006cfc, i32* %r9.global-to-local, align 4
  store i32 %v2_10006cfc, i32* %v2_10006cf4, align 4
  br i1 %v3_10006ce8, label %dec_label_pc_10006d08, label %dec_label_pc_10006bd8

dec_label_pc_10006d08:                            ; preds = %dec_label_pc_10006cdc
  store i32 %v3_10006cdc, i32* @r31, align 4
  br label %dec_label_pc_10006bd8

dec_label_pc_10006d10:                            ; preds = %dec_label_pc_10006bd8
  %v0_10006d10 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006d10 = load i32, i32* @r31, align 4
  %v2_10006d10 = icmp slt i32 %v0_10006d10, %v1_10006d10
  %v4_10006d10 = icmp eq i32 %v0_10006d10, %v1_10006d10
  store i1 %v2_10006d10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d10, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_10006d10, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_10006d10, label %dec_label_pc_10006d2c, label %dec_label_pc_10006d30

dec_label_pc_10006d2c:                            ; preds = %dec_label_pc_10006d10
  store i32 %v1_10006d10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006d30

dec_label_pc_10006d30:                            ; preds = %dec_label_pc_10006d10, %dec_label_pc_10006d2c
  %v0_10006d40 = phi i32 [ %v0_10006d10, %dec_label_pc_10006d10 ], [ %v1_10006d10, %dec_label_pc_10006d2c ]
  store i32 %v2_10006d34, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_10006d3c, i32* %r7.global-to-local, align 4
  %v1_10006d40 = add i32 %v0_10006d40, 1
  store i32 %v1_10006d40, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d48.147 to i32), i32* @lr, align 4
  %v5_10006d44 = call i32 @function_100097e0(i32 %v1_10006d40, i32 %v2_100062d4, i32 %v2_10006d34, i32 0, i32 %v2_10006d3c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268463440, i32* @lr, align 4
  %v0_10006d4c = call i32 @function_100098e8()
  store i32 %v0_10006d4c, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006d4c, i32* @global_var_1001c684.99, align 4
  %v0_10006d5c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006d5c, i32* %stack_var_-1916, align 4
  br label %dec_label_pc_10006d98

dec_label_pc_10006d64:                            ; preds = %dec_label_pc_10006dbc, %dec_label_pc_10006e70
  %v0_10006d68 = phi i32 [ %v0_10006dc8, %dec_label_pc_10006dbc ], [ %v0_10006d68.pre, %dec_label_pc_10006e70 ]
  store i32 %v2_10006ce0, i32* %r0.global-to-local, align 4
  %v1_10006d68 = call i32 @__asm_rlwinm(i32 %v0_10006d68, i32 29, i32 3, i32 29)
  %v1_10006d6c = load i32, i32* %r0.global-to-local, align 4
  %v2_10006d6c = add i32 %v1_10006d6c, %v1_10006d68
  store i32 %v2_10006d6c, i32* %r9.global-to-local, align 4
  %v0_10006d70 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006d70 = urem i32 %v0_10006d70, 32
  store i32 %v1_10006d70, i32* %r11.global-to-local, align 4
  %v1_10006d74 = add i32 %v2_10006d6c, 56
  %v2_10006d74 = inttoptr i32 %v1_10006d74 to i32*
  %v3_10006d74 = load i32, i32* %v2_10006d74, align 4
  %v3_10006d78 = lshr i32 %v3_10006d74, %v1_10006d70
  store i32 %v3_10006d78, i32* %r0.global-to-local, align 4
  %v1_10006d7c = urem i32 %v3_10006d78, 2
  store i32 %v1_10006d7c, i32* %r9.global-to-local, align 4
  %v3_10006d7c = icmp eq i32 %v1_10006d7c, 0
  br i1 %v3_10006d7c, label %dec_label_pc_10006d84, label %dec_label_pc_10006f30.preheader

dec_label_pc_10006f30.preheader:                  ; preds = %dec_label_pc_10006d64
  %v0_10006f3089 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006f3090 = add i32 %v0_10006f3089, 12
  %v2_10006f3091 = inttoptr i32 %v1_10006f3090 to i32*
  %v3_10006f3092 = load i32, i32* %v2_10006f3091, align 4
  store i32 %v3_10006f3092, i32* %r10.global-to-local, align 4
  %v1_10006f3493 = icmp slt i32 %v3_10006f3092, 0
  %v3_10006f3495 = icmp eq i32 %v3_10006f3092, 0
  store i1 %v1_10006f3493, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f3495, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f3495, label %dec_label_pc_10006d84, label %dec_label_pc_10006f3c

dec_label_pc_10006d84:                            ; preds = %dec_label_pc_10006f30.loopexit, %dec_label_pc_10006f30.preheader, %dec_label_pc_10006d64, %dec_label_pc_100077ec, %dec_label_pc_10006d98, %dec_label_pc_10007b04, %dec_label_pc_10007af8, %dec_label_pc_10007820
  %v3_10006d84 = load i32, i32* %stack_var_-1916, align 4
  store i32 %v3_10006d84, i32* %r9.global-to-local, align 4
  %v1_10006d88 = add i32 %v3_10006d84, 1
  store i32 %v1_10006d88, i32* %r0.global-to-local, align 4
  %v1_10006d8c = icmp slt i32 %v1_10006d88, 255
  %v2_10006d8c = icmp sgt i32 %v1_10006d88, 255
  %v3_10006d8c = icmp eq i32 %v1_10006d88, 255
  store i1 %v1_10006d8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d8c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10006d88, i32* %stack_var_-1916, align 4
  br i1 %v2_10006d8c, label %dec_label_pc_100064f4, label %dec_label_pc_10006d98

dec_label_pc_10006d98:                            ; preds = %dec_label_pc_10006d84, %dec_label_pc_10006d30
  %v0_10006d9c = phi i32 [ %v1_10006d88, %dec_label_pc_10006d84 ], [ 0, %dec_label_pc_10006d30 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10006d9c = mul i32 %v0_10006d9c, 256
  store i32 %v1_10006d9c, i32* %r11.global-to-local, align 4
  %v3_10006da0 = load i32, i32* @global_var_1001c688.106, align 4
  store i32 %v3_10006da0, i32* %r9.global-to-local, align 4
  %v2_10006da8 = mul i32 %v0_10006d9c, 288
  store i32 %v2_10006da8, i32* %r0.global-to-local, align 4
  %v2_10006dac = add i32 %v3_10006da0, %v2_10006da8
  store i32 %v2_10006dac, i32* %r28.global-to-local, align 4
  %v1_10006db0 = add i32 %v2_10006dac, 4
  %v2_10006db0 = inttoptr i32 %v1_10006db0 to i32*
  %v3_10006db0 = load i32, i32* %v2_10006db0, align 4
  store i32 %v3_10006db0, i32* %r3.global-to-local, align 4
  %v1_10006db4 = icmp slt i32 %v3_10006db0, -1
  %v3_10006db4 = icmp eq i32 %v3_10006db0, -1
  store i1 %v1_10006db4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006db4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006db4, label %dec_label_pc_10006d84, label %dec_label_pc_10006dbc

dec_label_pc_10006dbc:                            ; preds = %dec_label_pc_10006d98
  store i32 %v2_10006ce0, i32* %r11.global-to-local, align 4
  %v1_10006dc0 = call i32 @__asm_rlwinm(i32 %v3_10006db0, i32 29, i32 3, i32 29)
  %v1_10006dc4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006dc4 = add i32 %v1_10006dc4, %v1_10006dc0
  store i32 %v2_10006dc4, i32* %r9.global-to-local, align 4
  %v0_10006dc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006dc8 = urem i32 %v0_10006dc8, 32
  store i32 %v1_10006dc8, i32* %r11.global-to-local, align 4
  %v1_10006dcc = add i32 %v2_10006dc4, 184
  %v2_10006dcc = inttoptr i32 %v1_10006dcc to i32*
  %v3_10006dcc = load i32, i32* %v2_10006dcc, align 4
  %v3_10006dd0 = lshr i32 %v3_10006dcc, %v1_10006dc8
  store i32 %v3_10006dd0, i32* %r0.global-to-local, align 4
  %v1_10006dd4 = urem i32 %v3_10006dd0, 2
  store i32 %v1_10006dd4, i32* %r9.global-to-local, align 4
  %v3_10006dd4 = icmp eq i32 %v1_10006dd4, 0
  br i1 %v3_10006dd4, label %dec_label_pc_10006d64, label %dec_label_pc_10006ddc

dec_label_pc_10006ddc:                            ; preds = %dec_label_pc_10006dbc
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_10006dec, i32* %r6.global-to-local, align 4
  store i32 %v2_10006df0, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268463616, i32* @lr, align 4
  %v5_10006dfc = call i32 @function_1000a09c(i32 1, i32 4, i32 %v2_10006dec, i32 %v2_10006df0, i32 %v1_10006dd4)
  store i32 %v5_10006dfc, i32* %r3.global-to-local, align 4
  %v3_10006e00 = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10006e00, i32* %r0.global-to-local, align 4
  %v2_10006e04 = or i32 %v3_10006e00, %v5_10006dfc
  store i32 %v2_10006e04, i32* %r9.global-to-local, align 4
  %v5_10006e04 = icmp eq i32 %v2_10006e04, 0
  br i1 %v5_10006e04, label %dec_label_pc_10006e0c, label %dec_label_pc_10007b04

dec_label_pc_10006e0c:                            ; preds = %dec_label_pc_10006ddc
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10006e10 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006e10 = add i32 %v1_10006e10, 12
  %v3_10006e10 = inttoptr i32 %v2_10006e10 to i32*
  store i32 2, i32* %v3_10006e10, align 4
  %v0_10006e14 = call i32 @function_10005b08()
  %v3_10006e18 = load i16, i16* @global_var_1001c680.102, align 2
  %v4_10006e18 = zext i16 %v3_10006e18 to i32
  store i32 %v4_10006e18, i32* %r9.global-to-local, align 4
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10006e24 = load i32, i32* @global_var_1001c678.100, align 4
  store i32 %v3_10006e24, i32* %r11.global-to-local, align 4
  %v1_10006e28 = icmp slt i32 %v3_10006e24, 0
  %v3_10006e28 = icmp eq i32 %v3_10006e24, 0
  store i1 %v1_10006e28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e28, i1* %cr7_eq.global-to-local, align 1
  %v2_10006e20 = urem i32 %v0_10006e14, %v4_10006e18
  %v2_10006e2c = sub i32 %v0_10006e14, %v2_10006e20
  store i32 %v2_10006e2c, i32* %r0.global-to-local, align 4
  store i32 %v2_10006e20, i32* %r3.global-to-local, align 4
  %tmp261 = icmp slt i32 %v3_10006e24, 1
  br i1 %tmp261, label %dec_label_pc_10007b30, label %dec_label_pc_10006e3c

dec_label_pc_10006e3c:                            ; preds = %dec_label_pc_10006e0c
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10006e24, i32* %ctr.global-to-local, align 4
  %v3_10006e44 = load i32, i32* @global_var_1001c67c.101, align 4
  store i32 %v3_10006e44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10006e54

dec_label_pc_10006e4c:                            ; preds = %dec_label_pc_10006e64, %dec_label_pc_10006e54
  %v4_10006e6898 = phi i1 [ %v4_10006e68, %dec_label_pc_10006e64 ], [ %v4_10006e5c, %dec_label_pc_10006e54 ]
  %v2_10006e6896 = phi i1 [ %v2_10006e68, %dec_label_pc_10006e64 ], [ %v2_10006e5c, %dec_label_pc_10006e54 ]
  %v1_10006e4c = add i32 %v0_10006e4c, 16
  store i32 %v1_10006e4c, i32* %r0.global-to-local, align 4
  %v1_10006e50 = add i32 %v0_10006e50, -1
  store i32 %v1_10006e50, i32* %ctr.global-to-local, align 4
  %v2_10006e50 = icmp eq i32 %v1_10006e50, 0
  br i1 %v2_10006e50, label %dec_label_pc_10007b30.loopexit, label %dec_label_pc_10006e54

dec_label_pc_10006e54:                            ; preds = %dec_label_pc_10006e4c, %dec_label_pc_10006e3c
  %v0_10006e50 = phi i32 [ %v1_10006e50, %dec_label_pc_10006e4c ], [ %v3_10006e24, %dec_label_pc_10006e3c ]
  %v0_10006e4c = phi i32 [ %v1_10006e4c, %dec_label_pc_10006e4c ], [ %v3_10006e44, %dec_label_pc_10006e3c ]
  store i32 %v0_10006e4c, i32* %r9.global-to-local, align 4
  %v1_10006e58 = add i32 %v0_10006e4c, 8
  %v2_10006e58 = inttoptr i32 %v1_10006e58 to i16*
  %v3_10006e58 = load i16, i16* %v2_10006e58, align 2
  %v4_10006e58 = zext i16 %v3_10006e58 to i32
  store i32 %v4_10006e58, i32* %r0.global-to-local, align 4
  %v2_10006e5c = icmp ult i32 %v4_10006e58, %v2_10006e20
  %v3_10006e5c = icmp ugt i32 %v4_10006e58, %v2_10006e20
  %v4_10006e5c = icmp eq i32 %v4_10006e58, %v2_10006e20
  br i1 %v3_10006e5c, label %dec_label_pc_10006e4c, label %dec_label_pc_10006e64

dec_label_pc_10006e64:                            ; preds = %dec_label_pc_10006e54
  %v1_10006e64 = add i32 %v0_10006e4c, 10
  %v2_10006e64 = inttoptr i32 %v1_10006e64 to i16*
  %v3_10006e64 = load i16, i16* %v2_10006e64, align 2
  %v4_10006e64 = zext i16 %v3_10006e64 to i32
  store i32 %v4_10006e64, i32* %r0.global-to-local, align 4
  %v2_10006e68 = icmp ult i32 %v4_10006e64, %v2_10006e20
  %v3_10006e68 = icmp ugt i32 %v4_10006e64, %v2_10006e20
  %v4_10006e68 = icmp eq i32 %v4_10006e64, %v2_10006e20
  br i1 %v3_10006e68, label %dec_label_pc_10006e70.loopexit, label %dec_label_pc_10006e4c

dec_label_pc_10006e70.loopexit:                   ; preds = %dec_label_pc_10006e64
  store i1 %v2_10006e68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006e68, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006e70

dec_label_pc_10006e70:                            ; preds = %dec_label_pc_10006e70.loopexit, %dec_label_pc_10007b30
  %v0_10006e78 = phi i32 [ %v0_10006e4c, %dec_label_pc_10006e70.loopexit ], [ 0, %dec_label_pc_10007b30 ]
  %v0_10006e70 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006e70 = add i32 %v0_10006e70, 4
  %v2_10006e70 = inttoptr i32 %v1_10006e70 to i32*
  %v3_10006e70 = load i32, i32* %v2_10006e70, align 4
  store i32 %v3_10006e70, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10006e78 = inttoptr i32 %v0_10006e70 to i32*
  store i32 %v0_10006e78, i32* %v2_10006e78, align 4
  %v0_10006e7c = load i32, i32* %r5.global-to-local, align 4
  %v1_10006e7c = load i32, i32* %r28.global-to-local, align 4
  %v2_10006e7c = add i32 %v1_10006e7c, 24
  %v3_10006e7c = inttoptr i32 %v2_10006e7c to i32*
  store i32 %v0_10006e7c, i32* %v3_10006e7c, align 4
  %v0_10006d68.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006d64

dec_label_pc_10006f30.loopexit:                   ; preds = %dec_label_pc_10007864, %dec_label_pc_1000765c, %dec_label_pc_10007864.thread, %dec_label_pc_10006f9c
  %v0_10006f30 = phi i32 [ %v0_10006fb482, %dec_label_pc_10006f9c ], [ %v0_10006ffc, %dec_label_pc_10007864.thread ], [ %v0_10007868, %dec_label_pc_10007864 ], [ %v0_10006fb4, %dec_label_pc_1000765c ]
  %v1_10006f30 = add i32 %v0_10006f30, 12
  %v2_10006f30 = inttoptr i32 %v1_10006f30 to i32*
  %v3_10006f30 = load i32, i32* %v2_10006f30, align 4
  store i32 %v3_10006f30, i32* %r10.global-to-local, align 4
  %v1_10006f34 = icmp slt i32 %v3_10006f30, 0
  %v3_10006f34 = icmp eq i32 %v3_10006f30, 0
  store i1 %v1_10006f34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f34, label %dec_label_pc_10006d84, label %dec_label_pc_10006f3c

dec_label_pc_10006f3c:                            ; preds = %dec_label_pc_10006f30.preheader, %dec_label_pc_10006f30.loopexit
  %v0_1000784c = phi i32 [ %v0_10006f30, %dec_label_pc_10006f30.loopexit ], [ %v0_10006f3089, %dec_label_pc_10006f30.preheader ]
  %v1_10006f3c = add i32 %v0_1000784c, 24
  %v2_10006f3c = inttoptr i32 %v1_10006f3c to i32*
  %v3_10006f3c = load i32, i32* %v2_10006f3c, align 4
  store i32 %v3_10006f3c, i32* %r0.global-to-local, align 4
  %v1_10006f40 = add i32 %v0_1000784c, 28
  store i32 %v1_10006f40, i32* %r14.global-to-local, align 4
  %v1_10006f44 = icmp slt i32 %v3_10006f3c, 256
  %v3_10006f44 = icmp eq i32 %v3_10006f3c, 256
  store i1 %v1_10006f44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f44, label %dec_label_pc_10007844, label %dec_label_pc_10006f4c

dec_label_pc_10006f4c:                            ; preds = %dec_label_pc_10006f3c, %dec_label_pc_10007844
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10006f54 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006f54 = inttoptr i32 %v1_10006f54 to i32*
  store i32 0, i32* %v2_10006f54, align 4
  %v0_10006f58 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006f58 = add i32 %v0_10006f58, 24
  %v2_10006f58 = inttoptr i32 %v1_10006f58 to i32*
  %v3_10006f58 = load i32, i32* %v2_10006f58, align 4
  store i32 %v3_10006f58, i32* %r5.global-to-local, align 4
  %v1_10006f5c = add i32 %v0_10006f58, 4
  %v2_10006f5c = inttoptr i32 %v1_10006f5c to i32*
  %v3_10006f5c = load i32, i32* %v2_10006f5c, align 4
  store i32 %v3_10006f5c, i32* %r3.global-to-local, align 4
  %v0_10006f60 = load i32, i32* %r14.global-to-local, align 4
  %v2_10006f60 = add i32 %v0_10006f60, %v3_10006f58
  store i32 %v2_10006f60, i32* @r29, align 4
  %v1_10006f64 = sub i32 256, %v3_10006f58
  store i32 %v1_10006f64, i32* %r5.global-to-local, align 4
  store i32 268463984, i32* @lr, align 4
  %v4_10006f6c = call i32 @function_1000a108(i32 %v3_10006f5c, i32 %v2_10006f60, i32 %v1_10006f64, i32 16384)
  store i32 %v4_10006f6c, i32* %r3.global-to-local, align 4
  %tmp262 = icmp slt i32 %v4_10006f6c, 1
  br i1 %tmp262, label %dec_label_pc_100077e0, label %dec_label_pc_10006f78

dec_label_pc_10006f78:                            ; preds = %dec_label_pc_10006f4c
  store i32 %v4_10006f6c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006f84

dec_label_pc_10006f84:                            ; preds = %dec_label_pc_10006f94, %dec_label_pc_10006f78
  %v0_10006f98156 = phi i32 [ %v1_10006f98, %dec_label_pc_10006f94 ], [ %v4_10006f6c, %dec_label_pc_10006f78 ]
  %v1_10006f90 = phi i32 [ %v1_10006f94, %dec_label_pc_10006f94 ], [ 0, %dec_label_pc_10006f78 ]
  %v1_10006f84 = load i32, i32* @r29, align 4
  %v2_10006f84 = add i32 %v1_10006f84, %v1_10006f90
  %v3_10006f84 = inttoptr i32 %v2_10006f84 to i8*
  %v4_10006f84 = load i8, i8* %v3_10006f84, align 1
  %v5_10006f84 = zext i8 %v4_10006f84 to i32
  store i32 %v5_10006f84, i32* %r0.global-to-local, align 4
  %v3_10006f88 = icmp eq i8 %v4_10006f84, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f88, label %dec_label_pc_10006f90, label %dec_label_pc_10006f94

dec_label_pc_10006f90:                            ; preds = %dec_label_pc_10006f84
  %v0_10006f90 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006f90 = trunc i32 %v0_10006f90 to i8
  store i8 %v3_10006f90, i8* %v3_10006f84, align 1
  %v0_10006f94.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006f98.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006f94

dec_label_pc_10006f94:                            ; preds = %dec_label_pc_10006f84, %dec_label_pc_10006f90
  %v0_10006f98 = phi i32 [ %v0_10006f98156, %dec_label_pc_10006f84 ], [ %v0_10006f98.pre, %dec_label_pc_10006f90 ]
  %v0_10006f94 = phi i32 [ %v1_10006f90, %dec_label_pc_10006f84 ], [ %v0_10006f94.pre, %dec_label_pc_10006f90 ]
  %v1_10006f94 = add i32 %v0_10006f94, 1
  store i32 %v1_10006f94, i32* %r9.global-to-local, align 4
  %v1_10006f98 = add i32 %v0_10006f98, -1
  store i32 %v1_10006f98, i32* %ctr.global-to-local, align 4
  %v2_10006f98 = icmp eq i32 %v1_10006f98, 0
  br i1 %v2_10006f98, label %dec_label_pc_10006f9c, label %dec_label_pc_10006f84

dec_label_pc_10006f9c:                            ; preds = %dec_label_pc_10006f94, %dec_label_pc_100077e4
  %v0_10006f9c = load i32, i32* %r28.global-to-local, align 4
  %v1_10006f9c = add i32 %v0_10006f9c, 24
  %v2_10006f9c = inttoptr i32 %v1_10006f9c to i32*
  %v3_10006f9c = load i32, i32* %v2_10006f9c, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006fa4 = load i32, i32* @global_var_1001c684.99, align 4
  store i32 %v3_10006fa4, i32* %r0.global-to-local, align 4
  %v2_10006fa8 = add i32 %v3_10006f9c, %v4_10006f6c
  store i32 %v2_10006fa8, i32* %r5.global-to-local, align 4
  store i32 %v2_10006fa8, i32* %v2_10006f9c, align 4
  %v0_10006fb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006fb0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006fb0 = add i32 %v1_10006fb0, 8
  %v3_10006fb0 = inttoptr i32 %v2_10006fb0 to i32*
  store i32 %v0_10006fb0, i32* %v3_10006fb0, align 4
  %v0_10006fb482 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006fb483 = add i32 %v0_10006fb482, 12
  %v2_10006fb484 = inttoptr i32 %v1_10006fb483 to i32*
  %v3_10006fb485 = load i32, i32* %v2_10006fb484, align 4
  store i32 %v3_10006fb485, i32* %r10.global-to-local, align 4
  %v1_10006fb886 = icmp ult i32 %v3_10006fb485, 10
  %v2_10006fb887 = icmp ugt i32 %v3_10006fb485, 10
  %v3_10006fb888 = icmp eq i32 %v3_10006fb485, 10
  store i1 %v1_10006fb886, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fb888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006fb887, label %dec_label_pc_10006f30.loopexit, label %dec_label_pc_10006fc0

dec_label_pc_10006fc0:                            ; preds = %dec_label_pc_10006f9c, %dec_label_pc_1000765c
  %v0_10006fc4 = phi i32 [ %v3_10006fb4, %dec_label_pc_1000765c ], [ %v3_10006fb485, %dec_label_pc_10006f9c ]
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10006fc4 = mul i32 %v0_10006fc4, 4
  store i32 %v1_10006fc4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bff4.150 to i32), i32* %r11.global-to-local, align 4
  %v2_10006fcc = add i32 %v1_10006fc4, ptrtoint (i32* @global_var_1000bff4.150 to i32)
  %v3_10006fcc = inttoptr i32 %v2_10006fcc to i32*
  %v4_10006fcc = load i32, i32* %v3_10006fcc, align 4
  %v2_10006fd0 = add i32 %v4_10006fcc, ptrtoint (i32* @global_var_1000bff4.150 to i32)
  store i32 %v2_10006fd0, i32* %r9.global-to-local, align 4
  store i32 %v2_10006fd0, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10006fd0)
  store i32 ptrtoint (i32* @global_var_1000c020.151 to i32), i32* %r11.global-to-local, align 4
  store i32 31, i32* %r22.global-to-local, align 4
  store i32 268500992, i32* %r10.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10006ff8 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10006ff8, i32* %r29.global-to-local, align 4
  %v0_10006ffc = load i32, i32* %r28.global-to-local, align 4
  %v1_10006ffc = add i32 %v0_10006ffc, 24
  %v2_10006ffc = inttoptr i32 %v1_10006ffc to i32*
  %v3_10006ffc = load i32, i32* %v2_10006ffc, align 4
  store i32 %v3_10006ffc, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 65531, i32* %r27.global-to-local, align 4
  store i32 -3, i32* %r18.global-to-local, align 4
  store i32 -385280, i32* %r21.global-to-local, align 4
  store i32 -4, i32* %r17.global-to-local, align 4
  %v2_1000701879 = icmp sgt i32 %v3_10006ffc, 0
  %v4_1000701881 = icmp eq i32 %v3_10006ffc, 0
  store i1 %v2_1000701879, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000701881, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000701879, label %dec_label_pc_10007020.preheader, label %dec_label_pc_10007864.thread

dec_label_pc_10007864.thread:                     ; preds = %dec_label_pc_10006fc0
  br label %dec_label_pc_10006f30.loopexit

dec_label_pc_10007020.preheader:                  ; preds = %dec_label_pc_10006fc0, %dec_label_pc_1000776c
  %v0_10007770173 = phi i32 [ %v1_10007770, %dec_label_pc_1000776c ], [ 0, %dec_label_pc_10006fc0 ]
  %v0_10007790163 = phi i32 [ %v0_10007988, %dec_label_pc_1000776c ], [ %v0_10006ffc, %dec_label_pc_10006fc0 ]
  %v1_1000702c162 = phi i32 [ %v1_10007018, %dec_label_pc_1000776c ], [ %v3_10006ffc, %dec_label_pc_10006fc0 ]
  %v0_10007020160 = phi i32 [ %v1_1000776c, %dec_label_pc_1000776c ], [ %v0_10006ff8, %dec_label_pc_10006fc0 ]
  br label %dec_label_pc_10007020

dec_label_pc_10007020:                            ; preds = %dec_label_pc_10007020.preheader, %dec_label_pc_10007090
  %v0_10007770 = phi i32 [ %v0_10007770173, %dec_label_pc_10007020.preheader ], [ %v0_100070a4, %dec_label_pc_10007090 ]
  %v0_10007988 = phi i32 [ %v0_10007790163, %dec_label_pc_10007020.preheader ], [ %v0_1000709c, %dec_label_pc_10007090 ]
  %v1_10007018 = phi i32 [ %v1_1000702c162, %dec_label_pc_10007020.preheader ], [ %v3_1000709c, %dec_label_pc_10007090 ]
  %v0_1000776c = phi i32 [ %v0_10007020160, %dec_label_pc_10007020.preheader ], [ %v1_100070a0, %dec_label_pc_10007090 ]
  %v1_10007020 = inttoptr i32 %v0_1000776c to i8*
  %v2_10007020 = load i8, i8* %v1_10007020, align 1
  %v3_10007020 = zext i8 %v2_10007020 to i32
  store i32 %v3_10007020, i32* %r0.global-to-local, align 4
  %v1_10007024 = icmp ne i8 %v2_10007020, -1
  %v3_10007024 = icmp eq i8 %v2_10007020, -1
  store i1 %v1_10007024, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007024, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007024, label %dec_label_pc_1000702c, label %dec_label_pc_100070ac

dec_label_pc_1000702c:                            ; preds = %dec_label_pc_10007020
  %v0_1000702c = load i32, i32* %r14.global-to-local, align 4
  %v2_1000702c = add i32 %v0_1000702c, %v1_10007018
  store i32 %v2_1000702c, i32* %r9.global-to-local, align 4
  %v1_10007030 = add i32 %v0_1000776c, 1
  store i32 %v1_10007030, i32* %r11.global-to-local, align 4
  %v2_10007034 = icmp ult i32 %v2_1000702c, %v1_10007030
  %v3_10007034 = icmp ugt i32 %v2_1000702c, %v1_10007030
  %v4_10007034 = icmp eq i32 %v2_1000702c, %v1_10007030
  store i1 %v2_10007034, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007034, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007034, label %dec_label_pc_1000703c, label %dec_label_pc_100070ac

dec_label_pc_1000703c:                            ; preds = %dec_label_pc_1000702c
  %v2_1000703c = inttoptr i32 %v1_10007030 to i8*
  %v3_1000703c = load i8, i8* %v2_1000703c, align 1
  %v4_1000703c = zext i8 %v3_1000703c to i32
  store i32 %v4_1000703c, i32* %r0.global-to-local, align 4
  %v1_10007040 = icmp ne i8 %v3_1000703c, -1
  %v3_10007040 = icmp eq i8 %v3_1000703c, -1
  store i1 %v1_10007040, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007040, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007040, label %dec_label_pc_1000776c, label %dec_label_pc_10007048

dec_label_pc_10007048:                            ; preds = %dec_label_pc_1000703c
  %v1_10007048 = icmp ult i8 %v3_1000703c, -3
  %v3_10007048 = icmp eq i8 %v3_1000703c, -3
  store i1 %v1_10007048, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007048, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007048, label %dec_label_pc_10007778, label %dec_label_pc_10007050

dec_label_pc_10007050:                            ; preds = %dec_label_pc_10007048
  %v1_10007050 = add i32 %v0_1000776c, 2
  store i32 %v1_10007050, i32* %r0.global-to-local, align 4
  %v2_10007054 = icmp ult i32 %v2_1000702c, %v1_10007050
  %v3_10007054 = icmp ugt i32 %v2_1000702c, %v1_10007050
  %v4_10007054 = icmp eq i32 %v2_1000702c, %v1_10007050
  store i1 %v2_10007054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007054, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007054, label %dec_label_pc_1000705c, label %dec_label_pc_100070ac

dec_label_pc_1000705c:                            ; preds = %dec_label_pc_100079ac, %dec_label_pc_10007050, %dec_label_pc_100079b4
  %v0_1000705c = phi i32 [ %v1_10007030, %dec_label_pc_100079ac ], [ %v1_10007030, %dec_label_pc_10007050 ], [ %v0_1000705c.pre, %dec_label_pc_100079b4 ]
  %v1_1000705c = inttoptr i32 %v0_1000705c to i8*
  %v2_1000705c = load i8, i8* %v1_1000705c, align 1
  %v3_1000705c = zext i8 %v2_1000705c to i32
  store i32 %v3_1000705c, i32* %r0.global-to-local, align 4
  %v1_10007060 = icmp ult i8 %v2_1000705c, -3
  %v3_10007060 = icmp eq i8 %v2_1000705c, -3
  store i1 %v1_10007060, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007060, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007060, label %dec_label_pc_100077c8, label %dec_label_pc_10007068

dec_label_pc_10007068:                            ; preds = %dec_label_pc_100077b8, %dec_label_pc_1000705c
  %v2_10007834 = phi i32 [ %v0_100077bc, %dec_label_pc_100077b8 ], [ %v0_1000705c, %dec_label_pc_1000705c ]
  %v0_10007068 = phi i32 [ %v3_100077bc, %dec_label_pc_100077b8 ], [ %v3_1000705c, %dec_label_pc_1000705c ]
  %v1_10007068 = icmp ult i32 %v0_10007068, 251
  %v3_10007068 = icmp eq i32 %v0_10007068, 251
  store i1 %v1_10007068, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007068, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007068, label %dec_label_pc_10007834, label %dec_label_pc_10007070

dec_label_pc_10007070:                            ; preds = %dec_label_pc_10007068, %dec_label_pc_10007834
  %v0_10007070 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007070 = add i32 %v0_10007070, 2
  %v2_10007070 = inttoptr i32 %v1_10007070 to i8*
  %v3_10007070 = load i8, i8* %v2_10007070, align 1
  %v4_10007070 = zext i8 %v3_10007070 to i32
  store i32 %v4_10007070, i32* %r0.global-to-local, align 4
  %v1_10007074 = icmp ult i8 %v3_10007070, -3
  %v3_10007074 = icmp eq i8 %v3_10007070, -3
  store i1 %v1_10007074, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007074, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007074, label %dec_label_pc_100077d8, label %dec_label_pc_1000707c

dec_label_pc_1000707c:                            ; preds = %dec_label_pc_100077c8, %dec_label_pc_10007070
  %v2_1000783c = phi i32 [ %v0_100077cc, %dec_label_pc_100077c8 ], [ %v0_10007070, %dec_label_pc_10007070 ]
  %v0_1000707c = phi i32 [ %v4_100077cc, %dec_label_pc_100077c8 ], [ %v4_10007070, %dec_label_pc_10007070 ]
  %v1_1000707c = icmp ult i32 %v0_1000707c, 251
  %v3_1000707c = icmp eq i32 %v0_1000707c, 251
  store i1 %v1_1000707c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000707c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000707c, label %dec_label_pc_1000783c, label %dec_label_pc_10007084

dec_label_pc_10007084:                            ; preds = %dec_label_pc_1000707c, %dec_label_pc_1000783c, %dec_label_pc_100077d8
  %v0_10007084 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007084 = add i32 %v0_10007084, 4
  %v2_10007084 = inttoptr i32 %v1_10007084 to i32*
  %v3_10007084 = load i32, i32* %v2_10007084, align 4
  store i32 %v3_10007084, i32* %r3.global-to-local, align 4
  %v0_10007088 = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10007090

dec_label_pc_10007090:                            ; preds = %dec_label_pc_10007988, %dec_label_pc_10007084
  %storemerge2 = phi i32 [ %v2_100079a0, %dec_label_pc_10007988 ], [ %v0_10007088, %dec_label_pc_10007084 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_10007988 ], [ 3, %dec_label_pc_10007084 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007094 = load i32, i32* @r31, align 4
  %v1_10007094 = add i32 %v0_10007094, 3
  store i32 %v1_10007094, i32* @r31, align 4
  store i32 268464284, i32* @lr, align 4
  %v4_10007098 = call i32 @function_1000a180(i32 16384, i32 %storemerge2, i32 %storemerge, i32 16384)
  store i32 %v4_10007098, i32* %r3.global-to-local, align 4
  %v0_1000709c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000709c = add i32 %v0_1000709c, 24
  %v2_1000709c = inttoptr i32 %v1_1000709c to i32*
  %v3_1000709c = load i32, i32* %v2_1000709c, align 4
  store i32 %v3_1000709c, i32* %r5.global-to-local, align 4
  %v0_100070a0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100070a0 = add i32 %v0_100070a0, 3
  store i32 %v1_100070a0, i32* %r29.global-to-local, align 4
  %v0_100070a4 = load i32, i32* @r31, align 4
  %v2_100070a4 = icmp slt i32 %v0_100070a4, %v3_1000709c
  %v4_100070a4 = icmp eq i32 %v0_100070a4, %v3_1000709c
  store i1 %v2_100070a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100070a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100070a4, label %dec_label_pc_10007020, label %dec_label_pc_100070ac

dec_label_pc_100070ac:                            ; preds = %dec_label_pc_1000776c, %dec_label_pc_10007778, %dec_label_pc_10007050, %dec_label_pc_1000702c, %dec_label_pc_10007020, %dec_label_pc_10007090
  %v0_10007868 = phi i32 [ %v0_10007988, %dec_label_pc_10007778 ], [ %v0_10007988, %dec_label_pc_10007050 ], [ %v0_10007988, %dec_label_pc_1000702c ], [ %v0_10007988, %dec_label_pc_10007020 ], [ %v0_1000709c, %dec_label_pc_10007090 ], [ %v0_10007988, %dec_label_pc_1000776c ]
  %v0_100070ac = phi i32 [ %v0_10007770, %dec_label_pc_10007778 ], [ %v0_10007770, %dec_label_pc_10007050 ], [ %v0_10007770, %dec_label_pc_1000702c ], [ %v0_10007770, %dec_label_pc_10007020 ], [ %v0_100070a4, %dec_label_pc_10007090 ], [ %v1_10007770, %dec_label_pc_1000776c ]
  %tmp263 = icmp slt i32 %v0_100070ac, 1
  br i1 %tmp263, label %dec_label_pc_10007864, label %dec_label_pc_100070b4

dec_label_pc_100070b4:                            ; preds = %dec_label_pc_100070ac
  store i32 3, i32* %r10.global-to-local, align 4
  %v2_100070b8 = add i32 %v0_10007868, 12
  %v3_100070b8 = inttoptr i32 %v2_100070b8 to i32*
  store i32 3, i32* %v3_100070b8, align 4
  %v0_1000765c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1000765c.pre = load i32, i32* @r31, align 4
  %v1_10007674.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000765c

dec_label_pc_1000765c:                            ; preds = %dec_label_pc_100070b4, %dec_label_pc_10007868
  %v1_10007674 = phi i32 [ %v1_10007674.pre, %dec_label_pc_100070b4 ], [ %v0_10007868, %dec_label_pc_10007868 ]
  %v0_10007668 = phi i32 [ %v1_1000765c.pre, %dec_label_pc_100070b4 ], [ %v0_100070ac, %dec_label_pc_10007868 ]
  %v1_1000766c = phi i32 [ %v0_1000765c.pre, %dec_label_pc_100070b4 ], [ %v3_10007868, %dec_label_pc_10007868 ]
  %v2_1000765c = icmp slt i32 %v1_1000766c, %v0_10007668
  %v3_1000765c = icmp sgt i32 %v1_1000766c, %v0_10007668
  %v4_1000765c = icmp eq i32 %v1_1000766c, %v0_10007668
  store i1 %v2_1000765c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000765c, i1* %cr7_eq.global-to-local, align 1
  %v0_10007668.v1_1000766c = select i1 %v3_1000765c, i32 %v0_10007668, i32 %v1_1000766c
  store i32 %v0_10007668.v1_1000766c, i32* %r0.global-to-local, align 4
  %v2_1000766c = sub i32 %v1_1000766c, %v0_10007668.v1_1000766c
  store i32 %v2_1000766c, i32* %r5.global-to-local, align 4
  %v0_10007670 = load i32, i32* %r14.global-to-local, align 4
  %v2_10007670 = add i32 %v0_10007670, %v0_10007668.v1_1000766c
  %v2_10007674 = add i32 %v1_10007674, 24
  %v3_10007674 = inttoptr i32 %v2_10007674 to i32*
  store i32 %v2_1000766c, i32* %v3_10007674, align 4
  %v0_10007678 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10007678, i32* %r3.global-to-local, align 4
  store i32 268465792, i32* @lr, align 4
  %v3_1000767c = call i32 @function_10009c78(i32 %v0_10007678, i32 %v2_10007670, i32 %v2_1000766c)
  store i32 %v3_1000767c, i32* %r3.global-to-local, align 4
  %v0_10006fb4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006fb4 = add i32 %v0_10006fb4, 12
  %v2_10006fb4 = inttoptr i32 %v1_10006fb4 to i32*
  %v3_10006fb4 = load i32, i32* %v2_10006fb4, align 4
  store i32 %v3_10006fb4, i32* %r10.global-to-local, align 4
  %v1_10006fb8 = icmp ult i32 %v3_10006fb4, 10
  %v2_10006fb8 = icmp ugt i32 %v3_10006fb4, 10
  %v3_10006fb8 = icmp eq i32 %v3_10006fb4, 10
  store i1 %v1_10006fb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006fb8, label %dec_label_pc_10006f30.loopexit, label %dec_label_pc_10006fc0

dec_label_pc_1000776c:                            ; preds = %dec_label_pc_1000703c
  %v1_1000776c = add i32 %v0_1000776c, 2
  store i32 %v1_1000776c, i32* %r29.global-to-local, align 4
  %v1_10007770 = add i32 %v0_10007770, 2
  store i32 %v1_10007770, i32* @r31, align 4
  %v2_10007018 = icmp slt i32 %v1_10007770, %v1_10007018
  %v4_10007018 = icmp eq i32 %v1_10007770, %v1_10007018
  store i1 %v2_10007018, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007018, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007018, label %dec_label_pc_10007020.preheader, label %dec_label_pc_100070ac

dec_label_pc_10007778:                            ; preds = %dec_label_pc_10007048
  %v0_10007778 = load i32, i32* %r27.global-to-local, align 4
  %v6_10007778 = trunc i32 %v0_10007778 to i16
  store i16 %v6_10007778, i16* %stack_var_-1926, align 2
  %v1_1000777c = add i32 %v0_1000776c, 2
  store i32 %v1_1000777c, i32* %r0.global-to-local, align 4
  %v0_10007784 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10007784, i32* %stack_var_-1900, align 4
  %v1_10007790 = add i32 %v0_10007988, 24
  %v2_10007790 = inttoptr i32 %v1_10007790 to i32*
  %v3_10007790 = load i32, i32* %v2_10007790, align 4
  store i32 %v3_10007790, i32* %r5.global-to-local, align 4
  %v2_10007794 = add i32 %v3_10007790, %v0_1000702c
  store i32 %v2_10007794, i32* %r9.global-to-local, align 4
  %v2_10007798 = icmp ult i32 %v2_10007794, %v1_1000777c
  %v3_10007798 = icmp ugt i32 %v2_10007794, %v1_1000777c
  %v4_10007798 = icmp eq i32 %v2_10007794, %v1_1000777c
  store i1 %v2_10007798, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007798, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007798, label %dec_label_pc_100077a0, label %dec_label_pc_100070ac

dec_label_pc_100077a0:                            ; preds = %dec_label_pc_10007778
  %v2_100077a0 = inttoptr i32 %v1_1000777c to i8*
  %v3_100077a0 = load i8, i8* %v2_100077a0, align 1
  %v4_100077a0 = zext i8 %v3_100077a0 to i32
  store i32 %v4_100077a0, i32* %r0.global-to-local, align 4
  %v1_100077a4 = icmp ult i8 %v3_100077a0, 31
  %v3_100077a4 = icmp eq i8 %v3_100077a0, 31
  store i1 %v1_100077a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077a4, label %dec_label_pc_10007988, label %dec_label_pc_100077ac

dec_label_pc_100077ac:                            ; preds = %dec_label_pc_100077a0
  %v2_100077ac = load i8, i8* %v1_10007020, align 1
  %v3_100077ac = zext i8 %v2_100077ac to i32
  store i32 %v3_100077ac, i32* %r0.global-to-local, align 4
  %v1_100077b0 = icmp ult i8 %v2_100077ac, -3
  %v3_100077b0 = icmp eq i8 %v2_100077ac, -3
  store i1 %v1_100077b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077b0, label %dec_label_pc_100077b8, label %dec_label_pc_100079ac

dec_label_pc_100077b8:                            ; preds = %dec_label_pc_100077ac
  %v0_100077b8 = load i32, i32* %r17.global-to-local, align 4
  %v1_100077b8 = trunc i32 %v0_100077b8 to i8
  store i8 %v1_100077b8, i8* %v1_10007020, align 1
  %v0_100077bc = load i32, i32* %r11.global-to-local, align 4
  %v1_100077bc = inttoptr i32 %v0_100077bc to i8*
  %v2_100077bc = load i8, i8* %v1_100077bc, align 1
  %v3_100077bc = zext i8 %v2_100077bc to i32
  store i32 %v3_100077bc, i32* %r0.global-to-local, align 4
  %v1_100077c0 = icmp ult i8 %v2_100077bc, -3
  %v3_100077c0 = icmp eq i8 %v2_100077bc, -3
  store i1 %v1_100077c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077c0, label %dec_label_pc_100077c8, label %dec_label_pc_10007068

dec_label_pc_100077c8:                            ; preds = %dec_label_pc_100077b8, %dec_label_pc_1000705c
  %v2_100077c8 = phi i32 [ %v0_100077bc, %dec_label_pc_100077b8 ], [ %v0_1000705c, %dec_label_pc_1000705c ]
  %v0_100077c8 = load i32, i32* %r17.global-to-local, align 4
  %v1_100077c8 = trunc i32 %v0_100077c8 to i8
  %v3_100077c8 = inttoptr i32 %v2_100077c8 to i8*
  store i8 %v1_100077c8, i8* %v3_100077c8, align 1
  %v0_100077cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100077cc = add i32 %v0_100077cc, 2
  %v2_100077cc = inttoptr i32 %v1_100077cc to i8*
  %v3_100077cc = load i8, i8* %v2_100077cc, align 1
  %v4_100077cc = zext i8 %v3_100077cc to i32
  store i32 %v4_100077cc, i32* %r0.global-to-local, align 4
  %v1_100077d0 = icmp ult i8 %v3_100077cc, -3
  %v3_100077d0 = icmp eq i8 %v3_100077cc, -3
  store i1 %v1_100077d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077d0, label %dec_label_pc_100077d8, label %dec_label_pc_1000707c

dec_label_pc_100077d8:                            ; preds = %dec_label_pc_100077c8, %dec_label_pc_10007070
  %v2_100077d8 = phi i32 [ %v0_100077cc, %dec_label_pc_100077c8 ], [ %v0_10007070, %dec_label_pc_10007070 ]
  %v0_100077d8 = load i32, i32* %r17.global-to-local, align 4
  %v1_100077d8 = trunc i32 %v0_100077d8 to i8
  %v3_100077d8 = add i32 %v2_100077d8, 2
  %v4_100077d8 = inttoptr i32 %v3_100077d8 to i8*
  store i8 %v1_100077d8, i8* %v4_100077d8, align 1
  br label %dec_label_pc_10007084

dec_label_pc_100077e0:                            ; preds = %dec_label_pc_10006f4c
  %v3_10006f70 = icmp eq i32 %v4_10006f6c, 0
  br i1 %v3_10006f70, label %dec_label_pc_10007aec, label %dec_label_pc_100077e4

dec_label_pc_100077e4:                            ; preds = %dec_label_pc_100077e0
  %v1_100077e4 = icmp slt i32 %v4_10006f6c, -1
  %v3_100077e4 = icmp eq i32 %v4_10006f6c, -1
  store i1 %v1_100077e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077e4, label %dec_label_pc_100077ec, label %dec_label_pc_10006f9c

dec_label_pc_100077ec:                            ; preds = %dec_label_pc_100077e4
  %v0_100077ec = load i32, i32* %r30.global-to-local, align 4
  %v1_100077ec = inttoptr i32 %v0_100077ec to i32*
  %v2_100077ec = load i32, i32* %v1_100077ec, align 4
  store i32 %v2_100077ec, i32* %r0.global-to-local, align 4
  %v1_100077f0 = icmp slt i32 %v2_100077ec, 11
  %v3_100077f0 = icmp eq i32 %v2_100077ec, 11
  store i1 %v1_100077f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077f0, label %dec_label_pc_10006d84, label %dec_label_pc_100077f8

dec_label_pc_100077f8:                            ; preds = %dec_label_pc_100077ec, %dec_label_pc_10007aec
  %v0_100077f8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100077f8 = add i32 %v0_100077f8, 4
  %v2_100077f8 = inttoptr i32 %v1_100077f8 to i32*
  %v3_100077f8 = load i32, i32* %v2_100077f8, align 4
  store i32 %v3_100077f8, i32* %r3.global-to-local, align 4
  store i32 268466176, i32* @lr, align 4
  %v0_100077fc = call i32 @function_10009518()
  store i32 %v0_100077fc, i32* %r3.global-to-local, align 4
  %v0_10007800 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007800 = add i32 %v0_10007800, 284
  %v2_10007800 = inttoptr i32 %v1_10007800 to i8*
  %v3_10007800 = load i8, i8* %v2_10007800, align 1
  %v4_10007800 = zext i8 %v3_10007800 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007808 = add nuw nsw i32 %v4_10007800, 1
  store i32 %v1_10007808, i32* %r9.global-to-local, align 4
  %v2_1000780c = add i32 %v0_10007800, 4
  %v3_1000780c = inttoptr i32 %v2_1000780c to i32*
  store i32 -1, i32* %v3_1000780c, align 4
  %v0_10007810 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007810 = urem i32 %v0_10007810, 256
  store i32 %v1_10007810, i32* %r9.global-to-local, align 4
  %v1_10007814 = icmp ult i32 %v1_10007810, 9
  %v3_10007814 = icmp eq i32 %v1_10007810, 9
  store i1 %v1_10007814, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007814, i1* %cr7_eq.global-to-local, align 1
  %v1_10007818 = trunc i32 %v0_10007810 to i8
  %v2_10007818 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007818 = add i32 %v2_10007818, 284
  %v4_10007818 = inttoptr i32 %v3_10007818 to i8*
  store i8 %v1_10007818, i8* %v4_10007818, align 1
  %v0_1000781c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000781c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000781c = or i1 %v0_1000781c, %v1_1000781c
  br i1 %v2_1000781c, label %dec_label_pc_10007af8, label %dec_label_pc_10007820

dec_label_pc_10007820:                            ; preds = %dec_label_pc_100077f8
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007828 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007828 = add i32 %v1_10007828, 12
  %v3_10007828 = inttoptr i32 %v2_10007828 to i32*
  store i32 0, i32* %v3_10007828, align 4
  %v0_1000782c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000782c = trunc i32 %v0_1000782c to i8
  %v2_1000782c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000782c = add i32 %v2_1000782c, 284
  %v4_1000782c = inttoptr i32 %v3_1000782c to i8*
  store i8 %v1_1000782c, i8* %v4_1000782c, align 1
  br label %dec_label_pc_10006d84

dec_label_pc_10007834:                            ; preds = %dec_label_pc_10007068
  %v0_10007834 = load i32, i32* %r18.global-to-local, align 4
  %v1_10007834 = trunc i32 %v0_10007834 to i8
  %v3_10007834 = inttoptr i32 %v2_10007834 to i8*
  store i8 %v1_10007834, i8* %v3_10007834, align 1
  br label %dec_label_pc_10007070

dec_label_pc_1000783c:                            ; preds = %dec_label_pc_1000707c
  %v0_1000783c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000783c = trunc i32 %v0_1000783c to i8
  %v3_1000783c = add i32 %v2_1000783c, 2
  %v4_1000783c = inttoptr i32 %v3_1000783c to i8*
  store i8 %v1_1000783c, i8* %v4_1000783c, align 1
  br label %dec_label_pc_10007084

dec_label_pc_10007844:                            ; preds = %dec_label_pc_10006f3c
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_10006f40, i32* %r3.global-to-local, align 4
  %v1_1000784c = add i32 %v0_1000784c, 92
  store i32 268466260, i32* @lr, align 4
  %v3_10007850 = call i32 @function_10009c78(i32 %v1_10006f40, i32 %v1_1000784c, i32 192)
  store i32 %v3_10007850, i32* %r3.global-to-local, align 4
  %v0_10007854 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007854 = add i32 %v0_10007854, 24
  %v2_10007854 = inttoptr i32 %v1_10007854 to i32*
  %v3_10007854 = load i32, i32* %v2_10007854, align 4
  store i32 %v3_10007854, i32* %r9.global-to-local, align 4
  %v1_10007858 = add i32 %v3_10007854, -64
  store i32 %v1_10007858, i32* %r5.global-to-local, align 4
  store i32 %v1_10007858, i32* %v2_10007854, align 4
  br label %dec_label_pc_10006f4c

dec_label_pc_10007864:                            ; preds = %dec_label_pc_100070ac
  %v3_100070ac = icmp eq i32 %v0_100070ac, 0
  br i1 %v3_100070ac, label %dec_label_pc_10006f30.loopexit, label %dec_label_pc_10007868

dec_label_pc_10007868:                            ; preds = %dec_label_pc_10007864
  %v1_10007868 = add i32 %v0_10007868, 24
  %v2_10007868 = inttoptr i32 %v1_10007868 to i32*
  %v3_10007868 = load i32, i32* %v2_10007868, align 4
  store i32 %v3_10007868, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000765c

dec_label_pc_10007988:                            ; preds = %dec_label_pc_100077a0
  %v1_10007988 = add i32 %v0_10007988, 4
  %v2_10007988 = inttoptr i32 %v1_10007988 to i32*
  %v3_10007988 = load i32, i32* %v2_10007988, align 4
  store i32 %v3_10007988, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268466588, i32* @lr, align 4
  %v4_10007998 = call i32 @function_1000a180(i32 %v3_10007988, i32 %v2_1000798c, i32 3, i32 16384)
  store i32 %v4_10007998, i32* %r3.global-to-local, align 4
  %v0_1000799c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000799c = add i32 %v0_1000799c, 4
  %v2_1000799c = inttoptr i32 %v1_1000799c to i32*
  %v3_1000799c = load i32, i32* %v2_1000799c, align 4
  store i32 %v3_1000799c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007090

dec_label_pc_100079ac:                            ; preds = %dec_label_pc_100077ac
  %v1_100079ac = icmp ult i8 %v2_100077ac, -5
  %v3_100079ac = icmp eq i8 %v2_100077ac, -5
  store i1 %v1_100079ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100079ac, label %dec_label_pc_100079b4, label %dec_label_pc_1000705c

dec_label_pc_100079b4:                            ; preds = %dec_label_pc_100079ac
  %v0_100079b4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100079b4 = trunc i32 %v0_100079b4 to i8
  store i8 %v1_100079b4, i8* %v1_10007020, align 1
  %v0_1000705c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000705c

dec_label_pc_10007aec:                            ; preds = %dec_label_pc_100077e0
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10007af0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10007af0 = inttoptr i32 %v1_10007af0 to i32*
  store i32 104, i32* %v2_10007af0, align 4
  br label %dec_label_pc_100077f8

dec_label_pc_10007af8:                            ; preds = %dec_label_pc_100077f8
  %v0_10007af8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007af8, i32* @r3, align 4
  store i32 268466944, i32* @lr, align 4
  %v0_10007afc = call i32 @function_10005de8()
  store i32 %v0_10007afc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006d84

dec_label_pc_10007b04:                            ; preds = %dec_label_pc_10006ddc
  %v0_10007b04 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007b04 = add i32 %v0_10007b04, 4
  %v2_10007b04 = inttoptr i32 %v1_10007b04 to i32*
  %v3_10007b04 = load i32, i32* %v2_10007b04, align 4
  store i32 %v3_10007b04, i32* %r3.global-to-local, align 4
  store i32 268466956, i32* @lr, align 4
  %v0_10007b08 = call i32 @function_10009518()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007b14 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007b14 = add i32 %v1_10007b14, 4
  %v3_10007b14 = inttoptr i32 %v2_10007b14 to i32*
  store i32 -1, i32* %v3_10007b14, align 4
  %v0_10007b18 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007b18 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007b18 = add i32 %v1_10007b18, 12
  %v3_10007b18 = inttoptr i32 %v2_10007b18 to i32*
  store i32 %v0_10007b18, i32* %v3_10007b18, align 4
  %v0_10007b1c = load i32, i32* @r31, align 4
  %v1_10007b1c = trunc i32 %v0_10007b1c to i8
  %v2_10007b1c = load i32, i32* %r28.global-to-local, align 4
  %v3_10007b1c = add i32 %v2_10007b1c, 284
  %v4_10007b1c = inttoptr i32 %v3_10007b1c to i8*
  store i8 %v1_10007b1c, i8* %v4_10007b1c, align 1
  br label %dec_label_pc_10006d84

dec_label_pc_10007b24:                            ; preds = %dec_label_pc_10006cb8, %dec_label_pc_10006c9c
  %v0_10007b24 = load i32, i32* %r22.global-to-local, align 4
  %v1_10007b24 = load i32, i32* @r29, align 4
  %v2_10007b24 = add i32 %v1_10007b24, 12
  %v3_10007b24 = inttoptr i32 %v2_10007b24 to i32*
  store i32 %v0_10007b24, i32* %v3_10007b24, align 4
  %v0_10007b28 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007b28 = trunc i32 %v0_10007b28 to i8
  %v2_10007b28 = load i32, i32* @r29, align 4
  %v3_10007b28 = add i32 %v2_10007b28, 284
  %v4_10007b28 = inttoptr i32 %v3_10007b28 to i8*
  store i8 %v1_10007b28, i8* %v4_10007b28, align 1
  br label %dec_label_pc_10006bd8

dec_label_pc_10007b30.loopexit:                   ; preds = %dec_label_pc_10006e4c
  store i1 %v2_10006e6896, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006e6898, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007b30

dec_label_pc_10007b30:                            ; preds = %dec_label_pc_10007b30.loopexit, %dec_label_pc_10006e0c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006e70

dec_label_pc_10007b48:                            ; preds = %dec_label_pc_100068b8
  %v1_10007b48 = icmp slt i32 %v1_10006544, 46
  %v3_10007b48 = icmp eq i32 %v1_10006544, 46
  store i1 %v1_10007b48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b48, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007b54:                            ; preds = %dec_label_pc_100068b0
  %v1_10007b54 = icmp ult i32 %v1_10006544, 102
  %v3_10007b54 = icmp eq i32 %v1_10006544, 102
  store i1 %v1_10007b54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b54, i1* %cr7_eq.global-to-local, align 1
  %tmp264 = icmp ult i32 %v1_10006544, 103
  br i1 %tmp264, label %dec_label_pc_100068c8, label %dec_label_pc_10007b5c

dec_label_pc_10007b5c:                            ; preds = %dec_label_pc_10007b54
  %v1_10007b5c = icmp ult i32 %v1_10006544, 107
  %v3_10007b5c = icmp eq i32 %v1_10006544, 107
  store i1 %v1_10007b5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b5c, i1* %cr7_eq.global-to-local, align 1
  %tmp265 = icmp ult i32 %v1_10006544, 108
  br i1 %tmp265, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007b68:                            ; preds = %dec_label_pc_100068a8
  %v1_10007b68 = icmp slt i32 %v1_10006544, 164
  %v3_10007b68 = icmp eq i32 %v1_10006544, 164
  store i1 %v1_10007b68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b68, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007b74:                            ; preds = %dec_label_pc_100068a0
  %v1_10007b74 = icmp slt i32 %v1_10006544, 208
  %v3_10007b74 = icmp eq i32 %v1_10006544, 208
  store i1 %v1_10007b74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b74, label %dec_label_pc_10006534, label %dec_label_pc_10007b7c

dec_label_pc_10007b7c:                            ; preds = %dec_label_pc_10007b74
  %v1_10007b7c = icmp slt i32 %v1_10006544, 209
  %v3_10007b7c = icmp eq i32 %v1_10006544, 209
  store i1 %v1_10007b7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b7c, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007b88:                            ; preds = %dec_label_pc_10006898
  %v1_10007b88 = icmp ult i32 %v1_10006544, 96
  %v3_10007b88 = icmp eq i32 %v1_10006544, 96
  store i1 %v1_10007b88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b88, i1* %cr7_eq.global-to-local, align 1
  %tmp266 = icmp ult i32 %v1_10006544, 97
  br i1 %tmp266, label %dec_label_pc_100068c8, label %dec_label_pc_10007b90

dec_label_pc_10007b90:                            ; preds = %dec_label_pc_10007b88
  %v1_10007b90 = icmp eq i32 %v1_10006544, 97
  %v3_10007b90 = icmp eq i32 %v1_10006544, 98
  store i1 %v1_10007b90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b90, i1* %cr7_eq.global-to-local, align 1
  %tmp267 = icmp ult i32 %v1_10006544, 99
  br i1 %tmp267, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007b9c:                            ; preds = %dec_label_pc_10006890
  %v1_10007b9c = icmp ult i32 %v1_10006544, 244
  %v3_10007b9c = icmp eq i32 %v1_10006544, 244
  store i1 %v1_10007b9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b9c, i1* %cr7_eq.global-to-local, align 1
  %tmp268 = icmp ult i32 %v1_10006544, 245
  br i1 %tmp268, label %dec_label_pc_100068c8, label %dec_label_pc_10007ba4

dec_label_pc_10007ba4:                            ; preds = %dec_label_pc_10007b9c
  %v1_10007ba4 = icmp slt i32 %v1_10006544, 255
  %v3_10007ba4 = icmp eq i32 %v1_10006544, 255
  store i1 %v1_10007ba4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ba4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ba4, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_10007bb0:                            ; preds = %dec_label_pc_10006888
  %v1_10007bb0 = icmp ult i32 %v1_10006544, 181
  %v3_10007bb0 = icmp eq i32 %v1_10006544, 181
  store i1 %v1_10007bb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bb0, i1* %cr7_eq.global-to-local, align 1
  %tmp269 = icmp ult i32 %v1_10006544, 182
  br i1 %tmp269, label %dec_label_pc_100068c8, label %dec_label_pc_10007bb8

dec_label_pc_10007bb8:                            ; preds = %dec_label_pc_10007bb0
  %v1_10007bb8 = icmp ult i32 %v1_10006544, 188
  %v3_10007bb8 = icmp eq i32 %v1_10006544, 188
  store i1 %v1_10007bb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bb8, i1* %cr7_eq.global-to-local, align 1
  %tmp270 = icmp ult i32 %v1_10006544, 189
  br i1 %tmp270, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007bc4:                            ; preds = %dec_label_pc_10006880
  %v1_10007bc4 = icmp ult i32 %v1_10006544, 93
  %v3_10007bc4 = icmp eq i32 %v1_10006544, 93
  store i1 %v1_10007bc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bc4, i1* %cr7_eq.global-to-local, align 1
  %tmp271 = icmp ult i32 %v1_10006544, 94
  br i1 %tmp271, label %dec_label_pc_100068c8, label %dec_label_pc_10007bcc

dec_label_pc_10007bcc:                            ; preds = %dec_label_pc_10007bc4
  %v1_10007bcc = icmp ult i32 %v1_10006544, 108
  %v3_10007bcc = icmp eq i32 %v1_10006544, 108
  store i1 %v1_10007bcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bcc, i1* %cr7_eq.global-to-local, align 1
  %tmp272 = icmp ult i32 %v1_10006544, 109
  br i1 %tmp272, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007bd8:                            ; preds = %dec_label_pc_10006878
  %v1_10007bd8 = icmp ult i32 %v1_10006544, 215
  %v3_10007bd8 = icmp eq i32 %v1_10006544, 215
  store i1 %v1_10007bd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bd8, i1* %cr7_eq.global-to-local, align 1
  %tmp273 = icmp ult i32 %v1_10006544, 216
  br i1 %tmp273, label %dec_label_pc_100068c8, label %dec_label_pc_10007be0

dec_label_pc_10007be0:                            ; preds = %dec_label_pc_10007bd8
  %v1_10007be0 = icmp ult i32 %v1_10006544, 230
  %v3_10007be0 = icmp eq i32 %v1_10006544, 230
  store i1 %v1_10007be0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007be0, i1* %cr7_eq.global-to-local, align 1
  %tmp274 = icmp ult i32 %v1_10006544, 231
  br i1 %tmp274, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007bec:                            ; preds = %dec_label_pc_10006870
  %v1_10007bec = icmp slt i32 %v1_10006544, 34
  %v3_10007bec = icmp eq i32 %v1_10006544, 34
  store i1 %v1_10007bec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bec, label %dec_label_pc_10007bf4, label %dec_label_pc_100068c8

dec_label_pc_10007bf4:                            ; preds = %dec_label_pc_10007bec
  %v1_10007bf4 = icmp ult i32 %v1_10006548, 95
  %v3_10007bf4 = icmp eq i32 %v1_10006548, 95
  store i1 %v1_10007bf4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bf4, i1* %cr7_eq.global-to-local, align 1
  %tmp275 = icmp ult i32 %v1_10006548, 96
  br i1 %tmp275, label %dec_label_pc_100068c8, label %dec_label_pc_10007bfc

dec_label_pc_10007bfc:                            ; preds = %dec_label_pc_10007bf4
  %v1_10007bfc = icmp slt i32 %v1_10006548, 96
  %v3_10007bfc = icmp eq i32 %v1_10006548, 96
  store i1 %v1_10007bfc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bfc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bfc, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007c08:                            ; preds = %dec_label_pc_10006868
  %v1_10007c08 = icmp slt i32 %v1_10006544, 47
  %v3_10007c08 = icmp eq i32 %v1_10006544, 47
  store i1 %v1_10007c08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c08, label %dec_label_pc_10007c10, label %dec_label_pc_100068c8

dec_label_pc_10007c10:                            ; preds = %dec_label_pc_10007c08
  %v1_10007c10 = icmp ult i32 %v1_10006548, 223
  %v3_10007c10 = icmp eq i32 %v1_10006548, 223
  store i1 %v1_10007c10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c10, i1* %cr7_eq.global-to-local, align 1
  %tmp276 = icmp ult i32 %v1_10006548, 224
  br i1 %tmp276, label %dec_label_pc_100068c8, label %dec_label_pc_10007c18

dec_label_pc_10007c18:                            ; preds = %dec_label_pc_10007c10
  %v1_10007c18 = icmp slt i32 %v1_10006548, 255
  %v3_10007c18 = icmp eq i32 %v1_10006548, 255
  store i1 %v1_10007c18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c18, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_10007c24:                            ; preds = %dec_label_pc_10006860
  %v1_10007c24 = icmp slt i32 %v1_10006544, 121
  %v3_10007c24 = icmp eq i32 %v1_10006544, 121
  store i1 %v1_10007c24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c24, label %dec_label_pc_10007c2c, label %dec_label_pc_100068c8

dec_label_pc_10007c2c:                            ; preds = %dec_label_pc_10007c24
  %v1_10007c2c = and i32 %v1_10006548, 128
  store i32 %v1_10007c2c, i32* %r10.global-to-local, align 4
  %v3_10007c2c = icmp eq i32 %v1_10007c2c, 0
  br i1 %v3_10007c2c, label %dec_label_pc_100068c8, label %dec_label_pc_10007c34

dec_label_pc_10007c34:                            ; preds = %dec_label_pc_10007c2c
  %v1_10007c34 = icmp slt i32 %v1_10006548, 255
  %v3_10007c34 = icmp eq i32 %v1_10006548, 255
  store i1 %v1_10007c34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c34, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_10007c40:                            ; preds = %dec_label_pc_10006858
  %v1_10007c40 = icmp ult i32 %v1_10006544, 51
  %v3_10007c40 = icmp eq i32 %v1_10006544, 51
  store i1 %v1_10007c40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c40, i1* %cr7_eq.global-to-local, align 1
  %tmp277 = icmp ult i32 %v1_10006544, 52
  br i1 %tmp277, label %dec_label_pc_10007c50.thread, label %dec_label_pc_10007c48

dec_label_pc_10007c50.thread:                     ; preds = %dec_label_pc_10007c40
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_10007c48:                            ; preds = %dec_label_pc_10007c40
  %v1_10007c48 = icmp ult i32 %v1_10006544, 59
  %v3_10007c48 = icmp eq i32 %v1_10006544, 59
  store i1 %v1_10007c48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c48, i1* %cr7_eq.global-to-local, align 1
  %tmp278 = icmp ult i32 %v1_10006544, 60
  br i1 %tmp278, label %dec_label_pc_10006534, label %dec_label_pc_10007c50

dec_label_pc_10007c50:                            ; preds = %dec_label_pc_10007c48
  %v1_10007c50 = icmp ult i32 %v1_10006544, 111
  %v3_10007c50 = icmp eq i32 %v1_10006544, 111
  store i1 %v1_10007c50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c50, i1* %cr7_eq.global-to-local, align 1
  %tmp279 = icmp ult i32 %v1_10006544, 112
  br i1 %tmp279, label %dec_label_pc_100068c8, label %dec_label_pc_10007c58

dec_label_pc_10007c58:                            ; preds = %dec_label_pc_10007c50
  %v1_10007c58 = icmp ult i32 %v1_10006544, 114
  %v3_10007c58 = icmp eq i32 %v1_10006544, 114
  store i1 %v1_10007c58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c58, i1* %cr7_eq.global-to-local, align 1
  %tmp280 = icmp ult i32 %v1_10006544, 115
  br i1 %tmp280, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007c64:                            ; preds = %dec_label_pc_10006850
  %v1_10007c64 = icmp ult i32 %v1_10006544, 63
  %v3_10007c64 = icmp eq i32 %v1_10006544, 63
  store i1 %v1_10007c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c64, i1* %cr7_eq.global-to-local, align 1
  %tmp281 = icmp ult i32 %v1_10006544, 64
  br i1 %tmp281, label %dec_label_pc_10007c74.thread, label %dec_label_pc_10007c6c

dec_label_pc_10007c74.thread:                     ; preds = %dec_label_pc_10007c64
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_10007c6c:                            ; preds = %dec_label_pc_10007c64
  %v1_10007c6c = icmp ult i32 %v1_10006544, 94
  %v3_10007c6c = icmp eq i32 %v1_10006544, 94
  store i1 %v1_10007c6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c6c, i1* %cr7_eq.global-to-local, align 1
  %tmp282 = icmp ult i32 %v1_10006544, 95
  br i1 %tmp282, label %dec_label_pc_10006534, label %dec_label_pc_10007c74

dec_label_pc_10007c74:                            ; preds = %dec_label_pc_10007c6c
  %v1_10007c74 = icmp ult i32 %v1_10006544, 143
  %v3_10007c74 = icmp eq i32 %v1_10006544, 143
  store i1 %v1_10007c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c74, i1* %cr7_eq.global-to-local, align 1
  %tmp283 = icmp ult i32 %v1_10006544, 144
  br i1 %tmp283, label %dec_label_pc_100068c8, label %dec_label_pc_10007c7c

dec_label_pc_10007c7c:                            ; preds = %dec_label_pc_10007c74
  %v1_10007c7c = icmp slt i32 %v1_10006544, 255
  %v3_10007c7c = icmp eq i32 %v1_10006544, 255
  store i1 %v1_10007c7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c7c, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_10007c88:                            ; preds = %dec_label_pc_10006848
  %v1_10007c88 = icmp slt i32 %v1_10006544, 0
  %v3_10007c88 = icmp eq i32 %v1_10006544, 0
  store i1 %v1_10007c88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c88, label %dec_label_pc_100068c8, label %dec_label_pc_10007c90

dec_label_pc_10007c90:                            ; preds = %dec_label_pc_10007c88
  %v1_10007c90 = icmp ult i32 %v1_10006544, 94
  %v3_10007c90 = icmp eq i32 %v1_10006544, 94
  store i1 %v1_10007c90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c90, i1* %cr7_eq.global-to-local, align 1
  %tmp284 = icmp ult i32 %v1_10006544, 95
  br i1 %tmp284, label %dec_label_pc_10006534, label %dec_label_pc_10007c98

dec_label_pc_10007c98:                            ; preds = %dec_label_pc_10007c90
  %v1_10007c98 = icmp slt i32 %v1_10006544, 255
  %v3_10007c98 = icmp eq i32 %v1_10006544, 255
  store i1 %v1_10007c98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c98, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_10007ca4:                            ; preds = %dec_label_pc_10006840
  %v1_10007ca4 = icmp ult i32 %v1_10006544, 158
  %v3_10007ca4 = icmp eq i32 %v1_10006544, 158
  store i1 %v1_10007ca4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ca4, i1* %cr7_eq.global-to-local, align 1
  %tmp285 = icmp ult i32 %v1_10006544, 159
  br i1 %tmp285, label %dec_label_pc_100068c8, label %dec_label_pc_10007cac

dec_label_pc_10007cac:                            ; preds = %dec_label_pc_10007ca4
  %v1_10007cac = icmp ult i32 %v1_10006544, 182
  %v3_10007cac = icmp eq i32 %v1_10006544, 182
  store i1 %v1_10007cac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cac, i1* %cr7_eq.global-to-local, align 1
  %tmp286 = icmp ult i32 %v1_10006544, 183
  br i1 %tmp286, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007cb8:                            ; preds = %dec_label_pc_10006838
  %v1_10007cb8 = icmp slt i32 %v1_10006544, 142
  %v3_10007cb8 = icmp eq i32 %v1_10006544, 142
  store i1 %v1_10007cb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cb8, label %dec_label_pc_10007cc0, label %dec_label_pc_100068c8

dec_label_pc_10007cc0:                            ; preds = %dec_label_pc_10007cb8
  %v1_10007cc0 = icmp ult i32 %v1_10006548, 207
  %v3_10007cc0 = icmp eq i32 %v1_10006548, 207
  store i1 %v1_10007cc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cc0, i1* %cr7_eq.global-to-local, align 1
  %tmp287 = icmp ult i32 %v1_10006548, 208
  br i1 %tmp287, label %dec_label_pc_100068c8, label %dec_label_pc_10007cc8

dec_label_pc_10007cc8:                            ; preds = %dec_label_pc_10007cc0
  %v1_10007cc8 = icmp ult i32 %v1_10006548, 222
  %v3_10007cc8 = icmp eq i32 %v1_10006548, 222
  store i1 %v1_10007cc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cc8, i1* %cr7_eq.global-to-local, align 1
  %tmp288 = icmp ult i32 %v1_10006548, 223
  br i1 %tmp288, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007cd4:                            ; preds = %dec_label_pc_10006830
  %v1_10007cd4 = icmp slt i32 %v1_10006544, 220
  %v3_10007cd4 = icmp eq i32 %v1_10006544, 220
  store i1 %v1_10007cd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cd4, label %dec_label_pc_10007cdc, label %dec_label_pc_100068c8

dec_label_pc_10007cdc:                            ; preds = %dec_label_pc_10007cd4
  %v1_10007cdc = icmp ult i32 %v1_10006548, 171
  %v3_10007cdc = icmp eq i32 %v1_10006548, 171
  store i1 %v1_10007cdc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cdc, i1* %cr7_eq.global-to-local, align 1
  %tmp289 = icmp ult i32 %v1_10006548, 172
  br i1 %tmp289, label %dec_label_pc_100068c8, label %dec_label_pc_10007ce4

dec_label_pc_10007ce4:                            ; preds = %dec_label_pc_10007cdc
  %v1_10007ce4 = icmp ult i32 %v1_10006548, 174
  %v3_10007ce4 = icmp eq i32 %v1_10006548, 174
  store i1 %v1_10007ce4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ce4, i1* %cr7_eq.global-to-local, align 1
  %tmp290 = icmp ult i32 %v1_10006548, 175
  br i1 %tmp290, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007cf0:                            ; preds = %dec_label_pc_10006828
  %v1_10007cf0 = icmp slt i32 %v1_10006544, 170
  %v3_10007cf0 = icmp eq i32 %v1_10006544, 170
  store i1 %v1_10007cf0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cf0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cf0, label %dec_label_pc_10007cf8, label %dec_label_pc_100068c8

dec_label_pc_10007cf8:                            ; preds = %dec_label_pc_10007cf0
  %v1_10007cf8 = icmp ult i32 %v1_10006548, 239
  %v3_10007cf8 = icmp eq i32 %v1_10006548, 239
  store i1 %v1_10007cf8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cf8, i1* %cr7_eq.global-to-local, align 1
  %tmp291 = icmp ult i32 %v1_10006548, 240
  br i1 %tmp291, label %dec_label_pc_100068c8, label %dec_label_pc_10007d00

dec_label_pc_10007d00:                            ; preds = %dec_label_pc_10007cf8
  %v1_10007d00 = icmp slt i32 %v1_10006548, 255
  %v3_10007d00 = icmp eq i32 %v1_10006548, 255
  store i1 %v1_10007d00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d00, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_10007d0c:                            ; preds = %dec_label_pc_10006820
  %v1_10007d0c = icmp slt i32 %v1_10006544, 134
  %v3_10007d0c = icmp eq i32 %v1_10006544, 134
  store i1 %v1_10007d0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d0c, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007d18:                            ; preds = %dec_label_pc_10006818
  %v1_10007d18 = icmp slt i32 %v1_10006544, 135
  %v3_10007d18 = icmp eq i32 %v1_10006544, 135
  store i1 %v1_10007d18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d18, label %dec_label_pc_10006534, label %dec_label_pc_10007d20

dec_label_pc_10007d20:                            ; preds = %dec_label_pc_10007d18
  %v1_10007d20 = icmp slt i32 %v1_10006544, 196
  %v3_10007d20 = icmp eq i32 %v1_10006544, 196
  store i1 %v1_10007d20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d20, label %dec_label_pc_10006534, label %dec_label_pc_10007d28

dec_label_pc_10007d28:                            ; preds = %dec_label_pc_10007d20
  %v1_10007d28 = icmp slt i32 %v1_10006544, 39
  %v3_10007d28 = icmp eq i32 %v1_10006544, 39
  store i1 %v1_10007d28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d28, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007d34:                            ; preds = %dec_label_pc_10006810
  %v1_10007d34 = icmp slt i32 %v1_10006544, 254
  %v3_10007d34 = icmp eq i32 %v1_10006544, 254
  store i1 %v1_10007d34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d34, label %dec_label_pc_10006534, label %dec_label_pc_10007d3c

dec_label_pc_10007d3c:                            ; preds = %dec_label_pc_10007d34
  %v1_10007d3c = icmp slt i32 %v1_10006544, 255
  %v3_10007d3c = icmp eq i32 %v1_10006544, 255
  store i1 %v1_10007d3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d3c, label %dec_label_pc_10006534, label %dec_label_pc_10007d44

dec_label_pc_10007d44:                            ; preds = %dec_label_pc_10007d3c
  %v1_10007d44 = icmp ult i32 %v1_10006544, 14
  %v2_10007d44 = icmp ugt i32 %v1_10006544, 14
  %v3_10007d44 = icmp eq i32 %v1_10006544, 14
  store i1 %v1_10007d44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007d44, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007d50:                            ; preds = %dec_label_pc_10006808
  %v1_10007d50 = icmp slt i32 %v1_10006544, 105
  %v3_10007d50 = icmp eq i32 %v1_10006544, 105
  store i1 %v1_10007d50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d50, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007d5c:                            ; preds = %dec_label_pc_10006800
  %v1_10007d5c = icmp slt i32 %v1_10006544, 31
  %v3_10007d5c = icmp eq i32 %v1_10006544, 31
  store i1 %v1_10007d5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d5c, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007d68:                            ; preds = %dec_label_pc_100067f8
  %v1_10007d68 = icmp slt i32 %v1_10006544, 80
  %v3_10007d68 = icmp eq i32 %v1_10006544, 80
  store i1 %v1_10007d68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d68, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_100067f0
  %v1_10007d74 = icmp slt i32 %v1_10006544, 202
  %v3_10007d74 = icmp eq i32 %v1_10006544, 202
  store i1 %v1_10007d74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d74, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007d80:                            ; preds = %dec_label_pc_100067e8
  %v1_10007d80 = icmp slt i32 %v1_10006544, 91
  %v3_10007d80 = icmp eq i32 %v1_10006544, 91
  store i1 %v1_10007d80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d80, label %dec_label_pc_10007e04, label %dec_label_pc_10007d88

dec_label_pc_10007d88:                            ; preds = %dec_label_pc_10007d80
  %v1_10007d88 = icmp slt i32 %v1_10006544, 201
  %v3_10007d88 = icmp eq i32 %v1_10006544, 201
  store i1 %v1_10007d88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d88, label %dec_label_pc_10007d90, label %dec_label_pc_100068c8

dec_label_pc_10007d90:                            ; preds = %dec_label_pc_10007d88
  %v1_10007d90 = icmp ult i32 %v1_10006548, 55
  %v3_10007d90 = icmp eq i32 %v1_10006548, 55
  store i1 %v1_10007d90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d90, i1* %cr7_eq.global-to-local, align 1
  %tmp292 = icmp ult i32 %v1_10006548, 56
  br i1 %tmp292, label %dec_label_pc_100068c8, label %dec_label_pc_10007d98

dec_label_pc_10007d98:                            ; preds = %dec_label_pc_10007d90
  %v1_10007d98 = icmp eq i32 %v1_10006548, 56
  %v3_10007d98 = icmp eq i32 %v1_10006548, 57
  store i1 %v1_10007d98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d98, i1* %cr7_eq.global-to-local, align 1
  %tmp293 = icmp ult i32 %v1_10006548, 58
  br i1 %tmp293, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007da4:                            ; preds = %dec_label_pc_100067e0
  %v1_10007da4 = icmp slt i32 %v1_10006544, 42
  %v3_10007da4 = icmp eq i32 %v1_10006544, 42
  store i1 %v1_10007da4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007da4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007da4, label %dec_label_pc_10007dac, label %dec_label_pc_100068c8

dec_label_pc_10007dac:                            ; preds = %dec_label_pc_10007da4
  %v1_10007dac = icmp ult i32 %v1_10006548, 72
  %v3_10007dac = icmp eq i32 %v1_10006548, 72
  store i1 %v1_10007dac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007dac, i1* %cr7_eq.global-to-local, align 1
  %tmp294 = icmp ult i32 %v1_10006548, 73
  br i1 %tmp294, label %dec_label_pc_100068c8, label %dec_label_pc_10007db4

dec_label_pc_10007db4:                            ; preds = %dec_label_pc_10007dac
  %v1_10007db4 = icmp eq i32 %v1_10006548, 73
  %v3_10007db4 = icmp eq i32 %v1_10006548, 74
  store i1 %v1_10007db4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007db4, i1* %cr7_eq.global-to-local, align 1
  %tmp295 = icmp ult i32 %v1_10006548, 75
  br i1 %tmp295, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007dc0:                            ; preds = %dec_label_pc_100067d0
  %v1_10007dc0 = icmp slt i32 %v1_10006544, 61
  %v3_10007dc0 = icmp eq i32 %v1_10006544, 61
  store i1 %v1_10007dc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007dc0, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007dcc:                            ; preds = %dec_label_pc_100067c8
  %v1_10007dcc = icmp slt i32 %v1_10006544, 237
  %v3_10007dcc = icmp eq i32 %v1_10006544, 237
  store i1 %v1_10007dcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007dcc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007dcc, label %dec_label_pc_10007dd4, label %dec_label_pc_100068c8

dec_label_pc_10007dd4:                            ; preds = %dec_label_pc_10007dcc
  %v1_10007dd4 = and i32 %v1_10006548, 128
  store i32 %v1_10007dd4, i32* %r10.global-to-local, align 4
  %v3_10007dd4 = icmp eq i32 %v1_10007dd4, 0
  br i1 %v3_10007dd4, label %dec_label_pc_100068c8, label %dec_label_pc_10007ddc

dec_label_pc_10007ddc:                            ; preds = %dec_label_pc_10007dd4
  %v1_10007ddc = icmp ult i32 %v1_10006548, 158
  %v3_10007ddc = icmp eq i32 %v1_10006548, 158
  store i1 %v1_10007ddc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ddc, i1* %cr7_eq.global-to-local, align 1
  %tmp296 = icmp ult i32 %v1_10006548, 159
  br i1 %tmp296, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007de8:                            ; preds = %dec_label_pc_100067d8
  %v1_10007de8 = icmp slt i32 %v1_10006544, 251
  %v3_10007de8 = icmp eq i32 %v1_10006544, 251
  store i1 %v1_10007de8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007de8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007de8, label %dec_label_pc_10007df0, label %dec_label_pc_100068c8

dec_label_pc_10007df0:                            ; preds = %dec_label_pc_10007de8
  %v1_10007df0 = icmp ult i32 %v1_10006548, 18
  %v3_10007df0 = icmp eq i32 %v1_10006548, 18
  store i1 %v1_10007df0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007df0, i1* %cr7_eq.global-to-local, align 1
  %tmp297 = icmp ult i32 %v1_10006548, 19
  br i1 %tmp297, label %dec_label_pc_100068c8, label %dec_label_pc_10007df8

dec_label_pc_10007df8:                            ; preds = %dec_label_pc_10007df0
  %v1_10007df8 = icmp eq i32 %v1_10006548, 19
  %v3_10007df8 = icmp eq i32 %v1_10006548, 20
  store i1 %v1_10007df8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007df8, i1* %cr7_eq.global-to-local, align 1
  %tmp298 = icmp ult i32 %v1_10006548, 21
  br i1 %tmp298, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007e04:                            ; preds = %dec_label_pc_10007d80
  %v1_10007e04 = icmp ult i32 %v1_10006548, 112
  %v3_10007e04 = icmp eq i32 %v1_10006548, 112
  store i1 %v1_10007e04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e04, i1* %cr7_eq.global-to-local, align 1
  %tmp299 = icmp ult i32 %v1_10006548, 113
  br i1 %tmp299, label %dec_label_pc_100068c8, label %dec_label_pc_10007e0c

dec_label_pc_10007e0c:                            ; preds = %dec_label_pc_10007e04
  %v1_10007e0c = icmp eq i32 %v1_10006548, 113
  %v3_10007e0c = icmp eq i32 %v1_10006548, 114
  store i1 %v1_10007e0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e0c, i1* %cr7_eq.global-to-local, align 1
  %tmp300 = icmp ult i32 %v1_10006548, 115
  br i1 %tmp300, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007e18:                            ; preds = %dec_label_pc_100067c0
  %v1_10007e18 = icmp slt i32 %v1_10006544, 55
  %v3_10007e18 = icmp eq i32 %v1_10006544, 55
  store i1 %v1_10007e18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e18, label %dec_label_pc_10007ec8, label %dec_label_pc_10007e20

dec_label_pc_10007e20:                            ; preds = %dec_label_pc_10007e18
  %v1_10007e20 = icmp slt i32 %v1_10006544, 150
  %v3_10007e20 = icmp eq i32 %v1_10006544, 150
  store i1 %v1_10007e20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e20, label %dec_label_pc_10007eb4, label %dec_label_pc_10007e28

dec_label_pc_10007e28:                            ; preds = %dec_label_pc_10007e20
  %v1_10007e28 = icmp slt i32 %v1_10006544, 151
  %v3_10007e28 = icmp eq i32 %v1_10006544, 151
  store i1 %v1_10007e28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e28, label %dec_label_pc_10007e78, label %dec_label_pc_10007e30

dec_label_pc_10007e30:                            ; preds = %dec_label_pc_10007e28
  %v1_10007e30 = icmp slt i32 %v1_10006544, 71
  %v3_10007e30 = icmp eq i32 %v1_10006544, 71
  store i1 %v1_10007e30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e30, label %dec_label_pc_10007e38, label %dec_label_pc_100068c8

dec_label_pc_10007e38:                            ; preds = %dec_label_pc_10007e30
  %v1_10007e38 = icmp ult i32 %v1_10006548, 239
  %v3_10007e38 = icmp eq i32 %v1_10006548, 239
  store i1 %v1_10007e38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e38, i1* %cr7_eq.global-to-local, align 1
  %tmp301 = icmp ult i32 %v1_10006548, 240
  br i1 %tmp301, label %dec_label_pc_100068c8, label %dec_label_pc_10007e40

dec_label_pc_10007e40:                            ; preds = %dec_label_pc_10007e38
  %v1_10007e40 = icmp slt i32 %v1_10006548, 255
  %v3_10007e40 = icmp eq i32 %v1_10006548, 255
  store i1 %v1_10007e40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e40, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_10007e4c:                            ; preds = %dec_label_pc_100067b8
  %v1_10007e4c = icmp slt i32 %v1_10006544, 167
  %v3_10007e4c = icmp eq i32 %v1_10006544, 167
  store i1 %v1_10007e4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e4c, label %dec_label_pc_10007ea0, label %dec_label_pc_10007e54

dec_label_pc_10007e54:                            ; preds = %dec_label_pc_10007e4c
  %v1_10007e54 = icmp slt i32 %v1_10006544, 78
  %v3_10007e54 = icmp eq i32 %v1_10006544, 78
  store i1 %v1_10007e54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e54, label %dec_label_pc_10007e8c, label %dec_label_pc_10007e5c

dec_label_pc_10007e5c:                            ; preds = %dec_label_pc_10007e54
  %v1_10007e5c = icmp slt i32 %v1_10006544, 93
  %v3_10007e5c = icmp eq i32 %v1_10006544, 93
  store i1 %v1_10007e5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e5c, label %dec_label_pc_10007e64, label %dec_label_pc_100068c8

dec_label_pc_10007e64:                            ; preds = %dec_label_pc_10007e5c
  %v1_10007e64 = icmp ult i32 %v1_10006548, 191
  %v3_10007e64 = icmp eq i32 %v1_10006548, 191
  store i1 %v1_10007e64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e64, i1* %cr7_eq.global-to-local, align 1
  %tmp302 = icmp ult i32 %v1_10006548, 192
  br i1 %tmp302, label %dec_label_pc_100068c8, label %dec_label_pc_10007e6c

dec_label_pc_10007e6c:                            ; preds = %dec_label_pc_10007e64
  %v1_10007e6c = icmp slt i32 %v1_10006548, 192
  %v3_10007e6c = icmp eq i32 %v1_10006548, 192
  store i1 %v1_10007e6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e6c, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007e78:                            ; preds = %dec_label_pc_10007e28
  %v1_10007e78 = icmp ult i32 %v1_10006548, 136
  %v3_10007e78 = icmp eq i32 %v1_10006548, 136
  store i1 %v1_10007e78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e78, i1* %cr7_eq.global-to-local, align 1
  %tmp303 = icmp ult i32 %v1_10006548, 137
  br i1 %tmp303, label %dec_label_pc_100068c8, label %dec_label_pc_10007e80

dec_label_pc_10007e80:                            ; preds = %dec_label_pc_10007e78
  %v1_10007e80 = icmp eq i32 %v1_10006548, 137
  %v3_10007e80 = icmp eq i32 %v1_10006548, 138
  store i1 %v1_10007e80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e80, i1* %cr7_eq.global-to-local, align 1
  %tmp304 = icmp ult i32 %v1_10006548, 139
  br i1 %tmp304, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007e8c:                            ; preds = %dec_label_pc_10007e54
  %v1_10007e8c = icmp ult i32 %v1_10006548, 39
  %v3_10007e8c = icmp eq i32 %v1_10006548, 39
  store i1 %v1_10007e8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e8c, i1* %cr7_eq.global-to-local, align 1
  %tmp305 = icmp ult i32 %v1_10006548, 40
  br i1 %tmp305, label %dec_label_pc_100068c8, label %dec_label_pc_10007e94

dec_label_pc_10007e94:                            ; preds = %dec_label_pc_10007e8c
  %v1_10007e94 = icmp ult i32 %v1_10006548, 42
  %v3_10007e94 = icmp eq i32 %v1_10006548, 42
  store i1 %v1_10007e94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e94, i1* %cr7_eq.global-to-local, align 1
  %tmp306 = icmp ult i32 %v1_10006548, 43
  br i1 %tmp306, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007ea0:                            ; preds = %dec_label_pc_10007e4c
  %v1_10007ea0 = icmp ult i32 %v1_10006548, 231
  %v3_10007ea0 = icmp eq i32 %v1_10006548, 231
  store i1 %v1_10007ea0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ea0, i1* %cr7_eq.global-to-local, align 1
  %tmp307 = icmp ult i32 %v1_10006548, 232
  br i1 %tmp307, label %dec_label_pc_100068c8, label %dec_label_pc_10007ea8

dec_label_pc_10007ea8:                            ; preds = %dec_label_pc_10007ea0
  %v1_10007ea8 = icmp ult i32 %v1_10006548, 251
  %v3_10007ea8 = icmp eq i32 %v1_10006548, 251
  store i1 %v1_10007ea8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ea8, i1* %cr7_eq.global-to-local, align 1
  %tmp308 = icmp ult i32 %v1_10006548, 252
  br i1 %tmp308, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007eb4:                            ; preds = %dec_label_pc_10007e20
  %v1_10007eb4 = icmp ult i32 %v1_10006548, 119
  %v3_10007eb4 = icmp eq i32 %v1_10006548, 119
  store i1 %v1_10007eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007eb4, i1* %cr7_eq.global-to-local, align 1
  %tmp309 = icmp ult i32 %v1_10006548, 120
  br i1 %tmp309, label %dec_label_pc_100068c8, label %dec_label_pc_10007ebc

dec_label_pc_10007ebc:                            ; preds = %dec_label_pc_10007eb4
  %v1_10007ebc = icmp ult i32 %v1_10006548, 214
  %v3_10007ebc = icmp eq i32 %v1_10006548, 214
  store i1 %v1_10007ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ebc, i1* %cr7_eq.global-to-local, align 1
  %tmp310 = icmp ult i32 %v1_10006548, 215
  br i1 %tmp310, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007ec8:                            ; preds = %dec_label_pc_10007e18
  %v1_10007ec8 = and i32 %v1_10006548, 128
  store i32 %v1_10007ec8, i32* %r10.global-to-local, align 4
  %v3_10007ec8 = icmp eq i32 %v1_10007ec8, 0
  br i1 %v3_10007ec8, label %dec_label_pc_100068c8, label %dec_label_pc_10007ed0

dec_label_pc_10007ed0:                            ; preds = %dec_label_pc_10007ec8
  %v1_10007ed0 = icmp ult i32 %v1_10006548, 158
  %v3_10007ed0 = icmp eq i32 %v1_10006548, 158
  store i1 %v1_10007ed0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ed0, i1* %cr7_eq.global-to-local, align 1
  %tmp311 = icmp ult i32 %v1_10006548, 159
  br i1 %tmp311, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007edc:                            ; preds = %dec_label_pc_100067b0
  %v1_10007edc = icmp slt i32 %v1_10006544, 92
  %v3_10007edc = icmp eq i32 %v1_10006544, 92
  store i1 %v1_10007edc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007edc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007edc, label %dec_label_pc_10007f70, label %dec_label_pc_10007ee4

dec_label_pc_10007ee4:                            ; preds = %dec_label_pc_10007edc
  %v1_10007ee4 = icmp slt i32 %v1_10006544, 11
  %v3_10007ee4 = icmp eq i32 %v1_10006544, 11
  store i1 %v1_10007ee4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ee4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ee4, label %dec_label_pc_10007f5c, label %dec_label_pc_10007eec

dec_label_pc_10007eec:                            ; preds = %dec_label_pc_10007ee4
  %v1_10007eec = icmp slt i32 %v1_10006544, 56
  %v3_10007eec = icmp eq i32 %v1_10006544, 56
  store i1 %v1_10007eec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007eec, label %dec_label_pc_10007f48, label %dec_label_pc_10007ef4

dec_label_pc_10007ef4:                            ; preds = %dec_label_pc_10007eec
  %v1_10007ef4 = icmp slt i32 %v1_10006544, 61
  %v3_10007ef4 = icmp eq i32 %v1_10006544, 61
  store i1 %v1_10007ef4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ef4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ef4, label %dec_label_pc_10007f34, label %dec_label_pc_10007efc

dec_label_pc_10007efc:                            ; preds = %dec_label_pc_10007ef4
  %v1_10007efc = icmp slt i32 %v1_10006544, 62
  %v3_10007efc = icmp eq i32 %v1_10006544, 62
  store i1 %v1_10007efc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007efc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007efc, label %dec_label_pc_10007f04, label %dec_label_pc_100068c8

dec_label_pc_10007f04:                            ; preds = %dec_label_pc_10007efc
  %v1_10007f04 = icmp ult i32 %v1_10006548, 186
  %v3_10007f04 = icmp eq i32 %v1_10006548, 186
  store i1 %v1_10007f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f04, i1* %cr7_eq.global-to-local, align 1
  %tmp312 = icmp ult i32 %v1_10006548, 187
  br i1 %tmp312, label %dec_label_pc_100068c8, label %dec_label_pc_10007f0c

dec_label_pc_10007f0c:                            ; preds = %dec_label_pc_10007f04
  %v1_10007f0c = icmp ult i32 %v1_10006548, 190
  %v3_10007f0c = icmp eq i32 %v1_10006548, 190
  store i1 %v1_10007f0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f0c, i1* %cr7_eq.global-to-local, align 1
  %tmp313 = icmp ult i32 %v1_10006548, 191
  br i1 %tmp313, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007f18:                            ; preds = %dec_label_pc_100067a8
  %v1_10007f18 = icmp slt i32 %v1_10006544, 85
  %v3_10007f18 = icmp eq i32 %v1_10006544, 85
  store i1 %v1_10007f18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f18, label %dec_label_pc_10007f20, label %dec_label_pc_100068c8

dec_label_pc_10007f20:                            ; preds = %dec_label_pc_10007f18
  %v1_10007f20 = icmp ult i32 %v1_10006548, 7
  %v3_10007f20 = icmp eq i32 %v1_10006548, 7
  store i1 %v1_10007f20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f20, i1* %cr7_eq.global-to-local, align 1
  %tmp314 = icmp ult i32 %v1_10006548, 8
  br i1 %tmp314, label %dec_label_pc_100068c8, label %dec_label_pc_10007f28

dec_label_pc_10007f28:                            ; preds = %dec_label_pc_10007f20
  %v1_10007f28 = icmp ult i32 %v1_10006548, 62
  %v3_10007f28 = icmp eq i32 %v1_10006548, 62
  store i1 %v1_10007f28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f28, i1* %cr7_eq.global-to-local, align 1
  %tmp315 = icmp ult i32 %v1_10006548, 63
  br i1 %tmp315, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007f34:                            ; preds = %dec_label_pc_10007ef4
  %v1_10007f34 = icmp ult i32 %v1_10006548, 135
  %v3_10007f34 = icmp eq i32 %v1_10006548, 135
  store i1 %v1_10007f34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f34, i1* %cr7_eq.global-to-local, align 1
  %tmp316 = icmp ult i32 %v1_10006548, 136
  br i1 %tmp316, label %dec_label_pc_100068c8, label %dec_label_pc_10007f3c

dec_label_pc_10007f3c:                            ; preds = %dec_label_pc_10007f34
  %v1_10007f3c = icmp ult i32 %v1_10006548, 138
  %v3_10007f3c = icmp eq i32 %v1_10006548, 138
  store i1 %v1_10007f3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f3c, i1* %cr7_eq.global-to-local, align 1
  %tmp317 = icmp ult i32 %v1_10006548, 139
  br i1 %tmp317, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007f48:                            ; preds = %dec_label_pc_10007eec
  %v1_10007f48 = icmp ult i32 %v1_10006548, 20
  %v3_10007f48 = icmp eq i32 %v1_10006548, 20
  store i1 %v1_10007f48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f48, i1* %cr7_eq.global-to-local, align 1
  %tmp318 = icmp ult i32 %v1_10006548, 21
  br i1 %tmp318, label %dec_label_pc_100068c8, label %dec_label_pc_10007f50

dec_label_pc_10007f50:                            ; preds = %dec_label_pc_10007f48
  %v1_10007f50 = icmp eq i32 %v1_10006548, 21
  %v3_10007f50 = icmp eq i32 %v1_10006548, 22
  store i1 %v1_10007f50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f50, i1* %cr7_eq.global-to-local, align 1
  %tmp319 = icmp ult i32 %v1_10006548, 23
  br i1 %tmp319, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007f5c:                            ; preds = %dec_label_pc_10007ee4
  %v1_10007f5c = icmp ult i32 %v1_10006548, 143
  %v3_10007f5c = icmp eq i32 %v1_10006548, 143
  store i1 %v1_10007f5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f5c, i1* %cr7_eq.global-to-local, align 1
  %tmp320 = icmp ult i32 %v1_10006548, 144
  br i1 %tmp320, label %dec_label_pc_100068c8, label %dec_label_pc_10007f64

dec_label_pc_10007f64:                            ; preds = %dec_label_pc_10007f5c
  %v1_10007f64 = icmp ult i32 %v1_10006548, 147
  %v3_10007f64 = icmp eq i32 %v1_10006548, 147
  store i1 %v1_10007f64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f64, i1* %cr7_eq.global-to-local, align 1
  %tmp321 = icmp ult i32 %v1_10006548, 148
  br i1 %tmp321, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007f70:                            ; preds = %dec_label_pc_10007edc
  %v1_10007f70 = icmp ult i32 %v1_10006548, 219
  %v3_10007f70 = icmp eq i32 %v1_10006548, 219
  store i1 %v1_10007f70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f70, i1* %cr7_eq.global-to-local, align 1
  %tmp322 = icmp ult i32 %v1_10006548, 220
  br i1 %tmp322, label %dec_label_pc_100068c8, label %dec_label_pc_10007f78

dec_label_pc_10007f78:                            ; preds = %dec_label_pc_10007f70
  %v1_10007f78 = icmp ult i32 %v1_10006548, 222
  %v3_10007f78 = icmp eq i32 %v1_10006548, 222
  store i1 %v1_10007f78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f78, i1* %cr7_eq.global-to-local, align 1
  %tmp323 = icmp ult i32 %v1_10006548, 223
  br i1 %tmp323, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007f84:                            ; preds = %dec_label_pc_100067a0
  %v1_10007f84 = icmp slt i32 %v1_10006544, 196
  %v3_10007f84 = icmp eq i32 %v1_10006544, 196
  store i1 %v1_10007f84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f84, label %dec_label_pc_10007f8c, label %dec_label_pc_100068c8

dec_label_pc_10007f8c:                            ; preds = %dec_label_pc_10007f84
  %v1_10007f8c = icmp slt i32 %v1_10006548, 0
  %v3_10007f8c = icmp eq i32 %v1_10006548, 0
  store i1 %v1_10007f8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f8c, label %dec_label_pc_100068c8, label %dec_label_pc_10007f94

dec_label_pc_10007f94:                            ; preds = %dec_label_pc_10007f8c
  %v1_10007f94 = icmp ult i32 %v1_10006548, 14
  %v3_10007f94 = icmp eq i32 %v1_10006548, 14
  store i1 %v1_10007f94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f94, i1* %cr7_eq.global-to-local, align 1
  %tmp324 = icmp ult i32 %v1_10006548, 15
  br i1 %tmp324, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007fa0:                            ; preds = %dec_label_pc_10006798
  %v1_10007fa0 = icmp slt i32 %v1_10006544, 207
  %v3_10007fa0 = icmp eq i32 %v1_10006544, 207
  store i1 %v1_10007fa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fa0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fa0, label %dec_label_pc_10007ffc, label %dec_label_pc_10007fa8

dec_label_pc_10007fa8:                            ; preds = %dec_label_pc_10007fa0
  %v1_10007fa8 = icmp slt i32 %v1_10006544, 205
  %v3_10007fa8 = icmp eq i32 %v1_10006544, 205
  store i1 %v1_10007fa8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fa8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fa8, label %dec_label_pc_10007fb0, label %dec_label_pc_100068c8

dec_label_pc_10007fb0:                            ; preds = %dec_label_pc_10007fa8
  %v1_10007fb0 = and i32 %v1_10006548, 128
  store i32 %v1_10007fb0, i32* %r10.global-to-local, align 4
  %v3_10007fb0 = icmp eq i32 %v1_10007fb0, 0
  br i1 %v3_10007fb0, label %dec_label_pc_100068c8, label %dec_label_pc_10007fb8

dec_label_pc_10007fb8:                            ; preds = %dec_label_pc_10007fb0
  %v1_10007fb8 = icmp ult i32 %v1_10006548, 190
  %v3_10007fb8 = icmp eq i32 %v1_10006548, 190
  store i1 %v1_10007fb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fb8, i1* %cr7_eq.global-to-local, align 1
  %tmp325 = icmp ult i32 %v1_10006548, 191
  br i1 %tmp325, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007fc4:                            ; preds = %dec_label_pc_10006790
  %v1_10007fc4 = icmp slt i32 %v1_10006544, 139
  %v3_10007fc4 = icmp eq i32 %v1_10006544, 139
  store i1 %v1_10007fc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fc4, label %dec_label_pc_10008010, label %dec_label_pc_10007fcc

dec_label_pc_10007fcc:                            ; preds = %dec_label_pc_10007fc4
  %v1_10007fcc = icmp slt i32 %v1_10006544, 59
  %v3_10007fcc = icmp eq i32 %v1_10006544, 59
  store i1 %v1_10007fcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fcc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fcc, label %dec_label_pc_10006534, label %dec_label_pc_10007fd4

dec_label_pc_10007fd4:                            ; preds = %dec_label_pc_10007fcc
  %v1_10007fd4 = icmp slt i32 %v1_10006544, 187
  %v3_10007fd4 = icmp eq i32 %v1_10006544, 187
  store i1 %v1_10007fd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fd4, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007fe0:                            ; preds = %dec_label_pc_10006788
  %v1_10007fe0 = icmp slt i32 %v1_10006544, 138
  %v3_10007fe0 = icmp eq i32 %v1_10006544, 138
  store i1 %v1_10007fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fe0, label %dec_label_pc_10007fe8, label %dec_label_pc_100068c8

dec_label_pc_10007fe8:                            ; preds = %dec_label_pc_10007fe0
  %v1_10007fe8 = icmp slt i32 %v1_10006548, 0
  %v3_10007fe8 = icmp eq i32 %v1_10006548, 0
  store i1 %v1_10007fe8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fe8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fe8, label %dec_label_pc_100068c8, label %dec_label_pc_10007ff0

dec_label_pc_10007ff0:                            ; preds = %dec_label_pc_10007fe8
  %v1_10007ff0 = icmp ult i32 %v1_10006548, 126
  %v3_10007ff0 = icmp eq i32 %v1_10006548, 126
  store i1 %v1_10007ff0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ff0, i1* %cr7_eq.global-to-local, align 1
  %tmp326 = icmp ult i32 %v1_10006548, 127
  br i1 %tmp326, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10007ffc:                            ; preds = %dec_label_pc_10007fa0
  %v1_10007ffc = icmp ult i32 %v1_10006548, 63
  %v3_10007ffc = icmp eq i32 %v1_10006548, 63
  store i1 %v1_10007ffc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ffc, i1* %cr7_eq.global-to-local, align 1
  %tmp327 = icmp ult i32 %v1_10006548, 64
  br i1 %tmp327, label %dec_label_pc_100068c8, label %dec_label_pc_10008004

dec_label_pc_10008004:                            ; preds = %dec_label_pc_10007ffc
  %v1_10008004 = icmp ult i32 %v1_10006548, 94
  %v3_10008004 = icmp eq i32 %v1_10006548, 94
  store i1 %v1_10008004, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008004, i1* %cr7_eq.global-to-local, align 1
  %tmp328 = icmp ult i32 %v1_10006548, 95
  br i1 %tmp328, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008010:                            ; preds = %dec_label_pc_10007fc4
  %v1_10008010 = icmp slt i32 %v1_10006548, 0
  %v3_10008010 = icmp eq i32 %v1_10006548, 0
  store i1 %v1_10008010, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008010, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008010, label %dec_label_pc_100068c8, label %dec_label_pc_10008018

dec_label_pc_10008018:                            ; preds = %dec_label_pc_10008010
  %v1_10008018 = icmp ult i32 %v1_10006548, 30
  %v3_10008018 = icmp eq i32 %v1_10006548, 30
  store i1 %v1_10008018, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008018, i1* %cr7_eq.global-to-local, align 1
  %tmp329 = icmp ult i32 %v1_10006548, 31
  br i1 %tmp329, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008024:                            ; preds = %dec_label_pc_10006780
  %v1_10008024 = icmp slt i32 %v1_10006544, 170
  %v3_10008024 = icmp eq i32 %v1_10006544, 170
  store i1 %v1_10008024, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008024, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008024, label %dec_label_pc_10006534, label %dec_label_pc_1000802c

dec_label_pc_1000802c:                            ; preds = %dec_label_pc_10008024
  %v1_1000802c = icmp slt i32 %v1_10006544, 152
  %v3_1000802c = icmp eq i32 %v1_10006544, 152
  store i1 %v1_1000802c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000802c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000802c, label %dec_label_pc_10008080, label %dec_label_pc_10008034

dec_label_pc_10008034:                            ; preds = %dec_label_pc_1000802c
  %v1_10008034 = icmp slt i32 %v1_10006544, 181
  %v3_10008034 = icmp eq i32 %v1_10006544, 181
  store i1 %v1_10008034, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008034, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008034, label %dec_label_pc_1000806c, label %dec_label_pc_1000803c

dec_label_pc_1000803c:                            ; preds = %dec_label_pc_10008034
  %v1_1000803c = icmp ult i32 %v1_10006544, 19
  %v3_1000803c = icmp eq i32 %v1_10006544, 19
  store i1 %v1_1000803c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000803c, i1* %cr7_eq.global-to-local, align 1
  %tmp330 = icmp ult i32 %v1_10006544, 20
  br i1 %tmp330, label %dec_label_pc_100068c8, label %dec_label_pc_10008044

dec_label_pc_10008044:                            ; preds = %dec_label_pc_1000803c
  %v1_10008044 = icmp ult i32 %v1_10006544, 23
  %v3_10008044 = icmp eq i32 %v1_10006544, 23
  store i1 %v1_10008044, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008044, i1* %cr7_eq.global-to-local, align 1
  %tmp331 = icmp ult i32 %v1_10006544, 24
  br i1 %tmp331, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008050:                            ; preds = %dec_label_pc_10006778
  %v1_10008050 = icmp slt i32 %v1_10006544, 62
  %v3_10008050 = icmp eq i32 %v1_10006544, 62
  store i1 %v1_10008050, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008050, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008050, label %dec_label_pc_10006534, label %dec_label_pc_10008058

dec_label_pc_10008058:                            ; preds = %dec_label_pc_10008050
  %v1_10008058 = icmp slt i32 %v1_10006544, 32
  %v3_10008058 = icmp eq i32 %v1_10006544, 32
  store i1 %v1_10008058, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008058, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008058, label %dec_label_pc_10006534, label %dec_label_pc_10008060

dec_label_pc_10008060:                            ; preds = %dec_label_pc_10008058
  %v1_10008060 = icmp slt i32 %v1_10006544, 33
  %v3_10008060 = icmp eq i32 %v1_10006544, 33
  store i1 %v1_10008060, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008060, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008060, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10008034
  %v1_1000806c = icmp ult i32 %v1_10006548, 159
  %v3_1000806c = icmp eq i32 %v1_10006548, 159
  store i1 %v1_1000806c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000806c, i1* %cr7_eq.global-to-local, align 1
  %tmp332 = icmp ult i32 %v1_10006548, 160
  br i1 %tmp332, label %dec_label_pc_100068c8, label %dec_label_pc_10008074

dec_label_pc_10008074:                            ; preds = %dec_label_pc_1000806c
  %v1_10008074 = icmp ult i32 %v1_10006548, 188
  %v3_10008074 = icmp eq i32 %v1_10006548, 188
  store i1 %v1_10008074, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008074, i1* %cr7_eq.global-to-local, align 1
  %tmp333 = icmp ult i32 %v1_10006548, 189
  br i1 %tmp333, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008080:                            ; preds = %dec_label_pc_1000802c
  %v1_10008080 = icmp ult i32 %v1_10006548, 95
  %v3_10008080 = icmp eq i32 %v1_10006548, 95
  store i1 %v1_10008080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008080, i1* %cr7_eq.global-to-local, align 1
  %tmp334 = icmp ult i32 %v1_10006548, 96
  br i1 %tmp334, label %dec_label_pc_100068c8, label %dec_label_pc_10008088

dec_label_pc_10008088:                            ; preds = %dec_label_pc_10008080
  %v1_10008088 = icmp ult i32 %v1_10006548, 110
  %v3_10008088 = icmp eq i32 %v1_10006548, 110
  store i1 %v1_10008088, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008088, i1* %cr7_eq.global-to-local, align 1
  %tmp335 = icmp ult i32 %v1_10006548, 111
  br i1 %tmp335, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008094:                            ; preds = %dec_label_pc_10006770
  %v1_10008094 = icmp slt i32 %v1_10006544, 55
  %v3_10008094 = icmp eq i32 %v1_10006544, 55
  store i1 %v1_10008094, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008094, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008094, label %dec_label_pc_10006534, label %dec_label_pc_1000809c

dec_label_pc_1000809c:                            ; preds = %dec_label_pc_10008094
  %v1_1000809c = icmp slt i32 %v1_10006544, 63
  %v3_1000809c = icmp eq i32 %v1_10006544, 63
  store i1 %v1_1000809c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000809c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000809c, label %dec_label_pc_100080dc, label %dec_label_pc_100080a4

dec_label_pc_100080a4:                            ; preds = %dec_label_pc_1000809c
  %v1_100080a4 = icmp slt i32 %v1_10006544, 76
  %v3_100080a4 = icmp eq i32 %v1_10006544, 76
  store i1 %v1_100080a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080a4, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100080b0:                            ; preds = %dec_label_pc_10006768
  %v1_100080b0 = icmp slt i32 %v1_10006544, 166
  %v3_100080b0 = icmp eq i32 %v1_10006544, 166
  store i1 %v1_100080b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080b0, label %dec_label_pc_10006534, label %dec_label_pc_100080b8

dec_label_pc_100080b8:                            ; preds = %dec_label_pc_100080b0
  %v1_100080b8 = icmp slt i32 %v1_10006544, 226
  %v3_100080b8 = icmp eq i32 %v1_10006544, 226
  store i1 %v1_100080b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080b8, label %dec_label_pc_10006534, label %dec_label_pc_100080c0

dec_label_pc_100080c0:                            ; preds = %dec_label_pc_100080b8
  %v1_100080c0 = icmp slt i32 %v1_10006544, 209
  %v3_100080c0 = icmp eq i32 %v1_10006544, 209
  store i1 %v1_100080c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080c0, label %dec_label_pc_100080f0, label %dec_label_pc_100080c8

dec_label_pc_100080c8:                            ; preds = %dec_label_pc_100080c0
  %v1_100080c8 = icmp slt i32 %v1_10006544, 165
  %v3_100080c8 = icmp eq i32 %v1_10006544, 165
  store i1 %v1_100080c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080c8, label %dec_label_pc_10006534, label %dec_label_pc_100080d0

dec_label_pc_100080d0:                            ; preds = %dec_label_pc_100080c8
  %v1_100080d0 = icmp slt i32 %v1_10006544, 68
  %v3_100080d0 = icmp eq i32 %v1_10006544, 68
  store i1 %v1_100080d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080d0, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100080dc:                            ; preds = %dec_label_pc_1000809c
  %v1_100080dc = icmp slt i32 %v1_10006548, 0
  %v3_100080dc = icmp eq i32 %v1_10006548, 0
  store i1 %v1_100080dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080dc, label %dec_label_pc_100068c8, label %dec_label_pc_100080e4

dec_label_pc_100080e4:                            ; preds = %dec_label_pc_100080dc
  %v1_100080e4 = icmp ult i32 %v1_10006548, 126
  %v3_100080e4 = icmp eq i32 %v1_10006548, 126
  store i1 %v1_100080e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080e4, i1* %cr7_eq.global-to-local, align 1
  %tmp336 = icmp ult i32 %v1_10006548, 127
  br i1 %tmp336, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100080f0:                            ; preds = %dec_label_pc_100080c0
  %v1_100080f0 = icmp ult i32 %v1_10006548, 47
  %v3_100080f0 = icmp eq i32 %v1_10006548, 47
  store i1 %v1_100080f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080f0, i1* %cr7_eq.global-to-local, align 1
  %tmp337 = icmp ult i32 %v1_10006548, 48
  br i1 %tmp337, label %dec_label_pc_100068c8, label %dec_label_pc_100080f8

dec_label_pc_100080f8:                            ; preds = %dec_label_pc_100080f0
  %v1_100080f8 = icmp ult i32 %v1_10006548, 52
  %v3_100080f8 = icmp eq i32 %v1_10006548, 52
  store i1 %v1_100080f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080f8, i1* %cr7_eq.global-to-local, align 1
  %tmp338 = icmp ult i32 %v1_10006548, 53
  br i1 %tmp338, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008104:                            ; preds = %dec_label_pc_10006760
  %v1_10008104 = icmp ult i32 %v1_10006544, 15
  %v3_10008104 = icmp eq i32 %v1_10006544, 15
  store i1 %v1_10008104, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008104, i1* %cr7_eq.global-to-local, align 1
  %tmp339 = icmp ult i32 %v1_10006544, 16
  br i1 %tmp339, label %dec_label_pc_1000812c.thread, label %dec_label_pc_1000810c

dec_label_pc_1000812c.thread:                     ; preds = %dec_label_pc_10008104
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_1000810c:                            ; preds = %dec_label_pc_10008104
  %v1_1000810c = icmp ult i32 %v1_10006544, 30
  %v3_1000810c = icmp eq i32 %v1_10006544, 30
  store i1 %v1_1000810c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000810c, i1* %cr7_eq.global-to-local, align 1
  %tmp340 = icmp ult i32 %v1_10006544, 31
  br i1 %tmp340, label %dec_label_pc_10006534, label %dec_label_pc_10008114

dec_label_pc_10008114:                            ; preds = %dec_label_pc_1000810c
  %v1_10008114 = icmp slt i32 %v1_10006544, 131
  %v3_10008114 = icmp eq i32 %v1_10006544, 131
  store i1 %v1_10008114, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008114, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008114, label %dec_label_pc_10006534, label %dec_label_pc_1000811c

dec_label_pc_1000811c:                            ; preds = %dec_label_pc_10008114
  %v1_1000811c = icmp slt i32 %v1_10006544, 236
  %v3_1000811c = icmp eq i32 %v1_10006544, 236
  store i1 %v1_1000811c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000811c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000811c, label %dec_label_pc_10006534, label %dec_label_pc_10008124

dec_label_pc_10008124:                            ; preds = %dec_label_pc_1000811c
  %v1_10008124 = icmp slt i32 %v1_10006544, 238
  %v3_10008124 = icmp eq i32 %v1_10006544, 238
  store i1 %v1_10008124, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008124, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008124, label %dec_label_pc_1000815c, label %dec_label_pc_1000812c

dec_label_pc_1000812c:                            ; preds = %dec_label_pc_10008124
  %v1_1000812c = icmp slt i32 %v1_10006544, 200
  %v3_1000812c = icmp eq i32 %v1_10006544, 200
  store i1 %v1_1000812c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000812c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000812c, label %dec_label_pc_10008134, label %dec_label_pc_100068c8

dec_label_pc_10008134:                            ; preds = %dec_label_pc_1000812c
  %v1_10008134 = and i32 %v1_10006548, 128
  store i32 %v1_10008134, i32* %r10.global-to-local, align 4
  %v3_10008134 = icmp eq i32 %v1_10008134, 0
  br i1 %v3_10008134, label %dec_label_pc_100068c8, label %dec_label_pc_1000813c

dec_label_pc_1000813c:                            ; preds = %dec_label_pc_10008134
  %v1_1000813c = icmp ult i32 %v1_10006548, 158
  %v3_1000813c = icmp eq i32 %v1_10006548, 158
  store i1 %v1_1000813c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000813c, i1* %cr7_eq.global-to-local, align 1
  %tmp341 = icmp ult i32 %v1_10006548, 159
  br i1 %tmp341, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008148:                            ; preds = %dec_label_pc_10006758
  %v1_10008148 = icmp slt i32 %v1_10006544, 0
  %v3_10008148 = icmp eq i32 %v1_10006544, 0
  store i1 %v1_10008148, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008148, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008148, label %dec_label_pc_100068c8, label %dec_label_pc_10008150

dec_label_pc_10008150:                            ; preds = %dec_label_pc_10008148
  %v1_10008150 = icmp ult i32 %v1_10006544, 117
  %v3_10008150 = icmp eq i32 %v1_10006544, 117
  store i1 %v1_10008150, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008150, i1* %cr7_eq.global-to-local, align 1
  %tmp342 = icmp ult i32 %v1_10006544, 118
  br i1 %tmp342, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_1000815c:                            ; preds = %dec_label_pc_10008124
  %v1_1000815c = and i32 %v1_10006548, 128
  store i32 %v1_1000815c, i32* %r10.global-to-local, align 4
  %v3_1000815c = icmp eq i32 %v1_1000815c, 0
  br i1 %v3_1000815c, label %dec_label_pc_100068c8, label %dec_label_pc_10008164

dec_label_pc_10008164:                            ; preds = %dec_label_pc_1000815c
  %v1_10008164 = icmp ult i32 %v1_10006548, 190
  %v3_10008164 = icmp eq i32 %v1_10006548, 190
  store i1 %v1_10008164, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008164, i1* %cr7_eq.global-to-local, align 1
  %tmp343 = icmp ult i32 %v1_10006548, 191
  br i1 %tmp343, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008170:                            ; preds = %dec_label_pc_10006750
  %v1_10008170 = icmp ult i32 %v1_10006544, 120
  %v3_10008170 = icmp eq i32 %v1_10006544, 120
  store i1 %v1_10008170, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008170, i1* %cr7_eq.global-to-local, align 1
  %tmp344 = icmp ult i32 %v1_10006544, 121
  br i1 %tmp344, label %dec_label_pc_10008198, label %dec_label_pc_10008178

dec_label_pc_10008178:                            ; preds = %dec_label_pc_10008170
  %v1_10008178 = icmp ult i32 %v1_10006544, 253
  %v3_10008178 = icmp eq i32 %v1_10006544, 253
  store i1 %v1_10008178, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008178, i1* %cr7_eq.global-to-local, align 1
  %tmp345 = icmp ult i32 %v1_10006544, 254
  br i1 %tmp345, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008184:                            ; preds = %dec_label_pc_10006748
  %v1_10008184 = icmp ult i32 %v1_10006544, 204
  %v3_10008184 = icmp eq i32 %v1_10006544, 204
  store i1 %v1_10008184, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008184, i1* %cr7_eq.global-to-local, align 1
  %tmp346 = icmp ult i32 %v1_10006544, 205
  br i1 %tmp346, label %dec_label_pc_100081c4, label %dec_label_pc_1000818c

dec_label_pc_1000818c:                            ; preds = %dec_label_pc_10008184
  %v1_1000818c = icmp eq i32 %v1_10006544, 205
  %v3_1000818c = icmp eq i32 %v1_10006544, 206
  store i1 %v1_1000818c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000818c, i1* %cr7_eq.global-to-local, align 1
  %tmp347 = icmp ult i32 %v1_10006544, 207
  br i1 %tmp347, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008198:                            ; preds = %dec_label_pc_10008170
  %v1_10008198 = icmp slt i32 %v1_10006544, 116
  %v3_10008198 = icmp eq i32 %v1_10006544, 116
  store i1 %v1_10008198, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008198, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008198, label %dec_label_pc_100081ec, label %dec_label_pc_100081a0

dec_label_pc_100081a0:                            ; preds = %dec_label_pc_10008198
  %v1_100081a0 = icmp slt i32 %v1_10006544, 36
  %v3_100081a0 = icmp eq i32 %v1_10006544, 36
  store i1 %v1_100081a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081a0, label %dec_label_pc_100081d8, label %dec_label_pc_100081a8

dec_label_pc_100081a8:                            ; preds = %dec_label_pc_100081a0
  %v1_100081a8 = icmp slt i32 %v1_10006544, 58
  %v3_100081a8 = icmp eq i32 %v1_10006544, 58
  store i1 %v1_100081a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081a8, label %dec_label_pc_100081b0, label %dec_label_pc_100068c8

dec_label_pc_100081b0:                            ; preds = %dec_label_pc_100081a8
  %v1_100081b0 = icmp ult i32 %v1_10006548, 183
  %v3_100081b0 = icmp eq i32 %v1_10006548, 183
  store i1 %v1_100081b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081b0, i1* %cr7_eq.global-to-local, align 1
  %tmp348 = icmp ult i32 %v1_10006548, 184
  br i1 %tmp348, label %dec_label_pc_100068c8, label %dec_label_pc_100081b8

dec_label_pc_100081b8:                            ; preds = %dec_label_pc_100081b0
  %v1_100081b8 = icmp ult i32 %v1_10006548, 186
  %v3_100081b8 = icmp eq i32 %v1_10006548, 186
  store i1 %v1_100081b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081b8, i1* %cr7_eq.global-to-local, align 1
  %tmp349 = icmp ult i32 %v1_10006548, 187
  br i1 %tmp349, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100081c4:                            ; preds = %dec_label_pc_10008184
  %v1_100081c4 = icmp slt i32 %v1_10006544, 47
  %v3_100081c4 = icmp eq i32 %v1_10006544, 47
  store i1 %v1_100081c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081c4, label %dec_label_pc_10008200, label %dec_label_pc_100081cc

dec_label_pc_100081cc:                            ; preds = %dec_label_pc_100081c4
  %v1_100081cc = icmp slt i32 %v1_10006544, 172
  %v3_100081cc = icmp eq i32 %v1_10006544, 172
  store i1 %v1_100081cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081cc, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100081d8:                            ; preds = %dec_label_pc_100081a0
  %v1_100081d8 = icmp ult i32 %v1_10006548, 219
  %v3_100081d8 = icmp eq i32 %v1_10006548, 219
  store i1 %v1_100081d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081d8, i1* %cr7_eq.global-to-local, align 1
  %tmp350 = icmp ult i32 %v1_10006548, 220
  br i1 %tmp350, label %dec_label_pc_100068c8, label %dec_label_pc_100081e0

dec_label_pc_100081e0:                            ; preds = %dec_label_pc_100081d8
  %v1_100081e0 = icmp ult i32 %v1_10006548, 222
  %v3_100081e0 = icmp eq i32 %v1_10006548, 222
  store i1 %v1_100081e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081e0, i1* %cr7_eq.global-to-local, align 1
  %tmp351 = icmp ult i32 %v1_10006548, 223
  br i1 %tmp351, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100081ec:                            ; preds = %dec_label_pc_10008198
  %v1_100081ec = icmp ult i32 %v1_10006548, 111
  %v3_100081ec = icmp eq i32 %v1_10006548, 111
  store i1 %v1_100081ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081ec, i1* %cr7_eq.global-to-local, align 1
  %tmp352 = icmp ult i32 %v1_10006548, 112
  br i1 %tmp352, label %dec_label_pc_100068c8, label %dec_label_pc_100081f4

dec_label_pc_100081f4:                            ; preds = %dec_label_pc_100081ec
  %v1_100081f4 = icmp ult i32 %v1_10006548, 118
  %v3_100081f4 = icmp eq i32 %v1_10006548, 118
  store i1 %v1_100081f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081f4, i1* %cr7_eq.global-to-local, align 1
  %tmp353 = icmp ult i32 %v1_10006548, 119
  br i1 %tmp353, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008200:                            ; preds = %dec_label_pc_100081c4
  %v1_10008200 = icmp ult i32 %v1_10006548, 9
  %v3_10008200 = icmp eq i32 %v1_10006548, 9
  store i1 %v1_10008200, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008200, i1* %cr7_eq.global-to-local, align 1
  %tmp354 = icmp ult i32 %v1_10006548, 10
  br i1 %tmp354, label %dec_label_pc_100068c8, label %dec_label_pc_10008208

dec_label_pc_10008208:                            ; preds = %dec_label_pc_10008200
  %v1_10008208 = icmp slt i32 %v1_10006548, 10
  %v3_10008208 = icmp eq i32 %v1_10006548, 10
  store i1 %v1_10008208, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008208, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008208, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008214:                            ; preds = %dec_label_pc_10006740
  %v1_10008214 = icmp ult i32 %v1_10006544, 131
  %v3_10008214 = icmp eq i32 %v1_10006544, 131
  store i1 %v1_10008214, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008214, i1* %cr7_eq.global-to-local, align 1
  %tmp355 = icmp ult i32 %v1_10006544, 132
  br i1 %tmp355, label %dec_label_pc_100068c8, label %dec_label_pc_1000821c

dec_label_pc_1000821c:                            ; preds = %dec_label_pc_10008214
  %v1_1000821c = icmp ult i32 %v1_10006544, 150
  %v3_1000821c = icmp eq i32 %v1_10006544, 150
  store i1 %v1_1000821c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000821c, i1* %cr7_eq.global-to-local, align 1
  %tmp356 = icmp ult i32 %v1_10006544, 151
  br i1 %tmp356, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008228:                            ; preds = %dec_label_pc_10006738
  %v1_10008228 = icmp ult i32 %v1_10006544, 119
  %v3_10008228 = icmp eq i32 %v1_10006544, 119
  store i1 %v1_10008228, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008228, i1* %cr7_eq.global-to-local, align 1
  %tmp357 = icmp ult i32 %v1_10006544, 120
  br i1 %tmp357, label %dec_label_pc_10008238.thread, label %dec_label_pc_10008230

dec_label_pc_10008238.thread:                     ; preds = %dec_label_pc_10008228
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_10008230:                            ; preds = %dec_label_pc_10008228
  %v1_10008230 = icmp slt i32 %v1_10006544, 120
  %v3_10008230 = icmp eq i32 %v1_10006544, 120
  store i1 %v1_10008230, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008230, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008230, label %dec_label_pc_10006534, label %dec_label_pc_10008238

dec_label_pc_10008238:                            ; preds = %dec_label_pc_10008230
  %v1_10008238 = icmp slt i32 %v1_10006544, 203
  %v3_10008238 = icmp eq i32 %v1_10006544, 203
  store i1 %v1_10008238, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008238, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008238, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008244:                            ; preds = %dec_label_pc_10006730
  %v1_10008244 = icmp slt i32 %v1_10006544, 0
  %v3_10008244 = icmp eq i32 %v1_10006544, 0
  store i1 %v1_10008244, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008244, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008244, label %dec_label_pc_100068c8, label %dec_label_pc_1000824c

dec_label_pc_1000824c:                            ; preds = %dec_label_pc_10008244
  %v1_1000824c = icmp ult i32 %v1_10006544, 20
  %v3_1000824c = icmp eq i32 %v1_10006544, 20
  store i1 %v1_1000824c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000824c, i1* %cr7_eq.global-to-local, align 1
  %tmp358 = icmp ult i32 %v1_10006544, 21
  br i1 %tmp358, label %dec_label_pc_10006534, label %dec_label_pc_10008254

dec_label_pc_10008254:                            ; preds = %dec_label_pc_1000824c
  %v1_10008254 = icmp ult i32 %v1_10006544, 234
  %v3_10008254 = icmp eq i32 %v1_10006544, 234
  store i1 %v1_10008254, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008254, i1* %cr7_eq.global-to-local, align 1
  %tmp359 = icmp ult i32 %v1_10006544, 235
  br i1 %tmp359, label %dec_label_pc_100068c8, label %dec_label_pc_1000825c

dec_label_pc_1000825c:                            ; preds = %dec_label_pc_10008254
  %v1_1000825c = icmp ult i32 %v1_10006544, 246
  %v3_1000825c = icmp eq i32 %v1_10006544, 246
  store i1 %v1_1000825c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000825c, i1* %cr7_eq.global-to-local, align 1
  %tmp360 = icmp ult i32 %v1_10006544, 247
  br i1 %tmp360, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008268:                            ; preds = %dec_label_pc_10006728
  %v1_10008268 = icmp ult i32 %v1_10006544, 20
  %v3_10008268 = icmp eq i32 %v1_10006544, 20
  store i1 %v1_10008268, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008268, i1* %cr7_eq.global-to-local, align 1
  %tmp361 = icmp ult i32 %v1_10006544, 21
  br i1 %tmp361, label %dec_label_pc_100068c8, label %dec_label_pc_10008270

dec_label_pc_10008270:                            ; preds = %dec_label_pc_10008268
  %v1_10008270 = icmp ult i32 %v1_10006544, 31
  %v3_10008270 = icmp eq i32 %v1_10006544, 31
  store i1 %v1_10008270, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008270, i1* %cr7_eq.global-to-local, align 1
  %tmp362 = icmp ult i32 %v1_10006544, 32
  br i1 %tmp362, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_1000827c:                            ; preds = %dec_label_pc_10006720
  %v1_1000827c = icmp ult i32 %v1_10006544, 98
  %v3_1000827c = icmp eq i32 %v1_10006544, 98
  store i1 %v1_1000827c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000827c, i1* %cr7_eq.global-to-local, align 1
  %tmp363 = icmp ult i32 %v1_10006544, 99
  br i1 %tmp363, label %dec_label_pc_100068c8, label %dec_label_pc_10008284

dec_label_pc_10008284:                            ; preds = %dec_label_pc_1000827c
  %v1_10008284 = icmp ult i32 %v1_10006544, 252
  %v3_10008284 = icmp eq i32 %v1_10006544, 252
  store i1 %v1_10008284, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008284, i1* %cr7_eq.global-to-local, align 1
  %tmp364 = icmp ult i32 %v1_10006544, 253
  br i1 %tmp364, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008290:                            ; preds = %dec_label_pc_10006718
  %v1_10008290 = icmp ult i32 %v1_10006544, 44
  %v3_10008290 = icmp eq i32 %v1_10006544, 44
  store i1 %v1_10008290, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008290, i1* %cr7_eq.global-to-local, align 1
  %tmp365 = icmp ult i32 %v1_10006544, 45
  br i1 %tmp365, label %dec_label_pc_100068c8, label %dec_label_pc_10008298

dec_label_pc_10008298:                            ; preds = %dec_label_pc_10008290
  %v1_10008298 = icmp ult i32 %v1_10006544, 232
  %v3_10008298 = icmp eq i32 %v1_10006544, 232
  store i1 %v1_10008298, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008298, i1* %cr7_eq.global-to-local, align 1
  %tmp366 = icmp ult i32 %v1_10006544, 233
  br i1 %tmp366, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100082a4:                            ; preds = %dec_label_pc_10006710
  %v1_100082a4 = icmp slt i32 %v1_10006544, 0
  %v3_100082a4 = icmp eq i32 %v1_10006544, 0
  store i1 %v1_100082a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100082a4, label %dec_label_pc_100068c8, label %dec_label_pc_100082ac

dec_label_pc_100082ac:                            ; preds = %dec_label_pc_100082a4
  %v1_100082ac = icmp ult i32 %v1_10006544, 202
  %v3_100082ac = icmp eq i32 %v1_10006544, 202
  store i1 %v1_100082ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082ac, i1* %cr7_eq.global-to-local, align 1
  %tmp367 = icmp ult i32 %v1_10006544, 203
  br i1 %tmp367, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100082b8:                            ; preds = %dec_label_pc_10006708
  %v1_100082b8 = icmp ult i32 %v1_10006544, 30
  %v3_100082b8 = icmp eq i32 %v1_10006544, 30
  store i1 %v1_100082b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082b8, i1* %cr7_eq.global-to-local, align 1
  %tmp368 = icmp ult i32 %v1_10006544, 31
  br i1 %tmp368, label %dec_label_pc_100082c8, label %dec_label_pc_100082c0

dec_label_pc_100082c0:                            ; preds = %dec_label_pc_100082b8
  %v1_100082c0 = icmp ult i32 %v1_10006544, 142
  %v3_100082c0 = icmp eq i32 %v1_10006544, 142
  store i1 %v1_100082c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082c0, i1* %cr7_eq.global-to-local, align 1
  %tmp369 = icmp ult i32 %v1_10006544, 143
  br i1 %tmp369, label %dec_label_pc_10006534, label %dec_label_pc_100082c8

dec_label_pc_100082c8:                            ; preds = %dec_label_pc_100082c0, %dec_label_pc_100082b8
  %v1_100082c8 = icmp slt i32 %v1_10006544, 59
  store i1 %v1_100082c8, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_100082d4:                            ; preds = %dec_label_pc_10006700
  %v1_100082d4 = icmp ult i32 %v1_10006544, 12
  %v3_100082d4 = icmp eq i32 %v1_10006544, 12
  store i1 %v1_100082d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082d4, i1* %cr7_eq.global-to-local, align 1
  %tmp370 = icmp ult i32 %v1_10006544, 13
  br i1 %tmp370, label %dec_label_pc_100082e4.thread, label %dec_label_pc_100082dc

dec_label_pc_100082e4.thread:                     ; preds = %dec_label_pc_100082d4
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100082ec

dec_label_pc_100082dc:                            ; preds = %dec_label_pc_100082d4
  %v1_100082dc = icmp ult i32 %v1_10006544, 193
  %v3_100082dc = icmp eq i32 %v1_10006544, 193
  store i1 %v1_100082dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082dc, i1* %cr7_eq.global-to-local, align 1
  %tmp371 = icmp ult i32 %v1_10006544, 194
  br i1 %tmp371, label %dec_label_pc_10006534, label %dec_label_pc_100082e4

dec_label_pc_100082e4:                            ; preds = %dec_label_pc_100082dc
  %v1_100082e4 = icmp slt i32 %v1_10006544, 197
  %v3_100082e4 = icmp eq i32 %v1_10006544, 197
  store i1 %v1_100082e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100082e4, label %dec_label_pc_10006534, label %dec_label_pc_100082ec

dec_label_pc_100082ec:                            ; preds = %dec_label_pc_100082e4, %dec_label_pc_100082e4.thread
  %v1_100082ec = icmp slt i32 %v1_10006544, 68
  store i1 %v1_100082ec, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_100082f8:                            ; preds = %dec_label_pc_100066f8
  %v1_100082f8 = icmp ult i32 %v1_10006544, 176
  %v3_100082f8 = icmp eq i32 %v1_10006544, 176
  store i1 %v1_100082f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082f8, i1* %cr7_eq.global-to-local, align 1
  %tmp372 = icmp ult i32 %v1_10006544, 177
  br i1 %tmp372, label %dec_label_pc_100068c8, label %dec_label_pc_10008300

dec_label_pc_10008300:                            ; preds = %dec_label_pc_100082f8
  %v1_10008300 = icmp ult i32 %v1_10006544, 222
  %v3_10008300 = icmp eq i32 %v1_10006544, 222
  store i1 %v1_10008300, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008300, i1* %cr7_eq.global-to-local, align 1
  %tmp373 = icmp ult i32 %v1_10006544, 223
  br i1 %tmp373, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_1000830c:                            ; preds = %dec_label_pc_100066f0
  %v1_1000830c = icmp ult i32 %v1_10006544, 4
  %v3_1000830c = icmp eq i32 %v1_10006544, 4
  store i1 %v1_1000830c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000830c, i1* %cr7_eq.global-to-local, align 1
  %tmp374 = icmp ult i32 %v1_10006544, 5
  br i1 %tmp374, label %dec_label_pc_100068c8, label %dec_label_pc_10008314

dec_label_pc_10008314:                            ; preds = %dec_label_pc_1000830c
  %v1_10008314 = icmp ult i32 %v1_10006544, 234
  %v3_10008314 = icmp eq i32 %v1_10006544, 234
  store i1 %v1_10008314, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008314, i1* %cr7_eq.global-to-local, align 1
  %tmp375 = icmp ult i32 %v1_10006544, 235
  br i1 %tmp375, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008320:                            ; preds = %dec_label_pc_100066e8
  %v1_10008320 = icmp ult i32 %v1_10006544, 2
  %v3_10008320 = icmp eq i32 %v1_10006544, 2
  store i1 %v1_10008320, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008320, i1* %cr7_eq.global-to-local, align 1
  %tmp376 = icmp ult i32 %v1_10006544, 3
  br i1 %tmp376, label %dec_label_pc_100068c8, label %dec_label_pc_10008328

dec_label_pc_10008328:                            ; preds = %dec_label_pc_10008320
  %v1_10008328 = icmp ult i32 %v1_10006544, 250
  %v3_10008328 = icmp eq i32 %v1_10006544, 250
  store i1 %v1_10008328, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008328, i1* %cr7_eq.global-to-local, align 1
  %tmp377 = icmp ult i32 %v1_10006544, 251
  br i1 %tmp377, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008334:                            ; preds = %dec_label_pc_100066e0
  %v1_10008334 = icmp ult i32 %v1_10006544, 2
  %v3_10008334 = icmp eq i32 %v1_10006544, 2
  store i1 %v1_10008334, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008334, i1* %cr7_eq.global-to-local, align 1
  %tmp378 = icmp ult i32 %v1_10006544, 3
  br i1 %tmp378, label %dec_label_pc_100068c8, label %dec_label_pc_1000833c

dec_label_pc_1000833c:                            ; preds = %dec_label_pc_10008334
  %v1_1000833c = icmp ult i32 %v1_10006544, 250
  %v3_1000833c = icmp eq i32 %v1_10006544, 250
  store i1 %v1_1000833c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000833c, i1* %cr7_eq.global-to-local, align 1
  %tmp379 = icmp ult i32 %v1_10006544, 251
  br i1 %tmp379, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008348:                            ; preds = %dec_label_pc_100066d8
  %v1_10008348 = icmp ult i32 %v1_10006544, 39
  %v3_10008348 = icmp eq i32 %v1_10006544, 39
  store i1 %v1_10008348, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008348, i1* %cr7_eq.global-to-local, align 1
  %tmp380 = icmp ult i32 %v1_10006544, 40
  br i1 %tmp380, label %dec_label_pc_100068c8, label %dec_label_pc_10008350

dec_label_pc_10008350:                            ; preds = %dec_label_pc_10008348
  %v1_10008350 = icmp ult i32 %v1_10006544, 167
  %v3_10008350 = icmp eq i32 %v1_10006544, 167
  store i1 %v1_10008350, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008350, i1* %cr7_eq.global-to-local, align 1
  %tmp381 = icmp ult i32 %v1_10006544, 168
  br i1 %tmp381, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_1000835c:                            ; preds = %dec_label_pc_100066d0
  %v1_1000835c = icmp ult i32 %v1_10006544, 21
  %v3_1000835c = icmp eq i32 %v1_10006544, 21
  store i1 %v1_1000835c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000835c, i1* %cr7_eq.global-to-local, align 1
  %tmp382 = icmp ult i32 %v1_10006544, 22
  br i1 %tmp382, label %dec_label_pc_100068c8, label %dec_label_pc_10008364

dec_label_pc_10008364:                            ; preds = %dec_label_pc_1000835c
  %v1_10008364 = icmp slt i32 %v1_10006544, 255
  %v3_10008364 = icmp eq i32 %v1_10006544, 255
  store i1 %v1_10008364, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008364, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008364, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_10008370:                            ; preds = %dec_label_pc_100066c8
  %v1_10008370 = icmp ult i32 %v1_10006544, 34
  %v3_10008370 = icmp eq i32 %v1_10006544, 34
  store i1 %v1_10008370, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008370, i1* %cr7_eq.global-to-local, align 1
  %tmp383 = icmp ult i32 %v1_10006544, 35
  br i1 %tmp383, label %dec_label_pc_100068c8, label %dec_label_pc_10008378

dec_label_pc_10008378:                            ; preds = %dec_label_pc_10008370
  %v1_10008378 = icmp ult i32 %v1_10006544, 236
  %v3_10008378 = icmp eq i32 %v1_10006544, 236
  store i1 %v1_10008378, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008378, i1* %cr7_eq.global-to-local, align 1
  %tmp384 = icmp ult i32 %v1_10006544, 237
  br i1 %tmp384, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008384:                            ; preds = %dec_label_pc_100066c0
  %v1_10008384 = icmp ult i32 %v1_10006544, 17
  %v3_10008384 = icmp eq i32 %v1_10006544, 17
  store i1 %v1_10008384, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008384, i1* %cr7_eq.global-to-local, align 1
  %tmp385 = icmp ult i32 %v1_10006544, 18
  br i1 %tmp385, label %dec_label_pc_100083a4, label %dec_label_pc_1000838c

dec_label_pc_1000838c:                            ; preds = %dec_label_pc_10008384
  %v1_1000838c = icmp eq i32 %v1_10006544, 18
  %v3_1000838c = icmp eq i32 %v1_10006544, 19
  store i1 %v1_1000838c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000838c, i1* %cr7_eq.global-to-local, align 1
  %tmp386 = icmp ult i32 %v1_10006544, 20
  br i1 %tmp386, label %dec_label_pc_10006534, label %dec_label_pc_10008394

dec_label_pc_10008394:                            ; preds = %dec_label_pc_1000838c
  %v1_10008394 = icmp slt i32 %v1_10006544, 199
  %v3_10008394 = icmp eq i32 %v1_10006544, 199
  store i1 %v1_10008394, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008394, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008394, label %dec_label_pc_100083f0, label %dec_label_pc_1000839c

dec_label_pc_1000839c:                            ; preds = %dec_label_pc_10008394
  %v1_1000839c = icmp slt i32 %v1_10006544, 211
  %v3_1000839c = icmp eq i32 %v1_10006544, 211
  store i1 %v1_1000839c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000839c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000839c, label %dec_label_pc_100083dc, label %dec_label_pc_100083a4.thread

dec_label_pc_100083a4.thread:                     ; preds = %dec_label_pc_1000839c
  %v1_100083a430 = icmp slt i32 %v1_10006544, 8
  store i1 %v1_100083a430, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_100083a4:                            ; preds = %dec_label_pc_10008384
  %v1_100083a4 = icmp slt i32 %v1_10006544, 8
  %v3_100083a4 = icmp eq i32 %v1_10006544, 8
  store i1 %v1_100083a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083a4, label %dec_label_pc_100083ac, label %dec_label_pc_100068c8

dec_label_pc_100083ac:                            ; preds = %dec_label_pc_100083a4
  %v1_100083ac = icmp ult i32 %v1_10006548, 80
  %v3_100083ac = icmp eq i32 %v1_10006548, 80
  store i1 %v1_100083ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083ac, i1* %cr7_eq.global-to-local, align 1
  %tmp387 = icmp ult i32 %v1_10006548, 81
  br i1 %tmp387, label %dec_label_pc_100068c8, label %dec_label_pc_100083b4

dec_label_pc_100083b4:                            ; preds = %dec_label_pc_100083ac
  %v1_100083b4 = icmp ult i32 %v1_10006548, 94
  %v3_100083b4 = icmp eq i32 %v1_10006548, 94
  store i1 %v1_100083b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083b4, i1* %cr7_eq.global-to-local, align 1
  %tmp388 = icmp ult i32 %v1_10006548, 95
  br i1 %tmp388, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100083c0:                            ; preds = %dec_label_pc_100066b8
  %v1_100083c0 = icmp slt i32 %v1_10006544, 254
  %v3_100083c0 = icmp eq i32 %v1_10006544, 254
  store i1 %v1_100083c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083c0, label %dec_label_pc_10006534, label %dec_label_pc_100083c8

dec_label_pc_100083c8:                            ; preds = %dec_label_pc_100083c0
  %v1_100083c8 = icmp ult i32 %v1_10006544, 251
  %v3_100083c8 = icmp eq i32 %v1_10006544, 251
  store i1 %v1_100083c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083c8, i1* %cr7_eq.global-to-local, align 1
  %tmp389 = icmp ult i32 %v1_10006544, 252
  br i1 %tmp389, label %dec_label_pc_100068c8, label %dec_label_pc_100083d0

dec_label_pc_100083d0:                            ; preds = %dec_label_pc_100083c8
  %v1_100083d0 = icmp eq i32 %v1_10006544, 252
  %v3_100083d0 = icmp eq i32 %v1_10006544, 253
  store i1 %v1_100083d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083d0, i1* %cr7_eq.global-to-local, align 1
  %tmp390 = icmp ult i32 %v1_10006544, 254
  br i1 %tmp390, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100083dc:                            ; preds = %dec_label_pc_1000839c
  %v1_100083dc = icmp ult i32 %v1_10006548, 95
  %v3_100083dc = icmp eq i32 %v1_10006548, 95
  store i1 %v1_100083dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083dc, i1* %cr7_eq.global-to-local, align 1
  %tmp391 = icmp ult i32 %v1_10006548, 96
  br i1 %tmp391, label %dec_label_pc_100068c8, label %dec_label_pc_100083e4

dec_label_pc_100083e4:                            ; preds = %dec_label_pc_100083dc
  %v1_100083e4 = icmp ult i32 %v1_10006548, 126
  %v3_100083e4 = icmp eq i32 %v1_10006548, 126
  store i1 %v1_100083e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083e4, i1* %cr7_eq.global-to-local, align 1
  %tmp392 = icmp ult i32 %v1_10006548, 127
  br i1 %tmp392, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100083f0:                            ; preds = %dec_label_pc_10008394
  %v1_100083f0 = icmp ult i32 %v1_10006548, 63
  %v3_100083f0 = icmp eq i32 %v1_10006548, 63
  store i1 %v1_100083f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083f0, i1* %cr7_eq.global-to-local, align 1
  %tmp393 = icmp ult i32 %v1_10006548, 64
  br i1 %tmp393, label %dec_label_pc_100068c8, label %dec_label_pc_100083f8

dec_label_pc_100083f8:                            ; preds = %dec_label_pc_100083f0
  %v1_100083f8 = icmp ult i32 %v1_10006548, 126
  %v3_100083f8 = icmp eq i32 %v1_10006548, 126
  store i1 %v1_100083f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083f8, i1* %cr7_eq.global-to-local, align 1
  %tmp394 = icmp ult i32 %v1_10006548, 127
  br i1 %tmp394, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008404:                            ; preds = %dec_label_pc_100066b0
  %v1_10008404 = icmp ult i32 %v1_10006544, 63
  %v3_10008404 = icmp eq i32 %v1_10006544, 63
  store i1 %v1_10008404, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008404, i1* %cr7_eq.global-to-local, align 1
  %tmp395 = icmp ult i32 %v1_10006544, 64
  br i1 %tmp395, label %dec_label_pc_100068c8, label %dec_label_pc_1000840c

dec_label_pc_1000840c:                            ; preds = %dec_label_pc_10008404
  %v1_1000840c = icmp ult i32 %v1_10006544, 126
  %v3_1000840c = icmp eq i32 %v1_10006544, 126
  store i1 %v1_1000840c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000840c, i1* %cr7_eq.global-to-local, align 1
  %tmp396 = icmp ult i32 %v1_10006544, 127
  br i1 %tmp396, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008418:                            ; preds = %dec_label_pc_100066a8
  %v1_10008418 = icmp ult i32 %v1_10006544, 15
  %v3_10008418 = icmp eq i32 %v1_10006544, 15
  store i1 %v1_10008418, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008418, i1* %cr7_eq.global-to-local, align 1
  %tmp397 = icmp ult i32 %v1_10006544, 16
  br i1 %tmp397, label %dec_label_pc_10008428.thread, label %dec_label_pc_10008420

dec_label_pc_10008428.thread:                     ; preds = %dec_label_pc_10008418
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_10008420:                            ; preds = %dec_label_pc_10008418
  %v1_10008420 = icmp ult i32 %v1_10006544, 31
  %v3_10008420 = icmp eq i32 %v1_10006544, 31
  store i1 %v1_10008420, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008420, i1* %cr7_eq.global-to-local, align 1
  %tmp398 = icmp ult i32 %v1_10006544, 32
  br i1 %tmp398, label %dec_label_pc_10006534, label %dec_label_pc_10008428

dec_label_pc_10008428:                            ; preds = %dec_label_pc_10008420
  %v1_10008428 = icmp slt i32 %v1_10006544, 98
  %v3_10008428 = icmp eq i32 %v1_10006544, 98
  store i1 %v1_10008428, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008428, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008428, label %dec_label_pc_10008430, label %dec_label_pc_100068c8

dec_label_pc_10008430:                            ; preds = %dec_label_pc_10008428
  %v1_10008430 = icmp ult i32 %v1_10006548, 63
  %v3_10008430 = icmp eq i32 %v1_10006548, 63
  store i1 %v1_10008430, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008430, i1* %cr7_eq.global-to-local, align 1
  %tmp399 = icmp ult i32 %v1_10006548, 64
  br i1 %tmp399, label %dec_label_pc_100068c8, label %dec_label_pc_10008438

dec_label_pc_10008438:                            ; preds = %dec_label_pc_10008430
  %v1_10008438 = icmp ult i32 %v1_10006548, 94
  %v3_10008438 = icmp eq i32 %v1_10006548, 94
  store i1 %v1_10008438, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008438, i1* %cr7_eq.global-to-local, align 1
  %tmp400 = icmp ult i32 %v1_10006548, 95
  br i1 %tmp400, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008444:                            ; preds = %dec_label_pc_100066a0
  %v1_10008444 = icmp slt i32 %v1_10006544, 70
  %v3_10008444 = icmp eq i32 %v1_10006544, 70
  store i1 %v1_10008444, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008444, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008444, label %dec_label_pc_10006534, label %dec_label_pc_1000844c

dec_label_pc_1000844c:                            ; preds = %dec_label_pc_10008444
  %v1_1000844c = icmp ult i32 %v1_10006544, 68
  %v3_1000844c = icmp eq i32 %v1_10006544, 68
  store i1 %v1_1000844c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000844c, i1* %cr7_eq.global-to-local, align 1
  %tmp401 = icmp ult i32 %v1_10006544, 69
  br i1 %tmp401, label %dec_label_pc_1000846c.thread, label %dec_label_pc_10008454

dec_label_pc_10008454:                            ; preds = %dec_label_pc_1000844c
  %v1_10008454 = icmp ult i32 %v1_10006544, 226
  %v3_10008454 = icmp eq i32 %v1_10006544, 226
  store i1 %v1_10008454, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008454, i1* %cr7_eq.global-to-local, align 1
  %tmp402 = icmp ult i32 %v1_10006544, 227
  br i1 %tmp402, label %dec_label_pc_10006534, label %dec_label_pc_1000846c

dec_label_pc_1000846c.thread:                     ; preds = %dec_label_pc_1000844c
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10008474

dec_label_pc_1000846c:                            ; preds = %dec_label_pc_10008454
  %v1_1000846c = icmp slt i32 %v1_10006544, 237
  %v3_1000846c = icmp eq i32 %v1_10006544, 237
  store i1 %v1_1000846c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000846c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000846c, label %dec_label_pc_100084b4, label %dec_label_pc_10008474

dec_label_pc_10008474:                            ; preds = %dec_label_pc_1000846c, %dec_label_pc_1000846c.thread
  %v1_10008474 = icmp slt i32 %v1_10006544, 94
  store i1 %v1_10008474, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_10008490:                            ; preds = %dec_label_pc_10006698
  %v1_10008490 = icmp slt i32 %v1_10006544, 35
  %v3_10008490 = icmp eq i32 %v1_10006544, 35
  store i1 %v1_10008490, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008490, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008490, label %dec_label_pc_10006534, label %dec_label_pc_10008498

dec_label_pc_10008498:                            ; preds = %dec_label_pc_10008490
  %v1_10008498 = icmp slt i32 %v1_10006544, 222
  %v3_10008498 = icmp eq i32 %v1_10006544, 222
  store i1 %v1_10008498, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008498, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008498, label %dec_label_pc_100084a0, label %dec_label_pc_100068c8

dec_label_pc_100084a0:                            ; preds = %dec_label_pc_10008498
  %v1_100084a0 = icmp slt i32 %v1_10006548, 0
  %v3_100084a0 = icmp eq i32 %v1_10006548, 0
  store i1 %v1_100084a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100084a0, label %dec_label_pc_100068c8, label %dec_label_pc_100084a8

dec_label_pc_100084a8:                            ; preds = %dec_label_pc_100084a0
  %v1_100084a8 = icmp ult i32 %v1_10006548, 30
  %v3_100084a8 = icmp eq i32 %v1_10006548, 30
  store i1 %v1_100084a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084a8, i1* %cr7_eq.global-to-local, align 1
  %tmp403 = icmp ult i32 %v1_10006548, 31
  br i1 %tmp403, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100084b4:                            ; preds = %dec_label_pc_1000846c
  %v1_100084b4 = icmp ult i32 %v1_10006548, 31
  %v3_100084b4 = icmp eq i32 %v1_10006548, 31
  store i1 %v1_100084b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084b4, i1* %cr7_eq.global-to-local, align 1
  %tmp404 = icmp ult i32 %v1_10006548, 32
  br i1 %tmp404, label %dec_label_pc_100068c8, label %dec_label_pc_100084bc

dec_label_pc_100084bc:                            ; preds = %dec_label_pc_100084b4
  %v1_100084bc = icmp ult i32 %v1_10006548, 42
  %v3_100084bc = icmp eq i32 %v1_10006548, 42
  store i1 %v1_100084bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084bc, i1* %cr7_eq.global-to-local, align 1
  %tmp405 = icmp ult i32 %v1_10006548, 43
  br i1 %tmp405, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100084c8:                            ; preds = %dec_label_pc_10006690
  %v1_100084c8 = icmp slt i32 %v1_10006544, 235
  %v3_100084c8 = icmp eq i32 %v1_10006544, 235
  store i1 %v1_100084c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100084c8, label %dec_label_pc_10006534, label %dec_label_pc_100084d0

dec_label_pc_100084d0:                            ; preds = %dec_label_pc_100084c8
  %v1_100084d0 = icmp slt i32 %v1_10006544, 240
  %v3_100084d0 = icmp eq i32 %v1_10006544, 240
  store i1 %v1_100084d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100084d0, label %dec_label_pc_100084d8, label %dec_label_pc_100068c8

dec_label_pc_100084d8:                            ; preds = %dec_label_pc_100084d0
  %v1_100084d8 = and i32 %v1_10006548, 128
  store i32 %v1_100084d8, i32* %r10.global-to-local, align 4
  %v3_100084d8 = icmp eq i32 %v1_100084d8, 0
  br i1 %v3_100084d8, label %dec_label_pc_100068c8, label %dec_label_pc_100084e0

dec_label_pc_100084e0:                            ; preds = %dec_label_pc_100084d8
  %v1_100084e0 = icmp ult i32 %v1_10006548, 142
  %v3_100084e0 = icmp eq i32 %v1_10006548, 142
  store i1 %v1_100084e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084e0, i1* %cr7_eq.global-to-local, align 1
  %tmp406 = icmp ult i32 %v1_10006548, 143
  br i1 %tmp406, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100084ec:                            ; preds = %dec_label_pc_10006688
  %v1_100084ec = icmp slt i32 %v1_10006544, 55
  %v3_100084ec = icmp eq i32 %v1_10006544, 55
  store i1 %v1_100084ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100084ec, label %dec_label_pc_10006534, label %dec_label_pc_100084f4

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084ec
  %v1_100084f4 = icmp slt i32 %v1_10006544, 56
  %v3_100084f4 = icmp eq i32 %v1_10006544, 56
  store i1 %v1_100084f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100084f4, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008500:                            ; preds = %dec_label_pc_10006680
  %v1_10008500 = icmp slt i32 %v1_10006544, 30
  %v3_10008500 = icmp eq i32 %v1_10006544, 30
  store i1 %v1_10008500, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008500, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008500, label %dec_label_pc_10006534, label %dec_label_pc_10008508

dec_label_pc_10008508:                            ; preds = %dec_label_pc_10008500
  %v1_10008508 = icmp slt i32 %v1_10006544, 120
  %v3_10008508 = icmp eq i32 %v1_10006544, 120
  store i1 %v1_10008508, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008508, label %dec_label_pc_10006534, label %dec_label_pc_10008510

dec_label_pc_10008510:                            ; preds = %dec_label_pc_10008508
  %v1_10008510 = icmp ult i32 %v1_10006544, 59
  %v3_10008510 = icmp eq i32 %v1_10006544, 59
  store i1 %v1_10008510, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008510, i1* %cr7_eq.global-to-local, align 1
  %tmp407 = icmp ult i32 %v1_10006544, 60
  br i1 %tmp407, label %dec_label_pc_10008520.thread, label %dec_label_pc_10008518

dec_label_pc_10008520.thread:                     ; preds = %dec_label_pc_10008510
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_10008518:                            ; preds = %dec_label_pc_10008510
  %v1_10008518 = icmp eq i32 %v1_10006544, 60
  %v3_10008518 = icmp eq i32 %v1_10006544, 61
  store i1 %v1_10008518, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008518, i1* %cr7_eq.global-to-local, align 1
  %tmp408 = icmp ult i32 %v1_10006544, 62
  br i1 %tmp408, label %dec_label_pc_10006534, label %dec_label_pc_10008520

dec_label_pc_10008520:                            ; preds = %dec_label_pc_10008518
  %v1_10008520 = icmp slt i32 %v1_10006544, 154
  %v3_10008520 = icmp eq i32 %v1_10006544, 154
  store i1 %v1_10008520, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008520, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008520, label %dec_label_pc_10008528, label %dec_label_pc_100068c8

dec_label_pc_10008528:                            ; preds = %dec_label_pc_10008520
  %v1_10008528 = icmp ult i32 %v1_10006548, 191
  %v3_10008528 = icmp eq i32 %v1_10006548, 191
  store i1 %v1_10008528, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008528, i1* %cr7_eq.global-to-local, align 1
  %tmp409 = icmp ult i32 %v1_10006548, 192
  br i1 %tmp409, label %dec_label_pc_100068c8, label %dec_label_pc_10008530

dec_label_pc_10008530:                            ; preds = %dec_label_pc_10008528
  %v1_10008530 = icmp slt i32 %v1_10006548, 255
  %v3_10008530 = icmp eq i32 %v1_10006548, 255
  store i1 %v1_10008530, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008530, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008530, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_1000853c:                            ; preds = %dec_label_pc_10006678
  %v1_1000853c = icmp slt i32 %v1_10006544, 34
  %v3_1000853c = icmp eq i32 %v1_10006544, 34
  store i1 %v1_1000853c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000853c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000853c, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008548:                            ; preds = %dec_label_pc_10006670
  %v1_10008548 = icmp slt i32 %v1_10006544, 59
  %v3_10008548 = icmp eq i32 %v1_10006544, 59
  store i1 %v1_10008548, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008548, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008548, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008554:                            ; preds = %dec_label_pc_10006668
  %v1_10008554 = icmp slt i32 %v1_10006544, 68
  %v3_10008554 = icmp eq i32 %v1_10006544, 68
  store i1 %v1_10008554, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008554, label %dec_label_pc_10006534, label %dec_label_pc_1000855c

dec_label_pc_1000855c:                            ; preds = %dec_label_pc_10008554
  %v1_1000855c = icmp slt i32 %v1_10006544, 85
  %v3_1000855c = icmp eq i32 %v1_10006544, 85
  store i1 %v1_1000855c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000855c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000855c, label %dec_label_pc_10006534, label %dec_label_pc_10008564

dec_label_pc_10008564:                            ; preds = %dec_label_pc_1000855c
  %v1_10008564 = icmp slt i32 %v1_10006544, 102
  %v3_10008564 = icmp eq i32 %v1_10006544, 102
  store i1 %v1_10008564, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008564, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008564, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008570:                            ; preds = %dec_label_pc_10006660
  %v1_10008570 = icmp slt i32 %v1_10006544, 44
  %v3_10008570 = icmp eq i32 %v1_10006544, 44
  store i1 %v1_10008570, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008570, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008570, label %dec_label_pc_10006534, label %dec_label_pc_10008578

dec_label_pc_10008578:                            ; preds = %dec_label_pc_10008570
  %v1_10008578 = icmp slt i32 %v1_10006544, 114
  %v3_10008578 = icmp eq i32 %v1_10006544, 114
  store i1 %v1_10008578, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008578, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008578, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008584:                            ; preds = %dec_label_pc_10006658
  %v1_10008584 = icmp slt i32 %v1_10006544, 9
  %v3_10008584 = icmp eq i32 %v1_10006544, 9
  store i1 %v1_10008584, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008584, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008584, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008590:                            ; preds = %dec_label_pc_10006650
  %v1_10008590 = icmp slt i32 %v1_10006544, 158
  %v3_10008590 = icmp eq i32 %v1_10006544, 158
  store i1 %v1_10008590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008590, label %dec_label_pc_10006534, label %dec_label_pc_10008598

dec_label_pc_10008598:                            ; preds = %dec_label_pc_10008590
  %v1_10008598 = icmp ult i32 %v1_10006544, 44
  %v3_10008598 = icmp eq i32 %v1_10006544, 44
  store i1 %v1_10008598, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008598, i1* %cr7_eq.global-to-local, align 1
  %tmp410 = icmp ult i32 %v1_10006544, 45
  br i1 %tmp410, label %dec_label_pc_10008610.thread, label %dec_label_pc_100085a0

dec_label_pc_10008610.thread:                     ; preds = %dec_label_pc_10008598
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_100085a0:                            ; preds = %dec_label_pc_10008598
  %v1_100085a0 = icmp ult i32 %v1_10006544, 49
  %v3_100085a0 = icmp eq i32 %v1_10006544, 49
  store i1 %v1_100085a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085a0, i1* %cr7_eq.global-to-local, align 1
  %tmp411 = icmp ult i32 %v1_10006544, 50
  br i1 %tmp411, label %dec_label_pc_10006534, label %dec_label_pc_100085a8

dec_label_pc_100085a8:                            ; preds = %dec_label_pc_100085a0
  %v1_100085a8 = icmp ult i32 %v1_10006544, 216
  %v3_100085a8 = icmp eq i32 %v1_10006544, 216
  store i1 %v1_100085a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085a8, i1* %cr7_eq.global-to-local, align 1
  %tmp412 = icmp ult i32 %v1_10006544, 217
  br i1 %tmp412, label %dec_label_pc_10008610, label %dec_label_pc_100085b0

dec_label_pc_100085b0:                            ; preds = %dec_label_pc_100085a8
  %v1_100085b0 = icmp ult i32 %v1_10006544, 232
  %v3_100085b0 = icmp eq i32 %v1_10006544, 232
  store i1 %v1_100085b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085b0, i1* %cr7_eq.global-to-local, align 1
  %tmp413 = icmp ult i32 %v1_10006544, 233
  br i1 %tmp413, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_100085bc:                            ; preds = %dec_label_pc_10006648
  %v1_100085bc = icmp slt i32 %v1_10006544, 96
  %v3_100085bc = icmp eq i32 %v1_10006544, 96
  store i1 %v1_100085bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085bc, label %dec_label_pc_10006534, label %dec_label_pc_100085c4

dec_label_pc_100085c4:                            ; preds = %dec_label_pc_100085bc
  %v1_100085c4 = icmp slt i32 %v1_10006544, 149
  %v3_100085c4 = icmp eq i32 %v1_10006544, 149
  store i1 %v1_100085c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085c4, label %dec_label_pc_10006534, label %dec_label_pc_100085cc

dec_label_pc_100085cc:                            ; preds = %dec_label_pc_100085c4
  %v1_100085cc = icmp slt i32 %v1_10006544, 155
  %v3_100085cc = icmp eq i32 %v1_10006544, 155
  store i1 %v1_100085cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085cc, label %dec_label_pc_10006534, label %dec_label_pc_100085d4

dec_label_pc_100085d4:                            ; preds = %dec_label_pc_100085cc
  %v1_100085d4 = icmp slt i32 %v1_10006544, 178
  %v3_100085d4 = icmp eq i32 %v1_10006544, 178
  store i1 %v1_100085d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085d4, label %dec_label_pc_10006534, label %dec_label_pc_100085dc

dec_label_pc_100085dc:                            ; preds = %dec_label_pc_100085d4
  %v1_100085dc = icmp ult i32 %v1_10006544, 4
  %v3_100085dc = icmp eq i32 %v1_10006544, 4
  store i1 %v1_100085dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085dc, i1* %cr7_eq.global-to-local, align 1
  %tmp414 = icmp ult i32 %v1_10006544, 5
  br i1 %tmp414, label %dec_label_pc_100085ec.thread, label %dec_label_pc_100085e4

dec_label_pc_100085ec.thread:                     ; preds = %dec_label_pc_100085dc
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100085fc.thread

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_100085dc
  %v1_100085e4 = icmp ult i32 %v1_10006544, 9
  %v3_100085e4 = icmp eq i32 %v1_10006544, 9
  store i1 %v1_100085e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085e4, i1* %cr7_eq.global-to-local, align 1
  %tmp415 = icmp ult i32 %v1_10006544, 10
  br i1 %tmp415, label %dec_label_pc_10006534, label %dec_label_pc_100085ec

dec_label_pc_100085ec:                            ; preds = %dec_label_pc_100085e4
  %v1_100085ec = icmp ult i32 %v1_10006544, 73
  %v3_100085ec = icmp eq i32 %v1_10006544, 73
  store i1 %v1_100085ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085ec, i1* %cr7_eq.global-to-local, align 1
  %tmp416 = icmp ult i32 %v1_10006544, 74
  br i1 %tmp416, label %dec_label_pc_100085fc.thread, label %dec_label_pc_100085f4

dec_label_pc_100085f4:                            ; preds = %dec_label_pc_100085ec
  %v1_100085f4 = icmp ult i32 %v1_10006544, 88
  %v3_100085f4 = icmp eq i32 %v1_10006544, 88
  store i1 %v1_100085f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085f4, i1* %cr7_eq.global-to-local, align 1
  %tmp417 = icmp ult i32 %v1_10006544, 89
  br i1 %tmp417, label %dec_label_pc_10006534, label %dec_label_pc_100085fc

dec_label_pc_100085fc.thread:                     ; preds = %dec_label_pc_100085ec, %dec_label_pc_100085ec.thread
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_100085fc:                            ; preds = %dec_label_pc_100085f4
  %v1_100085fc = icmp ult i32 %v1_10006544, 212
  %v3_100085fc = icmp eq i32 %v1_10006544, 212
  store i1 %v1_100085fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085fc, i1* %cr7_eq.global-to-local, align 1
  %tmp418 = icmp ult i32 %v1_10006544, 213
  br i1 %tmp418, label %dec_label_pc_100068c8, label %dec_label_pc_10008604

dec_label_pc_10008604:                            ; preds = %dec_label_pc_100085fc
  %v1_10008604 = icmp ult i32 %v1_10006544, 221
  %v3_10008604 = icmp eq i32 %v1_10006544, 221
  store i1 %v1_10008604, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008604, i1* %cr7_eq.global-to-local, align 1
  %tmp419 = icmp ult i32 %v1_10006544, 222
  br i1 %tmp419, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008610:                            ; preds = %dec_label_pc_100085a8
  %v1_10008610 = icmp slt i32 %v1_10006544, 132
  %v3_10008610 = icmp eq i32 %v1_10006544, 132
  store i1 %v1_10008610, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008610, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008610, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_1000861c:                            ; preds = %dec_label_pc_10006640
  %v1_1000861c = icmp slt i32 %v1_10006544, 32
  %v3_1000861c = icmp eq i32 %v1_10006544, 32
  store i1 %v1_1000861c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000861c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000861c, label %dec_label_pc_10006534, label %dec_label_pc_10008624

dec_label_pc_10008624:                            ; preds = %dec_label_pc_1000861c
  %v1_10008624 = icmp ult i32 %v1_10006544, 44
  %v3_10008624 = icmp eq i32 %v1_10006544, 44
  store i1 %v1_10008624, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008624, i1* %cr7_eq.global-to-local, align 1
  %tmp420 = icmp ult i32 %v1_10006544, 45
  br i1 %tmp420, label %dec_label_pc_10008634.thread, label %dec_label_pc_1000862c

dec_label_pc_10008634.thread:                     ; preds = %dec_label_pc_10008624
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_1000862c:                            ; preds = %dec_label_pc_10008624
  %v1_1000862c = icmp eq i32 %v1_10006544, 45
  %v3_1000862c = icmp eq i32 %v1_10006544, 46
  store i1 %v1_1000862c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000862c, i1* %cr7_eq.global-to-local, align 1
  %tmp421 = icmp ult i32 %v1_10006544, 47
  br i1 %tmp421, label %dec_label_pc_10006534, label %dec_label_pc_10008634

dec_label_pc_10008634:                            ; preds = %dec_label_pc_1000862c
  %v1_10008634 = icmp slt i32 %v1_10006544, 243
  %v3_10008634 = icmp eq i32 %v1_10006544, 243
  store i1 %v1_10008634, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008634, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008634, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008640:                            ; preds = %dec_label_pc_10006638
  %v1_10008640 = icmp slt i32 %v1_10006544, 124
  %v3_10008640 = icmp eq i32 %v1_10006544, 124
  store i1 %v1_10008640, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008640, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_1000864c:                            ; preds = %dec_label_pc_10006630
  %v1_1000864c = icmp slt i32 %v1_10006544, 202
  %v3_1000864c = icmp eq i32 %v1_10006544, 202
  store i1 %v1_1000864c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000864c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000864c, label %dec_label_pc_10006534, label %dec_label_pc_10008654

dec_label_pc_10008654:                            ; preds = %dec_label_pc_1000864c
  %v1_10008654 = icmp slt i32 %v1_10006544, 217
  %v3_10008654 = icmp eq i32 %v1_10006544, 217
  store i1 %v1_10008654, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008654, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008654, label %dec_label_pc_10006534, label %dec_label_pc_1000865c

dec_label_pc_1000865c:                            ; preds = %dec_label_pc_10008654
  %v1_1000865c = icmp ult i32 %v1_10006544, 149
  %v3_1000865c = icmp eq i32 %v1_10006544, 149
  store i1 %v1_1000865c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000865c, i1* %cr7_eq.global-to-local, align 1
  %tmp422 = icmp ult i32 %v1_10006544, 150
  br i1 %tmp422, label %dec_label_pc_100068c8, label %dec_label_pc_10008664

dec_label_pc_10008664:                            ; preds = %dec_label_pc_1000865c
  %v1_10008664 = icmp ult i32 %v1_10006544, 153
  %v3_10008664 = icmp eq i32 %v1_10006544, 153
  store i1 %v1_10008664, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008664, i1* %cr7_eq.global-to-local, align 1
  %tmp423 = icmp ult i32 %v1_10006544, 154
  br i1 %tmp423, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008670:                            ; preds = %dec_label_pc_10006628
  %v1_10008670 = icmp slt i32 %v1_10006544, 82
  %v3_10008670 = icmp eq i32 %v1_10006544, 82
  store i1 %v1_10008670, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008670, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008670, label %dec_label_pc_10006534, label %dec_label_pc_10008678

dec_label_pc_10008678:                            ; preds = %dec_label_pc_10008670
  %v1_10008678 = icmp slt i32 %v1_10006544, 229
  %v3_10008678 = icmp eq i32 %v1_10006544, 229
  store i1 %v1_10008678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008678, label %dec_label_pc_10006534, label %dec_label_pc_10008680

dec_label_pc_10008680:                            ; preds = %dec_label_pc_10008678
  %v1_10008680 = icmp ult i32 %v1_10006544, 150
  %v3_10008680 = icmp eq i32 %v1_10006544, 150
  store i1 %v1_10008680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008680, i1* %cr7_eq.global-to-local, align 1
  %tmp424 = icmp ult i32 %v1_10006544, 151
  br i1 %tmp424, label %dec_label_pc_100068c8, label %dec_label_pc_10008688

dec_label_pc_10008688:                            ; preds = %dec_label_pc_10008680
  %v1_10008688 = icmp ult i32 %v1_10006544, 154
  %v3_10008688 = icmp eq i32 %v1_10006544, 154
  store i1 %v1_10008688, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008688, i1* %cr7_eq.global-to-local, align 1
  %tmp425 = icmp ult i32 %v1_10006544, 155
  br i1 %tmp425, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008694:                            ; preds = %dec_label_pc_10006610
  %v1_10008694 = icmp slt i32 %v1_10006544, 159
  %v3_10008694 = icmp eq i32 %v1_10006544, 159
  store i1 %v1_10008694, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008694, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008694, label %dec_label_pc_10006534, label %dec_label_pc_1000869c

dec_label_pc_1000869c:                            ; preds = %dec_label_pc_10008694
  %v1_1000869c = icmp ult i32 %v1_10006544, 34
  %v3_1000869c = icmp eq i32 %v1_10006544, 34
  store i1 %v1_1000869c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000869c, i1* %cr7_eq.global-to-local, align 1
  %tmp426 = icmp ult i32 %v1_10006544, 35
  br i1 %tmp426, label %dec_label_pc_100086ac.thread, label %dec_label_pc_100086a4

dec_label_pc_100086ac.thread:                     ; preds = %dec_label_pc_1000869c
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100086bc.thread

dec_label_pc_100086a4:                            ; preds = %dec_label_pc_1000869c
  %v1_100086a4 = icmp ult i32 %v1_10006544, 42
  %v3_100086a4 = icmp eq i32 %v1_10006544, 42
  store i1 %v1_100086a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086a4, i1* %cr7_eq.global-to-local, align 1
  %tmp427 = icmp ult i32 %v1_10006544, 43
  br i1 %tmp427, label %dec_label_pc_10006534, label %dec_label_pc_100086ac

dec_label_pc_100086ac:                            ; preds = %dec_label_pc_100086a4
  %v1_100086ac = icmp ult i32 %v1_10006544, 102
  %v3_100086ac = icmp eq i32 %v1_10006544, 102
  store i1 %v1_100086ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086ac, i1* %cr7_eq.global-to-local, align 1
  %tmp428 = icmp ult i32 %v1_10006544, 103
  br i1 %tmp428, label %dec_label_pc_100086bc.thread, label %dec_label_pc_100086b4

dec_label_pc_100086b4:                            ; preds = %dec_label_pc_100086ac
  %v1_100086b4 = icmp eq i32 %v1_10006544, 103
  %v3_100086b4 = icmp eq i32 %v1_10006544, 104
  store i1 %v1_100086b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086b4, i1* %cr7_eq.global-to-local, align 1
  %tmp429 = icmp ult i32 %v1_10006544, 105
  br i1 %tmp429, label %dec_label_pc_10006534, label %dec_label_pc_100086bc

dec_label_pc_100086bc.thread:                     ; preds = %dec_label_pc_100086ac, %dec_label_pc_100086ac.thread
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100086cc.thread

dec_label_pc_100086bc:                            ; preds = %dec_label_pc_100086b4
  %v1_100086bc = icmp ult i32 %v1_10006544, 167
  %v3_100086bc = icmp eq i32 %v1_10006544, 167
  store i1 %v1_100086bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086bc, i1* %cr7_eq.global-to-local, align 1
  %tmp430 = icmp ult i32 %v1_10006544, 168
  br i1 %tmp430, label %dec_label_pc_100086cc.thread, label %dec_label_pc_100086c4

dec_label_pc_100086c4:                            ; preds = %dec_label_pc_100086bc
  %v1_100086c4 = icmp eq i32 %v1_10006544, 168
  %v3_100086c4 = icmp eq i32 %v1_10006544, 169
  store i1 %v1_100086c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086c4, i1* %cr7_eq.global-to-local, align 1
  %tmp431 = icmp ult i32 %v1_10006544, 170
  br i1 %tmp431, label %dec_label_pc_10006534, label %dec_label_pc_100086cc

dec_label_pc_100086cc.thread:                     ; preds = %dec_label_pc_100086bc, %dec_label_pc_100086bc.thread
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100086dc.thread

dec_label_pc_100086cc:                            ; preds = %dec_label_pc_100086c4
  %v1_100086cc = icmp ult i32 %v1_10006544, 197
  %v3_100086cc = icmp eq i32 %v1_10006544, 197
  store i1 %v1_100086cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086cc, i1* %cr7_eq.global-to-local, align 1
  %tmp432 = icmp ult i32 %v1_10006544, 198
  br i1 %tmp432, label %dec_label_pc_100086dc.thread, label %dec_label_pc_100086d4

dec_label_pc_100086d4:                            ; preds = %dec_label_pc_100086cc
  %v1_100086d4 = icmp eq i32 %v1_10006544, 198
  %v3_100086d4 = icmp eq i32 %v1_10006544, 199
  store i1 %v1_100086d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086d4, i1* %cr7_eq.global-to-local, align 1
  %tmp433 = icmp ult i32 %v1_10006544, 200
  br i1 %tmp433, label %dec_label_pc_10006534, label %dec_label_pc_100086dc

dec_label_pc_100086dc.thread:                     ; preds = %dec_label_pc_100086cc, %dec_label_pc_100086cc.thread
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100068c8

dec_label_pc_100086dc:                            ; preds = %dec_label_pc_100086d4
  %v1_100086dc = icmp ult i32 %v1_10006544, 237
  %v3_100086dc = icmp eq i32 %v1_10006544, 237
  store i1 %v1_100086dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086dc, i1* %cr7_eq.global-to-local, align 1
  %tmp434 = icmp ult i32 %v1_10006544, 238
  br i1 %tmp434, label %dec_label_pc_100068c8, label %dec_label_pc_100086e4

dec_label_pc_100086e4:                            ; preds = %dec_label_pc_100086dc
  %v1_100086e4 = icmp slt i32 %v1_10006544, 255
  %v3_100086e4 = icmp eq i32 %v1_10006544, 255
  store i1 %v1_100086e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100086e4, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

dec_label_pc_100086f0:                            ; preds = %dec_label_pc_10006abc
  %v1_100086f0 = icmp ult i32 %v1_10006548, 207
  %v3_100086f0 = icmp eq i32 %v1_10006548, 207
  store i1 %v1_100086f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086f0, i1* %cr7_eq.global-to-local, align 1
  %tmp435 = icmp ult i32 %v1_10006548, 208
  br i1 %tmp435, label %dec_label_pc_100068c8, label %dec_label_pc_100086f8

dec_label_pc_100086f8:                            ; preds = %dec_label_pc_100086f0
  %v1_100086f8 = icmp ult i32 %v1_10006548, 222
  %v3_100086f8 = icmp eq i32 %v1_10006548, 222
  store i1 %v1_100086f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086f8, i1* %cr7_eq.global-to-local, align 1
  %tmp436 = icmp ult i32 %v1_10006548, 223
  br i1 %tmp436, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008704:                            ; preds = %dec_label_pc_10006ab4
  %v1_10008704 = and i32 %v1_10006548, 128
  store i32 %v1_10008704, i32* %r10.global-to-local, align 4
  %v3_10008704 = icmp eq i32 %v1_10008704, 0
  br i1 %v3_10008704, label %dec_label_pc_100068c8, label %dec_label_pc_1000870c

dec_label_pc_1000870c:                            ; preds = %dec_label_pc_10008704
  %v1_1000870c = icmp ult i32 %v1_10006548, 142
  %v3_1000870c = icmp eq i32 %v1_10006548, 142
  store i1 %v1_1000870c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000870c, i1* %cr7_eq.global-to-local, align 1
  %tmp437 = icmp ult i32 %v1_10006548, 143
  br i1 %tmp437, label %dec_label_pc_10006534, label %dec_label_pc_100068c8

dec_label_pc_10008718:                            ; preds = %dec_label_pc_10006aac
  %v1_10008718 = and i32 %v1_10006548, 128
  store i32 %v1_10008718, i32* %r10.global-to-local, align 4
  %v3_10008718 = icmp eq i32 %v1_10008718, 0
  br i1 %v3_10008718, label %dec_label_pc_100068c8, label %dec_label_pc_10008720

dec_label_pc_10008720:                            ; preds = %dec_label_pc_10008718
  %v1_10008720 = icmp slt i32 %v1_10006548, 255
  %v3_10008720 = icmp eq i32 %v1_10006548, 255
  store i1 %v1_10008720, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008720, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008720, label %dec_label_pc_100068c8, label %dec_label_pc_10006534

; uselistorder directives
  uselistorder i1 %v3_100079ac, { 1, 0 }
  uselistorder i32 %v3_10007868, { 1, 0 }
  uselistorder i32 %v1_10007810, { 1, 2, 0 }
  uselistorder i32 %v0_10007810, { 1, 0 }
  uselistorder i32 %v2_100077ec, { 1, 0, 2 }
  uselistorder i32 %v4_100077cc, { 1, 0 }
  uselistorder i32 %v0_100077cc, { 0, 2, 1 }
  uselistorder i32 %v3_100077bc, { 1, 0 }
  uselistorder i32 %v0_100077bc, { 0, 2, 1 }
  uselistorder i32 %v2_10007794, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000777c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10007770, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v1_1000776c, { 1, 0 }
  uselistorder i32 %v3_10006fb4, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_10006fb4, { 1, 0 }
  uselistorder i32 %v1_1000766c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_10007668, { 0, 3, 2, 1 }
  uselistorder i32 %v0_100070ac, { 1, 0, 2 }
  uselistorder i32 %v0_10007868, { 2, 1, 3, 0 }
  uselistorder i32 %v0_100070a4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100070a0, { 1, 0 }
  uselistorder i32 %v3_1000709c, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000709c, { 0, 2, 1 }
  uselistorder i32 %v0_1000707c, { 1, 0 }
  uselistorder i32 %v0_10007068, { 1, 0 }
  uselistorder i32 %v1_10007050, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10007048, { 1, 0 }
  uselistorder i32 %v1_10007030, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v2_1000702c, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i8* %v1_10007020, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000776c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10007018, { 2, 1, 3, 0 }
  uselistorder i32 %v0_10007988, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_10007770, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v3_10006ffc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006ffc, { 0, 2, 1 }
  uselistorder i32 %v1_10006fc4, { 1, 0 }
  uselistorder i32 %v0_10006fb482, { 1, 0 }
  uselistorder i32 %v1_10006f98, { 2, 1, 0 }
  uselistorder i32 %v1_10006f94, { 1, 0 }
  uselistorder i32 %v1_10006f90, { 1, 0 }
  uselistorder i32 %v4_10006f6c, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_10006f58, { 1, 0, 2 }
  uselistorder i32 %v1_10006f40, { 1, 0, 2 }
  uselistorder i32 %v3_10006f3c, { 1, 0, 2 }
  uselistorder i32 %v0_1000784c, { 0, 2, 1 }
  uselistorder i32 %v3_10006f30, { 1, 0, 2 }
  uselistorder i32 %v4_10006e64, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10006e58, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10006e4c, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_10006e50, { 0, 2, 1 }
  uselistorder i32 %v2_10006e20, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10006e24, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10006dd4, { 2, 1, 0 }
  uselistorder i32 %v1_10006dc8, { 1, 0 }
  uselistorder i32 %v3_10006db0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006d9c, { 1, 0 }
  uselistorder i32 %v1_10006d88, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006d7c, { 1, 0 }
  uselistorder i32 %v1_10006d70, { 1, 0 }
  uselistorder i32 %v1_10006cf0, { 1, 0 }
  uselistorder i32 %v1_10006cc0, { 1, 2, 0 }
  uselistorder i32 %v1_10006cbc, { 1, 0 }
  uselistorder i32 %v3_10006ca4, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10006c0c, { 2, 0, 1 }
  uselistorder i1 %v1_10006c0c, { 1, 0, 2 }
  uselistorder i32 %v3_10006c08, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_10006c04, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v1_10006bdc, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006bbc, { 1, 0 }
  uselistorder i32 %v3_10006cdc, { 9, 0, 8, 7, 6, 11, 2, 1, 5, 4, 3, 10, 12 }
  uselistorder i32 %v2_10006b90, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10006b94, { 2, 1, 0 }
  uselistorder i32 %v1_10006b64, { 1, 0 }
  uselistorder i32 %v1_10006b44, { 1, 0 }
  uselistorder i32 %v1_10006b40, { 1, 0 }
  uselistorder i32 %v1_10006a84, { 1, 0 }
  uselistorder i32 %v3_10006a7c, { 1, 0, 2 }
  uselistorder i32 %v1_10006a78, { 2, 1, 0 }
  uselistorder i32 %v1_10006a74, { 1, 0 }
  uselistorder i32 %v0_10006a7c, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10006a58, { 1, 0, 2 }
  uselistorder i32 %v0_10006a38, { 3, 1, 2, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_100069cc, { 1, 0, 2 }
  uselistorder i32 %v2_100069b4, { 1, 0, 2 }
  uselistorder i32 %v0_100069b4, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_100069a8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_10006964, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10006550, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 52, 51, 54, 53, 56, 55, 58, 57, 60, 59, 62, 61, 64, 63, 66, 65, 68, 67, 70, 69, 72, 71, 74, 73, 76, 75, 78, 77, 80, 79, 82, 81, 84, 83, 86, 85, 88, 87, 90, 89, 92, 91, 94, 93, 96, 95, 98, 97, 100, 99, 102, 101, 104, 103, 106, 105, 108, 107, 110, 109, 112, 111, 114, 113, 116, 115, 118, 117, 120, 119, 122, 121, 124, 123, 126, 125, 128, 127, 130, 129, 132, 131, 134, 133, 136, 135, 138, 137, 140, 139, 142, 141, 144, 143, 146, 145, 148, 147, 150, 149, 152, 151, 154, 153, 156, 155, 158, 157, 160, 159, 162, 161, 164, 163, 166, 165, 168, 167, 170, 169, 172, 171, 174, 173, 176, 175, 178, 177, 180, 179, 182, 181, 184, 183, 186, 185, 188, 187, 190, 189, 192, 191, 194, 193, 196, 195, 198, 197, 200, 199, 202, 201, 204, 203, 206, 205, 208, 207, 210, 209, 212, 211, 214, 213, 216, 215, 218, 217, 220, 219, 221, 222 }
  uselistorder i32 %v1_10006548, { 402, 401, 240, 460, 459, 458, 436, 243, 242, 241, 246, 245, 244, 248, 247, 285, 284, 283, 254, 253, 252, 336, 448, 447, 446, 262, 261, 260, 257, 256, 255, 259, 258, 383, 382, 381, 238, 237, 236, 265, 264, 263, 451, 450, 449, 268, 267, 266, 362, 361, 360, 271, 270, 269, 274, 273, 272, 276, 275, 279, 278, 277, 282, 281, 280, 327, 326, 325, 503, 502, 501, 491, 490, 489, 412, 411, 410, 439, 438, 437, 297, 296, 295, 324, 507, 506, 505, 504, 500, 499, 498, 488, 487, 486, 352, 351, 350, 318, 317, 497, 496, 495, 485, 484, 483, 339, 338, 337, 477, 476, 475, 418, 417, 416, 479, 478, 380, 379, 378, 463, 462, 461, 473, 472, 471, 468, 467, 457, 456, 455, 356, 445, 444, 443, 470, 469, 442, 441, 440, 435, 434, 433, 432, 431, 430, 323, 322, 321, 429, 428, 230, 342, 341, 340, 427, 426, 425, 251, 250, 249, 372, 371, 370, 421, 420, 419, 415, 414, 413, 409, 408, 407, 396, 395, 394, 406, 454, 453, 452, 405, 404, 403, 330, 329, 328, 288, 287, 286, 355, 354, 353, 294, 293, 292, 364, 363, 231, 333, 332, 331, 387, 386, 300, 299, 298, 302, 301, 316, 315, 314, 374, 373, 234, 305, 304, 303, 366, 365, 232, 424, 423, 422, 291, 290, 289, 474, 320, 319, 233, 313, 312, 311, 335, 334, 235, 482, 481, 480, 310, 309, 377, 376, 375, 308, 307, 306, 400, 399, 398, 369, 368, 367, 393, 392, 391, 347, 346, 397, 349, 348, 359, 358, 357, 385, 384, 466, 465, 464, 390, 389, 388, 239, 494, 493, 492, 345, 344, 343, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 218, 228, 229, 215, 227, 226, 225, 224, 223, 222, 221, 220, 217, 508 }
  uselistorder i32 %v1_10006544, {}
  uselistorder i32 %v1_10006538, { 1, 2, 0 }
  uselistorder i32 %v0_10006534, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006520, { 1, 0 }
  uselistorder i32 %v3_100064f8, { 1, 0, 2 }
  uselistorder i32 %v1_10006a1c, { 1, 0 }
  uselistorder i32 %v1_10006a14, { 1, 0 }
  uselistorder i32 %v1_10006a0c, { 1, 0 }
  uselistorder i32 %v2_10006ce0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10006a2c, { 2, 1, 0 }
  uselistorder i32 %v1_10006a04, { 1, 0 }
  uselistorder i32 %v4_100069f4, { 1, 0, 2 }
  uselistorder i32 %v0_10006294, { 1, 0 }
  uselistorder i32 %v1_10006254, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006244, { 1, 0, 2 }
  uselistorder i32 %v3_100061f0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_100061d8, { 1, 0 }
  uselistorder i32 %v0_100061d4, { 1, 0 }
  uselistorder i32 %v1_100061d0, { 1, 0 }
  uselistorder i32 %v0_100061c0, { 1, 2, 0 }
  uselistorder i32 %v2_10006180, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_100060dc, { 5, 4, 3, 2, 0, 1, 7, 6, 8 }
  uselistorder i32* %stack_var_-1916, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i16* %stack_var_-1926, { 1, 0 }
  uselistorder i32 %tmp204, { 1, 2, 0 }
  uselistorder i8 %tmp203, { 2, 1, 0 }
  uselistorder i16 %tmp202, { 2, 1, 0 }
  uselistorder i32 %tmp200, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 3, 4, 5, 6, 7, 0, 1, 2, 8, 11, 9, 10, 12, 13, 14, 16, 15, 17, 20, 21, 23, 22, 18, 19, 24, 25, 26, 27, 28, 34, 29, 30, 31, 32, 33, 35, 36, 61, 62, 37, 59, 60, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 68, 65, 66, 67, 69, 70, 71 }
  uselistorder i32* %r5.global-to-local, { 0, 7, 8, 9, 1, 6, 4, 2, 3, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 11, 10, 12, 3, 4, 5, 13, 14, 15, 16, 17, 8, 9, 6, 7, 18, 19, 20, 21, 22, 23, 25, 26, 24, 27, 29, 28, 31, 30, 33, 34, 35, 36, 37, 32, 2, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 51, 53, 55, 54, 57, 56, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 72, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r28.global-to-local, { 4, 5, 6, 7, 8, 0, 11, 9, 10, 12, 13, 14, 15, 24, 1, 2, 3, 22, 16, 17, 18, 19, 20, 21, 25, 23, 27, 26, 28, 29, 30 }
  uselistorder i32* %r27.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r14.global-to-local, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 8, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r10.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 3, 0, 17, 18, 19, 20, 1, 22, 23, 24, 21, 25, 32, 26, 27, 28, 29, 30, 31, 33, 34, 35 }
  uselistorder i32* %r0.global-to-local, { 10, 11, 12, 13, 0, 1, 2, 3, 4, 34, 5, 6, 7, 8, 9, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 31, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 47, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 17, 7, 8, 9, 14, 15, 10, 11, 12, 13, 18, 19, 20 }
  uselistorder i1* %cr7_lt.global-to-local, { 23, 24, 25, 26, 27, 28, 524, 29, 30, 523, 31, 32, 522, 33, 34, 35, 521, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 281, 49, 50, 51, 52, 53, 519, 54, 55, 56, 518, 57, 58, 59, 60, 61, 62, 63, 64, 520, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 271, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 262, 95, 96, 97, 98, 99, 100, 101, 252, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 242, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 209, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 202, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 517, 314, 315, 316, 317, 516, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 4, 5, 343, 344, 345, 346, 6, 7, 8, 9, 10, 21, 347, 22, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 1, 348, 349, 350, 3, 351, 353, 352, 2, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 370, 371, 372, 373, 375, 376, 377, 137, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 525, 526 }
  uselistorder i1* %cr7_eq.global-to-local, { 23, 24, 25, 26, 27, 28, 526, 29, 30, 525, 31, 32, 524, 33, 34, 35, 523, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 289, 49, 50, 51, 52, 53, 521, 54, 55, 56, 520, 57, 58, 59, 60, 61, 62, 63, 64, 522, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 274, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 265, 95, 96, 97, 98, 99, 100, 101, 256, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 244, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 213, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 205, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 191, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 519, 314, 315, 316, 317, 518, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 4, 5, 343, 344, 345, 346, 6, 7, 8, 9, 10, 21, 347, 22, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 1, 348, 349, 350, 3, 351, 353, 352, 2, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 371, 372, 373, 374, 376, 377, 378, 140, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 527, 528 }
  uselistorder i32 217, { 1, 2, 0 }
  uselistorder i32 235, { 2, 3, 0, 1 }
  uselistorder i32 253, { 1, 0, 2, 3 }
  uselistorder i32 118, { 1, 2, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 187, { 0, 2, 3, 1 }
  uselistorder i32 119, { 1, 2, 0, 3, 4 }
  uselistorder i32 232, { 1, 2, 3, 4, 0 }
  uselistorder i32 73, { 2, 3, 0, 1 }
  uselistorder i32 254, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 183, { 1, 2, 0 }
  uselistorder i32 60, { 0, 2, 3, 1, 4 }
  uselistorder i32 231, { 1, 2, 0 }
  uselistorder i32 94, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 182, { 1, 2, 0 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a180, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 -3, { 6, 7, 2, 3, 4, 5, 8, 9, 10, 11, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a108, { 5, 2, 1, 0, 4, 3 }
  uselistorder i16* @global_var_1001c680.102, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000a09c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_100097e0, { 1, 0 }
  uselistorder i32 115, { 1, 2, 0 }
  uselistorder i32 113, { 1, 3, 0, 2 }
  uselistorder i32 112, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 165, { 1, 2, 3, 4, 0 }
  uselistorder i32 59, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10 }
  uselistorder i32 ()* @function_10005de8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000a140, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000a1b8, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 16384, { 19, 28, 3, 20, 29, 2, 30, 0, 31, 1, 32, 23, 24, 22, 25, 26, 27, 21, 4, 33, 5, 34, 7, 35, 6, 9, 36, 8, 10, 37, 11, 38, 39, 12, 40, 41, 13, 42, 43, 44, 14, 16, 15, 18, 17 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 241, { 2, 3, 0, 1 }
  uselistorder i32 111, { 3, 4, 2, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 252, { 2, 3, 5, 6, 4, 7, 8, 0, 1 }
  uselistorder i32 154, { 3, 4, 2, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 240, { 4, 5, 2, 3, 0, 1 }
  uselistorder i32 222, { 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1 }
  uselistorder i32 211, { 2, 3, 0, 1 }
  uselistorder i32 116, { 2, 3, 0, 1 }
  uselistorder i32 58, { 3, 4, 2, 5, 6, 0, 1, 7, 8, 9, 10 }
  uselistorder i32 238, { 2, 3, 4, 0, 1 }
  uselistorder i32 200, { 2, 3, 4, 0, 1 }
  uselistorder i32 181, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 196, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 92, { 2, 3, 4, 0, 1 }
  uselistorder i32 61, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 85, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 62, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 93, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 71, { 2, 3, 0, 1 }
  uselistorder i32 251, { 8, 9, 4, 5, 10, 11, 12, 13, 6, 2, 7, 3, 0, 1 }
  uselistorder i32 237, { 5, 6, 7, 8, 4, 9, 10, 0, 1, 2, 3 }
  uselistorder i32 42, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 10 }
  uselistorder i32 201, { 2, 3, 0, 1 }
  uselistorder i32 170, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 220, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 142, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32 121, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 12, 13, 4, 14 }
  uselistorder i32 78, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 193, { 1, 2, 0, 3, 4 }
  uselistorder i32 219, { 2, 3, 4, 5, 0, 1, 6, 7 }
  uselistorder i32 89, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 212, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 35, { 2, 4, 5, 3, 0, 1, 6, 7 }
  uselistorder i32 98, { 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 206, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 184, { 3, 4, 5, 6, 7, 0, 1, 2, 8, 9 }
  uselistorder i32 91, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 51, { 1, 2, 0, 3, 4 }
  uselistorder i32 46, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 176, { 1, 2, 0, 3, 4 }
  uselistorder i32 151, { 3, 4, 5, 6, 0, 1, 2, 7, 8 }
  uselistorder i32 149, { 1, 2, 3, 4, 5, 6, 0, 7, 8 }
  uselistorder i32 74, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i32 70, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 63, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 5, 16, 17, 0, 1, 2, 3, 4, 18, 19 }
  uselistorder i32 108, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 216, { 4, 5, 3, 0, 1, 2, 6, 7, 8, 9 }
  uselistorder i32 66, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 9, 13 }
  uselistorder i32 185, { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16 }
  uselistorder i32 95, { 3, 8, 9, 4, 10, 11, 5, 6, 7, 12, 13, 0, 1, 2, 14, 15 }
  uselistorder i32 82, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 174, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 107, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9 }
  uselistorder i32 178, { 1, 2, 0, 3, 4 }
  uselistorder i32 188, { 3, 4, 5, 6, 0, 1, 2, 7, 8 }
  uselistorder i32 205, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9 }
  uselistorder i32 199, { 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14 }
  uselistorder i32 160, { 2, 0, 1, 3, 4 }
  uselistorder i32 158, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 13, 14 }
  uselistorder i32 153, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 144, { 2, 3, 4, 5, 0, 1, 6, 7 }
  uselistorder i32 143, { 2, 3, 4, 5, 6, 7, 8, 0, 1, 9, 10 }
  uselistorder i32 139, { 5, 6, 3, 4, 0, 1, 2, 7, 8 }
  uselistorder i32 138, { 3, 4, 5, 6, 7, 0, 1, 2, 8, 9 }
  uselistorder i32 134, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 131, { 2, 3, 4, 5, 0, 1, 6, 7 }
  uselistorder i32 198, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 11 }
  uselistorder i32 169, { 2, 0, 1, 3, 4 }
  uselistorder i32 172, { 5, 6, 4, 0, 1, 2, 3, 7, 8 }
  uselistorder i32 209, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 117, { 1, 2, 0, 3, 4 }
  uselistorder i32 207, { 7, 8, 6, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 13, 14 }
  uselistorder i32 204, { 1, 2, 0, 3, 4 }
  uselistorder i32 203, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 168, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32 167, { 3, 4, 5, 6, 7, 8, 0, 1, 2, 9, 10 }
  uselistorder i32 164, { 3, 4, 5, 6, 0, 1, 2, 7, 8 }
  uselistorder i32 155, { 3, 4, 5, 0, 1, 2, 6, 7 }
  uselistorder i32 157, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 152, { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 150, { 5, 6, 4, 7, 8, 9, 10, 0, 1, 2, 3, 11, 12 }
  uselistorder i32 148, { 1, 0, 2, 3 }
  uselistorder i32 147, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 192, { 12, 14, 15, 13, 11, 16, 17, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 18, 19 }
  uselistorder i32 (i32, i32, i32)* @function_10005ed4, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001c70e.118, { 2, 1, 0 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 0, 66, 1, 2, 3, 4, 6, 5, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 ()* @function_10005b08, { 73, 72, 71, 70, 69, 68, 13, 67, 66, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 4, 3, 2, 1, 0, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a1f8, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_100098e8, { 9, 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @function_1000905c, { 1, 0, 3, 2 }
  uselistorder i32 ()* @function_10009560, { 2, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_100077f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000765c, { 1, 0 }
  uselistorder label %dec_label_pc_100070ac, { 1, 0, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_10007084, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007070, { 1, 0 }
  uselistorder label %dec_label_pc_1000705c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007020, { 1, 0 }
  uselistorder label %dec_label_pc_10007020.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10006f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10006f94, { 1, 0 }
  uselistorder label %dec_label_pc_10006f4c, { 1, 0 }
  uselistorder label %dec_label_pc_10006f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10006e70, { 1, 0 }
  uselistorder label %dec_label_pc_10006d84, { 5, 6, 7, 3, 0, 4, 1, 2 }
  uselistorder label %dec_label_pc_10006d64, { 1, 0 }
  uselistorder label %dec_label_pc_10006d30, { 1, 0 }
  uselistorder label %dec_label_pc_10006bd8, { 3, 4, 0, 5, 2, 6, 1 }
  uselistorder label %dec_label_pc_10006b84, { 1, 0 }
  uselistorder label %dec_label_pc_10006b58.dec_label_pc_10006b58_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006b3c.dec_label_pc_10006b3c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006b2c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006a90, { 1, 0 }
  uselistorder label %dec_label_pc_10006984, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10006978, { 1, 0 }
  uselistorder label %dec_label_pc_100068c8, { 0, 140, 1, 141, 2, 142, 3, 143, 226, 4, 144, 5, 145, 6, 7, 231, 8, 9, 146, 228, 10, 227, 11, 12, 13, 14, 15, 16, 147, 116, 232, 17, 18, 148, 117, 19, 149, 20, 150, 118, 233, 21, 151, 119, 234, 22, 152, 23, 153, 24, 154, 25, 155, 26, 156, 120, 235, 27, 157, 28, 158, 29, 159, 30, 160, 31, 161, 32, 162, 33, 163, 236, 237, 34, 164, 35, 165, 36, 166, 37, 167, 38, 168, 169, 39, 238, 40, 170, 41, 171, 42, 172, 43, 173, 44, 45, 174, 121, 46, 47, 48, 175, 49, 176, 50, 177, 122, 239, 51, 178, 52, 179, 53, 54, 55, 180, 56, 181, 57, 58, 182, 59, 183, 60, 184, 61, 185, 123, 62, 63, 186, 124, 64, 187, 125, 65, 188, 66, 189, 67, 190, 68, 191, 69, 192, 126, 70, 193, 127, 71, 194, 72, 195, 73, 196, 74, 197, 75, 198, 76, 199, 128, 77, 200, 129, 78, 201, 79, 202, 131, 80, 203, 130, 81, 82, 204, 132, 83, 205, 133, 84, 85, 86, 87, 88, 89, 90, 91, 206, 134, 92, 207, 135, 93, 208, 136, 94, 209, 95, 210, 96, 211, 229, 97, 212, 230, 98, 213, 137, 99, 214, 138, 100, 215, 139, 101, 216, 102, 217, 103, 218, 104, 219, 105, 220, 106, 107, 108, 221, 109, 110, 111, 222, 112, 223, 115, 240, 113, 224, 114, 225 }
  uselistorder label %dec_label_pc_10006534, { 0, 11, 12, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 2, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 3, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 4, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 5, 150, 151, 152, 6, 153, 7, 154, 155, 156, 8, 9, 157, 158, 159, 160, 10, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209 }
  uselistorder label %dec_label_pc_10006250, { 1, 2, 0 }
}

define i32 @function_1000872c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1000872c:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000872c = icmp eq i32* %arg2, null
  %v1_10008734 = mul i32 %arg1, 8
  store i32 %v1_10008734, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c748.166 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_1000872c, label %dec_label_pc_1000874c, label %dec_label_pc_10008744

dec_label_pc_10008744:                            ; preds = %dec_label_pc_1000872c
  %v1_10008744 = add i32 %v1_10008734, add (i32 ptrtoint (i32* @global_var_1001c748.166 to i32), i32 4)
  %v2_10008744 = inttoptr i32 %v1_10008744 to i16*
  %v3_10008744 = load i16, i16* %v2_10008744, align 4
  %v4_10008744 = zext i16 %v3_10008744 to i32
  store i32 %v4_10008744, i32* %arg2, align 4
  %v0_1000874c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000874c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000874c

dec_label_pc_1000874c:                            ; preds = %dec_label_pc_1000872c, %dec_label_pc_10008744
  %v1_1000874c = phi i32 [ ptrtoint (i32* @global_var_1001c748.166 to i32), %dec_label_pc_1000872c ], [ %v1_1000874c.pre, %dec_label_pc_10008744 ]
  %v0_1000874c = phi i32 [ %v1_10008734, %dec_label_pc_1000872c ], [ %v0_1000874c.pre, %dec_label_pc_10008744 ]
  %v2_1000874c = add i32 %v0_1000874c, %v1_1000874c
  %v3_1000874c = inttoptr i32 %v2_1000874c to i32*
  %v4_1000874c = load i32, i32* %v3_1000874c, align 4
  store i32 %v4_1000874c, i32* %r3.global-to-local, align 4
  ret i32 %v4_1000874c

; uselistorder directives
  uselistorder i32 %v1_10008734, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000874c, { 1, 0 }
}

define i32 @function_10008754(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008754:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008758 = mul i32 %arg1, 8
  %v2_10008760 = add i32 %v1_10008758, ptrtoint (i32* @global_var_1001c748.166 to i32)
  %v1_10008768 = add i32 %v1_10008758, add (i32 ptrtoint (i32* @global_var_1001c748.166 to i32), i32 4)
  %v2_10008768 = inttoptr i32 %v1_10008768 to i16*
  %v3_10008768 = load i16, i16* %v2_10008768, align 4
  %v3_1000876c = icmp eq i16 %v3_10008768, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000876c, i1* %cr7_eq.global-to-local, align 1
  %v3_10008770 = load i32, i32* @global_var_1001c644.167, align 4
  %v1_10008774 = udiv i32 %v3_10008770, 16777216
  store i32 %v1_10008774, i32* @r5, align 4
  %v1_10008778 = urem i32 %v3_10008770, 256
  store i32 %v1_10008778, i32* %r6.global-to-local, align 4
  %v1_1000877c = call i32 @__asm_rlwinm(i32 %v3_10008770, i32 24, i32 24, i32 31)
  %v1_10008780 = call i32 @__asm_rlwinm(i32 %v3_10008770, i32 16, i32 24, i32 31)
  %v0_10008784 = load i32, i32* @lr, align 4
  %v1_10008784 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008784 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008784 = or i1 %v1_10008784, %v2_10008784
  call void @__pseudo_cond_branch(i1 %v3_10008784, i32 %v0_10008784)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000878c = inttoptr i32 %v2_10008760 to i32*
  br label %dec_label_pc_1000878c

dec_label_pc_1000878c:                            ; preds = %dec_label_pc_1000878c, %dec_label_pc_10008754
  %v1_10008798 = phi i32 [ %v1_100087cc, %dec_label_pc_1000878c ], [ 0, %dec_label_pc_10008754 ]
  %v2_1000878c = load i32, i32* %v1_1000878c, align 4
  %v2_10008790 = add i32 %v2_1000878c, %v1_10008798
  %v3_10008790 = inttoptr i32 %v2_10008790 to i8*
  %v4_10008790 = load i8, i8* %v3_10008790, align 1
  %v5_10008790 = zext i8 %v4_10008790 to i32
  %v0_10008794 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008794 = xor i32 %v0_10008794, %v5_10008790
  %v3_10008798 = trunc i32 %v2_10008794 to i8
  store i8 %v3_10008798, i8* %v3_10008790, align 1
  %v2_1000879c = load i32, i32* %v1_1000878c, align 4
  %v0_100087a0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100087a0 = add i32 %v0_100087a0, %v2_1000879c
  %v3_100087a0 = inttoptr i32 %v2_100087a0 to i8*
  %v4_100087a0 = load i8, i8* %v3_100087a0, align 1
  %v5_100087a0 = zext i8 %v4_100087a0 to i32
  %v2_100087a4 = xor i32 %v5_100087a0, %v1_1000877c
  %v3_100087a8 = trunc i32 %v2_100087a4 to i8
  store i8 %v3_100087a8, i8* %v3_100087a0, align 1
  %v2_100087ac = load i32, i32* %v1_1000878c, align 4
  %v0_100087b0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100087b0 = add i32 %v0_100087b0, %v2_100087ac
  %v3_100087b0 = inttoptr i32 %v2_100087b0 to i8*
  %v4_100087b0 = load i8, i8* %v3_100087b0, align 1
  %v5_100087b0 = zext i8 %v4_100087b0 to i32
  %v2_100087b4 = xor i32 %v5_100087b0, %v1_10008780
  %v3_100087b8 = trunc i32 %v2_100087b4 to i8
  store i8 %v3_100087b8, i8* %v3_100087b0, align 1
  %v2_100087bc = load i32, i32* %v1_1000878c, align 4
  %v0_100087c0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100087c0 = add i32 %v0_100087c0, %v2_100087bc
  %v3_100087c0 = inttoptr i32 %v2_100087c0 to i8*
  %v4_100087c0 = load i8, i8* %v3_100087c0, align 1
  %v5_100087c0 = zext i8 %v4_100087c0 to i32
  %v0_100087c4 = load i32, i32* @r5, align 4
  %v2_100087c4 = xor i32 %v0_100087c4, %v5_100087c0
  %v3_100087c8 = trunc i32 %v2_100087c4 to i8
  store i8 %v3_100087c8, i8* %v3_100087c0, align 1
  %v0_100087cc = load i32, i32* %r10.global-to-local, align 4
  %v1_100087cc = add i32 %v0_100087cc, 1
  store i32 %v1_100087cc, i32* %r10.global-to-local, align 4
  %v3_100087d0 = load i16, i16* %v2_10008768, align 4
  %v4_100087d0 = zext i16 %v3_100087d0 to i32
  %v2_100087d4 = icmp slt i32 %v4_100087d0, %v1_100087cc
  %v3_100087d4 = icmp sgt i32 %v4_100087d0, %v1_100087cc
  %v4_100087d4 = icmp eq i32 %v4_100087d0, %v1_100087cc
  store i1 %v2_100087d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100087d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100087d4, label %dec_label_pc_1000878c, label %dec_label_pc_100087dc

dec_label_pc_100087dc:                            ; preds = %dec_label_pc_1000878c
  ret i32 %v2_10008760

; uselistorder directives
  uselistorder i32 %v4_100087d0, { 2, 1, 0 }
  uselistorder i32 %v1_100087cc, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008770, { 2, 3, 1, 0 }
  uselistorder i32 %v2_10008760, { 1, 0 }
  uselistorder i32 %v1_10008758, { 1, 0 }
}

define i32 @function_100087e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100087e0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100087e4 = mul i32 %arg1, 8
  %v2_100087ec = add i32 %v1_100087e4, ptrtoint (i32* @global_var_1001c748.166 to i32)
  %v1_100087f4 = add i32 %v1_100087e4, add (i32 ptrtoint (i32* @global_var_1001c748.166 to i32), i32 4)
  %v2_100087f4 = inttoptr i32 %v1_100087f4 to i16*
  %v3_100087f4 = load i16, i16* %v2_100087f4, align 4
  %v3_100087f8 = icmp eq i16 %v3_100087f4, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087f8, i1* %cr7_eq.global-to-local, align 1
  %v3_100087fc = load i32, i32* @global_var_1001c644.167, align 4
  %v1_10008800 = udiv i32 %v3_100087fc, 16777216
  store i32 %v1_10008800, i32* @r5, align 4
  %v1_10008804 = urem i32 %v3_100087fc, 256
  store i32 %v1_10008804, i32* %r6.global-to-local, align 4
  %v1_10008808 = call i32 @__asm_rlwinm(i32 %v3_100087fc, i32 24, i32 24, i32 31)
  %v1_1000880c = call i32 @__asm_rlwinm(i32 %v3_100087fc, i32 16, i32 24, i32 31)
  %v0_10008810 = load i32, i32* @lr, align 4
  %v1_10008810 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008810 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008810 = or i1 %v1_10008810, %v2_10008810
  call void @__pseudo_cond_branch(i1 %v3_10008810, i32 %v0_10008810)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008818 = inttoptr i32 %v2_100087ec to i32*
  br label %dec_label_pc_10008818

dec_label_pc_10008818:                            ; preds = %dec_label_pc_10008818, %dec_label_pc_100087e0
  %v1_10008824 = phi i32 [ %v1_10008858, %dec_label_pc_10008818 ], [ 0, %dec_label_pc_100087e0 ]
  %v2_10008818 = load i32, i32* %v1_10008818, align 4
  %v2_1000881c = add i32 %v2_10008818, %v1_10008824
  %v3_1000881c = inttoptr i32 %v2_1000881c to i8*
  %v4_1000881c = load i8, i8* %v3_1000881c, align 1
  %v5_1000881c = zext i8 %v4_1000881c to i32
  %v0_10008820 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008820 = xor i32 %v0_10008820, %v5_1000881c
  %v3_10008824 = trunc i32 %v2_10008820 to i8
  store i8 %v3_10008824, i8* %v3_1000881c, align 1
  %v2_10008828 = load i32, i32* %v1_10008818, align 4
  %v0_1000882c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000882c = add i32 %v0_1000882c, %v2_10008828
  %v3_1000882c = inttoptr i32 %v2_1000882c to i8*
  %v4_1000882c = load i8, i8* %v3_1000882c, align 1
  %v5_1000882c = zext i8 %v4_1000882c to i32
  %v2_10008830 = xor i32 %v5_1000882c, %v1_10008808
  %v3_10008834 = trunc i32 %v2_10008830 to i8
  store i8 %v3_10008834, i8* %v3_1000882c, align 1
  %v2_10008838 = load i32, i32* %v1_10008818, align 4
  %v0_1000883c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000883c = add i32 %v0_1000883c, %v2_10008838
  %v3_1000883c = inttoptr i32 %v2_1000883c to i8*
  %v4_1000883c = load i8, i8* %v3_1000883c, align 1
  %v5_1000883c = zext i8 %v4_1000883c to i32
  %v2_10008840 = xor i32 %v5_1000883c, %v1_1000880c
  %v3_10008844 = trunc i32 %v2_10008840 to i8
  store i8 %v3_10008844, i8* %v3_1000883c, align 1
  %v2_10008848 = load i32, i32* %v1_10008818, align 4
  %v0_1000884c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000884c = add i32 %v0_1000884c, %v2_10008848
  %v3_1000884c = inttoptr i32 %v2_1000884c to i8*
  %v4_1000884c = load i8, i8* %v3_1000884c, align 1
  %v5_1000884c = zext i8 %v4_1000884c to i32
  %v0_10008850 = load i32, i32* @r5, align 4
  %v2_10008850 = xor i32 %v0_10008850, %v5_1000884c
  %v3_10008854 = trunc i32 %v2_10008850 to i8
  store i8 %v3_10008854, i8* %v3_1000884c, align 1
  %v0_10008858 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008858 = add i32 %v0_10008858, 1
  store i32 %v1_10008858, i32* %r10.global-to-local, align 4
  %v3_1000885c = load i16, i16* %v2_100087f4, align 4
  %v4_1000885c = zext i16 %v3_1000885c to i32
  %v2_10008860 = icmp slt i32 %v4_1000885c, %v1_10008858
  %v3_10008860 = icmp sgt i32 %v4_1000885c, %v1_10008858
  %v4_10008860 = icmp eq i32 %v4_1000885c, %v1_10008858
  store i1 %v2_10008860, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008860, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008860, label %dec_label_pc_10008818, label %dec_label_pc_10008868

dec_label_pc_10008868:                            ; preds = %dec_label_pc_10008818
  ret i32 %v2_100087ec

; uselistorder directives
  uselistorder i32 %v4_1000885c, { 2, 1, 0 }
  uselistorder i32 %v1_10008858, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_100087fc, { 2, 3, 1, 0 }
  uselistorder i32 %v2_100087ec, { 1, 0 }
  uselistorder i32 %v1_100087e4, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001c748.166 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c748.166 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_1000886c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000886c:
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 5, i32* %r22.global-to-local, align 4
  store i32 6, i32* %r23.global-to-local, align 4
  store i32 16, i32* %r24.global-to-local, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  store i32 7, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268470464, i32* @lr, align 4
  %v0_100088bc = call i32 @function_1000a438()
  store i32 %v0_100088bc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100088dc.169 to i32), i32* @lr, align 4
  %v4_100088d8 = call i32 @function_10008ddc(i32 ptrtoint ([3 x i8]* @global_var_1000c030.168 to i32), i32 2, i32 2)
  store i32 2, i32* @r3, align 4
  %v0_100088e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100088e0, i32* @global_var_1001c750.170, align 4
  %v0_100088e4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100088e4 = trunc i32 %v0_100088e4 to i16
  store i16 %v1_100088e4, i16* bitcast (i32* @global_var_1001c754.171 to i16*), align 4
  store i32 268470508, i32* @lr, align 4
  %v0_100088e8 = call i32 @function_1000a438()
  store i32 %v0_100088e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008900.173 to i32), i32* @lr, align 4
  %v3_100088fc = call i32 @function_10008ddc(i32 ptrtoint (i32* @global_var_1000c034.172 to i32), i32 2, i32 2)
  store i32 29, i32* @r3, align 4
  %v0_10008904 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008904, i32* @global_var_1001c758.174, align 4
  %v0_10008908 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008908 = trunc i32 %v0_10008908 to i16
  store i16 %v1_10008908, i16* bitcast (i32* @global_var_1001c75c.175 to i16*), align 4
  store i32 268470544, i32* @lr, align 4
  %v0_1000890c = call i32 @function_1000a438()
  store i32 %v0_1000890c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008924.177 to i32), i32* @lr, align 4
  %v3_10008920 = call i32 @function_10008ddc(i32 ptrtoint (i32* @global_var_1000c19c.176 to i32), i32 29, i32 29)
  store i32 6, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001c764.178 to i16*), align 4
  %v0_10008930 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008930, i32* @global_var_1001c760.179, align 4
  store i32 268470584, i32* @lr, align 4
  %v0_10008934 = call i32 @function_1000a438()
  store i32 %v0_10008934, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000894c.181 to i32), i32* @lr, align 4
  %v4_10008948 = call i32 @function_10008ddc(i32 ptrtoint ([7 x i8]* @global_var_1000c038.180 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10008950 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008950, i32* @global_var_1001c768.182, align 4
  store i32 8, i32* %r27.global-to-local, align 4
  %v0_10008958 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008958 = trunc i32 %v0_10008958 to i16
  store i16 %v1_10008958, i16* bitcast (i32* @global_var_1001c76c.183 to i16*), align 4
  store i32 268470624, i32* @lr, align 4
  %v0_1000895c = call i32 @function_1000a438()
  store i32 %v0_1000895c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008974.185 to i32), i32* @lr, align 4
  %v4_10008970 = call i32 @function_10008ddc(i32 ptrtoint ([8 x i8]* @global_var_1000c040.184 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10008978 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008978, i32* @global_var_1001c770.186, align 4
  %v0_1000897c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000897c = trunc i32 %v0_1000897c to i16
  store i16 %v1_1000897c, i16* bitcast (i32* @global_var_1001c774.187 to i16*), align 4
  store i32 268470660, i32* @lr, align 4
  %v0_10008980 = call i32 @function_1000a438()
  store i32 %v0_10008980, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008998.189 to i32), i32* @lr, align 4
  %v4_10008994 = call i32 @function_10008ddc(i32 ptrtoint ([8 x i8]* @global_var_1000c048.188 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_1000899c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000899c, i32* @global_var_1001c778.190, align 4
  %v0_100089a0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100089a0 = trunc i32 %v0_100089a0 to i16
  store i16 %v1_100089a0, i16* bitcast (i32* @global_var_1001c77c.191 to i16*), align 4
  store i32 268470696, i32* @lr, align 4
  %v0_100089a4 = call i32 @function_1000a438()
  store i32 %v0_100089a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100089bc.193 to i32), i32* @lr, align 4
  %v4_100089b8 = call i32 @function_10008ddc(i32 ptrtoint ([4 x i8]* @global_var_1000c050.192 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001c784.194 to i16*), align 4
  %v0_100089c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100089c8, i32* @global_var_1001c780.195, align 4
  store i32 268470736, i32* @lr, align 4
  %v0_100089cc = call i32 @function_1000a438()
  store i32 %v0_100089cc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100089e4.197 to i32), i32* @lr, align 4
  %v3_100089e0 = call i32 @function_10008ddc(i32 ptrtoint (i32* @global_var_1000c054.196 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_100089e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100089e8, i32* @global_var_1001c788.198, align 4
  %v0_100089ec = load i32, i32* %r21.global-to-local, align 4
  %v1_100089ec = trunc i32 %v0_100089ec to i16
  store i16 %v1_100089ec, i16* bitcast (i32* @global_var_1001c78c.199 to i16*), align 4
  store i32 268470772, i32* @lr, align 4
  %v0_100089f0 = call i32 @function_1000a438()
  store i32 %v0_100089f0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008a08.201 to i32), i32* @lr, align 4
  %v3_10008a04 = call i32 @function_10008ddc(i32 ptrtoint (i32* @global_var_1000c068.200 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001c794.202 to i16*), align 4
  %v0_10008a14 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008a14, i32* @global_var_1001c790.203, align 4
  store i32 268470812, i32* @lr, align 4
  %v0_10008a18 = call i32 @function_1000a438()
  store i32 %v0_10008a18, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008a30.205 to i32), i32* @lr, align 4
  %v4_10008a2c = call i32 @function_10008ddc(i32 ptrtoint ([10 x i8]* @global_var_1000c084.204 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001c79c.206 to i16*), align 4
  %v0_10008a3c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008a3c, i32* @global_var_1001c798.207, align 4
  store i32 268470852, i32* @lr, align 4
  %v0_10008a40 = call i32 @function_1000a438()
  store i32 %v0_10008a40, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008a58.209 to i32), i32* @lr, align 4
  %v4_10008a54 = call i32 @function_10008ddc(i32 ptrtoint ([17 x i8]* @global_var_1000c090.208 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10008a5c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008a5c, i32* @global_var_1001c7a0.210, align 4
  %v0_10008a60 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008a60 = trunc i32 %v0_10008a60 to i16
  store i16 %v1_10008a60, i16* bitcast (i32* @global_var_1001c7a4.211 to i16*), align 4
  store i32 268470888, i32* @lr, align 4
  %v0_10008a64 = call i32 @function_1000a438()
  store i32 %v0_10008a64, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008a7c.213 to i32), i32* @lr, align 4
  %v4_10008a78 = call i32 @function_10008ddc(i32 ptrtoint ([23 x i8]* @global_var_1000c0a4.212 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001c7ac.214 to i16*), align 4
  %v0_10008a88 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008a88, i32* @global_var_1001c7a8.215, align 4
  store i32 268470928, i32* @lr, align 4
  %v0_10008a8c = call i32 @function_1000a438()
  store i32 %v0_10008a8c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008aa4.217 to i32), i32* @lr, align 4
  %v4_10008aa0 = call i32 @function_10008ddc(i32 ptrtoint ([8 x i8]* @global_var_1000c0bc.216 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10008aa8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008aa8, i32* @global_var_1001c7b0.218, align 4
  %v0_10008aac = load i32, i32* %r26.global-to-local, align 4
  %v1_10008aac = trunc i32 %v0_10008aac to i16
  store i16 %v1_10008aac, i16* bitcast (i32* @global_var_1001c7b4.219 to i16*), align 4
  store i32 268470964, i32* @lr, align 4
  %v0_10008ab0 = call i32 @function_1000a438()
  store i32 %v0_10008ab0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ac8.221 to i32), i32* @lr, align 4
  %v4_10008ac4 = call i32 @function_10008ddc(i32 ptrtoint ([6 x i8]* @global_var_1000c0c4.220 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_10008acc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008acc, i32* @global_var_1001c7b8.222, align 4
  %v0_10008ad0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008ad0 = trunc i32 %v0_10008ad0 to i16
  store i16 %v1_10008ad0, i16* bitcast (i32* @global_var_1001c7bc.223 to i16*), align 4
  store i32 268471000, i32* @lr, align 4
  %v0_10008ad4 = call i32 @function_1000a438()
  store i32 %v0_10008ad4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008aec.225 to i32), i32* @lr, align 4
  %v4_10008ae8 = call i32 @function_10008ddc(i32 ptrtoint ([5 x i8]* @global_var_1000c0cc.224 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001c7c4.226 to i16*), align 4
  %v0_10008af8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008af8, i32* @global_var_1001c7c0.227, align 4
  store i32 268471040, i32* @lr, align 4
  %v0_10008afc = call i32 @function_1000a438()
  store i32 %v0_10008afc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b14.229 to i32), i32* @lr, align 4
  %v4_10008b10 = call i32 @function_10008ddc(i32 ptrtoint ([7 x i8]* @global_var_1000c0d4.228 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10008b18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008b18, i32* @global_var_1001c7c8.230, align 4
  %v0_10008b1c = load i32, i32* %r23.global-to-local, align 4
  %v1_10008b1c = trunc i32 %v0_10008b1c to i16
  store i16 %v1_10008b1c, i16* bitcast (i32* @global_var_1001c7cc.231 to i16*), align 4
  store i32 268471076, i32* @lr, align 4
  %v0_10008b20 = call i32 @function_1000a438()
  store i32 %v0_10008b20, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b38.233 to i32), i32* @lr, align 4
  %v4_10008b34 = call i32 @function_10008ddc(i32 ptrtoint ([15 x i8]* @global_var_1000c0dc.232 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_10008b3c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008b3c, i32* @global_var_1001c7d0.234, align 4
  %v0_10008b40 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008b40 = trunc i32 %v0_10008b40 to i16
  store i16 %v1_10008b40, i16* bitcast (i32* @global_var_1001c7d4.235 to i16*), align 4
  store i32 268471112, i32* @lr, align 4
  %v0_10008b44 = call i32 @function_1000a438()
  store i32 %v0_10008b44, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b5c.237 to i32), i32* @lr, align 4
  %v4_10008b58 = call i32 @function_10008ddc(i32 ptrtoint ([9 x i8]* @global_var_1000c0ec.236 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10008b60 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008b60, i32* @global_var_1001c830.238, align 4
  %v0_10008b64 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008b64 = trunc i32 %v0_10008b64 to i16
  store i16 %v1_10008b64, i16* bitcast (i32* @global_var_1001c834.239 to i16*), align 4
  store i32 268471148, i32* @lr, align 4
  %v0_10008b68 = call i32 @function_1000a438()
  store i32 %v0_10008b68, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b80.241 to i32), i32* @lr, align 4
  %v4_10008b7c = call i32 @function_10008ddc(i32 ptrtoint ([8 x i8]* @global_var_1000c0f8.240 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10008b84 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008b84, i32* @global_var_1001c838.242, align 4
  %v0_10008b88 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008b88 = trunc i32 %v0_10008b88 to i16
  store i16 %v1_10008b88, i16* bitcast (i32* @global_var_1001c83c.243 to i16*), align 4
  store i32 268471184, i32* @lr, align 4
  %v0_10008b8c = call i32 @function_1000a438()
  store i32 %v0_10008b8c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ba4.245 to i32), i32* @lr, align 4
  %v4_10008ba0 = call i32 @function_10008ddc(i32 ptrtoint ([17 x i8]* @global_var_1000c100.244 to i32), i32 16, i32 16)
  store i32 8, i32* @r3, align 4
  %v0_10008ba8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ba8, i32* @global_var_1001c7d8.246, align 4
  %v0_10008bac = load i32, i32* %r24.global-to-local, align 4
  %v1_10008bac = trunc i32 %v0_10008bac to i16
  store i16 %v1_10008bac, i16* bitcast (i32* @global_var_1001c7dc.247 to i16*), align 4
  store i32 268471220, i32* @lr, align 4
  %v0_10008bb0 = call i32 @function_1000a438()
  store i32 %v0_10008bb0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008bc8.249 to i32), i32* @lr, align 4
  %v4_10008bc4 = call i32 @function_10008ddc(i32 ptrtoint ([9 x i8]* @global_var_1000c114.248 to i32), i32 8, i32 8)
  store i32 21, i32* @r3, align 4
  %v0_10008bcc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008bcc, i32* @global_var_1001c7e0.250, align 4
  %v0_10008bd0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008bd0 = trunc i32 %v0_10008bd0 to i16
  store i16 %v1_10008bd0, i16* bitcast (i32* @global_var_1001c7e4.251 to i16*), align 4
  store i32 268471256, i32* @lr, align 4
  %v0_10008bd4 = call i32 @function_1000a438()
  store i32 %v0_10008bd4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008bec.253 to i32), i32* @lr, align 4
  %v3_10008be8 = call i32 @function_10008ddc(i32 ptrtoint (i32* @global_var_1000c1bc.252 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001c7ec.254 to i16*), align 4
  %v0_10008bf8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008bf8, i32* @global_var_1001c7e8.255, align 4
  store i32 268471296, i32* @lr, align 4
  %v0_10008bfc = call i32 @function_1000a438()
  store i32 %v0_10008bfc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008c14.257 to i32), i32* @lr, align 4
  %v4_10008c10 = call i32 @function_10008ddc(i32 ptrtoint ([18 x i8]* @global_var_1000c120.256 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001c7f4.258 to i16*), align 4
  %v0_10008c20 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c20, i32* @global_var_1001c7f0.259, align 4
  store i32 268471336, i32* @lr, align 4
  %v0_10008c24 = call i32 @function_1000a438()
  store i32 %v0_10008c24, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008c3c.261 to i32), i32* @lr, align 4
  %v4_10008c38 = call i32 @function_10008ddc(i32 ptrtoint ([13 x i8]* @global_var_1000c134.260 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001c7fc.262 to i16*), align 4
  %v0_10008c48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c48, i32* @global_var_1001c7f8.263, align 4
  store i32 268471376, i32* @lr, align 4
  %v0_10008c4c = call i32 @function_1000a438()
  store i32 %v0_10008c4c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c64.265 to i32), i32* @lr, align 4
  %v4_10008c60 = call i32 @function_10008ddc(i32 ptrtoint ([15 x i8]* @global_var_1000c144.264 to i32), i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10008c68 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c68, i32* @global_var_1001c800.266, align 4
  %v0_10008c6c = load i32, i32* %r25.global-to-local, align 4
  %v1_10008c6c = trunc i32 %v0_10008c6c to i16
  store i16 %v1_10008c6c, i16* bitcast (i32* @global_var_1001c804.267 to i16*), align 4
  store i32 268471412, i32* @lr, align 4
  %v0_10008c70 = call i32 @function_1000a438()
  store i32 %v0_10008c70, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c88.269 to i32), i32* @lr, align 4
  %v4_10008c84 = call i32 @function_10008ddc(i32 ptrtoint ([20 x i8]* @global_var_1000c154.268 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10008c8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c8c, i32* @global_var_1001c808.270, align 4
  %v0_10008c90 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008c90 = trunc i32 %v0_10008c90 to i16
  store i16 %v1_10008c90, i16* bitcast (i32* @global_var_1001c80c.271 to i16*), align 4
  store i32 268471448, i32* @lr, align 4
  %v0_10008c94 = call i32 @function_1000a438()
  store i32 %v0_10008c94, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008cac.273 to i32), i32* @lr, align 4
  %v4_10008ca8 = call i32 @function_10008ddc(i32 ptrtoint ([9 x i8]* @global_var_1000c168.272 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_10008cb0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cb0, i32* @global_var_1001c810.274, align 4
  %v0_10008cb4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008cb4 = trunc i32 %v0_10008cb4 to i16
  store i16 %v1_10008cb4, i16* bitcast (i32* @global_var_1001c814.275 to i16*), align 4
  store i32 268471484, i32* @lr, align 4
  %v0_10008cb8 = call i32 @function_1000a438()
  store i32 %v0_10008cb8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008cd0.277 to i32), i32* @lr, align 4
  %v4_10008ccc = call i32 @function_10008ddc(i32 ptrtoint ([6 x i8]* @global_var_1000c174.276 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10008cd4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cd4, i32* @global_var_1001c818.278, align 4
  %v0_10008cd8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008cd8 = trunc i32 %v0_10008cd8 to i16
  store i16 %v1_10008cd8, i16* bitcast (i32* @global_var_1001c81c.279 to i16*), align 4
  store i32 268471520, i32* @lr, align 4
  %v0_10008cdc = call i32 @function_1000a438()
  store i32 %v0_10008cdc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008cf4.281 to i32), i32* @lr, align 4
  %v4_10008cf0 = call i32 @function_10008ddc(i32 ptrtoint ([7 x i8]* @global_var_1000c17c.280 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_10008cf8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cf8, i32* @global_var_1001c820.282, align 4
  %v0_10008cfc = load i32, i32* %r23.global-to-local, align 4
  %v1_10008cfc = trunc i32 %v0_10008cfc to i16
  store i16 %v1_10008cfc, i16* bitcast (i32* @global_var_1001c824.283 to i16*), align 4
  store i32 268471556, i32* @lr, align 4
  %v0_10008d00 = call i32 @function_1000a438()
  store i32 %v0_10008d00, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008d18.285 to i32), i32* @lr, align 4
  %v4_10008d14 = call i32 @function_10008ddc(i32 ptrtoint ([24 x i8]* @global_var_1000c184.284 to i32), i32 23, i32 23)
  store i16 23, i16* bitcast (i32* @global_var_1001c82c.286 to i16*), align 4
  %v0_10008d24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d24, i32* @global_var_1001c828.287, align 4
  ret i32 %v4_10008d14

; uselistorder directives
  uselistorder i16 23, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32 21, { 1, 2, 10, 11, 12, 3, 4, 0, 5, 6, 13, 14, 15, 16, 17, 18, 7, 19, 8, 20, 9, 21 }
  uselistorder i32 (i32, i32, i32)* @function_10008ddc, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10008d58(i8* %arg1) local_unnamed_addr {
dec_label_pc_10008d58:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10008d58 = load i8, i8* %arg1, align 1
  %v3_10008d64 = icmp eq i8 %v3_10008d58, 0
  %v0_10008d68 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008d64, i32 %v0_10008d68)
  br label %dec_label_pc_10008d6c

dec_label_pc_10008d6c:                            ; preds = %dec_label_pc_10008d6c, %dec_label_pc_10008d58
  %v0_10008d6c = phi i32 [ %v1_10008d6c, %dec_label_pc_10008d6c ], [ 0, %dec_label_pc_10008d58 ]
  %v1_10008d6c = add i32 %v0_10008d6c, 1
  %v2_10008d70 = add i32 %v1_10008d6c, %tmp
  %v3_10008d70 = inttoptr i32 %v2_10008d70 to i8*
  %v4_10008d70 = load i8, i8* %v3_10008d70, align 1
  %v3_10008d74 = icmp eq i8 %v4_10008d70, 0
  br i1 %v3_10008d74, label %dec_label_pc_10008d7c, label %dec_label_pc_10008d6c

dec_label_pc_10008d7c:                            ; preds = %dec_label_pc_10008d6c
  ret i32 %v1_10008d6c
}

define i32 @function_10008d80(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008d80:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008d80 = load i8, i8* %arg1, align 1
  %v3_10008d84 = icmp eq i8 %v2_10008d80, 0
  br i1 %v3_10008d84, label %dec_label_pc_10008dd0, label %dec_label_pc_10008d8c

dec_label_pc_10008d8c:                            ; preds = %dec_label_pc_10008d80
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008d90

dec_label_pc_10008d90:                            ; preds = %dec_label_pc_10008d90, %dec_label_pc_10008d8c
  %v0_10008d90 = phi i32 [ %v1_10008d90, %dec_label_pc_10008d90 ], [ 0, %dec_label_pc_10008d8c ]
  %v1_10008d90 = add i32 %v0_10008d90, 1
  store i32 %v1_10008d90, i32* %r9.global-to-local, align 4
  %v2_10008d94 = add i32 %v1_10008d90, %tmp
  %v3_10008d94 = inttoptr i32 %v2_10008d94 to i8*
  %v4_10008d94 = load i8, i8* %v3_10008d94, align 1
  %v3_10008d98 = icmp eq i8 %v4_10008d94, 0
  br i1 %v3_10008d98, label %dec_label_pc_10008da0, label %dec_label_pc_10008d90

dec_label_pc_10008da0:                            ; preds = %dec_label_pc_10008d90
  %v3_10008da0 = icmp eq i32 %v1_10008d90, -1
  br i1 %v3_10008da0, label %dec_label_pc_10008dc8, label %dec_label_pc_10008da8

dec_label_pc_10008da8:                            ; preds = %dec_label_pc_10008da0
  %phitmp = add i32 %v0_10008d90, 2
  br label %dec_label_pc_10008dac

dec_label_pc_10008dac:                            ; preds = %dec_label_pc_10008dd0, %dec_label_pc_10008da8
  %v0_10008dac = phi i32 [ 1, %dec_label_pc_10008dd0 ], [ %phitmp, %dec_label_pc_10008da8 ]
  store i32 %v0_10008dac, i32* %ctr.global-to-local, align 4
  %v2_10008dbc.pre = load i32, i32* @r3, align 4
  %v2_10008db48 = load i8, i8* %arg1, align 1
  %v1_10008db810 = add i32 %tmp, 1
  store i32 %v1_10008db810, i32* %r4.global-to-local, align 4
  %v3_10008dbc11 = inttoptr i32 %v2_10008dbc.pre to i8*
  store i8 %v2_10008db48, i8* %v3_10008dbc11, align 1
  %v0_10008dc012 = load i32, i32* @r3, align 4
  %v1_10008dc013 = add i32 %v0_10008dc012, 1
  store i32 %v1_10008dc013, i32* %r3.global-to-local, align 4
  %v0_10008dc414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008dc415 = add i32 %v0_10008dc414, -1
  store i32 %v1_10008dc415, i32* %ctr.global-to-local, align 4
  %v2_10008dc416 = icmp eq i32 %v1_10008dc415, 0
  br i1 %v2_10008dc416, label %dec_label_pc_10008dc8.loopexit, label %dec_label_pc_10008db4.dec_label_pc_10008db4_crit_edge

dec_label_pc_10008db4.dec_label_pc_10008db4_crit_edge: ; preds = %dec_label_pc_10008dac, %dec_label_pc_10008db4.dec_label_pc_10008db4_crit_edge
  %v1_10008dc017 = phi i32 [ %v1_10008dc0, %dec_label_pc_10008db4.dec_label_pc_10008db4_crit_edge ], [ %v1_10008dc013, %dec_label_pc_10008dac ]
  %v0_10008db4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008db4 = inttoptr i32 %v0_10008db4.pre to i8*
  %v2_10008db4 = load i8, i8* %v1_10008db4, align 1
  %v1_10008db8 = add i32 %v0_10008db4.pre, 1
  store i32 %v1_10008db8, i32* %r4.global-to-local, align 4
  %v3_10008dbc = inttoptr i32 %v1_10008dc017 to i8*
  store i8 %v2_10008db4, i8* %v3_10008dbc, align 1
  %v0_10008dc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008dc0 = add i32 %v0_10008dc0, 1
  store i32 %v1_10008dc0, i32* %r3.global-to-local, align 4
  %v0_10008dc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008dc4 = add i32 %v0_10008dc4, -1
  store i32 %v1_10008dc4, i32* %ctr.global-to-local, align 4
  %v2_10008dc4 = icmp eq i32 %v1_10008dc4, 0
  br i1 %v2_10008dc4, label %dec_label_pc_10008dc8.loopexit, label %dec_label_pc_10008db4.dec_label_pc_10008db4_crit_edge

dec_label_pc_10008dc8.loopexit:                   ; preds = %dec_label_pc_10008db4.dec_label_pc_10008db4_crit_edge, %dec_label_pc_10008dac
  %v0_10008dc8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008dc8

dec_label_pc_10008dc8:                            ; preds = %dec_label_pc_10008dc8.loopexit, %dec_label_pc_10008da0
  %v0_10008dc8 = phi i32 [ %v0_10008dc8.pre, %dec_label_pc_10008dc8.loopexit ], [ -1, %dec_label_pc_10008da0 ]
  store i32 %v0_10008dc8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008dc8

dec_label_pc_10008dd0:                            ; preds = %dec_label_pc_10008d80
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008dac

; uselistorder directives
  uselistorder i32 %v0_10008dc8, { 1, 0 }
  uselistorder i32 %v1_10008dc4, { 1, 0 }
  uselistorder i32 %v1_10008dc0, { 1, 0 }
  uselistorder i32 %v1_10008d90, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008db4.dec_label_pc_10008db4_crit_edge, { 1, 0 }
}

define i32 @function_10008ddc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ddc:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008ddc = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10008de4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008ddc, i32 %v0_10008de4)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008dec

dec_label_pc_10008dec:                            ; preds = %dec_label_pc_10008dec, %dec_label_pc_10008ddc
  %v0_10008dec = phi i32 [ %v1_10008df4, %dec_label_pc_10008dec ], [ 0, %dec_label_pc_10008ddc ]
  %v2_10008dec = add i32 %v0_10008dec, %arg2
  %v3_10008dec = inttoptr i32 %v2_10008dec to i8*
  %v4_10008dec = load i8, i8* %v3_10008dec, align 1
  %v4_10008df0 = add i32 %v0_10008dec, %arg1
  %v5_10008df0 = inttoptr i32 %v4_10008df0 to i8*
  store i8 %v4_10008dec, i8* %v5_10008df0, align 1
  %v0_10008df4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008df4 = add i32 %v0_10008df4, 1
  store i32 %v1_10008df4, i32* %r9.global-to-local, align 4
  %v0_10008df8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008df8 = add i32 %v0_10008df8, -1
  store i32 %v1_10008df8, i32* %ctr.global-to-local, align 4
  %v2_10008df8 = icmp eq i32 %v1_10008df8, 0
  br i1 %v2_10008df8, label %dec_label_pc_10008dfc, label %dec_label_pc_10008dec

dec_label_pc_10008dfc:                            ; preds = %dec_label_pc_10008dec
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008df8, { 1, 0 }
  uselistorder i32 %v1_10008df4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10008e00() local_unnamed_addr {
dec_label_pc_10008e00:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008e00 = load i32, i32* @r4, align 4
  store i32 %v0_10008e00, i32* %r0.global-to-local, align 4
  %v3_10008e00 = icmp eq i32 %v0_10008e00, 0
  store i32 %v0_10008e00, i32* %ctr.global-to-local, align 4
  %v0_10008e08 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008e00, i32 %v0_10008e08)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008e143 = load i32, i32* @r3, align 4
  %v5_10008e144 = inttoptr i32 %v2_10008e143 to i8*
  store i8 0, i8* %v5_10008e144, align 1
  %v0_10008e185 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e186 = add i32 %v0_10008e185, 1
  store i32 %v1_10008e186, i32* %r9.global-to-local, align 4
  %v0_10008e1c7 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e1c8 = add i32 %v0_10008e1c7, -1
  store i32 %v1_10008e1c8, i32* %ctr.global-to-local, align 4
  %v2_10008e1c9 = icmp eq i32 %v1_10008e1c8, 0
  br i1 %v2_10008e1c9, label %dec_label_pc_10008e20, label %dec_label_pc_10008e14.dec_label_pc_10008e14_crit_edge

dec_label_pc_10008e14.dec_label_pc_10008e14_crit_edge: ; preds = %dec_label_pc_10008e00, %dec_label_pc_10008e14.dec_label_pc_10008e14_crit_edge
  %v1_10008e1810 = phi i32 [ %v1_10008e18, %dec_label_pc_10008e14.dec_label_pc_10008e14_crit_edge ], [ %v1_10008e186, %dec_label_pc_10008e00 ]
  %v0_10008e14.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10008e14.pre to i8
  %v2_10008e14 = load i32, i32* @r3, align 4
  %v4_10008e14 = add i32 %v2_10008e14, %v1_10008e1810
  %v5_10008e14 = inttoptr i32 %v4_10008e14 to i8*
  store i8 %extract.t, i8* %v5_10008e14, align 1
  %v0_10008e18 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e18 = add i32 %v0_10008e18, 1
  store i32 %v1_10008e18, i32* %r9.global-to-local, align 4
  %v0_10008e1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e1c = add i32 %v0_10008e1c, -1
  store i32 %v1_10008e1c, i32* %ctr.global-to-local, align 4
  %v2_10008e1c = icmp eq i32 %v1_10008e1c, 0
  br i1 %v2_10008e1c, label %dec_label_pc_10008e20, label %dec_label_pc_10008e14.dec_label_pc_10008e14_crit_edge

dec_label_pc_10008e20:                            ; preds = %dec_label_pc_10008e14.dec_label_pc_10008e14_crit_edge, %dec_label_pc_10008e00
  %v0_10008e20 = load i32, i32* @r3, align 4
  ret i32 %v0_10008e20

; uselistorder directives
  uselistorder i32 %v1_10008e1c, { 1, 0 }
  uselistorder i32 %v1_10008e18, { 1, 0 }
  uselistorder i32 %v0_10008e00, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008e14.dec_label_pc_10008e14_crit_edge, { 1, 0 }
}

define i32 @function_10008e24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008e24:
  %v3_10008e24 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10008e24, label %dec_label_pc_10008e30, label %dec_label_pc_10008e38

dec_label_pc_10008e30:                            ; preds = %dec_label_pc_10008e54, %dec_label_pc_10008e24, %dec_label_pc_10008e38
  ret i32 -1

dec_label_pc_10008e38:                            ; preds = %dec_label_pc_10008e24
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10008e30, label %dec_label_pc_10008e40

dec_label_pc_10008e40:                            ; preds = %dec_label_pc_10008e38
  br label %dec_label_pc_10008e5c

dec_label_pc_10008e50:                            ; preds = %dec_label_pc_10008e5c
  br label %dec_label_pc_10008e54

dec_label_pc_10008e54:                            ; preds = %dec_label_pc_10008e74, %dec_label_pc_10008e50
  %v0_10008e5c1 = phi i32 [ %v1_10008e60, %dec_label_pc_10008e74 ], [ 0, %dec_label_pc_10008e50 ]
  %v1_10008e54 = add i32 %v0_10008e78, 1
  %v1_10008e58 = add i32 %v0_10008e58, -1
  %v2_10008e58 = icmp eq i32 %v1_10008e58, 0
  br i1 %v2_10008e58, label %dec_label_pc_10008e30, label %dec_label_pc_10008e5c

dec_label_pc_10008e5c:                            ; preds = %dec_label_pc_10008e54, %dec_label_pc_10008e40
  %v0_10008e58 = phi i32 [ %v1_10008e58, %dec_label_pc_10008e54 ], [ %arg2, %dec_label_pc_10008e40 ]
  %v0_10008e78 = phi i32 [ %v1_10008e54, %dec_label_pc_10008e54 ], [ 0, %dec_label_pc_10008e40 ]
  %v0_10008e5c = phi i32 [ %v0_10008e5c1, %dec_label_pc_10008e54 ], [ 0, %dec_label_pc_10008e40 ]
  %v2_10008e5c = add i32 %v0_10008e5c, %arg3
  %v3_10008e5c = inttoptr i32 %v2_10008e5c to i8*
  %v4_10008e5c = load i8, i8* %v3_10008e5c, align 1
  %v1_10008e60 = add i32 %v0_10008e5c, 1
  %v2_10008e64 = add i32 %v0_10008e78, %arg1
  %v3_10008e64 = inttoptr i32 %v2_10008e64 to i8*
  %v4_10008e64 = load i8, i8* %v3_10008e64, align 1
  %v4_10008e6c = icmp eq i8 %v4_10008e64, %v4_10008e5c
  br i1 %v4_10008e6c, label %dec_label_pc_10008e74, label %dec_label_pc_10008e50

dec_label_pc_10008e74:                            ; preds = %dec_label_pc_10008e5c
  %v4_10008e68 = icmp eq i32 %v1_10008e60, %arg4
  br i1 %v4_10008e68, label %dec_label_pc_10008e78, label %dec_label_pc_10008e54

dec_label_pc_10008e78:                            ; preds = %dec_label_pc_10008e74
  %v1_10008e78 = add i32 %v0_10008e78, 1
  ret i32 %v1_10008e78

; uselistorder directives
  uselistorder i32 %v0_10008e5c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e30, { 0, 2, 1 }
}

define i32 @function_10008e80(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10008e80.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008e80

dec_label_pc_10008e80:                            ; preds = %dec_label_pc_10008e9c, %dec_label_pc_10008e80, %bb
  %v0_10008e80 = phi i32 [ %v0_10008e80.pre, %bb ], [ %v1_10008e84, %dec_label_pc_10008e80 ], [ %v1_10008e84, %dec_label_pc_10008e9c ]
  %v1_10008e80 = inttoptr i32 %v0_10008e80 to i8*
  %v2_10008e80 = load i8, i8* %v1_10008e80, align 1
  %v1_10008e84 = add i32 %v0_10008e80, 1
  %v3_10008e90 = icmp eq i8 %v2_10008e80, 32
  br i1 %v3_10008e90, label %dec_label_pc_10008e80, label %dec_label_pc_10008e9c

dec_label_pc_10008e9c:                            ; preds = %dec_label_pc_10008e80
  %v2_10008e80.off = add i8 %v2_10008e80, -9
  %tmp = icmp ult i8 %v2_10008e80.off, 2
  br i1 %tmp, label %dec_label_pc_10008e80, label %dec_label_pc_10008ea8

dec_label_pc_10008ea8:                            ; preds = %dec_label_pc_10008e9c
  %v3_10008ea8 = icmp eq i8 %v2_10008e80, 45
  br i1 %v3_10008ea8, label %dec_label_pc_10008f54, label %dec_label_pc_10008eb0

dec_label_pc_10008eb0:                            ; preds = %dec_label_pc_10008ea8
  %v3_10008eb0 = icmp eq i8 %v2_10008e80, 43
  br i1 %v3_10008eb0, label %dec_label_pc_10008fac, label %dec_label_pc_10008eb8

dec_label_pc_10008eb8:                            ; preds = %dec_label_pc_10008eb0, %dec_label_pc_10008fac
  %v0_10008f4826 = phi i32 [ %v1_10008e84, %dec_label_pc_10008eb0 ], [ %v1_10008fb0, %dec_label_pc_10008fac ]
  %v0_10008ed85.in = phi i8 [ %v2_10008e80, %dec_label_pc_10008eb0 ], [ %v2_10008fac, %dec_label_pc_10008fac ]
  br label %dec_label_pc_10008ec4

dec_label_pc_10008ec4:                            ; preds = %dec_label_pc_10008f54, %dec_label_pc_10008eb8
  %v0_10008f4825 = phi i32 [ %v1_10008f5c, %dec_label_pc_10008f54 ], [ %v0_10008f4826, %dec_label_pc_10008eb8 ]
  %v0_10008ed84.in = phi i8 [ %v2_10008f54, %dec_label_pc_10008f54 ], [ %v0_10008ed85.in, %dec_label_pc_10008eb8 ]
  %v0_10008f9c = phi i32 [ 1, %dec_label_pc_10008f54 ], [ 0, %dec_label_pc_10008eb8 ]
  %v1_10008ed4 = phi i32 [ -2147483648, %dec_label_pc_10008f54 ], [ 2147483647, %dec_label_pc_10008eb8 ]
  %v2_10008ec4 = udiv i32 %v1_10008ed4, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10008ed0 = mul i32 %v2_10008ec4, %arg1
  %v2_10008ed4 = sub i32 %v1_10008ed4, %v2_10008ed0
  br label %dec_label_pc_10008ed8

dec_label_pc_10008ed8:                            ; preds = %dec_label_pc_10008f48, %dec_label_pc_10008ec4
  %v0_10008f48 = phi i32 [ %v1_10008f4c, %dec_label_pc_10008f48 ], [ %v0_10008f4825, %dec_label_pc_10008ec4 ]
  %v0_10008f3c = phi i32 [ %v0_10008f3417, %dec_label_pc_10008f48 ], [ 0, %dec_label_pc_10008ec4 ]
  %v0_10008f2c = phi i32 [ %v0_10008f8c11, %dec_label_pc_10008f48 ], [ 0, %dec_label_pc_10008ec4 ]
  %v0_10008f24 = phi i32 [ %v0_10008f809, %dec_label_pc_10008f48 ], [ 0, %dec_label_pc_10008ec4 ]
  %v1_10008f18.in = phi i8 [ %v2_10008f48, %dec_label_pc_10008f48 ], [ %v0_10008ed84.in, %dec_label_pc_10008ec4 ]
  %v1_10008f18 = zext i8 %v1_10008f18.in to i32
  %v1_10008edc = add nsw i32 %v1_10008f18, -48
  %fold = add nuw nsw i32 %v1_10008f18, 208
  %v1_10008ee4 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10008ee4, 10
  br i1 %tmp27, label %dec_label_pc_10008f1c, label %dec_label_pc_10008ef0

dec_label_pc_10008ef0:                            ; preds = %dec_label_pc_10008ed8
  %v1_10008ef0 = add nuw nsw i32 %v1_10008f18, 191
  %v1_10008ef4 = urem i32 %v1_10008ef0, 256
  %tmp28 = icmp ult i32 %v1_10008ef4, 26
  br i1 %tmp28, label %dec_label_pc_10008f18, label %dec_label_pc_10008f04

dec_label_pc_10008f04:                            ; preds = %dec_label_pc_10008ef0
  %v1_10008f04 = add nuw nsw i32 %v1_10008f18, 159
  %v1_10008f08 = urem i32 %v1_10008f04, 256
  %v2_10008f0c = icmp ugt i32 %v1_10008f08, 25
  br i1 %v2_10008f0c, label %dec_label_pc_10008f80, label %dec_label_pc_10008f14

dec_label_pc_10008f14:                            ; preds = %dec_label_pc_10008f04
  br label %dec_label_pc_10008f18

dec_label_pc_10008f18:                            ; preds = %dec_label_pc_10008ef0, %dec_label_pc_10008f14
  %v0_10008f18 = phi i32 [ 55, %dec_label_pc_10008ef0 ], [ 87, %dec_label_pc_10008f14 ]
  %v2_10008f18 = sub nsw i32 %v1_10008f18, %v0_10008f18
  br label %dec_label_pc_10008f1c

dec_label_pc_10008f1c:                            ; preds = %dec_label_pc_10008ed8, %dec_label_pc_10008f18
  %v1_10008f44 = phi i32 [ %v1_10008edc, %dec_label_pc_10008ed8 ], [ %v2_10008f18, %dec_label_pc_10008f18 ]
  %v2_10008f1c = icmp slt i32 %v1_10008f44, %arg1
  br i1 %v2_10008f1c, label %dec_label_pc_10008f24, label %dec_label_pc_10008f80

dec_label_pc_10008f24:                            ; preds = %dec_label_pc_10008f1c
  %v1_10008f24 = icmp slt i32 %v0_10008f24, 0
  br i1 %v1_10008f24, label %dec_label_pc_10008f68, label %dec_label_pc_10008f2c

dec_label_pc_10008f2c:                            ; preds = %dec_label_pc_10008f24
  %v3_10008f2c = icmp ugt i32 %v0_10008f2c, %v2_10008ec4
  br i1 %v3_10008f2c, label %dec_label_pc_10008f68, label %dec_label_pc_10008f34

dec_label_pc_10008f34:                            ; preds = %dec_label_pc_10008f2c
  %v4_10008f34 = icmp eq i32 %v0_10008f3c, %v2_10008ec4
  br i1 %v4_10008f34, label %dec_label_pc_10008f70, label %dec_label_pc_10008f3c

dec_label_pc_10008f3c:                            ; preds = %dec_label_pc_10008f70, %dec_label_pc_10008f34
  %v2_10008f3c = mul i32 %v0_10008f3c, %arg1
  %v2_10008f44 = add i32 %v1_10008f44, %v2_10008f3c
  store i32 %v2_10008f44, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008f48

dec_label_pc_10008f48:                            ; preds = %dec_label_pc_10008f70, %dec_label_pc_10008f68, %dec_label_pc_10008f3c
  %v0_10008f3417 = phi i32 [ %v2_10008ec4, %dec_label_pc_10008f70 ], [ %v0_10008f3c, %dec_label_pc_10008f68 ], [ %v2_10008f44, %dec_label_pc_10008f3c ]
  %v0_10008f8c11 = phi i32 [ %v2_10008ec4, %dec_label_pc_10008f70 ], [ %v0_10008f2c, %dec_label_pc_10008f68 ], [ %v2_10008f44, %dec_label_pc_10008f3c ]
  %v0_10008f809 = phi i32 [ -1, %dec_label_pc_10008f70 ], [ -1, %dec_label_pc_10008f68 ], [ 1, %dec_label_pc_10008f3c ]
  %v1_10008f48 = inttoptr i32 %v0_10008f48 to i8*
  %v2_10008f48 = load i8, i8* %v1_10008f48, align 1
  %v1_10008f4c = add i32 %v0_10008f48, 1
  br label %dec_label_pc_10008ed8

dec_label_pc_10008f54:                            ; preds = %dec_label_pc_10008ea8
  %v1_10008f54 = inttoptr i32 %v1_10008e84 to i8*
  %v2_10008f54 = load i8, i8* %v1_10008f54, align 1
  %v1_10008f5c = add i32 %v0_10008e80, 2
  br label %dec_label_pc_10008ec4

dec_label_pc_10008f68:                            ; preds = %dec_label_pc_10008f2c, %dec_label_pc_10008f24
  br label %dec_label_pc_10008f48

dec_label_pc_10008f70:                            ; preds = %dec_label_pc_10008f34
  %v3_10008f70 = icmp sgt i32 %v1_10008f44, %v2_10008ed4
  br i1 %v3_10008f70, label %dec_label_pc_10008f48, label %dec_label_pc_10008f3c

dec_label_pc_10008f80:                            ; preds = %dec_label_pc_10008f1c, %dec_label_pc_10008f04
  %v1_10008f80 = icmp slt i32 %v0_10008f24, 0
  br i1 %v1_10008f80, label %dec_label_pc_10008f9c, label %dec_label_pc_10008f88

dec_label_pc_10008f88:                            ; preds = %dec_label_pc_10008f80
  %v3_10008f88 = icmp eq i32 %v0_10008f9c, 0
  %v0_10008f90 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008f88, i32 %v0_10008f90)
  %v0_10008f94 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008f94 = sub i32 0, %v0_10008f94
  ret i32 %v1_10008f94

dec_label_pc_10008f9c:                            ; preds = %dec_label_pc_10008f80
  %v1_10008f9c = xor i32 %v0_10008f9c, 1
  %v2_10008fa4 = sub nuw i32 -2147483648, %v1_10008f9c
  ret i32 %v2_10008fa4

dec_label_pc_10008fac:                            ; preds = %dec_label_pc_10008eb0
  %v1_10008fac = inttoptr i32 %v1_10008e84 to i8*
  %v2_10008fac = load i8, i8* %v1_10008fac, align 1
  %v1_10008fb0 = add i32 %v0_10008e80, 2
  br label %dec_label_pc_10008eb8

; uselistorder directives
  uselistorder i32 %v2_10008f44, { 1, 0, 2 }
  uselistorder i32 %v1_10008f44, { 1, 0, 2 }
  uselistorder i32 %v1_10008f18, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10008f3c, { 2, 0, 1 }
  uselistorder i32 %v0_10008f48, { 1, 0 }
  uselistorder i32 %v2_10008ec4, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10008e84, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008e80, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 87, { 2, 0, 1, 3, 4 }
  uselistorder i32 159, { 2, 7, 8, 3, 9, 10, 4, 5, 6, 0, 1, 11, 12 }
  uselistorder i32 208, { 8, 9, 10, 13, 14, 0, 1, 2, 3, 4, 5, 6, 15, 16, 7, 11, 12 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 11, 12, 13, 14, 1, 8, 15, 9, 16 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10008f1c, { 1, 0 }
  uselistorder label %dec_label_pc_10008f18, { 1, 0 }
  uselistorder label %dec_label_pc_10008eb8, { 1, 0 }
}

define i32 @function_10008fb8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008fb8:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10008fe4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10008fec

dec_label_pc_10008fec:                            ; preds = %dec_label_pc_10009018.dec_label_pc_10008fec_crit_edge, %dec_label_pc_10008fb8
  %v0_10008ff0 = phi i32 [ %v0_10008ff0.pre, %dec_label_pc_10009018.dec_label_pc_10008fec_crit_edge ], [ %arg3, %dec_label_pc_10008fb8 ]
  %v0_10008fec = phi i32 [ %v1_10009004, %dec_label_pc_10009018.dec_label_pc_10008fec_crit_edge ], [ %tmp, %dec_label_pc_10008fb8 ]
  store i32 1, i32* @r5, align 4
  store i32 268472316, i32* @lr, align 4
  %v4_10008ff8 = call i32 @function_10009750(i32 %v0_10008ff0, i32 %v0_10008fec, i32 1)
  %v0_10008ffc = load i32, i32* @r31, align 4
  %v3_10009000 = icmp eq i32 %v4_10008ff8, 1
  %v1_10009004 = add i32 %v0_10008ffc, 1
  store i32 %v1_10009004, i32* @r31, align 4
  %v0_1000900c = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10009000, label %dec_label_pc_1000900c, label %dec_label_pc_10009024

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10008fec
  %v1_1000900c = add i32 %v0_1000900c, 1
  store i32 %v1_1000900c, i32* %r30.global-to-local, align 4
  %v0_10009010 = load i32, i32* %r28.global-to-local, align 4
  %v3_10009010 = icmp sgt i32 %v0_10009010, %v1_1000900c
  br i1 %v3_10009010, label %dec_label_pc_10009018, label %dec_label_pc_10009024

dec_label_pc_10009018:                            ; preds = %dec_label_pc_1000900c
  %v1_10009018 = inttoptr i32 %v0_10008ffc to i8*
  %v2_10009018 = load i8, i8* %v1_10009018, align 1
  %v3_1000901c = icmp eq i8 %v2_10009018, 10
  br i1 %v3_1000901c, label %dec_label_pc_10009024, label %dec_label_pc_10009018.dec_label_pc_10008fec_crit_edge

dec_label_pc_10009018.dec_label_pc_10008fec_crit_edge: ; preds = %dec_label_pc_10009018
  %v0_10008ff0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008fec

dec_label_pc_10009024:                            ; preds = %dec_label_pc_10008fec, %dec_label_pc_10009018, %dec_label_pc_1000900c
  %v1_1000902c = phi i32 [ %v1_1000900c, %dec_label_pc_10009018 ], [ %v1_1000900c, %dec_label_pc_1000900c ], [ %v0_1000900c, %dec_label_pc_10008fec ]
  %tmp12 = icmp slt i32 %v1_1000902c, 0
  %v1_10009024 = zext i1 %tmp12 to i32
  %v2_10009024 = ashr i32 %v1_1000902c, 31
  %v3_10009024 = and i32 %v2_10009024, -2
  %v4_10009024 = or i32 %v3_10009024, %v1_10009024
  %v2_1000902c = xor i32 %v4_10009024, %v1_1000902c
  %v2_10009034 = sub i32 %v4_10009024, %v2_1000902c
  %tmp13 = icmp slt i32 %v2_10009034, 0
  %v1_1000903c = zext i1 %tmp13 to i32
  %v2_1000903c = ashr i32 %v2_10009034, 31
  %v3_1000903c = and i32 %v2_1000903c, -2
  %v4_1000903c = or i32 %v3_1000903c, %v1_1000903c
  %v0_10009044 = load i32, i32* %r27.global-to-local, align 4
  %v2_10009044 = and i32 %v4_1000903c, %v0_10009044
  store i32 %v0_10008fe4, i32* @r31, align 4
  ret i32 %v2_10009044

; uselistorder directives
  uselistorder i32 %v2_10009034, { 1, 0 }
  uselistorder i32 %v4_10009024, { 1, 0 }
  uselistorder i32 %v1_1000902c, { 1, 2, 0 }
  uselistorder i32 %v1_10009004, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009750, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10009024, { 1, 2, 0 }
}

define i32 @function_1000905c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000905c:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_10009068 = ptrtoint i32* %stack_var_-36 to i32
  %v0_10009074 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_1000907c = call i32 @function_10009c34()
  %v2_10009088 = inttoptr i32 %v0_1000907c to i32*
  store i32 0, i32* %v2_10009088, align 4
  store i32 268472472, i32* @lr, align 4
  %v3_10009094 = call i32 @function_1000a234(i32 2, i32 2, i32 0)
  %v3_1000909c = icmp eq i32 %v3_10009094, -1
  store i32 %v3_10009094, i32* @r31, align 4
  br i1 %v3_1000909c, label %dec_label_pc_100090ec, label %dec_label_pc_100090b8

dec_label_pc_100090b8:                            ; preds = %dec_label_pc_1000905c
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268472528, i32* @lr, align 4
  %v3_100090cc = call i32 @function_1000a034(i32 %v2_10009068, i32 16, i32 16)
  %v2_100090d4 = ptrtoint i32* %stack_var_-40 to i32
  %v0_100090d8 = load i32, i32* @r31, align 4
  store i32 268472544, i32* @lr, align 4
  %v3_100090dc = call i32 @function_1000a068(i32 %v0_100090d8, i32 %v2_10009068, i32 %v2_100090d4)
  store i32 268472552, i32* @lr, align 4
  %v0_100090e4 = call i32 @function_10009518()
  br label %dec_label_pc_100090ec

dec_label_pc_100090ec:                            ; preds = %dec_label_pc_1000905c, %dec_label_pc_100090b8
  %v0_100090ec = phi i32 [ 0, %dec_label_pc_1000905c ], [ 134744072, %dec_label_pc_100090b8 ]
  store i32 %v0_10009074, i32* @r31, align 4
  ret i32 %v0_100090ec

; uselistorder directives
  uselistorder i32 %v2_10009068, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a034, { 8, 7, 4, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a234, { 26, 8, 25, 7, 24, 23, 22, 21, 20, 19, 18, 17, 16, 0, 15, 14, 1, 13, 12, 11, 10, 9, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_100090ec, { 1, 0 }
}

define i32 @function_10009108(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009108:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10009108 = load i8, i8* %tmp, align 1
  %v3_10009114 = icmp eq i8 %v3_10009108, 0
  br i1 %v3_10009114, label %dec_label_pc_1000912c, label %dec_label_pc_1000911c

dec_label_pc_1000911c:                            ; preds = %dec_label_pc_10009108, %dec_label_pc_1000911c
  %v0_1000911c = phi i32 [ %v1_1000911c, %dec_label_pc_1000911c ], [ 0, %dec_label_pc_10009108 ]
  %v1_1000911c = add i32 %v0_1000911c, 1
  %v3_10009120 = add i32 %v1_1000911c, %arg3
  %v4_10009120 = inttoptr i32 %v3_10009120 to i8*
  %v5_10009120 = load i8, i8* %v4_10009120, align 1
  %v3_10009124 = icmp eq i8 %v5_10009120, 0
  br i1 %v3_10009124, label %dec_label_pc_1000912c, label %dec_label_pc_1000911c

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_1000911c, %dec_label_pc_10009108
  %v0_1000915c11 = phi i32 [ 0, %dec_label_pc_10009108 ], [ %v1_1000911c, %dec_label_pc_1000911c ]
  %v1_1000912c = icmp slt i32 %arg2, 0
  %v1_10009130 = add i32 %arg2, 1
  br i1 %v1_1000912c, label %dec_label_pc_100091a8, label %dec_label_pc_10009144

dec_label_pc_10009144:                            ; preds = %dec_label_pc_1000912c, %dec_label_pc_100091a8, %dec_label_pc_1000919c
  %v2_100091508 = phi i32 [ %v1_10009154, %dec_label_pc_1000919c ], [ 0, %dec_label_pc_100091a8 ], [ 0, %dec_label_pc_1000912c ]
  %v0_100091486 = phi i32 [ %v1_1000914c, %dec_label_pc_1000919c ], [ %tmp16, %dec_label_pc_100091a8 ], [ %tmp16, %dec_label_pc_1000912c ]
  %v0_10009144 = phi i32 [ %v0_10009190, %dec_label_pc_1000919c ], [ 1, %dec_label_pc_100091a8 ], [ %v1_10009130, %dec_label_pc_1000912c ]
  %v1_10009144 = add i32 %v0_10009144, -1
  %v2_10009144 = icmp eq i32 %v1_10009144, 0
  br i1 %v2_10009144, label %dec_label_pc_10009194, label %dec_label_pc_10009148

dec_label_pc_10009148:                            ; preds = %dec_label_pc_10009144, %dec_label_pc_1000918c
  %v2_10009150 = phi i32 [ 0, %dec_label_pc_1000918c ], [ %v2_100091508, %dec_label_pc_10009144 ]
  %v0_10009148 = phi i32 [ %v1_1000914c, %dec_label_pc_1000918c ], [ %v0_100091486, %dec_label_pc_10009144 ]
  %v0_10009190 = phi i32 [ %v1_10009190, %dec_label_pc_1000918c ], [ %v1_10009144, %dec_label_pc_10009144 ]
  %v1_10009148 = inttoptr i32 %v0_10009148 to i8*
  %v2_10009148 = load i8, i8* %v1_10009148, align 1
  %v3_10009148 = zext i8 %v2_10009148 to i32
  %v1_1000914c = add i32 %v0_10009148, 1
  %v3_10009150 = add i32 %v2_10009150, %arg3
  %v4_10009150 = inttoptr i32 %v3_10009150 to i8*
  %v5_10009150 = load i8, i8* %v4_10009150, align 1
  %v6_10009150 = zext i8 %v5_10009150 to i32
  %v1_10009154 = add i32 %v2_10009150, 1
  %v1_10009158 = add nuw nsw i32 %v3_10009148, 191
  %v1_10009160 = urem i32 %v1_10009158, 256
  %v2_10009164 = icmp ugt i32 %v1_10009160, 25
  %v1_10009168 = add nuw nsw i32 %v6_10009150, 191
  %v1_1000916c = urem i32 %v1_10009168, 256
  %v2_10009170 = icmp ugt i32 %v1_1000916c, 25
  br i1 %v2_10009164, label %dec_label_pc_1000917c, label %dec_label_pc_10009178

dec_label_pc_10009178:                            ; preds = %dec_label_pc_10009148
  %v1_10009178 = or i32 %v3_10009148, 96
  br i1 %v2_10009170, label %dec_label_pc_10009184, label %dec_label_pc_10009180

dec_label_pc_1000917c:                            ; preds = %dec_label_pc_10009148
  br i1 %v2_10009170, label %dec_label_pc_10009184, label %dec_label_pc_10009180

dec_label_pc_10009180:                            ; preds = %dec_label_pc_10009178, %dec_label_pc_1000917c
  %v1_1000918414 = phi i32 [ %v1_10009178, %dec_label_pc_10009178 ], [ %v3_10009148, %dec_label_pc_1000917c ]
  %v1_10009180 = or i32 %v6_10009150, 96
  br label %dec_label_pc_10009184

dec_label_pc_10009184:                            ; preds = %dec_label_pc_10009178, %dec_label_pc_1000917c, %dec_label_pc_10009180
  %v1_10009184 = phi i32 [ %v1_10009178, %dec_label_pc_10009178 ], [ %v3_10009148, %dec_label_pc_1000917c ], [ %v1_1000918414, %dec_label_pc_10009180 ]
  %v0_10009184 = phi i32 [ %v6_10009150, %dec_label_pc_10009178 ], [ %v6_10009150, %dec_label_pc_1000917c ], [ %v1_10009180, %dec_label_pc_10009180 ]
  %v4_10009184 = icmp eq i32 %v0_10009184, %v1_10009184
  br i1 %v4_10009184, label %dec_label_pc_1000919c, label %dec_label_pc_1000918c

dec_label_pc_1000918c:                            ; preds = %dec_label_pc_10009184
  %v1_10009190 = add i32 %v0_10009190, -1
  %v2_10009190 = icmp eq i32 %v1_10009190, 0
  br i1 %v2_10009190, label %dec_label_pc_10009194, label %dec_label_pc_10009148

dec_label_pc_10009194:                            ; preds = %dec_label_pc_10009144, %dec_label_pc_1000918c
  ret i32 -1

dec_label_pc_1000919c:                            ; preds = %dec_label_pc_10009184
  %v4_1000915c.le = icmp eq i32 %v0_1000915c11, %v1_10009154
  br i1 %v4_1000915c.le, label %dec_label_pc_100091a0, label %dec_label_pc_10009144

dec_label_pc_100091a0:                            ; preds = %dec_label_pc_1000919c
  %v2_100091a0 = sub i32 %v1_1000914c, %tmp16
  ret i32 %v2_100091a0

dec_label_pc_100091a8:                            ; preds = %dec_label_pc_1000912c
  br label %dec_label_pc_10009144

; uselistorder directives
  uselistorder i32 %v1_10009190, { 1, 0 }
  uselistorder i32 %v1_10009178, { 1, 0 }
  uselistorder i1 %v2_10009170, { 1, 0 }
  uselistorder i32 %v1_10009154, { 1, 0 }
  uselistorder i32 %v3_10009148, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10009190, { 1, 0 }
  uselistorder i32 %v0_10009148, { 1, 0 }
  uselistorder i32 %v2_10009150, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 96, { 9, 10, 3, 4, 0, 1, 5, 6, 2, 7, 8 }
  uselistorder i32 25, { 7, 8, 9, 5, 6, 0, 4, 1, 2, 3 }
  uselistorder i32 191, { 1, 0, 2, 7, 8, 4, 5, 6, 9, 10, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10009194, { 1, 0 }
  uselistorder label %dec_label_pc_10009184, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009180, { 1, 0 }
  uselistorder label %dec_label_pc_10009148, { 1, 0 }
  uselistorder label %dec_label_pc_10009144, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000911c, { 1, 0 }
}

define i32 @function_100091b4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100091b4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100091b4 = load i8, i8* %arg1, align 1
  %v3_100091bc = icmp eq i8 %v2_100091b4, 0
  br i1 %v3_100091bc, label %dec_label_pc_100091d4, label %dec_label_pc_100091c4

dec_label_pc_100091c4:                            ; preds = %dec_label_pc_100091b4, %dec_label_pc_100091c4
  %v0_100091c4 = phi i32 [ %v1_100091c4, %dec_label_pc_100091c4 ], [ 0, %dec_label_pc_100091b4 ]
  %v1_100091c4 = add i32 %v0_100091c4, 1
  %v2_100091c8 = add i32 %v1_100091c4, %tmp
  %v3_100091c8 = inttoptr i32 %v2_100091c8 to i8*
  %v4_100091c8 = load i8, i8* %v3_100091c8, align 1
  %v3_100091cc = icmp eq i8 %v4_100091c8, 0
  br i1 %v3_100091cc, label %dec_label_pc_100091d4, label %dec_label_pc_100091c4

dec_label_pc_100091d4:                            ; preds = %dec_label_pc_100091c4, %dec_label_pc_100091b4
  %v0_100091f4 = phi i32 [ 0, %dec_label_pc_100091b4 ], [ %v1_100091c4, %dec_label_pc_100091c4 ]
  %v1_100091d4 = inttoptr i32 %arg2 to i8*
  %v2_100091d4 = load i8, i8* %v1_100091d4, align 1
  %v3_100091dc = icmp eq i8 %v2_100091d4, 0
  br i1 %v3_100091dc, label %dec_label_pc_100091f4, label %dec_label_pc_100091e4

dec_label_pc_100091e4:                            ; preds = %dec_label_pc_100091d4, %dec_label_pc_100091e4
  %v0_100091e4 = phi i32 [ %v1_100091e4, %dec_label_pc_100091e4 ], [ 0, %dec_label_pc_100091d4 ]
  %v1_100091e4 = add i32 %v0_100091e4, 1
  %v2_100091e8 = add i32 %v1_100091e4, %arg2
  %v3_100091e8 = inttoptr i32 %v2_100091e8 to i8*
  %v4_100091e8 = load i8, i8* %v3_100091e8, align 1
  %v3_100091ec = icmp eq i8 %v4_100091e8, 0
  br i1 %v3_100091ec, label %dec_label_pc_100091f4, label %dec_label_pc_100091e4

dec_label_pc_100091f4:                            ; preds = %dec_label_pc_100091e4, %dec_label_pc_100091d4
  %v0_100091f8 = phi i32 [ 0, %dec_label_pc_100091d4 ], [ %v1_100091e4, %dec_label_pc_100091e4 ]
  %v4_100091f4 = icmp eq i32 %v0_100091f4, %v0_100091f8
  br i1 %v4_100091f4, label %dec_label_pc_1000920c, label %dec_label_pc_10009204

dec_label_pc_10009204:                            ; preds = %dec_label_pc_10009210, %dec_label_pc_100091f4
  ret i32 0

dec_label_pc_1000920c:                            ; preds = %dec_label_pc_100091f4
  %v2_1000920c = icmp eq i32 %v0_100091f4, 0
  br i1 %v2_1000920c, label %dec_label_pc_1000922c, label %dec_label_pc_10009210

dec_label_pc_10009210:                            ; preds = %dec_label_pc_1000920c, %dec_label_pc_10009228
  %v0_10009228 = phi i32 [ %v1_10009228, %dec_label_pc_10009228 ], [ %v0_100091f4, %dec_label_pc_1000920c ]
  %v0_10009218 = phi i32 [ %v1_1000921c, %dec_label_pc_10009228 ], [ %arg2, %dec_label_pc_1000920c ]
  %v0_10009210 = phi i32 [ %v1_10009214, %dec_label_pc_10009228 ], [ %tmp, %dec_label_pc_1000920c ]
  %v1_10009210 = inttoptr i32 %v0_10009210 to i8*
  %v2_10009210 = load i8, i8* %v1_10009210, align 1
  %v1_10009218 = inttoptr i32 %v0_10009218 to i8*
  %v2_10009218 = load i8, i8* %v1_10009218, align 1
  %v4_10009220 = icmp eq i8 %v2_10009210, %v2_10009218
  br i1 %v4_10009220, label %dec_label_pc_10009228, label %dec_label_pc_10009204

dec_label_pc_10009228:                            ; preds = %dec_label_pc_10009210
  %v1_1000921c = add i32 %v0_10009218, 1
  %v1_10009214 = add i32 %v0_10009210, 1
  %v1_10009228 = add i32 %v0_10009228, -1
  %v2_10009228 = icmp eq i32 %v1_10009228, 0
  br i1 %v2_10009228, label %dec_label_pc_1000922c, label %dec_label_pc_10009210

dec_label_pc_1000922c:                            ; preds = %dec_label_pc_10009228, %dec_label_pc_1000920c
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10009228, { 1, 0 }
  uselistorder i32 %v0_10009210, { 1, 0 }
  uselistorder i32 %v0_10009218, { 1, 0 }
  uselistorder label %dec_label_pc_10009210, { 1, 0 }
  uselistorder label %dec_label_pc_100091e4, { 1, 0 }
  uselistorder label %dec_label_pc_100091c4, { 1, 0 }
}

define i32 @function_10009234(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009234:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009234 = icmp eq i32 %arg3, 0
  %v4_10009238 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009238, i32* %stack_var_-64, align 4
  %v5_10009238 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10009234, label %dec_label_pc_10009254, label %dec_label_pc_10009240

dec_label_pc_10009240:                            ; preds = %dec_label_pc_10009234
  %v0_10009240 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009240 = icmp eq i32 %v0_10009240, 0
  store i1 %v3_10009240, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10009240, label %dec_label_pc_10009248, label %dec_label_pc_10009260

dec_label_pc_10009248:                            ; preds = %dec_label_pc_10009240
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_1000924c = add i32 %arg3, 1
  %v5_1000924c = inttoptr i32 %v4_1000924c to i8*
  store i8 0, i8* %v5_1000924c, align 1
  %v0_10009250 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009250 = trunc i32 %v0_10009250 to i8
  store i8 %v1_10009250, i8* %tmp, align 1
  br label %dec_label_pc_10009254

dec_label_pc_10009254:                            ; preds = %dec_label_pc_100092e0, %dec_label_pc_10009234, %dec_label_pc_10009248
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10009260:                            ; preds = %dec_label_pc_10009240
  %v2_10009240 = icmp sgt i32 %v0_10009240, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10009260.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10009240, %v3_10009260.not
  br i1 %brmerge, label %dec_label_pc_10009274, label %dec_label_pc_10009328

dec_label_pc_10009274:                            ; preds = %dec_label_pc_10009260, %dec_label_pc_10009328
  %v0_100092782 = phi i32 [ %v0_10009240, %dec_label_pc_10009260 ], [ %v1_10009328, %dec_label_pc_10009328 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10009260 ], [ 1, %dec_label_pc_10009328 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009278

dec_label_pc_10009278:                            ; preds = %dec_label_pc_100092a4.dec_label_pc_10009278_crit_edge, %dec_label_pc_10009274
  %v1_1000927c = phi i32 [ %v1_1000927c.pre, %dec_label_pc_100092a4.dec_label_pc_10009278_crit_edge ], [ 32, %dec_label_pc_10009274 ]
  %v0_1000927c = phi i32 [ %v0_1000927c.pre, %dec_label_pc_100092a4.dec_label_pc_10009278_crit_edge ], [ %v5_10009238, %dec_label_pc_10009274 ]
  %v1_1000928c = phi i32 [ %v0_10009278.pre, %dec_label_pc_100092a4.dec_label_pc_10009278_crit_edge ], [ %v0_100092782, %dec_label_pc_10009274 ]
  %v2_10009278 = udiv i32 %v1_1000928c, %arg2
  %v2_1000927c = add i32 %v0_1000927c, %v1_1000927c
  store i32 %v2_1000927c, i32* %r11.global-to-local, align 4
  %v1_10009280 = add i32 %v1_1000927c, -1
  store i32 %v1_10009280, i32* %r10.global-to-local, align 4
  %v2_10009284 = mul i32 %v2_10009278, %arg2
  %v3_10009288 = icmp ult i32 %v1_1000928c, %arg2
  store i1 %v3_10009288, i1* %cr6_eq.global-to-local, align 1
  %v2_1000928c = sub i32 %v1_1000928c, %v2_10009284
  store i32 %v2_1000928c, i32* %r9.global-to-local, align 4
  store i32 %v2_10009278, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_1000928c, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_1000928c
  %v0_100092a4.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_100092a4 = add i32 %v2_1000927c, 8
  %v4_100092a4 = inttoptr i32 %v3_100092a4 to i8*
  store i8 %v0_100092a4.off0, i8* %v4_100092a4, align 1
  %v0_100092a8 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100092a8, label %dec_label_pc_100092ac, label %dec_label_pc_100092a4.dec_label_pc_10009278_crit_edge

dec_label_pc_100092a4.dec_label_pc_10009278_crit_edge: ; preds = %dec_label_pc_10009278
  %v0_10009278.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000927c.pre = load i32, i32* @r1, align 4
  %v1_1000927c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009278

dec_label_pc_100092ac:                            ; preds = %dec_label_pc_10009278
  %v0_100092ac = load i32, i32* %r8.global-to-local, align 4
  %v3_100092ac = icmp eq i32 %v0_100092ac, 0
  br i1 %v3_100092ac, label %dec_label_pc_100092b4, label %dec_label_pc_10009314

dec_label_pc_100092b4:                            ; preds = %dec_label_pc_100092ac
  %v0_100092b4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100092b4 = add i32 %v0_100092b4, 1
  store i32 %v1_100092b4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092b8

dec_label_pc_100092b8:                            ; preds = %dec_label_pc_10009314, %dec_label_pc_100092b4
  %v1_100092c0 = phi i32 [ %v1_100092bc.pre, %dec_label_pc_10009314 ], [ %v1_100092b4, %dec_label_pc_100092b4 ]
  %v2_100092b8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100092b8, i32* %r9.global-to-local, align 4
  %v2_100092bc = add i32 %v1_100092c0, %v2_100092b8
  %v3_100092bc = inttoptr i32 %v2_100092bc to i8*
  %v4_100092bc = load i8, i8* %v3_100092bc, align 1
  %v5_100092bc = zext i8 %v4_100092bc to i32
  store i32 %v5_100092bc, i32* %r0.global-to-local, align 4
  store i32 %v2_100092bc, i32* %r9.global-to-local, align 4
  %v3_100092c4 = icmp eq i8 %v4_100092bc, 0
  br i1 %v3_100092c4, label %dec_label_pc_1000933c, label %dec_label_pc_100092cc

dec_label_pc_100092cc:                            ; preds = %dec_label_pc_100092b8
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092d0

dec_label_pc_100092d0:                            ; preds = %dec_label_pc_100092d0, %dec_label_pc_100092cc
  %v0_100092d0 = phi i32 [ %v1_100092d0, %dec_label_pc_100092d0 ], [ 0, %dec_label_pc_100092cc ]
  %v1_100092d0 = add i32 %v0_100092d0, 1
  store i32 %v1_100092d0, i32* %r10.global-to-local, align 4
  %v2_100092d4 = add i32 %v1_100092d0, %v2_100092bc
  %v3_100092d4 = inttoptr i32 %v2_100092d4 to i8*
  %v4_100092d4 = load i8, i8* %v3_100092d4, align 1
  %v5_100092d4 = zext i8 %v4_100092d4 to i32
  store i32 %v5_100092d4, i32* %r0.global-to-local, align 4
  %v3_100092d8 = icmp eq i8 %v4_100092d4, 0
  br i1 %v3_100092d8, label %dec_label_pc_100092e0, label %dec_label_pc_100092d0

dec_label_pc_100092e0:                            ; preds = %dec_label_pc_100092d0
  %v3_100092e0 = icmp eq i32 %v1_100092d0, -1
  br i1 %v3_100092e0, label %dec_label_pc_10009254, label %dec_label_pc_100092e8

dec_label_pc_100092e8:                            ; preds = %dec_label_pc_100092e0
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_100092d0, 2
  br label %dec_label_pc_100092ec

dec_label_pc_100092ec:                            ; preds = %dec_label_pc_1000933c, %dec_label_pc_100092e8
  %v0_100092ec = phi i32 [ 1, %dec_label_pc_1000933c ], [ %phitmp, %dec_label_pc_100092e8 ]
  store i32 %v0_100092ec, i32* %r10.global-to-local, align 4
  store i32 %v0_100092ec, i32* %ctr.global-to-local, align 4
  %v2_100092f424 = load i8, i8* %v3_100092bc, align 1
  %v3_100092f425 = zext i8 %v2_100092f424 to i32
  store i32 %v3_100092f425, i32* %r0.global-to-local, align 4
  %v1_100092f826 = add i32 %v2_100092bc, 1
  store i32 %v1_100092f826, i32* %r9.global-to-local, align 4
  store i8 %v2_100092f424, i8* %tmp, align 1
  %v0_1000930028 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000930029 = add i32 %v0_1000930028, 1
  store i32 %v1_1000930029, i32* %r11.global-to-local, align 4
  %v0_1000930430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000930431 = add i32 %v0_1000930430, -1
  store i32 %v1_1000930431, i32* %ctr.global-to-local, align 4
  %v2_1000930432 = icmp eq i32 %v1_1000930431, 0
  br i1 %v2_1000930432, label %dec_label_pc_10009308, label %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge

dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge: ; preds = %dec_label_pc_100092ec, %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge
  %v1_1000930033 = phi i32 [ %v1_10009300, %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge ], [ %v1_1000930029, %dec_label_pc_100092ec ]
  %v0_100092f4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100092f4 = inttoptr i32 %v0_100092f4.pre to i8*
  %v2_100092f4 = load i8, i8* %v1_100092f4, align 1
  %v3_100092f4 = zext i8 %v2_100092f4 to i32
  store i32 %v3_100092f4, i32* %r0.global-to-local, align 4
  %v1_100092f8 = add i32 %v0_100092f4.pre, 1
  store i32 %v1_100092f8, i32* %r9.global-to-local, align 4
  %v3_100092fc = inttoptr i32 %v1_1000930033 to i8*
  store i8 %v2_100092f4, i8* %v3_100092fc, align 1
  %v0_10009300 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009300 = add i32 %v0_10009300, 1
  store i32 %v1_10009300, i32* %r11.global-to-local, align 4
  %v0_10009304 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009304 = add i32 %v0_10009304, -1
  store i32 %v1_10009304, i32* %ctr.global-to-local, align 4
  %v2_10009304 = icmp eq i32 %v1_10009304, 0
  br i1 %v2_10009304, label %dec_label_pc_10009308, label %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge

dec_label_pc_10009308:                            ; preds = %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge, %dec_label_pc_100092ec
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10009314:                            ; preds = %dec_label_pc_100092ac
  %v0_10009314.pre = load i32, i32* @r1, align 4
  %v1_10009314.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009314 = add i32 %v1_10009314.pre, %v0_10009314.pre
  store i32 %v2_10009314, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_1000931c = add i32 %v2_10009314, 8
  %v4_1000931c = inttoptr i32 %v3_1000931c to i8*
  store i8 45, i8* %v4_1000931c, align 1
  %v1_100092bc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092b8

dec_label_pc_10009328:                            ; preds = %dec_label_pc_10009260
  %v1_10009328 = sub i32 0, %v0_10009240
  store i32 %v1_10009328, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009274

dec_label_pc_1000933c:                            ; preds = %dec_label_pc_100092b8
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092ec

; uselistorder directives
  uselistorder i32 %v1_10009328, { 1, 0 }
  uselistorder i32 %v1_10009304, { 1, 0 }
  uselistorder i32 %v1_10009300, { 1, 0 }
  uselistorder i32 %v0_100092ec, { 1, 0 }
  uselistorder i32 %v1_100092d0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10009278, { 1, 0 }
  uselistorder i32 %v1_1000928c, { 1, 0, 2 }
  uselistorder i32 %v1_1000927c, { 1, 0 }
  uselistorder i32 %v0_10009240, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 9, 7, 2, 3, 5, 4, 8, 6, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 45, { 9, 3, 4, 5, 6, 0, 1, 2, 7, 8, 10 }
  uselistorder i32 55, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 14, 15 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_100092f4.dec_label_pc_100092f4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009274, { 1, 0 }
  uselistorder label %dec_label_pc_10009254, { 0, 2, 1 }
}

define i32 @function_10009348(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009348:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10009358 = icmp eq i32 %arg2, -2143521772
  %v2_1000936c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000936c, i32* %stack_var_-32, align 4
  br i1 %v4_10009358, label %dec_label_pc_100093cc, label %dec_label_pc_1000938c

dec_label_pc_1000938c:                            ; preds = %dec_label_pc_10009348
  %v3_1000938c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000938c, label %dec_label_pc_100093a4, label %dec_label_pc_10009394

dec_label_pc_10009394:                            ; preds = %dec_label_pc_1000938c
  %v3_10009398 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10009398, label %dec_label_pc_100093c0, label %dec_label_pc_100093ec

dec_label_pc_100093a4:                            ; preds = %dec_label_pc_1000938c
  %v1_100093a4 = xor i32 %arg2, -2143551488
  %v3_100093a8 = icmp eq i32 %v1_100093a4, 29717
  br i1 %v3_100093a8, label %dec_label_pc_100093dc, label %dec_label_pc_100093b0

dec_label_pc_100093b0:                            ; preds = %dec_label_pc_100093a4
  %v3_100093b4 = icmp eq i32 %v1_100093a4, 29718
  br i1 %v3_100093b4, label %dec_label_pc_100093e4, label %dec_label_pc_100093ec

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_10009394
  store i32 ptrtoint (i32* @global_var_100093c8.289 to i32), i32* @lr, align 4
  %v2_100093c4 = inttoptr i32 %arg3 to i32*
  %v3_100093c4 = call i32 @function_10009dcc(i32* %v2_100093c4, i32 %arg1)
  br label %dec_label_pc_100093d4

dec_label_pc_100093cc:                            ; preds = %dec_label_pc_10009348
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_100093d0

dec_label_pc_100093d0:                            ; preds = %dec_label_pc_100093e4, %dec_label_pc_100093dc, %dec_label_pc_100093cc
  store i32 268473300, i32* @lr, align 4
  %v0_100093d0 = call i32 @function_10009e68()
  br label %dec_label_pc_100093d4

dec_label_pc_100093d4:                            ; preds = %dec_label_pc_100093c0, %dec_label_pc_100093d0
  %storemerge = phi i32 [ %v0_100093d0, %dec_label_pc_100093d0 ], [ %v3_100093c4, %dec_label_pc_100093c0 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009418

dec_label_pc_100093dc:                            ; preds = %dec_label_pc_100093a4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_100093d0

dec_label_pc_100093e4:                            ; preds = %dec_label_pc_100093b0
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_100093d0

dec_label_pc_100093ec:                            ; preds = %dec_label_pc_100093b0, %dec_label_pc_10009394
  %v0_100093fc = call i32 @__asm_mfcr()
  %v1_10009400 = and i32 %v0_100093fc, 268435456
  %v3_10009400 = icmp eq i32 %v1_10009400, 0
  store i32 %v0_100093fc, i32* %r31.global-to-local, align 4
  br i1 %v3_10009400, label %dec_label_pc_10009418, label %dec_label_pc_1000940c

dec_label_pc_1000940c:                            ; preds = %dec_label_pc_100093ec
  %v0_1000940c = call i32 @function_10009c34()
  %v0_10009410 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009410 = inttoptr i32 %v0_1000940c to i32*
  store i32 %v0_10009410, i32* %v2_10009410, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009418

dec_label_pc_10009418:                            ; preds = %dec_label_pc_100093ec, %dec_label_pc_100093d4, %dec_label_pc_1000940c
  %v0_1000941c = phi i32 [ %v0_100093fc, %dec_label_pc_100093ec ], [ %storemerge, %dec_label_pc_100093d4 ], [ -1, %dec_label_pc_1000940c ]
  ret i32 %v0_1000941c

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009418, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100093d4, { 1, 0 }
}

define i32 @function_10009430(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009430:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10009444 = load i32, i32* @r4, align 4
  %v1_10009444 = add i32 %v0_10009444, -12
  %v2_10009448 = icmp ugt i32 %v1_10009444, 2
  %v2_10009450 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009450, i32* %stack_var_-32, align 4
  br i1 %v2_10009448, label %dec_label_pc_1000947c, label %dec_label_pc_1000946c

dec_label_pc_1000946c:                            ; preds = %dec_label_pc_10009430
  store i32 268473460, i32* @lr, align 4
  %v2_10009470 = call i32 @function_100094b4(i32 3)
  store i32 %v2_10009470, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000949c

dec_label_pc_1000947c:                            ; preds = %dec_label_pc_10009430
  %v0_10009480 = call i32 @__asm_mfcr()
  %v1_10009484 = and i32 %v0_10009480, 268435456
  %v3_10009484 = icmp eq i32 %v1_10009484, 0
  store i32 %v0_10009480, i32* %r31.global-to-local, align 4
  br i1 %v3_10009484, label %dec_label_pc_1000949c, label %dec_label_pc_10009490

dec_label_pc_10009490:                            ; preds = %dec_label_pc_1000947c
  %v0_10009490 = call i32 @function_10009c34()
  %v0_10009494 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009494 = inttoptr i32 %v0_10009490 to i32*
  store i32 %v0_10009494, i32* %v2_10009494, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000949c

dec_label_pc_1000949c:                            ; preds = %dec_label_pc_1000947c, %dec_label_pc_1000946c, %dec_label_pc_10009490
  %v0_100094a0 = phi i32 [ %v0_10009480, %dec_label_pc_1000947c ], [ %v2_10009470, %dec_label_pc_1000946c ], [ -1, %dec_label_pc_10009490 ]
  ret i32 %v0_100094a0

; uselistorder directives
  uselistorder label %dec_label_pc_1000949c, { 2, 0, 1 }
}

define i32 @function_100094b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100094b4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_100094cc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100094cc, i32* %stack_var_-32, align 4
  %v0_100094e8 = call i32 @__asm_mfcr()
  %v1_100094ec = and i32 %v0_100094e8, 268435456
  %v3_100094ec = icmp eq i32 %v1_100094ec, 0
  store i32 %v0_100094e8, i32* %r31.global-to-local, align 4
  br i1 %v3_100094ec, label %dec_label_pc_10009504, label %dec_label_pc_100094f8

dec_label_pc_100094f8:                            ; preds = %dec_label_pc_100094b4
  %v0_100094f8 = call i32 @function_10009c34()
  %v0_100094fc = load i32, i32* %r31.global-to-local, align 4
  %v2_100094fc = inttoptr i32 %v0_100094f8 to i32*
  store i32 %v0_100094fc, i32* %v2_100094fc, align 4
  br label %dec_label_pc_10009504

dec_label_pc_10009504:                            ; preds = %dec_label_pc_100094b4, %dec_label_pc_100094f8
  %v0_10009514 = phi i32 [ %v0_100094e8, %dec_label_pc_100094b4 ], [ -1, %dec_label_pc_100094f8 ]
  ret i32 %v0_10009514

; uselistorder directives
  uselistorder label %dec_label_pc_10009504, { 1, 0 }
}

define i32 @function_10009518() local_unnamed_addr {
dec_label_pc_10009518:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009530 = call i32 @__asm_mfcr()
  %v1_10009534 = and i32 %v0_10009530, 268435456
  %v3_10009534 = icmp eq i32 %v1_10009534, 0
  store i32 %v0_10009530, i32* %r31.global-to-local, align 4
  br i1 %v3_10009534, label %dec_label_pc_1000954c, label %dec_label_pc_10009540

dec_label_pc_10009540:                            ; preds = %dec_label_pc_10009518
  %v0_10009540 = call i32 @function_10009c34()
  %v0_10009544 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009544 = inttoptr i32 %v0_10009540 to i32*
  store i32 %v0_10009544, i32* %v2_10009544, align 4
  br label %dec_label_pc_1000954c

dec_label_pc_1000954c:                            ; preds = %dec_label_pc_10009518, %dec_label_pc_10009540
  %v0_1000955c = phi i32 [ %v0_10009530, %dec_label_pc_10009518 ], [ -1, %dec_label_pc_10009540 ]
  ret i32 %v0_1000955c

; uselistorder directives
  uselistorder label %dec_label_pc_1000954c, { 1, 0 }
}

define i32 @function_10009560() local_unnamed_addr {
dec_label_pc_10009560:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009578 = call i32 @__asm_mfcr()
  %v1_1000957c = and i32 %v0_10009578, 268435456
  %v3_1000957c = icmp eq i32 %v1_1000957c, 0
  store i32 %v0_10009578, i32* %r31.global-to-local, align 4
  br i1 %v3_1000957c, label %dec_label_pc_10009594, label %dec_label_pc_10009588

dec_label_pc_10009588:                            ; preds = %dec_label_pc_10009560
  %v0_10009588 = call i32 @function_10009c34()
  %v0_1000958c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000958c = inttoptr i32 %v0_10009588 to i32*
  store i32 %v0_1000958c, i32* %v2_1000958c, align 4
  br label %dec_label_pc_10009594

dec_label_pc_10009594:                            ; preds = %dec_label_pc_10009560, %dec_label_pc_10009588
  %v0_100095a4 = phi i32 [ %v0_10009578, %dec_label_pc_10009560 ], [ -1, %dec_label_pc_10009588 ]
  ret i32 %v0_100095a4

; uselistorder directives
  uselistorder label %dec_label_pc_10009594, { 1, 0 }
}

define i32 @function_100095a8() local_unnamed_addr {
dec_label_pc_100095a8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100095c0 = call i32 @__asm_mfcr()
  %v1_100095c4 = and i32 %v0_100095c0, 268435456
  %v3_100095c4 = icmp eq i32 %v1_100095c4, 0
  store i32 %v0_100095c0, i32* %r31.global-to-local, align 4
  br i1 %v3_100095c4, label %dec_label_pc_100095dc, label %dec_label_pc_100095d0

dec_label_pc_100095d0:                            ; preds = %dec_label_pc_100095a8
  %v0_100095d0 = call i32 @function_10009c34()
  %v0_100095d4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100095d4 = inttoptr i32 %v0_100095d0 to i32*
  store i32 %v0_100095d4, i32* %v2_100095d4, align 4
  br label %dec_label_pc_100095dc

dec_label_pc_100095dc:                            ; preds = %dec_label_pc_100095a8, %dec_label_pc_100095d0
  %v0_100095ec = phi i32 [ %v0_100095c0, %dec_label_pc_100095a8 ], [ -1, %dec_label_pc_100095d0 ]
  ret i32 %v0_100095ec

; uselistorder directives
  uselistorder label %dec_label_pc_100095dc, { 1, 0 }
}

define i32 @function_100095f0() local_unnamed_addr {
dec_label_pc_100095f0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009608 = call i32 @__asm_mfcr()
  %v1_1000960c = and i32 %v0_10009608, 268435456
  %v3_1000960c = icmp eq i32 %v1_1000960c, 0
  store i32 %v0_10009608, i32* %r31.global-to-local, align 4
  br i1 %v3_1000960c, label %dec_label_pc_10009624, label %dec_label_pc_10009618

dec_label_pc_10009618:                            ; preds = %dec_label_pc_100095f0
  %v0_10009618 = call i32 @function_10009c34()
  %v0_1000961c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000961c = inttoptr i32 %v0_10009618 to i32*
  store i32 %v0_1000961c, i32* %v2_1000961c, align 4
  br label %dec_label_pc_10009624

dec_label_pc_10009624:                            ; preds = %dec_label_pc_100095f0, %dec_label_pc_10009618
  %v0_10009634 = phi i32 [ %v0_10009608, %dec_label_pc_100095f0 ], [ -1, %dec_label_pc_10009618 ]
  ret i32 %v0_10009634

; uselistorder directives
  uselistorder label %dec_label_pc_10009624, { 1, 0 }
}

define i32 @function_10009638(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009638:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009650 = call i32 @__asm_mfcr()
  %v1_10009654 = and i32 %v0_10009650, 268435456
  %v3_10009654 = icmp eq i32 %v1_10009654, 0
  store i32 %v0_10009650, i32* %r31.global-to-local, align 4
  br i1 %v3_10009654, label %dec_label_pc_1000966c, label %dec_label_pc_10009660

dec_label_pc_10009660:                            ; preds = %dec_label_pc_10009638
  %v0_10009660 = call i32 @function_10009c34()
  %v0_10009664 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009664 = inttoptr i32 %v0_10009660 to i32*
  store i32 %v0_10009664, i32* %v2_10009664, align 4
  br label %dec_label_pc_1000966c

dec_label_pc_1000966c:                            ; preds = %dec_label_pc_10009638, %dec_label_pc_10009660
  %v0_1000967c = phi i32 [ %v0_10009650, %dec_label_pc_10009638 ], [ -1, %dec_label_pc_10009660 ]
  ret i32 %v0_1000967c

; uselistorder directives
  uselistorder label %dec_label_pc_1000966c, { 1, 0 }
}

define i32 @function_10009680(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009680:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10009694 = and i32 %arg2, 64
  %v3_10009694 = icmp eq i32 %v1_10009694, 0
  br i1 %v3_10009694, label %dec_label_pc_100096c0, label %dec_label_pc_100096a4

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_10009680
  %v2_100096ac = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100096ac, i32* %stack_var_-32, align 4
  %v0_100096bc = load i32, i32* @r5, align 4
  br label %dec_label_pc_100096c0

dec_label_pc_100096c0:                            ; preds = %dec_label_pc_10009680, %dec_label_pc_100096a4
  %v0_100096c0 = phi i32 [ 0, %dec_label_pc_10009680 ], [ %v0_100096bc, %dec_label_pc_100096a4 ]
  store i32 %v0_100096c0, i32* @r5, align 4
  %v0_100096c8 = call i32 @__asm_mfcr()
  %v1_100096cc = and i32 %v0_100096c8, 268435456
  %v3_100096cc = icmp eq i32 %v1_100096cc, 0
  store i32 %v0_100096c8, i32* %r31.global-to-local, align 4
  br i1 %v3_100096cc, label %dec_label_pc_100096e4, label %dec_label_pc_100096d8

dec_label_pc_100096d8:                            ; preds = %dec_label_pc_100096c0
  %v0_100096d8 = call i32 @function_10009c34()
  %v0_100096dc = load i32, i32* %r31.global-to-local, align 4
  %v2_100096dc = inttoptr i32 %v0_100096d8 to i32*
  store i32 %v0_100096dc, i32* %v2_100096dc, align 4
  br label %dec_label_pc_100096e4

dec_label_pc_100096e4:                            ; preds = %dec_label_pc_100096c0, %dec_label_pc_100096d8
  %v0_100096f4 = phi i32 [ %v0_100096c8, %dec_label_pc_100096c0 ], [ -1, %dec_label_pc_100096d8 ]
  ret i32 %v0_100096f4

; uselistorder directives
  uselistorder label %dec_label_pc_100096e4, { 1, 0 }
  uselistorder label %dec_label_pc_100096c0, { 1, 0 }
}

define i32 @function_100096f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100096f8:
  store i32 %arg1, i32* @r5, align 4
  %v2_10009704 = call i32 @function_10009680(i32 577, i32 577)
  ret i32 %v2_10009704
}

define i32 @function_10009708(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009708:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009720 = call i32 @__asm_mfcr()
  %v1_10009724 = and i32 %v0_10009720, 268435456
  %v3_10009724 = icmp eq i32 %v1_10009724, 0
  store i32 %v0_10009720, i32* %r31.global-to-local, align 4
  br i1 %v3_10009724, label %dec_label_pc_1000973c, label %dec_label_pc_10009730

dec_label_pc_10009730:                            ; preds = %dec_label_pc_10009708
  %v0_10009730 = call i32 @function_10009c34()
  %v0_10009734 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009734 = inttoptr i32 %v0_10009730 to i32*
  store i32 %v0_10009734, i32* %v2_10009734, align 4
  br label %dec_label_pc_1000973c

dec_label_pc_1000973c:                            ; preds = %dec_label_pc_10009708, %dec_label_pc_10009730
  %v0_1000974c = phi i32 [ %v0_10009720, %dec_label_pc_10009708 ], [ -1, %dec_label_pc_10009730 ]
  ret i32 %v0_1000974c

; uselistorder directives
  uselistorder label %dec_label_pc_1000973c, { 1, 0 }
}

define i32 @function_10009750(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009750:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009768 = call i32 @__asm_mfcr()
  %v1_1000976c = and i32 %v0_10009768, 268435456
  %v3_1000976c = icmp eq i32 %v1_1000976c, 0
  store i32 %v0_10009768, i32* %r31.global-to-local, align 4
  br i1 %v3_1000976c, label %dec_label_pc_10009784, label %dec_label_pc_10009778

dec_label_pc_10009778:                            ; preds = %dec_label_pc_10009750
  %v0_10009778 = call i32 @function_10009c34()
  %v0_1000977c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000977c = inttoptr i32 %v0_10009778 to i32*
  store i32 %v0_1000977c, i32* %v2_1000977c, align 4
  br label %dec_label_pc_10009784

dec_label_pc_10009784:                            ; preds = %dec_label_pc_10009750, %dec_label_pc_10009778
  %v0_10009794 = phi i32 [ %v0_10009768, %dec_label_pc_10009750 ], [ -1, %dec_label_pc_10009778 ]
  ret i32 %v0_10009794

; uselistorder directives
  uselistorder label %dec_label_pc_10009784, { 1, 0 }
}

define i32 @function_10009798(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009798:
  %r31.global-to-local = alloca i32, align 4
  %v0_100097b0 = call i32 @__asm_mfcr()
  %v1_100097b4 = and i32 %v0_100097b0, 268435456
  %v3_100097b4 = icmp eq i32 %v1_100097b4, 0
  store i32 %v0_100097b0, i32* %r31.global-to-local, align 4
  br i1 %v3_100097b4, label %dec_label_pc_100097cc, label %dec_label_pc_100097c0

dec_label_pc_100097c0:                            ; preds = %dec_label_pc_10009798
  %v0_100097c0 = call i32 @function_10009c34()
  %v0_100097c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100097c4 = inttoptr i32 %v0_100097c0 to i32*
  store i32 %v0_100097c4, i32* %v2_100097c4, align 4
  br label %dec_label_pc_100097cc

dec_label_pc_100097cc:                            ; preds = %dec_label_pc_10009798, %dec_label_pc_100097c0
  %v0_100097dc = phi i32 [ %v0_100097b0, %dec_label_pc_10009798 ], [ -1, %dec_label_pc_100097c0 ]
  ret i32 %v0_100097dc

; uselistorder directives
  uselistorder label %dec_label_pc_100097cc, { 1, 0 }
}

define i32 @function_100097e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100097e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100097f8 = call i32 @__asm_mfcr()
  %v1_100097fc = and i32 %v0_100097f8, 268435456
  %v3_100097fc = icmp eq i32 %v1_100097fc, 0
  store i32 %v0_100097f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100097fc, label %dec_label_pc_10009814, label %dec_label_pc_10009808

dec_label_pc_10009808:                            ; preds = %dec_label_pc_100097e0
  %v0_10009808 = call i32 @function_10009c34()
  %v0_1000980c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000980c = inttoptr i32 %v0_10009808 to i32*
  store i32 %v0_1000980c, i32* %v2_1000980c, align 4
  br label %dec_label_pc_10009814

dec_label_pc_10009814:                            ; preds = %dec_label_pc_100097e0, %dec_label_pc_10009808
  %v0_10009824 = phi i32 [ %v0_100097f8, %dec_label_pc_100097e0 ], [ -1, %dec_label_pc_10009808 ]
  ret i32 %v0_10009824

; uselistorder directives
  uselistorder label %dec_label_pc_10009814, { 1, 0 }
}

define i32 @function_10009828(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009828:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009840 = call i32 @__asm_mfcr()
  %v1_10009844 = and i32 %v0_10009840, 268435456
  %v3_10009844 = icmp eq i32 %v1_10009844, 0
  store i32 %v0_10009840, i32* %r31.global-to-local, align 4
  br i1 %v3_10009844, label %dec_label_pc_1000985c, label %dec_label_pc_10009850

dec_label_pc_10009850:                            ; preds = %dec_label_pc_10009828
  %v0_10009850 = call i32 @function_10009c34()
  %v0_10009854 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009854 = inttoptr i32 %v0_10009850 to i32*
  store i32 %v0_10009854, i32* %v2_10009854, align 4
  br label %dec_label_pc_1000985c

dec_label_pc_1000985c:                            ; preds = %dec_label_pc_10009828, %dec_label_pc_10009850
  %v0_1000986c = phi i32 [ %v0_10009840, %dec_label_pc_10009828 ], [ -1, %dec_label_pc_10009850 ]
  ret i32 %v0_1000986c

; uselistorder directives
  uselistorder label %dec_label_pc_1000985c, { 1, 0 }
}

define i32 @function_10009870(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009870:
  %r31.global-to-local = alloca i32, align 4
  %v3_10009870 = icmp eq i32 %arg2, 0
  br i1 %v3_10009870, label %dec_label_pc_100098b0, label %dec_label_pc_10009898

dec_label_pc_10009898:                            ; preds = %dec_label_pc_10009870
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100098b0, label %dec_label_pc_100098a0

dec_label_pc_100098a0:                            ; preds = %dec_label_pc_10009898
  %v0_100098a0 = call i32 @function_10009c34()
  %v2_100098a8 = inttoptr i32 %v0_100098a0 to i32*
  store i32 22, i32* %v2_100098a8, align 4
  %v0_100098d4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098d0

dec_label_pc_100098b0:                            ; preds = %dec_label_pc_10009898, %dec_label_pc_10009870
  %v0_100098b4 = call i32 @__asm_mfcr()
  %v1_100098b8 = and i32 %v0_100098b4, 268435456
  %v3_100098b8 = icmp eq i32 %v1_100098b8, 0
  store i32 %v0_100098b4, i32* %r31.global-to-local, align 4
  br i1 %v3_100098b8, label %dec_label_pc_100098d0, label %dec_label_pc_100098c4

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_100098b0
  %v0_100098c4 = call i32 @function_10009c34()
  %v0_100098c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100098c8 = inttoptr i32 %v0_100098c4 to i32*
  store i32 %v0_100098c8, i32* %v2_100098c8, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098d0

dec_label_pc_100098d0:                            ; preds = %dec_label_pc_100098b0, %dec_label_pc_100098a0, %dec_label_pc_100098c4
  %v0_100098d4 = phi i32 [ %v0_100098b4, %dec_label_pc_100098b0 ], [ %v0_100098d4.pre, %dec_label_pc_100098a0 ], [ -1, %dec_label_pc_100098c4 ]
  ret i32 %v0_100098d4

; uselistorder directives
  uselistorder label %dec_label_pc_100098d0, { 2, 0, 1 }
}

define i32 @function_100098e8() local_unnamed_addr {
dec_label_pc_100098e8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009900 = call i32 @__asm_mfcr()
  %v1_10009904 = and i32 %v0_10009900, 268435456
  %v3_10009904 = icmp eq i32 %v1_10009904, 0
  store i32 %v0_10009900, i32* %r31.global-to-local, align 4
  br i1 %v3_10009904, label %dec_label_pc_1000991c, label %dec_label_pc_10009910

dec_label_pc_10009910:                            ; preds = %dec_label_pc_100098e8
  %v0_10009910 = call i32 @function_10009c34()
  %v0_10009914 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009914 = inttoptr i32 %v0_10009910 to i32*
  store i32 %v0_10009914, i32* %v2_10009914, align 4
  br label %dec_label_pc_1000991c

dec_label_pc_1000991c:                            ; preds = %dec_label_pc_100098e8, %dec_label_pc_10009910
  %v0_1000992c = phi i32 [ %v0_10009900, %dec_label_pc_100098e8 ], [ -1, %dec_label_pc_10009910 ]
  ret i32 %v0_1000992c

; uselistorder directives
  uselistorder label %dec_label_pc_1000991c, { 1, 0 }
}

define i32 @function_10009930(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009930:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009948 = call i32 @__asm_mfcr()
  %v1_1000994c = and i32 %v0_10009948, 268435456
  %v3_1000994c = icmp eq i32 %v1_1000994c, 0
  store i32 %v0_10009948, i32* %r31.global-to-local, align 4
  br i1 %v3_1000994c, label %dec_label_pc_10009964, label %dec_label_pc_10009958

dec_label_pc_10009958:                            ; preds = %dec_label_pc_10009930
  %v0_10009958 = call i32 @function_10009c34()
  %v0_1000995c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000995c = inttoptr i32 %v0_10009958 to i32*
  store i32 %v0_1000995c, i32* %v2_1000995c, align 4
  br label %dec_label_pc_10009964

dec_label_pc_10009964:                            ; preds = %dec_label_pc_10009930, %dec_label_pc_10009958
  %v0_10009974 = phi i32 [ %v0_10009948, %dec_label_pc_10009930 ], [ -1, %dec_label_pc_10009958 ]
  ret i32 %v0_10009974

; uselistorder directives
  uselistorder label %dec_label_pc_10009964, { 1, 0 }
}

define i32 @function_10009978(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009978:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009990 = call i32 @__asm_mfcr()
  %v1_10009994 = and i32 %v0_10009990, 268435456
  %v3_10009994 = icmp eq i32 %v1_10009994, 0
  store i32 %v0_10009990, i32* %r31.global-to-local, align 4
  br i1 %v3_10009994, label %dec_label_pc_100099ac, label %dec_label_pc_100099a0

dec_label_pc_100099a0:                            ; preds = %dec_label_pc_10009978
  %v0_100099a0 = call i32 @function_10009c34()
  %v0_100099a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100099a4 = inttoptr i32 %v0_100099a0 to i32*
  store i32 %v0_100099a4, i32* %v2_100099a4, align 4
  br label %dec_label_pc_100099ac

dec_label_pc_100099ac:                            ; preds = %dec_label_pc_10009978, %dec_label_pc_100099a0
  %v0_100099bc = phi i32 [ %v0_10009990, %dec_label_pc_10009978 ], [ -1, %dec_label_pc_100099a0 ]
  ret i32 %v0_100099bc

; uselistorder directives
  uselistorder label %dec_label_pc_100099ac, { 1, 0 }
}

define i32 @function_100099c0(i32* %arg1) local_unnamed_addr {
dec_label_pc_100099c0:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100099dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100099dc, i32* @r30, align 4
  %v2_100099e4 = load i32, i32* %arg1, align 4
  store i32 %v2_100099dc, i32* @r3, align 4
  %v3_100099f0 = icmp eq i32 %v2_100099e4, -1
  br i1 %v3_100099f0, label %dec_label_pc_100099f8, label %dec_label_pc_10009a0c

dec_label_pc_100099f8:                            ; preds = %dec_label_pc_100099c0
  %v0_100099f8 = call i32 @function_10009c34()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009a04 = inttoptr i32 %v0_100099f8 to i32*
  store i32 9, i32* %v2_10009a04, align 4
  %v0_10009a50.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009a4c

dec_label_pc_10009a0c:                            ; preds = %dec_label_pc_100099c0
  %v3_10009a0c = call i32 @function_1000af9c(i32 %v2_100099dc, i32 ptrtoint ([3 x i8]* @global_var_1000af94.291 to i32))
  %v0_10009a14 = call i32 @function_1000af94()
  %v0_10009a1c = load i32, i32* @r31, align 4
  %v1_10009a1c = inttoptr i32 %v0_10009a1c to i32*
  %v2_10009a1c = load i32, i32* %v1_10009a1c, align 4
  store i32 %v2_10009a1c, i32* @r29, align 4
  store i32 -1, i32* %v1_10009a1c, align 4
  store i32 %v2_100099dc, i32* @r3, align 4
  %v2_10009a2c = call i32 @function_1000af9c(i32 %v2_100099dc, i32 1)
  %v0_10009a30 = load i32, i32* @r31, align 4
  %v1_10009a30 = add i32 %v0_10009a30, 12
  %v2_10009a30 = inttoptr i32 %v1_10009a30 to i32*
  %v3_10009a30 = load i32, i32* %v2_10009a30, align 4
  store i32 %v3_10009a30, i32* @r3, align 4
  store i32 268474936, i32* @lr, align 4
  %v0_10009a34 = call i32 @function_1000a600()
  %v0_10009a38 = load i32, i32* @r31, align 4
  store i32 %v0_10009a38, i32* @r3, align 4
  store i32 268474944, i32* @lr, align 4
  %v0_10009a3c = call i32 @function_1000a600()
  store i32 268474952, i32* @lr, align 4
  %v0_10009a44 = call i32 @function_10009518()
  store i32 %v0_10009a44, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009a4c

dec_label_pc_10009a4c:                            ; preds = %dec_label_pc_100099f8, %dec_label_pc_10009a0c
  %v0_10009a50 = phi i32 [ %v0_10009a50.pre, %dec_label_pc_100099f8 ], [ %v0_10009a44, %dec_label_pc_10009a0c ]
  ret i32 %v0_10009a50

; uselistorder directives
  uselistorder i32 %v2_100099dc, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009a4c, { 1, 0 }
}

define i32 @function_10009a64(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009a64:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_10009a64 = load i32, i32* @lr, align 4
  store i32 %v0_10009a64, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268475012, i32* @lr, align 4
  %v2_10009a80 = call i32 @function_10009680(i32 18432, i32 18432)
  store i32 %v2_10009a80, i32* @r29, align 4
  %v1_10009a84 = icmp slt i32 %v2_10009a80, 0
  br i1 %v1_10009a84, label %dec_label_pc_10009b5c, label %dec_label_pc_10009a8c

dec_label_pc_10009a8c:                            ; preds = %dec_label_pc_10009a64
  %v2_10009a8c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009a8c, i32* @r4, align 4
  store i32 268475028, i32* @lr, align 4
  %v1_10009a90 = call i32 @function_1000b370(i32 %v2_10009a8c)
  %v1_10009a94 = icmp slt i32 %v1_10009a90, 0
  br i1 %v1_10009a94, label %dec_label_pc_10009ab8, label %dec_label_pc_10009a9c

dec_label_pc_10009a9c:                            ; preds = %dec_label_pc_10009a8c
  %v0_10009a9c = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268475056, i32* @lr, align 4
  %v2_10009aac = call i32 @function_10009430(i32 %v0_10009a9c)
  %tmp5 = icmp sgt i32 %v2_10009aac, -1
  br i1 %tmp5, label %dec_label_pc_10009ad8, label %dec_label_pc_10009ab8

dec_label_pc_10009ab8:                            ; preds = %dec_label_pc_10009a9c, %dec_label_pc_10009a8c
  %v0_10009ab8 = call i32 @function_10009c34()
  store i32 0, i32* @r31, align 4
  store i32 %v0_10009ab8, i32* @r28, align 4
  %v1_10009ac8 = inttoptr i32 %v0_10009ab8 to i32*
  %v2_10009ac8 = load i32, i32* %v1_10009ac8, align 4
  store i32 %v2_10009ac8, i32* @r29, align 4
  store i32 268475088, i32* @lr, align 4
  %v0_10009acc = call i32 @function_10009518()
  %v0_10009ad0 = load i32, i32* @r29, align 4
  %v1_10009ad0 = load i32, i32* @r28, align 4
  %v2_10009ad0 = inttoptr i32 %v1_10009ad0 to i32*
  store i32 %v0_10009ad0, i32* %v2_10009ad0, align 4
  br label %dec_label_pc_10009b5c

dec_label_pc_10009ad8:                            ; preds = %dec_label_pc_10009a9c
  store i32 48, i32* @r3, align 4
  store i32 268475104, i32* @lr, align 4
  %v0_10009adc = call i32 @function_1000a438()
  store i32 %v0_10009adc, i32* %r31.global-to-local, align 4
  %v3_10009ae0 = icmp eq i32 %v0_10009adc, 0
  br i1 %v3_10009ae0, label %dec_label_pc_10009b34, label %dec_label_pc_10009ae8

dec_label_pc_10009ae8:                            ; preds = %dec_label_pc_10009ad8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10009aec = load i32, i32* @r29, align 4
  %v2_10009aec = inttoptr i32 %v0_10009adc to i32*
  store i32 %v0_10009aec, i32* %v2_10009aec, align 4
  %v0_10009af0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009af0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009af0 = add i32 %v1_10009af0, 4
  %v3_10009af0 = inttoptr i32 %v2_10009af0 to i32*
  store i32 %v0_10009af0, i32* %v3_10009af0, align 4
  %v0_10009af4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009af4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009af4 = add i32 %v1_10009af4, 16
  %v3_10009af4 = inttoptr i32 %v2_10009af4 to i32*
  store i32 %v0_10009af4, i32* %v3_10009af4, align 4
  %v0_10009af8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009af8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009af8 = add i32 %v1_10009af8, 8
  %v3_10009af8 = inttoptr i32 %v2_10009af8 to i32*
  store i32 %v0_10009af8, i32* %v3_10009af8, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10009b00 = icmp ugt i32 %tmp, 511
  %v1_10009b04 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b04 = add i32 %v1_10009b04, 20
  %v3_10009b04 = inttoptr i32 %v2_10009b04 to i32*
  store i32 %tmp, i32* %v3_10009b04, align 4
  br i1 %v2_10009b00, label %dec_label_pc_10009b14, label %dec_label_pc_10009b0c

dec_label_pc_10009b0c:                            ; preds = %dec_label_pc_10009ae8
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10009b10 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b10 = add i32 %v1_10009b10, 20
  %v3_10009b10 = inttoptr i32 %v2_10009b10 to i32*
  store i32 512, i32* %v3_10009b10, align 4
  br label %dec_label_pc_10009b14

dec_label_pc_10009b14:                            ; preds = %dec_label_pc_10009ae8, %dec_label_pc_10009b0c
  %v0_10009b14 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009b14 = add i32 %v0_10009b14, 20
  %v2_10009b14 = inttoptr i32 %v1_10009b14 to i32*
  %v3_10009b14 = load i32, i32* %v2_10009b14, align 4
  store i32 268475168, i32* @lr, align 4
  %v2_10009b1c = call i32 @function_1000a590(i32 1, i32 %v3_10009b14)
  %v3_10009b20 = icmp eq i32 %v2_10009b1c, 0
  %v1_10009b24 = load i32, i32* @r31, align 4
  %v2_10009b24 = add i32 %v1_10009b24, 12
  %v3_10009b24 = inttoptr i32 %v2_10009b24 to i32*
  store i32 %v2_10009b1c, i32* %v3_10009b24, align 4
  br i1 %v3_10009b20, label %dec_label_pc_10009b2c, label %dec_label_pc_10009b50

dec_label_pc_10009b2c:                            ; preds = %dec_label_pc_10009b14
  %v0_10009b2c = load i32, i32* @r31, align 4
  store i32 %v0_10009b2c, i32* @r3, align 4
  store i32 268475188, i32* @lr, align 4
  %v0_10009b30 = call i32 @function_1000a600()
  br label %dec_label_pc_10009b34

dec_label_pc_10009b34:                            ; preds = %dec_label_pc_10009ad8, %dec_label_pc_10009b2c
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10009b40.294 to i32), i32* @lr, align 4
  %v0_10009b3c = call i32 @function_10009518()
  %v0_10009b40 = call i32 @function_10009c34()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10009b48 = inttoptr i32 %v0_10009b40 to i32*
  store i32 12, i32* %v2_10009b48, align 4
  br label %dec_label_pc_10009b5c

dec_label_pc_10009b50:                            ; preds = %dec_label_pc_10009b14
  %v0_10009b58 = call i32 @function_1000af94()
  br label %dec_label_pc_10009b5c

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009a64, %dec_label_pc_10009b34, %dec_label_pc_10009ab8, %dec_label_pc_10009b50
  store i32 %v0_10009a64, i32* %r0.global-to-local, align 4
  %v0_10009b60 = load i32, i32* @r31, align 4
  ret i32 %v0_10009b60

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000a590, { 42, 24, 26, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 25, 0, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10009518, { 19, 18, 17, 34, 33, 32, 31, 30, 29, 1, 0, 28, 27, 26, 25, 24, 23, 22, 21, 20, 16, 3, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_10009b5c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10009b34, { 1, 0 }
  uselistorder label %dec_label_pc_10009b14, { 1, 0 }
}

define i32 @function_10009b74(i32* %arg1) local_unnamed_addr {
dec_label_pc_10009b74:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10009b78 = load i32, i32* @lr, align 4
  store i32 %v0_10009b78, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009b90 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009b90, i32* @r3, align 4
  %v3_10009b9c = call i32 @function_1000af9c(i32 %v2_10009b90, i32 ptrtoint ([3 x i8]* @global_var_1000af94.291 to i32))
  %v0_10009ba4 = call i32 @function_1000af94()
  br label %dec_label_pc_10009ba8

dec_label_pc_10009ba8:                            ; preds = %dec_label_pc_10009be4, %dec_label_pc_10009b74
  %v0_10009ba8 = load i32, i32* @r31, align 4
  %v1_10009ba8 = add i32 %v0_10009ba8, 4
  %v2_10009ba8 = inttoptr i32 %v1_10009ba8 to i32*
  %v3_10009ba8 = load i32, i32* %v2_10009ba8, align 4
  store i32 %v3_10009ba8, i32* %r0.global-to-local, align 4
  %v1_10009bac = add i32 %v0_10009ba8, 8
  %v2_10009bac = inttoptr i32 %v1_10009bac to i32*
  %v3_10009bac = load i32, i32* %v2_10009bac, align 4
  store i32 %v3_10009bac, i32* %r9.global-to-local, align 4
  %v3_10009bb0 = icmp ugt i32 %v3_10009bac, %v3_10009ba8
  br i1 %v3_10009bb0, label %dec_label_pc_10009be4, label %dec_label_pc_10009bb8

dec_label_pc_10009bb8:                            ; preds = %dec_label_pc_10009ba8
  %v1_10009bb8 = inttoptr i32 %v0_10009ba8 to i32*
  %v2_10009bb8 = load i32, i32* %v1_10009bb8, align 4
  store i32 %v2_10009bb8, i32* @r3, align 4
  %v1_10009bbc = add i32 %v0_10009ba8, 12
  %v2_10009bbc = inttoptr i32 %v1_10009bbc to i32*
  %v3_10009bbc = load i32, i32* %v2_10009bbc, align 4
  %v1_10009bc0 = add i32 %v0_10009ba8, 20
  %v2_10009bc0 = inttoptr i32 %v1_10009bc0 to i32*
  %v3_10009bc0 = load i32, i32* %v2_10009bc0, align 4
  store i32 %v3_10009bc0, i32* @r5, align 4
  store i32 268475336, i32* @lr, align 4
  %v4_10009bc4 = inttoptr i32 %v2_10009bb8 to i32*
  %v5_10009bc4 = call i32 @function_1000b3e4(i32* %v4_10009bc4, i32 %v3_10009bbc, i32 %v3_10009bc0, i32 %v3_10009bac)
  %v2_10009bc8 = icmp sgt i32 %v5_10009bc4, 0
  br i1 %v2_10009bc8, label %dec_label_pc_10009bd8, label %dec_label_pc_10009bd0

dec_label_pc_10009bd0:                            ; preds = %dec_label_pc_10009bb8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009c10

dec_label_pc_10009bd8:                            ; preds = %dec_label_pc_10009bb8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10009bdc = load i32, i32* @r31, align 4
  %v2_10009bdc = add i32 %v1_10009bdc, 8
  %v3_10009bdc = inttoptr i32 %v2_10009bdc to i32*
  store i32 %v5_10009bc4, i32* %v3_10009bdc, align 4
  %v0_10009be0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009be0 = load i32, i32* @r31, align 4
  %v2_10009be0 = add i32 %v1_10009be0, 4
  %v3_10009be0 = inttoptr i32 %v2_10009be0 to i32*
  store i32 %v0_10009be0, i32* %v3_10009be0, align 4
  %v0_10009be4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009be4

dec_label_pc_10009be4:                            ; preds = %dec_label_pc_10009ba8, %dec_label_pc_10009bd8
  %v1_10009bf8 = phi i32 [ %v0_10009ba8, %dec_label_pc_10009ba8 ], [ %v0_10009be4.pre, %dec_label_pc_10009bd8 ]
  %v1_10009be4 = add i32 %v1_10009bf8, 4
  %v2_10009be4 = inttoptr i32 %v1_10009be4 to i32*
  %v3_10009be4 = load i32, i32* %v2_10009be4, align 4
  store i32 %v3_10009be4, i32* %r9.global-to-local, align 4
  %v1_10009be8 = add i32 %v1_10009bf8, 12
  %v2_10009be8 = inttoptr i32 %v1_10009be8 to i32*
  %v3_10009be8 = load i32, i32* %v2_10009be8, align 4
  store i32 %v3_10009be8, i32* %r11.global-to-local, align 4
  %v2_10009bec = add i32 %v3_10009be8, %v3_10009be4
  store i32 %v2_10009bec, i32* @r29, align 4
  %v1_10009bf0 = add i32 %v2_10009bec, 8
  %v2_10009bf0 = inttoptr i32 %v1_10009bf0 to i16*
  %v3_10009bf0 = load i16, i16* %v2_10009bf0, align 2
  %v4_10009bf0 = zext i16 %v3_10009bf0 to i32
  %v2_10009bf4 = add i32 %v4_10009bf0, %v3_10009be4
  store i32 %v2_10009bf4, i32* %r0.global-to-local, align 4
  store i32 %v2_10009bf4, i32* %v2_10009be4, align 4
  %v0_10009bfc = load i32, i32* @r29, align 4
  %v1_10009bfc = add i32 %v0_10009bfc, 4
  %v2_10009bfc = inttoptr i32 %v1_10009bfc to i32*
  %v3_10009bfc = load i32, i32* %v2_10009bfc, align 4
  store i32 %v3_10009bfc, i32* %r0.global-to-local, align 4
  %v1_10009c00 = load i32, i32* @r31, align 4
  %v2_10009c00 = add i32 %v1_10009c00, 16
  %v3_10009c00 = inttoptr i32 %v2_10009c00 to i32*
  store i32 %v3_10009bfc, i32* %v3_10009c00, align 4
  %v0_10009c04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009c04 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009c04 = add i32 %v1_10009c04, %v0_10009c04
  %v3_10009c04 = inttoptr i32 %v2_10009c04 to i32*
  %v4_10009c04 = load i32, i32* %v3_10009c04, align 4
  store i32 %v4_10009c04, i32* %r0.global-to-local, align 4
  %v3_10009c08 = icmp eq i32 %v4_10009c04, 0
  br i1 %v3_10009c08, label %dec_label_pc_10009ba8, label %dec_label_pc_10009c10

dec_label_pc_10009c10:                            ; preds = %dec_label_pc_10009be4, %dec_label_pc_10009bd0
  store i32 %v2_10009b90, i32* @r3, align 4
  %v2_10009c18 = call i32 @function_1000af9c(i32 %v2_10009b90, i32 1)
  store i32 %v0_10009b78, i32* %r0.global-to-local, align 4
  %v0_10009c20 = load i32, i32* @r29, align 4
  ret i32 %v0_10009c20

; uselistorder directives
  uselistorder i32 %v1_10009bf8, { 1, 0 }
  uselistorder i32 %v0_10009ba8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10009b90, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009be4, { 1, 0 }
}

define i32 @function_10009c34() local_unnamed_addr {
dec_label_pc_10009c34:
  ret i32 ptrtoint (i32* @global_var_1001c6b4.296 to i32)
}

define i32 @function_10009c40(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009c40:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10009c48 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475476, i32* @lr, align 4
  %v1_10009c50 = call i32 @function_1000b824(i32 %v2_10009c48)
  %v3_10009c58 = load i32, i32* %stack_var_-24, align 4
  %v2_10009c5c = add i32 %v3_10009c58, %tmp
  %v1_10009c64 = mul i32 %v2_10009c5c, 10000
  %v1_10009c70 = and i32 %v1_10009c64, 2147483632
  ret i32 %v1_10009c70
}

define i32 @function_10009c78(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c78:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10009c78 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10009c78, label %dec_label_pc_10009c8c, label %dec_label_pc_10009c88

dec_label_pc_10009c88:                            ; preds = %dec_label_pc_10009c78
  %v0_10009c88 = call i32 @function_1000b9e8()
  store i32 %v0_10009c88, i32* @r3, align 4
  br label %dec_label_pc_10009c8c

dec_label_pc_10009c8c:                            ; preds = %dec_label_pc_10009c78, %dec_label_pc_10009c88
  %v1_10009c8c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009c8c, i32* %r9.global-to-local, align 4
  %v4_10009c8c = icmp eq i32 %v1_10009c8c, 0
  %v2_10009c90 = add i32 %arg3, %arg2
  store i32 %v2_10009c90, i32* %r4.global-to-local, align 4
  %v0_10009c94 = load i32, i32* @r3, align 4
  %v2_10009c94 = add i32 %v0_10009c94, %arg3
  store i32 %v2_10009c94, i32* %r10.global-to-local, align 4
  br i1 %v4_10009c8c, label %dec_label_pc_10009cbc, label %dec_label_pc_10009c9c

dec_label_pc_10009c9c:                            ; preds = %dec_label_pc_10009c8c
  %v1_10009c9c = urem i32 %v2_10009c94, 4
  %v3_10009c9c = icmp eq i32 %v1_10009c9c, 0
  br i1 %v3_10009c9c, label %dec_label_pc_10009ca4, label %dec_label_pc_10009cf0

dec_label_pc_10009ca4:                            ; preds = %dec_label_pc_10009d08.dec_label_pc_10009ca4_crit_edge, %dec_label_pc_10009c9c
  %v1_10009cb0.pre = phi i32 [ %v1_10009cb0.pre.pre, %dec_label_pc_10009d08.dec_label_pc_10009ca4_crit_edge ], [ %v2_10009c94, %dec_label_pc_10009c9c ]
  %v0_10009ca4 = phi i32 [ %v1_10009d08, %dec_label_pc_10009d08.dec_label_pc_10009ca4_crit_edge ], [ %v1_10009c8c, %dec_label_pc_10009c9c ]
  store i32 %v0_10009ca4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009ca8

dec_label_pc_10009ca8:                            ; preds = %dec_label_pc_10009ca8, %dec_label_pc_10009ca4
  %v1_10009cb0 = phi i32 [ %v2_10009cb4, %dec_label_pc_10009ca8 ], [ %v1_10009cb0.pre, %dec_label_pc_10009ca4 ]
  %v0_10009ca8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009ca8 = add i32 %v0_10009ca8, -4
  %v2_10009ca8 = inttoptr i32 %v1_10009ca8 to i32*
  %v3_10009ca8 = load i32, i32* %v2_10009ca8, align 4
  %v1_10009cac = add i32 %v0_10009ca8, -8
  %v2_10009cac = inttoptr i32 %v1_10009cac to i32*
  %v3_10009cac = load i32, i32* %v2_10009cac, align 4
  store i32 %v3_10009cac, i32* %r9.global-to-local, align 4
  store i32 %v1_10009cac, i32* %r4.global-to-local, align 4
  %v2_10009cb0 = add i32 %v1_10009cb0, -4
  %v3_10009cb0 = inttoptr i32 %v2_10009cb0 to i32*
  store i32 %v3_10009ca8, i32* %v3_10009cb0, align 4
  %v0_10009cb4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009cb4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009cb4 = add i32 %v1_10009cb4, -8
  %v3_10009cb4 = inttoptr i32 %v2_10009cb4 to i32*
  store i32 %v0_10009cb4, i32* %v3_10009cb4, align 4
  store i32 %v2_10009cb4, i32* %r10.global-to-local, align 4
  %v0_10009cb8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009cb8 = add i32 %v0_10009cb8, -1
  store i32 %v1_10009cb8, i32* %ctr.global-to-local, align 4
  %v2_10009cb8 = icmp eq i32 %v1_10009cb8, 0
  br i1 %v2_10009cb8, label %dec_label_pc_10009cbc, label %dec_label_pc_10009ca8

dec_label_pc_10009cbc:                            ; preds = %dec_label_pc_10009ca8, %dec_label_pc_10009d08, %dec_label_pc_10009c8c
  %v0_10009cbc = load i32, i32* @r11, align 4
  %v1_10009cbc = urem i32 %v0_10009cbc, 8
  store i32 %v1_10009cbc, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10009cbc, 4
  br i1 %tmp, label %dec_label_pc_10009cd4, label %dec_label_pc_10009cc8

dec_label_pc_10009cc8:                            ; preds = %dec_label_pc_10009cbc
  %v0_10009cc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009cc8 = add i32 %v0_10009cc8, -4
  %v2_10009cc8 = inttoptr i32 %v1_10009cc8 to i32*
  %v3_10009cc8 = load i32, i32* %v2_10009cc8, align 4
  store i32 %v1_10009cc8, i32* %r4.global-to-local, align 4
  %v1_10009ccc = add nsw i32 %v1_10009cbc, -4
  store i32 %v1_10009ccc, i32* %r5.global-to-local, align 4
  %v1_10009cd0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009cd0 = add i32 %v1_10009cd0, -4
  %v3_10009cd0 = inttoptr i32 %v2_10009cd0 to i32*
  store i32 %v3_10009cc8, i32* %v3_10009cd0, align 4
  store i32 %v2_10009cd0, i32* %r10.global-to-local, align 4
  %v0_10009cd4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009cd4

dec_label_pc_10009cd4:                            ; preds = %dec_label_pc_10009cbc, %dec_label_pc_10009cc8
  %v0_10009cdc = phi i32 [ %v1_10009cbc, %dec_label_pc_10009cbc ], [ %v0_10009cd4.pre, %dec_label_pc_10009cc8 ]
  %v3_10009cd4 = icmp eq i32 %v0_10009cdc, 0
  br i1 %v3_10009cd4, label %dec_label_pc_10009d14, label %dec_label_pc_10009cdc

dec_label_pc_10009cdc:                            ; preds = %dec_label_pc_10009cd4
  store i32 %v0_10009cdc, i32* %ctr.global-to-local, align 4
  %v2_10009ce4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009ce0

dec_label_pc_10009ce0:                            ; preds = %dec_label_pc_10009ce0, %dec_label_pc_10009cdc
  %v2_10009ce4 = phi i32 [ %v3_10009ce4, %dec_label_pc_10009ce0 ], [ %v2_10009ce4.pre, %dec_label_pc_10009cdc ]
  %v0_10009ce0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009ce0 = add i32 %v0_10009ce0, -1
  %v2_10009ce0 = inttoptr i32 %v1_10009ce0 to i8*
  %v3_10009ce0 = load i8, i8* %v2_10009ce0, align 1
  store i32 %v1_10009ce0, i32* %r4.global-to-local, align 4
  %v3_10009ce4 = add i32 %v2_10009ce4, -1
  %v4_10009ce4 = inttoptr i32 %v3_10009ce4 to i8*
  store i8 %v3_10009ce0, i8* %v4_10009ce4, align 1
  store i32 %v3_10009ce4, i32* %r10.global-to-local, align 4
  %v0_10009ce8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ce8 = add i32 %v0_10009ce8, -1
  store i32 %v1_10009ce8, i32* %ctr.global-to-local, align 4
  %v2_10009ce8 = icmp eq i32 %v1_10009ce8, 0
  br i1 %v2_10009ce8, label %dec_label_pc_10009d14, label %dec_label_pc_10009ce0

dec_label_pc_10009cf0:                            ; preds = %dec_label_pc_10009c9c
  %v1_10009cf0 = sub nsw i32 4, %v1_10009c9c
  store i32 %v1_10009cf0, i32* %ctr.global-to-local, align 4
  %v2_10009cf8 = sub i32 %arg3, %v1_10009cf0
  store i32 %v2_10009cf8, i32* @r11, align 4
  %v1_10009cfc8 = add i32 %v2_10009c90, -1
  %v2_10009cfc9 = inttoptr i32 %v1_10009cfc8 to i8*
  %v3_10009cfc10 = load i8, i8* %v2_10009cfc9, align 1
  store i32 %v1_10009cfc8, i32* %r4.global-to-local, align 4
  %v3_10009d0012 = add i32 %v2_10009c94, -1
  %v4_10009d0013 = inttoptr i32 %v3_10009d0012 to i8*
  store i8 %v3_10009cfc10, i8* %v4_10009d0013, align 1
  store i32 %v3_10009d0012, i32* %r10.global-to-local, align 4
  %v0_10009d0414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d0415 = add i32 %v0_10009d0414, -1
  store i32 %v1_10009d0415, i32* %ctr.global-to-local, align 4
  %v2_10009d0416 = icmp eq i32 %v1_10009d0415, 0
  br i1 %v2_10009d0416, label %dec_label_pc_10009d08, label %dec_label_pc_10009cfc.dec_label_pc_10009cfc_crit_edge

dec_label_pc_10009cfc.dec_label_pc_10009cfc_crit_edge: ; preds = %dec_label_pc_10009cf0, %dec_label_pc_10009cfc.dec_label_pc_10009cfc_crit_edge
  %v3_10009d0017 = phi i32 [ %v3_10009d00, %dec_label_pc_10009cfc.dec_label_pc_10009cfc_crit_edge ], [ %v3_10009d0012, %dec_label_pc_10009cf0 ]
  %v0_10009cfc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009cfc = add i32 %v0_10009cfc.pre, -1
  %v2_10009cfc = inttoptr i32 %v1_10009cfc to i8*
  %v3_10009cfc = load i8, i8* %v2_10009cfc, align 1
  store i32 %v1_10009cfc, i32* %r4.global-to-local, align 4
  %v3_10009d00 = add i32 %v3_10009d0017, -1
  %v4_10009d00 = inttoptr i32 %v3_10009d00 to i8*
  store i8 %v3_10009cfc, i8* %v4_10009d00, align 1
  store i32 %v3_10009d00, i32* %r10.global-to-local, align 4
  %v0_10009d04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d04 = add i32 %v0_10009d04, -1
  store i32 %v1_10009d04, i32* %ctr.global-to-local, align 4
  %v2_10009d04 = icmp eq i32 %v1_10009d04, 0
  br i1 %v2_10009d04, label %dec_label_pc_10009d08, label %dec_label_pc_10009cfc.dec_label_pc_10009cfc_crit_edge

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009cfc.dec_label_pc_10009cfc_crit_edge, %dec_label_pc_10009cf0
  %v0_10009d08 = load i32, i32* @r11, align 4
  %v1_10009d08 = call i32 @__asm_rlwinm.(i32 %v0_10009d08, i32 29, i32 3, i32 31)
  store i32 %v1_10009d08, i32* %r9.global-to-local, align 4
  %v4_10009d08 = icmp eq i32 %v1_10009d08, 0
  br i1 %v4_10009d08, label %dec_label_pc_10009cbc, label %dec_label_pc_10009d08.dec_label_pc_10009ca4_crit_edge

dec_label_pc_10009d08.dec_label_pc_10009ca4_crit_edge: ; preds = %dec_label_pc_10009d08
  %v1_10009cb0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009ca4

dec_label_pc_10009d14:                            ; preds = %dec_label_pc_10009ce0, %dec_label_pc_10009cd4
  %v0_10009d14 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10009d14

; uselistorder directives
  uselistorder i32 %v1_10009d08, { 1, 2, 0 }
  uselistorder i32 %v1_10009d04, { 1, 0 }
  uselistorder i32 %v3_10009d00, { 1, 2, 0 }
  uselistorder i32 %v1_10009ce8, { 1, 0 }
  uselistorder i32 %v3_10009ce4, { 1, 2, 0 }
  uselistorder i32 %v1_10009cbc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10009cb8, { 1, 0 }
  uselistorder i32 %v2_10009cb4, { 1, 2, 0 }
  uselistorder i32 %v1_10009c9c, { 1, 0 }
  uselistorder i32 %v2_10009c94, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 8, 9, 1, 5, 2, 7, 3, 6, 4 }
  uselistorder i32* %r10.global-to-local, { 8, 0, 9, 1, 7, 2, 5, 3, 6, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 0, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_10009cfc.dec_label_pc_10009cfc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009cd4, { 1, 0 }
  uselistorder label %dec_label_pc_10009cbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009c8c, { 1, 0 }
}

define i32 @function_10009d1c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009d1c:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10009d1c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009d1c, i32* %r9.global-to-local, align 4
  %v4_10009d1c = icmp eq i32 %v1_10009d1c, 0
  %v1_10009d24 = add i32 %arg1, -4
  store i32 %v1_10009d24, i32* %r11.global-to-local, align 4
  %v1_10009d28 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10009d2c = call i32 @__asm_rlwimi(i32 %v1_10009d28, i32 16, i32 0, i32 15)
  %v2_10009d2c = trunc i32 %v1_10009d2c to i8
  br i1 %v4_10009d1c, label %dec_label_pc_10009d54, label %dec_label_pc_10009d34

dec_label_pc_10009d34:                            ; preds = %dec_label_pc_10009d1c
  %v0_10009d34 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009d34 = urem i32 %v0_10009d34, 4
  %v3_10009d34 = icmp eq i32 %v1_10009d34, 0
  br i1 %v3_10009d34, label %dec_label_pc_10009d34.dec_label_pc_10009d3c_crit_edge, label %dec_label_pc_10009d84

dec_label_pc_10009d34.dec_label_pc_10009d3c_crit_edge: ; preds = %dec_label_pc_10009d34
  %v0_10009d3c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009d3c

dec_label_pc_10009d3c:                            ; preds = %dec_label_pc_10009d9c.dec_label_pc_10009d3c_crit_edge, %dec_label_pc_10009d34.dec_label_pc_10009d3c_crit_edge
  %v0_10009d40.pre = phi i32 [ %v0_10009d34, %dec_label_pc_10009d34.dec_label_pc_10009d3c_crit_edge ], [ %v0_10009d40.pre.pre, %dec_label_pc_10009d9c.dec_label_pc_10009d3c_crit_edge ]
  %v0_10009d3c = phi i32 [ %v0_10009d3c.pre, %dec_label_pc_10009d34.dec_label_pc_10009d3c_crit_edge ], [ %v1_10009d9c, %dec_label_pc_10009d9c.dec_label_pc_10009d3c_crit_edge ]
  store i32 %v0_10009d3c, i32* %ctr.global-to-local, align 4
  %v1_10009d44 = sext i8 %v2_10009d2c to i32
  br label %dec_label_pc_10009d40

dec_label_pc_10009d40:                            ; preds = %dec_label_pc_10009d40, %dec_label_pc_10009d3c
  %v0_10009d40 = phi i32 [ %v1_10009d4c, %dec_label_pc_10009d40 ], [ %v0_10009d40.pre, %dec_label_pc_10009d3c ]
  %v1_10009d40 = add i32 %v0_10009d40, 4
  store i32 %v1_10009d40, i32* %r9.global-to-local, align 4
  %v4_10009d44 = inttoptr i32 %v1_10009d40 to i32*
  store i32 %v1_10009d44, i32* %v4_10009d44, align 4
  %v2_10009d48 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009d48 = add i32 %v2_10009d48, 4
  %v4_10009d48 = inttoptr i32 %v3_10009d48 to i32*
  store i32 %v1_10009d44, i32* %v4_10009d48, align 4
  %v0_10009d4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10009d4c = add i32 %v0_10009d4c, 4
  store i32 %v1_10009d4c, i32* %r11.global-to-local, align 4
  %v0_10009d50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d50 = add i32 %v0_10009d50, -1
  store i32 %v1_10009d50, i32* %ctr.global-to-local, align 4
  %v2_10009d50 = icmp eq i32 %v1_10009d50, 0
  br i1 %v2_10009d50, label %dec_label_pc_10009d54, label %dec_label_pc_10009d40

dec_label_pc_10009d54:                            ; preds = %dec_label_pc_10009d40, %dec_label_pc_10009d9c, %dec_label_pc_10009d1c
  %v0_10009d54 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009d54 = urem i32 %v0_10009d54, 8
  store i32 %v1_10009d54, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009d54, 4
  br i1 %tmp, label %dec_label_pc_10009d68, label %dec_label_pc_10009d60

dec_label_pc_10009d60:                            ; preds = %dec_label_pc_10009d54
  %v1_10009d60 = sext i8 %v2_10009d2c to i32
  %v2_10009d60 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009d60 = add i32 %v2_10009d60, 4
  %v4_10009d60 = inttoptr i32 %v3_10009d60 to i32*
  store i32 %v1_10009d60, i32* %v4_10009d60, align 4
  store i32 %v3_10009d60, i32* %r11.global-to-local, align 4
  %v0_10009d64 = load i32, i32* @r5, align 4
  %v1_10009d64 = add i32 %v0_10009d64, -4
  store i32 %v1_10009d64, i32* @r5, align 4
  br label %dec_label_pc_10009d68

dec_label_pc_10009d68:                            ; preds = %dec_label_pc_10009d54, %dec_label_pc_10009d60
  %v0_10009d68 = phi i32 [ %v1_10009d54, %dec_label_pc_10009d54 ], [ %v1_10009d64, %dec_label_pc_10009d60 ]
  %v3_10009d68 = icmp eq i32 %v0_10009d68, 0
  %v0_10009d6c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009d68, i32 %v0_10009d6c)
  %v0_10009d70 = load i32, i32* @r5, align 4
  store i32 %v0_10009d70, i32* %ctr.global-to-local, align 4
  %v0_10009d74 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009d74 = add i32 %v0_10009d74, 3
  store i32 %v1_10009d74, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009d78

dec_label_pc_10009d78:                            ; preds = %dec_label_pc_10009d78, %dec_label_pc_10009d68
  %v3_10009d78 = phi i32 [ %v4_10009d78, %dec_label_pc_10009d78 ], [ %v1_10009d74, %dec_label_pc_10009d68 ]
  %v4_10009d78 = add i32 %v3_10009d78, 1
  %v5_10009d78 = inttoptr i32 %v4_10009d78 to i8*
  store i8 %v2_10009d2c, i8* %v5_10009d78, align 1
  store i32 %v4_10009d78, i32* %r9.global-to-local, align 4
  %v0_10009d7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d7c = add i32 %v0_10009d7c, -1
  store i32 %v1_10009d7c, i32* %ctr.global-to-local, align 4
  %v2_10009d7c = icmp eq i32 %v1_10009d7c, 0
  br i1 %v2_10009d7c, label %dec_label_pc_10009da8, label %dec_label_pc_10009d78

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d34
  %v1_10009d84 = sub nsw i32 4, %v1_10009d34
  store i32 %v1_10009d84, i32* %ctr.global-to-local, align 4
  %v1_10009d8c = load i32, i32* %r5.global-to-local, align 4
  %v2_10009d8c = sub i32 %v1_10009d8c, %v1_10009d84
  store i32 %v2_10009d8c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009d90

dec_label_pc_10009d90:                            ; preds = %dec_label_pc_10009d90, %dec_label_pc_10009d84
  %v3_10009d90 = phi i32 [ %v1_10009d94, %dec_label_pc_10009d90 ], [ %v0_10009d34, %dec_label_pc_10009d84 ]
  %v4_10009d90 = add i32 %v3_10009d90, 4
  %v5_10009d90 = inttoptr i32 %v4_10009d90 to i8*
  store i8 %v2_10009d2c, i8* %v5_10009d90, align 1
  %v0_10009d94 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009d94 = add i32 %v0_10009d94, 1
  store i32 %v1_10009d94, i32* %r11.global-to-local, align 4
  %v0_10009d98 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d98 = add i32 %v0_10009d98, -1
  store i32 %v1_10009d98, i32* %ctr.global-to-local, align 4
  %v2_10009d98 = icmp eq i32 %v1_10009d98, 0
  br i1 %v2_10009d98, label %dec_label_pc_10009d9c, label %dec_label_pc_10009d90

dec_label_pc_10009d9c:                            ; preds = %dec_label_pc_10009d90
  %v0_10009d9c = load i32, i32* %r5.global-to-local, align 4
  %v1_10009d9c = call i32 @__asm_rlwinm.(i32 %v0_10009d9c, i32 29, i32 3, i32 31)
  store i32 %v1_10009d9c, i32* %r9.global-to-local, align 4
  %v4_10009d9c = icmp eq i32 %v1_10009d9c, 0
  br i1 %v4_10009d9c, label %dec_label_pc_10009d54, label %dec_label_pc_10009d9c.dec_label_pc_10009d3c_crit_edge

dec_label_pc_10009d9c.dec_label_pc_10009d3c_crit_edge: ; preds = %dec_label_pc_10009d9c
  %v0_10009d40.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009d3c

dec_label_pc_10009da8:                            ; preds = %dec_label_pc_10009d78
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009d9c, { 1, 2, 0 }
  uselistorder i32 %v1_10009d98, { 1, 0 }
  uselistorder i32 %v1_10009d94, { 1, 0 }
  uselistorder i32 %v1_10009d7c, { 1, 0 }
  uselistorder i32 %v4_10009d78, { 1, 2, 0 }
  uselistorder i32 %v1_10009d54, { 2, 1, 0 }
  uselistorder i32 %v1_10009d50, { 1, 0 }
  uselistorder i32 %v1_10009d4c, { 1, 0 }
  uselistorder i32 %v1_10009d34, { 1, 0 }
  uselistorder i32 %v0_10009d34, { 2, 1, 0 }
  uselistorder i8 %v2_10009d2c, { 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_10009d68, { 1, 0 }
  uselistorder label %dec_label_pc_10009d54, { 1, 0, 2 }
}

define i32 @function_10009dac(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10009dac:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009dac = add i32 %arg1, -1
  %v1_10009db0 = sub i32 %v2_10009dac, %tmp
  store i32 %v1_10009db0, i32* %r9.global-to-local, align 4
  %v2_10009db44 = load i8, i8* %arg2, align 1
  %v1_10009db86 = add i32 %tmp, 1
  store i32 %v1_10009db86, i32* %r4.global-to-local, align 4
  %v3_10009dbc7 = icmp eq i8 %v2_10009db44, 0
  store i1 %v3_10009dbc7, i1* %cr7_eq.global-to-local, align 1
  %v5_10009dc08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10009db44, i8* %v5_10009dc08, align 1
  %v0_10009dc49 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009dc49, label %dec_label_pc_10009dc8, label %dec_label_pc_10009db4.dec_label_pc_10009db4_crit_edge

dec_label_pc_10009db4.dec_label_pc_10009db4_crit_edge: ; preds = %dec_label_pc_10009dac, %dec_label_pc_10009db4.dec_label_pc_10009db4_crit_edge
  %v0_10009db4.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10009dc0.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009db4 = inttoptr i32 %v0_10009db4.pre to i8*
  %v2_10009db4 = load i8, i8* %v1_10009db4, align 1
  %v1_10009db8 = add i32 %v0_10009db4.pre, 1
  store i32 %v1_10009db8, i32* %r4.global-to-local, align 4
  %v3_10009dbc = icmp eq i8 %v2_10009db4, 0
  store i1 %v3_10009dbc, i1* %cr7_eq.global-to-local, align 1
  %v4_10009dc0 = add i32 %v1_10009db8, %v2_10009dc0.pre
  %v5_10009dc0 = inttoptr i32 %v4_10009dc0 to i8*
  store i8 %v2_10009db4, i8* %v5_10009dc0, align 1
  %v0_10009dc4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009dc4, label %dec_label_pc_10009dc8, label %dec_label_pc_10009db4.dec_label_pc_10009db4_crit_edge

dec_label_pc_10009dc8:                            ; preds = %dec_label_pc_10009db4.dec_label_pc_10009db4_crit_edge, %dec_label_pc_10009dac
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009db4.dec_label_pc_10009db4_crit_edge, { 1, 0 }
}

define i32 @function_10009dcc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009dcc:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009dd0 = load i32, i32* @lr, align 4
  store i32 %v0_10009dd0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009de0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268475892, i32* @lr, align 4
  %v3_10009df0 = call i32 @function_10009348(i32 1076655123, i32 %v2_10009de0, i32 %v2_10009de0)
  %v2_10009df4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009df4, i32* @r4, align 4
  store i32 %v3_10009df0, i32* @r30, align 4
  %v3_10009df8 = icmp eq i32 %v3_10009df0, 0
  %v0_10009e00 = load i32, i32* @r31, align 4
  br i1 %v3_10009df8, label %dec_label_pc_10009e08, label %dec_label_pc_10009e50

dec_label_pc_10009e08:                            ; preds = %dec_label_pc_10009dcc
  %v1_10009e00 = add i32 %v0_10009e00, 17
  %v3_10009e20 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10009e20, i32* %r0.global-to-local, align 4
  %v2_10009e24 = add i32 %v0_10009e00, 4
  %v3_10009e24 = inttoptr i32 %v2_10009e24 to i32*
  store i32 %tmp7, i32* %v3_10009e24, align 4
  %v0_10009e28 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009e28 = load i32, i32* @r31, align 4
  %v2_10009e28 = inttoptr i32 %v1_10009e28 to i32*
  store i32 %v0_10009e28, i32* %v2_10009e28, align 4
  %v0_10009e2c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e2c = load i32, i32* @r31, align 4
  %v2_10009e2c = add i32 %v1_10009e2c, 8
  %v3_10009e2c = inttoptr i32 %v2_10009e2c to i32*
  store i32 %v0_10009e2c, i32* %v3_10009e2c, align 4
  %v0_10009e30 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009e30 = load i32, i32* @r31, align 4
  %v2_10009e30 = add i32 %v1_10009e30, 12
  %v3_10009e30 = inttoptr i32 %v2_10009e30 to i32*
  store i32 %v0_10009e30, i32* %v3_10009e30, align 4
  %v3_10009e34 = load i32, i32* @r31, align 4
  %v4_10009e34 = add i32 %v3_10009e34, 16
  %v5_10009e34 = inttoptr i32 %v4_10009e34 to i8*
  store i8 %tmp4, i8* %v5_10009e34, align 1
  %v1_10009e38 = load i32, i32* @r31, align 4
  %v2_10009e38 = add i32 %v1_10009e38, 52
  %v3_10009e38 = inttoptr i32 %v2_10009e38 to i32*
  store i32 %tmp3, i32* %v3_10009e38, align 4
  %v1_10009e3c = load i32, i32* @r31, align 4
  %v2_10009e3c = add i32 %v1_10009e3c, 56
  %v3_10009e3c = inttoptr i32 %v2_10009e3c to i32*
  store i32 %tmp2, i32* %v3_10009e3c, align 4
  store i32 268475972, i32* @lr, align 4
  %v6_10009e40 = sext i8 %tmp4 to i32
  %v8_10009e40 = call i32 @function_1000ba84(i32 %v1_10009e00, i32 %v2_10009df4, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10009e40, i32 %tmp7)
  store i32 268475984, i32* @lr, align 4
  %v3_10009e4c = call i32 @function_10009d1c(i32 %v8_10009e40, i32 0, i32 13)
  %v0_10009e54.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009e50

dec_label_pc_10009e50:                            ; preds = %dec_label_pc_10009dcc, %dec_label_pc_10009e08
  %v0_10009e54 = phi i32 [ %v3_10009df0, %dec_label_pc_10009dcc ], [ %v0_10009e54.pre, %dec_label_pc_10009e08 ]
  store i32 %v0_10009dd0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009e54

; uselistorder directives
  uselistorder i32 %v2_10009de0, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 10, 11, 0, 1, 2, 28, 29, 4, 30, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 5, 21, 22, 23, 24, 25, 26, 27, 31, 32, 6, 33, 34, 7, 35, 36, 8, 37, 38, 9 }
  uselistorder label %dec_label_pc_10009e50, { 1, 0 }
}

define i32 @function_10009e68() local_unnamed_addr {
dec_label_pc_10009e68:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009e68 = load i32, i32* @r4, align 4
  %v3_10009e68 = icmp eq i32 %v0_10009e68, 1
  %v0_10009e78 = load i32, i32* @r3, align 4
  store i32 %v0_10009e78, i32* %r27.global-to-local, align 4
  %v0_10009e80 = load i32, i32* @r5, align 4
  store i32 %v0_10009e80, i32* @r31, align 4
  br i1 %v3_10009e68, label %dec_label_pc_10009ea4, label %dec_label_pc_10009e88

dec_label_pc_10009e88:                            ; preds = %dec_label_pc_10009e68
  %v3_10009e88 = icmp eq i32 %v0_10009e68, 2
  br i1 %v3_10009e88, label %dec_label_pc_10009ec4, label %dec_label_pc_10009e90

dec_label_pc_10009e90:                            ; preds = %dec_label_pc_10009e88
  %v3_10009e90 = icmp eq i32 %v0_10009e68, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10009e90, label %dec_label_pc_10009ecc, label %dec_label_pc_10009eb0

dec_label_pc_10009ea4:                            ; preds = %dec_label_pc_10009e68
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10009ecc

dec_label_pc_10009eb0:                            ; preds = %dec_label_pc_10009e90
  %v0_10009eb0 = call i32 @function_10009c34()
  store i32 -1, i32* @r28, align 4
  %v2_10009ebc = inttoptr i32 %v0_10009eb0 to i32*
  store i32 22, i32* %v2_10009ebc, align 4
  br label %dec_label_pc_10009fb4

dec_label_pc_10009ec4:                            ; preds = %dec_label_pc_10009e88
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10009ecc

dec_label_pc_10009ecc:                            ; preds = %dec_label_pc_10009e90, %dec_label_pc_10009ea4, %dec_label_pc_10009ec4
  %v1_10009ecc = inttoptr i32 %v0_10009e80 to i32*
  %v2_10009ecc = load i32, i32* %v1_10009ecc, align 4
  store i32 19, i32* @r5, align 4
  %v1_10009ed4 = add i32 %v0_10009e80, 4
  %v2_10009ed4 = inttoptr i32 %v1_10009ed4 to i32*
  %v3_10009ed4 = load i32, i32* %v2_10009ed4, align 4
  store i32 %v3_10009ed4, i32* %r9.global-to-local, align 4
  %v1_10009ed8 = add i32 %v0_10009e80, 17
  store i32 %v1_10009ed8, i32* @r4, align 4
  %v1_10009edc = add i32 %v0_10009e80, 8
  %v2_10009edc = inttoptr i32 %v1_10009edc to i32*
  %v3_10009edc = load i32, i32* %v2_10009edc, align 4
  %v2_10009ee0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009ee0, i32* @r3, align 4
  %v2_10009ee8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10009ecc, i32* %stack_var_-72, align 4
  store i32 268476184, i32* @lr, align 4
  %v0_10009f14 = call i32 @function_1000b9e8()
  %v0_10009f18 = load i32, i32* %r27.global-to-local, align 4
  %v0_10009f1c = load i32, i32* @r30, align 4
  store i32 268476204, i32* @lr, align 4
  %v3_10009f28 = call i32 @function_10009348(i32 %v0_10009f18, i32 %v0_10009f1c, i32 %v2_10009ee8)
  store i32 %v3_10009f28, i32* @r28, align 4
  %v3_10009f2c = icmp eq i32 %v3_10009f28, 0
  br i1 %v3_10009f2c, label %dec_label_pc_10009f34, label %dec_label_pc_10009fb4

dec_label_pc_10009f34:                            ; preds = %dec_label_pc_10009ecc
  %v0_10009f34 = load i32, i32* @r30, align 4
  %v3_10009f38 = icmp eq i32 %v0_10009f34, -2144570348
  br i1 %v3_10009f38, label %dec_label_pc_10009f40, label %dec_label_pc_10009fb0

dec_label_pc_10009f40:                            ; preds = %dec_label_pc_10009f34
  %v0_10009f40 = call i32 @function_10009c34()
  store i32 %v0_10009f40, i32* @r29, align 4
  %v0_10009f50 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009f58 = inttoptr i32 %v0_10009f40 to i32*
  %v2_10009f58 = load i32, i32* %v1_10009f58, align 4
  store i32 %v2_10009f58, i32* @r30, align 4
  store i32 268476260, i32* @lr, align 4
  %v3_10009f60 = call i32 @function_10009348(i32 %v0_10009f50, i32 1076655123, i32 %v2_10009ee8)
  %v3_10009f64 = icmp eq i32 %v3_10009f60, 0
  br i1 %v3_10009f64, label %dec_label_pc_10009f74, label %dec_label_pc_10009f6c

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f40
  %v0_10009f6c = load i32, i32* @r30, align 4
  %v1_10009f6c = load i32, i32* @r29, align 4
  %v2_10009f6c = inttoptr i32 %v1_10009f6c to i32*
  store i32 %v0_10009f6c, i32* %v2_10009f6c, align 4
  br label %dec_label_pc_10009fb4

dec_label_pc_10009f74:                            ; preds = %dec_label_pc_10009f40
  %v0_10009f74 = load i32, i32* @r31, align 4
  %v1_10009f74 = add i32 %v0_10009f74, 8
  %v2_10009f74 = inttoptr i32 %v1_10009f74 to i32*
  %v3_10009f74 = load i32, i32* %v2_10009f74, align 4
  %v1_10009f7c = call i32 @__asm_rlwinm(i32 %v3_10009f74, i32 0, i32 19, i32 20)
  %v1_10009f80 = call i32 @__asm_rlwinm(i32 %v3_10009edc, i32 0, i32 19, i32 20)
  store i32 %v1_10009f80, i32* %r9.global-to-local, align 4
  %v4_10009f84 = icmp eq i32 %v1_10009f7c, %v1_10009f80
  br i1 %v4_10009f84, label %dec_label_pc_10009f8c, label %dec_label_pc_10009fa0

dec_label_pc_10009f8c:                            ; preds = %dec_label_pc_10009f74
  %v1_10009f8c = and i32 %v3_10009f74, 768
  store i32 %v1_10009f8c, i32* %r9.global-to-local, align 4
  %v3_10009f8c = icmp eq i32 %v1_10009f8c, 0
  br i1 %v3_10009f8c, label %dec_label_pc_10009fb0, label %dec_label_pc_10009f94

dec_label_pc_10009f94:                            ; preds = %dec_label_pc_10009f8c
  %v1_10009f94 = call i32 @__asm_rlwinm(i32 %v3_10009edc, i32 0, i32 22, i32 23)
  %v0_10009f98 = load i32, i32* %r9.global-to-local, align 4
  %v4_10009f98 = icmp eq i32 %v0_10009f98, %v1_10009f94
  br i1 %v4_10009f98, label %dec_label_pc_10009fb0, label %dec_label_pc_10009fa0

dec_label_pc_10009fa0:                            ; preds = %dec_label_pc_10009f74, %dec_label_pc_10009f94
  store i32 -1, i32* @r28, align 4
  %v1_10009fa8 = load i32, i32* @r29, align 4
  %v2_10009fa8 = inttoptr i32 %v1_10009fa8 to i32*
  store i32 22, i32* %v2_10009fa8, align 4
  br label %dec_label_pc_10009fb4

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009f34, %dec_label_pc_10009f94, %dec_label_pc_10009f8c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009fb4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009ecc, %dec_label_pc_10009fa0, %dec_label_pc_10009f6c, %dec_label_pc_10009eb0, %dec_label_pc_10009fb0
  %v0_10009fb8 = load i32, i32* @r28, align 4
  ret i32 %v0_10009fb8

; uselistorder directives
  uselistorder i32 %v0_10009e80, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10009348, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009fb4, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009fb0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009fa0, { 1, 0 }
  uselistorder label %dec_label_pc_10009ecc, { 2, 1, 0 }
}

define i32 @function_10009fcc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009fcc:
  %stack_var_-24 = alloca i32, align 4
  %v2_10009fd4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009fd4, i32* @r4, align 4
  store i32 268476384, i32* @lr, align 4
  %v1_10009fdc = bitcast i32* %stack_var_-24 to i8*
  %v2_10009fdc = call i32 @function_1000bab8(i8* %v1_10009fdc)
  %v3_10009fe0 = icmp eq i32 %v2_10009fdc, 0
  br i1 %v3_10009fe0, label %dec_label_pc_10009ff0, label %dec_label_pc_10009fec

dec_label_pc_10009fec:                            ; preds = %dec_label_pc_10009fcc
  %v3_10009fec = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009ff0

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009fcc, %dec_label_pc_10009fec
  %v0_10009ffc = phi i32 [ -1, %dec_label_pc_10009fcc ], [ %v3_10009fec, %dec_label_pc_10009fec ]
  ret i32 %v0_10009ffc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009ff0, { 1, 0 }
}

define i32 @function_1000a000(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a000:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a014 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476452, i32* @lr, align 4
  %v2_1000a020 = call i32 @function_1000b2ec(i32 2, i32 %v2_1000a014)
  ret i32 %v2_1000a020

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a034(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a034:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a048 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476504, i32* @lr, align 4
  %v2_1000a054 = call i32 @function_1000b2ec(i32 3, i32 %v2_1000a048)
  ret i32 %v2_1000a054

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a068(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a068:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a07c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476556, i32* @lr, align 4
  %v2_1000a088 = call i32 @function_1000b2ec(i32 6, i32 %v2_1000a07c)
  ret i32 %v2_1000a088

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a09c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000a09c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a0b0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268476616, i32* @lr, align 4
  %v2_1000a0c4 = call i32 @function_1000b2ec(i32 15, i32 %v2_1000a0b0)
  ret i32 %v2_1000a0c4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 31, 14, 15, 16, 17, 5, 18, 19, 6, 20, 7, 21, 8, 9, 10, 11, 12, 22, 13, 23, 24, 1, 25, 26, 2, 27, 28, 3, 29, 30, 4 }
}

define i32 @function_1000a0d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a0d8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a0ec = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476664, i32* @lr, align 4
  %v2_1000a0f4 = call i32 @function_1000b2ec(i32 4, i32 %v2_1000a0ec)
  ret i32 %v2_1000a0f4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a108(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a108:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a11c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476720, i32* @lr, align 4
  %v2_1000a12c = call i32 @function_1000b2ec(i32 10, i32 %v2_1000a11c)
  ret i32 %v2_1000a12c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a140(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a140:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a154 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268476784, i32* @lr, align 4
  %v2_1000a16c = call i32 @function_1000b2ec(i32 12, i32 %v2_1000a154)
  ret i32 %v2_1000a16c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000a180(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a180:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a194 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476840, i32* @lr, align 4
  %v2_1000a1a4 = call i32 @function_1000b2ec(i32 9, i32 %v2_1000a194)
  ret i32 %v2_1000a1a4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 8, 9, 24, 1, 25, 2, 26, 3, 27, 10, 11, 12, 28, 13, 29, 42, 30, 31, 32, 33, 34, 35, 36, 4, 37, 38, 39, 40, 41, 43, 44, 45, 14 }
}

define i32 @function_1000a1b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a1b8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a1cc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268476904, i32* @lr, align 4
  %v2_1000a1e4 = call i32 @function_1000b2ec(i32 11, i32 %v2_1000a1cc)
  ret i32 %v2_1000a1e4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000a1f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a1f8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a20c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268476964, i32* @lr, align 4
  %v2_1000a220 = call i32 @function_1000b2ec(i32 14, i32 %v2_1000a20c)
  ret i32 %v2_1000a220

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000a234(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a234:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a248 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268477016, i32* @lr, align 4
  %v2_1000a254 = call i32 @function_1000b2ec(i32 1, i32 %v2_1000a248)
  ret i32 %v2_1000a254

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000b2ec, { 5, 1, 0, 4, 6, 10, 7, 9, 8, 3, 2 }
}

define i32 @function_1000a268(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a268:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000a298, label %dec_label_pc_1000a284

dec_label_pc_1000a284:                            ; preds = %dec_label_pc_1000a268
  %v0_1000a284 = call i32 @function_10009c34()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000a290 = inttoptr i32 %v0_1000a284 to i32*
  store i32 22, i32* %v2_1000a290, align 4
  %v0_1000a2a4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a2a0

dec_label_pc_1000a298:                            ; preds = %dec_label_pc_1000a268
  %v0_1000a298 = call i32 @function_1000a3e8()
  store i32 %v0_1000a298, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a2a0

dec_label_pc_1000a2a0:                            ; preds = %dec_label_pc_1000a284, %dec_label_pc_1000a298
  %v0_1000a2a4 = phi i32 [ %v0_1000a2a4.pre, %dec_label_pc_1000a284 ], [ %v0_1000a298, %dec_label_pc_1000a298 ]
  ret i32 %v0_1000a2a4

; uselistorder directives
  uselistorder label %dec_label_pc_1000a2a0, { 1, 0 }
}

define i32 @function_1000a2b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a2b4:
  store i32 268477132, i32* @lr, align 4
  %v3_1000a2c8 = call i32 @function_10009d1c(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_1000a2e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a2e0:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000a2e0 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a2e0, label %dec_label_pc_1000a30c, label %dec_label_pc_1000a2fc

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2e0
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000a30c, label %dec_label_pc_1000a304

dec_label_pc_1000a304:                            ; preds = %dec_label_pc_1000a2fc
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000a33c.lr.ph, label %dec_label_pc_1000a30c

dec_label_pc_1000a30c:                            ; preds = %dec_label_pc_1000a304, %dec_label_pc_1000a2fc, %dec_label_pc_1000a2e0
  %v0_1000a30c = call i32 @function_10009c34()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000a318 = inttoptr i32 %v0_1000a30c to i32*
  store i32 22, i32* %v2_1000a318, align 4
  %v0_1000a3ac.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a3a8

dec_label_pc_1000a33c.lr.ph:                      ; preds = %dec_label_pc_1000a304
  %v2_1000a32c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000a32c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a33c22 = add i32 %v2_1000a32c, 128
  %v3_1000a33c23 = inttoptr i32 %v2_1000a33c22 to i32*
  store i32 0, i32* %v3_1000a33c23, align 4
  %v0_1000a34024 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a34025 = add i32 %v0_1000a34024, -1
  store i32 %v1_1000a34025, i32* %r11.global-to-local, align 4
  %v1_1000a34426 = mul i32 %v1_1000a34025, 4
  %v1_1000a34827 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a34828 = add i32 %v1_1000a34827, %v1_1000a34426
  store i32 %v2_1000a34828, i32* %r9.global-to-local, align 4
  %v0_1000a34c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a34c30 = add i32 %v0_1000a34c29, -1
  store i32 %v1_1000a34c30, i32* %ctr.global-to-local, align 4
  %v2_1000a34c31 = icmp eq i32 %v1_1000a34c30, 0
  br i1 %v2_1000a34c31, label %dec_label_pc_1000a350, label %dec_label_pc_1000a33c.dec_label_pc_1000a33c_crit_edge

dec_label_pc_1000a33c.dec_label_pc_1000a33c_crit_edge: ; preds = %dec_label_pc_1000a33c.lr.ph, %dec_label_pc_1000a33c.dec_label_pc_1000a33c_crit_edge
  %v2_1000a34832 = phi i32 [ %v2_1000a348, %dec_label_pc_1000a33c.dec_label_pc_1000a33c_crit_edge ], [ %v2_1000a34828, %dec_label_pc_1000a33c.lr.ph ]
  %v0_1000a33c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a33c = add i32 %v2_1000a34832, 4
  %v3_1000a33c = inttoptr i32 %v2_1000a33c to i32*
  store i32 %v0_1000a33c.pre, i32* %v3_1000a33c, align 4
  %v0_1000a340 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a340 = add i32 %v0_1000a340, -1
  store i32 %v1_1000a340, i32* %r11.global-to-local, align 4
  %v1_1000a344 = mul i32 %v1_1000a340, 4
  %v1_1000a348 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a348 = add i32 %v1_1000a348, %v1_1000a344
  store i32 %v2_1000a348, i32* %r9.global-to-local, align 4
  %v0_1000a34c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a34c = add i32 %v0_1000a34c, -1
  store i32 %v1_1000a34c, i32* %ctr.global-to-local, align 4
  %v2_1000a34c = icmp eq i32 %v1_1000a34c, 0
  br i1 %v2_1000a34c, label %dec_label_pc_1000a350, label %dec_label_pc_1000a33c.dec_label_pc_1000a33c_crit_edge

dec_label_pc_1000a350:                            ; preds = %dec_label_pc_1000a33c.dec_label_pc_1000a33c_crit_edge, %dec_label_pc_1000a33c.lr.ph
  %v0_1000a354.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a350 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000a350, i32* @r3, align 4
  store i32 %v0_1000a354.pre, i32* @r4, align 4
  %v0_1000a358 = call i32 @function_1000a3e8()
  %v1_1000a35c = icmp slt i32 %v0_1000a358, 0
  br i1 %v1_1000a35c, label %dec_label_pc_1000a3a4, label %dec_label_pc_1000a364

dec_label_pc_1000a364:                            ; preds = %dec_label_pc_1000a350
  %v0_1000a368 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a370 = call i32 @function_1000a3c0(i32 ptrtoint (i32* @global_var_1001c840.299 to i32), i32 %v0_1000a368)
  %v2_1000a37c = ptrtoint i32* %stack_var_-156 to i32
  store i32 268477332, i32* @lr, align 4
  %v4_1000a390 = call i32 @function_1000bb78(i32 %v0_1000a368, i32* nonnull %stack_var_-296, i32 %v2_1000a37c)
  %v1_1000a394 = icmp slt i32 %v4_1000a390, 0
  br i1 %v1_1000a394, label %dec_label_pc_1000a3a4, label %dec_label_pc_1000a39c

dec_label_pc_1000a39c:                            ; preds = %dec_label_pc_1000a364
  %v3_1000a39c = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000a39c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a3a8

dec_label_pc_1000a3a4:                            ; preds = %dec_label_pc_1000a364, %dec_label_pc_1000a350
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a3a8

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a39c, %dec_label_pc_1000a30c, %dec_label_pc_1000a3a4
  %v0_1000a3ac = phi i32 [ %v3_1000a39c, %dec_label_pc_1000a39c ], [ %v0_1000a3ac.pre, %dec_label_pc_1000a30c ], [ -1, %dec_label_pc_1000a3a4 ]
  ret i32 %v0_1000a3ac

; uselistorder directives
  uselistorder i32 %v1_1000a34c, { 1, 0 }
  uselistorder i32 %v2_1000a348, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_1000a3a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a33c.dec_label_pc_1000a33c_crit_edge, { 1, 0 }
}

define i32 @function_1000a3c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a3c0:
  %v1_1000a3c0 = add i32 %arg2, -1
  %v1_1000a3c4 = call i32 @__asm_rlwinm(i32 %v1_1000a3c0, i32 29, i32 3, i32 29)
  %v1_1000a3c8 = urem i32 %v1_1000a3c0, 32
  %v2_1000a3cc = add i32 %v1_1000a3c4, %arg1
  %v3_1000a3cc = inttoptr i32 %v2_1000a3cc to i32*
  %v4_1000a3cc = load i32, i32* %v3_1000a3cc, align 4
  %v3_1000a3d4 = shl i32 1, %v1_1000a3c8
  %v2_1000a3d8 = and i32 %v4_1000a3cc, %v3_1000a3d4
  %v2_1000a3dc = icmp ne i32 %v2_1000a3d8, 0
  %v5_1000a3e0 = zext i1 %v2_1000a3dc to i32
  ret i32 %v5_1000a3e0
}

define i32 @function_1000a3e8() local_unnamed_addr {
dec_label_pc_1000a3e8:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000a3e8 = load i32, i32* @r4, align 4
  %v1_1000a3e8 = add i32 %v0_1000a3e8, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000a3f0 = call i32 @__asm_rlwinm(i32 %v1_1000a3e8, i32 29, i32 3, i32 29)
  %v1_1000a3f4 = urem i32 %v1_1000a3e8, 32
  %v1_1000a3f8 = load i32, i32* @r3, align 4
  %v2_1000a3f8 = add i32 %v1_1000a3f8, %v1_1000a3f0
  %v3_1000a3f8 = inttoptr i32 %v2_1000a3f8 to i32*
  %v4_1000a3f8 = load i32, i32* %v3_1000a3f8, align 4
  %v0_1000a3fc = load i32, i32* %r0.global-to-local, align 4
  %v3_1000a3fc = shl i32 %v0_1000a3fc, %v1_1000a3f4
  store i32 %v3_1000a3fc, i32* %r0.global-to-local, align 4
  %v2_1000a400 = or i32 %v3_1000a3fc, %v4_1000a3f8
  store i32 %v2_1000a400, i32* %v3_1000a3f8, align 4
  ret i32 0
}

define i32 @function_1000a410(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a410:
  %v1_1000a410 = add i32 %arg2, -1
  %v1_1000a418 = call i32 @__asm_rlwinm(i32 %v1_1000a410, i32 29, i32 3, i32 29)
  %v1_1000a41c = urem i32 %v1_1000a410, 32
  %v2_1000a420 = add i32 %v1_1000a418, %arg1
  %v3_1000a420 = inttoptr i32 %v2_1000a420 to i32*
  %v4_1000a420 = load i32, i32* %v3_1000a420, align 4
  %v3_1000a424 = shl i32 -2, %v1_1000a41c
  %v4_1000a424 = sub nsw i32 32, %v1_1000a41c
  %v5_1000a424 = lshr i32 -2, %v4_1000a424
  %v6_1000a424 = or i32 %v5_1000a424, %v3_1000a424
  %v2_1000a428 = and i32 %v6_1000a424, %v4_1000a420
  store i32 %v2_1000a428, i32* %v3_1000a420, align 4
  ret i32 0
}

define i32 @function_1000a438() local_unnamed_addr {
dec_label_pc_1000a438:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a438 = load i32, i32* @r3, align 4
  %v3_1000a438 = icmp eq i32 %v0_1000a438, 0
  br i1 %v3_1000a438, label %dec_label_pc_1000a454.thread, label %dec_label_pc_1000a454

dec_label_pc_1000a454.thread:                     ; preds = %dec_label_pc_1000a438
  br label %dec_label_pc_1000a460

dec_label_pc_1000a454:                            ; preds = %dec_label_pc_1000a438
  %v3_1000a458 = icmp ugt i32 %v0_1000a438, -8
  br i1 %v3_1000a458, label %dec_label_pc_1000a568, label %dec_label_pc_1000a460

dec_label_pc_1000a460:                            ; preds = %dec_label_pc_1000a454.thread, %dec_label_pc_1000a454
  %v0_1000a46416 = phi i32 [ 1, %dec_label_pc_1000a454.thread ], [ %v0_1000a438, %dec_label_pc_1000a454 ]
  %v1_1000a464 = add i32 %v0_1000a46416, 4
  store i32 ptrtoint (i32* @global_var_1001c720.300 to i32), i32* @r29, align 4
  store i32 %v1_1000a464, i32* %stack_var_-40, align 4
  %v0_1000a474 = call i32 @function_1000af94()
  %v2_1000a47c = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000a484 = call i32 @function_1000a830(i32* inttoptr (i32 268551752 to i32*), i32 %v2_1000a47c)
  store i32 %v3_1000a484, i32* %r31.global-to-local, align 4
  %v0_1000a490 = call i32 @function_1000af94()
  %v3_1000a494 = icmp eq i32 %v3_1000a484, 0
  br i1 %v3_1000a494, label %dec_label_pc_1000a49c, label %dec_label_pc_1000a54c.thread

dec_label_pc_1000a54c.thread:                     ; preds = %dec_label_pc_1000a460
  br label %dec_label_pc_1000a560

dec_label_pc_1000a49c:                            ; preds = %dec_label_pc_1000a460
  %v3_1000a4a0 = load i32, i32* @global_var_1001c6a4.303, align 4
  store i32 %v3_1000a4a0, i32* %r31.global-to-local, align 4
  %v3_1000a4a4 = load i32, i32* %stack_var_-40, align 4
  %v2_1000a4a8 = icmp ult i32 %v3_1000a4a4, %v3_1000a4a0
  br i1 %v2_1000a4a8, label %dec_label_pc_1000a4c0, label %dec_label_pc_1000a4b0

dec_label_pc_1000a4b0:                            ; preds = %dec_label_pc_1000a49c
  %v1_1000a4b4 = sub i32 0, %v3_1000a4a0
  %v2_1000a4b0 = add i32 %v3_1000a4a0, -1
  %v1_1000a4b8 = add i32 %v2_1000a4b0, %v3_1000a4a4
  %v2_1000a4bc = and i32 %v1_1000a4b8, %v1_1000a4b4
  store i32 %v2_1000a4bc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a4c0

dec_label_pc_1000a4c0:                            ; preds = %dec_label_pc_1000a49c, %dec_label_pc_1000a4b0
  %v0_1000a4cc = call i32 @function_1000af94()
  %v0_1000a4d0 = load i32, i32* %r31.global-to-local, align 4
  store i32 268477656, i32* @lr, align 4
  %v1_1000a4d4 = call i32 @function_1000b7b4(i32 %v0_1000a4d0)
  %v3_1000a4d8 = icmp eq i32 %v1_1000a4d4, -1
  br i1 %v3_1000a4d8, label %dec_label_pc_1000a4f8, label %dec_label_pc_1000a4e0

dec_label_pc_1000a4e0:                            ; preds = %dec_label_pc_1000a4c0
  %v1_1000a4e0 = add i32 %v1_1000a4d4, 3
  %v1_1000a4e4 = call i32 @__asm_rlwinm(i32 %v1_1000a4e0, i32 0, i32 0, i32 29)
  store i32 %v1_1000a4e4, i32* @r30, align 4
  %v4_1000a4e8 = icmp eq i32 %v1_1000a4e4, %v1_1000a4d4
  br i1 %v4_1000a4e8, label %dec_label_pc_1000a4f8, label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4e0
  %v2_1000a4f0 = sub i32 %v1_1000a4e4, %v1_1000a4d4
  store i32 268477688, i32* @lr, align 4
  %v1_1000a4f4 = call i32 @function_1000b7b4(i32 %v2_1000a4f0)
  br label %dec_label_pc_1000a4f8

dec_label_pc_1000a4f8:                            ; preds = %dec_label_pc_1000a4e0, %dec_label_pc_1000a4c0, %dec_label_pc_1000a4f0
  %v0_1000a500 = call i32 @function_1000af94()
  %v0_1000a504 = load i32, i32* @r30, align 4
  %v3_1000a504 = icmp eq i32 %v0_1000a504, -1
  br i1 %v3_1000a504, label %dec_label_pc_1000a568, label %dec_label_pc_1000a54c

dec_label_pc_1000a54c:                            ; preds = %dec_label_pc_1000a4f8
  store i32 ptrtoint (i32* @global_var_1001c720.300 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c648 to i32), i32* @r29, align 4
  %v0_1000a520 = call i32 @function_1000af94()
  %v0_1000a524 = load i32, i32* @r31, align 4
  %v0_1000a528 = load i32, i32* @r30, align 4
  %v0_1000a52c = load i32, i32* @r29, align 4
  store i32 268477748, i32* @lr, align 4
  %v3_1000a530 = inttoptr i32 %v0_1000a52c to i32*
  %v4_1000a530 = call i32 @function_1000a9b4(i32* %v3_1000a530, i32 %v0_1000a528, i32 %v0_1000a524)
  %v0_1000a534 = load i32, i32* @r29, align 4
  %v2_1000a53c = inttoptr i32 %v0_1000a534 to i32*
  %v3_1000a53c = call i32 @function_1000a830(i32* %v2_1000a53c, i32 %v2_1000a47c)
  store i32 %v3_1000a53c, i32* %r31.global-to-local, align 4
  %v0_1000a548 = call i32 @function_1000af94()
  %v3_1000a54c = icmp eq i32 %v3_1000a53c, 0
  br i1 %v3_1000a54c, label %dec_label_pc_1000a560.thread, label %dec_label_pc_1000a560

dec_label_pc_1000a560.thread:                     ; preds = %dec_label_pc_1000a54c
  br label %dec_label_pc_1000a568

dec_label_pc_1000a560:                            ; preds = %dec_label_pc_1000a54c, %dec_label_pc_1000a54c.thread
  %v0_1000a560.pr6 = phi i32 [ %v3_1000a484, %dec_label_pc_1000a54c.thread ], [ %v3_1000a53c, %dec_label_pc_1000a54c ]
  %v3_1000a554 = load i32, i32* %stack_var_-40, align 4
  %v2_1000a558 = inttoptr i32 %v0_1000a560.pr6 to i32*
  store i32 %v3_1000a554, i32* %v2_1000a558, align 4
  %v0_1000a55c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a55c = add i32 %v0_1000a55c, 4
  store i32 %v1_1000a55c, i32* @r31, align 4
  %v3_1000a560 = icmp eq i32 %v1_1000a55c, 0
  br i1 %v3_1000a560, label %dec_label_pc_1000a568, label %dec_label_pc_1000a578

dec_label_pc_1000a568:                            ; preds = %dec_label_pc_1000a560.thread, %dec_label_pc_1000a560, %dec_label_pc_1000a4f8, %dec_label_pc_1000a454
  %v0_1000a568 = call i32 @function_10009c34()
  %v2_1000a570 = inttoptr i32 %v0_1000a568 to i32*
  store i32 12, i32* %v2_1000a570, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000a578

dec_label_pc_1000a578:                            ; preds = %dec_label_pc_1000a560, %dec_label_pc_1000a568
  %v0_1000a57c = phi i32 [ %v1_1000a55c, %dec_label_pc_1000a560 ], [ 0, %dec_label_pc_1000a568 ]
  ret i32 %v0_1000a57c

; uselistorder directives
  uselistorder i32 %v1_1000a55c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a4e4, { 1, 0, 2 }
  uselistorder i32 %v1_1000a4d4, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000a4a0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a484, { 1, 0, 2 }
  uselistorder i32 %v0_1000a438, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000a578, { 1, 0 }
  uselistorder label %dec_label_pc_1000a568, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000a4f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a4c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a460, { 1, 0 }
}

define i32 @function_1000a590(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a590:
  %v3_1000a590 = icmp eq i32 %arg1, 0
  %v2_1000a5a0 = mul i32 %arg2, %arg1
  store i32 %v2_1000a5a0, i32* @r31, align 4
  br i1 %v3_1000a590, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a5ac

dec_label_pc_1000a5ac:                            ; preds = %dec_label_pc_1000a590
  %v2_1000a5ac = udiv i32 %v2_1000a5a0, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000a5b4 = icmp eq i32 %v2_1000a5ac, %arg2
  br i1 %v4_1000a5b4, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a5bc

dec_label_pc_1000a5bc:                            ; preds = %dec_label_pc_1000a5ac
  %v0_1000a5bc = call i32 @function_10009c34()
  %v2_1000a5c4 = inttoptr i32 %v0_1000a5bc to i32*
  store i32 12, i32* %v2_1000a5c4, align 4
  br label %dec_label_pc_1000a5e8

dec_label_pc_1000a5cc:                            ; preds = %dec_label_pc_1000a5ac, %dec_label_pc_1000a590
  store i32 %v2_1000a5a0, i32* @r3, align 4
  store i32 268477908, i32* @lr, align 4
  %v0_1000a5d0 = call i32 @function_1000a438()
  %v0_1000a5d4 = load i32, i32* @r31, align 4
  store i32 %v0_1000a5d0, i32* @r30, align 4
  %v3_1000a5d8 = icmp eq i32 %v0_1000a5d0, 0
  br i1 %v3_1000a5d8, label %dec_label_pc_1000a5e8, label %dec_label_pc_1000a5e4

dec_label_pc_1000a5e4:                            ; preds = %dec_label_pc_1000a5cc
  store i32 268477928, i32* @lr, align 4
  %v3_1000a5e4 = call i32 @function_10009d1c(i32 0, i32 %v0_1000a5d4, i32 %v0_1000a5d4)
  br label %dec_label_pc_1000a5e8

dec_label_pc_1000a5e8:                            ; preds = %dec_label_pc_1000a5cc, %dec_label_pc_1000a5bc, %dec_label_pc_1000a5e4
  %v0_1000a5ec = load i32, i32* @r30, align 4
  ret i32 %v0_1000a5ec

; uselistorder directives
  uselistorder i32 %v0_1000a5d4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a5e8, { 2, 0, 1 }
}

define i32 @function_1000a600() local_unnamed_addr {
dec_label_pc_1000a600:
  %v0_1000a600 = load i32, i32* @r3, align 4
  %v3_1000a600 = icmp eq i32 %v0_1000a600, 0
  br i1 %v3_1000a600, label %dec_label_pc_1000a6ec, label %dec_label_pc_1000a618

dec_label_pc_1000a618:                            ; preds = %dec_label_pc_1000a600
  %v1_1000a61c = add i32 %v0_1000a600, -4
  %v2_1000a61c = inttoptr i32 %v1_1000a61c to i32*
  %v3_1000a61c = load i32, i32* %v2_1000a61c, align 4
  store i32 %v3_1000a61c, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000a630 = call i32 @function_1000af94()
  %v0_1000a638 = load i32, i32* @r28, align 4
  store i32 268478020, i32* @lr, align 4
  %v4_1000a640 = call i32 @function_1000a9b4(i32* nonnull @global_var_1001c648, i32 %v1_1000a61c, i32 %v0_1000a638)
  %v3_1000a648 = load i32, i32* @global_var_1001c6a4.303, align 4
  store i32 %v4_1000a640, i32* @r29, align 4
  %v1_1000a650 = inttoptr i32 %v4_1000a640 to i32*
  %v2_1000a650 = load i32, i32* %v1_1000a650, align 4
  store i32 %v2_1000a650, i32* @r27, align 4
  %v1_1000a654 = mul i32 %v3_1000a648, 8
  %v2_1000a658 = icmp ult i32 %v2_1000a650, %v1_1000a654
  br i1 %v2_1000a658, label %dec_label_pc_1000a68c, label %dec_label_pc_1000a660

dec_label_pc_1000a660:                            ; preds = %dec_label_pc_1000a618
  store i32 ptrtoint (i32* @global_var_1001c8c0.304 to i32), i32* @r28, align 4
  %v0_1000a670 = call i32 @function_1000af94()
  store i32 268478076, i32* @lr, align 4
  %v1_1000a678 = call i32 @function_1000b7b4(i32 0)
  %v0_1000a67c = load i32, i32* @r31, align 4
  %v4_1000a67c = icmp eq i32 %v0_1000a67c, %v1_1000a678
  br i1 %v4_1000a67c, label %dec_label_pc_1000a694, label %dec_label_pc_1000a684

dec_label_pc_1000a684:                            ; preds = %dec_label_pc_1000a660
  %v0_1000a688 = call i32 @function_1000af94()
  br label %dec_label_pc_1000a68c

dec_label_pc_1000a68c:                            ; preds = %dec_label_pc_1000a618, %dec_label_pc_1000a684
  br label %dec_label_pc_1000a6e8

dec_label_pc_1000a694:                            ; preds = %dec_label_pc_1000a660
  %v0_1000a694 = load i32, i32* @r29, align 4
  %v1_1000a694 = add i32 %v0_1000a694, 4
  %v2_1000a694 = inttoptr i32 %v1_1000a694 to i32*
  %v3_1000a694 = load i32, i32* %v2_1000a694, align 4
  %v3_1000a698 = icmp eq i32 %v3_1000a694, 0
  br i1 %v3_1000a698, label %dec_label_pc_1000a6a8, label %dec_label_pc_1000a6a0

dec_label_pc_1000a6a0:                            ; preds = %dec_label_pc_1000a694
  %v1_1000a6a0 = add i32 %v0_1000a694, 8
  %v2_1000a6a0 = inttoptr i32 %v1_1000a6a0 to i32*
  %v3_1000a6a0 = load i32, i32* %v2_1000a6a0, align 4
  %v2_1000a6a4 = add i32 %v3_1000a694, 8
  %v3_1000a6a4 = inttoptr i32 %v2_1000a6a4 to i32*
  store i32 %v3_1000a6a0, i32* %v3_1000a6a4, align 4
  %v0_1000a6a8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a6a8

dec_label_pc_1000a6a8:                            ; preds = %dec_label_pc_1000a694, %dec_label_pc_1000a6a0
  %v0_1000a6a8 = phi i32 [ %v0_1000a694, %dec_label_pc_1000a694 ], [ %v0_1000a6a8.pre, %dec_label_pc_1000a6a0 ]
  %v1_1000a6a8 = add i32 %v0_1000a6a8, 8
  %v2_1000a6a8 = inttoptr i32 %v1_1000a6a8 to i32*
  %v3_1000a6a8 = load i32, i32* %v2_1000a6a8, align 4
  %v1_1000a6ac = add i32 %v0_1000a6a8, 4
  %v2_1000a6ac = inttoptr i32 %v1_1000a6ac to i32*
  %v3_1000a6ac = load i32, i32* %v2_1000a6ac, align 4
  %v3_1000a6b0 = icmp eq i32 %v3_1000a6a8, 0
  br i1 %v3_1000a6b0, label %dec_label_pc_1000a6c0, label %dec_label_pc_1000a6b8

dec_label_pc_1000a6b8:                            ; preds = %dec_label_pc_1000a6a8
  %v2_1000a6b8 = add i32 %v3_1000a6a8, 4
  %v3_1000a6b8 = inttoptr i32 %v2_1000a6b8 to i32*
  store i32 %v3_1000a6ac, i32* %v3_1000a6b8, align 4
  br label %dec_label_pc_1000a6c4

dec_label_pc_1000a6c0:                            ; preds = %dec_label_pc_1000a6a8
  store i32 %v3_1000a6ac, i32* @global_var_1001c648, align 4
  br label %dec_label_pc_1000a6c4

dec_label_pc_1000a6c4:                            ; preds = %dec_label_pc_1000a6b8, %dec_label_pc_1000a6c0
  %v0_1000a6cc = call i32 @function_1000af94()
  %v0_1000a6d0 = load i32, i32* @r27, align 4
  %v1_1000a6d0 = load i32, i32* @r29, align 4
  %v0_1000a6d8 = load i32, i32* @r31, align 4
  %v2_1000a6d0 = sub i32 12, %v0_1000a6d0
  %v1_1000a6d4 = add i32 %v2_1000a6d0, %v1_1000a6d0
  %v2_1000a6d8 = sub i32 %v1_1000a6d4, %v0_1000a6d8
  store i32 268478176, i32* @lr, align 4
  %v1_1000a6dc = call i32 @function_1000b7b4(i32 %v2_1000a6d8)
  br label %dec_label_pc_1000a6e8

dec_label_pc_1000a6e8:                            ; preds = %dec_label_pc_1000a68c, %dec_label_pc_1000a6c4
  %v0_1000a6e8 = call i32 @function_1000af94()
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a6ec:                            ; preds = %dec_label_pc_1000a600, %dec_label_pc_1000a6e8
  %.0 = phi i32 [ undef, %dec_label_pc_1000a600 ], [ %v0_1000a6e8, %dec_label_pc_1000a6e8 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000a6a8, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b7b4, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a68c, { 1, 0 }
}

define i32 @function_1000a700(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a700:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000a700 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000a700, label %dec_label_pc_1000a71c, label %dec_label_pc_1000a728

dec_label_pc_1000a71c:                            ; preds = %dec_label_pc_1000a700
  store i32 ptrtoint ([3 x i8]* @global_var_1000a720.308 to i32), i32* @lr, align 4
  %v0_1000a71c = call i32 @function_1000a600()
  br label %dec_label_pc_1000a734

dec_label_pc_1000a728:                            ; preds = %dec_label_pc_1000a700
  %v3_1000a728 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a728, label %dec_label_pc_1000a734, label %dec_label_pc_1000a740

dec_label_pc_1000a734:                            ; preds = %dec_label_pc_1000a728, %dec_label_pc_1000a71c
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a71c ], [ %arg2, %dec_label_pc_1000a728 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268478264, i32* @lr, align 4
  %v0_1000a734 = call i32 @function_1000a438()
  store i32 %v0_1000a734, i32* @r28, align 4
  br label %dec_label_pc_1000a818

dec_label_pc_1000a740:                            ; preds = %dec_label_pc_1000a728
  %v1_1000a740 = add i32 %arg2, 7
  %v1_1000a744 = add i32 %arg1, -4
  store i32 %v1_1000a744, i32* %r27.global-to-local, align 4
  %v1_1000a748 = call i32 @__asm_rlwinm(i32 %v1_1000a740, i32 0, i32 0, i32 29)
  store i32 %v1_1000a748, i32* @r31, align 4
  %v2_1000a74c = inttoptr i32 %v1_1000a744 to i32*
  %v3_1000a74c = load i32, i32* %v2_1000a74c, align 4
  store i32 %v3_1000a74c, i32* @r30, align 4
  %v2_1000a750 = icmp ugt i32 %v1_1000a748, 11
  br i1 %v2_1000a750, label %dec_label_pc_1000a75c, label %dec_label_pc_1000a758

dec_label_pc_1000a758:                            ; preds = %dec_label_pc_1000a740
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000a75c

dec_label_pc_1000a75c:                            ; preds = %dec_label_pc_1000a740, %dec_label_pc_1000a758
  %v0_1000a7dc = phi i32 [ %v1_1000a748, %dec_label_pc_1000a740 ], [ 12, %dec_label_pc_1000a758 ]
  %v3_1000a75c = icmp ugt i32 %v0_1000a7dc, %v3_1000a74c
  br i1 %v3_1000a75c, label %dec_label_pc_1000a764, label %dec_label_pc_1000a7dc

dec_label_pc_1000a764:                            ; preds = %dec_label_pc_1000a75c
  %v0_1000a770 = call i32 @function_1000af94()
  %v0_1000a778 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a778 = load i32, i32* @r30, align 4
  %v2_1000a778 = add i32 %v1_1000a778, %v0_1000a778
  %v1_1000a77c = load i32, i32* @r31, align 4
  %v2_1000a77c = sub i32 %v1_1000a77c, %v1_1000a778
  %v4_1000a784 = call i32 @function_1000a8d0(i32* nonnull @global_var_1001c648, i32 %v2_1000a778, i32 %v2_1000a77c)
  store i32 %v4_1000a784, i32* %r27.global-to-local, align 4
  %v0_1000a790 = call i32 @function_1000af94()
  %v3_1000a794 = icmp eq i32 %v4_1000a784, 0
  br i1 %v3_1000a794, label %dec_label_pc_1000a7a8, label %dec_label_pc_1000a79c

dec_label_pc_1000a79c:                            ; preds = %dec_label_pc_1000a764
  %v0_1000a79c = load i32, i32* @r30, align 4
  %v2_1000a79c = add i32 %v0_1000a79c, %v4_1000a784
  %v1_1000a7a0 = load i32, i32* @r28, align 4
  %v2_1000a7a0 = add i32 %v1_1000a7a0, -4
  %v3_1000a7a0 = inttoptr i32 %v2_1000a7a0 to i32*
  store i32 %v2_1000a79c, i32* %v3_1000a7a0, align 4
  br label %dec_label_pc_1000a818

dec_label_pc_1000a7a8:                            ; preds = %dec_label_pc_1000a764
  %v0_1000a7a8 = load i32, i32* @r31, align 4
  %v1_1000a7a8 = add i32 %v0_1000a7a8, -4
  store i32 %v1_1000a7a8, i32* @r3, align 4
  store i32 268478384, i32* @lr, align 4
  %v0_1000a7ac = call i32 @function_1000a438()
  store i32 %v0_1000a7ac, i32* @r3, align 4
  store i32 %v0_1000a7ac, i32* @r31, align 4
  %v3_1000a7b0 = icmp eq i32 %v0_1000a7ac, 0
  br i1 %v3_1000a7b0, label %dec_label_pc_1000a7b8, label %dec_label_pc_1000a7c0

dec_label_pc_1000a7b8:                            ; preds = %dec_label_pc_1000a7a8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a818

dec_label_pc_1000a7c0:                            ; preds = %dec_label_pc_1000a7a8
  %v0_1000a7c0 = load i32, i32* @r28, align 4
  store i32 %v0_1000a7c0, i32* @r4, align 4
  %v0_1000a7c4 = load i32, i32* @r30, align 4
  %v1_1000a7c4 = add i32 %v0_1000a7c4, -4
  store i32 %v1_1000a7c4, i32* @r5, align 4
  store i32 268478412, i32* @lr, align 4
  %v0_1000a7c8 = call i32 @function_1000b9e8()
  %v0_1000a7cc = load i32, i32* @r28, align 4
  store i32 %v0_1000a7cc, i32* @r3, align 4
  store i32 268478420, i32* @lr, align 4
  %v0_1000a7d0 = call i32 @function_1000a600()
  %v0_1000a7d4 = load i32, i32* @r31, align 4
  store i32 %v0_1000a7d4, i32* @r28, align 4
  br label %dec_label_pc_1000a818

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a75c
  %v1_1000a7dc = add i32 %v0_1000a7dc, 28
  %v3_1000a7e0 = icmp ugt i32 %v1_1000a7dc, %v3_1000a74c
  br i1 %v3_1000a7e0, label %dec_label_pc_1000a818, label %dec_label_pc_1000a7e8

dec_label_pc_1000a7e8:                            ; preds = %dec_label_pc_1000a7dc
  store i32 ptrtoint (i32* @global_var_1001c720.300 to i32), i32* @r29, align 4
  %v0_1000a7f4 = call i32 @function_1000af94()
  %v0_1000a7fc = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a7fc = load i32, i32* @r31, align 4
  %v2_1000a7fc = add i32 %v1_1000a7fc, %v0_1000a7fc
  %v1_1000a800 = load i32, i32* @r30, align 4
  %v2_1000a800 = sub i32 %v1_1000a800, %v1_1000a7fc
  store i32 268478476, i32* @lr, align 4
  %v4_1000a808 = call i32 @function_1000a9b4(i32* nonnull @global_var_1001c648, i32 %v2_1000a7fc, i32 %v2_1000a800)
  %v0_1000a810 = call i32 @function_1000af94()
  %v0_1000a814 = load i32, i32* @r31, align 4
  %v1_1000a814 = load i32, i32* @r28, align 4
  %v2_1000a814 = add i32 %v1_1000a814, -4
  %v3_1000a814 = inttoptr i32 %v2_1000a814 to i32*
  store i32 %v0_1000a814, i32* %v3_1000a814, align 4
  br label %dec_label_pc_1000a818

dec_label_pc_1000a818:                            ; preds = %dec_label_pc_1000a7dc, %dec_label_pc_1000a7c0, %dec_label_pc_1000a7b8, %dec_label_pc_1000a79c, %dec_label_pc_1000a734, %dec_label_pc_1000a7e8
  %v0_1000a81c = load i32, i32* @r28, align 4
  ret i32 %v0_1000a81c

; uselistorder directives
  uselistorder i32 %v1_1000a7fc, { 1, 0 }
  uselistorder i32 %v4_1000a784, { 1, 0, 2 }
  uselistorder i32 %v1_1000a778, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001c648, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000a438, { 2, 1, 0, 5, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 ()* @function_1000a600, { 4, 3, 7, 6, 5, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a818, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a75c, { 1, 0 }
}

define i32 @function_1000a830(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a830:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000a830 = inttoptr i32 %arg2 to i32*
  %v2_1000a830 = load i32, i32* %v1_1000a830, align 4
  %v1_1000a834 = add i32 %v2_1000a830, 3
  store i32 %v1_1000a834, i32* %r9.global-to-local, align 4
  %v1_1000a838 = call i32 @__asm_rlwinm(i32 %v1_1000a834, i32 0, i32 0, i32 29)
  %v2_1000a83c = icmp ugt i32 %v1_1000a838, 11
  br i1 %v2_1000a83c, label %dec_label_pc_1000a8c0.preheader, label %dec_label_pc_1000a844

dec_label_pc_1000a844:                            ; preds = %dec_label_pc_1000a830
  br label %dec_label_pc_1000a8c0.preheader

dec_label_pc_1000a8c0.preheader:                  ; preds = %dec_label_pc_1000a830, %dec_label_pc_1000a844
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000a844 ], [ %v1_1000a838, %dec_label_pc_1000a830 ]
  %v0_1000a8a4 = phi i32 [ 12, %dec_label_pc_1000a844 ], [ %v1_1000a838, %dec_label_pc_1000a830 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000a8c05 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000a8c05, label %dec_label_pc_1000a8c8, label %dec_label_pc_1000a850

dec_label_pc_1000a850:                            ; preds = %dec_label_pc_1000a8c0.preheader, %dec_label_pc_1000a8bc
  %v0_1000a8bc = phi i32 [ %storemerge, %dec_label_pc_1000a8bc ], [ %storemerge2, %dec_label_pc_1000a8c0.preheader ]
  %v1_1000a850 = inttoptr i32 %v0_1000a8bc to i32*
  %v2_1000a850 = load i32, i32* %v1_1000a850, align 4
  store i32 %v2_1000a850, i32* %r10.global-to-local, align 4
  %v2_1000a854 = icmp ult i32 %v2_1000a850, %v0_1000a8a4
  br i1 %v2_1000a854, label %dec_label_pc_1000a8bc, label %dec_label_pc_1000a85c

dec_label_pc_1000a85c:                            ; preds = %dec_label_pc_1000a850
  %v1_1000a85c = add i32 %v0_1000a8a4, 44
  %v2_1000a860 = icmp ult i32 %v2_1000a850, %v1_1000a85c
  br i1 %v2_1000a860, label %dec_label_pc_1000a868, label %dec_label_pc_1000a8a4

dec_label_pc_1000a868:                            ; preds = %dec_label_pc_1000a85c
  %v1_1000a868 = add i32 %v0_1000a8bc, 4
  %v2_1000a868 = inttoptr i32 %v1_1000a868 to i32*
  %v3_1000a868 = load i32, i32* %v2_1000a868, align 4
  store i32 %v3_1000a868, i32* %r11.global-to-local, align 4
  %v3_1000a86c = icmp eq i32 %v3_1000a868, 0
  br i1 %v3_1000a86c, label %dec_label_pc_1000a87c, label %dec_label_pc_1000a874

dec_label_pc_1000a874:                            ; preds = %dec_label_pc_1000a868
  %v1_1000a874 = add i32 %v0_1000a8bc, 8
  %v2_1000a874 = inttoptr i32 %v1_1000a874 to i32*
  %v3_1000a874 = load i32, i32* %v2_1000a874, align 4
  %v2_1000a878 = add i32 %v3_1000a868, 8
  %v3_1000a878 = inttoptr i32 %v2_1000a878 to i32*
  store i32 %v3_1000a874, i32* %v3_1000a878, align 4
  %v0_1000a87c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000a898.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a87c

dec_label_pc_1000a87c:                            ; preds = %dec_label_pc_1000a868, %dec_label_pc_1000a874
  %v0_1000a898 = phi i32 [ %v2_1000a850, %dec_label_pc_1000a868 ], [ %v0_1000a898.pre, %dec_label_pc_1000a874 ]
  %v0_1000a87c = phi i32 [ %v0_1000a8bc, %dec_label_pc_1000a868 ], [ %v0_1000a87c.pre, %dec_label_pc_1000a874 ]
  %v1_1000a87c = add i32 %v0_1000a87c, 8
  %v2_1000a87c = inttoptr i32 %v1_1000a87c to i32*
  %v3_1000a87c = load i32, i32* %v2_1000a87c, align 4
  %v1_1000a880 = add i32 %v0_1000a87c, 4
  %v2_1000a880 = inttoptr i32 %v1_1000a880 to i32*
  %v3_1000a880 = load i32, i32* %v2_1000a880, align 4
  %v3_1000a884 = icmp eq i32 %v3_1000a87c, 0
  store i32 %v0_1000a898, i32* %r11.global-to-local, align 4
  br i1 %v3_1000a884, label %dec_label_pc_1000a898, label %dec_label_pc_1000a88c

dec_label_pc_1000a88c:                            ; preds = %dec_label_pc_1000a87c
  %v2_1000a890 = add i32 %v3_1000a87c, 4
  %v3_1000a890 = inttoptr i32 %v2_1000a890 to i32*
  store i32 %v3_1000a880, i32* %v3_1000a890, align 4
  br label %dec_label_pc_1000a8ac

dec_label_pc_1000a898:                            ; preds = %dec_label_pc_1000a87c
  store i32 %v3_1000a880, i32* %arg1, align 4
  br label %dec_label_pc_1000a8ac

dec_label_pc_1000a8a4:                            ; preds = %dec_label_pc_1000a85c
  %v2_1000a8a4 = sub i32 %v2_1000a850, %v0_1000a8a4
  store i32 %v2_1000a8a4, i32* %v1_1000a850, align 4
  br label %dec_label_pc_1000a8ac

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a898, %dec_label_pc_1000a88c, %dec_label_pc_1000a8a4
  %v0_1000a8ac = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a8ac = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a8ac = sub i32 %v1_1000a8ac, %v0_1000a8ac
  store i32 %v2_1000a8ac, i32* %r9.global-to-local, align 4
  %v0_1000a8b0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a8b0, i32* %v1_1000a830, align 4
  %v0_1000a8b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a8b4 = add i32 %v0_1000a8b4, 12
  ret i32 %v1_1000a8b4

dec_label_pc_1000a8bc:                            ; preds = %dec_label_pc_1000a850
  %v1_1000a8bc = add i32 %v0_1000a8bc, 4
  %storemerge.in = inttoptr i32 %v1_1000a8bc to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000a8c0 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000a8c0, label %dec_label_pc_1000a8c0.dec_label_pc_1000a8c8_crit_edge, label %dec_label_pc_1000a850

dec_label_pc_1000a8c0.dec_label_pc_1000a8c8_crit_edge: ; preds = %dec_label_pc_1000a8bc
  br label %dec_label_pc_1000a8c8

dec_label_pc_1000a8c8:                            ; preds = %dec_label_pc_1000a8c0.dec_label_pc_1000a8c8_crit_edge, %dec_label_pc_1000a8c0.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000a87c, { 1, 0 }
  uselistorder i32 %v2_1000a850, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000a8bc, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000a8a4, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a87c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a850, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8c0.preheader, { 1, 0 }
}

define i32 @function_1000a8d0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a8d0:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000a8d0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a8d0, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000a8d8 = add i32 %arg3, 3
  %v3_1000a95c3 = icmp eq i32 %v2_1000a8d0, 0
  br i1 %v3_1000a95c3, label %dec_label_pc_1000a964, label %dec_label_pc_1000a8e0

dec_label_pc_1000a8e0:                            ; preds = %dec_label_pc_1000a8d0, %dec_label_pc_1000a958
  %v0_1000a958 = phi i32 [ %v3_1000a958, %dec_label_pc_1000a958 ], [ %v2_1000a8d0, %dec_label_pc_1000a8d0 ]
  %v1_1000a8e0 = inttoptr i32 %v0_1000a958 to i32*
  %v2_1000a8e0 = load i32, i32* %v1_1000a8e0, align 4
  %v2_1000a8e4 = sub i32 %v0_1000a958, %v2_1000a8e0
  %v1_1000a8e8 = add i32 %v2_1000a8e4, 12
  %v3_1000a8ec = icmp ugt i32 %v1_1000a8e8, %arg2
  br i1 %v3_1000a8ec, label %dec_label_pc_1000a958, label %dec_label_pc_1000a8f4

dec_label_pc_1000a8f4:                            ; preds = %dec_label_pc_1000a8e0
  %v4_1000a8ec = icmp eq i32 %v1_1000a8e8, %arg2
  br i1 %v4_1000a8ec, label %dec_label_pc_1000a8fc, label %dec_label_pc_1000a964

dec_label_pc_1000a8fc:                            ; preds = %dec_label_pc_1000a8f4
  %v1_1000a8fc = call i32 @__asm_rlwinm(i32 %v1_1000a8d8, i32 0, i32 0, i32 29)
  %v2_1000a900 = icmp ult i32 %v2_1000a8e0, %v1_1000a8fc
  br i1 %v2_1000a900, label %dec_label_pc_1000a964, label %dec_label_pc_1000a908

dec_label_pc_1000a908:                            ; preds = %dec_label_pc_1000a8fc
  %v1_1000a908 = add i32 %v1_1000a8fc, 44
  %v2_1000a90c = icmp ult i32 %v2_1000a8e0, %v1_1000a908
  br i1 %v2_1000a90c, label %dec_label_pc_1000a914, label %dec_label_pc_1000a948

dec_label_pc_1000a914:                            ; preds = %dec_label_pc_1000a908
  %v0_1000a914 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a914 = add i32 %v0_1000a914, 4
  %v2_1000a914 = inttoptr i32 %v1_1000a914 to i32*
  %v3_1000a914 = load i32, i32* %v2_1000a914, align 4
  %v3_1000a918 = icmp eq i32 %v3_1000a914, 0
  br i1 %v3_1000a918, label %dec_label_pc_1000a928, label %dec_label_pc_1000a920

dec_label_pc_1000a920:                            ; preds = %dec_label_pc_1000a914
  %v1_1000a920 = add i32 %v0_1000a914, 8
  %v2_1000a920 = inttoptr i32 %v1_1000a920 to i32*
  %v3_1000a920 = load i32, i32* %v2_1000a920, align 4
  %v2_1000a924 = add i32 %v3_1000a914, 8
  %v3_1000a924 = inttoptr i32 %v2_1000a924 to i32*
  store i32 %v3_1000a920, i32* %v3_1000a924, align 4
  %v0_1000a928.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a928

dec_label_pc_1000a928:                            ; preds = %dec_label_pc_1000a914, %dec_label_pc_1000a920
  %v0_1000a928 = phi i32 [ %v0_1000a914, %dec_label_pc_1000a914 ], [ %v0_1000a928.pre, %dec_label_pc_1000a920 ]
  %v1_1000a928 = add i32 %v0_1000a928, 8
  %v2_1000a928 = inttoptr i32 %v1_1000a928 to i32*
  %v3_1000a928 = load i32, i32* %v2_1000a928, align 4
  %v1_1000a92c = add i32 %v0_1000a928, 4
  %v2_1000a92c = inttoptr i32 %v1_1000a92c to i32*
  %v3_1000a92c = load i32, i32* %v2_1000a92c, align 4
  %v3_1000a930 = icmp eq i32 %v3_1000a928, 0
  br i1 %v3_1000a930, label %dec_label_pc_1000a940, label %dec_label_pc_1000a938

dec_label_pc_1000a938:                            ; preds = %dec_label_pc_1000a928
  %v2_1000a938 = add i32 %v3_1000a928, 4
  %v3_1000a938 = inttoptr i32 %v2_1000a938 to i32*
  store i32 %v3_1000a92c, i32* %v3_1000a938, align 4
  ret i32 %v2_1000a8e0

dec_label_pc_1000a940:                            ; preds = %dec_label_pc_1000a928
  %v1_1000a940 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a940 = inttoptr i32 %v1_1000a940 to i32*
  store i32 %v3_1000a92c, i32* %v2_1000a940, align 4
  ret i32 %v2_1000a8e0

dec_label_pc_1000a948:                            ; preds = %dec_label_pc_1000a908
  %v2_1000a948 = sub i32 %v2_1000a8e0, %v1_1000a8fc
  %v1_1000a950 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a950 = inttoptr i32 %v1_1000a950 to i32*
  store i32 %v2_1000a948, i32* %v2_1000a950, align 4
  ret i32 %v1_1000a8fc

dec_label_pc_1000a958:                            ; preds = %dec_label_pc_1000a8e0
  %v1_1000a958 = add i32 %v0_1000a958, 4
  %v2_1000a958 = inttoptr i32 %v1_1000a958 to i32*
  %v3_1000a958 = load i32, i32* %v2_1000a958, align 4
  store i32 %v3_1000a958, i32* %r11.global-to-local, align 4
  %v3_1000a95c = icmp eq i32 %v3_1000a958, 0
  br i1 %v3_1000a95c, label %dec_label_pc_1000a95c.dec_label_pc_1000a964.loopexit_crit_edge, label %dec_label_pc_1000a8e0

dec_label_pc_1000a95c.dec_label_pc_1000a964.loopexit_crit_edge: ; preds = %dec_label_pc_1000a958
  br label %dec_label_pc_1000a964

dec_label_pc_1000a964:                            ; preds = %dec_label_pc_1000a8d0, %dec_label_pc_1000a95c.dec_label_pc_1000a964.loopexit_crit_edge, %dec_label_pc_1000a8f4, %dec_label_pc_1000a8fc
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000a958, { 1, 2, 0 }
  uselistorder i32 %v0_1000a928, { 1, 0 }
  uselistorder i32 %v1_1000a8fc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a8e0, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_1000a958, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000a964, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000a928, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8e0, { 1, 0 }
}

define i32 @function_1000a96c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a96c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a96c = icmp eq i32 %arg3, 0
  %v2_1000a970 = add i32 %arg2, 4
  %v3_1000a970 = inttoptr i32 %v2_1000a970 to i32*
  store i32 %arg4, i32* %v3_1000a970, align 4
  %v2_1000a974 = add i32 %arg2, 8
  %v3_1000a974 = inttoptr i32 %v2_1000a974 to i32*
  store i32 %arg3, i32* %v3_1000a974, align 4
  br i1 %v3_1000a96c, label %dec_label_pc_1000a984, label %dec_label_pc_1000a97c

dec_label_pc_1000a97c:                            ; preds = %dec_label_pc_1000a96c
  %v2_1000a97c = add i32 %arg3, 4
  %v3_1000a97c = inttoptr i32 %v2_1000a97c to i32*
  store i32 %arg2, i32* %v3_1000a97c, align 4
  br label %dec_label_pc_1000a988

dec_label_pc_1000a984:                            ; preds = %dec_label_pc_1000a96c
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a988

dec_label_pc_1000a988:                            ; preds = %dec_label_pc_1000a97c, %dec_label_pc_1000a984
  %v3_1000a988 = icmp eq i32 %arg4, 0
  %v0_1000a98c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a988, i32 %v0_1000a98c)
  %v2_1000a990 = add i32 %arg4, 8
  %v3_1000a990 = inttoptr i32 %v2_1000a990 to i32*
  store i32 %arg2, i32* %v3_1000a990, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000a988, { 1, 0 }
}

define i32 @function_1000a998(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a998:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a998 = icmp eq i32 %arg3, 0
  br i1 %v3_1000a998, label %dec_label_pc_1000a9a8, label %dec_label_pc_1000a9a0

dec_label_pc_1000a9a0:                            ; preds = %dec_label_pc_1000a998
  %v2_1000a9a0 = add i32 %arg3, 4
  %v3_1000a9a0 = inttoptr i32 %v2_1000a9a0 to i32*
  store i32 %arg2, i32* %v3_1000a9a0, align 4
  br label %dec_label_pc_1000a9ac

dec_label_pc_1000a9a8:                            ; preds = %dec_label_pc_1000a998
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a9ac

dec_label_pc_1000a9ac:                            ; preds = %dec_label_pc_1000a9a0, %dec_label_pc_1000a9a8
  %v2_1000a9ac = add i32 %arg2, 8
  %v3_1000a9ac = inttoptr i32 %v2_1000a9ac to i32*
  store i32 %arg3, i32* %v3_1000a9ac, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a9ac, { 1, 0 }
}

define i32 @function_1000a9b4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a9b4:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000a9cc = load i32, i32* %arg1, align 4
  store i32 %v2_1000a9cc, i32* @r31, align 4
  %v2_1000a9d0 = add i32 %arg3, %arg2
  store i32 %v2_1000a9d0, i32* %r3.global-to-local, align 4
  %v3_1000a9e47 = icmp eq i32 %v2_1000a9cc, 0
  %v1_1000a9e88 = add i32 %v2_1000a9cc, 12
  %tmp69 = icmp uge i32 %v1_1000a9e88, %arg2
  %or.cond10 = or i1 %v3_1000a9e47, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000a9f4, label %dec_label_pc_1000a9dc

dec_label_pc_1000a9dc:                            ; preds = %dec_label_pc_1000a9b4, %dec_label_pc_1000a9dc
  %v0_1000aa3c11 = phi i32 [ %v3_1000a9e0, %dec_label_pc_1000a9dc ], [ %v2_1000a9cc, %dec_label_pc_1000a9b4 ]
  store i32 %v0_1000aa3c11, i32* %r11.global-to-local, align 4
  %v1_1000a9e0 = add i32 %v0_1000aa3c11, 4
  %v2_1000a9e0 = inttoptr i32 %v1_1000a9e0 to i32*
  %v3_1000a9e0 = load i32, i32* %v2_1000a9e0, align 4
  store i32 %v3_1000a9e0, i32* @r31, align 4
  %v3_1000a9e4 = icmp eq i32 %v3_1000a9e0, 0
  %v1_1000a9e8 = add i32 %v3_1000a9e0, 12
  %tmp6 = icmp uge i32 %v1_1000a9e8, %arg2
  %or.cond = or i1 %v3_1000a9e4, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000a9f4, label %dec_label_pc_1000a9dc

dec_label_pc_1000a9f4:                            ; preds = %dec_label_pc_1000a9dc, %dec_label_pc_1000a9b4
  %v0_1000aa30.lcssa = phi i32 [ 0, %dec_label_pc_1000a9b4 ], [ %v0_1000aa3c11, %dec_label_pc_1000a9dc ]
  %v0_1000aa3c.lcssa = phi i32 [ %v2_1000a9cc, %dec_label_pc_1000a9b4 ], [ %v3_1000a9e0, %dec_label_pc_1000a9dc ]
  %v3_1000a9e4.lcssa = phi i1 [ %v3_1000a9e47, %dec_label_pc_1000a9b4 ], [ %v3_1000a9e4, %dec_label_pc_1000a9dc ]
  br i1 %v3_1000a9e4.lcssa, label %dec_label_pc_1000aaac, label %dec_label_pc_1000a9fc

dec_label_pc_1000a9fc:                            ; preds = %dec_label_pc_1000a9f4
  %v1_1000a9fc = inttoptr i32 %v0_1000aa3c.lcssa to i32*
  %v2_1000a9fc = load i32, i32* %v1_1000a9fc, align 4
  %v2_1000aa00 = sub i32 %v0_1000aa3c.lcssa, %v2_1000a9fc
  %v1_1000aa04 = add i32 %v2_1000aa00, 12
  %v3_1000aa08 = icmp ugt i32 %v1_1000aa04, %v2_1000a9d0
  br i1 %v3_1000aa08, label %dec_label_pc_1000aaac, label %dec_label_pc_1000aa10

dec_label_pc_1000aa10:                            ; preds = %dec_label_pc_1000a9fc
  %v4_1000aa08 = icmp eq i32 %v1_1000aa04, %v2_1000a9d0
  %v2_1000aa14 = add i32 %v2_1000a9fc, %arg3
  store i32 %v2_1000aa14, i32* @r29, align 4
  br i1 %v4_1000aa08, label %dec_label_pc_1000aa1c, label %dec_label_pc_1000aa4c

dec_label_pc_1000aa1c:                            ; preds = %dec_label_pc_1000aa10
  %v3_1000aa1c = icmp eq i32 %v0_1000aa30.lcssa, 0
  br i1 %v3_1000aa1c, label %dec_label_pc_1000aaa0, label %dec_label_pc_1000aa24

dec_label_pc_1000aa24:                            ; preds = %dec_label_pc_1000aa1c
  %v1_1000aa24 = add i32 %v0_1000aa30.lcssa, 12
  %v4_1000aa28 = icmp eq i32 %v1_1000aa24, %arg2
  br i1 %v4_1000aa28, label %dec_label_pc_1000aa30, label %dec_label_pc_1000aaa0

dec_label_pc_1000aa30:                            ; preds = %dec_label_pc_1000aa24
  %v1_1000aa30 = inttoptr i32 %v0_1000aa30.lcssa to i32*
  %v2_1000aa30 = load i32, i32* %v1_1000aa30, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000aa38 = add i32 %v0_1000aa30.lcssa, 8
  %v2_1000aa38 = inttoptr i32 %v1_1000aa38 to i32*
  %v3_1000aa38 = load i32, i32* %v2_1000aa38, align 4
  %v2_1000aa40 = add i32 %v2_1000aa30, %v2_1000aa14
  store i32 %v2_1000aa40, i32* @r29, align 4
  %v5_1000aa44 = call i32 @function_1000a998(i32* %arg1, i32 %v0_1000aa3c.lcssa, i32 %v3_1000aa38, i32 %v2_1000a9d0)
  store i32 %v5_1000aa44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aaa0

dec_label_pc_1000aa4c:                            ; preds = %dec_label_pc_1000aa10
  %v1_1000aa4c = add i32 %v0_1000aa3c.lcssa, 4
  %v2_1000aa4c = inttoptr i32 %v1_1000aa4c to i32*
  %v3_1000aa4c = load i32, i32* %v2_1000aa4c, align 4
  %v3_1000aa50 = icmp eq i32 %v3_1000aa4c, 0
  br i1 %v3_1000aa50, label %dec_label_pc_1000aa88, label %dec_label_pc_1000aa58

dec_label_pc_1000aa58:                            ; preds = %dec_label_pc_1000aa4c
  %v1_1000aa58 = inttoptr i32 %v3_1000aa4c to i32*
  %v2_1000aa58 = load i32, i32* %v1_1000aa58, align 4
  %v2_1000aa5c = sub i32 %v3_1000aa4c, %v2_1000aa58
  %v1_1000aa60 = add i32 %v2_1000aa5c, 12
  %v4_1000aa64 = icmp eq i32 %v2_1000a9d0, %v1_1000aa60
  br i1 %v4_1000aa64, label %dec_label_pc_1000aa6c, label %dec_label_pc_1000aa88

dec_label_pc_1000aa6c:                            ; preds = %dec_label_pc_1000aa58
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000aa78 = add i32 %v2_1000aa58, %v2_1000aa14
  store i32 %v2_1000aa78, i32* @r29, align 4
  store i32 %v3_1000aa4c, i32* @r31, align 4
  %v5_1000aa80 = call i32 @function_1000a998(i32* %arg1, i32 %v3_1000aa4c, i32 %v0_1000aa30.lcssa, i32 %v2_1000a9d0)
  store i32 %v5_1000aa80, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aaa0

dec_label_pc_1000aa88:                            ; preds = %dec_label_pc_1000aa58, %dec_label_pc_1000aa4c
  %v2_1000aa88 = add i32 %v0_1000aa3c.lcssa, %arg3
  store i32 %v2_1000aa88, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268479136, i32* @lr, align 4
  %v5_1000aa9c = call i32 @function_1000a96c(i32* %arg1, i32 %v2_1000aa88, i32 %v0_1000aa30.lcssa, i32 %v3_1000aa4c)
  store i32 %v5_1000aa9c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aaa0

dec_label_pc_1000aaa0:                            ; preds = %dec_label_pc_1000aa24, %dec_label_pc_1000aa1c, %dec_label_pc_1000aa6c, %dec_label_pc_1000aa30, %dec_label_pc_1000aa88
  %v0_1000aaa0 = load i32, i32* @r31, align 4
  store i32 %v0_1000aaa0, i32* @r30, align 4
  %v0_1000aaa4 = load i32, i32* @r29, align 4
  %v2_1000aaa4 = inttoptr i32 %v0_1000aaa0 to i32*
  store i32 %v0_1000aaa4, i32* %v2_1000aaa4, align 4
  br label %dec_label_pc_1000aac8

dec_label_pc_1000aaac:                            ; preds = %dec_label_pc_1000a9fc, %dec_label_pc_1000a9f4
  %v2_1000aaac = add i32 %v2_1000a9d0, -12
  %v3_1000aaac = inttoptr i32 %v2_1000aaac to i32*
  store i32 %arg3, i32* %v3_1000aaac, align 4
  %v0_1000aab0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000aab0 = add i32 %v0_1000aab0, -12
  store i32 %v1_1000aab0, i32* @r30, align 4
  %v0_1000aab4 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000aab8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000aab8, i32* %r3.global-to-local, align 4
  %v0_1000aabc = load i32, i32* @r31, align 4
  store i32 268479176, i32* @lr, align 4
  %v4_1000aac4 = inttoptr i32 %v0_1000aab8 to i32*
  %v5_1000aac4 = call i32 @function_1000a96c(i32* %v4_1000aac4, i32 %v1_1000aab0, i32 %v0_1000aab4, i32 %v0_1000aabc)
  store i32 %v5_1000aac4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aac8

dec_label_pc_1000aac8:                            ; preds = %dec_label_pc_1000aaa0, %dec_label_pc_1000aaac
  %v0_1000aacc = load i32, i32* @r30, align 4
  store i32 %v0_1000aacc, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000aacc

; uselistorder directives
  uselistorder i32 %v3_1000aa4c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000aa04, { 1, 0 }
  uselistorder i32 %v0_1000aa3c.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000aa30.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000a9e0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000a9d0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 4, 9, 10, 11, 1, 2, 3, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_1000a998, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000aac8, { 1, 0 }
  uselistorder label %dec_label_pc_1000aaa0, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a9dc, { 1, 0 }
}

define i32 @function_1000aae0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000aae0:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000ab18 = load i32, i32* bitcast (i32** @global_var_1001c654.311 to i32*), align 4
  %v2_1000ab2427 = load i8, i8* %arg1, align 1
  %v3_1000ab2428 = zext i8 %v2_1000ab2427 to i32
  %v1_1000ab2829 = mul nuw nsw i32 %v3_1000ab2428, 2
  %v2_1000ab2c30 = add i32 %v1_1000ab2829, %v3_1000ab18
  %v3_1000ab2c31 = inttoptr i32 %v2_1000ab2c30 to i16*
  %v4_1000ab2c32 = load i16, i16* %v3_1000ab2c31, align 2
  %v1_1000ab3034 = and i16 %v4_1000ab2c32, 32
  %v3_1000ab3035 = icmp eq i16 %v1_1000ab3034, 0
  br i1 %v3_1000ab3035, label %dec_label_pc_1000ab38, label %dec_label_pc_1000ab20

dec_label_pc_1000ab20:                            ; preds = %dec_label_pc_1000aae0, %dec_label_pc_1000ab20
  %v0_1000ab5836 = phi i32 [ %v1_1000ab20, %dec_label_pc_1000ab20 ], [ %tmp, %dec_label_pc_1000aae0 ]
  %v1_1000ab20 = add i32 %v0_1000ab5836, 1
  store i32 %v1_1000ab20, i32* %r31.global-to-local, align 4
  %v1_1000ab24 = inttoptr i32 %v1_1000ab20 to i8*
  %v2_1000ab24 = load i8, i8* %v1_1000ab24, align 1
  %v3_1000ab24 = zext i8 %v2_1000ab24 to i32
  %v1_1000ab28 = mul nuw nsw i32 %v3_1000ab24, 2
  %v2_1000ab2c = add i32 %v1_1000ab28, %v3_1000ab18
  %v3_1000ab2c = inttoptr i32 %v2_1000ab2c to i16*
  %v4_1000ab2c = load i16, i16* %v3_1000ab2c, align 2
  %v1_1000ab30 = and i16 %v4_1000ab2c, 32
  %v3_1000ab30 = icmp eq i16 %v1_1000ab30, 0
  br i1 %v3_1000ab30, label %dec_label_pc_1000ab38, label %dec_label_pc_1000ab20

dec_label_pc_1000ab38:                            ; preds = %dec_label_pc_1000ab20, %dec_label_pc_1000aae0
  %v0_1000ab58.lcssa = phi i32 [ %tmp, %dec_label_pc_1000aae0 ], [ %v1_1000ab20, %dec_label_pc_1000ab20 ]
  %v2_1000ab24.lcssa = phi i8 [ %v2_1000ab2427, %dec_label_pc_1000aae0 ], [ %v2_1000ab24, %dec_label_pc_1000ab20 ]
  %v3_1000ab38 = icmp eq i8 %v2_1000ab24.lcssa, 43
  br i1 %v3_1000ab38, label %dec_label_pc_1000ab58, label %dec_label_pc_1000ab40

dec_label_pc_1000ab40:                            ; preds = %dec_label_pc_1000ab38
  %v3_1000ab40 = icmp eq i8 %v2_1000ab24.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000ab40, label %dec_label_pc_1000ab58, label %dec_label_pc_1000ab5c

dec_label_pc_1000ab58:                            ; preds = %dec_label_pc_1000ab38, %dec_label_pc_1000ab40
  %storemerge = phi i32 [ 1, %dec_label_pc_1000ab40 ], [ 0, %dec_label_pc_1000ab38 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000ab58 = add i32 %v0_1000ab58.lcssa, 1
  store i32 %v1_1000ab58, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ab5c

dec_label_pc_1000ab5c:                            ; preds = %dec_label_pc_1000ab40, %dec_label_pc_1000ab58
  %v1_1000ab5c = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000ab5c = icmp eq i32 %v1_1000ab5c, 0
  br i1 %v4_1000ab5c, label %dec_label_pc_1000ab68, label %dec_label_pc_1000ab5c.dec_label_pc_1000aba4_crit_edge

dec_label_pc_1000ab5c.dec_label_pc_1000aba4_crit_edge: ; preds = %dec_label_pc_1000ab5c
  %v0_1000aba4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000aba4

dec_label_pc_1000ab68:                            ; preds = %dec_label_pc_1000ab5c
  %v0_1000ab68 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ab68 = inttoptr i32 %v0_1000ab68 to i8*
  %v2_1000ab68 = load i8, i8* %v1_1000ab68, align 1
  %v0_1000ab6c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ab6c = add i32 %v0_1000ab6c, 10
  store i32 %v1_1000ab6c, i32* %r30.global-to-local, align 4
  %v3_1000ab70 = icmp eq i8 %v2_1000ab68, 48
  br i1 %v3_1000ab70, label %dec_label_pc_1000ab78, label %dec_label_pc_1000ab98

dec_label_pc_1000ab78:                            ; preds = %dec_label_pc_1000ab68
  %v1_1000ab78 = add i32 %v0_1000ab68, 1
  %v2_1000ab78 = inttoptr i32 %v1_1000ab78 to i8*
  %v3_1000ab78 = load i8, i8* %v2_1000ab78, align 1
  %v4_1000ab78 = zext i8 %v3_1000ab78 to i32
  store i32 %v1_1000ab78, i32* %r31.global-to-local, align 4
  %v1_1000ab7c = add i32 %v0_1000ab6c, 8
  store i32 %v1_1000ab7c, i32* %r30.global-to-local, align 4
  %v1_1000ab80 = or i32 %v4_1000ab78, 32
  %v3_1000ab88 = icmp eq i32 %v1_1000ab80, 120
  br i1 %v3_1000ab88, label %dec_label_pc_1000ab90, label %dec_label_pc_1000ab98

dec_label_pc_1000ab90:                            ; preds = %dec_label_pc_1000ab78
  %v1_1000ab90 = mul i32 %v1_1000ab7c, 2
  store i32 %v1_1000ab90, i32* %r30.global-to-local, align 4
  %v1_1000ab94 = add i32 %v0_1000ab68, 2
  store i32 %v1_1000ab94, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ab98

dec_label_pc_1000ab98:                            ; preds = %dec_label_pc_1000ab78, %dec_label_pc_1000ab68, %dec_label_pc_1000ab90
  %v0_1000ac4c15 = phi i32 [ %v1_1000ab78, %dec_label_pc_1000ab90 ], [ %tmp, %dec_label_pc_1000ab68 ], [ %v1_1000ab78, %dec_label_pc_1000ab78 ]
  %v0_1000ab98 = phi i32 [ %v1_1000ab90, %dec_label_pc_1000ab90 ], [ %v1_1000ab6c, %dec_label_pc_1000ab68 ], [ %v1_1000ab7c, %dec_label_pc_1000ab78 ]
  %tmp22 = icmp slt i32 %v0_1000ab98, 17
  br i1 %tmp22, label %dec_label_pc_1000aba4, label %dec_label_pc_1000aba0

dec_label_pc_1000aba0:                            ; preds = %dec_label_pc_1000ab98
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000aba4

dec_label_pc_1000aba4:                            ; preds = %dec_label_pc_1000ab5c.dec_label_pc_1000aba4_crit_edge, %dec_label_pc_1000ab98, %dec_label_pc_1000aba0
  %v0_1000ac4c14 = phi i32 [ %tmp, %dec_label_pc_1000ab5c.dec_label_pc_1000aba4_crit_edge ], [ %v0_1000ac4c15, %dec_label_pc_1000ab98 ], [ %v0_1000ac4c15, %dec_label_pc_1000aba0 ]
  %v1_1000abb8 = phi i32 [ %v0_1000aba4.pre, %dec_label_pc_1000ab5c.dec_label_pc_1000aba4_crit_edge ], [ %v0_1000ab98, %dec_label_pc_1000ab98 ], [ 16, %dec_label_pc_1000aba0 ]
  %v1_1000aba4 = add i32 %v1_1000abb8, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000abac = icmp ugt i32 %v1_1000aba4, 34
  br i1 %v2_1000abac, label %dec_label_pc_1000ac44, label %dec_label_pc_1000abb4

dec_label_pc_1000abb4:                            ; preds = %dec_label_pc_1000aba4
  %v2_1000abb8 = udiv i32 -1, %v1_1000abb8
  store i32 %v2_1000abb8, i32* @r29, align 4
  %v2_1000abbc = mul i32 %v2_1000abb8, %v1_1000abb8
  %v1_1000abc0 = sub i32 -1, %v2_1000abbc
  %v1_1000abc4 = urem i32 %v1_1000abc0, 256
  store i32 %v1_1000abc4, i32* @r27, align 4
  %v0_1000abd0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000abd0

dec_label_pc_1000abcc:                            ; preds = %dec_label_pc_1000ac38, %dec_label_pc_1000ac20
  %v1_1000abd4.pre = phi i32 [ %v1_1000abd8, %dec_label_pc_1000ac38 ], [ %v1_1000abd4.pre.pre, %dec_label_pc_1000ac20 ]
  %v0_1000abd4.pre = phi i32 [ %v2_1000ac3c, %dec_label_pc_1000ac38 ], [ %v0_1000abd4.pre.pre, %dec_label_pc_1000ac20 ]
  %v0_1000abcc = phi i32 [ %v1_1000abdc, %dec_label_pc_1000ac38 ], [ %v0_1000abcc.pre, %dec_label_pc_1000ac20 ]
  br label %dec_label_pc_1000abd0

dec_label_pc_1000abd0:                            ; preds = %dec_label_pc_1000abb4, %dec_label_pc_1000abcc
  %v0_1000ac4c12 = phi i32 [ %v0_1000ac4c14, %dec_label_pc_1000abb4 ], [ %v0_1000abcc, %dec_label_pc_1000abcc ]
  %v0_1000abdc = phi i32 [ %v0_1000abd0.pre, %dec_label_pc_1000abb4 ], [ %v0_1000abcc, %dec_label_pc_1000abcc ]
  %v1_1000abd8 = phi i32 [ %v2_1000abb8, %dec_label_pc_1000abb4 ], [ %v1_1000abd4.pre, %dec_label_pc_1000abcc ]
  %v0_1000ac38 = phi i32 [ 0, %dec_label_pc_1000abb4 ], [ %v0_1000abd4.pre, %dec_label_pc_1000abcc ]
  %v1_1000abd0 = inttoptr i32 %v0_1000abdc to i8*
  %v2_1000abd0 = load i8, i8* %v1_1000abd0, align 1
  %v3_1000abd0 = zext i8 %v2_1000abd0 to i32
  %v3_1000abd4 = icmp ugt i32 %v0_1000ac38, %v1_1000abd8
  %v1_1000abdc = add i32 %v0_1000abdc, 1
  store i32 %v1_1000abdc, i32* %r31.global-to-local, align 4
  %v1_1000abe0 = add nsw i32 %v3_1000abd0, -48
  %v1_1000abe4 = or i32 %v3_1000abd0, 32
  %v1_1000abe8 = urem i32 %v1_1000abe0, 256
  %tmp23 = icmp ult i32 %v1_1000abe8, 10
  br i1 %tmp23, label %dec_label_pc_1000ac08, label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abd0
  %tmp24 = icmp ult i32 %v1_1000abe4, 97
  br i1 %tmp24, label %dec_label_pc_1000ac08, label %dec_label_pc_1000ac04

dec_label_pc_1000ac04:                            ; preds = %dec_label_pc_1000abf8
  %v1_1000abf8 = add nsw i32 %v1_1000abe4, -87
  %v1_1000ac04 = urem i32 %v1_1000abf8, 256
  br label %dec_label_pc_1000ac08

dec_label_pc_1000ac08:                            ; preds = %dec_label_pc_1000abf8, %dec_label_pc_1000abd0, %dec_label_pc_1000ac04
  %v1_1000ac3c = phi i32 [ 40, %dec_label_pc_1000abf8 ], [ %v1_1000abe8, %dec_label_pc_1000abd0 ], [ %v1_1000ac04, %dec_label_pc_1000ac04 ]
  %v1_1000ac08 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ac08 = icmp slt i32 %v1_1000ac3c, %v1_1000ac08
  br i1 %v2_1000ac08, label %dec_label_pc_1000ac10, label %dec_label_pc_1000ac44

dec_label_pc_1000ac10:                            ; preds = %dec_label_pc_1000ac08
  br i1 %v3_1000abd4, label %dec_label_pc_1000ac20, label %dec_label_pc_1000ac14

dec_label_pc_1000ac14:                            ; preds = %dec_label_pc_1000ac10
  %v1_1000ac14 = load i32, i32* @r27, align 4
  %v0_1000ac18.not = icmp ne i32 %v0_1000ac38, %v1_1000abd8
  %tmp25 = icmp ule i32 %v1_1000ac3c, %v1_1000ac14
  %or.cond = or i1 %tmp25, %v0_1000ac18.not
  br i1 %or.cond, label %dec_label_pc_1000ac38, label %dec_label_pc_1000ac20

dec_label_pc_1000ac20:                            ; preds = %dec_label_pc_1000ac14, %dec_label_pc_1000ac10
  %v0_1000ac20 = call i32 @function_10009c34()
  %v0_1000ac24 = load i32, i32* @r28, align 4
  %v1_1000ac24 = load i32, i32* @r26, align 4
  %v2_1000ac24 = and i32 %v1_1000ac24, %v0_1000ac24
  store i32 %v2_1000ac24, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000ac30 = inttoptr i32 %v0_1000ac20 to i32*
  store i32 34, i32* %v2_1000ac30, align 4
  %v0_1000abcc.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000abd4.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000abd4.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000abcc

dec_label_pc_1000ac38:                            ; preds = %dec_label_pc_1000ac14
  %v2_1000ac38 = mul i32 %v1_1000ac08, %v0_1000ac38
  %v2_1000ac3c = add i32 %v2_1000ac38, %v1_1000ac3c
  store i32 %v2_1000ac3c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000abcc

dec_label_pc_1000ac44:                            ; preds = %dec_label_pc_1000ac08, %dec_label_pc_1000aba4
  %v0_1000ac4c = phi i32 [ %v0_1000ac4c14, %dec_label_pc_1000aba4 ], [ %v0_1000ac4c12, %dec_label_pc_1000ac08 ]
  %v0_1000ac44 = load i32, i32* @r25, align 4
  %v3_1000ac44 = icmp eq i32 %v0_1000ac44, 0
  br i1 %v3_1000ac44, label %dec_label_pc_1000ac50, label %dec_label_pc_1000ac4c

dec_label_pc_1000ac4c:                            ; preds = %dec_label_pc_1000ac44
  %v2_1000ac4c = inttoptr i32 %v0_1000ac44 to i32*
  store i32 %v0_1000ac4c, i32* %v2_1000ac4c, align 4
  br label %dec_label_pc_1000ac50

dec_label_pc_1000ac50:                            ; preds = %dec_label_pc_1000ac44, %dec_label_pc_1000ac4c
  %v0_1000ac50 = load i32, i32* @r26, align 4
  %v3_1000ac50 = icmp eq i32 %v0_1000ac50, 0
  %v0_1000ac54 = load i32, i32* @r28, align 4
  %v1_1000ac54 = sub i32 0, %v0_1000ac54
  %tmp40 = lshr i32 %v1_1000ac54, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000ac94.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000ac50, label %dec_label_pc_1000ac84, label %dec_label_pc_1000ac6c

dec_label_pc_1000ac6c:                            ; preds = %dec_label_pc_1000ac50
  %v3_1000ac6c = icmp ugt i32 %v0_1000ac94.pre.pre, %tmp41
  br i1 %v3_1000ac6c, label %dec_label_pc_1000ac74, label %dec_label_pc_1000ac84

dec_label_pc_1000ac74:                            ; preds = %dec_label_pc_1000ac6c
  %v0_1000ac74 = call i32 @function_10009c34()
  %v2_1000ac7c = inttoptr i32 %v0_1000ac74 to i32*
  store i32 34, i32* %v2_1000ac7c, align 4
  %v0_1000ac80 = load i32, i32* @r31, align 4
  store i32 %v0_1000ac80, i32* %r8.global-to-local, align 4
  %v0_1000ac84.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000ac84

dec_label_pc_1000ac84:                            ; preds = %dec_label_pc_1000ac50, %dec_label_pc_1000ac6c, %dec_label_pc_1000ac74
  %v0_1000ac94.pre = phi i32 [ %v0_1000ac94.pre.pre, %dec_label_pc_1000ac6c ], [ %v0_1000ac80, %dec_label_pc_1000ac74 ], [ %v0_1000ac94.pre.pre, %dec_label_pc_1000ac50 ]
  %v0_1000ac84 = phi i32 [ %v0_1000ac54, %dec_label_pc_1000ac6c ], [ %v0_1000ac84.pre, %dec_label_pc_1000ac74 ], [ %v0_1000ac54, %dec_label_pc_1000ac50 ]
  %v3_1000ac84 = icmp eq i32 %v0_1000ac84, 0
  br i1 %v3_1000ac84, label %dec_label_pc_1000ac90, label %dec_label_pc_1000ac8c

dec_label_pc_1000ac8c:                            ; preds = %dec_label_pc_1000ac84
  %v1_1000ac8c = sub i32 0, %v0_1000ac94.pre
  store i32 %v1_1000ac8c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ac90

dec_label_pc_1000ac90:                            ; preds = %dec_label_pc_1000ac84, %dec_label_pc_1000ac8c
  %v0_1000ac94 = phi i32 [ %v1_1000ac8c, %dec_label_pc_1000ac8c ], [ %v0_1000ac94.pre, %dec_label_pc_1000ac84 ]
  ret i32 %v0_1000ac94

; uselistorder directives
  uselistorder i32 %v0_1000ac94.pre, { 1, 0 }
  uselistorder i32 %v0_1000ac94.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000ac3c, { 1, 0 }
  uselistorder i32 %v1_1000abe8, { 1, 0 }
  uselistorder i32 %v1_1000abe4, { 1, 0 }
  uselistorder i32 %v1_1000abdc, { 1, 0 }
  uselistorder i32 %v3_1000abd0, { 1, 0 }
  uselistorder i32 %v0_1000ac38, { 1, 0, 2 }
  uselistorder i32 %v1_1000abd8, { 0, 2, 1 }
  uselistorder i32 %v0_1000abcc, { 1, 0 }
  uselistorder i32 %v2_1000abb8, { 1, 0, 2 }
  uselistorder i32 %v1_1000ab90, { 1, 0 }
  uselistorder i32 %v1_1000ab7c, { 1, 0, 2 }
  uselistorder i8 %v2_1000ab24.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000ab20, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000ab18, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32 34, { 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 14, 15 }
  uselistorder i32 26, { 3, 0, 1, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ac90, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ac50, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000abd0, { 1, 0 }
  uselistorder label %dec_label_pc_1000aba4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ab98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ab5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab58, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab20, { 1, 0 }
}

define i32 @function_1000aca8() local_unnamed_addr {
dec_label_pc_1000aca8:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000acc0 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000accc = load i32, i32* @r3, align 4
  store i32 %v0_1000accc, i32* @r31, align 4
  store i32 %v2_1000acc0, i32* @r3, align 4
  %v3_1000acd8 = call i32 @function_1000af9c(i32 %v2_1000acc0, i32 ptrtoint ([3 x i8]* @global_var_1000af94.291 to i32))
  %v0_1000ace0 = call i32 @function_1000af94()
  %v3_1000ace8 = load i32, i32* @global_var_1001c698.314, align 4
  %v3_1000acec = icmp eq i32 %v3_1000ace8, 0
  br i1 %v3_1000acec, label %dec_label_pc_1000ad00, label %dec_label_pc_1000acf4

dec_label_pc_1000acf4:                            ; preds = %dec_label_pc_1000aca8
  %v0_1000acf4 = load i32, i32* @r31, align 4
  %v3_1000acfc = call i32 @unknown_0(i32 %v0_1000acf4, i32 268566528)
  br label %dec_label_pc_1000ad00

dec_label_pc_1000ad00:                            ; preds = %dec_label_pc_1000aca8, %dec_label_pc_1000acf4
  store i32 %v2_1000acc0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000ad08 = call i32 @function_1000af9c(i32 %v2_1000acc0, i32 1)
  store i32 %v2_1000ad08, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ad10.316 to i32), i32* @lr, align 4
  %v1_1000ad0c = call i32 @function_1000af00(i32 %v2_1000ad08)
  %v0_1000ad24 = load i32, i32* @r31, align 4
  %v1_1000ad28 = call i32 @function_1000b334(i32 %v0_1000ad24)
  ret i32 %v1_1000ad28

; uselistorder directives
  uselistorder i32 %v2_1000acc0, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000af9c, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000ad00, { 1, 0 }
}

define i32 @function_1000ad2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ad2c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000ad2c = icmp eq i32 %arg1, 0
  br i1 %v3_1000ad2c, label %dec_label_pc_1000aee0, label %dec_label_pc_1000ad5c.lr.ph

dec_label_pc_1000ad5c.lr.ph:                      ; preds = %dec_label_pc_1000ad2c
  %v2_1000ad50 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000ad50, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000ad5c42 = add i32 %v2_1000ad50, 132
  %v3_1000ad5c43 = inttoptr i32 %v2_1000ad5c42 to i32*
  store i32 0, i32* %v3_1000ad5c43, align 4
  %v0_1000ad6044 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ad6045 = add i32 %v0_1000ad6044, -1
  store i32 %v1_1000ad6045, i32* %r11.global-to-local, align 4
  %v1_1000ad6446 = mul i32 %v1_1000ad6045, 4
  %v1_1000ad6847 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000ad6848 = add i32 %v1_1000ad6847, %v1_1000ad6446
  %v0_1000ad6c49 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ad6c50 = add i32 %v0_1000ad6c49, -1
  store i32 %v1_1000ad6c50, i32* %ctr.global-to-local, align 4
  %v2_1000ad6c51 = icmp eq i32 %v1_1000ad6c50, 0
  br i1 %v2_1000ad6c51, label %dec_label_pc_1000ad70, label %dec_label_pc_1000ad5c.dec_label_pc_1000ad5c_crit_edge

dec_label_pc_1000ad5c.dec_label_pc_1000ad5c_crit_edge: ; preds = %dec_label_pc_1000ad5c.lr.ph, %dec_label_pc_1000ad5c.dec_label_pc_1000ad5c_crit_edge
  %v2_1000ad6852 = phi i32 [ %v2_1000ad68, %dec_label_pc_1000ad5c.dec_label_pc_1000ad5c_crit_edge ], [ %v2_1000ad6848, %dec_label_pc_1000ad5c.lr.ph ]
  %v0_1000ad5c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ad5c = add i32 %v2_1000ad6852, 8
  %v3_1000ad5c = inttoptr i32 %v2_1000ad5c to i32*
  store i32 %v0_1000ad5c.pre, i32* %v3_1000ad5c, align 4
  %v0_1000ad60 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ad60 = add i32 %v0_1000ad60, -1
  store i32 %v1_1000ad60, i32* %r11.global-to-local, align 4
  %v1_1000ad64 = mul i32 %v1_1000ad60, 4
  %v1_1000ad68 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000ad68 = add i32 %v1_1000ad68, %v1_1000ad64
  %v0_1000ad6c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ad6c = add i32 %v0_1000ad6c, -1
  store i32 %v1_1000ad6c, i32* %ctr.global-to-local, align 4
  %v2_1000ad6c = icmp eq i32 %v1_1000ad6c, 0
  br i1 %v2_1000ad6c, label %dec_label_pc_1000ad70, label %dec_label_pc_1000ad5c.dec_label_pc_1000ad5c_crit_edge

dec_label_pc_1000ad70:                            ; preds = %dec_label_pc_1000ad5c.dec_label_pc_1000ad5c_crit_edge, %dec_label_pc_1000ad5c.lr.ph
  %v0_1000ad84.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ad70 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000ad70, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000ad84.pre, i32* %stack_var_-440, align 4
  %v0_1000ad88 = call i32 @function_1000a3e8()
  store i32 %v0_1000ad88, i32* %r3.global-to-local, align 4
  %v1_1000ad8c = icmp slt i32 %v0_1000ad88, 0
  br i1 %v1_1000ad8c, label %dec_label_pc_1000aee8, label %dec_label_pc_1000ad94

dec_label_pc_1000ad94:                            ; preds = %dec_label_pc_1000ad70
  %v2_1000ad94 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000ad94, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268479912, i32* @lr, align 4
  %v3_1000ada4 = call i32 @function_10009870(i32 0, i32 %v2_1000ad70, i32 %v2_1000ad94)
  store i32 %v3_1000ada4, i32* %r3.global-to-local, align 4
  %v3_1000ada8 = icmp eq i32 %v3_1000ada4, 0
  br i1 %v3_1000ada8, label %dec_label_pc_1000adb0, label %dec_label_pc_1000aee8

dec_label_pc_1000adb0:                            ; preds = %dec_label_pc_1000ad94
  store i32 %v2_1000ad94, i32* %r3.global-to-local, align 4
  %v2_1000adb8 = call i32 @function_1000a3c0(i32 %v2_1000ad94, i32 17)
  store i32 %v2_1000adb8, i32* %r3.global-to-local, align 4
  %v3_1000adbc = icmp eq i32 %v2_1000adb8, 0
  br i1 %v3_1000adbc, label %dec_label_pc_1000addc.lr.ph, label %dec_label_pc_1000aea8

dec_label_pc_1000addc.lr.ph:                      ; preds = %dec_label_pc_1000adb0
  store i32 %v2_1000ad50, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000ad5c43, align 4
  %v0_1000ade033 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ade034 = add i32 %v0_1000ade033, -1
  store i32 %v1_1000ade034, i32* %r11.global-to-local, align 4
  %v1_1000ade435 = mul i32 %v1_1000ade034, 4
  %v1_1000ade836 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ade837 = add i32 %v1_1000ade836, %v1_1000ade435
  %v0_1000adec38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000adec39 = add i32 %v0_1000adec38, -1
  store i32 %v1_1000adec39, i32* %ctr.global-to-local, align 4
  %v2_1000adec40 = icmp eq i32 %v1_1000adec39, 0
  br i1 %v2_1000adec40, label %dec_label_pc_1000adf0, label %dec_label_pc_1000addc.dec_label_pc_1000addc_crit_edge

dec_label_pc_1000addc.dec_label_pc_1000addc_crit_edge: ; preds = %dec_label_pc_1000addc.lr.ph, %dec_label_pc_1000addc.dec_label_pc_1000addc_crit_edge
  %v2_1000ade841 = phi i32 [ %v2_1000ade8, %dec_label_pc_1000addc.dec_label_pc_1000addc_crit_edge ], [ %v2_1000ade837, %dec_label_pc_1000addc.lr.ph ]
  %v0_1000addc.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000addc = add i32 %v2_1000ade841, 8
  %v3_1000addc = inttoptr i32 %v2_1000addc to i32*
  store i32 %v0_1000addc.pre, i32* %v3_1000addc, align 4
  %v0_1000ade0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ade0 = add i32 %v0_1000ade0, -1
  store i32 %v1_1000ade0, i32* %r11.global-to-local, align 4
  %v1_1000ade4 = mul i32 %v1_1000ade0, 4
  %v1_1000ade8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ade8 = add i32 %v1_1000ade8, %v1_1000ade4
  %v0_1000adec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000adec = add i32 %v0_1000adec, -1
  store i32 %v1_1000adec, i32* %ctr.global-to-local, align 4
  %v2_1000adec = icmp eq i32 %v1_1000adec, 0
  br i1 %v2_1000adec, label %dec_label_pc_1000adf0, label %dec_label_pc_1000addc.dec_label_pc_1000addc_crit_edge

dec_label_pc_1000adf0:                            ; preds = %dec_label_pc_1000addc.dec_label_pc_1000addc_crit_edge, %dec_label_pc_1000addc.lr.ph
  store i32 %v2_1000ad70, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000adf8 = call i32 @function_1000a3e8()
  store i32 %v0_1000adf8, i32* %r3.global-to-local, align 4
  %v1_1000adfc = icmp slt i32 %v0_1000adf8, 0
  br i1 %v1_1000adfc, label %dec_label_pc_1000aee8, label %dec_label_pc_1000ae04

dec_label_pc_1000ae04:                            ; preds = %dec_label_pc_1000adf0
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000ae0c = ptrtoint i32* %stack_var_-176 to i32
  store i32 268480020, i32* @lr, align 4
  %v4_1000ae10 = call i32 @function_1000bb78(i32 17, i32* null, i32 %v2_1000ae0c)
  store i32 %v4_1000ae10, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000ae10, -1
  br i1 %tmp30, label %dec_label_pc_1000ae44, label %dec_label_pc_1000ae1c

dec_label_pc_1000ae1c:                            ; preds = %dec_label_pc_1000ae04
  %v0_1000ae1c = call i32 @function_10009c34()
  store i32 %v0_1000ae1c, i32* %r3.global-to-local, align 4
  %v1_1000ae24 = inttoptr i32 %v0_1000ae1c to i32*
  %v2_1000ae24 = load i32, i32* %v1_1000ae24, align 4
  store i32 %v2_1000ae24, i32* @r28, align 4
  store i32 %v0_1000ae1c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268480056, i32* @lr, align 4
  %v3_1000ae34 = call i32 @function_10009870(i32 2, i32 %v2_1000ad94, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000ae3c = load i32, i32* @r28, align 4
  %v1_1000ae3c = load i32, i32* @r29, align 4
  %v2_1000ae3c = inttoptr i32 %v1_1000ae3c to i32*
  store i32 %v0_1000ae3c, i32* %v2_1000ae3c, align 4
  %v0_1000aefc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aeec

dec_label_pc_1000ae44:                            ; preds = %dec_label_pc_1000ae04
  %v3_1000ae44 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000ad94, i32* @r28, align 4
  %v3_1000ae50 = icmp eq i32 %v3_1000ae44, 1
  br i1 %v3_1000ae50, label %dec_label_pc_1000ae58, label %dec_label_pc_1000ae8c

dec_label_pc_1000ae58:                            ; preds = %dec_label_pc_1000ae44
  store i32 %v2_1000ad50, i32* %r3.global-to-local, align 4
  store i32 268480100, i32* @lr, align 4
  %v2_1000ae60 = call i32 @function_1000b76c(i32 %v2_1000ad50, i32 %v2_1000ad50)
  store i32 %v2_1000ae60, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ae60, i32* @r31, align 4
  %v0_1000ae68 = call i32 @function_10009c34()
  store i32 %v0_1000ae68, i32* %r3.global-to-local, align 4
  store i32 %v0_1000ae68, i32* @r29, align 4
  %v1_1000ae78 = inttoptr i32 %v0_1000ae68 to i32*
  %v2_1000ae78 = load i32, i32* %v1_1000ae78, align 4
  store i32 %v2_1000ae78, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268480132, i32* @lr, align 4
  %v3_1000ae80 = call i32 @function_10009870(i32 2, i32 %v2_1000ad94, i32 0)
  store i32 %v3_1000ae80, i32* %r3.global-to-local, align 4
  %v0_1000ae84 = load i32, i32* @r28, align 4
  %v1_1000ae84 = load i32, i32* @r29, align 4
  %v2_1000ae84 = inttoptr i32 %v1_1000ae84 to i32*
  store i32 %v0_1000ae84, i32* %v2_1000ae84, align 4
  %v0_1000aeb4.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000aeb4

dec_label_pc_1000ae8c:                            ; preds = %dec_label_pc_1000ae44
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268480156, i32* @lr, align 4
  %v3_1000ae98 = call i32 @function_10009870(i32 2, i32 %v2_1000ad94, i32 0)
  br label %dec_label_pc_1000aea8

dec_label_pc_1000aea8:                            ; preds = %dec_label_pc_1000adb0, %dec_label_pc_1000ae8c
  store i32 %v2_1000ad50, i32* %r3.global-to-local, align 4
  store i32 268480176, i32* @lr, align 4
  %v2_1000aeac = call i32 @function_1000b76c(i32 %v2_1000ad50, i32 %v2_1000ad50)
  store i32 %v2_1000aeac, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aeac, i32* @r31, align 4
  br label %dec_label_pc_1000aeb4

dec_label_pc_1000aeb4:                            ; preds = %dec_label_pc_1000ae58, %dec_label_pc_1000aea8
  %v0_1000aeb4 = phi i32 [ %v0_1000aeb4.pr, %dec_label_pc_1000ae58 ], [ %v2_1000aeac, %dec_label_pc_1000aea8 ]
  %v3_1000aeb4 = icmp eq i32 %v0_1000aeb4, 0
  br i1 %v3_1000aeb4, label %dec_label_pc_1000aee0, label %dec_label_pc_1000aebc

dec_label_pc_1000aebc:                            ; preds = %dec_label_pc_1000aeb4
  %v3_1000aecc = load i32, i32* %stack_var_-440, align 4
  %v0_1000aed0 = call i32 @__asm_mfcr()
  store i32 %v0_1000aed0, i32* %r3.global-to-local, align 4
  %v1_1000aed4 = call i32 @__asm_rlwinm(i32 %v0_1000aed0, i32 30, i32 31, i32 31)
  %v2_1000aed8 = add i32 %v3_1000aecc, %v1_1000aed4
  store i32 %v2_1000aed8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aeec

dec_label_pc_1000aee0:                            ; preds = %dec_label_pc_1000aeb4, %dec_label_pc_1000ad2c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aeec

dec_label_pc_1000aee8:                            ; preds = %dec_label_pc_1000ad94, %dec_label_pc_1000adf0, %dec_label_pc_1000ad70
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aeec

dec_label_pc_1000aeec:                            ; preds = %dec_label_pc_1000aee0, %dec_label_pc_1000aebc, %dec_label_pc_1000ae1c, %dec_label_pc_1000aee8
  %v0_1000aefc = phi i32 [ 0, %dec_label_pc_1000aee0 ], [ %v2_1000aed8, %dec_label_pc_1000aebc ], [ %v0_1000aefc.pre, %dec_label_pc_1000ae1c ], [ -1, %dec_label_pc_1000aee8 ]
  ret i32 %v0_1000aefc

; uselistorder directives
  uselistorder i32 %v1_1000adec, { 1, 0 }
  uselistorder i32 %v2_1000ad94, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000ad6c, { 1, 0 }
  uselistorder i32 %v2_1000ad50, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000b76c, { 1, 0 }
  uselistorder i32 17, { 2, 33, 34, 3, 35, 4, 16, 17, 5, 6, 18, 19, 20, 21, 22, 7, 8, 9, 10, 23, 0, 24, 1, 25, 26, 11, 27, 12, 28, 29, 30, 31, 32, 13, 14, 15 }
  uselistorder label %dec_label_pc_1000aeec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000aee8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000aeb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000aea8, { 1, 0 }
  uselistorder label %dec_label_pc_1000addc.dec_label_pc_1000addc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad5c.dec_label_pc_1000ad5c_crit_edge, { 1, 0 }
}

define i32 @function_1000af00(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af50:
  %v3_1000af54 = load i32, i32* @global_var_1001c6a8.318, align 4
  %v3_1000af58 = icmp eq i32 %v3_1000af54, 0
  br i1 %v3_1000af58, label %dec_label_pc_1000af68, label %dec_label_pc_1000af60

dec_label_pc_1000af60:                            ; preds = %dec_label_pc_1000af50
  %v2_1000af64 = load i32, i32* @r4, align 4
  %v3_1000af64 = call i32 @unknown_0(i32 268566528, i32 %v2_1000af64)
  store i32 %v3_1000af64, i32* @r3, align 4
  br label %dec_label_pc_1000af68

dec_label_pc_1000af68:                            ; preds = %dec_label_pc_1000af50, %dec_label_pc_1000af60
  %v3_1000af6c = load i32, i32* @global_var_1001c6ac.319, align 4
  %v3_1000af70 = icmp eq i32 %v3_1000af6c, 0
  br i1 %v3_1000af70, label %dec_label_pc_1000af68.dec_label_pc_1000af80_crit_edge, label %dec_label_pc_1000af78

dec_label_pc_1000af68.dec_label_pc_1000af80_crit_edge: ; preds = %dec_label_pc_1000af68
  %v0_1000af90.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000af80

dec_label_pc_1000af78:                            ; preds = %dec_label_pc_1000af68
  %v2_1000af7c = load i32, i32* @r4, align 4
  %v3_1000af7c = call i32 @unknown_0(i32 268566528, i32 %v2_1000af7c)
  br label %dec_label_pc_1000af80

dec_label_pc_1000af80:                            ; preds = %dec_label_pc_1000af68.dec_label_pc_1000af80_crit_edge, %dec_label_pc_1000af78
  %v0_1000af90 = phi i32 [ %v0_1000af90.pre, %dec_label_pc_1000af68.dec_label_pc_1000af80_crit_edge ], [ %v3_1000af7c, %dec_label_pc_1000af78 ]
  ret i32 %v0_1000af90

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000af80, { 1, 0 }
  uselistorder label %dec_label_pc_1000af68, { 1, 0 }
}

define i32 @function_1000af94() local_unnamed_addr {
dec_label_pc_1000af94:
  ret i32 0
}

define i32 @function_1000af9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000af9c:
  %v0_1000af9c = load i32, i32* @r3, align 4
  ret i32 %v0_1000af9c
}

define i32 @function_1000afa0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000afa0:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268480452, i32* @lr, align 4
  %v1_1000afc0 = call i32 @function_10009430(i32 1)
  %v3_1000afc4 = icmp eq i32 %v1_1000afc0, -1
  br i1 %v3_1000afc4, label %dec_label_pc_1000afcc, label %dec_label_pc_1000afec

dec_label_pc_1000afcc:                            ; preds = %dec_label_pc_1000afa0
  %v0_1000afd0 = load i32, i32* @r30, align 4
  store i32 268480480, i32* @lr, align 4
  %v3_1000afdc = call i32 @function_10009680(i32 ptrtoint ([10 x i8]* @global_var_1000c1d4.320 to i32), i32 %v0_1000afd0)
  %v1_1000afe0 = load i32, i32* @r31, align 4
  %v4_1000afe0 = icmp eq i32 %v3_1000afdc, %v1_1000afe0
  br i1 %v4_1000afe0, label %dec_label_pc_1000afec, label %dec_label_pc_1000afe8

dec_label_pc_1000afe8:                            ; preds = %dec_label_pc_1000afcc
  %v1_1000afe8 = call i32 @function_1000bc3c(i32 %v3_1000afdc)
  br label %dec_label_pc_1000afec

dec_label_pc_1000afec:                            ; preds = %dec_label_pc_1000afa0, %dec_label_pc_1000afcc, %dec_label_pc_1000afe8
  %v0_1000affc = phi i32 [ %v1_1000afc0, %dec_label_pc_1000afa0 ], [ %v3_1000afdc, %dec_label_pc_1000afcc ], [ %v1_1000afe8, %dec_label_pc_1000afe8 ]
  ret i32 %v0_1000affc

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009680, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_10009430, { 0, 9, 4, 3, 11, 10, 2, 1, 8, 7, 6, 5 }
  uselistorder label %dec_label_pc_1000afec, { 2, 1, 0 }
}

define i32 @function_1000b000(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b000:
  %v3_1000b020 = load i32, i32* @global_var_1001c6b0.321, align 4
  %v3_1000b024 = icmp eq i32 %v3_1000b020, 0
  br i1 %v3_1000b024, label %dec_label_pc_1000b048, label %dec_label_pc_1000b06c

dec_label_pc_1000b048:                            ; preds = %dec_label_pc_1000b000
  store i32 1, i32* @global_var_1001c6b0.321, align 4
  store i32 4096, i32* @global_var_1001c6a4.303, align 4
  br label %dec_label_pc_1000b06c

dec_label_pc_1000b06c:                            ; preds = %dec_label_pc_1000b048, %dec_label_pc_1000b000
  %v0_1000b07c = load i32, i32* @r3, align 4
  ret i32 %v0_1000b07c
}

define i32 @function_1000b080(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000b080:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000b098 = mul i32 %arg2, 4
  %v2_1000b09c = add i32 %tmp, %v1_1000b098
  %v0_1000b0a0 = load i32, i32* @r9, align 4
  store i32 %v0_1000b0a0, i32* @global_var_1001c69c.323, align 4
  %v1_1000b0a4 = add i32 %v2_1000b09c, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b0a4, i32* @global_var_1001c6a0.324, align 4
  store i32 %arg6, i32* @global_var_1001c6ac.319, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000b0c4 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000b0cc = icmp eq i32 %v1_1000b0a4, %v2_1000b0c4
  br i1 %v4_1000b0cc, label %dec_label_pc_1000b0d4, label %dec_label_pc_1000b0d8

dec_label_pc_1000b0d4:                            ; preds = %dec_label_pc_1000b080
  store i32 %v2_1000b09c, i32* @global_var_1001c6a0.324, align 4
  br label %dec_label_pc_1000b0d8

dec_label_pc_1000b0d8:                            ; preds = %dec_label_pc_1000b080, %dec_label_pc_1000b0d4
  %v2_1000b0d8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268480744, i32* @lr, align 4
  %v3_1000b0e4 = call i32 @function_10009d1c(i32 %v2_1000b0d8, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001c6a0.324, align 4
  br label %dec_label_pc_1000b0f4

dec_label_pc_1000b0f4:                            ; preds = %dec_label_pc_1000b0f4, %dec_label_pc_1000b0d8
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000b0d8 ], [ %v1_1000b0f8, %dec_label_pc_1000b0f4 ]
  %v1_1000b0f4 = inttoptr i32 %storemerge to i32*
  %v2_1000b0f4 = load i32, i32* %v1_1000b0f4, align 4
  %v1_1000b0f8 = add i32 %storemerge, 4
  %v3_1000b0fc = icmp eq i32 %v2_1000b0f4, 0
  br i1 %v3_1000b0fc, label %dec_label_pc_1000b104, label %dec_label_pc_1000b0f4

dec_label_pc_1000b104:                            ; preds = %dec_label_pc_1000b0f4
  store i32 %v1_1000b0f8, i32* %r29.global-to-local, align 4
  %v1_1000b13012 = inttoptr i32 %v1_1000b0f8 to i32*
  %v2_1000b13013 = load i32, i32* %v1_1000b13012, align 4
  %v3_1000b13416 = icmp eq i32 %v2_1000b13013, 0
  br i1 %v3_1000b13416, label %dec_label_pc_1000b13c, label %dec_label_pc_1000b10c

dec_label_pc_1000b10c:                            ; preds = %dec_label_pc_1000b104, %dec_label_pc_1000b12c
  %v0_1000b120 = phi i32 [ %v1_1000b12c, %dec_label_pc_1000b12c ], [ %v1_1000b0f8, %dec_label_pc_1000b104 ]
  %v0_1000b114 = phi i32 [ %v2_1000b130, %dec_label_pc_1000b12c ], [ %v2_1000b13013, %dec_label_pc_1000b104 ]
  %v2_1000b10c = icmp ugt i32 %v0_1000b114, 14
  br i1 %v2_1000b10c, label %dec_label_pc_1000b12c, label %dec_label_pc_1000b114

dec_label_pc_1000b114:                            ; preds = %dec_label_pc_1000b10c
  %v1_1000b114 = mul i32 %v0_1000b114, 8
  %v2_1000b11c = add i32 %v1_1000b114, %v2_1000b0d8
  store i32 %v2_1000b11c, i32* @r3, align 4
  store i32 %v0_1000b120, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268480812, i32* @lr, align 4
  %v0_1000b128 = call i32 @function_1000b9e8()
  %v0_1000b12c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b12c

dec_label_pc_1000b12c:                            ; preds = %dec_label_pc_1000b10c, %dec_label_pc_1000b114
  %v0_1000b12c = phi i32 [ %v0_1000b120, %dec_label_pc_1000b10c ], [ %v0_1000b12c.pre, %dec_label_pc_1000b114 ]
  %v1_1000b12c = add i32 %v0_1000b12c, 8
  store i32 %v1_1000b12c, i32* %r29.global-to-local, align 4
  %v1_1000b130 = inttoptr i32 %v1_1000b12c to i32*
  %v2_1000b130 = load i32, i32* %v1_1000b130, align 4
  %v3_1000b134 = icmp eq i32 %v2_1000b130, 0
  br i1 %v3_1000b134, label %dec_label_pc_1000b13c, label %dec_label_pc_1000b10c

dec_label_pc_1000b13c:                            ; preds = %dec_label_pc_1000b12c, %dec_label_pc_1000b104
  %v1_1000b140 = call i32 @function_1000bd8c(i32 %v2_1000b0d8)
  store i32 %v1_1000b140, i32* @r3, align 4
  store i32 268480840, i32* @lr, align 4
  %v1_1000b144 = call i32 @function_1000b000(i32 %v1_1000b140)
  %v3_1000b14c = icmp eq i32 %tmp27, 0
  br i1 %v3_1000b14c, label %dec_label_pc_1000b154, label %dec_label_pc_1000b158

dec_label_pc_1000b154:                            ; preds = %dec_label_pc_1000b13c
  br label %dec_label_pc_1000b158

dec_label_pc_1000b158:                            ; preds = %dec_label_pc_1000b13c, %dec_label_pc_1000b154
  %v0_1000b160 = phi i32 [ %tmp27, %dec_label_pc_1000b13c ], [ 4096, %dec_label_pc_1000b154 ]
  store i32 %v0_1000b160, i32* @global_var_1001c6a4.303, align 4
  %v3_1000b164 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000b164, label %dec_label_pc_1000b16c, label %dec_label_pc_1000b1a0

dec_label_pc_1000b16c:                            ; preds = %dec_label_pc_1000b158
  store i32 268480880, i32* @lr, align 4
  %v1_1000b16c = call i32 @function_1000b6a4(i32 268566528)
  store i32 %v1_1000b16c, i32* %r29.global-to-local, align 4
  store i32 268480888, i32* @lr, align 4
  %v0_1000b174 = call i32 @function_1000b614()
  %v4_1000b178 = icmp eq i32 %v1_1000b16c, %v0_1000b174
  br i1 %v4_1000b178, label %dec_label_pc_1000b180, label %dec_label_pc_1000b1bc

dec_label_pc_1000b180:                            ; preds = %dec_label_pc_1000b16c
  store i32 268480900, i32* @lr, align 4
  %v1_1000b180 = call i32 @function_1000b65c(i32 %v0_1000b174)
  store i32 %v1_1000b180, i32* %r29.global-to-local, align 4
  store i32 268480908, i32* @lr, align 4
  %v0_1000b188 = call i32 @function_1000b5cc()
  %v4_1000b18c = icmp eq i32 %v1_1000b180, %v0_1000b188
  br i1 %v4_1000b18c, label %dec_label_pc_1000b194.thread, label %dec_label_pc_1000b1bc

dec_label_pc_1000b194.thread:                     ; preds = %dec_label_pc_1000b180
  br label %dec_label_pc_1000b1ec

dec_label_pc_1000b1a0:                            ; preds = %dec_label_pc_1000b158
  %v4_1000b1a4 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000b1a4, label %dec_label_pc_1000b1ac, label %dec_label_pc_1000b1bc

dec_label_pc_1000b1ac:                            ; preds = %dec_label_pc_1000b1a0
  br label %dec_label_pc_1000b1bc

dec_label_pc_1000b1bc:                            ; preds = %dec_label_pc_1000b1ac, %dec_label_pc_1000b1a0, %dec_label_pc_1000b180, %dec_label_pc_1000b16c
  store i32 268480972, i32* @lr, align 4
  %v2_1000b1c8 = call i32 @function_1000afa0(i32 0, i32 32768)
  store i32 268480988, i32* @lr, align 4
  %v2_1000b1d8 = call i32 @function_1000afa0(i32 1, i32 32770)
  store i32 268481004, i32* @lr, align 4
  %v2_1000b1e8 = call i32 @function_1000afa0(i32 2, i32 32770)
  br label %dec_label_pc_1000b1ec

dec_label_pc_1000b1ec:                            ; preds = %dec_label_pc_1000b194.thread, %dec_label_pc_1000b1bc
  %v0_1000b1f8 = load i32, i32* @r30, align 4
  %v1_1000b1f8 = inttoptr i32 %v0_1000b1f8 to i32*
  %v2_1000b1f8 = load i32, i32* %v1_1000b1f8, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000b1f8, i32* inttoptr (i32 268551756 to i32*), align 4
  %v0_1000b218 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000b218, i32* @global_var_1001c6a8.318, align 4
  br i1 false, label %dec_label_pc_1000b220, label %dec_label_pc_1000b298

dec_label_pc_1000b220:                            ; preds = %dec_label_pc_1000b1ec, %dec_label_pc_1000b220
  br i1 undef, label %dec_label_pc_1000b220, label %dec_label_pc_1000b298

dec_label_pc_1000b298:                            ; preds = %dec_label_pc_1000b220, %dec_label_pc_1000b1ec
  %v0_1000b244 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000b244)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000b2a8 = call i32 @function_10009c34()
  %v2_1000b2b0 = inttoptr i32 %v0_1000b2a8 to i32*
  store i32 0, i32* %v2_1000b2b0, align 4
  %v0_1000b2dc = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000b2dc)
  %v0_1000b2e8 = call i32 @function_1000aca8()
  ret i32 %v0_1000b2e8

; uselistorder directives
  uselistorder i32 %v2_1000b130, { 1, 0 }
  uselistorder i32 %v1_1000b12c, { 2, 1, 0 }
  uselistorder i32 %v1_1000b0f8, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000b0d8, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 7, 6, 0, 5 }
  uselistorder i32 ()* @function_1000aca8, { 0, 2, 1 }
  uselistorder i1 false, { 0, 26, 27, 1, 2, 3, 4, 14, 5, 6, 7, 15, 23, 16, 17, 18, 24, 19, 25, 20, 21, 8, 9, 28, 10, 22, 11, 12, 13, 29, 30 }
  uselistorder i32 (i32, i32)* @function_1000afa0, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 47, 0, 6, 7, 22, 8, 9, 23, 24, 25, 26, 27, 28, 29, 10, 11, 30, 1, 31, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 32, 33, 2, 34, 35, 36, 3, 37, 38, 39, 40, 41, 4, 42, 43, 44, 45, 46, 5 }
  uselistorder i32 120, { 2, 13, 5, 6, 7, 8, 3, 9, 10, 4, 0, 1, 11, 12 }
  uselistorder label %dec_label_pc_1000b220, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000b158, { 1, 0 }
  uselistorder label %dec_label_pc_1000b12c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b10c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0d8, { 1, 0 }
}

define i32 @function_1000b2ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b2ec:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b304 = call i32 @__asm_mfcr()
  %v1_1000b308 = and i32 %v0_1000b304, 268435456
  %v3_1000b308 = icmp eq i32 %v1_1000b308, 0
  store i32 %v0_1000b304, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b308, label %dec_label_pc_1000b320, label %dec_label_pc_1000b314

dec_label_pc_1000b314:                            ; preds = %dec_label_pc_1000b2ec
  %v0_1000b314 = call i32 @function_10009c34()
  %v0_1000b318 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b318 = inttoptr i32 %v0_1000b314 to i32*
  store i32 %v0_1000b318, i32* %v2_1000b318, align 4
  br label %dec_label_pc_1000b320

dec_label_pc_1000b320:                            ; preds = %dec_label_pc_1000b2ec, %dec_label_pc_1000b314
  %v0_1000b330 = phi i32 [ %v0_1000b304, %dec_label_pc_1000b2ec ], [ -1, %dec_label_pc_1000b314 ]
  ret i32 %v0_1000b330

; uselistorder directives
  uselistorder label %dec_label_pc_1000b320, { 1, 0 }
}

define i32 @function_1000b334(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b334:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000b348

dec_label_pc_1000b348:                            ; preds = %dec_label_pc_1000b348.backedge, %dec_label_pc_1000b334
  %v0_1000b354 = call i32 @__asm_mfcr()
  %v1_1000b358 = and i32 %v0_1000b354, 268435456
  %v3_1000b358 = icmp eq i32 %v1_1000b358, 0
  store i32 %v0_1000b354, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b358, label %dec_label_pc_1000b348.backedge, label %dec_label_pc_1000b364

dec_label_pc_1000b364:                            ; preds = %dec_label_pc_1000b348
  %v0_1000b364 = call i32 @function_10009c34()
  %v0_1000b368 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b368 = inttoptr i32 %v0_1000b364 to i32*
  store i32 %v0_1000b368, i32* %v2_1000b368, align 4
  br label %dec_label_pc_1000b348.backedge

dec_label_pc_1000b348.backedge:                   ; preds = %dec_label_pc_1000b364, %dec_label_pc_1000b348
  br label %dec_label_pc_1000b348
}

define i32 @function_1000b370(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b370:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000b37c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000b37c, i32* @r29, align 4
  %v0_1000b384 = load i32, i32* @r4, align 4
  store i32 %v0_1000b384, i32* @r30, align 4
  %v0_1000b394 = call i32 @__asm_mfcr()
  %v1_1000b398 = and i32 %v0_1000b394, 268435456
  %v3_1000b398 = icmp eq i32 %v1_1000b398, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000b394, i32* @r31, align 4
  br i1 %v3_1000b398, label %dec_label_pc_1000b3b4, label %dec_label_pc_1000b3a8

dec_label_pc_1000b3a8:                            ; preds = %dec_label_pc_1000b370
  %v0_1000b3a8 = call i32 @function_10009c34()
  %v0_1000b3ac = load i32, i32* @r31, align 4
  %v2_1000b3ac = inttoptr i32 %v0_1000b3a8 to i32*
  store i32 %v0_1000b3ac, i32* %v2_1000b3ac, align 4
  br label %dec_label_pc_1000b3cc

dec_label_pc_1000b3b4:                            ; preds = %dec_label_pc_1000b370
  %v3_1000b3b4 = icmp eq i32 %v0_1000b394, 0
  store i32 %v0_1000b394, i32* @r28, align 4
  br i1 %v3_1000b3b4, label %dec_label_pc_1000b3c8, label %dec_label_pc_1000b3cc

dec_label_pc_1000b3c8:                            ; preds = %dec_label_pc_1000b3b4
  %v0_1000b3bc = load i32, i32* @r30, align 4
  store i32 268481484, i32* @lr, align 4
  %v4_1000b3c8 = call i32 @function_1000b938(i32* nonnull %stack_var_-104, i32 %v0_1000b3bc, i32 0)
  br label %dec_label_pc_1000b3cc

dec_label_pc_1000b3cc:                            ; preds = %dec_label_pc_1000b3b4, %dec_label_pc_1000b3a8, %dec_label_pc_1000b3c8
  %v0_1000b3d0 = load i32, i32* @r28, align 4
  ret i32 %v0_1000b3d0

; uselistorder directives
  uselistorder i32 %v0_1000b394, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000b3cc, { 2, 0, 1 }
}

define i32 @function_1000b3e4(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b3e4:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000b3f8 = call i32 @function_1000b474()
  store i32 %v0_1000b3f8, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000b3f8, 1
  br i1 %tmp18, label %dec_label_pc_1000b45c, label %dec_label_pc_1000b404

dec_label_pc_1000b404:                            ; preds = %dec_label_pc_1000b3e4
  %v0_1000b404 = load i32, i32* @r31, align 4
  %v2_1000b404 = add i32 %v0_1000b404, %v0_1000b3f8
  store i32 %v2_1000b404, i32* %r29.global-to-local, align 4
  %v2_1000b44c3 = icmp ult i32 %v0_1000b404, %v2_1000b404
  br i1 %v2_1000b44c3, label %dec_label_pc_1000b40c, label %dec_label_pc_1000b45c

dec_label_pc_1000b40c:                            ; preds = %dec_label_pc_1000b404, %dec_label_pc_1000b40c
  %v1_1000b41c = phi i32 [ %v2_1000b448, %dec_label_pc_1000b40c ], [ %v0_1000b404, %dec_label_pc_1000b404 ]
  %v1_1000b45010.in = phi i32 [ %v2_1000b448, %dec_label_pc_1000b40c ], [ %v0_1000b404, %dec_label_pc_1000b404 ]
  %v1_1000b45411.in = phi i32 [ %v2_1000b448, %dec_label_pc_1000b40c ], [ %v0_1000b404, %dec_label_pc_1000b404 ]
  %v1_1000b45010 = add i32 %v1_1000b45010.in, 11
  %v1_1000b45411 = add i32 %v1_1000b45411.in, 19
  %v1_1000b40c = add i32 %v1_1000b41c, 4
  %v2_1000b40c = inttoptr i32 %v1_1000b40c to i32*
  %v3_1000b40c = load i32, i32* %v2_1000b40c, align 4
  store i32 %v3_1000b40c, i32* %r11.global-to-local, align 4
  %v1_1000b410 = add i32 %v1_1000b41c, 12
  %v2_1000b410 = inttoptr i32 %v1_1000b410 to i32*
  %v3_1000b410 = load i32, i32* %v2_1000b410, align 4
  %v1_1000b414 = add i32 %v1_1000b41c, 16
  %v2_1000b414 = inttoptr i32 %v1_1000b414 to i16*
  %v3_1000b414 = load i16, i16* %v2_1000b414, align 2
  %v4_1000b414 = zext i16 %v3_1000b414 to i32
  store i32 %v4_1000b414, i32* %r5.global-to-local, align 4
  %v1_1000b418 = add i32 %v1_1000b41c, 18
  %v2_1000b418 = inttoptr i32 %v1_1000b418 to i8*
  %v3_1000b418 = load i8, i8* %v2_1000b418, align 1
  %v4_1000b418 = zext i8 %v3_1000b418 to i32
  store i32 %v4_1000b418, i32* %r9.global-to-local, align 4
  store i32 %v3_1000b410, i32* %v2_1000b40c, align 4
  %v0_1000b420 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b420 = load i32, i32* @r31, align 4
  %v2_1000b420 = inttoptr i32 %v1_1000b420 to i32*
  store i32 %v0_1000b420, i32* %v2_1000b420, align 4
  %v0_1000b424 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b424 = trunc i32 %v0_1000b424 to i8
  %v2_1000b424 = load i32, i32* @r31, align 4
  %v3_1000b424 = add i32 %v2_1000b424, 10
  %v4_1000b424 = inttoptr i32 %v3_1000b424 to i8*
  store i8 %v1_1000b424, i8* %v4_1000b424, align 1
  %v0_1000b428 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b428 = trunc i32 %v0_1000b428 to i16
  %v2_1000b428 = load i32, i32* @r31, align 4
  %v3_1000b428 = add i32 %v2_1000b428, 8
  %v4_1000b428 = inttoptr i32 %v3_1000b428 to i16*
  store i16 %v1_1000b428, i16* %v4_1000b428, align 2
  %v0_1000b42c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b42c = add i32 %v0_1000b42c, -19
  store i32 %v1_1000b42c, i32* %r5.global-to-local, align 4
  store i32 268481588, i32* @lr, align 4
  %v3_1000b430 = call i32 @function_10009c78(i32 %v1_1000b45010, i32 %v1_1000b45411, i32 %v1_1000b42c)
  %v0_1000b434 = load i32, i32* @r31, align 4
  %v1_1000b434 = add i32 %v0_1000b434, 8
  %v2_1000b434 = inttoptr i32 %v1_1000b434 to i16*
  %v3_1000b434 = load i16, i16* %v2_1000b434, align 2
  %v4_1000b434 = zext i16 %v3_1000b434 to i32
  store i32 %v4_1000b434, i32* %r5.global-to-local, align 4
  store i32 268481604, i32* @lr, align 4
  %v3_1000b440 = call i32 @function_10009c78(i32 %v0_1000b434, i32 %v0_1000b434, i32 %v4_1000b434)
  %v0_1000b444 = load i32, i32* @r31, align 4
  %v1_1000b444 = add i32 %v0_1000b444, 8
  %v2_1000b444 = inttoptr i32 %v1_1000b444 to i16*
  %v3_1000b444 = load i16, i16* %v2_1000b444, align 2
  %v4_1000b444 = zext i16 %v3_1000b444 to i32
  %v2_1000b448 = add i32 %v4_1000b444, %v0_1000b444
  store i32 %v2_1000b448, i32* @r31, align 4
  %v1_1000b44c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b44c = icmp ult i32 %v2_1000b448, %v1_1000b44c
  br i1 %v2_1000b44c, label %dec_label_pc_1000b40c, label %dec_label_pc_1000b44c.dec_label_pc_1000b45c.loopexit_crit_edge

dec_label_pc_1000b44c.dec_label_pc_1000b45c.loopexit_crit_edge: ; preds = %dec_label_pc_1000b40c
  %v0_1000b460.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b45c

dec_label_pc_1000b45c:                            ; preds = %dec_label_pc_1000b404, %dec_label_pc_1000b44c.dec_label_pc_1000b45c.loopexit_crit_edge, %dec_label_pc_1000b3e4
  %v0_1000b460 = phi i32 [ %v0_1000b3f8, %dec_label_pc_1000b3e4 ], [ %v0_1000b460.pre.pre, %dec_label_pc_1000b44c.dec_label_pc_1000b45c.loopexit_crit_edge ], [ %v0_1000b3f8, %dec_label_pc_1000b404 ]
  ret i32 %v0_1000b460

; uselistorder directives
  uselistorder i32 %v2_1000b448, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000b434, { 1, 0, 2 }
  uselistorder i32 %v1_1000b41c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000b404, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000b3f8, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10009c78, { 1, 0, 2, 3 }
  uselistorder i32 11, { 0, 33, 32, 3, 11, 12, 13, 14, 15, 16, 1, 2, 17, 18, 4, 19, 20, 21, 22, 23, 24, 25, 5, 26, 27, 6, 28, 29, 9, 7, 30, 31, 10, 8 }
  uselistorder label %dec_label_pc_1000b45c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b40c, { 1, 0 }
}

define i32 @function_1000b474() local_unnamed_addr {
dec_label_pc_1000b474:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b478 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b478, i32* %stack_var_-48, align 4
  %v5_1000b478 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000b478, i32* %r9.global-to-local, align 4
  %v0_1000b484 = load i32, i32* @r5, align 4
  %v1_1000b484 = add i32 %v0_1000b484, 30
  %v1_1000b488 = call i32 @__asm_rlwinm(i32 %v1_1000b484, i32 0, i32 0, i32 27)
  store i32 %v5_1000b478, i32* @r31, align 4
  %v1_1000b498 = load i32, i32* @r1, align 4
  %v3_1000b498 = sub i32 %v1_1000b498, %v1_1000b488
  %v4_1000b498 = inttoptr i32 %v3_1000b498 to i32*
  store i32 %v4_1000b478, i32* %v4_1000b498, align 4
  %v0_1000b49c = load i32, i32* @r4, align 4
  store i32 %v0_1000b49c, i32* @r28, align 4
  %v0_1000b4a0 = load i32, i32* @r5, align 4
  store i32 %v0_1000b4a0, i32* @r23, align 4
  %v0_1000b4a4 = load i32, i32* @r3, align 4
  store i32 %v0_1000b4a4, i32* @r22, align 4
  %v1_1000b4a8 = add i32 %v3_1000b498, 23
  %v1_1000b4ac = call i32 @__asm_rlwinm(i32 %v1_1000b4a8, i32 0, i32 0, i32 27)
  store i32 %v1_1000b4ac, i32* @r27, align 4
  store i32 %v1_1000b4ac, i32* %r4.global-to-local, align 4
  %v0_1000b4bc = call i32 @__asm_mfcr()
  %v1_1000b4c0 = and i32 %v0_1000b4bc, 268435456
  store i32 %v1_1000b4c0, i32* %r9.global-to-local, align 4
  %v3_1000b4c0 = icmp eq i32 %v1_1000b4c0, 0
  store i32 %v0_1000b4bc, i32* %r30.global-to-local, align 4
  br i1 %v3_1000b4c0, label %dec_label_pc_1000b4d8, label %dec_label_pc_1000b4cc

dec_label_pc_1000b4cc:                            ; preds = %dec_label_pc_1000b474
  %v0_1000b4cc = call i32 @function_10009c34()
  %v0_1000b4d0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b4d0 = inttoptr i32 %v0_1000b4cc to i32*
  store i32 %v0_1000b4d0, i32* %v2_1000b4d0, align 4
  br label %dec_label_pc_1000b4e4

dec_label_pc_1000b4d8:                            ; preds = %dec_label_pc_1000b474
  %v3_1000b4d8 = icmp eq i32 %v0_1000b4bc, -1
  store i32 %v0_1000b4bc, i32* @r24, align 4
  br i1 %v3_1000b4d8, label %dec_label_pc_1000b4e4, label %dec_label_pc_1000b4ec

dec_label_pc_1000b4e4:                            ; preds = %dec_label_pc_1000b4d8, %dec_label_pc_1000b4cc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b5b0

dec_label_pc_1000b4ec:                            ; preds = %dec_label_pc_1000b4d8
  %v0_1000b4ec = load i32, i32* @r28, align 4
  store i32 %v0_1000b4ec, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b4ac, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* @r26, align 4
  %v2_1000b59412 = add i32 %v0_1000b4bc, %v1_1000b4ac
  %v1_1000b59813 = load i32, i32* @r23, align 4
  %v2_1000b59814 = add i32 %v1_1000b59813, %v0_1000b4ec
  store i32 %v2_1000b59814, i32* %r10.global-to-local, align 4
  %v2_1000b59c15 = icmp ult i32 %v1_1000b4ac, %v2_1000b59412
  %v1_1000b5a017 = add i32 %v0_1000b4ec, 19
  store i32 %v1_1000b5a017, i32* @r3, align 4
  %v1_1000b5a418 = add i32 %v1_1000b4ac, 19
  store i32 %v1_1000b5a418, i32* @r4, align 4
  br i1 %v2_1000b59c15, label %dec_label_pc_1000b500, label %dec_label_pc_1000b5ac

dec_label_pc_1000b500:                            ; preds = %dec_label_pc_1000b4ec, %dec_label_pc_1000b548
  %v0_1000b50019 = phi i32 [ %v2_1000b590, %dec_label_pc_1000b548 ], [ %v1_1000b4ac, %dec_label_pc_1000b4ec ]
  %v1_1000b500 = add i32 %v0_1000b50019, 16
  %v2_1000b500 = inttoptr i32 %v1_1000b500 to i16*
  %v3_1000b500 = load i16, i16* %v2_1000b500, align 2
  %v4_1000b500 = zext i16 %v3_1000b500 to i32
  %v1_1000b504 = add nuw nsw i32 %v4_1000b500, 7
  store i32 %v1_1000b504, i32* %r9.global-to-local, align 4
  %v1_1000b508 = call i32 @__asm_rlwinm(i32 %v1_1000b504, i32 0, i32 0, i32 28)
  %v0_1000b50c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b50c = add i32 %v1_1000b508, %v0_1000b50c
  store i32 %v3_1000b50c, i32* %r11.global-to-local, align 4
  %v1_1000b510 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000b510 = icmp ugt i32 %v3_1000b50c, %v1_1000b510
  br i1 %v3_1000b510, label %dec_label_pc_1000b518, label %dec_label_pc_1000b548

dec_label_pc_1000b518:                            ; preds = %dec_label_pc_1000b500
  %v0_1000b518 = load i32, i32* @r22, align 4
  %v0_1000b51c = load i32, i32* @r25, align 4
  %v0_1000b520 = load i32, i32* @r26, align 4
  store i32 268481836, i32* @lr, align 4
  %v4_1000b528 = call i32 @function_1000b6ec(i32 %v0_1000b518, i32 %v0_1000b51c, i32 %v0_1000b520, i32 0)
  %v0_1000b52c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b52c = load i32, i32* @r28, align 4
  %v4_1000b52c = icmp eq i32 %v0_1000b52c, %v1_1000b52c
  br i1 %v4_1000b52c, label %dec_label_pc_1000b534, label %dec_label_pc_1000b5ac

dec_label_pc_1000b534:                            ; preds = %dec_label_pc_1000b518
  %v0_1000b534 = call i32 @function_10009c34()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000b540 = inttoptr i32 %v0_1000b534 to i32*
  store i32 22, i32* %v2_1000b540, align 4
  %v0_1000b5b4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b5b0

dec_label_pc_1000b548:                            ; preds = %dec_label_pc_1000b500
  %v2_1000b508 = trunc i32 %v1_1000b508 to i16
  %v0_1000b548 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b548 = inttoptr i32 %v0_1000b548 to i32*
  %v2_1000b548 = load i32, i32* %v1_1000b548, align 4
  store i32 %v2_1000b548, i32* %r9.global-to-local, align 4
  %v1_1000b54c = add i32 %v0_1000b548, 4
  %v2_1000b54c = inttoptr i32 %v1_1000b54c to i32*
  %v3_1000b54c = load i32, i32* %v2_1000b54c, align 4
  store i32 %v3_1000b54c, i32* %r10.global-to-local, align 4
  %v1_1000b550 = add i32 %v0_1000b548, 8
  %v2_1000b550 = inttoptr i32 %v1_1000b550 to i32*
  %v3_1000b550 = load i32, i32* %v2_1000b550, align 4
  store i32 %v3_1000b550, i32* @r25, align 4
  %v1_1000b554 = add i32 %v0_1000b548, 12
  %v2_1000b554 = inttoptr i32 %v1_1000b554 to i32*
  %v3_1000b554 = load i32, i32* %v2_1000b554, align 4
  store i32 %v3_1000b554, i32* @r26, align 4
  %v2_1000b558 = inttoptr i32 %v0_1000b50c to i32*
  store i32 %v2_1000b548, i32* %v2_1000b558, align 4
  %v0_1000b55c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b55c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b55c = add i32 %v1_1000b55c, 4
  %v3_1000b55c = inttoptr i32 %v2_1000b55c to i32*
  store i32 %v0_1000b55c, i32* %v3_1000b55c, align 4
  %v0_1000b560 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b560 = add i32 %v0_1000b560, 8
  %v2_1000b560 = inttoptr i32 %v1_1000b560 to i32*
  %v3_1000b560 = load i32, i32* %v2_1000b560, align 4
  store i32 %v3_1000b560, i32* %r9.global-to-local, align 4
  %v1_1000b564 = add i32 %v0_1000b560, 12
  %v2_1000b564 = inttoptr i32 %v1_1000b564 to i32*
  %v3_1000b564 = load i32, i32* %v2_1000b564, align 4
  store i32 %v3_1000b564, i32* %r10.global-to-local, align 4
  %v3_1000b568 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000b568 = add i32 %v3_1000b568, 16
  %v5_1000b568 = inttoptr i32 %v4_1000b568 to i16*
  store i16 %v2_1000b508, i16* %v5_1000b568, align 2
  %v0_1000b56c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b56c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b56c = add i32 %v1_1000b56c, 8
  %v3_1000b56c = inttoptr i32 %v2_1000b56c to i32*
  store i32 %v0_1000b56c, i32* %v3_1000b56c, align 4
  %v0_1000b570 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b570 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b570 = add i32 %v1_1000b570, 12
  %v3_1000b570 = inttoptr i32 %v2_1000b570 to i32*
  store i32 %v0_1000b570, i32* %v3_1000b570, align 4
  %v0_1000b574 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b574 = add i32 %v0_1000b574, 18
  %v2_1000b574 = inttoptr i32 %v1_1000b574 to i8*
  %v3_1000b574 = load i8, i8* %v2_1000b574, align 1
  %v2_1000b578 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b578 = add i32 %v2_1000b578, 18
  %v4_1000b578 = inttoptr i32 %v3_1000b578 to i8*
  store i8 %v3_1000b574, i8* %v4_1000b578, align 1
  %v0_1000b57c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b57c, i32* %r29.global-to-local, align 4
  %v0_1000b580 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b580 = add i32 %v0_1000b580, 16
  %v2_1000b580 = inttoptr i32 %v1_1000b580 to i16*
  %v3_1000b580 = load i16, i16* %v2_1000b580, align 2
  %v4_1000b580 = zext i16 %v3_1000b580 to i32
  %v1_1000b584 = add nsw i32 %v4_1000b580, -19
  store i32 %v1_1000b584, i32* @r5, align 4
  store i32 268481932, i32* @lr, align 4
  %v0_1000b588 = call i32 @function_1000b9e8()
  %v0_1000b58c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b58c = add i32 %v0_1000b58c, 16
  %v2_1000b58c = inttoptr i32 %v1_1000b58c to i16*
  %v3_1000b58c = load i16, i16* %v2_1000b58c, align 2
  %v4_1000b58c = zext i16 %v3_1000b58c to i32
  %v2_1000b590 = add i32 %v4_1000b58c, %v0_1000b58c
  store i32 %v2_1000b590, i32* %r30.global-to-local, align 4
  %v1_1000b594.pre = load i32, i32* @r24, align 4
  %v0_1000b598.pre = load i32, i32* @r28, align 4
  %v0_1000b5a0.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b594 = add i32 %v1_1000b594.pre, %v1_1000b4ac
  %v1_1000b598 = load i32, i32* @r23, align 4
  %v2_1000b598 = add i32 %v1_1000b598, %v0_1000b598.pre
  store i32 %v2_1000b598, i32* %r10.global-to-local, align 4
  %v2_1000b59c = icmp ult i32 %v2_1000b590, %v2_1000b594
  %v1_1000b5a0 = add i32 %v0_1000b5a0.pre, 19
  store i32 %v1_1000b5a0, i32* @r3, align 4
  %v1_1000b5a4 = add i32 %v2_1000b590, 19
  store i32 %v1_1000b5a4, i32* @r4, align 4
  br i1 %v2_1000b59c, label %dec_label_pc_1000b500, label %dec_label_pc_1000b5ac

dec_label_pc_1000b5ac:                            ; preds = %dec_label_pc_1000b4ec, %dec_label_pc_1000b548, %dec_label_pc_1000b518
  %v1_1000b5ac = phi i32 [ %v0_1000b52c, %dec_label_pc_1000b518 ], [ %v0_1000b4ec, %dec_label_pc_1000b4ec ], [ %v0_1000b5a0.pre, %dec_label_pc_1000b548 ]
  %v0_1000b5ac = phi i32 [ %v1_1000b52c, %dec_label_pc_1000b518 ], [ %v0_1000b4ec, %dec_label_pc_1000b4ec ], [ %v0_1000b598.pre, %dec_label_pc_1000b548 ]
  %v2_1000b5ac = sub i32 %v1_1000b5ac, %v0_1000b5ac
  store i32 %v2_1000b5ac, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b5b0

dec_label_pc_1000b5b0:                            ; preds = %dec_label_pc_1000b534, %dec_label_pc_1000b4e4, %dec_label_pc_1000b5ac
  %v0_1000b5b4 = phi i32 [ %v0_1000b5b4.pre, %dec_label_pc_1000b534 ], [ -1, %dec_label_pc_1000b4e4 ], [ %v2_1000b5ac, %dec_label_pc_1000b5ac ]
  %v0_1000b5b0 = load i32, i32* @r1, align 4
  %v1_1000b5b0 = inttoptr i32 %v0_1000b5b0 to i32*
  %v2_1000b5b0 = load i32, i32* %v1_1000b5b0, align 4
  store i32 %v2_1000b5b0, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000b5b4

; uselistorder directives
  uselistorder i32 %v2_1000b590, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000b548, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000b508, { 1, 0 }
  uselistorder i32 %v0_1000b4bc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000b4ac, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 10, 11, 12, 0, 3, 8, 9, 4, 5, 6, 7, 13, 14, 1, 15, 2, 16, 17 }
  uselistorder i32 22, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 14, 8, 15, 16, 17, 9, 10, 18, 11, 19, 12, 20 }
  uselistorder i32 7, { 34, 48, 12, 13, 22, 14, 15, 23, 16, 17, 24, 18, 19, 25, 26, 27, 28, 29, 30, 1, 31, 2, 32, 33, 0, 35, 3, 36, 4, 37, 20, 38, 21, 39, 5, 40, 6, 41, 42, 43, 7, 44, 45, 8, 46, 47, 9, 10, 11, 49 }
  uselistorder i32 19, { 25, 26, 1, 2, 0, 16, 17, 18, 4, 7, 8, 19, 9, 10, 20, 21, 22, 23, 24, 3, 11, 12, 13, 14, 15, 27, 28, 29, 30, 5, 6 }
  uselistorder i32* @r26, { 17, 18, 19, 10, 11, 12, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 27, 28, 29 }
  uselistorder i32* @r25, { 21, 22, 23, 14, 15, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 24, 25, 26, 27, 0, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* @r24, { 0, 18, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 19, 22, 1, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* @r27, { 23, 15, 16, 38, 39, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 19, 17, 18, 2, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 1, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 23, { 17, 9, 18, 2, 3, 10, 11, 12, 4, 13, 0, 1, 14, 15, 16, 5, 6, 7, 8 }
  uselistorder i32* @r22, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* @r23, { 11, 0, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* @r1, { 5, 6, 1, 2, 3, 0, 7, 4, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 14, 15, 16, 25, 21, 23, 22, 24, 0, 27, 26, 1, 2, 3, 19, 20, 17, 18, 5, 4, 6, 7, 8, 9, 10, 12, 11, 13, 28 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 17, 18, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000b5b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b5ac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b500, { 1, 0 }
}

define i32 @function_1000b5cc() local_unnamed_addr {
dec_label_pc_1000b5cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b5e4 = call i32 @__asm_mfcr()
  %v1_1000b5e8 = and i32 %v0_1000b5e4, 268435456
  %v3_1000b5e8 = icmp eq i32 %v1_1000b5e8, 0
  store i32 %v0_1000b5e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b5e8, label %dec_label_pc_1000b600, label %dec_label_pc_1000b5f4

dec_label_pc_1000b5f4:                            ; preds = %dec_label_pc_1000b5cc
  %v0_1000b5f4 = call i32 @function_10009c34()
  %v0_1000b5f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b5f8 = inttoptr i32 %v0_1000b5f4 to i32*
  store i32 %v0_1000b5f8, i32* %v2_1000b5f8, align 4
  br label %dec_label_pc_1000b600

dec_label_pc_1000b600:                            ; preds = %dec_label_pc_1000b5cc, %dec_label_pc_1000b5f4
  %v0_1000b610 = phi i32 [ %v0_1000b5e4, %dec_label_pc_1000b5cc ], [ -1, %dec_label_pc_1000b5f4 ]
  ret i32 %v0_1000b610

; uselistorder directives
  uselistorder label %dec_label_pc_1000b600, { 1, 0 }
}

define i32 @function_1000b614() local_unnamed_addr {
dec_label_pc_1000b614:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b62c = call i32 @__asm_mfcr()
  %v1_1000b630 = and i32 %v0_1000b62c, 268435456
  %v3_1000b630 = icmp eq i32 %v1_1000b630, 0
  store i32 %v0_1000b62c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b630, label %dec_label_pc_1000b648, label %dec_label_pc_1000b63c

dec_label_pc_1000b63c:                            ; preds = %dec_label_pc_1000b614
  %v0_1000b63c = call i32 @function_10009c34()
  %v0_1000b640 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b640 = inttoptr i32 %v0_1000b63c to i32*
  store i32 %v0_1000b640, i32* %v2_1000b640, align 4
  br label %dec_label_pc_1000b648

dec_label_pc_1000b648:                            ; preds = %dec_label_pc_1000b614, %dec_label_pc_1000b63c
  %v0_1000b658 = phi i32 [ %v0_1000b62c, %dec_label_pc_1000b614 ], [ -1, %dec_label_pc_1000b63c ]
  ret i32 %v0_1000b658

; uselistorder directives
  uselistorder label %dec_label_pc_1000b648, { 1, 0 }
}

define i32 @function_1000b65c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b65c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b674 = call i32 @__asm_mfcr()
  %v1_1000b678 = and i32 %v0_1000b674, 268435456
  %v3_1000b678 = icmp eq i32 %v1_1000b678, 0
  store i32 %v0_1000b674, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b678, label %dec_label_pc_1000b690, label %dec_label_pc_1000b684

dec_label_pc_1000b684:                            ; preds = %dec_label_pc_1000b65c
  %v0_1000b684 = call i32 @function_10009c34()
  %v0_1000b688 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b688 = inttoptr i32 %v0_1000b684 to i32*
  store i32 %v0_1000b688, i32* %v2_1000b688, align 4
  br label %dec_label_pc_1000b690

dec_label_pc_1000b690:                            ; preds = %dec_label_pc_1000b65c, %dec_label_pc_1000b684
  %v0_1000b6a0 = phi i32 [ %v0_1000b674, %dec_label_pc_1000b65c ], [ -1, %dec_label_pc_1000b684 ]
  ret i32 %v0_1000b6a0

; uselistorder directives
  uselistorder label %dec_label_pc_1000b690, { 1, 0 }
}

define i32 @function_1000b6a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b6a4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b6bc = call i32 @__asm_mfcr()
  %v1_1000b6c0 = and i32 %v0_1000b6bc, 268435456
  %v3_1000b6c0 = icmp eq i32 %v1_1000b6c0, 0
  store i32 %v0_1000b6bc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b6c0, label %dec_label_pc_1000b6d8, label %dec_label_pc_1000b6cc

dec_label_pc_1000b6cc:                            ; preds = %dec_label_pc_1000b6a4
  %v0_1000b6cc = call i32 @function_10009c34()
  %v0_1000b6d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b6d0 = inttoptr i32 %v0_1000b6cc to i32*
  store i32 %v0_1000b6d0, i32* %v2_1000b6d0, align 4
  br label %dec_label_pc_1000b6d8

dec_label_pc_1000b6d8:                            ; preds = %dec_label_pc_1000b6a4, %dec_label_pc_1000b6cc
  %v0_1000b6e8 = phi i32 [ %v0_1000b6bc, %dec_label_pc_1000b6a4 ], [ -1, %dec_label_pc_1000b6cc ]
  ret i32 %v0_1000b6e8

; uselistorder directives
  uselistorder label %dec_label_pc_1000b6d8, { 1, 0 }
}

define i32 @function_1000b6ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b6ec:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b6ec = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000b718 = call i32 @__asm_mfcr()
  %v1_1000b71c = and i32 %v0_1000b718, 268435456
  %v3_1000b71c = icmp eq i32 %v1_1000b71c, 0
  store i32 %v0_1000b718, i32* %r31.global-to-local, align 4
  store i32 %v0_1000b718, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b71c, label %dec_label_pc_1000b740, label %dec_label_pc_1000b730

dec_label_pc_1000b730:                            ; preds = %dec_label_pc_1000b6ec
  %v0_1000b730 = call i32 @function_10009c34()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000b738 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b738 = inttoptr i32 %v0_1000b730 to i32*
  store i32 %v0_1000b738, i32* %v2_1000b738, align 4
  %v0_1000b744.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b744

dec_label_pc_1000b740:                            ; preds = %dec_label_pc_1000b6ec
  %v3_1000b728 = icmp eq i32 %v0_1000b718, 0
  br i1 %v3_1000b728, label %dec_label_pc_1000b750, label %dec_label_pc_1000b744

dec_label_pc_1000b744:                            ; preds = %dec_label_pc_1000b740, %dec_label_pc_1000b730
  %v0_1000b744 = phi i32 [ %v0_1000b718, %dec_label_pc_1000b740 ], [ %v0_1000b744.pre, %dec_label_pc_1000b730 ]
  %tmp = icmp slt i32 %v0_1000b744, 0
  %v1_1000b748 = zext i1 %tmp to i32
  %v2_1000b748 = ashr i32 %v0_1000b744, 31
  %v3_1000b748 = and i32 %v2_1000b748, -2
  %v4_1000b748 = or i32 %v3_1000b748, %v1_1000b748
  br label %dec_label_pc_1000b758

dec_label_pc_1000b750:                            ; preds = %dec_label_pc_1000b740
  %v3_1000b750 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000b758

dec_label_pc_1000b758:                            ; preds = %dec_label_pc_1000b744, %dec_label_pc_1000b750
  %v0_1000b768 = phi i32 [ %v4_1000b748, %dec_label_pc_1000b744 ], [ %v3_1000b750, %dec_label_pc_1000b750 ]
  store i32 %v0_1000b6ec, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b768

; uselistorder directives
  uselistorder i32 %v0_1000b744, { 1, 0 }
  uselistorder i32 %v0_1000b718, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 7, 6, 1, 0, 8, 9, 12, 2, 10, 3, 11, 4, 5 }
  uselistorder label %dec_label_pc_1000b758, { 1, 0 }
}

define i32 @function_1000b76c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b76c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b784 = call i32 @__asm_mfcr()
  %v1_1000b788 = and i32 %v0_1000b784, 268435456
  %v3_1000b788 = icmp eq i32 %v1_1000b788, 0
  store i32 %v0_1000b784, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b788, label %dec_label_pc_1000b7a0, label %dec_label_pc_1000b794

dec_label_pc_1000b794:                            ; preds = %dec_label_pc_1000b76c
  %v0_1000b794 = call i32 @function_10009c34()
  %v0_1000b798 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b798 = inttoptr i32 %v0_1000b794 to i32*
  store i32 %v0_1000b798, i32* %v2_1000b798, align 4
  br label %dec_label_pc_1000b7a0

dec_label_pc_1000b7a0:                            ; preds = %dec_label_pc_1000b76c, %dec_label_pc_1000b794
  %v0_1000b7b0 = phi i32 [ %v0_1000b784, %dec_label_pc_1000b76c ], [ -1, %dec_label_pc_1000b794 ]
  ret i32 %v0_1000b7b0

; uselistorder directives
  uselistorder label %dec_label_pc_1000b7a0, { 1, 0 }
}

define i32 @function_1000b7b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b7b4:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000b7d0 = load i32, i32* @global_var_1001c6c8.329, align 4
  %v3_1000b7d4 = icmp eq i32 %v3_1000b7d0, 0
  br i1 %v3_1000b7d4, label %dec_label_pc_1000b7dc, label %dec_label_pc_1000b7e8

dec_label_pc_1000b7dc:                            ; preds = %dec_label_pc_1000b7b4
  store i32 268482528, i32* @lr, align 4
  %v1_1000b7dc = call i32 @function_1000bda8(i32 0)
  %v1_1000b7e0 = icmp slt i32 %v1_1000b7dc, 0
  br i1 %v1_1000b7e0, label %dec_label_pc_1000b808, label %dec_label_pc_1000b7dc.dec_label_pc_1000b7e8_crit_edge

dec_label_pc_1000b7dc.dec_label_pc_1000b7e8_crit_edge: ; preds = %dec_label_pc_1000b7dc
  %v0_1000b7e8.pre = load i32, i32* @r30, align 4
  %v3_1000b7ec.pre = load i32, i32* @global_var_1001c6c8.329, align 4
  br label %dec_label_pc_1000b7e8

dec_label_pc_1000b7e8:                            ; preds = %dec_label_pc_1000b7dc.dec_label_pc_1000b7e8_crit_edge, %dec_label_pc_1000b7b4
  %v3_1000b7ec = phi i32 [ %v3_1000b7ec.pre, %dec_label_pc_1000b7dc.dec_label_pc_1000b7e8_crit_edge ], [ %v3_1000b7d0, %dec_label_pc_1000b7b4 ]
  %v1_1000b7f4 = phi i32 [ %v0_1000b7e8.pre, %dec_label_pc_1000b7dc.dec_label_pc_1000b7e8_crit_edge ], [ %arg1, %dec_label_pc_1000b7b4 ]
  %v3_1000b7e8 = icmp eq i32 %v1_1000b7f4, 0
  store i32 %v3_1000b7ec, i32* @r31, align 4
  br i1 %v3_1000b7e8, label %dec_label_pc_1000b80c, label %dec_label_pc_1000b7fc

dec_label_pc_1000b7fc:                            ; preds = %dec_label_pc_1000b7e8
  %v2_1000b7f4 = add i32 %v1_1000b7f4, %v3_1000b7ec
  store i32 268482560, i32* @lr, align 4
  %v1_1000b7fc = call i32 @function_1000bda8(i32 %v2_1000b7f4)
  %tmp6 = icmp sgt i32 %v1_1000b7fc, -1
  br i1 %tmp6, label %dec_label_pc_1000b7fc.dec_label_pc_1000b80c_crit_edge, label %dec_label_pc_1000b808

dec_label_pc_1000b7fc.dec_label_pc_1000b80c_crit_edge: ; preds = %dec_label_pc_1000b7fc
  %v0_1000b810.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b80c

dec_label_pc_1000b808:                            ; preds = %dec_label_pc_1000b7fc, %dec_label_pc_1000b7dc
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000b80c

dec_label_pc_1000b80c:                            ; preds = %dec_label_pc_1000b7fc.dec_label_pc_1000b80c_crit_edge, %dec_label_pc_1000b7e8, %dec_label_pc_1000b808
  %v0_1000b810 = phi i32 [ %v0_1000b810.pre, %dec_label_pc_1000b7fc.dec_label_pc_1000b80c_crit_edge ], [ %v3_1000b7ec, %dec_label_pc_1000b7e8 ], [ -1, %dec_label_pc_1000b808 ]
  ret i32 %v0_1000b810

; uselistorder directives
  uselistorder i32 %v3_1000b7ec, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000bda8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b80c, { 2, 0, 1 }
}

define i32 @function_1000b824(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b824:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b83c = call i32 @__asm_mfcr()
  %v1_1000b840 = and i32 %v0_1000b83c, 268435456
  %v3_1000b840 = icmp eq i32 %v1_1000b840, 0
  store i32 %v0_1000b83c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b840, label %dec_label_pc_1000b858, label %dec_label_pc_1000b84c

dec_label_pc_1000b84c:                            ; preds = %dec_label_pc_1000b824
  %v0_1000b84c = call i32 @function_10009c34()
  %v0_1000b850 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b850 = inttoptr i32 %v0_1000b84c to i32*
  store i32 %v0_1000b850, i32* %v2_1000b850, align 4
  br label %dec_label_pc_1000b858

dec_label_pc_1000b858:                            ; preds = %dec_label_pc_1000b824, %dec_label_pc_1000b84c
  %v0_1000b868 = phi i32 [ %v0_1000b83c, %dec_label_pc_1000b824 ], [ -1, %dec_label_pc_1000b84c ]
  ret i32 %v0_1000b868

; uselistorder directives
  uselistorder label %dec_label_pc_1000b858, { 1, 0 }
}

define i32 @function_1000b86c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b86c:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268482708, i32* @lr, align 4
  %v3_1000b890 = call i32 @function_10009d1c(i32 %arg2, i32 0, i32 104)
  %v2_1000b894 = load i32, i32* %arg1, align 4
  %v1_1000b898 = add i32 %tmp, 4
  %v2_1000b898 = inttoptr i32 %v1_1000b898 to i32*
  %v3_1000b898 = load i32, i32* %v2_1000b898, align 4
  store i32 %v3_1000b898, i32* %r10.global-to-local, align 4
  %v1_1000b89c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b89c = inttoptr i32 %v1_1000b89c to i32*
  store i32 %v2_1000b894, i32* %v2_1000b89c, align 4
  %v0_1000b8a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b8a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8a0 = add i32 %v1_1000b8a0, 4
  %v3_1000b8a0 = inttoptr i32 %v2_1000b8a0 to i32*
  store i32 %v0_1000b8a0, i32* %v3_1000b8a0, align 4
  %v0_1000b8a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8a4 = add i32 %v0_1000b8a4, 8
  %v2_1000b8a4 = inttoptr i32 %v1_1000b8a4 to i32*
  %v3_1000b8a4 = load i32, i32* %v2_1000b8a4, align 4
  %v1_1000b8a8 = add i32 %v0_1000b8a4, 12
  %v2_1000b8a8 = inttoptr i32 %v1_1000b8a8 to i32*
  %v3_1000b8a8 = load i32, i32* %v2_1000b8a8, align 4
  store i32 %v3_1000b8a8, i32* %r10.global-to-local, align 4
  %v1_1000b8ac = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8ac = add i32 %v1_1000b8ac, 8
  %v3_1000b8ac = inttoptr i32 %v2_1000b8ac to i32*
  store i32 %v3_1000b8a4, i32* %v3_1000b8ac, align 4
  %v0_1000b8b0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b8b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8b0 = add i32 %v1_1000b8b0, 12
  %v3_1000b8b0 = inttoptr i32 %v2_1000b8b0 to i32*
  store i32 %v0_1000b8b0, i32* %v3_1000b8b0, align 4
  %v0_1000b8b4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8b4 = add i32 %v0_1000b8b4, 16
  %v2_1000b8b4 = inttoptr i32 %v1_1000b8b4 to i32*
  %v3_1000b8b4 = load i32, i32* %v2_1000b8b4, align 4
  %v1_1000b8b8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8b8 = add i32 %v1_1000b8b8, 16
  %v3_1000b8b8 = inttoptr i32 %v2_1000b8b8 to i32*
  store i32 %v3_1000b8b4, i32* %v3_1000b8b8, align 4
  %v0_1000b8bc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8bc = add i32 %v0_1000b8bc, 20
  %v2_1000b8bc = inttoptr i32 %v1_1000b8bc to i32*
  %v3_1000b8bc = load i32, i32* %v2_1000b8bc, align 4
  %v1_1000b8c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8c0 = add i32 %v1_1000b8c0, 20
  %v3_1000b8c0 = inttoptr i32 %v2_1000b8c0 to i32*
  store i32 %v3_1000b8bc, i32* %v3_1000b8c0, align 4
  %v0_1000b8c4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8c4 = add i32 %v0_1000b8c4, 24
  %v2_1000b8c4 = inttoptr i32 %v1_1000b8c4 to i32*
  %v3_1000b8c4 = load i32, i32* %v2_1000b8c4, align 4
  %v1_1000b8c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8c8 = add i32 %v1_1000b8c8, 24
  %v3_1000b8c8 = inttoptr i32 %v2_1000b8c8 to i32*
  store i32 %v3_1000b8c4, i32* %v3_1000b8c8, align 4
  %v0_1000b8cc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8cc = add i32 %v0_1000b8cc, 28
  %v2_1000b8cc = inttoptr i32 %v1_1000b8cc to i32*
  %v3_1000b8cc = load i32, i32* %v2_1000b8cc, align 4
  %v1_1000b8d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8d0 = add i32 %v1_1000b8d0, 28
  %v3_1000b8d0 = inttoptr i32 %v2_1000b8d0 to i32*
  store i32 %v3_1000b8cc, i32* %v3_1000b8d0, align 4
  %v0_1000b8d4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8d4 = add i32 %v0_1000b8d4, 32
  %v2_1000b8d4 = inttoptr i32 %v1_1000b8d4 to i32*
  %v3_1000b8d4 = load i32, i32* %v2_1000b8d4, align 4
  %v1_1000b8d8 = add i32 %v0_1000b8d4, 36
  %v2_1000b8d8 = inttoptr i32 %v1_1000b8d8 to i32*
  %v3_1000b8d8 = load i32, i32* %v2_1000b8d8, align 4
  store i32 %v3_1000b8d8, i32* %r10.global-to-local, align 4
  %v1_1000b8dc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8dc = add i32 %v1_1000b8dc, 32
  %v3_1000b8dc = inttoptr i32 %v2_1000b8dc to i32*
  store i32 %v3_1000b8d4, i32* %v3_1000b8dc, align 4
  %v0_1000b8e0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b8e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8e0 = add i32 %v1_1000b8e0, 36
  %v3_1000b8e0 = inttoptr i32 %v2_1000b8e0 to i32*
  store i32 %v0_1000b8e0, i32* %v3_1000b8e0, align 4
  %v0_1000b8e4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8e4 = add i32 %v0_1000b8e4, 48
  %v2_1000b8e4 = inttoptr i32 %v1_1000b8e4 to i32*
  %v3_1000b8e4 = load i32, i32* %v2_1000b8e4, align 4
  %v1_1000b8e8 = add i32 %v0_1000b8e4, 52
  %v2_1000b8e8 = inttoptr i32 %v1_1000b8e8 to i32*
  %v3_1000b8e8 = load i32, i32* %v2_1000b8e8, align 4
  store i32 %v3_1000b8e8, i32* %r10.global-to-local, align 4
  %v1_1000b8ec = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8ec = add i32 %v1_1000b8ec, 48
  %v3_1000b8ec = inttoptr i32 %v2_1000b8ec to i32*
  store i32 %v3_1000b8e4, i32* %v3_1000b8ec, align 4
  %v0_1000b8f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b8f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8f0 = add i32 %v1_1000b8f0, 52
  %v3_1000b8f0 = inttoptr i32 %v2_1000b8f0 to i32*
  store i32 %v0_1000b8f0, i32* %v3_1000b8f0, align 4
  %v0_1000b8f4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8f4 = add i32 %v0_1000b8f4, 56
  %v2_1000b8f4 = inttoptr i32 %v1_1000b8f4 to i32*
  %v3_1000b8f4 = load i32, i32* %v2_1000b8f4, align 4
  %v1_1000b8f8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8f8 = add i32 %v1_1000b8f8, 56
  %v3_1000b8f8 = inttoptr i32 %v2_1000b8f8 to i32*
  store i32 %v3_1000b8f4, i32* %v3_1000b8f8, align 4
  %v0_1000b8fc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8fc = add i32 %v0_1000b8fc, 64
  %v2_1000b8fc = inttoptr i32 %v1_1000b8fc to i32*
  %v3_1000b8fc = load i32, i32* %v2_1000b8fc, align 4
  %v1_1000b900 = add i32 %v0_1000b8fc, 68
  %v2_1000b900 = inttoptr i32 %v1_1000b900 to i32*
  %v3_1000b900 = load i32, i32* %v2_1000b900, align 4
  store i32 %v3_1000b900, i32* %r10.global-to-local, align 4
  %v1_1000b904 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b904 = add i32 %v1_1000b904, 64
  %v3_1000b904 = inttoptr i32 %v2_1000b904 to i32*
  store i32 %v3_1000b8fc, i32* %v3_1000b904, align 4
  %v0_1000b908 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b908 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b908 = add i32 %v1_1000b908, 68
  %v3_1000b908 = inttoptr i32 %v2_1000b908 to i32*
  store i32 %v0_1000b908, i32* %v3_1000b908, align 4
  %v0_1000b90c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b90c = add i32 %v0_1000b90c, 72
  %v2_1000b90c = inttoptr i32 %v1_1000b90c to i32*
  %v3_1000b90c = load i32, i32* %v2_1000b90c, align 4
  %v1_1000b910 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b910 = add i32 %v1_1000b910, 72
  %v3_1000b910 = inttoptr i32 %v2_1000b910 to i32*
  store i32 %v3_1000b90c, i32* %v3_1000b910, align 4
  %v0_1000b914 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b914 = add i32 %v0_1000b914, 80
  %v2_1000b914 = inttoptr i32 %v1_1000b914 to i32*
  %v3_1000b914 = load i32, i32* %v2_1000b914, align 4
  %v1_1000b918 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b918 = add i32 %v1_1000b918, 80
  %v3_1000b918 = inttoptr i32 %v2_1000b918 to i32*
  store i32 %v3_1000b914, i32* %v3_1000b918, align 4
  %v0_1000b91c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b91c = add i32 %v0_1000b91c, 88
  %v2_1000b91c = inttoptr i32 %v1_1000b91c to i32*
  %v3_1000b91c = load i32, i32* %v2_1000b91c, align 4
  %v1_1000b920 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b920 = add i32 %v1_1000b920, 88
  %v3_1000b920 = inttoptr i32 %v2_1000b920 to i32*
  store i32 %v3_1000b91c, i32* %v3_1000b920, align 4
  ret i32 %v3_1000b890

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 13, 12, 11, 10, 17, 14, 15, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5, 11, 12 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder i32 80, { 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 13, 14, 3, 4 }
  uselistorder i32 104, { 6, 8, 7, 9, 0, 1, 2, 3, 4, 5, 10, 11 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b938(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b938:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000b93c = load i32, i32* @lr, align 4
  store i32 %v0_1000b93c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268482912, i32* @lr, align 4
  %v3_1000b95c = call i32 @function_10009d1c(i32 %arg2, i32 0, i32 88)
  %v0_1000b960 = load i32, i32* @r28, align 4
  %v1_1000b960 = inttoptr i32 %v0_1000b960 to i32*
  %v2_1000b960 = load i32, i32* %v1_1000b960, align 4
  store i32 %v2_1000b960, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000b968 = load i32, i32* @r29, align 4
  %v2_1000b968 = add i32 %v1_1000b968, 4
  %v3_1000b968 = inttoptr i32 %v2_1000b968 to i32*
  store i32 %v2_1000b960, i32* %v3_1000b968, align 4
  %v0_1000b96c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b96c = load i32, i32* @r29, align 4
  %v2_1000b96c = inttoptr i32 %v1_1000b96c to i32*
  store i32 %v0_1000b96c, i32* %v2_1000b96c, align 4
  %v0_1000b970 = load i32, i32* @r28, align 4
  %v1_1000b970 = add i32 %v0_1000b970, 4
  %v2_1000b970 = inttoptr i32 %v1_1000b970 to i32*
  %v3_1000b970 = load i32, i32* %v2_1000b970, align 4
  store i32 %v3_1000b970, i32* %r0.global-to-local, align 4
  %v1_1000b974 = load i32, i32* @r29, align 4
  %v2_1000b974 = add i32 %v1_1000b974, 12
  %v3_1000b974 = inttoptr i32 %v2_1000b974 to i32*
  store i32 %v3_1000b970, i32* %v3_1000b974, align 4
  %v0_1000b978 = load i32, i32* @r28, align 4
  %v1_1000b978 = add i32 %v0_1000b978, 8
  %v2_1000b978 = inttoptr i32 %v1_1000b978 to i32*
  %v3_1000b978 = load i32, i32* %v2_1000b978, align 4
  store i32 %v3_1000b978, i32* %r0.global-to-local, align 4
  %v1_1000b97c = load i32, i32* @r29, align 4
  %v2_1000b97c = add i32 %v1_1000b97c, 16
  %v3_1000b97c = inttoptr i32 %v2_1000b97c to i32*
  store i32 %v3_1000b978, i32* %v3_1000b97c, align 4
  %v0_1000b980 = load i32, i32* @r28, align 4
  %v1_1000b980 = add i32 %v0_1000b980, 12
  %v2_1000b980 = inttoptr i32 %v1_1000b980 to i16*
  %v3_1000b980 = load i16, i16* %v2_1000b980, align 2
  %v4_1000b980 = zext i16 %v3_1000b980 to i32
  store i32 %v4_1000b980, i32* %r0.global-to-local, align 4
  %v1_1000b984 = load i32, i32* @r29, align 4
  %v2_1000b984 = add i32 %v1_1000b984, 20
  %v3_1000b984 = inttoptr i32 %v2_1000b984 to i32*
  store i32 %v4_1000b980, i32* %v3_1000b984, align 4
  %v0_1000b988 = load i32, i32* @r28, align 4
  %v1_1000b988 = add i32 %v0_1000b988, 16
  %v2_1000b988 = inttoptr i32 %v1_1000b988 to i32*
  %v3_1000b988 = load i32, i32* %v2_1000b988, align 4
  store i32 %v3_1000b988, i32* %r0.global-to-local, align 4
  %v1_1000b98c = load i32, i32* @r29, align 4
  %v2_1000b98c = add i32 %v1_1000b98c, 24
  %v3_1000b98c = inttoptr i32 %v2_1000b98c to i32*
  store i32 %v3_1000b988, i32* %v3_1000b98c, align 4
  %v0_1000b990 = load i32, i32* @r28, align 4
  %v1_1000b990 = add i32 %v0_1000b990, 20
  %v2_1000b990 = inttoptr i32 %v1_1000b990 to i32*
  %v3_1000b990 = load i32, i32* %v2_1000b990, align 4
  store i32 %v3_1000b990, i32* %r0.global-to-local, align 4
  %v1_1000b994 = load i32, i32* @r29, align 4
  %v2_1000b994 = add i32 %v1_1000b994, 28
  %v3_1000b994 = inttoptr i32 %v2_1000b994 to i32*
  store i32 %v3_1000b990, i32* %v3_1000b994, align 4
  %v0_1000b998 = load i32, i32* @r28, align 4
  %v1_1000b998 = add i32 %v0_1000b998, 24
  %v2_1000b998 = inttoptr i32 %v1_1000b998 to i32*
  %v3_1000b998 = load i32, i32* %v2_1000b998, align 4
  store i32 %v3_1000b998, i32* %r0.global-to-local, align 4
  %v0_1000b99c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b99c = load i32, i32* @r29, align 4
  %v2_1000b99c = add i32 %v1_1000b99c, 32
  %v3_1000b99c = inttoptr i32 %v2_1000b99c to i32*
  store i32 %v0_1000b99c, i32* %v3_1000b99c, align 4
  %v0_1000b9a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b9a0 = load i32, i32* @r29, align 4
  %v2_1000b9a0 = add i32 %v1_1000b9a0, 36
  %v3_1000b9a0 = inttoptr i32 %v2_1000b9a0 to i32*
  store i32 %v0_1000b9a0, i32* %v3_1000b9a0, align 4
  %v0_1000b9a4 = load i32, i32* @r28, align 4
  %v1_1000b9a4 = add i32 %v0_1000b9a4, 28
  %v2_1000b9a4 = inttoptr i32 %v1_1000b9a4 to i32*
  %v3_1000b9a4 = load i32, i32* %v2_1000b9a4, align 4
  store i32 %v3_1000b9a4, i32* %r0.global-to-local, align 4
  %v1_1000b9a8 = load i32, i32* @r29, align 4
  %v2_1000b9a8 = add i32 %v1_1000b9a8, 44
  %v3_1000b9a8 = inttoptr i32 %v2_1000b9a8 to i32*
  store i32 %v3_1000b9a4, i32* %v3_1000b9a8, align 4
  %v0_1000b9ac = load i32, i32* @r28, align 4
  %v1_1000b9ac = add i32 %v0_1000b9ac, 32
  %v2_1000b9ac = inttoptr i32 %v1_1000b9ac to i32*
  %v3_1000b9ac = load i32, i32* %v2_1000b9ac, align 4
  store i32 %v3_1000b9ac, i32* %r0.global-to-local, align 4
  %v1_1000b9b0 = load i32, i32* @r29, align 4
  %v2_1000b9b0 = add i32 %v1_1000b9b0, 48
  %v3_1000b9b0 = inttoptr i32 %v2_1000b9b0 to i32*
  store i32 %v3_1000b9ac, i32* %v3_1000b9b0, align 4
  %v0_1000b9b4 = load i32, i32* @r28, align 4
  %v1_1000b9b4 = add i32 %v0_1000b9b4, 36
  %v2_1000b9b4 = inttoptr i32 %v1_1000b9b4 to i32*
  %v3_1000b9b4 = load i32, i32* %v2_1000b9b4, align 4
  store i32 %v3_1000b9b4, i32* %r0.global-to-local, align 4
  %v1_1000b9b8 = load i32, i32* @r29, align 4
  %v2_1000b9b8 = add i32 %v1_1000b9b8, 52
  %v3_1000b9b8 = inttoptr i32 %v2_1000b9b8 to i32*
  store i32 %v3_1000b9b4, i32* %v3_1000b9b8, align 4
  %v0_1000b9bc = load i32, i32* @r28, align 4
  %v1_1000b9bc = add i32 %v0_1000b9bc, 40
  %v2_1000b9bc = inttoptr i32 %v1_1000b9bc to i32*
  %v3_1000b9bc = load i32, i32* %v2_1000b9bc, align 4
  store i32 %v3_1000b9bc, i32* %r0.global-to-local, align 4
  %v1_1000b9c0 = load i32, i32* @r29, align 4
  %v2_1000b9c0 = add i32 %v1_1000b9c0, 56
  %v3_1000b9c0 = inttoptr i32 %v2_1000b9c0 to i32*
  store i32 %v3_1000b9bc, i32* %v3_1000b9c0, align 4
  %v0_1000b9c4 = load i32, i32* @r28, align 4
  %v1_1000b9c4 = add i32 %v0_1000b9c4, 48
  %v2_1000b9c4 = inttoptr i32 %v1_1000b9c4 to i32*
  %v3_1000b9c4 = load i32, i32* %v2_1000b9c4, align 4
  store i32 %v3_1000b9c4, i32* %r0.global-to-local, align 4
  %v1_1000b9c8 = load i32, i32* @r29, align 4
  %v2_1000b9c8 = add i32 %v1_1000b9c8, 64
  %v3_1000b9c8 = inttoptr i32 %v2_1000b9c8 to i32*
  store i32 %v3_1000b9c4, i32* %v3_1000b9c8, align 4
  %v0_1000b9cc = load i32, i32* @r28, align 4
  %v1_1000b9cc = add i32 %v0_1000b9cc, 56
  %v2_1000b9cc = inttoptr i32 %v1_1000b9cc to i32*
  %v3_1000b9cc = load i32, i32* %v2_1000b9cc, align 4
  %v1_1000b9d0 = load i32, i32* @r29, align 4
  %v2_1000b9d0 = add i32 %v1_1000b9d0, 72
  %v3_1000b9d0 = inttoptr i32 %v2_1000b9d0 to i32*
  store i32 %v3_1000b9cc, i32* %v3_1000b9d0, align 4
  store i32 %v0_1000b93c, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000b95c

; uselistorder directives
  uselistorder i32 72, { 4, 0, 1, 2, 3 }
  uselistorder i32 64, { 25, 18, 19, 3, 27, 13, 14, 15, 16, 17, 0, 1, 2, 20, 21, 22, 23, 24, 4, 5, 6, 7, 8, 9, 26, 10, 11, 12 }
  uselistorder i32 56, { 16, 17, 5, 6, 7, 8, 9, 10, 11, 2, 4, 12, 13, 3, 0, 1, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 40, { 13, 2, 6, 7, 9, 10, 8, 3, 11, 0, 1, 12, 5, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 52, { 11, 4, 5, 6, 7, 8, 2, 0, 1, 9, 10, 12, 13, 3, 14 }
  uselistorder i32 48, { 4, 5, 2, 3, 6, 0, 7, 1, 8 }
  uselistorder i32 36, { 6, 7, 2, 3, 4, 5, 0, 1 }
  uselistorder i32 24, { 27, 28, 7, 8, 0, 1, 14, 52, 53, 54, 47, 48, 49, 2, 13, 15, 9, 12, 10, 11, 16, 17, 18, 19, 21, 22, 23, 24, 20, 25, 26, 3, 4, 5, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 6 }
  uselistorder i32 20, { 34, 35, 18, 19, 20, 21, 36, 37, 38, 39, 5, 22, 23, 24, 25, 6, 26, 27, 28, 29, 0, 1, 30, 31, 2, 32, 33, 40, 41, 7, 42, 43, 44, 45, 46, 47, 48, 49, 8, 50, 51, 52, 53, 54, 55, 9, 56, 57, 58, 59, 60, 61, 62, 10, 63, 64, 65, 66, 67, 68, 69, 70, 11, 71, 72, 73, 74, 75, 12, 76, 77, 78, 79, 13, 80, 14, 81, 82, 3, 15, 83, 84, 85, 4, 16, 86, 87, 88, 89, 90, 91, 17, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104 }
  uselistorder i32 16, { 88, 89, 75, 76, 90, 91, 92, 93, 94, 20, 87, 77, 172, 173, 95, 96, 24, 23, 53, 54, 55, 78, 56, 57, 79, 80, 128, 125, 58, 59, 81, 83, 25, 84, 85, 18, 0, 19, 1, 2, 86, 3, 26, 82, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 27, 156, 157, 158, 159, 160, 97, 98, 29, 99, 100, 4, 101, 102, 103, 28, 104, 105, 31, 106, 107, 108, 109, 110, 30, 35, 111, 112, 113, 5, 114, 115, 6, 7, 21, 117, 73, 116, 32, 34, 33, 39, 118, 119, 120, 8, 121, 122, 9, 10, 22, 124, 74, 123, 36, 38, 37, 11, 40, 126, 12, 13, 127, 129, 130, 41, 131, 132, 133, 134, 135, 14, 136, 42, 137, 138, 139, 15, 140, 143, 144, 141, 142, 145, 146, 16, 147, 43, 148, 149, 150, 17, 151, 154, 155, 152, 153, 161, 162, 163, 164, 44, 165, 166, 167, 48, 47, 45, 168, 46, 169, 52, 51, 49, 170, 50, 171 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b9e8() local_unnamed_addr {
dec_label_pc_1000b9e8:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000b9e8 = load i32, i32* @r5, align 4
  %v1_1000b9e8 = call i32 @__asm_rlwinm.(i32 %v0_1000b9e8, i32 29, i32 3, i32 31)
  store i32 %v1_1000b9e8, i32* %r9.global-to-local, align 4
  %v4_1000b9e8 = icmp eq i32 %v1_1000b9e8, 0
  %v0_1000b9ec = load i32, i32* @r4, align 4
  %v1_1000b9ec = add i32 %v0_1000b9ec, -4
  store i32 %v1_1000b9ec, i32* %r4.global-to-local, align 4
  %v0_1000b9f0 = load i32, i32* @r3, align 4
  %v1_1000b9f0 = add i32 %v0_1000b9f0, -4
  store i32 %v1_1000b9f0, i32* @r11, align 4
  br i1 %v4_1000b9e8, label %dec_label_pc_1000ba18, label %dec_label_pc_1000b9f8

dec_label_pc_1000b9f8:                            ; preds = %dec_label_pc_1000b9e8
  %v1_1000b9f8 = urem i32 %v1_1000b9f0, 4
  %v3_1000b9f8 = icmp eq i32 %v1_1000b9f8, 0
  br i1 %v3_1000b9f8, label %dec_label_pc_1000ba00, label %dec_label_pc_1000ba54

dec_label_pc_1000ba00:                            ; preds = %dec_label_pc_1000ba74.dec_label_pc_1000ba00_crit_edge, %dec_label_pc_1000b9f8
  %v1_1000ba0c.pre = phi i32 [ %v1_1000b9f0, %dec_label_pc_1000b9f8 ], [ %v1_1000ba0c.pre.pre, %dec_label_pc_1000ba74.dec_label_pc_1000ba00_crit_edge ]
  %v0_1000ba00 = phi i32 [ %v1_1000b9e8, %dec_label_pc_1000b9f8 ], [ %v1_1000ba74, %dec_label_pc_1000ba74.dec_label_pc_1000ba00_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000b9f8 ], [ %v2_1000ba5c, %dec_label_pc_1000ba74.dec_label_pc_1000ba00_crit_edge ]
  store i32 %v0_1000ba00, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ba04

dec_label_pc_1000ba04:                            ; preds = %dec_label_pc_1000ba04, %dec_label_pc_1000ba00
  %v1_1000ba0c = phi i32 [ %v2_1000ba10, %dec_label_pc_1000ba04 ], [ %v1_1000ba0c.pre, %dec_label_pc_1000ba00 ]
  %v0_1000ba04 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ba04 = add i32 %v0_1000ba04, 4
  %v2_1000ba04 = inttoptr i32 %v1_1000ba04 to i32*
  %v3_1000ba04 = load i32, i32* %v2_1000ba04, align 4
  %v1_1000ba08 = add i32 %v0_1000ba04, 8
  %v2_1000ba08 = inttoptr i32 %v1_1000ba08 to i32*
  %v3_1000ba08 = load i32, i32* %v2_1000ba08, align 4
  store i32 %v3_1000ba08, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ba08, i32* %r4.global-to-local, align 4
  %v2_1000ba0c = add i32 %v1_1000ba0c, 4
  %v3_1000ba0c = inttoptr i32 %v2_1000ba0c to i32*
  store i32 %v3_1000ba04, i32* %v3_1000ba0c, align 4
  %v0_1000ba10 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ba10 = load i32, i32* @r11, align 4
  %v2_1000ba10 = add i32 %v1_1000ba10, 8
  %v3_1000ba10 = inttoptr i32 %v2_1000ba10 to i32*
  store i32 %v0_1000ba10, i32* %v3_1000ba10, align 4
  store i32 %v2_1000ba10, i32* @r11, align 4
  %v0_1000ba14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba14 = add i32 %v0_1000ba14, -1
  store i32 %v1_1000ba14, i32* %ctr.global-to-local, align 4
  %v2_1000ba14 = icmp eq i32 %v1_1000ba14, 0
  br i1 %v2_1000ba14, label %dec_label_pc_1000ba18, label %dec_label_pc_1000ba04

dec_label_pc_1000ba18:                            ; preds = %dec_label_pc_1000ba04, %dec_label_pc_1000ba74, %dec_label_pc_1000b9e8
  %.1 = phi i32 [ undef, %dec_label_pc_1000b9e8 ], [ %v2_1000ba5c, %dec_label_pc_1000ba74 ], [ %.0, %dec_label_pc_1000ba04 ]
  %v1_1000ba18 = urem i32 %.1, 8
  store i32 %v1_1000ba18, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000ba18, 4
  br i1 %tmp, label %dec_label_pc_1000ba30, label %dec_label_pc_1000ba24

dec_label_pc_1000ba24:                            ; preds = %dec_label_pc_1000ba18
  %v0_1000ba24 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ba24 = add i32 %v0_1000ba24, 4
  %v2_1000ba24 = inttoptr i32 %v1_1000ba24 to i32*
  %v3_1000ba24 = load i32, i32* %v2_1000ba24, align 4
  store i32 %v1_1000ba24, i32* %r4.global-to-local, align 4
  %v1_1000ba28 = add nsw i32 %v1_1000ba18, -4
  store i32 %v1_1000ba28, i32* @r5, align 4
  %v1_1000ba2c = load i32, i32* @r11, align 4
  %v2_1000ba2c = add i32 %v1_1000ba2c, 4
  %v3_1000ba2c = inttoptr i32 %v2_1000ba2c to i32*
  store i32 %v3_1000ba24, i32* %v3_1000ba2c, align 4
  store i32 %v2_1000ba2c, i32* @r11, align 4
  %v0_1000ba30.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000ba30

dec_label_pc_1000ba30:                            ; preds = %dec_label_pc_1000ba18, %dec_label_pc_1000ba24
  %v0_1000ba30 = phi i32 [ %v1_1000ba18, %dec_label_pc_1000ba18 ], [ %v0_1000ba30.pre, %dec_label_pc_1000ba24 ]
  %v3_1000ba30 = icmp eq i32 %v0_1000ba30, 0
  %v0_1000ba34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ba30, i32 %v0_1000ba34)
  %v0_1000ba38 = load i32, i32* @r5, align 4
  store i32 %v0_1000ba38, i32* %ctr.global-to-local, align 4
  %v0_1000ba3c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ba3c = add i32 %v0_1000ba3c, 3
  store i32 %v1_1000ba3c, i32* %r4.global-to-local, align 4
  %v0_1000ba40 = load i32, i32* @r11, align 4
  %v1_1000ba40 = add i32 %v0_1000ba40, 3
  store i32 %v1_1000ba40, i32* %r9.global-to-local, align 4
  %v1_1000ba449 = add i32 %v0_1000ba3c, 4
  %v2_1000ba4410 = inttoptr i32 %v1_1000ba449 to i8*
  %v3_1000ba4411 = load i8, i8* %v2_1000ba4410, align 1
  store i32 %v1_1000ba449, i32* %r4.global-to-local, align 4
  %v3_1000ba4813 = add i32 %v0_1000ba40, 4
  %v4_1000ba4814 = inttoptr i32 %v3_1000ba4813 to i8*
  store i8 %v3_1000ba4411, i8* %v4_1000ba4814, align 1
  store i32 %v3_1000ba4813, i32* %r9.global-to-local, align 4
  %v0_1000ba4c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba4c16 = add i32 %v0_1000ba4c15, -1
  store i32 %v1_1000ba4c16, i32* %ctr.global-to-local, align 4
  %v2_1000ba4c17 = icmp eq i32 %v1_1000ba4c16, 0
  br i1 %v2_1000ba4c17, label %dec_label_pc_1000ba80, label %dec_label_pc_1000ba44.dec_label_pc_1000ba44_crit_edge

dec_label_pc_1000ba44.dec_label_pc_1000ba44_crit_edge: ; preds = %dec_label_pc_1000ba30, %dec_label_pc_1000ba44.dec_label_pc_1000ba44_crit_edge
  %v3_1000ba4818 = phi i32 [ %v3_1000ba48, %dec_label_pc_1000ba44.dec_label_pc_1000ba44_crit_edge ], [ %v3_1000ba4813, %dec_label_pc_1000ba30 ]
  %v0_1000ba44.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ba44 = add i32 %v0_1000ba44.pre, 1
  %v2_1000ba44 = inttoptr i32 %v1_1000ba44 to i8*
  %v3_1000ba44 = load i8, i8* %v2_1000ba44, align 1
  store i32 %v1_1000ba44, i32* %r4.global-to-local, align 4
  %v3_1000ba48 = add i32 %v3_1000ba4818, 1
  %v4_1000ba48 = inttoptr i32 %v3_1000ba48 to i8*
  store i8 %v3_1000ba44, i8* %v4_1000ba48, align 1
  store i32 %v3_1000ba48, i32* %r9.global-to-local, align 4
  %v0_1000ba4c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba4c = add i32 %v0_1000ba4c, -1
  store i32 %v1_1000ba4c, i32* %ctr.global-to-local, align 4
  %v2_1000ba4c = icmp eq i32 %v1_1000ba4c, 0
  br i1 %v2_1000ba4c, label %dec_label_pc_1000ba80, label %dec_label_pc_1000ba44.dec_label_pc_1000ba44_crit_edge

dec_label_pc_1000ba54:                            ; preds = %dec_label_pc_1000b9f8
  %v1_1000ba54 = sub nsw i32 4, %v1_1000b9f8
  store i32 %v1_1000ba54, i32* %ctr.global-to-local, align 4
  %v1_1000ba5c = load i32, i32* @r5, align 4
  %v2_1000ba5c = sub i32 %v1_1000ba5c, %v1_1000ba54
  br label %dec_label_pc_1000ba60

dec_label_pc_1000ba60:                            ; preds = %dec_label_pc_1000ba60.dec_label_pc_1000ba60_crit_edge, %dec_label_pc_1000ba54
  %v2_1000ba68 = phi i32 [ %v1_1000ba6c, %dec_label_pc_1000ba60.dec_label_pc_1000ba60_crit_edge ], [ %v1_1000b9f0, %dec_label_pc_1000ba54 ]
  %v0_1000ba60 = phi i32 [ %v0_1000ba60.pre, %dec_label_pc_1000ba60.dec_label_pc_1000ba60_crit_edge ], [ %v1_1000b9ec, %dec_label_pc_1000ba54 ]
  %v1_1000ba60 = add i32 %v0_1000ba60, 4
  %v2_1000ba60 = inttoptr i32 %v1_1000ba60 to i8*
  %v3_1000ba60 = load i8, i8* %v2_1000ba60, align 1
  %v1_1000ba64 = add i32 %v0_1000ba60, 1
  store i32 %v1_1000ba64, i32* %r4.global-to-local, align 4
  %v3_1000ba68 = add i32 %v2_1000ba68, 4
  %v4_1000ba68 = inttoptr i32 %v3_1000ba68 to i8*
  store i8 %v3_1000ba60, i8* %v4_1000ba68, align 1
  %v0_1000ba6c = load i32, i32* @r11, align 4
  %v1_1000ba6c = add i32 %v0_1000ba6c, 1
  store i32 %v1_1000ba6c, i32* @r11, align 4
  %v0_1000ba70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba70 = add i32 %v0_1000ba70, -1
  store i32 %v1_1000ba70, i32* %ctr.global-to-local, align 4
  %v2_1000ba70 = icmp eq i32 %v1_1000ba70, 0
  br i1 %v2_1000ba70, label %dec_label_pc_1000ba74, label %dec_label_pc_1000ba60.dec_label_pc_1000ba60_crit_edge

dec_label_pc_1000ba60.dec_label_pc_1000ba60_crit_edge: ; preds = %dec_label_pc_1000ba60
  %v0_1000ba60.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ba60

dec_label_pc_1000ba74:                            ; preds = %dec_label_pc_1000ba60
  %v1_1000ba74 = call i32 @__asm_rlwinm.(i32 %v2_1000ba5c, i32 29, i32 3, i32 31)
  store i32 %v1_1000ba74, i32* %r9.global-to-local, align 4
  %v4_1000ba74 = icmp eq i32 %v1_1000ba74, 0
  br i1 %v4_1000ba74, label %dec_label_pc_1000ba18, label %dec_label_pc_1000ba74.dec_label_pc_1000ba00_crit_edge

dec_label_pc_1000ba74.dec_label_pc_1000ba00_crit_edge: ; preds = %dec_label_pc_1000ba74
  %v1_1000ba0c.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000ba00

dec_label_pc_1000ba80:                            ; preds = %dec_label_pc_1000ba44.dec_label_pc_1000ba44_crit_edge, %dec_label_pc_1000ba30
  %v0_1000ba80 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ba80

; uselistorder directives
  uselistorder i32 %v1_1000ba74, { 1, 2, 0 }
  uselistorder i32 %v1_1000ba70, { 1, 0 }
  uselistorder i32 %v1_1000ba6c, { 1, 0 }
  uselistorder i32 %v0_1000ba60, { 1, 0 }
  uselistorder i32 %v2_1000ba5c, { 2, 1, 0 }
  uselistorder i32 %v1_1000ba4c, { 1, 0 }
  uselistorder i32 %v3_1000ba48, { 1, 2, 0 }
  uselistorder i32 %v1_1000ba18, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000ba14, { 1, 0 }
  uselistorder i32 %v2_1000ba10, { 1, 2, 0 }
  uselistorder i32 %v1_1000b9f8, { 1, 0 }
  uselistorder i32 %v1_1000b9f0, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 30, 31, 26, 28, 27, 29, 3, 4, 34, 35, 32, 33, 36, 37, 24, 25, 0, 1, 5, 8, 9, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 18, 19, 22, 23, 2 }
  uselistorder label %dec_label_pc_1000ba44.dec_label_pc_1000ba44_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba30, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba18, { 1, 0, 2 }
}

define i32 @function_1000ba84(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000ba84:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268483232, i32* @lr, align 4
  %v0_1000ba9c = call i32 @function_1000b9e8()
  %v0_1000baa4 = load i32, i32* @r28, align 4
  %v1_1000baa4 = load i32, i32* @r29, align 4
  %v2_1000baa4 = add i32 %v1_1000baa4, %v0_1000baa4
  ret i32 %v2_1000baa4

; uselistorder directives
  uselistorder i32* @r28, { 11, 12, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 1, 64, 65, 66, 67, 68, 69, 286, 287, 288, 289, 290, 2, 39, 40, 41, 10, 42, 250, 251, 252, 253, 254, 255, 256, 257, 258, 272, 273, 274, 275, 13, 14, 15, 16, 17, 70, 71, 18, 19, 26, 27, 28, 20, 3, 21, 22, 23, 24, 25, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 72, 73, 74, 75, 76, 77, 78, 4, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 5, 216, 219, 220, 217, 218, 221, 222, 6, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 7, 233, 236, 237, 234, 235, 238, 239, 8, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 278, 276, 277, 279, 280, 9, 281, 282, 283, 284, 285 }
}

define i32 @function_1000bab8(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000bab8:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000bab8 = icmp eq i8* %arg1, null
  br i1 %v3_1000bab8, label %dec_label_pc_1000bb70, label %dec_label_pc_1000bac0

dec_label_pc_1000bac0:                            ; preds = %dec_label_pc_1000bab8
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000bad4.pre = load i32, i32* bitcast (i32** @global_var_1001c654.311 to i32*), align 4
  br label %dec_label_pc_1000bad0

dec_label_pc_1000bad0:                            ; preds = %dec_label_pc_1000bac0, %dec_label_pc_1000bb48
  %v0_1000bb48 = phi i32 [ 0, %dec_label_pc_1000bac0 ], [ %v2_1000bb50, %dec_label_pc_1000bb48 ]
  %v0_1000bb4c = phi i32 [ 1, %dec_label_pc_1000bac0 ], [ %v1_1000bb4c, %dec_label_pc_1000bb48 ]
  %v0_1000bad0 = phi i32 [ %tmp, %dec_label_pc_1000bac0 ], [ %v0_1000bad03, %dec_label_pc_1000bb48 ]
  %v1_1000bad0 = inttoptr i32 %v0_1000bad0 to i8*
  %v2_1000bad0 = load i8, i8* %v1_1000bad0, align 1
  %v3_1000bad0 = zext i8 %v2_1000bad0 to i32
  %v1_1000bad8 = mul nuw nsw i32 %v3_1000bad0, 2
  %v2_1000badc = add i32 %v1_1000bad8, %v3_1000bad4.pre
  %v3_1000badc = inttoptr i32 %v2_1000badc to i16*
  %v4_1000badc = load i16, i16* %v3_1000badc, align 2
  %v1_1000bae0 = and i16 %v4_1000badc, 8
  %v3_1000bae0 = icmp eq i16 %v1_1000bae0, 0
  br i1 %v3_1000bae0, label %dec_label_pc_1000bb70, label %dec_label_pc_1000bae8

dec_label_pc_1000bae8:                            ; preds = %dec_label_pc_1000bad0
  br label %dec_label_pc_1000bb00

dec_label_pc_1000baf0:                            ; preds = %dec_label_pc_1000bb00
  %v1_1000bb04 = mul i32 %v1_1000bb50, 10
  %v2_1000bb0c = add i32 %v3_1000bb00, %v1_1000bb04
  %v1_1000baf0 = add i32 %v2_1000bb0c, -48
  %v1_1000baf4 = add i32 %v0_1000bb38, 1
  %v2_1000baf8 = icmp sgt i32 %v1_1000baf0, 255
  br i1 %v2_1000baf8, label %dec_label_pc_1000bb70, label %dec_label_pc_1000bb00

dec_label_pc_1000bb00:                            ; preds = %dec_label_pc_1000baf0, %dec_label_pc_1000bae8
  %v1_1000bb50 = phi i32 [ %v1_1000baf0, %dec_label_pc_1000baf0 ], [ 0, %dec_label_pc_1000bae8 ]
  %v0_1000bb38 = phi i32 [ %v1_1000baf4, %dec_label_pc_1000baf0 ], [ %v0_1000bad0, %dec_label_pc_1000bae8 ]
  %v1_1000bb00 = inttoptr i32 %v0_1000bb38 to i8*
  %v2_1000bb00 = load i8, i8* %v1_1000bb00, align 1
  %v3_1000bb00 = zext i8 %v2_1000bb00 to i32
  %v1_1000bb08 = mul nuw nsw i32 %v3_1000bb00, 2
  %v2_1000bb10 = add i32 %v1_1000bb08, %v3_1000bad4.pre
  %v3_1000bb10 = inttoptr i32 %v2_1000bb10 to i16*
  %v4_1000bb10 = load i16, i16* %v3_1000bb10, align 2
  %v5_1000bb10 = zext i16 %v4_1000bb10 to i32
  %v1_1000bb14 = and i32 %v5_1000bb10, 8
  %v3_1000bb14 = icmp eq i32 %v1_1000bb14, 0
  br i1 %v3_1000bb14, label %dec_label_pc_1000bb1c, label %dec_label_pc_1000baf0

dec_label_pc_1000bb1c:                            ; preds = %dec_label_pc_1000bb00
  %v2_1000bb1c = icmp sgt i32 %v0_1000bb4c, 3
  br i1 %v2_1000bb1c, label %dec_label_pc_1000bb34, label %dec_label_pc_1000bb24

dec_label_pc_1000bb24:                            ; preds = %dec_label_pc_1000bb1c
  %v3_1000bb24 = icmp eq i8 %v2_1000bb00, 46
  br i1 %v3_1000bb24, label %dec_label_pc_1000bb2c, label %dec_label_pc_1000bb70

dec_label_pc_1000bb2c:                            ; preds = %dec_label_pc_1000bb24
  %v1_1000bb2c = add i32 %v0_1000bb38, 1
  br label %dec_label_pc_1000bb48

dec_label_pc_1000bb34:                            ; preds = %dec_label_pc_1000bb1c
  %v3_1000bb34 = icmp eq i8 %v2_1000bb00, 0
  %v1_1000bb38 = add i32 %v0_1000bb38, 1
  br i1 %v3_1000bb34, label %dec_label_pc_1000bb48, label %dec_label_pc_1000bb40

dec_label_pc_1000bb40:                            ; preds = %dec_label_pc_1000bb34
  %v1_1000bb40 = and i32 %v5_1000bb10, 32
  %v3_1000bb40 = icmp eq i32 %v1_1000bb40, 0
  br i1 %v3_1000bb40, label %dec_label_pc_1000bb70, label %dec_label_pc_1000bb48

dec_label_pc_1000bb48:                            ; preds = %dec_label_pc_1000bb40, %dec_label_pc_1000bb34, %dec_label_pc_1000bb2c
  %v0_1000bad03 = phi i32 [ %v1_1000bb38, %dec_label_pc_1000bb40 ], [ %v1_1000bb38, %dec_label_pc_1000bb34 ], [ %v1_1000bb2c, %dec_label_pc_1000bb2c ]
  %v1_1000bb48 = mul i32 %v0_1000bb48, 256
  %v1_1000bb4c = add nuw nsw i32 %v0_1000bb4c, 1
  %v2_1000bb50 = or i32 %v1_1000bb50, %v1_1000bb48
  store i32 %v2_1000bb50, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000bb4c, 5
  br i1 %tmp10, label %dec_label_pc_1000bad0, label %dec_label_pc_1000bb5c

dec_label_pc_1000bb5c:                            ; preds = %dec_label_pc_1000bb48
  %v0_1000bb5c = load i32, i32* @r4, align 4
  %v3_1000bb5c = icmp eq i32 %v0_1000bb5c, 0
  %v0_1000bb64 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000bb5c, i32 %v0_1000bb64)
  %v0_1000bb68 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bb68 = load i32, i32* @r4, align 4
  %v2_1000bb68 = inttoptr i32 %v1_1000bb68 to i32*
  store i32 %v0_1000bb68, i32* %v2_1000bb68, align 4
  ret i32 1

dec_label_pc_1000bb70:                            ; preds = %dec_label_pc_1000bb24, %dec_label_pc_1000bb40, %dec_label_pc_1000bad0, %dec_label_pc_1000baf0, %dec_label_pc_1000bab8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000bb50, { 1, 0 }
  uselistorder i32 %v1_1000bb4c, { 1, 0 }
  uselistorder i32 %v0_1000bb38, { 0, 1, 3, 2 }
  uselistorder i32 5, { 19, 20, 21, 36, 22, 23, 37, 38, 24, 25, 39, 1, 0, 40, 41, 26, 42, 2, 3, 43, 27, 28, 29, 44, 4, 6, 45, 30, 46, 5, 31, 47, 7, 32, 48, 8, 33, 49, 9, 11, 50, 10, 51, 34, 52, 13, 53, 12, 35, 54, 15, 55, 14, 18, 56, 17, 57, 16, 58, 59, 60, 61, 62 }
  uselistorder i8 0, { 3, 7, 0, 8, 9, 5, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 6, 21, 22, 23, 24, 25, 26, 27, 2, 28, 29, 30, 31, 4, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i8 46, { 1, 2, 0 }
  uselistorder i32 8, { 126, 3, 140, 141, 63, 43, 44, 64, 65, 66, 67, 68, 69, 144, 145, 13, 142, 143, 14, 130, 129, 127, 128, 111, 112, 113, 131, 132, 133, 134, 135, 136, 4, 45, 46, 47, 5, 146, 6, 70, 71, 72, 73, 74, 75, 33, 34, 48, 35, 36, 49, 37, 38, 50, 51, 7, 8, 9, 52, 53, 17, 39, 54, 55, 56, 11, 12, 18, 58, 19, 59, 20, 60, 62, 61, 57, 96, 76, 77, 78, 79, 80, 81, 82, 40, 83, 84, 85, 86, 87, 88, 89, 90, 41, 91, 92, 93, 94, 95, 97, 21, 98, 99, 100, 101, 102, 15, 103, 104, 105, 106, 16, 107, 108, 109, 110, 22, 114, 23, 115, 24, 116, 25, 117, 26, 118, 27, 119, 28, 120, 121, 29, 122, 30, 123, 31, 124, 32, 125, 0, 1, 10, 137, 138, 42, 139, 2 }
  uselistorder i32 255, { 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 81, 43, 17, 42, 2, 3, 9, 8, 0, 18, 19, 25, 26, 20, 27, 28, 29, 5, 6, 7, 30, 31, 21, 32, 33, 10, 34, 11, 35, 12, 36, 13, 37, 14, 38, 39, 40, 4, 41, 22, 1, 23, 15, 44, 45, 46, 47, 48, 16, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 24, 80 }
  uselistorder i16 0, { 0, 1, 2, 5, 6, 3, 7, 9, 8, 4, 10, 11, 12, 13 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb70, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000bad0, { 1, 0 }
}

define i32 @function_1000bb78(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bb78:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000bb7c = load i32, i32* @lr, align 4
  store i32 %v0_1000bb7c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000bb88 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000bb98 = add i32 %tmp, 4
  store i32 %v1_1000bb98, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000bba0 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000bba0, i32* @r3, align 4
  br i1 %v3_1000bb88, label %dec_label_pc_1000bbc8, label %dec_label_pc_1000bba8

dec_label_pc_1000bba8:                            ; preds = %dec_label_pc_1000bb78
  %v2_1000bba8 = load i32, i32* %arg2, align 4
  store i32 %v2_1000bba8, i32* %r0.global-to-local, align 4
  store i32 268483508, i32* @lr, align 4
  %v0_1000bbb0 = call i32 @function_1000b9e8()
  %v0_1000bbb4 = load i32, i32* @r31, align 4
  %v1_1000bbb4 = add i32 %v0_1000bbb4, 132
  %v2_1000bbb4 = inttoptr i32 %v1_1000bbb4 to i32*
  %v3_1000bbb4 = load i32, i32* %v2_1000bbb4, align 4
  store i32 %v3_1000bbb4, i32* %r0.global-to-local, align 4
  %v1_1000bbc0 = add i32 %v0_1000bbb4, 136
  %v2_1000bbc0 = inttoptr i32 %v1_1000bbc0 to i32*
  %v3_1000bbc0 = load i32, i32* %v2_1000bbc0, align 4
  store i32 %v3_1000bbc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bbc8

dec_label_pc_1000bbc8:                            ; preds = %dec_label_pc_1000bb78, %dec_label_pc_1000bba8
  store i32 268483560, i32* @lr, align 4
  %v0_1000bbe4 = call i32 @function_1000bddc()
  %v0_1000bbe8 = load i32, i32* @r30, align 4
  %v3_1000bbe8 = icmp eq i32 %v0_1000bbe8, 0
  store i32 %v0_1000bbe4, i32* @r31, align 4
  br i1 %v3_1000bbe8, label %dec_label_pc_1000bc24, label %dec_label_pc_1000bbf8

dec_label_pc_1000bbf8:                            ; preds = %dec_label_pc_1000bbc8
  %v1_1000bbf0 = icmp slt i32 %v0_1000bbe4, 0
  %v1_1000bbf8 = add i32 %v0_1000bbe8, 4
  store i32 %v1_1000bbf8, i32* @r3, align 4
  %v2_1000bbfc = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000bbfc, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000bbf0, label %dec_label_pc_1000bc24, label %dec_label_pc_1000bc08

dec_label_pc_1000bc08:                            ; preds = %dec_label_pc_1000bbf8
  %v3_1000bc08 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000bc08, i32* %r0.global-to-local, align 4
  %v2_1000bc0c = inttoptr i32 %v0_1000bbe8 to i32*
  store i32 %v3_1000bc08, i32* %v2_1000bc0c, align 4
  store i32 268483604, i32* @lr, align 4
  %v0_1000bc10 = call i32 @function_1000b9e8()
  %v1_1000bc1c = load i32, i32* @r30, align 4
  %v2_1000bc1c = add i32 %v1_1000bc1c, 136
  %v3_1000bc1c = inttoptr i32 %v2_1000bc1c to i32*
  %v0_1000bc20 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bc20 = load i32, i32* @r30, align 4
  %v2_1000bc20 = add i32 %v1_1000bc20, 132
  %v3_1000bc20 = inttoptr i32 %v2_1000bc20 to i32*
  store i32 %v0_1000bc20, i32* %v3_1000bc20, align 4
  %v0_1000bc28.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bc24

dec_label_pc_1000bc24:                            ; preds = %dec_label_pc_1000bbf8, %dec_label_pc_1000bbc8, %dec_label_pc_1000bc08
  %v0_1000bc28 = phi i32 [ %v0_1000bbe4, %dec_label_pc_1000bbf8 ], [ %v0_1000bbe4, %dec_label_pc_1000bbc8 ], [ %v0_1000bc28.pre, %dec_label_pc_1000bc08 ]
  store i32 %v0_1000bb7c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000bc28

; uselistorder directives
  uselistorder i32 %v0_1000bbe4, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 136, { 7, 8, 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 ()* @function_1000b9e8, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 21, 22, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 17, 18, 5, 19, 6, 20 }
  uselistorder i32* @r30, { 137, 138, 139, 140, 0, 119, 1, 23, 24, 25, 141, 144, 142, 143, 120, 121, 122, 114, 115, 116, 117, 118, 123, 124, 128, 125, 126, 127, 6, 7, 8, 9, 10, 11, 12, 2, 13, 26, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 4, 34, 35, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 130, 131, 129, 132, 133, 134, 135, 136 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* @r31, { 1, 294, 295, 296, 271, 2, 272, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 303, 304, 297, 8, 298, 299, 300, 301, 302, 67, 68, 273, 274, 275, 276, 277, 278, 263, 264, 265, 266, 267, 268, 269, 270, 279, 280, 281, 285, 282, 283, 284, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 99, 3, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 24, 25, 26, 27, 114, 115, 116, 117, 118, 28, 9, 4, 10, 11, 12, 13, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 49, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 5, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 119, 120, 121, 122, 123, 124, 125, 126, 127, 0, 6, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 7, 286, 287, 288, 289, 290, 291, 292, 293 }
  uselistorder label %dec_label_pc_1000bc24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bbc8, { 1, 0 }
}

define i32 @function_1000bc3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bc70.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000bc54 = call i32 @function_1000af94()
  %v2_1000bc5c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000bc5c, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000bc7433 = add i32 %v2_1000bc5c, 124
  %v4_1000bc7434 = inttoptr i32 %v3_1000bc7433 to i32*
  store i32 0, i32* %v4_1000bc7434, align 4
  %v0_1000bc7835 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc7836 = add i32 %v0_1000bc7835, -1
  store i32 %v1_1000bc7836, i32* %r9.global-to-local, align 4
  %v0_1000bc7c37 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bc7c38 = add i32 %v0_1000bc7c37, -1
  store i32 %v1_1000bc7c38, i32* %ctr.global-to-local, align 4
  %v2_1000bc7c39 = icmp eq i32 %v1_1000bc7c38, 0
  br i1 %v2_1000bc7c39, label %dec_label_pc_1000bc80, label %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge

dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge: ; preds = %dec_label_pc_1000bc70.lr.ph, %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge
  %v1_1000bc7840 = phi i32 [ %v1_1000bc78, %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge ], [ %v1_1000bc7836, %dec_label_pc_1000bc70.lr.ph ]
  %v0_1000bc74.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bc74.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000bc70 = mul i32 %v1_1000bc7840, 4
  %v3_1000bc74 = add i32 %v1_1000bc70, %v1_1000bc74.pre
  %v4_1000bc74 = inttoptr i32 %v3_1000bc74 to i32*
  store i32 %v0_1000bc74.pre, i32* %v4_1000bc74, align 4
  %v0_1000bc78 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc78 = add i32 %v0_1000bc78, -1
  store i32 %v1_1000bc78, i32* %r9.global-to-local, align 4
  %v0_1000bc7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bc7c = add i32 %v0_1000bc7c, -1
  store i32 %v1_1000bc7c, i32* %ctr.global-to-local, align 4
  %v2_1000bc7c = icmp eq i32 %v1_1000bc7c, 0
  br i1 %v2_1000bc7c, label %dec_label_pc_1000bc80, label %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge

dec_label_pc_1000bc80:                            ; preds = %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge, %dec_label_pc_1000bc70.lr.ph
  store i32 %v2_1000bc5c, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000bc88 = call i32 @function_1000a3e8()
  %v3_1000bc8c = icmp eq i32 %v0_1000bc88, 0
  br i1 %v3_1000bc8c, label %dec_label_pc_1000bc94, label %dec_label_pc_1000bca4

dec_label_pc_1000bc94:                            ; preds = %dec_label_pc_1000bc80
  store i32 268483748, i32* @lr, align 4
  %v3_1000bca0 = call i32 @function_10009870(i32 1, i32 %v2_1000bc5c, i32 0)
  br label %dec_label_pc_1000bca4

dec_label_pc_1000bca4:                            ; preds = %dec_label_pc_1000bc80, %dec_label_pc_1000bc94
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000bca8 = load i32, i32* @global_var_1001c6bc.332, align 4
  %v3_1000bcac = icmp eq i32 %v3_1000bca8, 0
  br i1 %v3_1000bcac, label %dec_label_pc_1000bcb4, label %dec_label_pc_1000bcdc

dec_label_pc_1000bcb4:                            ; preds = %dec_label_pc_1000bca4
  store i32 1, i32* @global_var_1001c6bc.332, align 4
  br label %dec_label_pc_1000bcbc

dec_label_pc_1000bcbc:                            ; preds = %dec_label_pc_1000bd38, %dec_label_pc_1000bcb4
  store i32 ptrtoint (i32* @global_var_1001c620.330 to i32), i32* %r29.global-to-local, align 4
  %v0_1000bcc8 = call i32 @function_1000af94()
  store i32 268483796, i32* @lr, align 4
  %v1_1000bcd0 = call i32 @function_1000be24(i32 6)
  %v0_1000bcd8 = call i32 @function_1000af94()
  %v3_1000bce0.pre = load i32, i32* @global_var_1001c6bc.332, align 4
  br label %dec_label_pc_1000bcdc

dec_label_pc_1000bcdc:                            ; preds = %dec_label_pc_1000bca4, %dec_label_pc_1000bcbc
  %v0_1000bd54 = phi i32 [ %v3_1000bca8, %dec_label_pc_1000bca4 ], [ %v3_1000bce0.pre, %dec_label_pc_1000bcbc ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000bce4 = icmp eq i32 %v0_1000bd54, 1
  br i1 %v3_1000bce4, label %dec_label_pc_1000bd24.lr.ph, label %dec_label_pc_1000bd54

dec_label_pc_1000bd24.lr.ph:                      ; preds = %dec_label_pc_1000bcdc
  %v2_1000bcf0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001c6bc.332, align 4
  store i32 ptrtoint (i32* @global_var_1000bd04.334 to i32), i32* @lr, align 4
  %v3_1000bd00 = call i32 @function_10009d1c(i32 %v2_1000bcf0, i32 0, i32 140)
  store i32 %v2_1000bc5c, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000bc7433, i32* %r9.global-to-local, align 4
  %v2_1000bd2c25 = add i32 %v2_1000bc5c, 256
  %v3_1000bd2c26 = inttoptr i32 %v2_1000bd2c25 to i32*
  store i32 -1, i32* %v3_1000bd2c26, align 4
  %v0_1000bd3027 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bd3028 = add i32 %v0_1000bd3027, -1
  store i32 %v1_1000bd3028, i32* %r11.global-to-local, align 4
  %v0_1000bd3429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bd3430 = add i32 %v0_1000bd3429, -1
  store i32 %v1_1000bd3430, i32* %ctr.global-to-local, align 4
  %v2_1000bd3431 = icmp eq i32 %v1_1000bd3430, 0
  br i1 %v2_1000bd3431, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bd24.dec_label_pc_1000bd24_crit_edge

dec_label_pc_1000bd24.dec_label_pc_1000bd24_crit_edge: ; preds = %dec_label_pc_1000bd24.lr.ph, %dec_label_pc_1000bd24.dec_label_pc_1000bd24_crit_edge
  %v1_1000bd3032 = phi i32 [ %v1_1000bd30, %dec_label_pc_1000bd24.dec_label_pc_1000bd24_crit_edge ], [ %v1_1000bd3028, %dec_label_pc_1000bd24.lr.ph ]
  %v1_1000bd28.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000bd2c.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bd24 = mul i32 %v1_1000bd3032, 4
  %v2_1000bd28 = add i32 %v1_1000bd24, %v1_1000bd28.pre
  store i32 %v2_1000bd28, i32* %r9.global-to-local, align 4
  %v2_1000bd2c = add i32 %v2_1000bd28, 132
  %v3_1000bd2c = inttoptr i32 %v2_1000bd2c to i32*
  store i32 %v0_1000bd2c.pre, i32* %v3_1000bd2c, align 4
  %v0_1000bd30 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bd30 = add i32 %v0_1000bd30, -1
  store i32 %v1_1000bd30, i32* %r11.global-to-local, align 4
  %v0_1000bd34 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bd34 = add i32 %v0_1000bd34, -1
  store i32 %v1_1000bd34, i32* %ctr.global-to-local, align 4
  %v2_1000bd34 = icmp eq i32 %v1_1000bd34, 0
  br i1 %v2_1000bd34, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bd24.dec_label_pc_1000bd24_crit_edge

dec_label_pc_1000bd38:                            ; preds = %dec_label_pc_1000bd24.dec_label_pc_1000bd24_crit_edge, %dec_label_pc_1000bd24.lr.ph
  store i32 268483920, i32* @lr, align 4
  %v4_1000bd4c = call i32 @function_1000bb78(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000bcbc

dec_label_pc_1000bd54:                            ; preds = %dec_label_pc_1000bcdc
  %v3_1000bd54 = icmp eq i32 %v0_1000bd54, 2
  br i1 %v3_1000bd54, label %dec_label_pc_1000bd5c, label %dec_label_pc_1000bd68

dec_label_pc_1000bd5c:                            ; preds = %dec_label_pc_1000bd54
  store i32 3, i32* @global_var_1001c6bc.332, align 4
  br label %dec_label_pc_1000bd68

dec_label_pc_1000bd68:                            ; preds = %dec_label_pc_1000bd54, %dec_label_pc_1000bd5c
  %v3_1000bd68 = phi i32 [ %v0_1000bd54, %dec_label_pc_1000bd54 ], [ 3, %dec_label_pc_1000bd5c ]
  %v1_1000bd70 = icmp ne i32 %v3_1000bd68, 3
  call void @__pseudo_cond_branch(i1 %v1_1000bd70, i32 268483972)
  store i32 4, i32* @global_var_1001c6bc.332, align 4
  %v1_1000bd80 = call i32 @function_1000b334(i32 127)
  ret i32 %v1_1000bd80

; uselistorder directives
  uselistorder i32 %v1_1000bd34, { 1, 0 }
  uselistorder i32 %v1_1000bd30, { 1, 0 }
  uselistorder i32 %v1_1000bc7c, { 1, 0 }
  uselistorder i32 %v1_1000bc78, { 1, 0 }
  uselistorder i32 %v2_1000bc5c, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000b334, { 1, 0 }
  uselistorder i32 127, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 3, { 0, 5, 30, 103, 106, 107, 108, 109, 101, 104, 105, 53, 111, 110, 7, 112, 113, 114, 76, 77, 1, 6, 31, 32, 58, 36, 37, 34, 54, 38, 55, 56, 57, 35, 60, 59, 61, 2, 62, 64, 65, 39, 66, 67, 68, 8, 69, 9, 70, 33, 63, 100, 40, 71, 72, 74, 73, 75, 41, 42, 43, 3, 78, 79, 80, 81, 10, 44, 11, 82, 83, 13, 45, 12, 84, 85, 46, 86, 14, 15, 16, 87, 88, 47, 89, 17, 18, 19, 90, 21, 48, 4, 20, 91, 23, 92, 49, 22, 93, 94, 95, 24, 50, 25, 96, 97, 26, 51, 27, 98, 99, 28, 52, 29, 102 }
  uselistorder i32 (i32, i32*, i32)* @function_1000bb78, { 1, 2, 0 }
  uselistorder i32 132, { 8, 9, 10, 2, 4, 5, 3, 0, 1, 6, 7 }
  uselistorder i32 256, { 68, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 74, 75, 76, 12, 13, 78, 14, 15, 16, 71, 79, 17, 72, 80, 73, 81, 77, 18, 19, 20, 82, 21, 22, 23, 24, 25, 26, 27, 28, 69, 29, 30, 31, 32, 33, 34, 35, 36, 70, 37, 38, 39, 40, 41, 42, 43, 44, 45, 83, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 (i32, i32, i32)* @function_10009d1c, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 140, { 2, 5, 0, 1, 3, 4 }
  uselistorder i32 2, { 212, 38, 0, 1, 53, 54, 213, 55, 214, 56, 215, 27, 2, 3, 4, 39, 109, 125, 216, 110, 28, 57, 40, 58, 30, 29, 31, 59, 60, 111, 42, 41, 112, 113, 114, 115, 116, 117, 101, 102, 103, 104, 105, 106, 107, 108, 61, 118, 5, 6, 119, 120, 35, 121, 62, 122, 36, 63, 204, 67, 66, 65, 64, 43, 7, 8, 123, 124, 68, 44, 69, 70, 71, 72, 73, 74, 75, 76, 32, 37, 126, 189, 9, 33, 190, 10, 127, 128, 129, 130, 131, 132, 133, 11, 12, 13, 14, 15, 16, 77, 134, 45, 135, 136, 137, 138, 139, 17, 18, 19, 20, 21, 22, 78, 140, 46, 141, 142, 143, 144, 145, 79, 147, 80, 146, 23, 24, 81, 148, 47, 149, 150, 151, 152, 153, 82, 155, 83, 154, 25, 26, 84, 156, 48, 157, 158, 159, 160, 161, 162, 163, 85, 164, 165, 49, 166, 167, 168, 169, 170, 87, 171, 86, 172, 173, 174, 175, 177, 178, 179, 176, 88, 180, 50, 181, 182, 183, 89, 90, 185, 186, 187, 184, 91, 188, 51, 191, 192, 193, 194, 195, 196, 197, 92, 198, 52, 93, 94, 199, 200, 95, 96, 201, 202, 203, 97, 98, 205, 206, 99, 100, 207, 208, 209, 210, 34, 211 }
  uselistorder i32* @global_var_1001c6bc.332, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 43, 44, 0, 45, 2, 1, 3, 42, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 4, 36, 5, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32, i32)* @function_10009870, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_1000a3e8, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 71, 72, 73, 68, 69, 74, 30, 1, 31, 8, 32, 81, 80, 4, 5, 75, 77, 78, 67, 76, 9, 6, 70, 10, 11, 12, 7, 33, 34, 79, 13, 14, 15, 35, 19, 20, 21, 16, 17, 18, 3, 62, 63, 64, 65, 22, 23, 24, 25, 26, 27, 28, 29, 36, 0, 2, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32 6, { 11, 12, 63, 1, 13, 14, 26, 15, 16, 27, 17, 18, 28, 29, 30, 31, 32, 19, 33, 0, 34, 35, 36, 37, 20, 2, 38, 39, 21, 3, 40, 22, 41, 23, 42, 43, 44, 4, 45, 46, 47, 5, 48, 49, 50, 51, 52, 24, 6, 53, 54, 55, 56, 57, 25, 7, 58, 59, 60, 8, 9, 10, 61, 62 }
  uselistorder i32 4, { 125, 0, 1, 362, 363, 364, 365, 366, 66, 67, 367, 368, 126, 369, 370, 2, 194, 195, 147, 148, 196, 197, 199, 371, 378, 3, 4, 5, 6, 7, 341, 343, 342, 339, 340, 310, 311, 312, 313, 344, 345, 346, 347, 348, 349, 350, 351, 352, 8, 152, 9, 75, 153, 154, 372, 373, 374, 127, 375, 376, 377, 10, 198, 128, 11, 200, 201, 202, 203, 204, 129, 130, 155, 131, 156, 157, 158, 159, 160, 161, 149, 150, 162, 163, 151, 12, 164, 165, 77, 74, 166, 167, 168, 170, 171, 169, 172, 68, 173, 69, 132, 179, 76, 181, 182, 183, 184, 185, 180, 174, 175, 176, 177, 178, 303, 186, 133, 79, 78, 80, 187, 188, 189, 70, 190, 71, 191, 192, 193, 72, 205, 206, 13, 207, 208, 209, 81, 210, 211, 14, 15, 82, 212, 83, 85, 84, 213, 214, 16, 215, 216, 90, 217, 218, 17, 18, 89, 219, 86, 88, 87, 220, 221, 222, 223, 19, 224, 225, 226, 227, 134, 228, 20, 229, 230, 21, 231, 92, 232, 91, 135, 233, 234, 235, 236, 22, 237, 238, 239, 240, 136, 241, 23, 242, 243, 24, 244, 94, 245, 93, 137, 246, 247, 248, 25, 249, 250, 251, 252, 99, 253, 254, 26, 27, 98, 255, 256, 28, 95, 97, 96, 257, 258, 29, 259, 260, 104, 261, 30, 31, 262, 103, 263, 100, 264, 102, 101, 265, 266, 267, 268, 32, 270, 271, 138, 272, 273, 274, 109, 275, 33, 34, 139, 269, 108, 105, 107, 106, 276, 277, 278, 279, 280, 140, 141, 35, 282, 283, 142, 284, 285, 286, 114, 287, 36, 37, 143, 281, 113, 110, 112, 111, 288, 289, 290, 120, 38, 39, 291, 292, 40, 293, 294, 295, 119, 41, 42, 115, 296, 116, 118, 117, 297, 298, 299, 300, 301, 302, 144, 122, 121, 304, 305, 306, 307, 308, 309, 145, 124, 123, 43, 314, 315, 44, 45, 316, 317, 46, 47, 318, 319, 48, 49, 320, 321, 50, 51, 322, 323, 52, 53, 324, 325, 54, 326, 55, 327, 328, 56, 57, 329, 330, 58, 59, 331, 332, 60, 61, 333, 334, 62, 63, 335, 336, 64, 337, 338, 353, 354, 355, 356, 357, 358, 73, 359, 65, 360, 361, 146 }
  uselistorder i32 32, { 15, 16, 48, 37, 38, 24, 25, 11, 12, 35, 36, 26, 0, 1, 2, 13, 39, 14, 40, 27, 28, 17, 18, 19, 29, 30, 3, 4, 5, 6, 20, 31, 21, 32, 7, 8, 9, 10, 22, 23, 33, 34, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 31, { 1, 2, 33, 34, 22, 35, 36, 3, 4, 0, 5, 37, 38, 23, 24, 25, 26, 29, 30, 27, 28, 11, 12, 6, 13, 14, 7, 15, 16, 8, 9, 17, 18, 10, 19, 20, 21, 31, 32 }
  uselistorder i32 ()* @function_1000af94, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000bd68, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd24.dec_label_pc_1000bd24_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000bcdc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bca4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge, { 1, 0 }
}

define i32 @function_1000bd8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bd8c:
  %v1_1000bd8c = add i32 %arg1, 28
  %v2_1000bd8c = inttoptr i32 %v1_1000bd8c to i32*
  %v3_1000bd8c = load i32, i32* %v2_1000bd8c, align 4
  store i32 %v3_1000bd8c, i32* @global_var_1001c6c0.335, align 4
  %v1_1000bd9c = add i32 %arg1, 44
  %v2_1000bd9c = inttoptr i32 %v1_1000bd9c to i32*
  %v3_1000bd9c = load i32, i32* %v2_1000bd9c, align 4
  store i32 %v3_1000bd9c, i32* @global_var_1001c6c4.336, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 15, 8, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12 }
  uselistorder i32 28, { 43, 14, 15, 5, 6, 16, 13, 42, 7, 9, 10, 11, 12, 8, 3, 4, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 33, 34, 35, 1, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000bda8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bda8:
  store i32 %arg1, i32* @global_var_1001c6c8.329, align 4
  %v0_1000bdd0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000bdd0)
  %v1_1000bdd8 = call i32 @function_1000be54(i32 12)
  ret i32 %v1_1000bdd8

; uselistorder directives
  uselistorder i32 12, { 19, 48, 49, 25, 26, 50, 51, 52, 53, 107, 108, 109, 110, 6, 105, 111, 0, 1, 7, 106, 5, 20, 21, 10, 28, 54, 55, 22, 56, 57, 58, 23, 24, 29, 30, 31, 32, 33, 34, 35, 27, 9, 36, 37, 8, 38, 39, 41, 42, 11, 43, 12, 44, 13, 45, 47, 46, 40, 101, 59, 60, 61, 62, 63, 64, 14, 65, 66, 67, 68, 69, 70, 71, 15, 72, 73, 74, 75, 76, 77, 78, 79, 80, 16, 81, 82, 83, 84, 85, 86, 87, 88, 89, 17, 90, 18, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 19, 2, 3, 4, 5, 11, 6, 7, 8, 12, 13, 14, 15, 16, 17, 9, 10, 18, 0, 1 }
  uselistorder i32* @global_var_1001c6c8.329, { 1, 0, 2 }
}

define i32 @function_1000bddc() local_unnamed_addr {
dec_label_pc_1000bddc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bdf4 = call i32 @__asm_mfcr()
  %v1_1000bdf8 = and i32 %v0_1000bdf4, 268435456
  %v3_1000bdf8 = icmp eq i32 %v1_1000bdf8, 0
  store i32 %v0_1000bdf4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bdf8, label %dec_label_pc_1000be10, label %dec_label_pc_1000be04

dec_label_pc_1000be04:                            ; preds = %dec_label_pc_1000bddc
  %v0_1000be04 = call i32 @function_10009c34()
  %v0_1000be08 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000be08 = inttoptr i32 %v0_1000be04 to i32*
  store i32 %v0_1000be08, i32* %v2_1000be08, align 4
  br label %dec_label_pc_1000be10

dec_label_pc_1000be10:                            ; preds = %dec_label_pc_1000bddc, %dec_label_pc_1000be04
  %v0_1000be20 = phi i32 [ %v0_1000bdf4, %dec_label_pc_1000bddc ], [ -1, %dec_label_pc_1000be04 ]
  ret i32 %v0_1000be20

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 36, 51, 27, 28, 35, 37, 29, 52, 41, 39, 42, 40, 38, 53, 54, 30, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 47, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 46, 40, 32, 3, 45, 44, 36, 30, 43, 2, 14, 16, 13, 15, 21, 1, 0, 42, 41, 35, 34, 33, 31, 29, 28, 27, 26, 25, 24, 23, 22, 20, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000be10, { 1, 0 }
}

define i32 @function_1000be24(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000be24:
  %v0_1000be24 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268484156, i32* @lr, align 4
  %v0_1000be38 = call i32 @function_100095a8()
  %v0_1000be40 = load i32, i32* @r29, align 4
  store i32 %v0_1000be24, i32* @lr, align 4
  %v2_1000be50 = call i32 @function_10009638(i32 %v0_1000be38, i32 %v0_1000be40)
  ret i32 %v2_1000be50

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009638, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_100095a8, { 0, 1, 3, 2 }
}

define i32 @function_1000be54(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000be54:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000be68 = call i32 @function_10009c34()
  %v0_1000be6c = load i32, i32* @r29, align 4
  %v2_1000be6c = inttoptr i32 %v0_1000be68 to i32*
  store i32 %v0_1000be6c, i32* %v2_1000be6c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10009c34, { 24, 15, 50, 14, 34, 13, 12, 11, 10, 33, 32, 31, 9, 8, 3, 7, 6, 37, 36, 21, 22, 49, 48, 47, 46, 30, 29, 28, 45, 35, 26, 5, 4, 44, 43, 27, 25, 42, 2, 17, 19, 16, 18, 23, 1, 0, 41, 40, 39, 38, 20 }
  uselistorder i32* @r29, { 305, 306, 326, 327, 328, 11, 12, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 329, 330, 331, 332, 0, 73, 307, 308, 309, 310, 304, 311, 1, 312, 313, 314, 315, 316, 317, 13, 14, 15, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 61, 62, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 2, 130, 3, 131, 4, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 5, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 6, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 203, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 7, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 8, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 9, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 319, 318, 320, 321, 322, 10, 323, 324, 325 }
}

define i32 @function_1000be88(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000be88:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c4e4.317 to i32), i32* %r31.global-to-local, align 4
  %v3_1000bea4 = load i32, i32* @global_var_1001c4e4.317, align 4
  %v3_1000bea8 = icmp eq i32 %v3_1000bea4, -1
  br i1 %v3_1000bea8, label %dec_label_pc_1000bec4, label %dec_label_pc_1000beb0

dec_label_pc_1000beb0:                            ; preds = %dec_label_pc_1000be88, %dec_label_pc_1000beb0
  %v0_1000beb0 = phi i32 [ %v3_1000beb8, %dec_label_pc_1000beb0 ], [ %v3_1000bea4, %dec_label_pc_1000be88 ]
  call void @__pseudo_call(i32 %v0_1000beb0)
  %v0_1000beb8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000beb8 = add i32 %v0_1000beb8, -4
  %v2_1000beb8 = inttoptr i32 %v1_1000beb8 to i32*
  %v3_1000beb8 = load i32, i32* %v2_1000beb8, align 4
  store i32 %v1_1000beb8, i32* %r31.global-to-local, align 4
  %v3_1000bebc = icmp eq i32 %v3_1000beb8, -1
  br i1 %v3_1000bebc, label %dec_label_pc_1000bec4, label %dec_label_pc_1000beb0

dec_label_pc_1000bec4:                            ; preds = %dec_label_pc_1000beb0, %dec_label_pc_1000be88
  %v0_1000bed4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bed4

; uselistorder directives
  uselistorder i32 %v3_1000beb8, { 1, 0 }
  uselistorder i32 -4, { 0, 14, 15, 16, 8, 9, 10, 11, 12, 13, 17, 18, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 132, 133, 0, 36, 88, 251, 10, 11, 12, 252, 89, 253, 8, 9, 90, 91, 13, 92, 37, 38, 244, 75, 39, 187, 40, 41, 42, 43, 44, 188, 189, 190, 191, 192, 197, 45, 264, 262, 46, 254, 255, 76, 93, 256, 16, 17, 94, 261, 14, 15, 172, 3, 77, 245, 246, 32, 134, 260, 257, 47, 135, 95, 136, 18, 19, 137, 138, 139, 35, 48, 140, 141, 73, 96, 97, 98, 99, 193, 194, 20, 21, 22, 100, 195, 196, 101, 78, 74, 198, 199, 49, 50, 51, 52, 258, 259, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 263, 66, 142, 102, 23, 200, 201, 103, 1, 104, 105, 143, 67, 68, 106, 2, 107, 24, 108, 69, 109, 25, 202, 79, 144, 80, 145, 146, 147, 110, 111, 148, 149, 70, 150, 112, 26, 113, 27, 114, 153, 115, 71, 154, 155, 156, 116, 117, 151, 152, 81, 157, 83, 158, 159, 82, 160, 161, 162, 163, 164, 84, 165, 166, 72, 167, 168, 118, 28, 119, 29, 169, 170, 171, 120, 121, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 33, 34, 203, 204, 205, 206, 207, 122, 123, 208, 209, 210, 211, 212, 213, 214, 216, 215, 30, 217, 218, 220, 219, 31, 221, 222, 124, 223, 224, 125, 225, 226, 227, 228, 229, 4, 230, 5, 231, 232, 6, 233, 7, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 126, 127, 247, 128, 248, 129, 130, 249, 250, 131, 85, 86, 87 }
  uselistorder i32 1, { 367, 495, 961, 602, 603, 673, 672, 166, 162, 165, 164, 161, 163, 676, 675, 674, 13, 0, 947, 948, 949, 950, 528, 14, 962, 963, 964, 965, 499, 498, 497, 125, 126, 127, 128, 129, 384, 63, 677, 436, 437, 435, 174, 500, 496, 679, 678, 478, 477, 479, 476, 475, 480, 604, 57, 58, 60, 59, 680, 111, 426, 605, 681, 42, 40, 39, 41, 606, 550, 969, 966, 685, 684, 683, 682, 99, 97, 94, 98, 96, 95, 607, 968, 686, 821, 822, 823, 601, 824, 529, 43, 44, 45, 252, 250, 251, 23, 24, 26, 27, 25, 180, 511, 687, 490, 967, 494, 608, 609, 690, 689, 688, 172, 169, 170, 171, 168, 173, 343, 551, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 791, 704, 703, 471, 472, 706, 705, 29, 28, 30, 876, 502, 33, 32, 31, 970, 971, 178, 176, 179, 177, 131, 132, 130, 133, 134, 135, 707, 610, 708, 54, 53, 55, 611, 709, 61, 62, 552, 710, 56, 439, 383, 484, 137, 46, 441, 438, 167, 440, 711, 124, 92, 491, 492, 493, 485, 712, 470, 713, 136, 792, 714, 382, 832, 833, 503, 504, 513, 834, 835, 512, 836, 717, 716, 715, 20, 16, 17, 21, 15, 19, 22, 18, 1, 826, 825, 827, 828, 877, 878, 501, 879, 880, 719, 718, 837, 838, 839, 612, 840, 9, 10, 11, 12, 944, 945, 531, 530, 946, 469, 788, 790, 789, 613, 841, 505, 482, 481, 483, 951, 69, 68, 842, 843, 506, 507, 514, 844, 49, 50, 51, 52, 881, 182, 183, 184, 185, 186, 187, 188, 189, 902, 190, 193, 192, 191, 882, 194, 197, 196, 195, 37, 38, 793, 614, 787, 794, 615, 515, 553, 795, 796, 616, 797, 798, 802, 803, 799, 800, 801, 805, 617, 806, 537, 812, 813, 538, 729, 728, 727, 726, 725, 724, 723, 722, 721, 669, 720, 87, 84, 83, 82, 79, 76, 90, 86, 78, 75, 74, 71, 72, 70, 77, 73, 80, 81, 91, 85, 89, 88, 807, 808, 618, 809, 810, 619, 811, 109, 100, 103, 105, 107, 106, 108, 102, 101, 110, 104, 804, 620, 730, 473, 474, 938, 621, 516, 489, 487, 488, 486, 883, 731, 36, 34, 35, 555, 814, 554, 815, 622, 623, 624, 817, 818, 816, 532, 819, 625, 626, 627, 628, 629, 630, 820, 539, 742, 741, 740, 739, 670, 738, 737, 736, 735, 734, 733, 732, 434, 433, 430, 5, 6, 7, 8, 427, 429, 428, 431, 432, 631, 632, 556, 633, 536, 829, 634, 830, 831, 508, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 540, 755, 754, 753, 752, 751, 750, 749, 748, 747, 746, 745, 744, 743, 64, 65, 66, 67, 845, 648, 846, 847, 848, 849, 850, 3, 533, 851, 852, 2, 853, 854, 855, 856, 758, 757, 667, 668, 756, 288, 287, 921, 924, 922, 534, 923, 93, 925, 926, 927, 649, 650, 857, 858, 859, 860, 651, 517, 541, 861, 557, 558, 759, 312, 305, 315, 308, 314, 306, 307, 304, 291, 302, 303, 299, 300, 301, 297, 298, 294, 295, 293, 292, 296, 311, 313, 290, 289, 309, 310, 862, 863, 864, 652, 518, 542, 865, 559, 560, 561, 760, 207, 204, 208, 218, 198, 200, 210, 209, 221, 211, 205, 219, 220, 215, 216, 217, 213, 206, 214, 212, 222, 203, 202, 201, 199, 866, 867, 868, 869, 653, 509, 519, 543, 870, 562, 563, 564, 565, 566, 765, 764, 763, 762, 761, 352, 347, 356, 362, 345, 349, 359, 350, 360, 357, 361, 363, 364, 365, 353, 348, 346, 366, 358, 351, 355, 354, 344, 871, 872, 873, 874, 654, 510, 520, 544, 875, 567, 568, 569, 570, 571, 572, 573, 574, 575, 770, 769, 768, 767, 766, 146, 141, 150, 156, 139, 143, 153, 144, 154, 151, 155, 157, 158, 159, 147, 142, 140, 160, 152, 145, 149, 148, 138, 884, 885, 886, 887, 888, 889, 892, 890, 891, 893, 894, 895, 655, 896, 521, 545, 897, 898, 899, 535, 900, 901, 773, 772, 771, 268, 257, 266, 258, 273, 282, 272, 280, 275, 276, 277, 278, 267, 279, 281, 262, 263, 283, 284, 285, 270, 269, 286, 271, 274, 265, 264, 261, 260, 259, 903, 904, 905, 656, 522, 546, 906, 775, 774, 445, 443, 454, 462, 463, 456, 464, 458, 449, 467, 459, 455, 465, 466, 457, 460, 451, 461, 448, 447, 446, 442, 444, 468, 453, 452, 450, 907, 908, 909, 911, 912, 910, 523, 547, 913, 576, 577, 578, 776, 331, 318, 329, 338, 317, 316, 333, 341, 336, 334, 327, 319, 335, 339, 340, 323, 324, 332, 330, 337, 320, 342, 328, 326, 325, 321, 322, 914, 915, 916, 918, 919, 917, 524, 548, 920, 579, 580, 581, 781, 780, 779, 778, 777, 238, 225, 236, 245, 224, 223, 240, 241, 248, 243, 234, 226, 237, 242, 246, 247, 230, 231, 239, 244, 227, 249, 235, 233, 232, 228, 229, 928, 929, 657, 930, 931, 932, 658, 659, 549, 933, 582, 583, 782, 417, 410, 414, 402, 425, 409, 411, 408, 418, 419, 423, 424, 399, 401, 406, 407, 400, 403, 404, 405, 416, 415, 420, 422, 421, 412, 413, 934, 586, 935, 936, 584, 937, 660, 661, 585, 783, 379, 370, 368, 380, 378, 381, 372, 375, 376, 377, 371, 374, 373, 369, 939, 589, 940, 941, 587, 942, 662, 663, 588, 784, 396, 387, 385, 397, 395, 398, 389, 392, 393, 394, 388, 391, 390, 386, 4, 590, 591, 592, 593, 594, 595, 596, 597, 598, 943, 599, 600, 255, 254, 253, 256, 525, 175, 526, 47, 952, 664, 956, 665, 957, 953, 954, 955, 958, 959, 115, 119, 123, 112, 122, 113, 118, 117, 116, 114, 121, 120, 960, 666, 527, 48, 786, 785, 181, 671 }
  uselistorder label %dec_label_pc_1000beb0, { 1, 0 }
}

define i32 @function_1000bed8() local_unnamed_addr {
dec_label_pc_1000bed8:
  %v0_1000bef0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bef0

; uselistorder directives
  uselistorder i32* @r3, { 14, 15, 162, 163, 164, 16, 22, 165, 93, 0, 94, 30, 172, 24, 23, 3, 25, 166, 168, 29, 169, 170, 171, 153, 28, 154, 9, 21, 156, 158, 157, 167, 31, 32, 33, 95, 26, 18, 96, 97, 98, 99, 100, 101, 102, 103, 104, 17, 4, 19, 105, 1, 2, 5, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 6, 66, 67, 20, 147, 148, 149, 10, 150, 151, 7, 74, 75, 76, 77, 78, 79, 11, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 142, 143, 8, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 152, 155, 159, 160, 161, 13, 12, 27 }
}

define i32 @function_1000bef4() local_unnamed_addr {
entry:
  store i32 268484356, i32* @lr, align 4
  %v0_1000bf00 = call i32 @function_100000b8()
  ret i32 %v0_1000bf00

; uselistorder directives
  uselistorder i32 0, { 864, 215, 865, 48, 216, 155, 866, 217, 867, 868, 46, 47, 869, 870, 871, 0, 807, 808, 809, 86, 85, 810, 872, 873, 874, 49, 875, 876, 877, 878, 568, 218, 219, 407, 814, 815, 156, 816, 879, 20, 569, 570, 880, 881, 882, 883, 220, 571, 572, 573, 574, 575, 576, 577, 87, 585, 586, 884, 885, 221, 903, 904, 222, 909, 911, 146, 912, 223, 910, 1, 886, 887, 88, 888, 889, 224, 157, 225, 890, 891, 52, 53, 892, 893, 894, 226, 897, 898, 899, 50, 51, 900, 901, 902, 540, 541, 542, 543, 544, 89, 545, 546, 547, 214, 548, 90, 819, 821, 23, 822, 54, 823, 820, 817, 818, 2, 791, 787, 788, 789, 790, 147, 3, 826, 824, 825, 148, 827, 828, 792, 793, 794, 795, 796, 227, 797, 798, 829, 830, 228, 831, 158, 832, 841, 842, 91, 833, 834, 835, 836, 837, 838, 839, 840, 4, 5, 399, 408, 409, 410, 55, 56, 411, 6, 229, 811, 412, 413, 414, 415, 416, 417, 418, 419, 230, 420, 913, 914, 915, 916, 917, 918, 919, 920, 578, 579, 57, 580, 581, 582, 583, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 421, 549, 669, 895, 896, 422, 423, 599, 683, 424, 905, 92, 906, 862, 857, 863, 858, 750, 907, 908, 425, 426, 600, 601, 602, 58, 93, 603, 604, 74, 605, 607, 606, 153, 550, 551, 7, 78, 24, 79, 25, 684, 80, 685, 26, 27, 686, 81, 28, 94, 231, 232, 21, 22, 608, 800, 801, 802, 803, 98, 96, 95, 804, 97, 100, 99, 406, 101, 609, 59, 610, 611, 612, 843, 102, 844, 845, 613, 614, 60, 103, 615, 8, 104, 711, 105, 687, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 404, 233, 456, 457, 460, 29, 143, 144, 405, 458, 106, 459, 234, 461, 462, 463, 464, 107, 465, 466, 467, 468, 145, 469, 471, 108, 149, 150, 470, 472, 473, 162, 474, 475, 400, 109, 476, 477, 478, 479, 480, 481, 61, 62, 482, 483, 63, 64, 484, 485, 486, 488, 489, 490, 491, 492, 159, 160, 497, 498, 235, 499, 500, 501, 30, 31, 32, 33, 34, 35, 36, 37, 38, 502, 503, 236, 504, 237, 505, 493, 494, 495, 496, 510, 511, 512, 513, 161, 514, 515, 110, 516, 517, 518, 238, 519, 520, 521, 506, 111, 507, 508, 112, 509, 239, 240, 487, 688, 522, 154, 523, 524, 241, 525, 526, 527, 528, 529, 163, 530, 531, 65, 66, 532, 533, 534, 67, 68, 535, 536, 537, 9, 538, 242, 243, 244, 539, 245, 18, 17, 16, 15, 14, 13, 12, 552, 553, 554, 556, 114, 555, 113, 557, 558, 116, 559, 115, 560, 10, 246, 247, 19, 563, 561, 562, 151, 248, 249, 250, 251, 252, 564, 253, 565, 566, 164, 254, 567, 39, 616, 627, 617, 11, 618, 619, 620, 621, 152, 622, 623, 624, 625, 626, 40, 117, 73, 72, 118, 628, 69, 257, 629, 255, 256, 165, 630, 83, 751, 752, 82, 753, 119, 754, 84, 755, 120, 631, 121, 632, 258, 633, 634, 635, 259, 636, 637, 638, 639, 260, 640, 641, 642, 166, 167, 168, 169, 170, 171, 172, 173, 643, 644, 122, 645, 646, 261, 647, 648, 649, 650, 651, 652, 262, 653, 654, 655, 182, 174, 175, 176, 177, 178, 179, 180, 181, 123, 656, 657, 263, 658, 659, 660, 661, 264, 664, 665, 70, 663, 662, 265, 666, 667, 668, 183, 184, 185, 186, 187, 188, 189, 124, 670, 671, 266, 672, 673, 674, 675, 267, 678, 679, 71, 677, 676, 268, 680, 681, 682, 190, 191, 192, 689, 690, 269, 691, 692, 126, 125, 693, 270, 694, 695, 696, 697, 698, 699, 700, 127, 701, 702, 703, 193, 704, 705, 271, 706, 75, 76, 707, 128, 708, 709, 710, 272, 194, 195, 196, 197, 129, 712, 273, 713, 714, 715, 716, 274, 717, 718, 719, 199, 198, 720, 275, 721, 722, 130, 723, 276, 724, 725, 726, 727, 728, 729, 730, 731, 732, 277, 733, 734, 735, 200, 201, 202, 203, 736, 131, 737, 278, 738, 739, 740, 741, 742, 743, 744, 745, 746, 279, 747, 748, 749, 204, 205, 206, 207, 756, 757, 758, 759, 132, 760, 280, 761, 762, 763, 764, 765, 281, 766, 767, 768, 208, 209, 210, 211, 136, 135, 769, 770, 282, 41, 134, 133, 771, 772, 773, 283, 42, 774, 775, 776, 777, 137, 212, 141, 140, 778, 779, 43, 139, 138, 780, 781, 782, 44, 783, 784, 785, 786, 142, 213, 799, 805, 806, 812, 813, 846, 77, 847, 848, 284, 849, 850, 851, 852, 853, 854, 855, 856, 859, 45, 860, 861, 921, 922, 923, 401, 402, 403, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941 }
  uselistorder i32* @lr, { 8, 702, 703, 704, 673, 705, 706, 707, 708, 709, 710, 711, 712, 670, 13, 713, 322, 323, 9, 674, 675, 324, 325, 326, 327, 328, 329, 722, 723, 727, 728, 729, 730, 731, 732, 733, 735, 724, 726, 714, 715, 716, 717, 718, 719, 720, 721, 676, 678, 677, 639, 640, 641, 642, 643, 644, 679, 680, 681, 682, 686, 683, 684, 685, 14, 15, 619, 584, 585, 620, 466, 16, 238, 17, 18, 621, 622, 671, 19, 20, 21, 22, 23, 24, 25, 734, 26, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 725, 27, 28, 29, 30, 31, 32, 344, 668, 345, 687, 497, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 530, 498, 93, 94, 10, 95, 96, 12, 11, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 138, 139, 140, 141, 142, 143, 144, 145, 104, 105, 106, 107, 108, 109, 499, 500, 501, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 0, 255, 256, 257, 258, 259, 260, 277, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 4, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 5, 375, 376, 377, 378, 379, 380, 1, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 447, 440, 441, 442, 443, 444, 445, 446, 2, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 478, 471, 472, 473, 474, 475, 476, 477, 3, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 604, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 623, 625, 626, 627, 624, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 672, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr
